uint64_t sub_1A08C04D0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char v18;
  char v19;

  v14 = a5;
  v15 = a4;
  v7 = sub_1A07856F8(&qword_1E94FAE70);
  v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A086F45C(a1, a1[3]);
  sub_1A08C236C();
  sub_1A09F4CC8();
  v19 = 0;
  sub_1A09F4A28();
  if (!v5)
  {
    v11 = v14;
    v18 = 1;
    sub_1A09F4AB8();
    v16 = v11;
    v17 = 2;
    sub_1A07856F8(&qword_1E94FAE60);
    sub_1A0792558(&qword_1E94FAE78, &qword_1E94FAE60);
    sub_1A09F4A78();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_1A08C06B0()
{
  uint64_t v1 = 0x696C696261706163;
  if (*v0 != 1) {
    uint64_t v1 = 0x747865746E6F63;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x4449656C646E7562;
  }
}

uint64_t sub_1A08C0714@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A08C1F84(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A08C073C(uint64_t a1)
{
  unint64_t v2 = sub_1A08C236C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A08C0778(uint64_t a1)
{
  unint64_t v2 = sub_1A08C236C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A08C07B4()
{
  uint64_t v0 = qword_1E94FADA8;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_1A08C07EC(uint64_t a1, uint64_t a2)
{
  long long v10 = *v2;
  uint64_t v7 = *((void *)v2 + 2);
  uint64_t v6 = *((void *)v2 + 3);
  uint64_t v8 = swift_task_alloc();
  *(void *)(v3 + 16) = v8;
  *(void *)uint64_t v8 = v3;
  *(void *)(v8 + 8) = sub_1A077EE58;
  *(void *)(v8 + 168) = v7;
  *(void *)(v8 + 176) = v6;
  *(_OWORD *)(v8 + 152) = v10;
  *(void *)(v8 + 136) = a1;
  *(void *)(v8 + 144) = a2;
  return MEMORY[0x1F4188298](sub_1A08BF830, 0, 0);
}

uint64_t sub_1A08C08C4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1A08C20F4(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
    a2[3] = v7;
  }
  return result;
}

uint64_t sub_1A08C08F4(void *a1)
{
  return sub_1A08C04D0(a1, *v1, v1[1], v1[2], v1[3]);
}

uint64_t sub_1A08C0914(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A08C1658(a1, a2, a3, (uint64_t (*)(void))sub_1A08BD290, (uint64_t (*)(void))sub_1A08BD23C);
}

unint64_t sub_1A08C0940(uint64_t a1)
{
  unint64_t result = sub_1A08C0968();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1A08C0968()
{
  unint64_t result = qword_1E94FADB8;
  if (!qword_1E94FADB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FADB8);
  }
  return result;
}

uint64_t sub_1A08C09BC()
{
  return sub_1A0792558(&qword_1E94FADC0, &qword_1E94FADC8);
}

unint64_t sub_1A08C09FC()
{
  unint64_t result = qword_1E94FADD0;
  if (!qword_1E94FADD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FADD0);
  }
  return result;
}

unint64_t sub_1A08C0A50(uint64_t a1)
{
  unint64_t result = sub_1A08C0A78();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1A08C0A78()
{
  unint64_t result = qword_1E94FADE0;
  if (!qword_1E94FADE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FADE0);
  }
  return result;
}

uint64_t sub_1A08C0ACC(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_1A07856F8(&qword_1E94FAE20);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v17 = *(_OWORD *)(v3 + 176);
  uint64_t v30 = *(void *)(v3 + 192);
  sub_1A086F45C(a1, a1[3]);
  sub_1A08C16C4();
  sub_1A09F4CC8();
  LOBYTE(v19) = 0;
  sub_1A09F4A38();
  if (!v2)
  {
    uint64_t v9 = v30;
    long long v10 = *(_OWORD *)(v3 + 120);
    long long v11 = *(_OWORD *)(v3 + 152);
    long long v27 = *(_OWORD *)(v3 + 136);
    long long v28 = v11;
    __int16 v29 = *(_WORD *)(v3 + 168);
    long long v12 = *(_OWORD *)(v3 + 56);
    long long v13 = *(_OWORD *)(v3 + 88);
    long long v23 = *(_OWORD *)(v3 + 72);
    long long v24 = v13;
    long long v25 = *(_OWORD *)(v3 + 104);
    long long v26 = v10;
    long long v14 = *(_OWORD *)(v3 + 24);
    long long v19 = *(_OWORD *)(v3 + 8);
    long long v15 = *(_OWORD *)(v3 + 40);
    long long v22 = v12;
    long long v20 = v14;
    long long v21 = v15;
    char v18 = 1;
    sub_1A08C1A84();
    sub_1A09F4A78();
    long long v19 = v17;
    char v18 = 2;
    sub_1A08BC12C();
    sub_1A09F4A78();
    *(void *)&long long v19 = v9;
    char v18 = 3;
    sub_1A07856F8(&qword_1E94FAE10);
    sub_1A08C1AD8(&qword_1E94FAE30);
    sub_1A09F4A78();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1A08C0D80@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_1A07856F8(&qword_1E94FADF8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = a1[3];
  v70 = a1;
  sub_1A086F45C(a1, v9);
  sub_1A08C16C4();
  sub_1A09F4CA8();
  if (v2) {
    return _s17IMSharedUtilities29RemoteIntentBroadcastEncodingVwxx_0((uint64_t)v70);
  }
  uint64_t v10 = v6;
  uint64_t v27 = a2;
  v31[0] = 0;
  uint64_t v11 = v5;
  int v12 = sub_1A09F48E8();
  char v57 = 1;
  sub_1A08C17C4();
  sub_1A09F4928();
  long long v54 = v66;
  long long v55 = v67;
  long long v50 = v62;
  long long v51 = v63;
  long long v52 = v64;
  long long v53 = v65;
  long long v46 = v58;
  long long v47 = v59;
  long long v48 = v60;
  long long v49 = v61;
  *(_OWORD *)((char *)&v69[7] + 7) = v65;
  *(_OWORD *)((char *)&v69[8] + 7) = v66;
  *(_OWORD *)((char *)&v69[9] + 7) = v67;
  *(_OWORD *)((char *)&v69[3] + 7) = v61;
  *(_OWORD *)((char *)&v69[4] + 7) = v62;
  *(_OWORD *)((char *)&v69[5] + 7) = v63;
  *(_OWORD *)((char *)&v69[6] + 7) = v64;
  *(_OWORD *)((char *)v69 + 7) = v58;
  *(_OWORD *)((char *)&v69[1] + 7) = v59;
  __int16 v56 = v68;
  *(_WORD *)((char *)&v69[10] + 7) = v68;
  *(_OWORD *)((char *)&v69[2] + 7) = v60;
  LOBYTE(v28[0]) = 2;
  sub_1A08C1818((uint64_t)&v46);
  sub_1A08BC180();
  sub_1A09F4928();
  int v26 = v12;
  uint64_t v13 = *(void *)v31;
  uint64_t v14 = *(void *)&v31[8];
  sub_1A07856F8(&qword_1E94FAE10);
  char v44 = 3;
  sub_1A08C1AD8(&qword_1E94FAE18);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1A09F4928();
  char v15 = v26 & 1;
  (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v11);
  *(_OWORD *)((char *)&v28[6] + 8) = v52;
  *(_OWORD *)((char *)&v28[7] + 8) = v53;
  *(_OWORD *)((char *)&v28[8] + 8) = v54;
  *(_OWORD *)((char *)&v28[9] + 8) = v55;
  *(_OWORD *)((char *)&v28[3] + 8) = v49;
  *(_OWORD *)((char *)&v28[4] + 8) = v50;
  *(_OWORD *)((char *)&v28[5] + 8) = v51;
  *(_OWORD *)((char *)v28 + 8) = v46;
  *(_OWORD *)((char *)&v28[1] + 8) = v47;
  uint64_t v16 = v45;
  LOBYTE(v28[0]) = v15;
  WORD4(v28[10]) = v56;
  *(_OWORD *)((char *)&v28[2] + 8) = v48;
  *(void *)&long long v29 = v13;
  *((void *)&v29 + 1) = v14;
  uint64_t v30 = v45;
  sub_1A08C18C4((uint64_t)v28);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1A08C1718((uint64_t)&v46);
  long long v17 = v29;
  uint64_t v18 = v27;
  *(_OWORD *)(v27 + 160) = v28[10];
  *(_OWORD *)(v18 + 176) = v17;
  *(void *)(v18 + 192) = v30;
  long long v19 = v28[7];
  *(_OWORD *)(v18 + 96) = v28[6];
  *(_OWORD *)(v18 + 112) = v19;
  long long v20 = v28[9];
  *(_OWORD *)(v18 + 128) = v28[8];
  *(_OWORD *)(v18 + 144) = v20;
  long long v21 = v28[3];
  *(_OWORD *)(v18 + 32) = v28[2];
  *(_OWORD *)(v18 + 48) = v21;
  long long v22 = v28[5];
  *(_OWORD *)(v18 + 64) = v28[4];
  *(_OWORD *)(v18 + 80) = v22;
  long long v23 = v28[1];
  *(_OWORD *)uint64_t v18 = v28[0];
  *(_OWORD *)(v18 + 16) = v23;
  _s17IMSharedUtilities29RemoteIntentBroadcastEncodingVwxx_0((uint64_t)v70);
  long long v38 = v69[7];
  long long v39 = v69[8];
  *(_OWORD *)v40 = v69[9];
  *(_OWORD *)&v40[9] = *(_OWORD *)((char *)&v69[9] + 9);
  long long v34 = v69[3];
  long long v35 = v69[4];
  long long v36 = v69[5];
  long long v37 = v69[6];
  *(_OWORD *)&v31[1] = v69[0];
  long long v32 = v69[1];
  v31[0] = v15;
  long long v33 = v69[2];
  uint64_t v41 = v13;
  uint64_t v42 = v14;
  uint64_t v43 = v16;
  return sub_1A08C19A4((uint64_t)v31);
}

uint64_t sub_1A08C1330()
{
  uint64_t result = 0x73736563637573;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x666E497075746573;
      break;
    case 2:
      uint64_t result = 0x49746361746E6F63;
      break;
    case 3:
      uint64_t result = 0x616843646574756DLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A08C13D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A08C2DBC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A08C1400(uint64_t a1)
{
  unint64_t v2 = sub_1A08C16C4();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A08C143C(uint64_t a1)
{
  unint64_t v2 = sub_1A08C16C4();

  return MEMORY[0x1F41862B0](a1, v2);
}

unint64_t sub_1A08C1478@<X0>(uint64_t a1@<X8>)
{
  char v3 = *v1;
  unint64_t result = sub_1A094A918();
  *(unsigned char *)a1 = v3;
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1A08C1500@<X0>(uint64_t a1@<X8>)
{
  unint64_t result = sub_1A08D733C(MEMORY[0x1E4FBC860]);
  *(unsigned char *)a1 = 0;
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1A08C1534(uint64_t a1)
{
  unint64_t result = sub_1A08C155C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1A08C155C()
{
  unint64_t result = qword_1E94FADE8;
  if (!qword_1E94FADE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FADE8);
  }
  return result;
}

unint64_t sub_1A08C15B0(uint64_t a1)
{
  unint64_t result = sub_1A08C15D8();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1A08C15D8()
{
  unint64_t result = qword_1E94FADF0;
  if (!qword_1E94FADF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FADF0);
  }
  return result;
}

uint64_t sub_1A08C162C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A08C1658(a1, a2, a3, (uint64_t (*)(void))sub_1A08BCA08, (uint64_t (*)(void))sub_1A08BC9B4);
}

uint64_t sub_1A08C1658(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t (*a5)(void))
{
  *(void *)(a1 + 8) = a4();
  uint64_t result = a5();
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1A08C1694@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1A08C0D80(a1, a2);
}

uint64_t sub_1A08C16AC(void *a1)
{
  return sub_1A08C0ACC(a1);
}

unint64_t sub_1A08C16C4()
{
  unint64_t result = qword_1E94FAE00;
  if (!qword_1E94FAE00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FAE00);
  }
  return result;
}

uint64_t sub_1A08C1718(uint64_t a1)
{
  return a1;
}

unint64_t sub_1A08C17C4()
{
  unint64_t result = qword_1E94FAE08;
  if (!qword_1E94FAE08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FAE08);
  }
  return result;
}

uint64_t sub_1A08C1818(uint64_t a1)
{
  return a1;
}

uint64_t sub_1A08C18C4(uint64_t a1)
{
  return a1;
}

uint64_t sub_1A08C19A4(uint64_t a1)
{
  return a1;
}

unint64_t sub_1A08C1A84()
{
  unint64_t result = qword_1E94FAE28;
  if (!qword_1E94FAE28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FAE28);
  }
  return result;
}

uint64_t sub_1A08C1AD8(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1A078D800(&qword_1E94FAE10);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1A08C1B40(uint64_t isStackAllocationSafe)
{
  uint64_t v2 = isStackAllocationSafe;
  v9[1] = *MEMORY[0x1E4F143B8];
  char v3 = *(unsigned char *)(isStackAllocationSafe + 32);
  unint64_t v4 = (unint64_t)((1 << v3) + 63) >> 6;
  size_t v5 = 8 * v4;
  if ((v3 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1F4188790](isStackAllocationSafe);
    bzero((char *)v9 - ((v5 + 15) & 0x3FFFFFFFFFFFFFF0), v5);
    uint64_t v6 = sub_1A08C1C98((uint64_t)v9 - ((v5 + 15) & 0x3FFFFFFFFFFFFFF0), v4, v2);
    if (v1) {
      swift_willThrow();
    }
    else {
      return v6;
    }
  }
  else
  {
    uint64_t v7 = (void *)swift_slowAlloc();
    bzero(v7, v5);
    uint64_t v2 = sub_1A08C1C98((uint64_t)v7, v4, v2);
    MEMORY[0x1A6228C20](v7, -1, -1);
  }
  return v2;
}

uint64_t sub_1A08C1C98(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v18 = (unint64_t *)result;
  uint64_t v4 = 0;
  int64_t v5 = 0;
  uint64_t v6 = a3 + 64;
  uint64_t v7 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & *(void *)(a3 + 64);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
LABEL_4:
  uint64_t v19 = v4;
  while (v9)
  {
    unint64_t v11 = __clz(__rbit64(v9));
    v9 &= v9 - 1;
    unint64_t v12 = v11 | (v5 << 6);
LABEL_22:
    uint64_t v16 = (uint64_t *)(*(void *)(a3 + 56) + 16 * v12);
    uint64_t result = *v16;
    if (*v16 != 0xD000000000000016 || v16[1] != 0x80000001A0A324B0)
    {
      uint64_t result = sub_1A09F4B28();
      if ((result & 1) == 0)
      {
        *(unint64_t *)((char *)v18 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
        uint64_t v4 = v19 + 1;
        if (!__OFADD__(v19, 1)) {
          goto LABEL_4;
        }
        __break(1u);
        return sub_1A08E4D50(v18, a2, v19, a3);
      }
    }
  }
  int64_t v13 = v5 + 1;
  if (__OFADD__(v5, 1))
  {
    __break(1u);
    goto LABEL_30;
  }
  if (v13 >= v10) {
    return sub_1A08E4D50(v18, a2, v19, a3);
  }
  unint64_t v14 = *(void *)(v6 + 8 * v13);
  ++v5;
  if (v14) {
    goto LABEL_21;
  }
  int64_t v5 = v13 + 1;
  if (v13 + 1 >= v10) {
    return sub_1A08E4D50(v18, a2, v19, a3);
  }
  unint64_t v14 = *(void *)(v6 + 8 * v5);
  if (v14) {
    goto LABEL_21;
  }
  int64_t v5 = v13 + 2;
  if (v13 + 2 >= v10) {
    return sub_1A08E4D50(v18, a2, v19, a3);
  }
  unint64_t v14 = *(void *)(v6 + 8 * v5);
  if (v14)
  {
LABEL_21:
    unint64_t v9 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v5 << 6);
    goto LABEL_22;
  }
  int64_t v15 = v13 + 3;
  if (v15 >= v10) {
    return sub_1A08E4D50(v18, a2, v19, a3);
  }
  unint64_t v14 = *(void *)(v6 + 8 * v15);
  if (v14)
  {
    int64_t v5 = v15;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v5 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v5 >= v10) {
      return sub_1A08E4D50(v18, a2, v19, a3);
    }
    unint64_t v14 = *(void *)(v6 + 8 * v5);
    ++v15;
    if (v14) {
      goto LABEL_21;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

unint64_t sub_1A08C1E70(uint64_t a1)
{
  uint64_t v6 = sub_1A09F3E18();
  sub_1A09F4648();
  if (*(void *)(a1 + 16) && (unint64_t v2 = sub_1A087AB2C((uint64_t)v7), (v3 & 1) != 0))
  {
    sub_1A0785268(*(void *)(a1 + 56) + 32 * v2, (uint64_t)&v8);
  }
  else
  {
    long long v8 = 0u;
    long long v9 = 0u;
  }
  sub_1A087B20C((uint64_t)v7);
  if (!*((void *)&v9 + 1))
  {
    sub_1A0783C7C((uint64_t)&v8);
    return sub_1A08D75B8(MEMORY[0x1E4FBC860]);
  }
  sub_1A07856F8(&qword_1E94FAE48);
  if ((swift_dynamicCast() & 1) == 0) {
    return sub_1A08D75B8(MEMORY[0x1E4FBC860]);
  }
  uint64_t v4 = sub_1A08C1B40(v6);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_1A08C1F7C()
{
  return swift_release();
}

uint64_t sub_1A08C1F84(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x4449656C646E7562 && a2 == 0xE800000000000000;
  if (v2 || (sub_1A09F4B28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x696C696261706163 && a2 == 0xEC00000073656974 || (sub_1A09F4B28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x747865746E6F63 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_1A09F4B28();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_1A08C20F4(void *a1)
{
  uint64_t v3 = sub_1A07856F8(&qword_1E94FAE50);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  char v6 = &v9[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = a1[4];
  sub_1A086F45C(a1, a1[3]);
  sub_1A08C236C();
  sub_1A09F4CA8();
  if (v1)
  {
    _s17IMSharedUtilities29RemoteIntentBroadcastEncodingVwxx_0((uint64_t)a1);
  }
  else
  {
    v9[31] = 0;
    uint64_t v7 = sub_1A09F48D8();
    v9[30] = 1;
    swift_bridgeObjectRetain();
    sub_1A09F4968();
    sub_1A07856F8(&qword_1E94FAE60);
    v9[29] = 2;
    sub_1A0792558(&qword_1E94FAE68, &qword_1E94FAE60);
    sub_1A09F4928();
    (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
    swift_bridgeObjectRetain();
    _s17IMSharedUtilities29RemoteIntentBroadcastEncodingVwxx_0((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v7;
}

unint64_t sub_1A08C236C()
{
  unint64_t result = qword_1E94FAE58;
  if (!qword_1E94FAE58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FAE58);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for RemoteIntentRequestSetupInfo.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A08C248CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RemoteIntentRequestSetupInfo.CodingKeys()
{
  return &type metadata for RemoteIntentRequestSetupInfo.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for RemoteIntentRequestSetupInfoResponse.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A08C2590);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RemoteIntentRequestSetupInfoResponse.CodingKeys()
{
  return &type metadata for RemoteIntentRequestSetupInfoResponse.CodingKeys;
}

uint64_t destroy for RemoteIntentRequestSetupInfoResponse()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for RemoteIntentRequestSetupInfoResponse(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  uint64_t v5 = *(void *)(a2 + 48);
  uint64_t v6 = *(void *)(a2 + 56);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  uint64_t v7 = *(void *)(a2 + 64);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(void *)(a1 + 56) = v6;
  *(void *)(a1 + 64) = v7;
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  uint64_t v8 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v8;
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  uint64_t v9 = *(void *)(a2 + 144);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = v9;
  *(unsigned char *)(a1 + 152) = *(unsigned char *)(a2 + 152);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(_WORD *)(a1 + 168) = *(_WORD *)(a2 + 168);
  uint64_t v10 = *(void *)(a2 + 184);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(void *)(a1 + 184) = v10;
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for RemoteIntentRequestSetupInfoResponse(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 64);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(void *)(a1 + 64) = v4;
  LOBYTE(v4) = *(unsigned char *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(unsigned char *)(a1 + 88) = v4;
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 152) = *(unsigned char *)(a2 + 152);
  uint64_t v5 = *(void *)(a2 + 160);
  *(unsigned char *)(a1 + 168) = *(unsigned char *)(a2 + 168);
  *(void *)(a1 + 160) = v5;
  *(unsigned char *)(a1 + 169) = *(unsigned char *)(a2 + 169);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for RemoteIntentRequestSetupInfoResponse(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  long long v2 = *(_OWORD *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  long long v5 = *(_OWORD *)(a2 + 80);
  long long v6 = *(_OWORD *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v7;
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 96) = v6;
  __n128 result = *(__n128 *)(a2 + 144);
  long long v9 = *(_OWORD *)(a2 + 160);
  long long v10 = *(_OWORD *)(a2 + 176);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  *(_OWORD *)(a1 + 160) = v9;
  *(_OWORD *)(a1 + 176) = v10;
  *(__n128 *)(a1 + 144) = result;
  return result;
}

uint64_t assignWithTake for RemoteIntentRequestSetupInfoResponse(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  uint64_t v5 = *(void *)(a2 + 144);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = v5;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 152) = *(unsigned char *)(a2 + 152);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(_WORD *)(a1 + 168) = *(_WORD *)(a2 + 168);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for RemoteIntentRequestSetupInfoResponse(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 200)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 176);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for RemoteIntentRequestSetupInfoResponse(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 200) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 176) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 200) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RemoteIntentRequestSetupInfoResponse()
{
  return &type metadata for RemoteIntentRequestSetupInfoResponse;
}

unint64_t sub_1A08C2BB0()
{
  unint64_t result = qword_1E94FAE80;
  if (!qword_1E94FAE80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FAE80);
  }
  return result;
}

unint64_t sub_1A08C2C08()
{
  unint64_t result = qword_1E94FAE88;
  if (!qword_1E94FAE88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FAE88);
  }
  return result;
}

unint64_t sub_1A08C2C60()
{
  unint64_t result = qword_1E94FAE90;
  if (!qword_1E94FAE90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FAE90);
  }
  return result;
}

unint64_t sub_1A08C2CB8()
{
  unint64_t result = qword_1E94FAE98;
  if (!qword_1E94FAE98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FAE98);
  }
  return result;
}

unint64_t sub_1A08C2D10()
{
  unint64_t result = qword_1E94FAEA0;
  if (!qword_1E94FAEA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FAEA0);
  }
  return result;
}

unint64_t sub_1A08C2D68()
{
  unint64_t result = qword_1E94FAEA8;
  if (!qword_1E94FAEA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FAEA8);
  }
  return result;
}

uint64_t sub_1A08C2DBC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x73736563637573 && a2 == 0xE700000000000000;
  if (v2 || (sub_1A09F4B28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x666E497075746573 && a2 == 0xE90000000000006FLL || (sub_1A09F4B28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x49746361746E6F63 && a2 == 0xEB000000006F666ELL || (sub_1A09F4B28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x616843646574756DLL && a2 == 0xED00007473694C74)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_1A09F4B28();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

Swift::Void __swiftcall IntentClientBroadcaster.unreadCountChanged(_:)(Swift::Int a1)
{
}

Swift::Void __swiftcall IntentClientBroadcaster.lastFailedMessageDateChanged(_:)(Swift::Int64 a1)
{
}

uint64_t sub_1A08C3074(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4, uint64_t a5)
{
  uint64_t v9 = sub_1A07856F8(&qword_1EB4A5650);
  uint64_t v10 = MEMORY[0x1F4188790](v9 - 8);
  unint64_t v12 = (char *)v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[3] = a2;
  v17[4] = a3(v10);
  v17[0] = a1;
  uint64_t v13 = sub_1A09F41C8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v12, 1, 1, v13);
  sub_1A0883D94((uint64_t)v17, (uint64_t)v16);
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = 0;
  *(void *)(v14 + 24) = 0;
  sub_1A089266C(v16, v14 + 32);
  sub_1A08BE6E4((uint64_t)v12, a5, v14);
  swift_release();
  return _s17IMSharedUtilities29RemoteIntentBroadcastEncodingVwxx_0((uint64_t)v17);
}

void sub_1A08C31E0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t), uint64_t a6, uint64_t a7)
{
  uint64_t v12 = sub_1A07856F8(&qword_1EB4A5650);
  uint64_t v13 = MEMORY[0x1F4188790](v12 - 8);
  int64_t v15 = (char *)v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20[3] = a4;
  v20[4] = a5(v13);
  v20[0] = a3;
  uint64_t v16 = sub_1A09F41C8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v15, 1, 1, v16);
  sub_1A0883D94((uint64_t)v20, (uint64_t)v19);
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = 0;
  *(void *)(v17 + 24) = 0;
  sub_1A089266C(v19, v17 + 32);
  id v18 = a1;
  sub_1A08BE6E4((uint64_t)v15, a7, v17);
  swift_release();
  _s17IMSharedUtilities29RemoteIntentBroadcastEncodingVwxx_0((uint64_t)v20);
}

uint64_t sub_1A08C3334(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  char v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  *char v6 = v2;
  v6[1] = sub_1A077EE58;
  return sub_1A08C63A8(a1, v4, v5, v1 + 32);
}

uint64_t sub_1A08C33EC(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  char v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  *char v6 = v2;
  v6[1] = sub_1A077EE54;
  return sub_1A08C63A8(a1, v4, v5, v1 + 32);
}

void sub_1A08C34A0(uint64_t a1, unint64_t a2)
{
  if (qword_1E94F8518 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_1A09F39E8();
  sub_1A078510C(v4, (uint64_t)qword_1E95225C8);
  swift_bridgeObjectRetain_n();
  uint64_t v5 = sub_1A09F39C8();
  os_log_type_t v6 = sub_1A09F4368();
  if (os_log_type_enabled(v5, v6))
  {
    long long v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v9 = v8;
    *(_DWORD *)long long v7 = 136315138;
    swift_bridgeObjectRetain();
    sub_1A0785144(a1, a2, &v9);
    sub_1A09F4528();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1A0772000, v5, v6, "IntentClientBroadcaster stub called: %s.", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1A6228C20](v8, -1, -1);
    MEMORY[0x1A6228C20](v7, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
}

uint64_t sub_1A08C3648()
{
  uint64_t v0 = sub_1A09F39E8();
  sub_1A078D848(v0, qword_1E95225C8);
  sub_1A078510C(v0, (uint64_t)qword_1E95225C8);
  return sub_1A09F39D8();
}

Swift::Void __swiftcall IntentClientBroadcaster.pendingVCRequestComplete()()
{
}

Swift::Void __swiftcall IntentClientBroadcaster.pendingACRequestComplete()()
{
}

Swift::Void __swiftcall IntentClientBroadcaster.vcCapabilitiesChanged(_:)(Swift::UInt64 a1)
{
}

Swift::Void __swiftcall IntentClientBroadcaster.updateCloudKitState()()
{
}

Swift::Void __swiftcall IntentClientBroadcaster.didAttemptToSetEnabled(to:result:)(Swift::Bool to, Swift::Bool result)
{
}

void IntentClientBroadcaster.didPerformAdditionalStorageRequiredCheck(withSuccess:additionalStorageRequired:forAccountId:error:)()
{
}

Swift::Void __swiftcall IntentClientBroadcaster.didAttempt(toDisableAllDevicesResult:)(Swift::Bool toDisableAllDevicesResult)
{
}

void IntentClientBroadcaster.nicknameRequestResponse(_:encodedNicknameData:)()
{
}

void IntentClientBroadcaster.updateTransitionedNicknameHandles(_:)()
{
}

Swift::Void __swiftcall IntentClientBroadcaster.updateActiveNicknameRecords(_:)(Swift::OpaquePointer a1)
{
}

Swift::Void __swiftcall IntentClientBroadcaster.updateIgnoredNicknameRecords(_:)(Swift::OpaquePointer a1)
{
}

Swift::Void __swiftcall IntentClientBroadcaster.updateUnknownSenderRecords(_:)(Swift::OpaquePointer a1)
{
}

Swift::Void __swiftcall IntentClientBroadcaster.updatePersonalNickname(_:)(IMNickname *a1)
{
}

Swift::Void __swiftcall IntentClientBroadcaster.simSubscriptionsDidChange()()
{
}

Swift::Void __swiftcall IntentClientBroadcaster.newSetupInfoAvailable()()
{
}

Swift::Void __swiftcall IntentClientBroadcaster.networkDataAvailabilityChanged(_:)(Swift::Bool a1)
{
}

void IntentClientBroadcaster.property(_:changedTo:from:)()
{
}

void IntentClientBroadcaster.persistentProperty(_:changedTo:from:)()
{
}

uint64_t sub_1A08C3EE0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7)
{
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  id v10 = a1;
  sub_1A09F4588();
  swift_unknownObjectRelease();
  sub_1A09F4588();
  swift_unknownObjectRelease();
  sub_1A08C34A0(a6, a7);

  _s17IMSharedUtilities29RemoteIntentBroadcastEncodingVwxx_0((uint64_t)&v12);
  return _s17IMSharedUtilities29RemoteIntentBroadcastEncodingVwxx_0((uint64_t)v13);
}

Swift::Void __swiftcall IntentClientBroadcaster.stickerPackUpdated(_:)(Swift::OpaquePointer a1)
{
}

Swift::Void __swiftcall IntentClientBroadcaster.stickerPackRemoved(_:)(Swift::OpaquePointer a1)
{
}

Swift::Void __swiftcall IntentClientBroadcaster.oneTimeCodesDidChange(_:)(Swift::OpaquePointer a1)
{
}

Swift::Void __swiftcall IntentClientBroadcaster.didFetchSyncStateStats(_:)(Swift::OpaquePointer a1)
{
}

Swift::Void __swiftcall IntentClientBroadcaster.didFetchRampState(_:)(Swift::OpaquePointer a1)
{
}

void IntentClientBroadcaster.didAttempt(toDisableiCloudBackups:error:)()
{
}

Swift::Void __swiftcall IntentClientBroadcaster.didFetchCloudKitSyncDebuggingInfo(_:)(Swift::OpaquePointer a1)
{
}

Swift::Void __swiftcall IntentClientBroadcaster.account(_:conference:receivedInvitationFrom:properties:)(Swift::String _, Swift::String conference, Swift::OpaquePointer receivedInvitationFrom, Swift::OpaquePointer properties)
{
}

Swift::Void __swiftcall IntentClientBroadcaster.account(_:conference:receivedResponseToInvitationFrom:properties:)(Swift::String _, Swift::String conference, Swift::OpaquePointer receivedResponseToInvitationFrom, Swift::OpaquePointer properties)
{
}

Swift::Void __swiftcall IntentClientBroadcaster.account(_:conference:receivedCancelInvitationFrom:properties:)(Swift::String _, Swift::String conference, Swift::OpaquePointer receivedCancelInvitationFrom, Swift::OpaquePointer properties)
{
}

Swift::Void __swiftcall IntentClientBroadcaster.account(_:conference:receivedCounterProposalFrom:properties:)(Swift::String _, Swift::String conference, Swift::OpaquePointer receivedCounterProposalFrom, Swift::OpaquePointer properties)
{
}

void IntentClientBroadcaster.account(_:conference:receivedUpdateFrom:data:)()
{
}

Swift::Void __swiftcall IntentClientBroadcaster.account(_:conference:receivedAVMessage:from:sessionID:userInfo:)(Swift::String _, Swift::String conference, Swift::UInt32 receivedAVMessage, Swift::OpaquePointer from, Swift::UInt32 sessionID, Swift::OpaquePointer_optional userInfo)
{
}

Swift::Void __swiftcall IntentClientBroadcaster.account(_:conference:changedToNewConferenceID:)(Swift::String _, Swift::String conference, Swift::String changedToNewConferenceID)
{
}

Swift::Void __swiftcall IntentClientBroadcaster.account(_:conference:peerIDChangedFromID:toID:)(Swift::String _, Swift::String conference, Swift::String peerIDChangedFromID, Swift::String toID)
{
}

Swift::Void __swiftcall IntentClientBroadcaster.account(_:conference:peerID:propertiesUpdated:)(Swift::String _, Swift::String conference, Swift::String_optional peerID, Swift::OpaquePointer propertiesUpdated)
{
}

Swift::Void __swiftcall IntentClientBroadcaster.account(_:conference:invitationSentSuccessfully:)(Swift::String _, Swift::String conference, Swift::Bool invitationSentSuccessfully)
{
}

Swift::Void __swiftcall IntentClientBroadcaster.account(_:avAction:withArguments:toAVChat:isVideo:)(Swift::String _, Swift::UInt32 avAction, Swift::OpaquePointer withArguments, Swift::String toAVChat, Swift::Bool isVideo)
{
}

Swift::Void __swiftcall IntentClientBroadcaster.account(_:relay:handleInitate:fromPerson:)(Swift::String _, Swift::String relay, Swift::OpaquePointer handleInitate, Swift::OpaquePointer fromPerson)
{
}

Swift::Void __swiftcall IntentClientBroadcaster.account(_:relay:handleUpdate:fromPerson:)(Swift::String _, Swift::String relay, Swift::OpaquePointer handleUpdate, Swift::OpaquePointer fromPerson)
{
}

Swift::Void __swiftcall IntentClientBroadcaster.account(_:relay:handleCancel:fromPerson:)(Swift::String _, Swift::String relay, Swift::OpaquePointer handleCancel, Swift::OpaquePointer fromPerson)
{
}

Swift::Void __swiftcall IntentClientBroadcaster.messageQuery(_:finishedWithResult:chatGUIDs:)(Swift::String _, IMMessageItem_optional *finishedWithResult, Swift::OpaquePointer chatGUIDs)
{
}

Swift::Void __swiftcall IntentClientBroadcaster.messageItemQuery(_:finishedWithResult:chatGUIDs:)(Swift::String _, IMMessageItem_optional *finishedWithResult, Swift::OpaquePointer chatGUIDs)
{
}

Swift::Void __swiftcall IntentClientBroadcaster.itemQuery(_:finishedWithResult:chatGUIDs:)(Swift::String _, IMItem_optional *finishedWithResult, Swift::OpaquePointer chatGUIDs)
{
}

Swift::Void __swiftcall IntentClientBroadcaster.historyQuery(_:chatID:services:finishedWithResult:limit:)(Swift::String _, Swift::String chatID, Swift::OpaquePointer services, Swift::OpaquePointer_optional finishedWithResult, Swift::Int limit)
{
}

Swift::Void __swiftcall IntentClientBroadcaster.pagedHistoryQuery(_:chatID:services:numberOfMessagesBefore:numberOfMessagesAfter:finishedWithResult:hasMessagesBefore:hasMessagesAfter:)(Swift::String _, Swift::String chatID, Swift::OpaquePointer services, Swift::Int numberOfMessagesBefore, Swift::Int numberOfMessagesAfter, Swift::OpaquePointer_optional finishedWithResult, Swift::Bool hasMessagesBefore, Swift::Bool hasMessagesAfter)
{
}

Swift::Void __swiftcall IntentClientBroadcaster.attachmentQuery(_:chatID:services:finishedWithResult:)(Swift::String _, Swift::String chatID, Swift::OpaquePointer services, Swift::OpaquePointer_optional finishedWithResult)
{
}

Swift::Void __swiftcall IntentClientBroadcaster.uncachedAttachmentCountQuery(_:chatID:services:finishedWithResult:)(Swift::String _, Swift::String chatID, Swift::OpaquePointer services, NSNumber_optional finishedWithResult)
{
}

Swift::Void __swiftcall IntentClientBroadcaster.isDownloadingQuery(_:chatID:services:finishedWithResult:)(Swift::String _, Swift::String chatID, Swift::OpaquePointer services, Swift::Bool finishedWithResult)
{
}

Swift::Void __swiftcall IntentClientBroadcaster.mark(asSpamQuery:chatID:services:finishedWithResult:)(Swift::String asSpamQuery, Swift::String chatID, Swift::OpaquePointer services, NSNumber_optional finishedWithResult)
{
}

Swift::Void __swiftcall IntentClientBroadcaster.frequentRepliesQuery(_:chatID:services:finishedWithResult:limit:)(Swift::String _, Swift::String chatID, Swift::OpaquePointer services, Swift::OpaquePointer_optional finishedWithResult, Swift::Int limit)
{
}

uint64_t sub_1A08C4E80(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unint64_t a10)
{
  if (a6) {
    sub_1A09F4078();
  }
  id v11 = a1;
  sub_1A08C34A0(a9, a10);

  return swift_bridgeObjectRelease();
}

Swift::Void __swiftcall IntentClientBroadcaster._automation_mark(asReadQuery:finishedWithResult:)(Swift::String asReadQuery, Swift::Bool finishedWithResult)
{
}

Swift::Void __swiftcall IntentClientBroadcaster.updateCloudKitState(with:)(Swift::OpaquePointer with)
{
}

Swift::Void __swiftcall IntentClientBroadcaster.updateCloudKitProgress(with:)(Swift::OpaquePointer with)
{
}

Swift::Void __swiftcall IntentClientBroadcaster.receivedUrgentRequest(forMessages:)(Swift::OpaquePointer forMessages)
{
}

Swift::Void __swiftcall IntentClientBroadcaster.defaultsChanged(_:forService:)(Swift::OpaquePointer _, Swift::String forService)
{
}

Swift::Void __swiftcall IntentClientBroadcaster.showInvalidCertNotification(forAccount:)(Swift::String forAccount)
{
}

Swift::Void __swiftcall IntentClientBroadcaster.showForgotPasswordNotification(forAccount:)(Swift::String forAccount)
{
}

Swift::Void __swiftcall IntentClientBroadcaster.activeAccountsChanged(_:forService:)(Swift::OpaquePointer _, Swift::String forService)
{
}

void IntentClientBroadcaster.account(_:defaults:blockList:allowList:blockingMode:blockIdleStatus:status:capabilities:serviceLoginStatus:loginStatusMessage:)()
{
}

void IntentClientBroadcaster.account(_:loginStatusChanged:message:reason:properties:)()
{
}

Swift::Void __swiftcall IntentClientBroadcaster.account(_:defaultsChanged:)(Swift::String _, Swift::OpaquePointer defaultsChanged)
{
}

Swift::Void __swiftcall IntentClientBroadcaster.account(_:capabilitiesChanged:)(Swift::String _, Swift::UInt64 capabilitiesChanged)
{
}

Swift::Void __swiftcall IntentClientBroadcaster.accountAdded(_:defaults:service:)(Swift::String _, Swift::OpaquePointer defaults, Swift::String service)
{
}

Swift::Void __swiftcall IntentClientBroadcaster.accountRemoved(_:)(Swift::String a1)
{
}

Swift::Void __swiftcall IntentClientBroadcaster.account(_:blockListChanged:)(Swift::String _, Swift::OpaquePointer blockListChanged)
{
}

Swift::Void __swiftcall IntentClientBroadcaster.account(_:allowListChanged:)(Swift::String _, Swift::OpaquePointer allowListChanged)
{
}

void IntentClientBroadcaster.account(_:blockingModeChanged:)()
{
}

Swift::Void __swiftcall IntentClientBroadcaster.account(_:blockIdleStatusChanged:)(Swift::String _, Swift::Bool blockIdleStatusChanged)
{
}

Swift::Void __swiftcall IntentClientBroadcaster.account(_:buddyPropertiesChanged:)(Swift::String _, Swift::OpaquePointer buddyPropertiesChanged)
{
}

void IntentClientBroadcaster.account(_:buddyPictureChanged:imageData:imageHash:)()
{
}

Swift::Void __swiftcall IntentClientBroadcaster.account(_:buddyProperties:buddyPictures:)(Swift::String _, Swift::OpaquePointer buddyProperties, Swift::OpaquePointer buddyPictures)
{
}

void IntentClientBroadcaster.account(_:groupsChanged:error:)()
{
}

Swift::Void __swiftcall IntentClientBroadcaster.account(_:handleSubscriptionRequestFrom:withMessage:)(Swift::String _, Swift::OpaquePointer handleSubscriptionRequestFrom, Swift::String withMessage)
{
}

Swift::Void __swiftcall IntentClientBroadcaster.account(_:statusChanged:)(Swift::String _, Swift::OpaquePointer statusChanged)
{
}

void IntentClientBroadcaster.account(_:postedError:)()
{
}

void IntentClientBroadcaster.updateNicknameData(_:)()
{
}

Swift::Void __swiftcall IntentClientBroadcaster.didUpdate(settingsKeys:)(Swift::OpaquePointer_optional settingsKeys)
{
}

Swift::Void __swiftcall IntentClientBroadcaster.setupComplete(_:info:)(Swift::Bool _, Swift::OpaquePointer info)
{
}

Swift::Void __swiftcall IntentClientBroadcaster.setupComplete()()
{
}

void IntentClientBroadcaster.didReceiveCollaborationMessage(_:inChat:style:account:)()
{
}

Swift::Void __swiftcall IntentClientBroadcaster.keyTransparencyOptInStateChanged(_:)(Swift::Bool a1)
{
}

Swift::Void __swiftcall IntentClientBroadcaster.refreshStatus(forKTPeerURI:)(Swift::String forKTPeerURI)
{
}

Swift::Void __swiftcall IntentClientBroadcaster.fileTransfer(_:createdWithProperties:)(Swift::String _, Swift::OpaquePointer createdWithProperties)
{
}

Swift::Void __swiftcall IntentClientBroadcaster.fileTransfers(_:createdWithLocalPaths:)(Swift::OpaquePointer _, Swift::OpaquePointer createdWithLocalPaths)
{
}

Swift::Void __swiftcall IntentClientBroadcaster.fileTransfer(_:updatedWithCurrentBytes:totalBytes:averageTransferRate:)(Swift::String _, Swift::UInt64 updatedWithCurrentBytes, Swift::UInt64 totalBytes, Swift::UInt64 averageTransferRate)
{
}

Swift::Void __swiftcall IntentClientBroadcaster.fileTransferFinishedRemoteIntentDownload(_:)(Swift::String a1)
{
}

uint64_t _s17IMSharedUtilities23IntentClientBroadcasterC12fileTransfer_21updatedWithPropertiesySS_SDys11AnyHashableVypGtF_0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1A07856F8(&qword_1EB4A5650);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14[3] = &type metadata for FileTransferUpdatedWithPropertiesBroadcast;
  unint64_t v9 = sub_1A087B9A4();
  v14[0] = a1;
  v14[1] = a2;
  v14[4] = v9;
  v14[2] = a3;
  uint64_t v10 = sub_1A09F41C8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v8, 1, 1, v10);
  sub_1A0883D94((uint64_t)v14, (uint64_t)v13);
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = 0;
  *(void *)(v11 + 24) = 0;
  sub_1A089266C(v13, v11 + 32);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  sub_1A08BE6E4((uint64_t)v8, (uint64_t)&unk_1E94FAEE0, v11);
  swift_release();
  _s17IMSharedUtilities29RemoteIntentBroadcastEncodingVwxx_0((uint64_t)v14);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A08C6240()
{
  swift_unknownObjectRelease();
  _s17IMSharedUtilities29RemoteIntentBroadcastEncodingVwxx_0(v0 + 32);

  return MEMORY[0x1F4186498](v0, 72, 7);
}

uint64_t IntentClientBroadcaster.broadcast(_:)(void *a1)
{
  uint64_t v1 = a1[3];
  uint64_t v2 = a1[4];
  long long v3 = sub_1A086F45C(a1, v1);

  return sub_1A08C67CC((uint64_t)v3, v1, v2);
}

id IntentClientBroadcaster.__allocating_init(safeRenderProvider:)(uint64_t a1)
{
  id v3 = objc_allocWithZone(v1);
  sub_1A0883D94(a1, (uint64_t)v3 + OBJC_IVAR____TtC17IMSharedUtilities23IntentClientBroadcaster_safeRenderProvider);
  v6.receiver = v3;
  v6.super_class = v1;
  id v4 = objc_msgSendSuper2(&v6, sel_init);
  _s17IMSharedUtilities29RemoteIntentBroadcastEncodingVwxx_0(a1);
  return v4;
}

id IntentClientBroadcaster.init(safeRenderProvider:)(uint64_t a1)
{
  ObjectType = (objc_class *)swift_getObjectType();
  sub_1A0883D94(a1, (uint64_t)v1 + OBJC_IVAR____TtC17IMSharedUtilities23IntentClientBroadcaster_safeRenderProvider);
  v6.receiver = v1;
  v6.super_class = ObjectType;
  id v4 = objc_msgSendSuper2(&v6, sel_init);
  _s17IMSharedUtilities29RemoteIntentBroadcastEncodingVwxx_0(a1);
  return v4;
}

uint64_t sub_1A08C63A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 16) = a4;
  return MEMORY[0x1F4188298](sub_1A08C63C8, 0, 0);
}

uint64_t sub_1A08C63C8()
{
  *(void *)(v0 + 24) = sub_1A09F4188();
  *(void *)(v0 + 32) = sub_1A09F4178();
  uint64_t v2 = sub_1A09F4108();
  return MEMORY[0x1F4188298](sub_1A08C6460, v2, v1);
}

uint64_t sub_1A08C6460()
{
  swift_release();
  if (qword_1E94F7598 != -1) {
    swift_once();
  }
  return MEMORY[0x1F4188298](sub_1A08C64F8, 0, 0);
}

uint64_t sub_1A08C64F8()
{
  *(void *)(v0 + 40) = sub_1A09F4178();
  uint64_t v2 = sub_1A09F4108();
  return MEMORY[0x1F4188298](sub_1A08C6584, v2, v1);
}

uint64_t sub_1A08C6584()
{
  swift_release();
  *(void *)(v0 + 48) = qword_1E94F7588;
  return MEMORY[0x1F4188298](sub_1A08C65F8, 0, 0);
}

uint64_t sub_1A08C65F8()
{
  *(void *)(v0 + 56) = sub_1A09F4178();
  uint64_t v2 = sub_1A09F4108();
  return MEMORY[0x1F4188298](sub_1A08C6684, v2, v1);
}

uint64_t sub_1A08C6684()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_release();
  sub_1A0881E60(v1);
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

id IntentClientBroadcaster.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

void IntentClientBroadcaster.init()()
{
}

id IntentClientBroadcaster.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1A08C67CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1A07856F8(&qword_1EB4A5650);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14[3] = a2;
  v14[4] = a3;
  unint64_t v9 = sub_1A0884478(v14);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a2 - 8) + 16))(v9, a1, a2);
  uint64_t v10 = sub_1A09F41C8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v8, 1, 1, v10);
  sub_1A0883D94((uint64_t)v14, (uint64_t)v13);
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = 0;
  *(void *)(v11 + 24) = 0;
  sub_1A089266C(v13, v11 + 32);
  sub_1A08BE6E4((uint64_t)v8, (uint64_t)&unk_1E94FAEE0, v11);
  swift_release();
  return _s17IMSharedUtilities29RemoteIntentBroadcastEncodingVwxx_0((uint64_t)v14);
}

uint64_t type metadata accessor for IntentClientBroadcaster()
{
  return self;
}

uint64_t method lookup function for IntentClientBroadcaster(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for IntentClientBroadcaster);
}

uint64_t dispatch thunk of IntentClientBroadcaster.__allocating_init(safeRenderProvider:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t sub_1A08C6978()
{
  swift_unknownObjectRelease();
  _s17IMSharedUtilities29RemoteIntentBroadcastEncodingVwxx_0(v0 + 32);

  return MEMORY[0x1F4186498](v0, 72, 7);
}

uint64_t sub_1A08C69B8()
{
  objc_super v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *objc_super v2 = v1;
  v2[1] = sub_1A077EE58;
  v2[2] = v0 + 32;
  return MEMORY[0x1F4188298](sub_1A08C63C8, 0, 0);
}

uint64_t sub_1A08C6A60()
{
  uint64_t v0 = sub_1A09F39E8();
  sub_1A078D848(v0, qword_1E94FAEF0);
  sub_1A078510C(v0, (uint64_t)qword_1E94FAEF0);
  return sub_1A09F39D8();
}

Swift::Void __swiftcall IntentClientBroadcaster.chat(_:updated:)(Swift::String _, Swift::OpaquePointer updated)
{
}

Swift::Void __swiftcall IntentClientBroadcaster.chat(_:propertiesUpdated:)(Swift::String _, Swift::OpaquePointer propertiesUpdated)
{
}

uint64_t sub_1A08C6BF8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(uint64_t), uint64_t a7, uint64_t a8)
{
  uint64_t v13 = sub_1A09F3E18();
  uint64_t v15 = v14;
  uint64_t v16 = sub_1A09F3D08();
  id v17 = a1;
  sub_1A08C9590(v13, v15, v16, a5, a6, a7, a8);

  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

Swift::Void __swiftcall IntentClientBroadcaster.chat(_:lastAddressedHandleUpdated:)(Swift::String _, Swift::String lastAddressedHandleUpdated)
{
}

Swift::Void __swiftcall IntentClientBroadcaster.chat(_:lastAddressedSIMIDUpdated:)(Swift::String _, Swift::String lastAddressedSIMIDUpdated)
{
}

Swift::Void __swiftcall IntentClientBroadcaster.chat(_:lastAddressedHandleUpdated:lastAddressedSIMIDUpdated:)(Swift::String _, Swift::String lastAddressedHandleUpdated, Swift::String lastAddressedSIMIDUpdated)
{
}

Swift::Void __swiftcall IntentClientBroadcaster.chat(_:isFilteredUpdated:)(Swift::String _, Swift::Int isFilteredUpdated)
{
}

Swift::Void __swiftcall IntentClientBroadcaster.chat(_:isRecoveredUpdated:)(Swift::String _, Swift::Bool isRecoveredUpdated)
{
}

Swift::Void __swiftcall IntentClientBroadcaster.chat(_:isDeletingIncomingMessagesUpdated:)(Swift::String _, Swift::Bool isDeletingIncomingMessagesUpdated)
{
}

Swift::Void __swiftcall IntentClientBroadcaster.chat(_:engramIDUpdated:)(Swift::String _, Swift::String engramIDUpdated)
{
}

Swift::Void __swiftcall IntentClientBroadcaster.chat(_:nicknamesUpdated:)(Swift::String _, Swift::OpaquePointer nicknamesUpdated)
{
}

Swift::Void __swiftcall IntentClientBroadcaster.chat(_:lastMessageTimeStampOnLoadUpdated:)(Swift::String _, Swift::Double lastMessageTimeStampOnLoadUpdated)
{
  object = _._object;
  uint64_t countAndFlagsBits = _._countAndFlagsBits;
  uint64_t v5 = sub_1A07856F8(&qword_1EB4A5650);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11[3] = &type metadata for ChatLastMessageTimeStampOnLoadUpdatedBroadcast;
  v11[4] = sub_1A087B6BC();
  v11[0] = countAndFlagsBits;
  v11[1] = object;
  *(Swift::Double *)&v11[2] = lastMessageTimeStampOnLoadUpdated;
  uint64_t v8 = sub_1A09F41C8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v7, 1, 1, v8);
  sub_1A0883D94((uint64_t)v11, (uint64_t)v10);
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = 0;
  *(void *)(v9 + 24) = 0;
  sub_1A089266C(v10, v9 + 32);
  swift_bridgeObjectRetain_n();
  sub_1A08BE6E4((uint64_t)v7, (uint64_t)&unk_1E94FAEE0, v9);
  swift_release();
  _s17IMSharedUtilities29RemoteIntentBroadcastEncodingVwxx_0((uint64_t)v11);
  swift_bridgeObjectRelease();
}

Swift::Void __swiftcall IntentClientBroadcaster.serviceSwitchRequestReceivedForChat(withIdentifier:)(Swift::String withIdentifier)
{
}

Swift::Void __swiftcall IntentClientBroadcaster.capabilitiesUpdated(forHandle:)(Swift::String forHandle)
{
}

Swift::Void __swiftcall IntentClientBroadcaster.chat(_:uncachedAttachmentCountUpdated:)(Swift::String _, NSNumber uncachedAttachmentCountUpdated)
{
}

void IntentClientBroadcaster.account(_:chat:style:chatProperties:updateProperties:)()
{
}

void IntentClientBroadcaster.account(_:chat:style:chatProperties:error:)()
{
}

Swift::Void __swiftcall IntentClientBroadcaster.leftChat(_:)(Swift::String a1)
{
}

Swift::Void __swiftcall IntentClientBroadcaster.engroupParticipantsUpdated(forChat:)(Swift::String forChat)
{
}

Swift::Void __swiftcall IntentClientBroadcaster.loadedChats(_:)(Swift::OpaquePointer a1)
{
}

Swift::Void __swiftcall IntentClientBroadcaster.loadedChats(_:queryID:)(Swift::OpaquePointer _, Swift::String queryID)
{
}

Swift::Void __swiftcall IntentClientBroadcaster.markedAsRead(forMessageGUID:success:queryID:)(Swift::String forMessageGUID, Swift::Bool success, Swift::String queryID)
{
}

Swift::Void __swiftcall IntentClientBroadcaster.forcedReloadingChatRegistry(withQueryID:)(Swift::String withQueryID)
{
}

Swift::Void __swiftcall IntentClientBroadcaster.movedMessagesToRecentlyDeleted(withQueryID:)(Swift::String withQueryID)
{
}

Swift::Void __swiftcall IntentClientBroadcaster.permanentlyDeletedMessagesInChats(withDeletedChatGUIDs:)(Swift::OpaquePointer withDeletedChatGUIDs)
{
}

Swift::Void __swiftcall IntentClientBroadcaster.permanentlyDeletedMessagesInChats(withDeletedChatGUIDs:queryID:)(Swift::OpaquePointer withDeletedChatGUIDs, Swift::String queryID)
{
}

Swift::Void __swiftcall IntentClientBroadcaster.permanentlyDeletedRecoverableMessagesForChats(withGUIDs:deletedChatGUIDs:)(Swift::OpaquePointer withGUIDs, Swift::OpaquePointer deletedChatGUIDs)
{
}

Swift::Void __swiftcall IntentClientBroadcaster.recoveredMessagesFromRecentlyDeletedForChats(withGUIDs:)(Swift::OpaquePointer withGUIDs)
{
}

Swift::Void __swiftcall IntentClientBroadcaster.chatsNeedRemerging(_:groupedChats:)(Swift::OpaquePointer _, Swift::OpaquePointer groupedChats)
{
}

Swift::Void __swiftcall IntentClientBroadcaster.chatLoaded(withChatIdentifier:chats:)(Swift::String withChatIdentifier, Swift::OpaquePointer chats)
{
}

void IntentClientBroadcaster.account(_:chat:style:chatProperties:invitationReceived:)()
{
}

uint64_t IntentClientBroadcaster.account(_:chat:style:chatProperties:groupID:chatPersonCentricID:messageSent:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11)
{
  return sub_1A08C9F44(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11);
}

uint64_t IntentClientBroadcaster.account(_:chat:style:chatProperties:notifySentMessage:sendTime:isReplicating:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, void *a7, void *a8, char a9)
{
  return sub_1A08CA178(a1, a2, a3, a4, a5, a6, a7, a8, a9);
}

uint64_t IntentClientBroadcaster.account(_:chat:style:chatProperties:groupID:chatPersonCentricID:messageReceived:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11)
{
  return sub_1A08CA3AC(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11);
}

uint64_t IntentClientBroadcaster.account(_:chat:style:chatProperties:groupID:chatPersonCentricID:messagesReceived:removed:messagesComingFromStorage:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unsigned __int8 a13)
{
  return sub_1A08CA5E0(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13);
}

uint64_t IntentClientBroadcaster.account(_:chat:style:chatProperties:groupID:chatPersonCentricID:statusChanged:handleInfo:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, uint64_t a12)
{
  return sub_1A08CAF0C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12);
}

uint64_t IntentClientBroadcaster.account(_:chat:style:chatProperties:chatPersonCentricID:member:statusChanged:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10)
{
  return sub_1A08CB154(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);
}

void IntentClientBroadcaster.account(_:handleID:updatedLastReceivedOnGridMessageDate:)()
{
}

Swift::Void __swiftcall IntentClientBroadcaster.downloadedPurgedAssetBatch(forChatIDs:completedTransferGUIDs:)(Swift::OpaquePointer forChatIDs, Swift::OpaquePointer completedTransferGUIDs)
{
}

Swift::Void __swiftcall IntentClientBroadcaster.finishedDownloadingPurgedAssets(forChatIDs:)(Swift::OpaquePointer forChatIDs)
{
}

Swift::Void __swiftcall IntentClientBroadcaster.historicalMessageGUIDsDeleted(_:chatGUIDs:queryID:)(Swift::OpaquePointer_optional _, Swift::OpaquePointer_optional chatGUIDs, Swift::String_optional queryID)
{
}

Swift::Void __swiftcall IntentClientBroadcaster.previouslyBlackholedChatLoaded(withChatIdentifier:chats:)(Swift::String withChatIdentifier, Swift::OpaquePointer chats)
{
}

Swift::Void __swiftcall IntentClientBroadcaster.previouslyBlackholedChatLoaded(withHandleIDs:chat:)(Swift::OpaquePointer withHandleIDs, Swift::OpaquePointer chat)
{
}

Swift::Void __swiftcall IntentClientBroadcaster.blackholedChatsExist(_:)(Swift::Bool a1)
{
}

Swift::Void __swiftcall IntentClientBroadcaster.displayPinCode(forAccount:pinCode:deviceName:deviceType:phoneNumber:)(Swift::String forAccount, NSNumber pinCode, Swift::String deviceName, Swift::String deviceType, Swift::String phoneNumber)
{
}

Swift::Void __swiftcall IntentClientBroadcaster.pinCodeAlertCompleted(_:deviceName:deviceType:phoneNumber:responseFromDevice:wasCancelled:)(Swift::String _, Swift::String deviceName, Swift::String deviceType, Swift::String phoneNumber, Swift::Bool responseFromDevice, Swift::Bool wasCancelled)
{
}

Swift::Void __swiftcall IntentClientBroadcaster.screenTimeEnablementChanged(_:)(Swift::Bool a1)
{
}

Swift::Void __swiftcall IntentClientBroadcaster.collaborationNoticesDidChange(forChatGUIDs:)(Swift::OpaquePointer forChatGUIDs)
{
}

void IntentClientBroadcaster.account(_:chat:style:chatProperties:groupID:chatPersonCentricID:initialEmergencyQuestionnaireReceived:)()
{
}

Swift::Void __swiftcall IntentClientBroadcaster.qosClassWhileServicingRequestsResponse(_:identifier:)(qos_class_t _, Swift::String identifier)
{
}

Swift::Void __swiftcall IntentClientBroadcaster.updatedSummariesForChats(withGUIDsAndProperties:)(Swift::OpaquePointer withGUIDsAndProperties)
{
}

uint64_t sub_1A08C9590(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t), uint64_t a6, uint64_t a7)
{
  uint64_t v13 = sub_1A07856F8(&qword_1EB4A5650);
  uint64_t v14 = MEMORY[0x1F4188790](v13 - 8);
  uint64_t v16 = (char *)v21 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22[3] = a4;
  uint64_t v17 = a5(v14);
  v22[0] = a1;
  v22[1] = a2;
  v22[4] = v17;
  v22[2] = a3;
  uint64_t v18 = sub_1A09F41C8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v16, 1, 1, v18);
  sub_1A0883D94((uint64_t)v22, (uint64_t)v21);
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = 0;
  *(void *)(v19 + 24) = 0;
  sub_1A089266C(v21, v19 + 32);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  sub_1A08BE6E4((uint64_t)v16, a7, v19);
  swift_release();
  _s17IMSharedUtilities29RemoteIntentBroadcastEncodingVwxx_0((uint64_t)v22);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t _s17IMSharedUtilities23IntentClientBroadcasterC4chat_0F15PersonCentricID18displayNameUpdatedySS_SSSgSStF_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12 = sub_1A07856F8(&qword_1EB4A5650);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v14 = (char *)v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20[3] = &type metadata for ChatDisplayNameUpdatedBroadcast;
  v20[4] = sub_1A087BB48();
  uint64_t v15 = (void *)swift_allocObject();
  v20[0] = v15;
  v15[2] = a1;
  v15[3] = a2;
  v15[4] = a3;
  v15[5] = a4;
  v15[6] = a5;
  v15[7] = a6;
  uint64_t v16 = sub_1A09F41C8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v14, 1, 1, v16);
  sub_1A0883D94((uint64_t)v20, (uint64_t)v19);
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = 0;
  *(void *)(v17 + 24) = 0;
  sub_1A089266C(v19, v17 + 32);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  sub_1A08BE6E4((uint64_t)v14, (uint64_t)&unk_1E94FB020, v17);
  swift_release();
  _s17IMSharedUtilities29RemoteIntentBroadcastEncodingVwxx_0((uint64_t)v20);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t _s17IMSharedUtilities23IntentClientBroadcasterC4chat_0F15PersonCentricID18displayNameUpdated6senderySS_SSSgS2StF_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v16 = sub_1A07856F8(&qword_1EB4A5650);
  MEMORY[0x1F4188790](v16 - 8);
  uint64_t v18 = (char *)v23 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24[3] = &type metadata for ChatDisplayNameUpdatedWithSenderBroadcast;
  v24[4] = sub_1A087BAF4();
  uint64_t v19 = (void *)swift_allocObject();
  v24[0] = v19;
  long long v19[2] = a1;
  v19[3] = a2;
  v19[4] = a3;
  v19[5] = a4;
  v19[6] = a5;
  v19[7] = a6;
  v19[8] = a7;
  v19[9] = a8;
  uint64_t v20 = sub_1A09F41C8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v18, 1, 1, v20);
  sub_1A0883D94((uint64_t)v24, (uint64_t)v23);
  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = 0;
  *(void *)(v21 + 24) = 0;
  sub_1A089266C(v23, v21 + 32);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  sub_1A08BE6E4((uint64_t)v18, (uint64_t)&unk_1E94FB010, v21);
  swift_release();
  _s17IMSharedUtilities29RemoteIntentBroadcastEncodingVwxx_0((uint64_t)v24);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t _s17IMSharedUtilities23IntentClientBroadcasterC38movedMessagesToRecentlyDeletedForChats9withGUIDs7queryID12deletionDateySaySSG_SSSg10Foundation0R0VSgtF_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_1A07856F8(&qword_1EB4A5650);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for MovedMessagesToRecentlyDeletedForChatsBroadcast();
  uint64_t v12 = MEMORY[0x1F4188790](v11);
  uint64_t v14 = (void *)((char *)v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1A08CB838(a4, (uint64_t)v14 + *(int *)(v12 + 24));
  *uint64_t v14 = a1;
  v14[1] = a2;
  v14[2] = a3;
  v20[3] = v11;
  v20[4] = sub_1A08CB8A0();
  uint64_t v15 = sub_1A0884478(v20);
  sub_1A08CB8F8((uint64_t)v14, (uint64_t)v15);
  uint64_t v16 = sub_1A09F41C8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v10, 1, 1, v16);
  sub_1A0883D94((uint64_t)v20, (uint64_t)v19);
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = 0;
  *(void *)(v17 + 24) = 0;
  sub_1A089266C(v19, v17 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1A08BE6E4((uint64_t)v10, (uint64_t)&unk_1E94FB000, v17);
  swift_release();
  _s17IMSharedUtilities29RemoteIntentBroadcastEncodingVwxx_0((uint64_t)v20);
  return sub_1A08CB960((uint64_t)v14);
}

uint64_t _s17IMSharedUtilities23IntentClientBroadcasterC17recoveredMessages13withChatGUIDs7queryIDySaySSG_SStF_0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1A07856F8(&qword_1EB4A5650);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14[3] = &type metadata for RecoveredMessagesForChatsBroadcast;
  unint64_t v9 = sub_1A087B7B8();
  v14[0] = a1;
  v14[1] = a2;
  v14[4] = v9;
  v14[2] = a3;
  uint64_t v10 = sub_1A09F41C8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v8, 1, 1, v10);
  sub_1A0883D94((uint64_t)v14, (uint64_t)v13);
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = 0;
  *(void *)(v11 + 24) = 0;
  sub_1A089266C(v13, v11 + 32);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  sub_1A08BE6E4((uint64_t)v8, (uint64_t)&unk_1E94FAFF0, v11);
  swift_release();
  _s17IMSharedUtilities29RemoteIntentBroadcastEncodingVwxx_0((uint64_t)v14);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t _s17IMSharedUtilities23IntentClientBroadcasterC33loadedRecoverableMessagesMetadata_7queryIDySDySSSDySSSo8NSNumberCGG_SStF_0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1A07856F8(&qword_1EB4A5650);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v9 = sub_1A09E5970(a1);
  swift_bridgeObjectRelease();
  v15[3] = &type metadata for LoadedRecoverableMessagesMetadataBroadcast;
  unint64_t v10 = sub_1A087B860();
  v15[0] = v9;
  v15[1] = a2;
  v15[4] = v10;
  v15[2] = a3;
  uint64_t v11 = sub_1A09F41C8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v8, 1, 1, v11);
  sub_1A0883D94((uint64_t)v15, (uint64_t)v14);
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = 0;
  *(void *)(v12 + 24) = 0;
  sub_1A089266C(v14, v12 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1A08BE6E4((uint64_t)v8, (uint64_t)&unk_1E94FAFE0, v12);
  swift_release();
  _s17IMSharedUtilities29RemoteIntentBroadcastEncodingVwxx_0((uint64_t)v15);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A08C9F44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11)
{
  uint64_t v27 = a6;
  uint64_t v28 = a7;
  uint64_t v17 = sub_1A07856F8(&qword_1EB4A5650);
  MEMORY[0x1F4188790](v17 - 8);
  uint64_t v19 = (char *)&v27 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30[3] = &type metadata for MessageSentForAccountWithPropertiesBroadcast;
  v30[4] = sub_1A087B668();
  uint64_t v20 = swift_allocObject();
  v30[0] = v20;
  *(void *)(v20 + 16) = a1;
  *(void *)(v20 + 24) = a2;
  *(void *)(v20 + 32) = a3;
  *(void *)(v20 + 40) = a4;
  *(unsigned char *)(v20 + 48) = a5;
  uint64_t v21 = v28;
  *(void *)(v20 + 56) = v27;
  *(void *)(v20 + 64) = v21;
  *(void *)(v20 + 72) = a8;
  *(void *)(v20 + 80) = a9;
  *(void *)(v20 + 88) = a10;
  *(void *)(v20 + 96) = a11;
  uint64_t v22 = sub_1A09F41C8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v19, 1, 1, v22);
  sub_1A0883D94((uint64_t)v30, (uint64_t)v29);
  uint64_t v23 = swift_allocObject();
  *(void *)(v23 + 16) = 0;
  *(void *)(v23 + 24) = 0;
  sub_1A089266C(v29, v23 + 32);
  swift_bridgeObjectRetain_n();
  id v24 = a11;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  id v25 = v24;
  sub_1A08BE6E4((uint64_t)v19, (uint64_t)&unk_1E94FAFD0, v23);
  swift_release();
  _s17IMSharedUtilities29RemoteIntentBroadcastEncodingVwxx_0((uint64_t)v30);

  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  return swift_bridgeObjectRelease_n();
}

uint64_t sub_1A08CA178(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, void *a7, void *a8, char a9)
{
  int v28 = a5;
  uint64_t v16 = sub_1A07856F8(&qword_1EB4A5650);
  MEMORY[0x1F4188790](v16 - 8);
  uint64_t v18 = (char *)&v27 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  id v19 = a7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  objc_msgSend(a8, sel_doubleValue);
  uint64_t v21 = v20;
  v30[3] = &type metadata for MessageSentForAccountWithPropertiesNotifyBroadcast;
  v30[4] = sub_1A087BAA0();
  uint64_t v22 = swift_allocObject();
  v30[0] = v22;
  *(void *)(v22 + 16) = a1;
  *(void *)(v22 + 24) = a2;
  *(void *)(v22 + 32) = a3;
  *(void *)(v22 + 40) = a4;
  *(unsigned char *)(v22 + 48) = v28;
  *(void *)(v22 + 56) = a6;
  *(void *)(v22 + 64) = v19;
  *(void *)(v22 + 72) = v21;
  *(unsigned char *)(v22 + 80) = a9;
  uint64_t v23 = sub_1A09F41C8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v18, 1, 1, v23);
  sub_1A0883D94((uint64_t)v30, (uint64_t)v29);
  uint64_t v24 = swift_allocObject();
  *(void *)(v24 + 16) = 0;
  *(void *)(v24 + 24) = 0;
  sub_1A089266C(v29, v24 + 32);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  id v25 = v19;
  sub_1A08BE6E4((uint64_t)v18, (uint64_t)&unk_1E94FAFC0, v24);
  swift_release();
  _s17IMSharedUtilities29RemoteIntentBroadcastEncodingVwxx_0((uint64_t)v30);

  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  return swift_bridgeObjectRelease_n();
}

uint64_t sub_1A08CA3AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11)
{
  uint64_t v27 = a6;
  uint64_t v28 = a7;
  uint64_t v17 = sub_1A07856F8(&qword_1EB4A5650);
  MEMORY[0x1F4188790](v17 - 8);
  id v19 = (char *)&v27 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30[3] = &type metadata for MessageReceivedForAccountWithPropertiesBroadcast;
  v30[4] = sub_1A087B614();
  uint64_t v20 = swift_allocObject();
  v30[0] = v20;
  *(void *)(v20 + 16) = a1;
  *(void *)(v20 + 24) = a2;
  *(void *)(v20 + 32) = a3;
  *(void *)(v20 + 40) = a4;
  *(unsigned char *)(v20 + 48) = a5;
  uint64_t v21 = v28;
  *(void *)(v20 + 56) = v27;
  *(void *)(v20 + 64) = v21;
  *(void *)(v20 + 72) = a8;
  *(void *)(v20 + 80) = a9;
  *(void *)(v20 + 88) = a10;
  *(void *)(v20 + 96) = a11;
  uint64_t v22 = sub_1A09F41C8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v19, 1, 1, v22);
  sub_1A0883D94((uint64_t)v30, (uint64_t)v29);
  uint64_t v23 = swift_allocObject();
  *(void *)(v23 + 16) = 0;
  *(void *)(v23 + 24) = 0;
  sub_1A089266C(v29, v23 + 32);
  swift_bridgeObjectRetain_n();
  id v24 = a11;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  id v25 = v24;
  sub_1A08BE6E4((uint64_t)v19, (uint64_t)&unk_1E94FAFB0, v23);
  swift_release();
  _s17IMSharedUtilities29RemoteIntentBroadcastEncodingVwxx_0((uint64_t)v30);

  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  return swift_bridgeObjectRelease_n();
}

uint64_t sub_1A08CA5E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unsigned __int8 a13)
{
  uint64_t v30 = a7;
  uint64_t v31 = a8;
  int v29 = a13;
  uint64_t v28 = a12;
  uint64_t v19 = sub_1A07856F8(&qword_1EB4A5650);
  MEMORY[0x1F4188790](v19 - 8);
  uint64_t v21 = (char *)&v28 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33[3] = &type metadata for MessagesReceivedForAccountWithPropertiesBroadcast;
  v33[4] = sub_1A087B5C0();
  uint64_t v22 = swift_allocObject();
  v33[0] = v22;
  *(void *)(v22 + 16) = a1;
  *(void *)(v22 + 24) = a2;
  *(void *)(v22 + 32) = a3;
  *(void *)(v22 + 40) = a4;
  *(unsigned char *)(v22 + 48) = a5;
  uint64_t v23 = v30;
  uint64_t v24 = v31;
  *(void *)(v22 + 56) = a6;
  *(void *)(v22 + 64) = v23;
  *(void *)(v22 + 72) = v24;
  *(void *)(v22 + 80) = a9;
  *(void *)(v22 + 88) = a10;
  *(void *)(v22 + 96) = a11;
  *(void *)(v22 + 104) = v28;
  *(unsigned char *)(v22 + 112) = v29;
  uint64_t v25 = sub_1A09F41C8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v21, 1, 1, v25);
  sub_1A0883D94((uint64_t)v33, (uint64_t)v32);
  uint64_t v26 = swift_allocObject();
  *(void *)(v26 + 16) = 0;
  *(void *)(v26 + 24) = 0;
  sub_1A089266C(v32, v26 + 32);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  sub_1A08BE6E4((uint64_t)v21, (uint64_t)&unk_1E94FAFA0, v26);
  swift_release();
  _s17IMSharedUtilities29RemoteIntentBroadcastEncodingVwxx_0((uint64_t)v33);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t _s17IMSharedUtilities23IntentClientBroadcasterC7account_4chat5style0G10Properties14messageUpdatedySS_SSSgSo11IMChatStyleVSDys11AnyHashableVypGSgSo6IMItemCtF_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, void *a7)
{
  uint64_t v14 = sub_1A07856F8(&qword_1EB4A5650);
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v16 = (char *)v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24[3] = &type metadata for MessageUpdatedForAccountWithPropertiesBroadcast;
  v24[4] = sub_1A087B8B4();
  uint64_t v17 = swift_allocObject();
  v24[0] = v17;
  *(void *)(v17 + 16) = a1;
  *(void *)(v17 + 24) = a2;
  *(void *)(v17 + 32) = a3;
  *(void *)(v17 + 40) = a4;
  *(unsigned char *)(v17 + 48) = a5;
  *(void *)(v17 + 56) = a6;
  *(void *)(v17 + 64) = a7;
  uint64_t v18 = sub_1A09F41C8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v16, 1, 1, v18);
  sub_1A0883D94((uint64_t)v24, (uint64_t)v23);
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = 0;
  *(void *)(v19 + 24) = 0;
  sub_1A089266C(v23, v19 + 32);
  swift_bridgeObjectRetain_n();
  id v20 = a7;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  id v21 = v20;
  sub_1A08BE6E4((uint64_t)v16, (uint64_t)&unk_1E94FAF90, v19);
  swift_release();
  _s17IMSharedUtilities29RemoteIntentBroadcastEncodingVwxx_0((uint64_t)v24);

  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  return swift_bridgeObjectRelease_n();
}

uint64_t _s17IMSharedUtilities23IntentClientBroadcasterC7account_4chat5style0G10Properties15messagesUpdatedySS_SSSgSo11IMChatStyleVSDys11AnyHashableVypGSgSayANGtF_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7)
{
  uint64_t v14 = sub_1A07856F8(&qword_1EB4A5650);
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v16 = (char *)v21 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22[3] = &type metadata for MessagesUpdatedForAccountWithPropertiesBroadcast;
  v22[4] = sub_1A087B908();
  uint64_t v17 = swift_allocObject();
  v22[0] = v17;
  *(void *)(v17 + 16) = a1;
  *(void *)(v17 + 24) = a2;
  *(void *)(v17 + 32) = a3;
  *(void *)(v17 + 40) = a4;
  *(unsigned char *)(v17 + 48) = a5;
  *(void *)(v17 + 56) = a6;
  *(void *)(v17 + 64) = a7;
  uint64_t v18 = sub_1A09F41C8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v16, 1, 1, v18);
  sub_1A0883D94((uint64_t)v22, (uint64_t)v21);
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = 0;
  *(void *)(v19 + 24) = 0;
  sub_1A089266C(v21, v19 + 32);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  sub_1A08BE6E4((uint64_t)v16, (uint64_t)&unk_1E94FAF80, v19);
  swift_release();
  _s17IMSharedUtilities29RemoteIntentBroadcastEncodingVwxx_0((uint64_t)v22);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void _s17IMSharedUtilities23IntentClientBroadcasterC7service_4chat5style15messagesUpdatedySS_SSSgSo11IMChatStyleVSayypGSgtF_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6)
{
  uint64_t v12 = sub_1A07856F8(&qword_1EB4A5650);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a6 && (uint64_t v15 = sub_1A08B0080(a6)) != 0)
  {
    uint64_t v16 = v15;
    v28[3] = (uint64_t)&type metadata for MessagesUpdatedForServiceChatStyleBroadcast;
    v28[4] = sub_1A087B56C();
    uint64_t v17 = swift_allocObject();
    v28[0] = v17;
    *(void *)(v17 + 16) = a1;
    *(void *)(v17 + 24) = a2;
    *(void *)(v17 + 32) = a3;
    *(void *)(v17 + 40) = a4;
    *(unsigned char *)(v17 + 48) = a5;
    *(void *)(v17 + 56) = v16;
    uint64_t v18 = sub_1A09F41C8();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v14, 1, 1, v18);
    sub_1A0883D94((uint64_t)v28, (uint64_t)v27);
    uint64_t v19 = swift_allocObject();
    *(void *)(v19 + 16) = 0;
    *(void *)(v19 + 24) = 0;
    sub_1A089266C(v27, v19 + 32);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    sub_1A08BE6E4((uint64_t)v14, (uint64_t)&unk_1E94FAF70, v19);
    swift_release();
    _s17IMSharedUtilities29RemoteIntentBroadcastEncodingVwxx_0((uint64_t)v28);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    if (qword_1E94F8520 != -1) {
      swift_once();
    }
    uint64_t v20 = sub_1A09F39E8();
    sub_1A078510C(v20, (uint64_t)qword_1E94FAEF0);
    uint64_t v26 = sub_1A09F39C8();
    os_log_type_t v21 = sub_1A09F4378();
    if (os_log_type_enabled(v26, v21))
    {
      uint64_t v22 = (uint8_t *)swift_slowAlloc();
      uint64_t v23 = swift_slowAlloc();
      v28[0] = v23;
      *(_DWORD *)uint64_t v22 = 136315138;
      *(void *)&v27[0] = sub_1A0785144(0xD000000000000026, 0x80000001A0A34270, v28);
      sub_1A09F4528();
      _os_log_impl(&dword_1A0772000, v26, v21, "%s messages were not of expected type. Bailing on broadcast.", v22, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1A6228C20](v23, -1, -1);
      MEMORY[0x1A6228C20](v22, -1, -1);
    }
    else
    {
      uint64_t v24 = v26;
    }
  }
}

uint64_t sub_1A08CAF0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, uint64_t a12)
{
  uint64_t v29 = a7;
  uint64_t v30 = a8;
  uint64_t v31 = a6;
  uint64_t v17 = sub_1A07856F8(&qword_1EB4A5650);
  MEMORY[0x1F4188790](v17 - 8);
  uint64_t v19 = (char *)&v28 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a12 && (uint64_t v20 = sub_1A08B0080(a12)) != 0)
  {
    uint64_t v21 = v20;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v21 = MEMORY[0x1E4FBC860];
  }
  v33[3] = &type metadata for ChatStatusChangedBroadcast;
  v33[4] = sub_1A087B9F8();
  uint64_t v22 = swift_allocObject();
  v33[0] = v22;
  *(void *)(v22 + 16) = a1;
  *(void *)(v22 + 24) = a2;
  *(void *)(v22 + 32) = a3;
  *(void *)(v22 + 40) = a4;
  *(unsigned char *)(v22 + 48) = a5;
  uint64_t v23 = v30;
  uint64_t v24 = v29;
  *(void *)(v22 + 56) = v31;
  *(void *)(v22 + 64) = v24;
  *(void *)(v22 + 72) = v23;
  *(void *)(v22 + 80) = a9;
  *(void *)(v22 + 88) = a10;
  *(_DWORD *)(v22 + 96) = a11;
  *(void *)(v22 + 104) = v21;
  uint64_t v25 = sub_1A09F41C8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v19, 1, 1, v25);
  sub_1A0883D94((uint64_t)v33, (uint64_t)v32);
  uint64_t v26 = swift_allocObject();
  *(void *)(v26 + 16) = 0;
  *(void *)(v26 + 24) = 0;
  sub_1A089266C(v32, v26 + 32);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  sub_1A08BE6E4((uint64_t)v19, (uint64_t)&unk_1E94FAF60, v26);
  swift_release();
  _s17IMSharedUtilities29RemoteIntentBroadcastEncodingVwxx_0((uint64_t)v33);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A08CB154(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10)
{
  uint64_t v25 = a8;
  uint64_t v17 = sub_1A07856F8(&qword_1EB4A5650);
  MEMORY[0x1F4188790](v17 - 8);
  uint64_t v19 = (char *)&v24 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27[3] = &type metadata for ChatMemberStatusChangedBroadcast;
  v27[4] = sub_1A087BA4C();
  uint64_t v20 = swift_allocObject();
  v27[0] = v20;
  *(void *)(v20 + 16) = a1;
  *(void *)(v20 + 24) = a2;
  *(void *)(v20 + 32) = a3;
  *(void *)(v20 + 40) = a4;
  *(unsigned char *)(v20 + 48) = a5;
  *(void *)(v20 + 56) = a6;
  *(void *)(v20 + 64) = a7;
  *(void *)(v20 + 72) = v25;
  *(void *)(v20 + 80) = a9;
  *(_DWORD *)(v20 + 88) = a10;
  uint64_t v21 = sub_1A09F41C8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v19, 1, 1, v21);
  sub_1A0883D94((uint64_t)v27, (uint64_t)v26);
  uint64_t v22 = swift_allocObject();
  *(void *)(v22 + 16) = 0;
  *(void *)(v22 + 24) = 0;
  sub_1A089266C(v26, v22 + 32);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  sub_1A08BE6E4((uint64_t)v19, (uint64_t)&unk_1E94FAF50, v22);
  swift_release();
  _s17IMSharedUtilities29RemoteIntentBroadcastEncodingVwxx_0((uint64_t)v27);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t _s17IMSharedUtilities23IntentClientBroadcasterC17groupPhotoUpdated17forChatIdentifier5style7account8userInfoySS_So11IMChatStyleVSSSDys11AnyHashableVypGSgtF_0(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12 = sub_1A07856F8(&qword_1EB4A5650);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v14 = (char *)v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20[3] = &type metadata for GroupPhotoUpdatedBroadcast;
  v20[4] = sub_1A087BB9C();
  uint64_t v15 = swift_allocObject();
  v20[0] = v15;
  *(void *)(v15 + 16) = a1;
  *(void *)(v15 + 24) = a2;
  *(unsigned char *)(v15 + 32) = a3;
  *(void *)(v15 + 40) = a4;
  *(void *)(v15 + 48) = a5;
  *(void *)(v15 + 56) = a6;
  uint64_t v16 = sub_1A09F41C8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v14, 1, 1, v16);
  sub_1A0883D94((uint64_t)v20, (uint64_t)v19);
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = 0;
  *(void *)(v17 + 24) = 0;
  sub_1A089266C(v19, v17 + 32);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  sub_1A08BE6E4((uint64_t)v14, (uint64_t)&unk_1E94FAF40, v17);
  swift_release();
  _s17IMSharedUtilities29RemoteIntentBroadcastEncodingVwxx_0((uint64_t)v20);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A08CB514(uint64_t a1)
{
  uint64_t v2 = sub_1A07856F8((uint64_t *)&unk_1E94FAF20);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1A08CB578()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 64, 7);
}

uint64_t sub_1A08CB5C4()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 92, 7);
}

uint64_t sub_1A08CB620()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 112, 7);
}

uint64_t sub_1A08CB68C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 72, 7);
}

uint64_t sub_1A08CB6E0()
{
  return sub_1A08CB768(72);
}

uint64_t sub_1A08CB6EC()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 113, 7);
}

uint64_t sub_1A08CB760()
{
  return sub_1A08CB768(81);
}

uint64_t sub_1A08CB768(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v1, a1, 7);
}

uint64_t sub_1A08CB7CC()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 104, 7);
}

uint64_t sub_1A08CB838(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1A07856F8((uint64_t *)&unk_1E94FAF20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_1A08CB8A0()
{
  unint64_t result = qword_1E94F9200;
  if (!qword_1E94F9200)
  {
    type metadata accessor for MovedMessagesToRecentlyDeletedForChatsBroadcast();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94F9200);
  }
  return result;
}

uint64_t sub_1A08CB8F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MovedMessagesToRecentlyDeletedForChatsBroadcast();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A08CB960(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for MovedMessagesToRecentlyDeletedForChatsBroadcast();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1A08CB9BC()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 80, 7);
}

uint64_t sub_1A08CBA14()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 64, 7);
}

Swift::Void __swiftcall IntentClientBroadcaster.databaseUpdated()()
{
}

Swift::Void __swiftcall IntentClientBroadcaster.databaseUpdated(_:)(Swift::String a1)
{
  object = a1._object;
  uint64_t countAndFlagsBits = a1._countAndFlagsBits;
  uint64_t v3 = sub_1A07856F8(&qword_1EB4A5650);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9[3] = &type metadata for ChatDatabaseUpdatedStampBroadcast;
  v9[4] = sub_1A087B4C4();
  v9[0] = countAndFlagsBits;
  v9[1] = object;
  uint64_t v6 = sub_1A09F41C8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v5, 1, 1, v6);
  sub_1A0883D94((uint64_t)v9, (uint64_t)v8);
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = 0;
  *(void *)(v7 + 24) = 0;
  sub_1A089266C(v8, v7 + 32);
  swift_bridgeObjectRetain_n();
  sub_1A08BE6E4((uint64_t)v5, (uint64_t)&unk_1E94FAEE0, v7);
  swift_release();
  _s17IMSharedUtilities29RemoteIntentBroadcastEncodingVwxx_0((uint64_t)v9);
  swift_bridgeObjectRelease();
}

Swift::Void __swiftcall IntentClientBroadcaster.databaseChatSpamUpdated(_:)(Swift::String a1)
{
}

uint64_t sub_1A08CBEE0(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  if (a3)
  {
    uint64_t v6 = sub_1A09F3E18();
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v7 = 0;
  }
  uint64_t v8 = (uint64_t *)(a1 + *a4);
  *uint64_t v8 = v6;
  v8[1] = v7;

  return swift_bridgeObjectRelease();
}

id sub_1A08CBF40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9 = &v6[OBJC_IVAR___IMChipSuggestion_postback];
  *(void *)uint64_t v9 = 0;
  *((void *)v9 + 1) = 0;
  unint64_t v10 = &v6[OBJC_IVAR___IMChipSuggestion_inReplyToID];
  *(void *)unint64_t v10 = 0;
  *((void *)v10 + 1) = 0;
  uint64_t v11 = &v6[OBJC_IVAR___IMChipSuggestion_displayText];
  *(void *)uint64_t v11 = a1;
  *((void *)v11 + 1) = a2;
  *(void *)uint64_t v9 = a3;
  *((void *)v9 + 1) = a4;
  uint64_t v12 = v6;
  swift_bridgeObjectRelease();
  *(void *)unint64_t v10 = a5;
  *((void *)v10 + 1) = a6;

  swift_bridgeObjectRelease();
  v14.receiver = v12;
  v14.super_class = (Class)IMChipSuggestion;
  return objc_msgSendSuper2(&v14, sel_init);
}

void __swiftcall IMChipSuggestion.init(dictionary:)(IMChipSuggestion_optional *__return_ptr retstr, Swift::OpaquePointer dictionary)
{
  id v2 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  uint64_t v3 = (void *)sub_1A09F3CE8();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_initWithDictionary_, v3);
}

id IMChipSuggestion.init(dictionary:)(uint64_t a1)
{
  id v2 = v1;
  if (*(void *)(a1 + 16))
  {
    unint64_t v4 = sub_1A087AAA4(0x5479616C70736964, 0xEB00000000747865);
    if (v5)
    {
      sub_1A0785268(*(void *)(a1 + 56) + 32 * v4, (uint64_t)&v15);
      if (swift_dynamicCast())
      {
        uint64_t v6 = (void *)sub_1A09F3DE8();
        swift_bridgeObjectRelease();
        if (*(void *)(a1 + 16)
          && (unint64_t v7 = sub_1A087AAA4(0x6B63616274736F70, 0xE800000000000000), (v8 & 1) != 0)
          && (sub_1A0785268(*(void *)(a1 + 56) + 32 * v7, (uint64_t)&v15), (swift_dynamicCast() & 1) != 0))
        {
          uint64_t v9 = (void *)sub_1A09F3DE8();
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v9 = 0;
        }
        if (*(void *)(a1 + 16) && (unint64_t v12 = sub_1A087AAA4(0x54796C7065526E69, 0xEB0000000044496FLL), (v13 & 1) != 0))
        {
          sub_1A0785268(*(void *)(a1 + 56) + 32 * v12, (uint64_t)&v15);
        }
        else
        {
          long long v15 = 0u;
          long long v16 = 0u;
        }
        swift_bridgeObjectRelease();
        if (*((void *)&v16 + 1))
        {
          if (swift_dynamicCast())
          {
            objc_super v14 = (void *)sub_1A09F3DE8();
            swift_bridgeObjectRelease();
LABEL_20:
            id v10 = objc_msgSend(v2, sel_initWithDisplayText_postback_inReplyToID_, v6, v9, v14);

            return v10;
          }
        }
        else
        {
          sub_1A0783C7C((uint64_t)&v15);
        }
        objc_super v14 = 0;
        goto LABEL_20;
      }
    }
  }
  swift_bridgeObjectRelease();
  swift_getObjectType();
  swift_deallocPartialClassInstance();
  return 0;
}

uint64_t sub_1A08CC388()
{
  sub_1A07856F8(&qword_1E94F97B8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1A0A099E0;
  *(void *)(inited + 32) = 0x5479616C70736964;
  *(void *)(inited + 40) = 0xEB00000000747865;
  id v2 = objc_msgSend(v0, sel_displayText);
  uint64_t v3 = sub_1A09F3E18();
  uint64_t v5 = v4;

  uint64_t v6 = MEMORY[0x1E4FBB1A0];
  *(void *)(inited + 48) = v3;
  *(void *)(inited + 56) = v5;
  *(void *)(inited + 72) = v6;
  *(void *)(inited + 80) = 0x6B63616274736F70;
  *(void *)(inited + 88) = 0xE800000000000000;
  id v7 = objc_msgSend(v0, sel_postback);
  if (v7)
  {
    char v8 = v7;
    uint64_t v9 = sub_1A09F3E18();
    uint64_t v11 = v10;

    uint64_t v12 = MEMORY[0x1E4FBB1A0];
  }
  else
  {
    uint64_t v9 = 0;
    uint64_t v11 = 0;
    uint64_t v12 = 0;
    *(void *)(inited + 112) = 0;
  }
  *(void *)(inited + 96) = v9;
  *(void *)(inited + 104) = v11;
  *(void *)(inited + 120) = v12;
  *(void *)(inited + 128) = 0x54796C7065526E69;
  *(void *)(inited + 136) = 0xEB0000000044496FLL;
  id v13 = objc_msgSend(v0, sel_inReplyToID);
  if (v13)
  {
    objc_super v14 = v13;
    uint64_t v15 = sub_1A09F3E18();
    uint64_t v17 = v16;

    uint64_t v18 = MEMORY[0x1E4FBB1A0];
  }
  else
  {
    uint64_t v15 = 0;
    uint64_t v17 = 0;
    uint64_t v18 = 0;
    *(void *)(inited + 160) = 0;
  }
  *(void *)(inited + 144) = v15;
  *(void *)(inited + 152) = v17;
  *(void *)(inited + 168) = v18;
  unint64_t v19 = sub_1A08D76DC(inited);
  uint64_t v20 = sub_1A09BE198(v19);
  swift_bridgeObjectRelease();
  return v20;
}

void __swiftcall IMChipSuggestion.init()(IMChipSuggestion *__return_ptr retstr)
{
  id v1 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());

  objc_msgSend(v1, sel_init);
}

void IMChipSuggestion.init()()
{
}

unint64_t type metadata accessor for IMChipSuggestion()
{
  unint64_t result = qword_1E94FB068;
  if (!qword_1E94FB068)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1E94FB068);
  }
  return result;
}

uint64_t sub_1A08CC6F4()
{
  id v1 = IMStringFromClientCapabilities(*v0);
  uint64_t v2 = sub_1A09F3E18();

  return v2;
}

uint64_t sub_1A08CC744()
{
  uint64_t v0 = sub_1A09F3058();
  sub_1A078D848(v0, qword_1E94FB070);
  sub_1A078510C(v0, (uint64_t)qword_1E94FB070);
  return sub_1A09F3038();
}

uint64_t static MutedConversationEntity.typeDisplayRepresentation.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_1E94F8528 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1A09F3058();
  uint64_t v3 = sub_1A078510C(v2, (uint64_t)qword_1E94FB070);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

uint64_t MutedConversationEntity.displayRepresentation.getter()
{
  uint64_t v0 = sub_1A07856F8(&qword_1E94FB088);
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v2 = (char *)&v9 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1A09F3278();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  sub_1A09F3268();
  uint64_t v5 = sub_1A07856F8(&qword_1E94FB090);
  MEMORY[0x1F4188790](v5 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))((char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), 1, 1, v3);
  uint64_t v7 = sub_1A09F2FE8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v2, 1, 1, v7);
  return sub_1A09F2FF8();
}

uint64_t MutedConversationEntity.conversationIdentifier.getter()
{
  sub_1A09F2F98();
  return v1;
}

uint64_t sub_1A08CCA34@<X0>(void *a1@<X8>)
{
  swift_retain();
  swift_retain();
  sub_1A09F2F98();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  a1[1] = v4;
  return result;
}

uint64_t sub_1A08CCA98()
{
  return swift_release();
}

uint64_t MutedConversationEntity.conversationIdentifier.setter()
{
  return sub_1A09F2FA8();
}

uint64_t (*MutedConversationEntity.conversationIdentifier.modify(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1A09F2F88();
  return sub_1A08CCB84;
}

uint64_t MutedConversationEntity.$conversationIdentifier.getter()
{
  return sub_1A09F2FB8();
}

double MutedConversationEntity.unmuteTime.getter()
{
  sub_1A09F2F98();
  return v1;
}

double sub_1A08CCBE0@<D0>(double *a1@<X8>)
{
  swift_retain();
  swift_retain();
  sub_1A09F2F98();
  swift_release();
  swift_release();
  double result = v3;
  *a1 = v3;
  return result;
}

uint64_t sub_1A08CCC44()
{
  return swift_release();
}

uint64_t MutedConversationEntity.unmuteTime.setter()
{
  return sub_1A09F2FA8();
}

uint64_t (*MutedConversationEntity.unmuteTime.modify(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1A09F2F88();
  return sub_1A08CCB84;
}

void sub_1A08CCD2C(void *a1)
{
  double v1 = (void *)*a1;
  (*(void (**)(void, void))(*a1 + 32))(*a1, 0);

  free(v1);
}

uint64_t MutedConversationEntity.$unmuteTime.getter()
{
  return sub_1A09F2FB8();
}

uint64_t MutedConversationEntity.init()@<X0>(uint64_t *a1@<X8>)
{
  sub_1A07856F8(&qword_1E94FB098);
  uint64_t v2 = sub_1A09F2FC8();
  sub_1A07856F8(&qword_1E94FB0A0);
  uint64_t result = sub_1A09F2FD8();
  *a1 = v2;
  a1[1] = result;
  return result;
}

void MutedConversationEntity.init(conversationIdentifier:unmuteTime:)(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t *a4@<X8>)
{
  sub_1A07856F8(&qword_1E94FB098);
  uint64_t v8 = sub_1A09F2FC8();
  sub_1A07856F8(&qword_1E94FB0A0);
  swift_retain();
  uint64_t v9 = sub_1A09F2FD8();
  swift_retain_n();
  swift_retain();
  sub_1A09F2FA8();
  swift_release();
  swift_release();
  swift_retain();
  swift_retain();
  objc_msgSend(a3, sel_doubleValue, a1, a2);
  sub_1A09F2FA8();
  swift_release_n();
  swift_release_n();

  *a4 = v8;
  a4[1] = v9;
}

uint64_t sub_1A08CCEF8@<X0>(uint64_t *a1@<X8>)
{
  sub_1A07856F8(&qword_1E94FB098);
  uint64_t v2 = sub_1A09F2FC8();
  sub_1A07856F8(&qword_1E94FB0A0);
  uint64_t result = sub_1A09F2FD8();
  *a1 = v2;
  a1[1] = result;
  return result;
}

uint64_t sub_1A08CCF50(uint64_t a1)
{
  unint64_t v2 = sub_1A08CDF84();

  return MEMORY[0x1F40D3A50](a1, v2);
}

uint64_t sub_1A08CCF9C()
{
  sub_1A08CDF84();

  return sub_1A09F2ED8();
}

uint64_t sub_1A08CCFEC@<X0>(uint64_t a1@<X8>)
{
  if (qword_1E94F8528 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1A09F3058();
  uint64_t v3 = sub_1A078510C(v2, (uint64_t)qword_1E94FB070);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

uint64_t sub_1A08CD094(uint64_t a1)
{
  unint64_t v2 = sub_1A08CD9E0();

  return MEMORY[0x1F40D3BC8](a1, v2);
}

uint64_t sub_1A08CD0E0()
{
  uint64_t v0 = sub_1A07856F8(&qword_1E94FB088);
  MEMORY[0x1F4188790](v0 - 8);
  unint64_t v2 = (char *)&v9 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1A09F3278();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  sub_1A09F3268();
  uint64_t v5 = sub_1A07856F8(&qword_1E94FB090);
  MEMORY[0x1F4188790](v5 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))((char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), 1, 1, v3);
  uint64_t v7 = sub_1A09F2FE8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v2, 1, 1, v7);
  return sub_1A09F2FF8();
}

uint64_t sub_1A08CD2A0(uint64_t a1)
{
  unint64_t v2 = sub_1A08CDC90();

  return MEMORY[0x1F40D4970](a1, v2);
}

uint64_t sub_1A08CD2F0()
{
  uint64_t v1 = sub_1A09F2EE8();
  v0[2] = v1;
  v0[3] = *(void *)(v1 - 8);
  v0[4] = swift_task_alloc();
  uint64_t v2 = sub_1A09F2F08();
  v0[5] = v2;
  v0[6] = *(void *)(v2 - 8);
  v0[7] = swift_task_alloc();
  uint64_t v3 = (void *)swift_task_alloc();
  v0[8] = v3;
  v0[9] = sub_1A08CD9E0();
  *uint64_t v3 = v0;
  v3[1] = sub_1A08CD454;
  return MEMORY[0x1F40D3BA8]();
}

uint64_t sub_1A08CD454(char a1)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *v2;
  swift_task_dealloc();
  if (v1)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v6 = *(uint64_t (**)(void))(v5 + 8);
    return v6();
  }
  else
  {
    *(unsigned char *)(v4 + 80) = a1 & 1;
    return MEMORY[0x1F4188298](sub_1A08CD5B0, 0, 0);
  }
}

uint64_t sub_1A08CD5B0()
{
  if (*(unsigned char *)(v0 + 80) == 1)
  {
    uint64_t v2 = *(void *)(v0 + 48);
    uint64_t v1 = *(void *)(v0 + 56);
    uint64_t v4 = *(void *)(v0 + 32);
    uint64_t v3 = *(void *)(v0 + 40);
    uint64_t v5 = *(void *)(v0 + 16);
    uint64_t v6 = *(void *)(v0 + 24);
    (*(void (**)(uint64_t, void, uint64_t))(v6 + 104))(v4, *MEMORY[0x1E4F181E0], v5);
    sub_1A09F2F28();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
    sub_1A09F2EF8();
    (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7();
}

id MutedConversationListRemoteNotifier.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

id MutedConversationListRemoteNotifier.init()()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MutedConversationListRemoteNotifier();
  return objc_msgSendSuper2(&v2, sel_init);
}

id MutedConversationListRemoteNotifier.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MutedConversationListRemoteNotifier();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t _s17IMSharedUtilities35MutedConversationListRemoteNotifierC06notifyE7ChangedyyFZ_0()
{
  uint64_t v0 = sub_1A07856F8(&qword_1EB4A5650);
  MEMORY[0x1F4188790](v0 - 8);
  objc_super v2 = (char *)v10 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1A09F41C8();
  uint64_t v4 = *(void *)(v3 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v2, 1, 1, v3);
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = 0;
  *(void *)(v5 + 24) = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1)
  {
    sub_1A08CE0BC((uint64_t)v2);
  }
  else
  {
    sub_1A09F41B8();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v2, v3);
    if (*(void *)(v5 + 16))
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v6 = sub_1A09F4108();
      uint64_t v8 = v7;
      swift_unknownObjectRelease();
      if (v8 | v6)
      {
        v10[0] = 0;
        v10[1] = 0;
        long long v10[2] = v6;
        v10[3] = v8;
      }
    }
  }
  swift_task_create();
  return swift_release();
}

uint64_t type metadata accessor for MutedConversationListRemoteNotifier()
{
  return self;
}

unint64_t sub_1A08CD9E0()
{
  unint64_t result = qword_1E94FB0A8;
  if (!qword_1E94FB0A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FB0A8);
  }
  return result;
}

unint64_t sub_1A08CDA38()
{
  unint64_t result = qword_1E94FB0B0;
  if (!qword_1E94FB0B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FB0B0);
  }
  return result;
}

unint64_t sub_1A08CDA90()
{
  unint64_t result = qword_1E94FB0B8;
  if (!qword_1E94FB0B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FB0B8);
  }
  return result;
}

unint64_t sub_1A08CDAE8()
{
  unint64_t result = qword_1E94FB0C0;
  if (!qword_1E94FB0C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FB0C0);
  }
  return result;
}

uint64_t sub_1A08CDB3C()
{
  return sub_1A0792558(&qword_1E94FB0C8, &qword_1E94FB0D0);
}

uint64_t sub_1A08CDB78()
{
  return MEMORY[0x1E4F18878];
}

unint64_t sub_1A08CDB88()
{
  unint64_t result = qword_1E94FB0D8;
  if (!qword_1E94FB0D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FB0D8);
  }
  return result;
}

unint64_t sub_1A08CDBE0()
{
  unint64_t result = qword_1E94FB0E0;
  if (!qword_1E94FB0E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FB0E0);
  }
  return result;
}

unint64_t sub_1A08CDC38()
{
  unint64_t result = qword_1E94FB0E8;
  if (!qword_1E94FB0E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FB0E8);
  }
  return result;
}

unint64_t sub_1A08CDC90()
{
  unint64_t result = qword_1E94FB0F0;
  if (!qword_1E94FB0F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FB0F0);
  }
  return result;
}

unint64_t sub_1A08CDCE8()
{
  unint64_t result = qword_1E94FB0F8;
  if (!qword_1E94FB0F8)
  {
    sub_1A09F34A8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FB0F8);
  }
  return result;
}

uint64_t sub_1A08CDD34()
{
  return sub_1A0792558(&qword_1E94FB100, &qword_1E94FB108);
}

unint64_t sub_1A08CDD74()
{
  unint64_t result = qword_1E94FB110;
  if (!qword_1E94FB110)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FB110);
  }
  return result;
}

uint64_t destroy for MutedConversationEntity()
{
  swift_release();

  return swift_release();
}

void *_s17IMSharedUtilities23MutedConversationEntityVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  swift_retain();
  return a1;
}

void *assignWithCopy for MutedConversationEntity(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *assignWithTake for MutedConversationEntity(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for RemoteIntentContactSetupInfo(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for RemoteIntentContactSetupInfo(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MutedConversationEntity()
{
  return &type metadata for MutedConversationEntity;
}

unint64_t sub_1A08CDF84()
{
  unint64_t result = qword_1E94FB118;
  if (!qword_1E94FB118)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_1E94FB118);
  }
  return result;
}

uint64_t sub_1A08CDFD8()
{
  swift_unknownObjectRelease();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1A08CE010()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1A077EE58;
  return sub_1A08CD2F0();
}

uint64_t sub_1A08CE0BC(uint64_t a1)
{
  uint64_t v2 = sub_1A07856F8(&qword_1EB4A5650);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t static IMGenerativeModelsAvailabilityProvider.summarizationModelsAvailable()()
{
  return sub_1A08CE140(&OBJC_IVAR___IMGenerativeModelsAvailabilityProvider_summarizationModelsAvailable);
}

uint64_t static IMGenerativeModelsAvailabilityProvider.generativePlaygroundModelsAvailable()()
{
  return sub_1A08CE140(&OBJC_IVAR___IMGenerativeModelsAvailabilityProvider_generativePlaygroundModelsAvailable);
}

uint64_t sub_1A08CE140(void *a1)
{
  if (qword_1E94F76E0 != -1) {
    swift_once();
  }
  return *(unsigned __int8 *)(qword_1E94F76E8 + *a1);
}

void static IMGenerativeModelsAvailabilityProvider.setMessageSummarizationUserPreference(_:)(char a1)
{
  uint64_t v2 = (void *)sub_1A09F3DE8();
  uint64_t v3 = (void *)sub_1A09F3DE8();
  id v4 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithBool_, a1 & 1);
  IMSetDomainValueForKey();
}

uint64_t type metadata accessor for IMGenerativeModelsAvailabilityProvider(uint64_t a1)
{
  return sub_1A078231C(a1, &qword_1E94FB150);
}

uint64_t destroy for RemoteIntentFileTransferAttributionInfo()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for RemoteIntentFileTransferAttributionInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  uint64_t v6 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v6;
  uint64_t v7 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v7;
  uint64_t v8 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v8;
  uint64_t v9 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v9;
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(_WORD *)(a1 + 136) = *(_WORD *)(a2 + 136);
  uint64_t v10 = *(void *)(a2 + 144);
  *(unsigned char *)(a1 + 152) = *(unsigned char *)(a2 + 152);
  *(void *)(a1 + 144) = v10;
  *(unsigned char *)(a1 + 153) = *(unsigned char *)(a2 + 153);
  *(_WORD *)(a1 + 154) = *(_WORD *)(a2 + 154);
  *(unsigned char *)(a1 + 160) = *(unsigned char *)(a2 + 160);
  *(_DWORD *)(a1 + 156) = *(_DWORD *)(a2 + 156);
  *(unsigned char *)(a1 + 168) = *(unsigned char *)(a2 + 168);
  *(_DWORD *)(a1 + 164) = *(_DWORD *)(a2 + 164);
  long long v11 = *(_OWORD *)(a2 + 176);
  long long v12 = *(_OWORD *)(a2 + 192);
  long long v13 = *(_OWORD *)(a2 + 208);
  *(_DWORD *)(a1 + 224) = *(_DWORD *)(a2 + 224);
  *(_OWORD *)(a1 + 192) = v12;
  *(_OWORD *)(a1 + 208) = v13;
  *(_OWORD *)(a1 + 176) = v11;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for RemoteIntentFileTransferAttributionInfo(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 112);
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  *(void *)(a1 + 112) = v4;
  uint64_t v5 = *(void *)(a2 + 128);
  *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
  *(void *)(a1 + 128) = v5;
  *(unsigned char *)(a1 + 137) = *(unsigned char *)(a2 + 137);
  uint64_t v6 = *(void *)(a2 + 144);
  *(unsigned char *)(a1 + 152) = *(unsigned char *)(a2 + 152);
  *(void *)(a1 + 144) = v6;
  *(unsigned char *)(a1 + 153) = *(unsigned char *)(a2 + 153);
  *(unsigned char *)(a1 + 154) = *(unsigned char *)(a2 + 154);
  *(unsigned char *)(a1 + 155) = *(unsigned char *)(a2 + 155);
  LODWORD(v6) = *(_DWORD *)(a2 + 156);
  *(unsigned char *)(a1 + 160) = *(unsigned char *)(a2 + 160);
  *(_DWORD *)(a1 + 156) = v6;
  LODWORD(v6) = *(_DWORD *)(a2 + 164);
  *(unsigned char *)(a1 + 168) = *(unsigned char *)(a2 + 168);
  *(_DWORD *)(a1 + 164) = v6;
  long long v7 = *(_OWORD *)(a2 + 176);
  long long v8 = *(_OWORD *)(a2 + 192);
  long long v9 = *(_OWORD *)(a2 + 208);
  *(_DWORD *)(a1 + 224) = *(_DWORD *)(a2 + 224);
  *(_OWORD *)(a1 + 192) = v8;
  *(_OWORD *)(a1 + 208) = v9;
  *(_OWORD *)(a1 + 176) = v7;
  return a1;
}

__n128 initializeWithTake for RemoteIntentFileTransferAttributionInfo(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  long long v4 = a2[3];
  long long v5 = a2[4];
  long long v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  long long v7 = a2[7];
  long long v8 = a2[8];
  long long v9 = a2[10];
  *(_OWORD *)(a1 + 144) = a2[9];
  *(_OWORD *)(a1 + 160) = v9;
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 128) = v8;
  __n128 result = (__n128)a2[11];
  long long v11 = a2[12];
  long long v12 = a2[13];
  *(_DWORD *)(a1 + 224) = *((_DWORD *)a2 + 56);
  *(_OWORD *)(a1 + 192) = v11;
  *(_OWORD *)(a1 + 208) = v12;
  *(__n128 *)(a1 + 176) = result;
  return result;
}

uint64_t assignWithTake for RemoteIntentFileTransferAttributionInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v10;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(_WORD *)(a1 + 136) = *(_WORD *)(a2 + 136);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  int v11 = *(_DWORD *)(a2 + 156);
  *(_DWORD *)(a1 + 152) = *(_DWORD *)(a2 + 152);
  *(_DWORD *)(a1 + 156) = v11;
  *(unsigned char *)(a1 + 160) = *(unsigned char *)(a2 + 160);
  int v12 = *(_DWORD *)(a2 + 164);
  *(unsigned char *)(a1 + 168) = *(unsigned char *)(a2 + 168);
  *(_DWORD *)(a1 + 164) = v12;
  *(_DWORD *)(a1 + 224) = *(_DWORD *)(a2 + 224);
  long long v13 = *(_OWORD *)(a2 + 208);
  long long v14 = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 208) = v13;
  *(_OWORD *)(a1 + 176) = v14;
  return a1;
}

uint64_t getEnumTagSinglePayload for RemoteIntentFileTransferAttributionInfo(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 228)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for RemoteIntentFileTransferAttributionInfo(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 216) = 0;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_DWORD *)(result + 224) = 0;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 228) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 228) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RemoteIntentFileTransferAttributionInfo()
{
  return &type metadata for RemoteIntentFileTransferAttributionInfo;
}

uint64_t sub_1A08CE8E8()
{
  return MEMORY[0x1E4FBB968];
}

unint64_t sub_1A08CE8F4(char a1)
{
  unint64_t result = 7107189;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x44496D616461;
      break;
    case 2:
      unint64_t result = 0x656D614E707061;
      break;
    case 3:
      unint64_t result = 0x4449656C646E7562;
      break;
    case 4:
      unint64_t result = 0xD000000000000012;
      break;
    case 5:
      unint64_t result = 0x6853746E656D6F6DLL;
      break;
    case 6:
      unint64_t result = 0x5574657373416870;
      break;
    case 7:
      unint64_t result = 0x726566736E617274;
      break;
    case 8:
      unint64_t result = 0x756F437465737361;
      break;
    case 9:
      unint64_t result = 0xD000000000000011;
      break;
    case 10:
    case 12:
      unint64_t result = 0xD000000000000018;
      break;
    case 11:
      unint64_t result = 0xD000000000000016;
      break;
    case 13:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 14:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 15:
      unint64_t result = 0xD00000000000001BLL;
      break;
    case 16:
      unint64_t result = 0xD00000000000001CLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A08CEB0C(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_1A07856F8(&qword_1E94FB158);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = &v12[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1A086F45C(a1, a1[3]);
  sub_1A08CFFBC();
  sub_1A09F4CC8();
  v12[0] = 0;
  sub_1A09F4978();
  if (!v2)
  {
    v12[0] = 1;
    sub_1A09F4978();
    v12[0] = 2;
    sub_1A09F4978();
    v12[0] = 3;
    sub_1A09F4978();
    v12[0] = 4;
    sub_1A09F4978();
    v12[0] = 5;
    sub_1A09F4978();
    v12[0] = 6;
    sub_1A09F4978();
    v12[0] = 7;
    sub_1A09F49C8();
    v12[0] = 8;
    sub_1A09F49C8();
    v12[0] = 9;
    sub_1A09F4988();
    v12[0] = 10;
    sub_1A09F49B8();
    sub_1A08AF448(v3 + 153, (uint64_t)&v15, &qword_1E94FB168);
    sub_1A08AF448((uint64_t)&v15, (uint64_t)v12, &qword_1E94FB168);
    char v13 = 11;
    sub_1A08D0010();
    sub_1A09F49D8();
    v12[0] = 12;
    sub_1A09F4988();
    v12[0] = 13;
    sub_1A09F4988();
    char v9 = *(unsigned char *)(v3 + 160);
    v12[0] = 14;
    char v13 = v9;
    sub_1A09F49A8();
    char v10 = *(unsigned char *)(v3 + 168);
    v12[0] = 15;
    char v13 = v10;
    sub_1A09F49A8();
    sub_1A08AF448(v3 + 176, (uint64_t)v14, &qword_1E94FB178);
    sub_1A08AF448((uint64_t)v14, (uint64_t)v12, &qword_1E94FB178);
    char v13 = 16;
    sub_1A08D0064();
    sub_1A09F49D8();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_1A08CEF60()
{
  return sub_1A08CE8F4(*v0);
}

uint64_t sub_1A08CEF68@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A08D0E9C(a1, a2);
  *a3 = result;
  return result;
}

void sub_1A08CEF90(unsigned char *a1@<X8>)
{
  *a1 = 17;
}

uint64_t sub_1A08CEF9C(uint64_t a1)
{
  unint64_t v2 = sub_1A08CFFBC();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A08CEFD8(uint64_t a1)
{
  unint64_t v2 = sub_1A08CFFBC();

  return MEMORY[0x1F41862B0](a1, v2);
}

__n128 sub_1A08CF014@<Q0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1A08D1558(a1, (uint64_t)v11);
  if (!v2)
  {
    long long v5 = v11[13];
    *(_OWORD *)(a2 + 192) = v11[12];
    *(_OWORD *)(a2 + 208) = v5;
    *(_DWORD *)(a2 + 224) = v12;
    long long v6 = v11[9];
    *(_OWORD *)(a2 + 128) = v11[8];
    *(_OWORD *)(a2 + 144) = v6;
    long long v7 = v11[11];
    *(_OWORD *)(a2 + 160) = v11[10];
    *(_OWORD *)(a2 + 176) = v7;
    long long v8 = v11[5];
    *(_OWORD *)(a2 + 64) = v11[4];
    *(_OWORD *)(a2 + 80) = v8;
    long long v9 = v11[7];
    *(_OWORD *)(a2 + 96) = v11[6];
    *(_OWORD *)(a2 + 112) = v9;
    long long v10 = v11[1];
    *(_OWORD *)a2 = v11[0];
    *(_OWORD *)(a2 + 16) = v10;
    __n128 result = (__n128)v11[3];
    *(_OWORD *)(a2 + 32) = v11[2];
    *(__n128 *)(a2 + 48) = result;
  }
  return result;
}

uint64_t sub_1A08CF0A4(void *a1)
{
  return sub_1A08CEB0C(a1);
}

unint64_t sub_1A08CF110()
{
  uint64_t v1 = v0;
  unint64_t v58 = MEMORY[0x1E4FBC868];
  *(void *)&long long v69 = sub_1A09F3E18();
  *((void *)&v69 + 1) = v2;
  uint64_t v3 = MEMORY[0x1E4FBB1A0];
  sub_1A09F4648();
  uint64_t v4 = v0[1];
  if (v4)
  {
    uint64_t v5 = *v1;
    *((void *)&v70 + 1) = v3;
    *(void *)&long long v69 = v5;
    *((void *)&v69 + 1) = v4;
    sub_1A07825B4(&v69, v59);
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v57[0] = v58;
    sub_1A08D97F0(v59, (uint64_t)v87, isUniquelyReferenced_nonNull_native);
    swift_bridgeObjectRelease();
    sub_1A087B20C((uint64_t)v87);
  }
  else
  {
    sub_1A09ED5A4((uint64_t)v87, &v69);
    sub_1A087B20C((uint64_t)v87);
    sub_1A0783C7C((uint64_t)&v69);
  }
  *(void *)&long long v69 = sub_1A09F3E18();
  *((void *)&v69 + 1) = v7;
  sub_1A09F4648();
  uint64_t v8 = v1[3];
  if (v8)
  {
    uint64_t v9 = v1[2];
    *((void *)&v70 + 1) = v3;
    *(void *)&long long v69 = v9;
    *((void *)&v69 + 1) = v8;
    sub_1A07825B4(&v69, v59);
    swift_bridgeObjectRetain();
    char v10 = swift_isUniquelyReferenced_nonNull_native();
    v57[0] = v58;
    sub_1A08D97F0(v59, (uint64_t)v87, v10);
    swift_bridgeObjectRelease();
    sub_1A087B20C((uint64_t)v87);
  }
  else
  {
    sub_1A09ED5A4((uint64_t)v87, &v69);
    sub_1A087B20C((uint64_t)v87);
    sub_1A0783C7C((uint64_t)&v69);
  }
  *(void *)&long long v69 = sub_1A09F3E18();
  *((void *)&v69 + 1) = v11;
  sub_1A09F4648();
  uint64_t v12 = v1[5];
  if (v12)
  {
    uint64_t v13 = v1[4];
    *((void *)&v70 + 1) = v3;
    *(void *)&long long v69 = v13;
    *((void *)&v69 + 1) = v12;
    sub_1A07825B4(&v69, v59);
    swift_bridgeObjectRetain();
    char v14 = swift_isUniquelyReferenced_nonNull_native();
    v57[0] = v58;
    sub_1A08D97F0(v59, (uint64_t)v87, v14);
    swift_bridgeObjectRelease();
    sub_1A087B20C((uint64_t)v87);
  }
  else
  {
    sub_1A09ED5A4((uint64_t)v87, &v69);
    sub_1A087B20C((uint64_t)v87);
    sub_1A0783C7C((uint64_t)&v69);
  }
  *(void *)&long long v69 = sub_1A09F3E18();
  *((void *)&v69 + 1) = v15;
  sub_1A09F4648();
  uint64_t v16 = v1[7];
  if (v16)
  {
    uint64_t v17 = v1[6];
    *((void *)&v70 + 1) = v3;
    *(void *)&long long v69 = v17;
    *((void *)&v69 + 1) = v16;
    sub_1A07825B4(&v69, v59);
    swift_bridgeObjectRetain();
    char v18 = swift_isUniquelyReferenced_nonNull_native();
    v57[0] = v58;
    sub_1A08D97F0(v59, (uint64_t)v87, v18);
    swift_bridgeObjectRelease();
    sub_1A087B20C((uint64_t)v87);
  }
  else
  {
    sub_1A09ED5A4((uint64_t)v87, &v69);
    sub_1A087B20C((uint64_t)v87);
    sub_1A0783C7C((uint64_t)&v69);
  }
  *(void *)&long long v69 = sub_1A09F3E18();
  *((void *)&v69 + 1) = v19;
  sub_1A09F4648();
  uint64_t v20 = v1[9];
  if (v20)
  {
    uint64_t v21 = v1[8];
    *((void *)&v70 + 1) = v3;
    *(void *)&long long v69 = v21;
    *((void *)&v69 + 1) = v20;
    sub_1A07825B4(&v69, v59);
    swift_bridgeObjectRetain();
    char v22 = swift_isUniquelyReferenced_nonNull_native();
    v57[0] = v58;
    sub_1A08D97F0(v59, (uint64_t)v87, v22);
    swift_bridgeObjectRelease();
    sub_1A087B20C((uint64_t)v87);
  }
  else
  {
    sub_1A09ED5A4((uint64_t)v87, &v69);
    sub_1A087B20C((uint64_t)v87);
    sub_1A0783C7C((uint64_t)&v69);
  }
  *(void *)&long long v69 = sub_1A09F3E18();
  *((void *)&v69 + 1) = v23;
  sub_1A09F4648();
  uint64_t v24 = v1[11];
  if (v24)
  {
    uint64_t v25 = v1[10];
    *((void *)&v70 + 1) = v3;
    *(void *)&long long v69 = v25;
    *((void *)&v69 + 1) = v24;
    sub_1A07825B4(&v69, v59);
    swift_bridgeObjectRetain();
    char v26 = swift_isUniquelyReferenced_nonNull_native();
    v57[0] = v58;
    sub_1A08D97F0(v59, (uint64_t)v87, v26);
    swift_bridgeObjectRelease();
    sub_1A087B20C((uint64_t)v87);
  }
  else
  {
    sub_1A09ED5A4((uint64_t)v87, &v69);
    sub_1A087B20C((uint64_t)v87);
    sub_1A0783C7C((uint64_t)&v69);
  }
  *(void *)&long long v69 = sub_1A09F3E18();
  *((void *)&v69 + 1) = v27;
  sub_1A09F4648();
  uint64_t v28 = v1[13];
  if (v28)
  {
    uint64_t v29 = v1[12];
    *((void *)&v70 + 1) = v3;
    *(void *)&long long v69 = v29;
    *((void *)&v69 + 1) = v28;
    sub_1A07825B4(&v69, v59);
    swift_bridgeObjectRetain();
    char v30 = swift_isUniquelyReferenced_nonNull_native();
    v57[0] = v58;
    sub_1A08D97F0(v59, (uint64_t)v87, v30);
    swift_bridgeObjectRelease();
    sub_1A087B20C((uint64_t)v87);
  }
  else
  {
    sub_1A09ED5A4((uint64_t)v87, &v69);
    sub_1A087B20C((uint64_t)v87);
    sub_1A0783C7C((uint64_t)&v69);
  }
  *(void *)&long long v69 = sub_1A09F3E18();
  *((void *)&v69 + 1) = v31;
  sub_1A09F4648();
  sub_1A08AF448((uint64_t)(v1 + 14), (uint64_t)v68, &qword_1E94FB1A0);
  sub_1A08AF448((uint64_t)v68, (uint64_t)&v73, &qword_1E94FB1A0);
  if (v74)
  {
    sub_1A09ED5A4((uint64_t)v87, &v69);
    sub_1A087B20C((uint64_t)v87);
    sub_1A0783C7C((uint64_t)&v69);
  }
  else
  {
    *((void *)&v70 + 1) = MEMORY[0x1E4FBB808];
    *(void *)&long long v69 = v73;
    sub_1A07825B4(&v69, v59);
    char v32 = swift_isUniquelyReferenced_nonNull_native();
    v57[0] = v58;
    sub_1A08D97F0(v59, (uint64_t)v87, v32);
    swift_bridgeObjectRelease();
    sub_1A087B20C((uint64_t)v87);
  }
  *(void *)&long long v69 = sub_1A09F3E18();
  *((void *)&v69 + 1) = v33;
  sub_1A09F4648();
  sub_1A08AF448((uint64_t)(v1 + 16), (uint64_t)v67, &qword_1E94FB1A0);
  sub_1A08AF448((uint64_t)v67, (uint64_t)&v75, &qword_1E94FB1A0);
  if (v76)
  {
    sub_1A09ED5A4((uint64_t)v87, &v69);
    sub_1A087B20C((uint64_t)v87);
    sub_1A0783C7C((uint64_t)&v69);
  }
  else
  {
    *((void *)&v70 + 1) = MEMORY[0x1E4FBB808];
    *(void *)&long long v69 = v75;
    sub_1A07825B4(&v69, v59);
    char v34 = swift_isUniquelyReferenced_nonNull_native();
    v57[0] = v58;
    sub_1A08D97F0(v59, (uint64_t)v87, v34);
    swift_bridgeObjectRelease();
    sub_1A087B20C((uint64_t)v87);
  }
  *(void *)&long long v69 = sub_1A09F3E18();
  *((void *)&v69 + 1) = v35;
  sub_1A09F4648();
  sub_1A08AF448((uint64_t)v1 + 137, (uint64_t)&v66, &qword_1E94FB1A8);
  sub_1A08AF448((uint64_t)&v66, (uint64_t)&v77, &qword_1E94FB1A8);
  if (v77 == 2)
  {
    sub_1A09ED5A4((uint64_t)v87, &v69);
    sub_1A087B20C((uint64_t)v87);
    sub_1A0783C7C((uint64_t)&v69);
  }
  else
  {
    *((void *)&v70 + 1) = MEMORY[0x1E4FBB390];
    LOBYTE(v69) = v77;
    sub_1A07825B4(&v69, v59);
    char v36 = swift_isUniquelyReferenced_nonNull_native();
    v57[0] = v58;
    sub_1A08D97F0(v59, (uint64_t)v87, v36);
    swift_bridgeObjectRelease();
    sub_1A087B20C((uint64_t)v87);
  }
  *(void *)&long long v69 = sub_1A09F3E18();
  *((void *)&v69 + 1) = v37;
  sub_1A09F4648();
  sub_1A08AF448((uint64_t)(v1 + 18), (uint64_t)v65, &qword_1E94FB1B0);
  sub_1A08AF448((uint64_t)v65, (uint64_t)&v78, &qword_1E94FB1B0);
  if (v79)
  {
    sub_1A09ED5A4((uint64_t)v87, &v69);
    sub_1A087B20C((uint64_t)v87);
    sub_1A0783C7C((uint64_t)&v69);
  }
  else
  {
    *((void *)&v70 + 1) = MEMORY[0x1E4FBB550];
    *(void *)&long long v69 = v78;
    sub_1A07825B4(&v69, v59);
    char v38 = swift_isUniquelyReferenced_nonNull_native();
    v57[0] = v58;
    sub_1A08D97F0(v59, (uint64_t)v87, v38);
    swift_bridgeObjectRelease();
    sub_1A087B20C((uint64_t)v87);
  }
  *(void *)&long long v69 = sub_1A09F3E18();
  *((void *)&v69 + 1) = v39;
  sub_1A09F4648();
  sub_1A08AF448((uint64_t)v1 + 153, (uint64_t)&v64, &qword_1E94FB168);
  sub_1A08AF448((uint64_t)&v64, (uint64_t)&v80, &qword_1E94FB168);
  if (v80 == 4)
  {
    sub_1A09ED5A4((uint64_t)v87, &v69);
    sub_1A087B20C((uint64_t)v87);
    sub_1A0783C7C((uint64_t)&v69);
  }
  else
  {
    *((void *)&v70 + 1) = MEMORY[0x1E4FBB550];
    *(void *)&long long v69 = v80;
    sub_1A07825B4(&v69, v59);
    char v40 = swift_isUniquelyReferenced_nonNull_native();
    v57[0] = v58;
    sub_1A08D97F0(v59, (uint64_t)v87, v40);
    swift_bridgeObjectRelease();
    sub_1A087B20C((uint64_t)v87);
  }
  *(void *)&long long v69 = sub_1A09F3E18();
  *((void *)&v69 + 1) = v41;
  sub_1A09F4648();
  sub_1A08AF448((uint64_t)v1 + 154, (uint64_t)&v63, &qword_1E94FB1A8);
  sub_1A08AF448((uint64_t)&v63, (uint64_t)&v81, &qword_1E94FB1A8);
  if (v81 == 2)
  {
    sub_1A09ED5A4((uint64_t)v87, &v69);
    sub_1A087B20C((uint64_t)v87);
    sub_1A0783C7C((uint64_t)&v69);
  }
  else
  {
    *((void *)&v70 + 1) = MEMORY[0x1E4FBB390];
    LOBYTE(v69) = v81;
    sub_1A07825B4(&v69, v59);
    char v42 = swift_isUniquelyReferenced_nonNull_native();
    v57[0] = v58;
    sub_1A08D97F0(v59, (uint64_t)v87, v42);
    swift_bridgeObjectRelease();
    sub_1A087B20C((uint64_t)v87);
  }
  *(void *)&long long v69 = sub_1A09F3E18();
  *((void *)&v69 + 1) = v43;
  sub_1A09F4648();
  sub_1A08AF448((uint64_t)v1 + 155, (uint64_t)&v62, &qword_1E94FB1A8);
  sub_1A08AF448((uint64_t)&v62, (uint64_t)&v82, &qword_1E94FB1A8);
  if (v82 == 2)
  {
    sub_1A09ED5A4((uint64_t)v87, &v69);
    sub_1A087B20C((uint64_t)v87);
    sub_1A0783C7C((uint64_t)&v69);
  }
  else
  {
    *((void *)&v70 + 1) = MEMORY[0x1E4FBB390];
    LOBYTE(v69) = v82;
    sub_1A07825B4(&v69, v59);
    char v44 = swift_isUniquelyReferenced_nonNull_native();
    v57[0] = v58;
    sub_1A08D97F0(v59, (uint64_t)v87, v44);
    swift_bridgeObjectRelease();
    sub_1A087B20C((uint64_t)v87);
  }
  *(void *)&long long v69 = sub_1A09F3E18();
  *((void *)&v69 + 1) = v45;
  sub_1A09F4648();
  sub_1A08AF448((uint64_t)v1 + 156, (uint64_t)v61, &qword_1E94FB1B8);
  sub_1A08AF448((uint64_t)v61, (uint64_t)&v83, &qword_1E94FB1B8);
  if (v84)
  {
    sub_1A09ED5A4((uint64_t)v87, &v69);
    sub_1A087B20C((uint64_t)v87);
    sub_1A0783C7C((uint64_t)&v69);
  }
  else
  {
    *((void *)&v70 + 1) = MEMORY[0x1E4FBB470];
    LODWORD(v69) = v83;
    sub_1A07825B4(&v69, v59);
    char v46 = swift_isUniquelyReferenced_nonNull_native();
    v57[0] = v58;
    sub_1A08D97F0(v59, (uint64_t)v87, v46);
    swift_bridgeObjectRelease();
    sub_1A087B20C((uint64_t)v87);
  }
  *(void *)&long long v69 = sub_1A09F3E18();
  *((void *)&v69 + 1) = v47;
  sub_1A09F4648();
  sub_1A08AF448((uint64_t)v1 + 164, (uint64_t)v60, &qword_1E94FB1B8);
  sub_1A08AF448((uint64_t)v60, (uint64_t)&v85, &qword_1E94FB1B8);
  if (v86)
  {
    sub_1A09ED5A4((uint64_t)v87, &v69);
    sub_1A087B20C((uint64_t)v87);
    sub_1A0783C7C((uint64_t)&v69);
  }
  else
  {
    *((void *)&v70 + 1) = MEMORY[0x1E4FBB470];
    LODWORD(v69) = v85;
    sub_1A07825B4(&v69, v59);
    char v48 = swift_isUniquelyReferenced_nonNull_native();
    v57[0] = v58;
    sub_1A08D97F0(v59, (uint64_t)v87, v48);
    swift_bridgeObjectRelease();
    sub_1A087B20C((uint64_t)v87);
  }
  *(void *)&v87[0] = sub_1A09F3E18();
  *((void *)&v87[0] + 1) = v49;
  sub_1A09F4648();
  sub_1A08AF448((uint64_t)(v1 + 22), (uint64_t)v59, &qword_1E94FB178);
  sub_1A08AF448((uint64_t)v59, (uint64_t)v87, &qword_1E94FB178);
  if (BYTE1(v88) << 8 == 768)
  {
    sub_1A09ED5A4((uint64_t)v57, &v69);
    sub_1A087B20C((uint64_t)v57);
    sub_1A0783C7C((uint64_t)&v69);
  }
  else
  {
    long long v69 = v87[0];
    long long v70 = v87[1];
    long long v71 = v87[2];
    int v72 = v88;
    id v50 = sub_1A096D024();
    uint64_t v56 = sub_1A07856F8((uint64_t *)&unk_1E94F9030);
    *(void *)&long long v55 = v50;
    sub_1A07825B4(&v55, v54);
    char v51 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v53 = v58;
    unint64_t v58 = 0x8000000000000000;
    sub_1A08D97F0(v54, (uint64_t)v57, v51);
    unint64_t v58 = v53;
    swift_bridgeObjectRelease();
    sub_1A087B20C((uint64_t)v57);
  }
  return v58;
}

unint64_t sub_1A08CFFBC()
{
  unint64_t result = qword_1E94FB160;
  if (!qword_1E94FB160)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FB160);
  }
  return result;
}

unint64_t sub_1A08D0010()
{
  unint64_t result = qword_1E94FB170;
  if (!qword_1E94FB170)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FB170);
  }
  return result;
}

unint64_t sub_1A08D0064()
{
  unint64_t result = qword_1E94FB180;
  if (!qword_1E94FB180)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FB180);
  }
  return result;
}

void sub_1A08D00B8(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)&long long v149 = sub_1A09F3E18();
  *((void *)&v149 + 1) = v4;
  sub_1A09F4648();
  if (*(void *)(a1 + 16) && (unint64_t v5 = sub_1A087AB2C((uint64_t)&v143), (v6 & 1) != 0))
  {
    sub_1A0785268(*(void *)(a1 + 56) + 32 * v5, (uint64_t)&v149);
  }
  else
  {
    long long v149 = 0u;
    long long v150 = 0u;
  }
  sub_1A087B20C((uint64_t)&v143);
  if (*((void *)&v150 + 1))
  {
    int v7 = swift_dynamicCast();
    if (v7) {
      unint64_t v8 = v141;
    }
    else {
      unint64_t v8 = 0;
    }
    if (v7) {
      uint64_t v9 = v142;
    }
    else {
      uint64_t v9 = 0;
    }
  }
  else
  {
    sub_1A0783C7C((uint64_t)&v149);
    unint64_t v8 = 0;
    uint64_t v9 = 0;
  }
  *(void *)&long long v149 = sub_1A09F3E18();
  *((void *)&v149 + 1) = v10;
  sub_1A09F4648();
  if (*(void *)(a1 + 16) && (unint64_t v11 = sub_1A087AB2C((uint64_t)&v143), (v12 & 1) != 0))
  {
    sub_1A0785268(*(void *)(a1 + 56) + 32 * v11, (uint64_t)&v149);
  }
  else
  {
    long long v149 = 0u;
    long long v150 = 0u;
  }
  sub_1A087B20C((uint64_t)&v143);
  if (*((void *)&v150 + 1))
  {
    int v13 = swift_dynamicCast();
    if (v13) {
      unint64_t v14 = v141;
    }
    else {
      unint64_t v14 = 0;
    }
    if (v13) {
      uint64_t v15 = v142;
    }
    else {
      uint64_t v15 = 0;
    }
  }
  else
  {
    sub_1A0783C7C((uint64_t)&v149);
    unint64_t v14 = 0;
    uint64_t v15 = 0;
  }
  *(void *)&long long v149 = sub_1A09F3E18();
  *((void *)&v149 + 1) = v16;
  sub_1A09F4648();
  if (*(void *)(a1 + 16) && (unint64_t v17 = sub_1A087AB2C((uint64_t)&v143), (v18 & 1) != 0))
  {
    sub_1A0785268(*(void *)(a1 + 56) + 32 * v17, (uint64_t)&v149);
  }
  else
  {
    long long v149 = 0u;
    long long v150 = 0u;
  }
  sub_1A087B20C((uint64_t)&v143);
  if (*((void *)&v150 + 1))
  {
    int v19 = swift_dynamicCast();
    if (v19) {
      unint64_t v20 = v141;
    }
    else {
      unint64_t v20 = 0;
    }
    if (v19) {
      uint64_t v21 = v142;
    }
    else {
      uint64_t v21 = 0;
    }
  }
  else
  {
    sub_1A0783C7C((uint64_t)&v149);
    unint64_t v20 = 0;
    uint64_t v21 = 0;
  }
  *(void *)&long long v149 = sub_1A09F3E18();
  *((void *)&v149 + 1) = v22;
  sub_1A09F4648();
  if (*(void *)(a1 + 16) && (unint64_t v23 = sub_1A087AB2C((uint64_t)&v143), (v24 & 1) != 0))
  {
    sub_1A0785268(*(void *)(a1 + 56) + 32 * v23, (uint64_t)&v149);
  }
  else
  {
    long long v149 = 0u;
    long long v150 = 0u;
  }
  sub_1A087B20C((uint64_t)&v143);
  if (*((void *)&v150 + 1))
  {
    int v25 = swift_dynamicCast();
    if (v25) {
      unint64_t v26 = v141;
    }
    else {
      unint64_t v26 = 0;
    }
    if (v25) {
      uint64_t v27 = v142;
    }
    else {
      uint64_t v27 = 0;
    }
    uint64_t v139 = v27;
    unint64_t v140 = v26;
  }
  else
  {
    sub_1A0783C7C((uint64_t)&v149);
    uint64_t v139 = 0;
    unint64_t v140 = 0;
  }
  *(void *)&long long v149 = sub_1A09F3E18();
  *((void *)&v149 + 1) = v28;
  sub_1A09F4648();
  if (*(void *)(a1 + 16) && (unint64_t v29 = sub_1A087AB2C((uint64_t)&v143), (v30 & 1) != 0))
  {
    sub_1A0785268(*(void *)(a1 + 56) + 32 * v29, (uint64_t)&v149);
  }
  else
  {
    long long v149 = 0u;
    long long v150 = 0u;
  }
  sub_1A087B20C((uint64_t)&v143);
  if (*((void *)&v150 + 1))
  {
    int v31 = swift_dynamicCast();
    if (v31) {
      unint64_t v32 = v141;
    }
    else {
      unint64_t v32 = 0;
    }
    if (v31) {
      uint64_t v33 = v142;
    }
    else {
      uint64_t v33 = 0;
    }
    uint64_t v137 = v33;
    unint64_t v138 = v32;
  }
  else
  {
    sub_1A0783C7C((uint64_t)&v149);
    uint64_t v137 = 0;
    unint64_t v138 = 0;
  }
  *(void *)&long long v149 = sub_1A09F3E18();
  *((void *)&v149 + 1) = v34;
  sub_1A09F4648();
  if (*(void *)(a1 + 16) && (unint64_t v35 = sub_1A087AB2C((uint64_t)&v143), (v36 & 1) != 0))
  {
    sub_1A0785268(*(void *)(a1 + 56) + 32 * v35, (uint64_t)&v149);
  }
  else
  {
    long long v149 = 0u;
    long long v150 = 0u;
  }
  sub_1A087B20C((uint64_t)&v143);
  if (*((void *)&v150 + 1))
  {
    int v37 = swift_dynamicCast();
    if (v37) {
      unint64_t v38 = v141;
    }
    else {
      unint64_t v38 = 0;
    }
    if (v37) {
      uint64_t v39 = v142;
    }
    else {
      uint64_t v39 = 0;
    }
    uint64_t v135 = v39;
    unint64_t v136 = v38;
  }
  else
  {
    sub_1A0783C7C((uint64_t)&v149);
    uint64_t v135 = 0;
    unint64_t v136 = 0;
  }
  *(void *)&long long v149 = sub_1A09F3E18();
  *((void *)&v149 + 1) = v40;
  sub_1A09F4648();
  if (*(void *)(a1 + 16) && (unint64_t v41 = sub_1A087AB2C((uint64_t)&v143), (v42 & 1) != 0))
  {
    sub_1A0785268(*(void *)(a1 + 56) + 32 * v41, (uint64_t)&v149);
  }
  else
  {
    long long v149 = 0u;
    long long v150 = 0u;
  }
  sub_1A087B20C((uint64_t)&v143);
  if (*((void *)&v150 + 1))
  {
    int v43 = swift_dynamicCast();
    if (v43) {
      unint64_t v44 = v141;
    }
    else {
      unint64_t v44 = 0;
    }
    if (v43) {
      uint64_t v45 = v142;
    }
    else {
      uint64_t v45 = 0;
    }
    uint64_t v133 = v45;
    unint64_t v134 = v44;
  }
  else
  {
    sub_1A0783C7C((uint64_t)&v149);
    uint64_t v133 = 0;
    unint64_t v134 = 0;
  }
  *(void *)&long long v149 = sub_1A09F3E18();
  *((void *)&v149 + 1) = v46;
  sub_1A09F4648();
  if (*(void *)(a1 + 16) && (unint64_t v47 = sub_1A087AB2C((uint64_t)&v143), (v48 & 1) != 0))
  {
    sub_1A0785268(*(void *)(a1 + 56) + 32 * v47, (uint64_t)&v149);
  }
  else
  {
    long long v149 = 0u;
    long long v150 = 0u;
  }
  sub_1A087B20C((uint64_t)&v143);
  if (*((void *)&v150 + 1))
  {
    int v49 = swift_dynamicCast();
    unint64_t v50 = v141;
    if (!v49) {
      unint64_t v50 = 0;
    }
    unint64_t v132 = v50;
    char v51 = v49 ^ 1;
  }
  else
  {
    sub_1A0783C7C((uint64_t)&v149);
    unint64_t v132 = 0;
    char v51 = 1;
  }
  char v131 = v51;
  *(void *)&long long v149 = sub_1A09F3E18();
  *((void *)&v149 + 1) = v52;
  sub_1A09F4648();
  if (*(void *)(a1 + 16) && (unint64_t v53 = sub_1A087AB2C((uint64_t)&v143), (v54 & 1) != 0))
  {
    sub_1A0785268(*(void *)(a1 + 56) + 32 * v53, (uint64_t)&v149);
  }
  else
  {
    long long v149 = 0u;
    long long v150 = 0u;
  }
  sub_1A087B20C((uint64_t)&v143);
  if (*((void *)&v150 + 1))
  {
    int v55 = swift_dynamicCast();
    unint64_t v56 = v141;
    if (!v55) {
      unint64_t v56 = 0;
    }
    unint64_t v130 = v56;
    char v57 = v55 ^ 1;
  }
  else
  {
    sub_1A0783C7C((uint64_t)&v149);
    unint64_t v130 = 0;
    char v57 = 1;
  }
  char v129 = v57;
  *(void *)&long long v149 = sub_1A09F3E18();
  *((void *)&v149 + 1) = v58;
  sub_1A09F4648();
  if (*(void *)(a1 + 16) && (unint64_t v59 = sub_1A087AB2C((uint64_t)&v143), (v60 & 1) != 0))
  {
    sub_1A0785268(*(void *)(a1 + 56) + 32 * v59, (uint64_t)&v149);
  }
  else
  {
    long long v149 = 0u;
    long long v150 = 0u;
  }
  sub_1A087B20C((uint64_t)&v143);
  if (*((void *)&v150 + 1))
  {
    int v61 = swift_dynamicCast();
    char v62 = v141;
    if (!v61) {
      char v62 = 2;
    }
  }
  else
  {
    sub_1A0783C7C((uint64_t)&v149);
    char v62 = 2;
  }
  char v128 = v62;
  *(void *)&long long v149 = sub_1A09F3E18();
  *((void *)&v149 + 1) = v63;
  sub_1A09F4648();
  if (*(void *)(a1 + 16) && (unint64_t v64 = sub_1A087AB2C((uint64_t)&v143), (v65 & 1) != 0))
  {
    sub_1A0785268(*(void *)(a1 + 56) + 32 * v64, (uint64_t)&v149);
  }
  else
  {
    long long v149 = 0u;
    long long v150 = 0u;
  }
  sub_1A087B20C((uint64_t)&v143);
  if (*((void *)&v150 + 1))
  {
    int v66 = swift_dynamicCast();
    unint64_t v67 = v141;
    if (!v66) {
      unint64_t v67 = 0;
    }
    unint64_t v127 = v67;
    char v68 = v66 ^ 1;
  }
  else
  {
    sub_1A0783C7C((uint64_t)&v149);
    unint64_t v127 = 0;
    char v68 = 1;
  }
  char v126 = v68;
  *(void *)&long long v149 = sub_1A09F3E18();
  *((void *)&v149 + 1) = v69;
  sub_1A09F4648();
  if (*(void *)(a1 + 16) && (unint64_t v70 = sub_1A087AB2C((uint64_t)&v143), (v71 & 1) != 0))
  {
    sub_1A0785268(*(void *)(a1 + 56) + 32 * v70, (uint64_t)&v149);
  }
  else
  {
    long long v149 = 0u;
    long long v150 = 0u;
  }
  sub_1A087B20C((uint64_t)&v143);
  if (*((void *)&v150 + 1))
  {
    int v72 = swift_dynamicCast();
    if (v72) {
      unint64_t v73 = v141;
    }
    else {
      unint64_t v73 = 0;
    }
    char v74 = v72 ^ 1;
  }
  else
  {
    sub_1A0783C7C((uint64_t)&v149);
    unint64_t v73 = 0;
    char v74 = 1;
  }
  char v125 = sub_1A0955FC0(v73, v74);
  *(void *)&long long v149 = sub_1A09F3E18();
  *((void *)&v149 + 1) = v75;
  sub_1A09F4648();
  if (*(void *)(a1 + 16) && (unint64_t v76 = sub_1A087AB2C((uint64_t)&v143), (v77 & 1) != 0))
  {
    sub_1A0785268(*(void *)(a1 + 56) + 32 * v76, (uint64_t)&v149);
  }
  else
  {
    long long v149 = 0u;
    long long v150 = 0u;
  }
  sub_1A087B20C((uint64_t)&v143);
  if (*((void *)&v150 + 1))
  {
    int v78 = swift_dynamicCast();
    char v79 = v141;
    if (!v78) {
      char v79 = 2;
    }
  }
  else
  {
    sub_1A0783C7C((uint64_t)&v149);
    char v79 = 2;
  }
  char v124 = v79;
  *(void *)&long long v149 = sub_1A09F3E18();
  *((void *)&v149 + 1) = v80;
  sub_1A09F4648();
  if (*(void *)(a1 + 16) && (unint64_t v81 = sub_1A087AB2C((uint64_t)&v143), (v82 & 1) != 0))
  {
    sub_1A0785268(*(void *)(a1 + 56) + 32 * v81, (uint64_t)&v149);
  }
  else
  {
    long long v149 = 0u;
    long long v150 = 0u;
  }
  sub_1A087B20C((uint64_t)&v143);
  if (*((void *)&v150 + 1))
  {
    int v83 = swift_dynamicCast();
    char v84 = v141;
    if (!v83) {
      char v84 = 2;
    }
  }
  else
  {
    sub_1A0783C7C((uint64_t)&v149);
    char v84 = 2;
  }
  char v123 = v84;
  *(void *)&long long v149 = sub_1A09F3E18();
  *((void *)&v149 + 1) = v85;
  sub_1A09F4648();
  if (*(void *)(a1 + 16) && (unint64_t v86 = sub_1A087AB2C((uint64_t)&v143), (v87 & 1) != 0))
  {
    sub_1A0785268(*(void *)(a1 + 56) + 32 * v86, (uint64_t)&v149);
  }
  else
  {
    long long v149 = 0u;
    long long v150 = 0u;
  }
  sub_1A087B20C((uint64_t)&v143);
  if (*((void *)&v150 + 1))
  {
    int v88 = swift_dynamicCast();
    int v89 = v141;
    if (!v88) {
      int v89 = 0;
    }
    int v122 = v89;
    char v90 = v88 ^ 1;
  }
  else
  {
    sub_1A0783C7C((uint64_t)&v149);
    int v122 = 0;
    char v90 = 1;
  }
  char v121 = v90;
  *(void *)&long long v149 = sub_1A09F3E18();
  *((void *)&v149 + 1) = v91;
  sub_1A09F4648();
  if (*(void *)(a1 + 16) && (unint64_t v92 = sub_1A087AB2C((uint64_t)&v143), (v93 & 1) != 0))
  {
    sub_1A0785268(*(void *)(a1 + 56) + 32 * v92, (uint64_t)&v149);
  }
  else
  {
    long long v149 = 0u;
    long long v150 = 0u;
  }
  sub_1A087B20C((uint64_t)&v143);
  if (*((void *)&v150 + 1))
  {
    int v94 = swift_dynamicCast();
    int v95 = v141;
    if (!v94) {
      int v95 = 0;
    }
    int v120 = v95;
    char v96 = v94 ^ 1;
  }
  else
  {
    sub_1A0783C7C((uint64_t)&v149);
    int v120 = 0;
    char v96 = 1;
  }
  char v119 = v96;
  sub_1A09F3E18();
  sub_1A09F4648();
  if (*(void *)(a1 + 16) && (unint64_t v97 = sub_1A087AB2C((uint64_t)&v143), (v98 & 1) != 0))
  {
    sub_1A0785268(*(void *)(a1 + 56) + 32 * v97, (uint64_t)&v149);
  }
  else
  {
    long long v149 = 0u;
    long long v150 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_1A087B20C((uint64_t)&v143);
  if (!*((void *)&v150 + 1))
  {
    sub_1A0783C7C((uint64_t)&v149);
    goto LABEL_185;
  }
  sub_1A07856F8((uint64_t *)&unk_1E94F9030);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_185:
    uint64_t v100 = 0;
    uint64_t v101 = 0;
    long long v108 = 0uLL;
    int v114 = 768;
    goto LABEL_186;
  }
  v99 = (void *)sub_1A09F3CE8();
  swift_bridgeObjectRelease();
  IMPreviewConstraintsFromDictionary(v99, (uint64_t)&v143);
  uint64_t v100 = v143;
  long long v115 = v144;
  uint64_t v101 = v145;
  uint64_t v117 = v21;
  uint64_t v118 = v15;
  unint64_t v102 = v14;
  uint64_t v103 = v9;
  unint64_t v104 = v8;
  int v105 = v146;
  unint64_t v106 = v20;
  int v107 = v147;
  int v116 = v148;

  long long v108 = v115;
  BOOL v109 = v105 == 0;
  unint64_t v8 = v104;
  uint64_t v9 = v103;
  unint64_t v14 = v102;
  if (v109) {
    int v110 = 0;
  }
  else {
    int v110 = 256;
  }
  BOOL v109 = v107 == 0;
  unint64_t v20 = v106;
  uint64_t v21 = v117;
  uint64_t v15 = v118;
  if (v109) {
    int v111 = 0;
  }
  else {
    int v111 = 0x10000;
  }
  int v112 = v111 | v110;
  if (v116) {
    int v113 = 0x1000000;
  }
  else {
    int v113 = 0;
  }
  int v114 = v112 | v113;
LABEL_186:
  LOBYTE(v143) = v131;
  LOBYTE(v149) = v129;
  *(void *)a2 = v8;
  *(void *)(a2 + 8) = v9;
  *(void *)(a2 + 16) = v14;
  *(void *)(a2 + 24) = v15;
  *(void *)(a2 + 32) = v20;
  *(void *)(a2 + 40) = v21;
  *(void *)(a2 + 48) = v140;
  *(void *)(a2 + 56) = v139;
  *(void *)(a2 + 64) = v138;
  *(void *)(a2 + 72) = v137;
  *(void *)(a2 + 80) = v136;
  *(void *)(a2 + 88) = v135;
  *(void *)(a2 + 96) = v134;
  *(void *)(a2 + 104) = v133;
  *(void *)(a2 + 112) = v132;
  *(unsigned char *)(a2 + 120) = v143;
  *(void *)(a2 + 128) = v130;
  *(unsigned char *)(a2 + 136) = v149;
  *(unsigned char *)(a2 + 137) = v128;
  *(void *)(a2 + 144) = v127;
  *(unsigned char *)(a2 + 152) = v126;
  *(unsigned char *)(a2 + 153) = v125;
  *(unsigned char *)(a2 + 154) = v124;
  *(unsigned char *)(a2 + 155) = v123;
  *(_DWORD *)(a2 + 156) = v122;
  *(unsigned char *)(a2 + 160) = v121;
  *(_DWORD *)(a2 + 164) = v120;
  *(unsigned char *)(a2 + 168) = v119;
  *(void *)(a2 + 176) = v100;
  *(void *)(a2 + 184) = 0;
  *(_OWORD *)(a2 + 192) = v108;
  *(void *)(a2 + 208) = 0;
  *(void *)(a2 + 216) = v101;
  *(_DWORD *)(a2 + 224) = v114;
}

uint64_t sub_1A08D0E9C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 7107189 && a2 == 0xE300000000000000;
  if (v2 || (sub_1A09F4B28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x44496D616461 && a2 == 0xE600000000000000 || (sub_1A09F4B28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x656D614E707061 && a2 == 0xE700000000000000 || (sub_1A09F4B28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x4449656C646E7562 && a2 == 0xE800000000000000 || (sub_1A09F4B28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001A0A34560 || (sub_1A09F4B28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6853746E656D6F6DLL && a2 == 0xEE004C5255657261 || (sub_1A09F4B28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x5574657373416870 && a2 == 0xEB00000000444955 || (sub_1A09F4B28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x726566736E617274 && a2 == 0xED00007865646E49 || (sub_1A09F4B28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x756F437465737361 && a2 == 0xEA0000000000746ELL || (sub_1A09F4B28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001A0A34580 || (sub_1A09F4B28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001A0A345A0 || (sub_1A09F4B28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001A0A345C0 || (sub_1A09F4B28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001A0A345E0 || (sub_1A09F4B28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x80000001A0A34600 || (sub_1A09F4B28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x80000001A0A34620 || (sub_1A09F4B28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else if (a1 == 0xD00000000000001BLL && a2 == 0x80000001A0A34640 || (sub_1A09F4B28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 15;
  }
  else if (a1 == 0xD00000000000001CLL && a2 == 0x80000001A0A34660)
  {
    swift_bridgeObjectRelease();
    return 16;
  }
  else
  {
    char v6 = sub_1A09F4B28();
    swift_bridgeObjectRelease();
    if (v6) {
      return 16;
    }
    else {
      return 17;
    }
  }
}

uint64_t sub_1A08D1558@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_1A07856F8(&qword_1E94FB188);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  unint64_t v8 = (char *)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = a1[3];
  uint64_t v133 = a1;
  sub_1A086F45C(a1, v9);
  sub_1A08CFFBC();
  sub_1A09F4CA8();
  if (v2) {
    return _s17IMSharedUtilities29RemoteIntentBroadcastEncodingVwxx_0((uint64_t)v133);
  }
  uint64_t v10 = v6;
  uint64_t v70 = a2;
  LOBYTE(v92[0]) = 0;
  uint64_t v11 = sub_1A09F4828();
  uint64_t v13 = v12;
  LOBYTE(v92[0]) = 1;
  swift_bridgeObjectRetain();
  uint64_t v69 = sub_1A09F4828();
  LOBYTE(v92[0]) = 2;
  uint64_t v15 = v14;
  swift_bridgeObjectRetain();
  uint64_t v16 = sub_1A09F4828();
  uint64_t v76 = v15;
  uint64_t v68 = v16;
  LOBYTE(v92[0]) = 3;
  uint64_t v18 = v17;
  swift_bridgeObjectRetain();
  uint64_t v19 = sub_1A09F4828();
  uint64_t v75 = v18;
  uint64_t v67 = v19;
  LOBYTE(v92[0]) = 4;
  uint64_t v21 = v20;
  swift_bridgeObjectRetain();
  uint64_t v22 = sub_1A09F4828();
  uint64_t v74 = v21;
  uint64_t v66 = v22;
  LOBYTE(v92[0]) = 5;
  uint64_t v24 = v23;
  swift_bridgeObjectRetain();
  uint64_t v25 = sub_1A09F4828();
  uint64_t v73 = v24;
  uint64_t v65 = v25;
  LOBYTE(v92[0]) = 6;
  uint64_t v27 = v26;
  swift_bridgeObjectRetain();
  uint64_t v28 = sub_1A09F4828();
  uint64_t v72 = v27;
  uint64_t v64 = v28;
  LOBYTE(v92[0]) = 7;
  uint64_t v30 = v29;
  swift_bridgeObjectRetain();
  uint64_t v31 = sub_1A09F4878();
  uint64_t v71 = v30;
  uint64_t v63 = v31;
  LOBYTE(v30) = v32;
  char v132 = v32 & 1;
  LOBYTE(v92[0]) = 8;
  uint64_t v62 = sub_1A09F4878();
  int v60 = v33;
  char v130 = v33 & 1;
  LOBYTE(v92[0]) = 9;
  int v61 = sub_1A09F4838();
  LOBYTE(v92[0]) = 10;
  uint64_t v58 = sub_1A09F4868();
  LODWORD(v59) = v34;
  char v127 = v34 & 1;
  LOBYTE(v77) = 11;
  sub_1A08D2040();
  sub_1A09F4888();
  int v57 = LOBYTE(v92[0]);
  LOBYTE(v92[0]) = 12;
  int v56 = sub_1A09F4838();
  LOBYTE(v92[0]) = 13;
  int v55 = sub_1A09F4838();
  LOBYTE(v92[0]) = 14;
  unint64_t v54 = sub_1A09F4858();
  uint64_t v52 = HIDWORD(v54) & 1;
  char v126 = BYTE4(v54) & 1;
  LOBYTE(v92[0]) = 15;
  unint64_t v53 = sub_1A09F4858();
  uint64_t v51 = HIDWORD(v53) & 1;
  char v123 = BYTE4(v53) & 1;
  char v117 = 16;
  sub_1A08D2094();
  sub_1A09F4888();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v5);
  long long v49 = v118;
  BYTE8(v84) = v30 & 1;
  BYTE8(v85) = v60 & 1;
  long long v50 = v119;
  BYTE8(v86) = v59 & 1;
  LOBYTE(v87) = v52;
  uint64_t v59 = *((void *)&v120 + 1);
  uint64_t v52 = v120;
  BYTE8(v87) = v51;
  int v60 = v121;
  *(void *)&long long v77 = v11;
  *((void *)&v77 + 1) = v13;
  *(void *)&long long v78 = v69;
  *((void *)&v78 + 1) = v76;
  *(void *)&long long v79 = v68;
  uint64_t v35 = v74;
  *((void *)&v79 + 1) = v75;
  *(void *)&long long v80 = v67;
  *((void *)&v80 + 1) = v74;
  uint64_t v36 = v73;
  *(void *)&long long v81 = v66;
  *((void *)&v81 + 1) = v73;
  *(void *)&long long v82 = v65;
  uint64_t v37 = v71;
  *((void *)&v82 + 1) = v72;
  *(void *)&long long v83 = v64;
  *((void *)&v83 + 1) = v71;
  *(void *)&long long v84 = v63;
  *(void *)&long long v85 = v62;
  BYTE9(v85) = v61;
  *(void *)&long long v86 = v58;
  BYTE9(v86) = v57;
  BYTE10(v86) = v56;
  BYTE11(v86) = v55;
  HIDWORD(v86) = v54;
  DWORD1(v87) = v53;
  long long v88 = v118;
  long long v89 = v119;
  long long v90 = v120;
  int v91 = v121;
  sub_1A08D20E8((uint64_t)&v77);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v38 = v75;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v39 = v72;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  _s17IMSharedUtilities29RemoteIntentBroadcastEncodingVwxx_0((uint64_t)v133);
  v92[0] = v11;
  v92[1] = v13;
  v92[2] = v69;
  v92[3] = v76;
  v92[4] = v68;
  v92[5] = v38;
  v92[6] = v67;
  v92[7] = v35;
  v92[8] = v66;
  v92[9] = v36;
  v92[10] = v65;
  v92[11] = v39;
  v92[12] = v64;
  v92[13] = v37;
  v92[14] = v63;
  char v93 = v132;
  *(_DWORD *)&v94[3] = *(_DWORD *)&v131[3];
  *(_DWORD *)int v94 = *(_DWORD *)v131;
  uint64_t v95 = v62;
  char v96 = v130;
  char v97 = v61;
  int v98 = v128;
  __int16 v99 = v129;
  uint64_t v100 = v58;
  char v101 = v127;
  char v102 = v57;
  char v103 = v56;
  char v104 = v55;
  int v105 = v54;
  char v106 = v126;
  char v108 = v125;
  __int16 v107 = v124;
  int v109 = v53;
  char v110 = v123;
  *(_DWORD *)&v111[3] = *(_DWORD *)&v122[3];
  *(_DWORD *)int v111 = *(_DWORD *)v122;
  long long v112 = v49;
  long long v113 = v50;
  uint64_t v114 = v52;
  uint64_t v115 = v59;
  int v116 = v60;
  uint64_t result = sub_1A08D2174((uint64_t)v92);
  long long v41 = v90;
  uint64_t v42 = v70;
  *(_OWORD *)(v70 + 192) = v89;
  *(_OWORD *)(v42 + 208) = v41;
  *(_DWORD *)(v42 + 224) = v91;
  long long v43 = v86;
  *(_OWORD *)(v42 + 128) = v85;
  *(_OWORD *)(v42 + 144) = v43;
  long long v44 = v88;
  *(_OWORD *)(v42 + 160) = v87;
  *(_OWORD *)(v42 + 176) = v44;
  long long v45 = v82;
  *(_OWORD *)(v42 + 64) = v81;
  *(_OWORD *)(v42 + 80) = v45;
  long long v46 = v84;
  *(_OWORD *)(v42 + 96) = v83;
  *(_OWORD *)(v42 + 112) = v46;
  long long v47 = v78;
  *(_OWORD *)uint64_t v42 = v77;
  *(_OWORD *)(v42 + 16) = v47;
  long long v48 = v80;
  *(_OWORD *)(v42 + 32) = v79;
  *(_OWORD *)(v42 + 48) = v48;
  return result;
}

unint64_t sub_1A08D2040()
{
  unint64_t result = qword_1E94FB190;
  if (!qword_1E94FB190)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FB190);
  }
  return result;
}

unint64_t sub_1A08D2094()
{
  unint64_t result = qword_1E94FB198;
  if (!qword_1E94FB198)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FB198);
  }
  return result;
}

uint64_t sub_1A08D20E8(uint64_t a1)
{
  return a1;
}

uint64_t sub_1A08D2174(uint64_t a1)
{
  return a1;
}

uint64_t getEnumTagSinglePayload for RemoteIntentFileTransferAttributionInfo.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF0) {
    goto LABEL_17;
  }
  if (a2 + 16 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 16) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 16;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 16;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 16;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x11;
  int v8 = v6 - 17;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for RemoteIntentFileTransferAttributionInfo.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 16 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 16) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF0) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xEF)
  {
    unsigned int v6 = ((a2 - 240) >> 8) + 1;
    *unint64_t result = a2 + 16;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A08D235CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 16;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RemoteIntentFileTransferAttributionInfo.CodingKeys()
{
  return &type metadata for RemoteIntentFileTransferAttributionInfo.CodingKeys;
}

unint64_t sub_1A08D2398()
{
  unint64_t result = qword_1E94FB1C0;
  if (!qword_1E94FB1C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FB1C0);
  }
  return result;
}

unint64_t sub_1A08D23F0()
{
  unint64_t result = qword_1E94FB1C8;
  if (!qword_1E94FB1C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FB1C8);
  }
  return result;
}

unint64_t sub_1A08D2448()
{
  unint64_t result = qword_1E94FB1D0;
  if (!qword_1E94FB1D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FB1D0);
  }
  return result;
}

uint64_t SenderContext.isFromMe.getter()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR___IMSenderContext_Impl_isFromMe);
}

uint64_t sub_1A08D24E4()
{
  if (*(unsigned char *)(v0 + OBJC_IVAR___IMSenderContext_Impl_isKnownSender)) {
    return 1;
  }
  else {
    return *(unsigned __int8 *)(v0 + OBJC_IVAR___IMSenderContext_Impl_isFromMe);
  }
}

uint64_t SenderContext.serviceName.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR___IMSenderContext_Impl_serviceName);
  swift_bridgeObjectRetain();
  return v1;
}

id sub_1A08D25B8(char a1)
{
  int v2 = (objc_class *)type metadata accessor for SenderContext();
  int v3 = objc_allocWithZone(v2);
  v3[OBJC_IVAR___IMSenderContext_Impl_isKnownSender] = a1;
  v3[OBJC_IVAR___IMSenderContext_Impl_isFromMe] = 0;
  unsigned int v4 = &v3[OBJC_IVAR___IMSenderContext_Impl_serviceName];
  *unsigned int v4 = 0;
  v4[1] = 0;
  v6.receiver = v3;
  v6.super_class = v2;
  return objc_msgSendSuper2(&v6, sel_init);
}

uint64_t type metadata accessor for SenderContext()
{
  return self;
}

id sub_1A08D26CC()
{
  uint64_t v0 = (objc_class *)type metadata accessor for SenderContext();
  uint64_t v1 = objc_allocWithZone(v0);
  v1[OBJC_IVAR___IMSenderContext_Impl_isKnownSender] = 1;
  v1[OBJC_IVAR___IMSenderContext_Impl_isFromMe] = 1;
  int v2 = &v1[OBJC_IVAR___IMSenderContext_Impl_serviceName];
  *int v2 = 0;
  v2[1] = 0;
  v4.receiver = v1;
  v4.super_class = v0;
  return objc_msgSendSuper2(&v4, sel_init);
}

id sub_1A08D27BC()
{
  uint64_t v0 = (objc_class *)type metadata accessor for SenderContext();
  uint64_t v1 = objc_allocWithZone(v0);
  v1[OBJC_IVAR___IMSenderContext_Impl_isKnownSender] = 0;
  v1[OBJC_IVAR___IMSenderContext_Impl_isFromMe] = 0;
  int v2 = &v1[OBJC_IVAR___IMSenderContext_Impl_serviceName];
  *int v2 = 0;
  v2[1] = 0;
  v4.receiver = v1;
  v4.super_class = v0;
  return objc_msgSendSuper2(&v4, sel_init);
}

id sub_1A08D28A4()
{
  uint64_t v0 = (objc_class *)type metadata accessor for SenderContext();
  uint64_t v1 = objc_allocWithZone(v0);
  v1[OBJC_IVAR___IMSenderContext_Impl_isKnownSender] = 1;
  v1[OBJC_IVAR___IMSenderContext_Impl_isFromMe] = 0;
  int v2 = &v1[OBJC_IVAR___IMSenderContext_Impl_serviceName];
  *int v2 = 0;
  v2[1] = 0;
  v4.receiver = v1;
  v4.super_class = v0;
  return objc_msgSendSuper2(&v4, sel_init);
}

id sub_1A08D2994(char a1, uint64_t a2, uint64_t a3)
{
  objc_super v6 = (objc_class *)type metadata accessor for SenderContext();
  BOOL v7 = objc_allocWithZone(v6);
  v7[OBJC_IVAR___IMSenderContext_Impl_isKnownSender] = a1;
  v7[OBJC_IVAR___IMSenderContext_Impl_isFromMe] = 0;
  int v8 = &v7[OBJC_IVAR___IMSenderContext_Impl_serviceName];
  *int v8 = a2;
  v8[1] = a3;
  v10.receiver = v7;
  v10.super_class = v6;
  swift_bridgeObjectRetain();
  return objc_msgSendSuper2(&v10, sel_init);
}

id sub_1A08D2AC8(uint64_t a1, uint64_t a2)
{
  objc_super v4 = (objc_class *)type metadata accessor for SenderContext();
  uint64_t v5 = objc_allocWithZone(v4);
  v5[OBJC_IVAR___IMSenderContext_Impl_isKnownSender] = 1;
  v5[OBJC_IVAR___IMSenderContext_Impl_isFromMe] = 1;
  objc_super v6 = &v5[OBJC_IVAR___IMSenderContext_Impl_serviceName];
  *objc_super v6 = a1;
  v6[1] = a2;
  v8.receiver = v5;
  v8.super_class = v4;
  swift_bridgeObjectRetain();
  return objc_msgSendSuper2(&v8, sel_init);
}

id sub_1A08D2BFC(uint64_t a1, uint64_t a2)
{
  objc_super v4 = (objc_class *)type metadata accessor for SenderContext();
  uint64_t v5 = objc_allocWithZone(v4);
  v5[OBJC_IVAR___IMSenderContext_Impl_isKnownSender] = 0;
  v5[OBJC_IVAR___IMSenderContext_Impl_isFromMe] = 0;
  objc_super v6 = &v5[OBJC_IVAR___IMSenderContext_Impl_serviceName];
  *objc_super v6 = a1;
  v6[1] = a2;
  v8.receiver = v5;
  v8.super_class = v4;
  swift_bridgeObjectRetain();
  return objc_msgSendSuper2(&v8, sel_init);
}

id sub_1A08D2D28(uint64_t a1, uint64_t a2)
{
  objc_super v4 = (objc_class *)type metadata accessor for SenderContext();
  uint64_t v5 = objc_allocWithZone(v4);
  v5[OBJC_IVAR___IMSenderContext_Impl_isKnownSender] = 1;
  v5[OBJC_IVAR___IMSenderContext_Impl_isFromMe] = 0;
  objc_super v6 = &v5[OBJC_IVAR___IMSenderContext_Impl_serviceName];
  *objc_super v6 = a1;
  v6[1] = a2;
  v8.receiver = v5;
  v8.super_class = v4;
  swift_bridgeObjectRetain();
  return objc_msgSendSuper2(&v8, sel_init);
}

uint64_t static SenderContext.supportsSecureCoding.getter()
{
  return byte_1E94FB1E0;
}

uint64_t static SenderContext.supportsSecureCoding.setter(char a1)
{
  uint64_t result = swift_beginAccess();
  byte_1E94FB1E0 = a1;
  return result;
}

uint64_t (*static SenderContext.supportsSecureCoding.modify())()
{
  return j__swift_endAccess;
}

void sub_1A08D2FCC(void *a1)
{
  uint64_t v3 = *(unsigned __int8 *)(v1 + OBJC_IVAR___IMSenderContext_Impl_isKnownSender);
  objc_super v4 = (void *)sub_1A09F3DE8();
  objc_msgSend(a1, sel_encodeBool_forKey_, v3, v4);

  uint64_t v5 = *(unsigned __int8 *)(v1 + OBJC_IVAR___IMSenderContext_Impl_isFromMe);
  objc_super v6 = (void *)sub_1A09F3DE8();
  objc_msgSend(a1, sel_encodeBool_forKey_, v5, v6);

  if (*(void *)(v1 + OBJC_IVAR___IMSenderContext_Impl_serviceName + 8)) {
    uint64_t v7 = sub_1A09F3DE8();
  }
  else {
    uint64_t v7 = 0;
  }
  id v8 = (id)sub_1A09F3DE8();
  objc_msgSend(a1, sel_encodeObject_forKey_, v7, v8);
  swift_unknownObjectRelease();
}

id SenderContext.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  id v4 = sub_1A08D3300(a1);

  return v4;
}

id SenderContext.init(coder:)(void *a1)
{
  id v2 = sub_1A08D3300(a1);

  return v2;
}

id SenderContext.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

void SenderContext.init()()
{
}

id SenderContext.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SenderContext();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id sub_1A08D3300(void *a1)
{
  id v3 = v1;
  id v4 = (void *)sub_1A09F3DE8();
  unsigned __int8 v5 = objc_msgSend(a1, sel_decodeBoolForKey_, v4);

  v3[OBJC_IVAR___IMSenderContext_Impl_isKnownSender] = v5;
  objc_super v6 = (void *)sub_1A09F3DE8();
  unsigned __int8 v7 = objc_msgSend(a1, sel_decodeBoolForKey_, v6);

  v3[OBJC_IVAR___IMSenderContext_Impl_isFromMe] = v7;
  id v8 = (void *)sub_1A09F3DE8();
  id v9 = objc_msgSend(a1, sel_decodeObjectForKey_, v8);

  if (v9)
  {
    sub_1A09F4588();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v18, 0, sizeof(v18));
  }
  sub_1A0784BA0((uint64_t)v18, (uint64_t)v19);
  if (v20)
  {
    int v10 = swift_dynamicCast();
    uint64_t v11 = v15;
    uint64_t v12 = v16;
    if (!v10)
    {
      uint64_t v11 = 0;
      uint64_t v12 = 0;
    }
  }
  else
  {
    sub_1A0783C7C((uint64_t)v19);
    uint64_t v11 = 0;
    uint64_t v12 = 0;
  }
  uint64_t v13 = &v3[OBJC_IVAR___IMSenderContext_Impl_serviceName];
  *uint64_t v13 = v11;
  v13[1] = v12;

  v17.receiver = v3;
  v17.super_class = (Class)type metadata accessor for SenderContext();
  return objc_msgSendSuper2(&v17, sel_init);
}

uint64_t method lookup function for SenderContext(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SenderContext);
}

uint64_t dispatch thunk of SenderContext.isTrustedSender.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x68))();
}

uint64_t dispatch thunk of static SenderContext.makeContextWithKnownSender(_:)()
{
  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t dispatch thunk of static SenderContext.makeFromMeContext()()
{
  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t dispatch thunk of static SenderContext.makeUntrustedContext()()
{
  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t dispatch thunk of static SenderContext.makeBusinessChatContext()()
{
  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t dispatch thunk of static SenderContext.makeContextWithKnownSender(_:serviceName:)()
{
  return (*(uint64_t (**)(void))(v0 + 152))();
}

uint64_t dispatch thunk of static SenderContext.makeFromMeContext(serviceName:)()
{
  return (*(uint64_t (**)(void))(v0 + 160))();
}

uint64_t dispatch thunk of static SenderContext.makeUntrustedContext(serviceName:)()
{
  return (*(uint64_t (**)(void))(v0 + 168))();
}

uint64_t dispatch thunk of static SenderContext.makeBusinessChatContext(serviceName:)()
{
  return (*(uint64_t (**)(void))(v0 + 176))();
}

uint64_t dispatch thunk of SenderContext.encode(with:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xB8))();
}

uint64_t dispatch thunk of SenderContext.__allocating_init(coder:)()
{
  return (*(uint64_t (**)(void))(v0 + 192))();
}

uint64_t destroy for ChatMemberStatusChangedBroadcast()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ChatMemberStatusChangedBroadcast(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  uint64_t v6 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v6;
  *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ChatMemberStatusChangedBroadcast(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
  return a1;
}

__n128 initializeWithTake for ChatMemberStatusChangedBroadcast(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 60) = *(_OWORD *)(a2 + 60);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for ChatMemberStatusChangedBroadcast(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
  return a1;
}

uint64_t getEnumTagSinglePayload for ChatMemberStatusChangedBroadcast(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 76)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ChatMemberStatusChangedBroadcast(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_DWORD *)(result + 72) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 76) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 76) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ChatMemberStatusChangedBroadcast()
{
  return &type metadata for ChatMemberStatusChangedBroadcast;
}

void sub_1A08D38FC(void *a1)
{
  uint64_t v3 = *(unsigned __int8 *)(v1 + 32);
  int v4 = *(_DWORD *)(v1 + 72);
  uint64_t v5 = (void *)sub_1A09F3DE8();
  uint64_t v6 = (void *)sub_1A09F3DE8();
  uint64_t v13 = *(void *)(v1 + 40);
  if (v13)
  {
    swift_bridgeObjectRetain();
    unsigned __int8 v7 = (void *)sub_1A09F3CE8();
    sub_1A08787A8((uint64_t)&v13);
  }
  else
  {
    unsigned __int8 v7 = 0;
  }
  sub_1A0878700(v1 + 48, (uint64_t)v12);
  sub_1A0878700((uint64_t)v12, (uint64_t)v14);
  if (v14[1]) {
    id v8 = (void *)sub_1A09F3DE8();
  }
  else {
    id v8 = 0;
  }
  uint64_t v11 = *(void *)(v1 + 64);
  swift_bridgeObjectRetain();
  id v9 = (void *)sub_1A09F3CE8();
  sub_1A08787A8((uint64_t)&v11);
  LODWORD(v10) = v4;
  objc_msgSend(a1, sel_account_chat_style_chatProperties_chatPersonCentricID_member_statusChanged_, v5, v6, v3, v7, v8, v9, v10);
}

unint64_t sub_1A08D3A4C(char a1)
{
  unint64_t result = 0x55746E756F636361;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6E65644974616863;
      break;
    case 2:
      unint64_t result = 0x6C79745374616863;
      break;
    case 3:
      unint64_t result = 0xD000000000000012;
      break;
    case 4:
      unint64_t result = 0x65436E6F73726570;
      break;
    case 5:
      unint64_t result = 0x6E497265626D656DLL;
      break;
    case 6:
      unint64_t result = 0x737574617473;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A08D3B68(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_1A07856F8(&qword_1E94FB2A0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  id v8 = &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1A086F45C(a1, a1[3]);
  sub_1A08D48B0();
  sub_1A09F4CC8();
  char v16 = 0;
  sub_1A09F4A28();
  if (!v2)
  {
    char v15 = 1;
    sub_1A09F4A28();
    char v14 = 2;
    sub_1A09F4AA8();
    uint64_t v9 = swift_bridgeObjectRetain();
    sub_1A094FDC8(v9, 3);
    swift_bridgeObjectRelease();
    char v13 = 4;
    sub_1A09F4978();
    uint64_t v12 = *(void *)(v3 + 64);
    v11[15] = 5;
    sub_1A07856F8(&qword_1E94FB290);
    sub_1A08D4904(&qword_1E94FB2A8);
    sub_1A09F4A78();
    _OWORD v11[14] = 6;
    sub_1A09F4A88();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_1A08D3DD4()
{
  return sub_1A08D3A4C(*v0);
}

uint64_t sub_1A08D3DDC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A08D4084(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A08D3E04(uint64_t a1)
{
  unint64_t v2 = sub_1A08D48B0();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A08D3E40(uint64_t a1)
{
  unint64_t v2 = sub_1A08D48B0();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A08D3E7C()
{
  uint64_t v0 = qword_1E94FB260;
  swift_bridgeObjectRetain();
  return v0;
}

void sub_1A08D3EB4(void *a1)
{
}

__n128 sub_1A08D3EF8@<Q0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1A08D43F8(a1, (uint64_t *)v6);
  if (!v2)
  {
    long long v5 = v7[0];
    *(_OWORD *)(a2 + 32) = v6[2];
    *(_OWORD *)(a2 + 48) = v5;
    *(_OWORD *)(a2 + 60) = *(_OWORD *)((char *)v7 + 12);
    __n128 result = (__n128)v6[1];
    *(_OWORD *)a2 = v6[0];
    *(__n128 *)(a2 + 16) = result;
  }
  return result;
}

uint64_t sub_1A08D3F44(void *a1)
{
  return sub_1A08D3B68(a1);
}

unint64_t sub_1A08D3F5C(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_1A08BD1E8();
  unint64_t result = sub_1A08BD194();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1A08D3F8C(uint64_t a1)
{
  unint64_t result = sub_1A08D3FB4();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1A08D3FB4()
{
  unint64_t result = qword_1E94FB270;
  if (!qword_1E94FB270)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FB270);
  }
  return result;
}

unint64_t sub_1A08D4008(uint64_t a1)
{
  unint64_t result = sub_1A08D4030();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1A08D4030()
{
  unint64_t result = qword_1E94FB278;
  if (!qword_1E94FB278)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FB278);
  }
  return result;
}

uint64_t sub_1A08D4084(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x55746E756F636361 && a2 == 0xEF4449657571696ELL;
  if (v2 || (sub_1A09F4B28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E65644974616863 && a2 == 0xEE00726569666974 || (sub_1A09F4B28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6C79745374616863 && a2 == 0xE900000000000065 || (sub_1A09F4B28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001A0A31320 || (sub_1A09F4B28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x65436E6F73726570 && a2 == 0xEF4449636972746ELL || (sub_1A09F4B28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6E497265626D656DLL && a2 == 0xEE00617461446F66 || (sub_1A09F4B28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x737574617473 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    char v6 = sub_1A09F4B28();
    swift_bridgeObjectRelease();
    if (v6) {
      return 6;
    }
    else {
      return 7;
    }
  }
}

uint64_t sub_1A08D43F8@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = sub_1A07856F8(&qword_1E94FB280);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  id v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A086F45C(a1, a1[3]);
  sub_1A08D48B0();
  sub_1A09F4CA8();
  if (v2)
  {
    _s17IMSharedUtilities29RemoteIntentBroadcastEncodingVwxx_0((uint64_t)a1);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    char v40 = 0;
    uint64_t v9 = sub_1A09F48D8();
    uint64_t v11 = v10;
    uint64_t v32 = v9;
    char v39 = 1;
    swift_bridgeObjectRetain();
    uint64_t v12 = sub_1A09F48D8();
    uint64_t v33 = v13;
    uint64_t v30 = v12;
    char v38 = 2;
    swift_bridgeObjectRetain();
    uint64_t v31 = 0;
    int v28 = sub_1A09F4958();
    uint64_t v29 = a2;
    uint64_t v14 = sub_1A094C964(3);
    char v37 = 4;
    swift_bridgeObjectRetain();
    uint64_t v15 = sub_1A09F4828();
    uint64_t v17 = v16;
    uint64_t v27 = v15;
    sub_1A07856F8(&qword_1E94FB290);
    char v36 = 5;
    sub_1A08D4904(&qword_1E94FB298);
    swift_bridgeObjectRetain();
    sub_1A09F4928();
    uint64_t v26 = v11;
    uint64_t v18 = v34;
    char v35 = 6;
    swift_bridgeObjectRetain();
    int v19 = sub_1A09F4938();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    _s17IMSharedUtilities29RemoteIntentBroadcastEncodingVwxx_0((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v20 = v33;
    swift_bridgeObjectRelease();
    uint64_t v21 = v26;
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v23 = v29;
    *uint64_t v29 = v32;
    v23[1] = v21;
    long long v23[2] = v30;
    v23[3] = v20;
    *((unsigned char *)v23 + 32) = v28;
    uint64_t v24 = v27;
    v23[5] = v14;
    v23[6] = v24;
    v23[7] = v17;
    v23[8] = v18;
    *((_DWORD *)v23 + 18) = v19;
  }
  return result;
}

unint64_t sub_1A08D48B0()
{
  unint64_t result = qword_1E94FB288;
  if (!qword_1E94FB288)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FB288);
  }
  return result;
}

uint64_t sub_1A08D4904(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1A078D800(&qword_1E94FB290);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ChatMemberStatusChangedBroadcast.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *uint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A08D4A18);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ChatMemberStatusChangedBroadcast.CodingKeys()
{
  return &type metadata for ChatMemberStatusChangedBroadcast.CodingKeys;
}

unint64_t sub_1A08D4A54()
{
  unint64_t result = qword_1E94FB2B0;
  if (!qword_1E94FB2B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FB2B0);
  }
  return result;
}

unint64_t sub_1A08D4AAC()
{
  unint64_t result = qword_1E94FB2B8;
  if (!qword_1E94FB2B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FB2B8);
  }
  return result;
}

unint64_t sub_1A08D4B04()
{
  unint64_t result = qword_1E94FB2C0;
  if (!qword_1E94FB2C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FB2C0);
  }
  return result;
}

uint64_t sub_1A08D4B58()
{
  if (qword_1E94F8548 != -1) {
    swift_once();
  }
  off_1E94FB2C8 = (_UNKNOWN *)qword_1E94FB2D8;

  return swift_bridgeObjectRetain();
}

uint64_t static RemoteIntentSupportedRequestTypes.supported.getter()
{
  if (qword_1E94F8538 != -1) {
    swift_once();
  }

  return swift_bridgeObjectRetain();
}

void *sub_1A08D4C18()
{
  unint64_t result = (void *)sub_1A08D4C38();
  off_1E94FB2D0 = result;
  return result;
}

uint64_t sub_1A08D4C38()
{
  if (qword_1E94F8538 != -1) {
LABEL_21:
  }
    swift_once();
  uint64_t v0 = *((void *)off_1E94FB2C8 + 2);
  if (v0)
  {
    uint64_t v1 = (char *)off_1E94FB2C8 + 32;
    swift_bridgeObjectRetain();
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
    while (1)
    {
      long long v20 = *(_OWORD *)v1;
      uint64_t v3 = (*(uint64_t (**)(void))(*((void *)v1 + 1) + 48))();
      uint64_t v5 = v4;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      unint64_t v8 = sub_1A087AAA4(v3, v5);
      uint64_t v9 = v2[2];
      BOOL v10 = (v7 & 1) == 0;
      uint64_t v11 = v9 + v10;
      if (__OFADD__(v9, v10))
      {
        __break(1u);
LABEL_20:
        __break(1u);
        goto LABEL_21;
      }
      char v12 = v7;
      if (v2[3] >= v11)
      {
        if (isUniquelyReferenced_nonNull_native)
        {
          if (v7) {
            goto LABEL_4;
          }
        }
        else
        {
          sub_1A09E117C();
          if (v12) {
            goto LABEL_4;
          }
        }
      }
      else
      {
        sub_1A09DE674(v11, isUniquelyReferenced_nonNull_native);
        unint64_t v13 = sub_1A087AAA4(v3, v5);
        if ((v12 & 1) != (v14 & 1))
        {
          uint64_t result = sub_1A09F4BE8();
          __break(1u);
          return result;
        }
        unint64_t v8 = v13;
        if (v12)
        {
LABEL_4:
          *(_OWORD *)(v2[7] + 16 * v8) = v20;
          goto LABEL_5;
        }
      }
      v2[(v8 >> 6) + 8] |= 1 << v8;
      uint64_t v15 = (uint64_t *)(v2[6] + 16 * v8);
      *uint64_t v15 = v3;
      v15[1] = v5;
      *(_OWORD *)(v2[7] + 16 * v8) = v20;
      uint64_t v16 = v2[2];
      BOOL v17 = __OFADD__(v16, 1);
      uint64_t v18 = v16 + 1;
      if (v17) {
        goto LABEL_20;
      }
      v2[2] = v18;
      swift_bridgeObjectRetain();
LABEL_5:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v1 += 16;
      if (!--v0) {
        goto LABEL_18;
      }
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
LABEL_18:
  swift_bridgeObjectRelease();
  return (uint64_t)v2;
}

uint64_t static RemoteIntentSupportedRequestTypes.requestType(for:)(uint64_t a1, uint64_t a2)
{
  if (qword_1E94F8540 != -1) {
    swift_once();
  }
  uint64_t v4 = off_1E94FB2D0;
  if (!*((void *)off_1E94FB2D0 + 2)) {
    return 0;
  }
  swift_bridgeObjectRetain();
  unint64_t v5 = sub_1A087AAA4(a1, a2);
  if ((v6 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v7 = *(void *)(v4[7] + 16 * v5);
  swift_bridgeObjectRelease();
  return v7;
}

unint64_t sub_1A08D4F08()
{
  sub_1A07856F8(&qword_1E94FB2E0);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1A0A0BF70;
  unint64_t v1 = sub_1A08D512C();
  *(void *)(v0 + 32) = &type metadata for LoadChatHistoryRequest;
  *(void *)(v0 + 40) = v1;
  unint64_t v2 = sub_1A08D5180();
  *(void *)(v0 + 48) = &type metadata for SetupXPCObjectRequest;
  *(void *)(v0 + 56) = v2;
  unint64_t v3 = sub_1A08D51D4();
  *(void *)(v0 + 64) = &type metadata for SendMessageRequest;
  *(void *)(v0 + 72) = v3;
  unint64_t v4 = sub_1A089286C();
  *(void *)(v0 + 80) = &type metadata for RemoteIntentRequestBroadcasts;
  *(void *)(v0 + 88) = v4;
  unint64_t v5 = sub_1A08B0F70();
  *(void *)(v0 + 96) = &type metadata for RemoteIntentRequestAttachmentBroadcasts;
  *(void *)(v0 + 104) = v5;
  unint64_t v6 = sub_1A08D5228();
  *(void *)(v0 + 112) = &type metadata for LoadChatsWithIdentifierRequest;
  *(void *)(v0 + 120) = v6;
  unint64_t v7 = sub_1A08D527C();
  *(void *)(v0 + 128) = &type metadata for MarkMessageReadClearUnreadCountRequest;
  *(void *)(v0 + 136) = v7;
  unint64_t v8 = sub_1A08D52D0();
  *(void *)(v0 + 144) = &type metadata for MarkMessageReadRequest;
  *(void *)(v0 + 152) = v8;
  unint64_t v9 = sub_1A08D5324();
  *(void *)(v0 + 160) = &type metadata for MarkUnreadRequest;
  *(void *)(v0 + 168) = v9;
  unint64_t v10 = sub_1A08D5378();
  *(void *)(v0 + 176) = &type metadata for MarkPlayedRequest;
  *(void *)(v0 + 184) = v10;
  unint64_t v11 = sub_1A08D53CC();
  *(void *)(v0 + 192) = &type metadata for MarkPlayedExpressiveSendRequest;
  *(void *)(v0 + 200) = v11;
  unint64_t v12 = sub_1A08D5420();
  *(void *)(v0 + 208) = &type metadata for MarkSavedRequest;
  *(void *)(v0 + 216) = v12;
  uint64_t v13 = type metadata accessor for MoveMessagesInChatsWithGUIDsRequest();
  uint64_t v14 = sub_1A08D551C(&qword_1E94FB338, (void (*)(uint64_t))type metadata accessor for MoveMessagesInChatsWithGUIDsRequest);
  *(void *)(v0 + 224) = v13;
  *(void *)(v0 + 232) = v14;
  unint64_t v15 = sub_1A08D5474();
  *(void *)(v0 + 240) = &type metadata for LoadRecoverableMessagesMetadataRequest;
  *(void *)(v0 + 248) = v15;
  unint64_t v16 = sub_1A08D54C8();
  *(void *)(v0 + 256) = &type metadata for LoadPagedHistoryAroundMessageRequest;
  *(void *)(v0 + 264) = v16;
  uint64_t ChatsFilteredRequest = type metadata accessor for LoadChatsFilteredRequest();
  uint64_t v18 = sub_1A08D551C(&qword_1E94FB350, (void (*)(uint64_t))type metadata accessor for LoadChatsFilteredRequest);
  *(void *)(v0 + 272) = ChatsFilteredRequest;
  *(void *)(v0 + 280) = v18;
  unint64_t v19 = sub_1A08D5564();
  *(void *)(v0 + 288) = &type metadata for RetrieveLocalFileURLForTransferGUIDRequest;
  *(void *)(v0 + 296) = v19;
  unint64_t v20 = sub_1A08D55B8();
  *(void *)(v0 + 304) = &type metadata for RetrieveLocalFileURLForTransferGUIDsRequest;
  *(void *)(v0 + 312) = v20;
  unint64_t v21 = sub_1A08D560C();
  *(void *)(v0 + 320) = &type metadata for TransferFilesWithGUIDsRequest;
  *(void *)(v0 + 328) = v21;
  unint64_t v22 = sub_1A08D5660();
  *(void *)(v0 + 336) = &type metadata for JoinChatRequest;
  *(void *)(v0 + 344) = v22;
  unint64_t v23 = sub_1A08D56B4();
  *(void *)(v0 + 352) = &type metadata for CancelScheduledMessageRequest;
  *(void *)(v0 + 360) = v23;
  unint64_t result = sub_1A08D5708();
  *(void *)(v0 + 368) = &type metadata for RemoteIntentRequestSetupInfo;
  *(void *)(v0 + 376) = result;
  qword_1E94FB2D8 = v0;
  return result;
}

ValueMetadata *type metadata accessor for RemoteIntentSupportedRequestTypes()
{
  return &type metadata for RemoteIntentSupportedRequestTypes;
}

unint64_t sub_1A08D512C()
{
  unint64_t result = qword_1E94FB2E8;
  if (!qword_1E94FB2E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FB2E8);
  }
  return result;
}

unint64_t sub_1A08D5180()
{
  unint64_t result = qword_1E94FB2F0;
  if (!qword_1E94FB2F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FB2F0);
  }
  return result;
}

unint64_t sub_1A08D51D4()
{
  unint64_t result = qword_1E94FB2F8;
  if (!qword_1E94FB2F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FB2F8);
  }
  return result;
}

unint64_t sub_1A08D5228()
{
  unint64_t result = qword_1E94FB300;
  if (!qword_1E94FB300)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FB300);
  }
  return result;
}

unint64_t sub_1A08D527C()
{
  unint64_t result = qword_1E94FB308;
  if (!qword_1E94FB308)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FB308);
  }
  return result;
}

unint64_t sub_1A08D52D0()
{
  unint64_t result = qword_1E94FB310;
  if (!qword_1E94FB310)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FB310);
  }
  return result;
}

unint64_t sub_1A08D5324()
{
  unint64_t result = qword_1E94FB318;
  if (!qword_1E94FB318)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FB318);
  }
  return result;
}

unint64_t sub_1A08D5378()
{
  unint64_t result = qword_1E94FB320;
  if (!qword_1E94FB320)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FB320);
  }
  return result;
}

unint64_t sub_1A08D53CC()
{
  unint64_t result = qword_1E94FB328;
  if (!qword_1E94FB328)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FB328);
  }
  return result;
}

unint64_t sub_1A08D5420()
{
  unint64_t result = qword_1E94FB330;
  if (!qword_1E94FB330)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FB330);
  }
  return result;
}

unint64_t sub_1A08D5474()
{
  unint64_t result = qword_1E94FB340;
  if (!qword_1E94FB340)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FB340);
  }
  return result;
}

unint64_t sub_1A08D54C8()
{
  unint64_t result = qword_1E94FB348;
  if (!qword_1E94FB348)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FB348);
  }
  return result;
}

uint64_t sub_1A08D551C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1A08D5564()
{
  unint64_t result = qword_1E94FB358;
  if (!qword_1E94FB358)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FB358);
  }
  return result;
}

unint64_t sub_1A08D55B8()
{
  unint64_t result = qword_1E94FB360;
  if (!qword_1E94FB360)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FB360);
  }
  return result;
}

unint64_t sub_1A08D560C()
{
  unint64_t result = qword_1E94FB368;
  if (!qword_1E94FB368)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FB368);
  }
  return result;
}

unint64_t sub_1A08D5660()
{
  unint64_t result = qword_1E94FB370;
  if (!qword_1E94FB370)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FB370);
  }
  return result;
}

unint64_t sub_1A08D56B4()
{
  unint64_t result = qword_1E94FB378;
  if (!qword_1E94FB378)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FB378);
  }
  return result;
}

unint64_t sub_1A08D5708()
{
  unint64_t result = qword_1E94FB380;
  if (!qword_1E94FB380)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FB380);
  }
  return result;
}

ValueMetadata *type metadata accessor for RemoteIntentParticipantChangeType()
{
  return &type metadata for RemoteIntentParticipantChangeType;
}

ValueMetadata *type metadata accessor for RemoteIntentLocationShareDirection()
{
  return &type metadata for RemoteIntentLocationShareDirection;
}

unsigned char *_s17IMSharedUtilities31RemoteIntentLocationShareStatusOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A08D5850);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RemoteIntentLocationShareStatus()
{
  return &type metadata for RemoteIntentLocationShareStatus;
}

unsigned char *storeEnumTagSinglePayload for RemoteIntentMessageItemScheduleState(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A08D5954);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RemoteIntentMessageItemScheduleState()
{
  return &type metadata for RemoteIntentMessageItemScheduleState;
}

unsigned char *storeEnumTagSinglePayload for RemoteIntentMessageItemScheduleType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A08D5A58);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RemoteIntentMessageItemScheduleType()
{
  return &type metadata for RemoteIntentMessageItemScheduleType;
}

unsigned char *storeEnumTagSinglePayload for RemoteIntentMessageItemExpireState(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A08D5B5CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RemoteIntentMessageItemExpireState()
{
  return &type metadata for RemoteIntentMessageItemExpireState;
}

ValueMetadata *type metadata accessor for RemoteIntentMessageFlags()
{
  return &type metadata for RemoteIntentMessageFlags;
}

unsigned char *storeEnumTagSinglePayload for RemoteIntentItemType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    *unint64_t result = a2 + 8;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A08D5C70);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 8;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RemoteIntentItemType()
{
  return &type metadata for RemoteIntentItemType;
}

uint64_t sub_1A08D5CA8(uint64_t a1, uint64_t a2)
{
  return sub_1A08D64E0(a1, a2, MEMORY[0x1E4FBC3C0]);
}

uint64_t sub_1A08D5CC0()
{
  return sub_1A09F4C78();
}

uint64_t sub_1A08D5CEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A08D6538(a1, a2, a3, MEMORY[0x1E4FBC3C0]);
}

unint64_t sub_1A08D5D04@<X0>(unint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_1A08D6CD8(*a1);
  *a2 = result;
  return result;
}

void sub_1A08D5D30(void *a1@<X8>)
{
  *a1 = *v1;
}

unint64_t sub_1A08D5D40()
{
  unint64_t result = qword_1E94FB388;
  if (!qword_1E94FB388)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FB388);
  }
  return result;
}

uint64_t sub_1A08D5D94()
{
  return sub_1A09F4028();
}

uint64_t sub_1A08D5DF4()
{
  return sub_1A09F3FA8();
}

void *sub_1A08D5E44@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *result;
  return result;
}

uint64_t sub_1A08D5E50()
{
  return sub_1A09F4048();
}

uint64_t sub_1A08D5EB0()
{
  return sub_1A09F3FC8();
}

void sub_1A08D5F00(void *a1@<X8>)
{
  *a1 = 0;
}

void *sub_1A08D5F08@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 | *result;
  return result;
}

void *sub_1A08D5F1C@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 & *result;
  return result;
}

void *sub_1A08D5F30@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 ^ *result;
  return result;
}

BOOL sub_1A08D5F44(void *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = *v2 & *a2;
  if (v4 != *a2) {
    *v2 |= v3;
  }
  *a1 = v3;
  return v4 != v3;
}

void *sub_1A08D5F74@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *v2 & *result;
  if (v3) {
    *v2 &= ~*result;
  }
  *(void *)a2 = v3;
  *(unsigned char *)(a2 + 8) = v3 == 0;
  return result;
}

uint64_t *sub_1A08D5FA0@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *result;
  uint64_t v4 = *v2;
  *v2 |= *result;
  uint64_t v5 = v4 & v3;
  *(void *)a2 = v5;
  *(unsigned char *)(a2 + 8) = v5 == 0;
  return result;
}

void *sub_1A08D5FC4(void *result)
{
  *v1 |= *result;
  return result;
}

void *sub_1A08D5FD8(void *result)
{
  *v1 &= *result;
  return result;
}

void *sub_1A08D5FEC(void *result)
{
  *v1 ^= *result;
  return result;
}

void *sub_1A08D6000@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 & ~*result;
  return result;
}

BOOL sub_1A08D6014(void *a1)
{
  return (*v1 & ~*a1) == 0;
}

BOOL sub_1A08D6028(void *a1)
{
  return (*v1 & *a1) == 0;
}

BOOL sub_1A08D603C(void *a1)
{
  return (*a1 & ~*v1) == 0;
}

BOOL sub_1A08D6050()
{
  return *v0 == 0;
}

uint64_t sub_1A08D6060(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return MEMORY[0x1F4184B08](a1, a4, a2, a5, a3);
}

void *sub_1A08D6078(void *result)
{
  *v1 &= ~*result;
  return result;
}

void *sub_1A08D608C@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = *result;
  *(unsigned char *)(a2 + 8) = 0;
  return result;
}

void sub_1A08D609C(void *a1@<X8>)
{
  *a1 = *v1;
}

BOOL sub_1A08D60A8(void *a1, void *a2)
{
  return *a1 == *a2;
}

uint64_t sub_1A08D60BC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = sub_1A0919888(a1);
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v3;
  return result;
}

unint64_t sub_1A08D6100()
{
  unint64_t result = qword_1E94FB390;
  if (!qword_1E94FB390)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FB390);
  }
  return result;
}

unint64_t sub_1A08D6158()
{
  unint64_t result = qword_1E94FB398;
  if (!qword_1E94FB398)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FB398);
  }
  return result;
}

unint64_t sub_1A08D61B0()
{
  unint64_t result = qword_1E94FB3A0;
  if (!qword_1E94FB3A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FB3A0);
  }
  return result;
}

unint64_t sub_1A08D6208()
{
  unint64_t result = qword_1E94FB3A8;
  if (!qword_1E94FB3A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FB3A8);
  }
  return result;
}

unint64_t sub_1A08D625C@<X0>(unint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_1A08D6CE8(*a1);
  *a2 = result;
  return result;
}

unint64_t sub_1A08D628C()
{
  unint64_t result = qword_1E94FB3B0;
  if (!qword_1E94FB3B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FB3B0);
  }
  return result;
}

uint64_t sub_1A08D62E0()
{
  return sub_1A09F4028();
}

uint64_t sub_1A08D6340()
{
  return sub_1A09F3FA8();
}

uint64_t sub_1A08D6390(uint64_t a1, uint64_t a2)
{
  return sub_1A08D64E0(a1, a2, MEMORY[0x1E4FBC3B8]);
}

uint64_t sub_1A08D63A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A08D6538(a1, a2, a3, MEMORY[0x1E4FBC3B8]);
}

uint64_t *sub_1A08D63C0@<X0>(uint64_t *result@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v2 = *result;
  if ((unint64_t)*result >= 3) {
    LOBYTE(v2) = 3;
  }
  *a2 = v2;
  return result;
}

unint64_t sub_1A08D63DC()
{
  unint64_t result = qword_1E94FB3B8;
  if (!qword_1E94FB3B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FB3B8);
  }
  return result;
}

uint64_t sub_1A08D6430()
{
  return sub_1A09F4018();
}

uint64_t sub_1A08D6490()
{
  return sub_1A09F3F98();
}

uint64_t sub_1A08D64E0(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t v5 = *v3;
  sub_1A09F4C48();
  a3(v5);
  return sub_1A09F4C88();
}

uint64_t sub_1A08D6538(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v6 = *v4;
  sub_1A09F4C48();
  a4(v6);
  return sub_1A09F4C88();
}

unint64_t sub_1A08D658C@<X0>(unint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_1A08D6CF8(*a1);
  *a2 = result;
  return result;
}

unint64_t sub_1A08D65BC()
{
  unint64_t result = qword_1E94FB3C0;
  if (!qword_1E94FB3C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FB3C0);
  }
  return result;
}

uint64_t sub_1A08D6610()
{
  return sub_1A09F4018();
}

uint64_t sub_1A08D6670()
{
  return sub_1A09F3F98();
}

void *sub_1A08D66C8@<X0>(void *result@<X0>, char *a2@<X8>)
{
  if (*result == 1) {
    char v2 = 1;
  }
  else {
    char v2 = 2;
  }
  if (*result) {
    char v3 = v2;
  }
  else {
    char v3 = 0;
  }
  *a2 = v3;
  return result;
}

unint64_t sub_1A08D66EC()
{
  unint64_t result = qword_1E94FB3C8;
  if (!qword_1E94FB3C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FB3C8);
  }
  return result;
}

uint64_t sub_1A08D6740()
{
  return sub_1A09F4028();
}

uint64_t sub_1A08D67A0()
{
  return sub_1A09F3FA8();
}

unint64_t sub_1A08D67F4()
{
  unint64_t result = qword_1E94FB3D0;
  if (!qword_1E94FB3D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FB3D0);
  }
  return result;
}

uint64_t sub_1A08D6848()
{
  return sub_1A09F4028();
}

uint64_t sub_1A08D68A8()
{
  return sub_1A09F3FA8();
}

uint64_t sub_1A08D68F8()
{
  return sub_1A09F4C88();
}

uint64_t sub_1A08D6940()
{
  return sub_1A09F4C88();
}

unint64_t sub_1A08D6988()
{
  unint64_t result = qword_1E94FB3D8;
  if (!qword_1E94FB3D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FB3D8);
  }
  return result;
}

uint64_t sub_1A08D69DC()
{
  return sub_1A09F4028();
}

uint64_t sub_1A08D6A3C()
{
  return sub_1A09F3FA8();
}

unint64_t sub_1A08D6A8C()
{
  unint64_t result = qword_1E94FB3E0;
  if (!qword_1E94FB3E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FB3E0);
  }
  return result;
}

unint64_t sub_1A08D6AE0()
{
  unint64_t result = qword_1E94FB3E8;
  if (!qword_1E94FB3E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FB3E8);
  }
  return result;
}

unint64_t sub_1A08D6B34()
{
  unint64_t result = qword_1E94FB3F0;
  if (!qword_1E94FB3F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FB3F0);
  }
  return result;
}

unint64_t sub_1A08D6B88()
{
  unint64_t result = qword_1E94FB3F8;
  if (!qword_1E94FB3F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FB3F8);
  }
  return result;
}

unint64_t sub_1A08D6BDC()
{
  unint64_t result = qword_1E94FB400;
  if (!qword_1E94FB400)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FB400);
  }
  return result;
}

unint64_t sub_1A08D6C30()
{
  unint64_t result = qword_1E94FB408;
  if (!qword_1E94FB408)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FB408);
  }
  return result;
}

unint64_t sub_1A08D6C84()
{
  unint64_t result = qword_1E94FB410;
  if (!qword_1E94FB410)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FB410);
  }
  return result;
}

unint64_t sub_1A08D6CD8(unint64_t result)
{
  if (result >= 9) {
    return 9;
  }
  return result;
}

unint64_t sub_1A08D6CE8(unint64_t result)
{
  if (result >= 4) {
    return 4;
  }
  return result;
}

unint64_t sub_1A08D6CF8(unint64_t result)
{
  if (result >= 6) {
    return 6;
  }
  return result;
}

id sub_1A08D6FE4()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for IMCTChatBotCache();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_1A08D7064(void *a1, void *a2)
{
  if ((objc_msgSend(a1, sel_isBot) & 1) == 0 && a2) {
    objc_msgSend(a2, sel_cacheType);
  }
  uint64_t v5 = *(void **)(v2 + OBJC_IVAR____TtC17IMSharedUtilities16IMCTChatBotCache_cache);
  uint64_t v6 = (void *)sub_1A09F40F8();
  id v7 = objc_msgSend(a1, sel_uri);
  if (v7)
  {
    id v8 = v7;
    objc_msgSend(v5, sel_setObject_forKey_, v6);
  }
  else
  {
    __break(1u);
  }
}

unint64_t sub_1A08D713C(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    sub_1A07856F8(&qword_1E94FE550);
    uint64_t v2 = (void *)sub_1A09F47E8();
  }
  else
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
  }
  uint64_t v3 = sub_1A07856F8((uint64_t *)&unk_1E94FDC30);
  uint64_t v4 = MEMORY[0x1F4188790](v3);
  id v7 = (void *)((char *)v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = *(void *)(a1 + 16);
  if (v8)
  {
    unint64_t v9 = (char *)v7 + *(int *)(v4 + 48);
    unint64_t v10 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    v24[1] = a1;
    uint64_t v11 = a1 + v10;
    uint64_t v12 = *(void *)(v5 + 72);
    swift_retain();
    while (1)
    {
      sub_1A0884370(v11, (uint64_t)v7, (uint64_t *)&unk_1E94FDC30);
      uint64_t v13 = *v7;
      uint64_t v14 = v7[1];
      unint64_t result = sub_1A087AAA4(*v7, v14);
      if (v16) {
        break;
      }
      unint64_t v17 = result;
      *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      uint64_t v18 = (uint64_t *)(v2[6] + 16 * result);
      *uint64_t v18 = v13;
      v18[1] = v14;
      uint64_t v19 = v2[7];
      uint64_t v20 = sub_1A09F33A8();
      unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v20 - 8) + 32))(v19 + *(void *)(*(void *)(v20 - 8) + 72) * v17, v9, v20);
      uint64_t v21 = v2[2];
      BOOL v22 = __OFADD__(v21, 1);
      uint64_t v23 = v21 + 1;
      if (v22) {
        goto LABEL_12;
      }
      v2[2] = v23;
      v11 += v12;
      if (!--v8)
      {
        swift_release();
        goto LABEL_10;
      }
    }
    __break(1u);
LABEL_12:
    __break(1u);
  }
  else
  {
LABEL_10:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  return result;
}

unint64_t sub_1A08D733C(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  sub_1A07856F8((uint64_t *)&unk_1E94FE570);
  uint64_t v2 = sub_1A09F47E8();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1A0884370(v6, (uint64_t)v15, &qword_1E94FB468);
    unint64_t result = sub_1A087AB2C((uint64_t)v15);
    if (v8) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v9 = v3[6] + 40 * result;
    long long v10 = v15[0];
    long long v11 = v15[1];
    *(void *)(v9 + 32) = v16;
    *(_OWORD *)uint64_t v9 = v10;
    *(_OWORD *)(v9 + 16) = v11;
    unint64_t result = (unint64_t)sub_1A07825B4(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 72;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1A08D7480(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  sub_1A07856F8((uint64_t *)&unk_1E94FE420);
  uint64_t v2 = sub_1A09F47E8();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1A0884370(v6, (uint64_t)&v15, &qword_1E94FB4A0);
    uint64_t v7 = v15;
    uint64_t v8 = v16;
    unint64_t result = sub_1A087AAA4(v15, v16);
    if (v10) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    long long v11 = (uint64_t *)(v3[6] + 16 * result);
    *long long v11 = v7;
    v11[1] = v8;
    unint64_t result = (unint64_t)sub_1A07825B4(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1A08D75B8(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  sub_1A07856F8(&qword_1E94FB4C8);
  uint64_t v2 = (void *)sub_1A09F47E8();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 56);
  while (1)
  {
    uint64_t v5 = *(v4 - 3);
    uint64_t v6 = *(v4 - 2);
    uint64_t v8 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_1A087AAA4(v5, v6);
    if (v10) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    long long v11 = (uint64_t *)(v2[6] + 16 * result);
    *long long v11 = v5;
    v11[1] = v6;
    uint64_t v12 = (void *)(v2[7] + 16 * result);
    *uint64_t v12 = v8;
    v12[1] = v7;
    uint64_t v13 = v2[2];
    BOOL v14 = __OFADD__(v13, 1);
    uint64_t v15 = v13 + 1;
    if (v14) {
      goto LABEL_11;
    }
    v4 += 4;
    v2[2] = v15;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1A08D76DC(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  sub_1A07856F8(&qword_1E94FB470);
  uint64_t v2 = sub_1A09F47E8();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1A0884370(v6, (uint64_t)&v15, &qword_1E94FB478);
    uint64_t v7 = v15;
    uint64_t v8 = v16;
    unint64_t result = sub_1A087AAA4(v15, v16);
    if (v10) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    long long v11 = (uint64_t *)(v3[6] + 16 * result);
    *long long v11 = v7;
    v11[1] = v8;
    unint64_t result = sub_1A0784BA0((uint64_t)&v17, v3[7] + 32 * result);
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1A08D7814(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  sub_1A07856F8(&qword_1E94FB490);
  uint64_t v2 = sub_1A09F47E8();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1A0884370(v6, (uint64_t)&v13, &qword_1E94FB498);
    uint64_t v7 = v13;
    unint64_t result = sub_1A087AB70(v13);
    if (v9) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(void *)(v3[6] + 8 * result) = v7;
    unint64_t result = (unint64_t)sub_1A07825B4(&v14, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v10 = v3[2];
    BOOL v11 = __OFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11) {
      goto LABEL_11;
    }
    v3[2] = v12;
    v6 += 40;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1A08D7944(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  sub_1A07856F8(&qword_1E94FB480);
  uint64_t v2 = (void *)sub_1A09F47E8();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 40);
  while (1)
  {
    uint64_t v5 = *v4;
    id v6 = (id)*(v4 - 1);
    swift_bridgeObjectRetain();
    unint64_t result = sub_1A087AC24((uint64_t)v6);
    if (v8) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v9 = 8 * result;
    *(void *)(v2[6] + v9) = v6;
    *(void *)(v2[7] + v9) = v5;
    uint64_t v10 = v2[2];
    BOOL v11 = __OFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11) {
      goto LABEL_11;
    }
    v2[2] = v12;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1A08D7A50(uint64_t a1)
{
  return sub_1A08D7B7C(a1, &qword_1E94FB4D0);
}

unint64_t sub_1A08D7A5C(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  sub_1A07856F8(&qword_1E94FB4C0);
  uint64_t v2 = (void *)sub_1A09F47E8();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (unsigned char *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *((void *)v4 - 2);
    uint64_t v6 = *((void *)v4 - 1);
    char v7 = *v4;
    swift_bridgeObjectRetain();
    unint64_t result = sub_1A087AAA4(v5, v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v10 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v10 = v5;
    v10[1] = v6;
    *(unsigned char *)(v2[7] + result) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v4 += 24;
    v2[2] = v13;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1A08D7B70(uint64_t a1)
{
  return sub_1A08D7B7C(a1, &qword_1E94FB4B8);
}

unint64_t sub_1A08D7B7C(uint64_t a1, uint64_t *a2)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  sub_1A07856F8(a2);
  uint64_t v3 = (void *)sub_1A09F47E8();
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  swift_retain();
  uint64_t v5 = (void **)(a1 + 48);
  while (1)
  {
    uint64_t v6 = (uint64_t)*(v5 - 2);
    uint64_t v7 = (uint64_t)*(v5 - 1);
    char v8 = *v5;
    swift_bridgeObjectRetain();
    id v9 = v8;
    unint64_t result = sub_1A087AAA4(v6, v7);
    if (v11) {
      break;
    }
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    BOOL v12 = (uint64_t *)(v3[6] + 16 * result);
    *BOOL v12 = v6;
    v12[1] = v7;
    *(void *)(v3[7] + 8 * result) = v9;
    uint64_t v13 = v3[2];
    BOOL v14 = __OFADD__(v13, 1);
    uint64_t v15 = v13 + 1;
    if (v14) {
      goto LABEL_11;
    }
    v3[2] = v15;
    v5 += 3;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1A08D7C94(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  sub_1A07856F8(&qword_1E94FE6B0);
  uint64_t v2 = sub_1A09F47E8();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1A0884370(v6, (uint64_t)&v13, &qword_1E94FB4B0);
    uint64_t v7 = v13;
    unint64_t result = sub_1A087AC24(v13);
    if (v9) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(void *)(v3[6] + 8 * result) = v7;
    unint64_t result = (unint64_t)sub_1A07825B4(&v14, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v10 = v3[2];
    BOOL v11 = __OFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11) {
      goto LABEL_11;
    }
    v3[2] = v12;
    v6 += 40;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1A08D7DC4(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  sub_1A07856F8(&qword_1E94FB4A8);
  uint64_t v2 = (void *)sub_1A09F47E8();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *(v4 - 2);
    uint64_t v6 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    swift_retain();
    unint64_t result = sub_1A087AAA4(v5, v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v10 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v10 = v5;
    v10[1] = v6;
    *(void *)(v2[7] + 8 * result) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v2[2] = v13;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1A08D7EE0(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  sub_1A07856F8((uint64_t *)&unk_1E94F76C0);
  uint64_t v2 = (void *)sub_1A09F47E8();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *(v4 - 2);
    uint64_t v6 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_1A087AAA4(v5, v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v10 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v10 = v5;
    v10[1] = v6;
    *(void *)(v2[7] + 8 * result) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v2[2] = v13;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1A08D7FFC(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  sub_1A07856F8(&qword_1E94F7608);
  uint64_t v2 = (void *)sub_1A09F47E8();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = a1 + 40;
  while (1)
  {
    uint64_t v5 = *(void *)(v4 - 8);
    uint64_t v6 = *(void *)v4;
    uint64_t v7 = *(void *)(v4 + 8);
    long long v15 = *(_OWORD *)(v4 + 32);
    long long v16 = *(_OWORD *)(v4 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    unint64_t result = sub_1A087AAA4(v5, v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v10 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v10 = v5;
    v10[1] = v6;
    uint64_t v11 = v2[7] + 40 * result;
    *(void *)uint64_t v11 = v7;
    *(_OWORD *)(v11 + 8) = v16;
    *(_OWORD *)(v11 + 24) = v15;
    uint64_t v12 = v2[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v2[2] = v14;
    v4 += 56;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

void __swiftcall IMRichCard.init(dictionary:)(IMRichCard_optional *__return_ptr retstr, Swift::OpaquePointer dictionary)
{
  id v2 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  uint64_t v3 = (void *)sub_1A09F3CE8();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_initWithDictionary_, v3);
}

id IMRichCard.init(dictionary:)(uint64_t a1)
{
  id v2 = v1;
  if (*(void *)(a1 + 16))
  {
    unint64_t v4 = sub_1A087AAA4(0x74756F79616CLL, 0xE600000000000000);
    if (v5)
    {
      sub_1A0785268(*(void *)(a1 + 56) + 32 * v4, (uint64_t)&v27);
      sub_1A07856F8(&qword_1E94FDD10);
      if (swift_dynamicCast())
      {
        id v6 = objc_allocWithZone((Class)IMRichCardLayout);
        uint64_t v7 = (void *)sub_1A09F3CE8();
        swift_bridgeObjectRelease();
        id v8 = objc_msgSend(v6, sel_initWithDictionary_, v7);

        if (v8)
        {
          if (*(void *)(a1 + 16)
            && (unint64_t v9 = sub_1A087AAA4(0x616964656DLL, 0xE500000000000000), (v10 & 1) != 0)
            && (sub_1A0785268(*(void *)(a1 + 56) + 32 * v9, (uint64_t)&v27), (swift_dynamicCast() & 1) != 0))
          {
            id v11 = objc_allocWithZone((Class)IMRichCardMedia);
            uint64_t v12 = (void *)sub_1A09F3CE8();
            swift_bridgeObjectRelease();
            id v13 = objc_msgSend(v11, sel_initWithDictionary_, v12);
          }
          else
          {
            id v13 = 0;
          }
          if (*(void *)(a1 + 16)
            && (unint64_t v16 = sub_1A087AAA4(0x7473694C70696863, 0xE800000000000000), (v17 & 1) != 0)
            && (sub_1A0785268(*(void *)(a1 + 56) + 32 * v16, (uint64_t)&v27), (swift_dynamicCast() & 1) != 0))
          {
            id v18 = objc_allocWithZone((Class)IMChipList);
            uint64_t v19 = (void *)sub_1A09F3CE8();
            swift_bridgeObjectRelease();
            id v20 = objc_msgSend(v18, sel_initWithDictionary_, v19);
          }
          else
          {
            id v20 = 0;
          }
          if (*(void *)(a1 + 16)
            && (unint64_t v21 = sub_1A087AAA4(0x656C746974, 0xE500000000000000), (v22 & 1) != 0)
            && (sub_1A0785268(*(void *)(a1 + 56) + 32 * v21, (uint64_t)&v27), (swift_dynamicCast() & 1) != 0))
          {
            uint64_t v23 = (void *)sub_1A09F3DE8();
            swift_bridgeObjectRelease();
          }
          else
          {
            uint64_t v23 = 0;
          }
          if (*(void *)(a1 + 16) && (unint64_t v24 = sub_1A087AAA4(0x6373654464726163, 0xEF6E6F6974706972), (v25 & 1) != 0))
          {
            sub_1A0785268(*(void *)(a1 + 56) + 32 * v24, (uint64_t)&v27);
          }
          else
          {
            long long v27 = 0u;
            long long v28 = 0u;
          }
          swift_bridgeObjectRelease();
          if (*((void *)&v28 + 1))
          {
            if (swift_dynamicCast())
            {
              uint64_t v26 = (void *)sub_1A09F3DE8();
              swift_bridgeObjectRelease();
LABEL_31:
              id v14 = objc_msgSend(v2, sel_initWithLayout_media_title_cardDescription_chipList_, v8, v13, v23, v26, v20);

              return v14;
            }
          }
          else
          {
            sub_1A0783C7C((uint64_t)&v27);
          }
          uint64_t v26 = 0;
          goto LABEL_31;
        }
      }
    }
  }
  swift_bridgeObjectRelease();
  swift_getObjectType();
  swift_deallocPartialClassInstance();
  return 0;
}

uint64_t sub_1A08D87C4()
{
  sub_1A07856F8(&qword_1E94F97B8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1A0A0AED0;
  *(void *)(inited + 32) = 0x74756F79616CLL;
  *(void *)(inited + 40) = 0xE600000000000000;
  id v2 = objc_msgSend(v0, sel_layout);
  id v3 = objc_msgSend(v2, sel_dictionaryRepresentation);

  uint64_t v4 = sub_1A09F3D08();
  uint64_t v5 = sub_1A07856F8(&qword_1E94FDD10);
  *(void *)(inited + 48) = v4;
  *(void *)(inited + 72) = v5;
  *(void *)(inited + 80) = 0x616964656DLL;
  *(void *)(inited + 88) = 0xE500000000000000;
  id v6 = objc_msgSend(v0, sel_media);
  if (v6)
  {
    uint64_t v7 = v6;
    id v8 = objc_msgSend(v6, sel_dictionaryRepresentation);

    uint64_t v9 = sub_1A09F3D08();
    uint64_t v10 = v5;
  }
  else
  {
    uint64_t v9 = 0;
    uint64_t v10 = 0;
    *(void *)(inited + 104) = 0;
    *(void *)(inited + 112) = 0;
  }
  *(void *)(inited + 96) = v9;
  *(void *)(inited + 120) = v10;
  *(void *)(inited + 128) = 0x656C746974;
  *(void *)(inited + 136) = 0xE500000000000000;
  id v11 = objc_msgSend(v0, sel_title);
  if (v11)
  {
    uint64_t v12 = v11;
    uint64_t v13 = sub_1A09F3E18();
    uint64_t v15 = v14;

    uint64_t v16 = MEMORY[0x1E4FBB1A0];
  }
  else
  {
    uint64_t v13 = 0;
    uint64_t v15 = 0;
    uint64_t v16 = 0;
    *(void *)(inited + 160) = 0;
  }
  *(void *)(inited + 144) = v13;
  *(void *)(inited + 152) = v15;
  *(void *)(inited + 168) = v16;
  *(void *)(inited + 176) = 0x6373654464726163;
  *(void *)(inited + 184) = 0xEF6E6F6974706972;
  id v17 = objc_msgSend(v0, sel_cardDescription);
  if (v17)
  {
    id v18 = v17;
    uint64_t v19 = sub_1A09F3E18();
    uint64_t v21 = v20;

    uint64_t v22 = MEMORY[0x1E4FBB1A0];
  }
  else
  {
    uint64_t v19 = 0;
    uint64_t v21 = 0;
    uint64_t v22 = 0;
    *(void *)(inited + 208) = 0;
  }
  *(void *)(inited + 192) = v19;
  *(void *)(inited + 200) = v21;
  *(void *)(inited + 216) = v22;
  *(void *)(inited + 224) = 0x7473694C70696863;
  *(void *)(inited + 232) = 0xE800000000000000;
  id v23 = objc_msgSend(v0, sel_chipList);
  unint64_t v24 = v23;
  if (v23)
  {
    id v25 = objc_msgSend(v23, sel_dictionaryRepresentation);

    unint64_t v24 = (void *)sub_1A09F3D08();
  }
  else
  {
    uint64_t v5 = 0;
    *(void *)(inited + 248) = 0;
    *(void *)(inited + 256) = 0;
  }
  *(void *)(inited + 240) = v24;
  *(void *)(inited + 264) = v5;
  unint64_t v26 = sub_1A08D76DC(inited);
  uint64_t v27 = sub_1A09BE198(v26);
  swift_bridgeObjectRelease();
  return v27;
}

Swift::Void __swiftcall IMRichCard.update(urlToTransferMap:)(IMUrlToTransferMap *urlToTransferMap)
{
  sub_1A08D75B8(MEMORY[0x1E4FBC860]);
  id v3 = objc_msgSend(v1, sel_media);
  if (v3)
  {
    uint64_t v4 = v3;
    id v5 = objc_msgSend(v3, sel_mediaUrl);

    uint64_t v6 = sub_1A09F3E18();
    uint64_t v8 = v7;

    uint64_t v9 = (void *)sub_1A09F3DE8();
    id v10 = [(IMUrlToTransferMap *)urlToTransferMap transferGuidFromUrl:v9];

    if (v10)
    {
      uint64_t v11 = sub_1A09F3E18();
      uint64_t v13 = v12;

      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      sub_1A08D993C(v11, v13, v6, v8, isUniquelyReferenced_nonNull_native);
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
  }
  id v15 = objc_msgSend(v1, sel_media);
  if (v15)
  {
    uint64_t v16 = v15;
    id v17 = objc_msgSend(v15, sel_thumbnailUrl);

    if (v17)
    {
      uint64_t v18 = sub_1A09F3E18();
      uint64_t v20 = v19;

      uint64_t v21 = (void *)sub_1A09F3DE8();
      id v22 = [(IMUrlToTransferMap *)urlToTransferMap transferGuidFromUrl:v21];

      if (v22)
      {
        uint64_t v23 = sub_1A09F3E18();
        uint64_t v25 = v24;

        char v26 = swift_isUniquelyReferenced_nonNull_native();
        sub_1A08D993C(v23, v25, v18, v20, v26);
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
    }
  }
  id v27 = objc_msgSend(v1, sel_layout);
  id v28 = objc_msgSend(v27, sel_cardStyleUrl);

  if (v28)
  {
    uint64_t v29 = sub_1A09F3E18();
    uint64_t v31 = v30;
    id v32 = [(IMUrlToTransferMap *)urlToTransferMap transferGuidFromUrl:v28];

    if (v32)
    {
      uint64_t v33 = sub_1A09F3E18();
      uint64_t v35 = v34;

      char v36 = swift_isUniquelyReferenced_nonNull_native();
      sub_1A08D993C(v33, v35, v29, v31, v36);
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
  }
  id v37 = objc_allocWithZone((Class)IMUrlToTransferMap);
  char v38 = (void *)sub_1A09F3CE8();
  swift_bridgeObjectRelease();
  id v39 = objc_msgSend(v37, sel_initWithUrlToTransferGuids_, v38);

  objc_msgSend(v1, sel_setUrlToTransferMap_, v39);
}

uint64_t sub_1A08D8F14@<X0>(void *a1@<X8>)
{
  id v3 = objc_msgSend(v1, sel_dictionaryRepresentation);
  sub_1A09F3D08();

  id v4 = objc_allocWithZone((Class)IMRichCard);
  id v5 = (void *)sub_1A09F3CE8();
  swift_bridgeObjectRelease();
  id v6 = objc_msgSend(v4, sel_initWithDictionary_, v5);

  if (v6)
  {
    id v7 = objc_msgSend(v1, sel_urlToTransferMap);
    if (v7)
    {
      uint64_t v8 = v7;
      objc_msgSend(v6, sel_updateUrlToTransferMap_, v7);
    }
    uint64_t result = type metadata accessor for IMRichCard((uint64_t)v7);
  }
  else
  {
    id v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1CA98]), sel_init);
    uint64_t result = sub_1A078231C(0, &qword_1E94FB488);
  }
  a1[3] = result;
  *a1 = v6;
  return result;
}

uint64_t IMRichCard.isEqual(_:)(uint64_t a1)
{
  id v2 = v1;
  uint64_t v3 = sub_1A0884370(a1, (uint64_t)v41, &qword_1EB4A58F0);
  if (!v42)
  {
    sub_1A0783C7C((uint64_t)v41);
    goto LABEL_9;
  }
  type metadata accessor for IMRichCard(v3);
  if (swift_dynamicCast())
  {
    sub_1A078231C(0, &qword_1E94FE660);
    id v4 = objc_msgSend(v1, sel_layout);
    id v5 = objc_msgSend(v40, sel_layout);
    char v6 = sub_1A09F4508();

    if ((v6 & 1) == 0) {
      goto LABEL_7;
    }
    id v7 = objc_msgSend(v2, sel_media);
    id v8 = objc_msgSend(v40, sel_media);
    uint64_t v9 = v8;
    if (v7)
    {
      if (!v8)
      {

        goto LABEL_9;
      }
      type metadata accessor for IMRichCardMedia(0);
      id v10 = v7;
      char v11 = sub_1A09F4508();

      if ((v11 & 1) == 0) {
        goto LABEL_7;
      }
    }
    else if (v8)
    {

      goto LABEL_9;
    }
    id v14 = objc_msgSend(v2, sel_title);
    if (v14)
    {
      id v15 = v14;
      uint64_t v16 = sub_1A09F3E18();
      uint64_t v18 = v17;
    }
    else
    {
      uint64_t v16 = 0;
      uint64_t v18 = 0;
    }
    id v19 = objc_msgSend(v40, sel_title);
    if (v19)
    {
      uint64_t v20 = v19;
      uint64_t v21 = sub_1A09F3E18();
      uint64_t v23 = v22;

      if (v18)
      {
        if (!v23) {
          goto LABEL_40;
        }
        if (v16 == v21 && v18 == v23)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        else
        {
          char v24 = sub_1A09F4B28();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v24 & 1) == 0) {
            goto LABEL_7;
          }
        }
      }
      else if (v23)
      {
        goto LABEL_40;
      }
    }
    else if (v18)
    {
      goto LABEL_40;
    }
    id v25 = objc_msgSend(v2, sel_cardDescription);
    if (v25)
    {
      char v26 = v25;
      uint64_t v27 = sub_1A09F3E18();
      uint64_t v29 = v28;
    }
    else
    {
      uint64_t v27 = 0;
      uint64_t v29 = 0;
    }
    id v30 = objc_msgSend(v40, sel_cardDescription);
    if (v30)
    {
      uint64_t v31 = v30;
      uint64_t v32 = sub_1A09F3E18();
      uint64_t v34 = v33;

      if (v29)
      {
        if (v34)
        {
          if (v27 == v32 && v29 == v34)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
LABEL_42:
            id v36 = objc_msgSend(v2, sel_chipList);
            id v37 = objc_msgSend(v40, sel_chipList);
            char v38 = v37;
            if (!v36)
            {

              if (!v38)
              {
                char v12 = 1;
                return v12 & 1;
              }

              goto LABEL_9;
            }
            if (v37)
            {
              type metadata accessor for IMChipList(0);
              id v39 = v36;
              char v12 = sub_1A09F4508();

              return v12 & 1;
            }

            goto LABEL_7;
          }
          char v35 = sub_1A09F4B28();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v35) {
            goto LABEL_42;
          }
LABEL_7:

          goto LABEL_9;
        }
      }
      else if (!v34)
      {
        goto LABEL_42;
      }
    }
    else if (!v29)
    {
      goto LABEL_42;
    }
LABEL_40:

    swift_bridgeObjectRelease();
  }
LABEL_9:
  char v12 = 0;
  return v12 & 1;
}

void __swiftcall IMRichCard.init()(IMRichCard *__return_ptr retstr)
{
  id v1 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());

  objc_msgSend(v1, sel_init);
}

void IMRichCard.init()()
{
}

void sub_1A08D9654(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  id v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_1A087AAA4(a2, a3);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_1A09E072C();
LABEL_7:
    uint64_t v18 = (void *)*v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = v18[7];

      *(void *)(v19 + 8 * v12) = a1;
      return;
    }
    goto LABEL_11;
  }
  sub_1A09DCF08(v15, a4 & 1);
  unint64_t v20 = sub_1A087AAA4(a2, a3);
  if ((v16 & 1) != (v21 & 1))
  {
LABEL_17:
    sub_1A09F4BE8();
    __break(1u);
    return;
  }
  unint64_t v12 = v20;
  uint64_t v18 = (void *)*v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  v18[(v12 >> 6) + 8] |= 1 << v12;
  uint64_t v22 = (uint64_t *)(v18[6] + 16 * v12);
  *uint64_t v22 = a2;
  v22[1] = a3;
  *(void *)(v18[7] + 8 * v12) = a1;
  uint64_t v23 = v18[2];
  BOOL v24 = __OFADD__(v23, 1);
  uint64_t v25 = v23 + 1;
  if (v24)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  _OWORD v18[2] = v25;

  swift_bridgeObjectRetain();
}

uint64_t sub_1A08D97C4(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_1A08D9E58(a1, a2, a3, a4, (void (*)(void))sub_1A09E0BC0, (void (*)(void))sub_1A09DD610);
}

_OWORD *sub_1A08D97F0(_OWORD *a1, uint64_t a2, char a3)
{
  id v4 = (void **)v3;
  id v8 = (void *)*v3;
  unint64_t v10 = sub_1A087AB2C(a2);
  uint64_t v11 = v8[2];
  BOOL v12 = (v9 & 1) == 0;
  uint64_t v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v14 = v9;
  uint64_t v15 = v8[3];
  if (v15 < v13 || (a3 & 1) == 0)
  {
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_1A09E0BE4();
      goto LABEL_7;
    }
    sub_1A09DD634(v13, a3 & 1);
    unint64_t v19 = sub_1A087AB2C(a2);
    if ((v14 & 1) == (v20 & 1))
    {
      unint64_t v10 = v19;
      char v16 = *v4;
      if (v14) {
        goto LABEL_8;
      }
LABEL_13:
      sub_1A087B1B0(a2, (uint64_t)v21);
      return sub_1A08DA2FC(v10, (uint64_t)v21, a1, v16);
    }
LABEL_15:
    uint64_t result = (_OWORD *)sub_1A09F4BE8();
    __break(1u);
    return result;
  }
LABEL_7:
  char v16 = *v4;
  if ((v14 & 1) == 0) {
    goto LABEL_13;
  }
LABEL_8:
  uint64_t v17 = (_OWORD *)(v16[7] + 32 * v10);
  _s17IMSharedUtilities29RemoteIntentBroadcastEncodingVwxx_0((uint64_t)v17);

  return sub_1A07825B4(a1, v17);
}

uint64_t sub_1A08D993C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  char v6 = v5;
  uint64_t v12 = *v5;
  unint64_t v14 = sub_1A087AAA4(a3, a4);
  uint64_t v15 = *(void *)(v12 + 16);
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v18 = v13;
  uint64_t v19 = *(void *)(v12 + 24);
  if (v19 >= v17 && (a5 & 1) != 0) {
    goto LABEL_7;
  }
  if (v19 >= v17 && (a5 & 1) == 0)
  {
    sub_1A09E0DCC();
LABEL_7:
    char v20 = (void *)*v6;
    if (v18)
    {
LABEL_8:
      char v21 = (void *)(v20[7] + 16 * v14);
      uint64_t result = swift_bridgeObjectRelease();
      *char v21 = a1;
      v21[1] = a2;
      return result;
    }
    goto LABEL_11;
  }
  sub_1A09DDD38(v17, a5 & 1);
  unint64_t v23 = sub_1A087AAA4(a3, a4);
  if ((v18 & 1) != (v24 & 1))
  {
LABEL_17:
    uint64_t result = sub_1A09F4BE8();
    __break(1u);
    return result;
  }
  unint64_t v14 = v23;
  char v20 = (void *)*v6;
  if (v18) {
    goto LABEL_8;
  }
LABEL_11:
  v20[(v14 >> 6) + 8] |= 1 << v14;
  uint64_t v25 = (uint64_t *)(v20[6] + 16 * v14);
  *uint64_t v25 = a3;
  v25[1] = a4;
  char v26 = (void *)(v20[7] + 16 * v14);
  *char v26 = a1;
  v26[1] = a2;
  uint64_t v27 = v20[2];
  BOOL v28 = __OFADD__(v27, 1);
  uint64_t v29 = v27 + 1;
  if (v28)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v20[2] = v29;

  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for IMRichCard(uint64_t a1)
{
  return sub_1A078231C(a1, &qword_1E94FB460);
}

_OWORD *sub_1A08D9AD8(_OWORD *a1, uint64_t a2, uint64_t a3, char a4)
{
  id v5 = (void **)v4;
  unint64_t v10 = (void *)*v4;
  unint64_t v12 = sub_1A087AAA4(a2, a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 < v15 || (a4 & 1) == 0)
  {
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_1A09E0F88();
      goto LABEL_7;
    }
    sub_1A09DE060(v15, a4 & 1);
    unint64_t v21 = sub_1A087AAA4(a2, a3);
    if ((v16 & 1) == (v22 & 1))
    {
      unint64_t v12 = v21;
      char v18 = *v5;
      if (v16) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    uint64_t result = (_OWORD *)sub_1A09F4BE8();
    __break(1u);
    return result;
  }
LABEL_7:
  char v18 = *v5;
  if (v16)
  {
LABEL_8:
    uint64_t v19 = (_OWORD *)(v18[7] + 32 * v12);
    _s17IMSharedUtilities29RemoteIntentBroadcastEncodingVwxx_0((uint64_t)v19);
    return sub_1A07825B4(a1, v19);
  }
LABEL_13:
  sub_1A08DA378(v12, a2, a3, a1, v18);

  return (_OWORD *)swift_bridgeObjectRetain();
}

uint64_t sub_1A08D9C2C(uint64_t a1, uint64_t a2, char a3)
{
  id v4 = (void **)v3;
  id v8 = (void *)*v3;
  unint64_t v10 = sub_1A087ACB8(a2);
  uint64_t v11 = v8[2];
  BOOL v12 = (v9 & 1) == 0;
  uint64_t v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v14 = v9;
  uint64_t v15 = v8[3];
  if (v15 < v13 || (a3 & 1) == 0)
  {
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_1A09E1188();
      goto LABEL_7;
    }
    sub_1A09DE680(v13, a3 & 1);
    unint64_t v24 = sub_1A087ACB8(a2);
    if ((v14 & 1) == (v25 & 1))
    {
      unint64_t v10 = v24;
      char v16 = *v4;
      if (v14) {
        goto LABEL_8;
      }
LABEL_13:
      uint64_t v26 = sub_1A09F33A8();
      MEMORY[0x1F4188790](v26);
      BOOL v28 = (char *)&v30 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, uint64_t))(v29 + 16))(v28, a2);
      return sub_1A08DA3E4(v10, (uint64_t)v28, a1, v16);
    }
LABEL_15:
    sub_1A09F33A8();
    uint64_t result = sub_1A09F4BE8();
    __break(1u);
    return result;
  }
LABEL_7:
  char v16 = *v4;
  if ((v14 & 1) == 0) {
    goto LABEL_13;
  }
LABEL_8:
  uint64_t v17 = v16[7];
  uint64_t v18 = sub_1A09F33A8();
  uint64_t v19 = *(void *)(v18 - 8);
  char v20 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v19 + 40);
  uint64_t v21 = v18;
  uint64_t v22 = v17 + *(void *)(v19 + 72) * v10;

  return v20(v22, a1, v21);
}

uint64_t sub_1A08D9E2C(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_1A08D9E58(a1, a2, a3, a4, (void (*)(void))sub_1A09E14AC, (void (*)(void))sub_1A09DEAF4);
}

uint64_t sub_1A08D9E58(uint64_t a1, uint64_t a2, uint64_t a3, char a4, void (*a5)(void), void (*a6)(void))
{
  char v9 = v6;
  uint64_t v14 = *v6;
  unint64_t v16 = sub_1A087AAA4(a2, a3);
  uint64_t v17 = *(void *)(v14 + 16);
  BOOL v18 = (v15 & 1) == 0;
  uint64_t v19 = v17 + v18;
  if (__OFADD__(v17, v18))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v20 = v15;
  uint64_t v21 = *(void *)(v14 + 24);
  if (v21 >= v19 && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v21 >= v19 && (a4 & 1) == 0)
  {
    a5();
LABEL_7:
    uint64_t v22 = (void *)*v9;
    if (v20)
    {
LABEL_8:
      uint64_t v23 = v22[7];
      uint64_t result = swift_release();
      *(void *)(v23 + 8 * v16) = a1;
      return result;
    }
    goto LABEL_11;
  }
  a6();
  unint64_t v25 = sub_1A087AAA4(a2, a3);
  if ((v20 & 1) != (v26 & 1))
  {
LABEL_17:
    uint64_t result = sub_1A09F4BE8();
    __break(1u);
    return result;
  }
  unint64_t v16 = v25;
  uint64_t v22 = (void *)*v9;
  if (v20) {
    goto LABEL_8;
  }
LABEL_11:
  v22[(v16 >> 6) + 8] |= 1 << v16;
  uint64_t v27 = (uint64_t *)(v22[6] + 16 * v16);
  *uint64_t v27 = a2;
  v27[1] = a3;
  *(void *)(v22[7] + 8 * v16) = a1;
  uint64_t v28 = v22[2];
  BOOL v29 = __OFADD__(v28, 1);
  uint64_t v30 = v28 + 1;
  if (v29)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v22[2] = v30;

  return swift_bridgeObjectRetain();
}

uint64_t sub_1A08D9FE4(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  id v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_1A087AAA4(a2, a3);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_1A09E1668();
LABEL_7:
    BOOL v18 = (void *)*v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = v18[7] + 40 * v12;
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      long long v21 = *(_OWORD *)(a1 + 16);
      *(_OWORD *)uint64_t v19 = *(_OWORD *)a1;
      *(_OWORD *)(v19 + 16) = v21;
      *(void *)(v19 + 32) = *(void *)(a1 + 32);
      return result;
    }
    goto LABEL_11;
  }
  sub_1A09DF124(v15, a4 & 1);
  unint64_t v22 = sub_1A087AAA4(a2, a3);
  if ((v16 & 1) != (v23 & 1))
  {
LABEL_17:
    uint64_t result = sub_1A09F4BE8();
    __break(1u);
    return result;
  }
  unint64_t v12 = v22;
  BOOL v18 = (void *)*v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  v18[(v12 >> 6) + 8] |= 1 << v12;
  unint64_t v24 = (uint64_t *)(v18[6] + 16 * v12);
  *unint64_t v24 = a2;
  v24[1] = a3;
  uint64_t v25 = v18[7] + 40 * v12;
  long long v26 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)uint64_t v25 = *(_OWORD *)a1;
  *(_OWORD *)(v25 + 16) = v26;
  *(void *)(v25 + 32) = *(void *)(a1 + 32);
  uint64_t v27 = v18[2];
  BOOL v28 = __OFADD__(v27, 1);
  uint64_t v29 = v27 + 1;
  if (v28)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  _OWORD v18[2] = v29;

  return swift_bridgeObjectRetain();
}

uint64_t sub_1A08DA18C(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  id v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_1A087AAA4(a2, a3);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_1A09E1864();
LABEL_7:
    BOOL v18 = (void *)*v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = v18[7];
      uint64_t result = swift_bridgeObjectRelease();
      *(void *)(v19 + 8 * v12) = a1;
      return result;
    }
    goto LABEL_11;
  }
  sub_1A09DF480(v15, a4 & 1);
  unint64_t v21 = sub_1A087AAA4(a2, a3);
  if ((v16 & 1) != (v22 & 1))
  {
LABEL_17:
    uint64_t result = sub_1A09F4BE8();
    __break(1u);
    return result;
  }
  unint64_t v12 = v21;
  BOOL v18 = (void *)*v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  v18[(v12 >> 6) + 8] |= 1 << v12;
  char v23 = (uint64_t *)(v18[6] + 16 * v12);
  *char v23 = a2;
  v23[1] = a3;
  *(void *)(v18[7] + 8 * v12) = a1;
  uint64_t v24 = v18[2];
  BOOL v25 = __OFADD__(v24, 1);
  uint64_t v26 = v24 + 1;
  if (v25)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  _OWORD v18[2] = v26;

  return swift_bridgeObjectRetain();
}

_OWORD *sub_1A08DA2FC(unint64_t a1, uint64_t a2, _OWORD *a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v5 = a4[6] + 40 * a1;
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)uint64_t v5 = *(_OWORD *)a2;
  *(_OWORD *)(v5 + 16) = v6;
  *(void *)(v5 + 32) = *(void *)(a2 + 32);
  uint64_t result = sub_1A07825B4(a3, (_OWORD *)(a4[7] + 32 * a1));
  uint64_t v8 = a4[2];
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (v9) {
    __break(1u);
  }
  else {
    a4[2] = v10;
  }
  return result;
}

_OWORD *sub_1A08DA378(unint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4, void *a5)
{
  a5[(a1 >> 6) + 8] |= 1 << a1;
  long long v6 = (void *)(a5[6] + 16 * a1);
  *long long v6 = a2;
  v6[1] = a3;
  uint64_t result = sub_1A07825B4(a4, (_OWORD *)(a5[7] + 32 * a1));
  uint64_t v8 = a5[2];
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (v9) {
    __break(1u);
  }
  else {
    a5[2] = v10;
  }
  return result;
}

uint64_t sub_1A08DA3E4(unint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v8 = a4[6];
  uint64_t v9 = sub_1A09F33A8();
  uint64_t v10 = *(void *)(v9 - 8);
  char v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 32);
  uint64_t v12 = *(void *)(v10 + 72) * a1;
  v11(v8 + v12, a2, v9);
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v11)(a4[7] + v12, a3, v9);
  uint64_t v14 = a4[2];
  BOOL v15 = __OFADD__(v14, 1);
  uint64_t v16 = v14 + 1;
  if (v15) {
    __break(1u);
  }
  else {
    a4[2] = v16;
  }
  return result;
}

unint64_t sub_1A08DA4C0(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  a5[(result >> 6) + 8] |= 1 << result;
  uint64_t v5 = (void *)(a5[6] + 16 * result);
  *uint64_t v5 = a2;
  v5[1] = a3;
  *(void *)(a5[7] + 8 * result) = a4;
  uint64_t v6 = a5[2];
  BOOL v7 = __OFADD__(v6, 1);
  uint64_t v8 = v6 + 1;
  if (v7) {
    __break(1u);
  }
  else {
    a5[2] = v8;
  }
  return result;
}

void __swiftcall IMRichCardStyle.init(dictionary:)(IMRichCardStyle_optional *__return_ptr retstr, Swift::OpaquePointer dictionary)
{
  id v2 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  uint64_t v3 = (void *)sub_1A09F3CE8();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_initWithDictionary_, v3);
}

id IMRichCardStyle.init(dictionary:)(uint64_t a1)
{
  id v2 = v1;
  if (*(void *)(a1 + 16)
    && (unint64_t v4 = sub_1A087AAA4(1684828002, 0xE400000000000000), (v5 & 1) != 0)
    && (sub_1A0785268(*(void *)(a1 + 56) + 32 * v4, (uint64_t)&v15),
        sub_1A078231C(0, (unint64_t *)&qword_1EB4A59B8),
        (swift_dynamicCast() & 1) != 0))
  {
    id v6 = objc_msgSend(v14, sel_BOOLValue);

    if (!*(void *)(a1 + 16)) {
      goto LABEL_11;
    }
  }
  else
  {
    id v6 = 0;
    if (!*(void *)(a1 + 16)) {
      goto LABEL_11;
    }
  }
  unint64_t v7 = sub_1A087AAA4(0x7363696C617469, 0xE700000000000000);
  if ((v8 & 1) == 0
    || (sub_1A0785268(*(void *)(a1 + 56) + 32 * v7, (uint64_t)&v15),
        sub_1A078231C(0, (unint64_t *)&qword_1EB4A59B8),
        (swift_dynamicCast() & 1) == 0))
  {
LABEL_11:
    id v9 = 0;
    if (!*(void *)(a1 + 16)) {
      goto LABEL_14;
    }
    goto LABEL_12;
  }
  id v9 = objc_msgSend(v14, sel_BOOLValue);

  if (!*(void *)(a1 + 16)) {
    goto LABEL_14;
  }
LABEL_12:
  unint64_t v10 = sub_1A087AAA4(0x6E696C7265646E75, 0xE900000000000065);
  if (v11)
  {
    sub_1A0785268(*(void *)(a1 + 56) + 32 * v10, (uint64_t)&v15);
    goto LABEL_15;
  }
LABEL_14:
  long long v15 = 0u;
  long long v16 = 0u;
LABEL_15:
  swift_bridgeObjectRelease();
  if (!*((void *)&v16 + 1))
  {
    sub_1A0783C7C((uint64_t)&v15);
    goto LABEL_19;
  }
  sub_1A078231C(0, (unint64_t *)&qword_1EB4A59B8);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_19:
    id v12 = 0;
    return objc_msgSend(v2, sel_initWithBold_italics_underline_, v6, v9, v12);
  }
  id v12 = objc_msgSend(v14, sel_BOOLValue);

  return objc_msgSend(v2, sel_initWithBold_italics_underline_, v6, v9, v12);
}

unint64_t sub_1A08DA8AC()
{
  sub_1A07856F8(&qword_1E94F9368);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1A0A099E0;
  *(void *)(inited + 32) = 1684828002;
  *(void *)(inited + 40) = 0xE400000000000000;
  objc_msgSend(v0, sel_bold);
  uint64_t v2 = sub_1A09F40F8();
  uint64_t v3 = sub_1A078231C(0, (unint64_t *)&qword_1EB4A59B8);
  *(void *)(inited + 48) = v2;
  *(void *)(inited + 72) = v3;
  *(void *)(inited + 80) = 0x7363696C617469;
  *(void *)(inited + 88) = 0xE700000000000000;
  objc_msgSend(v0, sel_italics);
  *(void *)(inited + 96) = sub_1A09F40F8();
  *(void *)(inited + 120) = v3;
  *(void *)(inited + 128) = 0x6E696C7265646E75;
  *(void *)(inited + 136) = 0xE900000000000065;
  objc_msgSend(v0, sel_underline);
  uint64_t v4 = sub_1A09F40F8();
  *(void *)(inited + 168) = v3;
  *(void *)(inited + 144) = v4;
  return sub_1A08D7480(inited);
}

uint64_t IMRichCardStyle.isEqual(_:)(uint64_t a1)
{
  uint64_t v2 = sub_1A0875C10(a1, (uint64_t)v9);
  if (v10)
  {
    type metadata accessor for IMRichCardStyle(v2);
    if (swift_dynamicCast())
    {
      unsigned int v3 = objc_msgSend(v1, sel_bold);
      if (v3 == objc_msgSend(v8, sel_bold))
      {
        unsigned int v4 = objc_msgSend(v1, sel_italics);
        if (v4 == objc_msgSend(v8, sel_italics))
        {
          unsigned int v6 = objc_msgSend(v1, sel_underline);
          unsigned int v7 = objc_msgSend(v8, sel_underline);

          return v6 ^ v7 ^ 1;
        }
      }
    }
  }
  else
  {
    sub_1A0783C7C((uint64_t)v9);
  }
  return 0;
}

void __swiftcall IMRichCardStyle.init()(IMRichCardStyle *__return_ptr retstr)
{
  id v1 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());

  objc_msgSend(v1, sel_init);
}

void IMRichCardStyle.init()()
{
}

uint64_t type metadata accessor for IMRichCardStyle(uint64_t a1)
{
  return sub_1A078231C(a1, &qword_1E94FB4F0);
}

uint64_t sub_1A08DAC54()
{
  uint64_t v0 = sub_1A09F39E8();
  sub_1A078D848(v0, qword_1E94FB4F8);
  sub_1A078510C(v0, (uint64_t)qword_1E94FB4F8);
  return sub_1A09F39D8();
}

uint64_t sub_1A08DACD4()
{
  type metadata accessor for RemoteIntentFileMirrorRequestManager();
  uint64_t v0 = swift_allocObject();
  uint64_t result = swift_defaultActor_initialize();
  *(void *)(v0 + 112) = MEMORY[0x1E4FBC868];
  qword_1E94FB510 = v0;
  return result;
}

uint64_t static RemoteIntentFileMirrorRequestManager.shared.getter()
{
  if (qword_1E94F8560 != -1) {
    swift_once();
  }

  return swift_retain();
}

uint64_t sub_1A08DAD78(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (!v2) {
    return MEMORY[0x1E4FBC868];
  }
  unsigned int v4 = (uint64_t *)(v1 + 112);
  swift_bridgeObjectRetain();
  swift_beginAccess();
  char v5 = (uint64_t *)(a1 + 40);
  unsigned int v6 = (void *)MEMORY[0x1E4FBC868];
  BOOL v28 = (uint64_t *)(v1 + 112);
  while (1)
  {
    uint64_t v7 = *v4;
    if (!*(void *)(*v4 + 16)) {
      goto LABEL_4;
    }
    uint64_t v9 = *(v5 - 1);
    uint64_t v8 = *v5;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    unint64_t v10 = sub_1A087AAA4(v9, v8);
    if (v11) {
      break;
    }
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
LABEL_4:
    v5 += 2;
    if (!--v2)
    {
      swift_bridgeObjectRelease();
      return (uint64_t)v6;
    }
  }
  uint64_t v12 = *(void *)(*(void *)(v7 + 56) + 8 * v10);
  swift_retain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v15 = sub_1A087AAA4(v9, v8);
  uint64_t v16 = v6[2];
  BOOL v17 = (v14 & 1) == 0;
  uint64_t v18 = v16 + v17;
  if (!__OFADD__(v16, v17))
  {
    char v19 = v14;
    if (v6[3] >= v18)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        if ((v14 & 1) == 0) {
          goto LABEL_16;
        }
      }
      else
      {
        sub_1A09E0BCC();
        if ((v19 & 1) == 0) {
          goto LABEL_16;
        }
      }
    }
    else
    {
      sub_1A09DD61C(v18, isUniquelyReferenced_nonNull_native);
      unint64_t v20 = sub_1A087AAA4(v9, v8);
      if ((v19 & 1) != (v21 & 1)) {
        goto LABEL_24;
      }
      unint64_t v15 = v20;
      if ((v19 & 1) == 0)
      {
LABEL_16:
        v6[(v15 >> 6) + 8] |= 1 << v15;
        char v23 = (uint64_t *)(v6[6] + 16 * v15);
        *char v23 = v9;
        v23[1] = v8;
        *(void *)(v6[7] + 8 * v15) = v12;
        uint64_t v24 = v6[2];
        BOOL v25 = __OFADD__(v24, 1);
        uint64_t v26 = v24 + 1;
        if (v25) {
          goto LABEL_23;
        }
        v6[2] = v26;
        swift_bridgeObjectRetain();
        goto LABEL_18;
      }
    }
    uint64_t v22 = v6[7];
    swift_release();
    *(void *)(v22 + 8 * v15) = v12;
LABEL_18:
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    unsigned int v4 = v28;
    goto LABEL_4;
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_1A09F4BE8();
  __break(1u);
  return result;
}

void sub_1A08DAFC4()
{
  swift_beginAccess();
  uint64_t v0 = swift_bridgeObjectRetain();
  if ((sub_1A0890614(v0) & 0xC000000000000001) != 0) {
    sub_1A09F45F8();
  }
  swift_bridgeObjectRelease();
  if (qword_1E94F8558 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1A09F39E8();
  sub_1A078510C(v1, (uint64_t)qword_1E94FB4F8);
  uint64_t v2 = sub_1A09F39C8();
  os_log_type_t v3 = sub_1A09F4388();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 134218240;
    sub_1A09F4528();
    *(_WORD *)(v4 + 12) = 2048;
    sub_1A09F4528();
    _os_log_impl(&dword_1A0772000, v2, v3, "Current mirror fetch request info: %ld total requests in progress for %ld total transfer guids.", (uint8_t *)v4, 0x16u);
    MEMORY[0x1A6228C20](v4, -1, -1);
  }
}

uint64_t sub_1A08DB150(uint64_t a1)
{
  *(void *)(v2 + 88) = a1;
  *(void *)(v2 + 96) = v1;
  return MEMORY[0x1F4188298](sub_1A08DB170, v1, 0);
}

uint64_t sub_1A08DB170()
{
  char v38 = v0;
  if (qword_1E94F8558 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1A09F39E8();
  v0[13] = sub_1A078510C(v1, (uint64_t)qword_1E94FB4F8);
  swift_bridgeObjectRetain_n();
  uint64_t v2 = sub_1A09F39C8();
  os_log_type_t v3 = sub_1A09F4358();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v36 = swift_slowAlloc();
    uint64_t v37 = v36;
    *(_DWORD *)uint64_t v4 = 136315138;
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_1A09F42C8();
    unint64_t v7 = v6;
    swift_bridgeObjectRelease();
    v0[10] = sub_1A0785144(v5, v7, &v37);
    sub_1A09F4528();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A0772000, v2, v3, "fetchMirrors: fetching: %s", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1A6228C20](v36, -1, -1);
    MEMORY[0x1A6228C20](v4, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v8 = v0[11];
  uint64_t v9 = swift_bridgeObjectRetain();
  unint64_t v10 = sub_1A08DCD14(v9);
  swift_bridgeObjectRelease();
  uint64_t v11 = sub_1A08DAD78((uint64_t)v10);
  swift_release();
  swift_bridgeObjectRetain();
  uint64_t v12 = swift_bridgeObjectRetain();
  uint64_t v13 = sub_1A08907B0(v12);
  if (*(void *)(v13 + 16) <= *(void *)(v8 + 16) >> 3)
  {
    uint64_t v37 = v0[11];
    sub_1A08DD228(v13);
    swift_bridgeObjectRelease();
    uint64_t v14 = v37;
  }
  else
  {
    uint64_t v14 = sub_1A08DD3D0(v13, v0[11]);
    swift_bridgeObjectRelease();
  }
  v0[14] = v14;
  uint64_t v15 = sub_1A0890614(v11);
  v0[15] = v15;
  v0[2] = 0;
  if (*(void *)(v14 + 16))
  {
    swift_bridgeObjectRetain();
    uint64_t v16 = sub_1A09F39C8();
    os_log_type_t v17 = sub_1A09F4388();
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v18 = swift_slowAlloc();
      *(_DWORD *)uint64_t v18 = 134218240;
      v0[7] = *(void *)(v14 + 16);
      sub_1A09F4528();
      swift_bridgeObjectRelease();
      *(_WORD *)(v18 + 12) = 2048;
      if ((v15 & 0xC000000000000001) != 0) {
        uint64_t v19 = sub_1A09F45F8();
      }
      else {
        uint64_t v19 = *(void *)(v15 + 16);
      }
      v0[8] = v19;
      sub_1A09F4528();
      _os_log_impl(&dword_1A0772000, v16, v17, "fetchMirrors: Creating a new mirror request for %ld guids, and waiting on %ld active requests for the others.", (uint8_t *)v18, 0x16u);
      MEMORY[0x1A6228C20](v18, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease();
    }

    uint64_t v24 = v0[12];
    uint64_t v25 = swift_bridgeObjectRetain();
    uint64_t v26 = sub_1A08DCD14(v25);
    swift_bridgeObjectRelease();
    type metadata accessor for RemoteIntentFileMirrorRequestTask();
    uint64_t v27 = swift_allocObject();
    *(unsigned char *)(v27 + 24) = 0;
    *(void *)(v27 + 32) = 0;
    *(unsigned char *)(v27 + 40) = -1;
    *(void *)(v27 + 48) = MEMORY[0x1E4FBC860];
    *(void *)(v27 + 56) = 0;
    *(void *)(v27 + 16) = v26;
    v0[2] = v27;
    swift_retain();
    sub_1A08DED94(v14, v24, v0 + 2);
    swift_release();
  }
  else
  {
    unint64_t v20 = sub_1A09F39C8();
    os_log_type_t v21 = sub_1A09F4388();
    if (os_log_type_enabled(v20, v21))
    {
      uint64_t v22 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v22 = 134217984;
      if ((v15 & 0xC000000000000001) != 0) {
        uint64_t v23 = sub_1A09F45F8();
      }
      else {
        uint64_t v23 = *(void *)(v15 + 16);
      }
      v0[9] = v23;
      sub_1A09F4528();
      _os_log_impl(&dword_1A0772000, v20, v21, "fetchMirrors: All guids have active requests in progress. Waiting on: %ld active requests", v22, 0xCu);
      MEMORY[0x1A6228C20](v22, -1, -1);
    }
  }
  v0[16] = 0;
  uint64_t v29 = v0[11];
  uint64_t v28 = v0[12];
  uint64_t v30 = sub_1A07856F8(&qword_1E94FB520);
  uint64_t v32 = sub_1A08DF6B4(&qword_1E94FB528, v31, (void (*)(uint64_t))type metadata accessor for RemoteIntentFileMirrorRequestManager);
  uint64_t v33 = (void *)swift_task_alloc();
  v0[17] = (uint64_t)v33;
  v33[2] = v15;
  v33[3] = v29;
  v33[4] = v0 + 2;
  uint64_t v34 = (void *)swift_task_alloc();
  v0[18] = (uint64_t)v34;
  *uint64_t v34 = v0;
  v34[1] = sub_1A08DB760;
  uint64_t v40 = v30;
  return MEMORY[0x1F4187F28](v0 + 3, v30, v30, v28, v32, &unk_1E94FB538, v33, v30);
}

uint64_t sub_1A08DB760()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 96);
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1A08DB8B0, v1, 0);
}

uint64_t sub_1A08DB8B0()
{
  uint64_t v15 = v0;
  uint64_t v1 = v0[14];
  uint64_t v2 = v0[12];
  uint64_t v3 = v0[3];
  swift_retain();
  sub_1A08DF254(v1, v2);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  uint64_t v4 = sub_1A09F39C8();
  os_log_type_t v5 = sub_1A09F4388();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = v0[11];
    uint64_t v7 = swift_slowAlloc();
    uint64_t v13 = swift_slowAlloc();
    uint64_t v14 = v13;
    *(_DWORD *)uint64_t v7 = 134218498;
    v0[4] = *(void *)(v3 + 16);
    sub_1A09F4528();
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 12) = 2048;
    v0[5] = *(void *)(v6 + 16);
    sub_1A09F4528();
    *(_WORD *)(v7 + 22) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v8 = sub_1A09F42C8();
    unint64_t v10 = v9;
    swift_bridgeObjectRelease();
    v0[6] = sub_1A0785144(v8, v10, &v14);
    sub_1A09F4528();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1A0772000, v4, v5, "fetchMirrors: completed with %ld mirror files out of requested count: %ld. Requested guids: %s", (uint8_t *)v7, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x1A6228C20](v13, -1, -1);
    MEMORY[0x1A6228C20](v7, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
  }

  sub_1A08DAFC4();
  swift_release();
  uint64_t v11 = (uint64_t (*)(uint64_t))v0[1];
  return v11(v3);
}

uint64_t sub_1A08DBB24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[21] = a4;
  v5[22] = a5;
  v5[19] = a2;
  v5[20] = a3;
  v5[18] = a1;
  uint64_t v6 = sub_1A07856F8(&qword_1E94FB558);
  v5[23] = v6;
  v5[24] = *(void *)(v6 - 8);
  v5[25] = swift_task_alloc();
  sub_1A07856F8(&qword_1EB4A5650);
  v5[26] = swift_task_alloc();
  v5[27] = swift_task_alloc();
  v5[28] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1A08DBC3C, 0, 0);
}

uint64_t sub_1A08DBC3C()
{
  uint64_t v1 = *(void *)(v0 + 160);
  if ((v1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_1A09F45E8();
    type metadata accessor for RemoteIntentFileMirrorRequestTask();
    sub_1A08DF6B4((unint64_t *)&qword_1E94F9B98, 255, (void (*)(uint64_t))type metadata accessor for RemoteIntentFileMirrorRequestTask);
    uint64_t v2 = sub_1A09F42E8();
    uint64_t v1 = *(void *)(v0 + 16);
    uint64_t v44 = *(void *)(v0 + 24);
    uint64_t v6 = *(void *)(v0 + 32);
    uint64_t v7 = *(void *)(v0 + 40);
    unint64_t v8 = *(void *)(v0 + 48);
  }
  else
  {
    uint64_t v9 = -1 << *(unsigned char *)(v1 + 32);
    uint64_t v44 = v1 + 56;
    uint64_t v6 = ~v9;
    uint64_t v10 = -v9;
    if (v10 < 64) {
      uint64_t v11 = ~(-1 << v10);
    }
    else {
      uint64_t v11 = -1;
    }
    unint64_t v8 = v11 & *(void *)(v1 + 56);
    uint64_t v2 = swift_bridgeObjectRetain();
    uint64_t v7 = 0;
  }
  int64_t v43 = (unint64_t)(v6 + 64) >> 6;
  while (v1 < 0)
  {
    uint64_t v16 = sub_1A09F4618();
    if (!v16) {
      goto LABEL_37;
    }
    *(void *)(v0 + 136) = v16;
    type metadata accessor for RemoteIntentFileMirrorRequestTask();
    swift_unknownObjectRetain();
    swift_dynamicCast();
    uint64_t v17 = *(void *)(v0 + 128);
    swift_unknownObjectRelease();
    uint64_t v15 = v7;
    uint64_t v13 = v8;
    if (!v17) {
      goto LABEL_37;
    }
LABEL_30:
    unint64_t v45 = v13;
    uint64_t v46 = v15;
    uint64_t v21 = v1;
    uint64_t v23 = *(void *)(v0 + 216);
    uint64_t v22 = *(void *)(v0 + 224);
    uint64_t v24 = *(void *)(v0 + 168);
    uint64_t v25 = sub_1A09F41C8();
    uint64_t v26 = *(void *)(v25 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v26 + 56))(v22, 1, 1, v25);
    uint64_t v27 = (void *)swift_allocObject();
    long long v27[2] = 0;
    uint64_t v28 = v27 + 2;
    v27[3] = 0;
    v27[4] = v17;
    void v27[5] = v24;
    sub_1A08DF920(v22, v23);
    LODWORD(v23) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v26 + 48))(v23, 1, v25);
    swift_retain();
    swift_bridgeObjectRetain();
    uint64_t v29 = *(void *)(v0 + 216);
    if (v23 == 1)
    {
      sub_1A0784C08(*(void *)(v0 + 216), &qword_1EB4A5650);
      if (*v28) {
        goto LABEL_32;
      }
    }
    else
    {
      sub_1A09F41B8();
      (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v29, v25);
      if (*v28)
      {
LABEL_32:
        swift_getObjectType();
        swift_unknownObjectRetain();
        uint64_t v30 = sub_1A09F4108();
        uint64_t v32 = v31;
        swift_unknownObjectRelease();
        goto LABEL_35;
      }
    }
    uint64_t v30 = 0;
    uint64_t v32 = 0;
LABEL_35:
    uint64_t v1 = v21;
    uint64_t v33 = **(void **)(v0 + 152);
    uint64_t v34 = swift_allocObject();
    *(void *)(v34 + 16) = &unk_1E94FB578;
    *(void *)(v34 + 24) = v27;
    sub_1A07856F8(&qword_1E94FB520);
    uint64_t v35 = v32 | v30;
    if (v32 | v30)
    {
      uint64_t v35 = v0 + 56;
      *(void *)(v0 + 56) = 0;
      *(void *)(v0 + 64) = 0;
      *(void *)(v0 + 72) = v30;
      *(void *)(v0 + 80) = v32;
    }
    uint64_t v12 = *(void *)(v0 + 224);
    *(void *)(v0 + 88) = 1;
    *(void *)(v0 + 96) = v35;
    *(void *)(v0 + 104) = v33;
    swift_task_create();
    swift_release();
    swift_release();
    uint64_t v2 = sub_1A0784C08(v12, &qword_1EB4A5650);
    unint64_t v8 = v45;
    uint64_t v7 = v46;
  }
  if (v8)
  {
    uint64_t v13 = (v8 - 1) & v8;
    unint64_t v14 = __clz(__rbit64(v8)) | (v7 << 6);
    uint64_t v15 = v7;
    goto LABEL_29;
  }
  int64_t v18 = v7 + 1;
  if (__OFADD__(v7, 1))
  {
    __break(1u);
    return MEMORY[0x1F4187C58](v2, v3, v4, v5);
  }
  if (v18 >= v43) {
    goto LABEL_37;
  }
  unint64_t v19 = *(void *)(v44 + 8 * v18);
  uint64_t v15 = v7 + 1;
  if (v19) {
    goto LABEL_28;
  }
  uint64_t v15 = v7 + 2;
  if (v7 + 2 >= v43) {
    goto LABEL_37;
  }
  unint64_t v19 = *(void *)(v44 + 8 * v15);
  if (v19) {
    goto LABEL_28;
  }
  uint64_t v15 = v7 + 3;
  if (v7 + 3 >= v43) {
    goto LABEL_37;
  }
  unint64_t v19 = *(void *)(v44 + 8 * v15);
  if (v19) {
    goto LABEL_28;
  }
  uint64_t v15 = v7 + 4;
  if (v7 + 4 >= v43) {
    goto LABEL_37;
  }
  unint64_t v19 = *(void *)(v44 + 8 * v15);
  if (v19)
  {
LABEL_28:
    uint64_t v13 = (v19 - 1) & v19;
    unint64_t v14 = __clz(__rbit64(v19)) + (v15 << 6);
LABEL_29:
    uint64_t v17 = *(void *)(*(void *)(v1 + 48) + 8 * v14);
    swift_retain();
    if (!v17) {
      goto LABEL_37;
    }
    goto LABEL_30;
  }
  uint64_t v20 = v7 + 5;
  while (v43 != v20)
  {
    unint64_t v19 = *(void *)(v44 + 8 * v20++);
    if (v19)
    {
      uint64_t v15 = v20 - 1;
      goto LABEL_28;
    }
  }
LABEL_37:
  uint64_t v36 = *(uint64_t **)(v0 + 176);
  sub_1A08C1F7C();
  uint64_t v37 = *v36;
  if (*v36)
  {
    uint64_t v38 = *(void *)(v0 + 208);
    uint64_t v39 = sub_1A09F41C8();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56))(v38, 1, 1, v39);
    uint64_t v40 = (void *)swift_allocObject();
    v40[2] = 0;
    v40[3] = 0;
    v40[4] = v37;
    swift_retain();
    sub_1A08DC948(v38, (uint64_t)&unk_1E94FB568, (uint64_t)v40);
    sub_1A0784C08(v38, &qword_1EB4A5650);
  }
  *(void *)(v0 + 120) = MEMORY[0x1E4FBC860];
  sub_1A07856F8(&qword_1E94FB520);
  sub_1A09F4138();
  long long v41 = (void *)swift_task_alloc();
  *(void *)(v0 + 232) = v41;
  *long long v41 = v0;
  v41[1] = sub_1A08DC2A0;
  uint64_t v5 = *(void *)(v0 + 184);
  uint64_t v2 = v0 + 112;
  uint64_t v3 = 0;
  uint64_t v4 = 0;
  return MEMORY[0x1F4187C58](v2, v3, v4, v5);
}

uint64_t sub_1A08DC2A0()
{
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1A08DC39C, 0, 0);
}

uint64_t sub_1A08DC39C()
{
  uint64_t v1 = v0[14];
  if (v1)
  {
    sub_1A09CE93C(v1);
    uint64_t v2 = (void *)swift_task_alloc();
    v0[29] = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_1A08DC2A0;
    uint64_t v3 = v0[23];
    return MEMORY[0x1F4187C58](v0 + 14, 0, 0, v3);
  }
  else
  {
    uint64_t v4 = (void *)v0[18];
    (*(void (**)(void, void))(v0[24] + 8))(v0[25], v0[23]);
    *uint64_t v4 = v0[15];
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v5 = (uint64_t (*)(void))v0[1];
    return v5();
  }
}

uint64_t sub_1A08DC4EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[3] = a1;
  v5[4] = a5;
  uint64_t v6 = (void *)swift_task_alloc();
  v5[5] = v6;
  *uint64_t v6 = v5;
  v6[1] = sub_1A08DC580;
  return sub_1A09CA6A0();
}

uint64_t sub_1A08DC580(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 48) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_1A08DC740;
  }
  else
  {
    *(void *)(v4 + 56) = a1;
    uint64_t v5 = sub_1A08DC6A8;
  }
  return MEMORY[0x1F4188298](v5, 0, 0);
}

uint64_t sub_1A08DC6A8()
{
  uint64_t v1 = *(void *)(v0 + 56);
  uint64_t v2 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  uint64_t v3 = sub_1A08DFA78(v1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  **(void **)(v0 + 24) = v3;
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_1A08DC740()
{
  if (qword_1E94F8558 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void **)(v0 + 48);
  uint64_t v2 = sub_1A09F39E8();
  sub_1A078510C(v2, (uint64_t)qword_1E94FB4F8);
  id v3 = v1;
  id v4 = v1;
  uint64_t v5 = sub_1A09F39C8();
  os_log_type_t v6 = sub_1A09F4378();
  BOOL v7 = os_log_type_enabled(v5, v6);
  uint64_t v8 = *(void **)(v0 + 48);
  if (v7)
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    uint64_t v10 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v9 = 138412290;
    id v11 = v8;
    uint64_t v12 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 16) = v12;
    sub_1A09F4528();
    *uint64_t v10 = v12;

    _os_log_impl(&dword_1A0772000, v5, v6, "fetchMirrors: Caught error while waiting for existing guid request: %@", v9, 0xCu);
    sub_1A07856F8(&qword_1E94F7740);
    swift_arrayDestroy();
    MEMORY[0x1A6228C20](v10, -1, -1);
    MEMORY[0x1A6228C20](v9, -1, -1);
  }
  else
  {
  }
  **(void **)(v0 + 24) = MEMORY[0x1E4FBC860];
  uint64_t v13 = *(uint64_t (**)(void))(v0 + 8);
  return v13();
}

uint64_t sub_1A08DC948(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v4 = v3;
  uint64_t v8 = sub_1A07856F8(&qword_1EB4A5650);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A08DF920(a1, (uint64_t)v10);
  uint64_t v11 = sub_1A09F41C8();
  uint64_t v12 = *(void *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_1A0784C08((uint64_t)v10, &qword_1EB4A5650);
    if (*(void *)(a3 + 16))
    {
LABEL_3:
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v13 = sub_1A09F4108();
      uint64_t v15 = v14;
      swift_unknownObjectRelease();
      goto LABEL_6;
    }
  }
  else
  {
    sub_1A09F41B8();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v10, v11);
    if (*(void *)(a3 + 16)) {
      goto LABEL_3;
    }
  }
  uint64_t v13 = 0;
  uint64_t v15 = 0;
LABEL_6:
  uint64_t v16 = *v4;
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = a2;
  *(void *)(v17 + 24) = a3;
  sub_1A07856F8(&qword_1E94FB520);
  int64_t v18 = (void *)(v15 | v13);
  if (v15 | v13)
  {
    v21[0] = 0;
    v21[1] = 0;
    int64_t v18 = v21;
    long long v21[2] = v13;
    v21[3] = v15;
  }
  v20[1] = 1;
  v20[2] = v18;
  v20[3] = v16;
  swift_task_create();
  return swift_release();
}

uint64_t sub_1A08DCB50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 16) = a1;
  *(void *)(v4 + 24) = a4;
  if (qword_1E94F8658 != -1) {
    swift_once();
  }
  return MEMORY[0x1F4188298](sub_1A08DCBE4, 0, 0);
}

uint64_t sub_1A08DCBE4()
{
  return MEMORY[0x1F4188298](sub_1A08DCC04, qword_1E94FE320, 0);
}

uint64_t sub_1A08DCC04()
{
  sub_1A09CABA8(MEMORY[0x1E4FBC860], 0);
  return MEMORY[0x1F4188298](sub_1A08DCC78, 0, 0);
}

uint64_t sub_1A08DCC78()
{
  **(void **)(v0 + 16) = MEMORY[0x1E4FBC860];
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t RemoteIntentFileMirrorRequestManager.deinit()
{
  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();
  return v0;
}

uint64_t RemoteIntentFileMirrorRequestManager.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();

  return MEMORY[0x1F4188210](v0);
}

uint64_t RemoteIntentFileMirrorRequestManager.unownedExecutor.getter()
{
  return v0;
}

uint64_t sub_1A08DCD08()
{
  return v0;
}

void *sub_1A08DCD14(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  sub_1A07856F8(&qword_1E94FE520);
  id v3 = (void *)swift_allocObject();
  int64_t v4 = j__malloc_size(v3);
  uint64_t v5 = v4 - 32;
  if (v4 < 32) {
    uint64_t v5 = v4 - 17;
  }
  v3[2] = v1;
  v3[3] = 2 * (v5 >> 4);
  uint64_t v6 = sub_1A08DDDD0((uint64_t)&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_1A08C1F7C();
  if (v6 != v1)
  {
    __break(1u);
    return (void *)MEMORY[0x1E4FBC860];
  }
  return v3;
}

void *sub_1A08DCE00(uint64_t a1)
{
  return sub_1A08DD04C(a1, (uint64_t (*)(uint64_t *, void *, uint64_t, uint64_t))sub_1A08DDFD0);
}

uint64_t sub_1A08DCE18(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return MEMORY[0x1E4FBC860];
  }
  sub_1A07856F8(&qword_1E94FB548);
  uint64_t v3 = swift_allocObject();
  int64_t v4 = j__malloc_size((const void *)v3);
  uint64_t v5 = v4 - 32;
  if (v4 < 32) {
    uint64_t v5 = v4 - 17;
  }
  *(void *)(v3 + 16) = v1;
  *(void *)(v3 + 24) = 2 * (v5 >> 4);
  uint64_t v6 = sub_1A08DE1CC(&v8, (_OWORD *)(v3 + 32), v1, a1);
  swift_bridgeObjectRetain();
  sub_1A08C1F7C();
  if (v6 != (void *)v1)
  {
    __break(1u);
    return MEMORY[0x1E4FBC860];
  }
  return v3;
}

size_t sub_1A08DCF00(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return MEMORY[0x1E4FBC860];
  }
  sub_1A07856F8(&qword_1E94FB550);
  uint64_t v3 = *(void *)(sub_1A09F33A8() - 8);
  uint64_t v4 = *(void *)(v3 + 72);
  unint64_t v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v6 = (void *)swift_allocObject();
  size_t result = j__malloc_size(v6);
  if (v4)
  {
    if (result - v5 != 0x8000000000000000 || v4 != -1)
    {
      v6[2] = v1;
      _OWORD v6[3] = 2 * ((uint64_t)(result - v5) / v4);
      swift_bridgeObjectRetain();
      uint64_t v9 = sub_1A08DE360(&v10, (char *)v6 + v5, v1, a1);
      sub_1A08C1F7C();
      if (v9 == (void *)v1) {
        return (size_t)v6;
      }
      __break(1u);
      return MEMORY[0x1E4FBC860];
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void *sub_1A08DD034(uint64_t a1)
{
  return sub_1A08DD04C(a1, (uint64_t (*)(uint64_t *, void *, uint64_t, uint64_t))sub_1A08DE788);
}

void *sub_1A08DD04C(uint64_t a1, uint64_t (*a2)(uint64_t *, void *, uint64_t, uint64_t))
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (!v2) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  sub_1A07856F8(&qword_1E94F76D8);
  unint64_t v5 = (void *)swift_allocObject();
  int64_t v6 = j__malloc_size(v5);
  uint64_t v7 = v6 - 32;
  if (v6 < 32) {
    uint64_t v7 = v6 - 25;
  }
  v5[2] = v2;
  v5[3] = (2 * (v7 >> 3)) | 1;
  uint64_t v8 = a2(&v10, v5 + 4, v2, a1);
  swift_bridgeObjectRetain();
  sub_1A08C1F7C();
  if (v8 != v2)
  {
    __break(1u);
    return (void *)MEMORY[0x1E4FBC860];
  }
  return v5;
}

void *sub_1A08DD140(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  sub_1A07856F8(&qword_1E94FE520);
  uint64_t v3 = (void *)swift_allocObject();
  int64_t v4 = j__malloc_size(v3);
  uint64_t v5 = v4 - 32;
  if (v4 < 32) {
    uint64_t v5 = v4 - 17;
  }
  v3[2] = v1;
  v3[3] = 2 * (v5 >> 4);
  uint64_t v6 = sub_1A08DE984((uint64_t)&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_1A08C1F7C();
  if (v6 != v1)
  {
    __break(1u);
    return (void *)MEMORY[0x1E4FBC860];
  }
  return v3;
}

uint64_t sub_1A08DD228(uint64_t result)
{
  if (!*(void *)(*(void *)v1 + 16)) {
    return result;
  }
  uint64_t v2 = result;
  uint64_t v3 = result + 56;
  uint64_t v4 = 1 << *(unsigned char *)(result + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(result + 56);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  size_t result = swift_bridgeObjectRetain();
  int64_t v8 = 0;
  while (1)
  {
    if (v6)
    {
      unint64_t v9 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v10 = v9 | (v8 << 6);
      goto LABEL_6;
    }
    int64_t v14 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
LABEL_29:
      __break(1u);
      return result;
    }
    if (v14 >= v7) {
      goto LABEL_24;
    }
    unint64_t v15 = *(void *)(v3 + 8 * v14);
    ++v8;
    if (!v15)
    {
      int64_t v8 = v14 + 1;
      if (v14 + 1 >= v7) {
        goto LABEL_24;
      }
      unint64_t v15 = *(void *)(v3 + 8 * v8);
      if (!v15)
      {
        int64_t v8 = v14 + 2;
        if (v14 + 2 >= v7) {
          goto LABEL_24;
        }
        unint64_t v15 = *(void *)(v3 + 8 * v8);
        if (!v15)
        {
          int64_t v8 = v14 + 3;
          if (v14 + 3 >= v7) {
            goto LABEL_24;
          }
          unint64_t v15 = *(void *)(v3 + 8 * v8);
          if (!v15) {
            break;
          }
        }
      }
    }
LABEL_23:
    unint64_t v6 = (v15 - 1) & v15;
    unint64_t v10 = __clz(__rbit64(v15)) + (v8 << 6);
LABEL_6:
    uint64_t v11 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v10);
    uint64_t v12 = *v11;
    uint64_t v13 = v11[1];
    swift_bridgeObjectRetain();
    sub_1A09C2800(v12, v13);
    swift_bridgeObjectRelease();
    size_t result = swift_bridgeObjectRelease();
  }
  int64_t v16 = v14 + 4;
  if (v16 < v7)
  {
    unint64_t v15 = *(void *)(v3 + 8 * v16);
    if (!v15)
    {
      while (1)
      {
        int64_t v8 = v16 + 1;
        if (__OFADD__(v16, 1)) {
          goto LABEL_29;
        }
        if (v8 >= v7) {
          goto LABEL_24;
        }
        unint64_t v15 = *(void *)(v3 + 8 * v8);
        ++v16;
        if (v15) {
          goto LABEL_23;
        }
      }
    }
    int64_t v8 = v16;
    goto LABEL_23;
  }
LABEL_24:

  return swift_release();
}

uint64_t sub_1A08DD3D0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  uint64_t v43 = *MEMORY[0x1E4F143B8];
  if (*(void *)(a2 + 16))
  {
    uint64_t v4 = *(void *)(a1 + 56);
    uint64_t v37 = a1 + 56;
    uint64_t v5 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v35 = ~v5;
    if (-v5 < 64) {
      uint64_t v6 = ~(-1 << -(char)v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & v4;
    int64_t v36 = (unint64_t)(63 - v5) >> 6;
    uint64_t v8 = a2 + 56;
    swift_bridgeObjectRetain();
    int64_t v9 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v10 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v11 = v10 | (v9 << 6);
      }
      else
      {
        int64_t v12 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
          __break(1u);
          goto LABEL_49;
        }
        if (v12 >= v36) {
          goto LABEL_47;
        }
        unint64_t v13 = *(void *)(v37 + 8 * v12);
        int64_t v14 = v9 + 1;
        if (!v13)
        {
          int64_t v14 = v9 + 2;
          if (v9 + 2 >= v36) {
            goto LABEL_47;
          }
          unint64_t v13 = *(void *)(v37 + 8 * v14);
          if (!v13)
          {
            int64_t v14 = v9 + 3;
            if (v9 + 3 >= v36) {
              goto LABEL_47;
            }
            unint64_t v13 = *(void *)(v37 + 8 * v14);
            if (!v13)
            {
              int64_t v14 = v9 + 4;
              if (v9 + 4 >= v36) {
                goto LABEL_47;
              }
              unint64_t v13 = *(void *)(v37 + 8 * v14);
              if (!v13)
              {
                int64_t v15 = v9 + 5;
                if (v9 + 5 >= v36)
                {
LABEL_47:
                  sub_1A08C1F7C();
                  return v2;
                }
                unint64_t v13 = *(void *)(v37 + 8 * v15);
                if (!v13)
                {
                  while (1)
                  {
                    int64_t v14 = v15 + 1;
                    if (__OFADD__(v15, 1)) {
                      break;
                    }
                    if (v14 >= v36) {
                      goto LABEL_47;
                    }
                    unint64_t v13 = *(void *)(v37 + 8 * v14);
                    ++v15;
                    if (v13) {
                      goto LABEL_24;
                    }
                  }
LABEL_49:
                  __break(1u);
                }
                int64_t v14 = v9 + 5;
              }
            }
          }
        }
LABEL_24:
        unint64_t v7 = (v13 - 1) & v13;
        unint64_t v11 = __clz(__rbit64(v13)) + (v14 << 6);
        int64_t v9 = v14;
      }
      int64_t v16 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v11);
      uint64_t v18 = *v16;
      uint64_t v17 = v16[1];
      sub_1A09F4C48();
      swift_bridgeObjectRetain();
      sub_1A09F3DA8();
      uint64_t v19 = sub_1A09F4C88();
      uint64_t v20 = -1 << *(unsigned char *)(v2 + 32);
      unint64_t v21 = v19 & ~v20;
      if ((*(void *)(v8 + ((v21 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v21)) {
        break;
      }
LABEL_6:
      swift_bridgeObjectRelease();
    }
    uint64_t v22 = *(void *)(v2 + 48);
    uint64_t v23 = (void *)(v22 + 16 * v21);
    BOOL v24 = *v23 == v18 && v23[1] == v17;
    if (v24 || (sub_1A09F4B28() & 1) != 0)
    {
      uint64_t isStackAllocationSafe = swift_bridgeObjectRelease();
      uint64_t v38 = a1;
      uint64_t v39 = v37;
      uint64_t v40 = v35;
      int64_t v41 = v9;
      unint64_t v42 = v7;
    }
    else
    {
      uint64_t v25 = ~v20;
      do
      {
        unint64_t v21 = (v21 + 1) & v25;
        if (((*(void *)(v8 + ((v21 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v21) & 1) == 0) {
          goto LABEL_6;
        }
        uint64_t v26 = (void *)(v22 + 16 * v21);
        BOOL v27 = *v26 == v18 && v26[1] == v17;
      }
      while (!v27 && (sub_1A09F4B28() & 1) == 0);
      uint64_t v38 = a1;
      uint64_t v39 = v37;
      uint64_t v40 = v35;
      int64_t v41 = v9;
      unint64_t v42 = v7;
      uint64_t isStackAllocationSafe = swift_bridgeObjectRelease();
    }
    char v29 = *(unsigned char *)(v2 + 32);
    unint64_t v30 = (unint64_t)((1 << v29) + 63) >> 6;
    size_t v31 = 8 * v30;
    if ((v29 & 0x3Fu) < 0xE
      || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), isStackAllocationSafe))
    {
      MEMORY[0x1F4188790](isStackAllocationSafe);
      memcpy((char *)&v35 - ((v31 + 15) & 0x3FFFFFFFFFFFFFF0), (const void *)(v2 + 56), v31);
      uint64_t v32 = sub_1A08DD840((uint64_t)&v35 - ((v31 + 15) & 0x3FFFFFFFFFFFFFF0), v30, v2, v21, &v38);
      swift_release();
      sub_1A08C1F7C();
    }
    else
    {
      uint64_t v33 = (void *)swift_slowAlloc();
      memcpy(v33, (const void *)(v2 + 56), v31);
      uint64_t v32 = sub_1A08DD840((uint64_t)v33, v30, v2, v21, &v38);
      swift_release();
      sub_1A08C1F7C();
      MEMORY[0x1A6228C20](v33, -1, -1);
    }
    return v32;
  }
  else
  {
    swift_release();
    return MEMORY[0x1E4FBC870];
  }
}

uint64_t sub_1A08DD840(uint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, void *a5)
{
  uint64_t v7 = *(void *)(a3 + 16);
  uint64_t v39 = (unint64_t *)result;
  *(void *)(result + ((a4 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a4) - 1;
  uint64_t v8 = v7 - 1;
  uint64_t v40 = a3 + 56;
  while (2)
  {
    uint64_t v38 = v8;
    do
    {
      while (1)
      {
        int64_t v9 = a5[3];
        unint64_t v10 = a5[4];
        if (v10)
        {
          uint64_t v11 = (v10 - 1) & v10;
          unint64_t v12 = __clz(__rbit64(v10)) | (v9 << 6);
          goto LABEL_16;
        }
        int64_t v13 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
          __break(1u);
          goto LABEL_47;
        }
        int64_t v14 = (unint64_t)(a5[2] + 64) >> 6;
        int64_t v15 = a5[3];
        if (v13 >= v14) {
          goto LABEL_45;
        }
        uint64_t v16 = a5[1];
        unint64_t v17 = *(void *)(v16 + 8 * v13);
        if (!v17)
        {
          int64_t v18 = v9 + 2;
          int64_t v15 = v9 + 1;
          if (v9 + 2 >= v14) {
            goto LABEL_45;
          }
          unint64_t v17 = *(void *)(v16 + 8 * v18);
          if (!v17)
          {
            int64_t v15 = v9 + 2;
            if (v9 + 3 >= v14) {
              goto LABEL_45;
            }
            unint64_t v17 = *(void *)(v16 + 8 * (v9 + 3));
            if (v17)
            {
              int64_t v13 = v9 + 3;
              goto LABEL_15;
            }
            int64_t v18 = v9 + 4;
            int64_t v15 = v9 + 3;
            if (v9 + 4 >= v14) {
              goto LABEL_45;
            }
            unint64_t v17 = *(void *)(v16 + 8 * v18);
            if (!v17)
            {
              int64_t v13 = v9 + 5;
              int64_t v15 = v9 + 4;
              if (v9 + 5 >= v14) {
                goto LABEL_45;
              }
              unint64_t v17 = *(void *)(v16 + 8 * v13);
              if (!v17)
              {
                int64_t v15 = v14 - 1;
                int64_t v36 = v9 + 6;
                while (v14 != v36)
                {
                  unint64_t v17 = *(void *)(v16 + 8 * v36++);
                  if (v17)
                  {
                    int64_t v13 = v36 - 1;
                    goto LABEL_15;
                  }
                }
LABEL_45:
                a5[3] = v15;
                a5[4] = 0;
                swift_retain();
                return sub_1A08DDB38(v39, a2, v38, a3);
              }
              goto LABEL_15;
            }
          }
          int64_t v13 = v18;
        }
LABEL_15:
        uint64_t v11 = (v17 - 1) & v17;
        unint64_t v12 = __clz(__rbit64(v17)) + (v13 << 6);
        int64_t v9 = v13;
LABEL_16:
        uint64_t v19 = (uint64_t *)(*(void *)(*a5 + 48) + 16 * v12);
        uint64_t v21 = *v19;
        uint64_t v20 = v19[1];
        a5[3] = v9;
        a5[4] = v11;
        sub_1A09F4C48();
        swift_bridgeObjectRetain();
        sub_1A09F3DA8();
        uint64_t v22 = sub_1A09F4C88();
        uint64_t v23 = -1 << *(unsigned char *)(a3 + 32);
        unint64_t v24 = v22 & ~v23;
        unint64_t v25 = v24 >> 6;
        uint64_t v26 = 1 << v24;
        if (((1 << v24) & *(void *)(v40 + 8 * (v24 >> 6))) == 0) {
          goto LABEL_3;
        }
        uint64_t v27 = *(void *)(a3 + 48);
        uint64_t v28 = (void *)(v27 + 16 * v24);
        BOOL v29 = *v28 == v21 && v28[1] == v20;
        if (v29 || (sub_1A09F4B28() & 1) != 0) {
          break;
        }
        uint64_t v31 = ~v23;
        for (unint64_t i = v24 + 1; ; unint64_t i = v33 + 1)
        {
          unint64_t v33 = i & v31;
          if (((*(void *)(v40 + (((i & v31) >> 3) & 0xFFFFFFFFFFFFFF8)) >> (i & v31)) & 1) == 0) {
            break;
          }
          uint64_t v34 = (void *)(v27 + 16 * v33);
          BOOL v35 = *v34 == v21 && v34[1] == v20;
          if (v35 || (sub_1A09F4B28() & 1) != 0)
          {
            size_t result = swift_bridgeObjectRelease();
            unint64_t v25 = v33 >> 6;
            uint64_t v26 = 1 << v33;
            goto LABEL_23;
          }
        }
LABEL_3:
        size_t result = swift_bridgeObjectRelease();
      }
      size_t result = swift_bridgeObjectRelease();
LABEL_23:
      unint64_t v30 = v39[v25];
      v39[v25] = v30 & ~v26;
    }
    while ((v26 & v30) == 0);
    uint64_t v8 = v38 - 1;
    if (__OFSUB__(v38, 1))
    {
LABEL_47:
      __break(1u);
      return result;
    }
    if (v38 != 1) {
      continue;
    }
    return MEMORY[0x1E4FBC870];
  }
}

uint64_t sub_1A08DDB38(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  if (!a3)
  {
    uint64_t v8 = MEMORY[0x1E4FBC870];
LABEL_36:
    swift_release();
    return v8;
  }
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3) {
    return v4;
  }
  sub_1A07856F8(&qword_1E94F7600);
  uint64_t result = sub_1A09F4698();
  uint64_t v8 = result;
  uint64_t v30 = a2;
  if (a2 < 1) {
    unint64_t v9 = 0;
  }
  else {
    unint64_t v9 = *a1;
  }
  uint64_t v10 = 0;
  uint64_t v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      unint64_t v12 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v13 = v12 | (v10 << 6);
      goto LABEL_24;
    }
    uint64_t v14 = v10 + 1;
    if (__OFADD__(v10, 1)) {
      goto LABEL_39;
    }
    if (v14 >= v30) {
      goto LABEL_36;
    }
    unint64_t v15 = a1[v14];
    ++v10;
    if (!v15)
    {
      uint64_t v10 = v14 + 1;
      if (v14 + 1 >= v30) {
        goto LABEL_36;
      }
      unint64_t v15 = a1[v10];
      if (!v15)
      {
        uint64_t v10 = v14 + 2;
        if (v14 + 2 >= v30) {
          goto LABEL_36;
        }
        unint64_t v15 = a1[v10];
        if (!v15) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v9 = (v15 - 1) & v15;
    unint64_t v13 = __clz(__rbit64(v15)) + (v10 << 6);
LABEL_24:
    unint64_t v17 = (uint64_t *)(*(void *)(v4 + 48) + 16 * v13);
    uint64_t v18 = *v17;
    uint64_t v19 = v17[1];
    sub_1A09F4C48();
    swift_bridgeObjectRetain();
    sub_1A09F3DA8();
    uint64_t result = sub_1A09F4C88();
    uint64_t v20 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v21 = result & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v11 + 8 * (v21 >> 6))) != 0)
    {
      unint64_t v23 = __clz(__rbit64((-1 << v21) & ~*(void *)(v11 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v24 = 0;
      unint64_t v25 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v26 = v22 == v25;
        if (v22 == v25) {
          unint64_t v22 = 0;
        }
        v24 |= v26;
        uint64_t v27 = *(void *)(v11 + 8 * v22);
      }
      while (v27 == -1);
      unint64_t v23 = __clz(__rbit64(~v27)) + (v22 << 6);
    }
    *(void *)(v11 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    uint64_t v28 = (void *)(*(void *)(v8 + 48) + 16 * v23);
    *uint64_t v28 = v18;
    v28[1] = v19;
    ++*(void *)(v8 + 16);
    if (__OFSUB__(v5--, 1))
    {
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (!v5) {
      goto LABEL_36;
    }
  }
  uint64_t v16 = v14 + 3;
  if (v16 >= v30) {
    goto LABEL_36;
  }
  unint64_t v15 = a1[v16];
  if (v15)
  {
    uint64_t v10 = v16;
    goto LABEL_23;
  }
  while (1)
  {
    uint64_t v10 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v10 >= v30) {
      goto LABEL_36;
    }
    unint64_t v15 = a1[v10];
    ++v16;
    if (v15) {
      goto LABEL_23;
    }
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_1A08DDDD0(uint64_t result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = (void *)result;
  uint64_t v6 = a4 + 56;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 56);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_38:
    *uint64_t v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  uint64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    uint64_t v20 = (void *)(*(void *)(a4 + 48) + 16 * v16);
    uint64_t v21 = v20[1];
    *uint64_t v11 = *v20;
    v11[1] = v21;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 2;
    uint64_t result = swift_bridgeObjectRetain();
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18) {
      break;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18) {
    goto LABEL_14;
  }
  int64_t v19 = v17 + 2;
  if (v17 + 2 >= v14) {
    goto LABEL_33;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18) {
    goto LABEL_17;
  }
  int64_t v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17 + 2;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    int64_t v17 = v12;
    goto LABEL_18;
  }
  int64_t v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    unint64_t v9 = 0;
LABEL_37:
    uint64_t v10 = v13;
    goto LABEL_38;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    int64_t v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v17 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v17 >= v14)
    {
      unint64_t v9 = 0;
      int64_t v12 = v14 - 1;
      goto LABEL_37;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v19;
    if (v18) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_1A08DDFD0(uint64_t result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = (void *)result;
  uint64_t v6 = a4 + 64;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 64);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_38:
    *uint64_t v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  uint64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    *uint64_t v11 = *(void *)(*(void *)(a4 + 56) + 8 * v16);
    if (v13 == v10)
    {
      swift_retain();
      goto LABEL_38;
    }
    ++v11;
    uint64_t result = swift_retain();
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18) {
      break;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18) {
    goto LABEL_14;
  }
  int64_t v19 = v17 + 2;
  if (v17 + 2 >= v14) {
    goto LABEL_33;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18) {
    goto LABEL_17;
  }
  int64_t v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17 + 2;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    int64_t v17 = v12;
    goto LABEL_18;
  }
  int64_t v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    unint64_t v9 = 0;
LABEL_37:
    uint64_t v10 = v13;
    goto LABEL_38;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    int64_t v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v17 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v17 >= v14)
    {
      unint64_t v9 = 0;
      int64_t v12 = v14 - 1;
      goto LABEL_37;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v19;
    if (v18) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

void *sub_1A08DE1CC(void *result, _OWORD *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4 + 64;
  uint64_t v5 = -1;
  uint64_t v6 = -1 << *(unsigned char *)(a4 + 32);
  if (-v6 < 64) {
    uint64_t v5 = ~(-1 << -(char)v6);
  }
  unint64_t v7 = v5 & *(void *)(a4 + 64);
  if (!a2)
  {
    int64_t v8 = 0;
    a3 = 0;
LABEL_35:
    *uint64_t result = a4;
    result[1] = v4;
    result[2] = ~v6;
    result[3] = v8;
    result[4] = v7;
    return (void *)a3;
  }
  if (!a3)
  {
    int64_t v8 = 0;
    goto LABEL_35;
  }
  if (a3 < 0)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  int64_t v8 = 0;
  uint64_t v9 = 0;
  int64_t v10 = (unint64_t)(63 - v6) >> 6;
  while (v7)
  {
    unint64_t v11 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    unint64_t v12 = v11 | (v8 << 6);
LABEL_8:
    ++v9;
    *a2++ = *(_OWORD *)(*(void *)(a4 + 56) + 16 * v12);
    if (v9 == a3) {
      goto LABEL_35;
    }
  }
  int64_t v13 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    goto LABEL_37;
  }
  if (v13 >= v10) {
    goto LABEL_30;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v13);
  if (v14) {
    goto LABEL_19;
  }
  v8 += 2;
  if (v13 + 1 >= v10)
  {
    unint64_t v7 = 0;
    int64_t v8 = v13;
    goto LABEL_34;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v8);
  if (v14)
  {
LABEL_15:
    int64_t v13 = v8;
LABEL_19:
    unint64_t v16 = __clz(__rbit64(v14));
    unint64_t v7 = (v14 - 1) & v14;
    unint64_t v12 = v16 + (v13 << 6);
    int64_t v8 = v13;
    goto LABEL_8;
  }
  int64_t v15 = v13 + 2;
  if (v13 + 2 >= v10) {
    goto LABEL_30;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v15);
  if (v14)
  {
LABEL_18:
    int64_t v13 = v15;
    goto LABEL_19;
  }
  int64_t v8 = v13 + 3;
  if (v13 + 3 >= v10)
  {
    unint64_t v7 = 0;
    int64_t v8 = v13 + 2;
    goto LABEL_34;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v8);
  if (v14) {
    goto LABEL_15;
  }
  int64_t v15 = v13 + 4;
  if (v13 + 4 >= v10)
  {
LABEL_30:
    unint64_t v7 = 0;
LABEL_34:
    a3 = v9;
    goto LABEL_35;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v15);
  if (v14) {
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v13 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v13 >= v10)
    {
      unint64_t v7 = 0;
      int64_t v8 = v10 - 1;
      goto LABEL_34;
    }
    unint64_t v14 = *(void *)(v4 + 8 * v13);
    ++v15;
    if (v14) {
      goto LABEL_19;
    }
  }
LABEL_38:
  __break(1u);
  return result;
}

void *sub_1A08DE360(void *result, char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v40 = a4;
  uint64_t v4 = a4 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(a4 + 32);
  if (-v5 < 64) {
    uint64_t v6 = ~(-1 << -(char)v5);
  }
  else {
    uint64_t v6 = -1;
  }
  unint64_t v7 = v6 & *(void *)(a4 + 56);
  if (!a2)
  {
    int64_t v11 = 0;
    uint64_t v8 = 0;
LABEL_39:
    *uint64_t result = v40;
    result[1] = v4;
    result[2] = ~v5;
    result[3] = v11;
    result[4] = v7;
    return (void *)v8;
  }
  uint64_t v8 = a3;
  if (!a3)
  {
    int64_t v11 = 0;
    goto LABEL_39;
  }
  if (a3 < 0)
  {
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  int64_t v41 = a2;
  uint64_t v30 = result;
  uint64_t v31 = a4 + 56;
  uint64_t v9 = sub_1A09F33A8();
  uint64_t v10 = v9;
  int64_t v11 = 0;
  uint64_t v43 = 0;
  uint64_t v12 = *(void *)(v9 - 8);
  uint64_t v39 = *(void *)(v12 + 64);
  uint64_t v37 = v12 + 16;
  uint64_t v38 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56);
  uint64_t v35 = v12;
  uint64_t v36 = v12 + 48;
  uint64_t v33 = v8;
  uint64_t v34 = (uint64_t (**)(char *, char *, uint64_t))(v12 + 32);
  int64_t v32 = (unint64_t)(63 - v5) >> 6;
  int64_t v28 = v32 - 1;
  uint64_t v29 = v5;
  while (1)
  {
    unint64_t v42 = &v28;
    MEMORY[0x1F4188790](v9);
    unint64_t v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v15 = sub_1A07856F8((uint64_t *)&unk_1EB4A5630);
    uint64_t result = (void *)MEMORY[0x1F4188790](v15 - 8);
    int64_t v17 = (char *)&v28 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
    if (v7)
    {
      unint64_t v18 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v19 = v18 | (v11 << 6);
      goto LABEL_23;
    }
    int64_t v20 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_41;
    }
    uint64_t v4 = v31;
    if (v20 >= v32) {
      goto LABEL_37;
    }
    unint64_t v21 = *(void *)(v31 + 8 * v20);
    if (v21) {
      goto LABEL_22;
    }
    int64_t v22 = v11 + 2;
    ++v11;
    if (v20 + 1 >= v32) {
      goto LABEL_37;
    }
    unint64_t v21 = *(void *)(v31 + 8 * v22);
    if (!v21)
    {
      int64_t v11 = v20 + 1;
      if (v20 + 2 >= v32) {
        goto LABEL_37;
      }
      unint64_t v21 = *(void *)(v31 + 8 * (v20 + 2));
      if (v21)
      {
        v20 += 2;
        goto LABEL_22;
      }
      int64_t v11 = v20 + 2;
      if (v20 + 3 >= v32) {
        goto LABEL_37;
      }
      unint64_t v21 = *(void *)(v31 + 8 * (v20 + 3));
      if (v21)
      {
        v20 += 3;
        goto LABEL_22;
      }
      int64_t v22 = v20 + 4;
      int64_t v11 = v20 + 3;
      if (v20 + 4 >= v32)
      {
LABEL_37:
        (*v38)(v17, 1, 1, v10);
        unint64_t v7 = 0;
        goto LABEL_38;
      }
      unint64_t v21 = *(void *)(v31 + 8 * v22);
      if (!v21) {
        break;
      }
    }
    int64_t v20 = v22;
LABEL_22:
    unint64_t v7 = (v21 - 1) & v21;
    unint64_t v19 = __clz(__rbit64(v21)) + (v20 << 6);
    int64_t v11 = v20;
LABEL_23:
    uint64_t v23 = v35;
    uint64_t v24 = *(void *)(v35 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v35 + 16))(v17, *(void *)(v40 + 48) + v24 * v19, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v17, 0, 1, v10);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v17, 1, v10) == 1)
    {
      uint64_t v4 = v31;
LABEL_38:
      sub_1A0784C08((uint64_t)v17, (uint64_t *)&unk_1EB4A5630);
      uint64_t v8 = v43;
      uint64_t v5 = v29;
      uint64_t result = v30;
      goto LABEL_39;
    }
    uint64_t v25 = v43 + 1;
    BOOL v26 = *v34;
    (*v34)(v14, v17, v10);
    uint64_t v27 = v41;
    uint64_t v9 = v26(v41, v14, v10);
    uint64_t v8 = v33;
    uint64_t v43 = v25;
    if (v25 == v33)
    {
      uint64_t result = v30;
      uint64_t v4 = v31;
      uint64_t v5 = v29;
      goto LABEL_39;
    }
    int64_t v41 = &v27[v24];
  }
  while (1)
  {
    int64_t v20 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v20 >= v32)
    {
      int64_t v11 = v28;
      goto LABEL_37;
    }
    unint64_t v21 = *(void *)(v31 + 8 * v20);
    ++v22;
    if (v21) {
      goto LABEL_22;
    }
  }
LABEL_42:
  __break(1u);
  return result;
}

void *sub_1A08DE788(void *result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = result;
  uint64_t v6 = a4 + 64;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 64);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_38:
    *uint64_t v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return (void *)v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  int64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    int64_t v20 = *(void **)(*(void *)(a4 + 56) + 8 * v16);
    *int64_t v11 = v20;
    if (v13 == v10)
    {
      id v21 = v20;
      goto LABEL_38;
    }
    ++v11;
    uint64_t result = v20;
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18) {
      break;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18) {
    goto LABEL_14;
  }
  int64_t v19 = v17 + 2;
  if (v17 + 2 >= v14) {
    goto LABEL_33;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18) {
    goto LABEL_17;
  }
  int64_t v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17 + 2;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    int64_t v17 = v12;
    goto LABEL_18;
  }
  int64_t v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    unint64_t v9 = 0;
LABEL_37:
    uint64_t v10 = v13;
    goto LABEL_38;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    int64_t v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v17 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v17 >= v14)
    {
      unint64_t v9 = 0;
      int64_t v12 = v14 - 1;
      goto LABEL_37;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v19;
    if (v18) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_1A08DE984(uint64_t result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = (void *)result;
  uint64_t v6 = a4 + 64;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 64);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_38:
    *uint64_t v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  int64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    int64_t v20 = (void *)(*(void *)(a4 + 48) + 16 * v16);
    uint64_t v21 = v20[1];
    *int64_t v11 = *v20;
    v11[1] = v21;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 2;
    uint64_t result = swift_bridgeObjectRetain();
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18) {
      break;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18) {
    goto LABEL_14;
  }
  int64_t v19 = v17 + 2;
  if (v17 + 2 >= v14) {
    goto LABEL_33;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18) {
    goto LABEL_17;
  }
  int64_t v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17 + 2;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    int64_t v17 = v12;
    goto LABEL_18;
  }
  int64_t v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    unint64_t v9 = 0;
LABEL_37:
    uint64_t v10 = v13;
    goto LABEL_38;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    int64_t v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v17 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v17 >= v14)
    {
      unint64_t v9 = 0;
      int64_t v12 = v14 - 1;
      goto LABEL_37;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v19;
    if (v18) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_1A08DEB84(uint64_t a1, int *a2)
{
  *(void *)(v2 + 24) = a1;
  uint64_t v5 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v2 + 32) = v3;
  *uint64_t v3 = v2;
  v3[1] = sub_1A08DEC64;
  return v5(v2 + 16);
}

uint64_t sub_1A08DEC64()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void **)(*v0 + 24);
  uint64_t v5 = *v0;
  swift_task_dealloc();
  *uint64_t v2 = *(void *)(v1 + 16);
  uint64_t v3 = *(uint64_t (**)(void))(v5 + 8);
  return v3();
}

uint64_t sub_1A08DED94(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v4 = -1;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  unint64_t v5 = v4 & *(void *)(a1 + 56);
  uint64_t v6 = (uint64_t *)(a2 + 112);
  int64_t v40 = (unint64_t)(v3 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v7 = 0;
  while (1)
  {
    if (v5)
    {
      unint64_t v9 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      unint64_t v10 = v9 | (v7 << 6);
      goto LABEL_25;
    }
    int64_t v11 = v7 + 1;
    if (__OFADD__(v7, 1)) {
      goto LABEL_43;
    }
    if (v11 >= v40) {
      return swift_release();
    }
    unint64_t v12 = *(void *)(v39 + 8 * v11);
    ++v7;
    if (!v12)
    {
      int64_t v7 = v11 + 1;
      if (v11 + 1 >= v40) {
        return swift_release();
      }
      unint64_t v12 = *(void *)(v39 + 8 * v7);
      if (!v12)
      {
        int64_t v7 = v11 + 2;
        if (v11 + 2 >= v40) {
          return swift_release();
        }
        unint64_t v12 = *(void *)(v39 + 8 * v7);
        if (!v12)
        {
          int64_t v7 = v11 + 3;
          if (v11 + 3 >= v40) {
            return swift_release();
          }
          unint64_t v12 = *(void *)(v39 + 8 * v7);
          if (!v12) {
            break;
          }
        }
      }
    }
LABEL_24:
    unint64_t v5 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v7 << 6);
LABEL_25:
    int64_t v14 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v10);
    uint64_t v16 = *v14;
    uint64_t v15 = v14[1];
    uint64_t v17 = *a3;
    swift_beginAccess();
    if (v17)
    {
      int64_t v43 = v7;
      swift_retain();
      swift_bridgeObjectRetain_n();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v19 = *v6;
      uint64_t v44 = (void *)*v6;
      *uint64_t v6 = 0x8000000000000000;
      unint64_t v21 = sub_1A087AAA4(v16, v15);
      uint64_t v22 = *(void *)(v19 + 16);
      BOOL v23 = (v20 & 1) == 0;
      uint64_t v24 = v22 + v23;
      if (__OFADD__(v22, v23))
      {
        __break(1u);
LABEL_43:
        __break(1u);
LABEL_44:
        __break(1u);
        goto LABEL_45;
      }
      char v25 = v20;
      if (*(void *)(v19 + 24) < v24)
      {
        sub_1A09DD61C(v24, isUniquelyReferenced_nonNull_native);
        unint64_t v26 = sub_1A087AAA4(v16, v15);
        if ((v25 & 1) != (v27 & 1)) {
          goto LABEL_46;
        }
        unint64_t v21 = v26;
        int64_t v28 = v44;
        if ((v25 & 1) == 0) {
          goto LABEL_37;
        }
LABEL_4:
        uint64_t v8 = v28[7];
        swift_release();
        *(void *)(v8 + 8 * v21) = v17;
LABEL_5:
        *uint64_t v6 = (uint64_t)v28;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        int64_t v7 = v43;
        goto LABEL_6;
      }
      if (isUniquelyReferenced_nonNull_native)
      {
        int64_t v28 = v44;
        if (v20) {
          goto LABEL_4;
        }
      }
      else
      {
        sub_1A09E0BCC();
        int64_t v28 = v44;
        if (v25) {
          goto LABEL_4;
        }
      }
LABEL_37:
      v28[(v21 >> 6) + 8] |= 1 << v21;
      uint64_t v34 = (uint64_t *)(v28[6] + 16 * v21);
      *uint64_t v34 = v16;
      v34[1] = v15;
      *(void *)(v28[7] + 8 * v21) = v17;
      uint64_t v35 = v28[2];
      BOOL v36 = __OFADD__(v35, 1);
      uint64_t v37 = v35 + 1;
      if (v36) {
        goto LABEL_44;
      }
      v28[2] = v37;
      swift_bridgeObjectRetain();
      goto LABEL_5;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v29 = sub_1A087AAA4(v16, v15);
    char v31 = v30;
    swift_bridgeObjectRelease();
    if (v31)
    {
      char v32 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v33 = *v6;
      uint64_t v45 = *v6;
      *uint64_t v6 = 0x8000000000000000;
      if ((v32 & 1) == 0)
      {
        sub_1A09E0BCC();
        uint64_t v33 = v45;
      }
      swift_bridgeObjectRelease();
      sub_1A09DFEA0(v29, v33);
      *uint64_t v6 = v33;
      swift_release();
      swift_bridgeObjectRelease();
    }
LABEL_6:
    swift_endAccess();
    swift_bridgeObjectRelease();
  }
  int64_t v13 = v11 + 4;
  if (v13 >= v40) {
    return swift_release();
  }
  unint64_t v12 = *(void *)(v39 + 8 * v13);
  if (v12)
  {
    int64_t v7 = v13;
    goto LABEL_24;
  }
  while (1)
  {
    int64_t v7 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v7 >= v40) {
      return swift_release();
    }
    unint64_t v12 = *(void *)(v39 + 8 * v7);
    ++v13;
    if (v12) {
      goto LABEL_24;
    }
  }
LABEL_45:
  __break(1u);
LABEL_46:
  uint64_t result = sub_1A09F4BE8();
  __break(1u);
  return result;
}

uint64_t type metadata accessor for RemoteIntentFileMirrorRequestManager()
{
  return self;
}

uint64_t sub_1A08DF190(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = v2[2];
  uint64_t v7 = v2[3];
  uint64_t v8 = v2[4];
  unint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v9;
  *unint64_t v9 = v3;
  v9[1] = sub_1A077EE54;
  return sub_1A08DBB24(a1, a2, v6, v7, v8);
}

uint64_t sub_1A08DF254(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v4 = -1;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  unint64_t v5 = v4 & *(void *)(a1 + 56);
  uint64_t v6 = (uint64_t *)(a2 + 112);
  int64_t v7 = (unint64_t)(v3 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v9 = 0;
  while (1)
  {
    if (v5)
    {
      unint64_t v10 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      unint64_t v11 = v10 | (v9 << 6);
      goto LABEL_24;
    }
    int64_t v12 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    if (v12 >= v7) {
      return swift_release();
    }
    unint64_t v13 = *(void *)(v22 + 8 * v12);
    ++v9;
    if (!v13)
    {
      int64_t v9 = v12 + 1;
      if (v12 + 1 >= v7) {
        return swift_release();
      }
      unint64_t v13 = *(void *)(v22 + 8 * v9);
      if (!v13)
      {
        int64_t v9 = v12 + 2;
        if (v12 + 2 >= v7) {
          return swift_release();
        }
        unint64_t v13 = *(void *)(v22 + 8 * v9);
        if (!v13)
        {
          int64_t v9 = v12 + 3;
          if (v12 + 3 >= v7) {
            return swift_release();
          }
          unint64_t v13 = *(void *)(v22 + 8 * v9);
          if (!v13) {
            break;
          }
        }
      }
    }
LABEL_23:
    unint64_t v5 = (v13 - 1) & v13;
    unint64_t v11 = __clz(__rbit64(v13)) + (v9 << 6);
LABEL_24:
    uint64_t v15 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v11);
    uint64_t v16 = *v15;
    uint64_t v17 = v15[1];
    swift_beginAccess();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v18 = sub_1A087AAA4(v16, v17);
    LOBYTE(v16) = v19;
    swift_bridgeObjectRelease();
    if (v16)
    {
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v21 = *v6;
      uint64_t v23 = *v6;
      *uint64_t v6 = 0x8000000000000000;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_1A09E0BCC();
        uint64_t v21 = v23;
      }
      swift_bridgeObjectRelease();
      sub_1A09DFEA0(v18, v21);
      *uint64_t v6 = v21;
      swift_bridgeObjectRelease();
    }
    swift_endAccess();
    swift_bridgeObjectRelease();
    uint64_t result = swift_release();
  }
  int64_t v14 = v12 + 4;
  if (v14 >= v7) {
    return swift_release();
  }
  unint64_t v13 = *(void *)(v22 + 8 * v14);
  if (v13)
  {
    int64_t v9 = v14;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v9 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v9 >= v7) {
      return swift_release();
    }
    unint64_t v13 = *(void *)(v22 + 8 * v9);
    ++v14;
    if (v13) {
      goto LABEL_23;
    }
  }
LABEL_29:
  __break(1u);
  return result;
}

uint64_t method lookup function for RemoteIntentFileMirrorRequestManager(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for RemoteIntentFileMirrorRequestManager);
}

uint64_t dispatch thunk of RemoteIntentFileMirrorRequestManager.fetchMirrors(for:)(uint64_t a1)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))(*(void *)(*(void *)v1 + 136) + **(int **)(*(void *)v1 + 136));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_1A08DF5B8;
  return v6(a1);
}

uint64_t sub_1A08DF5B8(uint64_t a1)
{
  uint64_t v5 = *v1;
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(uint64_t))(v5 + 8);
  return v3(a1);
}

uint64_t sub_1A08DF6B4(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1A08DF6FC()
{
  swift_unknownObjectRelease();
  swift_release();

  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_1A08DF73C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_1A077EE58;
  return sub_1A08DCB50(a1, v4, v5, v6);
}

uint64_t sub_1A08DF7F0()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_1A08DF838(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 40);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1A077EE54;
  v5[3] = a1;
  v5[4] = v4;
  uint64_t v6 = (void *)swift_task_alloc();
  v5[5] = v6;
  *uint64_t v6 = v5;
  v6[1] = sub_1A08DC580;
  return sub_1A09CA6A0();
}

uint64_t sub_1A08DF920(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1A07856F8(&qword_1EB4A5650);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A08DF988()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1A08DF9C0(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1A077EE54;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_1E94FB580 + dword_1E94FB580);
  return v6(a1, v4);
}

uint64_t sub_1A08DFA78(uint64_t a1, uint64_t a2)
{
  uint64_t v36 = type metadata accessor for RemoteIntentMirrorFileRepresentation(0);
  uint64_t v5 = MEMORY[0x1F4188790](v36);
  uint64_t v38 = (uint64_t)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v33 - v8;
  uint64_t result = MEMORY[0x1E4FBC860];
  uint64_t v42 = MEMORY[0x1E4FBC860];
  uint64_t v40 = *(void *)(a1 + 16);
  if (v40)
  {
    uint64_t v33 = v2;
    uint64_t v11 = 0;
    uint64_t v12 = *(void *)(v7 + 72);
    unint64_t v34 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    uint64_t v39 = a1 + v34;
    uint64_t v41 = a2 + 56;
    uint64_t v37 = MEMORY[0x1E4FBC860];
    uint64_t v35 = v12;
    while (1)
    {
      sub_1A08AD4DC(v39 + v12 * v11, (uint64_t)v9);
      if (*(void *)(a2 + 16))
      {
        unint64_t v13 = &v9[*(int *)(v36 + 24)];
        uint64_t v15 = *(void *)v13;
        uint64_t v14 = *((void *)v13 + 1);
        sub_1A09F4C48();
        swift_bridgeObjectRetain();
        sub_1A09F3DA8();
        uint64_t v16 = sub_1A09F4C88();
        uint64_t v17 = a2;
        uint64_t v18 = -1 << *(unsigned char *)(a2 + 32);
        unint64_t v19 = v16 & ~v18;
        if ((*(void *)(v41 + ((v19 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v19))
        {
          uint64_t v20 = *(void *)(v17 + 48);
          uint64_t v21 = (void *)(v20 + 16 * v19);
          BOOL v22 = *v21 == v15 && v21[1] == v14;
          if (v22 || (sub_1A09F4B28() & 1) != 0)
          {
LABEL_13:
            swift_bridgeObjectRelease();
            sub_1A08AD750((uint64_t)v9, v38);
            uint64_t v23 = v37;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              sub_1A09EAF5C(0, *(void *)(v23 + 16) + 1, 1);
            }
            uint64_t v24 = v42;
            unint64_t v26 = *(void *)(v42 + 16);
            unint64_t v25 = *(void *)(v42 + 24);
            a2 = v17;
            if (v26 >= v25 >> 1)
            {
              sub_1A09EAF5C(v25 > 1, v26 + 1, 1);
              uint64_t v24 = v42;
            }
            *(void *)(v24 + 16) = v26 + 1;
            uint64_t v37 = v24;
            uint64_t v27 = v24 + v34 + v26 * v35;
            uint64_t v12 = v35;
            sub_1A08AD750(v38, v27);
            goto LABEL_5;
          }
          uint64_t v28 = ~v18;
          for (unint64_t i = v19 + 1; ; unint64_t i = v30 + 1)
          {
            uint64_t v30 = i & v28;
            if (((*(void *)(v41 + (((i & v28) >> 3) & 0xFFFFFFFFFFFFFF8)) >> (i & v28)) & 1) == 0) {
              break;
            }
            char v31 = (void *)(v20 + 16 * v30);
            BOOL v32 = *v31 == v15 && v31[1] == v14;
            if (v32 || (sub_1A09F4B28() & 1) != 0) {
              goto LABEL_13;
            }
          }
        }
        swift_bridgeObjectRelease();
        a2 = v17;
        uint64_t v12 = v35;
      }
      sub_1A08AF4AC((uint64_t)v9);
LABEL_5:
      if (++v11 == v40) {
        return v42;
      }
    }
  }
  return result;
}

uint64_t sub_1A08DFD8C(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1A077EE58;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_1E94FB580 + dword_1E94FB580);
  return v6(a1, v4);
}

unint64_t static RemoteIntentRequestFileOutputRepresentation.bundleIdentifier.getter()
{
  return 0xD000000000000011;
}

unint64_t static RemoteIntentRequestFileOutputRepresentation.typeIdentifier.getter()
{
  return 0xD00000000000001DLL;
}

uint64_t sub_1A08DFE84()
{
  swift_retain();
  sub_1A09F37A8();

  return swift_release();
}

uint64_t RemoteIntentRequestFileOutputRepresentation.decodeResponse()(uint64_t a1)
{
  v2[7] = a1;
  v2[8] = v1;
  v2[9] = *v1;
  uint64_t v3 = sub_1A09F38B8();
  v2[10] = v3;
  v2[11] = *(void *)(v3 - 8);
  v2[12] = swift_task_alloc();
  sub_1A07856F8(&qword_1E94FB5A0);
  v2[13] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1A08DFFEC, 0, 0);
}

uint64_t sub_1A08DFFEC()
{
  uint64_t v1 = v0[13];
  uint64_t v2 = v0[10];
  uint64_t v3 = v0[11];
  sub_1A08DFE84();
  int v4 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2);
  uint64_t v5 = v0[13];
  if (v4)
  {
    sub_1A08E0614(v0[13]);
    sub_1A08E0674();
    swift_allocError();
    *(_OWORD *)uint64_t v6 = xmmword_1A0A0CA10;
    *(void *)(v6 + 24) = 0;
    *(void *)(v6 + 32) = 0;
    *(void *)(v6 + 16) = 0;
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v7 = (uint64_t (*)(void))v0[1];
    return v7();
  }
  else
  {
    (*(void (**)(void, void, void))(v0[11] + 16))(v0[12], v0[13], v0[10]);
    sub_1A08E0614(v5);
    uint64_t v9 = (void *)swift_task_alloc();
    v0[14] = v9;
    *uint64_t v9 = v0;
    v9[1] = sub_1A08E0178;
    return MEMORY[0x1F4108CF0]();
  }
}

uint64_t sub_1A08E0178(uint64_t a1, uint64_t a2)
{
  int v4 = (void *)*v3;
  uint64_t v5 = (void *)*v3;
  v5[15] = a1;
  v5[16] = a2;
  v5[17] = v2;
  swift_task_dealloc();
  (*(void (**)(void, void))(v4[11] + 8))(v4[12], v4[10]);
  if (v2) {
    uint64_t v6 = sub_1A08E05A8;
  }
  else {
    uint64_t v6 = sub_1A08E02EC;
  }
  return MEMORY[0x1F4188298](v6, 0, 0);
}

uint64_t sub_1A08E02EC()
{
  uint64_t v1 = *(void *)(v0 + 128);
  uint64_t v2 = *(void **)(v0 + 136);
  uint64_t v3 = *(void *)(v0 + 120);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(*(void *)(AssociatedConformanceWitness + 8) + 8)
                                                    + 24))(v3, v1, AssociatedTypeWitness);
  uint64_t v6 = v2;
  if (v2)
  {
    sub_1A09F30B8();
    swift_allocObject();
    sub_1A09F30A8();
    uint64_t v7 = *(void *)(sub_1A09F3078() - 8);
    swift_task_alloc();
    (*(void (**)(void))(v7 + 104))();
    sub_1A09F3088();
    swift_task_dealloc();
    sub_1A08BC0D8();
    sub_1A09F3098();
    swift_release();
    uint64_t v9 = *(void *)(v0 + 120);
    unint64_t v8 = *(void *)(v0 + 128);
    long long v14 = *(_OWORD *)(v0 + 32);
    long long v15 = *(_OWORD *)(v0 + 16);
    uint64_t v10 = *(void *)(v0 + 48);
    sub_1A08E0674();
    swift_allocError();
    *(_OWORD *)uint64_t v11 = v15;
    *(_OWORD *)(v11 + 16) = v14;
    *(void *)(v11 + 32) = v10;
    swift_willThrow();

    sub_1A08AF2E4(v9, v8);
  }
  else
  {
    sub_1A08AF2E4(*(void *)(v0 + 120), *(void *)(v0 + 128));
  }
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v12 = *(uint64_t (**)(void))(v0 + 8);
  return v12();
}

uint64_t sub_1A08E05A8()
{
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1A08E0614(uint64_t a1)
{
  uint64_t v2 = sub_1A07856F8(&qword_1E94FB5A0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1A08E0674()
{
  unint64_t result = qword_1E94FB5A8;
  if (!qword_1E94FB5A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FB5A8);
  }
  return result;
}

uint64_t RemoteIntentRequestFileOutputRepresentation.__allocating_init(_:)(uint64_t a1)
{
  return RemoteIntentRequestFileOutputRepresentation.init(_:)(a1);
}

uint64_t RemoteIntentRequestFileOutputRepresentation.init(_:)(uint64_t a1)
{
  uint64_t v3 = sub_1A09F3708();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = qword_1E94FB5B0;
  sub_1A07856F8((uint64_t *)&unk_1E94FB5B8);
  swift_allocObject();
  swift_retain();
  *(void *)(v1 + v7) = sub_1A09F3798();
  swift_release();
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a1, v3);
  uint64_t v8 = sub_1A09F3768();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
  return v8;
}

uint64_t sub_1A08E084C()
{
  return swift_release();
}

uint64_t RemoteIntentRequestFileOutputRepresentation.deinit()
{
  uint64_t v0 = sub_1A09F3758();
  swift_release();
  return v0;
}

uint64_t RemoteIntentRequestFileOutputRepresentation.__deallocating_deinit()
{
  sub_1A09F3758();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_1A08E08E4(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1A077EE58;
  return RemoteIntentRequestFileOutputRepresentation.decodeResponse()(a1);
}

uint64_t sub_1A08E0980()
{
  return sub_1A09F36C8();
}

uint64_t sub_1A08E09A4()
{
  return sub_1A09F36D8();
}

uint64_t sub_1A08E09C8()
{
  return sub_1A09F36F8() & 1;
}

uint64_t sub_1A08E09F0()
{
  return sub_1A09F36E8();
}

unint64_t sub_1A08E0A14()
{
  return 0xD000000000000011;
}

unint64_t sub_1A08E0A34()
{
  return 0xD00000000000001DLL;
}

uint64_t sub_1A08E0A54(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x1F4108D40](a1, v1, WitnessTable);
}

uint64_t sub_1A08E0AAC()
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x1F4108AC8](v0, WitnessTable);
}

uint64_t sub_1A08E0AF4()
{
  return sub_1A09F3748();
}

uint64_t sub_1A08E0B18(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x1F4108D30](a1, v1, WitnessTable);
}

uint64_t sub_1A08E0B70@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1A09F3728();
  *a1 = result;
  return result;
}

uint64_t sub_1A08E0B98()
{
  return sub_1A09F3738();
}

uint64_t sub_1A08E0BBC()
{
  return sub_1A09F3718();
}

unint64_t static RemoteIntentRequestFileRepresentation.bundleIdentifier.getter()
{
  return 0xD000000000000011;
}

unint64_t static RemoteIntentRequestFileRepresentation.actionIdentifier.getter()
{
  return 0xD000000000000013;
}

uint64_t sub_1A08E0C18(uint64_t a1)
{
  uint64_t v2 = sub_1A07856F8(&qword_1E94FB5A0);
  MEMORY[0x1F4188790](v2 - 8);
  sub_1A08E0E1C(a1, (uint64_t)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1A07856F8(&qword_1E94FB6D0);
  swift_allocObject();
  uint64_t v4 = sub_1A09F37B8();
  sub_1A08E0614(a1);
  return v4;
}

uint64_t RemoteIntentRequestFileRepresentation.requestFile.getter()
{
  return sub_1A09F37D8();
}

uint64_t sub_1A08E0CEC(uint64_t a1, void *a2)
{
  uint64_t v4 = sub_1A07856F8(&qword_1E94FB5A0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A08E0E1C(a1, (uint64_t)v6);
  v8[1] = *a2;
  return RemoteIntentRequestFileRepresentation.requestFile.setter((uint64_t)v6);
}

uint64_t RemoteIntentRequestFileRepresentation.requestFile.setter(uint64_t a1)
{
  uint64_t v2 = sub_1A07856F8(&qword_1E94FB5A0);
  MEMORY[0x1F4188790](v2 - 8);
  sub_1A08E0E1C(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1A09F37E8();
  return sub_1A08E0614(a1);
}

uint64_t sub_1A08E0E1C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1A07856F8(&qword_1E94FB5A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void (*RemoteIntentRequestFileRepresentation.requestFile.modify(void *a1))(void *a1)
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1A09F37C8();
  return sub_1A08CCD2C;
}

uint64_t RemoteIntentRequestFileRepresentation.$requestFile.getter()
{
  return sub_1A09F37F8();
}

uint64_t RemoteIntentRequestFileRepresentation.init(request:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v9 = sub_1A07856F8(&qword_1E94F9C28);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1A07856F8(&qword_1E94FB5A0);
  uint64_t v13 = MEMORY[0x1F4188790](v12 - 8);
  uint64_t v44 = (char *)v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)v37 - v15;
  uint64_t v17 = sub_1A09F38B8();
  uint64_t v18 = *(void *)(v17 - 8);
  unint64_t v19 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v18 + 56);
  uint64_t v42 = v18 + 56;
  int64_t v43 = v19;
  v19((uint64_t)v16, 1, 1, v17);
  uint64_t v46 = sub_1A08E0C18((uint64_t)v16);
  v45[3] = a2;
  v45[4] = a3;
  uint64_t v20 = sub_1A0884478(v45);
  uint64_t v21 = *(void *)(a2 - 8);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v21 + 16))(v20, a1, a2);
  sub_1A09F3108();
  swift_allocObject();
  sub_1A09F30F8();
  uint64_t v22 = sub_1A09F30C8();
  MEMORY[0x1F4188790](v22);
  (*(void (**)(char *, void))(v24 + 104))((char *)v37 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E4F26D18]);
  sub_1A09F30D8();
  sub_1A08BBFDC();
  uint64_t v25 = sub_1A09F30E8();
  uint64_t v41 = v26;
  swift_release();
  if (v4)
  {
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(a1, a2);
    sub_1A08E1354((uint64_t)v45);
    return swift_release();
  }
  else
  {
    uint64_t v28 = sub_1A09F34A8();
    uint64_t v40 = a4;
    uint64_t v29 = v28;
    uint64_t v39 = v37;
    uint64_t v30 = *(void *)(v28 - 8);
    v37[1] = v25;
    uint64_t v31 = v30;
    MEMORY[0x1F4188790](v28);
    uint64_t v33 = (char *)v37 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_1A09F2ED8();
    uint64_t v34 = sub_1A09F3488();
    uint64_t v38 = a1;
    v37[0] = v34;
    (*(void (**)(char *, uint64_t))(v31 + 8))(v33, v29);
    uint64_t v35 = sub_1A09F39B8();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(v11, 1, 1, v35);
    uint64_t v36 = (uint64_t)v44;
    sub_1A09F3868();
    v43(v36, 0, 1, v17);
    RemoteIntentRequestFileRepresentation.requestFile.setter(v36);
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v38, a2);
    uint64_t result = sub_1A08E1354((uint64_t)v45);
    *uint64_t v40 = v46;
  }
  return result;
}

uint64_t sub_1A08E1354(uint64_t a1)
{
  return a1;
}

uint64_t type metadata accessor for RemoteIntentRequestFileRepresentation()
{
  return sub_1A0780100();
}

uint64_t sub_1A08E13C0()
{
  return swift_getWitnessTable();
}

uint64_t sub_1A08E13DC()
{
  return swift_getWitnessTable();
}

uint64_t sub_1A08E13F8()
{
  return swift_getWitnessTable();
}

uint64_t sub_1A08E1414()
{
  return swift_getWitnessTable();
}

uint64_t sub_1A08E1430(uint64_t a1, uint64_t a2)
{
  return *(void *)(class metadata base offset for RemoteIntentRequestFileOutputRepresentation + a2 + 8);
}

uint64_t sub_1A08E1444(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1A08E1480()
{
  return swift_getWitnessTable();
}

uint64_t sub_1A08E149C()
{
  return swift_getWitnessTable();
}

uint64_t sub_1A08E14B8()
{
  return swift_getWitnessTable();
}

uint64_t sub_1A08E14D4()
{
  return swift_getWitnessTable();
}

uint64_t sub_1A08E14F0()
{
  return swift_getWitnessTable();
}

uint64_t sub_1A08E150C()
{
  return swift_getWitnessTable();
}

uint64_t sub_1A08E1528(uint64_t a1, uint64_t a2)
{
  return *(void *)(a2 + 24);
}

uint64_t sub_1A08E1530@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return RemoteIntentRequestFileRepresentation.init(request:)(a1, *(void *)(a2 + 16), *(void *)(a2 + 24), a3);
}

uint64_t sub_1A08E1550(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1A08E158C()
{
  return 0xD000000000000011;
}

unint64_t sub_1A08E15AC()
{
  return 0xD000000000000013;
}

uint64_t sub_1A08E15D0()
{
  return RemoteIntentRequestFileRepresentation.requestFile.getter();
}

uint64_t sub_1A08E1608()
{
  return 16;
}

__n128 sub_1A08E1614(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t dispatch thunk of RemoteIntentRequestOutputRepresentation.decodeResponse()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 + 40) + **(int **)(a3 + 40));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_1A077EE58;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of RemoteIntentRequestOutputRepresentation.auxiliaryOutputRepresentation()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of RemoteIntentRequestRepresentation.init(request:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t sub_1A08E1764()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for RemoteIntentRequestFileOutputRepresentation()
{
  return sub_1A0780100();
}

uint64_t sub_1A08E17D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F41863F8](a1, a2, a3, 24);
}

unint64_t destroy for RemoteIntentRequestError(uint64_t a1)
{
  unint64_t result = *(void *)(a1 + 8);
  int v2 = -1;
  if (result < 0xFFFFFFFF) {
    int v2 = result;
  }
  if (v2 - 1 < 0 && result)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for RemoteIntentRequestError(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  LODWORD(v4) = -1;
  if (v3 < 0xFFFFFFFF) {
    uint64_t v4 = *(void *)(a2 + 8);
  }
  if ((int)v4 - 1 < 0 && v3)
  {
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v3;
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v5 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v5;
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
  }
  return a1;
}

void *assignWithCopy for RemoteIntentRequestError(void *a1, void *a2)
{
  unint64_t v4 = a1[1];
  LODWORD(v5) = -1;
  if (v4 >= 0xFFFFFFFF) {
    LODWORD(v6) = -1;
  }
  else {
    uint64_t v6 = a1[1];
  }
  int v7 = v6 - 1;
  unint64_t v8 = a2[1];
  if (v8 < 0xFFFFFFFF) {
    uint64_t v5 = a2[1];
  }
  int v9 = v5 - 1;
  if ((v7 & 0x80000000) == 0)
  {
    if ((v9 & 0x80000000) == 0) {
      goto LABEL_13;
    }
    goto LABEL_8;
  }
  if ((v9 & 0x80000000) == 0)
  {
    if (v4)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    goto LABEL_13;
  }
  if (!v4)
  {
LABEL_8:
    if (v8)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      a1[2] = a2[2];
      a1[3] = a2[3];
      a1[4] = a2[4];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      return a1;
    }
LABEL_13:
    long long v10 = *(_OWORD *)a2;
    long long v11 = *((_OWORD *)a2 + 1);
    a1[4] = a2[4];
    *(_OWORD *)a1 = v10;
    *((_OWORD *)a1 + 1) = v11;
    return a1;
  }
  if (v8)
  {
    *a1 = *a2;
    a1[1] = a2[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    a1[2] = a2[2];
    a1[3] = a2[3];
    a1[4] = a2[4];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1A08E19DC((uint64_t)a1);
    uint64_t v13 = a2[4];
    long long v14 = *((_OWORD *)a2 + 1);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *((_OWORD *)a1 + 1) = v14;
    a1[4] = v13;
  }
  return a1;
}

uint64_t sub_1A08E19DC(uint64_t a1)
{
  return a1;
}

uint64_t assignWithTake for RemoteIntentRequestError(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = *(void *)(a1 + 8);
  int v5 = -1;
  if (v4 < 0xFFFFFFFF) {
    int v5 = v4;
  }
  if (v5 - 1 < 0)
  {
    unint64_t v8 = *(void *)(a2 + 8);
    LODWORD(v9) = -1;
    if (v8 < 0xFFFFFFFF) {
      uint64_t v9 = *(void *)(a2 + 8);
    }
    if ((int)v9 - 1 < 0)
    {
      if (v4)
      {
        if (v8)
        {
          *(void *)a1 = *(void *)a2;
          *(void *)(a1 + 8) = v8;
          swift_bridgeObjectRelease();
          *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
          *(void *)(a1 + 32) = *(void *)(a2 + 32);
          swift_bridgeObjectRelease();
          return a1;
        }
        sub_1A08E19DC(a1);
      }
    }
    else if (v4)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for RemoteIntentRequestError(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFE && *(unsigned char *)(a1 + 40)) {
    return (*(_DWORD *)a1 + 2147483646);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  if ((v4 + 1) >= 2) {
    return v4;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for RemoteIntentRequestError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(void *)(result + 32) = 0;
    *(_OWORD *)unint64_t result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)unint64_t result = a2 - 2147483646;
    if (a3 >= 0x7FFFFFFE) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFE) {
      *(unsigned char *)(result + 40) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2 + 1;
    }
  }
  return result;
}

uint64_t sub_1A08E1BA8(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  int v2 = v1 - 1;
  if (v2 < 0) {
    int v2 = -1;
  }
  return (v2 + 1);
}

double sub_1A08E1BCC(uint64_t a1, unsigned int a2)
{
  if (a2 > 0x7FFFFFFE)
  {
    double result = 0.0;
    *(_OWORD *)(a1 + 8) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(void *)a1 = a2 - 0x7FFFFFFF;
  }
  else if (a2)
  {
    *(void *)(a1 + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for RemoteIntentRequestError()
{
  return &type metadata for RemoteIntentRequestError;
}

uint64_t sub_1A08E1C14(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  sub_1A078231C(0, &qword_1E94FB7F0);
  **(void **)(*(void *)(v1 + 64) + 40) = sub_1A09F3D08();

  return swift_continuation_resume();
}

uint64_t sub_1A08E1C9C()
{
  uint64_t v0 = sub_1A09F39E8();
  sub_1A078D848(v0, qword_1E94FB6D8);
  sub_1A078510C(v0, (uint64_t)qword_1E94FB6D8);
  return sub_1A09F39D8();
}

uint64_t sub_1A08E1D1C(uint64_t a1, uint64_t a2)
{
  v3[18] = a2;
  v3[19] = v2;
  v3[17] = a1;
  return MEMORY[0x1F4188298](sub_1A08E1D40, 0, 0);
}

uint64_t sub_1A08E1D40()
{
  uint64_t v1 = (void *)v0[18];
  uint64_t v2 = *(void *)(v0[19] + 24);
  uint64_t v3 = sub_1A09F3DE8();
  v0[20] = v3;
  uint64_t v4 = sub_1A09F3CE8();
  v0[21] = v4;
  v0[2] = v0;
  v0[7] = v0 + 15;
  v0[3] = sub_1A08E1E9C;
  uint64_t v5 = swift_continuation_init();
  v0[10] = MEMORY[0x1E4F143A8];
  v0[11] = 0x40000000;
  v0[12] = sub_1A08E21B0;
  v0[13] = &unk_1E5A0FD40;
  v0[14] = v5;
  objc_msgSend(v1, sel_requestSetupXPCObjectWithClientID_capabilities_context_reply_, v3, v2, v4, v0 + 10);
  return MEMORY[0x1F41881E8](v0 + 2);
}

uint64_t sub_1A08E1E9C()
{
  return MEMORY[0x1F4188298](sub_1A08E1F7C, 0, 0);
}

uint64_t sub_1A08E1F7C()
{
  uint64_t v2 = *(void **)(v0 + 160);
  uint64_t v1 = *(void **)(v0 + 168);
  char v3 = *(unsigned char *)(v0 + 120);
  uint64_t v4 = *(void *)(v0 + 128);
  *(void *)(v0 + 176) = v4;

  uint64_t v5 = swift_task_alloc();
  *(void *)(v0 + 184) = v5;
  *(void *)uint64_t v5 = v0;
  *(void *)(v5 + 8) = sub_1A08E2050;
  uint64_t v7 = *(void *)(v0 + 136);
  uint64_t v6 = *(void *)(v0 + 144);
  *(void *)(v5 + 136) = v4;
  *(void *)(v5 + 144) = v6;
  *(unsigned char *)(v5 + 192) = v3;
  *(void *)(v5 + 128) = v7;
  return MEMORY[0x1F4188298](sub_1A08E2708, 0, 0);
}

uint64_t sub_1A08E2050()
{
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1A08E214C, 0, 0);
}

uint64_t sub_1A08E214C()
{
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1A08E21B0(uint64_t a1, char a2, void *a3)
{
  uint64_t v3 = *(void *)(*(void *)(*(void *)(a1 + 32) + 64) + 40);
  *(unsigned char *)uint64_t v3 = a2;
  *(void *)(v3 + 8) = a3;
  id v4 = a3;

  return swift_continuation_resume();
}

uint64_t sub_1A08E2208()
{
  uint64_t result = 0x6E6F6973726576;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x4449656C646E7562;
      break;
    case 2:
      uint64_t result = 0x696C696261706163;
      break;
    case 3:
      uint64_t result = 0x44747865746E6F63;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A08E22A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A08E51C0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A08E22D0(uint64_t a1)
{
  unint64_t v2 = sub_1A08E5F68();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A08E230C(uint64_t a1)
{
  unint64_t v2 = sub_1A08E5F68();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A08E2348(void *a1)
{
  uint64_t v3 = v1;
  v25[2] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v5 = sub_1A07856F8(&qword_1E94FB840);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  unint64_t v8 = &v22[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1A086F45C(a1, a1[3]);
  sub_1A08E5F68();
  sub_1A09F4CC8();
  sub_1A08E5FBC(v3, (uint64_t)&v23);
  sub_1A08E5FBC((uint64_t)&v23, (uint64_t)&v24);
  if (v24 == 2)
  {
    if (qword_1E94F8568 != -1) {
      swift_once();
    }
    uint64_t v9 = sub_1A09F39E8();
    sub_1A078510C(v9, (uint64_t)qword_1E94FB6D8);
    long long v10 = sub_1A09F39C8();
    os_log_type_t v11 = sub_1A09F4378();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v12 = 0;
      _os_log_impl(&dword_1A0772000, v10, v11, "Didn't have a version when encoding SetupXPCObjectRequest. If this request is outgoing, it should have a version.", v12, 2u);
      MEMORY[0x1A6228C20](v12, -1, -1);
    }
  }
  else
  {
    LOBYTE(v25[0]) = 0;
    sub_1A09F4AB8();
    if (v2) {
      return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
    }
  }
  LOBYTE(v25[0]) = 1;
  sub_1A09F4A28();
  if (v2) {
    return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
  }
  LOBYTE(v25[0]) = 2;
  sub_1A09F4AB8();
  long long v14 = self;
  uint64_t v15 = (void *)sub_1A09F3CE8();
  v25[0] = 0;
  id v16 = objc_msgSend(v14, sel_archivedDataWithRootObject_requiringSecureCoding_error_, v15, 1, v25);

  id v17 = v25[0];
  if (!v16)
  {
    uint64_t v21 = v17;
    sub_1A09F3258();

    swift_willThrow();
    return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
  }
  uint64_t v18 = (void *)sub_1A09F33E8();
  uint64_t v20 = v19;

  v25[0] = v18;
  v25[1] = v20;
  void v22[5] = 3;
  sub_1A08E4BB0();
  sub_1A09F4A78();
  (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
  return sub_1A08AF2E4((uint64_t)v18, (unint64_t)v20);
}

uint64_t sub_1A08E26E0(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 136) = a3;
  *(void *)(v4 + 144) = a4;
  *(unsigned char *)(v4 + 192) = a2;
  *(void *)(v4 + 128) = a1;
  return MEMORY[0x1F4188298](sub_1A08E2708, 0, 0);
}

uint64_t sub_1A08E2708()
{
  uint64_t v1 = *(void **)(v0 + 144);
  *(void *)(v0 + 152) = sub_1A08E5010(*(void **)(v0 + 136));
  uint64_t v2 = swift_bridgeObjectRetain();
  uint64_t v3 = sub_1A089094C(v2);
  sub_1A08DCD14(v3);
  swift_bridgeObjectRelease();
  uint64_t v4 = sub_1A09F4068();
  *(void *)(v0 + 160) = v4;
  swift_release();
  *(void *)(v0 + 16) = v0;
  *(void *)(v0 + 56) = v0 + 120;
  *(void *)(v0 + 24) = sub_1A08E2858;
  uint64_t v5 = swift_continuation_init();
  *(void *)(v0 + 80) = MEMORY[0x1E4F143A8];
  *(void *)(v0 + 88) = 0x40000000;
  *(void *)(v0 + 96) = sub_1A08E1C14;
  *(void *)(v0 + 104) = &unk_1E5A15138;
  *(void *)(v0 + 112) = v5;
  objc_msgSend(v1, sel_requestContactsForIdentifiers_reply_, v4, v0 + 80);
  return MEMORY[0x1F41881E8](v0 + 16);
}

uint64_t sub_1A08E2858()
{
  return MEMORY[0x1F4188298](sub_1A08E2938, 0, 0);
}

uint64_t sub_1A08E2938()
{
  uint64_t v1 = (void *)v0[20];
  v0[21] = v0[15];

  sub_1A09F4188();
  v0[22] = sub_1A09F4178();
  uint64_t v3 = sub_1A09F4108();
  return MEMORY[0x1F4188298](sub_1A08E29DC, v3, v2);
}

uint64_t sub_1A08E29DC()
{
  swift_release();
  id v1 = objc_msgSend(self, sel_sharedList);
  id v2 = objc_msgSend(v1, sel_mutedChatList);

  sub_1A078231C(0, (unint64_t *)&qword_1EB4A59B8);
  *(void *)(v0 + 184) = sub_1A09F3D08();

  return MEMORY[0x1F4188298](sub_1A08E2AC0, 0, 0);
}

uint64_t sub_1A08E2AC0()
{
  uint64_t v1 = *(void *)(v0 + 184);
  uint64_t v2 = *(void *)(v0 + 168);
  uint64_t v3 = *(void *)(v0 + 152);
  uint64_t v5 = *(void *)(v0 + 128);
  uint64_t v4 = *(void **)(v0 + 136);
  *(unsigned char *)uint64_t v5 = *(unsigned char *)(v0 + 192);
  *(void *)(v5 + 8) = v4;
  *(void *)(v5 + 16) = v3;
  *(void *)(v5 + 24) = v2;
  *(void *)(v5 + 32) = v1;
  unint64_t v8 = *(uint64_t (**)(void))(v0 + 8);
  id v6 = v4;
  return v8();
}

uint64_t sub_1A08E2B44()
{
  uint64_t v0 = qword_1E94FB6F0;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_1A08E2B7C(uint64_t a1, uint64_t a2)
{
  long long v6 = *(_OWORD *)(v2 + 16);
  *(_OWORD *)(v3 + 16) = *(_OWORD *)v2;
  *(_OWORD *)(v3 + 32) = v6;
  *(void *)(v3 + 48) = *(void *)(v2 + 32);
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 56) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_1A0885E2C;
  v7[18] = a2;
  v7[19] = v3 + 16;
  v7[17] = a1;
  return MEMORY[0x1F4188298](sub_1A08E1D40, 0, 0);
}

double sub_1A08E2C4C@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1A08E53AC(a1, (uint64_t)v6);
  if (!v2)
  {
    double result = *(double *)v6;
    long long v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    *(void *)(a2 + 32) = v7;
  }
  return result;
}

uint64_t sub_1A08E2C94(void *a1)
{
  return sub_1A08E2348(a1);
}

uint64_t sub_1A08E2CD0()
{
  uint64_t result = 0x73736563637573;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x617461446F666E69;
      break;
    case 2:
      uint64_t result = 0x49746361746E6F63;
      break;
    case 3:
      uint64_t result = 0x616843646574756DLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A08E2D78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A08E5790(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A08E2DA0(uint64_t a1)
{
  unint64_t v2 = sub_1A08E4AC0();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A08E2DDC(uint64_t a1)
{
  unint64_t v2 = sub_1A08E4AC0();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A08E2E18@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_1A07856F8(&qword_1E94FB7A8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  unint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A086F45C(a1, a1[3]);
  sub_1A08E4AC0();
  sub_1A09F4CA8();
  if (v2) {
    return _s17IMSharedUtilities29RemoteIntentBroadcastEncodingVwxx_0((uint64_t)a1);
  }
  LOBYTE(v27) = 0;
  char v9 = sub_1A09F48E8();
  LOBYTE(v25) = 1;
  sub_1A08E4B14();
  sub_1A09F4928();
  long long v24 = v27;
  LOBYTE(v25) = 3;
  sub_1A09F4928();
  long long v23 = v27;
  sub_1A07856F8((uint64_t *)&unk_1EB4A5BD0);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1A0A0CE10;
  *(void *)(v10 + 32) = sub_1A078231C(0, (unint64_t *)&unk_1EB4A5C08);
  *(void *)(v10 + 40) = sub_1A078231C(0, (unint64_t *)&unk_1EB4A5B98);
  *(void *)(v10 + 48) = sub_1A078231C(0, &qword_1EB4A5B80);
  *(void *)(v10 + 56) = sub_1A078231C(0, (unint64_t *)&qword_1EB4A59B8);
  *(void *)(v10 + 64) = sub_1A078231C(0, qword_1EB4A5920);
  *(void *)(v10 + 72) = sub_1A078231C(0, &qword_1EB4A59B0);
  uint64_t v11 = sub_1A078231C(0, &qword_1E94FB7C0);
  uint64_t result = sub_1A09F43A8();
  uint64_t v22 = v11;
  if (v26)
  {
    sub_1A07825B4(&v25, &v27);
    sub_1A07856F8((uint64_t *)&unk_1E94F9030);
    uint64_t v19 = MEMORY[0x1E4FBC840] + 8;
    swift_dynamicCast();
    uint64_t v17 = v29;
    uint64_t v13 = sub_1A09F3E58();
    id v20 = (id)(v13 + 32);
    uint64_t v21 = v13;
    id v18 = objc_allocWithZone((Class)IMXPCDictionary);
    long long v14 = (void *)sub_1A09F3CE8();
    swift_bridgeObjectRelease();
    id v20 = objc_msgSend(v18, sel_initWithDictionary_key_, v14, v20);
    swift_release();

    sub_1A09F43A8();
    swift_bridgeObjectRelease();
    if (v28)
    {
      sub_1A07856F8(&qword_1E94F93A0);
      if (swift_dynamicCast())
      {
        unint64_t v15 = v25;
LABEL_10:
        LOBYTE(v25) = 2;
        sub_1A08BC180();
        sub_1A09F4928();
        sub_1A08AF2E4(v23, *((unint64_t *)&v23 + 1));
        sub_1A08AF2E4(v24, *((unint64_t *)&v24 + 1));
        (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
        long long v16 = v27;
        *(unsigned char *)a2 = v9 & 1;
        *(void *)(a2 + 8) = v20;
        *(_OWORD *)(a2 + 16) = v16;
        *(void *)(a2 + 32) = v15;
        return _s17IMSharedUtilities29RemoteIntentBroadcastEncodingVwxx_0((uint64_t)a1);
      }
    }
    else
    {
      sub_1A0783C7C((uint64_t)&v27);
    }
    unint64_t v15 = sub_1A08D7A50(MEMORY[0x1E4FBC860]);
    goto LABEL_10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1A08E3354(void *a1)
{
  uint64_t v41 = *MEMORY[0x1E4F143B8];
  uint64_t v3 = sub_1A07856F8(&qword_1E94FB7C8);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  LODWORD(v36) = *(unsigned __int8 *)v1;
  unint64_t v8 = (void *)v1[1];
  uint64_t v7 = (void *)v1[2];
  unint64_t v34 = v1[3];
  uint64_t v35 = v7;
  sub_1A086F45C(a1, a1[3]);
  sub_1A08E4AC0();
  sub_1A09F4CC8();
  id v9 = objc_msgSend(v8, sel_dictionaryForKey_, sub_1A09F3E58() + 32);
  swift_release();
  if (!v9)
  {
    sub_1A08E4B5C();
    swift_allocError();
    *(void *)uint64_t v24 = 0xD00000000000003ALL;
    *(void *)(v24 + 8) = 0x80000001A0A34AC0;
    *(unsigned char *)(v24 + 16) = 0;
    swift_willThrow();
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  sub_1A09F3D08();

  uint64_t v10 = self;
  uint64_t v11 = (void *)sub_1A09F3CE8();
  swift_bridgeObjectRelease();
  id v39 = 0;
  id v12 = objc_msgSend(v10, sel_archivedDataWithRootObject_requiringSecureCoding_error_, v11, 1, &v39);

  id v13 = v39;
  if (!v12)
  {
    long long v25 = v13;
    sub_1A09F3258();

    swift_willThrow();
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  long long v14 = (void *)sub_1A09F33E8();
  unint64_t v16 = v15;

  sub_1A078231C(0, (unint64_t *)&qword_1EB4A59B8);
  uint64_t v17 = (void *)sub_1A09F3CE8();
  id v39 = 0;
  id v18 = objc_msgSend(v10, sel_archivedDataWithRootObject_requiringSecureCoding_error_, v17, 1, &v39);

  id v19 = v39;
  if (!v18)
  {
    uint64_t v26 = v19;
    sub_1A09F3258();

    swift_willThrow();
    sub_1A08AF2E4((uint64_t)v14, v16);
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  uint64_t v20 = sub_1A09F33E8();
  unint64_t v22 = v21;

  LOBYTE(v39) = 0;
  long long v23 = v37;
  sub_1A09F4A38();
  if (v23)
  {
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    sub_1A08AF2E4(v20, v22);
    uint64_t v28 = (uint64_t)v14;
    unint64_t v29 = v16;
  }
  else
  {
    uint64_t v37 = (void *)v20;
    id v39 = v14;
    unint64_t v40 = v16;
    char v38 = 1;
    sub_1A08E4BB0();
    sub_1A09F4A78();
    unint64_t v33 = v22;
    unint64_t v36 = v16;
    id v39 = v35;
    unint64_t v40 = v34;
    char v38 = 2;
    sub_1A08BC12C();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1A09F4A78();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v30 = (uint64_t)v37;
    unint64_t v31 = v33;
    id v39 = v37;
    unint64_t v40 = v33;
    char v38 = 3;
    sub_1A09F4A78();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    sub_1A08AF2E4((uint64_t)v14, v36);
    uint64_t v28 = v30;
    unint64_t v29 = v31;
  }
  return sub_1A08AF2E4(v28, v29);
}

id sub_1A08E3878@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void **)(v1 + 8);
  *(unsigned char *)a1 = *(unsigned char *)v1;
  *(void *)(a1 + 8) = v2;
  return v2;
}

void sub_1A08E388C(uint64_t a1@<X8>)
{
  sub_1A08D733C(MEMORY[0x1E4FBC860]);
  id v2 = objc_allocWithZone((Class)IMXPCDictionary);
  uint64_t v3 = (void *)sub_1A09F3CE8();
  swift_bridgeObjectRelease();
  id v4 = objc_msgSend(v2, sel_initWithDictionary_key_, v3, "");

  *(unsigned char *)a1 = 0;
  *(void *)(a1 + 8) = v4;
}

uint64_t sub_1A08E3930@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1A08E2E18(a1, a2);
}

uint64_t sub_1A08E3948(void *a1)
{
  return sub_1A08E3354(a1);
}

uint64_t sub_1A08E3960()
{
  return sub_1A09F4038();
}

uint64_t sub_1A08E39DC()
{
  return sub_1A09F3FB8();
}

uint64_t destroy for MarkUnreadRequest()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for MarkUnreadRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for MarkUnreadRequest(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for MarkUnreadRequest(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for MarkUnreadRequest()
{
  return &type metadata for MarkUnreadRequest;
}

uint64_t destroy for SetupXPCObjectRequest()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for SetupXPCObjectRequest(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SetupXPCObjectRequest(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for SetupXPCObjectRequest(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SetupXPCObjectRequest(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SetupXPCObjectRequest(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SetupXPCObjectRequest()
{
  return &type metadata for SetupXPCObjectRequest;
}

uint64_t sub_1A08E3DD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A08E4A84(a1, a2, a3, (uint64_t (*)(void))sub_1A08BDA10, (uint64_t (*)(void))sub_1A08BD9BC);
}

unint64_t sub_1A08E3E04(uint64_t a1)
{
  unint64_t result = sub_1A08E3E2C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1A08E3E2C()
{
  unint64_t result = qword_1E94FB728;
  if (!qword_1E94FB728)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FB728);
  }
  return result;
}

uint64_t sub_1A08E3E80(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_1A07856F8(&qword_1E94FB820);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  unint64_t v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A086F45C(a1, a1[3]);
  sub_1A08E5ED0();
  sub_1A09F4CC8();
  LOBYTE(v11) = 0;
  sub_1A09F4A28();
  if (!v2)
  {
    uint64_t v11 = *(void *)(v3 + 16);
    HIBYTE(v10) = 1;
    sub_1A07856F8(&qword_1EB4A5610);
    sub_1A0879F5C(&qword_1E94F9140);
    sub_1A09F4A78();
    LOBYTE(v11) = *(unsigned char *)(v3 + 24);
    HIBYTE(v10) = 2;
    type metadata accessor for IMChatStyle(0);
    sub_1A08E5F24(&qword_1E94FB828);
    sub_1A09F4A78();
    uint64_t v11 = *(void *)(v3 + 32);
    HIBYTE(v10) = 3;
    sub_1A09F4A78();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1A08E40C8()
{
  uint64_t result = 1145656647;
  switch(*v0)
  {
    case 1:
      uint64_t result = 7554121;
      break;
    case 2:
      uint64_t result = 0x6C79745374616863;
      break;
    case 3:
      uint64_t result = 0x7365636976726573;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A08E414C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A08E5994(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A08E4174(uint64_t a1)
{
  unint64_t v2 = sub_1A08E5ED0();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A08E41B0(uint64_t a1)
{
  unint64_t v2 = sub_1A08E5ED0();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A08E41EC()
{
  uint64_t v0 = *(void *)aMarkunread;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_1A08E4224(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *v2;
  *(void *)(v3 + 16) = a2;
  *(void *)(v3 + 24) = v4;
  *(_OWORD *)(v3 + 32) = *(_OWORD *)(v2 + 1);
  *(unsigned char *)(v3 + 56) = *((unsigned char *)v2 + 24);
  *(void *)(v3 + 48) = v2[4];
  return MEMORY[0x1F4188298](sub_1A08E4260, 0, 0);
}

uint64_t sub_1A08E4260()
{
  uint64_t v2 = *(void *)(v0 + 40);
  uint64_t v1 = *(void *)(v0 + 48);
  uint64_t v3 = *(unsigned __int8 *)(v0 + 56);
  uint64_t v4 = *(void **)(v0 + 16);
  uint64_t v5 = (void *)sub_1A09F3DE8();
  sub_1A0874150(v2);
  uint64_t v6 = (void *)sub_1A09F4068();
  swift_bridgeObjectRelease();
  sub_1A0874150(v1);
  uint64_t v7 = (void *)sub_1A09F4068();
  swift_bridgeObjectRelease();
  objc_msgSend(v4, sel_markUnreadForMessageGUID_IDs_style_services_, v5, v6, v3, v7);

  unint64_t v8 = *(uint64_t (**)(void))(v0 + 8);
  return v8();
}

double sub_1A08E4364@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1A08E5B3C(a1, (uint64_t *)v6);
  if (!v2)
  {
    double result = *(double *)v6;
    long long v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    *(void *)(a2 + 32) = v7;
  }
  return result;
}

uint64_t sub_1A08E43AC(void *a1)
{
  return sub_1A08E3E80(a1);
}

uint64_t sub_1A08E43C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A08E4A84(a1, a2, a3, (uint64_t (*)(void))sub_1A08BD818, (uint64_t (*)(void))sub_1A08BD7C4);
}

unint64_t sub_1A08E43F0(uint64_t a1)
{
  unint64_t result = sub_1A08E4418();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1A08E4418()
{
  unint64_t result = qword_1E94FB730;
  if (!qword_1E94FB730)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FB730);
  }
  return result;
}

uint64_t sub_1A08E446C()
{
  return sub_1A08E483C(&qword_1E94FB738, &qword_1E94FB740);
}

unint64_t sub_1A08E4498()
{
  unint64_t result = qword_1E94FB748;
  if (!qword_1E94FB748)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FB748);
  }
  return result;
}

unint64_t sub_1A08E44EC(uint64_t a1)
{
  unint64_t result = sub_1A08E4514();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1A08E4514()
{
  unint64_t result = qword_1E94FB758;
  if (!qword_1E94FB758)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FB758);
  }
  return result;
}

uint64_t sub_1A08E4568(uint64_t a1)
{
  unint64_t v2 = sub_1A08E516C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A08E45A4(uint64_t a1)
{
  unint64_t v2 = sub_1A08E516C();

  return MEMORY[0x1F41862B0](a1, v2);
}

unint64_t sub_1A08E45E0(uint64_t a1)
{
  unint64_t result = sub_1A08E4608();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1A08E4608()
{
  unint64_t result = qword_1E94FB760;
  if (!qword_1E94FB760)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FB760);
  }
  return result;
}

unint64_t sub_1A08E465C(uint64_t a1)
{
  unint64_t result = sub_1A08E4684();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1A08E4684()
{
  unint64_t result = qword_1E94FB768;
  if (!qword_1E94FB768)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FB768);
  }
  return result;
}

uint64_t sub_1A08E46D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A08E4A84(a1, a2, a3, (uint64_t (*)(void))sub_1A08BC4C8, (uint64_t (*)(void))sub_1A08BC474);
}

uint64_t sub_1A08E4704(void *a1)
{
  uint64_t v2 = sub_1A07856F8(&qword_1E94FB7F8);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  long long v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A086F45C(a1, a1[3]);
  sub_1A08E516C();
  sub_1A09F4CC8();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_1A08E4814()
{
  return sub_1A08E483C(&qword_1E94FB770, &qword_1E94FB778);
}

uint64_t sub_1A08E483C(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1A078D800(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1A08E4890()
{
  unint64_t result = qword_1E94FB780;
  if (!qword_1E94FB780)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FB780);
  }
  return result;
}

unint64_t sub_1A08E48E4(uint64_t a1)
{
  unint64_t result = sub_1A08E490C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1A08E490C()
{
  unint64_t result = qword_1E94FB790;
  if (!qword_1E94FB790)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FB790);
  }
  return result;
}

unint64_t sub_1A08E4960(uint64_t a1)
{
  unint64_t result = sub_1A08E4988();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1A08E4988()
{
  unint64_t result = qword_1E94FB798;
  if (!qword_1E94FB798)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FB798);
  }
  return result;
}

unint64_t sub_1A08E49DC(uint64_t a1)
{
  unint64_t result = sub_1A08E4A04();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1A08E4A04()
{
  unint64_t result = qword_1E94FB7A0;
  if (!qword_1E94FB7A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FB7A0);
  }
  return result;
}

uint64_t sub_1A08E4A58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A08E4A84(a1, a2, a3, (uint64_t (*)(void))sub_1A08BC2D0, (uint64_t (*)(void))sub_1A08BC27C);
}

uint64_t sub_1A08E4A84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t (*a5)(void))
{
  *(void *)(a1 + 8) = a4();
  uint64_t result = a5();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1A08E4AC0()
{
  unint64_t result = qword_1E94FB7B0;
  if (!qword_1E94FB7B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FB7B0);
  }
  return result;
}

unint64_t sub_1A08E4B14()
{
  unint64_t result = qword_1E94FB7B8;
  if (!qword_1E94FB7B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FB7B8);
  }
  return result;
}

unint64_t sub_1A08E4B5C()
{
  unint64_t result = qword_1E94FB7D0;
  if (!qword_1E94FB7D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FB7D0);
  }
  return result;
}

unint64_t sub_1A08E4BB0()
{
  unint64_t result = qword_1E94FB7D8;
  if (!qword_1E94FB7D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_1E94FB7D8);
  }
  return result;
}

uint64_t sub_1A08E4BF8(uint64_t isStackAllocationSafe)
{
  uint64_t v2 = isStackAllocationSafe;
  v9[1] = *MEMORY[0x1E4F143B8];
  char v3 = *(unsigned char *)(isStackAllocationSafe + 32);
  unint64_t v4 = (unint64_t)((1 << v3) + 63) >> 6;
  size_t v5 = 8 * v4;
  if ((v3 & 0x3Fu) <= 0xD
    || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1F4188790](isStackAllocationSafe);
    bzero((char *)v9 - ((v5 + 15) & 0x3FFFFFFFFFFFFFF0), v5);
    uint64_t v6 = sub_1A08C1C98((uint64_t)v9 - ((v5 + 15) & 0x3FFFFFFFFFFFFFF0), v4, v2);
    if (v1) {
      swift_willThrow();
    }
    else {
      return v6;
    }
  }
  else
  {
    uint64_t v7 = (void *)swift_slowAlloc();
    bzero(v7, v5);
    uint64_t v2 = sub_1A08C1C98((uint64_t)v7, v4, v2);
    MEMORY[0x1A6228C20](v7, -1, -1);
  }
  return v2;
}

uint64_t sub_1A08E4D50(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (!a3) {
    return MEMORY[0x1E4FBC868];
  }
  uint64_t v4 = a4;
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3)
  {
    swift_retain();
    return v4;
  }
  sub_1A07856F8(&qword_1E94FB4C8);
  uint64_t result = sub_1A09F47E8();
  uint64_t v9 = result;
  id v39 = a1;
  uint64_t v40 = a2;
  if (a2 < 1) {
    unint64_t v10 = 0;
  }
  else {
    unint64_t v10 = *a1;
  }
  uint64_t v11 = 0;
  uint64_t v12 = result + 64;
  while (1)
  {
    if (v10)
    {
      unint64_t v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      uint64_t v41 = v11;
      unint64_t v14 = v13 | (v11 << 6);
    }
    else
    {
      uint64_t v15 = v11 + 1;
      if (__OFADD__(v11, 1)) {
        goto LABEL_40;
      }
      if (v15 >= v40) {
        return v9;
      }
      unint64_t v16 = v39[v15];
      uint64_t v17 = v11 + 1;
      if (!v16)
      {
        uint64_t v17 = v11 + 2;
        if (v11 + 2 >= v40) {
          return v9;
        }
        unint64_t v16 = v39[v17];
        if (!v16)
        {
          uint64_t v17 = v11 + 3;
          if (v11 + 3 >= v40) {
            return v9;
          }
          unint64_t v16 = v39[v17];
          if (!v16)
          {
            uint64_t v18 = v11 + 4;
            if (v11 + 4 >= v40) {
              return v9;
            }
            unint64_t v16 = v39[v18];
            if (!v16)
            {
              while (1)
              {
                uint64_t v17 = v18 + 1;
                if (__OFADD__(v18, 1)) {
                  goto LABEL_41;
                }
                if (v17 >= v40) {
                  return v9;
                }
                unint64_t v16 = v39[v17];
                ++v18;
                if (v16) {
                  goto LABEL_24;
                }
              }
            }
            uint64_t v17 = v11 + 4;
          }
        }
      }
LABEL_24:
      unint64_t v10 = (v16 - 1) & v16;
      uint64_t v41 = v17;
      unint64_t v14 = __clz(__rbit64(v16)) + (v17 << 6);
    }
    uint64_t v19 = 16 * v14;
    uint64_t v20 = v4;
    unint64_t v21 = (uint64_t *)(*(void *)(v4 + 48) + v19);
    uint64_t v23 = *v21;
    uint64_t v22 = v21[1];
    uint64_t v24 = (uint64_t *)(*(void *)(v4 + 56) + v19);
    uint64_t v25 = *v24;
    uint64_t v26 = v24[1];
    sub_1A09F4C48();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1A09F3DA8();
    uint64_t result = sub_1A09F4C88();
    uint64_t v27 = -1 << *(unsigned char *)(v9 + 32);
    unint64_t v28 = result & ~v27;
    unint64_t v29 = v28 >> 6;
    if (((-1 << v28) & ~*(void *)(v12 + 8 * (v28 >> 6))) != 0)
    {
      unint64_t v30 = __clz(__rbit64((-1 << v28) & ~*(void *)(v12 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v31 = 0;
      unint64_t v32 = (unint64_t)(63 - v27) >> 6;
      do
      {
        if (++v29 == v32 && (v31 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        BOOL v33 = v29 == v32;
        if (v29 == v32) {
          unint64_t v29 = 0;
        }
        v31 |= v33;
        uint64_t v34 = *(void *)(v12 + 8 * v29);
      }
      while (v34 == -1);
      unint64_t v30 = __clz(__rbit64(~v34)) + (v29 << 6);
    }
    *(void *)(v12 + ((v30 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v30;
    uint64_t v35 = 16 * v30;
    unint64_t v36 = (void *)(*(void *)(v9 + 48) + v35);
    *unint64_t v36 = v23;
    v36[1] = v22;
    uint64_t v37 = (void *)(*(void *)(v9 + 56) + v35);
    *uint64_t v37 = v25;
    v37[1] = v26;
    ++*(void *)(v9 + 16);
    if (__OFSUB__(v5--, 1)) {
      break;
    }
    uint64_t v4 = v20;
    uint64_t v11 = v41;
    if (!v5) {
      return v9;
    }
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

unint64_t sub_1A08E5010(void *a1)
{
  id v1 = objc_msgSend(a1, sel_dictionaryForKey_, "setupInfo");
  if (!v1) {
    return sub_1A08D75B8(MEMORY[0x1E4FBC860]);
  }
  uint64_t v2 = v1;
  uint64_t v3 = sub_1A09F3D08();

  unint64_t v4 = sub_1A09A1CB8(v3);
  swift_bridgeObjectRelease();
  if (!v4) {
    return sub_1A08D75B8(MEMORY[0x1E4FBC860]);
  }
  uint64_t v5 = sub_1A09F3E18();
  if (!*(void *)(v4 + 16) || (unint64_t v7 = sub_1A087AAA4(v5, v6), (v8 & 1) == 0))
  {
    long long v12 = 0u;
    long long v13 = 0u;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  sub_1A0785268(*(void *)(v4 + 56) + 32 * v7, (uint64_t)&v12);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*((void *)&v13 + 1))
  {
LABEL_9:
    sub_1A0783C7C((uint64_t)&v12);
    return sub_1A08D75B8(MEMORY[0x1E4FBC860]);
  }
  sub_1A07856F8(&qword_1E94FAE48);
  if ((swift_dynamicCast() & 1) == 0) {
    return sub_1A08D75B8(MEMORY[0x1E4FBC860]);
  }
  uint64_t v9 = sub_1A08E4BF8(v11);
  swift_bridgeObjectRelease();
  return v9;
}

unint64_t sub_1A08E516C()
{
  unint64_t result = qword_1E94FB800;
  if (!qword_1E94FB800)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FB800);
  }
  return result;
}

uint64_t sub_1A08E51C0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6E6F6973726576 && a2 == 0xE700000000000000;
  if (v2 || (sub_1A09F4B28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x4449656C646E7562 && a2 == 0xE800000000000000 || (sub_1A09F4B28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x696C696261706163 && a2 == 0xEC00000073656974 || (sub_1A09F4B28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x44747865746E6F63 && a2 == 0xEB00000000617461)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_1A09F4B28();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_1A08E53AC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_1A07856F8(&qword_1E94FB830);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  char v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A086F45C(a1, a1[3]);
  sub_1A08E5F68();
  sub_1A09F4CA8();
  if (v2) {
    return _s17IMSharedUtilities29RemoteIntentBroadcastEncodingVwxx_0((uint64_t)a1);
  }
  LOBYTE(v28) = 0;
  uint64_t v9 = sub_1A09F48C8();
  BOOL v12 = (v10 & 1) == 0 && v9 == 1;
  LOBYTE(v28) = 1;
  uint64_t v13 = sub_1A09F48D8();
  uint64_t v16 = v15;
  uint64_t v25 = v13;
  BOOL v29 = v12;
  LOBYTE(v28) = 2;
  uint64_t v17 = sub_1A09F4968();
  LOBYTE(v26) = 3;
  sub_1A08E4B14();
  sub_1A09F4928();
  uint64_t v21 = v17;
  unint64_t v23 = *((void *)&v28 + 1);
  uint64_t v24 = v28;
  sub_1A07856F8((uint64_t *)&unk_1EB4A5BD0);
  uint64_t v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_1A0A0AED0;
  *(void *)(v18 + 32) = sub_1A078231C(0, (unint64_t *)&unk_1EB4A5C08);
  *(void *)(v18 + 40) = sub_1A078231C(0, (unint64_t *)&unk_1EB4A5B98);
  *(void *)(v18 + 48) = sub_1A078231C(0, &qword_1EB4A5B80);
  *(void *)(v18 + 56) = sub_1A078231C(0, (unint64_t *)&qword_1EB4A59B8);
  *(void *)(v18 + 64) = sub_1A078231C(0, qword_1EB4A5920);
  sub_1A078231C(0, &qword_1E94FB7C0);
  uint64_t v22 = v18;
  sub_1A09F43A8();
  uint64_t v19 = v24;
  uint64_t result = swift_bridgeObjectRelease();
  if (v27)
  {
    sub_1A08AF2E4(v19, v23);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    sub_1A07825B4(&v26, &v28);
    sub_1A07856F8(&qword_1E94FDD10);
    swift_dynamicCast();
    uint64_t result = _s17IMSharedUtilities29RemoteIntentBroadcastEncodingVwxx_0((uint64_t)a1);
    *(unsigned char *)a2 = v29;
    *(void *)(a2 + 8) = v25;
    *(void *)(a2 + 16) = v16;
    *(void *)(a2 + 24) = v21;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1A08E5790(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x73736563637573 && a2 == 0xE700000000000000;
  if (v2 || (sub_1A09F4B28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x617461446F666E69 && a2 == 0xE800000000000000 || (sub_1A09F4B28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x49746361746E6F63 && a2 == 0xEF617461446F666ELL || (sub_1A09F4B28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x616843646574756DLL && a2 == 0xED00007473694C74)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_1A09F4B28();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_1A08E5994(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1145656647 && a2 == 0xE400000000000000;
  if (v2 || (sub_1A09F4B28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 7554121 && a2 == 0xE300000000000000 || (sub_1A09F4B28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6C79745374616863 && a2 == 0xE900000000000065 || (sub_1A09F4B28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x7365636976726573 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_1A09F4B28();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_1A08E5B3C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = sub_1A07856F8(&qword_1E94FB808);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  char v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A086F45C(a1, a1[3]);
  sub_1A08E5ED0();
  sub_1A09F4CA8();
  if (v2) {
    return _s17IMSharedUtilities29RemoteIntentBroadcastEncodingVwxx_0((uint64_t)a1);
  }
  LOBYTE(v24) = 0;
  uint64_t v9 = sub_1A09F48D8();
  uint64_t v11 = v10;
  uint64_t v21 = a2;
  uint64_t v22 = v9;
  sub_1A07856F8(&qword_1EB4A5610);
  char v23 = 1;
  uint64_t v12 = sub_1A0879F5C(&qword_1E94F9128);
  swift_bridgeObjectRetain();
  sub_1A09F4928();
  uint64_t v20 = v12;
  uint64_t v13 = v24;
  type metadata accessor for IMChatStyle(0);
  char v23 = 2;
  sub_1A08E5F24(&qword_1E94FB818);
  swift_bridgeObjectRetain();
  sub_1A09F4928();
  uint64_t v19 = v13;
  LOBYTE(v13) = v24;
  char v23 = 3;
  sub_1A09F4928();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v14 = v24;
  swift_bridgeObjectRetain();
  _s17IMSharedUtilities29RemoteIntentBroadcastEncodingVwxx_0((uint64_t)a1);
  swift_bridgeObjectRelease();
  uint64_t v15 = v19;
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v17 = v21;
  *uint64_t v21 = v22;
  v17[1] = v11;
  v17[2] = v15;
  *((unsigned char *)v17 + 24) = v13;
  v17[4] = v14;
  return result;
}

unint64_t sub_1A08E5ED0()
{
  unint64_t result = qword_1E94FB810;
  if (!qword_1E94FB810)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FB810);
  }
  return result;
}

uint64_t sub_1A08E5F24(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for IMChatStyle(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1A08E5F68()
{
  unint64_t result = qword_1E94FB838;
  if (!qword_1E94FB838)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FB838);
  }
  return result;
}

uint64_t sub_1A08E5FBC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1A07856F8(&qword_1E94FB848);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

ValueMetadata *type metadata accessor for SetupXPCObjectRequest.CodingKeys()
{
  return &type metadata for SetupXPCObjectRequest.CodingKeys;
}

ValueMetadata *type metadata accessor for MarkUnreadRequest.CodingKeys()
{
  return &type metadata for MarkUnreadRequest.CodingKeys;
}

ValueMetadata *type metadata accessor for MarkUnreadResponse.CodingKeys()
{
  return &type metadata for MarkUnreadResponse.CodingKeys;
}

unsigned char *_s17IMSharedUtilities21SetupXPCObjectRequestV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A08E6124);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SetupXPCObjectResponse.CodingKeys()
{
  return &type metadata for SetupXPCObjectResponse.CodingKeys;
}

uint64_t destroy for SetupXPCObjectResponse(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for SetupXPCObjectResponse(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  int v3 = *(void **)(a2 + 8);
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  id v6 = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SetupXPCObjectResponse(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v4 = *(void **)(a2 + 8);
  uint64_t v5 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = v4;
  id v6 = v4;

  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for SetupXPCObjectResponse(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;

  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for SetupXPCObjectResponse()
{
  return &type metadata for SetupXPCObjectResponse;
}

ValueMetadata *type metadata accessor for MarkUnreadResponse()
{
  return &type metadata for MarkUnreadResponse;
}

unsigned char *storeEnumTagSinglePayload for SetupXPCRequestVersion(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A08E63E8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SetupXPCRequestVersion()
{
  return &type metadata for SetupXPCRequestVersion;
}

unint64_t sub_1A08E6424()
{
  unint64_t result = qword_1E94FB850;
  if (!qword_1E94FB850)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FB850);
  }
  return result;
}

unint64_t sub_1A08E647C()
{
  unint64_t result = qword_1E94FB858;
  if (!qword_1E94FB858)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FB858);
  }
  return result;
}

unint64_t sub_1A08E64D4()
{
  unint64_t result = qword_1E94FB860;
  if (!qword_1E94FB860)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FB860);
  }
  return result;
}

unint64_t sub_1A08E652C()
{
  unint64_t result = qword_1E94FB868;
  if (!qword_1E94FB868)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FB868);
  }
  return result;
}

unint64_t sub_1A08E6584()
{
  unint64_t result = qword_1E94FB870;
  if (!qword_1E94FB870)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FB870);
  }
  return result;
}

unint64_t sub_1A08E65DC()
{
  unint64_t result = qword_1E94FB878;
  if (!qword_1E94FB878)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FB878);
  }
  return result;
}

unint64_t sub_1A08E6634()
{
  unint64_t result = qword_1E94FB880;
  if (!qword_1E94FB880)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FB880);
  }
  return result;
}

unint64_t sub_1A08E668C()
{
  unint64_t result = qword_1E94FB888;
  if (!qword_1E94FB888)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FB888);
  }
  return result;
}

unint64_t sub_1A08E66E4()
{
  unint64_t result = qword_1E94FB890;
  if (!qword_1E94FB890)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FB890);
  }
  return result;
}

unint64_t sub_1A08E673C()
{
  unint64_t result = qword_1E94FB898;
  if (!qword_1E94FB898)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FB898);
  }
  return result;
}

unint64_t sub_1A08E6794()
{
  unint64_t result = qword_1E94FB8A0;
  if (!qword_1E94FB8A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FB8A0);
  }
  return result;
}

unint64_t sub_1A08E67EC()
{
  unint64_t result = qword_1E94FB8A8;
  if (!qword_1E94FB8A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FB8A8);
  }
  return result;
}

void __swiftcall IMActionSettings.init(dictionary:)(IMActionSettings_optional *__return_ptr retstr, Swift::OpaquePointer dictionary)
{
  id v2 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  int v3 = (void *)sub_1A09F3CE8();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_initWithDictionary_, v3);
}

id IMActionSettings.init(dictionary:)(uint64_t a1)
{
  id v2 = v1;
  if (!*(void *)(a1 + 16) || (unint64_t v4 = sub_1A087AAA4(1701869940, 0xE400000000000000), (v5 & 1) == 0))
  {
    long long v8 = 0u;
    long long v9 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  sub_1A0785268(*(void *)(a1 + 56) + 32 * v4, (uint64_t)&v8);
  swift_bridgeObjectRelease();
  if (!*((void *)&v9 + 1))
  {
LABEL_7:
    sub_1A0783C7C((uint64_t)&v8);
    goto LABEL_8;
  }
  if (swift_dynamicCast()) {
    return objc_msgSend(v2, sel_initWithType_, v7);
  }
LABEL_8:
  swift_getObjectType();
  swift_deallocPartialClassInstance();
  return 0;
}

void __swiftcall IMActionSettings.init()(IMActionSettings *__return_ptr retstr)
{
  id v1 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());

  objc_msgSend(v1, sel_init);
}

void IMActionSettings.init()()
{
}

unint64_t type metadata accessor for IMActionSettings()
{
  unint64_t result = qword_1E94FB8C0;
  if (!qword_1E94FB8C0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1E94FB8C0);
  }
  return result;
}

uint64_t dispatch thunk of RemoteIntentRequestDispatching.invokeRemoteRequest<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v15 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a6 + 8)
                                                                                     + **(int **)(a6 + 8));
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v6 + 16) = v13;
  *uint64_t v13 = v6;
  v13[1] = sub_1A077EE58;
  return v15(a1, a2, a3, a4, a5, a6);
}

uint64_t dispatch thunk of RemoteIntentRequestDispatching.invoke<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v17 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a7 + 16)
                                                                                              + **(int **)(a7 + 16));
  uint64_t v15 = (void *)swift_task_alloc();
  *(void *)(v7 + 16) = v15;
  *uint64_t v15 = v7;
  v15[1] = sub_1A077EE58;
  return v17(a1, a2, a3, a4, a5, a6, a7);
}

uint64_t sub_1A08E6E54()
{
  uint64_t v0 = sub_1A09F39E8();
  sub_1A078D848(v0, qword_1E94FB8D8);
  sub_1A078510C(v0, (uint64_t)qword_1E94FB8D8);
  return sub_1A09F39D8();
}

id sub_1A08E6ECC(uint64_t a1, unint64_t a2, void *a3, void *a4)
{
  v45[1] = *(id *)MEMORY[0x1E4F143B8];
  id v7 = (id)im_primary_queue();
  id v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F23A80]), sel_initWithQueue_, v7);

  if (qword_1E94F8570 != -1) {
    swift_once();
  }
  uint64_t v9 = sub_1A09F39E8();
  sub_1A078510C(v9, (uint64_t)qword_1E94FB8D8);
  id v10 = a4;
  id v11 = a3;
  id v12 = v10;
  id v13 = v11;
  uint64_t v14 = sub_1A09F39C8();
  os_log_type_t v15 = sub_1A09F4358();
  if (os_log_type_enabled(v14, v15))
  {
    unint64_t v42 = a2;
    id v43 = v8;
    uint64_t v16 = swift_slowAlloc();
    uint64_t v17 = (void *)swift_slowAlloc();
    v45[0] = v17;
    *(_DWORD *)uint64_t v16 = 136315394;
    id v18 = objc_msgSend(v12, sel_uri);
    uint64_t v19 = sub_1A09F3E18();
    unint64_t v21 = v20;

    sub_1A0785144(v19, v21, (uint64_t *)v45);
    sub_1A09F4528();

    swift_bridgeObjectRelease();
    *(_WORD *)(v16 + 12) = 2080;
    id v22 = objc_msgSend(v13, sel_phoneNumber);
    if (v22)
    {
      char v23 = v22;
      uint64_t v24 = sub_1A09F3E18();
      unint64_t v26 = v25;
    }
    else
    {
      unint64_t v26 = 0xE400000000000000;
      uint64_t v24 = 1701736270;
    }
    sub_1A0785144(v24, v26, (uint64_t *)v45);
    sub_1A09F4528();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A0772000, v14, v15, "Reading cached capabilities for %s, for RCS subscription %s", (uint8_t *)v16, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1A6228C20](v17, -1, -1);
    MEMORY[0x1A6228C20](v16, -1, -1);

    a2 = v42;
    id v8 = v43;
  }
  else
  {
  }
  v45[0] = 0;
  id v27 = objc_msgSend(v8, sel_readCachedCapabilities_forDestination_withError_, v13, v12, v45, v42, v43);
  id v28 = v45[0];
  if (v27)
  {
    BOOL v29 = v27;
    swift_bridgeObjectRetain_n();
    id v30 = v29;
    id v31 = v28;
    id v32 = v30;
    BOOL v33 = sub_1A09F39C8();
    os_log_type_t v34 = sub_1A09F4358();
    if (os_log_type_enabled(v33, v34))
    {
      uint64_t v35 = swift_slowAlloc();
      unint64_t v36 = a2;
      uint64_t v37 = (void *)swift_slowAlloc();
      v45[0] = v37;
      *(_DWORD *)uint64_t v35 = 136315394;
      swift_bridgeObjectRetain();
      sub_1A0785144(a1, v36, (uint64_t *)v45);
      sub_1A09F4528();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v35 + 12) = 1024;
      objc_msgSend(v32, sel_isBot);

      sub_1A09F4528();
      _os_log_impl(&dword_1A0772000, v33, v34, "%s is a chat bot: %{BOOL}d, verified by telephony options", (uint8_t *)v35, 0x12u);
      swift_arrayDestroy();
      MEMORY[0x1A6228C20](v37, -1, -1);
      MEMORY[0x1A6228C20](v35, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    id v40 = objc_msgSend(v32, sel_isBot);
  }
  else
  {
    id v38 = v45[0];
    id v39 = (void *)sub_1A09F3258();

    swift_willThrow();
    return 0;
  }
  return v40;
}

id sub_1A08E73AC()
{
  v20[1] = *(id *)MEMORY[0x1E4F143B8];
  id v0 = objc_msgSend(self, sel_sharedInstance);
  id v1 = objc_msgSend(v0, sel_ctSubscriptionInfo);

  if (!v1) {
    return 0;
  }
  id v2 = objc_msgSend(v1, sel___im_subscriptionsWithRCSSupport);

  sub_1A078231C(0, (unint64_t *)&unk_1E94F7730);
  unint64_t v3 = sub_1A09F4078();

  if (v3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v18 = sub_1A09F47B8();
    swift_bridgeObjectRelease();
    if (v18) {
      goto LABEL_4;
    }
    goto LABEL_12;
  }
  if (!*(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_12:
    swift_bridgeObjectRelease();
    return 0;
  }
LABEL_4:
  if ((v3 & 0xC000000000000001) != 0)
  {
    id v4 = (id)MEMORY[0x1A6226890](0, v3);
  }
  else
  {
    if (!*(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      __break(1u);
    }
    id v4 = *(id *)(v3 + 32);
  }
  char v5 = v4;
  swift_bridgeObjectRelease();
  id v6 = (id)im_primary_queue();
  id v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F23A80]), sel_initWithQueue_, v6);

  id v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F23970]), sel_init);
  uint64_t v9 = (void *)sub_1A09F3DE8();
  objc_msgSend(v8, sel_setBase64String_, v9);

  v20[0] = 0;
  id v10 = objc_msgSend(v7, sel_decodeSuggestionsBase64_withBase64String_withError_, v5, v8, v20);
  if (v10)
  {
    id v11 = v20[0];
  }
  else
  {
    id v12 = v20[0];
    id v13 = (void *)sub_1A09F3258();

    swift_willThrow();
  }
  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  id v15 = objc_msgSend(v10, sel_chipList);
  uint64_t v16 = (void *)sub_1A09F3DE8();
  id v17 = objc_msgSend(ObjCClassFromMetadata, sel_IMChipListFromCTChipList_originalID_, v15, v16);

  return v17;
}

uint64_t sub_1A08E7700(void *a1)
{
  if (!a1) {
    return 0;
  }
  id v1 = a1;
  id v2 = objc_msgSend(v1, sel_list);
  if (!v2)
  {

    return 0;
  }
  unint64_t v3 = v2;
  sub_1A078231C(0, &qword_1E94FB970);
  unint64_t v4 = sub_1A09F4078();

  uint64_t v18 = MEMORY[0x1E4FBC860];
  if (!(v4 >> 62))
  {
    uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v5) {
      goto LABEL_5;
    }
LABEL_19:
    swift_bridgeObjectRelease();
LABEL_20:
    id v15 = objc_allocWithZone((Class)IMChipList);
    type metadata accessor for IMChip();
    uint64_t v16 = (void *)sub_1A09F4068();
    swift_bridgeObjectRelease();
    id v14 = objc_msgSend(v15, sel_initWithChipList_, v16);

    return (uint64_t)v14;
  }
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_1A09F47B8();
  swift_bridgeObjectRelease();
  if (!v5) {
    goto LABEL_19;
  }
LABEL_5:
  uint64_t result = swift_getObjCClassFromMetadata();
  if (v5 >= 1)
  {
    id v7 = (void *)result;
    id v17 = v1;
    for (uint64_t i = 0; i != v5; ++i)
    {
      if ((v4 & 0xC000000000000001) != 0) {
        id v10 = (id)MEMORY[0x1A6226890](i, v4);
      }
      else {
        id v10 = *(id *)(v4 + 8 * i + 32);
      }
      uint64_t v9 = v10;
      id v11 = (void *)sub_1A09F3DE8();
      id v12 = objc_msgSend(v7, sel_IMChipFromCTChip_originalID_, v9, v11);

      if (v12)
      {
        id v13 = v12;
        MEMORY[0x1A6226220]();
        if (*(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1A09F40A8();
        }
        sub_1A09F40D8();
        sub_1A09F4098();

        uint64_t v9 = v13;
      }
    }
    swift_bridgeObjectRelease();
    id v1 = v17;
    goto LABEL_20;
  }
  __break(1u);
  return result;
}

IMCTChatBotUtilities __swiftcall IMCTChatBotUtilities.init()()
{
  id v0 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());

  return (IMCTChatBotUtilities)objc_msgSend(v0, sel_init);
}

id IMCTChatBotUtilities.init()()
{
  v1.super_class = (Class)IMCTChatBotUtilities;
  return objc_msgSendSuper2(&v1, sel_init);
}

uint64_t type metadata accessor for IMCTChatBotUtilities(uint64_t a1)
{
  return sub_1A078231C(a1, &qword_1E94FB8F0);
}

id sub_1A08E7B28(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v9 = v8;
  if (a4)
  {
    id v14 = (void *)sub_1A09F3DE8();
    swift_bridgeObjectRelease();
    if (a6) {
      goto LABEL_3;
    }
LABEL_6:
    id v15 = 0;
    if (a8) {
      goto LABEL_4;
    }
LABEL_7:
    uint64_t v16 = 0;
    goto LABEL_8;
  }
  id v14 = 0;
  if (!a6) {
    goto LABEL_6;
  }
LABEL_3:
  id v15 = (void *)sub_1A09F3DE8();
  swift_bridgeObjectRelease();
  if (!a8) {
    goto LABEL_7;
  }
LABEL_4:
  uint64_t v16 = (void *)sub_1A09F3DE8();
  swift_bridgeObjectRelease();
LABEL_8:
  id v17 = objc_msgSend(v9, sel_initWithLatitude_longitude_query_label_fallbackUrl_, a1, a2, v14, v15, v16);

  return v17;
}

id sub_1A08E7C30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  id v12 = (void *)sub_1A09F3DE8();
  swift_bridgeObjectRelease();
  id v13 = (void *)sub_1A09F3DE8();
  swift_bridgeObjectRelease();
  id v14 = (void *)sub_1A09F3DE8();
  swift_bridgeObjectRelease();
  if (!a8)
  {
    id v15 = 0;
    if (a10) {
      goto LABEL_3;
    }
LABEL_5:
    uint64_t v16 = 0;
    goto LABEL_6;
  }
  id v15 = (void *)sub_1A09F3DE8();
  swift_bridgeObjectRelease();
  if (!a10) {
    goto LABEL_5;
  }
LABEL_3:
  uint64_t v16 = (void *)sub_1A09F3DE8();
  swift_bridgeObjectRelease();
LABEL_6:
  id v17 = objc_msgSend(v10, sel_initWithStartTime_endTime_title_calDescription_fallbackUrl_, v12, v13, v14, v15, v16);

  return v17;
}

id sub_1A08E7D54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9 = (void *)sub_1A09F3DE8();
  swift_bridgeObjectRelease();
  if (!a4)
  {
    id v10 = 0;
    if (a6) {
      goto LABEL_3;
    }
LABEL_5:
    id v11 = 0;
    goto LABEL_6;
  }
  id v10 = (void *)sub_1A09F3DE8();
  swift_bridgeObjectRelease();
  if (!a6) {
    goto LABEL_5;
  }
LABEL_3:
  id v11 = (void *)sub_1A09F3DE8();
  swift_bridgeObjectRelease();
LABEL_6:
  id v12 = objc_msgSend(v6, sel_initWithPhoneNumber_fallbackUrl_subject_, v9, v10, v11);

  return v12;
}

id sub_1A08E7E24(void *a1)
{
  id v1 = objc_msgSend(a1, sel_action);
  if (v1)
  {
    sub_1A09F4588();
    swift_unknownObjectRelease();
    sub_1A07825B4(v117, v118);
    sub_1A0785268((uint64_t)v118, (uint64_t)v117);
    sub_1A078231C(0, &qword_1E94FB908);
    if (swift_dynamicCast())
    {
      id v2 = v116;
      id v3 = objc_msgSend(v116, sel_mode);
      id v4 = [v116 url];
      uint64_t v5 = sub_1A09F33A8();
      uint64_t v6 = *(void *)(v5 - 8);
      MEMORY[0x1F4188790](v5);
      id v8 = (char *)&v113 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
      sub_1A09F3358();

      sub_1A09F32D8();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      id v9 = objc_msgSend(v2, sel_parameters);
      sub_1A09F3E18();

      id v10 = objc_allocWithZone((Class)IMActionOpenWeb);
      id v11 = (void *)sub_1A09F3DE8();
      swift_bridgeObjectRelease();
      id v12 = (void *)sub_1A09F3DE8();
      swift_bridgeObjectRelease();
      id v1 = objc_msgSend(v10, sel_initWithMode_url_parameters_, v3, v11, v12);

      _s17IMSharedUtilities29RemoteIntentBroadcastEncodingVwxx_0((uint64_t)v118);
LABEL_16:
      _s17IMSharedUtilities29RemoteIntentBroadcastEncodingVwxx_0((uint64_t)v117);
      return v1;
    }
    sub_1A078231C(0, &qword_1E94FB910);
    if (swift_dynamicCast())
    {
      id v13 = v116;
      id v14 = [v116 url];
      uint64_t v15 = sub_1A09F33A8();
      uint64_t v16 = *(void *)(v15 - 8);
      MEMORY[0x1F4188790](v15);
      uint64_t v18 = (char *)&v113 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
      sub_1A09F3358();

      sub_1A09F32D8();
      (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
      id v19 = objc_allocWithZone((Class)IMActionOpenApp);
      unint64_t v20 = (void *)sub_1A09F3DE8();
      swift_bridgeObjectRelease();
      id v1 = objc_msgSend(v19, sel_initWithUrl_, v20);

      _s17IMSharedUtilities29RemoteIntentBroadcastEncodingVwxx_0((uint64_t)v118);
      goto LABEL_16;
    }
    sub_1A078231C(0, &qword_1E94FB918);
    if (swift_dynamicCast())
    {
      id v21 = v116;
      id v22 = objc_msgSend(v116, sel_phoneNumber);
      sub_1A09F3E18();

      id v23 = objc_msgSend(v116, sel_text);
      sub_1A09F3E18();

      id v24 = objc_allocWithZone((Class)IMActionComposeText);
      unint64_t v25 = (void *)sub_1A09F3DE8();
      swift_bridgeObjectRelease();
      unint64_t v26 = (void *)sub_1A09F3DE8();
      swift_bridgeObjectRelease();
      id v27 = objc_msgSend(v24, sel_initWithPhoneNumber_text_, v25, v26);
LABEL_8:
      id v1 = v27;

LABEL_15:
      _s17IMSharedUtilities29RemoteIntentBroadcastEncodingVwxx_0((uint64_t)v118);
      goto LABEL_16;
    }
    sub_1A078231C(0, &qword_1E94FB920);
    if (swift_dynamicCast())
    {
      id v28 = v116;
      id v29 = objc_msgSend(v116, sel_phoneNumber);
      sub_1A09F3E18();

      id v30 = IMActionComposeAudio;
LABEL_13:
      id v32 = objc_allocWithZone((Class)v30);
      id v33 = (id)sub_1A09F3DE8();
      swift_bridgeObjectRelease();
      id v1 = objc_msgSend(v32, sel_initWithPhoneNumber_, v33);

LABEL_14:
      goto LABEL_15;
    }
    sub_1A078231C(0, &qword_1E94FB928);
    if (swift_dynamicCast())
    {
      id v28 = v116;
      id v31 = objc_msgSend(v116, sel_phoneNumber);
      sub_1A09F3E18();

      id v30 = IMActionComposeVideo;
      goto LABEL_13;
    }
    sub_1A078231C(0, &qword_1E94FB930);
    if (swift_dynamicCast())
    {
      id v33 = v116;
      id v35 = objc_msgSend(v116, sel_coordinates);
      if (v35)
      {
        unint64_t v36 = v35;
        id v37 = objc_msgSend(v35, sel_latitude);
      }
      else
      {
        id v37 = 0;
      }
      id v59 = objc_msgSend(v116, sel_coordinates);
      if (v59)
      {
        int v60 = v59;
        id v61 = objc_msgSend(v59, sel_longitude);
      }
      else
      {
        id v61 = 0;
      }
      id v62 = objc_msgSend(v116, sel_query);
      uint64_t v63 = v62;
      if (v62)
      {
        id v64 = objc_msgSend(v62, sel_query);

        if (v64)
        {
          uint64_t v63 = (void *)sub_1A09F3E18();
          uint64_t v66 = v65;

LABEL_39:
          id v72 = objc_msgSend(v116, sel_label);
          if (v72)
          {
            uint64_t v73 = v72;
            uint64_t v74 = sub_1A09F3E18();
            uint64_t v76 = v75;
          }
          else
          {
            uint64_t v74 = 0;
            uint64_t v76 = 0;
          }
          id v77 = objc_msgSend(v116, sel_fallbackUrl);
          if (v77)
          {
            long long v78 = v77;
            uint64_t v79 = sub_1A09F3E18();
            uint64_t v81 = v80;
          }
          else
          {
            uint64_t v79 = 0;
            uint64_t v81 = 0;
          }
          id v82 = objc_allocWithZone((Class)IMActionShowLocation);
          id v83 = sub_1A08E7B28(v37, v61, (uint64_t)v63, v66, v74, v76, v79, v81);
LABEL_69:
          id v1 = v83;
          goto LABEL_14;
        }
        uint64_t v63 = 0;
      }
      uint64_t v66 = 0;
      goto LABEL_39;
    }
    sub_1A078231C(0, &qword_1E94FB938);
    if (swift_dynamicCast())
    {
      id v38 = v116;
      id v39 = objc_msgSend(objc_allocWithZone((Class)IMActionRequestLocation), sel_initWithSendPush_, objc_msgSend(v116, sel_sendPush));
LABEL_23:
      id v1 = v39;

      goto LABEL_15;
    }
    sub_1A078231C(0, &qword_1E94FB940);
    if (swift_dynamicCast())
    {
      id v33 = v116;
      id v40 = objc_msgSend(v116, sel_event);
      id v41 = objc_msgSend(v40, sel_startTime);

      uint64_t v42 = sub_1A09F3E18();
      uint64_t v114 = v43;
      uint64_t v115 = v42;

      id v44 = objc_msgSend(v116, sel_event);
      id v45 = objc_msgSend(v44, sel_endTime);

      uint64_t v46 = sub_1A09F3E18();
      uint64_t v48 = v47;

      id v49 = objc_msgSend(v116, sel_event);
      id v50 = objc_msgSend(v49, sel_title);

      uint64_t v51 = sub_1A09F3E18();
      uint64_t v53 = v52;

      id v54 = objc_msgSend(v116, sel_event);
      id v55 = objc_msgSend(v54, sel_calDescription);

      if (v55)
      {
        uint64_t v56 = sub_1A09F3E18();
        uint64_t v58 = v57;
      }
      else
      {
        uint64_t v56 = 0;
        uint64_t v58 = 0;
      }
      id v93 = objc_msgSend(v116, sel_event);
      id v94 = objc_msgSend(v93, sel_fallbackUrl);

      if (v94)
      {
        uint64_t v95 = sub_1A09F3E18();
        uint64_t v97 = v96;
      }
      else
      {
        uint64_t v95 = 0;
        uint64_t v97 = 0;
      }
      id v98 = objc_allocWithZone((Class)IMActionCalendar);
      id v83 = sub_1A08E7C30(v115, v114, v46, v48, v51, v53, v56, v58, v95, v97);
      goto LABEL_69;
    }
    sub_1A078231C(0, &qword_1E94FB948);
    if (swift_dynamicCast())
    {
      id v21 = v116;
      id v67 = objc_msgSend(v116, sel_phoneNumber);
      sub_1A09F3E18();

      id v68 = objc_msgSend(v116, sel_fallbackUrl);
      if (v68)
      {
        uint64_t v69 = v68;
        sub_1A09F3E18();
        uint64_t v71 = v70;
      }
      else
      {
        uint64_t v71 = 0;
      }
      unint64_t v25 = (void *)sub_1A09F3DE8();
      swift_bridgeObjectRelease();
      if (v71)
      {
        unint64_t v26 = (void *)sub_1A09F3DE8();
        swift_bridgeObjectRelease();
      }
      else
      {
        unint64_t v26 = 0;
      }
      char v104 = IMActionDialVideo;
    }
    else
    {
      sub_1A078231C(0, &qword_1E94FB950);
      if (swift_dynamicCast())
      {
        id v33 = v116;
        id v84 = objc_msgSend(v116, sel_phoneNumber);
        uint64_t v85 = sub_1A09F3E18();
        uint64_t v87 = v86;

        id v88 = objc_msgSend(v116, sel_fallbackUrl);
        if (v88)
        {
          long long v89 = v88;
          uint64_t v90 = sub_1A09F3E18();
          uint64_t v92 = v91;
        }
        else
        {
          uint64_t v90 = 0;
          uint64_t v92 = 0;
        }
        id v107 = objc_msgSend(v116, sel_subject);
        if (v107)
        {
          char v108 = v107;
          uint64_t v109 = sub_1A09F3E18();
          uint64_t v111 = v110;
        }
        else
        {
          uint64_t v109 = 0;
          uint64_t v111 = 0;
        }
        id v112 = objc_allocWithZone((Class)IMActionDialEnriched);
        id v83 = sub_1A08E7D54(v85, v87, v90, v92, v109, v111);
        goto LABEL_69;
      }
      sub_1A078231C(0, &qword_1E94FB958);
      if (!swift_dynamicCast())
      {
        sub_1A078231C(0, &qword_1E94FB960);
        if (swift_dynamicCast())
        {
          id v38 = v116;
          id v105 = objc_msgSend(v116, sel_type);
          char v106 = IMActionDevice;
        }
        else
        {
          sub_1A078231C(0, &qword_1E94FB968);
          if (!swift_dynamicCast())
          {
            _s17IMSharedUtilities29RemoteIntentBroadcastEncodingVwxx_0((uint64_t)v118);
            _s17IMSharedUtilities29RemoteIntentBroadcastEncodingVwxx_0((uint64_t)v117);
            return 0;
          }
          id v38 = v116;
          id v105 = objc_msgSend(v116, sel_type);
          char v106 = IMActionSettings;
        }
        id v39 = objc_msgSend(objc_allocWithZone((Class)v106), sel_initWithType_, v105);
        goto LABEL_23;
      }
      id v21 = v116;
      id v99 = objc_msgSend(v116, sel_phoneNumber);
      sub_1A09F3E18();

      id v100 = objc_msgSend(v116, sel_fallbackUrl);
      if (v100)
      {
        char v101 = v100;
        sub_1A09F3E18();
        uint64_t v103 = v102;
      }
      else
      {
        uint64_t v103 = 0;
      }
      unint64_t v25 = (void *)sub_1A09F3DE8();
      swift_bridgeObjectRelease();
      if (v103)
      {
        unint64_t v26 = (void *)sub_1A09F3DE8();
        swift_bridgeObjectRelease();
      }
      else
      {
        unint64_t v26 = 0;
      }
      char v104 = IMActionDialPhone;
    }
    id v27 = objc_msgSend(objc_allocWithZone((Class)v104), sel_initWithPhoneNumber_fallbackUrl_, v25, v26);
    goto LABEL_8;
  }
  return v1;
}

id sub_1A08E8C28(void *a1)
{
  if (objc_msgSend(a1, sel_chip))
  {
    sub_1A09F4588();
    swift_unknownObjectRelease();
    sub_1A0875C10((uint64_t)v31, (uint64_t)v30);
    sub_1A078231C(0, &qword_1E94FB8F8);
    if (swift_dynamicCast())
    {
      id v2 = v29;
      id v3 = objc_msgSend(v29, sel_data);
      id v4 = objc_msgSend(v3, sel_displayText);

      sub_1A09F3E18();
      id v5 = objc_msgSend(v29, sel_data);
      id v6 = objc_msgSend(v5, sel_postback);

      if (v6)
      {
        id v7 = objc_msgSend(v6, sel_data);

        sub_1A09F3E18();
        id v6 = v8;
      }
      swift_bridgeObjectRetain();
      uint64_t v16 = (void *)sub_1A09F3DE8();
      swift_bridgeObjectRelease();
      if (v6)
      {
        uint64_t v17 = (void *)sub_1A09F3DE8();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v17 = 0;
      }
      id v18 = objc_allocWithZone((Class)IMChipSuggestion);
      id v19 = (void *)sub_1A09F3DE8();
      swift_bridgeObjectRelease();
      id v20 = objc_msgSend(v18, sel_initWithDisplayText_postback_inReplyToID_, v16, v17, v19);

      id v21 = objc_msgSend(objc_allocWithZone((Class)IMChipReply), sel_initWithSuggestion_, v20);
      id v22 = objc_msgSend(a1, sel_type);
LABEL_18:
      id v9 = objc_msgSend(objc_allocWithZone((Class)IMChip), sel_initWithType_chip_, v22, v21);

      _s17IMSharedUtilities29RemoteIntentBroadcastEncodingVwxx_0((uint64_t)v30);
      goto LABEL_19;
    }
    sub_1A078231C(0, &qword_1E94FB900);
    if (swift_dynamicCast())
    {
      id v2 = v29;
      id v10 = objc_msgSend(v29, sel_suggestion);
      id v11 = objc_msgSend(v10, sel_displayText);

      sub_1A09F3E18();
      id v12 = objc_msgSend(v29, sel_suggestion);
      id v13 = objc_msgSend(v12, sel_postback);

      if (v13)
      {
        id v14 = objc_msgSend(v13, sel_data);

        sub_1A09F3E18();
        id v13 = v15;
      }
      swift_bridgeObjectRetain();
      id v23 = (void *)sub_1A09F3DE8();
      swift_bridgeObjectRelease();
      if (v13)
      {
        id v24 = (void *)sub_1A09F3DE8();
        swift_bridgeObjectRelease();
      }
      else
      {
        id v24 = 0;
      }
      id v25 = objc_allocWithZone((Class)IMChipSuggestion);
      unint64_t v26 = (void *)sub_1A09F3DE8();
      swift_bridgeObjectRelease();
      id v27 = objc_msgSend(v25, sel_initWithDisplayText_postback_inReplyToID_, v23, v24, v26);

      id v21 = objc_msgSend(objc_allocWithZone((Class)IMChipAction), sel_initWithSuggestion_type_action_, v27, objc_msgSend(v29, sel_type), sub_1A08E7E24(v29));
      swift_unknownObjectRelease();
      id v22 = objc_msgSend(a1, sel_type);
      goto LABEL_18;
    }
    _s17IMSharedUtilities29RemoteIntentBroadcastEncodingVwxx_0((uint64_t)v30);
    id v9 = 0;
  }
  else
  {
    id v9 = 0;
    memset(v31, 0, sizeof(v31));
  }
LABEL_19:
  sub_1A0783C7C((uint64_t)v31);
  return v9;
}

uint64_t ProtectiveQueue.__allocating_init(label:qos:attributes:autoreleaseFrequency:target:initialState:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v14 = swift_allocObject();
  ProtectiveQueue.init(label:qos:attributes:autoreleaseFrequency:target:initialState:)(a1, a2, a3, a4, a5, a6, a7);
  return v14;
}

char *ProtectiveQueue.__allocating_init(underlyingQueue:initialState:)(uint64_t a1, uint64_t a2)
{
  id v4 = (char *)swift_allocObject();
  uint64_t v5 = *(void *)v4;
  *((void *)v4 + 2) = a1;
  (*(void (**)(char *, uint64_t))(*(void *)(*(void *)(v5 + 80) - 8) + 32))(&v4[*(void *)(v5 + 96)], a2);
  return v4;
}

char *ProtectiveQueue.init(underlyingQueue:initialState:)(uint64_t a1)
{
  uint64_t v2 = *(void *)v1;
  *((void *)v1 + 2) = a1;
  (*(void (**)(char *))(*(void *)(*(void *)(v2 + 80) - 8) + 32))(&v1[*(void *)(v2 + 96)]);
  return v1;
}

uint64_t ProtectiveQueue.sync<A>(flags:execute:)()
{
  return sub_1A09F43F8();
}

uint64_t sub_1A08E9310()
{
  return sub_1A08E9328();
}

uint64_t sub_1A08E9328()
{
  id v1 = *(void (**)(uint64_t))(v0 + 24);
  uint64_t v2 = *(void *)(v0 + 40) + *(void *)(**(void **)(v0 + 40) + 96);
  swift_beginAccess();
  v1(v2);
  return swift_endAccess();
}

uint64_t ProtectiveQueue.async(flags:execute:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v7 = (void *)swift_allocObject();
  _OWORD v7[2] = a2;
  v7[3] = a3;
  v7[4] = v3;
  aBlock[4] = sub_1A077DA70;
  aBlock[5] = v7;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A077DA28;
  aBlock[3] = &unk_1EF2C0FD8;
  id v8 = _Block_copy(aBlock);
  uint64_t v9 = sub_1A09F3A68();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  id v12 = (char *)aBlock - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  swift_retain();
  sub_1A09F3A58();
  MEMORY[0x1A62265E0](0, v12, a1, v8);
  _Block_release(v8);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  return swift_release();
}

uint64_t ProtectiveQueue.assertAccessAlreadyOnQueue<A>(execute:)(void (*a1)(char *))
{
  uint64_t v3 = sub_1A09F3AA8();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  id v6 = (uint64_t *)((char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  id v7 = (void *)v1[2];
  *id v6 = v7;
  (*(void (**)(void *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E4FBCBE8], v3);
  id v8 = v7;
  LOBYTE(v7) = sub_1A09F3AD8();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v4 + 8))(v6, v3);
  if (v7)
  {
    uint64_t v10 = (char *)v1 + *(void *)(*v1 + 96);
    swift_beginAccess();
    a1(v10);
    return swift_endAccess();
  }
  else
  {
    __break(1u);
  }
  return result;
}

id *ProtectiveQueue.deinit()
{
  id v1 = *v0;

  (*(void (**)(char *))(*(void *)(v1[10] - 8) + 8))((char *)v0 + *((void *)*v0 + 12));
  return v0;
}

uint64_t ProtectiveQueue.__deallocating_deinit()
{
  ProtectiveQueue.deinit();

  return swift_deallocClassInstance();
}

uint64_t method lookup function for ProtectiveQueue(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ProtectiveQueue);
}

uint64_t dispatch thunk of ProtectiveQueue.__allocating_init(label:qos:attributes:autoreleaseFrequency:target:initialState:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t dispatch thunk of ProtectiveQueue.__allocating_init(underlyingQueue:initialState:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t sub_1A08E98D0(uint64_t a1, uint64_t a2)
{
  if (!a2) {
    return 0;
  }
  swift_bridgeObjectRetain();
  id v5 = objc_msgSend(v2, sel_urlToTransferGuids);
  uint64_t v6 = sub_1A09F3D08();

  if (*(void *)(v6 + 16) && (unint64_t v7 = sub_1A087AAA4(a1, a2), (v8 & 1) != 0))
  {
    uint64_t v9 = *(void *)(*(void *)(v6 + 56) + 16 * v7);
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v9 = 0;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v9;
}

void __swiftcall IMUrlToTransferMap.init(dictionary:)(IMUrlToTransferMap_optional *__return_ptr retstr, Swift::OpaquePointer dictionary)
{
  id v2 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  uint64_t v3 = (void *)sub_1A09F3CE8();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_initWithDictionary_, v3);
}

id IMUrlToTransferMap.init(dictionary:)(uint64_t a1)
{
  id v2 = v1;
  uint64_t v4 = sub_1A09F3E18();
  if (!*(void *)(a1 + 16) || (unint64_t v6 = sub_1A087AAA4(v4, v5), (v7 & 1) == 0))
  {
    long long v12 = 0u;
    long long v13 = 0u;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  sub_1A0785268(*(void *)(a1 + 56) + 32 * v6, (uint64_t)&v12);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*((void *)&v13 + 1))
  {
LABEL_8:
    sub_1A0783C7C((uint64_t)&v12);
    goto LABEL_9;
  }
  sub_1A07856F8(&qword_1E94FAE48);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_9:
    swift_getObjectType();
    swift_deallocPartialClassInstance();
    return 0;
  }
  if (!*(void *)(v11 + 16))
  {
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  char v8 = (void *)sub_1A09F3CE8();
  swift_bridgeObjectRelease();
  id v9 = objc_msgSend(v2, sel_initWithUrlToTransferGuids_, v8);

  return v9;
}

id sub_1A08E9D90@<X0>(void *a1@<X8>)
{
  id v3 = objc_msgSend(v1, sel_dictionaryRepresentation);
  sub_1A09F3D08();

  id v4 = objc_allocWithZone((Class)IMUrlToTransferMap);
  uint64_t v5 = (void *)sub_1A09F3CE8();
  swift_bridgeObjectRelease();
  id v6 = objc_msgSend(v4, sel_initWithDictionary_, v5);

  id result = (id)sub_1A078231C(0, &qword_1E94FE660);
  a1[3] = result;
  if (!v6)
  {
    id result = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1CA98]), sel_init);
    id v6 = result;
  }
  *a1 = v6;
  return result;
}

void __swiftcall IMUrlToTransferMap.init()(IMUrlToTransferMap *__return_ptr retstr)
{
  id v1 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());

  objc_msgSend(v1, sel_init);
}

void IMUrlToTransferMap.init()()
{
}

uint64_t type metadata accessor for IMUrlToTransferMap(uint64_t a1)
{
  return sub_1A078231C(a1, &qword_1E94FB980);
}

uint64_t sub_1A08E9FB8()
{
  return 0x7265646E6573;
}

uint64_t sub_1A08E9FCC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x7265646E6573 && a2 == 0xE600000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1A09F4B28();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1A08EA05C(uint64_t a1)
{
  unint64_t v2 = sub_1A08EA534();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A08EA098(uint64_t a1)
{
  unint64_t v2 = sub_1A08EA534();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A08EA0D4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = sub_1A07856F8(&qword_1E94FB988);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  char v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A086F45C(a1, a1[3]);
  sub_1A08EA534();
  sub_1A09F4CA8();
  if (v2) {
    return _s17IMSharedUtilities29RemoteIntentBroadcastEncodingVwxx_0((uint64_t)a1);
  }
  uint64_t v9 = sub_1A09F4828();
  uint64_t v11 = v10;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t result = _s17IMSharedUtilities29RemoteIntentBroadcastEncodingVwxx_0((uint64_t)a1);
  *a2 = v9;
  a2[1] = v11;
  return result;
}

uint64_t sub_1A08EA24C(void *a1)
{
  uint64_t v2 = sub_1A07856F8(&qword_1E94FB998);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A086F45C(a1, a1[3]);
  sub_1A08EA534();
  sub_1A09F4CC8();
  sub_1A09F4978();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_1A08EA384(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = MEMORY[0x1E4FBC868];
  uint64_t v12 = MEMORY[0x1E4FBC868];
  *(void *)&long long v9 = 0x7265646E6573;
  *((void *)&v9 + 1) = 0xE600000000000000;
  uint64_t v5 = MEMORY[0x1E4FBB1A0];
  sub_1A09F4648();
  if (a2)
  {
    uint64_t v10 = v5;
    *(void *)&long long v9 = a1;
    *((void *)&v9 + 1) = a2;
    sub_1A07825B4(&v9, v8);
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_1A08D97F0(v8, (uint64_t)v11, isUniquelyReferenced_nonNull_native);
    swift_bridgeObjectRelease();
    sub_1A087B20C((uint64_t)v11);
  }
  else
  {
    sub_1A09ED5A4((uint64_t)v11, &v9);
    sub_1A087B20C((uint64_t)v11);
    sub_1A0783C7C((uint64_t)&v9);
    return v12;
  }
  return v4;
}

uint64_t getEnumTagSinglePayload for RemoteIntentGroupPhotoUpdateUserInfo(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for RemoteIntentGroupPhotoUpdateUserInfo(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RemoteIntentGroupPhotoUpdateUserInfo()
{
  return &type metadata for RemoteIntentGroupPhotoUpdateUserInfo;
}

unint64_t sub_1A08EA534()
{
  unint64_t result = qword_1E94FB990;
  if (!qword_1E94FB990)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FB990);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for RemoteIntentGroupPhotoUpdateUserInfo.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1A08EA624);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for RemoteIntentGroupPhotoUpdateUserInfo.CodingKeys()
{
  return &type metadata for RemoteIntentGroupPhotoUpdateUserInfo.CodingKeys;
}

unint64_t sub_1A08EA660()
{
  unint64_t result = qword_1E94FB9A0;
  if (!qword_1E94FB9A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FB9A0);
  }
  return result;
}

unint64_t sub_1A08EA6B8()
{
  unint64_t result = qword_1E94FB9A8;
  if (!qword_1E94FB9A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FB9A8);
  }
  return result;
}

unint64_t sub_1A08EA710()
{
  unint64_t result = qword_1E94FB9B0;
  if (!qword_1E94FB9B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FB9B0);
  }
  return result;
}

uint64_t sub_1A08EA764(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_1A09F41C8();
  uint64_t v6 = *(void *)(v5 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, 1, v5) != 1)
  {
    sub_1A09F41B8();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
    if (!*(void *)(a3 + 16)) {
      return swift_task_create();
    }
    goto LABEL_3;
  }
  sub_1A0784C08(a1, &qword_1EB4A5650);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_1A09F4108();
    swift_unknownObjectRelease();
  }
  return swift_task_create();
}

uint64_t sub_1A08EA8EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_1A09F41C8();
  uint64_t v6 = *(void *)(v5 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, 1, v5) != 1)
  {
    sub_1A09F41B8();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_1A0784C08(a1, &qword_1EB4A5650);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_1A09F4108();
    swift_unknownObjectRelease();
  }
LABEL_5:
  sub_1A07856F8(&qword_1E94FA830);
  return swift_task_create();
}

uint64_t sub_1A08EAA74()
{
  uint64_t v0 = sub_1A09F39E8();
  sub_1A078D848(v0, qword_1EB4A5660);
  sub_1A078510C(v0, (uint64_t)qword_1EB4A5660);
  return sub_1A09F39D8();
}

id sub_1A08EAAF4()
{
  id result = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for SafetyMonitorCoordinator()), sel_init);
  qword_1EB4A5688 = (uint64_t)result;
  return result;
}

id static SafetyMonitorCoordinator.shared.getter()
{
  if (qword_1EB4A5698 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)qword_1EB4A5688;

  return v0;
}

uint64_t sub_1A08EACD8()
{
  uint64_t v1 = sub_1A09F3E18();
  swift_bridgeObjectRetain();
  sub_1A09F3EA8();
  swift_bridgeObjectRelease();
  return v1;
}

unint64_t sub_1A08EADB4()
{
  return sub_1A08D7A5C((uint64_t)&unk_1EF2BDDB8);
}

void sub_1A08EADC0(uint64_t a1)
{
  uint64_t v2 = sub_1A07856F8(&qword_1EB4A5618);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  MEMORY[0x1F4188790](v2);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))((char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2);
  unint64_t v5 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v6 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v6 + v5, (char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v2);
  aBlock[4] = sub_1A08F1AC4;
  aBlock[5] = v6;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A08EB070;
  aBlock[3] = &unk_1EF2BE738;
  uint64_t v7 = _Block_copy(aBlock);
  swift_release();
  IMFetchSafetyMonitorHandleSuggestions(v7);
  _Block_release(v7);
}

uint64_t sub_1A08EAF50(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    if (qword_1EB4A5680 != -1) {
      swift_once();
    }
    uint64_t v1 = sub_1A09F39E8();
    sub_1A078510C(v1, (uint64_t)qword_1EB4A5660);
    uint64_t v2 = sub_1A09F39C8();
    os_log_type_t v3 = sub_1A09F4378();
    if (os_log_type_enabled(v2, v3))
    {
      uint64_t v4 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v4 = 0;
      _os_log_impl(&dword_1A0772000, v2, v3, "Got no preferred handles back from Safety Monitor", v4, 2u);
      MEMORY[0x1A6228C20](v4, -1, -1);
    }
  }
  swift_bridgeObjectRetain();
  sub_1A07856F8(&qword_1EB4A5618);
  return sub_1A09F4128();
}

uint64_t sub_1A08EB070(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  uint64_t v2 = sub_1A09F4078();
  swift_retain();
  v1(v2);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1A08EB114()
{
  uint64_t v1 = OBJC_IVAR___IMSafetyMonitorCoordinator_Impl_currentBestEstimates;
  unint64_t v2 = *(void *)(v0 + OBJC_IVAR___IMSafetyMonitorCoordinator_Impl_currentBestEstimates);
  if (!v2)
  {
    sub_1A08EB2C4();
    unint64_t v2 = *(void *)(v0 + v1);
    if (!v2) {
      return 0;
    }
  }
  if (v2 >> 62) {
    goto LABEL_23;
  }
  uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain_n();
  for (; v3; uint64_t v3 = sub_1A09F47B8())
  {
    uint64_t v4 = 4;
    while (1)
    {
      id v5 = (v2 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1A6226890](v4 - 4, v2) : *(id *)(v2 + 8 * v4);
      uint64_t v6 = v5;
      uint64_t v7 = v4 - 3;
      if (__OFADD__(v4 - 4, 1)) {
        break;
      }
      id v8 = objc_msgSend(v5, sel_countryCode);
      if (v8)
      {
        long long v9 = v8;
        uint64_t v10 = sub_1A09F3E18();
        uint64_t v12 = v11;

        if (v10 == 21067 && v12 == 0xE200000000000000)
        {
          swift_bridgeObjectRelease_n();

          uint64_t v3 = 1;
          goto LABEL_25;
        }
        char v14 = sub_1A09F4B28();

        swift_bridgeObjectRelease();
        if (v14)
        {
          swift_bridgeObjectRelease();
          uint64_t v3 = 1;
          goto LABEL_25;
        }
      }
      else
      {
      }
      ++v4;
      if (v7 == v3)
      {
        swift_bridgeObjectRelease();
        uint64_t v3 = 0;
        goto LABEL_25;
      }
    }
    __break(1u);
LABEL_23:
    swift_bridgeObjectRetain_n();
  }
  swift_bridgeObjectRelease();
LABEL_25:
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_1A08EB2C4()
{
  uint64_t v1 = v0;
  if (qword_1EB4A5680 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1A09F39E8();
  sub_1A078510C(v2, (uint64_t)qword_1EB4A5660);
  uint64_t v3 = sub_1A09F39C8();
  os_log_type_t v4 = sub_1A09F4358();
  if (os_log_type_enabled(v3, v4))
  {
    id v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v5 = 0;
    _os_log_impl(&dword_1A0772000, v3, v4, "Fetching Current Estimates from RD", v5, 2u);
    MEMORY[0x1A6228C20](v5, -1, -1);
  }

  id v6 = objc_msgSend(self, sel_currentEstimates);
  sub_1A078231C(0, qword_1EB4A56A0);
  unint64_t v7 = sub_1A09F4078();

  if (!(v7 >> 62))
  {
    if (!*(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  swift_bridgeObjectRetain();
  uint64_t v9 = sub_1A09F47B8();
  swift_bridgeObjectRelease();
  if (v9) {
LABEL_7:
  }
    *(void *)(v1 + OBJC_IVAR___IMSafetyMonitorCoordinator_Impl_currentBestEstimates) = v7;
LABEL_8:

  return swift_bridgeObjectRelease();
}

void sub_1A08EB45C()
{
  uint64_t v1 = v0;
  if (qword_1EB4A5680 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1A09F39E8();
  sub_1A078510C(v2, (uint64_t)qword_1EB4A5660);
  uint64_t v3 = sub_1A09F39C8();
  os_log_type_t v4 = sub_1A09F4358();
  if (os_log_type_enabled(v3, v4))
  {
    id v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v5 = 0;
    _os_log_impl(&dword_1A0772000, v3, v4, "Registering for Regulatory Domain Notifications", v5, 2u);
    MEMORY[0x1A6228C20](v5, -1, -1);
  }

  id v6 = CFNotificationCenterGetDarwinNotifyCenter();
  CFNotificationCenterAddObserver(v6, v1, (CFNotificationCallback)sub_1A08EB590, (CFStringRef)*MEMORY[0x1E4F948F0], 0, CFNotificationSuspensionBehaviorDeliverImmediately);
}

void sub_1A08EB590(void *a1, void *a2, void *a3, uint64_t a4, void *a5)
{
  id v8 = a1;
  id v9 = a3;
  id v10 = a5;
  sub_1A08F1098(a2, (uint64_t)a3);
}

uint64_t sub_1A08EB610(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = sub_1A07856F8(&qword_1EB4A5650);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1A09F41C8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 1, 1, v12);
  uint64_t v13 = (void *)swift_allocObject();
  long long v13[2] = 0;
  v13[3] = 0;
  v13[4] = v4;
  v13[5] = a1;
  v13[6] = a2;
  v13[7] = a3;
  v13[8] = a4;
  id v14 = v4;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1A08EA764((uint64_t)v11, (uint64_t)&unk_1E94FB9C8, (uint64_t)v13);
  return swift_release();
}

uint64_t sub_1A08EB740(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[5] = a7;
  v8[6] = a8;
  v8[3] = a5;
  v8[4] = a6;
  uint64_t v9 = (void *)swift_task_alloc();
  v8[7] = v9;
  uint64_t v10 = sub_1A07856F8(&qword_1EB4A5610);
  *uint64_t v9 = v8;
  v9[1] = sub_1A08EB82C;
  return MEMORY[0x1F4188160](v8 + 2, 0, 0, 0xD000000000000012, 0x80000001A0A34E40, sub_1A08EADC0, 0, v10);
}

uint64_t sub_1A08EB82C()
{
  *(void *)(*(void *)v1 + 64) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1A08EB9D0;
  }
  else {
    uint64_t v2 = sub_1A08EB940;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1A08EB940()
{
  uint64_t v1 = *(void (**)(void))(v0 + 40);
  char v2 = sub_1A078480C(*(void *)(v0 + 24), *(void *)(v0 + 32), *(void **)(v0 + 16));
  swift_bridgeObjectRelease();
  v1(v2 & 1);
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_1A08EB9D0()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1A08EB9EC(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = v1[7];
  uint64_t v10 = v1[8];
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v11;
  *uint64_t v11 = v2;
  v11[1] = sub_1A077EE54;
  return sub_1A08EB740(a1, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_1A08EBC58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v13 = sub_1A07856F8(&qword_1EB4A5650);
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v15 = (char *)&v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1A09F41C8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v15, 1, 1, v16);
  uint64_t v17 = (void *)swift_allocObject();
  v17[2] = 0;
  v17[3] = 0;
  v17[4] = v6;
  void v17[5] = a1;
  v17[6] = a2;
  v17[7] = a3;
  v17[8] = a4;
  v17[9] = a5;
  v17[10] = a6;
  id v18 = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1A08EA764((uint64_t)v15, (uint64_t)&unk_1E94FB9D8, (uint64_t)v17);
  return swift_release();
}

uint64_t sub_1A08EBDA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[15] = v13;
  v8[16] = v14;
  v8[13] = a7;
  v8[14] = a8;
  v8[11] = a5;
  v8[12] = a6;
  uint64_t v9 = (void *)swift_task_alloc();
  v8[17] = v9;
  uint64_t v10 = sub_1A07856F8(&qword_1EB4A5610);
  *uint64_t v9 = v8;
  v9[1] = sub_1A08EBE9C;
  return MEMORY[0x1F4188160](v8 + 10, 0, 0, 0xD000000000000012, 0x80000001A0A34E40, sub_1A08EADC0, 0, v10);
}

uint64_t sub_1A08EBE9C()
{
  *(void *)(*(void *)v1 + 144) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1A08EBFB0;
  }
  else {
    uint64_t v2 = sub_1A08EBFC8;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1A08EBFB0()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1A08EBFC8()
{
  uint64_t v2 = *(void *)(v0 + 104);
  uint64_t v1 = *(void *)(v0 + 112);
  long long v22 = *(_OWORD *)(v0 + 88);
  uint64_t v3 = *(void **)(v0 + 80);
  sub_1A07856F8(&qword_1E94FE520);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1A0A081A0;
  *(_OWORD *)(inited + 32) = v22;
  *(void *)(inited + 48) = v2;
  *(void *)(inited + 56) = v1;
  uint64_t v5 = v3[2];
  if (!v5)
  {
LABEL_24:
    char v11 = 0;
    goto LABEL_25;
  }
  if (v3[4] != *(void *)(v0 + 88) || v3[5] != *(void *)(v0 + 96))
  {
    uint64_t result = sub_1A09F4B28();
    if ((result & 1) == 0)
    {
      if (v5 != 1)
      {
        id v18 = v3 + 7;
        uint64_t v19 = 1;
        while (1)
        {
          uint64_t v20 = v19 + 1;
          if (__OFADD__(v19, 1)) {
            goto LABEL_37;
          }
          if (*(v18 - 1) == *(void *)(v0 + 88) && *v18 == *(void *)(v0 + 96)) {
            goto LABEL_7;
          }
          uint64_t result = sub_1A09F4B28();
          if (result) {
            goto LABEL_7;
          }
          char v11 = 0;
          ++v19;
          v18 += 2;
          if (v20 == v5) {
            goto LABEL_25;
          }
        }
      }
      goto LABEL_24;
    }
  }
LABEL_7:
  uint64_t v8 = *(void *)(inited + 48);
  uint64_t v9 = *(void *)(inited + 56);
  if (v3[4] == v8 && v3[5] == v9)
  {
LABEL_22:
    char v11 = 1;
  }
  else
  {
    uint64_t result = sub_1A09F4B28();
    char v11 = result;
    if (v5 != 1 && (result & 1) == 0)
    {
      uint64_t v12 = v3 + 7;
      uint64_t v13 = 1;
      while (1)
      {
        uint64_t v14 = v13 + 1;
        if (__OFADD__(v13, 1)) {
          break;
        }
        if (*(v12 - 1) == v8 && *v12 == v9) {
          goto LABEL_22;
        }
        uint64_t result = sub_1A09F4B28();
        if (result) {
          goto LABEL_22;
        }
        ++v13;
        v12 += 2;
        if (v14 == v5) {
          goto LABEL_24;
        }
      }
LABEL_37:
      __break(1u);
      return result;
    }
  }
LABEL_25:
  uint64_t v16 = *(void (**)(void))(v0 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v16(v11 & 1);
  uint64_t v17 = *(uint64_t (**)(void))(v0 + 8);
  return v17();
}

uint64_t sub_1A08EC1C0(uint64_t a1)
{
  uint64_t v4 = v1[3];
  uint64_t v12 = v1[2];
  uint64_t v5 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v7 = v1[6];
  uint64_t v8 = v1[7];
  uint64_t v9 = v1[8];
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *uint64_t v10 = v2;
  v10[1] = sub_1A077EE54;
  return sub_1A08EBDA4(a1, v12, v4, v5, v6, v7, v8, v9);
}

uint64_t sub_1A08EC474(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = (void *)sub_1A09F3308();
  uint64_t v6 = (void *)sub_1A09F3DE8();
  uint64_t v7 = IMShouldDropIncomingCheckInMessage(v5, v6, a4 & 1);

  return v7;
}

void sub_1A08EC624(void *a1, char a2, void *a3)
{
}

void sub_1A08EC6C8(void *a1)
{
  id v2 = objc_msgSend(a1, sel_balloonBundleID);
  if (!v2) {
    return;
  }
  uint64_t v3 = v2;
  uint64_t v4 = sub_1A09F3E18();
  uint64_t v6 = v5;

  id v7 = (id)IMBalloonExtensionIDWithSuffix(@"com.apple.SafetyMonitorApp.SafetyMonitorMessages");
  if (!v7) {
    goto LABEL_8;
  }
  uint64_t v8 = v7;
  uint64_t v9 = sub_1A09F3E18();
  uint64_t v11 = v10;

  if (v4 == v9 && v6 == v11)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v13 = sub_1A09F4B28();
    swift_bridgeObjectRelease();
    if ((v13 & 1) == 0)
    {
LABEL_8:
      swift_bridgeObjectRelease();
      return;
    }
  }
  id v14 = objc_msgSend(self, sel_sharedFeatureFlags);
  unsigned __int8 v15 = objc_msgSend(v14, sel_isZelkovaEnabled);
  swift_bridgeObjectRelease();

  if (v15)
  {
    uint64_t v16 = sub_1A09F33A8();
    uint64_t v17 = *(void *)(v16 - 8);
    MEMORY[0x1F4188790](v16);
    uint64_t v19 = (char *)v33 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v20 = sub_1A07856F8((uint64_t *)&unk_1EB4A5630);
    MEMORY[0x1F4188790](v20 - 8);
    long long v22 = (char *)v33 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_1A08EE2CC(a1, (uint64_t)v22);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v22, 1, v16) == 1)
    {
      sub_1A0784C08((uint64_t)v22, (uint64_t *)&unk_1EB4A5630);
      if (qword_1EB4A5680 != -1) {
        swift_once();
      }
      uint64_t v23 = sub_1A09F39E8();
      sub_1A078510C(v23, (uint64_t)qword_1EB4A5660);
      id v24 = a1;
      id v25 = sub_1A09F39C8();
      os_log_type_t v26 = sub_1A09F4378();
      if (os_log_type_enabled(v25, v26))
      {
        id v27 = (uint8_t *)swift_slowAlloc();
        id v28 = (void *)swift_slowAlloc();
        *(_DWORD *)id v27 = 138412290;
        v33[1] = v24;
        id v29 = v24;
        sub_1A09F4528();
        *id v28 = v24;

        _os_log_impl(&dword_1A0772000, v25, v26, "Failed to get URL from message %@. Not informing Safety Monitor Manager", v27, 0xCu);
        sub_1A07856F8(&qword_1E94F7740);
        swift_arrayDestroy();
        MEMORY[0x1A6228C20](v28, -1, -1);
        MEMORY[0x1A6228C20](v27, -1, -1);
      }
      else
      {
      }
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v19, v22, v16);
      id v30 = (void *)sub_1A09F3308();
      id v31 = objc_msgSend(a1, sel_sender);
      if (v31)
      {
        id v32 = v31;
        IMInformSafetyMonitorManagerOfIncomingMessage(v30, v31, (uint64_t)objc_msgSend(a1, sel_isFromMe));

        (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
      }
      else
      {
        __break(1u);
      }
    }
  }
}

void sub_1A08ECB88(unint64_t a1)
{
  unint64_t v35 = a1;
  if (a1 >> 62)
  {
LABEL_27:
    swift_bridgeObjectRetain();
    uint64_t v1 = sub_1A09F47B8();
    swift_bridgeObjectRelease();
    if (!v1) {
      return;
    }
  }
  else
  {
    uint64_t v1 = *(void *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v1) {
      return;
    }
  }
  uint64_t v41 = MEMORY[0x1E4FBC870];
  unint64_t v34 = v35 & 0xC000000000000001;
  swift_bridgeObjectRetain();
  uint64_t v2 = 4;
  do
  {
    uint64_t v3 = v2 - 4;
    if (v34)
    {
      id v4 = (id)MEMORY[0x1A6226890](v2 - 4, v35);
      uint64_t v5 = v2 - 3;
      if (__OFADD__(v3, 1)) {
        goto LABEL_26;
      }
    }
    else
    {
      id v4 = *(id *)(v35 + 8 * v2);
      uint64_t v5 = v2 - 3;
      if (__OFADD__(v3, 1))
      {
LABEL_26:
        __break(1u);
        goto LABEL_27;
      }
    }
    uint64_t v37 = v5;
    uint64_t v6 = v4;
    uint64_t v7 = sub_1A09F33A8();
    id v38 = &v34;
    uint64_t v8 = *(void *)(v7 - 8);
    uint64_t v9 = *(void *)(v8 + 64);
    MEMORY[0x1F4188790](v7);
    unint64_t v10 = (v9 + 15) & 0xFFFFFFFFFFFFFFF0;
    uint64_t v11 = (char *)&v34 - v10;
    uint64_t v12 = sub_1A07856F8((uint64_t *)&unk_1EB4A5630);
    MEMORY[0x1F4188790](v12 - 8);
    id v14 = (char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_1A08EE2CC(v6, (uint64_t)v14);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v14, 1, v7) == 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1A0784C08((uint64_t)v14, (uint64_t *)&unk_1EB4A5630);
      if (qword_1EB4A5680 != -1) {
        swift_once();
      }
      uint64_t v19 = sub_1A09F39E8();
      sub_1A078510C(v19, (uint64_t)qword_1EB4A5660);
      uint64_t v20 = v6;
      uint64_t v18 = sub_1A09F39C8();
      os_log_type_t v21 = sub_1A09F4378();
      if (os_log_type_enabled(v18, v21))
      {
        long long v22 = (uint8_t *)swift_slowAlloc();
        uint64_t v23 = (void *)swift_slowAlloc();
        *(_DWORD *)long long v22 = 138412290;
        id v40 = v20;
        id v24 = v20;
        sub_1A09F4528();
        *uint64_t v23 = v20;

        _os_log_impl(&dword_1A0772000, v18, v21, "Failed to get URL from message %@. Not informing Safety Monitor Manager", v22, 0xCu);
        sub_1A07856F8(&qword_1E94F7740);
        swift_arrayDestroy();
        MEMORY[0x1A6228C20](v23, -1, -1);
        MEMORY[0x1A6228C20](v22, -1, -1);
      }
      else
      {

        uint64_t v18 = v20;
      }

      goto LABEL_19;
    }
    uint64_t v15 = (*(uint64_t (**)(char *, char *, uint64_t))(v8 + 32))((char *)&v34 - v10, v14, v7);
    unint64_t v36 = &v34;
    uint64_t v16 = MEMORY[0x1F4188790](v15);
    MEMORY[0x1F4188790](v16);
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))((char *)&v34 - v10, v11, v7);
    sub_1A08EEF20((char *)&v34 - v10, (char *)&v34 - v10);

    uint64_t v17 = *(void (**)(char *, uint64_t))(v8 + 8);
    v17((char *)&v34 - v10, v7);
    v17(v11, v7);
    ++v2;
  }
  while (v37 != v1);
  swift_bridgeObjectRelease();
  if (*(void *)(v41 + 16))
  {
    sub_1A08DCF00(v41);
    swift_bridgeObjectRelease();
    uint64_t v18 = sub_1A09F4068();
    swift_release();
    IMInformSafetyMonitorManagerOfDeletedMessages(v18);
LABEL_19:

    return;
  }
  swift_bridgeObjectRelease();
  if (qword_1EB4A5680 != -1) {
    swift_once();
  }
  uint64_t v25 = sub_1A09F39E8();
  sub_1A078510C(v25, (uint64_t)qword_1EB4A5660);
  swift_bridgeObjectRetain_n();
  uint64_t v18 = sub_1A09F39C8();
  os_log_type_t v26 = sub_1A09F4378();
  if (os_log_type_enabled(v18, v26))
  {
    id v27 = (uint8_t *)swift_slowAlloc();
    uint64_t v28 = swift_slowAlloc();
    id v40 = v28;
    *(_DWORD *)id v27 = 136315138;
    uint64_t v29 = sub_1A078231C(0, (unint64_t *)&qword_1E94F9288);
    uint64_t v30 = swift_bridgeObjectRetain();
    uint64_t v31 = MEMORY[0x1A6226250](v30, v29);
    unint64_t v33 = v32;
    swift_bridgeObjectRelease();
    uint64_t v39 = sub_1A0785144(v31, v33, (uint64_t *)&v40);
    sub_1A09F4528();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A0772000, v18, v26, "Failed to get URL from any of the deleted messages %s. Not informing Safety Monitor Manager", v27, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1A6228C20](v28, -1, -1);
    MEMORY[0x1A6228C20](v27, -1, -1);
    goto LABEL_19;
  }

  swift_bridgeObjectRelease_n();
}

void sub_1A08ED26C(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    id v1 = (id)sub_1A09F4068();
    IMInformSafetyMonitorManagerOfDeletedConversation(v1);
  }
}

void sub_1A08ED36C(void *a1, char a2, void *a3)
{
}

void sub_1A08ED384(void *a1, char a2, void *a3, void (*a4)(void *, void *, void, void *))
{
  id v8 = objc_msgSend(a1, sel_balloonBundleID);
  if (!v8) {
    return;
  }
  uint64_t v9 = v8;
  uint64_t v10 = sub_1A09F3E18();
  uint64_t v12 = v11;

  id v13 = (id)IMBalloonExtensionIDWithSuffix(@"com.apple.SafetyMonitorApp.SafetyMonitorMessages");
  if (!v13) {
    goto LABEL_8;
  }
  id v14 = v13;
  uint64_t v15 = sub_1A09F3E18();
  uint64_t v17 = v16;

  if (v10 == v15 && v12 == v17)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v19 = sub_1A09F4B28();
    swift_bridgeObjectRelease();
    if ((v19 & 1) == 0)
    {
LABEL_8:
      swift_bridgeObjectRelease();
      return;
    }
  }
  id v20 = objc_msgSend(self, sel_sharedFeatureFlags);
  unsigned __int8 v21 = objc_msgSend(v20, sel_isZelkovaEnabled);
  swift_bridgeObjectRelease();

  if (v21)
  {
    uint64_t v22 = sub_1A09F33A8();
    uint64_t v23 = *(void *)(v22 - 8);
    MEMORY[0x1F4188790](v22);
    uint64_t v25 = (char *)v39 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v26 = sub_1A07856F8((uint64_t *)&unk_1EB4A5630);
    MEMORY[0x1F4188790](v26 - 8);
    uint64_t v28 = (char *)v39 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_1A08EE2CC(a1, (uint64_t)v28);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v28, 1, v22) == 1)
    {
      sub_1A0784C08((uint64_t)v28, (uint64_t *)&unk_1EB4A5630);
      if (qword_1EB4A5680 != -1) {
        swift_once();
      }
      uint64_t v29 = sub_1A09F39E8();
      sub_1A078510C(v29, (uint64_t)qword_1EB4A5660);
      id v30 = a1;
      uint64_t v31 = sub_1A09F39C8();
      os_log_type_t v32 = sub_1A09F4378();
      if (os_log_type_enabled(v31, v32))
      {
        unint64_t v33 = (uint8_t *)swift_slowAlloc();
        unint64_t v34 = (void *)swift_slowAlloc();
        *(_DWORD *)unint64_t v33 = 138412290;
        v39[1] = v30;
        id v35 = v30;
        sub_1A09F4528();
        *unint64_t v34 = v30;

        _os_log_impl(&dword_1A0772000, v31, v32, "Failed to get URL from message %@. Not informing Safety Monitor Manager", v33, 0xCu);
        sub_1A07856F8(&qword_1E94F7740);
        swift_arrayDestroy();
        MEMORY[0x1A6228C20](v34, -1, -1);
        MEMORY[0x1A6228C20](v33, -1, -1);
      }
      else
      {
      }
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v25, v28, v22);
      unint64_t v36 = (void *)sub_1A09F3308();
      id v37 = objc_msgSend(a1, sel_guid);
      if (v37)
      {
        id v38 = v37;
        if (a3) {
          a3 = (void *)sub_1A09F3248();
        }
        a4(v36, v38, a2 & 1, a3);

        (*(void (**)(char *, uint64_t))(v23 + 8))(v25, v22);
      }
      else
      {
        __break(1u);
      }
    }
  }
}

void sub_1A08ED880(void *a1, char a2, void *a3)
{
  if (a3) {
    a3 = (void *)sub_1A09F3248();
  }
  id v5 = a3;
  IMInformSafetyMonitorManagerOfScheduledSendCancelledFor(a1, a2 & 1, a3);
}

void sub_1A08ED9CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
}

uint64_t sub_1A08ED9EC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v3(a2);

  return swift_release();
}

void sub_1A08EDBAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
}

void sub_1A08EDBCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void (*a8)(void *, void *, void *))
{
  uint64_t v12 = (void *)sub_1A09F3DE8();
  id v13 = (void *)sub_1A09F3DE8();
  v15[4] = a5;
  void v15[5] = a6;
  v15[0] = MEMORY[0x1E4F143A8];
  v15[1] = 1107296256;
  _OWORD v15[2] = sub_1A08ED9EC;
  v15[3] = a7;
  id v14 = _Block_copy(v15);
  swift_retain();
  swift_release();
  a8(v12, v13, v14);
  _Block_release(v14);
}

uint64_t sub_1A08EDE28(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  uint64_t v6 = (void *)sub_1A09F3DE8();
  uint64_t v7 = IMPopulateNotificationUserInfoForCheckIn(a4, v6, a3);

  return v7;
}

void sub_1A08EDF18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v10 = (void *)sub_1A09F3DE8();
  uint64_t v11 = (void *)sub_1A09F3DE8();
  uint64_t v12 = (void *)sub_1A09F3DE8();
  v14[4] = a7;
  void v14[5] = a8;
  v14[0] = MEMORY[0x1E4F143A8];
  v14[1] = 1107296256;
  void v14[2] = sub_1A08EE024;
  v14[3] = &unk_1EF2BE5F8;
  id v13 = _Block_copy(v14);
  swift_retain();
  swift_release();
  IMRespondToNotificationWithIdentifier(v10, v11, v12, v13);
  _Block_release(v13);
}

void sub_1A08EE024(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void (**)(void *))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3(a2);
  swift_release();
}

void sub_1A08EE238(uint64_t a1, uint64_t a2)
{
  if (a1) {
    uint64_t v3 = sub_1A09F3248();
  }
  else {
    uint64_t v3 = 0;
  }
  id v4 = (id)v3;
  (*(void (**)(uint64_t))(a2 + 16))(a2);
}

uint64_t sub_1A08EE2CC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  v55[4] = *(id *)MEMORY[0x1E4F143B8];
  id v4 = objc_msgSend(a1, sel_balloonBundleID);
  if (v4)
  {
    id v5 = v4;
    uint64_t v6 = sub_1A09F3E18();
    uint64_t v8 = v7;

    id v9 = (id)IMBalloonExtensionIDWithSuffix(@"com.apple.SafetyMonitorApp.SafetyMonitorMessages");
    if (!v9)
    {
LABEL_8:
      swift_bridgeObjectRelease();
      goto LABEL_17;
    }
    uint64_t v10 = v9;
    uint64_t v11 = sub_1A09F3E18();
    uint64_t v13 = v12;

    if (v6 == v11 && v8 == v13)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      char v15 = sub_1A09F4B28();
      swift_bridgeObjectRelease();
      if ((v15 & 1) == 0) {
        goto LABEL_8;
      }
    }
    id v16 = objc_msgSend(self, sel_sharedFeatureFlags);
    unsigned int v17 = objc_msgSend(v16, sel_isZelkovaEnabled);
    swift_bridgeObjectRelease();

    if (v17)
    {
      id v18 = (id)IMExtensionPayloadUnarchivingClasses();
      if (v18)
      {
        char v19 = v18;
        sub_1A09F42B8();

        id v20 = objc_msgSend(a1, sel_payloadData);
        if (v20)
        {
          unsigned __int8 v21 = v20;
          uint64_t v22 = sub_1A09F33E8();
          unint64_t v24 = v23;

          uint64_t v25 = self;
          uint64_t v26 = (void *)sub_1A09F4298();
          swift_bridgeObjectRelease();
          uint64_t v27 = (void *)sub_1A09F33D8();
          v55[0] = 0;
          id v28 = objc_msgSend(v25, sel_unarchivedObjectOfClasses_fromData_error_, v26, v27, v55);

          if (v28)
          {
            id v29 = v55[0];
            sub_1A09F4588();
            swift_unknownObjectRelease();
            sub_1A078231C(0, (unint64_t *)&unk_1EB4A5B98);
            if (swift_dynamicCast())
            {
              id v30 = *(void **)&v54[0];
              uint64_t v31 = sub_1A07856F8((uint64_t *)&unk_1EB4A5630);
              MEMORY[0x1F4188790](v31 - 8);
              unint64_t v33 = (char *)v54 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
              if (objc_msgSend(*(id *)&v54[0], sel_objectForKey_, @"URL"))
              {
                sub_1A09F4588();
                sub_1A08AF2E4(v22, v24);

                swift_unknownObjectRelease();
              }
              else
              {
                sub_1A08AF2E4(v22, v24);

                memset(v54, 0, sizeof(v54));
              }
              sub_1A0784BA0((uint64_t)v54, (uint64_t)v55);
              if (v55[3])
              {
                uint64_t v49 = sub_1A09F33A8();
                int v50 = swift_dynamicCast();
                uint64_t v51 = *(void *)(v49 - 8);
                uint64_t v52 = *(void (**)(char *, void, uint64_t, uint64_t))(v51 + 56);
                v52(v33, v50 ^ 1u, 1, v49);
                if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v51 + 48))(v33, 1, v49) != 1)
                {
                  (*(void (**)(uint64_t, char *, uint64_t))(v51 + 32))(a2, v33, v49);
                  return ((uint64_t (*)(uint64_t, void, uint64_t, uint64_t))v52)(a2, 0, 1, v49);
                }
              }
              else
              {
                sub_1A0784C08((uint64_t)v55, &qword_1EB4A58F0);
                uint64_t v49 = sub_1A09F33A8();
                (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v49 - 8) + 56))(v33, 1, 1, v49);
              }
              sub_1A0784C08((uint64_t)v33, (uint64_t *)&unk_1EB4A5630);
              sub_1A09F33A8();
              return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v49 - 8) + 56))(a2, 1, 1, v49);
            }
            sub_1A08AF2E4(v22, v24);
          }
          else
          {
            id v37 = v55[0];
            id v38 = (void *)sub_1A09F3258();

            swift_willThrow();
            sub_1A08AF2E4(v22, v24);
            if (qword_1EB4A5680 != -1) {
              swift_once();
            }
            uint64_t v39 = sub_1A09F39E8();
            sub_1A078510C(v39, (uint64_t)qword_1EB4A5660);
            id v40 = v38;
            id v41 = v38;
            uint64_t v42 = sub_1A09F39C8();
            os_log_type_t v43 = sub_1A09F4378();
            if (os_log_type_enabled(v42, v43))
            {
              id v44 = (uint8_t *)swift_slowAlloc();
              id v45 = (void *)swift_slowAlloc();
              *(_DWORD *)id v44 = 138412290;
              id v46 = v38;
              uint64_t v47 = (void *)_swift_stdlib_bridgeErrorToNSError();
              v55[0] = v47;
              sub_1A09F4528();
              *id v45 = v47;

              _os_log_impl(&dword_1A0772000, v42, v43, "Failed to decode URL from message %@", v44, 0xCu);
              sub_1A07856F8(&qword_1E94F7740);
              swift_arrayDestroy();
              MEMORY[0x1A6228C20](v45, -1, -1);
              MEMORY[0x1A6228C20](v44, -1, -1);
            }
            else
            {
            }
          }
        }
        else
        {
          swift_bridgeObjectRelease();
        }
      }
      uint64_t v48 = sub_1A09F33A8();
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v48 - 8) + 56))(a2, 1, 1, v48);
    }
  }
LABEL_17:
  uint64_t v34 = sub_1A09F33A8();
  id v35 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56);

  return v35(a2, 1, 1, v34);
}

id SafetyMonitorCoordinator.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SafetyMonitorCoordinator();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1A08EEA78(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *v3;
  sub_1A09F4C48();
  swift_bridgeObjectRetain();
  sub_1A09F3DA8();
  uint64_t v8 = sub_1A09F4C88();
  uint64_t v9 = -1 << *(unsigned char *)(v7 + 32);
  unint64_t v10 = v8 & ~v9;
  if ((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10))
  {
    uint64_t v11 = *(void *)(v7 + 48);
    uint64_t v12 = (void *)(v11 + 16 * v10);
    BOOL v13 = *v12 == a2 && v12[1] == a3;
    if (v13 || (sub_1A09F4B28() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      id v14 = (uint64_t *)(*(void *)(*v3 + 48) + 16 * v10);
      uint64_t v15 = v14[1];
      *a1 = *v14;
      a1[1] = v15;
      swift_bridgeObjectRetain();
      return 0;
    }
    uint64_t v17 = ~v9;
    while (1)
    {
      unint64_t v10 = (v10 + 1) & v17;
      if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
        break;
      }
      id v18 = (void *)(v11 + 16 * v10);
      BOOL v19 = *v18 == a2 && v18[1] == a3;
      if (v19 || (sub_1A09F4B28() & 1) != 0) {
        goto LABEL_7;
      }
    }
  }
  swift_bridgeObjectRelease();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v21 = *v3;
  *uint64_t v3 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  sub_1A08EFCD4(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  *uint64_t v3 = v21;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t sub_1A08EEC28(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0) {
      uint64_t v7 = *v2;
    }
    else {
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFF8;
    }
    swift_bridgeObjectRetain();
    swift_retain();
    uint64_t v8 = sub_1A09F4608();
    swift_release();
    if (v8)
    {
      swift_bridgeObjectRelease();
      swift_release();
      type metadata accessor for RemoteIntentFileMirrorRequestTask();
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v25;
      swift_unknownObjectRelease();
      return 0;
    }
    uint64_t result = sub_1A09F45F8();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    uint64_t v13 = sub_1A08EF248(v7, result + 1);
    uint64_t v26 = v13;
    if (*(void *)(v13 + 24) <= *(void *)(v13 + 16))
    {
      swift_retain();
      sub_1A08EF644();
      uint64_t v14 = v26;
    }
    else
    {
      uint64_t v14 = v13;
      swift_retain();
    }
    sub_1A08EFBD0(a2, v14);
    *uint64_t v3 = v14;
  }
  else
  {
    sub_1A09F4C48();
    uint64_t v9 = *(void *)(a2 + 16);
    sub_1A09F4C58();
    uint64_t v10 = *(void *)(v9 + 16);
    if (v10)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v11 = v9 + 40;
      do
      {
        swift_bridgeObjectRetain();
        sub_1A09F3DA8();
        swift_bridgeObjectRelease();
        v11 += 16;
        --v10;
      }
      while (v10);
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRetain();
    }
    uint64_t v15 = sub_1A09F4C88();
    uint64_t v16 = -1 << *(unsigned char *)(v6 + 32);
    unint64_t v17 = v15 & ~v16;
    if ((*(void *)(v6 + 56 + ((v17 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v17))
    {
      uint64_t v18 = swift_retain();
      BOOL v19 = sub_1A09CB27C(v18, a2);
      swift_release();
      if (v19)
      {
LABEL_20:
        swift_release();
        swift_bridgeObjectRelease();
        *a1 = *(void *)(*(void *)(*v2 + 48) + 8 * v17);
        swift_retain();
        return 0;
      }
      uint64_t v20 = ~v16;
      while (1)
      {
        unint64_t v17 = (v17 + 1) & v20;
        if (((*(void *)(v6 + 56 + ((v17 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v17) & 1) == 0) {
          break;
        }
        uint64_t v21 = swift_retain();
        BOOL v22 = sub_1A09CB27C(v21, a2);
        swift_release();
        if (v22) {
          goto LABEL_20;
        }
      }
    }
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v27 = *v2;
    *objc_super v2 = 0x8000000000000000;
    uint64_t v24 = swift_retain();
    sub_1A08EFE70(v24, v17, isUniquelyReferenced_nonNull_native);
    *objc_super v2 = v27;
  }
  swift_bridgeObjectRelease();
  *a1 = a2;
  return 1;
}

uint64_t sub_1A08EEF20(char *a1, char *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  uint64_t v7 = sub_1A09F33A8();
  sub_1A087B3D8(&qword_1E94F9198);
  swift_bridgeObjectRetain();
  id v37 = a2;
  uint64_t v8 = sub_1A09F3D78();
  uint64_t v9 = -1 << *(unsigned char *)(v6 + 32);
  unint64_t v10 = v8 & ~v9;
  uint64_t v34 = v6 + 56;
  uint64_t v11 = v7 - 8;
  if ((*(void *)(v6 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10))
  {
    id v30 = v2;
    uint64_t v31 = a1;
    uint64_t v32 = ~v9;
    uint64_t v12 = *(void **)v11;
    v28[1] = v11 & 0xFFFFFFFFFFFFLL | 0x2E3F000000000000;
    id v29 = v12;
    uint64_t v13 = (void (*)(char *, unint64_t, uint64_t))v12[2];
    id v35 = v12 + 2;
    unint64_t v36 = v13;
    uint64_t v14 = v12[8];
    uint64_t v33 = v12[9];
    uint64_t v15 = (uint64_t (**)(char *, uint64_t))(v12 + 1);
    while (1)
    {
      MEMORY[0x1F4188790](v8);
      uint64_t v16 = v6;
      uint64_t v17 = *(void *)(v6 + 48);
      unint64_t v18 = v33 * v10;
      v36((char *)v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), v17 + v33 * v10, v7);
      sub_1A087B3D8(&qword_1E94F91A0);
      char v19 = sub_1A09F3DD8();
      uint64_t v20 = *v15;
      uint64_t v8 = (*v15)((char *)v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), v7);
      if (v19) {
        break;
      }
      unint64_t v10 = (v10 + 1) & v32;
      uint64_t v6 = v16;
      if (((*(void *)(v34 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v3 = v30;
        a1 = v31;
        uint64_t v21 = v29;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v20(v37, v7);
    v36(v31, *(void *)(*v30 + 48) + v18, v7);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v21 = *(void **)v11;
LABEL_7:
    uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    char v23 = isUniquelyReferenced_nonNull_native;
    MEMORY[0x1F4188790](isUniquelyReferenced_nonNull_native);
    uint64_t v25 = (char *)v28 - v24;
    uint64_t v26 = v37;
    ((void (*)(char *, char *, uint64_t))v21[2])((char *)v28 - v24, v37, v7);
    uint64_t v38 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_1A08F004C((uint64_t)v25, v10, v23);
    *uint64_t v3 = v38;
    swift_bridgeObjectRelease();
    ((void (*)(char *, char *, uint64_t))v21[4])(a1, v26, v7);
    return 1;
  }
}

uint64_t sub_1A08EF248(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    sub_1A07856F8(&qword_1E94FB9F8);
    uint64_t v2 = sub_1A09F4688();
    uint64_t v5 = v2;
    sub_1A09F45E8();
    if (sub_1A09F4618())
    {
      type metadata accessor for RemoteIntentFileMirrorRequestTask();
      do
      {
        swift_dynamicCast();
        uint64_t v2 = v5;
        if (*(void *)(v5 + 24) <= *(void *)(v5 + 16))
        {
          sub_1A08EF644();
          uint64_t v2 = v5;
        }
        sub_1A08EFBD0(v4, v2);
      }
      while (sub_1A09F4618());
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return MEMORY[0x1E4FBC870];
  }
  return v2;
}

uint64_t sub_1A08EF364()
{
  id v1 = v0;
  uint64_t v2 = *v0;
  sub_1A07856F8(&qword_1E94F7600);
  uint64_t v3 = sub_1A09F4678();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    id v30 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v8 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v9 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v11 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v14 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v15 = v14 | (v11 << 6);
      }
      else
      {
        int64_t v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v8) {
          goto LABEL_33;
        }
        unint64_t v17 = v30[v16];
        ++v11;
        if (!v17)
        {
          int64_t v11 = v16 + 1;
          if (v16 + 1 >= v8) {
            goto LABEL_33;
          }
          unint64_t v17 = v30[v11];
          if (!v17)
          {
            int64_t v11 = v16 + 2;
            if (v16 + 2 >= v8) {
              goto LABEL_33;
            }
            unint64_t v17 = v30[v11];
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v8)
              {
LABEL_33:
                swift_release();
                id v1 = v0;
                uint64_t v29 = 1 << *(unsigned char *)(v2 + 32);
                if (v29 > 63) {
                  bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *id v30 = -1 << v29;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v17 = v30[v18];
              if (!v17)
              {
                while (1)
                {
                  int64_t v11 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_39;
                  }
                  if (v11 >= v8) {
                    goto LABEL_33;
                  }
                  unint64_t v17 = v30[v11];
                  ++v18;
                  if (v17) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v11 = v18;
            }
          }
        }
LABEL_23:
        unint64_t v7 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
      }
      char v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
      uint64_t v20 = *v19;
      uint64_t v21 = v19[1];
      sub_1A09F4C48();
      sub_1A09F3DA8();
      uint64_t result = sub_1A09F4C88();
      uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v27 = v24 == v26;
          if (v24 == v26) {
            unint64_t v24 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v9 + 8 * v24);
        }
        while (v28 == -1);
        unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      uint64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
      *uint64_t v13 = v20;
      v13[1] = v21;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *id v1 = v4;
  return result;
}

unint64_t sub_1A08EF644()
{
  id v1 = v0;
  uint64_t v2 = *v0;
  sub_1A07856F8(&qword_1E94FB9F8);
  uint64_t v3 = sub_1A09F4678();
  if (*(void *)(v2 + 16))
  {
    uint64_t v4 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v5 = (void *)(v2 + 56);
    uint64_t v6 = -1;
    if (v4 < 64) {
      uint64_t v6 = ~(-1 << v4);
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v8 = (unint64_t)(v4 + 63) >> 6;
    unint64_t result = swift_retain();
    int64_t v10 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v11 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v12 = v11 | (v10 << 6);
      }
      else
      {
        int64_t v13 = v10 + 1;
        if (__OFADD__(v10, 1))
        {
          __break(1u);
LABEL_28:
          __break(1u);
          return result;
        }
        if (v13 >= v8) {
          goto LABEL_22;
        }
        unint64_t v14 = v5[v13];
        ++v10;
        if (!v14)
        {
          int64_t v10 = v13 + 1;
          if (v13 + 1 >= v8) {
            goto LABEL_22;
          }
          unint64_t v14 = v5[v10];
          if (!v14)
          {
            int64_t v10 = v13 + 2;
            if (v13 + 2 >= v8) {
              goto LABEL_22;
            }
            unint64_t v14 = v5[v10];
            if (!v14)
            {
              int64_t v15 = v13 + 3;
              if (v15 >= v8)
              {
LABEL_22:
                swift_release();
                uint64_t v16 = 1 << *(unsigned char *)(v2 + 32);
                if (v16 > 63) {
                  bzero((void *)(v2 + 56), ((unint64_t)(v16 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v5 = -1 << v16;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v14 = v5[v15];
              if (!v14)
              {
                while (1)
                {
                  int64_t v10 = v15 + 1;
                  if (__OFADD__(v15, 1)) {
                    goto LABEL_28;
                  }
                  if (v10 >= v8) {
                    goto LABEL_22;
                  }
                  unint64_t v14 = v5[v10];
                  ++v15;
                  if (v14) {
                    goto LABEL_21;
                  }
                }
              }
              int64_t v10 = v15;
            }
          }
        }
LABEL_21:
        unint64_t v7 = (v14 - 1) & v14;
        unint64_t v12 = __clz(__rbit64(v14)) + (v10 << 6);
      }
      unint64_t result = sub_1A08EFBD0(*(void *)(*(void *)(v2 + 48) + 8 * v12), v3);
    }
  }
  unint64_t result = swift_release();
  *id v1 = v3;
  return result;
}

uint64_t sub_1A08EF810()
{
  id v1 = v0;
  uint64_t v2 = *v0;
  sub_1A07856F8(&qword_1E94FB9F0);
  uint64_t v3 = sub_1A09F4678();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v6 = *(void *)(v2 + 56);
    uint64_t v38 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v7 = ~(-1 << v5);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v8 = v7 & v6;
    unint64_t v36 = v0;
    int64_t v37 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v9 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v11 = 0;
    while (1)
    {
      if (v8)
      {
        unint64_t v13 = __clz(__rbit64(v8));
        v8 &= v8 - 1;
        int64_t v40 = v11;
        unint64_t v14 = v13 | (v11 << 6);
      }
      else
      {
        int64_t v15 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v37) {
          goto LABEL_33;
        }
        unint64_t v16 = v38[v15];
        int64_t v17 = v11 + 1;
        if (!v16)
        {
          int64_t v17 = v11 + 2;
          if (v11 + 2 >= v37) {
            goto LABEL_33;
          }
          unint64_t v16 = v38[v17];
          if (!v16)
          {
            int64_t v17 = v11 + 3;
            if (v11 + 3 >= v37) {
              goto LABEL_33;
            }
            unint64_t v16 = v38[v17];
            if (!v16)
            {
              uint64_t v18 = v11 + 4;
              if (v11 + 4 >= v37)
              {
LABEL_33:
                swift_release();
                id v1 = v36;
                uint64_t v34 = 1 << *(unsigned char *)(v2 + 32);
                if (v34 > 63) {
                  bzero(v38, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v38 = -1 << v34;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v16 = v38[v18];
              if (!v16)
              {
                while (1)
                {
                  int64_t v17 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_39;
                  }
                  if (v17 >= v37) {
                    goto LABEL_33;
                  }
                  unint64_t v16 = v38[v17];
                  ++v18;
                  if (v16) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v17 = v11 + 4;
            }
          }
        }
LABEL_23:
        unint64_t v8 = (v16 - 1) & v16;
        int64_t v40 = v17;
        unint64_t v14 = __clz(__rbit64(v16)) + (v17 << 6);
      }
      uint64_t v19 = sub_1A09F33A8();
      uint64_t v39 = &v35;
      uint64_t v20 = *(void *)(v19 - 8);
      MEMORY[0x1F4188790](v19);
      uint64_t v22 = (char *)&v35 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
      uint64_t v23 = v2;
      uint64_t v24 = *(void *)(v2 + 48);
      char v25 = *(void (**)(char *, unint64_t, uint64_t))(v20 + 32);
      uint64_t v26 = *(void *)(v20 + 72);
      v25(v22, v24 + v26 * v14, v19);
      sub_1A087B3D8(&qword_1E94F9198);
      uint64_t result = sub_1A09F3D78();
      uint64_t v27 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v28 = result & ~v27;
      unint64_t v29 = v28 >> 6;
      if (((-1 << v28) & ~*(void *)(v9 + 8 * (v28 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v28) & ~*(void *)(v9 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v30 = 0;
        unint64_t v31 = (unint64_t)(63 - v27) >> 6;
        do
        {
          if (++v29 == v31 && (v30 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v32 = v29 == v31;
          if (v29 == v31) {
            unint64_t v29 = 0;
          }
          v30 |= v32;
          uint64_t v33 = *(void *)(v9 + 8 * v29);
        }
        while (v33 == -1);
        unint64_t v12 = __clz(__rbit64(~v33)) + (v29 << 6);
      }
      *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v25)(*(void *)(v4 + 48) + v12 * v26, v22, v19);
      ++*(void *)(v4 + 16);
      int64_t v11 = v40;
      uint64_t v2 = v23;
    }
  }
  uint64_t result = swift_release();
  *id v1 = v4;
  return result;
}

unint64_t sub_1A08EFBD0(uint64_t a1, uint64_t a2)
{
  sub_1A09F4C48();
  uint64_t v4 = *(void *)(a1 + 16);
  sub_1A09F4C58();
  uint64_t v5 = *(void *)(v4 + 16);
  if (v5)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = v4 + 40;
    do
    {
      swift_bridgeObjectRetain();
      sub_1A09F3DA8();
      swift_bridgeObjectRelease();
      v6 += 16;
      --v5;
    }
    while (v5);
    swift_bridgeObjectRelease();
  }
  sub_1A09F4C88();
  unint64_t result = sub_1A09F45D8();
  *(void *)(a2 + 56 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
  *(void *)(*(void *)(a2 + 48) + 8 * result) = a1;
  ++*(void *)(a2 + 16);
  return result;
}

uint64_t sub_1A08EFCD4(uint64_t result, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v8 = result;
  unint64_t v9 = *(void *)(*v4 + 16);
  unint64_t v10 = *(void *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0) {
    goto LABEL_22;
  }
  if (a4)
  {
    sub_1A08EF364();
  }
  else
  {
    if (v10 > v9)
    {
      unint64_t result = (uint64_t)sub_1A08F02B0();
      goto LABEL_22;
    }
    sub_1A08F08B8();
  }
  uint64_t v11 = *v4;
  sub_1A09F4C48();
  sub_1A09F3DA8();
  unint64_t result = sub_1A09F4C88();
  uint64_t v12 = -1 << *(unsigned char *)(v11 + 32);
  a3 = result & ~v12;
  uint64_t v13 = v11 + 56;
  if ((*(void *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3))
  {
    uint64_t v14 = *(void *)(v11 + 48);
    int64_t v15 = (void *)(v14 + 16 * a3);
    BOOL v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (unint64_t result = sub_1A09F4B28(), (result & 1) != 0))
    {
LABEL_21:
      unint64_t result = sub_1A09F4BD8();
      __break(1u);
    }
    else
    {
      uint64_t v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(void *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3) & 1) == 0) {
          break;
        }
        uint64_t v18 = (void *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          unint64_t result = sub_1A09F4B28();
          if ((result & 1) == 0) {
            continue;
          }
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  uint64_t v20 = *v5;
  *(void *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  uint64_t v21 = (uint64_t *)(*(void *)(v20 + 48) + 16 * a3);
  *uint64_t v21 = v8;
  v21[1] = a2;
  uint64_t v22 = *(void *)(v20 + 16);
  BOOL v23 = __OFADD__(v22, 1);
  uint64_t v24 = v22 + 1;
  if (v23) {
    __break(1u);
  }
  else {
    *(void *)(v20 + 16) = v24;
  }
  return result;
}

uint64_t sub_1A08EFE70(uint64_t result, unint64_t a2, char a3)
{
  uint64_t v5 = result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_18;
  }
  if (a3)
  {
    sub_1A08EF644();
  }
  else
  {
    if (v7 > v6)
    {
      unint64_t result = (uint64_t)sub_1A08F0464();
      goto LABEL_18;
    }
    sub_1A08F0B68();
  }
  uint64_t v8 = *v3;
  sub_1A09F4C48();
  uint64_t v9 = *(void *)(v5 + 16);
  sub_1A09F4C58();
  uint64_t v10 = *(void *)(v9 + 16);
  if (v10)
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = v9 + 40;
    do
    {
      swift_bridgeObjectRetain();
      sub_1A09F3DA8();
      swift_bridgeObjectRelease();
      v11 += 16;
      --v10;
    }
    while (v10);
    swift_bridgeObjectRelease();
  }
  unint64_t result = sub_1A09F4C88();
  uint64_t v12 = -1 << *(unsigned char *)(v8 + 32);
  a2 = result & ~v12;
  if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v13 = swift_retain();
    BOOL v14 = sub_1A09CB27C(v13, v5);
    unint64_t result = swift_release();
    if (v14)
    {
LABEL_17:
      type metadata accessor for RemoteIntentFileMirrorRequestTask();
      unint64_t result = sub_1A09F4BD8();
      __break(1u);
    }
    else
    {
      uint64_t v15 = ~v12;
      while (1)
      {
        a2 = (a2 + 1) & v15;
        if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        uint64_t v16 = swift_retain();
        BOOL v17 = sub_1A09CB27C(v16, v5);
        unint64_t result = swift_release();
        if (v17) {
          goto LABEL_17;
        }
      }
    }
  }
LABEL_18:
  uint64_t v18 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v18 + 48) + 8 * a2) = v5;
  uint64_t v19 = *(void *)(v18 + 16);
  BOOL v20 = __OFADD__(v19, 1);
  uint64_t v21 = v19 + 1;
  if (v20) {
    __break(1u);
  }
  else {
    *(void *)(v18 + 16) = v21;
  }
  return result;
}

uint64_t sub_1A08F004C(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v29 = a1;
  unint64_t v5 = *(void *)(*v3 + 16);
  unint64_t v6 = *(void *)(*v3 + 24);
  if (v6 > v5 && (a3 & 1) != 0) {
    goto LABEL_12;
  }
  if (a3)
  {
    sub_1A08EF810();
  }
  else
  {
    if (v6 > v5)
    {
      sub_1A08F0610();
      goto LABEL_12;
    }
    sub_1A08F0CFC();
  }
  uint64_t v7 = *v3;
  uint64_t v8 = sub_1A09F33A8();
  sub_1A087B3D8(&qword_1E94F9198);
  uint64_t v9 = sub_1A09F3D78();
  uint64_t v10 = -1 << *(unsigned char *)(v7 + 32);
  a2 = v9 & ~v10;
  uint64_t v27 = v7 + 56;
  uint64_t v28 = v7;
  if ((*(void *)(v7 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v26 = ~v10;
    uint64_t v11 = *(void **)(v8 - 8);
    uint64_t v12 = (void (*)(char *, unint64_t, uint64_t))v11[2];
    uint64_t v13 = v11[8];
    uint64_t v14 = v11[9];
    uint64_t v15 = (uint64_t (**)(char *, uint64_t))(v11 + 1);
    do
    {
      MEMORY[0x1F4188790](v9);
      v12((char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), *(void *)(v28 + 48) + v14 * a2, v8);
      sub_1A087B3D8(&qword_1E94F91A0);
      char v16 = sub_1A09F3DD8();
      uint64_t v9 = (*v15)((char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v8);
      if (v16) {
        goto LABEL_15;
      }
      a2 = (a2 + 1) & v26;
    }
    while (((*(void *)(v27 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  uint64_t v17 = *v25;
  *(void *)(*v25 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t v18 = *(void *)(v17 + 48);
  uint64_t v19 = sub_1A09F33A8();
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 32))(v18 + *(void *)(*(void *)(v19 - 8) + 72) * a2, v29, v19);
  uint64_t v21 = *(void *)(v17 + 16);
  BOOL v22 = __OFADD__(v21, 1);
  uint64_t v23 = v21 + 1;
  if (!v22)
  {
    *(void *)(v17 + 16) = v23;
    return result;
  }
  __break(1u);
LABEL_15:
  uint64_t result = sub_1A09F4BD8();
  __break(1u);
  return result;
}

void *sub_1A08F02B0()
{
  id v1 = v0;
  sub_1A07856F8(&qword_1E94F7600);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1A09F4668();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *id v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21)
      {
        int64_t v9 = v20 + 2;
        if (v20 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v21 = *(void *)(v6 + 8 * v9);
        if (!v21) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (void *)(*(void *)(v2 + 48) + v16);
    uint64_t v18 = v17[1];
    uint64_t v19 = (void *)(*(void *)(v4 + 48) + v16);
    *uint64_t v19 = *v17;
    v19[1] = v18;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v13) {
    goto LABEL_28;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1A08F0464()
{
  id v1 = v0;
  sub_1A07856F8(&qword_1E94FB9F8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1A09F4668();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *id v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      int64_t v9 = v16 + 1;
      if (v16 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v9);
      if (!v17)
      {
        int64_t v9 = v16 + 2;
        if (v16 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v9);
        if (!v17) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(void *)(*(void *)(v4 + 48) + 8 * v15) = *(void *)(*(void *)(v2 + 48) + 8 * v15);
    uint64_t result = (void *)swift_retain();
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v13) {
    goto LABEL_28;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v9);
    ++v18;
    if (v17) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1A08F0610()
{
  id v1 = v0;
  sub_1A07856F8(&qword_1E94FB9F0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1A09F4668();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = (void *)swift_release();
LABEL_30:
    *id v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  unint64_t v6 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  uint64_t v24 = v1;
  char v25 = (const void *)(v2 + 56);
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v6) {
    uint64_t result = memmove(result, v25, 8 * v6);
  }
  int64_t v8 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v9 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v10 = -1;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  unint64_t v11 = v10 & *(void *)(v2 + 56);
  int64_t v12 = (unint64_t)(v9 + 63) >> 6;
  while (1)
  {
    if (v11)
    {
      unint64_t v13 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v14 = v13 | (v8 << 6);
      goto LABEL_12;
    }
    int64_t v21 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v21 >= v12) {
      goto LABEL_28;
    }
    unint64_t v22 = *((void *)v25 + v21);
    ++v8;
    if (!v22)
    {
      int64_t v8 = v21 + 1;
      if (v21 + 1 >= v12) {
        goto LABEL_28;
      }
      unint64_t v22 = *((void *)v25 + v8);
      if (!v22)
      {
        int64_t v8 = v21 + 2;
        if (v21 + 2 >= v12) {
          goto LABEL_28;
        }
        unint64_t v22 = *((void *)v25 + v8);
        if (!v22) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v11 = (v22 - 1) & v22;
    unint64_t v14 = __clz(__rbit64(v22)) + (v8 << 6);
LABEL_12:
    uint64_t v15 = sub_1A09F33A8();
    uint64_t v16 = *(void *)(v15 - 8);
    MEMORY[0x1F4188790](v15);
    int64_t v18 = (char *)&v24 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
    unint64_t v20 = *(void *)(v19 + 72) * v14;
    (*(void (**)(char *, unint64_t, uint64_t))(v16 + 16))(v18, *(void *)(v2 + 48) + v20, v15);
    uint64_t result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v16 + 32))(*(void *)(v4 + 48) + v20, v18, v15);
  }
  int64_t v23 = v21 + 3;
  if (v23 >= v12)
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    id v1 = v24;
    goto LABEL_30;
  }
  unint64_t v22 = *((void *)v25 + v23);
  if (v22)
  {
    int64_t v8 = v23;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v8 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v8 >= v12) {
      goto LABEL_28;
    }
    unint64_t v22 = *((void *)v25 + v8);
    ++v23;
    if (v22) {
      goto LABEL_27;
    }
  }
LABEL_32:
  __break(1u);
  return result;
}

uint64_t sub_1A08F08B8()
{
  id v1 = v0;
  uint64_t v2 = *v0;
  sub_1A07856F8(&qword_1E94F7600);
  uint64_t v3 = sub_1A09F4678();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *id v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v29 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v9 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v11 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v15 = v14 | (v11 << 6);
      goto LABEL_24;
    }
    int64_t v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v11;
    if (!v17)
    {
      int64_t v11 = v16 + 1;
      if (v16 + 1 >= v29) {
        goto LABEL_33;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v11);
      if (!v17)
      {
        int64_t v11 = v16 + 2;
        if (v16 + 2 >= v29) {
          goto LABEL_33;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v11);
        if (!v17) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_24:
    uint64_t v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v20 = *v19;
    uint64_t v21 = v19[1];
    sub_1A09F4C48();
    swift_bridgeObjectRetain();
    sub_1A09F3DA8();
    uint64_t result = sub_1A09F4C88();
    uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v27 = v24 == v26;
        if (v24 == v26) {
          unint64_t v24 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v9 + 8 * v24);
      }
      while (v28 == -1);
      unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    unint64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
    *unint64_t v13 = v20;
    v13[1] = v21;
    ++*(void *)(v4 + 16);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v29)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    id v1 = v0;
    goto LABEL_35;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v11 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v11 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v11 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v11);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

unint64_t sub_1A08F0B68()
{
  id v1 = v0;
  uint64_t v2 = *v0;
  sub_1A07856F8(&qword_1E94FB9F8);
  uint64_t v3 = sub_1A09F4678();
  if (!*(void *)(v2 + 16))
  {
LABEL_23:
    unint64_t result = swift_release();
    *id v1 = v3;
    return result;
  }
  uint64_t v4 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v5 = v2 + 56;
  uint64_t v6 = -1;
  if (v4 < 64) {
    uint64_t v6 = ~(-1 << v4);
  }
  uint64_t v7 = v6 & *(void *)(v2 + 56);
  int64_t v8 = (unint64_t)(v4 + 63) >> 6;
  unint64_t result = swift_retain();
  int64_t v10 = 0;
  while (1)
  {
    if (v7)
    {
      v7 &= v7 - 1;
      goto LABEL_6;
    }
    int64_t v12 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v12 >= v8) {
      goto LABEL_22;
    }
    uint64_t v13 = *(void *)(v5 + 8 * v12);
    ++v10;
    if (!v13)
    {
      int64_t v10 = v12 + 1;
      if (v12 + 1 >= v8) {
        goto LABEL_22;
      }
      uint64_t v13 = *(void *)(v5 + 8 * v10);
      if (!v13)
      {
        int64_t v10 = v12 + 2;
        if (v12 + 2 >= v8) {
          goto LABEL_22;
        }
        uint64_t v13 = *(void *)(v5 + 8 * v10);
        if (!v13) {
          break;
        }
      }
    }
LABEL_21:
    uint64_t v7 = (v13 - 1) & v13;
LABEL_6:
    uint64_t v11 = swift_retain();
    unint64_t result = sub_1A08EFBD0(v11, v3);
  }
  int64_t v14 = v12 + 3;
  if (v14 >= v8)
  {
LABEL_22:
    swift_release();
    goto LABEL_23;
  }
  uint64_t v13 = *(void *)(v5 + 8 * v14);
  if (v13)
  {
    int64_t v10 = v14;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v10 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v10 >= v8) {
      goto LABEL_22;
    }
    uint64_t v13 = *(void *)(v5 + 8 * v10);
    ++v14;
    if (v13) {
      goto LABEL_21;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_1A08F0CFC()
{
  id v1 = v0;
  uint64_t v2 = *v0;
  sub_1A07856F8(&qword_1E94FB9F0);
  uint64_t v3 = sub_1A09F4678();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *id v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = *(void *)(v2 + 56);
  uint64_t v35 = v0;
  uint64_t v36 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & v6;
  int64_t v37 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v9 = v3 + 56;
  uint64_t result = swift_retain();
  for (int64_t i = 0; ; int64_t i = v38)
  {
    if (v8)
    {
      unint64_t v13 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      int64_t v38 = i;
      unint64_t v14 = v13 | (i << 6);
      goto LABEL_24;
    }
    int64_t v15 = i + 1;
    if (__OFADD__(i, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v37) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v36 + 8 * v15);
    int64_t v17 = i + 1;
    if (!v16)
    {
      int64_t v17 = i + 2;
      if (i + 2 >= v37) {
        goto LABEL_33;
      }
      unint64_t v16 = *(void *)(v36 + 8 * v17);
      if (!v16)
      {
        int64_t v17 = i + 3;
        if (i + 3 >= v37) {
          goto LABEL_33;
        }
        unint64_t v16 = *(void *)(v36 + 8 * v17);
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v16 - 1) & v16;
    int64_t v38 = v17;
    unint64_t v14 = __clz(__rbit64(v16)) + (v17 << 6);
LABEL_24:
    uint64_t v19 = sub_1A09F33A8();
    uint64_t v20 = *(void *)(v19 - 8);
    MEMORY[0x1F4188790](v19);
    uint64_t v22 = (char *)&v35 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v24 = v23;
    uint64_t v25 = v2;
    uint64_t v26 = *(void *)(v2 + 48);
    uint64_t v27 = *(void *)(v24 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v20 + 16))(v22, v26 + v27 * v14, v19);
    sub_1A087B3D8(&qword_1E94F9198);
    uint64_t result = sub_1A09F3D78();
    uint64_t v28 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v29 = result & ~v28;
    unint64_t v30 = v29 >> 6;
    if (((-1 << v29) & ~*(void *)(v9 + 8 * (v29 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v29) & ~*(void *)(v9 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v31 = 0;
      unint64_t v32 = (unint64_t)(63 - v28) >> 6;
      do
      {
        if (++v30 == v32 && (v31 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v33 = v30 == v32;
        if (v30 == v32) {
          unint64_t v30 = 0;
        }
        v31 |= v33;
        uint64_t v34 = *(void *)(v9 + 8 * v30);
      }
      while (v34 == -1);
      unint64_t v12 = __clz(__rbit64(~v34)) + (v30 << 6);
    }
    *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    uint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v20 + 32))(*(void *)(v4 + 48) + v12 * v27, v22, v19);
    ++*(void *)(v4 + 16);
    uint64_t v2 = v25;
  }
  uint64_t v18 = i + 4;
  if (i + 4 >= v37)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    id v1 = v35;
    goto LABEL_35;
  }
  unint64_t v16 = *(void *)(v36 + 8 * v18);
  if (v16)
  {
    int64_t v17 = i + 4;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v17 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v17 >= v37) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v36 + 8 * v17);
    ++v18;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

void sub_1A08F1098(void *a1, uint64_t a2)
{
  if (qword_1EB4A5680 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_1A09F39E8();
  sub_1A078510C(v4, (uint64_t)qword_1EB4A5660);
  uint64_t v5 = sub_1A09F39C8();
  os_log_type_t v6 = sub_1A09F4358();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v7 = 0;
    _os_log_impl(&dword_1A0772000, v5, v6, "Received RD darwin notification", v7, 2u);
    MEMORY[0x1A6228C20](v7, -1, -1);
  }

  if (a1 && a2)
  {
    uint64_t v8 = sub_1A09F3E18();
    uint64_t v10 = v9;
    id v15 = a1;
    if (sub_1A09F3E18() == v8 && v11 == v10)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v13 = sub_1A09F4B28();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v14 = v15;
      if ((v13 & 1) == 0) {
        goto LABEL_16;
      }
    }
    sub_1A08EB2C4();
    unint64_t v14 = v15;
LABEL_16:
  }
}

void sub_1A08F1240(void *a1)
{
  id v2 = objc_msgSend(a1, sel_balloonBundleID);
  if (!v2) {
    return;
  }
  uint64_t v3 = v2;
  uint64_t v4 = sub_1A09F3E18();
  uint64_t v6 = v5;

  id v7 = (id)IMBalloonExtensionIDWithSuffix(@"com.apple.SafetyMonitorApp.SafetyMonitorMessages");
  if (!v7) {
    goto LABEL_8;
  }
  uint64_t v8 = v7;
  uint64_t v9 = sub_1A09F3E18();
  uint64_t v11 = v10;

  if (v4 == v9 && v6 == v11)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v13 = sub_1A09F4B28();
    swift_bridgeObjectRelease();
    if ((v13 & 1) == 0)
    {
LABEL_8:
      swift_bridgeObjectRelease();
      return;
    }
  }
  id v14 = objc_msgSend(self, sel_sharedFeatureFlags);
  unsigned __int8 v15 = objc_msgSend(v14, sel_isZelkovaEnabled);
  swift_bridgeObjectRelease();

  if (v15)
  {
    id v16 = objc_msgSend(a1, sel_guid);
    if (v16)
    {
      id v17 = v16;
      IMInformSafetyMonitorManagerOfScheduledSendTriggeredFor(v16);
    }
    else
    {
      __break(1u);
    }
  }
}

uint64_t type metadata accessor for SafetyMonitorCoordinator()
{
  return self;
}

uint64_t method lookup function for SafetyMonitorCoordinator(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SafetyMonitorCoordinator);
}

uint64_t dispatch thunk of SafetyMonitorCoordinator.appPayloadID.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x58))();
}

uint64_t dispatch thunk of SafetyMonitorCoordinator.appPayload.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x60))();
}

uint64_t dispatch thunk of SafetyMonitorCoordinator.shouldDisallowBasedOnRegulatoryDomain.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x88))();
}

uint64_t dispatch thunk of SafetyMonitorCoordinator.checkPreferredHandlesCache(forReceiverWith:completion:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xB8))();
}

uint64_t dispatch thunk of SafetyMonitorCoordinator.checkPreferredHandlesCache(forInitiatorHandleID:andReceiver:completion:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xC0))();
}

uint64_t dispatch thunk of SafetyMonitorCoordinator.shouldDropIncomingCheckInMessage(URL:senderHandle:isFromMe:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xC8))();
}

uint64_t dispatch thunk of SafetyMonitorCoordinator.informOfOutgoingMessage(message:sentSuccessfully:error:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xD0))();
}

uint64_t dispatch thunk of SafetyMonitorCoordinator.informOfIncomingMessage(message:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xD8))();
}

uint64_t dispatch thunk of SafetyMonitorCoordinator.informOfDeletedMessages(messages:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xE0))();
}

uint64_t dispatch thunk of SafetyMonitorCoordinator.informOfDeletedConversation(receiverHandles:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xE8))();
}

uint64_t dispatch thunk of SafetyMonitorCoordinator.informOfScheduledMessageSend(message:sentSuccessfully:error:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xF0))();
}

uint64_t dispatch thunk of SafetyMonitorCoordinator.informOfCancelledScheduledMessageSend(messageGUID:sentSuccessfully:error:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xF8))();
}

uint64_t dispatch thunk of SafetyMonitorCoordinator.informOfTriggeredScheduledMessageSend(message:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x100))();
}

uint64_t dispatch thunk of SafetyMonitorCoordinator.shouldShowKeyboardSuggestion(forInitiator:andReceiver:completion:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x108))();
}

uint64_t dispatch thunk of SafetyMonitorCoordinator.shouldShowTipKitSuggestion(forInitiator:andReceiver:completion:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x110))();
}

uint64_t dispatch thunk of SafetyMonitorCoordinator.notificationContent(forInitiator:messageURL:content:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x118))();
}

uint64_t dispatch thunk of SafetyMonitorCoordinator.respondToNotification(withIdentifier:sessionIdentifier:actionIdentifier:completion:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x120))();
}

uint64_t dispatch thunk of SafetyMonitorCoordinator.informOfChangedGroupMembership(groupID:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x128))();
}

uint64_t dispatch thunk of SafetyMonitorCoordinator.informOfKickFromGroup(groupID:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x130))();
}

uint64_t dispatch thunk of SafetyMonitorCoordinator.informOfChangedGroupDisplayName(groupID:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x138))();
}

uint64_t dispatch thunk of SafetyMonitorCoordinator.informOfChangedGroupPhoto(groupID:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x140))();
}

uint64_t sub_1A08F189C()
{
  _Block_release(*(const void **)(v0 + 16));

  return MEMORY[0x1F4186498](v0, 24, 7);
}

void sub_1A08F18D4(uint64_t a1)
{
  sub_1A08EE238(a1, *(void *)(v1 + 16));
}

uint64_t sub_1A08F18DC(char a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(v1 + 16) + 16))(*(void *)(v1 + 16), a1 & 1);
}

uint64_t sub_1A08F18F8()
{
  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  return MEMORY[0x1F4186498](v0, 88, 7);
}

uint64_t sub_1A08F1954(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = v1[7];
  uint64_t v10 = v1[8];
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v11;
  *uint64_t v11 = v2;
  v11[1] = sub_1A077EE58;
  return sub_1A08EB740(a1, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_1A08F1A30()
{
  uint64_t v1 = sub_1A07856F8(&qword_1EB4A5618);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x1F4186498](v0, v5, v6);
}

uint64_t sub_1A08F1AC4(uint64_t a1)
{
  sub_1A07856F8(&qword_1EB4A5618);

  return sub_1A08EAF50(a1);
}

uint64_t sub_1A08F1B7C()
{
  uint64_t v0 = sub_1A09F39E8();
  sub_1A078D848(v0, qword_1E94FBA00);
  sub_1A078510C(v0, (uint64_t)qword_1E94FBA00);
  return sub_1A09F39D8();
}

id sub_1A08F1BFC()
{
  id result = sub_1A08F1C20();
  qword_1E94F76F8 = (uint64_t)result;
  unk_1E94F7700 = v1;
  return result;
}

id sub_1A08F1C20()
{
  id v0 = objc_msgSend(self, sel_mainBundle);
  id v1 = objc_msgSend(v0, sel_bundleIdentifier);

  if (v1)
  {
    sub_1A09F3E18();
  }
  id v2 = objc_msgSend(self, sel_stringGUID);
  if (v2)
  {
    uint64_t v3 = v2;
    sub_1A09F3E18();
  }
  else
  {
    uint64_t v4 = sub_1A09F34A8();
    uint64_t v5 = *(void *)(v4 - 8);
    MEMORY[0x1F4188790](v4);
    uint64_t v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_1A09F2ED8();
    sub_1A09F3488();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  unint64_t v12 = 0;
  unint64_t v13 = 0xE000000000000000;
  sub_1A09F46A8();
  swift_bridgeObjectRelease();
  unint64_t v12 = 0xD00000000000001FLL;
  unint64_t v13 = 0x80000001A0A34F10;
  sub_1A09F3EA8();
  swift_bridgeObjectRelease();
  sub_1A09F3EA8();
  sub_1A09F3EA8();
  swift_bridgeObjectRelease();
  unint64_t v8 = v12;
  id result = objc_msgSend(self, sel_sharedInstance);
  if (result)
  {
    uint64_t v10 = result;
    uint64_t v11 = (void *)sub_1A09F3DE8();
    objc_msgSend(v10, sel_addListenerID_forService_, v11, 1);

    return (id)v8;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t type metadata accessor for IMServiceAvailabilityMonitor(uint64_t a1)
{
  return sub_1A078231C(a1, &qword_1E94FBA98);
}

uint64_t sub_1A08F1F88()
{
  swift_unknownObjectWeakDestroy();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

void sub_1A08F1FC0(uint64_t a1, uint64_t a2)
{
  sub_1A077E990(a1, a2, v2, &OBJC_IVAR___IMServiceAvailabilityMonitor_rcsEnabled, "RCS Enabled State Changed from %s to %s");
}

id NSUserDefaults.conversationListFocusFilterActionEnabled.getter()
{
  id v1 = (void *)sub_1A09F3DE8();
  id v2 = objc_msgSend(v0, sel_BOOLForKey_, v1);

  return v2;
}

void NSUserDefaults.conversationListFocusFilterActionEnabled.setter(char a1)
{
  id v3 = (id)sub_1A09F3DE8();
  objc_msgSend(v1, sel_setBool_forKey_, a1 & 1, v3);
}

char *sub_1A08F20C0()
{
  return sel_conversationListFocusFilterActionEnabled;
}

id sub_1A08F20CC@<X0>(id *a1@<X0>, unsigned char *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_conversationListFocusFilterActionEnabled);
  *a2 = (_BYTE)result;
  return result;
}

id sub_1A08F2100(unsigned __int8 *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setConversationListFocusFilterActionEnabled_, *a1);
}

uint64_t sub_1A08F2114()
{
  uint64_t v0 = sub_1A09F39E8();
  sub_1A078D848(v0, qword_1E94FBAA0);
  sub_1A078510C(v0, (uint64_t)qword_1E94FBAA0);
  return sub_1A09F39D8();
}

uint64_t IntentClientRequestAdapter.safeRenderProvider.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A0883D94(v1 + 16, a1);
}

uint64_t IntentClientRequestAdapter.__allocating_init(safeRenderProvider:)(long long *a1)
{
  uint64_t v2 = swift_allocObject();
  sub_1A089266C(a1, v2 + 16);
  return v2;
}

uint64_t IntentClientRequestAdapter.init(safeRenderProvider:)(long long *a1)
{
  sub_1A089266C(a1, v1 + 16);
  return v1;
}

uint64_t IntentClientRequestAdapter.processRequest<A>(_:usingHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v6[16] = a5;
  v6[17] = v5;
  v6[14] = a3;
  v6[15] = a4;
  v6[12] = a1;
  v6[13] = a2;
  v6[18] = *v5;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v6[19] = AssociatedTypeWitness;
  v6[20] = *(void *)(AssociatedTypeWitness - 8);
  v6[21] = swift_task_alloc();
  v6[22] = *(void *)(a4 - 8);
  v6[23] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1A08F2364, 0, 0);
}

uint64_t sub_1A08F2364()
{
  int64_t v37 = v0;
  uint64_t v1 = self;
  uint64_t v2 = (void *)sub_1A09F3DE8();
  id v3 = objc_msgSend(v1, sel_applicationWithBundleIdentifier_, v2);
  v0[24] = v3;

  if (objc_msgSend(v3, sel_isLocked))
  {
    if (qword_1E94F8590 != -1) {
      swift_once();
    }
    uint64_t v4 = sub_1A09F39E8();
    sub_1A078510C(v4, (uint64_t)qword_1E94FBAA0);
    uint64_t v5 = sub_1A09F39C8();
    os_log_type_t v6 = sub_1A09F4378();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = (uint8_t *)swift_slowAlloc();
      uint64_t v8 = swift_slowAlloc();
      v36[0] = v8;
      *(_DWORD *)uint64_t v7 = 136315138;
      v0[11] = sub_1A0785144(0xD00000000000001FLL, 0x80000001A0A34FB0, v36);
      sub_1A09F4528();
      _os_log_impl(&dword_1A0772000, v5, v6, "%s Bailing on processing request because com.apple.MobileSMS is locked.", v7, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1A6228C20](v8, -1, -1);
      MEMORY[0x1A6228C20](v7, -1, -1);
    }

    sub_1A09F3E18();
    id v9 = objc_allocWithZone(MEMORY[0x1E4F28C58]);
    uint64_t v10 = (void *)sub_1A09F3DE8();
    swift_bridgeObjectRelease();
    objc_msgSend(v9, sel_initWithDomain_code_userInfo_, v10, 2400, 0);

    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v11 = (uint64_t (*)(void))v0[1];
    return v11();
  }
  else
  {
    if (qword_1E94F8590 != -1) {
      swift_once();
    }
    uint64_t v13 = v0[22];
    uint64_t v14 = v0[23];
    uint64_t v15 = v0[15];
    uint64_t v16 = v0[13];
    uint64_t v17 = sub_1A09F39E8();
    v0[25] = sub_1A078510C(v17, (uint64_t)qword_1E94FBAA0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16))(v14, v16, v15);
    uint64_t v18 = sub_1A09F39C8();
    os_log_type_t v19 = sub_1A09F4388();
    BOOL v20 = os_log_type_enabled(v18, v19);
    uint64_t v22 = v0[22];
    uint64_t v21 = v0[23];
    uint64_t v23 = v0[15];
    if (v20)
    {
      uint64_t v24 = swift_slowAlloc();
      uint64_t v35 = swift_slowAlloc();
      v36[0] = v35;
      *(_DWORD *)uint64_t v24 = 136315394;
      v0[9] = sub_1A0785144(0xD00000000000001FLL, 0x80000001A0A34FB0, v36);
      sub_1A09F4528();
      *(_WORD *)(v24 + 12) = 2080;
      swift_getDynamicType();
      uint64_t v25 = sub_1A09F4D08();
      v0[10] = sub_1A0785144(v25, v26, v36);
      sub_1A09F4528();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v21, v23);
      _os_log_impl(&dword_1A0772000, v18, v19, "%s Performing incoming request: %s", (uint8_t *)v24, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1A6228C20](v35, -1, -1);
      MEMORY[0x1A6228C20](v24, -1, -1);
    }
    else
    {
      (*(void (**)(void, void))(v22 + 8))(v0[23], v0[15]);
    }

    uint64_t v27 = v0[17];
    uint64_t v28 = v0[16];
    v0[5] = v0[18];
    v0[6] = &protocol witness table for IntentClientRequestAdapter;
    v0[2] = v27;
    uint64_t v34 = (uint64_t (*)(uint64_t, uint64_t, void *, uint64_t, uint64_t))(*(void *)(v28 + 72)
                                                                               + **(int **)(v28 + 72));
    swift_retain();
    unint64_t v29 = (void *)swift_task_alloc();
    v0[26] = v29;
    *unint64_t v29 = v0;
    v29[1] = sub_1A08F28FC;
    uint64_t v30 = v0[15];
    uint64_t v31 = v0[16];
    uint64_t v32 = v0[14];
    uint64_t v33 = v0[12];
    return v34(v33, v32, v0 + 2, v30, v31);
  }
}

uint64_t sub_1A08F28FC()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 216) = v0;
  swift_task_dealloc();
  if (v0)
  {
    id v3 = sub_1A08F2C6C;
  }
  else
  {
    _s17IMSharedUtilities29RemoteIntentBroadcastEncodingVwxx_0(v2 + 16);
    id v3 = sub_1A08F2A18;
  }
  return MEMORY[0x1F4188298](v3, 0, 0);
}

uint64_t sub_1A08F2A18()
{
  uint64_t v17 = v0;
  (*(void (**)(void, void, void))(*(void *)(v0 + 160) + 16))(*(void *)(v0 + 168), *(void *)(v0 + 96), *(void *)(v0 + 152));
  uint64_t v1 = sub_1A09F39C8();
  os_log_type_t v2 = sub_1A09F4388();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v15 = *(void **)(v0 + 192);
    uint64_t v3 = *(void *)(v0 + 160);
    uint64_t v13 = *(void *)(v0 + 168);
    uint64_t v4 = *(void *)(v0 + 152);
    uint64_t v5 = swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    uint64_t v16 = v14;
    *(_DWORD *)uint64_t v5 = 136315394;
    *(void *)(v0 + 56) = sub_1A0785144(0xD00000000000001FLL, 0x80000001A0A34FB0, &v16);
    sub_1A09F4528();
    *(_WORD *)(v5 + 12) = 2080;
    swift_getDynamicType();
    uint64_t v6 = sub_1A09F4D08();
    *(void *)(v0 + 64) = sub_1A0785144(v6, v7, &v16);
    sub_1A09F4528();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v13, v4);
    _os_log_impl(&dword_1A0772000, v1, v2, "%s request performed successfully and returned response: %s.", (uint8_t *)v5, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1A6228C20](v14, -1, -1);
    MEMORY[0x1A6228C20](v5, -1, -1);
  }
  else
  {
    uint64_t v9 = *(void *)(v0 + 160);
    uint64_t v8 = *(void *)(v0 + 168);
    uint64_t v10 = *(void *)(v0 + 152);

    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
  }

  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v11 = *(uint64_t (**)(void))(v0 + 8);
  return v11();
}

uint64_t sub_1A08F2C6C()
{
  _s17IMSharedUtilities29RemoteIntentBroadcastEncodingVwxx_0(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t IntentClientRequestAdapter.deinit()
{
  _s17IMSharedUtilities29RemoteIntentBroadcastEncodingVwxx_0(v0 + 16);
  return v0;
}

uint64_t IntentClientRequestAdapter.__deallocating_deinit()
{
  _s17IMSharedUtilities29RemoteIntentBroadcastEncodingVwxx_0(v0 + 16);

  return swift_deallocClassInstance();
}

uint64_t sub_1A08F2D48(uint64_t a1, char a2)
{
  *(unsigned char *)(v3 + 40) = a2;
  uint64_t v4 = *v2;
  *(void *)(v3 + 16) = a1;
  *(void *)(v3 + 24) = v4;
  return MEMORY[0x1F4188298](sub_1A08F2D70, 0, 0);
}

uint64_t sub_1A08F2D70()
{
  uint64_t v1 = *(void **)(v0 + 24);
  uint64_t v2 = v1[5];
  uint64_t v3 = v1[6];
  sub_1A086F45C(v1 + 2, v2);
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v3 + 16) + **(int **)(v3 + 16));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 32) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_1A08F37F4;
  uint64_t v5 = *(unsigned __int8 *)(v0 + 40);
  uint64_t v6 = *(void *)(v0 + 16);
  return v8(v6, v5, v2, v3);
}

uint64_t IntentClientRequestAdapter.generateSafeRenderFiles(for:useOriginalOnFailure:)(uint64_t a1, char a2)
{
  *(unsigned char *)(v3 + 40) = a2;
  *(void *)(v3 + 16) = a1;
  *(void *)(v3 + 24) = v2;
  return MEMORY[0x1F4188298](sub_1A08F2D70, 0, 0);
}

{
  uint64_t v2;
  uint64_t v3;

  *(unsigned char *)(v3 + 40) = a2;
  *(void *)(v3 + 16) = a1;
  *(void *)(v3 + 24) = v2;
  return MEMORY[0x1F4188298](sub_1A08F2ECC, 0, 0);
}

uint64_t sub_1A08F2EA4(uint64_t a1, char a2)
{
  *(unsigned char *)(v3 + 40) = a2;
  uint64_t v4 = *v2;
  *(void *)(v3 + 16) = a1;
  *(void *)(v3 + 24) = v4;
  return MEMORY[0x1F4188298](sub_1A08F2ECC, 0, 0);
}

uint64_t sub_1A08F2ECC()
{
  uint64_t v1 = *(void **)(v0 + 24);
  uint64_t v2 = v1[5];
  uint64_t v3 = v1[6];
  sub_1A086F45C(v1 + 2, v2);
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v3 + 8) + **(int **)(v3 + 8));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 32) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_1A08F2FDC;
  uint64_t v5 = *(unsigned __int8 *)(v0 + 40);
  uint64_t v6 = *(void *)(v0 + 16);
  return v8(v6, v5, v2, v3);
}

uint64_t sub_1A08F2FDC(uint64_t a1, char a2)
{
  uint64_t v7 = *v2;
  uint64_t v4 = a2 & 1;
  swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(v7 + 8);
  return v5(a1, v4);
}

uint64_t sub_1A08F3104(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  *(unsigned char *)(v5 + 56) = a4;
  *(void *)(v5 + 16) = a1;
  *(void *)(v5 + 24) = a2;
  uint64_t v6 = *v4;
  *(void *)(v5 + 32) = a3;
  *(void *)(v5 + 40) = v6;
  return MEMORY[0x1F4188298](sub_1A08F3130, 0, 0);
}

uint64_t sub_1A08F3130()
{
  uint64_t v1 = *(void **)(v0 + 40);
  uint64_t v2 = v1[5];
  uint64_t v3 = v1[6];
  sub_1A086F45C(v1 + 2, v2);
  uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v3 + 24)
                                                                                     + **(int **)(v3 + 24));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 48) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_1A08F3244;
  uint64_t v5 = *(unsigned __int8 *)(v0 + 56);
  uint64_t v6 = *(void *)(v0 + 24);
  uint64_t v7 = *(void *)(v0 + 32);
  uint64_t v8 = *(void *)(v0 + 16);
  return v10(v8, v6, v7, v5, v2, v3);
}

uint64_t sub_1A08F3244()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t IntentClientRequestAdapter.generateSafeRenderFile(for:useOriginalOnFailure:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  *(unsigned char *)(v5 + 56) = a4;
  *(void *)(v5 + 32) = a3;
  *(void *)(v5 + 40) = v4;
  *(void *)(v5 + 16) = a1;
  *(void *)(v5 + 24) = a2;
  return MEMORY[0x1F4188298](sub_1A08F3130, 0, 0);
}

uint64_t type metadata accessor for IntentClientRequestAdapter()
{
  return self;
}

uint64_t method lookup function for IntentClientRequestAdapter(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for IntentClientRequestAdapter);
}

uint64_t dispatch thunk of IntentClientRequestAdapter.__allocating_init(safeRenderProvider:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of IntentFileSafeRenderProviding.generateSafeRenderFiles(for:useOriginalOnFailure:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a4 + 8) + **(int **)(a4 + 8));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_1A08F34BC;
  return v11(a1, a2, a3, a4);
}

{
  uint64_t v4;
  void *v9;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a4 + 16) + **(int **)(a4 + 16));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_1A08F37F8;
  return v11(a1, a2, a3, a4);
}

uint64_t sub_1A08F34BC(uint64_t a1, char a2)
{
  uint64_t v7 = *v2;
  uint64_t v4 = a2 & 1;
  swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(v7 + 8);
  return v5(a1, v4);
}

uint64_t dispatch thunk of IntentFileSafeRenderProviding.generateSafeRenderFile(for:useOriginalOnFailure:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v15 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a6 + 24)
                                                                                     + **(int **)(a6 + 24));
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v6 + 16) = v13;
  *uint64_t v13 = v6;
  v13[1] = sub_1A077EE58;
  return v15(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_1A08F37FC(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *(void *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v26 = v4 + ((v3 + 16) & ~(unint64_t)v3);
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[2];
    *(void *)(a1 + 8) = a2[1];
    *(void *)(a1 + 16) = v5;
    uint64_t v6 = a2[4];
    *(void *)(a1 + 24) = a2[3];
    *(void *)(a1 + 32) = v6;
    uint64_t v7 = a2[6];
    *(void *)(a1 + 40) = a2[5];
    *(void *)(a1 + 48) = v7;
    *(void *)(a1 + 56) = a2[7];
    *(unsigned char *)(a1 + 64) = *((unsigned char *)a2 + 64);
    uint64_t v8 = a2[10];
    *(void *)(a1 + 72) = a2[9];
    *(void *)(a1 + 80) = v8;
    uint64_t v9 = a2[12];
    *(void *)(a1 + 88) = a2[11];
    *(void *)(a1 + 96) = v9;
    *(unsigned char *)(a1 + 104) = *((unsigned char *)a2 + 104);
    uint64_t v10 = a2[15];
    *(void *)(a1 + 112) = a2[14];
    *(void *)(a1 + 120) = v10;
    *(unsigned char *)(a1 + 128) = *((unsigned char *)a2 + 128);
    *(void *)(a1 + 136) = a2[17];
    *(unsigned char *)(a1 + 144) = *((unsigned char *)a2 + 144);
    uint64_t v11 = a2[20];
    *(void *)(a1 + 152) = a2[19];
    *(void *)(a1 + 160) = v11;
    *(void *)(a1 + 168) = a2[21];
    *(_DWORD *)(a1 + 176) = *((_DWORD *)a2 + 44);
    uint64_t v12 = a2[24];
    *(void *)(a1 + 184) = a2[23];
    *(void *)(a1 + 192) = v12;
    uint64_t v13 = a2[26];
    *(void *)(a1 + 200) = a2[25];
    *(void *)(a1 + 208) = v13;
    *(unsigned char *)(a1 + 216) = *((unsigned char *)a2 + 216);
    uint64_t v14 = a2[29];
    *(void *)(a1 + 224) = a2[28];
    *(void *)(a1 + 232) = v14;
    uint64_t v15 = a2[31];
    *(void *)(a1 + 240) = a2[30];
    *(void *)(a1 + 248) = v15;
    uint64_t v16 = a2[33];
    *(void *)(a1 + 256) = a2[32];
    *(void *)(a1 + 264) = v16;
    uint64_t v17 = a2[34];
    *(unsigned char *)(a1 + 280) = *((unsigned char *)a2 + 280);
    *(void *)(a1 + 272) = v17;
    *(unsigned char *)(a1 + 281) = *((unsigned char *)a2 + 281);
    *(unsigned char *)(a1 + 282) = *((unsigned char *)a2 + 282);
    uint64_t v18 = a2[36];
    *(unsigned char *)(a1 + 296) = *((unsigned char *)a2 + 296);
    *(void *)(a1 + 288) = v18;
    *(unsigned char *)(a1 + 297) = *((unsigned char *)a2 + 297);
    uint64_t v19 = a2[38];
    uint64_t v20 = a2[39];
    uint64_t v21 = a2[40];
    *(unsigned char *)(a1 + 328) = *((unsigned char *)a2 + 328);
    *(void *)(a1 + 312) = v20;
    *(void *)(a1 + 320) = v21;
    uint64_t v22 = *(int *)(a3 + 136);
    v546 = (_OWORD *)(a1 + v22);
    v547 = (_OWORD *)((char *)a2 + v22);
    *(void *)(a1 + 304) = v19;
    uint64_t v23 = type metadata accessor for RemoteIntentMessageItem(0);
    uint64_t v24 = *(void *)(v23 - 8);
    v532 = *(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v24 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v532(v547, 1, v23))
    {
      uint64_t v25 = sub_1A07856F8(&qword_1E94FBB20);
      memcpy(v546, v547, *(void *)(*(void *)(v25 - 8) + 64));
      uint64_t v27 = a2;
      uint64_t v26 = a1;
      uint64_t v28 = a3;
    }
    else
    {
      uint64_t v527 = v24;
      uint64_t v528 = v23;
      uint64_t v29 = *((void *)v547 + 1);
      if (v29 == 1)
      {
        long long v30 = v547[3];
        uint64_t v31 = v546;
        v546[2] = v547[2];
        v546[3] = v30;
        *((unsigned char *)v546 + 64) = *((unsigned char *)v547 + 64);
        long long v32 = v547[1];
        _OWORD *v546 = *v547;
        v546[1] = v32;
      }
      else
      {
        uint64_t v31 = v546;
        *(void *)v546 = *(void *)v547;
        *((void *)v546 + 1) = v29;
        uint64_t v33 = *((void *)v547 + 3);
        *((void *)v546 + 2) = *((void *)v547 + 2);
        *((void *)v546 + 3) = v33;
        uint64_t v34 = *((void *)v547 + 5);
        *((void *)v546 + 4) = *((void *)v547 + 4);
        *((void *)v546 + 5) = v34;
        uint64_t v35 = *((void *)v547 + 7);
        *((void *)v546 + 6) = *((void *)v547 + 6);
        *((void *)v546 + 7) = v35;
        *((unsigned char *)v546 + 64) = *((unsigned char *)v547 + 64);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      uint64_t v36 = *((void *)v547 + 10);
      *((void *)v31 + 9) = *((void *)v547 + 9);
      *((void *)v31 + 10) = v36;
      uint64_t v552 = *((void *)v547 + 12);
      *((void *)v31 + 11) = *((void *)v547 + 11);
      *((void *)v31 + 12) = v552;
      uint64_t v549 = *((void *)v547 + 14);
      *((void *)v31 + 13) = *((void *)v547 + 13);
      *((void *)v31 + 14) = v549;
      uint64_t v37 = *((void *)v547 + 16);
      *((void *)v31 + 15) = *((void *)v547 + 15);
      *((void *)v31 + 16) = v37;
      uint64_t v38 = *((void *)v547 + 18);
      *((void *)v31 + 17) = *((void *)v547 + 17);
      *((void *)v31 + 18) = v38;
      uint64_t v39 = *((void *)v547 + 20);
      *((void *)v31 + 19) = *((void *)v547 + 19);
      *((void *)v31 + 20) = v39;
      uint64_t v40 = *((void *)v547 + 22);
      *((void *)v31 + 21) = *((void *)v547 + 21);
      *((void *)v31 + 22) = v40;
      uint64_t v41 = *((void *)v547 + 24);
      *((void *)v31 + 23) = *((void *)v547 + 23);
      *((void *)v31 + 24) = v41;
      *((void *)v31 + 25) = *((void *)v547 + 25);
      *((_WORD *)v31 + 104) = *((_WORD *)v547 + 104);
      uint64_t v42 = *((void *)v547 + 28);
      *((void *)v31 + 27) = *((void *)v547 + 27);
      *((void *)v31 + 28) = v42;
      v544 = (int *)type metadata accessor for RemoteIntentItemContent(0);
      uint64_t v43 = v544[16];
      __dst = (char *)v31 + v43;
      v540 = (char *)v547 + v43;
      uint64_t v44 = sub_1A09F3478();
      uint64_t v45 = *(void *)(v44 - 8);
      id v46 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v550 = v46;
      uint64_t v542 = v45;
      uint64_t v543 = v44;
      if (v46(v540, 1, v44))
      {
        uint64_t v47 = sub_1A07856F8((uint64_t *)&unk_1E94FAF20);
        memcpy(__dst, v540, *(void *)(*(void *)(v47 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v45 + 16))(__dst, v540, v44);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v45 + 56))(__dst, 0, 1, v44);
      }
      uint64_t v48 = v544[17];
      uint64_t v49 = (char *)v546 + v48;
      int v50 = (char *)v547 + v48;
      *(void *)uint64_t v49 = *(void *)v50;
      v49[8] = v50[8];
      uint64_t v51 = v544[18];
      uint64_t v52 = (void *)((char *)v546 + v51);
      uint64_t v53 = (void *)((char *)v547 + v51);
      uint64_t v54 = v53[1];
      *uint64_t v52 = *v53;
      v52[1] = v54;
      uint64_t v55 = v544[19];
      uint64_t v56 = (void *)((char *)v546 + v55);
      uint64_t v57 = (void *)((char *)v547 + v55);
      uint64_t v58 = v57[1];
      *uint64_t v56 = *v57;
      v56[1] = v58;
      uint64_t v59 = v544[20];
      int v60 = (void *)((char *)v546 + v59);
      id v61 = (void *)((char *)v547 + v59);
      uint64_t v62 = v61[1];
      *int v60 = *v61;
      v60[1] = v62;
      uint64_t v63 = v544[21];
      id v64 = (void *)((char *)v546 + v63);
      uint64_t v65 = (void *)((char *)v547 + v63);
      uint64_t v66 = v65[1];
      *id v64 = *v65;
      v64[1] = v66;
      uint64_t v67 = v544[22];
      id v68 = (char *)v546 + v67;
      uint64_t v69 = (char *)v547 + v67;
      *(void *)id v68 = *(void *)v69;
      v68[8] = v69[8];
      uint64_t v70 = v544[23];
      uint64_t v71 = (void *)((char *)v546 + v70);
      id v72 = (void *)((char *)v547 + v70);
      uint64_t v73 = v72[1];
      *uint64_t v71 = *v72;
      v71[1] = v73;
      uint64_t v74 = v544[24];
      uint64_t v75 = (void *)((char *)v546 + v74);
      uint64_t v76 = (void *)((char *)v547 + v74);
      uint64_t v77 = v76[1];
      *uint64_t v75 = *v76;
      v75[1] = v77;
      uint64_t v78 = v544[25];
      uint64_t v79 = (char *)v546 + v78;
      uint64_t v80 = (uint64_t *)((char *)v547 + v78);
      unint64_t v81 = *(void *)((char *)v547 + v78 + 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v81 >> 60 == 15)
      {
        *(_OWORD *)uint64_t v79 = *(_OWORD *)v80;
      }
      else
      {
        uint64_t v82 = *v80;
        sub_1A08AF278(*v80, v81);
        *(void *)uint64_t v79 = v82;
        *((void *)v79 + 1) = v81;
      }
      id v83 = v544;
      id v84 = v547;
      uint64_t v85 = v544[26];
      uint64_t v86 = (void *)((char *)v546 + v85);
      uint64_t v87 = (void *)((char *)v547 + v85);
      uint64_t v88 = v87[1];
      *uint64_t v86 = *v87;
      v86[1] = v88;
      *(void *)((char *)v546 + v544[27]) = *(void *)((char *)v547 + v544[27]);
      uint64_t v89 = v544[28];
      uint64_t v90 = (char *)v546 + v89;
      uint64_t v91 = (uint64_t *)((char *)v547 + v89);
      unint64_t v92 = *(void *)((char *)v547 + v89 + 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v92 >> 60 == 15)
      {
        *(_OWORD *)uint64_t v90 = *(_OWORD *)v91;
      }
      else
      {
        uint64_t v93 = *v91;
        sub_1A08AF278(*v91, v92);
        *(void *)uint64_t v90 = v93;
        *((void *)v90 + 1) = v92;
      }
      uint64_t v94 = v544[29];
      uint64_t v95 = (char *)v546 + v94;
      uint64_t v96 = (char *)v547 + v94;
      if (v550((char *)v547 + v94, 1, v543))
      {
        uint64_t v97 = sub_1A07856F8((uint64_t *)&unk_1E94FAF20);
        memcpy(v95, v96, *(void *)(*(void *)(v97 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v542 + 16))(v95, v96, v543);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v542 + 56))(v95, 0, 1, v543);
      }
      uint64_t v98 = v544[30];
      id v99 = (char *)v546 + v98;
      id v100 = (char *)v547 + v98;
      if (v550((char *)v547 + v98, 1, v543))
      {
        uint64_t v101 = sub_1A07856F8((uint64_t *)&unk_1E94FAF20);
        memcpy(v99, v100, *(void *)(*(void *)(v101 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v542 + 16))(v99, v100, v543);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v542 + 56))(v99, 0, 1, v543);
      }
      uint64_t v102 = v544[31];
      uint64_t v103 = (char *)v546 + v102;
      char v104 = (char *)v547 + v102;
      if (v550((char *)v547 + v102, 1, v543))
      {
        uint64_t v105 = sub_1A07856F8((uint64_t *)&unk_1E94FAF20);
        memcpy(v103, v104, *(void *)(*(void *)(v105 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v542 + 16))(v103, v104, v543);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v542 + 56))(v103, 0, 1, v543);
      }
      uint64_t v106 = v544[32];
      id v107 = (char *)v546 + v106;
      char v108 = (char *)v547 + v106;
      *(void *)id v107 = *(void *)v108;
      v107[8] = v108[8];
      *((unsigned char *)v546 + v544[33]) = *((unsigned char *)v547 + v544[33]);
      uint64_t v109 = v544[34];
      uint64_t v110 = (char *)v546 + v109;
      uint64_t v111 = (char *)v547 + v109;
      unint64_t v112 = *((void *)v111 + 1);
      if (v112 >> 60 == 15)
      {
        *(_OWORD *)uint64_t v110 = *(_OWORD *)v111;
      }
      else
      {
        uint64_t v113 = *(void *)v111;
        sub_1A08AF278(*(void *)v111, *((void *)v111 + 1));
        *(void *)uint64_t v110 = v113;
        *((void *)v110 + 1) = v112;
      }
      uint64_t v114 = v544[35];
      uint64_t v115 = (void *)((char *)v546 + v114);
      id v116 = (void *)((char *)v547 + v114);
      uint64_t v117 = v116[1];
      *uint64_t v115 = *v116;
      v115[1] = v117;
      uint64_t v118 = v544[36];
      long long v119 = (char *)v546 + v118;
      long long v120 = (char *)v547 + v118;
      swift_bridgeObjectRetain();
      if (v550(v120, 1, v543))
      {
        uint64_t v121 = sub_1A07856F8((uint64_t *)&unk_1E94FAF20);
        memcpy(v119, v120, *(void *)(*(void *)(v121 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v542 + 16))(v119, v120, v543);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v542 + 56))(v119, 0, 1, v543);
      }
      uint64_t v122 = v544[37];
      char v123 = (char *)v546 + v122;
      __int16 v124 = (char *)v547 + v122;
      *(void *)char v123 = *(void *)v124;
      v123[8] = v124[8];
      uint64_t v125 = v544[38];
      char v126 = (char *)v546 + v125;
      char v127 = (char *)v547 + v125;
      unint64_t v128 = *((void *)v127 + 1);
      if (v128 >> 60 == 15)
      {
        *(_OWORD *)char v126 = *(_OWORD *)v127;
      }
      else
      {
        uint64_t v129 = *(void *)v127;
        sub_1A08AF278(*(void *)v127, *((void *)v127 + 1));
        *(void *)char v126 = v129;
        *((void *)v126 + 1) = v128;
      }
      uint64_t v130 = v544[39];
      char v131 = (void *)((char *)v546 + v130);
      char v132 = (void *)((char *)v547 + v130);
      v541 = (int *)type metadata accessor for RemoteIntentMessageSummaryInfo();
      uint64_t v526 = *((void *)v541 - 1);
      v524 = *(unsigned int (**)(void *, uint64_t, int *))(v526 + 48);
      if (v524(v132, 1, v541))
      {
        uint64_t v133 = sub_1A07856F8(&qword_1E94FBB10);
        memcpy(v131, v132, *(void *)(*(void *)(v133 - 8) + 64));
      }
      else
      {
        uint64_t v134 = v132[1];
        *char v131 = *v132;
        v131[1] = v134;
        uint64_t v135 = v132 + 2;
        unint64_t v136 = v132[3];
        swift_bridgeObjectRetain();
        if (v136 >> 60 == 15)
        {
          *((_OWORD *)v131 + 1) = *v135;
        }
        else
        {
          uint64_t v137 = *(void *)v135;
          sub_1A08AF278(v137, v136);
          v131[2] = v137;
          v131[3] = v136;
        }
        v131[4] = v132[4];
        *((unsigned char *)v131 + 40) = *((unsigned char *)v132 + 40);
        uint64_t v138 = v132[7];
        v131[6] = v132[6];
        unsigned char v131[7] = v138;
        uint64_t v139 = v132[9];
        v131[8] = v132[8];
        v131[9] = v139;
        uint64_t v140 = v132[11];
        v131[10] = v132[10];
        v131[11] = v140;
        uint64_t v141 = v132[13];
        v131[12] = v132[12];
        v131[13] = v141;
        *((_WORD *)v131 + 56) = *((_WORD *)v132 + 56);
        uint64_t v142 = v132[16];
        v131[15] = v132[15];
        v131[16] = v142;
        *((unsigned char *)v131 + 136) = *((unsigned char *)v132 + 136);
        uint64_t v143 = v132[19];
        v131[18] = v132[18];
        v131[19] = v143;
        uint64_t v144 = v541[16];
        v533 = (char *)v131 + v144;
        v520 = (char *)v132 + v144;
        uint64_t v145 = sub_1A09F34B8();
        uint64_t v521 = *(void *)(v145 - 8);
        unsigned __int8 v146 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v521 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v146(v520, 1, v145))
        {
          uint64_t v147 = sub_1A07856F8(&qword_1E94FBB08);
          memcpy(v533, v520, *(void *)(*(void *)(v147 - 8) + 64));
          uint64_t v148 = v521;
        }
        else
        {
          uint64_t v148 = v521;
          (*(void (**)(char *, char *, uint64_t))(v521 + 16))(v533, v520, v145);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v521 + 56))(v533, 0, 1, v145);
        }
        uint64_t v149 = v541[17];
        long long v150 = (char *)v131 + v149;
        v151 = (char *)v132 + v149;
        unsigned int v152 = v146((char *)v132 + v149, 1, v145);
        id v83 = v544;
        uint64_t v153 = v145;
        id v84 = v547;
        if (v152)
        {
          uint64_t v154 = sub_1A07856F8(&qword_1E94FBB08);
          memcpy(v150, v151, *(void *)(*(void *)(v154 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v148 + 16))(v150, v151, v153);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v148 + 56))(v150, 0, 1, v153);
        }
        *(void *)((char *)v131 + v541[18]) = *(void *)((char *)v132 + v541[18]);
        uint64_t v155 = v541[19];
        v156 = (char *)v131 + v155;
        v157 = (char *)v132 + v155;
        swift_bridgeObjectRetain();
        if (v146(v157, 1, v153))
        {
          uint64_t v158 = sub_1A07856F8(&qword_1E94FBB08);
          memcpy(v156, v157, *(void *)(*(void *)(v158 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v148 + 16))(v156, v157, v153);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v148 + 56))(v156, 0, 1, v153);
        }
        uint64_t v159 = v541[20];
        v160 = (char *)v131 + v159;
        v161 = (char *)v132 + v159;
        if (v146((char *)v132 + v159, 1, v153))
        {
          uint64_t v162 = sub_1A07856F8(&qword_1E94FBB08);
          memcpy(v160, v161, *(void *)(*(void *)(v162 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v148 + 16))(v160, v161, v153);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v148 + 56))(v160, 0, 1, v153);
        }
        *(void *)((char *)v131 + v541[21]) = *(void *)((char *)v132 + v541[21]);
        uint64_t v163 = v541[22];
        v164 = (char *)v131 + v163;
        v165 = (_OWORD *)((char *)v132 + v163);
        unint64_t v166 = *(void *)((char *)v132 + v163 + 8);
        swift_bridgeObjectRetain();
        if (v166 >> 60 == 15)
        {
          *(_OWORD *)v164 = *v165;
        }
        else
        {
          uint64_t v167 = *(void *)v165;
          sub_1A08AF278(v167, v166);
          *(void *)v164 = v167;
          *((void *)v164 + 1) = v166;
        }
        uint64_t v168 = v541[23];
        v169 = (void *)((char *)v131 + v168);
        v170 = (void *)((char *)v132 + v168);
        uint64_t v171 = v170[1];
        void *v169 = *v170;
        v169[1] = v171;
        uint64_t v172 = v541[24];
        v173 = (char *)v131 + v172;
        v174 = (char *)v132 + v172;
        v173[8] = v174[8];
        *(void *)v173 = *(void *)v174;
        uint64_t v175 = v541[25];
        v176 = (char *)v131 + v175;
        v177 = (char *)v132 + v175;
        *(void *)v176 = *(void *)v177;
        v176[8] = v177[8];
        *((unsigned char *)v131 + v541[26]) = *((unsigned char *)v132 + v541[26]);
        uint64_t v178 = v541[27];
        v179 = (char *)v131 + v178;
        v180 = (char *)v132 + v178;
        swift_bridgeObjectRetain();
        if (v550(v180, 1, v543))
        {
          uint64_t v181 = sub_1A07856F8((uint64_t *)&unk_1E94FAF20);
          memcpy(v179, v180, *(void *)(*(void *)(v181 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v542 + 16))(v179, v180, v543);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v542 + 56))(v179, 0, 1, v543);
        }
        *(void *)((char *)v131 + v541[28]) = *(void *)((char *)v132 + v541[28]);
        uint64_t v182 = v541[29];
        v183 = (void *)((char *)v131 + v182);
        v184 = (void *)((char *)v132 + v182);
        uint64_t v185 = v184[1];
        void *v183 = *v184;
        v183[1] = v185;
        *((unsigned char *)v131 + v541[30]) = *((unsigned char *)v132 + v541[30]);
        v186 = *(void (**)(void *, void, uint64_t, int *))(v526 + 56);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v186(v131, 0, 1, v541);
      }
      uint64_t v187 = v83[40];
      v188 = (void *)((char *)v546 + v187);
      v189 = (void *)((char *)v84 + v187);
      uint64_t v190 = v189[1];
      void *v188 = *v189;
      v188[1] = v190;
      *((unsigned char *)v546 + v83[41]) = *((unsigned char *)v84 + v83[41]);
      uint64_t v191 = v83[42];
      v192 = (void *)((char *)v546 + v191);
      v193 = (void *)((char *)v84 + v191);
      uint64_t v194 = v193[1];
      void *v192 = *v193;
      v192[1] = v194;
      *((unsigned char *)v546 + v83[43]) = *((unsigned char *)v84 + v83[43]);
      *((unsigned char *)v546 + v83[44]) = *((unsigned char *)v84 + v83[44]);
      *((unsigned char *)v546 + v83[45]) = *((unsigned char *)v84 + v83[45]);
      *((unsigned char *)v546 + v83[46]) = *((unsigned char *)v84 + v83[46]);
      uint64_t v195 = v83[47];
      v196 = (void *)((char *)v546 + v195);
      v197 = (void *)((char *)v84 + v195);
      uint64_t v198 = v197[1];
      void *v196 = *v197;
      v196[1] = v198;
      uint64_t v199 = v83[48];
      v200 = (void *)((char *)v546 + v199);
      v201 = (void *)((char *)v84 + v199);
      uint64_t v202 = v201[1];
      void *v200 = *v201;
      v200[1] = v202;
      *(void *)((char *)v546 + v83[49]) = *(void *)((char *)v84 + v83[49]);
      uint64_t v203 = v83[50];
      v204 = (void *)((char *)v546 + v203);
      v205 = (void *)((char *)v84 + v203);
      uint64_t v206 = v205[1];
      void *v204 = *v205;
      v204[1] = v206;
      uint64_t v207 = v83[51];
      v208 = (void *)((char *)v546 + v207);
      v209 = (void *)((char *)v84 + v207);
      v210 = v84;
      uint64_t v211 = v209[1];
      void *v208 = *v209;
      v208[1] = v211;
      uint64_t v212 = v83[52];
      v213 = (char *)v546 + v212;
      v214 = (char *)v210 + v212;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v550(v214, 1, v543))
      {
        uint64_t v215 = sub_1A07856F8((uint64_t *)&unk_1E94FAF20);
        memcpy(v213, v214, *(void *)(*(void *)(v215 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v542 + 16))(v213, v214, v543);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v542 + 56))(v213, 0, 1, v543);
      }
      v216 = v547;
      uint64_t v217 = v544[53];
      v218 = (char *)v546 + v217;
      v219 = (char *)v547 + v217;
      *(void *)v218 = *(void *)v219;
      v218[8] = v219[8];
      uint64_t v220 = v544[54];
      v221 = (char *)v546 + v220;
      v222 = (char *)v547 + v220;
      v221[8] = v222[8];
      *(void *)v221 = *(void *)v222;
      uint64_t v223 = v544[55];
      v224 = (void *)((char *)v546 + v223);
      v225 = (void *)((char *)v547 + v223);
      uint64_t v226 = v225[1];
      void *v224 = *v225;
      v224[1] = v226;
      *((unsigned char *)v546 + v544[56]) = *((unsigned char *)v547 + v544[56]);
      *((unsigned char *)v546 + v544[57]) = *((unsigned char *)v547 + v544[57]);
      uint64_t v227 = v544[58];
      v228 = (void *)((char *)v546 + v227);
      v229 = (void *)((char *)v547 + v227);
      __dstb = (void *)v229[1];
      void *v228 = *v229;
      v228[1] = __dstb;
      uint64_t v230 = v544[59];
      v231 = (void *)((char *)v546 + v230);
      v232 = (void *)((char *)v547 + v230);
      uint64_t v535 = v232[1];
      void *v231 = *v232;
      v231[1] = v535;
      uint64_t v233 = v544[60];
      v234 = (void *)((char *)v546 + v233);
      v235 = (void *)((char *)v547 + v233);
      v534 = (void *)v235[1];
      void *v234 = *v235;
      v234[1] = v534;
      uint64_t v236 = v544[61];
      v237 = (char *)v546 + v236;
      v238 = (char *)v547 + v236;
      *(void *)v237 = *(void *)v238;
      v237[8] = v238[8];
      uint64_t v239 = v544[62];
      v240 = (void *)((char *)v546 + v239);
      v241 = (void *)((char *)v547 + v239);
      uint64_t v242 = v241[1];
      void *v240 = *v241;
      v240[1] = v242;
      uint64_t v243 = v544[63];
      v244 = (char *)v546 + v243;
      v245 = (char *)v547 + v243;
      *(_DWORD *)v244 = *(_DWORD *)v245;
      v244[4] = v245[4];
      uint64_t v246 = v544[64];
      v247 = (void *)((char *)v546 + v246);
      v248 = (void *)((char *)v547 + v246);
      uint64_t v249 = v248[1];
      void *v247 = *v248;
      v247[1] = v249;
      uint64_t v250 = v544[65];
      v251 = (char *)v546 + v250;
      v252 = (char *)v547 + v250;
      v251[8] = v252[8];
      *(void *)v251 = *(void *)v252;
      uint64_t v253 = v544[66];
      v254 = (char *)v546 + v253;
      v255 = (char *)v547 + v253;
      *(_OWORD *)v254 = *(_OWORD *)v255;
      v254[16] = v255[16];
      uint64_t v256 = v544[67];
      v257 = (void *)((char *)v546 + v256);
      v258 = (void *)((char *)v547 + v256);
      uint64_t v259 = v258[1];
      void *v257 = *v258;
      v257[1] = v259;
      *(void *)((char *)v546 + v544[68]) = *(void *)((char *)v547 + v544[68]);
      uint64_t v260 = v544[69];
      v261 = (void *)((char *)v546 + v260);
      v262 = (void *)((char *)v547 + v260);
      uint64_t v263 = v262[1];
      void *v261 = *v262;
      v261[1] = v263;
      *((unsigned char *)v546 + v544[70]) = *((unsigned char *)v547 + v544[70]);
      *((unsigned char *)v546 + v544[71]) = *((unsigned char *)v547 + v544[71]);
      *((unsigned char *)v546 + v544[72]) = *((unsigned char *)v547 + v544[72]);
      uint64_t v264 = v544[73];
      v265 = (char *)v546 + v264;
      v266 = (char *)v547 + v264;
      *(void *)v265 = *(void *)v266;
      v265[8] = v266[8];
      uint64_t v267 = *(int *)(v528 + 20);
      v548 = (_OWORD *)((char *)v546 + v267);
      v268 = (_OWORD *)((char *)v216 + v267);
      uint64_t v269 = *((void *)v544 - 1);
      v270 = *(unsigned int (**)(_OWORD *, uint64_t, int *))(v269 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v271 = v268;
      swift_bridgeObjectRetain();
      if (v270(v268, 1, v544))
      {
        uint64_t v272 = sub_1A07856F8(&qword_1E94FBB18);
        memcpy(v548, v268, *(void *)(*(void *)(v272 - 8) + 64));
      }
      else
      {
        uint64_t v536 = v269;
        uint64_t v273 = *((void *)v268 + 1);
        if (v273 == 1)
        {
          long long v274 = v268[3];
          v275 = v548;
          v548[2] = v268[2];
          v548[3] = v274;
          *((unsigned char *)v548 + 64) = *((unsigned char *)v268 + 64);
          long long v276 = v268[1];
          _OWORD *v548 = *v268;
          v548[1] = v276;
        }
        else
        {
          v275 = v548;
          *(void *)v548 = *(void *)v268;
          *((void *)v548 + 1) = v273;
          uint64_t v277 = *((void *)v268 + 3);
          *((void *)v548 + 2) = *((void *)v268 + 2);
          *((void *)v548 + 3) = v277;
          uint64_t v278 = *((void *)v268 + 5);
          *((void *)v548 + 4) = *((void *)v268 + 4);
          *((void *)v548 + 5) = v278;
          uint64_t v279 = *((void *)v268 + 7);
          *((void *)v548 + 6) = *((void *)v268 + 6);
          *((void *)v548 + 7) = v279;
          *((unsigned char *)v548 + 64) = *((unsigned char *)v268 + 64);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        v280 = v544;
        uint64_t v281 = *((void *)v268 + 10);
        v275[9] = *((void *)v268 + 9);
        v275[10] = v281;
        uint64_t v282 = *((void *)v268 + 12);
        v275[11] = *((void *)v268 + 11);
        v275[12] = v282;
        uint64_t v283 = *((void *)v268 + 14);
        v275[13] = v271[13];
        v275[14] = v283;
        uint64_t v284 = v271[16];
        v275[15] = v271[15];
        v275[16] = v284;
        uint64_t v285 = v271[18];
        v275[17] = v271[17];
        v275[18] = v285;
        v286 = v275;
        uint64_t v287 = v271[20];
        v286[19] = v271[19];
        v286[20] = v287;
        v288 = v271;
        uint64_t v289 = v271[21];
        uint64_t v290 = v271[22];
        v286[21] = v289;
        v286[22] = v290;
        uint64_t v291 = v288[24];
        v286[23] = v288[23];
        v286[24] = v291;
        v286[25] = v288[25];
        *((_WORD *)v286 + 104) = *((_WORD *)v288 + 104);
        uint64_t v292 = v288[28];
        v286[27] = v288[27];
        v286[28] = v292;
        uint64_t v293 = v544[16];
        __dsta = (char *)v286 + v293;
        v545 = v288;
        v294 = (char *)v288 + v293;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v550(v294, 1, v543))
        {
          uint64_t v295 = sub_1A07856F8((uint64_t *)&unk_1E94FAF20);
          memcpy(__dsta, v294, *(void *)(*(void *)(v295 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v542 + 16))(__dsta, v294, v543);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v542 + 56))(__dsta, 0, 1, v543);
        }
        uint64_t v296 = v543;
        uint64_t v297 = v280[17];
        v298 = (char *)v548 + v297;
        uint64_t v299 = (uint64_t)v545 + v297;
        *(void *)v298 = *(void *)v299;
        v298[8] = *(unsigned char *)(v299 + 8);
        uint64_t v300 = v280[18];
        v301 = (void *)((char *)v548 + v300);
        v302 = (void *)((char *)v545 + v300);
        uint64_t v303 = v302[1];
        void *v301 = *v302;
        v301[1] = v303;
        uint64_t v304 = v280[19];
        v305 = (void *)((char *)v548 + v304);
        v306 = (void *)((char *)v545 + v304);
        uint64_t v307 = v306[1];
        void *v305 = *v306;
        v305[1] = v307;
        uint64_t v308 = v280[20];
        v309 = (void *)((char *)v548 + v308);
        v310 = (void *)((char *)v545 + v308);
        uint64_t v311 = v310[1];
        void *v309 = *v310;
        v309[1] = v311;
        uint64_t v312 = v280[21];
        v313 = (void *)((char *)v548 + v312);
        v314 = (void *)((char *)v545 + v312);
        uint64_t v315 = v314[1];
        void *v313 = *v314;
        v313[1] = v315;
        uint64_t v316 = v280[22];
        v317 = (char *)v548 + v316;
        uint64_t v318 = (uint64_t)v545 + v316;
        *(void *)v317 = *(void *)v318;
        v317[8] = *(unsigned char *)(v318 + 8);
        uint64_t v319 = v280[23];
        v320 = (void *)((char *)v548 + v319);
        v321 = (void *)((char *)v545 + v319);
        uint64_t v322 = v321[1];
        void *v320 = *v321;
        v320[1] = v322;
        uint64_t v323 = v280[24];
        v324 = (void *)((char *)v548 + v323);
        v325 = (void *)((char *)v545 + v323);
        uint64_t v326 = v325[1];
        void *v324 = *v325;
        v324[1] = v326;
        uint64_t v327 = v280[25];
        v328 = (char *)v548 + v327;
        v329 = (void *)((char *)v545 + v327);
        unint64_t v330 = *(void *)((char *)v545 + v327 + 8);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v330 >> 60 == 15)
        {
          *(_OWORD *)v328 = *(_OWORD *)v329;
        }
        else
        {
          uint64_t v331 = *v329;
          sub_1A08AF278(*v329, v330);
          *(void *)v328 = v331;
          *((void *)v328 + 1) = v330;
        }
        uint64_t v332 = v280[26];
        v333 = v548;
        v334 = (void *)((char *)v548 + v332);
        v335 = v545;
        v336 = (void *)((char *)v545 + v332);
        uint64_t v337 = v336[1];
        void *v334 = *v336;
        v334[1] = v337;
        *(void *)((char *)v548 + v280[27]) = *(void *)((char *)v545 + v280[27]);
        uint64_t v338 = v280[28];
        v339 = (char *)v548 + v338;
        v340 = (void *)((char *)v545 + v338);
        unint64_t v341 = *(void *)((char *)v545 + v338 + 8);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v341 >> 60 == 15)
        {
          *(_OWORD *)v339 = *(_OWORD *)v340;
        }
        else
        {
          uint64_t v342 = *v340;
          sub_1A08AF278(*v340, v341);
          *(void *)v339 = v342;
          *((void *)v339 + 1) = v341;
        }
        uint64_t v343 = v280[29];
        v344 = (char *)v548 + v343;
        v345 = (char *)v545 + v343;
        if (v550((char *)v545 + v343, 1, v543))
        {
          uint64_t v346 = sub_1A07856F8((uint64_t *)&unk_1E94FAF20);
          memcpy(v344, v345, *(void *)(*(void *)(v346 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v542 + 16))(v344, v345, v543);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v542 + 56))(v344, 0, 1, v543);
        }
        uint64_t v347 = v280[30];
        v348 = (char *)v548 + v347;
        v349 = (char *)v545 + v347;
        if (v550((char *)v545 + v347, 1, v543))
        {
          uint64_t v350 = sub_1A07856F8((uint64_t *)&unk_1E94FAF20);
          memcpy(v348, v349, *(void *)(*(void *)(v350 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v542 + 16))(v348, v349, v543);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v542 + 56))(v348, 0, 1, v543);
        }
        uint64_t v351 = v280[31];
        v352 = (char *)v548 + v351;
        v353 = (char *)v545 + v351;
        if (v550((char *)v545 + v351, 1, v543))
        {
          uint64_t v354 = sub_1A07856F8((uint64_t *)&unk_1E94FAF20);
          memcpy(v352, v353, *(void *)(*(void *)(v354 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v542 + 16))(v352, v353, v543);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v542 + 56))(v352, 0, 1, v543);
        }
        uint64_t v355 = v280[32];
        v356 = (char *)v548 + v355;
        uint64_t v357 = (uint64_t)v545 + v355;
        *(void *)v356 = *(void *)v357;
        v356[8] = *(unsigned char *)(v357 + 8);
        *((unsigned char *)v548 + v280[33]) = *((unsigned char *)v545 + v280[33]);
        uint64_t v358 = v280[34];
        v359 = (char *)v548 + v358;
        v360 = (void *)((char *)v545 + v358);
        unint64_t v361 = v360[1];
        if (v361 >> 60 == 15)
        {
          *(_OWORD *)v359 = *(_OWORD *)v360;
        }
        else
        {
          uint64_t v362 = *v360;
          sub_1A08AF278(*v360, v360[1]);
          *(void *)v359 = v362;
          *((void *)v359 + 1) = v361;
        }
        uint64_t v363 = v280[35];
        v364 = (void *)((char *)v548 + v363);
        v365 = (void *)((char *)v545 + v363);
        uint64_t v366 = v365[1];
        void *v364 = *v365;
        v364[1] = v366;
        uint64_t v367 = v280[36];
        v368 = (char *)v548 + v367;
        v369 = (char *)v545 + v367;
        swift_bridgeObjectRetain();
        if (v550(v369, 1, v543))
        {
          uint64_t v370 = sub_1A07856F8((uint64_t *)&unk_1E94FAF20);
          memcpy(v368, v369, *(void *)(*(void *)(v370 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v542 + 16))(v368, v369, v543);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v542 + 56))(v368, 0, 1, v543);
        }
        uint64_t v371 = v280[37];
        v372 = (char *)v548 + v371;
        uint64_t v373 = (uint64_t)v545 + v371;
        *(void *)v372 = *(void *)v373;
        v372[8] = *(unsigned char *)(v373 + 8);
        uint64_t v374 = v280[38];
        v375 = (char *)v548 + v374;
        v376 = (void *)((char *)v545 + v374);
        unint64_t v377 = v376[1];
        if (v377 >> 60 == 15)
        {
          *(_OWORD *)v375 = *(_OWORD *)v376;
        }
        else
        {
          uint64_t v378 = *v376;
          sub_1A08AF278(*v376, v376[1]);
          *(void *)v375 = v378;
          *((void *)v375 + 1) = v377;
        }
        uint64_t v379 = v280[39];
        v380 = (void *)((char *)v548 + v379);
        v381 = (void *)((char *)v545 + v379);
        if (v524((void *)((char *)v545 + v379), 1, v541))
        {
          uint64_t v382 = sub_1A07856F8(&qword_1E94FBB10);
          memcpy(v380, v381, *(void *)(*(void *)(v382 - 8) + 64));
        }
        else
        {
          uint64_t v383 = v381[1];
          void *v380 = *v381;
          v380[1] = v383;
          v384 = v381 + 2;
          unint64_t v385 = v381[3];
          swift_bridgeObjectRetain();
          if (v385 >> 60 == 15)
          {
            *((_OWORD *)v380 + 1) = *v384;
          }
          else
          {
            uint64_t v386 = *(void *)v384;
            sub_1A08AF278(v386, v385);
            v380[2] = v386;
            v380[3] = v385;
          }
          v380[4] = v381[4];
          *((unsigned char *)v380 + 40) = *((unsigned char *)v381 + 40);
          uint64_t v387 = v381[7];
          v380[6] = v381[6];
          v380[7] = v387;
          uint64_t v388 = v381[9];
          v380[8] = v381[8];
          v380[9] = v388;
          uint64_t v389 = v381[11];
          v380[10] = v381[10];
          v380[11] = v389;
          uint64_t v390 = v381[13];
          v380[12] = v381[12];
          v380[13] = v390;
          *((_WORD *)v380 + 56) = *((_WORD *)v381 + 56);
          uint64_t v391 = v381[16];
          v380[15] = v381[15];
          v380[16] = v391;
          *((unsigned char *)v380 + 136) = *((unsigned char *)v381 + 136);
          uint64_t v392 = v381[19];
          v380[18] = v381[18];
          v380[19] = v392;
          uint64_t v393 = v541[16];
          v522 = (char *)v381 + v393;
          v523 = (char *)v380 + v393;
          uint64_t v394 = sub_1A09F34B8();
          uint64_t v395 = *(void *)(v394 - 8);
          v396 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v395 + 48);
          uint64_t v397 = v394;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v525 = v395;
          if (v396(v522, 1, v397))
          {
            uint64_t v398 = sub_1A07856F8(&qword_1E94FBB08);
            memcpy(v523, v522, *(void *)(*(void *)(v398 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v395 + 16))(v523, v522, v397);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v395 + 56))(v523, 0, 1, v397);
          }
          uint64_t v399 = v541[17];
          v400 = (char *)v380 + v399;
          v401 = (char *)v381 + v399;
          v402 = v396;
          unsigned int v403 = v396((char *)v381 + v399, 1, v397);
          v333 = v548;
          uint64_t v296 = v543;
          v335 = v545;
          if (v403)
          {
            uint64_t v404 = sub_1A07856F8(&qword_1E94FBB08);
            memcpy(v400, v401, *(void *)(*(void *)(v404 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v525 + 16))(v400, v401, v397);
            uint64_t v296 = v543;
            (*(void (**)(char *, void, uint64_t, uint64_t))(v525 + 56))(v400, 0, 1, v397);
          }
          *(void *)((char *)v380 + v541[18]) = *(void *)((char *)v381 + v541[18]);
          uint64_t v405 = v541[19];
          v406 = (char *)v380 + v405;
          v407 = (char *)v381 + v405;
          swift_bridgeObjectRetain();
          if (v402(v407, 1, v397))
          {
            uint64_t v408 = sub_1A07856F8(&qword_1E94FBB08);
            memcpy(v406, v407, *(void *)(*(void *)(v408 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v525 + 16))(v406, v407, v397);
            uint64_t v296 = v543;
            (*(void (**)(char *, void, uint64_t, uint64_t))(v525 + 56))(v406, 0, 1, v397);
          }
          uint64_t v409 = v541[20];
          v410 = (char *)v380 + v409;
          v411 = (char *)v381 + v409;
          if (v402((char *)v381 + v409, 1, v397))
          {
            uint64_t v412 = sub_1A07856F8(&qword_1E94FBB08);
            memcpy(v410, v411, *(void *)(*(void *)(v412 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v525 + 16))(v410, v411, v397);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v525 + 56))(v410, 0, 1, v397);
            uint64_t v296 = v543;
          }
          *(void *)((char *)v380 + v541[21]) = *(void *)((char *)v381 + v541[21]);
          uint64_t v413 = v541[22];
          v414 = (char *)v380 + v413;
          v415 = (_OWORD *)((char *)v381 + v413);
          unint64_t v416 = *(void *)((char *)v381 + v413 + 8);
          swift_bridgeObjectRetain();
          if (v416 >> 60 == 15)
          {
            *(_OWORD *)v414 = *v415;
          }
          else
          {
            uint64_t v417 = *(void *)v415;
            sub_1A08AF278(v417, v416);
            *(void *)v414 = v417;
            *((void *)v414 + 1) = v416;
          }
          uint64_t v418 = v541[23];
          v419 = (void *)((char *)v380 + v418);
          v420 = (void *)((char *)v381 + v418);
          uint64_t v421 = v420[1];
          void *v419 = *v420;
          v419[1] = v421;
          uint64_t v422 = v541[24];
          v423 = (char *)v380 + v422;
          v424 = (char *)v381 + v422;
          v423[8] = v424[8];
          *(void *)v423 = *(void *)v424;
          uint64_t v425 = v541[25];
          v426 = (char *)v380 + v425;
          v427 = (char *)v381 + v425;
          *(void *)v426 = *(void *)v427;
          v426[8] = v427[8];
          *((unsigned char *)v380 + v541[26]) = *((unsigned char *)v381 + v541[26]);
          uint64_t v428 = v541[27];
          v429 = (char *)v380 + v428;
          v430 = (char *)v381 + v428;
          swift_bridgeObjectRetain();
          if (v550(v430, 1, v296))
          {
            uint64_t v431 = sub_1A07856F8((uint64_t *)&unk_1E94FAF20);
            memcpy(v429, v430, *(void *)(*(void *)(v431 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v542 + 16))(v429, v430, v296);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v542 + 56))(v429, 0, 1, v296);
          }
          *(void *)((char *)v380 + v541[28]) = *(void *)((char *)v381 + v541[28]);
          uint64_t v432 = v541[29];
          v433 = (void *)((char *)v380 + v432);
          v434 = (void *)((char *)v381 + v432);
          uint64_t v435 = v434[1];
          void *v433 = *v434;
          v433[1] = v435;
          *((unsigned char *)v380 + v541[30]) = *((unsigned char *)v381 + v541[30]);
          v436 = *(void (**)(void *, void, uint64_t, int *))(v526 + 56);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v436(v380, 0, 1, v541);
        }
        uint64_t v437 = v280[40];
        v438 = (void *)((char *)v333 + v437);
        v439 = (void *)((char *)v335 + v437);
        uint64_t v440 = v439[1];
        void *v438 = *v439;
        v438[1] = v440;
        *((unsigned char *)v333 + v280[41]) = *((unsigned char *)v335 + v280[41]);
        uint64_t v441 = v280[42];
        v442 = (void *)((char *)v333 + v441);
        v443 = (void *)((char *)v335 + v441);
        uint64_t v444 = v443[1];
        void *v442 = *v443;
        v442[1] = v444;
        *((unsigned char *)v333 + v280[43]) = *((unsigned char *)v335 + v280[43]);
        *((unsigned char *)v333 + v280[44]) = *((unsigned char *)v335 + v280[44]);
        *((unsigned char *)v333 + v280[45]) = *((unsigned char *)v335 + v280[45]);
        *((unsigned char *)v333 + v280[46]) = *((unsigned char *)v335 + v280[46]);
        uint64_t v445 = v280[47];
        v446 = (void *)((char *)v333 + v445);
        v447 = (void *)((char *)v335 + v445);
        uint64_t v448 = v447[1];
        void *v446 = *v447;
        v446[1] = v448;
        uint64_t v449 = v280[48];
        v450 = (void *)((char *)v333 + v449);
        v451 = (void *)((char *)v335 + v449);
        uint64_t v452 = v451[1];
        void *v450 = *v451;
        v450[1] = v452;
        *(void *)((char *)v333 + v280[49]) = *(void *)((char *)v335 + v280[49]);
        uint64_t v453 = v280[50];
        v454 = (void *)((char *)v333 + v453);
        v455 = (void *)((char *)v335 + v453);
        v456 = v333;
        uint64_t v457 = v455[1];
        void *v454 = *v455;
        v454[1] = v457;
        uint64_t v458 = v280[51];
        v459 = (void *)((char *)v456 + v458);
        v460 = (void *)((char *)v335 + v458);
        v461 = (char *)v335;
        uint64_t v462 = v460[1];
        void *v459 = *v460;
        v459[1] = v462;
        uint64_t v463 = v280[52];
        v464 = (char *)v456 + v463;
        v465 = &v461[v463];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v550(v465, 1, v296))
        {
          uint64_t v466 = sub_1A07856F8((uint64_t *)&unk_1E94FAF20);
          memcpy(v464, v465, *(void *)(*(void *)(v466 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v542 + 16))(v464, v465, v296);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v542 + 56))(v464, 0, 1, v296);
        }
        uint64_t v467 = v280[53];
        v468 = (char *)v548 + v467;
        uint64_t v469 = (uint64_t)v545 + v467;
        *(void *)v468 = *(void *)v469;
        v468[8] = *(unsigned char *)(v469 + 8);
        uint64_t v470 = v280[54];
        v471 = (char *)v548 + v470;
        uint64_t v472 = (uint64_t)v545 + v470;
        v471[8] = *(unsigned char *)(v472 + 8);
        *(void *)v471 = *(void *)v472;
        uint64_t v473 = v280[55];
        v474 = (void *)((char *)v548 + v473);
        v475 = (void *)((char *)v545 + v473);
        uint64_t v476 = v475[1];
        void *v474 = *v475;
        v474[1] = v476;
        *((unsigned char *)v548 + v280[56]) = *((unsigned char *)v545 + v280[56]);
        *((unsigned char *)v548 + v280[57]) = *((unsigned char *)v545 + v280[57]);
        uint64_t v477 = v280[58];
        v478 = (void *)((char *)v548 + v477);
        v479 = (void *)((char *)v545 + v477);
        uint64_t v553 = v479[1];
        void *v478 = *v479;
        v478[1] = v553;
        uint64_t v480 = v280[59];
        v481 = (void *)((char *)v548 + v480);
        v482 = (void *)((char *)v545 + v480);
        uint64_t v551 = v482[1];
        void *v481 = *v482;
        v481[1] = v551;
        uint64_t v483 = v280[60];
        v484 = (void *)((char *)v548 + v483);
        v485 = (void *)((char *)v545 + v483);
        uint64_t v486 = v485[1];
        void *v484 = *v485;
        v484[1] = v486;
        uint64_t v487 = v280[61];
        v488 = (char *)v548 + v487;
        uint64_t v489 = (uint64_t)v545 + v487;
        *(void *)v488 = *(void *)v489;
        v488[8] = *(unsigned char *)(v489 + 8);
        uint64_t v490 = v280[62];
        v491 = (void *)((char *)v548 + v490);
        v492 = (void *)((char *)v545 + v490);
        uint64_t v493 = v492[1];
        void *v491 = *v492;
        v491[1] = v493;
        uint64_t v494 = v280[63];
        v495 = (char *)v548 + v494;
        uint64_t v496 = (uint64_t)v545 + v494;
        *(_DWORD *)v495 = *(_DWORD *)v496;
        v495[4] = *(unsigned char *)(v496 + 4);
        uint64_t v497 = v280[64];
        v498 = (void *)((char *)v548 + v497);
        v499 = (void *)((char *)v545 + v497);
        uint64_t v500 = v499[1];
        void *v498 = *v499;
        v498[1] = v500;
        uint64_t v501 = v280[65];
        v502 = (char *)v548 + v501;
        uint64_t v503 = (uint64_t)v545 + v501;
        v502[8] = *(unsigned char *)(v503 + 8);
        *(void *)v502 = *(void *)v503;
        uint64_t v504 = v280[66];
        v505 = (char *)v548 + v504;
        uint64_t v506 = (uint64_t)v545 + v504;
        *(_OWORD *)v505 = *(_OWORD *)v506;
        v505[16] = *(unsigned char *)(v506 + 16);
        uint64_t v507 = v280[67];
        v508 = (void *)((char *)v548 + v507);
        v509 = (void *)((char *)v545 + v507);
        uint64_t v510 = v509[1];
        void *v508 = *v509;
        v508[1] = v510;
        *(void *)((char *)v548 + v280[68]) = *(void *)((char *)v545 + v280[68]);
        uint64_t v511 = v280[69];
        v512 = (void *)((char *)v548 + v511);
        v513 = (void *)((char *)v545 + v511);
        uint64_t v514 = v513[1];
        void *v512 = *v513;
        v512[1] = v514;
        *((unsigned char *)v548 + v280[70]) = *((unsigned char *)v545 + v280[70]);
        *((unsigned char *)v548 + v280[71]) = *((unsigned char *)v545 + v280[71]);
        *((unsigned char *)v548 + v280[72]) = *((unsigned char *)v545 + v280[72]);
        uint64_t v515 = v280[73];
        v516 = (char *)v548 + v515;
        uint64_t v517 = (uint64_t)v545 + v515;
        v516[8] = *(unsigned char *)(v517 + 8);
        *(void *)v516 = *(void *)v517;
        v518 = *(void (**)(_OWORD *, void, uint64_t, int *))(v536 + 56);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v518(v548, 0, 1, v280);
      }
      uint64_t v27 = a2;
      uint64_t v26 = a1;
      uint64_t v28 = a3;
      (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v527 + 56))(v546, 0, 1, v528);
    }
    *(void *)(v26 + *(int *)(v28 + 140)) = *(uint64_t *)((char *)v27 + *(int *)(v28 + 140));
    swift_bridgeObjectRetain();
  }
  return v26;
}

uint64_t sub_1A08F5CF4(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 136);
  uint64_t v5 = type metadata accessor for RemoteIntentMessageItem(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v4, 1, v5))
  {
    if (*(void *)(v4 + 8) != 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v6 = (int *)type metadata accessor for RemoteIntentItemContent(0);
    uint64_t v7 = v4 + v6[16];
    uint64_t v8 = sub_1A09F3478();
    uint64_t v9 = *(void *)(v8 - 8);
    uint64_t v10 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
    if (!v10(v7, 1, v8)) {
      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v11 = (uint64_t *)(v4 + v6[25]);
    unint64_t v12 = v11[1];
    if (v12 >> 60 != 15) {
      sub_1A08AF2E4(*v11, v12);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v13 = (uint64_t *)(v4 + v6[28]);
    unint64_t v14 = v13[1];
    if (v14 >> 60 != 15) {
      sub_1A08AF2E4(*v13, v14);
    }
    uint64_t v15 = v4 + v6[29];
    if (!v10(v15, 1, v8)) {
      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v15, v8);
    }
    uint64_t v16 = v4 + v6[30];
    if (!v10(v16, 1, v8)) {
      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v16, v8);
    }
    uint64_t v17 = v4 + v6[31];
    if (!v10(v17, 1, v8)) {
      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v17, v8);
    }
    uint64_t v18 = (uint64_t *)(v4 + v6[34]);
    unint64_t v19 = v18[1];
    if (v19 >> 60 != 15) {
      sub_1A08AF2E4(*v18, v19);
    }
    swift_bridgeObjectRelease();
    uint64_t v20 = v4 + v6[36];
    if (!v10(v20, 1, v8)) {
      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v20, v8);
    }
    uint64_t v70 = v10;
    uint64_t v21 = (uint64_t *)(v4 + v6[38]);
    unint64_t v22 = v21[1];
    if (v22 >> 60 != 15) {
      sub_1A08AF2E4(*v21, v22);
    }
    uint64_t v23 = v4 + v6[39];
    uint64_t v24 = (int *)type metadata accessor for RemoteIntentMessageSummaryInfo();
    id v68 = *(unsigned int (**)(uint64_t, uint64_t, int *))(*((void *)v24 - 1) + 48);
    if (!v68(v23, 1, v24))
    {
      uint64_t v65 = v5;
      uint64_t v66 = v9;
      swift_bridgeObjectRelease();
      unint64_t v25 = *(void *)(v23 + 24);
      if (v25 >> 60 != 15) {
        sub_1A08AF2E4(*(void *)(v23 + 16), v25);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v26 = v23 + v24[16];
      uint64_t v27 = sub_1A09F34B8();
      uint64_t v28 = *(void *)(v27 - 8);
      uint64_t v29 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v28 + 48);
      if (!v29(v26, 1, v27)) {
        (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v26, v27);
      }
      uint64_t v30 = v23 + v24[17];
      if (!v29(v30, 1, v27)) {
        (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v30, v27);
      }
      swift_bridgeObjectRelease();
      uint64_t v31 = v23 + v24[19];
      if (!v29(v31, 1, v27)) {
        (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v31, v27);
      }
      uint64_t v32 = v23 + v24[20];
      if (!v29(v32, 1, v27)) {
        (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v32, v27);
      }
      swift_bridgeObjectRelease();
      uint64_t v33 = (uint64_t *)(v23 + v24[22]);
      unint64_t v34 = v33[1];
      uint64_t v9 = v66;
      if (v34 >> 60 != 15) {
        sub_1A08AF2E4(*v33, v34);
      }
      swift_bridgeObjectRelease();
      uint64_t v35 = v23 + v24[27];
      uint64_t v5 = v65;
      if (!v70(v35, 1, v8)) {
        (*(void (**)(uint64_t, uint64_t))(v66 + 8))(v35, v8);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v36 = v4 + v6[52];
    if (!v70(v36, 1, v8)) {
      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v36, v8);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v37 = v4 + *(int *)(v5 + 20);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((void *)v6 - 1) + 48))(v37, 1, v6))
    {
      if (*(void *)(v37 + 8) != 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v38 = v37 + v6[16];
      uint64_t v39 = v70;
      if (!v70(v38, 1, v8)) {
        (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v38, v8);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v40 = (uint64_t *)(v37 + v6[25]);
      unint64_t v41 = v40[1];
      if (v41 >> 60 != 15) {
        sub_1A08AF2E4(*v40, v41);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v42 = (uint64_t *)(v37 + v6[28]);
      unint64_t v43 = v42[1];
      if (v43 >> 60 != 15) {
        sub_1A08AF2E4(*v42, v43);
      }
      uint64_t v44 = v37 + v6[29];
      if (!v70(v44, 1, v8)) {
        (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v44, v8);
      }
      uint64_t v45 = v37 + v6[30];
      if (!v70(v45, 1, v8)) {
        (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v45, v8);
      }
      uint64_t v46 = v37 + v6[31];
      if (!v70(v46, 1, v8)) {
        (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v46, v8);
      }
      uint64_t v47 = (uint64_t *)(v37 + v6[34]);
      unint64_t v48 = v47[1];
      if (v48 >> 60 != 15) {
        sub_1A08AF2E4(*v47, v48);
      }
      swift_bridgeObjectRelease();
      uint64_t v49 = v37 + v6[36];
      if (!v70(v49, 1, v8)) {
        (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v49, v8);
      }
      int v50 = (uint64_t *)(v37 + v6[38]);
      unint64_t v51 = v50[1];
      if (v51 >> 60 != 15) {
        sub_1A08AF2E4(*v50, v51);
      }
      uint64_t v52 = v37 + v6[39];
      if (!v68(v52, 1, v24))
      {
        uint64_t v67 = v9;
        swift_bridgeObjectRelease();
        unint64_t v53 = *(void *)(v52 + 24);
        if (v53 >> 60 != 15) {
          sub_1A08AF2E4(*(void *)(v52 + 16), v53);
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v54 = v52 + v24[16];
        uint64_t v55 = sub_1A09F34B8();
        uint64_t v69 = *(void *)(v55 - 8);
        uint64_t v56 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v69 + 48);
        if (!v56(v54, 1, v55)) {
          (*(void (**)(uint64_t, uint64_t))(v69 + 8))(v54, v55);
        }
        uint64_t v57 = v52 + v24[17];
        if (!v56(v57, 1, v55)) {
          (*(void (**)(uint64_t, uint64_t))(v69 + 8))(v57, v55);
        }
        swift_bridgeObjectRelease();
        uint64_t v58 = v52 + v24[19];
        if (!v56(v58, 1, v55)) {
          (*(void (**)(uint64_t, uint64_t))(v69 + 8))(v58, v55);
        }
        uint64_t v59 = v52 + v24[20];
        if (!v56(v59, 1, v55)) {
          (*(void (**)(uint64_t, uint64_t))(v69 + 8))(v59, v55);
        }
        swift_bridgeObjectRelease();
        int v60 = (uint64_t *)(v52 + v24[22]);
        unint64_t v61 = v60[1];
        uint64_t v9 = v67;
        if (v61 >> 60 != 15) {
          sub_1A08AF2E4(*v60, v61);
        }
        swift_bridgeObjectRelease();
        uint64_t v62 = v52 + v24[27];
        if (!v70(v62, 1, v8)) {
          (*(void (**)(uint64_t, uint64_t))(v67 + 8))(v62, v8);
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v39 = v70;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v63 = v37 + v6[52];
      if (!v39(v63, 1, v8)) {
        (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v63, v8);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }

  return swift_bridgeObjectRelease();
}

uint64_t sub_1A08F6BB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v547 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v547;
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  uint64_t v4 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v4;
  uint64_t v5 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v5;
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  uint64_t v6 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v6;
  uint64_t v7 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v7;
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  uint64_t v8 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v8;
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  uint64_t v9 = *(void *)(a2 + 160);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = v9;
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(_DWORD *)(a1 + 176) = *(_DWORD *)(a2 + 176);
  uint64_t v10 = *(void *)(a2 + 192);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(void *)(a1 + 192) = v10;
  uint64_t v11 = *(void *)(a2 + 208);
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  *(void *)(a1 + 208) = v11;
  *(unsigned char *)(a1 + 216) = *(unsigned char *)(a2 + 216);
  uint64_t v12 = *(void *)(a2 + 232);
  *(void *)(a1 + 224) = *(void *)(a2 + 224);
  *(void *)(a1 + 232) = v12;
  uint64_t v13 = *(void *)(a2 + 248);
  *(void *)(a1 + 240) = *(void *)(a2 + 240);
  *(void *)(a1 + 248) = v13;
  uint64_t v14 = *(void *)(a2 + 264);
  *(void *)(a1 + 256) = *(void *)(a2 + 256);
  *(void *)(a1 + 264) = v14;
  uint64_t v15 = *(void *)(a2 + 272);
  *(unsigned char *)(a1 + 280) = *(unsigned char *)(a2 + 280);
  *(void *)(a1 + 272) = v15;
  *(unsigned char *)(a1 + 281) = *(unsigned char *)(a2 + 281);
  *(unsigned char *)(a1 + 282) = *(unsigned char *)(a2 + 282);
  uint64_t v16 = *(void *)(a2 + 288);
  *(unsigned char *)(a1 + 296) = *(unsigned char *)(a2 + 296);
  *(void *)(a1 + 288) = v16;
  *(unsigned char *)(a1 + 297) = *(unsigned char *)(a2 + 297);
  uint64_t v17 = *(void *)(a2 + 304);
  uint64_t v18 = *(void *)(a2 + 312);
  uint64_t v19 = *(void *)(a2 + 320);
  *(unsigned char *)(a1 + 328) = *(unsigned char *)(a2 + 328);
  *(void *)(a1 + 312) = v18;
  *(void *)(a1 + 320) = v19;
  uint64_t v20 = *(int *)(a3 + 136);
  v544 = (_OWORD *)(a1 + v20);
  v545 = (_OWORD *)(a2 + v20);
  *(void *)(a1 + 304) = v17;
  uint64_t v21 = type metadata accessor for RemoteIntentMessageItem(0);
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v528 = *(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v22 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v528(v545, 1, v21))
  {
    uint64_t v23 = sub_1A07856F8(&qword_1E94FBB20);
    memcpy(v544, v545, *(void *)(*(void *)(v23 - 8) + 64));
    uint64_t v25 = a2;
    uint64_t v24 = a1;
    uint64_t v26 = a3;
  }
  else
  {
    uint64_t v523 = v22;
    uint64_t v524 = v21;
    uint64_t v27 = *((void *)v545 + 1);
    if (v27 == 1)
    {
      long long v28 = v545[3];
      uint64_t v29 = v544;
      v544[2] = v545[2];
      v544[3] = v28;
      *((unsigned char *)v544 + 64) = *((unsigned char *)v545 + 64);
      long long v30 = v545[1];
      _OWORD *v544 = *v545;
      v544[1] = v30;
    }
    else
    {
      uint64_t v29 = v544;
      *(void *)v544 = *(void *)v545;
      *((void *)v544 + 1) = v27;
      uint64_t v31 = *((void *)v545 + 3);
      *((void *)v544 + 2) = *((void *)v545 + 2);
      *((void *)v544 + 3) = v31;
      uint64_t v32 = *((void *)v545 + 5);
      *((void *)v544 + 4) = *((void *)v545 + 4);
      *((void *)v544 + 5) = v32;
      uint64_t v33 = *((void *)v545 + 7);
      *((void *)v544 + 6) = *((void *)v545 + 6);
      *((void *)v544 + 7) = v33;
      *((unsigned char *)v544 + 64) = *((unsigned char *)v545 + 64);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    uint64_t v34 = *((void *)v545 + 10);
    *((void *)v29 + 9) = *((void *)v545 + 9);
    *((void *)v29 + 10) = v34;
    uint64_t v548 = *((void *)v545 + 12);
    *((void *)v29 + 11) = *((void *)v545 + 11);
    *((void *)v29 + 12) = v548;
    uint64_t v35 = *((void *)v545 + 14);
    *((void *)v29 + 13) = *((void *)v545 + 13);
    *((void *)v29 + 14) = v35;
    uint64_t v36 = *((void *)v545 + 16);
    *((void *)v29 + 15) = *((void *)v545 + 15);
    *((void *)v29 + 16) = v36;
    uint64_t v37 = *((void *)v545 + 18);
    *((void *)v29 + 17) = *((void *)v545 + 17);
    *((void *)v29 + 18) = v37;
    uint64_t v38 = *((void *)v545 + 20);
    *((void *)v29 + 19) = *((void *)v545 + 19);
    *((void *)v29 + 20) = v38;
    uint64_t v39 = *((void *)v545 + 22);
    *((void *)v29 + 21) = *((void *)v545 + 21);
    *((void *)v29 + 22) = v39;
    uint64_t v40 = *((void *)v545 + 24);
    *((void *)v29 + 23) = *((void *)v545 + 23);
    *((void *)v29 + 24) = v40;
    *((void *)v29 + 25) = *((void *)v545 + 25);
    *((_WORD *)v29 + 104) = *((_WORD *)v545 + 104);
    uint64_t v41 = *((void *)v545 + 28);
    *((void *)v29 + 27) = *((void *)v545 + 27);
    *((void *)v29 + 28) = v41;
    uint64_t v542 = (int *)type metadata accessor for RemoteIntentItemContent(0);
    uint64_t v42 = v542[16];
    __dst = (char *)v29 + v42;
    uint64_t v536 = (char *)v545 + v42;
    uint64_t v43 = sub_1A09F3478();
    uint64_t v44 = *(void *)(v43 - 8);
    uint64_t v45 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v44 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v540 = v45;
    uint64_t v538 = v44;
    uint64_t v539 = v43;
    if (v45(v536, 1, v43))
    {
      uint64_t v46 = sub_1A07856F8((uint64_t *)&unk_1E94FAF20);
      memcpy(__dst, v536, *(void *)(*(void *)(v46 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v44 + 16))(__dst, v536, v43);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v44 + 56))(__dst, 0, 1, v43);
    }
    uint64_t v47 = v542[17];
    unint64_t v48 = (char *)v544 + v47;
    uint64_t v49 = (char *)v545 + v47;
    *(void *)unint64_t v48 = *(void *)v49;
    v48[8] = v49[8];
    uint64_t v50 = v542[18];
    unint64_t v51 = (void *)((char *)v544 + v50);
    uint64_t v52 = (void *)((char *)v545 + v50);
    uint64_t v53 = v52[1];
    *unint64_t v51 = *v52;
    v51[1] = v53;
    uint64_t v54 = v542[19];
    uint64_t v55 = (void *)((char *)v544 + v54);
    uint64_t v56 = (void *)((char *)v545 + v54);
    uint64_t v57 = v56[1];
    *uint64_t v55 = *v56;
    v55[1] = v57;
    uint64_t v58 = v542[20];
    uint64_t v59 = (void *)((char *)v544 + v58);
    int v60 = (void *)((char *)v545 + v58);
    uint64_t v61 = v60[1];
    *uint64_t v59 = *v60;
    v59[1] = v61;
    uint64_t v62 = v542[21];
    uint64_t v63 = (void *)((char *)v544 + v62);
    id v64 = (void *)((char *)v545 + v62);
    uint64_t v65 = v64[1];
    *uint64_t v63 = *v64;
    v63[1] = v65;
    uint64_t v66 = v542[22];
    uint64_t v67 = (char *)v544 + v66;
    id v68 = (char *)v545 + v66;
    *(void *)uint64_t v67 = *(void *)v68;
    v67[8] = v68[8];
    uint64_t v69 = v542[23];
    uint64_t v70 = (void *)((char *)v544 + v69);
    uint64_t v71 = (void *)((char *)v545 + v69);
    uint64_t v72 = v71[1];
    void *v70 = *v71;
    v70[1] = v72;
    uint64_t v73 = v542[24];
    uint64_t v74 = (void *)((char *)v544 + v73);
    uint64_t v75 = (void *)((char *)v545 + v73);
    uint64_t v76 = v75[1];
    *uint64_t v74 = *v75;
    v74[1] = v76;
    uint64_t v77 = v542[25];
    uint64_t v78 = (char *)v544 + v77;
    uint64_t v79 = (uint64_t *)((char *)v545 + v77);
    unint64_t v80 = *(void *)((char *)v545 + v77 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v80 >> 60 == 15)
    {
      *(_OWORD *)uint64_t v78 = *(_OWORD *)v79;
    }
    else
    {
      uint64_t v81 = *v79;
      sub_1A08AF278(*v79, v80);
      *(void *)uint64_t v78 = v81;
      *((void *)v78 + 1) = v80;
    }
    uint64_t v82 = v542;
    id v83 = v545;
    uint64_t v84 = v542[26];
    uint64_t v85 = (void *)((char *)v544 + v84);
    uint64_t v86 = (void *)((char *)v545 + v84);
    uint64_t v87 = v86[1];
    *uint64_t v85 = *v86;
    v85[1] = v87;
    *(void *)((char *)v544 + v542[27]) = *(void *)((char *)v545 + v542[27]);
    uint64_t v88 = v542[28];
    uint64_t v89 = (char *)v544 + v88;
    uint64_t v90 = (uint64_t *)((char *)v545 + v88);
    unint64_t v91 = *(void *)((char *)v545 + v88 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v91 >> 60 == 15)
    {
      *(_OWORD *)uint64_t v89 = *(_OWORD *)v90;
    }
    else
    {
      uint64_t v92 = *v90;
      sub_1A08AF278(*v90, v91);
      *(void *)uint64_t v89 = v92;
      *((void *)v89 + 1) = v91;
    }
    uint64_t v93 = v542[29];
    uint64_t v94 = (char *)v544 + v93;
    uint64_t v95 = (char *)v545 + v93;
    if (v540((char *)v545 + v93, 1, v539))
    {
      uint64_t v96 = sub_1A07856F8((uint64_t *)&unk_1E94FAF20);
      memcpy(v94, v95, *(void *)(*(void *)(v96 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v538 + 16))(v94, v95, v539);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v538 + 56))(v94, 0, 1, v539);
    }
    uint64_t v97 = v542[30];
    uint64_t v98 = (char *)v544 + v97;
    id v99 = (char *)v545 + v97;
    if (v540((char *)v545 + v97, 1, v539))
    {
      uint64_t v100 = sub_1A07856F8((uint64_t *)&unk_1E94FAF20);
      memcpy(v98, v99, *(void *)(*(void *)(v100 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v538 + 16))(v98, v99, v539);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v538 + 56))(v98, 0, 1, v539);
    }
    uint64_t v101 = v542[31];
    uint64_t v102 = (char *)v544 + v101;
    uint64_t v103 = (char *)v545 + v101;
    if (v540((char *)v545 + v101, 1, v539))
    {
      uint64_t v104 = sub_1A07856F8((uint64_t *)&unk_1E94FAF20);
      memcpy(v102, v103, *(void *)(*(void *)(v104 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v538 + 16))(v102, v103, v539);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v538 + 56))(v102, 0, 1, v539);
    }
    uint64_t v105 = v542[32];
    uint64_t v106 = (char *)v544 + v105;
    id v107 = (char *)v545 + v105;
    *(void *)uint64_t v106 = *(void *)v107;
    v106[8] = v107[8];
    *((unsigned char *)v544 + v542[33]) = *((unsigned char *)v545 + v542[33]);
    uint64_t v108 = v542[34];
    uint64_t v109 = (char *)v544 + v108;
    uint64_t v110 = (char *)v545 + v108;
    unint64_t v111 = *((void *)v110 + 1);
    if (v111 >> 60 == 15)
    {
      *(_OWORD *)uint64_t v109 = *(_OWORD *)v110;
    }
    else
    {
      uint64_t v112 = *(void *)v110;
      sub_1A08AF278(*(void *)v110, *((void *)v110 + 1));
      *(void *)uint64_t v109 = v112;
      *((void *)v109 + 1) = v111;
    }
    uint64_t v113 = v542[35];
    uint64_t v114 = (void *)((char *)v544 + v113);
    uint64_t v115 = (void *)((char *)v545 + v113);
    uint64_t v116 = v115[1];
    *uint64_t v114 = *v115;
    v114[1] = v116;
    uint64_t v117 = v542[36];
    uint64_t v118 = (char *)v544 + v117;
    long long v119 = (char *)v545 + v117;
    swift_bridgeObjectRetain();
    if (v540(v119, 1, v539))
    {
      uint64_t v120 = sub_1A07856F8((uint64_t *)&unk_1E94FAF20);
      memcpy(v118, v119, *(void *)(*(void *)(v120 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v538 + 16))(v118, v119, v539);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v538 + 56))(v118, 0, 1, v539);
    }
    uint64_t v121 = v542[37];
    uint64_t v122 = (char *)v544 + v121;
    char v123 = (char *)v545 + v121;
    *(void *)uint64_t v122 = *(void *)v123;
    v122[8] = v123[8];
    uint64_t v124 = v542[38];
    uint64_t v125 = (char *)v544 + v124;
    char v126 = (char *)v545 + v124;
    unint64_t v127 = *((void *)v126 + 1);
    if (v127 >> 60 == 15)
    {
      *(_OWORD *)uint64_t v125 = *(_OWORD *)v126;
    }
    else
    {
      uint64_t v128 = *(void *)v126;
      sub_1A08AF278(*(void *)v126, *((void *)v126 + 1));
      *(void *)uint64_t v125 = v128;
      *((void *)v125 + 1) = v127;
    }
    uint64_t v129 = v542[39];
    uint64_t v130 = (void *)((char *)v544 + v129);
    char v131 = (void *)((char *)v545 + v129);
    v537 = (int *)type metadata accessor for RemoteIntentMessageSummaryInfo();
    uint64_t v522 = *((void *)v537 - 1);
    v520 = *(unsigned int (**)(void *, uint64_t, int *))(v522 + 48);
    if (v520(v131, 1, v537))
    {
      uint64_t v132 = sub_1A07856F8(&qword_1E94FBB10);
      memcpy(v130, v131, *(void *)(*(void *)(v132 - 8) + 64));
    }
    else
    {
      uint64_t v133 = v131[1];
      *uint64_t v130 = *v131;
      v130[1] = v133;
      uint64_t v134 = v131 + 2;
      unint64_t v135 = v131[3];
      swift_bridgeObjectRetain();
      if (v135 >> 60 == 15)
      {
        *((_OWORD *)v130 + 1) = *v134;
      }
      else
      {
        uint64_t v136 = *(void *)v134;
        sub_1A08AF278(v136, v135);
        v130[2] = v136;
        v130[3] = v135;
      }
      v130[4] = v131[4];
      *((unsigned char *)v130 + 40) = *((unsigned char *)v131 + 40);
      uint64_t v137 = v131[7];
      v130[6] = v131[6];
      v130[7] = v137;
      uint64_t v138 = v131[9];
      v130[8] = v131[8];
      v130[9] = v138;
      uint64_t v139 = v131[11];
      v130[10] = v131[10];
      v130[11] = v139;
      uint64_t v140 = v131[13];
      v130[12] = v131[12];
      v130[13] = v140;
      *((_WORD *)v130 + 56) = *((_WORD *)v131 + 56);
      uint64_t v141 = v131[16];
      v130[15] = v131[15];
      v130[16] = v141;
      *((unsigned char *)v130 + 136) = *((unsigned char *)v131 + 136);
      uint64_t v142 = v131[19];
      v130[18] = v131[18];
      v130[19] = v142;
      uint64_t v143 = v537[16];
      v529 = (char *)v130 + v143;
      v516 = (char *)v131 + v143;
      uint64_t v144 = sub_1A09F34B8();
      uint64_t v517 = *(void *)(v144 - 8);
      uint64_t v145 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v517 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v145(v516, 1, v144))
      {
        uint64_t v146 = sub_1A07856F8(&qword_1E94FBB08);
        memcpy(v529, v516, *(void *)(*(void *)(v146 - 8) + 64));
        uint64_t v147 = v517;
      }
      else
      {
        uint64_t v147 = v517;
        (*(void (**)(char *, char *, uint64_t))(v517 + 16))(v529, v516, v144);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v517 + 56))(v529, 0, 1, v144);
      }
      uint64_t v148 = v537[17];
      uint64_t v149 = (char *)v130 + v148;
      long long v150 = (char *)v131 + v148;
      unsigned int v151 = v145((char *)v131 + v148, 1, v144);
      uint64_t v82 = v542;
      uint64_t v152 = v144;
      id v83 = v545;
      if (v151)
      {
        uint64_t v153 = sub_1A07856F8(&qword_1E94FBB08);
        memcpy(v149, v150, *(void *)(*(void *)(v153 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v147 + 16))(v149, v150, v152);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v147 + 56))(v149, 0, 1, v152);
      }
      *(void *)((char *)v130 + v537[18]) = *(void *)((char *)v131 + v537[18]);
      uint64_t v154 = v537[19];
      uint64_t v155 = (char *)v130 + v154;
      v156 = (char *)v131 + v154;
      swift_bridgeObjectRetain();
      if (v145(v156, 1, v152))
      {
        uint64_t v157 = sub_1A07856F8(&qword_1E94FBB08);
        memcpy(v155, v156, *(void *)(*(void *)(v157 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v147 + 16))(v155, v156, v152);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v147 + 56))(v155, 0, 1, v152);
      }
      uint64_t v158 = v537[20];
      uint64_t v159 = (char *)v130 + v158;
      v160 = (char *)v131 + v158;
      if (v145((char *)v131 + v158, 1, v152))
      {
        uint64_t v161 = sub_1A07856F8(&qword_1E94FBB08);
        memcpy(v159, v160, *(void *)(*(void *)(v161 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v147 + 16))(v159, v160, v152);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v147 + 56))(v159, 0, 1, v152);
      }
      *(void *)((char *)v130 + v537[21]) = *(void *)((char *)v131 + v537[21]);
      uint64_t v162 = v537[22];
      uint64_t v163 = (char *)v130 + v162;
      v164 = (_OWORD *)((char *)v131 + v162);
      unint64_t v165 = *(void *)((char *)v131 + v162 + 8);
      swift_bridgeObjectRetain();
      if (v165 >> 60 == 15)
      {
        *(_OWORD *)uint64_t v163 = *v164;
      }
      else
      {
        uint64_t v166 = *(void *)v164;
        sub_1A08AF278(v166, v165);
        *(void *)uint64_t v163 = v166;
        *((void *)v163 + 1) = v165;
      }
      uint64_t v167 = v537[23];
      uint64_t v168 = (void *)((char *)v130 + v167);
      v169 = (void *)((char *)v131 + v167);
      uint64_t v170 = v169[1];
      *uint64_t v168 = *v169;
      v168[1] = v170;
      uint64_t v171 = v537[24];
      uint64_t v172 = (char *)v130 + v171;
      v173 = (char *)v131 + v171;
      v172[8] = v173[8];
      *(void *)uint64_t v172 = *(void *)v173;
      uint64_t v174 = v537[25];
      uint64_t v175 = (char *)v130 + v174;
      v176 = (char *)v131 + v174;
      *(void *)uint64_t v175 = *(void *)v176;
      v175[8] = v176[8];
      *((unsigned char *)v130 + v537[26]) = *((unsigned char *)v131 + v537[26]);
      uint64_t v177 = v537[27];
      uint64_t v178 = (char *)v130 + v177;
      v179 = (char *)v131 + v177;
      swift_bridgeObjectRetain();
      if (v540(v179, 1, v539))
      {
        uint64_t v180 = sub_1A07856F8((uint64_t *)&unk_1E94FAF20);
        memcpy(v178, v179, *(void *)(*(void *)(v180 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v538 + 16))(v178, v179, v539);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v538 + 56))(v178, 0, 1, v539);
      }
      *(void *)((char *)v130 + v537[28]) = *(void *)((char *)v131 + v537[28]);
      uint64_t v181 = v537[29];
      uint64_t v182 = (void *)((char *)v130 + v181);
      v183 = (void *)((char *)v131 + v181);
      uint64_t v184 = v183[1];
      *uint64_t v182 = *v183;
      v182[1] = v184;
      *((unsigned char *)v130 + v537[30]) = *((unsigned char *)v131 + v537[30]);
      uint64_t v185 = *(void (**)(void *, void, uint64_t, int *))(v522 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v185(v130, 0, 1, v537);
    }
    uint64_t v186 = v82[40];
    uint64_t v187 = (void *)((char *)v544 + v186);
    v188 = (void *)((char *)v83 + v186);
    uint64_t v189 = v188[1];
    *uint64_t v187 = *v188;
    v187[1] = v189;
    *((unsigned char *)v544 + v82[41]) = *((unsigned char *)v83 + v82[41]);
    uint64_t v190 = v82[42];
    uint64_t v191 = (void *)((char *)v544 + v190);
    v192 = (void *)((char *)v83 + v190);
    uint64_t v193 = v192[1];
    *uint64_t v191 = *v192;
    v191[1] = v193;
    *((unsigned char *)v544 + v82[43]) = *((unsigned char *)v83 + v82[43]);
    *((unsigned char *)v544 + v82[44]) = *((unsigned char *)v83 + v82[44]);
    *((unsigned char *)v544 + v82[45]) = *((unsigned char *)v83 + v82[45]);
    *((unsigned char *)v544 + v82[46]) = *((unsigned char *)v83 + v82[46]);
    uint64_t v194 = v82[47];
    uint64_t v195 = (void *)((char *)v544 + v194);
    v196 = (void *)((char *)v83 + v194);
    uint64_t v197 = v196[1];
    *uint64_t v195 = *v196;
    v195[1] = v197;
    uint64_t v198 = v82[48];
    uint64_t v199 = (void *)((char *)v544 + v198);
    v200 = (void *)((char *)v83 + v198);
    uint64_t v201 = v200[1];
    *uint64_t v199 = *v200;
    v199[1] = v201;
    *(void *)((char *)v544 + v82[49]) = *(void *)((char *)v83 + v82[49]);
    uint64_t v202 = v82[50];
    uint64_t v203 = (void *)((char *)v544 + v202);
    v204 = (void *)((char *)v83 + v202);
    uint64_t v205 = v204[1];
    *uint64_t v203 = *v204;
    v203[1] = v205;
    uint64_t v206 = v82[51];
    uint64_t v207 = (void *)((char *)v544 + v206);
    v208 = (void *)((char *)v83 + v206);
    v209 = v83;
    uint64_t v210 = v208[1];
    *uint64_t v207 = *v208;
    v207[1] = v210;
    uint64_t v211 = v82[52];
    uint64_t v212 = (char *)v544 + v211;
    v213 = (char *)v209 + v211;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v540(v213, 1, v539))
    {
      uint64_t v214 = sub_1A07856F8((uint64_t *)&unk_1E94FAF20);
      memcpy(v212, v213, *(void *)(*(void *)(v214 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v538 + 16))(v212, v213, v539);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v538 + 56))(v212, 0, 1, v539);
    }
    uint64_t v215 = v545;
    uint64_t v216 = v542[53];
    uint64_t v217 = (char *)v544 + v216;
    v218 = (char *)v545 + v216;
    *(void *)uint64_t v217 = *(void *)v218;
    v217[8] = v218[8];
    uint64_t v219 = v542[54];
    uint64_t v220 = (char *)v544 + v219;
    v221 = (char *)v545 + v219;
    v220[8] = v221[8];
    *(void *)uint64_t v220 = *(void *)v221;
    uint64_t v222 = v542[55];
    uint64_t v223 = (void *)((char *)v544 + v222);
    v224 = (void *)((char *)v545 + v222);
    uint64_t v225 = v224[1];
    *uint64_t v223 = *v224;
    v223[1] = v225;
    *((unsigned char *)v544 + v542[56]) = *((unsigned char *)v545 + v542[56]);
    *((unsigned char *)v544 + v542[57]) = *((unsigned char *)v545 + v542[57]);
    uint64_t v226 = v542[58];
    uint64_t v227 = (void *)((char *)v544 + v226);
    v228 = (void *)((char *)v545 + v226);
    __dstb = (void *)v228[1];
    *uint64_t v227 = *v228;
    v227[1] = __dstb;
    uint64_t v229 = v542[59];
    uint64_t v230 = (void *)((char *)v544 + v229);
    v231 = (void *)((char *)v545 + v229);
    uint64_t v531 = v231[1];
    *uint64_t v230 = *v231;
    v230[1] = v531;
    uint64_t v232 = v542[60];
    uint64_t v233 = (void *)((char *)v544 + v232);
    v234 = (void *)((char *)v545 + v232);
    v530 = (void *)v234[1];
    *uint64_t v233 = *v234;
    v233[1] = v530;
    uint64_t v235 = v542[61];
    uint64_t v236 = (char *)v544 + v235;
    v237 = (char *)v545 + v235;
    *(void *)uint64_t v236 = *(void *)v237;
    v236[8] = v237[8];
    uint64_t v238 = v542[62];
    uint64_t v239 = (void *)((char *)v544 + v238);
    v240 = (void *)((char *)v545 + v238);
    uint64_t v241 = v240[1];
    *uint64_t v239 = *v240;
    v239[1] = v241;
    uint64_t v242 = v542[63];
    uint64_t v243 = (char *)v544 + v242;
    v244 = (char *)v545 + v242;
    *(_DWORD *)uint64_t v243 = *(_DWORD *)v244;
    v243[4] = v244[4];
    uint64_t v245 = v542[64];
    uint64_t v246 = (void *)((char *)v544 + v245);
    v247 = (void *)((char *)v545 + v245);
    uint64_t v248 = v247[1];
    *uint64_t v246 = *v247;
    v246[1] = v248;
    uint64_t v249 = v542[65];
    uint64_t v250 = (char *)v544 + v249;
    v251 = (char *)v545 + v249;
    v250[8] = v251[8];
    *(void *)uint64_t v250 = *(void *)v251;
    uint64_t v252 = v542[66];
    uint64_t v253 = (char *)v544 + v252;
    v254 = (char *)v545 + v252;
    *(_OWORD *)uint64_t v253 = *(_OWORD *)v254;
    v253[16] = v254[16];
    uint64_t v255 = v542[67];
    uint64_t v256 = (void *)((char *)v544 + v255);
    v257 = (void *)((char *)v545 + v255);
    uint64_t v258 = v257[1];
    *uint64_t v256 = *v257;
    v256[1] = v258;
    *(void *)((char *)v544 + v542[68]) = *(void *)((char *)v545 + v542[68]);
    uint64_t v259 = v542[69];
    uint64_t v260 = (void *)((char *)v544 + v259);
    v261 = (void *)((char *)v545 + v259);
    uint64_t v262 = v261[1];
    *uint64_t v260 = *v261;
    v260[1] = v262;
    *((unsigned char *)v544 + v542[70]) = *((unsigned char *)v545 + v542[70]);
    *((unsigned char *)v544 + v542[71]) = *((unsigned char *)v545 + v542[71]);
    *((unsigned char *)v544 + v542[72]) = *((unsigned char *)v545 + v542[72]);
    uint64_t v263 = v542[73];
    uint64_t v264 = (char *)v544 + v263;
    v265 = (char *)v545 + v263;
    *(void *)uint64_t v264 = *(void *)v265;
    v264[8] = v265[8];
    uint64_t v266 = *(int *)(v524 + 20);
    v546 = (_OWORD *)((char *)v544 + v266);
    uint64_t v267 = (_OWORD *)((char *)v215 + v266);
    uint64_t v268 = *((void *)v542 - 1);
    uint64_t v269 = *(unsigned int (**)(_OWORD *, uint64_t, int *))(v268 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v270 = v267;
    swift_bridgeObjectRetain();
    if (v269(v267, 1, v542))
    {
      uint64_t v271 = sub_1A07856F8(&qword_1E94FBB18);
      memcpy(v546, v267, *(void *)(*(void *)(v271 - 8) + 64));
    }
    else
    {
      uint64_t v532 = v268;
      uint64_t v272 = *((void *)v267 + 1);
      if (v272 == 1)
      {
        long long v273 = v267[3];
        long long v274 = v546;
        v546[2] = v267[2];
        v546[3] = v273;
        *((unsigned char *)v546 + 64) = *((unsigned char *)v267 + 64);
        long long v275 = v267[1];
        _OWORD *v546 = *v267;
        v546[1] = v275;
      }
      else
      {
        long long v274 = v546;
        *(void *)v546 = *(void *)v267;
        *((void *)v546 + 1) = v272;
        uint64_t v276 = *((void *)v267 + 3);
        *((void *)v546 + 2) = *((void *)v267 + 2);
        *((void *)v546 + 3) = v276;
        uint64_t v277 = *((void *)v267 + 5);
        *((void *)v546 + 4) = *((void *)v267 + 4);
        *((void *)v546 + 5) = v277;
        uint64_t v278 = *((void *)v267 + 7);
        *((void *)v546 + 6) = *((void *)v267 + 6);
        *((void *)v546 + 7) = v278;
        *((unsigned char *)v546 + 64) = *((unsigned char *)v267 + 64);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      uint64_t v279 = v542;
      uint64_t v280 = *((void *)v267 + 10);
      v274[9] = *((void *)v267 + 9);
      v274[10] = v280;
      uint64_t v281 = *((void *)v267 + 12);
      v274[11] = *((void *)v267 + 11);
      v274[12] = v281;
      uint64_t v282 = *((void *)v267 + 14);
      v274[13] = v270[13];
      v274[14] = v282;
      uint64_t v283 = v270[16];
      v274[15] = v270[15];
      v274[16] = v283;
      uint64_t v284 = v270[18];
      v274[17] = v270[17];
      v274[18] = v284;
      uint64_t v285 = v274;
      uint64_t v286 = v270[20];
      v285[19] = v270[19];
      v285[20] = v286;
      uint64_t v287 = v270;
      uint64_t v288 = v270[21];
      uint64_t v289 = v270[22];
      v285[21] = v288;
      v285[22] = v289;
      uint64_t v290 = v287[24];
      v285[23] = v287[23];
      v285[24] = v290;
      v285[25] = v287[25];
      *((_WORD *)v285 + 104) = *((_WORD *)v287 + 104);
      uint64_t v291 = v287[28];
      v285[27] = v287[27];
      v285[28] = v291;
      uint64_t v292 = v542[16];
      __dsta = (char *)v285 + v292;
      uint64_t v543 = v287;
      uint64_t v293 = (char *)v287 + v292;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v540(v293, 1, v539))
      {
        uint64_t v294 = sub_1A07856F8((uint64_t *)&unk_1E94FAF20);
        memcpy(__dsta, v293, *(void *)(*(void *)(v294 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v538 + 16))(__dsta, v293, v539);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v538 + 56))(__dsta, 0, 1, v539);
      }
      uint64_t v295 = v539;
      uint64_t v296 = v279[17];
      uint64_t v297 = (char *)v546 + v296;
      uint64_t v298 = (uint64_t)v543 + v296;
      *(void *)uint64_t v297 = *(void *)v298;
      v297[8] = *(unsigned char *)(v298 + 8);
      uint64_t v299 = v279[18];
      uint64_t v300 = (void *)((char *)v546 + v299);
      v301 = (void *)((char *)v543 + v299);
      uint64_t v302 = v301[1];
      *uint64_t v300 = *v301;
      v300[1] = v302;
      uint64_t v303 = v279[19];
      uint64_t v304 = (void *)((char *)v546 + v303);
      v305 = (void *)((char *)v543 + v303);
      uint64_t v306 = v305[1];
      *uint64_t v304 = *v305;
      v304[1] = v306;
      uint64_t v307 = v279[20];
      uint64_t v308 = (void *)((char *)v546 + v307);
      v309 = (void *)((char *)v543 + v307);
      uint64_t v310 = v309[1];
      *uint64_t v308 = *v309;
      v308[1] = v310;
      uint64_t v311 = v279[21];
      uint64_t v312 = (void *)((char *)v546 + v311);
      v313 = (void *)((char *)v543 + v311);
      uint64_t v314 = v313[1];
      *uint64_t v312 = *v313;
      v312[1] = v314;
      uint64_t v315 = v279[22];
      uint64_t v316 = (char *)v546 + v315;
      uint64_t v317 = (uint64_t)v543 + v315;
      *(void *)uint64_t v316 = *(void *)v317;
      v316[8] = *(unsigned char *)(v317 + 8);
      uint64_t v318 = v279[23];
      uint64_t v319 = (void *)((char *)v546 + v318);
      v320 = (void *)((char *)v543 + v318);
      uint64_t v321 = v320[1];
      *uint64_t v319 = *v320;
      v319[1] = v321;
      uint64_t v322 = v279[24];
      uint64_t v323 = (void *)((char *)v546 + v322);
      v324 = (void *)((char *)v543 + v322);
      uint64_t v325 = v324[1];
      *uint64_t v323 = *v324;
      v323[1] = v325;
      uint64_t v326 = v279[25];
      uint64_t v327 = (char *)v546 + v326;
      v328 = (void *)((char *)v543 + v326);
      unint64_t v329 = *(void *)((char *)v543 + v326 + 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v329 >> 60 == 15)
      {
        *(_OWORD *)uint64_t v327 = *(_OWORD *)v328;
      }
      else
      {
        uint64_t v330 = *v328;
        sub_1A08AF278(*v328, v329);
        *(void *)uint64_t v327 = v330;
        *((void *)v327 + 1) = v329;
      }
      uint64_t v331 = v279[26];
      uint64_t v332 = v546;
      v333 = (void *)((char *)v546 + v331);
      v334 = v543;
      v335 = (void *)((char *)v543 + v331);
      uint64_t v336 = v335[1];
      void *v333 = *v335;
      v333[1] = v336;
      *(void *)((char *)v546 + v279[27]) = *(void *)((char *)v543 + v279[27]);
      uint64_t v337 = v279[28];
      uint64_t v338 = (char *)v546 + v337;
      v339 = (void *)((char *)v543 + v337);
      unint64_t v340 = *(void *)((char *)v543 + v337 + 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v340 >> 60 == 15)
      {
        *(_OWORD *)uint64_t v338 = *(_OWORD *)v339;
      }
      else
      {
        uint64_t v341 = *v339;
        sub_1A08AF278(*v339, v340);
        *(void *)uint64_t v338 = v341;
        *((void *)v338 + 1) = v340;
      }
      uint64_t v342 = v279[29];
      uint64_t v343 = (char *)v546 + v342;
      v344 = (char *)v543 + v342;
      if (v540((char *)v543 + v342, 1, v539))
      {
        uint64_t v345 = sub_1A07856F8((uint64_t *)&unk_1E94FAF20);
        memcpy(v343, v344, *(void *)(*(void *)(v345 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v538 + 16))(v343, v344, v539);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v538 + 56))(v343, 0, 1, v539);
      }
      uint64_t v346 = v279[30];
      uint64_t v347 = (char *)v546 + v346;
      v348 = (char *)v543 + v346;
      if (v540((char *)v543 + v346, 1, v539))
      {
        uint64_t v349 = sub_1A07856F8((uint64_t *)&unk_1E94FAF20);
        memcpy(v347, v348, *(void *)(*(void *)(v349 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v538 + 16))(v347, v348, v539);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v538 + 56))(v347, 0, 1, v539);
      }
      uint64_t v350 = v279[31];
      uint64_t v351 = (char *)v546 + v350;
      v352 = (char *)v543 + v350;
      if (v540((char *)v543 + v350, 1, v539))
      {
        uint64_t v353 = sub_1A07856F8((uint64_t *)&unk_1E94FAF20);
        memcpy(v351, v352, *(void *)(*(void *)(v353 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v538 + 16))(v351, v352, v539);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v538 + 56))(v351, 0, 1, v539);
      }
      uint64_t v354 = v279[32];
      uint64_t v355 = (char *)v546 + v354;
      uint64_t v356 = (uint64_t)v543 + v354;
      *(void *)uint64_t v355 = *(void *)v356;
      v355[8] = *(unsigned char *)(v356 + 8);
      *((unsigned char *)v546 + v279[33]) = *((unsigned char *)v543 + v279[33]);
      uint64_t v357 = v279[34];
      uint64_t v358 = (char *)v546 + v357;
      v359 = (void *)((char *)v543 + v357);
      unint64_t v360 = v359[1];
      if (v360 >> 60 == 15)
      {
        *(_OWORD *)uint64_t v358 = *(_OWORD *)v359;
      }
      else
      {
        uint64_t v361 = *v359;
        sub_1A08AF278(*v359, v359[1]);
        *(void *)uint64_t v358 = v361;
        *((void *)v358 + 1) = v360;
      }
      uint64_t v362 = v279[35];
      uint64_t v363 = (void *)((char *)v546 + v362);
      v364 = (void *)((char *)v543 + v362);
      uint64_t v365 = v364[1];
      *uint64_t v363 = *v364;
      v363[1] = v365;
      uint64_t v366 = v279[36];
      uint64_t v367 = (char *)v546 + v366;
      v368 = (char *)v543 + v366;
      swift_bridgeObjectRetain();
      if (v540(v368, 1, v539))
      {
        uint64_t v369 = sub_1A07856F8((uint64_t *)&unk_1E94FAF20);
        memcpy(v367, v368, *(void *)(*(void *)(v369 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v538 + 16))(v367, v368, v539);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v538 + 56))(v367, 0, 1, v539);
      }
      uint64_t v370 = v279[37];
      uint64_t v371 = (char *)v546 + v370;
      uint64_t v372 = (uint64_t)v543 + v370;
      *(void *)uint64_t v371 = *(void *)v372;
      v371[8] = *(unsigned char *)(v372 + 8);
      uint64_t v373 = v279[38];
      uint64_t v374 = (char *)v546 + v373;
      v375 = (void *)((char *)v543 + v373);
      unint64_t v376 = v375[1];
      if (v376 >> 60 == 15)
      {
        *(_OWORD *)uint64_t v374 = *(_OWORD *)v375;
      }
      else
      {
        uint64_t v377 = *v375;
        sub_1A08AF278(*v375, v375[1]);
        *(void *)uint64_t v374 = v377;
        *((void *)v374 + 1) = v376;
      }
      uint64_t v378 = v279[39];
      uint64_t v379 = (void *)((char *)v546 + v378);
      v380 = (void *)((char *)v543 + v378);
      if (v520((void *)((char *)v543 + v378), 1, v537))
      {
        uint64_t v381 = sub_1A07856F8(&qword_1E94FBB10);
        memcpy(v379, v380, *(void *)(*(void *)(v381 - 8) + 64));
      }
      else
      {
        uint64_t v382 = v380[1];
        *uint64_t v379 = *v380;
        v379[1] = v382;
        uint64_t v383 = v380 + 2;
        unint64_t v384 = v380[3];
        swift_bridgeObjectRetain();
        if (v384 >> 60 == 15)
        {
          *((_OWORD *)v379 + 1) = *v383;
        }
        else
        {
          uint64_t v385 = *(void *)v383;
          sub_1A08AF278(v385, v384);
          v379[2] = v385;
          v379[3] = v384;
        }
        v379[4] = v380[4];
        *((unsigned char *)v379 + 40) = *((unsigned char *)v380 + 40);
        uint64_t v386 = v380[7];
        v379[6] = v380[6];
        v379[7] = v386;
        uint64_t v387 = v380[9];
        v379[8] = v380[8];
        v379[9] = v387;
        uint64_t v388 = v380[11];
        v379[10] = v380[10];
        v379[11] = v388;
        uint64_t v389 = v380[13];
        v379[12] = v380[12];
        v379[13] = v389;
        *((_WORD *)v379 + 56) = *((_WORD *)v380 + 56);
        uint64_t v390 = v380[16];
        v379[15] = v380[15];
        v379[16] = v390;
        *((unsigned char *)v379 + 136) = *((unsigned char *)v380 + 136);
        uint64_t v391 = v380[19];
        v379[18] = v380[18];
        v379[19] = v391;
        uint64_t v392 = v537[16];
        v519 = (char *)v380 + v392;
        uint64_t v521 = (char *)v379 + v392;
        uint64_t v393 = sub_1A09F34B8();
        uint64_t v394 = *(void *)(v393 - 8);
        v518 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v394 + 48);
        uint64_t v395 = v393;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v518(v519, 1, v395))
        {
          uint64_t v396 = sub_1A07856F8(&qword_1E94FBB08);
          memcpy(v521, v519, *(void *)(*(void *)(v396 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v394 + 16))(v521, v519, v395);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v394 + 56))(v521, 0, 1, v395);
        }
        uint64_t v397 = v537[17];
        uint64_t v398 = (char *)v379 + v397;
        uint64_t v399 = (char *)v380 + v397;
        v334 = v543;
        if (v518((char *)v380 + v397, 1, v395))
        {
          uint64_t v400 = sub_1A07856F8(&qword_1E94FBB08);
          memcpy(v398, v399, *(void *)(*(void *)(v400 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v394 + 16))(v398, v399, v395);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v394 + 56))(v398, 0, 1, v395);
        }
        *(void *)((char *)v379 + v537[18]) = *(void *)((char *)v380 + v537[18]);
        uint64_t v401 = v537[19];
        v402 = (char *)v379 + v401;
        unsigned int v403 = (char *)v380 + v401;
        swift_bridgeObjectRetain();
        if (v518(v403, 1, v395))
        {
          uint64_t v404 = sub_1A07856F8(&qword_1E94FBB08);
          memcpy(v402, v403, *(void *)(*(void *)(v404 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v394 + 16))(v402, v403, v395);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v394 + 56))(v402, 0, 1, v395);
        }
        uint64_t v405 = v537[20];
        v406 = (char *)v379 + v405;
        v407 = (char *)v380 + v405;
        if (v518((char *)v380 + v405, 1, v395))
        {
          uint64_t v408 = sub_1A07856F8(&qword_1E94FBB08);
          memcpy(v406, v407, *(void *)(*(void *)(v408 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v394 + 16))(v406, v407, v395);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v394 + 56))(v406, 0, 1, v395);
        }
        uint64_t v295 = v539;
        *(void *)((char *)v379 + v537[21]) = *(void *)((char *)v380 + v537[21]);
        uint64_t v409 = v537[22];
        v410 = (char *)v379 + v409;
        v411 = (_OWORD *)((char *)v380 + v409);
        unint64_t v412 = *(void *)((char *)v380 + v409 + 8);
        swift_bridgeObjectRetain();
        if (v412 >> 60 == 15)
        {
          *(_OWORD *)v410 = *v411;
        }
        else
        {
          uint64_t v413 = *(void *)v411;
          sub_1A08AF278(v413, v412);
          *(void *)v410 = v413;
          *((void *)v410 + 1) = v412;
        }
        uint64_t v414 = v537[23];
        v415 = (void *)((char *)v379 + v414);
        unint64_t v416 = (void *)((char *)v380 + v414);
        uint64_t v417 = v416[1];
        void *v415 = *v416;
        v415[1] = v417;
        uint64_t v418 = v537[24];
        v419 = (char *)v379 + v418;
        v420 = (char *)v380 + v418;
        v419[8] = v420[8];
        *(void *)v419 = *(void *)v420;
        uint64_t v421 = v537[25];
        uint64_t v422 = (char *)v379 + v421;
        v423 = (char *)v380 + v421;
        *(void *)uint64_t v422 = *(void *)v423;
        v422[8] = v423[8];
        *((unsigned char *)v379 + v537[26]) = *((unsigned char *)v380 + v537[26]);
        uint64_t v424 = v537[27];
        uint64_t v425 = (char *)v379 + v424;
        v426 = (char *)v380 + v424;
        swift_bridgeObjectRetain();
        if (v540(v426, 1, v539))
        {
          uint64_t v427 = sub_1A07856F8((uint64_t *)&unk_1E94FAF20);
          memcpy(v425, v426, *(void *)(*(void *)(v427 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v538 + 16))(v425, v426, v539);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v538 + 56))(v425, 0, 1, v539);
        }
        *(void *)((char *)v379 + v537[28]) = *(void *)((char *)v380 + v537[28]);
        uint64_t v428 = v537[29];
        v429 = (void *)((char *)v379 + v428);
        v430 = (void *)((char *)v380 + v428);
        uint64_t v431 = v430[1];
        void *v429 = *v430;
        v429[1] = v431;
        *((unsigned char *)v379 + v537[30]) = *((unsigned char *)v380 + v537[30]);
        uint64_t v432 = *(void (**)(void *, void, uint64_t, int *))(v522 + 56);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v432(v379, 0, 1, v537);
        uint64_t v332 = v546;
      }
      uint64_t v433 = v279[40];
      v434 = (void *)((char *)v332 + v433);
      uint64_t v435 = (void *)((char *)v334 + v433);
      uint64_t v436 = v435[1];
      void *v434 = *v435;
      v434[1] = v436;
      *((unsigned char *)v332 + v279[41]) = *((unsigned char *)v334 + v279[41]);
      uint64_t v437 = v279[42];
      v438 = (void *)((char *)v332 + v437);
      v439 = (void *)((char *)v334 + v437);
      uint64_t v440 = v439[1];
      void *v438 = *v439;
      v438[1] = v440;
      *((unsigned char *)v332 + v279[43]) = *((unsigned char *)v334 + v279[43]);
      *((unsigned char *)v332 + v279[44]) = *((unsigned char *)v334 + v279[44]);
      *((unsigned char *)v332 + v279[45]) = *((unsigned char *)v334 + v279[45]);
      *((unsigned char *)v332 + v279[46]) = *((unsigned char *)v334 + v279[46]);
      uint64_t v441 = v279[47];
      v442 = (void *)((char *)v332 + v441);
      v443 = (void *)((char *)v334 + v441);
      uint64_t v444 = v443[1];
      void *v442 = *v443;
      v442[1] = v444;
      uint64_t v445 = v279[48];
      v446 = (void *)((char *)v332 + v445);
      v447 = (void *)((char *)v334 + v445);
      uint64_t v448 = v447[1];
      void *v446 = *v447;
      v446[1] = v448;
      *(void *)((char *)v332 + v279[49]) = *(void *)((char *)v334 + v279[49]);
      uint64_t v449 = v279[50];
      v450 = (void *)((char *)v332 + v449);
      v451 = (void *)((char *)v334 + v449);
      uint64_t v452 = v332;
      uint64_t v453 = v451[1];
      void *v450 = *v451;
      v450[1] = v453;
      uint64_t v454 = v279[51];
      v455 = (void *)((char *)v452 + v454);
      v456 = (void *)((char *)v334 + v454);
      uint64_t v457 = (char *)v334;
      uint64_t v458 = v456[1];
      void *v455 = *v456;
      v455[1] = v458;
      uint64_t v459 = v279[52];
      v460 = (char *)v452 + v459;
      v461 = &v457[v459];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v540(v461, 1, v295))
      {
        uint64_t v462 = sub_1A07856F8((uint64_t *)&unk_1E94FAF20);
        memcpy(v460, v461, *(void *)(*(void *)(v462 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v538 + 16))(v460, v461, v295);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v538 + 56))(v460, 0, 1, v295);
      }
      uint64_t v463 = v279[53];
      v464 = (char *)v546 + v463;
      uint64_t v465 = (uint64_t)v543 + v463;
      *(void *)v464 = *(void *)v465;
      v464[8] = *(unsigned char *)(v465 + 8);
      uint64_t v466 = v279[54];
      uint64_t v467 = (char *)v546 + v466;
      uint64_t v468 = (uint64_t)v543 + v466;
      v467[8] = *(unsigned char *)(v468 + 8);
      *(void *)uint64_t v467 = *(void *)v468;
      uint64_t v469 = v279[55];
      uint64_t v470 = (void *)((char *)v546 + v469);
      v471 = (void *)((char *)v543 + v469);
      uint64_t v472 = v471[1];
      *uint64_t v470 = *v471;
      v470[1] = v472;
      *((unsigned char *)v546 + v279[56]) = *((unsigned char *)v543 + v279[56]);
      *((unsigned char *)v546 + v279[57]) = *((unsigned char *)v543 + v279[57]);
      uint64_t v473 = v279[58];
      v474 = (void *)((char *)v546 + v473);
      v475 = (void *)((char *)v543 + v473);
      uint64_t v549 = v475[1];
      void *v474 = *v475;
      v474[1] = v549;
      uint64_t v476 = v279[59];
      uint64_t v477 = (void *)((char *)v546 + v476);
      v478 = (void *)((char *)v543 + v476);
      uint64_t v541 = v478[1];
      *uint64_t v477 = *v478;
      v477[1] = v541;
      uint64_t v479 = v279[60];
      uint64_t v480 = (void *)((char *)v546 + v479);
      v481 = (void *)((char *)v543 + v479);
      uint64_t v482 = v481[1];
      *uint64_t v480 = *v481;
      v480[1] = v482;
      uint64_t v483 = v279[61];
      v484 = (char *)v546 + v483;
      uint64_t v485 = (uint64_t)v543 + v483;
      *(void *)v484 = *(void *)v485;
      v484[8] = *(unsigned char *)(v485 + 8);
      uint64_t v486 = v279[62];
      uint64_t v487 = (void *)((char *)v546 + v486);
      v488 = (void *)((char *)v543 + v486);
      uint64_t v489 = v488[1];
      *uint64_t v487 = *v488;
      v487[1] = v489;
      uint64_t v490 = v279[63];
      v491 = (char *)v546 + v490;
      uint64_t v492 = (uint64_t)v543 + v490;
      *(_DWORD *)v491 = *(_DWORD *)v492;
      v491[4] = *(unsigned char *)(v492 + 4);
      uint64_t v493 = v279[64];
      uint64_t v494 = (void *)((char *)v546 + v493);
      v495 = (void *)((char *)v543 + v493);
      uint64_t v496 = v495[1];
      *uint64_t v494 = *v495;
      v494[1] = v496;
      uint64_t v497 = v279[65];
      v498 = (char *)v546 + v497;
      uint64_t v499 = (uint64_t)v543 + v497;
      v498[8] = *(unsigned char *)(v499 + 8);
      *(void *)v498 = *(void *)v499;
      uint64_t v500 = v279[66];
      uint64_t v501 = (char *)v546 + v500;
      uint64_t v502 = (uint64_t)v543 + v500;
      *(_OWORD *)uint64_t v501 = *(_OWORD *)v502;
      v501[16] = *(unsigned char *)(v502 + 16);
      uint64_t v503 = v279[67];
      uint64_t v504 = (void *)((char *)v546 + v503);
      v505 = (void *)((char *)v543 + v503);
      uint64_t v506 = v505[1];
      *uint64_t v504 = *v505;
      v504[1] = v506;
      *(void *)((char *)v546 + v279[68]) = *(void *)((char *)v543 + v279[68]);
      uint64_t v507 = v279[69];
      v508 = (void *)((char *)v546 + v507);
      v509 = (void *)((char *)v543 + v507);
      uint64_t v510 = v509[1];
      void *v508 = *v509;
      v508[1] = v510;
      *((unsigned char *)v546 + v279[70]) = *((unsigned char *)v543 + v279[70]);
      *((unsigned char *)v546 + v279[71]) = *((unsigned char *)v543 + v279[71]);
      *((unsigned char *)v546 + v279[72]) = *((unsigned char *)v543 + v279[72]);
      uint64_t v511 = v279[73];
      v512 = (char *)v546 + v511;
      uint64_t v513 = (uint64_t)v543 + v511;
      v512[8] = *(unsigned char *)(v513 + 8);
      *(void *)v512 = *(void *)v513;
      uint64_t v514 = *(void (**)(_OWORD *, void, uint64_t, int *))(v532 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v514(v546, 0, 1, v279);
    }
    uint64_t v25 = a2;
    uint64_t v24 = a1;
    uint64_t v26 = a3;
    (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v523 + 56))(v544, 0, 1, v524);
  }
  *(void *)(v24 + *(int *)(v26 + 140)) = *(void *)(v25 + *(int *)(v26 + 140));
  swift_bridgeObjectRetain();
  return v24;
}

void *sub_1A08F905C(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2;
  uint64_t v5 = a1;
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v5[1] = v4[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v5[2] = v4[2];
  v5[3] = v4[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v5[4] = v4[4];
  v5[5] = v4[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v5[6] = v4[6];
  v5[7] = v4[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((unsigned char *)v5 + 64) = *((unsigned char *)v4 + 64);
  v5[9] = v4[9];
  v5[10] = v4[10];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v5[11] = v4[11];
  v5[12] = v4[12];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((unsigned char *)v5 + 104) = *((unsigned char *)v4 + 104);
  v5[14] = v4[14];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = v4[15];
  *((unsigned char *)v5 + 128) = *((unsigned char *)v4 + 128);
  v5[15] = v6;
  uint64_t v7 = v4[17];
  *((unsigned char *)v5 + 144) = *((unsigned char *)v4 + 144);
  v5[17] = v7;
  v5[19] = v4[19];
  v5[20] = v4[20];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v8 = v4[21];
  *((unsigned char *)v5 + 176) = *((unsigned char *)v4 + 176);
  v5[21] = v8;
  *((unsigned char *)v5 + 177) = *((unsigned char *)v4 + 177);
  *((unsigned char *)v5 + 178) = *((unsigned char *)v4 + 178);
  *((unsigned char *)v5 + 179) = *((unsigned char *)v4 + 179);
  v5[23] = v4[23];
  v5[24] = v4[24];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v5[25] = v4[25];
  v5[26] = v4[26];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((unsigned char *)v5 + 216) = *((unsigned char *)v4 + 216);
  v5[28] = v4[28];
  v5[29] = v4[29];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v5[30] = v4[30];
  v5[31] = v4[31];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v5[32] = v4[32];
  v5[33] = v4[33];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v9 = v4[34];
  *((unsigned char *)v5 + 280) = *((unsigned char *)v4 + 280);
  v5[34] = v9;
  *((unsigned char *)v5 + 281) = *((unsigned char *)v4 + 281);
  *((unsigned char *)v5 + 282) = *((unsigned char *)v4 + 282);
  uint64_t v10 = v4[36];
  *((unsigned char *)v5 + 296) = *((unsigned char *)v4 + 296);
  v5[36] = v10;
  *((unsigned char *)v5 + 297) = *((unsigned char *)v4 + 297);
  v5[38] = v4[38];
  v5[39] = v4[39];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v11 = v4[40];
  *((unsigned char *)v5 + 328) = *((unsigned char *)v4 + 328);
  v5[40] = v11;
  uint64_t v12 = *(int *)(a3 + 136);
  uint64_t v13 = (uint64_t)v5 + v12;
  uint64_t v14 = (char *)v4 + v12;
  uint64_t v15 = type metadata accessor for RemoteIntentMessageItem(0);
  uint64_t v16 = *(void **)(v15 - 8);
  uint64_t v17 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v16[6];
  int v18 = v17(v13, 1, v15);
  int v19 = v17((uint64_t)v14, 1, v15);
  uint64_t v1338 = v13;
  if (!v18)
  {
    if (v19)
    {
      sub_1A090C884(v13, type metadata accessor for RemoteIntentMessageItem);
      goto LABEL_7;
    }
    uint64_t v24 = *((void *)v14 + 1);
    uint64_t v1317 = a3;
    uint64_t v1327 = v15;
    if (*(void *)(v13 + 8) == 1)
    {
      if (v24 == 1)
      {
        *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
        long long v25 = *((_OWORD *)v14 + 1);
        long long v26 = *((_OWORD *)v14 + 2);
        long long v27 = *((_OWORD *)v14 + 3);
        *(unsigned char *)(v13 + 64) = v14[64];
        *(_OWORD *)(v13 + 32) = v26;
        *(_OWORD *)(v13 + 48) = v27;
        *(_OWORD *)(v13 + 16) = v25;
      }
      else
      {
        *(void *)uint64_t v13 = *(void *)v14;
        *(void *)(v13 + 8) = *((void *)v14 + 1);
        *(void *)(v13 + 16) = *((void *)v14 + 2);
        *(void *)(v13 + 24) = *((void *)v14 + 3);
        *(void *)(v13 + 32) = *((void *)v14 + 4);
        *(void *)(v13 + 40) = *((void *)v14 + 5);
        *(void *)(v13 + 48) = *((void *)v14 + 6);
        *(void *)(v13 + 56) = *((void *)v14 + 7);
        *(unsigned char *)(v13 + 64) = v14[64];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
    }
    else if (v24 == 1)
    {
      sub_1A0900DD4(v13);
      *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
      long long v118 = *((_OWORD *)v14 + 2);
      long long v117 = *((_OWORD *)v14 + 3);
      long long v119 = *((_OWORD *)v14 + 1);
      *(unsigned char *)(v13 + 64) = v14[64];
      *(_OWORD *)(v13 + 32) = v118;
      *(_OWORD *)(v13 + 48) = v117;
      *(_OWORD *)(v13 + 16) = v119;
    }
    else
    {
      *(void *)uint64_t v13 = *(void *)v14;
      *(void *)(v13 + 8) = *((void *)v14 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(v13 + 16) = *((void *)v14 + 2);
      *(void *)(v13 + 24) = *((void *)v14 + 3);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(v13 + 32) = *((void *)v14 + 4);
      *(void *)(v13 + 40) = *((void *)v14 + 5);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(v13 + 48) = *((void *)v14 + 6);
      *(void *)(v13 + 56) = *((void *)v14 + 7);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(v13 + 64) = v14[64];
    }
    *(void *)(v13 + 72) = *((void *)v14 + 9);
    *(void *)(v13 + 80) = *((void *)v14 + 10);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v13 + 88) = *((void *)v14 + 11);
    *(void *)(v13 + 96) = *((void *)v14 + 12);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v13 + 104) = *((void *)v14 + 13);
    *(void *)(v13 + 112) = *((void *)v14 + 14);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v13 + 120) = *((void *)v14 + 15);
    *(void *)(v13 + 128) = *((void *)v14 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v13 + 136) = *((void *)v14 + 17);
    *(void *)(v13 + 144) = *((void *)v14 + 18);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v13 + 152) = *((void *)v14 + 19);
    *(void *)(v13 + 160) = *((void *)v14 + 20);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v13 + 168) = *((void *)v14 + 21);
    *(void *)(v13 + 176) = *((void *)v14 + 22);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v13 + 184) = *((void *)v14 + 23);
    *(void *)(v13 + 192) = *((void *)v14 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v127 = *((void *)v14 + 25);
    *(unsigned char *)(v13 + 208) = v14[208];
    *(void *)(v13 + 200) = v127;
    *(unsigned char *)(v13 + 209) = v14[209];
    *(void *)(v13 + 216) = *((void *)v14 + 27);
    *(void *)(v13 + 224) = *((void *)v14 + 28);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v128 = (int *)type metadata accessor for RemoteIntentItemContent(0);
    uint64_t v129 = v128[16];
    uint64_t v130 = (void *)(v13 + v129);
    char v131 = &v14[v129];
    uint64_t v132 = sub_1A09F3478();
    uint64_t v1335 = *(void *)(v132 - 8);
    uint64_t v133 = *(uint64_t (**)(void))(v1335 + 48);
    unsigned int v134 = ((uint64_t (*)(void *, uint64_t, uint64_t))v133)(v130, 1, v132);
    v1337 = v133;
    unsigned int v135 = ((uint64_t (*)(char *, uint64_t, uint64_t))v133)(v131, 1, v132);
    if (v134)
    {
      if (!v135)
      {
        (*(void (**)(void *, char *, uint64_t))(v1335 + 16))(v130, v131, v132);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v1335 + 56))(v130, 0, 1, v132);
        goto LABEL_56;
      }
    }
    else
    {
      if (!v135)
      {
        (*(void (**)(void *, char *, uint64_t))(v1335 + 24))(v130, v131, v132);
LABEL_56:
        uint64_t v137 = v128[17];
        uint64_t v138 = v1338 + v137;
        uint64_t v139 = &v14[v137];
        uint64_t v140 = *(void *)v139;
        *(unsigned char *)(v138 + 8) = v139[8];
        *(void *)uint64_t v138 = v140;
        uint64_t v141 = v128[18];
        uint64_t v142 = (void *)(v1338 + v141);
        uint64_t v143 = &v14[v141];
        *uint64_t v142 = *(void *)v143;
        v142[1] = *((void *)v143 + 1);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        uint64_t v144 = v128[19];
        uint64_t v145 = (void *)(v1338 + v144);
        uint64_t v146 = &v14[v144];
        *uint64_t v145 = *(void *)v146;
        v145[1] = *((void *)v146 + 1);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        uint64_t v147 = v128[20];
        uint64_t v148 = (void *)(v1338 + v147);
        uint64_t v149 = &v14[v147];
        *uint64_t v148 = *(void *)v149;
        v148[1] = *((void *)v149 + 1);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        uint64_t v150 = v128[21];
        unsigned int v151 = (void *)(v1338 + v150);
        uint64_t v152 = &v14[v150];
        void *v151 = *(void *)v152;
        v151[1] = *((void *)v152 + 1);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        uint64_t v153 = v128[22];
        uint64_t v154 = v1338 + v153;
        uint64_t v155 = &v14[v153];
        uint64_t v156 = *(void *)v155;
        *(unsigned char *)(v154 + 8) = v155[8];
        *(void *)uint64_t v154 = v156;
        uint64_t v157 = v128[23];
        uint64_t v158 = (void *)(v1338 + v157);
        uint64_t v159 = &v14[v157];
        *uint64_t v158 = *(void *)v159;
        v158[1] = *((void *)v159 + 1);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        uint64_t v160 = v128[24];
        uint64_t v161 = (void *)(v1338 + v160);
        uint64_t v162 = &v14[v160];
        void *v161 = *(void *)v162;
        v161[1] = *((void *)v162 + 1);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        uint64_t v163 = v128[25];
        v164 = (uint64_t *)(v1338 + v163);
        unint64_t v165 = (uint64_t *)&v14[v163];
        unint64_t v166 = *(void *)&v14[v163 + 8];
        if (*(void *)(v1338 + v163 + 8) >> 60 == 15)
        {
          if (v166 >> 60 != 15)
          {
            uint64_t v167 = *v165;
            sub_1A08AF278(v167, v166);
            uint64_t *v164 = v167;
            v164[1] = v166;
            goto LABEL_63;
          }
        }
        else
        {
          if (v166 >> 60 != 15)
          {
            uint64_t v168 = *v165;
            sub_1A08AF278(v168, v166);
            uint64_t v169 = *v164;
            unint64_t v170 = v164[1];
            uint64_t *v164 = v168;
            v164[1] = v166;
            sub_1A08AF2E4(v169, v170);
LABEL_63:
            uint64_t v171 = v128[26];
            uint64_t v172 = (void *)(v1338 + v171);
            v173 = &v14[v171];
            *uint64_t v172 = *(void *)v173;
            v172[1] = *((void *)v173 + 1);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            *(void *)(v1338 + v128[27]) = *(void *)&v14[v128[27]];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            uint64_t v174 = v128[28];
            uint64_t v175 = (uint64_t *)(v1338 + v174);
            v176 = (uint64_t *)&v14[v174];
            unint64_t v177 = *(void *)&v14[v174 + 8];
            if (*(void *)(v1338 + v174 + 8) >> 60 == 15)
            {
              if (v177 >> 60 != 15)
              {
                uint64_t v178 = *v176;
                sub_1A08AF278(v178, v177);
                *uint64_t v175 = v178;
                v175[1] = v177;
                goto LABEL_70;
              }
            }
            else
            {
              if (v177 >> 60 != 15)
              {
                uint64_t v179 = *v176;
                sub_1A08AF278(v179, v177);
                uint64_t v180 = *v175;
                unint64_t v181 = v175[1];
                *uint64_t v175 = v179;
                v175[1] = v177;
                sub_1A08AF2E4(v180, v181);
LABEL_70:
                uint64_t v182 = v128[29];
                v183 = (void *)(v1338 + v182);
                uint64_t v184 = &v14[v182];
                unsigned int v185 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v133)(v1338 + v182, 1, v132);
                unsigned int v186 = ((uint64_t (*)(char *, uint64_t, uint64_t))v133)(v184, 1, v132);
                if (v185)
                {
                  if (!v186)
                  {
                    (*(void (**)(void *, char *, uint64_t))(v1335 + 16))(v183, v184, v132);
                    (*(void (**)(void *, void, uint64_t, uint64_t))(v1335 + 56))(v183, 0, 1, v132);
                    goto LABEL_76;
                  }
                }
                else
                {
                  if (!v186)
                  {
                    (*(void (**)(void *, char *, uint64_t))(v1335 + 24))(v183, v184, v132);
LABEL_76:
                    uint64_t v188 = v128[30];
                    uint64_t v189 = (void *)(v1338 + v188);
                    uint64_t v190 = &v14[v188];
                    unsigned int v191 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v133)(v1338 + v188, 1, v132);
                    unsigned int v192 = ((uint64_t (*)(char *, uint64_t, uint64_t))v133)(v190, 1, v132);
                    if (v191)
                    {
                      if (!v192)
                      {
                        (*(void (**)(void *, char *, uint64_t))(v1335 + 16))(v189, v190, v132);
                        (*(void (**)(void *, void, uint64_t, uint64_t))(v1335 + 56))(v189, 0, 1, v132);
                        goto LABEL_82;
                      }
                    }
                    else
                    {
                      if (!v192)
                      {
                        (*(void (**)(void *, char *, uint64_t))(v1335 + 24))(v189, v190, v132);
LABEL_82:
                        uint64_t v194 = v128[31];
                        uint64_t v195 = (void *)(v1338 + v194);
                        v196 = &v14[v194];
                        unsigned int v197 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v133)(v1338 + v194, 1, v132);
                        unsigned int v198 = ((uint64_t (*)(char *, uint64_t, uint64_t))v133)(v196, 1, v132);
                        if (v197)
                        {
                          if (!v198)
                          {
                            (*(void (**)(void *, char *, uint64_t))(v1335 + 16))(v195, v196, v132);
                            (*(void (**)(void *, void, uint64_t, uint64_t))(v1335 + 56))(v195, 0, 1, v132);
                            goto LABEL_88;
                          }
                        }
                        else
                        {
                          if (!v198)
                          {
                            (*(void (**)(void *, char *, uint64_t))(v1335 + 24))(v195, v196, v132);
LABEL_88:
                            uint64_t v200 = v128[32];
                            uint64_t v201 = v1338 + v200;
                            uint64_t v202 = &v14[v200];
                            uint64_t v203 = *(void *)v202;
                            *(unsigned char *)(v201 + 8) = v202[8];
                            *(void *)uint64_t v201 = v203;
                            *(unsigned char *)(v1338 + v128[33]) = v14[v128[33]];
                            uint64_t v204 = v128[34];
                            uint64_t v205 = (uint64_t *)(v1338 + v204);
                            uint64_t v206 = (uint64_t *)&v14[v204];
                            unint64_t v207 = *(void *)&v14[v204 + 8];
                            if (*(void *)(v1338 + v204 + 8) >> 60 == 15)
                            {
                              if (v207 >> 60 != 15)
                              {
                                uint64_t v208 = *v206;
                                sub_1A08AF278(v208, v207);
                                uint64_t *v205 = v208;
                                v205[1] = v207;
                                goto LABEL_95;
                              }
                            }
                            else
                            {
                              if (v207 >> 60 != 15)
                              {
                                uint64_t v209 = *v206;
                                sub_1A08AF278(v209, v207);
                                uint64_t v210 = *v205;
                                unint64_t v211 = v205[1];
                                uint64_t *v205 = v209;
                                v205[1] = v207;
                                sub_1A08AF2E4(v210, v211);
LABEL_95:
                                uint64_t v212 = v128[35];
                                v213 = (void *)(v1338 + v212);
                                uint64_t v214 = &v14[v212];
                                void *v213 = *(void *)v214;
                                v213[1] = *((void *)v214 + 1);
                                swift_bridgeObjectRetain();
                                swift_bridgeObjectRelease();
                                uint64_t v215 = v128[36];
                                uint64_t v216 = (void *)(v1338 + v215);
                                uint64_t v217 = &v14[v215];
                                unsigned int v218 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v133)(v1338 + v215, 1, v132);
                                unsigned int v219 = ((uint64_t (*)(char *, uint64_t, uint64_t))v133)(v217, 1, v132);
                                if (v218)
                                {
                                  if (!v219)
                                  {
                                    (*(void (**)(void *, char *, uint64_t))(v1335 + 16))(v216, v217, v132);
                                    (*(void (**)(void *, void, uint64_t, uint64_t))(v1335 + 56))(v216, 0, 1, v132);
                                    goto LABEL_101;
                                  }
                                }
                                else
                                {
                                  if (!v219)
                                  {
                                    (*(void (**)(void *, char *, uint64_t))(v1335 + 24))(v216, v217, v132);
LABEL_101:
                                    uint64_t v221 = v128[37];
                                    uint64_t v222 = v1338 + v221;
                                    uint64_t v223 = &v14[v221];
                                    uint64_t v224 = *(void *)v223;
                                    *(unsigned char *)(v222 + 8) = v223[8];
                                    *(void *)uint64_t v222 = v224;
                                    v1323 = v128;
                                    uint64_t v1324 = v132;
                                    uint64_t v225 = v128[38];
                                    uint64_t v226 = (uint64_t *)(v1338 + v225);
                                    uint64_t v227 = (uint64_t *)&v14[v225];
                                    unint64_t v228 = *(void *)&v14[v225 + 8];
                                    if (*(void *)(v1338 + v225 + 8) >> 60 == 15)
                                    {
                                      if (v228 >> 60 != 15)
                                      {
                                        uint64_t v229 = *v227;
                                        sub_1A08AF278(v229, v228);
                                        *uint64_t v226 = v229;
                                        v226[1] = v228;
                                        goto LABEL_108;
                                      }
                                    }
                                    else
                                    {
                                      if (v228 >> 60 != 15)
                                      {
                                        uint64_t v230 = *v227;
                                        sub_1A08AF278(v230, v228);
                                        uint64_t v231 = *v226;
                                        unint64_t v232 = v226[1];
                                        *uint64_t v226 = v230;
                                        v226[1] = v228;
                                        sub_1A08AF2E4(v231, v232);
LABEL_108:
                                        uint64_t v233 = v128[39];
                                        uint64_t v234 = v1338 + v233;
                                        uint64_t v235 = &v14[v233];
                                        uint64_t v236 = (int *)type metadata accessor for RemoteIntentMessageSummaryInfo();
                                        v1301 = (void *)*((void *)v236 - 1);
                                        v237 = (uint64_t (*)(uint64_t, uint64_t, int *))v1301[6];
                                        int v238 = v237(v234, 1, v236);
                                        int v239 = v237((uint64_t)v235, 1, v236);
                                        v1332 = v236;
                                        v1319 = (unsigned int (*)(char *, uint64_t, int *))v237;
                                        if (v238)
                                        {
                                          if (v239) {
                                            goto LABEL_113;
                                          }
                                          *(void *)uint64_t v234 = *(void *)v235;
                                          *(void *)(v234 + 8) = *((void *)v235 + 1);
                                          uint64_t v245 = v235 + 16;
                                          unint64_t v246 = *((void *)v235 + 3);
                                          swift_bridgeObjectRetain();
                                          v1304 = v4;
                                          if (v246 >> 60 == 15)
                                          {
                                            *(_OWORD *)(v234 + 16) = *v245;
                                          }
                                          else
                                          {
                                            uint64_t v453 = *(void *)v245;
                                            sub_1A08AF278(v453, v246);
                                            *(void *)(v234 + 16) = v453;
                                            *(void *)(v234 + 24) = v246;
                                          }
                                          uint64_t v454 = *((void *)v235 + 4);
                                          *(unsigned char *)(v234 + 40) = v235[40];
                                          *(void *)(v234 + 32) = v454;
                                          *(void *)(v234 + 48) = *((void *)v235 + 6);
                                          *(void *)(v234 + 56) = *((void *)v235 + 7);
                                          *(void *)(v234 + 64) = *((void *)v235 + 8);
                                          *(void *)(v234 + 72) = *((void *)v235 + 9);
                                          *(void *)(v234 + 80) = *((void *)v235 + 10);
                                          *(void *)(v234 + 88) = *((void *)v235 + 11);
                                          *(void *)(v234 + 96) = *((void *)v235 + 12);
                                          *(void *)(v234 + 104) = *((void *)v235 + 13);
                                          *(unsigned char *)(v234 + 112) = v235[112];
                                          *(unsigned char *)(v234 + 113) = v235[113];
                                          *(void *)(v234 + 120) = *((void *)v235 + 15);
                                          *(void *)(v234 + 128) = *((void *)v235 + 16);
                                          *(unsigned char *)(v234 + 136) = v235[136];
                                          *(void *)(v234 + 144) = *((void *)v235 + 18);
                                          *(void *)(v234 + 152) = *((void *)v235 + 19);
                                          uint64_t v455 = v236[16];
                                          v1275 = (void *)(v234 + v455);
                                          v1277 = &v235[v455];
                                          uint64_t v456 = sub_1A09F34B8();
                                          uint64_t v457 = *(void *)(v456 - 8);
                                          uint64_t v458 = *(unsigned int (**)(void, void, void))(v457 + 48);
                                          swift_bridgeObjectRetain();
                                          swift_bridgeObjectRetain();
                                          swift_bridgeObjectRetain();
                                          swift_bridgeObjectRetain();
                                          swift_bridgeObjectRetain();
                                          swift_bridgeObjectRetain();
                                          v1287 = (unsigned int (*)(char *, uint64_t, uint64_t))v458;
                                          __srca = (void (**)(void *, const void *, uint64_t))v457;
                                          if (v458(v1277, 1, v456))
                                          {
                                            uint64_t v459 = sub_1A07856F8(&qword_1E94FBB08);
                                            memcpy(v1275, v1277, *(void *)(*(void *)(v459 - 8) + 64));
                                          }
                                          else
                                          {
                                            (*(void (**)(void *, char *, uint64_t))(v457 + 16))(v1275, v1277, v456);
                                            (*(void (**)(void *, void, uint64_t, uint64_t))(v457 + 56))(v1275, 0, 1, v456);
                                          }
                                          uint64_t v467 = v1332;
                                          uint64_t v468 = v1332[17];
                                          uint64_t v469 = (void *)(v234 + v468);
                                          uint64_t v470 = &v235[v468];
                                          uint64_t v4 = v1304;
                                          if (v1287(&v235[v468], 1, v456))
                                          {
                                            uint64_t v471 = sub_1A07856F8(&qword_1E94FBB08);
                                            memcpy(v469, v470, *(void *)(*(void *)(v471 - 8) + 64));
                                          }
                                          else
                                          {
                                            __srca[2](v469, v470, v456);
                                            ((void (*)(void *, void, uint64_t, uint64_t))__srca[7])(v469, 0, 1, v456);
                                          }
                                          *(void *)(v234 + v1332[18]) = *(void *)&v235[v1332[18]];
                                          uint64_t v476 = v1332[19];
                                          uint64_t v477 = (void *)(v234 + v476);
                                          v478 = &v235[v476];
                                          swift_bridgeObjectRetain();
                                          if (v1287(v478, 1, v456))
                                          {
                                            uint64_t v479 = sub_1A07856F8(&qword_1E94FBB08);
                                            memcpy(v477, v478, *(void *)(*(void *)(v479 - 8) + 64));
                                          }
                                          else
                                          {
                                            __srca[2](v477, v478, v456);
                                            ((void (*)(void *, void, uint64_t, uint64_t))__srca[7])(v477, 0, 1, v456);
                                          }
                                          uint64_t v484 = v1332[20];
                                          uint64_t v485 = (void *)(v234 + v484);
                                          uint64_t v486 = &v235[v484];
                                          if (v1287(&v235[v484], 1, v456))
                                          {
                                            uint64_t v487 = sub_1A07856F8(&qword_1E94FBB08);
                                            memcpy(v485, v486, *(void *)(*(void *)(v487 - 8) + 64));
                                          }
                                          else
                                          {
                                            __srca[2](v485, v486, v456);
                                            ((void (*)(void *, void, uint64_t, uint64_t))__srca[7])(v485, 0, 1, v456);
                                          }
                                          *(void *)(v234 + v1332[21]) = *(void *)&v235[v1332[21]];
                                          uint64_t v492 = v1332[22];
                                          uint64_t v493 = v234 + v492;
                                          uint64_t v494 = &v235[v492];
                                          unint64_t v495 = *(void *)&v235[v492 + 8];
                                          swift_bridgeObjectRetain();
                                          if (v495 >> 60 == 15)
                                          {
                                            *(_OWORD *)uint64_t v493 = *(_OWORD *)v494;
                                          }
                                          else
                                          {
                                            uint64_t v496 = *(void *)v494;
                                            sub_1A08AF278(v496, v495);
                                            *(void *)uint64_t v493 = v496;
                                            *(void *)(v493 + 8) = v495;
                                          }
                                          uint64_t v497 = v1332[23];
                                          v498 = (void *)(v234 + v497);
                                          uint64_t v499 = &v235[v497];
                                          void *v498 = *(void *)v499;
                                          v498[1] = *((void *)v499 + 1);
                                          uint64_t v500 = v1332[24];
                                          uint64_t v501 = v234 + v500;
                                          uint64_t v502 = &v235[v500];
                                          uint64_t v503 = *(void *)v502;
                                          *(unsigned char *)(v501 + 8) = v502[8];
                                          *(void *)uint64_t v501 = v503;
                                          uint64_t v504 = v1332[25];
                                          uint64_t v505 = v234 + v504;
                                          uint64_t v506 = &v235[v504];
                                          uint64_t v507 = *(void *)v506;
                                          *(unsigned char *)(v505 + 8) = v506[8];
                                          *(void *)uint64_t v505 = v507;
                                          *(unsigned char *)(v234 + v1332[26]) = v235[v1332[26]];
                                          uint64_t v508 = v1332[27];
                                          v509 = (void *)(v234 + v508);
                                          uint64_t v510 = &v235[v508];
                                          swift_bridgeObjectRetain();
                                          if (((unsigned int (*)(char *, uint64_t, uint64_t))v1337)(v510, 1, v1324))
                                          {
                                            uint64_t v511 = sub_1A07856F8((uint64_t *)&unk_1E94FAF20);
                                            memcpy(v509, v510, *(void *)(*(void *)(v511 - 8) + 64));
                                          }
                                          else
                                          {
                                            (*(void (**)(void *, char *, uint64_t))(v1335 + 16))(v509, v510, v1324);
                                            uint64_t v467 = v1332;
                                            (*(void (**)(void *, void, uint64_t, uint64_t))(v1335 + 56))(v509, 0, 1, v1324);
                                          }
                                          *(void *)(v234 + v467[28]) = *(void *)&v235[v467[28]];
                                          uint64_t v532 = v467[29];
                                          v533 = (void *)(v234 + v532);
                                          v534 = &v235[v532];
                                          void *v533 = *(void *)v534;
                                          v533[1] = *((void *)v534 + 1);
                                          *(unsigned char *)(v234 + v467[30]) = v235[v467[30]];
                                          uint64_t v535 = (void (*)(uint64_t, void, uint64_t, int *))v1301[7];
                                          swift_bridgeObjectRetain();
                                          swift_bridgeObjectRetain();
                                          v535(v234, 0, 1, v467);
LABEL_276:
                                          uint64_t v674 = v128[40];
                                          v675 = (void *)(v1338 + v674);
                                          v676 = &v14[v674];
                                          void *v675 = *(void *)v676;
                                          v675[1] = *((void *)v676 + 1);
                                          swift_bridgeObjectRetain();
                                          swift_bridgeObjectRelease();
                                          *(unsigned char *)(v1338 + v128[41]) = v14[v128[41]];
                                          uint64_t v677 = v128[42];
                                          v678 = (void *)(v1338 + v677);
                                          v679 = &v14[v677];
                                          void *v678 = *(void *)v679;
                                          v678[1] = *((void *)v679 + 1);
                                          swift_bridgeObjectRetain();
                                          swift_bridgeObjectRelease();
                                          *(unsigned char *)(v1338 + v128[43]) = v14[v128[43]];
                                          *(unsigned char *)(v1338 + v128[44]) = v14[v128[44]];
                                          *(unsigned char *)(v1338 + v128[45]) = v14[v128[45]];
                                          *(unsigned char *)(v1338 + v128[46]) = v14[v128[46]];
                                          uint64_t v680 = v128[47];
                                          v681 = (void *)(v1338 + v680);
                                          v682 = &v14[v680];
                                          void *v681 = *(void *)v682;
                                          v681[1] = *((void *)v682 + 1);
                                          swift_bridgeObjectRetain();
                                          swift_bridgeObjectRelease();
                                          uint64_t v683 = v128[48];
                                          v684 = (void *)(v1338 + v683);
                                          v685 = &v14[v683];
                                          void *v684 = *(void *)v685;
                                          v684[1] = *((void *)v685 + 1);
                                          swift_bridgeObjectRetain();
                                          swift_bridgeObjectRelease();
                                          *(void *)(v1338 + v128[49]) = *(void *)&v14[v128[49]];
                                          swift_bridgeObjectRetain();
                                          swift_bridgeObjectRelease();
                                          uint64_t v686 = v128[50];
                                          v687 = (void *)(v1338 + v686);
                                          v688 = &v14[v686];
                                          void *v687 = *(void *)v688;
                                          v687[1] = *((void *)v688 + 1);
                                          swift_bridgeObjectRetain();
                                          swift_bridgeObjectRelease();
                                          uint64_t v689 = v128[51];
                                          v690 = (void *)(v1338 + v689);
                                          v691 = &v14[v689];
                                          void *v690 = *(void *)v691;
                                          v690[1] = *((void *)v691 + 1);
                                          swift_bridgeObjectRetain();
                                          swift_bridgeObjectRelease();
                                          uint64_t v692 = v128[52];
                                          v693 = (void *)(v1338 + v692);
                                          v694 = &v14[v692];
                                          unsigned int v695 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v1337)(v1338 + v692, 1, v1324);
                                          unsigned int v696 = ((uint64_t (*)(char *, uint64_t, uint64_t))v1337)(v694, 1, v1324);
                                          if (v695)
                                          {
                                            if (!v696)
                                            {
                                              (*(void (**)(void *, char *, uint64_t))(v1335 + 16))(v693, v694, v1324);
                                              (*(void (**)(void *, void, uint64_t, uint64_t))(v1335 + 56))(v693, 0, 1, v1324);
                                              goto LABEL_282;
                                            }
                                          }
                                          else
                                          {
                                            if (!v696)
                                            {
                                              (*(void (**)(void *, char *, uint64_t))(v1335 + 24))(v693, v694, v1324);
LABEL_282:
                                              uint64_t v698 = v128[53];
                                              uint64_t v699 = v1338 + v698;
                                              v700 = &v14[v698];
                                              uint64_t v701 = *(void *)v700;
                                              *(unsigned char *)(v699 + 8) = v700[8];
                                              *(void *)uint64_t v699 = v701;
                                              uint64_t v702 = v128[54];
                                              uint64_t v703 = v1338 + v702;
                                              v704 = &v14[v702];
                                              uint64_t v705 = *(void *)v704;
                                              *(unsigned char *)(v703 + 8) = v704[8];
                                              *(void *)uint64_t v703 = v705;
                                              uint64_t v706 = v128[55];
                                              v707 = (void *)(v1338 + v706);
                                              v708 = &v14[v706];
                                              void *v707 = *(void *)v708;
                                              v707[1] = *((void *)v708 + 1);
                                              swift_bridgeObjectRetain();
                                              swift_bridgeObjectRelease();
                                              *(unsigned char *)(v1338 + v128[56]) = v14[v128[56]];
                                              *(unsigned char *)(v1338 + v128[57]) = v14[v128[57]];
                                              uint64_t v709 = v128[58];
                                              v710 = (void *)(v1338 + v709);
                                              v711 = &v14[v709];
                                              void *v710 = *(void *)v711;
                                              v710[1] = *((void *)v711 + 1);
                                              swift_bridgeObjectRetain();
                                              swift_bridgeObjectRelease();
                                              uint64_t v712 = v128[59];
                                              v713 = (void *)(v1338 + v712);
                                              v714 = &v14[v712];
                                              void *v713 = *(void *)v714;
                                              v713[1] = *((void *)v714 + 1);
                                              swift_bridgeObjectRetain();
                                              swift_bridgeObjectRelease();
                                              uint64_t v715 = v128[60];
                                              v716 = (void *)(v1338 + v715);
                                              v717 = &v14[v715];
                                              void *v716 = *(void *)v717;
                                              v716[1] = *((void *)v717 + 1);
                                              swift_bridgeObjectRetain();
                                              swift_bridgeObjectRelease();
                                              uint64_t v718 = v128[61];
                                              uint64_t v719 = v1338 + v718;
                                              v720 = &v14[v718];
                                              uint64_t v721 = *(void *)v720;
                                              *(unsigned char *)(v719 + 8) = v720[8];
                                              *(void *)uint64_t v719 = v721;
                                              uint64_t v722 = v128[62];
                                              v723 = (void *)(v1338 + v722);
                                              v724 = &v14[v722];
                                              void *v723 = *(void *)v724;
                                              v723[1] = *((void *)v724 + 1);
                                              swift_bridgeObjectRetain();
                                              swift_bridgeObjectRelease();
                                              uint64_t v725 = v128[63];
                                              uint64_t v726 = v1338 + v725;
                                              v727 = &v14[v725];
                                              int v728 = *(_DWORD *)v727;
                                              *(unsigned char *)(v726 + 4) = v727[4];
                                              *(_DWORD *)uint64_t v726 = v728;
                                              uint64_t v729 = v128[64];
                                              v730 = (void *)(v1338 + v729);
                                              v731 = &v14[v729];
                                              void *v730 = *(void *)v731;
                                              v730[1] = *((void *)v731 + 1);
                                              swift_bridgeObjectRetain();
                                              swift_bridgeObjectRelease();
                                              uint64_t v732 = v128[65];
                                              uint64_t v733 = v1338 + v732;
                                              v734 = &v14[v732];
                                              uint64_t v735 = *(void *)v734;
                                              *(unsigned char *)(v733 + 8) = v734[8];
                                              *(void *)uint64_t v733 = v735;
                                              uint64_t v736 = v128[66];
                                              uint64_t v737 = v1338 + v736;
                                              v738 = &v14[v736];
                                              long long v739 = *(_OWORD *)v738;
                                              *(unsigned char *)(v737 + 16) = v738[16];
                                              *(_OWORD *)uint64_t v737 = v739;
                                              uint64_t v740 = v128[67];
                                              v741 = (void *)(v1338 + v740);
                                              v742 = &v14[v740];
                                              void *v741 = *(void *)v742;
                                              v741[1] = *((void *)v742 + 1);
                                              swift_bridgeObjectRetain();
                                              swift_bridgeObjectRelease();
                                              *(void *)(v1338 + v128[68]) = *(void *)&v14[v128[68]];
                                              swift_bridgeObjectRetain();
                                              swift_bridgeObjectRelease();
                                              uint64_t v743 = v128[69];
                                              v744 = (void *)(v1338 + v743);
                                              v745 = &v14[v743];
                                              void *v744 = *(void *)v745;
                                              v744[1] = *((void *)v745 + 1);
                                              swift_bridgeObjectRetain();
                                              swift_bridgeObjectRelease();
                                              *(unsigned char *)(v1338 + v128[70]) = v14[v128[70]];
                                              *(unsigned char *)(v1338 + v128[71]) = v14[v128[71]];
                                              *(unsigned char *)(v1338 + v128[72]) = v14[v128[72]];
                                              uint64_t v746 = v128[73];
                                              uint64_t v747 = v1338 + v746;
                                              v748 = &v14[v746];
                                              uint64_t v749 = *(void *)v748;
                                              *(unsigned char *)(v747 + 8) = v748[8];
                                              *(void *)uint64_t v747 = v749;
                                              uint64_t v750 = *(int *)(v1327 + 20);
                                              uint64_t v751 = v1338 + v750;
                                              v752 = &v14[v750];
                                              uint64_t v1328 = *((void *)v128 - 1);
                                              v753 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v1328 + 48);
                                              int v754 = v753(v1338 + v750, 1, v128);
                                              int v755 = v753((uint64_t)v752, 1, v128);
                                              v1339 = v752;
                                              if (v754)
                                              {
                                                if (!v755)
                                                {
                                                  v1310 = v5;
                                                  if (*((void *)v752 + 1) == 1)
                                                  {
                                                    *(_OWORD *)uint64_t v751 = *(_OWORD *)v752;
                                                    long long v756 = *((_OWORD *)v752 + 1);
                                                    long long v757 = *((_OWORD *)v752 + 2);
                                                    long long v758 = *((_OWORD *)v752 + 3);
                                                    *(unsigned char *)(v751 + 64) = v752[64];
                                                    *(_OWORD *)(v751 + 32) = v757;
                                                    *(_OWORD *)(v751 + 48) = v758;
                                                    *(_OWORD *)(v751 + 16) = v756;
                                                  }
                                                  else
                                                  {
                                                    *(void *)uint64_t v751 = *(void *)v752;
                                                    *(void *)(v751 + 8) = *((void *)v752 + 1);
                                                    *(void *)(v751 + 16) = *((void *)v752 + 2);
                                                    *(void *)(v751 + 24) = *((void *)v752 + 3);
                                                    *(void *)(v751 + 32) = *((void *)v752 + 4);
                                                    *(void *)(v751 + 40) = *((void *)v752 + 5);
                                                    *(void *)(v751 + 48) = *((void *)v752 + 6);
                                                    *(void *)(v751 + 56) = *((void *)v752 + 7);
                                                    *(unsigned char *)(v751 + 64) = v752[64];
                                                    swift_bridgeObjectRetain();
                                                    swift_bridgeObjectRetain();
                                                    swift_bridgeObjectRetain();
                                                    swift_bridgeObjectRetain();
                                                  }
                                                  *(void *)(v751 + 72) = *((void *)v752 + 9);
                                                  *(void *)(v751 + 80) = *((void *)v752 + 10);
                                                  *(void *)(v751 + 88) = *((void *)v752 + 11);
                                                  *(void *)(v751 + 96) = *((void *)v752 + 12);
                                                  *(void *)(v751 + 104) = *((void *)v752 + 13);
                                                  *(void *)(v751 + 112) = *((void *)v752 + 14);
                                                  *(void *)(v751 + 120) = *((void *)v752 + 15);
                                                  *(void *)(v751 + 128) = *((void *)v752 + 16);
                                                  *(void *)(v751 + 136) = *((void *)v752 + 17);
                                                  *(void *)(v751 + 144) = *((void *)v752 + 18);
                                                  *(void *)(v751 + 152) = *((void *)v752 + 19);
                                                  *(void *)(v751 + 160) = *((void *)v752 + 20);
                                                  *(void *)(v751 + 168) = *((void *)v752 + 21);
                                                  *(void *)(v751 + 176) = *((void *)v752 + 22);
                                                  *(void *)(v751 + 184) = *((void *)v752 + 23);
                                                  *(void *)(v751 + 192) = *((void *)v752 + 24);
                                                  uint64_t v764 = *((void *)v752 + 25);
                                                  *(unsigned char *)(v751 + 208) = v752[208];
                                                  *(void *)(v751 + 200) = v764;
                                                  *(unsigned char *)(v751 + 209) = v752[209];
                                                  *(void *)(v751 + 216) = *((void *)v752 + 27);
                                                  *(void *)(v751 + 224) = *((void *)v752 + 28);
                                                  uint64_t v765 = v128[16];
                                                  v1297 = (void *)(v751 + v765);
                                                  v766 = &v752[v765];
                                                  swift_bridgeObjectRetain();
                                                  swift_bridgeObjectRetain();
                                                  swift_bridgeObjectRetain();
                                                  swift_bridgeObjectRetain();
                                                  swift_bridgeObjectRetain();
                                                  swift_bridgeObjectRetain();
                                                  swift_bridgeObjectRetain();
                                                  swift_bridgeObjectRetain();
                                                  swift_bridgeObjectRetain();
                                                  if (((unsigned int (*)(char *, uint64_t, uint64_t))v1337)(v766, 1, v1324))
                                                  {
                                                    uint64_t v767 = sub_1A07856F8((uint64_t *)&unk_1E94FAF20);
                                                    memcpy(v1297, v766, *(void *)(*(void *)(v767 - 8) + 64));
                                                  }
                                                  else
                                                  {
                                                    (*(void (**)(void *, char *, uint64_t))(v1335 + 16))(v1297, v766, v1324);
                                                    (*(void (**)(void *, void, uint64_t, uint64_t))(v1335 + 56))(v1297, 0, 1, v1324);
                                                  }
                                                  uint64_t v768 = v128[17];
                                                  uint64_t v769 = v751 + v768;
                                                  v770 = &v752[v768];
                                                  uint64_t v771 = *(void *)v770;
                                                  *(unsigned char *)(v769 + 8) = v770[8];
                                                  *(void *)uint64_t v769 = v771;
                                                  uint64_t v772 = v128[18];
                                                  v773 = (void *)(v751 + v772);
                                                  v774 = &v752[v772];
                                                  void *v773 = *(void *)v774;
                                                  v773[1] = *((void *)v774 + 1);
                                                  uint64_t v775 = v128[19];
                                                  v776 = (void *)(v751 + v775);
                                                  v777 = &v752[v775];
                                                  void *v776 = *(void *)v777;
                                                  v776[1] = *((void *)v777 + 1);
                                                  uint64_t v778 = v128[20];
                                                  v779 = (void *)(v751 + v778);
                                                  v780 = &v752[v778];
                                                  void *v779 = *(void *)v780;
                                                  v779[1] = *((void *)v780 + 1);
                                                  uint64_t v781 = v128[21];
                                                  v782 = (void *)(v751 + v781);
                                                  v783 = &v752[v781];
                                                  void *v782 = *(void *)v783;
                                                  v782[1] = *((void *)v783 + 1);
                                                  uint64_t v784 = v128[22];
                                                  uint64_t v785 = v751 + v784;
                                                  v786 = &v752[v784];
                                                  uint64_t v787 = *(void *)v786;
                                                  *(unsigned char *)(v785 + 8) = v786[8];
                                                  *(void *)uint64_t v785 = v787;
                                                  uint64_t v788 = v128[23];
                                                  v789 = (void *)(v751 + v788);
                                                  v790 = &v752[v788];
                                                  void *v789 = *(void *)v790;
                                                  v789[1] = *((void *)v790 + 1);
                                                  uint64_t v791 = v128[24];
                                                  v792 = (void *)(v751 + v791);
                                                  v793 = &v752[v791];
                                                  void *v792 = *(void *)v793;
                                                  v792[1] = *((void *)v793 + 1);
                                                  uint64_t v794 = v128[25];
                                                  uint64_t v795 = v751 + v794;
                                                  v796 = (uint64_t *)&v1339[v794];
                                                  unint64_t v797 = *(void *)&v1339[v794 + 8];
                                                  swift_bridgeObjectRetain();
                                                  swift_bridgeObjectRetain();
                                                  swift_bridgeObjectRetain();
                                                  swift_bridgeObjectRetain();
                                                  swift_bridgeObjectRetain();
                                                  swift_bridgeObjectRetain();
                                                  if (v797 >> 60 == 15)
                                                  {
                                                    *(_OWORD *)uint64_t v795 = *(_OWORD *)v796;
                                                  }
                                                  else
                                                  {
                                                    uint64_t v798 = *v796;
                                                    sub_1A08AF278(*v796, v797);
                                                    *(void *)uint64_t v795 = v798;
                                                    *(void *)(v795 + 8) = v797;
                                                  }
                                                  uint64_t v799 = v128[26];
                                                  v800 = (void *)(v751 + v799);
                                                  v801 = &v1339[v799];
                                                  void *v800 = *(void *)v801;
                                                  v800[1] = *((void *)v801 + 1);
                                                  *(void *)(v751 + v128[27]) = *(void *)&v1339[v128[27]];
                                                  uint64_t v802 = v128[28];
                                                  uint64_t v803 = v751 + v802;
                                                  v804 = (uint64_t *)&v1339[v802];
                                                  unint64_t v805 = *(void *)&v1339[v802 + 8];
                                                  swift_bridgeObjectRetain();
                                                  swift_bridgeObjectRetain();
                                                  if (v805 >> 60 == 15)
                                                  {
                                                    *(_OWORD *)uint64_t v803 = *(_OWORD *)v804;
                                                  }
                                                  else
                                                  {
                                                    uint64_t v806 = *v804;
                                                    sub_1A08AF278(*v804, v805);
                                                    *(void *)uint64_t v803 = v806;
                                                    *(void *)(v803 + 8) = v805;
                                                  }
                                                  uint64_t v807 = v128[29];
                                                  v808 = (void *)(v751 + v807);
                                                  v809 = &v1339[v807];
                                                  if (((unsigned int (*)(char *, uint64_t, uint64_t))v1337)(&v1339[v807], 1, v1324))
                                                  {
                                                    uint64_t v810 = sub_1A07856F8((uint64_t *)&unk_1E94FAF20);
                                                    memcpy(v808, v809, *(void *)(*(void *)(v810 - 8) + 64));
                                                  }
                                                  else
                                                  {
                                                    (*(void (**)(void *, char *, uint64_t))(v1335 + 16))(v808, v809, v1324);
                                                    (*(void (**)(void *, void, uint64_t, uint64_t))(v1335 + 56))(v808, 0, 1, v1324);
                                                  }
                                                  uint64_t v811 = v128[30];
                                                  v812 = (void *)(v751 + v811);
                                                  v813 = &v1339[v811];
                                                  if (((unsigned int (*)(char *, uint64_t, uint64_t))v1337)(&v1339[v811], 1, v1324))
                                                  {
                                                    uint64_t v814 = sub_1A07856F8((uint64_t *)&unk_1E94FAF20);
                                                    memcpy(v812, v813, *(void *)(*(void *)(v814 - 8) + 64));
                                                  }
                                                  else
                                                  {
                                                    (*(void (**)(void *, char *, uint64_t))(v1335 + 16))(v812, v813, v1324);
                                                    (*(void (**)(void *, void, uint64_t, uint64_t))(v1335 + 56))(v812, 0, 1, v1324);
                                                  }
                                                  uint64_t v815 = v128[31];
                                                  v816 = (void *)(v751 + v815);
                                                  v817 = &v1339[v815];
                                                  if (((unsigned int (*)(char *, uint64_t, uint64_t))v1337)(&v1339[v815], 1, v1324))
                                                  {
                                                    uint64_t v818 = sub_1A07856F8((uint64_t *)&unk_1E94FAF20);
                                                    memcpy(v816, v817, *(void *)(*(void *)(v818 - 8) + 64));
                                                  }
                                                  else
                                                  {
                                                    (*(void (**)(void *, char *, uint64_t))(v1335 + 16))(v816, v817, v1324);
                                                    (*(void (**)(void *, void, uint64_t, uint64_t))(v1335 + 56))(v816, 0, 1, v1324);
                                                  }
                                                  uint64_t v819 = v128[32];
                                                  uint64_t v820 = v751 + v819;
                                                  v821 = &v1339[v819];
                                                  uint64_t v822 = *(void *)v821;
                                                  *(unsigned char *)(v820 + 8) = v821[8];
                                                  *(void *)uint64_t v820 = v822;
                                                  *(unsigned char *)(v751 + v128[33]) = v1339[v128[33]];
                                                  uint64_t v823 = v128[34];
                                                  uint64_t v824 = v751 + v823;
                                                  v825 = (uint64_t *)&v1339[v823];
                                                  unint64_t v826 = v825[1];
                                                  if (v826 >> 60 == 15)
                                                  {
                                                    *(_OWORD *)uint64_t v824 = *(_OWORD *)v825;
                                                  }
                                                  else
                                                  {
                                                    uint64_t v827 = *v825;
                                                    sub_1A08AF278(*v825, v825[1]);
                                                    *(void *)uint64_t v824 = v827;
                                                    *(void *)(v824 + 8) = v826;
                                                  }
                                                  uint64_t v828 = v128[35];
                                                  v829 = (void *)(v751 + v828);
                                                  v830 = &v1339[v828];
                                                  void *v829 = *(void *)v830;
                                                  v829[1] = *((void *)v830 + 1);
                                                  uint64_t v831 = v128[36];
                                                  v832 = (void *)(v751 + v831);
                                                  v833 = &v1339[v831];
                                                  swift_bridgeObjectRetain();
                                                  if (((unsigned int (*)(char *, uint64_t, uint64_t))v1337)(v833, 1, v1324))
                                                  {
                                                    uint64_t v834 = sub_1A07856F8((uint64_t *)&unk_1E94FAF20);
                                                    memcpy(v832, v833, *(void *)(*(void *)(v834 - 8) + 64));
                                                  }
                                                  else
                                                  {
                                                    (*(void (**)(void *, char *, uint64_t))(v1335 + 16))(v832, v833, v1324);
                                                    (*(void (**)(void *, void, uint64_t, uint64_t))(v1335 + 56))(v832, 0, 1, v1324);
                                                  }
                                                  uint64_t v835 = v128[37];
                                                  uint64_t v836 = v751 + v835;
                                                  v837 = &v1339[v835];
                                                  uint64_t v838 = *(void *)v837;
                                                  *(unsigned char *)(v836 + 8) = v837[8];
                                                  *(void *)uint64_t v836 = v838;
                                                  uint64_t v839 = v128[38];
                                                  uint64_t v840 = v751 + v839;
                                                  v841 = (uint64_t *)&v1339[v839];
                                                  unint64_t v842 = v841[1];
                                                  if (v842 >> 60 == 15)
                                                  {
                                                    *(_OWORD *)uint64_t v840 = *(_OWORD *)v841;
                                                  }
                                                  else
                                                  {
                                                    uint64_t v843 = *v841;
                                                    sub_1A08AF278(*v841, v841[1]);
                                                    *(void *)uint64_t v840 = v843;
                                                    *(void *)(v840 + 8) = v842;
                                                  }
                                                  uint64_t v844 = v128[39];
                                                  v845 = (void *)(v751 + v844);
                                                  v846 = &v1339[v844];
                                                  if (v1319(&v1339[v844], 1, v1332))
                                                  {
                                                    uint64_t v847 = sub_1A07856F8(&qword_1E94FBB10);
                                                    memcpy(v845, v846, *(void *)(*(void *)(v847 - 8) + 64));
                                                  }
                                                  else
                                                  {
                                                    void *v845 = *(void *)v846;
                                                    v845[1] = *((void *)v846 + 1);
                                                    v848 = v846 + 16;
                                                    unint64_t v849 = *((void *)v846 + 3);
                                                    swift_bridgeObjectRetain();
                                                    if (v849 >> 60 == 15)
                                                    {
                                                      *((_OWORD *)v845 + 1) = *v848;
                                                    }
                                                    else
                                                    {
                                                      uint64_t v853 = *(void *)v848;
                                                      sub_1A08AF278(v853, v849);
                                                      v845[2] = v853;
                                                      v845[3] = v849;
                                                    }
                                                    uint64_t v854 = *((void *)v846 + 4);
                                                    *((unsigned char *)v845 + 40) = v846[40];
                                                    v845[4] = v854;
                                                    v845[6] = *((void *)v846 + 6);
                                                    v845[7] = *((void *)v846 + 7);
                                                    v845[8] = *((void *)v846 + 8);
                                                    v845[9] = *((void *)v846 + 9);
                                                    v845[10] = *((void *)v846 + 10);
                                                    v845[11] = *((void *)v846 + 11);
                                                    v845[12] = *((void *)v846 + 12);
                                                    v845[13] = *((void *)v846 + 13);
                                                    *((unsigned char *)v845 + 112) = v846[112];
                                                    *((unsigned char *)v845 + 113) = v846[113];
                                                    v845[15] = *((void *)v846 + 15);
                                                    v845[16] = *((void *)v846 + 16);
                                                    *((unsigned char *)v845 + 136) = v846[136];
                                                    v845[18] = *((void *)v846 + 18);
                                                    v845[19] = *((void *)v846 + 19);
                                                    uint64_t v855 = v1332[16];
                                                    v1298 = (char *)v845 + v855;
                                                    __srcc = &v846[v855];
                                                    uint64_t v856 = sub_1A09F34B8();
                                                    uint64_t v1291 = *(void *)(v856 - 8);
                                                    v857 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v1291 + 48);
                                                    swift_bridgeObjectRetain();
                                                    swift_bridgeObjectRetain();
                                                    swift_bridgeObjectRetain();
                                                    swift_bridgeObjectRetain();
                                                    swift_bridgeObjectRetain();
                                                    swift_bridgeObjectRetain();
                                                    if (v857(__srcc, 1, v856))
                                                    {
                                                      uint64_t v858 = sub_1A07856F8(&qword_1E94FBB08);
                                                      memcpy(v1298, __srcc, *(void *)(*(void *)(v858 - 8) + 64));
                                                      uint64_t v859 = v1291;
                                                    }
                                                    else
                                                    {
                                                      uint64_t v859 = v1291;
                                                      (*(void (**)(char *, char *, uint64_t))(v1291 + 16))(v1298, __srcc, v856);
                                                      (*(void (**)(char *, void, uint64_t, uint64_t))(v1291 + 56))(v1298, 0, 1, v856);
                                                    }
                                                    uint64_t v977 = v1332[17];
                                                    v978 = (char *)v845 + v977;
                                                    v979 = &v846[v977];
                                                    if (v857(&v846[v977], 1, v856))
                                                    {
                                                      uint64_t v980 = sub_1A07856F8(&qword_1E94FBB08);
                                                      memcpy(v978, v979, *(void *)(*(void *)(v980 - 8) + 64));
                                                    }
                                                    else
                                                    {
                                                      (*(void (**)(char *, char *, uint64_t))(v859 + 16))(v978, v979, v856);
                                                      (*(void (**)(char *, void, uint64_t, uint64_t))(v859 + 56))(v978, 0, 1, v856);
                                                    }
                                                    *(void *)((char *)v845 + v1332[18]) = *(void *)&v846[v1332[18]];
                                                    uint64_t v981 = v1332[19];
                                                    v982 = (char *)v845 + v981;
                                                    v983 = &v846[v981];
                                                    swift_bridgeObjectRetain();
                                                    if (v857(v983, 1, v856))
                                                    {
                                                      uint64_t v984 = sub_1A07856F8(&qword_1E94FBB08);
                                                      memcpy(v982, v983, *(void *)(*(void *)(v984 - 8) + 64));
                                                    }
                                                    else
                                                    {
                                                      (*(void (**)(char *, char *, uint64_t))(v859 + 16))(v982, v983, v856);
                                                      (*(void (**)(char *, void, uint64_t, uint64_t))(v859 + 56))(v982, 0, 1, v856);
                                                    }
                                                    uint64_t v985 = v1332[20];
                                                    v986 = (char *)v845 + v985;
                                                    v987 = &v846[v985];
                                                    if (v857(&v846[v985], 1, v856))
                                                    {
                                                      uint64_t v988 = sub_1A07856F8(&qword_1E94FBB08);
                                                      memcpy(v986, v987, *(void *)(*(void *)(v988 - 8) + 64));
                                                    }
                                                    else
                                                    {
                                                      (*(void (**)(char *, char *, uint64_t))(v859 + 16))(v986, v987, v856);
                                                      (*(void (**)(char *, void, uint64_t, uint64_t))(v859 + 56))(v986, 0, 1, v856);
                                                    }
                                                    *(void *)((char *)v845 + v1332[21]) = *(void *)&v846[v1332[21]];
                                                    uint64_t v989 = v1332[22];
                                                    v990 = (char *)v845 + v989;
                                                    v991 = &v846[v989];
                                                    unint64_t v992 = *(void *)&v846[v989 + 8];
                                                    swift_bridgeObjectRetain();
                                                    if (v992 >> 60 == 15)
                                                    {
                                                      *(_OWORD *)v990 = *(_OWORD *)v991;
                                                    }
                                                    else
                                                    {
                                                      uint64_t v993 = *(void *)v991;
                                                      sub_1A08AF278(v993, v992);
                                                      *(void *)v990 = v993;
                                                      *((void *)v990 + 1) = v992;
                                                    }
                                                    uint64_t v994 = v1332[23];
                                                    v995 = (void *)((char *)v845 + v994);
                                                    v996 = &v846[v994];
                                                    void *v995 = *(void *)v996;
                                                    v995[1] = *((void *)v996 + 1);
                                                    uint64_t v997 = v1332[24];
                                                    v998 = (char *)v845 + v997;
                                                    v999 = &v846[v997];
                                                    uint64_t v1000 = *(void *)v999;
                                                    v998[8] = v999[8];
                                                    *(void *)v998 = v1000;
                                                    uint64_t v1001 = v1332[25];
                                                    v1002 = (char *)v845 + v1001;
                                                    v1003 = &v846[v1001];
                                                    uint64_t v1004 = *(void *)v1003;
                                                    v1002[8] = v1003[8];
                                                    *(void *)v1002 = v1004;
                                                    *((unsigned char *)v845 + v1332[26]) = v846[v1332[26]];
                                                    uint64_t v1005 = v1332[27];
                                                    v1006 = (char *)v845 + v1005;
                                                    v1007 = &v846[v1005];
                                                    swift_bridgeObjectRetain();
                                                    if (((unsigned int (*)(char *, uint64_t, uint64_t))v1337)(v1007, 1, v1324))
                                                    {
                                                      uint64_t v1008 = sub_1A07856F8((uint64_t *)&unk_1E94FAF20);
                                                      memcpy(v1006, v1007, *(void *)(*(void *)(v1008 - 8) + 64));
                                                    }
                                                    else
                                                    {
                                                      (*(void (**)(char *, char *, uint64_t))(v1335 + 16))(v1006, v1007, v1324);
                                                      (*(void (**)(char *, void, uint64_t, uint64_t))(v1335 + 56))(v1006, 0, 1, v1324);
                                                    }
                                                    *(void *)((char *)v845 + v1332[28]) = *(void *)&v846[v1332[28]];
                                                    uint64_t v1009 = v1332[29];
                                                    v1010 = (void *)((char *)v845 + v1009);
                                                    v1011 = &v846[v1009];
                                                    void *v1010 = *(void *)v1011;
                                                    v1010[1] = *((void *)v1011 + 1);
                                                    *((unsigned char *)v845 + v1332[30]) = v846[v1332[30]];
                                                    v1012 = (void (*)(void *, void, uint64_t, int *))v1301[7];
                                                    swift_bridgeObjectRetain();
                                                    swift_bridgeObjectRetain();
                                                    v1012(v845, 0, 1, v1332);
                                                  }
                                                  uint64_t v1013 = v128[40];
                                                  v1014 = (void *)(v751 + v1013);
                                                  v1015 = &v1339[v1013];
                                                  void *v1014 = *(void *)v1015;
                                                  v1014[1] = *((void *)v1015 + 1);
                                                  *(unsigned char *)(v751 + v128[41]) = v1339[v128[41]];
                                                  uint64_t v1016 = v128[42];
                                                  v1017 = (void *)(v751 + v1016);
                                                  v1018 = &v1339[v1016];
                                                  void *v1017 = *(void *)v1018;
                                                  v1017[1] = *((void *)v1018 + 1);
                                                  *(unsigned char *)(v751 + v128[43]) = v1339[v128[43]];
                                                  *(unsigned char *)(v751 + v128[44]) = v1339[v128[44]];
                                                  *(unsigned char *)(v751 + v128[45]) = v1339[v128[45]];
                                                  *(unsigned char *)(v751 + v128[46]) = v1339[v128[46]];
                                                  uint64_t v1019 = v128[47];
                                                  v1020 = (void *)(v751 + v1019);
                                                  v1021 = &v1339[v1019];
                                                  void *v1020 = *(void *)v1021;
                                                  v1020[1] = *((void *)v1021 + 1);
                                                  uint64_t v1022 = v128[48];
                                                  v1023 = (void *)(v751 + v1022);
                                                  v1024 = &v1339[v1022];
                                                  void *v1023 = *(void *)v1024;
                                                  v1023[1] = *((void *)v1024 + 1);
                                                  *(void *)(v751 + v128[49]) = *(void *)&v1339[v128[49]];
                                                  uint64_t v1025 = v128[50];
                                                  v1026 = (void *)(v751 + v1025);
                                                  v1027 = &v1339[v1025];
                                                  void *v1026 = *(void *)v1027;
                                                  v1026[1] = *((void *)v1027 + 1);
                                                  uint64_t v1028 = v128[51];
                                                  v1029 = (void *)(v751 + v1028);
                                                  v1030 = &v1339[v1028];
                                                  void *v1029 = *(void *)v1030;
                                                  v1029[1] = *((void *)v1030 + 1);
                                                  uint64_t v1031 = v128[52];
                                                  v1032 = (void *)(v751 + v1031);
                                                  v1033 = &v1339[v1031];
                                                  swift_bridgeObjectRetain();
                                                  swift_bridgeObjectRetain();
                                                  swift_bridgeObjectRetain();
                                                  swift_bridgeObjectRetain();
                                                  swift_bridgeObjectRetain();
                                                  swift_bridgeObjectRetain();
                                                  swift_bridgeObjectRetain();
                                                  if (((unsigned int (*)(char *, uint64_t, uint64_t))v1337)(v1033, 1, v1324))
                                                  {
                                                    uint64_t v1034 = sub_1A07856F8((uint64_t *)&unk_1E94FAF20);
                                                    memcpy(v1032, v1033, *(void *)(*(void *)(v1034 - 8) + 64));
                                                  }
                                                  else
                                                  {
                                                    (*(void (**)(void *, char *, uint64_t))(v1335 + 16))(v1032, v1033, v1324);
                                                    (*(void (**)(void *, void, uint64_t, uint64_t))(v1335 + 56))(v1032, 0, 1, v1324);
                                                  }
                                                  uint64_t v1035 = v128[53];
                                                  uint64_t v1036 = v751 + v1035;
                                                  v1037 = &v1339[v1035];
                                                  uint64_t v1038 = *(void *)v1037;
                                                  *(unsigned char *)(v1036 + 8) = v1037[8];
                                                  *(void *)uint64_t v1036 = v1038;
                                                  uint64_t v1039 = v128[54];
                                                  uint64_t v1040 = v751 + v1039;
                                                  v1041 = &v1339[v1039];
                                                  uint64_t v1042 = *(void *)v1041;
                                                  *(unsigned char *)(v1040 + 8) = v1041[8];
                                                  *(void *)uint64_t v1040 = v1042;
                                                  uint64_t v1043 = v128[55];
                                                  v1044 = (void *)(v751 + v1043);
                                                  v1045 = &v1339[v1043];
                                                  void *v1044 = *(void *)v1045;
                                                  v1044[1] = *((void *)v1045 + 1);
                                                  *(unsigned char *)(v751 + v128[56]) = v1339[v128[56]];
                                                  *(unsigned char *)(v751 + v128[57]) = v1339[v128[57]];
                                                  uint64_t v1046 = v128[58];
                                                  v1047 = (void *)(v751 + v1046);
                                                  v1048 = &v1339[v1046];
                                                  void *v1047 = *(void *)v1048;
                                                  v1047[1] = *((void *)v1048 + 1);
                                                  uint64_t v1049 = v128[59];
                                                  v1050 = (void *)(v751 + v1049);
                                                  v1051 = &v1339[v1049];
                                                  void *v1050 = *(void *)v1051;
                                                  v1050[1] = *((void *)v1051 + 1);
                                                  uint64_t v1052 = v128[60];
                                                  v1053 = (void *)(v751 + v1052);
                                                  v1054 = &v1339[v1052];
                                                  void *v1053 = *(void *)v1054;
                                                  v1053[1] = *((void *)v1054 + 1);
                                                  uint64_t v1055 = v128[61];
                                                  uint64_t v1056 = v751 + v1055;
                                                  v1057 = &v1339[v1055];
                                                  uint64_t v1058 = *(void *)v1057;
                                                  *(unsigned char *)(v1056 + 8) = v1057[8];
                                                  *(void *)uint64_t v1056 = v1058;
                                                  uint64_t v1059 = v128[62];
                                                  v1060 = (void *)(v751 + v1059);
                                                  v1061 = &v1339[v1059];
                                                  void *v1060 = *(void *)v1061;
                                                  v1060[1] = *((void *)v1061 + 1);
                                                  uint64_t v1062 = v128[63];
                                                  uint64_t v1063 = v751 + v1062;
                                                  v1064 = &v1339[v1062];
                                                  LODWORD(v1058) = *(_DWORD *)v1064;
                                                  *(unsigned char *)(v1063 + 4) = v1064[4];
                                                  *(_DWORD *)uint64_t v1063 = v1058;
                                                  uint64_t v1065 = v128[64];
                                                  v1066 = (void *)(v751 + v1065);
                                                  v1067 = &v1339[v1065];
                                                  void *v1066 = *(void *)v1067;
                                                  v1066[1] = *((void *)v1067 + 1);
                                                  uint64_t v1068 = v128[65];
                                                  uint64_t v1069 = v751 + v1068;
                                                  v1070 = &v1339[v1068];
                                                  uint64_t v1071 = *(void *)v1070;
                                                  *(unsigned char *)(v1069 + 8) = v1070[8];
                                                  *(void *)uint64_t v1069 = v1071;
                                                  uint64_t v1072 = v128[66];
                                                  uint64_t v1073 = v751 + v1072;
                                                  v1074 = &v1339[v1072];
                                                  long long v1075 = *(_OWORD *)v1074;
                                                  *(unsigned char *)(v1073 + 16) = v1074[16];
                                                  *(_OWORD *)uint64_t v1073 = v1075;
                                                  uint64_t v1076 = v128[67];
                                                  v1077 = (void *)(v751 + v1076);
                                                  v1078 = &v1339[v1076];
                                                  void *v1077 = *(void *)v1078;
                                                  v1077[1] = *((void *)v1078 + 1);
                                                  *(void *)(v751 + v128[68]) = *(void *)&v1339[v128[68]];
                                                  uint64_t v1079 = v128[69];
                                                  v1080 = (void *)(v751 + v1079);
                                                  v1081 = &v1339[v1079];
                                                  void *v1080 = *(void *)v1081;
                                                  v1080[1] = *((void *)v1081 + 1);
                                                  *(unsigned char *)(v751 + v128[70]) = v1339[v128[70]];
                                                  *(unsigned char *)(v751 + v128[71]) = v1339[v128[71]];
                                                  *(unsigned char *)(v751 + v128[72]) = v1339[v128[72]];
                                                  uint64_t v1082 = v128[73];
                                                  uint64_t v1083 = v751 + v1082;
                                                  v1084 = &v1339[v1082];
                                                  uint64_t v1085 = *(void *)v1084;
                                                  *(unsigned char *)(v1083 + 8) = v1084[8];
                                                  *(void *)uint64_t v1083 = v1085;
                                                  v1086 = *(void (**)(uint64_t, void, uint64_t, int *))(v1328 + 56);
                                                  swift_bridgeObjectRetain();
                                                  swift_bridgeObjectRetain();
                                                  swift_bridgeObjectRetain();
                                                  swift_bridgeObjectRetain();
                                                  swift_bridgeObjectRetain();
                                                  swift_bridgeObjectRetain();
                                                  swift_bridgeObjectRetain();
                                                  swift_bridgeObjectRetain();
                                                  swift_bridgeObjectRetain();
                                                  v1086(v751, 0, 1, v128);
                                                  uint64_t v5 = v1310;
                                                  goto LABEL_502;
                                                }
                                                goto LABEL_288;
                                              }
                                              if (v755)
                                              {
                                                sub_1A090C884(v751, type metadata accessor for RemoteIntentItemContent);
LABEL_288:
                                                uint64_t v759 = sub_1A07856F8(&qword_1E94FBB18);
                                                memcpy((void *)v751, v752, *(void *)(*(void *)(v759 - 8) + 64));
LABEL_502:
                                                a3 = v1317;
                                                goto LABEL_503;
                                              }
                                              uint64_t v760 = *((void *)v752 + 1);
                                              if (*(void *)(v751 + 8) == 1)
                                              {
                                                if (v760 == 1)
                                                {
                                                  *(_OWORD *)uint64_t v751 = *(_OWORD *)v752;
                                                  long long v761 = *((_OWORD *)v752 + 1);
                                                  long long v762 = *((_OWORD *)v752 + 2);
                                                  long long v763 = *((_OWORD *)v752 + 3);
                                                  *(unsigned char *)(v751 + 64) = v752[64];
                                                  *(_OWORD *)(v751 + 32) = v762;
                                                  *(_OWORD *)(v751 + 48) = v763;
                                                  *(_OWORD *)(v751 + 16) = v761;
                                                }
                                                else
                                                {
                                                  *(void *)uint64_t v751 = *(void *)v752;
                                                  *(void *)(v751 + 8) = *((void *)v752 + 1);
                                                  *(void *)(v751 + 16) = *((void *)v752 + 2);
                                                  *(void *)(v751 + 24) = *((void *)v752 + 3);
                                                  *(void *)(v751 + 32) = *((void *)v752 + 4);
                                                  *(void *)(v751 + 40) = *((void *)v752 + 5);
                                                  *(void *)(v751 + 48) = *((void *)v752 + 6);
                                                  *(void *)(v751 + 56) = *((void *)v752 + 7);
                                                  *(unsigned char *)(v751 + 64) = v752[64];
                                                  swift_bridgeObjectRetain();
                                                  swift_bridgeObjectRetain();
                                                  swift_bridgeObjectRetain();
                                                  swift_bridgeObjectRetain();
                                                }
                                              }
                                              else if (v760 == 1)
                                              {
                                                sub_1A0900DD4(v751);
                                                *(_OWORD *)uint64_t v751 = *(_OWORD *)v752;
                                                long long v851 = *((_OWORD *)v752 + 2);
                                                long long v850 = *((_OWORD *)v752 + 3);
                                                long long v852 = *((_OWORD *)v752 + 1);
                                                *(unsigned char *)(v751 + 64) = v752[64];
                                                *(_OWORD *)(v751 + 32) = v851;
                                                *(_OWORD *)(v751 + 48) = v850;
                                                *(_OWORD *)(v751 + 16) = v852;
                                              }
                                              else
                                              {
                                                *(void *)uint64_t v751 = *(void *)v752;
                                                *(void *)(v751 + 8) = *((void *)v752 + 1);
                                                swift_bridgeObjectRetain();
                                                swift_bridgeObjectRelease();
                                                *(void *)(v751 + 16) = *((void *)v752 + 2);
                                                *(void *)(v751 + 24) = *((void *)v752 + 3);
                                                swift_bridgeObjectRetain();
                                                swift_bridgeObjectRelease();
                                                *(void *)(v751 + 32) = *((void *)v752 + 4);
                                                *(void *)(v751 + 40) = *((void *)v752 + 5);
                                                swift_bridgeObjectRetain();
                                                swift_bridgeObjectRelease();
                                                *(void *)(v751 + 48) = *((void *)v752 + 6);
                                                *(void *)(v751 + 56) = *((void *)v752 + 7);
                                                swift_bridgeObjectRetain();
                                                swift_bridgeObjectRelease();
                                                *(unsigned char *)(v751 + 64) = v752[64];
                                              }
                                              *(void *)(v751 + 72) = *((void *)v752 + 9);
                                              *(void *)(v751 + 80) = *((void *)v752 + 10);
                                              swift_bridgeObjectRetain();
                                              swift_bridgeObjectRelease();
                                              *(void *)(v751 + 88) = *((void *)v752 + 11);
                                              *(void *)(v751 + 96) = *((void *)v752 + 12);
                                              swift_bridgeObjectRetain();
                                              swift_bridgeObjectRelease();
                                              *(void *)(v751 + 104) = *((void *)v752 + 13);
                                              *(void *)(v751 + 112) = *((void *)v752 + 14);
                                              swift_bridgeObjectRetain();
                                              swift_bridgeObjectRelease();
                                              *(void *)(v751 + 120) = *((void *)v752 + 15);
                                              *(void *)(v751 + 128) = *((void *)v752 + 16);
                                              swift_bridgeObjectRetain();
                                              swift_bridgeObjectRelease();
                                              *(void *)(v751 + 136) = *((void *)v752 + 17);
                                              *(void *)(v751 + 144) = *((void *)v752 + 18);
                                              swift_bridgeObjectRetain();
                                              swift_bridgeObjectRelease();
                                              *(void *)(v751 + 152) = *((void *)v752 + 19);
                                              *(void *)(v751 + 160) = *((void *)v752 + 20);
                                              swift_bridgeObjectRetain();
                                              swift_bridgeObjectRelease();
                                              *(void *)(v751 + 168) = *((void *)v752 + 21);
                                              *(void *)(v751 + 176) = *((void *)v752 + 22);
                                              swift_bridgeObjectRetain();
                                              swift_bridgeObjectRelease();
                                              *(void *)(v751 + 184) = *((void *)v752 + 23);
                                              *(void *)(v751 + 192) = *((void *)v752 + 24);
                                              swift_bridgeObjectRetain();
                                              swift_bridgeObjectRelease();
                                              uint64_t v860 = *((void *)v752 + 25);
                                              *(unsigned char *)(v751 + 208) = v752[208];
                                              *(void *)(v751 + 200) = v860;
                                              *(unsigned char *)(v751 + 209) = v752[209];
                                              *(void *)(v751 + 216) = *((void *)v752 + 27);
                                              *(void *)(v751 + 224) = *((void *)v752 + 28);
                                              swift_bridgeObjectRetain();
                                              swift_bridgeObjectRelease();
                                              uint64_t v861 = v128[16];
                                              v862 = (void *)(v751 + v861);
                                              v863 = &v752[v861];
                                              unsigned int v864 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v1337)(v751 + v861, 1, v1324);
                                              unsigned int v865 = ((uint64_t (*)(char *, uint64_t, uint64_t))v1337)(v863, 1, v1324);
                                              if (v864)
                                              {
                                                if (!v865)
                                                {
                                                  (*(void (**)(void *, char *, uint64_t))(v1335 + 16))(v862, v863, v1324);
                                                  (*(void (**)(void *, void, uint64_t, uint64_t))(v1335 + 56))(v862, 0, 1, v1324);
                                                  goto LABEL_338;
                                                }
                                              }
                                              else
                                              {
                                                if (!v865)
                                                {
                                                  (*(void (**)(void *, char *, uint64_t))(v1335 + 24))(v862, v863, v1324);
LABEL_338:
                                                  uint64_t v867 = v128[17];
                                                  uint64_t v868 = v751 + v867;
                                                  v869 = &v752[v867];
                                                  uint64_t v870 = *(void *)v869;
                                                  *(unsigned char *)(v868 + 8) = v869[8];
                                                  *(void *)uint64_t v868 = v870;
                                                  uint64_t v871 = v128[18];
                                                  v872 = (void *)(v751 + v871);
                                                  v873 = &v752[v871];
                                                  void *v872 = *(void *)v873;
                                                  v872[1] = *((void *)v873 + 1);
                                                  swift_bridgeObjectRetain();
                                                  swift_bridgeObjectRelease();
                                                  uint64_t v874 = v128[19];
                                                  v875 = (void *)(v751 + v874);
                                                  v876 = &v752[v874];
                                                  void *v875 = *(void *)v876;
                                                  v875[1] = *((void *)v876 + 1);
                                                  swift_bridgeObjectRetain();
                                                  swift_bridgeObjectRelease();
                                                  uint64_t v877 = v128[20];
                                                  v878 = (void *)(v751 + v877);
                                                  v879 = &v752[v877];
                                                  void *v878 = *(void *)v879;
                                                  v878[1] = *((void *)v879 + 1);
                                                  swift_bridgeObjectRetain();
                                                  swift_bridgeObjectRelease();
                                                  uint64_t v880 = v128[21];
                                                  v881 = (void *)(v751 + v880);
                                                  v882 = &v752[v880];
                                                  void *v881 = *(void *)v882;
                                                  v881[1] = *((void *)v882 + 1);
                                                  swift_bridgeObjectRetain();
                                                  swift_bridgeObjectRelease();
                                                  uint64_t v883 = v128[22];
                                                  uint64_t v884 = v751 + v883;
                                                  v885 = &v752[v883];
                                                  uint64_t v886 = *(void *)v885;
                                                  *(unsigned char *)(v884 + 8) = v885[8];
                                                  *(void *)uint64_t v884 = v886;
                                                  uint64_t v887 = v128[23];
                                                  v888 = (void *)(v751 + v887);
                                                  v889 = &v752[v887];
                                                  void *v888 = *(void *)v889;
                                                  v888[1] = *((void *)v889 + 1);
                                                  swift_bridgeObjectRetain();
                                                  swift_bridgeObjectRelease();
                                                  uint64_t v890 = v128[24];
                                                  v891 = (void *)(v751 + v890);
                                                  v892 = &v752[v890];
                                                  void *v891 = *(void *)v892;
                                                  v891[1] = *((void *)v892 + 1);
                                                  swift_bridgeObjectRetain();
                                                  swift_bridgeObjectRelease();
                                                  uint64_t v893 = v128[25];
                                                  v894 = (uint64_t *)(v751 + v893);
                                                  v895 = (uint64_t *)&v752[v893];
                                                  unint64_t v896 = *(void *)&v752[v893 + 8];
                                                  if (*(void *)(v751 + v893 + 8) >> 60 == 15)
                                                  {
                                                    if (v896 >> 60 != 15)
                                                    {
                                                      uint64_t v897 = *v895;
                                                      sub_1A08AF278(v897, v896);
                                                      uint64_t *v894 = v897;
                                                      v894[1] = v896;
                                                      goto LABEL_345;
                                                    }
                                                  }
                                                  else
                                                  {
                                                    if (v896 >> 60 != 15)
                                                    {
                                                      uint64_t v898 = *v895;
                                                      sub_1A08AF278(v898, v896);
                                                      uint64_t v899 = *v894;
                                                      unint64_t v900 = v894[1];
                                                      uint64_t *v894 = v898;
                                                      v894[1] = v896;
                                                      sub_1A08AF2E4(v899, v900);
LABEL_345:
                                                      uint64_t v901 = v128[26];
                                                      v902 = (void *)(v751 + v901);
                                                      v903 = &v752[v901];
                                                      void *v902 = *(void *)v903;
                                                      v902[1] = *((void *)v903 + 1);
                                                      swift_bridgeObjectRetain();
                                                      swift_bridgeObjectRelease();
                                                      *(void *)(v751 + v128[27]) = *(void *)&v752[v128[27]];
                                                      swift_bridgeObjectRetain();
                                                      swift_bridgeObjectRelease();
                                                      uint64_t v904 = v128[28];
                                                      v905 = (uint64_t *)(v751 + v904);
                                                      v906 = (uint64_t *)&v752[v904];
                                                      unint64_t v907 = *(void *)&v752[v904 + 8];
                                                      if (*(void *)(v751 + v904 + 8) >> 60 == 15)
                                                      {
                                                        if (v907 >> 60 != 15)
                                                        {
                                                          uint64_t v908 = *v906;
                                                          sub_1A08AF278(v908, v907);
                                                          uint64_t *v905 = v908;
                                                          v905[1] = v907;
                                                          goto LABEL_352;
                                                        }
                                                      }
                                                      else
                                                      {
                                                        if (v907 >> 60 != 15)
                                                        {
                                                          uint64_t v909 = *v906;
                                                          sub_1A08AF278(v909, v907);
                                                          uint64_t v910 = *v905;
                                                          unint64_t v911 = v905[1];
                                                          uint64_t *v905 = v909;
                                                          v905[1] = v907;
                                                          sub_1A08AF2E4(v910, v911);
LABEL_352:
                                                          uint64_t v912 = v128[29];
                                                          v913 = (void *)(v751 + v912);
                                                          v914 = &v752[v912];
                                                          unsigned int v915 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v1337)(v751 + v912, 1, v1324);
                                                          unsigned int v916 = ((uint64_t (*)(char *, uint64_t, uint64_t))v1337)(v914, 1, v1324);
                                                          if (v915)
                                                          {
                                                            if (!v916)
                                                            {
                                                              (*(void (**)(void *, char *, uint64_t))(v1335 + 16))(v913, v914, v1324);
                                                              (*(void (**)(void *, void, uint64_t, uint64_t))(v1335 + 56))(v913, 0, 1, v1324);
                                                              goto LABEL_358;
                                                            }
                                                          }
                                                          else
                                                          {
                                                            if (!v916)
                                                            {
                                                              (*(void (**)(void *, char *, uint64_t))(v1335 + 24))(v913, v914, v1324);
LABEL_358:
                                                              uint64_t v918 = v128[30];
                                                              v919 = (void *)(v751 + v918);
                                                              v920 = &v752[v918];
                                                              unsigned int v921 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v1337)(v751 + v918, 1, v1324);
                                                              unsigned int v922 = ((uint64_t (*)(char *, uint64_t, uint64_t))v1337)(v920, 1, v1324);
                                                              if (v921)
                                                              {
                                                                if (!v922)
                                                                {
                                                                  (*(void (**)(void *, char *, uint64_t))(v1335 + 16))(v919, v920, v1324);
                                                                  (*(void (**)(void *, void, uint64_t, uint64_t))(v1335 + 56))(v919, 0, 1, v1324);
                                                                  goto LABEL_364;
                                                                }
                                                              }
                                                              else
                                                              {
                                                                if (!v922)
                                                                {
                                                                  (*(void (**)(void *, char *, uint64_t))(v1335 + 24))(v919, v920, v1324);
LABEL_364:
                                                                  uint64_t v924 = v128[31];
                                                                  v925 = (void *)(v751 + v924);
                                                                  v926 = &v752[v924];
                                                                  unsigned int v927 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v1337)(v751 + v924, 1, v1324);
                                                                  unsigned int v928 = ((uint64_t (*)(char *, uint64_t, uint64_t))v1337)(v926, 1, v1324);
                                                                  if (v927)
                                                                  {
                                                                    if (!v928)
                                                                    {
                                                                      (*(void (**)(void *, char *, uint64_t))(v1335 + 16))(v925, v926, v1324);
                                                                      (*(void (**)(void *, void, uint64_t, uint64_t))(v1335 + 56))(v925, 0, 1, v1324);
                                                                      goto LABEL_370;
                                                                    }
                                                                  }
                                                                  else
                                                                  {
                                                                    if (!v928)
                                                                    {
                                                                      (*(void (**)(void *, char *, uint64_t))(v1335 + 24))(v925, v926, v1324);
LABEL_370:
                                                                      uint64_t v930 = v128[32];
                                                                      uint64_t v931 = v751 + v930;
                                                                      v932 = &v752[v930];
                                                                      uint64_t v933 = *(void *)v932;
                                                                      *(unsigned char *)(v931 + 8) = v932[8];
                                                                      *(void *)uint64_t v931 = v933;
                                                                      *(unsigned char *)(v751 + v128[33]) = v752[v128[33]];
                                                                      uint64_t v934 = v128[34];
                                                                      v935 = (uint64_t *)(v751 + v934);
                                                                      v936 = (uint64_t *)&v752[v934];
                                                                      unint64_t v937 = *(void *)&v752[v934 + 8];
                                                                      if (*(void *)(v751 + v934 + 8) >> 60 == 15)
                                                                      {
                                                                        if (v937 >> 60 != 15)
                                                                        {
                                                                          uint64_t v938 = *v936;
                                                                          sub_1A08AF278(v938, v937);
                                                                          uint64_t *v935 = v938;
                                                                          v935[1] = v937;
                                                                          goto LABEL_377;
                                                                        }
                                                                      }
                                                                      else
                                                                      {
                                                                        if (v937 >> 60 != 15)
                                                                        {
                                                                          uint64_t v939 = *v936;
                                                                          sub_1A08AF278(v939, v937);
                                                                          uint64_t v940 = *v935;
                                                                          unint64_t v941 = v935[1];
                                                                          uint64_t *v935 = v939;
                                                                          v935[1] = v937;
                                                                          sub_1A08AF2E4(v940, v941);
LABEL_377:
                                                                          uint64_t v942 = v128[35];
                                                                          v943 = (void *)(v751 + v942);
                                                                          v944 = &v752[v942];
                                                                          void *v943 = *(void *)v944;
                                                                          v943[1] = *((void *)v944 + 1);
                                                                          swift_bridgeObjectRetain();
                                                                          swift_bridgeObjectRelease();
                                                                          uint64_t v945 = v128[36];
                                                                          v946 = (void *)(v751 + v945);
                                                                          v947 = &v752[v945];
                                                                          unsigned int v948 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v1337)(v751 + v945, 1, v1324);
                                                                          unsigned int v949 = ((uint64_t (*)(char *, uint64_t, uint64_t))v1337)(v947, 1, v1324);
                                                                          if (v948)
                                                                          {
                                                                            if (!v949)
                                                                            {
                                                                              (*(void (**)(void *, char *, uint64_t))(v1335 + 16))(v946, v947, v1324);
                                                                              (*(void (**)(void *, void, uint64_t, uint64_t))(v1335 + 56))(v946, 0, 1, v1324);
                                                                              goto LABEL_383;
                                                                            }
                                                                          }
                                                                          else
                                                                          {
                                                                            if (!v949)
                                                                            {
                                                                              (*(void (**)(void *, char *, uint64_t))(v1335 + 24))(v946, v947, v1324);
LABEL_383:
                                                                              uint64_t v951 = v128[37];
                                                                              uint64_t v952 = v751 + v951;
                                                                              v953 = &v752[v951];
                                                                              uint64_t v954 = *(void *)v953;
                                                                              *(unsigned char *)(v952 + 8) = v953[8];
                                                                              *(void *)uint64_t v952 = v954;
                                                                              uint64_t v955 = v128[38];
                                                                              v956 = (uint64_t *)(v751 + v955);
                                                                              v957 = (uint64_t *)&v752[v955];
                                                                              unint64_t v958 = *(void *)&v752[v955 + 8];
                                                                              if (*(void *)(v751 + v955 + 8) >> 60 == 15)
                                                                              {
                                                                                if (v958 >> 60 != 15)
                                                                                {
                                                                                  uint64_t v959 = *v957;
                                                                                  sub_1A08AF278(v959, v958);
                                                                                  uint64_t *v956 = v959;
                                                                                  v956[1] = v958;
                                                                                  goto LABEL_390;
                                                                                }
                                                                              }
                                                                              else
                                                                              {
                                                                                if (v958 >> 60 != 15)
                                                                                {
                                                                                  uint64_t v960 = *v957;
                                                                                  sub_1A08AF278(v960, v958);
                                                                                  uint64_t v961 = *v956;
                                                                                  unint64_t v962 = v956[1];
                                                                                  uint64_t *v956 = v960;
                                                                                  v956[1] = v958;
                                                                                  sub_1A08AF2E4(v961, v962);
LABEL_390:
                                                                                  uint64_t v963 = v128[39];
                                                                                  v964 = &v752[v963];
                                                                                  v965 = (void *)(v751 + v963);
                                                                                  int v966 = ((uint64_t (*)(void))v1319)();
                                                                                  v967 = v964;
                                                                                  unsigned int v968 = v1319(v964, 1, v1332);
                                                                                  if (v966)
                                                                                  {
                                                                                    if (!v968)
                                                                                    {
                                                                                      v969 = v964;
                                                                                      v970 = v965;
                                                                                      void *v965 = *(void *)v967;
                                                                                      v965[1] = *((void *)v967 + 1);
                                                                                      v971 = v967 + 16;
                                                                                      unint64_t v972 = *((void *)v967 + 3);
                                                                                      swift_bridgeObjectRetain();
                                                                                      v973 = v1323;
                                                                                      v1306 = v4;
                                                                                      v1311 = v5;
                                                                                      if (v972 >> 60 == 15)
                                                                                      {
                                                                                        *((_OWORD *)v970 + 1) = *v971;
                                                                                      }
                                                                                      else
                                                                                      {
                                                                                        uint64_t v1094 = *(void *)v971;
                                                                                        sub_1A08AF278(v1094, v972);
                                                                                        v970[2] = v1094;
                                                                                        v970[3] = v972;
                                                                                      }
                                                                                      uint64_t v1095 = *((void *)v967 + 4);
                                                                                      *((unsigned char *)v970 + 40) = v967[40];
                                                                                      v970[4] = v1095;
                                                                                      v970[6] = *((void *)v967 + 6);
                                                                                      v970[7] = *((void *)v967 + 7);
                                                                                      v970[8] = *((void *)v967 + 8);
                                                                                      v970[9] = *((void *)v967 + 9);
                                                                                      v970[10] = *((void *)v967 + 10);
                                                                                      v970[11] = *((void *)v967 + 11);
                                                                                      v970[12] = *((void *)v967 + 12);
                                                                                      v970[13] = *((void *)v967 + 13);
                                                                                      *((unsigned char *)v970 + 112) = v967[112];
                                                                                      *((unsigned char *)v970 + 113) = v967[113];
                                                                                      v970[15] = *((void *)v967 + 15);
                                                                                      v970[16] = *((void *)v967 + 16);
                                                                                      *((unsigned char *)v970 + 136) = v969[136];
                                                                                      v970[18] = *((void *)v969 + 18);
                                                                                      v970[19] = *((void *)v969 + 19);
                                                                                      uint64_t v1096 = v1332[16];
                                                                                      __dstb = (char *)v970 + v1096;
                                                                                      v1097 = &v969[v1096];
                                                                                      uint64_t v1098 = sub_1A09F34B8();
                                                                                      uint64_t v1292 = *(void *)(v1098 - 8);
                                                                                      v1099 = *(unsigned int (**)(void, void, void))(v1292 + 48);
                                                                                      swift_bridgeObjectRetain();
                                                                                      swift_bridgeObjectRetain();
                                                                                      swift_bridgeObjectRetain();
                                                                                      swift_bridgeObjectRetain();
                                                                                      swift_bridgeObjectRetain();
                                                                                      swift_bridgeObjectRetain();
                                                                                      v1321 = (unsigned int (*)(char *, uint64_t, uint64_t))v1099;
                                                                                      if (v1099(v1097, 1, v1098))
                                                                                      {
                                                                                        uint64_t v1100 = sub_1A07856F8(&qword_1E94FBB08);
                                                                                        memcpy(__dstb, v1097, *(void *)(*(void *)(v1100 - 8) + 64));
                                                                                        uint64_t v1101 = v1292;
                                                                                      }
                                                                                      else
                                                                                      {
                                                                                        uint64_t v1101 = v1292;
                                                                                        (*(void (**)(char *, char *, uint64_t))(v1292 + 16))(__dstb, v1097, v1098);
                                                                                        (*(void (**)(char *, void, uint64_t, uint64_t))(v1292 + 56))(__dstb, 0, 1, v1098);
                                                                                      }
                                                                                      uint64_t v1102 = v1332[17];
                                                                                      v1103 = (char *)v970 + v1102;
                                                                                      v1104 = &v969[v1102];
                                                                                      uint64_t v4 = v1306;
                                                                                      uint64_t v976 = v1324;
                                                                                      if (v1321(&v969[v1102], 1, v1098))
                                                                                      {
                                                                                        uint64_t v1105 = sub_1A07856F8(&qword_1E94FBB08);
                                                                                        memcpy(v1103, v1104, *(void *)(*(void *)(v1105 - 8) + 64));
                                                                                      }
                                                                                      else
                                                                                      {
                                                                                        (*(void (**)(char *, char *, uint64_t))(v1101 + 16))(v1103, v1104, v1098);
                                                                                        (*(void (**)(char *, void, uint64_t, uint64_t))(v1101 + 56))(v1103, 0, 1, v1098);
                                                                                      }
                                                                                      *(void *)((char *)v970
                                                                                                + v1332[18]) = *(void *)&v969[v1332[18]];
                                                                                      uint64_t v1106 = v1332[19];
                                                                                      v1107 = (char *)v970 + v1106;
                                                                                      v1108 = &v969[v1106];
                                                                                      swift_bridgeObjectRetain();
                                                                                      if (v1321(v1108, 1, v1098))
                                                                                      {
                                                                                        uint64_t v1109 = sub_1A07856F8(&qword_1E94FBB08);
                                                                                        memcpy(v1107, v1108, *(void *)(*(void *)(v1109 - 8) + 64));
                                                                                      }
                                                                                      else
                                                                                      {
                                                                                        (*(void (**)(char *, char *, uint64_t))(v1101 + 16))(v1107, v1108, v1098);
                                                                                        (*(void (**)(char *, void, uint64_t, uint64_t))(v1101 + 56))(v1107, 0, 1, v1098);
                                                                                      }
                                                                                      uint64_t v1110 = v1332[20];
                                                                                      v1111 = (char *)v970 + v1110;
                                                                                      v1112 = &v969[v1110];
                                                                                      if (v1321(&v969[v1110], 1, v1098))
                                                                                      {
                                                                                        uint64_t v1113 = sub_1A07856F8(&qword_1E94FBB08);
                                                                                        memcpy(v1111, v1112, *(void *)(*(void *)(v1113 - 8) + 64));
                                                                                      }
                                                                                      else
                                                                                      {
                                                                                        (*(void (**)(char *, char *, uint64_t))(v1101 + 16))(v1111, v1112, v1098);
                                                                                        (*(void (**)(char *, void, uint64_t, uint64_t))(v1101 + 56))(v1111, 0, 1, v1098);
                                                                                      }
                                                                                      uint64_t v5 = v1311;
                                                                                      *(void *)((char *)v970
                                                                                                + v1332[21]) = *(void *)&v969[v1332[21]];
                                                                                      uint64_t v1114 = v1332[22];
                                                                                      v1115 = (char *)v970 + v1114;
                                                                                      v1116 = &v969[v1114];
                                                                                      unint64_t v1117 = *(void *)&v969[v1114 + 8];
                                                                                      swift_bridgeObjectRetain();
                                                                                      if (v1117 >> 60 == 15)
                                                                                      {
                                                                                        *(_OWORD *)v1115 = *(_OWORD *)v1116;
                                                                                      }
                                                                                      else
                                                                                      {
                                                                                        uint64_t v1118 = *(void *)v1116;
                                                                                        sub_1A08AF278(v1118, v1117);
                                                                                        *(void *)v1115 = v1118;
                                                                                        *((void *)v1115 + 1) = v1117;
                                                                                      }
                                                                                      uint64_t v1119 = v1332[23];
                                                                                      v1120 = (void *)((char *)v970 + v1119);
                                                                                      v1121 = &v969[v1119];
                                                                                      void *v1120 = *(void *)v1121;
                                                                                      v1120[1] = *((void *)v1121 + 1);
                                                                                      uint64_t v1122 = v1332[24];
                                                                                      v1123 = (char *)v970 + v1122;
                                                                                      v1124 = &v969[v1122];
                                                                                      uint64_t v1125 = *(void *)v1124;
                                                                                      v1123[8] = v1124[8];
                                                                                      *(void *)v1123 = v1125;
                                                                                      uint64_t v1126 = v1332[25];
                                                                                      v1127 = (char *)v970 + v1126;
                                                                                      v1128 = &v969[v1126];
                                                                                      uint64_t v1129 = *(void *)v1128;
                                                                                      v1127[8] = v1128[8];
                                                                                      *(void *)v1127 = v1129;
                                                                                      *((unsigned char *)v970 + v1332[26]) = v969[v1332[26]];
                                                                                      uint64_t v1130 = v1332[27];
                                                                                      v1131 = (char *)v970 + v1130;
                                                                                      v1132 = &v969[v1130];
                                                                                      swift_bridgeObjectRetain();
                                                                                      if (((unsigned int (*)(char *, uint64_t, uint64_t))v1337)(v1132, 1, v1324))
                                                                                      {
                                                                                        uint64_t v1133 = sub_1A07856F8((uint64_t *)&unk_1E94FAF20);
                                                                                        memcpy(v1131, v1132, *(void *)(*(void *)(v1133 - 8) + 64));
                                                                                      }
                                                                                      else
                                                                                      {
                                                                                        (*(void (**)(char *, char *, uint64_t))(v1335 + 16))(v1131, v1132, v1324);
                                                                                        (*(void (**)(char *, void, uint64_t, uint64_t))(v1335 + 56))(v1131, 0, 1, v1324);
                                                                                      }
                                                                                      *(void *)((char *)v970
                                                                                                + v1332[28]) = *(void *)&v969[v1332[28]];
                                                                                      uint64_t v1134 = v1332[29];
                                                                                      v1135 = (void *)((char *)v970 + v1134);
                                                                                      v1136 = &v969[v1134];
                                                                                      void *v1135 = *(void *)v1136;
                                                                                      v1135[1] = *((void *)v1136 + 1);
                                                                                      *((unsigned char *)v970 + v1332[30]) = v969[v1332[30]];
                                                                                      v1329 = (void (*)(void *, void, uint64_t, int *))v1301[7];
                                                                                      swift_bridgeObjectRetain();
                                                                                      swift_bridgeObjectRetain();
                                                                                      v1329(v970, 0, 1, v1332);
                                                                                      goto LABEL_494;
                                                                                    }
LABEL_396:
                                                                                    uint64_t v974 = sub_1A07856F8(&qword_1E94FBB10);
                                                                                    memcpy(v965, v964, *(void *)(*(void *)(v974 - 8)+ 64));
                                                                                    v975 = v1339;
                                                                                    v973 = v1323;
                                                                                    uint64_t v976 = v1324;
                                                                                    goto LABEL_495;
                                                                                  }
                                                                                  if (v968)
                                                                                  {
                                                                                    sub_1A090C884((uint64_t)v965, (uint64_t (*)(void))type metadata accessor for RemoteIntentMessageSummaryInfo);
                                                                                    goto LABEL_396;
                                                                                  }
                                                                                  v1087 = v964;
                                                                                  v1088 = v965;
                                                                                  void *v965 = *(void *)v967;
                                                                                  v965[1] = *((void *)v967 + 1);
                                                                                  swift_bridgeObjectRetain();
                                                                                  swift_bridgeObjectRelease();
                                                                                  v1089 = v965 + 2;
                                                                                  v1090 = (uint64_t *)(v967 + 16);
                                                                                  unint64_t v1091 = *((void *)v967 + 3);
                                                                                  unint64_t v1092 = v965[3] >> 60;
                                                                                  v973 = v1323;
                                                                                  v1307 = v4;
                                                                                  if (v1092 <= 0xE)
                                                                                  {
                                                                                    if (v1091 >> 60 != 15)
                                                                                    {
                                                                                      uint64_t v1137 = *v1090;
                                                                                      sub_1A08AF278(*v1090, v1091);
                                                                                      uint64_t v1138 = v1088[2];
                                                                                      unint64_t v1139 = v1088[3];
                                                                                      v1088[2] = v1137;
                                                                                      v1088[3] = v1091;
                                                                                      sub_1A08AF2E4(v1138, v1139);
LABEL_450:
                                                                                      uint64_t v1140 = *((void *)v967 + 4);
                                                                                      *((unsigned char *)v1088 + 40) = v967[40];
                                                                                      v1088[4] = v1140;
                                                                                      v1088[6] = *((void *)v967 + 6);
                                                                                      v1088[7] = *((void *)v967 + 7);
                                                                                      swift_bridgeObjectRetain();
                                                                                      swift_bridgeObjectRelease();
                                                                                      v1088[8] = *((void *)v967 + 8);
                                                                                      v1088[9] = *((void *)v967 + 9);
                                                                                      swift_bridgeObjectRetain();
                                                                                      swift_bridgeObjectRelease();
                                                                                      v1088[10] = *((void *)v967 + 10);
                                                                                      v1088[11] = *((void *)v967 + 11);
                                                                                      swift_bridgeObjectRetain();
                                                                                      swift_bridgeObjectRelease();
                                                                                      v1088[12] = *((void *)v967 + 12);
                                                                                      v1088[13] = *((void *)v967 + 13);
                                                                                      swift_bridgeObjectRetain();
                                                                                      swift_bridgeObjectRelease();
                                                                                      *((unsigned char *)v1088 + 112) = v967[112];
                                                                                      *((unsigned char *)v1088 + 113) = v967[113];
                                                                                      v1088[15] = *((void *)v967 + 15);
                                                                                      v1088[16] = *((void *)v967 + 16);
                                                                                      swift_bridgeObjectRetain();
                                                                                      swift_bridgeObjectRelease();
                                                                                      *((unsigned char *)v1088 + 136) = v967[136];
                                                                                      v1088[18] = *((void *)v967 + 18);
                                                                                      v1088[19] = *((void *)v967 + 19);
                                                                                      swift_bridgeObjectRetain();
                                                                                      swift_bridgeObjectRelease();
                                                                                      uint64_t v1141 = v1332[16];
                                                                                      v1142 = (char *)v1088 + v1141;
                                                                                      v1143 = &v967[v1141];
                                                                                      uint64_t v1144 = sub_1A09F34B8();
                                                                                      __dstc = *(void **)(v1144 - 8);
                                                                                      v1145 = (uint64_t (*)(char *, uint64_t, uint64_t))__dstc[6];
                                                                                      int v1146 = v1145(v1142, 1, v1144);
                                                                                      v1330 = v1145;
                                                                                      int v1147 = v1145(v1143, 1, v1144);
                                                                                      if (v1146)
                                                                                      {
                                                                                        if (!v1147)
                                                                                        {
                                                                                          ((void (*)(char *, char *, uint64_t))__dstc[2])(v1142, v1143, v1144);
                                                                                          ((void (*)(char *, void, uint64_t, uint64_t))__dstc[7])(v1142, 0, 1, v1144);
                                                                                          goto LABEL_456;
                                                                                        }
                                                                                      }
                                                                                      else
                                                                                      {
                                                                                        if (!v1147)
                                                                                        {
                                                                                          ((void (*)(char *, char *, uint64_t))__dstc[3])(v1142, v1143, v1144);
LABEL_456:
                                                                                          uint64_t v1149 = v1332[17];
                                                                                          v1150 = (char *)v1088 + v1149;
                                                                                          v1151 = &v1087[v1149];
                                                                                          int v1152 = v1330((char *)v1088 + v1149, 1, v1144);
                                                                                          int v1153 = v1330(v1151, 1, v1144);
                                                                                          uint64_t v4 = v1307;
                                                                                          v1299 = v1087;
                                                                                          if (v1152)
                                                                                          {
                                                                                            if (!v1153)
                                                                                            {
                                                                                              ((void (*)(char *, char *, uint64_t))__dstc[2])(v1150, v1151, v1144);
                                                                                              ((void (*)(char *, void, uint64_t, uint64_t))__dstc[7])(v1150, 0, 1, v1144);
                                                                                              goto LABEL_462;
                                                                                            }
                                                                                          }
                                                                                          else
                                                                                          {
                                                                                            if (!v1153)
                                                                                            {
                                                                                              ((void (*)(char *, char *, uint64_t))__dstc[3])(v1150, v1151, v1144);
LABEL_462:
                                                                                              uint64_t v1155 = v1144;
                                                                                              *(void *)((char *)v1088 + v1332[18]) = *(void *)&v1299[v1332[18]];
                                                                                              swift_bridgeObjectRetain();
                                                                                              swift_bridgeObjectRelease();
                                                                                              uint64_t v1156 = v1332[19];
                                                                                              v1157 = (char *)v1088 + v1156;
                                                                                              v1158 = &v1299[v1156];
                                                                                              int v1159 = v1330((char *)v1088 + v1156, 1, v1155);
                                                                                              v1302 = v1158;
                                                                                              int v1160 = v1330(v1158, 1, v1155);
                                                                                              uint64_t v1161 = v1155;
                                                                                              if (v1159)
                                                                                              {
                                                                                                if (!v1160)
                                                                                                {
                                                                                                  ((void (*)(char *, void *, uint64_t))__dstc[2])(v1157, v1302, v1155);
                                                                                                  ((void (*)(char *, void, uint64_t, uint64_t))__dstc[7])(v1157, 0, 1, v1155);
                                                                                                  goto LABEL_468;
                                                                                                }
                                                                                              }
                                                                                              else
                                                                                              {
                                                                                                if (!v1160)
                                                                                                {
                                                                                                  ((void (*)(char *, void *, uint64_t))__dstc[3])(v1157, v1302, v1155);
LABEL_468:
                                                                                                  uint64_t v1163 = v1332[20];
                                                                                                  v1164 = (char *)v1088 + v1163;
                                                                                                  v1165 = &v1299[v1163];
                                                                                                  int v1166 = v1330((char *)v1088 + v1163, 1, v1161);
                                                                                                  int v1167 = v1330(v1165, 1, v1161);
                                                                                                  if (v1166)
                                                                                                  {
                                                                                                    if (!v1167)
                                                                                                    {
                                                                                                      ((void (*)(char *, char *, uint64_t))__dstc[2])(v1164, v1165, v1161);
                                                                                                      ((void (*)(char *, void, uint64_t, uint64_t))__dstc[7])(v1164, 0, 1, v1161);
                                                                                                      goto LABEL_474;
                                                                                                    }
                                                                                                  }
                                                                                                  else
                                                                                                  {
                                                                                                    if (!v1167)
                                                                                                    {
                                                                                                      ((void (*)(char *, char *, uint64_t))__dstc[3])(v1164, v1165, v1161);
LABEL_474:
                                                                                                      *(void *)((char *)v1088 + v1332[21]) = *(void *)&v1299[v1332[21]];
                                                                                                      swift_bridgeObjectRetain();
                                                                                                      swift_bridgeObjectRelease();
                                                                                                      uint64_t v1169 = v1332[22];
                                                                                                      v1170 = (void *)((char *)v1088 + v1169);
                                                                                                      v1171 = (uint64_t *)&v1299[v1169];
                                                                                                      unint64_t v1172 = *(void *)&v1299[v1169 + 8];
                                                                                                      uint64_t v976 = v1324;
                                                                                                      if (*(void *)((char *)v1088 + v1169 + 8) >> 60 == 15)
                                                                                                      {
                                                                                                        if (v1172 >> 60 != 15)
                                                                                                        {
                                                                                                          uint64_t v1173 = *v1171;
                                                                                                          sub_1A08AF278(v1173, v1172);
                                                                                                          uint64_t *v1170 = v1173;
                                                                                                          v1170[1] = v1172;
                                                                                                          goto LABEL_481;
                                                                                                        }
                                                                                                      }
                                                                                                      else
                                                                                                      {
                                                                                                        if (v1172 >> 60 != 15)
                                                                                                        {
                                                                                                          uint64_t v1174 = *v1171;
                                                                                                          sub_1A08AF278(v1174, v1172);
                                                                                                          uint64_t v1175 = *v1170;
                                                                                                          unint64_t v1176 = v1170[1];
                                                                                                          uint64_t *v1170 = v1174;
                                                                                                          v1170[1] = v1172;
                                                                                                          sub_1A08AF2E4(v1175, v1176);
LABEL_481:
                                                                                                          uint64_t v1177 = v1332[23];
                                                                                                          v1178 = (void *)((char *)v1088 + v1177);
                                                                                                          v1179 = &v1299[v1177];
                                                                                                          void *v1178 = *(void *)v1179;
                                                                                                          v1178[1] = *((void *)v1179 + 1);
                                                                                                          swift_bridgeObjectRetain();
                                                                                                          swift_bridgeObjectRelease();
                                                                                                          uint64_t v1180 = v1332[24];
                                                                                                          v1181 = (char *)v1088 + v1180;
                                                                                                          v1182 = &v1299[v1180];
                                                                                                          uint64_t v1183 = *(void *)v1182;
                                                                                                          v1181[8] = v1182[8];
                                                                                                          *(void *)v1181 = v1183;
                                                                                                          uint64_t v1184 = v1332[25];
                                                                                                          v1185 = (char *)v1088 + v1184;
                                                                                                          v1186 = &v1299[v1184];
                                                                                                          uint64_t v1187 = *(void *)v1186;
                                                                                                          v1185[8] = v1186[8];
                                                                                                          *(void *)v1185 = v1187;
                                                                                                          *((unsigned char *)v1088 + v1332[26]) = v1299[v1332[26]];
                                                                                                          uint64_t v1188 = v1332[27];
                                                                                                          v1189 = &v1299[v1188];
                                                                                                          v1331 = (char *)v1088 + v1188;
                                                                                                          int v1190 = v1337();
                                                                                                          unsigned int v1191 = ((uint64_t (*)(char *, uint64_t, uint64_t))v1337)(v1189, 1, v1324);
                                                                                                          if (v1190)
                                                                                                          {
                                                                                                            if (!v1191)
                                                                                                            {
                                                                                                              (*(void (**)(char *, char *, uint64_t))(v1335 + 16))(v1331, v1189, v1324);
                                                                                                              (*(void (**)(char *, void, uint64_t, uint64_t))(v1335 + 56))(v1331, 0, 1, v1324);
                                                                                                              goto LABEL_493;
                                                                                                            }
                                                                                                            size_t v1192 = *(void *)(*(void *)(sub_1A07856F8((uint64_t *)&unk_1E94FAF20) - 8) + 64);
                                                                                                            v1193 = v1331;
                                                                                                          }
                                                                                                          else
                                                                                                          {
                                                                                                            if (!v1191)
                                                                                                            {
                                                                                                              (*(void (**)(char *, char *, uint64_t))(v1335 + 24))(v1331, v1189, v1324);
                                                                                                              goto LABEL_493;
                                                                                                            }
                                                                                                            (*(void (**)(char *, uint64_t))(v1335 + 8))(v1331, v1324);
                                                                                                            size_t v1192 = *(void *)(*(void *)(sub_1A07856F8((uint64_t *)&unk_1E94FAF20) - 8) + 64);
                                                                                                            v1193 = v1331;
                                                                                                          }
                                                                                                          memcpy(v1193, v1189, v1192);
LABEL_493:
                                                                                                          *(void *)((char *)v1088 + v1332[28]) = *(void *)&v1299[v1332[28]];
                                                                                                          swift_bridgeObjectRetain();
                                                                                                          swift_bridgeObjectRelease();
                                                                                                          uint64_t v1194 = v1332[29];
                                                                                                          v1195 = (void *)((char *)v1088 + v1194);
                                                                                                          v1196 = &v1299[v1194];
                                                                                                          void *v1195 = *(void *)v1196;
                                                                                                          v1195[1] = *((void *)v1196 + 1);
                                                                                                          swift_bridgeObjectRetain();
                                                                                                          swift_bridgeObjectRelease();
                                                                                                          *((unsigned char *)v1088 + v1332[30]) = v1299[v1332[30]];
LABEL_494:
                                                                                                          v975 = v1339;
LABEL_495:
                                                                                                          uint64_t v1197 = v973[40];
                                                                                                          v1198 = (void *)(v751 + v1197);
                                                                                                          v1199 = &v975[v1197];
                                                                                                          void *v1198 = *(void *)v1199;
                                                                                                          v1198[1] = *((void *)v1199 + 1);
                                                                                                          swift_bridgeObjectRetain();
                                                                                                          swift_bridgeObjectRelease();
                                                                                                          *(unsigned char *)(v751 + v973[41]) = v975[v973[41]];
                                                                                                          uint64_t v1200 = v973[42];
                                                                                                          v1201 = (void *)(v751 + v1200);
                                                                                                          v1202 = &v975[v1200];
                                                                                                          void *v1201 = *(void *)v1202;
                                                                                                          v1201[1] = *((void *)v1202 + 1);
                                                                                                          swift_bridgeObjectRetain();
                                                                                                          swift_bridgeObjectRelease();
                                                                                                          *(unsigned char *)(v751 + v973[43]) = v975[v973[43]];
                                                                                                          *(unsigned char *)(v751 + v973[44]) = v975[v973[44]];
                                                                                                          *(unsigned char *)(v751 + v973[45]) = v975[v973[45]];
                                                                                                          *(unsigned char *)(v751 + v973[46]) = v975[v973[46]];
                                                                                                          uint64_t v1203 = v973[47];
                                                                                                          v1204 = (void *)(v751 + v1203);
                                                                                                          v1205 = &v975[v1203];
                                                                                                          void *v1204 = *(void *)v1205;
                                                                                                          v1204[1] = *((void *)v1205 + 1);
                                                                                                          swift_bridgeObjectRetain();
                                                                                                          swift_bridgeObjectRelease();
                                                                                                          uint64_t v1206 = v973[48];
                                                                                                          v1207 = (void *)(v751 + v1206);
                                                                                                          v1208 = &v975[v1206];
                                                                                                          void *v1207 = *(void *)v1208;
                                                                                                          v1207[1] = *((void *)v1208 + 1);
                                                                                                          swift_bridgeObjectRetain();
                                                                                                          swift_bridgeObjectRelease();
                                                                                                          *(void *)(v751 + v973[49]) = *(void *)&v975[v973[49]];
                                                                                                          swift_bridgeObjectRetain();
                                                                                                          swift_bridgeObjectRelease();
                                                                                                          uint64_t v1209 = v973[50];
                                                                                                          v1210 = (void *)(v751 + v1209);
                                                                                                          v1211 = &v975[v1209];
                                                                                                          void *v1210 = *(void *)v1211;
                                                                                                          v1210[1] = *((void *)v1211 + 1);
                                                                                                          swift_bridgeObjectRetain();
                                                                                                          swift_bridgeObjectRelease();
                                                                                                          uint64_t v1212 = v973[51];
                                                                                                          v1213 = (void *)(v751 + v1212);
                                                                                                          v1214 = &v975[v1212];
                                                                                                          void *v1213 = *(void *)v1214;
                                                                                                          v1213[1] = *((void *)v1214 + 1);
                                                                                                          swift_bridgeObjectRetain();
                                                                                                          swift_bridgeObjectRelease();
                                                                                                          uint64_t v1215 = v973[52];
                                                                                                          v1216 = (void *)(v751 + v1215);
                                                                                                          v1217 = &v975[v1215];
                                                                                                          unsigned int v1218 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v1337)(v751 + v1215, 1, v976);
                                                                                                          unsigned int v1219 = ((uint64_t (*)(char *, uint64_t, uint64_t))v1337)(v1217, 1, v976);
                                                                                                          if (v1218)
                                                                                                          {
                                                                                                            if (!v1219)
                                                                                                            {
                                                                                                              (*(void (**)(void *, char *, uint64_t))(v1335 + 16))(v1216, v1217, v976);
                                                                                                              (*(void (**)(void *, void, uint64_t, uint64_t))(v1335 + 56))(v1216, 0, 1, v976);
LABEL_501:
                                                                                                              uint64_t v1221 = v973[53];
                                                                                                              uint64_t v1222 = v751 + v1221;
                                                                                                              v1223 = &v1339[v1221];
                                                                                                              uint64_t v1224 = *(void *)v1223;
                                                                                                              *(unsigned char *)(v1222 + 8) = v1223[8];
                                                                                                              *(void *)uint64_t v1222 = v1224;
                                                                                                              uint64_t v1225 = v973[54];
                                                                                                              uint64_t v1226 = v751 + v1225;
                                                                                                              v1227 = &v1339[v1225];
                                                                                                              uint64_t v1228 = *(void *)v1227;
                                                                                                              *(unsigned char *)(v1226 + 8) = v1227[8];
                                                                                                              *(void *)uint64_t v1226 = v1228;
                                                                                                              uint64_t v1229 = v973[55];
                                                                                                              v1230 = (void *)(v751 + v1229);
                                                                                                              v1231 = &v1339[v1229];
                                                                                                              void *v1230 = *(void *)v1231;
                                                                                                              v1230[1] = *((void *)v1231 + 1);
                                                                                                              swift_bridgeObjectRetain();
                                                                                                              swift_bridgeObjectRelease();
                                                                                                              *(unsigned char *)(v751 + v973[56]) = v1339[v973[56]];
                                                                                                              *(unsigned char *)(v751 + v973[57]) = v1339[v973[57]];
                                                                                                              uint64_t v1232 = v973[58];
                                                                                                              v1233 = (void *)(v751 + v1232);
                                                                                                              v1234 = &v1339[v1232];
                                                                                                              void *v1233 = *(void *)v1234;
                                                                                                              v1233[1] = *((void *)v1234 + 1);
                                                                                                              swift_bridgeObjectRetain();
                                                                                                              swift_bridgeObjectRelease();
                                                                                                              uint64_t v1235 = v973[59];
                                                                                                              v1236 = (void *)(v751 + v1235);
                                                                                                              v1237 = &v1339[v1235];
                                                                                                              void *v1236 = *(void *)v1237;
                                                                                                              v1236[1] = *((void *)v1237 + 1);
                                                                                                              swift_bridgeObjectRetain();
                                                                                                              swift_bridgeObjectRelease();
                                                                                                              uint64_t v1238 = v973[60];
                                                                                                              v1239 = (void *)(v751 + v1238);
                                                                                                              v1240 = &v1339[v1238];
                                                                                                              void *v1239 = *(void *)v1240;
                                                                                                              v1239[1] = *((void *)v1240 + 1);
                                                                                                              swift_bridgeObjectRetain();
                                                                                                              swift_bridgeObjectRelease();
                                                                                                              uint64_t v1241 = v973[61];
                                                                                                              uint64_t v1242 = v751 + v1241;
                                                                                                              v1243 = &v1339[v1241];
                                                                                                              uint64_t v1244 = *(void *)v1243;
                                                                                                              *(unsigned char *)(v1242 + 8) = v1243[8];
                                                                                                              *(void *)uint64_t v1242 = v1244;
                                                                                                              uint64_t v1245 = v973[62];
                                                                                                              v1246 = (void *)(v751 + v1245);
                                                                                                              v1247 = &v1339[v1245];
                                                                                                              void *v1246 = *(void *)v1247;
                                                                                                              v1246[1] = *((void *)v1247 + 1);
                                                                                                              swift_bridgeObjectRetain();
                                                                                                              swift_bridgeObjectRelease();
                                                                                                              uint64_t v1248 = v973[63];
                                                                                                              uint64_t v1249 = v751 + v1248;
                                                                                                              v1250 = &v1339[v1248];
                                                                                                              int v1251 = *(_DWORD *)v1250;
                                                                                                              *(unsigned char *)(v1249 + 4) = v1250[4];
                                                                                                              *(_DWORD *)uint64_t v1249 = v1251;
                                                                                                              uint64_t v1252 = v973[64];
                                                                                                              v1253 = (void *)(v751 + v1252);
                                                                                                              v1254 = &v1339[v1252];
                                                                                                              void *v1253 = *(void *)v1254;
                                                                                                              v1253[1] = *((void *)v1254 + 1);
                                                                                                              swift_bridgeObjectRetain();
                                                                                                              swift_bridgeObjectRelease();
                                                                                                              uint64_t v1255 = v973[65];
                                                                                                              uint64_t v1256 = v751 + v1255;
                                                                                                              v1257 = &v1339[v1255];
                                                                                                              uint64_t v1258 = *(void *)v1257;
                                                                                                              *(unsigned char *)(v1256 + 8) = v1257[8];
                                                                                                              *(void *)uint64_t v1256 = v1258;
                                                                                                              uint64_t v1259 = v973[66];
                                                                                                              uint64_t v1260 = v751 + v1259;
                                                                                                              v1261 = &v1339[v1259];
                                                                                                              long long v1262 = *(_OWORD *)v1261;
                                                                                                              *(unsigned char *)(v1260 + 16) = v1261[16];
                                                                                                              *(_OWORD *)uint64_t v1260 = v1262;
                                                                                                              uint64_t v1263 = v973[67];
                                                                                                              v1264 = (void *)(v751 + v1263);
                                                                                                              v1265 = &v1339[v1263];
                                                                                                              void *v1264 = *(void *)v1265;
                                                                                                              v1264[1] = *((void *)v1265 + 1);
                                                                                                              swift_bridgeObjectRetain();
                                                                                                              swift_bridgeObjectRelease();
                                                                                                              *(void *)(v751 + v973[68]) = *(void *)&v1339[v973[68]];
                                                                                                              swift_bridgeObjectRetain();
                                                                                                              swift_bridgeObjectRelease();
                                                                                                              uint64_t v1266 = v973[69];
                                                                                                              v1267 = (void *)(v751 + v1266);
                                                                                                              v1268 = &v1339[v1266];
                                                                                                              void *v1267 = *(void *)v1268;
                                                                                                              v1267[1] = *((void *)v1268 + 1);
                                                                                                              swift_bridgeObjectRetain();
                                                                                                              swift_bridgeObjectRelease();
                                                                                                              *(unsigned char *)(v751 + v973[70]) = v1339[v973[70]];
                                                                                                              *(unsigned char *)(v751 + v973[71]) = v1339[v973[71]];
                                                                                                              *(unsigned char *)(v751 + v973[72]) = v1339[v973[72]];
                                                                                                              uint64_t v1269 = v973[73];
                                                                                                              uint64_t v1270 = v751 + v1269;
                                                                                                              v1271 = &v1339[v1269];
                                                                                                              uint64_t v1272 = *(void *)v1271;
                                                                                                              *(unsigned char *)(v1270 + 8) = v1271[8];
                                                                                                              *(void *)uint64_t v1270 = v1272;
                                                                                                              goto LABEL_502;
                                                                                                            }
                                                                                                          }
                                                                                                          else
                                                                                                          {
                                                                                                            if (!v1219)
                                                                                                            {
                                                                                                              (*(void (**)(void *, char *, uint64_t))(v1335 + 24))(v1216, v1217, v976);
                                                                                                              goto LABEL_501;
                                                                                                            }
                                                                                                            (*(void (**)(void *, uint64_t))(v1335 + 8))(v1216, v976);
                                                                                                          }
                                                                                                          uint64_t v1220 = sub_1A07856F8((uint64_t *)&unk_1E94FAF20);
                                                                                                          memcpy(v1216, v1217, *(void *)(*(void *)(v1220 - 8) + 64));
                                                                                                          goto LABEL_501;
                                                                                                        }
                                                                                                        sub_1A0900E28((uint64_t)v1170);
                                                                                                      }
                                                                                                      *(_OWORD *)v1170 = *(_OWORD *)v1171;
                                                                                                      goto LABEL_481;
                                                                                                    }
                                                                                                    ((void (*)(char *, uint64_t))__dstc[1])(v1164, v1161);
                                                                                                  }
                                                                                                  uint64_t v1168 = sub_1A07856F8(&qword_1E94FBB08);
                                                                                                  memcpy(v1164, v1165, *(void *)(*(void *)(v1168 - 8) + 64));
                                                                                                  goto LABEL_474;
                                                                                                }
                                                                                                ((void (*)(char *, uint64_t))__dstc[1])(v1157, v1155);
                                                                                              }
                                                                                              uint64_t v1162 = sub_1A07856F8(&qword_1E94FBB08);
                                                                                              memcpy(v1157, v1302, *(void *)(*(void *)(v1162 - 8) + 64));
                                                                                              goto LABEL_468;
                                                                                            }
                                                                                            ((void (*)(char *, uint64_t))__dstc[1])(v1150, v1144);
                                                                                          }
                                                                                          uint64_t v1154 = sub_1A07856F8(&qword_1E94FBB08);
                                                                                          memcpy(v1150, v1151, *(void *)(*(void *)(v1154 - 8) + 64));
                                                                                          goto LABEL_462;
                                                                                        }
                                                                                        ((void (*)(char *, uint64_t))__dstc[1])(v1142, v1144);
                                                                                      }
                                                                                      uint64_t v1148 = sub_1A07856F8(&qword_1E94FBB08);
                                                                                      memcpy(v1142, v1143, *(void *)(*(void *)(v1148 - 8)+ 64));
                                                                                      goto LABEL_456;
                                                                                    }
                                                                                    sub_1A0900E28((uint64_t)v1089);
                                                                                  }
                                                                                  else if (v1091 >> 60 != 15)
                                                                                  {
                                                                                    uint64_t v1093 = *v1090;
                                                                                    sub_1A08AF278(*v1090, v1091);
                                                                                    v1088[2] = v1093;
                                                                                    v1088[3] = v1091;
                                                                                    goto LABEL_450;
                                                                                  }
                                                                                  _OWORD *v1089 = *(_OWORD *)v1090;
                                                                                  goto LABEL_450;
                                                                                }
                                                                                sub_1A0900E28((uint64_t)v956);
                                                                              }
                                                                              *(_OWORD *)v956 = *(_OWORD *)v957;
                                                                              goto LABEL_390;
                                                                            }
                                                                            (*(void (**)(void *, uint64_t))(v1335 + 8))(v946, v1324);
                                                                          }
                                                                          uint64_t v950 = sub_1A07856F8((uint64_t *)&unk_1E94FAF20);
                                                                          memcpy(v946, v947, *(void *)(*(void *)(v950 - 8) + 64));
                                                                          goto LABEL_383;
                                                                        }
                                                                        sub_1A0900E28((uint64_t)v935);
                                                                      }
                                                                      *(_OWORD *)v935 = *(_OWORD *)v936;
                                                                      goto LABEL_377;
                                                                    }
                                                                    (*(void (**)(void *, uint64_t))(v1335 + 8))(v925, v1324);
                                                                  }
                                                                  uint64_t v929 = sub_1A07856F8((uint64_t *)&unk_1E94FAF20);
                                                                  memcpy(v925, v926, *(void *)(*(void *)(v929 - 8) + 64));
                                                                  goto LABEL_370;
                                                                }
                                                                (*(void (**)(void *, uint64_t))(v1335 + 8))(v919, v1324);
                                                              }
                                                              uint64_t v923 = sub_1A07856F8((uint64_t *)&unk_1E94FAF20);
                                                              memcpy(v919, v920, *(void *)(*(void *)(v923 - 8) + 64));
                                                              goto LABEL_364;
                                                            }
                                                            (*(void (**)(void *, uint64_t))(v1335 + 8))(v913, v1324);
                                                          }
                                                          uint64_t v917 = sub_1A07856F8((uint64_t *)&unk_1E94FAF20);
                                                          memcpy(v913, v914, *(void *)(*(void *)(v917 - 8) + 64));
                                                          goto LABEL_358;
                                                        }
                                                        sub_1A0900E28((uint64_t)v905);
                                                      }
                                                      *(_OWORD *)v905 = *(_OWORD *)v906;
                                                      goto LABEL_352;
                                                    }
                                                    sub_1A0900E28((uint64_t)v894);
                                                  }
                                                  *(_OWORD *)v894 = *(_OWORD *)v895;
                                                  goto LABEL_345;
                                                }
                                                (*(void (**)(void *, uint64_t))(v1335 + 8))(v862, v1324);
                                              }
                                              uint64_t v866 = sub_1A07856F8((uint64_t *)&unk_1E94FAF20);
                                              memcpy(v862, v863, *(void *)(*(void *)(v866 - 8) + 64));
                                              goto LABEL_338;
                                            }
                                            (*(void (**)(void *, uint64_t))(v1335 + 8))(v693, v1324);
                                          }
                                          uint64_t v697 = sub_1A07856F8((uint64_t *)&unk_1E94FAF20);
                                          memcpy(v693, v694, *(void *)(*(void *)(v697 - 8) + 64));
                                          goto LABEL_282;
                                        }
                                        if (v239)
                                        {
                                          sub_1A090C884(v234, (uint64_t (*)(void))type metadata accessor for RemoteIntentMessageSummaryInfo);
LABEL_113:
                                          uint64_t v240 = sub_1A07856F8(&qword_1E94FBB10);
                                          memcpy((void *)v234, v235, *(void *)(*(void *)(v240 - 8) + 64));
                                          goto LABEL_276;
                                        }
                                        *(void *)uint64_t v234 = *(void *)v235;
                                        *(void *)(v234 + 8) = *((void *)v235 + 1);
                                        swift_bridgeObjectRetain();
                                        swift_bridgeObjectRelease();
                                        v450 = (uint64_t *)(v235 + 16);
                                        unint64_t v451 = *((void *)v235 + 3);
                                        v1305 = v4;
                                        v1309 = v5;
                                        if (*(void *)(v234 + 24) >> 60 == 15)
                                        {
                                          if (v451 >> 60 != 15)
                                          {
                                            uint64_t v452 = *v450;
                                            sub_1A08AF278(*v450, v451);
                                            *(void *)(v234 + 16) = v452;
                                            *(void *)(v234 + 24) = v451;
                                            goto LABEL_229;
                                          }
                                        }
                                        else
                                        {
                                          if (v451 >> 60 != 15)
                                          {
                                            uint64_t v614 = *v450;
                                            sub_1A08AF278(*v450, v451);
                                            uint64_t v615 = *(void *)(v234 + 16);
                                            unint64_t v616 = *(void *)(v234 + 24);
                                            *(void *)(v234 + 16) = v614;
                                            *(void *)(v234 + 24) = v451;
                                            sub_1A08AF2E4(v615, v616);
LABEL_229:
                                            uint64_t v617 = *((void *)v235 + 4);
                                            *(unsigned char *)(v234 + 40) = v235[40];
                                            *(void *)(v234 + 32) = v617;
                                            *(void *)(v234 + 48) = *((void *)v235 + 6);
                                            *(void *)(v234 + 56) = *((void *)v235 + 7);
                                            swift_bridgeObjectRetain();
                                            swift_bridgeObjectRelease();
                                            *(void *)(v234 + 64) = *((void *)v235 + 8);
                                            *(void *)(v234 + 72) = *((void *)v235 + 9);
                                            swift_bridgeObjectRetain();
                                            swift_bridgeObjectRelease();
                                            *(void *)(v234 + 80) = *((void *)v235 + 10);
                                            *(void *)(v234 + 88) = *((void *)v235 + 11);
                                            swift_bridgeObjectRetain();
                                            swift_bridgeObjectRelease();
                                            *(void *)(v234 + 96) = *((void *)v235 + 12);
                                            *(void *)(v234 + 104) = *((void *)v235 + 13);
                                            swift_bridgeObjectRetain();
                                            swift_bridgeObjectRelease();
                                            *(unsigned char *)(v234 + 112) = v235[112];
                                            *(unsigned char *)(v234 + 113) = v235[113];
                                            *(void *)(v234 + 120) = *((void *)v235 + 15);
                                            *(void *)(v234 + 128) = *((void *)v235 + 16);
                                            swift_bridgeObjectRetain();
                                            swift_bridgeObjectRelease();
                                            *(unsigned char *)(v234 + 136) = v235[136];
                                            *(void *)(v234 + 144) = *((void *)v235 + 18);
                                            *(void *)(v234 + 152) = *((void *)v235 + 19);
                                            swift_bridgeObjectRetain();
                                            swift_bridgeObjectRelease();
                                            uint64_t v618 = v236[16];
                                            v619 = (void *)(v234 + v618);
                                            v620 = &v235[v618];
                                            uint64_t v621 = sub_1A09F34B8();
                                            v1288 = *(void **)(v621 - 8);
                                            v622 = (uint64_t (*)(void))v1288[6];
                                            int v623 = ((uint64_t (*)(void *, uint64_t, uint64_t))v622)(v619, 1, v621);
                                            v1295 = v622;
                                            int v624 = ((uint64_t (*)(char *, uint64_t, uint64_t))v622)(v620, 1, v621);
                                            if (v623)
                                            {
                                              if (!v624)
                                              {
                                                ((void (*)(void *, char *, uint64_t))v1288[2])(v619, v620, v621);
                                                ((void (*)(void *, void, uint64_t, uint64_t))v1288[7])(v619, 0, 1, v621);
                                                goto LABEL_235;
                                              }
                                            }
                                            else
                                            {
                                              if (!v624)
                                              {
                                                ((void (*)(void *, char *, uint64_t))v1288[3])(v619, v620, v621);
LABEL_235:
                                                uint64_t v4 = v1305;
                                                uint64_t v626 = v621;
                                                uint64_t v627 = v236[17];
                                                v628 = &v235[v627];
                                                v1279 = (void *)(v234 + v627);
                                                int v629 = v1295();
                                                int v630 = ((uint64_t (*)(char *, uint64_t, uint64_t))v1295)(v628, 1, v626);
                                                if (v629)
                                                {
                                                  if (v630)
                                                  {
                                                    size_t v631 = *(void *)(*(void *)(sub_1A07856F8(&qword_1E94FBB08) - 8)
                                                                     + 64);
                                                    v632 = v1279;
LABEL_240:
                                                    memcpy(v632, v628, v631);
                                                    goto LABEL_244;
                                                  }
                                                  ((void (*)(void *, char *, uint64_t))v1288[2])(v1279, v628, v626);
                                                  ((void (*)(void *, void, uint64_t, uint64_t))v1288[7])(v1279, 0, 1, v626);
                                                }
                                                else
                                                {
                                                  if (v630)
                                                  {
                                                    ((void (*)(void *, uint64_t))v1288[1])(v1279, v626);
                                                    size_t v631 = *(void *)(*(void *)(sub_1A07856F8(&qword_1E94FBB08) - 8)
                                                                     + 64);
                                                    v632 = v1279;
                                                    goto LABEL_240;
                                                  }
                                                  ((void (*)(void *, char *, uint64_t))v1288[3])(v1279, v628, v626);
                                                }
LABEL_244:
                                                uint64_t v633 = v626;
                                                *(void *)(v234 + v236[18]) = *(void *)&v235[v236[18]];
                                                swift_bridgeObjectRetain();
                                                swift_bridgeObjectRelease();
                                                uint64_t v634 = v236[19];
                                                v635 = &v235[v634];
                                                v1280 = (void *)(v234 + v634);
                                                int v636 = v1295();
                                                __srcb = v635;
                                                int v637 = ((uint64_t (*)(char *, uint64_t, uint64_t))v1295)(v635, 1, v633);
                                                uint64_t v638 = v633;
                                                if (v636)
                                                {
                                                  if (v637)
                                                  {
                                                    size_t v639 = *(void *)(*(void *)(sub_1A07856F8(&qword_1E94FBB08) - 8)
                                                                     + 64);
                                                    v640 = v1280;
LABEL_249:
                                                    memcpy(v640, __srcb, v639);
                                                    goto LABEL_252;
                                                  }
                                                  ((void (*)(void *, char *, uint64_t))v1288[2])(v1280, __srcb, v633);
                                                  ((void (*)(void *, void, uint64_t, uint64_t))v1288[7])(v1280, 0, 1, v633);
                                                }
                                                else
                                                {
                                                  if (v637)
                                                  {
                                                    ((void (*)(void *, uint64_t))v1288[1])(v1280, v633);
                                                    size_t v639 = *(void *)(*(void *)(sub_1A07856F8(&qword_1E94FBB08) - 8)
                                                                     + 64);
                                                    v640 = v1280;
                                                    goto LABEL_249;
                                                  }
                                                  ((void (*)(void *, char *, uint64_t))v1288[3])(v1280, __srcb, v633);
                                                }
LABEL_252:
                                                uint64_t v641 = v236[20];
                                                v642 = &v235[v641];
                                                v1281 = (void *)(v234 + v641);
                                                int v643 = v1295();
                                                int v644 = ((uint64_t (*)(char *, uint64_t, uint64_t))v1295)(v642, 1, v638);
                                                if (v643)
                                                {
                                                  if (v644)
                                                  {
                                                    size_t v645 = *(void *)(*(void *)(sub_1A07856F8(&qword_1E94FBB08) - 8)
                                                                     + 64);
                                                    v646 = v1281;
LABEL_257:
                                                    memcpy(v646, v642, v645);
                                                    goto LABEL_260;
                                                  }
                                                  ((void (*)(void *, char *, uint64_t))v1288[2])(v1281, v642, v638);
                                                  ((void (*)(void *, void, uint64_t, uint64_t))v1288[7])(v1281, 0, 1, v638);
                                                }
                                                else
                                                {
                                                  if (v644)
                                                  {
                                                    ((void (*)(void *, uint64_t))v1288[1])(v1281, v638);
                                                    size_t v645 = *(void *)(*(void *)(sub_1A07856F8(&qword_1E94FBB08) - 8)
                                                                     + 64);
                                                    v646 = v1281;
                                                    goto LABEL_257;
                                                  }
                                                  ((void (*)(void *, char *, uint64_t))v1288[3])(v1281, v642, v638);
                                                }
LABEL_260:
                                                uint64_t v5 = v1309;
                                                *(void *)(v234 + v236[21]) = *(void *)&v235[v236[21]];
                                                swift_bridgeObjectRetain();
                                                swift_bridgeObjectRelease();
                                                uint64_t v647 = v236[22];
                                                v648 = (uint64_t *)(v234 + v647);
                                                v649 = (uint64_t *)&v235[v647];
                                                unint64_t v650 = *(void *)&v235[v647 + 8];
                                                if (*(void *)(v234 + v647 + 8) >> 60 == 15)
                                                {
                                                  if (v650 >> 60 != 15)
                                                  {
                                                    uint64_t v651 = *v649;
                                                    sub_1A08AF278(v651, v650);
                                                    uint64_t *v648 = v651;
                                                    v648[1] = v650;
                                                    goto LABEL_267;
                                                  }
                                                }
                                                else
                                                {
                                                  if (v650 >> 60 != 15)
                                                  {
                                                    uint64_t v652 = *v649;
                                                    sub_1A08AF278(v652, v650);
                                                    uint64_t v653 = *v648;
                                                    unint64_t v654 = v648[1];
                                                    uint64_t *v648 = v652;
                                                    v648[1] = v650;
                                                    sub_1A08AF2E4(v653, v654);
LABEL_267:
                                                    uint64_t v655 = v236[23];
                                                    v656 = (void *)(v234 + v655);
                                                    v657 = &v235[v655];
                                                    void *v656 = *(void *)v657;
                                                    v656[1] = *((void *)v657 + 1);
                                                    swift_bridgeObjectRetain();
                                                    swift_bridgeObjectRelease();
                                                    uint64_t v658 = v236[24];
                                                    uint64_t v659 = v234 + v658;
                                                    v660 = &v235[v658];
                                                    uint64_t v661 = *(void *)v660;
                                                    *(unsigned char *)(v659 + 8) = v660[8];
                                                    *(void *)uint64_t v659 = v661;
                                                    uint64_t v662 = v236[25];
                                                    uint64_t v663 = v234 + v662;
                                                    v664 = &v235[v662];
                                                    uint64_t v665 = *(void *)v664;
                                                    *(unsigned char *)(v663 + 8) = v664[8];
                                                    *(void *)uint64_t v663 = v665;
                                                    *(unsigned char *)(v234 + v236[26]) = v235[v236[26]];
                                                    uint64_t v666 = v236[27];
                                                    v667 = &v235[v666];
                                                    v1290 = (void *)(v234 + v666);
                                                    int v1296 = v1337();
                                                    unsigned int v668 = ((uint64_t (*)(char *, uint64_t, uint64_t))v1337)(v667, 1, v1324);
                                                    if (v1296)
                                                    {
                                                      if (!v668)
                                                      {
                                                        (*(void (**)(void *, char *, uint64_t))(v1335 + 16))(v1290, v667, v1324);
                                                        (*(void (**)(void *, void, uint64_t, uint64_t))(v1335 + 56))(v1290, 0, 1, v1324);
                                                        goto LABEL_275;
                                                      }
                                                      size_t v669 = *(void *)(*(void *)(sub_1A07856F8((uint64_t *)&unk_1E94FAF20)
                                                                                   - 8)
                                                                       + 64);
                                                      v670 = v1290;
                                                    }
                                                    else
                                                    {
                                                      if (!v668)
                                                      {
                                                        (*(void (**)(void *, char *, uint64_t))(v1335 + 24))(v1290, v667, v1324);
                                                        goto LABEL_275;
                                                      }
                                                      (*(void (**)(void *, uint64_t))(v1335 + 8))(v1290, v1324);
                                                      size_t v669 = *(void *)(*(void *)(sub_1A07856F8((uint64_t *)&unk_1E94FAF20)
                                                                                   - 8)
                                                                       + 64);
                                                      v670 = v1290;
                                                    }
                                                    memcpy(v670, v667, v669);
LABEL_275:
                                                    *(void *)(v234 + v236[28]) = *(void *)&v235[v236[28]];
                                                    swift_bridgeObjectRetain();
                                                    swift_bridgeObjectRelease();
                                                    uint64_t v671 = v236[29];
                                                    v672 = (void *)(v234 + v671);
                                                    v673 = &v235[v671];
                                                    void *v672 = *(void *)v673;
                                                    v672[1] = *((void *)v673 + 1);
                                                    swift_bridgeObjectRetain();
                                                    swift_bridgeObjectRelease();
                                                    *(unsigned char *)(v234 + v236[30]) = v235[v236[30]];
                                                    goto LABEL_276;
                                                  }
                                                  sub_1A0900E28((uint64_t)v648);
                                                }
                                                *(_OWORD *)v648 = *(_OWORD *)v649;
                                                goto LABEL_267;
                                              }
                                              ((void (*)(void *, uint64_t))v1288[1])(v619, v621);
                                            }
                                            uint64_t v625 = sub_1A07856F8(&qword_1E94FBB08);
                                            memcpy(v619, v620, *(void *)(*(void *)(v625 - 8) + 64));
                                            goto LABEL_235;
                                          }
                                          sub_1A0900E28(v234 + 16);
                                        }
                                        *(_OWORD *)(v234 + 16) = *(_OWORD *)v450;
                                        goto LABEL_229;
                                      }
                                      sub_1A0900E28((uint64_t)v226);
                                    }
                                    *(_OWORD *)uint64_t v226 = *(_OWORD *)v227;
                                    goto LABEL_108;
                                  }
                                  (*(void (**)(void *, uint64_t))(v1335 + 8))(v216, v132);
                                }
                                uint64_t v220 = sub_1A07856F8((uint64_t *)&unk_1E94FAF20);
                                memcpy(v216, v217, *(void *)(*(void *)(v220 - 8) + 64));
                                goto LABEL_101;
                              }
                              sub_1A0900E28((uint64_t)v205);
                            }
                            *(_OWORD *)uint64_t v205 = *(_OWORD *)v206;
                            goto LABEL_95;
                          }
                          (*(void (**)(void *, uint64_t))(v1335 + 8))(v195, v132);
                        }
                        uint64_t v199 = sub_1A07856F8((uint64_t *)&unk_1E94FAF20);
                        memcpy(v195, v196, *(void *)(*(void *)(v199 - 8) + 64));
                        goto LABEL_88;
                      }
                      (*(void (**)(void *, uint64_t))(v1335 + 8))(v189, v132);
                    }
                    uint64_t v193 = sub_1A07856F8((uint64_t *)&unk_1E94FAF20);
                    memcpy(v189, v190, *(void *)(*(void *)(v193 - 8) + 64));
                    goto LABEL_82;
                  }
                  (*(void (**)(void *, uint64_t))(v1335 + 8))(v183, v132);
                }
                uint64_t v187 = sub_1A07856F8((uint64_t *)&unk_1E94FAF20);
                memcpy(v183, v184, *(void *)(*(void *)(v187 - 8) + 64));
                goto LABEL_76;
              }
              sub_1A0900E28((uint64_t)v175);
            }
            *(_OWORD *)uint64_t v175 = *(_OWORD *)v176;
            goto LABEL_70;
          }
          sub_1A0900E28((uint64_t)v164);
        }
        *(_OWORD *)v164 = *(_OWORD *)v165;
        goto LABEL_63;
      }
      (*(void (**)(void *, uint64_t))(v1335 + 8))(v130, v132);
    }
    uint64_t v136 = sub_1A07856F8((uint64_t *)&unk_1E94FAF20);
    memcpy(v130, v131, *(void *)(*(void *)(v136 - 8) + 64));
    goto LABEL_56;
  }
  if (v19)
  {
LABEL_7:
    uint64_t v23 = sub_1A07856F8(&qword_1E94FBB20);
    memcpy((void *)v13, v14, *(void *)(*(void *)(v23 - 8) + 64));
    goto LABEL_503;
  }
  v1303 = v4;
  v1308 = v5;
  uint64_t v1316 = a3;
  uint64_t v1326 = v15;
  v1300 = (void (**)(uint64_t, void, uint64_t, uint64_t))v16;
  if (*((void *)v14 + 1) == 1)
  {
    *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
    long long v20 = *((_OWORD *)v14 + 1);
    long long v21 = *((_OWORD *)v14 + 2);
    long long v22 = *((_OWORD *)v14 + 3);
    *(unsigned char *)(v13 + 64) = v14[64];
    *(_OWORD *)(v13 + 32) = v21;
    *(_OWORD *)(v13 + 48) = v22;
    *(_OWORD *)(v13 + 16) = v20;
  }
  else
  {
    *(void *)uint64_t v13 = *(void *)v14;
    *(void *)(v13 + 8) = *((void *)v14 + 1);
    *(void *)(v13 + 16) = *((void *)v14 + 2);
    *(void *)(v13 + 24) = *((void *)v14 + 3);
    *(void *)(v13 + 32) = *((void *)v14 + 4);
    *(void *)(v13 + 40) = *((void *)v14 + 5);
    *(void *)(v13 + 48) = *((void *)v14 + 6);
    *(void *)(v13 + 56) = *((void *)v14 + 7);
    *(unsigned char *)(v13 + 64) = v14[64];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  *(void *)(v13 + 72) = *((void *)v14 + 9);
  *(void *)(v13 + 80) = *((void *)v14 + 10);
  *(void *)(v13 + 88) = *((void *)v14 + 11);
  *(void *)(v13 + 96) = *((void *)v14 + 12);
  *(void *)(v13 + 104) = *((void *)v14 + 13);
  *(void *)(v13 + 112) = *((void *)v14 + 14);
  *(void *)(v13 + 120) = *((void *)v14 + 15);
  *(void *)(v13 + 128) = *((void *)v14 + 16);
  *(void *)(v13 + 136) = *((void *)v14 + 17);
  *(void *)(v13 + 144) = *((void *)v14 + 18);
  *(void *)(v13 + 152) = *((void *)v14 + 19);
  *(void *)(v13 + 160) = *((void *)v14 + 20);
  *(void *)(v13 + 168) = *((void *)v14 + 21);
  *(void *)(v13 + 176) = *((void *)v14 + 22);
  *(void *)(v13 + 184) = *((void *)v14 + 23);
  *(void *)(v13 + 192) = *((void *)v14 + 24);
  uint64_t v28 = *((void *)v14 + 25);
  *(unsigned char *)(v13 + 208) = v14[208];
  *(void *)(v13 + 200) = v28;
  *(unsigned char *)(v13 + 209) = v14[209];
  *(void *)(v13 + 216) = *((void *)v14 + 27);
  *(void *)(v13 + 224) = *((void *)v14 + 28);
  v1334 = (int *)type metadata accessor for RemoteIntentItemContent(0);
  uint64_t v29 = v1334[16];
  __dst = (void *)(v13 + v29);
  v1318 = &v14[v29];
  uint64_t v30 = sub_1A09F3478();
  uint64_t v31 = *(void *)(v30 - 8);
  uint64_t v32 = *(unsigned int (**)(void, void, void))(v31 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v1336 = (unsigned int (*)(char *, uint64_t, uint64_t))v32;
  uint64_t v1333 = v30;
  uint64_t v1322 = v31;
  if (v32(v1318, 1, v30))
  {
    uint64_t v33 = sub_1A07856F8((uint64_t *)&unk_1E94FAF20);
    memcpy(__dst, v1318, *(void *)(*(void *)(v33 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v31 + 16))(__dst, v1318, v30);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v31 + 56))(__dst, 0, 1, v30);
  }
  uint64_t v34 = v1334[17];
  uint64_t v35 = v1338 + v34;
  uint64_t v36 = &v14[v34];
  uint64_t v37 = *(void *)v36;
  *(unsigned char *)(v35 + 8) = v36[8];
  *(void *)uint64_t v35 = v37;
  uint64_t v38 = v1334[18];
  uint64_t v39 = (void *)(v1338 + v38);
  uint64_t v40 = &v14[v38];
  *uint64_t v39 = *(void *)v40;
  v39[1] = *((void *)v40 + 1);
  uint64_t v41 = v1334[19];
  uint64_t v42 = (void *)(v1338 + v41);
  uint64_t v43 = &v14[v41];
  *uint64_t v42 = *(void *)v43;
  v42[1] = *((void *)v43 + 1);
  uint64_t v44 = v1334[20];
  uint64_t v45 = (void *)(v1338 + v44);
  uint64_t v46 = &v14[v44];
  *uint64_t v45 = *(void *)v46;
  v45[1] = *((void *)v46 + 1);
  uint64_t v47 = v1334[21];
  unint64_t v48 = (void *)(v1338 + v47);
  uint64_t v49 = &v14[v47];
  *unint64_t v48 = *(void *)v49;
  v48[1] = *((void *)v49 + 1);
  uint64_t v50 = v1334[22];
  uint64_t v51 = v1338 + v50;
  uint64_t v52 = &v14[v50];
  uint64_t v53 = *(void *)v52;
  *(unsigned char *)(v51 + 8) = v52[8];
  *(void *)uint64_t v51 = v53;
  uint64_t v54 = v1334[23];
  uint64_t v55 = (void *)(v1338 + v54);
  uint64_t v56 = &v14[v54];
  *uint64_t v55 = *(void *)v56;
  v55[1] = *((void *)v56 + 1);
  uint64_t v57 = v1334[24];
  uint64_t v58 = (void *)(v1338 + v57);
  uint64_t v59 = &v14[v57];
  *uint64_t v58 = *(void *)v59;
  v58[1] = *((void *)v59 + 1);
  uint64_t v60 = v1334[25];
  uint64_t v61 = v1338 + v60;
  uint64_t v62 = (uint64_t *)&v14[v60];
  unint64_t v63 = *(void *)&v14[v60 + 8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v63 >> 60 == 15)
  {
    *(_OWORD *)uint64_t v61 = *(_OWORD *)v62;
  }
  else
  {
    uint64_t v64 = *v62;
    sub_1A08AF278(*v62, v63);
    *(void *)uint64_t v61 = v64;
    *(void *)(v61 + 8) = v63;
  }
  uint64_t v65 = v1334;
  uint64_t v66 = v1334[26];
  uint64_t v67 = (void *)(v1338 + v66);
  id v68 = &v14[v66];
  *uint64_t v67 = *(void *)v68;
  v67[1] = *((void *)v68 + 1);
  *(void *)(v1338 + v1334[27]) = *(void *)&v14[v1334[27]];
  uint64_t v69 = v1334[28];
  uint64_t v70 = v1338 + v69;
  uint64_t v71 = (uint64_t *)&v14[v69];
  unint64_t v72 = *(void *)&v14[v69 + 8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v72 >> 60 == 15)
  {
    *(_OWORD *)uint64_t v70 = *(_OWORD *)v71;
  }
  else
  {
    uint64_t v73 = *v71;
    sub_1A08AF278(*v71, v72);
    *(void *)uint64_t v70 = v73;
    *(void *)(v70 + 8) = v72;
  }
  uint64_t v74 = v1334[29];
  uint64_t v75 = (void *)(v1338 + v74);
  uint64_t v76 = &v14[v74];
  if (v1336(&v14[v74], 1, v30))
  {
    uint64_t v77 = sub_1A07856F8((uint64_t *)&unk_1E94FAF20);
    memcpy(v75, v76, *(void *)(*(void *)(v77 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v1322 + 16))(v75, v76, v30);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v1322 + 56))(v75, 0, 1, v30);
  }
  uint64_t v78 = v1334[30];
  uint64_t v79 = (void *)(v1338 + v78);
  unint64_t v80 = &v14[v78];
  if (v1336(&v14[v78], 1, v30))
  {
    uint64_t v81 = sub_1A07856F8((uint64_t *)&unk_1E94FAF20);
    memcpy(v79, v80, *(void *)(*(void *)(v81 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v1322 + 16))(v79, v80, v30);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v1322 + 56))(v79, 0, 1, v30);
  }
  uint64_t v82 = v1334[31];
  id v83 = (void *)(v1338 + v82);
  uint64_t v84 = &v14[v82];
  if (v1336(&v14[v82], 1, v30))
  {
    uint64_t v85 = sub_1A07856F8((uint64_t *)&unk_1E94FAF20);
    memcpy(v83, v84, *(void *)(*(void *)(v85 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v1322 + 16))(v83, v84, v30);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v1322 + 56))(v83, 0, 1, v30);
  }
  uint64_t v86 = v1334[32];
  uint64_t v87 = v1338 + v86;
  uint64_t v88 = &v14[v86];
  uint64_t v89 = *(void *)v88;
  *(unsigned char *)(v87 + 8) = v88[8];
  *(void *)uint64_t v87 = v89;
  *(unsigned char *)(v1338 + v1334[33]) = v14[v1334[33]];
  uint64_t v90 = v1334[34];
  uint64_t v91 = v1338 + v90;
  uint64_t v92 = &v14[v90];
  unint64_t v93 = *((void *)v92 + 1);
  if (v93 >> 60 == 15)
  {
    *(_OWORD *)uint64_t v91 = *(_OWORD *)v92;
  }
  else
  {
    uint64_t v94 = *(void *)v92;
    sub_1A08AF278(*(void *)v92, *((void *)v92 + 1));
    *(void *)uint64_t v91 = v94;
    *(void *)(v91 + 8) = v93;
  }
  uint64_t v95 = v1334[35];
  uint64_t v96 = (void *)(v1338 + v95);
  uint64_t v97 = &v14[v95];
  *uint64_t v96 = *(void *)v97;
  v96[1] = *((void *)v97 + 1);
  uint64_t v98 = v1334[36];
  id v99 = (void *)(v1338 + v98);
  uint64_t v100 = &v14[v98];
  swift_bridgeObjectRetain();
  if (v1336(v100, 1, v30))
  {
    uint64_t v101 = sub_1A07856F8((uint64_t *)&unk_1E94FAF20);
    memcpy(v99, v100, *(void *)(*(void *)(v101 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v1322 + 16))(v99, v100, v30);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v1322 + 56))(v99, 0, 1, v30);
  }
  uint64_t v102 = v1334[37];
  uint64_t v103 = v1338 + v102;
  uint64_t v104 = &v14[v102];
  uint64_t v105 = *(void *)v104;
  *(unsigned char *)(v103 + 8) = v104[8];
  *(void *)uint64_t v103 = v105;
  uint64_t v106 = v1334[38];
  uint64_t v107 = v1338 + v106;
  uint64_t v108 = &v14[v106];
  unint64_t v109 = *((void *)v108 + 1);
  if (v109 >> 60 == 15)
  {
    *(_OWORD *)uint64_t v107 = *(_OWORD *)v108;
  }
  else
  {
    uint64_t v110 = *(void *)v108;
    sub_1A08AF278(*(void *)v108, *((void *)v108 + 1));
    *(void *)uint64_t v107 = v110;
    *(void *)(v107 + 8) = v109;
  }
  uint64_t v111 = v1334[39];
  uint64_t v112 = (void *)(v1338 + v111);
  uint64_t v113 = &v14[v111];
  __dsta = (int *)type metadata accessor for RemoteIntentMessageSummaryInfo();
  v1286 = (void *)*((void *)__dsta - 1);
  __src = (unsigned int (*)(char *, uint64_t, int *))v1286[6];
  if (__src(v113, 1, __dsta))
  {
    uint64_t v114 = sub_1A07856F8(&qword_1E94FBB10);
    memcpy(v112, v113, *(void *)(*(void *)(v114 - 8) + 64));
  }
  else
  {
    *uint64_t v112 = *(void *)v113;
    v112[1] = *((void *)v113 + 1);
    uint64_t v115 = v113 + 16;
    unint64_t v116 = *((void *)v113 + 3);
    swift_bridgeObjectRetain();
    if (v116 >> 60 == 15)
    {
      *((_OWORD *)v112 + 1) = *v115;
    }
    else
    {
      uint64_t v120 = *(void *)v115;
      sub_1A08AF278(v120, v116);
      v112[2] = v120;
      v112[3] = v116;
    }
    uint64_t v121 = *((void *)v113 + 4);
    *((unsigned char *)v112 + 40) = v113[40];
    v112[4] = v121;
    v112[6] = *((void *)v113 + 6);
    v112[7] = *((void *)v113 + 7);
    v112[8] = *((void *)v113 + 8);
    v112[9] = *((void *)v113 + 9);
    v112[10] = *((void *)v113 + 10);
    v112[11] = *((void *)v113 + 11);
    v112[12] = *((void *)v113 + 12);
    v112[13] = *((void *)v113 + 13);
    *((unsigned char *)v112 + 112) = v113[112];
    *((unsigned char *)v112 + 113) = v113[113];
    v112[15] = *((void *)v113 + 15);
    v112[16] = *((void *)v113 + 16);
    *((unsigned char *)v112 + 136) = v113[136];
    v112[18] = *((void *)v113 + 18);
    v112[19] = *((void *)v113 + 19);
    uint64_t v122 = __dsta[16];
    v1293 = (char *)v112 + v122;
    v1274 = &v113[v122];
    uint64_t v123 = sub_1A09F34B8();
    uint64_t v124 = *(void *)(v123 - 8);
    uint64_t v125 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v124 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v125(v1274, 1, v123))
    {
      uint64_t v126 = sub_1A07856F8(&qword_1E94FBB08);
      memcpy(v1293, v1274, *(void *)(*(void *)(v126 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v124 + 16))(v1293, v1274, v123);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v124 + 56))(v1293, 0, 1, v123);
    }
    uint64_t v241 = __dsta[17];
    uint64_t v242 = (char *)v112 + v241;
    uint64_t v243 = &v113[v241];
    uint64_t v65 = v1334;
    if (v125(&v113[v241], 1, v123))
    {
      uint64_t v244 = sub_1A07856F8(&qword_1E94FBB08);
      memcpy(v242, v243, *(void *)(*(void *)(v244 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v124 + 16))(v242, v243, v123);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v124 + 56))(v242, 0, 1, v123);
    }
    *(void *)((char *)v112 + __dsta[18]) = *(void *)&v113[__dsta[18]];
    uint64_t v247 = __dsta[19];
    uint64_t v248 = (char *)v112 + v247;
    uint64_t v249 = &v113[v247];
    swift_bridgeObjectRetain();
    if (v125(v249, 1, v123))
    {
      uint64_t v250 = sub_1A07856F8(&qword_1E94FBB08);
      memcpy(v248, v249, *(void *)(*(void *)(v250 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v124 + 16))(v248, v249, v123);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v124 + 56))(v248, 0, 1, v123);
    }
    uint64_t v251 = __dsta[20];
    uint64_t v252 = (char *)v112 + v251;
    uint64_t v253 = &v113[v251];
    if (v125(&v113[v251], 1, v123))
    {
      uint64_t v254 = sub_1A07856F8(&qword_1E94FBB08);
      memcpy(v252, v253, *(void *)(*(void *)(v254 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v124 + 16))(v252, v253, v123);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v124 + 56))(v252, 0, 1, v123);
    }
    *(void *)((char *)v112 + __dsta[21]) = *(void *)&v113[__dsta[21]];
    uint64_t v255 = __dsta[22];
    uint64_t v256 = (char *)v112 + v255;
    v257 = &v113[v255];
    unint64_t v258 = *(void *)&v113[v255 + 8];
    swift_bridgeObjectRetain();
    if (v258 >> 60 == 15)
    {
      *(_OWORD *)uint64_t v256 = *(_OWORD *)v257;
    }
    else
    {
      uint64_t v259 = *(void *)v257;
      sub_1A08AF278(v259, v258);
      *(void *)uint64_t v256 = v259;
      *((void *)v256 + 1) = v258;
    }
    uint64_t v260 = __dsta;
    uint64_t v261 = __dsta[23];
    uint64_t v262 = (void *)((char *)v112 + v261);
    uint64_t v263 = &v113[v261];
    void *v262 = *(void *)v263;
    v262[1] = *((void *)v263 + 1);
    uint64_t v264 = __dsta[24];
    v265 = (char *)v112 + v264;
    uint64_t v266 = &v113[v264];
    uint64_t v267 = *(void *)v266;
    v265[8] = v266[8];
    *(void *)v265 = v267;
    uint64_t v268 = __dsta[25];
    uint64_t v269 = (char *)v112 + v268;
    v270 = &v113[v268];
    uint64_t v271 = *(void *)v270;
    v269[8] = v270[8];
    *(void *)uint64_t v269 = v271;
    *((unsigned char *)v112 + __dsta[26]) = v113[__dsta[26]];
    uint64_t v272 = __dsta[27];
    long long v273 = (char *)v112 + v272;
    long long v274 = &v113[v272];
    swift_bridgeObjectRetain();
    if (v1336(v274, 1, v1333))
    {
      uint64_t v275 = sub_1A07856F8((uint64_t *)&unk_1E94FAF20);
      memcpy(v273, v274, *(void *)(*(void *)(v275 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v1322 + 16))(v273, v274, v1333);
      uint64_t v260 = __dsta;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v1322 + 56))(v273, 0, 1, v1333);
    }
    *(void *)((char *)v112 + v260[28]) = *(void *)&v113[v260[28]];
    uint64_t v276 = v260[29];
    uint64_t v277 = (void *)((char *)v112 + v276);
    uint64_t v278 = &v113[v276];
    *uint64_t v277 = *(void *)v278;
    v277[1] = *((void *)v278 + 1);
    *((unsigned char *)v112 + v260[30]) = v113[v260[30]];
    uint64_t v279 = (void (*)(void *, void, uint64_t, int *))v1286[7];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v279(v112, 0, 1, v260);
  }
  uint64_t v280 = v65[40];
  uint64_t v281 = (void *)(v1338 + v280);
  uint64_t v282 = &v14[v280];
  *uint64_t v281 = *(void *)v282;
  v281[1] = *((void *)v282 + 1);
  *(unsigned char *)(v1338 + v65[41]) = v14[v65[41]];
  uint64_t v283 = v65[42];
  uint64_t v284 = (void *)(v1338 + v283);
  uint64_t v285 = &v14[v283];
  *uint64_t v284 = *(void *)v285;
  v284[1] = *((void *)v285 + 1);
  *(unsigned char *)(v1338 + v65[43]) = v14[v65[43]];
  *(unsigned char *)(v1338 + v65[44]) = v14[v65[44]];
  *(unsigned char *)(v1338 + v65[45]) = v14[v65[45]];
  *(unsigned char *)(v1338 + v65[46]) = v14[v65[46]];
  uint64_t v286 = v65[47];
  uint64_t v287 = (void *)(v1338 + v286);
  uint64_t v288 = &v14[v286];
  *uint64_t v287 = *(void *)v288;
  v287[1] = *((void *)v288 + 1);
  uint64_t v289 = v65[48];
  uint64_t v290 = (void *)(v1338 + v289);
  uint64_t v291 = &v14[v289];
  *uint64_t v290 = *(void *)v291;
  v290[1] = *((void *)v291 + 1);
  *(void *)(v1338 + v65[49]) = *(void *)&v14[v65[49]];
  uint64_t v292 = v65[50];
  uint64_t v293 = (void *)(v1338 + v292);
  uint64_t v294 = &v14[v292];
  *uint64_t v293 = *(void *)v294;
  v293[1] = *((void *)v294 + 1);
  uint64_t v295 = v65[51];
  uint64_t v296 = (void *)(v1338 + v295);
  uint64_t v297 = &v14[v295];
  *uint64_t v296 = *(void *)v297;
  v296[1] = *((void *)v297 + 1);
  uint64_t v298 = v65[52];
  uint64_t v299 = (void *)(v1338 + v298);
  uint64_t v300 = &v14[v298];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v1336(v300, 1, v1333))
  {
    uint64_t v301 = sub_1A07856F8((uint64_t *)&unk_1E94FAF20);
    memcpy(v299, v300, *(void *)(*(void *)(v301 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v1322 + 16))(v299, v300, v1333);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v1322 + 56))(v299, 0, 1, v1333);
  }
  uint64_t v302 = v1334[53];
  uint64_t v303 = v1338 + v302;
  uint64_t v304 = &v14[v302];
  uint64_t v305 = *(void *)v304;
  *(unsigned char *)(v303 + 8) = v304[8];
  *(void *)uint64_t v303 = v305;
  uint64_t v306 = v1334[54];
  uint64_t v307 = v1338 + v306;
  uint64_t v308 = &v14[v306];
  uint64_t v309 = *(void *)v308;
  *(unsigned char *)(v307 + 8) = v308[8];
  *(void *)uint64_t v307 = v309;
  uint64_t v310 = v1334[55];
  uint64_t v311 = (void *)(v1338 + v310);
  uint64_t v312 = &v14[v310];
  *uint64_t v311 = *(void *)v312;
  v311[1] = *((void *)v312 + 1);
  *(unsigned char *)(v1338 + v1334[56]) = v14[v1334[56]];
  *(unsigned char *)(v1338 + v1334[57]) = v14[v1334[57]];
  uint64_t v313 = v1334[58];
  uint64_t v314 = (void *)(v1338 + v313);
  uint64_t v315 = &v14[v313];
  void *v314 = *(void *)v315;
  v314[1] = *((void *)v315 + 1);
  uint64_t v316 = v1334[59];
  uint64_t v317 = (void *)(v1338 + v316);
  uint64_t v318 = &v14[v316];
  void *v317 = *(void *)v318;
  v317[1] = *((void *)v318 + 1);
  uint64_t v319 = v1334[60];
  v320 = (void *)(v1338 + v319);
  uint64_t v321 = &v14[v319];
  void *v320 = *(void *)v321;
  v320[1] = *((void *)v321 + 1);
  uint64_t v322 = v1334[61];
  uint64_t v323 = v1338 + v322;
  v324 = &v14[v322];
  uint64_t v325 = *(void *)v324;
  *(unsigned char *)(v323 + 8) = v324[8];
  *(void *)uint64_t v323 = v325;
  uint64_t v326 = v1334[62];
  uint64_t v327 = (void *)(v1338 + v326);
  v328 = &v14[v326];
  *uint64_t v327 = *(void *)v328;
  v327[1] = *((void *)v328 + 1);
  uint64_t v329 = v1334[63];
  uint64_t v330 = v1338 + v329;
  uint64_t v331 = &v14[v329];
  LODWORD(v325) = *(_DWORD *)v331;
  *(unsigned char *)(v330 + 4) = v331[4];
  *(_DWORD *)uint64_t v330 = v325;
  uint64_t v332 = v1334[64];
  v333 = (void *)(v1338 + v332);
  v334 = &v14[v332];
  void *v333 = *(void *)v334;
  v333[1] = *((void *)v334 + 1);
  uint64_t v335 = v1334[65];
  uint64_t v336 = v1338 + v335;
  uint64_t v337 = &v14[v335];
  uint64_t v338 = *(void *)v337;
  *(unsigned char *)(v336 + 8) = v337[8];
  *(void *)uint64_t v336 = v338;
  uint64_t v339 = v1334[66];
  uint64_t v340 = v1338 + v339;
  uint64_t v341 = &v14[v339];
  long long v342 = *(_OWORD *)v341;
  *(unsigned char *)(v340 + 16) = v341[16];
  *(_OWORD *)uint64_t v340 = v342;
  uint64_t v343 = v1334[67];
  v344 = (void *)(v1338 + v343);
  uint64_t v345 = &v14[v343];
  void *v344 = *(void *)v345;
  v344[1] = *((void *)v345 + 1);
  *(void *)(v1338 + v1334[68]) = *(void *)&v14[v1334[68]];
  uint64_t v346 = v1334[69];
  uint64_t v347 = (void *)(v1338 + v346);
  v348 = &v14[v346];
  *uint64_t v347 = *(void *)v348;
  v347[1] = *((void *)v348 + 1);
  *(unsigned char *)(v1338 + v1334[70]) = v14[v1334[70]];
  *(unsigned char *)(v1338 + v1334[71]) = v14[v1334[71]];
  *(unsigned char *)(v1338 + v1334[72]) = v14[v1334[72]];
  uint64_t v349 = v1334[73];
  uint64_t v350 = v1338 + v349;
  uint64_t v351 = &v14[v349];
  uint64_t v352 = *(void *)v351;
  *(unsigned char *)(v350 + 8) = v351[8];
  *(void *)uint64_t v350 = v352;
  uint64_t v353 = *(int *)(v1326 + 20);
  v1320 = (_OWORD *)(v1338 + v353);
  uint64_t v354 = &v14[v353];
  uint64_t v355 = (void *)*((void *)v1334 - 1);
  uint64_t v356 = (unsigned int (*)(char *, uint64_t, int *))v355[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v356(v354, 1, v1334))
  {
    uint64_t v357 = sub_1A07856F8(&qword_1E94FBB18);
    memcpy(v1320, v354, *(void *)(*(void *)(v357 - 8) + 64));
  }
  else
  {
    v1294 = v355;
    if (*((void *)v354 + 1) == 1)
    {
      _OWORD *v1320 = *(_OWORD *)v354;
      long long v358 = *((_OWORD *)v354 + 1);
      long long v359 = *((_OWORD *)v354 + 2);
      long long v360 = *((_OWORD *)v354 + 3);
      *((unsigned char *)v1320 + 64) = v354[64];
      v1320[2] = v359;
      v1320[3] = v360;
      v1320[1] = v358;
    }
    else
    {
      *(void *)v1320 = *(void *)v354;
      *((void *)v1320 + 1) = *((void *)v354 + 1);
      *((void *)v1320 + 2) = *((void *)v354 + 2);
      *((void *)v1320 + 3) = *((void *)v354 + 3);
      *((void *)v1320 + 4) = *((void *)v354 + 4);
      *((void *)v1320 + 5) = *((void *)v354 + 5);
      *((void *)v1320 + 6) = *((void *)v354 + 6);
      *((void *)v1320 + 7) = *((void *)v354 + 7);
      *((unsigned char *)v1320 + 64) = v354[64];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    *((void *)v1320 + 9) = *((void *)v354 + 9);
    *((void *)v1320 + 10) = *((void *)v354 + 10);
    *((void *)v1320 + 11) = *((void *)v354 + 11);
    *((void *)v1320 + 12) = *((void *)v354 + 12);
    *((void *)v1320 + 13) = *((void *)v354 + 13);
    *((void *)v1320 + 14) = *((void *)v354 + 14);
    *((void *)v1320 + 15) = *((void *)v354 + 15);
    *((void *)v1320 + 16) = *((void *)v354 + 16);
    *((void *)v1320 + 17) = *((void *)v354 + 17);
    *((void *)v1320 + 18) = *((void *)v354 + 18);
    *((void *)v1320 + 19) = *((void *)v354 + 19);
    *((void *)v1320 + 20) = *((void *)v354 + 20);
    *((void *)v1320 + 21) = *((void *)v354 + 21);
    *((void *)v1320 + 22) = *((void *)v354 + 22);
    *((void *)v1320 + 23) = *((void *)v354 + 23);
    *((void *)v1320 + 24) = *((void *)v354 + 24);
    uint64_t v361 = *((void *)v354 + 25);
    *((unsigned char *)v1320 + 208) = v354[208];
    *((void *)v1320 + 25) = v361;
    *((unsigned char *)v1320 + 209) = v354[209];
    *((void *)v1320 + 27) = *((void *)v354 + 27);
    *((void *)v1320 + 28) = *((void *)v354 + 28);
    uint64_t v362 = v1334[16];
    uint64_t v363 = (char *)v1320 + v362;
    v1325 = v354;
    v364 = &v354[v362];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v1336(v364, 1, v1333))
    {
      uint64_t v365 = sub_1A07856F8((uint64_t *)&unk_1E94FAF20);
      memcpy(v363, v364, *(void *)(*(void *)(v365 - 8) + 64));
      uint64_t v366 = v1322;
    }
    else
    {
      uint64_t v366 = v1322;
      (*(void (**)(char *, char *, uint64_t))(v1322 + 16))(v363, v364, v1333);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v1322 + 56))(v363, 0, 1, v1333);
    }
    uint64_t v367 = v1334[17];
    v368 = (char *)v1320 + v367;
    uint64_t v369 = &v354[v367];
    uint64_t v370 = *(void *)v369;
    v368[8] = v369[8];
    *(void *)v368 = v370;
    uint64_t v371 = v1334[18];
    uint64_t v372 = (void *)((char *)v1320 + v371);
    uint64_t v373 = &v354[v371];
    void *v372 = *(void *)v373;
    v372[1] = *((void *)v373 + 1);
    uint64_t v374 = v1334[19];
    v375 = (void *)((char *)v1320 + v374);
    unint64_t v376 = &v354[v374];
    void *v375 = *(void *)v376;
    v375[1] = *((void *)v376 + 1);
    uint64_t v377 = v1334[20];
    uint64_t v378 = (void *)((char *)v1320 + v377);
    uint64_t v379 = &v354[v377];
    *uint64_t v378 = *(void *)v379;
    v378[1] = *((void *)v379 + 1);
    uint64_t v380 = v1334[21];
    uint64_t v381 = (void *)((char *)v1320 + v380);
    uint64_t v382 = &v354[v380];
    void *v381 = *(void *)v382;
    v381[1] = *((void *)v382 + 1);
    uint64_t v383 = v1334[22];
    unint64_t v384 = (char *)v1320 + v383;
    uint64_t v385 = &v354[v383];
    uint64_t v386 = *(void *)v385;
    v384[8] = v385[8];
    *(void *)unint64_t v384 = v386;
    uint64_t v387 = v1334[23];
    uint64_t v388 = (void *)((char *)v1320 + v387);
    uint64_t v389 = &v354[v387];
    *uint64_t v388 = *(void *)v389;
    v388[1] = *((void *)v389 + 1);
    uint64_t v390 = v1334[24];
    uint64_t v391 = (void *)((char *)v1320 + v390);
    uint64_t v392 = &v354[v390];
    *uint64_t v391 = *(void *)v392;
    v391[1] = *((void *)v392 + 1);
    uint64_t v393 = v1334[25];
    uint64_t v394 = (char *)v1320 + v393;
    uint64_t v395 = (uint64_t *)&v354[v393];
    unint64_t v396 = *(void *)&v354[v393 + 8];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v396 >> 60 == 15)
    {
      *(_OWORD *)uint64_t v394 = *(_OWORD *)v395;
    }
    else
    {
      uint64_t v397 = *v395;
      sub_1A08AF278(*v395, v396);
      *(void *)uint64_t v394 = v397;
      *((void *)v394 + 1) = v396;
    }
    uint64_t v398 = v1334;
    uint64_t v399 = v1334[26];
    uint64_t v400 = (void *)((char *)v1320 + v399);
    uint64_t v401 = &v354[v399];
    void *v400 = *(void *)v401;
    v400[1] = *((void *)v401 + 1);
    *(void *)((char *)v1320 + v1334[27]) = *(void *)&v354[v1334[27]];
    uint64_t v402 = v1334[28];
    unsigned int v403 = (char *)v1320 + v402;
    uint64_t v404 = (uint64_t *)&v354[v402];
    unint64_t v405 = *(void *)&v354[v402 + 8];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v405 >> 60 == 15)
    {
      *(_OWORD *)unsigned int v403 = *(_OWORD *)v404;
    }
    else
    {
      uint64_t v406 = *v404;
      sub_1A08AF278(*v404, v405);
      *(void *)unsigned int v403 = v406;
      *((void *)v403 + 1) = v405;
    }
    uint64_t v407 = v1334[29];
    uint64_t v408 = (char *)v1320 + v407;
    uint64_t v409 = &v354[v407];
    if (v1336(&v354[v407], 1, v1333))
    {
      uint64_t v410 = sub_1A07856F8((uint64_t *)&unk_1E94FAF20);
      memcpy(v408, v409, *(void *)(*(void *)(v410 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v366 + 16))(v408, v409, v1333);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v366 + 56))(v408, 0, 1, v1333);
    }
    uint64_t v411 = v1334[30];
    unint64_t v412 = (char *)v1320 + v411;
    uint64_t v413 = &v354[v411];
    if (v1336(&v354[v411], 1, v1333))
    {
      uint64_t v414 = sub_1A07856F8((uint64_t *)&unk_1E94FAF20);
      memcpy(v412, v413, *(void *)(*(void *)(v414 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v366 + 16))(v412, v413, v1333);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v366 + 56))(v412, 0, 1, v1333);
    }
    uint64_t v415 = v1334[31];
    unint64_t v416 = (char *)v1320 + v415;
    uint64_t v417 = &v354[v415];
    if (v1336(&v354[v415], 1, v1333))
    {
      uint64_t v418 = sub_1A07856F8((uint64_t *)&unk_1E94FAF20);
      memcpy(v416, v417, *(void *)(*(void *)(v418 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v366 + 16))(v416, v417, v1333);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v366 + 56))(v416, 0, 1, v1333);
    }
    uint64_t v419 = v1334[32];
    v420 = (char *)v1320 + v419;
    uint64_t v421 = &v354[v419];
    uint64_t v422 = *(void *)v421;
    v420[8] = v421[8];
    *(void *)v420 = v422;
    *((unsigned char *)v1320 + v1334[33]) = v354[v1334[33]];
    uint64_t v423 = v1334[34];
    uint64_t v424 = (char *)v1320 + v423;
    uint64_t v425 = &v354[v423];
    unint64_t v426 = *((void *)v425 + 1);
    if (v426 >> 60 == 15)
    {
      *(_OWORD *)uint64_t v424 = *(_OWORD *)v425;
    }
    else
    {
      uint64_t v427 = *(void *)v425;
      sub_1A08AF278(*(void *)v425, *((void *)v425 + 1));
      *(void *)uint64_t v424 = v427;
      *((void *)v424 + 1) = v426;
    }
    uint64_t v428 = v1334[35];
    v429 = (void *)((char *)v1320 + v428);
    v430 = &v354[v428];
    void *v429 = *(void *)v430;
    v429[1] = *((void *)v430 + 1);
    uint64_t v431 = v1334[36];
    uint64_t v432 = (char *)v1320 + v431;
    uint64_t v433 = &v354[v431];
    swift_bridgeObjectRetain();
    if (v1336(v433, 1, v1333))
    {
      uint64_t v434 = sub_1A07856F8((uint64_t *)&unk_1E94FAF20);
      memcpy(v432, v433, *(void *)(*(void *)(v434 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v366 + 16))(v432, v433, v1333);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v366 + 56))(v432, 0, 1, v1333);
    }
    uint64_t v435 = v1334[37];
    uint64_t v436 = (char *)v1320 + v435;
    uint64_t v437 = &v354[v435];
    uint64_t v438 = *(void *)v437;
    v436[8] = v437[8];
    *(void *)uint64_t v436 = v438;
    uint64_t v439 = v1334[38];
    uint64_t v440 = (char *)v1320 + v439;
    uint64_t v441 = &v354[v439];
    unint64_t v442 = *((void *)v441 + 1);
    if (v442 >> 60 == 15)
    {
      *(_OWORD *)uint64_t v440 = *(_OWORD *)v441;
    }
    else
    {
      uint64_t v443 = *(void *)v441;
      sub_1A08AF278(*(void *)v441, *((void *)v441 + 1));
      *(void *)uint64_t v440 = v443;
      *((void *)v440 + 1) = v442;
    }
    uint64_t v444 = v1334[39];
    uint64_t v445 = (void *)((char *)v1320 + v444);
    v446 = &v354[v444];
    if (__src(&v354[v444], 1, __dsta))
    {
      uint64_t v447 = sub_1A07856F8(&qword_1E94FBB10);
      memcpy(v445, v446, *(void *)(*(void *)(v447 - 8) + 64));
    }
    else
    {
      *uint64_t v445 = *(void *)v446;
      v445[1] = *((void *)v446 + 1);
      uint64_t v448 = v446 + 16;
      unint64_t v449 = *((void *)v446 + 3);
      swift_bridgeObjectRetain();
      if (v449 >> 60 == 15)
      {
        *((_OWORD *)v445 + 1) = *v448;
      }
      else
      {
        uint64_t v460 = *(void *)v448;
        sub_1A08AF278(v460, v449);
        v445[2] = v460;
        v445[3] = v449;
      }
      uint64_t v461 = *((void *)v446 + 4);
      *((unsigned char *)v445 + 40) = v446[40];
      v445[4] = v461;
      v445[6] = *((void *)v446 + 6);
      v445[7] = *((void *)v446 + 7);
      v445[8] = *((void *)v446 + 8);
      v445[9] = *((void *)v446 + 9);
      v445[10] = *((void *)v446 + 10);
      v445[11] = *((void *)v446 + 11);
      v445[12] = *((void *)v446 + 12);
      v445[13] = *((void *)v446 + 13);
      *((unsigned char *)v445 + 112) = v446[112];
      *((unsigned char *)v445 + 113) = v446[113];
      v445[15] = *((void *)v446 + 15);
      v445[16] = *((void *)v446 + 16);
      *((unsigned char *)v445 + 136) = v446[136];
      v445[18] = *((void *)v446 + 18);
      v445[19] = *((void *)v446 + 19);
      uint64_t v462 = __dsta[16];
      v1276 = (char *)v445 + v462;
      v1278 = &v446[v462];
      uint64_t v463 = sub_1A09F34B8();
      uint64_t v464 = *(void *)(v463 - 8);
      uint64_t v465 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v464 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v1289 = v464;
      if (v465(v1278, 1, v463))
      {
        uint64_t v466 = sub_1A07856F8(&qword_1E94FBB08);
        memcpy(v1276, v1278, *(void *)(*(void *)(v466 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v464 + 16))(v1276, v1278, v463);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v464 + 56))(v1276, 0, 1, v463);
      }
      uint64_t v472 = __dsta[17];
      uint64_t v473 = (char *)v445 + v472;
      v474 = &v446[v472];
      uint64_t v398 = v1334;
      uint64_t v366 = v1322;
      if (v465(&v446[v472], 1, v463))
      {
        uint64_t v475 = sub_1A07856F8(&qword_1E94FBB08);
        memcpy(v473, v474, *(void *)(*(void *)(v475 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v1289 + 16))(v473, v474, v463);
        uint64_t v366 = v1322;
        (*(void (**)(char *, void, uint64_t, uint64_t))(v1289 + 56))(v473, 0, 1, v463);
      }
      *(void *)((char *)v445 + __dsta[18]) = *(void *)&v446[__dsta[18]];
      uint64_t v480 = __dsta[19];
      v481 = (char *)v445 + v480;
      uint64_t v482 = &v446[v480];
      swift_bridgeObjectRetain();
      if (v465(v482, 1, v463))
      {
        uint64_t v483 = sub_1A07856F8(&qword_1E94FBB08);
        memcpy(v481, v482, *(void *)(*(void *)(v483 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v1289 + 16))(v481, v482, v463);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v1289 + 56))(v481, 0, 1, v463);
      }
      uint64_t v488 = __dsta[20];
      uint64_t v489 = (char *)v445 + v488;
      uint64_t v490 = &v446[v488];
      if (v465(&v446[v488], 1, v463))
      {
        uint64_t v491 = sub_1A07856F8(&qword_1E94FBB08);
        memcpy(v489, v490, *(void *)(*(void *)(v491 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v1289 + 16))(v489, v490, v463);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v1289 + 56))(v489, 0, 1, v463);
      }
      *(void *)((char *)v445 + __dsta[21]) = *(void *)&v446[__dsta[21]];
      uint64_t v512 = __dsta[22];
      uint64_t v513 = (char *)v445 + v512;
      uint64_t v514 = &v446[v512];
      unint64_t v515 = *(void *)&v446[v512 + 8];
      swift_bridgeObjectRetain();
      if (v515 >> 60 == 15)
      {
        *(_OWORD *)uint64_t v513 = *(_OWORD *)v514;
      }
      else
      {
        uint64_t v516 = *(void *)v514;
        sub_1A08AF278(v516, v515);
        *(void *)uint64_t v513 = v516;
        *((void *)v513 + 1) = v515;
      }
      uint64_t v517 = __dsta[23];
      v518 = (void *)((char *)v445 + v517);
      v519 = &v446[v517];
      void *v518 = *(void *)v519;
      v518[1] = *((void *)v519 + 1);
      uint64_t v520 = __dsta[24];
      uint64_t v521 = (char *)v445 + v520;
      uint64_t v522 = &v446[v520];
      uint64_t v523 = *(void *)v522;
      v521[8] = v522[8];
      *(void *)uint64_t v521 = v523;
      uint64_t v524 = __dsta[25];
      uint64_t v525 = (char *)v445 + v524;
      uint64_t v526 = &v446[v524];
      uint64_t v527 = *(void *)v526;
      v525[8] = v526[8];
      *(void *)uint64_t v525 = v527;
      *((unsigned char *)v445 + __dsta[26]) = v446[__dsta[26]];
      uint64_t v528 = __dsta[27];
      v529 = (char *)v445 + v528;
      v530 = &v446[v528];
      swift_bridgeObjectRetain();
      if (v1336(v530, 1, v1333))
      {
        uint64_t v531 = sub_1A07856F8((uint64_t *)&unk_1E94FAF20);
        memcpy(v529, v530, *(void *)(*(void *)(v531 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v366 + 16))(v529, v530, v1333);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v366 + 56))(v529, 0, 1, v1333);
      }
      uint64_t v354 = v1325;
      *(void *)((char *)v445 + __dsta[28]) = *(void *)&v446[__dsta[28]];
      uint64_t v536 = __dsta[29];
      v537 = (void *)((char *)v445 + v536);
      uint64_t v538 = &v446[v536];
      void *v537 = *(void *)v538;
      v537[1] = *((void *)v538 + 1);
      *((unsigned char *)v445 + __dsta[30]) = v446[__dsta[30]];
      uint64_t v539 = (void (*)(void *, void, uint64_t, int *))v1286[7];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v539(v445, 0, 1, __dsta);
    }
    uint64_t v540 = v398[40];
    uint64_t v541 = (void *)((char *)v1320 + v540);
    uint64_t v542 = &v354[v540];
    void *v541 = *(void *)v542;
    v541[1] = *((void *)v542 + 1);
    *((unsigned char *)v1320 + v398[41]) = v354[v398[41]];
    uint64_t v543 = v398[42];
    v544 = (void *)((char *)v1320 + v543);
    v545 = &v354[v543];
    void *v544 = *(void *)v545;
    v544[1] = *((void *)v545 + 1);
    *((unsigned char *)v1320 + v398[43]) = v354[v398[43]];
    *((unsigned char *)v1320 + v398[44]) = v354[v398[44]];
    *((unsigned char *)v1320 + v398[45]) = v354[v398[45]];
    *((unsigned char *)v1320 + v398[46]) = v354[v398[46]];
    uint64_t v546 = v398[47];
    uint64_t v547 = (void *)((char *)v1320 + v546);
    uint64_t v548 = &v354[v546];
    void *v547 = *(void *)v548;
    v547[1] = *((void *)v548 + 1);
    uint64_t v549 = v398[48];
    v550 = (void *)((char *)v1320 + v549);
    uint64_t v551 = &v354[v549];
    void *v550 = *(void *)v551;
    v550[1] = *((void *)v551 + 1);
    *(void *)((char *)v1320 + v398[49]) = *(void *)&v354[v398[49]];
    uint64_t v552 = v398[50];
    uint64_t v553 = (void *)((char *)v1320 + v552);
    v554 = &v354[v552];
    *uint64_t v553 = *(void *)v554;
    v553[1] = *((void *)v554 + 1);
    uint64_t v555 = v398[51];
    v556 = (void *)((char *)v1320 + v555);
    v557 = &v354[v555];
    void *v556 = *(void *)v557;
    v556[1] = *((void *)v557 + 1);
    uint64_t v558 = v398[52];
    v559 = (char *)v1320 + v558;
    v560 = &v354[v558];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v1336(v560, 1, v1333))
    {
      uint64_t v561 = sub_1A07856F8((uint64_t *)&unk_1E94FAF20);
      memcpy(v559, v560, *(void *)(*(void *)(v561 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v366 + 16))(v559, v560, v1333);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v366 + 56))(v559, 0, 1, v1333);
    }
    uint64_t v562 = v1334[53];
    v563 = (char *)v1320 + v562;
    v564 = &v1325[v562];
    uint64_t v565 = *(void *)v564;
    v563[8] = v564[8];
    *(void *)v563 = v565;
    uint64_t v566 = v1334[54];
    v567 = (char *)v1320 + v566;
    v568 = &v1325[v566];
    uint64_t v569 = *(void *)v568;
    v567[8] = v568[8];
    *(void *)v567 = v569;
    uint64_t v570 = v1334[55];
    v571 = (void *)((char *)v1320 + v570);
    v572 = &v1325[v570];
    void *v571 = *(void *)v572;
    v571[1] = *((void *)v572 + 1);
    *((unsigned char *)v1320 + v1334[56]) = v1325[v1334[56]];
    *((unsigned char *)v1320 + v1334[57]) = v1325[v1334[57]];
    uint64_t v573 = v1334[58];
    v574 = (void *)((char *)v1320 + v573);
    v575 = &v1325[v573];
    void *v574 = *(void *)v575;
    v574[1] = *((void *)v575 + 1);
    uint64_t v576 = v1334[59];
    v577 = (void *)((char *)v1320 + v576);
    v578 = &v1325[v576];
    void *v577 = *(void *)v578;
    v577[1] = *((void *)v578 + 1);
    uint64_t v579 = v1334[60];
    v580 = (void *)((char *)v1320 + v579);
    v581 = &v1325[v579];
    void *v580 = *(void *)v581;
    v580[1] = *((void *)v581 + 1);
    uint64_t v582 = v1334[61];
    v583 = (char *)v1320 + v582;
    v584 = &v1325[v582];
    uint64_t v585 = *(void *)v584;
    v583[8] = v584[8];
    *(void *)v583 = v585;
    uint64_t v586 = v1334[62];
    v587 = (void *)((char *)v1320 + v586);
    v588 = &v1325[v586];
    void *v587 = *(void *)v588;
    v587[1] = *((void *)v588 + 1);
    uint64_t v589 = v1334[63];
    v590 = (char *)v1320 + v589;
    v591 = &v1325[v589];
    LODWORD(v585) = *(_DWORD *)v591;
    v590[4] = v591[4];
    *(_DWORD *)v590 = v585;
    uint64_t v592 = v1334[64];
    v593 = (void *)((char *)v1320 + v592);
    v594 = &v1325[v592];
    void *v593 = *(void *)v594;
    v593[1] = *((void *)v594 + 1);
    uint64_t v595 = v1334[65];
    v596 = (char *)v1320 + v595;
    v597 = &v1325[v595];
    uint64_t v598 = *(void *)v597;
    v596[8] = v597[8];
    *(void *)v596 = v598;
    uint64_t v599 = v1334[66];
    v600 = (char *)v1320 + v599;
    v601 = &v1325[v599];
    long long v602 = *(_OWORD *)v601;
    v600[16] = v601[16];
    *(_OWORD *)v600 = v602;
    uint64_t v603 = v1334[67];
    v604 = (void *)((char *)v1320 + v603);
    v605 = &v1325[v603];
    void *v604 = *(void *)v605;
    v604[1] = *((void *)v605 + 1);
    *(void *)((char *)v1320 + v1334[68]) = *(void *)&v1325[v1334[68]];
    uint64_t v606 = v1334[69];
    v607 = (void *)((char *)v1320 + v606);
    v608 = &v1325[v606];
    void *v607 = *(void *)v608;
    v607[1] = *((void *)v608 + 1);
    *((unsigned char *)v1320 + v1334[70]) = v1325[v1334[70]];
    *((unsigned char *)v1320 + v1334[71]) = v1325[v1334[71]];
    *((unsigned char *)v1320 + v1334[72]) = v1325[v1334[72]];
    uint64_t v609 = v1334[73];
    v610 = (char *)v1320 + v609;
    v611 = &v1325[v609];
    uint64_t v612 = *(void *)v611;
    v610[8] = v611[8];
    *(void *)v610 = v612;
    v613 = (void (*)(_OWORD *, void, uint64_t, int *))v1294[7];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v613(v1320, 0, 1, v1334);
  }
  uint64_t v4 = v1303;
  uint64_t v5 = v1308;
  a3 = v1316;
  v1300[7](v1338, 0, 1, v1326);
LABEL_503:
  *(void *)((char *)v5 + *(int *)(a3 + 140)) = *(void *)((char *)v4 + *(int *)(a3 + 140));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_1A0900DD4(uint64_t a1)
{
  return a1;
}

uint64_t sub_1A0900E28(uint64_t a1)
{
  return a1;
}

uint64_t sub_1A0900E7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a3;
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  long long v7 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v7;
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  uint64_t v8 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v8;
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(_DWORD *)(a1 + 176) = *(_DWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
  *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
  *(unsigned char *)(a1 + 216) = *(unsigned char *)(a2 + 216);
  long long v9 = *(_OWORD *)(a2 + 240);
  *(_OWORD *)(a1 + 224) = *(_OWORD *)(a2 + 224);
  *(_OWORD *)(a1 + 240) = v9;
  *(_OWORD *)(a1 + 256) = *(_OWORD *)(a2 + 256);
  *(unsigned char *)(a1 + 280) = *(unsigned char *)(a2 + 280);
  *(void *)(a1 + 272) = *(void *)(a2 + 272);
  *(_WORD *)(a1 + 281) = *(_WORD *)(a2 + 281);
  *(unsigned char *)(a1 + 296) = *(unsigned char *)(a2 + 296);
  *(void *)(a1 + 288) = *(void *)(a2 + 288);
  *(unsigned char *)(a1 + 297) = *(unsigned char *)(a2 + 297);
  long long v10 = *(_OWORD *)(a2 + 304);
  uint64_t v11 = *(void *)(a2 + 320);
  *(unsigned char *)(a1 + 328) = *(unsigned char *)(a2 + 328);
  *(void *)(a1 + 320) = v11;
  uint64_t v12 = *(int *)(a3 + 136);
  uint64_t v13 = (_OWORD *)(a1 + v12);
  uint64_t v14 = (_OWORD *)(a2 + v12);
  *(_OWORD *)(a1 + 304) = v10;
  uint64_t v15 = type metadata accessor for RemoteIntentMessageItem(0);
  uint64_t v16 = *(void *)(v15 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
  {
    uint64_t v17 = sub_1A07856F8(&qword_1E94FBB20);
    memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    uint64_t v231 = v3;
    uint64_t v232 = v15;
    long long v18 = v14[3];
    long long v13[2] = v14[2];
    v13[3] = v18;
    *((unsigned char *)v13 + 64) = *((unsigned char *)v14 + 64);
    long long v19 = v14[1];
    *uint64_t v13 = *v14;
    v13[1] = v19;
    *(_OWORD *)((char *)v13 + 72) = *(_OWORD *)((char *)v14 + 72);
    *(_OWORD *)((char *)v13 + 88) = *(_OWORD *)((char *)v14 + 88);
    *(_OWORD *)((char *)v13 + 104) = *(_OWORD *)((char *)v14 + 104);
    *(_OWORD *)((char *)v13 + 120) = *(_OWORD *)((char *)v14 + 120);
    *(_OWORD *)((char *)v13 + 136) = *(_OWORD *)((char *)v14 + 136);
    *(_OWORD *)((char *)v13 + 152) = *(_OWORD *)((char *)v14 + 152);
    *(_OWORD *)((char *)v13 + 168) = *(_OWORD *)((char *)v14 + 168);
    *(_OWORD *)((char *)v13 + 184) = *(_OWORD *)((char *)v14 + 184);
    *((void *)v13 + 25) = *((void *)v14 + 25);
    *((_WORD *)v13 + 104) = *((_WORD *)v14 + 104);
    *(_OWORD *)((char *)v13 + 216) = *(_OWORD *)((char *)v14 + 216);
    long long v20 = (int *)type metadata accessor for RemoteIntentItemContent(0);
    uint64_t v21 = v20[16];
    long long v22 = (char *)v13 + v21;
    uint64_t v23 = (char *)v14 + v21;
    uint64_t v24 = sub_1A09F3478();
    uint64_t v25 = *(void *)(v24 - 8);
    uint64_t v235 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48);
    if (v235(v23, 1, v24))
    {
      uint64_t v26 = sub_1A07856F8((uint64_t *)&unk_1E94FAF20);
      memcpy(v22, v23, *(void *)(*(void *)(v26 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v22, v23, v24);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
    }
    uint64_t v27 = v20[17];
    uint64_t v28 = (char *)v13 + v27;
    uint64_t v29 = (char *)v14 + v27;
    *(void *)uint64_t v28 = *(void *)v29;
    v28[8] = v29[8];
    *(_OWORD *)((char *)v13 + v20[18]) = *(_OWORD *)((char *)v14 + v20[18]);
    *(_OWORD *)((char *)v13 + v20[19]) = *(_OWORD *)((char *)v14 + v20[19]);
    *(_OWORD *)((char *)v13 + v20[20]) = *(_OWORD *)((char *)v14 + v20[20]);
    *(_OWORD *)((char *)v13 + v20[21]) = *(_OWORD *)((char *)v14 + v20[21]);
    uint64_t v30 = v20[22];
    uint64_t v31 = (char *)v13 + v30;
    uint64_t v32 = (char *)v14 + v30;
    v31[8] = v32[8];
    *(void *)uint64_t v31 = *(void *)v32;
    *(_OWORD *)((char *)v13 + v20[23]) = *(_OWORD *)((char *)v14 + v20[23]);
    *(_OWORD *)((char *)v13 + v20[24]) = *(_OWORD *)((char *)v14 + v20[24]);
    *(_OWORD *)((char *)v13 + v20[25]) = *(_OWORD *)((char *)v14 + v20[25]);
    *(_OWORD *)((char *)v13 + v20[26]) = *(_OWORD *)((char *)v14 + v20[26]);
    *(void *)((char *)v13 + v20[27]) = *(void *)((char *)v14 + v20[27]);
    *(_OWORD *)((char *)v13 + v20[28]) = *(_OWORD *)((char *)v14 + v20[28]);
    uint64_t v33 = v20[29];
    uint64_t v34 = (char *)v13 + v33;
    uint64_t v35 = (char *)v14 + v33;
    if (v235((char *)v14 + v33, 1, v24))
    {
      uint64_t v36 = sub_1A07856F8((uint64_t *)&unk_1E94FAF20);
      memcpy(v34, v35, *(void *)(*(void *)(v36 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v34, v35, v24);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v34, 0, 1, v24);
    }
    uint64_t v37 = v20[30];
    uint64_t v38 = (char *)v13 + v37;
    uint64_t v39 = (char *)v14 + v37;
    if (v235((char *)v14 + v37, 1, v24))
    {
      uint64_t v40 = sub_1A07856F8((uint64_t *)&unk_1E94FAF20);
      memcpy(v38, v39, *(void *)(*(void *)(v40 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v38, v39, v24);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v38, 0, 1, v24);
    }
    uint64_t v41 = v20[31];
    uint64_t v42 = (char *)v13 + v41;
    uint64_t v43 = (char *)v14 + v41;
    if (v235((char *)v14 + v41, 1, v24))
    {
      uint64_t v44 = sub_1A07856F8((uint64_t *)&unk_1E94FAF20);
      memcpy(v42, v43, *(void *)(*(void *)(v44 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v42, v43, v24);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v42, 0, 1, v24);
    }
    uint64_t v45 = v20[32];
    uint64_t v46 = (char *)v13 + v45;
    uint64_t v47 = (char *)v14 + v45;
    *(void *)uint64_t v46 = *(void *)v47;
    v46[8] = v47[8];
    *((unsigned char *)v13 + v20[33]) = *((unsigned char *)v14 + v20[33]);
    *(_OWORD *)((char *)v13 + v20[34]) = *(_OWORD *)((char *)v14 + v20[34]);
    *(_OWORD *)((char *)v13 + v20[35]) = *(_OWORD *)((char *)v14 + v20[35]);
    uint64_t v48 = v20[36];
    uint64_t v49 = (char *)v13 + v48;
    uint64_t v50 = (char *)v14 + v48;
    uint64_t v233 = v24;
    uint64_t v230 = v16;
    if (v235((char *)v14 + v48, 1, v24))
    {
      uint64_t v51 = sub_1A07856F8((uint64_t *)&unk_1E94FAF20);
      memcpy(v49, v50, *(void *)(*(void *)(v51 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v49, v50, v24);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v49, 0, 1, v24);
    }
    uint64_t v52 = v20[37];
    uint64_t v53 = (char *)v13 + v52;
    uint64_t v54 = (char *)v14 + v52;
    *(void *)uint64_t v53 = *(void *)v54;
    v53[8] = v54[8];
    *(_OWORD *)((char *)v13 + v20[38]) = *(_OWORD *)((char *)v14 + v20[38]);
    uint64_t v55 = v20[39];
    uint64_t v56 = (_OWORD *)((char *)v13 + v55);
    uint64_t v57 = (_OWORD *)((char *)v14 + v55);
    uint64_t v58 = type metadata accessor for RemoteIntentMessageSummaryInfo();
    uint64_t v229 = *(void *)(v58 - 8);
    uint64_t v223 = *(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v229 + 48);
    uint64_t v234 = (int *)v58;
    if (v223(v57, 1, v58))
    {
      uint64_t v59 = sub_1A07856F8(&qword_1E94FBB10);
      memcpy(v56, v57, *(void *)(*(void *)(v59 - 8) + 64));
      uint64_t v60 = v233;
    }
    else
    {
      uint64_t v221 = v25;
      long long v61 = v57[1];
      *uint64_t v56 = *v57;
      v56[1] = v61;
      *((void *)v56 + 4) = *((void *)v57 + 4);
      *((unsigned char *)v56 + 40) = *((unsigned char *)v57 + 40);
      long long v62 = v57[4];
      v56[3] = v57[3];
      v56[4] = v62;
      long long v63 = v57[6];
      v56[5] = v57[5];
      v56[6] = v63;
      *((unsigned char *)v56 + 112) = *((unsigned char *)v57 + 112);
      *((unsigned char *)v56 + 113) = *((unsigned char *)v57 + 113);
      *(_OWORD *)((char *)v56 + 120) = *(_OWORD *)((char *)v57 + 120);
      *((unsigned char *)v56 + 136) = *((unsigned char *)v57 + 136);
      v56[9] = v57[9];
      uint64_t v64 = *(int *)(v58 + 64);
      __dst = (char *)v56 + v64;
      uint64_t v65 = (char *)v57 + v64;
      uint64_t v66 = sub_1A09F34B8();
      uint64_t v67 = *(void *)(v66 - 8);
      uint64_t v225 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v67 + 48);
      uint64_t v219 = v67;
      if (v225(v65, 1, v66))
      {
        uint64_t v68 = sub_1A07856F8(&qword_1E94FBB08);
        memcpy(__dst, v65, *(void *)(*(void *)(v68 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v67 + 32))(__dst, v65, v66);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v67 + 56))(__dst, 0, 1, v66);
      }
      uint64_t v69 = v234[17];
      uint64_t v70 = (char *)v56 + v69;
      uint64_t v71 = (char *)v57 + v69;
      if (v225((char *)v57 + v69, 1, v66))
      {
        uint64_t v72 = sub_1A07856F8(&qword_1E94FBB08);
        memcpy(v70, v71, *(void *)(*(void *)(v72 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v219 + 32))(v70, v71, v66);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v219 + 56))(v70, 0, 1, v66);
      }
      *(void *)((char *)v56 + v234[18]) = *(void *)((char *)v57 + v234[18]);
      uint64_t v73 = v234[19];
      uint64_t v74 = (char *)v56 + v73;
      uint64_t v75 = (char *)v57 + v73;
      if (v225((char *)v57 + v73, 1, v66))
      {
        uint64_t v76 = sub_1A07856F8(&qword_1E94FBB08);
        memcpy(v74, v75, *(void *)(*(void *)(v76 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v219 + 32))(v74, v75, v66);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v219 + 56))(v74, 0, 1, v66);
      }
      uint64_t v77 = v234[20];
      uint64_t v78 = (char *)v56 + v77;
      uint64_t v79 = (char *)v57 + v77;
      if (v225((char *)v57 + v77, 1, v66))
      {
        uint64_t v80 = sub_1A07856F8(&qword_1E94FBB08);
        memcpy(v78, v79, *(void *)(*(void *)(v80 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v219 + 32))(v78, v79, v66);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v219 + 56))(v78, 0, 1, v66);
      }
      *(void *)((char *)v56 + v234[21]) = *(void *)((char *)v57 + v234[21]);
      *(_OWORD *)((char *)v56 + v234[22]) = *(_OWORD *)((char *)v57 + v234[22]);
      *(_OWORD *)((char *)v56 + v234[23]) = *(_OWORD *)((char *)v57 + v234[23]);
      uint64_t v81 = v234[24];
      uint64_t v82 = (char *)v56 + v81;
      id v83 = (char *)v57 + v81;
      v82[8] = v83[8];
      *(void *)uint64_t v82 = *(void *)v83;
      uint64_t v84 = v234[25];
      uint64_t v85 = (char *)v56 + v84;
      uint64_t v86 = (char *)v57 + v84;
      *(void *)uint64_t v85 = *(void *)v86;
      v85[8] = v86[8];
      *((unsigned char *)v56 + v234[26]) = *((unsigned char *)v57 + v234[26]);
      uint64_t v87 = v234[27];
      uint64_t v88 = (char *)v56 + v87;
      uint64_t v89 = (char *)v57 + v87;
      if (v235((char *)v57 + v87, 1, v233))
      {
        uint64_t v90 = sub_1A07856F8((uint64_t *)&unk_1E94FAF20);
        memcpy(v88, v89, *(void *)(*(void *)(v90 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v221 + 32))(v88, v89, v233);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v221 + 56))(v88, 0, 1, v233);
      }
      *(void *)((char *)v56 + v234[28]) = *(void *)((char *)v57 + v234[28]);
      *(_OWORD *)((char *)v56 + v234[29]) = *(_OWORD *)((char *)v57 + v234[29]);
      *((unsigned char *)v56 + v234[30]) = *((unsigned char *)v57 + v234[30]);
      (*(void (**)(_OWORD *, void, uint64_t))(v229 + 56))(v56, 0, 1);
      uint64_t v60 = v233;
      uint64_t v25 = v221;
    }
    *(_OWORD *)((char *)v13 + v20[40]) = *(_OWORD *)((char *)v14 + v20[40]);
    *((unsigned char *)v13 + v20[41]) = *((unsigned char *)v14 + v20[41]);
    *(_OWORD *)((char *)v13 + v20[42]) = *(_OWORD *)((char *)v14 + v20[42]);
    *((unsigned char *)v13 + v20[43]) = *((unsigned char *)v14 + v20[43]);
    *((unsigned char *)v13 + v20[44]) = *((unsigned char *)v14 + v20[44]);
    *((unsigned char *)v13 + v20[45]) = *((unsigned char *)v14 + v20[45]);
    *((unsigned char *)v13 + v20[46]) = *((unsigned char *)v14 + v20[46]);
    *(_OWORD *)((char *)v13 + v20[47]) = *(_OWORD *)((char *)v14 + v20[47]);
    *(_OWORD *)((char *)v13 + v20[48]) = *(_OWORD *)((char *)v14 + v20[48]);
    *(void *)((char *)v13 + v20[49]) = *(void *)((char *)v14 + v20[49]);
    *(_OWORD *)((char *)v13 + v20[50]) = *(_OWORD *)((char *)v14 + v20[50]);
    *(_OWORD *)((char *)v13 + v20[51]) = *(_OWORD *)((char *)v14 + v20[51]);
    uint64_t v91 = v20[52];
    uint64_t v92 = (char *)v13 + v91;
    unint64_t v93 = (char *)v14 + v91;
    if (v235((char *)v14 + v91, 1, v60))
    {
      uint64_t v94 = sub_1A07856F8((uint64_t *)&unk_1E94FAF20);
      memcpy(v92, v93, *(void *)(*(void *)(v94 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v92, v93, v60);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v92, 0, 1, v60);
    }
    uint64_t v95 = v232;
    uint64_t v96 = v20[53];
    uint64_t v97 = (char *)v13 + v96;
    uint64_t v98 = (char *)v14 + v96;
    *(void *)uint64_t v97 = *(void *)v98;
    v97[8] = v98[8];
    uint64_t v99 = v20[54];
    uint64_t v100 = (char *)v13 + v99;
    uint64_t v101 = (char *)v14 + v99;
    v100[8] = v101[8];
    *(void *)uint64_t v100 = *(void *)v101;
    *(_OWORD *)((char *)v13 + v20[55]) = *(_OWORD *)((char *)v14 + v20[55]);
    *((unsigned char *)v13 + v20[56]) = *((unsigned char *)v14 + v20[56]);
    *((unsigned char *)v13 + v20[57]) = *((unsigned char *)v14 + v20[57]);
    *(_OWORD *)((char *)v13 + v20[58]) = *(_OWORD *)((char *)v14 + v20[58]);
    *(_OWORD *)((char *)v13 + v20[59]) = *(_OWORD *)((char *)v14 + v20[59]);
    *(_OWORD *)((char *)v13 + v20[60]) = *(_OWORD *)((char *)v14 + v20[60]);
    uint64_t v102 = v20[61];
    uint64_t v103 = (char *)v13 + v102;
    uint64_t v104 = (char *)v14 + v102;
    v103[8] = v104[8];
    *(void *)uint64_t v103 = *(void *)v104;
    *(_OWORD *)((char *)v13 + v20[62]) = *(_OWORD *)((char *)v14 + v20[62]);
    uint64_t v105 = v20[63];
    uint64_t v106 = (char *)v13 + v105;
    uint64_t v107 = (char *)v14 + v105;
    *(_DWORD *)uint64_t v106 = *(_DWORD *)v107;
    v106[4] = v107[4];
    *(_OWORD *)((char *)v13 + v20[64]) = *(_OWORD *)((char *)v14 + v20[64]);
    uint64_t v108 = v20[65];
    unint64_t v109 = (char *)v13 + v108;
    uint64_t v110 = (char *)v14 + v108;
    *(void *)unint64_t v109 = *(void *)v110;
    v109[8] = v110[8];
    uint64_t v111 = v20[66];
    uint64_t v112 = (char *)v13 + v111;
    uint64_t v113 = (char *)v14 + v111;
    *(_OWORD *)uint64_t v112 = *(_OWORD *)v113;
    v112[16] = v113[16];
    *(_OWORD *)((char *)v13 + v20[67]) = *(_OWORD *)((char *)v14 + v20[67]);
    *(void *)((char *)v13 + v20[68]) = *(void *)((char *)v14 + v20[68]);
    *(_OWORD *)((char *)v13 + v20[69]) = *(_OWORD *)((char *)v14 + v20[69]);
    *((unsigned char *)v13 + v20[70]) = *((unsigned char *)v14 + v20[70]);
    *((unsigned char *)v13 + v20[71]) = *((unsigned char *)v14 + v20[71]);
    *((unsigned char *)v13 + v20[72]) = *((unsigned char *)v14 + v20[72]);
    uint64_t v114 = v20[73];
    uint64_t v115 = (char *)v13 + v114;
    unint64_t v116 = (char *)v14 + v114;
    *(void *)uint64_t v115 = *(void *)v116;
    v115[8] = v116[8];
    uint64_t v117 = *(int *)(v232 + 20);
    long long v118 = (_OWORD *)((char *)v13 + v117);
    long long v119 = (_OWORD *)((char *)v14 + v117);
    uint64_t v120 = *((void *)v20 - 1);
    if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v120 + 48))(v119, 1, v20))
    {
      uint64_t v121 = sub_1A07856F8(&qword_1E94FBB18);
      memcpy(v118, v119, *(void *)(*(void *)(v121 - 8) + 64));
      uint64_t v122 = v230;
      uint64_t v3 = v231;
    }
    else
    {
      uint64_t v226 = v120;
      long long v123 = v119[3];
      _OWORD v118[2] = v119[2];
      v118[3] = v123;
      *((unsigned char *)v118 + 64) = *((unsigned char *)v119 + 64);
      long long v124 = v119[1];
      *long long v118 = *v119;
      v118[1] = v124;
      *(_OWORD *)((char *)v118 + 72) = *(_OWORD *)((char *)v119 + 72);
      *(_OWORD *)((char *)v118 + 88) = *(_OWORD *)((char *)v119 + 88);
      *(_OWORD *)((char *)v118 + 104) = *(_OWORD *)((char *)v119 + 104);
      *(_OWORD *)((char *)v118 + 120) = *(_OWORD *)((char *)v119 + 120);
      *(_OWORD *)((char *)v118 + 136) = *(_OWORD *)((char *)v119 + 136);
      *(_OWORD *)((char *)v118 + 152) = *(_OWORD *)((char *)v119 + 152);
      *(_OWORD *)((char *)v118 + 168) = *(_OWORD *)((char *)v119 + 168);
      *(_OWORD *)((char *)v118 + 184) = *(_OWORD *)((char *)v119 + 184);
      *((void *)v118 + 25) = *((void *)v119 + 25);
      *((_WORD *)v118 + 104) = *((_WORD *)v119 + 104);
      *(_OWORD *)((char *)v118 + 216) = *(_OWORD *)((char *)v119 + 216);
      uint64_t v125 = v20[16];
      uint64_t v126 = (char *)v118 + v125;
      uint64_t v127 = (char *)v119 + v125;
      if (v235((char *)v119 + v125, 1, v233))
      {
        uint64_t v128 = sub_1A07856F8((uint64_t *)&unk_1E94FAF20);
        memcpy(v126, v127, *(void *)(*(void *)(v128 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v126, v127, v233);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v126, 0, 1, v233);
      }
      uint64_t v129 = v20[17];
      uint64_t v130 = (char *)v118 + v129;
      char v131 = (char *)v119 + v129;
      *(void *)uint64_t v130 = *(void *)v131;
      v130[8] = v131[8];
      *(_OWORD *)((char *)v118 + v20[18]) = *(_OWORD *)((char *)v119 + v20[18]);
      *(_OWORD *)((char *)v118 + v20[19]) = *(_OWORD *)((char *)v119 + v20[19]);
      *(_OWORD *)((char *)v118 + v20[20]) = *(_OWORD *)((char *)v119 + v20[20]);
      *(_OWORD *)((char *)v118 + v20[21]) = *(_OWORD *)((char *)v119 + v20[21]);
      uint64_t v132 = v20[22];
      uint64_t v133 = (char *)v118 + v132;
      unsigned int v134 = (char *)v119 + v132;
      v133[8] = v134[8];
      *(void *)uint64_t v133 = *(void *)v134;
      *(_OWORD *)((char *)v118 + v20[23]) = *(_OWORD *)((char *)v119 + v20[23]);
      *(_OWORD *)((char *)v118 + v20[24]) = *(_OWORD *)((char *)v119 + v20[24]);
      *(_OWORD *)((char *)v118 + v20[25]) = *(_OWORD *)((char *)v119 + v20[25]);
      *(_OWORD *)((char *)v118 + v20[26]) = *(_OWORD *)((char *)v119 + v20[26]);
      *(void *)((char *)v118 + v20[27]) = *(void *)((char *)v119 + v20[27]);
      *(_OWORD *)((char *)v118 + v20[28]) = *(_OWORD *)((char *)v119 + v20[28]);
      uint64_t v135 = v20[29];
      uint64_t v136 = (char *)v118 + v135;
      uint64_t v137 = (char *)v119 + v135;
      if (v235((char *)v119 + v135, 1, v233))
      {
        uint64_t v138 = sub_1A07856F8((uint64_t *)&unk_1E94FAF20);
        memcpy(v136, v137, *(void *)(*(void *)(v138 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v136, v137, v233);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v136, 0, 1, v233);
      }
      uint64_t v139 = v20[30];
      uint64_t v140 = (char *)v118 + v139;
      uint64_t v141 = (char *)v119 + v139;
      if (v235((char *)v119 + v139, 1, v233))
      {
        uint64_t v142 = sub_1A07856F8((uint64_t *)&unk_1E94FAF20);
        memcpy(v140, v141, *(void *)(*(void *)(v142 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v140, v141, v233);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v140, 0, 1, v233);
      }
      uint64_t v143 = v20[31];
      uint64_t v144 = (char *)v118 + v143;
      uint64_t v145 = (char *)v119 + v143;
      if (v235((char *)v119 + v143, 1, v233))
      {
        uint64_t v146 = sub_1A07856F8((uint64_t *)&unk_1E94FAF20);
        memcpy(v144, v145, *(void *)(*(void *)(v146 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v144, v145, v233);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v144, 0, 1, v233);
      }
      uint64_t v147 = v20[32];
      uint64_t v148 = (char *)v118 + v147;
      uint64_t v149 = (char *)v119 + v147;
      *(void *)uint64_t v148 = *(void *)v149;
      v148[8] = v149[8];
      *((unsigned char *)v118 + v20[33]) = *((unsigned char *)v119 + v20[33]);
      *(_OWORD *)((char *)v118 + v20[34]) = *(_OWORD *)((char *)v119 + v20[34]);
      *(_OWORD *)((char *)v118 + v20[35]) = *(_OWORD *)((char *)v119 + v20[35]);
      uint64_t v150 = v20[36];
      unsigned int v151 = (char *)v118 + v150;
      uint64_t v152 = (char *)v119 + v150;
      if (v235((char *)v119 + v150, 1, v233))
      {
        uint64_t v153 = sub_1A07856F8((uint64_t *)&unk_1E94FAF20);
        memcpy(v151, v152, *(void *)(*(void *)(v153 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v151, v152, v233);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v151, 0, 1, v233);
      }
      uint64_t v154 = v20[37];
      uint64_t v155 = (char *)v118 + v154;
      uint64_t v156 = (char *)v119 + v154;
      *(void *)uint64_t v155 = *(void *)v156;
      v155[8] = v156[8];
      *(_OWORD *)((char *)v118 + v20[38]) = *(_OWORD *)((char *)v119 + v20[38]);
      uint64_t v157 = v20[39];
      uint64_t v158 = (_OWORD *)((char *)v118 + v157);
      uint64_t v159 = (_OWORD *)((char *)v119 + v157);
      if (v223((_OWORD *)((char *)v119 + v157), 1, (uint64_t)v234))
      {
        uint64_t v160 = sub_1A07856F8(&qword_1E94FBB10);
        memcpy(v158, v159, *(void *)(*(void *)(v160 - 8) + 64));
      }
      else
      {
        uint64_t v222 = v25;
        long long v161 = v159[1];
        *uint64_t v158 = *v159;
        v158[1] = v161;
        *((void *)v158 + 4) = *((void *)v159 + 4);
        *((unsigned char *)v158 + 40) = *((unsigned char *)v159 + 40);
        long long v162 = v159[4];
        v158[3] = v159[3];
        v158[4] = v162;
        long long v163 = v159[6];
        v158[5] = v159[5];
        v158[6] = v163;
        *((unsigned char *)v158 + 112) = *((unsigned char *)v159 + 112);
        *((unsigned char *)v158 + 113) = *((unsigned char *)v159 + 113);
        *(_OWORD *)((char *)v158 + 120) = *(_OWORD *)((char *)v159 + 120);
        *((unsigned char *)v158 + 136) = *((unsigned char *)v159 + 136);
        v158[9] = v159[9];
        uint64_t v164 = v234[16];
        __dsta = (char *)v158 + v164;
        unint64_t v165 = (char *)v159 + v164;
        uint64_t v166 = sub_1A09F34B8();
        uint64_t v167 = *(void *)(v166 - 8);
        uint64_t v227 = (void *)v166;
        uint64_t v224 = *(unsigned int (**)(char *, uint64_t))(v167 + 48);
        uint64_t v220 = v167;
        if (v224(v165, 1))
        {
          uint64_t v168 = sub_1A07856F8(&qword_1E94FBB08);
          memcpy(__dsta, v165, *(void *)(*(void *)(v168 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, void *))(v167 + 32))(__dsta, v165, v227);
          (*(void (**)(char *, void, uint64_t, void *))(v167 + 56))(__dsta, 0, 1, v227);
        }
        uint64_t v169 = v234[17];
        unint64_t v170 = (char *)v158 + v169;
        uint64_t v171 = (char *)v159 + v169;
        if (((unsigned int (*)(char *, uint64_t, void *))v224)((char *)v159 + v169, 1, v227))
        {
          uint64_t v172 = sub_1A07856F8(&qword_1E94FBB08);
          memcpy(v170, v171, *(void *)(*(void *)(v172 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, void *))(v220 + 32))(v170, v171, v227);
          (*(void (**)(char *, void, uint64_t, void *))(v220 + 56))(v170, 0, 1, v227);
        }
        *(void *)((char *)v158 + v234[18]) = *(void *)((char *)v159 + v234[18]);
        uint64_t v173 = v234[19];
        uint64_t v174 = (char *)v158 + v173;
        uint64_t v175 = (char *)v159 + v173;
        if (((unsigned int (*)(char *, uint64_t, void *))v224)((char *)v159 + v173, 1, v227))
        {
          uint64_t v176 = sub_1A07856F8(&qword_1E94FBB08);
          memcpy(v174, v175, *(void *)(*(void *)(v176 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, void *))(v220 + 32))(v174, v175, v227);
          (*(void (**)(char *, void, uint64_t, void *))(v220 + 56))(v174, 0, 1, v227);
        }
        uint64_t v177 = v234[20];
        uint64_t v178 = (char *)v158 + v177;
        uint64_t v179 = (char *)v159 + v177;
        if (((unsigned int (*)(char *, uint64_t, void *))v224)((char *)v159 + v177, 1, v227))
        {
          uint64_t v180 = sub_1A07856F8(&qword_1E94FBB08);
          memcpy(v178, v179, *(void *)(*(void *)(v180 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, void *))(v220 + 32))(v178, v179, v227);
          (*(void (**)(char *, void, uint64_t, void *))(v220 + 56))(v178, 0, 1, v227);
        }
        *(void *)((char *)v158 + v234[21]) = *(void *)((char *)v159 + v234[21]);
        *(_OWORD *)((char *)v158 + v234[22]) = *(_OWORD *)((char *)v159 + v234[22]);
        *(_OWORD *)((char *)v158 + v234[23]) = *(_OWORD *)((char *)v159 + v234[23]);
        uint64_t v181 = v234[24];
        uint64_t v182 = (char *)v158 + v181;
        v183 = (char *)v159 + v181;
        v182[8] = v183[8];
        *(void *)uint64_t v182 = *(void *)v183;
        uint64_t v184 = v234[25];
        unsigned int v185 = (char *)v158 + v184;
        unsigned int v186 = (char *)v159 + v184;
        *(void *)unsigned int v185 = *(void *)v186;
        v185[8] = v186[8];
        *((unsigned char *)v158 + v234[26]) = *((unsigned char *)v159 + v234[26]);
        uint64_t v187 = v234[27];
        unint64_t v228 = (char *)v158 + v187;
        uint64_t v188 = (char *)v159 + v187;
        if (v235((char *)v159 + v187, 1, v233))
        {
          uint64_t v189 = sub_1A07856F8((uint64_t *)&unk_1E94FAF20);
          memcpy(v228, v188, *(void *)(*(void *)(v189 - 8) + 64));
          uint64_t v25 = v222;
        }
        else
        {
          uint64_t v190 = v188;
          uint64_t v25 = v222;
          (*(void (**)(char *, char *, uint64_t))(v222 + 32))(v228, v190, v233);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v222 + 56))(v228, 0, 1, v233);
        }
        *(void *)((char *)v158 + v234[28]) = *(void *)((char *)v159 + v234[28]);
        *(_OWORD *)((char *)v158 + v234[29]) = *(_OWORD *)((char *)v159 + v234[29]);
        *((unsigned char *)v158 + v234[30]) = *((unsigned char *)v159 + v234[30]);
        (*(void (**)(_OWORD *, void, uint64_t))(v229 + 56))(v158, 0, 1);
      }
      *(_OWORD *)((char *)v118 + v20[40]) = *(_OWORD *)((char *)v119 + v20[40]);
      *((unsigned char *)v118 + v20[41]) = *((unsigned char *)v119 + v20[41]);
      *(_OWORD *)((char *)v118 + v20[42]) = *(_OWORD *)((char *)v119 + v20[42]);
      *((unsigned char *)v118 + v20[43]) = *((unsigned char *)v119 + v20[43]);
      *((unsigned char *)v118 + v20[44]) = *((unsigned char *)v119 + v20[44]);
      *((unsigned char *)v118 + v20[45]) = *((unsigned char *)v119 + v20[45]);
      *((unsigned char *)v118 + v20[46]) = *((unsigned char *)v119 + v20[46]);
      *(_OWORD *)((char *)v118 + v20[47]) = *(_OWORD *)((char *)v119 + v20[47]);
      *(_OWORD *)((char *)v118 + v20[48]) = *(_OWORD *)((char *)v119 + v20[48]);
      *(void *)((char *)v118 + v20[49]) = *(void *)((char *)v119 + v20[49]);
      *(_OWORD *)((char *)v118 + v20[50]) = *(_OWORD *)((char *)v119 + v20[50]);
      *(_OWORD *)((char *)v118 + v20[51]) = *(_OWORD *)((char *)v119 + v20[51]);
      uint64_t v191 = v20[52];
      unsigned int v192 = (char *)v118 + v191;
      uint64_t v193 = (char *)v119 + v191;
      if (v235((char *)v119 + v191, 1, v233))
      {
        uint64_t v194 = sub_1A07856F8((uint64_t *)&unk_1E94FAF20);
        memcpy(v192, v193, *(void *)(*(void *)(v194 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v192, v193, v233);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v192, 0, 1, v233);
      }
      uint64_t v195 = v20[53];
      v196 = (char *)v118 + v195;
      unsigned int v197 = (char *)v119 + v195;
      *(void *)v196 = *(void *)v197;
      v196[8] = v197[8];
      uint64_t v198 = v20[54];
      uint64_t v199 = (char *)v118 + v198;
      uint64_t v200 = (char *)v119 + v198;
      v199[8] = v200[8];
      *(void *)uint64_t v199 = *(void *)v200;
      *(_OWORD *)((char *)v118 + v20[55]) = *(_OWORD *)((char *)v119 + v20[55]);
      *((unsigned char *)v118 + v20[56]) = *((unsigned char *)v119 + v20[56]);
      *((unsigned char *)v118 + v20[57]) = *((unsigned char *)v119 + v20[57]);
      *(_OWORD *)((char *)v118 + v20[58]) = *(_OWORD *)((char *)v119 + v20[58]);
      *(_OWORD *)((char *)v118 + v20[59]) = *(_OWORD *)((char *)v119 + v20[59]);
      *(_OWORD *)((char *)v118 + v20[60]) = *(_OWORD *)((char *)v119 + v20[60]);
      uint64_t v201 = v20[61];
      uint64_t v202 = (char *)v118 + v201;
      uint64_t v203 = (char *)v119 + v201;
      v202[8] = v203[8];
      *(void *)uint64_t v202 = *(void *)v203;
      *(_OWORD *)((char *)v118 + v20[62]) = *(_OWORD *)((char *)v119 + v20[62]);
      uint64_t v204 = v20[63];
      uint64_t v205 = (char *)v118 + v204;
      uint64_t v206 = (char *)v119 + v204;
      *(_DWORD *)uint64_t v205 = *(_DWORD *)v206;
      v205[4] = v206[4];
      *(_OWORD *)((char *)v118 + v20[64]) = *(_OWORD *)((char *)v119 + v20[64]);
      uint64_t v207 = v20[65];
      uint64_t v208 = (char *)v118 + v207;
      uint64_t v209 = (char *)v119 + v207;
      *(void *)uint64_t v208 = *(void *)v209;
      v208[8] = v209[8];
      uint64_t v210 = v20[66];
      unint64_t v211 = (char *)v118 + v210;
      uint64_t v212 = (char *)v119 + v210;
      *(_OWORD *)unint64_t v211 = *(_OWORD *)v212;
      v211[16] = v212[16];
      *(_OWORD *)((char *)v118 + v20[67]) = *(_OWORD *)((char *)v119 + v20[67]);
      *(void *)((char *)v118 + v20[68]) = *(void *)((char *)v119 + v20[68]);
      *(_OWORD *)((char *)v118 + v20[69]) = *(_OWORD *)((char *)v119 + v20[69]);
      *((unsigned char *)v118 + v20[70]) = *((unsigned char *)v119 + v20[70]);
      *((unsigned char *)v118 + v20[71]) = *((unsigned char *)v119 + v20[71]);
      *((unsigned char *)v118 + v20[72]) = *((unsigned char *)v119 + v20[72]);
      uint64_t v213 = v20[73];
      uint64_t v214 = (char *)v118 + v213;
      uint64_t v215 = (char *)v119 + v213;
      v214[8] = v215[8];
      *(void *)uint64_t v214 = *(void *)v215;
      (*(void (**)(_OWORD *, void, uint64_t, int *))(v226 + 56))(v118, 0, 1, v20);
      uint64_t v122 = v230;
      uint64_t v3 = v231;
      uint64_t v95 = v232;
    }
    (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v122 + 56))(v13, 0, 1, v95);
  }
  *(void *)(a1 + *(int *)(v3 + 140)) = *(void *)(a2 + *(int *)(v3 + 140));
  return a1;
}

uint64_t sub_1A0902A60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v8;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  uint64_t v9 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v10;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
  uint64_t v11 = *(void *)(a2 + 160);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = v11;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(_DWORD *)(a1 + 176) = *(_DWORD *)(a2 + 176);
  uint64_t v12 = *(void *)(a2 + 192);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(void *)(a1 + 192) = v12;
  swift_bridgeObjectRelease();
  uint64_t v13 = *(void *)(a2 + 208);
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  *(void *)(a1 + 208) = v13;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 216) = *(unsigned char *)(a2 + 216);
  uint64_t v14 = *(void *)(a2 + 232);
  *(void *)(a1 + 224) = *(void *)(a2 + 224);
  *(void *)(a1 + 232) = v14;
  swift_bridgeObjectRelease();
  uint64_t v15 = *(void *)(a2 + 248);
  *(void *)(a1 + 240) = *(void *)(a2 + 240);
  *(void *)(a1 + 248) = v15;
  swift_bridgeObjectRelease();
  uint64_t v16 = *(void *)(a2 + 264);
  *(void *)(a1 + 256) = *(void *)(a2 + 256);
  *(void *)(a1 + 264) = v16;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 272) = *(void *)(a2 + 272);
  *(unsigned char *)(a1 + 280) = *(unsigned char *)(a2 + 280);
  *(_WORD *)(a1 + 281) = *(_WORD *)(a2 + 281);
  *(void *)(a1 + 288) = *(void *)(a2 + 288);
  *(_WORD *)(a1 + 296) = *(_WORD *)(a2 + 296);
  uint64_t v17 = *(void *)(a2 + 312);
  *(void *)(a1 + 304) = *(void *)(a2 + 304);
  *(void *)(a1 + 312) = v17;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 320) = *(void *)(a2 + 320);
  *(unsigned char *)(a1 + 328) = *(unsigned char *)(a2 + 328);
  uint64_t v18 = *(int *)(a3 + 136);
  uint64_t v19 = a1 + v18;
  uint64_t v20 = a2 + v18;
  uint64_t v21 = type metadata accessor for RemoteIntentMessageItem(0);
  long long v22 = *(void **)(v21 - 8);
  uint64_t v23 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v22[6];
  int v24 = v23(v19, 1, v21);
  int v25 = v23(v20, 1, v21);
  if (v24)
  {
    if (!v25)
    {
      uint64_t v1025 = a3;
      v1027 = (int *)v21;
      long long v26 = *(_OWORD *)(v20 + 48);
      *(_OWORD *)(v19 + 32) = *(_OWORD *)(v20 + 32);
      *(_OWORD *)(v19 + 48) = v26;
      *(unsigned char *)(v19 + 64) = *(unsigned char *)(v20 + 64);
      long long v27 = *(_OWORD *)(v20 + 16);
      *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
      *(_OWORD *)(v19 + 16) = v27;
      *(_OWORD *)(v19 + 72) = *(_OWORD *)(v20 + 72);
      *(_OWORD *)(v19 + 88) = *(_OWORD *)(v20 + 88);
      *(_OWORD *)(v19 + 104) = *(_OWORD *)(v20 + 104);
      *(_OWORD *)(v19 + 120) = *(_OWORD *)(v20 + 120);
      *(_OWORD *)(v19 + 136) = *(_OWORD *)(v20 + 136);
      *(_OWORD *)(v19 + 152) = *(_OWORD *)(v20 + 152);
      *(_OWORD *)(v19 + 168) = *(_OWORD *)(v20 + 168);
      *(_OWORD *)(v19 + 184) = *(_OWORD *)(v20 + 184);
      *(void *)(v19 + 200) = *(void *)(v20 + 200);
      *(_WORD *)(v19 + 208) = *(_WORD *)(v20 + 208);
      *(_OWORD *)(v19 + 216) = *(_OWORD *)(v20 + 216);
      uint64_t v28 = (int *)type metadata accessor for RemoteIntentItemContent(0);
      uint64_t v29 = v28[16];
      uint64_t v30 = (void *)(v19 + v29);
      uint64_t v31 = (const void *)(v20 + v29);
      uint64_t v32 = sub_1A09F3478();
      uint64_t v33 = *(void *)(v32 - 8);
      uint64_t v1034 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v33 + 48);
      uint64_t v1032 = v33;
      if (v1034(v31, 1, v32))
      {
        uint64_t v34 = sub_1A07856F8((uint64_t *)&unk_1E94FAF20);
        memcpy(v30, v31, *(void *)(*(void *)(v34 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v33 + 32))(v30, v31, v32);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
      }
      uint64_t v39 = v28[17];
      uint64_t v40 = v19 + v39;
      uint64_t v41 = v20 + v39;
      *(void *)uint64_t v40 = *(void *)v41;
      *(unsigned char *)(v40 + 8) = *(unsigned char *)(v41 + 8);
      *(_OWORD *)(v19 + v28[18]) = *(_OWORD *)(v20 + v28[18]);
      *(_OWORD *)(v19 + v28[19]) = *(_OWORD *)(v20 + v28[19]);
      *(_OWORD *)(v19 + v28[20]) = *(_OWORD *)(v20 + v28[20]);
      *(_OWORD *)(v19 + v28[21]) = *(_OWORD *)(v20 + v28[21]);
      uint64_t v42 = v28[22];
      uint64_t v43 = v19 + v42;
      uint64_t v44 = v20 + v42;
      *(unsigned char *)(v43 + 8) = *(unsigned char *)(v44 + 8);
      *(void *)uint64_t v43 = *(void *)v44;
      *(_OWORD *)(v19 + v28[23]) = *(_OWORD *)(v20 + v28[23]);
      *(_OWORD *)(v19 + v28[24]) = *(_OWORD *)(v20 + v28[24]);
      *(_OWORD *)(v19 + v28[25]) = *(_OWORD *)(v20 + v28[25]);
      *(_OWORD *)(v19 + v28[26]) = *(_OWORD *)(v20 + v28[26]);
      *(void *)(v19 + v28[27]) = *(void *)(v20 + v28[27]);
      *(_OWORD *)(v19 + v28[28]) = *(_OWORD *)(v20 + v28[28]);
      uint64_t v45 = v28[29];
      uint64_t v46 = (void *)(v19 + v45);
      uint64_t v47 = (const void *)(v20 + v45);
      if (v1034((const void *)(v20 + v45), 1, v32))
      {
        uint64_t v48 = sub_1A07856F8((uint64_t *)&unk_1E94FAF20);
        memcpy(v46, v47, *(void *)(*(void *)(v48 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v33 + 32))(v46, v47, v32);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v33 + 56))(v46, 0, 1, v32);
      }
      uint64_t v49 = v28[30];
      uint64_t v50 = (void *)(v19 + v49);
      uint64_t v51 = (const void *)(v20 + v49);
      if (v1034((const void *)(v20 + v49), 1, v32))
      {
        uint64_t v52 = sub_1A07856F8((uint64_t *)&unk_1E94FAF20);
        memcpy(v50, v51, *(void *)(*(void *)(v52 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v33 + 32))(v50, v51, v32);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v33 + 56))(v50, 0, 1, v32);
      }
      uint64_t v53 = v28[31];
      uint64_t v54 = (void *)(v19 + v53);
      uint64_t v55 = (const void *)(v20 + v53);
      if (v1034((const void *)(v20 + v53), 1, v32))
      {
        uint64_t v56 = sub_1A07856F8((uint64_t *)&unk_1E94FAF20);
        memcpy(v54, v55, *(void *)(*(void *)(v56 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v33 + 32))(v54, v55, v32);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v33 + 56))(v54, 0, 1, v32);
      }
      uint64_t v57 = v28[32];
      uint64_t v58 = v19 + v57;
      uint64_t v59 = v20 + v57;
      *(void *)uint64_t v58 = *(void *)v59;
      *(unsigned char *)(v58 + 8) = *(unsigned char *)(v59 + 8);
      *(unsigned char *)(v19 + v28[33]) = *(unsigned char *)(v20 + v28[33]);
      *(_OWORD *)(v19 + v28[34]) = *(_OWORD *)(v20 + v28[34]);
      *(_OWORD *)(v19 + v28[35]) = *(_OWORD *)(v20 + v28[35]);
      uint64_t v60 = v28[36];
      long long v61 = (void *)(v19 + v60);
      long long v62 = (const void *)(v20 + v60);
      __src = (void (**)(uint64_t, void, uint64_t, int *))v22;
      uint64_t v1023 = v32;
      if (v1034((const void *)(v20 + v60), 1, v32))
      {
        uint64_t v63 = sub_1A07856F8((uint64_t *)&unk_1E94FAF20);
        memcpy(v61, v62, *(void *)(*(void *)(v63 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v33 + 32))(v61, v62, v32);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v33 + 56))(v61, 0, 1, v32);
      }
      uint64_t v64 = v28[37];
      uint64_t v65 = v19 + v64;
      uint64_t v66 = v20 + v64;
      *(void *)uint64_t v65 = *(void *)v66;
      *(unsigned char *)(v65 + 8) = *(unsigned char *)(v66 + 8);
      *(_OWORD *)(v19 + v28[38]) = *(_OWORD *)(v20 + v28[38]);
      uint64_t v67 = v28[39];
      uint64_t v68 = (_OWORD *)(v19 + v67);
      uint64_t v69 = (_OWORD *)(v20 + v67);
      uint64_t v70 = type metadata accessor for RemoteIntentMessageSummaryInfo();
      uint64_t v1017 = *(void *)(v70 - 8);
      uint64_t v1000 = *(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v1017 + 48);
      v1030 = (int *)v70;
      if (v1000(v69, 1, v70))
      {
        uint64_t v71 = sub_1A07856F8(&qword_1E94FBB10);
        memcpy(v68, v69, *(void *)(*(void *)(v71 - 8) + 64));
      }
      else
      {
        long long v72 = v69[1];
        *uint64_t v68 = *v69;
        v68[1] = v72;
        *((void *)v68 + 4) = *((void *)v69 + 4);
        *((unsigned char *)v68 + 40) = *((unsigned char *)v69 + 40);
        long long v73 = v69[4];
        v68[3] = v69[3];
        v68[4] = v73;
        long long v74 = v69[6];
        v68[5] = v69[5];
        v68[6] = v74;
        *((unsigned char *)v68 + 112) = *((unsigned char *)v69 + 112);
        *((unsigned char *)v68 + 113) = *((unsigned char *)v69 + 113);
        *(_OWORD *)((char *)v68 + 120) = *(_OWORD *)((char *)v69 + 120);
        *((unsigned char *)v68 + 136) = *((unsigned char *)v69 + 136);
        v68[9] = v69[9];
        uint64_t v75 = *(int *)(v70 + 64);
        __dst = (char *)v68 + v75;
        uint64_t v76 = (char *)v69 + v75;
        uint64_t v77 = sub_1A09F34B8();
        uint64_t v78 = *(void *)(v77 - 8);
        v1007 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v78 + 48);
        uint64_t v994 = (void (**)(void *, const void *, uint64_t))v78;
        if (v1007(v76, 1, v77))
        {
          uint64_t v79 = sub_1A07856F8(&qword_1E94FBB08);
          memcpy(__dst, v76, *(void *)(*(void *)(v79 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v78 + 32))(__dst, v76, v77);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v78 + 56))(__dst, 0, 1, v77);
        }
        uint64_t v218 = v1030[17];
        uint64_t v219 = (char *)v68 + v218;
        uint64_t v220 = (char *)v69 + v218;
        if (v1007((char *)v69 + v218, 1, v77))
        {
          uint64_t v221 = sub_1A07856F8(&qword_1E94FBB08);
          memcpy(v219, v220, *(void *)(*(void *)(v221 - 8) + 64));
        }
        else
        {
          v994[4](v219, v220, v77);
          ((void (*)(char *, void, uint64_t, uint64_t))v994[7])(v219, 0, 1, v77);
        }
        *(void *)((char *)v68 + v1030[18]) = *(void *)((char *)v69 + v1030[18]);
        uint64_t v222 = v1030[19];
        uint64_t v223 = (char *)v68 + v222;
        uint64_t v224 = (char *)v69 + v222;
        if (v1007((char *)v69 + v222, 1, v77))
        {
          uint64_t v225 = sub_1A07856F8(&qword_1E94FBB08);
          memcpy(v223, v224, *(void *)(*(void *)(v225 - 8) + 64));
        }
        else
        {
          v994[4](v223, v224, v77);
          ((void (*)(char *, void, uint64_t, uint64_t))v994[7])(v223, 0, 1, v77);
        }
        uint64_t v226 = v1030[20];
        uint64_t v227 = (char *)v68 + v226;
        unint64_t v228 = (char *)v69 + v226;
        if (v1007((char *)v69 + v226, 1, v77))
        {
          uint64_t v229 = sub_1A07856F8(&qword_1E94FBB08);
          memcpy(v227, v228, *(void *)(*(void *)(v229 - 8) + 64));
        }
        else
        {
          v994[4](v227, v228, v77);
          ((void (*)(char *, void, uint64_t, uint64_t))v994[7])(v227, 0, 1, v77);
        }
        *(void *)((char *)v68 + v1030[21]) = *(void *)((char *)v69 + v1030[21]);
        *(_OWORD *)((char *)v68 + v1030[22]) = *(_OWORD *)((char *)v69 + v1030[22]);
        *(_OWORD *)((char *)v68 + v1030[23]) = *(_OWORD *)((char *)v69 + v1030[23]);
        uint64_t v230 = v1030[24];
        uint64_t v231 = (char *)v68 + v230;
        uint64_t v232 = (char *)v69 + v230;
        v231[8] = v232[8];
        *(void *)uint64_t v231 = *(void *)v232;
        uint64_t v233 = v1030[25];
        uint64_t v234 = (char *)v68 + v233;
        uint64_t v235 = (char *)v69 + v233;
        *(void *)uint64_t v234 = *(void *)v235;
        v234[8] = v235[8];
        *((unsigned char *)v68 + v1030[26]) = *((unsigned char *)v69 + v1030[26]);
        uint64_t v236 = v1030[27];
        v237 = (char *)v68 + v236;
        int v238 = (char *)v69 + v236;
        if (v1034((char *)v69 + v236, 1, v1023))
        {
          uint64_t v239 = sub_1A07856F8((uint64_t *)&unk_1E94FAF20);
          memcpy(v237, v238, *(void *)(*(void *)(v239 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v1032 + 32))(v237, v238, v1023);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v1032 + 56))(v237, 0, 1, v1023);
        }
        *(void *)((char *)v68 + v1030[28]) = *(void *)((char *)v69 + v1030[28]);
        *(_OWORD *)((char *)v68 + v1030[29]) = *(_OWORD *)((char *)v69 + v1030[29]);
        *((unsigned char *)v68 + v1030[30]) = *((unsigned char *)v69 + v1030[30]);
        (*(void (**)(_OWORD *, void, uint64_t))(v1017 + 56))(v68, 0, 1);
      }
      *(_OWORD *)(v19 + v28[40]) = *(_OWORD *)(v20 + v28[40]);
      *(unsigned char *)(v19 + v28[41]) = *(unsigned char *)(v20 + v28[41]);
      *(_OWORD *)(v19 + v28[42]) = *(_OWORD *)(v20 + v28[42]);
      *(unsigned char *)(v19 + v28[43]) = *(unsigned char *)(v20 + v28[43]);
      *(unsigned char *)(v19 + v28[44]) = *(unsigned char *)(v20 + v28[44]);
      *(unsigned char *)(v19 + v28[45]) = *(unsigned char *)(v20 + v28[45]);
      *(unsigned char *)(v19 + v28[46]) = *(unsigned char *)(v20 + v28[46]);
      *(_OWORD *)(v19 + v28[47]) = *(_OWORD *)(v20 + v28[47]);
      *(_OWORD *)(v19 + v28[48]) = *(_OWORD *)(v20 + v28[48]);
      *(void *)(v19 + v28[49]) = *(void *)(v20 + v28[49]);
      *(_OWORD *)(v19 + v28[50]) = *(_OWORD *)(v20 + v28[50]);
      *(_OWORD *)(v19 + v28[51]) = *(_OWORD *)(v20 + v28[51]);
      uint64_t v240 = v28[52];
      uint64_t v241 = (void *)(v19 + v240);
      uint64_t v242 = (const void *)(v20 + v240);
      uint64_t v243 = __src;
      if (v1034((const void *)(v20 + v240), 1, v1023))
      {
        uint64_t v244 = sub_1A07856F8((uint64_t *)&unk_1E94FAF20);
        memcpy(v241, v242, *(void *)(*(void *)(v244 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v1032 + 32))(v241, v242, v1023);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v1032 + 56))(v241, 0, 1, v1023);
      }
      uint64_t v245 = v28[53];
      uint64_t v246 = v19 + v245;
      uint64_t v247 = v20 + v245;
      *(void *)uint64_t v246 = *(void *)v247;
      *(unsigned char *)(v246 + 8) = *(unsigned char *)(v247 + 8);
      uint64_t v248 = v28[54];
      uint64_t v249 = v19 + v248;
      uint64_t v250 = v20 + v248;
      *(unsigned char *)(v249 + 8) = *(unsigned char *)(v250 + 8);
      *(void *)uint64_t v249 = *(void *)v250;
      *(_OWORD *)(v19 + v28[55]) = *(_OWORD *)(v20 + v28[55]);
      *(unsigned char *)(v19 + v28[56]) = *(unsigned char *)(v20 + v28[56]);
      *(unsigned char *)(v19 + v28[57]) = *(unsigned char *)(v20 + v28[57]);
      *(_OWORD *)(v19 + v28[58]) = *(_OWORD *)(v20 + v28[58]);
      *(_OWORD *)(v19 + v28[59]) = *(_OWORD *)(v20 + v28[59]);
      *(_OWORD *)(v19 + v28[60]) = *(_OWORD *)(v20 + v28[60]);
      uint64_t v251 = v28[61];
      uint64_t v252 = v19 + v251;
      uint64_t v253 = v20 + v251;
      *(unsigned char *)(v252 + 8) = *(unsigned char *)(v253 + 8);
      *(void *)uint64_t v252 = *(void *)v253;
      *(_OWORD *)(v19 + v28[62]) = *(_OWORD *)(v20 + v28[62]);
      uint64_t v254 = v28[63];
      uint64_t v255 = v19 + v254;
      uint64_t v256 = v20 + v254;
      *(_DWORD *)uint64_t v255 = *(_DWORD *)v256;
      *(unsigned char *)(v255 + 4) = *(unsigned char *)(v256 + 4);
      *(_OWORD *)(v19 + v28[64]) = *(_OWORD *)(v20 + v28[64]);
      uint64_t v257 = v28[65];
      uint64_t v258 = v19 + v257;
      uint64_t v259 = v20 + v257;
      *(void *)uint64_t v258 = *(void *)v259;
      *(unsigned char *)(v258 + 8) = *(unsigned char *)(v259 + 8);
      uint64_t v260 = v28[66];
      uint64_t v261 = v19 + v260;
      uint64_t v262 = v20 + v260;
      *(_OWORD *)uint64_t v261 = *(_OWORD *)v262;
      *(unsigned char *)(v261 + 16) = *(unsigned char *)(v262 + 16);
      *(_OWORD *)(v19 + v28[67]) = *(_OWORD *)(v20 + v28[67]);
      *(void *)(v19 + v28[68]) = *(void *)(v20 + v28[68]);
      *(_OWORD *)(v19 + v28[69]) = *(_OWORD *)(v20 + v28[69]);
      *(unsigned char *)(v19 + v28[70]) = *(unsigned char *)(v20 + v28[70]);
      *(unsigned char *)(v19 + v28[71]) = *(unsigned char *)(v20 + v28[71]);
      *(unsigned char *)(v19 + v28[72]) = *(unsigned char *)(v20 + v28[72]);
      uint64_t v263 = v28[73];
      uint64_t v264 = v19 + v263;
      uint64_t v265 = v20 + v263;
      *(void *)uint64_t v264 = *(void *)v265;
      *(unsigned char *)(v264 + 8) = *(unsigned char *)(v265 + 8);
      uint64_t v266 = v1027[5];
      uint64_t v267 = (_OWORD *)(v19 + v266);
      uint64_t v268 = (_OWORD *)(v20 + v266);
      uint64_t v269 = (unsigned int (**)(_OWORD *, uint64_t, int *))*((void *)v28 - 1);
      if (v269[6](v268, 1, v28))
      {
        uint64_t v270 = sub_1A07856F8(&qword_1E94FBB18);
        memcpy(v267, v268, *(void *)(*(void *)(v270 - 8) + 64));
      }
      else
      {
        uint64_t v1008 = v269;
        long long v271 = v268[3];
        v267[2] = v268[2];
        v267[3] = v271;
        *((unsigned char *)v267 + 64) = *((unsigned char *)v268 + 64);
        long long v272 = v268[1];
        *uint64_t v267 = *v268;
        v267[1] = v272;
        *(_OWORD *)((char *)v267 + 72) = *(_OWORD *)((char *)v268 + 72);
        *(_OWORD *)((char *)v267 + 88) = *(_OWORD *)((char *)v268 + 88);
        *(_OWORD *)((char *)v267 + 104) = *(_OWORD *)((char *)v268 + 104);
        *(_OWORD *)((char *)v267 + 120) = *(_OWORD *)((char *)v268 + 120);
        *(_OWORD *)((char *)v267 + 136) = *(_OWORD *)((char *)v268 + 136);
        *(_OWORD *)((char *)v267 + 152) = *(_OWORD *)((char *)v268 + 152);
        *(_OWORD *)((char *)v267 + 168) = *(_OWORD *)((char *)v268 + 168);
        *(_OWORD *)((char *)v267 + 184) = *(_OWORD *)((char *)v268 + 184);
        *((void *)v267 + 25) = *((void *)v268 + 25);
        *((_WORD *)v267 + 104) = *((_WORD *)v268 + 104);
        *(_OWORD *)((char *)v267 + 216) = *(_OWORD *)((char *)v268 + 216);
        uint64_t v273 = v28[16];
        long long v274 = (char *)v267 + v273;
        uint64_t v275 = (char *)v268 + v273;
        if (v1034((char *)v268 + v273, 1, v1023))
        {
          uint64_t v276 = sub_1A07856F8((uint64_t *)&unk_1E94FAF20);
          memcpy(v274, v275, *(void *)(*(void *)(v276 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v1032 + 32))(v274, v275, v1023);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v1032 + 56))(v274, 0, 1, v1023);
        }
        uint64_t v277 = v28[17];
        uint64_t v278 = (char *)v267 + v277;
        uint64_t v279 = (char *)v268 + v277;
        *(void *)uint64_t v278 = *(void *)v279;
        v278[8] = v279[8];
        *(_OWORD *)((char *)v267 + v28[18]) = *(_OWORD *)((char *)v268 + v28[18]);
        *(_OWORD *)((char *)v267 + v28[19]) = *(_OWORD *)((char *)v268 + v28[19]);
        *(_OWORD *)((char *)v267 + v28[20]) = *(_OWORD *)((char *)v268 + v28[20]);
        *(_OWORD *)((char *)v267 + v28[21]) = *(_OWORD *)((char *)v268 + v28[21]);
        uint64_t v280 = v28[22];
        uint64_t v281 = (char *)v267 + v280;
        uint64_t v282 = (char *)v268 + v280;
        v281[8] = v282[8];
        *(void *)uint64_t v281 = *(void *)v282;
        *(_OWORD *)((char *)v267 + v28[23]) = *(_OWORD *)((char *)v268 + v28[23]);
        *(_OWORD *)((char *)v267 + v28[24]) = *(_OWORD *)((char *)v268 + v28[24]);
        *(_OWORD *)((char *)v267 + v28[25]) = *(_OWORD *)((char *)v268 + v28[25]);
        *(_OWORD *)((char *)v267 + v28[26]) = *(_OWORD *)((char *)v268 + v28[26]);
        *(void *)((char *)v267 + v28[27]) = *(void *)((char *)v268 + v28[27]);
        *(_OWORD *)((char *)v267 + v28[28]) = *(_OWORD *)((char *)v268 + v28[28]);
        uint64_t v283 = v28[29];
        uint64_t v284 = (char *)v267 + v283;
        uint64_t v285 = (char *)v268 + v283;
        if (v1034((char *)v268 + v283, 1, v1023))
        {
          uint64_t v286 = sub_1A07856F8((uint64_t *)&unk_1E94FAF20);
          memcpy(v284, v285, *(void *)(*(void *)(v286 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v1032 + 32))(v284, v285, v1023);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v1032 + 56))(v284, 0, 1, v1023);
        }
        uint64_t v287 = v28[30];
        uint64_t v288 = (char *)v267 + v287;
        uint64_t v289 = (char *)v268 + v287;
        if (v1034((char *)v268 + v287, 1, v1023))
        {
          uint64_t v290 = sub_1A07856F8((uint64_t *)&unk_1E94FAF20);
          memcpy(v288, v289, *(void *)(*(void *)(v290 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v1032 + 32))(v288, v289, v1023);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v1032 + 56))(v288, 0, 1, v1023);
        }
        uint64_t v291 = v28[31];
        uint64_t v292 = (char *)v267 + v291;
        uint64_t v293 = (char *)v268 + v291;
        if (v1034((char *)v268 + v291, 1, v1023))
        {
          uint64_t v294 = sub_1A07856F8((uint64_t *)&unk_1E94FAF20);
          memcpy(v292, v293, *(void *)(*(void *)(v294 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v1032 + 32))(v292, v293, v1023);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v1032 + 56))(v292, 0, 1, v1023);
        }
        uint64_t v295 = v28[32];
        uint64_t v296 = (char *)v267 + v295;
        uint64_t v297 = (char *)v268 + v295;
        *(void *)uint64_t v296 = *(void *)v297;
        v296[8] = v297[8];
        *((unsigned char *)v267 + v28[33]) = *((unsigned char *)v268 + v28[33]);
        *(_OWORD *)((char *)v267 + v28[34]) = *(_OWORD *)((char *)v268 + v28[34]);
        *(_OWORD *)((char *)v267 + v28[35]) = *(_OWORD *)((char *)v268 + v28[35]);
        uint64_t v298 = v28[36];
        uint64_t v299 = (char *)v267 + v298;
        uint64_t v300 = (char *)v268 + v298;
        if (v1034((char *)v268 + v298, 1, v1023))
        {
          uint64_t v301 = sub_1A07856F8((uint64_t *)&unk_1E94FAF20);
          memcpy(v299, v300, *(void *)(*(void *)(v301 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v1032 + 32))(v299, v300, v1023);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v1032 + 56))(v299, 0, 1, v1023);
        }
        uint64_t v302 = v28[37];
        uint64_t v303 = (char *)v267 + v302;
        uint64_t v304 = (char *)v268 + v302;
        *(void *)uint64_t v303 = *(void *)v304;
        v303[8] = v304[8];
        *(_OWORD *)((char *)v267 + v28[38]) = *(_OWORD *)((char *)v268 + v28[38]);
        uint64_t v305 = v28[39];
        uint64_t v306 = (_OWORD *)((char *)v267 + v305);
        uint64_t v307 = (_OWORD *)((char *)v268 + v305);
        if (v1000((_OWORD *)((char *)v268 + v305), 1, (uint64_t)v1030))
        {
          uint64_t v308 = sub_1A07856F8(&qword_1E94FBB10);
          memcpy(v306, v307, *(void *)(*(void *)(v308 - 8) + 64));
        }
        else
        {
          long long v309 = v307[1];
          _OWORD *v306 = *v307;
          v306[1] = v309;
          *((void *)v306 + 4) = *((void *)v307 + 4);
          *((unsigned char *)v306 + 40) = *((unsigned char *)v307 + 40);
          long long v310 = v307[4];
          v306[3] = v307[3];
          v306[4] = v310;
          long long v311 = v307[6];
          v306[5] = v307[5];
          v306[6] = v311;
          *((unsigned char *)v306 + 112) = *((unsigned char *)v307 + 112);
          *((unsigned char *)v306 + 113) = *((unsigned char *)v307 + 113);
          *(_OWORD *)((char *)v306 + 120) = *(_OWORD *)((char *)v307 + 120);
          *((unsigned char *)v306 + 136) = *((unsigned char *)v307 + 136);
          v306[9] = v307[9];
          uint64_t v312 = v1030[16];
          __dsta = (char *)v306 + v312;
          uint64_t v313 = (char *)v307 + v312;
          uint64_t v314 = sub_1A09F34B8();
          uint64_t v315 = *(void *)(v314 - 8);
          v1014 = (void *)v314;
          uint64_t v1001 = *(unsigned int (**)(char *, uint64_t))(v315 + 48);
          v996 = (void (**)(void *, const void *, void *))v315;
          if (v1001(v313, 1))
          {
            uint64_t v316 = sub_1A07856F8(&qword_1E94FBB08);
            memcpy(__dsta, v313, *(void *)(*(void *)(v316 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, void *))(v315 + 32))(__dsta, v313, v1014);
            (*(void (**)(char *, void, uint64_t, void *))(v315 + 56))(__dsta, 0, 1, v1014);
          }
          uint64_t v327 = v1030[17];
          v328 = (char *)v306 + v327;
          uint64_t v329 = (char *)v307 + v327;
          if (((unsigned int (*)(char *, uint64_t, void *))v1001)((char *)v307 + v327, 1, v1014))
          {
            uint64_t v330 = sub_1A07856F8(&qword_1E94FBB08);
            memcpy(v328, v329, *(void *)(*(void *)(v330 - 8) + 64));
          }
          else
          {
            v996[4](v328, v329, v1014);
            ((void (*)(char *, void, uint64_t, void *))v996[7])(v328, 0, 1, v1014);
          }
          *(void *)((char *)v306 + v1030[18]) = *(void *)((char *)v307 + v1030[18]);
          uint64_t v335 = v1030[19];
          uint64_t v336 = (char *)v306 + v335;
          uint64_t v337 = (char *)v307 + v335;
          if (((unsigned int (*)(char *, uint64_t, void *))v1001)((char *)v307 + v335, 1, v1014))
          {
            uint64_t v338 = sub_1A07856F8(&qword_1E94FBB08);
            memcpy(v336, v337, *(void *)(*(void *)(v338 - 8) + 64));
          }
          else
          {
            v996[4](v336, v337, v1014);
            ((void (*)(char *, void, uint64_t, void *))v996[7])(v336, 0, 1, v1014);
          }
          uint64_t v343 = v1030[20];
          v344 = (char *)v306 + v343;
          uint64_t v345 = (char *)v307 + v343;
          if (((unsigned int (*)(char *, uint64_t, void *))v1001)((char *)v307 + v343, 1, v1014))
          {
            uint64_t v346 = sub_1A07856F8(&qword_1E94FBB08);
            memcpy(v344, v345, *(void *)(*(void *)(v346 - 8) + 64));
          }
          else
          {
            v996[4](v344, v345, v1014);
            ((void (*)(char *, void, uint64_t, void *))v996[7])(v344, 0, 1, v1014);
          }
          *(void *)((char *)v306 + v1030[21]) = *(void *)((char *)v307 + v1030[21]);
          *(_OWORD *)((char *)v306 + v1030[22]) = *(_OWORD *)((char *)v307 + v1030[22]);
          *(_OWORD *)((char *)v306 + v1030[23]) = *(_OWORD *)((char *)v307 + v1030[23]);
          uint64_t v357 = v1030[24];
          long long v358 = (char *)v306 + v357;
          long long v359 = (char *)v307 + v357;
          v358[8] = v359[8];
          *(void *)long long v358 = *(void *)v359;
          uint64_t v360 = v1030[25];
          uint64_t v361 = (char *)v306 + v360;
          uint64_t v362 = (char *)v307 + v360;
          *(void *)uint64_t v361 = *(void *)v362;
          v361[8] = v362[8];
          *((unsigned char *)v306 + v1030[26]) = *((unsigned char *)v307 + v1030[26]);
          uint64_t v363 = v1030[27];
          v1015 = (char *)v306 + v363;
          v364 = (char *)v307 + v363;
          if (v1034((char *)v307 + v363, 1, v1023))
          {
            uint64_t v365 = sub_1A07856F8((uint64_t *)&unk_1E94FAF20);
            memcpy(v1015, v364, *(void *)(*(void *)(v365 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v1032 + 32))(v1015, v364, v1023);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v1032 + 56))(v1015, 0, 1, v1023);
          }
          *(void *)((char *)v306 + v1030[28]) = *(void *)((char *)v307 + v1030[28]);
          *(_OWORD *)((char *)v306 + v1030[29]) = *(_OWORD *)((char *)v307 + v1030[29]);
          *((unsigned char *)v306 + v1030[30]) = *((unsigned char *)v307 + v1030[30]);
          (*(void (**)(_OWORD *, void, uint64_t))(v1017 + 56))(v306, 0, 1);
        }
        *(_OWORD *)((char *)v267 + v28[40]) = *(_OWORD *)((char *)v268 + v28[40]);
        *((unsigned char *)v267 + v28[41]) = *((unsigned char *)v268 + v28[41]);
        *(_OWORD *)((char *)v267 + v28[42]) = *(_OWORD *)((char *)v268 + v28[42]);
        *((unsigned char *)v267 + v28[43]) = *((unsigned char *)v268 + v28[43]);
        *((unsigned char *)v267 + v28[44]) = *((unsigned char *)v268 + v28[44]);
        *((unsigned char *)v267 + v28[45]) = *((unsigned char *)v268 + v28[45]);
        *((unsigned char *)v267 + v28[46]) = *((unsigned char *)v268 + v28[46]);
        *(_OWORD *)((char *)v267 + v28[47]) = *(_OWORD *)((char *)v268 + v28[47]);
        *(_OWORD *)((char *)v267 + v28[48]) = *(_OWORD *)((char *)v268 + v28[48]);
        *(void *)((char *)v267 + v28[49]) = *(void *)((char *)v268 + v28[49]);
        *(_OWORD *)((char *)v267 + v28[50]) = *(_OWORD *)((char *)v268 + v28[50]);
        *(_OWORD *)((char *)v267 + v28[51]) = *(_OWORD *)((char *)v268 + v28[51]);
        uint64_t v483 = v28[52];
        uint64_t v484 = (char *)v267 + v483;
        uint64_t v485 = (char *)v268 + v483;
        uint64_t v243 = __src;
        if (v1034((char *)v268 + v483, 1, v1023))
        {
          uint64_t v486 = sub_1A07856F8((uint64_t *)&unk_1E94FAF20);
          memcpy(v484, v485, *(void *)(*(void *)(v486 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v1032 + 32))(v484, v485, v1023);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v1032 + 56))(v484, 0, 1, v1023);
          uint64_t v243 = __src;
        }
        uint64_t v487 = v28[53];
        uint64_t v488 = (char *)v267 + v487;
        uint64_t v489 = (char *)v268 + v487;
        *(void *)uint64_t v488 = *(void *)v489;
        v488[8] = v489[8];
        uint64_t v490 = v28[54];
        uint64_t v491 = (char *)v267 + v490;
        uint64_t v492 = (char *)v268 + v490;
        v491[8] = v492[8];
        *(void *)uint64_t v491 = *(void *)v492;
        *(_OWORD *)((char *)v267 + v28[55]) = *(_OWORD *)((char *)v268 + v28[55]);
        *((unsigned char *)v267 + v28[56]) = *((unsigned char *)v268 + v28[56]);
        *((unsigned char *)v267 + v28[57]) = *((unsigned char *)v268 + v28[57]);
        *(_OWORD *)((char *)v267 + v28[58]) = *(_OWORD *)((char *)v268 + v28[58]);
        *(_OWORD *)((char *)v267 + v28[59]) = *(_OWORD *)((char *)v268 + v28[59]);
        *(_OWORD *)((char *)v267 + v28[60]) = *(_OWORD *)((char *)v268 + v28[60]);
        uint64_t v493 = v28[61];
        uint64_t v494 = (char *)v267 + v493;
        unint64_t v495 = (char *)v268 + v493;
        v494[8] = v495[8];
        *(void *)uint64_t v494 = *(void *)v495;
        *(_OWORD *)((char *)v267 + v28[62]) = *(_OWORD *)((char *)v268 + v28[62]);
        uint64_t v496 = v28[63];
        uint64_t v497 = (char *)v267 + v496;
        v498 = (char *)v268 + v496;
        *(_DWORD *)uint64_t v497 = *(_DWORD *)v498;
        v497[4] = v498[4];
        *(_OWORD *)((char *)v267 + v28[64]) = *(_OWORD *)((char *)v268 + v28[64]);
        uint64_t v499 = v28[65];
        uint64_t v500 = (char *)v267 + v499;
        uint64_t v501 = (char *)v268 + v499;
        *(void *)uint64_t v500 = *(void *)v501;
        v500[8] = v501[8];
        uint64_t v502 = v28[66];
        uint64_t v503 = (char *)v267 + v502;
        uint64_t v504 = (char *)v268 + v502;
        *(_OWORD *)uint64_t v503 = *(_OWORD *)v504;
        v503[16] = v504[16];
        *(_OWORD *)((char *)v267 + v28[67]) = *(_OWORD *)((char *)v268 + v28[67]);
        *(void *)((char *)v267 + v28[68]) = *(void *)((char *)v268 + v28[68]);
        *(_OWORD *)((char *)v267 + v28[69]) = *(_OWORD *)((char *)v268 + v28[69]);
        *((unsigned char *)v267 + v28[70]) = *((unsigned char *)v268 + v28[70]);
        *((unsigned char *)v267 + v28[71]) = *((unsigned char *)v268 + v28[71]);
        *((unsigned char *)v267 + v28[72]) = *((unsigned char *)v268 + v28[72]);
        uint64_t v505 = v28[73];
        uint64_t v506 = (char *)v267 + v505;
        uint64_t v507 = (char *)v268 + v505;
        v506[8] = v507[8];
        *(void *)uint64_t v506 = *(void *)v507;
        (*((void (**)(_OWORD *, void, uint64_t, int *))v1008 + 7))(v267, 0, 1, v28);
      }
      a3 = v1025;
      v243[7](v19, 0, 1, v1027);
      goto LABEL_184;
    }
LABEL_7:
    uint64_t v35 = sub_1A07856F8(&qword_1E94FBB20);
    memcpy((void *)v19, (const void *)v20, *(void *)(*(void *)(v35 - 8) + 64));
    goto LABEL_184;
  }
  if (v25)
  {
    sub_1A090C884(v19, type metadata accessor for RemoteIntentMessageItem);
    goto LABEL_7;
  }
  uint64_t v1026 = a3;
  uint64_t v1028 = (int *)v21;
  if (*(void *)(v19 + 8) == 1) {
    goto LABEL_11;
  }
  uint64_t v36 = *(void *)(v20 + 8);
  if (v36 == 1)
  {
    sub_1A0900DD4(v19);
LABEL_11:
    long long v37 = *(_OWORD *)(v20 + 48);
    *(_OWORD *)(v19 + 32) = *(_OWORD *)(v20 + 32);
    *(_OWORD *)(v19 + 48) = v37;
    *(unsigned char *)(v19 + 64) = *(unsigned char *)(v20 + 64);
    long long v38 = *(_OWORD *)(v20 + 16);
    *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
    *(_OWORD *)(v19 + 16) = v38;
    goto LABEL_30;
  }
  *(void *)uint64_t v19 = *(void *)v20;
  *(void *)(v19 + 8) = v36;
  swift_bridgeObjectRelease();
  uint64_t v80 = *(void *)(v20 + 24);
  *(void *)(v19 + 16) = *(void *)(v20 + 16);
  *(void *)(v19 + 24) = v80;
  swift_bridgeObjectRelease();
  uint64_t v81 = *(void *)(v20 + 40);
  *(void *)(v19 + 32) = *(void *)(v20 + 32);
  *(void *)(v19 + 40) = v81;
  swift_bridgeObjectRelease();
  uint64_t v82 = *(void *)(v20 + 56);
  *(void *)(v19 + 48) = *(void *)(v20 + 48);
  *(void *)(v19 + 56) = v82;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v19 + 64) = *(unsigned char *)(v20 + 64);
LABEL_30:
  uint64_t v83 = *(void *)(v20 + 80);
  *(void *)(v19 + 72) = *(void *)(v20 + 72);
  *(void *)(v19 + 80) = v83;
  swift_bridgeObjectRelease();
  uint64_t v84 = *(void *)(v20 + 96);
  *(void *)(v19 + 88) = *(void *)(v20 + 88);
  *(void *)(v19 + 96) = v84;
  swift_bridgeObjectRelease();
  uint64_t v85 = *(void *)(v20 + 112);
  *(void *)(v19 + 104) = *(void *)(v20 + 104);
  *(void *)(v19 + 112) = v85;
  swift_bridgeObjectRelease();
  uint64_t v86 = *(void *)(v20 + 128);
  *(void *)(v19 + 120) = *(void *)(v20 + 120);
  *(void *)(v19 + 128) = v86;
  swift_bridgeObjectRelease();
  uint64_t v87 = *(void *)(v20 + 144);
  *(void *)(v19 + 136) = *(void *)(v20 + 136);
  *(void *)(v19 + 144) = v87;
  swift_bridgeObjectRelease();
  uint64_t v88 = *(void *)(v20 + 160);
  *(void *)(v19 + 152) = *(void *)(v20 + 152);
  *(void *)(v19 + 160) = v88;
  swift_bridgeObjectRelease();
  uint64_t v89 = *(void *)(v20 + 176);
  *(void *)(v19 + 168) = *(void *)(v20 + 168);
  *(void *)(v19 + 176) = v89;
  swift_bridgeObjectRelease();
  uint64_t v90 = *(void *)(v20 + 192);
  *(void *)(v19 + 184) = *(void *)(v20 + 184);
  *(void *)(v19 + 192) = v90;
  swift_bridgeObjectRelease();
  *(void *)(v19 + 200) = *(void *)(v20 + 200);
  *(_WORD *)(v19 + 208) = *(_WORD *)(v20 + 208);
  uint64_t v91 = *(void *)(v20 + 224);
  *(void *)(v19 + 216) = *(void *)(v20 + 216);
  *(void *)(v19 + 224) = v91;
  swift_bridgeObjectRelease();
  uint64_t v1035 = (int *)type metadata accessor for RemoteIntentItemContent(0);
  uint64_t v92 = v1035[16];
  unint64_t v93 = (void *)(v19 + v92);
  uint64_t v94 = (const void *)(v20 + v92);
  uint64_t v95 = sub_1A09F3478();
  uint64_t v1031 = *(void *)(v95 - 8);
  uint64_t v96 = *(uint64_t (**)(void))(v1031 + 48);
  unsigned int v97 = ((uint64_t (*)(void *, uint64_t, uint64_t))v96)(v93, 1, v95);
  v1033 = v96;
  unsigned int v98 = ((uint64_t (*)(const void *, uint64_t, uint64_t))v96)(v94, 1, v95);
  if (v97)
  {
    if (!v98)
    {
      (*(void (**)(void *, const void *, uint64_t))(v1031 + 32))(v93, v94, v95);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v1031 + 56))(v93, 0, 1, v95);
      goto LABEL_36;
    }
    goto LABEL_35;
  }
  if (v98)
  {
    (*(void (**)(void *, uint64_t))(v1031 + 8))(v93, v95);
LABEL_35:
    uint64_t v99 = sub_1A07856F8((uint64_t *)&unk_1E94FAF20);
    memcpy(v93, v94, *(void *)(*(void *)(v99 - 8) + 64));
    goto LABEL_36;
  }
  (*(void (**)(void *, const void *, uint64_t))(v1031 + 40))(v93, v94, v95);
LABEL_36:
  uint64_t v100 = v1035[17];
  uint64_t v101 = v19 + v100;
  uint64_t v102 = v20 + v100;
  *(void *)uint64_t v101 = *(void *)v102;
  *(unsigned char *)(v101 + 8) = *(unsigned char *)(v102 + 8);
  uint64_t v103 = v1035[18];
  uint64_t v104 = (void *)(v19 + v103);
  uint64_t v105 = (uint64_t *)(v20 + v103);
  uint64_t v107 = *v105;
  uint64_t v106 = v105[1];
  *uint64_t v104 = v107;
  v104[1] = v106;
  swift_bridgeObjectRelease();
  uint64_t v108 = v1035[19];
  unint64_t v109 = (void *)(v19 + v108);
  uint64_t v110 = (uint64_t *)(v20 + v108);
  uint64_t v112 = *v110;
  uint64_t v111 = v110[1];
  *unint64_t v109 = v112;
  v109[1] = v111;
  swift_bridgeObjectRelease();
  uint64_t v113 = v1035[20];
  uint64_t v114 = (void *)(v19 + v113);
  uint64_t v115 = (uint64_t *)(v20 + v113);
  uint64_t v117 = *v115;
  uint64_t v116 = v115[1];
  *uint64_t v114 = v117;
  v114[1] = v116;
  swift_bridgeObjectRelease();
  uint64_t v118 = v1035[21];
  long long v119 = (void *)(v19 + v118);
  uint64_t v120 = (uint64_t *)(v20 + v118);
  uint64_t v122 = *v120;
  uint64_t v121 = v120[1];
  *long long v119 = v122;
  v119[1] = v121;
  swift_bridgeObjectRelease();
  uint64_t v123 = v1035[22];
  uint64_t v124 = v19 + v123;
  uint64_t v125 = v20 + v123;
  *(void *)uint64_t v124 = *(void *)v125;
  *(unsigned char *)(v124 + 8) = *(unsigned char *)(v125 + 8);
  uint64_t v126 = v1035[23];
  uint64_t v127 = (void *)(v19 + v126);
  uint64_t v128 = (uint64_t *)(v20 + v126);
  uint64_t v130 = *v128;
  uint64_t v129 = v128[1];
  *uint64_t v127 = v130;
  v127[1] = v129;
  swift_bridgeObjectRelease();
  uint64_t v131 = v1035[24];
  uint64_t v132 = (void *)(v19 + v131);
  uint64_t v133 = (uint64_t *)(v20 + v131);
  uint64_t v135 = *v133;
  uint64_t v134 = v133[1];
  *uint64_t v132 = v135;
  v132[1] = v134;
  swift_bridgeObjectRelease();
  uint64_t v136 = v1035[25];
  uint64_t v137 = v19 + v136;
  uint64_t v138 = v20 + v136;
  unint64_t v139 = *(void *)(v19 + v136 + 8);
  if (v139 >> 60 == 15)
  {
LABEL_39:
    *(_OWORD *)uint64_t v137 = *(_OWORD *)v138;
    goto LABEL_41;
  }
  unint64_t v140 = *(void *)(v138 + 8);
  if (v140 >> 60 == 15)
  {
    sub_1A0900E28(v137);
    goto LABEL_39;
  }
  uint64_t v141 = *(void *)v137;
  *(void *)uint64_t v137 = *(void *)v138;
  *(void *)(v137 + 8) = v140;
  sub_1A08AF2E4(v141, v139);
LABEL_41:
  uint64_t v142 = v1035[26];
  uint64_t v143 = (void *)(v19 + v142);
  uint64_t v144 = (uint64_t *)(v20 + v142);
  uint64_t v146 = *v144;
  uint64_t v145 = v144[1];
  *uint64_t v143 = v146;
  v143[1] = v145;
  swift_bridgeObjectRelease();
  *(void *)(v19 + v1035[27]) = *(void *)(v20 + v1035[27]);
  swift_bridgeObjectRelease();
  uint64_t v147 = v1035[28];
  uint64_t v148 = v19 + v147;
  uint64_t v149 = v20 + v147;
  unint64_t v150 = *(void *)(v19 + v147 + 8);
  if (v150 >> 60 == 15)
  {
LABEL_44:
    *(_OWORD *)uint64_t v148 = *(_OWORD *)v149;
    goto LABEL_46;
  }
  unint64_t v151 = *(void *)(v149 + 8);
  if (v151 >> 60 == 15)
  {
    sub_1A0900E28(v148);
    goto LABEL_44;
  }
  uint64_t v152 = *(void *)v148;
  *(void *)uint64_t v148 = *(void *)v149;
  *(void *)(v148 + 8) = v151;
  sub_1A08AF2E4(v152, v150);
LABEL_46:
  uint64_t v153 = v1035[29];
  uint64_t v154 = (void *)(v19 + v153);
  uint64_t v155 = (const void *)(v20 + v153);
  unsigned int v156 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v96)(v19 + v153, 1, v95);
  unsigned int v157 = ((uint64_t (*)(const void *, uint64_t, uint64_t))v96)(v155, 1, v95);
  if (v156)
  {
    if (!v157)
    {
      (*(void (**)(void *, const void *, uint64_t))(v1031 + 32))(v154, v155, v95);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v1031 + 56))(v154, 0, 1, v95);
      goto LABEL_52;
    }
    goto LABEL_51;
  }
  if (v157)
  {
    (*(void (**)(void *, uint64_t))(v1031 + 8))(v154, v95);
LABEL_51:
    uint64_t v158 = sub_1A07856F8((uint64_t *)&unk_1E94FAF20);
    memcpy(v154, v155, *(void *)(*(void *)(v158 - 8) + 64));
    goto LABEL_52;
  }
  (*(void (**)(void *, const void *, uint64_t))(v1031 + 40))(v154, v155, v95);
LABEL_52:
  uint64_t v159 = v1035[30];
  uint64_t v160 = (void *)(v19 + v159);
  long long v161 = (const void *)(v20 + v159);
  unsigned int v162 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v96)(v19 + v159, 1, v95);
  unsigned int v163 = ((uint64_t (*)(const void *, uint64_t, uint64_t))v96)(v161, 1, v95);
  if (v162)
  {
    if (!v163)
    {
      (*(void (**)(void *, const void *, uint64_t))(v1031 + 32))(v160, v161, v95);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v1031 + 56))(v160, 0, 1, v95);
      goto LABEL_58;
    }
    goto LABEL_57;
  }
  if (v163)
  {
    (*(void (**)(void *, uint64_t))(v1031 + 8))(v160, v95);
LABEL_57:
    uint64_t v164 = sub_1A07856F8((uint64_t *)&unk_1E94FAF20);
    memcpy(v160, v161, *(void *)(*(void *)(v164 - 8) + 64));
    goto LABEL_58;
  }
  (*(void (**)(void *, const void *, uint64_t))(v1031 + 40))(v160, v161, v95);
LABEL_58:
  uint64_t v165 = v1035[31];
  uint64_t v166 = (void *)(v19 + v165);
  uint64_t v167 = (const void *)(v20 + v165);
  unsigned int v168 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v96)(v19 + v165, 1, v95);
  unsigned int v169 = ((uint64_t (*)(const void *, uint64_t, uint64_t))v96)(v167, 1, v95);
  if (v168)
  {
    if (!v169)
    {
      (*(void (**)(void *, const void *, uint64_t))(v1031 + 32))(v166, v167, v95);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v1031 + 56))(v166, 0, 1, v95);
      goto LABEL_64;
    }
    goto LABEL_63;
  }
  if (v169)
  {
    (*(void (**)(void *, uint64_t))(v1031 + 8))(v166, v95);
LABEL_63:
    uint64_t v170 = sub_1A07856F8((uint64_t *)&unk_1E94FAF20);
    memcpy(v166, v167, *(void *)(*(void *)(v170 - 8) + 64));
    goto LABEL_64;
  }
  (*(void (**)(void *, const void *, uint64_t))(v1031 + 40))(v166, v167, v95);
LABEL_64:
  uint64_t v171 = v1035[32];
  uint64_t v172 = v19 + v171;
  uint64_t v173 = v20 + v171;
  *(void *)uint64_t v172 = *(void *)v173;
  *(unsigned char *)(v172 + 8) = *(unsigned char *)(v173 + 8);
  *(unsigned char *)(v19 + v1035[33]) = *(unsigned char *)(v20 + v1035[33]);
  uint64_t v174 = v1035[34];
  uint64_t v175 = v19 + v174;
  uint64_t v176 = v20 + v174;
  unint64_t v177 = *(void *)(v19 + v174 + 8);
  if (v177 >> 60 == 15)
  {
LABEL_67:
    *(_OWORD *)uint64_t v175 = *(_OWORD *)v176;
    goto LABEL_69;
  }
  unint64_t v178 = *(void *)(v176 + 8);
  if (v178 >> 60 == 15)
  {
    sub_1A0900E28(v175);
    goto LABEL_67;
  }
  uint64_t v179 = *(void *)v175;
  *(void *)uint64_t v175 = *(void *)v176;
  *(void *)(v175 + 8) = v178;
  sub_1A08AF2E4(v179, v177);
LABEL_69:
  uint64_t v180 = v1035[35];
  uint64_t v181 = (void *)(v19 + v180);
  uint64_t v182 = (uint64_t *)(v20 + v180);
  uint64_t v184 = *v182;
  uint64_t v183 = v182[1];
  *uint64_t v181 = v184;
  v181[1] = v183;
  swift_bridgeObjectRelease();
  uint64_t v185 = v1035[36];
  unsigned int v186 = (void *)(v19 + v185);
  uint64_t v187 = (const void *)(v20 + v185);
  unsigned int v188 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v96)(v19 + v185, 1, v95);
  unsigned int v189 = ((uint64_t (*)(const void *, uint64_t, uint64_t))v96)(v187, 1, v95);
  if (v188)
  {
    if (!v189)
    {
      (*(void (**)(void *, const void *, uint64_t))(v1031 + 32))(v186, v187, v95);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v1031 + 56))(v186, 0, 1, v95);
      goto LABEL_75;
    }
    goto LABEL_74;
  }
  if (v189)
  {
    (*(void (**)(void *, uint64_t))(v1031 + 8))(v186, v95);
LABEL_74:
    uint64_t v190 = sub_1A07856F8((uint64_t *)&unk_1E94FAF20);
    memcpy(v186, v187, *(void *)(*(void *)(v190 - 8) + 64));
    goto LABEL_75;
  }
  (*(void (**)(void *, const void *, uint64_t))(v1031 + 40))(v186, v187, v95);
LABEL_75:
  uint64_t v191 = v1035[37];
  uint64_t v192 = v19 + v191;
  uint64_t v193 = v20 + v191;
  *(void *)uint64_t v192 = *(void *)v193;
  *(unsigned char *)(v192 + 8) = *(unsigned char *)(v193 + 8);
  uint64_t v194 = v1035[38];
  uint64_t v195 = v19 + v194;
  uint64_t v196 = v20 + v194;
  unint64_t v197 = *(void *)(v19 + v194 + 8);
  uint64_t v1018 = v95;
  if (v197 >> 60 == 15)
  {
LABEL_78:
    *(_OWORD *)uint64_t v195 = *(_OWORD *)v196;
    goto LABEL_80;
  }
  unint64_t v198 = *(void *)(v196 + 8);
  if (v198 >> 60 == 15)
  {
    sub_1A0900E28(v195);
    goto LABEL_78;
  }
  uint64_t v199 = *(void *)v195;
  *(void *)uint64_t v195 = *(void *)v196;
  *(void *)(v195 + 8) = v198;
  sub_1A08AF2E4(v199, v197);
LABEL_80:
  uint64_t v200 = v1035[39];
  uint64_t v201 = (void *)(v19 + v200);
  uint64_t v202 = (void *)(v20 + v200);
  uint64_t v203 = type metadata accessor for RemoteIntentMessageSummaryInfo();
  uint64_t v1005 = *(void *)(v203 - 8);
  uint64_t v204 = *(uint64_t (**)(void))(v1005 + 48);
  uint64_t v205 = v201;
  LODWORD(v201) = ((uint64_t (*)(void *, uint64_t, uint64_t))v204)(v201, 1, v203);
  __srca = (char *)v202;
  v1024 = (int *)v203;
  int v206 = ((uint64_t (*)(void *, uint64_t, uint64_t))v204)(v202, 1, v203);
  uint64_t v1013 = v204;
  if (v201)
  {
    if (!v206)
    {
      long long v207 = *((_OWORD *)v202 + 1);
      uint64_t v208 = v205;
      *(_OWORD *)uint64_t v205 = *(_OWORD *)v202;
      *((_OWORD *)v205 + 1) = v207;
      v205[4] = v202[4];
      *((unsigned char *)v205 + 40) = *((unsigned char *)v202 + 40);
      long long v209 = *((_OWORD *)v202 + 4);
      *((_OWORD *)v205 + 3) = *((_OWORD *)v202 + 3);
      *((_OWORD *)v205 + 4) = v209;
      long long v210 = *((_OWORD *)v202 + 6);
      *((_OWORD *)v205 + 5) = *((_OWORD *)v202 + 5);
      *((_OWORD *)v205 + 6) = v210;
      *((unsigned char *)v205 + 112) = *((unsigned char *)v202 + 112);
      *((unsigned char *)v205 + 113) = *((unsigned char *)v202 + 113);
      *(_OWORD *)(v205 + 15) = *(_OWORD *)(v202 + 15);
      *((unsigned char *)v205 + 136) = *((unsigned char *)v202 + 136);
      *((_OWORD *)v205 + 9) = *((_OWORD *)v202 + 9);
      uint64_t v211 = *(int *)(v203 + 64);
      uint64_t v212 = (char *)v205 + v211;
      uint64_t v213 = (char *)v202 + v211;
      uint64_t v214 = sub_1A09F34B8();
      uint64_t v215 = *(void *)(v214 - 8);
      v995 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v215 + 48);
      if (v995(v213, 1, v214))
      {
        uint64_t v216 = sub_1A07856F8(&qword_1E94FBB08);
        memcpy(v212, v213, *(void *)(*(void *)(v216 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v215 + 32))(v212, v213, v214);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v215 + 56))(v212, 0, 1, v214);
      }
      uint64_t v323 = v1024[17];
      v324 = (char *)v208 + v323;
      uint64_t v325 = (char *)v202 + v323;
      if (v995((char *)v202 + v323, 1, v214))
      {
        uint64_t v326 = sub_1A07856F8(&qword_1E94FBB08);
        memcpy(v324, v325, *(void *)(*(void *)(v326 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v215 + 32))(v324, v325, v214);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v215 + 56))(v324, 0, 1, v214);
      }
      *(void *)((char *)v208 + v1024[18]) = *(void *)((char *)v202 + v1024[18]);
      uint64_t v331 = v1024[19];
      uint64_t v332 = (char *)v208 + v331;
      v333 = (char *)v202 + v331;
      if (v995((char *)v202 + v331, 1, v214))
      {
        uint64_t v334 = sub_1A07856F8(&qword_1E94FBB08);
        memcpy(v332, v333, *(void *)(*(void *)(v334 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v215 + 32))(v332, v333, v214);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v215 + 56))(v332, 0, 1, v214);
      }
      uint64_t v339 = v1024[20];
      uint64_t v340 = (char *)v208 + v339;
      uint64_t v341 = (char *)v202 + v339;
      if (v995((char *)v202 + v339, 1, v214))
      {
        uint64_t v342 = sub_1A07856F8(&qword_1E94FBB08);
        memcpy(v340, v341, *(void *)(*(void *)(v342 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v215 + 32))(v340, v341, v214);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v215 + 56))(v340, 0, 1, v214);
      }
      *(void *)((char *)v208 + v1024[21]) = *(void *)((char *)v202 + v1024[21]);
      *(_OWORD *)((char *)v208 + v1024[22]) = *(_OWORD *)((char *)v202 + v1024[22]);
      *(_OWORD *)((char *)v208 + v1024[23]) = *(_OWORD *)((char *)v202 + v1024[23]);
      uint64_t v347 = v1024[24];
      v348 = (char *)v208 + v347;
      uint64_t v349 = (char *)v202 + v347;
      v348[8] = v349[8];
      *(void *)v348 = *(void *)v349;
      uint64_t v350 = v1024[25];
      uint64_t v351 = (char *)v208 + v350;
      uint64_t v352 = (char *)v202 + v350;
      *(void *)uint64_t v351 = *(void *)v352;
      v351[8] = v352[8];
      *((unsigned char *)v208 + v1024[26]) = *((unsigned char *)v202 + v1024[26]);
      uint64_t v353 = v1024[27];
      uint64_t v354 = (char *)v208 + v353;
      uint64_t v355 = (char *)v202 + v353;
      if (((unsigned int (*)(char *, uint64_t, uint64_t))v1033)((char *)v202 + v353, 1, v1018))
      {
        uint64_t v356 = sub_1A07856F8((uint64_t *)&unk_1E94FAF20);
        memcpy(v354, v355, *(void *)(*(void *)(v356 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v1031 + 32))(v354, v355, v1018);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v1031 + 56))(v354, 0, 1, v1018);
      }
      *(void *)((char *)v208 + v1024[28]) = *(void *)((char *)v202 + v1024[28]);
      *(_OWORD *)((char *)v208 + v1024[29]) = *(_OWORD *)((char *)v202 + v1024[29]);
      *((unsigned char *)v208 + v1024[30]) = *((unsigned char *)v202 + v1024[30]);
      (*(void (**)(void *, void, uint64_t))(v1005 + 56))(v208, 0, 1);
      goto LABEL_158;
    }
LABEL_86:
    uint64_t v217 = sub_1A07856F8(&qword_1E94FBB10);
    memcpy(v205, v202, *(void *)(*(void *)(v217 - 8) + 64));
LABEL_158:
    uint64_t v366 = v1035;
    goto LABEL_159;
  }
  if (v206)
  {
    sub_1A090C884((uint64_t)v205, (uint64_t (*)(void))type metadata accessor for RemoteIntentMessageSummaryInfo);
    goto LABEL_86;
  }
  uint64_t v317 = v202[1];
  uint64_t v318 = v205;
  void *v205 = *(void *)__srca;
  v205[1] = v317;
  swift_bridgeObjectRelease();
  uint64_t v319 = v205 + 2;
  v320 = __srca + 16;
  unint64_t v321 = v205[3];
  if (v321 >> 60 == 15)
  {
    *uint64_t v319 = *v320;
    uint64_t v322 = v1024;
  }
  else
  {
    unint64_t v549 = *((void *)__srca + 3);
    uint64_t v322 = v1024;
    if (v549 >> 60 == 15)
    {
      sub_1A0900E28((uint64_t)v319);
      *uint64_t v319 = *v320;
    }
    else
    {
      uint64_t v609 = v318[2];
      v318[2] = *(void *)v320;
      v318[3] = v549;
      sub_1A08AF2E4(v609, v321);
    }
  }
  v318[4] = *((void *)__srca + 4);
  *((unsigned char *)v318 + 40) = __srca[40];
  uint64_t v610 = *((void *)__srca + 7);
  v318[6] = *((void *)__srca + 6);
  v318[7] = v610;
  swift_bridgeObjectRelease();
  uint64_t v611 = *((void *)__srca + 9);
  v318[8] = *((void *)__srca + 8);
  v318[9] = v611;
  swift_bridgeObjectRelease();
  uint64_t v612 = *((void *)__srca + 11);
  v318[10] = *((void *)__srca + 10);
  v318[11] = v612;
  swift_bridgeObjectRelease();
  uint64_t v613 = *((void *)__srca + 13);
  v318[12] = *((void *)__srca + 12);
  v318[13] = v613;
  swift_bridgeObjectRelease();
  *((_WORD *)v318 + 56) = *((_WORD *)__srca + 56);
  uint64_t v614 = *((void *)__srca + 16);
  v318[15] = *((void *)__srca + 15);
  v318[16] = v614;
  swift_bridgeObjectRelease();
  *((unsigned char *)v318 + 136) = __srca[136];
  uint64_t v615 = *((void *)__srca + 19);
  v318[18] = *((void *)__srca + 18);
  v318[19] = v615;
  swift_bridgeObjectRelease();
  uint64_t v616 = v322[16];
  uint64_t v617 = (char *)v318 + v616;
  uint64_t v618 = &__srca[v616];
  uint64_t v619 = sub_1A09F34B8();
  uint64_t v989 = *(void *)(v619 - 8);
  __dstb = v617;
  v620 = *(uint64_t (**)(void))(v989 + 48);
  LODWORD(v617) = ((uint64_t (*)(char *, uint64_t, uint64_t))v620)(v617, 1, v619);
  uint64_t v997 = v620;
  int v621 = ((uint64_t (*)(char *, uint64_t, uint64_t))v620)(v618, 1, v619);
  if (v617)
  {
    if (v621)
    {
      size_t v622 = *(void *)(*(void *)(sub_1A07856F8(&qword_1E94FBB08) - 8) + 64);
      int v623 = __dstb;
LABEL_221:
      memcpy(v623, v618, v622);
      goto LABEL_291;
    }
    (*(void (**)(void *, char *, uint64_t))(v989 + 32))(__dstb, v618, v619);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v989 + 56))(__dstb, 0, 1, v619);
  }
  else
  {
    if (v621)
    {
      (*(void (**)(void *, uint64_t))(v989 + 8))(__dstb, v619);
      size_t v622 = *(void *)(*(void *)(sub_1A07856F8(&qword_1E94FBB08) - 8) + 64);
      int v623 = __dstb;
      goto LABEL_221;
    }
    (*(void (**)(void *, char *, uint64_t))(v989 + 40))(__dstb, v618, v619);
  }
LABEL_291:
  uint64_t v745 = v1024[17];
  uint64_t v746 = &__srca[v745];
  v986 = (char *)v318 + v745;
  int v747 = v620();
  int v748 = ((uint64_t (*)(char *, uint64_t, uint64_t))v620)(v746, 1, v619);
  if (v747)
  {
    if (v748)
    {
      uint64_t v749 = sub_1A07856F8(&qword_1E94FBB08);
      memcpy(v986, v746, *(void *)(*(void *)(v749 - 8) + 64));
      uint64_t v750 = v1024;
      uint64_t v751 = v619;
      goto LABEL_305;
    }
    uint64_t v751 = v619;
    (*(void (**)(char *, char *, uint64_t))(v989 + 32))(v986, v746, v619);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v989 + 56))(v986, 0, 1, v619);
  }
  else
  {
    uint64_t v751 = v619;
    if (v748)
    {
      (*(void (**)(char *, uint64_t))(v989 + 8))(v986, v619);
      uint64_t v752 = sub_1A07856F8(&qword_1E94FBB08);
      memcpy(v986, v746, *(void *)(*(void *)(v752 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v989 + 40))(v986, v746, v619);
    }
  }
  uint64_t v750 = v1024;
LABEL_305:
  *(void *)((char *)v318 + v750[18]) = *(void *)&__srca[v750[18]];
  swift_bridgeObjectRelease();
  uint64_t v758 = v750[19];
  uint64_t v759 = &__srca[v758];
  v987 = (char *)v318 + v758;
  int v760 = v997();
  int v761 = ((uint64_t (*)(char *, uint64_t, uint64_t))v997)(v759, 1, v751);
  if (v760)
  {
    if (v761)
    {
      uint64_t v762 = sub_1A07856F8(&qword_1E94FBB08);
      memcpy(v987, v759, *(void *)(*(void *)(v762 - 8) + 64));
      long long v763 = v1024;
      uint64_t v764 = v619;
      goto LABEL_313;
    }
    uint64_t v764 = v619;
    (*(void (**)(char *, char *, uint64_t))(v989 + 32))(v987, v759, v619);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v989 + 56))(v987, 0, 1, v619);
  }
  else
  {
    uint64_t v764 = v619;
    if (v761)
    {
      (*(void (**)(char *, uint64_t))(v989 + 8))(v987, v619);
      uint64_t v765 = sub_1A07856F8(&qword_1E94FBB08);
      memcpy(v987, v759, *(void *)(*(void *)(v765 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v989 + 40))(v987, v759, v619);
    }
  }
  long long v763 = v1024;
LABEL_313:
  uint64_t v766 = v763[20];
  uint64_t v767 = &__srca[v766];
  uint64_t v988 = (char *)v318 + v766;
  int v768 = v997();
  int v769 = ((uint64_t (*)(char *, uint64_t, uint64_t))v997)(v767, 1, v764);
  if (v768)
  {
    if (v769)
    {
      size_t v770 = *(void *)(*(void *)(sub_1A07856F8(&qword_1E94FBB08) - 8) + 64);
      uint64_t v771 = v988;
LABEL_318:
      memcpy(v771, v767, v770);
      goto LABEL_321;
    }
    (*(void (**)(char *, char *, uint64_t))(v989 + 32))(v988, v767, v619);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v989 + 56))(v988, 0, 1, v619);
  }
  else
  {
    if (v769)
    {
      (*(void (**)(char *, uint64_t))(v989 + 8))(v988, v619);
      size_t v770 = *(void *)(*(void *)(sub_1A07856F8(&qword_1E94FBB08) - 8) + 64);
      uint64_t v771 = v988;
      goto LABEL_318;
    }
    (*(void (**)(char *, char *, uint64_t))(v989 + 40))(v988, v767, v619);
  }
LABEL_321:
  *(void *)((char *)v318 + v1024[21]) = *(void *)&__srca[v1024[21]];
  swift_bridgeObjectRelease();
  uint64_t v772 = v1024[22];
  uint64_t v773 = (uint64_t)v318 + v772;
  v774 = &__srca[v772];
  unint64_t v775 = *(void *)((char *)v318 + v772 + 8);
  if (v775 >> 60 == 15)
  {
LABEL_324:
    *(_OWORD *)uint64_t v773 = *(_OWORD *)v774;
    goto LABEL_326;
  }
  unint64_t v776 = *((void *)v774 + 1);
  if (v776 >> 60 == 15)
  {
    sub_1A0900E28(v773);
    goto LABEL_324;
  }
  uint64_t v777 = *(void *)v773;
  *(void *)uint64_t v773 = *(void *)v774;
  *(void *)(v773 + 8) = v776;
  sub_1A08AF2E4(v777, v775);
LABEL_326:
  uint64_t v778 = v1024[23];
  v779 = (void *)((char *)v318 + v778);
  v780 = &__srca[v778];
  uint64_t v782 = *(void *)v780;
  uint64_t v781 = *((void *)v780 + 1);
  void *v779 = v782;
  v779[1] = v781;
  swift_bridgeObjectRelease();
  uint64_t v783 = v1024[24];
  uint64_t v784 = (char *)v318 + v783;
  uint64_t v785 = &__srca[v783];
  *(void *)uint64_t v784 = *(void *)v785;
  v784[8] = v785[8];
  uint64_t v786 = v1024[25];
  uint64_t v787 = (char *)v318 + v786;
  uint64_t v788 = &__srca[v786];
  v787[8] = v788[8];
  *(void *)uint64_t v787 = *(void *)v788;
  *((unsigned char *)v318 + v1024[26]) = __srca[v1024[26]];
  uint64_t v789 = v1024[27];
  v790 = &__srca[v789];
  v1003 = (char *)v318 + v789;
  int v791 = v1033();
  unsigned int v792 = ((uint64_t (*)(char *, uint64_t, uint64_t))v1033)(v790, 1, v1018);
  if (v791)
  {
    uint64_t v366 = v1035;
    if (!v792)
    {
      (*(void (**)(char *, char *, uint64_t))(v1031 + 32))(v1003, v790, v1018);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v1031 + 56))(v1003, 0, 1, v1018);
      goto LABEL_334;
    }
    size_t v793 = *(void *)(*(void *)(sub_1A07856F8((uint64_t *)&unk_1E94FAF20) - 8) + 64);
    uint64_t v794 = v1003;
  }
  else
  {
    uint64_t v366 = v1035;
    if (!v792)
    {
      (*(void (**)(char *, char *, uint64_t))(v1031 + 40))(v1003, v790, v1018);
      goto LABEL_334;
    }
    (*(void (**)(char *, uint64_t))(v1031 + 8))(v1003, v1018);
    size_t v793 = *(void *)(*(void *)(sub_1A07856F8((uint64_t *)&unk_1E94FAF20) - 8) + 64);
    uint64_t v794 = v1003;
  }
  memcpy(v794, v790, v793);
LABEL_334:
  *(void *)((char *)v318 + v1024[28]) = *(void *)&__srca[v1024[28]];
  swift_bridgeObjectRelease();
  uint64_t v795 = v1024[29];
  v796 = (void *)((char *)v318 + v795);
  unint64_t v797 = &__srca[v795];
  uint64_t v799 = *(void *)v797;
  uint64_t v798 = *((void *)v797 + 1);
  void *v796 = v799;
  v796[1] = v798;
  swift_bridgeObjectRelease();
  *((unsigned char *)v318 + v1024[30]) = __srca[v1024[30]];
LABEL_159:
  uint64_t v367 = v366[40];
  v368 = (void *)(v19 + v367);
  uint64_t v369 = (uint64_t *)(v20 + v367);
  uint64_t v371 = *v369;
  uint64_t v370 = v369[1];
  void *v368 = v371;
  v368[1] = v370;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v19 + v366[41]) = *(unsigned char *)(v20 + v366[41]);
  uint64_t v372 = v366[42];
  uint64_t v373 = (void *)(v19 + v372);
  uint64_t v374 = (uint64_t *)(v20 + v372);
  uint64_t v376 = *v374;
  uint64_t v375 = v374[1];
  *uint64_t v373 = v376;
  v373[1] = v375;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v19 + v366[43]) = *(unsigned char *)(v20 + v366[43]);
  *(unsigned char *)(v19 + v366[44]) = *(unsigned char *)(v20 + v366[44]);
  *(unsigned char *)(v19 + v366[45]) = *(unsigned char *)(v20 + v366[45]);
  *(unsigned char *)(v19 + v366[46]) = *(unsigned char *)(v20 + v366[46]);
  uint64_t v377 = v366[47];
  uint64_t v378 = (void *)(v19 + v377);
  uint64_t v379 = (uint64_t *)(v20 + v377);
  uint64_t v381 = *v379;
  uint64_t v380 = v379[1];
  *uint64_t v378 = v381;
  v378[1] = v380;
  swift_bridgeObjectRelease();
  uint64_t v382 = v366[48];
  uint64_t v383 = (void *)(v19 + v382);
  unint64_t v384 = (uint64_t *)(v20 + v382);
  uint64_t v386 = *v384;
  uint64_t v385 = v384[1];
  *uint64_t v383 = v386;
  v383[1] = v385;
  swift_bridgeObjectRelease();
  *(void *)(v19 + v366[49]) = *(void *)(v20 + v366[49]);
  swift_bridgeObjectRelease();
  uint64_t v387 = v366[50];
  uint64_t v388 = (void *)(v19 + v387);
  uint64_t v389 = (uint64_t *)(v20 + v387);
  uint64_t v391 = *v389;
  uint64_t v390 = v389[1];
  *uint64_t v388 = v391;
  v388[1] = v390;
  swift_bridgeObjectRelease();
  uint64_t v392 = v366[51];
  uint64_t v393 = (void *)(v19 + v392);
  uint64_t v394 = (uint64_t *)(v20 + v392);
  uint64_t v396 = *v394;
  uint64_t v395 = v394[1];
  *uint64_t v393 = v396;
  v393[1] = v395;
  swift_bridgeObjectRelease();
  uint64_t v397 = v366[52];
  uint64_t v398 = (void *)(v19 + v397);
  uint64_t v399 = (const void *)(v20 + v397);
  uint64_t v400 = v1018;
  unsigned int v401 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v1033)(v19 + v397, 1, v1018);
  unsigned int v402 = ((uint64_t (*)(const void *, uint64_t, uint64_t))v1033)(v399, 1, v1018);
  if (v401)
  {
    unsigned int v403 = v1028;
    if (!v402)
    {
      (*(void (**)(void *, const void *, uint64_t))(v1031 + 32))(v398, v399, v1018);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v1031 + 56))(v398, 0, 1, v1018);
      goto LABEL_165;
    }
    goto LABEL_164;
  }
  unsigned int v403 = v1028;
  if (v402)
  {
    (*(void (**)(void *, uint64_t))(v1031 + 8))(v398, v1018);
LABEL_164:
    uint64_t v404 = sub_1A07856F8((uint64_t *)&unk_1E94FAF20);
    memcpy(v398, v399, *(void *)(*(void *)(v404 - 8) + 64));
    goto LABEL_165;
  }
  (*(void (**)(void *, const void *, uint64_t))(v1031 + 40))(v398, v399, v1018);
LABEL_165:
  uint64_t v405 = v1035[53];
  uint64_t v406 = v19 + v405;
  uint64_t v407 = v20 + v405;
  *(void *)uint64_t v406 = *(void *)v407;
  *(unsigned char *)(v406 + 8) = *(unsigned char *)(v407 + 8);
  uint64_t v408 = v1035[54];
  uint64_t v409 = v19 + v408;
  uint64_t v410 = v20 + v408;
  *(unsigned char *)(v409 + 8) = *(unsigned char *)(v410 + 8);
  *(void *)uint64_t v409 = *(void *)v410;
  uint64_t v411 = v1035[55];
  unint64_t v412 = (void *)(v19 + v411);
  uint64_t v413 = (uint64_t *)(v20 + v411);
  uint64_t v415 = *v413;
  uint64_t v414 = v413[1];
  *unint64_t v412 = v415;
  v412[1] = v414;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v19 + v1035[56]) = *(unsigned char *)(v20 + v1035[56]);
  *(unsigned char *)(v19 + v1035[57]) = *(unsigned char *)(v20 + v1035[57]);
  uint64_t v416 = v1035[58];
  uint64_t v417 = (void *)(v19 + v416);
  uint64_t v418 = (uint64_t *)(v20 + v416);
  uint64_t v420 = *v418;
  uint64_t v419 = v418[1];
  *uint64_t v417 = v420;
  v417[1] = v419;
  swift_bridgeObjectRelease();
  uint64_t v421 = v1035[59];
  uint64_t v422 = (void *)(v19 + v421);
  uint64_t v423 = (uint64_t *)(v20 + v421);
  uint64_t v425 = *v423;
  uint64_t v424 = v423[1];
  *uint64_t v422 = v425;
  v422[1] = v424;
  swift_bridgeObjectRelease();
  uint64_t v426 = v1035[60];
  uint64_t v427 = (void *)(v19 + v426);
  uint64_t v428 = (uint64_t *)(v20 + v426);
  uint64_t v430 = *v428;
  uint64_t v429 = v428[1];
  void *v427 = v430;
  v427[1] = v429;
  swift_bridgeObjectRelease();
  uint64_t v431 = v1035[61];
  uint64_t v432 = v19 + v431;
  uint64_t v433 = v20 + v431;
  *(void *)uint64_t v432 = *(void *)v433;
  *(unsigned char *)(v432 + 8) = *(unsigned char *)(v433 + 8);
  uint64_t v434 = v1035[62];
  uint64_t v435 = (void *)(v19 + v434);
  uint64_t v436 = (uint64_t *)(v20 + v434);
  uint64_t v438 = *v436;
  uint64_t v437 = v436[1];
  *uint64_t v435 = v438;
  v435[1] = v437;
  swift_bridgeObjectRelease();
  uint64_t v439 = v1035[63];
  uint64_t v440 = v19 + v439;
  uint64_t v441 = v20 + v439;
  *(_DWORD *)uint64_t v440 = *(_DWORD *)v441;
  *(unsigned char *)(v440 + 4) = *(unsigned char *)(v441 + 4);
  uint64_t v442 = v1035[64];
  uint64_t v443 = (void *)(v19 + v442);
  uint64_t v444 = (uint64_t *)(v20 + v442);
  uint64_t v446 = *v444;
  uint64_t v445 = v444[1];
  void *v443 = v446;
  v443[1] = v445;
  swift_bridgeObjectRelease();
  uint64_t v447 = v1035[65];
  uint64_t v448 = v19 + v447;
  uint64_t v449 = v20 + v447;
  *(void *)uint64_t v448 = *(void *)v449;
  *(unsigned char *)(v448 + 8) = *(unsigned char *)(v449 + 8);
  uint64_t v450 = v1035[66];
  uint64_t v451 = v19 + v450;
  uint64_t v452 = v20 + v450;
  *(unsigned char *)(v451 + 16) = *(unsigned char *)(v452 + 16);
  *(_OWORD *)uint64_t v451 = *(_OWORD *)v452;
  uint64_t v453 = v1035[67];
  uint64_t v454 = (void *)(v19 + v453);
  uint64_t v455 = (uint64_t *)(v20 + v453);
  uint64_t v457 = *v455;
  uint64_t v456 = v455[1];
  void *v454 = v457;
  v454[1] = v456;
  swift_bridgeObjectRelease();
  *(void *)(v19 + v1035[68]) = *(void *)(v20 + v1035[68]);
  swift_bridgeObjectRelease();
  uint64_t v458 = v1035[69];
  uint64_t v459 = (void *)(v19 + v458);
  uint64_t v460 = (uint64_t *)(v20 + v458);
  uint64_t v462 = *v460;
  uint64_t v461 = v460[1];
  void *v459 = v462;
  v459[1] = v461;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v19 + v1035[70]) = *(unsigned char *)(v20 + v1035[70]);
  *(unsigned char *)(v19 + v1035[71]) = *(unsigned char *)(v20 + v1035[71]);
  *(unsigned char *)(v19 + v1035[72]) = *(unsigned char *)(v20 + v1035[72]);
  uint64_t v463 = v1035[73];
  uint64_t v464 = v19 + v463;
  uint64_t v465 = v20 + v463;
  *(void *)uint64_t v464 = *(void *)v465;
  *(unsigned char *)(v464 + 8) = *(unsigned char *)(v465 + 8);
  uint64_t v466 = v403[5];
  uint64_t v467 = v19 + v466;
  uint64_t v468 = v20 + v466;
  uint64_t v469 = *((void *)v1035 - 1);
  uint64_t v470 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v469 + 48);
  int v471 = v470(v467, 1, v1035);
  int v472 = v470(v468, 1, v1035);
  if (!v471)
  {
    if (v472)
    {
      sub_1A090C884(v467, type metadata accessor for RemoteIntentItemContent);
      goto LABEL_171;
    }
    if (*(void *)(v467 + 8) != 1)
    {
      uint64_t v480 = *(void *)(v468 + 8);
      if (v480 != 1)
      {
        *(void *)uint64_t v467 = *(void *)v468;
        *(void *)(v467 + 8) = v480;
        swift_bridgeObjectRelease();
        uint64_t v550 = *(void *)(v468 + 24);
        *(void *)(v467 + 16) = *(void *)(v468 + 16);
        *(void *)(v467 + 24) = v550;
        swift_bridgeObjectRelease();
        uint64_t v551 = *(void *)(v468 + 40);
        *(void *)(v467 + 32) = *(void *)(v468 + 32);
        *(void *)(v467 + 40) = v551;
        swift_bridgeObjectRelease();
        uint64_t v552 = *(void *)(v468 + 56);
        *(void *)(v467 + 48) = *(void *)(v468 + 48);
        *(void *)(v467 + 56) = v552;
        swift_bridgeObjectRelease();
        *(unsigned char *)(v467 + 64) = *(unsigned char *)(v468 + 64);
LABEL_205:
        uint64_t v553 = *(void *)(v468 + 80);
        *(void *)(v467 + 72) = *(void *)(v468 + 72);
        *(void *)(v467 + 80) = v553;
        swift_bridgeObjectRelease();
        uint64_t v554 = *(void *)(v468 + 96);
        *(void *)(v467 + 88) = *(void *)(v468 + 88);
        *(void *)(v467 + 96) = v554;
        swift_bridgeObjectRelease();
        uint64_t v555 = *(void *)(v468 + 112);
        *(void *)(v467 + 104) = *(void *)(v468 + 104);
        *(void *)(v467 + 112) = v555;
        swift_bridgeObjectRelease();
        uint64_t v556 = *(void *)(v468 + 128);
        *(void *)(v467 + 120) = *(void *)(v468 + 120);
        *(void *)(v467 + 128) = v556;
        swift_bridgeObjectRelease();
        uint64_t v557 = *(void *)(v468 + 144);
        *(void *)(v467 + 136) = *(void *)(v468 + 136);
        *(void *)(v467 + 144) = v557;
        swift_bridgeObjectRelease();
        uint64_t v558 = *(void *)(v468 + 160);
        *(void *)(v467 + 152) = *(void *)(v468 + 152);
        *(void *)(v467 + 160) = v558;
        swift_bridgeObjectRelease();
        uint64_t v559 = *(void *)(v468 + 176);
        *(void *)(v467 + 168) = *(void *)(v468 + 168);
        *(void *)(v467 + 176) = v559;
        swift_bridgeObjectRelease();
        uint64_t v560 = *(void *)(v468 + 192);
        *(void *)(v467 + 184) = *(void *)(v468 + 184);
        *(void *)(v467 + 192) = v560;
        swift_bridgeObjectRelease();
        *(void *)(v467 + 200) = *(void *)(v468 + 200);
        *(_WORD *)(v467 + 208) = *(_WORD *)(v468 + 208);
        uint64_t v561 = *(void *)(v468 + 224);
        *(void *)(v467 + 216) = *(void *)(v468 + 216);
        *(void *)(v467 + 224) = v561;
        swift_bridgeObjectRelease();
        uint64_t v562 = v1035[16];
        v563 = (void *)(v467 + v562);
        v564 = (const void *)(v468 + v562);
        unsigned int v565 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v1033)(v467 + v562, 1, v1018);
        unsigned int v566 = ((uint64_t (*)(const void *, uint64_t, uint64_t))v1033)(v564, 1, v1018);
        if (v565)
        {
          if (!v566)
          {
            (*(void (**)(void *, const void *, uint64_t))(v1031 + 32))(v563, v564, v1018);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v1031 + 56))(v563, 0, 1, v1018);
            goto LABEL_211;
          }
        }
        else
        {
          if (!v566)
          {
            (*(void (**)(void *, const void *, uint64_t))(v1031 + 40))(v563, v564, v1018);
LABEL_211:
            uint64_t v568 = v1035[17];
            uint64_t v569 = v467 + v568;
            uint64_t v570 = v468 + v568;
            *(void *)uint64_t v569 = *(void *)v570;
            *(unsigned char *)(v569 + 8) = *(unsigned char *)(v570 + 8);
            uint64_t v571 = v1035[18];
            v572 = (void *)(v467 + v571);
            uint64_t v573 = (uint64_t *)(v468 + v571);
            uint64_t v575 = *v573;
            uint64_t v574 = v573[1];
            void *v572 = v575;
            v572[1] = v574;
            swift_bridgeObjectRelease();
            uint64_t v576 = v1035[19];
            v577 = (void *)(v467 + v576);
            v578 = (uint64_t *)(v468 + v576);
            uint64_t v580 = *v578;
            uint64_t v579 = v578[1];
            void *v577 = v580;
            v577[1] = v579;
            swift_bridgeObjectRelease();
            uint64_t v581 = v1035[20];
            uint64_t v582 = (void *)(v467 + v581);
            v583 = (uint64_t *)(v468 + v581);
            uint64_t v585 = *v583;
            uint64_t v584 = v583[1];
            *uint64_t v582 = v585;
            v582[1] = v584;
            swift_bridgeObjectRelease();
            uint64_t v586 = v1035[21];
            v587 = (void *)(v467 + v586);
            v588 = (uint64_t *)(v468 + v586);
            uint64_t v590 = *v588;
            uint64_t v589 = v588[1];
            void *v587 = v590;
            v587[1] = v589;
            swift_bridgeObjectRelease();
            uint64_t v591 = v1035[22];
            uint64_t v592 = v467 + v591;
            uint64_t v593 = v468 + v591;
            *(void *)uint64_t v592 = *(void *)v593;
            *(unsigned char *)(v592 + 8) = *(unsigned char *)(v593 + 8);
            uint64_t v594 = v1035[23];
            uint64_t v595 = (void *)(v467 + v594);
            v596 = (uint64_t *)(v468 + v594);
            uint64_t v598 = *v596;
            uint64_t v597 = v596[1];
            *uint64_t v595 = v598;
            v595[1] = v597;
            swift_bridgeObjectRelease();
            uint64_t v599 = v1035[24];
            v600 = (void *)(v467 + v599);
            v601 = (uint64_t *)(v468 + v599);
            uint64_t v603 = *v601;
            uint64_t v602 = v601[1];
            void *v600 = v603;
            v600[1] = v602;
            swift_bridgeObjectRelease();
            uint64_t v604 = v1035[25];
            v605 = (uint64_t *)(v467 + v604);
            uint64_t v606 = (uint64_t *)(v468 + v604);
            unint64_t v607 = *(void *)(v467 + v604 + 8);
            if (v607 >> 60 != 15)
            {
              unint64_t v608 = v606[1];
              if (v608 >> 60 != 15)
              {
                uint64_t v624 = *v605;
                uint64_t *v605 = *v606;
                v605[1] = v608;
                sub_1A08AF2E4(v624, v607);
LABEL_223:
                uint64_t v625 = v1035[26];
                uint64_t v626 = (void *)(v467 + v625);
                uint64_t v627 = (uint64_t *)(v468 + v625);
                uint64_t v629 = *v627;
                uint64_t v628 = v627[1];
                *uint64_t v626 = v629;
                v626[1] = v628;
                swift_bridgeObjectRelease();
                *(void *)(v467 + v1035[27]) = *(void *)(v468 + v1035[27]);
                swift_bridgeObjectRelease();
                uint64_t v630 = v1035[28];
                size_t v631 = (uint64_t *)(v467 + v630);
                v632 = (uint64_t *)(v468 + v630);
                unint64_t v633 = *(void *)(v467 + v630 + 8);
                if (v633 >> 60 != 15)
                {
                  unint64_t v634 = v632[1];
                  if (v634 >> 60 != 15)
                  {
                    uint64_t v635 = *v631;
                    *size_t v631 = *v632;
                    v631[1] = v634;
                    sub_1A08AF2E4(v635, v633);
LABEL_228:
                    uint64_t v636 = v1035[29];
                    int v637 = (void *)(v467 + v636);
                    uint64_t v638 = (const void *)(v468 + v636);
                    unsigned int v639 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v1033)(v467 + v636, 1, v1018);
                    unsigned int v640 = ((uint64_t (*)(const void *, uint64_t, uint64_t))v1033)(v638, 1, v1018);
                    if (v639)
                    {
                      if (!v640)
                      {
                        (*(void (**)(void *, const void *, uint64_t))(v1031 + 32))(v637, v638, v1018);
                        (*(void (**)(void *, void, uint64_t, uint64_t))(v1031 + 56))(v637, 0, 1, v1018);
                        goto LABEL_234;
                      }
                    }
                    else
                    {
                      if (!v640)
                      {
                        (*(void (**)(void *, const void *, uint64_t))(v1031 + 40))(v637, v638, v1018);
LABEL_234:
                        uint64_t v642 = v1035[30];
                        int v643 = (void *)(v467 + v642);
                        int v644 = (const void *)(v468 + v642);
                        unsigned int v645 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v1033)(v467 + v642, 1, v1018);
                        unsigned int v646 = ((uint64_t (*)(const void *, uint64_t, uint64_t))v1033)(v644, 1, v1018);
                        if (v645)
                        {
                          if (!v646)
                          {
                            (*(void (**)(void *, const void *, uint64_t))(v1031 + 32))(v643, v644, v1018);
                            (*(void (**)(void *, void, uint64_t, uint64_t))(v1031 + 56))(v643, 0, 1, v1018);
                            goto LABEL_240;
                          }
                        }
                        else
                        {
                          if (!v646)
                          {
                            (*(void (**)(void *, const void *, uint64_t))(v1031 + 40))(v643, v644, v1018);
LABEL_240:
                            uint64_t v648 = v1035[31];
                            v649 = (void *)(v467 + v648);
                            unint64_t v650 = (const void *)(v468 + v648);
                            unsigned int v651 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v1033)(v467 + v648, 1, v1018);
                            unsigned int v652 = ((uint64_t (*)(const void *, uint64_t, uint64_t))v1033)(v650, 1, v1018);
                            if (v651)
                            {
                              if (!v652)
                              {
                                (*(void (**)(void *, const void *, uint64_t))(v1031 + 32))(v649, v650, v1018);
                                (*(void (**)(void *, void, uint64_t, uint64_t))(v1031 + 56))(v649, 0, 1, v1018);
                                goto LABEL_246;
                              }
                            }
                            else
                            {
                              if (!v652)
                              {
                                (*(void (**)(void *, const void *, uint64_t))(v1031 + 40))(v649, v650, v1018);
LABEL_246:
                                uint64_t v654 = v1035[32];
                                uint64_t v655 = v467 + v654;
                                uint64_t v656 = v468 + v654;
                                *(void *)uint64_t v655 = *(void *)v656;
                                *(unsigned char *)(v655 + 8) = *(unsigned char *)(v656 + 8);
                                *(unsigned char *)(v467 + v1035[33]) = *(unsigned char *)(v468 + v1035[33]);
                                uint64_t v657 = v1035[34];
                                uint64_t v658 = (uint64_t *)(v467 + v657);
                                uint64_t v659 = (uint64_t *)(v468 + v657);
                                unint64_t v660 = *(void *)(v467 + v657 + 8);
                                if (v660 >> 60 != 15)
                                {
                                  unint64_t v661 = v659[1];
                                  if (v661 >> 60 != 15)
                                  {
                                    uint64_t v662 = *v658;
                                    *uint64_t v658 = *v659;
                                    v658[1] = v661;
                                    sub_1A08AF2E4(v662, v660);
LABEL_251:
                                    uint64_t v663 = v1035[35];
                                    v664 = (void *)(v467 + v663);
                                    uint64_t v665 = (uint64_t *)(v468 + v663);
                                    uint64_t v667 = *v665;
                                    uint64_t v666 = v665[1];
                                    void *v664 = v667;
                                    v664[1] = v666;
                                    swift_bridgeObjectRelease();
                                    uint64_t v668 = v1035[36];
                                    size_t v669 = (void *)(v467 + v668);
                                    v670 = (const void *)(v468 + v668);
                                    unsigned int v671 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v1033)(v467 + v668, 1, v1018);
                                    unsigned int v672 = ((uint64_t (*)(const void *, uint64_t, uint64_t))v1033)(v670, 1, v1018);
                                    if (v671)
                                    {
                                      if (!v672)
                                      {
                                        (*(void (**)(void *, const void *, uint64_t))(v1031 + 32))(v669, v670, v1018);
                                        (*(void (**)(void *, void, uint64_t, uint64_t))(v1031 + 56))(v669, 0, 1, v1018);
                                        goto LABEL_257;
                                      }
                                    }
                                    else
                                    {
                                      if (!v672)
                                      {
                                        (*(void (**)(void *, const void *, uint64_t))(v1031 + 40))(v669, v670, v1018);
LABEL_257:
                                        uint64_t v674 = v1035[37];
                                        uint64_t v675 = v467 + v674;
                                        uint64_t v676 = v468 + v674;
                                        *(void *)uint64_t v675 = *(void *)v676;
                                        *(unsigned char *)(v675 + 8) = *(unsigned char *)(v676 + 8);
                                        uint64_t v677 = v1035[38];
                                        v678 = (uint64_t *)(v467 + v677);
                                        v679 = (uint64_t *)(v468 + v677);
                                        unint64_t v680 = *(void *)(v467 + v677 + 8);
                                        if (v680 >> 60 != 15)
                                        {
                                          unint64_t v681 = v679[1];
                                          if (v681 >> 60 != 15)
                                          {
                                            uint64_t v682 = *v678;
                                            uint64_t *v678 = *v679;
                                            v678[1] = v681;
                                            sub_1A08AF2E4(v682, v680);
LABEL_262:
                                            uint64_t v683 = v1035[39];
                                            v684 = (void *)(v468 + v683);
                                            __srcc = (char *)(v467 + v683);
                                            int v685 = v1013();
                                            v1029 = v684;
                                            int v686 = ((uint64_t (*)(void *, uint64_t, int *))v1013)(v684, 1, v1024);
                                            if (v685)
                                            {
                                              if (!v686)
                                              {
                                                long long v693 = *((_OWORD *)v684 + 1);
                                                *(_OWORD *)__srcc = *(_OWORD *)v684;
                                                *((_OWORD *)__srcc + 1) = v693;
                                                *((void *)__srcc + 4) = v684[4];
                                                __srcc[40] = *((unsigned char *)v684 + 40);
                                                long long v694 = *((_OWORD *)v684 + 4);
                                                *((_OWORD *)__srcc + 3) = *((_OWORD *)v684 + 3);
                                                *((_OWORD *)__srcc + 4) = v694;
                                                long long v695 = *((_OWORD *)v684 + 6);
                                                *((_OWORD *)__srcc + 5) = *((_OWORD *)v684 + 5);
                                                *((_OWORD *)__srcc + 6) = v695;
                                                __srcc[112] = *((unsigned char *)v684 + 112);
                                                __srcc[113] = *((unsigned char *)v684 + 113);
                                                *(_OWORD *)(__srcc + 120) = *(_OWORD *)(v684 + 15);
                                                __srcc[136] = *((unsigned char *)v684 + 136);
                                                *((_OWORD *)__srcc + 9) = *((_OWORD *)v684 + 9);
                                                uint64_t v696 = v1024[16];
                                                uint64_t v697 = &__srcc[v696];
                                                uint64_t v698 = (char *)v684 + v696;
                                                uint64_t v699 = sub_1A09F34B8();
                                                uint64_t v700 = *(void *)(v699 - 8);
                                                v1010 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v700 + 48);
                                                if (v1010(v698, 1, v699))
                                                {
                                                  uint64_t v701 = sub_1A07856F8(&qword_1E94FBB08);
                                                  memcpy(v697, v698, *(void *)(*(void *)(v701 - 8) + 64));
                                                }
                                                else
                                                {
                                                  (*(void (**)(char *, char *, uint64_t))(v700 + 32))(v697, v698, v699);
                                                  (*(void (**)(char *, void, uint64_t, uint64_t))(v700 + 56))(v697, 0, 1, v699);
                                                }
                                                uint64_t v800 = v1024[17];
                                                v801 = &__srcc[v800];
                                                uint64_t v802 = (char *)v684 + v800;
                                                if (v1010((char *)v684 + v800, 1, v699))
                                                {
                                                  uint64_t v803 = sub_1A07856F8(&qword_1E94FBB08);
                                                  memcpy(v801, v802, *(void *)(*(void *)(v803 - 8) + 64));
                                                }
                                                else
                                                {
                                                  (*(void (**)(char *, char *, uint64_t))(v700 + 32))(v801, v802, v699);
                                                  (*(void (**)(char *, void, uint64_t, uint64_t))(v700 + 56))(v801, 0, 1, v699);
                                                }
                                                *(void *)&__srcc[v1024[18]] = *(void *)((char *)v684 + v1024[18]);
                                                uint64_t v804 = v1024[19];
                                                unint64_t v805 = &__srcc[v804];
                                                uint64_t v806 = (char *)v684 + v804;
                                                if (v1010((char *)v684 + v804, 1, v699))
                                                {
                                                  uint64_t v807 = sub_1A07856F8(&qword_1E94FBB08);
                                                  memcpy(v805, v806, *(void *)(*(void *)(v807 - 8) + 64));
                                                }
                                                else
                                                {
                                                  (*(void (**)(char *, char *, uint64_t))(v700 + 32))(v805, v806, v699);
                                                  (*(void (**)(char *, void, uint64_t, uint64_t))(v700 + 56))(v805, 0, 1, v699);
                                                }
                                                uint64_t v808 = v1024[20];
                                                v809 = &__srcc[v808];
                                                uint64_t v810 = (char *)v684 + v808;
                                                if (v1010((char *)v684 + v808, 1, v699))
                                                {
                                                  uint64_t v811 = sub_1A07856F8(&qword_1E94FBB08);
                                                  memcpy(v809, v810, *(void *)(*(void *)(v811 - 8) + 64));
                                                }
                                                else
                                                {
                                                  (*(void (**)(char *, char *, uint64_t))(v700 + 32))(v809, v810, v699);
                                                  (*(void (**)(char *, void, uint64_t, uint64_t))(v700 + 56))(v809, 0, 1, v699);
                                                }
                                                *(void *)&__srcc[v1024[21]] = *(void *)((char *)v684 + v1024[21]);
                                                *(_OWORD *)&__srcc[v1024[22]] = *(_OWORD *)((char *)v684 + v1024[22]);
                                                *(_OWORD *)&__srcc[v1024[23]] = *(_OWORD *)((char *)v684 + v1024[23]);
                                                uint64_t v812 = v1024[24];
                                                v813 = &__srcc[v812];
                                                uint64_t v814 = (char *)v684 + v812;
                                                v813[8] = v814[8];
                                                *(void *)v813 = *(void *)v814;
                                                uint64_t v815 = v1024[25];
                                                v816 = &__srcc[v815];
                                                v817 = (char *)v684 + v815;
                                                *(void *)v816 = *(void *)v817;
                                                v816[8] = v817[8];
                                                __srcc[v1024[26]] = *((unsigned char *)v684 + v1024[26]);
                                                uint64_t v818 = v1024[27];
                                                uint64_t v819 = &__srcc[v818];
                                                uint64_t v820 = (char *)v684 + v818;
                                                uint64_t v400 = v1018;
                                                if (((unsigned int (*)(char *, uint64_t, uint64_t))v1033)((char *)v684 + v818, 1, v1018))
                                                {
                                                  uint64_t v821 = sub_1A07856F8((uint64_t *)&unk_1E94FAF20);
                                                  memcpy(v819, v820, *(void *)(*(void *)(v821 - 8) + 64));
                                                }
                                                else
                                                {
                                                  (*(void (**)(char *, char *, uint64_t))(v1031 + 32))(v819, v820, v1018);
                                                  (*(void (**)(char *, void, uint64_t, uint64_t))(v1031 + 56))(v819, 0, 1, v1018);
                                                }
                                                *(void *)&__srcc[v1024[28]] = *(void *)((char *)v684 + v1024[28]);
                                                *(_OWORD *)&__srcc[v1024[29]] = *(_OWORD *)((char *)v684 + v1024[29]);
                                                __srcc[v1024[30]] = *((unsigned char *)v684 + v1024[30]);
                                                (*(void (**)(char *, void, uint64_t))(v1005 + 56))(__srcc, 0, 1);
                                                goto LABEL_349;
                                              }
                                              size_t v687 = *(void *)(*(void *)(sub_1A07856F8(&qword_1E94FBB10) - 8) + 64);
                                              v688 = __srcc;
LABEL_267:
                                              memcpy(v688, v684, v687);
LABEL_349:
                                              uint64_t v822 = v1035;
                                              goto LABEL_350;
                                            }
                                            if (v686)
                                            {
                                              sub_1A090C884((uint64_t)__srcc, (uint64_t (*)(void))type metadata accessor for RemoteIntentMessageSummaryInfo);
                                              size_t v687 = *(void *)(*(void *)(sub_1A07856F8(&qword_1E94FBB10) - 8) + 64);
                                              v688 = __srcc;
                                              goto LABEL_267;
                                            }
                                            uint64_t v753 = v684[1];
                                            *(void *)__srcc = *v684;
                                            *((void *)__srcc + 1) = v753;
                                            swift_bridgeObjectRelease();
                                            int v754 = __srcc + 16;
                                            int v755 = v684 + 2;
                                            unint64_t v756 = *((void *)__srcc + 3);
                                            if (v756 >> 60 == 15)
                                            {
                                              *int v754 = *v755;
                                              long long v757 = v1024;
                                            }
                                            else
                                            {
                                              unint64_t v920 = v684[3];
                                              long long v757 = v1024;
                                              if (v920 >> 60 == 15)
                                              {
                                                sub_1A0900E28((uint64_t)(__srcc + 16));
                                                *int v754 = *v755;
                                              }
                                              else
                                              {
                                                uint64_t v921 = *((void *)__srcc + 2);
                                                *((void *)__srcc + 2) = *(void *)v755;
                                                *((void *)__srcc + 3) = v920;
                                                sub_1A08AF2E4(v921, v756);
                                              }
                                            }
                                            *((void *)__srcc + 4) = v1029[4];
                                            __srcc[40] = *((unsigned char *)v1029 + 40);
                                            uint64_t v922 = v1029[7];
                                            *((void *)__srcc + 6) = v1029[6];
                                            *((void *)__srcc + 7) = v922;
                                            swift_bridgeObjectRelease();
                                            uint64_t v923 = v1029[9];
                                            *((void *)__srcc + 8) = v1029[8];
                                            *((void *)__srcc + 9) = v923;
                                            swift_bridgeObjectRelease();
                                            uint64_t v924 = v1029[11];
                                            *((void *)__srcc + 10) = v1029[10];
                                            *((void *)__srcc + 11) = v924;
                                            swift_bridgeObjectRelease();
                                            uint64_t v925 = v1029[13];
                                            *((void *)__srcc + 12) = v1029[12];
                                            *((void *)__srcc + 13) = v925;
                                            swift_bridgeObjectRelease();
                                            *((_WORD *)__srcc + 56) = *((_WORD *)v1029 + 56);
                                            uint64_t v926 = v1029[16];
                                            *((void *)__srcc + 15) = v1029[15];
                                            *((void *)__srcc + 16) = v926;
                                            swift_bridgeObjectRelease();
                                            __srcc[136] = *((unsigned char *)v1029 + 136);
                                            uint64_t v927 = v1029[19];
                                            *((void *)__srcc + 18) = v1029[18];
                                            *((void *)__srcc + 19) = v927;
                                            swift_bridgeObjectRelease();
                                            uint64_t v928 = v757[16];
                                            uint64_t v929 = &__srcc[v928];
                                            uint64_t v930 = (char *)v1029 + v928;
                                            uint64_t v931 = sub_1A09F34B8();
                                            uint64_t v1004 = *(void *)(v931 - 8);
                                            v1006 = v929;
                                            v932 = *(uint64_t (**)(void))(v1004 + 48);
                                            LODWORD(v929) = ((uint64_t (*)(char *, uint64_t, uint64_t))v932)(v929, 1, v931);
                                            v1011 = v932;
                                            int v933 = ((uint64_t (*)(char *, uint64_t, uint64_t))v932)(v930, 1, v931);
                                            if (v929)
                                            {
                                              if (v933)
                                              {
                                                size_t v934 = *(void *)(*(void *)(sub_1A07856F8(&qword_1E94FBB08) - 8)
                                                                 + 64);
                                                v935 = v1006;
LABEL_366:
                                                memcpy(v935, v930, v934);
                                                goto LABEL_369;
                                              }
                                              (*(void (**)(char *, char *, uint64_t))(v1004 + 32))(v1006, v930, v931);
                                              (*(void (**)(char *, void, uint64_t, uint64_t))(v1004 + 56))(v1006, 0, 1, v931);
                                            }
                                            else
                                            {
                                              if (v933)
                                              {
                                                (*(void (**)(char *, uint64_t))(v1004 + 8))(v1006, v931);
                                                size_t v934 = *(void *)(*(void *)(sub_1A07856F8(&qword_1E94FBB08) - 8)
                                                                 + 64);
                                                v935 = v1006;
                                                goto LABEL_366;
                                              }
                                              (*(void (**)(char *, char *, uint64_t))(v1004 + 40))(v1006, v930, v931);
                                            }
LABEL_369:
                                            uint64_t v936 = v1024[17];
                                            unint64_t v937 = (char *)v1029 + v936;
                                            __dstc = &__srcc[v936];
                                            int v938 = v932();
                                            int v939 = ((uint64_t (*)(char *, uint64_t, uint64_t))v932)(v937, 1, v931);
                                            if (v938)
                                            {
                                              if (v939)
                                              {
                                                uint64_t v940 = sub_1A07856F8(&qword_1E94FBB08);
                                                memcpy(__dstc, v937, *(void *)(*(void *)(v940 - 8) + 64));
                                                unint64_t v941 = v1024;
                                                uint64_t v942 = v931;
                                                goto LABEL_377;
                                              }
                                              uint64_t v942 = v931;
                                              (*(void (**)(char *, char *, uint64_t))(v1004 + 32))(__dstc, v937, v931);
                                              (*(void (**)(char *, void, uint64_t, uint64_t))(v1004 + 56))(__dstc, 0, 1, v931);
                                            }
                                            else
                                            {
                                              uint64_t v942 = v931;
                                              if (v939)
                                              {
                                                (*(void (**)(char *, uint64_t))(v1004 + 8))(__dstc, v931);
                                                uint64_t v943 = sub_1A07856F8(&qword_1E94FBB08);
                                                memcpy(__dstc, v937, *(void *)(*(void *)(v943 - 8) + 64));
                                              }
                                              else
                                              {
                                                (*(void (**)(char *, char *, uint64_t))(v1004 + 40))(__dstc, v937, v931);
                                              }
                                            }
                                            unint64_t v941 = v1024;
LABEL_377:
                                            *(void *)&__srcc[v941[18]] = *(void *)((char *)v1029 + v941[18]);
                                            swift_bridgeObjectRelease();
                                            uint64_t v944 = v941[19];
                                            uint64_t v945 = (char *)v1029 + v944;
                                            v998 = &__srcc[v944];
                                            int v946 = v1011();
                                            int v947 = ((uint64_t (*)(char *, uint64_t, uint64_t))v1011)(v945, 1, v942);
                                            if (v946)
                                            {
                                              if (v947)
                                              {
                                                uint64_t v948 = sub_1A07856F8(&qword_1E94FBB08);
                                                memcpy(v998, v945, *(void *)(*(void *)(v948 - 8) + 64));
                                                unsigned int v949 = v1024;
                                                uint64_t v950 = v931;
                                                goto LABEL_385;
                                              }
                                              uint64_t v950 = v931;
                                              (*(void (**)(char *, char *, uint64_t))(v1004 + 32))(v998, v945, v931);
                                              (*(void (**)(char *, void, uint64_t, uint64_t))(v1004 + 56))(v998, 0, 1, v931);
                                            }
                                            else
                                            {
                                              uint64_t v950 = v931;
                                              if (v947)
                                              {
                                                (*(void (**)(char *, uint64_t))(v1004 + 8))(v998, v931);
                                                uint64_t v951 = sub_1A07856F8(&qword_1E94FBB08);
                                                memcpy(v998, v945, *(void *)(*(void *)(v951 - 8) + 64));
                                              }
                                              else
                                              {
                                                (*(void (**)(char *, char *, uint64_t))(v1004 + 40))(v998, v945, v931);
                                              }
                                            }
                                            unsigned int v949 = v1024;
LABEL_385:
                                            uint64_t v952 = v949[20];
                                            v953 = (char *)v1029 + v952;
                                            v999 = &__srcc[v952];
                                            int v954 = v1011();
                                            int v955 = ((uint64_t (*)(char *, uint64_t, uint64_t))v1011)(v953, 1, v950);
                                            if (v954)
                                            {
                                              if (v955)
                                              {
                                                size_t v956 = *(void *)(*(void *)(sub_1A07856F8(&qword_1E94FBB08) - 8)
                                                                 + 64);
                                                v957 = v999;
LABEL_390:
                                                memcpy(v957, v953, v956);
                                                goto LABEL_393;
                                              }
                                              (*(void (**)(char *, char *, uint64_t))(v1004 + 32))(v999, v953, v931);
                                              (*(void (**)(char *, void, uint64_t, uint64_t))(v1004 + 56))(v999, 0, 1, v931);
                                            }
                                            else
                                            {
                                              if (v955)
                                              {
                                                (*(void (**)(char *, uint64_t))(v1004 + 8))(v999, v931);
                                                size_t v956 = *(void *)(*(void *)(sub_1A07856F8(&qword_1E94FBB08) - 8)
                                                                 + 64);
                                                v957 = v999;
                                                goto LABEL_390;
                                              }
                                              (*(void (**)(char *, char *, uint64_t))(v1004 + 40))(v999, v953, v931);
                                            }
LABEL_393:
                                            *(void *)&__srcc[v1024[21]] = *(void *)((char *)v1029 + v1024[21]);
                                            swift_bridgeObjectRelease();
                                            uint64_t v958 = v1024[22];
                                            uint64_t v959 = (uint64_t *)&__srcc[v958];
                                            uint64_t v960 = (void *)((char *)v1029 + v958);
                                            unint64_t v961 = *(void *)&__srcc[v958 + 8];
                                            if (v961 >> 60 != 15)
                                            {
                                              unint64_t v962 = v960[1];
                                              if (v962 >> 60 != 15)
                                              {
                                                uint64_t v963 = *v959;
                                                *uint64_t v959 = *v960;
                                                v959[1] = v962;
                                                sub_1A08AF2E4(v963, v961);
                                                goto LABEL_398;
                                              }
                                              sub_1A0900E28((uint64_t)v959);
                                            }
                                            *(_OWORD *)uint64_t v959 = *(_OWORD *)v960;
LABEL_398:
                                            uint64_t v964 = v1024[23];
                                            v965 = &__srcc[v964];
                                            int v966 = (void *)((char *)v1029 + v964);
                                            uint64_t v968 = *v966;
                                            uint64_t v967 = v966[1];
                                            *(void *)v965 = v968;
                                            *((void *)v965 + 1) = v967;
                                            swift_bridgeObjectRelease();
                                            uint64_t v969 = v1024[24];
                                            v970 = &__srcc[v969];
                                            v971 = (char *)v1029 + v969;
                                            *(void *)v970 = *(void *)v971;
                                            v970[8] = v971[8];
                                            uint64_t v972 = v1024[25];
                                            v973 = &__srcc[v972];
                                            uint64_t v974 = (char *)v1029 + v972;
                                            v973[8] = v974[8];
                                            *(void *)v973 = *(void *)v974;
                                            __srcc[v1024[26]] = *((unsigned char *)v1029 + v1024[26]);
                                            uint64_t v975 = v1024[27];
                                            uint64_t v976 = (char *)v1029 + v975;
                                            v1012 = &__srcc[v975];
                                            int v977 = v1033();
                                            unsigned int v978 = ((uint64_t (*)(char *, uint64_t, uint64_t))v1033)(v976, 1, v1018);
                                            if (v977)
                                            {
                                              uint64_t v822 = v1035;
                                              if (v978)
                                              {
                                                uint64_t v979 = sub_1A07856F8((uint64_t *)&unk_1E94FAF20);
                                                memcpy(v1012, v976, *(void *)(*(void *)(v979 - 8) + 64));
                                                uint64_t v400 = v1018;
                                              }
                                              else
                                              {
                                                uint64_t v400 = v1018;
                                                (*(void (**)(char *, char *, uint64_t))(v1031 + 32))(v1012, v976, v1018);
                                                (*(void (**)(char *, void, uint64_t, uint64_t))(v1031 + 56))(v1012, 0, 1, v1018);
                                              }
                                            }
                                            else
                                            {
                                              uint64_t v822 = v1035;
                                              uint64_t v400 = v1018;
                                              if (v978)
                                              {
                                                (*(void (**)(char *, uint64_t))(v1031 + 8))(v1012, v1018);
                                                uint64_t v980 = sub_1A07856F8((uint64_t *)&unk_1E94FAF20);
                                                memcpy(v1012, v976, *(void *)(*(void *)(v980 - 8) + 64));
                                              }
                                              else
                                              {
                                                (*(void (**)(char *, char *, uint64_t))(v1031 + 40))(v1012, v976, v1018);
                                              }
                                            }
                                            *(void *)&__srcc[v1024[28]] = *(void *)((char *)v1029 + v1024[28]);
                                            swift_bridgeObjectRelease();
                                            uint64_t v981 = v1024[29];
                                            v982 = &__srcc[v981];
                                            v983 = (void *)((char *)v1029 + v981);
                                            uint64_t v985 = *v983;
                                            uint64_t v984 = v983[1];
                                            *(void *)v982 = v985;
                                            *((void *)v982 + 1) = v984;
                                            swift_bridgeObjectRelease();
                                            __srcc[v1024[30]] = *((unsigned char *)v1029 + v1024[30]);
LABEL_350:
                                            uint64_t v823 = v822[40];
                                            uint64_t v824 = (void *)(v467 + v823);
                                            v825 = (uint64_t *)(v468 + v823);
                                            uint64_t v827 = *v825;
                                            uint64_t v826 = v825[1];
                                            *uint64_t v824 = v827;
                                            v824[1] = v826;
                                            swift_bridgeObjectRelease();
                                            *(unsigned char *)(v467 + v822[41]) = *(unsigned char *)(v468 + v822[41]);
                                            uint64_t v828 = v822[42];
                                            v829 = (void *)(v467 + v828);
                                            v830 = (uint64_t *)(v468 + v828);
                                            uint64_t v832 = *v830;
                                            uint64_t v831 = v830[1];
                                            void *v829 = v832;
                                            v829[1] = v831;
                                            swift_bridgeObjectRelease();
                                            *(unsigned char *)(v467 + v822[43]) = *(unsigned char *)(v468 + v822[43]);
                                            *(unsigned char *)(v467 + v822[44]) = *(unsigned char *)(v468 + v822[44]);
                                            *(unsigned char *)(v467 + v822[45]) = *(unsigned char *)(v468 + v822[45]);
                                            *(unsigned char *)(v467 + v822[46]) = *(unsigned char *)(v468 + v822[46]);
                                            uint64_t v833 = v822[47];
                                            uint64_t v834 = (void *)(v467 + v833);
                                            uint64_t v835 = (uint64_t *)(v468 + v833);
                                            uint64_t v837 = *v835;
                                            uint64_t v836 = v835[1];
                                            *uint64_t v834 = v837;
                                            v834[1] = v836;
                                            swift_bridgeObjectRelease();
                                            uint64_t v838 = v822[48];
                                            uint64_t v839 = (void *)(v467 + v838);
                                            uint64_t v840 = (uint64_t *)(v468 + v838);
                                            uint64_t v842 = *v840;
                                            uint64_t v841 = v840[1];
                                            *uint64_t v839 = v842;
                                            v839[1] = v841;
                                            swift_bridgeObjectRelease();
                                            *(void *)(v467 + v822[49]) = *(void *)(v468 + v822[49]);
                                            swift_bridgeObjectRelease();
                                            uint64_t v843 = v822[50];
                                            uint64_t v844 = (void *)(v467 + v843);
                                            v845 = (uint64_t *)(v468 + v843);
                                            uint64_t v847 = *v845;
                                            uint64_t v846 = v845[1];
                                            *uint64_t v844 = v847;
                                            v844[1] = v846;
                                            swift_bridgeObjectRelease();
                                            uint64_t v848 = v822[51];
                                            unint64_t v849 = (void *)(v467 + v848);
                                            long long v850 = (uint64_t *)(v468 + v848);
                                            uint64_t v852 = *v850;
                                            uint64_t v851 = v850[1];
                                            *unint64_t v849 = v852;
                                            v849[1] = v851;
                                            swift_bridgeObjectRelease();
                                            uint64_t v853 = v822[52];
                                            uint64_t v854 = (void *)(v467 + v853);
                                            uint64_t v855 = (const void *)(v468 + v853);
                                            unsigned int v856 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v1033)(v467 + v853, 1, v400);
                                            unsigned int v857 = ((uint64_t (*)(const void *, uint64_t, uint64_t))v1033)(v855, 1, v400);
                                            if (v856)
                                            {
                                              if (!v857)
                                              {
                                                (*(void (**)(void *, const void *, uint64_t))(v1031 + 32))(v854, v855, v400);
                                                (*(void (**)(void *, void, uint64_t, uint64_t))(v1031 + 56))(v854, 0, 1, v400);
LABEL_356:
                                                uint64_t v859 = v1035[53];
                                                uint64_t v860 = v467 + v859;
                                                uint64_t v861 = v468 + v859;
                                                *(void *)uint64_t v860 = *(void *)v861;
                                                *(unsigned char *)(v860 + 8) = *(unsigned char *)(v861 + 8);
                                                uint64_t v862 = v1035[54];
                                                uint64_t v863 = v467 + v862;
                                                uint64_t v864 = v468 + v862;
                                                *(unsigned char *)(v863 + 8) = *(unsigned char *)(v864 + 8);
                                                *(void *)uint64_t v863 = *(void *)v864;
                                                uint64_t v865 = v1035[55];
                                                uint64_t v866 = (void *)(v467 + v865);
                                                uint64_t v867 = (uint64_t *)(v468 + v865);
                                                uint64_t v869 = *v867;
                                                uint64_t v868 = v867[1];
                                                *uint64_t v866 = v869;
                                                v866[1] = v868;
                                                swift_bridgeObjectRelease();
                                                *(unsigned char *)(v467 + v1035[56]) = *(unsigned char *)(v468 + v1035[56]);
                                                *(unsigned char *)(v467 + v1035[57]) = *(unsigned char *)(v468 + v1035[57]);
                                                uint64_t v870 = v1035[58];
                                                uint64_t v871 = (void *)(v467 + v870);
                                                v872 = (uint64_t *)(v468 + v870);
                                                uint64_t v874 = *v872;
                                                uint64_t v873 = v872[1];
                                                *uint64_t v871 = v874;
                                                v871[1] = v873;
                                                swift_bridgeObjectRelease();
                                                uint64_t v875 = v1035[59];
                                                v876 = (void *)(v467 + v875);
                                                uint64_t v877 = (uint64_t *)(v468 + v875);
                                                uint64_t v879 = *v877;
                                                uint64_t v878 = v877[1];
                                                void *v876 = v879;
                                                v876[1] = v878;
                                                swift_bridgeObjectRelease();
                                                uint64_t v880 = v1035[60];
                                                v881 = (void *)(v467 + v880);
                                                v882 = (uint64_t *)(v468 + v880);
                                                uint64_t v884 = *v882;
                                                uint64_t v883 = v882[1];
                                                void *v881 = v884;
                                                v881[1] = v883;
                                                swift_bridgeObjectRelease();
                                                uint64_t v885 = v1035[61];
                                                uint64_t v886 = v467 + v885;
                                                uint64_t v887 = v468 + v885;
                                                *(void *)uint64_t v886 = *(void *)v887;
                                                *(unsigned char *)(v886 + 8) = *(unsigned char *)(v887 + 8);
                                                uint64_t v888 = v1035[62];
                                                v889 = (void *)(v467 + v888);
                                                uint64_t v890 = (uint64_t *)(v468 + v888);
                                                uint64_t v892 = *v890;
                                                uint64_t v891 = v890[1];
                                                void *v889 = v892;
                                                v889[1] = v891;
                                                swift_bridgeObjectRelease();
                                                uint64_t v893 = v1035[63];
                                                uint64_t v894 = v467 + v893;
                                                uint64_t v895 = v468 + v893;
                                                *(_DWORD *)uint64_t v894 = *(_DWORD *)v895;
                                                *(unsigned char *)(v894 + 4) = *(unsigned char *)(v895 + 4);
                                                uint64_t v896 = v1035[64];
                                                uint64_t v897 = (void *)(v467 + v896);
                                                uint64_t v898 = (uint64_t *)(v468 + v896);
                                                uint64_t v900 = *v898;
                                                uint64_t v899 = v898[1];
                                                *uint64_t v897 = v900;
                                                v897[1] = v899;
                                                swift_bridgeObjectRelease();
                                                uint64_t v901 = v1035[65];
                                                uint64_t v902 = v467 + v901;
                                                uint64_t v903 = v468 + v901;
                                                *(void *)uint64_t v902 = *(void *)v903;
                                                *(unsigned char *)(v902 + 8) = *(unsigned char *)(v903 + 8);
                                                uint64_t v904 = v1035[66];
                                                uint64_t v905 = v467 + v904;
                                                uint64_t v906 = v468 + v904;
                                                *(unsigned char *)(v905 + 16) = *(unsigned char *)(v906 + 16);
                                                *(_OWORD *)uint64_t v905 = *(_OWORD *)v906;
                                                uint64_t v907 = v1035[67];
                                                uint64_t v908 = (void *)(v467 + v907);
                                                uint64_t v909 = (uint64_t *)(v468 + v907);
                                                uint64_t v911 = *v909;
                                                uint64_t v910 = v909[1];
                                                *uint64_t v908 = v911;
                                                v908[1] = v910;
                                                swift_bridgeObjectRelease();
                                                *(void *)(v467 + v1035[68]) = *(void *)(v468 + v1035[68]);
                                                swift_bridgeObjectRelease();
                                                uint64_t v912 = v1035[69];
                                                v913 = (void *)(v467 + v912);
                                                v914 = (uint64_t *)(v468 + v912);
                                                uint64_t v916 = *v914;
                                                uint64_t v915 = v914[1];
                                                void *v913 = v916;
                                                v913[1] = v915;
                                                swift_bridgeObjectRelease();
                                                *(unsigned char *)(v467 + v1035[70]) = *(unsigned char *)(v468 + v1035[70]);
                                                *(unsigned char *)(v467 + v1035[71]) = *(unsigned char *)(v468 + v1035[71]);
                                                *(unsigned char *)(v467 + v1035[72]) = *(unsigned char *)(v468 + v1035[72]);
                                                uint64_t v917 = v1035[73];
                                                uint64_t v918 = v467 + v917;
                                                uint64_t v919 = v468 + v917;
                                                *(void *)uint64_t v918 = *(void *)v919;
                                                *(unsigned char *)(v918 + 8) = *(unsigned char *)(v919 + 8);
                                                a3 = v1026;
                                                goto LABEL_184;
                                              }
                                            }
                                            else
                                            {
                                              if (!v857)
                                              {
                                                (*(void (**)(void *, const void *, uint64_t))(v1031 + 40))(v854, v855, v400);
                                                goto LABEL_356;
                                              }
                                              (*(void (**)(void *, uint64_t))(v1031 + 8))(v854, v400);
                                            }
                                            uint64_t v858 = sub_1A07856F8((uint64_t *)&unk_1E94FAF20);
                                            memcpy(v854, v855, *(void *)(*(void *)(v858 - 8) + 64));
                                            goto LABEL_356;
                                          }
                                          sub_1A0900E28((uint64_t)v678);
                                        }
                                        *(_OWORD *)v678 = *(_OWORD *)v679;
                                        goto LABEL_262;
                                      }
                                      (*(void (**)(void *, uint64_t))(v1031 + 8))(v669, v1018);
                                    }
                                    uint64_t v673 = sub_1A07856F8((uint64_t *)&unk_1E94FAF20);
                                    memcpy(v669, v670, *(void *)(*(void *)(v673 - 8) + 64));
                                    goto LABEL_257;
                                  }
                                  sub_1A0900E28((uint64_t)v658);
                                }
                                *(_OWORD *)uint64_t v658 = *(_OWORD *)v659;
                                goto LABEL_251;
                              }
                              (*(void (**)(void *, uint64_t))(v1031 + 8))(v649, v1018);
                            }
                            uint64_t v653 = sub_1A07856F8((uint64_t *)&unk_1E94FAF20);
                            memcpy(v649, v650, *(void *)(*(void *)(v653 - 8) + 64));
                            goto LABEL_246;
                          }
                          (*(void (**)(void *, uint64_t))(v1031 + 8))(v643, v1018);
                        }
                        uint64_t v647 = sub_1A07856F8((uint64_t *)&unk_1E94FAF20);
                        memcpy(v643, v644, *(void *)(*(void *)(v647 - 8) + 64));
                        goto LABEL_240;
                      }
                      (*(void (**)(void *, uint64_t))(v1031 + 8))(v637, v1018);
                    }
                    uint64_t v641 = sub_1A07856F8((uint64_t *)&unk_1E94FAF20);
                    memcpy(v637, v638, *(void *)(*(void *)(v641 - 8) + 64));
                    goto LABEL_234;
                  }
                  sub_1A0900E28((uint64_t)v631);
                }
                *(_OWORD *)size_t v631 = *(_OWORD *)v632;
                goto LABEL_228;
              }
              sub_1A0900E28((uint64_t)v605);
            }
            *(_OWORD *)v605 = *(_OWORD *)v606;
            goto LABEL_223;
          }
          (*(void (**)(void *, uint64_t))(v1031 + 8))(v563, v1018);
        }
        uint64_t v567 = sub_1A07856F8((uint64_t *)&unk_1E94FAF20);
        memcpy(v563, v564, *(void *)(*(void *)(v567 - 8) + 64));
        goto LABEL_211;
      }
      sub_1A0900DD4(v467);
    }
    long long v481 = *(_OWORD *)(v468 + 48);
    *(_OWORD *)(v467 + 32) = *(_OWORD *)(v468 + 32);
    *(_OWORD *)(v467 + 48) = v481;
    *(unsigned char *)(v467 + 64) = *(unsigned char *)(v468 + 64);
    long long v482 = *(_OWORD *)(v468 + 16);
    *(_OWORD *)uint64_t v467 = *(_OWORD *)v468;
    *(_OWORD *)(v467 + 16) = v482;
    goto LABEL_205;
  }
  if (v472)
  {
LABEL_171:
    uint64_t v479 = sub_1A07856F8(&qword_1E94FBB18);
    memcpy((void *)v467, (const void *)v468, *(void *)(*(void *)(v479 - 8) + 64));
    a3 = v1026;
    goto LABEL_184;
  }
  long long v473 = *(_OWORD *)(v468 + 48);
  *(_OWORD *)(v467 + 32) = *(_OWORD *)(v468 + 32);
  *(_OWORD *)(v467 + 48) = v473;
  *(unsigned char *)(v467 + 64) = *(unsigned char *)(v468 + 64);
  long long v474 = *(_OWORD *)(v468 + 16);
  *(_OWORD *)uint64_t v467 = *(_OWORD *)v468;
  *(_OWORD *)(v467 + 16) = v474;
  *(_OWORD *)(v467 + 72) = *(_OWORD *)(v468 + 72);
  *(_OWORD *)(v467 + 88) = *(_OWORD *)(v468 + 88);
  *(_OWORD *)(v467 + 104) = *(_OWORD *)(v468 + 104);
  *(_OWORD *)(v467 + 120) = *(_OWORD *)(v468 + 120);
  *(_OWORD *)(v467 + 136) = *(_OWORD *)(v468 + 136);
  *(_OWORD *)(v467 + 152) = *(_OWORD *)(v468 + 152);
  *(_OWORD *)(v467 + 168) = *(_OWORD *)(v468 + 168);
  *(_OWORD *)(v467 + 184) = *(_OWORD *)(v468 + 184);
  *(void *)(v467 + 200) = *(void *)(v468 + 200);
  *(_WORD *)(v467 + 208) = *(_WORD *)(v468 + 208);
  *(_OWORD *)(v467 + 216) = *(_OWORD *)(v468 + 216);
  uint64_t v475 = v1035[16];
  uint64_t v476 = (void *)(v467 + v475);
  uint64_t v477 = (const void *)(v468 + v475);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v1033)(v468 + v475, 1, v1018))
  {
    uint64_t v478 = sub_1A07856F8((uint64_t *)&unk_1E94FAF20);
    memcpy(v476, v477, *(void *)(*(void *)(v478 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v1031 + 32))(v476, v477, v1018);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v1031 + 56))(v476, 0, 1, v1018);
  }
  uint64_t v509 = v1035[17];
  uint64_t v510 = v467 + v509;
  uint64_t v511 = v468 + v509;
  *(void *)uint64_t v510 = *(void *)v511;
  *(unsigned char *)(v510 + 8) = *(unsigned char *)(v511 + 8);
  *(_OWORD *)(v467 + v1035[18]) = *(_OWORD *)(v468 + v1035[18]);
  *(_OWORD *)(v467 + v1035[19]) = *(_OWORD *)(v468 + v1035[19]);
  *(_OWORD *)(v467 + v1035[20]) = *(_OWORD *)(v468 + v1035[20]);
  *(_OWORD *)(v467 + v1035[21]) = *(_OWORD *)(v468 + v1035[21]);
  uint64_t v512 = v1035[22];
  uint64_t v513 = v467 + v512;
  uint64_t v514 = v468 + v512;
  *(unsigned char *)(v513 + 8) = *(unsigned char *)(v514 + 8);
  *(void *)uint64_t v513 = *(void *)v514;
  *(_OWORD *)(v467 + v1035[23]) = *(_OWORD *)(v468 + v1035[23]);
  *(_OWORD *)(v467 + v1035[24]) = *(_OWORD *)(v468 + v1035[24]);
  *(_OWORD *)(v467 + v1035[25]) = *(_OWORD *)(v468 + v1035[25]);
  *(_OWORD *)(v467 + v1035[26]) = *(_OWORD *)(v468 + v1035[26]);
  *(void *)(v467 + v1035[27]) = *(void *)(v468 + v1035[27]);
  *(_OWORD *)(v467 + v1035[28]) = *(_OWORD *)(v468 + v1035[28]);
  uint64_t v515 = v1035[29];
  uint64_t v516 = (void *)(v467 + v515);
  uint64_t v517 = (const void *)(v468 + v515);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v1033)(v468 + v515, 1, v1018))
  {
    uint64_t v518 = sub_1A07856F8((uint64_t *)&unk_1E94FAF20);
    memcpy(v516, v517, *(void *)(*(void *)(v518 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v1031 + 32))(v516, v517, v1018);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v1031 + 56))(v516, 0, 1, v1018);
  }
  uint64_t v519 = v1035[30];
  uint64_t v520 = (void *)(v467 + v519);
  uint64_t v521 = (const void *)(v468 + v519);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v1033)(v468 + v519, 1, v1018))
  {
    uint64_t v522 = sub_1A07856F8((uint64_t *)&unk_1E94FAF20);
    memcpy(v520, v521, *(void *)(*(void *)(v522 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v1031 + 32))(v520, v521, v1018);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v1031 + 56))(v520, 0, 1, v1018);
  }
  uint64_t v523 = v1035[31];
  uint64_t v524 = (void *)(v467 + v523);
  uint64_t v525 = (const void *)(v468 + v523);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v1033)(v468 + v523, 1, v1018))
  {
    uint64_t v526 = sub_1A07856F8((uint64_t *)&unk_1E94FAF20);
    memcpy(v524, v525, *(void *)(*(void *)(v526 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v1031 + 32))(v524, v525, v1018);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v1031 + 56))(v524, 0, 1, v1018);
  }
  uint64_t v527 = v1035[32];
  uint64_t v528 = v467 + v527;
  uint64_t v529 = v468 + v527;
  *(void *)uint64_t v528 = *(void *)v529;
  *(unsigned char *)(v528 + 8) = *(unsigned char *)(v529 + 8);
  *(unsigned char *)(v467 + v1035[33]) = *(unsigned char *)(v468 + v1035[33]);
  *(_OWORD *)(v467 + v1035[34]) = *(_OWORD *)(v468 + v1035[34]);
  *(_OWORD *)(v467 + v1035[35]) = *(_OWORD *)(v468 + v1035[35]);
  uint64_t v530 = v1035[36];
  uint64_t v531 = (void *)(v467 + v530);
  uint64_t v532 = (const void *)(v468 + v530);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v1033)(v468 + v530, 1, v1018))
  {
    uint64_t v533 = sub_1A07856F8((uint64_t *)&unk_1E94FAF20);
    memcpy(v531, v532, *(void *)(*(void *)(v533 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v1031 + 32))(v531, v532, v1018);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v1031 + 56))(v531, 0, 1, v1018);
  }
  uint64_t v534 = v1035[37];
  uint64_t v535 = v467 + v534;
  uint64_t v536 = v468 + v534;
  *(void *)uint64_t v535 = *(void *)v536;
  *(unsigned char *)(v535 + 8) = *(unsigned char *)(v536 + 8);
  *(_OWORD *)(v467 + v1035[38]) = *(_OWORD *)(v468 + v1035[38]);
  uint64_t v537 = v1035[39];
  uint64_t v538 = (_OWORD *)(v467 + v537);
  uint64_t v539 = (_OWORD *)(v468 + v537);
  if (((unsigned int (*)(uint64_t, uint64_t, int *))v1013)(v468 + v537, 1, v1024))
  {
    uint64_t v540 = sub_1A07856F8(&qword_1E94FBB10);
    memcpy(v538, v539, *(void *)(*(void *)(v540 - 8) + 64));
  }
  else
  {
    uint64_t v1002 = v469;
    long long v541 = v539[1];
    *uint64_t v538 = *v539;
    v538[1] = v541;
    *((void *)v538 + 4) = *((void *)v539 + 4);
    *((unsigned char *)v538 + 40) = *((unsigned char *)v539 + 40);
    long long v542 = v539[4];
    v538[3] = v539[3];
    v538[4] = v542;
    long long v543 = v539[6];
    v538[5] = v539[5];
    v538[6] = v543;
    *((unsigned char *)v538 + 112) = *((unsigned char *)v539 + 112);
    *((unsigned char *)v538 + 113) = *((unsigned char *)v539 + 113);
    *(_OWORD *)((char *)v538 + 120) = *(_OWORD *)((char *)v539 + 120);
    *((unsigned char *)v538 + 136) = *((unsigned char *)v539 + 136);
    v538[9] = v539[9];
    uint64_t v544 = v1024[16];
    uint64_t v1009 = (char *)v538 + v544;
    v545 = (char *)v539 + v544;
    uint64_t v546 = sub_1A09F34B8();
    uint64_t v547 = *(void *)(v546 - 8);
    __srcb = *(unsigned int (**)(char *, uint64_t, uint64_t))(v547 + 48);
    uint64_t v1016 = (void (**)(void *, const void *, uint64_t))v547;
    if (__srcb(v545, 1, v546))
    {
      uint64_t v548 = sub_1A07856F8(&qword_1E94FBB08);
      memcpy(v1009, v545, *(void *)(*(void *)(v548 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v547 + 32))(v1009, v545, v546);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v547 + 56))(v1009, 0, 1, v546);
    }
    uint64_t v689 = v1024[17];
    v690 = (char *)v538 + v689;
    v691 = (char *)v539 + v689;
    if (__srcb((char *)v539 + v689, 1, v546))
    {
      uint64_t v692 = sub_1A07856F8(&qword_1E94FBB08);
      memcpy(v690, v691, *(void *)(*(void *)(v692 - 8) + 64));
    }
    else
    {
      v1016[4](v690, v691, v546);
      ((void (*)(char *, void, uint64_t, uint64_t))v1016[7])(v690, 0, 1, v546);
    }
    *(void *)((char *)v538 + v1024[18]) = *(void *)((char *)v539 + v1024[18]);
    uint64_t v702 = v1024[19];
    uint64_t v703 = (char *)v538 + v702;
    v704 = (char *)v539 + v702;
    if (__srcb((char *)v539 + v702, 1, v546))
    {
      uint64_t v705 = sub_1A07856F8(&qword_1E94FBB08);
      memcpy(v703, v704, *(void *)(*(void *)(v705 - 8) + 64));
    }
    else
    {
      v1016[4](v703, v704, v546);
      ((void (*)(char *, void, uint64_t, uint64_t))v1016[7])(v703, 0, 1, v546);
    }
    uint64_t v706 = v1024[20];
    v707 = (char *)v538 + v706;
    v708 = (char *)v539 + v706;
    if (__srcb((char *)v539 + v706, 1, v546))
    {
      uint64_t v709 = sub_1A07856F8(&qword_1E94FBB08);
      memcpy(v707, v708, *(void *)(*(void *)(v709 - 8) + 64));
    }
    else
    {
      v1016[4](v707, v708, v546);
      ((void (*)(char *, void, uint64_t, uint64_t))v1016[7])(v707, 0, 1, v546);
    }
    *(void *)((char *)v538 + v1024[21]) = *(void *)((char *)v539 + v1024[21]);
    *(_OWORD *)((char *)v538 + v1024[22]) = *(_OWORD *)((char *)v539 + v1024[22]);
    *(_OWORD *)((char *)v538 + v1024[23]) = *(_OWORD *)((char *)v539 + v1024[23]);
    uint64_t v710 = v1024[24];
    v711 = (char *)v538 + v710;
    uint64_t v712 = (char *)v539 + v710;
    v711[8] = v712[8];
    *(void *)v711 = *(void *)v712;
    uint64_t v713 = v1024[25];
    v714 = (char *)v538 + v713;
    uint64_t v715 = (char *)v539 + v713;
    *(void *)v714 = *(void *)v715;
    v714[8] = v715[8];
    *((unsigned char *)v538 + v1024[26]) = *((unsigned char *)v539 + v1024[26]);
    uint64_t v716 = v1024[27];
    v717 = (char *)v538 + v716;
    uint64_t v718 = (char *)v539 + v716;
    uint64_t v400 = v1018;
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v1033)((char *)v539 + v716, 1, v1018))
    {
      uint64_t v719 = sub_1A07856F8((uint64_t *)&unk_1E94FAF20);
      memcpy(v717, v718, *(void *)(*(void *)(v719 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v1031 + 32))(v717, v718, v1018);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v1031 + 56))(v717, 0, 1, v1018);
    }
    *(void *)((char *)v538 + v1024[28]) = *(void *)((char *)v539 + v1024[28]);
    *(_OWORD *)((char *)v538 + v1024[29]) = *(_OWORD *)((char *)v539 + v1024[29]);
    *((unsigned char *)v538 + v1024[30]) = *((unsigned char *)v539 + v1024[30]);
    (*(void (**)(_OWORD *, void, uint64_t))(v1005 + 56))(v538, 0, 1);
    uint64_t v469 = v1002;
  }
  *(_OWORD *)(v467 + v1035[40]) = *(_OWORD *)(v468 + v1035[40]);
  *(unsigned char *)(v467 + v1035[41]) = *(unsigned char *)(v468 + v1035[41]);
  *(_OWORD *)(v467 + v1035[42]) = *(_OWORD *)(v468 + v1035[42]);
  *(unsigned char *)(v467 + v1035[43]) = *(unsigned char *)(v468 + v1035[43]);
  *(unsigned char *)(v467 + v1035[44]) = *(unsigned char *)(v468 + v1035[44]);
  *(unsigned char *)(v467 + v1035[45]) = *(unsigned char *)(v468 + v1035[45]);
  *(unsigned char *)(v467 + v1035[46]) = *(unsigned char *)(v468 + v1035[46]);
  *(_OWORD *)(v467 + v1035[47]) = *(_OWORD *)(v468 + v1035[47]);
  *(_OWORD *)(v467 + v1035[48]) = *(_OWORD *)(v468 + v1035[48]);
  *(void *)(v467 + v1035[49]) = *(void *)(v468 + v1035[49]);
  *(_OWORD *)(v467 + v1035[50]) = *(_OWORD *)(v468 + v1035[50]);
  *(_OWORD *)(v467 + v1035[51]) = *(_OWORD *)(v468 + v1035[51]);
  uint64_t v720 = v1035[52];
  uint64_t v721 = (void *)(v467 + v720);
  uint64_t v722 = (const void *)(v468 + v720);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v1033)(v468 + v720, 1, v400))
  {
    uint64_t v723 = sub_1A07856F8((uint64_t *)&unk_1E94FAF20);
    memcpy(v721, v722, *(void *)(*(void *)(v723 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v1031 + 32))(v721, v722, v400);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v1031 + 56))(v721, 0, 1, v400);
  }
  uint64_t v724 = v1035[53];
  uint64_t v725 = v467 + v724;
  uint64_t v726 = v468 + v724;
  *(void *)uint64_t v725 = *(void *)v726;
  *(unsigned char *)(v725 + 8) = *(unsigned char *)(v726 + 8);
  uint64_t v727 = v1035[54];
  uint64_t v728 = v467 + v727;
  uint64_t v729 = v468 + v727;
  *(unsigned char *)(v728 + 8) = *(unsigned char *)(v729 + 8);
  *(void *)uint64_t v728 = *(void *)v729;
  *(_OWORD *)(v467 + v1035[55]) = *(_OWORD *)(v468 + v1035[55]);
  *(unsigned char *)(v467 + v1035[56]) = *(unsigned char *)(v468 + v1035[56]);
  *(unsigned char *)(v467 + v1035[57]) = *(unsigned char *)(v468 + v1035[57]);
  *(_OWORD *)(v467 + v1035[58]) = *(_OWORD *)(v468 + v1035[58]);
  *(_OWORD *)(v467 + v1035[59]) = *(_OWORD *)(v468 + v1035[59]);
  *(_OWORD *)(v467 + v1035[60]) = *(_OWORD *)(v468 + v1035[60]);
  uint64_t v730 = v1035[61];
  uint64_t v731 = v467 + v730;
  uint64_t v732 = v468 + v730;
  *(unsigned char *)(v731 + 8) = *(unsigned char *)(v732 + 8);
  *(void *)uint64_t v731 = *(void *)v732;
  *(_OWORD *)(v467 + v1035[62]) = *(_OWORD *)(v468 + v1035[62]);
  uint64_t v733 = v1035[63];
  uint64_t v734 = v467 + v733;
  uint64_t v735 = v468 + v733;
  *(_DWORD *)uint64_t v734 = *(_DWORD *)v735;
  *(unsigned char *)(v734 + 4) = *(unsigned char *)(v735 + 4);
  *(_OWORD *)(v467 + v1035[64]) = *(_OWORD *)(v468 + v1035[64]);
  uint64_t v736 = v1035[65];
  uint64_t v737 = v467 + v736;
  uint64_t v738 = v468 + v736;
  *(void *)uint64_t v737 = *(void *)v738;
  *(unsigned char *)(v737 + 8) = *(unsigned char *)(v738 + 8);
  uint64_t v739 = v1035[66];
  uint64_t v740 = v467 + v739;
  uint64_t v741 = v468 + v739;
  *(_OWORD *)uint64_t v740 = *(_OWORD *)v741;
  *(unsigned char *)(v740 + 16) = *(unsigned char *)(v741 + 16);
  *(_OWORD *)(v467 + v1035[67]) = *(_OWORD *)(v468 + v1035[67]);
  *(void *)(v467 + v1035[68]) = *(void *)(v468 + v1035[68]);
  *(_OWORD *)(v467 + v1035[69]) = *(_OWORD *)(v468 + v1035[69]);
  *(unsigned char *)(v467 + v1035[70]) = *(unsigned char *)(v468 + v1035[70]);
  *(unsigned char *)(v467 + v1035[71]) = *(unsigned char *)(v468 + v1035[71]);
  *(unsigned char *)(v467 + v1035[72]) = *(unsigned char *)(v468 + v1035[72]);
  uint64_t v742 = v1035[73];
  uint64_t v743 = v467 + v742;
  uint64_t v744 = v468 + v742;
  *(unsigned char *)(v743 + 8) = *(unsigned char *)(v744 + 8);
  *(void *)uint64_t v743 = *(void *)v744;
  (*(void (**)(uint64_t, void, uint64_t, int *))(v469 + 56))(v467, 0, 1, v1035);
  a3 = v1026;
LABEL_184:
  *(void *)(a1 + *(int *)(a3 + 140)) = *(void *)(a2 + *(int *)(a3 + 140));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1A0908B28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1A0908B3C);
}

uint64_t sub_1A0908B3C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 2147483646)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  else
  {
    uint64_t v9 = sub_1A07856F8(&qword_1E94FBB20);
    uint64_t v10 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48);
    uint64_t v11 = v9;
    uint64_t v12 = (char *)a1 + *(int *)(a3 + 136);
    return v10(v12, a2, v11);
  }
}

uint64_t sub_1A0908BFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1A0908C10);
}

void *sub_1A0908C10(void *result, uint64_t a2, int a3, uint64_t a4)
{
  int v5 = result;
  if (a3 == 2147483646)
  {
    *id result = a2;
  }
  else
  {
    uint64_t v7 = sub_1A07856F8(&qword_1E94FBB20);
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 136);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for RemoteIntentChat()
{
  uint64_t result = qword_1E94FBB28;
  if (!qword_1E94FBB28) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1A0908D08()
{
  sub_1A0908E08();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_1A0908E08()
{
  if (!qword_1E94FBB38)
  {
    type metadata accessor for RemoteIntentMessageItem(255);
    unint64_t v0 = sub_1A09F4518();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E94FBB38);
    }
  }
}

uint64_t sub_1A0908E60()
{
  return sub_1A09F4008();
}

uint64_t sub_1A0908EC0()
{
  return sub_1A09F3F88();
}

uint64_t sub_1A0908F10()
{
  return sub_1A09F4008();
}

uint64_t sub_1A0908F70()
{
  return sub_1A09F3F88();
}

unint64_t sub_1A0908FC0@<X0>(unint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_1A090D1AC(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_1A0908FEC()
{
  return sub_1A09F4008();
}

uint64_t sub_1A090904C()
{
  return sub_1A09F3F88();
}

uint64_t sub_1A090909C(void *a1, char a2)
{
  sub_1A086F45C(a1, a1[3]);
  sub_1A09F4CB8();
  uint64_t v3 = a2;
  __int16 v4 = sub_1A09F3D98();
  swift_bridgeObjectRelease();
  if ((v4 & 0x100) != 0)
  {
    uint64_t v5 = sub_1A09F4718();
    swift_allocError();
    uint64_t v7 = v6;
    uint64_t v8 = qword_1A0A0DF60[v3];
    sub_1A07856F8(&qword_1E94FBC00);
    v7[3] = MEMORY[0x1E4FBAF58];
    *uint64_t v7 = v8;
    v7[1] = 0xE100000000000000;
    sub_1A086F45C(v10, v11);
    sub_1A09F4B68();
    sub_1A09F4708();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v5 - 8) + 104))(v7, *MEMORY[0x1E4FBBAA0], v5);
    swift_willThrow();
  }
  else
  {
    sub_1A0884428((uint64_t)v10, v11);
    sub_1A09F4B88();
  }
  return _s17IMSharedUtilities29RemoteIntentBroadcastEncodingVwxx_0((uint64_t)v10);
}

uint64_t sub_1A0909244(char *a1, char *a2)
{
  return sub_1A09B1990(*a1, *a2);
}

uint64_t sub_1A0909250()
{
  return sub_1A09F4C88();
}

uint64_t sub_1A09092AC()
{
  sub_1A09F3DA8();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1A09092EC()
{
  return sub_1A09F4C88();
}

uint64_t sub_1A0909344@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_1A090D0A4(*a1, a1[1]);
  *a2 = result;
  return result;
}

void sub_1A0909374(void *a1@<X8>)
{
  *a1 = qword_1A0A0DF60[*v1];
  a1[1] = 0xE100000000000000;
}

void *sub_1A0909390@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_1A090D1BC(a1);
  if (!v2) {
    *a2 = (_BYTE)result;
  }
  return result;
}

uint64_t sub_1A09093BC(void *a1)
{
  return sub_1A090909C(a1, *v1);
}

unint64_t sub_1A09093D8(char a1)
{
  unint64_t result = 0x7069636974726170;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x69747265706F7270;
      break;
    case 2:
      unint64_t result = 0x6E65644974616863;
      break;
    case 3:
      unint64_t result = 0x444970756F7267;
      break;
    case 4:
      unint64_t result = 0x4E65636976726573;
      break;
    case 5:
      unint64_t result = 0xD000000000000011;
      break;
    case 6:
      unint64_t result = 0xD000000000000011;
      break;
    case 7:
      unint64_t result = 0x4E79616C70736964;
      break;
    case 8:
      unint64_t result = 0xD000000000000014;
      break;
    case 9:
      unint64_t result = 0xD000000000000010;
      break;
    case 10:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 11:
    case 21:
    case 31:
      unint64_t result = 0xD000000000000018;
      break;
    case 12:
      unint64_t result = 1684632935;
      break;
    case 13:
      unint64_t result = 0x7265746C69467369;
      break;
    case 14:
      unint64_t result = 0x65766F6365527369;
      break;
    case 15:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 16:
      unint64_t result = 0x746174536E696F6ALL;
      break;
    case 17:
      unint64_t result = 0x656D614E6D6F6F72;
      break;
    case 18:
      unint64_t result = 0x49746E756F636361;
      break;
    case 19:
      unint64_t result = 0x6C79745374616863;
      break;
    case 20:
      unint64_t result = 0x6C616E696769726FLL;
      break;
    case 22:
      unint64_t result = 0xD000000000000012;
      break;
    case 23:
      unint64_t result = 0x6F43646165726E75;
      break;
    case 24:
      unint64_t result = 0x686B63616C427369;
      break;
    case 25:
      unint64_t result = 0xD00000000000001ELL;
      break;
    case 26:
      unint64_t result = 0x4449776F72;
      break;
    case 27:
      unint64_t result = 0xD000000000000015;
      break;
    case 28:
      unint64_t result = 0x65436E6F73726570;
      break;
    case 29:
      unint64_t result = 0xD000000000000024;
      break;
    case 30:
      unint64_t result = 0x7373654D7473616CLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A09097CC(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_1A07856F8(&qword_1E94FBB80);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A086F45C(a1, a1[3]);
  sub_1A090C614();
  sub_1A09F4CC8();
  uint64_t v9 = swift_bridgeObjectRetain();
  sub_1A095004C(v9, 0);
  if (v2)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v10 = swift_bridgeObjectRetain();
    sub_1A09502D0(v10, 1);
    swift_bridgeObjectRelease();
    LOBYTE(v13) = 2;
    sub_1A09F4978();
    LOBYTE(v13) = 3;
    sub_1A09F4978();
    LOBYTE(v13) = 4;
    sub_1A09F4978();
    LOBYTE(v13) = *(unsigned char *)(v3 + 64);
    char v14 = 5;
    sub_1A090C8E4();
    sub_1A09F49D8();
    LOBYTE(v13) = 6;
    sub_1A09F4978();
    LOBYTE(v13) = 7;
    sub_1A09F4978();
    LOBYTE(v13) = *(unsigned char *)(v3 + 104);
    char v14 = 8;
    sub_1A090C938();
    sub_1A09F49D8();
    uint64_t v13 = *(void *)(v3 + 112);
    char v14 = 9;
    sub_1A07856F8(&qword_1EB4A5610);
    sub_1A0879F5C(&qword_1E94F9140);
    sub_1A09F49D8();
    LOBYTE(v13) = 10;
    sub_1A09F49F8();
    LOBYTE(v13) = 11;
    sub_1A09F49F8();
    LOBYTE(v13) = 12;
    sub_1A09F4978();
    LOBYTE(v13) = 13;
    sub_1A09F49F8();
    LOBYTE(v13) = 14;
    sub_1A09F4988();
    LOBYTE(v13) = 15;
    sub_1A09F4988();
    LOBYTE(v13) = *(unsigned char *)(v3 + 179);
    char v14 = 16;
    sub_1A090C98C();
    sub_1A09F49D8();
    LOBYTE(v13) = 17;
    sub_1A09F4978();
    LOBYTE(v13) = 18;
    sub_1A09F4978();
    LOBYTE(v13) = *(unsigned char *)(v3 + 216);
    char v14 = 19;
    sub_1A090C9E0();
    sub_1A09F49D8();
    LOBYTE(v13) = 20;
    sub_1A09F4978();
    LOBYTE(v13) = 21;
    sub_1A09F4978();
    LOBYTE(v13) = 22;
    sub_1A09F4978();
    LOBYTE(v13) = 23;
    sub_1A09F49C8();
    LOBYTE(v13) = 24;
    sub_1A09F4988();
    LOBYTE(v13) = 25;
    sub_1A09F4988();
    LOBYTE(v13) = 26;
    sub_1A09F49F8();
    LOBYTE(v13) = 27;
    sub_1A09F4988();
    LOBYTE(v13) = 28;
    sub_1A09F4978();
    LOBYTE(v13) = 29;
    sub_1A09F49C8();
    uint64_t v12 = type metadata accessor for RemoteIntentChat();
    LOBYTE(v13) = 30;
    type metadata accessor for RemoteIntentMessageItem(0);
    sub_1A090CA34(&qword_1E94FBBA8);
    sub_1A09F49D8();
    uint64_t v13 = *(void *)(v3 + *(int *)(v12 + 140));
    char v14 = 31;
    sub_1A09F49D8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1A0909F24@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_1A07856F8(&qword_1E94FBB20);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v59 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1A07856F8(&qword_1E94FBB48);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v59 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = type metadata accessor for RemoteIntentChat();
  MEMORY[0x1F4188790](v63);
  uint64_t v13 = (uint64_t *)((char *)&v59 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  *uint64_t v13 = 0;
  v13[1] = 0;
  uint64_t v64 = a1;
  uint64_t v65 = v13;
  sub_1A086F45C(a1, a1[3]);
  sub_1A090C614();
  long long v62 = v11;
  sub_1A09F4CA8();
  if (v2)
  {
    _s17IMSharedUtilities29RemoteIntentBroadcastEncodingVwxx_0((uint64_t)v64);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v59 = v7;
    uint64_t v60 = a2;
    uint64_t v61 = v8;
    uint64_t v14 = sub_1A094CBE0(0);
    uint64_t v15 = v65;
    *uint64_t v65 = v14;
    v15[1] = sub_1A094CE5C(1);
    LOBYTE(v66) = 2;
    _OWORD v15[2] = sub_1A09F4828();
    v15[3] = v16;
    LOBYTE(v66) = 3;
    v15[4] = sub_1A09F4828();
    void v15[5] = v17;
    LOBYTE(v66) = 4;
    void v15[6] = sub_1A09F4828();
    v15[7] = v18;
    char v67 = 5;
    sub_1A090C668();
    sub_1A09F4888();
    *((unsigned char *)v15 + 64) = v66;
    LOBYTE(v66) = 6;
    v15[9] = sub_1A09F4828();
    v15[10] = v19;
    LOBYTE(v66) = 7;
    v15[11] = sub_1A09F4828();
    v15[12] = v20;
    char v67 = 8;
    sub_1A090C6BC();
    sub_1A09F4888();
    *((unsigned char *)v15 + 104) = v66;
    sub_1A07856F8(&qword_1EB4A5610);
    char v67 = 9;
    sub_1A0879F5C(&qword_1E94F9128);
    sub_1A09F4888();
    v65[14] = v66;
    LOBYTE(v66) = 10;
    uint64_t v21 = sub_1A09F48A8();
    long long v22 = v65;
    unsigned char v65[15] = v21;
    *((unsigned char *)v22 + 128) = v23 & 1;
    LOBYTE(v66) = 11;
    uint64_t v24 = sub_1A09F48A8();
    int v25 = v65;
    v65[17] = v24;
    *((unsigned char *)v25 + 144) = v26 & 1;
    LOBYTE(v66) = 12;
    uint64_t v27 = sub_1A09F4828();
    uint64_t v28 = v65;
    v65[19] = v27;
    v28[20] = v29;
    LOBYTE(v66) = 13;
    uint64_t v30 = sub_1A09F48A8();
    uint64_t v31 = v65;
    v65[21] = v30;
    *((unsigned char *)v31 + 176) = v32 & 1;
    LOBYTE(v66) = 14;
    *((unsigned char *)v65 + 177) = sub_1A09F4838();
    LOBYTE(v66) = 15;
    *((unsigned char *)v65 + 178) = sub_1A09F4838();
    char v67 = 16;
    sub_1A090C710();
    sub_1A09F4888();
    *((unsigned char *)v65 + 179) = v66;
    LOBYTE(v66) = 17;
    uint64_t v33 = sub_1A09F4828();
    uint64_t v34 = v65;
    v65[23] = v33;
    v34[24] = v35;
    LOBYTE(v66) = 18;
    uint64_t v36 = sub_1A09F4828();
    long long v37 = v65;
    v65[25] = v36;
    v37[26] = v38;
    char v67 = 19;
    sub_1A090C764();
    sub_1A09F4888();
    *((unsigned char *)v65 + 216) = v66;
    LOBYTE(v66) = 20;
    uint64_t v39 = sub_1A09F4828();
    uint64_t v40 = v65;
    v65[28] = v39;
    v40[29] = v41;
    LOBYTE(v66) = 21;
    uint64_t v42 = sub_1A09F4828();
    uint64_t v43 = v65;
    v65[30] = v42;
    v43[31] = v44;
    LOBYTE(v66) = 22;
    uint64_t v45 = sub_1A09F4828();
    uint64_t v46 = v65;
    v65[32] = v45;
    v46[33] = v47;
    LOBYTE(v66) = 23;
    uint64_t v48 = sub_1A09F4878();
    uint64_t v49 = v65;
    uint64_t v50 = v65 + 35;
    v65[34] = v48;
    *((unsigned char *)v49 + 280) = v51 & 1;
    LOBYTE(v66) = 24;
    *((unsigned char *)v65 + 281) = sub_1A09F4838();
    LOBYTE(v66) = 25;
    *((unsigned char *)v65 + 282) = sub_1A09F4838();
    LOBYTE(v66) = 26;
    v65[36] = sub_1A09F48A8();
    *((unsigned char *)v50 + 16) = v52 & 1;
    LOBYTE(v66) = 27;
    *((unsigned char *)v65 + 297) = sub_1A09F4838();
    LOBYTE(v66) = 28;
    uint64_t v53 = sub_1A09F4828();
    uint64_t v54 = v65;
    v65[38] = v53;
    v54[39] = v55;
    LOBYTE(v66) = 29;
    v65[40] = sub_1A09F4878();
    *((unsigned char *)v50 + 48) = v56 & 1;
    type metadata accessor for RemoteIntentMessageItem(0);
    LOBYTE(v66) = 30;
    sub_1A090CA34(&qword_1E94FBB78);
    sub_1A09F4888();
    sub_1A090C7B8((uint64_t)v59, (uint64_t)v65 + *(int *)(v63 + 136));
    char v67 = 31;
    sub_1A09F4888();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v62, v61);
    uint64_t v57 = (uint64_t)v65;
    *(uint64_t *)((char *)v65 + *(int *)(v63 + 140)) = v66;
    sub_1A090C820(v57, v60);
    _s17IMSharedUtilities29RemoteIntentBroadcastEncodingVwxx_0((uint64_t)v64);
    return sub_1A090C884(v57, (uint64_t (*)(void))type metadata accessor for RemoteIntentChat);
  }
}

unint64_t sub_1A090AA8C()
{
  return sub_1A09093D8(*v0);
}

uint64_t sub_1A090AA94@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A090D340(a1, a2);
  *a3 = result;
  return result;
}

void sub_1A090AABC(unsigned char *a1@<X8>)
{
  *a1 = 32;
}

uint64_t sub_1A090AAC8(uint64_t a1)
{
  unint64_t v2 = sub_1A090C614();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A090AB04(uint64_t a1)
{
  unint64_t v2 = sub_1A090C614();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A090AB40@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1A0909F24(a1, a2);
}

uint64_t sub_1A090AB58(void *a1)
{
  return sub_1A09097CC(a1);
}

unint64_t sub_1A090AB70()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1A07856F8(&qword_1E94FBB20);
  MEMORY[0x1F4188790](v2 - 8);
  __int16 v4 = (char *)&v121 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v127 = MEMORY[0x1E4FBC868];
  *(void *)&long long v124 = sub_1A09F3E18();
  *((void *)&v124 + 1) = v5;
  sub_1A09F4648();
  uint64_t v6 = *v0;
  if (v6)
  {
    uint64_t v125 = sub_1A07856F8(&qword_1E94FBB40);
    *(void *)&long long v124 = v6;
    sub_1A07825B4(&v124, v123);
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v122 = v127;
    unint64_t v127 = 0x8000000000000000;
    sub_1A08D97F0(v123, (uint64_t)v126, isUniquelyReferenced_nonNull_native);
    unint64_t v127 = v122;
    swift_bridgeObjectRelease();
    sub_1A087B20C((uint64_t)v126);
  }
  else
  {
    sub_1A09ED5A4((uint64_t)v126, &v124);
    sub_1A087B20C((uint64_t)v126);
    sub_1A0784C08((uint64_t)&v124, &qword_1EB4A58F0);
  }
  *(void *)&long long v124 = sub_1A09F3E18();
  *((void *)&v124 + 1) = v8;
  sub_1A09F4648();
  uint64_t v9 = v1[1];
  if (v9)
  {
    uint64_t v125 = sub_1A07856F8((uint64_t *)&unk_1E94F9030);
    *(void *)&long long v124 = v9;
    sub_1A07825B4(&v124, v123);
    swift_bridgeObjectRetain();
    char v10 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v122 = v127;
    unint64_t v127 = 0x8000000000000000;
    sub_1A08D97F0(v123, (uint64_t)v126, v10);
    unint64_t v127 = v122;
    swift_bridgeObjectRelease();
    sub_1A087B20C((uint64_t)v126);
  }
  else
  {
    sub_1A09ED5A4((uint64_t)v126, &v124);
    sub_1A087B20C((uint64_t)v126);
    sub_1A0784C08((uint64_t)&v124, &qword_1EB4A58F0);
  }
  *(void *)&long long v124 = sub_1A09F3E18();
  *((void *)&v124 + 1) = v11;
  uint64_t v12 = MEMORY[0x1E4FBB1A0];
  sub_1A09F4648();
  uint64_t v13 = v1[3];
  if (v13)
  {
    uint64_t v14 = v1[2];
    uint64_t v125 = v12;
    *(void *)&long long v124 = v14;
    *((void *)&v124 + 1) = v13;
    sub_1A07825B4(&v124, v123);
    swift_bridgeObjectRetain();
    char v15 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v122 = v127;
    unint64_t v127 = 0x8000000000000000;
    sub_1A08D97F0(v123, (uint64_t)v126, v15);
    unint64_t v127 = v122;
    swift_bridgeObjectRelease();
    sub_1A087B20C((uint64_t)v126);
  }
  else
  {
    sub_1A09ED5A4((uint64_t)v126, &v124);
    sub_1A087B20C((uint64_t)v126);
    sub_1A0784C08((uint64_t)&v124, &qword_1EB4A58F0);
  }
  *(void *)&long long v124 = sub_1A09F3E18();
  *((void *)&v124 + 1) = v16;
  sub_1A09F4648();
  uint64_t v17 = v1[5];
  if (v17)
  {
    uint64_t v18 = v1[4];
    uint64_t v125 = v12;
    *(void *)&long long v124 = v18;
    *((void *)&v124 + 1) = v17;
    sub_1A07825B4(&v124, v123);
    swift_bridgeObjectRetain();
    char v19 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v122 = v127;
    unint64_t v127 = 0x8000000000000000;
    sub_1A08D97F0(v123, (uint64_t)v126, v19);
    unint64_t v127 = v122;
    swift_bridgeObjectRelease();
    sub_1A087B20C((uint64_t)v126);
  }
  else
  {
    sub_1A09ED5A4((uint64_t)v126, &v124);
    sub_1A087B20C((uint64_t)v126);
    sub_1A0784C08((uint64_t)&v124, &qword_1EB4A58F0);
  }
  *(void *)&long long v124 = sub_1A09F3E18();
  *((void *)&v124 + 1) = v20;
  sub_1A09F4648();
  uint64_t v21 = v1[7];
  if (v21)
  {
    uint64_t v22 = v1[6];
    uint64_t v125 = v12;
    *(void *)&long long v124 = v22;
    *((void *)&v124 + 1) = v21;
    sub_1A07825B4(&v124, v123);
    swift_bridgeObjectRetain();
    char v23 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v122 = v127;
    unint64_t v127 = 0x8000000000000000;
    sub_1A08D97F0(v123, (uint64_t)v126, v23);
    unint64_t v127 = v122;
    swift_bridgeObjectRelease();
    sub_1A087B20C((uint64_t)v126);
  }
  else
  {
    sub_1A09ED5A4((uint64_t)v126, &v124);
    sub_1A087B20C((uint64_t)v126);
    sub_1A0784C08((uint64_t)&v124, &qword_1EB4A58F0);
  }
  *(void *)&long long v124 = sub_1A09F3E18();
  *((void *)&v124 + 1) = v24;
  sub_1A09F4648();
  uint64_t v25 = *((unsigned __int8 *)v1 + 64);
  uint64_t v26 = MEMORY[0x1E4FBB550];
  if (v25 == 3)
  {
    sub_1A09ED5A4((uint64_t)v126, &v124);
    sub_1A087B20C((uint64_t)v126);
    sub_1A0784C08((uint64_t)&v124, &qword_1EB4A58F0);
  }
  else
  {
    uint64_t v125 = MEMORY[0x1E4FBB550];
    *(void *)&long long v124 = v25;
    sub_1A07825B4(&v124, v123);
    char v27 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v122 = v127;
    unint64_t v127 = 0x8000000000000000;
    sub_1A08D97F0(v123, (uint64_t)v126, v27);
    unint64_t v127 = v122;
    swift_bridgeObjectRelease();
    sub_1A087B20C((uint64_t)v126);
  }
  *(void *)&long long v124 = sub_1A09F3E18();
  *((void *)&v124 + 1) = v28;
  sub_1A09F4648();
  uint64_t v29 = v1[10];
  if (v29)
  {
    uint64_t v30 = v1[9];
    uint64_t v125 = v12;
    *(void *)&long long v124 = v30;
    *((void *)&v124 + 1) = v29;
    sub_1A07825B4(&v124, v123);
    swift_bridgeObjectRetain();
    char v31 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v122 = v127;
    unint64_t v127 = 0x8000000000000000;
    sub_1A08D97F0(v123, (uint64_t)v126, v31);
    unint64_t v127 = v122;
    swift_bridgeObjectRelease();
    sub_1A087B20C((uint64_t)v126);
  }
  else
  {
    sub_1A09ED5A4((uint64_t)v126, &v124);
    sub_1A087B20C((uint64_t)v126);
    sub_1A0784C08((uint64_t)&v124, &qword_1EB4A58F0);
  }
  *(void *)&long long v124 = sub_1A09F3E18();
  *((void *)&v124 + 1) = v32;
  sub_1A09F4648();
  uint64_t v33 = v1[12];
  if (v33)
  {
    uint64_t v34 = v1[11];
    uint64_t v125 = v12;
    *(void *)&long long v124 = v34;
    *((void *)&v124 + 1) = v33;
    sub_1A07825B4(&v124, v123);
    swift_bridgeObjectRetain();
    char v35 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v122 = v127;
    unint64_t v127 = 0x8000000000000000;
    sub_1A08D97F0(v123, (uint64_t)v126, v35);
    unint64_t v127 = v122;
    swift_bridgeObjectRelease();
    sub_1A087B20C((uint64_t)v126);
  }
  else
  {
    sub_1A09ED5A4((uint64_t)v126, &v124);
    sub_1A087B20C((uint64_t)v126);
    sub_1A0784C08((uint64_t)&v124, &qword_1EB4A58F0);
  }
  *(void *)&long long v124 = sub_1A09F3E18();
  *((void *)&v124 + 1) = v36;
  sub_1A09F4648();
  uint64_t v37 = *((unsigned __int8 *)v1 + 104);
  if (v37 == 3)
  {
    sub_1A09ED5A4((uint64_t)v126, &v124);
    sub_1A087B20C((uint64_t)v126);
    sub_1A0784C08((uint64_t)&v124, &qword_1EB4A58F0);
  }
  else
  {
    uint64_t v125 = v26;
    *(void *)&long long v124 = v37;
    sub_1A07825B4(&v124, v123);
    char v38 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v122 = v127;
    unint64_t v127 = 0x8000000000000000;
    sub_1A08D97F0(v123, (uint64_t)v126, v38);
    unint64_t v127 = v122;
    swift_bridgeObjectRelease();
    sub_1A087B20C((uint64_t)v126);
  }
  *(void *)&long long v124 = sub_1A09F3E18();
  *((void *)&v124 + 1) = v39;
  sub_1A09F4648();
  uint64_t v40 = v1[14];
  if (v40)
  {
    uint64_t v125 = sub_1A07856F8(&qword_1EB4A5610);
    *(void *)&long long v124 = v40;
    sub_1A07825B4(&v124, v123);
    swift_bridgeObjectRetain();
    char v41 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v122 = v127;
    unint64_t v127 = 0x8000000000000000;
    sub_1A08D97F0(v123, (uint64_t)v126, v41);
    unint64_t v127 = v122;
    swift_bridgeObjectRelease();
    sub_1A087B20C((uint64_t)v126);
  }
  else
  {
    sub_1A09ED5A4((uint64_t)v126, &v124);
    sub_1A087B20C((uint64_t)v126);
    sub_1A0784C08((uint64_t)&v124, &qword_1EB4A58F0);
  }
  *(void *)&long long v124 = sub_1A09F3E18();
  *((void *)&v124 + 1) = v42;
  sub_1A09F4648();
  uint64_t v43 = MEMORY[0x1E4FBC1C8];
  if (v1[16])
  {
    sub_1A09ED5A4((uint64_t)v126, &v124);
    sub_1A087B20C((uint64_t)v126);
    sub_1A0784C08((uint64_t)&v124, &qword_1EB4A58F0);
  }
  else
  {
    uint64_t v44 = v1[15];
    uint64_t v125 = MEMORY[0x1E4FBC1C8];
    *(void *)&long long v124 = v44;
    sub_1A07825B4(&v124, v123);
    char v45 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v122 = v127;
    unint64_t v127 = 0x8000000000000000;
    sub_1A08D97F0(v123, (uint64_t)v126, v45);
    unint64_t v127 = v122;
    swift_bridgeObjectRelease();
    sub_1A087B20C((uint64_t)v126);
  }
  *(void *)&long long v124 = sub_1A09F3E18();
  *((void *)&v124 + 1) = v46;
  sub_1A09F4648();
  if (v1[18])
  {
    sub_1A09ED5A4((uint64_t)v126, &v124);
    sub_1A087B20C((uint64_t)v126);
    sub_1A0784C08((uint64_t)&v124, &qword_1EB4A58F0);
  }
  else
  {
    uint64_t v47 = v1[17];
    uint64_t v125 = v43;
    *(void *)&long long v124 = v47;
    sub_1A07825B4(&v124, v123);
    char v48 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v122 = v127;
    unint64_t v127 = 0x8000000000000000;
    sub_1A08D97F0(v123, (uint64_t)v126, v48);
    unint64_t v127 = v122;
    swift_bridgeObjectRelease();
    sub_1A087B20C((uint64_t)v126);
  }
  *(void *)&long long v124 = sub_1A09F3E18();
  *((void *)&v124 + 1) = v49;
  sub_1A09F4648();
  uint64_t v50 = v1[20];
  if (v50)
  {
    uint64_t v51 = v1[19];
    uint64_t v125 = v12;
    *(void *)&long long v124 = v51;
    *((void *)&v124 + 1) = v50;
    sub_1A07825B4(&v124, v123);
    swift_bridgeObjectRetain();
    char v52 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v122 = v127;
    unint64_t v127 = 0x8000000000000000;
    sub_1A08D97F0(v123, (uint64_t)v126, v52);
    unint64_t v127 = v122;
    swift_bridgeObjectRelease();
    sub_1A087B20C((uint64_t)v126);
  }
  else
  {
    sub_1A09ED5A4((uint64_t)v126, &v124);
    sub_1A087B20C((uint64_t)v126);
    sub_1A0784C08((uint64_t)&v124, &qword_1EB4A58F0);
  }
  *(void *)&long long v124 = sub_1A09F3E18();
  *((void *)&v124 + 1) = v53;
  sub_1A09F4648();
  if (v1[22])
  {
    sub_1A09ED5A4((uint64_t)v126, &v124);
    sub_1A087B20C((uint64_t)v126);
    sub_1A0784C08((uint64_t)&v124, &qword_1EB4A58F0);
  }
  else
  {
    uint64_t v54 = v1[21];
    uint64_t v125 = v43;
    *(void *)&long long v124 = v54;
    sub_1A07825B4(&v124, v123);
    char v55 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v122 = v127;
    unint64_t v127 = 0x8000000000000000;
    sub_1A08D97F0(v123, (uint64_t)v126, v55);
    unint64_t v127 = v122;
    swift_bridgeObjectRelease();
    sub_1A087B20C((uint64_t)v126);
  }
  *(void *)&long long v124 = sub_1A09F3E18();
  *((void *)&v124 + 1) = v56;
  sub_1A09F4648();
  int v57 = *((unsigned __int8 *)v1 + 177);
  uint64_t v58 = MEMORY[0x1E4FBB390];
  if (v57 == 2)
  {
    sub_1A09ED5A4((uint64_t)v126, &v124);
    sub_1A087B20C((uint64_t)v126);
    sub_1A0784C08((uint64_t)&v124, &qword_1EB4A58F0);
  }
  else
  {
    uint64_t v125 = MEMORY[0x1E4FBB390];
    LOBYTE(v124) = v57 & 1;
    sub_1A07825B4(&v124, v123);
    char v59 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v122 = v127;
    unint64_t v127 = 0x8000000000000000;
    sub_1A08D97F0(v123, (uint64_t)v126, v59);
    unint64_t v127 = v122;
    swift_bridgeObjectRelease();
    sub_1A087B20C((uint64_t)v126);
  }
  *(void *)&long long v124 = sub_1A09F3E18();
  *((void *)&v124 + 1) = v60;
  sub_1A09F4648();
  int v61 = *((unsigned __int8 *)v1 + 178);
  if (v61 == 2)
  {
    sub_1A09ED5A4((uint64_t)v126, &v124);
    sub_1A087B20C((uint64_t)v126);
    sub_1A0784C08((uint64_t)&v124, &qword_1EB4A58F0);
  }
  else
  {
    uint64_t v125 = v58;
    LOBYTE(v124) = v61 & 1;
    sub_1A07825B4(&v124, v123);
    char v62 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v122 = v127;
    unint64_t v127 = 0x8000000000000000;
    sub_1A08D97F0(v123, (uint64_t)v126, v62);
    unint64_t v127 = v122;
    swift_bridgeObjectRelease();
    sub_1A087B20C((uint64_t)v126);
  }
  *(void *)&long long v124 = sub_1A09F3E18();
  *((void *)&v124 + 1) = v63;
  sub_1A09F4648();
  uint64_t v64 = *((unsigned __int8 *)v1 + 179);
  if (v64 == 5)
  {
    sub_1A09ED5A4((uint64_t)v126, &v124);
    sub_1A087B20C((uint64_t)v126);
    sub_1A0784C08((uint64_t)&v124, &qword_1EB4A58F0);
  }
  else
  {
    uint64_t v125 = v26;
    *(void *)&long long v124 = v64;
    sub_1A07825B4(&v124, v123);
    char v65 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v122 = v127;
    unint64_t v127 = 0x8000000000000000;
    sub_1A08D97F0(v123, (uint64_t)v126, v65);
    unint64_t v127 = v122;
    swift_bridgeObjectRelease();
    sub_1A087B20C((uint64_t)v126);
  }
  *(void *)&long long v124 = sub_1A09F3E18();
  *((void *)&v124 + 1) = v66;
  sub_1A09F4648();
  uint64_t v67 = v1[24];
  if (v67)
  {
    uint64_t v68 = v1[23];
    uint64_t v125 = v12;
    *(void *)&long long v124 = v68;
    *((void *)&v124 + 1) = v67;
    sub_1A07825B4(&v124, v123);
    swift_bridgeObjectRetain();
    char v69 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v122 = v127;
    unint64_t v127 = 0x8000000000000000;
    sub_1A08D97F0(v123, (uint64_t)v126, v69);
    unint64_t v127 = v122;
    swift_bridgeObjectRelease();
    sub_1A087B20C((uint64_t)v126);
  }
  else
  {
    sub_1A09ED5A4((uint64_t)v126, &v124);
    sub_1A087B20C((uint64_t)v126);
    sub_1A0784C08((uint64_t)&v124, &qword_1EB4A58F0);
  }
  *(void *)&long long v124 = sub_1A09F3E18();
  *((void *)&v124 + 1) = v70;
  sub_1A09F4648();
  uint64_t v71 = v1[26];
  if (v71)
  {
    uint64_t v72 = v1[25];
    uint64_t v125 = v12;
    *(void *)&long long v124 = v72;
    *((void *)&v124 + 1) = v71;
    sub_1A07825B4(&v124, v123);
    swift_bridgeObjectRetain();
    char v73 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v122 = v127;
    unint64_t v127 = 0x8000000000000000;
    sub_1A08D97F0(v123, (uint64_t)v126, v73);
    unint64_t v127 = v122;
    swift_bridgeObjectRelease();
    sub_1A087B20C((uint64_t)v126);
  }
  else
  {
    sub_1A09ED5A4((uint64_t)v126, &v124);
    sub_1A087B20C((uint64_t)v126);
    sub_1A0784C08((uint64_t)&v124, &qword_1EB4A58F0);
  }
  *(void *)&long long v124 = sub_1A09F3E18();
  *((void *)&v124 + 1) = v74;
  sub_1A09F4648();
  switch(*((unsigned char *)v1 + 216))
  {
    case 3:
      goto LABEL_61;
    default:
      __int16 v75 = sub_1A09F3D98();
      swift_bridgeObjectRelease();
      if ((v75 & 0x100) != 0)
      {
LABEL_61:
        sub_1A09ED5A4((uint64_t)v126, &v124);
        sub_1A087B20C((uint64_t)v126);
        sub_1A0784C08((uint64_t)&v124, &qword_1EB4A58F0);
      }
      else
      {
        uint64_t v125 = MEMORY[0x1E4FBC358];
        LOBYTE(v124) = v75;
        sub_1A07825B4(&v124, v123);
        char v76 = swift_isUniquelyReferenced_nonNull_native();
        unint64_t v122 = v127;
        unint64_t v127 = 0x8000000000000000;
        sub_1A08D97F0(v123, (uint64_t)v126, v76);
        unint64_t v127 = v122;
        swift_bridgeObjectRelease();
        sub_1A087B20C((uint64_t)v126);
      }
      *(void *)&long long v124 = sub_1A09F3E18();
      *((void *)&v124 + 1) = v77;
      sub_1A09F4648();
      uint64_t v78 = v1[29];
      if (v78)
      {
        uint64_t v79 = v1[28];
        uint64_t v125 = v12;
        *(void *)&long long v124 = v79;
        *((void *)&v124 + 1) = v78;
        sub_1A07825B4(&v124, v123);
        swift_bridgeObjectRetain();
        char v80 = swift_isUniquelyReferenced_nonNull_native();
        unint64_t v122 = v127;
        unint64_t v127 = 0x8000000000000000;
        sub_1A08D97F0(v123, (uint64_t)v126, v80);
        unint64_t v127 = v122;
        swift_bridgeObjectRelease();
        sub_1A087B20C((uint64_t)v126);
      }
      else
      {
        sub_1A09ED5A4((uint64_t)v126, &v124);
        sub_1A087B20C((uint64_t)v126);
        sub_1A0784C08((uint64_t)&v124, &qword_1EB4A58F0);
      }
      *(void *)&long long v124 = sub_1A09F3E18();
      *((void *)&v124 + 1) = v81;
      sub_1A09F4648();
      uint64_t v82 = v1[31];
      if (v82)
      {
        uint64_t v83 = v1[30];
        uint64_t v125 = v12;
        *(void *)&long long v124 = v83;
        *((void *)&v124 + 1) = v82;
        sub_1A07825B4(&v124, v123);
        swift_bridgeObjectRetain();
        char v84 = swift_isUniquelyReferenced_nonNull_native();
        unint64_t v122 = v127;
        unint64_t v127 = 0x8000000000000000;
        sub_1A08D97F0(v123, (uint64_t)v126, v84);
        unint64_t v127 = v122;
        swift_bridgeObjectRelease();
        sub_1A087B20C((uint64_t)v126);
      }
      else
      {
        sub_1A09ED5A4((uint64_t)v126, &v124);
        sub_1A087B20C((uint64_t)v126);
        sub_1A0784C08((uint64_t)&v124, &qword_1EB4A58F0);
      }
      *(void *)&long long v124 = sub_1A09F3E18();
      *((void *)&v124 + 1) = v85;
      sub_1A09F4648();
      uint64_t v86 = v1[33];
      if (v86)
      {
        uint64_t v87 = v1[32];
        uint64_t v125 = v12;
        *(void *)&long long v124 = v87;
        *((void *)&v124 + 1) = v86;
        sub_1A07825B4(&v124, v123);
        swift_bridgeObjectRetain();
        char v88 = swift_isUniquelyReferenced_nonNull_native();
        unint64_t v122 = v127;
        unint64_t v127 = 0x8000000000000000;
        sub_1A08D97F0(v123, (uint64_t)v126, v88);
        unint64_t v127 = v122;
        swift_bridgeObjectRelease();
        sub_1A087B20C((uint64_t)v126);
      }
      else
      {
        sub_1A09ED5A4((uint64_t)v126, &v124);
        sub_1A087B20C((uint64_t)v126);
        sub_1A0784C08((uint64_t)&v124, &qword_1EB4A58F0);
      }
      *(void *)&long long v124 = sub_1A09F3E18();
      *((void *)&v124 + 1) = v89;
      sub_1A09F4648();
      uint64_t v90 = MEMORY[0x1E4FBB808];
      if (v1[35])
      {
        sub_1A09ED5A4((uint64_t)v126, &v124);
        sub_1A087B20C((uint64_t)v126);
        sub_1A0784C08((uint64_t)&v124, &qword_1EB4A58F0);
      }
      else
      {
        uint64_t v91 = v1[34];
        uint64_t v125 = MEMORY[0x1E4FBB808];
        *(void *)&long long v124 = v91;
        sub_1A07825B4(&v124, v123);
        char v92 = swift_isUniquelyReferenced_nonNull_native();
        unint64_t v122 = v127;
        unint64_t v127 = 0x8000000000000000;
        sub_1A08D97F0(v123, (uint64_t)v126, v92);
        unint64_t v127 = v122;
        swift_bridgeObjectRelease();
        sub_1A087B20C((uint64_t)v126);
      }
      *(void *)&long long v124 = sub_1A09F3E18();
      *((void *)&v124 + 1) = v93;
      sub_1A09F4648();
      int v94 = *((unsigned __int8 *)v1 + 281);
      if (v94 == 2)
      {
        sub_1A09ED5A4((uint64_t)v126, &v124);
        sub_1A087B20C((uint64_t)v126);
        sub_1A0784C08((uint64_t)&v124, &qword_1EB4A58F0);
      }
      else
      {
        uint64_t v125 = v58;
        LOBYTE(v124) = v94 & 1;
        sub_1A07825B4(&v124, v123);
        char v95 = swift_isUniquelyReferenced_nonNull_native();
        unint64_t v122 = v127;
        unint64_t v127 = 0x8000000000000000;
        sub_1A08D97F0(v123, (uint64_t)v126, v95);
        unint64_t v127 = v122;
        swift_bridgeObjectRelease();
        sub_1A087B20C((uint64_t)v126);
      }
      *(void *)&long long v124 = sub_1A09F3E18();
      *((void *)&v124 + 1) = v96;
      sub_1A09F4648();
      int v97 = *((unsigned __int8 *)v1 + 282);
      if (v97 == 2)
      {
        sub_1A09ED5A4((uint64_t)v126, &v124);
        sub_1A087B20C((uint64_t)v126);
        sub_1A0784C08((uint64_t)&v124, &qword_1EB4A58F0);
      }
      else
      {
        uint64_t v125 = v58;
        LOBYTE(v124) = v97 & 1;
        sub_1A07825B4(&v124, v123);
        char v98 = swift_isUniquelyReferenced_nonNull_native();
        unint64_t v122 = v127;
        unint64_t v127 = 0x8000000000000000;
        sub_1A08D97F0(v123, (uint64_t)v126, v98);
        unint64_t v127 = v122;
        swift_bridgeObjectRelease();
        sub_1A087B20C((uint64_t)v126);
      }
      *(void *)&long long v124 = sub_1A09F3E18();
      *((void *)&v124 + 1) = v99;
      sub_1A09F4648();
      if (v1[37])
      {
        sub_1A09ED5A4((uint64_t)v126, &v124);
        sub_1A087B20C((uint64_t)v126);
        sub_1A0784C08((uint64_t)&v124, &qword_1EB4A58F0);
      }
      else
      {
        uint64_t v100 = v1[36];
        uint64_t v125 = v43;
        *(void *)&long long v124 = v100;
        sub_1A07825B4(&v124, v123);
        char v101 = swift_isUniquelyReferenced_nonNull_native();
        unint64_t v122 = v127;
        unint64_t v127 = 0x8000000000000000;
        sub_1A08D97F0(v123, (uint64_t)v126, v101);
        unint64_t v127 = v122;
        swift_bridgeObjectRelease();
        sub_1A087B20C((uint64_t)v126);
      }
      *(void *)&long long v124 = sub_1A09F3E18();
      *((void *)&v124 + 1) = v102;
      sub_1A09F4648();
      int v103 = *((unsigned __int8 *)v1 + 297);
      if (v103 == 2)
      {
        sub_1A09ED5A4((uint64_t)v126, &v124);
        sub_1A087B20C((uint64_t)v126);
        sub_1A0784C08((uint64_t)&v124, &qword_1EB4A58F0);
      }
      else
      {
        uint64_t v125 = v58;
        LOBYTE(v124) = v103 & 1;
        sub_1A07825B4(&v124, v123);
        char v104 = swift_isUniquelyReferenced_nonNull_native();
        unint64_t v122 = v127;
        unint64_t v127 = 0x8000000000000000;
        sub_1A08D97F0(v123, (uint64_t)v126, v104);
        unint64_t v127 = v122;
        swift_bridgeObjectRelease();
        sub_1A087B20C((uint64_t)v126);
      }
      *(void *)&long long v124 = sub_1A09F3E18();
      *((void *)&v124 + 1) = v105;
      sub_1A09F4648();
      uint64_t v106 = v1[39];
      if (v106)
      {
        uint64_t v107 = v1[38];
        uint64_t v125 = v12;
        *(void *)&long long v124 = v107;
        *((void *)&v124 + 1) = v106;
        sub_1A07825B4(&v124, v123);
        swift_bridgeObjectRetain();
        char v108 = swift_isUniquelyReferenced_nonNull_native();
        unint64_t v122 = v127;
        unint64_t v127 = 0x8000000000000000;
        sub_1A08D97F0(v123, (uint64_t)v126, v108);
        unint64_t v127 = v122;
        swift_bridgeObjectRelease();
        sub_1A087B20C((uint64_t)v126);
      }
      else
      {
        sub_1A09ED5A4((uint64_t)v126, &v124);
        sub_1A087B20C((uint64_t)v126);
        sub_1A0784C08((uint64_t)&v124, &qword_1EB4A58F0);
      }
      *(void *)&long long v124 = sub_1A09F3E18();
      *((void *)&v124 + 1) = v109;
      sub_1A09F4648();
      if (v1[41])
      {
        sub_1A09ED5A4((uint64_t)v126, &v124);
        sub_1A087B20C((uint64_t)v126);
        sub_1A0784C08((uint64_t)&v124, &qword_1EB4A58F0);
      }
      else
      {
        uint64_t v110 = v1[40];
        uint64_t v125 = v90;
        *(void *)&long long v124 = v110;
        sub_1A07825B4(&v124, v123);
        char v111 = swift_isUniquelyReferenced_nonNull_native();
        unint64_t v122 = v127;
        unint64_t v127 = 0x8000000000000000;
        sub_1A08D97F0(v123, (uint64_t)v126, v111);
        unint64_t v127 = v122;
        swift_bridgeObjectRelease();
        sub_1A087B20C((uint64_t)v126);
      }
      *(void *)&long long v124 = sub_1A09F3E18();
      *((void *)&v124 + 1) = v112;
      sub_1A09F4648();
      uint64_t v113 = type metadata accessor for RemoteIntentChat();
      sub_1A090C5AC((uint64_t)v1 + *(int *)(v113 + 136), (uint64_t)v4);
      uint64_t v114 = type metadata accessor for RemoteIntentMessageItem(0);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v114 - 8) + 48))(v4, 1, v114) == 1)
      {
        sub_1A0784C08((uint64_t)v4, &qword_1E94FBB20);
        sub_1A09ED5A4((uint64_t)v126, &v124);
        sub_1A087B20C((uint64_t)v126);
        sub_1A0784C08((uint64_t)&v124, &qword_1EB4A58F0);
      }
      else
      {
        uint64_t v115 = sub_1A0971A04();
        uint64_t v125 = sub_1A07856F8((uint64_t *)&unk_1E94F9030);
        *(void *)&long long v124 = v115;
        sub_1A090C884((uint64_t)v4, type metadata accessor for RemoteIntentMessageItem);
        sub_1A07825B4(&v124, v123);
        char v116 = swift_isUniquelyReferenced_nonNull_native();
        unint64_t v122 = v127;
        unint64_t v127 = 0x8000000000000000;
        sub_1A08D97F0(v123, (uint64_t)v126, v116);
        unint64_t v127 = v122;
        swift_bridgeObjectRelease();
        sub_1A087B20C((uint64_t)v126);
      }
      *(void *)&long long v124 = sub_1A09F3E18();
      *((void *)&v124 + 1) = v117;
      sub_1A09F4648();
      uint64_t v118 = *(void *)((char *)v1 + *(int *)(v113 + 140));
      if (v118)
      {
        uint64_t v125 = sub_1A07856F8(&qword_1EB4A5610);
        *(void *)&long long v124 = v118;
        sub_1A07825B4(&v124, v123);
        swift_bridgeObjectRetain();
        char v119 = swift_isUniquelyReferenced_nonNull_native();
        unint64_t v122 = v127;
        unint64_t v127 = 0x8000000000000000;
        sub_1A08D97F0(v123, (uint64_t)v126, v119);
        unint64_t v127 = v122;
        swift_bridgeObjectRelease();
        sub_1A087B20C((uint64_t)v126);
      }
      else
      {
        sub_1A09ED5A4((uint64_t)v126, &v124);
        sub_1A087B20C((uint64_t)v126);
        sub_1A0784C08((uint64_t)&v124, &qword_1EB4A58F0);
      }
      return v127;
  }
}

uint64_t sub_1A090C5AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1A07856F8(&qword_1E94FBB20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_1A090C614()
{
  unint64_t result = qword_1E94FBB50;
  if (!qword_1E94FBB50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FBB50);
  }
  return result;
}

unint64_t sub_1A090C668()
{
  unint64_t result = qword_1E94FBB58;
  if (!qword_1E94FBB58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FBB58);
  }
  return result;
}

unint64_t sub_1A090C6BC()
{
  unint64_t result = qword_1E94FBB60;
  if (!qword_1E94FBB60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FBB60);
  }
  return result;
}

unint64_t sub_1A090C710()
{
  unint64_t result = qword_1E94FBB68;
  if (!qword_1E94FBB68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FBB68);
  }
  return result;
}

unint64_t sub_1A090C764()
{
  unint64_t result = qword_1E94FBB70;
  if (!qword_1E94FBB70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FBB70);
  }
  return result;
}

uint64_t sub_1A090C7B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1A07856F8(&qword_1E94FBB20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A090C820(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for RemoteIntentChat();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A090C884(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_1A090C8E4()
{
  unint64_t result = qword_1E94FBB88;
  if (!qword_1E94FBB88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FBB88);
  }
  return result;
}

unint64_t sub_1A090C938()
{
  unint64_t result = qword_1E94FBB90;
  if (!qword_1E94FBB90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FBB90);
  }
  return result;
}

unint64_t sub_1A090C98C()
{
  unint64_t result = qword_1E94FBB98;
  if (!qword_1E94FBB98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FBB98);
  }
  return result;
}

unint64_t sub_1A090C9E0()
{
  unint64_t result = qword_1E94FBBA0;
  if (!qword_1E94FBBA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FBBA0);
  }
  return result;
}

uint64_t sub_1A090CA34(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for RemoteIntentMessageItem(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for RemoteIntentChat.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xE1) {
    goto LABEL_17;
  }
  if (a2 + 31 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 31) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 31;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 31;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 31;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x20;
  int v8 = v6 - 32;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for RemoteIntentChat.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 31 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 31) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xE1) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xE0)
  {
    unsigned int v6 = ((a2 - 225) >> 8) + 1;
    *uint64_t result = a2 + 31;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A090CBD4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 31;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RemoteIntentChat.CodingKeys()
{
  return &type metadata for RemoteIntentChat.CodingKeys;
}

ValueMetadata *type metadata accessor for RemoteIntentChatStyle()
{
  return &type metadata for RemoteIntentChatStyle;
}

unsigned char *storeEnumTagSinglePayload for RemoteIntentChatJoinState(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A090CCF0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RemoteIntentChatJoinState()
{
  return &type metadata for RemoteIntentChatJoinState;
}

ValueMetadata *type metadata accessor for RemoteIntentChatAutoDonationBehavior()
{
  return &type metadata for RemoteIntentChatAutoDonationBehavior;
}

unsigned char *_s17IMSharedUtilities29RemoteIntentChatCloudKitStateOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A090CE04);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RemoteIntentChatCloudKitState()
{
  return &type metadata for RemoteIntentChatCloudKitState;
}

unint64_t sub_1A090CE40()
{
  unint64_t result = qword_1E94FBBB0;
  if (!qword_1E94FBBB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FBBB0);
  }
  return result;
}

unint64_t sub_1A090CE98()
{
  unint64_t result = qword_1E94FBBB8;
  if (!qword_1E94FBBB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FBBB8);
  }
  return result;
}

unint64_t sub_1A090CEF0()
{
  unint64_t result = qword_1E94FBBC0;
  if (!qword_1E94FBBC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FBBC0);
  }
  return result;
}

unint64_t sub_1A090CF48()
{
  unint64_t result = qword_1E94FBBC8;
  if (!qword_1E94FBBC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FBBC8);
  }
  return result;
}

unint64_t sub_1A090CFA0()
{
  unint64_t result = qword_1E94FBBD0;
  if (!qword_1E94FBBD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FBBD0);
  }
  return result;
}

unint64_t sub_1A090CFF8()
{
  unint64_t result = qword_1E94FBBD8;
  if (!qword_1E94FBBD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FBBD8);
  }
  return result;
}

unint64_t sub_1A090D050()
{
  unint64_t result = qword_1E94FBBE0;
  if (!qword_1E94FBBE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FBBE0);
  }
  return result;
}

uint64_t sub_1A090D0A4(uint64_t a1, uint64_t a2)
{
  if (a1 == 45 && a2 == 0xE100000000000000 || (sub_1A09F4B28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 43 && a2 == 0xE100000000000000 || (sub_1A09F4B28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 35 && a2 == 0xE100000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v5 = sub_1A09F4B28();
    swift_bridgeObjectRelease();
    if (v5) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

unint64_t sub_1A090D1AC(unint64_t result)
{
  if (result >= 5) {
    return 5;
  }
  return result;
}

void *sub_1A090D1BC(void *a1)
{
  int v3 = sub_1A086F45C(a1, a1[3]);
  sub_1A09F4C98();
  if (!v1)
  {
    int v3 = sub_1A086F45C(v10, v10[3]);
    unsigned __int8 v4 = sub_1A09F4B48();
    if ((v4 & 0x80u) == 0) {
      unsigned int v5 = (v4 + 1);
    }
    else {
      unsigned int v5 = (((v4 & 0x3F) << 8) | (v4 >> 6)) + 33217;
    }
    uint64_t v11 = (v5 + 0xFEFEFEFEFEFEFFLL) & ~(-1 << (8 * ((4 - (__clz(v5) >> 3)) & 7)));
    uint64_t v6 = MEMORY[0x1A6226040](&v11);
    uint64_t v8 = sub_1A090D0A4(v6, v7);
    if (v8 != 3)
    {
      int v3 = (void *)v8;
      _s17IMSharedUtilities29RemoteIntentBroadcastEncodingVwxx_0((uint64_t)v10);
      _s17IMSharedUtilities29RemoteIntentBroadcastEncodingVwxx_0((uint64_t)a1);
      return v3;
    }
    sub_1A09F46F8();
    swift_allocError();
    sub_1A09F46E8();
    swift_willThrow();
    _s17IMSharedUtilities29RemoteIntentBroadcastEncodingVwxx_0((uint64_t)v10);
  }
  _s17IMSharedUtilities29RemoteIntentBroadcastEncodingVwxx_0((uint64_t)a1);
  return v3;
}

uint64_t sub_1A090D340(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7069636974726170 && a2 == 0xEC00000073746E61;
  if (v2 || (sub_1A09F4B28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x69747265706F7270 && a2 == 0xEA00000000007365 || (sub_1A09F4B28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6E65644974616863 && a2 == 0xEE00726569666974 || (sub_1A09F4B28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x444970756F7267 && a2 == 0xE700000000000000 || (sub_1A09F4B28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x4E65636976726573 && a2 == 0xEB00000000656D61 || (sub_1A09F4B28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001A0A35010 || (sub_1A09F4B28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001A0A35030 || (sub_1A09F4B28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x4E79616C70736964 && a2 == 0xEB00000000656D61 || (sub_1A09F4B28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001A0A35050 || (sub_1A09F4B28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001A0A35070 || (sub_1A09F4B28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x80000001A0A31470 || (sub_1A09F4B28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001A0A35090 || (sub_1A09F4B28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 1684632935 && a2 == 0xE400000000000000 || (sub_1A09F4B28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0x7265746C69467369 && a2 == 0xEA00000000006465 || (sub_1A09F4B28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0x65766F6365527369 && a2 == 0xEB00000000646572 || (sub_1A09F4B28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x80000001A0A350B0 || (sub_1A09F4B28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 15;
  }
  else if (a1 == 0x746174536E696F6ALL && a2 == 0xE900000000000065 || (sub_1A09F4B28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 16;
  }
  else if (a1 == 0x656D614E6D6F6F72 && a2 == 0xE800000000000000 || (sub_1A09F4B28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 17;
  }
  else if (a1 == 0x49746E756F636361 && a2 == 0xE900000000000044 || (sub_1A09F4B28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 18;
  }
  else if (a1 == 0x6C79745374616863 && a2 == 0xE900000000000065 || (sub_1A09F4B28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 19;
  }
  else if (a1 == 0x6C616E696769726FLL && a2 == 0xEF444970756F7247 || (sub_1A09F4B28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 20;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001A0A350D0 || (sub_1A09F4B28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 21;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001A0A350F0 || (sub_1A09F4B28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 22;
  }
  else if (a1 == 0x6F43646165726E75 && a2 == 0xEB00000000746E75 || (sub_1A09F4B28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 23;
  }
  else if (a1 == 0x686B63616C427369 && a2 == 0xEC00000064656C6FLL || (sub_1A09F4B28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 24;
  }
  else if (a1 == 0xD00000000000001ELL && a2 == 0x80000001A0A35110 || (sub_1A09F4B28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 25;
  }
  else if (a1 == 0x4449776F72 && a2 == 0xE500000000000000 || (sub_1A09F4B28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 26;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001A0A35130 || (sub_1A09F4B28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 27;
  }
  else if (a1 == 0x65436E6F73726570 && a2 == 0xEF4449636972746ELL || (sub_1A09F4B28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 28;
  }
  else if (a1 == 0xD000000000000024 && a2 == 0x80000001A0A35150 || (sub_1A09F4B28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 29;
  }
  else if (a1 == 0x7373654D7473616CLL && a2 == 0xEB00000000656761 || (sub_1A09F4B28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 30;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001A0A35180)
  {
    swift_bridgeObjectRelease();
    return 31;
  }
  else
  {
    char v6 = sub_1A09F4B28();
    swift_bridgeObjectRelease();
    if (v6) {
      return 31;
    }
    else {
      return 32;
    }
  }
}

unint64_t sub_1A090E030()
{
  unint64_t result = qword_1E94FBBE8;
  if (!qword_1E94FBBE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FBBE8);
  }
  return result;
}

unint64_t sub_1A090E084()
{
  unint64_t result = qword_1E94FBBF0;
  if (!qword_1E94FBBF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FBBF0);
  }
  return result;
}

unint64_t sub_1A090E0D8()
{
  unint64_t result = qword_1E94FBBF8;
  if (!qword_1E94FBBF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FBBF8);
  }
  return result;
}

ValueMetadata *type metadata accessor for TransferFilesWithGUIDsRequest()
{
  return &type metadata for TransferFilesWithGUIDsRequest;
}

uint64_t sub_1A090E140()
{
  uint64_t v0 = sub_1A09F39E8();
  sub_1A078D848(v0, qword_1E94FBC08);
  sub_1A078510C(v0, (uint64_t)qword_1E94FBC08);
  return sub_1A09F39D8();
}

uint64_t sub_1A090E1C0(void *a1, uint64_t a2)
{
  uint64_t v4 = sub_1A07856F8(&qword_1E94FBCC0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A086F45C(a1, a1[3]);
  sub_1A090F8E4();
  sub_1A09F4CC8();
  v9[1] = a2;
  sub_1A07856F8(&qword_1EB4A5610);
  sub_1A0879F5C(&qword_1E94F9140);
  sub_1A09F4A78();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1A090E33C()
{
  return 0x726566736E617274;
}

uint64_t sub_1A090E360@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x726566736E617274 && a2 == 0xED00007344495547)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1A09F4B28();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1A090E41C(uint64_t a1)
{
  unint64_t v2 = sub_1A090F8E4();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A090E458(uint64_t a1)
{
  unint64_t v2 = sub_1A090F8E4();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A090E494()
{
  uint64_t v0 = qword_1E94FBC20;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_1A090E4CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v4 + 16) = a1;
  uint64_t v6 = *v3;
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1E94FBC78 + dword_1E94FBC78);
  char v7 = (void *)swift_task_alloc();
  *(void *)(v4 + 24) = v7;
  *char v7 = v4;
  v7[1] = sub_1A090E584;
  return v9(a3, v6);
}

uint64_t sub_1A090E584(uint64_t a1)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *v2;
  swift_task_dealloc();
  if (!v1) {
    **(void **)(v4 + 16) = a1;
  }
  uint64_t v6 = *(uint64_t (**)(void))(v5 + 8);
  return v6();
}

void *sub_1A090E694@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t result = sub_1A090F480(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1A090E6C0(void *a1)
{
  return sub_1A090E1C0(a1, *v1);
}

uint64_t sub_1A090E6DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A090EC80(a1, a2, a3, (uint64_t (*)(void))sub_1A08BD488, (uint64_t (*)(void))sub_1A08BD434);
}

unint64_t sub_1A090E708(uint64_t a1)
{
  unint64_t result = sub_1A090E730();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1A090E730()
{
  unint64_t result = qword_1E94FBC30;
  if (!qword_1E94FBC30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FBC30);
  }
  return result;
}

unint64_t sub_1A090E788()
{
  unint64_t result = qword_1E94FBC38;
  if (!qword_1E94FBC38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FBC38);
  }
  return result;
}

unint64_t sub_1A090E7DC(uint64_t a1)
{
  unint64_t result = sub_1A08D560C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1A090E804(uint64_t a1)
{
  unint64_t result = sub_1A090E82C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1A090E82C()
{
  unint64_t result = qword_1E94FBC40;
  if (!qword_1E94FBC40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FBC40);
  }
  return result;
}

uint64_t sub_1A090E880(void *a1, uint64_t a2)
{
  uint64_t v4 = sub_1A07856F8(&qword_1E94FBCA0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  char v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A086F45C(a1, a1[3]);
  sub_1A090F7CC();
  sub_1A09F4CC8();
  v9[1] = a2;
  sub_1A07856F8(&qword_1E94FBC90);
  sub_1A090F820(&qword_1E94FBCA8, &qword_1E94FAA78);
  sub_1A09F4A78();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1A090EA08()
{
  return 0x7272694D656C6966;
}

uint64_t sub_1A090EA28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x7272694D656C6966 && a2 == 0xEB0000000073726FLL)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1A09F4B28();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1A090EAD8(uint64_t a1)
{
  unint64_t v2 = sub_1A090F7CC();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A090EB14(uint64_t a1)
{
  unint64_t v2 = sub_1A090F7CC();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A090EB50@<X0>(void *a1@<X8>)
{
  *a1 = *v1;
  return swift_bridgeObjectRetain();
}

unint64_t sub_1A090EB5C(uint64_t a1)
{
  unint64_t result = sub_1A090EB84();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1A090EB84()
{
  unint64_t result = qword_1E94FBC48;
  if (!qword_1E94FBC48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FBC48);
  }
  return result;
}

unint64_t sub_1A090EBD8(uint64_t a1)
{
  unint64_t result = sub_1A090EC00();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1A090EC00()
{
  unint64_t result = qword_1E94FBC50;
  if (!qword_1E94FBC50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FBC50);
  }
  return result;
}

uint64_t sub_1A090EC54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A090EC80(a1, a2, a3, (uint64_t (*)(void))sub_1A08BD3E0, (uint64_t (*)(void))sub_1A08BD38C);
}

uint64_t sub_1A090EC80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t (*a5)(void))
{
  *(void *)(a1 + 8) = a4();
  uint64_t result = a5();
  *(void *)(a1 + 16) = result;
  return result;
}

void *sub_1A090ECBC@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t result = sub_1A090F61C(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1A090ECE8(void *a1)
{
  return sub_1A090E880(a1, *v1);
}

unint64_t sub_1A090ED08()
{
  unint64_t result = qword_1E94FBC58;
  if (!qword_1E94FBC58)
  {
    sub_1A078D800((uint64_t *)&unk_1E94FBC60);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FBC58);
  }
  return result;
}

unint64_t sub_1A090ED68(uint64_t a1)
{
  unint64_t result = sub_1A090ED90();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1A090ED90()
{
  unint64_t result = qword_1E94FBC70;
  if (!qword_1E94FBC70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FBC70);
  }
  return result;
}

uint64_t sub_1A090EDE4(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 32) = a1;
  *(void *)(v2 + 40) = a2;
  return MEMORY[0x1F4188298](sub_1A090EE04, 0, 0);
}

uint64_t sub_1A090EE04()
{
  if (*(void *)(v0[5] + 16))
  {
    uint64_t v1 = (void *)v0[4];
    uint64_t v2 = v1[3];
    uint64_t v3 = v1[4];
    sub_1A086F45C(v1, v2);
    uint64_t v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v3 + 8) + **(int **)(v3 + 8));
    uint64_t v4 = (void *)swift_task_alloc();
    v0[6] = v4;
    *uint64_t v4 = v0;
    v4[1] = sub_1A090F010;
    uint64_t v5 = v0[5];
    return v13(v5, 1, v2, v3);
  }
  else
  {
    if (qword_1E94F8598 != -1) {
      swift_once();
    }
    uint64_t v7 = sub_1A09F39E8();
    sub_1A078510C(v7, (uint64_t)qword_1E94FBC08);
    uint64_t v8 = sub_1A09F39C8();
    os_log_type_t v9 = sub_1A09F4378();
    if (os_log_type_enabled(v8, v9))
    {
      uint64_t v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v10 = 0;
      _os_log_impl(&dword_1A0772000, v8, v9, "TransferFilesWithGUIDsRequest Didn't generate files because there were no transfer guids on the request.", v10, 2u);
      MEMORY[0x1A6228C20](v10, -1, -1);
    }

    uint64_t v11 = (uint64_t (*)(uint64_t))v0[1];
    uint64_t v12 = MEMORY[0x1E4FBC860];
    return v11(v12);
  }
}

uint64_t sub_1A090F010(uint64_t a1, char a2)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 56) = a1;
  *(unsigned char *)(v3 + 64) = a2;
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1A090F114, 0, 0);
}

uint64_t sub_1A090F114()
{
  uint64_t v1 = *(void **)(v0 + 56);
  if (*(unsigned char *)(v0 + 64))
  {
    os_log_type_t v9 = v1;
    if (qword_1E94F8598 != -1) {
      swift_once();
    }
    uint64_t v10 = sub_1A09F39E8();
    sub_1A078510C(v10, (uint64_t)qword_1E94FBC08);
    uint64_t v11 = v1;
    uint64_t v12 = v1;
    uint64_t v13 = sub_1A09F39C8();
    os_log_type_t v14 = sub_1A09F4378();
    BOOL v15 = os_log_type_enabled(v13, v14);
    uint64_t v16 = *(void **)(v0 + 56);
    if (v15)
    {
      uint64_t v17 = (uint8_t *)swift_slowAlloc();
      uint64_t v18 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v17 = 138412290;
      char v19 = v1;
      uint64_t v20 = _swift_stdlib_bridgeErrorToNSError();
      *(void *)(v0 + 24) = v20;
      sub_1A09F4528();
      *uint64_t v18 = v20;
      sub_1A090F474(v16, 1);
      sub_1A090F474(v16, 1);
      _os_log_impl(&dword_1A0772000, v13, v14, "TransferFilesWithGUIDsRequest Failed to generate file transfer mirrors. No files will be transfered for this request. Error: %@", v17, 0xCu);
      sub_1A07856F8(&qword_1E94F7740);
      swift_arrayDestroy();
      MEMORY[0x1A6228C20](v18, -1, -1);
      MEMORY[0x1A6228C20](v17, -1, -1);

      sub_1A090F474(v16, 1);
    }
    else
    {
      sub_1A090F474(*(id *)(v0 + 56), 1);
      sub_1A090F474(v16, 1);
    }
    sub_1A090F474(v16, 1);
    uint64_t v1 = (void *)MEMORY[0x1E4FBC860];
  }
  else
  {
    uint64_t v2 = qword_1E94F8598;
    swift_bridgeObjectRetain();
    if (v2 != -1) {
      swift_once();
    }
    uint64_t v3 = sub_1A09F39E8();
    sub_1A078510C(v3, (uint64_t)qword_1E94FBC08);
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_1A09F39C8();
    os_log_type_t v5 = sub_1A09F4388();
    BOOL v6 = os_log_type_enabled(v4, v5);
    uint64_t v7 = *(void **)(v0 + 56);
    if (v6)
    {
      uint64_t v8 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v8 = 134217984;
      *(void *)(v0 + 16) = v1[2];
      sub_1A09F4528();
      sub_1A090F474(v7, 0);
      _os_log_impl(&dword_1A0772000, v4, v5, "TransferFilesWithGUIDsRequest Generated %ld file mirrors.", v8, 0xCu);
      MEMORY[0x1A6228C20](v8, -1, -1);
    }
    else
    {
      sub_1A090F474(*(id *)(v0 + 56), 0);
    }

    sub_1A090F474(v7, 0);
  }
  uint64_t v21 = *(uint64_t (**)(void *))(v0 + 8);
  return v21(v1);
}

void sub_1A090F474(id a1, char a2)
{
  if (a2) {

  }
  else {
    swift_bridgeObjectRelease();
  }
}

void *sub_1A090F480(void *a1)
{
  uint64_t v3 = sub_1A07856F8(&qword_1E94FBCB0);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  BOOL v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1A086F45C(a1, a1[3]);
  sub_1A090F8E4();
  sub_1A09F4CA8();
  if (v1)
  {
    _s17IMSharedUtilities29RemoteIntentBroadcastEncodingVwxx_0((uint64_t)a1);
  }
  else
  {
    sub_1A07856F8(&qword_1EB4A5610);
    sub_1A0879F5C(&qword_1E94F9128);
    sub_1A09F4928();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    uint64_t v7 = (void *)v9[1];
    _s17IMSharedUtilities29RemoteIntentBroadcastEncodingVwxx_0((uint64_t)a1);
  }
  return v7;
}

void *sub_1A090F61C(void *a1)
{
  uint64_t v3 = sub_1A07856F8(&qword_1E94FBC80);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  BOOL v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1A086F45C(a1, a1[3]);
  sub_1A090F7CC();
  sub_1A09F4CA8();
  if (v1)
  {
    _s17IMSharedUtilities29RemoteIntentBroadcastEncodingVwxx_0((uint64_t)a1);
  }
  else
  {
    sub_1A07856F8(&qword_1E94FBC90);
    sub_1A090F820(&qword_1E94FBC98, &qword_1E94FAA80);
    sub_1A09F4928();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    uint64_t v7 = (void *)v9[1];
    _s17IMSharedUtilities29RemoteIntentBroadcastEncodingVwxx_0((uint64_t)a1);
  }
  return v7;
}

unint64_t sub_1A090F7CC()
{
  unint64_t result = qword_1E94FBC88;
  if (!qword_1E94FBC88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FBC88);
  }
  return result;
}

uint64_t sub_1A090F820(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1A078D800(&qword_1E94FBC90);
    sub_1A090F8A0(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1A090F8A0(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for RemoteIntentMirrorFile(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1A090F8E4()
{
  unint64_t result = qword_1E94FBCB8;
  if (!qword_1E94FBCB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FBCB8);
  }
  return result;
}

ValueMetadata *type metadata accessor for TransferFilesWithGUIDsRequest.CodingKeys()
{
  return &type metadata for TransferFilesWithGUIDsRequest.CodingKeys;
}

unsigned char *_s17IMSharedUtilities29TransferFilesWithGUIDsRequestV10CodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1A090F9ECLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for TransferFilesWithGUIDsRequestResponse.CodingKeys()
{
  return &type metadata for TransferFilesWithGUIDsRequestResponse.CodingKeys;
}

ValueMetadata *type metadata accessor for TransferFilesWithGUIDsRequestResponse()
{
  return &type metadata for TransferFilesWithGUIDsRequestResponse;
}

unint64_t sub_1A090FA38()
{
  unint64_t result = qword_1E94FBCC8;
  if (!qword_1E94FBCC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FBCC8);
  }
  return result;
}

unint64_t sub_1A090FA90()
{
  unint64_t result = qword_1E94FBCD0;
  if (!qword_1E94FBCD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FBCD0);
  }
  return result;
}

unint64_t sub_1A090FAE8()
{
  unint64_t result = qword_1E94FBCD8;
  if (!qword_1E94FBCD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FBCD8);
  }
  return result;
}

unint64_t sub_1A090FB40()
{
  unint64_t result = qword_1E94FBCE0;
  if (!qword_1E94FBCE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FBCE0);
  }
  return result;
}

unint64_t sub_1A090FB98()
{
  unint64_t result = qword_1E94FBCE8;
  if (!qword_1E94FBCE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FBCE8);
  }
  return result;
}

unint64_t sub_1A090FBF0()
{
  unint64_t result = qword_1E94FBCF0;
  if (!qword_1E94FBCF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FBCF0);
  }
  return result;
}

uint64_t sub_1A090FC48@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    uint64_t v4 = 0;
    uint64_t v5 = (uint64_t *)(a1 + 32);
    do
    {
      uint64_t v7 = *v5++;
      uint64_t v6 = v7;
      if ((v7 & ~v4) == 0) {
        uint64_t v6 = 0;
      }
      v4 |= v6;
      --v3;
    }
    while (v3);
  }
  else
  {
    uint64_t v4 = 0;
  }
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v4;
  return result;
}

uint64_t sub_1A090FCA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, long long *a3@<X2>, unsigned __int8 *a4@<X3>, unsigned __int8 *a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unsigned __int8 a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t *a20,unsigned __int8 a21,unsigned __int8 *a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  uint64_t v70 = a7;
  uint64_t v71 = a8;
  uint64_t v68 = a2;
  uint64_t v69 = a6;
  uint64_t v67 = a1;
  uint64_t v84 = a24;
  uint64_t v85 = a25;
  int v83 = a21;
  int v76 = a16;
  uint64_t v74 = a14;
  uint64_t v75 = a15;
  uint64_t v72 = a12;
  uint64_t v73 = a13;
  uint64_t v65 = a10;
  uint64_t v66 = a11;
  uint64_t v81 = a18;
  uint64_t v82 = a23;
  uint64_t v79 = a17;
  uint64_t v80 = a19;
  long long v64 = *a3;
  long long v63 = a3[1];
  uint64_t v62 = *((void *)a3 + 4);
  int v61 = *a4;
  int v60 = *a5;
  uint64_t v77 = *a20;
  int v78 = *a22;
  *(void *)a9 = 0x4449656C646E7542;
  *(void *)(a9 + 8) = 0xE800000000000000;
  *(_OWORD *)(a9 + 16) = 0u;
  *(_OWORD *)(a9 + 32) = 0u;
  *(_OWORD *)(a9 + 48) = 0u;
  *(unsigned char *)(a9 + 88) = 10;
  *(void *)(a9 + 64) = 0;
  strcpy((char *)(a9 + 72), "Classification");
  *(unsigned char *)(a9 + 87) = -18;
  *(unsigned char *)(a9 + 112) = 6;
  *(void *)(a9 + 96) = 0x6375646F72706552;
  *(void *)(a9 + 104) = 0xEF7974696C696269;
  *(void *)(a9 + 120) = 0x656C746954;
  *(void *)(a9 + 128) = 0xE500000000000000;
  *(void *)(a9 + 136) = 0;
  *(void *)(a9 + 144) = 0;
  *(void *)(a9 + 152) = 0x7470697263736544;
  *(void *)(a9 + 160) = 0xEB000000006E6F69;
  *(void *)(a9 + 168) = 0;
  *(void *)(a9 + 176) = 0;
  *(void *)(a9 + 184) = 0x7364726F7779654BLL;
  *(void *)(a9 + 192) = 0xE800000000000000;
  uint64_t v26 = MEMORY[0x1E4FBC860];
  *(void *)(a9 + 200) = MEMORY[0x1E4FBC860];
  char v27 = (int *)type metadata accessor for TapToRadarDraft();
  uint64_t v28 = (void *)(a9 + v27[11]);
  uint64_t v59 = (uint64_t)v28 + *(int *)(sub_1A07856F8(&qword_1E94FBDD0) + 36);
  uint64_t v29 = sub_1A09F3478();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v59, 1, 1, v29);
  *uint64_t v28 = 0x7349664F656D6954;
  v28[1] = 0xEB00000000657573;
  uint64_t v30 = (void *)(a9 + v27[12]);
  uint64_t v58 = v30;
  *uint64_t v30 = 0x656D686361747441;
  v30[1] = 0xEB0000000073746ELL;
  v30[2] = v26;
  char v31 = (void *)(a9 + v27[13]);
  int v57 = v31;
  *char v31 = 0xD000000000000011;
  v31[1] = 0x80000001A0A352F0;
  _OWORD v31[2] = v26;
  uint64_t v32 = (void *)(a9 + v27[14]);
  *uint64_t v32 = 0xD000000000000014;
  v32[1] = 0x80000001A0A35310;
  long long v32[2] = v26;
  uint64_t v33 = (char *)(a9 + v27[15]);
  uint64_t v56 = v33;
  strcpy(v33, "DeleteOnAttach");
  v33[15] = -18;
  v33[16] = 0;
  uint64_t v34 = (void *)(a9 + v27[16]);
  *uint64_t v34 = 0x4449656369766544;
  v34[1] = 0xE900000000000073;
  v34[2] = v26;
  uint64_t v35 = a9 + v27[17];
  strcpy((char *)v35, "DeviceClasses");
  *(_WORD *)(v35 + 14) = -4864;
  *(void *)(v35 + 16) = v26;
  uint64_t v36 = a9 + v27[18];
  strcpy((char *)v36, "DeviceModels");
  *(unsigned char *)(v36 + 13) = 0;
  *(_WORD *)(v36 + 14) = -5120;
  *(void *)(v36 + 16) = v26;
  uint64_t v37 = (void *)(a9 + v27[19]);
  char v55 = v37;
  *uint64_t v37 = 0xD000000000000016;
  v37[1] = 0x80000001A0A0EB30;
  void v37[2] = 0;
  uint64_t v38 = a9 + v27[20];
  *(void *)uint64_t v38 = 0xD00000000000001ALL;
  *(void *)(v38 + 8) = 0x80000001A0A35330;
  *(unsigned char *)(v38 + 16) = 0;
  uint64_t v39 = a9 + v27[21];
  *(unsigned char *)(v39 + 16) = 0;
  *(void *)uint64_t v39 = 0x676169446F747541;
  *(void *)(v39 + 8) = 0xEF73636974736F6ELL;
  uint64_t v40 = (void *)(a9 + v27[22]);
  *uint64_t v40 = 0xD00000000000001BLL;
  v40[1] = 0x80000001A0A35350;
  v40[2] = v26;
  char v41 = (void *)(a9 + v27[23]);
  *char v41 = 0xD000000000000018;
  v41[1] = 0x80000001A0A35370;
  v41[2] = 0;
  v41[3] = 0;
  uint64_t v42 = v68;
  *(void *)(a9 + 16) = v67;
  *(void *)(a9 + 24) = v42;
  long long v43 = v63;
  *(_OWORD *)(a9 + 32) = v64;
  *(_OWORD *)(a9 + 48) = v43;
  *(void *)(a9 + 64) = v62;
  *(unsigned char *)(a9 + 88) = v61;
  *(unsigned char *)(a9 + 112) = v60;
  uint64_t v44 = v70;
  *(void *)(a9 + 136) = v69;
  *(void *)(a9 + 144) = v44;
  uint64_t v45 = v65;
  *(void *)(a9 + 168) = v71;
  *(void *)(a9 + 176) = v45;
  *(void *)(a9 + 200) = v66;
  uint64_t v46 = sub_1A07856F8((uint64_t *)&unk_1E94FAF20);
  MEMORY[0x1F4188790](v46 - 8);
  char v48 = (char *)&v54 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = v72;
  sub_1A08CB838(v72, (uint64_t)v48);
  sub_1A0919110((uint64_t)v48, v59);
  uint64_t v50 = v58;
  swift_bridgeObjectRelease();
  v50[2] = v73;
  uint64_t v51 = v57;
  swift_bridgeObjectRelease();
  v51[2] = v74;
  swift_bridgeObjectRelease();
  long long v32[2] = v75;
  v56[16] = v76;
  swift_bridgeObjectRelease();
  v34[2] = v79;
  swift_bridgeObjectRelease();
  *(void *)(v35 + 16) = v81;
  swift_bridgeObjectRelease();
  *(void *)(v36 + 16) = v80;
  v55[2] = v77;
  *(unsigned char *)(v38 + 16) = v83;
  *(unsigned char *)(v39 + 16) = v78;
  swift_bridgeObjectRelease();
  v40[2] = v82;
  swift_bridgeObjectRelease();
  uint64_t v52 = v85;
  v41[2] = v84;
  v41[3] = v52;
  return sub_1A0784C08(v49, (uint64_t *)&unk_1E94FAF20);
}

uint64_t sub_1A09102BC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_1A09F31C8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A09F31B8();
  sub_1A09F31A8();
  MEMORY[0x1A6225360](7824750, 0xE300000000000000);
  sub_1A0910508();
  sub_1A09F3178();
  uint64_t v6 = sub_1A07856F8((uint64_t *)&unk_1EB4A5630);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A09F3188();
  uint64_t v9 = sub_1A09F33A8();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_1A0784C08((uint64_t)v8, (uint64_t *)&unk_1EB4A5630);
    sub_1A0916474();
    swift_allocError();
    *uint64_t v11 = 0;
    swift_willThrow();
    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v10 + 32))(a1, v8, v9);
  }
}

unint64_t sub_1A0910508()
{
  unint64_t v258 = MEMORY[0x1E4FBC860];
  uint64_t v1 = sub_1A09F3168();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(void *)(v2 + 64);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = *(void *)(v0 + 24);
  uint64_t v253 = v0;
  uint64_t v5 = sub_1A07856F8(&qword_1E94FBE88);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v252 = v6;
  uint64_t v7 = (char *)&v244 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v246 = v2;
  if (!v4)
  {
    uint64_t v248 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v2 + 56);
    v248((char *)&v244 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), 1, 1, v1);
    goto LABEL_7;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1A09F3158();
  uint64_t v248 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v2 + 56);
  v248(v7, 0, 1, v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v7, 1, v1) == 1)
  {
LABEL_7:
    uint64_t v13 = sub_1A0784C08((uint64_t)v7, &qword_1E94FBE88);
    goto LABEL_8;
  }
  uint64_t v251 = *(uint64_t (**)(char *, char *, uint64_t))(v2 + 32);
  uint64_t v8 = v251((char *)&v244 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), v7, v1);
  uint64_t v250 = (unsigned int (*)(char *, uint64_t, uint64_t))&v244;
  MEMORY[0x1F4188790](v8);
  (*(void (**)(char *, char *, uint64_t))(v2 + 16))((char *)&v244 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), (char *)&v244 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), v1);
  unint64_t v9 = sub_1A0891EC4(0, 1, 1, MEMORY[0x1E4FBC860]);
  unint64_t v11 = *(void *)(v9 + 16);
  unint64_t v10 = *(void *)(v9 + 24);
  if (v11 >= v10 >> 1) {
    unint64_t v9 = sub_1A0891EC4(v10 > 1, v11 + 1, 1, v9);
  }
  *(void *)(v9 + 16) = v11 + 1;
  uint64_t v12 = v246;
  v251((char *)(v9+ ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80))+ *(void *)(v246 + 72) * v11), (char *)&v244 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), v1);
  unint64_t v258 = v9;
  uint64_t v13 = (*(uint64_t (**)(char *, uint64_t))(v12 + 8))((char *)&v244 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), v1);
LABEL_8:
  uint64_t v14 = v253;
  uint64_t v15 = *(void *)(v253 + 48);
  if (v15)
  {
    uint64_t v17 = *(void *)(v253 + 56);
    uint64_t v16 = *(void *)(v253 + 64);
    long long v254 = *(_OWORD *)(v253 + 32);
    uint64_t v255 = v15;
    uint64_t v256 = v17;
    uint64_t v257 = v16;
    uint64_t v18 = sub_1A09137EC();
    uint64_t v13 = sub_1A09CEAE0(v18);
  }
  uint64_t v249 = (int *)&v244;
  uint64_t v19 = MEMORY[0x1F4188790](v13);
  unint64_t v20 = (v3 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v21 = (char *)&v244 - v20;
  char v22 = *(unsigned char *)(v14 + 88);
  MEMORY[0x1F4188790](v19);
  uint64_t v24 = (char *)&v244 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  sub_1A091509C(v22, (uint64_t)v24);
  swift_bridgeObjectRelease();
  uint64_t v25 = v246;
  uint64_t v250 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v246 + 48);
  uint64_t v251 = (uint64_t (*)(char *, char *, uint64_t))(v246 + 48);
  if (v250(v24, 1, v1) == 1)
  {
    uint64_t v26 = sub_1A0784C08((uint64_t)v24, &qword_1E94FBE88);
  }
  else
  {
    uint64_t v247 = *(uint64_t (**)(char *, char *, uint64_t))(v25 + 32);
    uint64_t v27 = v247((char *)&v244 - v20, v24, v1);
    MEMORY[0x1F4188790](v27);
    uint64_t v28 = (char *)&v244 - v20;
    (*(void (**)(char *, char *, uint64_t))(v25 + 16))((char *)&v244 - v20, (char *)&v244 - v20, v1);
    unint64_t v29 = v258;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v29 = sub_1A0891EC4(0, *(void *)(v29 + 16) + 1, 1, v29);
    }
    unint64_t v31 = *(void *)(v29 + 16);
    unint64_t v30 = *(void *)(v29 + 24);
    if (v31 >= v30 >> 1) {
      unint64_t v29 = sub_1A0891EC4(v30 > 1, v31 + 1, 1, v29);
    }
    *(void *)(v29 + 16) = v31 + 1;
    v247((char *)(v29+ ((*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80))+ *(void *)(v25 + 72) * v31), v28, v1);
    unint64_t v258 = v29;
    uint64_t v26 = (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v21, v1);
  }
  uint64_t v249 = (int *)&v244;
  uint64_t v32 = MEMORY[0x1F4188790](v26);
  unint64_t v33 = (v3 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v34 = (char *)&v244 - v33;
  char v35 = *(unsigned char *)(v253 + 112);
  MEMORY[0x1F4188790](v32);
  uint64_t v37 = (char *)&v244 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  sub_1A09152B4(v35, (uint64_t)v37);
  swift_bridgeObjectRelease();
  if (v250(v37, 1, v1) == 1)
  {
    uint64_t v38 = sub_1A0784C08((uint64_t)v37, &qword_1E94FBE88);
  }
  else
  {
    uint64_t v247 = *(uint64_t (**)(char *, char *, uint64_t))(v25 + 32);
    uint64_t v39 = v247((char *)&v244 - v33, v37, v1);
    MEMORY[0x1F4188790](v39);
    uint64_t v40 = (char *)&v244 - v33;
    (*(void (**)(char *, char *, uint64_t))(v25 + 16))((char *)&v244 - v33, (char *)&v244 - v33, v1);
    unint64_t v41 = v258;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v41 = sub_1A0891EC4(0, *(void *)(v41 + 16) + 1, 1, v41);
    }
    unint64_t v43 = *(void *)(v41 + 16);
    unint64_t v42 = *(void *)(v41 + 24);
    if (v43 >= v42 >> 1) {
      unint64_t v41 = sub_1A0891EC4(v42 > 1, v43 + 1, 1, v41);
    }
    *(void *)(v41 + 16) = v43 + 1;
    v247((char *)(v41+ ((*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80))+ *(void *)(v25 + 72) * v43), v40, v1);
    unint64_t v258 = v41;
    uint64_t v38 = (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v34, v1);
  }
  uint64_t v249 = (int *)&v244;
  uint64_t v44 = MEMORY[0x1F4188790](v38);
  uint64_t v45 = *(void *)(v253 + 144);
  MEMORY[0x1F4188790](v44);
  uint64_t v47 = (char *)&v244 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!v45)
  {
    v248((char *)&v244 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0), 1, 1, v1);
    goto LABEL_32;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1A09F3158();
  v248(v47, 0, 1, v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v250(v47, 1, v1) == 1)
  {
LABEL_32:
    uint64_t v52 = sub_1A0784C08((uint64_t)v47, &qword_1E94FBE88);
    goto LABEL_33;
  }
  uint64_t v247 = *(uint64_t (**)(char *, char *, uint64_t))(v25 + 32);
  uint64_t v48 = v247((char *)&v244 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), v47, v1);
  MEMORY[0x1F4188790](v48);
  (*(void (**)(char *, char *, uint64_t))(v25 + 16))((char *)&v244 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), (char *)&v244 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), v1);
  unint64_t v49 = v258;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v49 = sub_1A0891EC4(0, *(void *)(v49 + 16) + 1, 1, v49);
  }
  unint64_t v51 = *(void *)(v49 + 16);
  unint64_t v50 = *(void *)(v49 + 24);
  if (v51 >= v50 >> 1) {
    unint64_t v49 = sub_1A0891EC4(v50 > 1, v51 + 1, 1, v49);
  }
  *(void *)(v49 + 16) = v51 + 1;
  v247((char *)(v49+ ((*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80))+ *(void *)(v25 + 72) * v51), (char *)&v244 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), v1);
  unint64_t v258 = v49;
  uint64_t v52 = (*(uint64_t (**)(char *, uint64_t))(v25 + 8))((char *)&v244 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), v1);
LABEL_33:
  uint64_t v249 = (int *)&v244;
  uint64_t v53 = MEMORY[0x1F4188790](v52);
  uint64_t v54 = *(void *)(v253 + 176);
  MEMORY[0x1F4188790](v53);
  uint64_t v56 = (char *)&v244 - ((v55 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!v54)
  {
    v248((char *)&v244 - ((v55 + 15) & 0xFFFFFFFFFFFFFFF0), 1, 1, v1);
    goto LABEL_41;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1A09F3158();
  v248(v56, 0, 1, v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v250(v56, 1, v1) == 1)
  {
LABEL_41:
    uint64_t v61 = sub_1A0784C08((uint64_t)v56, &qword_1E94FBE88);
    goto LABEL_42;
  }
  uint64_t v247 = *(uint64_t (**)(char *, char *, uint64_t))(v25 + 32);
  uint64_t v57 = v247((char *)&v244 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), v56, v1);
  MEMORY[0x1F4188790](v57);
  (*(void (**)(char *, char *, uint64_t))(v25 + 16))((char *)&v244 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), (char *)&v244 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), v1);
  unint64_t v58 = v258;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v58 = sub_1A0891EC4(0, *(void *)(v58 + 16) + 1, 1, v58);
  }
  unint64_t v60 = *(void *)(v58 + 16);
  unint64_t v59 = *(void *)(v58 + 24);
  if (v60 >= v59 >> 1) {
    unint64_t v58 = sub_1A0891EC4(v59 > 1, v60 + 1, 1, v58);
  }
  *(void *)(v58 + 16) = v60 + 1;
  v247((char *)(v58+ ((*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80))+ *(void *)(v25 + 72) * v60), (char *)&v244 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), v1);
  unint64_t v258 = v58;
  uint64_t v61 = (*(uint64_t (**)(char *, uint64_t))(v25 + 8))((char *)&v244 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), v1);
LABEL_42:
  uint64_t v249 = (int *)&v244;
  uint64_t v62 = MEMORY[0x1F4188790](v61);
  unint64_t v63 = (v3 + 15) & 0xFFFFFFFFFFFFFFF0;
  long long v64 = (char *)&v244 - v63;
  uint64_t v65 = *(void *)(v253 + 184);
  uint64_t v66 = *(void *)(v253 + 200);
  MEMORY[0x1F4188790](v62);
  uint64_t v68 = (char *)&v244 - ((v67 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1A09158DC(v65, v66, (void (*)(uint64_t, uint64_t))sub_1A0919764, (uint64_t)v68);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v250(v68, 1, v1) == 1)
  {
    uint64_t v69 = sub_1A0784C08((uint64_t)v68, &qword_1E94FBE88);
  }
  else
  {
    uint64_t v247 = *(uint64_t (**)(char *, char *, uint64_t))(v25 + 32);
    uint64_t v70 = v247((char *)&v244 - v63, v68, v1);
    MEMORY[0x1F4188790](v70);
    uint64_t v71 = (char *)&v244 - v63;
    (*(void (**)(char *, char *, uint64_t))(v25 + 16))((char *)&v244 - v63, (char *)&v244 - v63, v1);
    unint64_t v72 = v258;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v72 = sub_1A0891EC4(0, *(void *)(v72 + 16) + 1, 1, v72);
    }
    unint64_t v74 = *(void *)(v72 + 16);
    unint64_t v73 = *(void *)(v72 + 24);
    if (v74 >= v73 >> 1) {
      unint64_t v72 = sub_1A0891EC4(v73 > 1, v74 + 1, 1, v72);
    }
    *(void *)(v72 + 16) = v74 + 1;
    v247((char *)(v72+ ((*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80))+ *(void *)(v25 + 72) * v74), v71, v1);
    unint64_t v258 = v72;
    uint64_t v69 = (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v64, v1);
  }
  MEMORY[0x1F4188790](v69);
  unint64_t v75 = (v3 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v249 = (int *)type metadata accessor for TapToRadarDraft();
  MEMORY[0x1F4188790](v249);
  uint64_t v77 = (char *)&v244 - ((v76 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A0915438((uint64_t)v77);
  if (v250(v77, 1, v1) == 1)
  {
    uint64_t v78 = sub_1A0784C08((uint64_t)v77, &qword_1E94FBE88);
  }
  else
  {
    uint64_t v245 = *(uint64_t (**)(char *, char *, uint64_t))(v25 + 32);
    uint64_t v79 = v245((char *)&v244 - v75, v77, v1);
    MEMORY[0x1F4188790](v79);
    (*(void (**)(char *, char *, uint64_t))(v25 + 16))((char *)&v244 - v75, (char *)&v244 - v75, v1);
    unint64_t v80 = v258;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v247 = (uint64_t (*)(char *, char *, uint64_t))&v244;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      unint64_t v80 = sub_1A0891EC4(0, *(void *)(v80 + 16) + 1, 1, v80);
    }
    unint64_t v83 = *(void *)(v80 + 16);
    unint64_t v82 = *(void *)(v80 + 24);
    if (v83 >= v82 >> 1) {
      unint64_t v80 = sub_1A0891EC4(v82 > 1, v83 + 1, 1, v80);
    }
    *(void *)(v80 + 16) = v83 + 1;
    v245((char *)(v80+ ((*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80))+ *(void *)(v25 + 72) * v83), (char *)&v244 - v75, v1);
    unint64_t v258 = v80;
    uint64_t v78 = (*(uint64_t (**)(char *, uint64_t))(v25 + 8))((char *)&v244 - v75, v1);
  }
  uint64_t v247 = (uint64_t (*)(char *, char *, uint64_t))&v244;
  uint64_t v84 = MEMORY[0x1F4188790](v78);
  unint64_t v85 = (v3 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v86 = (char *)&v244 - v85;
  uint64_t v87 = (uint64_t *)(v253 + v249[12]);
  uint64_t v88 = *v87;
  uint64_t v89 = v87[2];
  MEMORY[0x1F4188790](v84);
  uint64_t v91 = (char *)&v244 - ((v90 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1A091570C(v88, v89, (uint64_t)v91);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v250(v91, 1, v1) == 1)
  {
    uint64_t v92 = sub_1A0784C08((uint64_t)v91, &qword_1E94FBE88);
  }
  else
  {
    uint64_t v245 = *(uint64_t (**)(char *, char *, uint64_t))(v25 + 32);
    uint64_t v93 = v245((char *)&v244 - v85, v91, v1);
    MEMORY[0x1F4188790](v93);
    int v94 = (char *)&v244 - v85;
    (*(void (**)(char *, char *, uint64_t))(v25 + 16))((char *)&v244 - v85, (char *)&v244 - v85, v1);
    unint64_t v95 = v258;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v95 = sub_1A0891EC4(0, *(void *)(v95 + 16) + 1, 1, v95);
    }
    unint64_t v97 = *(void *)(v95 + 16);
    unint64_t v96 = *(void *)(v95 + 24);
    if (v97 >= v96 >> 1) {
      unint64_t v95 = sub_1A0891EC4(v96 > 1, v97 + 1, 1, v95);
    }
    *(void *)(v95 + 16) = v97 + 1;
    v245((char *)(v95+ ((*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80))+ *(void *)(v25 + 72) * v97), v94, v1);
    unint64_t v258 = v95;
    uint64_t v92 = (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v86, v1);
  }
  uint64_t v247 = (uint64_t (*)(char *, char *, uint64_t))&v244;
  uint64_t v98 = MEMORY[0x1F4188790](v92);
  unint64_t v99 = (v3 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v100 = (char *)&v244 - v99;
  char v101 = (uint64_t *)(v253 + v249[13]);
  uint64_t v102 = *v101;
  uint64_t v103 = v101[2];
  MEMORY[0x1F4188790](v98);
  uint64_t v105 = (char *)&v244 - ((v104 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1A091570C(v102, v103, (uint64_t)v105);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v250(v105, 1, v1) == 1)
  {
    uint64_t v106 = sub_1A0784C08((uint64_t)v105, &qword_1E94FBE88);
  }
  else
  {
    uint64_t v245 = *(uint64_t (**)(char *, char *, uint64_t))(v25 + 32);
    uint64_t v107 = v245((char *)&v244 - v99, v105, v1);
    MEMORY[0x1F4188790](v107);
    char v108 = (char *)&v244 - v99;
    (*(void (**)(char *, char *, uint64_t))(v25 + 16))((char *)&v244 - v99, (char *)&v244 - v99, v1);
    unint64_t v109 = v258;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v109 = sub_1A0891EC4(0, *(void *)(v109 + 16) + 1, 1, v109);
    }
    unint64_t v111 = *(void *)(v109 + 16);
    unint64_t v110 = *(void *)(v109 + 24);
    if (v111 >= v110 >> 1) {
      unint64_t v109 = sub_1A0891EC4(v110 > 1, v111 + 1, 1, v109);
    }
    *(void *)(v109 + 16) = v111 + 1;
    v245((char *)(v109+ ((*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80))+ *(void *)(v25 + 72) * v111), v108, v1);
    unint64_t v258 = v109;
    uint64_t v106 = (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v100, v1);
  }
  uint64_t v247 = (uint64_t (*)(char *, char *, uint64_t))&v244;
  uint64_t v112 = MEMORY[0x1F4188790](v106);
  unint64_t v113 = (v3 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v114 = (char *)&v244 - v113;
  uint64_t v115 = (uint64_t *)(v253 + v249[14]);
  uint64_t v116 = *v115;
  uint64_t v117 = v115[2];
  MEMORY[0x1F4188790](v112);
  char v119 = (char *)&v244 - ((v118 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1A09158DC(v116, v117, (void (*)(uint64_t, uint64_t))sub_1A0919304, (uint64_t)v119);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v250(v119, 1, v1) == 1)
  {
    uint64_t v120 = sub_1A0784C08((uint64_t)v119, &qword_1E94FBE88);
  }
  else
  {
    uint64_t v245 = *(uint64_t (**)(char *, char *, uint64_t))(v25 + 32);
    uint64_t v121 = v245((char *)&v244 - v113, v119, v1);
    MEMORY[0x1F4188790](v121);
    unint64_t v122 = (char *)&v244 - v113;
    (*(void (**)(char *, char *, uint64_t))(v25 + 16))((char *)&v244 - v113, (char *)&v244 - v113, v1);
    unint64_t v123 = v258;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v123 = sub_1A0891EC4(0, *(void *)(v123 + 16) + 1, 1, v123);
    }
    unint64_t v125 = *(void *)(v123 + 16);
    unint64_t v124 = *(void *)(v123 + 24);
    if (v125 >= v124 >> 1) {
      unint64_t v123 = sub_1A0891EC4(v124 > 1, v125 + 1, 1, v123);
    }
    *(void *)(v123 + 16) = v125 + 1;
    v245((char *)(v123+ ((*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80))+ *(void *)(v25 + 72) * v125), v122, v1);
    unint64_t v258 = v123;
    uint64_t v120 = (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v114, v1);
  }
  uint64_t v245 = (uint64_t (*)(char *, char *, uint64_t))&v244;
  uint64_t v126 = MEMORY[0x1F4188790](v120);
  unint64_t v127 = (v3 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v128 = (char *)&v244 - v127;
  MEMORY[0x1F4188790](v126);
  uint64_t v130 = (char *)&v244 - ((v129 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  sub_1A09F3158();
  swift_bridgeObjectRelease();
  uint64_t v247 = (uint64_t (*)(char *, char *, uint64_t))(v25 + 56);
  v248(v130, 0, 1, v1);
  swift_bridgeObjectRelease();
  if (v250(v130, 1, v1) == 1)
  {
    uint64_t v131 = sub_1A0784C08((uint64_t)v130, &qword_1E94FBE88);
  }
  else
  {
    uint64_t v244 = *(uint64_t (**)(char *, char *, uint64_t))(v25 + 32);
    uint64_t v132 = v244((char *)&v244 - v127, v130, v1);
    MEMORY[0x1F4188790](v132);
    uint64_t v133 = (char *)&v244 - v127;
    (*(void (**)(char *, char *, uint64_t))(v25 + 16))((char *)&v244 - v127, (char *)&v244 - v127, v1);
    unint64_t v134 = v258;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v134 = sub_1A0891EC4(0, *(void *)(v134 + 16) + 1, 1, v134);
    }
    unint64_t v136 = *(void *)(v134 + 16);
    unint64_t v135 = *(void *)(v134 + 24);
    if (v136 >= v135 >> 1) {
      unint64_t v134 = sub_1A0891EC4(v135 > 1, v136 + 1, 1, v134);
    }
    *(void *)(v134 + 16) = v136 + 1;
    v244((char *)(v134+ ((*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80))+ *(void *)(v25 + 72) * v136), v133, v1);
    unint64_t v258 = v134;
    uint64_t v131 = (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v128, v1);
  }
  uint64_t v245 = (uint64_t (*)(char *, char *, uint64_t))&v244;
  uint64_t v137 = MEMORY[0x1F4188790](v131);
  unint64_t v138 = (v3 + 15) & 0xFFFFFFFFFFFFFFF0;
  unint64_t v139 = (char *)&v244 - v138;
  unint64_t v140 = (uint64_t *)(v253 + v249[16]);
  uint64_t v141 = *v140;
  uint64_t v142 = v140[2];
  MEMORY[0x1F4188790](v137);
  uint64_t v144 = (char *)&v244 - ((v143 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1A09158DC(v141, v142, (void (*)(uint64_t, uint64_t))sub_1A0919304, (uint64_t)v144);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v250(v144, 1, v1) == 1)
  {
    uint64_t v145 = sub_1A0784C08((uint64_t)v144, &qword_1E94FBE88);
  }
  else
  {
    uint64_t v244 = *(uint64_t (**)(char *, char *, uint64_t))(v25 + 32);
    uint64_t v146 = v244((char *)&v244 - v138, v144, v1);
    MEMORY[0x1F4188790](v146);
    uint64_t v147 = (char *)&v244 - v138;
    (*(void (**)(char *, char *, uint64_t))(v25 + 16))((char *)&v244 - v138, (char *)&v244 - v138, v1);
    unint64_t v148 = v258;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v148 = sub_1A0891EC4(0, *(void *)(v148 + 16) + 1, 1, v148);
    }
    unint64_t v150 = *(void *)(v148 + 16);
    unint64_t v149 = *(void *)(v148 + 24);
    if (v150 >= v149 >> 1) {
      unint64_t v148 = sub_1A0891EC4(v149 > 1, v150 + 1, 1, v148);
    }
    *(void *)(v148 + 16) = v150 + 1;
    v244((char *)(v148+ ((*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80))+ *(void *)(v25 + 72) * v150), v147, v1);
    unint64_t v258 = v148;
    uint64_t v145 = (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v139, v1);
  }
  uint64_t v245 = (uint64_t (*)(char *, char *, uint64_t))&v244;
  uint64_t v151 = MEMORY[0x1F4188790](v145);
  unint64_t v152 = (v3 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v153 = (char *)&v244 - v152;
  uint64_t v154 = (uint64_t *)(v253 + v249[17]);
  uint64_t v155 = *v154;
  uint64_t v156 = v154[2];
  MEMORY[0x1F4188790](v151);
  uint64_t v158 = (char *)&v244 - ((v157 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1A09158DC(v155, v156, (void (*)(uint64_t, uint64_t))sub_1A09191E0, (uint64_t)v158);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v250(v158, 1, v1) == 1)
  {
    uint64_t v159 = sub_1A0784C08((uint64_t)v158, &qword_1E94FBE88);
  }
  else
  {
    uint64_t v244 = *(uint64_t (**)(char *, char *, uint64_t))(v25 + 32);
    uint64_t v160 = v244((char *)&v244 - v152, v158, v1);
    MEMORY[0x1F4188790](v160);
    long long v161 = (char *)&v244 - v152;
    (*(void (**)(char *, char *, uint64_t))(v25 + 16))((char *)&v244 - v152, (char *)&v244 - v152, v1);
    unint64_t v162 = v258;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v162 = sub_1A0891EC4(0, *(void *)(v162 + 16) + 1, 1, v162);
    }
    unint64_t v164 = *(void *)(v162 + 16);
    unint64_t v163 = *(void *)(v162 + 24);
    if (v164 >= v163 >> 1) {
      unint64_t v162 = sub_1A0891EC4(v163 > 1, v164 + 1, 1, v162);
    }
    *(void *)(v162 + 16) = v164 + 1;
    v244((char *)(v162+ ((*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80))+ *(void *)(v25 + 72) * v164), v161, v1);
    unint64_t v258 = v162;
    uint64_t v159 = (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v153, v1);
  }
  uint64_t v245 = (uint64_t (*)(char *, char *, uint64_t))&v244;
  uint64_t v165 = MEMORY[0x1F4188790](v159);
  unint64_t v166 = (v3 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v167 = (char *)&v244 - v166;
  unsigned int v168 = (uint64_t *)(v253 + v249[18]);
  uint64_t v169 = *v168;
  uint64_t v170 = v168[2];
  MEMORY[0x1F4188790](v165);
  uint64_t v172 = (char *)&v244 - ((v171 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1A09158DC(v169, v170, (void (*)(uint64_t, uint64_t))sub_1A0919304, (uint64_t)v172);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v250(v172, 1, v1) == 1)
  {
    uint64_t v173 = sub_1A0784C08((uint64_t)v172, &qword_1E94FBE88);
  }
  else
  {
    uint64_t v244 = *(uint64_t (**)(char *, char *, uint64_t))(v25 + 32);
    uint64_t v174 = v244((char *)&v244 - v166, v172, v1);
    MEMORY[0x1F4188790](v174);
    uint64_t v175 = (char *)&v244 - v166;
    (*(void (**)(char *, char *, uint64_t))(v25 + 16))((char *)&v244 - v166, (char *)&v244 - v166, v1);
    unint64_t v176 = v258;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v176 = sub_1A0891EC4(0, *(void *)(v176 + 16) + 1, 1, v176);
    }
    unint64_t v178 = *(void *)(v176 + 16);
    unint64_t v177 = *(void *)(v176 + 24);
    if (v178 >= v177 >> 1) {
      unint64_t v176 = sub_1A0891EC4(v177 > 1, v178 + 1, 1, v176);
    }
    *(void *)(v176 + 16) = v178 + 1;
    v244((char *)(v176+ ((*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80))+ *(void *)(v25 + 72) * v178), v175, v1);
    unint64_t v258 = v176;
    uint64_t v173 = (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v167, v1);
  }
  uint64_t v179 = MEMORY[0x1F4188790](v173);
  uint64_t v180 = (uint64_t *)(v253 + v249[19]);
  uint64_t v182 = *v180;
  uint64_t v181 = v180[1];
  MEMORY[0x1F4188790](v179);
  uint64_t v184 = (char *)&v244 - ((v183 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&long long v254 = v182;
  *((void *)&v254 + 1) = v181;
  uint64_t v255 = v185;
  swift_bridgeObjectRetain();
  sub_1A0914868();
  if (v186)
  {
    sub_1A09F3158();
    swift_bridgeObjectRelease();
    uint64_t v187 = 0;
  }
  else
  {
    uint64_t v187 = 1;
  }
  v248(v184, v187, 1, v1);
  swift_bridgeObjectRelease();
  if (v250(v184, 1, v1) == 1)
  {
    uint64_t v188 = sub_1A0784C08((uint64_t)v184, &qword_1E94FBE88);
  }
  else
  {
    uint64_t v245 = (uint64_t (*)(char *, char *, uint64_t))&v244;
    uint64_t v244 = *(uint64_t (**)(char *, char *, uint64_t))(v25 + 32);
    uint64_t v189 = v244((char *)&v244 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), v184, v1);
    MEMORY[0x1F4188790](v189);
    (*(void (**)(char *, char *, uint64_t))(v25 + 16))((char *)&v244 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), (char *)&v244 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), v1);
    unint64_t v190 = v258;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v190 = sub_1A0891EC4(0, *(void *)(v190 + 16) + 1, 1, v190);
    }
    unint64_t v192 = *(void *)(v190 + 16);
    unint64_t v191 = *(void *)(v190 + 24);
    if (v192 >= v191 >> 1) {
      unint64_t v190 = sub_1A0891EC4(v191 > 1, v192 + 1, 1, v190);
    }
    *(void *)(v190 + 16) = v192 + 1;
    v244((char *)(v190+ ((*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80))+ *(void *)(v25 + 72) * v192), (char *)&v244 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), v1);
    unint64_t v258 = v190;
    uint64_t v188 = (*(uint64_t (**)(char *, uint64_t))(v25 + 8))((char *)&v244 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), v1);
  }
  uint64_t v245 = (uint64_t (*)(char *, char *, uint64_t))&v244;
  uint64_t v193 = MEMORY[0x1F4188790](v188);
  unint64_t v194 = (v3 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v195 = (char *)&v244 - v194;
  MEMORY[0x1F4188790](v193);
  unint64_t v197 = (char *)&v244 - ((v196 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  sub_1A09F3158();
  swift_bridgeObjectRelease();
  v248(v197, 0, 1, v1);
  swift_bridgeObjectRelease();
  if (v250(v197, 1, v1) == 1)
  {
    uint64_t v198 = sub_1A0784C08((uint64_t)v197, &qword_1E94FBE88);
  }
  else
  {
    uint64_t v244 = *(uint64_t (**)(char *, char *, uint64_t))(v25 + 32);
    uint64_t v199 = v244((char *)&v244 - v194, v197, v1);
    MEMORY[0x1F4188790](v199);
    uint64_t v200 = (char *)&v244 - v194;
    (*(void (**)(char *, char *, uint64_t))(v25 + 16))((char *)&v244 - v194, (char *)&v244 - v194, v1);
    unint64_t v201 = v258;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v201 = sub_1A0891EC4(0, *(void *)(v201 + 16) + 1, 1, v201);
    }
    unint64_t v203 = *(void *)(v201 + 16);
    unint64_t v202 = *(void *)(v201 + 24);
    if (v203 >= v202 >> 1) {
      unint64_t v201 = sub_1A0891EC4(v202 > 1, v203 + 1, 1, v201);
    }
    *(void *)(v201 + 16) = v203 + 1;
    v244((char *)(v201+ ((*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80))+ *(void *)(v25 + 72) * v203), v200, v1);
    unint64_t v258 = v201;
    uint64_t v198 = (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v195, v1);
  }
  uint64_t v204 = MEMORY[0x1F4188790](v198);
  uint64_t v205 = (uint64_t *)(v253 + v249[21]);
  uint64_t v207 = *v205;
  uint64_t v206 = v205[1];
  MEMORY[0x1F4188790](v204);
  long long v209 = (char *)&v244 - ((v208 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&long long v254 = v207;
  *((void *)&v254 + 1) = v206;
  LOBYTE(v255) = v210;
  swift_bridgeObjectRetain();
  sub_1A0914C48();
  if (v211)
  {
    sub_1A09F3158();
    swift_bridgeObjectRelease();
    uint64_t v212 = 0;
  }
  else
  {
    uint64_t v212 = 1;
  }
  v248(v209, v212, 1, v1);
  swift_bridgeObjectRelease();
  if (v250(v209, 1, v1) == 1)
  {
    uint64_t v213 = sub_1A0784C08((uint64_t)v209, &qword_1E94FBE88);
  }
  else
  {
    uint64_t v245 = (uint64_t (*)(char *, char *, uint64_t))&v244;
    uint64_t v244 = *(uint64_t (**)(char *, char *, uint64_t))(v25 + 32);
    uint64_t v214 = v244((char *)&v244 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), v209, v1);
    MEMORY[0x1F4188790](v214);
    (*(void (**)(char *, char *, uint64_t))(v25 + 16))((char *)&v244 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), (char *)&v244 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), v1);
    unint64_t v215 = v258;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v215 = sub_1A0891EC4(0, *(void *)(v215 + 16) + 1, 1, v215);
    }
    unint64_t v217 = *(void *)(v215 + 16);
    unint64_t v216 = *(void *)(v215 + 24);
    if (v217 >= v216 >> 1) {
      unint64_t v215 = sub_1A0891EC4(v216 > 1, v217 + 1, 1, v215);
    }
    *(void *)(v215 + 16) = v217 + 1;
    v244((char *)(v215+ ((*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80))+ *(void *)(v25 + 72) * v217), (char *)&v244 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), v1);
    unint64_t v258 = v215;
    uint64_t v213 = (*(uint64_t (**)(char *, uint64_t))(v25 + 8))((char *)&v244 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), v1);
  }
  uint64_t v245 = (uint64_t (*)(char *, char *, uint64_t))&v244;
  uint64_t v218 = MEMORY[0x1F4188790](v213);
  unint64_t v219 = (v3 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v220 = (char *)&v244 - v219;
  uint64_t v221 = (uint64_t *)(v253 + v249[22]);
  uint64_t v222 = *v221;
  uint64_t v223 = v221[2];
  MEMORY[0x1F4188790](v218);
  uint64_t v225 = (char *)&v244 - ((v224 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1A09158DC(v222, v223, (void (*)(uint64_t, uint64_t))sub_1A0919304, (uint64_t)v225);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v250(v225, 1, v1) == 1)
  {
    uint64_t v226 = sub_1A0784C08((uint64_t)v225, &qword_1E94FBE88);
  }
  else
  {
    uint64_t v244 = *(uint64_t (**)(char *, char *, uint64_t))(v25 + 32);
    uint64_t v227 = v244((char *)&v244 - v219, v225, v1);
    MEMORY[0x1F4188790](v227);
    unint64_t v228 = (char *)&v244 - v219;
    (*(void (**)(char *, char *, uint64_t))(v25 + 16))((char *)&v244 - v219, (char *)&v244 - v219, v1);
    unint64_t v229 = v258;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v229 = sub_1A0891EC4(0, *(void *)(v229 + 16) + 1, 1, v229);
    }
    unint64_t v231 = *(void *)(v229 + 16);
    unint64_t v230 = *(void *)(v229 + 24);
    if (v231 >= v230 >> 1) {
      unint64_t v229 = sub_1A0891EC4(v230 > 1, v231 + 1, 1, v229);
    }
    *(void *)(v229 + 16) = v231 + 1;
    v244((char *)(v229+ ((*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80))+ *(void *)(v25 + 72) * v231), v228, v1);
    unint64_t v258 = v229;
    uint64_t v226 = (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v220, v1);
  }
  uint64_t v245 = (uint64_t (*)(char *, char *, uint64_t))&v244;
  uint64_t v232 = MEMORY[0x1F4188790](v226);
  uint64_t v233 = (char *)&v244 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v234 = *(void *)(v253 + v249[23] + 24);
  MEMORY[0x1F4188790](v232);
  uint64_t v236 = (char *)&v244 - ((v235 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!v234)
  {
    v248((char *)&v244 - ((v235 + 15) & 0xFFFFFFFFFFFFFFF0), 1, 1, v1);
    goto LABEL_147;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1A09F3158();
  v248(v236, 0, 1, v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v250(v236, 1, v1) == 1)
  {
LABEL_147:
    sub_1A0784C08((uint64_t)v236, &qword_1E94FBE88);
    return v258;
  }
  v237 = *(uint64_t (**)(char *, char *, uint64_t))(v25 + 32);
  uint64_t v238 = v237((char *)&v244 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), v236, v1);
  MEMORY[0x1F4188790](v238);
  uint64_t v239 = (char *)&v244 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v239, v233, v1);
  unint64_t v240 = v258;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v240 = sub_1A0891EC4(0, *(void *)(v240 + 16) + 1, 1, v240);
  }
  unint64_t v242 = *(void *)(v240 + 16);
  unint64_t v241 = *(void *)(v240 + 24);
  if (v242 >= v241 >> 1) {
    unint64_t v240 = sub_1A0891EC4(v241 > 1, v242 + 1, 1, v240);
  }
  *(void *)(v240 + 16) = v242 + 1;
  v237((char *)(v240+ ((*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80))+ *(void *)(v25 + 72) * v242), v239, v1);
  unint64_t v258 = v240;
  (*(void (**)(char *, uint64_t))(v25 + 8))(v233, v1);
  return v258;
}

uint64_t TapToRadarDraft.open()()
{
  *(void *)(v1 + 128) = v0;
  return MEMORY[0x1F4188298](sub_1A0912F70, 0, 0);
}

uint64_t sub_1A0912F70()
{
  uint64_t v1 = sub_1A09F33A8();
  v0[17] = v1;
  uint64_t v2 = *(void *)(v1 - 8);
  v0[18] = v2;
  uint64_t v3 = swift_task_alloc();
  v0[19] = v3;
  sub_1A09102BC(v3);
  id v5 = objc_msgSend(self, sel_defaultWorkspace);
  v0[20] = v5;
  if (v5)
  {
    uint64_t v6 = v5;
    uint64_t v7 = sub_1A09F3308();
    v0[21] = v7;
    v0[2] = v0;
    v0[7] = v0 + 15;
    v0[3] = sub_1A0913268;
    uint64_t v8 = swift_continuation_init();
    v0[10] = MEMORY[0x1E4F143A8];
    v0[11] = 0x40000000;
    v0[12] = sub_1A09134C8;
    v0[13] = &unk_1E5A0FD58;
    v0[14] = v8;
    objc_msgSend(v6, sel_openURL_configuration_completionHandler_, v7, 0, v0 + 10);
    return MEMORY[0x1F41881E8](v0 + 2);
  }
  else
  {
    if (qword_1E94F85B8 != -1) {
      swift_once();
    }
    uint64_t v9 = sub_1A09F39E8();
    sub_1A078510C(v9, (uint64_t)qword_1E95225F0);
    unint64_t v10 = sub_1A09F39C8();
    os_log_type_t v11 = sub_1A09F4378();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v12 = 0;
      _os_log_impl(&dword_1A0772000, v10, v11, "No default LSApplicationWorkspace, could not open Tap-to-Radar!", v12, 2u);
      MEMORY[0x1A6228C20](v12, -1, -1);
    }

    (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v3, v1);
    swift_task_dealloc();
    uint64_t v13 = (uint64_t (*)(void))v0[1];
    return v13();
  }
}

uint64_t sub_1A0913268()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 176) = v1;
  if (v1) {
    uint64_t v2 = sub_1A091341C;
  }
  else {
    uint64_t v2 = sub_1A0913378;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1A0913378()
{
  uint64_t v1 = *(void **)(v0 + 168);
  uint64_t v3 = *(void *)(v0 + 144);
  uint64_t v2 = *(void *)(v0 + 152);
  uint64_t v4 = *(void *)(v0 + 136);

  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  id v5 = *(uint64_t (**)(void))(v0 + 8);
  return v5();
}

uint64_t sub_1A091341C()
{
  uint64_t v1 = (void *)v0[21];
  uint64_t v2 = v0[19];
  uint64_t v3 = (void *)v0[20];
  uint64_t v4 = v0[17];
  uint64_t v5 = v0[18];
  swift_willThrow();

  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v2, v4);
  swift_task_dealloc();
  uint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t sub_1A09134C8(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = *(void *)(a1 + 32);
  if (a3)
  {
    sub_1A07856F8((uint64_t *)&unk_1EB4A5620);
    uint64_t v5 = swift_allocError();
    *uint64_t v6 = a3;
    id v7 = a3;
    return MEMORY[0x1F4188208](v3, v5);
  }
  else
  {
    if (a2) {
      uint64_t v8 = sub_1A09F3D08();
    }
    else {
      uint64_t v8 = 0;
    }
    uint64_t v10 = v8;
    sub_1A0919178((uint64_t)&v10, *(void *)(*(void *)(v3 + 64) + 40));
    return swift_continuation_throwingResume();
  }
}

uint64_t static TapToRadarDraft.Component.messagesAll.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_1E94F85A0 != -1) {
    swift_once();
  }
  uint64_t v2 = qword_1E94FBD08;
  uint64_t v3 = unk_1E94FBD10;
  uint64_t v4 = qword_1E94FBD18;
  *(_OWORD *)a1 = xmmword_1E94FBCF8;
  *(void *)(a1 + 16) = v2;
  *(void *)(a1 + 24) = v3;
  *(void *)(a1 + 32) = v4;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t static TapToRadarDraft.submitTapToRadar(title:problemDescription:deviceClasses:component:classification:reproducibility:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, unsigned __int8 *a7@<X6>, unsigned __int8 *a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v16 = *(void *)(a6 + 16);
  uint64_t v15 = *(void *)(a6 + 24);
  uint64_t v17 = *(void *)(a6 + 32);
  unsigned __int8 v18 = *a7;
  unsigned __int8 v19 = *a8;
  long long v30 = *(_OWORD *)a6;
  uint64_t v31 = v16;
  uint64_t v32 = v15;
  uint64_t v33 = v17;
  unsigned __int8 v29 = v18;
  unsigned __int8 v28 = v19;
  uint64_t v20 = sub_1A07856F8((uint64_t *)&unk_1E94FAF20);
  MEMORY[0x1F4188790](v20 - 8);
  char v22 = (char *)&v25 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1A09F3468();
  uint64_t v23 = sub_1A09F3478();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v22, 0, 1, v23);
  uint64_t v27 = 0;
  unsigned __int8 v26 = 0;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return sub_1A090FCA0(0, 0, &v30, &v29, &v28, a1, a2, a3, a9, a4, MEMORY[0x1E4FBC860], (uint64_t)v22, MEMORY[0x1E4FBC860], MEMORY[0x1E4FBC860], MEMORY[0x1E4FBC860], 0, MEMORY[0x1E4FBC860], a5, MEMORY[0x1E4FBC860],
           &v27,
           1u,
           &v26,
           MEMORY[0x1E4FBC860],
           0,
           0);
}

uint64_t sub_1A09137EC()
{
  sub_1A07856F8(&qword_1E94F9B90);
  sub_1A09F3168();
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1A0A099E0;
  sub_1A09F4AE8();
  sub_1A09F3158();
  swift_bridgeObjectRelease();
  sub_1A09F3158();
  sub_1A09F3158();
  return v0;
}

double sub_1A091397C()
{
  *(void *)&double result = 450305;
  xmmword_1E94FBCF8 = xmmword_1A0A0E370;
  qword_1E94FBD08 = 0xE800000000000000;
  unk_1E94FBD10 = 7105633;
  qword_1E94FBD18 = 0xE300000000000000;
  return result;
}

double sub_1A09139AC()
{
  *(void *)&double result = 137610;
  xmmword_1E94FBD20 = xmmword_1A0A0E380;
  qword_1E94FBD30 = 0xE800000000000000;
  unk_1E94FBD38 = 0x6775422077654E28;
  qword_1E94FBD40 = 0xEA00000000002973;
  return result;
}

uint64_t static TapToRadarDraft.Component.messagesNewBugs.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_1E94F85A8 != -1) {
    swift_once();
  }
  uint64_t v2 = qword_1E94FBD30;
  uint64_t v3 = unk_1E94FBD38;
  uint64_t v4 = qword_1E94FBD40;
  *(_OWORD *)a1 = xmmword_1E94FBD20;
  *(void *)(a1 + 16) = v2;
  *(void *)(a1 + 24) = v3;
  *(void *)(a1 + 32) = v4;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

double sub_1A0913A70()
{
  *(void *)&double result = 988691;
  xmmword_1E94FBD48 = xmmword_1A0A0E390;
  qword_1E94FBD58 = 0xEA00000000007365;
  unk_1E94FBD60 = 825242446;
  qword_1E94FBD68 = 0xE400000000000000;
  return result;
}

uint64_t static TapToRadarDraft.Component.mrmessages.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_1E94F85B0 != -1) {
    swift_once();
  }
  uint64_t v2 = qword_1E94FBD58;
  uint64_t v3 = unk_1E94FBD60;
  uint64_t v4 = qword_1E94FBD68;
  *(_OWORD *)a1 = xmmword_1E94FBD48;
  *(void *)(a1 + 16) = v2;
  *(void *)(a1 + 24) = v3;
  *(void *)(a1 + 32) = v4;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t TapToRadarDraft.Component.hash(into:)()
{
  sub_1A09F4C58();
  swift_bridgeObjectRetain();
  sub_1A09F3DA8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1A09F3DA8();

  return swift_bridgeObjectRelease();
}

uint64_t TapToRadarDraft.Component.hashValue.getter()
{
  return sub_1A09F4C88();
}

uint64_t sub_1A0913C60()
{
  return sub_1A09F4C88();
}

uint64_t sub_1A0913D00()
{
  sub_1A09F4C58();
  swift_bridgeObjectRetain();
  sub_1A09F3DA8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1A09F3DA8();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1A0913D90()
{
  return sub_1A09F4C88();
}

unint64_t sub_1A0913E30()
{
  unint64_t result = 0x7974697275636553;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0xD000000000000014;
      break;
    case 2:
      unint64_t result = 0x7265776F50;
      break;
    case 3:
      unint64_t result = 0x616D726F66726550;
      break;
    case 4:
      unint64_t result = 0x69626173552F4955;
      break;
    case 5:
      unint64_t result = 0x2073756F69726553;
      break;
    case 6:
      unint64_t result = 0x754220726568744FLL;
      break;
    case 7:
      unint64_t result = 0x2065727574616546;
      break;
    case 8:
      unint64_t result = 0x6D65636E61686E45;
      break;
    case 9:
      unint64_t result = 1802723668;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t TapToRadarDraft.Classification.rawValue.getter()
{
  unint64_t result = 0x7974697275636553;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0xD000000000000014;
      break;
    case 2:
      unint64_t result = 0x7265776F50;
      break;
    case 3:
      unint64_t result = 0x616D726F66726550;
      break;
    case 4:
      unint64_t result = 0x69626173552F4955;
      break;
    case 5:
      unint64_t result = 0x2073756F69726553;
      break;
    case 6:
      unint64_t result = 0x754220726568744FLL;
      break;
    case 7:
      unint64_t result = 0x2065727574616546;
      break;
    case 8:
      unint64_t result = 0x6D65636E61686E45;
      break;
    case 9:
      unint64_t result = 1802723668;
      break;
    default:
      return result;
  }
  return result;
}

IMSharedUtilities::TapToRadarDraft::Classification_optional __swiftcall TapToRadarDraft.Classification.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_1A09F4818();
  result.value = swift_bridgeObjectRelease();
  char v5 = 10;
  if (v3 < 0xA) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

uint64_t sub_1A091414C(unsigned __int8 *a1, char *a2)
{
  return sub_1A09B1DE8(*a1, *a2);
}

uint64_t sub_1A0914158()
{
  return sub_1A09F4C88();
}

uint64_t sub_1A09141A0()
{
  return sub_1A09B26A0();
}

uint64_t sub_1A09141A8()
{
  return sub_1A09F4C88();
}

IMSharedUtilities::TapToRadarDraft::Classification_optional sub_1A09141EC(Swift::String *a1)
{
  return TapToRadarDraft.Classification.init(rawValue:)(*a1);
}

unint64_t sub_1A09141F8@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = TapToRadarDraft.Classification.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t TapToRadarDraft.Reproducibility.rawValue.getter()
{
  uint64_t result = 0x737961776C41;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x656D6974656D6F53;
      break;
    case 2:
      uint64_t result = 0x796C65726152;
      break;
    case 3:
      uint64_t result = 0x656C62616E55;
      break;
    case 4:
      uint64_t result = 0x74276E6469442049;
      break;
    case 5:
      uint64_t result = 0x6C70704120746F4ELL;
      break;
    default:
      return result;
  }
  return result;
}

IMSharedUtilities::TapToRadarDraft::Reproducibility_optional __swiftcall TapToRadarDraft.Reproducibility.init(rawValue:)(Swift::String rawValue)
{
  return (IMSharedUtilities::TapToRadarDraft::Reproducibility_optional)sub_1A09145E4(v1);
}

uint64_t sub_1A09142FC(unsigned __int8 *a1, char *a2)
{
  return sub_1A09B19F8(*a1, *a2);
}

uint64_t sub_1A0914308()
{
  return sub_1A09B2314();
}

uint64_t sub_1A0914310()
{
  sub_1A09F3DA8();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1A0914410()
{
  return sub_1A09B2A30();
}

IMSharedUtilities::TapToRadarDraft::Reproducibility_optional sub_1A0914418(Swift::String *a1)
{
  return TapToRadarDraft.Reproducibility.init(rawValue:)(*a1);
}

void sub_1A0914424(uint64_t a1@<X8>)
{
  unint64_t v2 = 0xE600000000000000;
  uint64_t v3 = 0x737961776C41;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE900000000000073;
      uint64_t v3 = 0x656D6974656D6F53;
      goto LABEL_3;
    case 2:
      *(void *)a1 = 0x796C65726152;
      *(void *)(a1 + 8) = 0xE600000000000000;
      break;
    case 3:
      *(void *)a1 = 0x656C62616E55;
      *(void *)(a1 + 8) = 0xE600000000000000;
      break;
    case 4:
      strcpy((char *)a1, "I Didn't Try");
      *(unsigned char *)(a1 + 13) = 0;
      *(_WORD *)(a1 + 14) = -5120;
      break;
    case 5:
      strcpy((char *)a1, "Not Applicable");
      *(unsigned char *)(a1 + 15) = -18;
      break;
    default:
LABEL_3:
      *(void *)a1 = v3;
      *(void *)(a1 + 8) = v2;
      break;
  }
}

uint64_t sub_1A0914504()
{
  return *(void *)&aAlways_1[8 * *v0];
}

uint64_t TapToRadarDraft.DeviceClass.rawValue.getter()
{
  uint64_t result = 0x656E6F685069;
  switch(*v0)
  {
    case 1:
      uint64_t result = 1684099177;
      break;
    case 2:
      uint64_t result = 0x6863746157;
      break;
    case 3:
      uint64_t result = 0x5654656C707041;
      break;
    case 4:
      uint64_t result = 0x646F50656D6F48;
      break;
    case 5:
      uint64_t result = 6512973;
      break;
    default:
      return result;
  }
  return result;
}

IMSharedUtilities::TapToRadarDraft::DeviceClass_optional __swiftcall TapToRadarDraft.DeviceClass.init(rawValue:)(Swift::String rawValue)
{
  return (IMSharedUtilities::TapToRadarDraft::DeviceClass_optional)sub_1A09145E4(v1);
}

uint64_t sub_1A09145E4@<X0>(char *a1@<X8>)
{
  unint64_t v2 = sub_1A09F4818();
  uint64_t result = swift_bridgeObjectRelease();
  char v4 = 6;
  if (v2 < 6) {
    char v4 = v2;
  }
  *a1 = v4;
  return result;
}

uint64_t sub_1A091463C(unsigned __int8 *a1, char *a2)
{
  return sub_1A09B2138(*a1, *a2);
}

uint64_t sub_1A0914648()
{
  return sub_1A09B242C();
}

uint64_t sub_1A0914650()
{
  sub_1A09F3DA8();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1A0914734()
{
  return sub_1A09B2838();
}

IMSharedUtilities::TapToRadarDraft::DeviceClass_optional sub_1A091473C(Swift::String *a1)
{
  return TapToRadarDraft.DeviceClass.init(rawValue:)(*a1);
}

void sub_1A0914748(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE600000000000000;
  uint64_t v3 = 0x656E6F685069;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE400000000000000;
      uint64_t v3 = 1684099177;
      goto LABEL_3;
    case 2:
      *a1 = 0x6863746157;
      a1[1] = 0xE500000000000000;
      break;
    case 3:
      *a1 = 0x5654656C707041;
      a1[1] = 0xE700000000000000;
      break;
    case 4:
      *a1 = 0x646F50656D6F48;
      a1[1] = 0xE700000000000000;
      break;
    case 5:
      *a1 = 6512973;
      a1[1] = 0xE300000000000000;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

uint64_t sub_1A091480C()
{
  return *(void *)&aIphone_1[8 * *v0];
}

uint64_t TapToRadarDraft.RemoteDeviceSelections.rawValue.getter()
{
  return *(void *)v0;
}

uint64_t TapToRadarDraft.RemoteDeviceSelections.rawValue.setter(uint64_t result)
{
  *uint64_t v1 = result;
  return result;
}

uint64_t (*TapToRadarDraft.RemoteDeviceSelections.rawValue.modify())()
{
  return nullsub_5;
}

IMSharedUtilities::TapToRadarDraft::RemoteDeviceSelections __swiftcall TapToRadarDraft.RemoteDeviceSelections.init(rawValue:)(IMSharedUtilities::TapToRadarDraft::RemoteDeviceSelections rawValue)
{
  v1->rawValue = rawValue.rawValue;
  return rawValue;
}

uint64_t sub_1A0914868()
{
  uint64_t v1 = *v0;
  if (*v0)
  {
    if (v1)
    {
      unint64_t v2 = sub_1A0891400(0, 1, 1, MEMORY[0x1E4FBC860]);
      unint64_t v5 = v2[2];
      unint64_t v4 = v2[3];
      if (v5 >= v4 >> 1) {
        unint64_t v2 = sub_1A0891400((void *)(v4 > 1), v5 + 1, 1, v2);
      }
      v2[2] = v5 + 1;
      uint64_t v6 = &v2[2 * v5];
      v6[4] = 0x79616C50726941;
      v6[5] = 0xE700000000000000;
      if ((v1 & 2) == 0)
      {
LABEL_14:
        if ((v1 & 4) != 0)
        {
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            unint64_t v2 = sub_1A0891400(0, v2[2] + 1, 1, v2);
          }
          unint64_t v11 = v2[2];
          unint64_t v10 = v2[3];
          if (v11 >= v10 >> 1) {
            unint64_t v2 = sub_1A0891400((void *)(v10 > 1), v11 + 1, 1, v2);
          }
          v2[2] = v11 + 1;
          uint64_t v12 = (char *)&v2[2 * v11];
          strcpy(v12 + 32, "MediaSystems");
          v12[45] = 0;
          *((_WORD *)v12 + 23) = -5120;
          if ((v1 & 8) == 0)
          {
LABEL_16:
            if ((v1 & 0x10) == 0)
            {
LABEL_33:
              sub_1A07856F8(&qword_1EB4A5610);
              sub_1A09190B4();
              uint64_t v3 = sub_1A09F3DB8();
              swift_bridgeObjectRelease();
              return v3;
            }
LABEL_28:
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              unint64_t v2 = sub_1A0891400(0, v2[2] + 1, 1, v2);
            }
            unint64_t v17 = v2[2];
            unint64_t v16 = v2[3];
            if (v17 >= v16 >> 1) {
              unint64_t v2 = sub_1A0891400((void *)(v16 > 1), v17 + 1, 1, v2);
            }
            v2[2] = v17 + 1;
            unsigned __int8 v18 = &v2[2 * v17];
            v18[4] = 0x79627261654ELL;
            v18[5] = 0xE600000000000000;
            goto LABEL_33;
          }
        }
        else if ((v1 & 8) == 0)
        {
          goto LABEL_16;
        }
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v2 = sub_1A0891400(0, v2[2] + 1, 1, v2);
        }
        unint64_t v14 = v2[2];
        unint64_t v13 = v2[3];
        if (v14 >= v13 >> 1) {
          unint64_t v2 = sub_1A0891400((void *)(v13 > 1), v14 + 1, 1, v2);
        }
        v2[2] = v14 + 1;
        uint64_t v15 = &v2[2 * v14];
        v15[4] = 0x616C506572616853;
        void v15[5] = 0xE900000000000079;
        if ((v1 & 0x10) == 0) {
          goto LABEL_33;
        }
        goto LABEL_28;
      }
    }
    else
    {
      unint64_t v2 = (void *)MEMORY[0x1E4FBC860];
      if ((v1 & 2) == 0) {
        goto LABEL_14;
      }
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v2 = sub_1A0891400(0, v2[2] + 1, 1, v2);
    }
    unint64_t v8 = v2[2];
    unint64_t v7 = v2[3];
    if (v8 >= v7 >> 1) {
      unint64_t v2 = sub_1A0891400((void *)(v7 > 1), v8 + 1, 1, v2);
    }
    v2[2] = v8 + 1;
    uint64_t v9 = &v2[2 * v8];
    v9[4] = 0x4874694B656D6F48;
    void v9[5] = 0xEB00000000656D6FLL;
    goto LABEL_14;
  }
  return 0;
}

uint64_t sub_1A0914B8C()
{
  return sub_1A09F4C88();
}

uint64_t sub_1A0914BD4()
{
  return sub_1A09F4C58();
}

uint64_t sub_1A0914C00()
{
  return sub_1A09F4C88();
}

unint64_t sub_1A0914C48()
{
  int v1 = *v0;
  switch(*v0)
  {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      char v2 = sub_1A09F4B28();
      swift_bridgeObjectRelease();
      if (v2) {
        goto LABEL_4;
      }
      unint64_t result = 48;
      switch(v1)
      {
        case 2:
          unint64_t result = 12589;
          break;
        case 3:
        case 4:
        case 5:
          unint64_t result = 0xD000000000000010;
          break;
        case 6:
          unint64_t result = 0xD00000000000001CLL;
          break;
        default:
          return result;
      }
      break;
    default:
      swift_bridgeObjectRelease();
LABEL_4:
      unint64_t result = 0;
      break;
  }
  return result;
}

unint64_t TapToRadarDraft.AutoDiagnostics.rawValue.getter()
{
  unint64_t result = 7105633;
  switch(*v0)
  {
    case 1:
      unint64_t result = 48;
      break;
    case 2:
      unint64_t result = 12589;
      break;
    case 3:
    case 4:
    case 5:
      unint64_t result = 0xD000000000000010;
      break;
    case 6:
      unint64_t result = 0xD00000000000001CLL;
      break;
    default:
      return result;
  }
  return result;
}

IMSharedUtilities::TapToRadarDraft::AutoDiagnostics_optional __swiftcall TapToRadarDraft.AutoDiagnostics.init(rawValue:)(Swift::String rawValue)
{
  char v2 = v1;
  unint64_t v3 = sub_1A09F4818();
  result.value = swift_bridgeObjectRelease();
  char v5 = 7;
  if (v3 < 7) {
    char v5 = v3;
  }
  *char v2 = v5;
  return result;
}

uint64_t sub_1A0914F08(unsigned __int8 *a1, char *a2)
{
  return sub_1A09B1C0C(*a1, *a2);
}

uint64_t sub_1A0914F14()
{
  return sub_1A09B2930();
}

uint64_t sub_1A0914F20()
{
  return sub_1A09B25B0();
}

uint64_t sub_1A0914F28()
{
  return sub_1A09B2930();
}

IMSharedUtilities::TapToRadarDraft::AutoDiagnostics_optional sub_1A0914F30(Swift::String *a1)
{
  return TapToRadarDraft.AutoDiagnostics.init(rawValue:)(*a1);
}

unint64_t sub_1A0914F3C@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = TapToRadarDraft.AutoDiagnostics.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

unint64_t TapToRadarDraft.TapToRadarError.errorDescription.getter()
{
  unint64_t v1 = 0xD00000000000001DLL;
  if (*v0 != 1) {
    unint64_t v1 = 0xD00000000000002DLL;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0xD000000000000028;
  }
}

BOOL static TapToRadarDraft.TapToRadarError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t TapToRadarDraft.TapToRadarError.hash(into:)()
{
  return sub_1A09F4C58();
}

uint64_t TapToRadarDraft.TapToRadarError.hashValue.getter()
{
  return sub_1A09F4C88();
}

uint64_t sub_1A0915054()
{
  return sub_1A09F31E8();
}

uint64_t sub_1A091506C()
{
  return sub_1A09F31F8();
}

uint64_t sub_1A0915084()
{
  return sub_1A09F31D8();
}

uint64_t sub_1A091509C@<X0>(char a1@<W2>, uint64_t a2@<X8>)
{
  switch(a1)
  {
    case 10:
      uint64_t v3 = sub_1A09F3168();
      unint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56);
      uint64_t v5 = v3;
      uint64_t v6 = a2;
      uint64_t v7 = 1;
      break;
    default:
      sub_1A09F3158();
      swift_bridgeObjectRelease();
      uint64_t v8 = sub_1A09F3168();
      unint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56);
      uint64_t v5 = v8;
      uint64_t v6 = a2;
      uint64_t v7 = 0;
      break;
  }

  return v4(v6, v7, 1, v5);
}

uint64_t sub_1A09152B4@<X0>(char a1@<W2>, uint64_t a2@<X8>)
{
  switch(a1)
  {
    case 6:
      uint64_t v9 = sub_1A09F3168();
      unint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56);
      uint64_t v5 = v9;
      uint64_t v6 = a2;
      uint64_t v7 = 1;
      break;
    default:
      sub_1A09F3158();
      swift_bridgeObjectRelease();
      uint64_t v3 = sub_1A09F3168();
      unint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56);
      uint64_t v5 = v3;
      uint64_t v6 = a2;
      uint64_t v7 = 0;
      break;
  }

  return v4(v6, v7, 1, v5);
}

uint64_t sub_1A0915438@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(sub_1A07856F8(&qword_1E94FBDD0) + 36);
  uint64_t v4 = sub_1A09F3478();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1A07856F8((uint64_t *)&unk_1E94FAF20);
  MEMORY[0x1F4188790](v8 - 8);
  unint64_t v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A08CB838(v3, (uint64_t)v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v10, 1, v4) == 1)
  {
    sub_1A0784C08((uint64_t)v10, (uint64_t *)&unk_1E94FAF20);
    uint64_t v11 = sub_1A09F3168();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(a1, 1, 1, v11);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v10, v4);
    id v13 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28C10]), sel_init);
    unint64_t v14 = (void *)sub_1A09F3DE8();
    objc_msgSend(v13, sel_setDateFormat_, v14);

    objc_msgSend(v13, sel_setDoesRelativeDateFormatting_, 0);
    uint64_t v15 = (void *)sub_1A09F3428();
    id v16 = objc_msgSend(v13, sel_stringFromDate_, v15);

    sub_1A09F3E18();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    sub_1A09F3158();
    swift_bridgeObjectRelease();
    uint64_t v17 = sub_1A09F3168();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(a1, 0, 1, v17);
  }
}

uint64_t sub_1A091570C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  if (*(void *)(a2 + 16))
  {
    MEMORY[0x1F4188790](a1);
    sub_1A09F33A8();
    uint64_t KeyPath = swift_getKeyPath();
    swift_retain();
    sub_1A0919434(a2, KeyPath);
    swift_release_n();
    sub_1A07856F8(&qword_1EB4A5610);
    sub_1A09190B4();
    sub_1A09F3DB8();
    swift_bridgeObjectRelease();
    sub_1A09F3158();
    swift_bridgeObjectRelease();
    uint64_t v6 = sub_1A09F3168();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(a3, 0, 1, v6);
  }
  else
  {
    uint64_t v8 = sub_1A09F3168();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56);
    return v9(a3, 1, 1, v8);
  }
}

uint64_t sub_1A09158DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, void (*a3)(uint64_t, uint64_t)@<X5>, uint64_t a4@<X8>)
{
  if (*(void *)(a2 + 16))
  {
    MEMORY[0x1F4188790](a1);
    uint64_t KeyPath = swift_getKeyPath();
    swift_retain();
    a3(a2, KeyPath);
    swift_release_n();
    sub_1A07856F8(&qword_1EB4A5610);
    sub_1A09190B4();
    sub_1A09F3DB8();
    swift_bridgeObjectRelease();
    sub_1A09F3158();
    swift_bridgeObjectRelease();
    uint64_t v8 = sub_1A09F3168();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(a4, 0, 1, v8);
  }
  else
  {
    uint64_t v10 = sub_1A09F3168();
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56);
    return v11(a4, 1, 1, v10);
  }
}

uint64_t sub_1A0915AA0()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1A0915AD0()
{
  return sub_1A09F4AE8();
}

uint64_t sub_1A0915B0C()
{
  if (*v0) {
    return 49;
  }
  else {
    return 48;
  }
}

uint64_t sub_1A0915B24()
{
  id v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28C10]), sel_init);
  uint64_t v1 = (void *)sub_1A09F3DE8();
  objc_msgSend(v0, sel_setDateFormat_, v1);

  objc_msgSend(v0, sel_setDoesRelativeDateFormatting_, 0);
  char v2 = (void *)sub_1A09F3428();
  id v3 = objc_msgSend(v0, sel_stringFromDate_, v2);

  uint64_t v4 = sub_1A09F3E18();
  return v4;
}

uint64_t sub_1A0915C00()
{
  return sub_1A09F3368();
}

uint64_t sub_1A0915C1C()
{
  sub_1A09F40E8();
  swift_getWitnessTable();
  uint64_t v0 = sub_1A09F4338();
  uint64_t v1 = 0;
  if ((v0 & 1) == 0)
  {
    MEMORY[0x1F4188790](v0);
    uint64_t KeyPath = swift_getKeyPath();
    MEMORY[0x1F4188790](KeyPath);
    swift_getWitnessTable();
    sub_1A09F3F48();
    swift_release();
    sub_1A07856F8(&qword_1EB4A5610);
    sub_1A09190B4();
    uint64_t v1 = sub_1A09F3DB8();
    swift_bridgeObjectRelease();
  }
  return v1;
}

uint64_t sub_1A0915DB0()
{
  return sub_1A0915C1C();
}

uint64_t sub_1A0915DC4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a1 - 8);
  uint64_t v5 = MEMORY[0x1F4188790]();
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)(v5 + 16);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790]();
  uint64_t v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v7, v12, a1);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    (*(void (**)(char *, uint64_t))(v4 + 8))(v7, a1);
    return 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v7, v8);
    uint64_t v13 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 8))(v8, a2);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  return v13;
}

uint64_t sub_1A0915FB8(uint64_t a1, uint64_t a2)
{
  return sub_1A0915DC4(a1, *(void *)(a2 - 8));
}

uint64_t sub_1A0915FC0()
{
  uint64_t v0 = sub_1A09F39E8();
  sub_1A078D848(v0, qword_1E95225F0);
  sub_1A078510C(v0, (uint64_t)qword_1E95225F0);
  return sub_1A09F39D8();
}

uint64_t _s17IMSharedUtilities15TapToRadarDraftV9ComponentV2eeoiySbAE_AEtFZ_0(void *a1, void *a2)
{
  if (*a1 != *a2) {
    return 0;
  }
  uint64_t v2 = a1[3];
  uint64_t v3 = a1[4];
  uint64_t v4 = a2[3];
  uint64_t v5 = a2[4];
  BOOL v6 = a1[1] == a2[1] && a1[2] == a2[2];
  if (v6 || (v7 = sub_1A09F4B28(), uint64_t result = 0, (v7 & 1) != 0))
  {
    if (v2 == v4 && v3 == v5)
    {
      return 1;
    }
    else
    {
      return sub_1A09F4B28();
    }
  }
  return result;
}

unint64_t sub_1A0916104()
{
  unint64_t result = qword_1E94FBD78;
  if (!qword_1E94FBD78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FBD78);
  }
  return result;
}

unint64_t sub_1A091615C()
{
  unint64_t result = qword_1E94FBD80;
  if (!qword_1E94FBD80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FBD80);
  }
  return result;
}

unint64_t sub_1A09161B4()
{
  unint64_t result = qword_1E94FBD88;
  if (!qword_1E94FBD88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FBD88);
  }
  return result;
}

unint64_t sub_1A091620C()
{
  unint64_t result = qword_1E94FBD90;
  if (!qword_1E94FBD90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FBD90);
  }
  return result;
}

unint64_t sub_1A0916264()
{
  unint64_t result = qword_1E94FBD98;
  if (!qword_1E94FBD98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FBD98);
  }
  return result;
}

unint64_t sub_1A09162BC()
{
  unint64_t result = qword_1E94FBDA0;
  if (!qword_1E94FBDA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FBDA0);
  }
  return result;
}

unint64_t sub_1A0916314()
{
  unint64_t result = qword_1E94FBDA8;
  if (!qword_1E94FBDA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FBDA8);
  }
  return result;
}

unint64_t sub_1A091636C()
{
  unint64_t result = qword_1E94FBDB0;
  if (!qword_1E94FBDB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FBDB0);
  }
  return result;
}

unint64_t sub_1A09163C4()
{
  unint64_t result = qword_1E94FBDB8;
  if (!qword_1E94FBDB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FBDB8);
  }
  return result;
}

unint64_t sub_1A091641C()
{
  unint64_t result = qword_1E94FBDC0;
  if (!qword_1E94FBDC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FBDC0);
  }
  return result;
}

unint64_t sub_1A0916474()
{
  unint64_t result = qword_1E94FBDC8;
  if (!qword_1E94FBDC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FBDC8);
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for TapToRadarDraft(uint64_t a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *(void *)a1 = *a2;
    a1 = v12 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    uint64_t v8 = a2[3];
    *(void *)(a1 + 16) = a2[2];
    *(void *)(a1 + 24) = v8;
    uint64_t v9 = a2[6];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v9)
    {
      *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
      uint64_t v10 = a2[7];
      uint64_t v11 = a2[8];
      *(void *)(a1 + 48) = v9;
      *(void *)(a1 + 56) = v10;
      *(void *)(a1 + 64) = v11;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v13 = *((_OWORD *)a2 + 3);
      *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
      *(_OWORD *)(a1 + 48) = v13;
      *(void *)(a1 + 64) = a2[8];
    }
    uint64_t v14 = a2[10];
    *(void *)(a1 + 72) = a2[9];
    *(void *)(a1 + 80) = v14;
    *(unsigned char *)(a1 + 88) = *((unsigned char *)a2 + 88);
    uint64_t v15 = a2[13];
    *(void *)(a1 + 96) = a2[12];
    *(void *)(a1 + 104) = v15;
    *(unsigned char *)(a1 + 112) = *((unsigned char *)a2 + 112);
    uint64_t v16 = a2[16];
    *(void *)(a1 + 120) = a2[15];
    *(void *)(a1 + 128) = v16;
    uint64_t v17 = a2[18];
    *(void *)(a1 + 136) = a2[17];
    *(void *)(a1 + 144) = v17;
    uint64_t v18 = a2[20];
    *(void *)(a1 + 152) = a2[19];
    *(void *)(a1 + 160) = v18;
    uint64_t v19 = a2[22];
    *(void *)(a1 + 168) = a2[21];
    *(void *)(a1 + 176) = v19;
    uint64_t v20 = a2[24];
    *(void *)(a1 + 184) = a2[23];
    *(void *)(a1 + 192) = v20;
    *(void *)(a1 + 200) = a2[25];
    uint64_t v21 = a3[11];
    char v22 = (void *)(a1 + v21);
    uint64_t v23 = (uint64_t)a2 + v21;
    uint64_t v24 = *(uint64_t *)((char *)a2 + v21 + 8);
    *char v22 = *(uint64_t *)((char *)a2 + v21);
    v22[1] = v24;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v25 = *(int *)(sub_1A07856F8(&qword_1E94FBDD0) + 36);
    unsigned __int8 v26 = (char *)v22 + v25;
    uint64_t v27 = (const void *)(v23 + v25);
    uint64_t v28 = sub_1A09F3478();
    uint64_t v29 = *(void *)(v28 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28))
    {
      uint64_t v30 = sub_1A07856F8((uint64_t *)&unk_1E94FAF20);
      memcpy(v26, v27, *(void *)(*(void *)(v30 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, const void *, uint64_t))(v29 + 16))(v26, v27, v28);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
    }
    uint64_t v31 = a3[12];
    uint64_t v32 = a3[13];
    uint64_t v33 = (void *)(a1 + v31);
    uint64_t v34 = (uint64_t *)((char *)a2 + v31);
    uint64_t v35 = v34[1];
    *uint64_t v33 = *v34;
    v33[1] = v35;
    void v33[2] = v34[2];
    uint64_t v36 = (void *)(a1 + v32);
    uint64_t v37 = (uint64_t *)((char *)a2 + v32);
    uint64_t v38 = v37[1];
    *uint64_t v36 = *v37;
    v36[1] = v38;
    uint64_t v36[2] = v37[2];
    uint64_t v39 = a3[14];
    uint64_t v40 = a3[15];
    unint64_t v41 = (void *)(a1 + v39);
    unint64_t v42 = (uint64_t *)((char *)a2 + v39);
    uint64_t v43 = v42[1];
    *unint64_t v41 = *v42;
    v41[1] = v43;
    v41[2] = v42[2];
    uint64_t v44 = a1 + v40;
    uint64_t v45 = (uint64_t)a2 + v40;
    uint64_t v46 = *(void *)(v45 + 8);
    *(void *)uint64_t v44 = *(void *)v45;
    *(void *)(v44 + 8) = v46;
    *(unsigned char *)(v44 + 16) = *(unsigned char *)(v45 + 16);
    uint64_t v47 = a3[16];
    uint64_t v48 = a3[17];
    unint64_t v49 = (void *)(a1 + v47);
    unint64_t v50 = (uint64_t *)((char *)a2 + v47);
    uint64_t v51 = v50[1];
    *unint64_t v49 = *v50;
    v49[1] = v51;
    v49[2] = v50[2];
    uint64_t v52 = (void *)(a1 + v48);
    uint64_t v53 = (uint64_t *)((char *)a2 + v48);
    uint64_t v54 = v53[1];
    *uint64_t v52 = *v53;
    v52[1] = v54;
    v52[2] = v53[2];
    uint64_t v55 = a3[18];
    uint64_t v56 = a3[19];
    uint64_t v57 = (void *)(a1 + v55);
    unint64_t v58 = (uint64_t *)((char *)a2 + v55);
    uint64_t v59 = v58[1];
    *uint64_t v57 = *v58;
    v57[1] = v59;
    v57[2] = v58[2];
    unint64_t v60 = (void *)(a1 + v56);
    uint64_t v61 = (uint64_t *)((char *)a2 + v56);
    uint64_t v62 = v61[1];
    *unint64_t v60 = *v61;
    v60[1] = v62;
    v60[2] = v61[2];
    uint64_t v63 = a3[20];
    uint64_t v64 = a3[21];
    uint64_t v65 = a1 + v63;
    uint64_t v66 = (uint64_t)a2 + v63;
    uint64_t v67 = *(void *)(v66 + 8);
    *(void *)uint64_t v65 = *(void *)v66;
    *(void *)(v65 + 8) = v67;
    *(unsigned char *)(v65 + 16) = *(unsigned char *)(v66 + 16);
    uint64_t v68 = a1 + v64;
    uint64_t v69 = (uint64_t)a2 + v64;
    uint64_t v70 = *(void *)(v69 + 8);
    *(void *)uint64_t v68 = *(void *)v69;
    *(void *)(v68 + 8) = v70;
    *(unsigned char *)(v68 + 16) = *(unsigned char *)(v69 + 16);
    uint64_t v71 = a3[22];
    uint64_t v72 = a3[23];
    unint64_t v73 = (void *)(a1 + v71);
    unint64_t v74 = (uint64_t *)((char *)a2 + v71);
    uint64_t v75 = v74[1];
    *unint64_t v73 = *v74;
    v73[1] = v75;
    v73[2] = v74[2];
    uint64_t v76 = (void *)(a1 + v72);
    uint64_t v77 = (uint64_t *)((char *)a2 + v72);
    uint64_t v78 = v77[1];
    *uint64_t v76 = *v77;
    v76[1] = v78;
    uint64_t v79 = v77[3];
    v76[2] = v77[2];
    v76[3] = v79;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for TapToRadarDraft(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 48))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 44);
  swift_bridgeObjectRelease();
  uint64_t v5 = v4 + *(int *)(sub_1A07856F8(&qword_1E94FBDD0) + 36);
  uint64_t v6 = sub_1A09F3478();
  uint64_t v7 = *(void *)(v6 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for TapToRadarDraft(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  uint64_t v7 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v7;
  uint64_t v8 = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v8)
  {
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    uint64_t v9 = *(void *)(a2 + 56);
    uint64_t v10 = *(void *)(a2 + 64);
    *(void *)(a1 + 48) = v8;
    *(void *)(a1 + 56) = v9;
    *(void *)(a1 + 64) = v10;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v11 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v11;
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
  }
  uint64_t v12 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v12;
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  uint64_t v13 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v13;
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  uint64_t v14 = *(void *)(a2 + 128);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = v14;
  uint64_t v15 = *(void *)(a2 + 144);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = v15;
  uint64_t v16 = *(void *)(a2 + 160);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = v16;
  uint64_t v17 = *(void *)(a2 + 176);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(void *)(a1 + 176) = v17;
  uint64_t v18 = *(void *)(a2 + 192);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(void *)(a1 + 192) = v18;
  uint64_t v79 = a3;
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  uint64_t v19 = a3[11];
  uint64_t v20 = (void *)(a1 + v19);
  uint64_t v21 = a2 + v19;
  uint64_t v22 = *(void *)(a2 + v19 + 8);
  *uint64_t v20 = *(void *)(a2 + v19);
  v20[1] = v22;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v23 = *(int *)(sub_1A07856F8(&qword_1E94FBDD0) + 36);
  uint64_t v24 = (char *)v20 + v23;
  uint64_t v25 = (const void *)(v21 + v23);
  uint64_t v26 = sub_1A09F3478();
  uint64_t v27 = *(void *)(v26 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
  {
    uint64_t v28 = sub_1A07856F8((uint64_t *)&unk_1E94FAF20);
    memcpy(v24, v25, *(void *)(*(void *)(v28 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, const void *, uint64_t))(v27 + 16))(v24, v25, v26);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
  }
  uint64_t v29 = v79[12];
  uint64_t v30 = v79[13];
  uint64_t v31 = (void *)(a1 + v29);
  uint64_t v32 = (void *)(a2 + v29);
  uint64_t v33 = v32[1];
  *uint64_t v31 = *v32;
  v31[1] = v33;
  _OWORD v31[2] = v32[2];
  uint64_t v34 = (void *)(a1 + v30);
  uint64_t v35 = (void *)(a2 + v30);
  uint64_t v36 = v35[1];
  *uint64_t v34 = *v35;
  v34[1] = v36;
  v34[2] = v35[2];
  uint64_t v37 = v79[14];
  uint64_t v38 = v79[15];
  uint64_t v39 = (void *)(a1 + v37);
  uint64_t v40 = (void *)(a2 + v37);
  uint64_t v41 = v40[1];
  *uint64_t v39 = *v40;
  v39[1] = v41;
  void v39[2] = v40[2];
  uint64_t v42 = a1 + v38;
  uint64_t v43 = a2 + v38;
  uint64_t v44 = *(void *)(v43 + 8);
  *(void *)uint64_t v42 = *(void *)v43;
  *(void *)(v42 + 8) = v44;
  *(unsigned char *)(v42 + 16) = *(unsigned char *)(v43 + 16);
  uint64_t v45 = v79[16];
  uint64_t v46 = v79[17];
  uint64_t v47 = (void *)(a1 + v45);
  uint64_t v48 = (void *)(a2 + v45);
  uint64_t v49 = v48[1];
  *uint64_t v47 = *v48;
  v47[1] = v49;
  v47[2] = v48[2];
  unint64_t v50 = (void *)(a1 + v46);
  uint64_t v51 = (void *)(a2 + v46);
  uint64_t v52 = v51[1];
  *unint64_t v50 = *v51;
  v50[1] = v52;
  v50[2] = v51[2];
  uint64_t v53 = v79[18];
  uint64_t v54 = v79[19];
  uint64_t v55 = (void *)(a1 + v53);
  uint64_t v56 = (void *)(a2 + v53);
  uint64_t v57 = v56[1];
  *uint64_t v55 = *v56;
  v55[1] = v57;
  v55[2] = v56[2];
  unint64_t v58 = (void *)(a1 + v54);
  uint64_t v59 = (void *)(a2 + v54);
  uint64_t v60 = v59[1];
  *unint64_t v58 = *v59;
  v58[1] = v60;
  v58[2] = v59[2];
  uint64_t v61 = v79[20];
  uint64_t v62 = v79[21];
  uint64_t v63 = a1 + v61;
  uint64_t v64 = a2 + v61;
  uint64_t v65 = *(void *)(v64 + 8);
  *(void *)uint64_t v63 = *(void *)v64;
  *(void *)(v63 + 8) = v65;
  *(unsigned char *)(v63 + 16) = *(unsigned char *)(v64 + 16);
  uint64_t v66 = a1 + v62;
  uint64_t v67 = a2 + v62;
  uint64_t v68 = *(void *)(v67 + 8);
  *(void *)uint64_t v66 = *(void *)v67;
  *(void *)(v66 + 8) = v68;
  *(unsigned char *)(v66 + 16) = *(unsigned char *)(v67 + 16);
  uint64_t v69 = v79[22];
  uint64_t v70 = v79[23];
  uint64_t v71 = (void *)(a1 + v69);
  uint64_t v72 = (void *)(a2 + v69);
  uint64_t v73 = v72[1];
  *uint64_t v71 = *v72;
  v71[1] = v73;
  v71[2] = v72[2];
  unint64_t v74 = (void *)(a1 + v70);
  uint64_t v75 = (void *)(a2 + v70);
  uint64_t v76 = v75[1];
  *unint64_t v74 = *v75;
  v74[1] = v76;
  uint64_t v77 = v75[3];
  v74[2] = v75[2];
  v74[3] = v77;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for TapToRadarDraft(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = (_OWORD *)(a1 + 32);
  uint64_t v7 = (_OWORD *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 48);
  if (*(void *)(a1 + 48))
  {
    if (v8)
    {
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1A09176A0(a1 + 32);
      uint64_t v9 = *(void *)(a2 + 64);
      long long v10 = *(_OWORD *)(a2 + 48);
      *uint64_t v6 = *v7;
      *(_OWORD *)(a1 + 48) = v10;
      *(void *)(a1 + 64) = v9;
    }
  }
  else if (v8)
  {
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    *(void *)(a1 + 40) = *(void *)(a2 + 40);
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    *(void *)(a1 + 56) = *(void *)(a2 + 56);
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v11 = *v7;
    long long v12 = *(_OWORD *)(a2 + 48);
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    *uint64_t v6 = v11;
    *(_OWORD *)(a1 + 48) = v12;
  }
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v13 = a3[11];
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = a2 + v13;
  *uint64_t v14 = *(void *)(a2 + v13);
  v14[1] = *(void *)(a2 + v13 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v16 = *(int *)(sub_1A07856F8(&qword_1E94FBDD0) + 36);
  uint64_t v17 = (char *)v14 + v16;
  uint64_t v18 = (char *)(v15 + v16);
  uint64_t v19 = sub_1A09F3478();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v20 + 48);
  int v22 = v21(v17, 1, v19);
  int v23 = v21(v18, 1, v19);
  if (!v22)
  {
    if (!v23)
    {
      (*(void (**)(char *, char *, uint64_t))(v20 + 24))(v17, v18, v19);
      goto LABEL_14;
    }
    (*(void (**)(char *, uint64_t))(v20 + 8))(v17, v19);
    goto LABEL_13;
  }
  if (v23)
  {
LABEL_13:
    uint64_t v24 = sub_1A07856F8((uint64_t *)&unk_1E94FAF20);
    memcpy(v17, v18, *(void *)(*(void *)(v24 - 8) + 64));
    goto LABEL_14;
  }
  (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v17, v18, v19);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
LABEL_14:
  uint64_t v25 = a3[12];
  uint64_t v26 = (void *)(a1 + v25);
  uint64_t v27 = a2 + v25;
  *uint64_t v26 = *(void *)(a2 + v25);
  v26[1] = *(void *)(a2 + v25 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  long long v26[2] = *(void *)(v27 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v28 = a3[13];
  uint64_t v29 = (void *)(a1 + v28);
  uint64_t v30 = a2 + v28;
  *uint64_t v29 = *(void *)(a2 + v28);
  v29[1] = *(void *)(a2 + v28 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  long long v29[2] = *(void *)(v30 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v31 = a3[14];
  uint64_t v32 = (void *)(a1 + v31);
  uint64_t v33 = a2 + v31;
  *uint64_t v32 = *(void *)(a2 + v31);
  v32[1] = *(void *)(a2 + v31 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  long long v32[2] = *(void *)(v33 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v34 = a3[15];
  uint64_t v35 = a1 + v34;
  uint64_t v36 = a2 + v34;
  *(void *)uint64_t v35 = *(void *)(a2 + v34);
  *(void *)(v35 + 8) = *(void *)(a2 + v34 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v35 + 16) = *(unsigned char *)(v36 + 16);
  uint64_t v37 = a3[16];
  uint64_t v38 = (void *)(a1 + v37);
  uint64_t v39 = a2 + v37;
  *uint64_t v38 = *(void *)(a2 + v37);
  v38[1] = *(void *)(a2 + v37 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v38[2] = *(void *)(v39 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v40 = a3[17];
  uint64_t v41 = (void *)(a1 + v40);
  uint64_t v42 = a2 + v40;
  *uint64_t v41 = *(void *)(a2 + v40);
  v41[1] = *(void *)(a2 + v40 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v41[2] = *(void *)(v42 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v43 = a3[18];
  uint64_t v44 = (void *)(a1 + v43);
  uint64_t v45 = a2 + v43;
  *uint64_t v44 = *(void *)(a2 + v43);
  v44[1] = *(void *)(a2 + v43 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v44[2] = *(void *)(v45 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v46 = a3[19];
  uint64_t v47 = (void *)(a1 + v46);
  uint64_t v48 = a2 + v46;
  *uint64_t v47 = *(void *)(a2 + v46);
  v47[1] = *(void *)(a2 + v46 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v47[2] = *(void *)(v48 + 16);
  uint64_t v49 = a3[20];
  uint64_t v50 = a1 + v49;
  uint64_t v51 = a2 + v49;
  *(void *)uint64_t v50 = *(void *)(a2 + v49);
  *(void *)(v50 + 8) = *(void *)(a2 + v49 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v50 + 16) = *(unsigned char *)(v51 + 16);
  uint64_t v52 = a3[21];
  uint64_t v53 = a1 + v52;
  uint64_t v54 = a2 + v52;
  *(void *)uint64_t v53 = *(void *)(a2 + v52);
  *(void *)(v53 + 8) = *(void *)(a2 + v52 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v53 + 16) = *(unsigned char *)(v54 + 16);
  uint64_t v55 = a3[22];
  uint64_t v56 = (void *)(a1 + v55);
  uint64_t v57 = a2 + v55;
  *uint64_t v56 = *(void *)(a2 + v55);
  v56[1] = *(void *)(a2 + v55 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v56[2] = *(void *)(v57 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v58 = a3[23];
  uint64_t v59 = (void *)(a1 + v58);
  uint64_t v60 = a2 + v58;
  *uint64_t v59 = *(void *)(a2 + v58);
  v59[1] = *(void *)(a2 + v58 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v59[2] = *(void *)(v60 + 16);
  _OWORD v59[3] = *(void *)(v60 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1A09176A0(uint64_t a1)
{
  return a1;
}

uint64_t initializeWithTake for TapToRadarDraft(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  long long v7 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v7;
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
  uint64_t v8 = a3[11];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  *(_OWORD *)(a1 + v8) = *(_OWORD *)(a2 + v8);
  uint64_t v11 = *(int *)(sub_1A07856F8(&qword_1E94FBDD0) + 36);
  long long v12 = (void *)(v9 + v11);
  uint64_t v13 = (const void *)(v10 + v11);
  uint64_t v14 = sub_1A09F3478();
  uint64_t v15 = *(void *)(v14 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
  {
    uint64_t v16 = sub_1A07856F8((uint64_t *)&unk_1E94FAF20);
    memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v15 + 32))(v12, v13, v14);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  uint64_t v17 = a3[12];
  uint64_t v18 = a3[13];
  uint64_t v19 = a1 + v17;
  uint64_t v20 = a2 + v17;
  *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
  *(void *)(v19 + 16) = *(void *)(v20 + 16);
  uint64_t v21 = a1 + v18;
  uint64_t v22 = a2 + v18;
  *(_OWORD *)uint64_t v21 = *(_OWORD *)v22;
  *(void *)(v21 + 16) = *(void *)(v22 + 16);
  uint64_t v23 = a3[14];
  uint64_t v24 = a3[15];
  uint64_t v25 = a1 + v23;
  uint64_t v26 = a2 + v23;
  *(_OWORD *)uint64_t v25 = *(_OWORD *)v26;
  *(void *)(v25 + 16) = *(void *)(v26 + 16);
  uint64_t v27 = a1 + v24;
  uint64_t v28 = a2 + v24;
  *(_OWORD *)uint64_t v27 = *(_OWORD *)v28;
  *(unsigned char *)(v27 + 16) = *(unsigned char *)(v28 + 16);
  uint64_t v29 = a3[16];
  uint64_t v30 = a3[17];
  uint64_t v31 = a1 + v29;
  uint64_t v32 = (long long *)(a2 + v29);
  long long v33 = *v32;
  *(void *)(v31 + 16) = *((void *)v32 + 2);
  *(_OWORD *)uint64_t v31 = v33;
  uint64_t v34 = a1 + v30;
  uint64_t v35 = a2 + v30;
  *(void *)(v34 + 16) = *(void *)(v35 + 16);
  *(_OWORD *)uint64_t v34 = *(_OWORD *)v35;
  uint64_t v36 = a3[18];
  uint64_t v37 = a3[19];
  uint64_t v38 = a1 + v36;
  uint64_t v39 = a2 + v36;
  *(void *)(v38 + 16) = *(void *)(v39 + 16);
  *(_OWORD *)uint64_t v38 = *(_OWORD *)v39;
  uint64_t v40 = a1 + v37;
  uint64_t v41 = a2 + v37;
  *(void *)(v40 + 16) = *(void *)(v41 + 16);
  *(_OWORD *)uint64_t v40 = *(_OWORD *)v41;
  uint64_t v42 = a3[20];
  uint64_t v43 = a3[21];
  uint64_t v44 = a1 + v42;
  uint64_t v45 = a2 + v42;
  *(unsigned char *)(v44 + 16) = *(unsigned char *)(v45 + 16);
  *(_OWORD *)uint64_t v44 = *(_OWORD *)v45;
  uint64_t v46 = a1 + v43;
  uint64_t v47 = a2 + v43;
  *(unsigned char *)(v46 + 16) = *(unsigned char *)(v47 + 16);
  *(_OWORD *)uint64_t v46 = *(_OWORD *)v47;
  uint64_t v48 = a3[22];
  uint64_t v49 = a3[23];
  uint64_t v50 = a1 + v48;
  uint64_t v51 = a2 + v48;
  *(void *)(v50 + 16) = *(void *)(v51 + 16);
  *(_OWORD *)uint64_t v50 = *(_OWORD *)v51;
  uint64_t v52 = (_OWORD *)(a1 + v49);
  uint64_t v53 = (_OWORD *)(a2 + v49);
  long long v54 = v53[1];
  *uint64_t v52 = *v53;
  v52[1] = v54;
  return a1;
}

uint64_t assignWithTake for TapToRadarDraft(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 48))
  {
    uint64_t v8 = *(void *)(a2 + 48);
    if (v8)
    {
      *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
      *(void *)(a1 + 48) = v8;
      swift_bridgeObjectRelease();
      uint64_t v9 = *(void *)(a2 + 64);
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      *(void *)(a1 + 64) = v9;
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_1A09176A0(a1 + 32);
  }
  long long v10 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v10;
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
LABEL_6:
  uint64_t v11 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v11;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  uint64_t v12 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v12;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  uint64_t v13 = *(void *)(a2 + 128);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = v13;
  swift_bridgeObjectRelease();
  uint64_t v14 = *(void *)(a2 + 144);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = v14;
  swift_bridgeObjectRelease();
  uint64_t v15 = *(void *)(a2 + 160);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = v15;
  swift_bridgeObjectRelease();
  uint64_t v16 = *(void *)(a2 + 176);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(void *)(a1 + 176) = v16;
  swift_bridgeObjectRelease();
  uint64_t v17 = *(void *)(a2 + 192);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(void *)(a1 + 192) = v17;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  swift_bridgeObjectRelease();
  uint64_t v18 = a3[11];
  uint64_t v19 = (void *)(a1 + v18);
  uint64_t v20 = a2 + v18;
  uint64_t v21 = *(void *)(a2 + v18 + 8);
  *uint64_t v19 = *(void *)(a2 + v18);
  v19[1] = v21;
  swift_bridgeObjectRelease();
  uint64_t v22 = *(int *)(sub_1A07856F8(&qword_1E94FBDD0) + 36);
  uint64_t v23 = (char *)v19 + v22;
  uint64_t v24 = (char *)(v20 + v22);
  uint64_t v25 = sub_1A09F3478();
  uint64_t v26 = *(void *)(v25 - 8);
  uint64_t v27 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v26 + 48);
  int v28 = v27(v23, 1, v25);
  int v29 = v27(v24, 1, v25);
  if (!v28)
  {
    if (!v29)
    {
      (*(void (**)(char *, char *, uint64_t))(v26 + 40))(v23, v24, v25);
      goto LABEL_12;
    }
    (*(void (**)(char *, uint64_t))(v26 + 8))(v23, v25);
    goto LABEL_11;
  }
  if (v29)
  {
LABEL_11:
    uint64_t v30 = sub_1A07856F8((uint64_t *)&unk_1E94FAF20);
    memcpy(v23, v24, *(void *)(*(void *)(v30 - 8) + 64));
    goto LABEL_12;
  }
  (*(void (**)(char *, char *, uint64_t))(v26 + 32))(v23, v24, v25);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
LABEL_12:
  uint64_t v31 = a3[12];
  uint64_t v32 = (void *)(a1 + v31);
  uint64_t v33 = a2 + v31;
  uint64_t v34 = *(void *)(a2 + v31 + 8);
  *uint64_t v32 = *(void *)(a2 + v31);
  v32[1] = v34;
  swift_bridgeObjectRelease();
  long long v32[2] = *(void *)(v33 + 16);
  swift_bridgeObjectRelease();
  uint64_t v35 = a3[13];
  uint64_t v36 = (void *)(a1 + v35);
  uint64_t v37 = a2 + v35;
  uint64_t v38 = *(void *)(a2 + v35 + 8);
  *uint64_t v36 = *(void *)(a2 + v35);
  v36[1] = v38;
  swift_bridgeObjectRelease();
  uint64_t v36[2] = *(void *)(v37 + 16);
  swift_bridgeObjectRelease();
  uint64_t v39 = a3[14];
  uint64_t v40 = (void *)(a1 + v39);
  uint64_t v41 = a2 + v39;
  uint64_t v42 = *(void *)(a2 + v39 + 8);
  *uint64_t v40 = *(void *)(a2 + v39);
  v40[1] = v42;
  swift_bridgeObjectRelease();
  v40[2] = *(void *)(v41 + 16);
  swift_bridgeObjectRelease();
  uint64_t v43 = a3[15];
  uint64_t v44 = a1 + v43;
  uint64_t v45 = a2 + v43;
  uint64_t v46 = *(void *)(a2 + v43 + 8);
  *(void *)uint64_t v44 = *(void *)(a2 + v43);
  *(void *)(v44 + 8) = v46;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v44 + 16) = *(unsigned char *)(v45 + 16);
  uint64_t v47 = a3[16];
  uint64_t v48 = (void *)(a1 + v47);
  uint64_t v49 = a2 + v47;
  uint64_t v50 = *(void *)(a2 + v47 + 8);
  *uint64_t v48 = *(void *)(a2 + v47);
  v48[1] = v50;
  swift_bridgeObjectRelease();
  v48[2] = *(void *)(v49 + 16);
  swift_bridgeObjectRelease();
  uint64_t v51 = a3[17];
  uint64_t v52 = (void *)(a1 + v51);
  uint64_t v53 = a2 + v51;
  uint64_t v54 = *(void *)(a2 + v51 + 8);
  *uint64_t v52 = *(void *)(a2 + v51);
  v52[1] = v54;
  swift_bridgeObjectRelease();
  v52[2] = *(void *)(v53 + 16);
  swift_bridgeObjectRelease();
  uint64_t v55 = a3[18];
  uint64_t v56 = (void *)(a1 + v55);
  uint64_t v57 = a2 + v55;
  uint64_t v58 = *(void *)(a2 + v55 + 8);
  *uint64_t v56 = *(void *)(a2 + v55);
  v56[1] = v58;
  swift_bridgeObjectRelease();
  v56[2] = *(void *)(v57 + 16);
  swift_bridgeObjectRelease();
  uint64_t v59 = a3[19];
  uint64_t v60 = (void *)(a1 + v59);
  uint64_t v61 = a2 + v59;
  uint64_t v62 = *(void *)(a2 + v59 + 8);
  *uint64_t v60 = *(void *)(a2 + v59);
  v60[1] = v62;
  swift_bridgeObjectRelease();
  v60[2] = *(void *)(v61 + 16);
  uint64_t v63 = a3[20];
  uint64_t v64 = a1 + v63;
  uint64_t v65 = a2 + v63;
  uint64_t v66 = *(void *)(a2 + v63 + 8);
  *(void *)uint64_t v64 = *(void *)(a2 + v63);
  *(void *)(v64 + 8) = v66;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v64 + 16) = *(unsigned char *)(v65 + 16);
  uint64_t v67 = a3[21];
  uint64_t v68 = a1 + v67;
  uint64_t v69 = a2 + v67;
  uint64_t v70 = *(void *)(a2 + v67 + 8);
  *(void *)uint64_t v68 = *(void *)(a2 + v67);
  *(void *)(v68 + 8) = v70;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v68 + 16) = *(unsigned char *)(v69 + 16);
  uint64_t v71 = a3[22];
  uint64_t v72 = (void *)(a1 + v71);
  uint64_t v73 = a2 + v71;
  uint64_t v74 = *(void *)(a2 + v71 + 8);
  *uint64_t v72 = *(void *)(a2 + v71);
  v72[1] = v74;
  swift_bridgeObjectRelease();
  v72[2] = *(void *)(v73 + 16);
  swift_bridgeObjectRelease();
  uint64_t v75 = a3[23];
  uint64_t v76 = (void *)(a1 + v75);
  uint64_t v77 = (void *)(a2 + v75);
  uint64_t v78 = v77[1];
  *uint64_t v76 = *v77;
  v76[1] = v78;
  swift_bridgeObjectRelease();
  uint64_t v79 = v77[3];
  v76[2] = v77[2];
  v76[3] = v79;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for TapToRadarDraft(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1A0917E58);
}

uint64_t sub_1A0917E58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1A07856F8(&qword_1E94FBDD0);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 44);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for TapToRadarDraft(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1A0917F20);
}

uint64_t sub_1A0917F20(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_1A07856F8(&qword_1E94FBDD0);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 44);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for TapToRadarDraft()
{
  uint64_t result = qword_1E94FBDD8;
  if (!qword_1E94FBDD8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1A0918018()
{
  sub_1A09180F4();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_1A09180F4()
{
  if (!qword_1E94FBDE8)
  {
    sub_1A078D800((uint64_t *)&unk_1E94FAF20);
    sub_1A091815C();
    unint64_t v0 = type metadata accessor for URLParameter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E94FBDE8);
    }
  }
}

unint64_t sub_1A091815C()
{
  unint64_t result = qword_1E94FBDF0[0];
  if (!qword_1E94FBDF0[0])
  {
    sub_1A078D800((uint64_t *)&unk_1E94FAF20);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E94FBDF0);
  }
  return result;
}

uint64_t type metadata accessor for URLParameter()
{
  return sub_1A0780100();
}

uint64_t initializeWithCopy for TapToRadarDraft.Component(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for TapToRadarDraft.Component(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for TapToRadarDraft.Component(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for TapToRadarDraft.Component()
{
  return &type metadata for TapToRadarDraft.Component;
}

uint64_t getEnumTagSinglePayload for TapToRadarDraft.Classification(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF7) {
    goto LABEL_17;
  }
  if (a2 + 9 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 9) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 9;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 9;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 9;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xA;
  int v8 = v6 - 10;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for TapToRadarDraft.Classification(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 9 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 9) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF7) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF6)
  {
    unsigned int v6 = ((a2 - 247) >> 8) + 1;
    *unint64_t result = a2 + 9;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A091845CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 9;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TapToRadarDraft.Classification()
{
  return &type metadata for TapToRadarDraft.Classification;
}

ValueMetadata *type metadata accessor for TapToRadarDraft.Reproducibility()
{
  return &type metadata for TapToRadarDraft.Reproducibility;
}

unsigned char *_s17IMSharedUtilities15TapToRadarDraftV15ReproducibilityOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A0918578);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TapToRadarDraft.DeviceClass()
{
  return &type metadata for TapToRadarDraft.DeviceClass;
}

ValueMetadata *type metadata accessor for TapToRadarDraft.RemoteDeviceSelections()
{
  return &type metadata for TapToRadarDraft.RemoteDeviceSelections;
}

unsigned char *storeEnumTagSinglePayload for TapToRadarDraft.AutoDiagnostics(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *unint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A091868CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TapToRadarDraft.AutoDiagnostics()
{
  return &type metadata for TapToRadarDraft.AutoDiagnostics;
}

unsigned char *storeEnumTagSinglePayload for TapToRadarDraft.TapToRadarError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A0918790);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TapToRadarDraft.TapToRadarError()
{
  return &type metadata for TapToRadarDraft.TapToRadarError;
}

uint64_t sub_1A09187C8()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1A0918864(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(_DWORD *)(v5 + 80);
  if (v6 > 7
    || (*(_DWORD *)(v5 + 80) & 0x100000) != 0
    || ((v6 + 16) & (unint64_t)~v6) + *(void *)(v5 + 64) > 0x18)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 & 0xF8 ^ 0x1F8) & (v6 + 16)));
    swift_retain();
  }
  else
  {
    uint64_t v10 = a2[1];
    *a1 = *a2;
    a1[1] = v10;
    uint64_t v11 = ((unint64_t)a1 + v6 + 16) & ~v6;
    uint64_t v12 = ((unint64_t)a2 + v6 + 16) & ~v6;
    uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
    swift_bridgeObjectRetain();
    v13(v11, v12, v4);
  }
  return a1;
}

uint64_t sub_1A091896C(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v5 = *(uint64_t (**)(unint64_t))(v4 + 8);
  unint64_t v6 = (a1 + *(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);

  return v5(v6);
}

void *sub_1A09189E0(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(void *)(a3 + 16);
  unint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);
  uint64_t v7 = *(unsigned __int8 *)(*(void *)(v5 - 8) + 80);
  uint64_t v8 = ((unint64_t)a1 + v7 + 16) & ~v7;
  uint64_t v9 = ((unint64_t)a2 + v7 + 16) & ~v7;
  swift_bridgeObjectRetain();
  v6(v8, v9, v5);
  return a1;
}

void *sub_1A0918A70(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v6 + 24))(((unint64_t)a1 + *(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  return a1;
}

_OWORD *sub_1A0918B08(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v4 + 32))(((unint64_t)a1 + *(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  return a1;
}

void *sub_1A0918B78(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 40))(((unint64_t)a1 + *(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_1A0918C00(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(unsigned __int8 *)(v4 + 80);
  if (v5 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  int v8 = a2 - v7;
  if (a2 <= v7) {
    goto LABEL_23;
  }
  uint64_t v9 = ((v6 + 16) & ~v6) + *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  char v10 = 8 * v9;
  if (v9 <= 3)
  {
    unsigned int v13 = ((v8 + ~(-1 << v10)) >> v10) + 1;
    if (HIWORD(v13))
    {
      int v11 = *(_DWORD *)((char *)a1 + v9);
      if (!v11) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v13 > 0xFF)
    {
      int v11 = *(unsigned __int16 *)((char *)a1 + v9);
      if (!*(unsigned __int16 *)((char *)a1 + v9)) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v13 < 2)
    {
LABEL_23:
      if ((v5 & 0x80000000) != 0) {
        return (*(uint64_t (**)(unint64_t))(v4 + 48))(((unint64_t)a1 + v6 + 16) & ~v6);
      }
      unint64_t v15 = *((void *)a1 + 1);
      if (v15 >= 0xFFFFFFFF) {
        LODWORD(v15) = -1;
      }
      return (v15 + 1);
    }
  }
  int v11 = *((unsigned __int8 *)a1 + v9);
  if (!*((unsigned char *)a1 + v9)) {
    goto LABEL_23;
  }
LABEL_15:
  int v14 = (v11 - 1) << v10;
  if (v9 > 3) {
    int v14 = 0;
  }
  if (v9)
  {
    if (v9 > 3) {
      LODWORD(v9) = 4;
    }
    switch((int)v9)
    {
      case 2:
        LODWORD(v9) = *a1;
        break;
      case 3:
        LODWORD(v9) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v9) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v9) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v7 + (v9 | v14) + 1;
}

void sub_1A0918DA0(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(unsigned __int8 *)(v6 + 80);
  size_t v10 = ((v9 + 16) & ~v9) + *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  BOOL v11 = a3 >= v8;
  unsigned int v12 = a3 - v8;
  if (v12 != 0 && v11)
  {
    if (v10 <= 3)
    {
      unsigned int v16 = ((v12 + ~(-1 << (8 * v10))) >> (8 * v10)) + 1;
      if (HIWORD(v16))
      {
        int v13 = 4;
      }
      else if (v16 >= 0x100)
      {
        int v13 = 2;
      }
      else
      {
        int v13 = v16 > 1;
      }
    }
    else
    {
      int v13 = 1;
    }
  }
  else
  {
    int v13 = 0;
  }
  if (v8 < a2)
  {
    unsigned int v14 = ~v8 + a2;
    if (v10 < 4)
    {
      int v15 = (v14 >> (8 * v10)) + 1;
      if (v10)
      {
        int v17 = v14 & ~(-1 << (8 * v10));
        bzero(a1, v10);
        if (v10 == 3)
        {
          *(_WORD *)a1 = v17;
          a1[2] = BYTE2(v17);
        }
        else if (v10 == 2)
        {
          *(_WORD *)a1 = v17;
        }
        else
        {
          *a1 = v17;
        }
      }
    }
    else
    {
      bzero(a1, v10);
      *(_DWORD *)a1 = v14;
      int v15 = 1;
    }
    switch(v13)
    {
      case 1:
        a1[v10] = v15;
        return;
      case 2:
        *(_WORD *)&a1[v10] = v15;
        return;
      case 3:
        goto LABEL_41;
      case 4:
        *(_DWORD *)&a1[v10] = v15;
        return;
      default:
        return;
    }
  }
  switch(v13)
  {
    case 1:
      a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 2:
      *(_WORD *)&a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 3:
LABEL_41:
      __break(1u);
      JUMPOUT(0x1A0919000);
    case 4:
      *(_DWORD *)&a1[v10] = 0;
      goto LABEL_23;
    default:
LABEL_23:
      if (a2)
      {
LABEL_24:
        if ((v7 & 0x80000000) != 0)
        {
          unint64_t v18 = (unint64_t)&a1[v9 + 16] & ~v9;
          uint64_t v19 = *(void (**)(unint64_t))(v6 + 56);
          v19(v18);
        }
        else if ((a2 & 0x80000000) != 0)
        {
          *(void *)a1 = a2 ^ 0x80000000;
          *((void *)a1 + 1) = 0;
        }
        else
        {
          *((void *)a1 + 1) = a2 - 1;
        }
      }
      return;
  }
}

uint64_t sub_1A0919028@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(*(void *)(a2 + a1 - 8) + 8))(*(void *)(a2 + a1 - 16));
  *a3 = result;
  a3[1] = v5;
  return result;
}

uint64_t sub_1A0919070()
{
  return 16;
}

__n128 sub_1A091907C(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_1A0919088()
{
  return swift_getAtKeyPath();
}

unint64_t sub_1A09190B4()
{
  unint64_t result = qword_1E94FBE78;
  if (!qword_1E94FBE78)
  {
    sub_1A078D800(&qword_1EB4A5610);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FBE78);
  }
  return result;
}

uint64_t sub_1A0919110(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1A07856F8((uint64_t *)&unk_1E94FAF20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A0919178(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1A07856F8(&qword_1E94FBE80);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void *sub_1A09191E0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRetain();
  uint64_t v2 = 0;
  int v3 = (void *)MEMORY[0x1E4FBC860];
  do
  {
    swift_getAtKeyPath();
    if (v9)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        int v3 = sub_1A0891400(0, v3[2] + 1, 1, v3);
      }
      unint64_t v6 = v3[2];
      unint64_t v5 = v3[3];
      if (v6 >= v5 >> 1) {
        int v3 = sub_1A0891400((void *)(v5 > 1), v6 + 1, 1, v3);
      }
      v3[2] = v6 + 1;
      uint64_t v4 = &v3[2 * v6];
      v4[4] = v8;
      v4[5] = v9;
    }
    ++v2;
  }
  while (v1 != v2);
  swift_bridgeObjectRelease();
  return v3;
}

void *sub_1A0919304(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  uint64_t v2 = swift_bridgeObjectRetain() + 40;
  int v3 = (void *)MEMORY[0x1E4FBC860];
  do
  {
    swift_bridgeObjectRetain();
    swift_getAtKeyPath();
    swift_bridgeObjectRelease();
    if (v9)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        int v3 = sub_1A0891400(0, v3[2] + 1, 1, v3);
      }
      unint64_t v6 = v3[2];
      unint64_t v5 = v3[3];
      if (v6 >= v5 >> 1) {
        int v3 = sub_1A0891400((void *)(v5 > 1), v6 + 1, 1, v3);
      }
      v3[2] = v6 + 1;
      uint64_t v4 = &v3[2 * v6];
      v4[4] = v8;
      v4[5] = v9;
    }
    v2 += 16;
    --v1;
  }
  while (v1);
  swift_bridgeObjectRelease();
  return v3;
}

void *sub_1A0919434(uint64_t a1, uint64_t a2)
{
  uint64_t v31 = a2;
  uint64_t v3 = sub_1A07856F8((uint64_t *)&unk_1EB4A5630);
  MEMORY[0x1F4188790](v3 - 8);
  unint64_t v5 = (char *)v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void *)(a1 + 16);
  v25[1] = a1;
  if (v6)
  {
    uint64_t v7 = sub_1A09F33A8();
    uint64_t v8 = *(void *)(v7 - 8);
    uint64_t v9 = v8;
    uint64_t v10 = a1 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v26 = *(void *)(v8 + 72);
    uint64_t v30 = (void (**)(char *, void, uint64_t, uint64_t))(v8 + 56);
    uint64_t v12 = v8 + 16;
    BOOL v11 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
    uint64_t v28 = v12;
    int v29 = v11;
    uint64_t v27 = (uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48);
    id v25[3] = v9 + 8;
    v25[4] = v9 + 32;
    swift_bridgeObjectRetain();
    uint64_t v35 = (void *)MEMORY[0x1E4FBC860];
    while (1)
    {
      v29(v5, v10, v7);
      (*v30)(v5, 0, 1, v7);
      uint64_t v15 = (*v27)(v5, 1, v7);
      if (v15 == 1) {
        break;
      }
      MEMORY[0x1F4188790](v15);
      int v17 = (char *)v25 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v17, v5, v7);
      swift_getAtKeyPath();
      uint64_t v18 = v33;
      uint64_t v19 = v34;
      (*(void (**)(char *, uint64_t))(v9 + 8))(v17, v7);
      if (v19)
      {
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v32 = v25;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          uint64_t v35 = sub_1A0891400(0, v35[2] + 1, 1, v35);
        }
        unint64_t v22 = v35[2];
        unint64_t v21 = v35[3];
        if (v22 >= v21 >> 1) {
          uint64_t v35 = sub_1A0891400((void *)(v21 > 1), v22 + 1, 1, v35);
        }
        int v13 = v35;
        v35[2] = v22 + 1;
        unsigned int v14 = &v13[2 * v22];
        v14[4] = v18;
        void v14[5] = v19;
      }
      v10 += v26;
      if (!--v6) {
        goto LABEL_12;
      }
    }
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v35 = (void *)MEMORY[0x1E4FBC860];
LABEL_12:
    uint64_t v23 = sub_1A09F33A8();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v5, 1, 1, v23);
  }
  swift_bridgeObjectRelease();
  return v35;
}

void *sub_1A0919764(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRetain();
  uint64_t v2 = 0;
  uint64_t v3 = (void *)MEMORY[0x1E4FBC860];
  do
  {
    swift_getAtKeyPath();
    if (v9)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v3 = sub_1A0891400(0, v3[2] + 1, 1, v3);
      }
      unint64_t v6 = v3[2];
      unint64_t v5 = v3[3];
      if (v6 >= v5 >> 1) {
        uint64_t v3 = sub_1A0891400((void *)(v5 > 1), v6 + 1, 1, v3);
      }
      v3[2] = v6 + 1;
      uint64_t v4 = &v3[2 * v6];
      v4[4] = v8;
      v4[5] = v9;
    }
    ++v2;
  }
  while (v1 != v2);
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_1A0919888(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return 0;
  }
  uint64_t result = 0;
  uint64_t v4 = (uint64_t *)(a1 + 32);
  do
  {
    uint64_t v6 = *v4++;
    uint64_t v5 = v6;
    if ((v6 & ~result) == 0) {
      uint64_t v5 = 0;
    }
    result |= v5;
    --v1;
  }
  while (v1);
  return result;
}

uint64_t sub_1A09198C0()
{
  uint64_t v0 = sub_1A09F39E8();
  sub_1A078D848(v0, qword_1E94F7330);
  sub_1A078510C(v0, (uint64_t)qword_1E94F7330);
  return sub_1A09F39D8();
}

id sub_1A0919944()
{
  uint64_t v0 = (void *)sub_1A09F3DE8();
  uint64_t v1 = (id *)MEMORY[0x1A6227920]("PFLivePhotoBundleExtension", v0);

  if (v1)
  {
    id v2 = *v1;
    sub_1A09F3E18();
  }
  uint64_t v3 = (void *)sub_1A09F3DE8();
  swift_bridgeObjectRelease();

  return v3;
}

uint64_t sub_1A0919A08(void *a1)
{
  id v1 = a1;
  char v2 = sub_1A0919A3C();

  return v2 & 1;
}

uint64_t sub_1A0919A3C()
{
  sub_1A07856F8(&qword_1E94FE520);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1A0A081A0;
  char v2 = self;
  id v3 = objc_msgSend(v2, sel___im_livePhotoExtension);
  uint64_t v4 = sub_1A09F3E18();
  uint64_t v6 = v5;

  *(void *)(inited + 32) = v4;
  *(void *)(inited + 40) = v6;
  id v7 = objc_msgSend(v2, sel___im_livePhotoExtension);
  sub_1A09F3E18();

  uint64_t v8 = sub_1A09F3E48();
  uint64_t v10 = v9;
  swift_bridgeObjectRelease();
  *(void *)(inited + 48) = v8;
  *(void *)(inited + 56) = v10;
  id v11 = objc_msgSend(v0, sel_pathExtension);
  uint64_t v12 = sub_1A09F3E18();
  uint64_t v14 = v13;

  LOBYTE(v11) = sub_1A078480C(v12, v14, (void *)inited);
  swift_bridgeObjectRelease();
  swift_setDeallocating();
  swift_arrayDestroy();
  return v11 & 1;
}

id sub_1A0919B90(void *a1)
{
  id v1 = a1;
  id v2 = objc_msgSend(v1, sel_stringByDeletingLastPathComponent);
  if (v2)
  {
    id v3 = v2;
    id v4 = objc_msgSend(v2, sel___im_isLivePhotoBundlePath);

    id v1 = v3;
  }
  else
  {
    id v4 = 0;
  }

  return v4;
}

uint64_t sub_1A0919C00(void *a1)
{
  id v2 = v1;
  id v4 = objc_msgSend(v2, sel_stringByDeletingLastPathComponent);
  if (!v4) {
    return 0;
  }
  uint64_t v5 = v4;
  id v6 = objc_msgSend(v4, sel_im_lastPathComponent);
  if (!v6) {
    goto LABEL_24;
  }
  id v7 = v6;
  id v8 = a1;
  if (!a1) {
    id v8 = v6;
  }
  id v9 = a1;
  id v10 = objc_msgSend(v5, sel___im_stringBySafelyAppendingPathComponent_, v8);

  if (!v10)
  {

    return 0;
  }
  id v11 = self;
  id v12 = objc_msgSend(v11, sel___im_livePhotoExtension);
  if (!v12)
  {
    sub_1A09F3E18();
    id v12 = (id)sub_1A09F3DE8();
    swift_bridgeObjectRelease();
  }
  id v13 = objc_msgSend(v10, sel_stringByAppendingPathExtension_, v12);

  if (!v13)
  {

    return 0;
  }
  uint64_t v14 = sub_1A09F3E18();
  id v36 = self;
  id v15 = objc_msgSend(v36, sel_defaultManager);
  unsigned __int8 v16 = objc_msgSend(v15, sel_fileExistsAtPath_, v13);

  if ((v16 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    id v17 = objc_msgSend(v11, sel___im_livePhotoExtension);
    sub_1A09F3E18();

    sub_1A09F3E48();
    swift_bridgeObjectRelease();
    uint64_t v18 = (void *)sub_1A09F3DE8();
    swift_bridgeObjectRelease();
    id v19 = objc_msgSend(v10, sel_stringByAppendingPathComponent_, v18);

    uint64_t v35 = v19;
    if (!v19)
    {
      sub_1A09F3E18();
      uint64_t v35 = (void *)sub_1A09F3DE8();
      swift_bridgeObjectRelease();
    }
    uint64_t v14 = sub_1A09F3E18();
    if (qword_1E94F7210 != -1) {
      swift_once();
    }
    uint64_t v20 = sub_1A09F39E8();
    sub_1A078510C(v20, (uint64_t)qword_1E94F7330);
    id v21 = v2;
    unint64_t v22 = sub_1A09F39C8();
    os_log_type_t v23 = sub_1A09F4388();
    if (os_log_type_enabled(v22, v23))
    {
      uint64_t v24 = (uint8_t *)swift_slowAlloc();
      uint64_t v33 = (void *)swift_slowAlloc();
      uint64_t v34 = v24;
      *(_DWORD *)uint64_t v24 = 138412290;
      uint64_t v32 = v24 + 4;
      id v25 = v21;
      sub_1A09F4528();
      *uint64_t v33 = v21;

      _os_log_impl(&dword_1A0772000, v22, v23, "Second try: Trying to check existence of live photo bundle at path %@", v34, 0xCu);
      sub_1A07856F8(&qword_1E94F7740);
      swift_arrayDestroy();
      MEMORY[0x1A6228C20](v33, -1, -1);
      MEMORY[0x1A6228C20](v34, -1, -1);
    }
    else
    {
    }
    id v26 = objc_msgSend(v36, sel_defaultManager, v32);
    unsigned int v27 = objc_msgSend(v26, sel_fileExistsAtPath_, v35);

    if (!v27)
    {
      swift_bridgeObjectRelease();
      uint64_t v28 = sub_1A09F39C8();
      int v29 = sub_1A09F4388();
      if (os_log_type_enabled(v28, (os_log_type_t)v29))
      {
        uint64_t v30 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v30 = 0;
        _os_log_impl(&dword_1A0772000, v28, (os_log_type_t)v29, "Failed to find live photo bundle for transfer", v30, 2u);
        MEMORY[0x1A6228C20](v30, -1, -1);
      }
      else
      {
      }
LABEL_24:

      return 0;
    }
  }

  return v14;
}

uint64_t sub_1A091A0C4(uint64_t a1, uint64_t a2)
{
  id v4 = objc_msgSend(v2, sel_im_livePhotoBundlePath);
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = sub_1A09F3E18();
  }
  else
  {
    if (qword_1E94F7210 != -1) {
      swift_once();
    }
    uint64_t v7 = sub_1A09F39E8();
    sub_1A078510C(v7, (uint64_t)qword_1E94F7330);
    id v8 = sub_1A09F39C8();
    os_log_type_t v9 = sub_1A09F4388();
    if (os_log_type_enabled(v8, v9))
    {
      id v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v10 = 0;
      _os_log_impl(&dword_1A0772000, v8, v9, "Could not find live photo bundle from path alone, checking with the guid instead.", v10, 2u);
      MEMORY[0x1A6228C20](v10, -1, -1);
    }

    if (a2)
    {
      id v11 = (void *)sub_1A09F3DE8();
      uint64_t v6 = sub_1A0919C00(v11);
    }
    else
    {
      id v12 = sub_1A09F39C8();
      os_log_type_t v13 = sub_1A09F4358();
      if (os_log_type_enabled(v12, v13))
      {
        uint64_t v14 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v14 = 0;
        _os_log_impl(&dword_1A0772000, v12, v13, "Cannot find live photo bundle because guid is nil.", v14, 2u);
        MEMORY[0x1A6228C20](v14, -1, -1);
      }

      return 0;
    }
  }
  return v6;
}

id sub_1A091A294(void *a1, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    uint64_t v4 = sub_1A09F3E18();
    uint64_t v6 = v5;
  }
  else
  {
    uint64_t v4 = 0;
    uint64_t v6 = 0;
  }
  id v7 = a1;
  sub_1A091A0C4(v4, v6);
  uint64_t v9 = v8;

  swift_bridgeObjectRelease();
  if (v9)
  {
    id v10 = (void *)sub_1A09F3DE8();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v10 = 0;
  }

  return v10;
}

id sub_1A091A340()
{
  id result = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for TipsNextEventReporter()), sel_init);
  qword_1EB4A55E8 = (uint64_t)result;
  return result;
}

id TipsNextEventReporter.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

id static TipsNextEventReporter.shared.getter()
{
  if (qword_1EB4A55F8 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)qword_1EB4A55E8;

  return v0;
}

uint64_t sub_1A091A460(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  *(void *)(v5 + 24) = a5;
  *(unsigned char *)(v5 + 48) = a4;
  return MEMORY[0x1F4188298](sub_1A091A484, 0, 0);
}

uint64_t sub_1A091A484()
{
  uint64_t v1 = *(void *)(v0 + 24);
  if (*(unsigned char *)(v0 + 48)) {
    unint64_t v2 = 0xD000000000000027;
  }
  else {
    unint64_t v2 = 0xD000000000000020;
  }
  if (*(unsigned char *)(v0 + 48)) {
    unint64_t v3 = 0x80000001A0A35630;
  }
  else {
    unint64_t v3 = 0x80000001A0A35660;
  }
  sub_1A09F3618();
  uint64_t v4 = v1 + OBJC_IVAR___TipsNextEventReporter_appBundleId;
  uint64_t v5 = *(void *)(v1 + OBJC_IVAR___TipsNextEventReporter_appBundleId);
  uint64_t v6 = *(void *)(v4 + 8);
  id v7 = (void *)swift_task_alloc();
  *(void *)(v0 + 32) = v7;
  *id v7 = v0;
  v7[1] = sub_1A091A598;
  return MEMORY[0x1F4164140](v2, v3, v5, v6, 0);
}

uint64_t sub_1A091A598()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 40) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x1F4188298](sub_1A091A6FC, 0, 0);
  }
  else
  {
    swift_bridgeObjectRelease();
    unint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_1A091A6FC()
{
  uint64_t v12 = v0;
  swift_bridgeObjectRelease();
  uint64_t v1 = sub_1A09F39C8();
  os_log_type_t v2 = sub_1A09F4378();
  if (os_log_type_enabled(v1, v2))
  {
    id v10 = *(void **)(v0 + 40);
    if (*(unsigned char *)(v0 + 48)) {
      unint64_t v3 = 0x80000001A0A35630;
    }
    else {
      unint64_t v3 = 0x80000001A0A35660;
    }
    if (*(unsigned char *)(v0 + 48)) {
      uint64_t v4 = 0xD000000000000027;
    }
    else {
      uint64_t v4 = 0xD000000000000020;
    }
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v6 = swift_slowAlloc();
    uint64_t v11 = v6;
    *(_DWORD *)uint64_t v5 = 136315138;
    *(void *)(v0 + 16) = sub_1A0785144(v4, v3, &v11);
    sub_1A09F4528();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A0772000, v1, v2, "Failed to donate event with identifier: %s", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1A6228C20](v6, -1, -1);
    MEMORY[0x1A6228C20](v5, -1, -1);
    id v7 = v10;
  }
  else
  {
    id v7 = *(void **)(v0 + 40);
  }

  uint64_t v8 = *(uint64_t (**)(void))(v0 + 8);
  return v8();
}

uint64_t sub_1A091A8DC(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  *(void *)(v5 + 24) = a5;
  *(unsigned char *)(v5 + 80) = a4;
  return MEMORY[0x1F4188298](sub_1A091A900, 0, 0);
}

uint64_t sub_1A091A900()
{
  unint64_t v1 = 0xD000000000000025;
  unint64_t v2 = 0x80000001A0A355B0;
  switch(*(unsigned char *)(v0 + 80))
  {
    case 1:
      unint64_t v3 = "CID-messages-pinning-mini-tip";
      goto LABEL_8;
    case 2:
      unint64_t v1 = 0xD00000000000001FLL;
      uint64_t v4 = "CID-undo-edit-messages-mini-tip";
      goto LABEL_12;
    case 3:
      unint64_t v3 = "CID-checkin-messages-mini-tip";
      goto LABEL_8;
    case 4:
      unint64_t v1 = 0xD00000000000001BLL;
      uint64_t v4 = "CID-savephotowatch-mini-tip";
      goto LABEL_12;
    case 5:
      unint64_t v1 = 0xD000000000000019;
      uint64_t v4 = "CID-tapbackwatch-mini-tip";
      goto LABEL_12;
    case 6:
      unint64_t v3 = "CID-contactnamewatch-mini-tip";
LABEL_8:
      unint64_t v2 = (unint64_t)(v3 - 32) | 0x8000000000000000;
      unint64_t v1 = 0xD00000000000001DLL;
      break;
    case 7:
      unint64_t v1 = 0xD000000000000027;
      uint64_t v4 = "CID-waiting-for-verify-appleid-mini-tip";
      goto LABEL_12;
    case 8:
      unint64_t v1 = 0xD000000000000029;
      uint64_t v4 = "CID-waiting-for-KT-cloud-updates-mini-tip";
      goto LABEL_12;
    case 9:
      unint64_t v1 = 0xD00000000000002ALL;
      uint64_t v4 = "CID-messages-in-icloud-onboarding-mini-tip";
LABEL_12:
      unint64_t v2 = (unint64_t)(v4 - 32) | 0x8000000000000000;
      break;
    default:
      break;
  }
  *(void *)(v0 + 32) = v2;
  uint64_t v5 = *(void *)(v0 + 24);
  sub_1A09F3658();
  uint64_t v6 = v5 + OBJC_IVAR___TipsNextEventReporter_appBundleId;
  uint64_t v7 = *(void *)(v5 + OBJC_IVAR___TipsNextEventReporter_appBundleId);
  uint64_t v8 = *(void *)(v6 + 8);
  uint64_t v9 = sub_1A09F3648();
  *(void *)(v0 + 40) = v9;
  *(void *)(v0 + 48) = *(void *)(v9 - 8);
  uint64_t v10 = swift_task_alloc();
  *(void *)(v0 + 56) = v10;
  sub_1A09F3638();
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v0 + 64) = v11;
  *uint64_t v11 = v0;
  v11[1] = sub_1A091AB44;
  return MEMORY[0x1F4164158](v1, v2, v7, v8, v10);
}

uint64_t sub_1A091AB44()
{
  uint64_t v2 = *(void *)(*v1 + 56);
  uint64_t v3 = *(void *)(*v1 + 48);
  uint64_t v4 = *(void *)(*v1 + 40);
  uint64_t v5 = *v1;
  *(void *)(v5 + 72) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  swift_bridgeObjectRelease();
  if (v0)
  {
    return MEMORY[0x1F4188298](sub_1A091AD08, 0, 0);
  }
  else
  {
    swift_task_dealloc();
    uint64_t v6 = *(uint64_t (**)(void))(v5 + 8);
    return v6();
  }
}

uint64_t sub_1A091AD08()
{
  uint64_t v15 = v0;
  swift_task_dealloc();
  unint64_t v1 = sub_1A09F39C8();
  os_log_type_t v2 = sub_1A09F4378();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = *(unsigned __int8 *)(v0 + 80);
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = swift_slowAlloc();
    uint64_t v14 = v5;
    *(_DWORD *)uint64_t v4 = 136315138;
    uint64_t v6 = 0xD000000000000025;
    unint64_t v7 = 0x80000001A0A355B0;
    switch(v3)
    {
      case 1:
        uint64_t v8 = "CID-messages-pinning-mini-tip";
        goto LABEL_10;
      case 2:
        uint64_t v6 = 0xD00000000000001FLL;
        uint64_t v10 = "CID-undo-edit-messages-mini-tip";
        goto LABEL_14;
      case 3:
        uint64_t v8 = "CID-checkin-messages-mini-tip";
        goto LABEL_10;
      case 4:
        uint64_t v6 = 0xD00000000000001BLL;
        uint64_t v10 = "CID-savephotowatch-mini-tip";
        goto LABEL_14;
      case 5:
        uint64_t v6 = 0xD000000000000019;
        uint64_t v10 = "CID-tapbackwatch-mini-tip";
        goto LABEL_14;
      case 6:
        uint64_t v8 = "CID-contactnamewatch-mini-tip";
LABEL_10:
        unint64_t v7 = (unint64_t)(v8 - 32) | 0x8000000000000000;
        uint64_t v6 = 0xD00000000000001DLL;
        break;
      case 7:
        uint64_t v6 = 0xD000000000000027;
        uint64_t v10 = "CID-waiting-for-verify-appleid-mini-tip";
        goto LABEL_14;
      case 8:
        uint64_t v6 = 0xD000000000000029;
        uint64_t v10 = "CID-waiting-for-KT-cloud-updates-mini-tip";
        goto LABEL_14;
      case 9:
        uint64_t v6 = 0xD00000000000002ALL;
        uint64_t v10 = "CID-messages-in-icloud-onboarding-mini-tip";
LABEL_14:
        unint64_t v7 = (unint64_t)(v10 - 32) | 0x8000000000000000;
        break;
      default:
        break;
    }
    uint64_t v11 = *(void **)(v0 + 72);
    *(void *)(v0 + 16) = sub_1A0785144(v6, v7, &v14);
    sub_1A09F4528();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A0772000, v1, v2, "Failed to invalidate tip with identifier: %s", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1A6228C20](v5, -1, -1);
    MEMORY[0x1A6228C20](v4, -1, -1);
    uint64_t v9 = v11;
  }
  else
  {
    uint64_t v9 = *(void **)(v0 + 72);
  }

  uint64_t v12 = *(uint64_t (**)(void))(v0 + 8);
  return v12();
}

uint64_t sub_1A091AFC0()
{
  uint64_t v1 = sub_1A07856F8(&qword_1EB4A5650);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1A09F41C8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v3, 1, 1, v4);
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = 0;
  *(void *)(v5 + 24) = 0;
  *(unsigned char *)(v5 + 32) = 0;
  *(void *)(v5 + 40) = v0;
  id v6 = v0;
  sub_1A08BE6E4((uint64_t)v3, (uint64_t)&unk_1E94FBE98, v5);
  return swift_release();
}

uint64_t sub_1A091B0C0()
{
  char v2 = *(unsigned char *)(v0 + 32);
  uint64_t v3 = *(void *)(v0 + 40);
  uint64_t v4 = swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *(void *)uint64_t v4 = v1;
  *(void *)(v4 + 8) = sub_1A077EE54;
  *(void *)(v4 + 24) = v3;
  *(unsigned char *)(v4 + 48) = v2;
  return MEMORY[0x1F4188298](sub_1A091A484, 0, 0);
}

uint64_t sub_1A091B288()
{
  uint64_t v1 = sub_1A07856F8(&qword_1EB4A5650);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1A09F41C8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v3, 1, 1, v4);
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = 0;
  *(void *)(v5 + 24) = 0;
  *(unsigned char *)(v5 + 32) = 1;
  *(void *)(v5 + 40) = v0;
  id v6 = v0;
  sub_1A08BE6E4((uint64_t)v3, (uint64_t)&unk_1E94FBEA0, v5);
  return swift_release();
}

uint64_t sub_1A091B4A4()
{
  uint64_t v1 = sub_1A07856F8(&qword_1EB4A5650);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1A09F41C8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v3, 1, 1, v4);
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = 0;
  *(void *)(v5 + 24) = 0;
  *(unsigned char *)(v5 + 32) = 0;
  *(void *)(v5 + 40) = v0;
  id v6 = v0;
  sub_1A08BE6E4((uint64_t)v3, (uint64_t)&unk_1E94FBEB0, v5);
  return swift_release();
}

uint64_t sub_1A091B5A4()
{
  char v2 = *(unsigned char *)(v0 + 32);
  uint64_t v3 = *(void *)(v0 + 40);
  uint64_t v4 = swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *(void *)uint64_t v4 = v1;
  *(void *)(v4 + 8) = sub_1A077EE54;
  *(void *)(v4 + 24) = v3;
  *(unsigned char *)(v4 + 80) = v2;
  return MEMORY[0x1F4188298](sub_1A091A900, 0, 0);
}

uint64_t sub_1A091B76C()
{
  uint64_t v1 = sub_1A07856F8(&qword_1EB4A5650);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1A09F41C8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v3, 1, 1, v4);
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = 0;
  *(void *)(v5 + 24) = 0;
  *(unsigned char *)(v5 + 32) = 4;
  *(void *)(v5 + 40) = v0;
  id v6 = v0;
  sub_1A08BE6E4((uint64_t)v3, (uint64_t)&unk_1E94FBEB8, v5);
  return swift_release();
}

uint64_t sub_1A091B870()
{
  char v2 = *(unsigned char *)(v0 + 32);
  uint64_t v3 = *(void *)(v0 + 40);
  uint64_t v4 = swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *(void *)uint64_t v4 = v1;
  *(void *)(v4 + 8) = sub_1A077EE58;
  *(void *)(v4 + 24) = v3;
  *(unsigned char *)(v4 + 80) = v2;
  return MEMORY[0x1F4188298](sub_1A091A900, 0, 0);
}

uint64_t sub_1A091BA3C()
{
  uint64_t v1 = sub_1A07856F8(&qword_1EB4A5650);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1A09F41C8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v3, 1, 1, v4);
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = 0;
  *(void *)(v5 + 24) = 0;
  *(unsigned char *)(v5 + 32) = 5;
  *(void *)(v5 + 40) = v0;
  id v6 = v0;
  sub_1A08BE6E4((uint64_t)v3, (uint64_t)&unk_1E94FBEC0, v5);
  return swift_release();
}

uint64_t sub_1A091BC58()
{
  uint64_t v1 = sub_1A07856F8(&qword_1EB4A5650);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1A09F41C8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v3, 1, 1, v4);
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = 0;
  *(void *)(v5 + 24) = 0;
  *(unsigned char *)(v5 + 32) = 6;
  *(void *)(v5 + 40) = v0;
  id v6 = v0;
  sub_1A08BE6E4((uint64_t)v3, (uint64_t)&unk_1E94FBEC8, v5);
  return swift_release();
}

id TipsNextEventReporter.init()()
{
  uint64_t v1 = &v0[OBJC_IVAR___TipsNextEventReporter_appBundleId];
  *(void *)uint64_t v1 = 0xD000000000000013;
  *((void *)v1 + 1) = 0x80000001A0A30C80;
  sub_1A09F39D8();
  v3.receiver = v0;
  v3.super_class = (Class)type metadata accessor for TipsNextEventReporter();
  return objc_msgSendSuper2(&v3, sel_init);
}

uint64_t type metadata accessor for TipsNextEventReporter()
{
  uint64_t result = qword_1EB4A5600;
  if (!qword_1EB4A5600) {
    return swift_getSingletonMetadata();
  }
  return result;
}

id TipsNextEventReporter.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TipsNextEventReporter();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

BOOL static MessagesTip.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t MessagesTip.hash(into:)()
{
  return sub_1A09F4C58();
}

uint64_t MessagesTip.hashValue.getter()
{
  return sub_1A09F4C88();
}

BOOL static MessagesTipEvents.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t MessagesTipEvents.hash(into:)()
{
  return sub_1A09F4C58();
}

uint64_t MessagesTipEvents.hashValue.getter()
{
  return sub_1A09F4C88();
}

unint64_t sub_1A091C1D8()
{
  unint64_t result = qword_1E94FBED8;
  if (!qword_1E94FBED8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FBED8);
  }
  return result;
}

unint64_t sub_1A091C230()
{
  unint64_t result = qword_1E94FBEE0;
  if (!qword_1E94FBEE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FBEE0);
  }
  return result;
}

uint64_t sub_1A091C284()
{
  return type metadata accessor for TipsNextEventReporter();
}

uint64_t sub_1A091C28C()
{
  uint64_t result = sub_1A09F39E8();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for TipsNextEventReporter(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for TipsNextEventReporter);
}

uint64_t dispatch thunk of TipsNextEventReporter.donateSentMessageEvent()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of TipsNextEventReporter.donateReceivedPhotoEventWatch()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of TipsNextEventReporter.donateSentINSendMessageIntentEvent()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of TipsNextEventReporter.donateSavedPhotoEventWatch()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x88))();
}

uint64_t dispatch thunk of TipsNextEventReporter.donateSentTapbackEventWatch()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x90))();
}

uint64_t dispatch thunk of TipsNextEventReporter.donateSentSetNameAndPhotoProfileEvent()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x98))();
}

unsigned char *storeEnumTagSinglePayload for MessagesTip(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 9 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 9) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF7) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF6)
  {
    unsigned int v6 = ((a2 - 247) >> 8) + 1;
    *uint64_t result = a2 + 9;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A091C544);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 9;
        break;
    }
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for MessagesTipEvents(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A091C638);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MessagesTipEvents()
{
  return &type metadata for MessagesTipEvents;
}

unint64_t sub_1A091C688()
{
  if (*v0) {
    return 0xD000000000000018;
  }
  else {
    return 0xD000000000000017;
  }
}

uint64_t sub_1A091C6C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A091D364(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A091C6EC(uint64_t a1)
{
  unint64_t v2 = sub_1A091CBF8();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A091C728(uint64_t a1)
{
  unint64_t v2 = sub_1A091CBF8();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t RemoteIntentContactSetupInfo.init(from:)@<X0>(void *a1@<X0>, unint64_t *a2@<X8>)
{
  uint64_t v5 = sub_1A07856F8(&qword_1E94FBF18);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A086F45C(a1, a1[3]);
  sub_1A091CBF8();
  sub_1A09F4CA8();
  if (!v2)
  {
    os_log_type_t v23 = a2;
    LOBYTE(v27) = 0;
    sub_1A08E4B14();
    sub_1A09F4928();
    uint64_t v9 = v24;
    unint64_t v10 = v25;
    LOBYTE(v27) = 1;
    sub_1A09F4928();
    uint64_t v21 = v24;
    unint64_t v22 = v25;
    sub_1A07856F8((uint64_t *)&unk_1EB4A5BD0);
    uint64_t v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_1A0A0CE10;
    *(void *)(v11 + 32) = sub_1A078231C(0, (unint64_t *)&unk_1EB4A5C08);
    *(void *)(v11 + 40) = sub_1A078231C(0, (unint64_t *)&unk_1EB4A5B98);
    *(void *)(v11 + 48) = sub_1A078231C(0, &qword_1EB4A5B80);
    *(void *)(v11 + 56) = sub_1A078231C(0, (unint64_t *)&qword_1EB4A59B8);
    *(void *)(v11 + 64) = sub_1A078231C(0, qword_1EB4A5920);
    *(void *)(v11 + 72) = sub_1A078231C(0, &qword_1E94FB7F0);
    sub_1A078231C(0, &qword_1E94FB7C0);
    sub_1A09F43A8();
    unint64_t v19 = v10;
    uint64_t v20 = v9;
    if (v26)
    {
      sub_1A07856F8(&qword_1E94FAE48);
      if (swift_dynamicCast())
      {
        unint64_t v18 = v27;
LABEL_7:
        sub_1A09F43A8();
        swift_bridgeObjectRelease();
        if (v26)
        {
          sub_1A07856F8(&qword_1E94FBF28);
          char v13 = swift_dynamicCast();
          uint64_t v14 = v23;
          unint64_t v15 = v19;
          uint64_t v16 = v20;
          if (v13)
          {
            unint64_t v17 = v27;
LABEL_14:
            sub_1A08AF2E4(v21, v22);
            sub_1A08AF2E4(v16, v15);
            (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
            *uint64_t v14 = v18;
            v14[1] = v17;
            return _s17IMSharedUtilities29RemoteIntentBroadcastEncodingVwxx_0((uint64_t)a1);
          }
        }
        else
        {
          sub_1A0783C7C((uint64_t)&v24);
          uint64_t v14 = v23;
          unint64_t v15 = v19;
          uint64_t v16 = v20;
        }
        unint64_t v17 = sub_1A08D7B70(MEMORY[0x1E4FBC860]);
        goto LABEL_14;
      }
    }
    else
    {
      sub_1A0783C7C((uint64_t)&v24);
    }
    unint64_t v18 = sub_1A08D75B8(MEMORY[0x1E4FBC860]);
    goto LABEL_7;
  }
  return _s17IMSharedUtilities29RemoteIntentBroadcastEncodingVwxx_0((uint64_t)a1);
}

unint64_t sub_1A091CBF8()
{
  unint64_t result = qword_1E94FBF20;
  if (!qword_1E94FBF20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FBF20);
  }
  return result;
}

uint64_t RemoteIntentContactSetupInfo.encode(to:)(void *a1)
{
  uint64_t v33 = *MEMORY[0x1E4F143B8];
  uint64_t v2 = sub_1A07856F8(&qword_1E94FBF30);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A086F45C(a1, a1[3]);
  sub_1A091CBF8();
  sub_1A09F4CC8();
  uint64_t v6 = self;
  uint64_t v7 = (void *)sub_1A09F3CE8();
  id v31 = 0;
  id v8 = objc_msgSend(v6, sel_archivedDataWithRootObject_requiringSecureCoding_error_, v7, 1, &v31);

  id v9 = v31;
  if (v8)
  {
    uint64_t v28 = v2;
    unint64_t v10 = (void *)sub_1A09F33E8();
    unint64_t v12 = v11;

    sub_1A078231C(0, &qword_1E94FB7F0);
    char v13 = (void *)sub_1A09F3CE8();
    id v31 = 0;
    id v14 = objc_msgSend(v6, sel_archivedDataWithRootObject_requiringSecureCoding_error_, v13, 1, &v31);

    id v15 = v31;
    if (v14)
    {
      uint64_t v16 = (void *)sub_1A09F33E8();
      unint64_t v18 = v17;

      id v31 = v10;
      unint64_t v32 = v12;
      unint64_t v27 = v12;
      char v30 = 0;
      sub_1A08E4BB0();
      uint64_t v20 = v28;
      uint64_t v19 = v29;
      sub_1A09F4A78();
      if (v19)
      {
        (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v20);
        sub_1A08AF2E4((uint64_t)v16, v18);
        uint64_t v21 = (uint64_t)v10;
        unint64_t v22 = v27;
      }
      else
      {
        id v31 = v16;
        unint64_t v32 = v18;
        char v30 = 1;
        sub_1A09F4A78();
        (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v20);
        sub_1A08AF2E4((uint64_t)v10, v27);
        uint64_t v21 = (uint64_t)v16;
        unint64_t v22 = v18;
      }
      return sub_1A08AF2E4(v21, v22);
    }
    else
    {
      unint64_t v25 = v15;
      sub_1A09F3258();

      swift_willThrow();
      sub_1A08AF2E4((uint64_t)v10, v12);
      return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v28);
    }
  }
  else
  {
    os_log_type_t v23 = v9;
    sub_1A09F3258();

    swift_willThrow();
    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
}

unint64_t sub_1A091CFD0(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_1A08BC180();
  unint64_t result = sub_1A08BC12C();
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1A091D000@<X0>(void *a1@<X0>, unint64_t *a2@<X8>)
{
  return RemoteIntentContactSetupInfo.init(from:)(a1, a2);
}

uint64_t sub_1A091D018(void *a1)
{
  return RemoteIntentContactSetupInfo.encode(to:)(a1);
}

uint64_t destroy for RemoteIntentContactSetupInfo()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *_s17IMSharedUtilities28RemoteIntentContactSetupInfoVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for RemoteIntentContactSetupInfo(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *assignWithTake for RemoteIntentContactSetupInfo(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for RemoteIntentContactSetupInfo()
{
  return &type metadata for RemoteIntentContactSetupInfo;
}

unsigned char *storeEnumTagSinglePayload for RemoteIntentContactSetupInfo.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A091D224);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RemoteIntentContactSetupInfo.CodingKeys()
{
  return &type metadata for RemoteIntentContactSetupInfo.CodingKeys;
}

unint64_t sub_1A091D260()
{
  unint64_t result = qword_1E94FBF38;
  if (!qword_1E94FBF38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FBF38);
  }
  return result;
}

unint64_t sub_1A091D2B8()
{
  unint64_t result = qword_1E94FBF40;
  if (!qword_1E94FBF40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FBF40);
  }
  return result;
}

unint64_t sub_1A091D310()
{
  unint64_t result = qword_1E94FBF48;
  if (!qword_1E94FBF48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FBF48);
  }
  return result;
}

uint64_t sub_1A091D364(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000017 && a2 == 0x80000001A0A35690 || (sub_1A09F4B28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001A0A356B0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v5 = sub_1A09F4B28();
    swift_bridgeObjectRelease();
    if (v5) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t getEnumTagSinglePayload for RemoteIntentKeyTransparencySetupInfo(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 2 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 2) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 2;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  if (v6 >= 2) {
    int v7 = ((v6 + 2147483646) & 0x7FFFFFFF) - 1;
  }
  else {
    int v7 = -2;
  }
  if (v7 < 0) {
    int v7 = -1;
  }
  return (v7 + 1);
}

unsigned char *storeEnumTagSinglePayload for RemoteIntentKeyTransparencySetupInfo(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A091D5C8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RemoteIntentKeyTransparencySetupInfo()
{
  return &type metadata for RemoteIntentKeyTransparencySetupInfo;
}

uint64_t sub_1A091D600()
{
  return 0x6574704F666C6573;
}

uint64_t sub_1A091D620@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x6574704F666C6573 && a2 == 0xEB000000006E4964)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1A09F4B28();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1A091D6D0(uint64_t a1)
{
  unint64_t v2 = sub_1A091DAD0();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A091D70C(uint64_t a1)
{
  unint64_t v2 = sub_1A091DAD0();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A091D748@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v5 = sub_1A07856F8(&qword_1E94FBF60);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  id v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A086F45C(a1, a1[3]);
  sub_1A091DAD0();
  sub_1A09F4CA8();
  if (v2) {
    return _s17IMSharedUtilities29RemoteIntentBroadcastEncodingVwxx_0((uint64_t)a1);
  }
  char v9 = sub_1A09F4838();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t result = _s17IMSharedUtilities29RemoteIntentBroadcastEncodingVwxx_0((uint64_t)a1);
  *a2 = v9;
  return result;
}

uint64_t sub_1A091D8A4(void *a1)
{
  uint64_t v2 = sub_1A07856F8(&qword_1E94FBF50);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A086F45C(a1, a1[3]);
  sub_1A091DAD0();
  sub_1A09F4CC8();
  sub_1A09F4988();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_1A091D9D8(unsigned __int8 a1)
{
  int v2 = a1;
  uint64_t v3 = MEMORY[0x1E4FBC868];
  uint64_t v11 = MEMORY[0x1E4FBC868];
  *(void *)&long long v8 = sub_1A09F3E18();
  *((void *)&v8 + 1) = v4;
  sub_1A09F4648();
  if (v2 == 2)
  {
    sub_1A09ED5A4((uint64_t)v10, &v8);
    sub_1A087B20C((uint64_t)v10);
    sub_1A0783C7C((uint64_t)&v8);
    return v11;
  }
  else
  {
    uint64_t v9 = MEMORY[0x1E4FBB390];
    LOBYTE(v8) = a1 & 1;
    sub_1A07825B4(&v8, v7);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_1A08D97F0(v7, (uint64_t)v10, isUniquelyReferenced_nonNull_native);
    swift_bridgeObjectRelease();
    sub_1A087B20C((uint64_t)v10);
  }
  return v3;
}

unint64_t sub_1A091DAD0()
{
  unint64_t result = qword_1E94FBF58;
  if (!qword_1E94FBF58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FBF58);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for RemoteIntentKeyTransparencySetupInfo.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1A091DBC0);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for RemoteIntentKeyTransparencySetupInfo.CodingKeys()
{
  return &type metadata for RemoteIntentKeyTransparencySetupInfo.CodingKeys;
}

unint64_t sub_1A091DBFC()
{
  unint64_t result = qword_1E94FBF68;
  if (!qword_1E94FBF68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FBF68);
  }
  return result;
}

unint64_t sub_1A091DC54()
{
  unint64_t result = qword_1E94FBF70;
  if (!qword_1E94FBF70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FBF70);
  }
  return result;
}

unint64_t sub_1A091DCAC()
{
  unint64_t result = qword_1E94FBF78;
  if (!qword_1E94FBF78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FBF78);
  }
  return result;
}

uint64_t sub_1A091DD00(uint64_t a1)
{
  *(void *)&long long v8 = sub_1A09F3E18();
  *((void *)&v8 + 1) = v2;
  sub_1A09F4648();
  if (*(void *)(a1 + 16) && (unint64_t v3 = sub_1A087AB2C((uint64_t)v7), (v4 & 1) != 0))
  {
    sub_1A0785268(*(void *)(a1 + 56) + 32 * v3, (uint64_t)&v8);
  }
  else
  {
    long long v8 = 0u;
    long long v9 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_1A087B20C((uint64_t)v7);
  if (*((void *)&v9 + 1))
  {
    uint64_t result = swift_dynamicCast();
    if (result) {
      return v6;
    }
  }
  else
  {
    sub_1A0783C7C((uint64_t)&v8);
    return 0;
  }
  return result;
}

uint64_t sub_1A091DDDC@<X0>(uint64_t *a1@<X8>)
{
  long long v3 = v1[1];
  long long v6 = *v1;
  v7[0] = v3;
  long long v4 = *(long long *)((char *)v1 + 25);
  uint64_t v8 = v6;
  uint64_t v9 = v3;
  *(_OWORD *)((char *)v7 + 9) = v4;
  uint64_t v10 = *((void *)&v7[0] + 1);
  sub_1A0924920((uint64_t)&v8);
  sub_1A0924920((uint64_t)&v9);
  sub_1A0924920((uint64_t)&v10);
  return sub_1A091E740((uint64_t *)&v6, a1);
}

uint64_t RemoteIntentRequest<>.intentRepresentation()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  MEMORY[0x1F4188790](a1);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v8, v3, a1);
  return RemoteIntentRequestFileRepresentation.init(request:)((uint64_t)v8, a1, a2, a3);
}

uint64_t sub_1A091DF34(uint64_t a1, uint64_t a2)
{
  long long v5 = v2[1];
  *(_OWORD *)(v3 + 16) = *v2;
  *(_OWORD *)(v3 + 32) = v5;
  uint64_t v8 = (uint64_t (*)(uint64_t))((char *)&dword_1E94FC038 + dword_1E94FC038);
  *(_OWORD *)(v3 + 41) = *(_OWORD *)((char *)v2 + 25);
  long long v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 64) = v6;
  *long long v6 = v3;
  v6[1] = sub_1A08854D0;
  return v8(a2);
}

uint64_t RemoteIntentRequest.perform(using:with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unint64_t v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a5 + 64) + **(int **)(a5 + 64));
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v10;
  *uint64_t v10 = v5;
  v10[1] = sub_1A077EE54;
  return v12(a1, a2, a4, a5);
}

uint64_t sub_1A091E118@<X0>(uint64_t *a1@<X8>)
{
  long long v3 = *(_OWORD *)(v1 + 16);
  v5[0] = *(_OWORD *)v1;
  v5[1] = v3;
  uint64_t v6 = *(void *)(v1 + 32);
  uint64_t v7 = *(void *)&v5[0];
  long long v8 = v3;
  sub_1A0924920((uint64_t)&v7);
  sub_1A0924920((uint64_t)&v8);
  sub_1A0924920((uint64_t)&v8 + 8);
  return sub_1A091EBF8(v5, a1);
}

uint64_t sub_1A091E18C(uint64_t a1, uint64_t a2)
{
  long long v5 = *v2;
  long long v6 = v2[1];
  *(void *)(v3 + 48) = *((void *)v2 + 4);
  uint64_t v9 = (uint64_t (*)(uint64_t))((char *)&dword_1E94FC048 + dword_1E94FC048);
  *(_OWORD *)(v3 + 16) = v5;
  *(_OWORD *)(v3 + 32) = v6;
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 56) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_1A0926000;
  return v9(a2);
}

uint64_t sub_1A091E258@<X0>(uint64_t *a1@<X8>)
{
  return sub_1A091E2D0((uint64_t)&type metadata for MarkPlayedRequest, (uint64_t (*)(uint64_t))sub_1A08D5378, a1);
}

uint64_t sub_1A091E294@<X0>(uint64_t *a1@<X8>)
{
  return sub_1A091E2D0((uint64_t)&type metadata for MarkPlayedExpressiveSendRequest, (uint64_t (*)(uint64_t))sub_1A08D53CC, a1);
}

uint64_t sub_1A091E2D0@<X0>(uint64_t a1@<X2>, uint64_t (*a2)(uint64_t)@<X3>, uint64_t *a3@<X8>)
{
  uint64_t v7 = *(void *)v3;
  uint64_t v9 = *(void *)(v3 + 16);
  long long v8 = *(void **)(v3 + 24);
  char v10 = *(unsigned char *)(v3 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return sub_1A091F0AC(v7, v10, v9, v8, a1, a2, a3);
}

uint64_t sub_1A091E360@<X0>(uint64_t *a1@<X8>)
{
  return sub_1A091E2D0((uint64_t)&type metadata for MarkSavedRequest, (uint64_t (*)(uint64_t))sub_1A08D5420, a1);
}

uint64_t sub_1A091E39C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = *v1;
  uint64_t v4 = v1[1];
  uint64_t v6 = v1[2];
  uint64_t v5 = v1[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return sub_1A091F56C(v3, v4, v6, v5, a1);
}

uint64_t sub_1A091E3FC(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  uint64_t v6 = v2[1];
  uint64_t v8 = v2[2];
  uint64_t v7 = v2[3];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v9;
  *uint64_t v9 = v3;
  v9[1] = sub_1A077EE54;
  return sub_1A088AE70(a2, v5, v6, v8, v7);
}

uint64_t sub_1A091E4B8@<X0>(uint64_t *a1@<X8>)
{
  return sub_1A091FA00(a1);
}

uint64_t sub_1A091E4D0(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1A077EE54;
  return RemoteIntentRequestBroadcasts.perform(using:)(a1);
}

uint64_t sub_1A091E574(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1A077EE54;
  return RemoteIntentRequestAttachmentBroadcasts.perform(using:)(a1);
}

uint64_t sub_1A091E618@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = *v1;
  uint64_t v4 = v1[1];
  uint64_t v6 = v1[2];
  uint64_t v5 = v1[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return sub_1A091FE34(v3, v4, v6, v5, a1);
}

uint64_t sub_1A091E678(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *v2;
  uint64_t v7 = v2[1];
  uint64_t v9 = v2[2];
  uint64_t v8 = v2[3];
  char v10 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v10;
  *char v10 = v3;
  v10[1] = sub_1A077EE54;
  return sub_1A08BF808(a1, a2, v6, v7, v9, v8);
}

uint64_t sub_1A091E740@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v38 = a2;
  uint64_t v4 = sub_1A07856F8(&qword_1E94F9C28);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1A07856F8(&qword_1E94FB5A0);
  uint64_t v8 = MEMORY[0x1F4188790](v7 - 8);
  char v10 = (char *)v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x1F4188790](v8);
  uint64_t v13 = (char *)v34 - v12;
  MEMORY[0x1F4188790](v11);
  id v15 = (char *)v34 - v14;
  uint64_t v16 = sub_1A09F38B8();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v40 = *(void (**)(char *, uint64_t, uint64_t))(v17 + 56);
  uint64_t v41 = v16;
  uint64_t v39 = v17 + 56;
  v40(v15, 1, 1);
  sub_1A08E0E1C((uint64_t)v15, (uint64_t)v13);
  sub_1A07856F8(&qword_1E94FB6D0);
  swift_allocObject();
  uint64_t v18 = sub_1A09F37B8();
  sub_1A08E0614((uint64_t)v15);
  v42[3] = &type metadata for MarkMessageReadClearUnreadCountRequest;
  v42[4] = sub_1A08D527C();
  uint64_t v19 = (_OWORD *)swift_allocObject();
  v42[0] = v19;
  uint64_t v45 = *a1;
  uint64_t v20 = a1[2];
  uint64_t v43 = a1[3];
  uint64_t v44 = v20;
  long long v21 = *((_OWORD *)a1 + 1);
  v19[1] = *(_OWORD *)a1;
  long long v19[2] = v21;
  *(_OWORD *)((char *)v19 + 41) = *(_OWORD *)((char *)a1 + 25);
  sub_1A09F3108();
  swift_allocObject();
  sub_1A0924920((uint64_t)&v45);
  sub_1A0924920((uint64_t)&v44);
  sub_1A0924920((uint64_t)&v43);
  sub_1A09F30F8();
  uint64_t v22 = sub_1A09F30C8();
  MEMORY[0x1F4188790](v22);
  (*(void (**)(char *, void))(v24 + 104))((char *)v34 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E4F26D18]);
  sub_1A09F30D8();
  sub_1A08BBFDC();
  sub_1A09F30E8();
  swift_release();
  if (v2)
  {
    sub_1A08787A8((uint64_t)&v45);
    sub_1A08787A8((uint64_t)&v44);
    sub_1A08787A8((uint64_t)&v43);
    sub_1A08E1354((uint64_t)v42);
    return swift_release();
  }
  else
  {
    uint64_t v26 = sub_1A09F34A8();
    uint64_t v35 = v6;
    uint64_t v27 = v26;
    id v36 = v34;
    uint64_t v37 = v18;
    uint64_t v28 = *(void *)(v26 - 8);
    MEMORY[0x1F4188790](v26);
    char v30 = (char *)v34 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_1A09F2ED8();
    sub_1A09F3488();
    v34[1] = v31;
    (*(void (**)(char *, uint64_t))(v28 + 8))(v30, v27);
    uint64_t v32 = sub_1A09F39B8();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v35, 1, 1, v32);
    sub_1A09F3868();
    ((void (*)(char *, void, uint64_t, uint64_t))v40)(v10, 0, 1, v41);
    sub_1A08E0E1C((uint64_t)v10, (uint64_t)v15);
    uint64_t v33 = v37;
    sub_1A09F37E8();
    sub_1A08E0614((uint64_t)v10);
    sub_1A08787A8((uint64_t)&v45);
    sub_1A08787A8((uint64_t)&v44);
    sub_1A08787A8((uint64_t)&v43);
    uint64_t result = sub_1A08E1354((uint64_t)v42);
    *uint64_t v38 = v33;
  }
  return result;
}

uint64_t sub_1A091EBF8@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v39 = a2;
  uint64_t v4 = sub_1A07856F8(&qword_1E94F9C28);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1A07856F8(&qword_1E94FB5A0);
  uint64_t v8 = MEMORY[0x1F4188790](v7 - 8);
  char v10 = (char *)v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x1F4188790](v8);
  uint64_t v13 = (char *)v35 - v12;
  MEMORY[0x1F4188790](v11);
  id v15 = (char *)v35 - v14;
  uint64_t v16 = sub_1A09F38B8();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v41 = *(void (**)(char *, uint64_t, uint64_t))(v17 + 56);
  uint64_t v42 = v16;
  uint64_t v40 = v17 + 56;
  v41(v15, 1, 1);
  sub_1A08E0E1C((uint64_t)v15, (uint64_t)v13);
  sub_1A07856F8(&qword_1E94FB6D0);
  swift_allocObject();
  uint64_t v18 = sub_1A09F37B8();
  sub_1A08E0614((uint64_t)v15);
  v43[3] = &type metadata for MarkMessageReadRequest;
  v43[4] = sub_1A08D52D0();
  uint64_t v19 = swift_allocObject();
  v43[0] = v19;
  uint64_t v46 = *a1;
  uint64_t v20 = a1[2];
  uint64_t v21 = a1[4];
  uint64_t v44 = a1[3];
  uint64_t v45 = v20;
  long long v22 = *((_OWORD *)a1 + 1);
  *(_OWORD *)(v19 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v19 + 32) = v22;
  *(void *)(v19 + 48) = v21;
  sub_1A09F3108();
  swift_allocObject();
  sub_1A0924920((uint64_t)&v46);
  sub_1A0924920((uint64_t)&v45);
  sub_1A0924920((uint64_t)&v44);
  sub_1A09F30F8();
  uint64_t v23 = sub_1A09F30C8();
  MEMORY[0x1F4188790](v23);
  (*(void (**)(char *, void))(v25 + 104))((char *)v35 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E4F26D18]);
  sub_1A09F30D8();
  sub_1A08BBFDC();
  sub_1A09F30E8();
  swift_release();
  if (v2)
  {
    sub_1A08787A8((uint64_t)&v46);
    sub_1A08787A8((uint64_t)&v45);
    sub_1A08787A8((uint64_t)&v44);
    sub_1A08E1354((uint64_t)v43);
    return swift_release();
  }
  else
  {
    uint64_t v27 = sub_1A09F34A8();
    id v36 = v6;
    uint64_t v28 = v27;
    uint64_t v37 = v35;
    uint64_t v38 = v18;
    uint64_t v29 = *(void *)(v27 - 8);
    MEMORY[0x1F4188790](v27);
    uint64_t v31 = (char *)v35 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_1A09F2ED8();
    sub_1A09F3488();
    v35[1] = v32;
    (*(void (**)(char *, uint64_t))(v29 + 8))(v31, v28);
    uint64_t v33 = sub_1A09F39B8();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v36, 1, 1, v33);
    sub_1A09F3868();
    ((void (*)(char *, void, uint64_t, uint64_t))v41)(v10, 0, 1, v42);
    sub_1A08E0E1C((uint64_t)v10, (uint64_t)v15);
    uint64_t v34 = v38;
    sub_1A09F37E8();
    sub_1A08E0614((uint64_t)v10);
    sub_1A08787A8((uint64_t)&v46);
    sub_1A08787A8((uint64_t)&v45);
    sub_1A08787A8((uint64_t)&v44);
    uint64_t result = sub_1A08E1354((uint64_t)v43);
    *uint64_t v39 = v34;
  }
  return result;
}

uint64_t sub_1A091F0AC@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, void *a4@<X3>, uint64_t a5@<X4>, uint64_t (*a6)(uint64_t)@<X5>, uint64_t *a7@<X8>)
{
  uint64_t v50 = a7;
  uint64_t v13 = sub_1A07856F8(&qword_1E94F9C28);
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v48 = (char *)&v41 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1A07856F8(&qword_1E94FB5A0);
  uint64_t v16 = MEMORY[0x1F4188790](v15 - 8);
  uint64_t v49 = (char *)&v41 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = MEMORY[0x1F4188790](v16);
  uint64_t v20 = (char *)&v41 - v19;
  MEMORY[0x1F4188790](v18);
  long long v22 = (char *)&v41 - v21;
  uint64_t v23 = sub_1A09F38B8();
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v46 = *(void (**)(char *, uint64_t, uint64_t))(v24 + 56);
  uint64_t v47 = v23;
  uint64_t v45 = v24 + 56;
  v46(v22, 1, 1);
  sub_1A08E0E1C((uint64_t)v22, (uint64_t)v20);
  sub_1A07856F8(&qword_1E94FB6D0);
  swift_allocObject();
  uint64_t v53 = sub_1A09F37B8();
  uint64_t v25 = sub_1A08E0614((uint64_t)v22);
  v52[3] = a5;
  v52[4] = a6(v25);
  uint64_t v26 = swift_allocObject();
  v52[0] = v26;
  *(void *)(v26 + 16) = a1;
  *(unsigned char *)(v26 + 24) = a2;
  *(void *)(v26 + 32) = a3;
  *(void *)(v26 + 40) = a4;
  sub_1A09F3108();
  swift_allocObject();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v27 = a4;
  sub_1A09F30F8();
  uint64_t v28 = sub_1A09F30C8();
  MEMORY[0x1F4188790](v28);
  (*(void (**)(char *, void))(v30 + 104))((char *)&v41 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E4F26D18]);
  sub_1A09F30D8();
  sub_1A08BBFDC();
  uint64_t v31 = v51;
  sub_1A09F30E8();
  if (v31)
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    sub_1A08E1354((uint64_t)v52);
    return swift_release();
  }
  else
  {
    swift_release();
    uint64_t v33 = sub_1A09F34A8();
    uint64_t v51 = a3;
    uint64_t v34 = v33;
    uint64_t v43 = &v41;
    uint64_t v35 = *(void *)(v33 - 8);
    MEMORY[0x1F4188790](v33);
    uint64_t v37 = (char *)&v41 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_1A09F2ED8();
    sub_1A09F3488();
    id v42 = v27;
    uint64_t v44 = a1;
    (*(void (**)(char *, uint64_t))(v35 + 8))(v37, v34);
    uint64_t v38 = sub_1A09F39B8();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 56))(v48, 1, 1, v38);
    uint64_t v39 = (uint64_t)v49;
    sub_1A09F3868();
    ((void (*)(uint64_t, void, uint64_t, uint64_t))v46)(v39, 0, 1, v47);
    sub_1A08E0E1C(v39, (uint64_t)v22);
    uint64_t v40 = v53;
    sub_1A09F37E8();
    sub_1A08E0614(v39);

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = sub_1A08E1354((uint64_t)v52);
    *uint64_t v50 = v40;
  }
  return result;
}

uint64_t sub_1A091F56C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v10 = sub_1A07856F8(&qword_1E94F9C28);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1A07856F8(&qword_1E94FB5A0);
  uint64_t v14 = MEMORY[0x1F4188790](v13 - 8);
  uint64_t v16 = (char *)v40 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = MEMORY[0x1F4188790](v14);
  uint64_t v19 = (char *)v40 - v18;
  MEMORY[0x1F4188790](v17);
  uint64_t v21 = (char *)v40 - v20;
  uint64_t v22 = sub_1A09F38B8();
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v43 = *(void (**)(char *, uint64_t, uint64_t))(v23 + 56);
  uint64_t v44 = v22;
  uint64_t v42 = v23 + 56;
  v43(v21, 1, 1);
  sub_1A08E0E1C((uint64_t)v21, (uint64_t)v19);
  sub_1A07856F8(&qword_1E94FB6D0);
  swift_allocObject();
  uint64_t v47 = sub_1A09F37B8();
  sub_1A08E0614((uint64_t)v21);
  v46[3] = &type metadata for CancelScheduledMessageRequest;
  v46[4] = sub_1A08D56B4();
  uint64_t v24 = (void *)swift_allocObject();
  v46[0] = v24;
  void v24[2] = a1;
  v24[3] = a2;
  v24[4] = a3;
  void v24[5] = a4;
  sub_1A09F3108();
  swift_allocObject();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1A09F30F8();
  uint64_t v25 = sub_1A09F30C8();
  MEMORY[0x1F4188790](v25);
  (*(void (**)(char *, void))(v27 + 104))((char *)v40 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E4F26D18]);
  sub_1A09F30D8();
  sub_1A08BBFDC();
  uint64_t v28 = v45;
  uint64_t v29 = sub_1A09F30E8();
  if (v28)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    sub_1A08E1354((uint64_t)v46);
    return swift_release();
  }
  else
  {
    v40[2] = v30;
    v40[3] = v29;
    swift_release();
    uint64_t v32 = sub_1A09F34A8();
    uint64_t v45 = a2;
    uint64_t v33 = v32;
    v40[1] = v40;
    uint64_t v34 = v12;
    uint64_t v35 = *(void *)(v32 - 8);
    MEMORY[0x1F4188790](v32);
    uint64_t v37 = (char *)v40 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_1A09F2ED8();
    sub_1A09F3488();
    uint64_t v41 = a5;
    v40[0] = a3;
    (*(void (**)(char *, uint64_t))(v35 + 8))(v37, v33);
    uint64_t v38 = sub_1A09F39B8();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 56))(v34, 1, 1, v38);
    sub_1A09F3868();
    ((void (*)(char *, void, uint64_t, uint64_t))v43)(v16, 0, 1, v44);
    sub_1A08E0E1C((uint64_t)v16, (uint64_t)v21);
    uint64_t v39 = v47;
    sub_1A09F37E8();
    sub_1A08E0614((uint64_t)v16);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = sub_1A08E1354((uint64_t)v46);
    *uint64_t v41 = v39;
  }
  return result;
}

uint64_t sub_1A091FA00@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = sub_1A07856F8(&qword_1E94F9C28);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1A07856F8(&qword_1E94FB5A0);
  uint64_t v7 = MEMORY[0x1F4188790](v6 - 8);
  uint64_t v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x1F4188790](v7);
  uint64_t v12 = (char *)&v31 - v11;
  MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)&v31 - v13;
  uint64_t v15 = sub_1A09F38B8();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56);
  uint64_t v37 = v16 + 56;
  v17(v14, 1, 1, v15);
  sub_1A08E0E1C((uint64_t)v14, (uint64_t)v12);
  sub_1A07856F8(&qword_1E94FB6D0);
  swift_allocObject();
  uint64_t v41 = sub_1A09F37B8();
  sub_1A08E0614((uint64_t)v14);
  uint64_t v39 = &type metadata for RemoteIntentRequestBroadcasts;
  unint64_t v40 = sub_1A089286C();
  sub_1A09F3108();
  swift_allocObject();
  sub_1A09F30F8();
  uint64_t v18 = sub_1A09F30C8();
  MEMORY[0x1F4188790](v18);
  (*(void (**)(char *, void))(v20 + 104))((char *)&v31 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E4F26D18]);
  sub_1A09F30D8();
  sub_1A08BBFDC();
  uint64_t v21 = sub_1A09F30E8();
  uint64_t v36 = v22;
  swift_release();
  if (v1)
  {
    sub_1A08E1354((uint64_t)v38);
    return swift_release();
  }
  else
  {
    uint64_t v24 = sub_1A09F34A8();
    uint64_t v32 = v5;
    uint64_t v33 = v21;
    uint64_t v25 = v24;
    uint64_t v34 = &v31;
    uint64_t v26 = *(void *)(v24 - 8);
    MEMORY[0x1F4188790](v24);
    uint64_t v28 = (char *)&v31 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_1A09F2ED8();
    sub_1A09F3488();
    uint64_t v31 = v17;
    uint64_t v35 = a1;
    (*(void (**)(char *, uint64_t))(v26 + 8))(v28, v25);
    uint64_t v29 = sub_1A09F39B8();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v32, 1, 1, v29);
    sub_1A09F3868();
    v31(v9, 0, 1, v15);
    sub_1A08E0E1C((uint64_t)v9, (uint64_t)v14);
    uint64_t v30 = v41;
    sub_1A09F37E8();
    sub_1A08E0614((uint64_t)v9);
    uint64_t result = sub_1A08E1354((uint64_t)v38);
    *uint64_t v35 = v30;
  }
  return result;
}

uint64_t sub_1A091FE34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v10 = sub_1A07856F8(&qword_1E94F9C28);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1A07856F8(&qword_1E94FB5A0);
  uint64_t v14 = MEMORY[0x1F4188790](v13 - 8);
  uint64_t v16 = (char *)v40 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = MEMORY[0x1F4188790](v14);
  uint64_t v19 = (char *)v40 - v18;
  MEMORY[0x1F4188790](v17);
  uint64_t v21 = (char *)v40 - v20;
  uint64_t v22 = sub_1A09F38B8();
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v43 = *(void (**)(char *, uint64_t, uint64_t))(v23 + 56);
  uint64_t v44 = v22;
  uint64_t v42 = v23 + 56;
  v43(v21, 1, 1);
  sub_1A08E0E1C((uint64_t)v21, (uint64_t)v19);
  sub_1A07856F8(&qword_1E94FB6D0);
  swift_allocObject();
  uint64_t v47 = sub_1A09F37B8();
  sub_1A08E0614((uint64_t)v21);
  v46[3] = &type metadata for RemoteIntentRequestSetupInfo;
  v46[4] = sub_1A08D5708();
  uint64_t v24 = (void *)swift_allocObject();
  v46[0] = v24;
  void v24[2] = a1;
  v24[3] = a2;
  v24[4] = a3;
  void v24[5] = a4;
  sub_1A09F3108();
  swift_allocObject();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1A09F30F8();
  uint64_t v25 = sub_1A09F30C8();
  MEMORY[0x1F4188790](v25);
  (*(void (**)(char *, void))(v27 + 104))((char *)v40 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E4F26D18]);
  sub_1A09F30D8();
  sub_1A08BBFDC();
  uint64_t v28 = v45;
  uint64_t v29 = sub_1A09F30E8();
  if (v28)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    sub_1A08E1354((uint64_t)v46);
    return swift_release();
  }
  else
  {
    v40[2] = v30;
    v40[3] = v29;
    swift_release();
    uint64_t v32 = sub_1A09F34A8();
    uint64_t v45 = a2;
    uint64_t v33 = v32;
    v40[1] = v40;
    uint64_t v34 = v12;
    uint64_t v35 = *(void *)(v32 - 8);
    MEMORY[0x1F4188790](v32);
    uint64_t v37 = (char *)v40 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_1A09F2ED8();
    sub_1A09F3488();
    uint64_t v41 = a5;
    v40[0] = a4;
    (*(void (**)(char *, uint64_t))(v35 + 8))(v37, v33);
    uint64_t v38 = sub_1A09F39B8();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 56))(v34, 1, 1, v38);
    sub_1A09F3868();
    ((void (*)(char *, void, uint64_t, uint64_t))v43)(v16, 0, 1, v44);
    sub_1A08E0E1C((uint64_t)v16, (uint64_t)v21);
    uint64_t v39 = v47;
    sub_1A09F37E8();
    sub_1A08E0614((uint64_t)v16);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = sub_1A08E1354((uint64_t)v46);
    *uint64_t v41 = v39;
  }
  return result;
}

uint64_t sub_1A09202C8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v38 = a2;
  uint64_t v4 = sub_1A07856F8(&qword_1E94F9C28);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1A07856F8(&qword_1E94FB5A0);
  uint64_t v8 = MEMORY[0x1F4188790](v7 - 8);
  uint64_t v10 = (char *)v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x1F4188790](v8);
  uint64_t v13 = (char *)v34 - v12;
  MEMORY[0x1F4188790](v11);
  uint64_t v15 = (char *)v34 - v14;
  uint64_t v16 = sub_1A09F38B8();
  uint64_t v17 = *(void *)(v16 - 8);
  unint64_t v40 = *(void (**)(char *, uint64_t, uint64_t))(v17 + 56);
  uint64_t v41 = v16;
  uint64_t v39 = v17 + 56;
  v40(v15, 1, 1);
  sub_1A08E0E1C((uint64_t)v15, (uint64_t)v13);
  sub_1A07856F8(&qword_1E94FB6D0);
  swift_allocObject();
  uint64_t v18 = sub_1A09F37B8();
  sub_1A08E0614((uint64_t)v15);
  v42[3] = &type metadata for SetupXPCObjectRequest;
  v42[4] = sub_1A08D5180();
  uint64_t v19 = swift_allocObject();
  v42[0] = v19;
  long long v43 = *(_OWORD *)(a1 + 8);
  uint64_t v44 = *(void *)(a1 + 32);
  uint64_t v20 = v44;
  long long v21 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v19 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v19 + 32) = v21;
  *(void *)(v19 + 48) = v20;
  sub_1A09F3108();
  swift_allocObject();
  sub_1A09248F4((uint64_t)&v43);
  sub_1A0924920((uint64_t)&v44);
  sub_1A09F30F8();
  uint64_t v22 = sub_1A09F30C8();
  MEMORY[0x1F4188790](v22);
  (*(void (**)(char *, void))(v24 + 104))((char *)v34 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E4F26D18]);
  sub_1A09F30D8();
  sub_1A08BBFDC();
  sub_1A09F30E8();
  swift_release();
  if (v2)
  {
    sub_1A092498C((uint64_t)&v43);
    sub_1A08787A8((uint64_t)&v44);
    sub_1A08E1354((uint64_t)v42);
    return swift_release();
  }
  else
  {
    uint64_t v26 = sub_1A09F34A8();
    uint64_t v35 = v6;
    uint64_t v27 = v26;
    uint64_t v36 = v34;
    uint64_t v37 = v18;
    uint64_t v28 = *(void *)(v26 - 8);
    MEMORY[0x1F4188790](v26);
    uint64_t v30 = (char *)v34 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_1A09F2ED8();
    sub_1A09F3488();
    v34[1] = v31;
    (*(void (**)(char *, uint64_t))(v28 + 8))(v30, v27);
    uint64_t v32 = sub_1A09F39B8();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v35, 1, 1, v32);
    sub_1A09F3868();
    ((void (*)(char *, void, uint64_t, uint64_t))v40)(v10, 0, 1, v41);
    sub_1A08E0E1C((uint64_t)v10, (uint64_t)v15);
    uint64_t v33 = v37;
    sub_1A09F37E8();
    sub_1A08E0614((uint64_t)v10);
    sub_1A092498C((uint64_t)&v43);
    sub_1A08787A8((uint64_t)&v44);
    uint64_t result = sub_1A08E1354((uint64_t)v42);
    *uint64_t v38 = v33;
  }
  return result;
}

uint64_t sub_1A0920760@<X0>(long long *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v38 = a2;
  uint64_t v4 = sub_1A07856F8(&qword_1E94F9C28);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1A07856F8(&qword_1E94FB5A0);
  uint64_t v8 = MEMORY[0x1F4188790](v7 - 8);
  uint64_t v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x1F4188790](v8);
  uint64_t v13 = (char *)&v34 - v12;
  MEMORY[0x1F4188790](v11);
  uint64_t v15 = (char *)&v34 - v14;
  uint64_t v16 = sub_1A09F38B8();
  uint64_t v17 = *(void *)(v16 - 8);
  unint64_t v40 = *(void (**)(char *, uint64_t, uint64_t))(v17 + 56);
  uint64_t v41 = v16;
  uint64_t v39 = v17 + 56;
  v40(v15, 1, 1);
  sub_1A08E0E1C((uint64_t)v15, (uint64_t)v13);
  sub_1A07856F8(&qword_1E94FB6D0);
  swift_allocObject();
  uint64_t v18 = sub_1A09F37B8();
  sub_1A08E0614((uint64_t)v15);
  v42[3] = &type metadata for MarkUnreadRequest;
  v42[4] = sub_1A08D5324();
  uint64_t v19 = swift_allocObject();
  v42[0] = v19;
  long long v20 = a1[1];
  long long v44 = *a1;
  uint64_t v45 = *((void *)a1 + 2);
  uint64_t v43 = *((void *)a1 + 4);
  uint64_t v21 = v43;
  *(_OWORD *)(v19 + 16) = v44;
  *(_OWORD *)(v19 + 32) = v20;
  *(void *)(v19 + 48) = v21;
  sub_1A09F3108();
  swift_allocObject();
  sub_1A09248F4((uint64_t)&v44);
  sub_1A0924920((uint64_t)&v45);
  sub_1A0924920((uint64_t)&v43);
  sub_1A09F30F8();
  uint64_t v22 = sub_1A09F30C8();
  MEMORY[0x1F4188790](v22);
  (*(void (**)(char *, void))(v24 + 104))((char *)&v34 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E4F26D18]);
  sub_1A09F30D8();
  sub_1A08BBFDC();
  sub_1A09F30E8();
  swift_release();
  if (v2)
  {
    sub_1A092498C((uint64_t)&v44);
    sub_1A08787A8((uint64_t)&v45);
    sub_1A08787A8((uint64_t)&v43);
    sub_1A08E1354((uint64_t)v42);
    return swift_release();
  }
  else
  {
    uint64_t v26 = sub_1A09F34A8();
    uint64_t v35 = v6;
    uint64_t v27 = v26;
    uint64_t v36 = &v34;
    uint64_t v37 = v18;
    uint64_t v28 = *(void *)(v26 - 8);
    MEMORY[0x1F4188790](v26);
    uint64_t v30 = (char *)&v34 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_1A09F2ED8();
    sub_1A09F3488();
    uint64_t v34 = v31;
    (*(void (**)(char *, uint64_t))(v28 + 8))(v30, v27);
    uint64_t v32 = sub_1A09F39B8();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v35, 1, 1, v32);
    sub_1A09F3868();
    ((void (*)(char *, void, uint64_t, uint64_t))v40)(v10, 0, 1, v41);
    sub_1A08E0E1C((uint64_t)v10, (uint64_t)v15);
    uint64_t v33 = v37;
    sub_1A09F37E8();
    sub_1A08E0614((uint64_t)v10);
    sub_1A092498C((uint64_t)&v44);
    sub_1A08787A8((uint64_t)&v45);
    sub_1A08787A8((uint64_t)&v43);
    uint64_t result = sub_1A08E1354((uint64_t)v42);
    *uint64_t v38 = v33;
  }
  return result;
}

uint64_t sub_1A0920C14@<X0>(_OWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = sub_1A07856F8(&qword_1E94F9C28);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1A07856F8(&qword_1E94FB5A0);
  uint64_t v9 = MEMORY[0x1F4188790](v8 - 8);
  uint64_t v11 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x1F4188790](v9);
  uint64_t v14 = (char *)&v37 - v13;
  MEMORY[0x1F4188790](v12);
  uint64_t v16 = (char *)&v37 - v15;
  uint64_t v17 = sub_1A09F38B8();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = *(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56);
  uint64_t v44 = v18 + 56;
  uint64_t v45 = v19;
  v19(v16, 1, 1, v17);
  sub_1A08E0E1C((uint64_t)v16, (uint64_t)v14);
  sub_1A07856F8(&qword_1E94FB6D0);
  swift_allocObject();
  uint64_t v47 = sub_1A09F37B8();
  sub_1A08E0614((uint64_t)v16);
  v46[3] = &type metadata for LoadChatHistoryRequest;
  v46[4] = sub_1A08D512C();
  long long v20 = (_OWORD *)swift_allocObject();
  v46[0] = v20;
  long long v21 = a1[3];
  v20[3] = a1[2];
  void v20[4] = v21;
  long long v22 = a1[5];
  void v20[5] = a1[4];
  v20[6] = v22;
  long long v23 = a1[1];
  v20[1] = *a1;
  id v20[2] = v23;
  sub_1A09F3108();
  swift_allocObject();
  sub_1A09247AC((uint64_t)a1);
  sub_1A09F30F8();
  uint64_t v24 = sub_1A09F30C8();
  MEMORY[0x1F4188790](v24);
  (*(void (**)(char *, void))(v26 + 104))((char *)&v37 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E4F26D18]);
  sub_1A09F30D8();
  sub_1A08BBFDC();
  uint64_t v27 = sub_1A09F30E8();
  uint64_t v43 = v28;
  swift_release();
  if (v2)
  {
    sub_1A0924880((uint64_t)a1);
    sub_1A08E1354((uint64_t)v46);
    return swift_release();
  }
  else
  {
    uint64_t v30 = sub_1A09F34A8();
    uint64_t v39 = v7;
    uint64_t v40 = v27;
    uint64_t v31 = v30;
    uint64_t v41 = &v37;
    uint64_t v32 = *(void *)(v30 - 8);
    MEMORY[0x1F4188790](v30);
    uint64_t v34 = (char *)&v37 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_1A09F2ED8();
    sub_1A09F3488();
    uint64_t v42 = a2;
    uint64_t v38 = v17;
    (*(void (**)(char *, uint64_t))(v32 + 8))(v34, v31);
    uint64_t v35 = sub_1A09F39B8();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(v39, 1, 1, v35);
    sub_1A09F3868();
    v45(v11, 0, 1, v38);
    sub_1A08E0E1C((uint64_t)v11, (uint64_t)v16);
    uint64_t v36 = v47;
    sub_1A09F37E8();
    sub_1A08E0614((uint64_t)v11);
    sub_1A0924880((uint64_t)a1);
    uint64_t result = sub_1A08E1354((uint64_t)v46);
    *uint64_t v42 = v36;
  }
  return result;
}

uint64_t sub_1A0921090@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = sub_1A07856F8(&qword_1E94F9C28);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1A07856F8(&qword_1E94FB5A0);
  uint64_t v9 = MEMORY[0x1F4188790](v8 - 8);
  uint64_t v11 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x1F4188790](v9);
  uint64_t v14 = (char *)&v36 - v13;
  MEMORY[0x1F4188790](v12);
  uint64_t v16 = (char *)&v36 - v15;
  uint64_t v17 = sub_1A09F38B8();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = *(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56);
  uint64_t v43 = v18 + 56;
  uint64_t v44 = v19;
  v19(v16, 1, 1, v17);
  sub_1A08E0E1C((uint64_t)v16, (uint64_t)v14);
  sub_1A07856F8(&qword_1E94FB6D0);
  swift_allocObject();
  uint64_t v46 = sub_1A09F37B8();
  sub_1A08E0614((uint64_t)v16);
  v45[3] = &type metadata for LoadPagedHistoryAroundMessageRequest;
  v45[4] = sub_1A08D54C8();
  uint64_t v20 = swift_allocObject();
  v45[0] = v20;
  long long v21 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v20 + 48) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v20 + 64) = v21;
  *(_OWORD *)(v20 + 80) = *(_OWORD *)(a1 + 64);
  *(void *)(v20 + 96) = *(void *)(a1 + 80);
  long long v22 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v20 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v20 + 32) = v22;
  sub_1A09F3108();
  swift_allocObject();
  sub_1A0925B00(a1);
  sub_1A09F30F8();
  uint64_t v23 = sub_1A09F30C8();
  MEMORY[0x1F4188790](v23);
  (*(void (**)(char *, void))(v25 + 104))((char *)&v36 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E4F26D18]);
  sub_1A09F30D8();
  sub_1A08BBFDC();
  uint64_t v26 = sub_1A09F30E8();
  uint64_t v42 = v27;
  swift_release();
  if (v2)
  {
    sub_1A0925BC0(a1);
    sub_1A08E1354((uint64_t)v45);
    return swift_release();
  }
  else
  {
    uint64_t v29 = sub_1A09F34A8();
    uint64_t v38 = v7;
    uint64_t v39 = v26;
    uint64_t v30 = v29;
    uint64_t v40 = &v36;
    uint64_t v31 = *(void *)(v29 - 8);
    MEMORY[0x1F4188790](v29);
    uint64_t v33 = (char *)&v36 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_1A09F2ED8();
    sub_1A09F3488();
    uint64_t v41 = a2;
    uint64_t v37 = v17;
    (*(void (**)(char *, uint64_t))(v31 + 8))(v33, v30);
    uint64_t v34 = sub_1A09F39B8();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v38, 1, 1, v34);
    sub_1A09F3868();
    v44(v11, 0, 1, v37);
    sub_1A08E0E1C((uint64_t)v11, (uint64_t)v16);
    uint64_t v35 = v46;
    sub_1A09F37E8();
    sub_1A08E0614((uint64_t)v11);
    sub_1A0925BC0(a1);
    uint64_t result = sub_1A08E1354((uint64_t)v45);
    *uint64_t v41 = v35;
  }
  return result;
}

uint64_t sub_1A0921514@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v8 = sub_1A07856F8(&qword_1E94F9C28);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1A07856F8(&qword_1E94FB5A0);
  uint64_t v12 = MEMORY[0x1F4188790](v11 - 8);
  uint64_t v14 = (char *)v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x1F4188790](v12);
  uint64_t v17 = (char *)v38 - v16;
  MEMORY[0x1F4188790](v15);
  uint64_t v19 = (char *)v38 - v18;
  uint64_t v20 = sub_1A09F38B8();
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v41 = *(void (**)(char *, uint64_t, uint64_t))(v21 + 56);
  uint64_t v42 = v20;
  uint64_t v40 = v21 + 56;
  v41(v19, 1, 1);
  sub_1A08E0E1C((uint64_t)v19, (uint64_t)v17);
  sub_1A07856F8(&qword_1E94FB6D0);
  swift_allocObject();
  uint64_t v22 = sub_1A09F37B8();
  sub_1A08E0614((uint64_t)v19);
  v43[3] = &type metadata for RetrieveLocalFileURLForTransferGUIDRequest;
  unint64_t v23 = sub_1A08D5564();
  v43[0] = a1;
  v43[1] = a2;
  v43[4] = v23;
  v43[2] = a3;
  sub_1A09F3108();
  swift_allocObject();
  swift_bridgeObjectRetain();
  sub_1A09F30F8();
  uint64_t v24 = sub_1A09F30C8();
  MEMORY[0x1F4188790](v24);
  (*(void (**)(char *, void))(v26 + 104))((char *)v38 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E4F26D18]);
  sub_1A09F30D8();
  sub_1A08BBFDC();
  uint64_t v27 = v44;
  uint64_t v28 = sub_1A09F30E8();
  if (v27)
  {
    swift_bridgeObjectRelease();
    swift_release();
    sub_1A08E1354((uint64_t)v43);
    return swift_release();
  }
  else
  {
    v38[3] = v29;
    v38[4] = v28;
    swift_release();
    uint64_t v31 = sub_1A09F34A8();
    uint64_t v44 = v22;
    uint64_t v32 = v31;
    v38[2] = v38;
    uint64_t v33 = *(void *)(v31 - 8);
    MEMORY[0x1F4188790](v31);
    uint64_t v35 = (char *)v38 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_1A09F2ED8();
    sub_1A09F3488();
    uint64_t v39 = a4;
    v38[1] = a2;
    (*(void (**)(char *, uint64_t))(v33 + 8))(v35, v32);
    uint64_t v36 = sub_1A09F39B8();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(v10, 1, 1, v36);
    sub_1A09F3868();
    ((void (*)(char *, void, uint64_t, uint64_t))v41)(v14, 0, 1, v42);
    sub_1A08E0E1C((uint64_t)v14, (uint64_t)v19);
    uint64_t v37 = v44;
    sub_1A09F37E8();
    sub_1A08E0614((uint64_t)v14);
    swift_bridgeObjectRelease();
    uint64_t result = sub_1A08E1354((uint64_t)v43);
    *uint64_t v39 = v37;
  }
  return result;
}

uint64_t sub_1A0921970@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v7 = sub_1A07856F8(&qword_1E94F9C28);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1A07856F8(&qword_1E94FB5A0);
  uint64_t v11 = MEMORY[0x1F4188790](v10 - 8);
  uint64_t v13 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x1F4188790](v11);
  uint64_t v16 = (char *)&v35 - v15;
  MEMORY[0x1F4188790](v14);
  uint64_t v18 = (char *)&v35 - v17;
  uint64_t v19 = sub_1A09F38B8();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = *(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56);
  uint64_t v42 = v20 + 56;
  uint64_t v43 = v21;
  v21(v18, 1, 1, v19);
  sub_1A08E0E1C((uint64_t)v18, (uint64_t)v16);
  sub_1A07856F8(&qword_1E94FB6D0);
  swift_allocObject();
  uint64_t v45 = sub_1A09F37B8();
  sub_1A08E0614((uint64_t)v18);
  v44[3] = &type metadata for RetrieveLocalFileURLForTransferGUIDsRequest;
  v44[4] = sub_1A08D55B8();
  v44[0] = a1;
  v44[1] = a2;
  sub_1A09F3108();
  swift_allocObject();
  swift_bridgeObjectRetain();
  sub_1A09F30F8();
  uint64_t v22 = sub_1A09F30C8();
  MEMORY[0x1F4188790](v22);
  (*(void (**)(char *, void))(v24 + 104))((char *)&v35 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E4F26D18]);
  sub_1A09F30D8();
  sub_1A08BBFDC();
  uint64_t v25 = sub_1A09F30E8();
  if (v3)
  {
    swift_bridgeObjectRelease();
    swift_release();
    sub_1A08E1354((uint64_t)v44);
    return swift_release();
  }
  else
  {
    uint64_t v39 = v26;
    uint64_t v40 = v25;
    swift_release();
    uint64_t v28 = sub_1A09F34A8();
    uint64_t v36 = v9;
    uint64_t v29 = v28;
    uint64_t v38 = &v35;
    uint64_t v30 = *(void *)(v28 - 8);
    MEMORY[0x1F4188790](v28);
    uint64_t v32 = (char *)&v35 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_1A09F2ED8();
    sub_1A09F3488();
    uint64_t v41 = a3;
    uint64_t v37 = a1;
    (*(void (**)(char *, uint64_t))(v30 + 8))(v32, v29);
    uint64_t v33 = sub_1A09F39B8();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v36, 1, 1, v33);
    sub_1A09F3868();
    v43(v13, 0, 1, v19);
    sub_1A08E0E1C((uint64_t)v13, (uint64_t)v18);
    uint64_t v34 = v45;
    sub_1A09F37E8();
    sub_1A08E0614((uint64_t)v13);
    swift_bridgeObjectRelease();
    uint64_t result = sub_1A08E1354((uint64_t)v44);
    *uint64_t v41 = v34;
  }
  return result;
}

uint64_t sub_1A0921DC8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t (*a4)(uint64_t)@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v10 = sub_1A07856F8(&qword_1E94F9C28);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v41 = (char *)v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1A07856F8(&qword_1E94FB5A0);
  uint64_t v13 = MEMORY[0x1F4188790](v12 - 8);
  uint64_t v15 = (char *)v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x1F4188790](v13);
  uint64_t v18 = (char *)v39 - v17;
  MEMORY[0x1F4188790](v16);
  uint64_t v20 = (char *)v39 - v19;
  uint64_t v21 = sub_1A09F38B8();
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v23 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v22 + 56);
  v39[5] = v22 + 56;
  uint64_t v40 = v23;
  v23((uint64_t)v20, 1, 1, v21);
  sub_1A08E0E1C((uint64_t)v20, (uint64_t)v18);
  sub_1A07856F8(&qword_1E94FB6D0);
  swift_allocObject();
  uint64_t v44 = sub_1A09F37B8();
  uint64_t v24 = sub_1A08E0614((uint64_t)v20);
  v43[3] = a3;
  v43[4] = a4(v24);
  v43[0] = a1;
  v43[1] = a2;
  sub_1A09F3108();
  swift_allocObject();
  swift_bridgeObjectRetain();
  sub_1A09F30F8();
  uint64_t v25 = sub_1A09F30C8();
  MEMORY[0x1F4188790](v25);
  (*(void (**)(char *, void))(v27 + 104))((char *)v39 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E4F26D18]);
  sub_1A09F30D8();
  sub_1A08BBFDC();
  uint64_t v28 = v42;
  uint64_t v29 = sub_1A09F30E8();
  if (v28)
  {
    swift_bridgeObjectRelease();
    swift_release();
    sub_1A08E1354((uint64_t)v43);
    return swift_release();
  }
  else
  {
    v39[3] = v30;
    v39[4] = v29;
    swift_release();
    uint64_t v32 = (uint64_t)v15;
    uint64_t v33 = sub_1A09F34A8();
    void v39[2] = v39;
    uint64_t v34 = *(void *)(v33 - 8);
    MEMORY[0x1F4188790](v33);
    uint64_t v36 = (char *)v39 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_1A09F2ED8();
    sub_1A09F3488();
    uint64_t v42 = a5;
    v39[1] = a2;
    (*(void (**)(char *, uint64_t))(v34 + 8))(v36, v33);
    uint64_t v37 = sub_1A09F39B8();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56))(v41, 1, 1, v37);
    sub_1A09F3868();
    v40(v32, 0, 1, v21);
    sub_1A08E0E1C(v32, (uint64_t)v20);
    uint64_t v38 = v44;
    sub_1A09F37E8();
    sub_1A08E0614(v32);
    swift_bridgeObjectRelease();
    uint64_t result = sub_1A08E1354((uint64_t)v43);
    *uint64_t v42 = v38;
  }
  return result;
}

uint64_t sub_1A0922228@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(void)@<X1>, unint64_t *a3@<X2>, void (*a4)(uint64_t)@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v10 = sub_1A07856F8(&qword_1E94F9C28);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v46 = (char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1A07856F8(&qword_1E94FB5A0);
  uint64_t v13 = MEMORY[0x1F4188790](v12 - 8);
  uint64_t v15 = (char *)&v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x1F4188790](v13);
  uint64_t v18 = (char *)&v39 - v17;
  MEMORY[0x1F4188790](v16);
  uint64_t v20 = (char *)&v39 - v19;
  uint64_t v21 = sub_1A09F38B8();
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v44 = *(void (**)(char *, uint64_t, uint64_t))(v22 + 56);
  uint64_t v45 = v21;
  uint64_t v43 = v22 + 56;
  v44(v20, 1, 1);
  sub_1A08E0E1C((uint64_t)v20, (uint64_t)v18);
  sub_1A07856F8(&qword_1E94FB6D0);
  swift_allocObject();
  uint64_t v49 = sub_1A09F37B8();
  sub_1A08E0614((uint64_t)v20);
  v48[3] = a2(0);
  v48[4] = sub_1A08D551C(a3, a4);
  uint64_t v23 = sub_1A0884478(v48);
  sub_1A0925C28(a1, (uint64_t)v23, (uint64_t (*)(void))a4);
  sub_1A09F3108();
  swift_allocObject();
  sub_1A09F30F8();
  uint64_t v24 = sub_1A09F30C8();
  MEMORY[0x1F4188790](v24);
  (*(void (**)(char *, void))(v26 + 104))((char *)&v39 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E4F26D18]);
  sub_1A09F30D8();
  sub_1A08BBFDC();
  uint64_t v27 = v47;
  uint64_t v28 = sub_1A09F30E8();
  swift_release();
  if (v27)
  {
    sub_1A0925C90(a1, (uint64_t (*)(void))a4);
    sub_1A08E1354((uint64_t)v48);
    return swift_release();
  }
  else
  {
    uint64_t v30 = sub_1A09F34A8();
    uint64_t v47 = a1;
    uint64_t v31 = v30;
    uint64_t v41 = &v39;
    uint64_t v32 = *(void *)(v30 - 8);
    uint64_t v39 = v28;
    uint64_t v33 = (uint64_t)v15;
    uint64_t v34 = v32;
    MEMORY[0x1F4188790](v30);
    uint64_t v36 = (char *)&v39 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_1A09F2ED8();
    sub_1A09F3488();
    uint64_t v40 = a4;
    uint64_t v42 = a5;
    (*(void (**)(char *, uint64_t))(v34 + 8))(v36, v31);
    uint64_t v37 = sub_1A09F39B8();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56))(v46, 1, 1, v37);
    sub_1A09F3868();
    ((void (*)(uint64_t, void, uint64_t, uint64_t))v44)(v33, 0, 1, v45);
    sub_1A08E0E1C(v33, (uint64_t)v20);
    uint64_t v38 = v49;
    sub_1A09F37E8();
    sub_1A08E0614(v33);
    sub_1A0925C90(v47, (uint64_t (*)(void))v40);
    uint64_t result = sub_1A08E1354((uint64_t)v48);
    *uint64_t v42 = v38;
  }
  return result;
}

uint64_t sub_1A09226BC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = sub_1A07856F8(&qword_1E94F9C28);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1A07856F8(&qword_1E94FB5A0);
  uint64_t v9 = MEMORY[0x1F4188790](v8 - 8);
  uint64_t v11 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x1F4188790](v9);
  uint64_t v14 = (char *)&v37 - v13;
  MEMORY[0x1F4188790](v12);
  uint64_t v16 = (char *)&v37 - v15;
  uint64_t v17 = sub_1A09F38B8();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = *(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56);
  uint64_t v44 = v18 + 56;
  uint64_t v45 = v19;
  v19(v16, 1, 1, v17);
  sub_1A08E0E1C((uint64_t)v16, (uint64_t)v14);
  sub_1A07856F8(&qword_1E94FB6D0);
  swift_allocObject();
  uint64_t v47 = sub_1A09F37B8();
  sub_1A08E0614((uint64_t)v16);
  v46[3] = &type metadata for JoinChatRequest;
  v46[4] = sub_1A08D5660();
  uint64_t v20 = swift_allocObject();
  v46[0] = v20;
  long long v21 = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v20 + 80) = *(_OWORD *)(a1 + 64);
  *(_OWORD *)(v20 + 96) = v21;
  *(_OWORD *)(v20 + 112) = *(_OWORD *)(a1 + 96);
  *(void *)(v20 + 128) = *(void *)(a1 + 112);
  long long v22 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v20 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v20 + 32) = v22;
  long long v23 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v20 + 48) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v20 + 64) = v23;
  sub_1A09F3108();
  swift_allocObject();
  sub_1A0925DE4(a1);
  sub_1A09F30F8();
  uint64_t v24 = sub_1A09F30C8();
  MEMORY[0x1F4188790](v24);
  (*(void (**)(char *, void))(v26 + 104))((char *)&v37 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E4F26D18]);
  sub_1A09F30D8();
  sub_1A08BBFDC();
  uint64_t v27 = sub_1A09F30E8();
  uint64_t v43 = v28;
  swift_release();
  if (v2)
  {
    sub_1A0925EE8(a1);
    sub_1A08E1354((uint64_t)v46);
    return swift_release();
  }
  else
  {
    uint64_t v30 = sub_1A09F34A8();
    uint64_t v39 = v7;
    uint64_t v40 = v27;
    uint64_t v31 = v30;
    uint64_t v41 = &v37;
    uint64_t v32 = *(void *)(v30 - 8);
    MEMORY[0x1F4188790](v30);
    uint64_t v34 = (char *)&v37 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_1A09F2ED8();
    sub_1A09F3488();
    uint64_t v42 = a2;
    uint64_t v38 = v17;
    (*(void (**)(char *, uint64_t))(v32 + 8))(v34, v31);
    uint64_t v35 = sub_1A09F39B8();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(v39, 1, 1, v35);
    sub_1A09F3868();
    v45(v11, 0, 1, v38);
    sub_1A08E0E1C((uint64_t)v11, (uint64_t)v16);
    uint64_t v36 = v47;
    sub_1A09F37E8();
    sub_1A08E0614((uint64_t)v11);
    sub_1A0925EE8(a1);
    uint64_t result = sub_1A08E1354((uint64_t)v46);
    *uint64_t v42 = v36;
  }
  return result;
}

uint64_t sub_1A0922B48@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = sub_1A07856F8(&qword_1E94F9C28);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1A07856F8(&qword_1E94FB5A0);
  uint64_t v9 = MEMORY[0x1F4188790](v8 - 8);
  uint64_t v11 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x1F4188790](v9);
  uint64_t v14 = (char *)&v36 - v13;
  MEMORY[0x1F4188790](v12);
  uint64_t v16 = (char *)&v36 - v15;
  uint64_t v17 = sub_1A09F38B8();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = *(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56);
  uint64_t v43 = v18 + 56;
  uint64_t v44 = v19;
  v19(v16, 1, 1, v17);
  sub_1A08E0E1C((uint64_t)v16, (uint64_t)v14);
  sub_1A07856F8(&qword_1E94FB6D0);
  swift_allocObject();
  uint64_t v46 = sub_1A09F37B8();
  sub_1A08E0614((uint64_t)v16);
  v45[3] = &type metadata for SendMessageRequest;
  v45[4] = sub_1A08D51D4();
  uint64_t v20 = (_OWORD *)swift_allocObject();
  v45[0] = v20;
  long long v21 = *(_OWORD *)(a1 + 16);
  v20[1] = *(_OWORD *)a1;
  id v20[2] = v21;
  long long v22 = *(_OWORD *)(a1 + 48);
  v20[3] = *(_OWORD *)(a1 + 32);
  void v20[4] = v22;
  sub_1A09F3108();
  swift_allocObject();
  sub_1A0925904((id *)a1);
  sub_1A09F30F8();
  uint64_t v23 = sub_1A09F30C8();
  MEMORY[0x1F4188790](v23);
  (*(void (**)(char *, void))(v25 + 104))((char *)&v36 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E4F26D18]);
  sub_1A09F30D8();
  sub_1A08BBFDC();
  uint64_t v26 = sub_1A09F30E8();
  uint64_t v42 = v27;
  swift_release();
  if (v2)
  {
    sub_1A09259AC((void **)a1);
    sub_1A08E1354((uint64_t)v45);
    return swift_release();
  }
  else
  {
    uint64_t v29 = sub_1A09F34A8();
    uint64_t v38 = v7;
    uint64_t v39 = v26;
    uint64_t v30 = v29;
    uint64_t v40 = &v36;
    uint64_t v31 = *(void *)(v29 - 8);
    MEMORY[0x1F4188790](v29);
    uint64_t v33 = (char *)&v36 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_1A09F2ED8();
    sub_1A09F3488();
    uint64_t v41 = a2;
    uint64_t v37 = v17;
    (*(void (**)(char *, uint64_t))(v31 + 8))(v33, v30);
    uint64_t v34 = sub_1A09F39B8();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v38, 1, 1, v34);
    sub_1A09F3868();
    v44(v11, 0, 1, v37);
    sub_1A08E0E1C((uint64_t)v11, (uint64_t)v16);
    uint64_t v35 = v46;
    sub_1A09F37E8();
    sub_1A08E0614((uint64_t)v11);
    sub_1A09259AC((void **)a1);
    uint64_t result = sub_1A08E1354((uint64_t)v45);
    *uint64_t v41 = v35;
  }
  return result;
}

uint64_t sub_1A0922FBC@<X0>(uint64_t *a1@<X8>)
{
  long long v3 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)uint64_t v5 = *(_OWORD *)v1;
  *(_OWORD *)&v5[16] = v3;
  uint64_t v6 = *(void *)(v1 + 32);
  long long v7 = *(_OWORD *)&v5[8];
  uint64_t v8 = v6;
  sub_1A09248F4((uint64_t)&v7);
  sub_1A0924920((uint64_t)&v8);
  return sub_1A09202C8((uint64_t)v5, a1);
}

uint64_t sub_1A0923024(uint64_t a1, uint64_t a2)
{
  long long v6 = *(_OWORD *)(v2 + 16);
  *(_OWORD *)(v3 + 16) = *(_OWORD *)v2;
  *(_OWORD *)(v3 + 32) = v6;
  *(void *)(v3 + 48) = *(void *)(v2 + 32);
  long long v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 56) = v7;
  *long long v7 = v3;
  v7[1] = sub_1A0885E2C;
  return sub_1A08E1D1C(a1, a2);
}

uint64_t sub_1A09230E4@<X0>(uint64_t *a1@<X8>)
{
  long long v3 = *(_OWORD *)(v1 + 16);
  v5[0] = *(_OWORD *)v1;
  v5[1] = v3;
  uint64_t v6 = *(void *)(v1 + 32);
  long long v7 = v5[0];
  uint64_t v8 = v3;
  uint64_t v9 = v6;
  sub_1A09248F4((uint64_t)&v7);
  sub_1A0924920((uint64_t)&v8);
  sub_1A0924920((uint64_t)&v9);
  return sub_1A0920760(v5, a1);
}

uint64_t sub_1A0923154(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v3 = *v1;
  uint64_t v6 = (uint64_t (*)(uint64_t))((char *)&dword_1E94FC0A8 + dword_1E94FC0A8);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_1A0925FFC;
  return v6(v3);
}

uint64_t RemoteIntentRequest.perform(using:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[2] = a3;
  v4[3] = v3;
  v4[4] = *(void *)(a3 - 8);
  v4[5] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1A09232B4, 0, 0);
}

uint64_t sub_1A09232B4()
{
  (*(void (**)(void, void, void))(v0[4] + 16))(v0[5], v0[3], v0[2]);
  sub_1A09F46A8();
  sub_1A09F3EA8();
  swift_getDynamicType();
  sub_1A09F4D08();
  sub_1A09F3EA8();
  swift_bridgeObjectRelease();
  return sub_1A09F47A8();
}

uint64_t sub_1A09233B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v5;
  *uint64_t v5 = v3;
  v5[1] = sub_1A077EE58;
  return RemoteIntentRequest.perform(using:)((uint64_t)v5, v6, a3);
}

uint64_t sub_1A0923444(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v11;
  *uint64_t v11 = v5;
  v11[1] = sub_1A077EE54;
  return RemoteIntentRequest.perform(using:with:)(a1, a2, v10, a4, a5);
}

uint64_t RemoteIntentRequestFailure.error.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 8);
  uint64_t v3 = *(void *)(v1 + 32);
  *(void *)a1 = *(void *)v1;
  *(void *)(a1 + 8) = v2;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(v1 + 16);
  *(void *)(a1 + 32) = v3;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

__n128 RemoteIntentRequestFailure.error.setter(long long *a1)
{
  __n128 v4 = (__n128)a1[1];
  long long v5 = *a1;
  uint64_t v2 = *((void *)a1 + 4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __n128 result = v4;
  *(_OWORD *)uint64_t v1 = v5;
  *(__n128 *)(v1 + 16) = v4;
  *(void *)(v1 + 32) = v2;
  return result;
}

uint64_t (*RemoteIntentRequestFailure.error.modify())()
{
  return nullsub_5;
}

void RemoteIntentRequestFailure.init(nonCodableError:)(void *a1@<X0>, uint64_t *a2@<X8>)
{
  __n128 v4 = (void *)sub_1A09F3248();
  id v5 = objc_msgSend(v4, sel_domain);
  uint64_t v6 = sub_1A09F3E18();
  uint64_t v8 = v7;

  id v9 = objc_msgSend(v4, sel_code);
  id v10 = objc_msgSend(v4, sel_localizedDescription);
  uint64_t v11 = sub_1A09F3E18();
  uint64_t v13 = v12;

  *a2 = v6;
  a2[1] = v8;
  a2[2] = (uint64_t)v9;
  a2[3] = v11;
  a2[4] = v13;
}

uint64_t sub_1A092369C()
{
  return 0x726F727265;
}

uint64_t sub_1A09236B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x726F727265 && a2 == 0xE500000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1A09F4B28();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1A0923740(uint64_t a1)
{
  unint64_t v2 = sub_1A0923920();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A092377C(uint64_t a1)
{
  unint64_t v2 = sub_1A0923920();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t RemoteIntentRequestFailure.encode(to:)(void *a1)
{
  uint64_t v3 = sub_1A07856F8(&qword_1E94FBF90);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v7 = *v1;
  long long v10 = v1[1];
  long long v11 = v7;
  uint64_t v8 = *((void *)v1 + 4);
  sub_1A086F45C(a1, a1[3]);
  sub_1A0923920();
  sub_1A09F4CC8();
  long long v12 = v11;
  long long v13 = v10;
  uint64_t v14 = v8;
  sub_1A08B5860();
  sub_1A09F4A78();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_1A0923920()
{
  unint64_t result = qword_1E94FBF98;
  if (!qword_1E94FBF98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FBF98);
  }
  return result;
}

uint64_t RemoteIntentRequestFailure.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_1A07856F8(&qword_1E94FBFA0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A086F45C(a1, a1[3]);
  sub_1A0923920();
  sub_1A09F4CA8();
  if (!v2)
  {
    sub_1A08B580C();
    sub_1A09F4928();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    uint64_t v9 = v13[2];
    uint64_t v10 = v15;
    long long v11 = v14;
    *(void *)a2 = v13[1];
    *(void *)(a2 + 8) = v9;
    *(_OWORD *)(a2 + 16) = v11;
    *(void *)(a2 + 32) = v10;
  }
  return _s17IMSharedUtilities29RemoteIntentBroadcastEncodingVwxx_0((uint64_t)a1);
}

unint64_t sub_1A0923AF0(uint64_t a1)
{
  unint64_t result = sub_1A0923B18();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1A0923B18()
{
  unint64_t result = qword_1E94FBFA8;
  if (!qword_1E94FBFA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FBFA8);
  }
  return result;
}

unint64_t sub_1A0923B6C(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_1A08BC0D8();
  unint64_t result = sub_1A08BC084();
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1A0923B9C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return RemoteIntentRequestFailure.init(from:)(a1, a2);
}

uint64_t sub_1A0923BB4(void *a1)
{
  return RemoteIntentRequestFailure.encode(to:)(a1);
}

uint64_t sub_1A0923BD0()
{
  return swift_bridgeObjectRetain();
}

uint64_t destroy for RemoteIntentPayloadCodingError()
{
  return sub_1A0923BE8();
}

uint64_t sub_1A0923BE8()
{
  return swift_bridgeObjectRelease();
}

uint64_t _s17IMSharedUtilities30RemoteIntentPayloadCodingErrorOwCP_0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  char v5 = *((unsigned char *)a2 + 16);
  sub_1A0923BD0();
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for RemoteIntentPayloadCodingError(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  char v5 = *((unsigned char *)a2 + 16);
  sub_1A0923BD0();
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  sub_1A0923BE8();
  return a1;
}

__n128 initializeWithTake for RemoteIntentClientSetupContext(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for RemoteIntentPayloadCodingError(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = v3;
  sub_1A0923BE8();
  return a1;
}

uint64_t getEnumTagSinglePayload for RemoteIntentPayloadCodingError(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for RemoteIntentPayloadCodingError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)__n128 result = a2 - 255;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1A0923D7C(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 16);
}

uint64_t sub_1A0923D84(uint64_t result, char a2)
{
  *(unsigned char *)(result + 16) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for RemoteIntentPayloadCodingError()
{
  return &type metadata for RemoteIntentPayloadCodingError;
}

uint64_t dispatch thunk of RemoteIntentRequestAdapting.generateSafeRenderFiles(for:useOriginalOnFailure:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  long long v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a4 + 8) + **(int **)(a4 + 8));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_1A08F37F8;
  return v11(a1, a2, a3, a4);
}

{
  uint64_t v4;
  void *v9;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  long long v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a4 + 16) + **(int **)(a4 + 16));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_1A08F34BC;
  return v11(a1, a2, a3, a4);
}

uint64_t dispatch thunk of RemoteIntentRequestAdapting.generateSafeRenderFile(for:useOriginalOnFailure:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v15 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a6 + 24)
                                                                                     + **(int **)(a6 + 24));
  long long v13 = (void *)swift_task_alloc();
  *(void *)(v6 + 16) = v13;
  *long long v13 = v6;
  v13[1] = sub_1A077EE58;
  return v15(a1, a2, a3, a4, a5, a6);
}

uint64_t dispatch thunk of static RemoteIntentRequest.requestTypeIdentifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of RemoteIntentRequest.intentRepresentation()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of RemoteIntentRequest.perform(using:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  long long v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a4 + 64) + **(int **)(a4 + 64));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_1A077EE58;
  return v11(a1, a2, a3, a4);
}

uint64_t dispatch thunk of RemoteIntentRequest.perform(using:with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  long long v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a5 + 72) + **(int **)(a5 + 72));
  long long v11 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v11;
  *long long v11 = v5;
  v11[1] = sub_1A077EE54;
  return v13(a1, a2, a3, a4, a5);
}

ValueMetadata *type metadata accessor for RemoteIntentRequestFailure()
{
  return &type metadata for RemoteIntentRequestFailure;
}

uint64_t dispatch thunk of RemoteIntentResponse.returnValue()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of static RemoteIntentResponse.defaultReturnValue()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of RemoteIntentResponse.auxiliaryOutput()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

unsigned char *storeEnumTagSinglePayload for RemoteIntentRequestFailure.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *__n128 result = a2;
        return result;
      case 2:
        *(_WORD *)__n128 result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)__n128 result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *__n128 result = 0;
      break;
    case 2:
      *(_WORD *)__n128 result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1A0924434);
    case 4:
      *(_DWORD *)__n128 result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for RemoteIntentRequestFailure.CodingKeys()
{
  return &type metadata for RemoteIntentRequestFailure.CodingKeys;
}

unint64_t sub_1A0924470()
{
  unint64_t result = qword_1E94FBFE8;
  if (!qword_1E94FBFE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FBFE8);
  }
  return result;
}

unint64_t sub_1A09244C8()
{
  unint64_t result = qword_1E94FBFF0;
  if (!qword_1E94FBFF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FBFF0);
  }
  return result;
}

unint64_t sub_1A0924520()
{
  unint64_t result = qword_1E94FBFF8[0];
  if (!qword_1E94FBFF8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E94FBFF8);
  }
  return result;
}

uint64_t sub_1A0924574@<X0>(uint64_t *a1@<X8>)
{
  long long v3 = v1[3];
  _OWORD v7[2] = v1[2];
  v7[3] = v3;
  long long v4 = v1[5];
  v7[4] = v1[4];
  v7[5] = v4;
  long long v5 = v1[1];
  v7[0] = *v1;
  v7[1] = v5;
  sub_1A09247AC((uint64_t)v7);
  return sub_1A0920C14(v7, a1);
}

uint64_t sub_1A09245D0(uint64_t a1, uint64_t a2)
{
  *(void *)(v3 + 112) = a1;
  long long v5 = v2[3];
  *(_OWORD *)(v3 + 48) = v2[2];
  *(_OWORD *)(v3 + 64) = v5;
  long long v6 = v2[5];
  *(_OWORD *)(v3 + 80) = v2[4];
  *(_OWORD *)(v3 + 96) = v6;
  long long v7 = v2[1];
  *(_OWORD *)(v3 + 16) = *v2;
  *(_OWORD *)(v3 + 32) = v7;
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v3 + 120) = v8;
  *uint64_t v8 = v3;
  v8[1] = sub_1A0924690;
  return sub_1A09347C4(a2);
}

uint64_t sub_1A0924690(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *v3;
  uint64_t v7 = *v3;
  swift_task_dealloc();
  if (!v2)
  {
    uint64_t v8 = *(void **)(v6 + 112);
    *uint64_t v8 = a1;
    v8[1] = a2;
  }
  uint64_t v9 = *(uint64_t (**)(void))(v7 + 8);
  return v9();
}

uint64_t sub_1A09247AC(uint64_t a1)
{
  return a1;
}

uint64_t sub_1A0924820()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 112, 7);
}

uint64_t sub_1A0924880(uint64_t a1)
{
  return a1;
}

uint64_t sub_1A09248F4(uint64_t a1)
{
  return a1;
}

uint64_t sub_1A0924920(uint64_t a1)
{
  return a1;
}

uint64_t sub_1A092494C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 56, 7);
}

uint64_t sub_1A092498C(uint64_t a1)
{
  return a1;
}

uint64_t sub_1A09249B8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1A09253FC(a1, (void (*)(uint64_t))type metadata accessor for MoveMessagesInChatsWithGUIDsRequest, &qword_1E94FB338, a2);
}

uint64_t sub_1A0924A00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[3] = v4;
  v5[4] = a4;
  long long v5[2] = a2;
  return MEMORY[0x1F4188298](sub_1A0924A24, 0, 0);
}

uint64_t sub_1A0924A24()
{
  uint64_t v1 = *(void **)(v0 + 16);
  uint64_t v2 = (void *)sub_1A09F4068();
  uint64_t v3 = (void *)sub_1A09F3428();
  uint64_t v4 = (void *)sub_1A09F3DE8();
  objc_msgSend(v1, sel_moveMessagesInChatsWithGUIDsToRecentlyDeleted_deleteDate_queryID_, v2, v3, v4);

  long long v5 = *(uint64_t (**)(void))(v0 + 8);
  return v5();
}

uint64_t sub_1A0924AF8@<X0>(uint64_t *a1@<X8>)
{
  return sub_1A09250CC((uint64_t)&type metadata for LoadRecoverableMessagesMetadataRequest, (uint64_t (*)(uint64_t))sub_1A08D5474, a1);
}

uint64_t sub_1A0924B2C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *v2;
  uint64_t v5 = v2[1];
  v3[2] = a2;
  v3[3] = v4;
  v3[4] = v5;
  return MEMORY[0x1F4188298](sub_1A0924B54, 0, 0);
}

uint64_t sub_1A0924B54()
{
  uint64_t v1 = *(void **)(v0 + 16);
  uint64_t v2 = (void *)sub_1A09F3DE8();
  objc_msgSend(v1, sel_loadRecoverableMessagesMetadataWithQueryID_, v2);

  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_1A0924BD8@<X0>(uint64_t *a1@<X8>)
{
  long long v3 = *(_OWORD *)(v1 + 48);
  _OWORD v6[2] = *(_OWORD *)(v1 + 32);
  _OWORD v6[3] = v3;
  v6[4] = *(_OWORD *)(v1 + 64);
  uint64_t v7 = *(void *)(v1 + 80);
  long long v4 = *(_OWORD *)(v1 + 16);
  v6[0] = *(_OWORD *)v1;
  v6[1] = v4;
  sub_1A0925B00((uint64_t)v6);
  return sub_1A0921090((uint64_t)v6, a1);
}

uint64_t sub_1A0924C3C(uint64_t a1, uint64_t a2)
{
  long long v5 = *(_OWORD *)(v2 + 48);
  *(_OWORD *)(v3 + 48) = *(_OWORD *)(v2 + 32);
  *(_OWORD *)(v3 + 64) = v5;
  *(_OWORD *)(v3 + 80) = *(_OWORD *)(v2 + 64);
  *(void *)(v3 + 96) = *(void *)(v2 + 80);
  *(void *)(v3 + 104) = a1;
  long long v6 = *(_OWORD *)(v2 + 16);
  *(_OWORD *)(v3 + 16) = *(_OWORD *)v2;
  *(_OWORD *)(v3 + 32) = v6;
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 112) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_1A0924D00;
  return sub_1A09366A8(a2);
}

uint64_t sub_1A0924D00(uint64_t a1, uint64_t a2, __int16 a3)
{
  uint64_t v8 = *v4;
  uint64_t v9 = *v4;
  swift_task_dealloc();
  if (!v3)
  {
    uint64_t v10 = *(void *)(v8 + 104);
    *(void *)uint64_t v10 = a1;
    *(void *)(v10 + 8) = a2;
    *(unsigned char *)(v10 + 16) = a3 & 1;
    *(unsigned char *)(v10 + 17) = HIBYTE(a3) & 1;
  }
  uint64_t v11 = *(uint64_t (**)(void))(v9 + 8);
  return v11();
}

uint64_t sub_1A0924E2C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = *v1;
  uint64_t v4 = v1[1];
  uint64_t v5 = v1[2];
  swift_bridgeObjectRetain();
  return sub_1A0921514(v3, v4, v5, a1);
}

uint64_t sub_1A0924E78(uint64_t a1, uint64_t a2)
{
  *(void *)(v3 + 16) = a2;
  *(_OWORD *)(v3 + 24) = *(_OWORD *)v2;
  *(void *)(v3 + 40) = *(void *)(v2 + 16);
  return MEMORY[0x1F4188298](sub_1A0924EA8, 0, 0);
}

uint64_t sub_1A0924EA8()
{
  uint64_t v1 = v0[5];
  uint64_t v2 = (void *)v0[2];
  uint64_t v3 = (void *)sub_1A09F3DE8();
  objc_msgSend(v2, sel_retrieveLocalFileURLForFileTransferWithGUID_options_, v3, v1);

  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_1A0924F38@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + 8);
  uint64_t v4 = swift_bridgeObjectRetain();
  return sub_1A0921970(v4, v3, a1);
}

uint64_t sub_1A0924F6C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *v2;
  uint64_t v5 = v2[1];
  v3[2] = a2;
  v3[3] = v4;
  v3[4] = v5;
  return MEMORY[0x1F4188298](sub_1A0924F94, 0, 0);
}

uint64_t sub_1A0924F94()
{
  uint64_t v1 = v0[4];
  uint64_t v2 = (void *)v0[2];
  uint64_t v3 = (void *)sub_1A09F4068();
  objc_msgSend(v2, sel_retrieveLocalFileURLForFileTransferWithGUIDs_options_, v3, v1);

  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_1A092502C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  sub_1A07856F8((uint64_t *)&unk_1E94F9030);
  **(void **)(*(void *)(v1 + 64) + 40) = sub_1A09F4078();

  return swift_continuation_resume();
}

uint64_t sub_1A0925098@<X0>(uint64_t *a1@<X8>)
{
  return sub_1A09250CC((uint64_t)&type metadata for LoadChatsWithIdentifierRequest, (uint64_t (*)(uint64_t))sub_1A08D5228, a1);
}

uint64_t sub_1A09250CC@<X0>(uint64_t a1@<X2>, uint64_t (*a2)(uint64_t)@<X3>, uint64_t *a3@<X8>)
{
  uint64_t v8 = *v3;
  uint64_t v7 = v3[1];
  swift_bridgeObjectRetain();
  return sub_1A0921DC8(v8, v7, a1, a2, a3);
}

uint64_t sub_1A0925128(uint64_t a1, uint64_t a2)
{
  v3[16] = a1;
  v3[17] = a2;
  uint64_t v4 = v2[1];
  v3[18] = *v2;
  v3[19] = v4;
  return MEMORY[0x1F4188298](sub_1A0925150, 0, 0);
}

uint64_t sub_1A0925150()
{
  uint64_t v1 = (void *)v0[17];
  uint64_t v2 = sub_1A09F3DE8();
  v0[20] = v2;
  v0[2] = v0;
  v0[7] = v0 + 15;
  v0[3] = sub_1A0925268;
  uint64_t v3 = swift_continuation_init();
  v0[10] = MEMORY[0x1E4F143A8];
  v0[11] = 0x40000000;
  v0[12] = sub_1A092502C;
  v0[13] = &unk_1E5A0FD70;
  v0[14] = v3;
  objc_msgSend(v1, sel_loadChatsWithIdentifier_reply_, v2, v0 + 10);
  return MEMORY[0x1F41881E8](v0 + 2);
}

uint64_t sub_1A0925268()
{
  return MEMORY[0x1F4188298](sub_1A0925348, 0, 0);
}

uint64_t sub_1A0925348()
{
  uint64_t v1 = *(void *)(v0 + 120);
  uint64_t v2 = *(void **)(v0 + 128);

  *uint64_t v2 = v1;
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_1A09253B4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1A09253FC(a1, (void (*)(uint64_t))type metadata accessor for LoadChatsFilteredRequest, &qword_1E94FB350, a2);
}

uint64_t sub_1A09253FC@<X0>(uint64_t a1@<X0>, void (*a2)(uint64_t)@<X2>, unint64_t *a3@<X3>, uint64_t *a4@<X8>)
{
  MEMORY[0x1F4188790](a1 - 8);
  uint64_t v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A0925C28(v4, (uint64_t)v9, v10);
  return sub_1A0922228((uint64_t)v9, (uint64_t (*)(void))a2, a3, a2, a4);
}

uint64_t sub_1A09254A8(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_1A090E584;
  return sub_1A09A5AC0(a2);
}

uint64_t sub_1A0925540@<X0>(uint64_t *a1@<X8>)
{
  long long v3 = *(_OWORD *)(v1 + 80);
  v7[4] = *(_OWORD *)(v1 + 64);
  v7[5] = v3;
  _OWORD v7[6] = *(_OWORD *)(v1 + 96);
  uint64_t v8 = *(void *)(v1 + 112);
  long long v4 = *(_OWORD *)(v1 + 16);
  v7[0] = *(_OWORD *)v1;
  v7[1] = v4;
  long long v5 = *(_OWORD *)(v1 + 48);
  _OWORD v7[2] = *(_OWORD *)(v1 + 32);
  v7[3] = v5;
  sub_1A0925DE4((uint64_t)v7);
  return sub_1A09226BC((uint64_t)v7, a1);
}

uint64_t sub_1A09255AC(uint64_t a1, uint64_t a2)
{
  long long v5 = *(_OWORD *)(v2 + 80);
  *(_OWORD *)(v3 + 80) = *(_OWORD *)(v2 + 64);
  *(_OWORD *)(v3 + 96) = v5;
  *(_OWORD *)(v3 + 112) = *(_OWORD *)(v2 + 96);
  *(void *)(v3 + 128) = *(void *)(v2 + 112);
  long long v6 = *(_OWORD *)(v2 + 16);
  *(_OWORD *)(v3 + 16) = *(_OWORD *)v2;
  *(_OWORD *)(v3 + 32) = v6;
  long long v7 = *(_OWORD *)(v2 + 48);
  *(_OWORD *)(v3 + 48) = *(_OWORD *)(v2 + 32);
  *(_OWORD *)(v3 + 64) = v7;
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v3 + 136) = v8;
  *uint64_t v8 = v3;
  v8[1] = sub_1A0925678;
  return sub_1A09B6224(a2);
}

uint64_t sub_1A0925678()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_1A092576C@<X0>(uint64_t *a1@<X8>)
{
  long long v3 = v1[1];
  v6[0] = *v1;
  v6[1] = v3;
  long long v4 = v1[3];
  _OWORD v6[2] = v1[2];
  _OWORD v6[3] = v4;
  sub_1A0925904((id *)v6);
  return sub_1A0922B48((uint64_t)v6, a1);
}

uint64_t sub_1A09257C0(uint64_t a1, uint64_t a2)
{
  *(void *)(v3 + 16) = a2;
  *(_OWORD *)(v3 + 24) = *(_OWORD *)v2;
  *(void *)(v3 + 40) = *(void *)(v2 + 16);
  *(_OWORD *)(v3 + 48) = *(_OWORD *)(v2 + 24);
  *(unsigned char *)(v3 + 80) = *(unsigned char *)(v2 + 40);
  uint64_t v4 = *(void *)(v2 + 56);
  *(void *)(v3 + 64) = *(void *)(v2 + 48);
  *(void *)(v3 + 72) = v4;
  return MEMORY[0x1F4188298](sub_1A0925808, 0, 0);
}

uint64_t sub_1A0925808()
{
  uint64_t v1 = *(unsigned __int8 *)(v0 + 80);
  uint64_t v2 = *(void **)(v0 + 16);
  id v3 = *(id *)(v0 + 24);
  uint64_t v4 = (void *)sub_1A09F3DE8();
  long long v5 = (void *)sub_1A09F3DE8();
  long long v6 = (void *)sub_1A09F3DE8();
  objc_msgSend(v2, sel_sendMessage_toChatID_identifier_style_account_, v3, v4, v5, v1, v6);

  long long v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7();
}

id *sub_1A0925904(id *a1)
{
  id v2 = *a1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1A092595C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 80, 7);
}

void **sub_1A09259AC(void **a1)
{
  id v2 = *a1;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return a1;
}

uint64_t sub_1A0925A00()
{
  return sub_1A0925A10(57);
}

uint64_t sub_1A0925A08()
{
  return sub_1A0925A10(56);
}

uint64_t sub_1A0925A10(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v1, a1, 7);
}

uint64_t sub_1A0925A64()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 56, 7);
}

uint64_t sub_1A0925AB8()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_1A0925B00(uint64_t a1)
{
  return a1;
}

uint64_t sub_1A0925B68()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 104, 7);
}

uint64_t sub_1A0925BC0(uint64_t a1)
{
  return a1;
}

uint64_t sub_1A0925C28(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1A0925C90(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1A0925CF0(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return MEMORY[0x1F4188298](sub_1A0925D10, 0, 0);
}

uint64_t sub_1A0925D10()
{
  return sub_1A09F47A8();
}

uint64_t sub_1A0925DE4(uint64_t a1)
{
  return a1;
}

uint64_t sub_1A0925E78()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 136, 7);
}

uint64_t sub_1A0925EE8(uint64_t a1)
{
  return a1;
}

uint64_t sub_1A0925F78()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_1A0925FB8()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 48, 7);
}

void __swiftcall IMActionOpenWeb.init(dictionary:)(IMActionOpenWeb_optional *__return_ptr retstr, Swift::OpaquePointer dictionary)
{
  id v2 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  uint64_t v3 = (void *)sub_1A09F3CE8();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_initWithDictionary_, v3);
}

id IMActionOpenWeb.init(dictionary:)(uint64_t a1)
{
  id v2 = v1;
  if (*(void *)(a1 + 16))
  {
    unint64_t v4 = sub_1A087AAA4(1701080941, 0xE400000000000000);
    if (v5)
    {
      sub_1A0785268(*(void *)(a1 + 56) + 32 * v4, (uint64_t)&v15);
      if (swift_dynamicCast())
      {
        if (*(void *)(a1 + 16))
        {
          unint64_t v6 = sub_1A087AAA4(7107189, 0xE300000000000000);
          if (v7)
          {
            sub_1A0785268(*(void *)(a1 + 56) + 32 * v6, (uint64_t)&v15);
            if (swift_dynamicCast())
            {
              if (*(void *)(a1 + 16)
                && (unint64_t v8 = sub_1A087AAA4(0x6574656D61726170, 0xEA00000000007372), (v9 & 1) != 0))
              {
                sub_1A0785268(*(void *)(a1 + 56) + 32 * v8, (uint64_t)&v15);
              }
              else
              {
                long long v15 = 0u;
                long long v16 = 0u;
              }
              swift_bridgeObjectRelease();
              if (!*((void *)&v16 + 1))
              {
                swift_bridgeObjectRelease();
                sub_1A0783C7C((uint64_t)&v15);
                goto LABEL_11;
              }
              if (swift_dynamicCast())
              {
                uint64_t v12 = (void *)sub_1A09F3DE8();
                swift_bridgeObjectRelease();
                uint64_t v13 = (void *)sub_1A09F3DE8();
                swift_bridgeObjectRelease();
                id v10 = objc_msgSend(v2, sel_initWithMode_url_parameters_, v14, v12, v13);

                return v10;
              }
            }
          }
        }
      }
    }
  }
  swift_bridgeObjectRelease();
LABEL_11:
  swift_getObjectType();
  swift_deallocPartialClassInstance();
  return 0;
}

unint64_t sub_1A09263A0()
{
  sub_1A07856F8(&qword_1E94F9368);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1A0A099E0;
  *(void *)(inited + 32) = 1701080941;
  *(void *)(inited + 40) = 0xE400000000000000;
  id v2 = objc_msgSend(v0, sel_mode);
  uint64_t v3 = MEMORY[0x1E4FBB550];
  *(void *)(inited + 48) = v2;
  *(void *)(inited + 72) = v3;
  *(void *)(inited + 80) = 7107189;
  *(void *)(inited + 88) = 0xE300000000000000;
  id v4 = [v0 url];
  uint64_t v5 = sub_1A09F3E18();
  uint64_t v7 = v6;

  uint64_t v8 = MEMORY[0x1E4FBB1A0];
  *(void *)(inited + 96) = v5;
  *(void *)(inited + 104) = v7;
  *(void *)(inited + 120) = v8;
  *(void *)(inited + 128) = 0x6574656D61726170;
  *(void *)(inited + 136) = 0xEA00000000007372;
  id v9 = objc_msgSend(v0, sel_parameters);
  uint64_t v10 = sub_1A09F3E18();
  uint64_t v12 = v11;

  *(void *)(inited + 168) = v8;
  *(void *)(inited + 144) = v10;
  *(void *)(inited + 152) = v12;
  return sub_1A08D7480(inited);
}

void __swiftcall IMActionOpenWeb.init()(IMActionOpenWeb *__return_ptr retstr)
{
  id v1 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());

  objc_msgSend(v1, sel_init);
}

void IMActionOpenWeb.init()()
{
}

unint64_t type metadata accessor for IMActionOpenWeb()
{
  unint64_t result = qword_1E94FC0E0;
  if (!qword_1E94FC0E0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1E94FC0E0);
  }
  return result;
}

uint64_t TypedFastEnumerator.next()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A09F3288();
  if (v9)
  {
    sub_1A07825B4(&v8, v10);
    sub_1A07825B4(v10, &v8);
    swift_dynamicCast();
    (*(void (**)(uint64_t, char *, uint64_t))(v4 + 16))(a2, v6, v3);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v4 + 56))(a2, 0, 1, v3);
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  else
  {
    sub_1A0783C7C((uint64_t)&v8);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 56))(a2, 1, 1, v3);
  }
}

uint64_t TypedFastEnumeratorSequence.makeIterator()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_1A09F3298();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_unknownObjectRetain();
  sub_1A09F32A8();
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v3 + 32))(a1, v5, v2);
}

uint64_t sub_1A09268C4@<X0>(uint64_t a1@<X8>)
{
  TypedFastEnumeratorSequence.makeIterator()(a1);

  return swift_unknownObjectRelease();
}

uint64_t sub_1A09268F0()
{
  return 0;
}

uint64_t sub_1A09268F8()
{
  return 2;
}

uint64_t sub_1A0926900()
{
  uint64_t v0 = sub_1A099DDD0();
  swift_unknownObjectRelease();
  return v0;
}

uint64_t sub_1A0926940()
{
  return sub_1A09F3F68();
}

uint64_t NSFastEnumeration.sequence<A>(of:)@<X0>(void *a1@<X8>)
{
  *a1 = v1;
  return swift_unknownObjectRetain();
}

uint64_t sub_1A0926970()
{
  return swift_getWitnessTable();
}

uint64_t sub_1A092698C()
{
  uint64_t result = sub_1A09F3298();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1A0926A18(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1A09F3298();
  uint64_t v5 = **(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);

  return v5(a1, a2, v4);
}

uint64_t sub_1A0926A84(uint64_t a1)
{
  uint64_t v2 = sub_1A09F3298();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(a1, v2);
}

uint64_t sub_1A0926AE8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1A09F3298();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t sub_1A0926B4C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1A09F3298();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t sub_1A0926BB0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1A09F3298();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t sub_1A0926C14(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1A09F3298();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t sub_1A0926C78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1A0926C8C);
}

uint64_t sub_1A0926C8C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1A09F3298();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_1A0926CF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1A0926D0C);
}

uint64_t sub_1A0926D0C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1A09F3298();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for TypedFastEnumerator()
{
  return sub_1A0780100();
}

uint64_t type metadata accessor for TypedFastEnumeratorSequence()
{
  return sub_1A0780100();
}

void __swiftcall IMPersistentMenuItem.init(dictionary:)(IMPersistentMenuItem_optional *__return_ptr retstr, Swift::OpaquePointer dictionary)
{
  id v2 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  uint64_t v3 = (void *)sub_1A09F3CE8();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_initWithDictionary_, v3);
}

id IMPersistentMenuItem.init(dictionary:)(uint64_t a1)
{
  id v2 = v1;
  if (*(void *)(a1 + 16)
    && (unint64_t v4 = sub_1A087AAA4(1701869940, 0xE400000000000000), (v5 & 1) != 0)
    && (sub_1A0785268(*(void *)(a1 + 56) + 32 * v4, (uint64_t)&v14), (swift_dynamicCast() & 1) != 0))
  {
    if (*(void *)(a1 + 16) && (unint64_t v6 = sub_1A087AAA4(0x746E65746E6F63, 0xE700000000000000), (v7 & 1) != 0))
    {
      sub_1A0785268(*(void *)(a1 + 56) + 32 * v6, (uint64_t)&v14);
    }
    else
    {
      long long v14 = 0u;
      long long v15 = 0u;
    }
    swift_bridgeObjectRelease();
    if (*((void *)&v15 + 1))
    {
      sub_1A07856F8(&qword_1E94FDD10);
      if (swift_dynamicCast())
      {
        uint64_t v10 = self;
        uint64_t v11 = (void *)sub_1A09F3CE8();
        swift_bridgeObjectRelease();
        id v12 = objc_msgSend(v10, sel_contentWithType_dictionary_, v13, v11);

        id v8 = objc_msgSend(v2, sel_initWithType_content_, v13, v12);
        swift_unknownObjectRelease();
        return v8;
      }
    }
    else
    {
      sub_1A0783C7C((uint64_t)&v14);
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  swift_getObjectType();
  swift_deallocPartialClassInstance();
  return 0;
}

uint64_t sub_1A09270FC()
{
  sub_1A07856F8(&qword_1E94F97B8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1A0A081A0;
  *(void *)(inited + 32) = 1701869940;
  *(void *)(inited + 40) = 0xE400000000000000;
  id v2 = objc_msgSend(v0, sel_type);
  uint64_t v3 = MEMORY[0x1E4FBB550];
  *(void *)(inited + 48) = v2;
  *(void *)(inited + 72) = v3;
  *(void *)(inited + 80) = 0x746E65746E6F63;
  *(void *)(inited + 88) = 0xE700000000000000;
  id v4 = objc_msgSend(v0, sel_content);
  uint64_t v5 = (uint64_t)v4;
  if (v4)
  {
    id v6 = objc_msgSend(v4, sel_dictionaryRepresentation);
    swift_unknownObjectRelease();
    uint64_t v5 = sub_1A09F3D08();

    id v4 = (id)sub_1A07856F8(&qword_1E94FDD10);
  }
  else
  {
    *(void *)(inited + 104) = 0;
    *(void *)(inited + 112) = 0;
  }
  *(void *)(inited + 96) = v5;
  *(void *)(inited + 120) = v4;
  unint64_t v7 = sub_1A08D76DC(inited);
  uint64_t v8 = sub_1A09BE198(v7);
  swift_bridgeObjectRelease();
  return v8;
}

void __swiftcall IMPersistentMenuItem.init()(IMPersistentMenuItem *__return_ptr retstr)
{
  id v1 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());

  objc_msgSend(v1, sel_init);
}

void IMPersistentMenuItem.init()()
{
}

unint64_t type metadata accessor for IMPersistentMenuItem()
{
  unint64_t result = qword_1E94FC0F8;
  if (!qword_1E94FC0F8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1E94FC0F8);
  }
  return result;
}

id sub_1A0927414(uint64_t a1)
{
  if (a1 == 1)
  {
    id v1 = IMPersistentMenu;
  }
  else
  {
    if (a1) {
      return 0;
    }
    id v1 = IMChip;
  }
  id v2 = objc_allocWithZone((Class)v1);
  swift_bridgeObjectRetain();
  uint64_t v3 = (void *)sub_1A09F3CE8();
  swift_bridgeObjectRelease();
  id v4 = objc_msgSend(v2, sel_initWithDictionary_, v3);

  return v4;
}

id sub_1A09274C0()
{
  id result = objc_msgSend(self, sel_sharedInstance, *(_OWORD *)v0, *(void *)(v0 + 16), *(void *)(v0 + 24), *(_OWORD *)(v0 + 32));
  if (result)
  {
    id v2 = result;
    unsigned int v3 = objc_msgSend(result, sel_isInternalInstall);

    if (v3)
    {
      if (*(unsigned char *)v0) {
        unint64_t v4 = 0xD000000000000013;
      }
      else {
        unint64_t v4 = 0xD000000000000012;
      }
      if (*(unsigned char *)v0) {
        unint64_t v5 = 0x80000001A0A30C80;
      }
      else {
        unint64_t v5 = 0x80000001A0A30C60;
      }
      (*(void (**)(uint64_t *__return_ptr, unint64_t, unint64_t, void, void, char *))(v0 + 32))(&v7, v4, v5, *(void *)(v0 + 8), *(void *)(v0 + 16), (char *)&v6 + 9);
      swift_bridgeObjectRelease();
      return (id)v7;
    }
    else
    {
      return (id)(*(unsigned char *)(v0 + 24) & 1);
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_1A09275B4(void *a1)
{
  id v1 = a1;
  if (objc_msgSend(v1, sel___im_isSipHandle))
  {
    id v2 = objc_msgSend(v1, sel_substringFromIndex_, sub_1A09F3E98());
    sub_1A09F3E18();

    id v1 = v2;
  }
  else
  {
    sub_1A09F3E18();
  }

  unsigned int v3 = (void *)sub_1A09F3DE8();
  swift_bridgeObjectRelease();

  return v3;
}

uint64_t sub_1A0927678()
{
  uint64_t v0 = sub_1A07856F8(&qword_1E94F9C28);
  MEMORY[0x1F4188790](v0 - 8);
  id v2 = (char *)&v19 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1A09F39B8();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x1F4188790](v5);
  uint64_t v10 = (char *)&v19 - v9;
  MEMORY[0x1F4188790](v8);
  id v12 = (char *)&v19 - v11;
  sub_1A09F3E18();
  sub_1A09F3938();
  sub_1A09F38E8();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1)
  {
    sub_1A0784C08((uint64_t)v2, &qword_1E94F9C28);
    return -1;
  }
  (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v12, v2, v3);
  sub_1A09F3978();
  char v14 = sub_1A09F39A8();
  long long v15 = *(void (**)(char *, uint64_t))(v4 + 8);
  v15(v10, v3);
  if (v14)
  {
    v15(v12, v3);
    return 0;
  }
  sub_1A09F3998();
  char v16 = sub_1A09F39A8();
  v15(v10, v3);
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v7, v12, v3);
  if (v16)
  {
    v15(v7, v3);
LABEL_8:
    v15(v12, v3);
    return 1;
  }
  sub_1A09F3988();
  char v17 = sub_1A09F39A8();
  v15(v10, v3);
  v15(v7, v3);
  if (v17) {
    goto LABEL_8;
  }
  sub_1A09F3958();
  char v18 = sub_1A09F39A8();
  v15(v10, v3);
  v15(v12, v3);
  if (v18) {
    return 2;
  }
  else {
    return -1;
  }
}

uint64_t sub_1A09279A4(void *a1)
{
  id v1 = a1;
  uint64_t v2 = sub_1A0927678();

  return v2;
}

uint64_t sub_1A09279D8()
{
  id v1 = v0;
  sub_1A09F3E28();
  unint64_t v2 = sub_1A07857EC();
  uint64_t v3 = (void *)MEMORY[0x1A6226740](46, 0xE100000000000000, 0x7FFFFFFFFFFFFFFFLL, 1, MEMORY[0x1E4FBB1A0], v2);
  swift_bridgeObjectRelease();
  if (!v3[2]) {
    goto LABEL_12;
  }
  uint64_t v4 = v3[4];
  uint64_t v5 = v3[5];
  uint64_t v6 = v3[6];
  uint64_t v7 = v3[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  MEMORY[0x1A6226030](v4, v5, v6, v7);
  swift_bridgeObjectRelease();
  uint64_t v8 = (void *)MEMORY[0x1A6226740](95, 0xE100000000000000, 0x7FFFFFFFFFFFFFFFLL, 1, MEMORY[0x1E4FBB1A0], v2);
  swift_bridgeObjectRelease();
  if (v8[2] < 2uLL) {
    goto LABEL_12;
  }
  uint64_t v9 = v8[8];
  uint64_t v10 = v8[9];
  if ((v10 ^ (unint64_t)v9) < 0x4000) {
    goto LABEL_12;
  }
  unint64_t v12 = v8[10];
  unint64_t v11 = v8[11];
  uint64_t result = sub_1A092859C(v8[8], v8[9], v12, v11, 10);
  if ((v14 & 0x100) == 0)
  {
    if ((v14 & 1) == 0)
    {
      long long v15 = (unsigned __int8 *)result;
      goto LABEL_8;
    }
LABEL_12:
    swift_bridgeObjectRelease();
    return 0;
  }
  swift_bridgeObjectRetain();
  long long v15 = sub_1A0927D40(v9, v10, v12, v11, 10);
  char v17 = v16;
  uint64_t result = swift_bridgeObjectRelease();
  if (v17) {
    goto LABEL_12;
  }
LABEL_8:
  if (!v8[2])
  {
LABEL_27:
    __break(1u);
    return result;
  }
  uint64_t v18 = v8[4];
  uint64_t v19 = v8[5];
  uint64_t v20 = v8[6];
  uint64_t v21 = v8[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v22 = MEMORY[0x1A6226030](v18, v19, v20, v21);
  uint64_t v24 = v23;
  swift_bridgeObjectRelease();
  if (v22 == 0x616964656DLL && v24 == 0xE500000000000000 || (sub_1A09F4B28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    uint64_t result = (uint64_t)(v15 + 100);
    if (!__OFADD__(v15, 100)) {
      return result;
    }
    __break(1u);
  }
  if (v22 == 0x69616E626D756874 && v24 == 0xE90000000000006CLL)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v25 = sub_1A09F4B28();
    swift_bridgeObjectRelease();
    if ((v25 & 1) == 0) {
      goto LABEL_24;
    }
  }
  uint64_t result = (uint64_t)(v15 + 200);
  if (!__OFADD__(v15, 200)) {
    return result;
  }
  __break(1u);
LABEL_24:
  uint64_t result = (uint64_t)(v15 + 300);
  if (__OFADD__(v15, 300))
  {
    __break(1u);
    goto LABEL_27;
  }
  return result;
}

uint64_t sub_1A0927C90(void *a1)
{
  id v1 = a1;
  uint64_t v2 = sub_1A09279D8();

  return v2;
}

uint64_t sub_1A0927CC4(unint64_t a1, uint64_t a2, uint64_t a3)
{
  char v3 = a1;
  uint64_t v4 = (unsigned __int16)a1 >> 14;
  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    uint64_t v10 = sub_1A09F3F08();
    uint64_t v11 = v10 + (v4 << 16);
    unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    unint64_t v13 = v11 & 0xFFFFFFFFFFFF0000;
    if (!v4) {
      unint64_t v13 = v12;
    }
    return v13 | 4;
  }
  else
  {
    uint64_t v5 = MEMORY[0x1A62260A0](15, a1 >> 16);
    uint64_t v6 = v5 + (v4 << 16);
    unint64_t v7 = v5 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    unint64_t v8 = v6 & 0xFFFFFFFFFFFF0000;
    if (!v4) {
      unint64_t v8 = v7;
    }
    return v8 | 8;
  }
}

unsigned __int8 *sub_1A0927D40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v15 = a1;
  uint64_t v16 = a2;
  uint64_t v17 = a3;
  uint64_t v18 = a4;
  sub_1A0928670();
  swift_bridgeObjectRetain();
  uint64_t v7 = sub_1A09F3F28();
  unint64_t v8 = v6;
  if ((v6 & 0x1000000000000000) == 0)
  {
    if ((v6 & 0x2000000000000000) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v10 = HIBYTE(v8) & 0xF;
    uint64_t v15 = v7;
    uint64_t v16 = v8 & 0xFFFFFFFFFFFFFFLL;
    uint64_t v9 = (unsigned __int8 *)&v15;
    goto LABEL_7;
  }
  uint64_t v7 = sub_1A09280B0();
  unint64_t v12 = v11;
  swift_bridgeObjectRelease();
  unint64_t v8 = v12;
  if ((v12 & 0x2000000000000000) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v7 & 0x1000000000000000) != 0)
  {
    uint64_t v9 = (unsigned __int8 *)((v8 & 0xFFFFFFFFFFFFFFFLL) + 32);
    uint64_t v10 = v7 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    uint64_t v9 = (unsigned __int8 *)sub_1A09F4728();
  }
LABEL_7:
  unint64_t v13 = sub_1A0927E34(v9, v10, a5);
  swift_bridgeObjectRelease();
  return v13;
}

unsigned __int8 *sub_1A0927E34(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a2;
  int v4 = *result;
  if (v4 != 43)
  {
    if (v4 == 45)
    {
      if (a2 >= 1)
      {
        uint64_t v5 = a2 - 1;
        if (a2 != 1)
        {
          unsigned __int8 v6 = a3 + 48;
          unsigned __int8 v7 = a3 + 55;
          unsigned __int8 v8 = a3 + 87;
          if (a3 > 10)
          {
            unsigned __int8 v6 = 58;
          }
          else
          {
            unsigned __int8 v8 = 97;
            unsigned __int8 v7 = 65;
          }
          if (result)
          {
            uint64_t v9 = 0;
            for (int64_t i = result + 1; ; ++i)
            {
              unsigned int v11 = *i;
              if (v11 < 0x30 || v11 >= v6)
              {
                if (v11 < 0x41 || v11 >= v7)
                {
                  uint64_t v13 = 0;
                  if (v11 < 0x61 || v11 >= v8) {
                    return (unsigned __int8 *)v13;
                  }
                  char v12 = -87;
                }
                else
                {
                  char v12 = -55;
                }
              }
              else
              {
                char v12 = -48;
              }
              uint64_t v14 = v9 * a3;
              if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63) {
                return 0;
              }
              uint64_t v9 = v14 - (v11 + v12);
              if (__OFSUB__(v14, (v11 + v12))) {
                return 0;
              }
              if (!--v5) {
                return (unsigned __int8 *)v9;
              }
            }
          }
          return 0;
        }
        return 0;
      }
      __break(1u);
      goto LABEL_66;
    }
    if (a2)
    {
      unsigned __int8 v23 = a3 + 48;
      unsigned __int8 v24 = a3 + 55;
      unsigned __int8 v25 = a3 + 87;
      if (a3 > 10)
      {
        unsigned __int8 v23 = 58;
      }
      else
      {
        unsigned __int8 v25 = 97;
        unsigned __int8 v24 = 65;
      }
      if (result)
      {
        uint64_t v26 = 0;
        do
        {
          unsigned int v27 = *result;
          if (v27 < 0x30 || v27 >= v23)
          {
            if (v27 < 0x41 || v27 >= v24)
            {
              uint64_t v13 = 0;
              if (v27 < 0x61 || v27 >= v25) {
                return (unsigned __int8 *)v13;
              }
              char v28 = -87;
            }
            else
            {
              char v28 = -55;
            }
          }
          else
          {
            char v28 = -48;
          }
          uint64_t v29 = v26 * a3;
          if ((unsigned __int128)(v26 * (__int128)a3) >> 64 != (v26 * a3) >> 63) {
            return 0;
          }
          uint64_t v26 = v29 + (v27 + v28);
          if (__OFADD__(v29, (v27 + v28))) {
            return 0;
          }
          ++result;
          --v3;
        }
        while (v3);
        return (unsigned __int8 *)(v29 + (v27 + v28));
      }
      return 0;
    }
    return 0;
  }
  if (a2 < 1)
  {
LABEL_66:
    __break(1u);
    return result;
  }
  uint64_t v15 = a2 - 1;
  if (a2 == 1) {
    return 0;
  }
  unsigned __int8 v16 = a3 + 48;
  unsigned __int8 v17 = a3 + 55;
  unsigned __int8 v18 = a3 + 87;
  if (a3 > 10)
  {
    unsigned __int8 v16 = 58;
  }
  else
  {
    unsigned __int8 v18 = 97;
    unsigned __int8 v17 = 65;
  }
  if (!result) {
    return 0;
  }
  uint64_t v9 = 0;
  uint64_t v19 = result + 1;
  do
  {
    unsigned int v20 = *v19;
    if (v20 < 0x30 || v20 >= v16)
    {
      if (v20 < 0x41 || v20 >= v17)
      {
        uint64_t v13 = 0;
        if (v20 < 0x61 || v20 >= v18) {
          return (unsigned __int8 *)v13;
        }
        char v21 = -87;
      }
      else
      {
        char v21 = -55;
      }
    }
    else
    {
      char v21 = -48;
    }
    uint64_t v22 = v9 * a3;
    if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63) {
      return 0;
    }
    uint64_t v9 = v22 + (v20 + v21);
    if (__OFADD__(v22, (v20 + v21))) {
      return 0;
    }
    ++v19;
    --v15;
  }
  while (v15);
  return (unsigned __int8 *)v9;
}

uint64_t sub_1A09280B0()
{
  unint64_t v0 = sub_1A09F3F38();
  uint64_t v4 = sub_1A0928130(v0, v1, v2, v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_1A0928130(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  if ((a4 & 0x1000000000000000) != 0)
  {
    unint64_t v9 = sub_1A0928288(a1, a2, a3, a4);
    if (v9)
    {
      uint64_t v10 = v9;
      unsigned int v11 = sub_1A0785690(v9, 0);
      unint64_t v12 = sub_1A0928388((unint64_t)v14, (uint64_t)(v11 + 4), v10, a1, a2, a3, a4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      if (v12 != v10)
      {
        __break(1u);
LABEL_11:
        sub_1A09F4728();
LABEL_4:
        JUMPOUT(0x1A6226040);
      }
    }
    else
    {
      unsigned int v11 = (void *)MEMORY[0x1E4FBC860];
    }
    uint64_t v13 = MEMORY[0x1A6226040](v11 + 4, v11[2]);
    swift_release();
    return v13;
  }
  else
  {
    if ((a4 & 0x2000000000000000) == 0)
    {
      if ((a3 & 0x1000000000000000) != 0) {
        goto LABEL_4;
      }
      goto LABEL_11;
    }
    v14[0] = a3;
    v14[1] = a4 & 0xFFFFFFFFFFFFFFLL;
    return MEMORY[0x1A6226040]((char *)v14 + (a1 >> 16), (a2 >> 16) - (a1 >> 16));
  }
}

unint64_t sub_1A0928288(unint64_t result, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v7 = result;
  uint64_t v8 = (a3 >> 59) & 1;
  if ((a4 & 0x1000000000000000) == 0) {
    LOBYTE(v8) = 1;
  }
  uint64_t v9 = 4 << v8;
  if ((result & 0xC) == 4 << v8)
  {
    uint64_t result = sub_1A0927CC4(result, a3, a4);
    unint64_t v7 = result;
  }
  if ((a2 & 0xC) == v9)
  {
    uint64_t result = sub_1A0927CC4(a2, a3, a4);
    a2 = result;
    if ((a4 & 0x1000000000000000) == 0) {
      return (a2 >> 16) - (v7 >> 16);
    }
  }
  else if ((a4 & 0x1000000000000000) == 0)
  {
    return (a2 >> 16) - (v7 >> 16);
  }
  unint64_t v10 = HIBYTE(a4) & 0xF;
  if ((a4 & 0x2000000000000000) == 0) {
    unint64_t v10 = a3 & 0xFFFFFFFFFFFFLL;
  }
  if (v10 < v7 >> 16)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v10 < a2 >> 16)
  {
LABEL_17:
    __break(1u);
    return result;
  }

  return sub_1A09F3EE8();
}

unint64_t sub_1A0928388(unint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6, unint64_t a7)
{
  uint64_t v9 = (void *)result;
  if (!a2) {
    goto LABEL_5;
  }
  if (!a3)
  {
    unint64_t v12 = a4;
    uint64_t v11 = 0;
    goto LABEL_33;
  }
  if (a3 < 0) {
    goto LABEL_36;
  }
  unint64_t v10 = a5 >> 14;
  unint64_t v27 = a4 >> 14;
  if (a4 >> 14 == a5 >> 14)
  {
LABEL_5:
    uint64_t v11 = 0;
    unint64_t v12 = a4;
LABEL_33:
    *uint64_t v9 = a4;
    v9[1] = a5;
    void v9[2] = a6;
    v9[3] = a7;
    v9[4] = v12;
    return v11;
  }
  uint64_t v11 = 0;
  uint64_t v14 = (a6 >> 59) & 1;
  if ((a7 & 0x1000000000000000) == 0) {
    LOBYTE(v14) = 1;
  }
  uint64_t v15 = 4 << v14;
  uint64_t v21 = (a7 & 0xFFFFFFFFFFFFFFFLL) + 32;
  uint64_t v22 = a7 & 0xFFFFFFFFFFFFFFLL;
  uint64_t v16 = HIBYTE(a7) & 0xF;
  if ((a7 & 0x2000000000000000) == 0) {
    uint64_t v16 = a6 & 0xFFFFFFFFFFFFLL;
  }
  unint64_t v23 = v16;
  uint64_t v26 = a3 - 1;
  unint64_t v12 = a4;
  while (1)
  {
    unint64_t v17 = v12 & 0xC;
    uint64_t result = v12;
    if (v17 == v15) {
      uint64_t result = sub_1A0927CC4(v12, a6, a7);
    }
    if (result >> 14 < v27 || result >> 14 >= v10) {
      break;
    }
    if ((a7 & 0x1000000000000000) != 0)
    {
      uint64_t result = sub_1A09F3EF8();
      char v19 = result;
      if (v17 != v15) {
        goto LABEL_23;
      }
    }
    else
    {
      unint64_t v18 = result >> 16;
      if ((a7 & 0x2000000000000000) != 0)
      {
        v28[0] = a6;
        v28[1] = v22;
        char v19 = *((unsigned char *)v28 + v18);
        if (v17 != v15) {
          goto LABEL_23;
        }
      }
      else
      {
        uint64_t result = v21;
        if ((a6 & 0x1000000000000000) == 0) {
          uint64_t result = sub_1A09F4728();
        }
        char v19 = *(unsigned char *)(result + v18);
        if (v17 != v15)
        {
LABEL_23:
          if ((a7 & 0x1000000000000000) == 0) {
            goto LABEL_24;
          }
          goto LABEL_27;
        }
      }
    }
    uint64_t result = sub_1A0927CC4(v12, a6, a7);
    unint64_t v12 = result;
    if ((a7 & 0x1000000000000000) == 0)
    {
LABEL_24:
      unint64_t v12 = (v12 & 0xFFFFFFFFFFFF0000) + 65540;
      goto LABEL_29;
    }
LABEL_27:
    if (v23 <= v12 >> 16) {
      goto LABEL_35;
    }
    unint64_t v12 = sub_1A09F3EC8();
LABEL_29:
    *(unsigned char *)(a2 + v11) = v19;
    if (v26 == v11)
    {
      uint64_t v11 = a3;
      goto LABEL_33;
    }
    ++v11;
    if (v10 == v12 >> 14) {
      goto LABEL_33;
    }
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_1A092859C(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4, uint64_t a5)
{
  if ((a4 & 0x1000000000000000) != 0)
  {
    uint64_t result = 0;
    goto LABEL_8;
  }
  if ((a4 & 0x2000000000000000) != 0)
  {
    v14[0] = a3;
    v14[1] = a4 & 0xFFFFFFFFFFFFFFLL;
    uint64_t v11 = v14;
  }
  else if ((a3 & 0x1000000000000000) != 0)
  {
    uint64_t v11 = (void *)((a4 & 0xFFFFFFFFFFFFFFFLL) + 32);
  }
  else
  {
    uint64_t v11 = (void *)sub_1A09F4728();
  }
  uint64_t result = sub_1A09286C4((uint64_t)v11, a1, a2, a3, a4, a5);
  if (!v5)
  {
    char v15 = v13 & 1;
LABEL_8:
    LOBYTE(v14[0]) = (a4 & 0x1000000000000000) != 0;
  }
  return result;
}

unint64_t sub_1A0928670()
{
  unint64_t result = qword_1E94FC100;
  if (!qword_1E94FC100)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FC100);
  }
  return result;
}

uint64_t sub_1A09286C4(uint64_t result, unint64_t a2, unint64_t a3, unint64_t a4, unint64_t a5, uint64_t a6)
{
  unint64_t v10 = a2;
  uint64_t v11 = result;
  uint64_t v12 = (a4 >> 59) & 1;
  if ((a5 & 0x1000000000000000) == 0) {
    LOBYTE(v12) = 1;
  }
  uint64_t v13 = 4 << v12;
  unint64_t v14 = a2 & 0xC;
  if (v14 == 4 << v12)
  {
    unint64_t result = sub_1A0927CC4(a2, a4, a5);
    a2 = result;
    if ((a5 & 0x1000000000000000) == 0)
    {
LABEL_5:
      int64_t v15 = a2 >> 16;
      if (v14 != v13) {
        goto LABEL_6;
      }
      goto LABEL_14;
    }
  }
  else if ((a5 & 0x1000000000000000) == 0)
  {
    goto LABEL_5;
  }
  unint64_t v16 = a4 & 0xFFFFFFFFFFFFLL;
  if ((a5 & 0x2000000000000000) != 0) {
    unint64_t v16 = HIBYTE(a5) & 0xF;
  }
  if (v16 < a2 >> 16) {
    goto LABEL_95;
  }
  unint64_t result = sub_1A09F3EE8();
  int64_t v15 = result;
  if (v14 == v13)
  {
LABEL_14:
    unint64_t result = sub_1A0927CC4(v10, a4, a5);
    unint64_t v10 = result;
  }
LABEL_6:
  if ((a3 & 0xC) == v13)
  {
    unint64_t result = sub_1A0927CC4(a3, a4, a5);
    a3 = result;
    if ((a5 & 0x1000000000000000) == 0) {
      goto LABEL_8;
    }
  }
  else if ((a5 & 0x1000000000000000) == 0)
  {
LABEL_8:
    unint64_t result = (a3 >> 16) - (v10 >> 16);
    goto LABEL_21;
  }
  unint64_t v17 = HIBYTE(a5) & 0xF;
  if ((a5 & 0x2000000000000000) == 0) {
    unint64_t v17 = a4 & 0xFFFFFFFFFFFFLL;
  }
  if (v17 < v10 >> 16) {
    goto LABEL_91;
  }
  if (v17 < a3 >> 16)
  {
LABEL_92:
    __break(1u);
    goto LABEL_93;
  }
  unint64_t result = sub_1A09F3EE8();
LABEL_21:
  int64_t v18 = v15 + result;
  if (__OFADD__(v15, result))
  {
    __break(1u);
    goto LABEL_90;
  }
  if (v18 < v15)
  {
LABEL_90:
    __break(1u);
LABEL_91:
    __break(1u);
    goto LABEL_92;
  }
  char v19 = (unsigned __int8 *)(v11 + v15);
  if (!v11) {
    char v19 = 0;
  }
  int v20 = *v19;
  if (v20 == 43)
  {
    if (result >= 1)
    {
      if (result != 1)
      {
        unsigned __int8 v31 = a6 + 48;
        unsigned __int8 v32 = a6 + 55;
        unsigned __int8 v33 = a6 + 87;
        if (a6 > 10)
        {
          unsigned __int8 v31 = 58;
        }
        else
        {
          unsigned __int8 v33 = 97;
          unsigned __int8 v32 = 65;
        }
        if (v19)
        {
          uint64_t v24 = 0;
          uint64_t v34 = v19 + 1;
          uint64_t v35 = result - 1;
          do
          {
            unsigned int v36 = *v34;
            if (v36 < 0x30 || v36 >= v31)
            {
              if (v36 < 0x41 || v36 >= v32)
              {
                uint64_t v29 = 0;
                if (v36 < 0x61 || v36 >= v33) {
                  return v29;
                }
                char v37 = -87;
              }
              else
              {
                char v37 = -55;
              }
            }
            else
            {
              char v37 = -48;
            }
            uint64_t v38 = v24 * a6;
            if ((unsigned __int128)(v24 * (__int128)a6) >> 64 != (v24 * a6) >> 63) {
              return 0;
            }
            uint64_t v24 = v38 + (v36 + v37);
            if (__OFADD__(v38, (v36 + v37))) {
              return 0;
            }
            ++v34;
            --v35;
          }
          while (v35);
          return v24;
        }
        return 0;
      }
      return 0;
    }
    goto LABEL_94;
  }
  if (v20 != 45)
  {
    if (v18 != v15)
    {
      unsigned __int8 v39 = a6 + 48;
      unsigned __int8 v40 = a6 + 55;
      unsigned __int8 v41 = a6 + 87;
      if (a6 > 10)
      {
        unsigned __int8 v39 = 58;
      }
      else
      {
        unsigned __int8 v41 = 97;
        unsigned __int8 v40 = 65;
      }
      if (v19)
      {
        uint64_t v42 = 0;
        do
        {
          unsigned int v43 = *v19;
          if (v43 < 0x30 || v43 >= v39)
          {
            if (v43 < 0x41 || v43 >= v40)
            {
              uint64_t v29 = 0;
              if (v43 < 0x61 || v43 >= v41) {
                return v29;
              }
              char v44 = -87;
            }
            else
            {
              char v44 = -55;
            }
          }
          else
          {
            char v44 = -48;
          }
          uint64_t v45 = v42 * a6;
          if ((unsigned __int128)(v42 * (__int128)a6) >> 64 != (v42 * a6) >> 63) {
            return 0;
          }
          uint64_t v42 = v45 + (v43 + v44);
          if (__OFADD__(v45, (v43 + v44))) {
            return 0;
          }
          ++v19;
          --result;
        }
        while (result);
        return v45 + (v43 + v44);
      }
      return 0;
    }
    return 0;
  }
  if (result >= 1)
  {
    if (result != 1)
    {
      unsigned __int8 v21 = a6 + 48;
      unsigned __int8 v22 = a6 + 55;
      unsigned __int8 v23 = a6 + 87;
      if (a6 > 10)
      {
        unsigned __int8 v21 = 58;
      }
      else
      {
        unsigned __int8 v23 = 97;
        unsigned __int8 v22 = 65;
      }
      if (v19)
      {
        uint64_t v24 = 0;
        unsigned __int8 v25 = v19 + 1;
        uint64_t v26 = result - 1;
        while (1)
        {
          unsigned int v27 = *v25;
          if (v27 < 0x30 || v27 >= v21)
          {
            if (v27 < 0x41 || v27 >= v22)
            {
              uint64_t v29 = 0;
              if (v27 < 0x61 || v27 >= v23) {
                return v29;
              }
              char v28 = -87;
            }
            else
            {
              char v28 = -55;
            }
          }
          else
          {
            char v28 = -48;
          }
          uint64_t v30 = v24 * a6;
          if ((unsigned __int128)(v24 * (__int128)a6) >> 64 != (v24 * a6) >> 63) {
            return 0;
          }
          uint64_t v24 = v30 - (v27 + v28);
          if (__OFSUB__(v30, (v27 + v28))) {
            return 0;
          }
          ++v25;
          if (!--v26) {
            return v24;
          }
        }
      }
      return 0;
    }
    return 0;
  }
LABEL_93:
  __break(1u);
LABEL_94:
  __break(1u);
LABEL_95:
  __break(1u);
  return result;
}

id sub_1A0928AEC()
{
  id result = objc_msgSend(objc_allocWithZone((Class)IMRemoteIntentFileDownloadObserver), sel_init);
  qword_1E94FC108 = (uint64_t)result;
  return result;
}

id sub_1A0928B7C()
{
  uint64_t v1 = sub_1A07856F8(&qword_1EB4A5650);
  MEMORY[0x1F4188790](v1 - 8);
  unsigned __int8 v40 = (char *)&v32 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = sub_1A078231C(0, (unint64_t *)&qword_1EB4A5CC0);
  uint64_t v3 = sub_1A09F3A48();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  unsigned __int8 v6 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E4FBCB40], v3);
  unsigned __int8 v39 = v0;
  uint64_t v37 = sub_1A09F4438();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  uint64_t v7 = sub_1A09F3A68();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v41 = v7;
  uint64_t v42 = v8;
  uint64_t v9 = *(void *)(v8 + 64);
  MEMORY[0x1F4188790](v7);
  unint64_t v35 = (v9 + 15) & 0xFFFFFFFFFFFFFFF0;
  unint64_t v10 = (char *)&v32 - v35;
  unsigned __int8 v33 = (char *)&v32 - v35;
  sub_1A09F3A58();
  uint64_t v11 = sub_1A09F43C8();
  uint64_t v36 = *(void *)(v11 - 8);
  uint64_t v12 = *(void *)(v36 + 64);
  MEMORY[0x1F4188790](v11);
  uint64_t v44 = MEMORY[0x1E4FBC860];
  sub_1A09297A4();
  sub_1A07856F8(&qword_1EB4A5C20);
  sub_1A09297F0();
  uint64_t v34 = v11;
  sub_1A09F45B8();
  uint64_t v13 = sub_1A09F43D8();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(void *)(v14 + 64);
  MEMORY[0x1F4188790](v13);
  unint64_t v32 = (v15 + 15) & 0xFFFFFFFFFFFFFFF0;
  unint64_t v16 = (char *)&v32 - v32;
  (*(void (**)(char *, void, uint64_t))(v14 + 104))((char *)&v32 - v32, *MEMORY[0x1E4FBCC50], v13);
  sub_1A07856F8(&qword_1E94FC120);
  uint64_t v17 = swift_allocObject();
  MEMORY[0x1F4188790](v17);
  uint64_t v18 = (*(uint64_t (**)(char *, char *, uint64_t))(v42 + 16))((char *)&v32 - v35, v10, v41);
  MEMORY[0x1F4188790](v18);
  uint64_t v19 = v36;
  int v20 = (char *)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = v34;
  uint64_t v22 = (*(uint64_t (**)(char *, char *, uint64_t))(v36 + 16))(v20, v20, v34);
  MEMORY[0x1F4188790](v22);
  (*(void (**)(char *, char *, uint64_t))(v14 + 16))((char *)&v32 - v32, v16, v13);
  uint64_t v23 = sub_1A09F4428();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  (*(void (**)(char *, uint64_t))(v19 + 8))(v20, v21);
  (*(void (**)(char *, uint64_t))(v42 + 8))(v33, v41);
  uint64_t v24 = MEMORY[0x1E4FBC870];
  *(void *)(v17 + 16) = v23;
  *(void *)(v17 + 24) = v24;
  unsigned __int8 v25 = v39;
  *(void *)&v39[OBJC_IVAR___IMRemoteIntentFileDownloadObserver_stateQueue] = v17;

  v43.receiver = v25;
  v43.super_class = (Class)IMRemoteIntentFileDownloadObserver;
  id v26 = objc_msgSendSuper2(&v43, sel_init);
  uint64_t v27 = sub_1A09F41C8();
  uint64_t v28 = (uint64_t)v40;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v40, 1, 1, v27);
  uint64_t v29 = (void *)swift_allocObject();
  long long v29[2] = 0;
  v29[3] = 0;
  v29[4] = v26;
  id v30 = v26;
  sub_1A08BE6E4(v28, (uint64_t)&unk_1E94FC130, (uint64_t)v29);
  swift_release();
  return v30;
}

uint64_t sub_1A0929120(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 120) = a4;
  return MEMORY[0x1F4188298](sub_1A0929140, 0, 0);
}

uint64_t sub_1A0929140()
{
  if (qword_1E94F8658 != -1) {
    swift_once();
  }
  uint64_t v0 = qword_1E94FE320;
  return MEMORY[0x1F4188298](sub_1A09291D4, v0, 0);
}

uint64_t sub_1A09291D4()
{
  if (qword_1E94F8660 != -1) {
    swift_once();
  }
  return MEMORY[0x1F4188298](sub_1A0929264, 0, 0);
}

uint64_t sub_1A0929264()
{
  return MEMORY[0x1F4188298](sub_1A0929284, qword_1E94FE320, 0);
}

uint64_t sub_1A0929284()
{
  *(void *)(v0 + 128) = off_1E94FE328;
  return MEMORY[0x1F4188298](sub_1A09292AC, 0, 0);
}

uint64_t sub_1A09292AC()
{
  uint64_t v1 = qword_1E94FE320;
  id v2 = *(id *)(v0 + 120);
  return MEMORY[0x1F4188298](sub_1A0929320, v1, 0);
}

uint64_t sub_1A0929320(uint64_t a1)
{
  uint64_t v3 = (void *)v1[15];
  uint64_t v2 = v1[16];
  v1[5] = type metadata accessor for IMRemoteIntentFileDownloadObserver(a1);
  v1[6] = &off_1EF2C6170;
  v1[2] = v3;
  sub_1A0883D94((uint64_t)(v1 + 2), (uint64_t)(v1 + 7));
  swift_beginAccess();
  id v4 = v3;
  sub_1A0929938((uint64_t)(v1 + 7), v2 + 104);
  swift_endAccess();
  _s17IMSharedUtilities29RemoteIntentBroadcastEncodingVwxx_0((uint64_t)(v1 + 2));

  uint64_t v5 = (uint64_t (*)(void))v1[1];
  return v5();
}

Swift::Bool __swiftcall IMRemoteIntentFileDownloadObserver.isDownloadingTransferGUID(_:)(Swift::String a1)
{
  sub_1A09F4408();
  return v2;
}

uint64_t sub_1A092956C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_bridgeObjectRetain();
  sub_1A08EEA78(&v6, a2, a3);

  return swift_bridgeObjectRelease();
}

uint64_t sub_1A09295D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1A0929634(a1, a2, a3, a4, (uint64_t)&unk_1EF2C6218, (uint64_t)sub_1A0929A1C);
}

uint64_t sub_1A09295F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1A0929634(a1, a2, a3, a4, (uint64_t)&unk_1EF2C61F0, (uint64_t)sub_1A09299A0);
}

uint64_t sub_1A0929614(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1A0929634(a1, a2, a3, a4, (uint64_t)&unk_1EF2C61C8, (uint64_t)sub_1A09299A0);
}

uint64_t sub_1A0929634(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = a1;
  *(void *)(v9 + 24) = a2;
  swift_bridgeObjectRetain();
  sub_1A0870A58(a6, v9);

  return swift_release();
}

uint64_t sub_1A09296BC@<X0>(unsigned char *a1@<X8>)
{
  return sub_1A0929720(a1);
}

uint64_t type metadata accessor for IMRemoteIntentFileDownloadObserver(uint64_t a1)
{
  return sub_1A078231C(a1, &qword_1E94FC118);
}

uint64_t sub_1A09296E8@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_1A09BF138(*(void *)(v2 + 16), *(void *)(v2 + 24), *a1);
  *a2 = result & 1;
  return result;
}

uint64_t sub_1A0929720@<X0>(unsigned char *a1@<X8>)
{
  void (*v3)(uint64_t *__return_ptr, uint64_t);
  uint64_t v4;
  uint64_t result;
  uint64_t v6;

  uint64_t v3 = *(void (**)(uint64_t *__return_ptr, uint64_t))(v1 + 16);
  id v4 = *(void *)(v1 + 32) + 24;
  swift_beginAccess();
  v3(&v6, v4);
  uint64_t result = swift_endAccess();
  *a1 = v6;
  return result;
}

unint64_t sub_1A09297A4()
{
  unint64_t result = qword_1EB4A5C38[0];
  if (!qword_1EB4A5C38[0])
  {
    sub_1A09F43C8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1EB4A5C38);
  }
  return result;
}

unint64_t sub_1A09297F0()
{
  unint64_t result = qword_1EB4A5C28;
  if (!qword_1EB4A5C28)
  {
    sub_1A078D800(&qword_1EB4A5C20);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB4A5C28);
  }
  return result;
}

uint64_t sub_1A092984C()
{
  swift_unknownObjectRelease();

  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_1A092988C()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1A077EE58;
  v3[15] = v2;
  return MEMORY[0x1F4188298](sub_1A0929140, 0, 0);
}

uint64_t sub_1A0929938(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1A07856F8((uint64_t *)&unk_1E94FE3D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A09299A4()
{
  sub_1A09C2800(*(void *)(v0 + 16), *(void *)(v0 + 24));

  return swift_bridgeObjectRelease();
}

uint64_t sub_1A09299E4()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1A0929A1C(uint64_t a1)
{
  return sub_1A092956C(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

ValueMetadata *_s5StateVMa()
{
  return &_s5StateVN;
}

uint64_t sub_1A0929A3C(uint64_t result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  if (!v2) {
    return 0;
  }
  if (*(void *)(a2 + 32) == result) {
    return 1;
  }
  if (v2 == 1) {
    return 0;
  }
  for (uint64_t i = 5; ; ++i)
  {
    uint64_t v4 = i - 3;
    if (__OFADD__(i - 4, 1)) {
      break;
    }
    BOOL v6 = *(void *)(a2 + 8 * i) == result;
    BOOL v5 = v6;
    BOOL v6 = v6 || v4 == v2;
    if (v6) {
      return v5;
    }
  }
  __break(1u);
  return result;
}

uint64_t IMStickerTapback.transferGUID.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR___IMStickerTapback__transferGuid);
  swift_bridgeObjectRetain();
  return v1;
}

id IMStickerTapback.counterpart.getter()
{
  unsigned int v1 = objc_msgSend(v0, sel_isRemoved);
  uint64_t v2 = &selRef_visibleTapbackCounterpart;
  if (!v1) {
    uint64_t v2 = &selRef_removedTapbackCounterpart;
  }
  id v3 = [v0 *v2];

  return v3;
}

id IMStickerTapback.removedTapbackCounterpart.getter()
{
  if (objc_msgSend(v0, sel_isRemoved)) {
    return v0;
  }
  id v2 = objc_msgSend(v0, sel_transferGUID);
  sub_1A09F3E18();

  id v3 = objc_allocWithZone((Class)IMStickerTapback);
  uint64_t v4 = (void *)sub_1A09F3DE8();
  swift_bridgeObjectRelease();
  id v1 = objc_msgSend(v3, sel_initWithTransferGUID_isRemoved_, v4, 1);

  return v1;
}

id IMStickerTapback.visibleTapbackCounterpart.getter()
{
  if (!objc_msgSend(v0, sel_isRemoved)) {
    return v0;
  }
  id v1 = objc_msgSend(v0, sel_transferGUID);
  sub_1A09F3E18();

  id v2 = objc_allocWithZone((Class)IMStickerTapback);
  id v3 = (void *)sub_1A09F3DE8();
  swift_bridgeObjectRelease();
  id v4 = objc_msgSend(v2, sel_initWithTransferGUID_isRemoved_, v3, 0);

  return v4;
}

void __swiftcall IMStickerTapback.init(transferGUID:isRemoved:)(IMStickerTapback_optional *__return_ptr retstr, Swift::String transferGUID, Swift::Bool isRemoved)
{
  id v4 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  BOOL v5 = (void *)sub_1A09F3DE8();
  swift_bridgeObjectRelease();
  objc_msgSend(v4, sel_initWithTransferGUID_isRemoved_, v5, isRemoved);
}

id IMStickerTapback.init(transferGUID:isRemoved:)(uint64_t a1, uint64_t a2, char a3)
{
  id v4 = (void *)(v3 + OBJC_IVAR___IMStickerTapback__transferGuid);
  *id v4 = a1;
  v4[1] = a2;
  if (a3) {
    uint64_t v5 = 3007;
  }
  else {
    uint64_t v5 = 2007;
  }
  v7.super_class = (Class)IMStickerTapback;
  return objc_msgSendSuper2(&v7, sel_initWithAssociatedMessageType_, v5);
}

void __swiftcall IMStickerTapback.init(coder:)(IMStickerTapback_optional *__return_ptr retstr, NSCoder coder)
{
}

void IMStickerTapback.init(coder:)()
{
}

void __swiftcall IMStickerTapback.init(imRemoteObjectSerializedDictionary:)(IMStickerTapback_optional *__return_ptr retstr, Swift::OpaquePointer_optional imRemoteObjectSerializedDictionary)
{
  if (imRemoteObjectSerializedDictionary.value._rawValue)
  {
    id v2 = (void *)sub_1A09F3CE8();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v2 = 0;
  }
  objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithIMRemoteObjectSerializedDictionary_, v2);
}

void IMStickerTapback.init(imRemoteObjectSerializedDictionary:)()
{
}

IMTapbackSummaryActionStringFormat_optional __swiftcall IMStickerTapback.actionStringFormat(withAdaptiveImageGlyphAvailable:)(Swift::Bool withAdaptiveImageGlyphAvailable)
{
  id v3 = objc_msgSend(v1, sel_associatedMessageType);
  if (v3 == (id)3007)
  {
    id v7 = objc_allocWithZone((Class)IMTapbackSummaryActionStringFormat);
    if (withAdaptiveImageGlyphAvailable)
    {
LABEL_6:
      uint64_t v8 = (void *)sub_1A09F3DE8();
      uint64_t v9 = (objc_class *)objc_msgSend(v7, sel_initWithActionStringFormat_requiresReactionReplacment_, v8, 1);
LABEL_9:
      unint64_t v10 = v9;

      goto LABEL_10;
    }
LABEL_8:
    uint64_t v8 = (void *)sub_1A09F3DE8();
    uint64_t v9 = (objc_class *)objc_msgSend(v7, sel_initWithActionStringFormat_requiresReactionReplacment_, v8, 0);
    goto LABEL_9;
  }
  if (v3 == (id)2007)
  {
    id v7 = objc_allocWithZone((Class)IMTapbackSummaryActionStringFormat);
    if (withAdaptiveImageGlyphAvailable) {
      goto LABEL_6;
    }
    goto LABEL_8;
  }
  unint64_t v10 = 0;
LABEL_10:
  uint64_t v11 = v10;
  result.value._actionStringFormat = v5;
  result.value.super.isa = v11;
  result.is_nil = v6;
  result.value._requiresReactionReplacment = v4;
  return result;
}

id IMStickerTapback.reactionString(with:isCommSafetySensitiveProvider:)(void *a1, uint64_t (*a2)(uint64_t, uint64_t))
{
  id v5 = objc_msgSend(v2, sel_transferGUID);
  uint64_t v6 = sub_1A09F3E18();
  uint64_t v8 = v7;

  LOBYTE(v5) = a2(v6, v8);
  swift_bridgeObjectRelease();
  if (v5)
  {
    id v9 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
    id v10 = (id)sub_1A09F3DE8();
    id v11 = objc_msgSend(v9, sel_initWithString_, v10);
  }
  else
  {
    if (!a1) {
      return 0;
    }
    id v10 = a1;
    sub_1A08D7C94(MEMORY[0x1E4FBC860]);
    type metadata accessor for Key(0);
    sub_1A089BA50();
    uint64_t v12 = (void *)sub_1A09F3CE8();
    swift_bridgeObjectRelease();
    id v11 = objc_msgSend(self, sel_attributedStringWithAdaptiveImageGlyph_attributes_, v10, v12);
  }
  return v11;
}

uint64_t IMStickerTapback.adaptiveImageGlyphForPreviewString(adaptiveImageGlyphProvider:)(uint64_t (*a1)(uint64_t, uint64_t))
{
  id v3 = objc_msgSend(v1, sel_transferGUID);
  uint64_t v4 = sub_1A09F3E18();
  uint64_t v6 = v5;

  uint64_t v7 = a1(v4, v6);
  swift_bridgeObjectRelease();
  return v7;
}

BOOL static IMStickerTapback.isValidAssociatedMessageType(_:)(uint64_t a1)
{
  return qword_1EF2BDFD8 == a1 || unk_1EF2BDFE0 == a1;
}

uint64_t IMStickerTapback.isEqual(_:)(uint64_t a1)
{
  swift_getObjectType();
  sub_1A0875C10(a1, (uint64_t)v16);
  if (!v17)
  {
    sub_1A0783C7C((uint64_t)v16);
    goto LABEL_9;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_9:
    char v12 = 0;
    return v12 & 1;
  }
  id v3 = v15;
  v14.receiver = v1;
  v14.super_class = (Class)IMStickerTapback;
  if (!objc_msgSendSuper2(&v14, sel_isEqual_, v15))
  {

    goto LABEL_9;
  }
  id v4 = objc_msgSend(v1, sel_transferGUID);
  uint64_t v5 = sub_1A09F3E18();
  uint64_t v7 = v6;

  id v8 = objc_msgSend(v3, sel_transferGUID);
  uint64_t v9 = sub_1A09F3E18();
  uint64_t v11 = v10;

  if (v5 == v9 && v7 == v11) {
    char v12 = 1;
  }
  else {
    char v12 = sub_1A09F4B28();
  }
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  return v12 & 1;
}

id IMStickerTapback.init(associatedMessageType:)(uint64_t a1)
{
  id v2 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());

  return objc_msgSend(v2, sel_initWithAssociatedMessageType_, a1);
}

void IMStickerTapback.init(associatedMessageType:)()
{
}

unint64_t type metadata accessor for IMStickerTapback()
{
  unint64_t result = qword_1E94FC140;
  if (!qword_1E94FC140)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1E94FC140);
  }
  return result;
}

id sub_1A092AAF8(void *a1, id a2, uint64_t a3)
{
  id v5 = objc_msgSend(a2, sel_transferGUID);
  sub_1A09F3E18();

  uint64_t v6 = (void *)sub_1A09F3DE8();
  LODWORD(a3) = (*(uint64_t (**)(uint64_t, void *))(a3 + 16))(a3, v6);
  swift_bridgeObjectRelease();

  if (a3)
  {
    id v7 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
    id v8 = (id)sub_1A09F3DE8();
    id v9 = objc_msgSend(v7, sel_initWithString_, v8);
  }
  else
  {
    if (!a1) {
      return 0;
    }
    id v8 = a1;
    sub_1A08D7C94(MEMORY[0x1E4FBC860]);
    type metadata accessor for Key(0);
    sub_1A089BA50();
    uint64_t v10 = (void *)sub_1A09F3CE8();
    swift_bridgeObjectRelease();
    id v9 = objc_msgSend(self, sel_attributedStringWithAdaptiveImageGlyph_attributes_, v8, v10);
  }
  return v9;
}

ValueMetadata *sub_1A092AC68()
{
  return &type metadata for DaemonBroadcastEntity;
}

void sub_1A092AC78(void *a1)
{
  uint64_t v3 = *(unsigned __int8 *)(v1 + 32);
  id v4 = (void *)sub_1A09F3DE8();
  sub_1A0878700(v1 + 16, (uint64_t)v9);
  sub_1A0878700((uint64_t)v9, (uint64_t)v10);
  if (v10[1]) {
    id v5 = (void *)sub_1A09F3DE8();
  }
  else {
    id v5 = 0;
  }
  uint64_t v8 = *(void *)(v1 + 40);
  uint64_t v6 = swift_bridgeObjectRetain();
  sub_1A0874020(v6);
  sub_1A08787A8((uint64_t)&v8);
  id v7 = (void *)sub_1A09F4068();
  swift_bridgeObjectRelease();
  objc_msgSend(a1, sel_service_chat_style_messagesUpdated_, v4, v5, v3, v7);
}

uint64_t RemoteIntentBroadcast<>.routeInvocation(to:with:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 64))();
}

void sub_1A092AD70(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = *a1;
  RemoteIntentRequestBroadcasts.route(response:to:)((uint64_t)&v3, a3);
}

uint64_t RemoteIntentBroadcastEventRequest<>.route(response:auxiliaryOutput:to:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 32))();
}

void sub_1A092ADB4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

uint64_t dispatch thunk of static RemoteIntentBroadcastEntity.typeIdentifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of static RemoteIntentBroadcast.entityType.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of static RemoteIntentBroadcast.broadcastTypeIdentifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of RemoteIntentBroadcast.routeInvocation(to:with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 56))();
}

uint64_t dispatch thunk of RemoteIntentBroadcast.routeInvocation(to:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 64))();
}

uint64_t dispatch thunk of static RemoteIntentBroadcastEventRequest.notificationEntityTypeIdentifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of RemoteIntentBroadcastEventRequest.init()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of RemoteIntentBroadcastEventRequest.route(response:to:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 32))();
}

uint64_t dispatch thunk of RemoteIntentBroadcastEventRequest.route(response:auxiliaryOutput:to:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 40))();
}

uint64_t dispatch thunk of RemoteIntentFileBroadcast.mirroredFiles()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

void sub_1A092AE90(void *a1)
{
  id v2 = (id)sub_1A09F3DE8();
  objc_msgSend(a1, sel_databaseUpdated_, v2);
}

void sub_1A092AEEC(void *a1)
{
  swift_bridgeObjectRetain();
  id v2 = (void *)sub_1A09F3CE8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  uint64_t v3 = (void *)sub_1A09F3CE8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  id v4 = (id)sub_1A09F3CE8();
  swift_bridgeObjectRelease();
  objc_msgSend(a1, sel_updatePendingNicknameUpdates_handledNicknames_archivedNicknames_, v2, v3, v4);
}

id sub_1A092AFF4(void *a1)
{
  return objc_msgSend(a1, sel_lastFailedMessageDateChanged_, *v1);
}

void sub_1A092B004(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

void sub_1A092B010(void *a1)
{
}

void sub_1A092B04C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

void sub_1A092B058(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, SEL *a5)
{
  id v7 = (void *)sub_1A09F3DE8();
  swift_bridgeObjectRetain();
  id v8 = (id)sub_1A09F3CE8();
  swift_bridgeObjectRelease();
  objc_msgSend(a1, *a5, v7, v8);
}

void sub_1A092B0FC(void *a1)
{
}

void sub_1A092B148(void *a1)
{
}

void sub_1A092B18C(void *a1)
{
}

void sub_1A092B1D0(void *a1)
{
}

void sub_1A092B214(void *a1)
{
  uint64_t v3 = *(void *)(v1 + 24);
  id v4 = (void *)sub_1A09F3DE8();
  if (v3) {
    id v5 = (void *)sub_1A09F3DE8();
  }
  else {
    id v5 = 0;
  }
  uint64_t v6 = (void *)sub_1A09F3DE8();
  id v7 = (id)sub_1A09F3DE8();
  objc_msgSend(a1, sel_chat_chatPersonCentricID_displayNameUpdated_sender_, v4, v5, v6, v7);
}

void sub_1A092B2E8(void *a1)
{
  uint64_t v3 = *(void *)(v1 + 24);
  id v4 = (void *)sub_1A09F3DE8();
  if (v3) {
    id v5 = (void *)sub_1A09F3DE8();
  }
  else {
    id v5 = 0;
  }
  id v6 = (id)sub_1A09F3DE8();
  objc_msgSend(a1, sel_chat_chatPersonCentricID_displayNameUpdated_, v4, v5, v6);
}

id sub_1A092B39C(void *a1)
{
  return objc_msgSend(a1, sel_unreadCountChanged_, *v1);
}

void sub_1A092B3AC(void *a1)
{
  id v2 = (void *)sub_1A09F4298();
  id v3 = (id)sub_1A09F4298();
  objc_msgSend(a1, sel_updateNicknameHandlesForSharing_blocked_, v2, v3);
}

uint64_t sub_1A092B44C(uint64_t a1, uint64_t a2)
{
  id v3 = v2;
  uint64_t v6 = sub_1A09F33A8();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6);
  if (v8 == 1)
  {
    sub_1A092C590(a1);
    uint64_t v9 = sub_1A07856F8((uint64_t *)&unk_1EB4A5630);
    MEMORY[0x1F4188790](v9 - 8);
    uint64_t v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_1A09ED7A4(a2, (uint64_t)v11);
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a2, v6);
    return sub_1A092C590((uint64_t)v11);
  }
  else
  {
    MEMORY[0x1F4188790](v8);
    objc_super v14 = (char *)&v16 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 32))(v14, a1, v6);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v17 = *v3;
    *id v3 = 0x8000000000000000;
    sub_1A08D9C2C((uint64_t)v14, a2, isUniquelyReferenced_nonNull_native);
    *id v3 = v17;
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(a2, v6);
  }
}

uint64_t sub_1A092B624()
{
  uint64_t v0 = sub_1A09F39E8();
  sub_1A078D848(v0, qword_1E94FC148);
  sub_1A078510C(v0, (uint64_t)qword_1E94FC148);
  return sub_1A09F39D8();
}

id sub_1A092B6A4()
{
  id result = objc_msgSend(objc_allocWithZone((Class)IMRemoteIntentUserVault), sel_init);
  qword_1E94FC160 = (uint64_t)result;
  return result;
}

void __swiftcall IMRemoteIntentUserVault.init()(IMRemoteIntentUserVault *__return_ptr retstr)
{
  id v1 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());

  objc_msgSend(v1, sel_init);
}

id IMRemoteIntentUserVault.init()()
{
  *(void *)(v0 + OBJC_IVAR___IMRemoteIntentUserVault_commonPathsMap) = MEMORY[0x1E4FBC868];
  v2.super_class = (Class)IMRemoteIntentUserVault;
  return objc_msgSendSuper2(&v2, sel_init);
}

uint64_t IMRemoteIntentUserVault.convertedCommonPath(forDirectory:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  id v3 = v2;
  uint64_t v6 = &v2[OBJC_IVAR___IMRemoteIntentUserVault_commonPathsMap];
  swift_beginAccess();
  uint64_t v46 = v6;
  uint64_t v7 = *(void *)v6;
  uint64_t v8 = sub_1A07856F8((uint64_t *)&unk_1EB4A5630);
  uint64_t v9 = *(void *)(*(void *)(v8 - 8) + 64);
  MEMORY[0x1F4188790](v8 - 8);
  if (*(void *)(v7 + 16) && (unint64_t v10 = sub_1A087ACB8(a1), (v11 & 1) != 0))
  {
    unint64_t v12 = v10;
    uint64_t v13 = *(void *)(v7 + 56);
    uint64_t v14 = sub_1A09F33A8();
    uint64_t v15 = *(void *)(v14 - 8);
    (*(void (**)(char *, unint64_t, uint64_t))(v15 + 16))((char *)v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v13 + *(void *)(v15 + 72) * v12, v14);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))((char *)v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), 0, 1, v14);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))((char *)v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), 1, v14) != 1)
    {
      (*(void (**)(uint64_t, char *, uint64_t))(v15 + 32))(a2, (char *)v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v14);
      return swift_endAccess();
    }
  }
  else
  {
    uint64_t v14 = sub_1A09F33A8();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))((char *)v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), 1, 1, v14);
  }
  sub_1A092C590((uint64_t)v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_endAccess();
  uint64_t v16 = sub_1A09F33A8();
  uint64_t v49 = v43;
  uint64_t v17 = *(void *)(v14 - 8);
  uint64_t v18 = *(void *)(v17 + 64);
  unint64_t v19 = (v18 + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1F4188790](v16);
  uint64_t v47 = (char *)v43 - v19;
  id v20 = objc_msgSend(v3, sel_baseDirectory);
  uint64_t v48 = (char *)v43;
  uint64_t v21 = MEMORY[0x1F4188790](v20);
  uint64_t v50 = a2;
  uint64_t v51 = a1;
  if (v21)
  {
    MEMORY[0x1F4188790](v21);
    sub_1A09F3358();

    uint64_t v22 = *(void (**)(char *, char *, uint64_t))(v17 + 32);
    v22((char *)v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), (char *)v43 - v19, v14);
    uint64_t v45 = *(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56);
    v45((char *)v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), 0, 1, v14);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))((char *)v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), 1, v14) != 1)
    {
      uint64_t v44 = (uint64_t (*)(uint64_t, char *, uint64_t))v22;
      uint64_t v23 = ((uint64_t (*)(char *, char *, uint64_t))v22)(v47, (char *)v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v14);
      v43[1] = v43;
      MEMORY[0x1F4188790](v23);
      uint64_t v48 = (char *)v43 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
      sub_1A09F3378();
      sub_1A09F3378();
      char v24 = sub_1A09F3F18();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v24)
      {
        unsigned __int8 v25 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 16);
        uint64_t v26 = v25(v48, v51, v14);
      }
      else
      {
        sub_1A09F3378();
        sub_1A09F3328();
        uint64_t v26 = swift_bridgeObjectRelease();
        unsigned __int8 v25 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 16);
      }
      v43[0] = v43;
      MEMORY[0x1F4188790](v26);
      uint64_t v40 = v25((char *)v43 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0), v51, v14);
      MEMORY[0x1F4188790](v40);
      uint64_t v41 = (char *)v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
      uint64_t v42 = v48;
      v25(v41, (uint64_t)v48, v14);
      v45(v41, 0, 1, v14);
      swift_beginAccess();
      sub_1A092B44C((uint64_t)v41, (uint64_t)v43 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
      swift_endAccess();
      (*(void (**)(char *, uint64_t))(v17 + 8))(v47, v14);
      return v44(v50, v42, v14);
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56))((char *)v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), 1, 1, v14);
  }
  sub_1A092C590((uint64_t)v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (qword_1E94F85D0 != -1) {
    swift_once();
  }
  uint64_t v27 = sub_1A09F39E8();
  uint64_t v28 = sub_1A078510C(v27, (uint64_t)qword_1E94FC148);
  MEMORY[0x1F4188790](v28);
  uint64_t v29 = (char *)v43 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v30 = *(void (**)(char *, uint64_t, uint64_t))(v17 + 16);
  v30(v29, a1, v14);
  unsigned __int8 v31 = sub_1A09F39C8();
  os_log_type_t v32 = sub_1A09F4378();
  if (os_log_type_enabled(v31, v32))
  {
    uint64_t v33 = swift_slowAlloc();
    uint64_t v48 = (char *)v30;
    uint64_t v34 = (uint8_t *)v33;
    uint64_t v35 = swift_slowAlloc();
    v53[0] = v35;
    uint64_t v49 = v43;
    *(_DWORD *)uint64_t v34 = 136315138;
    uint64_t v47 = (char *)(v34 + 4);
    sub_1A0897D8C();
    uint64_t v36 = sub_1A09F4AE8();
    uint64_t v52 = sub_1A0785144(v36, v37, v53);
    sub_1A09F4528();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v29, v14);
    _os_log_impl(&dword_1A0772000, v31, v32, "Failed to return a common path for %s because the base user vault directory was not found.", v34, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1A6228C20](v35, -1, -1);
    uint64_t v38 = v34;
    id v30 = (void (*)(char *, uint64_t, uint64_t))v48;
    MEMORY[0x1A6228C20](v38, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v17 + 8))(v29, v14);
  }

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v30)(v50, v51, v14);
}

uint64_t IMRemoteIntentUserVault.convertedPath(forRemoteFile:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  id v3 = v2;
  uint64_t v6 = sub_1A09F33A8();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x1F4188790](v6);
  unint64_t v9 = (v8 + 15) & 0xFFFFFFFFFFFFFFF0;
  unint64_t v10 = (char *)v20 - v9;
  id v11 = objc_msgSend(v3, sel_baseDirectory);
  uint64_t v12 = sub_1A07856F8((uint64_t *)&unk_1EB4A5630);
  uint64_t v13 = MEMORY[0x1F4188790](v12 - 8);
  unint64_t v15 = (v14 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v16 = (char *)v20 - v15;
  if (!v11)
  {
    uint64_t v18 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56);
    v18((char *)v20 - v15, 1, 1, v6);
LABEL_5:
    sub_1A092C590((uint64_t)v16);
    return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v18)(a2, 1, 1, v6);
  }
  v20[1] = a1;
  MEMORY[0x1F4188790](v13);
  sub_1A09F3358();

  uint64_t v17 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
  v17(v16, (char *)v20 - v9, v6);
  uint64_t v18 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56);
  v18(v16, 0, 1, v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v16, 1, v6) == 1) {
    goto LABEL_5;
  }
  v17(v10, v16, v6);
  sub_1A09F3378();
  sub_1A09F3328();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  return ((uint64_t (*)(uint64_t, void, uint64_t, uint64_t))v18)(a2, 0, 1, v6);
}

uint64_t sub_1A092C590(uint64_t a1)
{
  uint64_t v2 = sub_1A07856F8((uint64_t *)&unk_1EB4A5630);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t type metadata accessor for IMRemoteIntentUserVault()
{
  unint64_t result = qword_1E94FC170;
  if (!qword_1E94FC170)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1E94FC170);
  }
  return result;
}

uint64_t sub_1A092C630(uint64_t a1)
{
  MEMORY[0x1F4188790](a1);
  uint64_t v2 = (char *)&v6 - v1;
  (*(void (**)(char *))(v3 + 16))((char *)&v6 - v1);
  uint64_t v4 = type metadata accessor for MainThreadOnly();
  return MainThreadOnly.valueAssertingIfNotMainThread.setter((uint64_t)v2, v4);
}

void (*MainThreadOnly.valueAssertingIfNotMainThread.modify(void *a1, uint64_t a2))(uint64_t **a1, char a2)
{
  id v5 = malloc(0x30uLL);
  *a1 = v5;
  *id v5 = a2;
  v5[1] = v2;
  uint64_t v6 = *(void *)(a2 + 16);
  long long v5[2] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  v5[3] = v7;
  size_t v8 = *(void *)(v7 + 64);
  v5[4] = malloc(v8);
  unint64_t v9 = malloc(v8);
  v5[5] = v9;
  MainThreadOnly.valueAssertingIfNotMainThread.getter(a2, (uint64_t)v9);
  return sub_1A092C7D4;
}

void sub_1A092C7D4(uint64_t **a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = (void *)(*a1)[4];
  uint64_t v4 = (void *)(*a1)[5];
  if (a2)
  {
    uint64_t v5 = v2[2];
    uint64_t v6 = v2[3];
    uint64_t v7 = *v2;
    (*(void (**)(uint64_t, void *, uint64_t))(v6 + 16))((*a1)[4], v4, v5);
    MainThreadOnly.valueAssertingIfNotMainThread.setter((uint64_t)v3, v7);
    (*(void (**)(void *, uint64_t))(v6 + 8))(v4, v5);
  }
  else
  {
    MainThreadOnly.valueAssertingIfNotMainThread.setter((*a1)[5], *v2);
  }
  free(v4);
  free(v3);

  free(v2);
}

uint64_t sub_1A092C894@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for MainThreadOnly();
  return MainThreadOnly.valueAssertingIfNotMainThread.getter(v2, a1);
}

uint64_t sub_1A092C8D4()
{
  return 8;
}

void *sub_1A092C8E0(void *result, void *a2)
{
  *a2 = *result;
  return result;
}

uint64_t *sub_1A092C8EC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = *(_DWORD *)(v4 + 80);
  if (v5 <= 7
    && *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) <= 0x18uLL
    && (*(_DWORD *)(v4 + 80) & 0x100000) == 0)
  {
    (*(void (**)(uint64_t *))(v4 + 16))(a1);
  }
  else
  {
    uint64_t v8 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v8 + ((v5 + 16) & ~v5));
    swift_retain();
  }
  return v3;
}

uint64_t sub_1A092C9A4(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(*(void *)(*(void *)(a2 + 16) - 8) + 8))();
}

uint64_t sub_1A092C9D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1;
}

uint64_t sub_1A092CA20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1;
}

uint64_t sub_1A092CA70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1;
}

uint64_t sub_1A092CAC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1;
}

uint64_t sub_1A092CB10(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (!a2) {
    return 0;
  }
  unsigned int v7 = a2 - v5;
  if (a2 <= v5) {
    goto LABEL_19;
  }
  char v8 = 8 * v6;
  if (v6 <= 3)
  {
    unsigned int v10 = ((v7 + ~(-1 << v8)) >> v8) + 1;
    if (HIWORD(v10))
    {
      int v9 = *(_DWORD *)((char *)a1 + v6);
      if (!v9) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v10 > 0xFF)
    {
      int v9 = *(unsigned __int16 *)((char *)a1 + v6);
      if (!*(unsigned __int16 *)((char *)a1 + v6)) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v10 < 2)
    {
LABEL_19:
      if (v5) {
        return (*(uint64_t (**)(void))(v4 + 48))();
      }
      return 0;
    }
  }
  int v9 = *((unsigned __int8 *)a1 + v6);
  if (!*((unsigned char *)a1 + v6)) {
    goto LABEL_19;
  }
LABEL_11:
  int v11 = (v9 - 1) << v8;
  if (v6 > 3) {
    int v11 = 0;
  }
  if (v6)
  {
    if (v6 > 3) {
      LODWORD(v6) = 4;
    }
    switch((int)v6)
    {
      case 2:
        LODWORD(v6) = *a1;
        break;
      case 3:
        LODWORD(v6) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v6) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v6) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v5 + (v6 | v11) + 1;
}

void sub_1A092CC6C(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  size_t v8 = *(void *)(v6 + 64);
  BOOL v9 = a3 >= v7;
  unsigned int v10 = a3 - v7;
  if (v10 != 0 && v9)
  {
    if (v8 <= 3)
    {
      unsigned int v14 = ((v10 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
      if (HIWORD(v14))
      {
        int v11 = 4;
      }
      else if (v14 >= 0x100)
      {
        int v11 = 2;
      }
      else
      {
        int v11 = v14 > 1;
      }
    }
    else
    {
      int v11 = 1;
    }
  }
  else
  {
    int v11 = 0;
  }
  if (v7 < a2)
  {
    unsigned int v12 = ~v7 + a2;
    if (v8 < 4)
    {
      int v13 = (v12 >> (8 * v8)) + 1;
      if (v8)
      {
        int v15 = v12 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if (v8 == 3)
        {
          *(_WORD *)a1 = v15;
          a1[2] = BYTE2(v15);
        }
        else if (v8 == 2)
        {
          *(_WORD *)a1 = v15;
        }
        else
        {
          *a1 = v15;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v12;
      int v13 = 1;
    }
    switch(v11)
    {
      case 1:
        a1[v8] = v13;
        return;
      case 2:
        *(_WORD *)&a1[v8] = v13;
        return;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v8] = v13;
        return;
      default:
        return;
    }
  }
  switch(v11)
  {
    case 1:
      a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 2:
      *(_WORD *)&a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 3:
LABEL_34:
      __break(1u);
      JUMPOUT(0x1A092CE84);
    case 4:
      *(_DWORD *)&a1[v8] = 0;
      goto LABEL_20;
    default:
LABEL_20:
      if (a2)
      {
LABEL_21:
        uint64_t v16 = *(void (**)(void))(v6 + 56);
        v16();
      }
      return;
  }
}

void __swiftcall IMChipList.init(dictionary:)(IMChipList_optional *__return_ptr retstr, Swift::OpaquePointer dictionary)
{
  id v2 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  uint64_t v3 = (void *)sub_1A09F3CE8();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_initWithDictionary_, v3);
}

id IMChipList.init(dictionary:)(uint64_t a1)
{
  id v2 = v1;
  uint64_t v4 = sub_1A09F3E18();
  if (!*(void *)(a1 + 16) || (unint64_t v6 = sub_1A087AAA4(v4, v5), (v7 & 1) == 0))
  {
    long long v18 = 0u;
    long long v19 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  sub_1A0785268(*(void *)(a1 + 56) + 32 * v6, (uint64_t)&v18);
  swift_bridgeObjectRelease();
  if (!*((void *)&v19 + 1))
  {
LABEL_9:
    swift_bridgeObjectRelease();
    sub_1A0783C7C((uint64_t)&v18);
LABEL_10:
    swift_getObjectType();
    swift_deallocPartialClassInstance();
    return 0;
  }
  sub_1A07856F8(&qword_1E94F9790);
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  uint64_t v8 = sub_1A09F3E18();
  if (*(void *)(a1 + 16) && (unint64_t v10 = sub_1A087AAA4(v8, v9), (v11 & 1) != 0))
  {
    sub_1A0785268(*(void *)(a1 + 56) + 32 * v10, (uint64_t)&v18);
  }
  else
  {
    long long v18 = 0u;
    long long v19 = 0u;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*((void *)&v19 + 1))
  {
    sub_1A0783C7C((uint64_t)&v18);
    goto LABEL_18;
  }
  sub_1A078231C(0, (unint64_t *)&qword_1EB4A59B8);
  if (!swift_dynamicCast())
  {
LABEL_18:
    unsigned int v14 = 0;
    goto LABEL_19;
  }
  unsigned int v14 = v17;
LABEL_19:
  sub_1A07856F8(&qword_1E94FDD10);
  int v15 = (void *)sub_1A09F4068();
  swift_bridgeObjectRelease();
  if (v14) {
    id v16 = objc_msgSend(v14, sel_BOOLValue);
  }
  else {
    id v16 = 0;
  }
  id v12 = objc_msgSend(v2, sel_initWithChipArray_replied_, v15, v16);

  if (v12) {
  return v12;
  }
}

id sub_1A092D39C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  char v4 = a2;
  unint64_t v5 = MEMORY[0x1E4FBC860];
  unint64_t v16 = MEMORY[0x1E4FBC860];
  uint64_t v6 = *(void *)(a1 + 16);
  if (v6)
  {
    swift_bridgeObjectRetain();
    for (uint64_t i = 0; i != v6; ++i)
    {
      id v8 = objc_allocWithZone((Class)IMChip);
      swift_bridgeObjectRetain();
      uint64_t v9 = (void *)sub_1A09F3CE8();
      swift_bridgeObjectRelease();
      id v10 = objc_msgSend(v8, sel_initWithDictionary_, v9);

      if (v10)
      {
        MEMORY[0x1A6226220]();
        if (*(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1A09F40A8();
        }
        sub_1A09F40D8();
        sub_1A09F4098();
      }
    }
    swift_bridgeObjectRelease();
    unint64_t v5 = v16;
    char v4 = a2;
  }
  swift_bridgeObjectRelease();
  if (v5 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v13 = sub_1A09F47B8();
    swift_bridgeObjectRelease();
    if (v13) {
      goto LABEL_11;
    }
LABEL_13:
    swift_bridgeObjectRelease();
    swift_getObjectType();
    swift_deallocPartialClassInstance();
    return 0;
  }
  if (!*(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_13;
  }
LABEL_11:
  type metadata accessor for IMChip();
  char v11 = (void *)sub_1A09F4068();
  swift_bridgeObjectRelease();
  id v12 = objc_msgSend(v3, sel_initWithChipList_replied_, v11, v4 & 1);

  return v12;
}

unint64_t sub_1A092D608()
{
  uint64_t v1 = v0;
  sub_1A07856F8(&qword_1E94F9368);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1A0A081A0;
  *(void *)(inited + 32) = sub_1A09F3E18();
  *(void *)(inited + 40) = v3;
  id v4 = objc_msgSend(v0, sel_chipList);
  type metadata accessor for IMChip();
  unint64_t v5 = sub_1A09F4078();

  if (!(v5 >> 62))
  {
    uint64_t v6 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
    unint64_t result = swift_bridgeObjectRetain();
    id v18 = v1;
    long long v19 = (void *)inited;
    if (v6) {
      goto LABEL_3;
    }
LABEL_15:
    uint64_t v9 = (void *)MEMORY[0x1E4FBC860];
LABEL_16:
    swift_bridgeObjectRelease_n();
    v19[9] = sub_1A07856F8(&qword_1E94F9790);
    v19[6] = v9;
    v19[10] = sub_1A09F3E18();
    v19[11] = v16;
    objc_msgSend(v18, sel_replied);
    uint64_t v17 = sub_1A09F40F8();
    v19[15] = sub_1A078231C(0, (unint64_t *)&qword_1EB4A59B8);
    v19[12] = v17;
    return sub_1A08D7480((uint64_t)v19);
  }
  swift_bridgeObjectRetain();
  unint64_t result = sub_1A09F47B8();
  uint64_t v6 = result;
  id v18 = v1;
  long long v19 = (void *)inited;
  if (!result) {
    goto LABEL_15;
  }
LABEL_3:
  if (v6 >= 1)
  {
    uint64_t v8 = 0;
    uint64_t v9 = (void *)MEMORY[0x1E4FBC860];
    do
    {
      if ((v5 & 0xC000000000000001) != 0) {
        id v10 = (id)MEMORY[0x1A6226890](v8, v5);
      }
      else {
        id v10 = *(id *)(v5 + 8 * v8 + 32);
      }
      char v11 = v10;
      id v12 = objc_msgSend(v10, sel_dictionaryRepresentation, v18);
      uint64_t v13 = sub_1A09F3D08();

      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v9 = sub_1A0891954(0, v9[2] + 1, 1, v9);
      }
      unint64_t v15 = v9[2];
      unint64_t v14 = v9[3];
      if (v15 >= v14 >> 1) {
        uint64_t v9 = sub_1A0891954((void *)(v14 > 1), v15 + 1, 1, v9);
      }
      ++v8;
      void v9[2] = v15 + 1;
      v9[v15 + 4] = v13;
    }
    while (v6 != v8);
    goto LABEL_16;
  }
  __break(1u);
  return result;
}

uint64_t sub_1A092D920()
{
  id v1 = objc_msgSend(v0, sel_chipList);
  type metadata accessor for IMChip();
  unint64_t v2 = sub_1A09F4078();

  uint64_t v10 = MEMORY[0x1E4FBC860];
  if (!(v2 >> 62))
  {
    uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v3) {
      goto LABEL_3;
    }
LABEL_18:
    swift_bridgeObjectRelease();
    uint64_t v9 = MEMORY[0x1E4FBC860];
LABEL_19:
    swift_bridgeObjectRelease();
    return v9;
  }
  swift_bridgeObjectRetain();
  uint64_t result = sub_1A09F47B8();
  uint64_t v3 = result;
  if (!result) {
    goto LABEL_18;
  }
LABEL_3:
  if (v3 >= 1)
  {
    for (uint64_t i = 0; i != v3; ++i)
    {
      if ((v2 & 0xC000000000000001) != 0) {
        id v6 = (id)MEMORY[0x1A6226890](i, v2);
      }
      else {
        id v6 = *(id *)(v2 + 8 * i + 32);
      }
      char v7 = v6;
      if (objc_msgSend(v6, sel_chip))
      {
        self;
        uint64_t v8 = swift_dynamicCastObjCClass();

        if (v8)
        {
          MEMORY[0x1A6226220]();
          if (*(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_1A09F40A8();
          }
          sub_1A09F40D8();
          sub_1A09F4098();
        }
        else
        {
          swift_unknownObjectRelease();
        }
      }
      else
      {
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v9 = v10;
    goto LABEL_19;
  }
  __break(1u);
  return result;
}

id sub_1A092DB20(void *a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  id v5 = a1;
  sub_1A092D920();

  a4(0);
  id v6 = (void *)sub_1A09F4068();
  swift_bridgeObjectRelease();

  return v6;
}

uint64_t IMChipList.isEqual(_:)(uint64_t a1)
{
  uint64_t v2 = sub_1A0875C10(a1, (uint64_t)v10);
  if (!v11)
  {
    sub_1A0783C7C((uint64_t)v10);
    goto LABEL_5;
  }
  type metadata accessor for IMChipList(v2);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_5:
    unsigned __int8 v7 = 0;
    return v7 & 1;
  }
  id v3 = objc_msgSend(v1, sel_chipList);
  type metadata accessor for IMChip();
  unint64_t v4 = sub_1A09F4078();

  id v5 = objc_msgSend(v9, sel_chipList);
  uint64_t v6 = sub_1A09F4078();

  unsigned __int8 v7 = sub_1A092E1CC(v4, v6, (uint64_t (*)(void))type metadata accessor for IMChip);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1A092DCBC(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  if (v2 != a2[2]) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  BOOL v5 = a1[4] == a2[4] && a1[5] == a2[5];
  if (v5 || (v6 = sub_1A09F4B28(), uint64_t result = 0, (v6 & 1) != 0))
  {
    uint64_t v8 = v2 - 1;
    if (!v8) {
      return 1;
    }
    uint64_t v9 = a1 + 7;
    for (uint64_t i = a2 + 7; ; i += 2)
    {
      BOOL v11 = *(v9 - 1) == *(i - 1) && *v9 == *i;
      if (!v11 && (sub_1A09F4B28() & 1) == 0) {
        break;
      }
      v9 += 2;
      if (!--v8) {
        return 1;
      }
    }
    return 0;
  }
  return result;
}

uint64_t sub_1A092DD84(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for RemoteIntentMirrorFileRepresentation(0);
  uint64_t v5 = MEMORY[0x1F4188790](v4);
  uint64_t v6 = MEMORY[0x1F4188790](v5);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = MEMORY[0x1F4188790]((char *)&v51 - v7);
  uint64_t v9 = MEMORY[0x1F4188790](v8);
  BOOL v11 = (char *)&v51 - v10;
  uint64_t v12 = MEMORY[0x1F4188790](v9);
  unint64_t v14 = (char *)&v51 - v13;
  uint64_t v15 = MEMORY[0x1F4188790](v12);
  uint64_t v17 = (char *)&v51 - v16;
  uint64_t v18 = MEMORY[0x1F4188790](v15);
  char v24 = (char *)&v51 - v23;
  uint64_t v25 = *(void *)(a1 + 16);
  if (v25 != *(void *)(a2 + 16))
  {
LABEL_21:
    char v48 = 0;
    return v48 & 1;
  }
  uint64_t v60 = v19;
  uint64_t v61 = v18;
  if (v25 && a1 != a2)
  {
    uint64_t v58 = v21;
    uint64_t v59 = v22;
    unint64_t v26 = (*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
    uint64_t v52 = *(void *)(v20 + 72);
    uint64_t v53 = v14;
    uint64_t v27 = v25 - 1;
    uint64_t v56 = a1;
    uint64_t v57 = a2;
    uint64_t v54 = v4;
    uint64_t v55 = v11;
    while (1)
    {
      uint64_t v28 = v27;
      sub_1A08AD4DC(a1 + v26, (uint64_t)v24);
      sub_1A08AD4DC(a2 + v26, (uint64_t)v17);
      char v29 = MEMORY[0x1A6225510](v24, v17);
      sub_1A08AD4DC((uint64_t)v24, (uint64_t)v14);
      sub_1A08AD4DC((uint64_t)v17, (uint64_t)v11);
      if ((v29 & 1) == 0) {
        break;
      }
      uint64_t v62 = v28;
      char v30 = sub_1A09F3848();
      sub_1A08AF4AC((uint64_t)v11);
      sub_1A08AF4AC((uint64_t)v14);
      uint64_t v31 = (uint64_t)v24;
      uint64_t v32 = (uint64_t)v17;
      uint64_t v33 = v60;
      sub_1A08AD4DC((uint64_t)v24, v60);
      uint64_t v34 = v32;
      uint64_t v35 = v61;
      sub_1A08AD4DC(v32, v61);
      uint64_t v36 = v58;
      if ((v30 & 1) == 0) {
        goto LABEL_19;
      }
      uint64_t v37 = *(int *)(v4 + 24);
      uint64_t v38 = *(void *)(v33 + v37);
      uint64_t v39 = *(void *)(v33 + v37 + 8);
      uint64_t v40 = (void *)(v35 + v37);
      if (v38 == *v40 && v39 == v40[1])
      {
        sub_1A08AF4AC(v33);
        sub_1A08AF4AC(v35);
        uint64_t v43 = v59;
        sub_1A08AD4DC((uint64_t)v24, v59);
        uint64_t v17 = (char *)v34;
        sub_1A08AD4DC(v34, v36);
      }
      else
      {
        char v42 = sub_1A09F4B28();
        sub_1A08AF4AC(v33);
        sub_1A08AF4AC(v35);
        uint64_t v43 = v59;
        sub_1A08AD4DC((uint64_t)v24, v59);
        uint64_t v17 = (char *)v34;
        sub_1A08AD4DC(v34, v36);
        if ((v42 & 1) == 0) {
          goto LABEL_20;
        }
      }
      uint64_t v4 = v54;
      char v44 = *(unsigned char *)(v43 + *(int *)(v54 + 28));
      sub_1A08AF4AC(v43);
      uint64_t v45 = v36;
      char v46 = *(unsigned char *)(v36 + *(int *)(v4 + 28));
      sub_1A08AF4AC(v45);
      char v47 = v44 ^ v46;
      sub_1A08AF4AC((uint64_t)v17);
      sub_1A08AF4AC((uint64_t)v24);
      a1 = v56;
      a2 = v57;
      BOOL v11 = v55;
      unint64_t v14 = v53;
      if ((v47 & 1) == 0)
      {
        uint64_t v27 = v62 - 1;
        v26 += v52;
        if (v62) {
          continue;
        }
      }
      char v48 = v47 ^ 1;
      return v48 & 1;
    }
    sub_1A08AF4AC((uint64_t)v11);
    sub_1A08AF4AC((uint64_t)v14);
    uint64_t v31 = (uint64_t)v24;
    uint64_t v49 = (uint64_t)v17;
    uint64_t v33 = v60;
    sub_1A08AD4DC((uint64_t)v24, v60);
    uint64_t v34 = v49;
    uint64_t v35 = v61;
    sub_1A08AD4DC(v49, v61);
    uint64_t v36 = v58;
LABEL_19:
    sub_1A08AF4AC(v33);
    sub_1A08AF4AC(v35);
    uint64_t v43 = v59;
    sub_1A08AD4DC(v31, v59);
    uint64_t v17 = (char *)v34;
    sub_1A08AD4DC(v34, v36);
LABEL_20:
    sub_1A08AF4AC(v36);
    sub_1A08AF4AC(v43);
    sub_1A08AF4AC((uint64_t)v17);
    sub_1A08AF4AC(v31);
    goto LABEL_21;
  }
  char v48 = 1;
  return v48 & 1;
}

id sub_1A092E1B4(unint64_t a1, uint64_t a2)
{
  return sub_1A092E1CC(a1, a2, type metadata accessor for IMRichCard);
}

id sub_1A092E1CC(unint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a1;
  unint64_t v6 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    unint64_t v7 = sub_1A09F47B8();
    swift_bridgeObjectRelease();
  }
  else
  {
    unint64_t v7 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if ((unint64_t)a2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v31 = sub_1A09F47B8();
    swift_bridgeObjectRelease();
    if (v7 == v31) {
      goto LABEL_5;
    }
LABEL_49:
    LOBYTE(v7) = 0;
    return (id)(v7 & 1);
  }
  if (v7 != *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_49;
  }
LABEL_5:
  if (!v7) {
    goto LABEL_38;
  }
  uint64_t v8 = v5 & 0xFFFFFFFFFFFFFF8;
  if (v5 < 0) {
    uint64_t v8 = v5;
  }
  if (!v6) {
    uint64_t v8 = (v5 & 0xFFFFFFFFFFFFFF8) + 32;
  }
  uint64_t v9 = a2 & 0xFFFFFFFFFFFFFF8;
  uint64_t v10 = (a2 & 0xFFFFFFFFFFFFFF8) + 32;
  if (a2 < 0) {
    uint64_t v11 = a2;
  }
  else {
    uint64_t v11 = a2 & 0xFFFFFFFFFFFFFF8;
  }
  if ((unint64_t)a2 >> 62) {
    uint64_t v10 = v11;
  }
  if (v8 == v10)
  {
LABEL_38:
    LOBYTE(v7) = 1;
    return (id)(v7 & 1);
  }
  if ((v7 & 0x8000000000000000) != 0) {
    goto LABEL_55;
  }
  unint64_t v32 = v5 & 0xC000000000000001;
  if ((v5 & 0xC000000000000001) != 0) {
    goto LABEL_56;
  }
  for (id result = *(id *)(v5 + 32); ; id result = (id)MEMORY[0x1A6226890](0, v5))
  {
    uint64_t v13 = result;
    if ((a2 & 0xC000000000000001) == 0) {
      break;
    }
    id v14 = (id)MEMORY[0x1A6226890](0, a2);
LABEL_22:
    uint64_t v15 = v14;
    a3 = (uint64_t (*)(void))a3(0);
    char v16 = sub_1A09F4508();

    if ((v16 & 1) == 0) {
      goto LABEL_49;
    }
    unint64_t v17 = v7 - 1;
    if (v7 == 1) {
      return (id)(v7 & 1);
    }
    if (((a2 | v5) & 0xC000000000000001) != 0)
    {
      uint64_t v18 = 0;
      unint64_t v19 = v7 - 2;
      while (v17 != v18)
      {
        unint64_t v7 = v18 + 1;
        if (v32) {
          id v20 = (id)MEMORY[0x1A6226890](v18 + 1, v5);
        }
        else {
          id v20 = *(id *)(v5 + 40 + 8 * v18);
        }
        uint64_t v21 = v20;
        if ((a2 & 0xC000000000000001) != 0)
        {
          id v22 = (id)MEMORY[0x1A6226890](v18 + 1, a2);
        }
        else
        {
          if (v7 >= *(void *)(v9 + 16)) {
            goto LABEL_54;
          }
          id v22 = *(id *)(a2 + 40 + 8 * v18);
        }
        uint64_t v23 = v22;
        unint64_t v7 = sub_1A09F4508();

        if ((v7 & 1) != 0 && v19 != v18++) {
          continue;
        }
        return (id)(v7 & 1);
      }
      __break(1u);
    }
    else
    {
      unint64_t v25 = *(void *)(v9 + 16);
      if (v25 <= 1) {
        unint64_t v25 = 1;
      }
      unint64_t v26 = v25 - 1;
      uint64_t v27 = (void **)(v5 + 40);
      uint64_t v9 = a2 + 40;
      while (v17)
      {
        if (!v26) {
          goto LABEL_53;
        }
        char v29 = *v27++;
        uint64_t v28 = v29;
        char v30 = *(void **)v9;
        v9 += 8;
        a2 = v28;
        uint64_t v5 = v30;
        unint64_t v7 = sub_1A09F4508();

        if (v7)
        {
          --v26;
          if (--v17) {
            continue;
          }
        }
        return (id)(v7 & 1);
      }
    }
    __break(1u);
LABEL_53:
    __break(1u);
LABEL_54:
    __break(1u);
LABEL_55:
    __break(1u);
LABEL_56:
    ;
  }
  if (*(void *)(v9 + 16))
  {
    id v14 = *(id *)(a2 + 32);
    goto LABEL_22;
  }
  __break(1u);
  return result;
}

id sub_1A092E528()
{
  id v1 = v0;
  uint64_t v2 = sub_1A07856F8((uint64_t *)&unk_1E94FAF20);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A09F3468();
  uint64_t v5 = sub_1A09F3478();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 0, 1, v5);
  id v6 = objc_allocWithZone((Class)IMMessageItem);
  id v7 = sub_1A092E8B0(0, 0, (uint64_t)v4, 0, 0, MEMORY[0x1E4FBC860], 0, 0, 0, 0, 0, 0);
  id v8 = objc_msgSend(objc_allocWithZone((Class)IMToSuperParserContext), sel_init);
  objc_msgSend(v8, sel_reset);
  id v9 = objc_msgSend(v1, sel_dictionaryRepresentation);
  uint64_t v10 = sub_1A09F3D08();

  sub_1A09E60D0(v10);
  swift_bridgeObjectRelease();
  uint64_t v11 = (void *)sub_1A09F3CE8();
  swift_bridgeObjectRelease();
  objc_msgSend(v8, sel_appendChipList_, v11);

  objc_msgSend(v7, sel_setFlags_, (unint64_t)objc_msgSend(v7, sel_flags) | 1);
  id v12 = objc_msgSend(v8, sel_body);
  objc_msgSend(v7, sel_setBody_, v12);

  return v7;
}

void __swiftcall IMChipList.init()(IMChipList *__return_ptr retstr)
{
  id v1 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());

  objc_msgSend(v1, sel_init);
}

void IMChipList.init()()
{
}

id sub_1A092E8B0(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v13 = v12;
  if (a2)
  {
    unint64_t v19 = (void *)sub_1A09F3DE8();
    swift_bridgeObjectRelease();
  }
  else
  {
    unint64_t v19 = 0;
  }
  uint64_t v20 = sub_1A09F3478();
  uint64_t v21 = *(void *)(v20 - 8);
  id v22 = 0;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v21 + 48))(a3, 1, v20) != 1)
  {
    id v22 = (void *)sub_1A09F3428();
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(a3, v20);
  }
  if (a5)
  {
    uint64_t v23 = (void *)sub_1A09F3CE8();
    swift_bridgeObjectRelease();
    if (a6) {
      goto LABEL_8;
    }
  }
  else
  {
    uint64_t v23 = 0;
    if (a6)
    {
LABEL_8:
      char v24 = (void *)sub_1A09F4068();
      swift_bridgeObjectRelease();
      uint64_t v25 = a10;
      if (a8) {
        goto LABEL_9;
      }
      goto LABEL_14;
    }
  }
  char v24 = 0;
  uint64_t v25 = a10;
  if (a8)
  {
LABEL_9:
    unint64_t v26 = (void *)sub_1A09F3248();

    uint64_t v27 = a12;
    if (v25) {
      goto LABEL_10;
    }
LABEL_15:
    uint64_t v28 = 0;
    if (v27) {
      goto LABEL_11;
    }
LABEL_16:
    char v29 = 0;
    goto LABEL_17;
  }
LABEL_14:
  unint64_t v26 = 0;
  uint64_t v27 = a12;
  if (!v25) {
    goto LABEL_15;
  }
LABEL_10:
  uint64_t v28 = (void *)sub_1A09F3DE8();
  swift_bridgeObjectRelease();
  if (!v27) {
    goto LABEL_16;
  }
LABEL_11:
  char v29 = (void *)sub_1A09F3DE8();
  swift_bridgeObjectRelease();
LABEL_17:
  id v30 = objc_msgSend(v13, sel_initWithSender_time_body_attributes_fileTransferGUIDs_flags_error_guid_threadIdentifier_, v19, v22, a4, v23, v24, a7, v26, v28, v29);

  return v30;
}

uint64_t type metadata accessor for IMChipList(uint64_t a1)
{
  return sub_1A078231C(a1, &qword_1E94FC188);
}

void (*sub_1A092EB10(void (**a1)(id *a1), unint64_t a2, uint64_t a3))(void *a1)
{
  id v6 = (void (*)(id *))malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_1A092EBC0(v6, a2, a3);
  return sub_1A092EB78;
}

void sub_1A092EB78(void *a1)
{
  id v1 = (void *)*a1;
  (*(void (**)(void))(*a1 + 32))(*a1);

  free(v1);
}

void (*sub_1A092EBC0(void (*result)(id *a1), unint64_t a2, uint64_t a3))(id *a1)
{
  uint64_t v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    id v4 = (id)MEMORY[0x1A6226890](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    id v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(void *)uint64_t v3 = v4;
    return sub_1A092EC40;
  }
  __break(1u);
  return result;
}

void sub_1A092EC40(id *a1)
{
}

id _sSo10IMChipListC17IMSharedUtilitiesE5merge_4withABSgAF_AFtFZ_0(void *a1, void *a2)
{
  if (a1)
  {
    id v3 = a1;
    if (a2)
    {
      id v4 = a1;
      id v5 = a2;
      id v6 = objc_msgSend(v4, sel_chipList);
      type metadata accessor for IMChip();
      sub_1A09F4078();

      id v7 = objc_msgSend(v5, sel_chipList);
      unint64_t v8 = sub_1A09F4078();

      sub_1A09CEC90(v8);
      id v9 = objc_allocWithZone((Class)IMChipList);
      uint64_t v10 = (void *)sub_1A09F4068();
      swift_bridgeObjectRelease();
      id v3 = objc_msgSend(v9, sel_initWithChipList_, v10);
    }
    else
    {
      id v12 = a1;
    }
  }
  else
  {
    id v11 = a2;
    return a2;
  }
  return v3;
}

uint64_t destroy for RemoteIntentTranscoderUserInfo()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for RemoteIntentTranscoderUserInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  uint64_t v5 = *(void *)(a2 + 64);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(void *)(a1 + 64) = v5;
  uint64_t v6 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v6;
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for RemoteIntentTranscoderUserInfo(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 32) = v4;
  uint64_t v5 = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 48) = v5;
  uint64_t v6 = *(void *)(a2 + 64);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(void *)(a1 + 64) = v6;
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  *(unsigned char *)(a1 + 105) = *(unsigned char *)(a2 + 105);
  *(unsigned char *)(a1 + 106) = *(unsigned char *)(a2 + 106);
  *(unsigned char *)(a1 + 107) = *(unsigned char *)(a2 + 107);
  *(unsigned char *)(a1 + 108) = *(unsigned char *)(a2 + 108);
  *(unsigned char *)(a1 + 109) = *(unsigned char *)(a2 + 109);
  *(unsigned char *)(a1 + 110) = *(unsigned char *)(a2 + 110);
  *(unsigned char *)(a1 + 111) = *(unsigned char *)(a2 + 111);
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  return a1;
}

__n128 initializeWithTake for RemoteIntentTranscoderUserInfo(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[1];
  long long v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  __n128 result = (__n128)a2[4];
  long long v6 = a2[5];
  long long v7 = a2[6];
  *(unsigned char *)(a1 + 112) = *((unsigned char *)a2 + 112);
  *(_OWORD *)(a1 + 80) = v6;
  *(_OWORD *)(a1 + 96) = v7;
  *(__n128 *)(a1 + 64) = result;
  return result;
}

uint64_t assignWithTake for RemoteIntentTranscoderUserInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  return a1;
}

uint64_t getEnumTagSinglePayload for RemoteIntentTranscoderUserInfo(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 113)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for RemoteIntentTranscoderUserInfo(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 104) = 0;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 112) = 0;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 113) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 113) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RemoteIntentTranscoderUserInfo()
{
  return &type metadata for RemoteIntentTranscoderUserInfo;
}

unint64_t sub_1A092F140(char a1)
{
  unint64_t result = 0x61487265646E6573;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x69537265646E6573;
      break;
    case 2:
    case 5:
      unint64_t result = 0xD000000000000017;
      break;
    case 3:
      unint64_t result = 0xD000000000000018;
      break;
    case 4:
      unint64_t result = 0xD000000000000016;
      break;
    case 6:
      unint64_t result = 0xD000000000000021;
      break;
    case 7:
      unint64_t result = 0xD00000000000001CLL;
      break;
    case 8:
      unint64_t result = 0xD00000000000001ELL;
      break;
    case 9:
      unint64_t result = 0xD000000000000021;
      break;
    case 10:
      unint64_t result = 0xD000000000000020;
      break;
    case 11:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 12:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 13:
      unint64_t result = 0xD00000000000001DLL;
      break;
    case 14:
      unint64_t result = 0xD000000000000018;
      break;
    case 15:
      unint64_t result = 0xD000000000000020;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A092F334(void *a1)
{
  uint64_t v3 = sub_1A07856F8(&qword_1E94FC190);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  long long v6 = &v9[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1A086F45C(a1, a1[3]);
  sub_1A0930590();
  sub_1A09F4CC8();
  v9[15] = 0;
  sub_1A09F4978();
  if (!v1)
  {
    v9[14] = 1;
    sub_1A09F4978();
    v9[13] = 2;
    sub_1A09F4998();
    v9[12] = 3;
    sub_1A09F4998();
    v9[11] = 4;
    sub_1A09F4998();
    v9[10] = 5;
    sub_1A09F4978();
    uint64_t v7 = swift_bridgeObjectRetain();
    sub_1A0950554(v7, 6);
    swift_bridgeObjectRelease();
    v9[9] = 7;
    sub_1A09F4988();
    v9[8] = 8;
    sub_1A09F4988();
    v9[7] = 9;
    sub_1A09F4988();
    v9[6] = 10;
    sub_1A09F4988();
    void v9[5] = 11;
    sub_1A09F4988();
    v9[4] = 12;
    sub_1A09F4988();
    v9[3] = 13;
    sub_1A09F4988();
    void v9[2] = 14;
    sub_1A09F4988();
    v9[1] = 15;
    sub_1A09F4988();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_1A092F6DC()
{
  return sub_1A092F140(*v0);
}

uint64_t sub_1A092F6E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A09311C0(a1, a2);
  *a3 = result;
  return result;
}

void sub_1A092F70C(unsigned char *a1@<X8>)
{
  *a1 = 16;
}

uint64_t sub_1A092F718(uint64_t a1)
{
  unint64_t v2 = sub_1A0930590();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A092F754(uint64_t a1)
{
  unint64_t v2 = sub_1A0930590();

  return MEMORY[0x1F41862B0](a1, v2);
}

double sub_1A092F790@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1A09317A0(a1, (uint64_t *)v8);
  if (!v2)
  {
    long long v5 = v12;
    *(_OWORD *)(a2 + 64) = v11;
    *(_OWORD *)(a2 + 80) = v5;
    *(_OWORD *)(a2 + 96) = v13;
    *(unsigned char *)(a2 + 112) = v14;
    long long v6 = v8[1];
    *(_OWORD *)a2 = v8[0];
    *(_OWORD *)(a2 + 16) = v6;
    double result = *(double *)&v9;
    long long v7 = v10;
    *(_OWORD *)(a2 + 32) = v9;
    *(_OWORD *)(a2 + 48) = v7;
  }
  return result;
}

uint64_t sub_1A092F7F8(void *a1)
{
  return sub_1A092F334(a1);
}

uint64_t sub_1A092F810()
{
  uint64_t v1 = v0;
  uint64_t v2 = MEMORY[0x1E4FBC868];
  uint64_t v62 = MEMORY[0x1E4FBC868];
  *(void *)&long long v59 = sub_1A09F3E18();
  *((void *)&v59 + 1) = v3;
  uint64_t v4 = MEMORY[0x1E4FBB1A0];
  sub_1A09F4648();
  uint64_t v5 = v1[1];
  if (v5)
  {
    uint64_t v6 = *v1;
    uint64_t v60 = v4;
    *(void *)&long long v59 = v6;
    *((void *)&v59 + 1) = v5;
    sub_1A07825B4(&v59, v58);
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v79 = v2;
    sub_1A08D97F0(v58, (uint64_t)v61, isUniquelyReferenced_nonNull_native);
    uint64_t v62 = v79;
    swift_bridgeObjectRelease();
    sub_1A087B20C((uint64_t)v61);
  }
  else
  {
    sub_1A09ED5A4((uint64_t)v61, &v59);
    sub_1A087B20C((uint64_t)v61);
    sub_1A0783C7C((uint64_t)&v59);
  }
  *(void *)&long long v59 = sub_1A09F3E18();
  *((void *)&v59 + 1) = v8;
  uint64_t v9 = MEMORY[0x1E4FBB1A0];
  sub_1A09F4648();
  uint64_t v10 = v1[3];
  if (v10)
  {
    uint64_t v11 = v1[2];
    uint64_t v60 = v9;
    *(void *)&long long v59 = v11;
    *((void *)&v59 + 1) = v10;
    sub_1A07825B4(&v59, v58);
    swift_bridgeObjectRetain();
    uint64_t v12 = v62;
    char v13 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v79 = v12;
    sub_1A08D97F0(v58, (uint64_t)v61, v13);
    uint64_t v62 = v79;
    swift_bridgeObjectRelease();
    sub_1A087B20C((uint64_t)v61);
  }
  else
  {
    sub_1A09ED5A4((uint64_t)v61, &v59);
    sub_1A087B20C((uint64_t)v61);
    sub_1A0783C7C((uint64_t)&v59);
  }
  *(void *)&long long v59 = sub_1A09F3E18();
  *((void *)&v59 + 1) = v14;
  sub_1A09F4648();
  sub_1A08AF448((uint64_t)(v1 + 4), (uint64_t)v74, &qword_1E94FC1A8);
  sub_1A08AF448((uint64_t)v74, (uint64_t)&v75, &qword_1E94FC1A8);
  if (v76)
  {
    sub_1A09ED5A4((uint64_t)v61, &v59);
    sub_1A087B20C((uint64_t)v61);
    sub_1A0783C7C((uint64_t)&v59);
  }
  else
  {
    uint64_t v60 = MEMORY[0x1E4FBB3D0];
    *(void *)&long long v59 = v75;
    sub_1A07825B4(&v59, v58);
    uint64_t v15 = v62;
    char v16 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v79 = v15;
    sub_1A08D97F0(v58, (uint64_t)v61, v16);
    uint64_t v62 = v79;
    swift_bridgeObjectRelease();
    sub_1A087B20C((uint64_t)v61);
  }
  *(void *)&long long v59 = sub_1A09F3E18();
  *((void *)&v59 + 1) = v17;
  sub_1A09F4648();
  sub_1A08AF448((uint64_t)(v1 + 6), (uint64_t)v73, &qword_1E94FC1A8);
  sub_1A08AF448((uint64_t)v73, (uint64_t)&v77, &qword_1E94FC1A8);
  if (v78)
  {
    sub_1A09ED5A4((uint64_t)v61, &v59);
    sub_1A087B20C((uint64_t)v61);
    sub_1A0783C7C((uint64_t)&v59);
  }
  else
  {
    uint64_t v60 = MEMORY[0x1E4FBB3D0];
    *(void *)&long long v59 = v77;
    sub_1A07825B4(&v59, v58);
    uint64_t v18 = v62;
    char v19 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v79 = v18;
    sub_1A08D97F0(v58, (uint64_t)v61, v19);
    uint64_t v62 = v79;
    swift_bridgeObjectRelease();
    sub_1A087B20C((uint64_t)v61);
  }
  *(void *)&long long v59 = sub_1A09F3E18();
  *((void *)&v59 + 1) = v20;
  sub_1A09F4648();
  sub_1A08AF448((uint64_t)(v1 + 8), (uint64_t)v72, &qword_1E94FC1A8);
  sub_1A08AF448((uint64_t)v72, (uint64_t)&v79, &qword_1E94FC1A8);
  if (v80)
  {
    sub_1A09ED5A4((uint64_t)v61, &v59);
    sub_1A087B20C((uint64_t)v61);
    sub_1A0783C7C((uint64_t)&v59);
  }
  else
  {
    uint64_t v60 = MEMORY[0x1E4FBB3D0];
    *(void *)&long long v59 = v79;
    sub_1A07825B4(&v59, v58);
    uint64_t v21 = v62;
    char v22 = swift_isUniquelyReferenced_nonNull_native();
    sub_1A08D97F0(v58, (uint64_t)v61, v22);
    uint64_t v62 = v21;
    swift_bridgeObjectRelease();
    sub_1A087B20C((uint64_t)v61);
  }
  *(void *)&long long v59 = sub_1A09F3E18();
  *((void *)&v59 + 1) = v23;
  sub_1A09F4648();
  uint64_t v24 = v1[11];
  if (v24)
  {
    uint64_t v25 = v1[10];
    uint64_t v60 = v9;
    *(void *)&long long v59 = v25;
    *((void *)&v59 + 1) = v24;
    sub_1A07825B4(&v59, v58);
    swift_bridgeObjectRetain();
    uint64_t v26 = v62;
    char v27 = swift_isUniquelyReferenced_nonNull_native();
    sub_1A08D97F0(v58, (uint64_t)v61, v27);
    uint64_t v62 = v26;
    swift_bridgeObjectRelease();
    sub_1A087B20C((uint64_t)v61);
  }
  else
  {
    sub_1A09ED5A4((uint64_t)v61, &v59);
    sub_1A087B20C((uint64_t)v61);
    sub_1A0783C7C((uint64_t)&v59);
    uint64_t v26 = v62;
  }
  *(void *)&long long v59 = sub_1A09F3E18();
  *((void *)&v59 + 1) = v28;
  sub_1A09F4648();
  unint64_t v29 = sub_1A08D733C(MEMORY[0x1E4FBC860]);
  uint64_t v60 = sub_1A07856F8((uint64_t *)&unk_1E94F9030);
  *(void *)&long long v59 = v29;
  sub_1A07825B4(&v59, v58);
  char v30 = swift_isUniquelyReferenced_nonNull_native();
  sub_1A08D97F0(v58, (uint64_t)v61, v30);
  uint64_t v62 = v26;
  swift_bridgeObjectRelease();
  sub_1A087B20C((uint64_t)v61);
  *(void *)&long long v59 = sub_1A09F3E18();
  *((void *)&v59 + 1) = v31;
  sub_1A09F4648();
  sub_1A08AF448((uint64_t)(v1 + 13), (uint64_t)&v71, &qword_1E94FB1A8);
  sub_1A08AF448((uint64_t)&v71, (uint64_t)&v81, &qword_1E94FB1A8);
  if (v81 == 2)
  {
    sub_1A09ED5A4((uint64_t)v61, &v59);
    sub_1A087B20C((uint64_t)v61);
    sub_1A0783C7C((uint64_t)&v59);
  }
  else
  {
    uint64_t v60 = MEMORY[0x1E4FBB390];
    LOBYTE(v59) = v81;
    sub_1A07825B4(&v59, v58);
    char v32 = swift_isUniquelyReferenced_nonNull_native();
    sub_1A08D97F0(v58, (uint64_t)v61, v32);
    uint64_t v62 = v26;
    swift_bridgeObjectRelease();
    sub_1A087B20C((uint64_t)v61);
  }
  *(void *)&long long v59 = sub_1A09F3E18();
  *((void *)&v59 + 1) = v33;
  sub_1A09F4648();
  sub_1A08AF448((uint64_t)v1 + 105, (uint64_t)&v70, &qword_1E94FB1A8);
  sub_1A08AF448((uint64_t)&v70, (uint64_t)&v82, &qword_1E94FB1A8);
  if (v82 == 2)
  {
    sub_1A09ED5A4((uint64_t)v61, &v59);
    sub_1A087B20C((uint64_t)v61);
    sub_1A0783C7C((uint64_t)&v59);
  }
  else
  {
    uint64_t v60 = MEMORY[0x1E4FBB390];
    LOBYTE(v59) = v82;
    sub_1A07825B4(&v59, v58);
    uint64_t v34 = v62;
    char v35 = swift_isUniquelyReferenced_nonNull_native();
    sub_1A08D97F0(v58, (uint64_t)v61, v35);
    uint64_t v62 = v34;
    swift_bridgeObjectRelease();
    sub_1A087B20C((uint64_t)v61);
  }
  *(void *)&long long v59 = sub_1A09F3E18();
  *((void *)&v59 + 1) = v36;
  sub_1A09F4648();
  sub_1A08AF448((uint64_t)v1 + 106, (uint64_t)&v69, &qword_1E94FB1A8);
  sub_1A08AF448((uint64_t)&v69, (uint64_t)&v83, &qword_1E94FB1A8);
  if (v83 == 2)
  {
    sub_1A09ED5A4((uint64_t)v61, &v59);
    sub_1A087B20C((uint64_t)v61);
    sub_1A0783C7C((uint64_t)&v59);
  }
  else
  {
    uint64_t v60 = MEMORY[0x1E4FBB390];
    LOBYTE(v59) = v83;
    sub_1A07825B4(&v59, v58);
    uint64_t v37 = v62;
    char v38 = swift_isUniquelyReferenced_nonNull_native();
    sub_1A08D97F0(v58, (uint64_t)v61, v38);
    uint64_t v62 = v37;
    swift_bridgeObjectRelease();
    sub_1A087B20C((uint64_t)v61);
  }
  *(void *)&long long v59 = sub_1A09F3E18();
  *((void *)&v59 + 1) = v39;
  sub_1A09F4648();
  sub_1A08AF448((uint64_t)v1 + 107, (uint64_t)&v68, &qword_1E94FB1A8);
  sub_1A08AF448((uint64_t)&v68, (uint64_t)&v84, &qword_1E94FB1A8);
  if (v84 == 2)
  {
    sub_1A09ED5A4((uint64_t)v61, &v59);
    sub_1A087B20C((uint64_t)v61);
    sub_1A0783C7C((uint64_t)&v59);
  }
  else
  {
    uint64_t v60 = MEMORY[0x1E4FBB390];
    LOBYTE(v59) = v84;
    sub_1A07825B4(&v59, v58);
    uint64_t v40 = v62;
    char v41 = swift_isUniquelyReferenced_nonNull_native();
    sub_1A08D97F0(v58, (uint64_t)v61, v41);
    uint64_t v62 = v40;
    swift_bridgeObjectRelease();
    sub_1A087B20C((uint64_t)v61);
  }
  *(void *)&long long v59 = sub_1A09F3E18();
  *((void *)&v59 + 1) = v42;
  sub_1A09F4648();
  sub_1A08AF448((uint64_t)v1 + 108, (uint64_t)&v67, &qword_1E94FB1A8);
  sub_1A08AF448((uint64_t)&v67, (uint64_t)&v85, &qword_1E94FB1A8);
  if (v85 == 2)
  {
    sub_1A09ED5A4((uint64_t)v61, &v59);
    sub_1A087B20C((uint64_t)v61);
    sub_1A0783C7C((uint64_t)&v59);
  }
  else
  {
    uint64_t v60 = MEMORY[0x1E4FBB390];
    LOBYTE(v59) = v85;
    sub_1A07825B4(&v59, v58);
    uint64_t v43 = v62;
    char v44 = swift_isUniquelyReferenced_nonNull_native();
    sub_1A08D97F0(v58, (uint64_t)v61, v44);
    uint64_t v62 = v43;
    swift_bridgeObjectRelease();
    sub_1A087B20C((uint64_t)v61);
  }
  *(void *)&long long v59 = sub_1A09F3E18();
  *((void *)&v59 + 1) = v45;
  sub_1A09F4648();
  sub_1A08AF448((uint64_t)v1 + 109, (uint64_t)&v66, &qword_1E94FB1A8);
  sub_1A08AF448((uint64_t)&v66, (uint64_t)&v86, &qword_1E94FB1A8);
  if (v86 == 2)
  {
    sub_1A09ED5A4((uint64_t)v61, &v59);
    sub_1A087B20C((uint64_t)v61);
    sub_1A0783C7C((uint64_t)&v59);
  }
  else
  {
    uint64_t v60 = MEMORY[0x1E4FBB390];
    LOBYTE(v59) = v86;
    sub_1A07825B4(&v59, v58);
    uint64_t v46 = v62;
    char v47 = swift_isUniquelyReferenced_nonNull_native();
    sub_1A08D97F0(v58, (uint64_t)v61, v47);
    uint64_t v62 = v46;
    swift_bridgeObjectRelease();
    sub_1A087B20C((uint64_t)v61);
  }
  *(void *)&long long v59 = sub_1A09F3E18();
  *((void *)&v59 + 1) = v48;
  sub_1A09F4648();
  sub_1A08AF448((uint64_t)v1 + 110, (uint64_t)&v65, &qword_1E94FB1A8);
  sub_1A08AF448((uint64_t)&v65, (uint64_t)&v87, &qword_1E94FB1A8);
  if (v87 == 2)
  {
    sub_1A09ED5A4((uint64_t)v61, &v59);
    sub_1A087B20C((uint64_t)v61);
    sub_1A0783C7C((uint64_t)&v59);
  }
  else
  {
    uint64_t v60 = MEMORY[0x1E4FBB390];
    LOBYTE(v59) = v87;
    sub_1A07825B4(&v59, v58);
    uint64_t v49 = v62;
    char v50 = swift_isUniquelyReferenced_nonNull_native();
    sub_1A08D97F0(v58, (uint64_t)v61, v50);
    uint64_t v62 = v49;
    swift_bridgeObjectRelease();
    sub_1A087B20C((uint64_t)v61);
  }
  *(void *)&long long v59 = sub_1A09F3E18();
  *((void *)&v59 + 1) = v51;
  sub_1A09F4648();
  sub_1A08AF448((uint64_t)v1 + 111, (uint64_t)&v64, &qword_1E94FB1A8);
  sub_1A08AF448((uint64_t)&v64, (uint64_t)&v88, &qword_1E94FB1A8);
  if (v88 == 2)
  {
    sub_1A09ED5A4((uint64_t)v61, &v59);
    sub_1A087B20C((uint64_t)v61);
    sub_1A0783C7C((uint64_t)&v59);
  }
  else
  {
    uint64_t v60 = MEMORY[0x1E4FBB390];
    LOBYTE(v59) = v88;
    sub_1A07825B4(&v59, v58);
    uint64_t v52 = v62;
    char v53 = swift_isUniquelyReferenced_nonNull_native();
    sub_1A08D97F0(v58, (uint64_t)v61, v53);
    uint64_t v62 = v52;
    swift_bridgeObjectRelease();
    sub_1A087B20C((uint64_t)v61);
  }
  *(void *)&long long v59 = sub_1A09F3E18();
  *((void *)&v59 + 1) = v54;
  sub_1A09F4648();
  sub_1A08AF448((uint64_t)(v1 + 14), (uint64_t)&v63, &qword_1E94FB1A8);
  sub_1A08AF448((uint64_t)&v63, (uint64_t)&v89, &qword_1E94FB1A8);
  if (v89 == 2)
  {
    sub_1A09ED5A4((uint64_t)v61, &v59);
    sub_1A087B20C((uint64_t)v61);
    sub_1A0783C7C((uint64_t)&v59);
    return v62;
  }
  else
  {
    uint64_t v60 = MEMORY[0x1E4FBB390];
    LOBYTE(v59) = v89;
    sub_1A07825B4(&v59, v58);
    uint64_t v55 = v62;
    char v56 = swift_isUniquelyReferenced_nonNull_native();
    sub_1A08D97F0(v58, (uint64_t)v61, v56);
    swift_bridgeObjectRelease();
    sub_1A087B20C((uint64_t)v61);
  }
  return v55;
}

unint64_t sub_1A0930590()
{
  unint64_t result = qword_1E94FC198;
  if (!qword_1E94FC198)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FC198);
  }
  return result;
}

uint64_t sub_1A09305E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)&long long v100 = sub_1A09F3E18();
  *((void *)&v100 + 1) = v4;
  sub_1A09F4648();
  if (*(void *)(a1 + 16) && (unint64_t v5 = sub_1A087AB2C((uint64_t)v99), (v6 & 1) != 0))
  {
    sub_1A0785268(*(void *)(a1 + 56) + 32 * v5, (uint64_t)&v100);
  }
  else
  {
    long long v100 = 0u;
    long long v101 = 0u;
  }
  sub_1A087B20C((uint64_t)v99);
  if (*((void *)&v101 + 1))
  {
    int v7 = swift_dynamicCast();
    if (v7) {
      uint64_t v8 = v97;
    }
    else {
      uint64_t v8 = 0;
    }
    if (v7) {
      uint64_t v9 = v98;
    }
    else {
      uint64_t v9 = 0;
    }
    uint64_t v95 = v9;
    uint64_t v96 = v8;
  }
  else
  {
    sub_1A0783C7C((uint64_t)&v100);
    uint64_t v95 = 0;
    uint64_t v96 = 0;
  }
  *(void *)&long long v100 = sub_1A09F3E18();
  *((void *)&v100 + 1) = v10;
  sub_1A09F4648();
  if (*(void *)(a1 + 16) && (unint64_t v11 = sub_1A087AB2C((uint64_t)v99), (v12 & 1) != 0))
  {
    sub_1A0785268(*(void *)(a1 + 56) + 32 * v11, (uint64_t)&v100);
  }
  else
  {
    long long v100 = 0u;
    long long v101 = 0u;
  }
  sub_1A087B20C((uint64_t)v99);
  if (*((void *)&v101 + 1))
  {
    int v13 = swift_dynamicCast();
    if (v13) {
      uint64_t v14 = v97;
    }
    else {
      uint64_t v14 = 0;
    }
    if (v13) {
      uint64_t v15 = v98;
    }
    else {
      uint64_t v15 = 0;
    }
    uint64_t v93 = v15;
    uint64_t v94 = v14;
  }
  else
  {
    sub_1A0783C7C((uint64_t)&v100);
    uint64_t v93 = 0;
    uint64_t v94 = 0;
  }
  *(void *)&long long v100 = sub_1A09F3E18();
  *((void *)&v100 + 1) = v16;
  sub_1A09F4648();
  if (*(void *)(a1 + 16) && (unint64_t v17 = sub_1A087AB2C((uint64_t)v99), (v18 & 1) != 0))
  {
    sub_1A0785268(*(void *)(a1 + 56) + 32 * v17, (uint64_t)&v100);
  }
  else
  {
    long long v100 = 0u;
    long long v101 = 0u;
  }
  sub_1A087B20C((uint64_t)v99);
  if (*((void *)&v101 + 1))
  {
    int v19 = swift_dynamicCast();
    uint64_t v20 = v97;
    if (!v19) {
      uint64_t v20 = 0;
    }
    uint64_t v92 = v20;
    char v21 = v19 ^ 1;
  }
  else
  {
    sub_1A0783C7C((uint64_t)&v100);
    uint64_t v92 = 0;
    char v21 = 1;
  }
  char v91 = v21;
  *(void *)&long long v100 = sub_1A09F3E18();
  *((void *)&v100 + 1) = v22;
  sub_1A09F4648();
  if (*(void *)(a1 + 16) && (unint64_t v23 = sub_1A087AB2C((uint64_t)v99), (v24 & 1) != 0))
  {
    sub_1A0785268(*(void *)(a1 + 56) + 32 * v23, (uint64_t)&v100);
  }
  else
  {
    long long v100 = 0u;
    long long v101 = 0u;
  }
  sub_1A087B20C((uint64_t)v99);
  if (*((void *)&v101 + 1))
  {
    int v25 = swift_dynamicCast();
    uint64_t v26 = v97;
    if (!v25) {
      uint64_t v26 = 0;
    }
    uint64_t v90 = v26;
    char v27 = v25 ^ 1;
  }
  else
  {
    sub_1A0783C7C((uint64_t)&v100);
    uint64_t v90 = 0;
    char v27 = 1;
  }
  char v89 = v27;
  *(void *)&long long v100 = sub_1A09F3E18();
  *((void *)&v100 + 1) = v28;
  sub_1A09F4648();
  if (*(void *)(a1 + 16) && (unint64_t v29 = sub_1A087AB2C((uint64_t)v99), (v30 & 1) != 0))
  {
    sub_1A0785268(*(void *)(a1 + 56) + 32 * v29, (uint64_t)&v100);
  }
  else
  {
    long long v100 = 0u;
    long long v101 = 0u;
  }
  sub_1A087B20C((uint64_t)v99);
  if (*((void *)&v101 + 1))
  {
    int v31 = swift_dynamicCast();
    uint64_t v32 = v97;
    if (!v31) {
      uint64_t v32 = 0;
    }
    uint64_t v88 = v32;
    char v33 = v31 ^ 1;
  }
  else
  {
    sub_1A0783C7C((uint64_t)&v100);
    uint64_t v88 = 0;
    char v33 = 1;
  }
  char v87 = v33;
  *(void *)&long long v100 = sub_1A09F3E18();
  *((void *)&v100 + 1) = v34;
  sub_1A09F4648();
  if (*(void *)(a1 + 16) && (unint64_t v35 = sub_1A087AB2C((uint64_t)v99), (v36 & 1) != 0))
  {
    sub_1A0785268(*(void *)(a1 + 56) + 32 * v35, (uint64_t)&v100);
  }
  else
  {
    long long v100 = 0u;
    long long v101 = 0u;
  }
  sub_1A087B20C((uint64_t)v99);
  if (*((void *)&v101 + 1))
  {
    int v37 = swift_dynamicCast();
    if (v37) {
      uint64_t v38 = v97;
    }
    else {
      uint64_t v38 = 0;
    }
    if (v37) {
      uint64_t v39 = v98;
    }
    else {
      uint64_t v39 = 0;
    }
    uint64_t v85 = v39;
    uint64_t v86 = v38;
  }
  else
  {
    sub_1A0783C7C((uint64_t)&v100);
    uint64_t v85 = 0;
    uint64_t v86 = 0;
  }
  *(void *)&long long v100 = sub_1A09F3E18();
  *((void *)&v100 + 1) = v40;
  sub_1A09F4648();
  if (*(void *)(a1 + 16) && (unint64_t v41 = sub_1A087AB2C((uint64_t)v99), (v42 & 1) != 0))
  {
    sub_1A0785268(*(void *)(a1 + 56) + 32 * v41, (uint64_t)&v100);
  }
  else
  {
    long long v100 = 0u;
    long long v101 = 0u;
  }
  sub_1A087B20C((uint64_t)v99);
  if (*((void *)&v101 + 1))
  {
    sub_1A07856F8((uint64_t *)&unk_1E94F9030);
    int v43 = swift_dynamicCast();
    uint64_t v44 = v97;
    if (!v43) {
      uint64_t v44 = 0;
    }
    uint64_t v84 = v44;
  }
  else
  {
    sub_1A0783C7C((uint64_t)&v100);
    uint64_t v84 = 0;
  }
  *(void *)&long long v100 = sub_1A09F3E18();
  *((void *)&v100 + 1) = v45;
  sub_1A09F4648();
  if (*(void *)(a1 + 16) && (unint64_t v46 = sub_1A087AB2C((uint64_t)v99), (v47 & 1) != 0))
  {
    sub_1A0785268(*(void *)(a1 + 56) + 32 * v46, (uint64_t)&v100);
  }
  else
  {
    long long v100 = 0u;
    long long v101 = 0u;
  }
  sub_1A087B20C((uint64_t)v99);
  if (*((void *)&v101 + 1))
  {
    int v48 = swift_dynamicCast();
    char v49 = v97;
    if (!v48) {
      char v49 = 2;
    }
  }
  else
  {
    sub_1A0783C7C((uint64_t)&v100);
    char v49 = 2;
  }
  char v83 = v49;
  *(void *)&long long v100 = sub_1A09F3E18();
  *((void *)&v100 + 1) = v50;
  sub_1A09F4648();
  if (*(void *)(a1 + 16) && (unint64_t v51 = sub_1A087AB2C((uint64_t)v99), (v52 & 1) != 0))
  {
    sub_1A0785268(*(void *)(a1 + 56) + 32 * v51, (uint64_t)&v100);
  }
  else
  {
    long long v100 = 0u;
    long long v101 = 0u;
  }
  sub_1A087B20C((uint64_t)v99);
  if (*((void *)&v101 + 1))
  {
    if (swift_dynamicCast()) {
      char v53 = v97;
    }
    else {
      char v53 = 2;
    }
  }
  else
  {
    sub_1A0783C7C((uint64_t)&v100);
    char v53 = 2;
  }
  *(void *)&long long v100 = sub_1A09F3E18();
  *((void *)&v100 + 1) = v54;
  sub_1A09F4648();
  if (*(void *)(a1 + 16) && (unint64_t v55 = sub_1A087AB2C((uint64_t)v99), (v56 & 1) != 0))
  {
    sub_1A0785268(*(void *)(a1 + 56) + 32 * v55, (uint64_t)&v100);
  }
  else
  {
    long long v100 = 0u;
    long long v101 = 0u;
  }
  sub_1A087B20C((uint64_t)v99);
  if (*((void *)&v101 + 1))
  {
    if (swift_dynamicCast()) {
      char v57 = v97;
    }
    else {
      char v57 = 2;
    }
  }
  else
  {
    sub_1A0783C7C((uint64_t)&v100);
    char v57 = 2;
  }
  *(void *)&long long v100 = sub_1A09F3E18();
  *((void *)&v100 + 1) = v58;
  sub_1A09F4648();
  if (*(void *)(a1 + 16) && (unint64_t v59 = sub_1A087AB2C((uint64_t)v99), (v60 & 1) != 0))
  {
    sub_1A0785268(*(void *)(a1 + 56) + 32 * v59, (uint64_t)&v100);
  }
  else
  {
    long long v100 = 0u;
    long long v101 = 0u;
  }
  sub_1A087B20C((uint64_t)v99);
  if (*((void *)&v101 + 1))
  {
    if (swift_dynamicCast()) {
      char v61 = v97;
    }
    else {
      char v61 = 2;
    }
  }
  else
  {
    sub_1A0783C7C((uint64_t)&v100);
    char v61 = 2;
  }
  *(void *)&long long v100 = sub_1A09F3E18();
  *((void *)&v100 + 1) = v62;
  sub_1A09F4648();
  if (*(void *)(a1 + 16) && (unint64_t v63 = sub_1A087AB2C((uint64_t)v99), (v64 & 1) != 0))
  {
    sub_1A0785268(*(void *)(a1 + 56) + 32 * v63, (uint64_t)&v100);
  }
  else
  {
    long long v100 = 0u;
    long long v101 = 0u;
  }
  sub_1A087B20C((uint64_t)v99);
  if (*((void *)&v101 + 1))
  {
    if (swift_dynamicCast()) {
      char v65 = v97;
    }
    else {
      char v65 = 2;
    }
  }
  else
  {
    sub_1A0783C7C((uint64_t)&v100);
    char v65 = 2;
  }
  *(void *)&long long v100 = sub_1A09F3E18();
  *((void *)&v100 + 1) = v66;
  sub_1A09F4648();
  if (*(void *)(a1 + 16) && (unint64_t v67 = sub_1A087AB2C((uint64_t)v99), (v68 & 1) != 0))
  {
    sub_1A0785268(*(void *)(a1 + 56) + 32 * v67, (uint64_t)&v100);
  }
  else
  {
    long long v100 = 0u;
    long long v101 = 0u;
  }
  sub_1A087B20C((uint64_t)v99);
  if (*((void *)&v101 + 1))
  {
    if (swift_dynamicCast()) {
      char v69 = v97;
    }
    else {
      char v69 = 2;
    }
  }
  else
  {
    sub_1A0783C7C((uint64_t)&v100);
    char v69 = 2;
  }
  *(void *)&long long v100 = sub_1A09F3E18();
  *((void *)&v100 + 1) = v70;
  sub_1A09F4648();
  if (*(void *)(a1 + 16) && (unint64_t v71 = sub_1A087AB2C((uint64_t)v99), (v72 & 1) != 0))
  {
    sub_1A0785268(*(void *)(a1 + 56) + 32 * v71, (uint64_t)&v100);
  }
  else
  {
    long long v100 = 0u;
    long long v101 = 0u;
  }
  sub_1A087B20C((uint64_t)v99);
  if (*((void *)&v101 + 1))
  {
    if (swift_dynamicCast()) {
      char v73 = v97;
    }
    else {
      char v73 = 2;
    }
  }
  else
  {
    sub_1A0783C7C((uint64_t)&v100);
    char v73 = 2;
  }
  *(void *)&long long v100 = sub_1A09F3E18();
  *((void *)&v100 + 1) = v74;
  sub_1A09F4648();
  if (*(void *)(a1 + 16) && (unint64_t v75 = sub_1A087AB2C((uint64_t)v99), (v76 & 1) != 0))
  {
    sub_1A0785268(*(void *)(a1 + 56) + 32 * v75, (uint64_t)&v100);
  }
  else
  {
    long long v100 = 0u;
    long long v101 = 0u;
  }
  sub_1A087B20C((uint64_t)v99);
  if (*((void *)&v101 + 1))
  {
    if (swift_dynamicCast()) {
      char v77 = v97;
    }
    else {
      char v77 = 2;
    }
  }
  else
  {
    sub_1A0783C7C((uint64_t)&v100);
    char v77 = 2;
  }
  *(void *)&long long v100 = sub_1A09F3E18();
  *((void *)&v100 + 1) = v78;
  sub_1A09F4648();
  if (*(void *)(a1 + 16) && (unint64_t v79 = sub_1A087AB2C((uint64_t)v99), (v80 & 1) != 0))
  {
    sub_1A0785268(*(void *)(a1 + 56) + 32 * v79, (uint64_t)&v100);
  }
  else
  {
    long long v100 = 0u;
    long long v101 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_1A087B20C((uint64_t)v99);
  if (*((void *)&v101 + 1))
  {
    uint64_t result = swift_dynamicCast();
    char v82 = v97;
    if (!result) {
      char v82 = 2;
    }
  }
  else
  {
    uint64_t result = sub_1A0783C7C((uint64_t)&v100);
    char v82 = 2;
  }
  *(void *)a2 = v96;
  *(void *)(a2 + 8) = v95;
  *(void *)(a2 + 16) = v94;
  *(void *)(a2 + 24) = v93;
  *(void *)(a2 + 32) = v92;
  *(unsigned char *)(a2 + 40) = v91;
  *(void *)(a2 + 48) = v90;
  *(unsigned char *)(a2 + 56) = v89;
  *(void *)(a2 + 64) = v88;
  *(unsigned char *)(a2 + 72) = v87;
  *(void *)(a2 + 80) = v86;
  *(void *)(a2 + 88) = v85;
  *(void *)(a2 + 96) = v84;
  *(unsigned char *)(a2 + 104) = v83;
  *(unsigned char *)(a2 + 105) = v53;
  *(unsigned char *)(a2 + 106) = v57;
  *(unsigned char *)(a2 + 107) = v61;
  *(unsigned char *)(a2 + 108) = v65;
  *(unsigned char *)(a2 + 109) = v69;
  *(unsigned char *)(a2 + 110) = v73;
  *(unsigned char *)(a2 + 111) = v77;
  *(unsigned char *)(a2 + 112) = v82;
  return result;
}

uint64_t sub_1A09311C0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x61487265646E6573 && a2 == 0xEC000000656C646ELL;
  if (v2 || (sub_1A09F4B28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x69537265646E6573 && a2 == 0xEB0000000044496DLL || (sub_1A09F4B28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000001A0A35C70 || (sub_1A09F4B28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001A0A35C90 || (sub_1A09F4B28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001A0A35CB0 || (sub_1A09F4B28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000001A0A35CD0 || (sub_1A09F4B28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000021 && a2 == 0x80000001A0A35CF0 || (sub_1A09F4B28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD00000000000001CLL && a2 == 0x80000001A0A35D20 || (sub_1A09F4B28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD00000000000001ELL && a2 == 0x80000001A0A35D40 || (sub_1A09F4B28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000021 && a2 == 0x80000001A0A35D60 || (sub_1A09F4B28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0xD000000000000020 && a2 == 0x80000001A0A35D90 || (sub_1A09F4B28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x80000001A0A35DC0 || (sub_1A09F4B28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x80000001A0A35DE0 || (sub_1A09F4B28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0xD00000000000001DLL && a2 == 0x80000001A0A35E00 || (sub_1A09F4B28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001A0A35E20 || (sub_1A09F4B28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else if (a1 == 0xD000000000000020 && a2 == 0x80000001A0A35E40)
  {
    swift_bridgeObjectRelease();
    return 15;
  }
  else
  {
    char v6 = sub_1A09F4B28();
    swift_bridgeObjectRelease();
    if (v6) {
      return 15;
    }
    else {
      return 16;
    }
  }
}

uint64_t sub_1A09317A0@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = sub_1A07856F8(&qword_1E94FC1A0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A086F45C(a1, a1[3]);
  sub_1A0930590();
  sub_1A09F4CA8();
  if (v2)
  {
    _s17IMSharedUtilities29RemoteIntentBroadcastEncodingVwxx_0((uint64_t)a1);
    return swift_bridgeObjectRelease();
  }
  else
  {
    char v62 = 0;
    uint64_t v9 = sub_1A09F4828();
    uint64_t v11 = v10;
    char v61 = 1;
    swift_bridgeObjectRetain();
    uint64_t v44 = sub_1A09F4828();
    uint64_t v45 = a2;
    char v60 = 2;
    uint64_t v13 = v12;
    swift_bridgeObjectRetain();
    uint64_t v14 = sub_1A09F4848();
    uint64_t v47 = v13;
    int v42 = v15;
    uint64_t v43 = v14;
    char v59 = 3;
    uint64_t v16 = sub_1A09F4848();
    int v41 = v17;
    char v58 = 4;
    uint64_t v18 = sub_1A09F4848();
    int v39 = v19;
    uint64_t v40 = v18;
    char v57 = 5;
    uint64_t v37 = sub_1A09F4828();
    uint64_t v38 = v16;
    uint64_t v46 = v20;
    swift_bridgeObjectRetain();
    uint64_t v21 = sub_1A094D0D8(6);
    char v56 = 7;
    swift_bridgeObjectRetain();
    int v36 = sub_1A09F4838();
    char v55 = 8;
    int v35 = sub_1A09F4838();
    char v54 = 9;
    int v34 = sub_1A09F4838();
    char v53 = 10;
    int v33 = sub_1A09F4838();
    char v52 = 11;
    int v32 = sub_1A09F4838();
    char v51 = 12;
    int v31 = sub_1A09F4838();
    char v50 = 13;
    int v30 = sub_1A09F4838();
    char v49 = 14;
    int v29 = sub_1A09F4838();
    char v48 = 15;
    char v22 = sub_1A09F4838();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    _s17IMSharedUtilities29RemoteIntentBroadcastEncodingVwxx_0((uint64_t)a1);
    swift_bridgeObjectRelease();
    uint64_t v23 = v46;
    swift_bridgeObjectRelease();
    uint64_t v24 = v47;
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v26 = v44;
    char v27 = v45;
    *uint64_t v45 = v9;
    v27[1] = v11;
    long long v27[2] = v26;
    v27[3] = v24;
    v27[4] = v43;
    *((unsigned char *)v27 + 40) = v42 & 1;
    v27[6] = v38;
    *((unsigned char *)v27 + 56) = v41 & 1;
    v27[8] = v40;
    *((unsigned char *)v27 + 72) = v39 & 1;
    v27[10] = v37;
    v27[11] = v23;
    v27[12] = v21;
    *((unsigned char *)v27 + 104) = v36;
    *((unsigned char *)v27 + 105) = v35;
    *((unsigned char *)v27 + 106) = v34;
    *((unsigned char *)v27 + 107) = v33;
    *((unsigned char *)v27 + 108) = v32;
    *((unsigned char *)v27 + 109) = v31;
    *((unsigned char *)v27 + 110) = v30;
    *((unsigned char *)v27 + 111) = v29;
    *((unsigned char *)v27 + 112) = v22;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for RemoteIntentTranscoderUserInfo.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF1) {
    goto LABEL_17;
  }
  if (a2 + 15 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 15) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 15;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 15;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 15;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x10;
  int v8 = v6 - 16;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for RemoteIntentTranscoderUserInfo.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 15 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 15) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF1) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF0)
  {
    unsigned int v6 = ((a2 - 241) >> 8) + 1;
    *uint64_t result = a2 + 15;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A0931F50);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 15;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RemoteIntentTranscoderUserInfo.CodingKeys()
{
  return &type metadata for RemoteIntentTranscoderUserInfo.CodingKeys;
}

unint64_t sub_1A0931F8C()
{
  unint64_t result = qword_1E94FC1B0;
  if (!qword_1E94FC1B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FC1B0);
  }
  return result;
}

unint64_t sub_1A0931FE4()
{
  unint64_t result = qword_1E94FC1B8;
  if (!qword_1E94FC1B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FC1B8);
  }
  return result;
}

unint64_t sub_1A093203C()
{
  unint64_t result = qword_1E94FC1C0;
  if (!qword_1E94FC1C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FC1C0);
  }
  return result;
}

ValueMetadata *type metadata accessor for ChatDatabaseUpdatedStampBroadcast()
{
  return &type metadata for ChatDatabaseUpdatedStampBroadcast;
}

uint64_t sub_1A09320A0()
{
  return 0x706D617473;
}

uint64_t sub_1A09320B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x706D617473 && a2 == 0xE500000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1A09F4B28();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1A0932144(uint64_t a1)
{
  unint64_t v2 = sub_1A09325CC();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A0932180(uint64_t a1)
{
  unint64_t v2 = sub_1A09325CC();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A09321BC()
{
  uint64_t v0 = qword_1E94FC1C8;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_1A09321F4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = sub_1A07856F8(&qword_1E94FC1E8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  int v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A086F45C(a1, a1[3]);
  sub_1A09325CC();
  sub_1A09F4CA8();
  if (v2) {
    return _s17IMSharedUtilities29RemoteIntentBroadcastEncodingVwxx_0((uint64_t)a1);
  }
  uint64_t v9 = sub_1A09F48D8();
  uint64_t v11 = v10;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t result = _s17IMSharedUtilities29RemoteIntentBroadcastEncodingVwxx_0((uint64_t)a1);
  *a2 = v9;
  a2[1] = v11;
  return result;
}

uint64_t sub_1A093236C(void *a1)
{
  uint64_t v2 = sub_1A07856F8(&qword_1E94FC1F8);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A086F45C(a1, a1[3]);
  sub_1A09325CC();
  sub_1A09F4CC8();
  sub_1A09F4A28();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

unint64_t sub_1A09324A4(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_1A08BBE38();
  unint64_t result = sub_1A08BBDE4();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1A09324D4(uint64_t a1)
{
  unint64_t result = sub_1A09324FC();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1A09324FC()
{
  unint64_t result = qword_1E94FC1D8;
  if (!qword_1E94FC1D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FC1D8);
  }
  return result;
}

unint64_t sub_1A0932550(uint64_t a1)
{
  unint64_t result = sub_1A0932578();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1A0932578()
{
  unint64_t result = qword_1E94FC1E0;
  if (!qword_1E94FC1E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FC1E0);
  }
  return result;
}

unint64_t sub_1A09325CC()
{
  unint64_t result = qword_1E94FC1F0;
  if (!qword_1E94FC1F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FC1F0);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ChatDatabaseUpdatedStampBroadcast.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1A09326BCLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for ChatDatabaseUpdatedStampBroadcast.CodingKeys()
{
  return &type metadata for ChatDatabaseUpdatedStampBroadcast.CodingKeys;
}

unint64_t sub_1A09326F8()
{
  unint64_t result = qword_1E94FC200;
  if (!qword_1E94FC200)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FC200);
  }
  return result;
}

unint64_t sub_1A0932750()
{
  unint64_t result = qword_1E94FC208;
  if (!qword_1E94FC208)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FC208);
  }
  return result;
}

unint64_t sub_1A09327A8()
{
  unint64_t result = qword_1E94FC210;
  if (!qword_1E94FC210)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FC210);
  }
  return result;
}

uint64_t destroy for UpdatePendingNicknameUpdatesBroadcast()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *_s17IMSharedUtilities37UpdatePendingNicknameUpdatesBroadcastVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for UpdatePendingNicknameUpdatesBroadcast(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for UpdatePendingNicknameUpdatesBroadcast(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for UpdatePendingNicknameUpdatesBroadcast()
{
  return &type metadata for UpdatePendingNicknameUpdatesBroadcast;
}

unint64_t sub_1A093296C(char a1)
{
  if (!a1) {
    return 0xD000000000000016;
  }
  if (a1 == 1) {
    return 0xD000000000000010;
  }
  return 0xD000000000000011;
}

uint64_t sub_1A09329C4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v13 = a3;
  uint64_t v8 = sub_1A07856F8(&qword_1E94FC248);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A086F45C(a1, a1[3]);
  sub_1A0933228();
  sub_1A09F4CC8();
  uint64_t v15 = a2;
  char v14 = 0;
  sub_1A07856F8(&qword_1E94F9D00);
  sub_1A0899F60(&qword_1E94F9D18);
  sub_1A09F4A78();
  if (!v4)
  {
    uint64_t v15 = v13;
    char v14 = 1;
    sub_1A09F4A78();
    uint64_t v15 = a4;
    char v14 = 2;
    sub_1A09F4A78();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

unint64_t sub_1A0932BB8()
{
  return sub_1A093296C(*v0);
}

uint64_t sub_1A0932BC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A0932E10(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A0932BE8(uint64_t a1)
{
  unint64_t v2 = sub_1A0933228();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A0932C24(uint64_t a1)
{
  unint64_t v2 = sub_1A0933228();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A0932C60()
{
  uint64_t v0 = qword_1E94FC218;
  swift_bridgeObjectRetain();
  return v0;
}

void *sub_1A0932C98@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t result = sub_1A0932F50(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
  }
  return result;
}

uint64_t sub_1A0932CC8(void *a1)
{
  return sub_1A09329C4(a1, *v1, v1[1], v1[2]);
}

unint64_t sub_1A0932CE8(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_1A08BCB58();
  unint64_t result = sub_1A08BCB04();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1A0932D18(uint64_t a1)
{
  unint64_t result = sub_1A0932D40();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1A0932D40()
{
  unint64_t result = qword_1E94FC228;
  if (!qword_1E94FC228)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FC228);
  }
  return result;
}

unint64_t sub_1A0932D94(uint64_t a1)
{
  unint64_t result = sub_1A0932DBC();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1A0932DBC()
{
  unint64_t result = qword_1E94FC230;
  if (!qword_1E94FC230)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FC230);
  }
  return result;
}

uint64_t sub_1A0932E10(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000016 && a2 == 0x80000001A0A35EB0 || (sub_1A09F4B28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001A0A35ED0 || (sub_1A09F4B28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001A0A35EF0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v5 = sub_1A09F4B28();
    swift_bridgeObjectRelease();
    if (v5) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

void *sub_1A0932F50(void *a1)
{
  uint64_t v3 = sub_1A07856F8(&qword_1E94FC238);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A086F45C(a1, a1[3]);
  sub_1A0933228();
  sub_1A09F4CA8();
  if (v1)
  {
    _s17IMSharedUtilities29RemoteIntentBroadcastEncodingVwxx_0((uint64_t)a1);
  }
  else
  {
    sub_1A07856F8(&qword_1E94F9D00);
    char v10 = 0;
    sub_1A0899F60(&qword_1E94F9D08);
    sub_1A09F4928();
    uint64_t v8 = v11;
    char v10 = 1;
    swift_bridgeObjectRetain();
    sub_1A09F4928();
    uint64_t v9 = v8;
    char v10 = 2;
    swift_bridgeObjectRetain();
    sub_1A09F4928();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    swift_bridgeObjectRetain();
    _s17IMSharedUtilities29RemoteIntentBroadcastEncodingVwxx_0((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    a1 = v9;
    swift_bridgeObjectRelease();
  }
  return a1;
}

unint64_t sub_1A0933228()
{
  unint64_t result = qword_1E94FC240;
  if (!qword_1E94FC240)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FC240);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for UpdatePendingNicknameUpdatesBroadcast.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A0933348);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for UpdatePendingNicknameUpdatesBroadcast.CodingKeys()
{
  return &type metadata for UpdatePendingNicknameUpdatesBroadcast.CodingKeys;
}

unint64_t sub_1A0933384()
{
  unint64_t result = qword_1E94FC250;
  if (!qword_1E94FC250)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FC250);
  }
  return result;
}

unint64_t sub_1A09333DC()
{
  unint64_t result = qword_1E94FC258;
  if (!qword_1E94FC258)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FC258);
  }
  return result;
}

unint64_t sub_1A0933434()
{
  unint64_t result = qword_1E94FC260;
  if (!qword_1E94FC260)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FC260);
  }
  return result;
}

ValueMetadata *type metadata accessor for LastFailedMessageDateChangedBroadcast()
{
  return &type metadata for LastFailedMessageDateChangedBroadcast;
}

uint64_t sub_1A0933498()
{
  return 0x614464656C696166;
}

uint64_t sub_1A09334B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x614464656C696166 && a2 == 0xEA00000000006574)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1A09F4B28();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1A0933558(uint64_t a1)
{
  unint64_t v2 = sub_1A09339C0();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A0933594(uint64_t a1)
{
  unint64_t v2 = sub_1A09339C0();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A09335D0()
{
  uint64_t v0 = qword_1E94FC268;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_1A0933608@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = sub_1A07856F8(&qword_1E94FC288);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A086F45C(a1, a1[3]);
  sub_1A09339C0();
  sub_1A09F4CA8();
  if (v2) {
    return _s17IMSharedUtilities29RemoteIntentBroadcastEncodingVwxx_0((uint64_t)a1);
  }
  uint64_t v9 = sub_1A09F4948();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t result = _s17IMSharedUtilities29RemoteIntentBroadcastEncodingVwxx_0((uint64_t)a1);
  *a2 = v9;
  return result;
}

uint64_t sub_1A0933764(void *a1)
{
  uint64_t v2 = sub_1A07856F8(&qword_1E94FC298);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A086F45C(a1, a1[3]);
  sub_1A09339C0();
  sub_1A09F4CC8();
  sub_1A09F4A98();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

unint64_t sub_1A0933898(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_1A08BBEE0();
  unint64_t result = sub_1A08BBE8C();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1A09338C8(uint64_t a1)
{
  unint64_t result = sub_1A09338F0();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1A09338F0()
{
  unint64_t result = qword_1E94FC278;
  if (!qword_1E94FC278)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FC278);
  }
  return result;
}

unint64_t sub_1A0933944(uint64_t a1)
{
  unint64_t result = sub_1A093396C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1A093396C()
{
  unint64_t result = qword_1E94FC280;
  if (!qword_1E94FC280)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FC280);
  }
  return result;
}

unint64_t sub_1A09339C0()
{
  unint64_t result = qword_1E94FC290;
  if (!qword_1E94FC290)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FC290);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for LastFailedMessageDateChangedBroadcast.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1A0933AB0);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for LastFailedMessageDateChangedBroadcast.CodingKeys()
{
  return &type metadata for LastFailedMessageDateChangedBroadcast.CodingKeys;
}

unint64_t sub_1A0933AEC()
{
  unint64_t result = qword_1E94FC2A0;
  if (!qword_1E94FC2A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FC2A0);
  }
  return result;
}

unint64_t sub_1A0933B44()
{
  unint64_t result = qword_1E94FC2A8;
  if (!qword_1E94FC2A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FC2A8);
  }
  return result;
}

unint64_t sub_1A0933B9C()
{
  unint64_t result = qword_1E94FC2B0;
  if (!qword_1E94FC2B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FC2B0);
  }
  return result;
}

uint64_t destroy for LoadPagedHistoryAroundMessageRequest()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for LoadPagedHistoryAroundMessageRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  uint64_t v5 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for LoadPagedHistoryAroundMessageRequest(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for LoadPagedHistoryAroundMessageRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  uint64_t v5 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for LoadPagedHistoryAroundMessageRequest()
{
  return &type metadata for LoadPagedHistoryAroundMessageRequest;
}

ValueMetadata *type metadata accessor for LoadRecoverableMessagesMetadataRequest()
{
  return &type metadata for LoadRecoverableMessagesMetadataRequest;
}

uint64_t *sub_1A0933E54(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a1;
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    char v10 = (char *)a2 + v8;
    uint64_t v11 = sub_1A09F3478();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    uint64_t v13 = *(int *)(a3 + 24);
    char v14 = (uint64_t *)((char *)v7 + v13);
    uint64_t v15 = (uint64_t *)((char *)a2 + v13);
    uint64_t v16 = v15[1];
    *char v14 = *v15;
    v14[1] = v16;
    swift_bridgeObjectRetain();
  }
  return v7;
}

uint64_t sub_1A0933F60(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_1A09F3478();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);

  return swift_bridgeObjectRelease();
}

void *sub_1A0933FF0(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1A09F3478();
  char v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
  swift_bridgeObjectRetain();
  v10(v7, v8, v9);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = (void *)((char *)a1 + v11);
  uint64_t v13 = (void *)((char *)a2 + v11);
  uint64_t v14 = v13[1];
  *uint64_t v12 = *v13;
  v12[1] = v14;
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_1A09340B0(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1A09F3478();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = (void *)((char *)a1 + v10);
  uint64_t v12 = (void *)((char *)a2 + v10);
  *uint64_t v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *sub_1A0934178(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1A09F3478();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  *(_OWORD *)((char *)a1 + *(int *)(a3 + 24)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 24));
  return a1;
}

void *sub_1A0934210(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1A09F3478();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = (void *)((char *)a1 + v10);
  uint64_t v12 = (void *)((char *)a2 + v10);
  uint64_t v14 = *v12;
  uint64_t v13 = v12[1];
  *uint64_t v11 = v14;
  v11[1] = v13;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1A09342C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1A09342D4);
}

uint64_t sub_1A09342D4(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1A09F3478();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1A0934384(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1A0934398);
}

void *sub_1A0934398(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *unint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_1A09F3478();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 20);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for MoveMessagesInChatsWithGUIDsRequest()
{
  uint64_t result = qword_1E94FC2F8;
  if (!qword_1E94FC2F8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1A093448C()
{
  uint64_t result = sub_1A09F3478();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t destroy for LoadChatHistoryRequest()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for LoadChatHistoryRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  uint64_t v4 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v4;
  uint64_t v5 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v5;
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for LoadChatHistoryRequest(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for LoadChatHistoryRequest(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for LoadChatHistoryRequest()
{
  return &type metadata for LoadChatHistoryRequest;
}

uint64_t sub_1A09347C4(uint64_t a1)
{
  *(void *)(v2 + 232) = a1;
  *(void *)(v2 + 240) = v1;
  return MEMORY[0x1F4188298](sub_1A09347E4, 0, 0);
}

uint64_t sub_1A09347E4()
{
  uint64_t v1 = v0[30];
  unsigned int v12 = *(unsigned __int8 *)(v1 + 24);
  uint64_t v11 = sub_1A09F3DE8();
  v0[31] = v11;
  uint64_t v10 = sub_1A09F4068();
  v0[32] = v10;
  uint64_t v2 = sub_1A09F4068();
  v0[33] = v2;
  sub_1A0878700(v1 + 48, (uint64_t)(v0 + 17));
  sub_1A0878700((uint64_t)(v0 + 17), (uint64_t)(v0 + 15));
  if (v0[16]) {
    uint64_t v3 = sub_1A09F3DE8();
  }
  else {
    uint64_t v3 = 0;
  }
  v0[34] = v3;
  sub_1A0878700(v0[30] + 64, (uint64_t)(v0 + 27));
  sub_1A0878700((uint64_t)(v0 + 27), (uint64_t)(v0 + 25));
  if (v0[26]) {
    uint64_t v4 = sub_1A09F3DE8();
  }
  else {
    uint64_t v4 = 0;
  }
  v0[35] = v4;
  sub_1A0878700(v0[30] + 80, (uint64_t)(v0 + 21));
  sub_1A0878700((uint64_t)(v0 + 21), (uint64_t)(v0 + 19));
  if (v0[20]) {
    uint64_t v5 = sub_1A09F3DE8();
  }
  else {
    uint64_t v5 = 0;
  }
  v0[36] = v5;
  uint64_t v6 = (void *)v0[29];
  uint64_t v7 = *(void *)(v0[30] + 40);
  v0[2] = v0;
  v0[7] = v0 + 23;
  v0[3] = sub_1A0934A28;
  uint64_t v8 = swift_continuation_init();
  v0[10] = MEMORY[0x1E4F143A8];
  v0[11] = 0x40000000;
  v0[12] = sub_1A0934BAC;
  v0[13] = &unk_1E5A0FD88;
  v0[14] = v8;
  objc_msgSend(v6, sel_loadHistoryForChatWithGUID_chatIdentifiers_style_services_limit_beforeGUID_afterGUID_threadIdentifier_reply_, v11, v10, v12, v2, v7, v3, v4, v5, v0 + 10);
  return MEMORY[0x1F41881E8](v0 + 2);
}

uint64_t sub_1A0934A28()
{
  return MEMORY[0x1F4188298](sub_1A0934B08, 0, 0);
}

uint64_t sub_1A0934B08()
{
  uint64_t v1 = *(void **)(v0 + 280);
  uint64_t v3 = *(void **)(v0 + 264);
  uint64_t v2 = *(void **)(v0 + 272);
  uint64_t v5 = *(void **)(v0 + 248);
  uint64_t v4 = *(void **)(v0 + 256);
  uint64_t v7 = *(void *)(v0 + 184);
  uint64_t v6 = *(void *)(v0 + 192);

  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
  return v8(v7, v6);
}

uint64_t sub_1A0934BAC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  sub_1A07856F8((uint64_t *)&unk_1E94F9030);
  uint64_t v2 = sub_1A09F4078();
  uint64_t v3 = sub_1A09F4078();
  uint64_t v4 = *(uint64_t **)(*(void *)(v1 + 64) + 40);
  *uint64_t v4 = v2;
  v4[1] = v3;

  return swift_continuation_resume();
}

unint64_t sub_1A0934C38(char a1)
{
  unint64_t result = 1684632935;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6E65644974616863;
      break;
    case 2:
      unint64_t result = 0x656C797473;
      break;
    case 3:
      unint64_t result = 0x7365636976726573;
      break;
    case 4:
      unint64_t result = 0x74696D696CLL;
      break;
    case 5:
      unint64_t result = 0x554765726F666562;
      break;
    case 6:
      unint64_t result = 0x4955477265746661;
      break;
    case 7:
      unint64_t result = 0xD000000000000010;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A0934D44(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_1A07856F8(&qword_1E94FC500);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A086F45C(a1, a1[3]);
  sub_1A0939EC0();
  sub_1A09F4CC8();
  LOBYTE(v11) = 0;
  sub_1A09F4A28();
  if (!v2)
  {
    uint64_t v11 = *(void *)(v3 + 16);
    HIBYTE(v10) = 1;
    sub_1A07856F8(&qword_1EB4A5610);
    sub_1A0879F5C(&qword_1E94F9140);
    sub_1A09F4A78();
    LOBYTE(v11) = 2;
    sub_1A09F4AA8();
    uint64_t v11 = *(void *)(v3 + 32);
    HIBYTE(v10) = 3;
    sub_1A09F4A78();
    LOBYTE(v11) = 4;
    sub_1A09F4A58();
    LOBYTE(v11) = 5;
    sub_1A09F4978();
    LOBYTE(v11) = 6;
    sub_1A09F4978();
    LOBYTE(v11) = 7;
    sub_1A09F4978();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_1A0934FF0()
{
  return sub_1A0934C38(*v0);
}

uint64_t sub_1A0934FF8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A0937F6C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A0935020(uint64_t a1)
{
  unint64_t v2 = sub_1A0939EC0();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A093505C(uint64_t a1)
{
  unint64_t v2 = sub_1A0939EC0();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A0935098()
{
  uint64_t v0 = qword_1E94FC2B8;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_1A09350D0(uint64_t a1, uint64_t a2)
{
  *(void *)(v3 + 112) = a1;
  long long v5 = v2[3];
  *(_OWORD *)(v3 + 48) = v2[2];
  *(_OWORD *)(v3 + 64) = v5;
  long long v6 = v2[5];
  *(_OWORD *)(v3 + 80) = v2[4];
  *(_OWORD *)(v3 + 96) = v6;
  long long v7 = v2[1];
  *(_OWORD *)(v3 + 16) = *v2;
  *(_OWORD *)(v3 + 32) = v7;
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v3 + 120) = v8;
  *uint64_t v8 = v3;
  v8[1] = sub_1A0924690;
  v8[29] = a2;
  v8[30] = v3 + 16;
  return MEMORY[0x1F4188298](sub_1A09347E4, 0, 0);
}

double sub_1A09351A4@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  sub_1A09382D0(a1, (uint64_t *)v8);
  if (!v2)
  {
    long long v5 = v8[3];
    a2[2] = v8[2];
    a2[3] = v5;
    long long v6 = v8[5];
    a2[4] = v8[4];
    a2[5] = v6;
    double result = *(double *)v8;
    long long v7 = v8[1];
    *a2 = v8[0];
    a2[1] = v7;
  }
  return result;
}

uint64_t sub_1A09351F0(void *a1)
{
  return sub_1A0934D44(a1);
}

uint64_t sub_1A0935208(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A093641C(a1, a2, a3, (uint64_t (*)(void))sub_1A08BDAB8, (uint64_t (*)(void))sub_1A08BDA64);
}

unint64_t sub_1A0935234(uint64_t a1)
{
  unint64_t result = sub_1A093525C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1A093525C()
{
  unint64_t result = qword_1E94FC308;
  if (!qword_1E94FC308)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FC308);
  }
  return result;
}

uint64_t sub_1A09352B0(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = sub_1A07856F8(&qword_1E94FC438);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A086F45C(a1, a1[3]);
  sub_1A0938B9C();
  sub_1A09F4CC8();
  uint64_t v14 = a2;
  char v13 = 0;
  sub_1A07856F8(&qword_1E94FC418);
  sub_1A0792558(&qword_1E94FC440, &qword_1E94FC418);
  sub_1A09F4A78();
  if (!v3)
  {
    uint64_t v14 = a3;
    char v13 = 1;
    sub_1A07856F8(&qword_1E94FC428);
    sub_1A0792558(&qword_1E94FC448, &qword_1E94FC428);
    sub_1A09F4A78();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

unint64_t sub_1A09354A4()
{
  if (*v0) {
    return 0xD00000000000001ALL;
  }
  else {
    return 0xD000000000000016;
  }
}

uint64_t sub_1A09354E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A0938840(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A093550C(uint64_t a1)
{
  unint64_t v2 = sub_1A0938B9C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A0935548(uint64_t a1)
{
  unint64_t v2 = sub_1A0938B9C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A0935584@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

unint64_t sub_1A09355C0@<X0>(uint64_t *a1@<X8>)
{
  sub_1A07856F8(&qword_1E94F9B58);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1A0A08A20;
  uint64_t v3 = MEMORY[0x1E4FBC860];
  *(void *)(v2 + 32) = sub_1A08D733C(MEMORY[0x1E4FBC860]);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1A0A08A20;
  unint64_t result = sub_1A08D733C(v3);
  *(void *)(v4 + 32) = result;
  *a1 = v2;
  a1[1] = v4;
  return result;
}

uint64_t sub_1A0935660@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1A093892C(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
  }
  return result;
}

uint64_t sub_1A093568C(void *a1)
{
  return sub_1A09352B0(a1, *v1, v1[1]);
}

uint64_t sub_1A09356A8(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_1A07856F8(&qword_1E94FC4E0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1A086F45C(a1, a1[3]);
  sub_1A0939D68();
  sub_1A09F4CC8();
  uint64_t v11 = *v3;
  v10[7] = 0;
  sub_1A07856F8(&qword_1EB4A5610);
  sub_1A0879F5C(&qword_1E94F9140);
  sub_1A09F4A78();
  if (!v2)
  {
    type metadata accessor for MoveMessagesInChatsWithGUIDsRequest();
    v10[6] = 1;
    sub_1A09F3478();
    sub_1A0939E7C(&qword_1E94FC4E8);
    sub_1A09F4A78();
    v10[5] = 2;
    sub_1A09F4A28();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1A09358BC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v25 = a2;
  uint64_t v26 = sub_1A07856F8(&qword_1E94FC4C8);
  uint64_t v4 = *(void *)(v26 - 8);
  MEMORY[0x1F4188790](v26);
  uint64_t v6 = (char *)v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for MoveMessagesInChatsWithGUIDsRequest();
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A086F45C(a1, a1[3]);
  sub_1A0939D68();
  sub_1A09F4CA8();
  if (v2) {
    return _s17IMSharedUtilities29RemoteIntentBroadcastEncodingVwxx_0((uint64_t)a1);
  }
  uint64_t v23 = v7;
  uint64_t v24 = v4;
  sub_1A07856F8(&qword_1EB4A5610);
  char v29 = 0;
  sub_1A0879F5C(&qword_1E94F9128);
  uint64_t v10 = v26;
  sub_1A09F4928();
  char v22 = v9;
  *(void *)uint64_t v9 = v30;
  uint64_t v11 = sub_1A09F3478();
  v21[1] = v21;
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v28 = 1;
  sub_1A0939E7C(&qword_1E94FC4D8);
  sub_1A09F4928();
  v21[0] = v12;
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(&v22[*(int *)(v23 + 20)], v14, v11);
  char v27 = 2;
  uint64_t v15 = sub_1A09F48D8();
  uint64_t v17 = v16;
  (*(void (**)(char *, uint64_t))(v24 + 8))(v6, v10);
  uint64_t v18 = (uint64_t)v22;
  int v19 = (uint64_t *)&v22[*(int *)(v23 + 24)];
  *int v19 = v15;
  v19[1] = v17;
  sub_1A0939DBC(v18, v25);
  _s17IMSharedUtilities29RemoteIntentBroadcastEncodingVwxx_0((uint64_t)a1);
  return sub_1A0939E20(v18);
}

uint64_t sub_1A0935CC0()
{
  uint64_t v1 = 0x61446574656C6564;
  if (*v0 != 1) {
    uint64_t v1 = 0x44497972657571;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x4449554774616863;
  }
}

uint64_t sub_1A0935D24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A0938C98(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A0935D4C(uint64_t a1)
{
  unint64_t v2 = sub_1A0939D68();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A0935D88(uint64_t a1)
{
  unint64_t v2 = sub_1A0939D68();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A0935DC4()
{
  uint64_t v0 = qword_1E94FC2C8;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_1A0935DFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[3] = v3;
  v4[4] = a3;
  v4[2] = a2;
  return MEMORY[0x1F4188298](sub_1A0924A24, 0, 0);
}

uint64_t sub_1A0935E20@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1A09358BC(a1, a2);
}

uint64_t sub_1A0935E38(void *a1)
{
  return sub_1A09356A8(a1);
}

uint64_t sub_1A0935E50(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_1A0939CCC(&qword_1E94FAD08, (void (*)(uint64_t))type metadata accessor for MoveMessagesInChatsWithGUIDsRequest);
  uint64_t result = sub_1A0939CCC(&qword_1E94FAD00, (void (*)(uint64_t))type metadata accessor for MoveMessagesInChatsWithGUIDsRequest);
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1A0935ED4(uint64_t a1)
{
  uint64_t result = sub_1A0939CCC(&qword_1E94FC310, (void (*)(uint64_t))type metadata accessor for MoveMessagesInChatsWithGUIDsRequest);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1A0935F2C(uint64_t a1)
{
  unint64_t v2 = sub_1A0938BF0();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A0935F68(uint64_t a1)
{
  unint64_t v2 = sub_1A0938BF0();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A0935FA4(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1A0936588(a1, a2, a3, &qword_1E94FC458, (void (*)(void))sub_1A0938BF0);
}

uint64_t sub_1A0935FE0()
{
  return 0x44497972657571;
}

uint64_t sub_1A0935FF8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x44497972657571 && a2 == 0xE700000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1A09F4B28();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1A0936090(uint64_t a1)
{
  unint64_t v2 = sub_1A0939D14();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A09360CC(uint64_t a1)
{
  unint64_t v2 = sub_1A0939D14();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A0936108()
{
  uint64_t v0 = qword_1E94FC2D8;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_1A0936140@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = sub_1A07856F8(&qword_1E94FC4B0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A086F45C(a1, a1[3]);
  sub_1A0939D14();
  sub_1A09F4CA8();
  if (v2) {
    return _s17IMSharedUtilities29RemoteIntentBroadcastEncodingVwxx_0((uint64_t)a1);
  }
  uint64_t v9 = sub_1A09F48D8();
  uint64_t v11 = v10;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t result = _s17IMSharedUtilities29RemoteIntentBroadcastEncodingVwxx_0((uint64_t)a1);
  *a2 = v9;
  a2[1] = v11;
  return result;
}

uint64_t sub_1A09362B8(void *a1)
{
  uint64_t v2 = sub_1A07856F8(&qword_1E94FC4C0);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A086F45C(a1, a1[3]);
  sub_1A0939D14();
  sub_1A09F4CC8();
  sub_1A09F4A28();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_1A09363F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A093641C(a1, a2, a3, (uint64_t (*)(void))sub_1A08BD728, (uint64_t (*)(void))sub_1A08BD6D4);
}

uint64_t sub_1A093641C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t (*a5)(void))
{
  *(void *)(a1 + 8) = a4();
  uint64_t result = a5();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1A0936458(uint64_t a1)
{
  unint64_t result = sub_1A0936480();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1A0936480()
{
  unint64_t result = qword_1E94FC318;
  if (!qword_1E94FC318)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FC318);
  }
  return result;
}

uint64_t sub_1A09364D4(uint64_t a1)
{
  unint64_t v2 = sub_1A0938C44();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A0936510(uint64_t a1)
{
  unint64_t v2 = sub_1A0938C44();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A093654C(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1A0936588(a1, a2, a3, &qword_1E94FC468, (void (*)(void))sub_1A0938C44);
}

uint64_t sub_1A0936588(void *a1, uint64_t a2, uint64_t a3, uint64_t *a4, void (*a5)(void))
{
  uint64_t v7 = sub_1A07856F8(a4);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A086F45C(a1, a1[3]);
  a5();
  sub_1A09F4CC8();
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_1A09366A8(uint64_t a1)
{
  *(void *)(v2 + 176) = a1;
  *(void *)(v2 + 184) = v1;
  return MEMORY[0x1F4188298](sub_1A09366C8, 0, 0);
}

uint64_t sub_1A09366C8()
{
  uint64_t v1 = v0[23];
  uint64_t v13 = sub_1A09F3DE8();
  v0[24] = v13;
  uint64_t v12 = sub_1A09F3DE8();
  v0[25] = v12;
  uint64_t v2 = sub_1A09F4068();
  v0[26] = v2;
  uint64_t v3 = sub_1A09F4068();
  v0[27] = v3;
  sub_1A0878700(v1 + 72, (uint64_t)(v0 + 20));
  sub_1A0878700((uint64_t)(v0 + 20), (uint64_t)(v0 + 18));
  if (v0[19]) {
    uint64_t v4 = sub_1A09F3DE8();
  }
  else {
    uint64_t v4 = 0;
  }
  v0[28] = v4;
  uint64_t v6 = (void *)v0[22];
  uint64_t v5 = v0[23];
  uint64_t v7 = *(unsigned __int8 *)(v5 + 40);
  uint64_t v9 = *(void *)(v5 + 56);
  uint64_t v8 = *(void *)(v5 + 64);
  v0[2] = v0;
  v0[7] = v0 + 15;
  v0[3] = sub_1A0936898;
  uint64_t v10 = swift_continuation_init();
  v0[10] = MEMORY[0x1E4F143A8];
  v0[11] = 0x40000000;
  v0[12] = sub_1A0936A30;
  v0[13] = &unk_1E5A0FD10;
  v0[14] = v10;
  objc_msgSend(v6, sel_loadPagedHistoryAroundMessageWithGUID_chatGUID_chatIdentifiers_style_services_numberOfMessagesBefore_numberOfMessagesAfter_threadIdentifier_reply_, v13, v12, v2, v7, v3, v9, v8, v4, v0 + 10);
  return MEMORY[0x1F41881E8](v0 + 2);
}

uint64_t sub_1A0936898()
{
  return MEMORY[0x1F4188298](sub_1A0936978, 0, 0);
}

uint64_t sub_1A0936978()
{
  uint64_t v1 = *(void **)(v0 + 216);
  uint64_t v3 = *(void **)(v0 + 200);
  uint64_t v2 = *(void **)(v0 + 208);
  uint64_t v4 = *(void **)(v0 + 192);
  uint64_t v6 = *(void *)(v0 + 120);
  uint64_t v5 = *(void *)(v0 + 128);
  unsigned int v7 = *(unsigned __int8 *)(v0 + 136);
  int v8 = *(unsigned __int8 *)(v0 + 137);

  if (v8) {
    int v9 = 256;
  }
  else {
    int v9 = 0;
  }
  uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, void))(v0 + 8);
  return v10(v6, v5, v9 | v7);
}

uint64_t sub_1A0936A30(uint64_t a1, uint64_t a2, uint64_t a3, char a4, char a5)
{
  uint64_t v7 = *(void *)(a1 + 32);
  sub_1A07856F8((uint64_t *)&unk_1E94F9030);
  uint64_t v8 = sub_1A09F4078();
  uint64_t v9 = sub_1A09F4078();
  uint64_t v10 = *(void *)(*(void *)(v7 + 64) + 40);
  *(void *)uint64_t v10 = v8;
  *(void *)(v10 + 8) = v9;
  *(unsigned char *)(v10 + 16) = a4;
  *(unsigned char *)(v10 + 17) = a5;

  return swift_continuation_resume();
}

unint64_t sub_1A0936AD4(char a1)
{
  unint64_t result = 0x476567617373656DLL;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x4449554774616863;
      break;
    case 2:
      unint64_t result = 0x6E65644974616863;
      break;
    case 3:
      unint64_t result = 0x6C79745374616863;
      break;
    case 4:
      unint64_t result = 0x7365636976726573;
      break;
    case 5:
      unint64_t result = 0xD000000000000016;
      break;
    case 6:
      unint64_t result = 0xD000000000000015;
      break;
    case 7:
      unint64_t result = 0xD000000000000010;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A0936C00(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_1A07856F8(&qword_1E94FC4A8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A086F45C(a1, a1[3]);
  sub_1A0939C78();
  sub_1A09F4CC8();
  LOBYTE(v11) = 0;
  sub_1A09F4A28();
  if (!v2)
  {
    LOBYTE(v11) = 1;
    sub_1A09F4A28();
    uint64_t v11 = *(void *)(v3 + 32);
    HIBYTE(v10) = 2;
    sub_1A07856F8(&qword_1EB4A5610);
    sub_1A0879F5C(&qword_1E94F9140);
    sub_1A09F4A78();
    LOBYTE(v11) = *(unsigned char *)(v3 + 40);
    HIBYTE(v10) = 3;
    type metadata accessor for IMChatStyle(0);
    sub_1A0939CCC(&qword_1E94FB828, type metadata accessor for IMChatStyle);
    sub_1A09F4A78();
    uint64_t v11 = *(void *)(v3 + 48);
    HIBYTE(v10) = 4;
    sub_1A09F4A78();
    LOBYTE(v11) = 5;
    sub_1A09F4A58();
    LOBYTE(v11) = 6;
    sub_1A09F4A58();
    LOBYTE(v11) = 7;
    sub_1A09F4978();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_1A0936EFC()
{
  return sub_1A0936AD4(*v0);
}

uint64_t sub_1A0936F04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A0938E08(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A0936F2C(uint64_t a1)
{
  unint64_t v2 = sub_1A0939C78();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A0936F68(uint64_t a1)
{
  unint64_t v2 = sub_1A0939C78();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A0936FA4()
{
  uint64_t v0 = qword_1E94FC2E8;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_1A0936FDC(uint64_t a1, uint64_t a2)
{
  long long v5 = *(_OWORD *)(v2 + 48);
  *(_OWORD *)(v3 + 48) = *(_OWORD *)(v2 + 32);
  *(_OWORD *)(v3 + 64) = v5;
  *(_OWORD *)(v3 + 80) = *(_OWORD *)(v2 + 64);
  *(void *)(v3 + 96) = *(void *)(v2 + 80);
  *(void *)(v3 + 104) = a1;
  long long v6 = *(_OWORD *)(v2 + 16);
  *(_OWORD *)(v3 + 16) = *(_OWORD *)v2;
  *(_OWORD *)(v3 + 32) = v6;
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 112) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_1A0924D00;
  v7[22] = a2;
  v7[23] = v3 + 16;
  return MEMORY[0x1F4188298](sub_1A09366C8, 0, 0);
}

double sub_1A09370B4@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1A0939184(a1, (uint64_t)v7);
  if (!v2)
  {
    long long v5 = v7[3];
    *(_OWORD *)(a2 + 32) = v7[2];
    *(_OWORD *)(a2 + 48) = v5;
    *(_OWORD *)(a2 + 64) = v7[4];
    *(void *)(a2 + 80) = v8;
    double result = *(double *)v7;
    long long v6 = v7[1];
    *(_OWORD *)a2 = v7[0];
    *(_OWORD *)(a2 + 16) = v6;
  }
  return result;
}

uint64_t sub_1A0937110(void *a1)
{
  return sub_1A0936C00(a1);
}

uint64_t sub_1A0937128(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A093641C(a1, a2, a3, (uint64_t (*)(void))sub_1A08BD680, (uint64_t (*)(void))sub_1A08BD62C);
}

unint64_t sub_1A0937154(uint64_t a1)
{
  unint64_t result = sub_1A093717C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1A093717C()
{
  unint64_t result = qword_1E94FC320;
  if (!qword_1E94FC320)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FC320);
  }
  return result;
}

uint64_t sub_1A09371D0()
{
  return sub_1A0792558(&qword_1E94FC328, &qword_1E94FC330);
}

unint64_t sub_1A0937210()
{
  unint64_t result = qword_1E94FC338;
  if (!qword_1E94FC338)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FC338);
  }
  return result;
}

unint64_t sub_1A0937264(uint64_t a1)
{
  unint64_t result = sub_1A093728C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1A093728C()
{
  unint64_t result = qword_1E94FC348;
  if (!qword_1E94FC348)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FC348);
  }
  return result;
}

unint64_t sub_1A09372E0(char a1)
{
  unint64_t result = 0xD000000000000016;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 2:
      unint64_t result = 0xD000000000000011;
      break;
    case 3:
      unint64_t result = 0xD000000000000010;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A0937378(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v11 = a3;
  uint64_t v6 = sub_1A07856F8(&qword_1E94FC488);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A086F45C(a1, a1[3]);
  sub_1A0939C24();
  sub_1A09F4CC8();
  uint64_t v13 = a2;
  char v12 = 0;
  sub_1A07856F8(&qword_1E94FC418);
  sub_1A0792558(&qword_1E94FC440, &qword_1E94FC418);
  sub_1A09F4A78();
  if (!v3)
  {
    uint64_t v13 = v11;
    char v12 = 1;
    sub_1A07856F8(&qword_1E94FC428);
    sub_1A0792558(&qword_1E94FC448, &qword_1E94FC428);
    sub_1A09F4A78();
    LOBYTE(v13) = 2;
    sub_1A09F4A38();
    LOBYTE(v13) = 3;
    sub_1A09F4A38();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1A09375C8()
{
  return sub_1A09372E0(*v0);
}

uint64_t sub_1A09375D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A0939758(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A09375F8(uint64_t a1)
{
  unint64_t v2 = sub_1A0939C24();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A0937634(uint64_t a1)
{
  unint64_t v2 = sub_1A0939C24();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A0937670@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 8);
  char v3 = *(unsigned char *)(v1 + 16);
  char v4 = *(unsigned char *)(v1 + 17);
  *(void *)a1 = *(void *)v1;
  *(void *)(a1 + 8) = v2;
  *(unsigned char *)(a1 + 16) = v3;
  *(unsigned char *)(a1 + 17) = v4;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

unint64_t sub_1A09376BC@<X0>(uint64_t a1@<X8>)
{
  sub_1A07856F8(&qword_1E94F9B58);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1A0A08A20;
  uint64_t v3 = MEMORY[0x1E4FBC860];
  *(void *)(v2 + 32) = sub_1A08D733C(MEMORY[0x1E4FBC860]);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1A0A08A20;
  unint64_t result = sub_1A08D733C(v3);
  *(void *)(v4 + 32) = result;
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v4;
  *(_WORD *)(a1 + 16) = 0;
  return result;
}

unint64_t sub_1A0937760(uint64_t a1)
{
  unint64_t result = sub_1A0937788();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1A0937788()
{
  unint64_t result = qword_1E94FC350;
  if (!qword_1E94FC350)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FC350);
  }
  return result;
}

unint64_t sub_1A09377DC(uint64_t a1)
{
  unint64_t result = sub_1A0937804();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1A0937804()
{
  unint64_t result = qword_1E94FC358;
  if (!qword_1E94FC358)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FC358);
  }
  return result;
}

uint64_t sub_1A0937858(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A093641C(a1, a2, a3, (uint64_t (*)(void))sub_1A08BC6C0, (uint64_t (*)(void))sub_1A08BC66C);
}

uint64_t sub_1A0937884@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_1A09398F4(a1);
  if (!v2)
  {
    *(void *)a2 = result;
    *(void *)(a2 + 8) = v5;
    *(unsigned char *)(a2 + 16) = v6 & 1;
    *(unsigned char *)(a2 + 17) = HIBYTE(v6) & 1;
  }
  return result;
}

uint64_t sub_1A09378C0(void *a1)
{
  return sub_1A0937378(a1, *v1, v1[1]);
}

uint64_t sub_1A09378F4()
{
  return sub_1A0792558(&qword_1E94FC360, &qword_1E94FC368);
}

unint64_t sub_1A0937934()
{
  unint64_t result = qword_1E94FC370;
  if (!qword_1E94FC370)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FC370);
  }
  return result;
}

unint64_t sub_1A0937988(uint64_t a1)
{
  unint64_t result = sub_1A09379B0();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1A09379B0()
{
  unint64_t result = qword_1E94FC380;
  if (!qword_1E94FC380)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FC380);
  }
  return result;
}

unint64_t sub_1A0937A04(uint64_t a1)
{
  unint64_t result = sub_1A0937A2C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1A0937A2C()
{
  unint64_t result = qword_1E94FC388;
  if (!qword_1E94FC388)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FC388);
  }
  return result;
}

unint64_t sub_1A0937A80(uint64_t a1)
{
  unint64_t result = sub_1A0937AA8();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1A0937AA8()
{
  unint64_t result = qword_1E94FC390;
  if (!qword_1E94FC390)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FC390);
  }
  return result;
}

uint64_t sub_1A0937AFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A093641C(a1, a2, a3, (uint64_t (*)(void))sub_1A08BC618, (uint64_t (*)(void))sub_1A08BC5C4);
}

uint64_t sub_1A0937B28()
{
  return sub_1A0792558(&qword_1E94FC398, &qword_1E94FC3A0);
}

unint64_t sub_1A0937B68()
{
  unint64_t result = qword_1E94FC3A8;
  if (!qword_1E94FC3A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FC3A8);
  }
  return result;
}

uint64_t sub_1A0937BBC(uint64_t a1)
{
  uint64_t result = sub_1A0939CCC(&qword_1E94FC3B8, (void (*)(uint64_t))type metadata accessor for MoveMessagesInChatsWithGUIDsRequest);
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1A0937C14(uint64_t a1)
{
  unint64_t result = sub_1A0937C3C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1A0937C3C()
{
  unint64_t result = qword_1E94FC3C0;
  if (!qword_1E94FC3C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FC3C0);
  }
  return result;
}

unint64_t sub_1A0937C90(uint64_t a1)
{
  unint64_t result = sub_1A0937CB8();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1A0937CB8()
{
  unint64_t result = qword_1E94FC3C8;
  if (!qword_1E94FC3C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FC3C8);
  }
  return result;
}

uint64_t sub_1A0937D0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A093641C(a1, a2, a3, (uint64_t (*)(void))sub_1A08BC570, (uint64_t (*)(void))sub_1A08BC51C);
}

uint64_t sub_1A0937D38()
{
  return sub_1A0792558(&qword_1E94FC3D0, &qword_1E94FC3D8);
}

unint64_t sub_1A0937D78()
{
  unint64_t result = qword_1E94FC3E0;
  if (!qword_1E94FC3E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FC3E0);
  }
  return result;
}

unint64_t sub_1A0937DCC(uint64_t a1)
{
  unint64_t result = sub_1A0937DF4();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1A0937DF4()
{
  unint64_t result = qword_1E94FC3F0;
  if (!qword_1E94FC3F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FC3F0);
  }
  return result;
}

unint64_t sub_1A0937E48(uint64_t a1)
{
  unint64_t result = sub_1A0937E70();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1A0937E70()
{
  unint64_t result = qword_1E94FC3F8;
  if (!qword_1E94FC3F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FC3F8);
  }
  return result;
}

unint64_t sub_1A0937EC4(uint64_t a1)
{
  unint64_t result = sub_1A0937EEC();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1A0937EEC()
{
  unint64_t result = qword_1E94FC400;
  if (!qword_1E94FC400)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FC400);
  }
  return result;
}

uint64_t sub_1A0937F40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A093641C(a1, a2, a3, (uint64_t (*)(void))sub_1A08BC228, (uint64_t (*)(void))sub_1A08BC1D4);
}

uint64_t sub_1A0937F6C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1684632935 && a2 == 0xE400000000000000;
  if (v2 || (sub_1A09F4B28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E65644974616863 && a2 == 0xEF73726569666974 || (sub_1A09F4B28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x656C797473 && a2 == 0xE500000000000000 || (sub_1A09F4B28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x7365636976726573 && a2 == 0xE800000000000000 || (sub_1A09F4B28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x74696D696CLL && a2 == 0xE500000000000000 || (sub_1A09F4B28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x554765726F666562 && a2 == 0xEA00000000004449 || (sub_1A09F4B28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x4955477265746661 && a2 == 0xE900000000000044 || (sub_1A09F4B28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001A0A360C0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else
  {
    char v6 = sub_1A09F4B28();
    swift_bridgeObjectRelease();
    if (v6) {
      return 7;
    }
    else {
      return 8;
    }
  }
}

uint64_t sub_1A09382D0@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = sub_1A07856F8(&qword_1E94FC4F0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A086F45C(a1, a1[3]);
  sub_1A0939EC0();
  sub_1A09F4CA8();
  if (v2)
  {
    _s17IMSharedUtilities29RemoteIntentBroadcastEncodingVwxx_0((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    LOBYTE(v40) = 0;
    uint64_t v9 = sub_1A09F48D8();
    uint64_t v11 = v10;
    uint64_t v37 = v9;
    uint64_t v38 = a2;
    sub_1A07856F8(&qword_1EB4A5610);
    char v39 = 1;
    sub_1A0879F5C(&qword_1E94F9128);
    swift_bridgeObjectRetain();
    sub_1A09F4928();
    uint64_t v12 = v40;
    LOBYTE(v40) = 2;
    uint64_t v36 = v12;
    swift_bridgeObjectRetain();
    int v35 = sub_1A09F4958();
    char v39 = 3;
    sub_1A09F4928();
    uint64_t v13 = v40;
    LOBYTE(v40) = 4;
    swift_bridgeObjectRetain();
    uint64_t v14 = sub_1A09F4908();
    uint64_t v34 = v13;
    LOBYTE(v40) = 5;
    uint64_t v15 = sub_1A09F4828();
    uint64_t v17 = v16;
    uint64_t v32 = v15;
    uint64_t v33 = v14;
    LOBYTE(v40) = 6;
    swift_bridgeObjectRetain();
    uint64_t v18 = sub_1A09F4828();
    uint64_t v20 = v19;
    uint64_t v31 = v18;
    LOBYTE(v40) = 7;
    swift_bridgeObjectRetain();
    uint64_t v21 = sub_1A09F4828();
    uint64_t v23 = v22;
    uint64_t v24 = *(void (**)(char *, uint64_t))(v6 + 8);
    uint64_t v30 = v21;
    v24(v8, v5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    _s17IMSharedUtilities29RemoteIntentBroadcastEncodingVwxx_0((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v25 = v34;
    swift_bridgeObjectRelease();
    uint64_t v26 = v36;
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    char v28 = v38;
    *uint64_t v38 = v37;
    v28[1] = v11;
    void v28[2] = v26;
    *((unsigned char *)v28 + 24) = v35;
    uint64_t v29 = v33;
    v28[4] = v25;
    uint64_t v28[5] = v29;
    v28[6] = v32;
    v28[7] = v17;
    v28[8] = v31;
    v28[9] = v20;
    v28[10] = v30;
    _OWORD v28[11] = v23;
  }
  return result;
}

uint64_t sub_1A0938840(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000016 && a2 == 0x80000001A0A36000 || (sub_1A09F4B28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x80000001A0A36020)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v5 = sub_1A09F4B28();
    swift_bridgeObjectRelease();
    if (v5) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1A093892C(void *a1)
{
  uint64_t v3 = sub_1A07856F8(&qword_1E94FC408);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = a1[3];
  sub_1A086F45C(a1, v7);
  sub_1A0938B9C();
  sub_1A09F4CA8();
  if (v1)
  {
    _s17IMSharedUtilities29RemoteIntentBroadcastEncodingVwxx_0((uint64_t)a1);
  }
  else
  {
    sub_1A07856F8(&qword_1E94FC418);
    HIBYTE(v9) = 0;
    sub_1A0792558(&qword_1E94FC420, &qword_1E94FC418);
    sub_1A09F4928();
    uint64_t v7 = v10;
    sub_1A07856F8(&qword_1E94FC428);
    HIBYTE(v9) = 1;
    sub_1A0792558(&qword_1E94FC430, &qword_1E94FC428);
    swift_bridgeObjectRetain();
    sub_1A09F4928();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    swift_bridgeObjectRetain();
    _s17IMSharedUtilities29RemoteIntentBroadcastEncodingVwxx_0((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v7;
}

unint64_t sub_1A0938B9C()
{
  unint64_t result = qword_1E94FC410;
  if (!qword_1E94FC410)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FC410);
  }
  return result;
}

unint64_t sub_1A0938BF0()
{
  unint64_t result = qword_1E94FC460;
  if (!qword_1E94FC460)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FC460);
  }
  return result;
}

unint64_t sub_1A0938C44()
{
  unint64_t result = qword_1E94FC470;
  if (!qword_1E94FC470)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FC470);
  }
  return result;
}

uint64_t sub_1A0938C98(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x4449554774616863 && a2 == 0xE900000000000073;
  if (v2 || (sub_1A09F4B28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x61446574656C6564 && a2 == 0xEA00000000006574 || (sub_1A09F4B28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x44497972657571 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_1A09F4B28();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_1A0938E08(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x476567617373656DLL && a2 == 0xEB00000000444955;
  if (v2 || (sub_1A09F4B28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x4449554774616863 && a2 == 0xE800000000000000 || (sub_1A09F4B28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6E65644974616863 && a2 == 0xEF73726569666974 || (sub_1A09F4B28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6C79745374616863 && a2 == 0xE900000000000065 || (sub_1A09F4B28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x7365636976726573 && a2 == 0xE800000000000000 || (sub_1A09F4B28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001A0A36080 || (sub_1A09F4B28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001A0A360A0 || (sub_1A09F4B28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001A0A360C0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else
  {
    char v6 = sub_1A09F4B28();
    swift_bridgeObjectRelease();
    if (v6) {
      return 7;
    }
    else {
      return 8;
    }
  }
}

uint64_t sub_1A0939184@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_1A07856F8(&qword_1E94FC498);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A086F45C(a1, a1[3]);
  sub_1A0939C78();
  sub_1A09F4CA8();
  if (v2)
  {
    _s17IMSharedUtilities29RemoteIntentBroadcastEncodingVwxx_0((uint64_t)a1);
    return swift_bridgeObjectRelease();
  }
  else
  {
    LOBYTE(v41) = 0;
    uint64_t v37 = sub_1A09F48D8();
    LOBYTE(v41) = 1;
    uint64_t v10 = v9;
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_1A09F48D8();
    uint64_t v39 = v10;
    uint64_t v36 = v11;
    uint64_t v13 = v12;
    sub_1A07856F8(&qword_1EB4A5610);
    char v40 = 2;
    uint64_t v14 = sub_1A0879F5C(&qword_1E94F9128);
    uint64_t v38 = v13;
    swift_bridgeObjectRetain();
    sub_1A09F4928();
    uint64_t v35 = v14;
    uint64_t v15 = v41;
    type metadata accessor for IMChatStyle(0);
    char v40 = 3;
    sub_1A0939CCC(&qword_1E94FB818, type metadata accessor for IMChatStyle);
    swift_bridgeObjectRetain();
    sub_1A09F4928();
    uint64_t v34 = v15;
    LODWORD(v15) = v41;
    char v40 = 4;
    sub_1A09F4928();
    int v33 = v15;
    uint64_t v16 = v41;
    LOBYTE(v41) = 5;
    swift_bridgeObjectRetain();
    uint64_t v35 = 0;
    uint64_t v17 = sub_1A09F4908();
    uint64_t v32 = v16;
    LOBYTE(v41) = 6;
    uint64_t v18 = sub_1A09F4908();
    LOBYTE(v41) = 7;
    uint64_t v19 = sub_1A09F4828();
    uint64_t v21 = v20;
    uint64_t v22 = *(void (**)(char *, uint64_t))(v6 + 8);
    uint64_t v35 = v19;
    v22(v8, v5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    _s17IMSharedUtilities29RemoteIntentBroadcastEncodingVwxx_0((uint64_t)a1);
    swift_bridgeObjectRelease();
    uint64_t v23 = v32;
    swift_bridgeObjectRelease();
    uint64_t v24 = v34;
    swift_bridgeObjectRelease();
    uint64_t v25 = v17;
    uint64_t v26 = v38;
    swift_bridgeObjectRelease();
    uint64_t v27 = v18;
    uint64_t v28 = v39;
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)a2 = v37;
    *(void *)(a2 + 8) = v28;
    *(void *)(a2 + 16) = v36;
    *(void *)(a2 + 24) = v26;
    *(void *)(a2 + 32) = v24;
    *(unsigned char *)(a2 + 40) = v33;
    *(void *)(a2 + 48) = v23;
    *(void *)(a2 + 56) = v25;
    uint64_t v30 = v35;
    *(void *)(a2 + 64) = v27;
    *(void *)(a2 + 72) = v30;
    *(void *)(a2 + 80) = v21;
  }
  return result;
}

uint64_t sub_1A0939758(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000016 && a2 == 0x80000001A0A36000 || (sub_1A09F4B28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x80000001A0A36020 || (sub_1A09F4B28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001A0A36040 || (sub_1A09F4B28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001A0A36060)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v5 = sub_1A09F4B28();
    swift_bridgeObjectRelease();
    if (v5) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_1A09398F4(void *a1)
{
  uint64_t v3 = sub_1A07856F8(&qword_1E94FC478);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = a1[3];
  sub_1A086F45C(a1, v7);
  sub_1A0939C24();
  sub_1A09F4CA8();
  if (v1)
  {
    _s17IMSharedUtilities29RemoteIntentBroadcastEncodingVwxx_0((uint64_t)a1);
  }
  else
  {
    sub_1A07856F8(&qword_1E94FC418);
    char v10 = 0;
    sub_1A0792558(&qword_1E94FC420, &qword_1E94FC418);
    sub_1A09F4928();
    uint64_t v7 = v11;
    sub_1A07856F8(&qword_1E94FC428);
    char v10 = 1;
    sub_1A0792558(&qword_1E94FC430, &qword_1E94FC428);
    swift_bridgeObjectRetain();
    sub_1A09F4928();
    LOBYTE(v11) = 2;
    swift_bridgeObjectRetain();
    sub_1A09F48E8();
    LOBYTE(v11) = 3;
    sub_1A09F48E8();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    _s17IMSharedUtilities29RemoteIntentBroadcastEncodingVwxx_0((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v7;
}

unint64_t sub_1A0939C24()
{
  unint64_t result = qword_1E94FC480;
  if (!qword_1E94FC480)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FC480);
  }
  return result;
}

unint64_t sub_1A0939C78()
{
  unint64_t result = qword_1E94FC4A0;
  if (!qword_1E94FC4A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FC4A0);
  }
  return result;
}

uint64_t sub_1A0939CCC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1A0939D14()
{
  unint64_t result = qword_1E94FC4B8;
  if (!qword_1E94FC4B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FC4B8);
  }
  return result;
}

unint64_t sub_1A0939D68()
{
  unint64_t result = qword_1E94FC4D0;
  if (!qword_1E94FC4D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FC4D0);
  }
  return result;
}

uint64_t sub_1A0939DBC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MoveMessagesInChatsWithGUIDsRequest();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A0939E20(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for MoveMessagesInChatsWithGUIDsRequest();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1A0939E7C(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1A09F3478();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1A0939EC0()
{
  unint64_t result = qword_1E94FC4F8;
  if (!qword_1E94FC4F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FC4F8);
  }
  return result;
}

ValueMetadata *type metadata accessor for LoadChatHistoryRequest.CodingKeys()
{
  return &type metadata for LoadChatHistoryRequest.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for MoveMessagesInChatsWithGUIDsRequest.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A0939FF8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MoveMessagesInChatsWithGUIDsRequest.CodingKeys()
{
  return &type metadata for MoveMessagesInChatsWithGUIDsRequest.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for LoadRecoverableMessagesMetadataRequest.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1A093A0CCLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for LoadRecoverableMessagesMetadataRequest.CodingKeys()
{
  return &type metadata for LoadRecoverableMessagesMetadataRequest.CodingKeys;
}

unsigned char *_s17IMSharedUtilities22LoadChatHistoryRequestV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *unint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A093A1D0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LoadPagedHistoryAroundMessageRequest.CodingKeys()
{
  return &type metadata for LoadPagedHistoryAroundMessageRequest.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for LoadPagedHistoryAroundMessageResponse.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A093A2D4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LoadPagedHistoryAroundMessageResponse.CodingKeys()
{
  return &type metadata for LoadPagedHistoryAroundMessageResponse.CodingKeys;
}

ValueMetadata *type metadata accessor for LoadRecoverableMessagesMetadataResponse.CodingKeys()
{
  return &type metadata for LoadRecoverableMessagesMetadataResponse.CodingKeys;
}

ValueMetadata *type metadata accessor for MoveMessagesInChatsWithGUIDsResponse.CodingKeys()
{
  return &type metadata for MoveMessagesInChatsWithGUIDsResponse.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for LoadChatHistoryResponse.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A093A3F8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LoadChatHistoryResponse.CodingKeys()
{
  return &type metadata for LoadChatHistoryResponse.CodingKeys;
}

ValueMetadata *type metadata accessor for LoadChatHistoryResponse()
{
  return &type metadata for LoadChatHistoryResponse;
}

ValueMetadata *type metadata accessor for MoveMessagesInChatsWithGUIDsResponse()
{
  return &type metadata for MoveMessagesInChatsWithGUIDsResponse;
}

ValueMetadata *type metadata accessor for LoadRecoverableMessagesMetadataResponse()
{
  return &type metadata for LoadRecoverableMessagesMetadataResponse;
}

uint64_t sub_1A093A464(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for LoadPagedHistoryAroundMessageResponse(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  return a1;
}

__n128 initializeWithTake for LoadPagedHistoryAroundMessageResponse(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u16[0] = a2[1].n128_u16[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for LoadPagedHistoryAroundMessageResponse(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  return a1;
}

uint64_t getEnumTagSinglePayload for LoadPagedHistoryAroundMessageResponse(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 18)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for LoadPagedHistoryAroundMessageResponse(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_WORD *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 18) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 18) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LoadPagedHistoryAroundMessageResponse()
{
  return &type metadata for LoadPagedHistoryAroundMessageResponse;
}

unint64_t sub_1A093A614()
{
  unint64_t result = qword_1E94FC508;
  if (!qword_1E94FC508)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FC508);
  }
  return result;
}

unint64_t sub_1A093A66C()
{
  unint64_t result = qword_1E94FC510;
  if (!qword_1E94FC510)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FC510);
  }
  return result;
}

unint64_t sub_1A093A6C4()
{
  unint64_t result = qword_1E94FC518;
  if (!qword_1E94FC518)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FC518);
  }
  return result;
}

unint64_t sub_1A093A71C()
{
  unint64_t result = qword_1E94FC520;
  if (!qword_1E94FC520)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FC520);
  }
  return result;
}

unint64_t sub_1A093A774()
{
  unint64_t result = qword_1E94FC528;
  if (!qword_1E94FC528)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FC528);
  }
  return result;
}

unint64_t sub_1A093A7CC()
{
  unint64_t result = qword_1E94FC530;
  if (!qword_1E94FC530)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FC530);
  }
  return result;
}

unint64_t sub_1A093A824()
{
  unint64_t result = qword_1E94FC538;
  if (!qword_1E94FC538)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FC538);
  }
  return result;
}

unint64_t sub_1A093A87C()
{
  unint64_t result = qword_1E94FC540;
  if (!qword_1E94FC540)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FC540);
  }
  return result;
}

unint64_t sub_1A093A8D4()
{
  unint64_t result = qword_1E94FC548;
  if (!qword_1E94FC548)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FC548);
  }
  return result;
}

unint64_t sub_1A093A92C()
{
  unint64_t result = qword_1E94FC550;
  if (!qword_1E94FC550)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FC550);
  }
  return result;
}

unint64_t sub_1A093A984()
{
  unint64_t result = qword_1E94FC558;
  if (!qword_1E94FC558)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FC558);
  }
  return result;
}

unint64_t sub_1A093A9DC()
{
  unint64_t result = qword_1E94FC560;
  if (!qword_1E94FC560)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FC560);
  }
  return result;
}

unint64_t sub_1A093AA34()
{
  unint64_t result = qword_1E94FC568;
  if (!qword_1E94FC568)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FC568);
  }
  return result;
}

unint64_t sub_1A093AA8C()
{
  unint64_t result = qword_1E94FC570;
  if (!qword_1E94FC570)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FC570);
  }
  return result;
}

unint64_t sub_1A093AAE4()
{
  unint64_t result = qword_1E94FC578;
  if (!qword_1E94FC578)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FC578);
  }
  return result;
}

unint64_t sub_1A093AB3C()
{
  unint64_t result = qword_1E94FC580;
  if (!qword_1E94FC580)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FC580);
  }
  return result;
}

unint64_t sub_1A093AB94()
{
  unint64_t result = qword_1E94FC588;
  if (!qword_1E94FC588)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FC588);
  }
  return result;
}

unint64_t sub_1A093ABEC()
{
  unint64_t result = qword_1E94FC590;
  if (!qword_1E94FC590)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FC590);
  }
  return result;
}

unint64_t sub_1A093AC44()
{
  unint64_t result = qword_1E94FC598;
  if (!qword_1E94FC598)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FC598);
  }
  return result;
}

unint64_t sub_1A093AC9C()
{
  unint64_t result = qword_1E94FC5A0;
  if (!qword_1E94FC5A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FC5A0);
  }
  return result;
}

unint64_t sub_1A093ACF4()
{
  unint64_t result = qword_1E94FC5A8;
  if (!qword_1E94FC5A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FC5A8);
  }
  return result;
}

unint64_t sub_1A093AD4C()
{
  unint64_t result = qword_1E94FC5B0;
  if (!qword_1E94FC5B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FC5B0);
  }
  return result;
}

ValueMetadata *type metadata accessor for FileTransferUpdatedWithPropertiesBroadcast()
{
  return &type metadata for FileTransferUpdatedWithPropertiesBroadcast;
}

uint64_t sub_1A093ADB4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v11[0] = a4;
  uint64_t v6 = sub_1A07856F8(&qword_1E94FC5E8);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A086F45C(a1, a1[3]);
  sub_1A093B5E4();
  sub_1A09F4CC8();
  char v13 = 0;
  sub_1A09F4A28();
  if (!v4)
  {
    v11[1] = v11[0];
    char v12 = 1;
    sub_1A07856F8(&qword_1E94F9D00);
    sub_1A0899F60(&qword_1E94F9D18);
    sub_1A09F4A78();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1A093AF68()
{
  if (*v0) {
    return 0x69747265706F7270;
  }
  else {
    return 1684632935;
  }
}

uint64_t sub_1A093AFA8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A093B29C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A093AFD0(uint64_t a1)
{
  unint64_t v2 = sub_1A093B5E4();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A093B00C(uint64_t a1)
{
  unint64_t v2 = sub_1A093B5E4();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A093B048()
{
  uint64_t v0 = qword_1E94FC5B8;
  swift_bridgeObjectRetain();
  return v0;
}

void sub_1A093B080(void *a1)
{
  unint64_t v2 = (void *)sub_1A09F3DE8();
  swift_bridgeObjectRetain();
  id v3 = (id)sub_1A09F3CE8();
  swift_bridgeObjectRelease();
  objc_msgSend(a1, sel_fileTransfer_updatedWithProperties_, v2, v3);
}

uint64_t sub_1A093B124@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1A093B3A4(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
  }
  return result;
}

uint64_t sub_1A093B154(void *a1)
{
  return sub_1A093ADB4(a1, *v1, v1[1], v1[2]);
}

unint64_t sub_1A093B174(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_1A08BCC00();
  unint64_t result = sub_1A08BCBAC();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1A093B1A4(uint64_t a1)
{
  unint64_t result = sub_1A093B1CC();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1A093B1CC()
{
  unint64_t result = qword_1E94FC5C8;
  if (!qword_1E94FC5C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FC5C8);
  }
  return result;
}

unint64_t sub_1A093B220(uint64_t a1)
{
  unint64_t result = sub_1A093B248();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1A093B248()
{
  unint64_t result = qword_1E94FC5D0;
  if (!qword_1E94FC5D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FC5D0);
  }
  return result;
}

uint64_t sub_1A093B29C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1684632935 && a2 == 0xE400000000000000;
  if (v2 || (sub_1A09F4B28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x69747265706F7270 && a2 == 0xEE00617461447365)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1A09F4B28();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1A093B3A4(void *a1)
{
  uint64_t v3 = sub_1A07856F8(&qword_1E94FC5D8);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  char v6 = &v9[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = a1[4];
  sub_1A086F45C(a1, a1[3]);
  sub_1A093B5E4();
  sub_1A09F4CA8();
  if (v1)
  {
    _s17IMSharedUtilities29RemoteIntentBroadcastEncodingVwxx_0((uint64_t)a1);
  }
  else
  {
    v9[31] = 0;
    uint64_t v7 = sub_1A09F48D8();
    sub_1A07856F8(&qword_1E94F9D00);
    v9[15] = 1;
    sub_1A0899F60(&qword_1E94F9D08);
    swift_bridgeObjectRetain();
    sub_1A09F4928();
    (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
    swift_bridgeObjectRetain();
    _s17IMSharedUtilities29RemoteIntentBroadcastEncodingVwxx_0((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v7;
}

unint64_t sub_1A093B5E4()
{
  unint64_t result = qword_1E94FC5E0;
  if (!qword_1E94FC5E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FC5E0);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for FileTransferUpdatedWithPropertiesBroadcast.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A093B704);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FileTransferUpdatedWithPropertiesBroadcast.CodingKeys()
{
  return &type metadata for FileTransferUpdatedWithPropertiesBroadcast.CodingKeys;
}

unint64_t sub_1A093B740()
{
  unint64_t result = qword_1E94FC5F0;
  if (!qword_1E94FC5F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FC5F0);
  }
  return result;
}

unint64_t sub_1A093B798()
{
  unint64_t result = qword_1E94FC5F8;
  if (!qword_1E94FC5F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FC5F8);
  }
  return result;
}

unint64_t sub_1A093B7F0()
{
  unint64_t result = qword_1E94FC600;
  if (!qword_1E94FC600)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FC600);
  }
  return result;
}

double sub_1A093B844@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  if (*(void *)(a2 + 16) && (unint64_t v5 = sub_1A087AB2C(a1), (v6 & 1) != 0))
  {
    uint64_t v7 = *(void *)(a2 + 56) + 32 * v5;
    sub_1A0785268(v7, (uint64_t)a3);
  }
  else
  {
    double result = 0.0;
    *a3 = 0u;
    a3[1] = 0u;
  }
  return result;
}

uint64_t IMEmojiTapback.associatedMessageEmoji.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR___IMEmojiTapback_emoji);
  swift_bridgeObjectRetain();
  return v1;
}

id IMEmojiTapback.counterpart.getter()
{
  unsigned int v1 = objc_msgSend(v0, sel_isRemoved);
  BOOL v2 = &selRef_visibleTapbackCounterpart;
  if (!v1) {
    BOOL v2 = &selRef_removedTapbackCounterpart;
  }
  id v3 = [v0 *v2];

  return v3;
}

id IMEmojiTapback.removedTapbackCounterpart.getter()
{
  if (objc_msgSend(v0, sel_isRemoved)) {
    return v0;
  }
  id v2 = objc_allocWithZone((Class)IMEmojiTapback);
  swift_bridgeObjectRetain();
  id v3 = (void *)sub_1A09F3DE8();
  swift_bridgeObjectRelease();
  id v1 = objc_msgSend(v2, sel_initWithEmoji_isRemoved_, v3, 1);

  return v1;
}

id IMEmojiTapback.visibleTapbackCounterpart.getter()
{
  if (!objc_msgSend(v0, sel_isRemoved)) {
    return v0;
  }
  id v1 = objc_allocWithZone((Class)IMEmojiTapback);
  swift_bridgeObjectRetain();
  id v2 = (void *)sub_1A09F3DE8();
  swift_bridgeObjectRelease();
  id v3 = objc_msgSend(v1, sel_initWithEmoji_isRemoved_, v2, 0);

  return v3;
}

void __swiftcall IMEmojiTapback.init(emoji:isRemoved:)(IMEmojiTapback_optional *__return_ptr retstr, Swift::String emoji, Swift::Bool isRemoved)
{
  id v4 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  unint64_t v5 = (void *)sub_1A09F3DE8();
  swift_bridgeObjectRelease();
  objc_msgSend(v4, sel_initWithEmoji_isRemoved_, v5, isRemoved);
}

id IMEmojiTapback.init(emoji:isRemoved:)(uint64_t a1, uint64_t a2, char a3)
{
  id v4 = (void *)(v3 + OBJC_IVAR___IMEmojiTapback_emoji);
  *id v4 = a1;
  v4[1] = a2;
  if (a3) {
    uint64_t v5 = 3006;
  }
  else {
    uint64_t v5 = 2006;
  }
  v7.super_class = (Class)IMEmojiTapback;
  return objc_msgSendSuper2(&v7, sel_initWithAssociatedMessageType_, v5);
}

void __swiftcall IMEmojiTapback.init(coder:)(IMEmojiTapback_optional *__return_ptr retstr, NSCoder coder)
{
}

id IMEmojiTapback.init(coder:)(void *a1)
{
  uint64_t v3 = v1;
  id v4 = (void *)sub_1A09F3DE8();
  id v5 = objc_msgSend(a1, sel_decodeObjectForKey_, v4);

  if (v5)
  {
    sub_1A09F4588();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v13, 0, sizeof(v13));
  }
  sub_1A0784BA0((uint64_t)v13, (uint64_t)v14);
  if (!v15)
  {

    sub_1A0783C7C((uint64_t)v14);
LABEL_9:
    type metadata accessor for IMEmojiTapback();
    swift_deallocPartialClassInstance();
    return 0;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {

    goto LABEL_9;
  }
  uint64_t v6 = v12;
  objc_super v7 = &v3[OBJC_IVAR___IMEmojiTapback_emoji];
  *(void *)objc_super v7 = v11;
  *((void *)v7 + 1) = v6;

  v10.receiver = v3;
  v10.super_class = (Class)IMEmojiTapback;
  id v8 = objc_msgSendSuper2(&v10, sel_initWithCoder_, a1);

  return v8;
}

unint64_t type metadata accessor for IMEmojiTapback()
{
  unint64_t result = qword_1E94FC610;
  if (!qword_1E94FC610)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1E94FC610);
  }
  return result;
}

void __swiftcall IMEmojiTapback.init(imRemoteObjectSerializedDictionary:)(IMEmojiTapback_optional *__return_ptr retstr, Swift::OpaquePointer_optional imRemoteObjectSerializedDictionary)
{
  if (imRemoteObjectSerializedDictionary.value._rawValue)
  {
    id v2 = (void *)sub_1A09F3CE8();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v2 = 0;
  }
  objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithIMRemoteObjectSerializedDictionary_, v2);
}

id IMEmojiTapback.init(imRemoteObjectSerializedDictionary:)(uint64_t a1)
{
  id v2 = v1;
  if (!a1)
  {
    long long v16 = 0u;
    long long v17 = 0u;
LABEL_12:
    sub_1A0783C7C((uint64_t)&v16);
LABEL_14:
    type metadata accessor for IMEmojiTapback();
    swift_deallocPartialClassInstance();
    return 0;
  }
  unint64_t v13 = 0xD000000000000016;
  unint64_t v14 = 0x80000001A0A36110;
  id v4 = v2;
  sub_1A09F4648();
  if (*(void *)(a1 + 16) && (unint64_t v5 = sub_1A087AB2C((uint64_t)v15), (v6 & 1) != 0))
  {
    sub_1A0785268(*(void *)(a1 + 56) + 32 * v5, (uint64_t)&v16);
  }
  else
  {
    long long v16 = 0u;
    long long v17 = 0u;
  }
  sub_1A087B20C((uint64_t)v15);
  if (!*((void *)&v17 + 1))
  {
    swift_bridgeObjectRelease();

    goto LABEL_12;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();

    goto LABEL_14;
  }
  uint64_t v7 = v15[1];
  id v8 = &v4[OBJC_IVAR___IMEmojiTapback_emoji];
  *(void *)id v8 = v15[0];
  *((void *)v8 + 1) = v7;

  uint64_t v9 = (void *)sub_1A09F3CE8();
  swift_bridgeObjectRelease();
  v12.receiver = v4;
  v12.super_class = (Class)IMEmojiTapback;
  id v10 = objc_msgSendSuper2(&v12, sel_initWithIMRemoteObjectSerializedDictionary_, v9);

  if (v10) {
  return v10;
  }
}

id IMEmojiTapback.reactionString(with:isCommSafetySensitiveProvider:)()
{
  id v1 = objc_msgSend(v0, sel_associatedMessageEmoji);
  sub_1A09F3E18();

  id v2 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
  uint64_t v3 = (void *)sub_1A09F3DE8();
  swift_bridgeObjectRelease();
  id v4 = objc_msgSend(v2, sel_initWithString_, v3);

  return v4;
}

uint64_t IMEmojiTapback.description.getter()
{
  v5.super_class = (Class)IMEmojiTapback;
  id v1 = objc_msgSendSuper2(&v5, sel_description);
  uint64_t v2 = sub_1A09F3E18();

  id v3 = objc_msgSend(v0, sel_associatedMessageEmoji, 0x203A696A6F6D6520, 0xE800000000000000);
  sub_1A09F3E18();

  sub_1A09F3EA8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1A09F3EA8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2;
}

BOOL static IMEmojiTapback.isValidAssociatedMessageType(_:)(uint64_t a1)
{
  return qword_1EF2BDF78 == a1 || unk_1EF2BDF80 == a1;
}

uint64_t IMEmojiTapback.isEqual(_:)(uint64_t a1)
{
  swift_getObjectType();
  sub_1A0875C10(a1, (uint64_t)v16);
  if (!v17)
  {
    sub_1A0783C7C((uint64_t)v16);
    goto LABEL_9;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_9:
    char v12 = 0;
    return v12 & 1;
  }
  id v3 = v15;
  v14.receiver = v1;
  v14.super_class = (Class)IMEmojiTapback;
  if (!objc_msgSendSuper2(&v14, sel_isEqual_, v15))
  {

    goto LABEL_9;
  }
  id v4 = objc_msgSend(v1, sel_associatedMessageEmoji);
  uint64_t v5 = sub_1A09F3E18();
  uint64_t v7 = v6;

  id v8 = objc_msgSend(v3, sel_associatedMessageEmoji);
  uint64_t v9 = sub_1A09F3E18();
  uint64_t v11 = v10;

  if (v5 == v9 && v7 == v11) {
    char v12 = 1;
  }
  else {
    char v12 = sub_1A09F4B28();
  }
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  return v12 & 1;
}

id IMEmojiTapback.init(associatedMessageType:)(uint64_t a1)
{
  id v2 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());

  return objc_msgSend(v2, sel_initWithAssociatedMessageType_, a1);
}

void IMEmojiTapback.init(associatedMessageType:)()
{
}

id _sSo14IMEmojiTapbackC17IMSharedUtilitiesE18actionStringFormat31withAdaptiveImageGlyphAvailableSo022IMTapbackSummaryActionfG0CSgSb_tF_0()
{
  id v1 = objc_msgSend(v0, sel_associatedMessageType);
  if (v1 != (id)3006 && v1 != (id)2006) {
    return 0;
  }
  id v2 = objc_allocWithZone((Class)IMTapbackSummaryActionStringFormat);
  id v3 = (void *)sub_1A09F3DE8();
  id v4 = objc_msgSend(v2, sel_initWithActionStringFormat_requiresReactionReplacment_, v3, 1);

  return v4;
}

ValueMetadata *type metadata accessor for ChatPropertiesUpdatedBroadcast()
{
  return &type metadata for ChatPropertiesUpdatedBroadcast;
}

void *initializeWithCopy for ChatDisplayNameUpdatedBroadcast(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for ChatDisplayNameUpdatedBroadcast(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for ChatDisplayNameUpdatedBroadcast(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for ChatDisplayNameUpdatedBroadcast()
{
  return &type metadata for ChatDisplayNameUpdatedBroadcast;
}

uint64_t destroy for RemoteIntentHandleInfo()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for ChatDisplayNameUpdatedWithSenderBroadcast(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  uint64_t v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for ChatDisplayNameUpdatedWithSenderBroadcast(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for ChatDisplayNameUpdatedWithSenderBroadcast(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

void *assignWithTake for ChatDisplayNameUpdatedWithSenderBroadcast(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ChatDisplayNameUpdatedWithSenderBroadcast(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 64)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ChatDisplayNameUpdatedWithSenderBroadcast(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 64) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ChatDisplayNameUpdatedWithSenderBroadcast()
{
  return &type metadata for ChatDisplayNameUpdatedWithSenderBroadcast;
}

ValueMetadata *type metadata accessor for MessageSentForAccountWithPropertiesBroadcast()
{
  return &type metadata for MessageSentForAccountWithPropertiesBroadcast;
}

uint64_t initializeWithCopy for MessageSentForAccountWithPropertiesNotifyBroadcast(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v5 = *(void **)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v6 = v5;
  return a1;
}

uint64_t assignWithCopy for MessageSentForAccountWithPropertiesNotifyBroadcast(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void **)(a2 + 48);
  uint64_t v5 = *(void **)(a1 + 48);
  *(void *)(a1 + 48) = v4;
  id v6 = v4;

  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  return a1;
}

__n128 initializeWithTake for RemoteIntentHandleInfo(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for MessageSentForAccountWithPropertiesNotifyBroadcast(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  swift_bridgeObjectRelease();
  id v6 = *(void **)(a1 + 48);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);

  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  return a1;
}

uint64_t getEnumTagSinglePayload for MessageSentForAccountWithPropertiesNotifyBroadcast(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 65)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MessageSentForAccountWithPropertiesNotifyBroadcast(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 64) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 65) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 65) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MessageSentForAccountWithPropertiesNotifyBroadcast()
{
  return &type metadata for MessageSentForAccountWithPropertiesNotifyBroadcast;
}

void _s17IMSharedUtilities50MessageSentForAccountWithPropertiesNotifyBroadcastVwxx_0(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v2 = *(void **)(a1 + 48);
}

uint64_t initializeWithCopy for MessageUpdatedForAccountWithPropertiesBroadcast(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v5 = *(void **)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v6 = v5;
  return a1;
}

uint64_t assignWithCopy for MessageUpdatedForAccountWithPropertiesBroadcast(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void **)(a2 + 48);
  uint64_t v5 = *(void **)(a1 + 48);
  *(void *)(a1 + 48) = v4;
  id v6 = v4;

  return a1;
}

__n128 initializeWithTake for RemoteIntentServiceInfo(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for MessageUpdatedForAccountWithPropertiesBroadcast(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  swift_bridgeObjectRelease();
  id v6 = *(void **)(a1 + 48);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);

  return a1;
}

ValueMetadata *type metadata accessor for MessageUpdatedForAccountWithPropertiesBroadcast()
{
  return &type metadata for MessageUpdatedForAccountWithPropertiesBroadcast;
}

uint64_t destroy for MessagesUpdatedForAccountWithPropertiesBroadcast()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for MessagesUpdatedForAccountWithPropertiesBroadcast(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for MessagesUpdatedForAccountWithPropertiesBroadcast(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for MessagesUpdatedForAccountWithPropertiesBroadcast(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s17IMSharedUtilities47MessageUpdatedForAccountWithPropertiesBroadcastVwet_0(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 56)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1A093D3FC(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 56) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MessagesUpdatedForAccountWithPropertiesBroadcast()
{
  return &type metadata for MessagesUpdatedForAccountWithPropertiesBroadcast;
}

uint64_t _s17IMSharedUtilities31ChatDisplayNameUpdatedBroadcastVwxx_0()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for MessagesUpdatedForServiceChatStyleBroadcast(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for MessagesUpdatedForServiceChatStyleBroadcast(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for MessagesUpdatedForServiceChatStyleBroadcast(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for MessagesUpdatedForServiceChatStyleBroadcast()
{
  return &type metadata for MessagesUpdatedForServiceChatStyleBroadcast;
}

uint64_t sub_1A093D5FC(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_1A07856F8(&qword_1E94FC7D0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  id v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1A086F45C(a1, a1[3]);
  sub_1A0943728();
  sub_1A09F4CC8();
  char v14 = 0;
  sub_1A09F4A28();
  if (!v2)
  {
    char v13 = 1;
    sub_1A09F4978();
    char v12 = 2;
    sub_1A09F4AA8();
    uint64_t v11 = *(void *)(v3 + 40);
    v10[15] = 3;
    sub_1A07856F8(&qword_1E94FC418);
    sub_1A0792558(&qword_1E94FC440, &qword_1E94FC418);
    sub_1A09F4A78();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1A093D7F4()
{
  uint64_t result = 0x65636976726573;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6E65644974616863;
      break;
    case 2:
      uint64_t result = 0x6C79745374616863;
      break;
    case 3:
      uint64_t result = 0x736567617373656DLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A093D89C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A0940580(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A093D8C4(uint64_t a1)
{
  unint64_t v2 = sub_1A0943728();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A093D900(uint64_t a1)
{
  unint64_t v2 = sub_1A0943728();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A093D93C()
{
  uint64_t v0 = qword_1E94FC618;
  swift_bridgeObjectRetain();
  return v0;
}

double sub_1A093D974@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  sub_1A0940784(a1, (uint64_t)v6);
  if (!v2)
  {
    long long v5 = v6[1];
    *a2 = v6[0];
    a2[1] = v5;
    double result = *(double *)&v7;
    a2[2] = v7;
  }
  return result;
}

uint64_t sub_1A093D9B8(void *a1)
{
  return sub_1A093D5FC(a1);
}

uint64_t sub_1A093D9D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A09400BC(a1, a2, a3, (uint64_t (*)(void))sub_1A08BD140, (uint64_t (*)(void))sub_1A08BD0EC);
}

unint64_t sub_1A093D9FC(uint64_t a1)
{
  unint64_t result = sub_1A093DA24();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1A093DA24()
{
  unint64_t result = qword_1E94FC698;
  if (!qword_1E94FC698)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FC698);
  }
  return result;
}

uint64_t sub_1A093DA78(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v11[0] = a4;
  uint64_t v6 = sub_1A07856F8(&qword_1E94FC728);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A086F45C(a1, a1[3]);
  sub_1A0940DE4();
  sub_1A09F4CC8();
  char v13 = 0;
  sub_1A09F4A28();
  if (!v4)
  {
    v11[1] = v11[0];
    char v12 = 1;
    sub_1A07856F8(&qword_1E94F9D00);
    sub_1A0792558(&qword_1E94F9D18, &qword_1E94F9D00);
    sub_1A09F4A78();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1A093DC34()
{
  if (*v0) {
    return 0x69747265706F7270;
  }
  else {
    return 0xD000000000000014;
  }
}

uint64_t sub_1A093DC80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A0940A80(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A093DCA8(uint64_t a1)
{
  unint64_t v2 = sub_1A0940DE4();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A093DCE4(uint64_t a1)
{
  unint64_t v2 = sub_1A0940DE4();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A093DD20()
{
  uint64_t v0 = qword_1E94FC628;
  swift_bridgeObjectRetain();
  return v0;
}

void sub_1A093DD58(void *a1)
{
  unint64_t v2 = (void *)sub_1A09F3DE8();
  swift_bridgeObjectRetain();
  id v3 = (id)sub_1A09F3CE8();
  swift_bridgeObjectRelease();
  objc_msgSend(a1, sel_chat_propertiesUpdated_, v2, v3);
}

uint64_t sub_1A093DDFC@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1A0940B94(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
  }
  return result;
}

uint64_t sub_1A093DE2C(void *a1)
{
  return sub_1A093DA78(a1, *v1, v1[1], v1[2]);
}

void sub_1A093DE4C(void *a1)
{
  uint64_t v3 = *(unsigned __int8 *)(v1 + 32);
  uint64_t v4 = (void *)sub_1A09F3DE8();
  sub_1A0878700(v1 + 16, (uint64_t)v11);
  sub_1A0878700((uint64_t)v11, (uint64_t)v12);
  if (v12[1]) {
    uint64_t v5 = (void *)sub_1A09F3DE8();
  }
  else {
    uint64_t v5 = 0;
  }
  uint64_t v10 = *(void *)(v1 + 40);
  if (v10)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = (void *)sub_1A09F3CE8();
    sub_1A08787A8((uint64_t)&v10);
  }
  else
  {
    uint64_t v6 = 0;
  }
  uint64_t v7 = (void *)sub_1A09F3DE8();
  sub_1A0878700(v1 + 64, (uint64_t)v9);
  sub_1A0878700((uint64_t)v9, (uint64_t)v13);
  if (v13[1]) {
    uint64_t v8 = (void *)sub_1A09F3DE8();
  }
  else {
    uint64_t v8 = 0;
  }
  objc_msgSend(a1, sel_account_chat_style_chatProperties_groupID_chatPersonCentricID_messageSent_, v4, v5, v3, v6, v7, v8, *(void *)(v1 + 80));
}

unint64_t sub_1A093DF98(char a1)
{
  unint64_t result = 0x55746E756F636361;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6E65644974616863;
      break;
    case 2:
      unint64_t result = 0x6C79745374616863;
      break;
    case 3:
      unint64_t result = 0xD000000000000012;
      break;
    case 4:
      unint64_t result = 0x444970756F7267;
      break;
    case 5:
      unint64_t result = 0x65436E6F73726570;
      break;
    case 6:
      unint64_t result = 0x536567617373656DLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A093E0B8(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_1A07856F8(&qword_1E94FC770);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1A086F45C(a1, a1[3]);
  sub_1A09435D8();
  sub_1A09F4CC8();
  char v17 = 0;
  sub_1A09F4A28();
  if (!v2)
  {
    char v16 = 1;
    sub_1A09F4978();
    char v15 = 2;
    sub_1A09F4AA8();
    uint64_t v9 = swift_bridgeObjectRetain();
    sub_1A09507D8(v9, 3);
    swift_bridgeObjectRelease();
    char v14 = 4;
    sub_1A09F4A28();
    char v13 = 5;
    sub_1A09F4978();
    uint64_t v12 = *(void *)(v3 + 80);
    v11[15] = 6;
    sub_1A07856F8(&qword_1E94F9668);
    sub_1A0792558(&qword_1E94F9680, &qword_1E94F9668);
    sub_1A09F4A78();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_1A093E32C()
{
  return sub_1A093DF98(*v0);
}

uint64_t sub_1A093E334@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A0940E38(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A093E35C(uint64_t a1)
{
  unint64_t v2 = sub_1A09435D8();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A093E398(uint64_t a1)
{
  unint64_t v2 = sub_1A09435D8();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A093E3D4()
{
  uint64_t v0 = qword_1E94FC638;
  swift_bridgeObjectRetain();
  return v0;
}

double sub_1A093E40C@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1A09411B4(a1, (uint64_t *)v7);
  if (!v2)
  {
    long long v5 = v7[3];
    *(_OWORD *)(a2 + 32) = v7[2];
    *(_OWORD *)(a2 + 48) = v5;
    *(_OWORD *)(a2 + 64) = v7[4];
    *(void *)(a2 + 80) = v8;
    double result = *(double *)v7;
    long long v6 = v7[1];
    *(_OWORD *)a2 = v7[0];
    *(_OWORD *)(a2 + 16) = v6;
  }
  return result;
}

uint64_t sub_1A093E468(void *a1)
{
  return sub_1A093E0B8(a1);
}

void sub_1A093E480(void *a1)
{
  uint64_t v3 = (void *)sub_1A09F3DE8();
  sub_1A0878700(v1 + 16, (uint64_t)v12);
  sub_1A0878700((uint64_t)v12, (uint64_t)v13);
  if (v13[1]) {
    uint64_t v4 = (void *)sub_1A09F3DE8();
  }
  else {
    uint64_t v4 = 0;
  }
  uint64_t v11 = *(void *)(v1 + 40);
  if (v11)
  {
    swift_bridgeObjectRetain();
    long long v5 = (void *)sub_1A09F3CE8();
    sub_1A08787A8((uint64_t)&v11);
  }
  else
  {
    long long v5 = 0;
  }
  uint64_t v6 = *(unsigned __int8 *)(v1 + 32);
  id v10 = *(id *)(v1 + 48);
  id v7 = v10;
  uint64_t v8 = (void *)sub_1A09F35B8();
  LOBYTE(v9) = *(unsigned char *)(v1 + 64);
  objc_msgSend(a1, sel_account_chat_style_chatProperties_notifySentMessage_sendTime_isReplicating_, v3, v4, v6, v5, v7, v8, v9);

  sub_1A0940554(&v10);
}

unint64_t sub_1A093E5B8(char a1)
{
  unint64_t result = 0x55746E756F636361;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6E65644974616863;
      break;
    case 2:
      unint64_t result = 0x6C79745374616863;
      break;
    case 3:
      unint64_t result = 0x706F725074616863;
      break;
    case 4:
      unint64_t result = 0xD000000000000011;
      break;
    case 5:
      unint64_t result = 0x656D6954646E6573;
      break;
    case 6:
      unint64_t result = 0x63696C7065527369;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A093E6D8(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_1A07856F8(&qword_1E94FC788);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1A086F45C(a1, a1[3]);
  sub_1A094362C();
  sub_1A09F4CC8();
  char v16 = 0;
  sub_1A09F4A28();
  if (!v2)
  {
    char v15 = 1;
    sub_1A09F4978();
    char v14 = *(unsigned char *)(v3 + 32);
    char v13 = 2;
    type metadata accessor for IMChatStyle(0);
    sub_1A08E5F24(&qword_1E94FB828);
    sub_1A09F4A78();
    uint64_t v9 = swift_bridgeObjectRetain();
    sub_1A0950A5C(v9, 3);
    swift_bridgeObjectRelease();
    uint64_t v12 = *(void *)(v3 + 48);
    v11[15] = 4;
    sub_1A07856F8(&qword_1E94F9668);
    sub_1A0792558(&qword_1E94F9680, &qword_1E94F9668);
    sub_1A09F4A78();
    _OWORD v11[14] = 5;
    sub_1A09F4A48();
    v11[13] = 6;
    sub_1A09F4A38();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_1A093E988()
{
  return sub_1A093E5B8(*v0);
}

uint64_t sub_1A093E990@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A09416B8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A093E9B8(uint64_t a1)
{
  unint64_t v2 = sub_1A094362C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A093E9F4(uint64_t a1)
{
  unint64_t v2 = sub_1A094362C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A093EA30()
{
  uint64_t v0 = qword_1E94FC648;
  swift_bridgeObjectRetain();
  return v0;
}

__n128 sub_1A093EA68@<Q0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1A0941A34(a1, (uint64_t *)v6);
  if (!v2)
  {
    long long v5 = v6[3];
    *(_OWORD *)(a2 + 32) = v6[2];
    *(_OWORD *)(a2 + 48) = v5;
    *(unsigned char *)(a2 + 64) = v7;
    __n128 result = (__n128)v6[1];
    *(_OWORD *)a2 = v6[0];
    *(__n128 *)(a2 + 16) = result;
  }
  return result;
}

uint64_t sub_1A093EABC(void *a1)
{
  return sub_1A093E6D8(a1);
}

void sub_1A093EAD4(void *a1)
{
  uint64_t v3 = (void *)sub_1A09F3DE8();
  sub_1A0878700(v1 + 16, (uint64_t)v7);
  sub_1A0878700((uint64_t)v7, (uint64_t)v8);
  if (v8[1]) {
    uint64_t v4 = (void *)sub_1A09F3DE8();
  }
  else {
    uint64_t v4 = 0;
  }
  uint64_t v6 = *(void *)(v1 + 40);
  if (v6)
  {
    swift_bridgeObjectRetain();
    long long v5 = (void *)sub_1A09F3CE8();
    sub_1A08787A8((uint64_t)&v6);
  }
  else
  {
    long long v5 = 0;
  }
  objc_msgSend(a1, sel_account_chat_style_chatProperties_messageUpdated_, v3, v4, *(unsigned __int8 *)(v1 + 32), v5, *(void *)(v1 + 48));
}

uint64_t sub_1A093EBC0(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_1A07856F8(&qword_1E94FC7A0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1A086F45C(a1, a1[3]);
  sub_1A0943680();
  sub_1A09F4CC8();
  char v16 = 0;
  sub_1A09F4A28();
  if (!v2)
  {
    char v15 = 1;
    sub_1A09F4978();
    char v14 = *(unsigned char *)(v3 + 32);
    char v13 = 2;
    type metadata accessor for IMChatStyle(0);
    sub_1A08E5F24(&qword_1E94FB828);
    sub_1A09F4A78();
    uint64_t v9 = swift_bridgeObjectRetain();
    sub_1A0950CE0(v9, 3);
    swift_bridgeObjectRelease();
    uint64_t v12 = *(void *)(v3 + 48);
    v11[15] = 4;
    sub_1A07856F8(&qword_1E94F90E8);
    sub_1A0792558(&qword_1E94F9100, &qword_1E94F90E8);
    sub_1A09F4A78();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1A093EE20()
{
  uint64_t result = 0x55746E756F636361;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6E65644974616863;
      break;
    case 2:
      uint64_t result = 0x6C79745374616863;
      break;
    case 3:
      uint64_t result = 0x706F725074616863;
      break;
    case 4:
      uint64_t result = 0x556567617373656DLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A093EF00@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A0941EB8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A093EF28(uint64_t a1)
{
  unint64_t v2 = sub_1A0943680();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A093EF64(uint64_t a1)
{
  unint64_t v2 = sub_1A0943680();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A093EFA0()
{
  uint64_t v0 = qword_1E94FC658;
  swift_bridgeObjectRetain();
  return v0;
}

double sub_1A093EFD8@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1A0942174(a1, (uint64_t *)v6);
  if (!v2)
  {
    long long v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    double result = *(double *)&v7;
    *(_OWORD *)(a2 + 32) = v7;
    *(void *)(a2 + 48) = v8;
  }
  return result;
}

uint64_t sub_1A093F028(void *a1)
{
  return sub_1A093EBC0(a1);
}

void sub_1A093F040(void *a1)
{
  uint64_t v3 = (void *)sub_1A09F3DE8();
  sub_1A0878700(v1 + 16, (uint64_t)v10);
  sub_1A0878700((uint64_t)v10, (uint64_t)v11);
  if (v11[1]) {
    uint64_t v4 = (void *)sub_1A09F3DE8();
  }
  else {
    uint64_t v4 = 0;
  }
  uint64_t v9 = *(void *)(v1 + 40);
  if (v9)
  {
    swift_bridgeObjectRetain();
    long long v5 = (void *)sub_1A09F3CE8();
    sub_1A08787A8((uint64_t)&v9);
  }
  else
  {
    long long v5 = 0;
  }
  uint64_t v6 = *(unsigned __int8 *)(v1 + 32);
  uint64_t v8 = *(void *)(v1 + 48);
  swift_bridgeObjectRetain();
  sub_1A07856F8((uint64_t *)&unk_1E94F9030);
  long long v7 = (void *)sub_1A09F4068();
  sub_1A08787A8((uint64_t)&v8);
  objc_msgSend(a1, sel_account_chat_style_chatProperties_messagesUpdated_, v3, v4, v6, v5, v7, v8);
}

uint64_t sub_1A093F168(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_1A07856F8(&qword_1E94FC7B8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1A086F45C(a1, a1[3]);
  sub_1A09436D4();
  sub_1A09F4CC8();
  char v16 = 0;
  sub_1A09F4A28();
  if (!v2)
  {
    char v15 = 1;
    sub_1A09F4978();
    char v14 = *(unsigned char *)(v3 + 32);
    char v13 = 2;
    type metadata accessor for IMChatStyle(0);
    sub_1A08E5F24(&qword_1E94FB828);
    sub_1A09F4A78();
    uint64_t v9 = swift_bridgeObjectRetain();
    sub_1A0950F64(v9, 3);
    swift_bridgeObjectRelease();
    uint64_t v12 = *(void *)(v3 + 48);
    v11[15] = 4;
    sub_1A07856F8(&qword_1E94FC418);
    sub_1A0792558(&qword_1E94FC440, &qword_1E94FC418);
    sub_1A09F4A78();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1A093F3C8()
{
  uint64_t result = 0x55746E756F636361;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6E65644974616863;
      break;
    case 2:
      uint64_t result = 0x6C79745374616863;
      break;
    case 3:
      uint64_t result = 0x706F725074616863;
      break;
    case 4:
      uint64_t result = 0x736567617373656DLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A093F4A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A0942550(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A093F4D0(uint64_t a1)
{
  unint64_t v2 = sub_1A09436D4();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A093F50C(uint64_t a1)
{
  unint64_t v2 = sub_1A09436D4();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A093F548()
{
  uint64_t v0 = qword_1E94FC668;
  swift_bridgeObjectRetain();
  return v0;
}

double sub_1A093F580@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1A094280C(a1, (uint64_t *)v6);
  if (!v2)
  {
    long long v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    double result = *(double *)&v7;
    *(_OWORD *)(a2 + 32) = v7;
    *(void *)(a2 + 48) = v8;
  }
  return result;
}

uint64_t sub_1A093F5D0(void *a1)
{
  return sub_1A093F168(a1);
}

uint64_t sub_1A093F5E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A09400BC(a1, a2, a3, (uint64_t (*)(void))sub_1A08BD098, (uint64_t (*)(void))sub_1A08BD044);
}

unint64_t sub_1A093F614(uint64_t a1)
{
  unint64_t result = sub_1A093F63C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1A093F63C()
{
  unint64_t result = qword_1E94FC6A0;
  if (!qword_1E94FC6A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FC6A0);
  }
  return result;
}

uint64_t sub_1A093F690(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A09400BC(a1, a2, a3, (uint64_t (*)(void))sub_1A08BCFF0, (uint64_t (*)(void))sub_1A08BCF9C);
}

unint64_t sub_1A093F6BC(uint64_t a1)
{
  unint64_t result = sub_1A093F6E4();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1A093F6E4()
{
  unint64_t result = qword_1E94FC6A8;
  if (!qword_1E94FC6A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FC6A8);
  }
  return result;
}

uint64_t sub_1A093F738(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A09400BC(a1, a2, a3, (uint64_t (*)(void))sub_1A08BCF48, (uint64_t (*)(void))sub_1A08BCEF4);
}

unint64_t sub_1A093F764(uint64_t a1)
{
  unint64_t result = sub_1A093F78C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1A093F78C()
{
  unint64_t result = qword_1E94FC6B0;
  if (!qword_1E94FC6B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FC6B0);
  }
  return result;
}

uint64_t sub_1A093F7E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A09400BC(a1, a2, a3, (uint64_t (*)(void))sub_1A08BCEA0, (uint64_t (*)(void))sub_1A08BCE4C);
}

unint64_t sub_1A093F80C(uint64_t a1)
{
  unint64_t result = sub_1A093F834();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1A093F834()
{
  unint64_t result = qword_1E94FC6B8;
  if (!qword_1E94FC6B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FC6B8);
  }
  return result;
}

uint64_t sub_1A093F888(void *a1)
{
  uint64_t v3 = sub_1A07856F8(&qword_1E94FC758);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1A086F45C(a1, a1[3]);
  sub_1A0943584();
  sub_1A09F4CC8();
  v8[15] = 0;
  sub_1A09F4A28();
  if (!v1)
  {
    v8[14] = 1;
    sub_1A09F4978();
    v8[13] = 2;
    sub_1A09F4A28();
    v8[12] = 3;
    sub_1A09F4A28();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_1A093FA38()
{
  unint64_t result = 0xD000000000000014;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x65436E6F73726570;
      break;
    case 2:
      unint64_t result = 0x4E79616C70736964;
      break;
    case 3:
      unint64_t result = 0x7265646E6573;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A093FADC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A0942BEC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A093FB04(uint64_t a1)
{
  unint64_t v2 = sub_1A0943584();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A093FB40(uint64_t a1)
{
  unint64_t v2 = sub_1A0943584();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A093FB7C()
{
  uint64_t v0 = qword_1E94FC678;
  swift_bridgeObjectRetain();
  return v0;
}

double sub_1A093FBB4@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  sub_1A0942DD8(a1, (uint64_t *)v7);
  if (!v2)
  {
    long long v5 = v7[1];
    *a2 = v7[0];
    a2[1] = v5;
    double result = *(double *)&v8;
    long long v6 = v9;
    a2[2] = v8;
    a2[3] = v6;
  }
  return result;
}

uint64_t sub_1A093FBF8(void *a1)
{
  return sub_1A093F888(a1);
}

uint64_t sub_1A093FC10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A09400BC(a1, a2, a3, (uint64_t (*)(void))sub_1A08BCDF8, (uint64_t (*)(void))sub_1A08BCDA4);
}

unint64_t sub_1A093FC3C(uint64_t a1)
{
  unint64_t result = sub_1A093FC64();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1A093FC64()
{
  unint64_t result = qword_1E94FC6C0;
  if (!qword_1E94FC6C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FC6C0);
  }
  return result;
}

uint64_t sub_1A093FCB8(void *a1)
{
  uint64_t v3 = sub_1A07856F8(&qword_1E94FC740);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  long long v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1A086F45C(a1, a1[3]);
  sub_1A0943530();
  sub_1A09F4CC8();
  v8[15] = 0;
  sub_1A09F4A28();
  if (!v1)
  {
    v8[14] = 1;
    sub_1A09F4978();
    v8[13] = 2;
    sub_1A09F4A28();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_1A093FE40()
{
  uint64_t v1 = 0x65436E6F73726570;
  if (*v0 != 1) {
    uint64_t v1 = 0x4E79616C70736964;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0xD000000000000014;
  }
}

uint64_t sub_1A093FEB4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A0943114(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A093FEDC(uint64_t a1)
{
  unint64_t v2 = sub_1A0943530();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A093FF18(uint64_t a1)
{
  unint64_t v2 = sub_1A0943530();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A093FF54()
{
  uint64_t v0 = qword_1E94FC688;
  swift_bridgeObjectRetain();
  return v0;
}

double sub_1A093FF8C@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  sub_1A09432A4(a1, (uint64_t *)v6);
  if (!v2)
  {
    long long v5 = v6[1];
    *a2 = v6[0];
    a2[1] = v5;
    double result = *(double *)&v7;
    a2[2] = v7;
  }
  return result;
}

uint64_t sub_1A093FFD0(void *a1)
{
  return sub_1A093FCB8(a1);
}

uint64_t sub_1A093FFE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A09400BC(a1, a2, a3, (uint64_t (*)(void))sub_1A08BCD50, (uint64_t (*)(void))sub_1A08BCCFC);
}

unint64_t sub_1A0940014(uint64_t a1)
{
  unint64_t result = sub_1A094003C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1A094003C()
{
  unint64_t result = qword_1E94FC6C8;
  if (!qword_1E94FC6C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FC6C8);
  }
  return result;
}

uint64_t sub_1A0940090(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A09400BC(a1, a2, a3, (uint64_t (*)(void))sub_1A08BCCA8, (uint64_t (*)(void))sub_1A08BCC54);
}

uint64_t sub_1A09400BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t (*a5)(void))
{
  *(void *)(a1 + 8) = a4();
  uint64_t result = a5();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1A09400F8(uint64_t a1)
{
  unint64_t result = sub_1A0940120();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1A0940120()
{
  unint64_t result = qword_1E94FC6D0;
  if (!qword_1E94FC6D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FC6D0);
  }
  return result;
}

unint64_t sub_1A0940174(uint64_t a1)
{
  unint64_t result = sub_1A094019C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1A094019C()
{
  unint64_t result = qword_1E94FC6D8;
  if (!qword_1E94FC6D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FC6D8);
  }
  return result;
}

unint64_t sub_1A09401F0(uint64_t a1)
{
  unint64_t result = sub_1A0940218();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1A0940218()
{
  unint64_t result = qword_1E94FC6E0;
  if (!qword_1E94FC6E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FC6E0);
  }
  return result;
}

unint64_t sub_1A094026C(uint64_t a1)
{
  unint64_t result = sub_1A0940294();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1A0940294()
{
  unint64_t result = qword_1E94FC6E8;
  if (!qword_1E94FC6E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FC6E8);
  }
  return result;
}

unint64_t sub_1A09402E8(uint64_t a1)
{
  unint64_t result = sub_1A0940310();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1A0940310()
{
  unint64_t result = qword_1E94FC6F0;
  if (!qword_1E94FC6F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FC6F0);
  }
  return result;
}

unint64_t sub_1A0940364(uint64_t a1)
{
  unint64_t result = sub_1A094038C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1A094038C()
{
  unint64_t result = qword_1E94FC6F8;
  if (!qword_1E94FC6F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FC6F8);
  }
  return result;
}

unint64_t sub_1A09403E0(uint64_t a1)
{
  unint64_t result = sub_1A0940408();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1A0940408()
{
  unint64_t result = qword_1E94FC700;
  if (!qword_1E94FC700)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FC700);
  }
  return result;
}

unint64_t sub_1A094045C(uint64_t a1)
{
  unint64_t result = sub_1A0940484();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1A0940484()
{
  unint64_t result = qword_1E94FC708;
  if (!qword_1E94FC708)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FC708);
  }
  return result;
}

unint64_t sub_1A09404D8(uint64_t a1)
{
  unint64_t result = sub_1A0940500();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1A0940500()
{
  unint64_t result = qword_1E94FC710;
  if (!qword_1E94FC710)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FC710);
  }
  return result;
}

id *sub_1A0940554(id *a1)
{
  return a1;
}

uint64_t sub_1A0940580(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x65636976726573 && a2 == 0xE700000000000000;
  if (v2 || (sub_1A09F4B28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E65644974616863 && a2 == 0xEE00726569666974 || (sub_1A09F4B28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6C79745374616863 && a2 == 0xE900000000000065 || (sub_1A09F4B28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x736567617373656DLL && a2 == 0xEC00000061746144)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_1A09F4B28();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_1A0940784@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_1A07856F8(&qword_1E94FC7C0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  long long v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A086F45C(a1, a1[3]);
  sub_1A0943728();
  sub_1A09F4CA8();
  if (v2) {
    return _s17IMSharedUtilities29RemoteIntentBroadcastEncodingVwxx_0((uint64_t)a1);
  }
  char v25 = 0;
  uint64_t v9 = sub_1A09F48D8();
  uint64_t v11 = v10;
  uint64_t v19 = v9;
  char v24 = 1;
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_1A09F4828();
  uint64_t v14 = v13;
  uint64_t v18 = v12;
  char v23 = 2;
  swift_bridgeObjectRetain();
  int v21 = sub_1A09F4958();
  sub_1A07856F8(&qword_1E94FC418);
  char v22 = 3;
  sub_1A0792558(&qword_1E94FC420, &qword_1E94FC418);
  sub_1A09F4928();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v15 = v20;
  swift_bridgeObjectRetain();
  _s17IMSharedUtilities29RemoteIntentBroadcastEncodingVwxx_0((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a2 = v19;
  *(void *)(a2 + 8) = v11;
  *(void *)(a2 + 16) = v18;
  *(void *)(a2 + 24) = v14;
  *(unsigned char *)(a2 + 32) = v21;
  *(void *)(a2 + 40) = v15;
  return result;
}

uint64_t sub_1A0940A80(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000014 && a2 == 0x80000001A0A31C70 || (sub_1A09F4B28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x69747265706F7270 && a2 == 0xEE00617461447365)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v5 = sub_1A09F4B28();
    swift_bridgeObjectRelease();
    if (v5) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1A0940B94(void *a1)
{
  uint64_t v3 = sub_1A07856F8(&qword_1E94FC718);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = &v9[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = a1[4];
  sub_1A086F45C(a1, a1[3]);
  sub_1A0940DE4();
  sub_1A09F4CA8();
  if (v1)
  {
    _s17IMSharedUtilities29RemoteIntentBroadcastEncodingVwxx_0((uint64_t)a1);
  }
  else
  {
    v9[31] = 0;
    uint64_t v7 = sub_1A09F48D8();
    sub_1A07856F8(&qword_1E94F9D00);
    v9[30] = 1;
    sub_1A0792558(&qword_1E94F9D08, &qword_1E94F9D00);
    swift_bridgeObjectRetain();
    sub_1A09F4928();
    (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
    swift_bridgeObjectRetain();
    _s17IMSharedUtilities29RemoteIntentBroadcastEncodingVwxx_0((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v7;
}

unint64_t sub_1A0940DE4()
{
  unint64_t result = qword_1E94FC720;
  if (!qword_1E94FC720)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FC720);
  }
  return result;
}

uint64_t sub_1A0940E38(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x55746E756F636361 && a2 == 0xEF4449657571696ELL;
  if (v2 || (sub_1A09F4B28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E65644974616863 && a2 == 0xEE00726569666974 || (sub_1A09F4B28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6C79745374616863 && a2 == 0xE900000000000065 || (sub_1A09F4B28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001A0A31320 || (sub_1A09F4B28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x444970756F7267 && a2 == 0xE700000000000000 || (sub_1A09F4B28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x65436E6F73726570 && a2 == 0xEF4449636972746ELL || (sub_1A09F4B28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x536567617373656DLL && a2 == 0xEF61746144746E65)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    char v6 = sub_1A09F4B28();
    swift_bridgeObjectRelease();
    if (v6) {
      return 6;
    }
    else {
      return 7;
    }
  }
}

uint64_t sub_1A09411B4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = sub_1A07856F8(&qword_1E94FC760);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  long long v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A086F45C(a1, a1[3]);
  sub_1A09435D8();
  sub_1A09F4CA8();
  if (v2)
  {
    _s17IMSharedUtilities29RemoteIntentBroadcastEncodingVwxx_0((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v35 = a2;
    char v43 = 0;
    uint64_t v9 = sub_1A09F48D8();
    uint64_t v11 = v10;
    char v42 = 1;
    swift_bridgeObjectRetain();
    uint64_t v12 = sub_1A09F4828();
    uint64_t v14 = v13;
    uint64_t v34 = v12;
    char v41 = 2;
    swift_bridgeObjectRetain();
    int v32 = sub_1A09F4958();
    uint64_t v33 = v9;
    uint64_t v15 = sub_1A094D354(3);
    char v40 = 4;
    swift_bridgeObjectRetain();
    uint64_t v30 = sub_1A09F48D8();
    uint64_t v31 = v11;
    char v39 = 5;
    uint64_t v36 = v16;
    swift_bridgeObjectRetain();
    uint64_t v17 = sub_1A09F4828();
    uint64_t v19 = v18;
    uint64_t v29 = v17;
    sub_1A07856F8(&qword_1E94F9668);
    char v38 = 6;
    sub_1A0792558(&qword_1E94F9670, &qword_1E94F9668);
    swift_bridgeObjectRetain();
    sub_1A09F4928();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    uint64_t v20 = v37;
    uint64_t v21 = v31;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v22 = v36;
    swift_bridgeObjectRetain();
    id v23 = v20;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    _s17IMSharedUtilities29RemoteIntentBroadcastEncodingVwxx_0((uint64_t)a1);

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    char v25 = v35;
    *uint64_t v35 = v33;
    v25[1] = v21;
    v25[2] = v34;
    id v25[3] = v14;
    *((unsigned char *)v25 + 32) = v32;
    uint64_t v26 = v30;
    void v25[5] = v15;
    v25[6] = v26;
    uint64_t v27 = v29;
    v25[7] = v22;
    v25[8] = v27;
    v25[9] = v19;
    v25[10] = (uint64_t)v23;
  }
  return result;
}

uint64_t sub_1A09416B8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x55746E756F636361 && a2 == 0xEF4449657571696ELL;
  if (v2 || (sub_1A09F4B28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E65644974616863 && a2 == 0xEE00726569666974 || (sub_1A09F4B28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6C79745374616863 && a2 == 0xE900000000000065 || (sub_1A09F4B28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x706F725074616863 && a2 == 0xEE00736569747265 || (sub_1A09F4B28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001A0A362E0 || (sub_1A09F4B28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x656D6954646E6573 && a2 == 0xE800000000000000 || (sub_1A09F4B28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x63696C7065527369 && a2 == 0xED0000676E697461)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    char v6 = sub_1A09F4B28();
    swift_bridgeObjectRelease();
    if (v6) {
      return 6;
    }
    else {
      return 7;
    }
  }
}

void sub_1A0941A34(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = sub_1A07856F8(&qword_1E94FC778);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  long long v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A086F45C(a1, a1[3]);
  sub_1A094362C();
  sub_1A09F4CA8();
  if (v2)
  {
    _s17IMSharedUtilities29RemoteIntentBroadcastEncodingVwxx_0((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    char v34 = 0;
    uint64_t v9 = sub_1A09F48D8();
    uint64_t v11 = v10;
    uint64_t v26 = v9;
    char v33 = 1;
    swift_bridgeObjectRetain();
    uint64_t v12 = sub_1A09F4828();
    uint64_t v14 = v13;
    uint64_t v25 = v12;
    type metadata accessor for IMChatStyle(0);
    char v31 = 2;
    sub_1A08E5F24(&qword_1E94FB818);
    swift_bridgeObjectRetain();
    sub_1A09F4928();
    char v24 = a2;
    int v23 = v32;
    uint64_t v15 = sub_1A094D5D0(3);
    uint64_t v22 = v11;
    sub_1A07856F8(&qword_1E94F9668);
    char v29 = 4;
    sub_1A0792558(&qword_1E94F9670, &qword_1E94F9668);
    swift_bridgeObjectRetain();
    sub_1A09F4928();
    char v28 = 5;
    id v16 = v30;
    sub_1A09F48F8();
    uint64_t v18 = v17;
    char v27 = 6;
    char v19 = sub_1A09F48E8();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    _s17IMSharedUtilities29RemoteIntentBroadcastEncodingVwxx_0((uint64_t)a1);

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v20 = v22;
    swift_bridgeObjectRelease();
    uint64_t v21 = v24;
    *char v24 = v26;
    v21[1] = v20;
    void v21[2] = v25;
    v21[3] = v14;
    *((unsigned char *)v21 + 32) = v23;
    v21[5] = v15;
    v21[6] = (uint64_t)v16;
    v21[7] = v18;
    *((unsigned char *)v21 + 64) = v19 & 1;
  }
}

uint64_t sub_1A0941EB8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x55746E756F636361 && a2 == 0xEF4449657571696ELL;
  if (v2 || (sub_1A09F4B28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E65644974616863 && a2 == 0xEE00726569666974 || (sub_1A09F4B28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6C79745374616863 && a2 == 0xE900000000000065 || (sub_1A09F4B28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x706F725074616863 && a2 == 0xEE00736569747265 || (sub_1A09F4B28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x556567617373656DLL && a2 == 0xEE00646574616470)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_1A09F4B28();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t sub_1A0942174@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = sub_1A07856F8(&qword_1E94FC790);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  long long v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A086F45C(a1, a1[3]);
  sub_1A0943680();
  sub_1A09F4CA8();
  if (v2)
  {
    _s17IMSharedUtilities29RemoteIntentBroadcastEncodingVwxx_0((uint64_t)a1);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    char v30 = 0;
    uint64_t v9 = sub_1A09F48D8();
    uint64_t v11 = v10;
    uint64_t v24 = v9;
    char v29 = 1;
    swift_bridgeObjectRetain();
    uint64_t v12 = sub_1A09F4828();
    uint64_t v14 = v13;
    uint64_t v23 = v12;
    type metadata accessor for IMChatStyle(0);
    char v27 = 2;
    sub_1A08E5F24(&qword_1E94FB818);
    swift_bridgeObjectRetain();
    sub_1A09F4928();
    uint64_t v22 = a2;
    int v21 = v28;
    uint64_t v15 = sub_1A094D84C(3);
    sub_1A07856F8(&qword_1E94F90E8);
    char v26 = 4;
    sub_1A0792558(&qword_1E94F90F0, &qword_1E94F90E8);
    swift_bridgeObjectRetain();
    sub_1A09F4928();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    id v16 = v25;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v17 = v16;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    _s17IMSharedUtilities29RemoteIntentBroadcastEncodingVwxx_0((uint64_t)a1);

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    char v19 = v22;
    *uint64_t v22 = v24;
    v19[1] = v11;
    long long v19[2] = v23;
    v19[3] = v14;
    *((unsigned char *)v19 + 32) = v21;
    v19[5] = v15;
    v19[6] = (uint64_t)v17;
  }
  return result;
}

uint64_t sub_1A0942550(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x55746E756F636361 && a2 == 0xEF4449657571696ELL;
  if (v2 || (sub_1A09F4B28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E65644974616863 && a2 == 0xEE00726569666974 || (sub_1A09F4B28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6C79745374616863 && a2 == 0xE900000000000065 || (sub_1A09F4B28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x706F725074616863 && a2 == 0xEE00736569747265 || (sub_1A09F4B28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x736567617373656DLL && a2 == 0xEF64657461647055)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_1A09F4B28();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t sub_1A094280C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = sub_1A07856F8(&qword_1E94FC7A8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  long long v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A086F45C(a1, a1[3]);
  sub_1A09436D4();
  sub_1A09F4CA8();
  if (v2)
  {
    _s17IMSharedUtilities29RemoteIntentBroadcastEncodingVwxx_0((uint64_t)a1);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    char v29 = 0;
    uint64_t v9 = sub_1A09F48D8();
    uint64_t v11 = v10;
    uint64_t v23 = v9;
    char v28 = 1;
    swift_bridgeObjectRetain();
    uint64_t v12 = sub_1A09F4828();
    uint64_t v14 = v13;
    uint64_t v22 = v12;
    type metadata accessor for IMChatStyle(0);
    char v26 = 2;
    sub_1A08E5F24(&qword_1E94FB818);
    swift_bridgeObjectRetain();
    sub_1A09F4928();
    int v21 = a2;
    int v20 = v27;
    uint64_t v15 = sub_1A094DAC8(3);
    sub_1A07856F8(&qword_1E94FC418);
    char v25 = 4;
    sub_1A0792558(&qword_1E94FC420, &qword_1E94FC418);
    swift_bridgeObjectRetain();
    sub_1A09F4928();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    uint64_t v16 = v24;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    _s17IMSharedUtilities29RemoteIntentBroadcastEncodingVwxx_0((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v18 = v21;
    *int v21 = v23;
    v18[1] = v11;
    _OWORD v18[2] = v22;
    v18[3] = v14;
    *((unsigned char *)v18 + 32) = v20;
    v18[5] = v15;
    v18[6] = v16;
  }
  return result;
}

uint64_t sub_1A0942BEC(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000014 && a2 == 0x80000001A0A31C70 || (sub_1A09F4B28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65436E6F73726570 && a2 == 0xEF4449636972746ELL || (sub_1A09F4B28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x4E79616C70736964 && a2 == 0xEB00000000656D61 || (sub_1A09F4B28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x7265646E6573 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v5 = sub_1A09F4B28();
    swift_bridgeObjectRelease();
    if (v5) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_1A0942DD8@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = sub_1A07856F8(&qword_1E94FC748);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  long long v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A086F45C(a1, a1[3]);
  sub_1A0943584();
  sub_1A09F4CA8();
  if (v2)
  {
    _s17IMSharedUtilities29RemoteIntentBroadcastEncodingVwxx_0((uint64_t)a1);
    return swift_bridgeObjectRelease();
  }
  else
  {
    char v33 = 0;
    uint64_t v9 = sub_1A09F48D8();
    uint64_t v11 = v10;
    uint64_t v29 = v9;
    char v32 = 1;
    swift_bridgeObjectRetain();
    uint64_t v12 = sub_1A09F4828();
    uint64_t v14 = v13;
    uint64_t v27 = v12;
    char v28 = a2;
    char v31 = 2;
    swift_bridgeObjectRetain();
    uint64_t v15 = sub_1A09F48D8();
    uint64_t v17 = v16;
    uint64_t v26 = v15;
    char v30 = 3;
    swift_bridgeObjectRetain();
    uint64_t v18 = sub_1A09F48D8();
    uint64_t v20 = v19;
    int v21 = *(void (**)(char *, uint64_t))(v6 + 8);
    uint64_t v25 = v18;
    v21(v8, v5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    _s17IMSharedUtilities29RemoteIntentBroadcastEncodingVwxx_0((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v23 = v28;
    *char v28 = v29;
    v23[1] = v11;
    long long v23[2] = v27;
    v23[3] = v14;
    v23[4] = v26;
    v23[5] = v17;
    v23[6] = v25;
    v23[7] = v20;
  }
  return result;
}

uint64_t sub_1A0943114(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000014 && a2 == 0x80000001A0A31C70 || (sub_1A09F4B28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65436E6F73726570 && a2 == 0xEF4449636972746ELL || (sub_1A09F4B28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x4E79616C70736964 && a2 == 0xEB00000000656D61)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v5 = sub_1A09F4B28();
    swift_bridgeObjectRelease();
    if (v5) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_1A09432A4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = sub_1A07856F8(&qword_1E94FC730);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  long long v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A086F45C(a1, a1[3]);
  sub_1A0943530();
  sub_1A09F4CA8();
  if (v2) {
    return _s17IMSharedUtilities29RemoteIntentBroadcastEncodingVwxx_0((uint64_t)a1);
  }
  char v26 = 0;
  uint64_t v9 = sub_1A09F48D8();
  uint64_t v11 = v10;
  uint64_t v23 = v9;
  char v25 = 1;
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_1A09F4828();
  uint64_t v14 = v13;
  uint64_t v22 = v12;
  char v24 = 2;
  swift_bridgeObjectRetain();
  uint64_t v15 = sub_1A09F48D8();
  uint64_t v17 = v16;
  uint64_t v18 = *(void (**)(char *, uint64_t))(v6 + 8);
  uint64_t v21 = v15;
  v18(v8, v5);
  swift_bridgeObjectRetain();
  _s17IMSharedUtilities29RemoteIntentBroadcastEncodingVwxx_0((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v23;
  a2[1] = v11;
  a2[2] = v22;
  a2[3] = v14;
  a2[4] = v21;
  a2[5] = v17;
  return result;
}

unint64_t sub_1A0943530()
{
  unint64_t result = qword_1E94FC738;
  if (!qword_1E94FC738)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FC738);
  }
  return result;
}

unint64_t sub_1A0943584()
{
  unint64_t result = qword_1E94FC750;
  if (!qword_1E94FC750)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FC750);
  }
  return result;
}

unint64_t sub_1A09435D8()
{
  unint64_t result = qword_1E94FC768;
  if (!qword_1E94FC768)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FC768);
  }
  return result;
}

unint64_t sub_1A094362C()
{
  unint64_t result = qword_1E94FC780;
  if (!qword_1E94FC780)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FC780);
  }
  return result;
}

unint64_t sub_1A0943680()
{
  unint64_t result = qword_1E94FC798;
  if (!qword_1E94FC798)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FC798);
  }
  return result;
}

unint64_t sub_1A09436D4()
{
  unint64_t result = qword_1E94FC7B0;
  if (!qword_1E94FC7B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FC7B0);
  }
  return result;
}

unint64_t sub_1A0943728()
{
  unint64_t result = qword_1E94FC7C8;
  if (!qword_1E94FC7C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FC7C8);
  }
  return result;
}

ValueMetadata *type metadata accessor for MessagesUpdatedForServiceChatStyleBroadcast.CodingKeys()
{
  return &type metadata for MessagesUpdatedForServiceChatStyleBroadcast.CodingKeys;
}

ValueMetadata *type metadata accessor for MessagesUpdatedForAccountWithPropertiesBroadcast.CodingKeys()
{
  return &type metadata for MessagesUpdatedForAccountWithPropertiesBroadcast.CodingKeys;
}

unsigned char *_s17IMSharedUtilities48MessagesUpdatedForAccountWithPropertiesBroadcastV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A0943874);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MessageUpdatedForAccountWithPropertiesBroadcast.CodingKeys()
{
  return &type metadata for MessageUpdatedForAccountWithPropertiesBroadcast.CodingKeys;
}

ValueMetadata *type metadata accessor for MessageSentForAccountWithPropertiesNotifyBroadcast.CodingKeys()
{
  return &type metadata for MessageSentForAccountWithPropertiesNotifyBroadcast.CodingKeys;
}

unsigned char *_s17IMSharedUtilities50MessageSentForAccountWithPropertiesNotifyBroadcastV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *unint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A0943990);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MessageSentForAccountWithPropertiesBroadcast.CodingKeys()
{
  return &type metadata for MessageSentForAccountWithPropertiesBroadcast.CodingKeys;
}

unsigned char *_s17IMSharedUtilities43MessagesUpdatedForServiceChatStyleBroadcastV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A0943A94);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ChatDisplayNameUpdatedWithSenderBroadcast.CodingKeys()
{
  return &type metadata for ChatDisplayNameUpdatedWithSenderBroadcast.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for ChatDisplayNameUpdatedBroadcast.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A0943B98);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ChatDisplayNameUpdatedBroadcast.CodingKeys()
{
  return &type metadata for ChatDisplayNameUpdatedBroadcast.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for ChatPropertiesUpdatedBroadcast.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A0943C9CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ChatPropertiesUpdatedBroadcast.CodingKeys()
{
  return &type metadata for ChatPropertiesUpdatedBroadcast.CodingKeys;
}

unint64_t sub_1A0943CD8()
{
  unint64_t result = qword_1E94FC7D8;
  if (!qword_1E94FC7D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FC7D8);
  }
  return result;
}

unint64_t sub_1A0943D30()
{
  unint64_t result = qword_1E94FC7E0;
  if (!qword_1E94FC7E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FC7E0);
  }
  return result;
}

unint64_t sub_1A0943D88()
{
  unint64_t result = qword_1E94FC7E8;
  if (!qword_1E94FC7E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FC7E8);
  }
  return result;
}

unint64_t sub_1A0943DE0()
{
  unint64_t result = qword_1E94FC7F0;
  if (!qword_1E94FC7F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FC7F0);
  }
  return result;
}

unint64_t sub_1A0943E38()
{
  unint64_t result = qword_1E94FC7F8;
  if (!qword_1E94FC7F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FC7F8);
  }
  return result;
}

unint64_t sub_1A0943E90()
{
  unint64_t result = qword_1E94FC800;
  if (!qword_1E94FC800)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FC800);
  }
  return result;
}

unint64_t sub_1A0943EE8()
{
  unint64_t result = qword_1E94FC808;
  if (!qword_1E94FC808)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FC808);
  }
  return result;
}

unint64_t sub_1A0943F40()
{
  unint64_t result = qword_1E94FC810;
  if (!qword_1E94FC810)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FC810);
  }
  return result;
}

unint64_t sub_1A0943F98()
{
  unint64_t result = qword_1E94FC818;
  if (!qword_1E94FC818)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FC818);
  }
  return result;
}

unint64_t sub_1A0943FF0()
{
  unint64_t result = qword_1E94FC820;
  if (!qword_1E94FC820)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FC820);
  }
  return result;
}

unint64_t sub_1A0944048()
{
  unint64_t result = qword_1E94FC828;
  if (!qword_1E94FC828)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FC828);
  }
  return result;
}

unint64_t sub_1A09440A0()
{
  unint64_t result = qword_1E94FC830;
  if (!qword_1E94FC830)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FC830);
  }
  return result;
}

unint64_t sub_1A09440F8()
{
  unint64_t result = qword_1E94FC838;
  if (!qword_1E94FC838)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FC838);
  }
  return result;
}

unint64_t sub_1A0944150()
{
  unint64_t result = qword_1E94FC840;
  if (!qword_1E94FC840)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FC840);
  }
  return result;
}

unint64_t sub_1A09441A8()
{
  unint64_t result = qword_1E94FC848;
  if (!qword_1E94FC848)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FC848);
  }
  return result;
}

unint64_t sub_1A0944200()
{
  unint64_t result = qword_1E94FC850;
  if (!qword_1E94FC850)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FC850);
  }
  return result;
}

unint64_t sub_1A0944258()
{
  unint64_t result = qword_1E94FC858;
  if (!qword_1E94FC858)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FC858);
  }
  return result;
}

unint64_t sub_1A09442B0()
{
  unint64_t result = qword_1E94FC860;
  if (!qword_1E94FC860)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FC860);
  }
  return result;
}

unint64_t sub_1A0944308()
{
  unint64_t result = qword_1E94FC868;
  if (!qword_1E94FC868)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FC868);
  }
  return result;
}

unint64_t sub_1A0944360()
{
  unint64_t result = qword_1E94FC870;
  if (!qword_1E94FC870)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FC870);
  }
  return result;
}

unint64_t sub_1A09443B8()
{
  unint64_t result = qword_1E94FC878;
  if (!qword_1E94FC878)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FC878);
  }
  return result;
}

unint64_t sub_1A0944410()
{
  unint64_t result = qword_1E94FC880;
  if (!qword_1E94FC880)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FC880);
  }
  return result;
}

unint64_t sub_1A0944468()
{
  unint64_t result = qword_1E94FC888;
  if (!qword_1E94FC888)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FC888);
  }
  return result;
}

unint64_t sub_1A09444C0()
{
  unint64_t result = qword_1E94FC890;
  if (!qword_1E94FC890)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FC890);
  }
  return result;
}

uint64_t sub_1A0944514(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F41863F8](a1, a2, a3, 40);
}

uint64_t sub_1A094451C()
{
  uint64_t result = swift_getAssociatedTypeWitness();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1A09445BC(uint64_t *a1, uint64_t *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v6 = *(_DWORD *)(v5 + 80);
  if (v6 <= 7
    && *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64) <= 0x18uLL
    && (*(_DWORD *)(v5 + 80) & 0x100000) == 0)
  {
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
  }
  else
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 + 16) & ~v6));
    swift_retain();
  }
  return a1;
}

uint64_t sub_1A0944698(uint64_t a1)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  int v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 8);

  return v3(a1, AssociatedTypeWitness);
}

uint64_t sub_1A0944714(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16))(a1, a2, AssociatedTypeWitness);
  return a1;
}

uint64_t sub_1A094478C(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 24))(a1, a2, AssociatedTypeWitness);
  return a1;
}

uint64_t sub_1A0944804(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 32))(a1, a2, AssociatedTypeWitness);
  return a1;
}

uint64_t sub_1A094487C(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 40))(a1, a2, AssociatedTypeWitness);
  return a1;
}

uint64_t sub_1A09448F4(unsigned __int16 *a1, unsigned int a2)
{
  uint64_t v4 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (!a2) {
    return 0;
  }
  if (a2 <= v5) {
    goto LABEL_19;
  }
  char v7 = 8 * v6;
  if (v6 <= 3)
  {
    unsigned int v9 = ((a2 - v5 + ~(-1 << v7)) >> v7) + 1;
    if (HIWORD(v9))
    {
      int v8 = *(_DWORD *)((char *)a1 + v6);
      if (!v8) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v9 > 0xFF)
    {
      int v8 = *(unsigned __int16 *)((char *)a1 + v6);
      if (!*(unsigned __int16 *)((char *)a1 + v6)) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v9 < 2)
    {
LABEL_19:
      if (v5)
      {
        uint64_t v11 = *(uint64_t (**)(unsigned __int16 *))(v4 + 48);
        return v11(a1);
      }
      return 0;
    }
  }
  int v8 = *((unsigned __int8 *)a1 + v6);
  if (!*((unsigned char *)a1 + v6)) {
    goto LABEL_19;
  }
LABEL_11:
  int v10 = (v8 - 1) << v7;
  if (v6 > 3) {
    int v10 = 0;
  }
  if (v6)
  {
    if (v6 > 3) {
      LODWORD(v6) = 4;
    }
    switch((int)v6)
    {
      case 2:
        LODWORD(v6) = *a1;
        break;
      case 3:
        LODWORD(v6) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v6) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v6) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v5 + (v6 | v10) + 1;
}

void sub_1A0944AA4(unsigned char *a1, uint64_t a2, unsigned int a3)
{
  uint64_t v6 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  size_t v8 = *(void *)(v6 + 64);
  if (a3 <= v7)
  {
    int v9 = 0;
  }
  else if (v8 <= 3)
  {
    unsigned int v12 = ((a3 - v7 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
    if (HIWORD(v12))
    {
      int v9 = 4;
    }
    else if (v12 >= 0x100)
    {
      int v9 = 2;
    }
    else
    {
      int v9 = v12 > 1;
    }
  }
  else
  {
    int v9 = 1;
  }
  if (v7 < a2)
  {
    unsigned int v10 = ~v7 + a2;
    if (v8 < 4)
    {
      int v11 = (v10 >> (8 * v8)) + 1;
      if (v8)
      {
        int v13 = v10 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if (v8 == 3)
        {
          *(_WORD *)a1 = v13;
          a1[2] = BYTE2(v13);
        }
        else if (v8 == 2)
        {
          *(_WORD *)a1 = v13;
        }
        else
        {
          *a1 = v13;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v10;
      int v11 = 1;
    }
    switch(v9)
    {
      case 1:
        a1[v8] = v11;
        return;
      case 2:
        *(_WORD *)&a1[v8] = v11;
        return;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v8] = v11;
        return;
      default:
        return;
    }
  }
  switch(v9)
  {
    case 1:
      a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 2:
      *(_WORD *)&a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 3:
LABEL_34:
      __break(1u);
      JUMPOUT(0x1A0944CE0);
    case 4:
      *(_DWORD *)&a1[v8] = 0;
      goto LABEL_20;
    default:
LABEL_20:
      if (a2)
      {
LABEL_21:
        uint64_t v14 = *(void (**)(unsigned char *, uint64_t))(v6 + 56);
        v14(a1, a2);
      }
      return;
  }
}

uint64_t type metadata accessor for RemoteIntentSerializeCollectionAs()
{
  return swift_getGenericMetadata();
}

uint64_t type metadata accessor for _RemoteIntentKVEncodedData()
{
  return sub_1A0780100();
}

uint64_t sub_1A0944D58(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1A0944D94(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1A0944DD0()
{
  uint64_t v0 = sub_1A09F39E8();
  sub_1A078D848(v0, qword_1E94FC898);
  sub_1A078510C(v0, (uint64_t)qword_1E94FC898);
  return sub_1A09F39D8();
}

uint64_t sub_1A0944E50()
{
  sub_1A07856F8((uint64_t *)&unk_1EB4A5BD0);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1A0A11D70;
  *(void *)(v0 + 32) = sub_1A078231C(0, (unint64_t *)&unk_1EB4A5C08);
  *(void *)(v0 + 40) = sub_1A078231C(0, (unint64_t *)&unk_1EB4A5B98);
  *(void *)(v0 + 48) = sub_1A078231C(0, &qword_1EB4A5B80);
  *(void *)(v0 + 56) = sub_1A078231C(0, (unint64_t *)&qword_1EB4A59B8);
  *(void *)(v0 + 64) = sub_1A078231C(0, qword_1EB4A5920);
  *(void *)(v0 + 72) = sub_1A078231C(0, &qword_1EB4A59B0);
  *(void *)(v0 + 80) = sub_1A078231C(0, &qword_1E94FB488);
  uint64_t result = sub_1A078231C(0, (unint64_t *)&qword_1EB4A5C00);
  *(void *)(v0 + 88) = result;
  qword_1E9522608 = v0;
  return result;
}

uint64_t sub_1A0944F7C@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v39 = a4;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  char v41 = (char *)&v33 - v8;
  uint64_t v45 = a3;
  uint64_t v9 = swift_getAssociatedTypeWitness();
  uint64_t v38 = *(void *)(v9 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](v9);
  unsigned int v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x1F4188790](v10);
  char v42 = (char *)&v33 - v14;
  uint64_t v44 = a2;
  uint64_t v43 = *(void *)(a2 - 8);
  uint64_t v15 = MEMORY[0x1F4188790](v13);
  uint64_t v17 = (char *)&v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  uint64_t v19 = (char *)&v33 - v18;
  sub_1A086F45C(a1, a1[3]);
  sub_1A09F4C98();
  if (v4)
  {
    uint64_t v32 = (uint64_t)a1;
  }
  else
  {
    char v34 = v17;
    uint64_t v35 = v12;
    uint64_t v36 = v19;
    uint64_t v37 = a1;
    sub_1A086F45C(v46, v46[3]);
    uint64_t v21 = v44;
    uint64_t v20 = v45;
    swift_getAssociatedConformanceWitness();
    uint64_t v22 = v42;
    sub_1A09F4B38();
    uint64_t v23 = v9;
    uint64_t v24 = v38;
    char v25 = v35;
    (*(void (**)(char *, char *, uint64_t))(v38 + 16))(v35, v22, v9);
    char v26 = v34;
    (*(void (**)(char *, uint64_t, uint64_t))(v20 + 48))(v25, v21, v20);
    (*(void (**)(char *, uint64_t))(v24 + 8))(v22, v23);
    uint64_t v28 = v43;
    uint64_t v29 = v36;
    (*(void (**)(char *, char *, uint64_t))(v43 + 32))(v36, v26, v21);
    uint64_t v30 = (uint64_t)v37;
    uint64_t v31 = v39;
    _s17IMSharedUtilities29RemoteIntentBroadcastEncodingVwxx_0((uint64_t)v46);
    (*(void (**)(uint64_t, char *, uint64_t))(v28 + 32))(v31, v29, v21);
    uint64_t v32 = v30;
  }
  return _s17IMSharedUtilities29RemoteIntentBroadcastEncodingVwxx_0(v32);
}

uint64_t sub_1A09454EC@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_1A086F45C(a1, a1[3]);
  if ((sub_1A09F4B58() & 1) == 0) {
    return sub_1A09464D8(a1, a2, a3);
  }
  sub_1A094683C();
  swift_allocError();
  *uint64_t v6 = 0;
  return swift_willThrow();
}

uint64_t sub_1A094559C(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v36 = *MEMORY[0x1E4F143B8];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v31 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v10 = (char *)&v28 - v9;
  sub_1A086F45C(a1, a1[3]);
  sub_1A09F4CB8();
  if (qword_1E94F85E0 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_1A09F39E8();
  sub_1A078510C(v11, (uint64_t)qword_1E94FC898);
  unsigned int v12 = sub_1A09F39C8();
  os_log_type_t v13 = sub_1A09F4378();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v29 = AssociatedTypeWitness;
    uint64_t v14 = swift_slowAlloc();
    uint64_t v30 = v4;
    uint64_t v15 = (uint8_t *)v14;
    uint64_t v16 = (void *)swift_slowAlloc();
    v33[0] = v16;
    *(_DWORD *)uint64_t v15 = 136315138;
    uint64_t v28 = v15 + 4;
    uint64_t v32 = swift_getAssociatedTypeWitness();
    swift_getMetatypeMetadata();
    uint64_t v17 = sub_1A09F3E38();
    uint64_t v32 = sub_1A0785144(v17, v18, (uint64_t *)v33);
    sub_1A09F4528();
    uint64_t AssociatedTypeWitness = v29;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A0772000, v12, v13, "!!! TEMPORARY SUPPORT - Encoding using legacy serialization instead of native type %s !!!", v15, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1A6228C20](v16, -1, -1);
    MEMORY[0x1A6228C20](v15, -1, -1);
  }

  uint64_t v19 = self;
  (*(void (**)(uint64_t, uint64_t))(a3 + 56))(a2, a3);
  uint64_t v20 = sub_1A09F4B18();
  (*(void (**)(char *, uint64_t))(v31 + 8))(v10, AssociatedTypeWitness);
  v33[0] = 0;
  id v21 = objc_msgSend(v19, sel_archivedDataWithRootObject_requiringSecureCoding_error_, v20, 1, v33);
  swift_unknownObjectRelease();
  id v22 = v33[0];
  if (v21)
  {
    uint64_t v23 = (void *)sub_1A09F33E8();
    char v25 = v24;

    v33[0] = v23;
    v33[1] = v25;
    sub_1A0884428((uint64_t)v34, v35);
    sub_1A08E4BB0();
    sub_1A09F4B78();
    sub_1A08AF2E4((uint64_t)v23, (unint64_t)v25);
  }
  else
  {
    char v26 = v22;
    sub_1A09F3258();

    swift_willThrow();
  }
  return _s17IMSharedUtilities29RemoteIntentBroadcastEncodingVwxx_0((uint64_t)v34);
}

uint64_t sub_1A094597C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  unsigned int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 32);

  return v5(a2, a1, AssociatedTypeWitness);
}

uint64_t sub_1A0945A04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v9 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v11 = (char *)&v13 - v10;
  (*(void (**)(uint64_t, uint64_t))(a3 + 24))(a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(a2 - 8) + 8))(a1, a2);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v9 + 32))(a4, v11, AssociatedTypeWitness);
}

uint64_t sub_1A0945B4C@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return sub_1A0944F7C(a1, a2, WitnessTable, a3);
}

uint64_t sub_1A0945BB0(void *a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return sub_1A094559C(a1, a2, WitnessTable);
}

uint64_t sub_1A0945C0C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1A0945A04(a1, *(void *)(a2 + 16), *(void *)(a2 + 24), a3);
}

uint64_t sub_1A0945C2C@<X0>(uint64_t a1@<X8>)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16);

  return v4(a1, v1, AssociatedTypeWitness);
}

uint64_t sub_1A0945CA8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1A094597C(a1, a2);
}

uint64_t sub_1A0945CB4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 32))(a3, a1, a2);
}

uint64_t sub_1A0945CEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = *(void *)(a2 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](a1);
  uint64_t v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(uint64_t))(v11 + 16))(v8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  if (v3) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 8))(a1, AssociatedTypeWitness);
  }
  (*(void (**)(uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 8))(a1, AssociatedTypeWitness);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v7 + 32))(a3, v10, a2);
}

uint64_t sub_1A0945E6C@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return sub_1A0944F7C(a1, a2, WitnessTable, a3);
}

uint64_t sub_1A0945ED0(void *a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return sub_1A094559C(a1, a2, WitnessTable);
}

uint64_t sub_1A0945F2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1A0945CEC(a1, *(void *)(a2 + 16), a3);
}

uint64_t sub_1A0945F4C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t sub_1A0945F80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1A0945CB4(a1, *(void *)(a2 + 16), a3);
}

uint64_t sub_1A0945F88@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v28 = *(void *)(a2 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v8 = (char *)v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for _RemoteIntentKVEncodedData();
  uint64_t v26 = *(void *)(v9 - 8);
  uint64_t v27 = v9;
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)v22 - v10;
  sub_1A086F45C(a1, a1[3]);
  sub_1A09F4C98();
  if (!v3)
  {
    if (qword_1E94F85E0 != -1) {
      swift_once();
    }
    uint64_t v12 = sub_1A09F39E8();
    sub_1A078510C(v12, (uint64_t)qword_1E94FC898);
    uint64_t v13 = sub_1A09F39C8();
    os_log_type_t v14 = sub_1A09F4368();
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v25 = a3;
      uint64_t v15 = (uint8_t *)swift_slowAlloc();
      uint64_t v24 = swift_slowAlloc();
      uint64_t v31 = v24;
      uint64_t v23 = v15;
      *(_DWORD *)uint64_t v15 = 136315138;
      v22[1] = v15 + 4;
      uint64_t v29 = a2;
      swift_getMetatypeMetadata();
      uint64_t v16 = sub_1A09F3E38();
      uint64_t v29 = sub_1A0785144(v16, v17, &v31);
      sub_1A09F4528();
      a3 = v25;
      swift_bridgeObjectRelease();
      os_log_type_t v18 = v14;
      uint64_t v19 = v23;
      _os_log_impl(&dword_1A0772000, v13, v18, "Decoding with keyed archiver for %s", v23, 0xCu);
      uint64_t v20 = v24;
      swift_arrayDestroy();
      MEMORY[0x1A6228C20](v20, -1, -1);
      MEMORY[0x1A6228C20](v19, -1, -1);
    }

    sub_1A09454EC(v30, a2, (uint64_t)v8);
    _s17IMSharedUtilities29RemoteIntentBroadcastEncodingVwxx_0((uint64_t)v30);
    (*(void (**)(char *, char *, uint64_t))(v28 + 32))(v11, v8, a2);
    (*(void (**)(uint64_t, char *, uint64_t))(v26 + 32))(a3, v11, v27);
  }
  return _s17IMSharedUtilities29RemoteIntentBroadcastEncodingVwxx_0((uint64_t)a1);
}

uint64_t sub_1A09462B8(void *a1)
{
  uint64_t v12 = *MEMORY[0x1E4F143B8];
  sub_1A086F45C(a1, a1[3]);
  sub_1A09F4CB8();
  uint64_t v1 = self;
  v9[0] = 0;
  id v2 = objc_msgSend(v1, sel_archivedDataWithRootObject_requiringSecureCoding_error_, sub_1A09F4B18(), 1, v9);
  swift_unknownObjectRelease();
  id v3 = v9[0];
  if (v2)
  {
    uint64_t v4 = (void *)sub_1A09F33E8();
    uint64_t v6 = v5;

    v9[0] = v4;
    v9[1] = v6;
    sub_1A0884428((uint64_t)v10, v11);
    sub_1A08E4BB0();
    sub_1A09F4B78();
    sub_1A08AF2E4((uint64_t)v4, (unint64_t)v6);
  }
  else
  {
    uint64_t v7 = v3;
    sub_1A09F3258();

    swift_willThrow();
  }
  return _s17IMSharedUtilities29RemoteIntentBroadcastEncodingVwxx_0((uint64_t)v10);
}

uint64_t sub_1A094642C@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1A0945F88(a1, *(void *)(a2 + 16), a3);
}

uint64_t sub_1A0946448(void *a1)
{
  return sub_1A09462B8(a1);
}

uint64_t sub_1A0946460(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1A094649C(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1A09464D8@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = sub_1A09F4518();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v26 - v9;
  sub_1A086F45C(a1, a1[3]);
  sub_1A08E4B14();
  uint64_t result = sub_1A09F4B38();
  if (!v3)
  {
    uint64_t v27 = a3;
    uint64_t v13 = v28;
    unint64_t v12 = v29;
    if (qword_1E94F85E8 != -1) {
      swift_once();
    }
    os_log_type_t v14 = (void *)qword_1E9522608;
    if (swift_isClassType()) {
      uint64_t v15 = a2;
    }
    else {
      uint64_t v15 = 0;
    }
    swift_bridgeObjectRetain();
    if (v15)
    {
      uint64_t v30 = v8;
      uint64_t v16 = v13;
      unint64_t v17 = v12;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        os_log_type_t v14 = sub_1A0891EE0(0, v14[2] + 1, 1, v14);
      }
      unint64_t v19 = v14[2];
      unint64_t v18 = v14[3];
      unint64_t v20 = v19 + 1;
      if (v19 >= v18 >> 1)
      {
        unint64_t v26 = v19 + 1;
        uint64_t v25 = sub_1A0891EE0((void *)(v18 > 1), v19 + 1, 1, v14);
        unint64_t v20 = v26;
        os_log_type_t v14 = v25;
      }
      void v14[2] = v20;
      v14[v19 + 4] = v15;
      unint64_t v12 = v17;
      uint64_t v13 = v16;
      uint64_t v8 = v30;
    }
    sub_1A078231C(0, &qword_1E94FB7C0);
    sub_1A09F43A8();
    swift_bridgeObjectRelease();
    sub_1A07856F8(&qword_1EB4A58F0);
    char v21 = swift_dynamicCast();
    id v22 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 56);
    if (v21)
    {
      uint64_t v23 = *(void *)(a2 - 8);
      v22(v10, 0, 1, a2);
      sub_1A08AF2E4(v13, v12);
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v23 + 32))(v27, v10, a2);
    }
    else
    {
      v22(v10, 1, 1, a2);
      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
      sub_1A094683C();
      swift_allocError();
      *uint64_t v24 = 1;
      swift_willThrow();
      return sub_1A08AF2E4(v13, v12);
    }
  }
  return result;
}

unint64_t sub_1A094683C()
{
  unint64_t result = qword_1E94FC9B0;
  if (!qword_1E94FC9B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FC9B0);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for RemoteIntentSerializationError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A094695CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RemoteIntentSerializationError()
{
  return &type metadata for RemoteIntentSerializationError;
}

unint64_t sub_1A0946998()
{
  unint64_t result = qword_1E94FC9B8[0];
  if (!qword_1E94FC9B8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E94FC9B8);
  }
  return result;
}

uint64_t sub_1A09469EC()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1A0946A7C(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (!a2) {
    return 0;
  }
  unsigned int v7 = a2 - v5;
  if (a2 <= v5) {
    goto LABEL_19;
  }
  char v8 = 8 * v6;
  if (v6 <= 3)
  {
    unsigned int v10 = ((v7 + ~(-1 << v8)) >> v8) + 1;
    if (HIWORD(v10))
    {
      int v9 = *(_DWORD *)((char *)a1 + v6);
      if (!v9) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v10 > 0xFF)
    {
      int v9 = *(unsigned __int16 *)((char *)a1 + v6);
      if (!*(unsigned __int16 *)((char *)a1 + v6)) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v10 < 2)
    {
LABEL_19:
      if (v5) {
        return (*(uint64_t (**)(void))(v4 + 48))();
      }
      return 0;
    }
  }
  int v9 = *((unsigned __int8 *)a1 + v6);
  if (!*((unsigned char *)a1 + v6)) {
    goto LABEL_19;
  }
LABEL_11:
  int v11 = (v9 - 1) << v8;
  if (v6 > 3) {
    int v11 = 0;
  }
  if (v6)
  {
    if (v6 > 3) {
      LODWORD(v6) = 4;
    }
    switch((int)v6)
    {
      case 2:
        LODWORD(v6) = *a1;
        break;
      case 3:
        LODWORD(v6) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v6) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v6) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v5 + (v6 | v11) + 1;
}

void sub_1A0946BD8(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  size_t v8 = *(void *)(v6 + 64);
  BOOL v9 = a3 >= v7;
  unsigned int v10 = a3 - v7;
  if (v10 != 0 && v9)
  {
    if (v8 <= 3)
    {
      unsigned int v14 = ((v10 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
      if (HIWORD(v14))
      {
        int v11 = 4;
      }
      else if (v14 >= 0x100)
      {
        int v11 = 2;
      }
      else
      {
        int v11 = v14 > 1;
      }
    }
    else
    {
      int v11 = 1;
    }
  }
  else
  {
    int v11 = 0;
  }
  if (v7 < a2)
  {
    unsigned int v12 = ~v7 + a2;
    if (v8 < 4)
    {
      int v13 = (v12 >> (8 * v8)) + 1;
      if (v8)
      {
        int v15 = v12 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if (v8 == 3)
        {
          *(_WORD *)a1 = v15;
          a1[2] = BYTE2(v15);
        }
        else if (v8 == 2)
        {
          *(_WORD *)a1 = v15;
        }
        else
        {
          *a1 = v15;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v12;
      int v13 = 1;
    }
    switch(v11)
    {
      case 1:
        a1[v8] = v13;
        return;
      case 2:
        *(_WORD *)&a1[v8] = v13;
        return;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v8] = v13;
        return;
      default:
        return;
    }
  }
  switch(v11)
  {
    case 1:
      a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 2:
      *(_WORD *)&a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 3:
LABEL_34:
      __break(1u);
      JUMPOUT(0x1A0946DF0);
    case 4:
      *(_DWORD *)&a1[v8] = 0;
      goto LABEL_20;
    default:
LABEL_20:
      if (a2)
      {
LABEL_21:
        uint64_t v16 = *(void (**)(void))(v6 + 56);
        v16();
      }
      return;
  }
}

uint64_t type metadata accessor for RemoteIntentSerialize()
{
  return swift_getGenericMetadata();
}

uint64_t sub_1A0946E30(uint64_t a1, uint64_t a2)
{
  return *(void *)(a2 + 32);
}

uint64_t sub_1A0946E38(uint64_t a1, uint64_t a2)
{
  return *(void *)(a2 + 40);
}

uint64_t sub_1A0946E40(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1A0946E7C(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1A0946EC0(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v11 = a3;
  uint64_t v6 = sub_1A07856F8(&qword_1E94FCA50);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  BOOL v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A086F45C(a1, a1[3]);
  sub_1A0947820();
  sub_1A09F4CC8();
  uint64_t v14 = a2;
  char v13 = 0;
  sub_1A07856F8(&qword_1EB4A5610);
  sub_1A0879F5C(&qword_1E94F9140);
  sub_1A09F49D8();
  if (!v3)
  {
    char v12 = 1;
    sub_1A09F49B8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1A0947078()
{
  if (*v0) {
    return 0xD000000000000013;
  }
  else {
    return 0xD000000000000015;
  }
}

uint64_t sub_1A09470B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A09474FC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A09470E0(uint64_t a1)
{
  unint64_t v2 = sub_1A0947820();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A094711C(uint64_t a1)
{
  unint64_t v2 = sub_1A0947820();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A0947158@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_1A09475EC(a1);
  if (!v2)
  {
    *(void *)a2 = result;
    *(void *)(a2 + 8) = v5;
    *(unsigned char *)(a2 + 16) = v6 & 1;
  }
  return result;
}

uint64_t sub_1A094718C(void *a1)
{
  return sub_1A0946EC0(a1, *v1, v1[1]);
}

unint64_t sub_1A09471AC(uint64_t a1, uint64_t a2, char a3)
{
  unint64_t v6 = MEMORY[0x1E4FBC868];
  unint64_t v22 = MEMORY[0x1E4FBC868];
  uint64_t v7 = sub_1A09F3E18();
  uint64_t v9 = v7;
  uint64_t v10 = v8;
  if (a1)
  {
    uint64_t v21 = sub_1A07856F8(&qword_1EB4A5610);
    *(void *)&long long v20 = a1;
    sub_1A07825B4(&v20, v19);
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v22 = 0x8000000000000000;
    sub_1A08D9AD8(v19, v9, v10, isUniquelyReferenced_nonNull_native);
    unint64_t v22 = v6;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1A09ED6A0(v7, v8, &v20);
    swift_bridgeObjectRelease();
    sub_1A0783C7C((uint64_t)&v20);
  }
  uint64_t v12 = sub_1A09F3E18();
  uint64_t v14 = v12;
  uint64_t v15 = v13;
  if (a3)
  {
    sub_1A09ED6A0(v12, v13, &v20);
    swift_bridgeObjectRelease();
    sub_1A0783C7C((uint64_t)&v20);
  }
  else
  {
    uint64_t v21 = MEMORY[0x1E4FBB550];
    *(void *)&long long v20 = a2;
    sub_1A07825B4(&v20, v19);
    unint64_t v16 = v22;
    char v17 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v22 = 0x8000000000000000;
    sub_1A08D9AD8(v19, v14, v15, v17);
    unint64_t v22 = v16;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v22;
}

uint64_t initializeBufferWithCopyOfBuffer for RemoteIntentClientSetupContext(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for RemoteIntentClientSetupContext()
{
  return swift_bridgeObjectRelease();
}

uint64_t assignWithCopy for RemoteIntentClientSetupContext(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 8) = v4;
  return a1;
}

uint64_t assignWithTake for RemoteIntentClientSetupContext(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for RemoteIntentClientSetupContext(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 17)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for RemoteIntentClientSetupContext(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(void *)uint64_t result = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RemoteIntentClientSetupContext()
{
  return &type metadata for RemoteIntentClientSetupContext;
}

uint64_t sub_1A09474FC(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000015 && a2 == 0x80000001A0A36320 || (sub_1A09F4B28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001A0A36340)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v5 = sub_1A09F4B28();
    swift_bridgeObjectRelease();
    if (v5) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1A09475EC(void *a1)
{
  uint64_t v3 = sub_1A07856F8(&qword_1E94FCA40);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  unint64_t v6 = &v9[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = a1[3];
  sub_1A086F45C(a1, v7);
  sub_1A0947820();
  sub_1A09F4CA8();
  if (v1)
  {
    _s17IMSharedUtilities29RemoteIntentBroadcastEncodingVwxx_0((uint64_t)a1);
  }
  else
  {
    sub_1A07856F8(&qword_1EB4A5610);
    v9[7] = 0;
    sub_1A0879F5C(&qword_1E94F9128);
    sub_1A09F4888();
    uint64_t v7 = v10;
    v9[6] = 1;
    swift_bridgeObjectRetain();
    sub_1A09F4868();
    (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
    _s17IMSharedUtilities29RemoteIntentBroadcastEncodingVwxx_0((uint64_t)a1);
    swift_bridgeObjectRelease();
  }
  return v7;
}

unint64_t sub_1A0947820()
{
  unint64_t result = qword_1E94FCA48;
  if (!qword_1E94FCA48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FCA48);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for RemoteIntentClientSetupContext.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A0947940);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RemoteIntentClientSetupContext.CodingKeys()
{
  return &type metadata for RemoteIntentClientSetupContext.CodingKeys;
}

unint64_t sub_1A094797C()
{
  unint64_t result = qword_1E94FCA58;
  if (!qword_1E94FCA58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FCA58);
  }
  return result;
}

unint64_t sub_1A09479D4()
{
  unint64_t result = qword_1E94FCA60;
  if (!qword_1E94FCA60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FCA60);
  }
  return result;
}

unint64_t sub_1A0947A2C()
{
  unint64_t result = qword_1E94FCA68;
  if (!qword_1E94FCA68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_1E94FCA68);
  }
  return result;
}

uint64_t sub_1A0947A84()
{
  *(void *)(v1 + 40) = v0;
  type metadata accessor for AsyncSerialQueue();
  *(void *)(v1 + 48) = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1A0947B14, v0, 0);
}

uint64_t sub_1A0947B14(uint64_t (*a1)(), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3[5];
  uint64_t v5 = *(void *)(v4 + OBJC_IVAR____TtC17IMSharedUtilitiesP33_C20C688308560C840065F702ABA438D84Lane_scheduled);
  BOOL v6 = __OFSUB__(v5, 1);
  uint64_t v7 = v5 - 1;
  if (v6)
  {
    __break(1u);
    return MEMORY[0x1F4188298](a1, a2, a3);
  }
  *(void *)(v4 + OBJC_IVAR____TtC17IMSharedUtilitiesP33_C20C688308560C840065F702ABA438D84Lane_scheduled) = v7;
  if (v7 <= 0)
  {
    uint64_t v11 = v3[5];
    uint64_t v10 = v3[6];
    sub_1A0949240(v11 + OBJC_IVAR____TtC17IMSharedUtilitiesP33_C20C688308560C840065F702ABA438D84Lane_queue, v10);
    uint64_t v12 = sub_1A07856F8(&qword_1E94F7358);
    sub_1A09F41E8();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v10, v12);
    *(unsigned char *)(v11 + OBJC_IVAR____TtC17IMSharedUtilitiesP33_C20C688308560C840065F702ABA438D84Lane_closed) = 1;
    uint64_t v13 = MEMORY[0x1A6228D10](v11 + 112);
    v3[7] = v13;
    if (v13)
    {
      a2 = v13;
      a1 = sub_1A0947C5C;
      a3 = 0;
      return MEMORY[0x1F4188298](a1, a2, a3);
    }
  }
  swift_task_dealloc();
  uint64_t v8 = (uint64_t (*)(void))v3[1];
  return v8();
}

uint64_t sub_1A0947C5C()
{
  uint64_t v1 = (uint64_t *)(*(void *)(v0 + 40)
                 + OBJC_IVAR____TtC17IMSharedUtilitiesP33_C20C688308560C840065F702ABA438D84Lane_key);
  uint64_t v2 = *v1;
  uint64_t v3 = v1[1];
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_1A09ED96C(v2, v3);
  swift_endAccess();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_release();
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_1A0947D44(int *a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v3 + 16) = a3;
  uint64_t v6 = (uint64_t (*)(void))((char *)a1 + *a1);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v3 + 24) = v4;
  *uint64_t v4 = v3;
  v4[1] = sub_1A0947E14;
  return v6();
}

uint64_t sub_1A0947E14()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *v0;
  swift_task_dealloc();
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 32) = v3;
  *uint64_t v3 = v2;
  v3[1] = sub_1A0947F54;
  return sub_1A0947A84();
}

uint64_t sub_1A0947F54()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_1A0948048()
{
  sub_1A0875BDC(v0 + 112);
  sub_1A09492A4(v0 + OBJC_IVAR____TtC17IMSharedUtilitiesP33_C20C688308560C840065F702ABA438D84Lane_queue);
  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();

  return MEMORY[0x1F4188210](v0);
}

uint64_t AsyncMultiQueue.__allocating_init(priority:bufferingPolicy:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  swift_defaultActor_initialize();
  uint64_t v5 = OBJC_IVAR____TtC17IMSharedUtilities15AsyncMultiQueue_lanes;
  *(void *)(v4 + v5) = sub_1A08D7DC4(MEMORY[0x1E4FBC860]);
  sub_1A0948214(a1, v4 + OBJC_IVAR____TtC17IMSharedUtilities15AsyncMultiQueue_priority);
  uint64_t v6 = v4 + OBJC_IVAR____TtC17IMSharedUtilities15AsyncMultiQueue_bufferingPolicy;
  uint64_t v7 = sub_1A07856F8(&qword_1E94F7350);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(v6, a2, v7);
  return v4;
}

uint64_t AsyncMultiQueue.init(priority:bufferingPolicy:)(uint64_t a1, uint64_t a2)
{
  swift_defaultActor_initialize();
  uint64_t v5 = OBJC_IVAR____TtC17IMSharedUtilities15AsyncMultiQueue_lanes;
  *(void *)(v2 + v5) = sub_1A08D7DC4(MEMORY[0x1E4FBC860]);
  sub_1A0948214(a1, v2 + OBJC_IVAR____TtC17IMSharedUtilities15AsyncMultiQueue_priority);
  uint64_t v6 = v2 + OBJC_IVAR____TtC17IMSharedUtilities15AsyncMultiQueue_bufferingPolicy;
  uint64_t v7 = sub_1A07856F8(&qword_1E94F7350);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(v6, a2, v7);
  return v2;
}

uint64_t sub_1A0948214(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1A07856F8(&qword_1EB4A5650);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A094827C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[10] = a4;
  v5[11] = v4;
  v5[8] = a2;
  v5[9] = a3;
  v5[7] = a1;
  uint64_t v6 = sub_1A07856F8(&qword_1E94F7348);
  v5[12] = v6;
  v5[13] = *(void *)(v6 - 8);
  v5[14] = swift_task_alloc();
  uint64_t v7 = sub_1A07856F8(&qword_1E94F7350);
  v5[15] = v7;
  v5[16] = *(void *)(v7 - 8);
  v5[17] = swift_task_alloc();
  sub_1A07856F8(&qword_1EB4A5650);
  v5[18] = swift_task_alloc();
  type metadata accessor for AsyncSerialQueue();
  v5[19] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1A0948404, v4, 0);
}

uint64_t sub_1A0948404()
{
  uint64_t v1 = (uint64_t *)(v0[11] + OBJC_IVAR____TtC17IMSharedUtilities15AsyncMultiQueue_lanes);
  swift_beginAccess();
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(v2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v3 && (unint64_t v4 = sub_1A087AAA4(v0[7], v0[8]), (v5 & 1) != 0))
  {
    uint64_t v6 = *(void *)(*(void *)(v2 + 56) + 8 * v4);
    swift_retain();
  }
  else
  {
    uint64_t v8 = v0[18];
    uint64_t v7 = v0[19];
    uint64_t v10 = v0[16];
    uint64_t v9 = v0[17];
    uint64_t v11 = v0[15];
    uint64_t v12 = v0[11];
    uint64_t v14 = v0[7];
    uint64_t v13 = v0[8];
    sub_1A08DF920(v12 + OBJC_IVAR____TtC17IMSharedUtilities15AsyncMultiQueue_priority, v8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(v9, v12 + OBJC_IVAR____TtC17IMSharedUtilities15AsyncMultiQueue_bufferingPolicy, v11);
    AsyncSerialQueue.init(priority:bufferingPolicy:)(v8, v9, v7);
    type metadata accessor for Lane(0);
    uint64_t v6 = swift_allocObject();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_defaultActor_initialize();
    *(void *)(v6 + 120) = 0;
    swift_unknownObjectWeakInit();
    *(void *)(v6 + OBJC_IVAR____TtC17IMSharedUtilitiesP33_C20C688308560C840065F702ABA438D84Lane_scheduled) = 0;
    *(unsigned char *)(v6 + OBJC_IVAR____TtC17IMSharedUtilitiesP33_C20C688308560C840065F702ABA438D84Lane_closed) = 0;
    *(void *)(v6 + 120) = &off_1EF2BD920;
    swift_unknownObjectWeakAssign();
    swift_release();
    sub_1A0948AB4(v7, v6 + OBJC_IVAR____TtC17IMSharedUtilitiesP33_C20C688308560C840065F702ABA438D84Lane_queue);
    uint64_t v15 = (uint64_t *)(v6 + OBJC_IVAR____TtC17IMSharedUtilitiesP33_C20C688308560C840065F702ABA438D84Lane_key);
    *uint64_t v15 = v14;
    v15[1] = v13;
  }
  v0[20] = v6;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4188298](sub_1A09485F0, v6, 0);
}

void sub_1A09485F0()
{
  uint64_t v1 = v0[20];
  uint64_t v2 = *(void *)(v1 + OBJC_IVAR____TtC17IMSharedUtilitiesP33_C20C688308560C840065F702ABA438D84Lane_scheduled);
  BOOL v3 = __OFADD__(v2, 1);
  uint64_t v4 = v2 + 1;
  if (v3)
  {
    __break(1u);
  }
  else
  {
    uint64_t v6 = v0[13];
    uint64_t v5 = v0[14];
    uint64_t v7 = v0[12];
    uint64_t v8 = v0[9];
    uint64_t v9 = v0[10];
    *(void *)(v1 + OBJC_IVAR____TtC17IMSharedUtilitiesP33_C20C688308560C840065F702ABA438D84Lane_scheduled) = v4;
    uint64_t v10 = (void *)swift_allocObject();
    void v10[2] = v8;
    void v10[3] = v9;
    void v10[4] = v1;
    uint64_t v11 = swift_allocObject();
    *(void *)(v11 + 16) = &unk_1E94FCAA0;
    *(void *)(v11 + 24) = v10;
    v0[5] = &unk_1E94F9960;
    v0[6] = v11;
    swift_retain();
    swift_retain();
    swift_retain();
    sub_1A07856F8(&qword_1E94F7358);
    sub_1A09F41D8();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
    swift_release();
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v12 = (void (*)(void))v0[1];
    v12();
  }
}

uint64_t sub_1A094878C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = sub_1A07856F8(&qword_1EB4A5650);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A08DF920(v4 + OBJC_IVAR____TtC17IMSharedUtilities15AsyncMultiQueue_priority, (uint64_t)v11);
  uint64_t v12 = (void *)swift_allocObject();
  void v12[2] = 0;
  v12[3] = 0;
  v12[4] = v4;
  v12[5] = a1;
  v12[6] = a2;
  v12[7] = a3;
  v12[8] = a4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1A08BE6E4((uint64_t)v11, (uint64_t)&unk_1E94FCAB0, (uint64_t)v12);
  return swift_release();
}

uint64_t sub_1A0948894(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v8 + 16) = v13;
  *uint64_t v13 = v8;
  v13[1] = sub_1A077EE54;
  return sub_1A094827C(a5, a6, a7, a8);
}

uint64_t AsyncMultiQueue.deinit()
{
  sub_1A08CE0BC(v0 + OBJC_IVAR____TtC17IMSharedUtilities15AsyncMultiQueue_priority);
  uint64_t v1 = v0 + OBJC_IVAR____TtC17IMSharedUtilities15AsyncMultiQueue_bufferingPolicy;
  uint64_t v2 = sub_1A07856F8(&qword_1E94F7350);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();
  return v0;
}

uint64_t AsyncMultiQueue.__deallocating_deinit()
{
  sub_1A08CE0BC(v0 + OBJC_IVAR____TtC17IMSharedUtilities15AsyncMultiQueue_priority);
  uint64_t v1 = v0 + OBJC_IVAR____TtC17IMSharedUtilities15AsyncMultiQueue_bufferingPolicy;
  uint64_t v2 = sub_1A07856F8(&qword_1E94F7350);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();

  return MEMORY[0x1F4188210](v0);
}

uint64_t AsyncMultiQueue.unownedExecutor.getter()
{
  return v0;
}

uint64_t type metadata accessor for Lane(uint64_t a1)
{
  return sub_1A089C2FC(a1, (uint64_t *)&unk_1E94FCAB8);
}

uint64_t sub_1A0948AB4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AsyncSerialQueue();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A0948B18()
{
  swift_release();
  swift_release();

  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_1A0948B58()
{
  uint64_t v2 = *(int **)(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 32);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_1A077EE54;
  v4[2] = v3;
  uint64_t v7 = (uint64_t (*)(void))((char *)v2 + *v2);
  uint64_t v5 = (void *)swift_task_alloc();
  v4[3] = v5;
  *uint64_t v5 = v4;
  v5[1] = sub_1A0947E14;
  return v7();
}

uint64_t sub_1A0948C7C()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1A0948CB4()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();

  return MEMORY[0x1F4186498](v0, 72, 7);
}

uint64_t sub_1A0948D04()
{
  uint64_t v2 = v0[5];
  uint64_t v3 = v0[6];
  uint64_t v4 = v0[7];
  uint64_t v5 = v0[8];
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v6;
  *uint64_t v6 = v1;
  v6[1] = sub_1A077EE58;
  uint64_t v7 = (void *)swift_task_alloc();
  _OWORD v6[2] = v7;
  *uint64_t v7 = v6;
  v7[1] = sub_1A077EE54;
  return sub_1A094827C(v2, v3, v4, v5);
}

uint64_t sub_1A0948E04()
{
  return type metadata accessor for Lane(0);
}

void sub_1A0948E0C()
{
  sub_1A09491DC(319, (unint64_t *)&qword_1E94F7360, MEMORY[0x1E4FBD038]);
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t sub_1A0948EEC()
{
  return type metadata accessor for AsyncMultiQueue(0);
}

uint64_t type metadata accessor for AsyncMultiQueue(uint64_t a1)
{
  return sub_1A089C2FC(a1, qword_1E94F73A0);
}

void sub_1A0948F14()
{
  sub_1A0949184();
  if (v0 <= 0x3F)
  {
    sub_1A09491DC(319, &qword_1E94F74B8, MEMORY[0x1E4FBD030]);
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

uint64_t method lookup function for AsyncMultiQueue(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for AsyncMultiQueue);
}

uint64_t dispatch thunk of AsyncMultiQueue.__allocating_init(priority:bufferingPolicy:)()
{
  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t dispatch thunk of AsyncMultiQueue.perform(key:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(*(void *)v4 + 152)
                                                                   + **(int **)(*(void *)v4 + 152));
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v10;
  *uint64_t v10 = v5;
  v10[1] = sub_1A077EE54;
  return v12(a1, a2, a3, a4);
}

uint64_t dispatch thunk of AsyncMultiQueue.perform(key:_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 160))();
}

void sub_1A0949184()
{
  if (!qword_1E94F74B0)
  {
    sub_1A09F41C8();
    unint64_t v0 = sub_1A09F4518();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E94F74B0);
    }
  }
}

void sub_1A09491DC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v6 = sub_1A078D800(&qword_1E94F7380);
    unint64_t v7 = a3(a1, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_1A0949240(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AsyncSerialQueue();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A09492A4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for AsyncSerialQueue();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1A0949304@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)&long long v123 = sub_1A09F3E18();
  *((void *)&v123 + 1) = v4;
  sub_1A09F4648();
  if (*(void *)(a1 + 16) && (unint64_t v5 = sub_1A087AB2C((uint64_t)&v119), (v6 & 1) != 0))
  {
    sub_1A0785268(*(void *)(a1 + 56) + 32 * v5, (uint64_t)&v123);
  }
  else
  {
    long long v123 = 0u;
    long long v124 = 0u;
  }
  sub_1A087B20C((uint64_t)&v119);
  if (!*((void *)&v124 + 1))
  {
    sub_1A0783C7C((uint64_t)&v123);
LABEL_10:
    int64_t v7 = *(void *)(MEMORY[0x1E4FBC860] + 16);
    if (!v7) {
      goto LABEL_8;
    }
    goto LABEL_11;
  }
  sub_1A07856F8(&qword_1E94FBB40);
  if (!swift_dynamicCast()) {
    goto LABEL_10;
  }
  int64_t v7 = *(void *)(v115 + 16);
  if (!v7)
  {
LABEL_8:
    swift_bridgeObjectRelease();
    uint64_t v8 = MEMORY[0x1E4FBC860];
    goto LABEL_16;
  }
LABEL_11:
  uint64_t v113 = a2;
  *(void *)&long long v123 = MEMORY[0x1E4FBC860];
  sub_1A09EAECC(0, v7, 0);
  uint64_t v9 = 0;
  uint64_t v8 = v123;
  do
  {
    uint64_t v10 = swift_bridgeObjectRetain();
    RemoteIntentServiceInfo.init(dictionaryRepresentation:)(v10, &v119);
    long long v11 = v119;
    long long v12 = v120;
    long long v13 = v121;
    uint64_t v14 = v122;
    *(void *)&long long v123 = v8;
    unint64_t v16 = *(void *)(v8 + 16);
    unint64_t v15 = *(void *)(v8 + 24);
    if (v16 >= v15 >> 1)
    {
      long long v109 = v120;
      long long v111 = v119;
      long long v107 = v121;
      sub_1A09EAECC(v15 > 1, v16 + 1, 1);
      long long v13 = v107;
      long long v12 = v109;
      long long v11 = v111;
      uint64_t v8 = v123;
    }
    ++v9;
    *(void *)(v8 + 16) = v16 + 1;
    uint64_t v17 = v8 + 56 * v16;
    *(_OWORD *)(v17 + 32) = v11;
    *(_OWORD *)(v17 + 48) = v12;
    *(_OWORD *)(v17 + 64) = v13;
    *(void *)(v17 + 80) = v14;
  }
  while (v7 != v9);
  swift_bridgeObjectRelease();
  a2 = v113;
LABEL_16:
  uint64_t v116 = sub_1A09F3E18();
  sub_1A09F4648();
  if (*(void *)(a1 + 16) && (unint64_t v18 = sub_1A087AB2C((uint64_t)&v119), (v19 & 1) != 0))
  {
    sub_1A0785268(*(void *)(a1 + 56) + 32 * v18, (uint64_t)&v123);
  }
  else
  {
    long long v123 = 0u;
    long long v124 = 0u;
  }
  sub_1A087B20C((uint64_t)&v119);
  if (!*((void *)&v124 + 1))
  {
    sub_1A0783C7C((uint64_t)&v123);
    goto LABEL_24;
  }
  sub_1A07856F8(&qword_1E94FCBE0);
  if (!swift_dynamicCast())
  {
LABEL_24:
    uint64_t v20 = MEMORY[0x1E4FBC868];
    goto LABEL_25;
  }
  uint64_t v20 = v116;
LABEL_25:
  uint64_t v114 = sub_1A094A110(v20);
  swift_bridgeObjectRelease();
  uint64_t v117 = sub_1A09F3E18();
  uint64_t v118 = v21;
  sub_1A09F4648();
  if (*(void *)(a1 + 16) && (unint64_t v22 = sub_1A087AB2C((uint64_t)&v119), (v23 & 1) != 0))
  {
    sub_1A0785268(*(void *)(a1 + 56) + 32 * v22, (uint64_t)&v123);
  }
  else
  {
    long long v123 = 0u;
    long long v124 = 0u;
  }
  sub_1A087B20C((uint64_t)&v119);
  if (!*((void *)&v124 + 1))
  {
    sub_1A0783C7C((uint64_t)&v123);
    goto LABEL_33;
  }
  sub_1A07856F8((uint64_t *)&unk_1E94F9030);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_33:
    char v112 = 3;
    goto LABEL_34;
  }
  char v112 = sub_1A091DD00(v117);
LABEL_34:
  *(void *)&long long v123 = sub_1A09F3E18();
  *((void *)&v123 + 1) = v24;
  sub_1A09F4648();
  if (*(void *)(a1 + 16) && (unint64_t v25 = sub_1A087AB2C((uint64_t)&v119), (v26 & 1) != 0))
  {
    sub_1A0785268(*(void *)(a1 + 56) + 32 * v25, (uint64_t)&v123);
  }
  else
  {
    long long v123 = 0u;
    long long v124 = 0u;
  }
  sub_1A087B20C((uint64_t)&v119);
  if (*((void *)&v124 + 1))
  {
    sub_1A07856F8(&qword_1EB4A5610);
    int v27 = swift_dynamicCast();
    uint64_t v28 = v117;
    if (!v27) {
      uint64_t v28 = 0;
    }
    uint64_t v110 = v28;
  }
  else
  {
    sub_1A0783C7C((uint64_t)&v123);
    uint64_t v110 = 0;
  }
  *(void *)&long long v123 = sub_1A09F3E18();
  *((void *)&v123 + 1) = v29;
  sub_1A09F4648();
  if (*(void *)(a1 + 16) && (unint64_t v30 = sub_1A087AB2C((uint64_t)&v119), (v31 & 1) != 0))
  {
    sub_1A0785268(*(void *)(a1 + 56) + 32 * v30, (uint64_t)&v123);
  }
  else
  {
    long long v123 = 0u;
    long long v124 = 0u;
  }
  sub_1A087B20C((uint64_t)&v119);
  if (*((void *)&v124 + 1))
  {
    sub_1A07856F8((uint64_t *)&unk_1E94F9030);
    int v32 = swift_dynamicCast();
    uint64_t v33 = v117;
    if (!v32) {
      uint64_t v33 = 0;
    }
    uint64_t v108 = v33;
  }
  else
  {
    sub_1A0783C7C((uint64_t)&v123);
    uint64_t v108 = 0;
  }
  *(void *)&long long v123 = sub_1A09F3E18();
  *((void *)&v123 + 1) = v34;
  sub_1A09F4648();
  if (*(void *)(a1 + 16) && (unint64_t v35 = sub_1A087AB2C((uint64_t)&v119), (v36 & 1) != 0))
  {
    sub_1A0785268(*(void *)(a1 + 56) + 32 * v35, (uint64_t)&v123);
  }
  else
  {
    long long v123 = 0u;
    long long v124 = 0u;
  }
  sub_1A087B20C((uint64_t)&v119);
  if (*((void *)&v124 + 1))
  {
    sub_1A07856F8((uint64_t *)&unk_1E94F9030);
    int v37 = swift_dynamicCast();
    uint64_t v38 = v117;
    if (!v37) {
      uint64_t v38 = 0;
    }
    uint64_t v106 = v38;
  }
  else
  {
    sub_1A0783C7C((uint64_t)&v123);
    uint64_t v106 = 0;
  }
  *(void *)&long long v123 = sub_1A09F3E18();
  *((void *)&v123 + 1) = v39;
  sub_1A09F4648();
  if (*(void *)(a1 + 16) && (unint64_t v40 = sub_1A087AB2C((uint64_t)&v119), (v41 & 1) != 0))
  {
    sub_1A0785268(*(void *)(a1 + 56) + 32 * v40, (uint64_t)&v123);
  }
  else
  {
    long long v123 = 0u;
    long long v124 = 0u;
  }
  sub_1A087B20C((uint64_t)&v119);
  if (*((void *)&v124 + 1))
  {
    int v42 = swift_dynamicCast();
    if (v42) {
      uint64_t v43 = v117;
    }
    else {
      uint64_t v43 = 0;
    }
    if (v42) {
      uint64_t v44 = v118;
    }
    else {
      uint64_t v44 = 0;
    }
    uint64_t v104 = v44;
    uint64_t v105 = v43;
  }
  else
  {
    sub_1A0783C7C((uint64_t)&v123);
    uint64_t v104 = 0;
    uint64_t v105 = 0;
  }
  *(void *)&long long v123 = sub_1A09F3E18();
  *((void *)&v123 + 1) = v45;
  sub_1A09F4648();
  if (*(void *)(a1 + 16) && (unint64_t v46 = sub_1A087AB2C((uint64_t)&v119), (v47 & 1) != 0))
  {
    sub_1A0785268(*(void *)(a1 + 56) + 32 * v46, (uint64_t)&v123);
  }
  else
  {
    long long v123 = 0u;
    long long v124 = 0u;
  }
  sub_1A087B20C((uint64_t)&v119);
  if (*((void *)&v124 + 1))
  {
    int v48 = swift_dynamicCast();
    uint64_t v49 = v117;
    if (!v48) {
      uint64_t v49 = 0;
    }
    uint64_t v103 = v49;
    char v50 = v48 ^ 1;
  }
  else
  {
    sub_1A0783C7C((uint64_t)&v123);
    uint64_t v103 = 0;
    char v50 = 1;
  }
  char v102 = v50;
  *(void *)&long long v123 = sub_1A09F3E18();
  *((void *)&v123 + 1) = v51;
  sub_1A09F4648();
  if (*(void *)(a1 + 16) && (unint64_t v52 = sub_1A087AB2C((uint64_t)&v119), (v53 & 1) != 0))
  {
    sub_1A0785268(*(void *)(a1 + 56) + 32 * v52, (uint64_t)&v123);
  }
  else
  {
    long long v123 = 0u;
    long long v124 = 0u;
  }
  sub_1A087B20C((uint64_t)&v119);
  if (*((void *)&v124 + 1))
  {
    int v54 = swift_dynamicCast();
    uint64_t v55 = v117;
    if (!v54) {
      uint64_t v55 = 0;
    }
    uint64_t v101 = v55;
    char v56 = v54 ^ 1;
  }
  else
  {
    sub_1A0783C7C((uint64_t)&v123);
    uint64_t v101 = 0;
    char v56 = 1;
  }
  char v100 = v56;
  *(void *)&long long v123 = sub_1A09F3E18();
  *((void *)&v123 + 1) = v57;
  sub_1A09F4648();
  if (*(void *)(a1 + 16) && (unint64_t v58 = sub_1A087AB2C((uint64_t)&v119), (v59 & 1) != 0))
  {
    sub_1A0785268(*(void *)(a1 + 56) + 32 * v58, (uint64_t)&v123);
  }
  else
  {
    long long v123 = 0u;
    long long v124 = 0u;
  }
  sub_1A087B20C((uint64_t)&v119);
  if (*((void *)&v124 + 1))
  {
    sub_1A07856F8(&qword_1E94FBB40);
    int v60 = swift_dynamicCast();
    uint64_t v61 = v117;
    if (!v60) {
      uint64_t v61 = 0;
    }
    uint64_t v99 = v61;
  }
  else
  {
    sub_1A0783C7C((uint64_t)&v123);
    uint64_t v99 = 0;
  }
  *(void *)&long long v123 = sub_1A09F3E18();
  *((void *)&v123 + 1) = v62;
  sub_1A09F4648();
  if (*(void *)(a1 + 16) && (unint64_t v63 = sub_1A087AB2C((uint64_t)&v119), (v64 & 1) != 0))
  {
    sub_1A0785268(*(void *)(a1 + 56) + 32 * v63, (uint64_t)&v123);
  }
  else
  {
    long long v123 = 0u;
    long long v124 = 0u;
  }
  sub_1A087B20C((uint64_t)&v119);
  if (*((void *)&v124 + 1))
  {
    int v65 = swift_dynamicCast();
    char v66 = v117;
    if (!v65) {
      char v66 = 2;
    }
  }
  else
  {
    sub_1A0783C7C((uint64_t)&v123);
    char v66 = 2;
  }
  char v98 = v66;
  *(void *)&long long v123 = sub_1A09F3E18();
  *((void *)&v123 + 1) = v67;
  sub_1A09F4648();
  if (*(void *)(a1 + 16) && (unint64_t v68 = sub_1A087AB2C((uint64_t)&v119), (v69 & 1) != 0))
  {
    sub_1A0785268(*(void *)(a1 + 56) + 32 * v68, (uint64_t)&v123);
  }
  else
  {
    long long v123 = 0u;
    long long v124 = 0u;
  }
  sub_1A087B20C((uint64_t)&v119);
  if (*((void *)&v124 + 1))
  {
    sub_1A07856F8(&qword_1E94FBB40);
    int v70 = swift_dynamicCast();
    uint64_t v71 = v117;
    if (!v70) {
      uint64_t v71 = 0;
    }
    uint64_t v97 = v71;
  }
  else
  {
    sub_1A0783C7C((uint64_t)&v123);
    uint64_t v97 = 0;
  }
  *(void *)&long long v123 = sub_1A09F3E18();
  *((void *)&v123 + 1) = v72;
  sub_1A09F4648();
  if (*(void *)(a1 + 16) && (unint64_t v73 = sub_1A087AB2C((uint64_t)&v119), (v74 & 1) != 0))
  {
    sub_1A0785268(*(void *)(a1 + 56) + 32 * v73, (uint64_t)&v123);
  }
  else
  {
    long long v123 = 0u;
    long long v124 = 0u;
  }
  sub_1A087B20C((uint64_t)&v119);
  if (*((void *)&v124 + 1))
  {
    sub_1A07856F8(&qword_1E94FAE48);
    if (swift_dynamicCast()) {
      uint64_t v75 = v117;
    }
    else {
      uint64_t v75 = 0;
    }
  }
  else
  {
    sub_1A0783C7C((uint64_t)&v123);
    uint64_t v75 = 0;
  }
  *(void *)&long long v123 = sub_1A09F3E18();
  *((void *)&v123 + 1) = v76;
  sub_1A09F4648();
  if (*(void *)(a1 + 16) && (unint64_t v77 = sub_1A087AB2C((uint64_t)&v119), (v78 & 1) != 0))
  {
    sub_1A0785268(*(void *)(a1 + 56) + 32 * v77, (uint64_t)&v123);
  }
  else
  {
    long long v123 = 0u;
    long long v124 = 0u;
  }
  sub_1A087B20C((uint64_t)&v119);
  if (*((void *)&v124 + 1))
  {
    if (swift_dynamicCast()) {
      char v79 = v117;
    }
    else {
      char v79 = 2;
    }
  }
  else
  {
    sub_1A0783C7C((uint64_t)&v123);
    char v79 = 2;
  }
  *(void *)&long long v123 = sub_1A09F3E18();
  *((void *)&v123 + 1) = v80;
  sub_1A09F4648();
  if (*(void *)(a1 + 16) && (unint64_t v81 = sub_1A087AB2C((uint64_t)&v119), (v82 & 1) != 0))
  {
    sub_1A0785268(*(void *)(a1 + 56) + 32 * v81, (uint64_t)&v123);
  }
  else
  {
    long long v123 = 0u;
    long long v124 = 0u;
  }
  sub_1A087B20C((uint64_t)&v119);
  if (*((void *)&v124 + 1))
  {
    int v83 = swift_dynamicCast();
    if (v83) {
      uint64_t v84 = v117;
    }
    else {
      uint64_t v84 = 0;
    }
    if (v83) {
      uint64_t v85 = v118;
    }
    else {
      uint64_t v85 = 0;
    }
  }
  else
  {
    sub_1A0783C7C((uint64_t)&v123);
    uint64_t v84 = 0;
    uint64_t v85 = 0;
  }
  *(void *)&long long v123 = sub_1A09F3E18();
  *((void *)&v123 + 1) = v86;
  sub_1A09F4648();
  if (*(void *)(a1 + 16) && (unint64_t v87 = sub_1A087AB2C((uint64_t)&v119), (v88 & 1) != 0))
  {
    sub_1A0785268(*(void *)(a1 + 56) + 32 * v87, (uint64_t)&v123);
  }
  else
  {
    long long v123 = 0u;
    long long v124 = 0u;
  }
  sub_1A087B20C((uint64_t)&v119);
  if (*((void *)&v124 + 1))
  {
    int v89 = swift_dynamicCast();
    if (v89) {
      uint64_t v90 = v117;
    }
    else {
      uint64_t v90 = 0;
    }
    char v91 = v89 ^ 1;
  }
  else
  {
    sub_1A0783C7C((uint64_t)&v123);
    uint64_t v90 = 0;
    char v91 = 1;
  }
  *(void *)&long long v123 = sub_1A09F3E18();
  *((void *)&v123 + 1) = v92;
  sub_1A09F4648();
  if (*(void *)(a1 + 16) && (unint64_t v93 = sub_1A087AB2C((uint64_t)&v119), (v94 & 1) != 0))
  {
    sub_1A0785268(*(void *)(a1 + 56) + 32 * v93, (uint64_t)&v123);
  }
  else
  {
    long long v123 = 0u;
    long long v124 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_1A087B20C((uint64_t)&v119);
  if (*((void *)&v124 + 1))
  {
    uint64_t result = swift_dynamicCast();
    char v96 = v117;
    if (!result) {
      char v96 = 2;
    }
  }
  else
  {
    uint64_t result = sub_1A0783C7C((uint64_t)&v123);
    char v96 = 2;
  }
  *(void *)a2 = v110;
  *(void *)(a2 + 8) = v8;
  *(void *)(a2 + 16) = v108;
  *(void *)(a2 + 24) = v106;
  *(void *)(a2 + 32) = v114;
  *(void *)(a2 + 40) = v105;
  *(void *)(a2 + 48) = v104;
  *(void *)(a2 + 56) = v103;
  *(unsigned char *)(a2 + 64) = v102;
  *(void *)(a2 + 72) = v101;
  *(unsigned char *)(a2 + 80) = v100;
  *(void *)(a2 + 88) = v99;
  *(unsigned char *)(a2 + 96) = v98;
  *(void *)(a2 + 104) = v97;
  *(void *)(a2 + 112) = v75;
  *(unsigned char *)(a2 + 120) = v79;
  *(void *)(a2 + 128) = v84;
  *(void *)(a2 + 136) = v85;
  *(unsigned char *)(a2 + 144) = v112;
  *(void *)(a2 + 152) = v90;
  *(unsigned char *)(a2 + 160) = v91;
  *(unsigned char *)(a2 + 161) = v96;
  return result;
}

uint64_t sub_1A094A110(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for RemoteIntentFileTransfer();
  uint64_t v41 = *(void *)(v2 - 8);
  uint64_t v3 = MEMORY[0x1F4188790](v2 - 8);
  unint64_t v5 = (char *)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = MEMORY[0x1F4188790](v3);
  uint64_t v8 = (char *)&v38 - v7;
  MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)&v38 - v9;
  uint64_t v11 = MEMORY[0x1E4FBC868];
  uint64_t v12 = *(void *)(a1 + 64);
  uint64_t v40 = a1 + 64;
  uint64_t v44 = MEMORY[0x1E4FBC868];
  uint64_t v13 = -1 << *(unsigned char *)(a1 + 32);
  if (-v13 < 64) {
    uint64_t v14 = ~(-1 << -(char)v13);
  }
  else {
    uint64_t v14 = -1;
  }
  unint64_t v15 = v14 & v12;
  uint64_t v38 = -1 << *(unsigned char *)(a1 + 32);
  int64_t v39 = (unint64_t)(63 - v13) >> 6;
  uint64_t v42 = a1;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v43 = 0;
  while (1)
  {
    if (v15)
    {
      unint64_t v23 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      unint64_t v24 = v23 | (v43 << 6);
      goto LABEL_34;
    }
    int64_t v25 = v43 + 1;
    if (__OFADD__(v43, 1))
    {
LABEL_37:
      __break(1u);
      goto LABEL_38;
    }
    if (v25 >= v39) {
      goto LABEL_36;
    }
    unint64_t v26 = *(void *)(v40 + 8 * v25);
    int64_t v27 = v43 + 1;
    if (!v26)
    {
      int64_t v27 = v43 + 2;
      if (v43 + 2 >= v39) {
        goto LABEL_36;
      }
      unint64_t v26 = *(void *)(v40 + 8 * v27);
      if (!v26)
      {
        int64_t v27 = v43 + 3;
        if (v43 + 3 >= v39) {
          goto LABEL_36;
        }
        unint64_t v26 = *(void *)(v40 + 8 * v27);
        if (!v26)
        {
          int64_t v27 = v43 + 4;
          if (v43 + 4 >= v39) {
            goto LABEL_36;
          }
          unint64_t v26 = *(void *)(v40 + 8 * v27);
          if (!v26) {
            break;
          }
        }
      }
    }
LABEL_33:
    unint64_t v15 = (v26 - 1) & v26;
    unint64_t v24 = __clz(__rbit64(v26)) + (v27 << 6);
    int64_t v43 = v27;
LABEL_34:
    uint64_t v33 = (uint64_t *)(*(void *)(v42 + 48) + 16 * v24);
    uint64_t v34 = *v33;
    uint64_t v35 = v33[1];
    uint64_t v36 = *(void *)(*(void *)(v42 + 56) + 8 * v24);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    RemoteIntentFileTransfer.init(dictionaryRepresentation:)(v36, (uint64_t)v8);
    sub_1A09548B8((uint64_t)v8, (uint64_t)v10);
    sub_1A09548B8((uint64_t)v10, (uint64_t)v5);
    unint64_t v37 = *(void *)(v11 + 16);
    if (*(void *)(v11 + 24) <= v37)
    {
      sub_1A09DD94C(v37 + 1, 1);
      uint64_t v11 = v44;
    }
    sub_1A09F4C48();
    sub_1A09F3DA8();
    uint64_t result = sub_1A09F4C88();
    uint64_t v17 = v11 + 64;
    uint64_t v18 = -1 << *(unsigned char *)(v11 + 32);
    unint64_t v19 = result & ~v18;
    unint64_t v20 = v19 >> 6;
    if (((-1 << v19) & ~*(void *)(v11 + 64 + 8 * (v19 >> 6))) != 0)
    {
      unint64_t v21 = __clz(__rbit64((-1 << v19) & ~*(void *)(v11 + 64 + 8 * (v19 >> 6)))) | v19 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v29 = 0;
      unint64_t v30 = (unint64_t)(63 - v18) >> 6;
      do
      {
        if (++v20 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_37;
        }
        BOOL v31 = v20 == v30;
        if (v20 == v30) {
          unint64_t v20 = 0;
        }
        v29 |= v31;
        uint64_t v32 = *(void *)(v17 + 8 * v20);
      }
      while (v32 == -1);
      unint64_t v21 = __clz(__rbit64(~v32)) + (v20 << 6);
    }
    *(void *)(v17 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
    unint64_t v22 = (void *)(*(void *)(v11 + 48) + 16 * v21);
    *unint64_t v22 = v34;
    v22[1] = v35;
    sub_1A09548B8((uint64_t)v5, *(void *)(v11 + 56) + *(void *)(v41 + 72) * v21);
    ++*(void *)(v11 + 16);
    uint64_t result = swift_bridgeObjectRelease();
  }
  int64_t v28 = v43 + 5;
  if (v43 + 5 >= v39)
  {
LABEL_36:
    sub_1A08C1F7C();
    return v11;
  }
  unint64_t v26 = *(void *)(v40 + 8 * v28);
  if (v26)
  {
    int64_t v27 = v43 + 5;
    goto LABEL_33;
  }
  while (1)
  {
    int64_t v27 = v28 + 1;
    if (__OFADD__(v28, 1)) {
      break;
    }
    if (v27 >= v39) {
      goto LABEL_36;
    }
    unint64_t v26 = *(void *)(v40 + 8 * v27);
    ++v28;
    if (v26) {
      goto LABEL_33;
    }
  }
LABEL_38:
  __break(1u);
  return result;
}

uint64_t sub_1A094A50C(uint64_t a1)
{
  uint64_t v49 = sub_1A07856F8(&qword_1E94FCBE8);
  uint64_t v2 = MEMORY[0x1F4188790](v49);
  int v48 = (void *)((char *)v45 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v4 = MEMORY[0x1F4188790](v2);
  uint64_t v6 = (void *)((char *)v45 - v5);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (void *)((char *)v45 - v7);
  uint64_t v9 = MEMORY[0x1E4FBC868];
  uint64_t v10 = *(void *)(a1 + 64);
  uint64_t v47 = a1 + 64;
  uint64_t v52 = MEMORY[0x1E4FBC868];
  uint64_t v11 = -1 << *(unsigned char *)(a1 + 32);
  if (-v11 < 64) {
    uint64_t v12 = ~(-1 << -(char)v11);
  }
  else {
    uint64_t v12 = -1;
  }
  unint64_t v13 = v12 & v10;
  v45[1] = -1 << *(unsigned char *)(a1 + 32);
  int64_t v46 = (unint64_t)(63 - v11) >> 6;
  uint64_t v50 = a1;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v51 = 0;
  while (1)
  {
    if (v13)
    {
      unint64_t v21 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v22 = v21 | (v51 << 6);
      goto LABEL_34;
    }
    int64_t v23 = v51 + 1;
    if (__OFADD__(v51, 1))
    {
LABEL_37:
      __break(1u);
      goto LABEL_38;
    }
    if (v23 >= v46) {
      goto LABEL_36;
    }
    unint64_t v24 = *(void *)(v47 + 8 * v23);
    int64_t v25 = v51 + 1;
    if (!v24)
    {
      int64_t v25 = v51 + 2;
      if (v51 + 2 >= v46) {
        goto LABEL_36;
      }
      unint64_t v24 = *(void *)(v47 + 8 * v25);
      if (!v24)
      {
        int64_t v25 = v51 + 3;
        if (v51 + 3 >= v46) {
          goto LABEL_36;
        }
        unint64_t v24 = *(void *)(v47 + 8 * v25);
        if (!v24)
        {
          int64_t v25 = v51 + 4;
          if (v51 + 4 >= v46) {
            goto LABEL_36;
          }
          unint64_t v24 = *(void *)(v47 + 8 * v25);
          if (!v24) {
            break;
          }
        }
      }
    }
LABEL_33:
    unint64_t v13 = (v24 - 1) & v24;
    unint64_t v22 = __clz(__rbit64(v24)) + (v25 << 6);
    int64_t v51 = v25;
LABEL_34:
    uint64_t v31 = *(void *)(v50 + 56);
    uint64_t v32 = (uint64_t *)(*(void *)(v50 + 48) + 16 * v22);
    uint64_t v34 = *v32;
    uint64_t v33 = v32[1];
    uint64_t v35 = v31 + *(void *)(*(void *)(type metadata accessor for RemoteIntentFileTransfer() - 8) + 72) * v22;
    uint64_t v36 = v49;
    sub_1A09547EC(v35, (uint64_t)v8 + *(int *)(v49 + 48));
    *uint64_t v8 = v34;
    v8[1] = v33;
    sub_1A0954850((uint64_t)v8, (uint64_t)v6);
    uint64_t v37 = (uint64_t)v6 + *(int *)(v36 + 48);
    swift_bridgeObjectRetain();
    unint64_t v38 = RemoteIntentFileTransfer.dictionaryRepresentation.getter();
    uint64_t v39 = *(int *)(v36 + 48);
    uint64_t v40 = v48;
    uint64_t v41 = (uint64_t)v48 + v39;
    uint64_t v43 = *v6;
    uint64_t v42 = v6[1];
    *int v48 = *v6;
    v40[1] = v42;
    sub_1A09548B8(v37, (uint64_t)v40 + v39);
    unint64_t v44 = *(void *)(v9 + 16);
    if (*(void *)(v9 + 24) <= v44)
    {
      sub_1A09DDD2C(v44 + 1, 1);
      uint64_t v9 = v52;
    }
    sub_1A09F4C48();
    sub_1A09F3DA8();
    uint64_t result = sub_1A09F4C88();
    uint64_t v15 = v9 + 64;
    uint64_t v16 = -1 << *(unsigned char *)(v9 + 32);
    unint64_t v17 = result & ~v16;
    unint64_t v18 = v17 >> 6;
    if (((-1 << v17) & ~*(void *)(v9 + 64 + 8 * (v17 >> 6))) != 0)
    {
      unint64_t v19 = __clz(__rbit64((-1 << v17) & ~*(void *)(v9 + 64 + 8 * (v17 >> 6)))) | v17 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v27 = 0;
      unint64_t v28 = (unint64_t)(63 - v16) >> 6;
      do
      {
        if (++v18 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_37;
        }
        BOOL v29 = v18 == v28;
        if (v18 == v28) {
          unint64_t v18 = 0;
        }
        v27 |= v29;
        uint64_t v30 = *(void *)(v15 + 8 * v18);
      }
      while (v30 == -1);
      unint64_t v19 = __clz(__rbit64(~v30)) + (v18 << 6);
    }
    *(void *)(v15 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    unint64_t v20 = (void *)(*(void *)(v9 + 48) + 16 * v19);
    *unint64_t v20 = v43;
    v20[1] = v42;
    *(void *)(*(void *)(v9 + 56) + 8 * v19) = v38;
    ++*(void *)(v9 + 16);
    uint64_t result = sub_1A095491C(v41);
  }
  int64_t v26 = v51 + 5;
  if (v51 + 5 >= v46)
  {
LABEL_36:
    sub_1A08C1F7C();
    return v9;
  }
  unint64_t v24 = *(void *)(v47 + 8 * v26);
  if (v24)
  {
    int64_t v25 = v51 + 5;
    goto LABEL_33;
  }
  while (1)
  {
    int64_t v25 = v26 + 1;
    if (__OFADD__(v26, 1)) {
      break;
    }
    if (v25 >= v46) {
      goto LABEL_36;
    }
    unint64_t v24 = *(void *)(v47 + 8 * v25);
    ++v26;
    if (v24) {
      goto LABEL_33;
    }
  }
LABEL_38:
  __break(1u);
  return result;
}

unint64_t sub_1A094A918()
{
  uint64_t v2 = *v0;
  uint64_t v1 = v0[1];
  uint64_t v3 = v0[2];
  uint64_t v4 = v0[4];
  uint64_t v68 = v0[3];
  uint64_t v69 = v0[6];
  uint64_t v64 = v0[7];
  uint64_t v65 = v0[9];
  uint64_t v66 = v0[5];
  char v70 = *((unsigned char *)v0 + 64);
  char v71 = *((unsigned char *)v0 + 80);
  uint64_t v72 = v0[11];
  int v73 = *((unsigned __int8 *)v0 + 96);
  uint64_t v74 = v0[13];
  uint64_t v75 = v0[14];
  int v76 = *((unsigned __int8 *)v0 + 120);
  uint64_t v5 = v0[17];
  uint64_t v67 = v0[16];
  int v6 = *((unsigned __int8 *)v0 + 144);
  uint64_t v7 = v0[19];
  char v8 = *((unsigned char *)v0 + 160);
  int v9 = *((unsigned __int8 *)v0 + 161);
  unint64_t v85 = MEMORY[0x1E4FBC868];
  *(void *)&long long v83 = sub_1A09F3E18();
  *((void *)&v83 + 1) = v10;
  sub_1A09F4648();
  if (v2)
  {
    uint64_t v84 = sub_1A07856F8(&qword_1EB4A5610);
    *(void *)&long long v83 = v2;
    sub_1A07825B4(&v83, v82);
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v81 = v85;
    unint64_t v85 = 0x8000000000000000;
    sub_1A08D97F0(v82, (uint64_t)&v77, isUniquelyReferenced_nonNull_native);
    unint64_t v85 = v81;
    swift_bridgeObjectRelease();
    sub_1A087B20C((uint64_t)&v77);
  }
  else
  {
    sub_1A09ED5A4((uint64_t)&v77, &v83);
    sub_1A087B20C((uint64_t)&v77);
    sub_1A0783C7C((uint64_t)&v83);
  }
  *(void *)&long long v77 = sub_1A09F3E18();
  *((void *)&v77 + 1) = v12;
  swift_bridgeObjectRetain();
  sub_1A09F4648();
  if (v1)
  {
    uint64_t v61 = v5;
    int v62 = v6;
    char v63 = v8;
    int v13 = v9;
    uint64_t v14 = *(void *)(v1 + 16);
    if (v14)
    {
      uint64_t v60 = v4;
      swift_bridgeObjectRetain();
      uint64_t v15 = (void *)(v1 + 80);
      uint64_t v16 = (void *)MEMORY[0x1E4FBC860];
      do
      {
        uint64_t v17 = *v15;
        long long v77 = *((_OWORD *)v15 - 3);
        long long v78 = *((_OWORD *)v15 - 2);
        long long v79 = *((_OWORD *)v15 - 1);
        uint64_t v80 = v17;
        uint64_t v18 = RemoteIntentServiceInfo.dictionaryRepresentation.getter();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v16 = sub_1A0891630(0, v16[2] + 1, 1, v16);
        }
        unint64_t v20 = v16[2];
        unint64_t v19 = v16[3];
        if (v20 >= v19 >> 1) {
          uint64_t v16 = sub_1A0891630((void *)(v19 > 1), v20 + 1, 1, v16);
        }
        v15 += 7;
        long long v16[2] = v20 + 1;
        v16[v20 + 4] = v18;
        --v14;
      }
      while (v14);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v4 = v60;
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v16 = (void *)MEMORY[0x1E4FBC860];
    }
    uint64_t v21 = v68;
    *((void *)&v78 + 1) = sub_1A07856F8(&qword_1E94FBB40);
    *(void *)&long long v77 = v16;
    sub_1A07825B4(&v77, v82);
    char v22 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v81 = v85;
    unint64_t v85 = 0x8000000000000000;
    sub_1A08D97F0(v82, (uint64_t)&v83, v22);
    unint64_t v85 = v81;
    swift_bridgeObjectRelease();
    sub_1A087B20C((uint64_t)&v83);
    int v9 = v13;
    int v6 = v62;
    char v8 = v63;
    uint64_t v5 = v61;
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_1A09ED5A4((uint64_t)&v83, &v77);
    sub_1A087B20C((uint64_t)&v83);
    sub_1A0783C7C((uint64_t)&v77);
    uint64_t v21 = v68;
  }
  *(void *)&long long v83 = sub_1A09F3E18();
  *((void *)&v83 + 1) = v23;
  sub_1A09F4648();
  if (v3)
  {
    uint64_t v84 = sub_1A07856F8((uint64_t *)&unk_1E94F9030);
    *(void *)&long long v83 = v3;
    sub_1A07825B4(&v83, v82);
    swift_bridgeObjectRetain();
    char v24 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v81 = v85;
    unint64_t v85 = 0x8000000000000000;
    sub_1A08D97F0(v82, (uint64_t)&v77, v24);
    unint64_t v85 = v81;
    swift_bridgeObjectRelease();
    sub_1A087B20C((uint64_t)&v77);
  }
  else
  {
    sub_1A09ED5A4((uint64_t)&v77, &v83);
    sub_1A087B20C((uint64_t)&v77);
    sub_1A0783C7C((uint64_t)&v83);
  }
  *(void *)&long long v83 = sub_1A09F3E18();
  *((void *)&v83 + 1) = v25;
  sub_1A09F4648();
  if (v21)
  {
    uint64_t v84 = sub_1A07856F8((uint64_t *)&unk_1E94F9030);
    *(void *)&long long v83 = v21;
    sub_1A07825B4(&v83, v82);
    swift_bridgeObjectRetain();
    char v26 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v81 = v85;
    unint64_t v85 = 0x8000000000000000;
    sub_1A08D97F0(v82, (uint64_t)&v77, v26);
    unint64_t v85 = v81;
    swift_bridgeObjectRelease();
    sub_1A087B20C((uint64_t)&v77);
  }
  else
  {
    sub_1A09ED5A4((uint64_t)&v77, &v83);
    sub_1A087B20C((uint64_t)&v77);
    sub_1A0783C7C((uint64_t)&v83);
  }
  *(void *)&long long v83 = sub_1A09F3E18();
  *((void *)&v83 + 1) = v27;
  swift_bridgeObjectRetain();
  sub_1A09F4648();
  if (v4)
  {
    uint64_t v28 = sub_1A094A50C(v4);
    swift_bridgeObjectRelease();
    uint64_t v84 = sub_1A07856F8(&qword_1E94FCBE0);
    *(void *)&long long v83 = v28;
    sub_1A07825B4(&v83, v82);
    char v29 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v81 = v85;
    unint64_t v85 = 0x8000000000000000;
    sub_1A08D97F0(v82, (uint64_t)&v77, v29);
    unint64_t v85 = v81;
    swift_bridgeObjectRelease();
    sub_1A087B20C((uint64_t)&v77);
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_1A09ED5A4((uint64_t)&v77, &v83);
    sub_1A087B20C((uint64_t)&v77);
    sub_1A0783C7C((uint64_t)&v83);
  }
  *(void *)&long long v83 = sub_1A09F3E18();
  *((void *)&v83 + 1) = v30;
  uint64_t v31 = MEMORY[0x1E4FBB1A0];
  sub_1A09F4648();
  if (v69)
  {
    uint64_t v84 = v31;
    *(void *)&long long v83 = v66;
    *((void *)&v83 + 1) = v69;
    sub_1A07825B4(&v83, v82);
    swift_bridgeObjectRetain();
    char v32 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v81 = v85;
    unint64_t v85 = 0x8000000000000000;
    sub_1A08D97F0(v82, (uint64_t)&v77, v32);
    unint64_t v85 = v81;
    swift_bridgeObjectRelease();
    sub_1A087B20C((uint64_t)&v77);
  }
  else
  {
    sub_1A09ED5A4((uint64_t)&v77, &v83);
    sub_1A087B20C((uint64_t)&v77);
    sub_1A0783C7C((uint64_t)&v83);
  }
  *(void *)&long long v83 = sub_1A09F3E18();
  *((void *)&v83 + 1) = v33;
  sub_1A09F4648();
  uint64_t v34 = MEMORY[0x1E4FBC1C8];
  if (v70)
  {
    sub_1A09ED5A4((uint64_t)&v77, &v83);
    sub_1A087B20C((uint64_t)&v77);
    sub_1A0783C7C((uint64_t)&v83);
  }
  else
  {
    uint64_t v84 = MEMORY[0x1E4FBC1C8];
    *(void *)&long long v83 = v64;
    sub_1A07825B4(&v83, v82);
    char v35 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v81 = v85;
    unint64_t v85 = 0x8000000000000000;
    sub_1A08D97F0(v82, (uint64_t)&v77, v35);
    unint64_t v85 = v81;
    swift_bridgeObjectRelease();
    sub_1A087B20C((uint64_t)&v77);
  }
  *(void *)&long long v83 = sub_1A09F3E18();
  *((void *)&v83 + 1) = v36;
  sub_1A09F4648();
  if (v71)
  {
    sub_1A09ED5A4((uint64_t)&v77, &v83);
    sub_1A087B20C((uint64_t)&v77);
    sub_1A0783C7C((uint64_t)&v83);
  }
  else
  {
    uint64_t v84 = v34;
    *(void *)&long long v83 = v65;
    sub_1A07825B4(&v83, v82);
    char v37 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v81 = v85;
    unint64_t v85 = 0x8000000000000000;
    sub_1A08D97F0(v82, (uint64_t)&v77, v37);
    unint64_t v85 = v81;
    swift_bridgeObjectRelease();
    sub_1A087B20C((uint64_t)&v77);
  }
  *(void *)&long long v83 = sub_1A09F3E18();
  *((void *)&v83 + 1) = v38;
  sub_1A09F4648();
  if (v72)
  {
    uint64_t v84 = sub_1A07856F8(&qword_1E94FBB40);
    *(void *)&long long v83 = v72;
    sub_1A07825B4(&v83, v82);
    swift_bridgeObjectRetain();
    char v39 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v81 = v85;
    unint64_t v85 = 0x8000000000000000;
    sub_1A08D97F0(v82, (uint64_t)&v77, v39);
    unint64_t v85 = v81;
    swift_bridgeObjectRelease();
    sub_1A087B20C((uint64_t)&v77);
  }
  else
  {
    sub_1A09ED5A4((uint64_t)&v77, &v83);
    sub_1A087B20C((uint64_t)&v77);
    sub_1A0783C7C((uint64_t)&v83);
  }
  *(void *)&long long v83 = sub_1A09F3E18();
  *((void *)&v83 + 1) = v40;
  sub_1A09F4648();
  uint64_t v41 = MEMORY[0x1E4FBB390];
  if (v73 == 2)
  {
    sub_1A09ED5A4((uint64_t)&v77, &v83);
    sub_1A087B20C((uint64_t)&v77);
    sub_1A0783C7C((uint64_t)&v83);
  }
  else
  {
    uint64_t v84 = MEMORY[0x1E4FBB390];
    LOBYTE(v83) = v73 & 1;
    sub_1A07825B4(&v83, v82);
    char v42 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v81 = v85;
    unint64_t v85 = 0x8000000000000000;
    sub_1A08D97F0(v82, (uint64_t)&v77, v42);
    unint64_t v85 = v81;
    swift_bridgeObjectRelease();
    sub_1A087B20C((uint64_t)&v77);
  }
  *(void *)&long long v83 = sub_1A09F3E18();
  *((void *)&v83 + 1) = v43;
  sub_1A09F4648();
  if (v74)
  {
    uint64_t v84 = sub_1A07856F8(&qword_1E94FBB40);
    *(void *)&long long v83 = v74;
    sub_1A07825B4(&v83, v82);
    swift_bridgeObjectRetain();
    char v44 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v81 = v85;
    unint64_t v85 = 0x8000000000000000;
    sub_1A08D97F0(v82, (uint64_t)&v77, v44);
    unint64_t v85 = v81;
    swift_bridgeObjectRelease();
    sub_1A087B20C((uint64_t)&v77);
  }
  else
  {
    sub_1A09ED5A4((uint64_t)&v77, &v83);
    sub_1A087B20C((uint64_t)&v77);
    sub_1A0783C7C((uint64_t)&v83);
  }
  *(void *)&long long v83 = sub_1A09F3E18();
  *((void *)&v83 + 1) = v45;
  sub_1A09F4648();
  if (v75)
  {
    uint64_t v84 = sub_1A07856F8(&qword_1E94FAE48);
    *(void *)&long long v83 = v75;
    sub_1A07825B4(&v83, v82);
    swift_bridgeObjectRetain();
    char v46 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v81 = v85;
    unint64_t v85 = 0x8000000000000000;
    sub_1A08D97F0(v82, (uint64_t)&v77, v46);
    unint64_t v85 = v81;
    swift_bridgeObjectRelease();
    sub_1A087B20C((uint64_t)&v77);
  }
  else
  {
    sub_1A09ED5A4((uint64_t)&v77, &v83);
    sub_1A087B20C((uint64_t)&v77);
    sub_1A0783C7C((uint64_t)&v83);
  }
  *(void *)&long long v83 = sub_1A09F3E18();
  *((void *)&v83 + 1) = v47;
  sub_1A09F4648();
  if (v76 == 2)
  {
    sub_1A09ED5A4((uint64_t)&v77, &v83);
    sub_1A087B20C((uint64_t)&v77);
    sub_1A0783C7C((uint64_t)&v83);
  }
  else
  {
    uint64_t v84 = v41;
    LOBYTE(v83) = v76 & 1;
    sub_1A07825B4(&v83, v82);
    char v48 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v81 = v85;
    unint64_t v85 = 0x8000000000000000;
    sub_1A08D97F0(v82, (uint64_t)&v77, v48);
    unint64_t v85 = v81;
    swift_bridgeObjectRelease();
    sub_1A087B20C((uint64_t)&v77);
  }
  *(void *)&long long v83 = sub_1A09F3E18();
  *((void *)&v83 + 1) = v49;
  uint64_t v50 = MEMORY[0x1E4FBB1A0];
  sub_1A09F4648();
  if (v5)
  {
    uint64_t v84 = v50;
    *(void *)&long long v83 = v67;
    *((void *)&v83 + 1) = v5;
    sub_1A07825B4(&v83, v82);
    swift_bridgeObjectRetain();
    char v51 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v81 = v85;
    unint64_t v85 = 0x8000000000000000;
    sub_1A08D97F0(v82, (uint64_t)&v77, v51);
    unint64_t v85 = v81;
    swift_bridgeObjectRelease();
    sub_1A087B20C((uint64_t)&v77);
  }
  else
  {
    sub_1A09ED5A4((uint64_t)&v77, &v83);
    sub_1A087B20C((uint64_t)&v77);
    sub_1A0783C7C((uint64_t)&v83);
  }
  *(void *)&long long v83 = sub_1A09F3E18();
  *((void *)&v83 + 1) = v52;
  sub_1A09F4648();
  if (v6 == 3)
  {
    sub_1A09ED5A4((uint64_t)&v77, &v83);
    sub_1A087B20C((uint64_t)&v77);
    sub_1A0783C7C((uint64_t)&v83);
  }
  else
  {
    uint64_t v53 = sub_1A091D9D8(v6);
    uint64_t v84 = sub_1A07856F8((uint64_t *)&unk_1E94F9030);
    *(void *)&long long v83 = v53;
    sub_1A07825B4(&v83, v82);
    char v54 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v81 = v85;
    unint64_t v85 = 0x8000000000000000;
    sub_1A08D97F0(v82, (uint64_t)&v77, v54);
    unint64_t v85 = v81;
    swift_bridgeObjectRelease();
    sub_1A087B20C((uint64_t)&v77);
  }
  *(void *)&long long v83 = sub_1A09F3E18();
  *((void *)&v83 + 1) = v55;
  sub_1A09F4648();
  if (v8)
  {
    sub_1A09ED5A4((uint64_t)&v77, &v83);
    sub_1A087B20C((uint64_t)&v77);
    sub_1A0783C7C((uint64_t)&v83);
  }
  else
  {
    uint64_t v84 = MEMORY[0x1E4FBC538];
    *(void *)&long long v83 = v7;
    sub_1A07825B4(&v83, v82);
    char v56 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v81 = v85;
    unint64_t v85 = 0x8000000000000000;
    sub_1A08D97F0(v82, (uint64_t)&v77, v56);
    unint64_t v85 = v81;
    swift_bridgeObjectRelease();
    sub_1A087B20C((uint64_t)&v77);
  }
  *(void *)&long long v83 = sub_1A09F3E18();
  *((void *)&v83 + 1) = v57;
  sub_1A09F4648();
  if (v9 == 2)
  {
    sub_1A09ED5A4((uint64_t)&v77, &v83);
    sub_1A087B20C((uint64_t)&v77);
    sub_1A0783C7C((uint64_t)&v83);
  }
  else
  {
    uint64_t v84 = v41;
    LOBYTE(v83) = v9 & 1;
    sub_1A07825B4(&v83, v82);
    char v58 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v81 = v85;
    unint64_t v85 = 0x8000000000000000;
    sub_1A08D97F0(v82, (uint64_t)&v77, v58);
    unint64_t v85 = v81;
    swift_bridgeObjectRelease();
    sub_1A087B20C((uint64_t)&v77);
  }
  return v85;
}

uint64_t sub_1A094B800(char a1)
{
  uint64_t v2 = v1;
  sub_1A07856F8(&qword_1E94FCC68);
  char v16 = a1;
  if (qword_1E94F85E0 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_1A09F39E8();
  sub_1A078510C(v4, (uint64_t)qword_1E94FC898);
  uint64_t v5 = sub_1A09F39C8();
  os_log_type_t v6 = sub_1A09F4368();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v15 = v8;
    *(_DWORD *)uint64_t v7 = 136315394;
    sub_1A086F750();
    uint64_t v9 = sub_1A09F4AE8();
    sub_1A0785144(v9, v10, &v15);
    sub_1A09F4528();
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 12) = 2080;
    sub_1A07856F8(&qword_1E94FCC78);
    uint64_t v11 = sub_1A09F3E38();
    sub_1A0785144(v11, v12, &v15);
    sub_1A09F4528();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A0772000, v5, v6, "Using nil/missing key aware decoding for '%s': %s", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1A6228C20](v8, -1, -1);
    uint64_t v13 = v7;
    uint64_t v2 = v1;
    MEMORY[0x1A6228C20](v13, -1, -1);
  }

  sub_1A07856F8(&qword_1E94F8F08);
  sub_1A0792558(&qword_1E94FCC70, &qword_1E94FCC68);
  uint64_t result = sub_1A09F4888();
  if (!v2)
  {
    if (v15 == 1) {
      return 0;
    }
    else {
      return v15;
    }
  }
  return result;
}

uint64_t sub_1A094BA7C(char a1)
{
  uint64_t v2 = v1;
  sub_1A07856F8(&qword_1E94FCB68);
  char v16 = a1;
  if (qword_1E94F85E0 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_1A09F39E8();
  sub_1A078510C(v4, (uint64_t)qword_1E94FC898);
  uint64_t v5 = sub_1A09F39C8();
  os_log_type_t v6 = sub_1A09F4368();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v15 = v8;
    *(_DWORD *)uint64_t v7 = 136315394;
    sub_1A087A3F4();
    uint64_t v9 = sub_1A09F4AE8();
    sub_1A0785144(v9, v10, &v15);
    sub_1A09F4528();
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 12) = 2080;
    sub_1A07856F8(&qword_1E94FCB78);
    uint64_t v11 = sub_1A09F3E38();
    sub_1A0785144(v11, v12, &v15);
    sub_1A09F4528();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A0772000, v5, v6, "Using nil/missing key aware decoding for '%s': %s", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1A6228C20](v8, -1, -1);
    uint64_t v13 = v7;
    uint64_t v2 = v1;
    MEMORY[0x1A6228C20](v13, -1, -1);
  }

  sub_1A07856F8(&qword_1E94F9108);
  sub_1A0792558(&qword_1E94FCB80, &qword_1E94FCB68);
  uint64_t result = sub_1A09F4888();
  if (!v2)
  {
    if (v15 == 1) {
      return 0;
    }
    else {
      return v15;
    }
  }
  return result;
}

uint64_t sub_1A094BCF8(char a1)
{
  uint64_t v2 = v1;
  sub_1A07856F8(&qword_1E94FCB68);
  char v16 = a1;
  if (qword_1E94F85E0 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_1A09F39E8();
  sub_1A078510C(v4, (uint64_t)qword_1E94FC898);
  uint64_t v5 = sub_1A09F39C8();
  os_log_type_t v6 = sub_1A09F4368();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v15 = v8;
    *(_DWORD *)uint64_t v7 = 136315394;
    sub_1A087A4A4();
    uint64_t v9 = sub_1A09F4AE8();
    sub_1A0785144(v9, v10, &v15);
    sub_1A09F4528();
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 12) = 2080;
    sub_1A07856F8(&qword_1E94FCB78);
    uint64_t v11 = sub_1A09F3E38();
    sub_1A0785144(v11, v12, &v15);
    sub_1A09F4528();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A0772000, v5, v6, "Using nil/missing key aware decoding for '%s': %s", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1A6228C20](v8, -1, -1);
    uint64_t v13 = v7;
    uint64_t v2 = v1;
    MEMORY[0x1A6228C20](v13, -1, -1);
  }

  sub_1A07856F8(&qword_1E94F90D8);
  sub_1A0792558(&qword_1E94FCB80, &qword_1E94FCB68);
  uint64_t result = sub_1A09F4888();
  if (!v2)
  {
    if (v15 == 1) {
      return 0;
    }
    else {
      return v15;
    }
  }
  return result;
}

uint64_t sub_1A094BF74(char a1)
{
  uint64_t v2 = v1;
  sub_1A07856F8(&qword_1E94FCCC0);
  char v16 = a1;
  if (qword_1E94F85E0 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_1A09F39E8();
  sub_1A078510C(v4, (uint64_t)qword_1E94FC898);
  uint64_t v5 = sub_1A09F39C8();
  os_log_type_t v6 = sub_1A09F4368();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v15 = v8;
    *(_DWORD *)uint64_t v7 = 136315394;
    sub_1A08898B8();
    uint64_t v9 = sub_1A09F4AE8();
    sub_1A0785144(v9, v10, &v15);
    sub_1A09F4528();
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 12) = 2080;
    sub_1A07856F8(&qword_1E94FCCD0);
    uint64_t v11 = sub_1A09F3E38();
    sub_1A0785144(v11, v12, &v15);
    sub_1A09F4528();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A0772000, v5, v6, "Using nil/missing key aware decoding for '%s': %s", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1A6228C20](v8, -1, -1);
    uint64_t v13 = v7;
    uint64_t v2 = v1;
    MEMORY[0x1A6228C20](v13, -1, -1);
  }

  sub_1A07856F8(&qword_1E94F96D0);
  sub_1A0792558(&qword_1E94FCCC8, &qword_1E94FCCC0);
  uint64_t result = sub_1A09F4888();
  if (!v2)
  {
    if (v15 == 1) {
      return 0;
    }
    else {
      return v15;
    }
  }
  return result;
}

uint64_t sub_1A094C1F0(char a1)
{
  uint64_t v2 = v1;
  sub_1A07856F8(&qword_1E94FCCC0);
  char v16 = a1;
  if (qword_1E94F85E0 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_1A09F39E8();
  sub_1A078510C(v4, (uint64_t)qword_1E94FC898);
  uint64_t v5 = sub_1A09F39C8();
  os_log_type_t v6 = sub_1A09F4368();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v15 = v8;
    *(_DWORD *)uint64_t v7 = 136315394;
    sub_1A0889968();
    uint64_t v9 = sub_1A09F4AE8();
    sub_1A0785144(v9, v10, &v15);
    sub_1A09F4528();
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 12) = 2080;
    sub_1A07856F8(&qword_1E94FCCD0);
    uint64_t v11 = sub_1A09F3E38();
    sub_1A0785144(v11, v12, &v15);
    sub_1A09F4528();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A0772000, v5, v6, "Using nil/missing key aware decoding for '%s': %s", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1A6228C20](v8, -1, -1);
    uint64_t v13 = v7;
    uint64_t v2 = v1;
    MEMORY[0x1A6228C20](v13, -1, -1);
  }

  sub_1A07856F8(&qword_1E94F96B8);
  sub_1A0792558(&qword_1E94FCCC8, &qword_1E94FCCC0);
  uint64_t result = sub_1A09F4888();
  if (!v2)
  {
    if (v15 == 1) {
      return 0;
    }
    else {
      return v15;
    }
  }
  return result;
}

uint64_t sub_1A094C46C(char a1)
{
  uint64_t v2 = v1;
  sub_1A07856F8(&qword_1E94FCB68);
  char v16 = a1;
  if (qword_1E94F85E0 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_1A09F39E8();
  sub_1A078510C(v4, (uint64_t)qword_1E94FC898);
  uint64_t v5 = sub_1A09F39C8();
  os_log_type_t v6 = sub_1A09F4368();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v15 = v8;
    *(_DWORD *)uint64_t v7 = 136315394;
    sub_1A0899508();
    uint64_t v9 = sub_1A09F4AE8();
    sub_1A0785144(v9, v10, &v15);
    sub_1A09F4528();
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 12) = 2080;
    sub_1A07856F8(&qword_1E94FCB78);
    uint64_t v11 = sub_1A09F3E38();
    sub_1A0785144(v11, v12, &v15);
    sub_1A09F4528();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A0772000, v5, v6, "Using nil/missing key aware decoding for '%s': %s", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1A6228C20](v8, -1, -1);
    uint64_t v13 = v7;
    uint64_t v2 = v1;
    MEMORY[0x1A6228C20](v13, -1, -1);
  }

  sub_1A07856F8(&qword_1E94F9C90);
  sub_1A0792558(&qword_1E94FCB80, &qword_1E94FCB68);
  uint64_t result = sub_1A09F4888();
  if (!v2)
  {
    if (v15 == 1) {
      return 0;
    }
    else {
      return v15;
    }
  }
  return result;
}

uint64_t sub_1A094C6E8(char a1)
{
  uint64_t v2 = v1;
  sub_1A07856F8(&qword_1E94FCB88);
  char v16 = a1;
  if (qword_1E94F85E0 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_1A09F39E8();
  sub_1A078510C(v4, (uint64_t)qword_1E94FC898);
  uint64_t v5 = sub_1A09F39C8();
  os_log_type_t v6 = sub_1A09F4368();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v15 = v8;
    *(_DWORD *)uint64_t v7 = 136315394;
    sub_1A0899508();
    uint64_t v9 = sub_1A09F4AE8();
    sub_1A0785144(v9, v10, &v15);
    sub_1A09F4528();
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 12) = 2080;
    sub_1A07856F8(&qword_1E94FCB98);
    uint64_t v11 = sub_1A09F3E38();
    sub_1A0785144(v11, v12, &v15);
    sub_1A09F4528();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A0772000, v5, v6, "Using nil/missing key aware decoding for '%s': %s", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1A6228C20](v8, -1, -1);
    uint64_t v13 = v7;
    uint64_t v2 = v1;
    MEMORY[0x1A6228C20](v13, -1, -1);
  }

  sub_1A07856F8(&qword_1E94F9C90);
  sub_1A0792558(&qword_1E94FCB90, &qword_1E94FCB88);
  uint64_t result = sub_1A09F4888();
  if (!v2)
  {
    if (v15 == 1) {
      return 0;
    }
    else {
      return v15;
    }
  }
  return result;
}

uint64_t sub_1A094C964(char a1)
{
  uint64_t v2 = v1;
  sub_1A07856F8(&qword_1E94FCC48);
  char v16 = a1;
  if (qword_1E94F85E0 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_1A09F39E8();
  sub_1A078510C(v4, (uint64_t)qword_1E94FC898);
  uint64_t v5 = sub_1A09F39C8();
  os_log_type_t v6 = sub_1A09F4368();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v15 = v8;
    *(_DWORD *)uint64_t v7 = 136315394;
    sub_1A08D4B04();
    uint64_t v9 = sub_1A09F4AE8();
    sub_1A0785144(v9, v10, &v15);
    sub_1A09F4528();
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 12) = 2080;
    sub_1A07856F8(&qword_1E94FCC58);
    uint64_t v11 = sub_1A09F3E38();
    sub_1A0785144(v11, v12, &v15);
    sub_1A09F4528();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A0772000, v5, v6, "Using nil/missing key aware decoding for '%s': %s", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1A6228C20](v8, -1, -1);
    uint64_t v13 = v7;
    uint64_t v2 = v1;
    MEMORY[0x1A6228C20](v13, -1, -1);
  }

  sub_1A07856F8(&qword_1E94FB280);
  sub_1A0792558(&qword_1E94FCC50, &qword_1E94FCC48);
  uint64_t result = sub_1A09F4888();
  if (!v2)
  {
    if (v15 == 1) {
      return 0;
    }
    else {
      return v15;
    }
  }
  return result;
}

uint64_t sub_1A094CBE0(char a1)
{
  uint64_t v2 = v1;
  sub_1A07856F8(&qword_1E94FCB88);
  char v16 = a1;
  if (qword_1E94F85E0 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_1A09F39E8();
  sub_1A078510C(v4, (uint64_t)qword_1E94FC898);
  uint64_t v5 = sub_1A09F39C8();
  os_log_type_t v6 = sub_1A09F4368();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v15 = v8;
    *(_DWORD *)uint64_t v7 = 136315394;
    sub_1A090D050();
    uint64_t v9 = sub_1A09F4AE8();
    sub_1A0785144(v9, v10, &v15);
    sub_1A09F4528();
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 12) = 2080;
    sub_1A07856F8(&qword_1E94FCB98);
    uint64_t v11 = sub_1A09F3E38();
    sub_1A0785144(v11, v12, &v15);
    sub_1A09F4528();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A0772000, v5, v6, "Using nil/missing key aware decoding for '%s': %s", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1A6228C20](v8, -1, -1);
    uint64_t v13 = v7;
    uint64_t v2 = v1;
    MEMORY[0x1A6228C20](v13, -1, -1);
  }

  sub_1A07856F8(&qword_1E94FBB48);
  sub_1A0792558(&qword_1E94FCB90, &qword_1E94FCB88);
  uint64_t result = sub_1A09F4888();
  if (!v2)
  {
    if (v15 == 1) {
      return 0;
    }
    else {
      return v15;
    }
  }
  return result;
}

uint64_t sub_1A094CE5C(char a1)
{
  uint64_t v2 = v1;
  sub_1A07856F8(&qword_1E94FCB68);
  char v16 = a1;
  if (qword_1E94F85E0 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_1A09F39E8();
  sub_1A078510C(v4, (uint64_t)qword_1E94FC898);
  uint64_t v5 = sub_1A09F39C8();
  os_log_type_t v6 = sub_1A09F4368();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v15 = v8;
    *(_DWORD *)uint64_t v7 = 136315394;
    sub_1A090D050();
    uint64_t v9 = sub_1A09F4AE8();
    sub_1A0785144(v9, v10, &v15);
    sub_1A09F4528();
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 12) = 2080;
    sub_1A07856F8(&qword_1E94FCB78);
    uint64_t v11 = sub_1A09F3E38();
    sub_1A0785144(v11, v12, &v15);
    sub_1A09F4528();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A0772000, v5, v6, "Using nil/missing key aware decoding for '%s': %s", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1A6228C20](v8, -1, -1);
    uint64_t v13 = v7;
    uint64_t v2 = v1;
    MEMORY[0x1A6228C20](v13, -1, -1);
  }

  sub_1A07856F8(&qword_1E94FBB48);
  sub_1A0792558(&qword_1E94FCB80, &qword_1E94FCB68);
  uint64_t result = sub_1A09F4888();
  if (!v2)
  {
    if (v15 == 1) {
      return 0;
    }
    else {
      return v15;
    }
  }
  return result;
}

uint64_t sub_1A094D0D8(char a1)
{
  uint64_t v2 = v1;
  sub_1A07856F8(&qword_1E94FCB68);
  char v16 = a1;
  if (qword_1E94F85E0 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_1A09F39E8();
  sub_1A078510C(v4, (uint64_t)qword_1E94FC898);
  uint64_t v5 = sub_1A09F39C8();
  os_log_type_t v6 = sub_1A09F4368();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v15 = v8;
    *(_DWORD *)uint64_t v7 = 136315394;
    sub_1A093203C();
    uint64_t v9 = sub_1A09F4AE8();
    sub_1A0785144(v9, v10, &v15);
    sub_1A09F4528();
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 12) = 2080;
    sub_1A07856F8(&qword_1E94FCB78);
    uint64_t v11 = sub_1A09F3E38();
    sub_1A0785144(v11, v12, &v15);
    sub_1A09F4528();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A0772000, v5, v6, "Using nil/missing key aware decoding for '%s': %s", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1A6228C20](v8, -1, -1);
    uint64_t v13 = v7;
    uint64_t v2 = v1;
    MEMORY[0x1A6228C20](v13, -1, -1);
  }

  sub_1A07856F8(&qword_1E94FC1A0);
  sub_1A0792558(&qword_1E94FCB80, &qword_1E94FCB68);
  uint64_t result = sub_1A09F4888();
  if (!v2)
  {
    if (v15 == 1) {
      return 0;
    }
    else {
      return v15;
    }
  }
  return result;
}

uint64_t sub_1A094D354(char a1)
{
  uint64_t v2 = v1;
  sub_1A07856F8(&qword_1E94FCB68);
  char v16 = a1;
  if (qword_1E94F85E0 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_1A09F39E8();
  sub_1A078510C(v4, (uint64_t)qword_1E94FC898);
  uint64_t v5 = sub_1A09F39C8();
  os_log_type_t v6 = sub_1A09F4368();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v15 = v8;
    *(_DWORD *)uint64_t v7 = 136315394;
    sub_1A09442B0();
    uint64_t v9 = sub_1A09F4AE8();
    sub_1A0785144(v9, v10, &v15);
    sub_1A09F4528();
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 12) = 2080;
    sub_1A07856F8(&qword_1E94FCB78);
    uint64_t v11 = sub_1A09F3E38();
    sub_1A0785144(v11, v12, &v15);
    sub_1A09F4528();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A0772000, v5, v6, "Using nil/missing key aware decoding for '%s': %s", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1A6228C20](v8, -1, -1);
    uint64_t v13 = v7;
    uint64_t v2 = v1;
    MEMORY[0x1A6228C20](v13, -1, -1);
  }

  sub_1A07856F8(&qword_1E94FC760);
  sub_1A0792558(&qword_1E94FCB80, &qword_1E94FCB68);
  uint64_t result = sub_1A09F4888();
  if (!v2)
  {
    if (v15 == 1) {
      return 0;
    }
    else {
      return v15;
    }
  }
  return result;
}

uint64_t sub_1A094D5D0(char a1)
{
  uint64_t v2 = v1;
  sub_1A07856F8(&qword_1E94FCB68);
  char v16 = a1;
  if (qword_1E94F85E0 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_1A09F39E8();
  sub_1A078510C(v4, (uint64_t)qword_1E94FC898);
  uint64_t v5 = sub_1A09F39C8();
  os_log_type_t v6 = sub_1A09F4368();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v15 = v8;
    *(_DWORD *)uint64_t v7 = 136315394;
    sub_1A0944200();
    uint64_t v9 = sub_1A09F4AE8();
    sub_1A0785144(v9, v10, &v15);
    sub_1A09F4528();
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 12) = 2080;
    sub_1A07856F8(&qword_1E94FCB78);
    uint64_t v11 = sub_1A09F3E38();
    sub_1A0785144(v11, v12, &v15);
    sub_1A09F4528();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A0772000, v5, v6, "Using nil/missing key aware decoding for '%s': %s", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1A6228C20](v8, -1, -1);
    uint64_t v13 = v7;
    uint64_t v2 = v1;
    MEMORY[0x1A6228C20](v13, -1, -1);
  }

  sub_1A07856F8(&qword_1E94FC778);
  sub_1A0792558(&qword_1E94FCB80, &qword_1E94FCB68);
  uint64_t result = sub_1A09F4888();
  if (!v2)
  {
    if (v15 == 1) {
      return 0;
    }
    else {
      return v15;
    }
  }
  return result;
}

uint64_t sub_1A094D84C(char a1)
{
  uint64_t v2 = v1;
  sub_1A07856F8(&qword_1E94FCB68);
  char v16 = a1;
  if (qword_1E94F85E0 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_1A09F39E8();
  sub_1A078510C(v4, (uint64_t)qword_1E94FC898);
  uint64_t v5 = sub_1A09F39C8();
  os_log_type_t v6 = sub_1A09F4368();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v15 = v8;
    *(_DWORD *)uint64_t v7 = 136315394;
    sub_1A0944150();
    uint64_t v9 = sub_1A09F4AE8();
    sub_1A0785144(v9, v10, &v15);
    sub_1A09F4528();
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 12) = 2080;
    sub_1A07856F8(&qword_1E94FCB78);
    uint64_t v11 = sub_1A09F3E38();
    sub_1A0785144(v11, v12, &v15);
    sub_1A09F4528();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A0772000, v5, v6, "Using nil/missing key aware decoding for '%s': %s", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1A6228C20](v8, -1, -1);
    uint64_t v13 = v7;
    uint64_t v2 = v1;
    MEMORY[0x1A6228C20](v13, -1, -1);
  }

  sub_1A07856F8(&qword_1E94FC790);
  sub_1A0792558(&qword_1E94FCB80, &qword_1E94FCB68);
  uint64_t result = sub_1A09F4888();
  if (!v2)
  {
    if (v15 == 1) {
      return 0;
    }
    else {
      return v15;
    }
  }
  return result;
}

uint64_t sub_1A094DAC8(char a1)
{
  uint64_t v2 = v1;
  sub_1A07856F8(&qword_1E94FCB68);
  char v16 = a1;
  if (qword_1E94F85E0 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_1A09F39E8();
  sub_1A078510C(v4, (uint64_t)qword_1E94FC898);
  uint64_t v5 = sub_1A09F39C8();
  os_log_type_t v6 = sub_1A09F4368();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v15 = v8;
    *(_DWORD *)uint64_t v7 = 136315394;
    sub_1A09440A0();
    uint64_t v9 = sub_1A09F4AE8();
    sub_1A0785144(v9, v10, &v15);
    sub_1A09F4528();
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 12) = 2080;
    sub_1A07856F8(&qword_1E94FCB78);
    uint64_t v11 = sub_1A09F3E38();
    sub_1A0785144(v11, v12, &v15);
    sub_1A09F4528();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A0772000, v5, v6, "Using nil/missing key aware decoding for '%s': %s", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1A6228C20](v8, -1, -1);
    uint64_t v13 = v7;
    uint64_t v2 = v1;
    MEMORY[0x1A6228C20](v13, -1, -1);
  }

  sub_1A07856F8(&qword_1E94FC7A8);
  sub_1A0792558(&qword_1E94FCB80, &qword_1E94FCB68);
  uint64_t result = sub_1A09F4888();
  if (!v2)
  {
    if (v15 == 1) {
      return 0;
    }
    else {
      return v15;
    }
  }
  return result;
}

uint64_t sub_1A094DD44(char a1)
{
  uint64_t v2 = v1;
  sub_1A07856F8(&qword_1E94FCB68);
  char v16 = a1;
  if (qword_1E94F85E0 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_1A09F39E8();
  sub_1A078510C(v4, (uint64_t)qword_1E94FC898);
  uint64_t v5 = sub_1A09F39C8();
  os_log_type_t v6 = sub_1A09F4368();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v15 = v8;
    *(_DWORD *)uint64_t v7 = 136315394;
    sub_1A095409C();
    uint64_t v9 = sub_1A09F4AE8();
    sub_1A0785144(v9, v10, &v15);
    sub_1A09F4528();
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 12) = 2080;
    sub_1A07856F8(&qword_1E94FCB78);
    uint64_t v11 = sub_1A09F3E38();
    sub_1A0785144(v11, v12, &v15);
    sub_1A09F4528();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A0772000, v5, v6, "Using nil/missing key aware decoding for '%s': %s", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1A6228C20](v8, -1, -1);
    uint64_t v13 = v7;
    uint64_t v2 = v1;
    MEMORY[0x1A6228C20](v13, -1, -1);
  }

  sub_1A07856F8(&qword_1E94FCB20);
  sub_1A0792558(&qword_1E94FCB80, &qword_1E94FCB68);
  uint64_t result = sub_1A09F4888();
  if (!v2)
  {
    if (v15 == 1) {
      return 0;
    }
    else {
      return v15;
    }
  }
  return result;
}

uint64_t sub_1A094DFC0(char a1)
{
  uint64_t v2 = v1;
  sub_1A07856F8(&qword_1E94FCC28);
  char v16 = a1;
  if (qword_1E94F85E0 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_1A09F39E8();
  sub_1A078510C(v4, (uint64_t)qword_1E94FC898);
  uint64_t v5 = sub_1A09F39C8();
  os_log_type_t v6 = sub_1A09F4368();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v15 = v8;
    *(_DWORD *)uint64_t v7 = 136315394;
    sub_1A095409C();
    uint64_t v9 = sub_1A09F4AE8();
    sub_1A0785144(v9, v10, &v15);
    sub_1A09F4528();
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 12) = 2080;
    sub_1A07856F8(&qword_1E94FCC38);
    uint64_t v11 = sub_1A09F3E38();
    sub_1A0785144(v11, v12, &v15);
    sub_1A09F4528();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A0772000, v5, v6, "Using nil/missing key aware decoding for '%s': %s", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1A6228C20](v8, -1, -1);
    uint64_t v13 = v7;
    uint64_t v2 = v1;
    MEMORY[0x1A6228C20](v13, -1, -1);
  }

  sub_1A07856F8(&qword_1E94FCB20);
  sub_1A0792558(&qword_1E94FCC30, &qword_1E94FCC28);
  uint64_t result = sub_1A09F4888();
  if (!v2)
  {
    if (v15 == 1) {
      return 0;
    }
    else {
      return v15;
    }
  }
  return result;
}

uint64_t sub_1A094E23C(char a1)
{
  uint64_t v2 = v1;
  sub_1A07856F8(&qword_1E94FCBA8);
  char v16 = a1;
  if (qword_1E94F85E0 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_1A09F39E8();
  sub_1A078510C(v4, (uint64_t)qword_1E94FC898);
  uint64_t v5 = sub_1A09F39C8();
  os_log_type_t v6 = sub_1A09F4368();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v15 = v8;
    *(_DWORD *)uint64_t v7 = 136315394;
    sub_1A0954798();
    uint64_t v9 = sub_1A09F4AE8();
    sub_1A0785144(v9, v10, &v15);
    sub_1A09F4528();
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 12) = 2080;
    sub_1A07856F8(&qword_1E94FCBC8);
    uint64_t v11 = sub_1A09F3E38();
    sub_1A0785144(v11, v12, &v15);
    sub_1A09F4528();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A0772000, v5, v6, "Using nil/missing key aware decoding for '%s': %s", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1A6228C20](v8, -1, -1);
    uint64_t v13 = v7;
    uint64_t v2 = v1;
    MEMORY[0x1A6228C20](v13, -1, -1);
  }

  sub_1A07856F8(&qword_1E94FCBB0);
  sub_1A0792558(&qword_1E94FCBB8, &qword_1E94FCBA8);
  uint64_t result = sub_1A09F4888();
  if (!v2)
  {
    if (v15 == 1) {
      return 0;
    }
    else {
      return v15;
    }
  }
  return result;
}

uint64_t sub_1A094E4B8(char a1)
{
  uint64_t v2 = v1;
  sub_1A07856F8(&qword_1E94FCC88);
  char v16 = a1;
  if (qword_1E94F85E0 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_1A09F39E8();
  sub_1A078510C(v4, (uint64_t)qword_1E94FC898);
  uint64_t v5 = sub_1A09F39C8();
  os_log_type_t v6 = sub_1A09F4368();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v15 = v8;
    *(_DWORD *)uint64_t v7 = 136315394;
    sub_1A09549CC();
    uint64_t v9 = sub_1A09F4AE8();
    sub_1A0785144(v9, v10, &v15);
    sub_1A09F4528();
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 12) = 2080;
    sub_1A07856F8(&qword_1E94FCCA8);
    uint64_t v11 = sub_1A09F3E38();
    sub_1A0785144(v11, v12, &v15);
    sub_1A09F4528();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A0772000, v5, v6, "Using nil/missing key aware decoding for '%s': %s", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1A6228C20](v8, -1, -1);
    uint64_t v13 = v7;
    uint64_t v2 = v1;
    MEMORY[0x1A6228C20](v13, -1, -1);
  }

  sub_1A07856F8(&qword_1E94FCC90);
  sub_1A0792558(&qword_1E94FCC98, &qword_1E94FCC88);
  uint64_t result = sub_1A09F4888();
  if (!v2)
  {
    if (v15 == 1) {
      return 0;
    }
    else {
      return v15;
    }
  }
  return result;
}

uint64_t sub_1A094E734(char a1)
{
  uint64_t v2 = v1;
  sub_1A07856F8(&qword_1E94FCB68);
  char v16 = a1;
  if (qword_1E94F85E0 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_1A09F39E8();
  sub_1A078510C(v4, (uint64_t)qword_1E94FC898);
  uint64_t v5 = sub_1A09F39C8();
  os_log_type_t v6 = sub_1A09F4368();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v15 = v8;
    *(_DWORD *)uint64_t v7 = 136315394;
    sub_1A0954978();
    uint64_t v9 = sub_1A09F4AE8();
    sub_1A0785144(v9, v10, &v15);
    sub_1A09F4528();
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 12) = 2080;
    sub_1A07856F8(&qword_1E94FCB78);
    uint64_t v11 = sub_1A09F3E38();
    sub_1A0785144(v11, v12, &v15);
    sub_1A09F4528();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A0772000, v5, v6, "Using nil/missing key aware decoding for '%s': %s", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1A6228C20](v8, -1, -1);
    uint64_t v13 = v7;
    uint64_t v2 = v1;
    MEMORY[0x1A6228C20](v13, -1, -1);
  }

  sub_1A07856F8(&qword_1E94FCBF8);
  sub_1A0792558(&qword_1E94FCB80, &qword_1E94FCB68);
  uint64_t result = sub_1A09F4888();
  if (!v2)
  {
    if (v15 == 1) {
      return 0;
    }
    else {
      return v15;
    }
  }
  return result;
}

uint64_t sub_1A094E9B0(char a1)
{
  uint64_t v2 = v1;
  sub_1A07856F8(&qword_1E94FCBF0);
  char v16 = a1;
  if (qword_1E94F85E0 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_1A09F39E8();
  sub_1A078510C(v4, (uint64_t)qword_1E94FC898);
  uint64_t v5 = sub_1A09F39C8();
  os_log_type_t v6 = sub_1A09F4368();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v15 = v8;
    *(_DWORD *)uint64_t v7 = 136315394;
    sub_1A0954978();
    uint64_t v9 = sub_1A09F4AE8();
    sub_1A0785144(v9, v10, &v15);
    sub_1A09F4528();
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 12) = 2080;
    sub_1A07856F8(&qword_1E94FCC10);
    uint64_t v11 = sub_1A09F3E38();
    sub_1A0785144(v11, v12, &v15);
    sub_1A09F4528();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A0772000, v5, v6, "Using nil/missing key aware decoding for '%s': %s", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1A6228C20](v8, -1, -1);
    uint64_t v13 = v7;
    uint64_t v2 = v1;
    MEMORY[0x1A6228C20](v13, -1, -1);
  }

  sub_1A07856F8(&qword_1E94FCBF8);
  sub_1A0792558(&qword_1E94FCC00, &qword_1E94FCBF0);
  uint64_t result = sub_1A09F4888();
  if (!v2)
  {
    if (v15 == 1) {
      return 0;
    }
    else {
      return v15;
    }
  }
  return result;
}

void sub_1A094EC2C(uint64_t a1, char a2)
{
  char v13 = a2;
  if (qword_1E94F85E0 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_1A09F39E8();
  sub_1A078510C(v3, (uint64_t)qword_1E94FC898);
  uint64_t v4 = sub_1A09F39C8();
  os_log_type_t v5 = sub_1A09F4368();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    uint64_t v12 = v7;
    *(_DWORD *)uint64_t v6 = 136315394;
    sub_1A086F750();
    uint64_t v8 = sub_1A09F4AE8();
    sub_1A0785144(v8, v9, &v12);
    sub_1A09F4528();
    swift_bridgeObjectRelease();
    *(_WORD *)(v6 + 12) = 2080;
    sub_1A07856F8(&qword_1E94FCC68);
    sub_1A07856F8(&qword_1E94FCC78);
    uint64_t v10 = sub_1A09F3E38();
    sub_1A0785144(v10, v11, &v12);
    sub_1A09F4528();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A0772000, v4, v5, "Using nil/missing key aware encoding for '%s': %s", (uint8_t *)v6, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1A6228C20](v7, -1, -1);
    MEMORY[0x1A6228C20](v6, -1, -1);
  }

  if (a1)
  {
    uint64_t v12 = a1;
    sub_1A07856F8(&qword_1E94F8F18);
    sub_1A07856F8(&qword_1E94FCC68);
    sub_1A0792558(&qword_1E94FCC80, &qword_1E94FCC68);
    sub_1A09F49D8();
  }
}

void sub_1A094EEB0(uint64_t a1, char a2)
{
  char v13 = a2;
  if (qword_1E94F85E0 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_1A09F39E8();
  sub_1A078510C(v3, (uint64_t)qword_1E94FC898);
  uint64_t v4 = sub_1A09F39C8();
  os_log_type_t v5 = sub_1A09F4368();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    uint64_t v12 = v7;
    *(_DWORD *)uint64_t v6 = 136315394;
    sub_1A087A3F4();
    uint64_t v8 = sub_1A09F4AE8();
    sub_1A0785144(v8, v9, &v12);
    sub_1A09F4528();
    swift_bridgeObjectRelease();
    *(_WORD *)(v6 + 12) = 2080;
    sub_1A07856F8(&qword_1E94FCB68);
    sub_1A07856F8(&qword_1E94FCB78);
    uint64_t v10 = sub_1A09F3E38();
    sub_1A0785144(v10, v11, &v12);
    sub_1A09F4528();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A0772000, v4, v5, "Using nil/missing key aware encoding for '%s': %s", (uint8_t *)v6, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1A6228C20](v7, -1, -1);
    MEMORY[0x1A6228C20](v6, -1, -1);
  }

  if (a1)
  {
    uint64_t v12 = a1;
    sub_1A07856F8(&qword_1E94F9130);
    sub_1A07856F8(&qword_1E94FCB68);
    sub_1A0792558(&qword_1E94FCB70, &qword_1E94FCB68);
    sub_1A09F49D8();
  }
}

void sub_1A094F134(uint64_t a1, char a2)
{
  char v13 = a2;
  if (qword_1E94F85E0 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_1A09F39E8();
  sub_1A078510C(v3, (uint64_t)qword_1E94FC898);
  uint64_t v4 = sub_1A09F39C8();
  os_log_type_t v5 = sub_1A09F4368();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    uint64_t v12 = v7;
    *(_DWORD *)uint64_t v6 = 136315394;
    sub_1A087A4A4();
    uint64_t v8 = sub_1A09F4AE8();
    sub_1A0785144(v8, v9, &v12);
    sub_1A09F4528();
    swift_bridgeObjectRelease();
    *(_WORD *)(v6 + 12) = 2080;
    sub_1A07856F8(&qword_1E94FCB68);
    sub_1A07856F8(&qword_1E94FCB78);
    uint64_t v10 = sub_1A09F3E38();
    sub_1A0785144(v10, v11, &v12);
    sub_1A09F4528();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A0772000, v4, v5, "Using nil/missing key aware encoding for '%s': %s", (uint8_t *)v6, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1A6228C20](v7, -1, -1);
    MEMORY[0x1A6228C20](v6, -1, -1);
  }

  if (a1)
  {
    uint64_t v12 = a1;
    sub_1A07856F8(&qword_1E94F90F8);
    sub_1A07856F8(&qword_1E94FCB68);
    sub_1A0792558(&qword_1E94FCB70, &qword_1E94FCB68);
    sub_1A09F49D8();
  }
}

void sub_1A094F3B8(uint64_t a1, char a2)
{
  char v13 = a2;
  if (qword_1E94F85E0 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_1A09F39E8();
  sub_1A078510C(v3, (uint64_t)qword_1E94FC898);
  uint64_t v4 = sub_1A09F39C8();
  os_log_type_t v5 = sub_1A09F4368();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    uint64_t v12 = v7;
    *(_DWORD *)uint64_t v6 = 136315394;
    sub_1A08898B8();
    uint64_t v8 = sub_1A09F4AE8();
    sub_1A0785144(v8, v9, &v12);
    sub_1A09F4528();
    swift_bridgeObjectRelease();
    *(_WORD *)(v6 + 12) = 2080;
    sub_1A07856F8(&qword_1E94FCCC0);
    sub_1A07856F8(&qword_1E94FCCD0);
    uint64_t v10 = sub_1A09F3E38();
    sub_1A0785144(v10, v11, &v12);
    sub_1A09F4528();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A0772000, v4, v5, "Using nil/missing key aware encoding for '%s': %s", (uint8_t *)v6, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1A6228C20](v7, -1, -1);
    MEMORY[0x1A6228C20](v6, -1, -1);
  }

  if (a1)
  {
    uint64_t v12 = a1;
    sub_1A07856F8(&qword_1E94F96E0);
    sub_1A07856F8(&qword_1E94FCCC0);
    sub_1A0792558(&qword_1E94FCCD8, &qword_1E94FCCC0);
    sub_1A09F49D8();
  }
}

void sub_1A094F63C(uint64_t a1, char a2)
{
  char v13 = a2;
  if (qword_1E94F85E0 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_1A09F39E8();
  sub_1A078510C(v3, (uint64_t)qword_1E94FC898);
  uint64_t v4 = sub_1A09F39C8();
  os_log_type_t v5 = sub_1A09F4368();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    uint64_t v12 = v7;
    *(_DWORD *)uint64_t v6 = 136315394;
    sub_1A0889968();
    uint64_t v8 = sub_1A09F4AE8();
    sub_1A0785144(v8, v9, &v12);
    sub_1A09F4528();
    swift_bridgeObjectRelease();
    *(_WORD *)(v6 + 12) = 2080;
    sub_1A07856F8(&qword_1E94FCCC0);
    sub_1A07856F8(&qword_1E94FCCD0);
    uint64_t v10 = sub_1A09F3E38();
    sub_1A0785144(v10, v11, &v12);
    sub_1A09F4528();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A0772000, v4, v5, "Using nil/missing key aware encoding for '%s': %s", (uint8_t *)v6, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1A6228C20](v7, -1, -1);
    MEMORY[0x1A6228C20](v6, -1, -1);
  }

  if (a1)
  {
    uint64_t v12 = a1;
    sub_1A07856F8(&qword_1E94F96C8);
    sub_1A07856F8(&qword_1E94FCCC0);
    sub_1A0792558(&qword_1E94FCCD8, &qword_1E94FCCC0);
    sub_1A09F49D8();
  }
}

void sub_1A094F8C0(uint64_t a1, char a2)
{
  char v13 = a2;
  if (qword_1E94F85E0 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_1A09F39E8();
  sub_1A078510C(v3, (uint64_t)qword_1E94FC898);
  uint64_t v4 = sub_1A09F39C8();
  os_log_type_t v5 = sub_1A09F4368();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    uint64_t v12 = v7;
    *(_DWORD *)uint64_t v6 = 136315394;
    sub_1A0899508();
    uint64_t v8 = sub_1A09F4AE8();
    sub_1A0785144(v8, v9, &v12);
    sub_1A09F4528();
    swift_bridgeObjectRelease();
    *(_WORD *)(v6 + 12) = 2080;
    sub_1A07856F8(&qword_1E94FCB68);
    sub_1A07856F8(&qword_1E94FCB78);
    uint64_t v10 = sub_1A09F3E38();
    sub_1A0785144(v10, v11, &v12);
    sub_1A09F4528();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A0772000, v4, v5, "Using nil/missing key aware encoding for '%s': %s", (uint8_t *)v6, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1A6228C20](v7, -1, -1);
    MEMORY[0x1A6228C20](v6, -1, -1);
  }

  if (a1)
  {
    uint64_t v12 = a1;
    sub_1A07856F8(&qword_1E94F9CA0);
    sub_1A07856F8(&qword_1E94FCB68);
    sub_1A0792558(&qword_1E94FCB70, &qword_1E94FCB68);
    sub_1A09F49D8();
  }
}

void sub_1A094FB44(uint64_t a1, char a2)
{
  char v13 = a2;
  if (qword_1E94F85E0 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_1A09F39E8();
  sub_1A078510C(v3, (uint64_t)qword_1E94FC898);
  uint64_t v4 = sub_1A09F39C8();
  os_log_type_t v5 = sub_1A09F4368();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    uint64_t v12 = v7;
    *(_DWORD *)uint64_t v6 = 136315394;
    sub_1A0899508();
    uint64_t v8 = sub_1A09F4AE8();
    sub_1A0785144(v8, v9, &v12);
    sub_1A09F4528();
    swift_bridgeObjectRelease();
    *(_WORD *)(v6 + 12) = 2080;
    sub_1A07856F8(&qword_1E94FCB88);
    sub_1A07856F8(&qword_1E94FCB98);
    uint64_t v10 = sub_1A09F3E38();
    sub_1A0785144(v10, v11, &v12);
    sub_1A09F4528();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A0772000, v4, v5, "Using nil/missing key aware encoding for '%s': %s", (uint8_t *)v6, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1A6228C20](v7, -1, -1);
    MEMORY[0x1A6228C20](v6, -1, -1);
  }

  if (a1)
  {
    uint64_t v12 = a1;
    sub_1A07856F8(&qword_1E94F9CA0);
    sub_1A07856F8(&qword_1E94FCB88);
    sub_1A0792558(&qword_1E94FCBA0, &qword_1E94FCB88);
    sub_1A09F49D8();
  }
}

void sub_1A094FDC8(uint64_t a1, char a2)
{
  char v13 = a2;
  if (qword_1E94F85E0 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_1A09F39E8();
  sub_1A078510C(v3, (uint64_t)qword_1E94FC898);
  uint64_t v4 = sub_1A09F39C8();
  os_log_type_t v5 = sub_1A09F4368();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    uint64_t v12 = v7;
    *(_DWORD *)uint64_t v6 = 136315394;
    sub_1A08D4B04();
    uint64_t v8 = sub_1A09F4AE8();
    sub_1A0785144(v8, v9, &v12);
    sub_1A09F4528();
    swift_bridgeObjectRelease();
    *(_WORD *)(v6 + 12) = 2080;
    sub_1A07856F8(&qword_1E94FCC48);
    sub_1A07856F8(&qword_1E94FCC58);
    uint64_t v10 = sub_1A09F3E38();
    sub_1A0785144(v10, v11, &v12);
    sub_1A09F4528();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A0772000, v4, v5, "Using nil/missing key aware encoding for '%s': %s", (uint8_t *)v6, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1A6228C20](v7, -1, -1);
    MEMORY[0x1A6228C20](v6, -1, -1);
  }

  if (a1)
  {
    uint64_t v12 = a1;
    sub_1A07856F8(&qword_1E94FB2A0);
    sub_1A07856F8(&qword_1E94FCC48);
    sub_1A0792558(&qword_1E94FCC60, &qword_1E94FCC48);
    sub_1A09F49D8();
  }
}

void sub_1A095004C(uint64_t a1, char a2)
{
  char v13 = a2;
  if (qword_1E94F85E0 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_1A09F39E8();
  sub_1A078510C(v3, (uint64_t)qword_1E94FC898);
  uint64_t v4 = sub_1A09F39C8();
  os_log_type_t v5 = sub_1A09F4368();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    uint64_t v12 = v7;
    *(_DWORD *)uint64_t v6 = 136315394;
    sub_1A090D050();
    uint64_t v8 = sub_1A09F4AE8();
    sub_1A0785144(v8, v9, &v12);
    sub_1A09F4528();
    swift_bridgeObjectRelease();
    *(_WORD *)(v6 + 12) = 2080;
    sub_1A07856F8(&qword_1E94FCB88);
    sub_1A07856F8(&qword_1E94FCB98);
    uint64_t v10 = sub_1A09F3E38();
    sub_1A0785144(v10, v11, &v12);
    sub_1A09F4528();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A0772000, v4, v5, "Using nil/missing key aware encoding for '%s': %s", (uint8_t *)v6, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1A6228C20](v7, -1, -1);
    MEMORY[0x1A6228C20](v6, -1, -1);
  }

  if (a1)
  {
    uint64_t v12 = a1;
    sub_1A07856F8(&qword_1E94FBB80);
    sub_1A07856F8(&qword_1E94FCB88);
    sub_1A0792558(&qword_1E94FCBA0, &qword_1E94FCB88);
    sub_1A09F49D8();
  }
}

void sub_1A09502D0(uint64_t a1, char a2)
{
  char v13 = a2;
  if (qword_1E94F85E0 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_1A09F39E8();
  sub_1A078510C(v3, (uint64_t)qword_1E94FC898);
  uint64_t v4 = sub_1A09F39C8();
  os_log_type_t v5 = sub_1A09F4368();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    uint64_t v12 = v7;
    *(_DWORD *)uint64_t v6 = 136315394;
    sub_1A090D050();
    uint64_t v8 = sub_1A09F4AE8();
    sub_1A0785144(v8, v9, &v12);
    sub_1A09F4528();
    swift_bridgeObjectRelease();
    *(_WORD *)(v6 + 12) = 2080;
    sub_1A07856F8(&qword_1E94FCB68);
    sub_1A07856F8(&qword_1E94FCB78);
    uint64_t v10 = sub_1A09F3E38();
    sub_1A0785144(v10, v11, &v12);
    sub_1A09F4528();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A0772000, v4, v5, "Using nil/missing key aware encoding for '%s': %s", (uint8_t *)v6, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1A6228C20](v7, -1, -1);
    MEMORY[0x1A6228C20](v6, -1, -1);
  }

  if (a1)
  {
    uint64_t v12 = a1;
    sub_1A07856F8(&qword_1E94FBB80);
    sub_1A07856F8(&qword_1E94FCB68);
    sub_1A0792558(&qword_1E94FCB70, &qword_1E94FCB68);
    sub_1A09F49D8();
  }
}

void sub_1A0950554(uint64_t a1, char a2)
{
  char v13 = a2;
  if (qword_1E94F85E0 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_1A09F39E8();
  sub_1A078510C(v3, (uint64_t)qword_1E94FC898);
  uint64_t v4 = sub_1A09F39C8();
  os_log_type_t v5 = sub_1A09F4368();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    uint64_t v12 = v7;
    *(_DWORD *)uint64_t v6 = 136315394;
    sub_1A093203C();
    uint64_t v8 = sub_1A09F4AE8();
    sub_1A0785144(v8, v9, &v12);
    sub_1A09F4528();
    swift_bridgeObjectRelease();
    *(_WORD *)(v6 + 12) = 2080;
    sub_1A07856F8(&qword_1E94FCB68);
    sub_1A07856F8(&qword_1E94FCB78);
    uint64_t v10 = sub_1A09F3E38();
    sub_1A0785144(v10, v11, &v12);
    sub_1A09F4528();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A0772000, v4, v5, "Using nil/missing key aware encoding for '%s': %s", (uint8_t *)v6, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1A6228C20](v7, -1, -1);
    MEMORY[0x1A6228C20](v6, -1, -1);
  }

  if (a1)
  {
    uint64_t v12 = a1;
    sub_1A07856F8(&qword_1E94FC190);
    sub_1A07856F8(&qword_1E94FCB68);
    sub_1A0792558(&qword_1E94FCB70, &qword_1E94FCB68);
    sub_1A09F49D8();
  }
}

void sub_1A09507D8(uint64_t a1, char a2)
{
  char v13 = a2;
  if (qword_1E94F85E0 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_1A09F39E8();
  sub_1A078510C(v3, (uint64_t)qword_1E94FC898);
  uint64_t v4 = sub_1A09F39C8();
  os_log_type_t v5 = sub_1A09F4368();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    uint64_t v12 = v7;
    *(_DWORD *)uint64_t v6 = 136315394;
    sub_1A09442B0();
    uint64_t v8 = sub_1A09F4AE8();
    sub_1A0785144(v8, v9, &v12);
    sub_1A09F4528();
    swift_bridgeObjectRelease();
    *(_WORD *)(v6 + 12) = 2080;
    sub_1A07856F8(&qword_1E94FCB68);
    sub_1A07856F8(&qword_1E94FCB78);
    uint64_t v10 = sub_1A09F3E38();
    sub_1A0785144(v10, v11, &v12);
    sub_1A09F4528();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A0772000, v4, v5, "Using nil/missing key aware encoding for '%s': %s", (uint8_t *)v6, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1A6228C20](v7, -1, -1);
    MEMORY[0x1A6228C20](v6, -1, -1);
  }

  if (a1)
  {
    uint64_t v12 = a1;
    sub_1A07856F8(&qword_1E94FC770);
    sub_1A07856F8(&qword_1E94FCB68);
    sub_1A0792558(&qword_1E94FCB70, &qword_1E94FCB68);
    sub_1A09F49D8();
  }
}

void sub_1A0950A5C(uint64_t a1, char a2)
{
  char v13 = a2;
  if (qword_1E94F85E0 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_1A09F39E8();
  sub_1A078510C(v3, (uint64_t)qword_1E94FC898);
  uint64_t v4 = sub_1A09F39C8();
  os_log_type_t v5 = sub_1A09F4368();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    uint64_t v12 = v7;
    *(_DWORD *)uint64_t v6 = 136315394;
    sub_1A0944200();
    uint64_t v8 = sub_1A09F4AE8();
    sub_1A0785144(v8, v9, &v12);
    sub_1A09F4528();
    swift_bridgeObjectRelease();
    *(_WORD *)(v6 + 12) = 2080;
    sub_1A07856F8(&qword_1E94FCB68);
    sub_1A07856F8(&qword_1E94FCB78);
    uint64_t v10 = sub_1A09F3E38();
    sub_1A0785144(v10, v11, &v12);
    sub_1A09F4528();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A0772000, v4, v5, "Using nil/missing key aware encoding for '%s': %s", (uint8_t *)v6, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1A6228C20](v7, -1, -1);
    MEMORY[0x1A6228C20](v6, -1, -1);
  }

  if (a1)
  {
    uint64_t v12 = a1;
    sub_1A07856F8(&qword_1E94FC788);
    sub_1A07856F8(&qword_1E94FCB68);
    sub_1A0792558(&qword_1E94FCB70, &qword_1E94FCB68);
    sub_1A09F49D8();
  }
}

void sub_1A0950CE0(uint64_t a1, char a2)
{
  char v13 = a2;
  if (qword_1E94F85E0 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_1A09F39E8();
  sub_1A078510C(v3, (uint64_t)qword_1E94FC898);
  uint64_t v4 = sub_1A09F39C8();
  os_log_type_t v5 = sub_1A09F4368();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    uint64_t v12 = v7;
    *(_DWORD *)uint64_t v6 = 136315394;
    sub_1A0944150();
    uint64_t v8 = sub_1A09F4AE8();
    sub_1A0785144(v8, v9, &v12);
    sub_1A09F4528();
    swift_bridgeObjectRelease();
    *(_WORD *)(v6 + 12) = 2080;
    sub_1A07856F8(&qword_1E94FCB68);
    sub_1A07856F8(&qword_1E94FCB78);
    uint64_t v10 = sub_1A09F3E38();
    sub_1A0785144(v10, v11, &v12);
    sub_1A09F4528();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A0772000, v4, v5, "Using nil/missing key aware encoding for '%s': %s", (uint8_t *)v6, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1A6228C20](v7, -1, -1);
    MEMORY[0x1A6228C20](v6, -1, -1);
  }

  if (a1)
  {
    uint64_t v12 = a1;
    sub_1A07856F8(&qword_1E94FC7A0);
    sub_1A07856F8(&qword_1E94FCB68);
    sub_1A0792558(&qword_1E94FCB70, &qword_1E94FCB68);
    sub_1A09F49D8();
  }
}

void sub_1A0950F64(uint64_t a1, char a2)
{
  char v13 = a2;
  if (qword_1E94F85E0 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_1A09F39E8();
  sub_1A078510C(v3, (uint64_t)qword_1E94FC898);
  uint64_t v4 = sub_1A09F39C8();
  os_log_type_t v5 = sub_1A09F4368();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    uint64_t v12 = v7;
    *(_DWORD *)uint64_t v6 = 136315394;
    sub_1A09440A0();
    uint64_t v8 = sub_1A09F4AE8();
    sub_1A0785144(v8, v9, &v12);
    sub_1A09F4528();
    swift_bridgeObjectRelease();
    *(_WORD *)(v6 + 12) = 2080;
    sub_1A07856F8(&qword_1E94FCB68);
    sub_1A07856F8(&qword_1E94FCB78);
    uint64_t v10 = sub_1A09F3E38();
    sub_1A0785144(v10, v11, &v12);
    sub_1A09F4528();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A0772000, v4, v5, "Using nil/missing key aware encoding for '%s': %s", (uint8_t *)v6, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1A6228C20](v7, -1, -1);
    MEMORY[0x1A6228C20](v6, -1, -1);
  }

  if (a1)
  {
    uint64_t v12 = a1;
    sub_1A07856F8(&qword_1E94FC7B8);
    sub_1A07856F8(&qword_1E94FCB68);
    sub_1A0792558(&qword_1E94FCB70, &qword_1E94FCB68);
    sub_1A09F49D8();
  }
}

void sub_1A09511E8(uint64_t a1, char a2)
{
  char v13 = a2;
  if (qword_1E94F85E0 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_1A09F39E8();
  sub_1A078510C(v3, (uint64_t)qword_1E94FC898);
  uint64_t v4 = sub_1A09F39C8();
  os_log_type_t v5 = sub_1A09F4368();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    uint64_t v12 = v7;
    *(_DWORD *)uint64_t v6 = 136315394;
    sub_1A095409C();
    uint64_t v8 = sub_1A09F4AE8();
    sub_1A0785144(v8, v9, &v12);
    sub_1A09F4528();
    swift_bridgeObjectRelease();
    *(_WORD *)(v6 + 12) = 2080;
    sub_1A07856F8(&qword_1E94FCB68);
    sub_1A07856F8(&qword_1E94FCB78);
    uint64_t v10 = sub_1A09F3E38();
    sub_1A0785144(v10, v11, &v12);
    sub_1A09F4528();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A0772000, v4, v5, "Using nil/missing key aware encoding for '%s': %s", (uint8_t *)v6, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1A6228C20](v7, -1, -1);
    MEMORY[0x1A6228C20](v6, -1, -1);
  }

  if (a1)
  {
    uint64_t v12 = a1;
    sub_1A07856F8(&qword_1E94FCAD8);
    sub_1A07856F8(&qword_1E94FCB68);
    sub_1A0792558(&qword_1E94FCB70, &qword_1E94FCB68);
    sub_1A09F49D8();
  }
}

void sub_1A095146C(uint64_t a1, char a2)
{
  char v13 = a2;
  if (qword_1E94F85E0 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_1A09F39E8();
  sub_1A078510C(v3, (uint64_t)qword_1E94FC898);
  uint64_t v4 = sub_1A09F39C8();
  os_log_type_t v5 = sub_1A09F4368();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    uint64_t v12 = v7;
    *(_DWORD *)uint64_t v6 = 136315394;
    sub_1A095409C();
    uint64_t v8 = sub_1A09F4AE8();
    sub_1A0785144(v8, v9, &v12);
    sub_1A09F4528();
    swift_bridgeObjectRelease();
    *(_WORD *)(v6 + 12) = 2080;
    sub_1A07856F8(&qword_1E94FCC28);
    sub_1A07856F8(&qword_1E94FCC38);
    uint64_t v10 = sub_1A09F3E38();
    sub_1A0785144(v10, v11, &v12);
    sub_1A09F4528();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A0772000, v4, v5, "Using nil/missing key aware encoding for '%s': %s", (uint8_t *)v6, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1A6228C20](v7, -1, -1);
    MEMORY[0x1A6228C20](v6, -1, -1);
  }

  if (a1)
  {
    uint64_t v12 = a1;
    sub_1A07856F8(&qword_1E94FCAD8);
    sub_1A07856F8(&qword_1E94FCC28);
    sub_1A0792558(&qword_1E94FCC40, &qword_1E94FCC28);
    sub_1A09F49D8();
  }
}

void sub_1A09516F0(uint64_t a1, char a2)
{
  char v13 = a2;
  if (qword_1E94F85E0 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_1A09F39E8();
  sub_1A078510C(v3, (uint64_t)qword_1E94FC898);
  uint64_t v4 = sub_1A09F39C8();
  os_log_type_t v5 = sub_1A09F4368();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    uint64_t v12 = v7;
    *(_DWORD *)uint64_t v6 = 136315394;
    sub_1A0954798();
    uint64_t v8 = sub_1A09F4AE8();
    sub_1A0785144(v8, v9, &v12);
    sub_1A09F4528();
    swift_bridgeObjectRelease();
    *(_WORD *)(v6 + 12) = 2080;
    sub_1A07856F8(&qword_1E94FCBA8);
    sub_1A07856F8(&qword_1E94FCBC8);
    uint64_t v10 = sub_1A09F3E38();
    sub_1A0785144(v10, v11, &v12);
    sub_1A09F4528();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A0772000, v4, v5, "Using nil/missing key aware encoding for '%s': %s", (uint8_t *)v6, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1A6228C20](v7, -1, -1);
    MEMORY[0x1A6228C20](v6, -1, -1);
  }

  if (a1)
  {
    uint64_t v12 = a1;
    sub_1A07856F8(&qword_1E94FCBD0);
    sub_1A07856F8(&qword_1E94FCBA8);
    sub_1A0792558(&qword_1E94FCBD8, &qword_1E94FCBA8);
    sub_1A09F49D8();
  }
}

void sub_1A0951974(uint64_t a1, char a2)
{
  char v13 = a2;
  if (qword_1E94F85E0 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_1A09F39E8();
  sub_1A078510C(v3, (uint64_t)qword_1E94FC898);
  uint64_t v4 = sub_1A09F39C8();
  os_log_type_t v5 = sub_1A09F4368();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    uint64_t v12 = v7;
    *(_DWORD *)uint64_t v6 = 136315394;
    sub_1A09549CC();
    uint64_t v8 = sub_1A09F4AE8();
    sub_1A0785144(v8, v9, &v12);
    sub_1A09F4528();
    swift_bridgeObjectRelease();
    *(_WORD *)(v6 + 12) = 2080;
    sub_1A07856F8(&qword_1E94FCC88);
    sub_1A07856F8(&qword_1E94FCCA8);
    uint64_t v10 = sub_1A09F3E38();
    sub_1A0785144(v10, v11, &v12);
    sub_1A09F4528();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A0772000, v4, v5, "Using nil/missing key aware encoding for '%s': %s", (uint8_t *)v6, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1A6228C20](v7, -1, -1);
    MEMORY[0x1A6228C20](v6, -1, -1);
  }

  if (a1)
  {
    uint64_t v12 = a1;
    sub_1A07856F8(&qword_1E94FCCB0);
    sub_1A07856F8(&qword_1E94FCC88);
    sub_1A0792558(&qword_1E94FCCB8, &qword_1E94FCC88);
    sub_1A09F49D8();
  }
}

void sub_1A0951BF8(uint64_t a1, char a2)
{
  char v13 = a2;
  if (qword_1E94F85E0 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_1A09F39E8();
  sub_1A078510C(v3, (uint64_t)qword_1E94FC898);
  uint64_t v4 = sub_1A09F39C8();
  os_log_type_t v5 = sub_1A09F4368();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    uint64_t v12 = v7;
    *(_DWORD *)uint64_t v6 = 136315394;
    sub_1A0954978();
    uint64_t v8 = sub_1A09F4AE8();
    sub_1A0785144(v8, v9, &v12);
    sub_1A09F4528();
    swift_bridgeObjectRelease();
    *(_WORD *)(v6 + 12) = 2080;
    sub_1A07856F8(&qword_1E94FCB68);
    sub_1A07856F8(&qword_1E94FCB78);
    uint64_t v10 = sub_1A09F3E38();
    sub_1A0785144(v10, v11, &v12);
    sub_1A09F4528();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A0772000, v4, v5, "Using nil/missing key aware encoding for '%s': %s", (uint8_t *)v6, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1A6228C20](v7, -1, -1);
    MEMORY[0x1A6228C20](v6, -1, -1);
  }

  if (a1)
  {
    uint64_t v12 = a1;
    sub_1A07856F8(&qword_1E94FCC18);
    sub_1A07856F8(&qword_1E94FCB68);
    sub_1A0792558(&qword_1E94FCB70, &qword_1E94FCB68);
    sub_1A09F49D8();
  }
}

void sub_1A0951E7C(uint64_t a1, char a2)
{
  char v13 = a2;
  if (qword_1E94F85E0 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_1A09F39E8();
  sub_1A078510C(v3, (uint64_t)qword_1E94FC898);
  uint64_t v4 = sub_1A09F39C8();
  os_log_type_t v5 = sub_1A09F4368();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    uint64_t v12 = v7;
    *(_DWORD *)uint64_t v6 = 136315394;
    sub_1A0954978();
    uint64_t v8 = sub_1A09F4AE8();
    sub_1A0785144(v8, v9, &v12);
    sub_1A09F4528();
    swift_bridgeObjectRelease();
    *(_WORD *)(v6 + 12) = 2080;
    sub_1A07856F8(&qword_1E94FCBF0);
    sub_1A07856F8(&qword_1E94FCC10);
    uint64_t v10 = sub_1A09F3E38();
    sub_1A0785144(v10, v11, &v12);
    sub_1A09F4528();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A0772000, v4, v5, "Using nil/missing key aware encoding for '%s': %s", (uint8_t *)v6, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1A6228C20](v7, -1, -1);
    MEMORY[0x1A6228C20](v6, -1, -1);
  }

  if (a1)
  {
    uint64_t v12 = a1;
    sub_1A07856F8(&qword_1E94FCC18);
    sub_1A07856F8(&qword_1E94FCBF0);
    sub_1A0792558(&qword_1E94FCC20, &qword_1E94FCBF0);
    sub_1A09F49D8();
  }
}

unint64_t sub_1A0952100(char a1)
{
  unint64_t result = 0x4E65636976726573;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x7365636976726573;
      break;
    case 2:
      unint64_t result = 0x69747265706F7270;
      break;
    case 3:
      unint64_t result = 0xD000000000000014;
      break;
    case 4:
      unint64_t result = 0x6E617254656C6966;
      break;
    case 5:
    case 10:
      unint64_t result = 0xD000000000000011;
      break;
    case 6:
      unint64_t result = 0xD000000000000012;
      break;
    case 7:
      unint64_t result = 0xD000000000000015;
      break;
    case 8:
      unint64_t result = 0x7374616863;
      break;
    case 9:
      unint64_t result = 0xD000000000000014;
      break;
    case 11:
      unint64_t result = 0x436F547361696C61;
      break;
    case 12:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 13:
      unint64_t result = 0xD000000000000013;
      break;
    case 14:
      unint64_t result = 0xD000000000000018;
      break;
    case 15:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 16:
      unint64_t result = 0xD000000000000013;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1A0952320()
{
  return sub_1A0952100(*v0);
}

uint64_t sub_1A0952328@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A09540F0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A0952350(uint64_t a1)
{
  unint64_t v2 = sub_1A0952998();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A095238C(uint64_t a1)
{
  unint64_t v2 = sub_1A0952998();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t RemoteIntentSetupInfo.encode(to:)(void *a1)
{
  uint64_t v3 = sub_1A07856F8(&qword_1E94FCAD8);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v1;
  uint64_t v7 = v1[1];
  uint64_t v43 = v1[2];
  uint64_t v44 = v7;
  uint64_t v42 = v1[3];
  uint64_t v9 = v1[4];
  uint64_t v38 = v1[5];
  uint64_t v39 = v1[6];
  uint64_t v40 = v9;
  uint64_t v36 = v1[7];
  int v37 = *((unsigned __int8 *)v1 + 64);
  uint64_t v10 = v1[9];
  int v35 = *((unsigned __int8 *)v1 + 80);
  uint64_t v33 = v1[11];
  uint64_t v34 = v10;
  int v32 = *((unsigned __int8 *)v1 + 96);
  uint64_t v11 = v1[13];
  uint64_t v30 = v1[14];
  uint64_t v31 = v11;
  int v29 = *((unsigned __int8 *)v1 + 120);
  uint64_t v12 = v1[17];
  uint64_t v27 = v1[16];
  uint64_t v28 = v12;
  int v26 = *((unsigned __int8 *)v1 + 144);
  uint64_t v41 = v1[19];
  int v13 = *((unsigned __int8 *)v1 + 160);
  int v14 = *((unsigned __int8 *)v1 + 161);
  uint64_t v15 = a1[3];
  char v16 = a1;
  uint64_t v18 = v17;
  sub_1A086F45C(v16, v15);
  sub_1A0952998();
  sub_1A09F4CC8();
  uint64_t v47 = v8;
  char v46 = 0;
  sub_1A07856F8(&qword_1EB4A5610);
  sub_1A0879F5C(&qword_1E94F9140);
  uint64_t v19 = v45;
  sub_1A09F49D8();
  if (!v19)
  {
    LODWORD(v45) = v13;
    int v25 = v14;
    uint64_t v47 = v44;
    char v46 = 1;
    sub_1A07856F8(&qword_1E94FCAE8);
    sub_1A0953738(&qword_1E94FCAF0, (void (*)(void))sub_1A09529EC);
    sub_1A09F49D8();
    uint64_t v20 = swift_bridgeObjectRetain();
    sub_1A09511E8(v20, 2);
    swift_bridgeObjectRelease();
    uint64_t v21 = swift_bridgeObjectRetain();
    sub_1A09511E8(v21, 3);
    swift_bridgeObjectRelease();
    uint64_t v47 = v40;
    char v46 = 4;
    sub_1A07856F8(&qword_1E94FCB00);
    sub_1A0952A40();
    sub_1A09F49D8();
    LOBYTE(v47) = 5;
    sub_1A09F4978();
    LOBYTE(v47) = 6;
    sub_1A09F49F8();
    LOBYTE(v47) = 7;
    sub_1A09F49F8();
    uint64_t v22 = swift_bridgeObjectRetain();
    sub_1A095146C(v22, 8);
    swift_bridgeObjectRelease();
    LOBYTE(v47) = 9;
    sub_1A09F4988();
    uint64_t v23 = swift_bridgeObjectRetain();
    sub_1A095146C(v23, 10);
    swift_bridgeObjectRelease();
    uint64_t v47 = v30;
    char v46 = 11;
    sub_1A07856F8(&qword_1E94FAE48);
    sub_1A09538D8(&qword_1E94FCB10);
    sub_1A09F49D8();
    LOBYTE(v47) = 12;
    sub_1A09F4988();
    LOBYTE(v47) = 13;
    sub_1A09F4978();
    LOBYTE(v47) = v26;
    char v46 = 14;
    sub_1A0952AD8();
    sub_1A09F49D8();
    LOBYTE(v47) = 15;
    sub_1A09F4A18();
    LOBYTE(v47) = 16;
    sub_1A09F4988();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v18);
}

unint64_t sub_1A0952998()
{
  unint64_t result = qword_1E94FCAE0;
  if (!qword_1E94FCAE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FCAE0);
  }
  return result;
}

unint64_t sub_1A09529EC()
{
  unint64_t result = qword_1E94FCAF8;
  if (!qword_1E94FCAF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FCAF8);
  }
  return result;
}

unint64_t sub_1A0952A40()
{
  unint64_t result = qword_1E94FCB08;
  if (!qword_1E94FCB08)
  {
    sub_1A078D800(&qword_1E94FCB00);
    sub_1A0953894(&qword_1E94FAA98);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FCB08);
  }
  return result;
}

unint64_t sub_1A0952AD8()
{
  unint64_t result = qword_1E94FCB18;
  if (!qword_1E94FCB18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FCB18);
  }
  return result;
}

uint64_t RemoteIntentSetupInfo.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_1A07856F8(&qword_1E94FCB20);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = a1[3];
  uint64_t v10 = a1[4];
  char v59 = a1;
  sub_1A086F45C(a1, v9);
  sub_1A0952998();
  sub_1A09F4CA8();
  if (v2)
  {
    uint64_t v60 = 0;
    uint64_t v101 = 0;
    uint64_t v58 = v10;
    _s17IMSharedUtilities29RemoteIntentBroadcastEncodingVwxx_0((uint64_t)v59);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v57 = v6;
    sub_1A07856F8(&qword_1EB4A5610);
    LOBYTE(v61) = 0;
    sub_1A0879F5C(&qword_1E94F9128);
    sub_1A09F4888();
    uint64_t v11 = v72[0];
    sub_1A07856F8(&qword_1E94FCAE8);
    LOBYTE(v61) = 1;
    sub_1A0953738(&qword_1E94FCB28, (void (*)(void))sub_1A09537A8);
    swift_bridgeObjectRetain();
    sub_1A09F4888();
    uint64_t v52 = v11;
    uint64_t v12 = v72[0];
    swift_bridgeObjectRetain();
    uint64_t v13 = sub_1A094DD44(2);
    swift_bridgeObjectRetain();
    uint64_t v14 = sub_1A094DD44(3);
    uint64_t v51 = v13;
    uint64_t v15 = v14;
    sub_1A07856F8(&qword_1E94FCB00);
    LOBYTE(v61) = 4;
    sub_1A09537FC();
    swift_bridgeObjectRetain();
    sub_1A09F4888();
    uint64_t v101 = v15;
    uint64_t v16 = v72[0];
    LOBYTE(v72[0]) = 5;
    swift_bridgeObjectRetain();
    uint64_t v17 = sub_1A09F4828();
    uint64_t v56 = v16;
    uint64_t v18 = v17;
    LOBYTE(v72[0]) = 6;
    uint64_t v55 = v19;
    swift_bridgeObjectRetain();
    uint64_t v50 = sub_1A09F48A8();
    int v49 = v20;
    char v100 = v20 & 1;
    LOBYTE(v72[0]) = 7;
    uint64_t v48 = sub_1A09F48A8();
    int v47 = v21;
    char v98 = v21 & 1;
    uint64_t v22 = sub_1A094DFC0(8);
    uint64_t v46 = v18;
    uint64_t v58 = v12;
    LOBYTE(v72[0]) = 9;
    uint64_t v60 = v22;
    swift_bridgeObjectRetain();
    LODWORD(v18) = sub_1A09F4838();
    uint64_t v23 = sub_1A094DFC0(10);
    sub_1A07856F8(&qword_1E94FAE48);
    LOBYTE(v61) = 11;
    sub_1A09538D8(&qword_1E94FCB40);
    swift_bridgeObjectRetain();
    sub_1A09F4888();
    uint64_t v24 = v72[0];
    LOBYTE(v72[0]) = 12;
    uint64_t v54 = v24;
    swift_bridgeObjectRetain();
    int v45 = sub_1A09F4838();
    LOBYTE(v72[0]) = 13;
    uint64_t v44 = sub_1A09F4828();
    uint64_t v53 = v25;
    LOBYTE(v61) = 14;
    sub_1A095393C();
    swift_bridgeObjectRetain();
    sub_1A09F4888();
    int v43 = LOBYTE(v72[0]);
    LOBYTE(v72[0]) = 15;
    uint64_t v42 = sub_1A09F48C8();
    int v41 = v26 & 1;
    char v93 = v26 & 1;
    char v92 = 16;
    int v27 = sub_1A09F4838();
    (*(void (**)(char *, uint64_t))(v57 + 8))(v8, v5);
    *(void *)&long long v61 = v52;
    *((void *)&v61 + 1) = v58;
    *(void *)&long long v62 = v51;
    *((void *)&v62 + 1) = v101;
    *(void *)&long long v63 = v56;
    *((void *)&v63 + 1) = v46;
    *(void *)&long long v64 = v55;
    *((void *)&v64 + 1) = v50;
    LOBYTE(v65) = v49 & 1;
    *((void *)&v65 + 1) = v48;
    LOBYTE(v66) = v47 & 1;
    *((void *)&v66 + 1) = v60;
    HIDWORD(v39) = v18;
    int v40 = v27;
    LOBYTE(v67) = v18;
    *((void *)&v67 + 1) = v23;
    *(void *)&long long v68 = v54;
    BYTE8(v68) = v45;
    *(void *)&long long v69 = v44;
    *((void *)&v69 + 1) = v53;
    LOBYTE(v70) = v43;
    *((void *)&v70 + 1) = v42;
    LOBYTE(v71) = v41;
    HIBYTE(v71) = v27;
    sub_1A08C1818((uint64_t)&v61);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v28 = v101;
    swift_bridgeObjectRelease();
    uint64_t v29 = v56;
    swift_bridgeObjectRelease();
    uint64_t v30 = v55;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v31 = v54;
    swift_bridgeObjectRelease();
    uint64_t v32 = v53;
    swift_bridgeObjectRelease();
    long long v33 = v70;
    *(_OWORD *)(a2 + 128) = v69;
    *(_OWORD *)(a2 + 144) = v33;
    *(_WORD *)(a2 + 160) = v71;
    long long v34 = v66;
    *(_OWORD *)(a2 + 64) = v65;
    *(_OWORD *)(a2 + 80) = v34;
    long long v35 = v68;
    *(_OWORD *)(a2 + 96) = v67;
    *(_OWORD *)(a2 + 112) = v35;
    long long v36 = v62;
    *(_OWORD *)a2 = v61;
    *(_OWORD *)(a2 + 16) = v36;
    long long v37 = v64;
    *(_OWORD *)(a2 + 32) = v63;
    *(_OWORD *)(a2 + 48) = v37;
    _s17IMSharedUtilities29RemoteIntentBroadcastEncodingVwxx_0((uint64_t)v59);
    v72[0] = v52;
    v72[1] = v58;
    v72[2] = v51;
    v72[3] = v28;
    v72[4] = v29;
    v72[5] = v46;
    v72[6] = v30;
    v72[7] = v50;
    char v73 = v100;
    *(_DWORD *)uint64_t v74 = *(_DWORD *)v99;
    *(_DWORD *)&v74[3] = *(_DWORD *)&v99[3];
    uint64_t v75 = v48;
    char v76 = v98;
    *(_DWORD *)&v77[3] = *(_DWORD *)&v97[3];
    *(_DWORD *)long long v77 = *(_DWORD *)v97;
    uint64_t v78 = v60;
    char v79 = BYTE4(v39);
    *(_DWORD *)uint64_t v80 = *(_DWORD *)v96;
    *(_DWORD *)&v80[3] = *(_DWORD *)&v96[3];
    uint64_t v81 = v23;
    uint64_t v82 = v31;
    char v83 = v45;
    *(_DWORD *)uint64_t v84 = *(_DWORD *)v95;
    *(_DWORD *)&v84[3] = *(_DWORD *)&v95[3];
    uint64_t v85 = v44;
    uint64_t v86 = v32;
    char v87 = v43;
    *(_DWORD *)&v88[3] = *(_DWORD *)&v94[3];
    *(_DWORD *)char v88 = *(_DWORD *)v94;
    uint64_t v89 = v42;
    char v90 = v93;
    char v91 = v40;
    return sub_1A08C1718((uint64_t)v72);
  }
}

uint64_t sub_1A0953738(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1A078D800(&qword_1E94FCAE8);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1A09537A8()
{
  unint64_t result = qword_1E94FCB30;
  if (!qword_1E94FCB30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FCB30);
  }
  return result;
}

unint64_t sub_1A09537FC()
{
  unint64_t result = qword_1E94FCB38;
  if (!qword_1E94FCB38)
  {
    sub_1A078D800(&qword_1E94FCB00);
    sub_1A0953894(&qword_1E94FAAA0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FCB38);
  }
  return result;
}

uint64_t sub_1A0953894(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for RemoteIntentFileTransfer();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1A09538D8(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1A078D800(&qword_1E94FAE48);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1A095393C()
{
  unint64_t result = qword_1E94FCB48;
  if (!qword_1E94FCB48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FCB48);
  }
  return result;
}

uint64_t sub_1A0953990@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return RemoteIntentSetupInfo.init(from:)(a1, a2);
}

uint64_t sub_1A09539A8(void *a1)
{
  return RemoteIntentSetupInfo.encode(to:)(a1);
}

uint64_t destroy for RemoteIntentSetupInfo()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for RemoteIntentSetupInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  uint64_t v6 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v6;
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  uint64_t v7 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v7;
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  uint64_t v8 = *(void *)(a2 + 136);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = v8;
  *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(_WORD *)(a1 + 160) = *(_WORD *)(a2 + 160);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for RemoteIntentSetupInfo(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(void *)(a1 + 56) = v4;
  LOBYTE(v4) = *(unsigned char *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(unsigned char *)(a1 + 80) = v4;
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
  uint64_t v5 = *(void *)(a2 + 152);
  *(unsigned char *)(a1 + 160) = *(unsigned char *)(a2 + 160);
  *(void *)(a1 + 152) = v5;
  *(unsigned char *)(a1 + 161) = *(unsigned char *)(a2 + 161);
  return a1;
}

__n128 initializeWithTake for RemoteIntentSetupInfo(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  long long v4 = a2[3];
  long long v5 = a2[4];
  long long v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  __n128 result = (__n128)a2[7];
  long long v8 = a2[8];
  long long v9 = a2[9];
  *(_WORD *)(a1 + 160) = *((_WORD *)a2 + 80);
  *(_OWORD *)(a1 + 128) = v8;
  *(_OWORD *)(a1 + 144) = v9;
  *(__n128 *)(a1 + 112) = result;
  return result;
}

uint64_t assignWithTake for RemoteIntentSetupInfo(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  uint64_t v5 = *(void *)(a2 + 136);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = v5;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(_WORD *)(a1 + 160) = *(_WORD *)(a2 + 160);
  return a1;
}

uint64_t getEnumTagSinglePayload for RemoteIntentSetupInfo(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 162)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for RemoteIntentSetupInfo(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 152) = 0;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 160) = 0;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 162) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 162) = 0;
    }
    if (a2) {
      *(void *)__n128 result = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RemoteIntentSetupInfo()
{
  return &type metadata for RemoteIntentSetupInfo;
}

unsigned char *storeEnumTagSinglePayload for RemoteIntentSetupInfo.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 16 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 16) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF0) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xEF)
  {
    unsigned int v6 = ((a2 - 240) >> 8) + 1;
    *__n128 result = a2 + 16;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A0953FB0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 16;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RemoteIntentSetupInfo.CodingKeys()
{
  return &type metadata for RemoteIntentSetupInfo.CodingKeys;
}

unint64_t sub_1A0953FEC()
{
  unint64_t result = qword_1E94FCB50;
  if (!qword_1E94FCB50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FCB50);
  }
  return result;
}

unint64_t sub_1A0954044()
{
  unint64_t result = qword_1E94FCB58;
  if (!qword_1E94FCB58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FCB58);
  }
  return result;
}

unint64_t sub_1A095409C()
{
  unint64_t result = qword_1E94FCB60;
  if (!qword_1E94FCB60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FCB60);
  }
  return result;
}

uint64_t sub_1A09540F0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x4E65636976726573 && a2 == 0xEC00000073656D61;
  if (v2 || (sub_1A09F4B28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7365636976726573 && a2 == 0xE800000000000000 || (sub_1A09F4B28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x69747265706F7270 && a2 == 0xEA00000000007365 || (sub_1A09F4B28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001A0A36420 || (sub_1A09F4B28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6E617254656C6966 && a2 == 0xED00007372656673 || (sub_1A09F4B28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001A0A36440 || (sub_1A09F4B28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001A0A36460 || (sub_1A09F4B28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001A0A36480 || (sub_1A09F4B28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x7374616863 && a2 == 0xE500000000000000 || (sub_1A09F4B28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001A0A364A0 || (sub_1A09F4B28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001A0A364C0 || (sub_1A09F4B28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0x436F547361696C61 && a2 == 0xEE0070614D44494ELL || (sub_1A09F4B28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x80000001A0A364E0 || (sub_1A09F4B28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001A0A36500 || (sub_1A09F4B28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001A0A36520 || (sub_1A09F4B28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x80000001A0A36540 || (sub_1A09F4B28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 15;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001A0A36560)
  {
    swift_bridgeObjectRelease();
    return 16;
  }
  else
  {
    char v6 = sub_1A09F4B28();
    swift_bridgeObjectRelease();
    if (v6) {
      return 16;
    }
    else {
      return 17;
    }
  }
}

unint64_t sub_1A0954798()
{
  unint64_t result = qword_1E94FCBC0;
  if (!qword_1E94FCBC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FCBC0);
  }
  return result;
}

uint64_t sub_1A09547EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for RemoteIntentFileTransfer();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A0954850(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1A07856F8(&qword_1E94FCBE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A09548B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for RemoteIntentFileTransfer();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A095491C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for RemoteIntentFileTransfer();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1A0954978()
{
  unint64_t result = qword_1E94FCC08;
  if (!qword_1E94FCC08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FCC08);
  }
  return result;
}

unint64_t sub_1A09549CC()
{
  unint64_t result = qword_1E94FCCA0;
  if (!qword_1E94FCCA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FCCA0);
  }
  return result;
}

uint64_t sub_1A0954A20()
{
  uint64_t v0 = sub_1A09F39E8();
  sub_1A078D848(v0, qword_1E94FCCE0);
  sub_1A078510C(v0, (uint64_t)qword_1E94FCCE0);
  return sub_1A09F39D8();
}

uint64_t sub_1A0954AA0(char a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = swift_allocObject();
  *(unsigned char *)(v6 + 16) = 0;
  uint64_t v7 = swift_allocObject();
  *(unsigned char *)(v7 + 16) = 0;
  uint64_t v8 = *(void *)(v3 + OBJC_IVAR___IMUnlockMonitor_state);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v8 + 20));
  sub_1A0954FF0((unsigned char *)(v8 + 16), a2, v3, (unsigned char *)(v6 + 16), a1, (unsigned char *)(v7 + 16));
  os_unfair_lock_unlock((os_unfair_lock_t)(v8 + 20));
  swift_release();
  long long v9 = *(os_unfair_lock_s **)(v3 + OBJC_IVAR___IMUnlockMonitor_listeners);
  swift_retain();
  os_unfair_lock_lock(v9 + 6);
  sub_1A0955170((uint64_t)&v9[4], v6, v7);
  os_unfair_lock_unlock(v9 + 6);
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t sub_1A0954BE4()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR___IMUnlockMonitor_state);
  swift_getKeyPath();
  swift_retain();
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v1 + 20));
  sub_1A077D8F8((unsigned __int8 *)(v1 + 16), &v4);
  os_unfair_lock_unlock((os_unfair_lock_t)(v1 + 20));
  uint64_t v2 = v4;
  swift_release();
  swift_release_n();
  return v2;
}

uint64_t sub_1A0954CD4()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR___IMUnlockMonitor_state);
  swift_getKeyPath();
  swift_retain();
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v1 + 20));
  sub_1A077D8F8((unsigned __int8 *)(v1 + 16), &v4);
  os_unfair_lock_unlock((os_unfair_lock_t)(v1 + 20));
  uint64_t v2 = v4;
  swift_release();
  swift_release_n();
  return v2;
}

uint64_t sub_1A0954DC4(uint64_t result)
{
  if (result)
  {
    uint64_t v2 = *(void *)(v1 + OBJC_IVAR___IMUnlockMonitor_listeners);
    MEMORY[0x1F4188790](result);
    swift_unknownObjectRetain();
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v2 + 24));
    sub_1A0954EF0((id *)(v2 + 16));
    os_unfair_lock_unlock((os_unfair_lock_t)(v2 + 24));
    swift_release();
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t type metadata accessor for IMUnlockMonitor(uint64_t a1)
{
  return sub_1A078231C(a1, &qword_1E94FCD38);
}

id sub_1A0954EF0(id *a1)
{
  return objc_msgSend(*a1, sel_removeObject_, *(void *)(v1 + 16));
}

uint64_t sub_1A0954F28()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1A0954F60(uint64_t a1, uint64_t a2)
{
  return sub_1A0954F70(a1, a2, 1);
}

uint64_t sub_1A0954F68(uint64_t a1, uint64_t a2)
{
  return sub_1A0954F70(a1, a2, 0);
}

uint64_t sub_1A0954F70(uint64_t a1, uint64_t a2, char a3)
{
  int v4 = MKBGetDeviceLockState();
  if (v4) {
    BOOL v5 = v4 == 3;
  }
  else {
    BOOL v5 = 1;
  }
  char v6 = !v5;
  return sub_1A0954AA0(v6, a3);
}

uint64_t sub_1A0954FB0(uint64_t a1, uint64_t a2)
{
  return sub_1A0954AA0(a2 == 1, 0);
}

uint64_t sub_1A0954FE0()
{
  return MEMORY[0x1F4186498](v0, 17, 7);
}

void sub_1A0954FF0(unsigned char *a1, char a2, uint64_t a3, unsigned char *a4, char a5, unsigned char *a6)
{
  if ((a2 & 1) != 0
    || *(unsigned char *)(a3 + OBJC_IVAR___IMUnlockMonitor_initializedBeforeFirstUnlock) == 1
    && (a1[1] & 1) == 0
    && (int)MKBDeviceUnlockedSinceBoot() >= 1)
  {
    if (qword_1E94F85F0 != -1) {
      swift_once();
    }
    uint64_t v10 = sub_1A09F39E8();
    sub_1A078510C(v10, (uint64_t)qword_1E94FCCE0);
    uint64_t v11 = sub_1A09F39C8();
    os_log_type_t v12 = sub_1A09F4358();
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v13 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v13 = 0;
      _os_log_impl(&dword_1A0772000, v11, v12, "We are now past first unlock!", v13, 2u);
      MEMORY[0x1A6228C20](v13, -1, -1);
    }

    a1[1] = 1;
    *a4 = 1;
  }
  int v14 = a1[2];
  a1[2] = a5 & 1;
  if (*a1 != 1)
  {
    char v15 = a5 ^ 1;
    *a1 = (a5 ^ 1) & 1;
    if (v14) {
      goto LABEL_15;
    }
LABEL_14:
    char v15 = 0;
    goto LABEL_15;
  }
  *a1 = 1;
  if (!v14) {
    goto LABEL_14;
  }
  char v15 = a5 ^ 1;
LABEL_15:
  *a6 = v15 & 1;
}

id sub_1A0955170(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v23 = a2;
  uint64_t v24 = a3;
  uint64_t v19 = sub_1A09F3298();
  uint64_t v18 = *(void *)(v19 - 8);
  MEMORY[0x1F4188790](v19);
  int v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A09F44C8();
  sub_1A09F3288();
  if (!v34) {
    return (id)(*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v4, v19);
  }
  int v21 = v31;
  uint64_t v22 = v4;
  uint64_t v20 = MEMORY[0x1E4FBC840] + 8;
  while (1)
  {
    sub_1A07825B4(&v33, &aBlock);
    sub_1A07856F8(&qword_1E94F76F0);
    if (swift_dynamicCast()) {
      break;
    }
LABEL_3:
    sub_1A09F3288();
    if (!v34) {
      return (id)(*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v4, v19);
    }
  }
  uint64_t v5 = v32;
  id result = (id)im_primary_queue();
  if (result)
  {
    uint64_t v7 = result;
    uint64_t v8 = (void *)swift_allocObject();
    uint64_t v9 = v24;
    void v8[2] = v23;
    v8[3] = v5;
    v8[4] = v9;
    _OWORD v31[2] = sub_1A09556CC;
    v31[3] = v8;
    *(void *)&long long aBlock = MEMORY[0x1E4F143A8];
    *((void *)&aBlock + 1) = 1107296256;
    v31[0] = sub_1A077DA28;
    v31[1] = &unk_1EF2BE698;
    char v26 = _Block_copy(&aBlock);
    uint64_t v28 = sub_1A09F3A68();
    uint64_t v29 = &v17;
    uint64_t v27 = *(void *)(v28 - 8);
    MEMORY[0x1F4188790](v28);
    uint64_t v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
    swift_retain();
    swift_unknownObjectRetain();
    swift_retain();
    sub_1A09F3A58();
    uint64_t v12 = sub_1A09F3A38();
    uint64_t v25 = &v17;
    uint64_t v13 = *(void *)(v12 - 8);
    MEMORY[0x1F4188790](v12);
    char v15 = (char *)&v17 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v32 = MEMORY[0x1E4FBC860];
    sub_1A07926B4((unint64_t *)&qword_1EB4A5A90, MEMORY[0x1F41AAEB0]);
    sub_1A07856F8((uint64_t *)&unk_1EB4A5AA0);
    sub_1A0792508((unint64_t *)&qword_1EB4A5AB0, (uint64_t *)&unk_1EB4A5AA0);
    sub_1A09F45B8();
    uint64_t v16 = v26;
    MEMORY[0x1A62265E0](0, v11, v15, v26);
    _Block_release(v16);
    swift_unknownObjectRelease();

    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    (*(void (**)(char *, uint64_t))(v27 + 8))(v11, v28);
    swift_release();
    int v4 = v22;
    goto LABEL_3;
  }
  __break(1u);
  return result;
}

uint64_t sub_1A09555C0(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v5 = (unsigned char *)(a3 + 16);
  swift_beginAccess();
  if (*(unsigned char *)(a1 + 16) == 1
    && (objc_msgSend(a2, sel_respondsToSelector_, sel_systemDidLeaveFirstDataProtectionLock) & 1) != 0)
  {
    objc_msgSend(a2, sel_systemDidLeaveFirstDataProtectionLock);
  }
  uint64_t result = swift_beginAccess();
  if (*v5 == 1)
  {
    uint64_t result = (uint64_t)objc_msgSend(a2, sel_respondsToSelector_, sel_systemDidUnlock);
    if (result) {
      return (uint64_t)objc_msgSend(a2, sel_systemDidUnlock);
    }
  }
  return result;
}

uint64_t sub_1A0955684()
{
  swift_release();
  swift_unknownObjectRelease();
  swift_release();

  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_1A09556CC()
{
  return sub_1A09555C0(*(void *)(v0 + 16), *(void **)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t _s5StateVwCP(uint64_t result, __int16 *a2)
{
  __int16 v2 = *a2;
  *(unsigned char *)(result + 2) = *((unsigned char *)a2 + 2);
  *(_WORD *)uint64_t result = v2;
  return result;
}

uint64_t _s5StateVwet(unsigned __int16 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF)
  {
    if ((a2 + 33554177) >> 24)
    {
      int v2 = *((unsigned __int8 *)a1 + 3);
      if (*((unsigned char *)a1 + 3)) {
        return (*a1 | (*((unsigned __int8 *)a1 + 2) << 16) | (v2 << 24)) - 16776961;
      }
    }
    else
    {
      int v2 = *(unsigned __int16 *)((char *)a1 + 3);
      if (*(unsigned __int16 *)((char *)a1 + 3)) {
        return (*a1 | (*((unsigned __int8 *)a1 + 2) << 16) | (v2 << 24)) - 16776961;
      }
    }
  }
  unsigned int v4 = *(unsigned __int8 *)a1;
  BOOL v5 = v4 >= 2;
  int v6 = (v4 + 2147483646) & 0x7FFFFFFF;
  if (!v5) {
    int v6 = -1;
  }
  return (v6 + 1);
}

uint64_t _s5StateVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if ((a3 + 33554177) >> 24) {
    int v3 = 1;
  }
  else {
    int v3 = 2;
  }
  if (a3 <= 0xFE) {
    int v3 = 0;
  }
  if (a2 > 0xFE)
  {
    *(_WORD *)uint64_t result = a2 - 255;
    *(unsigned char *)(result + 2) = (a2 - 255) >> 16;
    if (v3)
    {
      unsigned int v4 = ((a2 - 255) >> 24) + 1;
      if (v3 == 2) {
        *(_WORD *)(result + 3) = v4;
      }
      else {
        *(unsigned char *)(result + 3) = v4;
      }
    }
  }
  else
  {
    if (!v3) {
      goto LABEL_10;
    }
    if (v3 == 2)
    {
      *(_WORD *)(result + 3) = 0;
LABEL_10:
      if (!a2) {
        return result;
      }
LABEL_16:
      *(unsigned char *)uint64_t result = a2 + 1;
      return result;
    }
    *(unsigned char *)(result + 3) = 0;
    if (a2) {
      goto LABEL_16;
    }
  }
  return result;
}

void __swiftcall IMActionDialEnriched.init(dictionary:)(IMActionDialEnriched_optional *__return_ptr retstr, Swift::OpaquePointer dictionary)
{
  id v2 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  int v3 = (void *)sub_1A09F3CE8();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_initWithDictionary_, v3);
}

id IMActionDialEnriched.init(dictionary:)(uint64_t a1)
{
  id v2 = v1;
  if (*(void *)(a1 + 16))
  {
    unint64_t v4 = sub_1A087AAA4(0x6D754E656E6F6870, 0xEB00000000726562);
    if (v5)
    {
      sub_1A0785268(*(void *)(a1 + 56) + 32 * v4, (uint64_t)&v15);
      if (swift_dynamicCast())
      {
        int v6 = (void *)sub_1A09F3DE8();
        swift_bridgeObjectRelease();
        if (*(void *)(a1 + 16)
          && (unint64_t v7 = sub_1A087AAA4(0x6B6361626C6C6166, 0xEB000000006C7255), (v8 & 1) != 0)
          && (sub_1A0785268(*(void *)(a1 + 56) + 32 * v7, (uint64_t)&v15), (swift_dynamicCast() & 1) != 0))
        {
          uint64_t v9 = (void *)sub_1A09F3DE8();
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v9 = 0;
        }
        if (*(void *)(a1 + 16) && (unint64_t v12 = sub_1A087AAA4(0x7463656A627573, 0xE700000000000000), (v13 & 1) != 0))
        {
          sub_1A0785268(*(void *)(a1 + 56) + 32 * v12, (uint64_t)&v15);
        }
        else
        {
          long long v15 = 0u;
          long long v16 = 0u;
        }
        swift_bridgeObjectRelease();
        if (*((void *)&v16 + 1))
        {
          if (swift_dynamicCast())
          {
            uint64_t v14 = (void *)sub_1A09F3DE8();
            swift_bridgeObjectRelease();
LABEL_20:
            id v10 = objc_msgSend(v2, sel_initWithPhoneNumber_fallbackUrl_subject_, v6, v9, v14);

            return v10;
          }
        }
        else
        {
          sub_1A0783C7C((uint64_t)&v15);
        }
        uint64_t v14 = 0;
        goto LABEL_20;
      }
    }
  }
  swift_bridgeObjectRelease();
  swift_getObjectType();
  swift_deallocPartialClassInstance();
  return 0;
}

uint64_t sub_1A0955C54()
{
  sub_1A07856F8(&qword_1E94F97B8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1A0A099E0;
  *(void *)(inited + 32) = 0x6D754E656E6F6870;
  *(void *)(inited + 40) = 0xEB00000000726562;
  id v2 = objc_msgSend(v0, sel_phoneNumber);
  uint64_t v3 = sub_1A09F3E18();
  uint64_t v5 = v4;

  uint64_t v6 = MEMORY[0x1E4FBB1A0];
  *(void *)(inited + 48) = v3;
  *(void *)(inited + 56) = v5;
  *(void *)(inited + 72) = v6;
  *(void *)(inited + 80) = 0x6B6361626C6C6166;
  *(void *)(inited + 88) = 0xEB000000006C7255;
  id v7 = objc_msgSend(v0, sel_fallbackUrl);
  if (v7)
  {
    char v8 = v7;
    uint64_t v9 = sub_1A09F3E18();
    uint64_t v11 = v10;

    uint64_t v12 = MEMORY[0x1E4FBB1A0];
  }
  else
  {
    uint64_t v9 = 0;
    uint64_t v11 = 0;
    uint64_t v12 = 0;
    *(void *)(inited + 112) = 0;
  }
  *(void *)(inited + 96) = v9;
  *(void *)(inited + 104) = v11;
  *(void *)(inited + 120) = v12;
  *(void *)(inited + 128) = 0x7463656A627573;
  *(void *)(inited + 136) = 0xE700000000000000;
  id v13 = objc_msgSend(v0, sel_subject);
  if (v13)
  {
    uint64_t v14 = v13;
    uint64_t v15 = sub_1A09F3E18();
    uint64_t v17 = v16;

    uint64_t v18 = MEMORY[0x1E4FBB1A0];
  }
  else
  {
    uint64_t v15 = 0;
    uint64_t v17 = 0;
    uint64_t v18 = 0;
    *(void *)(inited + 160) = 0;
  }
  *(void *)(inited + 144) = v15;
  *(void *)(inited + 152) = v17;
  *(void *)(inited + 168) = v18;
  unint64_t v19 = sub_1A08D76DC(inited);
  uint64_t v20 = sub_1A09BE198(v19);
  swift_bridgeObjectRelease();
  return v20;
}

void __swiftcall IMActionDialEnriched.init()(IMActionDialEnriched *__return_ptr retstr)
{
  id v1 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());

  objc_msgSend(v1, sel_init);
}

void IMActionDialEnriched.init()()
{
}

unint64_t type metadata accessor for IMActionDialEnriched()
{
  unint64_t result = qword_1E94FCDC0;
  if (!qword_1E94FCDC0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1E94FCDC0);
  }
  return result;
}

unint64_t sub_1A0955FC0(unint64_t result, char a2)
{
  if (result < 4 && (a2 & 1) == 0) {
    return result;
  }
  else {
    return 4;
  }
}

uint64_t sub_1A0955FD8(uint64_t a1, char a2)
{
  if (a2) {
    return 7;
  }
  uint64_t result = 0;
  switch(a1)
  {
    case 0:
      return result;
    case 1:
      uint64_t result = 1;
      break;
    case 2:
      uint64_t result = 2;
      break;
    case 3:
      uint64_t result = 3;
      break;
    case 4:
      uint64_t result = 4;
      break;
    case 5:
      uint64_t result = 5;
      break;
    case 64:
      uint64_t result = 6;
      break;
    default:
      return 7;
  }
  return result;
}

uint64_t RemoteIntentFileTransfer.init(dictionaryRepresentation:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v233 = a2;
  *(void *)&long long v256 = sub_1A09F3E18();
  *((void *)&v256 + 1) = v3;
  sub_1A09F4648();
  sub_1A093B844((uint64_t)v278, a1, &v256);
  sub_1A087B20C((uint64_t)v278);
  if (v257)
  {
    int v4 = swift_dynamicCast();
    if (v4) {
      uint64_t v5 = *(void *)&v234[0];
    }
    else {
      uint64_t v5 = 0;
    }
    if (v4) {
      uint64_t v6 = *((void *)&v234[0] + 1);
    }
    else {
      uint64_t v6 = 0;
    }
    uint64_t v231 = v6;
    uint64_t v232 = v5;
  }
  else
  {
    sub_1A0784C08((uint64_t)&v256, &qword_1EB4A58F0);
    uint64_t v231 = 0;
    uint64_t v232 = 0;
  }
  *(void *)&long long v256 = sub_1A09F3E18();
  *((void *)&v256 + 1) = v7;
  sub_1A09F4648();
  sub_1A093B844((uint64_t)v278, a1, &v256);
  sub_1A087B20C((uint64_t)v278);
  if (v257)
  {
    int v8 = swift_dynamicCast();
    if (v8) {
      uint64_t v9 = *(void *)&v234[0];
    }
    else {
      uint64_t v9 = 0;
    }
    if (v8) {
      uint64_t v10 = *((void *)&v234[0] + 1);
    }
    else {
      uint64_t v10 = 0;
    }
    uint64_t v229 = v10;
    uint64_t v230 = v9;
  }
  else
  {
    sub_1A0784C08((uint64_t)&v256, &qword_1EB4A58F0);
    uint64_t v229 = 0;
    uint64_t v230 = 0;
  }
  *(void *)&v234[0] = sub_1A09F3E18();
  *((void *)&v234[0] + 1) = v11;
  sub_1A09F4648();
  sub_1A093B844((uint64_t)v278, a1, &v256);
  sub_1A087B20C((uint64_t)v278);
  if (!v257)
  {
    sub_1A0784C08((uint64_t)&v256, &qword_1EB4A58F0);
    goto LABEL_25;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_25:
    uint64_t v12 = 11;
    goto LABEL_26;
  }
  if ((unint64_t)(*(void *)&v234[0] + 1) < 0xB) {
    uint64_t v12 = *(void *)&v234[0] + 1;
  }
  else {
    uint64_t v12 = 11;
  }
LABEL_26:
  uint64_t v228 = v12;
  *(void *)&long long v256 = sub_1A09F3E18();
  *((void *)&v256 + 1) = v13;
  sub_1A09F4648();
  sub_1A093B844((uint64_t)v278, a1, &v256);
  sub_1A087B20C((uint64_t)v278);
  if (v257)
  {
    int v14 = swift_dynamicCast();
    int v15 = LOBYTE(v234[0]);
    if (!v14) {
      int v15 = 2;
    }
  }
  else
  {
    sub_1A0784C08((uint64_t)&v256, &qword_1EB4A58F0);
    int v15 = 2;
  }
  int v227 = v15;
  *(void *)&long long v256 = sub_1A09F3E18();
  *((void *)&v256 + 1) = v16;
  sub_1A09F4648();
  sub_1A093B844((uint64_t)v278, a1, &v256);
  sub_1A087B20C((uint64_t)v278);
  if (v257)
  {
    int v17 = swift_dynamicCast();
    if (v17) {
      uint64_t v18 = *(void *)&v234[0];
    }
    else {
      uint64_t v18 = 0;
    }
    if (v17) {
      uint64_t v19 = *((void *)&v234[0] + 1);
    }
    else {
      uint64_t v19 = 0;
    }
    uint64_t v225 = v19;
    uint64_t v226 = v18;
  }
  else
  {
    sub_1A0784C08((uint64_t)&v256, &qword_1EB4A58F0);
    uint64_t v225 = 0;
    uint64_t v226 = 0;
  }
  *(void *)&long long v256 = sub_1A09F3E18();
  *((void *)&v256 + 1) = v20;
  sub_1A09F4648();
  sub_1A093B844((uint64_t)v278, a1, &v256);
  sub_1A087B20C((uint64_t)v278);
  if (v257)
  {
    int v21 = swift_dynamicCast();
    if (v21) {
      uint64_t v22 = *(void *)&v234[0];
    }
    else {
      uint64_t v22 = 0;
    }
    if (v21) {
      uint64_t v23 = *((void *)&v234[0] + 1);
    }
    else {
      uint64_t v23 = 0;
    }
    uint64_t v223 = v23;
    uint64_t v224 = v22;
  }
  else
  {
    sub_1A0784C08((uint64_t)&v256, &qword_1EB4A58F0);
    uint64_t v223 = 0;
    uint64_t v224 = 0;
  }
  *(void *)&long long v256 = sub_1A09F3E18();
  *((void *)&v256 + 1) = v24;
  sub_1A09F4648();
  sub_1A093B844((uint64_t)v278, a1, &v256);
  sub_1A087B20C((uint64_t)v278);
  if (v257)
  {
    int v25 = swift_dynamicCast();
    if (v25) {
      uint64_t v26 = *(void *)&v234[0];
    }
    else {
      uint64_t v26 = 0;
    }
    if (v25) {
      uint64_t v27 = *((void *)&v234[0] + 1);
    }
    else {
      uint64_t v27 = 0;
    }
    uint64_t v221 = v27;
    uint64_t v222 = v26;
  }
  else
  {
    sub_1A0784C08((uint64_t)&v256, &qword_1EB4A58F0);
    uint64_t v221 = 0;
    uint64_t v222 = 0;
  }
  *(void *)&long long v256 = sub_1A09F3E18();
  *((void *)&v256 + 1) = v28;
  sub_1A09F4648();
  sub_1A093B844((uint64_t)v278, a1, &v256);
  sub_1A087B20C((uint64_t)v278);
  if (v257)
  {
    int v29 = swift_dynamicCast();
    if (v29) {
      uint64_t v30 = *(void *)&v234[0];
    }
    else {
      uint64_t v30 = 0;
    }
    if (v29) {
      uint64_t v31 = *((void *)&v234[0] + 1);
    }
    else {
      uint64_t v31 = 0;
    }
    uint64_t v219 = v31;
    uint64_t v220 = v30;
  }
  else
  {
    sub_1A0784C08((uint64_t)&v256, &qword_1EB4A58F0);
    uint64_t v219 = 0;
    uint64_t v220 = 0;
  }
  *(void *)&long long v256 = sub_1A09F3E18();
  *((void *)&v256 + 1) = v32;
  sub_1A09F4648();
  sub_1A093B844((uint64_t)v278, a1, &v256);
  sub_1A087B20C((uint64_t)v278);
  if (v257)
  {
    int v33 = swift_dynamicCast();
    uint64_t v34 = *(void *)&v234[0];
    if (!v33) {
      uint64_t v34 = 0;
    }
    uint64_t v218 = v34;
    int v35 = v33 ^ 1;
  }
  else
  {
    sub_1A0784C08((uint64_t)&v256, &qword_1EB4A58F0);
    uint64_t v218 = 0;
    int v35 = 1;
  }
  int v217 = v35;
  *(void *)&long long v256 = sub_1A09F3E18();
  *((void *)&v256 + 1) = v36;
  sub_1A09F4648();
  sub_1A093B844((uint64_t)v278, a1, &v256);
  sub_1A087B20C((uint64_t)v278);
  if (v257)
  {
    int v37 = swift_dynamicCast();
    uint64_t v38 = *(void *)&v234[0];
    if (!v37) {
      uint64_t v38 = 0;
    }
    uint64_t v216 = v38;
    int v39 = v37 ^ 1;
  }
  else
  {
    sub_1A0784C08((uint64_t)&v256, &qword_1EB4A58F0);
    uint64_t v216 = 0;
    int v39 = 1;
  }
  int v215 = v39;
  *(void *)&long long v256 = sub_1A09F3E18();
  *((void *)&v256 + 1) = v40;
  sub_1A09F4648();
  sub_1A093B844((uint64_t)v278, a1, &v256);
  sub_1A087B20C((uint64_t)v278);
  if (v257)
  {
    int v41 = swift_dynamicCast();
    int v42 = LOWORD(v234[0]);
    if (!v41) {
      int v42 = 0;
    }
    int v214 = v42;
    int v43 = v41 ^ 1;
  }
  else
  {
    sub_1A0784C08((uint64_t)&v256, &qword_1EB4A58F0);
    int v214 = 0;
    int v43 = 1;
  }
  int v213 = v43;
  *(void *)&v234[0] = sub_1A09F3E18();
  *((void *)&v234[0] + 1) = v44;
  sub_1A09F4648();
  sub_1A093B844((uint64_t)v278, a1, &v256);
  sub_1A087B20C((uint64_t)v278);
  if (v257)
  {
    sub_1A07856F8((uint64_t *)&unk_1E94F9030);
    if (swift_dynamicCast())
    {
      sub_1A09305E4(*(uint64_t *)&v234[0], (uint64_t)v258);
      long long v45 = v258[0];
      long long v46 = v258[1];
      uint64_t v47 = v259;
      uint64_t v48 = v260;
      uint64_t v49 = v261;
      uint64_t v50 = v262;
      uint64_t v51 = v263;
      uint64_t v52 = v264;
      long long v53 = v265;
      long long v54 = v266;
      char v55 = v267;
      goto LABEL_86;
    }
  }
  else
  {
    sub_1A0784C08((uint64_t)&v256, &qword_1EB4A58F0);
  }
  uint64_t v47 = 0;
  uint64_t v48 = 0;
  uint64_t v49 = 0;
  uint64_t v50 = 0;
  uint64_t v51 = 0;
  uint64_t v52 = 0;
  char v55 = 0;
  long long v45 = xmmword_1A0A0CA10;
  long long v46 = 0uLL;
  long long v53 = 0uLL;
  long long v54 = 0uLL;
LABEL_86:
  v268[0] = v45;
  v268[1] = v46;
  uint64_t v269 = v47;
  uint64_t v270 = v48;
  uint64_t v271 = v49;
  uint64_t v272 = v50;
  uint64_t v273 = v51;
  uint64_t v274 = v52;
  long long v275 = v53;
  long long v276 = v54;
  char v277 = v55;
  v278[0] = sub_1A09F3E18();
  v278[1] = v56;
  sub_1A09F4648();
  sub_1A093B844((uint64_t)v255, a1, &v235);
  sub_1A087B20C((uint64_t)v255);
  if (*((void *)&v236 + 1))
  {
    sub_1A07856F8((uint64_t *)&unk_1E94F9030);
    if (swift_dynamicCast())
    {
      sub_1A09BB670(v251, (uint64_t)v234);
      memcpy(v278, v234, 0x128uLL);
      nullsub_5(v278);
      goto LABEL_91;
    }
  }
  else
  {
    sub_1A0784C08((uint64_t)&v235, &qword_1EB4A58F0);
  }
  sub_1A0958174((uint64_t)v278);
LABEL_91:
  sub_1A08AF448((uint64_t)v278, (uint64_t)&v256, &qword_1E94FCDC8);
  sub_1A08AF448((uint64_t)&v256, (uint64_t)v278, &qword_1E94FCDC8);
  *(void *)&v234[0] = sub_1A09F3E18();
  *((void *)&v234[0] + 1) = v57;
  sub_1A09F4648();
  sub_1A093B844((uint64_t)&v251, a1, &v253);
  sub_1A087B20C((uint64_t)&v251);
  if (v254)
  {
    sub_1A07856F8((uint64_t *)&unk_1E94F9030);
    if (swift_dynamicCast())
    {
      sub_1A08D00B8(v250, (uint64_t)&v235);
      v234[12] = v247;
      v234[13] = v248;
      LODWORD(v234[14]) = v249;
      v234[8] = v243;
      v234[9] = v244;
      v234[10] = v245;
      v234[11] = v246;
      v234[4] = v239;
      v234[5] = v240;
      v234[6] = v241;
      v234[7] = v242;
      v234[0] = v235;
      v234[1] = v236;
      v234[2] = v237;
      v234[3] = v238;
      nullsub_5(v234);
      goto LABEL_96;
    }
  }
  else
  {
    sub_1A0784C08((uint64_t)&v253, &qword_1EB4A58F0);
  }
  sub_1A09581AC((uint64_t)v234);
LABEL_96:
  sub_1A08AF448((uint64_t)v234, (uint64_t)v255, &qword_1E94FCDD0);
  sub_1A08AF448((uint64_t)v255, (uint64_t)v234, &qword_1E94FCDD0);
  *(void *)&long long v251 = sub_1A09F3E18();
  *((void *)&v251 + 1) = v58;
  sub_1A09F4648();
  sub_1A093B844((uint64_t)&v235, a1, &v251);
  sub_1A087B20C((uint64_t)&v235);
  if (v252)
  {
    int v59 = swift_dynamicCast();
    if (v59) {
      uint64_t v60 = v253;
    }
    else {
      uint64_t v60 = 0;
    }
    if (v59) {
      uint64_t v61 = *((void *)&v253 + 1);
    }
    else {
      uint64_t v61 = 0;
    }
    uint64_t v211 = v61;
    uint64_t v212 = v60;
  }
  else
  {
    sub_1A0784C08((uint64_t)&v251, &qword_1EB4A58F0);
    uint64_t v211 = 0;
    uint64_t v212 = 0;
  }
  *(void *)&long long v251 = sub_1A09F3E18();
  *((void *)&v251 + 1) = v62;
  sub_1A09F4648();
  sub_1A093B844((uint64_t)&v235, a1, &v251);
  sub_1A087B20C((uint64_t)&v235);
  if (v252)
  {
    int v63 = swift_dynamicCast();
    if (v63) {
      uint64_t v64 = v253;
    }
    else {
      uint64_t v64 = 0;
    }
    if (v63) {
      uint64_t v65 = *((void *)&v253 + 1);
    }
    else {
      uint64_t v65 = 0;
    }
    uint64_t v209 = v65;
    uint64_t v210 = v64;
  }
  else
  {
    sub_1A0784C08((uint64_t)&v251, &qword_1EB4A58F0);
    uint64_t v209 = 0;
    uint64_t v210 = 0;
  }
  *(void *)&long long v251 = sub_1A09F3E18();
  *((void *)&v251 + 1) = v66;
  sub_1A09F4648();
  sub_1A093B844((uint64_t)&v235, a1, &v251);
  sub_1A087B20C((uint64_t)&v235);
  if (v252)
  {
    int v67 = swift_dynamicCast();
    uint64_t v68 = v253;
    if (!v67) {
      uint64_t v68 = 0;
    }
    uint64_t v208 = v68;
    int v69 = v67 ^ 1;
  }
  else
  {
    sub_1A0784C08((uint64_t)&v251, &qword_1EB4A58F0);
    uint64_t v208 = 0;
    int v69 = 1;
  }
  int v207 = v69;
  *(void *)&long long v251 = sub_1A09F3E18();
  *((void *)&v251 + 1) = v70;
  sub_1A09F4648();
  sub_1A093B844((uint64_t)&v235, a1, &v251);
  sub_1A087B20C((uint64_t)&v235);
  if (v252)
  {
    int v71 = swift_dynamicCast();
    uint64_t v72 = v253;
    if (!v71) {
      uint64_t v72 = 0;
    }
    uint64_t v206 = v72;
    int v73 = v71 ^ 1;
  }
  else
  {
    sub_1A0784C08((uint64_t)&v251, &qword_1EB4A58F0);
    uint64_t v206 = 0;
    int v73 = 1;
  }
  int v205 = v73;
  *(void *)&long long v251 = sub_1A09F3E18();
  *((void *)&v251 + 1) = v74;
  sub_1A09F4648();
  sub_1A093B844((uint64_t)&v235, a1, &v251);
  sub_1A087B20C((uint64_t)&v235);
  if (v252)
  {
    int v75 = swift_dynamicCast();
    uint64_t v76 = v253;
    if (!v75) {
      uint64_t v76 = 0;
    }
    uint64_t v204 = v76;
    int v77 = v75 ^ 1;
  }
  else
  {
    sub_1A0784C08((uint64_t)&v251, &qword_1EB4A58F0);
    uint64_t v204 = 0;
    int v77 = 1;
  }
  int v203 = v77;
  *(void *)&long long v251 = sub_1A09F3E18();
  *((void *)&v251 + 1) = v78;
  sub_1A09F4648();
  sub_1A093B844((uint64_t)&v235, a1, &v251);
  sub_1A087B20C((uint64_t)&v235);
  if (v252)
  {
    int v79 = swift_dynamicCast();
    int v80 = v253;
    if (!v79) {
      int v80 = 2;
    }
  }
  else
  {
    sub_1A0784C08((uint64_t)&v251, &qword_1EB4A58F0);
    int v80 = 2;
  }
  int v202 = v80;
  *(void *)&long long v251 = sub_1A09F3E18();
  *((void *)&v251 + 1) = v81;
  sub_1A09F4648();
  sub_1A093B844((uint64_t)&v235, a1, &v251);
  sub_1A087B20C((uint64_t)&v235);
  if (v252)
  {
    int v82 = swift_dynamicCast();
    int v83 = v253;
    if (!v82) {
      int v83 = 2;
    }
  }
  else
  {
    sub_1A0784C08((uint64_t)&v251, &qword_1EB4A58F0);
    int v83 = 2;
  }
  int v201 = v83;
  *(void *)&long long v251 = sub_1A09F3E18();
  *((void *)&v251 + 1) = v84;
  sub_1A09F4648();
  sub_1A093B844((uint64_t)&v235, a1, &v251);
  sub_1A087B20C((uint64_t)&v235);
  if (v252)
  {
    int v85 = swift_dynamicCast();
    int v86 = v253;
    if (!v85) {
      int v86 = 2;
    }
  }
  else
  {
    sub_1A0784C08((uint64_t)&v251, &qword_1EB4A58F0);
    int v86 = 2;
  }
  int v200 = v86;
  *(void *)&long long v251 = sub_1A09F3E18();
  *((void *)&v251 + 1) = v87;
  sub_1A09F4648();
  sub_1A093B844((uint64_t)&v235, a1, &v251);
  sub_1A087B20C((uint64_t)&v235);
  if (v252)
  {
    int v88 = swift_dynamicCast();
    if (v88) {
      uint64_t v89 = v253;
    }
    else {
      uint64_t v89 = 0;
    }
    if (v88) {
      uint64_t v90 = *((void *)&v253 + 1);
    }
    else {
      uint64_t v90 = 0;
    }
    uint64_t v198 = v90;
    uint64_t v199 = v89;
  }
  else
  {
    sub_1A0784C08((uint64_t)&v251, &qword_1EB4A58F0);
    uint64_t v198 = 0;
    uint64_t v199 = 0;
  }
  *(void *)&long long v251 = sub_1A09F3E18();
  *((void *)&v251 + 1) = v91;
  sub_1A09F4648();
  sub_1A093B844((uint64_t)&v235, a1, &v251);
  sub_1A087B20C((uint64_t)&v235);
  if (v252)
  {
    int v92 = swift_dynamicCast();
    if (v92) {
      uint64_t v93 = v253;
    }
    else {
      uint64_t v93 = 0;
    }
    if (v92) {
      uint64_t v94 = *((void *)&v253 + 1);
    }
    else {
      uint64_t v94 = 0;
    }
    uint64_t v196 = v94;
    uint64_t v197 = v93;
  }
  else
  {
    sub_1A0784C08((uint64_t)&v251, &qword_1EB4A58F0);
    uint64_t v196 = 0;
    uint64_t v197 = 0;
  }
  *(void *)&long long v251 = sub_1A09F3E18();
  *((void *)&v251 + 1) = v95;
  sub_1A09F4648();
  sub_1A093B844((uint64_t)&v235, a1, &v251);
  sub_1A087B20C((uint64_t)&v235);
  if (v252)
  {
    int v96 = swift_dynamicCast();
    if (v96) {
      uint64_t v97 = v253;
    }
    else {
      uint64_t v97 = 0;
    }
    if (v96) {
      uint64_t v98 = *((void *)&v253 + 1);
    }
    else {
      uint64_t v98 = 0;
    }
    uint64_t v194 = v98;
    uint64_t v195 = v97;
  }
  else
  {
    sub_1A0784C08((uint64_t)&v251, &qword_1EB4A58F0);
    uint64_t v194 = 0;
    uint64_t v195 = 0;
  }
  *(void *)&long long v251 = sub_1A09F3E18();
  *((void *)&v251 + 1) = v99;
  sub_1A09F4648();
  sub_1A093B844((uint64_t)&v235, a1, &v251);
  sub_1A087B20C((uint64_t)&v235);
  if (v252)
  {
    int v100 = swift_dynamicCast();
    int v101 = v253;
    if (!v100) {
      int v101 = 2;
    }
  }
  else
  {
    sub_1A0784C08((uint64_t)&v251, &qword_1EB4A58F0);
    int v101 = 2;
  }
  int v193 = v101;
  *(void *)&long long v251 = sub_1A09F3E18();
  *((void *)&v251 + 1) = v102;
  sub_1A09F4648();
  sub_1A093B844((uint64_t)&v235, a1, &v251);
  sub_1A087B20C((uint64_t)&v235);
  if (v252)
  {
    int v103 = swift_dynamicCast();
    int v104 = v253;
    if (!v103) {
      int v104 = 2;
    }
  }
  else
  {
    sub_1A0784C08((uint64_t)&v251, &qword_1EB4A58F0);
    int v104 = 2;
  }
  int v192 = v104;
  *(void *)&long long v251 = sub_1A09F3E18();
  *((void *)&v251 + 1) = v105;
  sub_1A09F4648();
  sub_1A093B844((uint64_t)&v235, a1, &v251);
  sub_1A087B20C((uint64_t)&v235);
  if (v252)
  {
    int v106 = swift_dynamicCast();
    int v107 = v253;
    if (!v106) {
      int v107 = 2;
    }
  }
  else
  {
    sub_1A0784C08((uint64_t)&v251, &qword_1EB4A58F0);
    int v107 = 2;
  }
  int v191 = v107;
  *(void *)&long long v251 = sub_1A09F3E18();
  *((void *)&v251 + 1) = v108;
  sub_1A09F4648();
  sub_1A093B844((uint64_t)&v235, a1, &v251);
  sub_1A087B20C((uint64_t)&v235);
  if (v252)
  {
    int v109 = swift_dynamicCast();
    if (v109) {
      uint64_t v110 = v253;
    }
    else {
      uint64_t v110 = 0;
    }
    char v111 = v109 ^ 1;
  }
  else
  {
    sub_1A0784C08((uint64_t)&v251, &qword_1EB4A58F0);
    uint64_t v110 = 0;
    char v111 = 1;
  }
  int v190 = sub_1A0955FD8(v110, v111);
  *(void *)&long long v253 = sub_1A09F3E18();
  *((void *)&v253 + 1) = v112;
  sub_1A09F4648();
  sub_1A093B844((uint64_t)&v235, a1, &v251);
  sub_1A087B20C((uint64_t)&v235);
  if (v252)
  {
    if ((swift_dynamicCast() & ((unint64_t)v253 < 4)) != 0) {
      int v113 = v253;
    }
    else {
      int v113 = 4;
    }
  }
  else
  {
    sub_1A0784C08((uint64_t)&v251, &qword_1EB4A58F0);
    int v113 = 4;
  }
  int v189 = v113;
  *(void *)&long long v253 = sub_1A09F3E18();
  *((void *)&v253 + 1) = v114;
  sub_1A09F4648();
  sub_1A093B844((uint64_t)&v235, a1, &v251);
  sub_1A087B20C((uint64_t)&v235);
  if (v252)
  {
    if ((swift_dynamicCast() & ((unint64_t)v253 < 4)) != 0) {
      int v115 = v253;
    }
    else {
      int v115 = 4;
    }
  }
  else
  {
    sub_1A0784C08((uint64_t)&v251, &qword_1EB4A58F0);
    int v115 = 4;
  }
  int v188 = v115;
  *(void *)&long long v251 = sub_1A09F3E18();
  *((void *)&v251 + 1) = v116;
  sub_1A09F4648();
  sub_1A093B844((uint64_t)&v235, a1, &v251);
  sub_1A087B20C((uint64_t)&v235);
  if (v252)
  {
    int v117 = swift_dynamicCast();
    int v118 = v253;
    if (!v117) {
      int v118 = 2;
    }
  }
  else
  {
    sub_1A0784C08((uint64_t)&v251, &qword_1EB4A58F0);
    int v118 = 2;
  }
  int v187 = v118;
  *(void *)&long long v251 = sub_1A09F3E18();
  *((void *)&v251 + 1) = v119;
  sub_1A09F4648();
  sub_1A093B844((uint64_t)&v235, a1, &v251);
  sub_1A087B20C((uint64_t)&v235);
  if (v252)
  {
    int v120 = swift_dynamicCast();
    int v121 = v253;
    if (!v120) {
      int v121 = 2;
    }
  }
  else
  {
    sub_1A0784C08((uint64_t)&v251, &qword_1EB4A58F0);
    int v121 = 2;
  }
  int v186 = v121;
  *(void *)&long long v251 = sub_1A09F3E18();
  *((void *)&v251 + 1) = v122;
  sub_1A09F4648();
  sub_1A093B844((uint64_t)&v235, a1, &v251);
  sub_1A087B20C((uint64_t)&v235);
  if (v252)
  {
    int v123 = swift_dynamicCast();
    int v124 = v253;
    if (!v123) {
      int v124 = 2;
    }
  }
  else
  {
    sub_1A0784C08((uint64_t)&v251, &qword_1EB4A58F0);
    int v124 = 2;
  }
  int v185 = v124;
  *(void *)&long long v253 = sub_1A09F3E18();
  *((void *)&v253 + 1) = v125;
  sub_1A09F4648();
  sub_1A093B844((uint64_t)&v235, a1, &v251);
  sub_1A087B20C((uint64_t)&v235);
  if (!v252)
  {
    sub_1A0784C08((uint64_t)&v251, &qword_1EB4A58F0);
LABEL_213:
    int v126 = 26;
    goto LABEL_214;
  }
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_213;
  }
  int v126 = sub_1A095D838(v253);
  if (v126 == 26) {
    goto LABEL_213;
  }
LABEL_214:
  int v184 = v126;
  *(void *)&long long v251 = sub_1A09F3E18();
  *((void *)&v251 + 1) = v127;
  sub_1A09F4648();
  sub_1A093B844((uint64_t)&v235, a1, &v251);
  sub_1A087B20C((uint64_t)&v235);
  if (v252)
  {
    int v128 = swift_dynamicCast();
    if (v128) {
      uint64_t v129 = v253;
    }
    else {
      uint64_t v129 = 0;
    }
    if (v128) {
      uint64_t v130 = *((void *)&v253 + 1);
    }
    else {
      uint64_t v130 = 0;
    }
    uint64_t v181 = v130;
    uint64_t v182 = v129;
  }
  else
  {
    sub_1A0784C08((uint64_t)&v251, &qword_1EB4A58F0);
    uint64_t v181 = 0;
    uint64_t v182 = 0;
  }
  uint64_t v131 = sub_1A07856F8((uint64_t *)&unk_1E94FAF20);
  uint64_t v183 = &v174;
  uint64_t v132 = *(void *)(*(void *)(v131 - 8) + 64);
  MEMORY[0x1F4188790](v131 - 8);
  *(void *)&long long v253 = sub_1A09F3E18();
  *((void *)&v253 + 1) = v133;
  sub_1A09F4648();
  sub_1A093B844((uint64_t)&v235, a1, &v251);
  sub_1A087B20C((uint64_t)&v235);
  if (v252)
  {
    if (swift_dynamicCast())
    {
      sub_1A09F3438();
      uint64_t v134 = sub_1A09F3478();
      uint64_t v135 = (*(uint64_t (**)(char *, void, uint64_t, uint64_t))(*(void *)(v134 - 8) + 56))((char *)&v174 - ((v132 + 15) & 0xFFFFFFFFFFFFFFF0), 0, 1, v134);
      goto LABEL_228;
    }
  }
  else
  {
    sub_1A0784C08((uint64_t)&v251, &qword_1EB4A58F0);
  }
  uint64_t v136 = sub_1A09F3478();
  uint64_t v135 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v136 - 8) + 56))((char *)&v174 - ((v132 + 15) & 0xFFFFFFFFFFFFFFF0), 1, 1, v136);
LABEL_228:
  uint64_t v180 = &v174;
  MEMORY[0x1F4188790](v135);
  *(void *)&long long v253 = sub_1A09F3E18();
  *((void *)&v253 + 1) = v137;
  sub_1A09F4648();
  sub_1A093B844((uint64_t)&v235, a1, &v251);
  sub_1A087B20C((uint64_t)&v235);
  if (v252)
  {
    if (swift_dynamicCast())
    {
      sub_1A09F3438();
      uint64_t v138 = sub_1A09F3478();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v138 - 8) + 56))((char *)&v174 - ((v132 + 15) & 0xFFFFFFFFFFFFFFF0), 0, 1, v138);
      goto LABEL_233;
    }
  }
  else
  {
    sub_1A0784C08((uint64_t)&v251, &qword_1EB4A58F0);
  }
  uint64_t v139 = sub_1A09F3478();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v139 - 8) + 56))((char *)&v174 - ((v132 + 15) & 0xFFFFFFFFFFFFFFF0), 1, 1, v139);
LABEL_233:
  *(void *)&long long v251 = sub_1A09F3E18();
  *((void *)&v251 + 1) = v140;
  sub_1A09F4648();
  sub_1A093B844((uint64_t)&v235, a1, &v251);
  sub_1A087B20C((uint64_t)&v235);
  if (v252)
  {
    int v141 = swift_dynamicCast();
    if (v141) {
      uint64_t v142 = v253;
    }
    else {
      uint64_t v142 = 0;
    }
    if (v141) {
      uint64_t v143 = *((void *)&v253 + 1);
    }
    else {
      uint64_t v143 = 0;
    }
    uint64_t v177 = v143;
    uint64_t v178 = v142;
  }
  else
  {
    sub_1A0784C08((uint64_t)&v251, &qword_1EB4A58F0);
    uint64_t v177 = 0;
    uint64_t v178 = 0;
  }
  *(void *)&long long v251 = sub_1A09F3E18();
  *((void *)&v251 + 1) = v144;
  sub_1A09F4648();
  sub_1A093B844((uint64_t)&v235, a1, &v251);
  sub_1A087B20C((uint64_t)&v235);
  if (v252)
  {
    int v145 = swift_dynamicCast();
    if (v145) {
      uint64_t v146 = v253;
    }
    else {
      uint64_t v146 = 0;
    }
    if (v145) {
      uint64_t v147 = *((void *)&v253 + 1);
    }
    else {
      uint64_t v147 = 0;
    }
    uint64_t v175 = v147;
    uint64_t v176 = v146;
  }
  else
  {
    sub_1A0784C08((uint64_t)&v251, &qword_1EB4A58F0);
    uint64_t v175 = 0;
    uint64_t v176 = 0;
  }
  uint64_t v179 = (uint64_t)&v174 - ((v132 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&long long v251 = sub_1A09F3E18();
  *((void *)&v251 + 1) = v148;
  sub_1A09F4648();
  sub_1A093B844((uint64_t)&v235, a1, &v251);
  sub_1A087B20C((uint64_t)&v235);
  if (v252)
  {
    int v149 = swift_dynamicCast();
    if (v149) {
      uint64_t v150 = v253;
    }
    else {
      uint64_t v150 = 0;
    }
    if (v149) {
      uint64_t v151 = *((void *)&v253 + 1);
    }
    else {
      uint64_t v151 = 0;
    }
  }
  else
  {
    sub_1A0784C08((uint64_t)&v251, &qword_1EB4A58F0);
    uint64_t v150 = 0;
    uint64_t v151 = 0;
  }
  unint64_t v152 = (char *)&v174 - ((v132 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&long long v251 = sub_1A09F3E18();
  *((void *)&v251 + 1) = v153;
  sub_1A09F4648();
  sub_1A093B844((uint64_t)&v235, a1, &v251);
  sub_1A087B20C((uint64_t)&v235);
  if (v252)
  {
    int v154 = swift_dynamicCast();
    if (v154) {
      uint64_t v155 = v253;
    }
    else {
      uint64_t v155 = 0;
    }
    if (v154) {
      uint64_t v156 = *((void *)&v253 + 1);
    }
    else {
      uint64_t v156 = 0;
    }
  }
  else
  {
    sub_1A0784C08((uint64_t)&v251, &qword_1EB4A58F0);
    uint64_t v155 = 0;
    uint64_t v156 = 0;
  }
  *(void *)&long long v251 = sub_1A09F3E18();
  *((void *)&v251 + 1) = v157;
  sub_1A09F4648();
  sub_1A093B844((uint64_t)&v235, a1, &v251);
  sub_1A087B20C((uint64_t)&v235);
  if (v252)
  {
    int v158 = swift_dynamicCast();
    if (v158) {
      uint64_t v159 = v253;
    }
    else {
      uint64_t v159 = 0;
    }
    if (v158) {
      uint64_t v160 = *((void *)&v253 + 1);
    }
    else {
      uint64_t v160 = 0;
    }
  }
  else
  {
    sub_1A0784C08((uint64_t)&v251, &qword_1EB4A58F0);
    uint64_t v159 = 0;
    uint64_t v160 = 0;
  }
  *(void *)&long long v253 = sub_1A09F3E18();
  *((void *)&v253 + 1) = v161;
  sub_1A09F4648();
  sub_1A093B844((uint64_t)&v235, a1, &v251);
  swift_bridgeObjectRelease();
  sub_1A087B20C((uint64_t)&v235);
  if (v252)
  {
    if ((swift_dynamicCast() & ((unint64_t)v253 < 3)) != 0) {
      char v162 = v253;
    }
    else {
      char v162 = 3;
    }
  }
  else
  {
    sub_1A0784C08((uint64_t)&v251, &qword_1EB4A58F0);
    char v162 = 3;
  }
  BYTE9(v173) = v184;
  BYTE8(v173) = v185;
  BYTE7(v173) = v186;
  BYTE6(v173) = v187;
  BYTE5(v173) = v188;
  BYTE4(v173) = v189;
  BYTE3(v173) = v190;
  BYTE2(v173) = v191;
  BYTE1(v173) = v192;
  LOBYTE(v173) = v193;
  *((void *)&v172 + 1) = v196;
  *(void *)&long long v172 = v197;
  *((void *)&v171 + 1) = v198;
  *(void *)&long long v171 = v199;
  HIBYTE(v170) = v200;
  LOBYTE(v170) = v201;
  *((void *)&v169 + 1) = v209;
  *(void *)&long long v169 = v210;
  *((void *)&v168 + 1) = v211;
  *(void *)&long long v168 = v212;
  *((void *)&v166 + 1) = v219;
  *(void *)&long long v166 = v220;
  *((void *)&v165 + 1) = v221;
  *(void *)&long long v165 = v222;
  *((void *)&v164 + 1) = v223;
  *(void *)&long long v164 = v224;
  return sub_1A095D338(v232, v231, v230, v229, v228, v227, v226, v225, v233, v164, v165, v166, v218, v217, v216, v215, v167, v214, v213,
           (uint64_t)v268,
           (uint64_t)v278,
           (uint64_t)v234,
           v168,
           v169,
           v208,
           v207,
           v206,
           v205,
           v204,
           v203,
           v202,
           v170,
           v171,
           v172,
           v195,
           v194,
           v173,
           v182,
           v181,
           (uint64_t)v152,
           v179,
           v178,
           v177,
           v176,
           v175,
           v150,
           v151,
           v155,
           v156,
           v159,
           v160,
           v162);
}

double sub_1A0958174(uint64_t a1)
{
  double result = 0.0;
  *(_OWORD *)a1 = xmmword_1A0A0CA10;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 176) = 0u;
  *(_OWORD *)(a1 + 192) = 0u;
  *(_OWORD *)(a1 + 208) = 0u;
  *(_OWORD *)(a1 + 224) = 0u;
  *(_OWORD *)(a1 + 240) = 0u;
  *(_OWORD *)(a1 + 256) = 0u;
  *(_OWORD *)(a1 + 272) = 0u;
  *(void *)(a1 + 288) = 0;
  return result;
}

double sub_1A09581AC(uint64_t a1)
{
  double result = 0.0;
  *(_OWORD *)a1 = xmmword_1A0A0CA10;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 176) = 0u;
  *(_OWORD *)(a1 + 192) = 0u;
  *(_OWORD *)(a1 + 208) = 0u;
  *(_DWORD *)(a1 + 224) = 0;
  return result;
}

unint64_t RemoteIntentFileTransfer.dictionaryRepresentation.getter()
{
  id v1 = v0;
  unint64_t v204 = MEMORY[0x1E4FBC868];
  *(void *)int v200 = sub_1A09F3E18();
  *(void *)&v200[8] = v2;
  uint64_t v3 = MEMORY[0x1E4FBB1A0];
  sub_1A09F4648();
  uint64_t v4 = v0[1];
  if (v4)
  {
    uint64_t v5 = *v1;
    *(void *)&v200[24] = v3;
    *(void *)int v200 = v5;
    *(void *)&v200[8] = v4;
    sub_1A07825B4(v200, v199);
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)&v205[0] = v204;
    unint64_t v204 = 0x8000000000000000;
    sub_1A08D97F0(v199, (uint64_t)v207, isUniquelyReferenced_nonNull_native);
    unint64_t v204 = *(void *)&v205[0];
    swift_bridgeObjectRelease();
    sub_1A087B20C((uint64_t)v207);
  }
  else
  {
    sub_1A09ED5A4((uint64_t)v207, v200);
    sub_1A087B20C((uint64_t)v207);
    sub_1A0784C08((uint64_t)v200, &qword_1EB4A58F0);
  }
  *(void *)int v200 = sub_1A09F3E18();
  *(void *)&v200[8] = v7;
  sub_1A09F4648();
  uint64_t v8 = v1[3];
  if (v8)
  {
    uint64_t v9 = v1[2];
    *(void *)&v200[24] = v3;
    *(void *)int v200 = v9;
    *(void *)&v200[8] = v8;
    sub_1A07825B4(v200, v199);
    swift_bridgeObjectRetain();
    char v10 = swift_isUniquelyReferenced_nonNull_native();
    *(void *)&v205[0] = v204;
    unint64_t v204 = 0x8000000000000000;
    sub_1A08D97F0(v199, (uint64_t)v207, v10);
    unint64_t v204 = *(void *)&v205[0];
    swift_bridgeObjectRelease();
    sub_1A087B20C((uint64_t)v207);
  }
  else
  {
    sub_1A09ED5A4((uint64_t)v207, v200);
    sub_1A087B20C((uint64_t)v207);
    sub_1A0784C08((uint64_t)v200, &qword_1EB4A58F0);
  }
  *(void *)int v200 = sub_1A09F3E18();
  *(void *)&v200[8] = v11;
  sub_1A09F4648();
  uint64_t v12 = *((unsigned __int8 *)v1 + 32);
  uint64_t v13 = MEMORY[0x1E4FBB550];
  if (v12 == 11)
  {
    sub_1A09ED5A4((uint64_t)v207, v200);
    sub_1A087B20C((uint64_t)v207);
    sub_1A0784C08((uint64_t)v200, &qword_1EB4A58F0);
  }
  else
  {
    *(void *)&v200[24] = MEMORY[0x1E4FBB550];
    *(void *)int v200 = v12 - 1;
    sub_1A07825B4(v200, v199);
    char v14 = swift_isUniquelyReferenced_nonNull_native();
    *(void *)&v205[0] = v204;
    unint64_t v204 = 0x8000000000000000;
    sub_1A08D97F0(v199, (uint64_t)v207, v14);
    unint64_t v204 = *(void *)&v205[0];
    swift_bridgeObjectRelease();
    sub_1A087B20C((uint64_t)v207);
  }
  *(void *)int v200 = sub_1A09F3E18();
  *(void *)&v200[8] = v15;
  sub_1A09F4648();
  int v16 = *((unsigned __int8 *)v1 + 33);
  uint64_t v17 = MEMORY[0x1E4FBB390];
  if (v16 == 2)
  {
    sub_1A09ED5A4((uint64_t)v207, v200);
    sub_1A087B20C((uint64_t)v207);
    sub_1A0784C08((uint64_t)v200, &qword_1EB4A58F0);
  }
  else
  {
    *(void *)&v200[24] = MEMORY[0x1E4FBB390];
    v200[0] = v16 & 1;
    sub_1A07825B4(v200, v199);
    char v18 = swift_isUniquelyReferenced_nonNull_native();
    *(void *)&v205[0] = v204;
    unint64_t v204 = 0x8000000000000000;
    sub_1A08D97F0(v199, (uint64_t)v207, v18);
    unint64_t v204 = *(void *)&v205[0];
    swift_bridgeObjectRelease();
    sub_1A087B20C((uint64_t)v207);
  }
  *(void *)int v200 = sub_1A09F3E18();
  *(void *)&v200[8] = v19;
  sub_1A09F4648();
  uint64_t v20 = v1[6];
  if (v20)
  {
    uint64_t v21 = v1[5];
    *(void *)&v200[24] = v3;
    *(void *)int v200 = v21;
    *(void *)&v200[8] = v20;
    sub_1A07825B4(v200, v199);
    swift_bridgeObjectRetain();
    char v22 = swift_isUniquelyReferenced_nonNull_native();
    *(void *)&v205[0] = v204;
    unint64_t v204 = 0x8000000000000000;
    sub_1A08D97F0(v199, (uint64_t)v207, v22);
    unint64_t v204 = *(void *)&v205[0];
    swift_bridgeObjectRelease();
    sub_1A087B20C((uint64_t)v207);
  }
  else
  {
    sub_1A09ED5A4((uint64_t)v207, v200);
    sub_1A087B20C((uint64_t)v207);
    sub_1A0784C08((uint64_t)v200, &qword_1EB4A58F0);
  }
  *(void *)int v200 = sub_1A09F3E18();
  *(void *)&v200[8] = v23;
  sub_1A09F4648();
  uint64_t v24 = v1[8];
  if (v24)
  {
    uint64_t v25 = v1[7];
    *(void *)&v200[24] = v3;
    *(void *)int v200 = v25;
    *(void *)&v200[8] = v24;
    sub_1A07825B4(v200, v199);
    swift_bridgeObjectRetain();
    char v26 = swift_isUniquelyReferenced_nonNull_native();
    *(void *)&v205[0] = v204;
    unint64_t v204 = 0x8000000000000000;
    sub_1A08D97F0(v199, (uint64_t)v207, v26);
    unint64_t v204 = *(void *)&v205[0];
    swift_bridgeObjectRelease();
    sub_1A087B20C((uint64_t)v207);
  }
  else
  {
    sub_1A09ED5A4((uint64_t)v207, v200);
    sub_1A087B20C((uint64_t)v207);
    sub_1A0784C08((uint64_t)v200, &qword_1EB4A58F0);
  }
  *(void *)int v200 = sub_1A09F3E18();
  *(void *)&v200[8] = v27;
  sub_1A09F4648();
  uint64_t v28 = v1[10];
  if (v28)
  {
    uint64_t v29 = v1[9];
    *(void *)&v200[24] = v3;
    *(void *)int v200 = v29;
    *(void *)&v200[8] = v28;
    sub_1A07825B4(v200, v199);
    swift_bridgeObjectRetain();
    char v30 = swift_isUniquelyReferenced_nonNull_native();
    *(void *)&v205[0] = v204;
    unint64_t v204 = 0x8000000000000000;
    sub_1A08D97F0(v199, (uint64_t)v207, v30);
    unint64_t v204 = *(void *)&v205[0];
    swift_bridgeObjectRelease();
    sub_1A087B20C((uint64_t)v207);
  }
  else
  {
    sub_1A09ED5A4((uint64_t)v207, v200);
    sub_1A087B20C((uint64_t)v207);
    sub_1A0784C08((uint64_t)v200, &qword_1EB4A58F0);
  }
  *(void *)int v200 = sub_1A09F3E18();
  *(void *)&v200[8] = v31;
  sub_1A09F4648();
  uint64_t v32 = v1[12];
  if (v32)
  {
    uint64_t v33 = v1[11];
    *(void *)&v200[24] = v3;
    *(void *)int v200 = v33;
    *(void *)&v200[8] = v32;
    sub_1A07825B4(v200, v199);
    swift_bridgeObjectRetain();
    char v34 = swift_isUniquelyReferenced_nonNull_native();
    *(void *)&v205[0] = v204;
    unint64_t v204 = 0x8000000000000000;
    sub_1A08D97F0(v199, (uint64_t)v207, v34);
    unint64_t v204 = *(void *)&v205[0];
    swift_bridgeObjectRelease();
    sub_1A087B20C((uint64_t)v207);
  }
  else
  {
    sub_1A09ED5A4((uint64_t)v207, v200);
    sub_1A087B20C((uint64_t)v207);
    sub_1A0784C08((uint64_t)v200, &qword_1EB4A58F0);
  }
  *(void *)int v200 = sub_1A09F3E18();
  *(void *)&v200[8] = v35;
  sub_1A09F4648();
  if (v1[14])
  {
    sub_1A09ED5A4((uint64_t)v207, v200);
    sub_1A087B20C((uint64_t)v207);
    sub_1A0784C08((uint64_t)v200, &qword_1EB4A58F0);
  }
  else
  {
    uint64_t v36 = v1[13];
    *(void *)&v200[24] = v13;
    *(void *)int v200 = v36;
    sub_1A07825B4(v200, v199);
    char v37 = swift_isUniquelyReferenced_nonNull_native();
    *(void *)&v205[0] = v204;
    unint64_t v204 = 0x8000000000000000;
    sub_1A08D97F0(v199, (uint64_t)v207, v37);
    unint64_t v204 = *(void *)&v205[0];
    swift_bridgeObjectRelease();
    sub_1A087B20C((uint64_t)v207);
  }
  *(void *)int v200 = sub_1A09F3E18();
  *(void *)&v200[8] = v38;
  sub_1A09F4648();
  if (v1[16])
  {
    sub_1A09ED5A4((uint64_t)v207, v200);
    sub_1A087B20C((uint64_t)v207);
    sub_1A0784C08((uint64_t)v200, &qword_1EB4A58F0);
  }
  else
  {
    uint64_t v39 = v1[15];
    *(void *)&v200[24] = v13;
    *(void *)int v200 = v39;
    sub_1A07825B4(v200, v199);
    char v40 = swift_isUniquelyReferenced_nonNull_native();
    *(void *)&v205[0] = v204;
    unint64_t v204 = 0x8000000000000000;
    sub_1A08D97F0(v199, (uint64_t)v207, v40);
    unint64_t v204 = *(void *)&v205[0];
    swift_bridgeObjectRelease();
    sub_1A087B20C((uint64_t)v207);
  }
  *(void *)int v200 = sub_1A09F3E18();
  *(void *)&v200[8] = v41;
  sub_1A09F4648();
  if (*((unsigned char *)v1 + 132))
  {
    sub_1A09ED5A4((uint64_t)v207, v200);
    sub_1A087B20C((uint64_t)v207);
    sub_1A0784C08((uint64_t)v200, &qword_1EB4A58F0);
  }
  else
  {
    __int16 v42 = *((_WORD *)v1 + 65);
    *(void *)&v200[24] = MEMORY[0x1E4FBC450];
    *(_WORD *)int v200 = v42;
    sub_1A07825B4(v200, v199);
    char v43 = swift_isUniquelyReferenced_nonNull_native();
    *(void *)&v205[0] = v204;
    unint64_t v204 = 0x8000000000000000;
    sub_1A08D97F0(v199, (uint64_t)v207, v43);
    unint64_t v204 = *(void *)&v205[0];
    swift_bridgeObjectRelease();
    sub_1A087B20C((uint64_t)v207);
  }
  *(void *)int v207 = sub_1A09F3E18();
  *(void *)&v207[8] = v44;
  sub_1A09F4648();
  uint64_t v45 = v1[18];
  if (v45 == 1)
  {
    sub_1A09ED5A4((uint64_t)v203, v207);
    sub_1A087B20C((uint64_t)v203);
    sub_1A0784C08((uint64_t)v207, &qword_1EB4A58F0);
  }
  else
  {
    char v46 = *((unsigned char *)v1 + 248);
    uint64_t v48 = v1[29];
    uint64_t v47 = v1[30];
    int v49 = *((_DWORD *)v1 + 52);
    uint64_t v50 = v1[25];
    int v51 = *((_DWORD *)v1 + 48);
    uint64_t v52 = v1[23];
    int v53 = *((_DWORD *)v1 + 44);
    uint64_t v54 = v1[21];
    uint64_t v208 = v1[17];
    uint64_t v209 = v45;
    long long v210 = *(_OWORD *)(v1 + 19);
    uint64_t v211 = v54;
    char v212 = v53 & 1;
    uint64_t v213 = v52;
    char v214 = v51 & 1;
    uint64_t v215 = v50;
    char v216 = v49 & 1;
    long long v217 = *(_OWORD *)(v1 + 27);
    uint64_t v218 = v48;
    uint64_t v219 = v47;
    char v220 = v46;
    uint64_t v55 = sub_1A092F810();
    uint64_t v202 = sub_1A07856F8((uint64_t *)&unk_1E94F9030);
    *(void *)&long long v201 = v55;
    sub_1A07825B4(&v201, v207);
    char v56 = swift_isUniquelyReferenced_nonNull_native();
    *(void *)int v200 = v204;
    unint64_t v204 = 0x8000000000000000;
    sub_1A08D97F0(v207, (uint64_t)v203, v56);
    unint64_t v204 = *(void *)v200;
    swift_bridgeObjectRelease();
    sub_1A087B20C((uint64_t)v203);
  }
  *(void *)int v207 = sub_1A09F3E18();
  *(void *)&v207[8] = v57;
  sub_1A09F4648();
  sub_1A08AF448((uint64_t)(v1 + 32), (uint64_t)v199, &qword_1E94FCDC8);
  sub_1A08AF448((uint64_t)v199, (uint64_t)v200, &qword_1E94FCDC8);
  if (sub_1A08E1BA8((uint64_t)v200) == 1)
  {
    sub_1A09ED5A4((uint64_t)v198, v207);
    sub_1A087B20C((uint64_t)v198);
    sub_1A0784C08((uint64_t)v207, &qword_1EB4A58F0);
  }
  else
  {
    memcpy(v207, v200, sizeof(v207));
    unint64_t v58 = sub_1A09B9FF0();
    uint64_t v197 = sub_1A07856F8((uint64_t *)&unk_1E94F9030);
    *(void *)&long long v196 = v58;
    sub_1A07825B4(&v196, v205);
    char v59 = swift_isUniquelyReferenced_nonNull_native();
    *(void *)&v194[0] = v204;
    unint64_t v204 = 0x8000000000000000;
    sub_1A08D97F0(v205, (uint64_t)v198, v59);
    unint64_t v204 = *(void *)&v194[0];
    swift_bridgeObjectRelease();
    sub_1A087B20C((uint64_t)v198);
  }
  *(void *)&v205[0] = sub_1A09F3E18();
  *((void *)&v205[0] + 1) = v60;
  sub_1A09F4648();
  sub_1A08AF448((uint64_t)(v1 + 69), (uint64_t)v193, &qword_1E94FCDD0);
  sub_1A08AF448((uint64_t)v193, (uint64_t)v194, &qword_1E94FCDD0);
  if (sub_1A08E1BA8((uint64_t)v194) == 1)
  {
    sub_1A09ED5A4((uint64_t)v192, v205);
    sub_1A087B20C((uint64_t)v192);
    sub_1A0784C08((uint64_t)v205, &qword_1EB4A58F0);
  }
  else
  {
    v205[11] = v194[11];
    v205[12] = v194[12];
    v205[13] = v194[13];
    v205[7] = v194[7];
    v205[8] = v194[8];
    v205[9] = v194[9];
    v205[10] = v194[10];
    v205[4] = v194[4];
    int v206 = v195;
    v205[5] = v194[5];
    v205[6] = v194[6];
    v205[0] = v194[0];
    v205[1] = v194[1];
    v205[2] = v194[2];
    v205[3] = v194[3];
    unint64_t v61 = sub_1A08CF110();
    uint64_t v191 = sub_1A07856F8((uint64_t *)&unk_1E94F9030);
    *(void *)&long long v190 = v61;
    sub_1A07825B4(&v190, v189);
    char v62 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v188 = v204;
    unint64_t v204 = 0x8000000000000000;
    sub_1A08D97F0(v189, (uint64_t)v192, v62);
    unint64_t v204 = v188;
    swift_bridgeObjectRelease();
    sub_1A087B20C((uint64_t)v192);
  }
  *(void *)&long long v190 = sub_1A09F3E18();
  *((void *)&v190 + 1) = v63;
  sub_1A09F4648();
  uint64_t v64 = v1[99];
  if (v64)
  {
    uint64_t v65 = v1[98];
    uint64_t v191 = v3;
    *(void *)&long long v190 = v65;
    *((void *)&v190 + 1) = v64;
    sub_1A07825B4(&v190, v189);
    swift_bridgeObjectRetain();
    char v66 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v188 = v204;
    unint64_t v204 = 0x8000000000000000;
    sub_1A08D97F0(v189, (uint64_t)v192, v66);
    unint64_t v204 = v188;
    swift_bridgeObjectRelease();
    sub_1A087B20C((uint64_t)v192);
  }
  else
  {
    sub_1A09ED5A4((uint64_t)v192, &v190);
    sub_1A087B20C((uint64_t)v192);
    sub_1A0784C08((uint64_t)&v190, &qword_1EB4A58F0);
  }
  *(void *)&long long v190 = sub_1A09F3E18();
  *((void *)&v190 + 1) = v67;
  sub_1A09F4648();
  uint64_t v68 = v1[101];
  if (v68)
  {
    uint64_t v69 = v1[100];
    uint64_t v191 = v3;
    *(void *)&long long v190 = v69;
    *((void *)&v190 + 1) = v68;
    sub_1A07825B4(&v190, v189);
    swift_bridgeObjectRetain();
    char v70 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v188 = v204;
    unint64_t v204 = 0x8000000000000000;
    sub_1A08D97F0(v189, (uint64_t)v192, v70);
    unint64_t v204 = v188;
    swift_bridgeObjectRelease();
    sub_1A087B20C((uint64_t)v192);
  }
  else
  {
    sub_1A09ED5A4((uint64_t)v192, &v190);
    sub_1A087B20C((uint64_t)v192);
    sub_1A0784C08((uint64_t)&v190, &qword_1EB4A58F0);
  }
  *(void *)&long long v190 = sub_1A09F3E18();
  *((void *)&v190 + 1) = v71;
  sub_1A09F4648();
  uint64_t v72 = MEMORY[0x1E4FBC1C8];
  if (v1[103])
  {
    sub_1A09ED5A4((uint64_t)v192, &v190);
    sub_1A087B20C((uint64_t)v192);
    sub_1A0784C08((uint64_t)&v190, &qword_1EB4A58F0);
  }
  else
  {
    uint64_t v73 = v1[102];
    uint64_t v191 = MEMORY[0x1E4FBC1C8];
    *(void *)&long long v190 = v73;
    sub_1A07825B4(&v190, v189);
    char v74 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v188 = v204;
    unint64_t v204 = 0x8000000000000000;
    sub_1A08D97F0(v189, (uint64_t)v192, v74);
    unint64_t v204 = v188;
    swift_bridgeObjectRelease();
    sub_1A087B20C((uint64_t)v192);
  }
  *(void *)&long long v190 = sub_1A09F3E18();
  *((void *)&v190 + 1) = v75;
  sub_1A09F4648();
  if (v1[105])
  {
    sub_1A09ED5A4((uint64_t)v192, &v190);
    sub_1A087B20C((uint64_t)v192);
    sub_1A0784C08((uint64_t)&v190, &qword_1EB4A58F0);
  }
  else
  {
    uint64_t v76 = v1[104];
    uint64_t v191 = v72;
    *(void *)&long long v190 = v76;
    sub_1A07825B4(&v190, v189);
    char v77 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v188 = v204;
    unint64_t v204 = 0x8000000000000000;
    sub_1A08D97F0(v189, (uint64_t)v192, v77);
    unint64_t v204 = v188;
    swift_bridgeObjectRelease();
    sub_1A087B20C((uint64_t)v192);
  }
  *(void *)&long long v190 = sub_1A09F3E18();
  *((void *)&v190 + 1) = v78;
  sub_1A09F4648();
  if (v1[107])
  {
    sub_1A09ED5A4((uint64_t)v192, &v190);
    sub_1A087B20C((uint64_t)v192);
    sub_1A0784C08((uint64_t)&v190, &qword_1EB4A58F0);
  }
  else
  {
    uint64_t v79 = v1[106];
    uint64_t v191 = v72;
    *(void *)&long long v190 = v79;
    sub_1A07825B4(&v190, v189);
    char v80 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v188 = v204;
    unint64_t v204 = 0x8000000000000000;
    sub_1A08D97F0(v189, (uint64_t)v192, v80);
    unint64_t v204 = v188;
    swift_bridgeObjectRelease();
    sub_1A087B20C((uint64_t)v192);
  }
  *(void *)&long long v190 = sub_1A09F3E18();
  *((void *)&v190 + 1) = v81;
  sub_1A09F4648();
  int v82 = *((unsigned __int8 *)v1 + 857);
  if (v82 == 2)
  {
    sub_1A09ED5A4((uint64_t)v192, &v190);
    sub_1A087B20C((uint64_t)v192);
    sub_1A0784C08((uint64_t)&v190, &qword_1EB4A58F0);
  }
  else
  {
    uint64_t v191 = v17;
    LOBYTE(v190) = v82 & 1;
    sub_1A07825B4(&v190, v189);
    char v83 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v188 = v204;
    unint64_t v204 = 0x8000000000000000;
    sub_1A08D97F0(v189, (uint64_t)v192, v83);
    unint64_t v204 = v188;
    swift_bridgeObjectRelease();
    sub_1A087B20C((uint64_t)v192);
  }
  *(void *)&long long v190 = sub_1A09F3E18();
  *((void *)&v190 + 1) = v84;
  sub_1A09F4648();
  int v85 = *((unsigned __int8 *)v1 + 858);
  if (v85 == 2)
  {
    sub_1A09ED5A4((uint64_t)v192, &v190);
    sub_1A087B20C((uint64_t)v192);
    sub_1A0784C08((uint64_t)&v190, &qword_1EB4A58F0);
  }
  else
  {
    uint64_t v191 = v17;
    LOBYTE(v190) = v85 & 1;
    sub_1A07825B4(&v190, v189);
    char v86 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v188 = v204;
    unint64_t v204 = 0x8000000000000000;
    sub_1A08D97F0(v189, (uint64_t)v192, v86);
    unint64_t v204 = v188;
    swift_bridgeObjectRelease();
    sub_1A087B20C((uint64_t)v192);
  }
  *(void *)&long long v190 = sub_1A09F3E18();
  *((void *)&v190 + 1) = v87;
  sub_1A09F4648();
  int v88 = *((unsigned __int8 *)v1 + 859);
  if (v88 == 2)
  {
    sub_1A09ED5A4((uint64_t)v192, &v190);
    sub_1A087B20C((uint64_t)v192);
    sub_1A0784C08((uint64_t)&v190, &qword_1EB4A58F0);
  }
  else
  {
    uint64_t v191 = v17;
    LOBYTE(v190) = v88 & 1;
    sub_1A07825B4(&v190, v189);
    char v89 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v188 = v204;
    unint64_t v204 = 0x8000000000000000;
    sub_1A08D97F0(v189, (uint64_t)v192, v89);
    unint64_t v204 = v188;
    swift_bridgeObjectRelease();
    sub_1A087B20C((uint64_t)v192);
  }
  *(void *)&long long v190 = sub_1A09F3E18();
  *((void *)&v190 + 1) = v90;
  uint64_t v91 = MEMORY[0x1E4FBB1A0];
  sub_1A09F4648();
  uint64_t v92 = v1[109];
  if (v92)
  {
    uint64_t v93 = v1[108];
    uint64_t v191 = v91;
    *(void *)&long long v190 = v93;
    *((void *)&v190 + 1) = v92;
    sub_1A07825B4(&v190, v189);
    swift_bridgeObjectRetain();
    char v94 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v188 = v204;
    unint64_t v204 = 0x8000000000000000;
    sub_1A08D97F0(v189, (uint64_t)v192, v94);
    unint64_t v204 = v188;
    swift_bridgeObjectRelease();
    sub_1A087B20C((uint64_t)v192);
  }
  else
  {
    sub_1A09ED5A4((uint64_t)v192, &v190);
    sub_1A087B20C((uint64_t)v192);
    sub_1A0784C08((uint64_t)&v190, &qword_1EB4A58F0);
  }
  *(void *)&long long v190 = sub_1A09F3E18();
  *((void *)&v190 + 1) = v95;
  sub_1A09F4648();
  uint64_t v96 = v1[111];
  if (v96)
  {
    uint64_t v97 = v1[110];
    uint64_t v191 = v91;
    *(void *)&long long v190 = v97;
    *((void *)&v190 + 1) = v96;
    sub_1A07825B4(&v190, v189);
    swift_bridgeObjectRetain();
    char v98 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v188 = v204;
    unint64_t v204 = 0x8000000000000000;
    sub_1A08D97F0(v189, (uint64_t)v192, v98);
    unint64_t v204 = v188;
    swift_bridgeObjectRelease();
    sub_1A087B20C((uint64_t)v192);
  }
  else
  {
    sub_1A09ED5A4((uint64_t)v192, &v190);
    sub_1A087B20C((uint64_t)v192);
    sub_1A0784C08((uint64_t)&v190, &qword_1EB4A58F0);
  }
  *(void *)&long long v190 = sub_1A09F3E18();
  *((void *)&v190 + 1) = v99;
  sub_1A09F4648();
  uint64_t v100 = v1[113];
  if (v100)
  {
    uint64_t v101 = v1[112];
    uint64_t v191 = v91;
    *(void *)&long long v190 = v101;
    *((void *)&v190 + 1) = v100;
    sub_1A07825B4(&v190, v189);
    swift_bridgeObjectRetain();
    char v102 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v188 = v204;
    unint64_t v204 = 0x8000000000000000;
    sub_1A08D97F0(v189, (uint64_t)v192, v102);
    unint64_t v204 = v188;
    swift_bridgeObjectRelease();
    sub_1A087B20C((uint64_t)v192);
  }
  else
  {
    sub_1A09ED5A4((uint64_t)v192, &v190);
    sub_1A087B20C((uint64_t)v192);
    sub_1A0784C08((uint64_t)&v190, &qword_1EB4A58F0);
  }
  *(void *)&long long v190 = sub_1A09F3E18();
  *((void *)&v190 + 1) = v103;
  sub_1A09F4648();
  int v104 = *((unsigned __int8 *)v1 + 912);
  if (v104 == 2)
  {
    sub_1A09ED5A4((uint64_t)v192, &v190);
    sub_1A087B20C((uint64_t)v192);
    sub_1A0784C08((uint64_t)&v190, &qword_1EB4A58F0);
  }
  else
  {
    uint64_t v191 = v17;
    LOBYTE(v190) = v104 & 1;
    sub_1A07825B4(&v190, v189);
    char v105 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v188 = v204;
    unint64_t v204 = 0x8000000000000000;
    sub_1A08D97F0(v189, (uint64_t)v192, v105);
    unint64_t v204 = v188;
    swift_bridgeObjectRelease();
    sub_1A087B20C((uint64_t)v192);
  }
  *(void *)&long long v190 = sub_1A09F3E18();
  *((void *)&v190 + 1) = v106;
  sub_1A09F4648();
  int v107 = *((unsigned __int8 *)v1 + 913);
  if (v107 == 2)
  {
    sub_1A09ED5A4((uint64_t)v192, &v190);
    sub_1A087B20C((uint64_t)v192);
    sub_1A0784C08((uint64_t)&v190, &qword_1EB4A58F0);
  }
  else
  {
    uint64_t v191 = v17;
    LOBYTE(v190) = v107 & 1;
    sub_1A07825B4(&v190, v189);
    char v108 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v188 = v204;
    unint64_t v204 = 0x8000000000000000;
    sub_1A08D97F0(v189, (uint64_t)v192, v108);
    unint64_t v204 = v188;
    swift_bridgeObjectRelease();
    sub_1A087B20C((uint64_t)v192);
  }
  *(void *)&long long v190 = sub_1A09F3E18();
  *((void *)&v190 + 1) = v109;
  sub_1A09F4648();
  int v110 = *((unsigned __int8 *)v1 + 914);
  if (v110 == 2)
  {
    sub_1A09ED5A4((uint64_t)v192, &v190);
    sub_1A087B20C((uint64_t)v192);
    sub_1A0784C08((uint64_t)&v190, &qword_1EB4A58F0);
  }
  else
  {
    uint64_t v191 = v17;
    LOBYTE(v190) = v110 & 1;
    sub_1A07825B4(&v190, v189);
    char v111 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v188 = v204;
    unint64_t v204 = 0x8000000000000000;
    sub_1A08D97F0(v189, (uint64_t)v192, v111);
    unint64_t v204 = v188;
    swift_bridgeObjectRelease();
    sub_1A087B20C((uint64_t)v192);
  }
  *(void *)&long long v190 = sub_1A09F3E18();
  *((void *)&v190 + 1) = v112;
  sub_1A09F4648();
  uint64_t v113 = *((unsigned __int8 *)v1 + 915);
  switch(*((unsigned char *)v1 + 915))
  {
    case 1:
      uint64_t v113 = 1;
      goto LABEL_92;
    case 2:
      uint64_t v113 = 2;
      goto LABEL_92;
    case 3:
      uint64_t v113 = 3;
      goto LABEL_92;
    case 4:
      uint64_t v113 = 4;
      goto LABEL_92;
    case 5:
      uint64_t v113 = 5;
      goto LABEL_92;
    case 6:
      uint64_t v113 = 64;
      goto LABEL_92;
    case 7:
      sub_1A09ED5A4((uint64_t)v192, &v190);
      sub_1A087B20C((uint64_t)v192);
      sub_1A0784C08((uint64_t)&v190, &qword_1EB4A58F0);
      goto LABEL_93;
    default:
LABEL_92:
      uint64_t v191 = v13;
      *(void *)&long long v190 = v113;
      sub_1A07825B4(&v190, v189);
      char v114 = swift_isUniquelyReferenced_nonNull_native();
      unint64_t v188 = v204;
      unint64_t v204 = 0x8000000000000000;
      sub_1A08D97F0(v189, (uint64_t)v192, v114);
      unint64_t v204 = v188;
      swift_bridgeObjectRelease();
      sub_1A087B20C((uint64_t)v192);
LABEL_93:
      *(void *)&long long v190 = sub_1A09F3E18();
      *((void *)&v190 + 1) = v115;
      sub_1A09F4648();
      uint64_t v116 = *((unsigned __int8 *)v1 + 916);
      if (v116 == 4)
      {
        sub_1A09ED5A4((uint64_t)v192, &v190);
        sub_1A087B20C((uint64_t)v192);
        sub_1A0784C08((uint64_t)&v190, &qword_1EB4A58F0);
      }
      else
      {
        uint64_t v191 = v13;
        *(void *)&long long v190 = v116;
        sub_1A07825B4(&v190, v189);
        char v117 = swift_isUniquelyReferenced_nonNull_native();
        unint64_t v188 = v204;
        unint64_t v204 = 0x8000000000000000;
        sub_1A08D97F0(v189, (uint64_t)v192, v117);
        unint64_t v204 = v188;
        swift_bridgeObjectRelease();
        sub_1A087B20C((uint64_t)v192);
      }
      *(void *)&long long v190 = sub_1A09F3E18();
      *((void *)&v190 + 1) = v118;
      sub_1A09F4648();
      uint64_t v119 = *((unsigned __int8 *)v1 + 917);
      if (v119 == 4)
      {
        sub_1A09ED5A4((uint64_t)v192, &v190);
        sub_1A087B20C((uint64_t)v192);
        sub_1A0784C08((uint64_t)&v190, &qword_1EB4A58F0);
      }
      else
      {
        uint64_t v191 = v13;
        *(void *)&long long v190 = v119;
        sub_1A07825B4(&v190, v189);
        char v120 = swift_isUniquelyReferenced_nonNull_native();
        unint64_t v188 = v204;
        unint64_t v204 = 0x8000000000000000;
        sub_1A08D97F0(v189, (uint64_t)v192, v120);
        unint64_t v204 = v188;
        swift_bridgeObjectRelease();
        sub_1A087B20C((uint64_t)v192);
      }
      *(void *)&long long v190 = sub_1A09F3E18();
      *((void *)&v190 + 1) = v121;
      sub_1A09F4648();
      int v122 = *((unsigned __int8 *)v1 + 918);
      if (v122 == 2)
      {
        sub_1A09ED5A4((uint64_t)v192, &v190);
        sub_1A087B20C((uint64_t)v192);
        sub_1A0784C08((uint64_t)&v190, &qword_1EB4A58F0);
      }
      else
      {
        uint64_t v191 = v17;
        LOBYTE(v190) = v122 & 1;
        sub_1A07825B4(&v190, v189);
        char v123 = swift_isUniquelyReferenced_nonNull_native();
        unint64_t v188 = v204;
        unint64_t v204 = 0x8000000000000000;
        sub_1A08D97F0(v189, (uint64_t)v192, v123);
        unint64_t v204 = v188;
        swift_bridgeObjectRelease();
        sub_1A087B20C((uint64_t)v192);
      }
      *(void *)&long long v190 = sub_1A09F3E18();
      *((void *)&v190 + 1) = v124;
      sub_1A09F4648();
      int v125 = *((unsigned __int8 *)v1 + 919);
      if (v125 == 2)
      {
        sub_1A09ED5A4((uint64_t)v192, &v190);
        sub_1A087B20C((uint64_t)v192);
        sub_1A0784C08((uint64_t)&v190, &qword_1EB4A58F0);
      }
      else
      {
        uint64_t v191 = v17;
        LOBYTE(v190) = v125 & 1;
        sub_1A07825B4(&v190, v189);
        char v126 = swift_isUniquelyReferenced_nonNull_native();
        unint64_t v188 = v204;
        unint64_t v204 = 0x8000000000000000;
        sub_1A08D97F0(v189, (uint64_t)v192, v126);
        unint64_t v204 = v188;
        swift_bridgeObjectRelease();
        sub_1A087B20C((uint64_t)v192);
      }
      *(void *)&long long v190 = sub_1A09F3E18();
      *((void *)&v190 + 1) = v127;
      sub_1A09F4648();
      int v128 = *((unsigned __int8 *)v1 + 920);
      if (v128 == 2)
      {
        sub_1A09ED5A4((uint64_t)v192, &v190);
        sub_1A087B20C((uint64_t)v192);
        sub_1A0784C08((uint64_t)&v190, &qword_1EB4A58F0);
      }
      else
      {
        uint64_t v191 = v17;
        LOBYTE(v190) = v128 & 1;
        sub_1A07825B4(&v190, v189);
        char v129 = swift_isUniquelyReferenced_nonNull_native();
        unint64_t v188 = v204;
        unint64_t v204 = 0x8000000000000000;
        sub_1A08D97F0(v189, (uint64_t)v192, v129);
        unint64_t v204 = v188;
        swift_bridgeObjectRelease();
        sub_1A087B20C((uint64_t)v192);
      }
      *(void *)&long long v190 = sub_1A09F3E18();
      *((void *)&v190 + 1) = v130;
      sub_1A09F4648();
      uint64_t v131 = -1;
      switch(*((unsigned char *)v1 + 921))
      {
        case 1:
          uint64_t v131 = 1;
          goto LABEL_135;
        case 2:
          uint64_t v131 = 3;
          goto LABEL_135;
        case 3:
          uint64_t v131 = 4;
          goto LABEL_135;
        case 4:
          uint64_t v131 = 8;
          goto LABEL_135;
        case 5:
          uint64_t v131 = 9;
          goto LABEL_135;
        case 6:
          uint64_t v131 = 10;
          goto LABEL_135;
        case 7:
          uint64_t v131 = 11;
          goto LABEL_135;
        case 8:
          uint64_t v131 = 12;
          goto LABEL_135;
        case 9:
          uint64_t v131 = 13;
          goto LABEL_135;
        case 0xA:
          uint64_t v131 = 14;
          goto LABEL_135;
        case 0xB:
          uint64_t v131 = 15;
          goto LABEL_135;
        case 0xC:
          uint64_t v131 = 16;
          goto LABEL_135;
        case 0xD:
          uint64_t v131 = 17;
          goto LABEL_135;
        case 0xE:
          uint64_t v131 = 18;
          goto LABEL_135;
        case 0xF:
          uint64_t v131 = 19;
          goto LABEL_135;
        case 0x10:
          uint64_t v131 = 20;
          goto LABEL_135;
        case 0x11:
          uint64_t v131 = 21;
          goto LABEL_135;
        case 0x12:
          uint64_t v131 = 22;
          goto LABEL_135;
        case 0x13:
          uint64_t v131 = 23;
          goto LABEL_135;
        case 0x14:
          uint64_t v131 = 24;
          goto LABEL_135;
        case 0x15:
          uint64_t v131 = 25;
          goto LABEL_135;
        case 0x16:
          uint64_t v131 = 26;
          goto LABEL_135;
        case 0x17:
          uint64_t v131 = 27;
          goto LABEL_135;
        case 0x18:
          uint64_t v131 = 28;
          goto LABEL_135;
        case 0x19:
          uint64_t v131 = 29;
          goto LABEL_135;
        case 0x1A:
          sub_1A09ED5A4((uint64_t)v192, &v190);
          sub_1A087B20C((uint64_t)v192);
          sub_1A0784C08((uint64_t)&v190, &qword_1EB4A58F0);
          goto LABEL_136;
        default:
LABEL_135:
          uint64_t v191 = v13;
          *(void *)&long long v190 = v131;
          sub_1A07825B4(&v190, v189);
          char v132 = swift_isUniquelyReferenced_nonNull_native();
          unint64_t v188 = v204;
          unint64_t v204 = 0x8000000000000000;
          sub_1A08D97F0(v189, (uint64_t)v192, v132);
          unint64_t v204 = v188;
          swift_bridgeObjectRelease();
          sub_1A087B20C((uint64_t)v192);
LABEL_136:
          *(void *)&long long v190 = sub_1A09F3E18();
          *((void *)&v190 + 1) = v133;
          sub_1A09F4648();
          uint64_t v134 = v1[117];
          if (v134)
          {
            uint64_t v135 = v1[116];
            uint64_t v191 = v91;
            *(void *)&long long v190 = v135;
            *((void *)&v190 + 1) = v134;
            sub_1A07825B4(&v190, v189);
            swift_bridgeObjectRetain();
            char v136 = swift_isUniquelyReferenced_nonNull_native();
            unint64_t v188 = v204;
            unint64_t v204 = 0x8000000000000000;
            sub_1A08D97F0(v189, (uint64_t)v192, v136);
            unint64_t v204 = v188;
            swift_bridgeObjectRelease();
            sub_1A087B20C((uint64_t)v192);
          }
          else
          {
            sub_1A09ED5A4((uint64_t)v192, &v190);
            sub_1A087B20C((uint64_t)v192);
            sub_1A0784C08((uint64_t)&v190, &qword_1EB4A58F0);
          }
          *(void *)&long long v190 = sub_1A09F3E18();
          *((void *)&v190 + 1) = v137;
          sub_1A09F4648();
          uint64_t v138 = sub_1A07856F8((uint64_t *)&unk_1E94FAF20);
          uint64_t v139 = *(void *)(*(void *)(v138 - 8) + 64);
          MEMORY[0x1F4188790](v138 - 8);
          uint64_t v187 = type metadata accessor for RemoteIntentFileTransfer();
          sub_1A08CB838((uint64_t)v1 + *(int *)(v187 + 160), (uint64_t)&v187 - ((v139 + 15) & 0xFFFFFFFFFFFFFFF0));
          uint64_t v140 = sub_1A09F3478();
          uint64_t v141 = *(void *)(v140 - 8);
          uint64_t v142 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v141 + 48);
          int v143 = v142((char *)&v187 - ((v139 + 15) & 0xFFFFFFFFFFFFFFF0), 1, v140);
          uint64_t v144 = MEMORY[0x1E4FBB3D0];
          if (v143 == 1)
          {
            sub_1A0784C08((uint64_t)&v187 - ((v139 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t *)&unk_1E94FAF20);
            sub_1A09ED5A4((uint64_t)v192, &v190);
            sub_1A087B20C((uint64_t)v192);
            sub_1A0784C08((uint64_t)&v190, &qword_1EB4A58F0);
          }
          else
          {
            sub_1A09F3448();
            uint64_t v191 = v144;
            *(void *)&long long v190 = v145;
            (*(void (**)(char *, uint64_t))(v141 + 8))((char *)&v187 - ((v139 + 15) & 0xFFFFFFFFFFFFFFF0), v140);
            sub_1A07825B4(&v190, v189);
            char v146 = swift_isUniquelyReferenced_nonNull_native();
            unint64_t v188 = v204;
            unint64_t v204 = 0x8000000000000000;
            sub_1A08D97F0(v189, (uint64_t)v192, v146);
            unint64_t v204 = v188;
            swift_bridgeObjectRelease();
            sub_1A087B20C((uint64_t)v192);
          }
          *(void *)&long long v190 = sub_1A09F3E18();
          *((void *)&v190 + 1) = v147;
          uint64_t v148 = sub_1A09F4648();
          MEMORY[0x1F4188790](v148);
          int v149 = (int *)v187;
          sub_1A08CB838((uint64_t)v1 + *(int *)(v187 + 164), (uint64_t)&v187 - ((v139 + 15) & 0xFFFFFFFFFFFFFFF0));
          if (v142((char *)&v187 - ((v139 + 15) & 0xFFFFFFFFFFFFFFF0), 1, v140) == 1)
          {
            sub_1A0784C08((uint64_t)&v187 - ((v139 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t *)&unk_1E94FAF20);
            sub_1A09ED5A4((uint64_t)v192, &v190);
            sub_1A087B20C((uint64_t)v192);
            sub_1A0784C08((uint64_t)&v190, &qword_1EB4A58F0);
          }
          else
          {
            sub_1A09F3448();
            uint64_t v191 = MEMORY[0x1E4FBB3D0];
            *(void *)&long long v190 = v150;
            (*(void (**)(char *, uint64_t))(v141 + 8))((char *)&v187 - ((v139 + 15) & 0xFFFFFFFFFFFFFFF0), v140);
            sub_1A07825B4(&v190, v189);
            char v151 = swift_isUniquelyReferenced_nonNull_native();
            unint64_t v188 = v204;
            unint64_t v204 = 0x8000000000000000;
            sub_1A08D97F0(v189, (uint64_t)v192, v151);
            unint64_t v204 = v188;
            swift_bridgeObjectRelease();
            sub_1A087B20C((uint64_t)v192);
          }
          *(void *)&long long v190 = sub_1A09F3E18();
          *((void *)&v190 + 1) = v152;
          uint64_t v153 = MEMORY[0x1E4FBB1A0];
          sub_1A09F4648();
          int v154 = (uint64_t *)((char *)v1 + v149[42]);
          uint64_t v155 = v154[1];
          uint64_t v156 = MEMORY[0x1E4FBB550];
          if (v155)
          {
            uint64_t v157 = *v154;
            uint64_t v191 = v153;
            *(void *)&long long v190 = v157;
            *((void *)&v190 + 1) = v155;
            sub_1A07825B4(&v190, v189);
            swift_bridgeObjectRetain();
            char v158 = swift_isUniquelyReferenced_nonNull_native();
            unint64_t v188 = v204;
            unint64_t v204 = 0x8000000000000000;
            sub_1A08D97F0(v189, (uint64_t)v192, v158);
            unint64_t v204 = v188;
            swift_bridgeObjectRelease();
            sub_1A087B20C((uint64_t)v192);
          }
          else
          {
            sub_1A09ED5A4((uint64_t)v192, &v190);
            sub_1A087B20C((uint64_t)v192);
            sub_1A0784C08((uint64_t)&v190, &qword_1EB4A58F0);
          }
          *(void *)&long long v190 = sub_1A09F3E18();
          *((void *)&v190 + 1) = v159;
          uint64_t v160 = MEMORY[0x1E4FBB1A0];
          sub_1A09F4648();
          uint64_t v161 = (uint64_t *)((char *)v1 + v149[43]);
          uint64_t v162 = v161[1];
          if (v162)
          {
            uint64_t v163 = *v161;
            uint64_t v191 = v160;
            *(void *)&long long v190 = v163;
            *((void *)&v190 + 1) = v162;
            sub_1A07825B4(&v190, v189);
            swift_bridgeObjectRetain();
            char v164 = swift_isUniquelyReferenced_nonNull_native();
            unint64_t v188 = v204;
            unint64_t v204 = 0x8000000000000000;
            sub_1A08D97F0(v189, (uint64_t)v192, v164);
            unint64_t v204 = v188;
            swift_bridgeObjectRelease();
            sub_1A087B20C((uint64_t)v192);
          }
          else
          {
            sub_1A09ED5A4((uint64_t)v192, &v190);
            sub_1A087B20C((uint64_t)v192);
            sub_1A0784C08((uint64_t)&v190, &qword_1EB4A58F0);
          }
          *(void *)&long long v190 = sub_1A09F3E18();
          *((void *)&v190 + 1) = v165;
          uint64_t v166 = MEMORY[0x1E4FBB1A0];
          sub_1A09F4648();
          __int16 v167 = (uint64_t *)((char *)v1 + v149[44]);
          uint64_t v168 = v167[1];
          if (v168)
          {
            uint64_t v169 = *v167;
            uint64_t v191 = v166;
            *(void *)&long long v190 = v169;
            *((void *)&v190 + 1) = v168;
            sub_1A07825B4(&v190, v189);
            swift_bridgeObjectRetain();
            char v170 = swift_isUniquelyReferenced_nonNull_native();
            unint64_t v188 = v204;
            unint64_t v204 = 0x8000000000000000;
            sub_1A08D97F0(v189, (uint64_t)v192, v170);
            unint64_t v204 = v188;
            swift_bridgeObjectRelease();
            sub_1A087B20C((uint64_t)v192);
          }
          else
          {
            sub_1A09ED5A4((uint64_t)v192, &v190);
            sub_1A087B20C((uint64_t)v192);
            sub_1A0784C08((uint64_t)&v190, &qword_1EB4A58F0);
          }
          *(void *)&long long v190 = sub_1A09F3E18();
          *((void *)&v190 + 1) = v171;
          uint64_t v172 = MEMORY[0x1E4FBB1A0];
          sub_1A09F4648();
          long long v173 = (uint64_t *)((char *)v1 + v149[45]);
          uint64_t v174 = v173[1];
          if (v174)
          {
            uint64_t v175 = *v173;
            uint64_t v191 = v172;
            *(void *)&long long v190 = v175;
            *((void *)&v190 + 1) = v174;
            sub_1A07825B4(&v190, v189);
            swift_bridgeObjectRetain();
            char v176 = swift_isUniquelyReferenced_nonNull_native();
            unint64_t v188 = v204;
            unint64_t v204 = 0x8000000000000000;
            sub_1A08D97F0(v189, (uint64_t)v192, v176);
            unint64_t v204 = v188;
            swift_bridgeObjectRelease();
            sub_1A087B20C((uint64_t)v192);
          }
          else
          {
            sub_1A09ED5A4((uint64_t)v192, &v190);
            sub_1A087B20C((uint64_t)v192);
            sub_1A0784C08((uint64_t)&v190, &qword_1EB4A58F0);
          }
          *(void *)&long long v190 = sub_1A09F3E18();
          *((void *)&v190 + 1) = v177;
          uint64_t v178 = MEMORY[0x1E4FBB1A0];
          sub_1A09F4648();
          uint64_t v179 = (uint64_t *)((char *)v1 + v149[46]);
          uint64_t v180 = v179[1];
          if (v180)
          {
            uint64_t v181 = *v179;
            uint64_t v191 = v178;
            *(void *)&long long v190 = v181;
            *((void *)&v190 + 1) = v180;
            sub_1A07825B4(&v190, v189);
            swift_bridgeObjectRetain();
            char v182 = swift_isUniquelyReferenced_nonNull_native();
            unint64_t v188 = v204;
            unint64_t v204 = 0x8000000000000000;
            sub_1A08D97F0(v189, (uint64_t)v192, v182);
            unint64_t v204 = v188;
            swift_bridgeObjectRelease();
            sub_1A087B20C((uint64_t)v192);
          }
          else
          {
            sub_1A09ED5A4((uint64_t)v192, &v190);
            sub_1A087B20C((uint64_t)v192);
            sub_1A0784C08((uint64_t)&v190, &qword_1EB4A58F0);
          }
          *(void *)&long long v190 = sub_1A09F3E18();
          *((void *)&v190 + 1) = v183;
          sub_1A09F4648();
          uint64_t v184 = *((unsigned __int8 *)v1 + v149[47]);
          if (v184 == 3)
          {
            sub_1A09ED5A4((uint64_t)v192, &v190);
            sub_1A087B20C((uint64_t)v192);
            sub_1A0784C08((uint64_t)&v190, &qword_1EB4A58F0);
          }
          else
          {
            uint64_t v191 = v156;
            *(void *)&long long v190 = v184;
            sub_1A07825B4(&v190, v189);
            char v185 = swift_isUniquelyReferenced_nonNull_native();
            unint64_t v188 = v204;
            unint64_t v204 = 0x8000000000000000;
            sub_1A08D97F0(v189, (uint64_t)v192, v185);
            unint64_t v204 = v188;
            swift_bridgeObjectRelease();
            sub_1A087B20C((uint64_t)v192);
          }
          return v204;
      }
  }
}

uint64_t sub_1A095A970(char a1)
{
  uint64_t result = 1684632935;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x476567617373656DLL;
      break;
    case 2:
    case 38:
      uint64_t result = 0x726566736E617274;
      break;
    case 3:
      uint64_t result = 0x696D6F636E497369;
      break;
    case 4:
      uint64_t result = 0x656D616E656C6966;
      break;
    case 5:
      uint64_t result = 0x65707954656D696DLL;
      break;
    case 6:
      unsigned int v3 = 1416197237;
      goto LABEL_9;
    case 7:
    case 18:
    case 29:
      uint64_t result = 0xD000000000000013;
      break;
    case 8:
      uint64_t result = 0x7461657243736668;
      break;
    case 9:
      unsigned int v3 = 1416849000;
LABEL_9:
      uint64_t result = v3 | 0x65707900000000;
      break;
    case 10:
      uint64_t result = 0x7367616C46736668;
      break;
    case 11:
      uint64_t result = 0xD000000000000012;
      break;
    case 12:
      uint64_t result = 0x5572656B63697473;
      break;
    case 13:
      uint64_t result = 0x7475626972747461;
      break;
    case 14:
      uint64_t result = 0x726550726568746FLL;
      break;
    case 15:
      uint64_t result = 0x49746E756F636361;
      break;
    case 16:
      uint64_t result = 0x42746E6572727563;
      break;
    case 17:
      uint64_t result = 0x7479426C61746F74;
      break;
    case 19:
      uint64_t result = 0xD000000000000015;
      break;
    case 20:
      uint64_t result = 0x6469567875417369;
      break;
    case 21:
      uint64_t result = 0x6E65657263537369;
      break;
    case 22:
      uint64_t result = 0xD000000000000016;
      break;
    case 23:
      uint64_t result = 0xD000000000000023;
      break;
    case 24:
      uint64_t result = 0xD000000000000024;
      break;
    case 25:
      uint64_t result = 0x616D497875417369;
      break;
    case 26:
      uint64_t result = 0x656B636974537369;
      break;
    case 27:
      uint64_t result = 0x6174744165646968;
      break;
    case 28:
      uint64_t result = 0x7453636E79536B63;
      break;
    case 30:
      uint64_t result = 0xD000000000000016;
      break;
    case 31:
      uint64_t result = 0x7463657269447369;
      break;
    case 32:
      uint64_t result = 0xD000000000000015;
      break;
    case 33:
      uint64_t result = 0xD000000000000012;
      break;
    case 34:
      uint64_t result = 0x616552726F727265;
      break;
    case 35:
      uint64_t result = 0xD000000000000010;
      break;
    case 36:
      uint64_t result = 0x7461447472617473;
      break;
    case 37:
      uint64_t result = 0x4464657461657263;
      break;
    case 39:
      uint64_t result = 0x4C52556C61636F6CLL;
      break;
    case 40:
      uint64_t result = 0x7461506C61636F6CLL;
      break;
    case 41:
      uint64_t result = 0xD00000000000001CLL;
      break;
    case 42:
      uint64_t result = 0x54786F62646E6173;
      break;
    case 43:
      uint64_t result = 0x6552657461647075;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A095AEF0()
{
  return sub_1A09F4C88();
}

uint64_t sub_1A095AF38()
{
  return sub_1A09F4C58();
}

uint64_t sub_1A095AF68()
{
  return sub_1A09F4C88();
}

uint64_t sub_1A095AFAC@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_1A095D824(*a1);
  *a2 = result;
  return result;
}

void sub_1A095AFD8(void *a1@<X8>)
{
  *a1 = *v1 - 1;
}

uint64_t sub_1A095AFE8()
{
  return sub_1A09F4008();
}

uint64_t sub_1A095B048()
{
  return sub_1A09F3F88();
}

uint64_t sub_1A095B098()
{
  return sub_1A09F4008();
}

uint64_t sub_1A095B0F8()
{
  return sub_1A09F3F88();
}

uint64_t sub_1A095B148()
{
  return sub_1A09F4008();
}

uint64_t sub_1A095B1A8()
{
  return sub_1A09F3F88();
}

BOOL sub_1A095B1F8(char *a1, char *a2)
{
  return qword_1A0A12FD8[*a1] == qword_1A0A12FD8[*a2];
}

uint64_t sub_1A095B21C()
{
  return sub_1A09F4C88();
}

uint64_t sub_1A095B26C()
{
  return sub_1A09F4C58();
}

uint64_t sub_1A095B2A4()
{
  return sub_1A09F4C88();
}

uint64_t sub_1A095B2F0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1A0961EC4();
  *a1 = result;
  return result;
}

void sub_1A095B31C(void *a1@<X8>)
{
  *a1 = qword_1A0A12FD8[*v1];
}

uint64_t sub_1A095B334()
{
  return sub_1A09F4008();
}

uint64_t sub_1A095B394()
{
  return sub_1A09F3F88();
}

BOOL sub_1A095B3E4(char *a1, char *a2)
{
  return qword_1A0A13010[*a1] == qword_1A0A13010[*a2];
}

uint64_t sub_1A095B408()
{
  return sub_1A09F4C88();
}

uint64_t sub_1A095B458()
{
  return sub_1A09F4C58();
}

uint64_t sub_1A095B490()
{
  return sub_1A09F4C88();
}

uint64_t sub_1A095B4DC@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_1A095D838(*a1);
  *a2 = result;
  return result;
}

void sub_1A095B508(void *a1@<X8>)
{
  *a1 = qword_1A0A13010[*v1];
}

uint64_t sub_1A095B520()
{
  return sub_1A09F4008();
}

uint64_t sub_1A095B580()
{
  return sub_1A09F3F88();
}

uint64_t sub_1A095B5D0()
{
  return sub_1A09F4008();
}

uint64_t sub_1A095B630()
{
  return sub_1A09F3F88();
}

uint64_t sub_1A095B680()
{
  return sub_1A095A970(*v0);
}

uint64_t sub_1A095B688@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A0962030(a1, a2);
  *a3 = result;
  return result;
}

void sub_1A095B6B0(unsigned char *a1@<X8>)
{
  *a1 = 44;
}

uint64_t sub_1A095B6BC(uint64_t a1)
{
  unint64_t v2 = sub_1A095D8A8();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A095B6F8(uint64_t a1)
{
  unint64_t v2 = sub_1A095D8A8();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t RemoteIntentFileTransfer.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_1A07856F8(&qword_1E94FCDD8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = &v15[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_1A086F45C(a1, a1[3]);
  sub_1A095D8A8();
  sub_1A09F4CC8();
  v18[0] = 0;
  sub_1A09F4978();
  if (!v2)
  {
    v18[0] = 1;
    sub_1A09F4978();
    v18[0] = *(unsigned char *)(v3 + 32);
    v17[0] = 2;
    sub_1A095D8FC();
    sub_1A09F49D8();
    v18[0] = 3;
    sub_1A09F4988();
    v18[0] = 4;
    sub_1A09F4978();
    v18[0] = 5;
    sub_1A09F4978();
    v18[0] = 6;
    sub_1A09F4978();
    v18[0] = 7;
    sub_1A09F4978();
    v18[0] = 8;
    sub_1A09F49B8();
    v18[0] = 9;
    sub_1A09F49B8();
    v18[0] = 10;
    sub_1A09F4A08();
    char v9 = *(unsigned char *)(v3 + 248);
    long long v10 = *(_OWORD *)(v3 + 152);
    long long v19 = *(_OWORD *)(v3 + 136);
    long long v20 = v10;
    long long v11 = *(_OWORD *)(v3 + 184);
    long long v21 = *(_OWORD *)(v3 + 168);
    long long v22 = v11;
    long long v12 = *(_OWORD *)(v3 + 216);
    long long v23 = *(_OWORD *)(v3 + 200);
    long long v24 = v12;
    long long v25 = *(_OWORD *)(v3 + 232);
    char v26 = v9;
    v18[303] = 11;
    sub_1A095D950();
    sub_1A09F49D8();
    sub_1A08AF448(v3 + 256, (uint64_t)v18, &qword_1E94FCDC8);
    sub_1A08AF448((uint64_t)v18, (uint64_t)v17, &qword_1E94FCDC8);
    v16[231] = 12;
    sub_1A095D9A4();
    sub_1A09F49D8();
    sub_1A08AF448(v3 + 552, (uint64_t)v16, &qword_1E94FCDD0);
    sub_1A08AF448((uint64_t)v16, (uint64_t)v15, &qword_1E94FCDD0);
    HIBYTE(v14) = 13;
    sub_1A095D9F8();
    sub_1A09F49D8();
    v15[0] = 14;
    sub_1A09F4978();
    v15[0] = 15;
    sub_1A09F4978();
    v15[0] = 16;
    sub_1A09F49F8();
    v15[0] = 17;
    sub_1A09F49F8();
    v15[0] = 18;
    sub_1A09F49F8();
    v15[0] = 19;
    sub_1A09F4988();
    v15[0] = 20;
    sub_1A09F4988();
    v15[0] = 21;
    sub_1A09F4988();
    v15[0] = 22;
    sub_1A09F4978();
    v15[0] = 23;
    sub_1A09F4978();
    v15[0] = 24;
    sub_1A09F4978();
    v15[0] = 25;
    sub_1A09F4988();
    v15[0] = 26;
    sub_1A09F4988();
    v15[0] = 27;
    sub_1A09F4988();
    v15[0] = *(unsigned char *)(v3 + 915);
    HIBYTE(v14) = 28;
    sub_1A095DA4C();
    sub_1A09F49D8();
    v15[0] = *(unsigned char *)(v3 + 916);
    HIBYTE(v14) = 29;
    sub_1A095DAA0();
    sub_1A09F49D8();
    v15[0] = *(unsigned char *)(v3 + 917);
    HIBYTE(v14) = 30;
    sub_1A08D0010();
    sub_1A09F49D8();
    v15[0] = 31;
    sub_1A09F4988();
    v15[0] = 32;
    sub_1A09F4988();
    v15[0] = 33;
    sub_1A09F4988();
    v15[0] = *(unsigned char *)(v3 + 921);
    HIBYTE(v14) = 34;
    sub_1A095DAF4();
    sub_1A09F49D8();
    v15[0] = 35;
    sub_1A09F4978();
    uint64_t v27 = type metadata accessor for RemoteIntentFileTransfer();
    v15[0] = 36;
    sub_1A09F3478();
    sub_1A0939E7C(&qword_1E94FC4E8);
    sub_1A09F49D8();
    v15[0] = 37;
    sub_1A09F49D8();
    v15[0] = 38;
    sub_1A09F4978();
    v15[0] = 39;
    sub_1A09F4978();
    v15[0] = 40;
    sub_1A09F4978();
    v15[0] = 41;
    sub_1A09F4978();
    v15[0] = 42;
    sub_1A09F4978();
    v15[0] = *(unsigned char *)(v3 + *(int *)(v27 + 188));
    HIBYTE(v14) = 43;
    sub_1A095DB48();
    sub_1A09F49D8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t RemoteIntentFileTransfer.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v129 = sub_1A07856F8(&qword_1E94FCE28);
  uint64_t v5 = *(void *)(v129 - 8);
  MEMORY[0x1F4188790](v129);
  uint64_t v7 = (char *)&v121 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v139 = (int *)type metadata accessor for RemoteIntentFileTransfer();
  MEMORY[0x1F4188790](v139);
  char v9 = (char *)&v121 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = a1[3];
  uint64_t v130 = (uint64_t)a1;
  sub_1A086F45C(a1, v10);
  sub_1A095D8A8();
  sub_1A09F4CA8();
  uint64_t v131 = v2;
  if (v2)
  {
    LODWORD(v129) = 0;
    unint64_t v12 = 0;
    goto LABEL_4;
  }
  uint64_t v11 = a2;
  LOBYTE(v137[0]) = 0;
  *(void *)char v9 = sub_1A09F4828();
  *((void *)v9 + 1) = v20;
  LOBYTE(v137[0]) = 1;
  *((void *)v9 + 2) = sub_1A09F4828();
  *((void *)v9 + 3) = v21;
  v136[0] = 2;
  sub_1A095DED0();
  sub_1A09F4888();
  unsigned char v9[32] = v137[0];
  LOBYTE(v137[0]) = 3;
  v9[33] = sub_1A09F4838();
  LOBYTE(v137[0]) = 4;
  *((void *)v9 + 5) = sub_1A09F4828();
  *((void *)v9 + 6) = v22;
  LOBYTE(v137[0]) = 5;
  *((void *)v9 + 7) = sub_1A09F4828();
  *((void *)v9 + 8) = v23;
  LOBYTE(v137[0]) = 6;
  *((void *)v9 + 9) = sub_1A09F4828();
  *((void *)v9 + 10) = v24;
  LOBYTE(v137[0]) = 7;
  uint64_t v25 = sub_1A09F4828();
  uint64_t v131 = 0;
  *((void *)v9 + 11) = v25;
  *((void *)v9 + 12) = v26;
  LOBYTE(v137[0]) = 8;
  uint64_t v27 = v131;
  uint64_t v28 = sub_1A09F4868();
  uint64_t v131 = v27;
  if (v27) {
    goto LABEL_55;
  }
  uint64_t v30 = v5;
  *((void *)v9 + 13) = v28;
  v9[112] = v29 & 1;
  LOBYTE(v137[0]) = 9;
  uint64_t v31 = v131;
  uint64_t v32 = sub_1A09F4868();
  uint64_t v131 = v31;
  if (v31) {
    goto LABEL_55;
  }
  *((void *)v9 + 15) = v32;
  v9[128] = v33 & 1;
  LOBYTE(v137[0]) = 10;
  uint64_t v34 = v131;
  uint64_t v35 = sub_1A09F48B8();
  uint64_t v131 = v34;
  if (v34
    || (*((_WORD *)v9 + 65) = v35,
        v9[132] = BYTE2(v35) & 1,
        v136[0] = 11,
        sub_1A095DF24(),
        uint64_t v36 = v131,
        sub_1A09F4888(),
        (uint64_t v131 = v36) != 0))
  {
LABEL_55:
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v129);
    LODWORD(v129) = 0;
    unint64_t v12 = 243;
    goto LABEL_4;
  }
  long long v37 = v137[1];
  *(_OWORD *)(v9 + 136) = v137[0];
  *(_OWORD *)(v9 + 152) = v37;
  long long v38 = v137[3];
  *(_OWORD *)(v9 + 168) = v137[2];
  *(_OWORD *)(v9 + 184) = v38;
  long long v39 = v137[5];
  *(_OWORD *)(v9 + 200) = v137[4];
  char v40 = v138;
  *(_OWORD *)(v9 + 216) = v39;
  *(_OWORD *)(v9 + 232) = v137[6];
  v9[248] = v40;
  v136[303] = 12;
  sub_1A095DF78();
  uint64_t v41 = v131;
  sub_1A09F4888();
  uint64_t v131 = v41;
  if (v41)
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v129);
    LODWORD(v129) = 0;
    unint64_t v12 = 2291;
    goto LABEL_4;
  }
  sub_1A08AF448((uint64_t)v137, (uint64_t)v136, &qword_1E94FCDC8);
  sub_1A08AF448((uint64_t)v136, (uint64_t)(v9 + 256), &qword_1E94FCDC8);
  v134[231] = 13;
  sub_1A095DFCC();
  uint64_t v42 = v131;
  sub_1A09F4888();
  uint64_t v131 = v42;
  if (v42)
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v129);
    LODWORD(v129) = 0;
    unint64_t v12 = 6387;
    goto LABEL_4;
  }
  sub_1A08AF448((uint64_t)&v135, (uint64_t)v134, &qword_1E94FCDD0);
  sub_1A08AF448((uint64_t)v134, (uint64_t)(v9 + 552), &qword_1E94FCDD0);
  char v133 = 14;
  uint64_t v43 = v131;
  uint64_t v44 = sub_1A09F4828();
  uint64_t v131 = v43;
  if (v43)
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v129);
    LODWORD(v129) = 0;
    unint64_t v12 = 14579;
    goto LABEL_4;
  }
  *((void *)v9 + 98) = v44;
  *((void *)v9 + 99) = v45;
  char v133 = 15;
  uint64_t v46 = v131;
  uint64_t v47 = sub_1A09F4828();
  uint64_t v131 = v46;
  if (v46)
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v129);
    LODWORD(v129) = 0;
    unint64_t v12 = 30963;
    goto LABEL_4;
  }
  *((void *)v9 + 100) = v47;
  *((void *)v9 + 101) = v48;
  char v133 = 16;
  uint64_t v49 = v131;
  uint64_t v50 = sub_1A09F48A8();
  uint64_t v131 = v49;
  if (v49) {
    goto LABEL_71;
  }
  *((void *)v9 + 102) = v50;
  v9[824] = v51 & 1;
  char v133 = 17;
  uint64_t v52 = v131;
  uint64_t v53 = sub_1A09F48A8();
  uint64_t v131 = v52;
  if (v52) {
    goto LABEL_71;
  }
  *((void *)v9 + 104) = v53;
  v9[840] = v54 & 1;
  char v133 = 18;
  uint64_t v55 = v131;
  uint64_t v56 = sub_1A09F48A8();
  uint64_t v131 = v55;
  if (v55) {
    goto LABEL_71;
  }
  *((void *)v9 + 106) = v56;
  v9[856] = v57 & 1;
  char v133 = 19;
  uint64_t v58 = v131;
  char v59 = sub_1A09F4838();
  uint64_t v131 = v58;
  if (v58) {
    goto LABEL_71;
  }
  v9[857] = v59;
  char v133 = 20;
  uint64_t v60 = v131;
  char v61 = sub_1A09F4838();
  uint64_t v131 = v60;
  if (v60) {
    goto LABEL_71;
  }
  v9[858] = v61;
  char v133 = 21;
  uint64_t v62 = v131;
  char v63 = sub_1A09F4838();
  uint64_t v131 = v62;
  if (v62 || (v9[859] = v63, v133 = 22, uint64_t v64 = v131, v65 = sub_1A09F4828(), (v131 = v64) != 0))
  {
LABEL_71:
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v129);
    LODWORD(v129) = 0;
    unint64_t v12 = 63731;
    goto LABEL_4;
  }
  *((void *)v9 + 108) = v65;
  *((void *)v9 + 109) = v66;
  char v133 = 23;
  uint64_t v67 = v131;
  uint64_t v68 = sub_1A09F4828();
  uint64_t v131 = v67;
  if (v67)
  {
    unint64_t v12 = 4258035;
LABEL_74:
    (*(void (**)(char *, uint64_t))(v30 + 8))(v7, v129);
    LODWORD(v129) = 0;
    goto LABEL_4;
  }
  *((void *)v9 + 110) = v68;
  *((void *)v9 + 111) = v69;
  char v133 = 24;
  uint64_t v70 = v131;
  uint64_t v71 = sub_1A09F4828();
  uint64_t v131 = v70;
  if (v70)
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v129);
    LODWORD(v129) = 0;
    unint64_t v12 = 12646643;
  }
  else
  {
    *((void *)v9 + 112) = v71;
    *((void *)v9 + 113) = v72;
    char v133 = 25;
    uint64_t v73 = v131;
    char v74 = sub_1A09F4838();
    uint64_t v131 = v73;
    if (v73) {
      goto LABEL_88;
    }
    v9[912] = v74;
    char v133 = 26;
    uint64_t v75 = v131;
    char v76 = sub_1A09F4838();
    uint64_t v131 = v75;
    if (v75) {
      goto LABEL_88;
    }
    v9[913] = v76;
    char v133 = 27;
    uint64_t v77 = v131;
    char v78 = sub_1A09F4838();
    uint64_t v131 = v77;
    if (v77) {
      goto LABEL_88;
    }
    v9[914] = v78;
    char v132 = 28;
    sub_1A095E020();
    uint64_t v79 = v131;
    sub_1A09F4888();
    uint64_t v131 = v79;
    if (v79) {
      goto LABEL_88;
    }
    v9[915] = v133;
    char v132 = 29;
    sub_1A095E074();
    uint64_t v80 = v131;
    sub_1A09F4888();
    uint64_t v131 = v80;
    if (v80) {
      goto LABEL_88;
    }
    v9[916] = v133;
    char v132 = 30;
    sub_1A08D2040();
    uint64_t v81 = v131;
    sub_1A09F4888();
    uint64_t v131 = v81;
    if (v81) {
      goto LABEL_88;
    }
    v9[917] = v133;
    char v133 = 31;
    uint64_t v82 = v131;
    char v83 = sub_1A09F4838();
    uint64_t v131 = v82;
    if (v82) {
      goto LABEL_88;
    }
    v9[918] = v83;
    char v133 = 32;
    uint64_t v84 = v131;
    char v85 = sub_1A09F4838();
    uint64_t v131 = v84;
    if (v84) {
      goto LABEL_88;
    }
    v9[919] = v85;
    char v133 = 33;
    uint64_t v86 = v131;
    char v87 = sub_1A09F4838();
    uint64_t v131 = v86;
    if (v86) {
      goto LABEL_88;
    }
    v9[920] = v87;
    char v132 = 34;
    sub_1A095E0C8();
    uint64_t v88 = v131;
    sub_1A09F4888();
    uint64_t v131 = v88;
    if (v88 || (v9[921] = v133, v133 = 35, uint64_t v89 = v131, v90 = sub_1A09F4828(), (v131 = v89) != 0))
    {
LABEL_88:
      unint64_t v12 = 29423859;
      goto LABEL_74;
    }
    *((void *)v9 + 116) = v90;
    *((void *)v9 + 117) = v91;
    uint64_t v92 = sub_1A07856F8((uint64_t *)&unk_1E94FAF20);
    int v128 = &v121;
    uint64_t v93 = *(void *)(*(void *)(v92 - 8) + 64);
    MEMORY[0x1F4188790](v92 - 8);
    uint64_t v125 = (v93 + 15) & 0xFFFFFFFFFFFFFFF0;
    char v94 = (char *)&v121 - v125;
    uint64_t v95 = sub_1A09F3478();
    char v133 = 36;
    uint64_t v126 = sub_1A0939E7C(&qword_1E94FC4D8);
    uint64_t v127 = v95;
    uint64_t v96 = v131;
    sub_1A09F4888();
    uint64_t v131 = v96;
    if (v96)
    {
      (*(void (**)(char *, uint64_t))(v30 + 8))(v7, v129);
      LODWORD(v129) = 0;
      unint64_t v12 = 0x801C0F8F3;
    }
    else
    {
      uint64_t v97 = sub_1A08AF448((uint64_t)v94, (uint64_t)&v9[v139[40]], (uint64_t *)&unk_1E94FAF20);
      MEMORY[0x1F4188790](v97);
      char v98 = (char *)&v121 - v125;
      char v133 = 37;
      uint64_t v99 = v131;
      sub_1A09F4888();
      uint64_t v131 = v99;
      if (v99)
      {
        (*(void (**)(char *, uint64_t))(v30 + 8))(v7, v129);
        LODWORD(v129) = 0;
        unint64_t v12 = 0x1801C0F8F3;
      }
      else
      {
        sub_1A08AF448((uint64_t)v98, (uint64_t)&v9[v139[41]], (uint64_t *)&unk_1E94FAF20);
        char v133 = 38;
        uint64_t v100 = v131;
        uint64_t v101 = sub_1A09F4828();
        uint64_t v131 = v100;
        if (v100)
        {
          (*(void (**)(char *, uint64_t))(v30 + 8))(v7, v129);
          LODWORD(v129) = 0;
          unint64_t v12 = 0x3801C0F8F3;
        }
        else
        {
          uint64_t v103 = (uint64_t *)&v9[v139[42]];
          *uint64_t v103 = v101;
          v103[1] = v102;
          char v133 = 39;
          uint64_t v104 = v131;
          uint64_t v105 = sub_1A09F4828();
          uint64_t v131 = v104;
          if (!v104)
          {
            int v107 = (uint64_t *)&v9[v139[43]];
            *int v107 = v105;
            v107[1] = v106;
            char v133 = 40;
            uint64_t v108 = v131;
            uint64_t v109 = sub_1A09F4828();
            LODWORD(v128) = v108 == 0;
            uint64_t v131 = v108;
            if (v108
              || (char v111 = (uint64_t *)&v9[v139[44]],
                  *char v111 = v109,
                  v111[1] = v110,
                  char v133 = 41,
                  uint64_t v112 = v131,
                  uint64_t v113 = sub_1A09F4828(),
                  (uint64_t v131 = v112) != 0))
            {
              (*(void (**)(char *, uint64_t))(v30 + 8))(v7, v129);
              _s17IMSharedUtilities29RemoteIntentBroadcastEncodingVwxx_0(v130);
              LODWORD(v127) = 0;
              LODWORD(v130) = 0;
            }
            else
            {
              uint64_t v115 = (uint64_t *)&v9[v139[45]];
              *uint64_t v115 = v113;
              v115[1] = v114;
              char v133 = 42;
              uint64_t v116 = v131;
              uint64_t v117 = sub_1A09F4828();
              uint64_t v131 = v116;
              if (v116)
              {
                (*(void (**)(char *, uint64_t))(v30 + 8))(v7, v129);
                _s17IMSharedUtilities29RemoteIntentBroadcastEncodingVwxx_0(v130);
                LODWORD(v130) = 0;
                LODWORD(v127) = 1;
              }
              else
              {
                uint64_t v119 = (uint64_t *)&v9[v139[46]];
                *uint64_t v119 = v117;
                v119[1] = v118;
                char v132 = 43;
                sub_1A095E11C();
                uint64_t v120 = v131;
                sub_1A09F4888();
                uint64_t v131 = v120;
                if (!v120)
                {
                  (*(void (**)(char *, uint64_t))(v30 + 8))(v7, v129);
                  v9[v139[47]] = v133;
                  sub_1A09547EC((uint64_t)v9, v11);
                  _s17IMSharedUtilities29RemoteIntentBroadcastEncodingVwxx_0(v130);
                  return sub_1A095491C((uint64_t)v9);
                }
                (*(void (**)(char *, uint64_t))(v30 + 8))(v7, v129);
                _s17IMSharedUtilities29RemoteIntentBroadcastEncodingVwxx_0(v130);
                LODWORD(v127) = 1;
                LODWORD(v130) = 1;
              }
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            LOBYTE(v14) = 1;
            LODWORD(v15) = 1;
            LODWORD(v16) = 1;
            LODWORD(v17) = 1;
            LODWORD(v18) = 1;
            LODWORD(v19) = 1;
            uint64_t v122 = 1;
            uint64_t v123 = 1;
            uint64_t v125 = 1;
            uint64_t v126 = 1;
            LODWORD(v129) = 1;
            int v124 = 1;
LABEL_12:
            uint64_t result = sub_1A095DE6C(*((void *)v9 + 17), *((void *)v9 + 18));
            if (v14) {
              goto LABEL_13;
            }
            goto LABEL_35;
          }
          (*(void (**)(char *, uint64_t))(v30 + 8))(v7, v129);
          unint64_t v12 = 0x7801C0F8F3;
          LODWORD(v129) = 1;
        }
      }
    }
  }
LABEL_4:
  uint64_t result = _s17IMSharedUtilities29RemoteIntentBroadcastEncodingVwxx_0(v130);
  uint64_t v14 = (v12 >> 12) & 1;
  uint64_t v15 = (v12 >> 13) & 1;
  uint64_t v16 = (v12 >> 14) & 1;
  uint64_t v17 = (v12 >> 15) & 1;
  uint64_t v18 = (v12 >> 22) & 1;
  uint64_t v19 = (v12 >> 23) & 1;
  uint64_t v122 = (v12 >> 24) & 1;
  uint64_t v123 = (v12 >> 35) & 1;
  uint64_t v125 = (v12 >> 36) & 1;
  uint64_t v126 = (v12 >> 37) & 1;
  if (v12)
  {
    uint64_t result = swift_bridgeObjectRelease();
    if ((v12 & 2) == 0)
    {
LABEL_6:
      if ((v12 & 0x10) == 0) {
        goto LABEL_7;
      }
      goto LABEL_30;
    }
  }
  else if ((v12 & 2) == 0)
  {
    goto LABEL_6;
  }
  uint64_t result = swift_bridgeObjectRelease();
  if ((v12 & 0x10) == 0)
  {
LABEL_7:
    if ((v12 & 0x20) == 0) {
      goto LABEL_8;
    }
    goto LABEL_31;
  }
LABEL_30:
  uint64_t result = swift_bridgeObjectRelease();
  if ((v12 & 0x20) == 0)
  {
LABEL_8:
    if ((v12 & 0x40) == 0) {
      goto LABEL_9;
    }
    goto LABEL_32;
  }
LABEL_31:
  uint64_t result = swift_bridgeObjectRelease();
  if ((v12 & 0x40) == 0)
  {
LABEL_9:
    if ((v12 & 0x80) == 0) {
      goto LABEL_10;
    }
LABEL_33:
    uint64_t result = swift_bridgeObjectRelease();
    if ((v12 & 0x800) != 0) {
      goto LABEL_11;
    }
    goto LABEL_34;
  }
LABEL_32:
  uint64_t result = swift_bridgeObjectRelease();
  if ((v12 & 0x80) != 0) {
    goto LABEL_33;
  }
LABEL_10:
  if ((v12 & 0x800) != 0)
  {
LABEL_11:
    int v124 = 0;
    LODWORD(v128) = 0;
    LODWORD(v127) = 0;
    LODWORD(v130) = 0;
    goto LABEL_12;
  }
LABEL_34:
  LODWORD(v130) = 0;
  LODWORD(v127) = 0;
  LODWORD(v128) = 0;
  int v124 = 0;
  if ((v12 & 0x1000) != 0)
  {
LABEL_13:
    sub_1A08AF448((uint64_t)(v9 + 256), (uint64_t)v137, &qword_1E94FCDC8);
    uint64_t result = (uint64_t)sub_1A095DCAC((uint64_t *)v137);
    if (v15) {
      goto LABEL_14;
    }
    goto LABEL_36;
  }
LABEL_35:
  if (v15)
  {
LABEL_14:
    sub_1A08AF448((uint64_t)(v9 + 552), (uint64_t)v137, &qword_1E94FCDD0);
    uint64_t result = (uint64_t)sub_1A095DB9C((uint64_t *)v137);
    if (v16) {
      goto LABEL_15;
    }
    goto LABEL_37;
  }
LABEL_36:
  if (v16)
  {
LABEL_15:
    uint64_t result = swift_bridgeObjectRelease();
    if (v17) {
      goto LABEL_16;
    }
    goto LABEL_38;
  }
LABEL_37:
  if (v17)
  {
LABEL_16:
    uint64_t result = swift_bridgeObjectRelease();
    if (v18) {
      goto LABEL_17;
    }
    goto LABEL_39;
  }
LABEL_38:
  if (v18)
  {
LABEL_17:
    uint64_t result = swift_bridgeObjectRelease();
    if (v19) {
      goto LABEL_18;
    }
    goto LABEL_40;
  }
LABEL_39:
  if (v19)
  {
LABEL_18:
    uint64_t result = swift_bridgeObjectRelease();
    if (v122) {
      goto LABEL_19;
    }
    goto LABEL_41;
  }
LABEL_40:
  if (v122)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    if (v123) {
      goto LABEL_20;
    }
    goto LABEL_42;
  }
LABEL_41:
  if (v123)
  {
LABEL_20:
    uint64_t result = swift_bridgeObjectRelease();
    if (v125) {
      goto LABEL_21;
    }
    goto LABEL_43;
  }
LABEL_42:
  if (v125)
  {
LABEL_21:
    uint64_t result = sub_1A0784C08((uint64_t)&v9[v139[40]], (uint64_t *)&unk_1E94FAF20);
    if (v126) {
      goto LABEL_22;
    }
    goto LABEL_44;
  }
LABEL_43:
  if (v126)
  {
LABEL_22:
    uint64_t result = sub_1A0784C08((uint64_t)&v9[v139[41]], (uint64_t *)&unk_1E94FAF20);
    if (v129) {
      goto LABEL_23;
    }
    goto LABEL_45;
  }
LABEL_44:
  if (v129)
  {
LABEL_23:
    uint64_t result = swift_bridgeObjectRelease();
    if (v124) {
      goto LABEL_24;
    }
    goto LABEL_46;
  }
LABEL_45:
  if (v124)
  {
LABEL_24:
    uint64_t result = swift_bridgeObjectRelease();
    if (v128) {
      goto LABEL_25;
    }
    goto LABEL_47;
  }
LABEL_46:
  if (v128)
  {
LABEL_25:
    uint64_t result = swift_bridgeObjectRelease();
    if (v127) {
      goto LABEL_26;
    }
LABEL_48:
    if (!v130) {
      return result;
    }
    return swift_bridgeObjectRelease();
  }
LABEL_47:
  if (!v127) {
    goto LABEL_48;
  }
LABEL_26:
  uint64_t result = swift_bridgeObjectRelease();
  if ((v130 & 1) == 0) {
    return result;
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A095D338@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, char a6@<W5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, long long a10, long long a11, long long a12, uint64_t a13, char a14, uint64_t a15, char a16, __int16 a17, __int16 a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,long long a23,long long a24,uint64_t a25,char a26,uint64_t a27,char a28,uint64_t a29,char a30,char a31,__int16 a32,long long a33,long long a34,uint64_t a35,uint64_t a36,long long a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,char a52)
{
  *(void *)a9 = a1;
  *(void *)(a9 + 8) = a2;
  *(void *)(a9 + 16) = a3;
  *(void *)(a9 + 24) = a4;
  *(unsigned char *)(a9 + 32) = a5;
  *(unsigned char *)(a9 + 33) = a6;
  *(void *)(a9 + 40) = a7;
  *(void *)(a9 + 48) = a8;
  *(void *)(a9 + 104) = a13;
  *(unsigned char *)(a9 + 112) = a14 & 1;
  *(void *)(a9 + 120) = a15;
  *(unsigned char *)(a9 + 128) = a16 & 1;
  *(_OWORD *)(a9 + 56) = a10;
  *(_OWORD *)(a9 + 72) = a11;
  *(_OWORD *)(a9 + 88) = a12;
  *(_WORD *)(a9 + 130) = a18;
  *(unsigned char *)(a9 + 132) = a19 & 1;
  sub_1A08AF448(a20, a9 + 136, &qword_1E94FCF08);
  sub_1A08AF448(a21, a9 + 256, &qword_1E94FCDC8);
  sub_1A08AF448(a22, a9 + 552, &qword_1E94FCDD0);
  *(_OWORD *)(a9 + 784) = a23;
  *(_OWORD *)(a9 + 800) = a24;
  *(void *)(a9 + 816) = a25;
  *(unsigned char *)(a9 + 824) = a26 & 1;
  *(void *)(a9 + 832) = a27;
  *(unsigned char *)(a9 + 840) = a28 & 1;
  *(void *)(a9 + 848) = a29;
  *(unsigned char *)(a9 + 856) = a30 & 1;
  *(unsigned char *)(a9 + 857) = a31;
  *(_WORD *)(a9 + 858) = a32;
  *(_OWORD *)(a9 + 864) = a33;
  *(_OWORD *)(a9 + 880) = a34;
  *(void *)(a9 + 896) = a35;
  *(void *)(a9 + 904) = a36;
  *(_WORD *)(a9 + 912) = a37;
  *(_DWORD *)(a9 + 914) = *(_DWORD *)((char *)&a37 + 2);
  *(_DWORD *)(a9 + 918) = *(_DWORD *)((char *)&a37 + 6);
  *(void *)(a9 + 928) = a38;
  *(void *)(a9 + 936) = a39;
  uint64_t v53 = (int *)type metadata accessor for RemoteIntentFileTransfer();
  sub_1A08AF448(a40, a9 + v53[40], (uint64_t *)&unk_1E94FAF20);
  uint64_t result = sub_1A08AF448(a41, a9 + v53[41], (uint64_t *)&unk_1E94FAF20);
  uint64_t v55 = (void *)(a9 + v53[42]);
  *uint64_t v55 = a42;
  v55[1] = a43;
  uint64_t v56 = (void *)(a9 + v53[43]);
  *uint64_t v56 = a44;
  v56[1] = a45;
  char v57 = (void *)(a9 + v53[44]);
  *char v57 = a46;
  v57[1] = a47;
  uint64_t v58 = (void *)(a9 + v53[45]);
  *uint64_t v58 = a48;
  v58[1] = a49;
  char v59 = (void *)(a9 + v53[46]);
  *char v59 = a50;
  v59[1] = a51;
  *(unsigned char *)(a9 + v53[47]) = a52;
  return result;
}

uint64_t sub_1A095D634@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return RemoteIntentFileTransfer.init(from:)(a1, a2);
}

uint64_t sub_1A095D64C(void *a1)
{
  return RemoteIntentFileTransfer.encode(to:)(a1);
}

uint64_t static IMFileTransfer.parse(remoteIntentRepresentation:)()
{
  RemoteIntentFileTransfer.dictionaryRepresentation.getter();
  id v0 = objc_msgSend(objc_allocWithZone((Class)IMFileTransfer), sel_init);
  uint64_t v1 = (void *)sub_1A09F3CE8();
  swift_bridgeObjectRelease();
  objc_msgSend(v0, sel__updateWithDictionaryRepresentation_, v1);

  uint64_t v2 = swift_dynamicCastUnknownClass();
  if (!v2)
  {
    sub_1A095E170();
    swift_allocError();
    *uint64_t v3 = 0xD000000000000056;
    v3[1] = 0x80000001A0A36740;
    swift_willThrow();
  }
  return v2;
}

id IMFileTransfer.remoteIntentRepresentation.getter@<X0>(uint64_t a1@<X8>)
{
  id result = objc_msgSend(v1, sel__dictionaryRepresentation);
  if (result)
  {
    uint64_t v4 = result;
    uint64_t v5 = sub_1A09F3D08();

    return (id)RemoteIntentFileTransfer.init(dictionaryRepresentation:)(v5, a1);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1A095D7F8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = static IMFileTransfer.parse(remoteIntentRepresentation:)();
  if (!v1) {
    *a1 = result;
  }
  return result;
}

uint64_t sub_1A095D824(uint64_t a1)
{
  if ((unint64_t)(a1 + 1) < 0xB) {
    return a1 + 1;
  }
  else {
    return 11;
  }
}

uint64_t sub_1A095D838(uint64_t a1)
{
  if ((unint64_t)(a1 + 1) > 0x1E) {
    return 26;
  }
  else {
    return byte_1A0A130E0[a1 + 1];
  }
}

uint64_t type metadata accessor for RemoteIntentFileTransfer()
{
  uint64_t result = qword_1E94FCE78;
  if (!qword_1E94FCE78) {
    return swift_getSingletonMetadata();
  }
  return result;
}