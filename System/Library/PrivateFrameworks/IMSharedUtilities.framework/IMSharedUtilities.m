uint64_t sub_1A0775C58(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, unsigned char *a5)
{
  if (a2)
  {
    *(unsigned char *)(*(void *)(*(void *)(result + 32) + 8) + 24) = 1;
    *a5 = 1;
  }
  return result;
}

void sub_1A0775F70(void *a1, void *a2)
{
  uint64_t v24 = *MEMORY[0x1E4F143B8];
  id v3 = a2;
  if (!a1) {
    goto LABEL_14;
  }
  long long v21 = 0u;
  long long v22 = 0u;
  long long v19 = 0u;
  long long v20 = 0u;
  v4 = [a1 targets];
  uint64_t v5 = [v4 countByEnumeratingWithState:&v19 objects:v23 count:16];
  if (!v5)
  {

    goto LABEL_16;
  }
  uint64_t v6 = v5;
  char v18 = 0;
  uint64_t v7 = *(void *)v20;
  do
  {
    for (uint64_t i = 0; i != v6; ++i)
    {
      if (*(void *)v20 != v7) {
        objc_enumerationMutation(v4);
      }
      uint64_t v9 = *(void *)(*((void *)&v19 + 1) + 8 * i);
      [v3 selector];
      if (objc_opt_respondsToSelector())
      {
        uint64_t v10 = [a1 filterBlock];
        if (!v10
          || (v11 = (void *)v10,
              [a1 filterBlock],
              v12 = (uint64_t (**)(void, void, void))objc_claimAutoreleasedReturnValue(),
              int v13 = v12[2](v12, v9, [v3 selector]),
              v12,
              v11,
              v13))
        {
          [v3 invokeWithTarget:v9];
          char v18 = 1;
        }
      }
    }
    uint64_t v6 = [v4 countByEnumeratingWithState:&v19 objects:v23 count:16];
  }
  while (v6);

  if ((v18 & 1) == 0)
  {
LABEL_16:
    v14 = NSString;
    v15 = NSStringFromSelector((SEL)[v3 selector]);
    uint64_t v16 = [v14 stringWithFormat:@"No responder for %@", v15];

    id v17 = [MEMORY[0x1E4F1CA00] exceptionWithName:@"IMDistributingProxyException" reason:v16 userInfo:0];
    objc_exception_throw(v17);
  }
LABEL_14:
}

void sub_1A0776BA8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_1A0776C14(void *a1)
{
  id v1 = a1;
  v2 = (void *)sub_1A09F3DE8();
  id v3 = objc_msgSend(v1, sel_hasPrefix_, v2);

  return v3;
}

uint64_t sub_1A0776C80(uint64_t a1, void *a2)
{
  return [a2 isSimHidden] ^ 1;
}

uint64_t sub_1A0776D90(void *a1)
{
  *(void *)(*(void *)(a1[5] + 8) + 40) = [(objc_class *)+[IMContactStore IMCNContactFormatterClass] stringFromContact:a1[4] style:a1[6]];

  return MEMORY[0x1F41817F8]();
}

void sub_1A0776E50(void *a1)
{
  v3[6] = *MEMORY[0x1E4F143B8];
  v3[0] = @"__kIMMentionConfirmedMention";
  v3[1] = @"__kIMTextBoldAttributeName";
  v3[2] = @"__kIMTextItalicAttributeName";
  v3[3] = @"__kIMTextUnderlineAttributeName";
  v3[4] = @"__kIMTextStrikethroughAttributeName";
  v3[5] = @"CTAdaptiveImageProvider";
  v2 = [MEMORY[0x1E4F1C978] arrayWithObjects:v3 count:6];
  objc_msgSend(a1, "__im_removeAllAttributesExcept:", v2);
}

void sub_1A0776F24(void *a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  uint64_t v5 = [a1 length];
  uint64_t v6 = (void *)[objc_alloc(MEMORY[0x1E4F1CAD0]) initWithArray:v4];

  v8[0] = MEMORY[0x1E4F143A8];
  v8[1] = 3221225472;
  v8[2] = sub_1A078952C;
  v8[3] = &unk_1E5A12500;
  id v9 = v6;
  uint64_t v10 = a1;
  id v7 = v6;
  objc_msgSend(a1, "enumerateAttributesInRange:options:usingBlock:", 0, v5, 0, v8);
}

uint64_t sub_1A0776FF8(uint64_t result)
{
  return result;
}

uint64_t IMSharedHelperNSNewStringByAppendingStrings()
{
  return _NSNewStringByAppendingStrings();
}

uint64_t sub_1A07775CC()
{
  id v1 = *(void (**)(uint64_t))(v0 + 24);
  uint64_t v2 = *(void *)(v0 + 40) + *(void *)(**(void **)(v0 + 40) + 96);
  swift_beginAccess();
  v1(v2);
  return swift_endAccess();
}

uint64_t ProtectiveQueue.sync<A>(execute:)()
{
  return sub_1A09F4408();
}

{
  return sub_1A09F4408();
}

void sub_1A07776B8(uint64_t a1)
{
}

void sub_1A07776C4(uint64_t a1)
{
}

void sub_1A07776CC(uint64_t a1)
{
}

void sub_1A07776D4(uint64_t a1)
{
}

void sub_1A07776DC(uint64_t a1)
{
}

void sub_1A07776E4(uint64_t a1)
{
}

void sub_1A07776EC(uint64_t a1)
{
}

void sub_1A07776F8(uint64_t a1)
{
}

void sub_1A0777704(uint64_t a1)
{
}

void sub_1A077770C(uint64_t a1)
{
}

void sub_1A0777714(uint64_t a1)
{
}

void sub_1A077771C(uint64_t a1)
{
}

void sub_1A0777724(uint64_t a1)
{
}

void sub_1A077772C(uint64_t a1)
{
}

void sub_1A0777734(uint64_t a1)
{
}

void sub_1A077773C(uint64_t a1)
{
}

void sub_1A0777744(uint64_t a1)
{
}

void sub_1A077774C(uint64_t a1)
{
}

void sub_1A0777754(uint64_t a1)
{
}

void sub_1A077775C(uint64_t a1)
{
}

void sub_1A0777764(uint64_t a1)
{
}

void sub_1A077776C(uint64_t a1)
{
}

void sub_1A0777774(uint64_t a1)
{
}

void sub_1A077777C(uint64_t a1)
{
}

void sub_1A0777788(uint64_t a1)
{
}

void sub_1A0777790(uint64_t a1)
{
}

void sub_1A0777798(uint64_t a1)
{
}

void sub_1A07777A4(uint64_t a1)
{
}

void sub_1A07777AC(uint64_t a1, uint64_t a2)
{
}

uint64_t sub_1A07777BC(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_1A07777CC(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_1A07777DC(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_1A07777EC(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_1A07777FC(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_1A077780C(uint64_t a1, uint64_t a2)
{
}

void sub_1A077781C(uint64_t a1, uint64_t a2)
{
}

uint64_t sub_1A077782C(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_1A077783C(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_1A077784C(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_1A077785C(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_1A077786C(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_1A077787C(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_1A077788C(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_1A077789C(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_1A07778AC(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_1A07778BC(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_1A07778CC(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_1A07778DC(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_1A07778EC(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_1A07778FC(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_1A077790C(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_1A077791C(uint64_t a1, uint64_t a2)
{
}

uint64_t sub_1A077792C(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_1A077793C(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_1A077794C(uint64_t a1, uint64_t a2)
{
}

uint64_t sub_1A077795C(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

id sub_1A07779C0(void *a1)
{
  if ([a1 isSingleCharacterString:@"\uFFFF"])
  {
    uint64_t v2 = [a1 attributesAtIndex:0 effectiveRange:0];
    id v3 = [v2 _dictionaryForKey:@"__kIMSuggestedReplyAttributeName"];
    id v4 = [[IMChipReply alloc] initWithDictionary:v3];
    if (v4)
    {
      uint64_t v5 = NSString;
      uint64_t v6 = IMSharedUtilitiesFrameworkBundle();
      id v7 = [v6 localizedStringForKey:@"SELECTED_OPTION_PREVIEW_FORMAT" value:&stru_1EF2CAD28 table:@"IMSharedUtilities"];
      v8 = [(IMChipReply *)v4 suggestion];
      id v9 = [v8 displayText];
      uint64_t v10 = objc_msgSend(v5, "localizedStringWithFormat:", v7, v9);
    }
    else
    {
      uint64_t v10 = 0;
    }
  }
  else
  {
    uint64_t v10 = 0;
  }

  return v10;
}

id sub_1A0777B0C(void *a1)
{
  if ([a1 isSingleCharacterString:@"\uFFFE"])
  {
    uint64_t v2 = [a1 attributesAtIndex:0 effectiveRange:0];
    id v3 = [v2 _arrayForKey:@"__kIMRichCardsAttributeName"];
    id v4 = [IMRichCards alloc];
    if (v3) {
      uint64_t v5 = v3;
    }
    else {
      uint64_t v5 = (void *)MEMORY[0x1E4F1CBF0];
    }
    uint64_t v6 = [(IMRichCards *)v4 initWithCardArray:v5];
    id v7 = v6;
    if (v6)
    {
      v8 = [(IMRichCards *)v6 previewText];
      if (v8)
      {
        id v9 = NSString;
        uint64_t v10 = IMSharedUtilitiesFrameworkBundle();
        v11 = [v10 localizedStringForKey:@"RICH_CARDS_PREVIEW_FORMAT" value:&stru_1EF2CAD28 table:@"IMSharedUtilities"];
        v12 = objc_msgSend(v9, "localizedStringWithFormat:", v11, v8);
      }
      else
      {
        uint64_t v10 = IMSharedUtilitiesFrameworkBundle();
        v12 = [v10 localizedStringForKey:@"RICH_CARDS_DEFAULT_PREVIEW" value:&stru_1EF2CAD28 table:@"IMSharedUtilities"];
      }
    }
    else
    {
      v12 = 0;
    }
  }
  else
  {
    v12 = 0;
  }

  return v12;
}

uint64_t sub_1A0777C8C(void *a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  if ([a1 length] == 1)
  {
    uint64_t v5 = [a1 string];
    uint64_t v6 = [v5 substringToIndex:1];
    uint64_t v7 = [v6 isEqualToString:v4];
  }
  else
  {
    uint64_t v7 = 0;
  }

  return v7;
}

uint64_t sub_1A0777D28(void *a1, const char *a2, double a3)
{
  if (a3 > 1000000000.0) {
    a3 = a3 / 1000000000.0;
  }
  return [a1 dateWithTimeIntervalSinceReferenceDate:a3];
}

uint64_t IMSharedHelperPersistMergeID()
{
  if (qword_1EB4A5D50 != -1) {
    dispatch_once(&qword_1EB4A5D50, &unk_1EF2BE418);
  }
  return byte_1E94F7218;
}

uint64_t sub_1A0777D84(uint64_t a1, uint64_t a2)
{
  return [*(id *)(a1 + 32) invokeWithTarget:a2];
}

void sub_1A0777DE0(uint64_t a1, __CFString *a2)
{
  uint64_t v17 = *MEMORY[0x1E4F143B8];
  if ([*(id *)(a1 + 32) objectForKey:a2])
  {
    if (IMOSLoggingEnabled())
    {
      id v4 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
      {
        uint64_t v5 = *(__CFString **)(a1 + 40);
        uint64_t v6 = [*(id *)(a1 + 32) objectForKey:a2];
        int v11 = 138412802;
        uint64_t v12 = (uint64_t)a2;
        __int16 v13 = 2112;
        v14 = v5;
        __int16 v15 = 2112;
        uint64_t v16 = v6;
        _os_log_impl(&dword_1A0772000, v4, OS_LOG_TYPE_INFO, "Can't register UTIType %@ for class %@. It is already registered for %@. Please file a bug.", (uint8_t *)&v11, 0x20u);
      }
    }
  }
  [*(id *)(a1 + 32) setObject:*(void *)(a1 + 40) forKey:a2];
  if ([(__CFString *)a2 hasPrefix:@"dyn."])
  {
    uint64_t v7 = (__CFString *)UTTypeCopyPreferredTagWithClass(a2, (CFStringRef)*MEMORY[0x1E4F224F8]);
    uint64_t v8 = [(__CFString *)v7 lowercaseString];
    if ([*(id *)(a1 + 48) objectForKey:v8] && IMOSLoggingEnabled())
    {
      id v9 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
      {
        uint64_t v10 = [*(id *)(a1 + 48) objectForKey:v8];
        int v11 = 138412802;
        uint64_t v12 = v8;
        __int16 v13 = 2112;
        v14 = a2;
        __int16 v15 = 2112;
        uint64_t v16 = v10;
        _os_log_impl(&dword_1A0772000, v9, OS_LOG_TYPE_INFO, "Can't register extension %@ for UTIType %@. It is already registered for %@. Please file a bug.", (uint8_t *)&v11, 0x20u);
      }
    }
    [*(id *)(a1 + 48) setObject:a2 forKey:v8];
  }
}

id IMStringFromClientCapabilities(uint64_t a1)
{
  uint64_t v2 = objc_msgSend(objc_alloc(MEMORY[0x1E4F28E78]), "initWithString:", @"(");
  sub_1A077CA94(1, a1, @"Status", v2);
  sub_1A077CA94(2, a1, @"Notifications", v2);
  sub_1A077CA94(4, a1, @"Chats", v2);
  sub_1A077CA94(8, a1, @"VC", v2);
  sub_1A077CA94(0x80000, a1, @"FTA", v2);
  sub_1A077CA94(16, a1, @"AV Chat Info", v2);
  sub_1A077CA94(32, a1, @"Aux Input", v2);
  sub_1A077CA94(64, a1, @"VC Invitations", v2);
  sub_1A077CA94(128, a1, @"Legacy VC", v2);
  sub_1A077CA94(256, a1, @"Transfers", v2);
  sub_1A077CA94(512, a1, @"Accounts", v2);
  sub_1A077CA94(1024, a1, @"Buddy List", v2);
  sub_1A077CA94(4096, a1, @"Send Messages", v2);
  sub_1A077CA94(0x4000, a1, @"ID Queries", v2);
  sub_1A077CA94(0x2000, a1, @"Message History", v2);
  sub_1A077CA94(0x40000, a1, @"Modify Read State", v2);
  sub_1A077CA94(0x8000, a1, @"Chat Counts", v2);
  sub_1A077CA94(0x10000, a1, @"Sent Messages", v2);
  sub_1A077CA94(0x20000, a1, @"Database Update", v2);
  sub_1A077CA94(0x100000, a1, @"AV", v2);
  sub_1A077CA94(0x200000, a1, @"On Demand Chats", v2);
  sub_1A077CA94(0x400000, a1, @"Precache Recent Chats", v2);
  sub_1A077CA94(0x2000000, a1, @"Precache Very Recent Chats", v2);
  sub_1A077CA94(0x800000, a1, @"OneTimeCode", v2);
  sub_1A077CA94(0x1000000, a1, @"Skip Last Message", v2);
  sub_1A077CA94(0x4000000, a1, @"Blackhole Chats", v2);
  sub_1A077CA94(0x8000000, a1, @"Send Emergency Messages", v2);
  sub_1A077CA94(0x10000000, a1, @"File Provider", v2);
  sub_1A077CA94(0x20000000, a1, @"Synced Settings", v2);
  sub_1A077CA94(0x40000000, a1, @"Cloud Sync", v2);
  sub_1A077CA94(0x100000000, a1, @"Remote Connection", v2);
  [v2 appendString:@""]);

  return v2;
}

id IMSHA1HashFromStrings(void *a1)
{
  id v1 = [a1 sortedArrayUsingSelector:sel_compare_];
  uint64_t v2 = [v1 componentsJoinedByString:@","];
  id v3 = [v2 dataUsingEncoding:4];
  id v4 = [v3 SHA1HexString];

  return v4;
}

uint64_t IMAdditionalChatRegistryLoggingEnabled()
{
  if (objc_msgSend((id)objc_msgSend(MEMORY[0x1E4F6C360], "sharedInstance"), "isInternalInstall")
    && qword_1EB4A6198 != -1)
  {
    dispatch_once(&qword_1EB4A6198, &unk_1EF2C16D8);
  }
  return byte_1E94FF090;
}

uint64_t IMIsRunningInUnitTesting()
{
  if (qword_1EB4A6620 != -1) {
    dispatch_once(&qword_1EB4A6620, &unk_1EF2BE298);
  }
  return byte_1EB4A6418;
}

uint64_t IMAdditionalContactsLoggingEnabled()
{
  if (objc_msgSend((id)objc_msgSend(MEMORY[0x1E4F6C360], "sharedInstance"), "isInternalInstall")
    && qword_1EB4A65B0 != -1)
  {
    dispatch_once(&qword_1EB4A65B0, &unk_1EF2BD7F8);
  }
  return byte_1E94FF3D0;
}

uint64_t IMSharedUtilitiesFrameworkBundle()
{
  if (qword_1E94FF248 != -1) {
    dispatch_once(&qword_1E94FF248, &unk_1EF2C1678);
  }
  return qword_1E94FF250;
}

BOOL IMSharedHelperRetrieveSimDetailsFromTelephony()
{
  return objc_msgSend((id)objc_msgSend(MEMORY[0x1E4F61740], "sharedInstance"), "deviceType") == 2;
}

BOOL sub_1A077AA40(void *a1, uint64_t a2, void *a3)
{
  uint64_t v22 = *MEMORY[0x1E4F143B8];
  uint64_t v17 = 0;
  char v18 = &v17;
  uint64_t v19 = 0x2020000000;
  char v20 = 0;
  long long v13 = 0u;
  long long v14 = 0u;
  long long v15 = 0u;
  long long v16 = 0u;
  id v4 = a3;
  uint64_t v5 = [v4 countByEnumeratingWithState:&v13 objects:v21 count:16];
  if (v5)
  {
    uint64_t v6 = *(void *)v14;
LABEL_3:
    uint64_t v7 = 0;
    while (1)
    {
      if (*(void *)v14 != v6) {
        objc_enumerationMutation(v4);
      }
      uint64_t v8 = *(void *)(*((void *)&v13 + 1) + 8 * v7);
      uint64_t v9 = [a1 length];
      v12[0] = MEMORY[0x1E4F143A8];
      v12[1] = 3221225472;
      v12[2] = sub_1A0775C58;
      v12[3] = &unk_1E5A10628;
      v12[4] = &v17;
      objc_msgSend(a1, "enumerateAttribute:inRange:options:usingBlock:", v8, 0, v9, 0, v12);
      if (*((unsigned char *)v18 + 24)) {
        break;
      }
      if (v5 == ++v7)
      {
        uint64_t v5 = [v4 countByEnumeratingWithState:&v13 objects:v21 count:16];
        if (v5) {
          goto LABEL_3;
        }
        break;
      }
    }
  }

  BOOL v10 = *((unsigned char *)v18 + 24) != 0;
  _Block_object_dispose(&v17, 8);

  return v10;
}

void sub_1A077ABFC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1A077AC38(uint64_t a1, void *a2)
{
  id v2 = a2;
  id v3 = [v2 entitlements];
  id v4 = [v3 objectForKey:@"com.apple.developer.shared-with-you" ofClass:objc_opt_class()];

  uint64_t v5 = [v2 entitlements];

  uint64_t v6 = [v5 objectForKey:@"com.apple.developer.shared-with-you.collaboration" ofClass:objc_opt_class()];

  if ([v4 BOOLValue]) {
    uint64_t v7 = 1;
  }
  else {
    uint64_t v7 = [v6 BOOLValue];
  }

  return v7;
}

uint64_t sub_1A077B45C(void *a1)
{
  if (![a1 length]) {
    return 0;
  }
  uint64_t v7 = 0;
  uint64_t v8 = &v7;
  uint64_t v9 = 0x2020000000;
  uint64_t v10 = 0;
  uint64_t v2 = [a1 length];
  uint64_t v3 = *MEMORY[0x1E4F6C1F8];
  v6[0] = MEMORY[0x1E4F143A8];
  v6[1] = 3221225472;
  v6[2] = sub_1A0776FF8;
  v6[3] = &unk_1E5A10588;
  v6[4] = &v7;
  objc_msgSend(a1, "enumerateAttribute:inRange:options:usingBlock:", v3, 0, v2, 0, v6);
  uint64_t v4 = v8[3];
  _Block_object_dispose(&v7, 8);
  return v4;
}

void sub_1A077B538(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t IMSharedHelperGroupHashForHandleIDs(void *a1)
{
  id v1 = objc_msgSend((id)objc_msgSend((id)objc_msgSend(a1, "sortedArrayUsingSelector:", sel_caseInsensitiveCompare_), "componentsJoinedByString:", @","), "dataUsingEncoding:", 4);

  return [v1 SHA1HexString];
}

void sub_1A077CA94(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  id v9 = a3;
  id v7 = a4;
  uint64_t v8 = v7;
  if ((a2 & a1) != 0)
  {
    if ((unint64_t)[v7 length] >= 2) {
      [v8 appendString:@", "];
    }
    [v8 appendString:v9];
  }
}

uint64_t IMIsRunningInMobileSMS()
{
  if (qword_1EB4A65C0 != -1) {
    dispatch_once(&qword_1EB4A65C0, &unk_1EF2C16F8);
  }
  return byte_1EB4A6310;
}

const void *IMLogHandleForCategory(const void *a1)
{
  if (qword_1EB4A64A0 != -1) {
    dispatch_once(&qword_1EB4A64A0, &unk_1EF2BFBE0);
  }
  pthread_mutex_lock(&stru_1EB4A6460);
  Value = CFDictionaryGetValue((CFDictionaryRef)qword_1EB4A64A8, a1);
  if (!Value)
  {
    Value = os_log_create((const char *)IMMessagesLoggingSubSystem, (const char *)a1);
    CFDictionarySetValue((CFMutableDictionaryRef)qword_1EB4A64A8, a1, Value);
  }
  pthread_mutex_unlock(&stru_1EB4A6460);
  return Value;
}

uint64_t IMIsRunningInSafariSandboxBroker()
{
  if (qword_1EB4A6438 != -1) {
    dispatch_once(&qword_1EB4A6438, &unk_1EF2C15D8);
  }
  return byte_1E94FF318;
}

uint64_t IMIsRunningInSafari()
{
  if (qword_1EB4A6430 != -1) {
    dispatch_once(&qword_1EB4A6430, &unk_1EF2BE1F8);
  }
  return byte_1E94FF2C0;
}

uint64_t IMIsRunningInSOSBuddy()
{
  if (qword_1EB4A6428 != -1) {
    dispatch_once(&qword_1EB4A6428, &unk_1EF2C15F8);
  }
  return byte_1E94FF320;
}

uint64_t IMIsRunningInFaceTime()
{
  if (qword_1EB4A6420 != -1) {
    dispatch_once(&qword_1EB4A6420, &unk_1EF2C15B8);
  }
  return byte_1E94FF340;
}

uint64_t IMIsRunningInIDSAccountCapableClient()
{
  if (qword_1E94FF2A0 != -1) {
    dispatch_once(&qword_1E94FF2A0, &unk_1EF2C1838);
  }
  return byte_1E94FF0FB;
}

BOOL IMSharedHelperDeviceIsiPad()
{
  return MGGetSInt32Answer() == 3;
}

uint64_t IMIsRunningInMessagesUIProcess()
{
  if (qword_1EB4A6038 != -1) {
    dispatch_once(&qword_1EB4A6038, &unk_1EF2C1558);
  }
  return byte_1EB4A5EA0;
}

uint64_t IMIsRunningInIMDPersistenceAgent()
{
  if (qword_1EB4A65B8 != -1) {
    dispatch_once(&qword_1EB4A65B8, &unk_1EF2C1738);
  }
  return byte_1E94FF2E8;
}

uint64_t IMWorkoutUTITypes()
{
  v1[1] = *MEMORY[0x1E4F143B8];
  v1[0] = (id)UTTypeCreatePreferredIdentifierForTag((CFStringRef)*MEMORY[0x1E4F224F8], @"workout", 0);
  return [MEMORY[0x1E4F1C978] arrayWithObjects:v1 count:1];
}

uint64_t IMPreviewGeneratorClasses()
{
  v4[10] = *MEMORY[0x1E4F143B8];
  int v0 = MGGetBoolAnswer();
  v4[0] = objc_opt_class();
  v4[1] = objc_opt_class();
  v4[2] = objc_opt_class();
  v4[3] = objc_opt_class();
  v4[4] = objc_opt_class();
  v4[5] = objc_opt_class();
  v4[6] = objc_opt_class();
  v4[7] = objc_opt_class();
  v4[8] = objc_opt_class();
  v4[9] = objc_opt_class();
  id v1 = (void *)[MEMORY[0x1E4F1C978] arrayWithObjects:v4 count:10];
  if (v0)
  {
    v3[0] = objc_opt_class();
    v3[1] = objc_opt_class();
    return objc_msgSend(v1, "arrayByAddingObjectsFromArray:", objc_msgSend(MEMORY[0x1E4F1C978], "arrayWithObjects:count:", v3, 2));
  }
  return (uint64_t)v1;
}

uint64_t IMIsRunningInImagent()
{
  if (qword_1EB4A6230 != -1) {
    dispatch_once(&qword_1EB4A6230, &unk_1EF2C1718);
  }
  return byte_1EB4A5F78;
}

uint64_t sub_1A077D51C(uint64_t a1, void *a2)
{
  uint64_t v4 = (void *)[a2 UTITypes];
  v7[0] = MEMORY[0x1E4F143A8];
  v7[1] = 3221225472;
  v7[2] = sub_1A0777DE0;
  v7[3] = &unk_1E5A10AB8;
  uint64_t v5 = *(void *)(a1 + 40);
  v7[4] = *(void *)(a1 + 32);
  v7[5] = a2;
  v7[6] = v5;
  return [v4 enumerateObjectsUsingBlock:v7];
}

uint64_t IMIsStringStewieRoadside(void *a1, const char *a2)
{
  return [a1 hasPrefix:@"stewie:roadside"];
}

uint64_t IMSharedHelperContactsBasedMergingEnabled()
{
  if (qword_1EB4A6168 != -1) {
    dispatch_once(&qword_1EB4A6168, &unk_1EF2C1758);
  }
  return byte_1E94F7631;
}

void sub_1A077D61C(void *a1, uint64_t a2, void *a3, void *a4)
{
  id v6 = a3;
  id v7 = a4;
  uint64_t v8 = [a1 length];
  uint64_t v9 = *MEMORY[0x1E4F6C188];
  v12[0] = MEMORY[0x1E4F143A8];
  v12[1] = 3221225472;
  v12[2] = sub_1A077E3A0;
  v12[3] = &unk_1E5A12410;
  id v13 = v6;
  id v14 = v7;
  id v10 = v7;
  id v11 = v6;
  objc_msgSend(a1, "enumerateAttribute:inRange:options:usingBlock:", v9, 0, v8, 0, v12);
}

BOOL sub_1A077D838()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR___IMUnlockMonitor_state);
  swift_getKeyPath();
  swift_retain();
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v1 + 20));
  sub_1A077D8F8((unsigned __int8 *)(v1 + 16), &v4);
  os_unfair_lock_unlock((os_unfair_lock_t)(v1 + 20));
  char v2 = v4;
  swift_release();
  swift_release_n();
  return (v2 & 1) == 0;
}

uint64_t sub_1A077D8F8@<X0>(unsigned __int8 *a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1A077D910(a1, a2);
}

uint64_t sub_1A077D910@<X0>(unsigned __int8 *a1@<X0>, unsigned char *a2@<X8>)
{
  if (a1[2]) {
    int v4 = 0x10000;
  }
  else {
    int v4 = 0;
  }
  if (a1[1]) {
    int v5 = 256;
  }
  else {
    int v5 = 0;
  }
  uint64_t result = (*(uint64_t (**)(void))(v2 + 16))(v5 | *a1 | v4);
  *a2 = result & 1;
  return result;
}

uint64_t sub_1A077D980()
{
  swift_getAtKeyPath();
  return v1;
}

id ProtectiveQueue.underlyingQueue.getter()
{
  return *(id *)(v0 + 16);
}

uint64_t IMSharedHelperAreObjectsLogicallySame(void *a1, void *a2)
{
  if (a1 == a2) {
    return 1;
  }
  if ((a1 || !a2) && (!a1 || a2)) {
    return [a1 isEqual:a2];
  }
  return 0;
}

uint64_t sub_1A077DA28(uint64_t a1)
{
  unsigned __int8 v1 = *(void (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  v1(v2);

  return swift_release();
}

uint64_t sub_1A077DA70()
{
  return sub_1A077DA90(*(void (**)(uint64_t))(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_1A077DA90(void (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a3 + *(void *)(*(void *)a3 + 96);
  swift_beginAccess();
  a1(v4);
  return swift_endAccess();
}

void sub_1A077DF90(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id obj)
{
}

void sub_1A077E018(void *a1)
{
  objc_begin_catch(a1);
  uint64_t v3 = *(void **)(v1 + 32);
  *(void *)(v1 + 32) = 0;

  *(unsigned char *)(v2 + 1880) = 0;
  objc_exception_rethrow();
}

void sub_1A077E034(_Unwind_Exception *a1)
{
}

__CFString *IMTextStyleAttributeNameFromStyle(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) > 7) {
    return 0;
  }
  else {
    return off_1E5A12858[a1 - 1];
  }
}

uint64_t sub_1A077E06C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1A077E07C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1A077E08C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1A077E09C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1A077E0AC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1A077E0BC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1A077E0CC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1A077E0DC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1A077E0EC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1A077E0FC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1A077E128(void *a1, uint64_t a2, void *a3, unsigned char *a4, void *a5)
{
  uint64_t v26 = *MEMORY[0x1E4F143B8];
  id v8 = a3;
  *a4 = 0;
  uint64_t v9 = [MEMORY[0x1E4F1CB10] fileURLWithPath:v8];
  id v10 = [v9 path];
  LOBYTE(a1) = [a1 fileExistsAtPath:v10];

  if (a1)
  {
    id v21 = 0;
    uint64_t v11 = *MEMORY[0x1E4F1C630];
    id v20 = 0;
    char v12 = [v9 getResourceValue:&v21 forKey:v11 error:&v20];
    id v13 = v21;
    id v14 = v20;
    if (v12)
    {
      if (v13) {
        *a4 = [v13 BOOLValue];
      }
      uint64_t v15 = 1;
      goto LABEL_14;
    }
  }
  else
  {
    id v14 = [MEMORY[0x1E4F28C58] errorWithDomain:*MEMORY[0x1E4F281F8] code:4 userInfo:0];
    id v13 = 0;
  }
  if (a5) {
    *a5 = v14;
  }
  if (IMOSLoggingEnabled())
  {
    long long v16 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v16, OS_LOG_TYPE_INFO))
    {
      id v17 = [v9 path];
      char v18 = [v14 localizedDescription];
      *(_DWORD *)buf = 138412546;
      id v23 = v17;
      __int16 v24 = 2112;
      v25 = v18;
      _os_log_impl(&dword_1A0772000, v16, OS_LOG_TYPE_INFO, "Failed to get iCloudBackupAttribute '%@'. Error = '%@'", buf, 0x16u);
    }
  }
  uint64_t v15 = 0;
LABEL_14:

  return v15;
}

void sub_1A077E3A0(uint64_t a1, void *a2, unint64_t a3, uint64_t a4)
{
  id v7 = a2;
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    id v8 = (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
    if ([v8 isAdaptiveImageGlyph]) {
      BOOL v9 = a3 >= a3 + a4;
    }
    else {
      BOOL v9 = 1;
    }
    if (!v9)
    {
      do
      {
        (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
        ++a3;
        --a4;
      }
      while (a4);
    }
  }
}

uint64_t sub_1A077E484()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 72);
  uint64_t v3 = *v0;
  swift_task_dealloc();
  sub_1A077E634(v2);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 64) = v4;
  void *v4 = v3;
  v4[1] = sub_1A077F190;
  uint64_t v5 = *(void *)(v1 + 40);
  return MEMORY[0x1F4187D58](v1 + 16, 0, 0, v5);
}

uint64_t sub_1A077E634(uint64_t result)
{
  if (result) {
    return swift_release();
  }
  return result;
}

void sub_1A077E644(void *a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  uint64_t v5 = [a1 length];
  if (v4)
  {
    if (v5)
    {
      uint64_t v6 = objc_msgSend(a1, "__im_countMessageParts");
      if (v6)
      {
        uint64_t v7 = v6;
        uint64_t v8 = *MEMORY[0x1E4F6C1F8];
        uint64_t v9 = [a1 length];
        v10[0] = MEMORY[0x1E4F143A8];
        v10[1] = 3221225472;
        v10[2] = sub_1A0789348;
        v10[3] = &unk_1E5A10600;
        v10[4] = a1;
        uint64_t v12 = v7;
        id v11 = v4;
        objc_msgSend(a1, "enumerateAttribute:inRange:options:usingBlock:", v8, 0, v9, 0, v10);
      }
    }
  }
}

uint64_t sub_1A077E904(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void (**)(uint64_t, uint64_t))(a1 + 32);
  swift_retain();
  v5(a2, a3);

  return swift_release();
}

void sub_1A077E964(uint64_t a1, uint64_t a2)
{
  sub_1A077E990(a1, a2, v2, &OBJC_IVAR___IMServiceAvailabilityMonitor_mmsEnabled, "MMS Enabled State Changed from %s to %s");
}

void sub_1A077E990(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, char *a5)
{
  uint64_t v8 = a3 + 16;
  swift_beginAccess();
  uint64_t v9 = (unsigned __int8 *)MEMORY[0x1A6228D10](v8);
  if (v9)
  {
    int v10 = v9[*a4];
  }
  else
  {
    int v10 = 2;
  }
  swift_beginAccess();
  id v11 = (unsigned char *)MEMORY[0x1A6228D10](v8);
  if (v11)
  {
    v11[*a4] = a2 != 0;
  }
  swift_beginAccess();
  uint64_t v12 = (unsigned __int8 *)MEMORY[0x1A6228D10](v8);
  if (!v12)
  {
    if (v10 == 2) {
      return;
    }
    goto LABEL_12;
  }
  int v13 = v12[*a4];

  if (v10 != 2)
  {
    if (v13 == (v10 != 0)) {
      return;
    }
LABEL_12:
    int v14 = 0;
    goto LABEL_13;
  }
  int v14 = 1;
LABEL_13:
  if (qword_1E94F8580 != -1) {
    swift_once();
  }
  uint64_t v15 = sub_1A09F39E8();
  sub_1A078510C(v15, (uint64_t)qword_1E94FBA00);
  swift_retain_n();
  long long v16 = sub_1A09F39C8();
  os_log_type_t v17 = sub_1A09F4388();
  if (os_log_type_enabled(v16, v17))
  {
    format = a5;
    uint64_t v18 = 0x3E6C696E3CLL;
    uint64_t v19 = swift_slowAlloc();
    uint64_t v27 = swift_slowAlloc();
    uint64_t v29 = v27;
    *(_DWORD *)uint64_t v19 = 136315394;
    uint64_t v20 = 20302;
    if (v10) {
      uint64_t v20 = 5457241;
    }
    unint64_t v21 = 0xE300000000000000;
    if ((v10 & 1) == 0) {
      unint64_t v21 = 0xE200000000000000;
    }
    if (v14) {
      uint64_t v22 = 0x3E6C696E3CLL;
    }
    else {
      uint64_t v22 = v20;
    }
    unint64_t v23 = 0xE500000000000000;
    if (v14) {
      unint64_t v24 = 0xE500000000000000;
    }
    else {
      unint64_t v24 = v21;
    }
    sub_1A0785144(v22, v24, &v29);
    sub_1A09F4528();
    swift_bridgeObjectRelease();
    *(_WORD *)(v19 + 12) = 2080;
    swift_beginAccess();
    v25 = (unsigned __int8 *)MEMORY[0x1A6228D10](v8);
    if (v25)
    {
      int v26 = v25[*a4];

      if (v26) {
        uint64_t v18 = 5457241;
      }
      else {
        uint64_t v18 = 20302;
      }
      if (v26) {
        unint64_t v23 = 0xE300000000000000;
      }
      else {
        unint64_t v23 = 0xE200000000000000;
      }
    }
    sub_1A0785144(v18, v23, &v29);
    sub_1A09F4528();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A0772000, v16, v17, format, (uint8_t *)v19, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1A6228C20](v27, -1, -1);
    MEMORY[0x1A6228C20](v19, -1, -1);
  }
  else
  {

    swift_release_n();
  }
}

uint64_t sub_1A077ECD0(uint64_t a1)
{
  id v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1A077EE54;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_1E94F9958 + dword_1E94F9958);
  return v6(a1, v4);
}

uint64_t sub_1A077ED88(uint64_t a1, int *a2)
{
  uint64_t v5 = (uint64_t (*)(void))((char *)a2 + *a2);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v3;
  *uint64_t v3 = v2;
  v3[1] = sub_1A077EE54;
  return v5();
}

uint64_t sub_1A077EE58()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t type metadata accessor for RemoteIntentBroadcastCenter()
{
  uint64_t result = qword_1E94F75A0;
  if (!qword_1E94F75A0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t static RemoteIntentBroadcastCenter.shared.getter()
{
  if (qword_1E94F7598 != -1) {
    swift_once();
  }

  return swift_retain();
}

uint64_t dispatch thunk of RemoteIntentBroadcastCenter.hasObserver.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 248))();
}

uint64_t sub_1A077F018()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC17IMSharedUtilities27RemoteIntentBroadcastCenter_hasObserver);
  swift_beginAccess();
  return *v1;
}

uint64_t sub_1A077F060()
{
  uint64_t v1 = (int *)v0[2];
  v0[9] = v1;
  if (v1)
  {
    v0[10] = v0[3];
    uint64_t v5 = (uint64_t (*)(void))((char *)v1 + *v1);
    uint64_t v2 = (void *)swift_task_alloc();
    v0[11] = v2;
    void *v2 = v0;
    v2[1] = sub_1A077E484;
    return v5();
  }
  else
  {
    (*(void (**)(void, void))(v0[6] + 8))(v0[7], v0[5]);
    swift_task_dealloc();
    uint64_t v4 = (uint64_t (*)(void))v0[1];
    return v4();
  }
}

uint64_t sub_1A077F190()
{
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1A077F060, 0, 0);
}

char *ProtectiveQueue.init(label:qos:attributes:autoreleaseFrequency:target:initialState:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = v7;
  uint64_t v28 = a2;
  uint64_t v29 = a6;
  uint64_t v23 = a4;
  uint64_t v25 = a3;
  uint64_t v27 = a1;
  uint64_t v30 = *(void *)v8;
  uint64_t v31 = a7;
  unint64_t v26 = sub_1A077F58C();
  uint64_t v24 = sub_1A09F3A68();
  uint64_t v12 = *(void *)(v24 - 8);
  MEMORY[0x1F4188790](v24);
  (*(void (**)(char *, uint64_t))(v12 + 16))((char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), a3);
  uint64_t v14 = sub_1A09F43C8();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))((char *)&v22 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0), a4, v14);
  uint64_t v17 = sub_1A09F43D8();
  uint64_t v18 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17);
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))((char *)&v22 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0), a5, v17);
  uint64_t v20 = sub_1A09F4428();
  (*(void (**)(uint64_t, uint64_t))(v18 + 8))(a5, v17);
  (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v23, v14);
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v25, v24);
  *((void *)v8 + 2) = v20;
  (*(void (**)(char *, uint64_t))(*(void *)(*(void *)(v30 + 80) - 8) + 32))(&v8[*(void *)(*(void *)v8 + 96)], v31);
  return v8;
}

unint64_t sub_1A077F58C()
{
  unint64_t result = qword_1EB4A5CC0;
  if (!qword_1EB4A5CC0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EB4A5CC0);
  }
  return result;
}

void sub_1A077FD4C(_Unwind_Exception *exc_buf, int a2)
{
  if (a2 == 1)
  {
    objc_begin_catch(exc_buf);
    objc_end_catch();
    JUMPOUT(0x1A077FD40);
  }
  objc_end_catch();
  _Unwind_Resume(exc_buf);
}

uint64_t sub_1A077FE00()
{
  swift_release();
  swift_release();

  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_1A077FE40()
{
  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 88, 7);
}

uint64_t sub_1A077FE98()
{
  swift_unknownObjectRelease();
  _s17IMSharedUtilities29RemoteIntentBroadcastEncodingVwxx_0(v0 + 32);

  return MEMORY[0x1F4186498](v0, 72, 7);
}

uint64_t sub_1A077FED8()
{
  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();
  swift_release();

  return MEMORY[0x1F4186498](v0, 72, 7);
}

uint64_t sub_1A077FF28()
{
  swift_unknownObjectRelease();

  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_1A077FF68()
{
  uint64_t v1 = sub_1A09F33A8();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  swift_unknownObjectRelease();

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, v6, v5);
}

uint64_t sub_1A078005C(void (*a1)(void))
{
  swift_unknownObjectRelease();
  a1(*(void *)(v1 + 32));

  return MEMORY[0x1F4186498](v1, 40, 7);
}

uint64_t sub_1A07800AC()
{
  return swift_release();
}

uint64_t sub_1A07800B4()
{
  return swift_release();
}

uint64_t sub_1A07800BC()
{
  return swift_release();
}

uint64_t sub_1A07800C4()
{
  return swift_release();
}

uint64_t sub_1A07800CC()
{
  return swift_release();
}

uint64_t sub_1A07800D4()
{
  return swift_release();
}

uint64_t sub_1A07800DC()
{
  return swift_release();
}

uint64_t sub_1A07800E4()
{
  return swift_release();
}

uint64_t sub_1A07800EC()
{
  return swift_release();
}

uint64_t sub_1A07800F4()
{
  return swift_release();
}

uint64_t sub_1A0780100()
{
  return swift_getGenericMetadata();
}

id sub_1A0780130(void *a1, void **a2)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v3 = *a2;

  return v3;
}

unsigned char *sub_1A078017C(unsigned char *result, char a2)
{
  *unint64_t result = a2;
  return result;
}

ValueMetadata *type metadata accessor for MessagesTip()
{
  return &type metadata for MessagesTip;
}

unint64_t MessagesTip.identifier.getter()
{
  unint64_t result = 0xD000000000000025;
  switch(*v0)
  {
    case 1:
    case 3:
    case 6:
      unint64_t result = 0xD00000000000001DLL;
      break;
    case 2:
      unint64_t result = 0xD00000000000001FLL;
      break;
    case 4:
      unint64_t result = 0xD00000000000001BLL;
      break;
    case 5:
      unint64_t result = 0xD000000000000019;
      break;
    case 7:
      unint64_t result = 0xD000000000000027;
      break;
    case 8:
      unint64_t result = 0xD000000000000029;
      break;
    case 9:
      unint64_t result = 0xD00000000000002ALL;
      break;
    default:
      return result;
  }
  return result;
}

char *sub_1A078088C()
{
  *(void *)&v0[OBJC_IVAR___IMUnlockMonitor_keybagChangeIOKitToken] = 0;
  *(_DWORD *)&v0[OBJC_IVAR___IMUnlockMonitor_firstKeybagUnlockToken] = -1;
  *(_DWORD *)&v0[OBJC_IVAR___IMUnlockMonitor_keybagChangeToken] = -1;
  *(_DWORD *)&v0[OBJC_IVAR___IMUnlockMonitor_sbLockChangeToken] = -1;
  uint64_t v1 = v0;
  int v2 = MKBDeviceUnlockedSinceBoot();
  BOOL v3 = v2 > 0;
  v1[OBJC_IVAR___IMUnlockMonitor_initializedBeforeFirstUnlock] = v2 < 1;
  int v4 = MKBGetDeviceLockState();
  if (v4) {
    BOOL v5 = v4 == 3;
  }
  else {
    BOOL v5 = 1;
  }
  char v6 = !v5;
  sub_1A07856F8((uint64_t *)&unk_1EB4A59F0);
  uint64_t v7 = swift_allocObject();
  *(_DWORD *)(v7 + 20) = 0;
  *(unsigned char *)(v7 + 16) = v3;
  *(unsigned char *)(v7 + 17) = 0;
  *(unsigned char *)(v7 + 18) = v6;
  *(void *)&v1[OBJC_IVAR___IMUnlockMonitor_state] = v7;
  id v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1CA80]), sel_init);
  sub_1A07856F8(&qword_1EB4A59E8);
  uint64_t v9 = swift_allocObject();
  *(_DWORD *)(v9 + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = 0;
  *(void *)(v9 + 16) = v8;
  *(void *)&v1[OBJC_IVAR___IMUnlockMonitor_listeners] = v9;

  v32.receiver = v1;
  v32.super_class = (Class)IMUnlockMonitor;
  id v10 = objc_msgSendSuper2(&v32, sel_init);
  uint64_t v11 = qword_1EB4A59D0;
  id v12 = v10;
  if (v11 != -1) {
    swift_once();
  }
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = v12;
  uint64_t v30 = sub_1A0954F60;
  uint64_t v31 = v13;
  uint64_t v26 = MEMORY[0x1E4F143A8];
  uint64_t v27 = 1107296256;
  uint64_t v28 = sub_1A077E904;
  uint64_t v29 = &unk_1EF2C0E98;
  uint64_t v14 = _Block_copy(&v26);
  uint64_t v15 = (char *)v12;
  swift_release();
  int v16 = IMDispatchForNotify();
  _Block_release(v14);
  *(_DWORD *)&v15[OBJC_IVAR___IMUnlockMonitor_firstKeybagUnlockToken] = v16;
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = v15;
  uint64_t v30 = sub_1A0954F68;
  uint64_t v31 = v17;
  uint64_t v26 = MEMORY[0x1E4F143A8];
  uint64_t v27 = 1107296256;
  uint64_t v28 = sub_1A077E904;
  uint64_t v29 = &unk_1EF2C0F88;
  uint64_t v18 = _Block_copy(&v26);
  uint64_t v19 = v15;
  swift_release();
  int v20 = IMDispatchForNotify();
  _Block_release(v18);
  *(_DWORD *)&v19[OBJC_IVAR___IMUnlockMonitor_keybagChangeToken] = v20;
  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = v19;
  uint64_t v30 = sub_1A0954FB0;
  uint64_t v31 = v21;
  uint64_t v26 = MEMORY[0x1E4F143A8];
  uint64_t v27 = 1107296256;
  uint64_t v28 = sub_1A077E904;
  uint64_t v29 = &unk_1EF2BE620;
  uint64_t v22 = _Block_copy(&v26);
  uint64_t v23 = v19;
  swift_release();
  int v24 = IMDispatchForNotify();

  _Block_release(v22);
  *(_DWORD *)&v23[OBJC_IVAR___IMUnlockMonitor_sbLockChangeToken] = v24;
  return v23;
}

char *sub_1A0780C4C()
{
  uint64_t v38 = OBJC_IVAR____TtC17IMSharedUtilitiesP33_CDA2CBCEBC7ECDABD170E61A465583F135IMCTRCSUtilitiesManagerLiveDelegate_queue;
  id v37 = v0;
  uint64_t v1 = MEMORY[0x1E4FBC860];
  unint64_t v35 = sub_1A079259C(MEMORY[0x1E4FBC860]);
  uint64_t v33 = sub_1A078231C(0, (unint64_t *)&qword_1EB4A5CC0);
  int v2 = (void *)sub_1A09F43E8();
  id v34 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F23A80]), sel_initWithQueue_, v2);

  type metadata accessor for IMCTRCSUtilitiesManagerLiveDelegate.Token();
  uint64_t v32 = swift_allocObject();
  *(_DWORD *)(v32 + 16) = -1;
  uint64_t v40 = sub_1A09F3A68();
  uint64_t v28 = *(void *)(v40 - 8);
  uint64_t v3 = v28;
  uint64_t v4 = *(void *)(v28 + 64);
  MEMORY[0x1F4188790](v40);
  unint64_t v30 = (v4 + 15) & 0xFFFFFFFFFFFFFFF0;
  v39 = (char *)&v27 - v30;
  sub_1A09F3A58();
  uint64_t v5 = sub_1A09F43C8();
  uint64_t v31 = *(void *)(v5 - 8);
  uint64_t v6 = *(void *)(v31 + 64);
  MEMORY[0x1F4188790](v5);
  uint64_t v47 = v1;
  sub_1A07926B4(qword_1EB4A5C38, MEMORY[0x1F41AB0F0]);
  sub_1A07856F8(&qword_1EB4A5C20);
  sub_1A0792508((unint64_t *)&qword_1EB4A5C28, &qword_1EB4A5C20);
  uint64_t v29 = v5;
  sub_1A09F45B8();
  uint64_t v7 = sub_1A09F43D8();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  MEMORY[0x1F4188790](v7);
  unint64_t v27 = (v9 + 15) & 0xFFFFFFFFFFFFFFF0;
  id v10 = (char *)&v27 - v27;
  (*(void (**)(char *, void, uint64_t))(v8 + 104))((char *)&v27 - v27, *MEMORY[0x1E4FBCC50], v7);
  sub_1A07856F8(&qword_1EB4A5A10);
  uint64_t v11 = (void *)swift_allocObject();
  MEMORY[0x1F4188790](v11);
  uint64_t v12 = (*(uint64_t (**)(char *, char *, uint64_t))(v3 + 16))((char *)&v27 - v30, v39, v40);
  MEMORY[0x1F4188790](v12);
  uint64_t v13 = v31;
  uint64_t v14 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = v29;
  uint64_t v16 = (*(uint64_t (**)(char *, char *, uint64_t))(v31 + 16))(v14, v14, v29);
  MEMORY[0x1F4188790](v16);
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))((char *)&v27 - v27, v10, v7);
  uint64_t v17 = sub_1A09F4428();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v14, v15);
  (*(void (**)(char *, uint64_t))(v28 + 8))(v39, v40);
  unint64_t v18 = v35;
  uint64_t v19 = v36;
  v11[2] = v17;
  v11[3] = v18;
  uint64_t v20 = v32;
  v11[4] = v34;
  v11[5] = v20;
  uint64_t v21 = v37;
  *(void *)(v19 + v38) = v11;

  uint64_t v22 = (objc_class *)type metadata accessor for IMCTRCSUtilitiesManagerLiveDelegate();
  v46.receiver = v21;
  v46.super_class = v22;
  uint64_t v23 = (char *)objc_msgSendSuper2(&v46, sel_init);
  uint64_t v24 = *(void *)&v23[OBJC_IVAR____TtC17IMSharedUtilitiesP33_CDA2CBCEBC7ECDABD170E61A465583F135IMCTRCSUtilitiesManagerLiveDelegate_queue];
  v45 = v23;
  v41 = sub_1A07927EC;
  v42 = &v44;
  uint64_t v43 = v24;
  uint64_t v25 = v23;
  swift_retain();
  sub_1A09F4408();
  swift_release();

  return v25;
}

uint64_t ProtectiveQueue.async(execute:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_allocObject();
  v5[2] = a1;
  v5[3] = a2;
  v5[4] = v2;
  aBlock[4] = sub_1A077DA6C;
  aBlock[5] = v5;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A077DA28;
  aBlock[3] = &unk_1EF2C0E20;
  uint64_t v6 = _Block_copy(aBlock);
  uint64_t v7 = sub_1A09F3A68();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790]();
  id v10 = (char *)v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  swift_retain();
  sub_1A09F3A58();
  uint64_t v11 = sub_1A09F3A38();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790]();
  uint64_t v14 = (char *)v16 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16[1] = MEMORY[0x1E4FBC860];
  sub_1A078145C();
  sub_1A07856F8((uint64_t *)&unk_1EB4A5AA0);
  sub_1A0781400();
  sub_1A09F45B8();
  MEMORY[0x1A62265E0](0, v10, v14, v6);
  _Block_release(v6);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return swift_release();
}

unint64_t sub_1A0781400()
{
  unint64_t result = qword_1EB4A5AB0;
  if (!qword_1EB4A5AB0)
  {
    sub_1A078D800((uint64_t *)&unk_1EB4A5AA0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB4A5AB0);
  }
  return result;
}

unint64_t sub_1A078145C()
{
  unint64_t result = qword_1EB4A5A90;
  if (!qword_1EB4A5A90)
  {
    sub_1A09F3A38();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB4A5A90);
  }
  return result;
}

uint64_t AsyncSerialQueue.perform(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_1A07856F8(&qword_1E94F7358);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790]();
  uint64_t v9 = (char *)v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1A07856F8(&qword_1E94F7348);
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790]();
  uint64_t v13 = (char *)v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v3, v6);
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a1;
  *(void *)(v14 + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = a2;
  v16[0] = &unk_1E94F9960;
  v16[1] = v14;
  swift_retain();
  sub_1A09F41D8();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
}

uint64_t sub_1A0781F54()
{
  id v0 = objc_msgSend(self, sel_interfaceWithProtocol_, &unk_1EF32D988);
  sub_1A07856F8((uint64_t *)&unk_1EB4A5BD0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1A0A081A0;
  *(void *)(inited + 32) = sub_1A078231C(0, (unint64_t *)&unk_1EB4A5C08);
  *(void *)(inited + 40) = sub_1A078231C(0, (unint64_t *)&qword_1EB4A5C00);
  sub_1A0782358(inited, (uint64_t)sel_account_chat_style_chatProperties_groupID_chatPersonCentricID_messagesReceived_removed_messagesComingFromStorage_, 6, 0);
  uint64_t result = swift_setDeallocating();
  qword_1EB4A5BB0 = (uint64_t)v0;
  return result;
}

id sub_1A078202C()
{
  id v0 = self;
  id v1 = objc_msgSend(v0, sel_interfaceWithProtocol_, &unk_1EF343EC0);
  sub_1A07856F8((uint64_t *)&unk_1EB4A5BD0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1A0A081A0;
  uint64_t v3 = sub_1A078231C(0, (unint64_t *)&unk_1EB4A5C08);
  *(void *)(inited + 32) = v3;
  *(void *)(inited + 40) = sub_1A078231C(0, &qword_1EB4A5BE0);
  sub_1A0782358(inited, (uint64_t)sel_fetchCollaborationNoticesForChatGUID_reply_, 0, 1);
  swift_setDeallocating();
  uint64_t v4 = swift_initStackObject();
  *(_OWORD *)(v4 + 16) = xmmword_1A0A099E0;
  uint64_t v5 = sub_1A078231C(0, (unint64_t *)&unk_1EB4A5B98);
  *(void *)(v4 + 32) = v5;
  *(void *)(v4 + 40) = v3;
  *(void *)(v4 + 48) = sub_1A078231C(0, (unint64_t *)&unk_1EB4A5BC0);
  sub_1A0782358(v4, (uint64_t)sel_updateMessage_withIndexesOfDeletedItems_withIndexToRangeMapOfDeletedItems_deleteDate_, 2, 0);
  swift_setDeallocating();
  uint64_t v6 = swift_initStackObject();
  *(_OWORD *)(v6 + 16) = xmmword_1A0A099E0;
  *(void *)(v6 + 32) = v5;
  uint64_t v7 = sub_1A078231C(0, &qword_1EB4A5B80);
  *(void *)(v6 + 40) = v7;
  *(void *)(v6 + 48) = sub_1A078231C(0, (unint64_t *)&unk_1EB4A5B70);
  sub_1A0782358(v6, (uint64_t)sel_fetchGroupPhotoPathsForChatsWithGroupIDs_completionHandler_, 0, 1);
  swift_setDeallocating();
  uint64_t v8 = swift_initStackObject();
  *(_OWORD *)(v8 + 16) = xmmword_1A0A081A0;
  *(void *)(v8 + 32) = v3;
  *(void *)(v8 + 40) = sub_1A078231C(0, &qword_1EB4A5A88);
  sub_1A0782358(v8, (uint64_t)sel_simulateMessages_completion_, 0, 0);
  swift_setDeallocating();
  uint64_t v9 = swift_initStackObject();
  *(_OWORD *)(v9 + 16) = xmmword_1A0A099E0;
  *(void *)(v9 + 32) = sub_1A078231C(0, &qword_1EB4A5A80);
  *(void *)(v9 + 40) = v5;
  *(void *)(v9 + 48) = v7;
  sub_1A0782358(v9, (uint64_t)sel_updateChatsUsingMessageGUIDsAndSummaries_, 0, 0);
  swift_setDeallocating();
  id v10 = objc_msgSend(v0, sel_interfaceWithProtocol_, &unk_1EF32ED10);
  objc_msgSend(v1, sel_setInterface_forSelector_argumentIndex_ofReply_, v10, sel_calculateReachabilityWithRequest_responseHandler_, 1, 0);

  return v1;
}

uint64_t sub_1A078231C(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    self;
    uint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

void sub_1A0782358(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = v4;
  sub_1A0782488(a1);
  id v9 = objc_allocWithZone(MEMORY[0x1E4F1CAD0]);
  id v10 = (void *)sub_1A09F4068();
  swift_bridgeObjectRelease();
  id v11 = objc_msgSend(v9, sel_initWithArray_, v10);

  sub_1A09F42A8();
  id v12 = (id)sub_1A09F4298();
  swift_bridgeObjectRelease();
  objc_msgSend(v5, sel_setClasses_forSelector_argumentIndex_ofReply_, v12, a2, a3, a4 & 1);
}

uint64_t sub_1A0782488(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (v1)
  {
    uint64_t v9 = MEMORY[0x1E4FBC860];
    sub_1A07825C4(0, v1, 0);
    uint64_t v4 = a1 + 32;
    uint64_t v2 = v9;
    do
    {
      sub_1A07856F8(&qword_1EB4A5C18);
      swift_dynamicCast();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1A07825C4(0, *(void *)(v2 + 16) + 1, 1);
        uint64_t v2 = v9;
      }
      unint64_t v6 = *(void *)(v2 + 16);
      unint64_t v5 = *(void *)(v2 + 24);
      if (v6 >= v5 >> 1)
      {
        sub_1A07825C4(v5 > 1, v6 + 1, 1);
        uint64_t v2 = v9;
      }
      *(void *)(v2 + 16) = v6 + 1;
      sub_1A07825B4(&v8, (_OWORD *)(v2 + 32 * v6 + 32));
      v4 += 8;
      --v1;
    }
    while (v1);
  }
  return v2;
}

_OWORD *sub_1A07825B4(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t sub_1A07825C4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1A07825E4(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1A07825E4(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1A07856F8(&qword_1EB4A5BE8);
    id v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    id v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8]) {
      memmove(v13, v14, 32 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1A09F47F8();
  __break(1u);
  return result;
}

uint64_t IMSharedHelperDeviceHasMultipleActiveSubscriptions()
{
  if (![+[IMCTSubscriptionUtilities sharedInstance] deviceSupportsMultipleSubscriptions])return 0; {
  id v0 = [+[IMCTSubscriptionUtilities sharedInstance] ctSubscriptionInfo];
  }
  if (!v0) {
    return 0;
  }

  return MEMORY[0x1F4181798](v0, sel___im_onlyHasActiveSlots);
}

uint64_t sub_1A0782B18(void *a1)
{
  id v3 = objc_msgSend(a1, sel_phoneNumber);
  id v4 = objc_msgSend(a1, sel_labelID);
  unsigned int v5 = objc_msgSend(v1, sel_enabledForPhoneNumber_simID_, v3, v4);

  if (!v5) {
    return 0;
  }
  v22[0] = xmmword_1EC350730;
  v22[1] = *(_OWORD *)&off_1EC350740;
  v22[2] = xmmword_1EC350750;
  sub_1A0874ED0((uint64_t)v22);
  unsigned __int8 v6 = sub_1A09274C0();
  sub_1A0874F08((uint64_t)v22);
  if ((v6 & 1) == 0)
  {
    id v12 = objc_msgSend(self, sel_sharedInstance);
    sub_1A0874150((uint64_t)&unk_1EF2BE0F8);
    uint64_t v13 = (void *)sub_1A09F4068();
    swift_bridgeObjectRelease();
    id v14 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithBool_, 0);
    id v15 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithBool_, 0);
    id v16 = objc_msgSend(v12, sel_copyCarrierBundleValueForSubscriptionContext_keyHierarchy_defaultValue_valueIfError_, a1, v13, v14, v15);

    if (v16)
    {
      sub_1A09F4588();
      swift_unknownObjectRelease();
    }
    else
    {
      memset(v19, 0, sizeof(v19));
    }
    sub_1A0784BA0((uint64_t)v19, (uint64_t)v20);
    if (v21)
    {
      sub_1A078231C(0, (unint64_t *)&qword_1EB4A59B8);
      if (swift_dynamicCast())
      {
        id v11 = objc_msgSend(v18, sel_BOOLValue);

        return (uint64_t)v11;
      }
    }
    else
    {
      sub_1A0783C7C((uint64_t)v20);
    }
    return 0;
  }
  if (qword_1EB4A5A50 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_1A09F39E8();
  sub_1A078510C(v7, (uint64_t)qword_1EB4A5A30);
  uint64_t v8 = sub_1A09F39C8();
  os_log_type_t v9 = sub_1A09F4358();
  if (os_log_type_enabled(v8, v9))
  {
    id v10 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v10 = 0;
    _os_log_impl(&dword_1A0772000, v8, v9, "Forcing RBM supported due to override", v10, 2u);
    MEMORY[0x1A6228C20](v10, -1, -1);
  }

  return 1;
}

uint64_t sub_1A0782E18(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v6 = a4;
  if (!a3)
  {
    uint64_t v8 = 0;
    uint64_t v10 = 0;
    if (a4) {
      goto LABEL_3;
    }
LABEL_5:
    uint64_t v11 = 0;
    goto LABEL_6;
  }
  uint64_t v8 = sub_1A09F3E18();
  uint64_t v10 = v9;
  if (!v6) {
    goto LABEL_5;
  }
LABEL_3:
  uint64_t v11 = sub_1A09F3E18();
  uint64_t v6 = v12;
LABEL_6:
  id v13 = a1;
  char v14 = a5(v8, v10, v11, v6);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v14 & 1;
}

id sub_1A0782EC8(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  if (IMSharedHelperRetrieveSimDetailsFromTelephony()
    && (id v7 = objc_msgSend(self, sel_sharedInstance),
        id v8 = objc_msgSend(v7, sel_ctSubscriptionInfo),
        v7,
        v8))
  {
    if (a4) {
      a4 = (void *)sub_1A09F3DE8();
    }
    if (a2) {
      a2 = (void *)sub_1A09F3DE8();
    }
    id v9 = objc_msgSend(v8, sel___im_subscriptionContextOrDefaultForForSimID_phoneNumber_, a4, a2);
  }
  else
  {
    id v9 = 0;
  }
  id v10 = objc_msgSend(v4, sel_enabledForContext_, v9);

  return v10;
}

uint64_t static IMGenerativeModelsAvailabilityProvider.messageSummarizationEnabled()()
{
  if (qword_1E94F76E0 != -1) {
    swift_once();
  }
  int v0 = *(unsigned __int8 *)(qword_1E94F76E8
                          + OBJC_IVAR___IMGenerativeModelsAvailabilityProvider_summarizationModelsAvailable);
  unsigned int v1 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_summarizationUserPreferenceEnabled);
  id v2 = objc_msgSend(self, sel_sharedFeatureFlags);
  unsigned int v3 = objc_msgSend(v2, sel_isInboxSummaryEnabled);

  return v0 & v1 & v3;
}

uint64_t _sSo38IMGenerativeModelsAvailabilityProviderC17IMSharedUtilitiesE34summarizationUserPreferenceEnabledSbyFZ_0()
{
  int v0 = (void *)sub_1A09F3DE8();
  unsigned int v1 = (void *)sub_1A09F3DE8();
  id v2 = (id)IMGetCachedDomainValueForKey();

  if (v2)
  {
    sub_1A09F4588();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v6, 0, sizeof(v6));
  }
  sub_1A0784BA0((uint64_t)v6, (uint64_t)v7);
  if (!v8)
  {
    sub_1A0783C7C((uint64_t)v7);
    return 1;
  }
  sub_1A078231C(0, (unint64_t *)&qword_1EB4A59B8);
  if ((swift_dynamicCast() & 1) == 0) {
    return 1;
  }
  id v3 = objc_msgSend(v5, sel_BOOLValue);

  return (uint64_t)v3;
}

uint64_t sub_1A0783C7C(uint64_t a1)
{
  uint64_t v2 = sub_1A07856F8(&qword_1EB4A58F0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1A0783D30(void *a1)
{
  id v1 = a1;
  char v2 = sub_1A0783D64();

  return v2 & 1;
}

uint64_t sub_1A0783D64()
{
  id v1 = v0;
  if (qword_1EB4A58B0 != -1) {
    swift_once();
  }
  v12[0] = xmmword_1EB4A58B8;
  v12[1] = unk_1EB4A58C8;
  v12[2] = xmmword_1EB4A58D8;
  uint64_t v13 = qword_1EB4A58E8;
  sub_1A0784928((uint64_t)v12);
  char v2 = sub_1A078497C();
  sub_1A07848D4((uint64_t)v12);
  uint64_t result = (uint64_t)objc_msgSend(v1, sel__stripFZIDPrefix);
  if (result)
  {
    id v4 = (void *)result;
    uint64_t v5 = sub_1A09F3E18();
    uint64_t v7 = v6;

    LOBYTE(v4) = sub_1A078480C(v5, v7, v2);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v4)
    {
      return 1;
    }
    else
    {
      uint64_t v8 = (void *)sub_1A09F3DE8();
      unsigned __int8 v9 = objc_msgSend(v1, sel_containsString_, v8);

      if (v9) {
        return (uint64_t)objc_msgSend(self, sel_IMHandleIsChatBot_, v1);
      }
      id v10 = (void *)sub_1A09F3DE8();
      unsigned int v11 = objc_msgSend(v1, sel_containsString_, v10);

      if (v11) {
        return (uint64_t)objc_msgSend(self, sel_IMHandleIsChatBot_, v1);
      }
      else {
        return 0;
      }
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1A0783F48(uint64_t a1, unint64_t a2)
{
  id v4 = sub_1A07844EC();
  if (!v4) {
    return 0;
  }
  uint64_t v5 = v4;
  if (qword_1E94F7718 != -1) {
LABEL_40:
  }
    swift_once();
  if (byte_1E9522578 == 1)
  {
    if (qword_1E94F7720 != -1) {
      swift_once();
    }
    uint64_t v6 = *(void **)(qword_1E9522580 + OBJC_IVAR____TtC17IMSharedUtilities16IMCTChatBotCache_cache);
    uint64_t result = (uint64_t)objc_msgSend(v5, sel_uri);
    if (!result) {
      goto LABEL_51;
    }
    uint64_t v8 = (void *)result;
    id v9 = objc_msgSend(v6, sel_objectForKey_, result);

    if (v9)
    {
      unint64_t v10 = (unint64_t)objc_msgSend(v9, sel_BOOLValue);

      if (qword_1E94F8570 != -1) {
LABEL_42:
      }
        swift_once();
      uint64_t v11 = sub_1A09F39E8();
      sub_1A078510C(v11, (uint64_t)qword_1E94FB8D8);
      swift_bridgeObjectRetain_n();
      uint64_t v12 = sub_1A09F39C8();
      os_log_type_t v13 = sub_1A09F4358();
      if (os_log_type_enabled(v12, v13))
      {
        uint64_t v14 = swift_slowAlloc();
        uint64_t v15 = swift_slowAlloc();
        uint64_t v33 = v15;
        *(_DWORD *)uint64_t v14 = 136315394;
        swift_bridgeObjectRetain();
        sub_1A0785144(a1, a2, &v33);
        sub_1A09F4528();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v14 + 12) = 1024;
        sub_1A09F4528();
        _os_log_impl(&dword_1A0772000, v12, v13, "%s is a chat bot: %{BOOL}d, from the local chat bot cache", (uint8_t *)v14, 0x12u);
        swift_arrayDestroy();
        MEMORY[0x1A6228C20](v15, -1, -1);
        MEMORY[0x1A6228C20](v14, -1, -1);

LABEL_45:
        return v10;
      }

      swift_bridgeObjectRelease_n();
      return v10;
    }
  }
  uint64_t result = (uint64_t)objc_msgSend(self, sel_sharedInstance);
  if (!result)
  {
    __break(1u);
LABEL_51:
    __break(1u);
    goto LABEL_52;
  }
  id v16 = (void *)result;
  unsigned __int8 v17 = objc_msgSend((id)result, sel_isRBMSupported);

  if ((v17 & 1) == 0
    || (id v18 = objc_msgSend(self, sel_sharedInstance),
        id v19 = objc_msgSend(v18, sel_ctSubscriptionInfo),
        v18,
        !v19))
  {
LABEL_38:

    return 0;
  }
  id v20 = objc_msgSend(v19, sel___im_subscriptionsWithRCSSupport);

  sub_1A078231C(0, (unint64_t *)&unk_1E94F7730);
  unint64_t v21 = sub_1A09F4078();

  if (!(v21 >> 62))
  {
    unint64_t v10 = *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v10) {
      goto LABEL_16;
    }
LABEL_44:
    swift_bridgeObjectRelease();
    goto LABEL_45;
  }
  swift_bridgeObjectRetain();
  unint64_t v10 = sub_1A09F47B8();
  swift_bridgeObjectRelease();
  if (!v10) {
    goto LABEL_44;
  }
LABEL_16:
  if ((v21 & 0xC000000000000001) != 0)
  {
    id v22 = (id)MEMORY[0x1A6226890](0, v21);
LABEL_19:
    uint64_t v23 = v22;
    unsigned __int8 v24 = sub_1A08E6ECC(a1, a2, v22, v5);

    if (v24)
    {
LABEL_28:
      swift_bridgeObjectRelease();
      if ((byte_1E9522578 & 1) == 0)
      {

        return 1;
      }
      unint64_t v10 = 1;
    }
    else
    {
      uint64_t v25 = 0;
      unint64_t v26 = v10 - 1;
      while (v26 != v25)
      {
        unint64_t v10 = v25 + 1;
        if ((v21 & 0xC000000000000001) != 0)
        {
          id v27 = (id)MEMORY[0x1A6226890](v25 + 1, v21);
        }
        else
        {
          if (v10 >= *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
            goto LABEL_42;
          }
          id v27 = *(id *)(v21 + 8 * v25 + 40);
        }
        uint64_t v28 = v27;
        if (__OFADD__(v10, 1))
        {
          __break(1u);
          goto LABEL_40;
        }
        unsigned __int8 v29 = sub_1A08E6ECC(a1, a2, v27, v5);

        ++v25;
        if (v29) {
          goto LABEL_28;
        }
      }
      swift_bridgeObjectRelease();
      if ((byte_1E9522578 & 1) == 0) {
        goto LABEL_38;
      }
      unint64_t v10 = 0;
    }
    if (qword_1E94F7720 == -1) {
      goto LABEL_36;
    }
    goto LABEL_49;
  }
  if (*(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v22 = *(id *)(v21 + 32);
    goto LABEL_19;
  }
  __break(1u);
LABEL_49:
  swift_once();
LABEL_36:
  unint64_t v30 = *(void **)(qword_1E9522580 + OBJC_IVAR____TtC17IMSharedUtilities16IMCTChatBotCache_cache);
  uint64_t v31 = (void *)sub_1A09F40F8();
  uint64_t result = (uint64_t)objc_msgSend(v5, sel_uri);
  if (result)
  {
    uint64_t v32 = (void *)result;
    objc_msgSend(v30, sel_setObject_forKey_, v31, result);

    return v10;
  }
LABEL_52:
  __break(1u);
  return result;
}

id sub_1A07844EC()
{
  id v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F23978]), sel_init);
  id v1 = (void *)sub_1A09F3DE8();
  id v2 = objc_msgSend(v1, sel_im_stripCategoryLabel);

  if (!v2)
  {
    sub_1A09F3E18();
    id v2 = (id)sub_1A09F3DE8();
    swift_bridgeObjectRelease();
  }
  id v3 = objc_msgSend(v2, sel__stripFZIDPrefix);

  if (!v3)
  {

    return 0;
  }
  uint64_t v4 = sub_1A09F3E18();
  uint64_t v6 = HIBYTE(v5) & 0xF;
  if ((v5 & 0x2000000000000000) == 0) {
    uint64_t v6 = v4 & 0xFFFFFFFFFFFFLL;
  }
  if (!v6)
  {
    swift_bridgeObjectRelease();

    return 0;
  }
  objc_msgSend(v0, sel_setUri_, v3);
  if (IMStringIsEmail())
  {
    uint64_t v10 = 980445555;
    sub_1A07857EC();
    if ((sub_1A09F4568() & 1) == 0)
    {

      uint64_t v11 = 980445555;
LABEL_17:
      sub_1A09F3EA8();
      swift_bridgeObjectRelease();
      uint64_t v8 = (void *)sub_1A09F3DE8();
      swift_bridgeObjectRelease();
      objc_msgSend(v0, sel_setUri_, v8, v10, 0xE400000000000000, v11, 0xE400000000000000);

      return v0;
    }
  }
  int v7 = MEMORY[0x1A62278C0](v3);

  if (v7)
  {
    uint64_t v10 = 980182388;
    sub_1A07857EC();
    if ((sub_1A09F4568() & 1) == 0)
    {
      uint64_t v11 = 980182388;
      goto LABEL_17;
    }
  }
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1A0784710(void *a1)
{
  uint64_t v2 = objc_msgSend(a1, "rangeOfString:", @"(");
  if (v2 == 0x7FFFFFFFFFFFFFFFLL) {
    return (uint64_t)a1;
  }
  uint64_t v3 = v2;
  uint64_t v4 = v2 + 1;
  if (v2 + 1 >= (unint64_t)[a1 length]) {
    return (uint64_t)a1;
  }
  unint64_t v5 = (void *)[a1 substringFromIndex:v4];
  uint64_t v6 = [v5 rangeOfString:@""]);
  if (v6 == 0x7FFFFFFFFFFFFFFFLL) {
    return (uint64_t)a1;
  }
  [v5 substringToIndex:v6];
  if (qword_1E94FF478 != -1) {
    dispatch_once(&qword_1E94FF478, &unk_1EF2BF1C0);
  }
  if (!objc_msgSend((id)qword_1E94FF480, "containsObject:")) {
    return (uint64_t)a1;
  }

  return [a1 substringToIndex:v3];
}

uint64_t sub_1A078480C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = a3[2];
  if (!v3) {
    return 0;
  }
  if (a3[4] == a1 && a3[5] == a2) {
    return 1;
  }
  uint64_t result = sub_1A09F4B28();
  if (result) {
    return 1;
  }
  if (v3 == 1) {
    return 0;
  }
  id v9 = a3 + 7;
  for (uint64_t i = 1; ; ++i)
  {
    uint64_t v11 = i + 1;
    if (__OFADD__(i, 1)) {
      break;
    }
    BOOL v12 = *(v9 - 1) == a1 && *v9 == a2;
    if (v12 || (sub_1A09F4B28() & 1) != 0) {
      return 1;
    }
    uint64_t result = 0;
    v9 += 2;
    if (v11 == v3) {
      return result;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1A07848D4(uint64_t a1)
{
  return a1;
}

uint64_t sub_1A0784928(uint64_t a1)
{
  return a1;
}

id sub_1A078497C()
{
  id result = objc_msgSend(self, sel_sharedInstance, *(void *)v0, *(void *)(v0 + 8), *(void *)(v0 + 16), *(void *)(v0 + 24), *(_OWORD *)(v0 + 32), *(void *)(v0 + 48));
  if (result)
  {
    uint64_t v2 = result;
    unsigned int v3 = objc_msgSend(result, sel_isInternalInstall);

    if (v3)
    {
      if (*(unsigned char *)v0) {
        unint64_t v4 = 0xD000000000000013;
      }
      else {
        unint64_t v4 = 0xD000000000000012;
      }
      if (*(unsigned char *)v0) {
        unint64_t v5 = 0x80000001A0A30C80;
      }
      else {
        unint64_t v5 = 0x80000001A0A30C60;
      }
      (*(void (**)(uint64_t *__return_ptr, unint64_t, unint64_t, void, void, long long *))(v0 + 40))(&v7, v4, v5, *(void *)(v0 + 8), *(void *)(v0 + 16), &v6);
      swift_bridgeObjectRelease();
      return (id)v7;
    }
    else
    {
      return (id)swift_bridgeObjectRetain();
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1A0784A78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X4>, uint64_t *a6@<X8>)
{
  uint64_t result = sub_1A0784AA4(a1, a2, a3, a4, *a5);
  *a6 = result;
  return result;
}

uint64_t sub_1A0784AA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  long long v6 = (void *)sub_1A09F3DE8();
  uint64_t v7 = (void *)sub_1A09F3DE8();
  id v8 = (id)IMGetCachedDomainValueForKey();

  if (v8)
  {
    sub_1A09F4588();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v11, 0, sizeof(v11));
  }
  sub_1A0784BA0((uint64_t)v11, (uint64_t)v12);
  if (!v13)
  {
    sub_1A0784C08((uint64_t)v12, &qword_1EB4A58F0);
    goto LABEL_8;
  }
  sub_1A07856F8(&qword_1EB4A5610);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_8:
    swift_bridgeObjectRetain();
    return a5;
  }
  return v10;
}

uint64_t sub_1A0784BA0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1A07856F8(&qword_1EB4A58F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A0784C08(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_1A07856F8(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1A0784C64()
{
  id v0 = +[IMCTRCSUtilitiesManager sharedManager];

  return MEMORY[0x1F4181798](v0, sel_isRBMSupportedForContext_);
}

uint64_t sub_1A0784CA4(void *a1)
{
  v23[3] = *MEMORY[0x1E4F143B8];
  unsigned __int8 v22 = 0;
  if (IMSharedHelperRetrieveSimDetailsFromTelephony())
  {
    if (a1)
    {
      uint64_t v3 = v1 + OBJC_IVAR___IMCTRCSUtilitiesManager_delegate;
      if (MEMORY[0x1A6228D10](v1 + OBJC_IVAR___IMCTRCSUtilitiesManager_delegate))
      {
        uint64_t v4 = *(void *)(v3 + 8);
        swift_getObjectType();
        unint64_t v5 = *(uint64_t (**)(void))(v4 + 24);
        id v6 = a1;
        char v7 = v5();
        swift_unknownObjectRelease();
      }
      else
      {
        char v7 = 0;
      }
      unsigned __int8 v22 = v7 & 1;
    }
    else
    {
      if (qword_1EB4A5A50 != -1) {
        swift_once();
      }
      uint64_t v8 = sub_1A09F39E8();
      sub_1A078510C(v8, (uint64_t)qword_1EB4A5A30);
      id v9 = sub_1A09F39C8();
      os_log_type_t v10 = sub_1A09F4358();
      if (os_log_type_enabled(v9, v10))
      {
        uint64_t v11 = (uint8_t *)swift_slowAlloc();
        uint64_t v12 = swift_slowAlloc();
        v23[0] = v12;
        *(_DWORD *)uint64_t v11 = 136446210;
        sub_1A0785144(0x2864656C62616E65, 0xED0000293A726F66, v23);
        sub_1A09F4528();
        _os_log_impl(&dword_1A0772000, v9, v10, "%{public}s failed to find subscription context.", v11, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1A6228C20](v12, -1, -1);
        MEMORY[0x1A6228C20](v11, -1, -1);
      }
    }
  }
  else
  {
    unsigned __int8 v22 = IMMMSEnabled();
  }
  if (qword_1EB4A5A50 != -1) {
    swift_once();
  }
  uint64_t v13 = sub_1A09F39E8();
  sub_1A078510C(v13, (uint64_t)qword_1EB4A5A30);
  id v14 = a1;
  uint64_t v15 = sub_1A09F39C8();
  os_log_type_t v16 = sub_1A09F4358();
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v17 = swift_slowAlloc();
    id v18 = (void *)swift_slowAlloc();
    uint64_t v19 = swift_slowAlloc();
    v23[0] = v19;
    *(_DWORD *)uint64_t v17 = 136446722;
    sub_1A0785144(0x2864656C62616E65, 0xED0000293A726F66, v23);
    sub_1A09F4528();
    *(_WORD *)(v17 + 12) = 1024;
    sub_1A09F4528();
    *(_WORD *)(v17 + 18) = 2112;
    if (a1) {
      id v20 = v14;
    }
    sub_1A09F4528();
    *id v18 = a1;

    _os_log_impl(&dword_1A0772000, v15, v16, "%{public}s isRCSEnabled %{BOOL}d for subscriptionContext %@", (uint8_t *)v17, 0x1Cu);
    sub_1A07856F8(&qword_1E94F7740);
    swift_arrayDestroy();
    MEMORY[0x1A6228C20](v18, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x1A6228C20](v19, -1, -1);
    MEMORY[0x1A6228C20](v17, -1, -1);
  }
  else
  {
  }
  swift_beginAccess();
  return v22;
}

uint64_t sub_1A078510C(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(*(void *)(a1 - 8) + 82) & 2) != 0) {
    return *(void *)a2;
  }
  return a2;
}

uint64_t sub_1A0785144(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6 = sub_1A07852C4(v12, 0, 0, 1, a1, a2);
  uint64_t v7 = v12[0];
  if (v6)
  {
    uint64_t v8 = v6;
    uint64_t ObjectType = swift_getObjectType();
    v12[0] = v8;
    uint64_t v9 = *a3;
    if (*a3)
    {
      sub_1A0785268((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    uint64_t ObjectType = MEMORY[0x1E4FBB9B0];
    v12[0] = a1;
    v12[1] = a2;
    uint64_t v10 = *a3;
    if (*a3)
    {
      sub_1A0785268((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  _s17IMSharedUtilities29RemoteIntentBroadcastEncodingVwxx_0((uint64_t)v12);
  return v7;
}

uint64_t _s17IMSharedUtilities29RemoteIntentBroadcastEncodingVwxx_0(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t sub_1A0785268(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_1A07852C4(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        uint64_t v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (void *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_1A09F4538();
            uint64_t result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    uint64_t result = sub_1A0785480(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0) {
    goto LABEL_13;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    uint64_t v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  uint64_t v8 = sub_1A09F4728();
  if (!v8)
  {
    sub_1A09F4798();
    __break(1u);
LABEL_17:
    uint64_t result = sub_1A09F47F8();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0) {
    return 0;
  }
  else {
    return swift_unknownObjectRetain();
  }
}

uint64_t sub_1A0785480(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = sub_1A0785518(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_1A0883DF8(0, *(void *)(v2 + 16) + 1, 1, (char *)v2);
  }
  unint64_t v4 = *(void *)(v2 + 16);
  unint64_t v3 = *(void *)(v2 + 24);
  if (v4 >= v3 >> 1) {
    uint64_t v2 = sub_1A0883DF8(v3 > 1, v4 + 1, 1, (char *)v2);
  }
  *(void *)(v2 + 16) = v4 + 1;
  *(unsigned char *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_1A0785518(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0) {
    goto LABEL_10;
  }
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2)
  {
    while (1)
    {
      unint64_t v3 = sub_1A0785690(v2, 0);
      if (v2 < 0) {
        break;
      }
      unint64_t v4 = v3;
      uint64_t v5 = sub_1A09F46B8();
      if (v6) {
        goto LABEL_14;
      }
      if (v5 == v2) {
        return (uint64_t)v4;
      }
      sub_1A09F4798();
      __break(1u);
LABEL_10:
      uint64_t v2 = sub_1A09F3EB8();
      if (!v2) {
        return MEMORY[0x1E4FBC860];
      }
    }
    sub_1A09F47F8();
    __break(1u);
LABEL_14:
    uint64_t result = sub_1A09F4798();
    __break(1u);
  }
  else
  {
    return MEMORY[0x1E4FBC860];
  }
  return result;
}

void *sub_1A0785690(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  sub_1A07856F8((uint64_t *)&unk_1EB4A5A00);
  unint64_t v4 = (void *)swift_allocObject();
  size_t v5 = j__malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_1A07856F8(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContext2();
    *a1 = result;
  }
  return result;
}

unint64_t sub_1A07857EC()
{
  unint64_t result = qword_1E94F7710;
  if (!qword_1E94F7710)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94F7710);
  }
  return result;
}

uint64_t sub_1A0785890(uint64_t a1)
{
  return MEMORY[0x1F4181798](*(void *)(a1 + 32), sel__trackEvent_withCount_);
}

id IMCloudKitGetSyncStateDictionary()
{
  return IMCloudKitGetSyncStateDictionaryWithTestBlock(0);
}

uint64_t IMAllowMessagesIniCloud()
{
  return 1;
}

void sub_1A07858B0(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4) {
      atomic_store(ForeignTypeMetadata, a2);
    }
  }
}

uint64_t IMSyncedSettingsKey.stringValue.getter(uint64_t a1)
{
  switch(a1)
  {
    case 0:
      return 0x654D7065654B5353;
    case 2:
      return 0xD000000000000017;
    case 1:
      return 0xD000000000000011;
  }
  sub_1A09F46A8();
  swift_bridgeObjectRelease();
  uint64_t result = sub_1A09F47A8();
  __break(1u);
  return result;
}

uint64_t IMSyncedSettingsKey.init(stringValue:)(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = 0xEE00736567617373;
  unint64_t v5 = 0x654D7065654B5353;
  uint64_t v6 = qword_1EF2BE008;
  if (qword_1EF2BE008)
  {
    if (qword_1EF2BE008 == 1)
    {
      unint64_t v7 = 0x80000001A0A37670;
      if (a1 != 0xD000000000000011) {
        goto LABEL_11;
      }
    }
    else
    {
      if (qword_1EF2BE008 != 2) {
        goto LABEL_33;
      }
      unint64_t v7 = 0x80000001A0A37650;
      if (a1 != 0xD000000000000017) {
        goto LABEL_11;
      }
    }
  }
  else
  {
    unint64_t v7 = 0xEE00736567617373;
    if (a1 != 0x654D7065654B5353) {
      goto LABEL_11;
    }
  }
  if (v7 == a2) {
    goto LABEL_10;
  }
LABEL_11:
  char v8 = sub_1A09F4B28();
  swift_bridgeObjectRelease();
  if (v8) {
    goto LABEL_12;
  }
  uint64_t v6 = qword_1EF2BE010;
  if (qword_1EF2BE010)
  {
    if (qword_1EF2BE010 == 1)
    {
      unint64_t v10 = 0x80000001A0A37670;
      if (a1 != 0xD000000000000011) {
        goto LABEL_22;
      }
    }
    else
    {
      if (qword_1EF2BE010 != 2) {
        goto LABEL_33;
      }
      unint64_t v10 = 0x80000001A0A37650;
      if (a1 != 0xD000000000000017) {
        goto LABEL_22;
      }
    }
  }
  else
  {
    unint64_t v10 = 0xEE00736567617373;
    if (a1 != 0x654D7065654B5353) {
      goto LABEL_22;
    }
  }
  if (v10 == a2)
  {
LABEL_10:
    swift_bridgeObjectRelease();
LABEL_12:
    swift_bridgeObjectRelease();
    return v6;
  }
LABEL_22:
  char v11 = sub_1A09F4B28();
  swift_bridgeObjectRelease();
  if (v11) {
    goto LABEL_12;
  }
  uint64_t v6 = qword_1EF2BE018;
  switch(qword_1EF2BE018)
  {
    case 0:
      goto LABEL_28;
    case 1:
      unint64_t v4 = 0x80000001A0A37670;
      unint64_t v5 = 0xD000000000000011;
LABEL_28:
      if (v5 != a1 || v4 != a2)
      {
        char v12 = sub_1A09F4B28();
        swift_bridgeObjectRelease();
        if ((v12 & 1) == 0) {
          uint64_t v6 = 0;
        }
        goto LABEL_12;
      }
      goto LABEL_10;
    case 2:
      unint64_t v5 = 0xD000000000000017;
      unint64_t v4 = 0x80000001A0A37650;
      goto LABEL_28;
  }
LABEL_33:
  sub_1A09F46A8();
  swift_bridgeObjectRelease();
  uint64_t result = sub_1A09F47A8();
  __break(1u);
  return result;
}

void type metadata accessor for os_unfair_lock_s(uint64_t a1)
{
}

ValueMetadata *_s5StateVMa_0()
{
  return &_s5StateVN_0;
}

unint64_t static Logger.messagesSubsystem.getter()
{
  return 0xD000000000000012;
}

uint64_t sub_1A0785D94()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for ProtectiveQueue()
{
  return sub_1A0780100();
}

uint64_t MainThreadOnly.valueAssertingIfNotMainThread.setter(uint64_t a1, uint64_t a2)
{
  if (objc_msgSend(self, sel_isMainThread))
  {
    unint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a2 + 16) - 8) + 40);
    return v5(v2, a1);
  }
  else
  {
    uint64_t result = sub_1A09F47A8();
    __break(1u);
  }
  return result;
}

uint64_t MainThreadOnly.valueAssertingIfNotMainThread.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if (objc_msgSend(self, sel_isMainThread))
  {
    unint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16);
    return v5(a2, v2);
  }
  else
  {
    uint64_t result = sub_1A09F47A8();
    __break(1u);
  }
  return result;
}

uint64_t IMTextEffectTypeFromName(void *a1)
{
  id v1 = a1;
  if ([v1 isEqualToString:@"scaleRipple"])
  {
    uint64_t v2 = 1;
  }
  else if ([v1 isEqualToString:@"stretch"])
  {
    uint64_t v2 = 2;
  }
  else if ([v1 isEqualToString:@"squish"])
  {
    uint64_t v2 = 3;
  }
  else if ([v1 isEqualToString:@"bounce"])
  {
    uint64_t v2 = 4;
  }
  else if ([v1 isEqualToString:@"big"])
  {
    uint64_t v2 = 5;
  }
  else if ([v1 isEqualToString:@"bloom"])
  {
    uint64_t v2 = 6;
  }
  else if ([v1 isEqualToString:@"somersault"])
  {
    uint64_t v2 = 7;
  }
  else if ([v1 isEqualToString:@"shakeVertical"])
  {
    uint64_t v2 = 8;
  }
  else if ([v1 isEqualToString:@"shakeHorizontal"])
  {
    uint64_t v2 = 9;
  }
  else if ([v1 isEqualToString:@"jitter"])
  {
    uint64_t v2 = 10;
  }
  else if ([v1 isEqualToString:@"explode"])
  {
    uint64_t v2 = 12;
  }
  else if ([v1 isEqualToString:@"small"])
  {
    uint64_t v2 = 11;
  }
  else
  {
    uint64_t v2 = 0;
  }

  return v2;
}

void sub_1A0787914(_Unwind_Exception *a1, int a2)
{
  if (a2 == 1)
  {
    objc_begin_catch(a1);
    objc_end_catch();
    JUMPOUT(0x1A07871F4);
  }
  _Unwind_Resume(a1);
}

__CFString *sub_1A0787970(void *a1)
{
  id v1 = (void *)[a1 lastPathComponent];
  if ([v1 isEqualToString:@".."]) {
    return &stru_1EF2CAD28;
  }
  else {
    return (__CFString *)v1;
  }
}

uint64_t sub_1A0788318(void *a1, const char *a2)
{
  return [a1 objectForKey:@"amc"];
}

void sub_1A0788380(const char *a1)
{
  id v1 = NSStringFromSelector(a1);
  sub_1A0788404();
  sub_1A0788464(&dword_1A0772000, v2, v3, "adaptiveImageGlyphForPreviewString is a required override in %@", v4, v5, v6, v7, v8);
}

void sub_1A078842C(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 0xCu);
}

void sub_1A0788448(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 2u);
}

void sub_1A0788464(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, v9, OS_LOG_TYPE_ERROR, a4, &a9, 0xCu);
}

void sub_1A07884C8(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_debug_impl(a1, v9, OS_LOG_TYPE_DEBUG, a4, &a9, 0xCu);
}

void sub_1A0788500(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, v9, OS_LOG_TYPE_ERROR, a4, &a9, 0x16u);
}

id sub_1A0788520(void *a1)
{
  id v1 = objc_msgSend(a1, "_dataForKey:");
  if (v1)
  {
    uint64_t v2 = JWDecodeCodableObjectWithStandardAllowlist();
    objc_opt_class();
    if (objc_opt_isKindOfClass())
    {
      id v3 = v2;
    }
    else
    {
      uint64_t v4 = IMLogHandleForCategory("IMAssociatedMessageItem");
      if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR)) {
        sub_1A09EF080(v4);
      }

      id v3 = 0;
    }
  }
  else
  {
    id v3 = 0;
  }

  return v3;
}

uint64_t sub_1A07885E4(void *a1, const char *a2)
{
  return [a1 objectForKey:@"ams"];
}

void sub_1A078891C(uint64_t a1)
{
  id v2 = objc_alloc_init(MEMORY[0x1E4F1CA60]);
  id v3 = objc_alloc_init(MEMORY[0x1E4F1CA60]);
  uint64_t v4 = *(void **)(a1 + 32);
  v5[0] = MEMORY[0x1E4F143A8];
  v5[1] = 3221225472;
  v5[2] = sub_1A077D51C;
  v5[3] = &unk_1E5A10AE0;
  v5[4] = v2;
  v5[5] = v3;
  [v4 enumerateObjectsUsingBlock:v5];
  qword_1EB4A62D8 = [v2 copy];
  qword_1EB4A62E0 = [v3 copy];
}

uint64_t sub_1A0788D44(uint64_t a1)
{
  uint64_t v8 = *MEMORY[0x1E4F143B8];
  id v2 = [MEMORY[0x1E4F1CB18] messagesAppDomain];
  uint64_t v3 = [v2 conversationListFocusFilterActionEnabled];

  if (IMOSLoggingEnabled())
  {
    uint64_t v4 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
    {
      int v6 = 134217984;
      uint64_t v7 = v3;
      _os_log_impl(&dword_1A0772000, v4, OS_LOG_TYPE_INFO, "Received updated value for conversationListFocusFilterActionEnabled: %ld", (uint8_t *)&v6, 0xCu);
    }
  }
  return [*(id *)(a1 + 32) setFocusFilterActionIsEnabled:v3];
}

id sub_1A0788E48()
{
  if (qword_1EB4A61D0 != -1) {
    dispatch_once(&qword_1EB4A61D0, &unk_1EF2BF160);
  }
  id v0 = (void *)qword_1EB4A61C8;

  return v0;
}

id sub_1A0788E9C(void *a1)
{
  id v1 = a1;
  id v2 = (void *)sub_1A09F3DE8();
  id v3 = objc_msgSend(v1, sel_BOOLForKey_, v2);

  return v3;
}

void sub_1A0789348(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  id v9 = a2;
  objc_opt_class();
  if (objc_opt_isKindOfClass()) {
    uint64_t v7 = [v9 unsignedIntegerValue];
  }
  else {
    uint64_t v7 = 0;
  }
  uint64_t v8 = objc_msgSend(*(id *)(a1 + 32), "__im_partDescriptorWithIndex:range:totalPartCount:", v7, a3, a4, *(void *)(a1 + 48));
  (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
}

IMMessagePartDescriptor *sub_1A0789408(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  if (a6 == 1)
  {
    id v9 = a1;
  }
  else
  {
    objc_msgSend(a1, "__im_attributedSubstringFromRange:", a4, a5);
    id v9 = (id)objc_claimAutoreleasedReturnValue();
  }
  uint64_t v10 = v9;
  char v11 = -[IMMessagePartDescriptor initWithMessagePartBody:messagePartIndex:messagePartRange:]([IMMessagePartDescriptor alloc], "initWithMessagePartBody:messagePartIndex:messagePartRange:", v9, a3, a4, a5);

  return v11;
}

void sub_1A078952C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v18 = *MEMORY[0x1E4F143B8];
  id v7 = a2;
  long long v13 = 0u;
  long long v14 = 0u;
  long long v15 = 0u;
  long long v16 = 0u;
  uint64_t v8 = [v7 countByEnumeratingWithState:&v13 objects:v17 count:16];
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)v14;
    do
    {
      for (uint64_t i = 0; i != v9; ++i)
      {
        if (*(void *)v14 != v10) {
          objc_enumerationMutation(v7);
        }
        uint64_t v12 = *(void *)(*((void *)&v13 + 1) + 8 * i);
        if (([*(id *)(a1 + 32) containsObject:v12] & 1) == 0) {
          objc_msgSend(*(id *)(a1 + 40), "removeAttribute:range:", v12, a3, a4);
        }
      }
      uint64_t v9 = [v7 countByEnumeratingWithState:&v13 objects:v17 count:16];
    }
    while (v9);
  }
}

void sub_1A07898BC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1A07899E0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

id IMCloudKitGetSyncStateDictionaryWithTestBlock(void *a1)
{
  uint64_t v18 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  id v2 = v1;
  if (qword_1EB4A5CF8 == -1)
  {
    if (v1) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  dispatch_once(&qword_1EB4A5CF8, &unk_1EF2C0AA0);
  if (!v2) {
LABEL_3:
  }
    id v2 = (void (**)(void *, __CFString *, void))_Block_copy((const void *)qword_1EB4A5CF0);
LABEL_4:
  id v3 = IMCloudKitGetAllSyncStateKeys();
  uint64_t v4 = objc_msgSend(MEMORY[0x1E4F1CA60], "dictionaryWithCapacity:", objc_msgSend(v3, "count"));
  long long v13 = 0u;
  long long v14 = 0u;
  long long v15 = 0u;
  long long v16 = 0u;
  id v5 = v3;
  uint64_t v6 = [v5 countByEnumeratingWithState:&v13 objects:v17 count:16];
  if (v6)
  {
    uint64_t v7 = v6;
    uint64_t v8 = *(void *)v14;
    do
    {
      for (uint64_t i = 0; i != v7; ++i)
      {
        if (*(void *)v14 != v8) {
          objc_enumerationMutation(v5);
        }
        uint64_t v10 = *(void *)(*((void *)&v13 + 1) + 8 * i);
        char v11 = v2[2](v2, @"com.apple.madrid", v10);
        if (v11) {
          objc_msgSend(v4, "setObject:forKey:", v11, v10, (void)v13);
        }
      }
      uint64_t v7 = [v5 countByEnumeratingWithState:&v13 objects:v17 count:16];
    }
    while (v7);
  }

  return v4;
}

uint64_t sub_1A0789D54()
{
  return IMGetCachedDomainValueForKey();
}

id IMCloudKitGetAllSyncStateKeys()
{
  if (qword_1EB4A5CE8 != -1) {
    dispatch_once(&qword_1EB4A5CE8, &unk_1EF2BF100);
  }
  id v0 = (void *)qword_1EB4A5CE0;

  return v0;
}

void sub_1A0789DB4()
{
  uint64_t v4 = *MEMORY[0x1E4F143B8];
  if ((objc_msgSend((id)objc_msgSend((id)objc_msgSend((id)objc_msgSend(MEMORY[0x1E4F28F80], "processInfo"), "environment"), "objectForKeyedSubscript:", @"IMIsRunningInIntegrationTesting"), "isEqualToString:", @"YES") & 1) == 0)
  {
    if (qword_1EB4A6440 != -1) {
      dispatch_once(&qword_1EB4A6440, &unk_1EF2C1858);
    }
    byte_1EB4A6418 = byte_1E94FF1B0;
    if (!byte_1E94FF1B0) {
      byte_1EB4A6418 = objc_msgSend((id)objc_msgSend((id)objc_msgSend((id)objc_msgSend(MEMORY[0x1E4F28F80], "processInfo"), "environment"), "objectForKeyedSubscript:", @"IMIsRunningInUnitTesting"), "isEqualToString:", @"YES");
    }
  }
  if (IMOSLoggingEnabled())
  {
    id v0 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v0, OS_LOG_TYPE_INFO))
    {
      if (byte_1EB4A6418) {
        id v1 = @"YES";
      }
      else {
        id v1 = @"NO";
      }
      int v2 = 138412290;
      id v3 = v1;
      _os_log_impl(&dword_1A0772000, v0, OS_LOG_TYPE_INFO, "IMIsRunningInUnitTesting %@", (uint8_t *)&v2, 0xCu);
    }
  }
}

void sub_1A0789F5C()
{
  uint64_t v10 = *MEMORY[0x1E4F143B8];
  id v0 = objc_msgSend((id)objc_msgSend(MEMORY[0x1E4F28F80], "processInfo"), "environment");
  uint64_t v1 = objc_msgSend((id)objc_msgSend(v0, "objectForKeyedSubscript:", @"XCTestBundlePath"), "length");
  byte_1E94FF1B0 = v1 != 0;
  if (!v1)
  {
    uint64_t v2 = objc_msgSend((id)objc_msgSend(v0, "objectForKeyedSubscript:", @"XCTestConfigurationFilePath"), "length");
    byte_1E94FF1B0 = v2 != 0;
    if (!v2)
    {
      id v3 = (void *)[v0 objectForKeyedSubscript:@"IDEiPhoneInternalTestBundleName"];
      if ([v3 containsString:@"xctest"]) {
        goto LABEL_4;
      }
      byte_1E94FF1B0 = [v3 containsString:@"xcrun"];
      if (byte_1E94FF1B0) {
        goto LABEL_7;
      }
      uint64_t v7 = (void *)[v0 objectForKeyedSubscript:@"_"];
      if ([v7 containsString:@"xctest"]) {
LABEL_4:
      }
        char v4 = 1;
      else {
        char v4 = [v7 containsString:@"xcrun"];
      }
      byte_1E94FF1B0 = v4;
    }
  }
LABEL_7:
  if (IMOSLoggingEnabled())
  {
    id v5 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
    {
      if (byte_1E94FF1B0) {
        uint64_t v6 = @"YES";
      }
      else {
        uint64_t v6 = @"NO";
      }
      int v8 = 138412290;
      uint64_t v9 = v6;
      _os_log_impl(&dword_1A0772000, v5, OS_LOG_TYPE_INFO, "IMIsRunningInXCTest %@", (uint8_t *)&v8, 0xCu);
    }
  }
}

void sub_1A078B6FC(uint64_t a1, void *a2, void *a3)
{
  id v7 = a2;
  id v5 = a3;
  id v6 = [*(id *)(*(void *)(a1 + 32) + 40) objectForKey:v5];
  if (!v6) {
    id v6 = objc_alloc_init(MEMORY[0x1E4F1CA48]);
  }
  if (([v6 containsObject:v7] & 1) == 0) {
    [v6 addObject:v7];
  }
  [*(id *)(*(void *)(a1 + 32) + 40) setObject:v6 forKey:v5];
}

void sub_1A078B858(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1A078C314(_Unwind_Exception *exc_buf, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  if (a2 == 1)
  {
    objc_begin_catch(exc_buf);
    objc_end_catch();
    JUMPOUT(0x1A078C29CLL);
  }
  _Block_object_dispose(&a17, 8);
  _Unwind_Resume(exc_buf);
}

uint64_t IMIsRunningInMessages()
{
  if (qword_1EB4A6450 != -1) {
    dispatch_once(&qword_1EB4A6450, &unk_1EF2C1578);
  }
  return byte_1EB4A60F0;
}

uint64_t IMIsStringStewieEmergency(void *a1, const char *a2)
{
  return [a1 hasPrefix:@"stewie:emergency:112911"];
}

__CFString *IMTextEffectLocalizationKeyFromType(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) > 0xB) {
    return &stru_1EF2CAD28;
  }
  else {
    return off_1E5A12898[a1 - 1];
  }
}

uint64_t IMSupportsUserNotifications()
{
  return MEMORY[0x1F4181798](IMDeviceUtilities, sel_IMSupportsUserNotifications);
}

__CFString *IMSharedHelperMessagesRootFolderPath()
{
  return @"/var/mobile/Library/SMS/";
}

__CFString *IMStringFromIMCloudKitSyncJobState(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) > 4) {
    return @"IMCloudKitSyncJobStateIdle";
  }
  else {
    return off_1E5A103B8[a1 - 1];
  }
}

uint64_t IMBalloonExtensionIDWithSuffix(uint64_t a1)
{
  uint64_t v2 = (void *)[@"com.apple.messages.MSMessageExtensionBalloonPlugin" stringByAppendingString:@":0000000000:"];

  return [v2 stringByAppendingString:a1];
}

uint64_t IMBalloonProviderBundleRootDirectory(int a1)
{
  if (a1) {
    uint64_t v1 = (__CFString *)[@"/System/iOSSupport" stringByAppendingPathComponent:@"/System/Library/Messages/iMessageBalloons"];
  }
  else {
    uint64_t v1 = @"/System/Library/Messages/iMessageBalloons";
  }
  uint64_t v2 = (void *)IMSystemRootDirectory();

  return [v2 stringByAppendingPathComponent:v1];
}

uint64_t IMSharedHelperPersonCentricMergingEnabled()
{
  return 1;
}

uint64_t IMSharedHelperDeviceIsAltAccount()
{
  return 0;
}

uint64_t IMEnableTranscriptChromelessNavBar()
{
  return 0;
}

uint64_t IMSharedHelperAppBlocklisted(uint64_t a1, void *a2)
{
  uint64_t v14 = *MEMORY[0x1E4F143B8];
  if (!a1 || !a2)
  {
    if (IMOSLoggingEnabled())
    {
      int v8 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
      {
        int v10 = 138412546;
        uint64_t v11 = a1;
        __int16 v12 = 2112;
        long long v13 = a2;
        _os_log_impl(&dword_1A0772000, v8, OS_LOG_TYPE_INFO, "Invalid parameters bundleIdentifier: %@ serverBag: %@", (uint8_t *)&v10, 0x16u);
      }
    }
    return 0;
  }
  uint64_t v4 = [a2 objectForKey:@"banned-messages-app-bid"];
  if (!v4) {
    return 0;
  }
  id v5 = (void *)v4;
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) == 0
    || !objc_msgSend((id)objc_msgSend(v5, "objectForKey:", a1), "BOOLValue"))
  {
    return 0;
  }
  if (!IMOSLoggingEnabled()) {
    return 1;
  }
  id v6 = OSLogHandleForIMFoundationCategory();
  uint64_t v7 = 1;
  if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
  {
    int v10 = 138412546;
    uint64_t v11 = a1;
    __int16 v12 = 2112;
    long long v13 = v5;
    _os_log_impl(&dword_1A0772000, v6, OS_LOG_TYPE_INFO, "IMSharedHelperAppBlocklisted: Not showing app as it is blocklisted, bundleID: %@ bannedBundleIDsToBannedState: %@", (uint8_t *)&v10, 0x16u);
  }
  return v7;
}

uint64_t IMBundleIdentifiersShowingMessagesTranscript()
{
  return [MEMORY[0x1E4F1CAD0] setWithArray:&unk_1EF305E98];
}

uint64_t IMClientTelemetryLogHandle()
{
  if (qword_1EB4A5FE0 != -1) {
    dispatch_once(&qword_1EB4A5FE0, &unk_1EF2C1898);
  }
  return qword_1EB4A5FE8;
}

id IMBalloonProviderBundlePaths(int a1)
{
  void v12[4] = *MEMORY[0x1E4F143B8];
  if (a1) {
    uint64_t v2 = (__CFString *)[@"/System/iOSSupport" stringByAppendingPathComponent:@"/System/Library/Messages/iMessageBalloons"];
  }
  else {
    uint64_t v2 = @"/System/Library/Messages/iMessageBalloons";
  }
  id v3 = (void *)[(id)IMSystemRootDirectory() stringByAppendingPathComponent:v2];
  uint64_t v4 = [v3 stringByAppendingPathComponent:@"MSMessageExtensionBalloonPlugin.bundle"];
  if (a1)
  {
    v12[0] = v4;
    v12[1] = [v3 stringByAppendingPathComponent:@"HandwritingProvider-iOSMac.bundle"];
    v12[2] = [v3 stringByAppendingPathComponent:@"DigitalTouchBalloonProvider-iOSMac.bundle"];
    uint64_t v12[3] = [v3 stringByAppendingPathComponent:@"RichLinkProvider.bundle"];
    id v5 = (void *)MEMORY[0x1E4F1C978];
    id v6 = v12;
    uint64_t v7 = 4;
  }
  else
  {
    v11[0] = v4;
    v11[1] = [v3 stringByAppendingPathComponent:@"AssetExplorer.bundle"];
    _OWORD v11[2] = [v3 stringByAppendingPathComponent:@"HandwritingProvider.bundle"];
    v11[3] = [v3 stringByAppendingPathComponent:@"DigitalTouchBalloonProvider.bundle"];
    v11[4] = [v3 stringByAppendingPathComponent:@"RichLinkProvider.bundle"];
    v11[5] = [v3 stringByAppendingPathComponent:@"ASMessagesProvider.bundle"];
    id v5 = (void *)MEMORY[0x1E4F1C978];
    id v6 = v11;
    uint64_t v7 = 6;
  }
  int v8 = (void *)[v5 arrayWithObjects:v6 count:v7];
  if ([+[IMFeatureFlags sharedFeatureFlags] isScheduledMessagesEnabled])
  {
    id v9 = (id)[v8 mutableCopy];
    objc_msgSend(v9, "addObject:", objc_msgSend(v3, "stringByAppendingPathComponent:", @"SendLaterProvider.bundle"));
    return (id)[v9 copy];
  }
  return v8;
}

uint64_t IMCloudKitSetEligibleToToggleMiCSwitch(int a1)
{
  uint64_t v7 = *MEMORY[0x1E4F143B8];
  if (IMOSLoggingEnabled())
  {
    uint64_t v2 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
    {
      id v3 = @"NO";
      if (a1) {
        id v3 = @"YES";
      }
      int v5 = 138412290;
      id v6 = v3;
      _os_log_impl(&dword_1A0772000, v2, OS_LOG_TYPE_INFO, "Setting isEligibleToToggleMiCSwitch to toggle MiC switch to %@", (uint8_t *)&v5, 0xCu);
    }
  }
  IMSetDomainBoolForKey();
  return IMSetDomainBoolForKey();
}

uint64_t IMAppBundleRootDirectory()
{
  id v0 = (void *)IMSystemRootDirectory();

  return [v0 stringByAppendingPathComponent:@"/System/Library/Messages/iMessageApps/"];
}

void *IMGetUserIgnoreLogoutIntent()
{
  CFPropertyListRef v0 = CFPreferencesCopyValue(@"UserIgnoreLogoutIntent", @"com.apple.MobileSMS", (CFStringRef)*MEMORY[0x1E4F1D3F0], (CFStringRef)*MEMORY[0x1E4F1D3E0]);
  uint64_t result = (id)CFMakeCollectable(v0);
  if (result) {
    return (void *)([result integerValue] != 0);
  }
  return result;
}

BOOL IMIsSupportedUTIType(uint64_t a1)
{
  uint64_t v2 = (void *)qword_1EB4A62D8;
  if (!qword_1EB4A62D8)
  {
    sub_1A07912C0();
    uint64_t v2 = (void *)qword_1EB4A62D8;
  }
  uint64_t v3 = [v2 objectForKey:a1];
  uint64_t v4 = (void *)qword_1EB4A62E0;
  if (!qword_1EB4A62E0)
  {
    sub_1A07912C0();
    uint64_t v4 = (void *)qword_1EB4A62E0;
  }
  return ([v4 objectForKey:a1] | v3) != 0;
}

BOOL IMShouldDisplayKeepMessagesSetting()
{
  int v0 = dword_1EB4A5658;
  if (dword_1EB4A5658 < 0)
  {
    if (dword_1EB4A5658 == -2)
    {
      DarwinNotifyCenter = CFNotificationCenterGetDarwinNotifyCenter();
      CFNotificationCenterAddObserver(DarwinNotifyCenter, 0, (CFNotificationCallback)sub_1A0830138, @"com.apple.MobileSMS.KeepMessages.reset", 0, CFNotificationSuspensionBehaviorDeliverImmediately);
    }
    int v0 = [(id)IMGetCachedDomainValueForKey() BOOLValue];
    dword_1EB4A5658 = v0;
  }
  return v0 == 1;
}

void *IMGetUserLoginIntent()
{
  if (qword_1E94FF240 != -1) {
    dispatch_once(&qword_1E94FF240, &unk_1EF2BF640);
  }
  CFPropertyListRef v0 = CFPreferencesCopyValue(@"UserLoginIntent", @"com.apple.MobileSMS", (CFStringRef)*MEMORY[0x1E4F1D3F0], (CFStringRef)*MEMORY[0x1E4F1D3E0]);
  uint64_t result = (id)CFMakeCollectable(v0);
  if (result)
  {
    uint64_t result = (void *)[result integerValue];
    if ((unint64_t)result >= 3) {
      return 0;
    }
  }
  return result;
}

BOOL _IMServerSaysToKeepNicknamesEnabled()
{
  CFPropertyListRef v0 = objc_msgSend((id)objc_msgSend(MEMORY[0x1E4F6B598], "sharedInstanceForBagType:", 1), "objectForKey:", @"nicknames-enabled-version");
  uint64_t v1 = v0;
  BOOL v2 = !v0 || (unint64_t)[v0 unsignedIntegerValue] <= 1;
  v4[0] = MEMORY[0x1E4F143A8];
  v4[1] = 3221225472;
  v4[2] = sub_1A0850F64;
  v4[3] = &unk_1E5A13A78;
  BOOL v5 = v2;
  v4[4] = v1;
  if (qword_1EB4A6448 != -1) {
    dispatch_once(&qword_1EB4A6448, v4);
  }
  return v2;
}

uint64_t IMSharedHelperDeviceHasMultipleSubscriptions()
{
  CFPropertyListRef v0 = +[IMCTSubscriptionUtilities sharedInstance];

  return [(IMCTSubscriptionUtilities *)v0 deviceSupportsMultipleSubscriptions];
}

uint64_t IMSMSReportSpamActivateExtensions()
{
  uint64_t v6 = *MEMORY[0x1E4F143B8];
  CFPropertyListRef v0 = objc_msgSend((id)objc_msgSend(MEMORY[0x1E4F28B50], "mainBundle"), "bundleIdentifier");
  uint64_t result = [v0 isEqualToString:@"com.apple.MobileSMS"];
  if (result)
  {
    if (IMOSLoggingEnabled())
    {
      BOOL v2 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
      {
        int v4 = 138412290;
        BOOL v5 = v0;
        _os_log_impl(&dword_1A0772000, v2, OS_LOG_TYPE_INFO, "We are warming up the classication shared instance for bundleIdentifier %@", (uint8_t *)&v4, 0xCu);
      }
    }
    uint64_t v3 = (void *)sub_1A079113C();
    uint64_t result = objc_opt_respondsToSelector();
    if (result) {
      return [v3 activateWithCompletion:0];
    }
  }
  return result;
}

BOOL IMSharedHelperNickNameEnabled()
{
  if (+[IMAppleStoreHelper isInAppleStoreDemoMode]) {
    return 0;
  }

  return _IMServerSaysToKeepNicknamesEnabled();
}

void IMSetEmbeddedTempDirectory()
{
  uint64_t v15 = *MEMORY[0x1E4F143B8];
  setenv("TMPDIR", "/var/mobile/tmp/", 1);
  if (_set_user_dir_suffix())
  {
    CFPropertyListRef v0 = NSTemporaryDirectory();
    if (IMOSLoggingEnabled())
    {
      uint64_t v1 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v1, OS_LOG_TYPE_INFO))
      {
        int v13 = 138412290;
        uint64_t v14 = v0;
        _os_log_impl(&dword_1A0772000, v1, OS_LOG_TYPE_INFO, "NSTemporaryDirectory() set to %@", (uint8_t *)&v13, 0xCu);
      }
    }
    bzero(&v13, 0x400uLL);
    if (!_dirhelper())
    {
      if (IMOSLoggingEnabled())
      {
        BOOL v2 = OSLogHandleForIMFoundationCategory();
        if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
        {
          uint64_t v3 = (NSString *)*__error();
          int v11 = 134217984;
          __int16 v12 = v3;
          _os_log_impl(&dword_1A0772000, v2, OS_LOG_TYPE_INFO, "Error getting temp directory path: (%lu)\n", (uint8_t *)&v11, 0xCu);
        }
      }
    }
    int v4 = NSHomeDirectory();
    if (IMOSLoggingEnabled())
    {
      BOOL v5 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
      {
        int v11 = 138412290;
        __int16 v12 = v4;
        uint64_t v6 = "NSHomeDirectory() set to %@";
        uint64_t v7 = &v11;
        int v8 = v5;
LABEL_15:
        _os_log_impl(&dword_1A0772000, v8, OS_LOG_TYPE_INFO, v6, (uint8_t *)v7, 0xCu);
      }
    }
  }
  else if (IMOSLoggingEnabled())
  {
    id v9 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
    {
      int v10 = (NSString *)*__error();
      int v13 = 134217984;
      uint64_t v14 = v10;
      uint64_t v6 = "Could not setup dirhelper suffix: (%lu)\n";
      uint64_t v7 = &v13;
      int v8 = v9;
      goto LABEL_15;
    }
  }
}

id IMTextEffectOrderedSupportedNames()
{
  if (qword_1E94FE9C0 != -1) {
    dispatch_once(&qword_1E94FE9C0, &unk_1EF2BF600);
  }
  CFPropertyListRef v0 = (void *)qword_1E94FE9C8;

  return v0;
}

uint64_t IMPrewarmXPCInterfaces()
{
  return MEMORY[0x1F4181798](MEMORY[0x1E4F29280], sel___im_prewarmMessagesInterfaces);
}

uint64_t sub_1A078D800(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContextInMetadataState2();
    *a1 = result;
  }
  return result;
}

uint64_t *sub_1A078D848(uint64_t a1, uint64_t *a2)
{
  if ((*(_DWORD *)(*(void *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    uint64_t v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

Class sub_1A078D8AC(uint64_t a1)
{
  sub_1A07911C0();
  Class result = objc_getClass("STCommunicationClient");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = result;
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    qword_1EB4A6140 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  }
  else
  {
    uint64_t v3 = sub_1A09F26EC();
    return (Class)sub_1A078D904(v3);
  }
  return result;
}

Class sub_1A078D904(uint64_t a1)
{
  uint64_t v7 = *MEMORY[0x1E4F143B8];
  v4[0] = 0;
  if (!qword_1EB4A6128)
  {
    v4[1] = MEMORY[0x1E4F143A8];
    v4[2] = 3221225472;
    v4[3] = sub_1A08651CC;
    v4[4] = &unk_1E5A10168;
    void v4[5] = v4;
    long long v5 = xmmword_1E5A14A28;
    uint64_t v6 = 0;
    qword_1EB4A6128 = _sl_dlopen();
    BOOL v2 = (void *)v4[0];
    if (!qword_1EB4A6128)
    {
      abort_report_np();
      goto LABEL_7;
    }
    if (v4[0]) {
      goto LABEL_8;
    }
  }
  while (1)
  {
    Class result = objc_getClass("FAFetchFamilyCircleRequest");
    *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = result;
    if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24)) {
      break;
    }
LABEL_7:
    BOOL v2 = (void *)sub_1A09F2714();
LABEL_8:
    free(v2);
  }
  qword_1EB4A6138 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

void *sub_1A078DA48()
{
  Class result = (void *)MEMORY[0x1A6227920]("ADClientSetValueForScalarKey", @"AggregateDictionary");
  off_1EB4A6170 = result;
  return result;
}

void sub_1A078DA78()
{
  id v0 = objc_alloc(MEMORY[0x1E4F28E48]);
  uint64_t v1 = [MEMORY[0x1E4F1C9E8] dictionaryWithObject:&unk_1EF3057C0 forKey:*MEMORY[0x1E4F6C1F8]];
  id v4 = (id)[v0 initWithString:@" " attributes:v1];

  uint64_t v2 = [v4 attributesAtIndex:0 effectiveRange:0];
  uint64_t v3 = (void *)qword_1EB4A6268;
  qword_1EB4A6268 = v2;
}

uint64_t sub_1A078DB28()
{
  qword_1EB4A6600 = MEMORY[0x1A6227910](@"CTXPCServiceSubscriptionInfo", @"CoreTelephony");
  qword_1EB4A6608 = MEMORY[0x1A6227910](@"CTXPCServiceSubscriptionContext", @"CoreTelephony");
  uint64_t result = MEMORY[0x1A6227910](@"CTBundle", @"CoreTelephony");
  qword_1EB4A65F8 = result;
  return result;
}

uint64_t sub_1A078DB94()
{
  uint64_t result = MEMORY[0x1A6227910](@"CTMessageCenter", @"CoreTelephony");
  qword_1E94FF310 = result;
  return result;
}

uint64_t sub_1A078DBC4()
{
  uint64_t result = MEMORY[0x1A6227910](@"ILClassificationController", @"IdentityLookup");
  qword_1EB4A60D8 = result;
  return result;
}

void sub_1A078DBF4()
{
  uint64_t v98 = *MEMORY[0x1E4F143B8];
  if (!qword_1EB4A64D0)
  {
    id v0 = (void *)MEMORY[0x1A6227920]("CNContactIdentifierKey", @"Contacts");
    uint64_t v1 = v0 ? (void *)*v0 : 0;
    objc_storeStrong((id *)&qword_1EB4A64D0, v1);
    if (!qword_1EB4A64D0)
    {
      uint64_t v2 = NSString;
      uint64_t v3 = IMFileLocationTrimFileName();
      id v4 = [NSString stringWithFormat:&stru_1EF2CAD28];
      long long v5 = [v2 stringWithFormat:@"Unexpected nil '%@' in %s at %s:%d. %@", @"kIMCNContactIdentifierKey", "void SetupContactKeysIfNeeded(void)_block_invoke", v3, 226, v4];

      uint64_t v6 = (void (*)(void *))IMGetAssertionFailureHandler();
      if (v6)
      {
        v6(v5);
      }
      else if (IMOSLoggingEnabled())
      {
        uint64_t v7 = OSLogHandleForIMFoundationCategory();
        if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
        {
          *(_DWORD *)buf = 138412290;
          v97 = v5;
          _os_log_impl(&dword_1A0772000, v7, OS_LOG_TYPE_INFO, "ASSERTION FAILED: %@", buf, 0xCu);
        }
      }
    }
  }
  if (!qword_1EB4A64E8)
  {
    int v8 = (void *)MEMORY[0x1A6227920]("CNContactLinkIdentifierKey", @"Contacts");
    id v9 = v8 ? (void *)*v8 : 0;
    objc_storeStrong((id *)&qword_1EB4A64E8, v9);
    if (!qword_1EB4A64E8)
    {
      int v10 = NSString;
      uint64_t v11 = IMFileLocationTrimFileName();
      __int16 v12 = [NSString stringWithFormat:&stru_1EF2CAD28];
      int v13 = [v10 stringWithFormat:@"Unexpected nil '%@' in %s at %s:%d. %@", @"kIMCNContactLinkIdentifierKey", "void SetupContactKeysIfNeeded(void)_block_invoke", v11, 229, v12];

      uint64_t v14 = (void (*)(void *))IMGetAssertionFailureHandler();
      if (v14)
      {
        v14(v13);
      }
      else if (IMOSLoggingEnabled())
      {
        uint64_t v15 = OSLogHandleForIMFoundationCategory();
        if (os_log_type_enabled(v15, OS_LOG_TYPE_INFO))
        {
          *(_DWORD *)buf = 138412290;
          v97 = v13;
          _os_log_impl(&dword_1A0772000, v15, OS_LOG_TYPE_INFO, "ASSERTION FAILED: %@", buf, 0xCu);
        }
      }
    }
  }
  if (!qword_1EB4A64F0)
  {
    long long v16 = (void *)MEMORY[0x1A6227920]("CNContactPhoneNumbersKey", @"Contacts");
    uint64_t v17 = v16 ? (void *)*v16 : 0;
    objc_storeStrong((id *)&qword_1EB4A64F0, v17);
    if (!qword_1EB4A64F0)
    {
      uint64_t v18 = NSString;
      uint64_t v19 = IMFileLocationTrimFileName();
      id v20 = [NSString stringWithFormat:&stru_1EF2CAD28];
      unint64_t v21 = [v18 stringWithFormat:@"Unexpected nil '%@' in %s at %s:%d. %@", @"kIMCNContactPhoneNumbersKey", "void SetupContactKeysIfNeeded(void)_block_invoke", v19, 232, v20];

      unsigned __int8 v22 = (void (*)(void *))IMGetAssertionFailureHandler();
      if (v22)
      {
        v22(v21);
      }
      else if (IMOSLoggingEnabled())
      {
        uint64_t v23 = OSLogHandleForIMFoundationCategory();
        if (os_log_type_enabled(v23, OS_LOG_TYPE_INFO))
        {
          *(_DWORD *)buf = 138412290;
          v97 = v21;
          _os_log_impl(&dword_1A0772000, v23, OS_LOG_TYPE_INFO, "ASSERTION FAILED: %@", buf, 0xCu);
        }
      }
    }
  }
  if (!qword_1EB4A64C8)
  {
    unsigned __int8 v24 = (void *)MEMORY[0x1A6227920]("CNContactEmailAddressesKey", @"Contacts");
    uint64_t v25 = v24 ? (void *)*v24 : 0;
    objc_storeStrong((id *)&qword_1EB4A64C8, v25);
    if (!qword_1EB4A64C8)
    {
      unint64_t v26 = NSString;
      uint64_t v27 = IMFileLocationTrimFileName();
      uint64_t v28 = [NSString stringWithFormat:&stru_1EF2CAD28];
      unsigned __int8 v29 = [v26 stringWithFormat:@"Unexpected nil '%@' in %s at %s:%d. %@", @"kIMCNContactEmailAddressesKey", "void SetupContactKeysIfNeeded(void)_block_invoke", v27, 235, v28];

      unint64_t v30 = (void (*)(void *))IMGetAssertionFailureHandler();
      if (v30)
      {
        v30(v29);
      }
      else if (IMOSLoggingEnabled())
      {
        uint64_t v31 = OSLogHandleForIMFoundationCategory();
        if (os_log_type_enabled(v31, OS_LOG_TYPE_INFO))
        {
          *(_DWORD *)buf = 138412290;
          v97 = v29;
          _os_log_impl(&dword_1A0772000, v31, OS_LOG_TYPE_INFO, "ASSERTION FAILED: %@", buf, 0xCu);
        }
      }
    }
  }
  if (!qword_1EB4A64D8)
  {
    uint64_t v32 = (void *)MEMORY[0x1A6227920]("CNContactImageDataAvailableKey", @"Contacts");
    uint64_t v33 = v32 ? (void *)*v32 : 0;
    objc_storeStrong((id *)&qword_1EB4A64D8, v33);
    if (!qword_1EB4A64D8)
    {
      id v34 = NSString;
      uint64_t v35 = IMFileLocationTrimFileName();
      uint64_t v36 = [NSString stringWithFormat:&stru_1EF2CAD28];
      id v37 = [v34 stringWithFormat:@"Unexpected nil '%@' in %s at %s:%d. %@", @"kIMCNContactImageDataAvailableKey", "void SetupContactKeysIfNeeded(void)_block_invoke", v35, 238, v36];

      uint64_t v38 = (void (*)(void *))IMGetAssertionFailureHandler();
      if (v38)
      {
        v38(v37);
      }
      else if (IMOSLoggingEnabled())
      {
        v39 = OSLogHandleForIMFoundationCategory();
        if (os_log_type_enabled(v39, OS_LOG_TYPE_INFO))
        {
          *(_DWORD *)buf = 138412290;
          v97 = v37;
          _os_log_impl(&dword_1A0772000, v39, OS_LOG_TYPE_INFO, "ASSERTION FAILED: %@", buf, 0xCu);
        }
      }
    }
  }
  if (!qword_1EB4A64E0)
  {
    uint64_t v40 = (void *)MEMORY[0x1A6227920]("CNContactImageDataKey", @"Contacts");
    v41 = v40 ? (void *)*v40 : 0;
    objc_storeStrong((id *)&qword_1EB4A64E0, v41);
    if (!qword_1EB4A64E0)
    {
      v42 = NSString;
      uint64_t v43 = IMFileLocationTrimFileName();
      char v44 = [NSString stringWithFormat:&stru_1EF2CAD28];
      v45 = [v42 stringWithFormat:@"Unexpected nil '%@' in %s at %s:%d. %@", @"kIMCNContactImageDataKey", "void SetupContactKeysIfNeeded(void)_block_invoke", v43, 241, v44];

      objc_super v46 = (void (*)(void *))IMGetAssertionFailureHandler();
      if (v46)
      {
        v46(v45);
      }
      else if (IMOSLoggingEnabled())
      {
        uint64_t v47 = OSLogHandleForIMFoundationCategory();
        if (os_log_type_enabled(v47, OS_LOG_TYPE_INFO))
        {
          *(_DWORD *)buf = 138412290;
          v97 = v45;
          _os_log_impl(&dword_1A0772000, v47, OS_LOG_TYPE_INFO, "ASSERTION FAILED: %@", buf, 0xCu);
        }
      }
    }
  }
  if (!qword_1EB4A64F8)
  {
    v48 = (void *)MEMORY[0x1A6227920]("CNContactThumbnailImageDataKey", @"Contacts");
    v49 = v48 ? (void *)*v48 : 0;
    objc_storeStrong((id *)&qword_1EB4A64F8, v49);
    if (!qword_1EB4A64F8)
    {
      v50 = NSString;
      uint64_t v51 = IMFileLocationTrimFileName();
      v52 = [NSString stringWithFormat:&stru_1EF2CAD28];
      v53 = [v50 stringWithFormat:@"Unexpected nil '%@' in %s at %s:%d. %@", @"kIMCNContactThumbnailImageDataKey", "void SetupContactKeysIfNeeded(void)_block_invoke", v51, 244, v52];

      v54 = (void (*)(void *))IMGetAssertionFailureHandler();
      if (v54)
      {
        v54(v53);
      }
      else if (IMOSLoggingEnabled())
      {
        v55 = OSLogHandleForIMFoundationCategory();
        if (os_log_type_enabled(v55, OS_LOG_TYPE_INFO))
        {
          *(_DWORD *)buf = 138412290;
          v97 = v53;
          _os_log_impl(&dword_1A0772000, v55, OS_LOG_TYPE_INFO, "ASSERTION FAILED: %@", buf, 0xCu);
        }
      }
    }
  }
  if (!qword_1EB4A64C0)
  {
    v56 = (void *)MEMORY[0x1A6227920]("CNContactCropRectKey", @"Contacts");
    v57 = v56 ? (void *)*v56 : 0;
    objc_storeStrong((id *)&qword_1EB4A64C0, v57);
    if (!qword_1EB4A64C0)
    {
      v58 = NSString;
      uint64_t v59 = IMFileLocationTrimFileName();
      v60 = [NSString stringWithFormat:&stru_1EF2CAD28];
      v61 = [v58 stringWithFormat:@"Unexpected nil '%@' in %s at %s:%d. %@", @"kIMCNContactCropRectKey", "void SetupContactKeysIfNeeded(void)_block_invoke", v59, 247, v60];

      v62 = (void (*)(void *))IMGetAssertionFailureHandler();
      if (v62)
      {
        v62(v61);
      }
      else if (IMOSLoggingEnabled())
      {
        v63 = OSLogHandleForIMFoundationCategory();
        if (os_log_type_enabled(v63, OS_LOG_TYPE_INFO))
        {
          *(_DWORD *)buf = 138412290;
          v97 = v61;
          _os_log_impl(&dword_1A0772000, v63, OS_LOG_TYPE_INFO, "ASSERTION FAILED: %@", buf, 0xCu);
        }
      }
    }
  }
  if (!qword_1EB4A6408)
  {
    v64 = (void *)MEMORY[0x1A6227920]("CNContactWallpaperKey", @"Contacts");
    v65 = v64 ? (void *)*v64 : 0;
    objc_storeStrong((id *)&qword_1EB4A6408, v65);
    if (!qword_1EB4A6408)
    {
      v66 = NSString;
      uint64_t v67 = IMFileLocationTrimFileName();
      v68 = [NSString stringWithFormat:&stru_1EF2CAD28];
      v69 = [v66 stringWithFormat:@"Unexpected nil '%@' in %s at %s:%d. %@", @"kIMCNContactWallpaperKey", "void SetupContactKeysIfNeeded(void)_block_invoke", v67, 250, v68];

      v70 = (void (*)(void *))IMGetAssertionFailureHandler();
      if (v70)
      {
        v70(v69);
      }
      else if (IMOSLoggingEnabled())
      {
        v71 = OSLogHandleForIMFoundationCategory();
        if (os_log_type_enabled(v71, OS_LOG_TYPE_INFO))
        {
          *(_DWORD *)buf = 138412290;
          v97 = v69;
          _os_log_impl(&dword_1A0772000, v71, OS_LOG_TYPE_INFO, "ASSERTION FAILED: %@", buf, 0xCu);
        }
      }
    }
  }
  if (!qword_1EB4A6410)
  {
    v72 = (void *)MEMORY[0x1A6227920]("CNContactWatchWallpaperImageDataKey", @"Contacts");
    v73 = v72 ? (void *)*v72 : 0;
    objc_storeStrong((id *)&qword_1EB4A6410, v73);
    if (!qword_1EB4A6410)
    {
      v74 = NSString;
      uint64_t v75 = IMFileLocationTrimFileName();
      v76 = [NSString stringWithFormat:&stru_1EF2CAD28];
      v77 = [v74 stringWithFormat:@"Unexpected nil '%@' in %s at %s:%d. %@", @"kIMCNContactWatchWallpaperImageDataKey", "void SetupContactKeysIfNeeded(void)_block_invoke", v75, 253, v76];

      v78 = (void (*)(void *))IMGetAssertionFailureHandler();
      if (v78)
      {
        v78(v77);
      }
      else if (IMOSLoggingEnabled())
      {
        v79 = OSLogHandleForIMFoundationCategory();
        if (os_log_type_enabled(v79, OS_LOG_TYPE_INFO))
        {
          *(_DWORD *)buf = 138412290;
          v97 = v77;
          _os_log_impl(&dword_1A0772000, v79, OS_LOG_TYPE_INFO, "ASSERTION FAILED: %@", buf, 0xCu);
        }
      }
    }
  }
  if (!qword_1EB4A6400)
  {
    v80 = (void *)MEMORY[0x1A6227920]("CNContactImageBackgroundColorsDataKey", @"Contacts");
    v81 = v80 ? (void *)*v80 : 0;
    objc_storeStrong((id *)&qword_1EB4A6400, v81);
    if (!qword_1EB4A6400)
    {
      v82 = NSString;
      uint64_t v83 = IMFileLocationTrimFileName();
      v84 = [NSString stringWithFormat:&stru_1EF2CAD28];
      v85 = [v82 stringWithFormat:@"Unexpected nil '%@' in %s at %s:%d. %@", @"kIMCNContactImageBackgroundColorsDataKey", "void SetupContactKeysIfNeeded(void)_block_invoke", v83, 256, v84];

      v86 = (void (*)(void *))IMGetAssertionFailureHandler();
      if (v86)
      {
        v86(v85);
      }
      else if (IMOSLoggingEnabled())
      {
        v87 = OSLogHandleForIMFoundationCategory();
        if (os_log_type_enabled(v87, OS_LOG_TYPE_INFO))
        {
          *(_DWORD *)buf = 138412290;
          v97 = v85;
          _os_log_impl(&dword_1A0772000, v87, OS_LOG_TYPE_INFO, "ASSERTION FAILED: %@", buf, 0xCu);
        }
      }
    }
  }
  if (!qword_1EB4A63E8)
  {
    v88 = (void *)MEMORY[0x1A6227920]("CNContactSensitiveContentConfigurationKey", @"Contacts");
    v89 = v88 ? (void *)*v88 : 0;
    objc_storeStrong((id *)&qword_1EB4A63E8, v89);
    if (!qword_1EB4A63E8)
    {
      v90 = NSString;
      uint64_t v91 = IMFileLocationTrimFileName();
      v92 = [NSString stringWithFormat:&stru_1EF2CAD28];
      v93 = [v90 stringWithFormat:@"Unexpected nil '%@' in %s at %s:%d. %@", @"kIMCNContactSensitiveContentConfigurationKey", "void SetupContactKeysIfNeeded(void)_block_invoke", v91, 259, v92];

      v94 = (void (*)(void *))IMGetAssertionFailureHandler();
      if (v94)
      {
        v94(v93);
      }
      else if (IMOSLoggingEnabled())
      {
        v95 = OSLogHandleForIMFoundationCategory();
        if (os_log_type_enabled(v95, OS_LOG_TYPE_INFO))
        {
          *(_DWORD *)buf = 138412290;
          v97 = v93;
          _os_log_impl(&dword_1A0772000, v95, OS_LOG_TYPE_INFO, "ASSERTION FAILED: %@", buf, 0xCu);
        }
      }
    }
  }
}

void sub_1A078EC10()
{
  uint64_t v50 = *MEMORY[0x1E4F143B8];
  qword_1EB4A6518 = MEMORY[0x1A6227910](@"CNContactFormatter", @"Contacts");
  if (!qword_1EB4A6518)
  {
    id v0 = NSString;
    uint64_t v1 = IMFileLocationTrimFileName();
    uint64_t v2 = [NSString stringWithFormat:&stru_1EF2CAD28];
    uint64_t v3 = [v0 stringWithFormat:@"Unexpected nil '%@' in %s at %s:%d. %@", @"IMCNContactFormatterClass", "void SetupContactClassesIfNeeded(void)_block_invoke", v1, 195, v2];

    id v4 = (void (*)(void *))IMGetAssertionFailureHandler();
    if (v4)
    {
      v4(v3);
    }
    else if (IMOSLoggingEnabled())
    {
      long long v5 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)buf = 138412290;
        v49 = v3;
        _os_log_impl(&dword_1A0772000, v5, OS_LOG_TYPE_INFO, "ASSERTION FAILED: %@", buf, 0xCu);
      }
    }
  }
  qword_1EB4A6510 = MEMORY[0x1A6227910](@"CNContactFetchRequest", @"Contacts");
  if (!qword_1EB4A6510)
  {
    uint64_t v6 = NSString;
    uint64_t v7 = IMFileLocationTrimFileName();
    int v8 = [NSString stringWithFormat:&stru_1EF2CAD28];
    id v9 = [v6 stringWithFormat:@"Unexpected nil '%@' in %s at %s:%d. %@", @"IMCNContactFetchRequestClass", "void SetupContactClassesIfNeeded(void)_block_invoke", v7, 198, v8];

    int v10 = (void (*)(void *))IMGetAssertionFailureHandler();
    if (v10)
    {
      v10(v9);
    }
    else if (IMOSLoggingEnabled())
    {
      uint64_t v11 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)buf = 138412290;
        v49 = v9;
        _os_log_impl(&dword_1A0772000, v11, OS_LOG_TYPE_INFO, "ASSERTION FAILED: %@", buf, 0xCu);
      }
    }
  }
  qword_1EB4A6538 = MEMORY[0x1A6227910](@"CNMutableContact", @"Contacts");
  if (!qword_1EB4A6538)
  {
    __int16 v12 = NSString;
    uint64_t v13 = IMFileLocationTrimFileName();
    uint64_t v14 = [NSString stringWithFormat:&stru_1EF2CAD28];
    uint64_t v15 = [v12 stringWithFormat:@"Unexpected nil '%@' in %s at %s:%d. %@", @"IMCNMutableContactClass", "void SetupContactClassesIfNeeded(void)_block_invoke", v13, 201, v14];

    long long v16 = (void (*)(void *))IMGetAssertionFailureHandler();
    if (v16)
    {
      v16(v15);
    }
    else if (IMOSLoggingEnabled())
    {
      uint64_t v17 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v17, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)buf = 138412290;
        v49 = v15;
        _os_log_impl(&dword_1A0772000, v17, OS_LOG_TYPE_INFO, "ASSERTION FAILED: %@", buf, 0xCu);
      }
    }
  }
  qword_1EB4A6528 = MEMORY[0x1A6227910](@"CNLabeledValue", @"Contacts");
  if (!qword_1EB4A6528)
  {
    uint64_t v18 = NSString;
    uint64_t v19 = IMFileLocationTrimFileName();
    id v20 = [NSString stringWithFormat:&stru_1EF2CAD28];
    unint64_t v21 = [v18 stringWithFormat:@"Unexpected nil '%@' in %s at %s:%d. %@", @"IMCNLabeledValueClass", "void SetupContactClassesIfNeeded(void)_block_invoke", v19, 204, v20];

    unsigned __int8 v22 = (void (*)(void *))IMGetAssertionFailureHandler();
    if (v22)
    {
      v22(v21);
    }
    else if (IMOSLoggingEnabled())
    {
      uint64_t v23 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v23, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)buf = 138412290;
        v49 = v21;
        _os_log_impl(&dword_1A0772000, v23, OS_LOG_TYPE_INFO, "ASSERTION FAILED: %@", buf, 0xCu);
      }
    }
  }
  qword_1EB4A6540 = MEMORY[0x1A6227910](@"CNPhoneNumber", @"Contacts");
  if (!qword_1EB4A6540)
  {
    unsigned __int8 v24 = NSString;
    uint64_t v25 = IMFileLocationTrimFileName();
    unint64_t v26 = [NSString stringWithFormat:&stru_1EF2CAD28];
    uint64_t v27 = [v24 stringWithFormat:@"Unexpected nil '%@' in %s at %s:%d. %@", @"IMCNPhoneNumberClass", "void SetupContactClassesIfNeeded(void)_block_invoke", v25, 207, v26];

    uint64_t v28 = (void (*)(void *))IMGetAssertionFailureHandler();
    if (v28)
    {
      v28(v27);
    }
    else if (IMOSLoggingEnabled())
    {
      unsigned __int8 v29 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v29, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)buf = 138412290;
        v49 = v27;
        _os_log_impl(&dword_1A0772000, v29, OS_LOG_TYPE_INFO, "ASSERTION FAILED: %@", buf, 0xCu);
      }
    }
  }
  qword_1EB4A6508 = MEMORY[0x1A6227910](@"CNChangeHistoryFetchRequest", @"Contacts");
  if (!qword_1EB4A6508)
  {
    unint64_t v30 = NSString;
    uint64_t v31 = IMFileLocationTrimFileName();
    uint64_t v32 = [NSString stringWithFormat:&stru_1EF2CAD28];
    uint64_t v33 = [v30 stringWithFormat:@"Unexpected nil '%@' in %s at %s:%d. %@", @"IMCNChangeHistoryFetchRequestClass", "void SetupContactClassesIfNeeded(void)_block_invoke", v31, 210, v32];

    id v34 = (void (*)(void *))IMGetAssertionFailureHandler();
    if (v34)
    {
      v34(v33);
    }
    else if (IMOSLoggingEnabled())
    {
      uint64_t v35 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v35, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)buf = 138412290;
        v49 = v33;
        _os_log_impl(&dword_1A0772000, v35, OS_LOG_TYPE_INFO, "ASSERTION FAILED: %@", buf, 0xCu);
      }
    }
  }
  qword_1EB4A6530 = MEMORY[0x1A6227910](@"CNMeCardSharingPickerViewController", @"ContactsUI");
  if (!qword_1EB4A6530)
  {
    uint64_t v36 = NSString;
    uint64_t v37 = IMFileLocationTrimFileName();
    uint64_t v38 = [NSString stringWithFormat:&stru_1EF2CAD28];
    v39 = [v36 stringWithFormat:@"Unexpected nil '%@' in %s at %s:%d. %@", @"IMCNMeCardSharingPickerViewControllerClass", "void SetupContactClassesIfNeeded(void)_block_invoke", v37, 213, v38];

    uint64_t v40 = (void (*)(void *))IMGetAssertionFailureHandler();
    if (v40)
    {
      v40(v39);
    }
    else if (IMOSLoggingEnabled())
    {
      v41 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v41, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)buf = 138412290;
        v49 = v39;
        _os_log_impl(&dword_1A0772000, v41, OS_LOG_TYPE_INFO, "ASSERTION FAILED: %@", buf, 0xCu);
      }
    }
  }
  qword_1EB4A6520 = MEMORY[0x1A6227910](@"CNGeminiManager", @"Contacts");
  if (!qword_1EB4A6520)
  {
    v42 = NSString;
    uint64_t v43 = IMFileLocationTrimFileName();
    char v44 = [NSString stringWithFormat:&stru_1EF2CAD28];
    v45 = [v42 stringWithFormat:@"Unexpected nil '%@' in %s at %s:%d. %@", @"IMCNGeminiManagerClass", "void SetupContactClassesIfNeeded(void)_block_invoke", v43, 217, v44];

    objc_super v46 = (void (*)(void *))IMGetAssertionFailureHandler();
    if (v46)
    {
      v46(v45);
    }
    else if (IMOSLoggingEnabled())
    {
      uint64_t v47 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v47, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)buf = 138412290;
        v49 = v45;
        _os_log_impl(&dword_1A0772000, v47, OS_LOG_TYPE_INFO, "ASSERTION FAILED: %@", buf, 0xCu);
      }
    }
  }
}

void sub_1A078F5EC()
{
  v2[8] = *MEMORY[0x1E4F143B8];
  v2[0] = @"big";
  v2[1] = @"small";
  v2[2] = @"shakeHorizontal";
  v2[3] = @"shakeVertical";
  v2[4] = @"explode";
  v2[5] = @"bounce";
  v2[6] = @"bloom";
  v2[7] = @"jitter";
  uint64_t v0 = [MEMORY[0x1E4F1C978] arrayWithObjects:v2 count:8];
  uint64_t v1 = (void *)qword_1E94FE9C8;
  qword_1E94FE9C8 = v0;
}

uint64_t sub_1A078F6AC()
{
  uint64_t result = [MEMORY[0x1E4F28B50] bundleWithIdentifier:@"com.apple.imsharedutilities"];
  qword_1E94FF250 = result;
  return result;
}

CFMutableDictionaryRef sub_1A078F6DC()
{
  pthread_mutex_init(&stru_1EB4A6460, 0);
  CFMutableDictionaryRef result = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x1E4F1CF80], 0, 0, 0);
  qword_1EB4A64A8 = (uint64_t)result;
  return result;
}

CFStringRef sub_1A078F724()
{
  MainBundle = CFBundleGetMainBundle();
  CFStringRef result = CFBundleGetIdentifier(MainBundle);
  if (result)
  {
    CFStringRef result = (CFStringRef)CFEqual(result, @"com.apple.mobilesafari");
    BOOL v2 = result != 0;
  }
  else
  {
    BOOL v2 = 0;
  }
  byte_1E94FF2C0 = v2;
  return result;
}

CFStringRef sub_1A078F768()
{
  MainBundle = CFBundleGetMainBundle();
  CFStringRef result = CFBundleGetIdentifier(MainBundle);
  if (result)
  {
    CFStringRef result = (CFStringRef)CFEqual(result, @"com.apple.Safari.SandboxBroker");
    BOOL v2 = result != 0;
  }
  else
  {
    BOOL v2 = 0;
  }
  byte_1E94FF318 = v2;
  return result;
}

CFStringRef sub_1A078F7AC()
{
  MainBundle = CFBundleGetMainBundle();
  CFStringRef result = CFBundleGetIdentifier(MainBundle);
  if (result)
  {
    CFStringRef result = (CFStringRef)CFEqual(result, @"com.apple.SOSBuddy");
    BOOL v2 = result != 0;
  }
  else
  {
    BOOL v2 = 0;
  }
  byte_1E94FF320 = v2;
  return result;
}

uint64_t sub_1A078F7F0()
{
  uint64_t result = objc_msgSend((id)objc_msgSend((id)objc_msgSend(MEMORY[0x1E4F28B50], "mainBundle"), "bundleIdentifier"), "isEqualToString:", @"com.apple.MobileSMS");
  byte_1EB4A6310 = result;
  return result;
}

CFStringRef sub_1A078F828()
{
  MainBundle = CFBundleGetMainBundle();
  CFStringRef result = CFBundleGetIdentifier(MainBundle);
  if (result)
  {
    CFStringRef result = (CFStringRef)CFEqual(result, @"com.apple.MobileSMS");
    BOOL v2 = result != 0;
  }
  else
  {
    BOOL v2 = 0;
  }
  byte_1EB4A60F0 = v2;
  return result;
}

uint64_t sub_1A078F86C()
{
  uint64_t v0 = objc_msgSend((id)objc_msgSend(MEMORY[0x1E4F28B50], "mainBundle"), "bundleIdentifier");
  uint64_t result = objc_msgSend((id)objc_msgSend(MEMORY[0x1E4F1CAD0], "setWithArray:", &unk_1EF305E98), "containsObject:", v0);
  byte_1EB4A5EA0 = result;
  return result;
}

uint64_t sub_1A078F8C0()
{
  uint64_t result = objc_msgSend((id)objc_msgSend((id)objc_msgSend(MEMORY[0x1E4F28B50], "mainBundle"), "bundleIdentifier"), "isEqualToString:", @"com.apple.imagent");
  byte_1EB4A5F78 = result;
  return result;
}

uint64_t sub_1A078F8F8()
{
  uint64_t result = objc_msgSend((id)objc_msgSend((id)objc_msgSend(MEMORY[0x1E4F28B50], "mainBundle"), "bundleIdentifier"), "isEqualToString:", @"com.apple.imdpersistence.IMDPersistenceAgent");
  byte_1E94FF2E8 = result;
  return result;
}

uint64_t sub_1A078F930()
{
  uint64_t v0 = objc_msgSend((id)objc_msgSend(MEMORY[0x1E4F28B50], "mainBundle"), "bundleIdentifier");
  if (([v0 isEqualToString:@"com.apple.MobileSMS"] & 1) != 0
    || ([v0 isEqualToString:@"com.apple.mobilesms.notification"] & 1) != 0
    || ([v0 isEqualToString:@"com.apple.mobilesms.compose"] & 1) != 0
    || ([v0 isEqualToString:@"com.apple.MobileSMS.MessagesNotificationExtension"] & 1) != 0
    || ([v0 isEqualToString:@"com.apple.iChat"] & 1) != 0
    || ([v0 isEqualToString:@"com.apple.messages.AssistantExtension"] & 1) != 0
    || ([v0 isEqualToString:@"com.apple.MobileSMS.MessagesAssistantExtension"] & 1) != 0
    || ([v0 isEqualToString:@"com.apple.messages.ReplyExtension"] & 1) != 0
    || ([v0 isEqualToString:@"com.apple.messages.ShareExtension"] & 1) != 0)
  {
    uint64_t result = 1;
  }
  else
  {
    uint64_t result = [v0 isEqualToString:@"com.apple.MobileSMS.MessagesTranscriptExtension"];
  }
  byte_1E94FF0FB = result;
  return result;
}

CFStringRef sub_1A078FA30()
{
  MainBundle = CFBundleGetMainBundle();
  CFStringRef result = CFBundleGetIdentifier(MainBundle);
  if (result)
  {
    CFStringRef result = (CFStringRef)CFEqual(result, @"com.apple.facetime");
    BOOL v2 = result != 0;
  }
  else
  {
    BOOL v2 = 0;
  }
  byte_1E94FF340 = v2;
  return result;
}

os_log_t sub_1A078FA74()
{
  os_log_t result = os_log_create("com.apple.Messages.telemetry", "MobileSMS");
  qword_1EB4A5FE8 = (uint64_t)result;
  return result;
}

void sub_1A078FAA4()
{
  uint64_t v4 = *MEMORY[0x1E4F143B8];
  byte_1E94FF3D0 = IMGetDomainBoolForKeyWithDefaultValue();
  if (IMOSLoggingEnabled())
  {
    uint64_t v0 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v0, OS_LOG_TYPE_INFO))
    {
      if (byte_1E94FF3D0) {
        uint64_t v1 = @"YES";
      }
      else {
        uint64_t v1 = @"NO";
      }
      int v2 = 138412290;
      uint64_t v3 = v1;
      _os_log_impl(&dword_1A0772000, v0, OS_LOG_TYPE_INFO, "Additional Contacts logging is enabled %@", (uint8_t *)&v2, 0xCu);
    }
  }
}

void sub_1A078FBD0()
{
  uint64_t v4 = *MEMORY[0x1E4F143B8];
  byte_1E94FF090 = IMGetDomainBoolForKeyWithDefaultValue();
  if (IMOSLoggingEnabled())
  {
    uint64_t v0 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v0, OS_LOG_TYPE_INFO))
    {
      if (byte_1E94FF090) {
        uint64_t v1 = @"YES";
      }
      else {
        uint64_t v1 = @"NO";
      }
      int v2 = 138412290;
      uint64_t v3 = v1;
      _os_log_impl(&dword_1A0772000, v0, OS_LOG_TYPE_INFO, "Additional Chat Registry logging is enabled %@", (uint8_t *)&v2, 0xCu);
    }
  }
}

uint64_t sub_1A078FCFC(void *a1)
{
  return (*(uint64_t (**)(void, void, void))(a1[6] + 16))(a1[6], a1[4], a1[5]);
}

void sub_1A078FD14(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (IMOSLoggingEnabled())
  {
    uint64_t v7 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)buf = 0;
      _os_log_impl(&dword_1A0772000, v7, OS_LOG_TYPE_INFO, "DND state asynchronously received", buf, 2u);
    }
  }
  block[0] = MEMORY[0x1E4F143A8];
  block[1] = 3221225472;
  block[2] = sub_1A078FCFC;
  block[3] = &unk_1E5A11F68;
  id v8 = *(id *)(a1 + 32);
  id v13 = v6;
  id v14 = v8;
  id v12 = v5;
  id v9 = v6;
  id v10 = v5;
  dispatch_async(MEMORY[0x1E4F14428], block);
}

void sub_1A078FE58(uint64_t a1, void *a2, void *a3)
{
  uint64_t v12 = *MEMORY[0x1E4F143B8];
  id v5 = a2;
  id v6 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (v6)
  {
    id v8 = IMLogHandleForCategory("IMFocusStateManager");
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_1A09F01BC((uint64_t)v6, v8);
    }
LABEL_4:

    goto LABEL_5;
  }
  if (!v5)
  {
    id v8 = IMLogHandleForCategory("IMFocusStateManager");
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_1A09F0178(v8);
    }
    goto LABEL_4;
  }
  if (IMOSLoggingEnabled())
  {
    id v9 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
    {
      int v10 = 138412290;
      id v11 = v5;
      _os_log_impl(&dword_1A0772000, v9, OS_LOG_TYPE_INFO, "DND state is: %@", (uint8_t *)&v10, 0xCu);
    }
  }
LABEL_5:
  [WeakRetained setDndState:v5];
  [WeakRetained _notifyDelegatesOfDNDStateChange];
}

uint64_t sub_1A078FFD8()
{
  if (_os_feature_enabled_impl()) {
    uint64_t result = 1;
  }
  else {
    uint64_t result = IMGetCachedDomainBoolForKeyWithDefaultValue();
  }
  byte_1E94FF6A0 = result;
  return result;
}

void sub_1A079002C()
{
  DarwinNotifyCenter = CFNotificationCenterGetDarwinNotifyCenter();
  CFNotificationCenterAddObserver(DarwinNotifyCenter, 0, (CFNotificationCallback)sub_1A08408B4, @"com.apple.MobileSMS.MMSEnabled.changed", 0, CFNotificationSuspensionBehaviorDeliverImmediately);
  uint64_t v1 = CFNotificationCenterGetDarwinNotifyCenter();

  CFNotificationCenterAddObserver(v1, 0, (CFNotificationCallback)sub_1A08408B4, @"com.apple.MobileSMS.MMSCapable", 0, CFNotificationSuspensionBehaviorDeliverImmediately);
}

uint64_t sub_1A07900A4()
{
  if (_os_feature_enabled_impl()) {
    uint64_t result = 1;
  }
  else {
    uint64_t result = IMGetCachedDomainBoolForKeyWithDefaultValue();
  }
  byte_1E94FE7E8 = result;
  return result;
}

uint64_t sub_1A07900F8()
{
  if (_os_feature_enabled_impl()) {
    uint64_t result = 1;
  }
  else {
    uint64_t result = IMGetCachedDomainBoolForKeyWithDefaultValue();
  }
  byte_1E94FF2B0 = result;
  return result;
}

void sub_1A079014C(uint64_t a1, void *a2, void *a3)
{
  uint64_t v28 = *MEMORY[0x1E4F143B8];
  id v5 = a2;
  id v6 = a3;
  if (v5)
  {
    uint64_t v7 = [*(id *)(a1 + 32) parents];
    [v7 removeAllObjects];

    long long v23 = 0u;
    long long v24 = 0u;
    long long v21 = 0u;
    long long v22 = 0u;
    id v8 = objc_msgSend(v5, "members", 0);
    BOOL v9 = 0;
    uint64_t v10 = [v8 countByEnumeratingWithState:&v21 objects:v27 count:16];
    if (v10)
    {
      uint64_t v11 = *(void *)v22;
      do
      {
        for (uint64_t i = 0; i != v10; ++i)
        {
          if (*(void *)v22 != v11) {
            objc_enumerationMutation(v8);
          }
          id v13 = *(void **)(*((void *)&v21 + 1) + 8 * i);
          if ([v13 isMe])
          {
            BOOL v9 = [v13 memberType] != -1;
            objc_msgSend(*(id *)(a1 + 32), "setProtectedChildAge:", objc_msgSend(v13, "age"));
          }
          else if ([v13 isParent])
          {
            id v14 = [*(id *)(a1 + 32) parents];
            [v14 addObject:v13];
          }
        }
        uint64_t v10 = [v8 countByEnumeratingWithState:&v21 objects:v27 count:16];
      }
      while (v10);
    }

    BOOL v15 = v9;
    if (IMOSLoggingEnabled())
    {
      long long v16 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v16, OS_LOG_TYPE_INFO))
      {
        uint64_t v17 = [*(id *)(a1 + 32) parents];
        uint64_t v18 = [v17 count];
        *(_DWORD *)buf = 134217984;
        uint64_t v26 = v18;
        _os_log_impl(&dword_1A0772000, v16, OS_LOG_TYPE_INFO, "Finished updating, found total parents: %lu", buf, 0xCu);
      }
    }
  }
  else
  {
    if (IMOSLoggingEnabled())
    {
      uint64_t v19 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v19, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)buf = 138412290;
        uint64_t v26 = (uint64_t)v6;
        _os_log_impl(&dword_1A0772000, v19, OS_LOG_TYPE_INFO, "IMCommSafetySettingsManager: Error fetching FamilyCircle: %@", buf, 0xCu);
      }
    }
    BOOL v15 = 0;
  }
  uint64_t v20 = *(void *)(a1 + 40);
  if (v20) {
    (*(void (**)(uint64_t, BOOL, id))(v20 + 16))(v20, v15, v6);
  }
}

uint64_t sub_1A0790414()
{
  uint64_t v0 = [MEMORY[0x1E4F28B50] mainBundle];
  uint64_t v1 = [v0 bundleIdentifier];
  int v2 = [v1 isEqualToString:@"com.apple.MobileSMS"];

  if (v2)
  {
    uint64_t v3 = [MEMORY[0x1E4F1CB18] standardUserDefaults];
  }
  else
  {
    uint64_t v3 = [objc_alloc(MEMORY[0x1E4F1CB18]) initWithSuiteName:@"com.apple.MobileSMS"];
  }
  uint64_t v4 = qword_1EB4A61C8;
  qword_1EB4A61C8 = v3;

  return MEMORY[0x1F41817F8](v3, v4);
}

uint64_t sub_1A07904B4()
{
  if (_os_feature_enabled_impl()) {
    uint64_t result = 1;
  }
  else {
    uint64_t result = IMGetCachedDomainBoolForKeyWithDefaultValue();
  }
  byte_1E94FF290 = result;
  return result;
}

void sub_1A0790508()
{
  if (IMIsRunningInUnitTesting())
  {
    id v2 = [MEMORY[0x1E4F28F80] processInfo];
    uint64_t v0 = [v2 environment];
    uint64_t v1 = [v0 objectForKey:@"IMFEATUREFLAGS_STRICT"];
    byte_1E94FF8F0 = [v1 BOOLValue];
  }
}

uint64_t sub_1A07905A0()
{
  if (_os_feature_enabled_impl()) {
    uint64_t result = 1;
  }
  else {
    uint64_t result = IMGetCachedDomainBoolForKeyWithDefaultValue();
  }
  byte_1E94FE7D0 = result;
  return result;
}

uint64_t sub_1A07905F4()
{
  id v0 = objc_alloc(MEMORY[0x1E4F6AB90]);
  uint64_t v1 = [v0 initWithService:*MEMORY[0x1E4F6AA78]];
  uint64_t v2 = qword_1E94FF100;
  qword_1E94FF100 = v1;

  return MEMORY[0x1F41817F8](v1, v2);
}

IMSharedMessageSendingUtilities *sub_1A0790640()
{
  uint64_t result = objc_alloc_init(IMSharedMessageSendingUtilities);
  qword_1EB4A6660 = (uint64_t)result;
  return result;
}

void sub_1A0790668(uint64_t a1)
{
  uint64_t v7 = *MEMORY[0x1E4F143B8];
  *(unsigned char *)(*(void *)(a1 + 32) + 12) = [*(id *)(a1 + 40) isCommunicationSafetyAnalyticsEnabled];
  uint64_t v2 = +[IMDefaults sharedInstance];
  uint64_t v3 = [NSNumber numberWithBool:*(unsigned __int8 *)(*(void *)(a1 + 32) + 12)];
  [v2 setValue:v3 forDomain:@"com.apple.messages.commsafety" forKey:@"CheckSensitivePhotosAnalytics"];

  *(void *)(*(void *)(a1 + 32) + 16) = [*(id *)(a1 + 32) _fetchEnablementGroup];
  if (IMOSLoggingEnabled())
  {
    uint64_t v4 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
    {
      int v5 = *(unsigned __int8 *)(*(void *)(a1 + 32) + 12);
      v6[0] = 67109120;
      v6[1] = v5;
      _os_log_impl(&dword_1A0772000, v4, OS_LOG_TYPE_INFO, "Check sensitive photo analytics: %d", (uint8_t *)v6, 8u);
    }
  }
  *(unsigned char *)(*(void *)(a1 + 32) + 13) = *(unsigned char *)(a1 + 48);
  *(unsigned char *)(*(void *)(a1 + 32) + 15) = 1;
}

uint64_t sub_1A07907DC()
{
  uint64_t result = MEMORY[0x1A6227910](@"WLKURLBagUtilities", @"WatchListKit");
  qword_1EB4A5DC0 = result;
  return result;
}

uint64_t sub_1A079080C()
{
  if (_os_feature_enabled_impl()) {
    uint64_t result = 1;
  }
  else {
    uint64_t result = IMGetCachedDomainBoolForKeyWithDefaultValue();
  }
  byte_1EB4A63F0 = result;
  return result;
}

uint64_t sub_1A0790860()
{
  uint64_t result = IMGetCachedDomainBoolForKey();
  byte_1E94FE750 = result;
  return result;
}

uint64_t sub_1A0790890()
{
  id v0 = objc_alloc_init(IMCommSafetySettingsManager);
  uint64_t v1 = qword_1EB4A6220;
  qword_1EB4A6220 = (uint64_t)v0;

  return MEMORY[0x1F41817F8](v0, v1);
}

uint64_t sub_1A07908CC()
{
  CFPropertyListRef v0 = CFPreferencesCopyAppValue(@"StoreDemoMode", @"com.apple.demo-settings");
  uint64_t result = [(id)(id)CFMakeCollectable(v0) BOOLValue];
  byte_1E94FF338 = result;
  return result;
}

uint64_t sub_1A0790908()
{
  if (_os_feature_enabled_impl()) {
    uint64_t result = 1;
  }
  else {
    uint64_t result = IMGetCachedDomainBoolForKeyWithDefaultValue();
  }
  byte_1EB4A5DE8 = result;
  return result;
}

uint64_t sub_1A079095C()
{
  if (_os_feature_enabled_impl()) {
    uint64_t result = 1;
  }
  else {
    uint64_t result = IMGetCachedDomainBoolForKeyWithDefaultValue();
  }
  byte_1EB4A6558 = result;
  return result;
}

uint64_t sub_1A07909B0()
{
  CFPropertyListRef v0 = objc_alloc_init(IMCTSubscriptionUtilities);
  uint64_t v1 = qword_1EB4A6650;
  qword_1EB4A6650 = (uint64_t)v0;

  return MEMORY[0x1F41817F8](v0, v1);
}

uint64_t sub_1A07909EC()
{
  if (_os_feature_enabled_impl()) {
    uint64_t result = 1;
  }
  else {
    uint64_t result = IMGetCachedDomainBoolForKeyWithDefaultValue();
  }
  byte_1EB4A5F10 = result;
  return result;
}

uint64_t sub_1A0790A40()
{
  CFPropertyListRef v0 = objc_alloc_init(IMDualSIMUtilitiesManager);
  uint64_t v1 = qword_1EB4A5E10;
  qword_1EB4A5E10 = (uint64_t)v0;

  return MEMORY[0x1F41817F8](v0, v1);
}

uint64_t sub_1A0790A7C()
{
  if (_os_feature_enabled_impl()) {
    uint64_t result = 1;
  }
  else {
    uint64_t result = IMGetCachedDomainBoolForKeyWithDefaultValue();
  }
  byte_1E94FF9A8 = result;
  return result;
}

uint64_t sub_1A0790AD0()
{
  if (_os_feature_enabled_impl()) {
    uint64_t result = 1;
  }
  else {
    uint64_t result = IMGetCachedDomainBoolForKeyWithDefaultValue();
  }
  byte_1EB4A5F68 = result;
  return result;
}

uint64_t sub_1A0790B24()
{
  id v0 = objc_alloc_init((Class)objc_opt_class());
  uint64_t v1 = qword_1EB4A6118;
  qword_1EB4A6118 = (uint64_t)v0;

  return MEMORY[0x1F41817F8](v0, v1);
}

uint64_t sub_1A0790B60()
{
  if (_os_feature_enabled_impl()) {
    uint64_t result = 1;
  }
  else {
    uint64_t result = IMGetCachedDomainBoolForKeyWithDefaultValue();
  }
  byte_1EB4A6228 = result;
  return result;
}

uint64_t sub_1A0790BB4()
{
  id v0 = objc_alloc_init(IMSharedWithYouManager);
  uint64_t v1 = qword_1EB4A6218;
  qword_1EB4A6218 = (uint64_t)v0;

  return MEMORY[0x1F41817F8](v0, v1);
}

uint64_t sub_1A0790BF0()
{
  uint64_t result = IMGetCachedDomainBoolForKey();
  byte_1E94FF728 = result;
  return result;
}

void sub_1A0790C20()
{
  uint64_t v2 = dispatch_queue_attr_make_with_qos_class(0, QOS_CLASS_USER_INITIATED, 0);
  dispatch_queue_t v0 = dispatch_queue_create("IMContactStoreQueue", v2);
  uint64_t v1 = (void *)qword_1EB4A5F40;
  qword_1EB4A5F40 = (uint64_t)v0;
}

uint64_t sub_1A0790C88()
{
  if (_os_feature_enabled_impl()) {
    uint64_t result = 1;
  }
  else {
    uint64_t result = IMGetCachedDomainBoolForKeyWithDefaultValue();
  }
  byte_1E94FF0C0 = result;
  return result;
}

IMMetricsCollector *sub_1A0790CDC()
{
  uint64_t result = objc_alloc_init(IMMetricsCollector);
  qword_1EB4A66B8 = (uint64_t)result;
  return result;
}

uint64_t sub_1A0790D04()
{
  dispatch_queue_t v0 = objc_alloc_init(IMFocusStateManager);
  uint64_t v1 = qword_1EB4A6110;
  qword_1EB4A6110 = (uint64_t)v0;

  return MEMORY[0x1F41817F8](v0, v1);
}

uint64_t sub_1A0790D40()
{
  dispatch_queue_t v0 = objc_alloc_init(IMFeatureFlags);
  uint64_t v1 = qword_1EB4A65E0;
  qword_1EB4A65E0 = (uint64_t)v0;

  return MEMORY[0x1F41817F8](v0, v1);
}

void sub_1A0790D7C(uint64_t a1, uint64_t a2, void *a3)
{
  id v5 = a3;
  if (v5)
  {
    id v6 = IMLogHandleForCategory("IMFocusStateManager");
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR)) {
      sub_1A09F0100((uint64_t)v5, v6);
    }
LABEL_10:

    goto LABEL_11;
  }
  if ((a2 & 1) == 0)
  {
    id v6 = IMLogHandleForCategory("IMFocusStateManager");
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR)) {
      sub_1A09F00BC(v6);
    }
    goto LABEL_10;
  }
  if (IMOSLoggingEnabled())
  {
    id v6 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)id v8 = 0;
      _os_log_impl(&dword_1A0772000, v6, OS_LOG_TYPE_INFO, "Successfully registered for dnd state updates.", v8, 2u);
    }
    goto LABEL_10;
  }
LABEL_11:
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained setRegisteredAsStateUpdateListener:a2];
}

uint64_t sub_1A0790EA8()
{
  if (_os_feature_enabled_impl()) {
    uint64_t result = 1;
  }
  else {
    uint64_t result = IMGetCachedDomainBoolForKeyWithDefaultValue();
  }
  byte_1EB4A5F20 = result;
  return result;
}

uint64_t sub_1A0790EFC(uint64_t a1)
{
  BOOL v2 = IMSharedHelperDeviceIsiPad();
  uint64_t v3 = *(void **)(a1 + 32);
  if (v2) {
    uint64_t result = [v3 _isSendMenuEnabledForiPad];
  }
  else {
    uint64_t result = [v3 _isSendMenuEnabled];
  }
  byte_1EB4A5F00 = result;
  return result;
}

void sub_1A0790F40(uint64_t a1)
{
  uint64_t v1 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _updateSettings];

  id v3 = objc_loadWeakRetained(v1);
  [v3 _connectToFamilyCircle:0];
}

uint64_t sub_1A0790FA4()
{
  if (_os_feature_enabled_impl()) {
    uint64_t result = 1;
  }
  else {
    uint64_t result = IMGetCachedDomainBoolForKeyWithDefaultValue();
  }
  byte_1EB4A5F30 = result;
  return result;
}

uint64_t sub_1A0790FF4()
{
  if (_os_feature_enabled_impl()) {
    uint64_t result = 1;
  }
  else {
    uint64_t result = IMGetCachedDomainBoolForKeyWithDefaultValue();
  }
  byte_1EB4A6060 = result;
  return result;
}

uint64_t sub_1A0791048()
{
  if (_os_feature_enabled_impl()) {
    uint64_t result = 1;
  }
  else {
    uint64_t result = IMGetCachedDomainBoolForKeyWithDefaultValue();
  }
  byte_1EB4A6150 = result;
  return result;
}

uint64_t sub_1A079109C()
{
  dispatch_queue_t v0 = objc_alloc_init(IMContactStore);
  uint64_t v1 = qword_1EB4A6668;
  qword_1EB4A6668 = (uint64_t)v0;

  return MEMORY[0x1F41817F8](v0, v1);
}

uint64_t sub_1A07910D8()
{
  dispatch_queue_t v0 = objc_alloc_init(IMMutedChatList);
  uint64_t v1 = qword_1EB4A63D8;
  qword_1EB4A63D8 = (uint64_t)v0;

  return MEMORY[0x1F41817F8](v0, v1);
}

IMDefaults *sub_1A0791114()
{
  uint64_t result = objc_alloc_init(IMDefaults);
  qword_1EB4A6500 = (uint64_t)result;
  return result;
}

uint64_t sub_1A079113C()
{
  if (qword_1EB4A60E0 != -1) {
    dispatch_once(&qword_1EB4A60E0, &unk_1EF2C0120);
  }
  if (!qword_1EB4A60D8 || (objc_opt_respondsToSelector() & 1) == 0) {
    return 0;
  }
  dispatch_queue_t v0 = (void *)qword_1EB4A60D8;

  return [v0 sharedInstance];
}

uint64_t sub_1A07911C0()
{
  uint64_t v6 = *MEMORY[0x1E4F143B8];
  v3[0] = 0;
  if (!qword_1EB4A6130)
  {
    v3[1] = MEMORY[0x1E4F143A8];
    void v3[2] = 3221225472;
    v3[3] = sub_1A0865158;
    v3[4] = &unk_1E5A10168;
    v3[5] = v3;
    long long v4 = xmmword_1E5A14A10;
    uint64_t v5 = 0;
    qword_1EB4A6130 = _sl_dlopen();
  }
  uint64_t v0 = qword_1EB4A6130;
  uint64_t v1 = (void *)v3[0];
  if (!qword_1EB4A6130)
  {
    uint64_t v1 = (void *)abort_report_np();
    goto LABEL_7;
  }
  if (v3[0]) {
LABEL_7:
  }
    free(v1);
  return v0;
}

void sub_1A07912C0()
{
  uint64_t v0 = IMPreviewGeneratorClasses();
  block[0] = MEMORY[0x1E4F143A8];
  block[1] = 3221225472;
  block[2] = sub_1A078891C;
  block[3] = &unk_1E5A10B08;
  void block[4] = v0;
  if (qword_1EB4A62D0 != -1) {
    dispatch_once(&qword_1EB4A62D0, block);
  }
}

id sub_1A0791370()
{
  uint64_t v1 = sub_1A09F3668();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = ((uint64_t (*)(void))MEMORY[0x1F4188790])();
  uint64_t v37 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v34 - v5;
  uint64_t v7 = sub_1A09F3688();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1A09F36B8();
  uint64_t v38 = *(void *)(v11 - 8);
  uint64_t v39 = v11;
  uint64_t v12 = MEMORY[0x1F4188790](v11);
  uint64_t v36 = (char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  BOOL v15 = (char *)&v34 - v14;
  long long v16 = &v0[OBJC_IVAR___IMGenerativeModelsAvailabilityProvider_summarizationUseCaseIdentifier];
  *(void *)long long v16 = 0xD000000000000022;
  *((void *)v16 + 1) = 0x80000001A0A34500;
  uint64_t v17 = &v0[OBJC_IVAR___IMGenerativeModelsAvailabilityProvider_generativePlaygroundUseCaseIdentifier];
  *(void *)uint64_t v17 = 0xD000000000000025;
  *((void *)v17 + 1) = 0x80000001A0A34530;
  v41 = v0;
  uint64_t v18 = v2;
  sub_1A09F3678();
  sub_1A09F36A8();
  uint64_t v19 = *(void (**)(char *, uint64_t))(v8 + 8);
  uint64_t v34 = v7;
  v19(v10, v7);
  uint64_t v35 = v15;
  sub_1A09F3698();
  uint64_t v20 = v1;
  long long v21 = *(uint64_t (**)(char *, uint64_t))(v18 + 88);
  int v22 = v21(v6, v20);
  int v23 = *MEMORY[0x1E4F63C38];
  uint64_t v40 = v18;
  if (v22 == v23)
  {
    (*(void (**)(char *, uint64_t))(v18 + 8))(v6, v20);
LABEL_5:
    v41[OBJC_IVAR___IMGenerativeModelsAvailabilityProvider_summarizationModelsAvailable] = 1;
    goto LABEL_7;
  }
  if (v22 != *MEMORY[0x1E4F63C50] && v22 == *MEMORY[0x1E4F63D30]) {
    goto LABEL_5;
  }
  v41[OBJC_IVAR___IMGenerativeModelsAvailabilityProvider_summarizationModelsAvailable] = 0;
  (*(void (**)(char *, uint64_t))(v18 + 8))(v6, v20);
LABEL_7:
  uint64_t v24 = v20;
  swift_bridgeObjectRetain();
  sub_1A09F3678();
  uint64_t v25 = v36;
  sub_1A09F36A8();
  v19(v10, v34);
  uint64_t v26 = v37;
  sub_1A09F3698();
  int v27 = v21(v26, v20);
  if (v27 == v23)
  {
    (*(void (**)(char *, uint64_t))(v40 + 8))(v26, v20);
    uint64_t v28 = v41;
  }
  else
  {
    uint64_t v29 = v40;
    uint64_t v28 = v41;
    if (v27 == *MEMORY[0x1E4F63C50] || v27 != *MEMORY[0x1E4F63D30])
    {
      v41[OBJC_IVAR___IMGenerativeModelsAvailabilityProvider_generativePlaygroundModelsAvailable] = 0;

      (*(void (**)(char *, uint64_t))(v29 + 8))(v26, v24);
      goto LABEL_13;
    }
  }
  v28[OBJC_IVAR___IMGenerativeModelsAvailabilityProvider_generativePlaygroundModelsAvailable] = 1;

LABEL_13:
  v42.receiver = v28;
  v42.super_class = (Class)IMGenerativeModelsAvailabilityProvider;
  id v30 = objc_msgSendSuper2(&v42, sel_init);
  uint64_t v31 = v39;
  uint64_t v32 = *(void (**)(char *, uint64_t))(v38 + 8);
  v32(v25, v39);
  v32(v35, v31);
  return v30;
}

id sub_1A079181C()
{
  id result = objc_msgSend(objc_allocWithZone((Class)IMGenerativeModelsAvailabilityProvider), sel_init);
  qword_1E94F76E8 = (uint64_t)result;
  return result;
}

uint64_t sub_1A079185C(uint64_t a1, uint64_t a2, void *a3)
{
  if (qword_1E94F76E0 != -1) {
    swift_once();
  }
  return *(unsigned __int8 *)(qword_1E94F76E8 + *a3);
}

void sub_1A079193C()
{
  uint64_t v1 = v0;
  uint64_t v8 = *MEMORY[0x1E4F143B8];
  int v7 = -1;
  uint64_t v6 = 0;
  sub_1A078231C(0, (unint64_t *)&qword_1EB4A5CC0);
  uint64_t v2 = (void *)sub_1A09F43E8();
  uint64_t v3 = swift_allocObject();
  swift_unknownObjectWeakInit();
  aBlock[4] = sub_1A08F1FC0;
  aBlock[5] = v3;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A077E904;
  aBlock[3] = &unk_1EF2C0E70;
  uint64_t v4 = _Block_copy(aBlock);
  swift_release();
  im_notify_register_dispatch();
  _Block_release(v4);

  *(unsigned char *)(v1 + OBJC_IVAR___IMServiceAvailabilityMonitor_rcsEnabled) = v6 != 0;
}

void sub_1A0791A9C()
{
  uint64_t v1 = v0;
  void aBlock[6] = *MEMORY[0x1E4F143B8];
  sub_1A078231C(0, (unint64_t *)&qword_1EB4A5CC0);
  uint64_t v2 = (void *)sub_1A09F43E8();
  uint64_t v3 = swift_allocObject();
  swift_unknownObjectWeakInit();
  aBlock[4] = sub_1A077E964;
  aBlock[5] = v3;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A077E904;
  aBlock[3] = &unk_1EF2C1000;
  uint64_t v4 = _Block_copy(aBlock);
  swift_release();
  swift_beginAccess();
  im_notify_register_dispatch();
  swift_endAccess();
  _Block_release(v4);

  *(unsigned char *)(v1 + OBJC_IVAR___IMServiceAvailabilityMonitor_mmsEnabled) = 0;
}

uint64_t sub_1A0791CAC()
{
  uint64_t v1 = v0 + OBJC_IVAR___IMCTRCSUtilitiesManager_delegate;
  if (!MEMORY[0x1A6228D10](v0 + OBJC_IVAR___IMCTRCSUtilitiesManager_delegate)) {
    return 0;
  }
  uint64_t v2 = *(void *)(v1 + 8);
  uint64_t ObjectType = swift_getObjectType();
  unint64_t v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 64))(ObjectType, v2);
  uint64_t result = swift_unknownObjectRelease();
  if (!(v4 >> 62))
  {
    uint64_t v6 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v6) {
      goto LABEL_4;
    }
LABEL_18:
    swift_bridgeObjectRelease();
    return v6;
  }
LABEL_22:
  swift_bridgeObjectRetain();
  uint64_t v6 = sub_1A09F47B8();
  uint64_t result = swift_bridgeObjectRelease();
  if (!v6) {
    goto LABEL_18;
  }
LABEL_4:
  if ((v4 & 0xC000000000000001) != 0)
  {
    id v7 = (id)MEMORY[0x1A6226890](0, v4);
LABEL_7:
    uint64_t v8 = v7;
    char v9 = sub_1A087361C((uint64_t)v7);

    if (v9)
    {
      uint64_t v6 = 1;
    }
    else
    {
      uint64_t v10 = 0;
      uint64_t v11 = v6 - 1;
      while (1)
      {
        uint64_t v6 = v11 != v10;
        if (v11 == v10) {
          break;
        }
        unint64_t v12 = v10 + 1;
        if ((v4 & 0xC000000000000001) != 0)
        {
          id v13 = (id)MEMORY[0x1A6226890](v10 + 1, v4);
        }
        else
        {
          if (v12 >= *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            goto LABEL_21;
          }
          id v13 = *(id *)(v4 + 8 * v10 + 40);
        }
        uint64_t v14 = v13;
        if (__OFADD__(v12, 1))
        {
          __break(1u);
LABEL_21:
          __break(1u);
          goto LABEL_22;
        }
        char v15 = sub_1A087361C((uint64_t)v13);

        ++v10;
        if (v15) {
          goto LABEL_18;
        }
      }
    }
    goto LABEL_18;
  }
  if (*(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v7 = *(id *)(v4 + 32);
    goto LABEL_7;
  }
  __break(1u);
  return result;
}

void sub_1A0791E54()
{
  if (qword_1EB4A5A28 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)qword_1EB4A5A18;
  id v1 = objc_allocWithZone((Class)IMCTRCSUtilitiesManager);
  id v2 = v0;
  uint64_t v3 = (char *)objc_msgSend(v1, sel_init);
  *(void *)&v3[OBJC_IVAR___IMCTRCSUtilitiesManager_delegate + 8] = &off_1EF2C1BF8;
  swift_unknownObjectWeakAssign();

  qword_1EB4A5A60 = (uint64_t)v3;
}

uint64_t sub_1A0791F00()
{
  if ((IMIsRunningInImagent() & 1) != 0 || IMIsRunningInIMDPersistenceAgent()) {
    uint64_t result = 1;
  }
  else {
    uint64_t result = IMIsRunningInMessagesUIProcess();
  }
  byte_1E9522578 = result;
  return result;
}

void *static IMSyncedSettingsKey.allCases.getter()
{
  return &unk_1EF2BE020;
}

id sub_1A0791F68()
{
  id result = objc_msgSend(objc_allocWithZone((Class)IMUnlockMonitor), sel_init);
  qword_1EB4A59D8 = (uint64_t)result;
  return result;
}

uint64_t sub_1A0791F9C()
{
  sub_1A078231C(0, (unint64_t *)&qword_1EB4A5CC0);
  uint64_t v0 = sub_1A09F3A68();
  MEMORY[0x1F4188790](v0 - 8);
  sub_1A09F3A58();
  uint64_t v1 = sub_1A09F43C8();
  MEMORY[0x1F4188790](v1);
  v6[1] = MEMORY[0x1E4FBC860];
  sub_1A07926B4(qword_1EB4A5C38, MEMORY[0x1F41AB0F0]);
  sub_1A07856F8(&qword_1EB4A5C20);
  sub_1A0792508((unint64_t *)&qword_1EB4A5C28, &qword_1EB4A5C20);
  sub_1A09F45B8();
  uint64_t v2 = sub_1A09F43D8();
  MEMORY[0x1F4188790](v2);
  (*(void (**)(char *, void))(v4 + 104))((char *)v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E4FBCC50]);
  uint64_t result = sub_1A09F4428();
  qword_1EB4A59C0 = result;
  return result;
}

id sub_1A07921C8(id *a1)
{
  return objc_msgSend(*a1, sel_addObject_, *(void *)(v1 + 16));
}

void sub_1A0792200(void *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  swift_unknownObjectRetain();
  id v7 = a1;
  a4(a3);
  swift_unknownObjectRelease();
}

uint64_t sub_1A0792290(uint64_t result)
{
  if (result)
  {
    uint64_t v2 = *(void *)(v1 + OBJC_IVAR___IMUnlockMonitor_listeners);
    MEMORY[0x1F4188790](result);
    swift_unknownObjectRetain();
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v2 + 24));
    sub_1A07921C8((id *)(v2 + 16));
    os_unfair_lock_unlock((os_unfair_lock_t)(v2 + 24));
    swift_release();
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1A0792344()
{
  if (qword_1EB4A5B88 != -1) {
    uint64_t result = swift_once();
  }
  if (qword_1EB4A5BF0 != -1)
  {
    return swift_once();
  }
  return result;
}

id static NSXPCInterface.messagesDaemonListener.getter()
{
  return sub_1A0780130(&qword_1EB4A5B88, (void **)&qword_1EB4A5BB0);
}

id sub_1A07923EC()
{
  id result = sub_1A078202C();
  qword_1EB4A5BA8 = (uint64_t)result;
  return result;
}

id static NSXPCInterface.messagesDaemon.getter()
{
  return sub_1A0780130(&qword_1EB4A5BF0, (void **)&qword_1EB4A5BA8);
}

void sub_1A0792430(void *a1, uint64_t a2, uint64_t a3)
{
  id v4 = a1;
  id v5 = (id)sub_1A09F3DE8();
  objc_msgSend(v4, sel_setBool_forKey_, a3, v5);
}

void sub_1A07924B0()
{
  LOBYTE(xmmword_1EB4A58B8) = 1;
  *((void *)&xmmword_1EB4A58B8 + 1) = 0x6148746F42534352;
  unk_1EB4A58C8 = 0xED000073656C646ELL;
  qword_1EB4A58D0 = MEMORY[0x1E4FBC860];
  *(void *)&xmmword_1EB4A58D8 = MEMORY[0x1E4FBC860];
  *((void *)&xmmword_1EB4A58D8 + 1) = sub_1A0784A78;
  qword_1EB4A58E8 = 0;
}

uint64_t sub_1A0792508(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1A078D800(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1A0792558(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1A078D800(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1A079259C(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  sub_1A07856F8(&qword_1E94F7628);
  uint64_t v2 = (void *)sub_1A09F47E8();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  id v4 = (id *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = (uint64_t)*(v4 - 2);
    uint64_t v6 = (uint64_t)*(v4 - 1);
    id v7 = *v4;
    id v8 = *v4;
    swift_bridgeObjectRetain();
    unint64_t result = sub_1A087AAA4(v5, v6);
    if (v10) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v2[6] + 16 * result);
    uint64_t *v11 = v5;
    v11[1] = v6;
    *(void *)(v2[7] + 8 * result) = v7;
    uint64_t v12 = v2[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v4 += 3;
    v2[2] = v14;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_1A07926B4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1A07926FC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1A0792744()
{
  uint64_t v0 = sub_1A09F39E8();
  sub_1A078D848(v0, qword_1EB4A5A30);
  sub_1A078510C(v0, (uint64_t)qword_1EB4A5A30);
  return sub_1A09F39D8();
}

uint64_t type metadata accessor for IMCTRCSUtilitiesManagerLiveDelegate()
{
  return self;
}

id sub_1A07927EC(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 8), sel_setDelegate_, *(void *)(v1 + 16));
}

uint64_t sub_1A0792824()
{
  id v0 = objc_msgSend(self, sel_sharedInstance);
  id v1 = objc_msgSend(v0, sel_ctSubscriptionInfo);

  if (!v1) {
    return MEMORY[0x1E4FBC860];
  }
  id v2 = objc_msgSend(v1, sel___im_subscriptionsWithRCSSupport);

  sub_1A078231C(0, (unint64_t *)&unk_1E94F7730);
  uint64_t v3 = sub_1A09F4078();

  return v3;
}

id sub_1A07928E0()
{
  id result = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for IMCTRCSUtilitiesManagerLiveDelegate()), sel_init);
  qword_1EB4A5A18 = (uint64_t)result;
  return result;
}

uint64_t type metadata accessor for IMCTRCSUtilitiesManagerLiveDelegate.Token()
{
  return self;
}

ValueMetadata *type metadata accessor for IMCTRCSUtilitiesManagerLiveDelegate.State()
{
  return &type metadata for IMCTRCSUtilitiesManagerLiveDelegate.State;
}

uint64_t sub_1A0792948(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F41863F8](a1, a2, a3, 16);
}

uint64_t type metadata accessor for IMCTChatBotCache()
{
  return self;
}

id sub_1A0792998()
{
  id v1 = objc_allocWithZone(MEMORY[0x1E4F1C998]);
  id v2 = v0;
  id v3 = objc_msgSend(v1, sel_init);
  *(void *)&v2[OBJC_IVAR____TtC17IMSharedUtilities16IMCTChatBotCache_cache] = v3;
  id v4 = v3;
  objc_msgSend(v4, sel_setCountLimit_, sub_1A0792BA4());

  sub_1A078231C(0, (unint64_t *)&qword_1EB4A5CC0);
  uint64_t v5 = sub_1A09F3A48();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  id v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E4FBCB30], v5);
  char v9 = (void *)sub_1A09F4438();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  id v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F23A80]), sel_initWithQueue_, v9);

  *(void *)&v2[OBJC_IVAR____TtC17IMSharedUtilities16IMCTChatBotCache_client] = v10;
  id v11 = v10;

  uint64_t v12 = (objc_class *)type metadata accessor for IMCTChatBotCache();
  v15.receiver = v2;
  v15.super_class = v12;
  id v13 = objc_msgSendSuper2(&v15, sel_init);
  objc_msgSend(v11, sel_setDelegate_, v13);

  return v13;
}

id sub_1A0792B74()
{
  id result = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for IMCTChatBotCache()), sel_init);
  qword_1E9522580 = (uint64_t)result;
  return result;
}

uint64_t sub_1A0792BA4()
{
  id v0 = objc_msgSend(self, sel_sharedInstanceForBagType_, 1);
  id v1 = (void *)sub_1A09F3DE8();
  id v2 = objc_msgSend(v0, sel_objectForKey_, v1);

  if (v2)
  {
    sub_1A09F4588();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v6, 0, sizeof(v6));
  }
  sub_1A0784BA0((uint64_t)v6, (uint64_t)v7);
  if (!v8)
  {
    sub_1A0783C7C((uint64_t)v7);
    return 5000;
  }
  sub_1A078231C(0, (unint64_t *)&qword_1EB4A59B8);
  if ((swift_dynamicCast() & 1) == 0) {
    return 5000;
  }
  id v3 = objc_msgSend(v5, sel_integerValue);

  return (uint64_t)v3;
}

uint64_t sub_1A0792CE4()
{
  id v1 = *(void (**)(uint64_t))(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 32) + 24;
  swift_beginAccess();
  v1(v2);
  return swift_endAccess();
}

uint64_t sub_1A0792D60()
{
  return sub_1A0792CE4();
}

uint64_t sub_1A0792D78()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for MainThreadOnly()
{
  return sub_1A0780100();
}

uint64_t MainThreadOnly.init(initialValue:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 32))(a3, a1, a2);
}

uint64_t sub_1A0792E58(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v5 = objc_msgSend(a1, "objectForKey:");
  uint64_t v6 = v5;
  if (v5) {
    a4 = [v5 unsignedIntegerValue];
  }

  return a4;
}

double sub_1A0792E9C(void *a1, double a2)
{
  id v3 = objc_msgSend(a1, "objectForKey:");
  id v4 = v3;
  if (v3)
  {
    [v3 doubleValue];
    a2 = v5;
  }

  return a2;
}

uint64_t sub_1A0792EE8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  double v5 = objc_msgSend(a1, "objectForKey:");
  uint64_t v6 = v5;
  if (v5) {
    a4 = [v5 BOOLValue];
  }

  return a4;
}

void sub_1A0793624(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1A0795298(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1A07955DC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
  _Block_object_dispose((const void *)(v20 - 96), 8);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1A0795CF0(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 64), 8);
  _Unwind_Resume(a1);
}

void sub_1A0795E08(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

IMSingletonProxy *sub_1A0796970()
{
  id v0 = objc_alloc_init((Class)objc_opt_class());
  int v1 = byte_1E94FF850;
  uint64_t v2 = IMLogHandleForCategory("IMSingletonLog");
  BOOL v3 = os_log_type_enabled(v2, OS_LOG_TYPE_DEBUG);
  if (v1)
  {
    if (v3) {
      sub_1A09F1E0C();
    }

    id v4 = [[IMSingletonProxy alloc] initWithSingleton:v0 singletonOverride:0];
  }
  else
  {
    if (v3) {
      sub_1A09F1D84();
    }

    id v4 = (IMSingletonProxy *)v0;
  }
  double v5 = v4;

  return v5;
}

void sub_1A0796BD8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
}

void sub_1A0797FE0(_Unwind_Exception *a1, int a2)
{
  if (a2 == 1)
  {
    objc_begin_catch(a1);
    objc_end_catch();
    JUMPOUT(0x1A0797F58);
  }
  _Unwind_Resume(a1);
}

uint64_t IMSharedUtilitiesProtoCloudKitEncryptedMessageP4ReadFrom(uint64_t a1, uint64_t a2)
{
  BOOL v3 = (int *)MEMORY[0x1E4F940E8];
  id v4 = (int *)MEMORY[0x1E4F940E0];
  double v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      switch((v10 >> 3))
      {
        case 1u:
          char v17 = 0;
          unsigned int v18 = 0;
          uint64_t v19 = 0;
          *(unsigned char *)(a1 + 52) |= 4u;
          while (1)
          {
            uint64_t v20 = *v3;
            unint64_t v21 = *(void *)(a2 + v20);
            if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
              break;
            }
            char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
            *(void *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0) {
              goto LABEL_48;
            }
            v17 += 7;
            BOOL v14 = v18++ >= 9;
            if (v14)
            {
              LODWORD(v19) = 0;
              goto LABEL_50;
            }
          }
          *(unsigned char *)(a2 + *v5) = 1;
LABEL_48:
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v19) = 0;
          }
LABEL_50:
          uint64_t v40 = 48;
          goto LABEL_59;
        case 2u:
          String = (void *)PBReaderReadString();

          id v25 = String;
          uint64_t v26 = 24;
          goto LABEL_46;
        case 3u:
          Data = (void *)PBReaderReadData();

          id v25 = Data;
          uint64_t v26 = 32;
          goto LABEL_46;
        case 4u:
          uint64_t v28 = (void *)PBReaderReadString();

          id v25 = v28;
          uint64_t v26 = 16;
          goto LABEL_46;
        case 5u:
          char v29 = 0;
          unsigned int v30 = 0;
          uint64_t v19 = 0;
          *(unsigned char *)(a1 + 52) |= 2u;
          while (2)
          {
            uint64_t v31 = *v3;
            unint64_t v32 = *(void *)(a2 + v31);
            if (v32 == -1 || v32 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v33 = *(unsigned char *)(*(void *)(a2 + *v7) + v32);
              *(void *)(a2 + v31) = v32 + 1;
              v19 |= (unint64_t)(v33 & 0x7F) << v29;
              if (v33 < 0)
              {
                v29 += 7;
                BOOL v14 = v30++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_54;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v19) = 0;
          }
LABEL_54:
          uint64_t v40 = 44;
          goto LABEL_59;
        case 6u:
          char v34 = 0;
          unsigned int v35 = 0;
          uint64_t v19 = 0;
          *(unsigned char *)(a1 + 52) |= 1u;
          break;
        case 7u:
          uint64_t v39 = (void *)PBReaderReadString();

          id v25 = v39;
          uint64_t v26 = 8;
LABEL_46:
          *(void *)(a1 + v26) = v25;
          continue;
        default:
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
          continue;
      }
      while (1)
      {
        uint64_t v36 = *v3;
        unint64_t v37 = *(void *)(a2 + v36);
        if (v37 == -1 || v37 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v38 = *(unsigned char *)(*(void *)(a2 + *v7) + v37);
        *(void *)(a2 + v36) = v37 + 1;
        v19 |= (unint64_t)(v38 & 0x7F) << v34;
        if ((v38 & 0x80) == 0) {
          goto LABEL_56;
        }
        v34 += 7;
        BOOL v14 = v35++ >= 9;
        if (v14)
        {
          LODWORD(v19) = 0;
          goto LABEL_58;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_56:
      if (*(unsigned char *)(a2 + *v5)) {
        LODWORD(v19) = 0;
      }
LABEL_58:
      uint64_t v40 = 40;
LABEL_59:
      *(_DWORD *)(a1 + v40) = v19;
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

void *sub_1A0799114(void *a1)
{
  int v1 = (void *)[a1 mutableCopy];
  uint64_t v2 = [v1 objectForKeyedSubscript:@"lastMessage"];
  if (v2)
  {
    objc_opt_class();
    if (objc_opt_isKindOfClass())
    {
      BOOL v3 = [v2 objectForKeyedSubscript:@"guid"];
      [v1 setObject:v3 forKeyedSubscript:@"lastMessageGUID"];
    }
  }
  [v1 setObject:0 forKeyedSubscript:@"lastMessage"];

  return v1;
}

uint64_t sub_1A079924C()
{
  id v0 = objc_alloc_init(IMAvailabilityInvitationManager);
  uint64_t v1 = qword_1EB4A6000;
  qword_1EB4A6000 = (uint64_t)v0;

  return MEMORY[0x1F41817F8](v0, v1);
}

void sub_1A07993EC(uint64_t a1, char a2)
{
  uint64_t v30 = *MEMORY[0x1E4F143B8];
  if (a2)
  {
    if ([*(id *)(a1 + 32) _isHandleIDEligibleToReceiveAutomaticInvitation:*(void *)(a1 + 40)])
    {
      BOOL v3 = [*(id *)(a1 + 32) _invitationCacheKeyForHandleID:*(void *)(a1 + 40) fromHandleID:*(void *)(a1 + 48)];
      id v4 = [*(id *)(*(void *)(a1 + 32) + 16) objectForKey:v3];
      double v5 = v4;
      if (v4 && ([v4 timeIntervalSinceNow], fabs(v6) < 300.0))
      {
        if (IMOSLoggingEnabled())
        {
          uint64_t v20 = OSLogHandleForIMFoundationCategory();
          if (os_log_type_enabled(v20, OS_LOG_TYPE_INFO))
          {
            *(_DWORD *)buf = 138412290;
            *(void *)&uint8_t buf[4] = v3;
            _os_log_impl(&dword_1A0772000, v20, OS_LOG_TYPE_INFO, "Not attempting to check or share invitation for personal availability, have attempted recently for cache key: %@", buf, 0xCu);
          }
        }
        uint64_t v21 = *(void *)(a1 + 56);
        if (v21) {
          (*(void (**)(uint64_t, void, void, void, void, void))(v21 + 16))(v21, 0, 0, 0, 0, 0);
        }
      }
      else
      {
        uint64_t v7 = *(void **)(*(void *)(a1 + 32) + 16);
        char v8 = [MEMORY[0x1E4F1C9C8] date];
        [v7 setObject:v8 forKey:v3];

        unsigned int v9 = [*(id *)(a1 + 32) _skHandleForString:*(void *)(a1 + 40)];
        unint64_t v10 = [*(id *)(a1 + 32) _skHandleForString:*(void *)(a1 + 48)];
        if (IMOSLoggingEnabled())
        {
          uint64_t v11 = OSLogHandleForIMFoundationCategory();
          if (os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
          {
            unint64_t v12 = [v9 handleString];
            char v13 = [v10 handleString];
            *(_DWORD *)buf = 138412546;
            *(void *)&uint8_t buf[4] = v12;
            __int16 v28 = 2112;
            char v29 = v13;
            _os_log_impl(&dword_1A0772000, v11, OS_LOG_TYPE_INFO, "Checking if handle is already invited: %@ fromHandle: %@", buf, 0x16u);
          }
        }
        BOOL v14 = [*(id *)(a1 + 32) publishingService];
        *(void *)buf = 0;
        objc_initWeak((id *)buf, *(id *)(a1 + 32));
        v22[0] = MEMORY[0x1E4F143A8];
        v22[1] = 3221225472;
        v22[2] = sub_1A07998B8;
        _OWORD v22[3] = &unk_1E5A0FE28;
        id v25 = *(id *)(a1 + 56);
        id v15 = v9;
        id v23 = v15;
        objc_copyWeak(&v26, (id *)buf);
        id v16 = v10;
        id v24 = v16;
        [v14 isHandleInvited:v15 fromSenderHandle:v16 completion:v22];

        objc_destroyWeak(&v26);
        objc_destroyWeak((id *)buf);
      }
      return;
    }
    if (IMOSLoggingEnabled())
    {
      uint64_t v19 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v19, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)buf = 0;
        _os_log_impl(&dword_1A0772000, v19, OS_LOG_TYPE_INFO, "Not attempting to share availability, recipient is not eligible (e.g. not a contact)", buf, 2u);
      }
    }
    uint64_t v18 = *(void *)(a1 + 56);
    if (v18) {
LABEL_15:
    }
      (*(void (**)(uint64_t, void, void, void, void, void))(v18 + 16))(v18, 0, 0, 0, 0, 0);
  }
  else
  {
    if (IMOSLoggingEnabled())
    {
      char v17 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v17, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)buf = 0;
        _os_log_impl(&dword_1A0772000, v17, OS_LOG_TYPE_INFO, "Not attempting to share availability, Share Across Devices is disabled.", buf, 2u);
      }
    }
    uint64_t v18 = *(void *)(a1 + 56);
    if (v18) {
      goto LABEL_15;
    }
  }
}

void sub_1A07998B8(uint64_t a1, int a2, void *a3)
{
  uint64_t v21 = *MEMORY[0x1E4F143B8];
  id v5 = a3;
  if (v5)
  {
    double v6 = IMLogHandleForCategory("IMAvailabilityInvitationManager");
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR)) {
      sub_1A09EE374();
    }

    uint64_t v7 = *(void *)(a1 + 48);
    if (v7) {
      (*(void (**)(uint64_t, uint64_t, void, void, void, id))(v7 + 16))(v7, 1, 0, 0, 0, v5);
    }
  }
  else
  {
    int v8 = IMOSLoggingEnabled();
    if (a2)
    {
      if (v8)
      {
        unsigned int v9 = OSLogHandleForIMFoundationCategory();
        if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
        {
          unint64_t v10 = [*(id *)(a1 + 32) handleString];
          *(_DWORD *)buf = 138412290;
          uint64_t v20 = v10;
          _os_log_impl(&dword_1A0772000, v9, OS_LOG_TYPE_INFO, "Handle is already invited: %@", buf, 0xCu);
        }
      }
      uint64_t v11 = *(void *)(a1 + 48);
      if (v11) {
        (*(void (**)(uint64_t, uint64_t, uint64_t, void, void, void))(v11 + 16))(v11, 1, 1, 0, 0, 0);
      }
    }
    else
    {
      if (v8)
      {
        unint64_t v12 = OSLogHandleForIMFoundationCategory();
        if (os_log_type_enabled(v12, OS_LOG_TYPE_INFO))
        {
          char v13 = [*(id *)(a1 + 32) handleString];
          *(_DWORD *)buf = 138412290;
          uint64_t v20 = v13;
          _os_log_impl(&dword_1A0772000, v12, OS_LOG_TYPE_INFO, "Handle is not already invited. Initating invitation flow for handle: %@", buf, 0xCu);
        }
      }
      id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
      uint64_t v15 = *(void *)(a1 + 32);
      uint64_t v16 = *(void *)(a1 + 40);
      v17[0] = MEMORY[0x1E4F143A8];
      v17[1] = 3221225472;
      v17[2] = sub_1A0799B5C;
      v17[3] = &unk_1E5A0FE00;
      id v18 = *(id *)(a1 + 48);
      [WeakRetained _sharePersonalAvailabilityWithSKHandle:v15 fromSKHandle:v16 allowingInvitationOfRemovedUsers:0 completion:v17];
    }
  }
}

void sub_1A0799B28(_Unwind_Exception *a1, int a2)
{
  if (a2 == 1)
  {
    objc_begin_catch(a1);
    objc_end_catch();
    JUMPOUT(0x1A0799A68);
  }
  _Unwind_Resume(a1);
}

void sub_1A0799B5C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  id v7 = a4;
  if (IMOSLoggingEnabled())
  {
    int v8 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
    {
      int v10 = 134218498;
      uint64_t v11 = a2;
      __int16 v12 = 2048;
      uint64_t v13 = a3;
      __int16 v14 = 2112;
      id v15 = v7;
      _os_log_impl(&dword_1A0772000, v8, OS_LOG_TYPE_INFO, "Completed _sharePersonalAvailabilityWithSKHandle. canShare: %ld, didShare: %ld, error: %@", (uint8_t *)&v10, 0x20u);
    }
  }
  uint64_t v9 = *(void *)(a1 + 32);
  if (v9) {
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, id))(v9 + 16))(v9, 1, 1, a2, a3, v7);
  }
}

void sub_1A0799D78(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0)
  {
    if (IMOSLoggingEnabled())
    {
      BOOL v3 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)buf = 0;
        _os_log_impl(&dword_1A0772000, v3, OS_LOG_TYPE_INFO, "Not attempting to repair focus status from this device, Share Across Devices is disabled on this device.", buf, 2u);
      }
    }
    uint64_t v4 = *(void *)(a1 + 56);
    if (v4) {
      (*(void (**)(uint64_t, void, void, void))(v4 + 16))(v4, 0, 0, 0);
    }
  }
  id v5 = [*(id *)(a1 + 32) _skHandleForString:*(void *)(a1 + 40)];
  double v6 = [*(id *)(a1 + 32) _skHandleForString:*(void *)(a1 + 48)];
  *(void *)buf = 0;
  objc_initWeak((id *)buf, *(id *)(a1 + 32));
  id v7 = *(void **)(a1 + 32);
  v10[0] = MEMORY[0x1E4F143A8];
  v10[1] = 3221225472;
  v10[2] = sub_1A0799F68;
  v10[3] = &unk_1E5A0FEA0;
  objc_copyWeak(&v15, (id *)buf);
  id v14 = *(id *)(a1 + 56);
  id v8 = v5;
  id v11 = v8;
  id v9 = v6;
  id v12 = v9;
  id v13 = *(id *)(a1 + 40);
  [v7 _invitablityForHandle:v8 fromHandle:v9 completion:v10];

  objc_destroyWeak(&v15);
  objc_destroyWeak((id *)buf);
}

void sub_1A0799F68(id *a1, char a2, int a3, void *a4)
{
  id v7 = a4;
  id WeakRetained = objc_loadWeakRetained(a1 + 8);
  if (v7)
  {
    id v9 = IMLogHandleForCategory("IMAvailabilityInvitationManager");
    if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
      sub_1A09EE3DC();
    }

    id v10 = a1[7];
    if (v10)
    {
      id v11 = (void (*)(void))*((void *)v10 + 2);
LABEL_19:
      v11();
      goto LABEL_20;
    }
    goto LABEL_20;
  }
  if (!a3)
  {
    if (a2)
    {
      id v14 = a1[4];
      id v15 = a1[5];
      v17[0] = MEMORY[0x1E4F143A8];
      v17[1] = 3221225472;
      v17[2] = sub_1A079A1B0;
      v17[3] = &unk_1E5A0FE78;
      id v23 = a1[7];
      id v18 = 0;
      id v19 = WeakRetained;
      id v20 = a1[6];
      id v21 = a1[4];
      id v22 = a1[5];
      [WeakRetained _isFocusStatusSharedWithHandle:v14 fromHandle:v15 completion:v17];

      goto LABEL_20;
    }
    if (!IMOSLoggingEnabled()) {
      goto LABEL_17;
    }
    id v12 = OSLogHandleForIMFoundationCategory();
    if (!os_log_type_enabled(v12, OS_LOG_TYPE_INFO)) {
      goto LABEL_16;
    }
    *(_WORD *)buf = 0;
    id v13 = "Handle is not invitable. Not repairing invalid validation token.";
    goto LABEL_15;
  }
  if (!IMOSLoggingEnabled()) {
    goto LABEL_17;
  }
  id v12 = OSLogHandleForIMFoundationCategory();
  if (os_log_type_enabled(v12, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)buf = 0;
    id v13 = "Handle was manually removed by this user from receiving focus status. Not repairing invalid validation token.";
LABEL_15:
    _os_log_impl(&dword_1A0772000, v12, OS_LOG_TYPE_INFO, v13, buf, 2u);
  }
LABEL_16:

LABEL_17:
  id v16 = a1[7];
  if (v16)
  {
    id v11 = (void (*)(void))*((void *)v16 + 2);
    goto LABEL_19;
  }
LABEL_20:
}

void sub_1A079A1B0(uint64_t a1, int a2, void *a3)
{
  id v5 = a3;
  if (v5)
  {
    double v6 = IMLogHandleForCategory("IMAvailabilityInvitationManager");
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR)) {
      sub_1A09EE444();
    }

    uint64_t v7 = *(void *)(a1 + 72);
    if (v7)
    {
      id v8 = *(void (**)(void))(v7 + 16);
LABEL_6:
      v8();
      goto LABEL_18;
    }
    goto LABEL_18;
  }
  if (a2)
  {
    if (IMOSLoggingEnabled())
    {
      id v9 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)buf = 0;
        id v10 = "Handle is already invited, we're ok to repair the failed validation token.";
LABEL_15:
        _os_log_impl(&dword_1A0772000, v9, OS_LOG_TYPE_INFO, v10, buf, 2u);
        goto LABEL_16;
      }
      goto LABEL_16;
    }
    goto LABEL_17;
  }
  int v11 = [*(id *)(a1 + 40) _isHandleIDEligibleToReceiveAutomaticInvitation:*(void *)(a1 + 48)];
  int v12 = IMOSLoggingEnabled();
  if (v11)
  {
    if (v12)
    {
      id v9 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)buf = 0;
        id v10 = "Handle is eligible to receive an automatic invitation, we're ok to repair the failed validation token.";
        goto LABEL_15;
      }
LABEL_16:
    }
LABEL_17:
    id v13 = *(void **)(a1 + 40);
    uint64_t v14 = *(void *)(a1 + 56);
    uint64_t v15 = *(void *)(a1 + 64);
    v19[0] = MEMORY[0x1E4F143A8];
    v19[1] = 3221225472;
    _OWORD v19[2] = sub_1A079A47C;
    v19[3] = &unk_1E5A0FE00;
    id v20 = *(id *)(a1 + 72);
    [v13 _sharePersonalAvailabilityWithSKHandle:v14 fromSKHandle:v15 allowingInvitationOfRemovedUsers:0 completion:v19];

    goto LABEL_18;
  }
  if (v12)
  {
    id v16 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v16, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)buf = 0;
      _os_log_impl(&dword_1A0772000, v16, OS_LOG_TYPE_INFO, "Handle is neither invited nor eligible to receive an automatic invitation, will not repair the failed validation token.", buf, 2u);
    }
  }
  if (IMOSLoggingEnabled())
  {
    char v17 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v17, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)buf = 0;
      _os_log_impl(&dword_1A0772000, v17, OS_LOG_TYPE_INFO, "Not repairing invalid validation token.", buf, 2u);
    }
  }
  uint64_t v18 = *(void *)(a1 + 72);
  if (v18)
  {
    id v8 = *(void (**)(void))(v18 + 16);
    goto LABEL_6;
  }
LABEL_18:
}

void sub_1A079A47C(uint64_t a1, uint64_t a2, char a3, void *a4)
{
  id v6 = a4;
  if (v6)
  {
    uint64_t v7 = IMLogHandleForCategory("IMAvailabilityInvitationManager");
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR)) {
      sub_1A09EE4E0();
    }

    uint64_t v8 = *(void *)(a1 + 32);
    if (v8)
    {
      id v9 = *(void (**)(void))(v8 + 16);
LABEL_17:
      v9();
    }
  }
  else if (a3)
  {
    if (IMOSLoggingEnabled())
    {
      id v10 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)uint64_t v14 = 0;
        _os_log_impl(&dword_1A0772000, v10, OS_LOG_TYPE_INFO, "Completed sharing focus status following failed validation of token.", v14, 2u);
      }
    }
    uint64_t v11 = *(void *)(a1 + 32);
    if (v11)
    {
      id v9 = *(void (**)(void))(v11 + 16);
      goto LABEL_17;
    }
  }
  else
  {
    int v12 = IMLogHandleForCategory("IMAvailabilityInvitationManager");
    if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
      sub_1A09EE4AC();
    }

    uint64_t v13 = *(void *)(a1 + 32);
    if (v13)
    {
      id v9 = *(void (**)(void))(v13 + 16);
      goto LABEL_17;
    }
  }
}

void sub_1A079A838(uint64_t a1, char a2)
{
  if (a2)
  {
    BOOL v3 = [*(id *)(a1 + 32) _skHandleForString:*(void *)(a1 + 40)];
    uint64_t v4 = [*(id *)(a1 + 32) _skHandleForString:*(void *)(a1 + 48)];
    id v5 = *(void **)(a1 + 32);
    v8[0] = MEMORY[0x1E4F143A8];
    v8[1] = 3221225472;
    v8[2] = sub_1A079A99C;
    v8[3] = &unk_1E5A0FE00;
    id v9 = *(id *)(a1 + 56);
    [v5 _sharePersonalAvailabilityWithSKHandle:v3 fromSKHandle:v4 allowingInvitationOfRemovedUsers:1 completion:v8];
  }
  else
  {
    if (IMOSLoggingEnabled())
    {
      id v6 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)buf = 0;
        _os_log_impl(&dword_1A0772000, v6, OS_LOG_TYPE_INFO, "Not manually sharing focus status while Share Across Devices is disabled.", buf, 2u);
      }
    }
    uint64_t v7 = *(void *)(a1 + 56);
    if (v7) {
      (*(void (**)(uint64_t, void, void, void))(v7 + 16))(v7, 0, 0, 0);
    }
  }
}

void sub_1A079A99C(uint64_t a1, uint64_t a2, char a3, void *a4)
{
  id v6 = a4;
  if (v6)
  {
    uint64_t v7 = IMLogHandleForCategory("IMAvailabilityInvitationManager");
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR)) {
      sub_1A09EE57C();
    }

    uint64_t v8 = *(void *)(a1 + 32);
    if (v8)
    {
      id v9 = *(void (**)(void))(v8 + 16);
LABEL_17:
      v9();
    }
  }
  else if (a3)
  {
    if (IMOSLoggingEnabled())
    {
      id v10 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)uint64_t v14 = 0;
        _os_log_impl(&dword_1A0772000, v10, OS_LOG_TYPE_INFO, "Completed manually sharing focus status.", v14, 2u);
      }
    }
    uint64_t v11 = *(void *)(a1 + 32);
    if (v11)
    {
      id v9 = *(void (**)(void))(v11 + 16);
      goto LABEL_17;
    }
  }
  else
  {
    int v12 = IMLogHandleForCategory("IMAvailabilityInvitationManager");
    if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
      sub_1A09EE548();
    }

    uint64_t v13 = *(void *)(a1 + 32);
    if (v13)
    {
      id v9 = *(void (**)(void))(v13 + 16);
      goto LABEL_17;
    }
  }
}

void sub_1A079AEA4(uint64_t a1, char a2)
{
  if (a2)
  {
    BOOL v3 = [*(id *)(a1 + 32) _skHandleForString:*(void *)(a1 + 40)];
    uint64_t v4 = [*(id *)(a1 + 32) publishingService];
    v7[0] = MEMORY[0x1E4F143A8];
    v7[1] = 3221225472;
    v7[2] = sub_1A079AFF0;
    v7[3] = &unk_1E5A0FEC8;
    id v8 = *(id *)(a1 + 48);
    [v4 removeInvitedHandle:v3 completion:v7];
  }
  else
  {
    if (IMOSLoggingEnabled())
    {
      id v5 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)buf = 0;
        _os_log_impl(&dword_1A0772000, v5, OS_LOG_TYPE_INFO, "Not manually removing sharing focus status while Share Across Devices is disabled.", buf, 2u);
      }
    }
    uint64_t v6 = *(void *)(a1 + 48);
    if (v6) {
      (*(void (**)(uint64_t, void))(v6 + 16))(v6, 0);
    }
  }
}

void sub_1A079AFF0(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (v3)
  {
    uint64_t v4 = IMLogHandleForCategory("IMAvailabilityInvitationManager");
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR)) {
      sub_1A09EE64C();
    }

    uint64_t v5 = *(void *)(a1 + 32);
    if (v5)
    {
      uint64_t v6 = *(void (**)(void))(v5 + 16);
LABEL_12:
      v6();
    }
  }
  else
  {
    if (IMOSLoggingEnabled())
    {
      uint64_t v7 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)id v9 = 0;
        _os_log_impl(&dword_1A0772000, v7, OS_LOG_TYPE_INFO, "Completed manually unsharing focus status.", v9, 2u);
      }
    }
    uint64_t v8 = *(void *)(a1 + 32);
    if (v8)
    {
      uint64_t v6 = *(void (**)(void))(v8 + 16);
      goto LABEL_12;
    }
  }
}

void sub_1A079B264(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 72));
  _Unwind_Resume(a1);
}

void sub_1A079B280(uint64_t a1, char a2, int a3, void *a4)
{
  uint64_t v25 = *MEMORY[0x1E4F143B8];
  id v7 = a4;
  if (a2)
  {
    if (*(unsigned char *)(a1 + 80)) {
      BOOL v8 = 1;
    }
    else {
      BOOL v8 = a3 == 0;
    }
    if (v8)
    {
      id v9 = *(void **)(a1 + 40);
      id v10 = [*(id *)(a1 + 32) handleString];
      v17[0] = MEMORY[0x1E4F143A8];
      v17[1] = 3221225472;
      v17[2] = sub_1A079B56C;
      v17[3] = &unk_1E5A0FF40;
      id v18 = *(id *)(a1 + 32);
      id v19 = *(id *)(a1 + 48);
      id v20 = *(id *)(a1 + 56);
      id v21 = *(id *)(a1 + 64);
      objc_copyWeak(&v22, (id *)(a1 + 72));
      [v9 _invitationPayloadForHandleID:v10 completion:v17];

      objc_destroyWeak(&v22);
    }
    else
    {
      if (IMOSLoggingEnabled())
      {
        uint64_t v15 = OSLogHandleForIMFoundationCategory();
        if (os_log_type_enabled(v15, OS_LOG_TYPE_INFO))
        {
          id v16 = [*(id *)(a1 + 32) handleString];
          *(_DWORD *)buf = 138412290;
          id v24 = v16;
          _os_log_impl(&dword_1A0772000, v15, OS_LOG_TYPE_INFO, "Handle was previously manually uninvited and is not invitable: %@", buf, 0xCu);
        }
      }
      uint64_t v13 = *(void *)(a1 + 64);
      if (v13) {
LABEL_19:
      }
        (*(void (**)(uint64_t, void, void, id))(v13 + 16))(v13, 0, 0, v7);
    }
  }
  else
  {
    if (IMOSLoggingEnabled())
    {
      uint64_t v11 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
      {
        int v12 = [*(id *)(a1 + 32) handleString];
        *(_DWORD *)buf = 138412290;
        id v24 = v12;
        _os_log_impl(&dword_1A0772000, v11, OS_LOG_TYPE_INFO, "Handle is not invitable: %@", buf, 0xCu);
      }
    }
    uint64_t v13 = *(void *)(a1 + 64);
    if (v13) {
      goto LABEL_19;
    }
  }
}

void sub_1A079B510(_Unwind_Exception *exception_object, int a2)
{
  if (a2 == 1)
  {
    objc_begin_catch(exception_object);
    objc_end_catch();
    JUMPOUT(0x1A079B4B8);
  }
  _Unwind_Resume(exception_object);
}

void sub_1A079B56C(uint64_t a1, void *a2)
{
  uint64_t v21 = *MEMORY[0x1E4F143B8];
  id v3 = a2;
  if (IMOSLoggingEnabled())
  {
    uint64_t v4 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
    {
      uint64_t v5 = [*(id *)(a1 + 32) handleString];
      uint64_t v6 = [*(id *)(a1 + 40) handleString];
      *(_DWORD *)buf = 138412802;
      id v16 = v5;
      __int16 v17 = 2112;
      id v18 = v6;
      __int16 v19 = 2112;
      id v20 = v3;
      _os_log_impl(&dword_1A0772000, v4, OS_LOG_TYPE_INFO, "Handle is invitable. Attempting invitation to handle %@ from handle %@ with payload %@", buf, 0x20u);
    }
  }
  uint64_t v8 = *(void *)(a1 + 40);
  id v7 = *(void **)(a1 + 48);
  id v9 = *(void **)(a1 + 32);
  v10[0] = MEMORY[0x1E4F143A8];
  v10[1] = 3221225472;
  v10[2] = sub_1A079B76C;
  v10[3] = &unk_1E5A0FF18;
  id v11 = v9;
  id v12 = *(id *)(a1 + 40);
  id v13 = *(id *)(a1 + 56);
  objc_copyWeak(&v14, (id *)(a1 + 64));
  [v7 inviteHandle:v11 fromSenderHandle:v8 withInvitationPayload:v3 completion:v10];
  objc_destroyWeak(&v14);
}

void sub_1A079B730(_Unwind_Exception *exception_object, int a2)
{
  if (a2 == 1)
  {
    objc_begin_catch(exception_object);
    objc_end_catch();
    JUMPOUT(0x1A079B640);
  }
  _Unwind_Resume(exception_object);
}

void sub_1A079B76C(uint64_t a1, void *a2)
{
  uint64_t v15 = *MEMORY[0x1E4F143B8];
  id v3 = a2;
  if (v3)
  {
    uint64_t v4 = IMLogHandleForCategory("IMAvailabilityInvitationManager");
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR)) {
      sub_1A09EE6B4(a1, (uint64_t)v3, v4);
    }

    uint64_t v5 = *(void *)(a1 + 48);
    if (v5) {
      (*(void (**)(uint64_t, uint64_t, void, id))(v5 + 16))(v5, 1, 0, v3);
    }
  }
  else
  {
    if (IMOSLoggingEnabled())
    {
      uint64_t v6 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
      {
        id v7 = [*(id *)(a1 + 32) handleString];
        uint64_t v8 = [*(id *)(a1 + 40) handleString];
        int v11 = 138412546;
        id v12 = v7;
        __int16 v13 = 2112;
        id v14 = v8;
        _os_log_impl(&dword_1A0772000, v6, OS_LOG_TYPE_INFO, "Handle was succesffully invited: %@ from handle %@", (uint8_t *)&v11, 0x16u);
      }
    }
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
    [WeakRetained _republishCurrentAvailabilityStatus];

    uint64_t v10 = *(void *)(a1 + 48);
    if (v10) {
      (*(void (**)(uint64_t, uint64_t, uint64_t, void))(v10 + 16))(v10, 1, 1, 0);
    }
  }
}

void sub_1A079BAE8(uint64_t a1, void *a2, void *a3)
{
  uint64_t v15 = *MEMORY[0x1E4F143B8];
  id v5 = a2;
  id v6 = a3;
  if (v6)
  {
    id v7 = IMLogHandleForCategory("IMAvailabilityInvitationManager");
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR)) {
      sub_1A09EE78C();
    }

    (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
  }
  else
  {
    unsigned int v8 = [v5 isInvitable];
    unsigned int v9 = [v5 wasRemoved];
    if (IMOSLoggingEnabled())
    {
      uint64_t v10 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
      {
        int v11 = 134218240;
        uint64_t v12 = v8;
        __int16 v13 = 2048;
        uint64_t v14 = v9;
        _os_log_impl(&dword_1A0772000, v10, OS_LOG_TYPE_INFO, "Determined invitability. isInvitable: %ld, wasRemoved %ld", (uint8_t *)&v11, 0x16u);
      }
    }
    (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
  }
}

void sub_1A079BF18(uint64_t a1, int a2, void *a3)
{
  uint64_t v21 = *MEMORY[0x1E4F143B8];
  id v5 = a3;
  int v6 = IMOSLoggingEnabled();
  if (!v5)
  {
    if (a2)
    {
      if (!v6) {
        goto LABEL_16;
      }
      uint64_t v10 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
      {
        int v11 = [*(id *)(a1 + 32) handleString];
        uint64_t v12 = [*(id *)(a1 + 40) handleString];
        int v15 = 138412546;
        id v16 = v11;
        __int16 v17 = 2112;
        id v18 = v12;
        _os_log_impl(&dword_1A0772000, v10, OS_LOG_TYPE_INFO, "Determined focus status is shared with handle: %@ fromHandle: %@", (uint8_t *)&v15, 0x16u);
      }
    }
    else
    {
      if (!v6) {
        goto LABEL_16;
      }
      uint64_t v10 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
      {
        __int16 v13 = [*(id *)(a1 + 32) handleString];
        uint64_t v14 = [*(id *)(a1 + 40) handleString];
        int v15 = 138412546;
        id v16 = v13;
        __int16 v17 = 2112;
        id v18 = v14;
        _os_log_impl(&dword_1A0772000, v10, OS_LOG_TYPE_INFO, "Determined focus status is NOT shared with handle: %@ fromHandle: %@", (uint8_t *)&v15, 0x16u);
      }
    }

    goto LABEL_16;
  }
  if (v6)
  {
    id v7 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
    {
      unsigned int v8 = [*(id *)(a1 + 32) handleString];
      unsigned int v9 = [*(id *)(a1 + 40) handleString];
      int v15 = 138412802;
      id v16 = v8;
      __int16 v17 = 2112;
      id v18 = v9;
      __int16 v19 = 2112;
      id v20 = v5;
      _os_log_impl(&dword_1A0772000, v7, OS_LOG_TYPE_INFO, "Error checking if handle is already invited: %@ fromHandle: %@. Error: %@", (uint8_t *)&v15, 0x20u);
    }
  }
LABEL_16:
  (*(void (**)(void))(*(void *)(a1 + 48) + 16))();
}

void sub_1A079C188(_Unwind_Exception *a1, int a2)
{
  if (a2 == 1)
  {
    objc_begin_catch(a1);
    objc_end_catch();
    JUMPOUT(0x1A079C138);
  }
  _Unwind_Resume(a1);
}

void sub_1A079C340(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  id v3 = [WeakRetained _dndHandleForHandleID:*(void *)(a1 + 32)];
  uint64_t v4 = (void *)[WeakRetained _newDNDModeConfigurationService];
  id v19 = 0;
  id v5 = [v4 allowedModesForContactHandle:v3 error:&v19];
  id v6 = v19;
  if (!v6)
  {
    if (objc_opt_respondsToSelector())
    {
      id v18 = 0;
      unsigned int v9 = [v4 silencedModesForContactHandle:v3 error:&v18];
      id v10 = v18;
      if (v10)
      {
        id v7 = v10;
        int v11 = IMLogHandleForCategory("IMDAvailabilityAutoReplier");
        if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR)) {
          sub_1A09EE828();
        }

        (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
        goto LABEL_15;
      }
    }
    else
    {
      unsigned int v9 = 0;
    }
    int v12 = [*(id *)(a1 + 56) instancesRespondToSelector:sel_initWithAvailableDuringActivityIdentifiers_unavailableDuringActivityIdentifiers_];
    id v13 = objc_alloc(*(Class *)(a1 + 56));
    if (v12) {
      uint64_t v14 = [v13 initWithAvailableDuringActivityIdentifiers:v5 unavailableDuringActivityIdentifiers:v9];
    }
    else {
      uint64_t v14 = [v13 initWithAvailableDuringActivityIdentifiers:v5];
    }
    int v15 = (void *)v14;
    id v16 = objc_msgSend(MEMORY[0x1E4F1C9C8], "__im_dateWithCurrentServerTime");
    __int16 v17 = [v15 statusKitInvitationPayloadWithDateCreated:v16];
    (*(void (**)(void))(*(void *)(a1 + 40) + 16))();

    id v7 = 0;
LABEL_15:

    goto LABEL_16;
  }
  id v7 = v6;
  unsigned int v8 = IMLogHandleForCategory("IMDAvailabilityAutoReplier");
  if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
    sub_1A09EE890();
  }

  (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
LABEL_16:
}

void sub_1A079C6D0(uint64_t a1)
{
  uint64_t v11 = *MEMORY[0x1E4F143B8];
  if (IMOSLoggingEnabled())
  {
    uint64_t v2 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)buf = 0;
      _os_log_impl(&dword_1A0772000, v2, OS_LOG_TYPE_INFO, "Republishing current availability status, so the newly invited handle is able to decrypt the published value", buf, 2u);
    }
  }
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v4 = (void *)[WeakRetained _newDNDModeConfigurationService];

  id v8 = 0;
  id v5 = [v4 publishCurrentStatusKitAvailabilityReturningError:&v8];
  id v6 = v8;
  if (v6)
  {
    id v7 = IMLogHandleForCategory("IMAvailabilityInvitationManager");
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR)) {
      sub_1A09EE960();
    }
LABEL_12:

    goto LABEL_13;
  }
  if (IMOSLoggingEnabled())
  {
    id v7 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)buf = 138412290;
      id v10 = v5;
      _os_log_impl(&dword_1A0772000, v7, OS_LOG_TYPE_INFO, "Republished status following an invitation. StatusIdentifier: %@", buf, 0xCu);
    }
    goto LABEL_12;
  }
LABEL_13:
}

void sub_1A079CDD8(void *a1, uint64_t a2, os_log_t log, const char *a4, ...)
{
  va_start(va, a4);
  _os_log_error_impl(a1, log, OS_LOG_TYPE_ERROR, a4, (uint8_t *)va, 0x16u);
}

uint64_t sub_1A079D020()
{
  id v0 = objc_alloc_init(MEMORY[0x1E4F1CA60]);
  uint64_t v1 = qword_1E94FE7B8;
  qword_1E94FE7B8 = (uint64_t)v0;

  return MEMORY[0x1F41817F8](v0, v1);
}

void sub_1A079D4C0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1A079D750(_Unwind_Exception *a1)
{
  objc_destroyWeak((id *)(v1 - 40));
  _Unwind_Resume(a1);
}

void sub_1A079D764(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v4 = WeakRetained;
    [WeakRetained timerStart];
    id WeakRetained = v4;
    if (v3 == *(double *)(a1 + 40))
    {
      [v4 _handleTimeout:0];
      id WeakRetained = v4;
    }
  }
}

void sub_1A079D990(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1A079DA14(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id obj)
{
}

void sub_1A079DA7C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id obj)
{
}

void sub_1A079DBCC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1A079DC58(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1A079DD14(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id obj)
{
}

void sub_1A079DD94(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id obj)
{
}

void sub_1A079DEE8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1A079DEFC(uint64_t a1)
{
  return [*(id *)(a1 + 32) _invokeCompletion:1 userInfo:*(void *)(a1 + 40) error:0];
}

void sub_1A079E168(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1A079E6E0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1A079E794(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1A079E870(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1A079E95C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1A079EAE4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

IMINInteractionUtilities *sub_1A079EB5C()
{
  uint64_t result = objc_alloc_init(IMINInteractionUtilities);
  qword_1EB4A6628 = (uint64_t)result;
  return result;
}

void sub_1A079ED70(uint64_t a1, uint64_t a2)
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  int v4 = IMOSLoggingEnabled();
  if (a2)
  {
    if (v4)
    {
      id v5 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
      {
        uint64_t v6 = *(void *)(a1 + 32);
        int v12 = 138412546;
        uint64_t v13 = v6;
        __int16 v14 = 2112;
        uint64_t v15 = a2;
        id v7 = "Failed deleting INInteractions with chat guids %@ with error %@";
        id v8 = v5;
        uint32_t v9 = 22;
LABEL_8:
        _os_log_impl(&dword_1A0772000, v8, OS_LOG_TYPE_INFO, v7, (uint8_t *)&v12, v9);
      }
    }
  }
  else if (v4)
  {
    id v10 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
    {
      uint64_t v11 = *(void *)(a1 + 32);
      int v12 = 138412290;
      uint64_t v13 = v11;
      id v7 = "Successfully deleted INInteractions with chat guids %@";
      id v8 = v10;
      uint32_t v9 = 12;
      goto LABEL_8;
    }
  }
}

void sub_1A079F01C(uint64_t a1, uint64_t a2)
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  int v4 = IMOSLoggingEnabled();
  if (a2)
  {
    if (v4)
    {
      id v5 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
      {
        uint64_t v6 = *(void *)(a1 + 32);
        int v12 = 138412546;
        uint64_t v13 = v6;
        __int16 v14 = 2112;
        uint64_t v15 = a2;
        id v7 = "Failed deleting INInteractions with message guids %@ with error %@";
        id v8 = v5;
        uint32_t v9 = 22;
LABEL_8:
        _os_log_impl(&dword_1A0772000, v8, OS_LOG_TYPE_INFO, v7, (uint8_t *)&v12, v9);
      }
    }
  }
  else if (v4)
  {
    id v10 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
    {
      uint64_t v11 = *(void *)(a1 + 32);
      int v12 = 138412290;
      uint64_t v13 = v11;
      id v7 = "Successfully deleted INInteractions with message guids %@";
      id v8 = v10;
      uint32_t v9 = 12;
      goto LABEL_8;
    }
  }
}

uint64_t sub_1A079F1A0()
{
  return MEMORY[0x1F4181798](MEMORY[0x1E4F1C9B8], sel___imDataWithHexString_);
}

uint64_t sub_1A079F1B4()
{
  return IMGetCachedDomainBoolForKey();
}

uint64_t sub_1A079F21C()
{
  id v0 = objc_alloc_init(IMPowerLog);
  uint64_t v1 = qword_1EB4A6630;
  qword_1EB4A6630 = (uint64_t)v0;

  return MEMORY[0x1F41817F8](v0, v1);
}

void *sub_1A079F2F0()
{
  uint64_t result = (void *)MEMORY[0x1A6227920]("PLLogRegisteredEvent", @"PowerLog");
  off_1EB4A5CD0 = result;
  return result;
}

BOOL IMFileSizeForItemAtPath(void *a1, off_t *a2, int a3, void *a4)
{
  v39[1] = *MEMORY[0x1E4F143B8];
  id v7 = a1;
  id v8 = v7;
  if (!a2)
  {
    id v18 = IMLogHandleForCategory("IMFileSize");
    if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR)) {
      sub_1A09EE9C8(v18);
    }

    if (!a4) {
      goto LABEL_19;
    }
    id v19 = (void *)MEMORY[0x1E4F28C58];
    uint64_t v38 = *MEMORY[0x1E4F28568];
    v39[0] = @"nil fileSize passed to IMFileSizeForItemAtPath";
    id v20 = (void *)MEMORY[0x1E4F1C9E8];
    uint64_t v21 = (__CFString **)v39;
    id v22 = &v38;
LABEL_18:
    id v24 = [v20 dictionaryWithObjects:v21 forKeys:v22 count:1];
    *a4 = [v19 errorWithDomain:@"IMSharedUtilitiesFileSizeErrorDomain" code:-50 userInfo:v24];

LABEL_19:
    BOOL v12 = 0;
    goto LABEL_20;
  }
  *a2 = 0;
  a2[1] = 0;
  if (!v7)
  {
    id v23 = IMLogHandleForCategory("IMFileSize");
    if (os_log_type_enabled(v23, OS_LOG_TYPE_ERROR)) {
      sub_1A09EEA0C(v23);
    }

    if (!a4) {
      goto LABEL_19;
    }
    id v19 = (void *)MEMORY[0x1E4F28C58];
    uint64_t v36 = *MEMORY[0x1E4F28568];
    unint64_t v37 = @"nil path passed to IMFileSizeForItemAtPath";
    id v20 = (void *)MEMORY[0x1E4F1C9E8];
    uint64_t v21 = &v37;
    id v22 = &v36;
    goto LABEL_18;
  }
  id v9 = v7;
  id v10 = (const char *)[v9 fileSystemRepresentation];
  if (!v10)
  {
    id v26 = IMLogHandleForCategory("IMFileSize");
    if (os_log_type_enabled(v26, OS_LOG_TYPE_ERROR)) {
      sub_1A09EEA50((uint64_t)v9, v26);
    }

    if (a4)
    {
      int v27 = (void *)MEMORY[0x1E4F28C58];
      uint64_t v34 = *MEMORY[0x1E4F28568];
      __int16 v28 = [NSString stringWithFormat:@"Failed to get fileSystemRepresentation for path: %@", v9];
      unsigned int v35 = v28;
      char v29 = [MEMORY[0x1E4F1C9E8] dictionaryWithObjects:&v35 forKeys:&v34 count:1];
      *a4 = [v27 errorWithDomain:@"IMSharedUtilitiesFileSizeErrorDomain" code:-50 userInfo:v29];
    }
    goto LABEL_19;
  }
  memset(&v31, 0, sizeof(v31));
  int v11 = stat(v10, &v31);
  BOOL v12 = v11 == 0;
  if (v11)
  {
    uint64_t v13 = *__error();
    if (a4)
    {
      __int16 v14 = (void *)MEMORY[0x1E4F28C58];
      uint64_t v32 = *MEMORY[0x1E4F28568];
      uint64_t v15 = [NSString stringWithFormat:@"sys/stat returned error %d (%s) while getting info for file at path: %@", v13, strerror(v13), v9];
      char v33 = v15;
      uint64_t v16 = [MEMORY[0x1E4F1C9E8] dictionaryWithObjects:&v33 forKeys:&v32 count:1];
      *a4 = [v14 errorWithDomain:@"IMSharedUtilitiesFileSizeErrorDomain" code:v13 userInfo:v16];
    }
    __int16 v17 = IMLogHandleForCategory("IMFileSize");
    if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR)) {
      sub_1A09EEAC8(v13, (uint64_t)v9, v17);
    }
  }
  else if ((v31.st_mode & 0xF000) == 0xA000 && a3)
  {
    *a2 = 0;
    a2[1] = 0;
  }
  else
  {
    blkcnt_t v30 = v31.st_blocks << 9;
    *a2 = v31.st_size;
    a2[1] = v30;
  }
LABEL_20:

  return v12;
}

uint64_t sub_1A07A00F0(void *a1, uint64_t a2, void *a3)
{
  int v4 = (void *)MEMORY[0x1E4F28B88];
  id v5 = a3;
  uint64_t v6 = [v4 controlCharacterSet];
  id v7 = [a1 stringByTrimmingCharactersInSet:v6];

  id v8 = [MEMORY[0x1E4F28B88] controlCharacterSet];
  id v9 = [v5 stringByTrimmingCharactersInSet:v8];

  if (IMStringIsEmail())
  {
    uint64_t v10 = [v7 isEqualToString:v9];
  }
  else
  {
    if (!MEMORY[0x1A62278C0](v9))
    {
      uint64_t v11 = 0;
      goto LABEL_7;
    }
    uint64_t v10 = [v7 isEqualToPhoneNumber:v9];
  }
  uint64_t v11 = v10;
LABEL_7:

  return v11;
}

IMBlockListPerson *sub_1A07A01C8(uint64_t a1)
{
  uint64_t v2 = +[IMContactStore sharedInstance];
  double v3 = [v2 fetchCNContactForHandleWithID:a1];

  int v4 = [[IMBlockListPerson alloc] initWithCNContact:v3];

  return v4;
}

id sub_1A07A0240(void *a1, uint64_t a2, void *a3)
{
  uint64_t v35 = *MEMORY[0x1E4F143B8];
  id v4 = a3;
  if (v4)
  {
    char v5 = MEMORY[0x1A62278C0](a1);
    uint64_t v6 = [v4 cnPerson];
    id v7 = v6;
    if (v5) {
      [v6 phoneNumbers];
    }
    else {
    id v9 = [v6 emailAddresses];
    }

    long long v32 = 0u;
    long long v33 = 0u;
    long long v30 = 0u;
    long long v31 = 0u;
    id v10 = v9;
    uint64_t v11 = [v10 countByEnumeratingWithState:&v30 objects:v34 count:16];
    if (v11)
    {
      uint64_t v12 = v11;
      id v29 = v4;
      uint64_t v13 = *(void *)v31;
      while (2)
      {
        for (uint64_t i = 0; i != v12; ++i)
        {
          if (*(void *)v31 != v13) {
            objc_enumerationMutation(v10);
          }
          uint64_t v15 = *(void **)(*((void *)&v30 + 1) + 8 * i);
          uint64_t v16 = [v15 label];

          if (v16)
          {
            __int16 v17 = [v15 value];
            objc_opt_class();
            char isKindOfClass = objc_opt_isKindOfClass();

            id v19 = [v15 value];
            id v20 = v19;
            if (isKindOfClass)
            {
              uint64_t v21 = [v19 stringValue];
              int v22 = [a1 isEqualToBlockListAddress:v21];

              if (v22) {
                goto LABEL_20;
              }
            }
            else
            {
              objc_opt_class();
              char v23 = objc_opt_isKindOfClass();

              if (v23)
              {
                id v24 = [v15 value];
                int v25 = [a1 isEqualToBlockListAddress:v24];

                if (v25)
                {
LABEL_20:
                  id v26 = (void *)MEMORY[0x1E4F1BA20];
                  int v27 = [v15 label];
                  id v8 = [v26 localizedStringForLabel:v27];

                  goto LABEL_21;
                }
              }
            }
          }
        }
        uint64_t v12 = [v10 countByEnumeratingWithState:&v30 objects:v34 count:16];
        if (v12) {
          continue;
        }
        break;
      }
      id v8 = 0;
LABEL_21:
      id v4 = v29;
    }
    else
    {
      id v8 = 0;
    }
  }
  else
  {
    id v8 = 0;
  }

  return v8;
}

id sub_1A07A04C4(void *a1, uint64_t a2, void *a3)
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  id v4 = a3;
  long long v11 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  id v5 = a1;
  id v6 = (id)[v5 countByEnumeratingWithState:&v11 objects:v15 count:16];
  if (v6)
  {
    uint64_t v7 = *(void *)v12;
    while (2)
    {
      for (uint64_t i = 0; i != v6; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v12 != v7) {
          objc_enumerationMutation(v5);
        }
        id v9 = *(void **)(*((void *)&v11 + 1) + 8 * i);
        if (MEMORY[0x1A62278C0](v9)
          && (objc_msgSend(v4, "isEqualToPhoneNumber:", v9, (void)v11) & 1) != 0)
        {
          id v6 = v9;
          goto LABEL_12;
        }
      }
      id v6 = (id)[v5 countByEnumeratingWithState:&v11 objects:v15 count:16];
      if (v6) {
        continue;
      }
      break;
    }
  }
LABEL_12:

  return v6;
}

void sub_1A07A0CD8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
}

void sub_1A07A0CFC(uint64_t a1)
{
  uint64_t v1 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained setImBlockItemList:0];

  id v4 = [MEMORY[0x1E4F28EB8] defaultCenter];
  id v3 = objc_loadWeakRetained(v1);
  [v4 postNotificationName:@"IMBlockListControllerListDidChangeNotification" object:v3];
}

void sub_1A07A0FCC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
}

void sub_1A07A0FF0(uint64_t a1)
{
  uint64_t v1 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained setImBlockItemList:0];

  id v4 = [MEMORY[0x1E4F28EB8] defaultCenter];
  id v3 = objc_loadWeakRetained(v1);
  [v4 postNotificationName:@"IMBlockListControllerListDidChangeNotification" object:v3];
}

BOOL -[IMBlockListController _blockCMFItemRef:](IMBlockListController *self, SEL a2, void *a3)
{
  if (!a3) {
    return 0;
  }
  if (CMFBlockListIsItemBlocked()) {
    return 0;
  }
  CMFBlockListAddItemForAllServices();
  imBlockItemList = self->_imBlockItemList;
  self->_imBlockItemList = 0;

  return 1;
}

void IMRegisterSADAwareXPCActivity(const char *a1, void *a2, void *a3)
{
  id v5 = a3;
  handler[0] = MEMORY[0x1E4F143A8];
  handler[1] = 3221225472;
  handler[2] = sub_1A07A19DC;
  handler[3] = &unk_1E5A10108;
  id v8 = v5;
  id v6 = v5;
  xpc_activity_register(a1, a2, handler);
}

void sub_1A07A19DC(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (xpc_activity_get_state(v3) == 2
    && !+[IMDeviceUtilities isMessagesInstalled])
  {
    if (IMOSLoggingEnabled())
    {
      id v4 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)buf = 0;
        _os_log_impl(&dword_1A0772000, v4, OS_LOG_TYPE_INFO, "Not starting activity - Messages is uninstalled", buf, 2u);
      }
    }
    if (!xpc_activity_set_state(v3, 5) && IMOSLoggingEnabled())
    {
      id v5 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)id v6 = 0;
        _os_log_impl(&dword_1A0772000, v5, OS_LOG_TYPE_INFO, "Failed to start done state.", v6, 2u);
      }
    }
  }
  else
  {
    (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
  }
}

uint64_t sub_1A07A2208(void *a1, uint64_t a2, void *a3)
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  id v4 = (void *)[a1 stringByDeletingPathExtension];
  long long v11 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  uint64_t v5 = [a3 countByEnumeratingWithState:&v11 objects:v15 count:16];
  if (!v5) {
    return 0;
  }
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)v12;
LABEL_3:
  uint64_t v8 = 0;
  while (1)
  {
    if (*(void *)v12 != v7) {
      objc_enumerationMutation(a3);
    }
    uint64_t v9 = [v4 stringByAppendingPathExtension:*(void *)(*((void *)&v11 + 1) + 8 * v8)];
    if (objc_msgSend((id)objc_msgSend(MEMORY[0x1E4F28CB8], "defaultManager"), "fileExistsAtPath:", v9)) {
      return v9;
    }
    if (v6 == ++v8)
    {
      uint64_t v6 = [a3 countByEnumeratingWithState:&v11 objects:v15 count:16];
      if (v6) {
        goto LABEL_3;
      }
      return 0;
    }
  }
}

BOOL sub_1A07A2324(void *a1)
{
  if ((objc_msgSend((id)objc_msgSend(a1, "pathExtension"), "isEqualToString:", @"MOV") & 1) != 0
    || objc_msgSend((id)objc_msgSend(a1, "pathExtension"), "isEqualToString:", @"mov"))
  {
    uint64_t v2 = &unk_1EF305A30;
  }
  else
  {
    uint64_t v2 = &unk_1EF305A48;
  }
  return objc_msgSend(a1, "_im_filePathWithPossibleAlternateExtensions:", v2) != 0;
}

uint64_t sub_1A07A239C(void *a1)
{
  if ((objc_msgSend((id)objc_msgSend(a1, "pathExtension"), "isEqualToString:", @"MOV") & 1) == 0
    && !objc_msgSend((id)objc_msgSend(a1, "pathExtension"), "isEqualToString:", @"mov"))
  {
    return 0;
  }

  return objc_msgSend(a1, "_im_filePathWithPossibleAlternateExtensions:", &unk_1EF305A60);
}

uint64_t sub_1A07A2414(void *a1)
{
  if ((objc_msgSend((id)objc_msgSend(a1, "pathExtension"), "isEqualToString:", @"MOV") & 1) != 0
    || (objc_msgSend((id)objc_msgSend(a1, "pathExtension"), "isEqualToString:", @"mov") & 1) != 0)
  {
    return 0;
  }

  return objc_msgSend(a1, "_im_filePathWithPossibleAlternateExtensions:", &unk_1EF305A78);
}

BOOL sub_1A07A248C(void *a1, uint64_t a2, int a3)
{
  uint64_t v26 = *MEMORY[0x1E4F143B8];
  uint64_t v3 = 67593;
  if (!a3) {
    uint64_t v3 = 0;
  }
  uint64_t v19 = v3;
  id v4 = (const char *)[a1 fileSystemRepresentation];
  int v5 = open(v4, 0);
  if (v5 < 0)
  {
    if (IMOSLoggingEnabled())
    {
      uint64_t v6 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
      {
        uint64_t v7 = __error();
        uint64_t v8 = strerror(*v7);
        *(_DWORD *)buf = 136315394;
        uint64_t v21 = v4;
        __int16 v22 = 2080;
        *(void *)char v23 = v8;
        _os_log_impl(&dword_1A0772000, v6, OS_LOG_TYPE_INFO, " Can't open %s : %s\n", buf, 0x16u);
      }
    }
  }
  int v9 = ffsctl(v5, 0xC0084A44uLL, &v19, 0);
  int v10 = IMOSLoggingEnabled();
  if (v9)
  {
    if (v10)
    {
      long long v11 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
      {
        long long v12 = __error();
        long long v13 = strerror(*v12);
        *(_DWORD *)buf = 136315906;
        uint64_t v21 = v4;
        __int16 v22 = 1024;
        *(_DWORD *)char v23 = v9;
        *(_WORD *)&uint64_t v23[4] = 2080;
        *(void *)&v23[6] = v13;
        __int16 v24 = 2048;
        int v25 = (char *)v19;
        long long v14 = "Failed to mark %s as purgeable %d (%s) (flags 0x%llx)\n";
LABEL_14:
        _os_log_impl(&dword_1A0772000, v11, OS_LOG_TYPE_INFO, v14, buf, 0x26u);
      }
    }
  }
  else if (v10)
  {
    long long v11 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
    {
      uint64_t v15 = v19;
      uint64_t v16 = __error();
      __int16 v17 = strerror(*v16);
      *(_DWORD *)buf = 136315906;
      uint64_t v21 = v4;
      __int16 v22 = 2048;
      *(void *)char v23 = v15;
      *(_WORD *)&v23[8] = 1024;
      *(_DWORD *)&v23[10] = 0;
      __int16 v24 = 2080;
      int v25 = v17;
      long long v14 = "Marked %s purgeable with flags 0x%llx returned %d (%s)\n";
      goto LABEL_14;
    }
  }
  close(v5);
  return v9 == 0;
}

void sub_1A07A26C8(_Unwind_Exception *a1, int a2)
{
  if (a2 == 1)
  {
    objc_begin_catch(a1);
    objc_end_catch();
    JUMPOUT(0x1A07A2680);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_1A07A2704(void *a1)
{
  uint64_t v19 = *MEMORY[0x1E4F143B8];
  uint64_t v12 = 0;
  long long v13 = &v12;
  uint64_t v14 = 0x2020000000;
  uint64_t v2 = (__CFString **)qword_1EB4A5E60;
  uint64_t v15 = qword_1EB4A5E60;
  if (!qword_1EB4A5E60)
  {
    *(void *)buf = MEMORY[0x1E4F143A8];
    *(void *)&uint8_t buf[8] = 3221225472;
    *(void *)&uint8_t buf[16] = sub_1A07A2B08;
    __int16 v17 = &unk_1E5A10130;
    id v18 = &v12;
    sub_1A07A2B08((uint64_t)buf);
    uint64_t v2 = (__CFString **)v13[3];
  }
  _Block_object_dispose(&v12, 8);
  if (!v2)
  {
    sub_1A09EEB7C();
    __break(1u);
  }
  if (*v2) {
    uint64_t v3 = *v2;
  }
  else {
    uint64_t v3 = @"pvt";
  }
  id v4 = (void *)[a1 stringByDeletingLastPathComponent];
  int v5 = objc_msgSend(v4, "stringByAppendingPathComponent:", objc_msgSend(v4, "im_lastPathComponent"));
  uint64_t v6 = [v5 stringByAppendingPathExtension:v3];
  if (IMOSLoggingEnabled())
  {
    uint64_t v7 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)buf = 138412546;
      *(void *)&uint8_t buf[4] = v6;
      *(_WORD *)&unsigned char buf[12] = 2112;
      *(void *)&buf[14] = a1;
      _os_log_impl(&dword_1A0772000, v7, OS_LOG_TYPE_INFO, "First try: Trying to check existence of live photo bundle at path %@, transfer %@", buf, 0x16u);
    }
  }
  if (objc_msgSend((id)objc_msgSend(MEMORY[0x1E4F28CB8], "defaultManager"), "fileExistsAtPath:", v6)) {
    goto LABEL_27;
  }
  uint64_t v6 = objc_msgSend(v5, "stringByAppendingPathExtension:", -[__CFString uppercaseString](v3, "uppercaseString"));
  if (IMOSLoggingEnabled())
  {
    uint64_t v8 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)buf = 138412546;
      *(void *)&uint8_t buf[4] = v6;
      *(_WORD *)&unsigned char buf[12] = 2112;
      *(void *)&buf[14] = a1;
      _os_log_impl(&dword_1A0772000, v8, OS_LOG_TYPE_INFO, "Second try: Trying to check existence of live photo bundle at path %@, transfer %@", buf, 0x16u);
    }
  }
  if (objc_msgSend((id)objc_msgSend(MEMORY[0x1E4F28CB8], "defaultManager"), "fileExistsAtPath:", v6))
  {
LABEL_27:
    if (v6)
    {
      if (IMOSLoggingEnabled())
      {
        int v9 = OSLogHandleForIMFoundationCategory();
        if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
        {
          *(_DWORD *)buf = 138412546;
          *(void *)&uint8_t buf[4] = v6;
          *(_WORD *)&unsigned char buf[12] = 2112;
          *(void *)&buf[14] = a1;
          _os_log_impl(&dword_1A0772000, v9, OS_LOG_TYPE_INFO, "Found live photo bundle at path %@, transfer %@", buf, 0x16u);
        }
      }
    }
  }
  else
  {
    if (IMOSLoggingEnabled())
    {
      int v10 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)buf = 138412290;
        *(void *)&uint8_t buf[4] = a1;
        _os_log_impl(&dword_1A0772000, v10, OS_LOG_TYPE_INFO, "Failed to find live photo bundle for transfer %@", buf, 0xCu);
      }
    }
    return 0;
  }
  return v6;
}

BOOL sub_1A07A2AA4(void *a1)
{
  return ![a1 caseInsensitiveCompare:@"CAF"]
      || ![a1 caseInsensitiveCompare:@"AMR"]
      || [a1 caseInsensitiveCompare:@"M4A"] == 0;
}

void *sub_1A07A2B08(uint64_t a1)
{
  uint64_t v8 = *MEMORY[0x1E4F143B8];
  v5[0] = 0;
  if (!qword_1EB4A5E70)
  {
    v5[1] = MEMORY[0x1E4F143A8];
    v5[2] = 3221225472;
    v5[3] = sub_1A07A2C48;
    v5[4] = &unk_1E5A10168;
    v5[5] = v5;
    long long v6 = xmmword_1E5A10150;
    uint64_t v7 = 0;
    qword_1EB4A5E70 = _sl_dlopen();
    uint64_t v3 = (void *)v5[0];
    uint64_t v2 = (void *)qword_1EB4A5E70;
    if (qword_1EB4A5E70)
    {
      if (!v5[0]) {
        goto LABEL_5;
      }
    }
    else
    {
      uint64_t v3 = (void *)abort_report_np();
    }
    free(v3);
    goto LABEL_5;
  }
  uint64_t v2 = (void *)qword_1EB4A5E70;
LABEL_5:
  uint64_t result = dlsym(v2, "PFLivePhotoBundleExtension");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = result;
  qword_1EB4A5E60 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t sub_1A07A2C48()
{
  uint64_t result = _sl_dlopen();
  qword_1EB4A5E70 = result;
  return result;
}

void sub_1A07A4120(_Unwind_Exception *a1, int a2)
{
  if (a2 == 1)
  {
    objc_begin_catch(a1);
    objc_end_catch();
    JUMPOUT(0x1A07A4048);
  }
  _Unwind_Resume(a1);
}

void sub_1A07A445C(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + 32);
  id v2 = [*(id *)(a1 + 40) connection];
  objc_msgSend(v1, "authorizeForPID:", objc_msgSend(v2, "processIdentifier"));
}

void sub_1A07A54E8(uint64_t a1, void *a2, void *a3)
{
  id v5 = a3;
  id v6 = a2;
  uint64_t v7 = [[IMNicknameEncryptionPlainRecordField alloc] initWithFieldName:v6 plainData:v5];

  [*(id *)(a1 + 32) addObject:v7];
}

uint64_t sub_1A07A62B8(uint64_t a1, void *a2, void *a3)
{
  id v4 = a3;
  id v5 = [a2 fieldName];
  id v6 = [v4 fieldName];

  uint64_t v7 = [v5 compare:v6];
  return v7;
}

uint64_t sub_1A07A87FC()
{
  return 1;
}

uint64_t sub_1A07A8804()
{
  return 0;
}

uint64_t IMCloudKitIsEligibleToToggleMiCSwitch()
{
  uint64_t v6 = *MEMORY[0x1E4F143B8];
  uint64_t v0 = IMGetCachedDomainBoolForKeyWithDefaultValue();
  if (IMOSLoggingEnabled())
  {
    uint64_t v1 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v1, OS_LOG_TYPE_INFO))
    {
      id v2 = @"NO";
      if (v0) {
        id v2 = @"YES";
      }
      int v4 = 138412290;
      id v5 = v2;
      _os_log_impl(&dword_1A0772000, v1, OS_LOG_TYPE_INFO, "isEligible to toggle MiC switch returning = %@", (uint8_t *)&v4, 0xCu);
    }
  }
  return v0;
}

void sub_1A07A9134()
{
  v2[23] = *MEMORY[0x1E4F143B8];
  v2[0] = @"CloudKitSyncingEnabled";
  v2[1] = @"CloudKitIsSyncing";
  v2[2] = @"CloudKitIsEligibleForTruthZone";
  v2[3] = @"CloudKitIsInExitState";
  v2[4] = @"CloudKitExitDate";
  v2[5] = @"CloudKitIsRemovedFromBackup";
  v2[6] = @"CloudKitSyncDate";
  v2[7] = @"IMCloudKitStartingPeriodicSync";
  v2[8] = @"IMCloudKitStartingInitialSync";
  void v2[9] = @"IMCloudKitStartingEnabledSettingChange";
  v2[10] = @"IMCloudKitStartingDisableDevices";
  v2[11] = @"IMCloudKitSyncControllerSyncStateKey";
  v2[12] = @"IMCloudKitSyncControllerSyncTypeKey";
  v2[13] = @"IMCloudKitSyncControllerSyncRecordTypeKey";
  v2[14] = @"IMCloudKitSyncErrors";
  v2[15] = @"IMCloudKitSyncPaused";
  v2[16] = @"IMCloudKitAccountStatusKey";
  v2[17] = @"IMCloudKitSyncTypeKey";
  v2[18] = @"IMCloudKitSyncStatusKey";
  v2[19] = @"IMCloudKitSyncJobStateKey";
  v2[20] = @"IMCloudKitAnalyticSyncDatesDictionary";
  v2[21] = @"CloudKitHasAvailableRecordsToDownload";
  v2[22] = @"CloudKitLastDownloadProgress";
  uint64_t v0 = [MEMORY[0x1E4F1C978] arrayWithObjects:v2 count:23];
  uint64_t v1 = (void *)qword_1EB4A5CE0;
  qword_1EB4A5CE0 = v0;
}

void sub_1A07A92E8()
{
  uint64_t v0 = (void *)qword_1EB4A5CF0;
  qword_1EB4A5CF0 = (uint64_t)&unk_1EF2BFC40;
}

__CFString *IMStringFromCloudKitSyncStep(unint64_t a1)
{
  if (a1 > 6) {
    return &stru_1EF2CAD28;
  }
  else {
    return off_1E5A10260[a1];
  }
}

__CFString *IMStringFromCloudKitChangingSettingState(unint64_t a1)
{
  if (a1 > 2) {
    return &stru_1EF2CAD28;
  }
  else {
    return off_1E5A10298[a1];
  }
}

__CFString *IMStringFromIMCloudKitSyncErrorCode(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) > 9) {
    return @"IMCloudKitSyncErrorCodeNone";
  }
  else {
    return off_1E5A102B0[a1 - 1];
  }
}

__CFString *IMStringFromIMCloudKitSyncControllerSyncRecordType(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) > 3) {
    return @"IMCloudKitSyncControllerSyncRecordTypeNone";
  }
  else {
    return off_1E5A10300[a1 - 1];
  }
}

__CFString *IMStringFromIMCloudKitSyncControllerSyncState(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) > 3) {
    return @"IMCloudKitSyncControllerSyncStateIdle";
  }
  else {
    return off_1E5A10320[a1 - 1];
  }
}

__CFString *IMStringFromIMCloudKitSyncControllerSyncType(unint64_t a1)
{
  if (a1 > 2) {
    return &stru_1EF2CAD28;
  }
  else {
    return off_1E5A10340[a1];
  }
}

__CFString *IMStringFromIMCloudKitAccountStatus(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) > 3) {
    return @"IMCloudKitAccountStatusUnknown";
  }
  else {
    return off_1E5A10358[a1 - 1];
  }
}

__CFString *IMStringFromIMCloudKitSyncType(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) > 7) {
    return @"IMCloudKitSyncTypeInitial";
  }
  else {
    return off_1E5A10378[a1 - 1];
  }
}

__CFString *IMStringFromIMCloudKitSyncStatus(uint64_t a1)
{
  if (a1 == 1) {
    return @"IMCloudKitSyncStatusStarted";
  }
  else {
    return @"IMCloudKitSyncStatusStopped";
  }
}

id IMCreateSerializedItemsFromArray(void *a1)
{
  uint64_t v17 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  if ([v1 count])
  {
    id v2 = objc_alloc_init(MEMORY[0x1E4F1CA48]);
    long long v12 = 0u;
    long long v13 = 0u;
    long long v14 = 0u;
    long long v15 = 0u;
    id v3 = v1;
    uint64_t v4 = [v3 countByEnumeratingWithState:&v12 objects:v16 count:16];
    if (v4)
    {
      uint64_t v5 = v4;
      uint64_t v6 = *(void *)v13;
      do
      {
        uint64_t v7 = 0;
        do
        {
          if (*(void *)v13 != v6) {
            objc_enumerationMutation(v3);
          }
          uint64_t v8 = *(void **)(*((void *)&v12 + 1) + 8 * v7);
          int v9 = (void *)MEMORY[0x1A6228190](v4);
          int v10 = objc_msgSend(v8, "dictionaryRepresentation", (void)v12);
          if ([v10 count]) {
            [v2 addObject:v10];
          }

          ++v7;
        }
        while (v5 != v7);
        uint64_t v4 = [v3 countByEnumeratingWithState:&v12 objects:v16 count:16];
        uint64_t v5 = v4;
      }
      while (v4);
    }
  }
  else
  {
    id v2 = 0;
  }

  return v2;
}

id IMCreateItemsFromSerializedArray(void *a1)
{
  uint64_t v17 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  if ([v1 count])
  {
    id v2 = objc_alloc_init(MEMORY[0x1E4F1CA48]);
    long long v12 = 0u;
    long long v13 = 0u;
    long long v14 = 0u;
    long long v15 = 0u;
    id v3 = v1;
    uint64_t v4 = [v3 countByEnumeratingWithState:&v12 objects:v16 count:16];
    if (v4)
    {
      uint64_t v5 = v4;
      uint64_t v6 = *(void *)v13;
      do
      {
        for (uint64_t i = 0; i != v5; ++i)
        {
          if (*(void *)v13 != v6) {
            objc_enumerationMutation(v3);
          }
          uint64_t v8 = *(void **)(*((void *)&v12 + 1) + 8 * i);
          if (objc_msgSend(v8, "count", (void)v12))
          {
            int v9 = (void *)MEMORY[0x1A6228190]();
            int v10 = objc_msgSend(objc_alloc(+[IMItem classForMessageItemDictionary:](IMItem, "classForMessageItemDictionary:", v8)), "initWithDictionary:", v8);
            if (v10) {
              [v2 addObject:v10];
            }
          }
        }
        uint64_t v5 = [v3 countByEnumeratingWithState:&v12 objects:v16 count:16];
      }
      while (v5);
    }
  }
  else
  {
    id v2 = 0;
  }

  return v2;
}

uint64_t IMCanonicalFormOfIDWithSensitivity(void *a1, char a2, char a3)
{
  uint64_t v6 = (uint64_t)a1;
  if ((a2 & 2) != 0)
  {
    uint64_t v6 = [a1 stringByReplacingOccurrencesOfString:@" " withString:&stru_1EF2CAD28];
    if (a2) {
      goto LABEL_15;
    }
  }
  else if (a2)
  {
    goto LABEL_15;
  }
  int v7 = MEMORY[0x1A62278C0](a1);
  if ((a3 & 2) != 0 && v7) {
    uint64_t v6 = [a1 lowercaseString];
  }
  int IsEmail = IMStringIsEmail();
  if ((a3 & 1) != 0 && IsEmail) {
    uint64_t v6 = [a1 lowercaseString];
  }
  if (MEMORY[0x1A62278C0](a1)) {
    return v6;
  }
  char v10 = IMStringIsEmail();
  if (a3 & 4) == 0 || (v10) {
    return v6;
  }
LABEL_15:

  return [a1 lowercaseString];
}

void sub_1A07AB3F8(_Unwind_Exception *a1)
{
}

void sub_1A07AB418(void *a1)
{
}

__CFString *sub_1A07AC440()
{
  return @"\uFFFD";
}

BOOL sub_1A07AC798(int a1, CFStringRef inUTI)
{
  return UTTypeConformsTo(inUTI, (CFStringRef)*MEMORY[0x1E4F22660]) != 0;
}

void sub_1A07AD3DC(uint64_t a1, void *a2, void *a3)
{
  uint64_t v50 = *MEMORY[0x1E4F143B8];
  if (IMOSLoggingEnabled())
  {
    uint64_t v6 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
    {
      uint64_t v7 = *(void *)(a1 + 32);
      *(_DWORD *)buf = 138412290;
      *(void *)&uint8_t buf[4] = v7;
      _os_log_impl(&dword_1A0772000, v6, OS_LOG_TYPE_INFO, "Received movie preview from BlastDoor for GUID: %@", buf, 0xCu);
    }
  }
  if (!a2 || a3)
  {
    if (a3) {
      uint64_t v42 = [a3 copy];
    }
    else {
      uint64_t v42 = [objc_alloc(MEMORY[0x1E4F28C58]) initWithDomain:@"__kIMPreviewGenerationErrorDomain" code:1 userInfo:0];
    }
    *(void *)(*(void *)(*(void *)(a1 + 88) + 8) + 40) = v42;
    if (IMOSLoggingEnabled())
    {
      uint64_t v43 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v43, OS_LOG_TYPE_INFO))
      {
        uint64_t v44 = *(void *)(*(void *)(*(void *)(a1 + 88) + 8) + 40);
        uint64_t v45 = *(void *)(a1 + 32);
        *(_DWORD *)buf = 138412546;
        *(void *)&uint8_t buf[4] = v44;
        *(_WORD *)&unsigned char buf[12] = 2112;
        *(void *)&buf[14] = v45;
        uint64_t v26 = "Result is nil or there's an error: %@ for GUID: %@";
        int v27 = v43;
        uint32_t v28 = 22;
        goto LABEL_62;
      }
    }
  }
  else
  {
    MEMORY[0x1A6227910](@"BlastDoorVideoPreview", @"BlastDoor");
    char isKindOfClass = objc_opt_isKindOfClass();
    if (isKindOfClass) {
      int v9 = a2;
    }
    else {
      int v9 = 0;
    }
    *(unsigned char *)(*(void *)(*(void *)(a1 + 72) + 8) + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = 1;
    id v46 = 0;
    if (isKindOfClass)
    {
      id v10 = objc_alloc_init(MEMORY[0x1E4F1CA60]);
      long long v11 = (void *)[a2 videoFormat];
      long long v12 = (void *)[a2 audioFormat];
      objc_msgSend(v10, "setValue:forKey:", objc_msgSend(NSNumber, "numberWithBool:", objc_msgSend(*(id *)(a1 + 40), "isFromMe")), @"is_from_me");
      objc_msgSend(v10, "setValue:forKey:", objc_msgSend(NSNumber, "numberWithBool:", objc_msgSend(*(id *)(a1 + 40), "isTrustedSender")), @"is_trusted_sender");
      objc_msgSend(v10, "setValue:forKey:", objc_msgSend(NSNumber, "numberWithInteger:", objc_msgSend(a2, "trackCount")), @"track_count");
      if ([v11 formatName]
        && objc_msgSend((id)objc_msgSend(v11, "formatName"), "length")
        && [v11 codec]
        && objc_msgSend((id)objc_msgSend(v11, "codec"), "length"))
      {
        objc_msgSend(v10, "setValue:forKey:", objc_msgSend(v11, "formatName"), @"video_format");
        objc_msgSend(v10, "setValue:forKey:", objc_msgSend(v11, "codec"), @"video_codec");
      }
      if ([v12 formatName]
        && objc_msgSend((id)objc_msgSend(v12, "formatName"), "length")
        && [v12 codec]
        && objc_msgSend((id)objc_msgSend(v12, "codec"), "length"))
      {
        objc_msgSend(v10, "setValue:forKey:", objc_msgSend(v12, "formatName"), @"audio_format");
        objc_msgSend(v10, "setValue:forKey:", objc_msgSend(v12, "codec"), @"audio_codec");
      }
      [+[IMMetricsCollector sharedInstance] trackEvent:@"com.apple.Messages.IMMetricsCollectorEventMoviePreviewGenerationSuccess" withDictionary:v10];
    }
    if (objc_msgSend((id)objc_msgSend(v9, "image"), "cgImage")
      && (CFTypeRef v13 = CFRetain((CFTypeRef)objc_msgSend((id)objc_msgSend(v9, "image"), "cgImage"))) != 0)
    {
      +[IMImageUtilities imageRefPxSize:v13];
      uint64_t v14 = *(void *)(*(void *)(a1 + 80) + 8);
      *(void *)(v14 + 32) = v15;
      *(void *)(v14 + 40) = v16;
      uint64_t v17 = *(void **)(a1 + 48);
      uint64_t v18 = *(void *)(*(void *)(a1 + 80) + 8);
      uint64_t v49 = *(void *)(a1 + 128);
      long long v19 = *(_OWORD *)(a1 + 112);
      *(_OWORD *)buf = *(_OWORD *)(a1 + 96);
      *(_OWORD *)&uint8_t buf[16] = v19;
      id v20 = (CGImage *)objc_msgSend(v17, "newCroppedAndRescaledImageFromImage:constraints:targetPxSize:", v13, buf, *(double *)(v18 + 32), *(double *)(v18 + 40));
      if ([v9 isAutoloop])
      {
        uint64_t v21 = v20;
      }
      else
      {
        uint64_t v21 = (CGImage *)[*(id *)(a1 + 48) newImageWithPlayButtonOverlay:v13 scale:*(void *)(a1 + 32) transferGUID:*(void *)(*(void *)(a1 + 88) + 8) + 40 error:*(double *)(a1 + 120)];
        if (v20) {
          CFRelease(v20);
        }
      }
      CFRelease(v13);
      if (v21)
      {
        if (+[IMImageUtilities persistPreviewToDiskCache:v21 previewURL:*(void *)(a1 + 56) error:&v46])
        {
          *(unsigned char *)(*(void *)(*(void *)(a1 + 72) + 8) + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = 1;
          uint64_t v29 = objc_msgSend((id)objc_msgSend(*(id *)(a1 + 56), "URLByDeletingPathExtension"), "URLByAppendingPathExtension:", @"plist");
          long long v30 = (void *)[MEMORY[0x1E4F1CA60] dictionary];
          objc_msgSend(v30, "setObject:forKeyedSubscript:", objc_msgSend(NSNumber, "numberWithBool:", objc_msgSend(v9, "videoIsMonoskiAsset")), @"IMIsMonoskiAssetKey");
          if (![v30 count])
          {
LABEL_55:
            CGImageRelease(v21);
            goto LABEL_63;
          }
          if (IMOSLoggingEnabled())
          {
            long long v31 = OSLogHandleForIMFoundationCategory();
            if (os_log_type_enabled(v31, OS_LOG_TYPE_INFO))
            {
              *(_WORD *)buf = 0;
              _os_log_impl(&dword_1A0772000, v31, OS_LOG_TYPE_INFO, "Writing preview metadata", buf, 2u);
            }
          }
          *(void *)uint64_t v47 = 0;
          long long v32 = (void *)[MEMORY[0x1E4F28F98] dataWithPropertyList:v30 format:200 options:0 error:v47];
          if (v32)
          {
            if ([v32 writeToURL:v29 atomically:1])
            {
              if (!IMOSLoggingEnabled()) {
                goto LABEL_55;
              }
              long long v33 = OSLogHandleForIMFoundationCategory();
              if (!os_log_type_enabled(v33, OS_LOG_TYPE_INFO)) {
                goto LABEL_55;
              }
              *(_DWORD *)buf = 138412290;
              *(void *)&uint8_t buf[4] = v29;
              uint64_t v34 = "Wrote down preview metadata plist to %@";
            }
            else
            {
              if (!IMOSLoggingEnabled()) {
                goto LABEL_55;
              }
              long long v33 = OSLogHandleForIMFoundationCategory();
              if (!os_log_type_enabled(v33, OS_LOG_TYPE_INFO)) {
                goto LABEL_55;
              }
              *(_DWORD *)buf = 138412290;
              *(void *)&uint8_t buf[4] = v29;
              uint64_t v34 = "Couldn't write down preview metadata plist to %@";
            }
          }
          else
          {
            if (!IMOSLoggingEnabled()) {
              goto LABEL_55;
            }
            long long v33 = OSLogHandleForIMFoundationCategory();
            if (!os_log_type_enabled(v33, OS_LOG_TYPE_INFO)) {
              goto LABEL_55;
            }
            *(_DWORD *)buf = 138412290;
            *(void *)&uint8_t buf[4] = *(void *)v47;
            uint64_t v34 = "Failed making preview metadata plist %@";
          }
          uint64_t v40 = v33;
          uint32_t v41 = 12;
        }
        else
        {
          *(void *)(*(void *)(*(void *)(a1 + 88) + 8) + 40) = [v46 copy];
          if (!IMOSLoggingEnabled()) {
            goto LABEL_55;
          }
          unint64_t v37 = OSLogHandleForIMFoundationCategory();
          if (!os_log_type_enabled(v37, OS_LOG_TYPE_INFO)) {
            goto LABEL_55;
          }
          uint64_t v38 = *(void *)(a1 + 32);
          uint64_t v39 = *(void *)(*(void *)(*(void *)(a1 + 88) + 8) + 40);
          *(_DWORD *)buf = 138412546;
          *(void *)&uint8_t buf[4] = v38;
          *(_WORD *)&unsigned char buf[12] = 2112;
          *(void *)&buf[14] = v39;
          uint64_t v34 = "IMMoviePreviewGenerator: Error persisting movie preview for GUID: %@ to disk: %@";
          uint64_t v40 = v37;
          uint32_t v41 = 22;
        }
        _os_log_impl(&dword_1A0772000, v40, OS_LOG_TYPE_INFO, v34, buf, v41);
        goto LABEL_55;
      }
      *(void *)(*(void *)(*(void *)(a1 + 88) + 8) + 40) = [objc_alloc(MEMORY[0x1E4F28C58]) initWithDomain:@"__kIMPreviewGenerationErrorDomain" code:3 userInfo:0];
      if (IMOSLoggingEnabled())
      {
        uint64_t v35 = OSLogHandleForIMFoundationCategory();
        if (os_log_type_enabled(v35, OS_LOG_TYPE_INFO))
        {
          uint64_t v36 = *(void *)(a1 + 32);
          *(_DWORD *)buf = 138412290;
          *(void *)&uint8_t buf[4] = v36;
          uint64_t v26 = "IMMoviePreviewGenerator: final image ref is nil for GUID: %@";
          int v27 = v35;
          uint32_t v28 = 12;
          goto LABEL_62;
        }
      }
    }
    else
    {
      *(void *)(*(void *)(*(void *)(a1 + 88) + 8) + 40) = [objc_alloc(MEMORY[0x1E4F28C58]) initWithDomain:@"__kIMPreviewGenerationErrorDomain" code:3 userInfo:0];
      [+[IMMetricsCollector sharedInstance] trackEvent:@"com.apple.Messages.IMMetricsCollectorEventMoviePreviewGenerationFailure"];
      if (IMOSLoggingEnabled())
      {
        __int16 v22 = OSLogHandleForIMFoundationCategory();
        if (os_log_type_enabled(v22, OS_LOG_TYPE_INFO))
        {
          uint64_t v23 = *(void *)(a1 + 56);
          uint64_t v24 = *(void *)(a1 + 32);
          uint64_t v25 = *(void *)(*(void *)(*(void *)(a1 + 88) + 8) + 40);
          *(_DWORD *)buf = 138412802;
          *(void *)&uint8_t buf[4] = v23;
          *(_WORD *)&unsigned char buf[12] = 2112;
          *(void *)&buf[14] = v24;
          *(_WORD *)&buf[22] = 2112;
          *(void *)&unsigned char buf[24] = v25;
          uint64_t v26 = "IMMoviePreviewGenerator: unable to generate image ref for URL: %@ transferGUID: %@ with error: %@";
          int v27 = v22;
          uint32_t v28 = 32;
LABEL_62:
          _os_log_impl(&dword_1A0772000, v27, OS_LOG_TYPE_INFO, v26, buf, v28);
        }
      }
    }
  }
LABEL_63:
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 64));
}

void sub_1A07ADCE0(void *a1, int a2)
{
  if (a2 == 1)
  {
    id v3 = objc_begin_catch(a1);
    *(void *)(*(void *)(v2[11] + 8) + 40) = v8;
    if (IMOSLoggingEnabled(v3))
    {
      uint64_t v4 = OSLogHandleForIMFoundationCategory("Warning");
      if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
      {
        uint64_t v5 = v2[7];
        uint64_t v6 = v2[4];
        uint64_t v7 = *(void *)(*(void *)(v2[11] + 8) + 40);
        int v9 = 138412802;
        uint64_t v10 = v5;
        __int16 v11 = 2112;
        uint64_t v12 = v6;
        __int16 v13 = 2112;
        uint64_t v14 = v7;
        _os_log_impl(&dword_1A0772000, v4, OS_LOG_TYPE_INFO, "IMMoviePreviewGenerator: failed to write image preview for URL %@ GUID: %@ error %@", (uint8_t *)&v9, 0x20u);
      }
    }
    objc_end_catch();
    JUMPOUT(0x1A07ADC84);
  }
  JUMPOUT(0x1A07ADDC0);
}

id sub_1A07AF44C(void *a1)
{
  id v1 = objc_msgSend(a1, "_dataForKey:");
  if (v1)
  {
    id v2 = JWDecodeCodableObjectWithStandardAllowlist();
    objc_opt_class();
    if (objc_opt_isKindOfClass())
    {
      id v3 = v2;
    }
    else
    {
      uint64_t v4 = IMLogHandleForCategory("IMMessagePartHistoryHistoricalContent");
      if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR)) {
        sub_1A09EF080(v4);
      }

      id v3 = 0;
    }
  }
  else
  {
    id v3 = 0;
  }

  return v3;
}

id sub_1A07AF510(void *a1)
{
  id v1 = objc_msgSend(a1, "_numberForKey:");
  [v1 doubleValue];
  double v3 = v2;

  if (v3 == 0.0)
  {
    uint64_t v4 = 0;
  }
  else
  {
    uint64_t v4 = [MEMORY[0x1E4F1C9C8] dateWithTimeIntervalSinceReferenceDate:v3];
  }

  return v4;
}

void sub_1A07AF580(void *a1, uint64_t a2, void *a3, void *a4)
{
  id v6 = a3;
  id v7 = a4;
  uint64_t v8 = JWEncodeCodableObject();
  if (v8)
  {
    [a1 setObject:v8 forKey:v7];
  }
}

void sub_1A07AF658(void *a1, uint64_t a2, void *a3, void *a4)
{
  id v8 = a4;
  [a3 timeIntervalSinceReferenceDate];
  if (v6 != 0.0)
  {
    id v7 = objc_msgSend(NSNumber, "numberWithDouble:");
    [a1 setObject:v7 forKey:v8];
  }
}

id sub_1A07AF730(id a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  uint64_t v5 = [v4 objectForKeyedSubscript:@"IMSerializedErrorDomainKey"];
  double v6 = [v4 objectForKeyedSubscript:@"IMSerializedErrorCodeKey"];
  id v7 = [v4 objectForKeyedSubscript:@"IMSerializedErrorUserInfoKey"];

  id v8 = 0;
  if (v5 && v6)
  {
    a1 = (id)objc_msgSend(a1, "initWithDomain:code:userInfo:", v5, objc_msgSend(v6, "integerValue"), v7);
    id v8 = a1;
  }

  return v8;
}

id sub_1A07AF7F8(void *a1)
{
  v15[3] = *MEMORY[0x1E4F143B8];
  double v2 = [a1 userInfo];
  double v3 = (void *)[v2 mutableCopy];

  if (v3)
  {
    uint64_t v4 = *MEMORY[0x1E4F28A50];
    uint64_t v5 = [v3 objectForKeyedSubscript:*MEMORY[0x1E4F28A50]];
    double v6 = v5;
    if (v5)
    {
      id v7 = objc_msgSend(v5, "serializedError_im");
      [v3 setObject:v7 forKeyedSubscript:v4];
    }
    v14[0] = @"IMSerializedErrorDomainKey";
    id v8 = [a1 domain];
    v15[0] = v8;
    v14[1] = @"IMSerializedErrorCodeKey";
    int v9 = objc_msgSend(NSNumber, "numberWithInteger:", objc_msgSend(a1, "code"));
    v14[2] = @"IMSerializedErrorUserInfoKey";
    v15[1] = v9;
    v15[2] = v3;
    uint64_t v10 = [MEMORY[0x1E4F1C9E8] dictionaryWithObjects:v15 forKeys:v14 count:3];
  }
  else
  {
    v12[0] = @"IMSerializedErrorDomainKey";
    double v6 = [a1 domain];
    v12[1] = @"IMSerializedErrorCodeKey";
    v13[0] = v6;
    id v8 = objc_msgSend(NSNumber, "numberWithInteger:", objc_msgSend(a1, "code"));
    v13[1] = v8;
    uint64_t v10 = [MEMORY[0x1E4F1C9E8] dictionaryWithObjects:v13 forKeys:v12 count:2];
  }

  return v10;
}

id sub_1A07AF9D8(void *a1)
{
  double v2 = NSString;
  uint64_t v3 = [a1 code];
  uint64_t v4 = [a1 domain];
  uint64_t v5 = [v2 stringWithFormat:@"%ld: %@", v3, v4];

  return v5;
}

id sub_1A07AFA5C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v19 = *MEMORY[0x1E4F143B8];
  id v3 = a3;
  uint64_t v4 = objc_msgSend(objc_alloc(MEMORY[0x1E4F1CA48]), "initWithCapacity:", objc_msgSend(v3, "count"));
  long long v14 = 0u;
  long long v15 = 0u;
  long long v16 = 0u;
  long long v17 = 0u;
  id v5 = v3;
  uint64_t v6 = [v5 countByEnumeratingWithState:&v14 objects:v18 count:16];
  if (v6)
  {
    uint64_t v7 = v6;
    uint64_t v8 = *(void *)v15;
    do
    {
      for (uint64_t i = 0; i != v7; ++i)
      {
        if (*(void *)v15 != v8) {
          objc_enumerationMutation(v5);
        }
        uint64_t v10 = *(void *)(*((void *)&v14 + 1) + 8 * i);
        id v11 = objc_alloc(MEMORY[0x1E4F28C58]);
        uint64_t v12 = objc_msgSend(v11, "initWithSerializedError_im:", v10, (void)v14);
        [v4 addObject:v12];
      }
      uint64_t v7 = [v5 countByEnumeratingWithState:&v14 objects:v18 count:16];
    }
    while (v7);
  }

  return v4;
}

id sub_1A07AFBB8(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v17 = *MEMORY[0x1E4F143B8];
  id v3 = a3;
  uint64_t v4 = objc_msgSend(objc_alloc(MEMORY[0x1E4F1CA48]), "initWithCapacity:", objc_msgSend(v3, "count"));
  long long v12 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  long long v15 = 0u;
  id v5 = v3;
  uint64_t v6 = [v5 countByEnumeratingWithState:&v12 objects:v16 count:16];
  if (v6)
  {
    uint64_t v7 = v6;
    uint64_t v8 = *(void *)v13;
    do
    {
      for (uint64_t i = 0; i != v7; ++i)
      {
        if (*(void *)v13 != v8) {
          objc_enumerationMutation(v5);
        }
        uint64_t v10 = objc_msgSend(*(id *)(*((void *)&v12 + 1) + 8 * i), "serializedError_im", (void)v12);
        [v4 addObject:v10];
      }
      uint64_t v7 = [v5 countByEnumeratingWithState:&v12 objects:v16 count:16];
    }
    while (v7);
  }

  return v4;
}

void sub_1A07B019C(uint64_t a1)
{
}

void sub_1A07B01A8(uint64_t a1)
{
}

id sub_1A07B022C()
{
  if (qword_1E94FE998 != -1) {
    dispatch_once(&qword_1E94FE998, &unk_1EF2C0520);
  }
  uint64_t v0 = (void *)qword_1E94FEA30;

  return v0;
}

uint64_t sub_1A07B0280()
{
  uint64_t v0 = [MEMORY[0x1E4F28B50] mainBundle];
  id v1 = [v0 bundleIdentifier];
  int v2 = [v1 isEqualToString:@"com.apple.Messages"];

  if (v2)
  {
    uint64_t v3 = [MEMORY[0x1E4F1CB18] standardUserDefaults];
  }
  else
  {
    uint64_t v3 = [objc_alloc(MEMORY[0x1E4F1CB18]) initWithSuiteName:@"com.apple.Messages"];
  }
  uint64_t v4 = qword_1E94FEA30;
  qword_1E94FEA30 = v3;

  return MEMORY[0x1F41817F8](v3, v4);
}

uint64_t IMSharedUtilitiesProtoCloudKitEncryptedMessageReadFrom(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  id v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      switch((v10 >> 3))
      {
        case 1u:
          char v17 = 0;
          unsigned int v18 = 0;
          uint64_t v19 = 0;
          *(_WORD *)(a1 + 140) |= 0x100u;
          while (1)
          {
            uint64_t v20 = *v3;
            unint64_t v21 = *(void *)(a2 + v20);
            if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
              break;
            }
            char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
            *(void *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0) {
              goto LABEL_95;
            }
            v17 += 7;
            BOOL v14 = v18++ >= 9;
            if (v14)
            {
              LODWORD(v19) = 0;
              goto LABEL_97;
            }
          }
          *(unsigned char *)(a2 + *v5) = 1;
LABEL_95:
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v19) = 0;
          }
LABEL_97:
          uint64_t v76 = 136;
          goto LABEL_131;
        case 2u:
          String = (void *)PBReaderReadString();

          id v25 = String;
          uint64_t v26 = 104;
          goto LABEL_79;
        case 3u:
          int v27 = (void *)PBReaderReadString();

          id v25 = v27;
          uint64_t v26 = 88;
          goto LABEL_79;
        case 4u:
          Data = (void *)PBReaderReadData();

          id v25 = Data;
          uint64_t v26 = 96;
          goto LABEL_79;
        case 5u:
          uint64_t v29 = (void *)PBReaderReadString();

          id v25 = v29;
          uint64_t v26 = 72;
          goto LABEL_79;
        case 6u:
          long long v30 = (void *)PBReaderReadData();

          id v25 = v30;
          uint64_t v26 = 128;
          goto LABEL_79;
        case 7u:
          long long v31 = (void *)PBReaderReadData();

          id v25 = v31;
          uint64_t v26 = 112;
          goto LABEL_79;
        case 8u:
          long long v32 = (void *)PBReaderReadString();

          id v25 = v32;
          uint64_t v26 = 80;
          goto LABEL_79;
        case 9u:
          char v33 = 0;
          unsigned int v34 = 0;
          uint64_t v35 = 0;
          *(_WORD *)(a1 + 140) |= 0x20u;
          while (2)
          {
            uint64_t v36 = *v3;
            unint64_t v37 = *(void *)(a2 + v36);
            if (v37 == -1 || v37 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v38 = *(unsigned char *)(*(void *)(a2 + *v7) + v37);
              *(void *)(a2 + v36) = v37 + 1;
              v35 |= (unint64_t)(v38 & 0x7F) << v33;
              if (v38 < 0)
              {
                v33 += 7;
                BOOL v14 = v34++ >= 9;
                if (v14)
                {
                  uint64_t v35 = 0;
                  goto LABEL_101;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v35 = 0;
          }
LABEL_101:
          uint64_t v77 = 48;
          goto LABEL_122;
        case 0xAu:
          char v39 = 0;
          unsigned int v40 = 0;
          uint64_t v35 = 0;
          *(_WORD *)(a1 + 140) |= 0x10u;
          while (2)
          {
            uint64_t v41 = *v3;
            unint64_t v42 = *(void *)(a2 + v41);
            if (v42 == -1 || v42 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v43 = *(unsigned char *)(*(void *)(a2 + *v7) + v42);
              *(void *)(a2 + v41) = v42 + 1;
              v35 |= (unint64_t)(v43 & 0x7F) << v39;
              if (v43 < 0)
              {
                v39 += 7;
                BOOL v14 = v40++ >= 9;
                if (v14)
                {
                  uint64_t v35 = 0;
                  goto LABEL_105;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v35 = 0;
          }
LABEL_105:
          uint64_t v77 = 40;
          goto LABEL_122;
        case 0xBu:
          char v44 = 0;
          unsigned int v45 = 0;
          uint64_t v35 = 0;
          *(_WORD *)(a1 + 140) |= 8u;
          while (2)
          {
            uint64_t v46 = *v3;
            unint64_t v47 = *(void *)(a2 + v46);
            if (v47 == -1 || v47 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v48 = *(unsigned char *)(*(void *)(a2 + *v7) + v47);
              *(void *)(a2 + v46) = v47 + 1;
              v35 |= (unint64_t)(v48 & 0x7F) << v44;
              if (v48 < 0)
              {
                v44 += 7;
                BOOL v14 = v45++ >= 9;
                if (v14)
                {
                  uint64_t v35 = 0;
                  goto LABEL_109;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v35 = 0;
          }
LABEL_109:
          uint64_t v77 = 32;
          goto LABEL_122;
        case 0xCu:
          uint64_t v49 = (void *)PBReaderReadData();

          id v25 = v49;
          uint64_t v26 = 120;
          goto LABEL_79;
        case 0xDu:
          char v50 = 0;
          unsigned int v51 = 0;
          uint64_t v35 = 0;
          *(_WORD *)(a1 + 140) |= 4u;
          while (2)
          {
            uint64_t v52 = *v3;
            unint64_t v53 = *(void *)(a2 + v52);
            if (v53 == -1 || v53 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v54 = *(unsigned char *)(*(void *)(a2 + *v7) + v53);
              *(void *)(a2 + v52) = v53 + 1;
              v35 |= (unint64_t)(v54 & 0x7F) << v50;
              if (v54 < 0)
              {
                v50 += 7;
                BOOL v14 = v51++ >= 9;
                if (v14)
                {
                  uint64_t v35 = 0;
                  goto LABEL_113;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v35 = 0;
          }
LABEL_113:
          uint64_t v77 = 24;
          goto LABEL_122;
        case 0xEu:
          char v55 = 0;
          unsigned int v56 = 0;
          uint64_t v35 = 0;
          *(_WORD *)(a1 + 140) |= 2u;
          while (2)
          {
            uint64_t v57 = *v3;
            unint64_t v58 = *(void *)(a2 + v57);
            if (v58 == -1 || v58 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v59 = *(unsigned char *)(*(void *)(a2 + *v7) + v58);
              *(void *)(a2 + v57) = v58 + 1;
              v35 |= (unint64_t)(v59 & 0x7F) << v55;
              if (v59 < 0)
              {
                v55 += 7;
                BOOL v14 = v56++ >= 9;
                if (v14)
                {
                  uint64_t v35 = 0;
                  goto LABEL_117;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v35 = 0;
          }
LABEL_117:
          uint64_t v77 = 16;
          goto LABEL_122;
        case 0xFu:
          char v60 = 0;
          unsigned int v61 = 0;
          uint64_t v35 = 0;
          *(_WORD *)(a1 + 140) |= 1u;
          while (2)
          {
            uint64_t v62 = *v3;
            unint64_t v63 = *(void *)(a2 + v62);
            if (v63 == -1 || v63 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v64 = *(unsigned char *)(*(void *)(a2 + *v7) + v63);
              *(void *)(a2 + v62) = v63 + 1;
              v35 |= (unint64_t)(v64 & 0x7F) << v60;
              if (v64 < 0)
              {
                v60 += 7;
                BOOL v14 = v61++ >= 9;
                if (v14)
                {
                  uint64_t v35 = 0;
                  goto LABEL_121;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v35 = 0;
          }
LABEL_121:
          uint64_t v77 = 8;
LABEL_122:
          *(void *)(a1 + v77) = v35;
          continue;
        case 0x10u:
          v65 = (void *)PBReaderReadString();

          id v25 = v65;
          uint64_t v26 = 56;
LABEL_79:
          *(void *)(a1 + v26) = v25;
          continue;
        case 0x11u:
          char v66 = 0;
          unsigned int v67 = 0;
          uint64_t v19 = 0;
          *(_WORD *)(a1 + 140) |= 0x80u;
          while (2)
          {
            uint64_t v68 = *v3;
            unint64_t v69 = *(void *)(a2 + v68);
            if (v69 == -1 || v69 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v70 = *(unsigned char *)(*(void *)(a2 + *v7) + v69);
              *(void *)(a2 + v68) = v69 + 1;
              v19 |= (unint64_t)(v70 & 0x7F) << v66;
              if (v70 < 0)
              {
                v66 += 7;
                BOOL v14 = v67++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_126;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v19) = 0;
          }
LABEL_126:
          uint64_t v76 = 68;
          goto LABEL_131;
        case 0x12u:
          char v71 = 0;
          unsigned int v72 = 0;
          uint64_t v19 = 0;
          *(_WORD *)(a1 + 140) |= 0x40u;
          break;
        default:
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
          continue;
      }
      while (1)
      {
        uint64_t v73 = *v3;
        unint64_t v74 = *(void *)(a2 + v73);
        if (v74 == -1 || v74 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v75 = *(unsigned char *)(*(void *)(a2 + *v7) + v74);
        *(void *)(a2 + v73) = v74 + 1;
        v19 |= (unint64_t)(v75 & 0x7F) << v71;
        if ((v75 & 0x80) == 0) {
          goto LABEL_128;
        }
        v71 += 7;
        BOOL v14 = v72++ >= 9;
        if (v14)
        {
          LODWORD(v19) = 0;
          goto LABEL_130;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_128:
      if (*(unsigned char *)(a2 + *v5)) {
        LODWORD(v19) = 0;
      }
LABEL_130:
      uint64_t v76 = 64;
LABEL_131:
      *(_DWORD *)(a1 + v76) = v19;
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

id sub_1A07B25D0()
{
  uint64_t v0 = (void *)qword_1EB4A5E80;
  if (!qword_1EB4A5E80)
  {
    id v1 = (void **)MEMORY[0x1A6227920]("DDResultAttributeName", @"DataDetectorsCore");
    if (v1) {
      int v2 = *v1;
    }
    else {
      int v2 = 0;
    }
    objc_storeStrong((id *)&qword_1EB4A5E80, v2);
    uint64_t v0 = (void *)qword_1EB4A5E80;
  }

  return v0;
}

id sub_1A07B2640(void *a1)
{
  id v2 = objc_alloc_init(MEMORY[0x1E4F28E60]);
  uint64_t v3 = *MEMORY[0x1E4F6C1F8];
  uint64_t v4 = [a1 length];
  v8[0] = MEMORY[0x1E4F143A8];
  v8[1] = 3221225472;
  v8[2] = sub_1A07B2730;
  v8[3] = &unk_1E5A105B0;
  id v9 = v2;
  id v5 = v2;
  objc_msgSend(a1, "enumerateAttribute:inRange:options:usingBlock:", v3, 0, v4, 0, v8);
  uint64_t v6 = (void *)[v5 copy];

  return v6;
}

void sub_1A07B2730(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_opt_class();
  if (objc_opt_isKindOfClass()) {
    objc_msgSend(*(id *)(a1 + 32), "addIndex:", objc_msgSend(v3, "unsignedIntegerValue"));
  }
}

id sub_1A07B27A4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = sub_1A07B25D0();
  int v8 = objc_msgSend(a1, "attribute:existsInRange:", v7, a3, a4);

  if (v8) {
    objc_msgSend(a1, "dd_attributedSubstringFromRange:", a3, a4);
  }
  else {
  id v9 = objc_msgSend(a1, "attributedSubstringFromRange:", a3, a4);
  }

  return v9;
}

id sub_1A07B2838(void *a1)
{
  if (a1 && [a1 length])
  {
    uint64_t v7 = 0;
    int v8 = &v7;
    uint64_t v9 = 0x3032000000;
    unint64_t v10 = sub_1A07777BC;
    uint64_t v11 = sub_1A07776C4;
    id v12 = 0;
    id v12 = objc_alloc_init(MEMORY[0x1E4F1CA48]);
    uint64_t v2 = [a1 length];
    uint64_t v3 = *MEMORY[0x1E4F6C1D0];
    v6[0] = MEMORY[0x1E4F143A8];
    v6[1] = 3221225472;
    _OWORD v6[2] = sub_1A07B2988;
    v6[3] = &unk_1E5A105D8;
    v6[4] = a1;
    void v6[5] = &v7;
    objc_msgSend(a1, "enumerateAttribute:inRange:options:usingBlock:", v3, 0, v2, 0, v6);
    uint64_t v4 = (void *)[(id)v8[5] copy];
    _Block_object_dispose(&v7, 8);
  }
  else
  {
    uint64_t v4 = (void *)MEMORY[0x1E4F1CBF0];
  }

  return v4;
}

void sub_1A07B2970(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A07B2988(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a2)
  {
    objc_msgSend(*(id *)(a1 + 32), "__im_attributedSubstringFromRange:");
    id v16 = (id)objc_claimAutoreleasedReturnValue();
    uint64_t v7 = *(void **)(a1 + 32);
    int v8 = sub_1A07B25D0();
    LOBYTE(v7) = objc_msgSend(v7, "attribute:existsInRange:", v8, a3, a4);

    if (v7)
    {
      uint64_t v9 = v16;
    }
    else
    {
      unint64_t v10 = objc_msgSend(*(id *)(a1 + 32), "attributedSubstringFromRange:", a3, a4);
      uint64_t v11 = [v10 trimmedString];

      [v11 string];
      uint64_t v9 = v11;
    }
    id v17 = v9;
    id v12 = [v9 string];
    char v13 = [MEMORY[0x1E4F28B88] whitespaceAndNewlineCharacterSet];
    BOOL v14 = [v12 stringByTrimmingCharactersInSet:v13];

    int v15 = [MEMORY[0x1E4F1CB10] URLWithString:v14];
    if (v15) {
      [*(id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) addObject:v15];
    }
  }
}

uint64_t sub_1A07B2AE8(void *a1, uint64_t a2, void *a3)
{
  uint64_t v17 = *MEMORY[0x1E4F143B8];
  id v4 = a3;
  uint64_t v5 = *MEMORY[0x1E4F6C1F8];
  uint64_t v6 = [v4 attribute:*MEMORY[0x1E4F6C1F8] atIndex:0 effectiveRange:0];
  uint64_t v7 = [v6 integerValue];

  if (IMOSLoggingEnabled())
  {
    int v8 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
    {
      uint64_t v9 = [NSNumber numberWithInteger:v7];
      LODWORD(buf) = 138412290;
      *(void *)((char *)&buf + 4) = v9;
      _os_log_impl(&dword_1A0772000, v8, OS_LOG_TYPE_INFO, "Recently Deleted | Found stored part number %@", (uint8_t *)&buf, 0xCu);
    }
  }
  *(void *)&long long buf = 0;
  *((void *)&buf + 1) = &buf;
  uint64_t v15 = 0x2020000000;
  uint64_t v16 = 0;
  uint64_t v10 = [a1 length];
  v13[0] = MEMORY[0x1E4F143A8];
  v13[1] = 3221225472;
  void v13[2] = sub_1A07B2CE0;
  v13[3] = &unk_1E5A10650;
  v13[4] = &buf;
  v13[5] = v7;
  objc_msgSend(a1, "enumerateAttribute:inRange:options:usingBlock:", v5, 0, v10, 2, v13);
  uint64_t v11 = *(void *)(*((void *)&buf + 1) + 24);
  _Block_object_dispose(&buf, 8);

  return v11;
}

void sub_1A07B2CA0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15)
{
  if (a2 == 1)
  {
    objc_begin_catch(exception_object);
    objc_end_catch();
    JUMPOUT(0x1A07B2BCCLL);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1A07B2CE0(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, unsigned char *a5)
{
  uint64_t result = [a2 integerValue];
  uint64_t v10 = *(void *)(a1 + 40);
  if (result >= v10)
  {
    if (result != v10) {
      return result;
    }
    uint64_t v11 = 0x7FFFFFFFFFFFFFFFLL;
  }
  else
  {
    uint64_t v11 = a3 + a4;
  }
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = v11;
  *a5 = 1;
  return result;
}

id sub_1A07B2D4C(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v13 = 0;
  BOOL v14 = &v13;
  uint64_t v15 = 0x3032000000;
  uint64_t v16 = sub_1A07777BC;
  uint64_t v17 = sub_1A07776C4;
  id v18 = 0;
  uint64_t v5 = objc_msgSend(a1, "__im_countMessageParts");
  if (v5)
  {
    uint64_t v6 = [a1 length];
    uint64_t v7 = *MEMORY[0x1E4F6C1F8];
    v12[0] = MEMORY[0x1E4F143A8];
    v12[1] = 3221225472;
    void v12[2] = sub_1A07B2ED8;
    uint64_t v12[3] = &unk_1E5A10678;
    v12[6] = a3;
    v12[7] = v5;
    void v12[4] = a1;
    void v12[5] = &v13;
    objc_msgSend(a1, "enumerateAttribute:inRange:options:usingBlock:", v7, 0, v6, 0, v12);
  }
  int v8 = (void *)v14[5];
  if (!v8)
  {
    uint64_t v9 = IMLogHandleForCategory("MessagePartUtilities");
    if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
      sub_1A09EF13C();
    }

    int v8 = (void *)v14[5];
  }
  id v10 = v8;
  _Block_object_dispose(&v13, 8);

  return v10;
}

void sub_1A07B2EBC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A07B2ED8(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, unsigned char *a5)
{
  uint64_t v28 = *MEMORY[0x1E4F143B8];
  id v9 = a2;
  objc_opt_class();
  if (objc_opt_isKindOfClass()) {
    uint64_t v10 = [v9 unsignedIntegerValue];
  }
  else {
    uint64_t v10 = 0;
  }
  if (v10 == *(void *)(a1 + 48))
  {
    if (IMOSLoggingEnabled())
    {
      uint64_t v11 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
      {
        uint64_t v12 = *(void *)(a1 + 48);
        uint64_t v13 = [*(id *)(a1 + 32) length];
        uint64_t v14 = *(void *)(a1 + 56);
        int v18 = 134219008;
        uint64_t v19 = a3;
        __int16 v20 = 2048;
        uint64_t v21 = a4;
        __int16 v22 = 2048;
        uint64_t v23 = v12;
        __int16 v24 = 2048;
        uint64_t v25 = v13;
        __int16 v26 = 2048;
        uint64_t v27 = v14;
        _os_log_impl(&dword_1A0772000, v11, OS_LOG_TYPE_INFO, "Found message part with range (%ld, %ld) matching message part index: %ld in message with length %ld and totalPartCount %ld", (uint8_t *)&v18, 0x34u);
      }
    }
    uint64_t v15 = objc_msgSend(*(id *)(a1 + 32), "__im_partDescriptorWithIndex:range:totalPartCount:", v10, a3, a4, *(void *)(a1 + 56));
    uint64_t v16 = *(void *)(*(void *)(a1 + 40) + 8);
    uint64_t v17 = *(void **)(v16 + 40);
    *(void *)(v16 + 40) = v15;

    *a5 = 1;
  }
}

id sub_1A07B3080(void *a1, uint64_t a2, NSUInteger a3, NSUInteger a4)
{
  uint64_t v23 = *MEMORY[0x1E4F143B8];
  uint64_t v16 = 0;
  uint64_t v17 = &v16;
  uint64_t v18 = 0x3032000000;
  uint64_t v19 = sub_1A07777BC;
  __int16 v20 = sub_1A07776C4;
  id v21 = 0;
  uint64_t v7 = objc_msgSend(a1, "__im_countMessageParts");
  if (v7)
  {
    uint64_t v8 = [a1 length];
    uint64_t v9 = *MEMORY[0x1E4F6C1F8];
    v15[0] = MEMORY[0x1E4F143A8];
    v15[1] = 3221225472;
    v15[2] = sub_1A07B3258;
    v15[3] = &unk_1E5A106A0;
    v15[6] = a3;
    v15[7] = a4;
    v15[8] = v7;
    void v15[4] = a1;
    v15[5] = &v16;
    objc_msgSend(a1, "enumerateAttribute:inRange:options:usingBlock:", v9, 0, v8, 0, v15);
  }
  uint64_t v10 = (void *)v17[5];
  if (!v10)
  {
    uint64_t v11 = IMLogHandleForCategory("MessagePartUtilities");
    if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
    {
      v25.location = a3;
      v25.length = a4;
      uint64_t v12 = NSStringFromRange(v25);
      sub_1A09EF1A4(v12, buf, v11);
    }

    uint64_t v10 = (void *)v17[5];
  }
  id v13 = v10;
  _Block_object_dispose(&v16, 8);

  return v13;
}

void sub_1A07B3230(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A07B3258(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, unsigned char *a5)
{
  uint64_t v28 = *MEMORY[0x1E4F143B8];
  id v9 = a2;
  objc_opt_class();
  if (objc_opt_isKindOfClass()) {
    uint64_t v10 = [v9 unsignedIntegerValue];
  }
  else {
    uint64_t v10 = 0;
  }
  if (*(void *)(a1 + 48) == a3 && *(void *)(a1 + 56) == a4)
  {
    if (IMOSLoggingEnabled())
    {
      uint64_t v12 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v12, OS_LOG_TYPE_INFO))
      {
        uint64_t v13 = [*(id *)(a1 + 32) length];
        uint64_t v14 = *(void *)(a1 + 64);
        int v18 = 134219008;
        uint64_t v19 = a3;
        __int16 v20 = 2048;
        uint64_t v21 = a4;
        __int16 v22 = 2048;
        uint64_t v23 = v10;
        __int16 v24 = 2048;
        uint64_t v25 = v13;
        __int16 v26 = 2048;
        uint64_t v27 = v14;
        _os_log_impl(&dword_1A0772000, v12, OS_LOG_TYPE_INFO, "Found message part with range (%ld, %ld) matching message part index: %ld in message with length %ld and totalPartCount %ld", (uint8_t *)&v18, 0x34u);
      }
    }
    uint64_t v15 = objc_msgSend(*(id *)(a1 + 32), "__im_partDescriptorWithIndex:range:totalPartCount:", v10, *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64));
    uint64_t v16 = *(void *)(*(void *)(a1 + 40) + 8);
    uint64_t v17 = *(void **)(v16 + 40);
    *(void *)(v16 + 40) = v15;

    *a5 = 1;
  }
}

id sub_1A07B33FC(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  id v6 = a3;
  if (!a4) {
    goto LABEL_4;
  }
  uint64_t v7 = objc_msgSend(a1, "__im_messagePartMatchingPartIndex:", a4 - 1);
  if (v7)
  {
    uint64_t v8 = v7;
    uint64_t v9 = [v7 messagePartRange];
    a4 = v9 + v10;

LABEL_4:
    uint64_t v11 = (void *)[a1 mutableCopy];
    [v11 insertAttributedString:v6 atIndex:a4];
    id v12 = (id)[v11 copy];

    goto LABEL_8;
  }
  uint64_t v13 = IMLogHandleForCategory("MessagePartUtilities");
  if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR)) {
    sub_1A09EF1FC();
  }

  id v12 = a1;
LABEL_8:

  return v12;
}

id sub_1A07B34DC(void *a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v6 = (void *)[a4 mutableCopy];
  uint64_t v7 = v6;
  if (v6) {
    id v8 = v6;
  }
  else {
    id v8 = objc_alloc_init(MEMORY[0x1E4F28E48]);
  }
  uint64_t v9 = v8;

  uint64_t v10 = *MEMORY[0x1E4F6C1F8];
  objc_msgSend(v9, "removeAttribute:range:", *MEMORY[0x1E4F6C1F8], 0, objc_msgSend(v9, "length"));
  uint64_t v11 = [NSNumber numberWithInteger:a3];
  objc_msgSend(v9, "addAttribute:value:range:", v10, v11, 0, objc_msgSend(v9, "length"));

  id v12 = v9;
  uint64_t v13 = objc_msgSend(a1, "__im_messagePartMatchingPartIndex:", a3);
  uint64_t v14 = v13;
  if (v13)
  {
    uint64_t v15 = [v13 messagePartRange];
    uint64_t v17 = v16;
    int v18 = (void *)[a1 mutableCopy];
    objc_msgSend(v18, "replaceCharactersInRange:withAttributedString:", v15, v17, v12);
    id v19 = (id)[v18 copy];
  }
  else
  {
    __int16 v20 = IMLogHandleForCategory("MessagePartUtilities");
    if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR)) {
      sub_1A09EF264();
    }

    id v19 = a1;
  }

  return v19;
}

id sub_1A07B365C(void *a1)
{
  uint64_t v2 = objc_msgSend(a1, "__im_messagePartMatchingPartIndex:");
  uint64_t v3 = v2;
  if (v2)
  {
    uint64_t v4 = [v2 messagePartRange];
    uint64_t v6 = v5;
    uint64_t v7 = (void *)[a1 mutableCopy];
    objc_msgSend(v7, "deleteCharactersInRange:", v4, v6);
    id v8 = (id)[v7 copy];
  }
  else
  {
    uint64_t v9 = IMLogHandleForCategory("MessagePartUtilities");
    if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
      sub_1A09EF2CC();
    }

    id v8 = a1;
  }

  return v8;
}

void sub_1A07B3730(uint64_t a1, uint64_t a2, void *a3, void *a4, void *a5, void *a6)
{
  id v9 = a3;
  id v10 = a4;
  id v11 = objc_alloc_init(MEMORY[0x1E4F28E60]);
  id v12 = objc_alloc_init(MEMORY[0x1E4F28E60]);
  uint64_t v13 = objc_msgSend(v9, "__im_messagePartIndexes");
  uint64_t v14 = objc_msgSend(v10, "__im_messagePartIndexes");
  uint64_t v15 = (void *)[v13 mutableCopy];
  [v15 addIndexes:v14];
  uint64_t v16 = (void *)[v15 copy];
  uint64_t v21 = MEMORY[0x1E4F143A8];
  uint64_t v22 = 3221225472;
  uint64_t v23 = sub_1A07B38D0;
  __int16 v24 = &unk_1E5A106C8;
  id v25 = v10;
  id v26 = v9;
  id v17 = v11;
  id v27 = v17;
  id v18 = v12;
  id v28 = v18;
  id v19 = v9;
  id v20 = v10;
  [v16 enumerateIndexesUsingBlock:&v21];
  if (a5) {
    *a5 = (id)objc_msgSend(v17, "copy", v21, v22, v23, v24, v25, v26, v27, v28);
  }
  if (a6) {
    *a6 = (id)[v18 copy];
  }
}

void sub_1A07B38D0(id *a1, uint64_t a2)
{
  uint64_t v18 = *MEMORY[0x1E4F143B8];
  uint64_t v4 = objc_msgSend(a1[4], "__im_messagePartMatchingPartIndex:", a2);
  uint64_t v5 = objc_msgSend(a1[5], "__im_messagePartMatchingPartIndex:", a2);
  uint64_t v6 = v5;
  if (v4) {
    BOOL v7 = v5 == 0;
  }
  else {
    BOOL v7 = 1;
  }
  if (v7)
  {
    if (v4)
    {
      if (IMOSLoggingEnabled())
      {
        id v8 = OSLogHandleForIMFoundationCategory();
        if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
        {
          int v16 = 134217984;
          uint64_t v17 = a2;
          _os_log_impl(&dword_1A0772000, v8, OS_LOG_TYPE_INFO, "Message part index %ld was in the previous message, but is not in the edited message", (uint8_t *)&v16, 0xCu);
        }
      }
      [a1[7] addIndex:a2];
    }
    else
    {
      BOOL v13 = v5 != 0;
      uint64_t v14 = IMLogHandleForCategory("MessagePartUtilities");
      uint64_t v15 = v14;
      if (v13)
      {
        if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR)) {
          sub_1A09EF334();
        }

        [a1[6] addIndex:a2];
      }
      else
      {
        if (os_log_type_enabled(v14, OS_LOG_TYPE_FAULT)) {
          sub_1A09EF39C();
        }
      }
    }
  }
  else
  {
    int v9 = [v5 isEqualToMessagePart:v4 ignoringRange:1];
    int v10 = IMOSLoggingEnabled();
    if (v9)
    {
      if (v10)
      {
        id v11 = OSLogHandleForIMFoundationCategory();
        if (os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
        {
          int v16 = 134217984;
          uint64_t v17 = a2;
          _os_log_impl(&dword_1A0772000, v11, OS_LOG_TYPE_INFO, "Message part index %ld has the same contents, is not edited", (uint8_t *)&v16, 0xCu);
        }
      }
    }
    else
    {
      if (v10)
      {
        id v12 = OSLogHandleForIMFoundationCategory();
        if (os_log_type_enabled(v12, OS_LOG_TYPE_INFO))
        {
          int v16 = 134217984;
          uint64_t v17 = a2;
          _os_log_impl(&dword_1A0772000, v12, OS_LOG_TYPE_INFO, "Message part index %ld has different contents, was edited", (uint8_t *)&v16, 0xCu);
        }
      }
      [a1[6] addIndex:a2];
    }
  }
}

id sub_1A07B3B78(void *a1)
{
  id v2 = objc_alloc_init(MEMORY[0x1E4F1CA60]);
  v6[0] = MEMORY[0x1E4F143A8];
  v6[1] = 3221225472;
  _OWORD v6[2] = sub_1A07B3C34;
  v6[3] = &unk_1E5A106F0;
  id v7 = v2;
  id v3 = v2;
  objc_msgSend(a1, "__im_visitMessageParts:", v6);
  uint64_t v4 = (void *)[v3 copy];

  return v4;
}

void sub_1A07B3C34(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = [v3 messagePartRange];
  uint64_t v6 = v5;
  uint64_t v7 = [v3 messagePartIndex];

  objc_msgSend(MEMORY[0x1E4F29238], "valueWithRange:", v4, v6);
  id v9 = (id)objc_claimAutoreleasedReturnValue();
  id v8 = [NSNumber numberWithUnsignedInteger:v7];
  [*(id *)(a1 + 32) setObject:v8 forKeyedSubscript:v9];
}

id sub_1A07B3CEC(void *a1)
{
  id v2 = objc_alloc_init(MEMORY[0x1E4F1CA60]);
  v6[0] = MEMORY[0x1E4F143A8];
  v6[1] = 3221225472;
  _OWORD v6[2] = sub_1A07B3DA8;
  v6[3] = &unk_1E5A106F0;
  id v7 = v2;
  id v3 = v2;
  objc_msgSend(a1, "__im_visitMessageParts:", v6);
  uint64_t v4 = (void *)[v3 copy];

  return v4;
}

void sub_1A07B3DA8(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = [v3 messagePartRange];
  uint64_t v6 = v5;
  uint64_t v7 = [v3 messagePartIndex];

  objc_msgSend(MEMORY[0x1E4F29238], "valueWithRange:", v4, v6);
  id v9 = (id)objc_claimAutoreleasedReturnValue();
  id v8 = [NSNumber numberWithUnsignedInteger:v7];
  [*(id *)(a1 + 32) setObject:v9 forKeyedSubscript:v8];
}

id sub_1A07B3E60(void *a1)
{
  uint64_t v2 = [a1 length];
  if (!v2
    || (unint64_t v3 = v2,
        uint64_t v4 = *MEMORY[0x1E4F6C1F8],
        objc_msgSend(a1, "attribute:existsInRange:", *MEMORY[0x1E4F6C1F8], 0, v2)))
  {
    uint64_t v5 = (void *)[a1 copy];
    goto LABEL_22;
  }
  uint64_t v6 = (void *)[a1 mutableCopy];
  objc_msgSend(v6, "removeAttribute:range:", v4, 0, v3);
  uint64_t v7 = [v6 string];
  uint64_t v8 = 0;
  BOOL v9 = 0;
  unint64_t v10 = 0;
  uint64_t v19 = *MEMORY[0x1E4F6C170];
  char v11 = 1;
  do
  {
    uint64_t v20 = 0;
    uint64_t v21 = 0;
    id v12 = objc_msgSend(v6, "attributesAtIndex:longestEffectiveRange:inRange:", v10, &v20, v10, v3 - v10);
    int v13 = [v7 characterAtIndex:v20];
    if (v13 == 65532)
    {
      uint64_t v14 = [v12 objectForKey:@"CTAdaptiveImageProvider"];
      if (v14
        || ([v12 objectForKey:@"CTEmojiImageProvider"],
            (uint64_t v14 = objc_claimAutoreleasedReturnValue()) != 0))
      {
      }
      else
      {
        uint64_t v17 = [v12 objectForKey:v19];

        if (!v17)
        {
          if ((v11 & 1) == 0) {
LABEL_14:
          }
            uint64_t v8 = (v8 + 1);
          BOOL v9 = 1;
          goto LABEL_17;
        }
      }
      if (v11)
      {
        BOOL v9 = 0;
        goto LABEL_17;
      }
    }
    else
    {
      if (v11)
      {
        BOOL v9 = v13 == 65533;
        goto LABEL_17;
      }
      if (v13 == 65533) {
        goto LABEL_14;
      }
    }
    int v15 = v9;
    BOOL v9 = 0;
    uint64_t v8 = (v8 + v15);
LABEL_17:
    int v16 = [NSNumber numberWithInt:v8];
    objc_msgSend(v6, "addAttribute:value:range:", v4, v16, v20, v21);

    unint64_t v10 = v21 + v20;
    char v11 = 0;
  }
  while (v10 < v3);
  uint64_t v5 = (void *)[v6 copy];

LABEL_22:

  return v5;
}

id sub_1A07B4090(void *a1, uint64_t a2, void *a3)
{
  uint64_t v25 = *MEMORY[0x1E4F143B8];
  id v4 = a3;
  uint64_t v5 = (void *)[a1 mutableCopy];
  long long v18 = 0u;
  long long v19 = 0u;
  long long v20 = 0u;
  long long v21 = 0u;
  id obj = v4;
  uint64_t v6 = [obj countByEnumeratingWithState:&v18 objects:v24 count:16];
  if (v6)
  {
    uint64_t v7 = v6;
    uint64_t v8 = *(void *)v19;
    uint64_t v9 = *MEMORY[0x1E4F6C188];
    uint64_t v10 = *MEMORY[0x1E4F6C110];
    do
    {
      for (uint64_t i = 0; i != v7; ++i)
      {
        if (*(void *)v19 != v8) {
          objc_enumerationMutation(obj);
        }
        uint64_t v12 = *(void *)(*((void *)&v18 + 1) + 8 * i);
        uint64_t v22 = v9;
        uint64_t v23 = v12;
        int v13 = [MEMORY[0x1E4F1C9E8] dictionaryWithObjects:&v23 forKeys:&v22 count:1];
        uint64_t v14 = (void *)[objc_alloc(MEMORY[0x1E4F28B18]) initWithString:v10 attributes:v13];
        [v5 appendAttributedString:v14];
      }
      uint64_t v7 = [obj countByEnumeratingWithState:&v18 objects:v24 count:16];
    }
    while (v7);
  }

  int v15 = (void *)[v5 copy];

  return v15;
}

id sub_1A07B4234(uint64_t a1, uint64_t a2, void *a3)
{
  unint64_t v3 = (objc_class *)MEMORY[0x1E4F28B18];
  id v4 = a3;
  uint64_t v5 = (void *)[[v3 alloc] initWithString:&stru_1EF2CAD28];
  uint64_t v6 = objc_msgSend(v5, "__im_attributedStringByAppendingFileTransfers:", v4);

  return v6;
}

uint64_t sub_1A07B42AC(void *a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  uint64_t v13 = 0;
  uint64_t v14 = &v13;
  uint64_t v15 = 0x2020000000;
  char v16 = 0;
  uint64_t v5 = [a1 length];
  uint64_t v6 = *MEMORY[0x1E4F6C188];
  v10[0] = MEMORY[0x1E4F143A8];
  v10[1] = 3221225472;
  v10[2] = sub_1A07B43C4;
  v10[3] = &unk_1E5A10718;
  id v7 = v4;
  id v11 = v7;
  uint64_t v12 = &v13;
  objc_msgSend(a1, "enumerateAttribute:inRange:options:usingBlock:", v6, 0, v5, 0, v10);
  uint64_t v8 = *((unsigned __int8 *)v14 + 24);

  _Block_object_dispose(&v13, 8);
  return v8;
}

void sub_1A07B43AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A07B43C4(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, unsigned char *a5)
{
  id v7 = a2;
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0 && [v7 isEqualToString:*(void *)(a1 + 32)])
  {
    *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = 1;
    *a5 = 0;
  }
}

id sub_1A07B444C(void *a1, uint64_t a2, void *a3, void *a4)
{
  id v6 = a3;
  id v7 = a4;
  uint64_t v8 = [a1 length];
  uint64_t v9 = (void *)[a1 mutableCopy];
  uint64_t v10 = *MEMORY[0x1E4F6C188];
  v16[0] = MEMORY[0x1E4F143A8];
  v16[1] = 3221225472;
  void v16[2] = sub_1A07B4580;
  v16[3] = &unk_1E5A10740;
  id v17 = v6;
  id v18 = v9;
  id v19 = v7;
  id v11 = v7;
  id v12 = v9;
  id v13 = v6;
  objc_msgSend(a1, "enumerateAttribute:inRange:options:usingBlock:", v10, 0, v8, 0, v16);
  uint64_t v14 = (void *)[v12 copy];

  return v14;
}

void sub_1A07B4580(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  id v7 = a2;
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0 && [v7 isEqualToString:*(void *)(a1 + 32)]) {
    objc_msgSend(*(id *)(a1 + 40), "addAttribute:value:range:", *MEMORY[0x1E4F6C188], *(void *)(a1 + 48), a3, a4);
  }
}

id sub_1A07B461C(void *a1, uint64_t a2, void *a3, void *a4)
{
  uint64_t v29 = *MEMORY[0x1E4F143B8];
  id v6 = a3;
  id v7 = a4;
  if (objc_msgSend(a1, "__im_isRichCard"))
  {
    uint64_t v8 = [a1 attributesAtIndex:0 effectiveRange:0];
    uint64_t v9 = [v8 _dictionaryForKey:@"__kIMUrlToTransferMapAttributeName"];
    long long v24 = 0u;
    long long v25 = 0u;
    long long v26 = 0u;
    long long v27 = 0u;
    uint64_t v10 = [v9 countByEnumeratingWithState:&v24 objects:v28 count:16];
    if (!v10) {
      goto LABEL_14;
    }
    uint64_t v11 = v10;
    uint64_t v22 = @"__kIMUrlToTransferMapAttributeName";
    uint64_t v23 = v8;
    id v12 = 0;
    uint64_t v13 = *(void *)v25;
    do
    {
      for (uint64_t i = 0; i != v11; ++i)
      {
        if (*(void *)v25 != v13) {
          objc_enumerationMutation(v9);
        }
        uint64_t v15 = *(void **)(*((void *)&v24 + 1) + 8 * i);
        char v16 = objc_msgSend(v9, "objectForKeyedSubscript:", v15, v22, v23);
        if ([v16 isEqualToString:v6])
        {
          id v17 = v15;

          id v12 = v17;
        }
      }
      uint64_t v11 = [v9 countByEnumeratingWithState:&v24 objects:v28 count:16];
    }
    while (v11);
    uint64_t v8 = v23;
    if (v12)
    {
      id v18 = (void *)[v9 mutableCopy];
      [v18 setObject:v7 forKeyedSubscript:v12];
      id v19 = (void *)[a1 mutableCopy];
      objc_msgSend(v19, "addAttribute:value:range:", v22, v18, 0, objc_msgSend(a1, "length"));
      id v20 = (id)[v19 copy];
    }
    else
    {
LABEL_14:
      id v20 = a1;
    }
  }
  else
  {
    id v20 = 0;
  }

  return v20;
}

uint64_t sub_1A07B4888()
{
  os_log_t v0 = os_log_create("com.apple.Messages", "BlastDoorAttachment");
  uint64_t v1 = qword_1EB4A62E8;
  qword_1EB4A62E8 = (uint64_t)v0;

  return MEMORY[0x1F41817F8](v0, v1);
}

void sub_1A07B4E60(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31)
{
}

void sub_1A07B4EC0(uint64_t a1, void *a2, uint64_t a3)
{
  id v6 = a2;
  if (v6 && !a3)
  {
    MEMORY[0x1A6227910](@"BlastDoorEmojiImageMetadata", @"BlastDoor");
    if (objc_opt_isKindOfClass()) {
      uint64_t v5 = v6;
    }
    else {
      uint64_t v5 = 0;
    }
    objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40), v5);
  }
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));
}

void sub_1A07B4F54(uint64_t a1, void *a2, uint64_t a3)
{
  id v16 = a2;
  if (v16 && !a3)
  {
    MEMORY[0x1A6227910](@"BlastDoorPreviewImage", @"BlastDoor");
    if (objc_opt_isKindOfClass()) {
      uint64_t v5 = v16;
    }
    else {
      uint64_t v5 = 0;
    }
    id v6 = v5;
    id v7 = [v6 image];
    uint64_t v8 = [v7 cgImage];
    [v6 alignmentInset];
    double v10 = v9;
    double v12 = v11;

    LODWORD(v6) = [MEMORY[0x1E4F42660] instancesRespondToSelector:sel_initWithImage_alignmentInset_provenanceInfo_];
    id v13 = objc_alloc(MEMORY[0x1E4F42660]);
    if (v6) {
      uint64_t v14 = objc_msgSend(v13, "initWithImage:alignmentInset:provenanceInfo:", v8, *(void *)(a1 + 32), v10, v12);
    }
    else {
      uint64_t v14 = objc_msgSend(v13, "initWithImage:alignmentInset:", v8, v10, v12);
    }
    uint64_t v15 = (void *)v14;
    if (v14) {
      [*(id *)(a1 + 40) addObject:v14];
    }
  }
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 48));
}

uint64_t sub_1A07B51C8()
{
  uint64_t result = MEMORY[0x1A6227910](@"NTKGreenfieldUtilities", @"NanoTimeKitCompanion");
  qword_1E94FF460 = result;
  return result;
}

void sub_1A07B5AB8(uint64_t a1, void *a2, void *a3)
{
  uint64_t v20 = *MEMORY[0x1E4F143B8];
  id v5 = a2;
  id v6 = a3;
  id v7 = v6;
  if (v5 && !v6)
  {
    *(unsigned char *)(*(void *)(*(void *)(a1 + 48) + 8) + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = [(id)objc_opt_class() decorateWatchfacePreview:v5 andWriteToURL:*(void *)(a1 + 32) imagePxSize:*(void *)(*(void *)(a1 + 56) + 8) + 32];
    if (*(unsigned char *)(*(void *)(*(void *)(a1 + 48) + 8) + 24)) {
      goto LABEL_9;
    }
    uint64_t v8 = [objc_alloc(MEMORY[0x1E4F28C58]) initWithDomain:@"__kIMPreviewGenerationErrorDomain" code:3 userInfo:0];
    uint64_t v9 = *(void *)(*(void *)(a1 + 64) + 8);
    double v10 = *(void **)(v9 + 40);
    *(void *)(v9 + 40) = v8;
    goto LABEL_8;
  }
  double v10 = v6;
  if (!v6) {
    double v10 = (void *)[objc_alloc(MEMORY[0x1E4F28C58]) initWithDomain:@"__kIMPreviewGenerationErrorDomain" code:1 userInfo:0];
  }
  objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 64) + 8) + 40), v10);
  if (!v7) {
LABEL_8:
  }

LABEL_9:
  if (IMOSLoggingEnabled())
  {
    double v11 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
    {
      int v12 = *(unsigned __int8 *)(*(void *)(*(void *)(a1 + 48) + 8) + 24);
      id v13 = IMStringFromCGSize(*(double *)(*(void *)(*(void *)(a1 + 56) + 8) + 32), *(double *)(*(void *)(*(void *)(a1 + 56) + 8) + 40));
      uint64_t v14 = *(void *)(*(void *)(*(void *)(a1 + 64) + 8) + 40);
      v15[0] = 67109634;
      v15[1] = v12;
      __int16 v16 = 2112;
      id v17 = v13;
      __int16 v18 = 2112;
      uint64_t v19 = v14;
      _os_log_impl(&dword_1A0772000, v11, OS_LOG_TYPE_INFO, "Blastdoor validation completed, result: %d, imagePxSize: %@, err: %@", (uint8_t *)v15, 0x1Cu);
    }
  }
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 40));
}

uint64_t ckDefaultTextSizeForFontPointSize(double a1)
{
  if (a1 <= 10.0) {
    return 1;
  }
  if (a1 <= 11.0) {
    return 2;
  }
  if (a1 <= 12.0) {
    return 3;
  }
  uint64_t v1 = 5;
  uint64_t v2 = 6;
  if (a1 > 15.0) {
    uint64_t v2 = 7;
  }
  if (a1 > 14.0) {
    uint64_t v1 = v2;
  }
  if (a1 > 13.0) {
    return v1;
  }
  else {
    return 4;
  }
}

void IMPreviewConstraintsFromDictionary(void *a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)(a2 + 32) = 0;
  *(_OWORD *)a2 = 0u;
  *(_OWORD *)(a2 + 16) = 0u;
  id v3 = a1;
  id v4 = [v3 objectForKey:@"mpw"];
  [v4 floatValue];
  *(double *)a2 = v5;

  id v6 = [v3 objectForKey:@"mtw"];
  [v6 floatValue];
  double v8 = v7;

  uint64_t v9 = [v3 objectForKey:@"mth"];
  [v9 floatValue];
  double v11 = v10;

  *(double *)(a2 + 8) = v8;
  *(double *)(a2 + 16) = v11;
  int v12 = [v3 objectForKey:@"s"];
  [v12 floatValue];
  *(double *)(a2 + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = v13;

  uint64_t v14 = [v3 objectForKey:@"st"];
  *(unsigned char *)(a2 + 32) = [v14 BOOLValue];

  uint64_t v15 = [v3 objectForKey:@"iaig"];
  *(unsigned char *)(a2 + 34) = [v15 BOOLValue];

  id v16 = [v3 objectForKey:@"gm"];

  *(unsigned char *)(a2 + 33) = [v16 BOOLValue];
}

id IMPreviewConstraintsDictionaryFromConstraint(uint64_t a1)
{
  uint64_t v2 = (void *)[objc_alloc(MEMORY[0x1E4F1CA60]) initWithCapacity:5];
  id v3 = objc_msgSend(NSString, "stringWithFormat:", @"%f", *(void *)a1);
  [v2 setObject:v3 forKey:@"mpw"];

  id v4 = objc_msgSend(NSString, "stringWithFormat:", @"%f", *(void *)(a1 + 8));
  [v2 setObject:v4 forKey:@"mtw"];

  float v5 = objc_msgSend(NSString, "stringWithFormat:", @"%f", *(void *)(a1 + 16));
  [v2 setObject:v5 forKey:@"mth"];

  id v6 = objc_msgSend(NSString, "stringWithFormat:", @"%f", *(void *)(a1 + 24));
  [v2 setObject:v6 forKey:@"s"];

  float v7 = [NSNumber numberWithBool:*(unsigned __int8 *)(a1 + 32)];
  [v2 setObject:v7 forKey:@"st"];

  double v8 = [NSNumber numberWithBool:*(unsigned __int8 *)(a1 + 34)];
  [v2 setObject:v8 forKey:@"iaig"];

  uint64_t v9 = [NSNumber numberWithBool:*(unsigned __int8 *)(a1 + 33)];
  [v2 setObject:v9 forKey:@"gm"];

  return v2;
}

BOOL IMPreviewConstraintsEqualToConstraints(uint64_t a1, uint64_t a2)
{
  if (*(unsigned __int8 *)(a1 + 32) == *(unsigned __int8 *)(a2 + 32)
    && *(unsigned __int8 *)(a1 + 34) == *(unsigned __int8 *)(a2 + 34)
    && *(unsigned __int8 *)(a1 + 33) == *(unsigned __int8 *)(a2 + 33)
    && vabdd_f64(*(double *)a1, *(double *)a2) < 0.00000999999975
    && (int32x2_t v2 = vmovn_s64(vcgtq_f64((float64x2_t)vdupq_n_s64(0x3EE4F8B580000000uLL), vabdq_f64(*(float64x2_t *)(a1 + 8), *(float64x2_t *)(a2 + 8)))), (v2.i32[0] & v2.i32[1] & 1) != 0))
  {
    return vabdd_f64(*(double *)(a1 + 24), *(double *)(a2 + 24)) < 0.00000999999975;
  }
  else
  {
    return 0;
  }
}

double IMPreviewConstraintsZero@<D0>(uint64_t a1@<X8>)
{
  *(void *)(a1 + 32) = 0;
  double result = 0.0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return result;
}

uint64_t sub_1A07B62B4(uint64_t result, _WORD *a2, void *a3, __CFString *a4, __CFString *a5, __CFString *a6, __CFString *a7)
{
  *a3 = 0;
  if ((_WORD *)result != a2)
  {
    double v8 = a6;
    int v12 = (unsigned __int16 *)result;
    while (1)
    {
      while (1)
      {
        float v13 = v12;
        uint64_t v14 = a2;
        unsigned int v15 = *v12;
        if (v15 > 0x25) {
          break;
        }
        if (v15 > 0xC)
        {
          if (v15 > 0x20)
          {
            if (v15 != 34) {
              goto LABEL_60;
            }
            ++v12;
            if (a7)
            {
              double result = [(__CFString *)a7 length];
              a2 = 0;
              *a3 += result;
              if (v14)
              {
                uint64_t v16 = result;
                id v17 = a7;
                goto LABEL_69;
              }
            }
            else
            {
              double result = [@"\"" length];
              a2 = 0;
              *a3 += result;
              if (v14)
              {
                uint64_t v16 = result;
                id v17 = @"\"";
                goto LABEL_69;
              }
            }
          }
          else
          {
            if (v15 < 0xE) {
              goto LABEL_53;
            }
            if (v15 < 0x20) {
              goto LABEL_56;
            }
            ++v12;
            if (v13[1] == 32)
            {
              do
              {
                int v18 = v12[1];
                ++v12;
              }
              while (v18 == 32);
              if (!a4) {
                goto LABEL_57;
              }
              if (v13 < v12)
              {
                unint64_t v19 = (unint64_t)(v13 - 1);
                do
                {
                  double result = [(__CFString *)a4 length];
                  *a3 += result;
                  if (v14)
                  {
                    uint64_t v20 = result;
                    double result = [(__CFString *)a4 getCharacters:v14];
                    v14 += v20;
                  }
                  v19 += 2;
                }
                while (v19 < (unint64_t)(v12 - 1));
                a2 = v14;
                double v8 = a6;
              }
            }
            else
            {
LABEL_61:
              a2 = 0;
              ++*a3;
              if (v14)
              {
                _WORD *v14 = v15;
                a2 = v14 + 1;
              }
            }
          }
        }
        else if (v15 > 8)
        {
          if (v15 == 9)
          {
            ++v12;
            if (a4)
            {
              uint64_t v21 = [(__CFString *)a4 length];
              *a3 += v21;
              if (v14)
              {
                uint64_t v22 = v21;
                [(__CFString *)a4 getCharacters:v14];
                v14 += v22;
              }
              uint64_t v23 = [(__CFString *)a4 length];
              *a3 += v23;
              if (v14)
              {
                uint64_t v24 = v23;
                [(__CFString *)a4 getCharacters:v14];
                v14 += v24;
              }
              uint64_t v25 = [(__CFString *)a4 length];
              *a3 += v25;
              if (v14)
              {
                uint64_t v26 = v25;
                [(__CFString *)a4 getCharacters:v14];
                v14 += v26;
              }
              double result = [(__CFString *)a4 length];
              a2 = 0;
              *a3 += result;
              if (v14)
              {
                uint64_t v16 = result;
                id v17 = a4;
                goto LABEL_69;
              }
            }
            else
            {
LABEL_57:
              double result = [@" " length];
              a2 = 0;
              *a3 += result;
              if (v14)
              {
                uint64_t v16 = result;
                id v17 = @" ";
                goto LABEL_69;
              }
            }
          }
          else
          {
            if (v15 >= 0xB) {
              goto LABEL_56;
            }
LABEL_53:
            ++v12;
            if (!a5) {
              goto LABEL_57;
            }
            double result = [(__CFString *)a5 length];
            a2 = 0;
            *a3 += result;
            if (v14)
            {
              uint64_t v16 = result;
              id v17 = a5;
              goto LABEL_69;
            }
          }
        }
        else
        {
          if (!*v12) {
            return result;
          }
LABEL_56:
          ++v12;
        }
      }
      if (v15 > 0x3E)
      {
        if (v15 >> 3 > 0x404)
        {
          if (v15 < 0x202A) {
            goto LABEL_53;
          }
          if (v15 >= 0xFFFE) {
            goto LABEL_56;
          }
        }
        else if (v15 == 133)
        {
          goto LABEL_53;
        }
LABEL_60:
        ++v12;
        goto LABEL_61;
      }
      if (v15 > 0x3B)
      {
        if (v15 == 60)
        {
          ++v12;
          double result = [@"&lt;" length];
          a2 = 0;
          *a3 += result;
          if (v14)
          {
            uint64_t v16 = result;
            id v17 = @"&lt;";
            goto LABEL_69;
          }
        }
        else
        {
          if (v15 < 0x3E) {
            goto LABEL_60;
          }
          ++v12;
          double result = [@"&gt;" length];
          a2 = 0;
          *a3 += result;
          if (v14)
          {
            uint64_t v16 = result;
            id v17 = @"&gt;";
            goto LABEL_69;
          }
        }
      }
      else if (v15 >= 0x27)
      {
        if (v15 != 39) {
          goto LABEL_60;
        }
        ++v12;
        if (v8)
        {
          double result = [(__CFString *)v8 length];
          a2 = 0;
          *a3 += result;
          if (v14)
          {
            uint64_t v16 = result;
            id v17 = v8;
            goto LABEL_69;
          }
        }
        else
        {
          double result = [@"'" length];
          a2 = 0;
          *a3 += result;
          if (v14)
          {
            uint64_t v16 = result;
            id v17 = @"'";
LABEL_69:
            double result = [(__CFString *)v17 getCharacters:v14];
            a2 = &v14[v16];
          }
        }
      }
      else
      {
        ++v12;
        double result = [@"&amp;" length];
        a2 = 0;
        *a3 += result;
        if (v14)
        {
          uint64_t v16 = result;
          id v17 = @"&amp;";
          goto LABEL_69;
        }
      }
    }
  }
  return result;
}

__CFString *sub_1A07B6708(void *a1)
{
  uint64_t v1 = [a1 lastPathComponent];
  if ([v1 isEqualToString:@".."]) {
    int32x2_t v2 = &stru_1EF2CAD28;
  }
  else {
    int32x2_t v2 = v1;
  }

  return v2;
}

id sub_1A07B676C(void *a1, uint64_t a2, void *a3)
{
  uint64_t v18 = *MEMORY[0x1E4F143B8];
  id v4 = a3;
  id v5 = a1;
  long long v13 = 0u;
  long long v14 = 0u;
  long long v15 = 0u;
  long long v16 = 0u;
  uint64_t v6 = [v4 countByEnumeratingWithState:&v13 objects:v17 count:16];
  if (v6)
  {
    uint64_t v7 = v6;
    uint64_t v8 = *(void *)v14;
    do
    {
      uint64_t v9 = 0;
      float v10 = v5;
      do
      {
        if (*(void *)v14 != v8) {
          objc_enumerationMutation(v4);
        }
        double v11 = objc_msgSend(*(id *)(*((void *)&v13 + 1) + 8 * v9), "im_lastPathComponent");
        id v5 = [v10 URLByAppendingPathComponent:v11];

        ++v9;
        float v10 = v5;
      }
      while (v7 != v9);
      uint64_t v7 = [v4 countByEnumeratingWithState:&v13 objects:v17 count:16];
    }
    while (v7);
  }

  return v5;
}

id IMNicknameUnarchivingClasses()
{
  void v4[6] = *MEMORY[0x1E4F143B8];
  os_log_t v0 = (void *)MEMORY[0x1E4F1CAD0];
  v4[0] = objc_opt_class();
  v4[1] = objc_opt_class();
  v4[2] = objc_opt_class();
  v4[3] = objc_opt_class();
  v4[4] = objc_opt_class();
  void v4[5] = objc_opt_class();
  uint64_t v1 = [MEMORY[0x1E4F1C978] arrayWithObjects:v4 count:6];
  int32x2_t v2 = [v0 setWithArray:v1];

  return v2;
}

id sub_1A07B9B20(void *a1)
{
  if (!qword_1E94FF470)
  {
    int32x2_t v2 = [MEMORY[0x1E4F1CA20] currentLocale];
    id v3 = [v2 objectForKey:*MEMORY[0x1E4F1C400]];
    uint64_t v4 = [v3 lowercaseString];
    id v5 = (void *)qword_1E94FF470;
    qword_1E94FF470 = v4;
  }
  uint64_t v6 = CFPhoneNumberCreate();
  if (v6)
  {
    uint64_t v7 = (const void *)v6;
    String = (void *)CFPhoneNumberCreateString();
    if (!String) {
      String = (void *)CFPhoneNumberCreateString();
    }
    CFRelease(v7);
    if (String) {
      uint64_t v9 = String;
    }
    else {
      uint64_t v9 = a1;
    }
    id v10 = v9;
  }
  else
  {
    id v10 = a1;
  }

  return v10;
}

id sub_1A07B9C28(void *a1)
{
  if ([a1 length] && objc_msgSend(a1, "_appearsToBePhoneNumber"))
  {
    id v2 = [a1 formattedPhoneNumber];
  }
  else
  {
    id v2 = a1;
  }

  return v2;
}

uint64_t sub_1A07B9C80(void *a1, uint64_t a2, void *a3)
{
  uint64_t v4 = (void *)MEMORY[0x1E4F28B88];
  id v5 = a3;
  uint64_t v6 = [v4 controlCharacterSet];
  uint64_t v7 = [a1 stringByTrimmingCharactersInSet:v6];

  uint64_t v8 = [MEMORY[0x1E4F28B88] controlCharacterSet];
  uint64_t v9 = [v5 stringByTrimmingCharactersInSet:v8];

  if (!qword_1E94FF470)
  {
    id v10 = [MEMORY[0x1E4F1CA20] currentLocale];
    double v11 = [v10 objectForKey:*MEMORY[0x1E4F1C400]];
    uint64_t v12 = [v11 lowercaseString];
    long long v13 = (void *)qword_1E94FF470;
    qword_1E94FF470 = v12;
  }
  uint64_t v14 = PNPhoneNumbersEqual();

  return v14;
}

uint64_t sub_1A07B9D94()
{
  uint64_t v19 = *MEMORY[0x1E4F143B8];
  os_log_t v0 = (void *)[objc_alloc(MEMORY[0x1E4F1CA80]) initWithArray:&unk_1EF305AC0];
  long long v13 = 0u;
  long long v14 = 0u;
  long long v15 = 0u;
  long long v16 = 0u;
  uint64_t v1 = [&unk_1EF305AD8 countByEnumeratingWithState:&v13 objects:v18 count:16];
  if (v1)
  {
    uint64_t v2 = v1;
    uint64_t v3 = *(void *)v14;
    do
    {
      uint64_t v4 = 0;
      do
      {
        if (*(void *)v14 != v3) {
          objc_enumerationMutation(&unk_1EF305AD8);
        }
        [v0 addObject:objc_msgSend(@"smsfp", "stringByAppendingString:", *(void *)(*((void *)&v13 + 1) + 8 * v4++))];
      }
      while (v2 != v4);
      uint64_t v2 = [&unk_1EF305AD8 countByEnumeratingWithState:&v13 objects:v18 count:16];
    }
    while (v2);
  }
  long long v11 = 0u;
  long long v12 = 0u;
  long long v9 = 0u;
  long long v10 = 0u;
  uint64_t result = [&unk_1EF305AF0 countByEnumeratingWithState:&v9 objects:v17 count:16];
  if (result)
  {
    uint64_t v6 = result;
    uint64_t v7 = *(void *)v10;
    do
    {
      uint64_t v8 = 0;
      do
      {
        if (*(void *)v10 != v7) {
          objc_enumerationMutation(&unk_1EF305AF0);
        }
        [v0 addObject:objc_msgSend(@"smsft", "stringByAppendingString:", *(void *)(*((void *)&v9 + 1) + 8 * v8++))];
      }
      while (v6 != v8);
      uint64_t result = [&unk_1EF305AF0 countByEnumeratingWithState:&v9 objects:v17 count:16];
      uint64_t v6 = result;
    }
    while (result);
  }
  qword_1E94FF480 = (uint64_t)v0;
  return result;
}

uint64_t sub_1A07BA204(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v5 = objc_msgSend(a1, "objectForKey:");
  uint64_t v6 = v5;
  if (v5) {
    a4 = [v5 integerValue];
  }

  return a4;
}

float sub_1A07BA248(void *a1, float a2)
{
  uint64_t v3 = objc_msgSend(a1, "objectForKey:");
  uint64_t v4 = v3;
  if (v3)
  {
    [v3 floatValue];
    a2 = v5;
  }

  return a2;
}

uint64_t sub_1A07BA294(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  float v5 = objc_msgSend(a1, "objectForKey:");
  uint64_t v6 = v5;
  if (v5) {
    a4 = [v5 longValue];
  }

  return a4;
}

uint64_t sub_1A07BA2D8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  float v5 = objc_msgSend(a1, "objectForKey:");
  uint64_t v6 = v5;
  if (v5) {
    a4 = [v5 unsignedLongValue];
  }

  return a4;
}

uint64_t sub_1A07BA31C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  float v5 = objc_msgSend(a1, "objectForKey:");
  uint64_t v6 = v5;
  if (v5) {
    a4 = [v5 longLongValue];
  }

  return a4;
}

uint64_t sub_1A07BA360(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  float v5 = objc_msgSend(a1, "objectForKey:");
  uint64_t v6 = v5;
  if (v5) {
    a4 = [v5 unsignedLongLongValue];
  }

  return a4;
}

void sub_1A07BA584(uint64_t a1, void *a2, void *a3)
{
  id v7 = a2;
  id v5 = a3;
  if (([v5 containsString:@"IMDCNPersonNotFound"] & 1) == 0)
  {
    id v6 = [*(id *)(a1 + 32) objectForKey:v5];
    if (!v6) {
      id v6 = objc_alloc_init(MEMORY[0x1E4F1CA48]);
    }
    if (([v6 containsObject:v7] & 1) == 0) {
      [v6 addObject:v7];
    }
    [*(id *)(a1 + 32) setObject:v6 forKey:v5];
  }
}

uint64_t IMUTITypeIsSupportedForTranscodeOnSend(const __CFString *a1)
{
  uint64_t v12 = *MEMORY[0x1E4F143B8];
  if (qword_1E94FE978 != -1) {
    dispatch_once(&qword_1E94FE978, &unk_1EF2BF1E0);
  }
  uint64_t v2 = (void *)[(id)qword_1E94FE9B8 arrayByAddingObjectsFromArray:IMSupportedAVUTITypesForOutgoingTranscode()];
  long long v7 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  long long v10 = 0u;
  uint64_t result = [v2 countByEnumeratingWithState:&v7 objects:v11 count:16];
  if (result)
  {
    uint64_t v4 = result;
    uint64_t v5 = *(void *)v8;
    while (2)
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v8 != v5) {
          objc_enumerationMutation(v2);
        }
        if (UTTypeConformsTo(a1, *(CFStringRef *)(*((void *)&v7 + 1) + 8 * v6))) {
          return 1;
        }
        ++v6;
      }
      while (v4 != v6);
      uint64_t result = [v2 countByEnumeratingWithState:&v7 objects:v11 count:16];
      uint64_t v4 = result;
      if (result) {
        continue;
      }
      break;
    }
  }
  return result;
}

uint64_t IMSupportedImageUTITypesForOutgoingTranscode()
{
  if (qword_1E94FE978 != -1) {
    dispatch_once(&qword_1E94FE978, &unk_1EF2BF1E0);
  }
  return qword_1E94FE9B8;
}

uint64_t IMSupportedAVUTITypesForOutgoingTranscode()
{
  uint64_t v5 = *MEMORY[0x1E4F143B8];
  uint64_t v0 = [MEMORY[0x1E4F166C8] audiovisualTypes];
  if (IMOSLoggingEnabled())
  {
    uint64_t v1 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v1, OS_LOG_TYPE_INFO))
    {
      int v3 = 138412290;
      uint64_t v4 = v0;
      _os_log_impl(&dword_1A0772000, v1, OS_LOG_TYPE_INFO, "Supported video utis: %@", (uint8_t *)&v3, 0xCu);
    }
  }
  return v0;
}

void sub_1A07BB77C()
{
  v7[2] = *MEMORY[0x1E4F143B8];
  CFArrayRef v0 = CGImageSourceCopyTypeIdentifiers();
  uint64_t v1 = (void *)[(id)(id)CFMakeCollectable(v0) mutableCopy];
  uint64_t v2 = *MEMORY[0x1E4F22668];
  v7[0] = *MEMORY[0x1E4F226E8];
  v7[1] = v2;
  uint64_t v3 = [MEMORY[0x1E4F1C978] arrayWithObjects:v7 count:2];
  [v1 addObject:@"________WBMP_________"];
  [v1 removeObjectsInArray:v3];
  qword_1E94FE9B8 = [v1 copy];

  if (IMOSLoggingEnabled())
  {
    uint64_t v4 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
    {
      int v5 = 138412290;
      uint64_t v6 = qword_1E94FE9B8;
      _os_log_impl(&dword_1A0772000, v4, OS_LOG_TYPE_INFO, "Supported UTI types: %@", (uint8_t *)&v5, 0xCu);
    }
  }
}

BOOL IMUTTypeIsImage(const __CFString *a1)
{
  return UTTypeConformsTo(a1, (CFStringRef)*MEMORY[0x1E4F225F8]) != 0;
}

BOOL IMUTTypeIsGIF(const __CFString *a1)
{
  return UTTypeConformsTo(a1, (CFStringRef)*MEMORY[0x1E4F225D8]) != 0;
}

BOOL IMUTTypeIsMovie(const __CFString *a1)
{
  return UTTypeConformsTo(a1, (CFStringRef)*MEMORY[0x1E4F22660]) != 0;
}

BOOL IMUTTypeIsVCard(const __CFString *a1)
{
  return UTTypeConformsTo(a1, (CFStringRef)*MEMORY[0x1E4F22718]) != 0;
}

BOOL IMUTTypeIsCalendar(const __CFString *a1)
{
  return UTTypeConformsTo(a1, (CFStringRef)*MEMORY[0x1E4F22568])
      || UTTypeConformsTo(a1, @"com.apple.ical.vcs")
      || UTTypeConformsTo(a1, @"com.apple.ical.ics") != 0;
}

BOOL IMUTTypeIsPass(const __CFString *a1)
{
  return UTTypeConformsTo(a1, (CFStringRef)*MEMORY[0x1E4F224D0])
      || UTTypeConformsTo(a1, (CFStringRef)*MEMORY[0x1E4F224C8])
      || UTTypeConformsTo(a1, @"com.apple.shoebox.pkpass") != 0;
}

BOOL IMUTTypeIsWalletOrder(const __CFString *a1)
{
  return UTTypeConformsTo(a1, @"com.apple.finance.order") != 0;
}

BOOL IMUTTypeIsAudio(const __CFString *a1)
{
  return UTTypeConformsTo(a1, (CFStringRef)*MEMORY[0x1E4F22538]) != 0;
}

uint64_t IMUTTypeIsMap(void *a1, const char *a2)
{
  return [a1 isEqualToString:@"public.vlocation"];
}

uint64_t IMUTTypeIsWatchface(void *a1, const char *a2)
{
  return [a1 isEqualToString:@"com.apple.watchface"];
}

uint64_t IMUTTypeIsWorkout(uint64_t a1)
{
  uint64_t v2 = (void *)IMWorkoutUTITypes();

  return [v2 containsObject:a1];
}

BOOL IMUTTypeIsSupportedAnimatedImage(const __CFString *a1)
{
  return UTTypeConformsTo(a1, (CFStringRef)*MEMORY[0x1E4F225D8])
      || UTTypeConformsTo(a1, (CFStringRef)*MEMORY[0x1E4F22678])
      || UTTypeConformsTo(a1, @"org.webmproject.webp")
      || UTTypeConformsTo(a1, @"public.heics") != 0;
}

uint64_t IMFileURLIsActuallyAnimated(const __CFURL *a1)
{
  uint64_t v21 = *MEMORY[0x1E4F143B8];
  uint64_t v2 = CGImageSourceCreateWithURL(a1, 0);
  if (v2)
  {
    uint64_t v3 = v2;
    CFStringRef Type = CGImageSourceGetType(v2);
    if (Type)
    {
      CFStringRef v5 = Type;
      BOOL IsSupportedAnimatedImage = IMUTTypeIsSupportedAnimatedImage(Type);
      int v7 = IMOSLoggingEnabled();
      if (IsSupportedAnimatedImage)
      {
        if (v7)
        {
          long long v8 = OSLogHandleForIMFoundationCategory();
          if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
          {
            int v17 = 138412290;
            CFURLRef v18 = (const __CFURL *)v5;
            _os_log_impl(&dword_1A0772000, v8, OS_LOG_TYPE_INFO, "Sniffed type is animated: %@", (uint8_t *)&v17, 0xCu);
          }
        }
        if (CGImageSourceGetCount(v3) >= 2)
        {
          uint64_t v9 = IMImageSourceHasStereoPair(v3) ^ 1;
LABEL_21:
          CFRelease(v3);
          return v9;
        }
LABEL_20:
        uint64_t v9 = 0;
        goto LABEL_21;
      }
      if (!v7) {
        goto LABEL_20;
      }
      long long v15 = OSLogHandleForIMFoundationCategory();
      if (!os_log_type_enabled(v15, OS_LOG_TYPE_INFO)) {
        goto LABEL_20;
      }
      int v17 = 138412546;
      CFURLRef v18 = (const __CFURL *)v5;
      __int16 v19 = 2112;
      CFURLRef v20 = a1;
      uint64_t v12 = "Sniffed path actually wasn't animated even though file UTI (%@) was possible: %@";
      long long v13 = v15;
      uint32_t v14 = 22;
    }
    else
    {
      if (!IMOSLoggingEnabled()) {
        goto LABEL_20;
      }
      long long v11 = OSLogHandleForIMFoundationCategory();
      if (!os_log_type_enabled(v11, OS_LOG_TYPE_INFO)) {
        goto LABEL_20;
      }
      int v17 = 138412290;
      CFURLRef v18 = a1;
      uint64_t v12 = "Could not sniff type at path %@";
      long long v13 = v11;
      uint32_t v14 = 12;
    }
    _os_log_impl(&dword_1A0772000, v13, OS_LOG_TYPE_INFO, v12, (uint8_t *)&v17, v14);
    goto LABEL_20;
  }
  if (IMOSLoggingEnabled())
  {
    long long v10 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
    {
      int v17 = 138412290;
      CFURLRef v18 = a1;
      _os_log_impl(&dword_1A0772000, v10, OS_LOG_TYPE_INFO, "Could not create imageSource to determine APNG / animated HEIC / animated WebP at path %@", (uint8_t *)&v17, 0xCu);
    }
  }
  return 0;
}

uint64_t IMImageSourceHasStereoPair(CGImageSource *a1)
{
  uint64_t v19 = *MEMORY[0x1E4F143B8];
  CFDictionaryRef v1 = CGImageSourceCopyProperties(a1, 0);
  uint64_t v2 = (id)CFMakeCollectable(v1);
  if (!v2) {
    return 0;
  }
  uint64_t v3 = (void *)[v2 objectForKeyedSubscript:*MEMORY[0x1E4F2FAF0]];
  if (!v3) {
    return 0;
  }
  uint64_t v4 = v3;
  long long v16 = 0u;
  long long v17 = 0u;
  long long v14 = 0u;
  long long v15 = 0u;
  uint64_t v5 = [v3 countByEnumeratingWithState:&v14 objects:v18 count:16];
  if (!v5) {
    return 0;
  }
  uint64_t v6 = *(void *)v15;
  uint64_t v7 = *MEMORY[0x1E4F2FAD0];
  uint64_t v8 = *MEMORY[0x1E4F2FAE8];
  while (2)
  {
    for (uint64_t i = 0; i != v5; ++i)
    {
      if (*(void *)v15 != v6) {
        objc_enumerationMutation(v4);
      }
      if (objc_msgSend((id)objc_msgSend(*(id *)(*((void *)&v14 + 1) + 8 * i), "objectForKeyedSubscript:", v7), "isEqualToString:", v8))
      {
        if (!IMOSLoggingEnabled()) {
          return 1;
        }
        uint64_t v12 = OSLogHandleForIMFoundationCategory();
        uint64_t v10 = 1;
        if (os_log_type_enabled(v12, OS_LOG_TYPE_INFO))
        {
          *(_WORD *)long long v13 = 0;
          _os_log_impl(&dword_1A0772000, v12, OS_LOG_TYPE_INFO, "StereoPair detected", v13, 2u);
        }
        return v10;
      }
    }
    uint64_t v5 = [v4 countByEnumeratingWithState:&v14 objects:v18 count:16];
    uint64_t v10 = 0;
    if (v5) {
      continue;
    }
    break;
  }
  return v10;
}

uint64_t IMSupportedAnimatedImageUTTypesSortedByPreference()
{
  v2[7] = *MEMORY[0x1E4F143B8];
  v2[0] = @"public.heic";
  v2[1] = @"public.heics";
  v2[2] = @"public.heif";
  v2[3] = @"public.heif-standard";
  uint64_t v0 = *MEMORY[0x1E4F22678];
  v2[4] = *MEMORY[0x1E4F225D8];
  v2[5] = v0;
  v2[6] = @"org.webmproject.webp";
  return [MEMORY[0x1E4F1C978] arrayWithObjects:v2 count:7];
}

uint64_t IMUTTypeIsSupportedScreenshot(__CFString *a1)
{
  uint64_t result = [(__CFString *)a1 length];
  if (result) {
    return UTTypeConformsTo(a1, (CFStringRef)*MEMORY[0x1E4F22610])
  }
        || UTTypeConformsTo(a1, (CFStringRef)*MEMORY[0x1E4F22678])
        || UTTypeConformsTo(a1, @"public.heif")
        || UTTypeConformsTo(a1, @"public.heic")
        || UTTypeConformsTo(a1, @"public.heics")
        || UTTypeConformsTo(a1, @"public.heif-standard") != 0;
  return result;
}

uint64_t IMUTTypeWantsQuicklook(void *a1)
{
  if ([a1 isEqualToString:@"com.apple.watchface"]) {
    return 0;
  }
  else {
    return [(id)IMWorkoutUTITypes() containsObject:a1] ^ 1;
  }
}

uint64_t sub_1A07BD448(uint64_t a1, void *a2, void *a3)
{
  id v4 = a2;
  id v5 = a3;
  uint64_t v6 = [v4 action];
  if (v6 != [v5 action]) {
    goto LABEL_6;
  }
  unint64_t v7 = [v4 orderOfPlacementInUI];
  if (v7 <= [v5 orderOfPlacementInUI])
  {
    unint64_t v9 = [v4 orderOfPlacementInUI];
    if (v9 < [v5 orderOfPlacementInUI])
    {
      uint64_t v8 = -1;
      goto LABEL_7;
    }
LABEL_6:
    uint64_t v8 = 0;
    goto LABEL_7;
  }
  uint64_t v8 = 1;
LABEL_7:

  return v8;
}

uint64_t CKUpdateFilterParamsForSMSFiltering()
{
  if (_IMWillLog()) {
    _IMAlwaysLog();
  }
  DarwinNotifyCenter = CFNotificationCenterGetDarwinNotifyCenter();
  CFNotificationCenterPostNotification(DarwinNotifyCenter, @"_SMSFilterExtensionParamsChangeDistributedNotification", 0, 0, 1u);
  return 0;
}

BOOL IMSharedUtilitiesProtoCloudKitEncryptedMessageSummaryInfoReadFrom(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  id v4 = (int *)MEMORY[0x1E4F940E0];
  id v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    unint64_t v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      if ((v10 >> 3) == 1) {
        break;
      }
      if ((v10 >> 3) == 2)
      {
        long long v17 = &OBJC_IVAR___IMSharedUtilitiesProtoCloudKitEncryptedMessageSummaryInfo__padding;
LABEL_22:
        Data = (void *)PBReaderReadData();

        *(void *)(a1 + *v17) = Data;
        goto LABEL_24;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_24:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    long long v17 = &OBJC_IVAR___IMSharedUtilitiesProtoCloudKitEncryptedMessageSummaryInfo__messageSummaryInfo;
    goto LABEL_22;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

IMMeCardSharingStateController *sub_1A07BE3D0()
{
  uint64_t result = objc_alloc_init(IMMeCardSharingStateController);
  qword_1EB4A6638 = (uint64_t)result;
  return result;
}

__CFString *IMAttachmentFileNameAndExtension(void *a1, uint64_t *a2, __CFString **a3)
{
  uint64_t v6 = objc_msgSend(a1, "rangeOfString:options:range:", @".emoji.png", 13, 0, objc_msgSend(a1, "length"));
  uint64_t v7 = objc_msgSend(a1, "rangeOfString:options:range:", @".loc.vcf", 13, 0, objc_msgSend(a1, "length"));
  if (v6 != 0x7FFFFFFFFFFFFFFFLL)
  {
    uint64_t v9 = [a1 substringToIndex:v6];
    uint64_t result = @"png";
    if (!a2) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v8 = v7;
  if (v7 == 0x7FFFFFFFFFFFFFFFLL)
  {
    uint64_t v9 = [a1 stringByDeletingPathExtension];
    uint64_t result = (__CFString *)[a1 pathExtension];
    if (!a2) {
      goto LABEL_7;
    }
LABEL_6:
    *a2 = v9;
    goto LABEL_7;
  }
  uint64_t v9 = [a1 substringToIndex:v7];
  uint64_t result = (__CFString *)[a1 substringFromIndex:v8 + 1];
  if (a2) {
    goto LABEL_6;
  }
LABEL_7:
  if (a3) {
    *a3 = result;
  }
  return result;
}

uint64_t IMTemporaryFileTransferGUIDForNewOutgoingTransfer()
{
  return [NSString stringGUID];
}

uint64_t IMFileTransferGUIDIsTemporary(void *a1)
{
  return [a1 containsString:objc_msgSend(NSString, "stringWithFormat:", @"%@%@", @"at", @"_"] ^ 1;
}

uint64_t IMFileTransferGUIDForAttachmentMessagePartAtMessageGUIDAndMessagePartIndex(uint64_t a1, uint64_t a2)
{
  return [NSString stringWithFormat:@"%@%@%lu%@%@", @"at", @"_", a2, @"_", a1];
}

uint64_t IMFileTransferGUIDForPluginPayloadOrGroupPhotoInMessageGUID(uint64_t a1)
{
  return [NSString stringWithFormat:@"%@%@%lu%@%@", @"at", @"_", 0, @"_", a1];
}

uint64_t IMFileTransferGUIDForGenmojiWithContentIdentifierInMessageGUID(void *a1, uint64_t a2)
{
  uint64_t v3 = [a1 stringByReplacingOccurrencesOfString:@"_" withString:@"-"];
  return [NSString stringWithFormat:@"%@%@%@%@%@", @"at", @"_", v3, @"_", a2];
}

uint64_t IMFauxMessageGUIDForTapbackOfCMMAssetAtIndexInParentMessageGUID(uint64_t a1, uint64_t a2)
{
  return [NSString stringWithFormat:@"%@%@%lu%@%@", @"at", @"_", a1, @"_", a2];
}

uint64_t IMFileTransferGUIDForLocalOnlyFileTransferRepresentingCMMAssetAtIndexInMessageGUID(uint64_t a1, uint64_t a2)
{
  return [NSString stringWithFormat:@"%@%@%lu%@%@", @"at", @"_", a1, @"_", a2];
}

uint64_t IMMessageGuidFromIMFileTransferGuid(void *a1)
{
  uint64_t v8 = *MEMORY[0x1E4F143B8];
  if (([a1 containsString:objc_msgSend(NSString, "stringWithFormat:", @"%@%@", @"at", @"_"] & 1) == 0)
  {
    if (!IMOSLoggingEnabled()) {
      return 0;
    }
    id v4 = OSLogHandleForIMFoundationCategory();
    if (!os_log_type_enabled(v4, OS_LOG_TYPE_INFO)) {
      return 0;
    }
    *(_DWORD *)long long buf = 138412290;
    uint64_t v7 = a1;
    id v5 = "Cannot find message guid from file transfer guid as it is in temporary format: %@";
    goto LABEL_12;
  }
  uint64_t v2 = (void *)[a1 componentsSeparatedByString:@"_"];
  if (![v2 count])
  {
    if (!IMOSLoggingEnabled()) {
      return 0;
    }
    id v4 = OSLogHandleForIMFoundationCategory();
    if (!os_log_type_enabled(v4, OS_LOG_TYPE_INFO)) {
      return 0;
    }
    *(_DWORD *)long long buf = 138412290;
    uint64_t v7 = a1;
    id v5 = "Cannot find message guid from file transfer guid as we cannot find string components separated by _: %@";
LABEL_12:
    _os_log_impl(&dword_1A0772000, v4, OS_LOG_TYPE_INFO, v5, buf, 0xCu);
    return 0;
  }

  return [v2 lastObject];
}

uint64_t IMCMMAssetIndexFromIMFileTransferGUID(void *a1)
{
  uint64_t v9 = *MEMORY[0x1E4F143B8];
  if (([a1 containsString:objc_msgSend(NSString, "stringWithFormat:", @"%@%@", @"at", @"_"] & 1) == 0)
  {
    if (!IMOSLoggingEnabled()) {
      return 0x7FFFFFFFFFFFFFFFLL;
    }
    uint64_t v3 = OSLogHandleForIMFoundationCategory();
    if (!os_log_type_enabled(v3, OS_LOG_TYPE_INFO)) {
      return 0x7FFFFFFFFFFFFFFFLL;
    }
    *(_DWORD *)long long buf = 138412290;
    uint64_t v8 = a1;
    id v4 = "Cannot find attachment index from file transfer guid as it is in temporary format: %@";
    goto LABEL_9;
  }
  uint64_t v2 = (void *)[a1 componentsSeparatedByString:@"_"];
  if ((unint64_t)[v2 count] <= 1)
  {
    if (!IMOSLoggingEnabled()) {
      return 0x7FFFFFFFFFFFFFFFLL;
    }
    uint64_t v3 = OSLogHandleForIMFoundationCategory();
    if (!os_log_type_enabled(v3, OS_LOG_TYPE_INFO)) {
      return 0x7FFFFFFFFFFFFFFFLL;
    }
    *(_DWORD *)long long buf = 138412290;
    uint64_t v8 = a1;
    id v4 = "Cannot find attachment index from file transfer guid as we cannot find string components separated by _: %@";
LABEL_9:
    _os_log_impl(&dword_1A0772000, v3, OS_LOG_TYPE_INFO, v4, buf, 0xCu);
    return 0x7FFFFFFFFFFFFFFFLL;
  }
  uint64_t v6 = (void *)[v2 objectAtIndex:1];

  return [v6 integerValue];
}

uint64_t IMPreviewCachesDirectoryWithAttachmentURL(void *a1)
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  if (!a1) {
    return 0;
  }
  uint64_t v2 = (void *)[a1 path];
  id v3 = IMSMSDirectoryURL();
  uint64_t v4 = objc_msgSend(v2, "rangeOfString:", objc_msgSend(v3, "path"));
  if (v4 == 0x7FFFFFFFFFFFFFFFLL)
  {
    if (IMOSLoggingEnabled())
    {
      uint64_t v6 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)long long buf = 138412546;
        id v13 = v3;
        __int16 v14 = 2112;
        int v15 = a1;
        _os_log_impl(&dword_1A0772000, v6, OS_LOG_TYPE_INFO, "Prefix (%@) not found in path (%@), skipping cache path generation", buf, 0x16u);
      }
    }
    return 0;
  }
  uint64_t v7 = objc_msgSend((id)objc_msgSend(v2, "substringFromIndex:", v4 + v5), "stringByDeletingLastPathComponent");
  uint64_t v8 = objc_msgSend(NSString, "pathWithComponents:", objc_msgSend(MEMORY[0x1E4F1C978], "arrayWithObjects:", objc_msgSend(IMCachesDirectoryURL(), "path"), @"Previews", v7, 0));
  if (!v8) {
    return 0;
  }
  uint64_t v9 = v8;
  unint64_t v10 = (void *)MEMORY[0x1E4F1CB10];

  return [v10 fileURLWithPath:v9 isDirectory:1];
}

void *IMAttachmentPreviewCacheFileURL(void *a1, uint64_t a2, uint64_t a3, int a4)
{
  v21[2] = *MEMORY[0x1E4F143B8];
  uint64_t v8 = (void *)[(id)IMPreviewCachesDirectoryWithAttachmentURL(a1) path];
  if (![v8 length])
  {
    if (!IMOSLoggingEnabled()) {
      return 0;
    }
    id v13 = OSLogHandleForIMFoundationCategory();
    if (!os_log_type_enabled(v13, OS_LOG_TYPE_INFO)) {
      return 0;
    }
    *(_DWORD *)long long buf = 138412546;
    CFURLRef v18 = a1;
    __int16 v19 = 2112;
    uint64_t v20 = a3;
    __int16 v14 = "Cache url could not be generated for url %@ and extension %@";
    goto LABEL_11;
  }
  id v16 = 0;
  IMAttachmentFileNameAndExtension((void *)[a1 lastPathComponent], (uint64_t *)&v16, 0);
  if (!v16)
  {
    if (!IMOSLoggingEnabled()) {
      return 0;
    }
    id v13 = OSLogHandleForIMFoundationCategory();
    if (!os_log_type_enabled(v13, OS_LOG_TYPE_INFO)) {
      return 0;
    }
    *(_DWORD *)long long buf = 138412546;
    CFURLRef v18 = a1;
    __int16 v19 = 2112;
    uint64_t v20 = a3;
    __int16 v14 = "Filename could not be found for url %@ and extension %@";
LABEL_11:
    _os_log_impl(&dword_1A0772000, v13, OS_LOG_TYPE_INFO, v14, buf, 0x16u);
    return 0;
  }
  uint64_t v9 = [v16 stringByAppendingFormat:@"%@.%@", a2, a3];
  v21[0] = v8;
  v21[1] = v9;
  uint64_t v10 = [MEMORY[0x1E4F1C978] arrayWithObjects:v21 count:2];
  uint64_t v11 = [NSString pathWithComponents:v10];
  unint64_t v12 = (void *)[MEMORY[0x1E4F1CB10] fileURLWithPath:v11 isDirectory:0];
  if (a4) {
    objc_msgSend((id)objc_msgSend(MEMORY[0x1E4F28CB8], "defaultManager"), "createDirectoryAtURL:withIntermediateDirectories:attributes:error:", objc_msgSend(v12, "URLByDeletingLastPathComponent"), 1, 0, 0);
  }
  return v12;
}

void *IMAttachmentPreviewFileURL(void *a1, uint64_t a2, int a3)
{
  return IMAttachmentPreviewCacheFileURL(a1, @"-preview", a2, a3);
}

void *IMAttachmentPreviewMetadataFileURL(void *a1, uint64_t a2, int a3)
{
  return IMAttachmentPreviewCacheFileURL(a1, @"-preview-metadata", a2, a3);
}

void *IMAttachmentEmojiImagePreviewFileURL(void *a1, int a2)
{
  return IMAttachmentPreviewCacheFileURL(a1, @"-genmoji", @"heic", a2);
}

void *IMAttachmentPreviewFileURLFromURLWithSuffix(void *result, uint64_t a2)
{
  if (result)
  {
    id v3 = result;
    uint64_t v4 = [result pathExtension];
    uint64_t v5 = objc_msgSend((id)objc_msgSend(v3, "path"), "stringByDeletingPathExtension");
    uint64_t v6 = [(id)objc_msgSend(NSString stringWithFormat:@"%@-%@", v5, a2), "stringByAppendingPathExtension:", v4];
    uint64_t v7 = (void *)MEMORY[0x1E4F1CB10];
    return (void *)[v7 fileURLWithPath:v6];
  }
  return result;
}

uint64_t IMAttachmentPersistentPath(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = a2;
  uint64_t v20 = *MEMORY[0x1E4F143B8];
  uint64_t v8 = (void *)[a2 pathExtension];
  unsigned __int8 v9 = [a1 hash];
  if (![v8 length])
  {
    uint64_t v10 = objc_msgSend((id)objc_msgSend(MEMORY[0x1E4F6C348], "defaultHFSFileManager"), "pathExtensionForUTIType:", a4);
    if (![v10 length]) {
      uint64_t v10 = objc_msgSend((id)objc_msgSend(MEMORY[0x1E4F6C348], "defaultHFSFileManager"), "pathExtensionForMIMEType:", a3);
    }
    if ([v10 length]) {
      uint64_t v6 = (void *)[v6 stringByAppendingPathExtension:v10];
    }
  }
  uint64_t v11 = objc_msgSend(NSString, "stringWithFormat:", @"%02x", v9);
  uint64_t v12 = objc_msgSend(NSString, "stringWithFormat:", @"%02d", v9 & 0xF);
  if ([v6 length] && objc_msgSend(a1, "length")) {
    uint64_t v13 = objc_msgSend((id)objc_msgSend((id)objc_msgSend((id)objc_msgSend((id)objc_msgSend(@"/var/mobile/Library/SMS/Attachments", "stringByResolvingAndStandardizingPath"), "stringByAppendingPathComponent:", v11), "stringByAppendingPathComponent:", v12), "stringByAppendingPathComponent:", a1), "stringByAppendingPathComponent:", v6);
  }
  else {
    uint64_t v13 = 0;
  }
  if (IMOSLoggingEnabled())
  {
    __int16 v14 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v14, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)long long buf = 138412546;
      uint64_t v17 = v13;
      __int16 v18 = 2112;
      __int16 v19 = a1;
      _os_log_impl(&dword_1A0772000, v14, OS_LOG_TYPE_INFO, "Resulting path %@   for transfer: %@", buf, 0x16u);
    }
  }
  return v13;
}

uint64_t sub_1A07BFED4(void *a1, uint64_t a2)
{
  void v7[4] = *MEMORY[0x1E4F143B8];
  id v6 = 0;
  IMAttachmentFileNameAndExtension(a1, (uint64_t *)&v6, 0);
  uint64_t v3 = [v6 stringByAppendingFormat:@"-snapshot.%@", a2];
  v7[0] = [IMCachesDirectoryURL() path];
  v7[1] = @"Plugins";
  v7[2] = @"Snapshots";
  void v7[3] = v3;
  uint64_t v4 = [MEMORY[0x1E4F1C978] arrayWithObjects:v7 count:4];
  return [NSString pathWithComponents:v4];
}

uint64_t IMPluginSnapshotCachesFileURL(void *a1, uint64_t a2)
{
  uint64_t v2 = sub_1A07BFED4(a1, a2);
  uint64_t v3 = (void *)MEMORY[0x1E4F1CB10];

  return [v3 fileURLWithPath:v2 isDirectory:0];
}

uint64_t IMPluginSnapshotExistsInCache(void *a1, uint64_t a2)
{
  uint64_t v2 = sub_1A07BFED4(a1, a2);
  uint64_t v3 = (void *)[MEMORY[0x1E4F28CB8] defaultManager];

  return [v3 fileExistsAtPath:v2];
}

uint64_t IMUTTypeIsDynamic(void *a1, const char *a2)
{
  return [a1 hasPrefix:@"dyn."];
}

uint64_t IMUTITypeIsNotPNG(uint64_t a1)
{
  if (qword_1E94FF490 != -1) {
    dispatch_once(&qword_1E94FF490, &unk_1EF2BF240);
  }
  uint64_t v2 = (void *)qword_1E94FF488;

  return [v2 containsObject:a1];
}

id sub_1A07C0080()
{
  id result = (id)objc_msgSend(MEMORY[0x1E4F1CAD0], "setWithObjects:", @"public.jpeg", @"com.apple.quicktime", @"com.compuserve.gif", 0);
  qword_1E94FF488 = (uint64_t)result;
  return result;
}

uint64_t IMUTITypeIsSupportedByPhotos(uint64_t result)
{
  uint64_t v14 = *MEMORY[0x1E4F143B8];
  if (result)
  {
    uint64_t v1 = result;
    id v2 = +[IMAttachmentUtilities photosSupportedPreviewGeneratorClasses];
    uint64_t v3 = (void *)[MEMORY[0x1E4F1CA80] set];
    long long v9 = 0u;
    long long v10 = 0u;
    long long v11 = 0u;
    long long v12 = 0u;
    uint64_t v4 = [v2 countByEnumeratingWithState:&v9 objects:v13 count:16];
    if (v4)
    {
      uint64_t v5 = v4;
      uint64_t v6 = *(void *)v10;
      do
      {
        uint64_t v7 = 0;
        do
        {
          if (*(void *)v10 != v6) {
            objc_enumerationMutation(v2);
          }
          uint64_t v8 = [*(id *)(*((void *)&v9 + 1) + 8 * v7) UTITypes];
          if (v8) {
            [v3 addObjectsFromArray:v8];
          }
          ++v7;
        }
        while (v5 != v7);
        uint64_t v5 = [v2 countByEnumeratingWithState:&v9 objects:v13 count:16];
      }
      while (v5);
    }
    return [v3 containsObject:v1];
  }
  return result;
}

BOOL IMUTITypeIsPhoto(BOOL result)
{
  if (result)
  {
    BOOL v1 = result;
    id v2 = +[IMImagePreviewGenerator UTITypes];
    return v2 && ([v2 containsObject:v1] & 1) != 0;
  }
  return result;
}

BOOL IMUTITypeIsAnimatedImage(BOOL result)
{
  if (result)
  {
    BOOL v1 = result;
    id v2 = +[IMAnimatedImagePreviewGenerator UTITypes];
    return v2 && ([v2 containsObject:v1] & 1) != 0;
  }
  return result;
}

BOOL IMUTITypeIsVideo(BOOL result)
{
  if (result)
  {
    BOOL v1 = result;
    id v2 = +[IMMoviePreviewGenerator UTITypes];
    return v2 && ([v2 containsObject:v1] & 1) != 0;
  }
  return result;
}

BOOL IMUTITypeIsFileAttachment(BOOL result)
{
  if (result) {
    return !qword_1EB4A62D8 || ![(id)qword_1EB4A62D8 objectForKey:result];
  }
  return result;
}

uint64_t IMLookUpExtensionInCache(uint64_t a1)
{
  if (qword_1EB4A62B8 != -1)
  {
    dispatch_once(&qword_1EB4A62B8, &unk_1EF2BFD20);
    if (a1) {
      goto LABEL_3;
    }
    return 0;
  }
  if (!a1) {
    return 0;
  }
LABEL_3:
  id v2 = (void *)qword_1EB4A62B0;

  return [v2 objectForKey:a1];
}

id sub_1A07C03A8()
{
  id result = (id)objc_msgSend(MEMORY[0x1E4F1C9E8], "dictionaryWithObjectsAndKeys:", @"jpg", @"public.jpeg", @"jpeg", @"com.apple.quicktime-movie", @"mov", @"public.png", @"png", @"com.compuserve.gif", @"gif", 0);
  qword_1EB4A62B0 = (uint64_t)result;
  return result;
}

__CFString *IMUTITypeForExtension(void *a1)
{
  if (![a1 length]) {
    return (__CFString *)*MEMORY[0x1E4F22588];
  }
  CFStringRef v2 = (const __CFString *)[a1 lowercaseString];
  uint64_t v3 = (void *)qword_1EB4A62D8;
  if (!qword_1EB4A62D8)
  {
    sub_1A07912C0();
    uint64_t v3 = (void *)qword_1EB4A62D8;
  }
  id result = (__CFString *)[v3 objectForKey:v2];
  if (!result)
  {
    uint64_t v5 = (void *)qword_1EB4A62E0;
    if (!qword_1EB4A62E0)
    {
      sub_1A07912C0();
      uint64_t v5 = (void *)qword_1EB4A62E0;
    }
    id result = (__CFString *)[v5 objectForKey:v2];
    if (!result)
    {
      id result = (__CFString *)IMLookUpExtensionInCache((uint64_t)v2);
      if (!result)
      {
        PreferredIdentifierForTag = (__CFString *)UTTypeCreatePreferredIdentifierForTag((CFStringRef)*MEMORY[0x1E4F224F8], v2, 0);
        return PreferredIdentifierForTag;
      }
    }
  }
  return result;
}

__CFString *IMUTITypeForFilename(void *a1)
{
  id result = (__CFString *)[a1 length];
  if (result)
  {
    uint64_t v3 = 0;
    IMAttachmentFileNameAndExtension(a1, 0, &v3);
    return IMUTITypeForExtension(v3);
  }
  return result;
}

double IMClientPreviewConstraints@<D0>(uint64_t a1@<X8>)
{
  CFStringRef v2 = (void *)IMGetCachedDomainValueForKey();
  uint64_t v3 = (void *)IMGetCachedDomainValueForKey();
  uint64_t v4 = (void *)IMGetCachedDomainValueForKey();
  uint64_t v5 = (void *)IMGetCachedDomainValueForKey();
  [v4 floatValue];
  double v7 = v6;
  [v5 floatValue];
  double v9 = v8;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(void *)(a1 + 32) = 0;
  [v2 floatValue];
  *(double *)a1 = v10;
  [v3 floatValue];
  double result = v11;
  *(double *)(a1 + 16) = v9;
  *(double *)(a1 + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = result;
  *(double *)(a1 + 8) = v7;
  *(_WORD *)(a1 + 32) = 0;
  *(unsigned char *)(a1 + 34) = 0;
  return result;
}

void IMClientPreviewStickerConstraints(uint64_t a1@<X8>)
{
  *(void *)(a1 + 32) = 0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  IMClientPreviewConstraints(a1);
  *(unsigned char *)(a1 + 32) = 1;
}

__CFString *IMPreviewExtension()
{
  if (IMSupportsASTC()) {
    return @"ktx";
  }
  else {
    return @"cpbitmap";
  }
}

uint64_t IMUpdateTransferConstraintAndSizeKeys(void *a1, uint64_t a2, double a3, double a4)
{
  uint64_t v24 = *MEMORY[0x1E4F143B8];
  if (IMOSLoggingEnabled())
  {
    float v8 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)long long buf = 138412290;
      *(void *)&uint8_t buf[4] = IMStringFromCGSize(a3, a4);
      _os_log_impl(&dword_1A0772000, v8, OS_LOG_TYPE_INFO, "Saving IMFileTransfer preview size %@", buf, 0xCu);
    }
  }
  long long v9 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)long long buf = *(_OWORD *)a2;
  long long v22 = v9;
  uint64_t v23 = *(void *)(a2 + 32);
  id v10 = IMPreviewConstraintsDictionaryFromConstraint((uint64_t)buf);
  id v12 = v10;
  if (a1)
  {
    uint64_t v13 = (void *)[a1 mutableCopy];
    [v13 setObject:v12 forKey:@"pgenszc"];
    *(float *)&double v14 = a3;
    objc_msgSend(v13, "setObject:forKey:", objc_msgSend(NSNumber, "numberWithFloat:", v14), @"pgensw");
    *(float *)&double v15 = a4;
    objc_msgSend(v13, "setObject:forKey:", objc_msgSend(NSNumber, "numberWithFloat:", v15), @"pgensh");
    id v16 = (id)[v13 copy];
  }
  else
  {
    v20[0] = v10;
    *(float *)&double v11 = a3;
    v20[1] = objc_msgSend(NSNumber, "numberWithFloat:", v11, @"pgenszc", @"pgensw");
    _OWORD v19[2] = @"pgensh";
    *(float *)&double v17 = a4;
    v20[2] = [NSNumber numberWithFloat:v17];
    return [MEMORY[0x1E4F1C9E8] dictionaryWithObjects:v20 forKeys:v19 count:3];
  }
  return (uint64_t)v16;
}

id IMStripTransferConstraintAndSizeKeys(id result)
{
  if (result)
  {
    CFMutableDictionaryRef Mutable = (CFMutableDictionaryRef)[result mutableCopy];
    if (!Mutable) {
      CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable(0, 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
    }
    [(__CFDictionary *)Mutable removeObjectForKey:@"pgensw"];
    [(__CFDictionary *)Mutable removeObjectForKey:@"pgensh"];
    [(__CFDictionary *)Mutable removeObjectForKey:@"pgenszc"];
    CFStringRef v2 = (void *)[(__CFDictionary *)Mutable copy];

    return v2;
  }
  return result;
}

uint64_t sub_1A07C094C()
{
  if (qword_1EB4A6028 != -1) {
    dispatch_once(&qword_1EB4A6028, &unk_1EF2C1078);
  }
  if (qword_1EB4A6020) {
    return *(void *)qword_1EB4A6020;
  }
  else {
    return 0;
  }
}

uint64_t sub_1A07C09A0()
{
  uint64_t result = MEMORY[0x1A6227920]("AVAssetPrefersSandboxedParsingOptionKey", @"AVFoundation");
  qword_1EB4A6020 = result;
  return result;
}

id sub_1A07C09D0(char a1)
{
  v5[1] = *MEMORY[0x1E4F143B8];
  uint64_t v4 = *MEMORY[0x1E4F16158];
  v5[0] = [NSNumber numberWithUnsignedInteger:0xFFFFLL];
  CFStringRef v2 = objc_msgSend((id)objc_msgSend(MEMORY[0x1E4F1C9E8], "dictionaryWithObjects:forKeys:count:", v5, &v4, 1), "mutableCopy");
  if ((a1 & 1) == 0 && sub_1A07C094C()) {
    [v2 setObject:MEMORY[0x1E4F1CC38] forKey:sub_1A07C094C()];
  }
  return v2;
}

id IMAVURLAssetOptionsDefault()
{
  return sub_1A07C09D0(0);
}

void *IMAVURLAssetOptionsWithExtraOptions(uint64_t a1)
{
  CFStringRef v2 = (void *)[sub_1A07C09D0(0) mutableCopy];
  [v2 addEntriesFromDictionary:a1];
  return v2;
}

void *IMAVURLAssetOptionsWithExtraOptionsForWrite(uint64_t a1)
{
  CFStringRef v2 = (void *)[sub_1A07C09D0(1) mutableCopy];
  [v2 addEntriesFromDictionary:a1];
  return v2;
}

id _avAssetForURL(void *a1)
{
  if (!a1 || ![a1 isFileURL]) {
    return 0;
  }
  CFStringRef v2 = (void *)[objc_alloc(MEMORY[0x1E4F166C8]) initWithURL:a1 options:sub_1A07C09D0(0)];

  return v2;
}

uint64_t sub_1A07C0B84(void *a1)
{
  uint64_t v14 = *MEMORY[0x1E4F143B8];
  long long v9 = 0u;
  long long v10 = 0u;
  long long v11 = 0u;
  long long v12 = 0u;
  BOOL v1 = objc_msgSend(a1, "tracks", 0);
  uint64_t result = [v1 countByEnumeratingWithState:&v9 objects:v13 count:16];
  if (result)
  {
    uint64_t v3 = result;
    uint64_t v4 = *(void *)v10;
    uint64_t v5 = *MEMORY[0x1E4F15C18];
    uint64_t v6 = *MEMORY[0x1E4F15B10];
    while (2)
    {
      uint64_t v7 = 0;
      do
      {
        if (*(void *)v10 != v4) {
          objc_enumerationMutation(v1);
        }
        float v8 = *(void **)(*((void *)&v9 + 1) + 8 * v7);
        if (objc_msgSend((id)objc_msgSend(v8, "mediaType"), "isEqual:", v5)
          && ([v8 hasMediaCharacteristic:v6] & 1) != 0)
        {
          return 1;
        }
        ++v7;
      }
      while (v3 != v7);
      uint64_t result = [v1 countByEnumeratingWithState:&v9 objects:v13 count:16];
      uint64_t v3 = result;
      if (result) {
        continue;
      }
      break;
    }
  }
  return result;
}

void *IMIsHEVCWithAlphaVideo(void *a1)
{
  if (a1) {
    return (void *)sub_1A07C0B84(a1);
  }
  return a1;
}

uint64_t IMIsHEVCWithAlphaVideoURL(void *a1)
{
  if (!a1) {
    return 0;
  }
  id v1 = _avAssetForURL(a1);
  if (!v1) {
    return 0;
  }

  return sub_1A07C0B84(v1);
}

uint64_t IMEstimateDurationForSize(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v6 = objc_alloc(MEMORY[0x1E4F16360]);
  uint64_t v7 = (void *)[v6 initWithAsset:a1 presetName:*MEMORY[0x1E4F15758]];
  [v7 setFileLengthLimit:a2];
  v9[0] = MEMORY[0x1E4F143A8];
  v9[1] = 3221225472;
  v9[2] = sub_1A07C0DAC;
  v9[3] = &unk_1E5A10B30;
  v9[4] = a3;
  return [v7 estimateMaximumDurationWithCompletionHandler:v9];
}

uint64_t sub_1A07C0DAC(uint64_t a1, CMTime *a2, uint64_t a3, __n128 a4)
{
  if (a3)
  {
    uint64_t v5 = *(uint64_t (**)(__n128))(*(void *)(a1 + 32) + 16);
    a4.n128_u64[0] = 30.0;
    return v5(a4);
  }
  else
  {
    CMTime v8 = *a2;
    double Seconds = CMTimeGetSeconds(&v8);
    uint64_t result = *(void *)(a1 + 32);
    if (result) {
      return (*(uint64_t (**)(double))(result + 16))(Seconds);
    }
  }
  return result;
}

uint64_t IMMaxBitDepthForVideo(void *a1)
{
  uint64_t v18 = *MEMORY[0x1E4F143B8];
  id v1 = (void *)[a1 tracksWithMediaType:*MEMORY[0x1E4F15C18]];
  long long v13 = 0u;
  long long v14 = 0u;
  long long v15 = 0u;
  long long v16 = 0u;
  uint64_t v2 = [v1 countByEnumeratingWithState:&v13 objects:v17 count:16];
  if (!v2) {
    return 0;
  }
  uint64_t v3 = v2;
  uint64_t v4 = 0;
  uint64_t v5 = *(void *)v14;
  CFStringRef v6 = (const __CFString *)*MEMORY[0x1E4F1ED40];
  do
  {
    for (uint64_t i = 0; i != v3; ++i)
    {
      if (*(void *)v14 != v5) {
        objc_enumerationMutation(v1);
      }
      CMTime v8 = (const opaqueCMFormatDescription *)objc_msgSend((id)objc_msgSend(*(id *)(*((void *)&v13 + 1) + 8 * i), "formatDescriptions"), "objectAtIndexedSubscript:", 0);
      if (v8)
      {
        CFNumberRef Extension = (const __CFNumber *)CMFormatDescriptionGetExtension(v8, v6);
        if (Extension)
        {
          int valuePtr = 0;
          CFNumberGetValue(Extension, kCFNumberIntType, &valuePtr);
          if (valuePtr > (int)v4 || v4 == 0) {
            uint64_t v4 = valuePtr;
          }
          else {
            uint64_t v4 = v4;
          }
        }
      }
    }
    uint64_t v3 = [v1 countByEnumeratingWithState:&v13 objects:v17 count:16];
  }
  while (v3);
  return v4;
}

void *IMIsAAVideo(void *a1)
{
  uint64_t result = (void *)[a1 tracksWithMediaCharacteristic:*MEMORY[0x1E4F15B28]];
  if (result) {
    return (void *)([result count] != 0);
  }
  return result;
}

void *IMIsAAVideoURL(void *result)
{
  if (result)
  {
    uint64_t result = (void *)[_avAssetForURL(result) tracksWithMediaCharacteristic:*MEMORY[0x1E4F15B28]];
    if (result) {
      return (void *)([result count] != 0);
    }
  }
  return result;
}

uint64_t IMIsSpatialMedia(uint64_t result)
{
  if (result)
  {
    id v1 = (id)[objc_alloc(MEMORY[0x1E4F8CC48]) initWithMediaURL:result detail:1 timeZoneLookup:0 shouldCache:0];
    return MEMORY[0x1F4181798](v1, sel_isSpatialMedia);
  }
  return result;
}

void *IMCheckVideoURLProperties(void *result, unsigned char *a2, unsigned char *a3, unsigned char *a4)
{
  if (result)
  {
    id v7 = _avAssetForURL(result);
    return (void *)IMCheckVideoProperties((uint64_t)v7, a2, a3, a4);
  }
  return result;
}

uint64_t IMCheckVideoProperties(uint64_t result, unsigned char *a2, unsigned char *a3, unsigned char *a4)
{
  uint64_t v25 = *MEMORY[0x1E4F143B8];
  if (result)
  {
    if (a2) {
      *a2 = 0;
    }
    if (a3) {
      *a3 = 0;
    }
    if (a4) {
      *a4 = 0;
    }
    long long v22 = 0u;
    long long v23 = 0u;
    long long v20 = 0u;
    long long v21 = 0u;
    id obj = (id)[(id)result tracksWithMediaType:*MEMORY[0x1E4F15C18]];
    uint64_t result = [obj countByEnumeratingWithState:&v20 objects:v24 count:16];
    uint64_t v16 = result;
    if (result)
    {
      uint64_t v17 = *(void *)v21;
      uint64_t v19 = *MEMORY[0x1E4F15B10];
      CFStringRef v7 = (const __CFString *)*MEMORY[0x1E4F24BC8];
      uint64_t v8 = *MEMORY[0x1E4F1EEF8];
      uint64_t v18 = *MEMORY[0x1E4F1EF18];
      while (2)
      {
        uint64_t v9 = 0;
        do
        {
          if (*(void *)v21 != v17) {
            objc_enumerationMutation(obj);
          }
          long long v10 = *(void **)(*((void *)&v20 + 1) + 8 * v9);
          long long v11 = (void *)[v10 formatDescriptions];
          if ([v11 count])
          {
            uint64_t v12 = 0;
            do
            {
              uint64_t result = [v11 objectAtIndex:v12];
              long long v13 = (const opaqueCMFormatDescription *)result;
              if (a2)
              {
                uint64_t result = CMFormatDescriptionGetMediaSubType((CMFormatDescriptionRef)result);
                if (result == 1752589105) {
                  *a2 = 1;
                }
              }
              if (a3)
              {
                uint64_t result = [v10 hasMediaCharacteristic:v19];
                if (result) {
                  *a3 = 1;
                }
              }
              if (a4)
              {
                CFNumberRef Extension = (void *)CMFormatDescriptionGetExtension(v13, v7);
                uint64_t result = [Extension isEqualToString:v8];
                if ((result & 1) != 0 || (uint64_t result = [Extension isEqualToString:v18], result)) {
                  *a4 = 1;
                }
              }
              if ((!a2 || *a2) && (!a3 || *a3) && (!a4 || *a4)) {
                return result;
              }
            }
            while ([v11 count] > (unint64_t)++v12);
          }
          ++v9;
        }
        while (v9 != v16);
        uint64_t result = [obj countByEnumeratingWithState:&v20 objects:v24 count:16];
        uint64_t v16 = result;
        if (result) {
          continue;
        }
        break;
      }
    }
  }
  return result;
}

uint64_t sub_1A07C12E8()
{
  uint64_t v0 = objc_msgSend((id)objc_msgSend(MEMORY[0x1E4F6B598], "sharedInstanceForBagType:", 1), "objectForKey:", @"md-max-size-for-pasted-movie-write");
  if (!v0) {
    return 262144000;
  }
  id v1 = (void *)v0;
  if ((objc_opt_respondsToSelector() & 1) == 0) {
    return 262144000;
  }

  return [v1 unsignedLongValue];
}

uint64_t IMIsHEVCWithAlphaVideoFromData(void *a1, void *a2)
{
  uint64_t v27 = *MEMORY[0x1E4F143B8];
  unint64_t v4 = [a1 length];
  unint64_t v5 = [(objc_class *)+[IMAttachmentUtilities __AVDataAssetClass] _dataLengthLimit];
  if (IMOSLoggingEnabled())
  {
    CFStringRef v6 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)long long buf = 134218240;
      unint64_t v24 = v4;
      __int16 v25 = 2048;
      unint64_t v26 = v5;
      _os_log_impl(&dword_1A0772000, v6, OS_LOG_TYPE_INFO, "Check for using AVDataAsset for pasted item size: %lu limit: %lu", buf, 0x16u);
    }
  }
  if (a1 && v4 && v4 <= v5) {
    return sub_1A07C0B84((void *)[MEMORY[0x1E4F16330] assetWithData:a1 contentType:*MEMORY[0x1E4F15AB0] options:0]);
  }
  unint64_t v8 = sub_1A07C12E8();
  if (v4 > v8)
  {
    if (!IMOSLoggingEnabled()) {
      return 0;
    }
    uint64_t v9 = OSLogHandleForIMFoundationCategory();
    if (!os_log_type_enabled(v9, OS_LOG_TYPE_INFO)) {
      return 0;
    }
    *(_DWORD *)long long buf = 134218240;
    unint64_t v24 = v4;
    __int16 v25 = 2048;
    unint64_t v26 = v8;
    long long v10 = "Skipping write of file (too large) size: %lu limit: %lu";
    goto LABEL_12;
  }
  long long v13 = objc_msgSend(a2, "im_lastPathComponent");
  long long v14 = v13;
  if (!v13 || ![v13 length])
  {
    if (!IMOSLoggingEnabled()) {
      return 0;
    }
    uint64_t v18 = OSLogHandleForIMFoundationCategory();
    if (!os_log_type_enabled(v18, OS_LOG_TYPE_INFO)) {
      return 0;
    }
    *(_DWORD *)long long buf = 138412290;
    unint64_t v24 = (unint64_t)a2;
    long long v10 = "File name %@ is invalid";
    long long v11 = v18;
    uint32_t v12 = 12;
    goto LABEL_21;
  }
  uint64_t v15 = objc_msgSend((id)objc_msgSend((id)objc_msgSend(MEMORY[0x1E4F28CB8], "defaultManager"), "im_randomTemporaryFileURLWithFileName:", v14), "path");
  unint64_t v22 = 0;
  if (![a1 writeToFile:v15 options:2 error:&v22])
  {
    if (!IMOSLoggingEnabled()) {
      return 0;
    }
    uint64_t v9 = OSLogHandleForIMFoundationCategory();
    if (!os_log_type_enabled(v9, OS_LOG_TYPE_INFO)) {
      return 0;
    }
    *(_DWORD *)long long buf = 138412546;
    unint64_t v24 = v15;
    __int16 v25 = 2112;
    unint64_t v26 = v22;
    long long v10 = "Failed to write file %@, error %@";
LABEL_12:
    long long v11 = v9;
    uint32_t v12 = 22;
LABEL_21:
    _os_log_impl(&dword_1A0772000, v11, OS_LOG_TYPE_INFO, v10, buf, v12);
    return 0;
  }
  uint64_t v16 = (void *)[MEMORY[0x1E4F1CB10] fileURLWithPath:v15];
  id v17 = _avAssetForURL(v16);
  if (v17) {
    uint64_t v7 = sub_1A07C0B84(v17);
  }
  else {
    uint64_t v7 = 0;
  }
  if (IMOSLoggingEnabled())
  {
    long long v20 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v20, OS_LOG_TYPE_INFO))
    {
      long long v21 = @"NO";
      if (v7) {
        long long v21 = @"YES";
      }
      *(_DWORD *)long long buf = 138412546;
      unint64_t v24 = (unint64_t)v16;
      __int16 v25 = 2112;
      unint64_t v26 = (unint64_t)v21;
      _os_log_impl(&dword_1A0772000, v20, OS_LOG_TYPE_INFO, "File for pasted item: %@, isHEVCWithAlpha: %@", buf, 0x16u);
    }
  }
  objc_msgSend((id)objc_msgSend(MEMORY[0x1E4F28CB8], "defaultManager"), "removeItemAtURL:error:", v16, 0);
  return v7;
}

CFURLRef sub_1A07C1708(const __CFURL *a1)
{
  uint64_t v21 = *MEMORY[0x1E4F143B8];
  if (a1)
  {
    uint64_t v2 = CGImageSourceCreateWithURL(a1, 0);
    if (v2)
    {
      uint64_t v3 = v2;
      CFDictionaryRef v4 = (const __CFDictionary *)MEMORY[0x1E4F1CC08];
      CFDictionaryRef v5 = CGImageSourceCopyPropertiesAtIndex(v2, 0, MEMORY[0x1E4F1CC08]);
      CGImageRef ThumbnailAtIndex = CGImageSourceCreateThumbnailAtIndex(v3, 0, v4);
      if (!ThumbnailAtIndex)
      {
        CFURLRef v11 = 0;
LABEL_21:
        CFRelease(v3);
        CFRelease(v5);
        return v11;
      }
      uint64_t v7 = ThumbnailAtIndex;
      CFURLRef v8 = (const __CFURL *)objc_msgSend((id)objc_msgSend((id)-[__CFURL im_lastPathComponent](a1, "im_lastPathComponent"), "stringByDeletingPathExtension"), "stringByAppendingString:", @".JPG");
      CFURLRef v9 = v8;
      if (v8 && [(__CFURL *)v8 length])
      {
        uint64_t v10 = objc_msgSend((id)objc_msgSend((id)objc_msgSend(MEMORY[0x1E4F28CB8], "defaultManager"), "im_randomTemporaryFileURLWithFileName:", v9), "path");
        CFURLRef v11 = (const __CFURL *)[MEMORY[0x1E4F1CB10] fileURLWithPath:v10];
        uint32_t v12 = CGImageDestinationCreateWithURL(v11, (CFStringRef)[(id)*MEMORY[0x1E4F44410] identifier], 1uLL, 0);
        CGImageDestinationAddImage(v12, v7, v5);
        if (!CGImageDestinationFinalize(v12))
        {
          if (IMOSLoggingEnabled())
          {
            long long v13 = OSLogHandleForIMFoundationCategory();
            if (os_log_type_enabled(v13, OS_LOG_TYPE_INFO))
            {
              int v17 = 138412546;
              CFURLRef v18 = a1;
              __int16 v19 = 2112;
              uint64_t v20 = v10;
              _os_log_impl(&dword_1A0772000, v13, OS_LOG_TYPE_INFO, "Failed to save embedded JPEG from PRO %@ to %@", (uint8_t *)&v17, 0x16u);
            }
          }
          CFURLRef v11 = 0;
        }
        CGImageRelease(v7);
        CFRelease(v12);
        goto LABEL_21;
      }
      if (IMOSLoggingEnabled())
      {
        uint64_t v15 = OSLogHandleForIMFoundationCategory();
        if (os_log_type_enabled(v15, OS_LOG_TYPE_INFO))
        {
          int v17 = 138412546;
          CFURLRef v18 = v9;
          __int16 v19 = 2112;
          uint64_t v20 = (uint64_t)a1;
          _os_log_impl(&dword_1A0772000, v15, OS_LOG_TYPE_INFO, "Pro file name %@ is invalid from asset %@", (uint8_t *)&v17, 0x16u);
        }
      }
      CFRelease(v3);
      CGImageRelease(v7);
      CFRelease(v5);
    }
    else if (IMOSLoggingEnabled())
    {
      long long v14 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_INFO))
      {
        int v17 = 138412290;
        CFURLRef v18 = a1;
        _os_log_impl(&dword_1A0772000, v14, OS_LOG_TYPE_INFO, "Unable to create image source from %@ to extract embedded JPEG", (uint8_t *)&v17, 0xCu);
      }
    }
  }
  return 0;
}

CFURLRef IMGetEmbeddedFromProIfPossible(void *a1)
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  if (!objc_msgSend((id)objc_msgSend(a1, "absoluteString"), "length")) {
    return 0;
  }
  CFURLRef v11 = 0;
  uint64_t v7 = 0;
  CFURLRef v8 = &v7;
  uint64_t v9 = 0x2020000000;
  char v10 = 0;
  v6[0] = MEMORY[0x1E4F143A8];
  v6[1] = 3221225472;
  _OWORD v6[2] = sub_1A07C1C44;
  v6[3] = &unk_1E5A10B58;
  void v6[5] = 0;
  void v6[6] = &v7;
  void v6[4] = a1;
  [MEMORY[0x1E4F8CC08] queryImagePropertiesOfFileAtURL:a1 error:&v11 block:v6];
  if (*((unsigned char *)v8 + 24))
  {
    CFURLRef v2 = sub_1A07C1708((const __CFURL *)a1);
    if (IMOSLoggingEnabled())
    {
      uint64_t v3 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)long long buf = 138412546;
        CFURLRef v13 = v2;
        __int16 v14 = 2112;
        uint64_t v15 = a1;
        _os_log_impl(&dword_1A0772000, v3, OS_LOG_TYPE_INFO, "Extracted embedded JPEG %@ from pro image at %@", buf, 0x16u);
      }
    }
  }
  else
  {
    if (IMOSLoggingEnabled())
    {
      CFDictionaryRef v4 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)long long buf = 138412546;
        CFURLRef v13 = (const __CFURL *)a1;
        __int16 v14 = 2112;
        uint64_t v15 = v11;
        _os_log_impl(&dword_1A0772000, v4, OS_LOG_TYPE_INFO, "Extracted URL %@ with error %@", buf, 0x16u);
      }
    }
    CFURLRef v2 = 0;
  }
  _Block_object_dispose(&v7, 8);
  return v2;
}

void sub_1A07C1C44(uint64_t a1, uint64_t a2)
{
  uint64_t v14 = *MEMORY[0x1E4F143B8];
  uint64_t v9 = 0;
  uint64_t v4 = objc_msgSend(MEMORY[0x1E4F442D8], "typeWithFilenameExtension:", objc_msgSend(*(id *)(a1 + 32), "pathExtension"));
  CFDictionaryRef v5 = (void *)[objc_alloc(MEMORY[0x1E4F8CC48]) initWithImageProperties:a2 contentType:v4 timeZoneLookup:0];
  *(unsigned char *)(*(void *)(*(void *)(a1 + 48) + 8) + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = objc_msgSend((id)objc_msgSend(MEMORY[0x1E4F8CC38], "hasEmbeddedJPEGSuitableForDerivativesInImageAtURL:metadata:error:", *(void *)(a1 + 32), v5, &v9), "BOOLValue");
  if (v9)
  {
    if (IMOSLoggingEnabled())
    {
      CFStringRef v6 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
      {
        uint64_t v7 = *(void *)(a1 + 32);
        uint64_t v8 = *(void *)(a1 + 40);
        *(_DWORD *)long long buf = 138412546;
        uint64_t v11 = v7;
        __int16 v12 = 2112;
        uint64_t v13 = v8;
        _os_log_impl(&dword_1A0772000, v6, OS_LOG_TYPE_INFO, "Extracted URL %@ with image error %@", buf, 0x16u);
      }
    }
  }
  if (v5) {
}
  }

BOOL IMIsImageURLAScreenshot(void *a1)
{
  uint64_t v12 = *MEMORY[0x1E4F143B8];
  if (!+[IMImageUtilities isCroppingAvoidanceEnabled]
    || !objc_msgSend((id)objc_msgSend(a1, "absoluteString"), "length"))
  {
    return 0;
  }
  uint64_t v10 = 0;
  uint64_t v6 = 0;
  uint64_t v7 = &v6;
  uint64_t v8 = 0x2020000000;
  char v9 = 0;
  v5[0] = MEMORY[0x1E4F143A8];
  v5[1] = 3221225472;
  void v5[2] = sub_1A07C1F20;
  v5[3] = &unk_1E5A10B80;
  v5[4] = &v6;
  if (([MEMORY[0x1E4F8CC08] queryImagePropertiesOfFileAtURL:a1 error:&v10 block:v5] & 1) == 0)
  {
    CFURLRef v2 = IMLogHandleForCategory("IMAttachmentUtilities");
    if (os_log_type_enabled(v2, OS_LOG_TYPE_ERROR)) {
      sub_1A09EF588(objc_msgSend((id)objc_msgSend(a1, "standardizedURL"), "path"), &v10, buf, v2);
    }
  }
  BOOL v3 = *((unsigned char *)v7 + 24) != 0;
  _Block_object_dispose(&v6, 8);
  return v3;
}

void sub_1A07C1EF8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, char a14)
{
}

uint64_t sub_1A07C1F20(uint64_t a1, void *a2)
{
  uint64_t result = [a2 objectForKeyedSubscript:*MEMORY[0x1E4F2F7F8]];
  if (result)
  {
    uint64_t v4 = (void *)result;
    objc_opt_class();
    uint64_t result = objc_opt_isKindOfClass();
    if (result)
    {
      uint64_t result = objc_msgSend((id)objc_msgSend(v4, "objectForKeyedSubscript:", *MEMORY[0x1E4F2F960]), "isEqualToString:", @"Screenshot");
      *(unsigned char *)(*(void *)(*(void *)(a1 + 32) + 8) + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = result;
    }
  }
  return result;
}

uint64_t sub_1A07C1FE8()
{
  uint64_t result = MEMORY[0x1A6227910](@"AVDataAsset", @"AVFoundation");
  qword_1E94FF498 = result;
  return result;
}

intptr_t sub_1A07C2318(uint64_t a1)
{
  return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

void sub_1A07C267C(_Unwind_Exception *a1)
{
}

void sub_1A07C26A8(uint64_t a1, int a2)
{
  if (a2) {
    JUMPOUT(0x1A07C26B4);
  }
  JUMPOUT(0x1A07C26A0);
}

uint64_t sub_1A07C2BC0(uint64_t a1, void *a2)
{
  BOOL v3 = [a2 service];
  uint64_t v4 = [v3 isEqualToString:*(void *)(a1 + 32)];

  return v4;
}

__CFString *IMStringFromAssociatedMessageType(uint64_t a1)
{
  if (a1 > 1000)
  {
    switch(a1)
    {
      case 3000:
        uint64_t result = @"IMAssociatedMessageTypeAcknowledgmentHeartRemoved";
        break;
      case 3001:
        uint64_t result = @"IMAssociatedMessageTypeAcknowledgmentThumbsUpRemoved";
        break;
      case 3002:
        uint64_t result = @"IMAssociatedMessageTypeAcknowledgmentThumbsDownRemoved";
        break;
      case 3003:
        uint64_t result = @"IMAssociatedMessageTypeAcknowledgmentHaRemoved";
        break;
      case 3004:
        uint64_t result = @"IMAssociatedMessageTypeAcknowledgmentExclamationRemoved";
        break;
      case 3005:
        uint64_t result = @"IMAssociatedMessageTypeAcknowledgmentQuestionMarkRemoved";
        break;
      case 3006:
        uint64_t result = @"IMAssociatedMessageTypeAcknowledgmentEmojiRemoved";
        break;
      case 3007:
        uint64_t result = @"IMAssociatedMessageTypeAcknowledgmentStickerRemoved";
        break;
      default:
        if (a1 == 1001) {
          uint64_t result = @"IMAssociatedMessageTypeEmojiSticker";
        }
        else {
          uint64_t result = 0;
        }
        break;
    }
  }
  else
  {
    id v1 = @"IMAssociatedMessageTypeBreadcrumbConsumed";
    CFURLRef v2 = @"IMAssociatedMessageTypeSticker";
    if (a1 != 1000) {
      CFURLRef v2 = 0;
    }
    if (a1 != 3) {
      id v1 = v2;
    }
    BOOL v3 = @"IMAssociatedMessageTypeUnspecified";
    uint64_t v4 = @"IMAssociatedMessageTypeBreadcrumbUnconsumed";
    if (a1 != 2) {
      uint64_t v4 = 0;
    }
    if (a1) {
      BOOL v3 = v4;
    }
    if (a1 <= 2) {
      return v3;
    }
    else {
      return v1;
    }
  }
  return result;
}

uint64_t IMCounterpartAcknowledgmentTypeForAcknowledgmentType(uint64_t a1)
{
  if (!v2 & v1)
  {
    switch(a1)
    {
      case 3000:
        uint64_t result = 2000;
        break;
      case 3001:
        uint64_t result = 2001;
        break;
      case 3002:
        uint64_t result = 2002;
        break;
      case 3003:
        uint64_t result = 2003;
        break;
      case 3004:
        uint64_t result = 2004;
        break;
      case 3005:
        uint64_t result = 2005;
        break;
      case 3006:
        uint64_t result = 2006;
        break;
      case 3007:
        uint64_t result = 2007;
        break;
      default:
        uint64_t result = 0;
        break;
    }
  }
  else
  {
    switch(a1)
    {
      case 2000:
        uint64_t result = 3000;
        break;
      case 2001:
        uint64_t result = 3001;
        break;
      case 2002:
        uint64_t result = 3002;
        break;
      case 2003:
        uint64_t result = 3003;
        break;
      case 2004:
        uint64_t result = 3004;
        break;
      case 2005:
        uint64_t result = 3005;
        break;
      case 2006:
        uint64_t result = 3006;
        break;
      case 2007:
        uint64_t result = 3007;
        break;
      default:
        JUMPOUT(0);
    }
  }
  return result;
}

uint64_t sub_1A07C30B0(void *a1)
{
  uint64_t result = [a1 longLongValue];
  if (result > 2999)
  {
    if ((unint64_t)(result - 3000) >= 8) {
      return 0;
    }
  }
  else if ((unint64_t)(result - 2000) >= 8 {
         && ((unint64_t)result > 3 || result == 1)
  }
         && (unint64_t)(result - 1000) >= 2)
  {
    return 0;
  }
  return result;
}

uint64_t sub_1A07C5890(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v8 = 0;
  BOOL v3 = [a1 attributesOfItemAtPath:a3 error:&v8];
  uint64_t v4 = [v3 objectForKeyedSubscript:*MEMORY[0x1E4F28390]];
  CFDictionaryRef v5 = v4;
  uint64_t v6 = -1;
  if (v3 && v4) {
    uint64_t v6 = [v4 longLongValue];
  }

  return v6;
}

void *IMCopySafeNameOfFontFamilyName(void *result)
{
  if (result)
  {
    char v1 = result;
    char v2 = (void *)MEMORY[0x1A6228190]();
    id v3 = objc_alloc_init(MEMORY[0x1E4F28E58]);
    uint64_t v4 = [MEMORY[0x1E4F28B88] whitespaceCharacterSet];
    objc_msgSend(v3, "formUnionWithCharacterSet:", objc_msgSend(MEMORY[0x1E4F28B88], "controlCharacterSet"));
    objc_msgSend(v3, "formUnionWithCharacterSet:", objc_msgSend(MEMORY[0x1E4F28B88], "newlineCharacterSet"));
    [v3 addCharactersInString:@"&%;:,()'\\\"<>@"];
    if ([v1 rangeOfCharacterFromSet:v3] != 0x7FFFFFFFFFFFFFFFLL) {
      char v1 = objc_msgSend((id)objc_msgSend(v1, "componentsSeparatedByCharactersInSet:", v3), "__imFirstObject");
    }
    uint64_t v5 = objc_msgSend((id)objc_msgSend(v1, "stringByTrimmingCharactersInSet:", v4), "copy");

    return (void *)v5;
  }
  return result;
}

uint64_t IMCopyNormalizedAttributes(void *a1, int a2, int a3)
{
  uint64_t v20 = *MEMORY[0x1E4F143B8];
  if (a2 & 1) != 0 || (a3)
  {
    uint64_t v7 = objc_msgSend(objc_alloc(MEMORY[0x1E4F1CA60]), "initWithCapacity:", objc_msgSend(a1, "count"));
    long long v15 = 0u;
    long long v16 = 0u;
    long long v17 = 0u;
    long long v18 = 0u;
    uint64_t v8 = objc_msgSend(a1, "keyEnumerator", 0);
    uint64_t v9 = [v8 countByEnumeratingWithState:&v15 objects:v19 count:16];
    if (v9)
    {
      uint64_t v10 = v9;
      uint64_t v11 = *(void *)v16;
      do
      {
        for (uint64_t i = 0; i != v10; ++i)
        {
          if (*(void *)v16 != v11) {
            objc_enumerationMutation(v8);
          }
          uint64_t v13 = *(void **)(*((void *)&v15 + 1) + 8 * i);
          uint64_t v14 = (void *)[a1 objectForKey:v13];
          if (a2) {
            uint64_t v13 = (void *)[v13 lowercaseString];
          }
          if (a3) {
            uint64_t v14 = (void *)[v14 lowercaseString];
          }
          [v7 setObject:v14 forKey:v13];
        }
        uint64_t v10 = [v8 countByEnumeratingWithState:&v15 objects:v19 count:16];
      }
      while (v10);
    }
    return (uint64_t)v7;
  }
  else
  {
    return [a1 copy];
  }
}

uint64_t IMCreateEscapedAttributeValueFromString(void *a1)
{
  return IMCreateEscapedStringFromString(a1, @" ", @" ", @"&apos;", @"&quot;");
}

uint64_t IMCreateEscapedStringFromString(void *a1, __CFString *a2, __CFString *a3, __CFString *a4, __CFString *a5)
{
  if (!a1) {
    return 0;
  }
  uint64_t v10 = [a1 length];
  uint64_t v11 = malloc_type_malloc(2 * v10 + 2, 0x1000040BDFB0063uLL);
  [a1 getCharacters:v11];
  v11[v10] = 0;
  uint64_t v16 = 0;
  sub_1A07B62B4((uint64_t)v11, 0, &v16, a2, a3, a4, a5);
  if (v16)
  {
    uint64_t v12 = malloc_type_malloc(2 * v16, 0x1000040BDFB0063uLL);
    sub_1A07B62B4((uint64_t)v11, v12, &v16, a2, a3, a4, a5);
    id v13 = [NSString alloc];
    uint64_t v14 = [v13 initWithCharactersNoCopy:v12 length:v16 freeWhenDone:1];
  }
  else
  {
    uint64_t v14 = 0;
  }
  free(v11);
  return v14;
}

id IMCreateSuperFormatStringFromPlainTextString(void *a1)
{
  uint64_t v1 = objc_msgSend(a1, "__stringByStrippingControlCharacters");
  char v2 = (void *)[objc_alloc(MEMORY[0x1E4F28B18]) initWithString:v1];
  id v4 = (id)objc_msgSend(v2, "__im_attributedStringByAssigningMessagePartNumbers");

  return v4;
}

id IMCreateSuperFormatStringWithoutFileTransfers(void *a1, void *a2)
{
  uint64_t v18 = *MEMORY[0x1E4F143B8];
  id v3 = (void *)[a1 mutableCopy];
  if ([v3 length])
  {
    unint64_t v4 = 0;
    uint64_t v5 = *MEMORY[0x1E4F6C188];
    do
    {
      if (objc_msgSend((id)objc_msgSend(v3, "string"), "characterAtIndex:", v4) == 65532)
      {
        uint64_t v6 = (void *)[v3 attributesAtIndex:v4 effectiveRange:0];
        long long v13 = 0u;
        long long v14 = 0u;
        long long v15 = 0u;
        long long v16 = 0u;
        uint64_t v7 = [a2 countByEnumeratingWithState:&v13 objects:v17 count:16];
        if (v7)
        {
          uint64_t v8 = v7;
          uint64_t v9 = *(void *)v14;
          while (2)
          {
            for (uint64_t i = 0; i != v8; ++i)
            {
              if (*(void *)v14 != v9) {
                objc_enumerationMutation(a2);
              }
              if (objc_msgSend((id)objc_msgSend(v6, "objectForKey:", v5), "isEqualToString:", *(void *)(*((void *)&v13 + 1) + 8 * i)))
              {
                objc_msgSend(v3, "deleteCharactersInRange:", v4--, 1);
                goto LABEL_14;
              }
            }
            uint64_t v8 = [a2 countByEnumeratingWithState:&v13 objects:v17 count:16];
            if (v8) {
              continue;
            }
            break;
          }
        }
      }
LABEL_14:
      ++v4;
    }
    while (v4 < [v3 length]);
  }
  uint64_t v11 = objc_msgSend(v3, "__im_attributedStringByAssigningMessagePartNumbers");

  return v11;
}

CFStringTokenizerRef IMStringTokenizerFindTokensInString(void *a1, __CFString *a2)
{
  uint64_t v22 = *MEMORY[0x1E4F143B8];
  v23.CFIndex length = [(__CFString *)a2 length];
  v23.location = 0;
  CFStringTokenizerRef result = CFStringTokenizerCreate(0, a2, v23, 4uLL, 0);
  if (result)
  {
    uint64_t v5 = result;
    int v6 = 0;
    while (CFStringTokenizerAdvanceToNextToken(v5))
    {
      CFRange CurrentTokenRange = CFStringTokenizerGetCurrentTokenRange(v5);
      CFIndex length = CurrentTokenRange.length;
      if (!qword_1E94FF4B0)
      {
        qword_1E94FF4B0 = (uint64_t)objc_alloc_init(MEMORY[0x1E4F28E58]);
        objc_msgSend((id)qword_1E94FF4B0, "addCharactersInRange:", 39, 1);
        objc_msgSend((id)qword_1E94FF4B0, "addCharactersInRange:", 8217, 1);
      }
      uint64_t v9 = -[__CFString rangeOfCharacterFromSet:options:range:](a2, "rangeOfCharacterFromSet:options:range:");
      long long v17 = 0u;
      long long v18 = 0u;
      if (v9 != 0x7FFFFFFFFFFFFFFFLL) {
        CFIndex length = v9 - CurrentTokenRange.location;
      }
      long long v19 = 0uLL;
      long long v20 = 0uLL;
      uint64_t v10 = [a1 countByEnumeratingWithState:&v17 objects:v21 count:16];
      if (v10)
      {
        uint64_t v11 = v10;
        int v16 = v6;
        uint64_t v12 = *(void *)v18;
        while (2)
        {
          for (uint64_t i = 0; i != v11; ++i)
          {
            if (*(void *)v18 != v12) {
              objc_enumerationMutation(a1);
            }
            if (-[__CFString rangeOfString:options:range:](a2, "rangeOfString:options:range:", *(void *)(*((void *)&v17 + 1) + 8 * i), 393, CurrentTokenRange.location, length) != 0x7FFFFFFFFFFFFFFFLL&& v14 == length)
            {
              int v6 = 1;
              goto LABEL_20;
            }
          }
          uint64_t v11 = [a1 countByEnumeratingWithState:&v17 objects:v21 count:16];
          if (v11) {
            continue;
          }
          break;
        }
        int v6 = v16;
      }
LABEL_20:
      ;
    }
    CFRelease(v5);
    return (CFStringTokenizerRef)(v6 & 1);
  }
  return result;
}

uint64_t _iMessageTelemetryLogHandle()
{
  if (qword_1EB4A5FC8 != -1) {
    dispatch_once(&qword_1EB4A5FC8, &unk_1EF2BF260);
  }
  return qword_1EB4A5FC0;
}

os_log_t sub_1A07C6128()
{
  os_log_t result = os_log_create("com.apple.Messages.telemetry", "iMessage");
  qword_1EB4A5FC0 = (uint64_t)result;
  return result;
}

os_log_t sub_1A07C6158()
{
  os_log_t result = os_log_create("com.apple.Messages.telemetry", "Chat");
  qword_1EB4A6090 = (uint64_t)result;
  return result;
}

id _MessageGUIDToSignpostId(void *a1)
{
  id result = (id)[objc_alloc(MEMORY[0x1E4F29128]) initWithUUIDString:a1];
  if (result)
  {
    id v3 = result;
    id result = (id)[a1 length];
    if (result)
    {
      uint64_t v4 = 0;
      uint64_t v5 = 0;
      [v3 getUUIDBytes:&v4];
      return (id)(v5 & 0xFFFFFFFFFFFFFFFCLL | 1);
    }
  }
  return result;
}

void _signpostSendMessage(void *a1, int a2, unsigned int a3)
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  id v5 = _MessageGUIDToSignpostId(a1);
  if (v5)
  {
    os_signpost_id_t v6 = (os_signpost_id_t)v5;
    if (qword_1EB4A6098 != -1) {
      dispatch_once(&qword_1EB4A6098, &unk_1EF2C0540);
    }
    uint64_t v7 = qword_1EB4A6090;
    if (qword_1EB4A6090)
    {
      BOOL v8 = os_signpost_enabled((os_log_t)qword_1EB4A6090);
      if (a2)
      {
        if (!v8) {
          return;
        }
        if (a3 >= 0xA) {
          int v9 = 10;
        }
        else {
          int v9 = a3;
        }
        v15[0] = 67240192;
        v15[1] = v9;
        uint64_t v10 = "numberOfFiles=%{public, signpost.telemetry:number1}u enableTelemetry=YES ";
        uint64_t v11 = v7;
        os_signpost_type_t v12 = OS_SIGNPOST_INTERVAL_BEGIN;
        os_signpost_id_t v13 = v6;
        uint32_t v14 = 8;
      }
      else
      {
        if (!v8) {
          return;
        }
        LOWORD(v15[0]) = 0;
        uint64_t v10 = " enableTelemetry=YES ";
        uint64_t v11 = v7;
        os_signpost_type_t v12 = OS_SIGNPOST_INTERVAL_END;
        os_signpost_id_t v13 = v6;
        uint32_t v14 = 2;
      }
      _os_signpost_emit_with_name_impl(&dword_1A0772000, v11, v12, v13, "SendMessage", v10, (uint8_t *)v15, v14);
    }
  }
}

void _signpostSendFileMessage(void *a1, int a2)
{
  id v3 = _MessageGUIDToSignpostId(a1);
  if (v3)
  {
    os_signpost_id_t v4 = (os_signpost_id_t)v3;
    if (objc_msgSend((id)objc_msgSend((id)objc_msgSend(MEMORY[0x1E4F28B50], "mainBundle"), "bundleIdentifier"), "isEqualToString:", @"com.apple.MobileSMS"))
    {
      if (qword_1EB4A6098 != -1) {
        dispatch_once(&qword_1EB4A6098, &unk_1EF2C0540);
      }
      uint64_t v5 = qword_1EB4A6090;
      if (qword_1EB4A6090)
      {
        BOOL v6 = os_signpost_enabled((os_log_t)qword_1EB4A6090);
        if (a2)
        {
          if (!v6) {
            return;
          }
          __int16 v11 = 0;
          uint64_t v7 = (uint8_t *)&v11;
          BOOL v8 = v5;
          os_signpost_type_t v9 = OS_SIGNPOST_INTERVAL_BEGIN;
        }
        else
        {
          if (!v6) {
            return;
          }
          __int16 v10 = 0;
          uint64_t v7 = (uint8_t *)&v10;
          BOOL v8 = v5;
          os_signpost_type_t v9 = OS_SIGNPOST_INTERVAL_END;
        }
        _os_signpost_emit_with_name_impl(&dword_1A0772000, v8, v9, v4, "SendFileMessage", " enableTelemetry=YES ", v7, 2u);
      }
    }
  }
}

os_log_t sub_1A07C6BD4()
{
  os_log_t result = os_log_create("com.apple.Messages", "BlastDoorAttachment");
  qword_1EB4A62F0 = (uint64_t)result;
  return result;
}

uint64_t sub_1A07C6D84()
{
  uint64_t result = MEMORY[0x1A6227910](@"IMMessagesBlastDoorInterface", @"MessagesBlastDoorSupport");
  qword_1E94FF330 = result;
  return result;
}

uint64_t sub_1A07C6E90()
{
  uint64_t result = objc_msgSend(objc_alloc((Class)MEMORY[0x1A6227910](@"IMMessagesBlastDoorInterface", @"MessagesBlastDoorSupport")), "initWithBlastDoorInstanceType:", @"KnownSender");
  qword_1EB4A5E48 = result;
  return result;
}

uint64_t sub_1A07C6ED0()
{
  uint64_t result = objc_msgSend(objc_alloc((Class)MEMORY[0x1A6227910](@"IMMessagesBlastDoorInterface", @"MessagesBlastDoorSupport")), "initWithBlastDoorInstanceType:", @"UnknownSender");
  qword_1EB4A5E50 = result;
  return result;
}

uint64_t sub_1A07C6F10()
{
  uint64_t result = objc_msgSend(objc_alloc((Class)MEMORY[0x1A6227910](@"IMMessagesBlastDoorInterface", @"MessagesBlastDoorSupport")), "initWithBlastDoorInstanceType:", @"Default");
  qword_1E94FF4C0 = result;
  return result;
}

void sub_1A07C7170(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, __int16 buf)
{
  if (a2 == 1)
  {
    objc_begin_catch(exception_object);
    long long v19 = [*(id *)(v18 + 304) logger];
    if (os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT))
    {
      long long buf = 0;
      _os_log_impl(&dword_1A0772000, v19, OS_LOG_TYPE_DEFAULT, "Failed generating preview through BlastDoor", (uint8_t *)&buf, 2u);
    }
    (*(void (**)(uint64_t, void, uint64_t))(v17 + 16))(v17, 0, [objc_alloc(MEMORY[0x1E4F28C58]) initWithDomain:@"__kIMCoreAttachmentBlastdoorErrorDomain" code:13302 userInfo:0]);
    objc_end_catch();
    JUMPOUT(0x1A07C7138);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1A07C722C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v12 = *MEMORY[0x1E4F143B8];
  BOOL v6 = +[IMAttachmentBlastdoor logger];
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
  {
    int v8 = 138412546;
    uint64_t v9 = a2;
    __int16 v10 = 2112;
    uint64_t v11 = a3;
    _os_log_impl(&dword_1A0772000, v6, OS_LOG_TYPE_DEFAULT, "Blastdoor response %@ received %@", (uint8_t *)&v8, 0x16u);
  }
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_1A07C7538(_Unwind_Exception *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, long long buf)
{
  if (a2 == 1)
  {
    objc_begin_catch(a1);
    uint64_t v21 = [*(id *)(v18 + 304) logger];
    if (os_log_type_enabled(v21, OS_LOG_TYPE_DEFAULT))
    {
      LODWORD(buf) = 134218240;
      *(void *)((char *)&buf + 4) = v20;
      WORD6(buf) = 2048;
      *(void *)((char *)&buf + 14) = v19;
      _os_log_impl(&dword_1A0772000, v21, OS_LOG_TYPE_DEFAULT, "Failed generating workout preview through BlastDoor for maxPxWidth: %f and scale: %f", (uint8_t *)&buf, 0x16u);
    }
    (*(void (**)(uint64_t, void, uint64_t))(v17 + 16))(v17, 0, [objc_alloc(MEMORY[0x1E4F28C58]) initWithDomain:@"__kIMCoreAttachmentBlastdoorErrorDomain" code:13302 userInfo:0]);
    objc_end_catch();
    JUMPOUT(0x1A07C7500);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_1A07C760C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_1A07C78BC()
{
}

uint64_t sub_1A07C78D0(uint64_t a1, uint64_t a2)
{
  uint64_t v11 = *MEMORY[0x1E4F143B8];
  os_signpost_id_t v4 = +[IMAttachmentBlastdoor logger];
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    int v5 = *(unsigned __int8 *)(a1 + 40);
    int v7 = 134218240;
    uint64_t v8 = a2;
    __int16 v9 = 1024;
    int v10 = v5;
    _os_log_impl(&dword_1A0772000, v4, OS_LOG_TYPE_DEFAULT, "Blastdoor response %p received for preview type: %u", (uint8_t *)&v7, 0x12u);
  }
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_1A07C7BF8(_Unwind_Exception *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, long long buf)
{
  if (a2 == 1)
  {
    objc_begin_catch(a1);
    uint64_t v21 = [*(id *)(v18 + 304) logger];
    if (os_log_type_enabled(v21, OS_LOG_TYPE_DEFAULT))
    {
      LODWORD(buf) = 134218240;
      *(void *)((char *)&buf + 4) = v20;
      WORD6(buf) = 2048;
      *(void *)((char *)&buf + 14) = v19;
      _os_log_impl(&dword_1A0772000, v21, OS_LOG_TYPE_DEFAULT, "Failed generating movie preview through BlastDoor for maxPxWidth: %f and scale: %f", (uint8_t *)&buf, 0x16u);
    }
    (*(void (**)(uint64_t, void, uint64_t))(v17 + 16))(v17, 0, [objc_alloc(MEMORY[0x1E4F28C58]) initWithDomain:@"__kIMCoreAttachmentBlastdoorErrorDomain" code:13302 userInfo:0]);
    objc_end_catch();
    JUMPOUT(0x1A07C7BBCLL);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_1A07C7CCC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

uint64_t sub_1A07C80DC(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v17 = *MEMORY[0x1E4F143B8];
  BOOL v6 = +[IMAttachmentBlastdoor logger];
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v7 = *(void *)(a1 + 32);
    *(_DWORD *)uint64_t v16 = 134218242;
    *(void *)&void v16[4] = a2;
    *(_WORD *)&v16[12] = 2112;
    *(void *)&v16[14] = v7;
    _os_log_impl(&dword_1A0772000, v6, OS_LOG_TYPE_DEFAULT, "Blastdoor response %p received (identifier: %@)", v16, 0x16u);
  }
  if (!a2 || a3)
  {
    uint64_t v8 = +[IMAttachmentBlastdoor logger];
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_1A09EF7D8(a3, v8);
    }
  }
  else
  {
    switch(objc_msgSend((id)objc_msgSend(a2, "payload"), "type"))
    {
      case 0:
        objc_msgSend((id)objc_msgSend(a2, "payload"), "messagesAppBalloon");
        break;
      case 1:
        objc_msgSend((id)objc_msgSend(a2, "payload"), "handwriting");
        break;
      case 2:
        objc_msgSend((id)objc_msgSend(a2, "payload"), "linkPresentation");
        break;
      case 3:
        uint32_t v14 = +[IMAttachmentBlastdoor logger];
        if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)uint64_t v16 = 0;
          uint64_t v11 = "[WARN] Should not have received BlastDoorBalloonPluginPayloadCombinedPluginAttachmentInfo back as payload type.";
          uint64_t v12 = v14;
          uint32_t v13 = 2;
          goto LABEL_16;
        }
        break;
      case 4:
        objc_msgSend((id)objc_msgSend(a2, "payload"), "digitalTouchBalloon");
        break;
      default:
        __int16 v9 = +[IMAttachmentBlastdoor logger];
        if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
        {
          uint64_t v10 = objc_msgSend((id)objc_msgSend(a2, "payload"), "type");
          *(_DWORD *)uint64_t v16 = 134217984;
          *(void *)&void v16[4] = v10;
          uint64_t v11 = "[WARN] Unable to handle unknown payload type (type: %tu).";
          uint64_t v12 = v9;
          uint32_t v13 = 12;
LABEL_16:
          _os_log_impl(&dword_1A0772000, v12, OS_LOG_TYPE_DEFAULT, v11, v16, v13);
        }
        break;
    }
    objc_msgSend(a2, "attachments", *(_OWORD *)v16);
  }
  return (*(uint64_t (**)(void))(*(void *)(a1 + 40) + 16))();
}

void sub_1A07C84E0(_Unwind_Exception *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int buf)
{
  if (a2 == 1)
  {
    objc_begin_catch(a1);
    uint64_t v18 = +[IMAttachmentBlastdoor logger];
    if (os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT))
    {
      long long buf = 138412290;
      _os_log_impl(&dword_1A0772000, v18, OS_LOG_TYPE_DEFAULT, "Failed generating audio preview through BlastDoor for sourceURL: %@", (uint8_t *)&buf, 0xCu);
    }
    (*(void (**)(uint64_t, void, uint64_t))(v17 + 16))(v17, 0, [objc_alloc(MEMORY[0x1E4F28C58]) initWithDomain:@"__kIMCoreAttachmentBlastdoorErrorDomain" code:13302 userInfo:0]);
    objc_end_catch();
    JUMPOUT(0x1A07C84B0);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_1A07C85A4(uint64_t a1, uint64_t a2)
{
  uint64_t v11 = *MEMORY[0x1E4F143B8];
  os_signpost_id_t v4 = +[IMAttachmentBlastdoor logger];
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v5 = *(void *)(a1 + 32);
    int v7 = 138412546;
    uint64_t v8 = a2;
    __int16 v9 = 2112;
    uint64_t v10 = v5;
    _os_log_impl(&dword_1A0772000, v4, OS_LOG_TYPE_DEFAULT, "Blastdoor audio preview response received: %@ for sourceURL: %@", (uint8_t *)&v7, 0x16u);
  }
  return (*(uint64_t (**)(void))(*(void *)(a1 + 40) + 16))();
}

uint64_t sub_1A07C899C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

uint64_t sub_1A07C89AC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

uint64_t sub_1A07C89BC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

uint64_t sub_1A07C8B90(uint64_t a1, uint64_t a2)
{
  uint64_t v8 = *MEMORY[0x1E4F143B8];
  os_signpost_id_t v4 = +[IMAttachmentBlastdoor logger];
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    int v6 = 138412290;
    uint64_t v7 = a2;
    _os_log_impl(&dword_1A0772000, v4, OS_LOG_TYPE_DEFAULT, "Blastdoor response %@ received", (uint8_t *)&v6, 0xCu);
  }
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_1A07C8FA4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, __int16 buf)
{
  if (a2 == 1)
  {
    objc_begin_catch(exception_object);
    uint64_t v19 = [*(id *)(v18 + 304) logger];
    if (os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT))
    {
      long long buf = 0;
      _os_log_impl(&dword_1A0772000, v19, OS_LOG_TYPE_DEFAULT, "Failed generating animated image preview through BlastDoor", (uint8_t *)&buf, 2u);
    }
    uint64_t v20 = [objc_alloc(MEMORY[0x1E4F28C58]) initWithDomain:@"__kIMCoreAttachmentBlastdoorErrorDomain" code:13302 userInfo:0];
    (*(void (**)(uint64_t, void, uint64_t, double, double))(v17 + 16))(v17, 0, v20, *MEMORY[0x1E4F1DB30], *(double *)(MEMORY[0x1E4F1DB30] + 8));
    objc_end_catch();
    JUMPOUT(0x1A07C8F64);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1A07C906C(uint64_t a1, int a2, void *a3, uint64_t a4, double a5, double a6)
{
  uint64_t v21 = *MEMORY[0x1E4F143B8];
  uint64_t v12 = +[IMAttachmentBlastdoor logger];
  if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
  {
    uint32_t v13 = @"NO";
    *(_DWORD *)uint64_t v16 = 138412802;
    if (a2) {
      uint32_t v13 = @"YES";
    }
    *(void *)&void v16[4] = v13;
    __int16 v17 = 2112;
    uint64_t v18 = a3;
    __int16 v19 = 2112;
    uint64_t v20 = a4;
    _os_log_impl(&dword_1A0772000, v12, OS_LOG_TYPE_DEFAULT, "BlastDoor animated image response %@ with UTType %@ received %@", v16, 0x20u);
  }
  if (a2 && [a3 length])
  {
    id v14 = objc_alloc_init(MEMORY[0x1E4F1CA60]);
    [v14 setValue:a3 forKey:@"uti_type"];
    objc_msgSend(v14, "setValue:forKey:", objc_msgSend(NSNumber, "numberWithBool:", objc_msgSend(*(id *)(a1 + 32), "isFromMe")), @"is_from_me");
    objc_msgSend(v14, "setValue:forKey:", objc_msgSend(NSNumber, "numberWithBool:", objc_msgSend(*(id *)(a1 + 32), "isTrustedSender")), @"is_trusted_sender");
    objc_msgSend(v14, "setValue:forKey:", objc_msgSend(*(id *)(a1 + 32), "serviceName"), @"service");
    [+[IMMetricsCollector sharedInstance] trackEvent:@"com.apple.Messages.IMMetricsCollectorEventImagePreviewGenerationSuccess" withDictionary:v14];
  }
  else
  {
    [+[IMMetricsCollector sharedInstance] trackEvent:@"com.apple.Messages.IMMetricsCollectorEventImagePreviewGenerationFailure"];
  }
  return (*(uint64_t (**)(double, double))(*(void *)(a1 + 40) + 16))(a5, a6);
}

void sub_1A07C9584(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, __int16 buf)
{
  if (a2 == 1)
  {
    objc_begin_catch(exception_object);
    __int16 v19 = [*(id *)(v18 + 304) logger];
    if (os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT))
    {
      long long buf = 0;
      _os_log_impl(&dword_1A0772000, v19, OS_LOG_TYPE_DEFAULT, "Failed getting animated image metadata through BlastDoor", (uint8_t *)&buf, 2u);
    }
    (*(void (**)(uint64_t, void, uint64_t))(v17 + 16))(v17, 0, [objc_alloc(MEMORY[0x1E4F28C58]) initWithDomain:@"__kIMCoreAttachmentBlastdoorErrorDomain" code:13302 userInfo:0]);
    objc_end_catch();
    JUMPOUT(0x1A07C954CLL);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1A07C9640(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v12 = *MEMORY[0x1E4F143B8];
  int v6 = +[IMAttachmentBlastdoor logger];
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
  {
    int v8 = 138412546;
    uint64_t v9 = a2;
    __int16 v10 = 2112;
    uint64_t v11 = a3;
    _os_log_impl(&dword_1A0772000, v6, OS_LOG_TYPE_DEFAULT, "BlastDoor animated image metadata response %@ received %@", (uint8_t *)&v8, 0x16u);
  }
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_1A07C9A34(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, __int16 buf)
{
  if (a2 == 1)
  {
    objc_begin_catch(exception_object);
    __int16 v19 = [*(id *)(v18 + 304) logger];
    if (os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT))
    {
      long long buf = 0;
      _os_log_impl(&dword_1A0772000, v19, OS_LOG_TYPE_DEFAULT, "Failed generating animated image preview through BlastDoor", (uint8_t *)&buf, 2u);
    }
    (*(void (**)(uint64_t, void, uint64_t))(v17 + 16))(v17, 0, [objc_alloc(MEMORY[0x1E4F28C58]) initWithDomain:@"__kIMCoreAttachmentBlastdoorErrorDomain" code:13302 userInfo:0]);
    objc_end_catch();
    JUMPOUT(0x1A07C99F8);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1A07C9AF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v12 = *MEMORY[0x1E4F143B8];
  int v6 = +[IMAttachmentBlastdoor logger];
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
  {
    int v8 = 138412546;
    uint64_t v9 = a2;
    __int16 v10 = 2112;
    uint64_t v11 = a3;
    _os_log_impl(&dword_1A0772000, v6, OS_LOG_TYPE_DEFAULT, "BlastDoor animated image response %@ received %@", (uint8_t *)&v8, 0x16u);
  }
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_1A07C9ED0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, __int16 buf)
{
  if (a2 == 1)
  {
    objc_begin_catch(exception_object);
    __int16 v19 = [*(id *)(v18 + 304) logger];
    if (os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT))
    {
      long long buf = 0;
      _os_log_impl(&dword_1A0772000, v19, OS_LOG_TYPE_DEFAULT, "Failed getting emoji image metadata through BlastDoor", (uint8_t *)&buf, 2u);
    }
    (*(void (**)(uint64_t, void, uint64_t))(v17 + 16))(v17, 0, [objc_alloc(MEMORY[0x1E4F28C58]) initWithDomain:@"__kIMCoreAttachmentBlastdoorErrorDomain" code:13302 userInfo:0]);
    objc_end_catch();
    JUMPOUT(0x1A07C9E98);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1A07C9F84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v12 = *MEMORY[0x1E4F143B8];
  int v6 = +[IMAttachmentBlastdoor logger];
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
  {
    int v8 = 138412546;
    uint64_t v9 = a2;
    __int16 v10 = 2112;
    uint64_t v11 = a3;
    _os_log_impl(&dword_1A0772000, v6, OS_LOG_TYPE_DEFAULT, "BlastDoor emoji image metadata response %@ received %@", (uint8_t *)&v8, 0x16u);
  }
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_1A07CA284(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, __int16 buf)
{
  if (a2 == 1)
  {
    objc_begin_catch(exception_object);
    __int16 v19 = [*(id *)(v18 + 304) logger];
    if (os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT))
    {
      long long buf = 0;
      _os_log_impl(&dword_1A0772000, v19, OS_LOG_TYPE_DEFAULT, "Failed generating emoji image through BlastDoor", (uint8_t *)&buf, 2u);
    }
    (*(void (**)(uint64_t, void, uint64_t))(v17 + 16))(v17, 0, [objc_alloc(MEMORY[0x1E4F28C58]) initWithDomain:@"__kIMCoreAttachmentBlastdoorErrorDomain" code:13302 userInfo:0]);
    objc_end_catch();
    JUMPOUT(0x1A07CA248);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1A07CA338(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v12 = *MEMORY[0x1E4F143B8];
  int v6 = +[IMAttachmentBlastdoor logger];
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
  {
    int v8 = 138412546;
    uint64_t v9 = a2;
    __int16 v10 = 2112;
    uint64_t v11 = a3;
    _os_log_impl(&dword_1A0772000, v6, OS_LOG_TYPE_DEFAULT, "BlastDoor emoji image response %@ received %@", (uint8_t *)&v8, 0x16u);
  }
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

uint64_t sub_1A07CA464()
{
  uint64_t v0 = objc_alloc_init(IMLogDump);
  uint64_t v1 = qword_1EB4A6640;
  qword_1EB4A6640 = (uint64_t)v0;

  return MEMORY[0x1F41817F8](v0, v1);
}

void sub_1A07CABBC(void *a1, void *a2)
{
  uint64_t v18 = *MEMORY[0x1E4F143B8];
  id v3 = a2;
  os_signpost_id_t v4 = [MEMORY[0x1E4F28CB8] defaultManager];
  uint64_t v5 = [v4 fileExistsAtPath:a1[4]];

  if (v5)
  {
    int v6 = [MEMORY[0x1E4F28CB8] defaultManager];
    uint64_t v7 = a1[5];
    id v15 = 0;
    char v8 = [v6 removeItemAtPath:v7 error:&v15];
    id v9 = v15;
    if ((v8 & 1) == 0 && IMOSLoggingEnabled())
    {
      __int16 v10 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
      {
        uint64_t v11 = a1[5];
        *(_DWORD *)long long buf = 138412290;
        uint64_t v17 = v11;
        _os_log_impl(&dword_1A0772000, v10, OS_LOG_TYPE_INFO, "Deleting file at path %@ failed", buf, 0xCu);
      }
    }
  }
  else if (IMOSLoggingEnabled())
  {
    uint64_t v12 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v12, OS_LOG_TYPE_INFO))
    {
      uint64_t v13 = a1[5];
      *(_DWORD *)long long buf = 138412290;
      uint64_t v17 = v13;
      _os_log_impl(&dword_1A0772000, v12, OS_LOG_TYPE_INFO, "Compressing file at path %@ failed", buf, 0xCu);
    }
  }
  uint64_t v14 = a1[6];
  if (v14) {
    (*(void (**)(uint64_t, uint64_t))(v14 + 16))(v14, v5);
  }
}

void sub_1A07CB458(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  block[0] = MEMORY[0x1E4F143A8];
  block[1] = 3221225472;
  block[2] = sub_1A07CB530;
  block[3] = &unk_1E5A10DC8;
  id v10 = v5;
  id v11 = v6;
  id v12 = *(id *)(a1 + 32);
  id v7 = v6;
  id v8 = v5;
  dispatch_async(MEMORY[0x1E4F14428], block);
}

uint64_t sub_1A07CB530(void *a1)
{
  uint64_t v10 = *MEMORY[0x1E4F143B8];
  if (IMOSLoggingEnabled())
  {
    char v2 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
    {
      uint64_t v3 = a1[4];
      uint64_t v4 = a1[5];
      int v6 = 138412546;
      uint64_t v7 = v3;
      __int16 v8 = 2112;
      uint64_t v9 = v4;
      _os_log_impl(&dword_1A0772000, v2, OS_LOG_TYPE_INFO, "Dispatching sync completion back onto main queue: outPath %@, error %@", (uint8_t *)&v6, 0x16u);
    }
  }
  uint64_t result = a1[6];
  if (result) {
    return (*(uint64_t (**)(uint64_t, void, void))(result + 16))(result, a1[4], a1[5]);
  }
  return result;
}

void sub_1A07CB6F4(uint64_t a1)
{
  uint64_t v35 = *MEMORY[0x1E4F143B8];
  [*(id *)(a1 + 32) dumpMOCLoggingMetaData];
  [*(id *)(a1 + 32) printIfWeAreInTheMiddleOfASync];
  [*(id *)(a1 + 32) clearSyncStats];
  if (IMOSLoggingEnabled())
  {
    char v2 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
    {
      uint64_t v4 = *(void **)(a1 + 40);
      uint64_t v3 = *(void **)(a1 + 48);
      id v5 = [NSNumber numberWithInt:*(unsigned int *)(a1 + 72)];
      uint64_t v6 = *(void *)(a1 + 56);
      *(_DWORD *)long long buf = 138413058;
      id v28 = v4;
      __int16 v29 = 2112;
      id v30 = v3;
      __int16 v31 = 2112;
      long long v32 = v5;
      __int16 v33 = 2112;
      uint64_t v34 = v6;
      _os_log_impl(&dword_1A0772000, v2, OS_LOG_TYPE_INFO, "Dispatching on logDumpQueue: made it to log dump folderPath %@, fileName %@, hours %@, predicate %@", buf, 0x2Au);
    }
  }
  uint64_t v7 = [*(id *)(a1 + 48) lastPathComponent];
  __int16 v8 = *(void **)(a1 + 32);
  uint64_t v9 = *(void *)(a1 + 40);
  uint64_t v10 = *(void *)(a1 + 56);
  id v24 = 0;
  char v11 = [v8 _checkArgumentValidity:v9 withFileName:v7 withPredicate:v10 withError:&v24];
  id v12 = v24;
  if (v11)
  {
    uint64_t v13 = (void *)MEMORY[0x1E4FBA978];
    v25[0] = @"compress";
    v25[1] = @"disableUIfeedback";
    v26[0] = MEMORY[0x1E4F1CC38];
    v26[1] = MEMORY[0x1E4F1CC28];
    v25[2] = @"baseDirectory";
    v25[3] = @"archiveName";
    v26[2] = *(void *)(a1 + 40);
    v26[3] = v7;
    uint64_t v14 = [MEMORY[0x1E4F1C9E8] dictionaryWithObjects:v26 forKeys:v25 count:4];
    id v23 = 0;
    id v15 = [v13 sysdiagnoseWithMetadata:v14 withError:&v23];
    id v16 = v23;

    if (IMOSLoggingEnabled())
    {
      uint64_t v17 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v17, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)long long buf = 138412546;
        id v28 = v15;
        __int16 v29 = 2112;
        id v30 = v16;
        _os_log_impl(&dword_1A0772000, v17, OS_LOG_TYPE_INFO, "Finished dumping sysdianose to %@ with Error %@", buf, 0x16u);
      }
    }
    uint64_t v18 = [MEMORY[0x1E4F28CB8] defaultManager];
    char v19 = [v18 fileExistsAtPath:v15];

    if (v19)
    {
      (*(void (**)(void))(*(void *)(a1 + 64) + 16))();
    }
    else
    {
      if (IMOSLoggingEnabled())
      {
        uint64_t v20 = OSLogHandleForIMFoundationCategory();
        if (os_log_type_enabled(v20, OS_LOG_TYPE_INFO))
        {
          *(_DWORD *)long long buf = 138412290;
          id v28 = v15;
          _os_log_impl(&dword_1A0772000, v20, OS_LOG_TYPE_INFO, "Log dump failed, file was not saved at path %@", buf, 0xCu);
        }
      }
      uint64_t v21 = *(void *)(a1 + 64);
      uint64_t v22 = [MEMORY[0x1E4F28C58] errorWithDomain:@"IMLogDumpErrorDomain" code:1 userInfo:0];
      (*(void (**)(uint64_t, void, void *))(v21 + 16))(v21, 0, v22);
    }
  }
  else
  {
    (*(void (**)(void))(*(void *)(a1 + 64) + 16))();
  }
}

void sub_1A07CC1D4(_Unwind_Exception *a1, int a2)
{
  if (a2 == 1)
  {
    objc_begin_catch(a1);
    objc_end_catch();
    JUMPOUT(0x1A07CC1A0);
  }
  _Unwind_Resume(a1);
}

void sub_1A07CC6E4(uint64_t a1, void *a2, void *a3)
{
  uint64_t v14 = *MEMORY[0x1E4F143B8];
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = [*(id *)(a1 + 32) _dictionaryForDayKey:v5];
  if (IMOSLoggingEnabled())
  {
    __int16 v8 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
    {
      int v12 = 138412290;
      id v13 = v7;
      _os_log_impl(&dword_1A0772000, v8, OS_LOG_TYPE_INFO, "Day Dictionary %@", (uint8_t *)&v12, 0xCu);
    }
  }
  if ([v7 count])
  {
    uint64_t v10 = *(void **)(a1 + 32);
    uint64_t v9 = a1 + 32;
    [v10 _calculateConnectedMinutesForDateKey:@"LastConnectedToPowerWifiDate" durationKey:@"PowerWifiTotalDuration" daysDictionary:v7 totalDurationDictionary:*(void *)(v9 + 8) totalDurationKey:@"totalPowerWifi"];
    [*(id *)v9 _calculateConnectedMinutesForDateKey:@"PowerLastConnectedDate" durationKey:@"PowerTotalDuration" daysDictionary:v7 totalDurationDictionary:*(void *)(v9 + 8) totalDurationKey:@"totalPower"];
    [*(id *)v9 _calculateConnectedMinutesForDateKey:@"WifiLastConnectedDate" durationKey:@"WifiTotalDuration" daysDictionary:v7 totalDurationDictionary:*(void *)(v9 + 8) totalDurationKey:@"totalWifi"];
  }
  else if (IMOSLoggingEnabled())
  {
    char v11 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
    {
      int v12 = 138412290;
      id v13 = v5;
      _os_log_impl(&dword_1A0772000, v11, OS_LOG_TYPE_INFO, "We don't have a dictionary for key %@", (uint8_t *)&v12, 0xCu);
    }
  }
}

void sub_1A07CDD7C()
{
  CFStringRef v0 = (const __CFString *)MGGetStringAnswer();
  if (v0)
  {
    CFStringRef v1 = v0;
    byte_1E94FF020 = CFEqual(v0, @"CH");
    CFRelease(v1);
  }
  else
  {
    byte_1E94FF020 = 0;
  }
}

uint64_t sub_1A07CDE38()
{
  if (IMGetDomainBoolForKey()) {
    uint64_t result = 1;
  }
  else {
    uint64_t result = MGGetBoolAnswer();
  }
  byte_1E94FF078 = result;
  return result;
}

void sub_1A07CDEC4()
{
  CFStringRef v0 = (const __CFString *)MGGetStringAnswer();
  if (v0)
  {
    CFStringRef v1 = v0;
    byte_1E94FF4C8 = CFEqual(v0, @"HN");
    CFRelease(v1);
  }
  else
  {
    byte_1E94FF4C8 = 0;
  }
}

uint64_t IMSupportsASTC()
{
  return MEMORY[0x1F4181798](IMDeviceUtilities, sel_IMSupportsASTC);
}

uint64_t IMDeviceIsGreenTea()
{
  return MEMORY[0x1F4181798](IMDeviceUtilities, sel_IMDeviceIsGreenTea);
}

uint64_t sub_1A07CEBF0()
{
  id v0 = objc_alloc_init((Class)objc_opt_class());
  uint64_t v1 = qword_1EB4A6648;
  qword_1EB4A6648 = (uint64_t)v0;

  return MEMORY[0x1F41817F8](v0, v1);
}

void sub_1A07D0430(_Unwind_Exception *a1, int a2)
{
  if (a2 == 1)
  {
    objc_begin_catch(a1);
    objc_end_catch();
    JUMPOUT(0x1A07D02DCLL);
  }
  _Unwind_Resume(a1);
}

void *sub_1A07D1658()
{
  uint64_t result = (void *)MEMORY[0x1A6227920]("IOServiceMatching", @"IOKit");
  off_1EB4A5D00 = result;
  return result;
}

void *sub_1A07D1688()
{
  uint64_t result = (void *)MEMORY[0x1A6227920]("IOServiceGetMatchingService", @"IOKit");
  off_1EB4A5D10 = result;
  return result;
}

void *sub_1A07D16B8()
{
  uint64_t result = (void *)MEMORY[0x1A6227920]("IORegistryEntryCreateCFProperty", @"IOKit");
  off_1EB4A5D20 = result;
  return result;
}

void *sub_1A07D16E8()
{
  uint64_t result = (void *)MEMORY[0x1A6227920]("IOObjectRelease", @"IOKit");
  off_1EB4A5D30 = result;
  return result;
}

void sub_1A07D1718()
{
  id v0 = (int *)MEMORY[0x1A6227920]("kIOMasterPortDefault", @"IOKit");
  if (v0)
  {
    byte_1EB4A5D40 = 1;
    dword_1E94FF05C = *v0;
  }
  else if (IMOSLoggingEnabled())
  {
    uint64_t v1 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v1, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)char v2 = 0;
      _os_log_impl(&dword_1A0772000, v1, OS_LOG_TYPE_INFO, "Failed to load symbol for weaklinked kIOMasterPortDefault", v2, 2u);
    }
  }
}

id IMStringFromChatRepairHistory(uint64_t a1)
{
  char v2 = objc_msgSend(objc_alloc(MEMORY[0x1E4F28E78]), "initWithString:", @"(");
  sub_1A077CA94(1, a1, @"Repaired GUID", v2);
  sub_1A077CA94(2, a1, @"Repaired Participant For Chat ID Handle ID Mismatch", v2);
  sub_1A077CA94(4, a1, @"Repaired Blank Service Name", v2);
  [v2 appendString:@""]);

  return v2;
}

void sub_1A07D1DAC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,char a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31)
{
  _Block_object_dispose(&a19, 8);
  _Block_object_dispose(&a25, 8);
  _Block_object_dispose(&a31, 8);
  _Block_object_dispose((const void *)(v31 - 128), 8);
  _Unwind_Resume(a1);
}

void sub_1A07D1DEC(void *a1)
{
  char v2 = CEMEmojiTokenGetString();
  uint64_t v3 = *(void **)(*(void *)(a1[4] + 8) + 40);
  id v22 = v2;
  if (v3)
  {
    [v3 appendString:v2];
  }
  else
  {
    uint64_t v4 = [v2 mutableCopy];
    uint64_t v5 = *(void *)(a1[4] + 8);
    id v6 = *(void **)(v5 + 40);
    *(void *)(v5 + 40) = v4;
  }
  uint64_t v7 = (void *)CEMEmojiTokenCopyName();
  if (v7)
  {
    __int16 v8 = *(void **)(*(void *)(a1[5] + 8) + 40);
    if (v8)
    {
      [v8 appendFormat:@" %@", v7];
    }
    else
    {
      uint64_t v9 = [v7 mutableCopy];
      uint64_t v10 = *(void *)(a1[5] + 8);
      char v11 = *(void **)(v10 + 40);
      *(void *)(v10 + 40) = v9;
    }
  }
  int v12 = (void *)CEMEmojiTokenCopyName();
  if (v12)
  {
    id v13 = *(void **)(*(void *)(a1[6] + 8) + 40);
    if (v13)
    {
      [v13 appendFormat:@" %@", v12];
    }
    else
    {
      uint64_t v14 = [v12 mutableCopy];
      uint64_t v15 = *(void *)(a1[6] + 8);
      id v16 = *(void **)(v15 + 40);
      *(void *)(v15 + 40) = v14;
    }
  }
  uint64_t v17 = (void *)CEMEmojiTokenCopyName();
  if (v17)
  {
    uint64_t v18 = *(void **)(*(void *)(a1[7] + 8) + 40);
    if (v18)
    {
      [v18 appendFormat:@" %@", v17];
    }
    else
    {
      uint64_t v19 = [v17 mutableCopy];
      uint64_t v20 = *(void *)(a1[7] + 8);
      uint64_t v21 = *(void **)(v20 + 40);
      *(void *)(v20 + 40) = v19;
    }
  }
}

BOOL sub_1A07D2464()
{
  return CEMStringContainsEmoji() != 0;
}

uint64_t sub_1A07D2484(void *a1, const char *a2)
{
  return [a1 hasPrefix:@"ESID"];
}

id sub_1A07D2490(void *a1)
{
  id v1 = a1;
  if (objc_msgSend(v1, "__im_isEmojiStickerID"))
  {
    char v2 = [v1 stringByReplacingOccurrencesOfString:@"ESID" withString:&stru_1EF2CAD28];
    uint64_t v3 = [v2 stringByReplacingOccurrencesOfString:@"-sticker.png" withString:&stru_1EF2CAD28];

    uint64_t v4 = [v3 stringByReplacingOccurrencesOfString:@"-" withString:@"%"];
    uint64_t v5 = [v4 stringByRemovingPercentEncoding];

    id v1 = (id)v5;
  }
  if (objc_msgSend(v1, "__im_hasEmoji"))
  {
    id v6 = [MEMORY[0x1E4F1CA20] currentLocale];
    [v6 localeIdentifier];
    CEMCreateEmojiLocaleData();

    uint64_t v7 = [MEMORY[0x1E4F28E78] string];
    [v1 length];
    id v8 = v7;
    CEMEnumerateEmojiTokensInStringWithLocaleAndBlock();
  }
  else
  {
    id v8 = 0;
  }

  return v8;
}

uint64_t sub_1A07D2628(uint64_t a1)
{
  id v1 = *(void **)(a1 + 32);
  uint64_t String = CEMEmojiTokenGetString();

  return [v1 appendString:String];
}

id sub_1A07D2668(void *a1)
{
  if (objc_msgSend(a1, "__im_isEmojiStickerID"))
  {
    id v2 = a1;
  }
  else if (objc_msgSend(a1, "__im_hasEmoji"))
  {
    uint64_t v3 = objc_msgSend(a1, "__im_emojiString");
    uint64_t v4 = [MEMORY[0x1E4F28B88] URLPathAllowedCharacterSet];
    uint64_t v5 = [v3 stringByAddingPercentEncodingWithAllowedCharacters:v4];
    id v6 = [v5 stringByReplacingOccurrencesOfString:@"%" withString:@"-"];

    id v2 = [NSString stringWithFormat:@"%@%@%@", @"ESID", v6, @"-sticker.png"];
  }
  else
  {
    id v2 = 0;
  }

  return v2;
}

id sub_1A07D276C(void *a1)
{
  v9[1] = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  id v2 = (void *)MEMORY[0x1A6228190]();
  if (objc_opt_respondsToSelector())
  {
    uint64_t v3 = [v1 stateDictionaryForDiagnosticsRequest];
  }
  else
  {
    id v8 = @"debugDescription";
    uint64_t v4 = [v1 debugDescription];
    uint64_t v5 = (void *)v4;
    id v6 = @"nil";
    if (v4) {
      id v6 = (__CFString *)v4;
    }
    v9[0] = v6;
    uint64_t v3 = [MEMORY[0x1E4F1C9E8] dictionaryWithObjects:v9 forKeys:&v8 count:1];
  }

  return v3;
}

_DWORD *sub_1A07D2870(void *a1, void *a2)
{
  uint64_t v27 = *MEMORY[0x1E4F143B8];
  id v3 = a1;
  id v4 = a2;
  id v20 = 0;
  uint64_t v5 = [MEMORY[0x1E4F28F98] dataWithPropertyList:v4 format:200 options:0 error:&v20];
  id v6 = v20;
  if (!v5)
  {
    if (IMOSLoggingEnabled())
    {
      uint64_t v10 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)long long buf = 138412546;
        id v22 = v3;
        __int16 v23 = 2112;
        size_t v24 = (size_t)v6;
        _os_log_impl(&dword_1A0772000, v10, OS_LOG_TYPE_INFO, "STATE CAPTURE FAILURE! Unable to serialize state dictionary for %@ due to error: %@", buf, 0x16u);
      }
    }
    goto LABEL_11;
  }
  size_t v7 = [v5 length];
  size_t v8 = v7 + 200;
  if (v7 + 200 > 0x8000)
  {
    if (IMOSLoggingEnabled())
    {
      uint64_t v9 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)long long buf = 138412802;
        id v22 = v3;
        __int16 v23 = 2048;
        size_t v24 = v8;
        __int16 v25 = 2048;
        uint64_t v26 = 0x8000;
        _os_log_impl(&dword_1A0772000, v9, OS_LOG_TYPE_INFO, "STATE CAPTURE FAILURE! Serialized dictionary is too large for %@, is %zu, limit %zu", buf, 0x20u);
      }
    }
LABEL_11:
    char v11 = 0;
    goto LABEL_12;
  }
  id v13 = malloc_type_calloc(1uLL, v8, 0xC73C64D6uLL);
  char v11 = v13;
  if (v13)
  {
    *id v13 = 1;
    v13[1] = v7;
    memcpy(v13 + 50, (const void *)[v5 bytes], v7);
    if (v3)
    {
      uint64_t v14 = [v3 dataUsingEncoding:4];
      uint64_t v15 = v14;
      if (v14)
      {
        id v16 = v14;
        uint64_t v17 = (const void *)[v16 bytes];
        unint64_t v18 = [v16 length];
        if (v18 >= 0x3F) {
          size_t v19 = 63;
        }
        else {
          size_t v19 = v18;
        }
        memcpy(v11 + 34, v17, v19);
      }
    }
  }
LABEL_12:

  return v11;
}

void sub_1A07D2BB8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1A07D2C7C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1A07D2D8C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  objc_sync_exit(v14);
  _Unwind_Resume(a1);
}

void sub_1A07D2DB8(uint64_t a1, uint64_t a2, void *a3)
{
  id v3 = (id *)(a1 + 32);
  id v4 = a3;
  id WeakRetained = objc_loadWeakRetained(v3);
  [WeakRetained eventListenerDidFinish:v4];
}

void sub_1A07D2F8C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1A07D30B4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1A07D31EC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1A07D328C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1A07D331C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1A07D33C8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1A07D3474(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t IMExtensionPayloadUnarchivingClasses()
{
  v2[12] = *MEMORY[0x1E4F143B8];
  id v0 = (void *)MEMORY[0x1E4F1CAD0];
  v2[0] = objc_opt_class();
  v2[1] = objc_opt_class();
  v2[2] = objc_opt_class();
  v2[3] = objc_opt_class();
  v2[4] = objc_opt_class();
  v2[5] = objc_opt_class();
  v2[6] = objc_opt_class();
  v2[7] = objc_opt_class();
  void v2[8] = objc_opt_class();
  void v2[9] = objc_opt_class();
  v2[10] = objc_opt_class();
  v2[11] = objc_opt_class();
  return objc_msgSend(v0, "setWithArray:", objc_msgSend(MEMORY[0x1E4F1C978], "arrayWithObjects:count:", v2, 12));
}

uint64_t IMBalloonExtensionIDWithTeamAndSuffix(uint64_t a1, uint64_t a2)
{
  if (!a1 || !a2) {
    return 0;
  }
  id v3 = (void *)[@"com.apple.messages.MSMessageExtensionBalloonPlugin" stringByAppendingFormat:@":%@:", a1];

  return [v3 stringByAppendingString:a2];
}

uint64_t IMBalloonBundleIDFromExtensionID(void *a1)
{
  id v1 = (void *)[a1 componentsSeparatedByString:@":"];
  if ([v1 count] == 3)
  {
    uint64_t v2 = 2;
  }
  else
  {
    if ([v1 count] != 1) {
      return 0;
    }
    uint64_t v2 = 0;
  }

  return [v1 objectAtIndexedSubscript:v2];
}

uint64_t IMMacCatalystiMessageAppPrototype()
{
  return IMGetCachedDomainValueForKey();
}

uint64_t IMBalloonPluginRequiredCapabilitiesWithPayloadDictionary(void *a1)
{
  v8[2] = *MEMORY[0x1E4F143B8];
  uint64_t v7 = 0;
  uint64_t v1 = [a1 objectForKeyedSubscript:@"requiredCapabilities"];
  uint64_t v2 = (void *)[objc_alloc(MEMORY[0x1E4F28DC0]) initForReadingFromData:v1 error:&v7];
  [v2 _enableStrictSecureDecodingMode];
  id v3 = (void *)MEMORY[0x1E4F1CAD0];
  v8[0] = objc_opt_class();
  v8[1] = objc_opt_class();
  uint64_t v4 = objc_msgSend(v3, "setWithArray:", objc_msgSend(MEMORY[0x1E4F1C978], "arrayWithObjects:count:", v8, 2));
  uint64_t v5 = [v2 decodeObjectOfClasses:v4 forKey:*MEMORY[0x1E4F284E8]];

  if (v7 || (objc_opt_class(), (objc_opt_isKindOfClass() & 1) == 0)) {
    _IMWarn();
  }
  return v5;
}

uint64_t IMBalloonPluginRequiredCapabilitiesWithMessageData(uint64_t a1)
{
  uint64_t v1 = (void *)sub_1A07D3890(a1);

  return IMBalloonPluginRequiredCapabilitiesWithPayloadDictionary(v1);
}

uint64_t sub_1A07D3890(uint64_t a1)
{
  uint64_t v2 = IMExtensionPayloadUnarchivingClasses();
  uint64_t v6 = 0;
  id v3 = (void *)[objc_alloc(MEMORY[0x1E4F28DC0]) initForReadingFromData:a1 error:&v6];
  [v3 _enableStrictSecureDecodingMode];
  uint64_t v4 = [v3 decodeObjectOfClasses:v2 forKey:*MEMORY[0x1E4F284E8]];

  if (v6) {
    _IMWarn();
  }
  objc_opt_class();
  if (objc_opt_isKindOfClass()) {
    return v4;
  }
  else {
    return 0;
  }
}

uint64_t IMBalloonPluginFallbackLinkMetadata(uint64_t a1)
{
  uint64_t v1 = (void *)sub_1A07D3890(a1);
  if (!v1 {
    || (uint64_t v6 = 0,
  }
        uint64_t v2 = [v1 objectForKeyedSubscript:@"fallbackLinkMetadata"],
        id v3 = (void *)[objc_alloc(MEMORY[0x1E4F28DC0]) initForReadingFromData:v2 error:&v6],
        [v3 _enableStrictSecureDecodingMode],
        uint64_t v4 = [v3 decodeObjectOfClass:MEMORY[0x1A6227910](@"LPLinkMetadata", @"LinkPresentation", *MEMORY[0x1E4F284E8] forKey], v3, v6)|| !v4)
  {
    _IMWarn();
    return 0;
  }
  return v4;
}

uint64_t IMIsStickersStripInCling()
{
  if (qword_1E94FF048 != -1) {
    dispatch_once(&qword_1E94FF048, &unk_1EF2BF300);
  }
  return byte_1E94FF060;
}

__CFString *sub_1A07D3A4C()
{
  uint64_t result = (__CFString *)sub_1A07D3A98();
  if (result)
  {
    uint64_t result = (__CFString *)sub_1A07D3B68();
    if (result)
    {
      uint64_t v1 = (uint64_t (*)(void))sub_1A07D3B68();
      if (v1)
      {
        uint64_t result = (__CFString *)v1();
        byte_1E94FF060 = (char)result;
      }
      else
      {
        sub_1A09EEB7C();
        return IMStickersExtensionIdentifier();
      }
    }
  }
  return result;
}

__CFString *IMStickersExtensionIdentifier()
{
  return @"com.apple.Stickers.UserGenerated.MessagesExtension";
}

uint64_t sub_1A07D3A98()
{
  if (!qword_1E94FF040) {
    qword_1E94FF040 = _sl_dlopen();
  }
  return qword_1E94FF040;
}

uint64_t sub_1A07D3B68()
{
  uint64_t v3 = 0;
  uint64_t v4 = &v3;
  uint64_t v5 = 0x2020000000;
  uint64_t v0 = qword_1E94FF068;
  uint64_t v6 = qword_1E94FF068;
  if (!qword_1E94FF068)
  {
    v2[0] = MEMORY[0x1E4F143A8];
    v2[1] = 3221225472;
    v2[2] = sub_1A07D3CA8;
    v2[3] = &unk_1E5A10130;
    v2[4] = &v3;
    sub_1A07D3CA8((uint64_t)v2);
    uint64_t v0 = v4[3];
  }
  _Block_object_dispose(&v3, 8);
  return v0;
}

void sub_1A07D3C1C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1A07D3C34()
{
  uint64_t result = _sl_dlopen();
  qword_1E94FF040 = result;
  return result;
}

void *sub_1A07D3CA8(uint64_t a1)
{
  uint64_t v2 = (void *)sub_1A07D3A98();
  if (!v2)
  {
    uint64_t v4 = (void *)abort_report_np();
    free(v4);
  }
  uint64_t result = dlsym(v2, "AVTIsStickersStripEnabled");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = result;
  qword_1E94FF068 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t sub_1A07D5690()
{
  return 0;
}

uint64_t sub_1A07D5698()
{
  return 1;
}

uint64_t sub_1A07D56A0()
{
  return 1;
}

uint64_t sub_1A07D56A8()
{
  return 1;
}

uint64_t sub_1A07D56B0()
{
  return 1;
}

uint64_t sub_1A07D56B8()
{
  return 1;
}

uint64_t sub_1A07D56C0()
{
  return 1;
}

void sub_1A07D5B30(_Unwind_Exception *a1, int a2)
{
  if (a2 == 1)
  {
    objc_begin_catch(a1);
    objc_end_catch();
    JUMPOUT(0x1A07D5A9CLL);
  }
  _Unwind_Resume(a1);
}

void *_IMStringStrippingControlCharacters(void *a1)
{
  uint64_t v13 = *MEMORY[0x1E4F143B8];
  if (qword_1E94FF0E8 != -1) {
    dispatch_once(&qword_1E94FF0E8, &unk_1EF2BF320);
  }
  long long v10 = 0u;
  long long v11 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  uint64_t v2 = (void *)qword_1E94FF0F0;
  uint64_t v3 = [(id)qword_1E94FF0F0 countByEnumeratingWithState:&v8 objects:v12 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v9;
    do
    {
      for (uint64_t i = 0; i != v4; ++i)
      {
        if (*(void *)v9 != v5) {
          objc_enumerationMutation(v2);
        }
        a1 = (void *)[a1 stringByReplacingOccurrencesOfString:*(void *)(*((void *)&v8 + 1) + 8 * i) withString:&stru_1EF2CAD28];
      }
      uint64_t v4 = [v2 countByEnumeratingWithState:&v8 objects:v12 count:16];
    }
    while (v4);
  }
  return a1;
}

id sub_1A07D619C()
{
  v2[4] = *MEMORY[0x1E4F143B8];
  uint64_t v0 = *MEMORY[0x1E4F6C130];
  v2[0] = *MEMORY[0x1E4F6C110];
  v2[1] = v0;
  v2[2] = @"\uFFFF";
  v2[3] = @"\uFFFE";
  id result = (id)[MEMORY[0x1E4F1C978] arrayWithObjects:v2 count:4];
  qword_1E94FF0F0 = (uint64_t)result;
  return result;
}

void *IMSharedMessageSummaryInlineAttachmentAttributesArray(void *a1)
{
  uint64_t v2 = (void *)[MEMORY[0x1E4F1CA48] array];
  uint64_t v3 = [a1 length];
  if (v3)
  {
    unint64_t v4 = v3;
    uint64_t v5 = 0;
    uint64_t v6 = *MEMORY[0x1E4F6C188];
    do
    {
      uint64_t v9 = 0;
      uint64_t v10 = 0;
      uint64_t v7 = objc_msgSend(a1, "attributesAtIndex:longestEffectiveRange:inRange:", v5, &v9, v5, v4 - v5);
      if ([v7 objectForKey:v6]) {
        [v2 addObject:v7];
      }
      uint64_t v5 = v10 + v9;
    }
    while (v10 + v9 < v4);
  }
  return v2;
}

uint64_t IMSharedBalloonPreviewSummaryForMessage(void *a1)
{
  if (!objc_msgSend((id)objc_msgSend(a1, "balloonBundleID"), "length")) {
    return 0;
  }
  uint64_t v2 = [a1 getCMMState];
  if (!objc_msgSend((id)objc_msgSend(a1, "balloonBundleID"), "isEqualToString:", @"com.apple.Handwriting.HandwritingProvider"))
  {
    if (objc_msgSend((id)objc_msgSend(a1, "balloonBundleID"), "isEqualToString:", @"com.apple.DigitalTouchBalloonProvider"))
    {
      uint64_t v3 = IMSharedMessageDTSummary;
      goto LABEL_11;
    }
    if (objc_msgSend((id)objc_msgSend(a1, "balloonBundleID"), "hasPrefix:", @"com.apple.messages.MSMessageExtensionBalloonPlugin"))
    {
      unint64_t v4 = objc_alloc_init(IMDSharedUtilitiesPluginPayload);
      -[IMDSharedUtilitiesPluginPayload setData:](v4, "setData:", [a1 payloadData]);
      uint64_t v5 = IMSharedMessage3rdPartySummary;
LABEL_8:
      uint64_t v6 = [(__objc2_class *)v5 previewSummaryWithPluginPayload:v4];

      return v6;
    }
    if (v2)
    {
      uint64_t v3 = IMSharedMessagePhotosSummary;
      goto LABEL_11;
    }
    if (objc_msgSend((id)objc_msgSend(a1, "balloonBundleID"), "hasPrefix:", @"com.apple.messages.URLBalloonProvider"))
    {
      unint64_t v4 = objc_alloc_init(IMDSharedUtilitiesPluginPayload);
      -[IMDSharedUtilitiesPluginPayload setData:](v4, "setData:", [a1 payloadData]);
      -[IMDSharedUtilitiesPluginPayload setMessageGUID:](v4, "setMessageGUID:", [a1 guid]);
      -[IMDSharedUtilitiesPluginPayload setIsFromMe:](v4, "setIsFromMe:", [a1 isFromMe]);
      uint64_t v5 = IMSharedMessageRichLinkSummary;
      goto LABEL_8;
    }
    return 0;
  }
  uint64_t v3 = IMSharedMessageHandwritingSummary;
LABEL_11:

  return MEMORY[0x1F4181798](v3, sel_previewSummary);
}

id IMSharedMessageSummaryCreate(uint64_t a1, void *a2, void *a3, uint64_t a4)
{
  return IMSharedMessageSummaryCreateWithShortName(a1, a2, (uint64_t)a3, a3, a4);
}

id IMSharedMessageSummaryCreateWithShortName(uint64_t a1, void *a2, uint64_t a3, void *a4, uint64_t a5)
{
  uint64_t v60 = *MEMORY[0x1E4F143B8];
  if ([a2 wasDetonated])
  {
    uint64_t v10 = (void *)IMSharedUtilitiesFrameworkBundle();
    return (id)[v10 localizedStringForKey:@"LOCKDOWN_ATTACHMENT_BALLOON_ONE_ATTACHMENT" value:&stru_1EF2CAD28 table:@"IMSharedUtilities-Offramp"];
  }
  uint64_t v46 = a5;
  int v12 = [a2 flags];
  uint64_t v13 = (void *)[a2 expressiveSendStyleID];
  uint64_t v14 = (void *)[a2 body];
  uint64_t v15 = [a2 associatedMessageType];
  uint64_t v16 = [a2 isFromMe];
  uint64_t v17 = [a2 messageSummaryInfo];
  unint64_t v47 = (void *)[a2 fileTransferGUIDs];
  if ((a1 & 0xFFFFFFFFFFFFFFFELL) == 2)
  {
    if ([v13 isEqualToString:@"com.apple.MobileSMS.expressivesend.invisibleink"])
    {
      unint64_t v18 = objc_msgSend(NSString, "localizedStringWithFormat:", objc_msgSend((id)IMSharedUtilitiesFrameworkBundle(), "localizedStringForKey:value:table:", @"Message sent with Invisible Ink", &stru_1EF2CAD28, @"IMSharedUtilities"));
      if (v18) {
        return v18;
      }
    }
  }
  unint64_t v18 = (void *)IMSharedBalloonPreviewSummaryForMessage(a2);
  if ([v18 length]) {
    return v18;
  }
  if ((v12 & 0x1000000) == 0)
  {
    if (![v14 length]
      || (size_t v19 = (void *)[v14 string],
          [v19 rangeOfString:*MEMORY[0x1E4F6C110]] == 0x7FFFFFFFFFFFFFFFLL)
      || objc_msgSend((id)objc_msgSend(_IMStringStrippingControlCharacters(v19), "stringByTrimmingCharactersInSet:", objc_msgSend(MEMORY[0x1E4F28B88], "whitespaceAndNewlineCharacterSet")), "length"))
    {
      if ((v15 & 0xFFFFFFFFFFFFFFF8) == 0xBB8 || (v15 & 0xFFFFFFFFFFFFFFF8) == 0x7D0)
      {
        uint64_t v52 = 0;
        uint64_t v53 = 0;
        __int16 v51 = 0;
        uint64_t v49 = 0;
        uint64_t v50 = 0;
        uint64_t v48 = 0;
        id v20 = (void *)[v47 firstObject];
        if ([v20 length]) {
          (*(void (**)(uint64_t, void *, uint64_t *, uint64_t *, char *, __int16 *, uint64_t *, uint64_t *, uint64_t *))(v46 + 16))(v46, v20, &v53, &v52, (char *)&v51 + 1, &v51, &v50, &v49, &v48);
        }
        return (id)objc_msgSend((id)objc_msgSend((id)objc_msgSend(a2, "tapback"), "previewAttributedStringWithMessageSummaryInfo:isAdaptiveImageGlyphProvider:isCommSafetySensitiveProvider:adaptiveImageGlyphProvider:senderDisplayName:isFromMe:effectString:", v17, &unk_1EF2BE598, &unk_1EF2C10B8, &unk_1EF2C10D8, a3, v16, 0), "string");
      }
      else
      {
        uint64_t v27 = objc_msgSend(_IMStringStrippingControlCharacters(objc_msgSend(v14, "string")), "stringByTrimmingCharactersInSet:", objc_msgSend(MEMORY[0x1E4F28B88], "whitespaceAndNewlineCharacterSet"));
        unint64_t v18 = v27;
        if (a1 == 2 && (unint64_t)[v27 length] >= 0x1F5) {
          unint64_t v18 = (void *)[v18 substringToIndex:500];
        }
        if (![v18 length]
          && [v47 count]
          && (uint64_t v40 = [v47 objectAtIndex:0]) != 0
          && (uint64_t v52 = 0,
              uint64_t v53 = 0,
              uint64_t v50 = 0,
              LOBYTE(v49) = 0,
              LOBYTE(v48) = 0,
              (*(unsigned int (**)(uint64_t, uint64_t, uint64_t *, uint64_t *, uint64_t *, uint64_t *, uint64_t *, void, void))(v46 + 16))(v46, v40, &v53, &v52, &v49, &v48, &v50, 0, 0)))
        {
          int v41 = v48;
          unint64_t v42 = NSString;
          char v43 = (void *)IMSharedUtilitiesFrameworkBundle();
          if (v41) {
            char v44 = @"%lu Incoming Files";
          }
          else {
            char v44 = @"%lu Outgoing Files";
          }
          return (id)objc_msgSend(v42, "localizedStringWithFormat:", objc_msgSend(v43, "localizedStringForKey:value:table:", v44, &stru_1EF2CAD28, @"IMSharedUtilities"), objc_msgSend(v47, "count"));
        }
        else
        {
          if ([v18 length]) {
            return v18;
          }
          return (id)objc_msgSend(NSString, "localizedStringWithFormat:", objc_msgSend((id)IMSharedUtilitiesFrameworkBundle(), "localizedStringForKey:value:table:", @"Empty message", &stru_1EF2CAD28, @"IMSharedUtilities"), v45);
        }
      }
    }
    else
    {
      __int16 v29 = IMSharedMessageSummaryInlineAttachmentAttributesArray(v14);
      id v30 = (void *)[MEMORY[0x1E4F1CA48] array];
      uint64_t v31 = (void *)[MEMORY[0x1E4F1CA60] dictionary];
      long long v55 = 0u;
      long long v56 = 0u;
      long long v57 = 0u;
      long long v58 = 0u;
      uint64_t v32 = [v29 countByEnumeratingWithState:&v55 objects:v59 count:16];
      if (v32)
      {
        uint64_t v33 = v32;
        uint64_t v34 = *(void *)v56;
        uint64_t v35 = *MEMORY[0x1E4F6C188];
        do
        {
          for (uint64_t i = 0; i != v33; ++i)
          {
            if (*(void *)v56 != v34) {
              objc_enumerationMutation(v29);
            }
            unint64_t v37 = *(void **)(*((void *)&v55 + 1) + 8 * i);
            uint64_t v38 = [v37 objectForKey:v35];
            if (v38)
            {
              uint64_t v39 = v38;
              [v30 addObject:v38];
              [v31 setObject:v37 forKey:v39];
            }
          }
          uint64_t v33 = [v29 countByEnumeratingWithState:&v55 objects:v59 count:16];
        }
        while (v33);
      }
      v54[0] = MEMORY[0x1E4F143A8];
      v54[1] = 3221225472;
      v54[2] = sub_1A07D6B00;
      v54[3] = &unk_1E5A11850;
      v54[4] = v31;
      v54[5] = v46;
      return IMAttachmentsCreateLocalizedDescription(v30, a4, v54);
    }
  }
  if ((v12 & 0x200000) != 0)
  {
    __int16 v25 = objc_msgSend((id)objc_msgSend(a2, "body"), "attribute:atIndex:effectiveRange:", @"IMAudioTranscription", 0, 0);
    uint64_t v26 = [v25 length];
    id v22 = NSString;
    __int16 v23 = (void *)IMSharedUtilitiesFrameworkBundle();
    if (v26) {
      return (id)objc_msgSend(v22, "localizedStringWithFormat:", objc_msgSend(v23, "localizedStringForKey:value:table:", @"Audio Message Transcription", &stru_1EF2CAD28, @"IMSharedUtilities"), v25);
    }
    size_t v24 = @"Audio Message";
  }
  else
  {
    id v22 = NSString;
    __int16 v23 = (void *)IMSharedUtilitiesFrameworkBundle();
    size_t v24 = @"Video Message";
  }
  uint64_t v28 = [v23 localizedStringForKey:v24 value:&stru_1EF2CAD28 table:@"IMSharedUtilities"];

  return (id)[v22 localizedStringWithFormat:v28];
}

uint64_t sub_1A07D6B00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t *a7)
{
  uint64_t v10 = (*(uint64_t (**)(void))(*(void *)(a1 + 40) + 16))(*(void *)(a1 + 40));
  if (v10)
  {
    uint64_t v11 = [*(id *)(a1 + 32) objectForKey:a2];
    if (a7)
    {
      if (*a7) {
        *a7 = v11;
      }
    }
  }
  return v10;
}

uint64_t sub_1A07D6B78()
{
  return 0;
}

uint64_t sub_1A07D6B80()
{
  return 0;
}

uint64_t sub_1A07D6B88()
{
  return 0;
}

double IMMessageItemExpireStateExpiringDuration()
{
  uint64_t v0 = IMGetCachedDomainIntForKey();
  double result = (double)v0;
  if (!v0) {
    return 120.0;
  }
  return result;
}

double IMMessageItemExpireStateExpiredDuration()
{
  uint64_t v0 = IMGetCachedDomainIntForKey();
  double result = (double)v0;
  if (!v0) {
    return 600.0;
  }
  return result;
}

double IMMessageItemTimeIntervalSinceStartedExpiring(void *a1)
{
  id v1 = a1;
  int v2 = [v1 isFromMe];
  uint64_t v3 = [v1 time];
  unint64_t v4 = [v1 timePlayed];

  double v5 = IMMessageItemTimeIntervalSinceStartedExpiringForTimes(v2, v3, v4);
  return v5;
}

double IMMessageItemTimeIntervalSinceStartedExpiringForTimes(int a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = v6;
  if (!a1)
  {
    long long v8 = v6;
    if (!v6) {
      goto LABEL_3;
    }
LABEL_5:
    uint64_t v10 = [MEMORY[0x1E4F1C9C8] date];
    [v10 timeIntervalSinceReferenceDate];
    double v12 = v11;
    [v8 timeIntervalSinceReferenceDate];
    double v9 = v12 - v13;

    goto LABEL_6;
  }
  long long v8 = v5;
  if (v5) {
    goto LABEL_5;
  }
LABEL_3:
  double v9 = 0.0;
LABEL_6:

  return v9;
}

uint64_t IMMessageItemShouldAutomaticallySave(void *a1)
{
  uint64_t result = [a1 isExpirable];
  if (result)
  {
    return IMGetDomainBoolForKey();
  }
  return result;
}

uint64_t IMMessageCreateThreadIdentifierWithOriginatorGUID(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = (objc_class *)NSString;
  id v8 = a1;
  uint64_t v9 = [[v7 alloc] initWithFormat:@"r:%lu:%lu:%lu:%@", a2, a3, a4, v8];

  return v9;
}

uint64_t IMMessageCreateThreadIdentifierOriginatorPart(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return objc_msgSend([NSString alloc], "initWithFormat:", @"%lu:%lu:%lu", a1, a2, a3);
}

uint64_t IMMessageCreateThreadIdentifierWithComponents(void *a1, void *a2)
{
  if (!a1 || !a2) {
    return 0;
  }
  uint64_t v3 = (objc_class *)NSString;
  id v4 = a2;
  id v5 = a1;
  uint64_t v6 = [[v3 alloc] initWithFormat:@"r:%@:%@", v4, v5];

  return v6;
}

uint64_t IMMessageCreateAssociatedMessageGUIDFromThreadIdentifier(void *a1)
{
  id v1 = a1;
  int v2 = IMMessageThreadIdentifierGetOriginatorGUID(v1);
  uint64_t OriginatorMessagePart = IMMessageThreadIdentifierGetOriginatorMessagePart(v1);

  uint64_t v4 = [[NSString alloc] initWithFormat:@"p:%ld/%@", OriginatorMessagePart, v2];
  return v4;
}

id IMMessageThreadIdentifierGetOriginatorGUID(void *a1)
{
  id v1 = a1;
  int v2 = [v1 componentsSeparatedByString:@":"];
  if ([v2 count] == 5)
  {
    id v3 = [v2 objectAtIndexedSubscript:4];
  }
  else
  {
    id v3 = v1;
  }
  uint64_t v4 = v3;

  return v4;
}

uint64_t IMMessageThreadIdentifierGetOriginatorMessagePart(void *a1)
{
  id v1 = [a1 componentsSeparatedByString:@":"];
  if ([v1 count] == 5)
  {
    int v2 = [v1 objectAtIndexedSubscript:1];
    uint64_t v3 = [v2 unsignedIntValue];
  }
  else
  {
    uint64_t v3 = 0;
  }

  return v3;
}

uint64_t IMMessageThreadIdentifierGetOriginatorRange(void *a1)
{
  id v1 = [a1 componentsSeparatedByString:@":"];
  if ([v1 count] == 5)
  {
    int v2 = [v1 objectAtIndexedSubscript:2];
    int v3 = [v2 intValue];

    uint64_t v4 = [v1 objectAtIndexedSubscript:3];
    [v4 intValue];

    uint64_t v5 = v3;
  }
  else
  {
    uint64_t v5 = 0;
  }

  return v5;
}

uint64_t IMMessagePartDescriptionGetMessagePartIndex(void *a1)
{
  id v1 = [a1 componentsSeparatedByString:@":"];
  if ([v1 count] == 3)
  {
    int v2 = [v1 objectAtIndexedSubscript:0];
    uint64_t v3 = [v2 unsignedIntValue];
  }
  else
  {
    uint64_t v3 = 0;
  }

  return v3;
}

void IMMessageThreadIdentifierGetComponents(void *a1, void *a2, void *a3)
{
  id v10 = [a1 componentsSeparatedByString:@":"];
  BOOL v5 = [v10 count] == 5;
  uint64_t v6 = v10;
  if (v5)
  {
    uint64_t v7 = [v10 objectAtIndexedSubscript:1];
    id v8 = [v10 objectAtIndexedSubscript:2];
    uint64_t v9 = [v10 objectAtIndexedSubscript:3];
    if (a3)
    {
      *a3 = [NSString stringWithFormat:@"%@:%@:%@", v7, v8, v9];
    }
    if (a2)
    {
      *a2 = [v10 objectAtIndexedSubscript:4];
    }

    uint64_t v6 = v10;
  }
}

void sub_1A07D723C(void *a1, void *a2, void *a3)
{
  id v10 = [a1 componentsSeparatedByString:@":"];
  BOOL v5 = [v10 count] == 5;
  uint64_t v6 = v10;
  if (v5)
  {
    uint64_t v7 = [v10 objectAtIndexedSubscript:4];
    id v8 = [v10 objectAtIndexedSubscript:1];
    unsigned int v9 = [v8 unsignedIntValue];

    if (a3) {
      *a3 = v9;
    }
    if (a2) {
      *a2 = v7;
    }

    uint64_t v6 = v10;
  }
}

BOOL IMMessageThreadIdentifierOriginatorGUIDAndPartMatch(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = a2;
  if ([v3 length] && objc_msgSend(v4, "length"))
  {
    id v12 = 0;
    uint64_t v13 = 0x7FFFFFFFFFFFFFFFLL;
    sub_1A07D723C(v3, &v12, &v13);
    id v5 = v12;
    id v10 = 0;
    uint64_t v11 = 0x7FFFFFFFFFFFFFFFLL;
    sub_1A07D723C(v4, &v10, &v11);
    id v6 = v10;
    uint64_t v7 = v6;
    BOOL v8 = v5 && v6 && [v5 isEqualToString:v6] && v13 == v11;
  }
  else
  {
    BOOL v8 = 0;
  }

  return v8;
}

void sub_1A07D8068(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A07D8080(uint64_t a1, void *a2, uint64_t a3, unsigned char *a4)
{
  id v7 = a2;
  id v6 = [v7 transferGUID];
  if ([v6 isEqualToString:*(void *)(a1 + 32)])
  {
    *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = [v7 messagePartIndex];
    *a4 = 1;
  }
}

void sub_1A07D8224(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A07D8240(uint64_t a1, uint64_t a2, void *a3)
{
  id v6 = a3;
  uint64_t v5 = [*(id *)(a1 + 32) indexOfObject:a2];
  if (v5 != 0x7FFFFFFFFFFFFFFFLL)
  {
    [*(id *)(a1 + 32) replaceObjectAtIndex:v5 withObject:v6];
    *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = 1;
  }
}

void sub_1A07D8418(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va1, a7);
  va_start(va, a7);
  uint64_t v8 = va_arg(va1, void);
  uint64_t v10 = va_arg(va1, void);
  uint64_t v11 = va_arg(va1, void);
  uint64_t v12 = va_arg(va1, void);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

void sub_1A07D843C(uint64_t a1, void *a2, void *a3)
{
  id v11 = a2;
  id v5 = a3;
  int v6 = objc_msgSend(*(id *)(*(void *)(*(void *)(a1 + 32) + 8) + 40), "__im_containsFileTransferGUID:", v11);
  id v7 = *(void **)(*(void *)(*(void *)(a1 + 32) + 8) + 40);
  if (v6)
  {
    uint64_t v8 = objc_msgSend(v7, "__im_attributedStringByReplacingFileTransferGUID:withUpdatedTransferGUID:", v11, v5);
  }
  else
  {
    if (!objc_msgSend(v7, "__im_isRichCard")) {
      goto LABEL_6;
    }
    uint64_t v8 = objc_msgSend(*(id *)(*(void *)(*(void *)(a1 + 32) + 8) + 40), "__im_attributedStringByReplacingRichCardGUID:withUpdatedTransferGUID:", v11, v5);
  }
  uint64_t v9 = *(void *)(*(void *)(a1 + 32) + 8);
  uint64_t v10 = *(void **)(v9 + 40);
  *(void *)(v9 + 40) = v8;

  *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = 1;
LABEL_6:
}

void sub_1A07D8A34(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31,uint64_t a32,uint64_t a33,uint64_t a34,char a35)
{
}

void sub_1A07D8A68(uint64_t a1, void *a2, void *a3)
{
  id v9 = a2;
  id v5 = a3;
  if (objc_msgSend(*(id *)(*(void *)(*(void *)(a1 + 32) + 8) + 40), "__im_containsFileTransferGUID:", v9))
  {
    uint64_t v6 = objc_msgSend(*(id *)(*(void *)(*(void *)(a1 + 32) + 8) + 40), "__im_attributedStringByReplacingFileTransferGUID:withUpdatedTransferGUID:", v9, v5);
    uint64_t v7 = *(void *)(*(void *)(a1 + 32) + 8);
    uint64_t v8 = *(void **)(v7 + 40);
    *(void *)(v7 + 40) = v6;

    *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = 1;
  }
}

void sub_1A07D8C64(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  id v9 = a2;
  uint64_t v10 = [*(id *)(a1 + 32) string];
  id v11 = objc_msgSend(v10, "substringWithRange:", a3, a4);

  if ([v11 isEqualToString:*MEMORY[0x1E4F6C110]])
  {
    v14[0] = 0;
    v14[1] = 0;
    uint64_t v12 = [*(id *)(a1 + 32) attribute:*MEMORY[0x1E4F6C188] atIndex:a3 effectiveRange:v14];
    if ([v12 length])
    {
      uint64_t v13 = *(void *)(a1 + 40);
      if (v13) {
        (*(void (**)(uint64_t, void *, uint64_t, uint64_t))(v13 + 16))(v13, v12, [v9 unsignedIntegerValue], a5);
      }
    }
  }
}

void sub_1A07D8F68(void *a1, void *a2, uint64_t a3, unsigned char *a4)
{
  id v8 = a2;
  if (a3 != 0x7FFFFFFFFFFFFFFFLL && a1[6] == a3)
  {
    *(unsigned char *)(*(void *)(a1[4] + 8) + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = 1;
    id v9 = v8;
    objc_storeStrong((id *)(*(void *)(a1[5] + 8) + 40), a2);
    id v8 = v9;
    if (a4) {
      *a4 = 1;
    }
  }
}

void sub_1A07D98D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1A07D98E8(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v6[0] = MEMORY[0x1E4F143A8];
  v6[1] = 3221225472;
  _OWORD v6[2] = sub_1A07D995C;
  v6[3] = &unk_1E5A11AD0;
  void v6[4] = *(void *)(a1 + 32);
  void v6[5] = a5;
  return [a2 enumerateKeysAndObjectsUsingBlock:v6];
}

uint64_t sub_1A07D995C(uint64_t a1, void *a2)
{
  uint64_t result = [a2 isEqualToString:*MEMORY[0x1E4F6C200]];
  if (result)
  {
    id v4 = *(unsigned char **)(a1 + 40);
    *(unsigned char *)(*(void *)(*(void *)(a1 + 32) + 8) + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = 1;
    unsigned char *v4 = 1;
  }
  return result;
}

void sub_1A07DBA2C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A07DBA44(uint64_t a1, void *a2, void *a3, unsigned char *a4)
{
  id v7 = a3;
  if (IMMessagePartDescriptionGetMessagePartIndex(a2) == *(void *)(a1 + 40))
  {
    *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = [v7 unsignedIntegerValue];
    *a4 = 1;
  }
}

void sub_1A07DC39C(uint64_t a1, void *a2, void *a3)
{
  id v6 = a2;
  id v5 = a3;
  if ([*(id *)(a1 + 32) containsObject:v6]) {
    [*(id *)(a1 + 40) setObject:v5 forKeyedSubscript:v6];
  }
}

void sub_1A07DC6D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1A07DC6F0(uint64_t a1, uint64_t a2)
{
  if (a2 != -1)
  {
    uint64_t v3 = objc_msgSend(*(id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40), "__im_messageTextByRemovingMessagePartIndex:", a2);
    uint64_t v4 = *(void *)(*(void *)(a1 + 40) + 8);
    id v5 = *(void **)(v4 + 40);
    *(void *)(v4 + 40) = v3;
  }
  uint64_t v6 = *(void *)(a1 + 32);

  return MEMORY[0x1F4181798](v6, sel_addRetractedPartIndex_);
}

void sub_1A07DD8B0(uint64_t a1, void *a2, void *a3)
{
  void v14[2] = *MEMORY[0x1E4F143B8];
  id v5 = a3;
  uint64_t v6 = [a2 stringValue];
  if ([v6 length])
  {
    uint64_t v7 = [v5 rangeValue];
    uint64_t v9 = v8;
    v13[0] = @"lo";
    uint64_t v10 = [NSNumber numberWithUnsignedInteger:v7];
    v13[1] = @"le";
    v14[0] = v10;
    id v11 = [NSNumber numberWithUnsignedInteger:v9];
    v14[1] = v11;
    uint64_t v12 = [MEMORY[0x1E4F1C9E8] dictionaryWithObjects:v14 forKeys:v13 count:2];

    [*(id *)(a1 + 32) setObject:v12 forKeyedSubscript:v6];
  }
}

void sub_1A07DDA98(uint64_t a1, void *a2, void *a3)
{
  id v14 = a2;
  id v5 = a3;
  uint64_t v6 = [v5 objectForKeyedSubscript:@"lo"];
  uint64_t v7 = [v5 objectForKeyedSubscript:@"le"];

  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    objc_opt_class();
    if (objc_opt_isKindOfClass())
    {
      uint64_t v8 = [v6 unsignedIntegerValue];
      uint64_t v9 = [v7 unsignedIntegerValue];
      uint64_t v10 = objc_msgSend(MEMORY[0x1E4F29238], "valueWithRange:", v8, v9);
      uint64_t v11 = [v14 unsignedIntValue];
      uint64_t v12 = *(void **)(a1 + 32);
      uint64_t v13 = [NSNumber numberWithUnsignedInt:v11];
      [v12 setObject:v10 forKeyedSubscript:v13];
    }
  }
}

void sub_1A07DED98(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1A07DEDB4(uint64_t result, uint64_t a2)
{
  if (a2) {
    return [*(id *)(*(void *)(*(void *)(result + 32) + 8) + 40) addObject:a2];
  }
  return result;
}

void sub_1A07DF87C(_Unwind_Exception *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, long long buf)
{
  if (a2 == 1)
  {
    id v13 = objc_begin_catch(a1);
    if (IMOSLoggingEnabled())
    {
      id v14 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_INFO))
      {
        uint64_t v15 = *(void *)(v11 + v12);
        LODWORD(buf) = 138412546;
        *(void *)((char *)&buf + 4) = v15;
        WORD6(buf) = 2112;
        *(void *)((char *)&buf + 14) = v13;
        _os_log_impl(&dword_1A0772000, v14, OS_LOG_TYPE_INFO, "Exception encoding body: %@   Exception: %@", (uint8_t *)&buf, 0x16u);
      }
    }
    IMLogBacktrace();

    objc_end_catch();
    JUMPOUT(0x1A07DF834);
  }
  _Unwind_Resume(a1);
}

void sub_1A07DFD58(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, ...)
{
  va_start(va, a16);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A07DFD8C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, unsigned char *a5)
{
  id v8 = a2;
  if ([v8 length])
  {
    objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 32) + 8) + 40), a2);
    *a5 = 1;
  }
}

void sub_1A07DFE04(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, unsigned char *a5)
{
  id v7 = a2;
  if (v7)
  {
    objc_opt_class();
    if (objc_opt_isKindOfClass())
    {
      *(_DWORD *)(*(void *)(*(void *)(a1 + 32) + 8) + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = [v7 intValue];
      *a5 = 1;
    }
  }
}

void *sub_1A07E05F4()
{
  uint64_t result = (void *)MEMORY[0x1A6227920]("MarcoLoggingStringForMessageData", @"Marco");
  off_1EB4A6238 = result;
  return result;
}

void sub_1A07E0F30(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = [a2 integerValue];
  if (v7 == -1)
  {
    if (!*(unsigned char *)(a1 + 80)) {
      return;
    }
  }
  else if (![*(id *)(a1 + 32) containsIndex:v7])
  {
    return;
  }
  id v8 = *(void **)(a1 + 40);
  uint64_t v9 = [NSNumber numberWithInteger:v7];
  uint64_t v10 = [v8 objectForKey:v9];

  if ([v10 count])
  {
    v15[0] = MEMORY[0x1E4F143A8];
    v15[1] = 3221225472;
    _DWORD v15[2] = sub_1A07E110C;
    v15[3] = &unk_1E5A11C10;
    id v16 = *(id *)(a1 + 64);
    id v17 = *(id *)(a1 + 48);
    id v19 = *(id *)(a1 + 72);
    id v18 = *(id *)(a1 + 56);
    [v10 enumerateObjectsWithOptions:2 usingBlock:v15];
  }
  else
  {
    uint64_t v11 = [*(id *)(a1 + 48) attribute:*MEMORY[0x1E4F6C188] atIndex:a3 effectiveRange:0];
    if (v11)
    {
      uint64_t v12 = *(void *)(a1 + 72);
      if (v12) {
        (*(void (**)(uint64_t, void *))(v12 + 16))(v12, v11);
      }
      [*(id *)(a1 + 56) addObject:v11];
    }
    id v13 = *(void **)(a1 + 64);
    id v14 = objc_msgSend(MEMORY[0x1E4F29238], "valueWithRange:", a3, a4);
    [v13 addObject:v14];
  }
}

void sub_1A07E110C(uint64_t a1, void *a2)
{
  uint64_t v17 = *MEMORY[0x1E4F143B8];
  id v3 = a2;
  [*(id *)(a1 + 32) addObject:v3];
  uint64_t v4 = [v3 rangeValue];
  uint64_t v6 = v4;
  uint64_t v7 = v5;
  if (v4 == 0x7FFFFFFFFFFFFFFFLL || v4 + v5 > (unint64_t)[*(id *)(a1 + 40) length])
  {
    if (IMOSLoggingEnabled())
    {
      id v8 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
      {
        int v13 = 134218240;
        uint64_t v14 = v6;
        __int16 v15 = 2048;
        uint64_t v16 = v7;
        _os_log_impl(&dword_1A0772000, v8, OS_LOG_TYPE_INFO, "Range (loc: %lu, length: %lu) is outside text range", (uint8_t *)&v13, 0x16u);
      }
    }
    if (IMOSLoggingEnabled())
    {
      uint64_t v9 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
      {
        uint64_t v10 = [*(id *)(a1 + 40) length];
        int v13 = 134217984;
        uint64_t v14 = v10;
        _os_log_impl(&dword_1A0772000, v9, OS_LOG_TYPE_INFO, "Max text length: %lu", (uint8_t *)&v13, 0xCu);
      }
    }
  }
  else
  {
    uint64_t v11 = [*(id *)(a1 + 40) attribute:*MEMORY[0x1E4F6C188] atIndex:v6 effectiveRange:0];
    if (v11)
    {
      uint64_t v12 = *(void *)(a1 + 56);
      if (v12) {
        (*(void (**)(uint64_t, void *))(v12 + 16))(v12, v11);
      }
      [*(id *)(a1 + 48) addObject:v11];
    }
  }
}

uint64_t sub_1A07E1310(uint64_t a1, void *a2, void *a3)
{
  id v4 = a3;
  uint64_t v5 = [a2 rangeValue];
  unint64_t v7 = v5 + v6;
  uint64_t v8 = [v4 rangeValue];
  uint64_t v10 = v9;

  uint64_t v11 = 1;
  if (v7 >= v8 + v10) {
    uint64_t v11 = -1;
  }
  if (v7 == v8 + v10) {
    return 0;
  }
  else {
    return v11;
  }
}

uint64_t sub_1A07E1374(uint64_t a1, void *a2)
{
  uint64_t v3 = a2;
  uint64_t v4 = v3;
  if (v3)
  {
    uint64_t v6 = v3;
    uint64_t v3 = [*(id *)(a1 + 32) containsObject:v3];
    uint64_t v4 = v6;
    if ((v3 & 1) == 0)
    {
      uint64_t v3 = [*(id *)(a1 + 32) addObject:v6];
      uint64_t v4 = v6;
    }
  }

  return MEMORY[0x1F41817F8](v3, v4);
}

void sub_1A07E1B30()
{
  v4[8] = *MEMORY[0x1E4F143B8];
  uint64_t v0 = (void *)MEMORY[0x1E4F1CAD0];
  v4[0] = @"amc";
  v4[1] = @"ams";
  v4[2] = @"amb";
  v4[3] = @"amd";
  v4[4] = @"amab";
  void v4[5] = @"amsa";
  void v4[6] = @"ust";
  void v4[7] = @"hbr";
  id v1 = [MEMORY[0x1E4F1C978] arrayWithObjects:v4 count:8];
  uint64_t v2 = [v0 setWithArray:v1];
  uint64_t v3 = (void *)qword_1E94FE9F0;
  qword_1E94FE9F0 = v2;
}

void sub_1A07E2780()
{
  v4[8] = *MEMORY[0x1E4F143B8];
  uint64_t v0 = (void *)MEMORY[0x1E4F1CAD0];
  v4[0] = objc_opt_class();
  v4[1] = objc_opt_class();
  v4[2] = objc_opt_class();
  v4[3] = objc_opt_class();
  v4[4] = objc_opt_class();
  void v4[5] = objc_opt_class();
  void v4[6] = objc_opt_class();
  void v4[7] = objc_opt_class();
  id v1 = [MEMORY[0x1E4F1C978] arrayWithObjects:v4 count:8];
  uint64_t v2 = [v0 setWithArray:v1];
  uint64_t v3 = (void *)qword_1E94FF4D8;
  qword_1E94FF4D8 = v2;
}

void sub_1A07E3258(uint64_t a1)
{
  id obj = *(id *)(a1 + 32);
  objc_sync_enter(obj);
  if (!qword_1E94FF4E8)
  {
    uint64_t v2 = *(void **)(a1 + 32);
    uint64_t v3 = objc_msgSend(v2, "_createSingleton__im");
    objc_msgSend(v2, "__setSingleton__im:", v3);
  }
  objc_sync_exit(obj);
}

void sub_1A07E32DC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id obj)
{
}

void sub_1A07E3598(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id obj)
{
}

void sub_1A07E368C(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v2 = v3;
  im_dispatch_after();
}

uint64_t sub_1A07E38F8(uint64_t a1)
{
  return MEMORY[0x1F4181798](*(void *)(a1 + 32), sel__handleSIMSubscriptionsUpdate);
}

uint64_t IMSharedUtilitiesProtoCloudKitEncryptedLocationShareStatusChangeReadFrom(uint64_t a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    unint64_t v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      switch((v10 >> 3))
      {
        case 1u:
          char v17 = 0;
          unsigned int v18 = 0;
          uint64_t v19 = 0;
          *(unsigned char *)(a1 + 44) |= 4u;
          while (1)
          {
            uint64_t v20 = *v3;
            unint64_t v21 = *(void *)(a2 + v20);
            if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
              break;
            }
            char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
            *(void *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0) {
              goto LABEL_46;
            }
            v17 += 7;
            BOOL v14 = v18++ >= 9;
            if (v14)
            {
              LODWORD(v19) = 0;
              goto LABEL_48;
            }
          }
          *(unsigned char *)(a2 + *v5) = 1;
LABEL_46:
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v19) = 0;
          }
LABEL_48:
          *(_DWORD *)(a1 + 40) = v19;
          continue;
        case 2u:
          char v24 = 0;
          unsigned int v25 = 0;
          uint64_t v26 = 0;
          *(unsigned char *)(a1 + 44) |= 2u;
          while (2)
          {
            uint64_t v27 = *v3;
            unint64_t v28 = *(void *)(a2 + v27);
            if (v28 == -1 || v28 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v29 = *(unsigned char *)(*(void *)(a2 + *v7) + v28);
              *(void *)(a2 + v27) = v28 + 1;
              v26 |= (unint64_t)(v29 & 0x7F) << v24;
              if (v29 < 0)
              {
                v24 += 7;
                BOOL v14 = v25++ >= 9;
                if (v14)
                {
                  uint64_t v26 = 0;
                  goto LABEL_52;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v26 = 0;
          }
LABEL_52:
          uint64_t v39 = 16;
          goto LABEL_57;
        case 3u:
          char v30 = 0;
          unsigned int v31 = 0;
          uint64_t v26 = 0;
          *(unsigned char *)(a1 + 44) |= 1u;
          break;
        case 4u:
          uint64_t String = (void *)PBReaderReadString();

          id v36 = String;
          uint64_t v37 = 24;
          goto LABEL_44;
        case 5u:
          Data = (void *)PBReaderReadData();

          id v36 = Data;
          uint64_t v37 = 32;
LABEL_44:
          *(void *)(a1 + v37) = v36;
          continue;
        default:
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
          continue;
      }
      while (1)
      {
        uint64_t v32 = *v3;
        unint64_t v33 = *(void *)(a2 + v32);
        if (v33 == -1 || v33 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v34 = *(unsigned char *)(*(void *)(a2 + *v7) + v33);
        *(void *)(a2 + v32) = v33 + 1;
        v26 |= (unint64_t)(v34 & 0x7F) << v30;
        if ((v34 & 0x80) == 0) {
          goto LABEL_54;
        }
        v30 += 7;
        BOOL v14 = v31++ >= 9;
        if (v14)
        {
          uint64_t v26 = 0;
          goto LABEL_56;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_54:
      if (*(unsigned char *)(a2 + *v5)) {
        uint64_t v26 = 0;
      }
LABEL_56:
      uint64_t v39 = 8;
LABEL_57:
      *(void *)(a1 + v39) = v26;
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t sub_1A07E46A0(uint64_t a1)
{
  return MEMORY[0x1F4181798](*(void *)(a1 + 32), sel__processQueue);
}

uint64_t sub_1A07E4900(uint64_t a1)
{
  return MEMORY[0x1F4181798](*(void *)(a1 + 32), sel__invokeEvent_);
}

void sub_1A07E4A0C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id obj)
{
}

void sub_1A07E4A98(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1A07E4B20(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1A07E4BF0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1A07E4C04(uint64_t a1, void *a2)
{
  id v5 = a2;
  id v3 = [v5 target];
  uint64_t v4 = *(void **)(a1 + 32);

  if (v3 == v4)
  {
    [*(id *)(*(void *)(a1 + 40) + 24) removeLinkedListNode:v5];
    [v5 cancel];
    [v5 cache];
  }
}

void sub_1A07E4D24(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1A07E4D38(uint64_t a1, void *a2)
{
  id v2 = *(void **)(*(void *)(a1 + 32) + 24);
  id v3 = a2;
  [v2 removeLinkedListNode:v3];
  [v3 cancel];
  [v3 cache];
}

void sub_1A07E4FD4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id obj)
{
}

void sub_1A07E50A4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1A07E51B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  objc_sync_exit(v7);
  _Unwind_Resume(a1);
}

void sub_1A07E51D0(uint64_t a1, void *a2, unsigned char *a3)
{
  id v5 = [a2 target];
  uint64_t v6 = *(void **)(a1 + 32);

  if (v5 == v6)
  {
    *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = 1;
    *a3 = 1;
  }
}

void sub_1A07E54E8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1A07E54FC(uint64_t a1, void *a2)
{
  return [a2 setEventNotificationWithSenderBlock:*(void *)(a1 + 32)];
}

void sub_1A07E5764(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

id IMChatCanonicalIDSIDsForAddress(id result)
{
  if (!result) {
    return result;
  }
  id v1 = result;
  if (![result rangeOfString:@"tel:"] && objc_msgSend(v1, "length") != 4) {
    [v1 substringFromIndex:4];
  }
  id v2 = (void *)IMStripFormattingFromAddress();
  if (MEMORY[0x1A62278C0]())
  {
    id v3 = (void *)IDSCopyIDForPhoneNumber();
  }
  else
  {
    if (MEMORY[0x1A62278A0](v2))
    {
      uint64_t v4 = (uint64_t)v2;
    }
    else
    {
      if (![v2 hasPrefix:@"mailto:urn:biz:"])
      {
        id v3 = (void *)MEMORY[0x1A62275D0](v2);
        goto LABEL_15;
      }
      uint64_t v4 = [v2 _stripFZIDPrefix];
    }
    id v3 = (void *)MEMORY[0x1A62275B0](v4);
  }
LABEL_15:

  return v3;
}

uint64_t IMServiceNameForCanonicalIDSAddresses(void *a1)
{
  uint64_t v14 = *MEMORY[0x1E4F143B8];
  uint64_t v2 = *MEMORY[0x1E4F6AA78];
  long long v9 = 0u;
  long long v10 = 0u;
  long long v11 = 0u;
  long long v12 = 0u;
  uint64_t v3 = [a1 countByEnumeratingWithState:&v9 objects:v13 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v10;
    while (2)
    {
      for (uint64_t i = 0; i != v4; ++i)
      {
        if (*(void *)v10 != v5) {
          objc_enumerationMutation(a1);
        }
        unint64_t v7 = *(void **)(*((void *)&v9 + 1) + 8 * i);
        if (([v7 hasPrefix:@"urn:biz:"] & 1) != 0
          || [v7 hasPrefix:@"mailto:urn:biz:"])
        {
          return *MEMORY[0x1E4F6AA80];
        }
      }
      uint64_t v4 = [a1 countByEnumeratingWithState:&v9 objects:v13 count:16];
      if (v4) {
        continue;
      }
      break;
    }
  }
  return v2;
}

uint64_t sub_1A07E5C18(void *a1, const char *a2)
{
  return objc_msgSend(a1, "__imArrayByApplyingBlock:", &unk_1EF2BF3A0);
}

id sub_1A07E5C24(uint64_t a1, void *a2)
{
  return IMChatCanonicalIDSIDsForAddress(a2);
}

void sub_1A07E5F30(uint64_t a1, void *a2)
{
  uint64_t v27 = *MEMORY[0x1E4F143B8];
  uint64_t v19 = 0;
  uint64_t v20 = &v19;
  uint64_t v21 = 0x3052000000;
  char v22 = sub_1A077780C;
  __int16 v23 = sub_1A07776EC;
  uint64_t v24 = 0;
  uint64_t v24 = objc_msgSend(objc_alloc(MEMORY[0x1E4F1CA80]), "initWithCapacity:", objc_msgSend(*(id *)(a1 + 32), "count"));
  uint64_t v13 = 0;
  uint64_t v14 = &v13;
  uint64_t v15 = 0x3052000000;
  uint64_t v16 = sub_1A077780C;
  char v17 = sub_1A07776EC;
  uint64_t v18 = 0;
  uint64_t v18 = objc_msgSend(objc_alloc(MEMORY[0x1E4F1CA48]), "initWithCapacity:", objc_msgSend(*(id *)(a1 + 32), "count"));
  uint64_t v7 = 0;
  char v8 = &v7;
  uint64_t v9 = 0x3052000000;
  long long v10 = sub_1A077780C;
  long long v11 = sub_1A07776EC;
  uint64_t v12 = 0;
  uint64_t v12 = objc_msgSend(objc_alloc(MEMORY[0x1E4F1CA60]), "initWithCapacity:", objc_msgSend(*(id *)(a1 + 32), "count"));
  v6[0] = MEMORY[0x1E4F143A8];
  v6[1] = 3221225472;
  _OWORD v6[2] = sub_1A07E6254;
  v6[3] = &unk_1E5A11E60;
  void v6[4] = *(void *)(a1 + 32);
  void v6[5] = &v19;
  void v6[6] = &v7;
  void v6[7] = &v13;
  v6[8] = *(void *)(a1 + 48);
  [a2 enumerateKeysAndObjectsUsingBlock:v6];

  if (IMOSLoggingEnabled())
  {
    uint64_t v4 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
    {
      uint64_t v5 = v8[5];
      *(_DWORD *)long long buf = 138412290;
      uint64_t v26 = v5;
      _os_log_impl(&dword_1A0772000, v4, OS_LOG_TYPE_INFO, "FindCommonCaps: Common caps found: %@", buf, 0xCu);
    }
  }
  (*(void (**)(void, id))(*(void *)(a1 + 40) + 16))(*(void *)(a1 + 40), (id)v8[5]);
  _Block_object_dispose(&v7, 8);
  _Block_object_dispose(&v13, 8);
  _Block_object_dispose(&v19, 8);
}

uint64_t sub_1A07E6254(uint64_t a1, uint64_t a2, void *a3, unsigned char *a4)
{
  uint64_t v21 = *MEMORY[0x1E4F143B8];
  if (IMOSLoggingEnabled())
  {
    char v8 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)long long buf = 138412290;
      uint64_t v20 = a2;
      _os_log_impl(&dword_1A0772000, v8, OS_LOG_TYPE_INFO, "FindCommonCaps: Looking %@", buf, 0xCu);
    }
  }
  v15[0] = MEMORY[0x1E4F143A8];
  v15[1] = 3221225472;
  _DWORD v15[2] = sub_1A07E63C8;
  v15[3] = &unk_1E5A11E38;
  uint64_t v10 = *(void *)(a1 + 56);
  uint64_t v9 = (void *)(a1 + 56);
  uint64_t v11 = *(v9 - 3);
  long long v16 = *((_OWORD *)v9 - 1);
  void v15[4] = v11;
  v15[5] = a2;
  uint64_t v12 = v9[1];
  uint64_t v17 = v10;
  uint64_t v18 = v12;
  [a3 enumerateObjectsUsingBlock:v15];
  uint64_t v13 = v9[1];
  uint64_t result = [*(id *)(*(void *)(*v9 + 8) + 40) count];
  if (v13 == result) {
    *a4 = 1;
  }
  return result;
}

void sub_1A07E63C8(void *a1, void *a2, uint64_t a3, unsigned char *a4)
{
  uint64_t v33 = *MEMORY[0x1E4F143B8];
  uint64_t v5 = (void *)[a2 capabilities];
  long long v22 = 0u;
  long long v23 = 0u;
  long long v24 = 0u;
  long long v25 = 0u;
  uint64_t v6 = (void *)a1[4];
  uint64_t v7 = [v6 countByEnumeratingWithState:&v22 objects:v32 count:16];
  if (v7)
  {
    uint64_t v8 = *(void *)v23;
    while (2)
    {
      for (uint64_t i = 0; i != v7; ++i)
      {
        if (*(void *)v23 != v8) {
          objc_enumerationMutation(v6);
        }
        uint64_t v10 = *(void **)(*((void *)&v22 + 1) + 8 * i);
        uint64_t v11 = [v10 objectAtIndexedSubscript:0];
        if ((unint64_t)[v10 count] <= 1)
        {
          uint64_t v13 = [v5 valueForCapability:v11];
        }
        else
        {
          uint64_t v12 = [v10 objectAtIndexedSubscript:1];
          uint64_t v13 = [v5 valueForCapability:v11];
          if (v12)
          {
            uint64_t v14 = [v5 valueForCapability:v12];
            if (IMOSLoggingEnabled())
            {
              uint64_t v15 = OSLogHandleForIMFoundationCategory();
              if (os_log_type_enabled(v15, OS_LOG_TYPE_INFO))
              {
                *(_DWORD *)long long buf = 134218240;
                uint64_t v27 = v13;
                __int16 v28 = 2048;
                uint64_t v29 = v14;
                _os_log_impl(&dword_1A0772000, v15, OS_LOG_TYPE_INFO, "FindCommonCaps: Using capability %ld || orCapbility %ld to try to match", buf, 0x16u);
              }
            }
            v13 |= v14;
          }
        }
        if ([*(id *)(*(void *)(a1[6] + 8) + 40) containsObject:v11])
        {
          if ([*(id *)(*(void *)(a1[7] + 8) + 40) objectForKeyedSubscript:v11]
            && objc_msgSend((id)objc_msgSend(*(id *)(*(void *)(a1[7] + 8) + 40), "objectForKey:", v11), "integerValue") != v13)
          {
            [*(id *)(*(void *)(a1[7] + 8) + 40) removeObjectForKey:v11];
            [*(id *)(*(void *)(a1[8] + 8) + 40) addObject:v11];
            if (IMOSLoggingEnabled())
            {
              long long v16 = OSLogHandleForIMFoundationCategory();
              if (os_log_type_enabled(v16, OS_LOG_TYPE_INFO))
              {
                uint64_t v17 = a1[5];
                *(_DWORD *)long long buf = 134218498;
                uint64_t v27 = v13;
                __int16 v28 = 2112;
                uint64_t v29 = v17;
                __int16 v30 = 2112;
                unsigned int v31 = a2;
                _os_log_impl(&dword_1A0772000, v16, OS_LOG_TYPE_INFO, "FindCommonCaps: Found differing value %lu for caps from address: %@ on endpoint: %@", buf, 0x20u);
              }
            }
            uint64_t v18 = a1[9];
            if (v18 == [*(id *)(*(void *)(a1[8] + 8) + 40) count])
            {
              if (IMOSLoggingEnabled())
              {
                uint64_t v19 = OSLogHandleForIMFoundationCategory();
                if (os_log_type_enabled(v19, OS_LOG_TYPE_INFO))
                {
                  *(_WORD *)long long buf = 0;
                  _os_log_impl(&dword_1A0772000, v19, OS_LOG_TYPE_INFO, "FindCommonCaps: Breaking early, all caps are different", buf, 2u);
                }
              }
              *a4 = 1;
              return;
            }
          }
        }
        else
        {
          [*(id *)(*(void *)(a1[6] + 8) + 40) addObject:v11];
          objc_msgSend(*(id *)(*(void *)(a1[7] + 8) + 40), "setValue:forKey:", objc_msgSend(NSNumber, "numberWithInteger:", v13), v11);
        }
      }
      uint64_t v7 = [v6 countByEnumeratingWithState:&v22 objects:v32 count:16];
      if (v7) {
        continue;
      }
      break;
    }
  }
}

uint64_t sub_1A07E6798(void *a1, uint64_t a2, void *a3)
{
  uint64_t v4 = (void *)[a1 identifier];
  uint64_t v5 = [a3 identifier];

  return [v4 isEqualToString:v5];
}

void sub_1A07E6CF8(void *a1, uint64_t a2, os_log_t log, const char *a4, ...)
{
  va_start(va, a4);
  _os_log_error_impl(a1, log, OS_LOG_TYPE_ERROR, a4, (uint8_t *)va, 0xEu);
}

uint64_t sub_1A07E6D6C()
{
  os_log_t v0 = os_log_create("com.apple.Messages", "sandboxing");
  uint64_t v1 = qword_1E94FF4F0;
  qword_1E94FF4F0 = (uint64_t)v0;

  return MEMORY[0x1F41817F8](v0, v1);
}

uint64_t sub_1A07E8728()
{
  uint64_t result = IMGetCachedDomainBoolForKeyWithDefaultValue();
  byte_1E94FEA20 = result;
  return result;
}

uint64_t sub_1A07E87A0()
{
  uint64_t result = IMGetCachedDomainBoolForKeyWithDefaultValue();
  byte_1E94FF4F8 = result;
  return result;
}

uint64_t sub_1A07E8818()
{
  uint64_t result = IMGetCachedDomainBoolForKeyWithDefaultValue();
  byte_1E94FF500 = result;
  return result;
}

uint64_t sub_1A07E88D0()
{
  if (_os_feature_enabled_impl()) {
    uint64_t result = 1;
  }
  else {
    uint64_t result = IMGetCachedDomainBoolForKeyWithDefaultValue();
  }
  byte_1E94FF510 = result;
  return result;
}

uint64_t IMShowNewDetailsView()
{
  return _os_feature_enabled_impl();
}

uint64_t IMShouldShowEmotes()
{
  return MEMORY[0x1F4123768](@"emotes");
}

uint64_t IMEnableModernTranscript()
{
  if (qword_1EB4A60D0 != -1) {
    dispatch_once(&qword_1EB4A60D0, &unk_1EF2C0C00);
  }
  return byte_1E94FF030;
}

CFStringRef sub_1A07E8A28()
{
  MainBundle = CFBundleGetMainBundle();
  CFStringRef result = CFBundleGetIdentifier(MainBundle);
  if (result)
  {
    CFStringRef result = (CFStringRef)CFEqual(result, @"com.apple.messages.ChatKitTester");
    BOOL v2 = result != 0;
  }
  else
  {
    BOOL v2 = 0;
  }
  byte_1E94FF030 = v2;
  return result;
}

uint64_t IMEnableInlineReplyGlyph()
{
  return IMGetCachedDomainBoolForKeyWithDefaultValue();
}

uint64_t IMEnableNicknamesDebug()
{
  return 0;
}

uint64_t IMEnableMAIDGroups()
{
  return IMGetCachedDomainBoolForKeyWithDefaultValue();
}

void sub_1A07E8AA4(uint64_t a1, int token)
{
  uint64_t v34 = *MEMORY[0x1E4F143B8];
  uint64_t state64 = 0;
  uint32_t state = notify_get_state(token, &state64);
  int v4 = IMOSLoggingEnabled();
  if (state)
  {
    if (!v4) {
      return;
    }
    uint64_t v5 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)long long buf = 67109120;
      LODWORD(v21) = state;
      _os_log_impl(&dword_1A0772000, v5, OS_LOG_TYPE_INFO, "LQM-WRM Failed to get the state for com.apple.WRM.iRAT_event.linkRecommendation (%u)", buf, 8u);
    }
    goto LABEL_13;
  }
  if (v4)
  {
    uint64_t v6 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)long long buf = 134217984;
      uint64_t v21 = state64;
      _os_log_impl(&dword_1A0772000, v6, OS_LOG_TYPE_INFO, "LQM-WRM WRM notification 0x%llx", buf, 0xCu);
    }
  }
  int v7 = state64;
  int v8 = BYTE1(state64);
  int v9 = BYTE2(state64);
  uint64_t v10 = BYTE3(state64);
  int v11 = BYTE4(state64);
  int v12 = BYTE5(state64);
  uint64_t v13 = [NSNumber numberWithInt:state64];
  uint64_t v15 = *(void *)(a1 + 32);
  uint64_t v14 = a1 + 32;
  long long v16 = *(void **)(v15 + 24);
  *(void *)(v15 + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = v13;

  uint64_t v17 = [NSNumber numberWithInt:v10];
  uint64_t v18 = *(void **)(*(void *)v14 + 16);
  *(void *)(*(void *)v14 + 16) = v17;

  if (IMOSLoggingEnabled())
  {
    uint64_t v5 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)long long buf = 134219520;
      uint64_t v21 = state64;
      __int16 v22 = 1024;
      int v23 = v7;
      __int16 v24 = 1024;
      int v25 = v8;
      __int16 v26 = 1024;
      int v27 = v9;
      __int16 v28 = 1024;
      int v29 = v10;
      __int16 v30 = 1024;
      int v31 = v11;
      __int16 v32 = 1024;
      int v33 = v12;
      _os_log_impl(&dword_1A0772000, v5, OS_LOG_TYPE_INFO, "LQM-WRM Link incoming 0x%llx  xpref %d wifi score %d confidence %d cell score %d confidence %d is5GAvailable %d", buf, 0x30u);
    }
LABEL_13:
  }
}

uint64_t sub_1A07E8F58()
{
  uint64_t v0 = [objc_alloc(MEMORY[0x1E4F6AB90]) initWithService:@"com.apple.madrid"];
  uint64_t v1 = qword_1E94FF280;
  qword_1E94FF280 = v0;

  return MEMORY[0x1F41817F8](v0, v1);
}

uint64_t sub_1A07E9184(uint64_t a1, void *a2)
{
  BOOL v2 = NSNumber;
  [a2 slot];
  uint64_t v3 = IDSSubscriptionSlotFromCTSIMSlot();

  return [v2 numberWithInteger:v3];
}

void sub_1A07EA1C8(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *exc_buf)
{
  if (a2 == 1)
  {
    objc_begin_catch(a1);
    objc_end_catch();
    JUMPOUT(0x1A07EA120);
  }
  objc_end_catch();
  _Unwind_Resume(v10);
}

void sub_1A07EB8F0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,__CFString *a23,uint64_t a24)
{
  if (a2)
  {
    if (a2 == 2)
    {
      id v27 = objc_begin_catch(exception_object);
      uint64_t v34 = [v27 description];
      [v26 testLogWithFormat:@"Finished tests for bundle at path: %@, with error: %@"];

      __int16 v28 = [v26 delegate];
      char v29 = objc_opt_respondsToSelector();

      if (v29)
      {
        __int16 v30 = [v26 delegate];
        int v31 = (void *)MEMORY[0x1E4F28C58];
        a23 = @"IMUnitTestRunnerErrorUnhandledExceptionKey";
        a24 = (uint64_t)v27;
        __int16 v32 = [MEMORY[0x1E4F1C9E8] dictionaryWithObjects:&a24 forKeys:&a23 count:1];
        int v33 = [v31 errorWithDomain:@"IMUnitTestRunnerErrorDomain" code:1 userInfo:v32];
        [v30 unitTestRunner:v26 runningTestsInBundleAtPath:v24 failedWithError:v33];
      }
      objc_end_catch();
    }
    else
    {
      objc_begin_catch(exception_object);
    }
    if (!v25) {
      JUMPOUT(0x1A07EB880);
    }
    JUMPOUT(0x1A07EB874);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1A07EBDF4()
{
  uint64_t v0 = objc_opt_new();
  uint64_t v1 = (void *)qword_1E94FF518;
  qword_1E94FF518 = v0;

  uint64_t v2 = qword_1E94FF518;

  return MEMORY[0x1F4181798](v2, sel_setDateFormat_);
}

uint64_t sub_1A07ED048(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 40) state];
  [*(id *)(a1 + 32) setDndState:v2];

  uint64_t v3 = *(void **)(a1 + 32);

  return [v3 _notifyDelegatesOfDNDStateChange];
}

id sub_1A07ED62C(void *a1, uint64_t a2, void *a3)
{
  uint64_t v35 = *MEMORY[0x1E4F143B8];
  id v4 = a3;
  [a1 allKeys];
  long long v29 = 0u;
  long long v30 = 0u;
  long long v31 = 0u;
  long long v32 = 0u;
  id v5 = (id)objc_claimAutoreleasedReturnValue();
  uint64_t v6 = [v5 countByEnumeratingWithState:&v29 objects:v34 count:16];
  if (v6)
  {
    uint64_t v7 = v6;
    uint64_t v8 = *(void *)v30;
    while (2)
    {
      for (uint64_t i = 0; i != v7; ++i)
      {
        if (*(void *)v30 != v8) {
          objc_enumerationMutation(v5);
        }
        if (IMFileTransferGUIDIsTemporary(*(void **)(*((void *)&v29 + 1) + 8 * i)))
        {

          id v10 = v4;
          goto LABEL_11;
        }
      }
      uint64_t v7 = [v5 countByEnumeratingWithState:&v29 objects:v34 count:16];
      if (v7) {
        continue;
      }
      break;
    }
  }

  id v10 = [v5 sortedArrayUsingSelector:sel_localizedStandardCompare_];
LABEL_11:
  int v11 = v10;

  int v12 = objc_msgSend(objc_alloc(MEMORY[0x1E4F1CA48]), "initWithCapacity:", objc_msgSend(a1, "count"));
  long long v25 = 0u;
  long long v26 = 0u;
  long long v27 = 0u;
  long long v28 = 0u;
  id v13 = v11;
  uint64_t v14 = [v13 countByEnumeratingWithState:&v25 objects:v33 count:16];
  if (v14)
  {
    uint64_t v15 = v14;
    uint64_t v16 = *(void *)v26;
    do
    {
      for (uint64_t j = 0; j != v15; ++j)
      {
        if (*(void *)v26 != v16) {
          objc_enumerationMutation(v13);
        }
        uint64_t v18 = *(void *)(*((void *)&v25 + 1) + 8 * j);
        uint64_t v19 = objc_msgSend(a1, "objectForKey:", v18, v23);
        if (v19)
        {
          [v12 addObject:v19];
        }
        else
        {
          uint64_t v23 = v18;
          _IMWarn();
        }
      }
      uint64_t v15 = [v13 countByEnumeratingWithState:&v25 objects:v33 count:16];
    }
    while (v15);
  }

  uint64_t v20 = [a1 allValues];
  uint64_t v21 = [v20 arrayByExcludingObjectsInArray:v12];

  if (v21 && [v21 count])
  {
    uint64_t v24 = [v21 count];
    _IMWarn();
    objc_msgSend(v12, "addObjectsFromArray:", v21, v24);
  }

  return v12;
}

uint64_t IMSharedUtilitiesProtoCloudKitEncryptedMessageActionReadFrom(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  id v4 = (int *)MEMORY[0x1E4F940E0];
  id v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      switch((v10 >> 3))
      {
        case 1u:
          char v17 = 0;
          unsigned int v18 = 0;
          uint64_t v19 = 0;
          *(unsigned char *)(a1 + 44) |= 2u;
          while (1)
          {
            uint64_t v20 = *v3;
            unint64_t v21 = *(void *)(a2 + v20);
            if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
              break;
            }
            char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
            *(void *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0) {
              goto LABEL_40;
            }
            v17 += 7;
            BOOL v14 = v18++ >= 9;
            if (v14)
            {
              LODWORD(v19) = 0;
              goto LABEL_42;
            }
          }
          *(unsigned char *)(a2 + *v5) = 1;
LABEL_40:
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v19) = 0;
          }
LABEL_42:
          *(_DWORD *)(a1 + 40) = v19;
          continue;
        case 2u:
          char v24 = 0;
          unsigned int v25 = 0;
          uint64_t v26 = 0;
          *(unsigned char *)(a1 + 44) |= 1u;
          break;
        case 3u:
          uint64_t String = (void *)PBReaderReadString();

          id v31 = String;
          uint64_t v32 = 24;
          goto LABEL_38;
        case 4u:
          int v33 = (void *)PBReaderReadString();

          id v31 = v33;
          uint64_t v32 = 16;
          goto LABEL_38;
        case 5u:
          Data = (void *)PBReaderReadData();

          id v31 = Data;
          uint64_t v32 = 32;
LABEL_38:
          *(void *)(a1 + v32) = v31;
          continue;
        default:
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
          continue;
      }
      while (1)
      {
        uint64_t v27 = *v3;
        unint64_t v28 = *(void *)(a2 + v27);
        if (v28 == -1 || v28 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v29 = *(unsigned char *)(*(void *)(a2 + *v7) + v28);
        *(void *)(a2 + v27) = v28 + 1;
        v26 |= (unint64_t)(v29 & 0x7F) << v24;
        if ((v29 & 0x80) == 0) {
          goto LABEL_44;
        }
        v24 += 7;
        BOOL v14 = v25++ >= 9;
        if (v14)
        {
          uint64_t v26 = 0;
          goto LABEL_46;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_44:
      if (*(unsigned char *)(a2 + *v5)) {
        uint64_t v26 = 0;
      }
LABEL_46:
      *(void *)(a1 + 8) = v26;
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t FormattedRecentDomainDirectory()
{
  uint64_t v0 = (void *)IMSystemRootDirectory();

  return [v0 stringByAppendingString:@"/var/mobile/Library/SMS/Recents/"];
}

uint64_t FormattedDataFilePath(void *a1, void *a2)
{
  uint64_t v2 = objc_msgSend((id)objc_msgSend((id)objc_msgSend((id)IMSystemRootDirectory(), "stringByAppendingString:", @"/var/mobile/Library/SMS/Recents/"), "stringByAppendingPathComponent:", objc_msgSend(a1, "lastPathComponent")), "stringByAppendingPathComponent:", objc_msgSend(a2, "lastPathComponent"));

  return [v2 stringByResolvingAndStandardizingPath];
}

uint64_t FormattedRecentsInfoDictionaryFilePath(void *a1, void *a2)
{
  uint64_t v2 = objc_msgSend((id)objc_msgSend((id)objc_msgSend((id)objc_msgSend((id)IMSystemRootDirectory(), "stringByAppendingString:", @"/var/mobile/Library/SMS/Recents/"), "stringByAppendingPathComponent:", objc_msgSend(a1, "lastPathComponent")), "stringByAppendingPathComponent:", objc_msgSend(a2, "lastPathComponent")), "stringByAppendingPathExtension:", @"json");

  return [v2 stringByResolvingAndStandardizingPath];
}

uint64_t FormattedRecentsCacheFilePath(void *a1)
{
  uint64_t v1 = objc_msgSend((id)objc_msgSend((id)objc_msgSend((id)objc_msgSend((id)IMSystemRootDirectory(), "stringByAppendingString:", @"/var/mobile/Library/SMS/Recents/"), "stringByAppendingPathComponent:", objc_msgSend(a1, "lastPathComponent")), "stringByAppendingPathComponent:", @"Recents"), "stringByAppendingPathExtension:", @"json");

  return [v1 stringByResolvingAndStandardizingPath];
}

IMRecentItemsList *sub_1A07EEDD8()
{
  uint64_t result = objc_alloc_init(IMRecentItemsList);
  qword_1EB4A6658 = (uint64_t)result;
  return result;
}

id sub_1A07EEF24()
{
  v2[2] = *MEMORY[0x1E4F143B8];
  v1[0] = @"com.apple.Handwriting.HandwritingProvider";
  v1[1] = @"Stickers";
  v2[0] = &unk_1EF305820;
  v2[1] = &unk_1EF305838;
  qword_1E94FF528 = [MEMORY[0x1E4F1C9E8] dictionaryWithObjects:v2 forKeys:v1 count:2];
  return (id)qword_1E94FF528;
}

uint64_t sub_1A07EF030(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_1A07EF098(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, long long a9)
{
  if (a2 == 1)
  {
    id v9 = objc_begin_catch(exception_object);
    if (IMOSLoggingEnabled())
    {
      unint64_t v10 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
      {
        LODWORD(a9) = 138412290;
        *(void *)((char *)&a9 + 4) = v9;
        _os_log_impl(&dword_1A0772000, v10, OS_LOG_TYPE_INFO, "Caught an exception during Recents operation: %@", (uint8_t *)&a9, 0xCu);
      }
    }
    objc_end_catch();
    JUMPOUT(0x1A07EF068);
  }
  _Unwind_Resume(exception_object);
}

void sub_1A07EF1B4(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  if (!v2) {
    uint64_t v2 = [*(id *)(a1 + 40) _guidForFileURL:*(void *)(a1 + 48)];
  }
  uint64_t v3 = [[IMRecentItem alloc] initWithGUID:v2 data:0 messageItemInfo:0];
  [*(id *)(a1 + 40) _removeRecentDataPayloadEntry:v3 forDomain:*(void *)(a1 + 56)];
}

void sub_1A07EF2A4(uint64_t a1)
{
  uint64_t v2 = [[IMRecentItem alloc] initWithGUID:*(void *)(a1 + 32) data:*(void *)(a1 + 40) messageItemInfo:0];
  [*(id *)(a1 + 48) _removeRecentDataPayloadEntry:v2 forDomain:*(void *)(a1 + 56)];
}

void sub_1A07EF374(uint64_t a1)
{
  uint64_t v7 = *MEMORY[0x1E4F143B8];
  uint64_t v1 = objc_msgSend((id)objc_msgSend((id)IMSystemRootDirectory(), "stringByAppendingString:", @"/var/mobile/Library/SMS/Recents/"), "stringByAppendingPathComponent:", *(void *)(a1 + 32));
  uint64_t v4 = 0;
  if (objc_msgSend((id)objc_msgSend(MEMORY[0x1E4F28CB8], "defaultManager"), "removeItemAtPath:error:", v1, &v4))
  {
    if (v4)
    {
      if (IMOSLoggingEnabled())
      {
        uint64_t v2 = OSLogHandleForIMFoundationCategory();
        if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
        {
          *(_DWORD *)long long buf = 138412290;
          uint64_t v6 = v4;
          _os_log_impl(&dword_1A0772000, v2, OS_LOG_TYPE_INFO, "Encountered error while deleting all items for domain: %@", buf, 0xCu);
        }
      }
    }
    if (IMOSLoggingEnabled())
    {
      uint64_t v3 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)long long buf = 138412290;
        uint64_t v6 = v1;
        _os_log_impl(&dword_1A0772000, v3, OS_LOG_TYPE_INFO, "Deleting recents plist: %@", buf, 0xCu);
      }
    }
  }
}

void sub_1A07EF5F4(uint64_t a1)
{
  uint64_t v2 = [[IMRecentItem alloc] initWithGUID:*(void *)(a1 + 32) data:*(void *)(a1 + 40) messageItemInfo:*(void *)(a1 + 48)];
  [*(id *)(a1 + 56) _addRecentDataPayloadEntry:v2 toDomain:*(void *)(a1 + 64)];
}

void sub_1A07EF80C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va1, a11);
  va_start(va, a11);
  uint64_t v13 = va_arg(va1, void);
  uint64_t v15 = va_arg(va1, void);
  uint64_t v16 = va_arg(va1, void);
  uint64_t v17 = va_arg(va1, void);
  uint64_t v18 = va_arg(va1, void);
  uint64_t v19 = va_arg(va1, void);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Block_object_dispose((const void *)(v11 - 96), 8);
  _Unwind_Resume(a1);
}

void sub_1A07EF84C(uint64_t a1)
{
  uint64_t v26 = *MEMORY[0x1E4F143B8];
  *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) = (*(uint64_t (**)(void))(a1 + 64))(*(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 40));
  if (IMOSLoggingEnabled())
  {
    uint64_t v1 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v1, OS_LOG_TYPE_INFO))
    {
      uint64_t v2 = [*(id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) count];
      *(_DWORD *)long long buf = 134217984;
      uint64_t v25 = v2;
      _os_log_impl(&dword_1A0772000, v1, OS_LOG_TYPE_INFO, "Retrieved %tu stickers from attachment query", buf, 0xCu);
    }
  }
  long long v21 = 0u;
  long long v22 = 0u;
  long long v19 = 0u;
  long long v20 = 0u;
  uint64_t v3 = *(void **)(*(void *)(*(void *)(a1 + 40) + 8) + 40);
  uint64_t v4 = [v3 countByEnumeratingWithState:&v19 objects:v23 count:16];
  if (v4)
  {
    uint64_t v5 = *(void *)v20;
    do
    {
      for (uint64_t i = 0; i != v4; ++i)
      {
        if (*(void *)v20 != v5) {
          objc_enumerationMutation(v3);
        }
        uint64_t v7 = *(void **)(*((void *)&v19 + 1) + 8 * i);
        if (![v7 valueForKey:@"sticker_user_info"])
        {
          if (IMOSLoggingEnabled())
          {
            char v8 = OSLogHandleForIMFoundationCategory();
            if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
            {
              *(_WORD *)long long buf = 0;
              _os_log_impl(&dword_1A0772000, v8, OS_LOG_TYPE_INFO, "No sticker user info dictionary found for sticker attachment!", buf, 2u);
            }
          }
        }
        [v7 valueForKey:@"sticker_user_info"];
        uint64_t v9 = JWDecodeDictionary();
        if (!v9)
        {
          if (IMOSLoggingEnabled())
          {
            unint64_t v10 = OSLogHandleForIMFoundationCategory();
            if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
            {
              *(_WORD *)long long buf = 0;
              _os_log_impl(&dword_1A0772000, v10, OS_LOG_TYPE_INFO, "Failed to decode user info dictionary from sticker_user_info blob", buf, 2u);
            }
          }
        }
        uint64_t v11 = (void *)[v7 valueForKey:@"filename"];
        if ([v11 hasPrefix:@"~"]) {
          unint64_t v12 = objc_msgSend(v11, "stringByReplacingCharactersInRange:withString:", 0, 1, @"/var/mobile/");
        }
        else {
          unint64_t v12 = (void *)[v11 stringByExpandingTildeInPath];
        }
        uint64_t v13 = [v12 stringByResolvingSymlinksInPath];
        if (objc_msgSend((id)objc_msgSend(MEMORY[0x1E4F28CB8], "defaultManager"), "fileExistsAtPath:", v13))
        {
          uint64_t v14 = objc_msgSend(NSNumber, "numberWithInteger:", objc_msgSend((id)objc_msgSend(v7, "valueForKey:", @"created_date"), "integerValue"));
          uint64_t v15 = [[IMRecentItem alloc] initWithGUID:0 data:0 messageItemInfo:v9];
          -[IMRecentItem setFileURL:](v15, "setFileURL:", [MEMORY[0x1E4F1CB10] fileURLWithPath:v13]);
          [(IMRecentItem *)v15 setTimestamp:v14];
          -[IMRecentItem setAccessibilityString:](v15, "setAccessibilityString:", [v7 valueForKey:@"accessibility_string"]);
          [*(id *)(*(void *)(*(void *)(a1 + 56) + 8) + 40) addObject:v15];
        }
      }
      uint64_t v4 = [v3 countByEnumeratingWithState:&v19 objects:v23 count:16];
    }
    while (v4);
  }

  block[0] = MEMORY[0x1E4F143A8];
  block[1] = 3221225472;
  block[2] = sub_1A07EFC7C;
  block[3] = &unk_1E5A12040;
  uint64_t v16 = *(void *)(a1 + 56);
  void block[4] = *(void *)(a1 + 32);
  void block[5] = v16;
  dispatch_async(MEMORY[0x1E4F14428], block);
}

void sub_1A07EFC7C(uint64_t a1)
{
  (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
  uint64_t v2 = *(void **)(*(void *)(*(void *)(a1 + 40) + 8) + 40);
}

void sub_1A07EFED4(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 112), 8);
  _Unwind_Resume(a1);
}

void sub_1A07EFEEC(uint64_t a1)
{
  uint64_t v37 = *MEMORY[0x1E4F143B8];
  uint64_t v2 = (void *)[*(id *)(a1 + 32) _recentsCacheForDomain:*(void *)(a1 + 40)];
  long long v30 = 0u;
  long long v31 = 0u;
  long long v32 = 0u;
  long long v33 = 0u;
  uint64_t v3 = [v2 countByEnumeratingWithState:&v30 objects:v36 count:16];
  if (v3)
  {
    uint64_t v5 = *(void *)v31;
    *(void *)&long long v4 = 138412290;
    long long v27 = v4;
    do
    {
      for (uint64_t i = 0; i != v3; ++i)
      {
        if (*(void *)v31 != v5) {
          objc_enumerationMutation(v2);
        }
        uint64_t v7 = *(void **)(*((void *)&v30 + 1) + 8 * i);
        char v8 = objc_msgSend(v7, "valueForKey:", @"guid", v27);
        uint64_t v9 = objc_msgSend(NSNumber, "numberWithInteger:", objc_msgSend((id)objc_msgSend(v7, "valueForKey:", @"timestamp"), "integerValue"));
        *(void *)(*(void *)(*(void *)(a1 + 56) + 8) + 40) = FormattedDataFilePath(*(void **)(a1 + 40), v8);
        char v29 = 0;
        int v10 = objc_msgSend((id)objc_msgSend(MEMORY[0x1E4F28CB8], "defaultManager"), "fileExistsAtPath:isDirectory:", *(void *)(*(void *)(*(void *)(a1 + 56) + 8) + 40), &v29);
        if (v29) {
          int v11 = v10;
        }
        else {
          int v11 = 0;
        }
        if (v11 == 1)
        {
          unint64_t v12 = objc_msgSend((id)objc_msgSend(MEMORY[0x1E4F28CB8], "defaultManager"), "contentsOfDirectoryAtPath:error:", *(void *)(*(void *)(*(void *)(a1 + 56) + 8) + 40), *(void *)(*(void *)(a1 + 64) + 8) + 40);
          if (*(void *)(*(void *)(*(void *)(a1 + 64) + 8) + 40))
          {
            if (IMOSLoggingEnabled())
            {
              uint64_t v13 = OSLogHandleForIMFoundationCategory();
              if (os_log_type_enabled(v13, OS_LOG_TYPE_INFO))
              {
                uint64_t v14 = *(void *)(*(void *)(*(void *)(a1 + 56) + 8) + 40);
                *(_DWORD *)long long buf = v27;
                uint64_t v35 = v14;
                uint64_t v15 = v13;
                uint64_t v16 = "Failed to read contents of directory %@";
LABEL_18:
                _os_log_impl(&dword_1A0772000, v15, OS_LOG_TYPE_INFO, v16, buf, 0xCu);
              }
            }
          }
          else
          {
            *(void *)(*(void *)(*(void *)(a1 + 72) + 8) + 40) = objc_msgSend(MEMORY[0x1E4F1CB10], "URLWithString:", objc_msgSend(*(id *)(*(void *)(*(void *)(a1 + 56)+ 8)+ 40), "stringByAppendingPathComponent:", objc_msgSend(v12, "lastObject")));
          }
        }
        else
        {
          *(void *)(*(void *)(*(void *)(a1 + 80) + 8) + 40) = [MEMORY[0x1E4F1C9B8] dataWithContentsOfFile:*(void *)(*(void *)(*(void *)(a1 + 56)+ 8)+ 40)];
          if (!*(void *)(*(void *)(*(void *)(a1 + 80) + 8) + 40))
          {
            if (IMOSLoggingEnabled())
            {
              uint64_t v17 = OSLogHandleForIMFoundationCategory();
              if (os_log_type_enabled(v17, OS_LOG_TYPE_INFO))
              {
                uint64_t v18 = *(void *)(*(void *)(*(void *)(a1 + 56) + 8) + 40);
                *(_DWORD *)long long buf = v27;
                uint64_t v35 = v18;
                uint64_t v15 = v17;
                uint64_t v16 = "Failed to retrieve payload data from file %@";
                goto LABEL_18;
              }
            }
          }
        }
        uint64_t v19 = FormattedRecentsInfoDictionaryFilePath(*(void **)(a1 + 40), v8);
        if (objc_msgSend((id)objc_msgSend(MEMORY[0x1E4F28CB8], "defaultManager"), "fileExistsAtPath:", v19))
        {
          uint64_t v20 = [MEMORY[0x1E4F1C9B8] dataWithContentsOfFile:v19];
          if (v20)
          {
            uint64_t v21 = [MEMORY[0x1E4F28D90] JSONObjectWithData:v20 options:0 error:*(void *)(*(void *)(a1 + 64) + 8) + 40];
            if (v21) {
              goto LABEL_31;
            }
          }
          else if (IMOSLoggingEnabled())
          {
            long long v22 = OSLogHandleForIMFoundationCategory();
            if (os_log_type_enabled(v22, OS_LOG_TYPE_INFO))
            {
              *(_DWORD *)long long buf = v27;
              uint64_t v35 = v19;
              _os_log_impl(&dword_1A0772000, v22, OS_LOG_TYPE_INFO, "Failed to read data from %@", buf, 0xCu);
            }
          }
          if (IMOSLoggingEnabled())
          {
            uint64_t v23 = OSLogHandleForIMFoundationCategory();
            if (os_log_type_enabled(v23, OS_LOG_TYPE_INFO))
            {
              uint64_t v24 = *(void *)(*(void *)(*(void *)(a1 + 64) + 8) + 40);
              *(_DWORD *)long long buf = v27;
              uint64_t v35 = v24;
              _os_log_impl(&dword_1A0772000, v23, OS_LOG_TYPE_INFO, "Failed to serialize recent item info dictionary from JSON. Error: %@", buf, 0xCu);
            }
          }
        }
        uint64_t v21 = 0;
LABEL_31:
        uint64_t v25 = [[IMRecentItem alloc] initWithGUID:0 data:*(void *)(*(void *)(*(void *)(a1 + 80) + 8) + 40) messageItemInfo:v21];
        [(IMRecentItem *)v25 setTimestamp:v9];
        if (*(void *)(*(void *)(*(void *)(a1 + 72) + 8) + 40)) {
          -[IMRecentItem setFileURL:](v25, "setFileURL:");
        }
        [*(id *)(*(void *)(*(void *)(a1 + 88) + 8) + 40) addObject:v25];
      }
      uint64_t v3 = [v2 countByEnumeratingWithState:&v30 objects:v36 count:16];
    }
    while (v3);
  }
  block[0] = MEMORY[0x1E4F143A8];
  block[1] = 3221225472;
  block[2] = sub_1A07F0414;
  block[3] = &unk_1E5A12040;
  uint64_t v26 = *(void *)(a1 + 88);
  void block[4] = *(void *)(a1 + 48);
  void block[5] = v26;
  dispatch_async(MEMORY[0x1E4F14428], block);
}

void sub_1A07F0414(uint64_t a1)
{
  (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
  uint64_t v2 = *(void **)(*(void *)(*(void *)(a1 + 40) + 8) + 40);
}

void sub_1A07F0C18(uint64_t a1)
{
  uint64_t v25 = *MEMORY[0x1E4F143B8];
  uint64_t v2 = *(void *)(a1 + 32);
  uint64_t v3 = objc_msgSend((id)objc_msgSend((id)IMSystemRootDirectory(), "stringByAppendingString:", @"/var/mobile/Library/SMS/Recents/"), "stringByAppendingPathComponent:", *(void *)(a1 + 40));
  uint64_t v4 = [*(id *)(a1 + 48) lastPathComponent];
  if (!v2)
  {
    if (IMOSLoggingEnabled())
    {
      uint64_t v5 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
      {
        int v19 = 138412290;
        uint64_t v20 = 0;
        _os_log_impl(&dword_1A0772000, v5, OS_LOG_TYPE_INFO, "No GUID provided. Using %@ as item GUID", (uint8_t *)&v19, 0xCu);
      }
    }
    uint64_t v2 = [*(id *)(a1 + 56) _guidForFileURL:*(void *)(a1 + 48)];
  }
  if (IMOSLoggingEnabled())
  {
    uint64_t v6 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
    {
      uint64_t v7 = *(void *)(a1 + 48);
      int v19 = 138412290;
      uint64_t v20 = v7;
      _os_log_impl(&dword_1A0772000, v6, OS_LOG_TYPE_INFO, "Generating GUID from file %@", (uint8_t *)&v19, 0xCu);
    }
  }
  char v8 = objc_msgSend((id)objc_msgSend(v3, "stringByAppendingPathComponent:", v2), "stringByAppendingPathComponent:", v4);
  IMSharedHelperEnsureDirectoryExistsAtPath([v8 stringByDeletingLastPathComponent]);
  uint64_t v9 = [MEMORY[0x1E4F1CB10] fileURLWithPath:v8];
  if (IMOSLoggingEnabled())
  {
    int v10 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
    {
      uint64_t v11 = *(void *)(a1 + 48);
      int v19 = 138412546;
      uint64_t v20 = v11;
      __int16 v21 = 2112;
      uint64_t v22 = v9;
      _os_log_impl(&dword_1A0772000, v10, OS_LOG_TYPE_INFO, "Copying file URL %@ to URL %@", (uint8_t *)&v19, 0x16u);
    }
  }
  char v12 = objc_msgSend((id)objc_msgSend(MEMORY[0x1E4F28CB8], "defaultManager"), "copyItemAtURL:toURL:error:", *(void *)(a1 + 48), v9, *(void *)(*(void *)(a1 + 72) + 8) + 40);
  int v13 = IMOSLoggingEnabled();
  if (v12)
  {
    if (v13)
    {
      uint64_t v14 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_INFO))
      {
        LOWORD(v19) = 0;
        _os_log_impl(&dword_1A0772000, v14, OS_LOG_TYPE_INFO, "Copied file URL successfully!", (uint8_t *)&v19, 2u);
      }
    }
    uint64_t v15 = [[IMRecentItem alloc] initWithGUID:v2 data:0 messageItemInfo:*(void *)(a1 + 64)];
    [*(id *)(a1 + 56) _addRecentDataPayloadEntry:v15 toDomain:*(void *)(a1 + 40)];
  }
  else if (v13)
  {
    uint64_t v16 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v16, OS_LOG_TYPE_INFO))
    {
      uint64_t v17 = *(void *)(a1 + 48);
      uint64_t v18 = *(void *)(*(void *)(*(void *)(a1 + 72) + 8) + 40);
      int v19 = 138412802;
      uint64_t v20 = v17;
      __int16 v21 = 2112;
      uint64_t v22 = v9;
      __int16 v23 = 2112;
      uint64_t v24 = v18;
      _os_log_impl(&dword_1A0772000, v16, OS_LOG_TYPE_INFO, "Failed to copy URL %@ to URL %@. Error: %@", (uint8_t *)&v19, 0x20u);
    }
  }
}

uint64_t sub_1A07F198C(uint64_t a1, void *a2, void *a3)
{
  uint64_t v4 = (void *)[a3 valueForKey:@"timestamp"];
  uint64_t v5 = [a2 valueForKey:@"timestamp"];

  return [v4 compare:v5];
}

void sub_1A07F1DC8(_Unwind_Exception *a1, int a2)
{
  if (a2 == 1)
  {
    objc_begin_catch(a1);
    objc_end_catch();
    JUMPOUT(0x1A07F1D98);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_1A07F1ECC()
{
  uint64_t v0 = objc_alloc_init(IMCommSafetyRequestsManager);
  uint64_t v1 = qword_1EB4A6210;
  qword_1EB4A6210 = (uint64_t)v0;

  return MEMORY[0x1F41817F8](v0, v1);
}

void sub_1A07F21E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A07F24A0(uint64_t a1)
{
  v44[1] = *MEMORY[0x1E4F143B8];
  if (*(void *)(a1 + 32)
    && ([MEMORY[0x1E4F28CB8] defaultManager],
        uint64_t v2 = objc_claimAutoreleasedReturnValue(),
        [*(id *)(a1 + 32) path],
        uint64_t v3 = objc_claimAutoreleasedReturnValue(),
        char v4 = [v2 fileExistsAtPath:v3],
        v3,
        v2,
        (v4 & 1) != 0))
  {
    uint64_t v5 = [*(id *)(a1 + 40) cachedResultForContentAttachment:*(void *)(a1 + 32) withChatID:*(void *)(a1 + 48)];
    uint64_t v6 = v5;
    if (v5)
    {
      if (*(void *)(a1 + 56))
      {
        if ([v5 BOOLValue])
        {
          uint64_t v7 = +[IMMetricsCollector sharedInstance];
          [v7 trackEvent:@"com.apple.Messages.IMMetricsCollectorMarkedImageSensitive"];
        }
        (*(void (**)(void))(*(void *)(a1 + 56) + 16))();
        if (IMOSLoggingEnabled())
        {
          char v8 = OSLogHandleForIMFoundationCategory();
          if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
          {
            int v9 = [v6 BOOLValue];
            int v10 = [*(id *)(a1 + 32) absoluteString];
            uint64_t v11 = *(void *)(a1 + 48);
            *(_DWORD *)long long buf = 67109634;
            *(_DWORD *)&uint8_t buf[4] = v9;
            *(_WORD *)&uint8_t buf[8] = 2112;
            *(void *)&buf[10] = v10;
            *(_WORD *)&buf[18] = 2112;
            *(void *)&buf[20] = v11;
            _os_log_impl(&dword_1A0772000, v8, OS_LOG_TYPE_INFO, "Retrieved cached result '%d' for fileURL '%@' and chatID '%@'", buf, 0x1Cu);
          }
        }
      }
    }
    else
    {
      uint64_t v16 = *(void **)(a1 + 64);
      if (v16 == (void *)2
        && (uint64_t v16 = (void *)IMCommSafetyContentAttachmentTypeForURL(*(void **)(a1 + 32)), v16 == (void *)2))
      {
        if (*(void *)(a1 + 56))
        {
          if (IMOSLoggingEnabled())
          {
            uint64_t v17 = OSLogHandleForIMFoundationCategory();
            if (os_log_type_enabled(v17, OS_LOG_TYPE_INFO))
            {
              *(_WORD *)long long buf = 0;
              _os_log_impl(&dword_1A0772000, v17, OS_LOG_TYPE_INFO, "Could not get IMCommSafetyContentAttachmentType for the provided fileURL.", buf, 2u);
            }
          }
          uint64_t v18 = *(void *)(a1 + 56);
          int v19 = (void *)MEMORY[0x1E4F28C58];
          uint64_t v41 = *MEMORY[0x1E4F28568];
          unint64_t v42 = @"Content attachment type is not supported";
          uint64_t v20 = [MEMORY[0x1E4F1C9E8] dictionaryWithObjects:&v42 forKeys:&v41 count:1];
          __int16 v21 = [v19 errorWithDomain:@"com.apple.IMSharedUtilities.IMCommSafetyRequestsManager" code:3 userInfo:v20];
          (*(void (**)(uint64_t, void, void *))(v18 + 16))(v18, 0, v21);
        }
      }
      else
      {
        *(void *)long long buf = 0;
        *(void *)&uint8_t buf[8] = buf;
        *(void *)&uint8_t buf[16] = 0x3032000000;
        *(void *)&uint8_t buf[24] = sub_1A077782C;
        uint64_t v39 = sub_1A0777704;
        id v40 = 0;
        id v40 = [*(id *)(a1 + 40) _identifierForURL:*(void *)(a1 + 32) withChatID:*(void *)(a1 + 48)];
        id location = 0;
        objc_initWeak(&location, *(id *)(a1 + 40));
        aBlock[0] = MEMORY[0x1E4F143A8];
        aBlock[1] = 3221225472;
        aBlock[2] = sub_1A07F2C38;
        aBlock[3] = &unk_1E5A12108;
        objc_copyWeak(v32, &location);
        long long v31 = buf;
        id v30 = *(id *)(a1 + 56);
        v32[1] = v16;
        uint64_t v22 = _Block_copy(aBlock);
        if (v16)
        {
          if (IMOSLoggingEnabled())
          {
            __int16 v23 = OSLogHandleForIMFoundationCategory();
            if (os_log_type_enabled(v23, OS_LOG_TYPE_INFO))
            {
              uint64_t v24 = *(void *)(a1 + 32);
              uint64_t v25 = @"YES";
              if (!*(unsigned char *)(a1 + 72)) {
                uint64_t v25 = @"NO";
              }
              *(_DWORD *)uint64_t v34 = 138412546;
              uint64_t v35 = v24;
              __int16 v36 = 2112;
              uint64_t v37 = v25;
              _os_log_impl(&dword_1A0772000, v23, OS_LOG_TYPE_INFO, "Start analyzeVideoFile: %@ with BlastDoorEnabled: %@", v34, 0x16u);
            }
          }
          if (IMOSLoggingEnabled())
          {
            uint64_t v26 = OSLogHandleForIMFoundationCategory();
            if (os_log_type_enabled(v26, OS_LOG_TYPE_INFO))
            {
              *(_WORD *)uint64_t v34 = 0;
              _os_log_impl(&dword_1A0772000, v26, OS_LOG_TYPE_INFO, "Calling UserSafety -analyzeVideoFile:useBlastdoor:progressHandler:completionHandler:", v34, 2u);
            }
          }
          long long v27 = [*(id *)(a1 + 40) userSafetyClient];
          [v27 analyzeVideoFile:*(void *)(a1 + 32) useBlastdoor:*(unsigned __int8 *)(a1 + 72) progressHandler:&unk_1EF2C07A0 completionHandler:v22];
        }
        else
        {
          if (IMOSLoggingEnabled())
          {
            unint64_t v28 = OSLogHandleForIMFoundationCategory();
            if (os_log_type_enabled(v28, OS_LOG_TYPE_INFO))
            {
              *(_WORD *)uint64_t v34 = 0;
              _os_log_impl(&dword_1A0772000, v28, OS_LOG_TYPE_INFO, "Calling UserSafety -analyzeImageFile:completionHandler:", v34, 2u);
            }
          }
          long long v27 = [*(id *)(a1 + 40) userSafetyClient];
          [v27 analyzeImageFile:*(void *)(a1 + 32) completionHandler:v22];
        }

        objc_destroyWeak(v32);
        objc_destroyWeak(&location);
        _Block_object_dispose(buf, 8);
      }
    }
  }
  else
  {
    if (!*(void *)(a1 + 56)) {
      return;
    }
    if (IMOSLoggingEnabled())
    {
      char v12 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v12, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)long long buf = 134217984;
        *(void *)&uint8_t buf[4] = 2;
        _os_log_impl(&dword_1A0772000, v12, OS_LOG_TYPE_INFO, "Given fileURL is not valid. Calling completionHandler with error code %ld", buf, 0xCu);
      }
    }
    uint64_t v13 = *(void *)(a1 + 56);
    uint64_t v14 = (void *)MEMORY[0x1E4F28C58];
    uint64_t v43 = *MEMORY[0x1E4F28568];
    v44[0] = @"Invalid content attachment URL";
    uint64_t v6 = [MEMORY[0x1E4F1C9E8] dictionaryWithObjects:v44 forKeys:&v43 count:1];
    uint64_t v15 = [v14 errorWithDomain:@"com.apple.IMSharedUtilities.IMCommSafetyRequestsManager" code:2 userInfo:v6];
    (*(void (**)(uint64_t, void, void *))(v13 + 16))(v13, 0, v15);
  }
}

uint64_t IMCommSafetyContentAttachmentTypeForURL(void *a1)
{
  uint64_t v1 = [a1 lastPathComponent];
  uint64_t v2 = IMUTITypeForFilename(v1);

  if (IMUTITypeIsPhoto((BOOL)v2) || IMUTITypeIsAnimatedImage((BOOL)v2))
  {
    uint64_t v3 = 0;
  }
  else if (IMUTITypeIsVideo((BOOL)v2))
  {
    uint64_t v3 = 1;
  }
  else
  {
    uint64_t v3 = 2;
  }

  return v3;
}

void sub_1A07F2C38(uint64_t a1, unsigned int a2, void *a3)
{
  uint64_t v25 = *MEMORY[0x1E4F143B8];
  id v5 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  int v7 = [WeakRetained _shouldForceSensitivityResult];

  block[0] = MEMORY[0x1E4F143A8];
  block[1] = 3221225472;
  block[2] = sub_1A07F2E68;
  block[3] = &unk_1E5A120E0;
  objc_copyWeak(&v17, (id *)(a1 + 48));
  uint64_t v8 = v7 | a2;
  char v18 = v8;
  void block[4] = *(void *)(a1 + 40);
  dispatch_async(MEMORY[0x1E4F14428], block);
  uint64_t v9 = *(void *)(a1 + 32);
  if (v9)
  {
    (*(void (**)(uint64_t, uint64_t, id))(v9 + 16))(v9, v8, v5);
    if (*(void *)(a1 + 56)) {
      int v10 = @"video";
    }
    else {
      int v10 = @"image";
    }
    uint64_t v11 = v10;
    if (IMOSLoggingEnabled())
    {
      char v12 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v12, OS_LOG_TYPE_INFO))
      {
        uint64_t v13 = [v5 localizedDescription];
        uint64_t v14 = (void *)v13;
        uint64_t v15 = @"NO";
        *(_DWORD *)long long buf = 138412802;
        if (v8) {
          uint64_t v15 = @"YES";
        }
        uint64_t v20 = v15;
        __int16 v21 = 2112;
        uint64_t v22 = v11;
        __int16 v23 = 2112;
        uint64_t v24 = v13;
        _os_log_impl(&dword_1A0772000, v12, OS_LOG_TYPE_INFO, "Completed UserSafety analysis with {result=%@}. {attachmentType=%@}. error={%@}.", buf, 0x20u);
      }
    }
  }
  objc_destroyWeak(&v17);
}

void sub_1A07F2E28(_Unwind_Exception *exc_buf, int a2)
{
  if (a2 == 1)
  {
    objc_begin_catch(exc_buf);
    objc_end_catch();
    JUMPOUT(0x1A07F2DE4);
  }
  objc_destroyWeak(v2);
  _Unwind_Resume(exc_buf);
}

void sub_1A07F2E68(uint64_t a1)
{
  if (IMOSLoggingEnabled())
  {
    uint64_t v2 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)char v4 = 0;
      _os_log_impl(&dword_1A0772000, v2, OS_LOG_TYPE_INFO, "Dispatched to main queue to cache the sensitivity result.", v4, 2u);
    }
  }
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained _setSensitiveValue:*(unsigned __int8 *)(a1 + 48) forIdentifier:*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 40)];
}

void sub_1A07F2F20(double a1, uint64_t a2, void *a3)
{
  uint64_t v8 = *MEMORY[0x1E4F143B8];
  id v4 = a3;
  if (IMOSLoggingEnabled())
  {
    id v5 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
    {
      int v6 = 134217984;
      double v7 = a1;
      _os_log_impl(&dword_1A0772000, v5, OS_LOG_TYPE_INFO, "Video analysis ongoing with progress={%f}", (uint8_t *)&v6, 0xCu);
    }
  }
}

uint64_t sub_1A07F328C(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

Class sub_1A07F33E0(uint64_t a1)
{
  uint64_t v7 = *MEMORY[0x1E4F143B8];
  v4[0] = 0;
  if (!qword_1E94FF540)
  {
    v4[1] = MEMORY[0x1E4F143A8];
    v4[2] = 3221225472;
    v4[3] = sub_1A07F3524;
    v4[4] = &unk_1E5A10168;
    void v4[5] = v4;
    long long v5 = xmmword_1E5A12198;
    uint64_t v6 = 0;
    qword_1E94FF540 = _sl_dlopen();
    uint64_t v2 = (void *)v4[0];
    if (!qword_1E94FF540)
    {
      abort_report_np();
      goto LABEL_7;
    }
    if (v4[0]) {
      goto LABEL_8;
    }
  }
  while (1)
  {
    Class result = objc_getClass("MADService");
    *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = result;
    if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24)) {
      break;
    }
LABEL_7:
    uint64_t v2 = (void *)sub_1A09F0234();
LABEL_8:
    free(v2);
  }
  qword_1E94FF538 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t sub_1A07F3524()
{
  uint64_t result = _sl_dlopen();
  qword_1E94FF540 = result;
  return result;
}

uint64_t sub_1A07F35F8()
{
  os_log_t v0 = os_log_create("com.apple.Messages", "IMRuntimeTest");
  uint64_t v1 = qword_1E94FF548;
  qword_1E94FF548 = (uint64_t)v0;

  return MEMORY[0x1F41817F8](v0, v1);
}

uint64_t sub_1A07F3940(uint64_t a1)
{
  return MEMORY[0x1F4181798](*(void *)(a1 + 32), sel_finishTest);
}

void sub_1A07F4434(_Unwind_Exception *a1)
{
  _Block_object_dispose(&v2, 8);
  _Block_object_dispose(&v3, 8);
  _Block_object_dispose(&v4, 8);
  _Unwind_Resume(a1);
}

void sub_1A07F44E8(void *a1, void *a2, void *a3, void *a4)
{
  uint64_t v20 = *MEMORY[0x1E4F143B8];
  id v8 = a2;
  id v9 = a3;
  id v10 = a4;
  if (IMOSLoggingEnabled())
  {
    uint64_t v11 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
    {
      char v12 = @"YES";
      if (!v8) {
        char v12 = @"NO";
      }
      int v18 = 138412290;
      int v19 = v12;
      _os_log_impl(&dword_1A0772000, v11, OS_LOG_TYPE_INFO, "BlastDoor defused payload data successfully: %@", (uint8_t *)&v18, 0xCu);
    }
  }
  uint64_t v13 = *(void *)(a1[4] + 8);
  if (v8 && !*(void *)(v13 + 40))
  {
    objc_storeStrong((id *)(*(void *)(a1[5] + 8) + 40), a2);
    uint64_t v14 = (void **)(*(void *)(a1[6] + 8) + 40);
    uint64_t v15 = v9;
  }
  else
  {
    uint64_t v14 = (void **)(v13 + 40);
    uint64_t v15 = v10;
  }
  id v16 = v15;
  id v17 = *v14;
  void *v14 = v16;
}

uint64_t sub_1A07F5F34()
{
  os_log_t v0 = objc_alloc_init(IMPreviewGeneratorManager);
  uint64_t v1 = qword_1EB4A60C8;
  qword_1EB4A60C8 = (uint64_t)v0;

  return MEMORY[0x1F41817F8](v0, v1);
}

BOOL sub_1A07F7A24(void *a1)
{
  id v1 = a1;
  uint64_t v2 = (unsigned char *)[v1 UTF8String];
  if (!v2 || (int v3 = *v2, !*v2))
  {

LABEL_15:
    BOOL v10 = 0;
    id v8 = 0;
    id v9 = 0;
    goto LABEL_16;
  }
  unint64_t v4 = 0;
  long long v5 = v2 + 1;
  do
  {
    if (v3 == 59) {
      ++v4;
    }
    int v6 = *v5++;
    int v3 = v6;
    if (v6) {
      BOOL v7 = v4 >= 2;
    }
    else {
      BOOL v7 = 1;
    }
  }
  while (!v7);

  if (v4 < 2) {
    goto LABEL_15;
  }
  IMComponentsFromChatGUID();
  id v8 = 0;
  id v9 = 0;
  if ([v8 length]) {
    BOOL v10 = [v9 length] != 0;
  }
  else {
    BOOL v10 = 0;
  }
LABEL_16:

  return v10;
}

BOOL sub_1A07F7B10(uint64_t a1)
{
  id v1 = (void *)[objc_alloc(MEMORY[0x1E4F29128]) initWithUUIDString:a1];
  BOOL v2 = v1 != 0;

  return v2;
}

uint64_t sub_1A07F854C(uint64_t a1, void *a2, void *a3)
{
  id v4 = a2;
  id v5 = a3;
  objc_opt_class();
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) == 0 || (objc_opt_class(), objc_opt_class(), (objc_opt_isKindOfClass() & 1) == 0))
  {
    objc_opt_class();
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) != 0
      && (objc_opt_class(), objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0))
    {
      BOOL v7 = [v4 identifier];
      uint64_t v8 = [v5 identifier];
    }
    else
    {
      objc_opt_class();
      objc_opt_class();
      if ((objc_opt_isKindOfClass() & 1) == 0
        || (objc_opt_class(), objc_opt_class(), (objc_opt_isKindOfClass() & 1) == 0))
      {
        BOOL v7 = [v4 firstObject];
        id v9 = [v5 firstObject];
        BOOL v10 = [v9 identifier];
        uint64_t v11 = [v7 identifier];
        uint64_t v6 = [v10 compare:v11];

        goto LABEL_12;
      }
      BOOL v7 = [v4 firstObject];
      uint64_t v8 = [v5 firstObject];
    }
    id v9 = (void *)v8;
    uint64_t v6 = [v7 compare:v8];
LABEL_12:

    goto LABEL_13;
  }
  uint64_t v6 = [v5 compare:v4];
LABEL_13:

  return v6;
}

void sub_1A07F88F8(void *a1)
{
  id v1 = a1;
  BOOL v2 = IMDefaultServiceCapabilities();
  id v7 = (id)[v2 mutableCopy];

  int v3 = [v1 objectForKeyedSubscript:IMServicePropertyCapabilities];
  [v7 addEntriesFromDictionary:v3];

  [v1 setObject:v7 forKeyedSubscript:IMServicePropertyCapabilities];
  id v4 = IMDefaultServiceHybridCapabilities();
  id v5 = (void *)[v4 mutableCopy];

  uint64_t v6 = [v1 objectForKeyedSubscript:@"HybridCapabilities"];
  [v5 addEntriesFromDictionary:v6];

  [v1 setObject:v5 forKeyedSubscript:@"HybridCapabilities"];
}

void sub_1A07F89F4(void *a1)
{
  id v10 = a1;
  id v1 = [v10 objectForKeyedSubscript:@"RegionCapabilities"];
  if ([v1 count])
  {
    BOOL v2 = (void *)MGGetStringAnswer();
    if (v2)
    {
      int v3 = [v1 objectForKeyedSubscript:v2];
      if ([v3 count])
      {
        if (_IMWillLog())
        {
          id v9 = v2;
          _IMAlwaysLog();
        }
        uint64_t v4 = objc_msgSend(v10, "objectForKeyedSubscript:", IMServicePropertyCapabilities, v9);
        id v5 = (void *)v4;
        uint64_t v6 = (void *)MEMORY[0x1E4F1CC08];
        if (v4) {
          uint64_t v6 = (void *)v4;
        }
        id v7 = v6;

        uint64_t v8 = (void *)[v7 mutableCopy];
        [v8 addEntriesFromDictionary:v3];
        [v10 setObject:v8 forKeyedSubscript:IMServicePropertyCapabilities];
      }
    }
  }
}

id IMServicePropertiesFromIMServiceBundle(void *a1)
{
  id v1 = a1;
  BOOL v2 = (void *)MEMORY[0x1E4F1C9E8];
  int v3 = [v1 pathForResource:@"ServiceProperties" ofType:@"plist"];
  uint64_t v4 = [v2 dictionaryWithContentsOfFile:v3];

  id v5 = [v4 objectForKey:*MEMORY[0x1E4F6C068]];
  uint64_t v6 = (void *)[v4 mutableCopy];
  uint64_t v7 = *MEMORY[0x1E4F6C010];
  uint64_t v8 = [v4 objectForKey:*MEMORY[0x1E4F6C010]];
  if (v8)
  {
    id v9 = [v1 localizedStringForKey:v8 value:&stru_1EF2CAD28 table:v5];
    [v6 setObject:v9 forKey:v7];
  }
  uint64_t v10 = *MEMORY[0x1E4F6C088];
  uint64_t v11 = [v4 objectForKey:*MEMORY[0x1E4F6C088]];
  char v12 = [v1 localizedStringForKey:v11 value:&stru_1EF2CAD28 table:v5];
  [v6 setObject:v12 forKey:v10];

  uint64_t v13 = *MEMORY[0x1E4F6C0C8];
  uint64_t v14 = [v4 objectForKey:*MEMORY[0x1E4F6C0C8]];
  uint64_t v15 = [v1 localizedStringForKey:v14 value:&stru_1EF2CAD28 table:v5];
  [v6 setObject:v15 forKey:v13];

  sub_1A07F88F8(v6);
  sub_1A07F89F4(v6);

  return v6;
}

id sub_1A07F8FA4()
{
  qword_1E94FF558 = (uint64_t)objc_alloc_init(MEMORY[0x1E4F28E08]);
  qword_1E94FF560 = (uint64_t)objc_alloc_init(MEMORY[0x1E4F1CA60]);
  id result = objc_alloc_init(MEMORY[0x1E4F1CA80]);
  qword_1E94FF568 = (uint64_t)result;
  return result;
}

void sub_1A07F94D8(_Unwind_Exception *a1, int a2)
{
  if (a2 == 1)
  {
    objc_begin_catch(a1);
    objc_end_catch();
    JUMPOUT(0x1A07F9498);
  }
  _Unwind_Resume(a1);
}

void sub_1A07F9E24(_Unwind_Exception *a1, int a2)
{
  if (a2 == 1)
  {
    objc_begin_catch(a1);
    objc_end_catch();
    JUMPOUT(0x1A07F9DC0);
  }
  _Unwind_Resume(a1);
}

void sub_1A07FA010(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, long long a9)
{
  if (a2 == 1)
  {
    id v9 = objc_begin_catch(exception_object);
    if (IMOSLoggingEnabled())
    {
      uint64_t v10 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
      {
        LODWORD(a9) = 138412290;
        *(void *)((char *)&a9 + 4) = v9;
        _os_log_impl(&dword_1A0772000, v10, OS_LOG_TYPE_INFO, "UnarchiverDecoder, caught an exception trying to decode attribution info array %@", (uint8_t *)&a9, 0xCu);
      }
    }
    objc_end_catch();
    JUMPOUT(0x1A07F9FC0);
  }
  _Unwind_Resume(exception_object);
}

id IMGetAttributedInfoArrayAllowlistedClasses()
{
  uint64_t v11 = *MEMORY[0x1E4F143B8];
  os_log_t v0 = (void *)MEMORY[0x1E4F1CAD0];
  uint64_t v4 = objc_opt_class();
  uint64_t v5 = objc_opt_class();
  uint64_t v6 = objc_opt_class();
  uint64_t v7 = objc_opt_class();
  uint64_t v8 = objc_opt_class();
  uint64_t v9 = objc_opt_class();
  uint64_t v10 = objc_opt_class();
  id v1 = [MEMORY[0x1E4F1C978] arrayWithObjects:&v4 count:7];
  BOOL v2 = objc_msgSend(v0, "setWithArray:", v1, v4, v5, v6, v7, v8, v9);

  return v2;
}

void IMRemovePrefixFromMentions(void *a1)
{
  id v1 = a1;
  uint64_t v2 = [v1 length];
  v4[0] = MEMORY[0x1E4F143A8];
  v4[1] = 3221225472;
  v4[2] = sub_1A07FA28C;
  v4[3] = &unk_1E5A11C80;
  id v5 = v1;
  id v3 = v1;
  objc_msgSend(v3, "enumerateAttribute:inRange:options:usingBlock:", @"__kIMMentionConfirmedMention", 0, v2, 0, v4);
}

void sub_1A07FA28C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  if (a4 >= 2)
  {
    uint64_t v6 = [*(id *)(a1 + 32) string];
    uint64_t v7 = [v6 substringFromIndex:a3];
    int v8 = [v7 hasPrefix:@"@"];

    if (v8)
    {
      uint64_t v9 = *(void **)(a1 + 32);
      objc_msgSend(v9, "deleteCharactersInRange:", a3, 1);
    }
  }
}

uint64_t IMMentionHandleAllowedCharacterSet()
{
  return [MEMORY[0x1E4F28B88] URLPathAllowedCharacterSet];
}

id sub_1A07FA340()
{
  if (qword_1E94FF580 != -1) {
    dispatch_once(&qword_1E94FF580, &unk_1EF2BF520);
  }
  os_log_t v0 = (void *)qword_1E94FF578;

  return v0;
}

void sub_1A07FA394()
{
  os_log_t v0 = [MEMORY[0x1E4F28B88] whitespaceAndNewlineCharacterSet];
  id v3 = (id)[v0 mutableCopy];

  objc_msgSend(v3, "addCharactersInString:", @"*({[/_'\"");
  uint64_t v1 = [v3 copy];
  uint64_t v2 = (void *)qword_1E94FF578;
  qword_1E94FF578 = v1;
}

void IMEnumerateMentionsInString(void *a1, uint64_t a2, void *a3)
{
  id v5 = a1;
  id v6 = a3;
  uint64_t v14 = 0;
  uint64_t v15 = &v14;
  uint64_t v16 = 0x2020000000;
  char v17 = 0;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 3221225472;
  aBlock[2] = sub_1A07FA574;
  aBlock[3] = &unk_1E5A12238;
  id v7 = v5;
  id v11 = v7;
  id v8 = v6;
  id v12 = v8;
  uint64_t v13 = &v14;
  uint64_t v9 = _Block_copy(aBlock);
  objc_msgSend(v7, "enumerateSubstringsInRange:options:usingBlock:", 0, objc_msgSend(v7, "length"), 3, v9);
  if (!*((unsigned char *)v15 + 24)) {
    (*((void (**)(void *, __CFString *, uint64_t, void, uint64_t, void, uint64_t *))v9 + 2))(v9, &stru_1EF2CAD28, a2, 0, a2, 0, v15 + 3);
  }

  _Block_object_dispose(&v14, 8);
}

void sub_1A07FA55C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A07FA574(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unsigned char *a7)
{
  if (a2)
  {
    if (a3)
    {
      unint64_t v11 = a3 - 1;
      if ([*(id *)(a1 + 32) characterAtIndex:a3 - 1] == 64)
      {
        if (a3 < 2
          || (uint64_t v12 = [*(id *)(a1 + 32) characterAtIndex:a3 - 2],
              sub_1A07FA340(),
              uint64_t v13 = objc_claimAutoreleasedReturnValue(),
              int v14 = [v13 characterIsMember:v12],
              v13,
              v11 != 0x7FFFFFFFFFFFFFFFLL)
          && v14)
        {
          uint64_t v15 = a4 + 1;
          uint64_t v16 = *(void *)(a1 + 40);
          char v17 = objc_msgSend(*(id *)(a1 + 32), "substringWithRange:", v11, v15);
          (*(void (**)(uint64_t, void *, unint64_t, uint64_t, uint64_t))(v16 + 16))(v16, v17, v11, v15, *(void *)(*(void *)(a1 + 48) + 8) + 24);

          if (*(unsigned char *)(*(void *)(*(void *)(a1 + 48) + 8) + 24)) {
            *a7 = 1;
          }
        }
      }
    }
  }
}

uint64_t IMRangeOfCurrentTypedMention(void *a1, uint64_t a2)
{
  id v3 = a1;
  uint64_t v7 = 0;
  id v8 = &v7;
  uint64_t v9 = 0x3010000000;
  uint64_t v10 = &unk_1A0A86C2F;
  long long v11 = xmmword_1A0A07980;
  v6[0] = MEMORY[0x1E4F143A8];
  v6[1] = 3221225472;
  _OWORD v6[2] = sub_1A07FA764;
  v6[3] = &unk_1E5A12260;
  void v6[4] = &v7;
  void v6[5] = a2;
  IMEnumerateMentionsInString(v3, a2, v6);
  uint64_t v4 = v8[4];
  _Block_object_dispose(&v7, 8);

  return v4;
}

void sub_1A07FA74C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1A07FA764(uint64_t result, uint64_t a2, unint64_t a3, unint64_t a4, char *a5)
{
  unint64_t v5 = *(void *)(result + 40);
  BOOL v7 = v5 >= a3 && v5 - a3 < a4 || v5 == a3 + a4;
  char v8 = v7;
  if (v7)
  {
    uint64_t v9 = *(void *)(*(void *)(result + 32) + 8);
    *(void *)(v9 + 32) = a3;
    *(void *)(v9 + 40) = a4;
  }
  *a5 = v8;
  return result;
}

id IMMentionMeTokensForContact(void *a1, char a2)
{
  uint64_t v92 = *MEMORY[0x1E4F143B8];
  id v3 = a1;
  uint64_t v4 = [MEMORY[0x1E4F1CA80] set];
  if (v3)
  {
    long long v85 = 0u;
    long long v86 = 0u;
    long long v83 = 0u;
    long long v84 = 0u;
    unint64_t v5 = [v3 phoneNumbers];
    uint64_t v6 = [v5 countByEnumeratingWithState:&v83 objects:v91 count:16];
    if (v6)
    {
      uint64_t v7 = v6;
      uint64_t v8 = *(void *)v84;
      do
      {
        for (uint64_t i = 0; i != v7; ++i)
        {
          if (*(void *)v84 != v8) {
            objc_enumerationMutation(v5);
          }
          uint64_t v10 = [*(id *)(*((void *)&v83 + 1) + 8 * i) value];
          long long v11 = [v10 stringValue];
          uint64_t v12 = [v11 _stripFZIDPrefix];

          if ([v12 length])
          {
            uint64_t v13 = IMNormalizePhoneNumber((uint64_t)v12);

            if ([v13 length]) {
              [v4 addObject:v13];
            }
          }
          else
          {
            uint64_t v13 = v12;
          }
        }
        uint64_t v7 = [v5 countByEnumeratingWithState:&v83 objects:v91 count:16];
      }
      while (v7);
    }

    long long v81 = 0u;
    long long v82 = 0u;
    long long v79 = 0u;
    long long v80 = 0u;
    int v14 = [v3 emailAddresses];
    uint64_t v15 = [v14 countByEnumeratingWithState:&v79 objects:v90 count:16];
    if (v15)
    {
      uint64_t v16 = v15;
      uint64_t v17 = *(void *)v80;
      do
      {
        for (uint64_t j = 0; j != v16; ++j)
        {
          if (*(void *)v80 != v17) {
            objc_enumerationMutation(v14);
          }
          int v19 = [*(id *)(*((void *)&v79 + 1) + 8 * j) value];
          uint64_t v20 = [v19 _stripFZIDPrefix];

          if ([v20 length]) {
            [v4 addObject:v20];
          }
        }
        uint64_t v16 = [v14 countByEnumeratingWithState:&v79 objects:v90 count:16];
      }
      while (v16);
    }

    if ((a2 & 1) == 0)
    {
      long long v77 = 0u;
      long long v78 = 0u;
      long long v75 = 0u;
      long long v76 = 0u;
      __int16 v21 = [v3 urlAddresses];
      uint64_t v22 = [v21 countByEnumeratingWithState:&v75 objects:v89 count:16];
      if (v22)
      {
        uint64_t v23 = v22;
        uint64_t v24 = *(void *)v76;
        do
        {
          for (uint64_t k = 0; k != v23; ++k)
          {
            if (*(void *)v76 != v24) {
              objc_enumerationMutation(v21);
            }
            uint64_t v26 = *(void **)(*((void *)&v75 + 1) + 8 * k);
            long long v27 = [v26 value];
            uint64_t v28 = [v27 length];

            if (v28)
            {
              char v29 = [v26 value];
              [v4 addObject:v29];
            }
          }
          uint64_t v23 = [v21 countByEnumeratingWithState:&v75 objects:v89 count:16];
        }
        while (v23);
      }

      long long v73 = 0u;
      long long v74 = 0u;
      long long v71 = 0u;
      long long v72 = 0u;
      id v30 = [v3 socialProfiles];
      uint64_t v31 = [v30 countByEnumeratingWithState:&v71 objects:v88 count:16];
      if (v31)
      {
        uint64_t v32 = v31;
        uint64_t v33 = *(void *)v72;
        do
        {
          for (uint64_t m = 0; m != v32; ++m)
          {
            if (*(void *)v72 != v33) {
              objc_enumerationMutation(v30);
            }
            uint64_t v35 = [*(id *)(*((void *)&v71 + 1) + 8 * m) value];
            __int16 v36 = [v35 username];
            uint64_t v37 = [v36 length];

            if (v37)
            {
              uint64_t v38 = [v35 username];
              [v4 addObject:v38];
            }
            uint64_t v39 = [v35 userIdentifier];
            uint64_t v40 = [v39 length];

            if (v40)
            {
              uint64_t v41 = [v35 userIdentifier];
              [v4 addObject:v41];
            }
          }
          uint64_t v32 = [v30 countByEnumeratingWithState:&v71 objects:v88 count:16];
        }
        while (v32);
      }

      long long v69 = 0u;
      long long v70 = 0u;
      long long v67 = 0u;
      long long v68 = 0u;
      unint64_t v42 = objc_msgSend(v3, "instantMessageAddresses", 0);
      uint64_t v43 = [v42 countByEnumeratingWithState:&v67 objects:v87 count:16];
      if (v43)
      {
        uint64_t v44 = v43;
        uint64_t v45 = *(void *)v68;
        do
        {
          for (uint64_t n = 0; n != v44; ++n)
          {
            if (*(void *)v68 != v45) {
              objc_enumerationMutation(v42);
            }
            unint64_t v47 = [*(id *)(*((void *)&v67 + 1) + 8 * n) value];
            uint64_t v48 = [v47 username];
            uint64_t v49 = [v48 length];

            if (v49)
            {
              uint64_t v50 = [v47 username];
              [v4 addObject:v50];
            }
          }
          uint64_t v44 = [v42 countByEnumeratingWithState:&v67 objects:v87 count:16];
        }
        while (v44);
      }

      __int16 v51 = [v3 givenName];
      uint64_t v52 = [v51 length];

      if (v52)
      {
        uint64_t v53 = [v3 givenName];
        [v4 addObject:v53];
      }
      char v54 = [v3 middleName];
      uint64_t v55 = [v54 length];

      if (v55)
      {
        long long v56 = [v3 middleName];
        [v4 addObject:v56];
      }
      long long v57 = [v3 familyName];
      uint64_t v58 = [v57 length];

      if (v58)
      {
        char v59 = [v3 familyName];
        [v4 addObject:v59];
      }
      uint64_t v60 = [v3 previousFamilyName];
      uint64_t v61 = [v60 length];

      if (v61)
      {
        uint64_t v62 = [v3 previousFamilyName];
        [v4 addObject:v62];
      }
      unint64_t v63 = [v3 nickname];
      uint64_t v64 = [v63 length];

      if (v64)
      {
        v65 = [v3 nickname];
        [v4 addObject:v65];
      }
    }
  }

  return v4;
}

id IMMentionContactKeysForMe()
{
  v8[12] = *MEMORY[0x1E4F143B8];
  uint64_t v0 = *MEMORY[0x1E4F1ADF0];
  v8[0] = *MEMORY[0x1E4F1AEB0];
  v8[1] = v0;
  uint64_t v1 = *MEMORY[0x1E4F1ADE0];
  v8[2] = *MEMORY[0x1E4F1AEA0];
  void v8[3] = v1;
  uint64_t v2 = *MEMORY[0x1E4F1AEB8];
  void v8[4] = *MEMORY[0x1E4F1AF30];
  v8[5] = v2;
  uint64_t v3 = *MEMORY[0x1E4F1AEE0];
  v8[6] = *MEMORY[0x1E4F1AEC0];
  v8[7] = v3;
  uint64_t v4 = *MEMORY[0x1E4F1AFB0];
  v8[8] = *MEMORY[0x1E4F1ADC8];
  v8[9] = v4;
  uint64_t v5 = *MEMORY[0x1E4F1AE60];
  v8[10] = *MEMORY[0x1E4F1AF78];
  v8[11] = v5;
  uint64_t v6 = [MEMORY[0x1E4F1C978] arrayWithObjects:v8 count:12];

  return v6;
}

uint64_t sub_1A07FC4CC(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "compare:");
}

uint64_t sub_1A07FC630()
{
  uint64_t v0 = [MEMORY[0x1E4F1CB18] standardUserDefaults];
  uint64_t v1 = [v0 objectForKey:@"IncludeSmartRepliesKey"];
  uint64_t v2 = (void *)v1;
  uint64_t v3 = (void *)MEMORY[0x1E4F1CC38];
  if (v1) {
    uint64_t v3 = (void *)v1;
  }
  id v4 = v3;

  uint64_t v5 = [v4 BOOLValue];
  return v5;
}

void sub_1A07FC8A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A07FC8BC(uint64_t a1, void *a2)
{
}

__CFArray *sub_1A07FCB80(void *a1, void *a2, int a3)
{
  uint64_t v41 = *MEMORY[0x1E4F143B8];
  id v4 = a1;
  id v29 = a2;
  theArray = [MEMORY[0x1E4F1CA48] array];
  uint64_t v5 = [MEMORY[0x1E4F1C9C8] date];
  uint64_t v32 = [MEMORY[0x1E4F1C9A8] currentCalendar];
  uint64_t v24 = (void *)v5;
  uint64_t v33 = [v32 components:24 fromDate:v5];
  long long v36 = 0u;
  long long v37 = 0u;
  long long v38 = 0u;
  long long v39 = 0u;
  id v6 = v4;
  uint64_t v7 = [v6 countByEnumeratingWithState:&v36 objects:v40 count:16];
  if (v7)
  {
    uint64_t v8 = v7;
    uint64_t v9 = @"Handle \"%@\" is a business ID, for SpecialEventReply.";
    uint64_t v10 = *(void *)v37;
    uint64_t v34 = *MEMORY[0x1E4F1AD90];
    uint64_t v25 = *MEMORY[0x1E4F1ADF0];
    do
    {
      uint64_t v11 = 0;
      do
      {
        if (*(void *)v37 != v10) {
          objc_enumerationMutation(v6);
        }
        id v12 = *(id *)(*((void *)&v36 + 1) + 8 * v11);
        if (MEMORY[0x1A62278A0]())
        {
          if ((_IMWillLog() & 1) == 0) {
            goto LABEL_34;
          }
LABEL_11:
          _IMAlwaysLog();
          goto LABEL_34;
        }
        if (!MEMORY[0x1A62278D0](v12))
        {
          if (a3)
          {
            uint64_t v13 = +[IMContactUtilities getContactGivenNameAndBirthdayForHandleID:v12];
          }
          else
          {
            if (qword_1E94FF5D0 != -1) {
              dispatch_once(&qword_1E94FF5D0, &unk_1EF2C0AE0);
            }
            if (!off_1E94FF5C8) {
              goto LABEL_34;
            }
            uint64_t v13 = off_1E94FF5C8(v12);
          }
          int v14 = (void *)v13;

          if (!v14) {
            goto LABEL_35;
          }
          uint64_t v15 = [v14 objectForKey:v34];
          if (v15)
          {
            uint64_t v16 = v9;
            uint64_t v17 = [v32 components:24 fromDate:v15];
            uint64_t v18 = [v17 month];
            if (v18 == [v33 month])
            {
              uint64_t v19 = [v17 day];
              if (v19 == [v33 day])
              {
                if ((unint64_t)[v6 count] < 2)
                {
                  uint64_t v22 = IMSharedUtilitiesFrameworkBundle();
                  value = sub_1A07FE71C(v29, @"HAPPY_BIRTHDAY", v22);

                  if (!theArray) {
                    goto LABEL_27;
                  }
                  __int16 v21 = value;
                  if (value) {
                    CFArrayAppendValue(theArray, value);
                  }
                }
                else
                {
                  value = [v14 objectForKey:v25];
                  uint64_t v26 = NSString;
                  uint64_t v28 = IMSharedUtilitiesFrameworkBundle();
                  uint64_t v20 = sub_1A07FE71C(v29, @"HAPPY_BIRTHDAY_TARGETED", v28);
                  long long v27 = [v26 stringWithValidatedFormat:v20, @"Happy Birthday, %@!", 0, value validFormatSpecifiers error];

                  if (theArray && v27) {
                    CFArrayAppendValue(theArray, v27);
                  }

LABEL_27:
                  __int16 v21 = value;
                }
              }
            }

            uint64_t v9 = v16;
          }

          id v12 = v14;
          goto LABEL_34;
        }
        if (_IMWillLog()) {
          goto LABEL_11;
        }
LABEL_34:

LABEL_35:
        ++v11;
      }
      while (v8 != v11);
      uint64_t v8 = [v6 countByEnumeratingWithState:&v36 objects:v40 count:16];
    }
    while (v8);
  }

  return theArray;
}

void sub_1A07FCF94(uint64_t a1, void *a2)
{
  uint64_t v45 = *MEMORY[0x1E4F143B8];
  long long v31 = 0u;
  long long v32 = 0u;
  long long v33 = 0u;
  long long v34 = 0u;
  id obj = a2;
  uint64_t v28 = [obj countByEnumeratingWithState:&v31 objects:v44 count:16];
  if (v28)
  {
    uint64_t v27 = *(void *)v32;
    do
    {
      for (uint64_t i = 0; i != v28; ++i)
      {
        if (*(void *)v32 != v27) {
          objc_enumerationMutation(obj);
        }
        id v4 = *(void **)(*((void *)&v31 + 1) + 8 * i);
        uint64_t v5 = [v4 title];
        if ([v5 length])
        {
          id v6 = *(void **)(a1 + 32);
          uint64_t v7 = [v5 localizedLowercaseString];
          LODWORD(v6) = [v6 containsObject:v7];

          if (v6)
          {
            if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_INFO))
            {
              *(_WORD *)long long buf = 0;
              _os_log_impl(&dword_1A0772000, MEMORY[0x1E4F14500], OS_LOG_TYPE_INFO, "IMReplySuggestionGenerator - SROSmartRepliesSuggestion collides with an existing special event suggestion.", buf, 2u);
            }
          }
          else
          {
            uint64_t v40 = 0;
            uint64_t v41 = &v40;
            uint64_t v42 = 0x2050000000;
            uint64_t v8 = (void *)qword_1E94FF5E8;
            uint64_t v43 = qword_1E94FF5E8;
            if (!qword_1E94FF5E8)
            {
              *(void *)long long buf = MEMORY[0x1E4F143A8];
              uint64_t v36 = 3221225472;
              long long v37 = sub_1A07FEA38;
              long long v38 = &unk_1E5A10130;
              long long v39 = &v40;
              sub_1A07FEA38((uint64_t)buf);
              uint64_t v8 = (void *)v41[3];
            }
            id v9 = v8;
            _Block_object_dispose(&v40, 8);
            if (objc_opt_isKindOfClass())
            {
              id v10 = v4;
              id v11 = v5;
              id v12 = [v10 attribution];
              uint64_t v13 = (void *)[v12 copy];

              uint64_t v14 = [v10 type];
              if (v14 == 15)
              {
                uint64_t v18 = [v10 metadata];
                uint64_t v19 = [v18 url];
                uint64_t v20 = [v19 absoluteString];

                if ([v20 length]) {
                  __int16 v21 = v20;
                }
                else {
                  __int16 v21 = v11;
                }
                id v16 = v21;

                uint64_t v15 = 4;
              }
              else
              {
                if (v14 == 3) {
                  uint64_t v15 = 3;
                }
                else {
                  uint64_t v15 = 2;
                }
                id v16 = v11;
              }
              uint64_t v17 = [[IMReplySuggestion alloc] initWithType:v15 text:v11];
              [(IMReplySuggestion *)v17 setStringRepresentation:v16];
              [(IMReplySuggestion *)v17 setAttribution:v13];
              uint64_t v22 = objc_opt_class();
              uint64_t v23 = [v10 metadata];
              -[IMReplySuggestion setTintColor:](v17, "setTintColor:", [v22 _tintColorForMetadata:v23]);
            }
            else
            {
              uint64_t v17 = [[IMReplySuggestion alloc] initWithType:0 text:v5];
              id v10 = (id)[v5 copy];
              [(IMReplySuggestion *)v17 setStringRepresentation:v10];
            }

            uint64_t v24 = *(void **)(a1 + 32);
            uint64_t v25 = [v5 localizedLowercaseString];
            [v24 addObject:v25];

            [*(id *)(a1 + 40) addObject:v17];
          }
        }
        else if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_ERROR))
        {
          sub_1A09F0718(&v29, v30);
        }
      }
      uint64_t v28 = [obj countByEnumeratingWithState:&v31 objects:v44 count:16];
    }
    while (v28);
  }

  (*(void (**)(void))(*(void *)(a1 + 48) + 16))();
}

void sub_1A07FD3C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31)
{
}

void sub_1A07FD5AC(void *a1, void *a2, void *a3)
{
  uint64_t v19 = *MEMORY[0x1E4F143B8];
  id v5 = a1;
  id v6 = a2;
  id v7 = a3;
  long long v14 = 0u;
  long long v15 = 0u;
  long long v16 = 0u;
  long long v17 = 0u;
  uint64_t v8 = [v7 countByEnumeratingWithState:&v14 objects:v18 count:16];
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)v15;
    do
    {
      for (uint64_t i = 0; i != v9; ++i)
      {
        if (*(void *)v15 != v10) {
          objc_enumerationMutation(v7);
        }
        id v12 = *(void **)(*((void *)&v14 + 1) + 8 * i);
        uint64_t v13 = [v12 lowercaseString];
        if (([v6 containsObject:v13] & 1) == 0)
        {
          [v5 addObject:v12];
          [v6 addObject:v13];
        }
      }
      uint64_t v9 = [v7 countByEnumeratingWithState:&v14 objects:v18 count:16];
    }
    while (v9);
  }
}

void sub_1A07FD700(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = [MEMORY[0x1E4F1CA48] array];
  if ([v3 count])
  {
    unint64_t v5 = 0;
    uint64_t v6 = 0;
    unint64_t v7 = 0;
    uint64_t v8 = MEMORY[0x1E4F14500];
    do
    {
      uint64_t v9 = [v3 objectAtIndexedSubscript:v7];
      uint64_t v10 = [v9 title];
      if ([v10 length])
      {
        unsigned int v11 = [v9 isDynamicSuggestion];
        v6 += v11;
        if ((v11 & (v5 == 0)) != 0) {
          unint64_t v5 = v7;
        }
        [v4 addObject:v10];
      }
      else if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
      {
        sub_1A09F0718(&v12, v13);
      }

      ++v7;
    }
    while (v7 < [v3 count]);
  }
  sub_1A07FD5AC(*(void **)(a1 + 32), *(void **)(a1 + 40), v4);
  (*(void (**)(void))(*(void *)(a1 + 48) + 16))();
}

void sub_1A07FDEC4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,char a46)
{
}

id sub_1A07FDEE4()
{
  uint64_t v4 = 0;
  unint64_t v5 = &v4;
  uint64_t v6 = 0x2050000000;
  uint64_t v0 = (void *)qword_1E94FF5F8;
  uint64_t v7 = qword_1E94FF5F8;
  if (!qword_1E94FF5F8)
  {
    v3[0] = MEMORY[0x1E4F143A8];
    v3[1] = 3221225472;
    void v3[2] = sub_1A07FEC00;
    v3[3] = &unk_1E5A10130;
    v3[4] = &v4;
    sub_1A07FEC00((uint64_t)v3);
    uint64_t v0 = (void *)v5[3];
  }
  id v1 = v0;
  _Block_object_dispose(&v4, 8);

  return v1;
}

void sub_1A07FDFB0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_1A07FDFC8()
{
  uint64_t v4 = 0;
  unint64_t v5 = &v4;
  uint64_t v6 = 0x2050000000;
  uint64_t v0 = (void *)qword_1E94FF608;
  uint64_t v7 = qword_1E94FF608;
  if (!qword_1E94FF608)
  {
    v3[0] = MEMORY[0x1E4F143A8];
    v3[1] = 3221225472;
    void v3[2] = sub_1A07FECB0;
    v3[3] = &unk_1E5A10130;
    v3[4] = &v4;
    sub_1A07FECB0((uint64_t)v3);
    uint64_t v0 = (void *)v5[3];
  }
  id v1 = v0;
  _Block_object_dispose(&v4, 8);

  return v1;
}

void sub_1A07FE094(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A07FE0AC(uint64_t a1, void *a2)
{
  id v3 = [a2 suggestions];
  (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_1A07FE1DC()
{
  uint64_t v0 = dispatch_get_global_queue(17, 0);
  dispatch_async(v0, &unk_1EF2BFE40);
}

void sub_1A07FE22C()
{
  id v0 = [sub_1A07FDFC8() sharedManager];
  [v0 primeResponsesExperimentsIfNeeded];
}

void sub_1A07FE3A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A07FE3C0(uint64_t a1, void *a2)
{
  id v14 = a2;
  id v3 = [v14 transferGUID];

  if (!v3)
  {
    uint64_t v4 = [v14 messagePartBody];
    unint64_t v5 = [v4 string];
    uint64_t v6 = *(void **)(*(void *)(*(void *)(a1 + 32) + 8) + 40);
    uint64_t v7 = [v5 trimmedString];
    uint64_t v8 = [v6 stringByAppendingString:v7];
    uint64_t v9 = *(void *)(*(void *)(a1 + 32) + 8);
    uint64_t v10 = *(void **)(v9 + 40);
    *(void *)(v9 + 40) = v8;

    uint64_t v11 = [*(id *)(*(void *)(*(void *)(a1 + 32) + 8) + 40) stringByAppendingString:@" "];
    uint64_t v12 = *(void *)(*(void *)(a1 + 32) + 8);
    uint64_t v13 = *(void **)(v12 + 40);
    *(void *)(v12 + 40) = v11;
  }
}

id sub_1A07FE71C(void *a1, void *a2, void *a3)
{
  id v5 = a1;
  id v6 = a2;
  id v7 = a3;
  uint64_t v14 = 0;
  long long v15 = &v14;
  uint64_t v16 = 0x2020000000;
  uint64_t v8 = (void (*)(id, id, __CFString *, id))off_1E94FF5D8;
  long long v17 = off_1E94FF5D8;
  if (!off_1E94FF5D8)
  {
    v13[0] = MEMORY[0x1E4F143A8];
    v13[1] = 3221225472;
    void v13[2] = sub_1A07FE884;
    v13[3] = &unk_1E5A10130;
    v13[4] = &v14;
    sub_1A07FE884((uint64_t)v13);
    uint64_t v8 = (void (*)(id, id, __CFString *, id))v15[3];
  }
  _Block_object_dispose(&v14, 8);
  if (!v8)
  {
    sub_1A09EEB7C();
    uint64_t v12 = v11;
    _Block_object_dispose(&v14, 8);
    _Unwind_Resume(v12);
  }
  uint64_t v9 = v8(v5, v6, @"IMSharedUtilities", v7);

  return v9;
}

void *sub_1A07FE854()
{
  id result = (void *)MEMORY[0x1A6227920]("IMDCNGivenNameAndBirthdayForHandleID", @"IMDPersistence");
  off_1E94FF5C8 = result;
  return result;
}

void *sub_1A07FE884(uint64_t a1)
{
  uint64_t v8 = *MEMORY[0x1E4F143B8];
  v5[0] = 0;
  if (!qword_1E94FF5E0)
  {
    v5[1] = MEMORY[0x1E4F143A8];
    void v5[2] = 3221225472;
    v5[3] = sub_1A07FE9C4;
    v5[4] = &unk_1E5A10168;
    void v5[5] = v5;
    long long v6 = xmmword_1E5A12350;
    uint64_t v7 = 0;
    qword_1E94FF5E0 = _sl_dlopen();
    id v3 = (void *)v5[0];
    uint64_t v2 = (void *)qword_1E94FF5E0;
    if (qword_1E94FF5E0)
    {
      if (!v5[0]) {
        goto LABEL_5;
      }
    }
    else
    {
      id v3 = (void *)abort_report_np();
    }
    free(v3);
    goto LABEL_5;
  }
  uint64_t v2 = (void *)qword_1E94FF5E0;
LABEL_5:
  id result = dlsym(v2, "WRLocalizedStringForLanguage");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = result;
  off_1E94FF5D8 = *(_UNKNOWN **)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t sub_1A07FE9C4()
{
  uint64_t result = _sl_dlopen();
  qword_1E94FF5E0 = result;
  return result;
}

void sub_1A07FEA38(uint64_t a1)
{
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = objc_getClass("SROSmartRepliesActionSuggestion");
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    qword_1E94FF5E8 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  }
  else
  {
    sub_1A09F075C();
    sub_1A07FEA90();
  }
}

void sub_1A07FEA90()
{
  uint64_t v4 = *MEMORY[0x1E4F143B8];
  v1[0] = 0;
  if (!qword_1E94FF5F0)
  {
    v1[1] = MEMORY[0x1E4F143A8];
    void v1[2] = 3221225472;
    v1[3] = sub_1A07FEB8C;
    v1[4] = &unk_1E5A10168;
    v1[5] = v1;
    long long v2 = xmmword_1E5A12368;
    uint64_t v3 = 0;
    qword_1E94FF5F0 = _sl_dlopen();
  }
  id v0 = (void *)v1[0];
  if (!qword_1E94FF5F0)
  {
    id v0 = (void *)abort_report_np();
    goto LABEL_7;
  }
  if (v1[0]) {
LABEL_7:
  }
    free(v0);
}

uint64_t sub_1A07FEB8C()
{
  uint64_t result = _sl_dlopen();
  qword_1E94FF5F0 = result;
  return result;
}

Class sub_1A07FEC00(uint64_t a1)
{
  sub_1A07FEA90();
  Class result = objc_getClass("SROSmartRepliesMessage");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = result;
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    qword_1E94FF5F8 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  }
  else
  {
    uint64_t v3 = sub_1A09F0784();
    return (Class)sub_1A07FEC58(v3);
  }
  return result;
}

void sub_1A07FEC58(uint64_t a1)
{
  sub_1A07FEA90();
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = objc_getClass("SROSmartRepliesSuggestionRequest");
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    qword_1E94FF600 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  }
  else
  {
    uint64_t v2 = sub_1A09F07AC();
    sub_1A07FECB0(v2);
  }
}

void sub_1A07FECB0(uint64_t a1)
{
  sub_1A07FEA90();
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = objc_getClass("SROSmartRepliesManager");
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    qword_1E94FF608 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  }
  else
  {
    uint64_t v2 = (IMLocationShareStatusChangeItem *)sub_1A09F07D4();
    [(IMLocationShareStatusChangeItem *)v2 dealloc];
  }
}

id sub_1A07FF514(void *a1, uint64_t a2, void *a3, void *a4, uint64_t a5)
{
  id v8 = a3;
  id v9 = a4;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 3221225472;
  aBlock[2] = sub_1A07FF67C;
  aBlock[3] = &unk_1E5A12398;
  id v10 = v8;
  id v21 = v10;
  uint64_t v11 = _Block_copy(aBlock);
  v17[0] = MEMORY[0x1E4F143A8];
  v17[1] = 3221225472;
  v17[2] = sub_1A07FF6C0;
  v17[3] = &unk_1E5A123C0;
  id v18 = v10;
  id v19 = v9;
  id v12 = v9;
  id v13 = v10;
  uint64_t v14 = _Block_copy(v17);
  long long v15 = objc_msgSend(a1, "__im_attributedStringByReplacingAdaptiveImageGlyphFileTransfersUsingIsAdaptiveImageGlyphProvider:replacementTextProvider:removedTransferGUIDsOut:", v11, v14, a5);

  return v15;
}

uint64_t sub_1A07FF67C(uint64_t a1)
{
  id v1 = (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
  uint64_t v2 = [v1 isAdaptiveImageGlyph];

  return v2;
}

id sub_1A07FF6C0(uint64_t a1)
{
  uint64_t v2 = (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
  SEL v3 = (*(void (**)(void))(*(void *)(a1 + 40) + 16))();

  return v3;
}

id sub_1A07FF72C(void *a1, uint64_t a2, void *a3, void *a4, void *a5)
{
  id v7 = a3;
  id v8 = a4;
  uint64_t v9 = [a1 length];
  id v10 = objc_alloc_init(MEMORY[0x1E4F1CA48]);
  id v11 = objc_alloc_init(MEMORY[0x1E4F1CA48]);
  id v12 = objc_alloc_init(MEMORY[0x1E4F1CA70]);
  uint64_t v13 = *MEMORY[0x1E4F6C188];
  v38[0] = MEMORY[0x1E4F143A8];
  v38[1] = 3221225472;
  v38[2] = sub_1A07FF9E4;
  v38[3] = &unk_1E5A123E8;
  id v35 = v7;
  id v42 = v35;
  id v32 = v12;
  id v39 = v32;
  id v14 = v8;
  long long v15 = a1;
  id v34 = v14;
  id v43 = v14;
  id v16 = v10;
  id v40 = v16;
  id v17 = v11;
  id v41 = v17;
  objc_msgSend(a1, "enumerateAttribute:inRange:options:usingBlock:", v13, 0, v9, 0, v38);
  long long v37 = (void *)[a1 mutableCopy];
  uint64_t v18 = [v16 count] - 1;
  if (v18 >= 0)
  {
    do
    {
      id v19 = objc_msgSend(v16, "objectAtIndexedSubscript:", v18, v32, v34, v35);
      uint64_t v20 = [v19 integerValue];

      id v21 = [v17 objectAtIndexedSubscript:v18];
      [v15 attributesAtIndex:v20 effectiveRange:0];
      v23 = uint64_t v22 = v15;
      id v24 = v16;
      uint64_t v25 = (void *)[v23 mutableCopy];
      [v25 removeObjectForKey:v13];
      uint64_t v26 = v13;
      uint64_t v27 = (void *)[objc_alloc(MEMORY[0x1E4F28B18]) initWithString:v21 attributes:v25];
      objc_msgSend(v37, "replaceCharactersInRange:withAttributedString:", v20, 1, v27);

      uint64_t v13 = v26;
      id v16 = v24;

      long long v15 = v22;
      --v18;
    }
    while (v18 != -1);
  }
  uint64_t v28 = objc_msgSend(v37, "copy", v32);
  uint8_t v29 = [v33 array];
  id v30 = v29;
  if (a5) {
    *a5 = v29;
  }

  return v28;
}

uint64_t sub_1A07FF9E4(uint64_t a1, void *a2, unint64_t a3, uint64_t a4)
{
  id v14 = a2;
  objc_opt_class();
  uint64_t isKindOfClass = objc_opt_isKindOfClass();
  id v8 = v14;
  if (isKindOfClass)
  {
    id v9 = v14;
    if ((*(unsigned int (**)(void))(*(void *)(a1 + 56) + 16))())
    {
      [*(id *)(a1 + 32) addObject:v9];
      id v10 = (*(void (**)(void))(*(void *)(a1 + 64) + 16))();
      if (a3 < a3 + a4)
      {
        do
        {
          id v11 = *(void **)(a1 + 40);
          id v12 = [NSNumber numberWithInteger:a3];
          [v11 addObject:v12];

          [*(id *)(a1 + 48) addObject:v10];
          ++a3;
          --a4;
        }
        while (a4);
      }
    }
    id v8 = v14;
  }

  return MEMORY[0x1F41817F8](isKindOfClass, v8);
}

void sub_1A07FFB08(void *a1, uint64_t a2, void *a3, void *a4)
{
  id v6 = a3;
  id v7 = a4;
  uint64_t v8 = [a1 length];
  uint64_t v9 = *MEMORY[0x1E4F6C188];
  v12[0] = MEMORY[0x1E4F143A8];
  v12[1] = 3221225472;
  void v12[2] = sub_1A07FFBF8;
  uint64_t v12[3] = &unk_1E5A12410;
  id v13 = v6;
  id v14 = v7;
  id v10 = v7;
  id v11 = v6;
  objc_msgSend(a1, "enumerateAttribute:inRange:options:usingBlock:", v9, 0, v8, 0, v12);
}

void sub_1A07FFBF8(uint64_t a1, void *a2, unint64_t a3, uint64_t a4)
{
  id v7 = a2;
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    id v8 = v7;
    if ((*(unsigned int (**)(void))(*(void *)(a1 + 32) + 16))()) {
      BOOL v9 = a3 >= a3 + a4;
    }
    else {
      BOOL v9 = 1;
    }
    if (!v9)
    {
      do
      {
        (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
        ++a3;
        --a4;
      }
      while (a4);
    }
  }
}

id sub_1A07FFCD8(void *a1)
{
  uint64_t v2 = [a1 length];
  id v3 = objc_alloc_init(MEMORY[0x1E4F1CA48]);
  uint64_t v4 = *MEMORY[0x1E4F6C188];
  v8[0] = MEMORY[0x1E4F143A8];
  v8[1] = 3221225472;
  v8[2] = sub_1A07FFDCC;
  void v8[3] = &unk_1E5A105B0;
  id v9 = v3;
  id v5 = v3;
  objc_msgSend(a1, "enumerateAttribute:inRange:options:usingBlock:", v4, 0, v2, 0, v8);
  id v6 = [MEMORY[0x1E4F1CAA0] orderedSetWithArray:v5];

  return v6;
}

uint64_t sub_1A07FFDCC(uint64_t a1, void *a2)
{
  id v7 = a2;
  objc_opt_class();
  uint64_t isKindOfClass = objc_opt_isKindOfClass();
  id v4 = v7;
  if (isKindOfClass)
  {
    id v5 = v7;
    if ([v5 length]) {
      [*(id *)(a1 + 32) addObject:v5];
    }

    id v4 = v7;
  }

  return MEMORY[0x1F41817F8](isKindOfClass, v4);
}

uint64_t sub_1A07FFE50(void *a1)
{
  uint64_t v6 = 0;
  id v7 = &v6;
  uint64_t v8 = 0x2020000000;
  char v9 = 0;
  uint64_t v2 = [a1 length];
  v5[0] = MEMORY[0x1E4F143A8];
  v5[1] = 3221225472;
  void v5[2] = sub_1A07FFF2C;
  v5[3] = &unk_1E5A10628;
  v5[4] = &v6;
  objc_msgSend(a1, "enumerateAttribute:inRange:options:usingBlock:", @"CTAdaptiveImageProvider", 0, v2, 0, v5);
  uint64_t v3 = *((unsigned __int8 *)v7 + 24);
  _Block_object_dispose(&v6, 8);
  return v3;
}

void sub_1A07FFF14(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1A07FFF2C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, unsigned char *a5)
{
  if (a2)
  {
    *(unsigned char *)(*(void *)(*(void *)(result + 32) + 8) + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = 1;
    *a5 = 1;
  }
  return result;
}

uint64_t sub_1A07FFF48(void *a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  uint64_t v8 = 0;
  char v9 = &v8;
  uint64_t v10 = 0x2020000000;
  char v11 = 0;
  v7[0] = MEMORY[0x1E4F143A8];
  v7[1] = 3221225472;
  v7[2] = sub_1A080001C;
  void v7[3] = &unk_1E5A12438;
  void v7[4] = &v8;
  objc_msgSend(a1, "__im_enumerateAdaptiveImageGlyphFileTransfersUsingFileTransferProvider:block:", v4, v7);
  uint64_t v5 = *((unsigned __int8 *)v9 + 24);
  _Block_object_dispose(&v8, 8);

  return v5;
}

void sub_1A0800004(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1A080001C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, unsigned char *a5)
{
  *(unsigned char *)(*(void *)(*(void *)(result + 32) + 8) + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = 1;
  *a5 = 1;
  return result;
}

BOOL sub_1A0800034(void *a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  uint64_t v5 = [a1 length];
  uint64_t v6 = [MEMORY[0x1E4F28B88] whitespaceAndNewlineCharacterSet];
  id v7 = [a1 string];
  uint64_t v24 = 0;
  uint64_t v25 = &v24;
  uint64_t v26 = 0x2020000000;
  char v27 = 1;
  uint64_t v20 = 0;
  id v21 = &v20;
  uint64_t v22 = 0x2020000000;
  char v23 = 0;
  uint64_t v8 = *MEMORY[0x1E4F6C188];
  v14[0] = MEMORY[0x1E4F143A8];
  v14[1] = 3221225472;
  void v14[2] = sub_1A08001F4;
  void v14[3] = &unk_1E5A12460;
  id v9 = v7;
  id v15 = v9;
  id v10 = v6;
  id v16 = v10;
  uint64_t v18 = &v24;
  id v11 = v4;
  id v17 = v11;
  id v19 = &v20;
  objc_msgSend(a1, "enumerateAttribute:inRange:options:usingBlock:", v8, 0, v5, 0, v14);
  if (*((unsigned char *)v21 + 24)) {
    BOOL v12 = *((unsigned char *)v25 + 24) != 0;
  }
  else {
    BOOL v12 = 0;
  }

  _Block_object_dispose(&v20, 8);
  _Block_object_dispose(&v24, 8);

  return v12;
}

void sub_1A08001D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v11 - 96), 8);
  _Unwind_Resume(a1);
}

void sub_1A08001F4(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, unsigned char *a5)
{
  id v12 = a2;
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    id v9 = (*(void (**)(void))(*(void *)(a1 + 48) + 16))();
    id v10 = v9;
    if (v9 && [v9 isAdaptiveImageGlyph])
    {
      *(unsigned char *)(*(void *)(*(void *)(a1 + 64) + 8) + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = 1;
    }
    else
    {
      *(unsigned char *)(*(void *)(*(void *)(a1 + 56) + 8) + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = 0;
      *a5 = 1;
    }
  }
  else
  {
    id v10 = objc_msgSend(*(id *)(a1 + 32), "substringWithRange:", a3, a4);
    uint64_t v11 = [v10 stringByTrimmingCharactersInSet:*(void *)(a1 + 40)];
    if ([v11 length])
    {
      *(unsigned char *)(*(void *)(*(void *)(a1 + 56) + 8) + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = 0;
      *a5 = 1;
    }
  }
}

BOOL sub_1A080030C(void *a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  uint64_t v5 = [a1 length];
  uint64_t v6 = [MEMORY[0x1E4F28B88] whitespaceAndNewlineCharacterSet];
  id v7 = [a1 string];
  uint64_t v24 = 0;
  uint64_t v25 = &v24;
  uint64_t v26 = 0x2020000000;
  char v27 = 1;
  uint64_t v20 = 0;
  id v21 = &v20;
  uint64_t v22 = 0x2020000000;
  char v23 = 0;
  uint64_t v8 = *MEMORY[0x1E4F6C188];
  v14[0] = MEMORY[0x1E4F143A8];
  v14[1] = 3221225472;
  void v14[2] = sub_1A08004CC;
  void v14[3] = &unk_1E5A12460;
  id v9 = v7;
  id v15 = v9;
  id v10 = v6;
  id v16 = v10;
  uint64_t v18 = &v24;
  id v11 = v4;
  id v17 = v11;
  id v19 = &v20;
  objc_msgSend(a1, "enumerateAttribute:inRange:options:usingBlock:", v8, 0, v5, 0, v14);
  if (*((unsigned char *)v21 + 24)) {
    BOOL v12 = *((unsigned char *)v25 + 24) != 0;
  }
  else {
    BOOL v12 = 0;
  }

  _Block_object_dispose(&v20, 8);
  _Block_object_dispose(&v24, 8);

  return v12;
}

void sub_1A08004A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v11 - 96), 8);
  _Unwind_Resume(a1);
}

void sub_1A08004CC(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, unsigned char *a5)
{
  id v11 = a2;
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    if ((*(unsigned int (**)(void))(*(void *)(a1 + 48) + 16))())
    {
      *(unsigned char *)(*(void *)(*(void *)(a1 + 64) + 8) + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = 1;
    }
    else
    {
      *(unsigned char *)(*(void *)(*(void *)(a1 + 56) + 8) + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = 0;
      *a5 = 1;
    }
  }
  else
  {
    id v9 = objc_msgSend(*(id *)(a1 + 32), "substringWithRange:", a3, a4);
    id v10 = [v9 stringByTrimmingCharactersInSet:*(void *)(a1 + 40)];
    if ([v10 length])
    {
      *(unsigned char *)(*(void *)(*(void *)(a1 + 56) + 8) + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = 0;
      *a5 = 1;
    }
  }
}

id sub_1A08005D0(void *a1)
{
  uint64_t v2 = (void *)[a1 mutableCopy];
  uint64_t v3 = [a1 length];
  uint64_t v7 = MEMORY[0x1E4F143A8];
  uint64_t v8 = 3221225472;
  id v9 = sub_1A08006B4;
  id v10 = &unk_1E5A12488;
  id v11 = v2;
  BOOL v12 = @"\uFFFD";
  id v4 = v2;
  objc_msgSend(v4, "enumerateAttribute:inRange:options:usingBlock:", @"CTAdaptiveImageProvider", 0, v3, 0, &v7);
  uint64_t v5 = objc_msgSend(v4, "copy", v7, v8, v9, v10);

  return v5;
}

void sub_1A08006B4(uint64_t a1, void *a2, unint64_t a3, uint64_t a4)
{
  id v7 = a2;
  if (v7 && a3 < a3 + a4)
  {
    do
    {
      objc_msgSend(*(id *)(a1 + 32), "replaceCharactersInRange:withString:", a3++, 1, *(void *)(a1 + 40));
      --a4;
    }
    while (a4);
  }
}

void sub_1A0800734(void *a1, uint64_t a2, uint64_t a3, void *a4, void *a5)
{
  id v8 = a4;
  id v9 = a5;
  v12[0] = MEMORY[0x1E4F143A8];
  v12[1] = 3221225472;
  void v12[2] = sub_1A08007FC;
  uint64_t v12[3] = &unk_1E5A124B0;
  id v13 = v8;
  id v14 = v9;
  void v12[4] = a1;
  id v10 = v9;
  id v11 = v8;
  objc_msgSend(a1, "__im_enumerateAdaptiveImageGlyphFileTransfersUsingFileTransferProvider:block:", a3, v12);
}

void sub_1A08007FC(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = *(void *)(a1 + 40);
  id v8 = *(void (**)(uint64_t, id))(v7 + 16);
  id v9 = a2;
  id v10 = v8(v7, v9);
  uint64_t v11 = *(void *)(a1 + 48);
  BOOL v12 = [v9 guid];

  LODWORD(v9) = (*(uint64_t (**)(uint64_t, void *))(v11 + 16))(v11, v12);
  if (v9)
  {
    id v13 = [*(id *)(a1 + 32) attributesAtIndex:a3 effectiveRange:0];
    id v14 = (void *)[objc_alloc(MEMORY[0x1E4F28B18]) initWithString:@"\uFFFD" attributes:v13];
    objc_msgSend(*(id *)(a1 + 32), "replaceCharactersInRange:withAttributedString:", a3, a4, v14);
  }
  else if (v10)
  {
    objc_msgSend(*(id *)(a1 + 32), "addAttribute:value:range:", @"CTAdaptiveImageProvider", v10, a3, a4);
    objc_msgSend(*(id *)(a1 + 32), "addAttribute:value:range:", @"CTEmojiImageProvider", v10, a3, a4);
  }
  else
  {
    id v15 = IMLogHandleForCategory("NSAttributedString+EmojiImages");
    if (os_log_type_enabled(v15, OS_LOG_TYPE_DEBUG)) {
      sub_1A09F07FC(v15);
    }
  }
}

void sub_1A0800968(void *a1, uint64_t a2, uint64_t a3, void *a4, void *a5)
{
  id v8 = a4;
  id v9 = a5;
  v12[0] = MEMORY[0x1E4F143A8];
  v12[1] = 3221225472;
  void v12[2] = sub_1A0800A34;
  uint64_t v12[3] = &unk_1E5A124D8;
  id v13 = v9;
  id v14 = v8;
  void v12[4] = a1;
  id v10 = v8;
  id v11 = v9;
  objc_msgSend(a1, "__im_enumerateAdaptiveImageGlyphFileTransfersUsingIsAdaptiveImageGlyphProvider:block:", a3, v12);
}

void sub_1A0800A34(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = *(void *)(a1 + 40);
  id v8 = *(void (**)(uint64_t, id))(v7 + 16);
  id v9 = a2;
  id v10 = v8(v7, v9);
  char v11 = (*(uint64_t (**)(void))(*(void *)(a1 + 48) + 16))();

  if (!v10 || (v11 & 1) != 0)
  {
    BOOL v12 = IMLogHandleForCategory("NSAttributedString+EmojiImages");
    if (os_log_type_enabled(v12, OS_LOG_TYPE_DEBUG)) {
      sub_1A09F07FC(v12);
    }
  }
  else
  {
    objc_msgSend(*(id *)(a1 + 32), "addAttribute:value:range:", @"CTAdaptiveImageProvider", v10, a3, a4);
    objc_msgSend(*(id *)(a1 + 32), "addAttribute:value:range:", @"CTEmojiImageProvider", v10, a3, a4);
  }
}

uint64_t IMSharedUtilitiesProtoCloudKitEncryptedMessageUpdateT3ReadFrom(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  id v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
    while (2)
    {
      if (!*(unsigned char *)(a2 + *v5))
      {
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v3;
          unint64_t v12 = *(void *)(a2 + v11);
          if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
          *(void *)(a2 + v11) = v12 + 1;
          v10 |= (unint64_t)(v13 & 0x7F) << v8;
          if ((v13 & 0x80) == 0) {
            goto LABEL_12;
          }
          v8 += 7;
          BOOL v14 = v9++ >= 9;
          if (v14)
          {
            unint64_t v10 = 0;
            int v15 = *(unsigned __int8 *)(a2 + *v5);
            goto LABEL_14;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        if (*(unsigned char *)(a2 + *v5)) {
          unint64_t v10 = 0;
        }
LABEL_14:
        if (v15) {
          BOOL v16 = 1;
        }
        else {
          BOOL v16 = (v10 & 7) == 4;
        }
        if (!v16)
        {
          switch((v10 >> 3))
          {
            case 1u:
              char v17 = 0;
              unsigned int v18 = 0;
              uint64_t v19 = 0;
              *(unsigned char *)(a1 + 36) |= 1u;
              break;
            case 2u:
              uint64_t String = (void *)PBReaderReadString();

              id v25 = String;
              uint64_t v26 = 16;
              goto LABEL_31;
            case 3u:
              char v27 = (void *)PBReaderReadString();

              id v25 = v27;
              uint64_t v26 = 8;
              goto LABEL_31;
            case 4u:
              Data = (void *)PBReaderReadData();

              id v25 = Data;
              uint64_t v26 = 24;
LABEL_31:
              *(void *)(a1 + v26) = v25;
              goto LABEL_36;
            default:
              uint64_t result = PBReaderSkipValueWithTag();
              if (!result) {
                return result;
              }
LABEL_36:
              if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
                return *(unsigned char *)(a2 + *v5) == 0;
              }
              continue;
          }
          while (1)
          {
            uint64_t v20 = *v3;
            unint64_t v21 = *(void *)(a2 + v20);
            if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
              break;
            }
            char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
            *(void *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0) {
              goto LABEL_33;
            }
            v17 += 7;
            BOOL v14 = v18++ >= 9;
            if (v14)
            {
              LODWORD(v19) = 0;
              goto LABEL_35;
            }
          }
          *(unsigned char *)(a2 + *v5) = 1;
LABEL_33:
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v19) = 0;
          }
LABEL_35:
          *(_DWORD *)(a1 + 32) = v19;
          goto LABEL_36;
        }
      }
      break;
    }
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

id sub_1A0801510()
{
  if (qword_1E94FE980 != -1) {
    dispatch_once(&qword_1E94FE980, &unk_1EF2BF580);
  }
  id v0 = (void *)qword_1E94FE9D0;

  return v0;
}

uint64_t sub_1A0801564()
{
  id v0 = objc_alloc_init(MEMORY[0x1E4F28EE0]);
  id v1 = (void *)qword_1E94FE9D0;
  qword_1E94FE9D0 = (uint64_t)v0;

  uint64_t v2 = [MEMORY[0x1E4F1CA20] currentLocale];
  [(id)qword_1E94FE9D0 setLocale:v2];

  [(id)qword_1E94FE9D0 setNumberStyle:1];
  uint64_t v3 = qword_1E94FE9D0;

  return MEMORY[0x1F4181798](v3, sel_setUsesGroupingSeparator_);
}

id sub_1A08015E4(uint64_t a1, uint64_t a2, void *a3)
{
  id v3 = a3;
  if (qword_1E94FF618 != -1) {
    dispatch_once(&qword_1E94FF618, &unk_1EF2C0580);
  }
  if (!v3) {
    id v3 = &unk_1EF305868;
  }
  id v4 = NSString;
  uint64_t v5 = objc_msgSend(MEMORY[0x1E4F28B68], "stringFromByteCount:countStyle:", objc_msgSend(v3, "longLongValue"), 3);
  uint64_t v6 = [(id)qword_1E94FF610 stringFromNumber:v3];
  uint64_t v7 = [v4 stringWithFormat:@"%@ (%@ Bytes)", v5, v6];

  return v7;
}

uint64_t sub_1A08016D4()
{
  id v0 = objc_alloc_init(MEMORY[0x1E4F28EE0]);
  id v1 = (void *)qword_1E94FF610;
  qword_1E94FF610 = (uint64_t)v0;

  uint64_t v2 = [MEMORY[0x1E4F1CA20] currentLocale];
  [(id)qword_1E94FF610 setLocale:v2];

  [(id)qword_1E94FF610 setNumberStyle:1];
  uint64_t v3 = qword_1E94FF610;

  return MEMORY[0x1F4181798](v3, sel_setUsesGroupingSeparator_);
}

id sub_1A0801754(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = NSString;
  uint64_t v7 = objc_msgSend(NSNumber, "numberWithUnsignedLongLong:");
  char v8 = [a1 stringFromHugeNumber:v7];
  unsigned int v9 = [NSNumber numberWithUnsignedLongLong:a4];
  unint64_t v10 = [a1 stringFromHugeNumber:v9];
  uint64_t v11 = [v6 stringWithFormat:@"%@ (disk allocation size: %@)", v8, v10];

  return v11;
}

uint64_t IMSharedUtilitiesProtoCloudKitEncryptedParticipantChangeReadFrom(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  id v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      switch((v10 >> 3))
      {
        case 1u:
          char v17 = 0;
          unsigned int v18 = 0;
          uint64_t v19 = 0;
          *(unsigned char *)(a1 + 36) |= 2u;
          while (1)
          {
            uint64_t v20 = *v3;
            unint64_t v21 = *(void *)(a2 + v20);
            if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
              break;
            }
            char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
            *(void *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0) {
              goto LABEL_39;
            }
            v17 += 7;
            BOOL v14 = v18++ >= 9;
            if (v14)
            {
              LODWORD(v19) = 0;
              goto LABEL_41;
            }
          }
          *(unsigned char *)(a2 + *v5) = 1;
LABEL_39:
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v19) = 0;
          }
LABEL_41:
          *(_DWORD *)(a1 + 32) = v19;
          continue;
        case 2u:
          char v24 = 0;
          unsigned int v25 = 0;
          uint64_t v26 = 0;
          *(unsigned char *)(a1 + 36) |= 1u;
          break;
        case 3u:
          uint64_t String = (void *)PBReaderReadString();

          id v31 = String;
          uint64_t v32 = 16;
          goto LABEL_37;
        case 4u:
          Data = (void *)PBReaderReadData();

          id v31 = Data;
          uint64_t v32 = 24;
LABEL_37:
          *(void *)(a1 + v32) = v31;
          continue;
        default:
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
          continue;
      }
      while (1)
      {
        uint64_t v27 = *v3;
        unint64_t v28 = *(void *)(a2 + v27);
        if (v28 == -1 || v28 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v29 = *(unsigned char *)(*(void *)(a2 + *v7) + v28);
        *(void *)(a2 + v27) = v28 + 1;
        v26 |= (unint64_t)(v29 & 0x7F) << v24;
        if ((v29 & 0x80) == 0) {
          goto LABEL_43;
        }
        v24 += 7;
        BOOL v14 = v25++ >= 9;
        if (v14)
        {
          uint64_t v26 = 0;
          goto LABEL_45;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_43:
      if (*(unsigned char *)(a2 + *v5)) {
        uint64_t v26 = 0;
      }
LABEL_45:
      *(void *)(a1 + 8) = v26;
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

void sub_1A08030DC(uint64_t a1, void *a2, void *a3)
{
  id v9 = a2;
  uint64_t v5 = a3;
  uint64_t v6 = *(void *)(a1 + 48);
  if (v6) {
    uint64_t v7 = (*(uint64_t (**)(uint64_t, id))(v6 + 16))(v6, v9);
  }
  else {
    uint64_t v7 = *(unsigned char *)(a1 + 56) != 0;
  }
  objc_msgSend(*(id *)(a1 + 32), "setAllAreReachable:", v7 & objc_msgSend(*(id *)(a1 + 32), "allAreReachable"));
  char v8 = [[IMServiceReachabilityHandleResult alloc] initWithHandleID:v9 service:*(void *)(a1 + 40) isReachable:v7];
  v5[2](v5, v9, v8);
}

id IMAttachmentsCreateLocalizedDescription(void *a1, void *a2, void *a3)
{
  uint64_t v95 = *MEMORY[0x1E4F143B8];
  id v5 = a1;
  id v6 = a2;
  id v7 = a3;
  id v72 = objc_alloc_init(MEMORY[0x1E4F1CA70]);
  id v8 = objc_alloc_init(MEMORY[0x1E4F1CA60]);
  long long v89 = 0u;
  long long v90 = 0u;
  long long v91 = 0u;
  long long v92 = 0u;
  id v9 = v5;
  uint64_t v10 = [v9 countByEnumeratingWithState:&v89 objects:v94 count:16];
  long long v77 = v8;
  if (v10)
  {
    uint64_t v11 = v10;
    id v68 = v6;
    int v12 = 0;
    uint64_t v13 = *(void *)v90;
    uint64_t v74 = *MEMORY[0x1E4F6C108];
    id v71 = v7;
    id v75 = v9;
LABEL_3:
    uint64_t v14 = 0;
    while (1)
    {
      if (*(void *)v90 != v13) {
        objc_enumerationMutation(v9);
      }
      uint64_t v15 = *(void *)(*((void *)&v89 + 1) + 8 * v14);
      __int16 v88 = 0;
      id v86 = 0;
      id v87 = 0;
      id v85 = 0;
      int v16 = (*((uint64_t (**)(id, uint64_t, id *, id *, char *, __int16 *, id *, void, void))v7 + 2))(v7, v15, &v87, &v86, (char *)&v88 + 1, &v88, &v85, 0, 0);
      id v80 = v87;
      char v17 = (__CFString *)v86;
      id v18 = v85;
      uint64_t v19 = v18;
      if (!v16) {
        goto LABEL_38;
      }
      uint64_t v20 = @"%lu Stickers";
      if (!HIBYTE(v88))
      {
        unint64_t v21 = [v18 objectForKey:v74];
        if ([v21 BOOLValue])
        {

          uint64_t v20 = @"%lu Animated Emoji";
        }
        else
        {
          long long v78 = v19;
          int v76 = v12;
          id v22 = v80;
          char v23 = [v22 pathExtension];
          char v24 = [v23 isEqualToString:@"png"];
          long long v70 = v22;
          if ((v24 & 1) == 0)
          {
            unsigned int v25 = [v22 pathExtension];
            if (![v25 isEqualToString:@"gif"])
            {

              id v7 = v71;
              int v12 = v76;
              uint64_t v19 = v78;
              id v9 = v75;
LABEL_18:
              BOOL IsImage = IMUTTypeIsImage(v17);
              uint64_t v20 = @"%lu Images";
              if (!IsImage)
              {
                BOOL IsMovie = IMUTTypeIsMovie(v17);
                uint64_t v20 = @"%lu Movies";
                if (!IsMovie)
                {
                  BOOL IsPass = IMUTTypeIsPass(v17);
                  uint64_t v20 = @"%lu Passes";
                  if (!IsPass)
                  {
                    if (IMUTTypeIsWatchface(v17, v30))
                    {
                      uint64_t v31 = [v9 count];
                      uint64_t v20 = @"%lu Watch Faces";
                      if (v31 == 1)
                      {
                        uint64_t v64 = NSString;
                        v65 = IMSharedUtilitiesFrameworkBundle();
                        char v66 = [v65 localizedStringForKey:@"SHARED_WATCHFACE_NOTIFICATION" value:&stru_1EF2CAD28 table:@"IMSharedUtilities"];
                        id v6 = v68;
                        goto LABEL_62;
                      }
                    }
                    else if (IMUTTypeIsWorkout((uint64_t)v17))
                    {
                      uint64_t v33 = [v9 count];
                      uint64_t v20 = @"%lu Workouts";
                      if (v33 == 1)
                      {
                        id v6 = v68;
                        if (v68)
                        {
                          uint64_t v64 = NSString;
                          v65 = IMSharedUtilitiesFrameworkBundle();
                          char v66 = [v65 localizedStringForKey:@"SHARED_WORKOUT_NOTIFICATION" value:&stru_1EF2CAD28 table:@"IMSharedUtilities"];
LABEL_62:
                          long long v67 = v64;
                          id v9 = v75;
                          objc_msgSend(v67, "stringWithFormat:", v66, v6);
                          id v44 = (id)objc_claimAutoreleasedReturnValue();

                          id v7 = v71;
                        }
                        else
                        {
                          v65 = IMSharedUtilitiesFrameworkBundle();
                          id v44 = [v65 localizedStringForKey:@"SHARED_WORKOUT_NOTIFICATION_NO_NAME" value:&stru_1EF2CAD28 table:@"IMSharedUtilities"];
                        }

                        goto LABEL_52;
                      }
                    }
                    else
                    {
                      char IsMap = IMUTTypeIsMap(v17, v32);
                      uint64_t v20 = @"%lu Locations";
                      if ((IsMap & 1) == 0)
                      {
                        BOOL IsAudio = IMUTTypeIsAudio(v17);
                        uint64_t v20 = @"%lu Audio Files";
                        if (!IsAudio)
                        {
                          BOOL IsVCard = IMUTTypeIsVCard(v17);
                          uint64_t v20 = @"%lu Contacts";
                          if (!IsVCard)
                          {
                            BOOL IsCalendar = IMUTTypeIsCalendar(v17);
                            uint64_t v20 = @"%lu Files";
                            if (IsCalendar) {
                              uint64_t v20 = @"%lu Calendars";
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              goto LABEL_32;
            }
            long long v69 = v25;
          }
          uint64_t v26 = [v22 path];
          uint64_t v73 = [v26 rangeOfString:@".emoji"];

          if ((v24 & 1) == 0) {
          uint64_t v20 = @"%lu Animated Emoji";
          }
          id v7 = v71;
          id v9 = v75;
          int v12 = v76;
          uint64_t v19 = v78;
          if (v73 == 0x7FFFFFFFFFFFFFFFLL) {
            goto LABEL_18;
          }
        }
      }
LABEL_32:
      long long v38 = v20;
      if (v38)
      {
        long long v79 = v19;
        uint64_t v39 = v13;
        int v40 = v12;
        id v41 = [v8 objectForKey:v38];
        id v42 = v41;
        if (v41)
        {
          id v43 = objc_msgSend(NSNumber, "numberWithUnsignedInteger:", objc_msgSend(v41, "unsignedIntegerValue") + 1);
          [v8 setObject:v43 forKey:v38];

          id v9 = v75;
        }
        else
        {
          [v8 setObject:&unk_1EF305880 forKey:v38];
          [v72 addObject:v38];
        }

        int v12 = v40;
        uint64_t v13 = v39;
        uint64_t v19 = v79;
      }
      ++v12;

LABEL_38:
      if (v11 == ++v14)
      {
        uint64_t v11 = [v9 countByEnumeratingWithState:&v89 objects:v94 count:16];
        if (v11) {
          goto LABEL_3;
        }

        if (v12 < 1)
        {
          id v44 = 0;
          id v6 = v68;
          goto LABEL_57;
        }
        id v44 = objc_alloc_init(MEMORY[0x1E4F28E78]);
        uint64_t v45 = NSString;
        uint64_t v46 = IMSharedUtilitiesFrameworkBundle();
        unint64_t v47 = [v46 localizedStringForKey:@"%lu Attachments: " value:&stru_1EF2CAD28 table:@"IMSharedUtilities"];
        uint64_t v48 = objc_msgSend(v45, "localizedStringWithFormat:", v47, v12);
        [v44 appendString:v48];

        long long v83 = 0u;
        long long v84 = 0u;
        long long v81 = 0u;
        long long v82 = 0u;
        id v49 = v72;
        uint64_t v50 = [v49 countByEnumeratingWithState:&v81 objects:v93 count:16];
        if (v50)
        {
          uint64_t v51 = v50;
          uint64_t v52 = *(void *)v82;
          char v53 = 1;
          do
          {
            uint64_t v54 = 0;
            uint64_t v55 = v77;
            do
            {
              if (*(void *)v82 != v52)
              {
                long long v56 = v55;
                objc_enumerationMutation(v49);
                uint64_t v55 = v56;
              }
              uint64_t v57 = *(void *)(*((void *)&v81 + 1) + 8 * v54);
              uint64_t v58 = [v55 objectForKey:v57];
              if ((v53 & 1) == 0) {
                [v44 appendString:@", "];
              }
              char v59 = NSString;
              uint64_t v60 = IMSharedUtilitiesFrameworkBundle();
              uint64_t v61 = [v60 localizedStringForKey:v57 value:&stru_1EF2CAD28 table:@"IMSharedUtilities"];
              uint64_t v62 = objc_msgSend(v59, "localizedStringWithFormat:", v61, objc_msgSend(v58, "unsignedIntegerValue"));
              [v44 appendFormat:v62];

              char v53 = 0;
              ++v54;
              uint64_t v55 = v77;
            }
            while (v51 != v54);
            uint64_t v51 = [v49 countByEnumeratingWithState:&v81 objects:v93 count:16];
            char v53 = 0;
          }
          while (v51);
          id v6 = v68;
          id v7 = v71;
        }
        else
        {
          id v6 = v68;
        }
        id v9 = v75;
        goto LABEL_56;
      }
    }
  }
  id v44 = 0;
LABEL_52:
  id v49 = v9;
LABEL_56:

LABEL_57:

  return v44;
}

void AttachmentsAutomationLogMilestone(void *a1, void *a2, void *a3)
{
}

void AttachmentsAutomationLogMilestoneWithOptionFlags(void *a1, void *a2, void *a3, char a4)
{
  uint64_t v47 = *MEMORY[0x1E4F143B8];
  id v38 = a1;
  id v39 = a2;
  id v40 = a3;
  id v6 = [MEMORY[0x1E4F6C360] sharedInstance];
  if ([v6 isInternalInstall])
  {
    char v7 = IMGetCachedDomainBoolForKey();

    if (v7)
    {
      id v8 = (void *)[v40 mutableCopy];
      long long v42 = 0u;
      long long v43 = 0u;
      long long v44 = 0u;
      long long v45 = 0u;
      id v9 = v40;
      uint64_t v10 = [v9 countByEnumeratingWithState:&v42 objects:v46 count:16];
      if (v10)
      {
        uint64_t v11 = *(void *)v43;
        do
        {
          for (uint64_t i = 0; i != v10; ++i)
          {
            if (*(void *)v43 != v11) {
              objc_enumerationMutation(v9);
            }
            uint64_t v13 = *(void *)(*((void *)&v42 + 1) + 8 * i);
            uint64_t v14 = [v9 objectForKeyedSubscript:v13];
            if (([MEMORY[0x1E4F28D90] isValidJSONObject:v14] & 1) == 0)
            {
              uint64_t v15 = [NSString stringWithFormat:@"%@", v14];
              [v8 setObject:v15 forKeyedSubscript:v13];
            }
          }
          uint64_t v10 = [v9 countByEnumeratingWithState:&v42 objects:v46 count:16];
        }
        while (v10);
      }

      int v16 = [MEMORY[0x1E4F28F80] processInfo];
      id v17 = v39;
      if (v17)
      {
        CFDictionarySetValue((CFMutableDictionaryRef)v8, (const void *)qword_1E94F7D98, v17);
      }
      else if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_ERROR))
      {
        sub_1A09F08BC();
      }

      id v18 = [v16 processName];
      if (v18) {
        CFDictionarySetValue((CFMutableDictionaryRef)v8, (const void *)qword_1E94F7D80, v18);
      }

      uint64_t v19 = objc_msgSend(NSNumber, "numberWithInt:", objc_msgSend(v16, "processIdentifier"));
      if (v19) {
        CFDictionarySetValue((CFMutableDictionaryRef)v8, (const void *)qword_1E94F7D88, v19);
      }

      uint64_t v20 = NSNumber;
      [MEMORY[0x1E4F1C9C8] timeIntervalSinceReferenceDate];
      unint64_t v21 = objc_msgSend(v20, "numberWithDouble:");
      if (v21) {
        CFDictionarySetValue((CFMutableDictionaryRef)v8, (const void *)qword_1E94F7D90, v21);
      }

      id v41 = 0;
      id v22 = [MEMORY[0x1E4F28D90] dataWithJSONObject:v8 options:1 error:&v41];
      id v23 = v41;
      if (v22)
      {
        char v24 = NSString;
        id v25 = v38;
        uint64_t v26 = NSTemporaryDirectory();
        uint64_t v27 = [v24 stringWithFormat:@"%@/AttachmentsAutomation/%@.json", v26, v25];

        unint64_t v28 = [MEMORY[0x1E4F28CB8] defaultManager];
        LOBYTE(v25) = [v28 fileExistsAtPath:v27];

        if ((v25 & 1) == 0)
        {
          char v29 = [MEMORY[0x1E4F28CB8] defaultManager];
          [v29 createFileAtPath:v27 contents:0 attributes:0];
        }
        id v30 = [MEMORY[0x1E4F28E78] string];
        uint64_t v31 = v30;
        if (a4) {
          uint64_t v32 = @"[";
        }
        else {
          uint64_t v32 = @",\n";
        }
        [v30 appendString:v32];
        uint64_t v33 = (void *)[[NSString alloc] initWithData:v22 encoding:4];
        [v31 appendString:v33];

        if ((a4 & 2) != 0) {
          [v31 appendString:@"]"];
        }
        id v34 = [MEMORY[0x1E4F28CB0] fileHandleForWritingAtPath:v27];
        id v35 = v34;
        if (v34)
        {
          [v34 seekToEndOfFile];
          uint64_t v36 = [v31 dataUsingEncoding:4];
          [v35 writeData:v36];

          [v35 closeFile];
        }
      }
    }
  }
  else
  {
  }
}

uint64_t sub_1A080484C()
{
  id v0 = objc_alloc_init(IMHandleOffGridStateManager);
  uint64_t v1 = qword_1EB4A6008;
  qword_1EB4A6008 = (uint64_t)v0;

  return MEMORY[0x1F41817F8](v0, v1);
}

void sub_1A0804B24(uint64_t a1)
{
  id v5 = [*(id *)(a1 + 32) _cachedStatusSubscriptionForHandle:*(void *)(a1 + 40)];
  uint64_t v2 = [*(id *)(a1 + 40) ID];
  uint64_t v3 = *(void **)(a1 + 32);
  id v4 = [v3 _overrideDateForHandleWithID:v2];
  *(void *)(*(void *)(*(void *)(a1 + 48) + 8) + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = [v3 _offGridModeFromStatusSubscription:v5 handleID:v2 onlyIfLaterThanDate:v4];
}

void sub_1A0804C90(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  id v4 = [v2 lastKnownSubscriptionCache];
  id v5 = [v2 _cachedStatusSubscriptionForIMHandle:v3 fromCache:v4 cacheDescription:@"LastKnown" cacheMiss:0];

  [*(id *)(a1 + 32) _fetchUpdatedStatusAndUpdateCachesForHandle:*(void *)(a1 + 40) lastKnownStatus:v5 completion:*(void *)(a1 + 48)];
}

uint64_t sub_1A0804E30(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) _cachedStatusSubscriptionForHandle:*(void *)(a1 + 40)];
  uint64_t v3 = *(void *)(*(void *)(a1 + 48) + 8);
  uint64_t v4 = *(void *)(v3 + 40);
  *(void *)(v3 + 40) = v2;

  return MEMORY[0x1F41817F8](v2, v4);
}

void sub_1A0804F44(uint64_t a1)
{
  id v6 = [*(id *)(a1 + 32) _cachedStatusSubscriptionForHandle:*(void *)(a1 + 40)];
  uint64_t v2 = [*(id *)(a1 + 40) ID];
  uint64_t v3 = *(void **)(a1 + 32);
  uint64_t v4 = [v3 _overrideDateForHandleWithID:v2];
  [v3 _offGridModeFromStatusSubscription:v6 handleID:v2 onlyIfLaterThanDate:v4];

  id v5 = [*(id *)(a1 + 32) _identifierFromStatusSubscription:v6 handleID:v2];
  (*(void (**)(void))(*(void *)(a1 + 48) + 16))();
}

uint64_t sub_1A08050DC(uint64_t a1)
{
  return [*(id *)(a1 + 32) _fetchUpdatedStatusForHandle:*(void *)(a1 + 40) completion:*(void *)(a1 + 48)];
}

void sub_1A0805198(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 32);
  id v3 = [v2 personalSubscription];
  *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = [v2 _offGridModeFromStatusSubscription:v3 handleID:0 onlyIfLaterThanDate:0];
}

void sub_1A08052A0(uint64_t a1)
{
  v4[0] = MEMORY[0x1E4F143A8];
  v4[1] = 3221225472;
  v4[2] = sub_1A0805330;
  v4[3] = &unk_1E5A125C8;
  uint64_t v2 = *(void **)(a1 + 32);
  id v3 = *(id *)(a1 + 40);
  void v4[4] = *(void *)(a1 + 32);
  id v5 = v3;
  [v2 _personalSubscriptionWithCompletion:v4];
}

uint64_t sub_1A0805330(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 40);
  uint64_t v3 = [*(id *)(a1 + 32) _offGridModeFromStatusSubscription:a2 handleID:0 onlyIfLaterThanDate:0];
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(v2 + 16);

  return v4(v2, v3);
}

void sub_1A0805458(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 48);
  id v3 = [*(id *)(a1 + 32) overrideDatesByHandleID];
  [v3 setObject:v2 forKeyedSubscript:*(void *)(a1 + 40)];
}

void sub_1A08054B4()
{
  id v0 = [MEMORY[0x1E4F28EB8] defaultCenter];
  objc_msgSend(v0, "__mainThreadPostNotificationName:object:", IMHandleOffGridStateChangedNotification, 0);
}

void sub_1A08055F8(uint64_t a1)
{
  id v5 = [*(id *)(a1 + 32) overrideDatesByHandleID];
  uint64_t v2 = [v5 copy];
  uint64_t v3 = *(void *)(*(void *)(a1 + 40) + 8);
  uint64_t v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = v2;
}

void sub_1A08056F4(uint64_t a1)
{
  id v2 = (id)[*(id *)(a1 + 40) mutableCopy];
  [*(id *)(a1 + 32) setOverrideDatesByHandleID:v2];
}

void sub_1A0805C0C(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = *(NSObject **)(*(void *)(a1 + 32) + 8);
  block[0] = MEMORY[0x1E4F143A8];
  block[1] = 3221225472;
  block[2] = sub_1A0805D3C;
  block[3] = &unk_1E5A12640;
  objc_copyWeak(v17, (id *)(a1 + 80));
  id v5 = *(void **)(a1 + 88);
  id v10 = v3;
  v17[1] = v5;
  id v16 = *(id *)(a1 + 72);
  id v11 = *(id *)(a1 + 40);
  id v12 = *(id *)(a1 + 48);
  id v6 = *(id *)(a1 + 56);
  uint64_t v7 = *(void *)(a1 + 32);
  id v13 = v6;
  uint64_t v14 = v7;
  id v15 = *(id *)(a1 + 64);
  id v8 = v3;
  dispatch_async(v4, block);

  objc_destroyWeak(v17);
}

void sub_1A0805D3C(uint64_t a1)
{
  uint64_t v29 = *MEMORY[0x1E4F143B8];
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 88));
  id v3 = [*(id *)(a1 + 32) currentStatus];
  uint64_t v4 = [v3 statusUniqueIdentifier];

  uint64_t v5 = [WeakRetained currentCacheGeneration];
  if (*(void *)(a1 + 96) == v5 || *(void *)(a1 + 80))
  {
    id v6 = [WeakRetained pendingFetchesForCacheKeys];
    [v6 removeObject:*(void *)(a1 + 40)];

    uint64_t v7 = *(void **)(a1 + 32);
    if (v7)
    {
      id v8 = v7;
    }
    else
    {
      id v8 = [MEMORY[0x1E4F1CA98] null];
    }
    id v9 = v8;
    if (IMOSLoggingEnabled())
    {
      id v10 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
      {
        uint64_t v12 = *(void *)(a1 + 40);
        id v11 = *(NSObject **)(a1 + 48);
        int v23 = 138412802;
        char v24 = v11;
        __int16 v25 = 2112;
        uint64_t v26 = v12;
        __int16 v27 = 2112;
        unint64_t v28 = v9;
        _os_log_impl(&dword_1A0772000, v10, OS_LOG_TYPE_INFO, "Caching subscription for handle \"%@\" with key \"%@\" and value: %@", (uint8_t *)&v23, 0x20u);
      }
    }
    id v13 = [WeakRetained currentSubscriptionCache];
    [v13 setObject:v9 forKeyedSubscript:*(void *)(a1 + 40)];

    uint64_t v14 = [WeakRetained lastKnownSubscriptionCache];
    [v14 setObject:v9 forKeyedSubscript:*(void *)(a1 + 40)];

    id v15 = *(NSObject **)(a1 + 56);
    if (v4 == v15 || v4 && v15 && (-[NSObject isEqualToString:](v4, "isEqualToString:") & 1) != 0)
    {
      if (IMOSLoggingEnabled())
      {
        id v16 = OSLogHandleForIMFoundationCategory();
        if (os_log_type_enabled(v16, OS_LOG_TYPE_INFO))
        {
          id v17 = *(NSObject **)(a1 + 40);
          int v23 = 138412290;
          char v24 = v17;
          _os_log_impl(&dword_1A0772000, v16, OS_LOG_TYPE_INFO, "Fetched status is the same as the lask known status already returned. Not posting change notification for key: \"%@\"", (uint8_t *)&v23, 0xCu);
        }
      }
    }
    else
    {
      if (IMOSLoggingEnabled())
      {
        id v18 = OSLogHandleForIMFoundationCategory();
        if (os_log_type_enabled(v18, OS_LOG_TYPE_INFO))
        {
          uint64_t v19 = *(void *)(a1 + 56);
          uint64_t v20 = *(NSObject **)(a1 + 40);
          int v23 = 138412802;
          char v24 = v4;
          __int16 v25 = 2112;
          uint64_t v26 = v19;
          __int16 v27 = 2112;
          unint64_t v28 = v20;
          _os_log_impl(&dword_1A0772000, v18, OS_LOG_TYPE_INFO, "Fetched status %@ is different than the last known status %@. Posting change notification for key: \"%@\"", (uint8_t *)&v23, 0x20u);
        }
      }
      [WeakRetained _postNotificationForUpdatedStatusWithSubscription:*(void *)(a1 + 32)];
    }
    if (*(void *)(a1 + 80))
    {
      [*(id *)(a1 + 64) _offGridModeFromStatusSubscription:*(void *)(a1 + 32) handleID:*(void *)(a1 + 48) onlyIfLaterThanDate:*(void *)(a1 + 72)];
      (*(void (**)(void))(*(void *)(a1 + 80) + 16))();
    }
  }
  else
  {
    uint64_t v21 = v5;
    if (!IMOSLoggingEnabled()) {
      goto LABEL_26;
    }
    id v9 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
    {
      id v22 = *(NSObject **)(a1 + 96);
      int v23 = 134218498;
      char v24 = v22;
      __int16 v25 = 2048;
      uint64_t v26 = v21;
      __int16 v27 = 2112;
      unint64_t v28 = v4;
      _os_log_impl(&dword_1A0772000, v9, OS_LOG_TYPE_INFO, "Fetched status is not current (startGeneration: %ld, endGeneration: %ld), discarding status %@.", (uint8_t *)&v23, 0x20u);
    }
  }

LABEL_26:
}

uint64_t sub_1A0806580(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_1A0806590(uint64_t a1, void *a2, void *a3)
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  id v5 = a2;
  id v6 = a3;
  if (!v6)
  {
    int v8 = IMOSLoggingEnabled();
    if (v5)
    {
      if (!v8) {
        goto LABEL_5;
      }
      id v9 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
      {
        id v10 = [*(id *)(a1 + 32) handleString];
        int v12 = 138412546;
        id v13 = v10;
        __int16 v14 = 2112;
        id v15 = v5;
        _os_log_impl(&dword_1A0772000, v9, OS_LOG_TYPE_INFO, "Found status subscription for handleID: \"%@\". Subscription: %@", (uint8_t *)&v12, 0x16u);
      }
    }
    else
    {
      if (!v8) {
        goto LABEL_5;
      }
      id v9 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
      {
        id v11 = [*(id *)(a1 + 32) handleString];
        int v12 = 138412290;
        id v13 = v11;
        _os_log_impl(&dword_1A0772000, v9, OS_LOG_TYPE_INFO, "Did not find status subscription for handleID: \"%@\"", (uint8_t *)&v12, 0xCu);
      }
    }

    goto LABEL_5;
  }
  uint64_t v7 = IMLogHandleForCategory("IMHandleOffGridStateManager");
  if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR)) {
    sub_1A09F0958(a1, (uint64_t)v6, v7);
  }

LABEL_5:
  (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
}

void sub_1A0806758(_Unwind_Exception *a1, int a2)
{
  if (a2 == 1)
  {
    objc_begin_catch(a1);
    objc_end_catch();
    JUMPOUT(0x1A080660CLL);
  }
  _Unwind_Resume(a1);
}

void sub_1A08068D8(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) personalStatusSubscription];
  uint64_t v3 = *(void *)(a1 + 40);
  uint64_t v4 = *(NSObject **)(v3 + 8);
  block[0] = MEMORY[0x1E4F143A8];
  block[1] = 3221225472;
  block[2] = sub_1A080699C;
  block[3] = &unk_1E5A10DC8;
  void block[4] = v3;
  id v7 = v2;
  id v8 = *(id *)(a1 + 48);
  id v5 = v2;
  dispatch_async(v4, block);
}

uint64_t sub_1A080699C(uint64_t a1)
{
  objc_storeStrong((id *)(*(void *)(a1 + 32) + 24), *(id *)(a1 + 40));
  id v2 = *(uint64_t (**)(void))(*(void *)(a1 + 48) + 16);

  return v2();
}

void sub_1A0806DF8(_Unwind_Exception *a1, int a2)
{
  if (a2 == 1)
  {
    objc_begin_catch(a1);
    objc_end_catch();
    JUMPOUT(0x1A0806D14);
  }
  _Unwind_Resume(a1);
}

void sub_1A0807548(uint64_t a1)
{
  id v2 = [MEMORY[0x1E4F28EB8] defaultCenter];
  objc_msgSend(v2, "__mainThreadPostNotificationName:object:", IMHandleOffGridStateChangedNotification, *(void *)(a1 + 32));
}

void sub_1A0807728(uint64_t a1)
{
  uint64_t v9 = *MEMORY[0x1E4F143B8];
  uint64_t v2 = *(void *)(*(void *)(a1 + 32) + 48) + 1;
  if (IMOSLoggingEnabled())
  {
    uint64_t v3 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
    {
      int v7 = 134217984;
      uint64_t v8 = v2;
      _os_log_impl(&dword_1A0772000, v3, OS_LOG_TYPE_INFO, "Clearing current subscription cache. New cache generation: %ld", (uint8_t *)&v7, 0xCu);
    }
  }
  uint64_t v5 = *(void *)(a1 + 32);
  uint64_t v4 = a1 + 32;
  *(void *)(v5 + 48) = v2;
  [*(id *)(*(void *)v4 + 32) removeAllObjects];
  [*(id *)(*(void *)v4 + 56) removeAllObjects];
  id v6 = *(void **)(*(void *)v4 + 24);
  *(void *)(*(void *)v4 + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = 0;
}

_DWORD *sub_1A0808850(uint64_t a1, uint64_t a2)
{
  if (*(_DWORD *)(a2 + 16) != 3) {
    return 0;
  }
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  unint64_t v4 = *(int *)(a1 + 40);
  uint64_t v5 = [WeakRetained trackedObjects];
  unint64_t v6 = [v5 count];

  if (v6 <= v4)
  {
    id v13 = 0;
  }
  else
  {
    int v7 = [WeakRetained trackedObjects];
    uint64_t v8 = [v7 pointerAtIndex:*(int *)(a1 + 40)];

    if (v8)
    {
      uint64_t v9 = sub_1A07D276C(v8);
      id v10 = NSString;
      id v11 = [WeakRetained title];
      int v12 = [v10 stringWithFormat:@"%@-%d", v11, *(unsigned int *)(a1 + 40)];
      id v13 = sub_1A07D2870(v12, v9);
    }
    else
    {
      id v13 = 0;
    }
  }
  return v13;
}

void *IMSMSReportSpamExtensionAvailable()
{
  uint64_t result = (void *)sub_1A079113C();
  if (result)
  {
    return (void *)[result isClassificationAvailable];
  }
  return result;
}

uint64_t IMSSMSReportSpamShouldShowReportMessagesForItems(void *a1)
{
  uint64_t v17 = *MEMORY[0x1E4F143B8];
  uint64_t v2 = (void *)sub_1A079113C();
  if (!v2 || ![v2 isClassificationAvailable]) {
    return 0;
  }
  long long v14 = 0u;
  long long v15 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  uint64_t v3 = [a1 countByEnumeratingWithState:&v12 objects:v16 count:16];
  if (!v3) {
    goto LABEL_19;
  }
  uint64_t v4 = *(void *)v13;
  int v5 = 1;
  do
  {
    for (uint64_t i = 0; i != v3; ++i)
    {
      if (*(void *)v13 != v4) {
        objc_enumerationMutation(a1);
      }
      int v7 = (void *)[*(id *)(*((void *)&v12 + 1) + 8 * i) service];
      v5 &= [v7 isEqualToString:IMServiceNameSMS[0]];
    }
    uint64_t v3 = [a1 countByEnumeratingWithState:&v12 objects:v16 count:16];
  }
  while (v3);
  if (!v5) {
    return 0;
  }
LABEL_19:
  if (!IMOSLoggingEnabled()) {
    return 1;
  }
  uint64_t v8 = OSLogHandleForIMFoundationCategory();
  uint64_t v9 = 1;
  if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)id v11 = 0;
    _os_log_impl(&dword_1A0772000, v8, OS_LOG_TYPE_INFO, "We have an extension installed and all the messages are on the SMS service, we can show Report Messages", v11, 2u);
  }
  return v9;
}

uint64_t sub_1A0809518()
{
  id v0 = objc_msgSend((id)objc_msgSend(MEMORY[0x1E4F74230], "sharedConnection"), "installedMDMProfileIdentifier");
  uint64_t v1 = objc_msgSend((id)objc_msgSend((id)objc_msgSend(MEMORY[0x1E4F74230], "sharedConnection"), "installedProfileWithIdentifier:", v0), "signerSummary");
  uint64_t result = [v0 isEqualToString:@"00000000-0000-0000-A000-4A414D460003"];
  if (result)
  {
    uint64_t result = [v1 isEqualToString:@"manage.apple.com"];
    if (result) {
      byte_1E94FF620 = 1;
    }
  }
  return result;
}

uint64_t sub_1A0809594()
{
  uint64_t v6 = *MEMORY[0x1E4F143B8];
  if (qword_1EB4A5FF0 != -1) {
    dispatch_once(&qword_1EB4A5FF0, &unk_1EF2BF5C0);
  }
  uint64_t v0 = byte_1E94FF620;
  if (IMOSLoggingEnabled())
  {
    uint64_t v1 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v1, OS_LOG_TYPE_INFO))
    {
      uint64_t v2 = @"NO";
      if (v0) {
        uint64_t v2 = @"YES";
      }
      int v4 = 138412290;
      int v5 = v2;
      _os_log_impl(&dword_1A0772000, v1, OS_LOG_TYPE_INFO, "iOS - Apple MDM profile is installed: %@", (uint8_t *)&v4, 0xCu);
    }
  }
  return v0;
}

uint64_t IMShouldHandleInternalPhishingAttempts()
{
  uint64_t v0 = objc_msgSend((id)objc_msgSend(MEMORY[0x1E4F6B598], "sharedInstanceForBagType:", 1), "objectForKey:", @"disable-phishing-ui");
  if (v0 && [v0 BOOLValue])
  {
    if (!IMOSLoggingEnabled()) {
      return 0;
    }
    uint64_t v1 = OSLogHandleForIMFoundationCategory();
    if (!os_log_type_enabled(v1, OS_LOG_TYPE_INFO)) {
      return 0;
    }
    __int16 v11 = 0;
    uint64_t v2 = "Phishing UI disabled in IDSServerBag";
    uint64_t v3 = (uint8_t *)&v11;
LABEL_13:
    _os_log_impl(&dword_1A0772000, v1, OS_LOG_TYPE_INFO, v2, v3, 2u);
    return 0;
  }
  int v4 = sub_1A0809594();
  int v5 = IMOSLoggingEnabled();
  if (!v4)
  {
    if (!v5) {
      return 0;
    }
    uint64_t v1 = OSLogHandleForIMFoundationCategory();
    if (!os_log_type_enabled(v1, OS_LOG_TYPE_INFO)) {
      return 0;
    }
    __int16 v9 = 0;
    uint64_t v2 = "Should NOT Handle Phishing UI - iOS";
    uint64_t v3 = (uint8_t *)&v9;
    goto LABEL_13;
  }
  if (!v5) {
    return 1;
  }
  uint64_t v6 = OSLogHandleForIMFoundationCategory();
  uint64_t v7 = 1;
  if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)long long buf = 0;
    _os_log_impl(&dword_1A0772000, v6, OS_LOG_TYPE_INFO, "Should Handle Phishing UI - iOS", buf, 2u);
  }
  return v7;
}

uint64_t sub_1A080A7D0()
{
  id v0 = +[IMCTRCSUtilitiesManager sharedManager];

  return MEMORY[0x1F4181798](v0, sel_isRBMEnabledForContext_);
}

id sub_1A080AB4C(void *a1)
{
  if (([a1 _currentLocaleSupportsTrimming] & 1) != 0
    && (unint64_t)[a1 length] > 0x32)
  {
    uint64_t v3 = [a1 string];
    uint64_t v4 = [v3 rangeOfComposedCharacterSequenceAtIndex:50];

    int v5 = objc_msgSend(a1, "attributedSubstringFromRange:", 0, v4);
    uint64_t v6 = (void *)[v5 mutableCopy];
    uint64_t v7 = (void *)[objc_alloc(MEMORY[0x1E4F28B18]) initWithString:@"…"];
    [v6 appendAttributedString:v7];
    id v2 = (id)[v6 copy];
  }
  else
  {
    id v2 = a1;
  }

  return v2;
}

id sub_1A080AC2C()
{
  v11[1] = *MEMORY[0x1E4F143B8];
  id v0 = IMSharedUtilitiesFrameworkBundle();
  uint64_t v1 = [MEMORY[0x1E4F1CA20] currentLocale];
  id v2 = [v1 localeIdentifier];

  uint64_t v3 = (void *)MEMORY[0x1E4F28B50];
  uint64_t v4 = [v0 localizations];
  v11[0] = v2;
  int v5 = [MEMORY[0x1E4F1C978] arrayWithObjects:v11 count:1];
  uint64_t v6 = [v3 preferredLocalizationsFromArray:v4 forPreferences:v5];
  uint64_t v7 = [v6 firstObject];

  if (v7) {
    uint64_t v8 = v7;
  }
  else {
    uint64_t v8 = v2;
  }
  id v9 = v8;

  return v9;
}

uint64_t sub_1A080AD54(void *a1)
{
  uint64_t v11 = *MEMORY[0x1E4F143B8];
  id v2 = [a1 _currentLocale];
  uint64_t v3 = [a1 _localesSupportingTrim];
  uint64_t v4 = [v3 containsObject:v2];
  if (IMOSLoggingEnabled())
  {
    int v5 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
    {
      int v7 = 138412546;
      uint64_t v8 = v2;
      __int16 v9 = 1024;
      int v10 = v4;
      _os_log_impl(&dword_1A0772000, v5, OS_LOG_TYPE_INFO, "Current locale: %@, supports trimming: %{BOOL}d", (uint8_t *)&v7, 0x12u);
    }
  }
  return v4;
}

id sub_1A080AE68()
{
  id v0 = (void *)[objc_alloc(MEMORY[0x1E4F1CAD0]) initWithArray:&unk_1EF305B80];

  return v0;
}

_DWORD *sub_1A080AF1C(uint64_t a1, uint64_t a2)
{
  if (*(_DWORD *)(a2 + 16) != 3) {
    return 0;
  }
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  uint64_t v4 = sub_1A07D276C(WeakRetained);

  int v5 = sub_1A07D2870(*(void **)(a1 + 32), v4);
  return v5;
}

__CFString *IMTextEffectNameFromType(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) > 0xB) {
    return 0;
  }
  else {
    return off_1E5A127F8[a1 - 1];
  }
}

uint64_t IMTextStyleFromAttributeName(void *a1)
{
  id v1 = a1;
  if ([v1 isEqualToString:@"__kIMTextBoldAttributeName"])
  {
    uint64_t v2 = 1;
  }
  else if ([v1 isEqualToString:@"__kIMTextItalicAttributeName"])
  {
    uint64_t v2 = 2;
  }
  else if ([v1 isEqualToString:@"__kIMTextUnderlineAttributeName"])
  {
    uint64_t v2 = 4;
  }
  else if ([v1 isEqualToString:@"__kIMTextStrikethroughAttributeName"])
  {
    uint64_t v2 = 8;
  }
  else
  {
    uint64_t v2 = 0;
  }

  return v2;
}

__CFString *IMTextEffectDiscoverabilityTitleLocalizationKeyFromType(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) > 0xB) {
    return &stru_1EF2CAD28;
  }
  else {
    return off_1E5A128F8[a1 - 1];
  }
}

void sub_1A080B080(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained setCachedSharedWithYouEnabledValue:0];
}

uint64_t sub_1A080D898()
{
  CFPreferencesSynchronize(@"com.apple.MobileSMS", (CFStringRef)*MEMORY[0x1E4F1D3F0], (CFStringRef)*MEMORY[0x1E4F1D3E0]);
  id v0 = (void *)[MEMORY[0x1E4F28EB8] defaultCenter];

  return [v0 postNotificationName:@"com.apple.IMSharedUtilities.IMUserLoginIntentChanged" object:0];
}

void sub_1A080D8F8()
{
  CFPreferencesSynchronize(@"com.apple.MobileSMS", (CFStringRef)*MEMORY[0x1E4F1D3F0], (CFStringRef)*MEMORY[0x1E4F1D3E0]);
  DarwinNotifyCenter = CFNotificationCenterGetDarwinNotifyCenter();

  CFNotificationCenterAddObserver(DarwinNotifyCenter, 0, (CFNotificationCallback)sub_1A080D898, @"com.apple.IMSharedUtilities.IMUserLoginIntentChangedInternal", 0, CFNotificationSuspensionBehaviorDeliverImmediately);
}

void IMSetUserLoginIntent(void *a1)
{
  if (qword_1E94FF240 != -1) {
    dispatch_once(&qword_1E94FF240, &unk_1EF2BF640);
  }
  if (IMGetUserLoginIntent() != a1)
  {
    uint64_t v2 = (const void *)[NSNumber numberWithInteger:a1];
    CFStringRef v3 = (const __CFString *)*MEMORY[0x1E4F1D3F0];
    CFStringRef v4 = (const __CFString *)*MEMORY[0x1E4F1D3E0];
    CFPreferencesSetValue(@"UserLoginIntent", v2, @"com.apple.MobileSMS", (CFStringRef)*MEMORY[0x1E4F1D3F0], (CFStringRef)*MEMORY[0x1E4F1D3E0]);
    CFPreferencesSynchronize(@"com.apple.MobileSMS", v3, v4);
    DarwinNotifyCenter = CFNotificationCenterGetDarwinNotifyCenter();
    CFNotificationCenterPostNotification(DarwinNotifyCenter, @"com.apple.IMSharedUtilities.IMUserLoginIntentChangedInternal", 0, 0, 1u);
  }
}

void *IMSetUserIgnoreLogoutIntent(uint64_t a1)
{
  uint64_t result = IMGetUserIgnoreLogoutIntent();
  if (result != a1)
  {
    CFStringRef v3 = (const void *)[NSNumber numberWithBool:a1];
    CFStringRef v4 = (const __CFString *)*MEMORY[0x1E4F1D3F0];
    CFStringRef v5 = (const __CFString *)*MEMORY[0x1E4F1D3E0];
    CFPreferencesSetValue(@"UserIgnoreLogoutIntent", v3, @"com.apple.MobileSMS", (CFStringRef)*MEMORY[0x1E4F1D3F0], (CFStringRef)*MEMORY[0x1E4F1D3E0]);
    return (void *)CFPreferencesSynchronize(@"com.apple.MobileSMS", v4, v5);
  }
  return result;
}

uint64_t sub_1A080DB04()
{
  CFPreferencesSynchronize(@"com.apple.MobileSMS", (CFStringRef)*MEMORY[0x1E4F1D3F0], (CFStringRef)*MEMORY[0x1E4F1D3E0]);
  id v0 = (void *)[MEMORY[0x1E4F28EB8] defaultCenter];

  return [v0 postNotificationName:@"com.apple.IMSharedUtilities.IMUserRegistrationFailureIntentChanged" object:0];
}

void sub_1A080DB64()
{
  CFPreferencesSynchronize(@"com.apple.MobileSMS", (CFStringRef)*MEMORY[0x1E4F1D3F0], (CFStringRef)*MEMORY[0x1E4F1D3E0]);
  DarwinNotifyCenter = CFNotificationCenterGetDarwinNotifyCenter();

  CFNotificationCenterAddObserver(DarwinNotifyCenter, 0, (CFNotificationCallback)sub_1A080DB04, @"com.apple.IMSharedUtilities.IMUserRegistrationFailureIntentChangedInternal", 0, CFNotificationSuspensionBehaviorDeliverImmediately);
}

void *IMGetUserRegistrationFailureIntent()
{
  if (qword_1EB4A6320[0] != -1) {
    dispatch_once(qword_1EB4A6320, &unk_1EF2C00A0);
  }
  CFPropertyListRef v0 = CFPreferencesCopyValue(@"UserRegistrationFailureIntent", @"com.apple.MobileSMS", (CFStringRef)*MEMORY[0x1E4F1D3F0], (CFStringRef)*MEMORY[0x1E4F1D3E0]);
  uint64_t result = (id)CFMakeCollectable(v0);
  if (result)
  {
    uint64_t result = (void *)[result integerValue];
    if ((unint64_t)result >= 3) {
      return 0;
    }
  }
  return result;
}

void IMSetUserRegistrationFailureIntent(void *a1)
{
  if (qword_1EB4A6320[0] != -1) {
    dispatch_once(qword_1EB4A6320, &unk_1EF2C00A0);
  }
  if (IMGetUserRegistrationFailureIntent() != a1)
  {
    uint64_t v2 = (const void *)[NSNumber numberWithInteger:a1];
    CFStringRef v3 = (const __CFString *)*MEMORY[0x1E4F1D3F0];
    CFStringRef v4 = (const __CFString *)*MEMORY[0x1E4F1D3E0];
    CFPreferencesSetValue(@"UserRegistrationFailureIntent", v2, @"com.apple.MobileSMS", (CFStringRef)*MEMORY[0x1E4F1D3F0], (CFStringRef)*MEMORY[0x1E4F1D3E0]);
    CFPreferencesSynchronize(@"com.apple.MobileSMS", v3, v4);
    DarwinNotifyCenter = CFNotificationCenterGetDarwinNotifyCenter();
    CFNotificationCenterPostNotification(DarwinNotifyCenter, @"com.apple.IMSharedUtilities.IMUserRegistrationFailureIntentChangedInternal", 0, 0, 1u);
  }
}

void *IMGetUserIgnoreFailureWaitingForCloudIntent()
{
  CFPropertyListRef v0 = CFPreferencesCopyValue(@"UserIgnoreFailureWaitingIntent", @"com.apple.MobileSMS", (CFStringRef)*MEMORY[0x1E4F1D3F0], (CFStringRef)*MEMORY[0x1E4F1D3E0]);
  uint64_t result = (id)CFMakeCollectable(v0);
  if (result) {
    return (void *)([result integerValue] != 0);
  }
  return result;
}

void IMSetUserIgnoreFailureWaitingForCloudIntent(uint64_t a1)
{
  if (IMGetUserIgnoreFailureWaitingForCloudIntent() != a1)
  {
    uint64_t v2 = (const void *)[NSNumber numberWithBool:a1];
    CFStringRef v3 = (const __CFString *)*MEMORY[0x1E4F1D3F0];
    CFStringRef v4 = (const __CFString *)*MEMORY[0x1E4F1D3E0];
    CFPreferencesSetValue(@"UserIgnoreFailureWaitingIntent", v2, @"com.apple.MobileSMS", (CFStringRef)*MEMORY[0x1E4F1D3F0], (CFStringRef)*MEMORY[0x1E4F1D3E0]);
    CFPreferencesSynchronize(@"com.apple.MobileSMS", v3, v4);
  }
  DarwinNotifyCenter = CFNotificationCenterGetDarwinNotifyCenter();

  CFNotificationCenterPostNotification(DarwinNotifyCenter, @"com.apple.IMSharedUtilities.IMUserRegistrationFailureIntentChangedInternal", 0, 0, 1u);
}

void *IMGetUserIgnoreFailureUpdateAppleIDIntent()
{
  CFPropertyListRef v0 = CFPreferencesCopyValue(@"UserIgnoreFailureSyncingIntent", @"com.apple.MobileSMS", (CFStringRef)*MEMORY[0x1E4F1D3F0], (CFStringRef)*MEMORY[0x1E4F1D3E0]);
  uint64_t result = (id)CFMakeCollectable(v0);
  if (result) {
    return (void *)([result integerValue] != 0);
  }
  return result;
}

void IMSetUserIgnoreFailureUpdateAppleIDIntent(uint64_t a1)
{
  if (IMGetUserIgnoreFailureUpdateAppleIDIntent() != a1)
  {
    uint64_t v2 = (const void *)[NSNumber numberWithBool:a1];
    CFStringRef v3 = (const __CFString *)*MEMORY[0x1E4F1D3F0];
    CFStringRef v4 = (const __CFString *)*MEMORY[0x1E4F1D3E0];
    CFPreferencesSetValue(@"UserIgnoreFailureSyncingIntent", v2, @"com.apple.MobileSMS", (CFStringRef)*MEMORY[0x1E4F1D3F0], (CFStringRef)*MEMORY[0x1E4F1D3E0]);
    CFPreferencesSynchronize(@"com.apple.MobileSMS", v3, v4);
    DarwinNotifyCenter = CFNotificationCenterGetDarwinNotifyCenter();
    CFNotificationCenterPostNotification(DarwinNotifyCenter, @"com.apple.IMSharedUtilities.IMUserRegistrationFailureIntentChangedInternal", 0, 0, 1u);
  }
}

void sub_1A080E7A0()
{
  CFPropertyListRef v0 = (void *)qword_1E94FF628;
  qword_1E94FF628 = (uint64_t)&unk_1EF305C10;
}

void sub_1A080E80C()
{
  CFPropertyListRef v0 = (void *)qword_1E94FF638;
  qword_1E94FF638 = (uint64_t)&unk_1EF305C28;
}

void sub_1A080E9CC(uint64_t a1)
{
  uint64_t v8 = *MEMORY[0x1E4F143B8];
  if (IMOSLoggingEnabled())
  {
    uint64_t v2 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
    {
      uint64_t v3 = *(void *)(a1 + 32);
      int v4 = 138412546;
      CFStringRef v5 = &unk_1EF305898;
      __int16 v6 = 2112;
      uint64_t v7 = v3;
      _os_log_impl(&dword_1A0772000, v2, OS_LOG_TYPE_INFO, "apply-imessage-junk-filter: Client (%@) Server (%@)", (uint8_t *)&v4, 0x16u);
    }
  }
}

void sub_1A080EAE0(uint64_t a1)
{
  uint64_t v8 = *MEMORY[0x1E4F143B8];
  if (IMOSLoggingEnabled())
  {
    uint64_t v2 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
    {
      uint64_t v3 = *(void *)(a1 + 32);
      int v4 = 138412546;
      CFStringRef v5 = &unk_1EF305898;
      __int16 v6 = 2112;
      uint64_t v7 = v3;
      _os_log_impl(&dword_1A0772000, v2, OS_LOG_TYPE_INFO, "apply-imessage-junk-filter: Client (%@) Server (%@)", (uint8_t *)&v4, 0x16u);
    }
  }
}

uint64_t sub_1A080EC48()
{
  CFPropertyListRef v0 = objc_alloc_init(IMOffGridModeInvitationManager);
  uint64_t v1 = qword_1EB4A6010;
  qword_1EB4A6010 = (uint64_t)v0;

  return MEMORY[0x1F41817F8](v0, v1);
}

void sub_1A080F0B4(uint64_t a1, int a2, void *a3)
{
  uint64_t v22 = *MEMORY[0x1E4F143B8];
  id v5 = a3;
  if (v5)
  {
    __int16 v6 = IMLogHandleForCategory("IMOffGridModeInvitationManager");
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR)) {
      sub_1A09F0D28((uint64_t)v5, v6, v7, v8, v9, v10, v11, v12);
    }

    uint64_t v13 = *(void *)(a1 + 56);
    if (v13) {
      (*(void (**)(uint64_t, void, void, void, id))(v13 + 16))(v13, 0, 0, 0, v5);
    }
  }
  else
  {
    int v14 = IMOSLoggingEnabled();
    if (a2)
    {
      if (v14)
      {
        long long v15 = OSLogHandleForIMFoundationCategory();
        if (os_log_type_enabled(v15, OS_LOG_TYPE_INFO))
        {
          uint64_t v16 = *(void *)(a1 + 32);
          int v20 = 138412290;
          uint64_t v21 = v16;
          _os_log_impl(&dword_1A0772000, v15, OS_LOG_TYPE_INFO, "Handle is already invited: %@", (uint8_t *)&v20, 0xCu);
        }
      }
      uint64_t v17 = *(void *)(a1 + 56);
      if (v17) {
        (*(void (**)(uint64_t, void, uint64_t, void, void))(v17 + 16))(v17, 0, 1, 0, 0);
      }
    }
    else
    {
      if (v14)
      {
        id v18 = OSLogHandleForIMFoundationCategory();
        if (os_log_type_enabled(v18, OS_LOG_TYPE_INFO))
        {
          uint64_t v19 = *(void *)(a1 + 32);
          int v20 = 138412290;
          uint64_t v21 = v19;
          _os_log_impl(&dword_1A0772000, v18, OS_LOG_TYPE_INFO, "Handle is not already invited. Initiating invitation flow for handle: %@", (uint8_t *)&v20, 0xCu);
        }
      }
      [*(id *)(a1 + 40) _inviteHandleID:*(void *)(a1 + 32) fromSenderHandle:*(void *)(a1 + 48) completion:*(void *)(a1 + 56)];
    }
  }
}

void sub_1A080F744(_Unwind_Exception *a1, int a2)
{
  if (a2 == 1)
  {
    objc_begin_catch(a1);
    objc_end_catch();
    JUMPOUT(0x1A080F63CLL);
  }
  _Unwind_Resume(a1);
}

void sub_1A080F778(uint64_t a1, void *a2, void *a3)
{
  uint64_t v28 = *MEMORY[0x1E4F143B8];
  id v5 = a2;
  id v6 = a3;
  if (v6)
  {
    uint64_t v7 = IMLogHandleForCategory("IMOffGridModeInvitationManager");
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR)) {
      sub_1A09F0D28((uint64_t)v6, v7, v8, v9, v10, v11, v12, v13);
    }

    uint64_t v14 = *(void *)(a1 + 56);
    long long v15 = [MEMORY[0x1E4F1CA80] set];
    (*(void (**)(uint64_t, void *))(v14 + 16))(v14, v15);
  }
  else
  {
    if (IMOSLoggingEnabled())
    {
      uint64_t v16 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v16, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)long long buf = 134217984;
        uint64_t v27 = [v5 count];
        _os_log_impl(&dword_1A0772000, v16, OS_LOG_TYPE_INFO, "Removing already invited handles, total of %lu invited handles", buf, 0xCu);
      }
    }
    [*(id *)(a1 + 32) minusSet:v5];
    if (IMOSLoggingEnabled())
    {
      uint64_t v17 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v17, OS_LOG_TYPE_INFO))
      {
        uint64_t v18 = [*(id *)(a1 + 32) count];
        *(_DWORD *)long long buf = 134217984;
        uint64_t v27 = v18;
        _os_log_impl(&dword_1A0772000, v17, OS_LOG_TYPE_INFO, "Final set of URIs to invite has %lu handles", buf, 0xCu);
      }
    }
    if ([*(id *)(a1 + 32) count])
    {
      uint64_t v19 = [*(id *)(a1 + 40) offGridStateManager];
      uint64_t v20 = *(void *)(a1 + 32);
      uint64_t v21 = (void *)[objc_alloc(MEMORY[0x1E4F6B5C8]) initWithPrefixedURI:*(void *)(a1 + 48)];
      v24[0] = MEMORY[0x1E4F143A8];
      v24[1] = 3221225472;
      v24[2] = sub_1A080FAC4;
      v24[3] = &unk_1E5A12AA0;
      id v25 = *(id *)(a1 + 56);
      [v19 inviteHandles:v20 fromSenderHandle:v21 withDictionaryPayload:MEMORY[0x1E4F1CC08] completion:v24];

      long long v15 = v25;
    }
    else
    {
      if (IMOSLoggingEnabled())
      {
        uint64_t v22 = OSLogHandleForIMFoundationCategory();
        if (os_log_type_enabled(v22, OS_LOG_TYPE_INFO))
        {
          *(_WORD *)long long buf = 0;
          _os_log_impl(&dword_1A0772000, v22, OS_LOG_TYPE_INFO, "No URIs to invite", buf, 2u);
        }
      }
      uint64_t v23 = *(void *)(a1 + 56);
      long long v15 = [MEMORY[0x1E4F1CA80] set];
      (*(void (**)(uint64_t, void *))(v23 + 16))(v23, v15);
    }
  }
}

void sub_1A080FAC4(uint64_t a1, void *a2, void *a3, void *a4, void *a5)
{
  uint64_t v19 = *MEMORY[0x1E4F143B8];
  id v9 = a2;
  id v10 = a3;
  id v11 = a4;
  id v12 = a5;
  if (v12 && IMOSLoggingEnabled())
  {
    uint64_t v13 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v13, OS_LOG_TYPE_INFO))
    {
      int v17 = 138412290;
      uint64_t v18 = (uint64_t)v12;
      _os_log_impl(&dword_1A0772000, v13, OS_LOG_TYPE_INFO, "Error inviting handles %@", (uint8_t *)&v17, 0xCu);
    }
  }
  if (IMOSLoggingEnabled())
  {
    uint64_t v14 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v14, OS_LOG_TYPE_INFO))
    {
      uint64_t v15 = [v9 count];
      int v17 = 134217984;
      uint64_t v18 = v15;
      _os_log_impl(&dword_1A0772000, v14, OS_LOG_TYPE_INFO, "Invited %lu handles", (uint8_t *)&v17, 0xCu);
    }
  }
  uint64_t v16 = objc_msgSend(v9, "__imSetByApplyingBlock:", &unk_1EF2BFEC0);
  (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
}

uint64_t sub_1A080FC90(uint64_t a1, void *a2)
{
  return [a2 unprefixedURI];
}

void sub_1A080FD80(uint64_t a1, char a2, void *a3)
{
  id v5 = a3;
  if (v5)
  {
    (*(void (**)(void))(*(void *)(a1 + 56) + 16))();
    goto LABEL_19;
  }
  if (a2)
  {
LABEL_4:
    [*(id *)(a1 + 32) _inviteHandleID:*(void *)(a1 + 40) fromSenderHandle:*(void *)(a1 + 48) completion:*(void *)(a1 + 56)];
    goto LABEL_19;
  }
  char v6 = [*(id *)(a1 + 32) _isHandleIDEligibleToReceiveAutomaticInvitation:*(void *)(a1 + 40)];
  int v7 = IMOSLoggingEnabled();
  if (v6)
  {
    if (v7)
    {
      uint64_t v8 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)long long buf = 0;
        _os_log_impl(&dword_1A0772000, v8, OS_LOG_TYPE_INFO, "Handle is eligible to receive an automatic invitation, will repair failed validation token.", buf, 2u);
      }
    }
    goto LABEL_4;
  }
  if (v7)
  {
    id v9 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)uint64_t v14 = 0;
      _os_log_impl(&dword_1A0772000, v9, OS_LOG_TYPE_INFO, "Handle is neither invited nor eligible to receive an automatic invitation, will not repair the failed validation token.", v14, 2u);
    }
  }
  if (IMOSLoggingEnabled())
  {
    id v10 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)id v12 = 0;
      _os_log_impl(&dword_1A0772000, v10, OS_LOG_TYPE_INFO, "Not repairing invalid validation token.", v12, 2u);
    }
  }
  id v11 = [MEMORY[0x1E4F28C58] errorWithDomain:@"IMOffGridModeInvitationManagerErrorDomain" code:2 userInfo:0];
  (*(void (**)(void))(*(void *)(a1 + 56) + 16))();

LABEL_19:
}

void sub_1A08100D8(uint64_t a1, void *a2, void *a3, void *a4, void *a5)
{
  id v9 = a2;
  id v10 = a3;
  id v11 = a4;
  id v12 = a5;
  if (v12)
  {
    uint64_t v13 = IMLogHandleForCategory("IMOffGridModeInvitationManager");
    if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR)) {
      sub_1A09F0D94((uint64_t)v12, v13, v14, v15, v16, v17, v18, v19);
    }

    uint64_t v20 = *(void *)(a1 + 32);
    if (v20)
    {
      uint64_t v21 = *(void (**)(void))(v20 + 16);
LABEL_12:
      v21();
    }
  }
  else
  {
    if (IMOSLoggingEnabled())
    {
      uint64_t v22 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v22, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)char v24 = 0;
        _os_log_impl(&dword_1A0772000, v22, OS_LOG_TYPE_INFO, "Completed inviting handles", v24, 2u);
      }
    }
    uint64_t v23 = *(void *)(a1 + 32);
    if (v23)
    {
      uint64_t v21 = *(void (**)(void))(v23 + 16);
      goto LABEL_12;
    }
  }
}

uint64_t sub_1A08103E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!a3) {
    [*(id *)(a1 + 32) _isHandleAlreadyInvited:*(void *)(a1 + 40) idsInvitedHandles:a2];
  }
  int v4 = *(uint64_t (**)(void))(*(void *)(a1 + 48) + 16);

  return v4();
}

BOOL sub_1A08104A8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = +[IMContactStore validateAndCleanupID:a2];
  uint64_t v3 = +[IMContactStore sharedInstance];
  int v4 = [v3 fetchCNContactForHandleWithID:v2];

  BOOL v5 = +[IMContactStore isCNContactAKnownContact:v4];
  return v5;
}

void sub_1A0810768(_Unwind_Exception *a1, int a2)
{
  if (a2 == 1)
  {
    objc_begin_catch(a1);
    objc_end_catch();
    JUMPOUT(0x1A0810728);
  }
  _Unwind_Resume(a1);
}

void sub_1A081096C(uint64_t a1, uint64_t a2, void *a3)
{
  if (a3)
  {
    int v4 = [a3 userInfo];
    id v6 = [v4 objectForKeyedSubscript:*MEMORY[0x1E4F28228]];

    (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
  }
  else
  {
    BOOL v5 = *(void (**)(void))(*(void *)(a1 + 32) + 16);
    v5();
  }
}

id sub_1A0810AA4(void *a1)
{
  uint64_t v15 = *MEMORY[0x1E4F143B8];
  uint64_t v2 = [a1 date];
  if ([a1 useCourierTime])
  {
    if (qword_1EB4A5D98 != -1) {
      dispatch_once(&qword_1EB4A5D98, &unk_1EF2BF6A0);
    }
    if (qword_1EB4A5D90)
    {
      uint64_t v3 = [(id)qword_1EB4A5D90 sharedInstance];
      [v3 currentServerTimeInterval];
      double v5 = v4;

      if (v5 >= 1009864800.0)
      {
        uint64_t v9 = [a1 dateWithTimeIntervalSince1970:v5];

        uint64_t v2 = (void *)v9;
      }
      else if (IMOSLoggingEnabled())
      {
        id v6 = OSLogHandleForIMFoundationCategory();
        if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
        {
          int v7 = [NSNumber numberWithDouble:v5];
          uint64_t v8 = [NSNumber numberWithDouble:1009864800.0];
          int v11 = 138412546;
          id v12 = v7;
          __int16 v13 = 2112;
          uint64_t v14 = v8;
          _os_log_impl(&dword_1A0772000, v6, OS_LOG_TYPE_INFO, "The server time we got back is around epoch time: %@ checked with padding: %@", (uint8_t *)&v11, 0x16u);
        }
      }
    }
  }

  return v2;
}

uint64_t sub_1A0810C6C()
{
  uint64_t result = MEMORY[0x1A6227910](@"IDSCurrentServerTime", @"IDSFoundation");
  qword_1EB4A5D90 = result;
  return result;
}

uint64_t sub_1A0810C9C()
{
  return 1;
}

uint64_t sub_1A0810CA4(void *a1)
{
  [a1 timeIntervalSinceReferenceDate];
  return (uint64_t)(v1 * 1000000000.0);
}

uint64_t sub_1A0810CCC(void *a1)
{
  [a1 timeIntervalSince1970];
  return (uint64_t)(v1 * 1000000000.0);
}

BOOL sub_1A0810CF4(void *a1, uint64_t a2, void *a3)
{
  if (!a3) {
    return 0;
  }
  id v4 = a3;
  [a1 timeIntervalSinceReferenceDate];
  double v6 = v5;
  [v4 timeIntervalSinceReferenceDate];
  double v8 = v7;

  return vabdd_f64(v6, v8) < 0.00001;
}

BOOL sub_1A0810D64(uint64_t a1)
{
  uint64_t v2 = [MEMORY[0x1E4F1C9A8] currentCalendar];
  uint64_t v3 = [MEMORY[0x1E4F1C9C8] date];
  id v4 = [v2 components:30 fromDate:v3];

  double v5 = [v2 components:30 fromDate:a1];
  uint64_t v6 = [v4 day];
  if (v6 == [v5 day]
    && (uint64_t v7 = [v4 month], v7 == objc_msgSend(v5, "month"))
    && (uint64_t v8 = [v4 year], v8 == objc_msgSend(v5, "year")))
  {
    uint64_t v9 = [v4 era];
    BOOL v10 = v9 == [v5 era];
  }
  else
  {
    BOOL v10 = 0;
  }

  return v10;
}

uint64_t sub_1A0810E70(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = (void *)MEMORY[0x1E4F1C9A8];
  id v5 = a3;
  uint64_t v6 = [v4 currentCalendar];
  uint64_t v7 = [v6 components:16 fromDate:v5 toDate:a1 options:0];

  uint64_t v8 = [v7 day];
  return v8;
}

uint64_t sub_1A0810EF0(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = (void *)MEMORY[0x1E4F1C9A8];
  id v5 = a3;
  uint64_t v6 = [v4 currentCalendar];
  uint64_t v7 = [v6 components:32 fromDate:v5 toDate:a1 options:0];

  uint64_t v8 = [v7 hour];
  return v8;
}

uint64_t sub_1A0810F70(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = (void *)MEMORY[0x1E4F1C9A8];
  id v5 = a3;
  uint64_t v6 = [v4 currentCalendar];
  uint64_t v7 = [v6 components:32 fromDate:v5 toDate:a1 options:0];

  uint64_t v8 = [v7 minute];
  return v8;
}

uint64_t sub_1A0810FF0(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = (void *)MEMORY[0x1E4F1C9A8];
  id v5 = a3;
  uint64_t v6 = [v4 currentCalendar];
  uint64_t v7 = [v6 components:128 fromDate:v5 toDate:a1 options:0];

  uint64_t v8 = [v7 second];
  return v8;
}

id sub_1A0811070(uint64_t a1, uint64_t a2, void *a3)
{
  id v3 = a3;
  id v4 = v3;
  if (v3)
  {
    id v5 = v3;
  }
  else
  {
    id v5 = [MEMORY[0x1E4F1C9C8] date];
  }
  uint64_t v6 = v5;

  return v6;
}

id sub_1A08110CC(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  id v3 = a3;
  id v4 = v3;
  if (v3)
  {
    unint64_t v5 = [v3 unsignedLongLongValue];
    if (IMOSLoggingEnabled())
    {
      uint64_t v6 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
      {
        int v14 = 138412290;
        double v15 = *(double *)&v4;
        _os_log_impl(&dword_1A0772000, v6, OS_LOG_TYPE_INFO, "Converting timestamp: %@ to date", (uint8_t *)&v14, 0xCu);
      }
    }
    double v7 = (double)v5 / 1000000000.0;
    if (IMOSLoggingEnabled())
    {
      uint64_t v8 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
      {
        int v14 = 134217984;
        double v15 = v7;
        _os_log_impl(&dword_1A0772000, v8, OS_LOG_TYPE_INFO, "  => seconds: %f", (uint8_t *)&v14, 0xCu);
      }
    }
    if (v7 <= 600000.0)
    {
      if (IMOSLoggingEnabled())
      {
        id v12 = OSLogHandleForIMFoundationCategory();
        if (os_log_type_enabled(v12, OS_LOG_TYPE_INFO))
        {
          LOWORD(v14) = 0;
          _os_log_impl(&dword_1A0772000, v12, OS_LOG_TYPE_INFO, "  => Returning current date, failed sanity", (uint8_t *)&v14, 2u);
        }
      }
      uint64_t v9 = [MEMORY[0x1E4F1C9C8] date];
    }
    else
    {
      uint64_t v9 = [MEMORY[0x1E4F1C9C8] dateWithTimeIntervalSince1970:v7];
      if (IMOSLoggingEnabled())
      {
        BOOL v10 = OSLogHandleForIMFoundationCategory();
        if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
        {
          int v14 = 138412290;
          double v15 = *(double *)&v9;
          _os_log_impl(&dword_1A0772000, v10, OS_LOG_TYPE_INFO, "  => Returning date: %@", (uint8_t *)&v14, 0xCu);
        }
      }
    }
    int v11 = objc_msgSend(MEMORY[0x1E4F1C9C8], "__im_clampDate:", v9);
  }
  else
  {
    int v11 = [MEMORY[0x1E4F1C9C8] date];
  }

  return v11;
}

uint64_t sub_1A08113A0(uint64_t a1, uint64_t a2, void *a3)
{
  if (!a3) {
    return 0;
  }
  id v4 = (void *)MEMORY[0x1E4F1C9A8];
  id v5 = a3;
  uint64_t v6 = [v4 currentCalendar];
  double v7 = [v6 components:2097918 fromDate:a1];
  uint64_t v8 = [v6 components:2097918 fromDate:v5];

  uint64_t v9 = [v7 isEqual:v8];
  return v9;
}

id sub_1A081144C()
{
  if (qword_1E94FF658 != -1) {
    dispatch_once(&qword_1E94FF658, &unk_1EF2BFC80);
  }
  CFPropertyListRef v0 = (void *)qword_1E94FF650;

  return v0;
}

void sub_1A08114A0()
{
  id v0 = objc_alloc_init(MEMORY[0x1E4F28D48]);
  double v1 = (void *)qword_1E94FF650;
  qword_1E94FF650 = (uint64_t)v0;

  [(id)qword_1E94FF650 setFormatOptions:1907];
  id v2 = [MEMORY[0x1E4F1CAF0] timeZoneWithAbbreviation:@"GMT"];
  [(id)qword_1E94FF650 setTimeZone:v2];
}

id sub_1A0811528(uint64_t a1)
{
  id v2 = objc_msgSend((id)objc_opt_class(), "__im_serialization_dateFormatter");
  id v3 = [v2 stringFromDate:a1];

  return v3;
}

id sub_1A0811580(void *a1, uint64_t a2, void *a3)
{
  if (a3)
  {
    id v4 = a3;
    id v5 = objc_msgSend(a1, "__im_serialization_dateFormatter");
    uint64_t v6 = [v5 dateFromString:v4];
  }
  else
  {
    uint64_t v6 = 0;
  }

  return v6;
}

id sub_1A08115F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v5 = objc_alloc_init(MEMORY[0x1E4F1C9D8]);
  [v5 setDay:a3];
  uint64_t v6 = [MEMORY[0x1E4F1C9A8] currentCalendar];
  double v7 = [v6 dateByAddingComponents:v5 toDate:a1 options:0];

  return v7;
}

uint64_t sub_1A08116D4()
{
  if (_os_feature_enabled_impl()) {
    uint64_t result = 1;
  }
  else {
    uint64_t result = IMGetCachedDomainBoolForKeyWithDefaultValue();
  }
  byte_1E94FF660 = result;
  return result;
}

uint64_t sub_1A0811778()
{
  if (_os_feature_enabled_impl()) {
    uint64_t result = 1;
  }
  else {
    uint64_t result = IMGetCachedDomainBoolForKeyWithDefaultValue();
  }
  byte_1E94FF670 = result;
  return result;
}

uint64_t sub_1A081181C()
{
  if (_os_feature_enabled_impl()) {
    uint64_t result = 1;
  }
  else {
    uint64_t result = IMGetCachedDomainBoolForKeyWithDefaultValue();
  }
  byte_1E94FF680 = result;
  return result;
}

uint64_t sub_1A08118C0()
{
  char v0 = IMGetCachedDomainBoolForKeyWithDefaultValue();
  uint64_t result = 0;
  if ((v0 & 1) == 0)
  {
    if (_os_feature_enabled_impl()) {
      uint64_t result = 1;
    }
    else {
      uint64_t result = IMGetCachedDomainBoolForKeyWithDefaultValue();
    }
  }
  byte_1E94FF2A8 = result;
  return result;
}

uint64_t sub_1A0811988()
{
  if (_os_feature_enabled_impl()) {
    uint64_t result = 1;
  }
  else {
    uint64_t result = IMGetCachedDomainBoolForKeyWithDefaultValue();
  }
  byte_1E94FE7A0 = result;
  return result;
}

uint64_t sub_1A0811A30()
{
  if (_os_feature_enabled_impl()) {
    uint64_t result = 1;
  }
  else {
    uint64_t result = IMGetCachedDomainBoolForKeyWithDefaultValue();
  }
  byte_1E94FF690 = result;
  return result;
}

uint64_t sub_1A0811B1C()
{
  if (_os_feature_enabled_impl()) {
    uint64_t result = 1;
  }
  else {
    uint64_t result = IMGetCachedDomainBoolForKeyWithDefaultValue();
  }
  byte_1E94FE928 = result;
  return result;
}

uint64_t sub_1A0811C18()
{
  if (_os_feature_enabled_impl()) {
    uint64_t result = 1;
  }
  else {
    uint64_t result = IMGetCachedDomainBoolForKeyWithDefaultValue();
  }
  byte_1E94FE9D8 = result;
  return result;
}

uint64_t sub_1A0811CBC()
{
  if (_os_feature_enabled_impl()) {
    uint64_t result = 1;
  }
  else {
    uint64_t result = IMGetCachedDomainBoolForKeyWithDefaultValue();
  }
  byte_1E94FF6A8 = result;
  return result;
}

uint64_t sub_1A0811D60()
{
  if (_os_feature_enabled_impl()) {
    uint64_t result = 1;
  }
  else {
    uint64_t result = IMGetCachedDomainBoolForKeyWithDefaultValue();
  }
  byte_1E94FF110 = result;
  return result;
}

uint64_t sub_1A0811E04()
{
  if (_os_feature_enabled_impl() & 1) != 0 || (_os_feature_enabled_impl()) {
    uint64_t result = 1;
  }
  else {
    uint64_t result = IMGetCachedDomainBoolForKeyWithDefaultValue();
  }
  byte_1E94FF2E0 = result;
  return result;
}

uint64_t sub_1A0811EC0()
{
  if (_os_feature_enabled_impl()) {
    uint64_t result = 1;
  }
  else {
    uint64_t result = IMGetCachedDomainBoolForKeyWithDefaultValue();
  }
  byte_1E94FF120 = result;
  return result;
}

uint64_t sub_1A0811F64()
{
  if (_os_feature_enabled_impl()) {
    uint64_t result = 1;
  }
  else {
    uint64_t result = IMGetCachedDomainBoolForKeyWithDefaultValue();
  }
  byte_1E94FF6B8 = result;
  return result;
}

uint64_t sub_1A081202C()
{
  if (_os_feature_enabled_impl()) {
    uint64_t result = 1;
  }
  else {
    uint64_t result = IMGetCachedDomainBoolForKeyWithDefaultValue();
  }
  byte_1E94FF0D0 = result;
  return result;
}

uint64_t sub_1A0812128()
{
  if (_os_feature_enabled_impl()) {
    uint64_t result = 1;
  }
  else {
    uint64_t result = IMGetCachedDomainBoolForKeyWithDefaultValue();
  }
  byte_1E94FF6C8 = result;
  return result;
}

uint64_t sub_1A08121CC()
{
  if (_os_feature_enabled_impl()) {
    uint64_t result = 1;
  }
  else {
    uint64_t result = IMGetCachedDomainBoolForKeyWithDefaultValue();
  }
  byte_1E94FF6D8 = result;
  return result;
}

uint64_t sub_1A0812270()
{
  if (_os_feature_enabled_impl()) {
    uint64_t result = 1;
  }
  else {
    uint64_t result = IMGetCachedDomainBoolForKeyWithDefaultValue();
  }
  byte_1E94FF0A8 = result;
  return result;
}

uint64_t sub_1A0812314()
{
  if (_os_feature_enabled_impl()) {
    uint64_t result = 1;
  }
  else {
    uint64_t result = IMGetCachedDomainBoolForKeyWithDefaultValue();
  }
  byte_1E94FF6E8 = result;
  return result;
}

uint64_t sub_1A08123B8()
{
  if (_os_feature_enabled_impl()) {
    uint64_t result = 1;
  }
  else {
    uint64_t result = IMGetCachedDomainBoolForKeyWithDefaultValue();
  }
  byte_1E94FEA10 = result;
  return result;
}

uint64_t sub_1A081245C()
{
  if (_os_feature_enabled_impl()) {
    uint64_t result = 1;
  }
  else {
    uint64_t result = IMGetCachedDomainBoolForKeyWithDefaultValue();
  }
  byte_1E94FF6F0 = result;
  return result;
}

uint64_t sub_1A0812500()
{
  if (_os_feature_enabled_impl()) {
    uint64_t result = 1;
  }
  else {
    uint64_t result = IMGetCachedDomainBoolForKeyWithDefaultValue();
  }
  byte_1E94FE9A8 = result;
  return result;
}

uint64_t sub_1A08125A4()
{
  if (_os_feature_enabled_impl()) {
    uint64_t result = 1;
  }
  else {
    uint64_t result = IMGetCachedDomainBoolForKeyWithDefaultValue();
  }
  byte_1E94FF700 = result;
  return result;
}

uint64_t sub_1A0812648()
{
  if (_os_feature_enabled_impl()) {
    uint64_t result = 1;
  }
  else {
    uint64_t result = IMGetCachedDomainBoolForKeyWithDefaultValue();
  }
  byte_1E94FEFE8 = result;
  return result;
}

uint64_t sub_1A08126EC()
{
  if (_os_feature_enabled_impl()) {
    uint64_t result = 1;
  }
  else {
    uint64_t result = IMGetCachedDomainBoolForKeyWithDefaultValue();
  }
  byte_1E94FF710 = result;
  return result;
}

uint64_t sub_1A0812790()
{
  if (_os_feature_enabled_impl()) {
    uint64_t result = 1;
  }
  else {
    uint64_t result = IMGetCachedDomainBoolForKeyWithDefaultValue();
  }
  byte_1E94FF718 = result;
  return result;
}

uint64_t sub_1A0812834()
{
  if (_os_feature_enabled_impl()) {
    uint64_t result = 1;
  }
  else {
    uint64_t result = IMGetCachedDomainBoolForKeyWithDefaultValue();
  }
  byte_1E94FF008 = result;
  return result;
}

uint64_t sub_1A08128D8()
{
  if (_os_feature_enabled_impl()) {
    uint64_t result = 1;
  }
  else {
    uint64_t result = IMGetCachedDomainBoolForKeyWithDefaultValue();
  }
  byte_1E94FEAC8 = result;
  return result;
}

id IMSMWorkoutAlwaysPromptActionIdentifier()
{
  uint64_t v6 = 0;
  double v7 = &v6;
  uint64_t v8 = 0x2020000000;
  char v0 = (void **)qword_1E94FF720;
  uint64_t v9 = qword_1E94FF720;
  if (!qword_1E94FF720)
  {
    double v1 = (void *)sub_1A08153E0();
    void v7[3] = (uint64_t)dlsym(v1, "SMWorkoutAlwaysPromptActionIdentifier");
    qword_1E94FF720 = v7[3];
    char v0 = (void **)v7[3];
  }
  _Block_object_dispose(&v6, 8);
  if (!v0)
  {
    sub_1A09EEB7C();
    id v5 = v4;
    _Block_object_dispose(&v6, 8);
    _Unwind_Resume(v5);
  }
  id v2 = *v0;

  return v2;
}

uint64_t IMShouldDropIncomingCheckInMessage(void *a1, void *a2, uint64_t a3)
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  id v5 = a1;
  id v6 = a2;
  if (!v5)
  {
    if (IMOSLoggingEnabled())
    {
      int v11 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)__int16 v13 = 0;
        _os_log_impl(&dword_1A0772000, v11, OS_LOG_TYPE_INFO, "No URL for check-in message, skipping letting SafetyMonitorManager know", v13, 2u);
      }
    }
    goto LABEL_15;
  }
  double v7 = [sub_1A0812C14() defaultManager];
  if ((objc_opt_respondsToSelector() & 1) == 0)
  {

LABEL_15:
    uint64_t v10 = 0;
    goto LABEL_16;
  }
  if (IMOSLoggingEnabled())
  {
    uint64_t v8 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
    {
      uint64_t v9 = @"NO";
      *(_DWORD *)__int16 v13 = 138412802;
      *(void *)&v13[4] = v5;
      *(_WORD *)&v13[12] = 2112;
      if (a3) {
        uint64_t v9 = @"YES";
      }
      *(void *)&v13[14] = v6;
      __int16 v14 = 2112;
      double v15 = v9;
      _os_log_impl(&dword_1A0772000, v8, OS_LOG_TYPE_INFO, "Asking SafetyMonitorManager if we should drop incoming message with URL: %@ from handle: %@, isFromMe %@", v13, 0x20u);
    }
  }
  uint64_t v10 = objc_msgSend(v7, "shouldDropMessage:from:fromMe:", v5, v6, a3, *(_OWORD *)v13);

LABEL_16:
  return v10;
}

id sub_1A0812C14()
{
  uint64_t v4 = 0;
  id v5 = &v4;
  uint64_t v6 = 0x2050000000;
  char v0 = (void *)qword_1EB4A5EB8;
  uint64_t v7 = qword_1EB4A5EB8;
  if (!qword_1EB4A5EB8)
  {
    v3[0] = MEMORY[0x1E4F143A8];
    v3[1] = 3221225472;
    void v3[2] = sub_1A0815554;
    v3[3] = &unk_1E5A10130;
    v3[4] = &v4;
    sub_1A0815554((uint64_t)v3);
    char v0 = (void *)v5[3];
  }
  id v1 = v0;
  _Block_object_dispose(&v4, 8);

  return v1;
}

void sub_1A0812CE0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void IMInformSafetyMonitorManagerOfOutgoingMessage(void *a1, void *a2, uint64_t a3, void *a4)
{
  uint64_t v19 = *MEMORY[0x1E4F143B8];
  id v7 = a1;
  id v8 = a2;
  id v9 = a4;
  if (v7)
  {
    uint64_t v10 = [sub_1A0812C14() defaultManager];
    if (objc_opt_respondsToSelector())
    {
      if (IMOSLoggingEnabled())
      {
        int v11 = OSLogHandleForIMFoundationCategory();
        if (os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
        {
          id v12 = @"NO";
          *(_DWORD *)__int16 v14 = 138413058;
          *(void *)&void v14[4] = v7;
          if (a3) {
            id v12 = @"YES";
          }
          *(_WORD *)&v14[12] = 2112;
          *(void *)&v14[14] = v8;
          __int16 v15 = 2112;
          uint64_t v16 = v12;
          __int16 v17 = 2112;
          id v18 = v9;
          _os_log_impl(&dword_1A0772000, v11, OS_LOG_TYPE_INFO, "Informing SafetyMonitorManager of an outgoing message with URL: %@ guid: %@ was success: %@, error %@", v14, 0x2Au);
        }
      }
      objc_msgSend(v10, "iMessageSendFor:guid:successful:withError:", v7, v8, a3, v9, *(_OWORD *)v14);
    }
  }
  else if (IMOSLoggingEnabled())
  {
    __int16 v13 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v13, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)__int16 v14 = 0;
      _os_log_impl(&dword_1A0772000, v13, OS_LOG_TYPE_INFO, "No URL for check-in message, skipping letting SafetyMonitorManager know", v14, 2u);
    }
  }
}

void IMInformSafetyMonitorManagerOfIncomingMessage(void *a1, void *a2, uint64_t a3)
{
  uint64_t v14 = *MEMORY[0x1E4F143B8];
  id v5 = a1;
  id v6 = a2;
  if (v5)
  {
    id v7 = [sub_1A0812C14() defaultManager];
    if (objc_opt_respondsToSelector())
    {
      if (IMOSLoggingEnabled())
      {
        id v8 = OSLogHandleForIMFoundationCategory();
        if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
        {
          id v9 = @"NO";
          *(_DWORD *)int v11 = 138412802;
          *(void *)&v11[4] = v5;
          *(_WORD *)&v11[12] = 2112;
          if (a3) {
            id v9 = @"YES";
          }
          *(void *)&v11[14] = v6;
          __int16 v12 = 2112;
          __int16 v13 = v9;
          _os_log_impl(&dword_1A0772000, v8, OS_LOG_TYPE_INFO, "Informing SafetyMonitorManager that of an incoming message with URL: %@ from handle: %@, isFromMe %@", v11, 0x20u);
        }
      }
      objc_msgSend(v7, "iMessageReceived:fromHandle:fromMe:", v5, v6, a3, *(_OWORD *)v11);
    }
  }
  else if (IMOSLoggingEnabled())
  {
    uint64_t v10 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)int v11 = 0;
      _os_log_impl(&dword_1A0772000, v10, OS_LOG_TYPE_INFO, "No URL for check-in message, skipping letting SafetyMonitorManager know", v11, 2u);
    }
  }
}

void IMInformSafetyMonitorManagerOfDeletedMessages(void *a1)
{
  uint64_t v9 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  if ([v1 count])
  {
    id v2 = [sub_1A0812C14() defaultManager];
    char v3 = objc_opt_respondsToSelector();
    int v4 = IMOSLoggingEnabled();
    if (v3)
    {
      if (v4)
      {
        id v5 = OSLogHandleForIMFoundationCategory();
        if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
        {
          int v7 = 138412290;
          id v8 = v1;
          _os_log_impl(&dword_1A0772000, v5, OS_LOG_TYPE_INFO, "Informing SafetyMonitorManager of deleted messages URLs: %@ ", (uint8_t *)&v7, 0xCu);
        }
      }
      [v2 iMessageDeletedFor:v1];
    }
    else if (v4)
    {
      id v6 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
      {
        int v7 = 138412290;
        id v8 = v1;
        _os_log_impl(&dword_1A0772000, v6, OS_LOG_TYPE_INFO, "NOT Informing SafetyMonitorManager of deleted messages URLs: %@ since SMManager does not respond to iMessageDeletedFor:", (uint8_t *)&v7, 0xCu);
      }
    }
LABEL_16:

    goto LABEL_17;
  }
  if (IMOSLoggingEnabled())
  {
    id v2 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
    {
      LOWORD(v7) = 0;
      _os_log_impl(&dword_1A0772000, v2, OS_LOG_TYPE_INFO, "No URLs passed in, skipping letting SafetyMonitorManager know of message deletions", (uint8_t *)&v7, 2u);
    }
    goto LABEL_16;
  }
LABEL_17:
}

void IMInformSafetyMonitorManagerOfDeletedConversation(void *a1)
{
  uint64_t v9 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  if ([v1 count])
  {
    id v2 = [sub_1A0812C14() defaultManager];
    char v3 = objc_opt_respondsToSelector();
    int v4 = IMOSLoggingEnabled();
    if (v3)
    {
      if (v4)
      {
        id v5 = OSLogHandleForIMFoundationCategory();
        if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
        {
          int v7 = 138412290;
          id v8 = v1;
          _os_log_impl(&dword_1A0772000, v5, OS_LOG_TYPE_INFO, "Informing SafetyMonitorManager of deleted conversation with: %@ ", (uint8_t *)&v7, 0xCu);
        }
      }
      [v2 iMessageConversationDeletedFor:v1];
    }
    else if (v4)
    {
      id v6 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
      {
        int v7 = 138412290;
        id v8 = v1;
        _os_log_impl(&dword_1A0772000, v6, OS_LOG_TYPE_INFO, "NOT Informing SafetyMonitorManager of deleted conversation with: %@ since SMManager does not respond to iMessageConversationDeletedFor:", (uint8_t *)&v7, 0xCu);
      }
    }
LABEL_16:

    goto LABEL_17;
  }
  if (IMOSLoggingEnabled())
  {
    id v2 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
    {
      LOWORD(v7) = 0;
      _os_log_impl(&dword_1A0772000, v2, OS_LOG_TYPE_INFO, "No receiver handles passed in, skipping letting SafetyMonitorManager know of conversation deletions", (uint8_t *)&v7, 2u);
    }
    goto LABEL_16;
  }
LABEL_17:
}

void IMInformSafetyMonitorManagerOfScheduledSendScheduledFor(void *a1, void *a2, uint64_t a3, void *a4)
{
  uint64_t v21 = *MEMORY[0x1E4F143B8];
  id v7 = a1;
  id v8 = a2;
  uint64_t v9 = a4;
  if ([v8 length])
  {
    uint64_t v10 = [sub_1A0812C14() defaultManager];
    if (objc_opt_respondsToSelector())
    {
      if (IMOSLoggingEnabled())
      {
        int v11 = OSLogHandleForIMFoundationCategory();
        if (os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
        {
          __int16 v12 = @"NO";
          *(_DWORD *)uint64_t v16 = 138413058;
          *(void *)&void v16[4] = v7;
          if (a3) {
            __int16 v12 = @"YES";
          }
          *(_WORD *)&unsigned char v16[12] = 2112;
          *(void *)&v16[14] = v8;
          __int16 v17 = 2112;
          id v18 = v12;
          __int16 v19 = 2112;
          uint64_t v20 = v9;
          _os_log_impl(&dword_1A0772000, v11, OS_LOG_TYPE_INFO, "Informing SafetyMonitorManager that scheduled message send was scheduled with URL: %@ guid: %@ was success: %@, error %@", v16, 0x2Au);
        }
      }
      objc_msgSend(v10, "iMessageScheduledSendScheduledFor:guid:successful:withError:", v7, v8, a3, v9, *(_OWORD *)v16);
    }
    else if (objc_opt_respondsToSelector())
    {
      if (IMOSLoggingEnabled())
      {
        uint64_t v14 = OSLogHandleForIMFoundationCategory();
        if (os_log_type_enabled(v14, OS_LOG_TYPE_INFO))
        {
          __int16 v15 = @"NO";
          *(_DWORD *)uint64_t v16 = 138412802;
          *(void *)&void v16[4] = v8;
          *(_WORD *)&unsigned char v16[12] = 2112;
          if (a3) {
            __int16 v15 = @"YES";
          }
          *(void *)&v16[14] = v15;
          __int16 v17 = 2112;
          id v18 = v9;
          _os_log_impl(&dword_1A0772000, v14, OS_LOG_TYPE_INFO, "Informing SafetyMonitorManager that scheduled message send was scheduled for messageGUID: %@ was success: %@, error %@", v16, 0x20u);
        }
      }
      objc_msgSend(v10, "iMessageScheduledSendScheduledFor:successful:withError:", v8, a3, v9, *(void *)v16, *(void *)&v16[8]);
    }
  }
  else if (IMOSLoggingEnabled())
  {
    __int16 v13 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v13, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)uint64_t v16 = 0;
      _os_log_impl(&dword_1A0772000, v13, OS_LOG_TYPE_INFO, "Invalid messageGUID passed in, skipping letting SafetyMonitorManager know", v16, 2u);
    }
  }
}

void IMInformSafetyMonitorManagerOfScheduledSendCancelledFor(void *a1, uint64_t a2, void *a3)
{
  uint64_t v14 = *MEMORY[0x1E4F143B8];
  id v5 = a1;
  id v6 = a3;
  if ([v5 length])
  {
    id v7 = [sub_1A0812C14() defaultManager];
    if (objc_opt_respondsToSelector())
    {
      if (IMOSLoggingEnabled())
      {
        id v8 = OSLogHandleForIMFoundationCategory();
        if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
        {
          uint64_t v9 = @"NO";
          *(_DWORD *)int v11 = 138412802;
          *(void *)&v11[4] = v5;
          *(_WORD *)&v11[12] = 2112;
          if (a2) {
            uint64_t v9 = @"YES";
          }
          *(void *)&v11[14] = v9;
          __int16 v12 = 2112;
          id v13 = v6;
          _os_log_impl(&dword_1A0772000, v8, OS_LOG_TYPE_INFO, "Informing SafetyMonitorManager that scheduled message send for messageGUID: %@ was cancelled with success: %@, error %@", v11, 0x20u);
        }
      }
      objc_msgSend(v7, "iMessageScheduledSendCancelFor:successful:withError:", v5, a2, v6, *(_OWORD *)v11);
    }
  }
  else if (IMOSLoggingEnabled())
  {
    uint64_t v10 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)int v11 = 0;
      _os_log_impl(&dword_1A0772000, v10, OS_LOG_TYPE_INFO, "Invalid messageGUID passed in, skipping letting SafetyMonitorManager know", v11, 2u);
    }
  }
}

void IMInformSafetyMonitorManagerOfScheduledSendTriggeredFor(void *a1)
{
  uint64_t v6 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  if ([v1 length])
  {
    id v2 = [sub_1A0812C14() defaultManager];
    if (objc_opt_respondsToSelector())
    {
      if (IMOSLoggingEnabled())
      {
        char v3 = OSLogHandleForIMFoundationCategory();
        if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
        {
          int v4 = 138412290;
          id v5 = v1;
          _os_log_impl(&dword_1A0772000, v3, OS_LOG_TYPE_INFO, "Informing SafetyMonitorManager that scheduled message send for messageGUID: %@ was triggered", (uint8_t *)&v4, 0xCu);
        }
      }
      [v2 iMessageScheduledSendTriggeredFor:v1];
    }
LABEL_12:

    goto LABEL_13;
  }
  if (IMOSLoggingEnabled())
  {
    id v2 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
    {
      LOWORD(v4) = 0;
      _os_log_impl(&dword_1A0772000, v2, OS_LOG_TYPE_INFO, "Invalid messageGUID passed in, skipping letting SafetyMonitorManager know", (uint8_t *)&v4, 2u);
    }
    goto LABEL_12;
  }
LABEL_13:
}

void IMFetchSafetyMonitorHandleSuggestions(void *a1)
{
  id v1 = a1;
  id v2 = [sub_1A0812C14() defaultManager];
  uint64_t v9 = 0;
  uint64_t v10 = &v9;
  uint64_t v11 = 0x3032000000;
  __int16 v12 = sub_1A077786C;
  id v13 = sub_1A0777724;
  id v14 = 0;
  id v14 = [MEMORY[0x1E4F1CA48] array];
  if (objc_opt_respondsToSelector())
  {
    if (IMOSLoggingEnabled())
    {
      char v3 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)long long buf = 0;
        _os_log_impl(&dword_1A0772000, v3, OS_LOG_TYPE_INFO, "Fetching handles with which the user is most likely to initiate a session", buf, 2u);
      }
    }
    v5[0] = MEMORY[0x1E4F143A8];
    v5[1] = 3221225472;
    void v5[2] = sub_1A0813CEC;
    v5[3] = &unk_1E5A12B40;
    id v7 = &v9;
    id v6 = v1;
    [v2 fetchMostLikelyReceiverHandlesWithHandler:v5];
  }
  else
  {
    if (IMOSLoggingEnabled())
    {
      int v4 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)long long buf = 0;
        _os_log_impl(&dword_1A0772000, v4, OS_LOG_TYPE_INFO, "Failed to fetch SafetyMonitor Handle suggestions", buf, 2u);
      }
    }
    (*((void (**)(id, uint64_t))v1 + 2))(v1, v10[5]);
  }
  _Block_object_dispose(&v9, 8);
}

void sub_1A0813CEC(uint64_t a1, void *a2, void *a3)
{
  uint64_t v33 = *MEMORY[0x1E4F143B8];
  id v23 = a2;
  id v5 = a3;
  int v6 = IMOSLoggingEnabled();
  if (v5)
  {
    if (v6)
    {
      id v7 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
      {
        id v8 = [v5 localizedDescription];
        *(_DWORD *)long long buf = 138412290;
        uint64_t v30 = (uint64_t)v8;
        _os_log_impl(&dword_1A0772000, v7, OS_LOG_TYPE_INFO, "Error fetching likelySessionHandles: %@", buf, 0xCu);
      }
    }
  }
  else
  {
    if (v6)
    {
      uint64_t v9 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
      {
        uint64_t v10 = [v23 count];
        uint64_t v11 = [0 localizedDescription];
        *(_DWORD *)long long buf = 134218242;
        uint64_t v30 = v10;
        __int16 v31 = 2112;
        uint64_t v32 = v11;
        _os_log_impl(&dword_1A0772000, v9, OS_LOG_TYPE_INFO, "%lu handles received.Error: %@", buf, 0x16u);
      }
    }
    long long v26 = 0u;
    long long v27 = 0u;
    long long v24 = 0u;
    long long v25 = 0u;
    id v12 = v23;
    uint64_t v13 = [v12 countByEnumeratingWithState:&v24 objects:v28 count:16];
    if (v13)
    {
      uint64_t v14 = *(void *)v25;
      do
      {
        for (uint64_t i = 0; i != v13; ++i)
        {
          if (*(void *)v25 != v14) {
            objc_enumerationMutation(v12);
          }
          uint64_t v16 = *(void **)(*((void *)&v24 + 1) + 8 * i);
          __int16 v17 = [v16 primaryHandle];
          BOOL v18 = [v17 length] == 0;

          if (!v18)
          {
            __int16 v19 = [v16 primaryHandle];
            uint64_t v20 = +[IMContactStore validateAndCleanupID:v19];

            if ([v20 length]) {
              [*(id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) addObject:v20];
            }
          }
        }
        uint64_t v13 = [v12 countByEnumeratingWithState:&v24 objects:v28 count:16];
      }
      while (v13);
    }
  }
  if (IMOSLoggingEnabled())
  {
    uint64_t v21 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v21, OS_LOG_TYPE_INFO))
    {
      uint64_t v22 = *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40);
      *(_DWORD *)long long buf = 138412290;
      uint64_t v30 = v22;
      _os_log_impl(&dword_1A0772000, v21, OS_LOG_TYPE_INFO, "Returning likelySessionHandles: %@", buf, 0xCu);
    }
  }
  (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_1A0814014(_Unwind_Exception *a1, int a2)
{
  if (a2 == 1)
  {
    objc_begin_catch(a1);
    objc_end_catch();
    JUMPOUT(0x1A0813F44);
  }
  _Unwind_Resume(a1);
}

void IMShouldShowKeyboardSuggestionsForCheckIn(void *a1, void *a2, void *a3)
{
  uint64_t v19 = *MEMORY[0x1E4F143B8];
  id v5 = a1;
  id v6 = a2;
  id v7 = a3;
  if (![v5 length] || !objc_msgSend(v6, "length"))
  {
    if (IMOSLoggingEnabled())
    {
      id v8 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)long long buf = 138412546;
        id v16 = v5;
        __int16 v17 = 2112;
        id v18 = v6;
        _os_log_impl(&dword_1A0772000, v8, OS_LOG_TYPE_INFO, "Invalid handle ID passed in :%@, %@", buf, 0x16u);
      }
    }
    v7[2](v7, 0);
  }
  uint64_t v9 = [sub_1A0812C14() defaultManager];
  if (objc_opt_respondsToSelector())
  {
    uint64_t v10 = (void *)[objc_alloc((Class)sub_1A08142F0()) initWithPrimaryHandle:v5 secondaryHandles:MEMORY[0x1E4F1CBF0]];
    uint64_t v11 = (void *)[objc_alloc((Class)sub_1A08142F0()) initWithPrimaryHandle:v6 secondaryHandles:MEMORY[0x1E4F1CBF0]];
    v13[0] = MEMORY[0x1E4F143A8];
    v13[1] = 3221225472;
    void v13[2] = sub_1A08143D4;
    v13[3] = &unk_1E5A12178;
    uint64_t v14 = v7;
    [v9 shouldShowKeyboardSuggestionsForInitiator:v10 receiver:v11 handler:v13];
  }
  else
  {
    if (IMOSLoggingEnabled())
    {
      id v12 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v12, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)long long buf = 0;
        _os_log_impl(&dword_1A0772000, v12, OS_LOG_TYPE_INFO, "Failed to fetch SafetyMonitor KB suggestion policy", buf, 2u);
      }
    }
    v7[2](v7, 0);
  }
}

id sub_1A08142F0()
{
  uint64_t v4 = 0;
  id v5 = &v4;
  uint64_t v6 = 0x2050000000;
  char v0 = (void *)qword_1EB4A5EB0;
  uint64_t v7 = qword_1EB4A5EB0;
  if (!qword_1EB4A5EB0)
  {
    v3[0] = MEMORY[0x1E4F143A8];
    v3[1] = 3221225472;
    void v3[2] = sub_1A08155AC;
    v3[3] = &unk_1E5A10130;
    v3[4] = &v4;
    sub_1A08155AC((uint64_t)v3);
    char v0 = (void *)v5[3];
  }
  id v1 = v0;
  _Block_object_dispose(&v4, 8);

  return v1;
}

void sub_1A08143BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A08143D4(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v9 = *MEMORY[0x1E4F143B8];
  id v4 = a3;
  if (v4)
  {
    if (IMOSLoggingEnabled())
    {
      id v5 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
      {
        uint64_t v6 = [v4 localizedDescription];
        int v7 = 138412290;
        id v8 = v6;
        _os_log_impl(&dword_1A0772000, v5, OS_LOG_TYPE_INFO, "Error fetching shouldShowKeyboardSuggestionsForInitiator: %@", (uint8_t *)&v7, 0xCu);
      }
    }
    (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
  }
  else
  {
    (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
  }
}

void IMShouldShowTipKitSuggestionsForCheckIn(void *a1, void *a2, void *a3)
{
  uint64_t v19 = *MEMORY[0x1E4F143B8];
  id v5 = a1;
  id v6 = a2;
  int v7 = a3;
  if (![v5 length] || !objc_msgSend(v6, "length"))
  {
    if (IMOSLoggingEnabled())
    {
      id v8 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)long long buf = 138412546;
        id v16 = v5;
        __int16 v17 = 2112;
        id v18 = v6;
        _os_log_impl(&dword_1A0772000, v8, OS_LOG_TYPE_INFO, "Invalid handle ID passed in :%@, %@", buf, 0x16u);
      }
    }
    v7[2](v7, 0);
  }
  uint64_t v9 = [sub_1A0812C14() defaultManager];
  if (objc_opt_respondsToSelector())
  {
    uint64_t v10 = (void *)[objc_alloc((Class)sub_1A08142F0()) initWithPrimaryHandle:v5 secondaryHandles:MEMORY[0x1E4F1CBF0]];
    uint64_t v11 = (void *)[objc_alloc((Class)sub_1A08142F0()) initWithPrimaryHandle:v6 secondaryHandles:MEMORY[0x1E4F1CBF0]];
    v13[0] = MEMORY[0x1E4F143A8];
    v13[1] = 3221225472;
    void v13[2] = sub_1A0814794;
    v13[3] = &unk_1E5A12178;
    uint64_t v14 = v7;
    [v9 shouldShowTipKitSuggestionsForInitiator:v10 receiver:v11 handler:v13];
  }
  else
  {
    if (IMOSLoggingEnabled())
    {
      id v12 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v12, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)long long buf = 0;
        _os_log_impl(&dword_1A0772000, v12, OS_LOG_TYPE_INFO, "Failed to fetch SafetyMonitor TipKit suggestion policy", buf, 2u);
      }
    }
    v7[2](v7, 0);
  }
}

void sub_1A0814794(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v9 = *MEMORY[0x1E4F143B8];
  id v4 = a3;
  if (v4)
  {
    if (IMOSLoggingEnabled())
    {
      id v5 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
      {
        id v6 = [v4 localizedDescription];
        int v7 = 138412290;
        id v8 = v6;
        _os_log_impl(&dword_1A0772000, v5, OS_LOG_TYPE_INFO, "Error fetching shouldShowTipKitSuggestionsForInitiator: %@", (uint8_t *)&v7, 0xCu);
      }
    }
    (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
  }
  else
  {
    (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
  }
}

uint64_t IMPopulateNotificationUserInfoForCheckIn(void *a1, void *a2, void *a3)
{
  uint64_t v20 = *MEMORY[0x1E4F143B8];
  id v5 = a1;
  id v6 = a2;
  id v7 = a3;
  uint64_t v8 = [v6 length];
  if (v5 && v7 && v8)
  {
    uint64_t v9 = [sub_1A0812C14() defaultManager];
    if (objc_opt_respondsToSelector())
    {
      uint64_t v10 = [v9 prepareUserInfoForNotificationContent:v5 initiatorHandle:v6 messageUrl:v7];
    }
    else
    {
      if (IMOSLoggingEnabled())
      {
        id v12 = OSLogHandleForIMFoundationCategory();
        if (os_log_type_enabled(v12, OS_LOG_TYPE_INFO))
        {
          LOWORD(v14) = 0;
          _os_log_impl(&dword_1A0772000, v12, OS_LOG_TYPE_INFO, "SafetyMonitor does not respond to prepareUserInfoForNotificationContent. Defaulting to DefaultDeliveryRequest", (uint8_t *)&v14, 2u);
        }
      }
      uint64_t v10 = 0;
    }
  }
  else
  {
    if (IMOSLoggingEnabled())
    {
      uint64_t v11 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
      {
        int v14 = 138412802;
        id v15 = v5;
        __int16 v16 = 2112;
        id v17 = v6;
        __int16 v18 = 2112;
        id v19 = v7;
        _os_log_impl(&dword_1A0772000, v11, OS_LOG_TYPE_INFO, "Invalid parameter passed in :%@, %@, %@", (uint8_t *)&v14, 0x20u);
      }
    }
    uint64_t v10 = 0;
  }

  return v10;
}

void IMRespondToNotificationWithIdentifier(void *a1, void *a2, void *a3, void *a4)
{
  id v7 = a1;
  id v8 = a2;
  id v9 = a3;
  id v10 = a4;
  uint64_t v11 = [sub_1A0812C14() defaultManager];
  if (objc_opt_respondsToSelector())
  {
    [v11 respondToNotificationWithIdentifier:v7 sessionIdentifier:v8 actionIdentifier:v9 handler:v10];
  }
  else if (IMOSLoggingEnabled())
  {
    id v12 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v12, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)uint64_t v13 = 0;
      _os_log_impl(&dword_1A0772000, v12, OS_LOG_TYPE_INFO, "SafetyMonitor does not respond to respondToNotificationWithIdentifier.", v13, 2u);
    }
  }
}

void IMInformSafetyMonitorManagerOfChangedGroupMembership(void *a1)
{
  uint64_t v9 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  if (v1)
  {
    id v2 = [sub_1A0812C14() defaultManager];
    char v3 = objc_opt_respondsToSelector();
    int v4 = IMOSLoggingEnabled();
    if (v3)
    {
      if (v4)
      {
        id v5 = OSLogHandleForIMFoundationCategory();
        if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
        {
          int v7 = 138412290;
          id v8 = v1;
          _os_log_impl(&dword_1A0772000, v5, OS_LOG_TYPE_INFO, "Informing SafetyMonitorManager of changed group membership with: %@ ", (uint8_t *)&v7, 0xCu);
        }
      }
      [v2 iMessageGroupMembershipChangedFor:v1];
    }
    else if (v4)
    {
      id v6 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
      {
        int v7 = 138412290;
        id v8 = v1;
        _os_log_impl(&dword_1A0772000, v6, OS_LOG_TYPE_INFO, "NOT Informing SafetyMonitorManager of changed group membership: %@ since SMManager does not respond to iMessageGroupMembershipChangedFor:", (uint8_t *)&v7, 0xCu);
      }
    }
LABEL_16:

    goto LABEL_17;
  }
  if (IMOSLoggingEnabled())
  {
    id v2 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
    {
      LOWORD(v7) = 0;
      _os_log_impl(&dword_1A0772000, v2, OS_LOG_TYPE_INFO, "No groupID passed in, skipping letting SafetyMonitorManager know of group membership change", (uint8_t *)&v7, 2u);
    }
    goto LABEL_16;
  }
LABEL_17:
}

void IMInformSafetyMonitorManagerOfKickFromGroup(void *a1)
{
  uint64_t v9 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  if (v1)
  {
    id v2 = [sub_1A0812C14() defaultManager];
    char v3 = objc_opt_respondsToSelector();
    int v4 = IMOSLoggingEnabled();
    if (v3)
    {
      if (v4)
      {
        id v5 = OSLogHandleForIMFoundationCategory();
        if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
        {
          int v7 = 138412290;
          id v8 = v1;
          _os_log_impl(&dword_1A0772000, v5, OS_LOG_TYPE_INFO, "Informing SafetyMonitorManager of kick from group with: %@ ", (uint8_t *)&v7, 0xCu);
        }
      }
      [v2 kickedFromIMessageGroupWith:v1];
    }
    else if (v4)
    {
      id v6 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
      {
        int v7 = 138412290;
        id v8 = v1;
        _os_log_impl(&dword_1A0772000, v6, OS_LOG_TYPE_INFO, "NOT Informing SafetyMonitorManager of kick from group: %@ since SMManager does not respond to kickedFromIMessageGroupWith:", (uint8_t *)&v7, 0xCu);
      }
    }
LABEL_16:

    goto LABEL_17;
  }
  if (IMOSLoggingEnabled())
  {
    id v2 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
    {
      LOWORD(v7) = 0;
      _os_log_impl(&dword_1A0772000, v2, OS_LOG_TYPE_INFO, "No groupID passed in, skipping letting SafetyMonitorManager know of kick from group", (uint8_t *)&v7, 2u);
    }
    goto LABEL_16;
  }
LABEL_17:
}

void IMInformSafetyMonitorManagerOfChangedGroupDisplayName(void *a1)
{
  uint64_t v9 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  if (v1)
  {
    id v2 = [sub_1A0812C14() defaultManager];
    char v3 = objc_opt_respondsToSelector();
    int v4 = IMOSLoggingEnabled();
    if (v3)
    {
      if (v4)
      {
        id v5 = OSLogHandleForIMFoundationCategory();
        if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
        {
          int v7 = 138412290;
          id v8 = v1;
          _os_log_impl(&dword_1A0772000, v5, OS_LOG_TYPE_INFO, "Informing SafetyMonitorManager of changed group display name with: %@ ", (uint8_t *)&v7, 0xCu);
        }
      }
      [v2 iMessageGroupDisplayNameChangedFor:v1];
    }
    else if (v4)
    {
      id v6 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
      {
        int v7 = 138412290;
        id v8 = v1;
        _os_log_impl(&dword_1A0772000, v6, OS_LOG_TYPE_INFO, "NOT Informing SafetyMonitorManager of changed group display name: %@ since SMManager does not respond to iMessageGroupDisplayNameChangedFor:", (uint8_t *)&v7, 0xCu);
      }
    }
LABEL_16:

    goto LABEL_17;
  }
  if (IMOSLoggingEnabled())
  {
    id v2 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
    {
      LOWORD(v7) = 0;
      _os_log_impl(&dword_1A0772000, v2, OS_LOG_TYPE_INFO, "No groupID passed in, skipping letting SafetyMonitorManager know of group display name change", (uint8_t *)&v7, 2u);
    }
    goto LABEL_16;
  }
LABEL_17:
}

void IMInformSafetyMonitorManagerOfChangedGroupPhoto(void *a1)
{
  uint64_t v9 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  if (v1)
  {
    id v2 = [sub_1A0812C14() defaultManager];
    char v3 = objc_opt_respondsToSelector();
    int v4 = IMOSLoggingEnabled();
    if (v3)
    {
      if (v4)
      {
        id v5 = OSLogHandleForIMFoundationCategory();
        if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
        {
          int v7 = 138412290;
          id v8 = v1;
          _os_log_impl(&dword_1A0772000, v5, OS_LOG_TYPE_INFO, "Informing SafetyMonitorManager of changed group photo with: %@ ", (uint8_t *)&v7, 0xCu);
        }
      }
      [v2 iMessageGroupPhotoChangedFor:v1];
    }
    else if (v4)
    {
      id v6 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
      {
        int v7 = 138412290;
        id v8 = v1;
        _os_log_impl(&dword_1A0772000, v6, OS_LOG_TYPE_INFO, "NOT Informing SafetyMonitorManager of changed group photo: %@ since SMManager does not respond to iMessageGroupPhotoChangedFor:", (uint8_t *)&v7, 0xCu);
      }
    }
LABEL_16:

    goto LABEL_17;
  }
  if (IMOSLoggingEnabled())
  {
    id v2 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
    {
      LOWORD(v7) = 0;
      _os_log_impl(&dword_1A0772000, v2, OS_LOG_TYPE_INFO, "No groupID passed in, skipping letting SafetyMonitorManager know of group photo change", (uint8_t *)&v7, 2u);
    }
    goto LABEL_16;
  }
LABEL_17:
}

void *sub_1A0815390(uint64_t a1)
{
  id v2 = (void *)sub_1A08153E0();
  uint64_t result = dlsym(v2, "SMWorkoutAlwaysPromptActionIdentifier");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = result;
  qword_1E94FF720 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t sub_1A08153E0()
{
  uint64_t v6 = *MEMORY[0x1E4F143B8];
  v3[0] = 0;
  if (!qword_1EB4A5EA8)
  {
    v3[1] = MEMORY[0x1E4F143A8];
    void v3[2] = 3221225472;
    v3[3] = sub_1A08154E0;
    v3[4] = &unk_1E5A10168;
    void v3[5] = v3;
    long long v4 = xmmword_1E5A12B60;
    uint64_t v5 = 0;
    qword_1EB4A5EA8 = _sl_dlopen();
  }
  uint64_t v0 = qword_1EB4A5EA8;
  id v1 = (void *)v3[0];
  if (!qword_1EB4A5EA8)
  {
    id v1 = (void *)abort_report_np();
    goto LABEL_7;
  }
  if (v3[0]) {
LABEL_7:
  }
    free(v1);
  return v0;
}

uint64_t sub_1A08154E0()
{
  uint64_t result = _sl_dlopen();
  qword_1EB4A5EA8 = result;
  return result;
}

Class sub_1A0815554(uint64_t a1)
{
  sub_1A08153E0();
  Class result = objc_getClass("SMSafetyMonitorManager");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = result;
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    qword_1EB4A5EB8 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  }
  else
  {
    uint64_t v3 = sub_1A09F0E00();
    return (Class)sub_1A08155AC(v3);
  }
  return result;
}

IMSharedEmergencyInfo *sub_1A08155AC(uint64_t a1)
{
  sub_1A08153E0();
  Class result = (IMSharedEmergencyInfo *)objc_getClass("SMHandle");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = result;
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    qword_1EB4A5EB0 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  }
  else
  {
    sub_1A09F0E28();
    return [(IMSharedEmergencyInfo *)v3 initWithStewieUserPersona:v5 stewieUserPersona:v6 conversationID:v7 messageType:v8];
  }
  return result;
}

uint64_t sub_1A08169F4(uint64_t a1)
{
  return MEMORY[0x1F4181798](*(void *)(a1 + 32), sel_currentTestDidFinish);
}

uint64_t sub_1A0816C40(uint64_t a1)
{
  objc_msgSend(*(id *)(a1 + 40), "testLog:", @"actually starting test batch %ld of %ld", *(void *)(a1 + 48), *(void *)(a1 + 56));
  v4[0] = MEMORY[0x1E4F143A8];
  v4[1] = 3221225472;
  v4[2] = sub_1A0816CDC;
  v4[3] = &unk_1E5A12BB0;
  id v2 = *(void **)(a1 + 32);
  void v4[4] = *(void *)(a1 + 40);
  long long v5 = *(_OWORD *)(a1 + 48);
  return [v2 runTest:v4];
}

uint64_t sub_1A0816CDC(uint64_t a1)
{
  objc_msgSend(*(id *)(a1 + 32), "testLog:", @"finished test batch %ld of %ld", *(void *)(a1 + 40), *(void *)(a1 + 48));
  uint64_t v2 = *(void *)(a1 + 32);

  return MEMORY[0x1F4181798](v2, sel_runTestsIfNeededWithRepeatCount_withCount_);
}

uint64_t sub_1A0816EE8()
{
  uint64_t v0 = objc_alloc_init(IMSafetyMonitorCoordinator);
  uint64_t v1 = qword_1EB4A6080;
  qword_1EB4A6080 = (uint64_t)v0;

  return MEMORY[0x1F41817F8](v0, v1);
}

uint64_t sub_1A081997C(uint64_t a1, void *a2)
{
  if (IMOSLoggingEnabled())
  {
    uint64_t v3 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)long long v5 = 0;
      _os_log_impl(&dword_1A0772000, v3, OS_LOG_TYPE_INFO, "Received Me Card Picker Changed Notification (IMContactStore)", v5, 2u);
    }
  }
  return [a2 meCardChanged:0];
}

void sub_1A0819F3C(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + 32);
  id v2 = (id)[*(id *)(a1 + 40) copy];
  [v1 addEntriesToIDToCNContactMap:v2];
}

void sub_1A0819F8C()
{
  id v0 = [MEMORY[0x1E4F28EB8] defaultCenter];
  [v0 postNotificationName:IMContactStoreBatchLoadCompleteNotification object:0];
}

void sub_1A081A15C(uint64_t a1, void *a2, unsigned char *a3)
{
  objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40), a2);
  id v6 = a2;
  id v7 = *(id **)(a1 + 32);
  int64_t v8 = [v7[3] currentHistoryToken];
  [v7 setCurrentHistoryToken:v8];

  +[IMContactStore logCNContact:v6];
  *a3 = 1;
}

void sub_1A081B3D0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1A081BBB4(uint64_t a1)
{
  uint64_t v29 = *MEMORY[0x1E4F143B8];
  uint64_t v2 = *(void *)(a1 + 40);
  uint64_t v3 = *(void **)(*(void *)(a1 + 32) + 24);
  id v26 = 0;
  SEL v4 = [v3 enumeratorForChangeHistoryFetchRequest:v2 error:&v26];
  id v5 = v26;
  int v6 = IMOSLoggingEnabled();
  if (v4)
  {
    if (v6)
    {
      id v7 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
      {
        int64_t v8 = [v4 value];
        *(_DWORD *)long long buf = 134217984;
        uint64_t v28 = v8;
        _os_log_impl(&dword_1A0772000, v7, OS_LOG_TYPE_INFO, "Received %lu contact change history events", buf, 0xCu);
      }
    }
    uint64_t v9 = objc_alloc_init(IMContactStoreChangeHistoryEventsHandler);
    id v10 = [v4 value];
    uint64_t v11 = [v10 nextObject];
    if (v11)
    {
      while (1)
      {
        id v12 = (void *)MEMORY[0x1A6228190]();
        [v11 acceptEventVisitor:v9];
        if ([(IMContactStoreChangeHistoryEventsHandler *)v9 receivedDropEverythingEvent]) {
          break;
        }
        uint64_t v13 = [v10 nextObject];

        uint64_t v11 = (void *)v13;
        if (!v13) {
          goto LABEL_19;
        }
      }
      if (IMOSLoggingEnabled())
      {
        __int16 v16 = OSLogHandleForIMFoundationCategory();
        if (os_log_type_enabled(v16, OS_LOG_TYPE_INFO))
        {
          *(_WORD *)long long buf = 0;
          _os_log_impl(&dword_1A0772000, v16, OS_LOG_TYPE_INFO, "Skipping Contact change history events after the Drop Everything Event", buf, 2u);
        }
      }
    }
LABEL_19:
    id v17 = [v4 value];
    if (v17
      && (BOOL v18 = [(IMContactStoreChangeHistoryEventsHandler *)v9 receivedDropEverythingEvent], v17, !v18))
    {
      uint64_t v22 = *(void **)(a1 + 32);
      id v23 = [v4 currentHistoryToken];
      [v22 setCurrentHistoryToken:v23];
    }
    else
    {
      id v19 = [v4 value];
      if (v19
        && (BOOL v20 = [(IMContactStoreChangeHistoryEventsHandler *)v9 receivedDropEverythingEvent], v19, v20))
      {
        [*(id *)(a1 + 32) setCurrentHistoryToken:0];
      }
      else if (IMOSLoggingEnabled())
      {
        uint64_t v21 = OSLogHandleForIMFoundationCategory();
        if (os_log_type_enabled(v21, OS_LOG_TYPE_INFO))
        {
          *(_WORD *)long long buf = 0;
          _os_log_impl(&dword_1A0772000, v21, OS_LOG_TYPE_INFO, "Not updating history token since NO change history events were recieved.", buf, 2u);
        }
      }
    }
    long long v24 = [*(id *)(a1 + 32) getIDToCNContactMap];
    +[IMContactStore logDictionary:v24];

    long long v25 = [*(id *)(a1 + 32) currentHistoryToken];
    +[IMContactStore logHistoryToken:v25];
  }
  else if (v6)
  {
    int v14 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v14, OS_LOG_TYPE_INFO))
    {
      id v15 = [v5 description];
      *(_DWORD *)long long buf = 138412290;
      uint64_t v28 = v15;
      _os_log_impl(&dword_1A0772000, v14, OS_LOG_TYPE_INFO, "Could not fetch Change History from CNContactStore error:%@", buf, 0xCu);
    }
  }
}

void sub_1A081C254(_Unwind_Exception *a1, int a2)
{
  if (a2 == 1)
  {
    objc_begin_catch(a1);
    objc_end_catch();
    JUMPOUT(0x1A081C208);
  }
  _Unwind_Resume(a1);
}

void sub_1A081CA08(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1A081D844()
{
  id v0 = objc_alloc_init(IMDPLogsCollector);
  uint64_t v1 = qword_1EB4A6670;
  qword_1EB4A6670 = (uint64_t)v0;

  return MEMORY[0x1F41817F8](v0, v1);
}

uint64_t sub_1A081DE30(uint64_t a1, uint64_t a2)
{
  return [*(id *)(a1 + 32) addObject:a2];
}

uint64_t sub_1A081DEA0(uint64_t a1, void *a2)
{
  if (IMOSLoggingEnabled())
  {
    uint64_t v3 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)id v5 = 0;
      _os_log_impl(&dword_1A0772000, v3, OS_LOG_TYPE_INFO, "Received Do Not Disturb List Changed Notification", v5, 2u);
    }
  }
  [a2 _handleMutedChatListChanged];
  return +[MutedConversationListRemoteNotifier notifyListChanged];
}

void sub_1A081E700()
{
  CFPreferencesAppSynchronize(@"com.apple.MobileSMS.CKDNDList");
  id v0 = [MEMORY[0x1E4F28EB8] defaultCenter];
  [v0 postNotificationName:@"__kIMMutedChatListDidChangeNotification" object:0];
}

uint64_t sub_1A081E8A4(void *a1, const char *a2)
{
  return [a1 isSingleCharacterString:@"\uFFFE"];
}

uint64_t sub_1A081E8B4(void *a1)
{
  if ([a1 isSingleCharacterString:@"\uFFFE"]) {
    return 1;
  }

  return [a1 isSingleCharacterString:@"\uFFFF"];
}

uint64_t IMSharedUtilitiesProtoCloudKitEncryptedGroupTitleChangeReadFrom(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  SEL v4 = (int *)MEMORY[0x1E4F940E0];
  id v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    while (2)
    {
      if (!*(unsigned char *)(a2 + *v5))
      {
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v3;
          unint64_t v12 = *(void *)(a2 + v11);
          if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
          *(void *)(a2 + v11) = v12 + 1;
          v10 |= (unint64_t)(v13 & 0x7F) << v8;
          if ((v13 & 0x80) == 0) {
            goto LABEL_12;
          }
          v8 += 7;
          BOOL v14 = v9++ >= 9;
          if (v14)
          {
            unint64_t v10 = 0;
            int v15 = *(unsigned __int8 *)(a2 + *v5);
            goto LABEL_14;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        if (*(unsigned char *)(a2 + *v5)) {
          unint64_t v10 = 0;
        }
LABEL_14:
        if (v15) {
          BOOL v16 = 1;
        }
        else {
          BOOL v16 = (v10 & 7) == 4;
        }
        if (!v16)
        {
          switch((v10 >> 3))
          {
            case 1u:
              char v17 = 0;
              unsigned int v18 = 0;
              uint64_t v19 = 0;
              *(unsigned char *)(a1 + 36) |= 1u;
              break;
            case 2u:
              uint64_t String = (void *)PBReaderReadString();

              id v25 = String;
              uint64_t v26 = 8;
              goto LABEL_31;
            case 3u:
              long long v27 = (void *)PBReaderReadString();

              id v25 = v27;
              uint64_t v26 = 16;
              goto LABEL_31;
            case 4u:
              Data = (void *)PBReaderReadData();

              id v25 = Data;
              uint64_t v26 = 24;
LABEL_31:
              *(void *)(a1 + v26) = v25;
              goto LABEL_36;
            default:
              uint64_t result = PBReaderSkipValueWithTag();
              if (!result) {
                return result;
              }
LABEL_36:
              if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
                return *(unsigned char *)(a2 + *v5) == 0;
              }
              continue;
          }
          while (1)
          {
            uint64_t v20 = *v3;
            unint64_t v21 = *(void *)(a2 + v20);
            if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
              break;
            }
            char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
            *(void *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0) {
              goto LABEL_33;
            }
            v17 += 7;
            BOOL v14 = v18++ >= 9;
            if (v14)
            {
              LODWORD(v19) = 0;
              goto LABEL_35;
            }
          }
          *(unsigned char *)(a2 + *v5) = 1;
LABEL_33:
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v19) = 0;
          }
LABEL_35:
          *(_DWORD *)(a1 + 32) = v19;
          goto LABEL_36;
        }
      }
      break;
    }
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t sub_1A081F34C()
{
  uint64_t v0 = objc_opt_new();
  uint64_t v1 = qword_1EB4A5E08;
  qword_1EB4A5E08 = v0;

  return MEMORY[0x1F41817F8](v0, v1);
}

void sub_1A081F7E4(uint64_t a1)
{
  id v4 = [MEMORY[0x1E4F504C8] discoverabilitySignal];
  uint64_t v2 = [v4 source];
  uint64_t v3 = (void *)[objc_alloc(MEMORY[0x1E4F50318]) initWithIdentifier:*(void *)(a1 + 32) bundleID:@"com.apple.MobileSMS" context:0];
  [v2 sendEvent:v3];
}

id sub_1A081F888()
{
  v7[1] = *MEMORY[0x1E4F143B8];
  uint64_t v0 = [MEMORY[0x1E4F4EF40] sharedInstance];
  uint64_t v1 = [v0 primaryAuthKitAccount];
  uint64_t v2 = [v0 userIsSeniorForAccount:v1];
  int v6 = @"u65_flag";
  uint64_t v3 = [NSNumber numberWithBool:v2];
  v7[0] = v3;
  id v4 = [MEMORY[0x1E4F1C9E8] dictionaryWithObjects:v7 forKeys:&v6 count:1];

  return v4;
}

uint64_t IMStringFromCGSize(double a1, double a2)
{
  return [NSString stringWithFormat:@"<%f, %f>", *(void *)&a1, *(void *)&a2];
}

__CFData *IMCreateASTCImageDataFromCGImageRef(CGImage *a1)
{
  if (!a1) {
    return 0;
  }
  uint64_t v2 = (__CFData *)objc_alloc_init(MEMORY[0x1E4F1CA58]);
  if (v2)
  {
    if (qword_1E94FE970 != -1) {
      dispatch_once(&qword_1E94FE970, &unk_1EF2BF780);
    }
    uint64_t v3 = CGImageDestinationCreateWithData(v2, @"com.apple.atx", 1uLL, 0);
    if (!v3
      || (id v4 = v3,
          CGImageDestinationAddImage(v3, a1, (CFDictionaryRef)qword_1E94FE9B0),
          BOOL v5 = CGImageDestinationFinalize(v4),
          CFRelease(v4),
          !v5))
    {

      return 0;
    }
  }
  return v2;
}

BOOL IMFreeSpaceWriteDataToURL(void *a1, uint64_t a2, int a3)
{
  uint64_t v6 = [a1 length];
  BOOL v7 = 0;
  if (a2 && v6)
  {
    char v8 = 0;
    uint64_t v12 = 0;
    char v13 = &v12;
    uint64_t v14 = 0x2020000000;
    char v15 = 0;
    if (a3)
    {
      char v8 = dispatch_group_create();
      dispatch_group_enter(v8);
    }
    unsigned int v9 = (void *)MEMORY[0x1E4F1C9E8];
    uint64_t v10 = [NSNumber numberWithInt:1];
    [v9 dictionaryWithObject:v10 forKey:*MEMORY[0x1E4F4BE88]];
    [a1 length];
    CPFreeSpaceRequestBytesAtPathWithCompletionBlock();
    if (v8)
    {
      dispatch_group_wait(v8, 0x3B9ACA00uLL);
      dispatch_release(v8);
    }
    BOOL v7 = *((unsigned char *)v13 + 24) != 0;
    _Block_object_dispose(&v12, 8);
  }
  return v7;
}

void sub_1A08202E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

CGImageRef IMCreateThumbnailWithImageSourceAtIndexForMaxDimension(CGImageSource *a1, size_t a2, double a3)
{
  v22[6] = *MEMORY[0x1E4F143B8];
  if (!a1)
  {
    if (!IMOSLoggingEnabled()) {
      return 0;
    }
    uint64_t v12 = OSLogHandleForIMFoundationCategory();
    if (!os_log_type_enabled(v12, OS_LOG_TYPE_INFO)) {
      return 0;
    }
    LOWORD(v17) = 0;
    char v13 = "ImageSource was null";
    uint64_t v14 = v12;
    uint32_t v15 = 2;
    goto LABEL_12;
  }
  uint64_t v6 = IMLogHandleForCategory("IMAttachmentUtilities");
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEBUG)) {
    sub_1A09F1078(v6);
  }
  uint64_t v7 = MEMORY[0x1E4F1CC38];
  uint64_t v8 = *MEMORY[0x1E4F2FE30];
  v21[0] = *MEMORY[0x1E4F2FF50];
  v21[1] = v8;
  v22[0] = MEMORY[0x1E4F1CC38];
  v22[1] = MEMORY[0x1E4F1CC38];
  v21[2] = *MEMORY[0x1E4F2FF60];
  v22[2] = objc_msgSend(NSNumber, "numberWithLong:", (uint64_t)fmin(a3, 4.61168602e18));
  uint64_t v9 = *MEMORY[0x1E4F2FF90];
  void v21[3] = *MEMORY[0x1E4F2FE40];
  v21[4] = v9;
  _OWORD v22[3] = v7;
  void v22[4] = v7;
  v21[5] = *MEMORY[0x1E4F2FF10];
  v22[5] = v7;
  CFDictionaryRef v10 = (const __CFDictionary *)[MEMORY[0x1E4F1C9E8] dictionaryWithObjects:v22 forKeys:v21 count:6];
  if (CGImageSourceGetCount(a1) > a2) {
    return CGImageSourceCreateThumbnailAtIndex(a1, a2, v10);
  }
  if (IMOSLoggingEnabled())
  {
    BOOL v16 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v16, OS_LOG_TYPE_INFO))
    {
      int v17 = 134218240;
      size_t Count = CGImageSourceGetCount(a1);
      __int16 v19 = 2048;
      size_t v20 = a2;
      char v13 = "Required image did not exist, count %zu, index %zu";
      uint64_t v14 = v16;
      uint32_t v15 = 22;
LABEL_12:
      _os_log_impl(&dword_1A0772000, v14, OS_LOG_TYPE_INFO, v13, (uint8_t *)&v17, v15);
    }
  }
  return 0;
}

void sub_1A082089C(_Unwind_Exception *a1, int a2)
{
  if (a2 == 1)
  {
    objc_begin_catch(a1);
    objc_end_catch();
    JUMPOUT(0x1A0820864);
  }
  _Unwind_Resume(a1);
}

CFTypeRef sub_1A08208BC()
{
  v3[3] = *MEMORY[0x1E4F143B8];
  uint64_t v0 = *MEMORY[0x1E4F2F4D8];
  v2[0] = *MEMORY[0x1E4F2F6C0];
  v2[1] = v0;
  v3[0] = *MEMORY[0x1E4F2F4E8];
  v3[1] = &unk_1EF3058B0;
  v2[2] = *MEMORY[0x1E4F2F4F8];
  void v3[2] = MEMORY[0x1E4F1CC38];
  CFTypeRef result = (CFTypeRef)[MEMORY[0x1E4F1C9E8] dictionaryWithObjects:v3 forKeys:v2 count:3];
  if (result) {
    CFTypeRef result = CFRetain(result);
  }
  qword_1E94FE9B0 = (uint64_t)result;
  return result;
}

CGImageDestination *IMCreateHEICSImageDataFromCGImageRef(CGImage *a1)
{
  v6[1] = *MEMORY[0x1E4F143B8];
  uint64_t v2 = (__CFData *)objc_alloc_init(MEMORY[0x1E4F1CA58]);
  CFTypeRef result = CGImageDestinationCreateWithData(v2, @"public.heic", 1uLL, 0);
  if (result)
  {
    id v4 = result;
    uint64_t v5 = *MEMORY[0x1E4F2F438];
    v6[0] = &unk_1EF305F58;
    CGImageDestinationAddImage(result, a1, (CFDictionaryRef)[MEMORY[0x1E4F1C9E8] dictionaryWithObjects:v6 forKeys:&v5 count:1]);
    CGImageDestinationFinalize(v4);
    CFAutorelease(v4);
    return (CGImageDestination *)[(__CFData *)v2 copy];
  }
  return result;
}

__CFData *IMCreatePNGImageDataFromCGImageRef(CGImage *a1)
{
  if (!a1) {
    return 0;
  }
  uint64_t v2 = (__CFData *)objc_alloc_init(MEMORY[0x1E4F1CA58]);
  uint64_t v3 = v2;
  if (v2)
  {
    CGImageDestinationRef v4 = CGImageDestinationCreateWithData(v2, @"public.png", 1uLL, 0);
    if (!v4) {
      goto LABEL_5;
    }
    uint64_t v5 = v4;
    id v6 = objc_alloc_init(MEMORY[0x1E4F1CA60]);
    uint64_t v7 = (void *)[objc_alloc(NSNumber) initWithLong:8];
    id v8 = objc_alloc(MEMORY[0x1E4F1C9E8]);
    uint64_t v9 = objc_msgSend(v8, "initWithObjectsAndKeys:", v7, *MEMORY[0x1E4F2FCC0], 0);
    [v6 setObject:v9 forKey:*MEMORY[0x1E4F2FCD0]];
    uint64_t v10 = [NSNumber numberWithLong:2];
    [v6 setObject:v10 forKey:*MEMORY[0x1E4F2FCA8]];
    CGImageDestinationAddImage(v5, a1, (CFDictionaryRef)v6);
    BOOL v11 = CGImageDestinationFinalize(v5);
    CFRelease(v5);

    if (!v11)
    {
LABEL_5:

      return 0;
    }
  }
  return v3;
}

void sub_1A0820BA4(uint64_t a1, int a2)
{
  uint64_t v13 = *MEMORY[0x1E4F143B8];
  if (a2)
  {
    uint64_t v8 = 0;
    *(unsigned char *)(*(void *)(*(void *)(a1 + 56) + 8) + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = [*(id *)(a1 + 32) writeToURL:*(void *)(a1 + 40) options:1073741825 error:&v8];
    if (!*(unsigned char *)(*(void *)(*(void *)(a1 + 56) + 8) + 24))
    {
      if (IMOSLoggingEnabled())
      {
        uint64_t v3 = OSLogHandleForIMFoundationCategory();
        if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
        {
          uint64_t v4 = *(void *)(a1 + 40);
          *(_DWORD *)long long buf = 138412546;
          uint64_t v10 = v4;
          __int16 v11 = 2112;
          uint64_t v12 = v8;
          _os_log_impl(&dword_1A0772000, v3, OS_LOG_TYPE_INFO, "Failed to write preview with permissions via CPFreeSpaceRequestBytesAtPathWithCompletionBlock at URL: %@    error: %@", buf, 0x16u);
        }
      }
      *(unsigned char *)(*(void *)(*(void *)(a1 + 56) + 8) + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = [*(id *)(a1 + 32) writeToURL:*(void *)(a1 + 40) atomically:1];
      if (!*(unsigned char *)(*(void *)(*(void *)(a1 + 56) + 8) + 24))
      {
        if (IMOSLoggingEnabled())
        {
          uint64_t v5 = OSLogHandleForIMFoundationCategory();
          if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
          {
            uint64_t v6 = *(void *)(a1 + 40);
            *(_DWORD *)long long buf = 138412290;
            uint64_t v10 = v6;
            _os_log_impl(&dword_1A0772000, v5, OS_LOG_TYPE_INFO, "Failed to write preview with [NSData writeToURL:] at URL %@", buf, 0xCu);
          }
        }
      }
    }
  }
  uint64_t v7 = *(NSObject **)(a1 + 48);
  if (v7) {
    dispatch_group_leave(v7);
  }
}

CGImageRef IMImageUtilsCreateImageFromImageWithCropRect(CGImage *a1, double a2, double a3, double a4, double a5)
{
  if (!a1) {
    return 0;
  }
  CGRect v30 = CGRectStandardize(*(CGRect *)&a2);
  CGRect v31 = CGRectIntegral(v30);
  DeviceRGB = 0;
  if (v31.size.width <= 0.0) {
    return DeviceRGB;
  }
  double height = v31.size.height;
  if (v31.size.height <= 0.0) {
    return DeviceRGB;
  }
  double x = v31.origin.x;
  double y = v31.origin.y;
  double width = v31.size.width;
  double v11 = (double)CGImageGetWidth(a1);
  double v12 = (double)CGImageGetHeight(a1);
  v32.origin.double x = 0.0;
  v32.origin.double y = 0.0;
  v32.size.double width = v11;
  v32.size.double height = v12;
  v43.origin.double x = x;
  v43.origin.double y = y;
  v43.size.double width = width;
  v43.size.double height = height;
  CGRect v33 = CGRectIntersection(v32, v43);
  CGRect v34 = CGRectStandardize(v33);
  if (v34.size.width < width || v34.size.height < height)
  {
    DeviceRGB = 0;
    if (v34.size.width < 0.0) {
      return DeviceRGB;
    }
    if (v34.size.height < 0.0) {
      return DeviceRGB;
    }
    DeviceRGB = CGColorSpaceCreateDeviceRGB();
    if (!DeviceRGB) {
      return DeviceRGB;
    }
    uint64_t v14 = CGBitmapContextCreate(0, (unint64_t)width, (unint64_t)height, 8uLL, vcvtd_n_u64_f64(width, 2uLL), DeviceRGB, 0x2006u);
    CGColorSpaceRelease(DeviceRGB);
    if (v14)
    {
      CGContextSetFillColor(v14, dbl_1E94F7F18);
      v35.origin.double x = 0.0;
      v35.origin.double y = 0.0;
      v35.size.double width = width;
      v35.size.double height = height;
      CGContextFillRect(v14, v35);
      v36.origin.double x = x;
      v36.origin.double y = y;
      v36.size.double width = width;
      v36.size.double height = height;
      CGImageRef v15 = CGImageCreateWithImageInRect(a1, v36);
      if (v15)
      {
        BOOL v16 = v15;
        v44.origin.double x = -x;
        v44.origin.double y = -y;
        v37.origin.double x = 0.0;
        v37.origin.double y = 0.0;
        v37.size.double width = width;
        v37.size.double height = height;
        v44.size.double width = v11;
        v44.size.double height = v12;
        CGRect v38 = CGRectIntersection(v37, v44);
        CGFloat v17 = v38.origin.x;
        CGFloat v18 = v38.origin.y;
        CGFloat v19 = v38.size.width;
        CGFloat v20 = v38.size.height;
        memset(&v28, 0, sizeof(v28));
        CGAffineTransformMakeScale(&v28, 1.0, -1.0);
        memset(&v27, 0, sizeof(v27));
        CGAffineTransformMakeTranslation(&v27, 0.0, height);
        CGAffineTransform v26 = v28;
        v39.origin.double x = v17;
        v39.origin.double y = v18;
        v39.size.double width = v19;
        v39.size.double height = v20;
        CGRect v40 = CGRectApplyAffineTransform(v39, &v26);
        CGAffineTransform v26 = v27;
        CGRect v41 = CGRectApplyAffineTransform(v40, &v26);
        CGRect v42 = CGRectStandardize(v41);
        CGContextDrawImage(v14, v42, v16);
        DeviceRGB = CGBitmapContextCreateImage(v14);
        CGImageRelease(v16);
      }
      else
      {
        DeviceRGB = 0;
      }
      CFRelease(v14);
      return DeviceRGB;
    }
    return 0;
  }
  double v22 = x;
  double v23 = y;
  double v24 = width;
  double v25 = height;

  return CGImageCreateWithImageInRect(a1, *(CGRect *)&v22);
}

__CFData *IMCroppedImageDataFromDataWithCropRect(const __CFData *a1, double a2, double a3, double a4, double a5)
{
  if (!a1) {
    return 0;
  }
  if (!CGRectIsEmpty(*(CGRect *)&a2))
  {
    double v11 = CGImageSourceCreateWithData(a1, 0);
    ImageAtIndedouble x = CGImageSourceCreateImageAtIndex(v11, 0, 0);
    ImageFromImageWithCropRect = IMImageUtilsCreateImageFromImageWithCropRect(ImageAtIndex, a2, a3, a4, a5);
    uint64_t v10 = IMCreatePNGImageDataFromCGImageRef(ImageFromImageWithCropRect);
    if (ImageFromImageWithCropRect) {
      CFRelease(ImageFromImageWithCropRect);
    }
    if (ImageAtIndex) {
      CFRelease(ImageAtIndex);
    }
    if (v11) {
      CFRelease(v11);
    }
    return v10;
  }

  return a1;
}

__CFData *IMRescaledImageDataFromDataForBiomeDonation(const __CFData *a1)
{
  if (!a1) {
    return 0;
  }
  CGImageSourceRef v1 = CGImageSourceCreateWithData(a1, 0);
  +[IMImageUtilities imageSourcePxSize:v1];
  uint64_t v4 = +[IMImageUtilities newThumbnailForTargetSize:imageSize:imageSource:mode:scale:](IMImageUtilities, "newThumbnailForTargetSize:imageSize:imageSource:mode:scale:", v1, 1, 360.0, 360.0, v2, v3, 2.0);
  uint64_t v5 = IMCreatePNGImageDataFromCGImageRef(v4);
  if (v4) {
    CFRelease(v4);
  }
  if (v1) {
    CFRelease(v1);
  }
  return v5;
}

void sub_1A082300C()
{
  uint64_t v7 = *MEMORY[0x1E4F143B8];
  uint64_t v0 = (void *)MEMORY[0x1E4F1CAD0];
  uint64_t v4 = objc_opt_class();
  uint64_t v5 = objc_opt_class();
  uint64_t v6 = objc_opt_class();
  CGImageSourceRef v1 = [MEMORY[0x1E4F1C978] arrayWithObjects:&v4 count:3];
  uint64_t v2 = objc_msgSend(v0, "setWithArray:", v1, v4, v5);
  double v3 = (void *)qword_1E94FE9A0;
  qword_1E94FE9A0 = v2;
}

uint64_t sub_1A0823350()
{
  if (_os_feature_enabled_impl()) {
    uint64_t result = 1;
  }
  else {
    uint64_t result = IMGetCachedDomainBoolForKeyWithDefaultValue();
  }
  byte_1E94FF730 = result;
  return result;
}

uint64_t IMSharedUtilitiesProtoCloudKitEncryptedMessageUpdateT2ReadFrom(uint64_t a1, uint64_t a2)
{
  double v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
    while (2)
    {
      if (!*(unsigned char *)(a2 + *v5))
      {
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v3;
          unint64_t v12 = *(void *)(a2 + v11);
          if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
          *(void *)(a2 + v11) = v12 + 1;
          v10 |= (unint64_t)(v13 & 0x7F) << v8;
          if ((v13 & 0x80) == 0) {
            goto LABEL_12;
          }
          v8 += 7;
          BOOL v14 = v9++ >= 9;
          if (v14)
          {
            unint64_t v10 = 0;
            int v15 = *(unsigned __int8 *)(a2 + *v5);
            goto LABEL_14;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        if (*(unsigned char *)(a2 + *v5)) {
          unint64_t v10 = 0;
        }
LABEL_14:
        if (v15) {
          BOOL v16 = 1;
        }
        else {
          BOOL v16 = (v10 & 7) == 4;
        }
        if (!v16)
        {
          switch((v10 >> 3))
          {
            case 1u:
              char v17 = 0;
              unsigned int v18 = 0;
              uint64_t v19 = 0;
              *(unsigned char *)(a1 + 36) |= 1u;
              break;
            case 2u:
              uint64_t String = (void *)PBReaderReadString();

              id v25 = String;
              uint64_t v26 = 8;
              goto LABEL_31;
            case 3u:
              CGAffineTransform v27 = (void *)PBReaderReadString();

              id v25 = v27;
              uint64_t v26 = 24;
              goto LABEL_31;
            case 4u:
              Data = (void *)PBReaderReadData();

              id v25 = Data;
              uint64_t v26 = 16;
LABEL_31:
              *(void *)(a1 + v26) = v25;
              goto LABEL_36;
            default:
              uint64_t result = PBReaderSkipValueWithTag();
              if (!result) {
                return result;
              }
LABEL_36:
              if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
                return *(unsigned char *)(a2 + *v5) == 0;
              }
              continue;
          }
          while (1)
          {
            uint64_t v20 = *v3;
            unint64_t v21 = *(void *)(a2 + v20);
            if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
              break;
            }
            char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
            *(void *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0) {
              goto LABEL_33;
            }
            v17 += 7;
            BOOL v14 = v18++ >= 9;
            if (v14)
            {
              LODWORD(v19) = 0;
              goto LABEL_35;
            }
          }
          *(unsigned char *)(a2 + *v5) = 1;
LABEL_33:
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v19) = 0;
          }
LABEL_35:
          *(_DWORD *)(a1 + 32) = v19;
          goto LABEL_36;
        }
      }
      break;
    }
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

id sub_1A0823D84(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v17 = *MEMORY[0x1E4F143B8];
  id v3 = a3;
  id v4 = objc_alloc_init(MEMORY[0x1E4F28E60]);
  long long v12 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  long long v15 = 0u;
  id v5 = v3;
  uint64_t v6 = [v5 countByEnumeratingWithState:&v12 objects:v16 count:16];
  if (v6)
  {
    uint64_t v7 = v6;
    uint64_t v8 = *(void *)v13;
    do
    {
      for (uint64_t i = 0; i != v7; ++i)
      {
        if (*(void *)v13 != v8) {
          objc_enumerationMutation(v5);
        }
        objc_msgSend(v4, "addIndex:", objc_msgSend(*(id *)(*((void *)&v12 + 1) + 8 * i), "unsignedIntegerValue", (void)v12));
      }
      uint64_t v7 = [v5 countByEnumeratingWithState:&v12 objects:v16 count:16];
    }
    while (v7);
  }

  unint64_t v10 = (void *)[v4 copy];

  return v10;
}

id sub_1A0823EB8(void *a1)
{
  id v2 = objc_alloc_init(MEMORY[0x1E4F1CA48]);
  v6[0] = MEMORY[0x1E4F143A8];
  v6[1] = 3221225472;
  void v6[2] = sub_1A0823F74;
  v6[3] = &unk_1E5A131C8;
  id v7 = v2;
  id v3 = v2;
  [a1 enumerateIndexesUsingBlock:v6];
  id v4 = (void *)[v3 copy];

  return v4;
}

void sub_1A0823F74(uint64_t a1, uint64_t a2)
{
  id v3 = [NSNumber numberWithUnsignedInteger:a2];
  [*(id *)(a1 + 32) addObject:v3];
}

id IMHomeLibraryDirectoryURL()
{
  if (qword_1EB4A6100 != -1) {
    dispatch_once(&qword_1EB4A6100, &unk_1EF2BF7E0);
  }
  uint64_t v0 = (void *)qword_1EB4A6108;

  return v0;
}

uint64_t sub_1A0824A88()
{
  uint64_t v0 = [MEMORY[0x1E4F1CB10] fileURLWithPath:@"/var/mobile/Library/" isDirectory:1];
  uint64_t v1 = qword_1EB4A6108;
  qword_1EB4A6108 = v0;

  return MEMORY[0x1F41817F8](v0, v1);
}

id IMSMSDirectoryURL()
{
  if (qword_1EB4A6288 != -1) {
    dispatch_once(&qword_1EB4A6288, &unk_1EF2C0280);
  }
  uint64_t v0 = (void *)qword_1EB4A6280;

  return v0;
}

void sub_1A0824B28()
{
  uint64_t v0 = IMServiceNameSMS[0];
  IMHomeLibraryDirectoryURL();
  id v3 = (id)objc_claimAutoreleasedReturnValue();
  uint64_t v1 = [v3 URLByAppendingPathComponent:v0 isDirectory:1];
  id v2 = (void *)qword_1EB4A6280;
  qword_1EB4A6280 = v1;
}

id IMMessagesDatabaseURL()
{
  if (qword_1E94FF748 != -1) {
    dispatch_once(&qword_1E94FF748, &unk_1EF2C0860);
  }
  uint64_t v0 = (void *)qword_1E94FF740;

  return v0;
}

void sub_1A0824BF8()
{
  IMSMSDirectoryURL();
  id v2 = (id)objc_claimAutoreleasedReturnValue();
  uint64_t v0 = [v2 URLByAppendingPathComponent:@"sms.db" isDirectory:0];
  uint64_t v1 = (void *)qword_1E94FF740;
  qword_1E94FF740 = v0;
}

id IMAttachmentsDirectoryURL()
{
  if (qword_1E94FE900 != -1) {
    dispatch_once(&qword_1E94FE900, &unk_1EF2BFCA0);
  }
  uint64_t v0 = (void *)qword_1E94FE908;

  return v0;
}

void sub_1A0824CAC()
{
  IMSMSDirectoryURL();
  id v2 = (id)objc_claimAutoreleasedReturnValue();
  uint64_t v0 = [v2 URLByAppendingPathComponent:@"Attachments" isDirectory:1];
  uint64_t v1 = (void *)qword_1E94FE908;
  qword_1E94FE908 = v0;
}

id IMExternalAttachmentsDirectoryURL()
{
  if (qword_1E94FF758 != -1) {
    dispatch_once(&qword_1E94FF758, &unk_1EF2BFE60);
  }
  uint64_t v0 = (void *)qword_1E94FF750;

  return v0;
}

void sub_1A0824D60()
{
  IMHomeLibraryDirectoryURL();
  id v2 = (id)objc_claimAutoreleasedReturnValue();
  uint64_t v0 = [v2 URLByAppendingPathComponent:@"MessagesMetaData" isDirectory:1];
  uint64_t v1 = (void *)qword_1E94FF750;
  qword_1E94FF750 = v0;
}

id IMCachesDirectoryURL()
{
  if (qword_1EB4A6298 != -1) {
    dispatch_once(&qword_1EB4A6298, &unk_1EF2BE358);
  }
  uint64_t v0 = (void *)qword_1EB4A6290;

  return v0;
}

void sub_1A0824E14()
{
  uint64_t v7 = *MEMORY[0x1E4F143B8];
  uint64_t v0 = (void *)MEMORY[0x1E4F1CB10];
  uint64_t v1 = [@"/var/mobile/Library/Caches/" stringByAppendingPathComponent:@"com.apple.MobileSMS"];
  uint64_t v2 = [v0 fileURLWithPath:v1 isDirectory:1];
  id v3 = (void *)qword_1EB4A6290;
  qword_1EB4A6290 = v2;

  if (IMOSLoggingEnabled())
  {
    id v4 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
    {
      int v5 = 138412290;
      uint64_t v6 = qword_1EB4A6290;
      _os_log_impl(&dword_1A0772000, v4, OS_LOG_TYPE_INFO, "Caches directory is %@", (uint8_t *)&v5, 0xCu);
    }
  }
}

id IMNicknameCacheDirectoryURL()
{
  if (qword_1E94FF768 != -1) {
    dispatch_once(&qword_1E94FF768, &unk_1EF2C0220);
  }
  uint64_t v0 = (void *)qword_1E94FF760;

  return v0;
}

void sub_1A0824FB0()
{
  IMExternalAttachmentsDirectoryURL();
  id v2 = (id)objc_claimAutoreleasedReturnValue();
  uint64_t v0 = [v2 URLByAppendingPathComponent:@"NickNameCache" isDirectory:1];
  uint64_t v1 = (void *)qword_1E94FF760;
  qword_1E94FF760 = v0;
}

id IMCollaborationNoticeDirectoryURL()
{
  if (qword_1E94FF778 != -1) {
    dispatch_once(&qword_1E94FF778, &unk_1EF2C03C0);
  }
  uint64_t v0 = (void *)qword_1E94FF770;

  return v0;
}

void sub_1A0825064()
{
  IMSMSDirectoryURL();
  id v2 = (id)objc_claimAutoreleasedReturnValue();
  uint64_t v0 = [v2 URLByAppendingPathComponent:@"CollaborationNoticeCache" isDirectory:1];
  uint64_t v1 = (void *)qword_1E94FF770;
  qword_1E94FF770 = v0;
}

id IMStickerCacheDirectoryURL()
{
  if (qword_1E94FF788 != -1) {
    dispatch_once(&qword_1E94FF788, &unk_1EF2C04C0);
  }
  uint64_t v0 = (void *)qword_1E94FF780;

  return v0;
}

void sub_1A0825118()
{
  IMSMSDirectoryURL();
  id v2 = (id)objc_claimAutoreleasedReturnValue();
  uint64_t v0 = [v2 URLByAppendingPathComponent:@"StickerCache" isDirectory:1];
  uint64_t v1 = (void *)qword_1E94FF780;
  qword_1E94FF780 = v0;
}

id IMStickerTransferInfoDirectoryURL()
{
  if (qword_1E94FF798 != -1) {
    dispatch_once(&qword_1E94FF798, &unk_1EF2C0640);
  }
  uint64_t v0 = (void *)qword_1E94FF790;

  return v0;
}

void sub_1A08251CC()
{
  IMSMSDirectoryURL();
  id v2 = (id)objc_claimAutoreleasedReturnValue();
  uint64_t v0 = [v2 URLByAppendingPathComponent:@"transferInfo" isDirectory:1];
  uint64_t v1 = (void *)qword_1E94FF790;
  qword_1E94FF790 = v0;
}

id IMBrowserSnapshotCacheDirectoryURL()
{
  if (qword_1E94FF7A8 != -1) {
    dispatch_once(&qword_1E94FF7A8, &unk_1EF2C0820);
  }
  uint64_t v0 = (void *)qword_1E94FF7A0;

  return v0;
}

void sub_1A0825280()
{
  IMCachesDirectoryURL();
  id v2 = (id)objc_claimAutoreleasedReturnValue();
  uint64_t v0 = [v2 URLByAppendingPathComponent:@"BrowserSnapshots" isDirectory:1];
  uint64_t v1 = (void *)qword_1E94FF7A0;
  qword_1E94FF7A0 = v0;
}

id IMBalloonPluginMetadataCacheDirectoryURL()
{
  if (qword_1E94FF7B8 != -1) {
    dispatch_once(&qword_1E94FF7B8, &unk_1EF2C0900);
  }
  uint64_t v0 = (void *)qword_1E94FF7B0;

  return v0;
}

void sub_1A0825334()
{
  IMSMSDirectoryURL();
  id v2 = (id)objc_claimAutoreleasedReturnValue();
  uint64_t v0 = [v2 URLByAppendingPathComponent:@"PluginMetaDataCache" isDirectory:1];
  uint64_t v1 = (void *)qword_1E94FF7B0;
  qword_1E94FF7B0 = v0;
}

id IMSafeTemporaryDirectory()
{
  if (qword_1EB4A6270 != -1) {
    dispatch_once(&qword_1EB4A6270, &unk_1EF2C1318);
  }
  uint64_t v0 = (void *)qword_1EB4A6278;

  return v0;
}

void sub_1A08253E8()
{
  uint64_t v7 = *MEMORY[0x1E4F143B8];
  uint64_t v0 = (void *)MEMORY[0x1E4F1CB10];
  uint64_t v1 = NSTemporaryDirectory();
  uint64_t v2 = [v0 fileURLWithPath:v1];
  id v3 = (void *)qword_1EB4A6278;
  qword_1EB4A6278 = v2;

  if (IMOSLoggingEnabled())
  {
    id v4 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
    {
      int v5 = 138412290;
      uint64_t v6 = qword_1EB4A6278;
      _os_log_impl(&dword_1A0772000, v4, OS_LOG_TYPE_INFO, "Safe temporary directory is %@", (uint8_t *)&v5, 0xCu);
    }
  }
}

void sub_1A0825AB4(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_opt_class();
  if (objc_opt_isKindOfClass()) {
    [*(id *)(a1 + 32) addObject:v3];
  }
}

void *IMParserResultsForLogging(void *a1)
{
  uint64_t v20 = *MEMORY[0x1E4F143B8];
  id v2 = objc_alloc_init(MEMORY[0x1E4F1CA48]);
  id v3 = objc_alloc_init(MEMORY[0x1E4F1CA48]);
  uint64_t v4 = objc_opt_class();
  if (v4)
  {
    Superclass = (objc_class *)v4;
    do
    {
      MethodImplementatiouint64_t n = class_getMethodImplementation(Superclass, sel_resultsForLogging);
      if (!MethodImplementation) {
        break;
      }
      uint64_t v7 = ((uint64_t (*)(void *, char *))MethodImplementation)(a1, sel_resultsForLogging);
      if (!v7) {
        break;
      }
      [v2 addObjectsFromArray:v7];
      Superclass = class_getSuperclass(Superclass);
    }
    while (Superclass);
  }
  [v2 sortUsingSelector:sel_compare_];
  long long v17 = 0u;
  long long v18 = 0u;
  long long v15 = 0u;
  long long v16 = 0u;
  uint64_t v8 = [v2 countByEnumeratingWithState:&v15 objects:v19 count:16];
  if (v8)
  {
    uint64_t v9 = *(void *)v16;
    do
    {
      uint64_t v10 = 0;
      do
      {
        if (*(void *)v16 != v9) {
          objc_enumerationMutation(v2);
        }
        uint64_t v11 = [a1 valueForKey:*(void *)(*((void *)&v15 + 1) + 8 * v10)];
        if (!v11) {
          uint64_t v11 = [MEMORY[0x1E4F1CA98] null];
        }
        [v3 addObject:v11];
        ++v10;
      }
      while (v8 != v10);
      uint64_t v8 = [v2 countByEnumeratingWithState:&v15 objects:v19 count:16];
    }
    while (v8);
  }
  long long v12 = (void *)[MEMORY[0x1E4F28E78] string];
  if ([v2 count])
  {
    unint64_t v13 = 0;
    do
    {
      [v12 appendFormat:@"    %@: %@\n", objc_msgSend(v2, "objectAtIndex:", v13), objc_msgSend(v3, "objectAtIndex:", v13)];
      ++v13;
    }
    while (v13 < [v2 count]);
  }

  return v12;
}

IMXMLParser *sub_1A0825DB8()
{
  uint64_t result = objc_alloc_init(IMXMLParser);
  qword_1EB4A6678 = (uint64_t)result;
  return result;
}

uint64_t sub_1A0826390(uint64_t a1, uint64_t a2)
{
  [*(id *)(*(void *)(a1 + 32) + 16) reset];
  *(void *)(*(void *)(a1 + 32) + 8) = [objc_alloc(MEMORY[0x1E4F29250]) initWithData:a2];
  *(void *)(*(void *)(a1 + 32) + 32) = objc_alloc_init(MEMORY[0x1E4F1CA48]);
  *(void *)(*(void *)(a1 + 32) + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = 0;
  objc_msgSend(*(id *)(*(void *)(a1 + 32) + 8), "setDelegate:");
  uint64_t v4 = *(void **)(*(void *)(a1 + 32) + 8);

  return [v4 parse];
}

void sub_1A082641C(uint64_t a1)
{
  [*(id *)(*(void *)(a1 + 32) + 32) makeObjectsPerformSelector:sel_release];

  *(void *)(*(void *)(a1 + 32) + 32) = 0;
  uint64_t v2 = *(void *)(a1 + 32);
  id v3 = *(void **)(v2 + 24);
  if (v3)
  {

    *(void *)(*(void *)(a1 + 32) + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = 0;
    uint64_t v2 = *(void *)(a1 + 32);
  }
  [*(id *)(v2 + 8) setDelegate:0];

  *(void *)(*(void *)(a1 + 32) + 8) = 0;
}

Class sub_1A08268D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = objc_opt_class();
  uint64_t v5 = objc_opt_class();
  if (v5 == v4) {
    return 0;
  }
  Superclass = (objc_class *)v5;
  while (1)
  {
    MethodImplementatiouint64_t n = class_getMethodImplementation(Superclass, sel_name);
    uint64_t v8 = (NSString *)[[NSString alloc] initWithFormat:@"%@_%@_Frame", ((uint64_t (*)(void, char *))MethodImplementation)(*(void *)(a1 + 32), sel_name), a2];
    Class v9 = NSClassFromString(v8);

    if (v9) {
      break;
    }
    Superclass = class_getSuperclass(Superclass);
    if (Superclass == (objc_class *)v4) {
      return 0;
    }
  }
  return v9;
}

void sub_1A0826DD4(_Unwind_Exception *a1, int a2)
{
  if (a2 == 1)
  {
    objc_begin_catch(a1);
    objc_end_catch();
    JUMPOUT(0x1A0826D58);
  }
  _Unwind_Resume(a1);
}

void sub_1A0827444(uint64_t a1, void *a2, void *a3)
{
  uint64_t v17 = *MEMORY[0x1E4F143B8];
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = v6;
  if (v5 && !v6)
  {
    *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = 1;
    uint64_t v8 = *(void *)(*(void *)(a1 + 48) + 8);
    id v9 = v5;
    uint64_t v10 = *(void **)(v8 + 40);
    *(void *)(v8 + 40) = v9;
LABEL_7:

    goto LABEL_8;
  }
  uint64_t v10 = v6;
  if (!v6) {
    uint64_t v10 = (void *)[objc_alloc(MEMORY[0x1E4F28C58]) initWithDomain:@"__kIMPreviewGenerationErrorDomain" code:1 userInfo:0];
  }
  objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 56) + 8) + 40), v10);
  if (!v7) {
    goto LABEL_7;
  }
LABEL_8:
  if (IMOSLoggingEnabled())
  {
    uint64_t v11 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
    {
      int v12 = *(unsigned __int8 *)(*(void *)(*(void *)(a1 + 40) + 8) + 24);
      uint64_t v13 = *(void *)(*(void *)(*(void *)(a1 + 56) + 8) + 40);
      v14[0] = 67109378;
      v14[1] = v12;
      __int16 v15 = 2112;
      uint64_t v16 = v13;
      _os_log_impl(&dword_1A0772000, v11, OS_LOG_TYPE_INFO, "Blastdoor validation completed, result: %d, err: %@", (uint8_t *)v14, 0x12u);
    }
  }
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));
}

void sub_1A08275EC(uint64_t a1)
{
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = objc_getClass("WKUIBlastDoorDataSource");
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    qword_1E94FF7C8 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  }
  else
  {
    sub_1A09F147C();
    sub_1A0827644();
  }
}

void sub_1A0827644()
{
  uint64_t v4 = *MEMORY[0x1E4F143B8];
  v1[0] = 0;
  if (!qword_1E94FF7D0)
  {
    v1[1] = MEMORY[0x1E4F143A8];
    void v1[2] = 3221225472;
    v1[3] = sub_1A0827740;
    v1[4] = &unk_1E5A10168;
    v1[5] = v1;
    long long v2 = xmmword_1E5A13260;
    uint64_t v3 = 0;
    qword_1E94FF7D0 = _sl_dlopen();
  }
  uint64_t v0 = (void *)v1[0];
  if (!qword_1E94FF7D0)
  {
    uint64_t v0 = (void *)abort_report_np();
    goto LABEL_7;
  }
  if (v1[0]) {
LABEL_7:
  }
    free(v0);
}

uint64_t sub_1A0827740()
{
  uint64_t result = _sl_dlopen();
  qword_1E94FF7D0 = result;
  return result;
}

Class sub_1A08277B4(uint64_t a1)
{
  sub_1A0827644();
  Class result = objc_getClass("WKUIConfigurationPreviewGenerator");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = result;
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    qword_1E94FF7D8 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  }
  else
  {
    uint64_t v3 = (void *)sub_1A09F14A4();
    return (Class)+[IMSpamFilterHelper shouldDowngradeToRecipient:v5 fromSender:v6 ifCapableOfSMS:v7 withConversationDowngradeState:v8 andConversationHistoryState:v9];
  }
  return result;
}

void sub_1A0827B48(_Unwind_Exception *a1, int a2)
{
  if (a2 == 1)
  {
    objc_begin_catch(a1);
    objc_end_catch();
    JUMPOUT(0x1A0827B04);
  }
  _Unwind_Resume(a1);
}

void sub_1A0829F78(uint64_t a1, void *a2)
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  id v3 = a2;
  long long v11 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  SEL v4 = objc_msgSend(v3, "allKeys", 0);
  uint64_t v5 = [v4 countByEnumeratingWithState:&v11 objects:v15 count:16];
  if (v5)
  {
    uint64_t v6 = v5;
    uint64_t v7 = *(void *)v12;
    do
    {
      uint64_t v8 = 0;
      do
      {
        if (*(void *)v12 != v7) {
          objc_enumerationMutation(v4);
        }
        BOOL v9 = [v3 objectForKey:*(void *)(*((void *)&v11 + 1) + 8 * v8)];
        uint64_t v10 = [v9 integerValue];

        if (v10 != 1) {
          (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
        }
        ++v8;
      }
      while (v6 != v8);
      uint64_t v6 = [v4 countByEnumeratingWithState:&v11 objects:v15 count:16];
    }
    while (v6);
  }

  (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
}

uint64_t sub_1A082A47C(uint64_t a1, void *a2)
{
  return [a2 _stripFZIDPrefix];
}

void sub_1A082A758()
{
  uint64_t v4 = *MEMORY[0x1E4F143B8];
  off_1E94FF7E8 = (uint64_t (*)(void))MEMORY[0x1A6227920]("IMDCNRecordIDForAliases", @"IMDPersistence");
  if (IMOSLoggingEnabled())
  {
    uint64_t v0 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v0, OS_LOG_TYPE_INFO))
    {
      if (off_1E94FF7E8) {
        uint64_t v1 = @"YES";
      }
      else {
        uint64_t v1 = @"NO";
      }
      int v2 = 138412290;
      id v3 = v1;
      _os_log_impl(&dword_1A0772000, v0, OS_LOG_TYPE_INFO, "Linked linkedIMDCNRecordIDForAliases ok: %@", (uint8_t *)&v2, 0xCu);
    }
  }
}

void sub_1A082AA30(uint64_t a1)
{
  uint64_t v8 = *MEMORY[0x1E4F143B8];
  if (IMOSLoggingEnabled())
  {
    int v2 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
    {
      uint64_t v3 = *(void *)(a1 + 32);
      int v4 = 138412546;
      uint64_t v5 = &unk_1EF3058C8;
      __int16 v6 = 2112;
      uint64_t v7 = v3;
      _os_log_impl(&dword_1A0772000, v2, OS_LOG_TYPE_INFO, "apply-international-spam-filter: Client (%@) Server (%@)", (uint8_t *)&v4, 0x16u);
    }
  }
}

void sub_1A082AB44(uint64_t a1)
{
  uint64_t v8 = *MEMORY[0x1E4F143B8];
  if (IMOSLoggingEnabled())
  {
    int v2 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
    {
      uint64_t v3 = *(void *)(a1 + 32);
      int v4 = 138412546;
      uint64_t v5 = &unk_1EF3058C8;
      __int16 v6 = 2112;
      uint64_t v7 = v3;
      _os_log_impl(&dword_1A0772000, v2, OS_LOG_TYPE_INFO, "apply-international-spam-filter: Client (%@) Server (%@)", (uint8_t *)&v4, 0x16u);
    }
  }
}

void sub_1A082ADBC()
{
  if (IMOSLoggingEnabled())
  {
    uint64_t v0 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v0, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)uint64_t v1 = 0;
      _os_log_impl(&dword_1A0772000, v0, OS_LOG_TYPE_INFO, "chinese-spam-filter enabled using Defaults", v1, 2u);
    }
  }
}

void sub_1A082AE64(uint64_t a1)
{
  uint64_t v8 = *MEMORY[0x1E4F143B8];
  if (IMOSLoggingEnabled())
  {
    int v2 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
    {
      uint64_t v3 = *(void *)(a1 + 32);
      int v4 = 138412546;
      uint64_t v5 = &unk_1EF3058C8;
      __int16 v6 = 2112;
      uint64_t v7 = v3;
      _os_log_impl(&dword_1A0772000, v2, OS_LOG_TYPE_INFO, "apply-chinese-spam-filter: Client (%@) Server (%@)", (uint8_t *)&v4, 0x16u);
    }
  }
}

uint64_t IMSharedUtilitiesProtoCloudKitEncryptedMessageUpdateT1ReadFrom(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  int v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
    while (2)
    {
      if (!*(unsigned char *)(a2 + *v5))
      {
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v3;
          unint64_t v12 = *(void *)(a2 + v11);
          if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
          *(void *)(a2 + v11) = v12 + 1;
          v10 |= (unint64_t)(v13 & 0x7F) << v8;
          if ((v13 & 0x80) == 0) {
            goto LABEL_12;
          }
          v8 += 7;
          BOOL v14 = v9++ >= 9;
          if (v14)
          {
            unint64_t v10 = 0;
            int v15 = *(unsigned __int8 *)(a2 + *v5);
            goto LABEL_14;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        if (*(unsigned char *)(a2 + *v5)) {
          unint64_t v10 = 0;
        }
LABEL_14:
        if (v15) {
          BOOL v16 = 1;
        }
        else {
          BOOL v16 = (v10 & 7) == 4;
        }
        if (!v16)
        {
          switch((v10 >> 3))
          {
            case 1u:
              char v17 = 0;
              unsigned int v18 = 0;
              uint64_t v19 = 0;
              *(unsigned char *)(a1 + 44) |= 1u;
              break;
            case 2u:
              uint64_t String = (void *)PBReaderReadString();

              id v25 = String;
              uint64_t v26 = 8;
              goto LABEL_32;
            case 3u:
              CGAffineTransform v27 = (void *)PBReaderReadString();

              id v25 = v27;
              uint64_t v26 = 24;
              goto LABEL_32;
            case 4u:
              CGAffineTransform v28 = (void *)PBReaderReadString();

              id v25 = v28;
              uint64_t v26 = 32;
              goto LABEL_32;
            case 5u:
              Data = (void *)PBReaderReadData();

              id v25 = Data;
              uint64_t v26 = 16;
LABEL_32:
              *(void *)(a1 + v26) = v25;
              goto LABEL_37;
            default:
              uint64_t result = PBReaderSkipValueWithTag();
              if (!result) {
                return result;
              }
LABEL_37:
              if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
                return *(unsigned char *)(a2 + *v5) == 0;
              }
              continue;
          }
          while (1)
          {
            uint64_t v20 = *v3;
            unint64_t v21 = *(void *)(a2 + v20);
            if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
              break;
            }
            char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
            *(void *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0) {
              goto LABEL_34;
            }
            v17 += 7;
            BOOL v14 = v18++ >= 9;
            if (v14)
            {
              LODWORD(v19) = 0;
              goto LABEL_36;
            }
          }
          *(unsigned char *)(a2 + *v5) = 1;
LABEL_34:
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v19) = 0;
          }
LABEL_36:
          *(_DWORD *)(a1 + 40) = v19;
          goto LABEL_37;
        }
      }
      break;
    }
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t sub_1A082C450(void *a1, uint64_t a2, unint64_t a3, unint64_t a4, int a5)
{
  if (a3 >= [a1 length])
  {
    [a1 length];
    return 0;
  }
  else
  {
    unint64_t v9 = [a1 length];
    uint64_t v10 = 0;
    if ([a1 length] && a3 + a4 <= v9)
    {
      uint64_t v23 = 0;
      double v24 = &v23;
      uint64_t v25 = 0x3032000000;
      uint64_t v26 = sub_1A077789C;
      CGAffineTransform v27 = sub_1A077773C;
      id v28 = 0;
      id v28 = [MEMORY[0x1E4F1CA60] dictionary];
      v21[0] = MEMORY[0x1E4F143A8];
      v21[1] = 3221225472;
      v21[2] = sub_1A082C69C;
      void v21[3] = &unk_1E5A132B8;
      v21[4] = &v23;
      char v22 = a5;
      objc_msgSend(a1, "enumerateAttribute:inRange:options:usingBlock:", @"__kIMTextEffectAttributeName", a3, a4, 0, v21);
      uint64_t v11 = [(id)v24[5] allKeys];
      uint64_t v12 = [v11 count];

      if (a5)
      {
        char v13 = [(id)v24[5] allKeys];
        BOOL v14 = [v13 count] != 0;
      }
      else
      {
        BOOL v14 = 0;
      }
      if (v12 != 1 && !v14) {
        goto LABEL_11;
      }
      int v15 = [(id)v24[5] allKeys];
      BOOL v16 = [v15 firstObject];

      uint64_t v10 = [v16 integerValue];
      char v17 = [(id)v24[5] objectForKeyedSubscript:v16];
      [v17 rangeValue];
      unint64_t v19 = v18;

      if (v19 < a4) {
LABEL_11:
      }
        uint64_t v10 = 0;
      _Block_object_dispose(&v23, 8);
    }
  }
  return v10;
}

void sub_1A082C670(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A082C69C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, unsigned char *a5)
{
  id v10 = a2;
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    unint64_t v9 = objc_msgSend(MEMORY[0x1E4F29238], "valueWithRange:", a3, a4);
    [*(id *)(*(void *)(*(void *)(a1 + 32) + 8) + 40) setObject:v9 forKeyedSubscript:v10];
    if (*(unsigned char *)(a1 + 40)) {
      *a5 = 1;
    }
  }
}

uint64_t sub_1A082C758(void *a1)
{
  uint64_t v6 = 0;
  uint64_t v7 = &v6;
  uint64_t v8 = 0x2020000000;
  char v9 = 0;
  uint64_t v2 = [a1 length];
  v5[0] = MEMORY[0x1E4F143A8];
  v5[1] = 3221225472;
  void v5[2] = sub_1A082C838;
  v5[3] = &unk_1E5A10628;
  void v5[4] = &v6;
  objc_msgSend(a1, "enumerateAttribute:inRange:options:usingBlock:", @"__kIMTextEffectAttributeName", 0, v2, 0, v5);
  uint64_t v3 = *((unsigned __int8 *)v7 + 24);
  _Block_object_dispose(&v6, 8);
  return v3;
}

void sub_1A082C820(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1A082C838(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, unsigned char *a5)
{
  if (a2)
  {
    *(unsigned char *)(*(void *)(*(void *)(result + 32) + 8) + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = 1;
    *a5 = 1;
  }
  return result;
}

id IMBiomeQueue()
{
  if (qword_1E94FE918 != -1) {
    dispatch_once(&qword_1E94FE918, &unk_1EF2BF840);
  }
  uint64_t v0 = (void *)qword_1E94FE910;

  return v0;
}

void sub_1A082C8A8()
{
  uint64_t v2 = dispatch_queue_attr_make_with_autorelease_frequency(0, DISPATCH_AUTORELEASE_FREQUENCY_WORK_ITEM);
  dispatch_queue_t v0 = dispatch_queue_create("com.apple.Messages.Biome", v2);
  uint64_t v1 = (void *)qword_1E94FE910;
  qword_1E94FE910 = (uint64_t)v0;
}

uint64_t im_messageCheckpointingEnabled()
{
  dispatch_queue_t v0 = [MEMORY[0x1E4F6B598] sharedInstanceForBagType:1];
  uint64_t v1 = [v0 objectForKey:@"disable-message-checkpointing"];
  char v2 = [v1 BOOLValue];

  if (v2) {
    return 0;
  }
  int v4 = [MEMORY[0x1E4F6C360] sharedInstance];
  uint64_t v5 = [v4 isInternalInstall];

  return v5;
}

id im_checkpointIDSService()
{
  if (qword_1E94FE728 != -1) {
    dispatch_once(&qword_1E94FE728, &unk_1EF2BF860);
  }
  dispatch_queue_t v0 = (void *)qword_1E94FE720;

  return v0;
}

uint64_t sub_1A082D9DC()
{
  uint64_t v0 = [objc_alloc(MEMORY[0x1E4F6AB90]) initWithService:@"com.apple.madrid"];
  uint64_t v1 = qword_1E94FE720;
  qword_1E94FE720 = v0;

  return MEMORY[0x1F41817F8](v0, v1);
}

void im_sendMessageCheckpointIfNecessary(void *a1, uint64_t a2, void *a3, int a4)
{
  uint64_t v17 = *MEMORY[0x1E4F143B8];
  id v7 = a1;
  id v8 = a3;
  if (IMOSLoggingEnabled())
  {
    char v9 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
    {
      id v10 = @"NO";
      *(_DWORD *)BOOL v14 = 134218498;
      *(void *)&void v14[4] = a2;
      *(_WORD *)&v14[12] = 2112;
      if (a4) {
        id v10 = @"YES";
      }
      *(void *)&v14[14] = v8;
      __int16 v15 = 2112;
      BOOL v16 = v10;
      _os_log_impl(&dword_1A0772000, v9, OS_LOG_TYPE_INFO, "At checkpoint %ld for guid %@. Will send? %@", v14, 0x20u);
    }
  }
  if (a4 && im_messageCheckpointingEnabled())
  {
    id v11 = objc_alloc_init(MEMORY[0x1E4F1CA60]);
    uint64_t v12 = [NSNumber numberWithInteger:a2];
    [v11 setObject:v12 forKey:@"fR"];

    char v13 = IDSGetUUIDData();
    if (v13) {
      [v11 setObject:v13 forKey:@"fU"];
    }
    objc_msgSend(v7, "sendServerMessage:command:fromAccount:", v11, &unk_1EF3058E0, 0, *(_OWORD *)v14);
  }
}

uint64_t im_sendCertifiedDeliveryReceiptIfPossible(void *a1, void *a2, void *a3, uint64_t a4, void *a5, void *a6)
{
  uint64_t v30 = *MEMORY[0x1E4F143B8];
  id v11 = a1;
  id v12 = a2;
  id v13 = a3;
  id v14 = a5;
  id v15 = a6;
  BOOL v16 = +[IMFeatureFlags sharedFeatureFlags];
  int v17 = [v16 certifiedDeliveryEnabled];

  if (!v17)
  {
LABEL_23:
    uint64_t v20 = 0;
    goto LABEL_24;
  }
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) == 0)
  {
    if (IMOSLoggingEnabled())
    {
      unint64_t v21 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v21, OS_LOG_TYPE_INFO))
      {
        int v24 = 138412290;
        id v25 = v12;
        _os_log_impl(&dword_1A0772000, v21, OS_LOG_TYPE_INFO, "IMMessageContext %@ is not of class IDSMessageContext", (uint8_t *)&v24, 0xCu);
      }
    }
    goto LABEL_19;
  }
  unint64_t v18 = [v12 certifiedDeliveryContext];
  if (!v18)
  {
LABEL_19:
    if (IMOSLoggingEnabled())
    {
      char v22 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v22, OS_LOG_TYPE_INFO))
      {
        int v24 = 138412802;
        id v25 = v13;
        __int16 v26 = 2112;
        uint64_t v27 = 0;
        __int16 v28 = 2112;
        id v29 = v11;
        _os_log_impl(&dword_1A0772000, v22, OS_LOG_TYPE_INFO, "Not sending certified delivery receipt for guid %@ certifiedDeliveryContext: %@ handler service: %@", (uint8_t *)&v24, 0x20u);
      }
    }
    goto LABEL_23;
  }
  if (IMOSLoggingEnabled())
  {
    unint64_t v19 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v19, OS_LOG_TYPE_INFO))
    {
      int v24 = 138412290;
      id v25 = v13;
      _os_log_impl(&dword_1A0772000, v19, OS_LOG_TYPE_INFO, "Sending certified delivery receipt for guid %@", (uint8_t *)&v24, 0xCu);
    }
  }
  [v18 setGenerateDeliveryReceipt:a4];
  if (v14 && (objc_opt_respondsToSelector() & 1) != 0) {
    [v18 setFailureReason:v14];
  }
  if (v15 && (objc_opt_respondsToSelector() & 1) != 0) {
    [v18 setFailureReasonMessage:v15];
  }
  [v11 sendCertifiedDeliveryReceipt:v18];

  uint64_t v20 = 1;
LABEL_24:

  return v20;
}

void sub_1A082E7F0(uint64_t a1, void *a2, void *a3)
{
  uint64_t v15 = *MEMORY[0x1E4F143B8];
  id v6 = a2;
  id v7 = a3;
  id v8 = v7;
  if (!v6 || v7)
  {
    if (IMOSLoggingEnabled())
    {
      char v9 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
      {
        id v10 = @"NO";
        if (!v8) {
          id v10 = @"YES";
        }
        int v11 = 138412546;
        id v12 = v10;
        __int16 v13 = 2112;
        id v14 = v8;
        _os_log_impl(&dword_1A0772000, v9, OS_LOG_TYPE_INFO, "BlastDoor processing for audioPreviews was successful (%@) with error (%@)", (uint8_t *)&v11, 0x16u);
      }
      goto LABEL_12;
    }
  }
  else
  {
    objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40), a2);
    if (IMOSLoggingEnabled())
    {
      char v9 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
      {
        int v11 = 138412290;
        id v12 = @"YES";
        _os_log_impl(&dword_1A0772000, v9, OS_LOG_TYPE_INFO, "BlastDoor processing for audioPreviews was successful (%@)", (uint8_t *)&v11, 0xCu);
      }
LABEL_12:
    }
  }
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));
}

uint64_t IMMessageSoundPlayReceivedAckSound(char *a1)
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  if ((unint64_t)(a1 - 2000) <= 5 && (id v2 = **((id **)&unk_1E5A13308 + (void)(a1 - 2000))) != 0)
  {
    uint64_t v3 = v2;
    int v4 = objc_msgSend(objc_alloc((Class)MEMORY[0x1A6227910](@"TLAlertConfiguration", @"ToneLibrary")), "initWithType:", 2);
    [v4 setTopic:v3];
    uint64_t v5 = objc_msgSend((id)MEMORY[0x1A6227910](@"TLAlert", @"ToneLibrary"), "alertWithConfiguration:", v4);
    if (IMOSLoggingEnabled())
    {
      id v6 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)long long buf = 138412546;
        __int16 v13 = v3;
        __int16 v14 = 2112;
        uint64_t v15 = v5;
        _os_log_impl(&dword_1A0772000, v6, OS_LOG_TYPE_INFO, "Alert plays with topic: [%@] and TLAlert: [%@]", buf, 0x16u);
      }
    }
    v10[0] = MEMORY[0x1E4F143A8];
    v10[1] = 3221225472;
    v10[2] = sub_1A082EBE8;
    v10[3] = &unk_1E5A132E8;
    id v11 = v3;
    id v7 = v3;
    [v5 playWithCompletionHandler:v10];

    return 1;
  }
  else
  {
    uint64_t result = IMOSLoggingEnabled();
    if (result)
    {
      char v9 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)long long buf = 134217984;
        __int16 v13 = a1;
        _os_log_impl(&dword_1A0772000, v9, OS_LOG_TYPE_INFO, "No sound available for message type: %ld", buf, 0xCu);
      }

      return 0;
    }
  }
  return result;
}

void sub_1A082EBE8(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v13 = *MEMORY[0x1E4F143B8];
  id v5 = a3;
  if (a2 == 5 && IMOSLoggingEnabled())
  {
    id v6 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
    {
      uint64_t v7 = *(void *)(a1 + 32);
      if (v5)
      {
        id v8 = [v5 userInfo];
      }
      else
      {
        id v8 = &stru_1EF2CAD28;
      }
      int v9 = 138412546;
      uint64_t v10 = v7;
      __int16 v11 = 2112;
      id v12 = v8;
      _os_log_impl(&dword_1A0772000, v6, OS_LOG_TYPE_INFO, "Error playing alert with topic [%@]: [%@]", (uint8_t *)&v9, 0x16u);
      if (v5) {
    }
      }
  }
}

void IMMessageSoundStartSuppressingSendSoundForMessageGUID(void *a1)
{
  id v3 = a1;
  uint64_t v1 = IMGetCachedDomainValueForKey();
  if (!v1)
  {
    uint64_t v1 = [MEMORY[0x1E4F1C978] array];
  }
  id v2 = [v1 arrayByAddingObject:v3];

  IMSetDomainValueForKey();
}

id IMCreateDictionaryFromCSSString(void *a1, int a2)
{
  if (!a1) {
    return 0;
  }
  id v3 = objc_alloc_init(MEMORY[0x1E4F1CA60]);
  uint64_t v4 = [a1 lengthOfBytesUsingEncoding:4];
  if (!v4 || (uint64_t v5 = v4 + 1, (v6 = malloc_type_malloc(v4 + 1, 0xD1D05091uLL)) == 0))
  {

    return 0;
  }
  uint64_t v7 = v6;
  if (![a1 getCString:v6 maxLength:v5 encoding:4])
  {

    free(v7);
    return 0;
  }
  id v8 = 0;
  uint64_t v27 = v7;
  while (2)
  {
    int v9 = 0;
    while (1)
    {
      unsigned int v10 = *v7;
      if (!*v7) {
        break;
      }
      __int16 v11 = v7;
      if (v10 > 0x39)
      {
        if (v10 == 58)
        {

          goto LABEL_37;
        }
        __int16 v11 = v7;
        if (v10 < 0x3C) {
          break;
        }
      }
      do
        int v12 = *++v11;
      while (byte_1A0A079E8[v12] < 0);
      unint64_t v13 = (unint64_t)(v11 - 1);
      __int16 v14 = v7;
      if (v7 < v11)
      {
        while (1)
        {
          unsigned int v15 = *v7;
          BOOL v16 = v15 > 0x27;
          uint64_t v17 = (1 << v15) & 0x8500002600;
          if (v16 || v17 == 0) {
            break;
          }
          __int16 v14 = v7 + 1;
          if ((unint64_t)v7++ >= v13) {
            goto LABEL_19;
          }
        }
        __int16 v14 = v7;
      }
LABEL_19:
      unint64_t v20 = (unint64_t)v11;
      if (v13 > (unint64_t)v14)
      {
        unint64_t v21 = (unint64_t)v11;
        unint64_t v20 = (unint64_t)v11;
        while (1)
        {
          unsigned int v22 = *(unsigned __int8 *)--v20;
          uint64_t v23 = (1 << v22) & 0x8500002600;
          if (v22 > 0x27 || v23 == 0) {
            break;
          }
          unint64_t v21 = v20;
          if (v20 <= (unint64_t)(v14 + 1)) {
            goto LABEL_26;
          }
        }
        unint64_t v20 = v21;
      }
LABEL_26:

      int v9 = (void *)[[NSString alloc] initWithBytes:v14 length:v20 - (void)v14 encoding:4];
      uint64_t v7 = v11;
    }
    if (v8 && v9)
    {
      uint64_t v25 = (uint64_t)v8;
      if (a2) {
        uint64_t v25 = objc_msgSend(v8, "lowercaseString", v27);
      }
      objc_msgSend(v3, "setObject:forKey:", v9, v25, v27);
    }

    if (*v7)
    {
      int v9 = 0;
LABEL_37:
      ++v7;
      id v8 = v9;
      continue;
    }
    break;
  }
  free(v27);
  return v3;
}

BOOL IMStickerEffectTypeShouldAvoidEffectView(uint64_t a1)
{
  return (unint64_t)(a1 - 5) < 0xFFFFFFFFFFFFFFFCLL;
}

id IMDefaultServiceHybridCapabilities()
{
  void v3[5] = *MEMORY[0x1E4F143B8];
  v2[0] = IMServiceCapabilityInlineReplies;
  v2[1] = IMServiceCapabilityEditMessage;
  v3[0] = MEMORY[0x1E4F1CC38];
  v3[1] = MEMORY[0x1E4F1CC38];
  v2[2] = IMServiceCapabilityMentions;
  void v2[3] = IMServiceCapabilityNicknames;
  void v3[2] = MEMORY[0x1E4F1CC38];
  v3[3] = MEMORY[0x1E4F1CC38];
  v2[4] = IMServiceCapabilityTextEffects;
  void v3[4] = MEMORY[0x1E4F1CC38];
  uint64_t v0 = [MEMORY[0x1E4F1C9E8] dictionaryWithObjects:v3 forKeys:v2 count:5];

  return v0;
}

id IMDefaultServiceCapabilities()
{
  v3[1] = *MEMORY[0x1E4F143B8];
  uint64_t v2 = IMServiceCapabilityAudioMessageForwarding;
  v3[0] = MEMORY[0x1E4F1CC38];
  uint64_t v0 = [MEMORY[0x1E4F1C9E8] dictionaryWithObjects:v3 forKeys:&v2 count:1];

  return v0;
}

void sub_1A0830138(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *MEMORY[0x1E4F143B8];
  if (IMOSLoggingEnabled())
  {
    uint64_t v4 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
    {
      int v5 = 138412290;
      uint64_t v6 = a3;
      _os_log_impl(&dword_1A0772000, v4, OS_LOG_TYPE_INFO, "Received notification to display keep messages setting has reset: %@", (uint8_t *)&v5, 0xCu);
    }
  }
  dword_1EB4A5658 = -1;
}

uint64_t IMClearDisplayKeepMessagesSetting()
{
  dword_1EB4A5658 = 0;
  return IMSetDomainValueForKey();
}

IMAttributedStringParser *sub_1A083026C()
{
  uint64_t result = objc_alloc_init(IMAttributedStringParser);
  qword_1EB4A6680 = (uint64_t)result;
  return result;
}

IMMessageNotificationController *sub_1A0830580()
{
  uint64_t result = objc_alloc_init(IMMessageNotificationController);
  qword_1EB4A6688 = (uint64_t)result;
  return result;
}

void sub_1A0830E48(_Unwind_Exception *a1, int a2)
{
  if (a2 == 1)
  {
    objc_begin_catch(a1);
    objc_end_catch();
    if (!v2) {
      JUMPOUT(0x1A0830D54);
    }
    JUMPOUT(0x1A0830DA4);
  }
  _Unwind_Resume(a1);
}

void sub_1A08310A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v11 = *MEMORY[0x1E4F143B8];
  if (IMOSLoggingEnabled())
  {
    uint64_t v6 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
    {
      int v7 = 134218242;
      uint64_t v8 = a2;
      __int16 v9 = 2112;
      uint64_t v10 = a3;
      _os_log_impl(&dword_1A0772000, v6, OS_LOG_TYPE_INFO, "_playbackDidEnd: completionType:%ld, error:%@", (uint8_t *)&v7, 0x16u);
    }
  }
}

uint64_t sub_1A0831DE8()
{
  dispatch_queue_t v0 = dispatch_queue_create("com.apple.IMSharedUtilities.IMSyndicationUtilities.AttributionFetchQueue", 0);
  uint64_t v1 = qword_1E94FF830;
  qword_1E94FF830 = (uint64_t)v0;

  return MEMORY[0x1F41817F8](v0, v1);
}

void sub_1A0832128(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 32);
  id v3 = (void *)[*(id *)(a1 + 40) copy];
  uint64_t v4 = [v2 fetchAttributionsForHighlight:v3];

  v7[0] = MEMORY[0x1E4F143A8];
  v7[1] = 3221225472;
  void v7[2] = sub_1A08321F8;
  void v7[3] = &unk_1E5A133C0;
  id v5 = *(id *)(a1 + 48);
  id v8 = v4;
  id v9 = v5;
  id v6 = v4;
  dispatch_async(MEMORY[0x1E4F14428], v7);
}

uint64_t sub_1A08321F8(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(a1 + 40) + 16))(*(void *)(a1 + 40), *(void *)(a1 + 32));
}

void sub_1A0832850(uint64_t a1, void *a2, void *a3, void *a4, void *a5)
{
  uint64_t v17 = *MEMORY[0x1E4F143B8];
  id v9 = a2;
  id v10 = a3;
  id v11 = a4;
  id v12 = a5;
  if (IMOSLoggingEnabled())
  {
    unint64_t v13 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v13, OS_LOG_TYPE_INFO))
    {
      int v15 = 138412290;
      id v16 = v10;
      _os_log_impl(&dword_1A0772000, v13, OS_LOG_TYPE_INFO, "Returned results from CloudKit: %@", (uint8_t *)&v15, 0xCu);
    }
  }
  if (v12)
  {
    if (IMOSLoggingEnabled())
    {
      __int16 v14 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_INFO))
      {
        int v15 = 138412290;
        id v16 = v12;
        _os_log_impl(&dword_1A0772000, v14, OS_LOG_TYPE_INFO, " Failed to get bundleIDs from CloudKit: %@", (uint8_t *)&v15, 0xCu);
      }
    }
  }
  else
  {
    objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 32) + 8) + 40), a3);
  }
}

uint64_t IMSharedUtilitiesProtoCloudKitEncryptedGroupActionReadFrom(uint64_t a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  id v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    int v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      switch((v10 >> 3))
      {
        case 1u:
          char v17 = 0;
          unsigned int v18 = 0;
          uint64_t v19 = 0;
          *(unsigned char *)(a1 + 36) |= 2u;
          while (1)
          {
            uint64_t v20 = *v3;
            unint64_t v21 = *(void *)(a2 + v20);
            if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
              break;
            }
            char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
            *(void *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0) {
              goto LABEL_39;
            }
            v17 += 7;
            BOOL v14 = v18++ >= 9;
            if (v14)
            {
              LODWORD(v19) = 0;
              goto LABEL_41;
            }
          }
          *(unsigned char *)(a2 + *v5) = 1;
LABEL_39:
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v19) = 0;
          }
LABEL_41:
          *(_DWORD *)(a1 + 32) = v19;
          continue;
        case 2u:
          char v24 = 0;
          unsigned int v25 = 0;
          uint64_t v26 = 0;
          *(unsigned char *)(a1 + 36) |= 1u;
          break;
        case 3u:
          uint64_t String = (void *)PBReaderReadString();

          id v31 = String;
          uint64_t v32 = 16;
          goto LABEL_37;
        case 4u:
          Data = (void *)PBReaderReadData();

          id v31 = Data;
          uint64_t v32 = 24;
LABEL_37:
          *(void *)(a1 + v32) = v31;
          continue;
        default:
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
          continue;
      }
      while (1)
      {
        uint64_t v27 = *v3;
        unint64_t v28 = *(void *)(a2 + v27);
        if (v28 == -1 || v28 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v29 = *(unsigned char *)(*(void *)(a2 + *v7) + v28);
        *(void *)(a2 + v27) = v28 + 1;
        v26 |= (unint64_t)(v29 & 0x7F) << v24;
        if ((v29 & 0x80) == 0) {
          goto LABEL_43;
        }
        v24 += 7;
        BOOL v14 = v25++ >= 9;
        if (v14)
        {
          uint64_t v26 = 0;
          goto LABEL_45;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_43:
      if (*(unsigned char *)(a2 + *v5)) {
        uint64_t v26 = 0;
      }
LABEL_45:
      *(void *)(a1 + 8) = v26;
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

id IMVCardDataFromLocation(void *a1)
{
  uint64_t v23 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  uint64_t v2 = v1;
  if (!v1)
  {
    uint64_t v11 = 0;
    goto LABEL_25;
  }
  id v3 = IMCurrentLocationURLFromLocation(v1);
  if (v3)
  {
    uint64_t v4 = [MEMORY[0x1E4F28B50] bundleForClass:objc_opt_class()];
    id v5 = [v4 localizedStringForKey:@"Current Location" value:&stru_1EF2CAD28 table:@"IMCoreLocalizable"];

    uint64_t v6 = MEMORY[0x1A6227910](@"CNContactVCardSerialization", @"Contacts");
    if (v6)
    {
      int v7 = (void *)v6;
      char v8 = +[IMContactStore createMutableContactWithMapURL:v3 andLocalizedLocationString:v5];
      unsigned int v9 = (void *)[v8 copy];

      if (v9)
      {
        unsigned int v18 = v9;
        unint64_t v10 = [MEMORY[0x1E4F1C978] arrayWithObjects:&v18 count:1];
        id v17 = 0;
        uint64_t v11 = [v7 dataWithContacts:v10 error:&v17];
        id v12 = v17;

        if (!v12)
        {

          goto LABEL_23;
        }
        if (IMOSLoggingEnabled())
        {
          char v13 = OSLogHandleForIMFoundationCategory();
          if (os_log_type_enabled(v13, OS_LOG_TYPE_INFO))
          {
            *(_DWORD *)long long buf = 138412290;
            id v20 = v12;
            _os_log_impl(&dword_1A0772000, v13, OS_LOG_TYPE_INFO, "IMFileUtilities - Unable to extract vCardData from Contact. Error %@", buf, 0xCu);
          }
        }
      }
      else
      {
        if (IMOSLoggingEnabled())
        {
          int v15 = OSLogHandleForIMFoundationCategory();
          if (os_log_type_enabled(v15, OS_LOG_TYPE_INFO))
          {
            *(_DWORD *)long long buf = 138412546;
            id v20 = v2;
            __int16 v21 = 2112;
            char v22 = v3;
            _os_log_impl(&dword_1A0772000, v15, OS_LOG_TYPE_INFO, "IMFileUtilities - Unable to create contact from location %@. MapURLString: %@", buf, 0x16u);
          }
        }
        id v12 = 0;
        uint64_t v11 = 0;
      }

      id v5 = v11;
    }
    else if (IMOSLoggingEnabled())
    {
      BOOL v14 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)long long buf = 0;
        _os_log_impl(&dword_1A0772000, v14, OS_LOG_TYPE_INFO, "IMFileUtilities - Unable to weaklink CNContactVCardSerialization", buf, 2u);
      }
    }
    uint64_t v11 = 0;
LABEL_23:

    goto LABEL_24;
  }
  uint64_t v11 = 0;
LABEL_24:

LABEL_25:

  return v11;
}

id IMCurrentLocationURLFromLocation(void *a1)
{
  if (!a1) {
    goto LABEL_6;
  }
  [a1 coordinate];
  double v2 = v1;
  double v4 = v3;
  if (qword_1E94FF848 != -1) {
    dispatch_once(&qword_1E94FF848, &unk_1EF2BF8E0);
  }
  if (off_1E94FF840(v2, v4))
  {
    id v5 = objc_msgSend(NSString, "stringWithFormat:", @"%f,%f", *(void *)&v2, *(void *)&v4);
    uint64_t v6 = [NSString stringWithFormat:@"http://maps.apple.com/?ll=%@&q=%@", v5, v5];
  }
  else
  {
LABEL_6:
    uint64_t v6 = 0;
  }

  return v6;
}

void *sub_1A08338F8()
{
  uint64_t result = (void *)MEMORY[0x1A6227920]("CLLocationCoordinate2DIsValid", @"CoreLocation");
  off_1E94FF840 = result;
  return result;
}

uint64_t sub_1A08339D0()
{
  dispatch_queue_t v0 = objc_alloc_init(IMBusinessNameManager);
  uint64_t v1 = qword_1EB4A6690;
  qword_1EB4A6690 = (uint64_t)v0;

  return MEMORY[0x1F41817F8](v0, v1);
}

void sub_1A0833CB8(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_1A0833CDC(uint64_t a1, void *a2, void *a3)
{
  id v9 = a3;
  id v5 = [a2 name];
  if (![v5 length])
  {
    uint64_t v6 = [v9 domain];
    if ([v6 isEqualToString:@"BrandManagerErrorDomain"])
    {
      uint64_t v7 = [v9 code];

      if (v7 != 1) {
        goto LABEL_6;
      }
      +[IMBusinessNameManager placeholderBusinessNameForBrandURI:*(void *)(a1 + 32)];
      id v5 = v6 = v5;
    }
  }
LABEL_6:
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained _fetchedBrandName:v5 forUID:*(void *)(a1 + 32)];
}

uint64_t IM_APFS_PURGEABLE_IGNORE_ME()
{
  return 4096;
}

void sub_1A0835CD4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va1, a7);
  va_start(va, a7);
  uint64_t v8 = va_arg(va1, void);
  uint64_t v10 = va_arg(va1, void);
  uint64_t v11 = va_arg(va1, void);
  uint64_t v12 = va_arg(va1, void);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

void sub_1A0835CF8(uint64_t a1, void *a2, void *a3)
{
  id v9 = a2;
  id v5 = a3;
  if (objc_msgSend(*(id *)(*(void *)(*(void *)(a1 + 32) + 8) + 40), "__im_containsFileTransferGUID:", v9))
  {
    uint64_t v6 = objc_msgSend(*(id *)(*(void *)(*(void *)(a1 + 32) + 8) + 40), "__im_attributedStringByReplacingFileTransferGUID:withUpdatedTransferGUID:", v9, v5);
    uint64_t v7 = *(void *)(*(void *)(a1 + 32) + 8);
    uint64_t v8 = *(void **)(v7 + 40);
    *(void *)(v7 + 40) = v6;

    *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = 1;
  }
}

id IMAssociatedMessageDecodeGUID(void *a1)
{
  id v1 = a1;
  if ([v1 hasPrefix:@"bp:"])
  {
    uint64_t v2 = [@"bp:" length];
    double v3 = v1;
    goto LABEL_3;
  }
  if (![v1 length])
  {
LABEL_15:
    id v4 = v1;
    goto LABEL_16;
  }
  char v5 = 0;
  unint64_t v6 = 1;
  while (1)
  {
    int v7 = [v1 characterAtIndex:v6 - 1];
    if (v7 != 47)
    {
      if (v7 == 58)
      {
        char v5 = 1;
      }
      else if (v7 == 45)
      {
        goto LABEL_15;
      }
      goto LABEL_13;
    }
    if (v5) {
      break;
    }
    char v5 = 0;
LABEL_13:
    if (v6++ >= [v1 length]) {
      goto LABEL_15;
    }
  }
  double v3 = v1;
  uint64_t v2 = v6;
LABEL_3:
  id v4 = [v3 substringFromIndex:v2];
LABEL_16:
  id v9 = v4;

  return v9;
}

uint64_t IMAssociatedMessageDecodePartIndex(void *a1)
{
  id v1 = a1;
  if ([v1 hasPrefix:@"p:"])
  {
    uint64_t v2 = [v1 substringFromIndex:objc_msgSend(@"p:", "length")];
    double v3 = [v2 componentsSeparatedByString:@"/"];
    if ([v3 count] == 2)
    {
      id v4 = [v3 objectAtIndexedSubscript:0];
      uint64_t v5 = [v4 integerValue];
    }
    else
    {
      uint64_t v5 = 0x7FFFFFFFFFFFFFFFLL;
    }
  }
  else
  {
    uint64_t v5 = 0x7FFFFFFFFFFFFFFFLL;
  }

  return v5;
}

__CFString *IMMetricsValueForAssociatedMessageContentType(int a1)
{
  if ((a1 - 1) > 9) {
    return @"Unknown";
  }
  else {
    return off_1E5A13540[(char)(a1 - 1)];
  }
}

id sub_1A0836174(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, void *a5, void *a6, void *a7)
{
  id v11 = a3;
  id v12 = a5;
  id v13 = a6;
  id v14 = a7;
  int v15 = [MEMORY[0x1E4F1CA60] dictionary];
  id v16 = v15;
  if (v11) {
    [v15 setObject:v11 forKey:@"ams"];
  }
  if (v12)
  {
    id v17 = JWEncodeCodableObject();
    if (v17) {
      [v16 setObject:v17 forKey:@"ampt"];
    }
  }
  if ([v13 length]) {
    [v16 setObject:v13 forKey:@"amb"];
  }
  if ([v14 length]) {
    [v16 setObject:v14 forKey:@"amd"];
  }
  unsigned int v18 = [NSNumber numberWithUnsignedChar:a4];
  [v16 setObject:v18 forKey:@"amc"];

  return v16;
}

id sub_1A08362DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    id v4 = JWDecodeDictionary();
  }
  else
  {
    id v4 = 0;
  }
  return v4;
}

uint64_t sub_1A0836324(void *a1, const char *a2)
{
  return [a1 objectForKey:@"amb"];
}

uint64_t sub_1A0836334(void *a1, const char *a2)
{
  return [a1 objectForKey:@"amd"];
}

id sub_1A0836344(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    id v4 = JWEncodeDictionary();
  }
  else
  {
    id v4 = 0;
  }
  return v4;
}

void sub_1A083638C(void *a1, uint64_t a2, void *a3, void *a4)
{
  id v6 = a3;
  id v7 = a4;
  uint64_t v8 = JWEncodeCodableObject();
  if (v8)
  {
    [a1 setObject:v8 forKey:v7];
  }
}

id IMGetConsumedSessionPayloadsForBreadcrumbItems(void *a1)
{
  id v1 = [a1 sortedArrayUsingComparator:&unk_1EF2BF920];
  uint64_t v2 = objc_msgSend(v1, "__imArrayByApplyingBlock:", &unk_1EF2C1338);

  return v2;
}

uint64_t sub_1A08364C0(uint64_t a1, void *a2, void *a3)
{
  id v4 = a2;
  id v5 = a3;
  uint64_t v6 = [v4 messageID];
  if (v6 == [v5 messageID])
  {
    uint64_t v7 = 0;
  }
  else
  {
    uint64_t v8 = [v4 messageID];
    if (v8 < [v5 messageID]) {
      uint64_t v7 = -1;
    }
    else {
      uint64_t v7 = 1;
    }
  }

  return v7;
}

id sub_1A0836548(uint64_t a1, void *a2)
{
  id v2 = a2;
  if ([v2 messageID] && objc_msgSend(v2, "associatedMessageType") == 3)
  {
    uint64_t v3 = [v2 payloadData];
  }
  else
  {
    uint64_t v3 = 0;
  }

  return v3;
}

BOOL sub_1A08365B4(void *a1)
{
  if (![a1 length] || !objc_msgSend(a1, "containsString:", @"maps.apple.com")) {
    return 0;
  }
  id v2 = [MEMORY[0x1E4F28FD8] regularExpressionWithPattern:@"^(http)s?(\\:\\/\\/maps\\.apple\\.com\\/\\?ll\\=)\\-?\\d+\\.\\d+,\\-?\\d+\\.\\d+\\&q\\=[^\\&]+$" options:0 error:0];
  BOOL v3 = objc_msgSend(v2, "numberOfMatchesInString:options:range:", a1, 0, 0, objc_msgSend(a1, "length")) == 1;

  return v3;
}

uint64_t sub_1A08367C4(uint64_t a1, uint64_t a2)
{
  return [*(id *)(a1 + 32) addObject:a2];
}

void sub_1A0836A7C(_Unwind_Exception *a1, int a2)
{
  if (a2 == 1)
  {
    objc_begin_catch(a1);
    objc_end_catch();
    JUMPOUT(0x1A0836A48);
  }
  _Unwind_Resume(a1);
}

void sub_1A0836C14(_Unwind_Exception *a1, int a2)
{
  if (a2 == 1)
  {
    objc_begin_catch(a1);
    objc_end_catch();
    JUMPOUT(0x1A0836BE0);
  }
  _Unwind_Resume(a1);
}

void sub_1A0837F58(_Unwind_Exception *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, os_activity_scope_state_s state)
{
  if (a2 == 1)
  {
    objc_begin_catch(a1);
    objc_end_catch();
    JUMPOUT(0x1A0837E3CLL);
  }
  os_activity_scope_leave(&state);
  _Unwind_Resume(a1);
}

void sub_1A0838744(uint64_t a1, void *a2, void *a3)
{
  id v10 = a2;
  id v5 = a3;
  if (!v10 || v5)
  {
    uint64_t v6 = (void **)(*(void *)(*(void *)(a1 + 48) + 8) + 40);
    uint64_t v7 = v5;
  }
  else
  {
    MEMORY[0x1A6227910](@"BlastDoorOrderPreview", @"BlastDoor");
    if ((objc_opt_isKindOfClass() & 1) == 0) {
      goto LABEL_7;
    }
    uint64_t v6 = (void **)(*(void *)(*(void *)(a1 + 40) + 8) + 40);
    uint64_t v7 = v10;
  }
  id v8 = v7;
  id v9 = *v6;
  *uint64_t v6 = v8;

LABEL_7:
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));
}

void sub_1A083880C(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 0x16u);
}

void sub_1A08388CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1A08388E4(uint64_t result)
{
  return result;
}

void sub_1A08389C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1A08389E0(uint64_t result, uint64_t a2, unsigned char *a3)
{
  if (*(void *)(result + 32) == a2)
  {
    *a3 = 1;
    *(unsigned char *)(*(void *)(*(void *)(result + 40) + 8) + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = 1;
  }
  return result;
}

void sub_1A0838FDC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, os_activity_scope_state_s state)
{
}

uint64_t IMSharedUtilitiesProtoCloudKitEncryptedMessageP3ReadFrom(uint64_t a1, uint64_t a2)
{
  BOOL v3 = (int *)MEMORY[0x1E4F940E8];
  id v4 = (int *)MEMORY[0x1E4F940E0];
  id v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      switch((v10 >> 3))
      {
        case 1u:
          char v17 = 0;
          unsigned int v18 = 0;
          uint64_t v19 = 0;
          *(unsigned char *)(a1 + 28) |= 4u;
          while (1)
          {
            uint64_t v20 = *v3;
            unint64_t v21 = *(void *)(a2 + v20);
            if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
              break;
            }
            char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
            *(void *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0) {
              goto LABEL_44;
            }
            v17 += 7;
            BOOL v14 = v18++ >= 9;
            if (v14)
            {
              LODWORD(v19) = 0;
              goto LABEL_46;
            }
          }
          *(unsigned char *)(a2 + *v5) = 1;
LABEL_44:
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v19) = 0;
          }
LABEL_46:
          uint64_t v35 = 24;
          goto LABEL_55;
        case 2u:
          char v24 = 0;
          unsigned int v25 = 0;
          uint64_t v19 = 0;
          *(unsigned char *)(a1 + 28) |= 2u;
          while (2)
          {
            uint64_t v26 = *v3;
            unint64_t v27 = *(void *)(a2 + v26);
            if (v27 == -1 || v27 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v28 = *(unsigned char *)(*(void *)(a2 + *v7) + v27);
              *(void *)(a2 + v26) = v27 + 1;
              v19 |= (unint64_t)(v28 & 0x7F) << v24;
              if (v28 < 0)
              {
                v24 += 7;
                BOOL v14 = v25++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_50;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v19) = 0;
          }
LABEL_50:
          uint64_t v35 = 12;
          goto LABEL_55;
        case 3u:
          char v29 = 0;
          unsigned int v30 = 0;
          uint64_t v19 = 0;
          *(unsigned char *)(a1 + 28) |= 1u;
          break;
        case 4u:
          Data = (void *)PBReaderReadData();

          *(void *)(a1 + 16) = Data;
          continue;
        default:
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
          continue;
      }
      while (1)
      {
        uint64_t v31 = *v3;
        unint64_t v32 = *(void *)(a2 + v31);
        if (v32 == -1 || v32 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v33 = *(unsigned char *)(*(void *)(a2 + *v7) + v32);
        *(void *)(a2 + v31) = v32 + 1;
        v19 |= (unint64_t)(v33 & 0x7F) << v29;
        if ((v33 & 0x80) == 0) {
          goto LABEL_52;
        }
        v29 += 7;
        BOOL v14 = v30++ >= 9;
        if (v14)
        {
          LODWORD(v19) = 0;
          goto LABEL_54;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_52:
      if (*(unsigned char *)(a2 + *v5)) {
        LODWORD(v19) = 0;
      }
LABEL_54:
      uint64_t v35 = 8;
LABEL_55:
      *(_DWORD *)(a1 + v35) = v19;
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

id IMDaemonBackgroundMessagingProtocolXPCInterface()
{
  dispatch_queue_t v0 = [MEMORY[0x1E4F29280] interfaceWithProtocol:&unk_1EF3439F0];
  id v1 = (void *)MEMORY[0x1E4F1CAD0];
  uint64_t v2 = objc_opt_class();
  uint64_t v3 = objc_opt_class();
  id v4 = objc_msgSend(v1, "setWithObjects:", v2, v3, objc_opt_class(), 0);
  [v0 setClasses:v4 forSelector:sel_requestBackgroundMessagingAuthorizationForRecipients_completion_ argumentIndex:0 ofReply:0];

  id v5 = (void *)MEMORY[0x1E4F1CAD0];
  uint64_t v6 = objc_opt_class();
  uint64_t v7 = objc_opt_class();
  char v8 = objc_msgSend(v5, "setWithObjects:", v6, v7, objc_opt_class(), 0);
  [v0 setClasses:v8 forSelector:sel_requestBackgroundMessagingAuthorizationForRecipients_completion_ argumentIndex:0 ofReply:1];

  unsigned int v9 = objc_msgSend(MEMORY[0x1E4F1CAD0], "setWithObjects:", objc_opt_class(), 0);
  [v0 setClasses:v9 forSelector:sel_requestBackgroundMessagingAuthorizationForRecipients_completion_ argumentIndex:1 ofReply:1];

  unint64_t v10 = (void *)MEMORY[0x1E4F1CAD0];
  uint64_t v11 = objc_opt_class();
  uint64_t v12 = objc_opt_class();
  char v13 = objc_msgSend(v10, "setWithObjects:", v11, v12, objc_opt_class(), 0);
  [v0 setClasses:v13 forSelector:sel_checkAuthorizationStatusForRecipients_completion_ argumentIndex:0 ofReply:0];

  BOOL v14 = (void *)MEMORY[0x1E4F1CAD0];
  uint64_t v15 = objc_opt_class();
  uint64_t v16 = objc_opt_class();
  char v17 = objc_msgSend(v14, "setWithObjects:", v15, v16, objc_opt_class(), 0);
  [v0 setClasses:v17 forSelector:sel_checkAuthorizationStatusForRecipients_completion_ argumentIndex:0 ofReply:1];

  unsigned int v18 = objc_msgSend(MEMORY[0x1E4F1CAD0], "setWithObjects:", objc_opt_class(), 0);
  [v0 setClasses:v18 forSelector:sel_checkAuthorizationStatusForRecipients_completion_ argumentIndex:1 ofReply:1];

  uint64_t v19 = objc_msgSend(MEMORY[0x1E4F1CAD0], "setWithObjects:", objc_opt_class(), 0);
  [v0 setClasses:v19 forSelector:sel_sendBackgroundMessage_toRecipient_completion_ argumentIndex:0 ofReply:0];

  uint64_t v20 = objc_msgSend(MEMORY[0x1E4F1CAD0], "setWithObjects:", objc_opt_class(), 0);
  [v0 setClasses:v20 forSelector:sel_sendBackgroundMessage_toRecipient_completion_ argumentIndex:1 ofReply:0];

  unint64_t v21 = objc_msgSend(MEMORY[0x1E4F1CAD0], "setWithObjects:", objc_opt_class(), 0);
  [v0 setClasses:v21 forSelector:sel_sendBackgroundMessage_toRecipient_completion_ argumentIndex:0 ofReply:1];

  return v0;
}

BOOL IMSharedUtilitiesProtoCloudKitEncryptedChatP1ReadFrom(void *a1, void *a2)
{
  uint64_t v3 = a1;
  id v4 = a2;
  id v5 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v7 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&v4[*MEMORY[0x1E4F940E8]] < *(void *)&v4[*MEMORY[0x1E4F940E0]])
  {
    char v8 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (v4[*v7]) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        uint64_t v12 = *v5;
        unint64_t v13 = *(void *)&v4[v12];
        if (v13 == -1 || v13 >= *(void *)&v4[*v6]) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)&v4[*v8] + v13);
        *(void *)&v4[v12] = v13 + 1;
        v11 |= (unint64_t)(v14 & 0x7F) << v9;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v9 += 7;
        BOOL v15 = v10++ >= 9;
        if (v15)
        {
          unint64_t v11 = 0;
          int v16 = v4[*v7];
          goto LABEL_14;
        }
      }
      v4[*v7] = 1;
LABEL_12:
      int v16 = v4[*v7];
      if (v4[*v7]) {
        unint64_t v11 = 0;
      }
LABEL_14:
      if (v16 || (v11 & 7) == 4) {
        break;
      }
      if ((v11 >> 3) == 2)
      {
        char v24 = 0;
        unsigned int v25 = 0;
        uint64_t v26 = 0;
        v3[16] |= 2u;
        while (1)
        {
          uint64_t v27 = *v5;
          unint64_t v28 = *(void *)&v4[v27];
          if (v28 == -1 || v28 >= *(void *)&v4[*v6]) {
            break;
          }
          char v29 = *(unsigned char *)(*(void *)&v4[*v8] + v28);
          *(void *)&v4[v27] = v28 + 1;
          v26 |= (unint64_t)(v29 & 0x7F) << v24;
          if ((v29 & 0x80) == 0) {
            goto LABEL_41;
          }
          v24 += 7;
          BOOL v15 = v25++ >= 9;
          if (v15)
          {
            uint64_t v26 = 0;
            goto LABEL_43;
          }
        }
        v4[*v7] = 1;
LABEL_41:
        if (v4[*v7]) {
          uint64_t v26 = 0;
        }
LABEL_43:
        v3[12] = v26 != 0;
      }
      else if ((v11 >> 3) == 1)
      {
        char v18 = 0;
        unsigned int v19 = 0;
        uint64_t v20 = 0;
        v3[16] |= 1u;
        while (1)
        {
          uint64_t v21 = *v5;
          unint64_t v22 = *(void *)&v4[v21];
          if (v22 == -1 || v22 >= *(void *)&v4[*v6]) {
            break;
          }
          char v23 = *(unsigned char *)(*(void *)&v4[*v8] + v22);
          *(void *)&v4[v21] = v22 + 1;
          v20 |= (unint64_t)(v23 & 0x7F) << v18;
          if ((v23 & 0x80) == 0) {
            goto LABEL_37;
          }
          v18 += 7;
          BOOL v15 = v19++ >= 9;
          if (v15)
          {
            LODWORD(v20) = 0;
            goto LABEL_39;
          }
        }
        v4[*v7] = 1;
LABEL_37:
        if (v4[*v7]) {
          LODWORD(v20) = 0;
        }
LABEL_39:
        *((_DWORD *)v3 + 2) = v20;
      }
      else if (!PBReaderSkipValueWithTag())
      {
        BOOL v31 = 0;
        goto LABEL_46;
      }
    }
    while (*(void *)&v4[*v5] < *(void *)&v4[*v6]);
  }
  BOOL v31 = v4[*v7] == 0;
LABEL_46:

  return v31;
}

uint64_t sub_1A083B2B8()
{
  return 0;
}

uint64_t IMGetAlwaysUseSingletonProxies()
{
  return byte_1E94FF850;
}

void IMSetAlwaysUseSingletonProxies(char a1)
{
  byte_1E94FF850 = a1;
  uint64_t v2 = IMLogHandleForCategory("IMSingletonLog");
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEBUG)) {
    sub_1A09F1CF4(a1, v2);
  }
}

id sub_1A083B330(void *a1)
{
  id v1 = a1;
  objc_sync_enter(v1);
  if (objc_opt_respondsToSelector())
  {
    uint64_t v2 = objc_msgSend(v1, "__singleton__im");
    if (objc_msgSend(v2, "__isSingletonProxy__im"))
    {
      uint64_t v3 = [v2 singletonOverrideRef];
    }
    else
    {
      uint64_t v3 = 0;
    }
  }
  else
  {
    uint64_t v3 = 0;
  }
  objc_sync_exit(v1);

  return v3;
}

void sub_1A083B3D0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1A083B3E8(void *a1, uint64_t a2, void *a3)
{
  id v7 = a3;
  id v4 = a1;
  objc_sync_enter(v4);
  if (objc_opt_respondsToSelector())
  {
    id v5 = objc_msgSend(v4, "__singleton__im");
    if (objc_msgSend(v5, "__isSingletonProxy__im"))
    {
      [v5 setSingletonOverride:v7];
    }
    else
    {
      uint64_t v6 = [[IMSingletonProxy alloc] initWithSingleton:v5 singletonOverride:v7];
      objc_msgSend(v4, "__setSingleton__im:", v6);
    }
  }
  objc_sync_exit(v4);
}

void sub_1A083B4B8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1A083B4D4(uint64_t a1)
{
  return MEMORY[0x1F4181798](a1, sel_overrideSingletonWithObject_);
}

void sub_1A083B4DC(void *a1, uint64_t a2, void *a3)
{
  id v6 = a3;
  id v4 = a1;
  objc_sync_enter(v4);
  if (objc_opt_respondsToSelector())
  {
    if (byte_1E94FF850)
    {
      id v5 = [[IMSingletonProxy alloc] initWithSingleton:v6 singletonOverride:0];
      objc_msgSend(v4, "__setSingleton__im:", v5);
    }
    else
    {
      objc_msgSend(v4, "__setSingleton__im:", v6);
    }
  }
  objc_sync_exit(v4);
}

void sub_1A083B594(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

id sub_1A083B5A8(void *a1)
{
  id v1 = a1;
  objc_sync_enter(v1);
  if (objc_opt_respondsToSelector())
  {
    uint64_t v2 = objc_msgSend(v1, "__singleton__im");
    if (objc_msgSend(v2, "__isSingletonProxy__im"))
    {
      uint64_t v3 = [v2 singletonRef];
    }
    else
    {
      uint64_t v3 = 0;
    }
  }
  else
  {
    uint64_t v3 = 0;
  }
  objc_sync_exit(v1);

  return v3;
}

void sub_1A083B648(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL sub_1A083B660(void *a1)
{
  id v1 = [a1 singletonOverride];
  BOOL v2 = v1 != 0;

  return v2;
}

uint64_t sub_1A083B694()
{
  return 0;
}

uint64_t sub_1A083B69C(void *a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  objc_opt_class();
  char isKindOfClass = objc_opt_isKindOfClass();
  if (isKindOfClass) {
    [a1 replaceSingletonWithObject:v4];
  }

  return isKindOfClass & 1;
}

uint64_t sub_1A083B6FC()
{
  return objc_opt_respondsToSelector() & 1;
}

void sub_1A083BD50(void *a1, double a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v15[0] = 0;
  v15[1] = v15;
  _DWORD v15[2] = 0x2020000000;
  char v16 = 0;
  unint64_t v11 = dispatch_group_create();
  uint64_t v12 = [a1 expectationWithDescription:a5];
  (*(void (**)(uint64_t, NSObject *))(a4 + 16))(a4, v11);
  block[0] = MEMORY[0x1E4F143A8];
  block[1] = 3221225472;
  block[2] = sub_1A083BEC0;
  block[3] = &unk_1E5A13610;
  void block[5] = a6;
  void block[6] = v15;
  void block[4] = v12;
  dispatch_group_notify(v11, MEMORY[0x1E4F14428], block);
  v13[0] = MEMORY[0x1E4F143A8];
  v13[1] = 3221225472;
  void v13[2] = sub_1A083BF30;
  v13[3] = &unk_1E5A13638;
  void v13[5] = a6;
  void v13[6] = v15;
  void v13[4] = a5;
  [a1 waitForExpectationsWithTimeout:v13 handler:a2];
  _Block_object_dispose(v15, 8);
}

void sub_1A083BEA8(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 96), 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1A083BEC0(uint64_t a1)
{
  uint64_t result = [*(id *)(a1 + 32) fulfill];
  uint64_t v3 = *(void *)(*(void *)(a1 + 48) + 8);
  if (!*(unsigned char *)(v3 + 24) && *(void *)(a1 + 40))
  {
    *(unsigned char *)(v3 + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = 1;
    id v4 = *(uint64_t (**)(void))(*(void *)(a1 + 40) + 16);
    return v4();
  }
  return result;
}

void sub_1A083BF30(void *a1, uint64_t a2)
{
  if (a2) {
    NSLog(&cfstr_AsyncTestRetur.isa, a1[4], a2);
  }
  uint64_t v3 = *(void *)(a1[6] + 8);
  if (!*(unsigned char *)(v3 + 24) && a1[5])
  {
    *(unsigned char *)(v3 + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = 1;
    id v4 = *(void (**)(void))(a1[5] + 16);
    v4();
  }
}

void *sub_1A083C188()
{
  uint64_t result = (void *)MEMORY[0x1A6227920]("SecMPComputePaddingForStorage", @"MessageProtection");
  off_1E94FE9F8 = result;
  return result;
}

void sub_1A083CBB0(_Unwind_Exception *a1)
{
}

void sub_1A083CBC4(void *a1)
{
}

void sub_1A083CDB0(_Unwind_Exception *a1)
{
}

void sub_1A083CDC4(void *a1)
{
}

uint64_t sub_1A083CE70(uint64_t a1)
{
  [*(id *)(a1 + 32) loadXCTestFramework:*(void *)(a1 + 40)];
  uint64_t v2 = *(void *)(a1 + 32);

  return MEMORY[0x1F4181798](v2, sel_setXctestFrameworkLoaded_);
}

uint64_t IMShouldAllowInteractionlessUsageOfUTITypeWithPreviewGenerationState(void *a1, uint64_t a2, __CFString **a3)
{
  id v5 = a1;
  id v6 = [MEMORY[0x1E4F6B598] sharedInstanceForBagType:1];
  id v7 = [v6 objectForKey:@"md-index-uti-denylist" ofClass:objc_opt_class()];
  int v8 = [v7 containsObject:v5];

  if (v8)
  {
    if (a3)
    {
      char v9 = @"UTI type is disallowed from indexing by policy";
LABEL_22:
      uint64_t v10 = 0;
      *a3 = v9;
      goto LABEL_24;
    }
    goto LABEL_23;
  }
  if (IMIsSupportedUTIType((uint64_t)v5))
  {
    if (!a2)
    {
      if (a3)
      {
        char v9 = @"preview is not generated yet";
        goto LABEL_22;
      }
      goto LABEL_23;
    }
    if (a2 == 2)
    {
      if (a3)
      {
        char v9 = @"preview generation failed";
        goto LABEL_22;
      }
      goto LABEL_23;
    }
    if (a2 != 3)
    {
      uint64_t v10 = 1;
      goto LABEL_24;
    }
    uint64_t v10 = 1;
    unint64_t v11 = [MEMORY[0x1E4F6B598] sharedInstanceForBagType:1];
    uint64_t v12 = [v11 objectForKey:@"md-index-unmigrated-transfers" ofClass:objc_opt_class()];
    unint64_t v13 = v12;
    if (!v12) {
      uint64_t v12 = (void *)MEMORY[0x1E4F1CC38];
    }
    char v14 = [v12 BOOLValue];

    if ((v14 & 1) == 0)
    {
      if (a3)
      {
        char v9 = @"migration is needed and indexing unmigrated transfers is disallowed by policy";
        goto LABEL_22;
      }
LABEL_23:
      uint64_t v10 = 0;
    }
  }
  else
  {
    BOOL v15 = [MEMORY[0x1E4F6B598] sharedInstanceForBagType:1];
    char v16 = [v15 objectForKey:@"md-index-previewless-transfers" ofClass:objc_opt_class()];
    char v17 = v16;
    if (!v16) {
      char v16 = (void *)MEMORY[0x1E4F1CC38];
    }
    char v18 = [v16 BOOLValue];

    uint64_t v10 = 1;
    if ((v18 & 1) == 0)
    {
      if (a3)
      {
        char v9 = @"previewless attachments are not allowed to be indexed by policy";
        goto LABEL_22;
      }
      goto LABEL_23;
    }
  }
LABEL_24:

  return v10;
}

uint64_t IMShouldReindexUTITypeWithPreviewGenerationState(void *a1, uint64_t a2, uint64_t a3)
{
  id v5 = a1;
  LODWORD(a2) = IMShouldAllowInteractionlessUsageOfUTITypeWithPreviewGenerationState(v5, a2, 0);
  LODWORD(a3) = IMShouldAllowInteractionlessUsageOfUTITypeWithPreviewGenerationState(v5, a3, 0);

  return a2 ^ a3;
}

uint64_t IMFileTransferPreviewGenerationStateWithStoredState(uint64_t a1, void *a2, uint64_t a3)
{
  id v5 = a2;
  if (IMIsSupportedUTIType(a3))
  {
    id v6 = v5;
    id v7 = [v6 objectForKeyedSubscript:@"pgenp"];
    char v8 = [v7 BOOLValue];

    if (v8)
    {
      a1 = 0;
    }
    else
    {
      char v9 = [v6 objectForKeyedSubscript:@"IMFileTransferPreviewGenerationStateKey"];

      if (a1 == 3 || v9)
      {
        uint64_t v10 = [v6 objectForKeyedSubscript:@"pgens"];
        unint64_t v11 = v10;
        if (v10)
        {
          if ([v10 BOOLValue]) {
            a1 = 1;
          }
          else {
            a1 = 2;
          }
        }
        else
        {
          a1 = 3;
        }
      }
    }
  }
  else
  {
    a1 = 3;
  }

  return a1;
}

BOOL IMFileTransferAttributionInfoHasLegacyState(void *a1)
{
  uint64_t v1 = [a1 objectForKeyedSubscript:@"pgens"];
  BOOL v2 = v1 != 0;

  return v2;
}

uint64_t sub_1A083D950(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = [*(id *)(a1 + 32) objectForKey:a2];
  uint64_t result = objc_opt_isKindOfClass();
  if (result)
  {
    id v6 = *(void **)(a1 + 40);
    return [v6 setObject:v4 forKey:a2];
  }
  return result;
}

void sub_1A083DD80(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A083DEBC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A083E0AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A083E250(uint64_t a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x1E4F143B8];
  id v3 = a2;
  if (v3)
  {
    uint64_t v4 = IMLogHandleForCategory("Diagnostics");
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR)) {
      sub_1A09F2070(a1, (uint64_t)v3, v4);
    }
  }
  else if (IMOSLoggingEnabled())
  {
    id v5 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
    {
      id v6 = [*(id *)(a1 + 32) identifier];
      int v7 = 138412290;
      char v8 = v6;
      _os_log_impl(&dword_1A0772000, v5, OS_LOG_TYPE_INFO, "Successfully posted notification %@", (uint8_t *)&v7, 0xCu);
    }
  }
}

void sub_1A083E430(uint64_t a1)
{
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = objc_getClass("UNMutableNotificationContent");
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    qword_1E94FF860 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  }
  else
  {
    sub_1A09F2128();
    sub_1A083E488();
  }
}

void sub_1A083E488()
{
  uint64_t v4 = *MEMORY[0x1E4F143B8];
  v1[0] = 0;
  if (!qword_1E94FF868)
  {
    v1[1] = MEMORY[0x1E4F143A8];
    void v1[2] = 3221225472;
    v1[3] = sub_1A083E584;
    v1[4] = &unk_1E5A10168;
    v1[5] = v1;
    long long v2 = xmmword_1E5A136D0;
    uint64_t v3 = 0;
    qword_1E94FF868 = _sl_dlopen();
  }
  dispatch_queue_t v0 = (void *)v1[0];
  if (!qword_1E94FF868)
  {
    dispatch_queue_t v0 = (void *)abort_report_np();
    goto LABEL_7;
  }
  if (v1[0]) {
LABEL_7:
  }
    free(v0);
}

uint64_t sub_1A083E584()
{
  uint64_t result = _sl_dlopen();
  qword_1E94FF868 = result;
  return result;
}

Class sub_1A083E5F8(uint64_t a1)
{
  sub_1A083E488();
  Class result = objc_getClass("UNNotificationRequest");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = result;
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    qword_1E94FF870 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  }
  else
  {
    uint64_t v3 = sub_1A09F2150();
    return (Class)sub_1A083E650(v3);
  }
  return result;
}

void sub_1A083E650(uint64_t a1)
{
  sub_1A083E488();
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = objc_getClass("UNUserNotificationCenter");
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    qword_1E94FF878 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  }
  else
  {
    long long v2 = (void *)sub_1A09F2178();
    +[IMBackgroundMessagingAPIDataAccess deleteAllData];
  }
}

void sub_1A083F0F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
}

uint64_t sub_1A083F12C(uint64_t a1, void *a2, uint64_t a3, unsigned char *a4)
{
  uint64_t result = [a2 isEqualToString:*(void *)(a1 + 32)];
  if (result)
  {
    *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = 1;
    *a4 = 1;
  }
  return result;
}

uint64_t sub_1A083F934(uint64_t result, uint64_t a2)
{
  if (a2) {
    return [*(id *)(result + 32) addObject:a2];
  }
  return result;
}

IMCoreAutomationNotifications *sub_1A083F98C()
{
  uint64_t result = objc_alloc_init(IMCoreAutomationNotifications);
  qword_1EB4A6698 = (uint64_t)result;
  return result;
}

void sub_1A08408B4()
{
  dispatch_queue_t v0 = (void *)MEMORY[0x1A6228190]();
  if (IMOSLoggingEnabled())
  {
    uint64_t v1 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v1, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)long long v2 = 0;
      _os_log_impl(&dword_1A0772000, v1, OS_LOG_TYPE_INFO, "Refresh: User setting for MMS changed", v2, 2u);
    }
  }
  dispatch_async(MEMORY[0x1E4F14428], &unk_1EF2C1398);
}

double sub_1A08426DC(void *a1)
{
  id v1 = a1;
  if (v1)
  {
    if (qword_1E94FF8D8 != -1) {
      dispatch_once(&qword_1E94FF8D8, &unk_1EF2C1378);
    }
    if (qword_1E94FF8E8 != -1) {
      dispatch_once(&qword_1E94FF8E8, &unk_1EF2C0380);
    }
    long long v2 = (void *)[objc_alloc(NSNumber) initWithLongLong:IMMMSMaximumMessageByteCount()];
    SEL v3 = objc_msgSend(objc_alloc(MEMORY[0x1E4F1C9E8]), "initWithObjectsAndKeys:", v2, @"fileLengthLimit", 0);
    long long v8 = 0uLL;
    uint64_t v9 = 0;
    if (qword_1E94FF8D0) {
      [(id)qword_1E94FF8D0 maximumDurationForPreset:v1 properties:v3];
    }
    long long v6 = v8;
    uint64_t v7 = v9;
    double v4 = off_1E94FF8E0(&v6);
  }
  else
  {
    double v4 = INFINITY;
  }

  return v4;
}

uint64_t sub_1A0842A88()
{
  uint64_t result = MEMORY[0x1A6227910](@"AVAssetExportSession", @"AVFoundation");
  qword_1E94FF8A0 = result;
  return result;
}

void *sub_1A0842AB8()
{
  uint64_t result = (void *)MEMORY[0x1A6227920]("CMTimeGetSeconds", @"CoreMedia");
  off_1E94FF8B0 = result;
  return result;
}

void sub_1A0843364()
{
  DarwinNotifyCenter = CFNotificationCenterGetDarwinNotifyCenter();

  CFNotificationCenterAddObserver(DarwinNotifyCenter, 0, (CFNotificationCallback)sub_1A08433B0, @"com.apple.MobileSMS.MMSEmailAddress.changed", 0, CFNotificationSuspensionBehaviorDeliverImmediately);
}

void sub_1A08433B0()
{
  if (IMOSLoggingEnabled())
  {
    dispatch_queue_t v0 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v0, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)id v1 = 0;
      _os_log_impl(&dword_1A0772000, v0, OS_LOG_TYPE_INFO, "Refresh: Email address for MMS changed", v1, 2u);
    }
  }
}

void sub_1A0843C94()
{
  if (IMOSLoggingEnabled())
  {
    dispatch_queue_t v0 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v0, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)long long v2 = 0;
      _os_log_impl(&dword_1A0772000, v0, OS_LOG_TYPE_INFO, "Restricted Mode changed, reloading", v2, 2u);
    }
  }
  id v1 = +[IMCTSMSUtilitiesManager sharedManager];
  [v1 mmsRestrictedModeEnabledForPhoneNumber:0 simID:0 reset:1];
}

uint64_t sub_1A0844F38()
{
  uint64_t result = MEMORY[0x1A6227910](@"AVAssetExportSession", @"AVFoundation");
  qword_1E94FF8D0 = result;
  return result;
}

void *sub_1A0844F68()
{
  uint64_t result = (void *)MEMORY[0x1A6227920]("CMTimeGetSeconds", @"CoreMedia");
  off_1E94FF8E0 = result;
  return result;
}

void sub_1A0844F98()
{
  dispatch_queue_t v0 = (void *)qword_1E94FF2F8;
  qword_1E94FF2F8 = 0;

  id v1 = +[IMCTSMSUtilitiesManager sharedManager];
  [v1 synchronizePreferredSubscriptionMMSCapabilityToWatch];
}

uint64_t sub_1A0845618()
{
  dispatch_queue_t v0 = objc_alloc_init(IMAssistiveAccessCommunicationLimitManager);
  uint64_t v1 = qword_1EB4A6120;
  qword_1EB4A6120 = (uint64_t)v0;

  return MEMORY[0x1F41817F8](v0, v1);
}

uint64_t sub_1A08458DC(uint64_t a1)
{
  return MEMORY[0x1F4181798](*(void *)(a1 + 32), sel__handleStringForFavoritesEntry_);
}

uint64_t sub_1A0845E3C(uint64_t a1, void *a2)
{
  long long v2 = [a2 bundleIdentifier];
  uint64_t v3 = [v2 isEqualToString:@"com.apple.MobileSMS"];

  return v3;
}

uint64_t sub_1A0845FB8()
{
  if (_os_feature_enabled_impl()) {
    uint64_t result = 1;
  }
  else {
    uint64_t result = IMGetCachedDomainBoolForKeyWithDefaultValue();
  }
  byte_1E94FF0B0 = result;
  return result;
}

uint64_t sub_1A084605C()
{
  if (_os_feature_enabled_impl()) {
    uint64_t result = 1;
  }
  else {
    uint64_t result = IMGetCachedDomainBoolForKeyWithDefaultValue();
  }
  byte_1EB4A5FA0 = result;
  return result;
}

uint64_t sub_1A0846140(uint64_t a1)
{
  BOOL v2 = IMSharedHelperDeviceIsiPad();
  uint64_t v3 = *(void **)(a1 + 32);
  if (v2) {
    uint64_t result = [v3 _isEntryViewInTranscriptEnabledForiPad];
  }
  else {
    uint64_t result = [v3 _isEntryViewInTranscriptEnabled];
  }
  byte_1EB4A5EE0 = result;
  return result;
}

uint64_t sub_1A08461D4()
{
  if (_os_feature_enabled_impl()) {
    uint64_t result = 1;
  }
  else {
    uint64_t result = IMGetCachedDomainBoolForKeyWithDefaultValue();
  }
  byte_1EB4A5EF0 = result;
  return result;
}

uint64_t sub_1A0846278()
{
  if (_os_feature_enabled_impl()) {
    uint64_t result = 1;
  }
  else {
    uint64_t result = IMGetCachedDomainBoolForKeyWithDefaultValue();
  }
  byte_1EB4A5FB0 = result;
  return result;
}

uint64_t sub_1A084631C()
{
  if (_os_feature_enabled_impl()) {
    uint64_t result = 1;
  }
  else {
    uint64_t result = IMGetCachedDomainBoolForKeyWithDefaultValue();
  }
  byte_1E94FF8F8 = result;
  return result;
}

uint64_t sub_1A08463B4()
{
  if (IMIsRunningInUnitTesting() & 1) != 0 || (_os_feature_enabled_impl()) {
    uint64_t result = 1;
  }
  else {
    uint64_t result = IMGetCachedDomainBoolForKeyWithDefaultValue();
  }
  byte_1E94FF908 = result;
  return result;
}

uint64_t sub_1A0846488()
{
  if (_os_feature_enabled_impl()) {
    uint64_t result = 1;
  }
  else {
    uint64_t result = IMGetCachedDomainBoolForKeyWithDefaultValue();
  }
  byte_1EB4A5F80 = result;
  return result;
}

uint64_t sub_1A084652C()
{
  if (_os_feature_enabled_impl()) {
    uint64_t result = 1;
  }
  else {
    uint64_t result = IMGetCachedDomainBoolForKeyWithDefaultValue();
  }
  byte_1E94FF918 = result;
  return result;
}

uint64_t sub_1A08465D0()
{
  if (_os_feature_enabled_impl()) {
    uint64_t result = 1;
  }
  else {
    uint64_t result = IMGetCachedDomainBoolForKeyWithDefaultValue();
  }
  byte_1EB4A5E30 = result;
  return result;
}

uint64_t sub_1A0846674()
{
  if (_os_feature_enabled_impl()) {
    uint64_t result = 1;
  }
  else {
    uint64_t result = IMGetCachedDomainBoolForKeyWithDefaultValue();
  }
  byte_1E94FF920 = result;
  return result;
}

uint64_t sub_1A0846718()
{
  if (_os_feature_enabled_impl()) {
    uint64_t result = 1;
  }
  else {
    uint64_t result = IMGetCachedDomainBoolForKeyWithDefaultValue();
  }
  byte_1E94FF928 = result;
  return result;
}

uint64_t sub_1A08467BC()
{
  if (_os_feature_enabled_impl()) {
    uint64_t result = 1;
  }
  else {
    uint64_t result = IMGetCachedDomainBoolForKeyWithDefaultValue();
  }
  byte_1EB4A5DB0 = result;
  return result;
}

uint64_t sub_1A0846860()
{
  if (_os_feature_enabled_impl()) {
    uint64_t result = 1;
  }
  else {
    uint64_t result = IMGetCachedDomainBoolForKeyWithDefaultValue();
  }
  byte_1E94FF938 = result;
  return result;
}

uint64_t sub_1A0846904()
{
  if (_os_feature_enabled_impl()) {
    uint64_t result = 1;
  }
  else {
    uint64_t result = IMGetCachedDomainBoolForKeyWithDefaultValue();
  }
  byte_1E94FF940 = result;
  return result;
}

uint64_t sub_1A08469A8()
{
  if (_os_feature_enabled_impl()) {
    uint64_t result = 1;
  }
  else {
    uint64_t result = IMGetCachedDomainBoolForKeyWithDefaultValue();
  }
  byte_1E94FF050 = result;
  return result;
}

uint64_t sub_1A0846A4C()
{
  if (_os_feature_enabled_impl()) {
    uint64_t result = 1;
  }
  else {
    uint64_t result = IMGetCachedDomainBoolForKeyWithDefaultValue();
  }
  byte_1EB4A5F58 = result;
  return result;
}

uint64_t sub_1A0846AF0()
{
  if (_os_feature_enabled_impl()) {
    uint64_t result = 1;
  }
  else {
    uint64_t result = IMGetCachedDomainBoolForKeyWithDefaultValue();
  }
  byte_1E94FF950 = result;
  return result;
}

uint64_t sub_1A0846B94()
{
  if (_os_feature_enabled_impl()) {
    uint64_t result = 1;
  }
  else {
    uint64_t result = IMGetCachedDomainBoolForKeyWithDefaultValue();
  }
  byte_1E94FF960 = result;
  return result;
}

uint64_t sub_1A0846C38()
{
  if (_os_feature_enabled_impl()) {
    uint64_t result = 1;
  }
  else {
    uint64_t result = IMGetCachedDomainBoolForKeyWithDefaultValue();
  }
  byte_1E94FF970 = result;
  return result;
}

uint64_t sub_1A0846CD0()
{
  if (IMIsRunningInUnitTesting())
  {
    uint64_t result = 0;
  }
  else if (_os_feature_enabled_impl())
  {
    uint64_t result = 1;
  }
  else
  {
    uint64_t result = IMGetCachedDomainBoolForKeyWithDefaultValue();
  }
  byte_1E94FF980 = result;
  return result;
}

uint64_t sub_1A0846D84()
{
  if (_os_feature_enabled_impl()) {
    uint64_t result = 1;
  }
  else {
    uint64_t result = IMGetCachedDomainBoolForKeyWithDefaultValue();
  }
  byte_1EB4A5F48 = result;
  return result;
}

uint64_t sub_1A0846E28()
{
  if (_os_feature_enabled_impl()) {
    uint64_t result = 1;
  }
  else {
    uint64_t result = IMGetCachedDomainBoolForKeyWithDefaultValue();
  }
  byte_1EB4A5DD8 = result;
  return result;
}

uint64_t sub_1A0846ECC()
{
  if (_os_feature_enabled_impl()) {
    uint64_t result = 1;
  }
  else {
    uint64_t result = IMGetCachedDomainBoolForKeyWithDefaultValue();
  }
  byte_1E94FF990 = result;
  return result;
}

uint64_t sub_1A0846F70()
{
  if (_os_feature_enabled_impl()) {
    uint64_t result = 1;
  }
  else {
    uint64_t result = IMGetCachedDomainBoolForKeyWithDefaultValue();
  }
  byte_1E94FF9A0 = result;
  return result;
}

uint64_t sub_1A0847054(uint64_t a1)
{
  uint64_t result = [*(id *)(a1 + 32) isSendMenuEnabled];
  byte_1EB4A5ED0 = result;
  return result;
}

uint64_t sub_1A08470C8()
{
  if (_os_feature_enabled_impl()) {
    uint64_t result = 1;
  }
  else {
    uint64_t result = IMGetCachedDomainBoolForKeyWithDefaultValue();
  }
  byte_1EB4A5EC0 = result;
  return result;
}

uint64_t sub_1A084716C()
{
  if (_os_feature_enabled_impl()) {
    uint64_t result = 1;
  }
  else {
    uint64_t result = IMGetCachedDomainBoolForKeyWithDefaultValue();
  }
  byte_1EB4A5E90 = result;
  return result;
}

uint64_t sub_1A08472A8()
{
  if (_os_feature_enabled_impl()) {
    uint64_t result = 1;
  }
  else {
    uint64_t result = IMGetCachedDomainBoolForKeyWithDefaultValue();
  }
  byte_1E94FE940 = result;
  return result;
}

uint64_t sub_1A084734C()
{
  if (_os_feature_enabled_impl()) {
    uint64_t result = 1;
  }
  else {
    uint64_t result = IMGetCachedDomainBoolForKeyWithDefaultValue();
  }
  byte_1EB4A5DF8 = result;
  return result;
}

uint64_t sub_1A08473F0()
{
  if (_os_feature_enabled_impl()) {
    uint64_t result = 1;
  }
  else {
    uint64_t result = IMGetCachedDomainBoolForKeyWithDefaultValue();
  }
  byte_1E94FF288 = result;
  return result;
}

uint64_t sub_1A0847494()
{
  if (_os_feature_enabled_impl()) {
    uint64_t result = 1;
  }
  else {
    uint64_t result = IMGetCachedDomainBoolForKeyWithDefaultValue();
  }
  byte_1E94FF9B0 = result;
  return result;
}

uint64_t sub_1A084752C()
{
  if (IMIsRunningInUnitTesting())
  {
    uint64_t result = 0;
  }
  else if (_os_feature_enabled_impl())
  {
    uint64_t result = 1;
  }
  else
  {
    uint64_t result = IMGetCachedDomainBoolForKeyWithDefaultValue();
  }
  byte_1E94FF028 = result;
  return result;
}

uint64_t sub_1A08475E0()
{
  if (_os_feature_enabled_impl()) {
    uint64_t result = 1;
  }
  else {
    uint64_t result = IMGetCachedDomainBoolForKeyWithDefaultValue();
  }
  byte_1EB4A62A0 = result;
  return result;
}

uint64_t sub_1A084768C()
{
  if (_os_feature_enabled_impl()) {
    uint64_t result = 1;
  }
  else {
    uint64_t result = IMGetCachedDomainBoolForKeyWithDefaultValue();
  }
  byte_1E94FE790 = result;
  return result;
}

uint64_t sub_1A0847730()
{
  if (_os_feature_enabled_impl()) {
    uint64_t result = 1;
  }
  else {
    uint64_t result = IMGetCachedDomainBoolForKeyWithDefaultValue();
  }
  byte_1E94FF9C0 = result;
  return result;
}

uint64_t sub_1A08477D4()
{
  if (_os_feature_enabled_impl()) {
    uint64_t result = 1;
  }
  else {
    uint64_t result = IMGetCachedDomainBoolForKeyWithDefaultValue();
  }
  byte_1E94FF9C8 = result;
  return result;
}

uint64_t sub_1A0847878()
{
  if (_os_feature_enabled_impl()) {
    uint64_t result = 1;
  }
  else {
    uint64_t result = IMGetCachedDomainBoolForKeyWithDefaultValue();
  }
  byte_1EB4A6048 = result;
  return result;
}

uint64_t sub_1A084791C()
{
  if (_os_feature_enabled_impl()) {
    uint64_t result = 1;
  }
  else {
    uint64_t result = IMGetCachedDomainBoolForKeyWithDefaultValue();
  }
  byte_1EB4A5E20 = result;
  return result;
}

uint64_t sub_1A08479C0()
{
  if (_os_feature_enabled_impl()) {
    uint64_t result = 1;
  }
  else {
    uint64_t result = IMGetCachedDomainBoolForKeyWithDefaultValue();
  }
  byte_1E94FF9D8 = result;
  return result;
}

uint64_t sub_1A0847A64()
{
  if (_os_feature_enabled_impl()) {
    uint64_t result = 1;
  }
  else {
    uint64_t result = IMGetCachedDomainBoolForKeyWithDefaultValue();
  }
  byte_1E94FF9E8 = result;
  return result;
}

uint64_t sub_1A0847B08()
{
  if (_os_feature_enabled_impl()) {
    uint64_t result = 1;
  }
  else {
    uint64_t result = IMGetCachedDomainBoolForKeyWithDefaultValue();
  }
  byte_1E94FF9F8 = result;
  return result;
}

uint64_t sub_1A0847BB0()
{
  if (_os_feature_enabled_impl()) {
    uint64_t result = 1;
  }
  else {
    uint64_t result = IMGetCachedDomainBoolForKeyWithDefaultValue();
  }
  byte_1E94FFA08 = result;
  return result;
}

uint64_t sub_1A0847C54()
{
  if (_os_feature_enabled_impl()) {
    uint64_t result = 1;
  }
  else {
    uint64_t result = IMGetCachedDomainBoolForKeyWithDefaultValue();
  }
  byte_1E94FE9E8 = result;
  return result;
}

uint64_t sub_1A0847CF8()
{
  if (_os_feature_enabled_impl()) {
    uint64_t result = 1;
  }
  else {
    uint64_t result = IMGetCachedDomainBoolForKeyWithDefaultValue();
  }
  byte_1E94FFA18 = result;
  return result;
}

uint64_t sub_1A0847D9C()
{
  if (_os_feature_enabled_impl()) {
    uint64_t result = 1;
  }
  else {
    uint64_t result = IMGetCachedDomainBoolForKeyWithDefaultValue();
  }
  byte_1E94FFA28 = result;
  return result;
}

uint64_t sub_1A0847E40()
{
  if (_os_feature_enabled_impl()) {
    uint64_t result = 1;
  }
  else {
    uint64_t result = IMGetCachedDomainBoolForKeyWithDefaultValue();
  }
  byte_1EB4A5F90 = result;
  return result;
}

uint64_t sub_1A0847E94()
{
  if (_os_feature_enabled_impl()) {
    uint64_t result = 1;
  }
  else {
    uint64_t result = IMGetCachedDomainBoolForKeyWithDefaultValue();
  }
  byte_1E94FF2F0 = result;
  return result;
}

uint64_t sub_1A0847F38()
{
  if (_os_feature_enabled_impl()) {
    uint64_t result = 1;
  }
  else {
    uint64_t result = IMGetCachedDomainBoolForKeyWithDefaultValue();
  }
  byte_1E94FFA38 = result;
  return result;
}

uint64_t sub_1A0847FDC()
{
  if (_os_feature_enabled_impl()) {
    uint64_t result = 1;
  }
  else {
    uint64_t result = IMGetCachedDomainBoolForKeyWithDefaultValue();
  }
  byte_1E94FFA48 = result;
  return result;
}

uint64_t sub_1A0848080()
{
  if (_os_feature_enabled_impl()) {
    uint64_t result = 1;
  }
  else {
    uint64_t result = IMGetCachedDomainBoolForKeyWithDefaultValue();
  }
  byte_1E94FFA50 = result;
  return result;
}

uint64_t sub_1A0848124()
{
  if (_os_feature_enabled_impl()) {
    uint64_t result = 1;
  }
  else {
    uint64_t result = IMGetCachedDomainBoolForKeyWithDefaultValue();
  }
  byte_1E94FFA60 = result;
  return result;
}

uint64_t sub_1A08481C8()
{
  if (_os_feature_enabled_impl()) {
    uint64_t result = 1;
  }
  else {
    uint64_t result = IMGetCachedDomainBoolForKeyWithDefaultValue();
  }
  byte_1E94FF300 = result;
  return result;
}

uint64_t sub_1A084826C()
{
  if (_os_feature_enabled_impl()) {
    uint64_t result = 1;
  }
  else {
    uint64_t result = IMGetCachedDomainBoolForKeyWithDefaultValue();
  }
  byte_1E94FFA70 = result;
  return result;
}

uint64_t sub_1A0848310()
{
  if (_os_feature_enabled_impl()) {
    uint64_t result = 1;
  }
  else {
    uint64_t result = IMGetCachedDomainBoolForKeyWithDefaultValue();
  }
  byte_1E94FFA80 = result;
  return result;
}

uint64_t sub_1A08483B4()
{
  if (_os_feature_enabled_impl()) {
    uint64_t result = 1;
  }
  else {
    uint64_t result = IMGetCachedDomainBoolForKeyWithDefaultValue();
  }
  byte_1E94FFA90 = result;
  return result;
}

uint64_t sub_1A0848458()
{
  if (_os_feature_enabled_impl()) {
    uint64_t result = 1;
  }
  else {
    uint64_t result = IMGetCachedDomainBoolForKeyWithDefaultValue();
  }
  byte_1E94FF018 = result;
  return result;
}

uint64_t sub_1A08484F0()
{
  IMSharedHelperDeviceIsiPad();
  uint64_t result = _os_feature_enabled_impl();
  byte_1E94FFAA0 = result;
  return result;
}

uint64_t sub_1A08485D0()
{
  dispatch_queue_t v0 = objc_alloc_init(IMSenderIdentityManager);
  uint64_t v1 = qword_1EB4A66A0;
  qword_1EB4A66A0 = (uint64_t)v0;

  return MEMORY[0x1F41817F8](v0, v1);
}

uint64_t sub_1A08491C4()
{
  qword_1EB4A65A8 = MEMORY[0x1A6227910](@"CNContactStore", @"Contacts");
  uint64_t result = MEMORY[0x1A6227910](@"CNGeminiHandle", @"Contacts");
  qword_1E94FE798 = result;
  return result;
}

uint64_t sub_1A084994C(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "compare:");
}

uint64_t sub_1A084A190()
{
  dispatch_queue_t v0 = objc_alloc_init(IMIDSServiceController);
  uint64_t v1 = qword_1EB4A66A8;
  qword_1EB4A66A8 = (uint64_t)v0;

  return MEMORY[0x1F41817F8](v0, v1);
}

uint64_t sub_1A084A3E4()
{
  qword_1E94FFAB0 = MEMORY[0x1A6227910](@"BSUIBrandManager", @"BusinessServicesUI");
  id v0 = [[IMBrandManager alloc] _init];
  uint64_t v1 = qword_1EB4A6018;
  qword_1EB4A6018 = (uint64_t)v0;

  return MEMORY[0x1F41817F8](v0, v1);
}

void sub_1A084A73C(uint64_t a1)
{
  BOOL v2 = [*(id *)(a1 + 32) brandManagerForType:*(void *)(a1 + 56)];
  v4[0] = MEMORY[0x1E4F143A8];
  v4[1] = 3221225472;
  v4[2] = sub_1A084A800;
  v4[3] = &unk_1E5A139A0;
  uint64_t v3 = *(void *)(a1 + 40);
  id v6 = *(id *)(a1 + 48);
  id v5 = *(id *)(a1 + 40);
  [v2 brandWithURI:v3 completion:v4];
}

void sub_1A084A800(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  v9[0] = MEMORY[0x1E4F143A8];
  v9[1] = 3221225472;
  void v9[2] = sub_1A084A8F0;
  v9[3] = &unk_1E5A13978;
  id v10 = v5;
  id v13 = *(id *)(a1 + 40);
  id v11 = v6;
  id v12 = *(id *)(a1 + 32);
  id v7 = v6;
  id v8 = v5;
  dispatch_async(MEMORY[0x1E4F14428], v9);
}

void sub_1A084A8F0(uint64_t a1)
{
  uint64_t v19 = *MEMORY[0x1E4F143B8];
  if (!*(void *)(a1 + 32))
  {
    id v3 = *(id *)(a1 + 40);
    double v4 = [v3 domain];
    if ([v4 isEqualToString:@"com.apple.BusinessServicesUI.BrandManager"])
    {
      uint64_t v5 = [v3 code];

      if (!v5)
      {
        if (IMOSLoggingEnabled())
        {
          id v6 = OSLogHandleForIMFoundationCategory();
          if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
          {
            uint64_t v7 = *(void *)(a1 + 48);
            *(_DWORD *)long long buf = 138412290;
            uint64_t v18 = v7;
            _os_log_impl(&dword_1A0772000, v6, OS_LOG_TYPE_INFO, "Error getting mapItem for business with messageUID: %@ - not found", buf, 0xCu);
          }
        }
        id v8 = (void *)MEMORY[0x1E4F28C58];
        uint64_t v9 = *(void *)(a1 + 40);
        uint64_t v15 = *MEMORY[0x1E4F28A50];
        uint64_t v16 = v9;
        id v10 = [MEMORY[0x1E4F1C9E8] dictionaryWithObjects:&v16 forKeys:&v15 count:1];
        uint64_t v11 = [v8 errorWithDomain:@"BrandManagerErrorDomain" code:1 userInfo:v10];

        id v3 = (id)v11;
LABEL_17:
        (*(void (**)(void))(*(void *)(a1 + 56) + 16))();

        return;
      }
    }
    else
    {
    }
    if (IMOSLoggingEnabled())
    {
      id v12 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v12, OS_LOG_TYPE_INFO))
      {
        uint64_t v13 = *(void *)(a1 + 48);
        *(_DWORD *)long long buf = 138412290;
        uint64_t v18 = v13;
        _os_log_impl(&dword_1A0772000, v12, OS_LOG_TYPE_INFO, "Error getting mapItem for business with messageUID: %@", buf, 0xCu);
      }
    }
    goto LABEL_17;
  }
  uint64_t v2 = *(void *)(a1 + 56);
  +[IMBrand brandWithBSBrand:](IMBrand, "brandWithBSBrand:");
  id v14 = (id)objc_claimAutoreleasedReturnValue();
  (*(void (**)(uint64_t))(v2 + 16))(v2);
}

void IMGreenTeaMessageReadLog()
{
  uint64_t v4 = *MEMORY[0x1E4F143B8];
  ct_green_tea_logger_create_static();
  CTGreenTeaOsLogHandle = getCTGreenTeaOsLogHandle();
  if (CTGreenTeaOsLogHandle)
  {
    uint64_t v1 = CTGreenTeaOsLogHandle;
    if (os_log_type_enabled(CTGreenTeaOsLogHandle, OS_LOG_TYPE_INFO))
    {
      int v2 = 136315138;
      id v3 = "Messages";
      _os_log_impl(&dword_1A0772000, v1, OS_LOG_TYPE_INFO, "Message read by: %s", (uint8_t *)&v2, 0xCu);
    }
  }
}

void IMGreenTeaMessageDeleteLog()
{
  uint64_t v4 = *MEMORY[0x1E4F143B8];
  ct_green_tea_logger_create_static();
  CTGreenTeaOsLogHandle = getCTGreenTeaOsLogHandle();
  if (CTGreenTeaOsLogHandle)
  {
    uint64_t v1 = CTGreenTeaOsLogHandle;
    if (os_log_type_enabled(CTGreenTeaOsLogHandle, OS_LOG_TYPE_INFO))
    {
      int v2 = 136315138;
      id v3 = "Messages";
      _os_log_impl(&dword_1A0772000, v1, OS_LOG_TYPE_INFO, "Message deleted by: %s", (uint8_t *)&v2, 0xCu);
    }
  }
}

void IMGreenTeaMessageTransmitLog()
{
  uint64_t v4 = *MEMORY[0x1E4F143B8];
  ct_green_tea_logger_create_static();
  CTGreenTeaOsLogHandle = getCTGreenTeaOsLogHandle();
  if (CTGreenTeaOsLogHandle)
  {
    uint64_t v1 = CTGreenTeaOsLogHandle;
    if (os_log_type_enabled(CTGreenTeaOsLogHandle, OS_LOG_TYPE_INFO))
    {
      int v2 = 136315138;
      id v3 = "Messages";
      _os_log_impl(&dword_1A0772000, v1, OS_LOG_TYPE_INFO, "Message trasmitted by: %s", (uint8_t *)&v2, 0xCu);
    }
  }
}

void IMGreenTeaPhoneNumberTransmitLog()
{
  uint64_t v4 = *MEMORY[0x1E4F143B8];
  ct_green_tea_logger_create_static();
  CTGreenTeaOsLogHandle = getCTGreenTeaOsLogHandle();
  if (CTGreenTeaOsLogHandle)
  {
    uint64_t v1 = CTGreenTeaOsLogHandle;
    if (os_log_type_enabled(CTGreenTeaOsLogHandle, OS_LOG_TYPE_INFO))
    {
      int v2 = 136315138;
      id v3 = "Messages";
      _os_log_impl(&dword_1A0772000, v1, OS_LOG_TYPE_INFO, "Phone number transmitted by: %s", (uint8_t *)&v2, 0xCu);
    }
  }
}

void IMGreenTeaReceived2FACode(void *a1, void *a2)
{
  uint64_t v10 = *MEMORY[0x1E4F143B8];
  ct_green_tea_logger_create_static();
  CTGreenTeaOsLogHandle = getCTGreenTeaOsLogHandle();
  if (CTGreenTeaOsLogHandle)
  {
    uint64_t v5 = CTGreenTeaOsLogHandle;
    if (os_log_type_enabled(CTGreenTeaOsLogHandle, OS_LOG_TYPE_INFO))
    {
      int v6 = 136315394;
      uint64_t v7 = [a1 UTF8String];
      __int16 v8 = 2080;
      uint64_t v9 = [a2 UTF8String];
      _os_log_impl(&dword_1A0772000, v5, OS_LOG_TYPE_INFO, "Incoming message from: %s -- found token: %s", (uint8_t *)&v6, 0x16u);
    }
  }
}

void IMGreenTeaAttachmentReadLoggingFormat(void *a1)
{
  uint64_t v6 = *MEMORY[0x1E4F143B8];
  ct_green_tea_logger_create_static();
  CTGreenTeaOsLogHandle = getCTGreenTeaOsLogHandle();
  if (CTGreenTeaOsLogHandle)
  {
    id v3 = CTGreenTeaOsLogHandle;
    if (os_log_type_enabled(CTGreenTeaOsLogHandle, OS_LOG_TYPE_INFO))
    {
      int v4 = 136315138;
      uint64_t v5 = [a1 UTF8String];
      _os_log_impl(&dword_1A0772000, v3, OS_LOG_TYPE_INFO, "Attachment read: %s", (uint8_t *)&v4, 0xCu);
    }
  }
}

void IMGreenTeaAttachmentTransmitLoggingFormat(void *a1)
{
  uint64_t v6 = *MEMORY[0x1E4F143B8];
  ct_green_tea_logger_create_static();
  CTGreenTeaOsLogHandle = getCTGreenTeaOsLogHandle();
  if (CTGreenTeaOsLogHandle)
  {
    id v3 = CTGreenTeaOsLogHandle;
    if (os_log_type_enabled(CTGreenTeaOsLogHandle, OS_LOG_TYPE_INFO))
    {
      int v4 = 136315138;
      uint64_t v5 = [a1 UTF8String];
      _os_log_impl(&dword_1A0772000, v3, OS_LOG_TYPE_INFO, "Attachment transmitted: %s", (uint8_t *)&v4, 0xCu);
    }
  }
}

void sub_1A084BF38()
{
}

void sub_1A084BF78(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,os_activity_scope_state_s state)
{
}

void sub_1A084BF94(uint64_t a1, int a2, void *a3, double a4, double a5)
{
  id v11 = a3;
  if (v11 || !a2)
  {
    objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 56) + 8) + 40), a3);
  }
  else
  {
    *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = 1;
    uint64_t v10 = *(void *)(*(void *)(a1 + 48) + 8);
    *(double *)(v10 + 32) = a4;
    *(double *)(v10 + 40) = a5;
  }
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));
}

uint64_t sub_1A084C044()
{
  uint64_t result = MEMORY[0x1A6227910](@"BSBrand", @"BusinessServices");
  qword_1E94FFAC0 = result;
  return result;
}

IMMessageNotificationTimeManager *sub_1A084CE08()
{
  uint64_t result = objc_alloc_init(IMMessageNotificationTimeManager);
  qword_1EB4A66B0 = (uint64_t)result;
  return result;
}

void sub_1A084DDE4(uint64_t a1)
{
  if (IMOSLoggingEnabled())
  {
    int v2 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)id v3 = 0;
      _os_log_impl(&dword_1A0772000, v2, OS_LOG_TYPE_INFO, "Invalidated unsuspend assertion", v3, 2u);
    }
  }
  [*(id *)(a1 + 32) invalidate];
}

void *IMSharedHelperCombinedPluginPayloadDictionaryData(void *a1, void *a2)
{
  if (![a1 length] || !objc_msgSend(a2, "count")) {
    return a1;
  }
  int v4 = (__CFDictionary *)objc_alloc_init(MEMORY[0x1E4F1CA60]);
  uint64_t v5 = v4;
  if (a1) {
    CFDictionarySetValue(v4, @"__payload__", a1);
  }
  if (a2) {
    CFDictionarySetValue(v5, @"__attachments__", a2);
  }
  uint64_t v6 = JWEncodeDictionary();

  return (void *)v6;
}

uint64_t IMSharedHelperPayloadFromCombinedPluginPayloadData(uint64_t a1, void *a2)
{
  int v4 = (void *)JWDecodeDictionary();
  if (!objc_msgSend((id)objc_msgSend(v4, "objectForKeyedSubscript:", @"__payload__"), "length")) {
    return a1;
  }
  if (a2) {
    *a2 = [v4 objectForKeyedSubscript:@"__attachments__"];
  }

  return [v4 objectForKeyedSubscript:@"__payload__"];
}

uint64_t IMSharedHelperCombinedPluginPayloadDictionaryDataWithAttachmentURLs(const void *a1, void *a2)
{
  uint64_t v24 = *MEMORY[0x1E4F143B8];
  if (!a1) {
    return 0;
  }
  theDict = CFDictionaryCreateMutable(0, 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
  CFDictionarySetValue(theDict, @"__payload__", a1);
  int v4 = (__CFArray *)objc_alloc_init(MEMORY[0x1E4F1CA48]);
  long long v15 = 0u;
  long long v16 = 0u;
  long long v17 = 0u;
  long long v18 = 0u;
  uint64_t v5 = [a2 countByEnumeratingWithState:&v15 objects:v23 count:16];
  if (v5)
  {
    uint64_t v6 = *(void *)v16;
    do
    {
      for (uint64_t i = 0; i != v5; ++i)
      {
        if (*(void *)v16 != v6) {
          objc_enumerationMutation(a2);
        }
        uint64_t v8 = *(void *)(*((void *)&v15 + 1) + 8 * i);
        uint64_t v14 = 0;
        uint64_t v9 = (const void *)[MEMORY[0x1E4F1C9B8] dataWithContentsOfURL:v8 options:1 error:&v14];
        if (v14)
        {
          if (IMOSLoggingEnabled())
          {
            uint64_t v10 = OSLogHandleForIMFoundationCategory();
            if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
            {
              *(_DWORD *)long long buf = 138412546;
              uint64_t v20 = v14;
              __int16 v21 = 2112;
              uint64_t v22 = v8;
              _os_log_impl(&dword_1A0772000, v10, OS_LOG_TYPE_INFO, "IMSharedHelper IMSharedHelperCombinedPluginPayloadDictionaryDataWithAttachmentURLs fileReadError %@ file %@", buf, 0x16u);
            }
          }
          uint64_t v9 = (const void *)[MEMORY[0x1E4F1C9B8] data];
        }
        if (v4 && v9) {
          CFArrayAppendValue(v4, v9);
        }
      }
      uint64_t v5 = [a2 countByEnumeratingWithState:&v15 objects:v23 count:16];
    }
    while (v5);
  }
  if (v4) {
    CFDictionarySetValue(theDict, @"__attachments__", v4);
  }
  uint64_t v11 = JWEncodeDictionary();

  return v11;
}

uint64_t IMSharedHelperExtractPayloadURL(void *a1)
{
  uint64_t v12 = *MEMORY[0x1E4F143B8];
  if (![a1 length]) {
    return 0;
  }
  uint64_t v2 = IMExtensionPayloadUnarchivingClasses();
  uint64_t v9 = 0;
  id v3 = (void *)[objc_alloc(MEMORY[0x1E4F28DC0]) initForReadingFromData:a1 error:&v9];
  if (objc_opt_respondsToSelector())
  {
    [v3 _enableStrictSecureDecodingMode];
    if (IMOSLoggingEnabled())
    {
      int v4 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)long long buf = 0;
        _os_log_impl(&dword_1A0772000, v4, OS_LOG_TYPE_INFO, "strict-decoding 005 _enableStrictSecureDecodingMode called", buf, 2u);
      }
    }
  }
  uint64_t v5 = (void *)[v3 decodeObjectOfClasses:v2 forKey:*MEMORY[0x1E4F284E8]];
  if (v9)
  {
    if (IMOSLoggingEnabled())
    {
      uint64_t v6 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)long long buf = 138412290;
        uint64_t v11 = v9;
        _os_log_impl(&dword_1A0772000, v6, OS_LOG_TYPE_INFO, "Failed to unarchive payload URL. Error: %@", buf, 0xCu);
      }
    }
  }
  objc_opt_class();
  if (objc_opt_isKindOfClass()) {
    uint64_t v7 = IMSanitizedURLForIMExtensionPayloadURLKey(v5);
  }
  else {
    uint64_t v7 = 0;
  }

  return v7;
}

uint64_t IMSharedHelperIsMakoURI(void *a1)
{
  uint64_t result = [a1 length];
  if (result)
  {
    return [a1 isEqualToString:@"urn:biz:e46750f1-3f94-4aba-73ca-1c14fb3adddd"];
  }
  return result;
}

uint64_t IMSharedHelperIsAppleURI(void *a1)
{
  uint64_t result = [a1 length];
  if (result)
  {
    return [a1 isEqualToString:@"urn:biz:b15ed773-9eed-11e7-baa2-7b88b04daa8e"];
  }
  return result;
}

uint64_t IMSharedHelperEnsureDirectoryExistsAtPath(uint64_t a1)
{
  uint64_t result = objc_msgSend((id)objc_msgSend(MEMORY[0x1E4F28CB8], "defaultManager"), "fileExistsAtPath:", a1);
  if ((result & 1) == 0)
  {
    uint64_t v2 = [MEMORY[0x1E4F28CB8] defaultManager];
    return MEMORY[0x1F4181798](v2, sel_makeDirectoriesInPath_mode_);
  }
  return result;
}

uint64_t IMSharedHelperMD5DataHashOfFileAtPath(uint64_t a1)
{
  uint64_t v13 = *MEMORY[0x1E4F143B8];
  if (IMOSLoggingEnabled())
  {
    uint64_t v2 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
    {
      buf.A = 138412290;
      *(void *)&buf.B = a1;
      _os_log_impl(&dword_1A0772000, v2, OS_LOG_TYPE_INFO, "About to hash file at path %@", (uint8_t *)&buf, 0xCu);
    }
  }
  if (!a1)
  {
    if (!IMOSLoggingEnabled()) {
      return 0;
    }
    uint64_t v9 = OSLogHandleForIMFoundationCategory();
    if (!os_log_type_enabled(v9, OS_LOG_TYPE_INFO)) {
      return 0;
    }
    LOWORD(buf.A) = 0;
    uint64_t v10 = "IMSharedHelperMD5HashStringOfFileAtPath nil file path";
    goto LABEL_17;
  }
  id v3 = (void *)[MEMORY[0x1E4F28CB0] fileHandleForReadingAtPath:a1];
  if (!v3)
  {
    if (!IMOSLoggingEnabled()) {
      return 0;
    }
    uint64_t v9 = OSLogHandleForIMFoundationCategory();
    if (!os_log_type_enabled(v9, OS_LOG_TYPE_INFO)) {
      return 0;
    }
    LOWORD(buf.A) = 0;
    uint64_t v10 = "IMSharedHelperMD5HashStringOfFileAtPath could not generate filehandle";
LABEL_17:
    _os_log_impl(&dword_1A0772000, v9, OS_LOG_TYPE_INFO, v10, (uint8_t *)&buf, 2u);
    return 0;
  }
  memset(&buf, 0, sizeof(buf));
  uint64_t v4 = CC_MD5_Init(&buf);
  uint64_t v5 = (void *)MEMORY[0x1A6228190](v4);
  for (uint64_t i = (void *)[v3 readDataOfLength:0x80000];
        ;
        uint64_t i = (void *)[v3 readDataOfLength:0x80000])
  {
    uint64_t v7 = i;
    if (!i || ![i length]) {
      break;
    }
    CC_MD5_Update(&buf, (const void *)[v7 bytes], objc_msgSend(v7, "length"));
    uint64_t v5 = (void *)MEMORY[0x1A6228190]();
  }
  v11[0] = 0;
  v11[1] = 0;
  CC_MD5_Final((unsigned __int8 *)v11, &buf);
  return [MEMORY[0x1E4F1C9B8] dataWithBytes:v11 length:16];
}

unsigned __int8 *IMSharedHelperMD5HashOfFileAtPath(uint64_t a1)
{
  uint64_t v13 = *MEMORY[0x1E4F143B8];
  if (IMOSLoggingEnabled())
  {
    uint64_t v2 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
    {
      buf.A = 138412290;
      *(void *)&buf.B = a1;
      _os_log_impl(&dword_1A0772000, v2, OS_LOG_TYPE_INFO, "About to hash file at path %@", (uint8_t *)&buf, 0xCu);
    }
  }
  if (!a1)
  {
    if (!IMOSLoggingEnabled()) {
      return 0;
    }
    uint64_t v9 = OSLogHandleForIMFoundationCategory();
    if (!os_log_type_enabled(v9, OS_LOG_TYPE_INFO)) {
      return 0;
    }
    LOWORD(buf.A) = 0;
    uint64_t v10 = "IMSharedHelperMD5HashStringOfFileAtPath nil file path";
    goto LABEL_17;
  }
  id v3 = (void *)[MEMORY[0x1E4F28CB0] fileHandleForReadingAtPath:a1];
  if (!v3)
  {
    if (!IMOSLoggingEnabled()) {
      return 0;
    }
    uint64_t v9 = OSLogHandleForIMFoundationCategory();
    if (!os_log_type_enabled(v9, OS_LOG_TYPE_INFO)) {
      return 0;
    }
    LOWORD(buf.A) = 0;
    uint64_t v10 = "IMSharedHelperMD5HashStringOfFileAtPath could not generate filehandle";
LABEL_17:
    _os_log_impl(&dword_1A0772000, v9, OS_LOG_TYPE_INFO, v10, (uint8_t *)&buf, 2u);
    return 0;
  }
  memset(&buf, 0, sizeof(buf));
  uint64_t v4 = CC_MD5_Init(&buf);
  uint64_t v5 = (void *)MEMORY[0x1A6228190](v4);
  for (uint64_t i = (void *)[v3 readDataOfLength:0x80000];
        ;
        uint64_t i = (void *)[v3 readDataOfLength:0x80000])
  {
    uint64_t v7 = i;
    if (!i || ![i length]) {
      break;
    }
    CC_MD5_Update(&buf, (const void *)[v7 bytes], objc_msgSend(v7, "length"));
    uint64_t v5 = (void *)MEMORY[0x1A6228190]();
  }
  v11[0] = 0;
  v11[1] = 0;
  CC_MD5_Final((unsigned __int8 *)v11, &buf);
  return IMSharedHelperMd5ToString((unsigned __int8 *)v11);
}

unsigned __int8 *IMSharedHelperMd5ToString(unsigned __int8 *result)
{
  uint64_t v6 = *MEMORY[0x1E4F143B8];
  if (result)
  {
    uint64_t v1 = 0;
    v4[0] = 0;
    v4[1] = 0;
    char v5 = 0;
    do
    {
      unsigned int v2 = *result++;
      id v3 = (char *)v4 + v1;
      *id v3 = a0123456789abcd[(unint64_t)v2 >> 4];
      v3[1] = a0123456789abcd[v2 & 0xF];
      v1 += 2;
    }
    while (v1 != 16);
    return (unsigned __int8 *)[NSString stringWithCString:v4 encoding:4];
  }
  return result;
}

unsigned __int8 *IMSharedHelperMD5HashPlist(void *a1)
{
  uint64_t v6 = *MEMORY[0x1E4F143B8];
  memset(&v3, 0, sizeof(v3));
  CC_MD5_Init(&v3);
  if (!a1 || !sub_1A084EB90(a1, &v3)) {
    return 0;
  }
  *(void *)md = 0;
  uint64_t v5 = 0;
  CC_MD5_Final(md, &v3);
  return IMSharedHelperMd5ToString(md);
}

uint64_t sub_1A084EB90(void *a1, CC_MD5_CTX *c)
{
  uint64_t v17 = *MEMORY[0x1E4F143B8];
  CC_MD5_Update(c, "NSDictionary{", 0xDu);
  long long v12 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  long long v15 = 0u;
  uint64_t v4 = objc_msgSend((id)objc_msgSend(a1, "allKeys", 0), "sortedArrayUsingSelector:", sel_compare_);
  uint64_t v5 = [v4 countByEnumeratingWithState:&v12 objects:v16 count:16];
  if (v5)
  {
    uint64_t v6 = v5;
    uint64_t v7 = *(void *)v13;
    while (2)
    {
      uint64_t v8 = 0;
      do
      {
        if (*(void *)v13 != v7) {
          objc_enumerationMutation(v4);
        }
        uint64_t v9 = *(void **)(*((void *)&v12 + 1) + 8 * v8);
        objc_opt_class();
        if ((objc_opt_isKindOfClass() & 1) == 0) {
          return 0;
        }
        sub_1A085239C(v9, c);
        CC_MD5_Update(c, ":", 1u);
        if (!sub_1A0852440((void *)[a1 objectForKeyedSubscript:v9], c)) {
          return 0;
        }
        CC_MD5_Update(c, ",", 1u);
        ++v8;
      }
      while (v6 != v8);
      uint64_t v6 = [v4 countByEnumeratingWithState:&v12 objects:v16 count:16];
      if (v6) {
        continue;
      }
      break;
    }
  }
  uint64_t v10 = 1;
  CC_MD5_Update(c, "}", 1u);
  return v10;
}

unsigned __int8 *IMSharedHelperMD5OfData(void *a1)
{
  uint64_t v4 = *MEMORY[0x1E4F143B8];
  *(void *)md = 0;
  uint64_t v3 = 0;
  CC_MD5((const void *)[a1 bytes], objc_msgSend(a1, "length"), md);
  return IMSharedHelperMd5ToString(md);
}

uint64_t IMSharedHelperMD5OfDataInBytes(void *a1)
{
  uint64_t v4 = *MEMORY[0x1E4F143B8];
  *(void *)md = 0;
  uint64_t v3 = 0;
  CC_MD5((const void *)[a1 bytes], objc_msgSend(a1, "length"), md);
  return [MEMORY[0x1E4F1C9B8] dataWithBytes:md length:16];
}

uint64_t IMSharedHelperCachePathForStickerWithProperties(void *a1, int a2)
{
  uint64_t v15 = *MEMORY[0x1E4F143B8];
  if (IMOSLoggingEnabled())
  {
    uint64_t v4 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)CC_MD5_CTX buf = 138412290;
      uint64_t v14 = (uint64_t)a1;
      _os_log_impl(&dword_1A0772000, v4, OS_LOG_TYPE_INFO, "pathForStickerWithProperties %@", buf, 0xCu);
    }
  }
  if ([a1 objectForKey:@"shash"] && objc_msgSend(a1, "objectForKey:", @"sid"))
  {
    uint64_t v5 = objc_msgSend((id)objc_msgSend(IMStickerCacheDirectoryURL(), "path"), "stringByExpandingTildeInPath");
    uint64_t v6 = objc_msgSend((id)objc_msgSend(a1, "objectForKey:", @"shash"), "lastPathComponent");
    uint64_t v7 = objc_msgSend((id)objc_msgSend(a1, "objectForKey:", @"sid"), "lastPathComponent");
    uint64_t v8 = (void *)[(id)objc_msgSend(v5 stringByAppendingPathComponent:objc_msgSend(v6, "stringByAppendingFormat:", @"-%@", objc_msgSend(v7, "stringByDeletingPathExtension"))), "stringByAppendingPathComponent:", v7];
    uint64_t v9 = (uint64_t)v8;
    if (a2) {
      uint64_t v9 = [v8 stringByAppendingPathExtension:@"heic"];
    }
    if (IMOSLoggingEnabled())
    {
      uint64_t v10 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)CC_MD5_CTX buf = 138412290;
        uint64_t v14 = v9;
        _os_log_impl(&dword_1A0772000, v10, OS_LOG_TYPE_INFO, "Resulting path %@", buf, 0xCu);
      }
    }
  }
  else
  {
    if (IMOSLoggingEnabled())
    {
      uint64_t v11 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)CC_MD5_CTX buf = 0;
        _os_log_impl(&dword_1A0772000, v11, OS_LOG_TYPE_INFO, "IMSharedHelper ivalid parameters passed in to pathForStickerWithProperties", buf, 2u);
      }
    }
    return 0;
  }
  return v9;
}

void IMSharedHelperDeleteOrphanedStickerMMCSDownloadTokens(void *a1)
{
  uint64_t v44 = *MEMORY[0x1E4F143B8];
  if (IMOSLoggingEnabled())
  {
    unsigned int v2 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)CC_MD5_CTX buf = 0;
      _os_log_impl(&dword_1A0772000, v2, OS_LOG_TYPE_INFO, "IMSharedHelperDeleteOrphanedStickerMMCSDownloadTokens", buf, 2u);
    }
  }
  uint64_t v3 = [a1 stringByExpandingTildeInPath];
  double v38 = 0.0;
  uint64_t v4 = objc_msgSend((id)objc_msgSend(MEMORY[0x1E4F28CB8], "defaultManager"), "contentsOfDirectoryAtPath:error:", v3, &v38);
  if (v38 == 0.0)
  {
    uint64_t v6 = v4;
    long long v36 = 0u;
    long long v37 = 0u;
    long long v34 = 0u;
    long long v35 = 0u;
    uint64_t v7 = [v4 countByEnumeratingWithState:&v34 objects:v39 count:16];
    if (!v7) {
      return;
    }
    uint64_t v9 = *(void *)v35;
    *(void *)&long long v8 = 67109120;
    long long v32 = v8;
    while (1)
    {
      for (uint64_t i = 0; i != v7; ++i)
      {
        if (*(void *)v35 != v9) {
          objc_enumerationMutation(v6);
        }
        uint64_t v11 = *(void **)(*((void *)&v34 + 1) + 8 * i);
        if (objc_msgSend((id)objc_msgSend(v11, "pathExtension", v32), "isEqualToString:", @"plist"))
        {
          uint64_t v12 = [a1 stringByAppendingPathComponent:v11];
          long long v13 = (void *)[objc_alloc(MEMORY[0x1E4F1C9E8]) initWithContentsOfFile:v12];
          uint64_t v14 = v13;
          if (v13)
          {
            objc_msgSend((id)objc_msgSend(v13, "objectForKey:", @"sticker-TimeInterval"), "doubleValue");
            double v16 = v15;
            [MEMORY[0x1E4F1C9C8] timeIntervalSinceReferenceDate];
            double v18 = v17;
            if (IMOSLoggingEnabled())
            {
              uint64_t v19 = OSLogHandleForIMFoundationCategory();
              if (os_log_type_enabled(v19, OS_LOG_TYPE_INFO))
              {
                *(_DWORD *)CC_MD5_CTX buf = v32;
                LODWORD(v41) = 3456000;
                _os_log_impl(&dword_1A0772000, v19, OS_LOG_TYPE_INFO, "Target time difference %d", buf, 8u);
              }
            }
            double v20 = v18 - v16;
            BOOL v21 = v20 > 0.0 && v20 > 3456000.0;
            int v22 = IMOSLoggingEnabled();
            if (v21)
            {
              if (v22)
              {
                char v23 = OSLogHandleForIMEventCategory();
                if (os_log_type_enabled(v23, OS_LOG_TYPE_INFO))
                {
                  *(_DWORD *)CC_MD5_CTX buf = 138412546;
                  uint64_t v41 = v12;
                  __int16 v42 = 2048;
                  double v43 = v20;
                  _os_log_impl(&dword_1A0772000, v23, OS_LOG_TYPE_INFO, "Will delete file at location %@ timeDifference %f", buf, 0x16u);
                }
              }
              double v33 = 0.0;
              objc_msgSend((id)objc_msgSend(MEMORY[0x1E4F28CB8], "defaultManager"), "removeItemAtPath:error:", v12, &v33);
              if (v33 != 0.0)
              {
                if (IMOSLoggingEnabled())
                {
                  uint64_t v24 = OSLogHandleForIMFoundationCategory();
                  if (os_log_type_enabled(v24, OS_LOG_TYPE_INFO))
                  {
                    *(_DWORD *)CC_MD5_CTX buf = 138412546;
                    uint64_t v41 = v12;
                    __int16 v42 = 2112;
                    double v43 = v33;
                    unsigned int v25 = v24;
                    uint64_t v26 = "IMSharedHelperDeleteOrphanedStickerMMCSDownloadTokens could not delete file path %@ error %@";
                    goto LABEL_38;
                  }
                }
              }
LABEL_40:

              continue;
            }
            if (!v22) {
              goto LABEL_40;
            }
            BOOL v31 = OSLogHandleForIMFoundationCategory();
            if (!os_log_type_enabled(v31, OS_LOG_TYPE_INFO)) {
              goto LABEL_40;
            }
            *(_DWORD *)CC_MD5_CTX buf = 138412546;
            uint64_t v41 = v12;
            __int16 v42 = 2048;
            double v43 = v20;
            unsigned int v25 = v31;
            uint64_t v26 = "Will NOT delete file at location %@ timeDifference %f";
LABEL_38:
            uint32_t v30 = 22;
          }
          else
          {
            if (!IMOSLoggingEnabled()) {
              goto LABEL_40;
            }
            char v29 = OSLogHandleForIMFoundationCategory();
            if (!os_log_type_enabled(v29, OS_LOG_TYPE_INFO)) {
              goto LABEL_40;
            }
            *(_DWORD *)CC_MD5_CTX buf = 138412290;
            uint64_t v41 = v12;
            unsigned int v25 = v29;
            uint64_t v26 = "IMSharedHelperDeleteOrphanedStickerMMCSDownloadTokens Not deleting file %@ unable to read plist";
            uint32_t v30 = 12;
          }
          _os_log_impl(&dword_1A0772000, v25, OS_LOG_TYPE_INFO, v26, buf, v30);
          goto LABEL_40;
        }
        if (IMOSLoggingEnabled())
        {
          uint64_t v27 = OSLogHandleForIMFoundationCategory();
          if (os_log_type_enabled(v27, OS_LOG_TYPE_INFO))
          {
            uint64_t v28 = [a1 stringByAppendingPathComponent:v11];
            *(_DWORD *)CC_MD5_CTX buf = 138412290;
            uint64_t v41 = v28;
            _os_log_impl(&dword_1A0772000, v27, OS_LOG_TYPE_INFO, "IMSharedHelperDeleteOrphanedStickerMMCSDownloadTokens Not deleting file %@ due to extension mismatch", buf, 0xCu);
          }
        }
      }
      uint64_t v7 = [v6 countByEnumeratingWithState:&v34 objects:v39 count:16];
      if (!v7) {
        return;
      }
    }
  }
  if (IMOSLoggingEnabled())
  {
    uint64_t v5 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)CC_MD5_CTX buf = 138412546;
      uint64_t v41 = v3;
      __int16 v42 = 2112;
      double v43 = v38;
      _os_log_impl(&dword_1A0772000, v5, OS_LOG_TYPE_INFO, "IMSharedHelperDeleteOrphanedStickerMMCSDownloadTokens error reading contents of directory at path %@ fileError %@", buf, 0x16u);
    }
  }
}

uint64_t IMIsRunningInAutomation()
{
  uint64_t result = objc_msgSend((id)objc_msgSend(MEMORY[0x1E4F6C360], "sharedInstance"), "isInternalInstall");
  if (result)
  {
    return IMGetCachedDomainBoolForKey();
  }
  return result;
}

uint64_t IMIsRunningInDebugMode()
{
  uint64_t result = objc_msgSend((id)objc_msgSend(MEMORY[0x1E4F6C360], "sharedInstance"), "isInternalInstall");
  if (result)
  {
    return IMGetCachedDomainBoolForKey();
  }
  return result;
}

BOOL IMIsRunningOnAudioAccessory()
{
  return MGGetSInt32Answer() == 7;
}

uint64_t IMBagIntValueWithDefault(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = objc_msgSend((id)objc_msgSend(MEMORY[0x1E4F6B598], "sharedInstanceForBagType:", 1), "objectForKey:", a2);
  if (v3)
  {
    uint64_t v4 = (void *)v3;
    objc_opt_class();
    if (objc_opt_isKindOfClass())
    {
      uint64_t v5 = [v4 longLongValue];
      if (v5 > 0) {
        return v5;
      }
    }
  }
  return a1;
}

double IMBagDoubleValueWithDefault(uint64_t a1, double a2)
{
  uint64_t v3 = objc_msgSend((id)objc_msgSend(MEMORY[0x1E4F6B598], "sharedInstanceForBagType:", 1), "objectForKey:", a1);
  if (v3)
  {
    uint64_t v4 = (void *)v3;
    objc_opt_class();
    if (objc_opt_isKindOfClass())
    {
      [v4 doubleValue];
      if (v5 > 0.0) {
        return v5;
      }
    }
  }
  return a2;
}

uint64_t IMBagBoolValueWithDefault(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = objc_msgSend((id)objc_msgSend(MEMORY[0x1E4F6B598], "sharedInstanceForBagType:", 1), "objectForKey:", a2);
  if (!v3) {
    return a1;
  }
  uint64_t v4 = (void *)v3;
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) == 0) {
    return a1;
  }

  return [v4 BOOLValue];
}

uint64_t IMIsRunningInMessagesExtension()
{
  if (qword_1EB4A62C8 != -1) {
    dispatch_once(&qword_1EB4A62C8, &unk_1EF2BE5B8);
  }
  return byte_1E94FF2C8;
}

CFStringRef sub_1A084F8D8()
{
  MainBundle = CFBundleGetMainBundle();
  CFStringRef result = CFBundleGetIdentifier(MainBundle);
  if (result)
  {
    CFStringRef result = (CFStringRef)CFEqual(result, @"com.apple.MobileSMS.MessagesNotificationExtension");
    BOOL v2 = result != 0;
  }
  else
  {
    BOOL v2 = 0;
  }
  byte_1E94FF2C8 = v2;
  return result;
}

uint64_t IMIsRunningInMessagesTranscriptExtension()
{
  if (qword_1EB4A6030 != -1) {
    dispatch_once(&qword_1EB4A6030, &unk_1EF2C1538);
  }
  return byte_1E94FF038;
}

CFStringRef sub_1A084F960()
{
  MainBundle = CFBundleGetMainBundle();
  CFStringRef result = CFBundleGetIdentifier(MainBundle);
  if (result)
  {
    CFStringRef result = (CFStringRef)CFEqual(result, @"com.apple.MobileSMS.MessagesTranscriptExtension");
    BOOL v2 = result != 0;
  }
  else
  {
    BOOL v2 = 0;
  }
  byte_1E94FF038 = v2;
  return result;
}

uint64_t IMIsRunningInPhotosPersistenceDependentClient()
{
  uint64_t v0 = objc_msgSend((id)objc_msgSend(MEMORY[0x1E4F28B50], "mainBundle"), "bundleIdentifier");
  uint64_t v1 = (void *)[MEMORY[0x1E4F1CAD0] setWithArray:&unk_1EF305E98];

  return [v1 containsObject:v0];
}

uint64_t IMIsRunningInMessagesMacOSX()
{
  if (qword_1E94FFAD0 != -1) {
    dispatch_once(&qword_1E94FFAD0, &unk_1EF2BD878);
  }
  return byte_1E94FFAC8;
}

CFStringRef sub_1A084FA40()
{
  MainBundle = CFBundleGetMainBundle();
  CFStringRef result = CFBundleGetIdentifier(MainBundle);
  if (result)
  {
    CFStringRef result = (CFStringRef)CFEqual(result, @"com.apple.iChat");
    BOOL v2 = result != 0;
  }
  else
  {
    BOOL v2 = 0;
  }
  byte_1E94FFAC8 = v2;
  return result;
}

BOOL IMIsRunningInCarousel()
{
  if (qword_1EB4A60E8 != -1) {
    dispatch_once(&qword_1EB4A60E8, &unk_1EF2BD778);
  }
  return byte_1E94FE768 != 0;
}

CFStringRef sub_1A084FAD0()
{
  MainBundle = CFBundleGetMainBundle();
  CFStringRef result = CFBundleGetIdentifier(MainBundle);
  if (result)
  {
    CFStringRef result = (CFStringRef)CFEqual(result, @"com.apple.Carousel");
    BOOL v2 = result != 0;
  }
  else
  {
    BOOL v2 = 0;
  }
  byte_1E94FE768 = v2;
  return result;
}

uint64_t IMIsRunningInMessagesComposeViewService()
{
  if (qword_1EB4A61A0 != -1) {
    dispatch_once(&qword_1EB4A61A0, &unk_1EF2C1598);
  }
  return byte_1EB4A5D80;
}

CFStringRef sub_1A084FB58()
{
  MainBundle = CFBundleGetMainBundle();
  CFStringRef result = CFBundleGetIdentifier(MainBundle);
  if (result)
  {
    CFStringRef result = (CFStringRef)CFEqual(result, @"com.apple.mobilesms.compose");
    BOOL v2 = result != 0;
  }
  else
  {
    BOOL v2 = 0;
  }
  byte_1EB4A5D80 = v2;
  return result;
}

BOOL IMIsRunningInMessagesViewService()
{
  if (qword_1EB4A61A0 != -1) {
    dispatch_once(&qword_1EB4A61A0, &unk_1EF2C1598);
  }
  if (byte_1EB4A5D80) {
    return 1;
  }
  if (qword_1E94FF098 != -1) {
    dispatch_once(&qword_1E94FF098, &unk_1EF2BE178);
  }
  return byte_1E94FFAD8 != 0;
}

uint64_t IMIsRunningInMessagesNotificationViewService()
{
  if (qword_1E94FF098 != -1) {
    dispatch_once(&qword_1E94FF098, &unk_1EF2BE178);
  }
  return byte_1E94FFAD8;
}

CFStringRef sub_1A084FC68()
{
  MainBundle = CFBundleGetMainBundle();
  CFStringRef result = CFBundleGetIdentifier(MainBundle);
  if (result)
  {
    CFStringRef result = (CFStringRef)CFEqual(result, @"com.apple.mobilesms.notification");
    BOOL v2 = result != 0;
  }
  else
  {
    BOOL v2 = 0;
  }
  byte_1E94FFAD8 = v2;
  return result;
}

uint64_t IMIsRunningInShareSheet()
{
  if (qword_1E94FFAE8 != -1) {
    dispatch_once(&qword_1E94FFAE8, &unk_1EF2BE198);
  }
  return byte_1E94FFAE0;
}

CFStringRef sub_1A084FCF0()
{
  MainBundle = CFBundleGetMainBundle();
  CFStringRef result = CFBundleGetIdentifier(MainBundle);
  if (result)
  {
    CFStringRef result = (CFStringRef)CFEqual(result, @"com.apple.messages.ShareExtension");
    BOOL v2 = result != 0;
  }
  else
  {
    BOOL v2 = 0;
  }
  byte_1E94FFAE0 = v2;
  return result;
}

uint64_t IMIsRunningInIntegrationTesting()
{
  if (qword_1E94FFAF0 != -1) {
    dispatch_once(&qword_1E94FFAF0, &unk_1EF2C1618);
  }
  return byte_1E94FFAF8;
}

uint64_t sub_1A084FD78()
{
  if (qword_1EB4A6440 != -1) {
    dispatch_once(&qword_1EB4A6440, &unk_1EF2C1858);
  }
  if (byte_1E94FF1B0) {
    uint64_t result = objc_msgSend((id)objc_msgSend((id)objc_msgSend((id)objc_msgSend(MEMORY[0x1E4F28F80], "processInfo"), "environment"), "objectForKeyedSubscript:", @"IMIsRunningInIntegrationTesting"), "isEqualToString:", @"YES");
  }
  else {
    uint64_t result = 0;
  }
  byte_1E94FFAF8 = result;
  return result;
}

uint64_t IMIsRunningInScreenshotTesting()
{
  if (qword_1E94FE760 != -1) {
    dispatch_once(&qword_1E94FE760, &unk_1EF2C1638);
  }
  return byte_1E94FFB00;
}

void sub_1A084FE3C()
{
  uint64_t v8 = *MEMORY[0x1E4F143B8];
  uint64_t v0 = objc_msgSend((id)objc_msgSend(MEMORY[0x1E4F28F80], "processInfo"), "environment");
  if (!byte_1E94FFB00)
  {
    uint64_t v1 = v0;
    BOOL v2 = (void *)[v0 objectForKeyedSubscript:@"_"];
    if ([v2 containsString:@"xctest"])
    {
      char v3 = 1;
LABEL_6:
      byte_1E94FFB00 = v3;
      goto LABEL_7;
    }
    byte_1E94FFB00 = [v2 containsString:@"CKTestRunner"];
    if ((byte_1E94FFB00 & 1) == 0)
    {
      char v3 = objc_msgSend((id)objc_msgSend(v1, "objectForKeyedSubscript:", @"IMIsRunningInScreenshotTesting"), "isEqualToString:", @"YES");
      goto LABEL_6;
    }
  }
LABEL_7:
  if (IMOSLoggingEnabled())
  {
    uint64_t v4 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
    {
      if (byte_1E94FFB00) {
        double v5 = @"YES";
      }
      else {
        double v5 = @"NO";
      }
      int v6 = 138412290;
      uint64_t v7 = v5;
      _os_log_impl(&dword_1A0772000, v4, OS_LOG_TYPE_INFO, "IMIsRunningInScreenshotTesting %@", (uint8_t *)&v6, 0xCu);
    }
  }
}

uint64_t IMIsRunningInScreenshotTesting_IsolatedTranscriptUI()
{
  if (qword_1EB4A5E88 != -1) {
    dispatch_once(&qword_1EB4A5E88, &unk_1EF2C1658);
  }
  return byte_1E94FFB08;
}

void sub_1A0850018()
{
  uint64_t v6 = *MEMORY[0x1E4F143B8];
  uint64_t v0 = objc_msgSend((id)objc_msgSend(MEMORY[0x1E4F28F80], "processInfo"), "environment");
  if (!byte_1E94FFB08)
  {
    uint64_t v1 = v0;
    byte_1E94FFB08 = objc_msgSend((id)objc_msgSend(v0, "objectForKeyedSubscript:", @"_"), "containsString:", @"CKTestRunner");
    if ((byte_1E94FFB08 & 1) == 0) {
      byte_1E94FFB08 = objc_msgSend((id)objc_msgSend(v1, "objectForKeyedSubscript:", @"IMIsRunningInScreenshotTesting_IsolatedTranscriptUI"), "isEqualToString:", @"YES");
    }
  }
  if (IMOSLoggingEnabled())
  {
    BOOL v2 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
    {
      if (byte_1E94FFB08) {
        char v3 = @"YES";
      }
      else {
        char v3 = @"NO";
      }
      int v4 = 138412290;
      double v5 = v3;
      _os_log_impl(&dword_1A0772000, v2, OS_LOG_TYPE_INFO, "IMIsRunningInScreenshotTesting_IsolatedTranscriptUI %@", (uint8_t *)&v4, 0xCu);
    }
  }
}

uint64_t IMSendAdditionalMMCSErrorInfoToMadrid()
{
  return IMGetCachedDomainBoolForKey();
}

BOOL IMSharedHelperPathIsInStickerCache(void *a1)
{
  uint64_t v15 = *MEMORY[0x1E4F143B8];
  if (a1)
  {
    uint64_t v1 = (void *)[a1 stringByResolvingAndStandardizingPath];
    uint64_t v2 = objc_msgSend((id)objc_msgSend(IMStickerCacheDirectoryURL(), "path"), "stringByResolvingAndStandardizingPath");
    uint64_t v3 = [v1 rangeOfString:v2];
    BOOL v4 = v3 != 0x7FFFFFFFFFFFFFFFLL;
    if (IMOSLoggingEnabled())
    {
      double v5 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
      {
        uint64_t v6 = @"NO";
        int v9 = 138412802;
        uint64_t v10 = v1;
        __int16 v11 = 2112;
        if (v3 != 0x7FFFFFFFFFFFFFFFLL) {
          uint64_t v6 = @"YES";
        }
        uint64_t v12 = v2;
        __int16 v13 = 2112;
        uint64_t v14 = v6;
        _os_log_impl(&dword_1A0772000, v5, OS_LOG_TYPE_INFO, "IMSharedHelperPathIsInStickerCache input path %@, cache %@ result %@", (uint8_t *)&v9, 0x20u);
      }
    }
  }
  else
  {
    if (IMOSLoggingEnabled())
    {
      uint64_t v7 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
      {
        LOWORD(v9) = 0;
        _os_log_impl(&dword_1A0772000, v7, OS_LOG_TYPE_INFO, "Invalid parameters to IMSharedHelperPathIsInStickerCache", (uint8_t *)&v9, 2u);
      }
    }
    return 0;
  }
  return v4;
}

uint64_t IMSharedHelperAppDisabledBundleIDsForAppCardSwipeGesture()
{
  uint64_t v6 = *MEMORY[0x1E4F143B8];
  uint64_t v0 = (void *)[MEMORY[0x1E4F6B598] sharedInstanceForBagType:1];
  if (!v0)
  {
    if (IMOSLoggingEnabled())
    {
      uint64_t v2 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
      {
        int v4 = 138412290;
        uint64_t v5 = 0;
        _os_log_impl(&dword_1A0772000, v2, OS_LOG_TYPE_INFO, "Invalid parameters serverBag: %@", (uint8_t *)&v4, 0xCu);
      }
    }
    return 0;
  }
  uint64_t v1 = (void *)[v0 objectForKey:@"messages-app-card-swipe-disabled-bids"];
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) == 0) {
    return 0;
  }
  [v1 indexesOfObjectsPassingTest:&unk_1EF2C1698];

  return MEMORY[0x1F4181798](v1, sel_objectsAtIndexes_);
}

uint64_t sub_1A0850490()
{
  return objc_opt_isKindOfClass() & 1;
}

uint64_t IMSharedHelperStickerAppsTemporarilyDisplayedInSendMenu()
{
  uint64_t v6 = *MEMORY[0x1E4F143B8];
  uint64_t v0 = (void *)[MEMORY[0x1E4F6B598] sharedInstanceForBagType:1];
  if (!v0)
  {
    if (IMOSLoggingEnabled())
    {
      uint64_t v2 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
      {
        int v4 = 138412290;
        uint64_t v5 = 0;
        _os_log_impl(&dword_1A0772000, v2, OS_LOG_TYPE_INFO, "Invalid parameters serverBag: %@", (uint8_t *)&v4, 0xCu);
      }
    }
    return 0;
  }
  uint64_t v1 = (void *)[v0 objectForKey:@"messages-app-forced-out-of-stickers"];
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) == 0) {
    return 0;
  }
  [v1 indexesOfObjectsPassingTest:&unk_1EF2C0000];

  return MEMORY[0x1F4181798](v1, sel_objectsAtIndexes_);
}

uint64_t sub_1A0850620()
{
  return objc_opt_isKindOfClass() & 1;
}

BOOL IMSharedHelperDeviceHasMultipleSubscriptionsWithAtLeastOneActive()
{
  BOOL result = [+[IMCTSubscriptionUtilities sharedInstance] deviceSupportsMultipleSubscriptions];
  if (result) {
    return [+[IMCTSubscriptionUtilities sharedInstance] numberOfSubscriptions] != 0;
  }
  return result;
}

uint64_t IMSharedHelperDeviceIsAltAccountDeviceWithActiveSubscription()
{
  return 0;
}

uint64_t IMNormalizePhoneNumber(uint64_t a1)
{
  uint64_t v10 = *MEMORY[0x1E4F143B8];
  IMCountryCodeForIncomingTextMessage();
  uint64_t v2 = (const void *)IMPhoneNumberRefCopyForPhoneNumber();
  uint64_t v3 = IMNormalizedPhoneNumberForCFPhoneNumberRef();
  if (IMOSLoggingEnabled())
  {
    int v4 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
    {
      int v6 = 138412546;
      uint64_t v7 = a1;
      __int16 v8 = 2112;
      uint64_t v9 = v3;
      _os_log_impl(&dword_1A0772000, v4, OS_LOG_TYPE_INFO, "Normalized phone number from: %@ to: %@", (uint8_t *)&v6, 0x16u);
    }
  }
  if (v2) {
    CFRelease(v2);
  }
  return v3;
}

uint64_t sub_1A08507B8(uint64_t a1)
{
  return MEMORY[0x1F4181798](a1, sel___im_URLForChatIdentifier_entryBody_messageGUID_);
}

uint64_t sub_1A08507C0(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void *a5)
{
  if (!a3) {
    return 0;
  }
  uint64_t v7 = (void *)[NSString stringWithFormat:@"sms://open?groupid=%@", a3];
  if ([a4 length])
  {
    __int16 v8 = (void *)IMCopyURLEscapedString();
    uint64_t v7 = (void *)[v7 stringByAppendingString:objc_msgSend(NSString, "stringWithFormat:", @"&body=%@", v8)];
  }
  if ([a5 length]) {
    uint64_t v7 = (void *)[v7 stringByAppendingString:objc_msgSend(NSString, "stringWithFormat:", @"&message-guid=%@", a5)];
  }
  uint64_t v9 = (void *)MEMORY[0x1E4F1CB10];

  return [v9 URLWithString:v7];
}

uint64_t sub_1A08508A8(uint64_t a1)
{
  uint64_t v1 = (void *)[MEMORY[0x1E4F29088] componentsWithURL:a1 resolvingAgainstBaseURL:0];
  uint64_t v2 = objc_msgSend(MEMORY[0x1E4F1CA48], "arrayWithArray:", objc_msgSend(v1, "queryItems"));
  objc_msgSend(v2, "addObject:", objc_msgSend(MEMORY[0x1E4F290C8], "queryItemWithName:value:", @"compose", @"false"));
  [v1 setQueryItems:v2];

  return [v1 URL];
}

uint64_t sub_1A0850940(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = (void *)[a1 scheme];
  __int16 v8 = (void *)[a1 host];
  if (![v7 isEqualToString:@"https"]) {
    return 0;
  }
  uint64_t v9 = (void *)[v8 componentsSeparatedByString:@"."];
  if ((unint64_t)[v9 count] < 2
    || !objc_msgSend((id)objc_msgSend(v9, "lastObject"), "isEqualToString:", a4))
  {
    return 0;
  }
  uint64_t v10 = objc_msgSend(v9, "objectAtIndex:", objc_msgSend(v9, "count") - 2);

  return [v10 isEqualToString:a3];
}

uint64_t sub_1A0850A08(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = (void *)[a1 scheme];
  int v6 = (void *)[a1 host];
  uint64_t result = [v5 isEqualToString:@"https"];
  if (result)
  {
    return [v6 hasSuffix:a3];
  }
  return result;
}

uint64_t IMSharedHelperIsOlderDevice()
{
  if (qword_1EB4A60A0 != -1) {
    dispatch_once(&qword_1EB4A60A0, &unk_1EF2C16B8);
  }
  return byte_1E94FFB10;
}

void sub_1A0850AC8()
{
  id v0 = (id)MGCopyAnswer();
  if (objc_msgSend((id)objc_msgSend(MEMORY[0x1E4F1C978], "arrayWithObjects:", @"n56ap", 0), "containsObject:", objc_msgSend(v0, "lowercaseString")))byte_1E94FFB10 = 1; {
}
  }

uint64_t IMSharedHelperIsUnderAutomation()
{
  uint64_t result = objc_msgSend((id)objc_msgSend(MEMORY[0x1E4F6C360], "sharedInstance"), "isInternalInstall");
  if (result)
  {
    return IMGetCachedDomainBoolForKey();
  }
  return result;
}

uint64_t sub_1A0850BA4(void *a1, void *a2, void *a3, uint64_t a4, CCHmacAlgorithm a5)
{
  CCHmac(a5, (const void *)[a2 UTF8String], objc_msgSend(a2, "lengthOfBytesUsingEncoding:", 4), (const void *)objc_msgSend(a1, "UTF8String"), objc_msgSend(a1, "lengthOfBytesUsingEncoding:", 4), a3);
  uint64_t v7 = objc_msgSend((id)objc_msgSend(MEMORY[0x1E4F1C9B8], "dataWithBytes:length:", a3, a4), "__imHexString");

  return [v7 lowercaseString];
}

uint64_t IMSharedHelperHMACSHA256(void *a1, void *a2)
{
  uint64_t v7 = *MEMORY[0x1E4F143B8];
  if ([a1 length] && objc_msgSend(a2, "length"))
  {
    memset(v6, 0, sizeof(v6));
    return sub_1A0850BA4(a1, a2, v6, 32, 2u);
  }
  else
  {
    if (IMOSLoggingEnabled())
    {
      uint64_t v5 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
      {
        LODWORD(v6[0]) = 138412546;
        *(void *)((char *)v6 + 4) = a1;
        WORD6(v6[0]) = 2112;
        *(void *)((char *)v6 + 14) = a2;
        _os_log_impl(&dword_1A0772000, v5, OS_LOG_TYPE_INFO, "IMSharedHelperHMACSHA256: Invalid parameters %@ %@ ", (uint8_t *)v6, 0x16u);
      }
    }
    return 0;
  }
}

uint64_t IMIsRunningInGameCenter()
{
  if (qword_1E94FFB20 != -1) {
    dispatch_once(&qword_1E94FFB20, &unk_1EF2BE3D8);
  }
  return byte_1E94FFB18;
}

uint64_t sub_1A0850DC0()
{
  uint64_t result = objc_msgSend((id)objc_msgSend((id)objc_msgSend(MEMORY[0x1E4F28B50], "mainBundle"), "bundleIdentifier"), "isEqualToString:", @"com.apple.GameCenterUI.GameCenterMatchmakerExtension");
  byte_1E94FFB18 = result;
  return result;
}

uint64_t __IMSharedHelperCheckPersistMergeID()
{
  int v0 = objc_msgSend((id)objc_msgSend((id)objc_msgSend(MEMORY[0x1E4F6B598], "sharedInstanceForBagType:", 1), "objectForKey:", @"madrid-dont-persist-mergeid"), "BOOLValue");
  if (v0)
  {
    if (IMOSLoggingEnabled())
    {
      uint64_t v1 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v1, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)CC_MD5_CTX buf = 0;
        _os_log_impl(&dword_1A0772000, v1, OS_LOG_TYPE_INFO, "Not persisting merge ID due to server overrride", buf, 2u);
      }
    }
  }
  uint64_t v2 = v0 ^ 1u;
  if (objc_msgSend((id)objc_msgSend(MEMORY[0x1E4F6C360], "sharedInstance"), "isInternalInstall")
    && IMGetDomainBoolForKeyWithDefaultValue())
  {
    if (IMOSLoggingEnabled())
    {
      uint64_t v3 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)uint64_t v5 = 0;
        _os_log_impl(&dword_1A0772000, v3, OS_LOG_TYPE_INFO, "Not persisting merge ID due to user defaults override", v5, 2u);
      }
    }
    return 0;
  }
  return v2;
}

uint64_t sub_1A0850F44()
{
  uint64_t result = __IMSharedHelperCheckPersistMergeID();
  byte_1E94F7218 = result;
  return result;
}

void sub_1A0850F64(uint64_t a1)
{
  uint64_t v13 = *MEMORY[0x1E4F143B8];
  if (IMOSLoggingEnabled())
  {
    uint64_t v2 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
    {
      int v3 = *(unsigned __int8 *)(a1 + 40);
      uint64_t v4 = *(void *)(a1 + 32);
      uint64_t v5 = [NSNumber numberWithUnsignedInteger:1];
      int v6 = @"YES";
      int v7 = 138412802;
      if (!v3) {
        int v6 = @"NO";
      }
      __int16 v8 = v6;
      __int16 v9 = 2112;
      uint64_t v10 = v4;
      __int16 v11 = 2112;
      uint64_t v12 = v5;
      _os_log_impl(&dword_1A0772000, v2, OS_LOG_TYPE_INFO, "Server says we should keep nicknames on? %@ {serverbagValue: %@ version: %@}", (uint8_t *)&v7, 0x20u);
    }
  }
}

BOOL IMSharedHelperAlwaysShowNicknameBanners_0()
{
  int v0 = objc_msgSend((id)objc_msgSend(MEMORY[0x1E4F6B598], "sharedInstanceForBagType:", 1), "objectForKey:", @"always-show-nickname-banners-version");
  uint64_t v1 = v0;
  BOOL v2 = !v0 || ![v0 unsignedIntegerValue];
  v4[0] = MEMORY[0x1E4F143A8];
  v4[1] = 3221225472;
  void v4[2] = sub_1A0851180;
  v4[3] = &unk_1E5A13A78;
  BOOL v5 = v2;
  void v4[4] = v1;
  if (qword_1E94FF070 != -1) {
    dispatch_once(&qword_1E94FF070, v4);
  }
  return v2;
}

void sub_1A0851180(uint64_t a1)
{
  uint64_t v13 = *MEMORY[0x1E4F143B8];
  if (IMOSLoggingEnabled())
  {
    BOOL v2 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
    {
      int v3 = *(unsigned __int8 *)(a1 + 40);
      uint64_t v4 = *(void *)(a1 + 32);
      uint64_t v5 = [NSNumber numberWithUnsignedInteger:0];
      int v6 = @"YES";
      int v7 = 138412802;
      if (!v3) {
        int v6 = @"NO";
      }
      __int16 v8 = v6;
      __int16 v9 = 2112;
      uint64_t v10 = v4;
      __int16 v11 = 2112;
      uint64_t v12 = v5;
      _os_log_impl(&dword_1A0772000, v2, OS_LOG_TYPE_INFO, "Server says we should always show nickname banners? %@ {serverbagValue: %@ version: %@}", (uint8_t *)&v7, 0x20u);
    }
  }
}

uint64_t IMSharedHelperMacConversationMergingEnabled()
{
  return 0;
}

void sub_1A08512D4()
{
  uint64_t v4 = *MEMORY[0x1E4F143B8];
  byte_1E94F7631 = IMGetDomainBoolForKeyWithDefaultValue();
  if (IMOSLoggingEnabled())
  {
    int v0 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v0, OS_LOG_TYPE_INFO))
    {
      if (byte_1E94F7631) {
        uint64_t v1 = @"YES";
      }
      else {
        uint64_t v1 = @"NO";
      }
      int v2 = 138412290;
      int v3 = v1;
      _os_log_impl(&dword_1A0772000, v0, OS_LOG_TYPE_INFO, "Contacts based merging is enabled %@", (uint8_t *)&v2, 0xCu);
    }
  }
}

uint64_t IMSharedHelperPersistMergeIDMergedChats()
{
  if (qword_1EB4A5D58 != -1) {
    dispatch_once(&qword_1EB4A5D58, &unk_1EF2C1778);
  }
  return byte_1E94F842A;
}

void sub_1A0851444()
{
  uint64_t v4 = *MEMORY[0x1E4F143B8];
  byte_1E94F842A = IMGetDomainBoolForKeyWithDefaultValue();
  if (IMOSLoggingEnabled())
  {
    int v0 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v0, OS_LOG_TYPE_INFO))
    {
      if (byte_1E94F842A) {
        uint64_t v1 = @"YES";
      }
      else {
        uint64_t v1 = @"NO";
      }
      int v2 = 138412290;
      int v3 = v1;
      _os_log_impl(&dword_1A0772000, v0, OS_LOG_TYPE_INFO, "Persist mergeID merged chats is enabled %@", (uint8_t *)&v2, 0xCu);
    }
  }
}

uint64_t IMSharedHelperSortUsingReplyToGUIDAlgorithm()
{
  if (qword_1EB4A6620 != -1) {
    dispatch_once(&qword_1EB4A6620, &unk_1EF2BE298);
  }
  int v0 = byte_1EB4A6418;
  LODWORD(result) = IMGetDomainBoolForKey();
  if (v0) {
    return 1;
  }
  else {
    return result;
  }
}

BOOL sub_1A08515D8()
{
  uint64_t v12 = *MEMORY[0x1E4F143B8];
  int v0 = objc_msgSend((id)objc_msgSend(MEMORY[0x1E4F6B598], "sharedInstanceForBagType:", 1), "objectForKey:", @"pin-unsent-messages-to-bottom");
  uint64_t v1 = v0;
  BOOL v2 = !v0 || (unint64_t)[v0 unsignedIntegerValue] <= 1;
  if (IMOSLoggingEnabled())
  {
    int v3 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
    {
      uint64_t v4 = @"NO";
      if (v2) {
        uint64_t v4 = @"YES";
      }
      int v6 = 138412802;
      int v7 = v4;
      __int16 v8 = 2112;
      __int16 v9 = v1;
      __int16 v10 = 2112;
      __int16 v11 = &unk_1EF305958;
      _os_log_impl(&dword_1A0772000, v3, OS_LOG_TYPE_INFO, "Server says we should pin messages to the bottom? %@ {serverbagValue: %@ version: %@}", (uint8_t *)&v6, 0x20u);
    }
  }
  return v2;
}

uint64_t IMSharedHelperPinUnsentMessagesToBottom()
{
  if (qword_1EB4A61A8 != -1) {
    dispatch_once(&qword_1EB4A61A8, &unk_1EF2C0320);
  }
  return byte_1EB4A61B0;
}

void sub_1A085175C()
{
  byte_1EB4A61B0 = sub_1A08515D8();
  if ((byte_1EB4A61B0 & 1) == 0)
  {
    byte_1EB4A61B0 = IMGetDomainBoolForKeyWithDefaultValue();
    if (byte_1EB4A61B0)
    {
      BOOL v0 = 1;
    }
    else
    {
      if (qword_1EB4A6620 != -1) {
        dispatch_once(&qword_1EB4A6620, &unk_1EF2BE298);
      }
      BOOL v0 = byte_1EB4A6418 != 0;
    }
    byte_1EB4A61B0 = v0;
  }
}

uint64_t IMSharedHelperDeviceIsSharediPad()
{
  uint64_t v0 = [MEMORY[0x1E4FB36F8] sharedManager];

  return MEMORY[0x1F4181798](v0, sel_isSharedIPad);
}

BOOL IMSharedHelperDeviceIsiPod()
{
  return MGGetSInt32Answer() == 2;
}

uint64_t IMSharedHelperTruncatedGroupDisplayName(void *a1)
{
  uint64_t v1 = a1;
  uint64_t v6 = *MEMORY[0x1E4F143B8];
  if ((unint64_t)[a1 length] > 0x400)
  {
    if (IMOSLoggingEnabled())
    {
      BOOL v2 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
      {
        int v4 = 134217984;
        uint64_t v5 = 1024;
        _os_log_impl(&dword_1A0772000, v2, OS_LOG_TYPE_INFO, "Trying to set a group display name that's too long. truncating to %tu characters", (uint8_t *)&v4, 0xCu);
      }
    }
    return [v1 substringToIndex:1024];
  }
  return (uint64_t)v1;
}

uint64_t IMSharedHelperShouldAdjustTimestampOfResentMessages()
{
  if (qword_1EB4A5D68 != -1) {
    dispatch_once(&qword_1EB4A5D68, &unk_1EF2C1798);
  }
  return byte_1EB4A5D60;
}

uint64_t sub_1A0851988()
{
  uint64_t v12 = *MEMORY[0x1E4F143B8];
  uint64_t v0 = (void *)[MEMORY[0x1E4F6B598] sharedInstanceForBagType:1];
  uint64_t v1 = (void *)[v0 objectForKey:@"allowed-app-retry-version"];
  if (v1)
  {
    BOOL v2 = v1;
    if ((unint64_t)[v1 unsignedIntegerValue] <= 2)
    {
      if (IMOSLoggingEnabled())
      {
        int v3 = OSLogHandleForIMFoundationCategory();
        if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
        {
          int v8 = 138412546;
          __int16 v9 = v2;
          __int16 v10 = 2112;
          __int16 v11 = &unk_1EF305970;
          _os_log_impl(&dword_1A0772000, v3, OS_LOG_TYPE_INFO, "Server says we should send oe key on message retry {serverbagValue: %@ version: %@}", (uint8_t *)&v8, 0x16u);
        }
      }
      byte_1EB4A5D60 = 1;
    }
  }
  int v4 = (void *)[v0 objectForKey:@"allowed-app-retry-time-sec"];
  if (v4) {
    BOOL v5 = [v4 integerValue] > 0;
  }
  else {
    BOOL v5 = 0;
  }
  if (!byte_1EB4A5D60) {
    BOOL v5 = 0;
  }
  byte_1EB4A5D60 = v5;
  uint64_t result = IMGetDomainBoolForKeyWithDefaultValue();
  if (byte_1EB4A5D60) {
    char v7 = 1;
  }
  else {
    char v7 = result;
  }
  byte_1EB4A5D60 = v7;
  return result;
}

double IMSharedHelperRetryTimeout()
{
  if (qword_1E94FE920 != -1) {
    dispatch_once(&qword_1E94FE920, &unk_1EF2C17B8);
  }
  uint64_t v0 = IMGetDomainIntForKey();
  if (!v0) {
    return *(double *)&qword_1E94F8430;
  }
  double result = (double)v0;
  *(double *)&qword_1E94F8430 = (double)v0;
  return result;
}

void *sub_1A0851B78()
{
  double result = objc_msgSend((id)objc_msgSend(MEMORY[0x1E4F6B598], "sharedInstanceForBagType:", 1), "objectForKey:", @"allowed-app-retry-time-sec");
  if (result)
  {
    double result = (void *)[result doubleValue];
    qword_1E94F8430 = v1;
  }
  return result;
}

uint64_t IMSharedHelperCatalystNotificationDisabled()
{
  return 1;
}

uint64_t IMSharedHelperBusinessAllowlist()
{
  if (qword_1E94FFB30 != -1) {
    dispatch_once(&qword_1E94FFB30, &unk_1EF2C17D8);
  }
  return qword_1E94FFB28;
}

uint64_t sub_1A0851C04()
{
  uint64_t result = objc_msgSend(objc_alloc(MEMORY[0x1E4F1CAD0]), "initWithObjects:", @"urn:biz:b15ed773-9eed-11e7-baa2-7b88b04daa8e", @"urn:biz:55d74f63-6caf-11e7-8569-c753b1bff6fa", @"urn:biz:597b5bf3-672f-11e7-adb7-7b88b04daa8e", @"urn:biz:705c53d3-8cf3-11e7-a70c-c753b1bff6fa", @"urn:biz:71a35d53-8cf4-11e7-a70c-c753b1bff6fa", @"urn:biz:84ac37b0-8cf3-11e7-a70c-c753b1bff6fa", @"urn:biz:8f509023-8cf4-11e7-a70c-c753b1bff6fa", @"urn:biz:9ba45833-8cf3-11e7-a70c-c753b1bff6fa", @"urn:biz:b00f1713-8cf3-11e7-a70c-c753b1bff6fa", @"urn:biz:bb4690d3-672e-11e7-adb7-7b88b04daa8e", @"urn:biz:c6da1a13-cbde-11e7-ae91-c560a982710b", @"urn:biz:cf567ab3-6cae-11e7-8569-c753b1bff6fa", 0);
  qword_1E94FFB28 = result;
  return result;
}

BOOL IMSharedHelperCatalystRunningOnDefaultScale()
{
  uint64_t v0 = (void *)IMGetCachedDomainValueForKey();
  if (!v0) {
    return 1;
  }
  [v0 floatValue];
  return v1 == 1.0;
}

uint64_t IMSharedHelperSpotlightIndexingPreference()
{
  return 0;
}

uint64_t IMSharedHelperExternalLocationForFile(void *a1, void *a2)
{
  uint64_t v14 = *MEMORY[0x1E4F143B8];
  int v3 = objc_msgSend(a2, "im_lastPathComponent");
  unsigned __int8 v4 = [a1 hash];
  uint64_t v5 = objc_msgSend(NSString, "stringWithFormat:", @"%02x", v4);
  uint64_t v6 = objc_msgSend(NSString, "stringWithFormat:", @"%02d", v4 & 0xF);
  if ([v3 length] && objc_msgSend(a1, "length")) {
    char v7 = objc_msgSend((id)objc_msgSend((id)objc_msgSend((id)objc_msgSend(@"/var/mobile/Library/MessagesMetaData", "stringByAppendingPathComponent:", v5), "stringByAppendingPathComponent:", v6), "stringByAppendingPathComponent:", objc_msgSend(a1, "im_lastPathComponent")), "stringByAppendingPathComponent:", v3);
  }
  else {
    char v7 = 0;
  }
  if (IMOSLoggingEnabled())
  {
    int v8 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)CC_MD5_CTX buf = 138412546;
      __int16 v11 = v7;
      __int16 v12 = 2112;
      uint64_t v13 = a1;
      _os_log_impl(&dword_1A0772000, v8, OS_LOG_TYPE_INFO, "Resulting path %@   for transfer: %@", buf, 0x16u);
    }
  }
  return [v7 stringByExpandingTildeInPath];
}

uint64_t IMSharedHelperGet_IMDaemonRequestConnectionWithSync()
{
  if (qword_1EB4A63B8 != -1) {
    dispatch_once(&qword_1EB4A63B8, &unk_1EF2C17F8);
  }
  return qword_1EB4A63B0;
}

void sub_1A0851EDC()
{
  qword_1EB4A63B0 = MEMORY[0x1A6227920]("IMDaemonRequestConnectionWithSync", @"IMFoundation");
  if (!qword_1EB4A63B0 && IMOSLoggingEnabled())
  {
    uint64_t v0 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v0, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)float v1 = 0;
      _os_log_impl(&dword_1A0772000, v0, OS_LOG_TYPE_INFO, "Unable to weak link IMDaemonRequestConnectionWithSync", v1, 2u);
    }
  }
}

uint64_t IMSharedHelperGet_IMXPCCreateServerConnectionWithQueue()
{
  if (qword_1EB4A63C8 != -1) {
    dispatch_once(&qword_1EB4A63C8, &unk_1EF2C1818);
  }
  return qword_1EB4A63C0;
}

void sub_1A0851FE0()
{
  qword_1EB4A63C0 = MEMORY[0x1A6227920]("IMXPCCreateServerConnectionWithQueue", @"IMFoundation");
  if (!qword_1EB4A63C0 && IMOSLoggingEnabled())
  {
    uint64_t v0 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v0, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)float v1 = 0;
      _os_log_impl(&dword_1A0772000, v0, OS_LOG_TYPE_INFO, "Unable to weak link IMXPCCreateServerConnectionWithQueue", v1, 2u);
    }
  }
}

uint64_t IMIsPlugInProxyAMessagesExtensionPoint(void *a1)
{
  float v1 = (void *)[a1 protocol];
  if ([v1 isEqualToString:@"com.apple.message-payload-provider"]) {
    return 1;
  }
  else {
    return [v1 isEqualToString:@"com.apple.message-payload-provider.highmemory"];
  }
}

uint64_t IMIsRunningIniMessageAppExtension()
{
  if (qword_1E94FF088 != -1) {
    dispatch_once(&qword_1E94FF088, &unk_1EF2C1878);
  }
  return byte_1E94FFB38;
}

uint64_t IMIsRunningIniMessageAppsViewService()
{
  if (qword_1E94FF088 != -1) {
    dispatch_once(&qword_1E94FF088, &unk_1EF2C1878);
  }
  return (byte_1E94FFB39 | byte_1E94FFB3A) & 1;
}

id IMSharedHelperMissingKeysInStickerUserInfo(void *a1)
{
  v17[11] = *MEMORY[0x1E4F143B8];
  v17[0] = @"sid";
  v17[1] = @"pid";
  id v17[2] = @"shash";
  v17[3] = @"spw";
  void v17[4] = @"sxs";
  v17[5] = @"sys";
  v17[6] = @"ssa";
  v17[7] = @"sro";
  v17[8] = @"sli";
  v17[9] = @"sir";
  v17[10] = @"spv";
  BOOL v2 = (void *)[MEMORY[0x1E4F1C978] arrayWithObjects:v17 count:11];
  if (a1)
  {
    id v3 = objc_alloc_init(MEMORY[0x1E4F1CA48]);
    long long v12 = 0u;
    long long v13 = 0u;
    long long v14 = 0u;
    long long v15 = 0u;
    uint64_t v4 = [v2 countByEnumeratingWithState:&v12 objects:v16 count:16];
    if (v4)
    {
      uint64_t v5 = v4;
      uint64_t v6 = *(void *)v13;
      do
      {
        for (uint64_t i = 0; i != v5; ++i)
        {
          if (*(void *)v13 != v6) {
            objc_enumerationMutation(v2);
          }
          uint64_t v8 = *(void *)(*((void *)&v12 + 1) + 8 * i);
          uint64_t v9 = [a1 objectForKey:v8];
          if (v9)
          {
            __int16 v10 = (void *)v9;
            objc_opt_class();
            if ((objc_opt_isKindOfClass() & 1) == 0 || [v10 length]) {
              continue;
            }
          }
          [v3 addObject:v8];
        }
        uint64_t v5 = [v2 countByEnumeratingWithState:&v12 objects:v16 count:16];
      }
      while (v5);
    }
    return v3;
  }
  return v2;
}

void sub_1A085239C(void *a1, CC_MD5_CTX *a2)
{
  uint64_t v4 = [a1 maximumLengthOfBytesUsingEncoding:4];
  if (v4)
  {
    uint64_t v5 = v4 + 1;
    uint64_t v6 = (char *)malloc_type_malloc(v4 + 1, 0x477A2FF5uLL);
    if (v6)
    {
      char v7 = v6;
      [a1 getCString:v6 maxLength:v5 encoding:4];
      CC_LONG v8 = strlen(v7);
      CC_MD5_Update(a2, v7, v8);
      free(v7);
    }
  }
}

uint64_t sub_1A0852440(void *a1, CC_MD5_CTX *a2)
{
  uint64_t v18 = *MEMORY[0x1E4F143B8];
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    sub_1A085239C(a1, a2);
    return 1;
  }
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    sub_1A0852664(a1, a2);
    return 1;
  }
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    uint64_t v4 = [a1 bytes];
    CC_LONG v5 = [a1 length];
    uint64_t v6 = a2;
    char v7 = (const char *)v4;
LABEL_7:
    CC_MD5_Update(v6, v7, v5);
    return 1;
  }
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    CC_MD5_Update(a2, "NSArray[", 8u);
    long long v13 = 0u;
    long long v14 = 0u;
    long long v15 = 0u;
    long long v16 = 0u;
    uint64_t v9 = [a1 countByEnumeratingWithState:&v13 objects:v17 count:16];
    if (v9)
    {
      uint64_t v10 = v9;
      uint64_t v11 = *(void *)v14;
LABEL_13:
      uint64_t v12 = 0;
      while (1)
      {
        if (*(void *)v14 != v11) {
          objc_enumerationMutation(a1);
        }
        if (!sub_1A0852440(*(void *)(*((void *)&v13 + 1) + 8 * v12), a2)) {
          return 1;
        }
        CC_MD5_Update(a2, ",", 1u);
        if (v10 == ++v12)
        {
          uint64_t v10 = [a1 countByEnumeratingWithState:&v13 objects:v17 count:16];
          if (v10) {
            goto LABEL_13;
          }
          break;
        }
      }
    }
    char v7 = "]";
    uint64_t v6 = a2;
    CC_LONG v5 = 1;
    goto LABEL_7;
  }
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) == 0) {
    return 0;
  }
  sub_1A084EB90((int)a1, a2);
  return 1;
}

uint64_t sub_1A0852664(void *a1, CC_MD5_CTX *a2)
{
  sizep[1] = *MEMORY[0x1E4F143B8];
  sizep[0] = 0;
  uint64_t v4 = (const char *)[a1 objCType];
  CC_LONG v5 = NSGetSizeAndAlignment(v4, sizep, 0);
  MEMORY[0x1F4188790](v5);
  char v7 = (char *)sizep - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  bzero(v7, v6);
  [a1 getValue:v7];
  CC_LONG v8 = strlen(v4);
  CC_MD5_Update(a2, v4, v8);
  CC_MD5_Update(a2, ":", 1u);
  return CC_MD5_Update(a2, v7, sizep[0]);
}

uint64_t sub_1A0852768()
{
  uint64_t v0 = objc_msgSend((id)objc_msgSend(MEMORY[0x1E4F28B50], "mainBundle"), "bundleIdentifier");
  uint64_t result = [v0 isEqualToString:@"com.apple.iMessageAppsViewService"];
  if (result)
  {
    byte_1E94FFB39 = 1;
  }
  else
  {
    BOOL v2 = (void *)[MEMORY[0x1E4F22458] pluginKitProxyForIdentifier:v0];
    uint64_t result = objc_msgSend((id)objc_msgSend(v2, "protocol"), "isEqualToString:", @"com.apple.imessage-apps-host");
    if (result)
    {
      byte_1E94FFB3A = 1;
    }
    else
    {
      id v3 = (void *)[v2 protocol];
      if ([v3 isEqualToString:@"com.apple.message-payload-provider"]) {
        uint64_t result = 1;
      }
      else {
        uint64_t result = [v3 isEqualToString:@"com.apple.message-payload-provider.highmemory"];
      }
      byte_1E94FFB38 = result;
    }
  }
  return result;
}

uint64_t IMDDatabaseTelemetryLogHandle()
{
  if (qword_1EB4A60B0 != -1) {
    dispatch_once(&qword_1EB4A60B0, &unk_1EF2BFAC0);
  }
  return qword_1EB4A60A8;
}

os_log_t sub_1A0854984()
{
  os_log_t result = os_log_create("com.apple.Messages.telemetry", "IMDDatabase");
  qword_1EB4A60A8 = (uint64_t)result;
  return result;
}

uint64_t IMDDaemonTelemetryLogHandle()
{
  if (qword_1E94FE738 != -1) {
    dispatch_once(&qword_1E94FE738, &unk_1EF2BE138);
  }
  return qword_1E94FE730;
}

os_log_t sub_1A08549F8()
{
  os_log_t result = os_log_create("com.apple.Messages.telemetry", "Daemon");
  qword_1E94FE730 = (uint64_t)result;
  return result;
}

uint64_t IMSharedUtilitiesTelemetryLogHandle()
{
  if (qword_1E94FFB48 != -1) {
    dispatch_once(&qword_1E94FFB48, &unk_1EF2BFCE0);
  }
  return qword_1E94FFB40;
}

os_log_t sub_1A0854A6C()
{
  os_log_t result = os_log_create("com.apple.Messages.telemetry", "SharedUtilities");
  qword_1E94FFB40 = (uint64_t)result;
  return result;
}

uint64_t sub_1A0854EA8(uint64_t a1)
{
  return MEMORY[0x1F4181798](*(void *)(a1 + 32), sel__trackEvent_);
}

uint64_t sub_1A0855278(uint64_t a1)
{
  return MEMORY[0x1F4181798](*(void *)(a1 + 32), sel__trackEvent_withStatistic_);
}

void sub_1A08553DC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, long long a9)
{
  if (a2 == 1)
  {
    id v9 = objc_begin_catch(exception_object);
    if (IMOSLoggingEnabled())
    {
      uint64_t v10 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
      {
        LODWORD(a9) = 138412290;
        *(void *)((char *)&a9 + 4) = v9;
        _os_log_impl(&dword_1A0772000, v10, OS_LOG_TYPE_INFO, "Caught an exception sending to CoreAnalytics: %@", (uint8_t *)&a9, 0xCu);
      }
    }
    objc_end_catch();
    JUMPOUT(0x1A08553ACLL);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1A085563C(uint64_t a1)
{
  return [*(id *)(a1 + 32) _trackEvent:*(void *)(a1 + 40) withDictionary:*(void *)(a1 + 48)];
}

void sub_1A0855AC8()
{
}

void *sub_1A0855B78()
{
  os_log_t result = (void *)MEMORY[0x1A6227920]("FTAWDLogIMessageCloudKitSyncFailed", @"FTAWD");
  off_1E94FF0D8 = result;
  return result;
}

void sub_1A0855BA8(uint64_t a1)
{
  v12[1] = *MEMORY[0x1E4F143B8];
  uint64_t v2 = objc_msgSend(*(id *)(*(void *)(a1 + 32) + 16), "signatureWithDomain:type:subType:subtypeContext:detectedProcess:triggerThresholdValues:", @"iMessage", *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), objc_msgSend((id)objc_msgSend(MEMORY[0x1E4F28B50], "mainBundle"), "bundleIdentifier"), 0);
  if ([*(id *)(a1 + 64) localizedDescription])
  {
    uint64_t v11 = @"error";
    v12[0] = [*(id *)(a1 + 64) localizedDescription];
    uint64_t v3 = [MEMORY[0x1E4F1C9E8] dictionaryWithObjects:v12 forKeys:&v11 count:1];
  }
  else
  {
    uint64_t v3 = 0;
  }
  uint64_t v4 = *(void **)(*(void *)(a1 + 32) + 16);
  uint64_t v5 = *(void *)(a1 + 72);
  v8[0] = MEMORY[0x1E4F143A8];
  v8[1] = 3221225472;
  v8[2] = sub_1A0855E6C;
  void v8[3] = &unk_1E5A14608;
  void v8[4] = v2;
  if ([v4 snapshotWithSignature:v2 duration:v5 event:v3 payload:v8 reply:15.0])
  {
    if (IMOSLoggingEnabled())
    {
      size_t v6 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)CC_MD5_CTX buf = 138412290;
        uint64_t v10 = v2;
        char v7 = "Auto Bug Capture took a snapshot for signature %@";
LABEL_11:
        _os_log_impl(&dword_1A0772000, v6, OS_LOG_TYPE_INFO, v7, buf, 0xCu);
      }
    }
  }
  else if (IMOSLoggingEnabled())
  {
    size_t v6 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)CC_MD5_CTX buf = 138412290;
      uint64_t v10 = v2;
      char v7 = "Auto Bug Capture failed to take snapshot for signature %@";
      goto LABEL_11;
    }
  }
}

void sub_1A0855DA0(_Unwind_Exception *a1, int a2)
{
  if (a2 == 1)
  {
    objc_begin_catch(a1);
    objc_end_catch();
    JUMPOUT(0x1A0855D6CLL);
  }
  _Unwind_Resume(a1);
}

void sub_1A0855E6C(uint64_t a1, uint64_t a2)
{
  uint64_t v10 = *MEMORY[0x1E4F143B8];
  if (IMOSLoggingEnabled())
  {
    uint64_t v4 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
    {
      uint64_t v5 = *(void *)(a1 + 32);
      int v6 = 138412546;
      uint64_t v7 = v5;
      __int16 v8 = 2112;
      uint64_t v9 = a2;
      _os_log_impl(&dword_1A0772000, v4, OS_LOG_TYPE_INFO, "Received response from Auto Bug Capture for signature %@ - response: %@", (uint8_t *)&v6, 0x16u);
    }
  }
}

void *sub_1A0856154()
{
  os_log_t result = (void *)MEMORY[0x1A6227920]("FTAWDLogIMessageCloudKitValidatePurgeableAttachment", @"FTAWD");
  off_1E94FFB50 = result;
  return result;
}

uint64_t sub_1A0856308(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5 = objc_msgSend(*(id *)(a1 + 32), "_stringForiMessageJunkType:", (int)objc_msgSend(a2, "intValue"));
  int v6 = *(void **)(a1 + 40);
  uint64_t v7 = [a3 stringValue];

  return [v6 setObject:v7 forKey:v5];
}

void *sub_1A0856624()
{
  os_log_t result = (void *)MEMORY[0x1A6227920]("ADClientAddValueForScalarKey", @"AggregateDictionary");
  off_1EB4A6250 = result;
  return result;
}

void *sub_1A0856654()
{
  os_log_t result = (void *)MEMORY[0x1A6227920]("ADClientPushValueForDistributionKey", @"AggregateDictionary");
  off_1EB4A60B8 = result;
  return result;
}

void *sub_1A0857138()
{
  os_log_t result = (void *)MEMORY[0x1A6227920]("CLLocationCoordinate2DIsValid", @"CoreLocation");
  off_1E94FFB60 = result;
  return result;
}

void *sub_1A0857168()
{
  os_log_t result = (void *)MEMORY[0x1A6227920]("MKCoordinateRegionMakeWithDistance", @"MapKit");
  off_1E94FFB70 = result;
  return result;
}

void sub_1A0857198(uint64_t a1, void *a2, void *a3)
{
  uint64_t v13 = *MEMORY[0x1E4F143B8];
  id v5 = a2;
  id v6 = a3;
  if (v6)
  {
    if (IMOSLoggingEnabled())
    {
      uint64_t v7 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)uint64_t v12 = 138412546;
        *(void *)&void v12[4] = objc_opt_class();
        *(_WORD *)&v12[12] = 2112;
        *(void *)&v12[14] = v6;
        id v8 = *(id *)&v12[4];
        _os_log_impl(&dword_1A0772000, v7, OS_LOG_TYPE_INFO, "%@ - Got error back from MKMapSnapshotter: %@", v12, 0x16u);
      }
    }

    id v5 = 0;
  }
  uint64_t v9 = objc_msgSend(v5, "image", *(_OWORD *)v12, *(void *)&v12[16], v13);
  uint64_t v10 = *(void *)(*(void *)(a1 + 40) + 8);
  uint64_t v11 = *(void **)(v10 + 40);
  *(void *)(v10 + 40) = v9;

  if (*(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40)) {
    *(unsigned char *)(*(void *)(*(void *)(a1 + 48) + 8) + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = 1;
  }
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));
}

void sub_1A0857368()
{
  dispatch_queue_t v0 = dispatch_queue_create(0, 0);
  float v1 = (void *)qword_1E94FFB80;
  qword_1E94FFB80 = (uint64_t)v0;

  uint64_t v2 = qword_1E94FFB80;
  uint64_t v3 = dispatch_get_global_queue(0, 0);
  dispatch_set_target_queue(v2, v3);
}

void sub_1A08577EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void *sub_1A0857804()
{
  os_log_t result = (void *)MEMORY[0x1A6227920]("CLLocationCoordinate2DMake", @"CoreLocation");
  off_1E94FFB90 = result;
  return result;
}

double sub_1A0857834()
{
  if (qword_1E94FFBC0 != -1) {
    dispatch_once(&qword_1E94FFBC0, &unk_1EF2BFF60);
  }
  return *(double *)&xmmword_1E94FFBB0;
}

void sub_1A085787C(uint64_t a1, void *a2, void *a3)
{
  uint64_t v22 = *MEMORY[0x1E4F143B8];
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = v6;
  if (v5 && !v6)
  {
    MEMORY[0x1A6227910](@"BlastDoorLocationCoordinate2D", @"BlastDoor");
    if (objc_opt_isKindOfClass()) {
      id v8 = v5;
    }
    else {
      id v8 = 0;
    }
    uint64_t v9 = v8;
    uint64_t v10 = (double (*)(uint64_t, double, double))off_1E94FFB90;
    [v9 latitude];
    double v12 = v11;
    uint64_t v13 = [v9 longitude];
    double v15 = v10(v13, v12, v14);
    uint64_t v16 = *(void *)(*(void *)(a1 + 40) + 8);
    *(double *)(v16 + 32) = v15;
    *(void *)(v16 + 40) = v17;
    if (IMOSLoggingEnabled())
    {
      uint64_t v18 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v18, OS_LOG_TYPE_INFO))
      {
        LOWORD(v20) = 0;
        _os_log_impl(&dword_1A0772000, v18, OS_LOG_TYPE_INFO, "Successfully extracted coordinate from data.", (uint8_t *)&v20, 2u);
      }
    }
LABEL_19:

    goto LABEL_20;
  }
  int v19 = IMOSLoggingEnabled();
  if (v7)
  {
    if (v19)
    {
      uint64_t v9 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
      {
        int v20 = 138412290;
        BOOL v21 = v7;
        _os_log_impl(&dword_1A0772000, v9, OS_LOG_TYPE_INFO, "Unable to extract coordinate from data. Error: %@.", (uint8_t *)&v20, 0xCu);
      }
      goto LABEL_19;
    }
  }
  else if (v19)
  {
    uint64_t v9 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
    {
      LOWORD(v20) = 0;
      _os_log_impl(&dword_1A0772000, v9, OS_LOG_TYPE_INFO, "No error but no result.", (uint8_t *)&v20, 2u);
    }
    goto LABEL_19;
  }
LABEL_20:
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));
}

void *sub_1A0857E90()
{
  os_log_t result = (void *)MEMORY[0x1A6227920]("CLLocationCoordinate2DMake", @"CoreLocation");
  off_1E94FFBA0 = result;
  return result;
}

void sub_1A08585DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

__n128 sub_1A08585FC()
{
  __n128 result = *(__n128 *)MEMORY[0x1A6227920]("kCLLocationCoordinate2DInvalid", @"CoreLocation");
  xmmword_1E94FFBB0 = (__int128)result;
  return result;
}

Class sub_1A0858634(uint64_t a1)
{
  sub_1A085868C();
  Class result = objc_getClass("UIColor");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = result;
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    qword_1E94FFBC8 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  }
  else
  {
    sub_1A09F247C();
    return (Class)sub_1A085868C();
  }
  return result;
}

uint64_t sub_1A085868C()
{
  uint64_t v0 = sub_1A08586E8();
  if (!v0)
  {
    uint64_t v2 = (void *)abort_report_np();
    free(v2);
  }
  return v0;
}

uint64_t sub_1A08586E8()
{
  if (!qword_1E94FFBD0) {
    qword_1E94FFBD0 = _sl_dlopen();
  }
  return qword_1E94FFBD0;
}

uint64_t sub_1A08587B8()
{
  uint64_t result = _sl_dlopen();
  qword_1E94FFBD0 = result;
  return result;
}

uint64_t sub_1A085882C()
{
  uint64_t v3 = 0;
  uint64_t v4 = &v3;
  uint64_t v5 = 0x2020000000;
  uint64_t v0 = qword_1E94FFBD8;
  uint64_t v6 = qword_1E94FFBD8;
  if (!qword_1E94FFBD8)
  {
    float v1 = (void *)sub_1A085868C();
    v4[3] = (uint64_t)dlsym(v1, "UIGraphicsBeginImageContextWithOptions");
    qword_1E94FFBD8 = v4[3];
    uint64_t v0 = v4[3];
  }
  _Block_object_dispose(&v3, 8);
  return v0;
}

void sub_1A0858904(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void *sub_1A085891C(uint64_t a1)
{
  uint64_t v2 = (void *)sub_1A085868C();
  uint64_t result = dlsym(v2, "UIGraphicsBeginImageContextWithOptions");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = result;
  qword_1E94FFBD8 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t sub_1A085896C()
{
  uint64_t v3 = 0;
  uint64_t v4 = &v3;
  uint64_t v5 = 0x2020000000;
  uint64_t v0 = qword_1E94FFBE0;
  uint64_t v6 = qword_1E94FFBE0;
  if (!qword_1E94FFBE0)
  {
    float v1 = (void *)sub_1A085868C();
    v4[3] = (uint64_t)dlsym(v1, "UIGraphicsGetImageFromCurrentImageContext");
    qword_1E94FFBE0 = v4[3];
    uint64_t v0 = v4[3];
  }
  _Block_object_dispose(&v3, 8);
  return v0;
}

void sub_1A0858A44(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void *sub_1A0858A5C(uint64_t a1)
{
  uint64_t v2 = (void *)sub_1A085868C();
  uint64_t result = dlsym(v2, "UIGraphicsGetImageFromCurrentImageContext");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = result;
  qword_1E94FFBE0 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t sub_1A0858AAC()
{
  uint64_t v3 = 0;
  uint64_t v4 = &v3;
  uint64_t v5 = 0x2020000000;
  uint64_t v0 = qword_1E94FFBE8;
  uint64_t v6 = qword_1E94FFBE8;
  if (!qword_1E94FFBE8)
  {
    float v1 = (void *)sub_1A085868C();
    v4[3] = (uint64_t)dlsym(v1, "UIRectFill");
    qword_1E94FFBE8 = v4[3];
    uint64_t v0 = v4[3];
  }
  _Block_object_dispose(&v3, 8);
  return v0;
}

void sub_1A0858B84(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void *sub_1A0858B9C(uint64_t a1)
{
  uint64_t v2 = (void *)sub_1A085868C();
  uint64_t result = dlsym(v2, "UIRectFill");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = result;
  qword_1E94FFBE8 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t sub_1A0858BEC()
{
  uint64_t v3 = 0;
  uint64_t v4 = &v3;
  uint64_t v5 = 0x2020000000;
  uint64_t v0 = qword_1E94FFBF0;
  uint64_t v6 = qword_1E94FFBF0;
  if (!qword_1E94FFBF0)
  {
    float v1 = (void *)sub_1A085868C();
    v4[3] = (uint64_t)dlsym(v1, "UIGraphicsEndImageContext");
    qword_1E94FFBF0 = v4[3];
    uint64_t v0 = v4[3];
  }
  _Block_object_dispose(&v3, 8);
  return v0;
}

void sub_1A0858CC4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void *sub_1A0858CDC(uint64_t a1)
{
  uint64_t v2 = (void *)sub_1A085868C();
  uint64_t result = dlsym(v2, "UIGraphicsEndImageContext");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = result;
  qword_1E94FFBF0 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t sub_1A085AA94()
{
  id v0 = objc_alloc_init((Class)objc_opt_class());
  uint64_t v1 = qword_1EB4A66C0;
  qword_1EB4A66C0 = (uint64_t)v0;

  return MEMORY[0x1F41817F8](v0, v1);
}

uint64_t sub_1A085ABF4()
{
  id v0 = objc_alloc_init(IMBatteryStatus);
  uint64_t v1 = qword_1EB4A5D70;
  qword_1EB4A5D70 = (uint64_t)v0;

  return MEMORY[0x1F41817F8](v0, v1);
}

uint64_t sub_1A085B234(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "compare:");
}

void sub_1A085C388(_Unwind_Exception *exc_buf, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,char a25)
{
  if (a2 == 1)
  {
    objc_begin_catch(exc_buf);
    objc_end_catch();
    JUMPOUT(0x1A085C2DCLL);
  }
  _Block_object_dispose(&a19, 8);
  _Block_object_dispose(&a25, 8);
  os_activity_scope_leave((os_activity_scope_state_t)(v25 - 160));
  _Unwind_Resume(exc_buf);
}

void sub_1A085C454(uint64_t a1, void *a2, void *a3)
{
  uint64_t v17 = *MEMORY[0x1E4F143B8];
  id v6 = a2;
  id v7 = a3;
  if (v6)
  {
    objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 32) + 8) + 40), a2);
    if (IMOSLoggingEnabled())
    {
      id v8 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
      {
        uint64_t v9 = @"NO";
        if (!v7) {
          uint64_t v9 = @"YES";
        }
        int v11 = 67109378;
        int v12 = 1;
        __int16 v13 = 2112;
        double v14 = v9;
        _os_log_impl(&dword_1A0772000, v8, OS_LOG_TYPE_INFO, "BlastDoor processing for preview type %u was successful (%@)", (uint8_t *)&v11, 0x12u);
      }
LABEL_13:
    }
  }
  else if (IMOSLoggingEnabled())
  {
    id v8 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
    {
      uint64_t v10 = @"NO";
      int v11 = 67109634;
      int v12 = 1;
      __int16 v13 = 2112;
      if (!v7) {
        uint64_t v10 = @"YES";
      }
      double v14 = v10;
      __int16 v15 = 2112;
      id v16 = v7;
      _os_log_impl(&dword_1A0772000, v8, OS_LOG_TYPE_INFO, "BlastDoor processing for preview type %u was successful (%@) with error (%@)", (uint8_t *)&v11, 0x1Cu);
    }
    goto LABEL_13;
  }
  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(*(void *)(*(void *)(a1 + 40) + 8) + 40));
}

void sub_1A085C9FC(_Unwind_Exception *a1, int a2)
{
  if (a2 == 1)
  {
    objc_begin_catch(a1);
    objc_end_catch();
    JUMPOUT(0x1A085C9A4);
  }
  _Unwind_Resume(a1);
}

uint64_t IMDidPerformInitialChatVocabularyUpdate()
{
  return IMGetDomainBoolForKeyWithDefaultValue();
}

uint64_t IMSetHavePerformedInitialChatVocabularyUpdate()
{
  return IMSetDomainBoolForKey();
}

uint64_t IMClearDidPerformInitialChatVocabularyUpdate()
{
  return IMSetDomainValueForKey();
}

uint64_t localizedTextForAppName(uint64_t a1)
{
  return [NSString localizedStringWithFormat:objc_msgSend((id)IMSharedUtilitiesFrameworkBundle(), "localizedStringForKey:value:table:", @"1 %@ Message", &stru_1EF2CAD28, @"IMSharedUtilities", a1];
}

void IMProcessPeerPaymentMessageWithPayloadData(uint64_t a1)
{
  uint64_t v10 = *MEMORY[0x1E4F143B8];
  uint64_t v7 = 0;
  uint64_t v1 = (void *)[objc_alloc(MEMORY[0x1E4F28DC0]) initForReadingFromData:a1 error:&v7];
  if (objc_opt_respondsToSelector())
  {
    [v1 _enableStrictSecureDecodingMode];
    if (IMOSLoggingEnabled())
    {
      uint64_t v2 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)CC_MD5_CTX buf = 0;
        _os_log_impl(&dword_1A0772000, v2, OS_LOG_TYPE_INFO, "strict-decoding 002 _enableStrictSecureDecodingMode called", buf, 2u);
      }
    }
  }
  uint64_t v3 = (void *)[v1 decodeObjectOfClasses:IMExtensionPayloadUnarchivingClasses() forKey:*MEMORY[0x1E4F284E8]];
  if (v7)
  {
    if (IMOSLoggingEnabled())
    {
      uint64_t v4 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)CC_MD5_CTX buf = 138412290;
        uint64_t v9 = v7;
        _os_log_impl(&dword_1A0772000, v4, OS_LOG_TYPE_INFO, "Failed to unarchive surf payment. Error: %@", buf, 0xCu);
      }
    }
  }

  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    uint64_t v5 = IMSanitizedURLForIMExtensionPayloadURLKey(v3);
    if (v5)
    {
      if (qword_1E94FFC08 != -1) {
        dispatch_once(&qword_1E94FFC08, &unk_1EF2BFB40);
      }
      if (off_1E94FFC00)
      {
        uint64_t v6 = IMSanitizedSessionIdentifierForIMExtensionPayloadUserSessionIdentifierKey(v3);
        off_1E94FFC00(v5, v6);
      }
    }
  }
}

void sub_1A085CCE0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, int buf, uint64_t a12)
{
  if (a2 == 1)
  {
    objc_begin_catch(exception_object);
    objc_end_catch();
    JUMPOUT(0x1A085CBB0);
  }
  _Unwind_Resume(exception_object);
}

uint64_t IMSanitizedURLForIMExtensionPayloadURLKey(void *a1)
{
  uint64_t v1 = [a1 objectForKey:@"URL"];
  objc_opt_class();
  if (objc_opt_isKindOfClass()) {
    return v1;
  }
  else {
    return 0;
  }
}

void *sub_1A085CED8()
{
  uint64_t result = (void *)MEMORY[0x1A6227920]("PKPeerPaymentProcessMessageWithDataURLAndSessionIdentifier", @"PassKitCore");
  off_1E94FFC00 = result;
  return result;
}

uint64_t IMSanitizedSessionIdentifierForIMExtensionPayloadUserSessionIdentifierKey(void *a1)
{
  uint64_t v1 = [a1 objectForKey:@"sessionIdentifier"];
  objc_opt_class();
  if (objc_opt_isKindOfClass()) {
    return v1;
  }
  else {
    return 0;
  }
}

void IMProcessPhotosExtensionMessageWithPayloadData(uint64_t a1)
{
  uint64_t v1 = IMPhotosShareURLFromPayloadData(a1);
  if (v1)
  {
    sub_1A085D2C8(v1);
  }
}

uint64_t IMPhotosShareURLFromPayloadData(uint64_t a1)
{
  uint64_t v9 = *MEMORY[0x1E4F143B8];
  uint64_t v6 = 0;
  uint64_t v1 = (void *)[objc_alloc(MEMORY[0x1E4F28DC0]) initForReadingFromData:a1 error:&v6];
  [v1 setRequiresSecureCoding:1];
  if (objc_opt_respondsToSelector())
  {
    [v1 _enableStrictSecureDecodingMode];
    if (IMOSLoggingEnabled())
    {
      uint64_t v2 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)CC_MD5_CTX buf = 0;
        _os_log_impl(&dword_1A0772000, v2, OS_LOG_TYPE_INFO, "strict-decoding 003 _enableStrictSecureDecodingMode called", buf, 2u);
      }
    }
  }
  uint64_t v3 = (void *)[v1 decodeObjectOfClasses:IMExtensionPayloadUnarchivingClasses() forKey:*MEMORY[0x1E4F284E8]];

  if (!v6)
  {
    objc_opt_class();
    if (objc_opt_isKindOfClass()) {
      return IMSanitizedURLForIMExtensionPayloadURLKey(v3);
    }
  }
  if (IMOSLoggingEnabled())
  {
    uint64_t v5 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)CC_MD5_CTX buf = 138412290;
      uint64_t v8 = v6;
      _os_log_impl(&dword_1A0772000, v5, OS_LOG_TYPE_INFO, "Failed to provide photos extension message to PLMessagesSPI. Error: %@", buf, 0xCu);
    }
  }
  return 0;
}

void sub_1A085D12C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, int buf, uint64_t a12)
{
  if (a2 == 1)
  {
    objc_begin_catch(exception_object);
    objc_end_catch();
    JUMPOUT(0x1A085D048);
  }
  _Unwind_Resume(exception_object);
}

void sub_1A085D2C8(uint64_t a1)
{
  if (qword_1E94FFC18 != -1) {
    dispatch_once(&qword_1E94FFC18, &unk_1EF2C0480);
  }
  uint64_t v2 = (void (*)(uint64_t, void *))off_1E94FFC10;
  if (off_1E94FFC10)
  {
    v2(a1, &unk_1EF2C0660);
  }
}

uint64_t IMDictionaryFromPayloadData(uint64_t a1)
{
  uint64_t v9 = *MEMORY[0x1E4F143B8];
  uint64_t v6 = 0;
  uint64_t v1 = (void *)[objc_alloc(MEMORY[0x1E4F28DC0]) initForReadingFromData:a1 error:&v6];
  [v1 setRequiresSecureCoding:1];
  if (objc_opt_respondsToSelector())
  {
    [v1 _enableStrictSecureDecodingMode];
    if (IMOSLoggingEnabled())
    {
      uint64_t v2 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)CC_MD5_CTX buf = 0;
        _os_log_impl(&dword_1A0772000, v2, OS_LOG_TYPE_INFO, "strict-decoding 003 _enableStrictSecureDecodingMode called", buf, 2u);
      }
    }
  }
  uint64_t v3 = [v1 decodeObjectOfClasses:IMExtensionPayloadUnarchivingClasses() forKey:*MEMORY[0x1E4F284E8]];

  if (v6 || (objc_opt_class(), (objc_opt_isKindOfClass() & 1) == 0))
  {
    if (IMOSLoggingEnabled())
    {
      uint64_t v4 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)CC_MD5_CTX buf = 138412290;
        uint64_t v8 = v6;
        _os_log_impl(&dword_1A0772000, v4, OS_LOG_TYPE_INFO, "Failed to provide payload data. error: %@", buf, 0xCu);
      }
    }
  }
  return v3;
}

void sub_1A085D4F0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, int buf, uint64_t a12)
{
  if (a2 == 1)
  {
    objc_begin_catch(exception_object);
    objc_end_catch();
    JUMPOUT(0x1A085D418);
  }
  _Unwind_Resume(exception_object);
}

uint64_t IMProcessRichLinkMessageWithBody()
{
  id v0 = (void *)JWDecodeCodableObjectWithStandardAllowlist();
  uint64_t v1 = *MEMORY[0x1E4F6C1D0];
  uint64_t v2 = [v0 length];

  return objc_msgSend(v0, "enumerateAttribute:inRange:options:usingBlock:", v1, 0, v2, 0, &unk_1EF2BFFA0);
}

void sub_1A085D6EC(uint64_t a1, void *a2)
{
  uint64_t v3 = (void *)sub_1A085DD8C();
  if ((sub_1A085DEBC(a2, @"photos", v3) & 1) != 0
    || (uint64_t v4 = (void *)sub_1A085DD8C(), sub_1A085DEBC(a2, @"photos_sharing", v4)))
  {
    sub_1A085D2C8((uint64_t)a2);
  }
}

uint64_t _IMShouldProcessURLForPhotosExtension(void *a1)
{
  uint64_t v2 = (void *)sub_1A085DD8C();

  return sub_1A085DEBC(a1, @"photos", v2);
}

void IMProcessGameCenterMessageWithPayloadData(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v22 = *MEMORY[0x1E4F143B8];
  uint64_t v15 = 0;
  uint64_t v5 = (void *)[objc_alloc(MEMORY[0x1E4F28DC0]) initForReadingFromData:a1 error:&v15];
  if (objc_opt_respondsToSelector())
  {
    [v5 _enableStrictSecureDecodingMode];
    if (IMOSLoggingEnabled())
    {
      uint64_t v6 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
      {
        LOWORD(buf) = 0;
        _os_log_impl(&dword_1A0772000, v6, OS_LOG_TYPE_INFO, "strict-decoding 002 _enableStrictSecureDecodingMode called", (uint8_t *)&buf, 2u);
      }
    }
  }
  uint64_t v7 = (void *)[v5 decodeObjectOfClasses:IMExtensionPayloadUnarchivingClasses() forKey:*MEMORY[0x1E4F284E8]];
  if (v15)
  {
    if (IMOSLoggingEnabled())
    {
      uint64_t v8 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
      {
        LODWORD(buf) = 138412290;
        *(void *)((char *)&buf + 4) = v15;
        _os_log_impl(&dword_1A0772000, v8, OS_LOG_TYPE_INFO, "Failed to unarchive game center message. Error: %@", (uint8_t *)&buf, 0xCu);
      }
    }
  }

  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) == 0)
  {
    if (!IMOSLoggingEnabled()) {
      return;
    }
    int v12 = OSLogHandleForIMFoundationCategory();
    if (!os_log_type_enabled(v12, OS_LOG_TYPE_INFO)) {
      return;
    }
    LOWORD(buf) = 0;
    __int16 v13 = "Failed to provide message payload to Game Center. Payload is not a dictionary.";
LABEL_24:
    _os_log_impl(&dword_1A0772000, v12, OS_LOG_TYPE_INFO, v13, (uint8_t *)&buf, 2u);
    return;
  }
  uint64_t v9 = IMSanitizedURLForIMExtensionPayloadURLKey(v7);
  if (!v9)
  {
    if (!IMOSLoggingEnabled()) {
      return;
    }
    int v12 = OSLogHandleForIMFoundationCategory();
    if (!os_log_type_enabled(v12, OS_LOG_TYPE_INFO)) {
      return;
    }
    LOWORD(buf) = 0;
    __int16 v13 = "Failed to provide message payload to Game Center. No payload URL.";
    goto LABEL_24;
  }
  *(void *)&long long buf = 0;
  *((void *)&buf + 1) = &buf;
  uint64_t v18 = 0x3052000000;
  int v19 = sub_1A077791C;
  int v20 = sub_1A077777C;
  uint64_t v10 = (void *)qword_1E94FFC20;
  uint64_t v21 = qword_1E94FFC20;
  if (!qword_1E94FFC20)
  {
    v16[0] = MEMORY[0x1E4F143A8];
    v16[1] = 3221225472;
    void v16[2] = sub_1A085E2E8;
    v16[3] = &unk_1E5A10130;
    void v16[4] = &buf;
    sub_1A085E2E8((uint64_t)v16);
    uint64_t v10 = *(void **)(*((void *)&buf + 1) + 40);
  }
  _Block_object_dispose(&buf, 8);
  if (objc_opt_respondsToSelector())
  {
    if (IMOSLoggingEnabled())
    {
      int v11 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
      {
        LOWORD(buf) = 0;
        _os_log_impl(&dword_1A0772000, v11, OS_LOG_TYPE_INFO, "Notifying GKDaemonProxy with URL, senderHandle, and contactID", (uint8_t *)&buf, 2u);
      }
    }
    objc_msgSend(v10, "messagesDidReceiveGameCenterURL:senderHandle:contactID:", v9, a2, a3, v15);
  }
  else if (objc_opt_respondsToSelector())
  {
    if (IMOSLoggingEnabled())
    {
      double v14 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_INFO))
      {
        LOWORD(buf) = 0;
        _os_log_impl(&dword_1A0772000, v14, OS_LOG_TYPE_INFO, "Notifying GKDaemonProxy with URL", (uint8_t *)&buf, 2u);
      }
    }
    objc_msgSend(v10, "messagesDidReceiveGameCenterURL:", v9, v15);
  }
}

void sub_1A085DB6C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int buf, uint64_t a16)
{
  if (a2 == 1)
  {
    objc_begin_catch(exception_object);
    objc_end_catch();
    JUMPOUT(0x1A085DB2CLL);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1A085DD8C()
{
  if (qword_1E94FE748 != -1) {
    dispatch_once(&qword_1E94FE748, &unk_1EF2C0140);
  }
  id v0 = (uint64_t (*)(void))off_1E94FE740;
  if (off_1E94FE740)
  {
    return v0();
  }
  else
  {
    if (IMOSLoggingEnabled())
    {
      uint64_t v2 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)uint64_t v3 = 0;
        _os_log_impl(&dword_1A0772000, v2, OS_LOG_TYPE_INFO, "Could not link CKValidSharingURLHostnames from CloudKit!", v3, 2u);
      }
    }
    return 0;
  }
}

void *sub_1A085DE6C()
{
  uint64_t result = (void *)MEMORY[0x1A6227920]("CKValidSharingURLHostnames", @"CloudKit");
  off_1E94FE740 = result;
  return result;
}

uint64_t _IMShouldProcessURLForPhotosExtensionAndSupportedHosts(void *a1, void *a2)
{
  return sub_1A085DEBC(a1, @"photos", a2);
}

uint64_t _IMShouldProcessURLForPhotosSharingAndSupportedHosts(void *a1, void *a2)
{
  return sub_1A085DEBC(a1, @"photos_sharing", a2);
}

uint64_t sub_1A085DEBC(void *a1, uint64_t a2, void *a3)
{
  uint64_t v20 = *MEMORY[0x1E4F143B8];
  if (!a1)
  {
    uint64_t result = IMOSLoggingEnabled();
    if (!result) {
      return result;
    }
    uint64_t v10 = OSLogHandleForIMFoundationCategory();
    uint64_t result = os_log_type_enabled(v10, OS_LOG_TYPE_INFO);
    if (!result) {
      return result;
    }
    *(_WORD *)long long buf = 0;
    _os_log_impl(&dword_1A0772000, v10, OS_LOG_TYPE_INFO, "_IsURLForServiceAndSupportedHosts called with nil URL", buf, 2u);
    return 0;
  }
  uint64_t v6 = objc_msgSend((id)objc_msgSend(a1, "host"), "lowercaseString");
  uint64_t v7 = (void *)[a1 pathComponents];
  if ((unint64_t)[v7 count] < 2) {
    uint64_t v8 = 0;
  }
  else {
    uint64_t v8 = objc_msgSend((id)objc_msgSend(v7, "objectAtIndex:", 1), "lowercaseString");
  }
  uint64_t result = [v8 isEqualToString:a2];
  if (!result) {
    return result;
  }
  long long v16 = 0u;
  long long v17 = 0u;
  long long v14 = 0u;
  long long v15 = 0u;
  uint64_t v11 = [a3 countByEnumeratingWithState:&v14 objects:v19 count:16];
  if (!v11) {
    return 0;
  }
  uint64_t v12 = *(void *)v15;
  while (2)
  {
    uint64_t v13 = 0;
    do
    {
      if (*(void *)v15 != v12) {
        objc_enumerationMutation(a3);
      }
      if ([v6 isEqualToString:*(void *)(*((void *)&v14 + 1) + 8 * v13)]) {
        return 1;
      }
      ++v13;
    }
    while (v11 != v13);
    uint64_t v11 = [a3 countByEnumeratingWithState:&v14 objects:v19 count:16];
    uint64_t result = 0;
    if (v11) {
      continue;
    }
    break;
  }
  return result;
}

void *sub_1A085E074()
{
  uint64_t result = (void *)MEMORY[0x1A6227920]("PLDonateMomentShareURL", @"PhotoLibraryServicesCore");
  off_1E94FFC10 = result;
  return result;
}

void sub_1A085E0A4(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *MEMORY[0x1E4F143B8];
  if (a2 && IMOSLoggingEnabled())
  {
    uint64_t v3 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
    {
      int v4 = 138412290;
      uint64_t v5 = a2;
      _os_log_impl(&dword_1A0772000, v3, OS_LOG_TYPE_INFO, "PLMessagesSPI PLDonateMomentShareURL returned error: %@", (uint8_t *)&v4, 0xCu);
    }
  }
}

uint64_t IMSanitizedCaptionForIMExtensionPayloadUserInfoKey(void *a1)
{
  uint64_t v1 = (void *)[a1 objectForKey:@"userInfo"];
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) == 0) {
    return 0;
  }
  uint64_t v2 = [v1 objectForKeyedSubscript:@"caption"];
  objc_opt_class();
  if (objc_opt_isKindOfClass()) {
    return v2;
  }
  else {
    return 0;
  }
}

uint64_t IMSanitizedAppNameForIMExtensionPayloadUserInfoKey(void *a1)
{
  uint64_t v1 = [a1 objectForKey:@"an"];
  objc_opt_class();
  if (objc_opt_isKindOfClass()) {
    return v1;
  }
  else {
    return 0;
  }
}

uint64_t IMSanitizedAppIconDataForIMExtensionPayloadAppIconKey(void *a1)
{
  uint64_t v1 = (void *)[a1 objectForKey:@"ai"];
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) == 0) {
    return 0;
  }

  return [v1 _FTOptionallyDecompressData];
}

Class sub_1A085E2E8(uint64_t a1)
{
  uint64_t v7 = *MEMORY[0x1E4F143B8];
  v4[0] = 0;
  if (!qword_1E94FFC28)
  {
    v4[1] = MEMORY[0x1E4F143A8];
    void v4[2] = 3221225472;
    v4[3] = sub_1A085E42C;
    void v4[4] = &unk_1E5A10168;
    void v4[5] = v4;
    long long v5 = xmmword_1E5A148E0;
    uint64_t v6 = 0;
    qword_1E94FFC28 = _sl_dlopen();
    uint64_t v2 = (void *)v4[0];
    if (!qword_1E94FFC28)
    {
      abort_report_np();
      goto LABEL_7;
    }
    if (v4[0]) {
      goto LABEL_8;
    }
  }
  while (1)
  {
    Class result = objc_getClass("GKDaemonProxy");
    *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 40) = result;
    if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 40)) {
      break;
    }
LABEL_7:
    uint64_t v2 = (void *)sub_1A09F24A4();
LABEL_8:
    free(v2);
  }
  qword_1E94FFC20 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 40);
  return result;
}

uint64_t sub_1A085E42C()
{
  uint64_t result = _sl_dlopen();
  qword_1E94FFC28 = result;
  return result;
}

void sub_1A085F01C(_Unwind_Exception *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, os_activity_scope_state_s state)
{
  if (a2 == 1)
  {
    objc_begin_catch(a1);
    objc_end_catch();
    JUMPOUT(0x1A085EF00);
  }
  os_activity_scope_leave(&state);
  _Unwind_Resume(a1);
}

void sub_1A085F818(uint64_t a1, void *a2, void *a3)
{
  id v10 = a2;
  id v5 = a3;
  if (!v10 || v5)
  {
    uint64_t v6 = (void **)(*(void *)(*(void *)(a1 + 48) + 8) + 40);
    uint64_t v7 = v5;
  }
  else
  {
    MEMORY[0x1A6227910](@"BlastDoorPassPreview", @"BlastDoor");
    if ((objc_opt_isKindOfClass() & 1) == 0) {
      goto LABEL_7;
    }
    uint64_t v6 = (void **)(*(void *)(*(void *)(a1 + 40) + 8) + 40);
    uint64_t v7 = v10;
  }
  id v8 = v7;
  uint64_t v9 = *v6;
  *uint64_t v6 = v8;

LABEL_7:
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));
}

uint64_t IMCSIndexReasonFromIMIndexReason(uint64_t result)
{
  if ((unint64_t)(result - 1001) >= 0xB)
  {
    switch(result)
    {
      case 1:
      case 2:
      case 5:
      case 6:
      case 7:
        return result;
      case 3:
        uint64_t result = 4;
        break;
      case 4:
        uint64_t result = 3;
        break;
      default:
        uint64_t result = result == 1000;
        break;
    }
  }
  return result;
}

__CFString *NSStringFromIMCoreSpotlightIndexReason(uint64_t a1)
{
  switch(a1)
  {
    case 1000:
      uint64_t result = @"IMCoreSpotlightIndexReasonIncomingMessage";
      break;
    case 1001:
      uint64_t result = @"IMCoreSpotlightIndexReasonCloudImport";
      break;
    case 1002:
      uint64_t result = @"IMCoreSpotlightIndexReasonJunkMigration";
      break;
    case 1003:
      uint64_t result = @"IMCoreSpotlightIndexReasonCollaboration";
      break;
    case 1004:
      uint64_t result = @"IMCoreSpotlightIndexReasonManual";
      break;
    case 1005:
      uint64_t result = @"IMCoreSpotlightIndexReasonRecentlyDeleted";
      break;
    case 1006:
      uint64_t result = @"IMCoreSpotlightIndexReasonPermanentDeletion";
      break;
    case 1007:
      uint64_t result = @"IMCoreSpotlightIndexReasonAttachmentsPurged";
      break;
    case 1008:
      uint64_t result = @"IMCoreSpotlightIndexReasonContactsChanged";
      break;
    case 1009:
      uint64_t result = @"IMCoreSpotlightIndexReasonAppDeleted";
      break;
    case 1010:
      uint64_t result = @"IMCoreSpotlightIndexReasonPreviewGeneration";
      break;
    case 1011:
      uint64_t result = @"IMCoreSpotlightIndexReasonSyndicationUpdate";
      break;
    default:
      switch(a1)
      {
        case 1:
          uint64_t result = @"IMCoreSpotlightIndexReasonNewContent";
          break;
        case 2:
          uint64_t result = @"IMCoreSpotlightIndexReasonMigration";
          break;
        case 3:
          uint64_t result = @"IMCoreSpotlightIndexReasonClientMigration";
          break;
        case 4:
          uint64_t result = @"IMCoreSpotlightIndexReasonClientVersionChange";
          break;
        case 5:
          uint64_t result = @"IMCoreSpotlightIndexReasonInconsistentState";
          break;
        case 6:
          uint64_t result = @"IMCoreSpotlightIndexReasonFullReindexRequest";
          break;
        case 7:
          uint64_t result = @"IMCoreSpotlightIndexReasonSelectiveReindexRequest";
          break;
        default:
          uint64_t result = @"IMCoreSpotlightIndexReasonDefault";
          break;
      }
      break;
  }
  return result;
}

uint64_t IMCoreSpotlightIndexReasonFromReindexReason(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) > 5) {
    return 0;
  }
  else {
    return qword_1A0A07B30[a1 - 1];
  }
}

uint64_t sub_1A085FC38()
{
  uint64_t result = IMGetCachedDomainBoolForKeyWithDefaultValue();
  byte_1E94FFC30 = result;
  return result;
}

uint64_t IMSharedUtilitiesProtoCloudKitEncryptedMessageP2ReadFrom(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  int v4 = (int *)MEMORY[0x1E4F940E0];
  id v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      unint64_t v17 = v10 >> 3;
      if ((v10 >> 3) == 3)
      {
        Data = (void *)PBReaderReadData();

        id v25 = Data;
        uint64_t v26 = 8;
      }
      else
      {
        if (v17 != 2)
        {
          if (v17 == 1)
          {
            char v18 = 0;
            unsigned int v19 = 0;
            uint64_t v20 = 0;
            *(unsigned char *)(a1 + 28) |= 1u;
            while (1)
            {
              uint64_t v21 = *v3;
              unint64_t v22 = *(void *)(a2 + v21);
              if (v22 == -1 || v22 >= *(void *)(a2 + *v4)) {
                break;
              }
              char v23 = *(unsigned char *)(*(void *)(a2 + *v7) + v22);
              *(void *)(a2 + v21) = v22 + 1;
              v20 |= (unint64_t)(v23 & 0x7F) << v18;
              if ((v23 & 0x80) == 0) {
                goto LABEL_34;
              }
              v18 += 7;
              BOOL v14 = v19++ >= 9;
              if (v14)
              {
                LODWORD(v20) = 0;
                goto LABEL_36;
              }
            }
            *(unsigned char *)(a2 + *v5) = 1;
LABEL_34:
            if (*(unsigned char *)(a2 + *v5)) {
              LODWORD(v20) = 0;
            }
LABEL_36:
            *(_DWORD *)(a1 + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = v20;
          }
          else
          {
            uint64_t result = PBReaderSkipValueWithTag();
            if (!result) {
              return result;
            }
          }
          continue;
        }
        uint64_t String = (void *)PBReaderReadString();

        id v25 = String;
        uint64_t v26 = 16;
      }
      *(void *)(a1 + v26) = v25;
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

void sub_1A0861F8C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, unsigned char *a5)
{
  id v8 = a2;
  if (v8)
  {
    id v9 = v8;
    objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 32) + 8) + 40), a2);
    id v8 = v9;
    *a5 = 1;
  }
}

void sub_1A086212C(uint64_t a1)
{
  uint64_t v2 = [IMGroupBlocklistManager alloc];
  id v5 = [*(id *)(a1 + 32) groupsBlocklistFilename];
  uint64_t v3 = [(IMGroupBlocklistManager *)v2 initFromFile:v5];
  int v4 = (void *)qword_1E94FFC38;
  qword_1E94FFC38 = v3;
}

void sub_1A0864454(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _updateSettings];
}

void sub_1A0864628(uint64_t a1)
{
  uint64_t v5 = *MEMORY[0x1E4F143B8];
  if (IMOSLoggingEnabled())
  {
    uint64_t v2 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
    {
      int v3 = *(unsigned __int8 *)(*(void *)(a1 + 32) + 12);
      v4[0] = 67109120;
      v4[1] = v3;
      _os_log_impl(&dword_1A0772000, v2, OS_LOG_TYPE_INFO, "checkSensitivePhotosAnalyticsEnabled returns: %d", (uint8_t *)v4, 8u);
    }
  }
  *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = *(unsigned char *)(*(void *)(a1 + 32) + 12);
}

intptr_t sub_1A0864A4C(uint64_t a1, char a2)
{
  *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = a2;
  return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

void sub_1A0864A60(uint64_t a1, int a2, int a3)
{
  uint64_t v17 = *MEMORY[0x1E4F143B8];
  if (IMOSLoggingEnabled())
  {
    uint64_t v6 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
    {
      uint64_t v7 = @"NO";
      if (a2) {
        id v8 = @"YES";
      }
      else {
        id v8 = @"NO";
      }
      if (a3) {
        uint64_t v7 = @"YES";
      }
      int v13 = 138412546;
      BOOL v14 = v8;
      __int16 v15 = 2112;
      long long v16 = v7;
      _os_log_impl(&dword_1A0772000, v6, OS_LOG_TYPE_INFO, "AnalysisEnabledChanged with commSafetyEnabled: %@, nudityDetectionEnabled: %@", (uint8_t *)&v13, 0x16u);
    }
  }
  id v9 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v11 = [WeakRetained _fetchEnablementGroup];
  id v12 = objc_loadWeakRetained(v9);
  [v12 setEnablementGroup:v11];
}

uint64_t sub_1A0864D1C()
{
  id v0 = +[IMDefaults sharedInstance];
  uint64_t v5 = [v0 getValueFromDomain:@"com.apple.messages.commsafety" forKey:@"kInternalEnablementGroupOverride"];

  uint64_t v1 = [v5 integerValue];
  if (v5) {
    BOOL v2 = v1 == 0;
  }
  else {
    BOOL v2 = 1;
  }
  char v3 = !v2;
  byte_1E94FFC40 = v3;

  return MEMORY[0x1F41817F8](v1, v5);
}

void sub_1A0864DEC()
{
  id v0 = +[IMDefaults sharedInstance];
  id v3 = [v0 getValueFromDomain:@"com.apple.messages.commsafety" forKey:@"kInternalEnablementGroupOverride"];

  uint64_t v1 = [v3 integerValue];
  uint64_t v2 = v1 == 1;
  if (v1 == 2) {
    uint64_t v2 = 2;
  }
  qword_1E94FFC48 = v2;
}

uint64_t sub_1A0864E7C(uint64_t a1)
{
  [*(id *)(a1 + 32) _updateSettings];
  uint64_t v2 = *(void **)(a1 + 32);

  return [v2 _connectToFamilyCircle:0];
}

void sub_1A0864FDC(uint64_t a1)
{
  uint64_t v1 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _updateSettings];

  id v3 = objc_loadWeakRetained(v1);
  [v3 _connectToFamilyCircle:0];
}

void *sub_1A0865108(uint64_t a1)
{
  uint64_t v2 = (void *)sub_1A07911C0();
  uint64_t result = dlsym(v2, "STSettingsDidChangeNotification");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = result;
  qword_1EB4A6148 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t sub_1A0865158()
{
  uint64_t result = _sl_dlopen();
  qword_1EB4A6130 = result;
  return result;
}

uint64_t sub_1A08651CC()
{
  uint64_t result = _sl_dlopen();
  qword_1EB4A6128 = result;
  return result;
}

BOOL IMFileTransferStateIsActive(uint64_t a1)
{
  return (unint64_t)(a1 - 1) < 4;
}

BOOL IMFileTransferStateIsNotActive(uint64_t a1)
{
  return (unint64_t)(a1 - 5) < 0xFFFFFFFFFFFFFFFCLL;
}

BOOL sub_1A0865390(void *a1, unint64_t a2, unsigned char *a3)
{
  uint64_t v25 = *MEMORY[0x1E4F143B8];
  if (a2 > 2) {
    return 1;
  }
  char v23 = 0;
  int v6 = objc_msgSend((id)objc_msgSend(MEMORY[0x1E4F28CB8], "defaultManager"), "fileExistsAtPath:isDirectory:", a1, &v23);
  if (objc_msgSend(a1, "rangeOfCharacterFromSet:", objc_msgSend(MEMORY[0x1E4F28B88], "invalidCharactersForFileTransferName")) != 0x7FFFFFFFFFFFFFFFLL)return 1; {
  if (v23)
  }
    int v7 = v6;
  else {
    int v7 = 0;
  }
  if (v7 != 1)
  {
    if (!v6) {
      return 0;
    }
    *a3 = 1;
    stat((const char *)objc_msgSend(a1, "fileSystemRepresentation", 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                      0,
                      0),
      &v18);
    return (v18.st_mode & 0xF000) == 40960;
  }
  id v8 = (void *)MEMORY[0x1A6228190]();
  id v9 = objc_msgSend((id)objc_msgSend(MEMORY[0x1E4F28CB8], "defaultManager"), "contentsOfDirectoryAtPath:error:", a1, 0);
  LOBYTE(v18.st_dev) = 0;
  long long v19 = 0u;
  long long v20 = 0u;
  long long v21 = 0u;
  long long v22 = 0u;
  uint64_t v10 = [v9 countByEnumeratingWithState:&v19 objects:v24 count:16];
  if (!v10)
  {
    return 1;
  }
  uint64_t v11 = v10;
  uint64_t v12 = *(void *)v20;
  unint64_t v13 = a2 + 1;
LABEL_9:
  uint64_t v14 = 0;
  while (1)
  {
    if (*(void *)v20 != v12) {
      objc_enumerationMutation(v9);
    }
    uint64_t v15 = sub_1A0865390([a1 stringByAppendingPathComponent:*(void *)(*((void *)&v19 + 1) + 8 * v14)], v13, &v18);
    if (v15) {
      break;
    }
    if (v11 == ++v14)
    {
      uint64_t v11 = [v9 countByEnumeratingWithState:&v19 objects:v24 count:16];
      if (v11) {
        goto LABEL_9;
      }
      break;
    }
  }
  uint64_t v16 = 1;
  if (LOBYTE(v18.st_dev))
  {
    *a3 = 1;
    uint64_t v16 = v15;
  }
  return v16;
}

__CFString *IMStringFromTransferState(uint64_t a1)
{
  if ((unint64_t)(a1 + 1) > 0xA) {
    return @"Unknown";
  }
  else {
    return off_1E5A14D68[a1 + 1];
  }
}

__CFString *IMStringFromCKSyncState(uint64_t a1)
{
  switch(a1)
  {
    case 0:
      uint64_t result = @"Not synced";
      break;
    case 1:
      uint64_t result = @"Synced";
      break;
    case 2:
      uint64_t result = @"Upload unsuccessful";
      break;
    case 3:
      uint64_t result = @"Needs upload";
      break;
    case 4:
      uint64_t result = @"Pending validation";
      break;
    case 5:
      uint64_t result = @"Download unsuccessful";
      break;
    default:
      if (a1 == 64) {
        uint64_t result = @"Unsyncable";
      }
      else {
        uint64_t result = @"Unknown";
      }
      break;
  }
  return result;
}

__CFString *IMStringFromIMFileTransferUpdateReason(unint64_t a1)
{
  if (a1 > 2) {
    return @"Unhandled New Case";
  }
  else {
    return off_1E5A14DC0[a1];
  }
}

void sub_1A0867B34(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  if (a2 == 1)
  {
    objc_begin_catch(exception_object);
    objc_end_catch();
    JUMPOUT(0x1A08679A4);
  }
  _Unwind_Resume(exception_object);
}

void *sub_1A08680DC(uint64_t a1)
{
  uint64_t v2 = (void *)sub_1A086812C();
  uint64_t result = dlsym(v2, "PFLivePhotoBundleExtension");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = result;
  qword_1EB4A5E68 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t sub_1A086812C()
{
  uint64_t v6 = *MEMORY[0x1E4F143B8];
  v3[0] = 0;
  if (!qword_1EB4A5E78)
  {
    v3[1] = MEMORY[0x1E4F143A8];
    void v3[2] = 3221225472;
    v3[3] = sub_1A086822C;
    void v3[4] = &unk_1E5A10168;
    void v3[5] = v3;
    long long v4 = xmmword_1E5A14D50;
    uint64_t v5 = 0;
    qword_1EB4A5E78 = _sl_dlopen();
  }
  uint64_t v0 = qword_1EB4A5E78;
  uint64_t v1 = (void *)v3[0];
  if (!qword_1EB4A5E78)
  {
    uint64_t v1 = (void *)abort_report_np();
    goto LABEL_7;
  }
  if (v3[0]) {
LABEL_7:
  }
    free(v1);
  return v0;
}

uint64_t sub_1A086822C()
{
  uint64_t result = _sl_dlopen();
  qword_1EB4A5E78 = result;
  return result;
}

IMMessageHistoryDateRangeSummary *sub_1A08682A0(uint64_t a1)
{
  sub_1A086812C();
  uint64_t result = (IMMessageHistoryDateRangeSummary *)objc_getClass("PFVideoComplement");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 40) = result;
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 40))
  {
    qword_1EB4A5DA0 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 40);
  }
  else
  {
    id v3 = (IMMessageHistoryDateRangeSummary *)sub_1A09F273C();
    return [(IMMessageHistoryDateRangeSummary *)v3 initWithDateInterval:v5 messages:v6];
  }
  return result;
}

id sub_1A08687F0(void *a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  if (v4)
  {
    id v5 = [a1 stringByDeletingPathExtension];
    id v6 = [a1 pathExtension];
    uint64_t v7 = [v6 length];
    id v8 = [v5 stringByAppendingString:v4];
    id v9 = v8;
    if (v7)
    {
      uint64_t v10 = [v8 stringByAppendingPathExtension:v6];

      id v9 = (id)v10;
    }
  }
  else
  {
    id v9 = a1;
  }

  return v9;
}

id sub_1A08688B4(void *a1, uint64_t a2, void *a3)
{
  uint64_t v14 = *MEMORY[0x1E4F143B8];
  id v4 = a3;
  id v5 = [a1 stringByAppendingPathComponent:v4];
  id v6 = [v5 stringByResolvingAndStandardizingPath];

  if ([v6 hasPrefix:a1])
  {
    id v7 = v6;
  }
  else
  {
    if (IMOSLoggingEnabled())
    {
      id v8 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
      {
        int v10 = 138412546;
        uint64_t v11 = a1;
        __int16 v12 = 2112;
        id v13 = v4;
        _os_log_impl(&dword_1A0772000, v8, OS_LOG_TYPE_INFO, "Attempted to create path that is not a subpath of self (%@): '%@'", (uint8_t *)&v10, 0x16u);
      }
    }
    id v7 = 0;
  }

  return v7;
}

id sub_1A08689FC(void *a1)
{
  uint64_t v1 = [a1 pathComponents];
  if ((unint64_t)[v1 count] < 2)
  {
    if ([v1 count] == 1)
    {
      uint64_t v2 = [v1 objectAtIndexedSubscript:0];
      id v3 = 0;
      if (v2) {
        goto LABEL_6;
      }
    }
    else
    {
      uint64_t v2 = 0;
      id v3 = 0;
    }
LABEL_9:
    id v4 = 0;
    goto LABEL_21;
  }
  uint64_t v2 = [v1 lastObject];
  id v3 = objc_msgSend(v1, "subarrayWithRange:", 0, objc_msgSend(v1, "count") - 1);
  if (!v2) {
    goto LABEL_9;
  }
LABEL_6:
  if ([v2 isEqualToString:@"/"])
  {
    id v4 = v2;
  }
  else
  {
    id v5 = v2;
    uint64_t v6 = [v5 cStringUsingEncoding:4];
    id v13 = 0;
    if (qword_1EB4A5FD8 != -1) {
      dispatch_once(&qword_1EB4A5FD8, &unk_1EF2BFBC0);
    }
    int v7 = off_1EB4A5FD0(v6, &v13);
    id v4 = 0;
    id v8 = v13;
    if (!v7 && v13)
    {
      id v4 = [NSString stringWithUTF8String:v13];
      id v8 = v13;
    }
    if (v8) {
      free(v8);
    }
    if (!v4)
    {
      uint64_t v2 = v5;
      goto LABEL_21;
    }
  }
  if (v3)
  {
    id v9 = [v3 arrayByAddingObject:v4];
    uint64_t v10 = [NSString pathWithComponents:v9];

    id v4 = (id)v10;
  }
LABEL_21:
  id v11 = v4;

  return v11;
}

void *sub_1A0868BD0()
{
  uint64_t result = (void *)MEMORY[0x1A6227920]("APFSMakeCompatibleName", @"APFS");
  off_1EB4A5FD0 = result;
  return result;
}

uint64_t IMLegacyCalculateFileSizeForPath(void *a1)
{
  v26[1] = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  uint64_t v2 = [MEMORY[0x1E4F28CB8] defaultManager];
  id v3 = [MEMORY[0x1E4F1CB10] fileURLWithPath:v1];
  uint64_t v4 = *MEMORY[0x1E4F1C5F8];
  v26[0] = *MEMORY[0x1E4F1C5F8];
  id v5 = [MEMORY[0x1E4F1C978] arrayWithObjects:v26 count:1];
  uint64_t v6 = [v2 enumeratorAtURL:v3 includingPropertiesForKeys:v5 options:0 errorHandler:&unk_1EF2BFFC0];

  long long v19 = 0u;
  long long v20 = 0u;
  long long v17 = 0u;
  long long v18 = 0u;
  id v7 = v6;
  uint64_t v8 = 0;
  uint64_t v9 = [v7 countByEnumeratingWithState:&v17 objects:v25 count:16];
  if (v9)
  {
    uint64_t v10 = *(void *)v18;
    do
    {
      uint64_t v11 = 0;
      do
      {
        if (*(void *)v18 != v10) {
          objc_enumerationMutation(v7);
        }
        __int16 v12 = *(void **)(*((void *)&v17 + 1) + 8 * v11);
        id v13 = (void *)MEMORY[0x1A6228190]();
        id v16 = 0;
        if ([v12 getResourceValue:&v16 forKey:v4 error:0]) {
          v8 += [v16 unsignedLongLongValue];
        }
        ++v11;
      }
      while (v9 != v11);
      uint64_t v9 = [v7 countByEnumeratingWithState:&v17 objects:v25 count:16];
    }
    while (v9);
  }

  if (IMOSLoggingEnabled())
  {
    uint64_t v14 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v14, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)long long buf = 138412546;
      id v22 = v1;
      __int16 v23 = 2048;
      uint64_t v24 = v8;
      _os_log_impl(&dword_1A0772000, v14, OS_LOG_TYPE_INFO, "_CalculateFileSizeForPath: calculated %@ to be %llu bytes", buf, 0x16u);
    }
  }
  return v8;
}

uint64_t sub_1A0868E50(uint64_t a1, void *a2, void *a3)
{
  uint64_t v12 = *MEMORY[0x1E4F143B8];
  id v4 = a2;
  id v5 = a3;
  if (IMOSLoggingEnabled())
  {
    uint64_t v6 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
    {
      int v8 = 138412546;
      id v9 = v4;
      __int16 v10 = 2112;
      id v11 = v5;
      _os_log_impl(&dword_1A0772000, v6, OS_LOG_TYPE_INFO, "Couldn't enumerate %@: %@", (uint8_t *)&v8, 0x16u);
    }
  }
  return 1;
}

unint64_t IMRoundFileSize(unint64_t a1)
{
  return vcvtd_n_u64_f64((double)(a1 >> 20), 0x14uLL);
}

uint64_t IMCalculateFileSizeForPath(void *a1, int a2)
{
  uint64_t v29 = *MEMORY[0x1E4F143B8];
  id v3 = a1;
  id v4 = v3;
  if (a2)
  {
    uint64_t v21 = 0;
    uint64_t v22 = 0;
    id v5 = v3;
    [v5 fileSystemRepresentation];
    if ((dirstat_np() & 0x80000000) != 0 && IMOSLoggingEnabled())
    {
      uint64_t v6 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
      {
        uint64_t v7 = [v5 fileSystemRepresentation];
        int v8 = __error();
        id v9 = strerror(*v8);
        *(_DWORD *)long long buf = 136315394;
        uint64_t v24 = v7;
        __int16 v25 = 2080;
        uint64_t v26 = v9;
        _os_log_impl(&dword_1A0772000, v6, OS_LOG_TYPE_INFO, "Directory sizing for %s failed with error %s", buf, 0x16u);
      }
    }
    uint64_t v10 = v21;
    if (IMOSLoggingEnabled())
    {
      id v11 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)long long buf = 138412802;
        uint64_t v24 = (uint64_t)v5;
        __int16 v25 = 2048;
        uint64_t v26 = (char *)v21;
        __int16 v27 = 2048;
        uint64_t v28 = v22;
        _os_log_impl(&dword_1A0772000, v11, OS_LOG_TYPE_INFO, "IMCalculateFileSizeForPath: calculated %@ to be %llu bytes for %llu descendents", buf, 0x20u);
      }
    }
  }
  else
  {
    uint64_t v12 = [MEMORY[0x1E4F1CB10] fileURLWithPath:v3];
    id v20 = 0;
    uint64_t v13 = *MEMORY[0x1E4F1C5F8];
    id v19 = 0;
    [v12 getResourceValue:&v20 forKey:v13 error:&v19];
    id v14 = v20;
    id v15 = v19;
    if (v14)
    {
      uint64_t v10 = [v14 unsignedLongLongValue];
      if (IMOSLoggingEnabled())
      {
        id v16 = OSLogHandleForIMFoundationCategory();
        if (os_log_type_enabled(v16, OS_LOG_TYPE_INFO))
        {
          *(_DWORD *)long long buf = 134217984;
          uint64_t v24 = v10;
          _os_log_impl(&dword_1A0772000, v16, OS_LOG_TYPE_INFO, "Calculated file size value of %llu", buf, 0xCu);
        }
      }
    }
    else
    {
      if (IMOSLoggingEnabled())
      {
        long long v17 = OSLogHandleForIMFoundationCategory();
        if (os_log_type_enabled(v17, OS_LOG_TYPE_INFO))
        {
          *(_DWORD *)long long buf = 138412290;
          uint64_t v24 = (uint64_t)v15;
          _os_log_impl(&dword_1A0772000, v17, OS_LOG_TYPE_INFO, "Received error when calculating file size %@", buf, 0xCu);
        }
      }
      uint64_t v10 = 0;
    }
  }
  return v10;
}

uint64_t sub_1A0869290(void *a1, uint64_t a2, uint64_t a3, void *a4, void *a5)
{
  uint64_t v32 = *MEMORY[0x1E4F143B8];
  id v8 = a4;
  id v9 = [MEMORY[0x1E4F1CB10] fileURLWithPath:v8];
  uint64_t v10 = [v9 path];
  LOBYTE(a1) = [a1 fileExistsAtPath:v10];

  if (a1)
  {
    id v11 = [NSNumber numberWithBool:a3];
    uint64_t v12 = *MEMORY[0x1E4F1C630];
    id v25 = 0;
    char v13 = [v9 setResourceValue:v11 forKey:v12 error:&v25];
    id v14 = v25;

    if (v13)
    {
      if (IMOSLoggingEnabled())
      {
        id v15 = OSLogHandleForIMFoundationCategory();
        if (os_log_type_enabled(v15, OS_LOG_TYPE_INFO))
        {
          uint64_t v16 = [v9 path];
          long long v17 = (void *)v16;
          long long v18 = @"NO";
          if (a3) {
            long long v18 = @"YES";
          }
          *(_DWORD *)long long buf = 138412546;
          __int16 v27 = v18;
          __int16 v28 = 2112;
          uint64_t v29 = v16;
          _os_log_impl(&dword_1A0772000, v15, OS_LOG_TYPE_INFO, "Set iCloudBackupAttribute to %@ on '%@' ok", buf, 0x16u);
        }
      }
      uint64_t v19 = 1;
      goto LABEL_21;
    }
  }
  else
  {
    id v14 = [MEMORY[0x1E4F28C58] errorWithDomain:*MEMORY[0x1E4F281F8] code:4 userInfo:0];
  }
  if (a5) {
    *a5 = v14;
  }
  if (IMOSLoggingEnabled())
  {
    id v20 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v20, OS_LOG_TYPE_INFO))
    {
      if (a3) {
        uint64_t v21 = @"YES";
      }
      else {
        uint64_t v21 = @"NO";
      }
      id v22 = [v9 path];
      __int16 v23 = [v14 localizedDescription];
      *(_DWORD *)long long buf = 138412802;
      __int16 v27 = v21;
      __int16 v28 = 2112;
      uint64_t v29 = (uint64_t)v22;
      __int16 v30 = 2112;
      BOOL v31 = v23;
      _os_log_impl(&dword_1A0772000, v20, OS_LOG_TYPE_INFO, "Failed to set iCloudBackupAttribute to %@ on '%@'. Error = '%@'", buf, 0x20u);
    }
  }
  uint64_t v19 = 0;
LABEL_21:

  return v19;
}

uint64_t sub_1A0869574(void *a1, uint64_t a2, unsigned int a3, void *a4, void *a5)
{
  uint64_t v42 = *MEMORY[0x1E4F143B8];
  id v29 = a4;
  if (IMOSLoggingEnabled())
  {
    uint64_t v6 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
    {
      uint64_t v7 = @"NO";
      if (a3) {
        uint64_t v7 = @"YES";
      }
      *(_DWORD *)long long buf = 138412546;
      id v39 = v29;
      __int16 v40 = 2112;
      uint64_t v41 = v7;
      _os_log_impl(&dword_1A0772000, v6, OS_LOG_TYPE_INFO, "Setting iCloudBackupAttribute for all files and dirs at '%@' to %@", buf, 0x16u);
    }
  }
  id v36 = 0;
  int v8 = objc_msgSend(a1, "__im_setiCloudBackupAttribute:onItemAtPath:error:", a3, v29, &v36);
  id v9 = v36;
  id v10 = v9;
  buf[0] = 0;
  if (v8)
  {
    int v11 = [a1 fileExistsAtPath:v29 isDirectory:buf];
    if (buf[0]) {
      int v12 = v11;
    }
    else {
      int v12 = 0;
    }
    if (v12 != 1)
    {
      uint64_t v24 = 1;
      goto LABEL_35;
    }
    id v35 = v10;
    uint64_t v26 = [a1 subpathsOfDirectoryAtPath:v29 error:&v35];
    id v13 = v35;

    id v14 = v26;
    if (v26)
    {
      long long v33 = 0u;
      long long v34 = 0u;
      long long v31 = 0u;
      long long v32 = 0u;
      id v15 = v26;
      uint64_t v16 = [v15 countByEnumeratingWithState:&v31 objects:v37 count:16];
      if (v16)
      {
        uint64_t v17 = *(void *)v32;
        while (2)
        {
          for (uint64_t i = 0; i != v16; ++i)
          {
            if (*(void *)v32 != v17) {
              objc_enumerationMutation(v15);
            }
            uint64_t v19 = *(void **)(*((void *)&v31 + 1) + 8 * i);
            id v20 = (void *)MEMORY[0x1A6228190]();
            if ([v19 characterAtIndex:0] == 46)
            {
            }
            else
            {
              uint64_t v21 = [v29 stringByAppendingPathComponent:v19];
              id v30 = v13;
              int v22 = objc_msgSend(a1, "__im_setiCloudBackupAttribute:onItemAtPath:error:", a3, v21, &v30);
              id v23 = v30;

              if (!v22)
              {
                uint64_t v24 = 0;
                id v13 = v23;
                goto LABEL_29;
              }
              id v13 = v23;
            }
          }
          uint64_t v16 = [v15 countByEnumeratingWithState:&v31 objects:v37 count:16];
          if (v16) {
            continue;
          }
          break;
        }
      }
      uint64_t v24 = 1;
LABEL_29:

      id v14 = v26;
    }
    else
    {
      uint64_t v24 = 0;
    }
  }
  else
  {
    uint64_t v24 = 0;
    id v13 = v9;
  }
  if (!a5 || (v24 & 1) != 0)
  {
    id v10 = v13;
  }
  else
  {
    id v10 = v13;
    uint64_t v24 = 0;
    *a5 = v10;
  }
LABEL_35:

  return v24;
}

uint64_t sub_1A0869898(void *a1, uint64_t a2, void *a3, void *a4, void *a5, void *a6)
{
  uint64_t v43 = *MEMORY[0x1E4F143B8];
  id v10 = a3;
  id v32 = [MEMORY[0x1E4F1CA48] array];
  id v33 = [MEMORY[0x1E4F1CA48] array];
  char v41 = 0;
  id v40 = 0;
  int v11 = objc_msgSend(a1, "__im_getiCloudBackupAttributeForItemAtPath:attributeValue:error:", v10, &v41, &v40);
  id v12 = v40;
  id v13 = v12;
  uint64_t v14 = 0;
  if (v11 && !v12)
  {
    if (v41) {
      [v32 addObject:v10];
    }
    [v33 addObject:v10];
    id v39 = 0;
    id v15 = [a1 subpathsOfDirectoryAtPath:v10 error:&v39];
    id v16 = v39;
    id v13 = v16;
    uint64_t v14 = 0;
    if (!v15 || v16) {
      goto LABEL_32;
    }
    long long v37 = 0u;
    long long v38 = 0u;
    long long v35 = 0u;
    long long v36 = 0u;
    id v17 = v15;
    uint64_t v18 = [v17 countByEnumeratingWithState:&v35 objects:v42 count:16];
    if (v18)
    {
      uint64_t v19 = v18;
      __int16 v28 = v15;
      id v29 = a4;
      id v30 = a5;
      long long v31 = a6;
      uint64_t v20 = *(void *)v36;
      LOBYTE(v21) = 1;
LABEL_9:
      uint64_t v22 = 0;
      while (1)
      {
        if (*(void *)v36 != v20) {
          objc_enumerationMutation(v17);
        }
        id v23 = *(void **)(*((void *)&v35 + 1) + 8 * v22);
        if ([v23 characterAtIndex:0] != 46)
        {
          uint64_t v24 = [v10 stringByAppendingPathComponent:v23];
          [v33 addObject:v24];
          id v34 = 0;
          int v21 = objc_msgSend(a1, "__im_getiCloudBackupAttributeForItemAtPath:attributeValue:error:", v24, &v41, &v34);
          id v13 = v34;
          if (v13) {
            int v25 = 0;
          }
          else {
            int v25 = v21;
          }
          if (v25 == 1 && v41 != 0) {
            [v32 addObject:v24];
          }

          if (!v25) {
            break;
          }
        }
        if (v19 == ++v22)
        {
          uint64_t v19 = [v17 countByEnumeratingWithState:&v35 objects:v42 count:16];
          if (v19) {
            goto LABEL_9;
          }
          id v13 = 0;
          break;
        }
      }

      a5 = v30;
      a6 = v31;
      a4 = v29;
      if ((v21 & 1) == 0)
      {
        uint64_t v14 = 0;
        id v15 = v28;
LABEL_32:

        goto LABEL_33;
      }
      id v15 = v28;
      if (!v29)
      {
LABEL_29:
        if (a5) {
          *a5 = v32;
        }
        uint64_t v14 = 1;
        goto LABEL_32;
      }
    }
    else
    {

      id v13 = 0;
      if (!a4) {
        goto LABEL_29;
      }
    }
    *a4 = v33;
    goto LABEL_29;
  }
LABEL_33:
  if (a6 && (v14 & 1) == 0) {
    *a6 = v13;
  }

  return v14;
}

uint64_t sub_1A0869B70(uint64_t a1, uint64_t a2, void *a3)
{
  id v3 = a3;
  id v4 = [v3 pathComponents];
  int v5 = [v3 hasPrefix:@"/Volumes"];

  if (!v5) {
    goto LABEL_4;
  }
  if ((unint64_t)[v4 count] < 3) {
    goto LABEL_4;
  }
  uint64_t v6 = [v4 objectAtIndex:2];
  uint64_t v7 = [@"/Volumes" stringByAppendingPathComponent:v6];

  int v8 = [MEMORY[0x1E4F28CB8] defaultManager];
  int v9 = [v8 fileExistsAtPath:v7];

  if (!v9) {
    uint64_t v10 = 1;
  }
  else {
LABEL_4:
  }
    uint64_t v10 = 0;

  return v10;
}

uint64_t sub_1A0869C44(void *a1, uint64_t a2, void *a3, unsigned int a4)
{
  uint64_t v6 = [a3 stringByResolvingAndStandardizingPath];
  if (objc_msgSend(a1, "__im_isPathOnMissingVolume:", v6))
  {
    uint64_t v7 = 0;
  }
  else
  {
    id v8 = objc_alloc(MEMORY[0x1E4F1C9E8]);
    int v9 = [NSNumber numberWithUnsignedLong:a4];
    uint64_t v10 = objc_msgSend(v8, "initWithObjectsAndKeys:", v9, *MEMORY[0x1E4F28330], 0);

    uint64_t v7 = [a1 createDirectoryAtPath:v6 withIntermediateDirectories:1 attributes:v10 error:0];
  }

  return v7;
}

id sub_1A0869D14(void *a1, uint64_t a2, void *a3)
{
  id v4 = NSString;
  id v5 = a3;
  uint64_t v6 = [v4 stringGUID];
  uint64_t v7 = IMSafeTemporaryDirectory();
  id v8 = [v7 path];
  int v9 = [a1 createUniqueDirectoryWithName:v6 atPath:v8 ofType:0];

  uint64_t v10 = [v5 lastPathComponent];
  int v11 = [v10 stringByDeletingPathExtension];
  id v12 = [v5 pathExtension];

  id v13 = [a1 uniqueFilename:v11 atPath:v9 ofType:v12];

  if (v13)
  {
    uint64_t v14 = [MEMORY[0x1E4F1CB10] fileURLWithPath:v13];
  }
  else
  {
    uint64_t v14 = 0;
  }

  return v14;
}

id sub_1A0869E3C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v20 = *MEMORY[0x1E4F143B8];
  id v3 = a3;
  if (v3)
  {
    id v4 = [MEMORY[0x1E4F28CB8] defaultManager];
    id v5 = [v3 lastPathComponent];
    uint64_t v6 = objc_msgSend(v4, "im_randomTemporaryFileURLWithFileName:", v5);

    if (IMOSLoggingEnabled())
    {
      uint64_t v7 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)long long buf = 138412546;
        id v17 = v3;
        __int16 v18 = 2112;
        uint64_t v19 = v6;
        _os_log_impl(&dword_1A0772000, v7, OS_LOG_TYPE_INFO, "Attempting to copy URL %@ to new URL %@", buf, 0x16u);
      }
    }
    if (v6)
    {
      id v8 = [MEMORY[0x1E4F28CB8] defaultManager];
      id v15 = 0;
      char v9 = [v8 copyItemAtURL:v3 toURL:v6 error:&v15];
      id v10 = v15;

      if (v9)
      {
        id v11 = v6;
LABEL_20:

        goto LABEL_21;
      }
    }
    else
    {
      id v10 = 0;
    }
    if (IMOSLoggingEnabled())
    {
      id v13 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v13, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)long long buf = 138412290;
        id v17 = v10;
        _os_log_impl(&dword_1A0772000, v13, OS_LOG_TYPE_INFO, "Copy failed with error %@", buf, 0xCu);
      }
    }
    id v11 = 0;
    goto LABEL_20;
  }
  if (IMOSLoggingEnabled())
  {
    id v12 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v12, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)long long buf = 0;
      _os_log_impl(&dword_1A0772000, v12, OS_LOG_TYPE_INFO, "Empty URL passed in for link generation", buf, 2u);
    }
  }
  id v11 = 0;
LABEL_21:

  return v11;
}

id sub_1A086A0C4(uint64_t a1, uint64_t a2, void *a3)
{
  id v3 = (void *)MEMORY[0x1E4F28B88];
  id v4 = a3;
  id v5 = [v3 URLPathAllowedCharacterSet];
  uint64_t v6 = [v4 stringByAddingPercentEncodingWithAllowedCharacters:v5];

  uint64_t v7 = [v6 stringByReplacingOccurrencesOfString:@"%" withString:@"-"];

  id v8 = [NSString stringWithFormat:@"adaptive-image-glyph-%@.heic", v7];
  char v9 = IMSafeTemporaryDirectory();
  id v10 = [v9 URLByAppendingPathComponent:@"adaptive-image-glyphs" isDirectory:1];
  id v11 = [v10 URLByAppendingPathComponent:v8 isDirectory:0];

  return v11;
}

void sub_1A086A9FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1A086AA14(uint64_t result)
{
  *(unsigned char *)(*(void *)(*(void *)(result + 32) + 8) + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = 1;
  return result;
}

void *IMLoggingLevelFromString(uint64_t a1)
{
  if (qword_1E94FFC60 != -1) {
    dispatch_once(&qword_1E94FFC60, &unk_1EF2C02C0);
  }
  uint64_t result = (void *)[(id)qword_1E94FFC58 objectForKey:a1];
  if (result) {
    LOBYTE(result) = [result integerValue];
  }
  return (void *)result;
}

void sub_1A086AA8C()
{
  qword_1E94FFC58 = (uint64_t)&unk_1EF305F30;
}

__CFString *IMStringFromLoggingLevel(int a1)
{
  if (a1 <= 1)
  {
    if (!a1) {
      return @"OS_LOG_TYPE_DEFAULT";
    }
    if (a1 == 1) {
      return @"OS_LOG_TYPE_INFO";
    }
  }
  else
  {
    switch(a1)
    {
      case 2:
        return @"OS_LOG_TYPE_DEBUG";
      case 16:
        return @"OS_LOG_TYPE_ERROR";
      case 17:
        return @"OS_LOG_TYPE_FAULT";
    }
  }
  return 0;
}

void *IMLogCategoryFromFilePath(const char *a1)
{
  size_t v2 = strnlen(a1, 0x400uLL);
  if ((uint64_t)(v2 - 1) >= 0)
  {
    size_t v3 = v2;
    size_t v4 = v2;
    do
    {
      uint64_t v5 = v3 - 1;
      int v6 = a1[v3 - 1];
      size_t v7 = v3 - 1;
      if (v6 != 46)
      {
        if (v6 == 47)
        {
          size_t v8 = v4 - v3;
          goto LABEL_9;
        }
        size_t v7 = v4;
      }
      --v3;
      size_t v4 = v7;
    }
    while (v5 > 0);
  }
  size_t v8 = 0;
  size_t v3 = 0;
LABEL_9:
  char v9 = malloc_type_malloc(v8 + 1, 0x46511449uLL);
  memcpy(v9, &a1[v3], v8);
  *((unsigned char *)v9 + v_Block_object_dispose(&a9, 8) = 0;
  return v9;
}

void sub_1A086C4D0()
{
  uint64_t v9 = *MEMORY[0x1E4F143B8];
  uint64_t v0 = (void *)MEMORY[0x1E4F1CAD0];
  uint64_t v4 = objc_opt_class();
  uint64_t v5 = objc_opt_class();
  uint64_t v6 = objc_opt_class();
  uint64_t v7 = objc_opt_class();
  uint64_t v8 = objc_opt_class();
  id v1 = [MEMORY[0x1E4F1C978] arrayWithObjects:&v4 count:5];
  uint64_t v2 = objc_msgSend(v0, "setWithArray:", v1, v4, v5, v6, v7);
  size_t v3 = (void *)qword_1E94FFC68;
  qword_1E94FFC68 = v2;
}

void sub_1A086C88C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,char a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,char a41)
{
}

void sub_1A086C8E0(void *a1, void *a2, uint64_t a3, unsigned char *a4)
{
  id v10 = a2;
  BOOL v8 = [v10 messagePartRange] == a1[8] && v7 == a1[9];
  uint64_t v9 = v10;
  if (v8)
  {
    if ([v10 _canBeReplacedByRange:a1[4]])
    {
      [*(id *)(*(void *)(a1[5] + 8) + 40) replaceObjectAtIndex:a3 withObject:a1[4]];
      *(unsigned char *)(*(void *)(a1[6] + 8) + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = 1;
    }
    *a4 = 1;
    *(unsigned char *)(*(void *)(a1[7] + 8) + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = 0;
    uint64_t v9 = v10;
  }
}

void sub_1A086D810(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, v9, OS_LOG_TYPE_ERROR, a4, &a9, 0x20u);
}

void sub_1A086D884()
{
  if (!qword_1E94FEFE0)
  {
    uint64_t v0 = (void *)MEMORY[0x1A6227920]("AKUserInfoChangedNotification", @"AuthKit");
    id v1 = v0 ? (void *)*v0 : 0;
    objc_storeStrong((id *)&qword_1E94FEFE0, v1);
    if (!qword_1E94FEFE0)
    {
      if (IMOSLoggingEnabled())
      {
        uint64_t v2 = OSLogHandleForIMFoundationCategory();
        if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
        {
          *(_WORD *)size_t v3 = 0;
          _os_log_impl(&dword_1A0772000, v2, OS_LOG_TYPE_INFO, "Failed to weak link AKUserInfoChangedNotification from AuthKit.", v3, 2u);
        }
      }
    }
  }
}

void sub_1A086D9C8()
{
  if (!qword_1E94FFC78)
  {
    uint64_t v0 = (void *)MEMORY[0x1A6227920]("AKUserInfoChangedAltDSIDKey", @"AuthKit");
    id v1 = v0 ? (void *)*v0 : 0;
    objc_storeStrong((id *)&qword_1E94FFC78, v1);
    if (!qword_1E94FFC78)
    {
      if (IMOSLoggingEnabled())
      {
        uint64_t v2 = OSLogHandleForIMFoundationCategory();
        if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
        {
          *(_WORD *)size_t v3 = 0;
          _os_log_impl(&dword_1A0772000, v2, OS_LOG_TYPE_INFO, "Failed to weak link AKUserInfoChangedAltDSIDKey from AuthKit.", v3, 2u);
        }
      }
    }
  }
}

void sub_1A086DB0C()
{
  if (!qword_1E94FFC88)
  {
    uint64_t v0 = (void *)MEMORY[0x1A6227920]("AKUserInfoChangedSecurityLevelKey", @"AuthKit");
    id v1 = v0 ? (void *)*v0 : 0;
    objc_storeStrong((id *)&qword_1E94FFC88, v1);
    if (!qword_1E94FFC88)
    {
      if (IMOSLoggingEnabled())
      {
        uint64_t v2 = OSLogHandleForIMFoundationCategory();
        if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
        {
          *(_WORD *)size_t v3 = 0;
          _os_log_impl(&dword_1A0772000, v2, OS_LOG_TYPE_INFO, "Failed to weak link AKUserInfoChangedSecurityLevelKey from AuthKit.", v3, 2u);
        }
      }
    }
  }
}

id SharedUtilitiesHelloWorldClass.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

id SharedUtilitiesHelloWorldClass.init()()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SharedUtilitiesHelloWorldClass();
  return objc_msgSendSuper2(&v2, sel_init);
}

uint64_t type metadata accessor for SharedUtilitiesHelloWorldClass()
{
  return self;
}

id SharedUtilitiesHelloWorldClass.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SharedUtilitiesHelloWorldClass();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t method lookup function for SharedUtilitiesHelloWorldClass(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SharedUtilitiesHelloWorldClass);
}

uint64_t dispatch thunk of SharedUtilitiesHelloWorldClass.printGreeting()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x50))();
}

ValueMetadata *type metadata accessor for SharedUtilitiesHelloWorld()
{
  return &type metadata for SharedUtilitiesHelloWorld;
}

void type metadata accessor for SyncedSettingsKey(uint64_t a1)
{
}

void type metadata accessor for IMChatStyle(uint64_t a1)
{
}

void type metadata accessor for MessagesClientCapabilities(uint64_t a1)
{
}

void type metadata accessor for Key(uint64_t a1)
{
}

uint64_t sub_1A086DDB8()
{
  return sub_1A09F35F8();
}

uint64_t sub_1A086DE04()
{
  return sub_1A09F35E8();
}

uint64_t sub_1A086DE5C()
{
  return sub_1A09F4C88();
}

uint64_t sub_1A086DEC4(uint64_t a1, uint64_t a2)
{
  return sub_1A086E024(a1, a2, MEMORY[0x1F418C118]);
}

uint64_t sub_1A086DED0(uint64_t a1, id *a2)
{
  uint64_t result = sub_1A09F3DF8();
  *a2 = 0;
  return result;
}

uint64_t sub_1A086DF48(uint64_t a1, id *a2)
{
  char v3 = sub_1A09F3E08();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_1A086DFC8@<X0>(uint64_t *a1@<X8>)
{
  sub_1A09F3E18();
  uint64_t v2 = sub_1A09F3DE8();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_1A086E00C(uint64_t a1, uint64_t a2)
{
  return sub_1A086E024(a1, a2, MEMORY[0x1E4FBB198]);
}

uint64_t sub_1A086E024(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4 = sub_1A09F3E18();
  uint64_t v5 = a3(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_1A086E068()
{
  sub_1A09F3E18();
  sub_1A09F3DA8();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1A086E0BC()
{
  sub_1A09F3E18();
  sub_1A09F4C48();
  sub_1A09F3DA8();
  uint64_t v0 = sub_1A09F4C88();
  swift_bridgeObjectRelease();
  return v0;
}

unsigned __int8 *sub_1A086E130@<X0>(unsigned __int8 *result@<X0>, _WORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

void sub_1A086E140(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t sub_1A086E14C()
{
  return sub_1A09F35D8() & 1;
}

uint64_t sub_1A086E1B0()
{
  uint64_t v0 = sub_1A09F3E18();
  uint64_t v2 = v1;
  if (v0 == sub_1A09F3E18() && v2 == v3) {
    char v5 = 1;
  }
  else {
    char v5 = sub_1A09F4B28();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t sub_1A086E23C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_1A09F3DE8();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_1A086E284@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1A09F3E18();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1A086E2B0(uint64_t a1)
{
  uint64_t v2 = sub_1A086E3FC((unint64_t *)&qword_1E94F87D8, type metadata accessor for Key);
  uint64_t v3 = sub_1A086E3FC(&qword_1E94F87E0, type metadata accessor for Key);
  uint64_t v4 = MEMORY[0x1E4FBB1B0];

  return MEMORY[0x1F4185450](a1, v2, v3, v4);
}

uint64_t sub_1A086E36C()
{
  return sub_1A086E3FC(&qword_1E94F87C0, type metadata accessor for Key);
}

uint64_t sub_1A086E3B4()
{
  return sub_1A086E3FC(&qword_1E94F87C8, type metadata accessor for Key);
}

uint64_t sub_1A086E3FC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1A086E444()
{
  return sub_1A086E3FC(&qword_1E94F87D0, type metadata accessor for Key);
}

void type metadata accessor for CFString(uint64_t a1)
{
}

__n128 initializeWithTake for RemoteIntentGroupPhotoUpdateUserInfo(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

uint64_t sub_1A086E4AC(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_1A086E4CC(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + _Block_object_dispose(&a9, 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 16) = v3;
  return result;
}

void type metadata accessor for CGSize(uint64_t a1)
{
}

uint64_t sub_1A086E508()
{
  return sub_1A086E3FC(&qword_1E94F8800, type metadata accessor for CFString);
}

uint64_t sub_1A086E550()
{
  return sub_1A086E3FC(&qword_1E94F8808, type metadata accessor for CFString);
}

uint64_t initializeBufferWithCopyOfBuffer for GroupPhotoUpdatedBroadcast(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t destroy for GroupPhotoUpdatedBroadcast()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for GroupPhotoUpdatedBroadcast(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + _Block_object_dispose(&a9, 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for GroupPhotoUpdatedBroadcast(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + _Block_object_dispose(&a9, 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for GroupPhotoUpdatedBroadcast(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for GroupPhotoUpdatedBroadcast(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + _Block_object_dispose(&a9, 8) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for GroupPhotoUpdatedBroadcast(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 48)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for GroupPhotoUpdatedBroadcast(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = 0u;
    *(_OWORD *)(result + _Block_object_dispose(&a9, 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 4_Block_object_dispose(&a9, 8) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + _Block_object_dispose(&a9, 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 4_Block_object_dispose(&a9, 8) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for GroupPhotoUpdatedBroadcast()
{
  return &type metadata for GroupPhotoUpdatedBroadcast;
}

BOOL sub_1A086E818(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_1A086E82C()
{
  return sub_1A09F4C88();
}

uint64_t sub_1A086E874()
{
  return sub_1A09F4C58();
}

uint64_t sub_1A086E8A0()
{
  return sub_1A09F4C88();
}

uint64_t sub_1A086E8E4()
{
  uint64_t result = 0x6E65644974616863;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6C79745374616863;
      break;
    case 2:
      uint64_t result = 0x55746E756F636361;
      break;
    case 3:
      uint64_t result = 0x6F666E4972657375;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A086E990@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A086EF9C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A086E9B8()
{
  return 0;
}

void sub_1A086E9C4(unsigned char *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_1A086E9D0(uint64_t a1)
{
  unint64_t v2 = sub_1A086F4A0();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A086EA0C(uint64_t a1)
{
  unint64_t v2 = sub_1A086F4A0();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A086EA48(void *a1)
{
  uint64_t v3 = sub_1A07856F8(&qword_1E94F8F18);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = &v9[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1A086F45C(a1, a1[3]);
  sub_1A086F4A0();
  sub_1A09F4CC8();
  v9[15] = 0;
  sub_1A09F4A28();
  if (!v1)
  {
    v9[14] = 1;
    sub_1A09F4AA8();
    v9[13] = 2;
    sub_1A09F4A28();
    uint64_t v7 = swift_bridgeObjectRetain();
    sub_1A094EC2C(v7, 3);
    swift_bridgeObjectRelease();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1A086EBFC()
{
  uint64_t v0 = qword_1E94F8ED0;
  swift_bridgeObjectRetain();
  return v0;
}

void sub_1A086EC34(void *a1)
{
  uint64_t v3 = *(unsigned __int8 *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 40);
  uint64_t v5 = (void *)sub_1A09F3DE8();
  uint64_t v6 = (void *)sub_1A09F3DE8();
  if (v4)
  {
    swift_bridgeObjectRetain();
    id v7 = (id)sub_1A09F3CE8();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v7 = 0;
  }
  objc_msgSend(a1, sel_groupPhotoUpdatedForChatIdentifier_style_account_userInfo_, v5, v3, v6, v7);
}

double sub_1A086ED18@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  sub_1A086F1AC(a1, (uint64_t)v6);
  if (!v2)
  {
    long long v5 = v6[1];
    *a2 = v6[0];
    a2[1] = v5;
    double result = *(double *)&v7;
    a2[2] = v7;
  }
  return result;
}

uint64_t sub_1A086ED5C(void *a1)
{
  return sub_1A086EA48(a1);
}

unint64_t sub_1A086ED74(uint64_t a1)
{
  *(void *)(a1 + _Block_object_dispose(&a9, 8) = sub_1A086EDA4();
  unint64_t result = sub_1A086EDF8();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1A086EDA4()
{
  unint64_t result = qword_1E94F8EE0;
  if (!qword_1E94F8EE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94F8EE0);
  }
  return result;
}

unint64_t sub_1A086EDF8()
{
  unint64_t result = qword_1E94F8EE8;
  if (!qword_1E94F8EE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94F8EE8);
  }
  return result;
}

unint64_t sub_1A086EE4C(uint64_t a1)
{
  unint64_t result = sub_1A086EE74();
  *(void *)(a1 + _Block_object_dispose(&a9, 8) = result;
  return result;
}

unint64_t sub_1A086EE74()
{
  unint64_t result = qword_1E94F8EF0;
  if (!qword_1E94F8EF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94F8EF0);
  }
  return result;
}

unint64_t sub_1A086EECC()
{
  unint64_t result = qword_1E94F8EF8;
  if (!qword_1E94F8EF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94F8EF8);
  }
  return result;
}

unint64_t sub_1A086EF20(uint64_t a1)
{
  unint64_t result = sub_1A086EF48();
  *(void *)(a1 + _Block_object_dispose(&a9, 8) = result;
  return result;
}

unint64_t sub_1A086EF48()
{
  unint64_t result = qword_1E94F8F00;
  if (!qword_1E94F8F00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94F8F00);
  }
  return result;
}

uint64_t sub_1A086EF9C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6E65644974616863 && a2 == 0xEE00726569666974;
  if (v2 || (sub_1A09F4B28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6C79745374616863 && a2 == 0xE900000000000065 || (sub_1A09F4B28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x55746E756F636361 && a2 == 0xEF4449657571696ELL || (sub_1A09F4B28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6F666E4972657375 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_1A09F4B28();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_1A086F1AC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_1A07856F8(&qword_1E94F8F08);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  BOOL v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A086F45C(a1, a1[3]);
  sub_1A086F4A0();
  sub_1A09F4CA8();
  if (v2) {
    return _s17IMSharedUtilities29RemoteIntentBroadcastEncodingVwxx_0((uint64_t)a1);
  }
  char v21 = 0;
  uint64_t v9 = sub_1A09F48D8();
  uint64_t v11 = v10;
  char v20 = 1;
  swift_bridgeObjectRetain();
  int v18 = sub_1A09F4958();
  char v19 = 2;
  uint64_t v16 = sub_1A09F48D8();
  uint64_t v17 = v12;
  swift_bridgeObjectRetain();
  uint64_t v13 = sub_1A094B800(3);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  swift_bridgeObjectRetain();
  _s17IMSharedUtilities29RemoteIntentBroadcastEncodingVwxx_0((uint64_t)a1);
  swift_bridgeObjectRelease();
  uint64_t v14 = v17;
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a2 = v9;
  *(void *)(a2 + _Block_object_dispose(&a9, 8) = v11;
  *(unsigned char *)(a2 + 16) = v18;
  *(void *)(a2 + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = v16;
  *(void *)(a2 + 32) = v14;
  *(void *)(a2 + 40) = v13;
  return result;
}

void *sub_1A086F45C(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80)));
  return result;
}

unint64_t sub_1A086F4A0()
{
  unint64_t result = qword_1E94F8F10;
  if (!qword_1E94F8F10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94F8F10);
  }
  return result;
}

unsigned char *initializeBufferWithCopyOfBuffer for GroupPhotoUpdatedBroadcast.CodingKeys(unsigned char *result, unsigned char *a2)
{
  *unint64_t result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for GroupPhotoUpdatedBroadcast.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFD) {
    goto LABEL_17;
  }
  if (a2 + 3 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 3) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 3;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 4;
  int v8 = v6 - 4;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for GroupPhotoUpdatedBroadcast.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A086F65CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

uint64_t sub_1A086F684(unsigned __int8 *a1)
{
  return *a1;
}

ValueMetadata *type metadata accessor for GroupPhotoUpdatedBroadcast.CodingKeys()
{
  return &type metadata for GroupPhotoUpdatedBroadcast.CodingKeys;
}

unint64_t sub_1A086F6A0()
{
  unint64_t result = qword_1E94F8F20;
  if (!qword_1E94F8F20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94F8F20);
  }
  return result;
}

unint64_t sub_1A086F6F8()
{
  unint64_t result = qword_1E94F8F28;
  if (!qword_1E94F8F28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94F8F28);
  }
  return result;
}

unint64_t sub_1A086F750()
{
  unint64_t result = qword_1E94F8F30;
  if (!qword_1E94F8F30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94F8F30);
  }
  return result;
}

id TranscodingSettingsProvider.transcodePreviews.getter()
{
  id v1 = *(id *)(v0 + 16);
  if (v1)
  {
    int v2 = (void *)sub_1A09F3DE8();
    id v1 = objc_msgSend(v1, sel_BOOLForKey_, v2);
  }
  return v1;
}

void sub_1A086F7F4(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  int v3 = *(void **)(*(void *)a1 + 16);
  if (v3)
  {
    unsigned int v4 = (void *)sub_1A09F3DE8();
    LOBYTE(v3) = objc_msgSend(v3, sel_BOOLForKey_, v4);
  }
  *a2 = (_BYTE)v3;
}

void sub_1A086F854(unsigned __int8 *a1, uint64_t a2)
{
  int v2 = *(void **)(*(void *)a2 + 16);
  if (v2)
  {
    uint64_t v3 = *a1;
    id v4 = (id)sub_1A09F3DE8();
    objc_msgSend(v2, sel_setBool_forKey_, v3, v4);
  }
}

void TranscodingSettingsProvider.transcodePreviews.setter(char a1)
{
  int v2 = *(void **)(v1 + 16);
  if (v2)
  {
    id v4 = (id)sub_1A09F3DE8();
    objc_msgSend(v2, sel_setBool_forKey_, a1 & 1, v4);
  }
}

void (*TranscodingSettingsProvider.transcodePreviews.modify(void *a1))(uint64_t a1)
{
  int v2 = *(void **)(v1 + 16);
  uint64_t v3 = a1 + 2;
  *a1 = v1;
  a1[1] = v2;
  if (v2)
  {
    id v4 = (void *)sub_1A09F3DE8();
    LOBYTE(v2) = objc_msgSend(v2, sel_BOOLForKey_, v4);

    uint64_t v5 = sub_1A086F9EC;
  }
  else
  {
    uint64_t v5 = (void (*)(uint64_t))nullsub_5;
  }
  unint64_t result = v5;
  *uint64_t v3 = (_BYTE)v2;
  return result;
}

void sub_1A086F9EC(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + 8);
  uint64_t v2 = *(unsigned __int8 *)(a1 + 16);
  id v3 = (id)sub_1A09F3DE8();
  objc_msgSend(v1, sel_setBool_forKey_, v2, v3);
}

id TranscodingSettingsProvider.disableLowQualityModeOnWiFi.getter()
{
  id v1 = *(id *)(v0 + 16);
  if (v1)
  {
    uint64_t v2 = (void *)sub_1A09F3DE8();
    id v1 = objc_msgSend(v1, sel_BOOLForKey_, v2);
  }
  return v1;
}

void sub_1A086FAA0(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  id v3 = *(void **)(*(void *)a1 + 16);
  if (v3)
  {
    id v4 = (void *)sub_1A09F3DE8();
    LOBYTE(v3) = objc_msgSend(v3, sel_BOOLForKey_, v4);
  }
  *a2 = (_BYTE)v3;
}

void sub_1A086FB00(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v2 = *(void **)(*(void *)a2 + 16);
  if (v2)
  {
    uint64_t v3 = *a1;
    id v4 = (id)sub_1A09F3DE8();
    objc_msgSend(v2, sel_setBool_forKey_, v3, v4);
  }
}

void TranscodingSettingsProvider.disableLowQualityModeOnWiFi.setter(char a1)
{
  uint64_t v2 = *(void **)(v1 + 16);
  if (v2)
  {
    id v4 = (id)sub_1A09F3DE8();
    objc_msgSend(v2, sel_setBool_forKey_, a1 & 1, v4);
  }
}

void (*TranscodingSettingsProvider.disableLowQualityModeOnWiFi.modify(void *a1))(uint64_t a1)
{
  uint64_t v2 = *(void **)(v1 + 16);
  uint64_t v3 = a1 + 2;
  *a1 = v1;
  a1[1] = v2;
  if (v2)
  {
    id v4 = (void *)sub_1A09F3DE8();
    LOBYTE(v2) = objc_msgSend(v2, sel_BOOLForKey_, v4);

    uint64_t v5 = sub_1A086FC98;
  }
  else
  {
    uint64_t v5 = (void (*)(uint64_t))j_nullsub_5;
  }
  unint64_t result = v5;
  *uint64_t v3 = (_BYTE)v2;
  return result;
}

void sub_1A086FC98(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + 8);
  uint64_t v2 = *(unsigned __int8 *)(a1 + 16);
  id v3 = (id)sub_1A09F3DE8();
  objc_msgSend(v1, sel_setBool_forKey_, v2, v3);
}

id TranscodingSettingsProvider.transcodePreviewsInitialized.getter()
{
  id v1 = *(id *)(v0 + 16);
  if (v1)
  {
    uint64_t v2 = (void *)sub_1A09F3DE8();
    id v1 = objc_msgSend(v1, sel_BOOLForKey_, v2);
  }
  return v1;
}

void sub_1A086FD4C(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  id v3 = *(void **)(*(void *)a1 + 16);
  if (v3)
  {
    id v4 = (void *)sub_1A09F3DE8();
    LOBYTE(v3) = objc_msgSend(v3, sel_BOOLForKey_, v4);
  }
  *a2 = (_BYTE)v3;
}

void sub_1A086FDAC(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v2 = *(void **)(*(void *)a2 + 16);
  if (v2)
  {
    uint64_t v3 = *a1;
    id v4 = (id)sub_1A09F3DE8();
    objc_msgSend(v2, sel_setBool_forKey_, v3, v4);
  }
}

void TranscodingSettingsProvider.transcodePreviewsInitialized.setter(char a1)
{
  uint64_t v2 = *(void **)(v1 + 16);
  if (v2)
  {
    id v4 = (id)sub_1A09F3DE8();
    objc_msgSend(v2, sel_setBool_forKey_, a1 & 1, v4);
  }
}

void (*TranscodingSettingsProvider.transcodePreviewsInitialized.modify(void *a1))(uint64_t a1)
{
  uint64_t v2 = *(void **)(v1 + 16);
  uint64_t v3 = a1 + 2;
  *a1 = v1;
  a1[1] = v2;
  if (v2)
  {
    id v4 = (void *)sub_1A09F3DE8();
    LOBYTE(v2) = objc_msgSend(v2, sel_BOOLForKey_, v4);

    uint64_t v5 = sub_1A086FF44;
  }
  else
  {
    uint64_t v5 = (void (*)(uint64_t))j_nullsub_5;
  }
  unint64_t result = v5;
  *uint64_t v3 = (_BYTE)v2;
  return result;
}

void sub_1A086FF44(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + 8);
  uint64_t v2 = *(unsigned __int8 *)(a1 + 16);
  id v3 = (id)sub_1A09F3DE8();
  objc_msgSend(v1, sel_setBool_forKey_, v2, v3);
}

id TranscodingSettingsProvider.disableLowQualityModeOnWiFiInitialized.getter()
{
  id v1 = *(id *)(v0 + 16);
  if (v1)
  {
    uint64_t v2 = (void *)sub_1A09F3DE8();
    id v1 = objc_msgSend(v1, sel_BOOLForKey_, v2);
  }
  return v1;
}

void sub_1A086FFF8(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  id v3 = *(void **)(*(void *)a1 + 16);
  if (v3)
  {
    id v4 = (void *)sub_1A09F3DE8();
    LOBYTE(v3) = objc_msgSend(v3, sel_BOOLForKey_, v4);
  }
  *a2 = (_BYTE)v3;
}

void sub_1A0870058(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v2 = *(void **)(*(void *)a2 + 16);
  if (v2)
  {
    uint64_t v3 = *a1;
    id v4 = (id)sub_1A09F3DE8();
    objc_msgSend(v2, sel_setBool_forKey_, v3, v4);
  }
}

void TranscodingSettingsProvider.disableLowQualityModeOnWiFiInitialized.setter(char a1)
{
  uint64_t v2 = *(void **)(v1 + 16);
  if (v2)
  {
    id v4 = (id)sub_1A09F3DE8();
    objc_msgSend(v2, sel_setBool_forKey_, a1 & 1, v4);
  }
}

void (*TranscodingSettingsProvider.disableLowQualityModeOnWiFiInitialized.modify(void *a1))(uint64_t a1)
{
  uint64_t v2 = *(void **)(v1 + 16);
  uint64_t v3 = a1 + 2;
  *a1 = v1;
  a1[1] = v2;
  if (v2)
  {
    id v4 = (void *)sub_1A09F3DE8();
    LOBYTE(v2) = objc_msgSend(v2, sel_BOOLForKey_, v4);

    uint64_t v5 = sub_1A08701F0;
  }
  else
  {
    uint64_t v5 = (void (*)(uint64_t))j_nullsub_5;
  }
  unint64_t result = v5;
  *uint64_t v3 = (_BYTE)v2;
  return result;
}

void sub_1A08701F0(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + 8);
  uint64_t v2 = *(unsigned __int8 *)(a1 + 16);
  id v3 = (id)sub_1A09F3DE8();
  objc_msgSend(v1, sel_setBool_forKey_, v2, v3);
}

uint64_t TranscodingSettingsProvider.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  TranscodingSettingsProvider.init()();
  return v0;
}

void *TranscodingSettingsProvider.init()()
{
  id v1 = objc_allocWithZone(MEMORY[0x1E4F1CB18]);
  uint64_t v2 = (void *)sub_1A09F3DE8();
  id v3 = objc_msgSend(v1, sel_initWithSuiteName_, v2);

  v0[2] = v3;
  v0[3] = 0xD000000000000019;
  v0[4] = 0x80000001A0A30ED0;
  v0[5] = 0xD000000000000026;
  v0[6] = 0x80000001A0A30EF0;
  v0[7] = 0xD000000000000020;
  v0[8] = 0x80000001A0A30F20;
  v0[9] = 0xD00000000000003BLL;
  v0[10] = 0x80000001A0A30F50;
  return v0;
}

uint64_t TranscodingSettingsProvider.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t TranscodingSettingsProvider.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

id sub_1A0870408()
{
  id v1 = *(id *)(*(void *)v0 + 16);
  if (v1)
  {
    uint64_t v2 = (void *)sub_1A09F3DE8();
    id v1 = objc_msgSend(v1, sel_BOOLForKey_, v2);
  }
  return v1;
}

void sub_1A087045C(char a1)
{
  uint64_t v2 = *(void **)(*(void *)v1 + 16);
  if (v2)
  {
    id v4 = (id)sub_1A09F3DE8();
    objc_msgSend(v2, sel_setBool_forKey_, a1 & 1, v4);
  }
}

uint64_t (*sub_1A08704D8(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = TranscodingSettingsProvider.transcodePreviews.modify(v2);
  return sub_1A0870534;
}

id sub_1A0870538()
{
  id v1 = *(id *)(*(void *)v0 + 16);
  if (v1)
  {
    uint64_t v2 = (void *)sub_1A09F3DE8();
    id v1 = objc_msgSend(v1, sel_BOOLForKey_, v2);
  }
  return v1;
}

void sub_1A087058C(char a1)
{
  uint64_t v2 = *(void **)(*(void *)v1 + 16);
  if (v2)
  {
    id v4 = (id)sub_1A09F3DE8();
    objc_msgSend(v2, sel_setBool_forKey_, a1 & 1, v4);
  }
}

uint64_t (*sub_1A0870608(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = TranscodingSettingsProvider.disableLowQualityModeOnWiFi.modify(v2);
  return sub_1A0870534;
}

id sub_1A0870664()
{
  id v1 = *(id *)(*(void *)v0 + 16);
  if (v1)
  {
    uint64_t v2 = (void *)sub_1A09F3DE8();
    id v1 = objc_msgSend(v1, sel_BOOLForKey_, v2);
  }
  return v1;
}

void sub_1A08706B8(char a1)
{
  uint64_t v2 = *(void **)(*(void *)v1 + 16);
  if (v2)
  {
    id v4 = (id)sub_1A09F3DE8();
    objc_msgSend(v2, sel_setBool_forKey_, a1 & 1, v4);
  }
}

uint64_t (*sub_1A0870734(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = TranscodingSettingsProvider.transcodePreviewsInitialized.modify(v2);
  return sub_1A0870534;
}

id sub_1A0870790()
{
  id v1 = *(id *)(*(void *)v0 + 16);
  if (v1)
  {
    uint64_t v2 = (void *)sub_1A09F3DE8();
    id v1 = objc_msgSend(v1, sel_BOOLForKey_, v2);
  }
  return v1;
}

void sub_1A08707E4(char a1)
{
  uint64_t v2 = *(void **)(*(void *)v1 + 16);
  if (v2)
  {
    id v4 = (id)sub_1A09F3DE8();
    objc_msgSend(v2, sel_setBool_forKey_, a1 & 1, v4);
  }
}

uint64_t (*sub_1A0870860(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = TranscodingSettingsProvider.disableLowQualityModeOnWiFiInitialized.modify(v2);
  return sub_1A0870534;
}

void sub_1A08708BC(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void))(*a1 + 32))(*a1);

  free(v1);
}

uint64_t type metadata accessor for TranscodingSettingsProvider()
{
  return self;
}

uint64_t method lookup function for TranscodingSettingsProvider(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for TranscodingSettingsProvider);
}

uint64_t dispatch thunk of TranscodingSettingsProvider.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t sub_1A0870978()
{
  return swift_deallocClassInstance();
}

uint64_t sub_1A0870988(uint64_t *a1)
{
  uint64_t v8 = *MEMORY[0x1E4F143B8];
  sub_1A0874814(*a1);
  char v3 = v2;
  out_tokeuint64_t n = -1;
  notify_register_check("kRCSEnabledDidChange", &out_token);
  int v4 = out_token;
  type metadata accessor for IMCTRCSUtilitiesManagerLiveDelegate.Token();
  uint64_t v5 = swift_allocObject();
  *(_DWORD *)(v5 + 16) = v4;
  swift_release();
  a1[2] = v5;
  notify_set_state(v4, v3 & 1);
  return notify_post("kRCSEnabledDidChange");
}

uint64_t sub_1A0870A58(uint64_t a1, uint64_t a2)
{
  return sub_1A0870A80(a1, a2, (uint64_t)&unk_1EF2C1C98, (uint64_t)sub_1A0874E6C, (uint64_t)&unk_1EF2C1CB0);
}

uint64_t sub_1A0870A80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v21[0] = *(void *)(v5 + 16);
  uint64_t v10 = (void *)swift_allocObject();
  v10[2] = a1;
  v10[3] = a2;
  void v10[4] = v5;
  void aBlock[4] = a4;
  aBlock[5] = v10;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A077DA28;
  aBlock[3] = a5;
  uint64_t v11 = _Block_copy(aBlock);
  uint64_t v12 = sub_1A09F3A68();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  id v15 = (char *)v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  swift_retain();
  sub_1A09F3A58();
  uint64_t v16 = sub_1A09F3A38();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  char v19 = (char *)v21 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21[1] = MEMORY[0x1E4FBC860];
  sub_1A07926B4((unint64_t *)&qword_1EB4A5A90, MEMORY[0x1F41AAEB0]);
  sub_1A07856F8((uint64_t *)&unk_1EB4A5AA0);
  sub_1A0792508((unint64_t *)&qword_1EB4A5AB0, (uint64_t *)&unk_1EB4A5AA0);
  sub_1A09F45B8();
  MEMORY[0x1A62265E0](0, v15, v19, v11);
  _Block_release(v11);
  (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  return swift_release();
}

id sub_1A0870D10(void *a1)
{
  id result = objc_msgSend(a1, sel_labelID);
  if (result)
  {
    char v2 = result;
    sub_1A09F3E18();

    uint64_t v4 = MEMORY[0x1F4188790](v3);
    MEMORY[0x1F4188790](v4);
    sub_1A07856F8(&qword_1E94F7620);
    sub_1A09F4408();
    swift_bridgeObjectRelease();
    return (id)v5;
  }
  return result;
}

void sub_1A0870E3C(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  v32[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v10 = *a1;
  if (*(void *)(*a1 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v11 = sub_1A087AAA4(a2, a3);
    if (v12)
    {
      uint64_t v13 = *(void **)(*(void *)(v10 + 56) + 8 * v11);
      id v14 = v13;
LABEL_7:
      swift_bridgeObjectRelease();
      goto LABEL_8;
    }
    swift_bridgeObjectRelease();
  }
  id v15 = (void *)a1[1];
  v32[0] = 0;
  id v16 = objc_msgSend(v15, sel__getSystemConfiguration_withError_, a4, v32);
  id v17 = v32[0];
  if (v16)
  {
    uint64_t v13 = v16;
    swift_bridgeObjectRetain();
    id v18 = v17;
    id v19 = v13;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v32[0] = *(id *)a1;
    *a1 = 0x8000000000000000;
    sub_1A08D9654((uint64_t)v13, a2, a3, isUniquelyReferenced_nonNull_native);
    *a1 = v32[0];
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  id v21 = v32[0];
  uint64_t v22 = (void *)sub_1A09F3258();

  swift_willThrow();
  if (qword_1EB4A5A50 != -1) {
    swift_once();
  }
  uint64_t v23 = sub_1A09F39E8();
  sub_1A078510C(v23, (uint64_t)qword_1EB4A5A30);
  id v24 = v22;
  id v25 = v22;
  uint64_t v26 = sub_1A09F39C8();
  os_log_type_t v27 = sub_1A09F4378();
  if (os_log_type_enabled(v26, v27))
  {
    __int16 v28 = (uint8_t *)swift_slowAlloc();
    id v29 = (void *)swift_slowAlloc();
    *(_DWORD *)__int16 v28 = 138412290;
    id v30 = v22;
    long long v31 = (void *)_swift_stdlib_bridgeErrorToNSError();
    v32[0] = v31;
    sub_1A09F4528();
    *id v29 = v31;

    _os_log_impl(&dword_1A0772000, v26, v27, "Error getting system configuration: %@", v28, 0xCu);
    sub_1A07856F8(&qword_1E94F7740);
    swift_arrayDestroy();
    MEMORY[0x1A6228C20](v29, -1, -1);
    MEMORY[0x1A6228C20](v28, -1, -1);
  }
  else
  {
  }
  uint64_t v13 = 0;
LABEL_8:
  *a5 = v13;
}

uint64_t sub_1A087113C(void *a1)
{
  id v2 = objc_msgSend(a1, sel_labelID);
  if (v2)
  {
    uint64_t v3 = v2;
    sub_1A09F3E18();

    uint64_t v5 = MEMORY[0x1F4188790](v4);
    MEMORY[0x1F4188790](v5);
    sub_1A07856F8(&qword_1E94F7620);
    sub_1A09F4408();
    swift_bridgeObjectRelease();
    if (v32)
    {
      id v6 = [v32 operationStatus];
      if (!v6 || (BOOL v7 = v6, v8 = objc_msgSend(v6, sel_registrationState), v7, v8 != (id)1))
      {
        uint64_t v22 = 0;
        id v16 = v32;
LABEL_20:

        return v22;
      }
      id v9 = [v32 chatCapabilities];
      if (v9
        && (uint64_t v10 = v9, v11 = objc_msgSend(v9, sel_revokeTimer),
                      v10,
                      v11))
      {
        if (qword_1EB4A5A50 != -1) {
          swift_once();
        }
        uint64_t v12 = sub_1A09F39E8();
        sub_1A078510C(v12, (uint64_t)qword_1EB4A5A30);
        id v13 = a1;
        id v14 = v11;
        id v15 = v13;
        id v16 = v14;
        id v17 = sub_1A09F39C8();
        os_log_type_t v18 = sub_1A09F4358();
        if (!os_log_type_enabled(v17, v18))
        {

          uint64_t v22 = 0;
          id v17 = v16;
          goto LABEL_19;
        }
        os_log_type_t v31 = v18;
        uint64_t v19 = swift_slowAlloc();
        id v30 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v19 = 138412546;
        id v20 = v15;
        sub_1A09F4528();
        *id v30 = v15;

        *(_WORD *)(v19 + 12) = 2112;
        id v21 = v16;
        sub_1A09F4528();
        v30[1] = v11;

        _os_log_impl(&dword_1A0772000, v17, v31, "RCS chat capabilities (%@) has a valid revoke timer :%@. Network doesn't support interworking", (uint8_t *)v19, 0x16u);
        sub_1A07856F8(&qword_1E94F7740);
        swift_arrayDestroy();
        MEMORY[0x1A6228C20](v30, -1, -1);
        MEMORY[0x1A6228C20](v19, -1, -1);

        uint64_t v22 = 0;
      }
      else
      {
        if (qword_1EB4A5A50 != -1) {
          swift_once();
        }
        uint64_t v23 = sub_1A09F39E8();
        sub_1A078510C(v23, (uint64_t)qword_1EB4A5A30);
        id v24 = a1;
        id v17 = sub_1A09F39C8();
        os_log_type_t v25 = sub_1A09F4358();
        if (os_log_type_enabled(v17, v25))
        {
          uint64_t v26 = (uint8_t *)swift_slowAlloc();
          os_log_type_t v27 = (void *)swift_slowAlloc();
          *(_DWORD *)uint64_t v26 = 138412290;
          __int16 v28 = v24;
          sub_1A09F4528();
          *os_log_type_t v27 = v24;

          _os_log_impl(&dword_1A0772000, v17, v25, "RCS chat capabilities (%@) has no valid revoke timer. Network supports interworking", v26, 0xCu);
          sub_1A07856F8(&qword_1E94F7740);
          uint64_t v22 = 1;
          swift_arrayDestroy();
          MEMORY[0x1A6228C20](v27, -1, -1);
          MEMORY[0x1A6228C20](v26, -1, -1);
        }
        else
        {

          uint64_t v22 = 1;
          id v17 = v24;
        }
      }
      id v16 = v32;
LABEL_19:

      goto LABEL_20;
    }
  }
  return 0;
}

id sub_1A0871630(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  id v4 = sub_1A0874A28(a3, a4, a1, a2);
  if (!v4)
  {
    if (qword_1EB4A5A50 != -1) {
      swift_once();
    }
    uint64_t v10 = sub_1A09F39E8();
    sub_1A078510C(v10, (uint64_t)qword_1EB4A5A30);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    id v11 = sub_1A09F39C8();
    os_log_type_t v12 = sub_1A09F4368();
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v13 = swift_slowAlloc();
      uint64_t v14 = swift_slowAlloc();
      uint64_t v23 = v14;
      *(_DWORD *)uint64_t v13 = 136315394;
      swift_bridgeObjectRetain();
      sub_1A07856F8(&qword_1E94F9028);
      uint64_t v15 = sub_1A09F3E38();
      sub_1A0785144(v15, v16, &v23);
      sub_1A09F4528();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v13 + 12) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v17 = sub_1A09F3E38();
      sub_1A0785144(v17, v18, &v23);
      sub_1A09F4528();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A0772000, v11, v12, "No subscription found for simID: %s phoneNumber: %s", (uint8_t *)v13, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1A6228C20](v14, -1, -1);
      MEMORY[0x1A6228C20](v13, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
    return 0;
  }
  uint64_t v5 = v4;
  id v6 = sub_1A0870D10(v4);
  if (!v6) {
    goto LABEL_8;
  }
  BOOL v7 = v6;
  if (objc_msgSend(v6, sel_respondsToSelector_, sel_featureDisabledByProfile))
  {
    unsigned int v8 = objc_msgSend(v7, sel_respondsToSelector_, sel_featureDisabledStoreDemo);
    unsigned int v9 = objc_msgSend(v7, sel_featureSupported);
    if (v8)
    {
      if (!v9 || (objc_msgSend(v7, sel_featureDisabledByProfile) & 1) != 0)
      {

LABEL_8:
        return 0;
      }
      unsigned int v20 = objc_msgSend(v7, sel_featureDisabledStoreDemo);
    }
    else
    {
      if (!v9)
      {

        return 0;
      }
      unsigned int v20 = objc_msgSend(v7, sel_featureDisabledByProfile);
    }
    unsigned int v22 = v20;

    return (id)(v22 ^ 1);
  }
  id v19 = objc_msgSend(v7, sel_featureSupported);

  return v19;
}

id sub_1A0871968(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  id v4 = sub_1A0874A28(a3, a4, a1, a2);
  if (!v4)
  {
    if (qword_1EB4A5A50 != -1) {
      swift_once();
    }
    uint64_t v11 = sub_1A09F39E8();
    sub_1A078510C(v11, (uint64_t)qword_1EB4A5A30);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    os_log_type_t v12 = sub_1A09F39C8();
    os_log_type_t v13 = sub_1A09F4368();
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v14 = swift_slowAlloc();
      uint64_t v15 = swift_slowAlloc();
      uint64_t v40 = v15;
      *(_DWORD *)uint64_t v14 = 136315394;
      swift_bridgeObjectRetain();
      sub_1A07856F8(&qword_1E94F9028);
      uint64_t v16 = sub_1A09F3E38();
      sub_1A0785144(v16, v17, &v40);
      sub_1A09F4528();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v14 + 12) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v18 = sub_1A09F3E38();
      sub_1A0785144(v18, v19, &v40);
      sub_1A09F4528();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A0772000, v12, v13, "No subscription found for simID: %s phoneNumber: %s", (uint8_t *)v14, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1A6228C20](v15, -1, -1);
      MEMORY[0x1A6228C20](v14, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
    return 0;
  }
  uint64_t v5 = v4;
  id v6 = sub_1A0870D10(v4);
  if (!v6)
  {
    if (qword_1EB4A5A50 != -1) {
      swift_once();
    }
    uint64_t v20 = sub_1A09F39E8();
    sub_1A078510C(v20, (uint64_t)qword_1EB4A5A30);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    id v21 = sub_1A09F39C8();
    os_log_type_t v22 = sub_1A09F4368();
    if (os_log_type_enabled(v21, v22))
    {
      uint64_t v23 = swift_slowAlloc();
      uint64_t type = swift_slowAlloc();
      uint64_t v40 = type;
      *(_DWORD *)uint64_t v23 = 136315394;
      swift_bridgeObjectRetain();
      sub_1A07856F8(&qword_1E94F9028);
      uint64_t v24 = sub_1A09F3E38();
      sub_1A0785144(v24, v25, &v40);
      sub_1A09F4528();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v23 + 12) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v26 = sub_1A09F3E38();
      sub_1A0785144(v26, v27, &v40);
      sub_1A09F4528();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A0772000, v21, v22, "No RCS config found for simID: %s phoneNumber: %s", (uint8_t *)v23, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1A6228C20](type, -1, -1);
      MEMORY[0x1A6228C20](v23, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
    return 0;
  }
  BOOL v7 = v6;
  id v8 = objc_msgSend(v6, sel_chatCapabilities);
  if (!v8)
  {
    if (qword_1EB4A5A50 != -1) {
      swift_once();
    }
    uint64_t v28 = sub_1A09F39E8();
    sub_1A078510C(v28, (uint64_t)qword_1EB4A5A30);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    id v29 = sub_1A09F39C8();
    os_log_type_t v30 = sub_1A09F4368();
    if (os_log_type_enabled(v29, v30))
    {
      os_log_type_t typea = v30;
      uint64_t v31 = swift_slowAlloc();
      uint64_t v37 = swift_slowAlloc();
      uint64_t v40 = v37;
      *(_DWORD *)uint64_t v31 = 136315394;
      swift_bridgeObjectRetain();
      sub_1A07856F8(&qword_1E94F9028);
      uint64_t v32 = sub_1A09F3E38();
      sub_1A0785144(v32, v33, &v40);
      sub_1A09F4528();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v31 + 12) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v34 = sub_1A09F3E38();
      sub_1A0785144(v34, v35, &v40);
      sub_1A09F4528();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A0772000, v29, typea, "No Chat capabilities found in RCS config for simID: %s phoneNumber: %s", (uint8_t *)v31, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1A6228C20](v37, -1, -1);
      MEMORY[0x1A6228C20](v31, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }

    return 0;
  }
  unsigned int v9 = v8;
  id v10 = objc_msgSend(v8, sel_revokeTimer);

  return v10;
}

id sub_1A0872038(void *a1)
{
  id v1 = objc_msgSend(a1, sel_labelID);
  if (v1)
  {
    sub_1A09F3E18();

    uint64_t v3 = MEMORY[0x1F4188790](v2);
    MEMORY[0x1F4188790](v3);
    sub_1A07856F8(&qword_1E94F7620);
    sub_1A09F4408();
    swift_bridgeObjectRelease();
    if (v9)
    {
      if ([v9 respondsToSelector:sel_featureEnabledByDefault])
      {
        id v1 = [v9 featureEnabledByDefault];
      }
      else
      {
        if (qword_1EB4A5A50 != -1) {
          swift_once();
        }
        uint64_t v4 = sub_1A09F39E8();
        sub_1A078510C(v4, (uint64_t)qword_1EB4A5A30);
        uint64_t v5 = sub_1A09F39C8();
        os_log_type_t v6 = sub_1A09F4368();
        if (os_log_type_enabled(v5, v6))
        {
          BOOL v7 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)BOOL v7 = 0;
          _os_log_impl(&dword_1A0772000, v5, v6, "Feature enabled by default is unsupported.", v7, 2u);
          MEMORY[0x1A6228C20](v7, -1, -1);

          id v1 = 0;
LABEL_12:

          return v1;
        }

        id v1 = 0;
      }
      uint64_t v5 = v9;
      goto LABEL_12;
    }
    return 0;
  }
  return v1;
}

uint64_t sub_1A0872274(void *a1)
{
  uint64_t v2 = sub_1A0870D10(a1);
  if (!v2)
  {
    if (qword_1EB4A5A50 != -1) {
      swift_once();
    }
    uint64_t v8 = sub_1A09F39E8();
    sub_1A078510C(v8, (uint64_t)qword_1EB4A5A30);
    id v9 = a1;
    uint64_t v3 = sub_1A09F39C8();
    os_log_type_t v10 = sub_1A09F4358();
    if (!os_log_type_enabled(v3, v10))
    {

      return 0;
    }
    uint64_t v11 = swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    uint64_t v32 = v12;
    *(_DWORD *)uint64_t v11 = 136446466;
    uint64_t v30 = sub_1A0785144(0x2864656C62616E65, 0xED0000293A726F66, &v32);
    sub_1A09F4528();
    *(_WORD *)(v11 + 12) = 2080;
    id v13 = objc_msgSend(v9, sel_labelID, v30);
    if (v13)
    {
      uint64_t v14 = v13;
      uint64_t v15 = sub_1A09F3E18();
      unint64_t v17 = v16;
    }
    else
    {
      uint64_t v15 = 0x3E6C696E3CLL;
      unint64_t v17 = 0xE500000000000000;
    }
    sub_1A0785144(v15, v17, &v32);
    sub_1A09F4528();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A0772000, v3, v10, "%{public}s failed to find system configuration for subscription with ID %s", (uint8_t *)v11, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1A6228C20](v12, -1, -1);
    MEMORY[0x1A6228C20](v11, -1, -1);
LABEL_24:

    return 0;
  }
  uint64_t v3 = v2;
  id v4 = [v2 operationStatus];
  if (!v4)
  {
    if (qword_1EB4A5A50 != -1) {
      swift_once();
    }
    uint64_t v18 = sub_1A09F39E8();
    sub_1A078510C(v18, (uint64_t)qword_1EB4A5A30);
    id v19 = a1;
    uint64_t v20 = sub_1A09F39C8();
    os_log_type_t v21 = sub_1A09F4358();
    if (os_log_type_enabled(v20, v21))
    {
      uint64_t v22 = swift_slowAlloc();
      uint64_t v23 = swift_slowAlloc();
      uint64_t v32 = v23;
      *(_DWORD *)uint64_t v22 = 136446466;
      uint64_t v31 = sub_1A0785144(0x2864656C62616E65, 0xED0000293A726F66, &v32);
      sub_1A09F4528();
      *(_WORD *)(v22 + 12) = 2080;
      id v24 = objc_msgSend(v19, sel_labelID, v31);
      if (v24)
      {
        unint64_t v25 = v24;
        uint64_t v26 = sub_1A09F3E18();
        unint64_t v28 = v27;
      }
      else
      {
        uint64_t v26 = 0x3E6C696E3CLL;
        unint64_t v28 = 0xE500000000000000;
      }
      sub_1A0785144(v26, v28, &v32);
      sub_1A09F4528();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A0772000, v20, v21, "%{public}s failed to find RCS operation status for subscription with ID %s", (uint8_t *)v22, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1A6228C20](v23, -1, -1);
      MEMORY[0x1A6228C20](v22, -1, -1);
    }
    else
    {
    }
    goto LABEL_24;
  }
  uint64_t v5 = v4;
  id v6 = objc_msgSend(v4, sel_switchState);
  if (v6 == (id)-1)
  {
    unsigned __int8 v29 = sub_1A0872038(a1);

    return v29 & 1;
  }
  if ((unint64_t)v6 <= 1)
  {

    return 1;
  }

  return 0;
}

void *sub_1A0872714(void *a1)
{
  id v2 = sub_1A0870D10(a1);
  if (v2)
  {
    uint64_t v3 = v2;
    id v4 = objc_msgSend(v2, sel_identity);
    uint64_t v5 = v4;
    if (v4)
    {
      id v6 = objc_msgSend(v4, sel_impi);

      uint64_t v5 = (void *)sub_1A09F3E18();
    }
  }
  else
  {
    if (qword_1EB4A5A50 != -1) {
      swift_once();
    }
    uint64_t v7 = sub_1A09F39E8();
    sub_1A078510C(v7, (uint64_t)qword_1EB4A5A30);
    id v8 = a1;
    id v9 = sub_1A09F39C8();
    os_log_type_t v10 = sub_1A09F4358();
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v11 = swift_slowAlloc();
      uint64_t v12 = swift_slowAlloc();
      uint64_t v20 = v12;
      *(_DWORD *)uint64_t v11 = 136446466;
      uint64_t v19 = sub_1A0785144(0xD000000000000015, 0x80000001A0A31240, &v20);
      sub_1A09F4528();
      *(_WORD *)(v11 + 12) = 2080;
      id v13 = objc_msgSend(v8, sel_labelID, v19);
      if (v13)
      {
        uint64_t v14 = v13;
        uint64_t v15 = sub_1A09F3E18();
        unint64_t v17 = v16;
      }
      else
      {
        unint64_t v17 = 0xE500000000000000;
        uint64_t v15 = 0x3E6C696E3CLL;
      }
      sub_1A0785144(v15, v17, &v20);
      sub_1A09F4528();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A0772000, v9, v10, "%{public}s failed to find system configuration for subscription with ID %s", (uint8_t *)v11, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1A6228C20](v12, -1, -1);
      MEMORY[0x1A6228C20](v11, -1, -1);
    }
    else
    {
    }
    return 0;
  }
  return v5;
}

double sub_1A08729B8@<D0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, _OWORD *a4@<X8>)
{
  id v8 = objc_msgSend(self, sel_sharedInstance);
  id v9 = (void *)sub_1A09F4068();
  sub_1A0875C10(a2, (uint64_t)v24);
  uint64_t v10 = v25;
  if (v25)
  {
    uint64_t v11 = sub_1A086F45C(v24, v25);
    uint64_t v12 = *(void *)(v10 - 8);
    MEMORY[0x1F4188790](v11);
    uint64_t v14 = (char *)v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v12 + 16))(v14);
    uint64_t v15 = sub_1A09F4B18();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v10);
    _s17IMSharedUtilities29RemoteIntentBroadcastEncodingVwxx_0((uint64_t)v24);
  }
  else
  {
    uint64_t v15 = 0;
  }
  sub_1A0875C10(a3, (uint64_t)v24);
  uint64_t v16 = v25;
  if (v25)
  {
    unint64_t v17 = sub_1A086F45C(v24, v25);
    uint64_t v18 = *(void *)(v16 - 8);
    MEMORY[0x1F4188790](v17);
    uint64_t v20 = (char *)v24 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v18 + 16))(v20);
    uint64_t v21 = sub_1A09F4B18();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v16);
    _s17IMSharedUtilities29RemoteIntentBroadcastEncodingVwxx_0((uint64_t)v24);
  }
  else
  {
    uint64_t v21 = 0;
  }
  id v22 = objc_msgSend(v8, sel_copyCarrierBundleValueForSubscriptionContext_keyHierarchy_defaultValue_valueIfError_, a1, v9, v15, v21);

  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  if (v22)
  {
    sub_1A09F4588();
    swift_unknownObjectRelease();
  }
  else
  {
    double result = 0.0;
    *a4 = 0u;
    a4[1] = 0u;
  }
  return result;
}

id sub_1A0872C84()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for IMCTRCSUtilitiesManagerLiveDelegate();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1A0872CCC()
{
  id v0 = objc_msgSend(self, sel_sharedInstance);
  id v1 = objc_msgSend(v0, sel_ctSubscriptionInfo);

  return sub_1A0870A80((uint64_t)sub_1A0870988, 0, (uint64_t)&unk_1EF2C1C70, (uint64_t)sub_1A0874E6C, (uint64_t)&unk_1EF2C0DD0);
}

id sub_1A0872DBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  id v6 = objc_msgSend(self, sel_sharedInstance);
  uint64_t v7 = (void *)sub_1A09F3DE8();
  id v8 = (void *)sub_1A09F3DE8();
  id v9 = objc_msgSend(v6, sel_getBoolFromDomain_forKey_defaultValue_, v7, v8, a5 & 1);

  return v9;
}

void sub_1A0872E70(char a1)
{
  id v2 = objc_msgSend(self, sel_sharedInstance);
  uint64_t v3 = (void *)sub_1A09F3DE8();
  id v4 = (id)sub_1A09F3DE8();
  objc_msgSend(v2, sel_setBool_forDomain_forKey_, a1 & 1, v3, v4);
}

void sub_1A0872F34(uint64_t *a1, uint64_t a2, uint64_t a3, void *a4)
{
  sub_1A0874814(*a1);
  int v9 = v8 & 1;
  swift_bridgeObjectRetain();
  id v10 = a4;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v14 = *a1;
  *a1 = 0x8000000000000000;
  sub_1A08D9654((uint64_t)a4, a2, a3, isUniquelyReferenced_nonNull_native);
  *a1 = v14;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v12 = a1[2];
  sub_1A0874814(*a1);
  if (v9 != (v13 & 1))
  {
    notify_set_state(*(_DWORD *)(v12 + 16), v13 & 1);
    notify_post("kRCSEnabledDidChange");
  }
}

void sub_1A08731A8(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v27 = *a1 + 64;
  uint64_t v3 = 1 << *(unsigned char *)(*a1 + 32);
  uint64_t v4 = -1;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  unint64_t v5 = v4 & *(void *)(*a1 + 64);
  int64_t v6 = (unint64_t)(v3 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v7 = 0;
  if (v5) {
    goto LABEL_6;
  }
LABEL_7:
  int64_t v10 = v7 + 1;
  if (__OFADD__(v7, 1))
  {
    __break(1u);
LABEL_36:
    __break(1u);
    return;
  }
  if (v10 < v6)
  {
    unint64_t v11 = *(void *)(v27 + 8 * v10);
    ++v7;
    if (v11) {
      goto LABEL_24;
    }
    int64_t v7 = v10 + 1;
    if (v10 + 1 >= v6) {
      goto LABEL_32;
    }
    unint64_t v11 = *(void *)(v27 + 8 * v7);
    if (v11) {
      goto LABEL_24;
    }
    int64_t v7 = v10 + 2;
    if (v10 + 2 >= v6) {
      goto LABEL_32;
    }
    unint64_t v11 = *(void *)(v27 + 8 * v7);
    if (v11) {
      goto LABEL_24;
    }
    int64_t v7 = v10 + 3;
    if (v10 + 3 >= v6) {
      goto LABEL_32;
    }
    unint64_t v11 = *(void *)(v27 + 8 * v7);
    if (v11) {
      goto LABEL_24;
    }
    int64_t v7 = v10 + 4;
    if (v10 + 4 >= v6) {
      goto LABEL_32;
    }
    unint64_t v11 = *(void *)(v27 + 8 * v7);
    if (v11)
    {
LABEL_24:
      unint64_t v5 = (v11 - 1) & v11;
      for (unint64_t i = __clz(__rbit64(v11)) + (v7 << 6); ; unint64_t i = v8 | (v7 << 6))
      {
        char v13 = (uint64_t *)(*(void *)(v2 + 48) + 16 * i);
        uint64_t v14 = *v13;
        uint64_t v15 = v13[1];
        uint64_t v16 = self;
        swift_bridgeObjectRetain();
        id v17 = objc_msgSend(v16, sel_sharedInstance);
        id v18 = objc_msgSend(v17, sel_ctSubscriptionInfo);

        if (v18)
        {
          uint64_t v19 = (void *)sub_1A09F3DE8();
          id v20 = objc_msgSend(v18, sel___im_subscriptionContextForForSimID_, v19);

          if (v20) {
            goto LABEL_5;
          }
        }
        swift_bridgeObjectRetain();
        unint64_t v21 = sub_1A087AAA4(v14, v15);
        char v23 = v22;
        swift_bridgeObjectRelease();
        if ((v23 & 1) == 0)
        {
LABEL_5:
          swift_bridgeObjectRelease();
          if (!v5) {
            goto LABEL_7;
          }
        }
        else
        {
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v25 = *a1;
          uint64_t v28 = *a1;
          *a1 = 0x8000000000000000;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            sub_1A09E072C();
            uint64_t v25 = v28;
          }
          swift_bridgeObjectRelease();
          uint64_t v26 = *(void **)(*(void *)(v25 + 56) + 8 * v21);
          sub_1A09DFAB8(v21, v25);
          *a1 = v25;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

          if (!v5) {
            goto LABEL_7;
          }
        }
LABEL_6:
        unint64_t v8 = __clz(__rbit64(v5));
        v5 &= v5 - 1;
      }
    }
    int64_t v12 = v10 + 5;
    if (v12 < v6)
    {
      unint64_t v11 = *(void *)(v27 + 8 * v12);
      if (v11)
      {
        int64_t v7 = v12;
        goto LABEL_24;
      }
      while (1)
      {
        int64_t v7 = v12 + 1;
        if (__OFADD__(v12, 1)) {
          goto LABEL_36;
        }
        if (v7 >= v6) {
          break;
        }
        unint64_t v11 = *(void *)(v27 + 8 * v7);
        ++v12;
        if (v11) {
          goto LABEL_24;
        }
      }
    }
  }
LABEL_32:

  swift_release();
}

char *IMCTRCSUtilitiesManager.init(delegate:)(uint64_t a1, uint64_t a2)
{
  uint64_t ObjectType = swift_getObjectType();
  int64_t v6 = sub_1A0874B0C(a1, v2, ObjectType, a2);
  swift_unknownObjectRelease();
  return v6;
}

uint64_t sub_1A087361C(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR___IMCTRCSUtilitiesManager_delegate;
  if (!MEMORY[0x1A6228D10](v1 + OBJC_IVAR___IMCTRCSUtilitiesManager_delegate))
  {
LABEL_15:
    char v9 = 0;
    return v9 & 1;
  }
  uint64_t v4 = *(void *)(v3 + 8);
  uint64_t ObjectType = swift_getObjectType();
  char v6 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(a1, ObjectType, v4);
  swift_unknownObjectRelease();
  if (!MEMORY[0x1A6228D10](v3))
  {
    if (qword_1EB4A5A50 != -1) {
      swift_once();
    }
    uint64_t v16 = sub_1A09F39E8();
    sub_1A078510C(v16, (uint64_t)qword_1EB4A5A30);
    id v17 = sub_1A09F39C8();
    os_log_type_t v18 = sub_1A09F4368();
    if (os_log_type_enabled(v17, v18))
    {
      uint64_t v19 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v19 = 0;
      _os_log_impl(&dword_1A0772000, v17, v18, "Delegate is not set on class.", v19, 2u);
      MEMORY[0x1A6228C20](v19, -1, -1);
    }

    goto LABEL_15;
  }
  uint64_t v7 = *(void *)(v3 + 8);
  uint64_t v8 = swift_getObjectType();
  LOBYTE(v7) = (*(uint64_t (**)(unint64_t, unint64_t, unint64_t, unint64_t, void, uint64_t, uint64_t))(v7 + 88))(0xD000000000000013, 0x80000001A0A30C80, 0xD000000000000013, 0x80000001A0A31220, 0, v8, v7);
  swift_unknownObjectRelease();
  char v9 = (v6 | v7) ^ 1;
  if ((v7 & 1) == 0)
  {
    if (qword_1EB4A5A50 != -1) {
      swift_once();
    }
    uint64_t v10 = sub_1A09F39E8();
    sub_1A078510C(v10, (uint64_t)qword_1EB4A5A30);
    unint64_t v11 = sub_1A09F39C8();
    os_log_type_t v12 = sub_1A09F4368();
    if (os_log_type_enabled(v11, v12))
    {
      char v13 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)char v13 = 67109120;
      sub_1A09F4528();
      _os_log_impl(&dword_1A0772000, v11, v12, "Clearing first time RCS. Requires first time on alert: %{BOOL}d", v13, 8u);
      MEMORY[0x1A6228C20](v13, -1, -1);
    }

    if (MEMORY[0x1A6228D10](v3))
    {
      uint64_t v14 = *(void *)(v3 + 8);
      uint64_t v15 = swift_getObjectType();
      (*(void (**)(uint64_t, unint64_t, unint64_t, unint64_t, unint64_t, uint64_t, uint64_t))(v14 + 96))(1, 0xD000000000000013, 0x80000001A0A30C80, 0xD000000000000013, 0x80000001A0A31220, v15, v14);
      swift_unknownObjectRelease();
    }
  }
  return v9 & 1;
}

uint64_t sub_1A0873928(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v9 = v4 + OBJC_IVAR___IMCTRCSUtilitiesManager_delegate;
  if (MEMORY[0x1A6228D10](v4 + OBJC_IVAR___IMCTRCSUtilitiesManager_delegate)
    && (uint64_t v10 = *(void *)(v9 + 8),
        uint64_t ObjectType = swift_getObjectType(),
        os_log_type_t v12 = (void *)(*(uint64_t (**)(uint64_t, unint64_t, uint64_t, unint64_t, uint64_t, uint64_t))(v10 + 72))(a3, a4, a1, a2, ObjectType, v10), swift_unknownObjectRelease(), v12))
  {
    char v13 = sub_1A087361C((uint64_t)v12);

    return v13 & 1;
  }
  else
  {
    if (qword_1EB4A5A50 != -1) {
      swift_once();
    }
    uint64_t v15 = sub_1A09F39E8();
    sub_1A078510C(v15, (uint64_t)qword_1EB4A5A30);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    uint64_t v16 = sub_1A09F39C8();
    os_log_type_t v17 = sub_1A09F4368();
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v18 = swift_slowAlloc();
      uint64_t v19 = swift_slowAlloc();
      uint64_t v23 = v19;
      *(_DWORD *)uint64_t v18 = 136315394;
      if (a2)
      {
        unint64_t v20 = a2;
      }
      else
      {
        a1 = 0x3E6C696E3CLL;
        unint64_t v20 = 0xE500000000000000;
      }
      swift_bridgeObjectRetain();
      sub_1A0785144(a1, v20, &v23);
      sub_1A09F4528();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v18 + 12) = 2080;
      if (a4) {
        uint64_t v21 = a3;
      }
      else {
        uint64_t v21 = 0x3E6C696E3CLL;
      }
      if (a4) {
        unint64_t v22 = a4;
      }
      else {
        unint64_t v22 = 0xE500000000000000;
      }
      swift_bridgeObjectRetain();
      sub_1A0785144(v21, v22, &v23);
      sub_1A09F4528();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A0772000, v16, v17, "No subscription context found for phone number %s simID %s", (uint8_t *)v18, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1A6228C20](v19, -1, -1);
      MEMORY[0x1A6228C20](v18, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
    return 0;
  }
}

uint64_t sub_1A0874020(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (v1)
  {
    uint64_t v9 = MEMORY[0x1E4FBC860];
    sub_1A07825C4(0, v1, 0);
    uint64_t v4 = a1 + 32;
    uint64_t v2 = v9;
    do
    {
      swift_bridgeObjectRetain();
      sub_1A07856F8((uint64_t *)&unk_1E94F9030);
      swift_dynamicCast();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1A07825C4(0, *(void *)(v2 + 16) + 1, 1);
        uint64_t v2 = v9;
      }
      unint64_t v6 = *(void *)(v2 + 16);
      unint64_t v5 = *(void *)(v2 + 24);
      if (v6 >= v5 >> 1)
      {
        sub_1A07825C4(v5 > 1, v6 + 1, 1);
        uint64_t v2 = v9;
      }
      *(void *)(v2 + 16) = v6 + 1;
      sub_1A07825B4(&v8, (_OWORD *)(v2 + 32 * v6 + 32));
      v4 += 8;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1A0874150(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (v1)
  {
    uint64_t v9 = MEMORY[0x1E4FBC860];
    sub_1A07825C4(0, v1, 0);
    uint64_t v2 = v9;
    uint64_t v4 = a1 + 40;
    do
    {
      swift_bridgeObjectRetain();
      swift_dynamicCast();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1A07825C4(0, *(void *)(v2 + 16) + 1, 1);
        uint64_t v2 = v9;
      }
      unint64_t v6 = *(void *)(v2 + 16);
      unint64_t v5 = *(void *)(v2 + 24);
      if (v6 >= v5 >> 1)
      {
        sub_1A07825C4(v5 > 1, v6 + 1, 1);
        uint64_t v2 = v9;
      }
      v4 += 16;
      *(void *)(v2 + 16) = v6 + 1;
      sub_1A07825B4(&v8, (_OWORD *)(v2 + 32 * v6 + 32));
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1A0874278(void *a1)
{
  if ((sub_1A0782B18(a1) & 1) == 0) {
    return 0;
  }
  v18[0] = xmmword_1EC350730;
  v18[1] = *(_OWORD *)&off_1EC350740;
  v18[2] = xmmword_1EC350750;
  sub_1A0874ED0((uint64_t)v18);
  unsigned __int8 v2 = sub_1A09274C0();
  sub_1A0874F08((uint64_t)v18);
  if ((v2 & 1) == 0)
  {
    id v8 = objc_msgSend(self, sel_sharedInstance);
    sub_1A0874150((uint64_t)&unk_1EF2BE0B8);
    uint64_t v9 = (void *)sub_1A09F4068();
    swift_bridgeObjectRelease();
    id v10 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithBool_, 0);
    id v11 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithBool_, 0);
    id v12 = objc_msgSend(v8, sel_copyCarrierBundleValueForSubscriptionContext_keyHierarchy_defaultValue_valueIfError_, a1, v9, v10, v11);

    if (v12)
    {
      sub_1A09F4588();
      swift_unknownObjectRelease();
    }
    else
    {
      memset(v15, 0, sizeof(v15));
    }
    sub_1A0784BA0((uint64_t)v15, (uint64_t)v16);
    if (v17)
    {
      sub_1A078231C(0, (unint64_t *)&qword_1EB4A59B8);
      if (swift_dynamicCast())
      {
        id v7 = objc_msgSend(v14, sel_BOOLValue);

        return (uint64_t)v7;
      }
    }
    else
    {
      sub_1A0783C7C((uint64_t)v16);
    }
    return 0;
  }
  if (qword_1EB4A5A50 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_1A09F39E8();
  sub_1A078510C(v3, (uint64_t)qword_1EB4A5A30);
  uint64_t v4 = sub_1A09F39C8();
  os_log_type_t v5 = sub_1A09F4358();
  if (os_log_type_enabled(v4, v5))
  {
    unint64_t v6 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v6 = 0;
    _os_log_impl(&dword_1A0772000, v4, v5, "Forcing RBM enabled due to override", v6, 2u);
    MEMORY[0x1A6228C20](v6, -1, -1);
  }

  return 1;
}

uint64_t sub_1A087455C(void *a1)
{
  if (!a1) {
    goto LABEL_5;
  }
  uint64_t v3 = v1 + OBJC_IVAR___IMCTRCSUtilitiesManager_delegate;
  if (!MEMORY[0x1A6228D10](v1 + OBJC_IVAR___IMCTRCSUtilitiesManager_delegate)) {
    goto LABEL_5;
  }
  uint64_t v4 = *(void *)(v3 + 8);
  swift_getObjectType();
  os_log_type_t v5 = *(uint64_t (**)(void))(v4 + 56);
  id v6 = a1;
  LOBYTE(v4) = v5();
  swift_unknownObjectRelease();

  if (v4)
  {
    unsigned __int8 v7 = 1;
  }
  else
  {
LABEL_5:
    v9[0] = xmmword_1EC350760;
    v9[1] = *(_OWORD *)&off_1EC350770;
    void v9[2] = xmmword_1EC350780;
    sub_1A0874ED0((uint64_t)v9);
    unsigned __int8 v7 = sub_1A09274C0();
    sub_1A0874F08((uint64_t)v9);
  }
  return v7 & 1;
}

void __swiftcall IMCTRCSUtilitiesManager.init()(IMCTRCSUtilitiesManager *__return_ptr retstr)
{
  id v1 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());

  objc_msgSend(v1, sel_init);
}

id IMCTRCSUtilitiesManager.init()()
{
  *(void *)&v0[OBJC_IVAR___IMCTRCSUtilitiesManager_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  v2.receiver = v0;
  v2.super_class = (Class)IMCTRCSUtilitiesManager;
  return objc_msgSendSuper2(&v2, sel_init);
}

void sub_1A0874814(uint64_t a1)
{
  uint64_t v2 = a1 + 64;
  uint64_t v3 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v4 = -1;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  unint64_t v5 = v4 & *(void *)(a1 + 64);
  int64_t v6 = (unint64_t)(v3 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v7 = 0;
  while (v5)
  {
    unint64_t v8 = __clz(__rbit64(v5));
    v5 &= v5 - 1;
    unint64_t v9 = v8 | (v7 << 6);
LABEL_23:
    char v13 = *(void **)(*(void *)(a1 + 56) + 8 * v9);
    if (v13)
    {
      id v14 = v13;
      id v15 = objc_msgSend(v14, sel_operationStatus);
      if (v15)
      {
        uint64_t v16 = v15;
        if (!objc_msgSend(v15, sel_switchState) || objc_msgSend(v16, sel_switchState) == (id)1)
        {
          swift_release();

          return;
        }
        if (objc_msgSend(v16, sel_switchState) == (id)-1)
        {
          unsigned int v17 = objc_msgSend(v14, sel_featureEnabledByDefault);

          if (v17)
          {
LABEL_30:
            swift_release();
            return;
          }
        }
        else
        {
        }
      }
      else
      {
      }
    }
  }
  int64_t v10 = v7 + 1;
  if (__OFADD__(v7, 1))
  {
    __break(1u);
    goto LABEL_34;
  }
  if (v10 >= v6) {
    goto LABEL_30;
  }
  unint64_t v11 = *(void *)(v2 + 8 * v10);
  ++v7;
  if (v11) {
    goto LABEL_22;
  }
  int64_t v7 = v10 + 1;
  if (v10 + 1 >= v6) {
    goto LABEL_30;
  }
  unint64_t v11 = *(void *)(v2 + 8 * v7);
  if (v11) {
    goto LABEL_22;
  }
  int64_t v7 = v10 + 2;
  if (v10 + 2 >= v6) {
    goto LABEL_30;
  }
  unint64_t v11 = *(void *)(v2 + 8 * v7);
  if (v11) {
    goto LABEL_22;
  }
  int64_t v7 = v10 + 3;
  if (v10 + 3 >= v6) {
    goto LABEL_30;
  }
  unint64_t v11 = *(void *)(v2 + 8 * v7);
  if (v11)
  {
LABEL_22:
    unint64_t v5 = (v11 - 1) & v11;
    unint64_t v9 = __clz(__rbit64(v11)) + (v7 << 6);
    goto LABEL_23;
  }
  int64_t v12 = v10 + 4;
  if (v12 >= v6) {
    goto LABEL_30;
  }
  unint64_t v11 = *(void *)(v2 + 8 * v12);
  if (v11)
  {
    int64_t v7 = v12;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v7 = v12 + 1;
    if (__OFADD__(v12, 1)) {
      break;
    }
    if (v7 >= v6) {
      goto LABEL_30;
    }
    unint64_t v11 = *(void *)(v2 + 8 * v7);
    ++v12;
    if (v11) {
      goto LABEL_22;
    }
  }
LABEL_34:
  __break(1u);
}

id sub_1A0874A28(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  id v6 = objc_msgSend(self, sel_sharedInstance);
  id v7 = objc_msgSend(v6, sel_ctSubscriptionInfo);

  if (!v7) {
    return 0;
  }
  if (a2) {
    a2 = (void *)sub_1A09F3DE8();
  }
  if (a4) {
    a4 = (void *)sub_1A09F3DE8();
  }
  id v8 = objc_msgSend(v7, sel___im_subscriptionContextForForSimID_phoneNumber_, a2, a4);

  return v8;
}

char *sub_1A0874B0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v5 = (char *)objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  *(void *)&v5[OBJC_IVAR___IMCTRCSUtilitiesManager_delegate + 8] = a4;
  swift_unknownObjectWeakAssign();
  return v5;
}

uint64_t dispatch thunk of IMCTRCSUtilitiesManagerDelegate.registerServiceCapabilityNotifications()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of IMCTRCSUtilitiesManagerDelegate.enabledByDefault(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of IMCTRCSUtilitiesManagerDelegate.enabled(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of IMCTRCSUtilitiesManagerDelegate.privateIdentity(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of IMCTRCSUtilitiesManagerDelegate.supported(phoneNumber:simID:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 40))();
}

uint64_t dispatch thunk of IMCTRCSUtilitiesManagerDelegate.revokeInterval(phoneNumber:simID:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 48))();
}

uint64_t dispatch thunk of IMCTRCSUtilitiesManagerDelegate.networkSupportsInterworking(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 56))();
}

uint64_t dispatch thunk of IMCTRCSUtilitiesManagerDelegate.subscriptionsWithRCSSupport()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t dispatch thunk of IMCTRCSUtilitiesManagerDelegate.subscriptionContextFor(forSimID:phoneNumber:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 72))();
}

uint64_t dispatch thunk of IMCTRCSUtilitiesManagerDelegate.copyCarrierBundleValue(for:keyHierarchy:defaultValue:valueIfError:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 80))();
}

uint64_t dispatch thunk of IMCTRCSUtilitiesManagerDelegate.getBoolFromDomain(_:forKey:defaultValue:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 88))();
}

uint64_t dispatch thunk of IMCTRCSUtilitiesManagerDelegate.setBool(_:forDomain:forKey:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 96))();
}

uint64_t type metadata accessor for IMCTRCSUtilitiesManager(uint64_t a1)
{
  return sub_1A078231C(a1, (unint64_t *)&unk_1E94F9018);
}

uint64_t destroy for IMCTRCSUtilitiesManagerLiveDelegate.State(uint64_t a1)
{
  swift_bridgeObjectRelease();

  return swift_release();
}

void *_s17IMSharedUtilities35IMCTRCSUtilitiesManagerLiveDelegateC5StateVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = (void *)a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  id v4 = v3;
  swift_retain();
  return a1;
}

void *assignWithCopy for IMCTRCSUtilitiesManagerLiveDelegate.State(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  id v4 = (void *)a2[1];
  unint64_t v5 = (void *)a1[1];
  a1[1] = v4;
  id v6 = v4;

  a1[2] = a2[2];
  swift_retain();
  swift_release();
  return a1;
}

__n128 initializeWithTake for IMCTRCSUtilitiesManagerLiveDelegate.State(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for IMCTRCSUtilitiesManagerLiveDelegate.State(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  id v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;

  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for IMCTRCSUtilitiesManagerLiveDelegate.State(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for IMCTRCSUtilitiesManagerLiveDelegate.State(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + _Block_object_dispose(&a9, 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t sub_1A0874E6C()
{
  id v1 = *(void (**)(uint64_t))(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 32) + 24;
  swift_beginAccess();
  v1(v2);
  return swift_endAccess();
}

uint64_t sub_1A0874ED0(uint64_t a1)
{
  return a1;
}

uint64_t sub_1A0874F08(uint64_t a1)
{
  return a1;
}

BOOL sub_1A0874F40(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  BOOL v27 = 1;
  id v8 = self;
  id v9 = objc_msgSend(v8, sel_sharedInstance);
  id v10 = objc_msgSend(v9, sel_ctSubscriptionInfo);

  if (!v10) {
    goto LABEL_13;
  }
  if (a4)
  {
    unint64_t v11 = (void *)sub_1A09F3DE8();
    if (a2)
    {
LABEL_4:
      int64_t v12 = (void *)sub_1A09F3DE8();
      goto LABEL_7;
    }
  }
  else
  {
    unint64_t v11 = 0;
    if (a2) {
      goto LABEL_4;
    }
  }
  int64_t v12 = 0;
LABEL_7:
  id v13 = objc_msgSend(v10, sel___im_subscriptionContextOrDefaultForForSimID_phoneNumber_, v11, v12);

  if (v13)
  {
    id v14 = objc_msgSend(v8, sel_sharedInstance);
    id v15 = objc_msgSend(v14, sel_rcsConfigurationForSubscriptionContext_, v13);

    if (v15)
    {
      id v16 = objc_msgSend(v15, sel_groupChatCapabilites);

      if (v16) {
      BOOL v27 = v16 != 0;
      }
    }
    else
    {
    }
  }
LABEL_13:
  if (qword_1EB4A5A50 != -1) {
    swift_once();
  }
  uint64_t v17 = sub_1A09F39E8();
  sub_1A078510C(v17, (uint64_t)qword_1EB4A5A30);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v18 = sub_1A09F39C8();
  os_log_type_t v19 = sub_1A09F4358();
  if (os_log_type_enabled(v18, v19))
  {
    uint64_t v20 = swift_slowAlloc();
    uint64_t v21 = swift_slowAlloc();
    v26[0] = v21;
    *(_DWORD *)uint64_t v20 = 136315650;
    if (a2)
    {
      unint64_t v22 = a2;
    }
    else
    {
      a1 = 0x3E6C696E3CLL;
      unint64_t v22 = 0xE500000000000000;
    }
    swift_bridgeObjectRetain();
    sub_1A0785144(a1, v22, v26);
    sub_1A09F4528();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v20 + 12) = 2080;
    if (a4) {
      uint64_t v23 = a3;
    }
    else {
      uint64_t v23 = 0x3E6C696E3CLL;
    }
    if (a4) {
      unint64_t v24 = a4;
    }
    else {
      unint64_t v24 = 0xE500000000000000;
    }
    swift_bridgeObjectRetain();
    sub_1A0785144(v23, v24, v26);
    sub_1A09F4528();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v20 + 22) = 1024;
    sub_1A09F4528();
    _os_log_impl(&dword_1A0772000, v18, v19, "Groups enabled for phone number %s simID %s: %{BOOL}d", (uint8_t *)v20, 0x1Cu);
    swift_arrayDestroy();
    MEMORY[0x1A6228C20](v21, -1, -1);
    MEMORY[0x1A6228C20](v20, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  swift_beginAccess();
  return v27;
}

uint64_t sub_1A087531C(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v28 = 0x7FFFFFFFFFFFFFFFLL;
  id v8 = self;
  id v9 = objc_msgSend(v8, sel_sharedInstance);
  id v10 = objc_msgSend(v9, sel_ctSubscriptionInfo);

  if (v10)
  {
    unint64_t v11 = a4 ? (void *)sub_1A09F3DE8() : 0;
    int64_t v12 = (void *)sub_1A09F3DE8();
    id v13 = objc_msgSend(v10, sel___im_subscriptionContextOrDefaultForForSimID_phoneNumber_, v11, v12);

    if (v13)
    {
      id v14 = objc_msgSend(v8, sel_sharedInstance);
      id v15 = objc_msgSend(v14, sel_rcsConfigurationForSubscriptionContext_, v13);

      if (v15)
      {
        id v16 = objc_msgSend(v15, sel_groupChatCapabilites);
        id v17 = v16;
        if (v16)
        {
          id v18 = objc_msgSend(v16, sel_maxGroupSize);

          if (v18)
          {
            id v17 = objc_msgSend(v18, sel_integerValue);
          }
          else
          {
            id v17 = 0;
          }
        }

        uint64_t v28 = (uint64_t)v17;
      }
      else
      {
      }
    }
  }
  if (qword_1EB4A5A50 != -1) {
    swift_once();
  }
  uint64_t v19 = sub_1A09F39E8();
  sub_1A078510C(v19, (uint64_t)qword_1EB4A5A30);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v20 = sub_1A09F39C8();
  os_log_type_t v21 = sub_1A09F4358();
  if (os_log_type_enabled(v20, v21))
  {
    uint64_t v22 = swift_slowAlloc();
    uint64_t v23 = swift_slowAlloc();
    v27[0] = v23;
    *(_DWORD *)uint64_t v22 = 136315650;
    swift_bridgeObjectRetain();
    sub_1A0785144(a1, a2, v27);
    sub_1A09F4528();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v22 + 12) = 2080;
    if (a4) {
      uint64_t v24 = a3;
    }
    else {
      uint64_t v24 = 0x3E6C696E3CLL;
    }
    if (a4) {
      unint64_t v25 = a4;
    }
    else {
      unint64_t v25 = 0xE500000000000000;
    }
    swift_bridgeObjectRetain();
    sub_1A0785144(v24, v25, v27);
    sub_1A09F4528();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v22 + 22) = 2048;
    sub_1A09F4528();
    _os_log_impl(&dword_1A0772000, v20, v21, "Max group size for phone number %s simID %s: %ld", (uint8_t *)v22, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x1A6228C20](v23, -1, -1);
    MEMORY[0x1A6228C20](v22, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  swift_beginAccess();
  return v28;
}

uint64_t sub_1A08756FC(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  unsigned __int8 v35 = 1;
  if (IMSharedHelperRetrieveSimDetailsFromTelephony())
  {
    id v8 = self;
    id v9 = objc_msgSend(v8, sel_sharedInstance);
    id v10 = objc_msgSend(v9, sel_ctSubscriptionInfo);

    if (v10)
    {
      unint64_t v11 = a4 ? (void *)sub_1A09F3DE8() : 0;
      int64_t v12 = (void *)sub_1A09F3DE8();
      id v13 = objc_msgSend(v10, sel___im_subscriptionContextOrDefaultForForSimID_phoneNumber_, v11, v12);

      if (v13)
      {
        id v14 = objc_msgSend(v8, sel_sharedInstance);
        sub_1A07856F8(&qword_1EB4A5BE8);
        uint64_t v15 = swift_allocObject();
        *(_OWORD *)(v15 + 16) = xmmword_1A0A081A0;
        uint64_t v16 = MEMORY[0x1E4FBB1A0];
        *(void *)(v15 + 32) = 5456722;
        *(void *)(v15 + 40) = 0xE300000000000000;
        *(void *)(v15 + 8_Block_object_dispose(&a9, 8) = v16;
        *(void *)(v15 + 56) = v16;
        *(void *)(v15 + 64) = 0xD00000000000001CLL;
        *(void *)(v15 + 72) = 0x80000001A0A31200;
        id v17 = (void *)sub_1A09F4068();
        swift_bridgeObjectRelease();
        id v18 = (void *)sub_1A09F40F8();
        uint64_t v19 = (void *)sub_1A09F40F8();
        id v20 = objc_msgSend(v14, sel_copyCarrierBundleValueForSubscriptionContext_keyHierarchy_defaultValue_valueIfError_, v13, v17, v18, v19);

        if (v20)
        {
          sub_1A09F4588();

          swift_unknownObjectRelease();
        }
        else
        {

          memset(v33, 0, sizeof(v33));
        }
        sub_1A0784BA0((uint64_t)v33, (uint64_t)v34);
        if (v34[3])
        {
          if (swift_dynamicCast())
          {
            char v21 = v32;
LABEL_15:
            unsigned __int8 v35 = v21;
            goto LABEL_16;
          }
        }
        else
        {
          sub_1A0783C7C((uint64_t)v34);
        }
        char v21 = 1;
        goto LABEL_15;
      }
    }
  }
LABEL_16:
  uint64_t v31 = a1;
  if (qword_1EB4A5A50 != -1) {
    swift_once();
  }
  uint64_t v22 = sub_1A09F39E8();
  sub_1A078510C(v22, (uint64_t)qword_1EB4A5A30);
  int v23 = v35;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v24 = sub_1A09F39C8();
  os_log_type_t v25 = sub_1A09F4368();
  if (os_log_type_enabled(v24, v25))
  {
    uint64_t v26 = swift_slowAlloc();
    uint64_t v27 = swift_slowAlloc();
    v34[0] = v27;
    *(_DWORD *)uint64_t v26 = 136446978;
    *(void *)&v33[0] = sub_1A0785144(0xD000000000000031, 0x80000001A0A311C0, v34);
    sub_1A09F4528();
    *(_WORD *)(v26 + 12) = 1024;
    LODWORD(v33[0]) = v23;
    sub_1A09F4528();
    *(_WORD *)(v26 + 1_Block_object_dispose(&a9, 8) = 2080;
    swift_bridgeObjectRetain();
    *(void *)&v33[0] = sub_1A0785144(v31, a2, v34);
    sub_1A09F4528();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v26 + 2_Block_object_dispose(&a9, 8) = 2080;
    if (a4) {
      uint64_t v28 = a3;
    }
    else {
      uint64_t v28 = 0x3E6C696E3CLL;
    }
    if (a4) {
      unint64_t v29 = a4;
    }
    else {
      unint64_t v29 = 0xE500000000000000;
    }
    swift_bridgeObjectRetain();
    *(void *)&v33[0] = sub_1A0785144(v28, v29, v34);
    sub_1A09F4528();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A0772000, v24, v25, "%{public}s resolved %{BOOL}d phoneNumber %s simID %s", (uint8_t *)v26, 0x26u);
    swift_arrayDestroy();
    MEMORY[0x1A6228C20](v27, -1, -1);
    MEMORY[0x1A6228C20](v26, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  swift_beginAccess();
  return v35;
}

uint64_t sub_1A0875BDC(uint64_t a1)
{
  return a1;
}

void sub_1A0875C04(uint64_t *a1)
{
  sub_1A0872F34(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void **)(v1 + 32));
}

uint64_t sub_1A0875C10(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1A07856F8(&qword_1EB4A58F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1A0875C78(void *a1@<X0>, void *a2@<X8>)
{
  sub_1A0870E3C(a1, v2[2], v2[3], v2[4], a2);
}

uint64_t sub_1A0875C84@<X0>(void *a1@<X8>)
{
  return sub_1A0875C9C(a1);
}

uint64_t sub_1A0875C9C@<X0>(void *a1@<X8>)
{
  void (*v3)(uint64_t *__return_ptr, uint64_t);
  uint64_t v4;
  uint64_t result;
  uint64_t v6;

  uint64_t v3 = *(void (**)(uint64_t *__return_ptr, uint64_t))(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 32) + 24;
  swift_beginAccess();
  v3(&v6, v4);
  __n128 result = swift_endAccess();
  *a1 = v6;
  return result;
}

void destroy for MessageReceivedForAccountWithPropertiesBroadcast(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void **)(a1 + 80);
}

uint64_t initializeWithCopy for MessageReceivedForAccountWithPropertiesBroadcast(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + _Block_object_dispose(&a9, 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = v4;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 4_Block_object_dispose(&a9, 8) = v5;
  uint64_t v6 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v6;
  id v7 = *(void **)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v8 = v7;
  return a1;
}

uint64_t assignWithCopy for MessageReceivedForAccountWithPropertiesBroadcast(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + _Block_object_dispose(&a9, 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 4_Block_object_dispose(&a9, 8) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void **)(a2 + 80);
  uint64_t v5 = *(void **)(a1 + 80);
  *(void *)(a1 + 80) = v4;
  id v6 = v4;

  return a1;
}

__n128 initializeWithTake for MessageReceivedForAccountWithPropertiesBroadcast(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 64);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(_OWORD *)(a1 + 4_Block_object_dispose(&a9, 8) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t assignWithTake for MessageReceivedForAccountWithPropertiesBroadcast(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + _Block_object_dispose(&a9, 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = v5;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 56);
  *(void *)(a1 + 4_Block_object_dispose(&a9, 8) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v6;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRelease();
  id v7 = *(void **)(a1 + 80);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);

  return a1;
}

uint64_t getEnumTagSinglePayload for MessageReceivedForAccountWithPropertiesBroadcast(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 88)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MessageReceivedForAccountWithPropertiesBroadcast(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = 0u;
    *(_OWORD *)(result + _Block_object_dispose(&a9, 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 8_Block_object_dispose(&a9, 8) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + _Block_object_dispose(&a9, 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 8_Block_object_dispose(&a9, 8) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MessageReceivedForAccountWithPropertiesBroadcast()
{
  return &type metadata for MessageReceivedForAccountWithPropertiesBroadcast;
}

uint64_t destroy for MessagesReceivedForAccountWithPropertiesBroadcast()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for MessagesReceivedForAccountWithPropertiesBroadcast(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + _Block_object_dispose(&a9, 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = v4;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 4_Block_object_dispose(&a9, 8) = v5;
  uint64_t v6 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v6;
  uint64_t v7 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v7;
  *(void *)(a1 + 8_Block_object_dispose(&a9, 8) = *(void *)(a2 + 88);
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for MessagesReceivedForAccountWithPropertiesBroadcast(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + _Block_object_dispose(&a9, 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 4_Block_object_dispose(&a9, 8) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8_Block_object_dispose(&a9, 8) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  return a1;
}

__n128 initializeWithTake for MessagesReceivedForAccountWithPropertiesBroadcast(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  __n128 result = (__n128)a2[3];
  long long v5 = a2[4];
  long long v6 = a2[5];
  *(unsigned char *)(a1 + 96) = *((unsigned char *)a2 + 96);
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  *(__n128 *)(a1 + 4_Block_object_dispose(&a9, 8) = result;
  return result;
}

uint64_t assignWithTake for MessagesReceivedForAccountWithPropertiesBroadcast(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + _Block_object_dispose(&a9, 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = v5;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 56);
  *(void *)(a1 + 4_Block_object_dispose(&a9, 8) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v6;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8_Block_object_dispose(&a9, 8) = *(void *)(a2 + 88);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  return a1;
}

uint64_t getEnumTagSinglePayload for MessagesReceivedForAccountWithPropertiesBroadcast(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 97)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MessagesReceivedForAccountWithPropertiesBroadcast(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8_Block_object_dispose(&a9, 8) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = 0u;
    *(_OWORD *)(result + _Block_object_dispose(&a9, 8) = 0u;
    *(unsigned char *)(result + 96) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 97) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + _Block_object_dispose(&a9, 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 97) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MessagesReceivedForAccountWithPropertiesBroadcast()
{
  return &type metadata for MessagesReceivedForAccountWithPropertiesBroadcast;
}

uint64_t sub_1A08763FC()
{
  uint64_t v0 = sub_1A09F39E8();
  sub_1A078D848(v0, qword_1E94F9040);
  sub_1A078510C(v0, (uint64_t)qword_1E94F9040);
  return sub_1A09F39D8();
}

uint64_t sub_1A087647C(void *a1)
{
  id v21 = a1;
  uint64_t v2 = sub_1A07856F8(&qword_1EB4A5650);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *(unsigned __int8 *)(v1 + 32);
  uint64_t v6 = (void *)sub_1A09F3DE8();
  uint64_t v7 = (void *)sub_1A09F3DE8();
  uint64_t v24 = *(void *)(v1 + 40);
  if (v24)
  {
    swift_bridgeObjectRetain();
    id v8 = (void *)sub_1A09F3CE8();
    sub_1A08787A8((uint64_t)&v24);
  }
  else
  {
    id v8 = 0;
  }
  id v9 = (void *)sub_1A09F3DE8();
  sub_1A0878700(v1 + 64, (uint64_t)v23);
  sub_1A0878700((uint64_t)v23, (uint64_t)v25);
  if (v25[1]) {
    id v10 = (void *)sub_1A09F3DE8();
  }
  else {
    id v10 = 0;
  }
  uint64_t v22 = *(void *)(v1 + 80);
  sub_1A0878768();
  swift_bridgeObjectRetain();
  unint64_t v11 = (void *)sub_1A09F4068();
  sub_1A08787A8((uint64_t)&v22);
  int64_t v12 = (void *)sub_1A09F4068();
  LOBYTE(v19) = *(unsigned char *)(v1 + 96);
  objc_msgSend(v21, sel_account_chat_style_chatProperties_groupID_chatPersonCentricID_messagesReceived_removed_messagesComingFromStorage_, v6, v7, v5, v8, v9, v10, v11, v12, v19);

  uint64_t v13 = sub_1A09F41C8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v4, 1, 1, v13);
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = 0;
  *(void *)(v14 + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = 0;
  long long v15 = *(_OWORD *)(v1 + 80);
  *(_OWORD *)(v14 + 96) = *(_OWORD *)(v1 + 64);
  *(_OWORD *)(v14 + 112) = v15;
  *(unsigned char *)(v14 + 12_Block_object_dispose(&a9, 8) = *(unsigned char *)(v1 + 96);
  long long v16 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)(v14 + 32) = *(_OWORD *)v1;
  *(_OWORD *)(v14 + 4_Block_object_dispose(&a9, 8) = v16;
  long long v17 = *(_OWORD *)(v1 + 48);
  *(_OWORD *)(v14 + 64) = *(_OWORD *)(v1 + 32);
  *(_OWORD *)(v14 + 80) = v17;
  sub_1A08788F0(v1);
  sub_1A08EA764((uint64_t)v4, (uint64_t)&unk_1E94F90C0, v14);
  return swift_release();
}

uint64_t sub_1A08766F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 32) = a4;
  return MEMORY[0x1F4188298](sub_1A0876710, 0, 0);
}

uint64_t sub_1A0876710()
{
  uint64_t v40 = v0;
  uint64_t v1 = (char *)*((void *)v0[4] + 10);
  v0[2] = v1;
  uint64_t v2 = (uint64_t)(v0 + 2);
  v0[5] = v1;
  if ((unint64_t)v1 >> 62)
  {
LABEL_39:
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_1A09F47B8();
    sub_1A08787A8(v2);
    if (v3) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v3 = *(void *)(((unint64_t)v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v3)
    {
LABEL_3:
      uint64_t v38 = v2;
      long long v36 = (uint64_t *)(v2 + 8);
      unint64_t v4 = (unint64_t)v1 & 0xC000000000000001;
      swift_bridgeObjectRetain_n();
      uint64_t v5 = 0;
      uint64_t v0 = &selRef_didInvokeCompletion;
      while (1)
      {
        if (v4) {
          id v6 = (id)MEMORY[0x1A6226890](v5, v1);
        }
        else {
          id v6 = *(id *)&v1[8 * v5 + 32];
        }
        uint64_t v7 = v6;
        uint64_t v8 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
          __break(1u);
          goto LABEL_39;
        }
        id v9 = objc_msgSend(v6, sel_fileTransferGUIDs);
        if (v9)
        {
          id v10 = v9;
          uint64_t v11 = sub_1A09F4078();

          uint64_t v2 = *(void *)(v11 + 16);
          swift_bridgeObjectRelease();

          if (v2)
          {
            sub_1A08787A8(v38);
            sub_1A08787A8(v38);
            if (v3 < 1)
            {
              __break(1u);
            }
            else
            {
              swift_bridgeObjectRetain_n();
              uint64_t v12 = 0;
              uint64_t v13 = (void *)MEMORY[0x1E4FBC860];
              do
              {
                if (v4) {
                  id v14 = (id)MEMORY[0x1A6226890](v12, v1);
                }
                else {
                  id v14 = *(id *)&v1[8 * v12 + 32];
                }
                long long v15 = v14;
                id v16 = objc_msgSend(v14, sel_guid, v36);
                if (v16)
                {
                  long long v17 = v16;
                  uint64_t v18 = sub_1A09F3E18();
                  uint64_t v20 = v19;

                  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                    uint64_t v13 = sub_1A0891400(0, v13[2] + 1, 1, v13);
                  }
                  unint64_t v22 = v13[2];
                  unint64_t v21 = v13[3];
                  if (v22 >= v21 >> 1) {
                    uint64_t v13 = sub_1A0891400((void *)(v21 > 1), v22 + 1, 1, v13);
                  }
                  void v13[2] = v22 + 1;
                  int v23 = &v13[2 * v22];
                  uint64_t v23[4] = v18;
                  v23[5] = v20;
                }
                else
                {
                }
                ++v12;
              }
              while (v3 != v12);
              sub_1A08787A8(v38);
              sub_1A08787A8(v38);
              if (qword_1E94F8498 == -1)
              {
LABEL_30:
                uint64_t v26 = sub_1A09F39E8();
                sub_1A078510C(v26, (uint64_t)qword_1E94F9040);
                swift_bridgeObjectRetain();
                uint64_t v27 = sub_1A09F39C8();
                os_log_type_t v28 = sub_1A09F4388();
                if (os_log_type_enabled(v27, v28))
                {
                  unint64_t v29 = (uint8_t *)swift_slowAlloc();
                  uint64_t v30 = swift_slowAlloc();
                  uint64_t v39 = v30;
                  *(_DWORD *)unint64_t v29 = 136315138;
                  uint64_t v31 = swift_bridgeObjectRetain();
                  uint64_t v32 = MEMORY[0x1A6226250](v31, MEMORY[0x1E4FBB1A0]);
                  unint64_t v34 = v33;
                  swift_bridgeObjectRelease();
                  *long long v36 = sub_1A0785144(v32, v34, &v39);
                  sub_1A09F4528();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease_n();
                  _os_log_impl(&dword_1A0772000, v27, v28, "MessagesReceivedForAccountWithPropertiesBroadcast: kicking off batch attachment download for incoming messages with attachments. Message guids: %s", v29, 0xCu);
                  swift_arrayDestroy();
                  MEMORY[0x1A6228C20](v30, -1, -1);
                  MEMORY[0x1A6228C20](v29, -1, -1);
                }
                else
                {
                  swift_bridgeObjectRelease_n();
                }

                if (qword_1E94F8658 != -1) {
                  swift_once();
                }
                uint64_t v35 = qword_1E94FE320;
                return MEMORY[0x1F4188298](sub_1A0876BCC, v35, 0);
              }
            }
            swift_once();
            goto LABEL_30;
          }
        }
        else
        {
        }
        ++v5;
        if (v8 == v3)
        {
          sub_1A08787A8(v38);
          sub_1A08787A8(v38);
          uint64_t v0 = v37;
          break;
        }
      }
    }
  }
  uint64_t v24 = (uint64_t (*)(void))v0[1];
  return v24();
}

uint64_t sub_1A0876BCC()
{
  if (qword_1E94F8660 != -1) {
    swift_once();
  }
  return MEMORY[0x1F4188298](sub_1A0876C5C, 0, 0);
}

uint64_t sub_1A0876C5C()
{
  return MEMORY[0x1F4188298](sub_1A0876C7C, qword_1E94FE320, 0);
}

uint64_t sub_1A0876C7C()
{
  *(void *)(v0 + 4_Block_object_dispose(&a9, 8) = off_1E94FE328;
  return MEMORY[0x1F4188298](sub_1A0876CA4, 0, 0);
}

uint64_t sub_1A0876CA4()
{
  uint64_t v1 = *(void *)(v0 + 40);
  swift_bridgeObjectRetain();
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 56) = v2;
  void *v2 = v0;
  v2[1] = sub_1A0876D54;
  return sub_1A09D2048(v1, 2);
}

uint64_t sub_1A0876D54()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *v1;
  *(void *)(*v1 + 64) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x1F4188298](sub_1A0876EB0, 0, 0);
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_1A08787A8(v2 + 16);
    uint64_t v4 = *(uint64_t (**)(void))(v3 + 8);
    return v4();
  }
}

uint64_t sub_1A0876EB0()
{
  sub_1A08787A8(v0 + 16);
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

unint64_t sub_1A0876F14(char a1)
{
  unint64_t result = 0x55746E756F636361;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6E65644974616863;
      break;
    case 2:
      unint64_t result = 0x6C79745374616863;
      break;
    case 3:
      unint64_t result = 0xD000000000000012;
      break;
    case 4:
      unint64_t result = 0x444970756F7267;
      break;
    case 5:
      unint64_t result = 0x65436E6F73726570;
      break;
    case 6:
      unint64_t result = 0xD000000000000014;
      break;
    case 7:
      unint64_t result = 0x476465766F6D6572;
      break;
    case 8:
      unint64_t result = 0xD000000000000019;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A0877070(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_1A07856F8(&qword_1E94F9130);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A086F45C(a1, a1[3]);
  sub_1A0879F08();
  sub_1A09F4CC8();
  LOBYTE(v12) = 0;
  sub_1A09F4A28();
  if (!v2)
  {
    LOBYTE(v12) = 1;
    sub_1A09F4A28();
    LOBYTE(v12) = 2;
    sub_1A09F4AA8();
    uint64_t v9 = swift_bridgeObjectRetain();
    sub_1A094EEB0(v9, 3);
    swift_bridgeObjectRelease();
    LOBYTE(v12) = 4;
    sub_1A09F4A28();
    LOBYTE(v12) = 5;
    sub_1A09F4978();
    uint64_t v12 = *(void *)(v3 + 80);
    HIBYTE(v11) = 6;
    sub_1A07856F8(&qword_1E94F9118);
    sub_1A0792558(&qword_1E94F9138, &qword_1E94F9118);
    sub_1A09F4A78();
    uint64_t v12 = *(void *)(v3 + 88);
    HIBYTE(v11) = 7;
    sub_1A07856F8(&qword_1EB4A5610);
    sub_1A0879F5C(&qword_1E94F9140);
    sub_1A09F4A78();
    LOBYTE(v12) = 8;
    sub_1A09F4A38();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_1A087738C()
{
  return sub_1A0876F14(*v0);
}

uint64_t sub_1A0877394@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A0878B00(a1, a2);
  *a3 = result;
  return result;
}

void sub_1A08773BC(unsigned char *a1@<X8>)
{
  *a1 = 9;
}

uint64_t sub_1A08773C8(uint64_t a1)
{
  unint64_t v2 = sub_1A0879F08();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A0877404(uint64_t a1)
{
  unint64_t v2 = sub_1A0879F08();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A0877440()
{
  uint64_t v0 = qword_1E94F9058;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_1A0877478(void *a1)
{
  return sub_1A087647C(a1);
}

__n128 sub_1A08774C4@<Q0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1A0878F28(a1, (uint64_t)v7);
  if (!v2)
  {
    long long v5 = v7[5];
    *(_OWORD *)(a2 + 64) = v7[4];
    *(_OWORD *)(a2 + 80) = v5;
    *(unsigned char *)(a2 + 96) = v8;
    long long v6 = v7[1];
    *(_OWORD *)a2 = v7[0];
    *(_OWORD *)(a2 + 16) = v6;
    __n128 result = (__n128)v7[3];
    *(_OWORD *)(a2 + 32) = v7[2];
    *(__n128 *)(a2 + 4_Block_object_dispose(&a9, 8) = result;
  }
  return result;
}

uint64_t sub_1A0877524(void *a1)
{
  return sub_1A0877070(a1);
}

uint64_t sub_1A087753C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A08784A8(a1, a2, a3, (uint64_t (*)(void))sub_1A0877568, (uint64_t (*)(void))sub_1A08775BC);
}

unint64_t sub_1A0877568()
{
  unint64_t result = qword_1E94F9078;
  if (!qword_1E94F9078)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94F9078);
  }
  return result;
}

unint64_t sub_1A08775BC()
{
  unint64_t result = qword_1E94F9080;
  if (!qword_1E94F9080)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94F9080);
  }
  return result;
}

unint64_t sub_1A0877610(uint64_t a1)
{
  unint64_t result = sub_1A0877638();
  *(void *)(a1 + _Block_object_dispose(&a9, 8) = result;
  return result;
}

unint64_t sub_1A0877638()
{
  unint64_t result = qword_1E94F9088;
  if (!qword_1E94F9088)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94F9088);
  }
  return result;
}

uint64_t sub_1A087768C(void *a1)
{
  uint64_t v3 = sub_1A07856F8(&qword_1EB4A5650);
  MEMORY[0x1F4188790](v3 - 8);
  long long v5 = &v18[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  uint64_t v6 = *(unsigned __int8 *)(v1 + 32);
  uint64_t v7 = (void *)sub_1A09F3DE8();
  char v8 = (void *)sub_1A09F3DE8();
  uint64_t v19 = *(void *)(v1 + 40);
  if (v19)
  {
    swift_bridgeObjectRetain();
    uint64_t v9 = (void *)sub_1A09F3CE8();
    sub_1A08787A8((uint64_t)&v19);
  }
  else
  {
    uint64_t v9 = 0;
  }
  id v10 = (void *)sub_1A09F3DE8();
  sub_1A0878700(v1 + 64, (uint64_t)v18);
  sub_1A0878700((uint64_t)v18, (uint64_t)v20);
  if (v20[1]) {
    uint64_t v11 = (void *)sub_1A09F3DE8();
  }
  else {
    uint64_t v11 = 0;
  }
  objc_msgSend(a1, sel_account_chat_style_chatProperties_groupID_chatPersonCentricID_messageReceived_, v7, v8, v6, v9, v10, v11, *(void *)(v1 + 80));

  uint64_t v12 = sub_1A09F41C8();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v5, 1, 1, v12);
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = 0;
  *(void *)(v13 + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = 0;
  long long v14 = *(_OWORD *)(v1 + 48);
  *(_OWORD *)(v13 + 64) = *(_OWORD *)(v1 + 32);
  *(_OWORD *)(v13 + 80) = v14;
  *(_OWORD *)(v13 + 96) = *(_OWORD *)(v1 + 64);
  *(void *)(v13 + 112) = *(void *)(v1 + 80);
  long long v15 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)(v13 + 32) = *(_OWORD *)v1;
  *(_OWORD *)(v13 + 4_Block_object_dispose(&a9, 8) = v15;
  sub_1A0878A8C(v1);
  sub_1A08EA764((uint64_t)v5, (uint64_t)&unk_1E94F90D0, v13);
  return swift_release();
}

uint64_t sub_1A08778AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 64) = a4;
  return MEMORY[0x1F4188298](sub_1A08778CC, 0, 0);
}

uint64_t sub_1A08778CC()
{
  uint64_t v20 = v0;
  uint64_t v1 = *(void **)(v0[8] + 80);
  v0[9] = v1;
  id v2 = objc_msgSend(v1, sel_fileTransferGUIDs);
  if (v2
    && (uint64_t v3 = v2, v4 = sub_1A09F4078(), v3, v5 = *(void *)(v4 + 16), swift_bridgeObjectRelease(), v5))
  {
    id v6 = objc_msgSend(v1, sel_guid);
    if (v6)
    {
      uint64_t v7 = v6;
      uint64_t v8 = sub_1A09F3E18();
      unint64_t v10 = v9;
    }
    else
    {
      unint64_t v10 = 0xE400000000000000;
      uint64_t v8 = 1701736302;
    }
    if (qword_1E94F8498 != -1) {
      swift_once();
    }
    uint64_t v13 = sub_1A09F39E8();
    sub_1A078510C(v13, (uint64_t)qword_1E94F9040);
    swift_bridgeObjectRetain();
    long long v14 = sub_1A09F39C8();
    os_log_type_t v15 = sub_1A09F4388();
    if (os_log_type_enabled(v14, v15))
    {
      id v16 = (uint8_t *)swift_slowAlloc();
      uint64_t v17 = swift_slowAlloc();
      uint64_t v19 = v17;
      *(_DWORD *)id v16 = 136315138;
      swift_bridgeObjectRetain();
      v0[7] = sub_1A0785144(v8, v10, &v19);
      sub_1A09F4528();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1A0772000, v14, v15, "MessageReceivedForAccountWithPropertiesBroadcast: kicking off attachment download if necessary for incoming message with attachments. Message guid: %s.", v16, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1A6228C20](v17, -1, -1);
      MEMORY[0x1A6228C20](v16, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    if (qword_1E94F8658 != -1) {
      swift_once();
    }
    uint64_t v18 = qword_1E94FE320;
    return MEMORY[0x1F4188298](sub_1A0877BB8, v18, 0);
  }
  else
  {
    uint64_t v11 = (uint64_t (*)(void))v0[1];
    return v11();
  }
}

uint64_t sub_1A0877BB8()
{
  if (qword_1E94F8660 != -1) {
    swift_once();
  }
  return MEMORY[0x1F4188298](sub_1A0877C48, 0, 0);
}

uint64_t sub_1A0877C48()
{
  return MEMORY[0x1F4188298](sub_1A0877C68, qword_1E94FE320, 0);
}

uint64_t sub_1A0877C68()
{
  *(void *)(v0 + 80) = off_1E94FE328;
  return MEMORY[0x1F4188298](sub_1A0877C90, 0, 0);
}

uint64_t sub_1A0877C90()
{
  uint64_t v1 = (void *)v0[9];
  sub_1A07856F8(&qword_1E94F76D8);
  uint64_t inited = swift_initStackObject();
  v0[11] = inited;
  *(_OWORD *)(inited + 16) = xmmword_1A0A08240;
  *(void *)(inited + 32) = v1;
  uint64_t v6 = inited;
  sub_1A09F4098();
  v0[12] = v6;
  id v3 = v1;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[13] = v4;
  void *v4 = v0;
  v4[1] = sub_1A0877D80;
  return sub_1A09D17C4(v6);
}

uint64_t sub_1A0877D80()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 112) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x1F4188298](sub_1A0877EDC, 0, 0);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    id v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_1A0877EDC()
{
  swift_bridgeObjectRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

unint64_t sub_1A0877F40(char a1)
{
  unint64_t result = 0x55746E756F636361;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6E65644974616863;
      break;
    case 2:
      unint64_t result = 0x6C79745374616863;
      break;
    case 3:
      unint64_t result = 0xD000000000000012;
      break;
    case 4:
      unint64_t result = 0x444970756F7267;
      break;
    case 5:
      unint64_t result = 0x65436E6F73726570;
      break;
    case 6:
      unint64_t result = 0xD000000000000013;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A087805C(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_1A07856F8(&qword_1E94F90F8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1A086F45C(a1, a1[3]);
  sub_1A0879EB4();
  sub_1A09F4CC8();
  char v17 = 0;
  sub_1A09F4A28();
  if (!v2)
  {
    char v16 = 1;
    sub_1A09F4A28();
    char v15 = 2;
    sub_1A09F4AA8();
    uint64_t v9 = swift_bridgeObjectRetain();
    sub_1A094F134(v9, 3);
    swift_bridgeObjectRelease();
    char v14 = 4;
    sub_1A09F4A28();
    char v13 = 5;
    sub_1A09F4978();
    uint64_t v12 = *(void *)(v3 + 80);
    v11[15] = 6;
    sub_1A07856F8(&qword_1E94F90E8);
    sub_1A0792558(&qword_1E94F9100, &qword_1E94F90E8);
    sub_1A09F4A78();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_1A08782D0()
{
  return sub_1A0877F40(*v0);
}

uint64_t sub_1A08782D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A0879644(a1, a2);
  *a3 = result;
  return result;
}

void sub_1A0878300(unsigned char *a1@<X8>)
{
  *a1 = 7;
}

uint64_t sub_1A087830C(uint64_t a1)
{
  unint64_t v2 = sub_1A0879EB4();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A0878348(uint64_t a1)
{
  unint64_t v2 = sub_1A0879EB4();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A0878384()
{
  uint64_t v0 = qword_1E94F9068;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_1A08783BC(void *a1)
{
  return sub_1A087768C(a1);
}

double sub_1A0878408@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1A0879998(a1, (uint64_t *)v7);
  if (!v2)
  {
    long long v5 = v7[3];
    *(_OWORD *)(a2 + 32) = v7[2];
    *(_OWORD *)(a2 + 4_Block_object_dispose(&a9, 8) = v5;
    *(_OWORD *)(a2 + 64) = v7[4];
    *(void *)(a2 + 80) = v8;
    double result = *(double *)v7;
    long long v6 = v7[1];
    *(_OWORD *)a2 = v7[0];
    *(_OWORD *)(a2 + 16) = v6;
  }
  return result;
}

uint64_t sub_1A0878464(void *a1)
{
  return sub_1A087805C(a1);
}

uint64_t sub_1A087847C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A08784A8(a1, a2, a3, (uint64_t (*)(void))sub_1A08784E4, (uint64_t (*)(void))sub_1A0878538);
}

uint64_t sub_1A08784A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t (*a5)(void))
{
  *(void *)(a1 + _Block_object_dispose(&a9, 8) = a4();
  uint64_t result = a5();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1A08784E4()
{
  unint64_t result = qword_1E94F9090;
  if (!qword_1E94F9090)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94F9090);
  }
  return result;
}

unint64_t sub_1A0878538()
{
  unint64_t result = qword_1E94F9098;
  if (!qword_1E94F9098)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94F9098);
  }
  return result;
}

unint64_t sub_1A087858C(uint64_t a1)
{
  unint64_t result = sub_1A08785B4();
  *(void *)(a1 + _Block_object_dispose(&a9, 8) = result;
  return result;
}

unint64_t sub_1A08785B4()
{
  unint64_t result = qword_1E94F90A0;
  if (!qword_1E94F90A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94F90A0);
  }
  return result;
}

unint64_t sub_1A0878608(uint64_t a1)
{
  unint64_t result = sub_1A0878630();
  *(void *)(a1 + _Block_object_dispose(&a9, 8) = result;
  return result;
}

unint64_t sub_1A0878630()
{
  unint64_t result = qword_1E94F90A8;
  if (!qword_1E94F90A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94F90A8);
  }
  return result;
}

unint64_t sub_1A0878684(uint64_t a1)
{
  unint64_t result = sub_1A08786AC();
  *(void *)(a1 + _Block_object_dispose(&a9, 8) = result;
  return result;
}

unint64_t sub_1A08786AC()
{
  unint64_t result = qword_1E94F90B0;
  if (!qword_1E94F90B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_1E94F90B0);
  }
  return result;
}

uint64_t sub_1A0878700(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1A07856F8(&qword_1E94F9028);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1A0878768()
{
  unint64_t result = qword_1EB4A5C00;
  if (!qword_1EB4A5C00)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EB4A5C00);
  }
  return result;
}

uint64_t sub_1A08787A8(uint64_t a1)
{
  return a1;
}

uint64_t sub_1A08787D4()
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 129, 7);
}

uint64_t sub_1A0878844()
{
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  void *v2 = v1;
  v2[1] = sub_1A077EE54;
  v2[4] = v0 + 32;
  return MEMORY[0x1F4188298](sub_1A0876710, 0, 0);
}

uint64_t sub_1A08788F0(uint64_t a1)
{
  return a1;
}

uint64_t sub_1A0878978()
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 120, 7);
}

uint64_t sub_1A08789E0()
{
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  void *v2 = v1;
  v2[1] = sub_1A077EE58;
  void v2[8] = v0 + 32;
  return MEMORY[0x1F4188298](sub_1A08778CC, 0, 0);
}

uint64_t sub_1A0878A8C(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 80);
  swift_bridgeObjectRetain();
  id v3 = v2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1A0878B00(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x55746E756F636361 && a2 == 0xEF4449657571696ELL;
  if (v2 || (sub_1A09F4B28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E65644974616863 && a2 == 0xEE00726569666974 || (sub_1A09F4B28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6C79745374616863 && a2 == 0xE900000000000065 || (sub_1A09F4B28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001A0A31320 || (sub_1A09F4B28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x444970756F7267 && a2 == 0xE700000000000000 || (sub_1A09F4B28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x65436E6F73726570 && a2 == 0xEF4449636972746ELL || (sub_1A09F4B28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001A0A31360 || (sub_1A09F4B28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x476465766F6D6572 && a2 == 0xEC00000073444955 || (sub_1A09F4B28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x80000001A0A31380)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else
  {
    char v6 = sub_1A09F4B28();
    swift_bridgeObjectRelease();
    if (v6) {
      return 8;
    }
    else {
      return 9;
    }
  }
}

uint64_t sub_1A0878F28@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_1A07856F8(&qword_1E94F9108);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A086F45C(a1, a1[3]);
  sub_1A0879F08();
  sub_1A09F4CA8();
  if (v2)
  {
    _s17IMSharedUtilities29RemoteIntentBroadcastEncodingVwxx_0((uint64_t)a1);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    LOBYTE(v43) = 0;
    uint64_t v9 = sub_1A09F48D8();
    uint64_t v11 = v10;
    LOBYTE(v43) = 1;
    swift_bridgeObjectRetain();
    uint64_t v38 = sub_1A09F48D8();
    uint64_t v39 = v9;
    LOBYTE(v43) = 2;
    uint64_t v13 = v12;
    swift_bridgeObjectRetain();
    int v36 = sub_1A09F4958();
    uint64_t v40 = v13;
    uint64_t v14 = sub_1A094BA7C(3);
    LOBYTE(v43) = 4;
    swift_bridgeObjectRetain();
    uint64_t v33 = sub_1A09F48D8();
    uint64_t v34 = v14;
    uint64_t v35 = v11;
    LOBYTE(v43) = 5;
    uint64_t v16 = v15;
    swift_bridgeObjectRetain();
    uint64_t v17 = sub_1A09F4828();
    uint64_t v41 = v16;
    uint64_t v19 = v18;
    uint64_t v32 = v17;
    sub_1A07856F8(&qword_1E94F9118);
    char v42 = 6;
    sub_1A0792558(&qword_1E94F9120, &qword_1E94F9118);
    swift_bridgeObjectRetain();
    sub_1A09F4928();
    uint64_t v20 = v43;
    sub_1A07856F8(&qword_1EB4A5610);
    char v42 = 7;
    sub_1A0879F5C(&qword_1E94F9128);
    swift_bridgeObjectRetain();
    sub_1A09F4928();
    uint64_t v37 = v20;
    uint64_t v21 = v43;
    LOBYTE(v43) = 8;
    swift_bridgeObjectRetain();
    char v22 = sub_1A09F48E8();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    HIDWORD(v31) = v22 & 1;
    _s17IMSharedUtilities29RemoteIntentBroadcastEncodingVwxx_0((uint64_t)a1);
    swift_bridgeObjectRelease();
    uint64_t v23 = v37;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v24 = v41;
    swift_bridgeObjectRelease();
    uint64_t v25 = v34;
    swift_bridgeObjectRelease();
    uint64_t v26 = v40;
    swift_bridgeObjectRelease();
    uint64_t v27 = v35;
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)a2 = v39;
    *(void *)(a2 + _Block_object_dispose(&a9, 8) = v27;
    *(void *)(a2 + 16) = v38;
    *(void *)(a2 + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = v26;
    *(unsigned char *)(a2 + 32) = v36;
    uint64_t v29 = v33;
    *(void *)(a2 + 40) = v25;
    *(void *)(a2 + 4_Block_object_dispose(&a9, 8) = v29;
    uint64_t v30 = v32;
    *(void *)(a2 + 56) = v24;
    *(void *)(a2 + 64) = v30;
    *(void *)(a2 + 72) = v19;
    *(void *)(a2 + 80) = v23;
    *(void *)(a2 + 8_Block_object_dispose(&a9, 8) = v21;
    *(unsigned char *)(a2 + 96) = BYTE4(v31);
  }
  return result;
}

uint64_t sub_1A0879644(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x55746E756F636361 && a2 == 0xEF4449657571696ELL;
  if (v2 || (sub_1A09F4B28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E65644974616863 && a2 == 0xEE00726569666974 || (sub_1A09F4B28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6C79745374616863 && a2 == 0xE900000000000065 || (sub_1A09F4B28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001A0A31320 || (sub_1A09F4B28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x444970756F7267 && a2 == 0xE700000000000000 || (sub_1A09F4B28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x65436E6F73726570 && a2 == 0xEF4449636972746ELL || (sub_1A09F4B28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001A0A31340)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    char v6 = sub_1A09F4B28();
    swift_bridgeObjectRelease();
    if (v6) {
      return 6;
    }
    else {
      return 7;
    }
  }
}

uint64_t sub_1A0879998@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = sub_1A07856F8(&qword_1E94F90D8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A086F45C(a1, a1[3]);
  sub_1A0879EB4();
  sub_1A09F4CA8();
  if (v2)
  {
    _s17IMSharedUtilities29RemoteIntentBroadcastEncodingVwxx_0((uint64_t)a1);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    char v44 = 0;
    uint64_t v9 = sub_1A09F48D8();
    uint64_t v11 = v10;
    uint64_t v36 = v9;
    char v43 = 1;
    swift_bridgeObjectRetain();
    uint64_t v12 = sub_1A09F48D8();
    uint64_t v37 = v13;
    uint64_t v34 = v12;
    char v42 = 2;
    swift_bridgeObjectRetain();
    uint64_t v35 = 0;
    int v33 = sub_1A09F4958();
    uint64_t v14 = sub_1A094BCF8(3);
    uint64_t v31 = a2;
    uint64_t v32 = v14;
    char v41 = 4;
    swift_bridgeObjectRetain();
    uint64_t v15 = sub_1A09F48D8();
    uint64_t v17 = v16;
    uint64_t v30 = v15;
    char v40 = 5;
    swift_bridgeObjectRetain();
    uint64_t v18 = sub_1A09F4828();
    uint64_t v20 = v19;
    uint64_t v29 = v18;
    sub_1A07856F8(&qword_1E94F90E8);
    char v39 = 6;
    sub_1A0792558(&qword_1E94F90F0, &qword_1E94F90E8);
    swift_bridgeObjectRetain();
    sub_1A09F4928();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    uint64_t v21 = v38;
    swift_bridgeObjectRetain();
    uint64_t v22 = v37;
    swift_bridgeObjectRetain();
    uint64_t v23 = v32;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v24 = v21;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    _s17IMSharedUtilities29RemoteIntentBroadcastEncodingVwxx_0((uint64_t)a1);

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v26 = v31;
    *uint64_t v31 = v36;
    v26[1] = v11;
    v26[2] = v34;
    uint64_t v26[3] = v22;
    *((unsigned char *)v26 + 32) = v33;
    uint64_t v27 = v30;
    v26[5] = v23;
    v26[6] = v27;
    uint64_t v28 = v29;
    v26[7] = v17;
    v26[8] = v28;
    v26[9] = v20;
    v26[10] = (uint64_t)v24;
  }
  return result;
}

unint64_t sub_1A0879EB4()
{
  unint64_t result = qword_1E94F90E0;
  if (!qword_1E94F90E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94F90E0);
  }
  return result;
}

unint64_t sub_1A0879F08()
{
  unint64_t result = qword_1E94F9110;
  if (!qword_1E94F9110)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94F9110);
  }
  return result;
}

uint64_t sub_1A0879F5C(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1A078D800(&qword_1EB4A5610);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for MessagesReceivedForAccountWithPropertiesBroadcast.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF8) {
    goto LABEL_17;
  }
  if (a2 + 8 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 8) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 8;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 8;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 8;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 9;
  int v8 = v6 - 9;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for MessagesReceivedForAccountWithPropertiesBroadcast.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    *uint64_t result = a2 + 8;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A087A11CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 8;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MessagesReceivedForAccountWithPropertiesBroadcast.CodingKeys()
{
  return &type metadata for MessagesReceivedForAccountWithPropertiesBroadcast.CodingKeys;
}

uint64_t getEnumTagSinglePayload for MessageReceivedForAccountWithPropertiesBroadcast.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFA) {
    goto LABEL_17;
  }
  if (a2 + 6 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 6) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 6;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 7;
  int v8 = v6 - 7;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for MessageReceivedForAccountWithPropertiesBroadcast.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *uint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A087A2B0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MessageReceivedForAccountWithPropertiesBroadcast.CodingKeys()
{
  return &type metadata for MessageReceivedForAccountWithPropertiesBroadcast.CodingKeys;
}

unint64_t sub_1A087A2EC()
{
  unint64_t result = qword_1E94F9148;
  if (!qword_1E94F9148)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94F9148);
  }
  return result;
}

unint64_t sub_1A087A344()
{
  unint64_t result = qword_1E94F9150;
  if (!qword_1E94F9150)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94F9150);
  }
  return result;
}

unint64_t sub_1A087A39C()
{
  unint64_t result = qword_1E94F9158;
  if (!qword_1E94F9158)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94F9158);
  }
  return result;
}

unint64_t sub_1A087A3F4()
{
  unint64_t result = qword_1E94F9160;
  if (!qword_1E94F9160)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94F9160);
  }
  return result;
}

unint64_t sub_1A087A44C()
{
  unint64_t result = qword_1E94F9168;
  if (!qword_1E94F9168)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94F9168);
  }
  return result;
}

unint64_t sub_1A087A4A4()
{
  unint64_t result = qword_1E94F9170;
  if (!qword_1E94F9170)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94F9170);
  }
  return result;
}

uint64_t sub_1A087A50C()
{
  if (qword_1E94F84B0 != -1) {
    swift_once();
  }
  off_1E94F9178 = (_UNKNOWN *)qword_1E94F9188;

  return swift_bridgeObjectRetain();
}

void *sub_1A087A570()
{
  unint64_t result = (void *)sub_1A087A590();
  off_1E94F9180 = result;
  return result;
}

uint64_t sub_1A087A590()
{
  if (qword_1E94F84A0 != -1) {
LABEL_21:
  }
    swift_once();
  uint64_t v0 = *((void *)off_1E94F9178 + 2);
  if (v0)
  {
    uint64_t v1 = (char *)off_1E94F9178 + 32;
    swift_bridgeObjectRetain();
    int v2 = (void *)MEMORY[0x1E4FBC868];
    while (1)
    {
      long long v20 = *(_OWORD *)v1;
      uint64_t v3 = (*(uint64_t (**)(void))(*((void *)v1 + 1) + 48))();
      uint64_t v5 = v4;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      unint64_t v8 = sub_1A087AAA4(v3, v5);
      uint64_t v9 = v2[2];
      BOOL v10 = (v7 & 1) == 0;
      uint64_t v11 = v9 + v10;
      if (__OFADD__(v9, v10))
      {
        __break(1u);
LABEL_20:
        __break(1u);
        goto LABEL_21;
      }
      char v12 = v7;
      if (v2[3] >= v11)
      {
        if (isUniquelyReferenced_nonNull_native)
        {
          if (v7) {
            goto LABEL_4;
          }
        }
        else
        {
          sub_1A09E0BD8();
          if (v12) {
            goto LABEL_4;
          }
        }
      }
      else
      {
        sub_1A09DD628(v11, isUniquelyReferenced_nonNull_native);
        unint64_t v13 = sub_1A087AAA4(v3, v5);
        if ((v12 & 1) != (v14 & 1))
        {
          uint64_t result = sub_1A09F4BE8();
          __break(1u);
          return result;
        }
        unint64_t v8 = v13;
        if (v12)
        {
LABEL_4:
          *(_OWORD *)(v2[7] + 16 * v_Block_object_dispose(&a9, 8) = v20;
          goto LABEL_5;
        }
      }
      v2[(v8 >> 6) + 8] |= 1 << v8;
      uint64_t v15 = (uint64_t *)(v2[6] + 16 * v8);
      uint64_t *v15 = v3;
      v15[1] = v5;
      *(_OWORD *)(v2[7] + 16 * v_Block_object_dispose(&a9, 8) = v20;
      uint64_t v16 = v2[2];
      BOOL v17 = __OFADD__(v16, 1);
      uint64_t v18 = v16 + 1;
      if (v17) {
        goto LABEL_20;
      }
      v2[2] = v18;
      swift_bridgeObjectRetain();
LABEL_5:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v1 += 16;
      if (!--v0) {
        goto LABEL_18;
      }
    }
  }
  swift_bridgeObjectRetain();
  int v2 = (void *)MEMORY[0x1E4FBC868];
LABEL_18:
  swift_bridgeObjectRelease();
  return (uint64_t)v2;
}

uint64_t static RemoteIntentSupportedBroadcastTypes.broadcastType(for:)(uint64_t a1, uint64_t a2)
{
  if (qword_1E94F84A8 != -1) {
    swift_once();
  }
  uint64_t v4 = off_1E94F9180;
  if (!*((void *)off_1E94F9180 + 2)) {
    return 0;
  }
  swift_bridgeObjectRetain();
  unint64_t v5 = sub_1A087AAA4(a1, a2);
  if ((v6 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v7 = *(void *)(v4[7] + 16 * v5);
  swift_bridgeObjectRelease();
  return v7;
}

unint64_t sub_1A087A860()
{
  sub_1A07856F8(&qword_1E94F91A8);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1A0A08630;
  unint64_t v1 = sub_1A087B41C();
  *(void *)(v0 + 32) = &type metadata for ChatUpdatedBroadcast;
  *(void *)(v0 + 40) = v1;
  unint64_t v2 = sub_1A087B470();
  *(void *)(v0 + 4_Block_object_dispose(&a9, 8) = &type metadata for ChatPropertiesUpdatedBroadcast;
  *(void *)(v0 + 56) = v2;
  unint64_t v3 = sub_1A087B4C4();
  *(void *)(v0 + 64) = &type metadata for ChatDatabaseUpdatedStampBroadcast;
  *(void *)(v0 + 72) = v3;
  unint64_t v4 = sub_1A087B518();
  *(void *)(v0 + 80) = &type metadata for UnreadCountChangedBroadcast;
  *(void *)(v0 + 8_Block_object_dispose(&a9, 8) = v4;
  unint64_t v5 = sub_1A087B56C();
  *(void *)(v0 + 96) = &type metadata for MessagesUpdatedForServiceChatStyleBroadcast;
  *(void *)(v0 + 104) = v5;
  unint64_t v6 = sub_1A087B5C0();
  *(void *)(v0 + 112) = &type metadata for MessagesReceivedForAccountWithPropertiesBroadcast;
  *(void *)(v0 + 120) = v6;
  unint64_t v7 = sub_1A087B614();
  *(void *)(v0 + 12_Block_object_dispose(&a9, 8) = &type metadata for MessageReceivedForAccountWithPropertiesBroadcast;
  *(void *)(v0 + 136) = v7;
  unint64_t v8 = sub_1A087B668();
  *(void *)(v0 + 144) = &type metadata for MessageSentForAccountWithPropertiesBroadcast;
  *(void *)(v0 + 152) = v8;
  unint64_t v9 = sub_1A087B6BC();
  *(void *)(v0 + 160) = &type metadata for ChatLastMessageTimeStampOnLoadUpdatedBroadcast;
  *(void *)(v0 + 16_Block_object_dispose(&a9, 8) = v9;
  unint64_t v10 = sub_1A087B710();
  *(void *)(v0 + 176) = &type metadata for UpdatePendingNicknameUpdatesBroadcast;
  *(void *)(v0 + 184) = v10;
  unint64_t v11 = sub_1A087B764();
  *(void *)(v0 + 192) = &type metadata for UpdateNicknameHandlesBroadcast;
  *(void *)(v0 + 200) = v11;
  uint64_t v12 = type metadata accessor for MovedMessagesToRecentlyDeletedForChatsBroadcast();
  uint64_t v13 = sub_1A087B95C((unint64_t *)&qword_1E94F9200, (void (*)(uint64_t))type metadata accessor for MovedMessagesToRecentlyDeletedForChatsBroadcast);
  *(void *)(v0 + 20_Block_object_dispose(&a9, 8) = v12;
  *(void *)(v0 + 216) = v13;
  unint64_t v14 = sub_1A087B7B8();
  *(void *)(v0 + 2++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = &type metadata for RecoveredMessagesForChatsBroadcast;
  *(void *)(v0 + 232) = v14;
  unint64_t v15 = sub_1A087B80C();
  *(void *)(v0 + 240) = &type metadata for LastFailedMessageDateChangedBroadcast;
  *(void *)(v0 + 24_Block_object_dispose(&a9, 8) = v15;
  unint64_t v16 = sub_1A087B860();
  *(void *)(v0 + 256) = &type metadata for LoadedRecoverableMessagesMetadataBroadcast;
  *(void *)(v0 + 264) = v16;
  unint64_t v17 = sub_1A087B8B4();
  *(void *)(v0 + 272) = &type metadata for MessageUpdatedForAccountWithPropertiesBroadcast;
  *(void *)(v0 + 280) = v17;
  unint64_t v18 = sub_1A087B908();
  *(void *)(v0 + 28_Block_object_dispose(&a9, 8) = &type metadata for MessagesUpdatedForAccountWithPropertiesBroadcast;
  *(void *)(v0 + 296) = v18;
  uint64_t v19 = type metadata accessor for FileTransferExplicitDownloadSucceeded();
  uint64_t v20 = sub_1A087B95C((unint64_t *)&qword_1E94F9230, (void (*)(uint64_t))type metadata accessor for FileTransferExplicitDownloadSucceeded);
  *(void *)(v0 + 304) = v19;
  *(void *)(v0 + 312) = v20;
  unint64_t v21 = sub_1A087B9A4();
  *(void *)(v0 + 320) = &type metadata for FileTransferUpdatedWithPropertiesBroadcast;
  *(void *)(v0 + 32_Block_object_dispose(&a9, 8) = v21;
  unint64_t v22 = sub_1A087B9F8();
  *(void *)(v0 + 336) = &type metadata for ChatStatusChangedBroadcast;
  *(void *)(v0 + 344) = v22;
  unint64_t v23 = sub_1A087BA4C();
  *(void *)(v0 + 352) = &type metadata for ChatMemberStatusChangedBroadcast;
  *(void *)(v0 + 360) = v23;
  unint64_t v24 = sub_1A087BAA0();
  *(void *)(v0 + 36_Block_object_dispose(&a9, 8) = &type metadata for MessageSentForAccountWithPropertiesNotifyBroadcast;
  *(void *)(v0 + 376) = v24;
  unint64_t v25 = sub_1A087BAF4();
  *(void *)(v0 + 384) = &type metadata for ChatDisplayNameUpdatedWithSenderBroadcast;
  *(void *)(v0 + 392) = v25;
  unint64_t v26 = sub_1A087BB48();
  *(void *)(v0 + 400) = &type metadata for ChatDisplayNameUpdatedBroadcast;
  *(void *)(v0 + 40_Block_object_dispose(&a9, 8) = v26;
  unint64_t result = sub_1A087BB9C();
  *(void *)(v0 + 416) = &type metadata for GroupPhotoUpdatedBroadcast;
  *(void *)(v0 + 4++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = result;
  qword_1E94F9188 = v0;
  return result;
}

unint64_t sub_1A087AAA4(uint64_t a1, uint64_t a2)
{
  sub_1A09F4C48();
  sub_1A09F3DA8();
  uint64_t v4 = sub_1A09F4C88();

  return sub_1A087AD30(a1, a2, v4);
}

ValueMetadata *type metadata accessor for RemoteIntentSupportedBroadcastTypes()
{
  return &type metadata for RemoteIntentSupportedBroadcastTypes;
}

unint64_t sub_1A087AB2C(uint64_t a1)
{
  uint64_t v2 = sub_1A09F4628();

  return sub_1A087AE14(a1, v2);
}

unint64_t sub_1A087AB70(uint64_t a1)
{
  sub_1A09F4C48();
  type metadata accessor for CFString(0);
  sub_1A087B95C(&qword_1E94F9190, type metadata accessor for CFString);
  sub_1A09F35E8();
  uint64_t v2 = sub_1A09F4C88();

  return sub_1A087AEDC(a1, v2);
}

unint64_t sub_1A087AC24(uint64_t a1)
{
  sub_1A09F3E18();
  sub_1A09F4C48();
  sub_1A09F3DA8();
  uint64_t v2 = sub_1A09F4C88();
  swift_bridgeObjectRelease();

  return sub_1A087B038(a1, v2);
}

unint64_t sub_1A087ACB8(uint64_t a1)
{
  sub_1A09F33A8();
  sub_1A087B3D8(&qword_1E94F9198);
  uint64_t v2 = sub_1A09F3D78();

  return sub_1A087B260(a1, v2);
}

unint64_t sub_1A087AD30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    unint64_t v10 = (void *)(v9 + 16 * v6);
    BOOL v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_1A09F4B28() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      do
      {
        unint64_t v6 = (v6 + 1) & v12;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          break;
        }
        uint64_t v13 = (void *)(v9 + 16 * v6);
        BOOL v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_1A09F4B28() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_1A087AE14(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v6 = ~v3;
    do
    {
      sub_1A087B1B0(*(void *)(v2 + 48) + 40 * v4, (uint64_t)v9);
      char v7 = MEMORY[0x1A6226800](v9, a1);
      sub_1A087B20C((uint64_t)v9);
      if (v7) {
        break;
      }
      unint64_t v4 = (v4 + 1) & v6;
    }
    while (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

unint64_t sub_1A087AEDC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t i = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
  {
    type metadata accessor for CFString(0);
    uint64_t v6 = *(void **)(*(void *)(v2 + 48) + 8 * i);
    sub_1A087B95C(&qword_1E94F9190, type metadata accessor for CFString);
    id v7 = v6;
    char v8 = sub_1A09F35D8();

    if ((v8 & 1) == 0)
    {
      uint64_t v9 = ~v4;
      for (unint64_t i = (i + 1) & v9; ((*(void *)(v3 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i) & 1) != 0; unint64_t i = (i + 1) & v9)
      {
        id v10 = *(id *)(*(void *)(v2 + 48) + 8 * i);
        char v11 = sub_1A09F35D8();

        if (v11) {
          break;
        }
      }
    }
  }
  return i;
}

unint64_t sub_1A087B038(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v5 = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
  {
    uint64_t v6 = sub_1A09F3E18();
    uint64_t v8 = v7;
    if (v6 == sub_1A09F3E18() && v8 == v9)
    {
LABEL_16:
      swift_bridgeObjectRelease_n();
      return v5;
    }
    char v11 = sub_1A09F4B28();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0)
    {
      uint64_t v12 = ~v4;
      unint64_t v5 = (v5 + 1) & v12;
      if ((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
      {
        while (1)
        {
          uint64_t v13 = sub_1A09F3E18();
          uint64_t v15 = v14;
          if (v13 == sub_1A09F3E18() && v15 == v16) {
            break;
          }
          char v18 = sub_1A09F4B28();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v18 & 1) == 0)
          {
            unint64_t v5 = (v5 + 1) & v12;
            if ((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5)) {
              continue;
            }
          }
          return v5;
        }
        goto LABEL_16;
      }
    }
  }
  return v5;
}

uint64_t sub_1A087B1B0(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1A087B20C(uint64_t a1)
{
  return a1;
}

unint64_t sub_1A087B260(uint64_t a1, uint64_t a2)
{
  uint64_t v16 = a1;
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  uint64_t v15 = v2 + 64;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v14 = ~v3;
    uint64_t v5 = sub_1A09F33A8();
    uint64_t v6 = v5;
    uint64_t v7 = *(void **)(v5 - 8);
    uint64_t v8 = (void (*)(char *, unint64_t, uint64_t))v7[2];
    uint64_t v9 = v7[8];
    uint64_t v10 = v7[9];
    char v11 = (uint64_t (**)(char *, uint64_t))(v7 + 1);
    do
    {
      MEMORY[0x1F4188790](v5);
      v8((char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), *(void *)(v17 + 48) + v10 * v4, v6);
      sub_1A087B3D8(&qword_1E94F91A0);
      char v12 = sub_1A09F3DD8();
      uint64_t v5 = (*v11)((char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
      if (v12) {
        break;
      }
      unint64_t v4 = (v4 + 1) & v14;
    }
    while (((*(void *)(v15 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

uint64_t sub_1A087B3D8(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1A09F33A8();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1A087B41C()
{
  unint64_t result = qword_1E94F91B0;
  if (!qword_1E94F91B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94F91B0);
  }
  return result;
}

unint64_t sub_1A087B470()
{
  unint64_t result = qword_1E94F91B8;
  if (!qword_1E94F91B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94F91B8);
  }
  return result;
}

unint64_t sub_1A087B4C4()
{
  unint64_t result = qword_1E94F91C0;
  if (!qword_1E94F91C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94F91C0);
  }
  return result;
}

unint64_t sub_1A087B518()
{
  unint64_t result = qword_1E94F91C8;
  if (!qword_1E94F91C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94F91C8);
  }
  return result;
}

unint64_t sub_1A087B56C()
{
  unint64_t result = qword_1E94F91D0;
  if (!qword_1E94F91D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94F91D0);
  }
  return result;
}

unint64_t sub_1A087B5C0()
{
  unint64_t result = qword_1E94F91D8;
  if (!qword_1E94F91D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94F91D8);
  }
  return result;
}

unint64_t sub_1A087B614()
{
  unint64_t result = qword_1E94F91E0;
  if (!qword_1E94F91E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94F91E0);
  }
  return result;
}

unint64_t sub_1A087B668()
{
  unint64_t result = qword_1E94F91E8;
  if (!qword_1E94F91E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94F91E8);
  }
  return result;
}

unint64_t sub_1A087B6BC()
{
  unint64_t result = qword_1E94FAF10;
  if (!qword_1E94FAF10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FAF10);
  }
  return result;
}

unint64_t sub_1A087B710()
{
  unint64_t result = qword_1E94F91F0;
  if (!qword_1E94F91F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94F91F0);
  }
  return result;
}

unint64_t sub_1A087B764()
{
  unint64_t result = qword_1E94F91F8;
  if (!qword_1E94F91F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94F91F8);
  }
  return result;
}

unint64_t sub_1A087B7B8()
{
  unint64_t result = qword_1E94F9208;
  if (!qword_1E94F9208)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94F9208);
  }
  return result;
}

unint64_t sub_1A087B80C()
{
  unint64_t result = qword_1E94F9210;
  if (!qword_1E94F9210)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94F9210);
  }
  return result;
}

unint64_t sub_1A087B860()
{
  unint64_t result = qword_1E94F9218;
  if (!qword_1E94F9218)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94F9218);
  }
  return result;
}

unint64_t sub_1A087B8B4()
{
  unint64_t result = qword_1E94F9220;
  if (!qword_1E94F9220)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94F9220);
  }
  return result;
}

unint64_t sub_1A087B908()
{
  unint64_t result = qword_1E94F9228;
  if (!qword_1E94F9228)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94F9228);
  }
  return result;
}

uint64_t sub_1A087B95C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1A087B9A4()
{
  unint64_t result = qword_1E94F9238;
  if (!qword_1E94F9238)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94F9238);
  }
  return result;
}

unint64_t sub_1A087B9F8()
{
  unint64_t result = qword_1E94F9240;
  if (!qword_1E94F9240)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94F9240);
  }
  return result;
}

unint64_t sub_1A087BA4C()
{
  unint64_t result = qword_1E94F9248;
  if (!qword_1E94F9248)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94F9248);
  }
  return result;
}

unint64_t sub_1A087BAA0()
{
  unint64_t result = qword_1E94F9250;
  if (!qword_1E94F9250)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94F9250);
  }
  return result;
}

unint64_t sub_1A087BAF4()
{
  unint64_t result = qword_1E94F9258;
  if (!qword_1E94F9258)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94F9258);
  }
  return result;
}

unint64_t sub_1A087BB48()
{
  unint64_t result = qword_1E94F9260;
  if (!qword_1E94F9260)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94F9260);
  }
  return result;
}

unint64_t sub_1A087BB9C()
{
  unint64_t result = qword_1E94F9268;
  if (!qword_1E94F9268)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94F9268);
  }
  return result;
}

uint64_t sub_1A087BC00@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v21 = a4;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = sub_1A09F4518();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  char v12 = (char *)v20 - v11;
  uint64_t v13 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v15 = (char *)v20 - v14;
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v12, a1, v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v12, 1, AssociatedTypeWitness) == 1)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
    uint64_t v16 = 1;
    uint64_t v17 = v21;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v15, v12, AssociatedTypeWitness);
    uint64_t v17 = v21;
    uint64_t v18 = v20[1];
    (*(void (**)(char *, uint64_t, uint64_t))(a3 + 16))(v15, a2, a3);
    if (v18) {
      return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, AssociatedTypeWitness);
    }
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, AssociatedTypeWitness);
    uint64_t v16 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 56))(v17, v16, 1, a2);
}

uint64_t sub_1A087BE90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return sub_1A087BC00(a1, *(void *)(a2 + 16), *(void *)(a3 - 8), a4);
}

uint64_t sub_1A087BEB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void v9[2] = a1;
  v8[2] = a2;
  void v8[3] = a3;
  swift_getAssociatedTypeWitness();
  uint64_t v4 = sub_1A09F40E8();
  uint64_t v5 = sub_1A07856F8((uint64_t *)&unk_1EB4A5620);
  uint64_t WitnessTable = swift_getWitnessTable();
  return sub_1A087BF98((void (*)(char *, char *))sub_1A087CD88, (uint64_t)v8, v4, a2, v5, WitnessTable, MEMORY[0x1E4FBC0F0], (uint64_t)v9);
}

uint64_t sub_1A087BF98(void (*a1)(char *, char *), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v28 = a5;
  uint64_t v29 = a8;
  uint64_t v38 = a1;
  uint64_t v39 = a2;
  uint64_t v27 = *(void *)(a5 - 8);
  MEMORY[0x1F4188790](a1);
  char v40 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  int v33 = *(void (***)(char *, uint64_t))(AssociatedTypeWitness - 8);
  uint64_t v10 = MEMORY[0x1F4188790](AssociatedTypeWitness);
  char v12 = (char *)&v26 - v11;
  MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = swift_getAssociatedTypeWitness();
  uint64_t v30 = *(void *)(v15 - 8);
  uint64_t v31 = v15;
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v26 - v16;
  uint64_t v18 = sub_1A09F4318();
  if (!v18) {
    return sub_1A09F40B8();
  }
  uint64_t v19 = v18;
  uint64_t v43 = sub_1A09F4778();
  uint64_t v32 = sub_1A09F4788();
  sub_1A09F4758();
  uint64_t v36 = v8;
  uint64_t result = sub_1A09F4308();
  if (v19 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v34 = (void (**)(char *))(v33 + 2);
    uint64_t v35 = v14;
    ++v33;
    while (1)
    {
      uint64_t v21 = (void (*)(char *, void))sub_1A09F4348();
      unint64_t v22 = v12;
      unint64_t v23 = v12;
      uint64_t v24 = AssociatedTypeWitness;
      (*v34)(v22);
      v21(v42, 0);
      uint64_t v25 = v41;
      v38(v23, v40);
      if (v25) {
        break;
      }
      uint64_t v41 = 0;
      (*v33)(v23, v24);
      sub_1A09F4768();
      sub_1A09F4328();
      --v19;
      char v12 = v23;
      if (!v19)
      {
        (*(void (**)(char *, uint64_t))(v30 + 8))(v17, v31);
        return v43;
      }
    }
    (*v33)(v23, v24);
    (*(void (**)(char *, uint64_t))(v30 + 8))(v17, v31);
    swift_release();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v27 + 32))(v29, v40, v28);
  }
  return result;
}

uint64_t sub_1A087C398@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t result = sub_1A087BEB0(*a1, *(void *)(a2 + 16), *(void *)(a3 - 8));
  if (!v4) {
    *a4 = result;
  }
  return result;
}

uint64_t sub_1A087C3D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = *(void *)(a1 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](a1);
  uint64_t v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void *)(v7 + 16);
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v13 = (char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v9, v14, a1);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, a1);
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 56))(a3, 1, 1, AssociatedTypeWitness);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v13, v9, v10);
    (*(void (**)(uint64_t, uint64_t))(a2 + 24))(v10, a2);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    uint64_t v17 = swift_getAssociatedTypeWitness();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(a3, 0, 1, v17);
  }
}

uint64_t sub_1A087C654@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1A087C3D0(a1, *(void *)(a2 - 8), a3);
}

uint64_t sub_1A087C65C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void v8[5] = a1;
  v8[2] = a2;
  void v8[3] = a3;
  uint64_t v3 = sub_1A09F40E8();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t WitnessTable = swift_getWitnessTable();
  return sub_1A087BF98((void (*)(char *, char *))sub_1A087CD44, (uint64_t)v8, v3, AssociatedTypeWitness, MEMORY[0x1E4FBC248], WitnessTable, MEMORY[0x1E4FBC278], v6);
}

uint64_t sub_1A087C724@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t result = sub_1A087C65C(*v3, *(void *)(a1 + 16), *(void *)(a2 - 8));
  *a3 = result;
  return result;
}

void *initializeBufferWithCopyOfBuffer for RemoteIntentGroupPhotoUpdateUserInfo(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for RemoteIntentGroupPhotoUpdateUserInfo()
{
  return swift_bridgeObjectRelease();
}

void *assignWithCopy for RemoteIntentGroupPhotoUpdateUserInfo(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for RemoteIntentGroupPhotoUpdateUserInfo(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for RemoteIntentRepresentableError(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for RemoteIntentRepresentableError(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + _Block_object_dispose(&a9, 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + _Block_object_dispose(&a9, 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t sub_1A087C890()
{
  return 0;
}

ValueMetadata *type metadata accessor for RemoteIntentRepresentableError()
{
  return &type metadata for RemoteIntentRepresentableError;
}

unint64_t sub_1A087C8A8@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_1A08CF110();
  *a1 = result;
  return result;
}

uint64_t sub_1A087C924@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1A08EA384(*v1, v1[1]);
  *a1 = result;
  return result;
}

unint64_t sub_1A087C950@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_1A090AB70();
  *a1 = result;
  return result;
}

uint64_t sub_1A087C978@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1A091D9D8(*v1);
  *a1 = result;
  return result;
}

uint64_t sub_1A087C9A4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1A092F810();
  *a1 = result;
  return result;
}

unint64_t sub_1A087CA00@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_1A09471AC(*(void *)v1, *(void *)(v1 + 8), *(unsigned char *)(v1 + 16));
  *a1 = result;
  return result;
}

unint64_t sub_1A087CA30@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_1A094A918();
  *a1 = result;
  return result;
}

unint64_t sub_1A087CA94@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = RemoteIntentFileTransfer.dictionaryRepresentation.getter();
  *a1 = result;
  return result;
}

unint64_t sub_1A087CABC@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_1A0969460();
  *a1 = result;
  return result;
}

id sub_1A087CAE4@<X0>(void *a1@<X8>)
{
  id result = sub_1A096D024();
  *a1 = result;
  return result;
}

uint64_t sub_1A087CB30@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1A0975A3C();
  *a1 = result;
  return result;
}

uint64_t sub_1A087CB58@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1A0971A04();
  *a1 = result;
  return result;
}

uint64_t sub_1A087CB80@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = RemoteIntentRecoverableMessageMetadata.dictionaryRepresentation.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1A087CBBC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = RemoteIntentRecoverableMetadata.dictionaryRepresentation.getter();
  *a1 = result;
  return result;
}

unint64_t sub_1A087CC30@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_1A08D733C(MEMORY[0x1E4FBC860]);
  *a1 = result;
  return result;
}

unint64_t sub_1A087CC60@<X0>(unint64_t *a1@<X8>)
{
  memcpy(__dst, v1, sizeof(__dst));
  unint64_t result = sub_1A09B9FF0();
  *a1 = result;
  return result;
}

uint64_t sub_1A087CCAC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1A09CC82C();
  *a1 = result;
  return result;
}

uint64_t sub_1A087CCF8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = RemoteIntentServiceInfo.dictionaryRepresentation.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1A087CD44()
{
  return (*(uint64_t (**)(void))(*(void *)(v0 + 24) + 24))(*(void *)(v0 + 16));
}

uint64_t sub_1A087CD88(uint64_t a1, void *a2)
{
  uint64_t result = (*(uint64_t (**)(void))(*(void *)(v2 + 24) + 16))();
  if (v3) {
    *a2 = v3;
  }
  return result;
}

uint64_t sub_1A087CDD4()
{
  uint64_t v0 = sub_1A09F39E8();
  sub_1A078D848(v0, qword_1E94F9270);
  sub_1A078510C(v0, (uint64_t)qword_1E94F9270);
  return sub_1A09F39D8();
}

uint64_t sub_1A087CE8C()
{
  if (objc_msgSend(v0, sel_isFromMe))
  {
    if (qword_1E94F84B8 != -1) {
      swift_once();
    }
    uint64_t v1 = sub_1A09F39E8();
    sub_1A078510C(v1, (uint64_t)qword_1E94F9270);
    uint64_t v2 = sub_1A09F39C8();
    os_log_type_t v3 = sub_1A09F4388();
    if (!os_log_type_enabled(v2, v3)) {
      goto LABEL_47;
    }
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    uint64_t v5 = "Not processing possible availability reply for message from me";
LABEL_46:
    _os_log_impl(&dword_1A0772000, v2, v3, v5, v4, 2u);
    MEMORY[0x1A6228C20](v4, -1, -1);
LABEL_47:

    return 0;
  }
  if (objc_msgSend(v0, sel_isEmote))
  {
    if (qword_1E94F84B8 != -1) {
      swift_once();
    }
    uint64_t v6 = sub_1A09F39E8();
    sub_1A078510C(v6, (uint64_t)qword_1E94F9270);
    uint64_t v2 = sub_1A09F39C8();
    os_log_type_t v3 = sub_1A09F4388();
    if (!os_log_type_enabled(v2, v3)) {
      goto LABEL_47;
    }
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    uint64_t v5 = "Not processing possible availability reply for emote message";
    goto LABEL_46;
  }
  if (objc_msgSend(v0, sel_isEmpty))
  {
    if (qword_1E94F84B8 != -1) {
      swift_once();
    }
    uint64_t v7 = sub_1A09F39E8();
    sub_1A078510C(v7, (uint64_t)qword_1E94F9270);
    uint64_t v2 = sub_1A09F39C8();
    os_log_type_t v3 = sub_1A09F4388();
    if (!os_log_type_enabled(v2, v3)) {
      goto LABEL_47;
    }
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    uint64_t v5 = "Not processing possible availability reply for empty message";
    goto LABEL_46;
  }
  if (objc_msgSend(v0, sel_isTypingMessage))
  {
    if (qword_1E94F84B8 != -1) {
      swift_once();
    }
    uint64_t v8 = sub_1A09F39E8();
    sub_1A078510C(v8, (uint64_t)qword_1E94F9270);
    uint64_t v2 = sub_1A09F39C8();
    os_log_type_t v3 = sub_1A09F4388();
    if (!os_log_type_enabled(v2, v3)) {
      goto LABEL_47;
    }
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    uint64_t v5 = "Not processing possible availability reply for typing message";
    goto LABEL_46;
  }
  if (objc_msgSend(v0, sel_isLocatingMessage))
  {
    if (qword_1E94F84B8 != -1) {
      swift_once();
    }
    uint64_t v9 = sub_1A09F39E8();
    sub_1A078510C(v9, (uint64_t)qword_1E94F9270);
    uint64_t v2 = sub_1A09F39C8();
    os_log_type_t v3 = sub_1A09F4388();
    if (!os_log_type_enabled(v2, v3)) {
      goto LABEL_47;
    }
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    uint64_t v5 = "Not processing possible availability reply for locating message";
    goto LABEL_46;
  }
  if (objc_msgSend(v0, sel_isAutoReply))
  {
    if (qword_1E94F84B8 != -1) {
      swift_once();
    }
    uint64_t v10 = sub_1A09F39E8();
    sub_1A078510C(v10, (uint64_t)qword_1E94F9270);
    uint64_t v2 = sub_1A09F39C8();
    os_log_type_t v3 = sub_1A09F4388();
    if (!os_log_type_enabled(v2, v3)) {
      goto LABEL_47;
    }
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    uint64_t v5 = "Not processing possible availability reply for auto reply message";
    goto LABEL_46;
  }
  if (objc_msgSend(v0, sel_isUnfinished))
  {
    if (qword_1E94F84B8 != -1) {
      swift_once();
    }
    uint64_t v11 = sub_1A09F39E8();
    sub_1A078510C(v11, (uint64_t)qword_1E94F9270);
    uint64_t v2 = sub_1A09F39C8();
    os_log_type_t v3 = sub_1A09F4388();
    if (!os_log_type_enabled(v2, v3)) {
      goto LABEL_47;
    }
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    uint64_t v5 = "Not processing possible availability reply for unfinished message";
    goto LABEL_46;
  }
  if (objc_msgSend(v0, sel_isSystemMessage))
  {
    if (qword_1E94F84B8 != -1) {
      swift_once();
    }
    uint64_t v12 = sub_1A09F39E8();
    sub_1A078510C(v12, (uint64_t)qword_1E94F9270);
    uint64_t v2 = sub_1A09F39C8();
    os_log_type_t v3 = sub_1A09F4388();
    if (!os_log_type_enabled(v2, v3)) {
      goto LABEL_47;
    }
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    uint64_t v5 = "Not processing possible availability reply for system message";
    goto LABEL_46;
  }
  if (objc_msgSend(v0, sel_hasLegacyUrgentTriggerMatchInText))
  {
    if (qword_1E94F84B8 != -1) {
      swift_once();
    }
    uint64_t v13 = sub_1A09F39E8();
    sub_1A078510C(v13, (uint64_t)qword_1E94F9270);
    uint64_t v2 = sub_1A09F39C8();
    os_log_type_t v3 = sub_1A09F4388();
    if (!os_log_type_enabled(v2, v3)) {
      goto LABEL_47;
    }
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    uint64_t v5 = "Not processing possible availability reply for message that is a legacy urgent trigger";
    goto LABEL_46;
  }
  return 1;
}

unint64_t sub_1A087D4D8()
{
  id v1 = objc_msgSend(v0, sel_body);
  unint64_t v2 = (unint64_t)v1;
  if (v1)
  {
    id v3 = objc_msgSend(v1, sel_string);

    uint64_t v4 = sub_1A09F3E18();
    unint64_t v2 = v5;

    uint64_t v6 = HIBYTE(v2) & 0xF;
    if ((v2 & 0x2000000000000000) == 0) {
      uint64_t v6 = v4 & 0xFFFFFFFFFFFFLL;
    }
    if (v6)
    {
      sub_1A087D824();
      uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
      id v28 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
      uint64_t v8 = (void *)sub_1A09F3DE8();
      uint64_t v9 = (void *)sub_1A09F3DE8();
      uint64_t v10 = (void *)sub_1A09F3DE8();
      id v11 = objc_msgSend(v28, sel_localizedStringForKey_value_table_, v8, v9, v10);

      uint64_t v12 = sub_1A09F3E18();
      uint64_t v26 = v13;
      uint64_t v27 = v12;

      uint64_t v31 = v4;
      unint64_t v32 = v2;
      uint64_t v14 = sub_1A09F3148();
      uint64_t v25 = (uint64_t)&v25;
      uint64_t v15 = *(void *)(v14 - 8);
      uint64_t v16 = *(void *)(v15 + 64);
      uint64_t v17 = MEMORY[0x1F4188790](v14);
      MEMORY[0x1F4188790](v17);
      uint64_t v18 = sub_1A09F3128();
      MEMORY[0x1F4188790](v18);
      uint64_t v19 = (char *)&v25 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
      sub_1A09F3118();
      sub_1A09F3138();
      uint64_t v20 = *(void (**)(char *, uint64_t))(v15 + 8);
      v20(v19, v14);
      v20(v19, v14);
      sub_1A07857EC();
      uint64_t v21 = sub_1A09F4548();
      unint64_t v23 = v22;
      v20(v19, v14);
      swift_bridgeObjectRelease();
      uint64_t v31 = v21;
      unint64_t v32 = v23;
      uint64_t v29 = v27;
      uint64_t v30 = v26;
      LOBYTE(v2) = sub_1A09F4558();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      LOBYTE(v2) = 0;
    }
  }
  return v2 & 1;
}

unint64_t sub_1A087D824()
{
  unint64_t result = qword_1E94F9288;
  if (!qword_1E94F9288)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1E94F9288);
  }
  return result;
}

id sub_1A087D8D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, SEL *a5)
{
  sub_1A09F3E18();
  sub_1A09F3E18();
  id v6 = objc_msgSend(self, sel_sharedManager);
  uint64_t v7 = (void *)sub_1A09F3DE8();
  uint64_t v8 = (void *)sub_1A09F3DE8();
  id v9 = objc_msgSend(v6, *a5, v7, v8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return v9;
}

id sub_1A087DAA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, SEL *a5)
{
  sub_1A09F3E18();
  if (a4)
  {
    sub_1A09F3E18();
    a4 = v7;
  }
  id v8 = objc_msgSend(self, sel_sharedManager);
  id v9 = (void *)sub_1A09F3DE8();
  if (a4) {
    uint64_t v10 = (void *)sub_1A09F3DE8();
  }
  else {
    uint64_t v10 = 0;
  }
  id v11 = objc_msgSend(v8, *a5, v9, v10);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return v11;
}

IMCTRCSUtilities __swiftcall IMCTRCSUtilities.init()()
{
  id v0 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());

  return (IMCTRCSUtilities)objc_msgSend(v0, sel_init);
}

id IMCTRCSUtilities.init()()
{
  v1.super_class = (Class)IMCTRCSUtilities;
  return objc_msgSendSuper2(&v1, sel_init);
}

unint64_t type metadata accessor for IMCTRCSUtilities()
{
  unint64_t result = qword_1E94F9290;
  if (!qword_1E94F9290)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1E94F9290);
  }
  return result;
}

id sub_1A087DD00(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  id v6 = objc_msgSend(self, sel_sharedManager);
  if (a2) {
    a2 = (void *)sub_1A09F3DE8();
  }
  if (a4) {
    a4 = (void *)sub_1A09F3DE8();
  }
  id v7 = objc_msgSend(v6, sel_enabledForPhoneNumber_simID_, a2, a4);

  return v7;
}

void *sub_1A087DDB8(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for ChatLastMessageTimeStampOnLoadUpdatedBroadcast(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  return a1;
}

void *assignWithTake for ChatLastMessageTimeStampOnLoadUpdatedBroadcast(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  return a1;
}

uint64_t getEnumTagSinglePayload for ChatLastMessageTimeStampOnLoadUpdatedBroadcast(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ChatLastMessageTimeStampOnLoadUpdatedBroadcast(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + _Block_object_dispose(&a9, 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + _Block_object_dispose(&a9, 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ChatLastMessageTimeStampOnLoadUpdatedBroadcast()
{
  return &type metadata for ChatLastMessageTimeStampOnLoadUpdatedBroadcast;
}

uint64_t sub_1A087DF20(void *a1)
{
  uint64_t v3 = sub_1A07856F8(&qword_1E94F92D8);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  id v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1A086F45C(a1, a1[3]);
  sub_1A087E744();
  sub_1A09F4CC8();
  v8[15] = 0;
  sub_1A09F4A28();
  if (!v1)
  {
    v8[14] = 1;
    sub_1A09F4A48();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

BOOL sub_1A087E09C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_1A087E0B4()
{
  if (*v0) {
    return 0xD00000000000001ALL;
  }
  else {
    return 0x4449554774616863;
  }
}

uint64_t sub_1A087E0F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A087E464(a1, a2);
  *a3 = result;
  return result;
}

void sub_1A087E11C(unsigned char *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_1A087E128(uint64_t a1)
{
  unint64_t v2 = sub_1A087E744();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A087E164(uint64_t a1)
{
  unint64_t v2 = sub_1A087E744();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A087E1A0()
{
  uint64_t v0 = qword_1E94F9298;
  swift_bridgeObjectRetain();
  return v0;
}

void sub_1A087E1D8(void *a1)
{
  double v3 = *(double *)(v1 + 16);
  id v4 = (id)sub_1A09F3DE8();
  objc_msgSend(a1, sel_chat_lastMessageTimeStampOnLoadUpdated_, v4, v3);
}

void sub_1A087E244(void *a1@<X0>, uint64_t a2@<X8>)
{
  double v6 = sub_1A087E554(a1);
  if (!v2)
  {
    *(void *)a2 = v4;
    *(void *)(a2 + _Block_object_dispose(&a9, 8) = v5;
    *(double *)(a2 + 16) = v6;
  }
}

uint64_t sub_1A087E274(void *a1)
{
  return sub_1A087DF20(a1);
}

unint64_t sub_1A087E294(uint64_t a1)
{
  *(void *)(a1 + _Block_object_dispose(&a9, 8) = sub_1A087E2C4();
  unint64_t result = sub_1A087E318();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1A087E2C4()
{
  unint64_t result = qword_1E94F92A8;
  if (!qword_1E94F92A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94F92A8);
  }
  return result;
}

unint64_t sub_1A087E318()
{
  unint64_t result = qword_1E94F92B0;
  if (!qword_1E94F92B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94F92B0);
  }
  return result;
}

unint64_t sub_1A087E36C(uint64_t a1)
{
  unint64_t result = sub_1A087E394();
  *(void *)(a1 + _Block_object_dispose(&a9, 8) = result;
  return result;
}

unint64_t sub_1A087E394()
{
  unint64_t result = qword_1E94F92B8;
  if (!qword_1E94F92B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94F92B8);
  }
  return result;
}

unint64_t sub_1A087E3E8(uint64_t a1)
{
  unint64_t result = sub_1A087E410();
  *(void *)(a1 + _Block_object_dispose(&a9, 8) = result;
  return result;
}

unint64_t sub_1A087E410()
{
  unint64_t result = qword_1E94F92C0;
  if (!qword_1E94F92C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94F92C0);
  }
  return result;
}

uint64_t sub_1A087E464(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x4449554774616863 && a2 == 0xE800000000000000;
  if (v2 || (sub_1A09F4B28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x80000001A0A31470)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1A09F4B28();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

double sub_1A087E554(void *a1)
{
  uint64_t v4 = sub_1A07856F8(&qword_1E94F92C8);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  id v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A086F45C(a1, a1[3]);
  sub_1A087E744();
  sub_1A09F4CA8();
  if (v1)
  {
    _s17IMSharedUtilities29RemoteIntentBroadcastEncodingVwxx_0((uint64_t)a1);
  }
  else
  {
    char v12 = 0;
    sub_1A09F48D8();
    char v11 = 1;
    swift_bridgeObjectRetain();
    sub_1A09F48F8();
    double v2 = v9;
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    _s17IMSharedUtilities29RemoteIntentBroadcastEncodingVwxx_0((uint64_t)a1);
    swift_bridgeObjectRelease();
  }
  return v2;
}

unint64_t sub_1A087E744()
{
  unint64_t result = qword_1E94F92D0;
  if (!qword_1E94F92D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94F92D0);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for ChatLastMessageTimeStampOnLoadUpdatedBroadcast.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = v6 - 2;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for ChatLastMessageTimeStampOnLoadUpdatedBroadcast.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A087E8F4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

unsigned char *sub_1A087E91C(unsigned char *result, char a2)
{
  *unint64_t result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for ChatLastMessageTimeStampOnLoadUpdatedBroadcast.CodingKeys()
{
  return &type metadata for ChatLastMessageTimeStampOnLoadUpdatedBroadcast.CodingKeys;
}

unint64_t sub_1A087E93C()
{
  unint64_t result = qword_1E94F92E0;
  if (!qword_1E94F92E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94F92E0);
  }
  return result;
}

unint64_t sub_1A087E994()
{
  unint64_t result = qword_1E94F92E8;
  if (!qword_1E94F92E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94F92E8);
  }
  return result;
}

unint64_t sub_1A087E9EC()
{
  unint64_t result = qword_1E94F92F0;
  if (!qword_1E94F92F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94F92F0);
  }
  return result;
}

void __swiftcall IMActionOpenApp.init(dictionary:)(IMActionOpenApp_optional *__return_ptr retstr, Swift::OpaquePointer dictionary)
{
  id v2 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  int v3 = (void *)sub_1A09F3CE8();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_initWithDictionary_, v3);
}

id IMActionOpenApp.init(dictionary:)(uint64_t a1)
{
  id v2 = v1;
  if (!*(void *)(a1 + 16) || (unint64_t v4 = sub_1A087AAA4(7107189, 0xE300000000000000), (v5 & 1) == 0))
  {
    long long v9 = 0u;
    long long v10 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  sub_1A0785268(*(void *)(a1 + 56) + 32 * v4, (uint64_t)&v9);
  swift_bridgeObjectRelease();
  if (!*((void *)&v10 + 1))
  {
LABEL_7:
    sub_1A0783C7C((uint64_t)&v9);
    goto LABEL_8;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_8:
    swift_getObjectType();
    swift_deallocPartialClassInstance();
    return 0;
  }
  unsigned int v6 = (void *)sub_1A09F3DE8();
  swift_bridgeObjectRelease();
  id v7 = objc_msgSend(v2, sel_initWithUrl_, v6);

  return v7;
}

void __swiftcall IMActionOpenApp.init()(IMActionOpenApp *__return_ptr retstr)
{
  id v1 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());

  objc_msgSend(v1, sel_init);
}

void IMActionOpenApp.init()()
{
}

unint64_t type metadata accessor for IMActionOpenApp()
{
  unint64_t result = qword_1E94F9360;
  if (!qword_1E94F9360)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1E94F9360);
  }
  return result;
}

uint64_t destroy for LoadedRecoverableMessagesMetadataBroadcast()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *_s17IMSharedUtilities42LoadedRecoverableMessagesMetadataBroadcastVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for LoadedRecoverableMessagesMetadataBroadcast(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for LoadedRecoverableMessagesMetadataBroadcast(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  uint64_t v4 = a2[2];
  a1[1] = a2[1];
  a1[2] = v4;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for LoadedRecoverableMessagesMetadataBroadcast()
{
  return &type metadata for LoadedRecoverableMessagesMetadataBroadcast;
}

uint64_t sub_1A087F004(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v12 = a4;
  uint64_t v7 = sub_1A07856F8(&qword_1E94F93C8);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  long long v10 = (char *)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A086F45C(a1, a1[3]);
  sub_1A087F900();
  sub_1A09F4CC8();
  uint64_t v15 = a2;
  char v14 = 0;
  sub_1A07856F8(&qword_1E94F93B8);
  sub_1A087F954(&qword_1E94F93D0);
  sub_1A09F4A78();
  if (!v4)
  {
    char v13 = 1;
    sub_1A09F4A28();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_1A087F1B4()
{
  if (*v0) {
    return 0x44497972657571;
  }
  else {
    return 0xD00000000000001BLL;
  }
}

uint64_t sub_1A087F1F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A087F5D4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A087F21C(uint64_t a1)
{
  unint64_t v2 = sub_1A087F900();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A087F258(uint64_t a1)
{
  unint64_t v2 = sub_1A087F900();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A087F294()
{
  uint64_t v0 = qword_1E94F9370;
  swift_bridgeObjectRetain();
  return v0;
}

void sub_1A087F2CC(void *a1)
{
  uint64_t v2 = swift_bridgeObjectRetain();
  unint64_t v3 = sub_1A09A18D4(v2);
  swift_bridgeObjectRelease();
  if (v3)
  {
    sub_1A07856F8(&qword_1E94F93A0);
    uint64_t v4 = (void *)sub_1A09F3CE8();
    swift_bridgeObjectRelease();
    id v5 = (id)sub_1A09F3DE8();
    objc_msgSend(a1, sel_loadedRecoverableMessagesMetadata_queryID_, v4, v5);
  }
}

uint64_t sub_1A087F3B4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1A087F6C4(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
  }
  return result;
}

uint64_t sub_1A087F3E4(void *a1)
{
  return sub_1A087F004(a1, *v1, v1[1], v1[2]);
}

unint64_t sub_1A087F404(uint64_t a1)
{
  *(void *)(a1 + _Block_object_dispose(&a9, 8) = sub_1A087F434();
  unint64_t result = sub_1A087F488();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1A087F434()
{
  unint64_t result = qword_1E94F9380;
  if (!qword_1E94F9380)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94F9380);
  }
  return result;
}

unint64_t sub_1A087F488()
{
  unint64_t result = qword_1E94F9388;
  if (!qword_1E94F9388)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94F9388);
  }
  return result;
}

unint64_t sub_1A087F4DC(uint64_t a1)
{
  unint64_t result = sub_1A087F504();
  *(void *)(a1 + _Block_object_dispose(&a9, 8) = result;
  return result;
}

unint64_t sub_1A087F504()
{
  unint64_t result = qword_1E94F9390;
  if (!qword_1E94F9390)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94F9390);
  }
  return result;
}

unint64_t sub_1A087F558(uint64_t a1)
{
  unint64_t result = sub_1A087F580();
  *(void *)(a1 + _Block_object_dispose(&a9, 8) = result;
  return result;
}

unint64_t sub_1A087F580()
{
  unint64_t result = qword_1E94F9398;
  if (!qword_1E94F9398)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94F9398);
  }
  return result;
}

uint64_t sub_1A087F5D4(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD00000000000001BLL && a2 == 0x80000001A0A31530 || (sub_1A09F4B28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x44497972657571 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v5 = sub_1A09F4B28();
    swift_bridgeObjectRelease();
    if (v5) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1A087F6C4(void *a1)
{
  uint64_t v3 = sub_1A07856F8(&qword_1E94F93A8);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = &v9[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = a1[3];
  sub_1A086F45C(a1, v7);
  sub_1A087F900();
  sub_1A09F4CA8();
  if (v1)
  {
    _s17IMSharedUtilities29RemoteIntentBroadcastEncodingVwxx_0((uint64_t)a1);
  }
  else
  {
    sub_1A07856F8(&qword_1E94F93B8);
    v9[7] = 0;
    sub_1A087F954(&qword_1E94F93C0);
    sub_1A09F4928();
    uint64_t v7 = v10;
    v9[6] = 1;
    swift_bridgeObjectRetain();
    sub_1A09F48D8();
    (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
    swift_bridgeObjectRetain();
    _s17IMSharedUtilities29RemoteIntentBroadcastEncodingVwxx_0((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v7;
}

unint64_t sub_1A087F900()
{
  unint64_t result = qword_1E94F93B0;
  if (!qword_1E94F93B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94F93B0);
  }
  return result;
}

uint64_t sub_1A087F954(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1A078D800(&qword_1E94F93B8);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for LoadedRecoverableMessagesMetadataBroadcast.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A087FA68);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LoadedRecoverableMessagesMetadataBroadcast.CodingKeys()
{
  return &type metadata for LoadedRecoverableMessagesMetadataBroadcast.CodingKeys;
}

unint64_t sub_1A087FAA4()
{
  unint64_t result = qword_1E94F93D8;
  if (!qword_1E94F93D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94F93D8);
  }
  return result;
}

unint64_t sub_1A087FAFC()
{
  unint64_t result = qword_1E94F93E0;
  if (!qword_1E94F93E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94F93E0);
  }
  return result;
}

unint64_t sub_1A087FB54()
{
  unint64_t result = qword_1E94F93E8;
  if (!qword_1E94F93E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94F93E8);
  }
  return result;
}

uint64_t sub_1A087FBA8()
{
  uint64_t v0 = sub_1A09F39E8();
  sub_1A078D848(v0, qword_1E94F75B0);
  sub_1A078510C(v0, (uint64_t)qword_1E94F75B0);
  return sub_1A09F39D8();
}

uint64_t sub_1A087FC2C()
{
  type metadata accessor for RemoteIntentBroadcastCenter();
  uint64_t v0 = swift_allocObject();
  uint64_t result = sub_1A08819C8();
  qword_1E94F7588 = v0;
  return result;
}

uint64_t sub_1A087FC6C()
{
  uint64_t v0 = sub_1A09F3A18();
  sub_1A078D848(v0, qword_1E94F7560);
  *(void *)sub_1A078510C(v0, (uint64_t)qword_1E94F7560) = 50;
  uint64_t v1 = *(uint64_t (**)(void))(*(void *)(v0 - 8) + 104);

  return v1();
}

uint64_t static RemoteIntentBroadcastCenter.defaultRateLimitInterval.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_1E94F7580 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1A09F3A18();
  uint64_t v3 = sub_1A078510C(v2, (uint64_t)qword_1E94F7560);
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

void sub_1A087FDA4()
{
  uint64_t v1 = (unsigned char *)(v0 + OBJC_IVAR____TtC17IMSharedUtilities27RemoteIntentBroadcastCenter_hasObserver);
  swift_beginAccess();
  if (qword_1E94F75D0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1A09F39E8();
  sub_1A078510C(v2, (uint64_t)qword_1E94F75B0);
  uint64_t v3 = sub_1A09F39C8();
  os_log_type_t v4 = sub_1A09F4358();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 67109120;
    sub_1A09F4528();
    _os_log_impl(&dword_1A0772000, v3, v4, "DaemonBroadCastEntity.hasObserver changed to: %{BOOL}d", v5, 8u);
    MEMORY[0x1A6228C20](v5, -1, -1);
  }

  if ((*v1 & 1) == 0)
  {
    unsigned int v6 = sub_1A09F39C8();
    os_log_type_t v7 = sub_1A09F4358();
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v8 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v8 = 0;
      _os_log_impl(&dword_1A0772000, v6, v7, "We no longer have an observer, resetting all state.", v8, 2u);
      MEMORY[0x1A6228C20](v8, -1, -1);
    }

    sub_1A0883B9C();
  }
}

uint64_t sub_1A087FF60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 216) = a1;
  *(void *)(v4 + 2++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = a4;
  return MEMORY[0x1F4188298](sub_1A087FF80, 0, 0);
}

uint64_t sub_1A087FF80()
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  v0[29] = Strong;
  if (Strong)
  {
    uint64_t v2 = (void *)swift_task_alloc();
    v0[30] = v2;
    v0[31] = sub_1A08843D4();
    void *v2 = v0;
    v2[1] = sub_1A08800A0;
    return MEMORY[0x1F40D3BA8]();
  }
  else
  {
    *(void *)(v0[27] + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = MEMORY[0x1E4FBC848] + 8;
    uint64_t v3 = (uint64_t (*)(void))v0[1];
    return v3();
  }
}

uint64_t sub_1A08800A0(char a1)
{
  uint64_t v3 = *v2;
  *(unsigned char *)(v3 + 413) = a1;
  *(void *)(v3 + 256) = v1;
  swift_task_dealloc();
  if (v1) {
    uint64_t v4 = sub_1A0881080;
  }
  else {
    uint64_t v4 = sub_1A08801B8;
  }
  return MEMORY[0x1F4188298](v4, 0, 0);
}

uint64_t sub_1A08801B8()
{
  if (qword_1E94F75D0 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1A09F39E8();
  *(void *)(v0 + 264) = sub_1A078510C(v1, (uint64_t)qword_1E94F75B0);
  uint64_t v2 = sub_1A09F39C8();
  os_log_type_t v3 = sub_1A09F4368();
  if (os_log_type_enabled(v2, v3))
  {
    int v4 = *(unsigned __int8 *)(v0 + 413);
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 67109120;
    *(_DWORD *)(v0 + 40_Block_object_dispose(&a9, 8) = v4;
    sub_1A09F4528();
    _os_log_impl(&dword_1A0772000, v2, v3, "Started listening for observation changes with initial hasObserver value: %{BOOL}d", v5, 8u);
    MEMORY[0x1A6228C20](v5, -1, -1);
  }

  *(void *)(v0 + 272) = sub_1A09F4188();
  *(void *)(v0 + 280) = sub_1A09F4178();
  uint64_t v7 = sub_1A09F4108();
  return MEMORY[0x1F4188298](sub_1A0880348, v7, v6);
}

uint64_t sub_1A0880348()
{
  char v1 = *(unsigned char *)(v0 + 413);
  uint64_t v2 = *(void *)(v0 + 232);
  swift_release();
  uint64_t v3 = OBJC_IVAR____TtC17IMSharedUtilities27RemoteIntentBroadcastCenter_hasObserver;
  *(void *)(v0 + 28_Block_object_dispose(&a9, 8) = OBJC_IVAR____TtC17IMSharedUtilities27RemoteIntentBroadcastCenter_hasObserver;
  int v4 = (unsigned char *)(v2 + v3);
  swift_beginAccess();
  unsigned char *v4 = v1;
  sub_1A087FDA4();
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 296) = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_1A0880444;
  return MEMORY[0x1F40D3BB8](v0 + 56);
}

uint64_t sub_1A0880444()
{
  *(void *)(*(void *)v1 + 304) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1A08812AC;
  }
  else {
    uint64_t v2 = sub_1A0880558;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1A0880558()
{
  uint64_t v1 = v0[10];
  uint64_t v2 = sub_1A086F45C(v0 + 7, v1);
  uint64_t v3 = *(void *)(v1 - 8);
  uint64_t v4 = swift_task_alloc();
  (*(void (**)(uint64_t, void *, uint64_t))(v3 + 16))(v4, v2, v1);
  v0[5] = swift_getAssociatedTypeWitness();
  v0[6] = swift_getAssociatedConformanceWitness();
  sub_1A0884478(v0 + 2);
  sub_1A09F4278();
  swift_task_dealloc();
  uint64_t v5 = v0[5];
  uint64_t v6 = v0[6];
  v0[39] = v5;
  v0[40] = v6;
  sub_1A0884428((uint64_t)(v0 + 2), v5);
  v0[41] = swift_getAssociatedTypeWitness();
  uint64_t v7 = sub_1A09F4518();
  v0[42] = v7;
  v0[43] = *(void *)(v7 - 8);
  uint64_t v8 = swift_task_alloc();
  v0[44] = v8;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v0[45] = AssociatedTypeWitness;
  uint64_t v10 = *(void *)(AssociatedTypeWitness - 8);
  v0[46] = v10;
  v0[47] = *(void *)(v10 + 64);
  uint64_t v11 = swift_task_alloc();
  v0[48] = v11;
  uint64_t v12 = (void *)swift_task_alloc();
  v0[49] = (uint64_t)v12;
  void *v12 = v0;
  v12[1] = sub_1A0880828;
  return MEMORY[0x1F4187C80](v8, 0, 0, v11, v5, v6);
}

uint64_t sub_1A0880828()
{
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v1 = sub_1A08814D8;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v1 = sub_1A0880940;
  }
  return MEMORY[0x1F4188298](v1, 0, 0);
}

uint64_t sub_1A0880940()
{
  uint64_t v1 = *(void *)(v0 + 352);
  uint64_t v2 = *(void *)(v0 + 328);
  uint64_t v3 = *(void *)(v2 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    (*(void (**)(uint64_t, void))(*(void *)(v0 + 344) + 8))(v1, *(void *)(v0 + 336));
    swift_task_dealloc();
    *(_OWORD *)(v0 + 12_Block_object_dispose(&a9, 8) = 0u;
    *(_OWORD *)(v0 + 144) = 0u;
    swift_release();
    _s17IMSharedUtilities29RemoteIntentBroadcastEncodingVwxx_0(v0 + 16);
    _s17IMSharedUtilities29RemoteIntentBroadcastEncodingVwxx_0(v0 + 56);
    *(void *)(*(void *)(v0 + 216) + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = MEMORY[0x1E4FBC848] + 8;
    uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
    return v4();
  }
  else
  {
    *(void *)(v0 + 152) = v2;
    uint64_t v6 = sub_1A0884478((uint64_t *)(v0 + 128));
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v3 + 32))(v6, v1, v2);
    swift_task_dealloc();
    sub_1A07825B4((_OWORD *)(v0 + 128), (_OWORD *)(v0 + 96));
    if (swift_dynamicCast())
    {
      *(unsigned char *)(v0 + 414) = *(unsigned char *)(v0 + 412);
      *(void *)(v0 + 400) = sub_1A09F4178();
      uint64_t v8 = sub_1A09F4108();
      return MEMORY[0x1F4188298](sub_1A0880D18, v8, v7);
    }
    else
    {
      uint64_t v9 = *(void *)(v0 + 40);
      uint64_t v10 = *(void *)(v0 + 48);
      *(void *)(v0 + 312) = v9;
      *(void *)(v0 + 320) = v10;
      sub_1A0884428(v0 + 16, v9);
      *(void *)(v0 + 32_Block_object_dispose(&a9, 8) = swift_getAssociatedTypeWitness();
      uint64_t v11 = sub_1A09F4518();
      *(void *)(v0 + 336) = v11;
      *(void *)(v0 + 344) = *(void *)(v11 - 8);
      uint64_t v12 = swift_task_alloc();
      *(void *)(v0 + 352) = v12;
      uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
      *(void *)(v0 + 360) = AssociatedTypeWitness;
      uint64_t v14 = *(void *)(AssociatedTypeWitness - 8);
      *(void *)(v0 + 36_Block_object_dispose(&a9, 8) = v14;
      *(void *)(v0 + 376) = *(void *)(v14 + 64);
      uint64_t v15 = swift_task_alloc();
      *(void *)(v0 + 384) = v15;
      uint64_t v16 = (void *)swift_task_alloc();
      *(void *)(v0 + 392) = v16;
      *uint64_t v16 = v0;
      v16[1] = sub_1A0880828;
      return MEMORY[0x1F4187C80](v12, 0, 0, v15, v9, v10);
    }
  }
}

uint64_t sub_1A0880D18()
{
  char v1 = *(unsigned char *)(v0 + 414);
  uint64_t v2 = *(void *)(v0 + 288);
  uint64_t v3 = *(void *)(v0 + 232);
  swift_release();
  *(unsigned char *)(v3 + v2) = v1;
  uint64_t v4 = sub_1A09F39C8();
  os_log_type_t v5 = sub_1A09F4358();
  if (os_log_type_enabled(v4, v5))
  {
    int v6 = *(unsigned __int8 *)(v0 + 414);
    uint64_t v7 = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 67109120;
    *(_DWORD *)(v7 + 4) = v6;
    _os_log_impl(&dword_1A0772000, v4, v5, "DaemonBroadCastEntity.hasObserver changed to: %{BOOL}d", (uint8_t *)v7, 8u);
    MEMORY[0x1A6228C20](v7, -1, -1);
  }
  uint64_t v8 = *(void *)(v0 + 288);
  uint64_t v9 = *(void *)(v0 + 232);

  if ((*(unsigned char *)(v9 + v8) & 1) == 0)
  {
    uint64_t v10 = sub_1A09F39C8();
    os_log_type_t v11 = sub_1A09F4358();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v12 = 0;
      _os_log_impl(&dword_1A0772000, v10, v11, "We no longer have an observer, resetting all state.", v12, 2u);
      MEMORY[0x1A6228C20](v12, -1, -1);
    }

    sub_1A0883B9C();
  }
  return MEMORY[0x1F4188298](sub_1A0880EA4, 0, 0);
}

uint64_t sub_1A0880EA4()
{
  uint64_t v1 = v0[5];
  uint64_t v2 = v0[6];
  v0[39] = v1;
  v0[40] = v2;
  sub_1A0884428((uint64_t)(v0 + 2), v1);
  v0[41] = swift_getAssociatedTypeWitness();
  uint64_t v3 = sub_1A09F4518();
  v0[42] = v3;
  v0[43] = *(void *)(v3 - 8);
  uint64_t v4 = swift_task_alloc();
  v0[44] = v4;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v0[45] = AssociatedTypeWitness;
  uint64_t v6 = *(void *)(AssociatedTypeWitness - 8);
  v0[46] = v6;
  v0[47] = *(void *)(v6 + 64);
  uint64_t v7 = swift_task_alloc();
  v0[48] = v7;
  uint64_t v8 = (void *)swift_task_alloc();
  v0[49] = v8;
  void *v8 = v0;
  v8[1] = sub_1A0880828;
  return MEMORY[0x1F4187C80](v4, 0, 0, v7, v1, v2);
}

uint64_t sub_1A0881080()
{
  uint64_t v1 = (void *)v0[32];
  if (qword_1E94F75D0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1A09F39E8();
  sub_1A078510C(v2, (uint64_t)qword_1E94F75B0);
  id v3 = v1;
  id v4 = v1;
  os_log_type_t v5 = sub_1A09F39C8();
  os_log_type_t v6 = sub_1A09F4378();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 138412290;
    id v9 = v1;
    uint64_t v10 = _swift_stdlib_bridgeErrorToNSError();
    v0[26] = v10;
    sub_1A09F4528();
    void *v8 = v10;

    _os_log_impl(&dword_1A0772000, v5, v6, "Caught error while setting up observation. Broadcasts will not function correctly: %@", v7, 0xCu);
    sub_1A07856F8(&qword_1E94F7740);
    swift_arrayDestroy();
    MEMORY[0x1A6228C20](v8, -1, -1);
    MEMORY[0x1A6228C20](v7, -1, -1);
    swift_release();
  }
  else
  {
    swift_release();
  }
  *(void *)(v0[27] + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = MEMORY[0x1E4FBC848] + 8;
  os_log_type_t v11 = (uint64_t (*)(void))v0[1];
  return v11();
}

uint64_t sub_1A08812AC()
{
  uint64_t v1 = (void *)v0[38];
  if (qword_1E94F75D0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1A09F39E8();
  sub_1A078510C(v2, (uint64_t)qword_1E94F75B0);
  id v3 = v1;
  id v4 = v1;
  os_log_type_t v5 = sub_1A09F39C8();
  os_log_type_t v6 = sub_1A09F4378();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 138412290;
    id v9 = v1;
    uint64_t v10 = _swift_stdlib_bridgeErrorToNSError();
    v0[26] = v10;
    sub_1A09F4528();
    void *v8 = v10;

    _os_log_impl(&dword_1A0772000, v5, v6, "Caught error while setting up observation. Broadcasts will not function correctly: %@", v7, 0xCu);
    sub_1A07856F8(&qword_1E94F7740);
    swift_arrayDestroy();
    MEMORY[0x1A6228C20](v8, -1, -1);
    MEMORY[0x1A6228C20](v7, -1, -1);
    swift_release();
  }
  else
  {
    swift_release();
  }
  *(void *)(v0[27] + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = MEMORY[0x1E4FBC848] + 8;
  os_log_type_t v11 = (uint64_t (*)(void))v0[1];
  return v11();
}

uint64_t sub_1A08814D8()
{
  uint64_t v1 = v0[48];
  uint64_t v2 = v0[45];
  uint64_t v3 = v0[46];
  uint64_t v4 = swift_task_alloc();
  os_log_type_t v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32);
  v5(v4, v1, v2);
  swift_getAssociatedConformanceWitness();
  uint64_t v6 = sub_1A09F4B08();
  if (v6)
  {
    uint64_t v7 = (void *)v6;
    (*(void (**)(uint64_t, void))(v0[46] + 8))(v4, v0[45]);
  }
  else
  {
    uint64_t v8 = v0[45];
    uint64_t v7 = (void *)swift_allocError();
    v5(v9, v4, v8);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  _s17IMSharedUtilities29RemoteIntentBroadcastEncodingVwxx_0((uint64_t)(v0 + 2));
  _s17IMSharedUtilities29RemoteIntentBroadcastEncodingVwxx_0((uint64_t)(v0 + 7));
  if (qword_1E94F75D0 != -1) {
    swift_once();
  }
  uint64_t v10 = sub_1A09F39E8();
  sub_1A078510C(v10, (uint64_t)qword_1E94F75B0);
  id v11 = v7;
  id v12 = v7;
  uint64_t v13 = sub_1A09F39C8();
  os_log_type_t v14 = sub_1A09F4378();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = (uint8_t *)swift_slowAlloc();
    uint64_t v16 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v15 = 138412290;
    id v17 = v7;
    uint64_t v18 = _swift_stdlib_bridgeErrorToNSError();
    v0[26] = v18;
    sub_1A09F4528();
    *uint64_t v16 = v18;

    _os_log_impl(&dword_1A0772000, v13, v14, "Caught error while setting up observation. Broadcasts will not function correctly: %@", v15, 0xCu);
    sub_1A07856F8(&qword_1E94F7740);
    swift_arrayDestroy();
    MEMORY[0x1A6228C20](v16, -1, -1);
    MEMORY[0x1A6228C20](v15, -1, -1);
    swift_release();
  }
  else
  {
    swift_release();
  }
  *(void *)(v0[27] + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = MEMORY[0x1E4FBC848] + 8;
  uint64_t v19 = (uint64_t (*)(void))v0[1];
  return v19();
}

uint64_t sub_1A08817F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1A07856F8(&qword_1EB4A5650);
  MEMORY[0x1F4188790]();
  uint64_t v6 = (char *)v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A0884370(a1, (uint64_t)v6, &qword_1EB4A5650);
  uint64_t v7 = sub_1A09F41C8();
  uint64_t v8 = *(void *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_1A0784C08((uint64_t)v6, &qword_1EB4A5650);
    if (*(void *)(a3 + 16))
    {
LABEL_3:
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v9 = sub_1A09F4108();
      uint64_t v11 = v10;
      swift_unknownObjectRelease();
      goto LABEL_6;
    }
  }
  else
  {
    sub_1A09F41B8();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v6, v7);
    if (*(void *)(a3 + 16)) {
      goto LABEL_3;
    }
  }
  uint64_t v9 = 0;
  uint64_t v11 = 0;
LABEL_6:
  sub_1A07856F8(&qword_1E94F75F0);
  if (v11 | v9)
  {
    v13[0] = 0;
    v13[1] = 0;
    void v13[2] = v9;
    v13[3] = v11;
  }
  return swift_task_create();
}

uint64_t sub_1A08819C8()
{
  sub_1A07856F8(&qword_1EB4A5650);
  MEMORY[0x1F4188790]();
  uint64_t v2 = (char *)&v17 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = v0 + OBJC_IVAR____TtC17IMSharedUtilities27RemoteIntentBroadcastCenter_lastRequestTime;
  uint64_t v4 = sub_1A09F3A98();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v3, 1, 1, v4);
  uint64_t v5 = OBJC_IVAR____TtC17IMSharedUtilities27RemoteIntentBroadcastCenter_rateLimitInterval;
  if (qword_1E94F7580 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_1A09F3A18();
  uint64_t v7 = sub_1A078510C(v6, (uint64_t)qword_1E94F7560);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(v0 + v5, v7, v6);
  *(void *)(v0 + OBJC_IVAR____TtC17IMSharedUtilities27RemoteIntentBroadcastCenter_nextNotificationTimer) = 0;
  uint64_t v8 = OBJC_IVAR____TtC17IMSharedUtilities27RemoteIntentBroadcastCenter_broadcastCache;
  type metadata accessor for RemoteIntentBroadcastCache();
  uint64_t v9 = swift_allocObject();
  uint64_t v10 = MEMORY[0x1E4FBC860];
  *(void *)(v9 + 16) = 50;
  *(void *)(v9 + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = v10;
  *(void *)(v0 + v_Block_object_dispose(&a9, 8) = v9;
  uint64_t v11 = OBJC_IVAR____TtC17IMSharedUtilities27RemoteIntentBroadcastCenter_observerTask;
  *(void *)(v0 + OBJC_IVAR____TtC17IMSharedUtilities27RemoteIntentBroadcastCenter_observerTask) = 0;
  *(unsigned char *)(v0 + OBJC_IVAR____TtC17IMSharedUtilities27RemoteIntentBroadcastCenter_hasObserver) = 0;
  uint64_t v12 = sub_1A09F41C8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v2, 1, 1, v12);
  uint64_t v13 = swift_allocObject();
  swift_weakInit();
  os_log_type_t v14 = (void *)swift_allocObject();
  _DWORD v14[2] = 0;
  void v14[3] = 0;
  void v14[4] = v13;
  uint64_t v15 = sub_1A08817F8((uint64_t)v2, (uint64_t)&unk_1E94F9420, (uint64_t)v14);
  sub_1A0784C08((uint64_t)v2, &qword_1EB4A5650);
  *(void *)(v0 + v11) = v15;
  swift_release();
  return v0;
}

uint64_t RemoteIntentBroadcastCenter.deinit()
{
  if (*(void *)(v0 + OBJC_IVAR____TtC17IMSharedUtilities27RemoteIntentBroadcastCenter_observerTask))
  {
    swift_retain();
    sub_1A07856F8(&qword_1E94F75F0);
    sub_1A07856F8((uint64_t *)&unk_1EB4A5620);
    sub_1A09F4258();
    swift_release();
  }
  sub_1A0784C08(v0 + OBJC_IVAR____TtC17IMSharedUtilities27RemoteIntentBroadcastCenter_lastRequestTime, (uint64_t *)&unk_1E94F93F8);
  uint64_t v1 = v0 + OBJC_IVAR____TtC17IMSharedUtilities27RemoteIntentBroadcastCenter_rateLimitInterval;
  uint64_t v2 = sub_1A09F3A18();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  return v0;
}

uint64_t RemoteIntentBroadcastCenter.__deallocating_deinit()
{
  if (*(void *)(v0 + OBJC_IVAR____TtC17IMSharedUtilities27RemoteIntentBroadcastCenter_observerTask))
  {
    swift_retain();
    sub_1A07856F8(&qword_1E94F75F0);
    sub_1A07856F8((uint64_t *)&unk_1EB4A5620);
    sub_1A09F4258();
    swift_release();
  }
  sub_1A0784C08(v0 + OBJC_IVAR____TtC17IMSharedUtilities27RemoteIntentBroadcastCenter_lastRequestTime, (uint64_t *)&unk_1E94F93F8);
  uint64_t v1 = v0 + OBJC_IVAR____TtC17IMSharedUtilities27RemoteIntentBroadcastCenter_rateLimitInterval;
  uint64_t v2 = sub_1A09F3A18();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_unknownObjectRelease();
  swift_release();
  swift_release();

  return swift_deallocClassInstance();
}

void sub_1A0881E60(uint64_t a1)
{
  uint64_t v3 = (unsigned char *)(v1 + OBJC_IVAR____TtC17IMSharedUtilities27RemoteIntentBroadcastCenter_hasObserver);
  swift_beginAccess();
  if (*v3 == 1)
  {
    if (qword_1E94F75D0 != -1) {
      swift_once();
    }
    uint64_t v4 = sub_1A09F39E8();
    sub_1A078510C(v4, (uint64_t)qword_1E94F75B0);
    sub_1A0883D94(a1, (uint64_t)v16);
    uint64_t v5 = sub_1A09F39C8();
    os_log_type_t v6 = sub_1A09F4368();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = (uint8_t *)swift_slowAlloc();
      uint64_t v8 = swift_slowAlloc();
      uint64_t v15 = v8;
      *(_DWORD *)uint64_t v7 = 136315138;
      sub_1A086F45C(v16, v16[3]);
      swift_getDynamicType();
      uint64_t v9 = sub_1A09F4D08();
      sub_1A0785144(v9, v10, &v15);
      sub_1A09F4528();
      swift_bridgeObjectRelease();
      _s17IMSharedUtilities29RemoteIntentBroadcastEncodingVwxx_0((uint64_t)v16);
      _os_log_impl(&dword_1A0772000, v5, v6, "Recording broadcast for payload type: %s", v7, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1A6228C20](v8, -1, -1);
      MEMORY[0x1A6228C20](v7, -1, -1);
    }
    else
    {
      _s17IMSharedUtilities29RemoteIntentBroadcastEncodingVwxx_0((uint64_t)v16);
    }

    swift_retain();
    sub_1A08A3720(a1);
    swift_release();
    sub_1A0882D3C();
  }
  else
  {
    if (qword_1E94F75D0 != -1) {
      swift_once();
    }
    uint64_t v11 = sub_1A09F39E8();
    sub_1A078510C(v11, (uint64_t)qword_1E94F75B0);
    uint64_t v12 = sub_1A09F39C8();
    os_log_type_t v13 = sub_1A09F4368();
    if (os_log_type_enabled(v12, v13))
    {
      os_log_type_t v14 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)os_log_type_t v14 = 0;
      _os_log_impl(&dword_1A0772000, v12, v13, "Broadcast requested, but we don't have an observer. Bailing.", v14, 2u);
      MEMORY[0x1A6228C20](v14, -1, -1);
    }
  }
}

void sub_1A088212C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1A09F2EE8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1A09F2F08();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = OBJC_IVAR____TtC17IMSharedUtilities27RemoteIntentBroadcastCenter_nextNotificationTimer;
  uint64_t v10 = *(void *)(v0 + OBJC_IVAR____TtC17IMSharedUtilities27RemoteIntentBroadcastCenter_nextNotificationTimer);
  uint64_t v41 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (v10)
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_1A09F4498();
    swift_unknownObjectRelease();
  }
  *(void *)(v1 + v9) = 0;
  swift_unknownObjectRelease();
  uint64_t v11 = sub_1A08826B0();
  uint64_t v12 = *(void *)(v11 + 16);
  if (v12)
  {
    if (qword_1E94F75D0 != -1) {
      swift_once();
    }
    char v40 = v5;
    uint64_t v13 = sub_1A09F39E8();
    sub_1A078510C(v13, (uint64_t)qword_1E94F75B0);
    swift_bridgeObjectRetain_n();
    os_log_type_t v14 = sub_1A09F39C8();
    os_log_type_t v15 = sub_1A09F4388();
    BOOL v16 = os_log_type_enabled(v14, v15);
    uint64_t v42 = v11;
    uint64_t v39 = v6;
    uint64_t v17 = v2;
    if (v16)
    {
      long long v45 = v14;
      uint64_t v18 = (uint8_t *)swift_slowAlloc();
      uint64_t v19 = swift_slowAlloc();
      uint64_t v47 = v19;
      *(_DWORD *)uint64_t v18 = 136315138;
      char v44 = (void (*)(char *, void, uint64_t))(v18 + 4);
      swift_bridgeObjectRetain();
      uint64_t v20 = sub_1A07856F8((uint64_t *)&unk_1E94F9408);
      os_log_type_t v21 = v15;
      uint64_t v22 = MEMORY[0x1A6226250](v42, v20);
      uint64_t v23 = v7;
      unint64_t v25 = v24;
      swift_bridgeObjectRelease();
      uint64_t v46 = sub_1A0785144(v22, v25, &v47);
      uint64_t v11 = v42;
      sub_1A09F4528();
      swift_bridgeObjectRelease_n();
      uint64_t v7 = v23;
      swift_bridgeObjectRelease();
      uint64_t v26 = v45;
      _os_log_impl(&dword_1A0772000, v45, v21, "Posting notification event for entities: %s", v18, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1A6228C20](v19, -1, -1);
      MEMORY[0x1A6228C20](v18, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    LODWORD(v45) = *MEMORY[0x1E4F181E0];
    uint64_t v31 = *(void (**)(char *, void, uint64_t))(v3 + 104);
    uint64_t v43 = v3 + 104;
    char v44 = v31;
    unint64_t v32 = (void (**)(char *, uint64_t))(v3 + 8);
    uint64_t v33 = v11 + 40;
    uint64_t v34 = v39;
    uint64_t v35 = v40;
    uint64_t v36 = v41;
    do
    {
      v44(v35, v45, v17);
      sub_1A09F2F28();
      (*v32)(v35, v17);
      sub_1A09F2EF8();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v36, v34);
      v33 += 16;
      --v12;
    }
    while (v12);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    if (qword_1E94F75D0 != -1) {
      swift_once();
    }
    uint64_t v27 = sub_1A09F39E8();
    sub_1A078510C(v27, (uint64_t)qword_1E94F75B0);
    long long v45 = sub_1A09F39C8();
    os_log_type_t v28 = sub_1A09F4388();
    if (os_log_type_enabled(v45, v28))
    {
      uint64_t v29 = (uint8_t *)swift_slowAlloc();
      uint64_t v30 = swift_slowAlloc();
      uint64_t v47 = v30;
      *(_DWORD *)uint64_t v29 = 136315138;
      uint64_t v46 = sub_1A0785144(0x2928796669746F6ELL, 0xE800000000000000, &v47);
      sub_1A09F4528();
      _os_log_impl(&dword_1A0772000, v45, v28, "%s Didn't have any app entities for posting notifications.", v29, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1A6228C20](v30, -1, -1);
      MEMORY[0x1A6228C20](v29, -1, -1);
    }
    else
    {
      uint64_t v37 = v45;
    }
  }
}

uint64_t sub_1A08826B0()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC17IMSharedUtilities27RemoteIntentBroadcastCenter_broadcastCache);
  swift_beginAccess();
  uint64_t v2 = *(void *)(v1 + 24);
  uint64_t v3 = *(void *)(v2 + 16);
  if (v3)
  {
    uint64_t v4 = v2 + 32;
    swift_bridgeObjectRetain();
    uint64_t v5 = (void *)MEMORY[0x1E4FBC868];
    while (1)
    {
      uint64_t v34 = v3;
      sub_1A0883D94(v4, (uint64_t)v35);
      sub_1A086F45C(v35, v35[3]);
      DynamicCFStringRef Type = swift_getDynamicType();
      uint64_t v8 = v36;
      uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v36 + 40);
      v9(DynamicType, v36);
      swift_getAssociatedTypeWitness();
      uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
      uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 16);
      uint64_t v12 = swift_checkMetadataState();
      uint64_t v13 = v11(v12, AssociatedConformanceWitness);
      uint64_t v15 = v14;
      uint64_t v16 = ((uint64_t (*)(uint64_t, uint64_t))v9)(DynamicType, v8);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      unint64_t v19 = sub_1A087AAA4(v13, v15);
      uint64_t v20 = v5[2];
      BOOL v21 = (v18 & 1) == 0;
      uint64_t v22 = v20 + v21;
      if (__OFADD__(v20, v21)) {
        break;
      }
      char v23 = v18;
      if (v5[3] >= v22)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          sub_1A09E1170();
        }
      }
      else
      {
        sub_1A09DE360(v22, isUniquelyReferenced_nonNull_native);
        unint64_t v24 = sub_1A087AAA4(v13, v15);
        if ((v23 & 1) != (v25 & 1)) {
          goto LABEL_18;
        }
        unint64_t v19 = v24;
      }
      uint64_t v26 = *(void *)(*(void *)(AssociatedConformanceWitness + 8) + 8);
      if (v23)
      {
        uint64_t v6 = (uint64_t *)(v5[7] + 16 * v19);
        *uint64_t v6 = v16;
        v6[1] = v26;
      }
      else
      {
        v5[(v19 >> 6) + 8] |= 1 << v19;
        uint64_t v27 = (uint64_t *)(v5[6] + 16 * v19);
        *uint64_t v27 = v13;
        v27[1] = v15;
        os_log_type_t v28 = (uint64_t *)(v5[7] + 16 * v19);
        *os_log_type_t v28 = v16;
        v28[1] = v26;
        uint64_t v29 = v5[2];
        BOOL v30 = __OFADD__(v29, 1);
        uint64_t v31 = v29 + 1;
        if (v30) {
          goto LABEL_17;
        }
        void v5[2] = v31;
        swift_bridgeObjectRetain();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      _s17IMSharedUtilities29RemoteIntentBroadcastEncodingVwxx_0((uint64_t)v35);
      v4 += 40;
      uint64_t v3 = v34 - 1;
      if (v34 == 1) {
        goto LABEL_15;
      }
    }
    __break(1u);
LABEL_17:
    __break(1u);
LABEL_18:
    uint64_t result = sub_1A09F4BE8();
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = (void *)MEMORY[0x1E4FBC868];
LABEL_15:
    swift_bridgeObjectRelease();
    uint64_t v32 = sub_1A08DCE18((uint64_t)v5);
    swift_bridgeObjectRelease();
    return v32;
  }
  return result;
}

uint64_t sub_1A0882984(uint64_t a1, unint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = OBJC_IVAR____TtC17IMSharedUtilities27RemoteIntentBroadcastCenter_broadcastCache;
  swift_retain();
  uint64_t v7 = sub_1A08A3C88(a1, a2);
  swift_release();
  if (qword_1E94F75D0 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_1A09F39E8();
  sub_1A078510C(v8, (uint64_t)qword_1E94F75B0);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v9 = sub_1A09F39C8();
  os_log_type_t v10 = sub_1A09F4358();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = swift_slowAlloc();
    uint64_t v18 = swift_slowAlloc();
    v20[0] = v18;
    *(_DWORD *)uint64_t v11 = 136315650;
    sub_1A0785144(0xD000000000000018, 0x80000001A0A31600, v20);
    sub_1A09F4528();
    *(_WORD *)(v11 + 12) = 2048;
    swift_bridgeObjectRelease();
    sub_1A09F4528();
    swift_bridgeObjectRelease();
    *(_WORD *)(v11 + 22) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v19 = sub_1A0785144(a1, a2, v20);
    sub_1A09F4528();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1A0772000, v9, v10, "%s: returning %ld cached broadcasts matching identifier: %s", (uint8_t *)v11, 0x20u);
    swift_arrayDestroy();
    uint64_t v3 = v2;
    MEMORY[0x1A6228C20](v18, -1, -1);
    MEMORY[0x1A6228C20](v11, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  uint64_t v12 = *(void *)(v3 + v6);
  swift_beginAccess();
  if (!*(void *)(*(void *)(v12 + 24) + 16))
  {
    uint64_t v13 = sub_1A09F39C8();
    os_log_type_t v14 = sub_1A09F4358();
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v15 = (uint8_t *)swift_slowAlloc();
      uint64_t v16 = swift_slowAlloc();
      uint64_t v19 = v16;
      *(_DWORD *)uint64_t v15 = 136315138;
      sub_1A0785144(0xD000000000000018, 0x80000001A0A31600, &v19);
      sub_1A09F4528();
      _os_log_impl(&dword_1A0772000, v13, v14, "%s: there are no remaining cached broadcasts. Resetting state.", v15, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1A6228C20](v16, -1, -1);
      MEMORY[0x1A6228C20](v15, -1, -1);
    }

    sub_1A0883B9C();
  }
  return v7;
}

void sub_1A0882D3C()
{
  uint64_t v1 = (unsigned char *)(v0 + OBJC_IVAR____TtC17IMSharedUtilities27RemoteIntentBroadcastCenter_hasObserver);
  swift_beginAccess();
  if (*v1 == 1)
  {
    uint64_t v2 = sub_1A09F3A98();
    uint64_t v50 = v44;
    uint64_t v3 = *(void *)(v2 - 8);
    uint64_t v4 = *(void *)(v3 + 64);
    MEMORY[0x1F4188790](v2);
    unint64_t v5 = (v4 + 15) & 0xFFFFFFFFFFFFFFF0;
    uint64_t v6 = (char *)v44 - v5;
    uint64_t v7 = sub_1A09F3A78();
    uint64_t v48 = v44;
    MEMORY[0x1F4188790](v7);
    uint64_t v47 = (char *)v44 - v5;
    uint64_t v8 = sub_1A07856F8((uint64_t *)&unk_1E94F93F8);
    uint64_t v51 = v44;
    uint64_t v9 = *(void *)(*(void *)(v8 - 8) + 64);
    MEMORY[0x1F4188790](v8 - 8);
    uint64_t v10 = v0 + OBJC_IVAR____TtC17IMSharedUtilities27RemoteIntentBroadcastCenter_lastRequestTime;
    swift_beginAccess();
    sub_1A0884370(v10, (uint64_t)v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t *)&unk_1E94F93F8);
    int v11 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 48))((char *)v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), 1, v2);
    uint64_t v49 = v0;
    uint64_t v46 = v4;
    if (v11 == 1)
    {
      uint64_t v12 = sub_1A0784C08((uint64_t)v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t *)&unk_1E94F93F8);
      char v13 = 1;
    }
    else
    {
      uint64_t v18 = (*(uint64_t (**)(char *, char *, uint64_t))(v3 + 32))(v47, (char *)v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v2);
      uint64_t v51 = v44;
      MEMORY[0x1F4188790](v18);
      uint64_t v19 = (char *)v44 - v5;
      uint64_t v20 = sub_1A09F3A18();
      uint64_t v45 = v3;
      uint64_t v21 = v20;
      v44[1] = v44;
      uint64_t v22 = *(void *)(v20 - 8);
      MEMORY[0x1F4188790](v20);
      unint64_t v24 = (char *)v44 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, uint64_t, uint64_t))(v22 + 16))(v24, v0 + OBJC_IVAR____TtC17IMSharedUtilities27RemoteIntentBroadcastCenter_rateLimitInterval, v21);
      char v25 = v47;
      MEMORY[0x1A6225C80](v47, v24);
      uint64_t v26 = v21;
      uint64_t v3 = v45;
      (*(void (**)(char *, uint64_t))(v22 + 8))(v24, v26);
      sub_1A0884234();
      char v13 = sub_1A09F3DC8();
      uint64_t v27 = *(void (**)(char *, uint64_t))(v3 + 8);
      v27(v19, v2);
      uint64_t v12 = ((uint64_t (*)(char *, uint64_t))v27)(v25, v2);
    }
    uint64_t v28 = v2;
    MEMORY[0x1F4188790](v12);
    uint64_t v29 = (char *)v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v29, v6, v2);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v3 + 56))(v29, 0, 1, v2);
    swift_beginAccess();
    sub_1A08841CC((uint64_t)v29, v10);
    uint64_t v30 = swift_endAccess();
    uint64_t v31 = v6;
    if (v13)
    {
      if (qword_1E94F75D0 != -1) {
        swift_once();
      }
      uint64_t v32 = sub_1A09F39E8();
      sub_1A078510C(v32, (uint64_t)qword_1E94F75B0);
      uint64_t v33 = sub_1A09F39C8();
      os_log_type_t v34 = sub_1A09F4358();
      if (os_log_type_enabled(v33, v34))
      {
        uint64_t v35 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v35 = 0;
        _os_log_impl(&dword_1A0772000, v33, v34, "Posting broadcast notification immediately.", v35, 2u);
        MEMORY[0x1A6228C20](v35, -1, -1);
      }

      sub_1A088212C();
      (*(void (**)(char *, uint64_t))(v3 + 8))(v31, v2);
    }
    else
    {
      MEMORY[0x1F4188790](v30);
      uint64_t v37 = (char *)v44 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
      uint64_t v38 = v3;
      uint64_t v39 = sub_1A09F3A18();
      uint64_t v40 = *(void *)(v39 - 8);
      MEMORY[0x1F4188790](v39);
      uint64_t v42 = (char *)v44 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, uint64_t, uint64_t))(v40 + 16))(v42, v49 + OBJC_IVAR____TtC17IMSharedUtilities27RemoteIntentBroadcastCenter_rateLimitInterval, v39);
      MEMORY[0x1A6225C80](v31, v42);
      (*(void (**)(char *, uint64_t))(v40 + 8))(v42, v39);
      sub_1A0883444((uint64_t)v37);
      uint64_t v43 = *(void (**)(char *, uint64_t))(v38 + 8);
      v43(v37, v28);
      v43(v31, v28);
    }
  }
  else
  {
    if (qword_1E94F75D0 != -1) {
      swift_once();
    }
    uint64_t v14 = sub_1A09F39E8();
    sub_1A078510C(v14, (uint64_t)qword_1E94F75B0);
    uint64_t v15 = sub_1A09F39C8();
    os_log_type_t v16 = sub_1A09F4368();
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v17 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v17 = 0;
      _os_log_impl(&dword_1A0772000, v15, v16, "notifyWhenAllowed() called, but we don't have an observer. Bailing.", v17, 2u);
      MEMORY[0x1A6228C20](v17, -1, -1);
    }
  }
}

void sub_1A0883444(uint64_t a1)
{
  if (*(void *)(v1 + OBJC_IVAR____TtC17IMSharedUtilities27RemoteIntentBroadcastCenter_nextNotificationTimer))
  {
    if (qword_1E94F75D0 != -1) {
      swift_once();
    }
    uint64_t v2 = sub_1A09F39E8();
    sub_1A078510C(v2, (uint64_t)qword_1E94F75B0);
    uint64_t v37 = sub_1A09F39C8();
    os_log_type_t v3 = sub_1A09F4358();
    if (os_log_type_enabled(v37, v3))
    {
      uint64_t v4 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v4 = 0;
      _os_log_impl(&dword_1A0772000, v37, v3, "Rate limiting broadcast. A timer is running.", v4, 2u);
      MEMORY[0x1A6228C20](v4, -1, -1);
    }
  }
  else
  {
    uint64_t v5 = v1;
    uint64_t v36 = a1;
    uint64_t v37 = OBJC_IVAR____TtC17IMSharedUtilities27RemoteIntentBroadcastCenter_nextNotificationTimer;
    if (qword_1E94F75D0 != -1) {
      swift_once();
    }
    uint64_t v6 = sub_1A09F39E8();
    sub_1A078510C(v6, (uint64_t)qword_1E94F75B0);
    uint64_t v7 = sub_1A09F39C8();
    os_log_type_t v8 = sub_1A09F4358();
    if (os_log_type_enabled(v7, v8))
    {
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v9 = 0;
      _os_log_impl(&dword_1A0772000, v7, v8, "Rate limiting broadcast. Scheduling a new timer.", v9, 2u);
      MEMORY[0x1A6228C20](v9, -1, -1);
    }

    sub_1A078231C(0, &qword_1E94F7670);
    uint64_t v10 = sub_1A09F4458();
    uint64_t v11 = *(void *)(v10 - 8);
    MEMORY[0x1F4188790](v10);
    char v13 = (char *)v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_1A09F4448();
    sub_1A078231C(0, (unint64_t *)&qword_1EB4A5CC0);
    uint64_t v14 = (void *)sub_1A09F43E8();
    uint64_t v15 = sub_1A09F4468();

    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v17 = swift_allocObject();
    swift_weakInit();
    void aBlock[4] = sub_1A08841C4;
    aBlock[5] = v17;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1A077DA28;
    aBlock[3] = &unk_1EF2C0DF8;
    uint64_t v18 = _Block_copy(aBlock);
    uint64_t v19 = sub_1A09F3A68();
    v34[2] = v34;
    uint64_t v20 = *(void *)(v19 - 8);
    MEMORY[0x1F4188790](v19);
    uint64_t v22 = (char *)v34 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
    swift_retain();
    sub_1A09CE694();
    uint64_t v23 = sub_1A09F3A38();
    v34[1] = v34;
    uint64_t v24 = *(void *)(v23 - 8);
    uint64_t v35 = v5;
    uint64_t v25 = v24;
    MEMORY[0x1F4188790](v23);
    uint64_t v27 = (char *)v34 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_1A09CE6AC();
    sub_1A09F4488();
    _Block_release(v18);
    (*(void (**)(char *, uint64_t))(v25 + 8))(v27, v23);
    (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v19);
    swift_release();
    swift_release();
    uint64_t v28 = sub_1A09F3A18();
    uint64_t v29 = *(void *)(v28 - 8);
    uint64_t v30 = *(void *)(v29 + 64);
    MEMORY[0x1F4188790](v28);
    uint64_t v31 = (void *)((char *)v34 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0));
    uint64_t v32 = (*(uint64_t (**)(void *, void, uint64_t))(v29 + 104))(v31, *MEMORY[0x1E4FBCAD8], v28);
    MEMORY[0x1F4188790](v32);
    sub_1A09CE770(v31);
    MEMORY[0x1A6226680](v36, v31, v31, ObjectType);
    uint64_t v33 = *(void (**)(void *, uint64_t))(v29 + 8);
    v33(v31, v28);
    v33(v31, v28);
    sub_1A09F44A8();
    *(Class *)((char *)&v37->isa + v35) = (Class)v15;
    swift_unknownObjectRelease();
  }
}

uint64_t sub_1A0883A88()
{
  if (qword_1E94F75D0 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_1A09F39E8();
  sub_1A078510C(v0, (uint64_t)qword_1E94F75B0);
  uint64_t v1 = sub_1A09F39C8();
  os_log_type_t v2 = sub_1A09F4358();
  if (os_log_type_enabled(v1, v2))
  {
    os_log_type_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)os_log_type_t v3 = 0;
    _os_log_impl(&dword_1A0772000, v1, v2, "Timer fired. Sending notification.", v3, 2u);
    MEMORY[0x1A6228C20](v3, -1, -1);
  }

  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1A088212C();
    return swift_release();
  }
  return result;
}

uint64_t sub_1A0883B9C()
{
  uint64_t v1 = v0;
  if (qword_1E94F75D0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1A09F39E8();
  sub_1A078510C(v2, (uint64_t)qword_1E94F75B0);
  os_log_type_t v3 = sub_1A09F39C8();
  os_log_type_t v4 = sub_1A09F4358();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v6 = swift_slowAlloc();
    v10[0] = v6;
    *(_DWORD *)uint64_t v5 = 136315138;
    sub_1A0785144(0x29287465736572, 0xE700000000000000, v10);
    sub_1A09F4528();
    _os_log_impl(&dword_1A0772000, v3, v4, "%s Removing all cached payloads, and cancelling any active timers", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1A6228C20](v6, -1, -1);
    MEMORY[0x1A6228C20](v5, -1, -1);
  }

  uint64_t v7 = OBJC_IVAR____TtC17IMSharedUtilities27RemoteIntentBroadcastCenter_nextNotificationTimer;
  if (*(void *)(v1 + OBJC_IVAR____TtC17IMSharedUtilities27RemoteIntentBroadcastCenter_nextNotificationTimer))
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_1A09F4498();
    swift_unknownObjectRelease();
  }
  *(void *)(v1 + v7) = 0;
  swift_unknownObjectRelease();
  uint64_t v8 = *(void *)(v1 + OBJC_IVAR____TtC17IMSharedUtilities27RemoteIntentBroadcastCenter_broadcastCache);
  swift_beginAccess();
  *(void *)(v8 + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = MEMORY[0x1E4FBC860];
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A0883D94(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = v3;
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_1A0883DF8(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    sub_1A07856F8((uint64_t *)&unk_1EB4A5A00);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v12 = v10 + 32;
  char v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1A09F47F8();
  __break(1u);
  return result;
}

uint64_t sub_1A0883F48@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = (unsigned char *)(*a1 + OBJC_IVAR____TtC17IMSharedUtilities27RemoteIntentBroadcastCenter_hasObserver);
  uint64_t result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

void sub_1A0883F9C(char *a1, void *a2)
{
  char v2 = *a1;
  uint64_t v3 = (unsigned char *)(*a2 + OBJC_IVAR____TtC17IMSharedUtilities27RemoteIntentBroadcastCenter_hasObserver);
  swift_beginAccess();
  *uint64_t v3 = v2;
  sub_1A087FDA4();
}

uint64_t sub_1A0883FF8()
{
  return type metadata accessor for RemoteIntentBroadcastCenter();
}

void sub_1A0884000()
{
  sub_1A0884134();
  if (v0 <= 0x3F)
  {
    sub_1A09F3A18();
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

uint64_t method lookup function for RemoteIntentBroadcastCenter(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for RemoteIntentBroadcastCenter);
}

uint64_t dispatch thunk of RemoteIntentBroadcastCenter.schedule(_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 296))();
}

void sub_1A0884134()
{
  if (!qword_1E94F75E0)
  {
    sub_1A09F3A98();
    unint64_t v0 = sub_1A09F4518();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E94F75E0);
    }
  }
}

uint64_t sub_1A088418C()
{
  swift_weakDestroy();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1A08841C4()
{
  return sub_1A0883A88();
}

uint64_t sub_1A08841CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1A07856F8((uint64_t *)&unk_1E94F93F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

unint64_t sub_1A0884234()
{
  unint64_t result = qword_1E94F7668;
  if (!qword_1E94F7668)
  {
    sub_1A09F3A98();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94F7668);
  }
  return result;
}

uint64_t sub_1A0884280()
{
  swift_unknownObjectRelease();
  swift_release();

  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_1A08842C0(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 32);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1A077EE58;
  v5[27] = a1;
  v5[28] = v4;
  return MEMORY[0x1F4188298](sub_1A087FF80, 0, 0);
}

uint64_t sub_1A0884370(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_1A07856F8(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

unint64_t sub_1A08843D4()
{
  unint64_t result = qword_1E94F74E8;
  if (!qword_1E94F74E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94F74E8);
  }
  return result;
}

uint64_t sub_1A0884428(uint64_t a1, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

uint64_t *sub_1A0884478(uint64_t *a1)
{
  uint64_t v1 = a1;
  if ((*(unsigned char *)(*(void *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

id sub_1A08844DC()
{
  id result = sub_1A0884550(0, 1);
  qword_1E94F9428 = (uint64_t)result;
  return result;
}

id static NSNumberFormatter.zeroFormatter.getter()
{
  return sub_1A0780130(&qword_1E94F84C8, (void **)&qword_1E94F9428);
}

id sub_1A0884528()
{
  id result = sub_1A0884550(4, 3);
  qword_1E94F9430 = (uint64_t)result;
  return result;
}

id sub_1A0884550(uint64_t a1, uint64_t a2)
{
  id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28EE0]), sel_init);
  objc_msgSend(v4, sel_setNumberStyle_, 3);
  objc_msgSend(v4, sel_setMinimumFractionDigits_, a1);
  objc_msgSend(v4, sel_setMaximumFractionDigits_, a1);
  objc_msgSend(v4, sel_setMinimumSignificantDigits_, a2);
  objc_msgSend(v4, sel_setMaximumSignificantDigits_, a2);
  sub_1A08847C8();
  uint64_t v5 = (void *)sub_1A09F44F8();
  objc_msgSend(v4, sel_setRoundingIncrement_, v5);

  objc_msgSend(v4, sel_setRoundingMode_, 2);
  return v4;
}

id static NSNumberFormatter.percentFormatter.getter()
{
  return sub_1A0780130(&qword_1E94F84D0, (void **)&qword_1E94F9430);
}

uint64_t static NSNumberFormatter.percentString(forTotal:count:)(double a1, double a2)
{
  double v2 = a2 / a1;
  BOOL v3 = a1 == 0.0;
  double v4 = 1.0;
  if (!v3) {
    double v4 = v2;
  }
  return sub_1A088467C(v4);
}

uint64_t sub_1A088467C(double a1)
{
  if (a1 <= 0.0)
  {
    if (qword_1E94F84C8 != -1) {
      swift_once();
    }
    double v4 = (void *)qword_1E94F9428;
    sub_1A08847C8();
    double v2 = (void *)sub_1A09F44F8();
    id v3 = objc_msgSend(v4, sel_stringFromNumber_, v2);
  }
  else
  {
    if (qword_1E94F84D0 != -1) {
      swift_once();
    }
    uint64_t v1 = (void *)qword_1E94F9430;
    double v2 = (void *)sub_1A09F35B8();
    id v3 = objc_msgSend(v1, sel_stringFromNumber_, v2);
  }
  id v5 = v3;

  if (!v5) {
    return 0;
  }
  uint64_t v6 = sub_1A09F3E18();

  return v6;
}

unint64_t sub_1A08847C8()
{
  unint64_t result = qword_1EB4A59B8;
  if (!qword_1EB4A59B8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EB4A59B8);
  }
  return result;
}

__n128 initializeWithTake for MarkSavedRequest(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

ValueMetadata *type metadata accessor for MarkSavedRequest()
{
  return &type metadata for MarkSavedRequest;
}

ValueMetadata *type metadata accessor for MarkPlayedExpressiveSendRequest()
{
  return &type metadata for MarkPlayedExpressiveSendRequest;
}

void _s17IMSharedUtilities16MarkSavedRequestVwxx_0(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  double v2 = *(void **)(a1 + 24);
}

uint64_t _s17IMSharedUtilities16MarkSavedRequestVwcp_0(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + _Block_object_dispose(&a9, 8) = *(unsigned char *)(a2 + 8);
  long long v3 = *(void **)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v4 = v3;
  return a1;
}

uint64_t _s17IMSharedUtilities16MarkSavedRequestVwca_0(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + _Block_object_dispose(&a9, 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  id v4 = *(void **)(a2 + 24);
  id v5 = *(void **)(a1 + 24);
  *(void *)(a1 + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = v4;
  id v6 = v4;

  return a1;
}

uint64_t _s17IMSharedUtilities16MarkSavedRequestVwta_0(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + _Block_object_dispose(&a9, 8) = *(unsigned char *)(a2 + 8);
  swift_bridgeObjectRelease();
  id v4 = *(void **)(a1 + 24);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);

  return a1;
}

uint64_t _s17IMSharedUtilities16MarkSavedRequestVwet_0(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1A0884A00(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + _Block_object_dispose(&a9, 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MarkPlayedRequest()
{
  return &type metadata for MarkPlayedRequest;
}

uint64_t initializeWithCopy for MarkMessageReadRequest(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + _Block_object_dispose(&a9, 8) = *(unsigned char *)(a2 + 8);
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = v3;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for MarkMessageReadRequest(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + _Block_object_dispose(&a9, 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  return a1;
}

__n128 initializeWithTake for MarkMessageReadRequest(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for MarkMessageReadRequest(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + _Block_object_dispose(&a9, 8) = *(unsigned char *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for MarkMessageReadRequest(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MarkMessageReadRequest(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + _Block_object_dispose(&a9, 8) = 0u;
    *(_OWORD *)(result + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MarkMessageReadRequest()
{
  return &type metadata for MarkMessageReadRequest;
}

uint64_t _s17IMSharedUtilities22MarkMessageReadRequestVwxx_0()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for MarkMessageReadClearUnreadCountRequest(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + _Block_object_dispose(&a9, 8) = *(unsigned char *)(a2 + 8);
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = v3;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for MarkMessageReadClearUnreadCountRequest(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + _Block_object_dispose(&a9, 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  return a1;
}

__n128 initializeWithTake for MarkMessageReadClearUnreadCountRequest(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for MarkMessageReadClearUnreadCountRequest(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + _Block_object_dispose(&a9, 8) = *(unsigned char *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  return a1;
}

uint64_t getEnumTagSinglePayload for MarkMessageReadClearUnreadCountRequest(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 41)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MarkMessageReadClearUnreadCountRequest(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = 0u;
    *(_OWORD *)(result + _Block_object_dispose(&a9, 8) = 0u;
    *(unsigned char *)(result + 40) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 41) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 41) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MarkMessageReadClearUnreadCountRequest()
{
  return &type metadata for MarkMessageReadClearUnreadCountRequest;
}

uint64_t sub_1A0884EAC(uint64_t a1)
{
  *(void *)(v2 + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = a1;
  *(void *)(v2 + 32) = v1;
  return MEMORY[0x1F4188298](sub_1A0884ECC, 0, 0);
}

uint64_t sub_1A0884ECC()
{
  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 8);
  long long v3 = (void *)sub_1A09F4068();
  id v4 = (void *)sub_1A09F4068();
  id v5 = *(void **)(v1 + 24);
  *(void *)(v0 + 16) = v5;
  if (v5)
  {
    swift_bridgeObjectRetain();
    sub_1A07856F8((uint64_t *)&unk_1E94F9030);
    id v5 = (void *)sub_1A09F4068();
    sub_1A08787A8(v0 + 16);
  }
  objc_msgSend(*(id *)(v0 + 24), sel_markReadForIDs_style_onServices_messages_clientUnreadCount_setUnreadCountToZero_, v3, v2, v4, v5, *(void *)(*(void *)(v0 + 32) + 32), *(unsigned __int8 *)(*(void *)(v0 + 32) + 40));

  id v6 = *(uint64_t (**)(void))(v0 + 8);
  return v6();
}

unint64_t sub_1A0884FD8(char a1)
{
  unint64_t result = 7562345;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6C79745374616863;
      break;
    case 2:
      unint64_t result = 0x4E65636976726573;
      break;
    case 3:
      unint64_t result = 0x736567617373656DLL;
      break;
    case 4:
      unint64_t result = 0xD000000000000011;
      break;
    case 5:
      unint64_t result = 0xD000000000000014;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A08850BC(void *a1)
{
  long long v3 = v1;
  uint64_t v5 = sub_1A07856F8(&qword_1E94F96E0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A086F45C(a1, a1[3]);
  sub_1A088919C();
  sub_1A09F4CC8();
  uint64_t v12 = *v3;
  HIBYTE(v11) = 0;
  sub_1A07856F8(&qword_1EB4A5610);
  sub_1A0879F5C(&qword_1E94F9140);
  sub_1A09F4A78();
  if (!v2)
  {
    LOBYTE(v12) = 1;
    sub_1A09F4AA8();
    uint64_t v12 = v3[2];
    HIBYTE(v11) = 2;
    sub_1A09F4A78();
    uint64_t v9 = swift_bridgeObjectRetain();
    sub_1A094F3B8(v9, 3);
    swift_bridgeObjectRelease();
    LOBYTE(v12) = 4;
    sub_1A09F4A58();
    LOBYTE(v12) = 5;
    sub_1A09F4A38();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_1A088531C()
{
  return sub_1A0884FD8(*v0);
}

uint64_t sub_1A0885324@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A0887D60(a1, a2);
  *a3 = result;
  return result;
}

void sub_1A088534C(unsigned char *a1@<X8>)
{
  *a1 = 6;
}

uint64_t sub_1A0885358(uint64_t a1)
{
  unint64_t v2 = sub_1A088919C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A0885394(uint64_t a1)
{
  unint64_t v2 = sub_1A088919C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A08853D0()
{
  uint64_t v0 = qword_1E94F9438;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_1A0885408(uint64_t a1, uint64_t a2)
{
  long long v5 = v2[1];
  *(_OWORD *)(v3 + 16) = *v2;
  *(_OWORD *)(v3 + 32) = v5;
  *(_OWORD *)(v3 + 41) = *(_OWORD *)((char *)v2 + 25);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 64) = v6;
  *uint64_t v6 = v3;
  v6[1] = sub_1A08854D0;
  v6[3] = a2;
  void v6[4] = v3 + 16;
  return MEMORY[0x1F4188298](sub_1A0884ECC, 0, 0);
}

uint64_t sub_1A08854D0()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

double sub_1A08855C4@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  sub_1A0888004(a1, &v6);
  if (!v2)
  {
    long long v5 = v7[0];
    *a2 = v6;
    a2[1] = v5;
    double result = *(double *)((char *)v7 + 9);
    *(_OWORD *)((char *)a2 + 25) = *(_OWORD *)((char *)v7 + 9);
  }
  return result;
}

uint64_t sub_1A0885608(void *a1)
{
  return sub_1A08850BC(a1);
}

uint64_t sub_1A0885620(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A0887A10(a1, a2, a3, (uint64_t (*)(void))sub_1A088564C, (uint64_t (*)(void))sub_1A08856A0);
}

unint64_t sub_1A088564C()
{
  unint64_t result = qword_1E94F9488;
  if (!qword_1E94F9488)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94F9488);
  }
  return result;
}

unint64_t sub_1A08856A0()
{
  unint64_t result = qword_1E94F9490;
  if (!qword_1E94F9490)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94F9490);
  }
  return result;
}

unint64_t sub_1A08856F4(uint64_t a1)
{
  unint64_t result = sub_1A088571C();
  *(void *)(a1 + _Block_object_dispose(&a9, 8) = result;
  return result;
}

unint64_t sub_1A088571C()
{
  unint64_t result = qword_1E94F9498;
  if (!qword_1E94F9498)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94F9498);
  }
  return result;
}

uint64_t sub_1A0885770()
{
  return 0;
}

void sub_1A088577C(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_1A0885788(uint64_t a1)
{
  unint64_t v2 = sub_1A0887CB8();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A08857C4(uint64_t a1)
{
  unint64_t v2 = sub_1A0887CB8();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A0885800(uint64_t a1)
{
  return _s17IMSharedUtilities29RemoteIntentBroadcastEncodingVwxx_0(a1);
}

uint64_t sub_1A0885828(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1A08873E0(a1, a2, a3, &qword_1E94F9638, (void (*)(void))sub_1A0887CB8);
}

uint64_t sub_1A0885864(uint64_t a1)
{
  *(void *)(v2 + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = a1;
  *(void *)(v2 + 32) = v1;
  return MEMORY[0x1F4188298](sub_1A0885884, 0, 0);
}

uint64_t sub_1A0885884()
{
  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 8);
  uint64_t v3 = (void *)sub_1A09F4068();
  uint64_t v4 = (void *)sub_1A09F4068();
  long long v5 = *(void **)(v1 + 24);
  *(void *)(v0 + 16) = v5;
  if (v5)
  {
    swift_bridgeObjectRetain();
    sub_1A07856F8((uint64_t *)&unk_1E94F9030);
    long long v5 = (void *)sub_1A09F4068();
    sub_1A08787A8(v0 + 16);
  }
  objc_msgSend(*(id *)(v0 + 24), sel_markReadForIDs_style_onServices_messages_clientUnreadCount_, v3, v2, v4, v5, *(void *)(*(void *)(v0 + 32) + 32));

  long long v6 = *(uint64_t (**)(void))(v0 + 8);
  return v6();
}

uint64_t sub_1A088598C(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_1A07856F8(&qword_1E94F96C8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A086F45C(a1, a1[3]);
  sub_1A0889148();
  sub_1A09F4CC8();
  uint64_t v12 = *v3;
  HIBYTE(v11) = 0;
  sub_1A07856F8(&qword_1EB4A5610);
  sub_1A0879F5C(&qword_1E94F9140);
  sub_1A09F4A78();
  if (!v2)
  {
    LOBYTE(v12) = 1;
    sub_1A09F4AA8();
    uint64_t v12 = v3[2];
    HIBYTE(v11) = 2;
    sub_1A09F4A78();
    uint64_t v9 = swift_bridgeObjectRetain();
    sub_1A094F63C(v9, 3);
    swift_bridgeObjectRelease();
    LOBYTE(v12) = 4;
    sub_1A09F4A58();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_1A0885BC4()
{
  unint64_t result = 7562345;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x6C79745374616863;
      break;
    case 2:
      unint64_t result = 0x4E65636976726573;
      break;
    case 3:
      unint64_t result = 0x736567617373656DLL;
      break;
    case 4:
      unint64_t result = 0xD000000000000011;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A0885C80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A08883AC(a1, a2);
  *a3 = result;
  return result;
}

void sub_1A0885CA8(unsigned char *a1@<X8>)
{
  *a1 = 5;
}

uint64_t sub_1A0885CB4(uint64_t a1)
{
  unint64_t v2 = sub_1A0889148();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A0885CF0(uint64_t a1)
{
  unint64_t v2 = sub_1A0889148();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A0885D2C()
{
  uint64_t v0 = *(void *)aMarkread;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_1A0885D64(uint64_t a1, uint64_t a2)
{
  long long v5 = *(_OWORD *)(v2 + 16);
  *(_OWORD *)(v3 + 16) = *(_OWORD *)v2;
  *(_OWORD *)(v3 + 32) = v5;
  *(void *)(v3 + 4_Block_object_dispose(&a9, 8) = *(void *)(v2 + 32);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 56) = v6;
  *uint64_t v6 = v3;
  v6[1] = sub_1A0885E2C;
  v6[3] = a2;
  void v6[4] = v3 + 16;
  return MEMORY[0x1F4188298](sub_1A0885884, 0, 0);
}

uint64_t sub_1A0885E2C()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

double sub_1A0885F20@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1A08885F4(a1, v6);
  if (!v2)
  {
    double result = *(double *)v6;
    long long v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    *(void *)(a2 + 32) = v7;
  }
  return result;
}

uint64_t sub_1A0885F68(void *a1)
{
  return sub_1A088598C(a1);
}

uint64_t sub_1A0885F80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A0887A10(a1, a2, a3, (uint64_t (*)(void))sub_1A0885FAC, (uint64_t (*)(void))sub_1A0886000);
}

unint64_t sub_1A0885FAC()
{
  unint64_t result = qword_1E94F94A0;
  if (!qword_1E94F94A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94F94A0);
  }
  return result;
}

unint64_t sub_1A0886000()
{
  unint64_t result = qword_1E94F94A8;
  if (!qword_1E94F94A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94F94A8);
  }
  return result;
}

unint64_t sub_1A0886054(uint64_t a1)
{
  unint64_t result = sub_1A088607C();
  *(void *)(a1 + _Block_object_dispose(&a9, 8) = result;
  return result;
}

unint64_t sub_1A088607C()
{
  unint64_t result = qword_1E94F94B0;
  if (!qword_1E94F94B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94F94B0);
  }
  return result;
}

uint64_t sub_1A08860D0(uint64_t a1)
{
  unint64_t v2 = sub_1A08890F4();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A088610C(uint64_t a1)
{
  unint64_t v2 = sub_1A08890F4();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A0886148()
{
  uint64_t v0 = qword_1E94F9458;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_1A0886180(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *v2;
  *(void *)(v3 + 16) = a2;
  *(void *)(v3 + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = v4;
  *(unsigned char *)(v3 + 4_Block_object_dispose(&a9, 8) = *((unsigned char *)v2 + 8);
  *(_OWORD *)(v3 + 32) = *((_OWORD *)v2 + 1);
  return MEMORY[0x1F4188298](sub_1A08861B4, 0, 0);
}

uint64_t sub_1A08861B4()
{
  uint64_t v1 = *(void *)(v0 + 40);
  uint64_t v2 = *(unsigned __int8 *)(v0 + 48);
  uint64_t v3 = *(void **)(v0 + 16);
  uint64_t v4 = (void *)sub_1A09F4068();
  long long v5 = (void *)sub_1A09F4068();
  objc_msgSend(v3, sel_markPlayedForIDs_style_onServices_message_, v4, v2, v5, v1);

  uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
  return v6();
}

id sub_1A0886278@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1A0886E48(a1, &qword_1E94F96A0, (void (*)(void))sub_1A08890F4, a2);
}

uint64_t sub_1A08862B4(void *a1)
{
  return sub_1A0886500(a1, *(void *)v1, *(unsigned __int8 *)(v1 + 8), *(void *)(v1 + 16), *(void *)(v1 + 24), &qword_1E94F96B0, (void (*)(void))sub_1A08890F4);
}

uint64_t sub_1A08862FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A0887A10(a1, a2, a3, (uint64_t (*)(void))sub_1A0886328, (uint64_t (*)(void))sub_1A088637C);
}

unint64_t sub_1A0886328()
{
  unint64_t result = qword_1E94F94B8;
  if (!qword_1E94F94B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94F94B8);
  }
  return result;
}

unint64_t sub_1A088637C()
{
  unint64_t result = qword_1E94F94C0;
  if (!qword_1E94F94C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94F94C0);
  }
  return result;
}

unint64_t sub_1A08863D0(uint64_t a1)
{
  unint64_t result = sub_1A08863F8();
  *(void *)(a1 + _Block_object_dispose(&a9, 8) = result;
  return result;
}

unint64_t sub_1A08863F8()
{
  unint64_t result = qword_1E94F94C8;
  if (!qword_1E94F94C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94F94C8);
  }
  return result;
}

uint64_t sub_1A088644C(uint64_t a1)
{
  unint64_t v2 = sub_1A0887C64();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A0886488(uint64_t a1)
{
  unint64_t v2 = sub_1A0887C64();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A08864C4(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1A08873E0(a1, a2, a3, &qword_1E94F9628, (void (*)(void))sub_1A0887C64);
}

uint64_t sub_1A0886500(void *a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t *a6, void (*a7)(void))
{
  uint64_t v19 = a4;
  uint64_t v20 = a5;
  int v21 = a3;
  uint64_t v10 = sub_1A07856F8(a6);
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  char v13 = (char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A086F45C(a1, a1[3]);
  a7();
  sub_1A09F4CC8();
  uint64_t v24 = a2;
  char v23 = 0;
  sub_1A07856F8(&qword_1EB4A5610);
  sub_1A0879F5C(&qword_1E94F9140);
  uint64_t v14 = v22;
  sub_1A09F4A78();
  if (!v14)
  {
    uint64_t v16 = v19;
    uint64_t v15 = v20;
    LOBYTE(v++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = 1;
    sub_1A09F4AA8();
    uint64_t v24 = v16;
    char v23 = 2;
    sub_1A09F4A78();
    uint64_t v24 = v15;
    char v23 = 3;
    sub_1A07856F8(&qword_1E94F9668);
    sub_1A0792558(&qword_1E94F9680, &qword_1E94F9668);
    sub_1A09F4A78();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
}

uint64_t sub_1A0886768()
{
  uint64_t result = 7562345;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6C79745374616863;
      break;
    case 2:
      uint64_t result = 0x4E65636976726573;
      break;
    case 3:
      uint64_t result = 0x446567617373656DLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A0886804@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A088894C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A088682C(uint64_t a1)
{
  unint64_t v2 = sub_1A08890A0();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A0886868(uint64_t a1)
{
  unint64_t v2 = sub_1A08890A0();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A08868A4()
{
  uint64_t v0 = qword_1E94F9468;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_1A08868DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *v2;
  *(void *)(v3 + 16) = a2;
  *(void *)(v3 + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = v4;
  *(unsigned char *)(v3 + 4_Block_object_dispose(&a9, 8) = *((unsigned char *)v2 + 8);
  *(_OWORD *)(v3 + 32) = *((_OWORD *)v2 + 1);
  return MEMORY[0x1F4188298](sub_1A0886910, 0, 0);
}

uint64_t sub_1A0886910()
{
  uint64_t v1 = *(void *)(v0 + 40);
  uint64_t v2 = *(unsigned __int8 *)(v0 + 48);
  uint64_t v3 = *(void **)(v0 + 16);
  uint64_t v4 = (void *)sub_1A09F4068();
  long long v5 = (void *)sub_1A09F4068();
  objc_msgSend(v3, sel_markPlayedExpressiveSendForIDs_style_onServices_message_, v4, v2, v5, v1);

  uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
  return v6();
}

id sub_1A08869D4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1A0886E48(a1, &qword_1E94F9688, (void (*)(void))sub_1A08890A0, a2);
}

uint64_t sub_1A0886A10(void *a1)
{
  return sub_1A0886500(a1, *(void *)v1, *(unsigned __int8 *)(v1 + 8), *(void *)(v1 + 16), *(void *)(v1 + 24), &qword_1E94F9698, (void (*)(void))sub_1A08890A0);
}

uint64_t sub_1A0886A58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A0887A10(a1, a2, a3, (uint64_t (*)(void))sub_1A0886A84, (uint64_t (*)(void))sub_1A0886AD8);
}

unint64_t sub_1A0886A84()
{
  unint64_t result = qword_1E94F94D0;
  if (!qword_1E94F94D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94F94D0);
  }
  return result;
}

unint64_t sub_1A0886AD8()
{
  unint64_t result = qword_1E94F94D8;
  if (!qword_1E94F94D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94F94D8);
  }
  return result;
}

unint64_t sub_1A0886B2C(uint64_t a1)
{
  unint64_t result = sub_1A0886B54();
  *(void *)(a1 + _Block_object_dispose(&a9, 8) = result;
  return result;
}

unint64_t sub_1A0886B54()
{
  unint64_t result = qword_1E94F94E0;
  if (!qword_1E94F94E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94F94E0);
  }
  return result;
}

uint64_t sub_1A0886BA8()
{
  uint64_t result = 7562345;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6C79745374616863;
      break;
    case 2:
      uint64_t result = 0x4E65636976726573;
      break;
    case 3:
      uint64_t result = 0x6567617373656DLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A0886C3C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A0888E7C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A0886C64(uint64_t a1)
{
  unint64_t v2 = sub_1A088904C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A0886CA0(uint64_t a1)
{
  unint64_t v2 = sub_1A088904C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A0886CDC()
{
  uint64_t v0 = qword_1E94F9478;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_1A0886D14(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *v2;
  *(void *)(v3 + 16) = a2;
  *(void *)(v3 + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = v4;
  *(unsigned char *)(v3 + 4_Block_object_dispose(&a9, 8) = *((unsigned char *)v2 + 8);
  *(_OWORD *)(v3 + 32) = *((_OWORD *)v2 + 1);
  return MEMORY[0x1F4188298](sub_1A0886D48, 0, 0);
}

uint64_t sub_1A0886D48()
{
  uint64_t v1 = *(void *)(v0 + 40);
  uint64_t v2 = *(unsigned __int8 *)(v0 + 48);
  uint64_t v3 = *(void **)(v0 + 16);
  uint64_t v4 = (void *)sub_1A09F4068();
  long long v5 = (void *)sub_1A09F4068();
  objc_msgSend(v3, sel_markSavedForIDs_style_onServices_message_, v4, v2, v5, v1);

  uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
  return v6();
}

id sub_1A0886E0C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1A0886E48(a1, &qword_1E94F9658, (void (*)(void))sub_1A088904C, a2);
}

id sub_1A0886E48@<X0>(void *a1@<X0>, uint64_t *a2@<X3>, void (*a3)(void)@<X4>, uint64_t a4@<X8>)
{
  id result = sub_1A0888B34(a1, a2, a3);
  if (!v4)
  {
    *(void *)a4 = result;
    *(unsigned char *)(a4 + _Block_object_dispose(&a9, 8) = v7;
    *(void *)(a4 + 16) = v8;
    *(void *)(a4 + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = v9;
  }
  return result;
}

uint64_t sub_1A0886E88(void *a1)
{
  return sub_1A0886500(a1, *(void *)v1, *(unsigned __int8 *)(v1 + 8), *(void *)(v1 + 16), *(void *)(v1 + 24), &qword_1E94F9678, (void (*)(void))sub_1A088904C);
}

uint64_t sub_1A0886ED0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A0887A10(a1, a2, a3, (uint64_t (*)(void))sub_1A0886EFC, (uint64_t (*)(void))sub_1A0886F50);
}

unint64_t sub_1A0886EFC()
{
  unint64_t result = qword_1E94F94E8;
  if (!qword_1E94F94E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94F94E8);
  }
  return result;
}

unint64_t sub_1A0886F50()
{
  unint64_t result = qword_1E94F94F0;
  if (!qword_1E94F94F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94F94F0);
  }
  return result;
}

unint64_t sub_1A0886FA4(uint64_t a1)
{
  unint64_t result = sub_1A0886FCC();
  *(void *)(a1 + _Block_object_dispose(&a9, 8) = result;
  return result;
}

unint64_t sub_1A0886FCC()
{
  unint64_t result = qword_1E94F94F8;
  if (!qword_1E94F94F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94F94F8);
  }
  return result;
}

uint64_t sub_1A0887020()
{
  return sub_1A0792558(&qword_1E94F9500, &qword_1E94F9508);
}

unint64_t sub_1A0887060()
{
  unint64_t result = qword_1E94F9510;
  if (!qword_1E94F9510)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94F9510);
  }
  return result;
}

unint64_t sub_1A08870B4(uint64_t a1)
{
  unint64_t result = sub_1A08870DC();
  *(void *)(a1 + _Block_object_dispose(&a9, 8) = result;
  return result;
}

unint64_t sub_1A08870DC()
{
  unint64_t result = qword_1E94F9520;
  if (!qword_1E94F9520)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94F9520);
  }
  return result;
}

uint64_t sub_1A0887130@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = 1;
  return result;
}

uint64_t sub_1A0887160(uint64_t a1)
{
  unint64_t v2 = sub_1A0887D0C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A088719C(uint64_t a1)
{
  unint64_t v2 = sub_1A0887D0C();

  return MEMORY[0x1F41862B0](a1, v2);
}

unint64_t sub_1A08871D8(uint64_t a1)
{
  unint64_t result = sub_1A0887200();
  *(void *)(a1 + _Block_object_dispose(&a9, 8) = result;
  return result;
}

unint64_t sub_1A0887200()
{
  unint64_t result = qword_1E94F9528;
  if (!qword_1E94F9528)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94F9528);
  }
  return result;
}

unint64_t sub_1A0887254(uint64_t a1)
{
  unint64_t result = sub_1A088727C();
  *(void *)(a1 + _Block_object_dispose(&a9, 8) = result;
  return result;
}

unint64_t sub_1A088727C()
{
  unint64_t result = qword_1E94F9530;
  if (!qword_1E94F9530)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94F9530);
  }
  return result;
}

uint64_t sub_1A08872D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A0887A10(a1, a2, a3, (uint64_t (*)(void))sub_1A08872FC, (uint64_t (*)(void))sub_1A0887350);
}

unint64_t sub_1A08872FC()
{
  unint64_t result = qword_1E94F9538;
  if (!qword_1E94F9538)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94F9538);
  }
  return result;
}

unint64_t sub_1A0887350()
{
  unint64_t result = qword_1E94F9540;
  if (!qword_1E94F9540)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94F9540);
  }
  return result;
}

uint64_t sub_1A08873A4(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1A08873E0(a1, a2, a3, &qword_1E94F9648, (void (*)(void))sub_1A0887D0C);
}

uint64_t sub_1A08873E0(void *a1, uint64_t a2, uint64_t a3, uint64_t *a4, void (*a5)(void))
{
  uint64_t v7 = sub_1A07856F8(a4);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A086F45C(a1, a1[3]);
  a5();
  sub_1A09F4CC8();
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_1A0887500()
{
  return sub_1A0792558(&qword_1E94F9548, &qword_1E94F9550);
}

unint64_t sub_1A0887540()
{
  unint64_t result = qword_1E94F9558;
  if (!qword_1E94F9558)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94F9558);
  }
  return result;
}

unint64_t sub_1A0887594(uint64_t a1)
{
  unint64_t result = sub_1A08875BC();
  *(void *)(a1 + _Block_object_dispose(&a9, 8) = result;
  return result;
}

unint64_t sub_1A08875BC()
{
  unint64_t result = qword_1E94F9568;
  if (!qword_1E94F9568)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94F9568);
  }
  return result;
}

unint64_t sub_1A0887610(uint64_t a1)
{
  unint64_t result = sub_1A0887638();
  *(void *)(a1 + _Block_object_dispose(&a9, 8) = result;
  return result;
}

unint64_t sub_1A0887638()
{
  unint64_t result = qword_1E94F9570;
  if (!qword_1E94F9570)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94F9570);
  }
  return result;
}

unint64_t sub_1A088768C(uint64_t a1)
{
  unint64_t result = sub_1A08876B4();
  *(void *)(a1 + _Block_object_dispose(&a9, 8) = result;
  return result;
}

unint64_t sub_1A08876B4()
{
  unint64_t result = qword_1E94F9578;
  if (!qword_1E94F9578)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94F9578);
  }
  return result;
}

uint64_t sub_1A0887708(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A0887A10(a1, a2, a3, (uint64_t (*)(void))sub_1A0887734, (uint64_t (*)(void))sub_1A0887788);
}

unint64_t sub_1A0887734()
{
  unint64_t result = qword_1E94F9580;
  if (!qword_1E94F9580)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94F9580);
  }
  return result;
}

unint64_t sub_1A0887788()
{
  unint64_t result = qword_1E94F9588;
  if (!qword_1E94F9588)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94F9588);
  }
  return result;
}

uint64_t sub_1A08877DC()
{
  return sub_1A0792558(&qword_1E94F9590, &qword_1E94F9598);
}

unint64_t sub_1A088781C()
{
  unint64_t result = qword_1E94F95A0;
  if (!qword_1E94F95A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94F95A0);
  }
  return result;
}

unint64_t sub_1A0887870(uint64_t a1)
{
  unint64_t result = sub_1A0887898();
  *(void *)(a1 + _Block_object_dispose(&a9, 8) = result;
  return result;
}

unint64_t sub_1A0887898()
{
  unint64_t result = qword_1E94F95B0;
  if (!qword_1E94F95B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94F95B0);
  }
  return result;
}

unint64_t sub_1A08878EC(uint64_t a1)
{
  unint64_t result = sub_1A0887914();
  *(void *)(a1 + _Block_object_dispose(&a9, 8) = result;
  return result;
}

unint64_t sub_1A0887914()
{
  unint64_t result = qword_1E94F95B8;
  if (!qword_1E94F95B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94F95B8);
  }
  return result;
}

unint64_t sub_1A0887968(uint64_t a1)
{
  unint64_t result = sub_1A0887990();
  *(void *)(a1 + _Block_object_dispose(&a9, 8) = result;
  return result;
}

unint64_t sub_1A0887990()
{
  unint64_t result = qword_1E94F95C0;
  if (!qword_1E94F95C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94F95C0);
  }
  return result;
}

uint64_t sub_1A08879E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A0887A10(a1, a2, a3, (uint64_t (*)(void))sub_1A0887A4C, (uint64_t (*)(void))sub_1A0887AA0);
}

uint64_t sub_1A0887A10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t (*a5)(void))
{
  *(void *)(a1 + _Block_object_dispose(&a9, 8) = a4();
  uint64_t result = a5();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1A0887A4C()
{
  unint64_t result = qword_1E94F95C8;
  if (!qword_1E94F95C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94F95C8);
  }
  return result;
}

unint64_t sub_1A0887AA0()
{
  unint64_t result = qword_1E94F95D0;
  if (!qword_1E94F95D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94F95D0);
  }
  return result;
}

uint64_t sub_1A0887AF4()
{
  return sub_1A0792558(&qword_1E94F95D8, (uint64_t *)&unk_1E94F95E0);
}

unint64_t sub_1A0887B30(uint64_t a1)
{
  unint64_t result = sub_1A0887B58();
  *(void *)(a1 + _Block_object_dispose(&a9, 8) = result;
  return result;
}

unint64_t sub_1A0887B58()
{
  unint64_t result = qword_1E94F95F0;
  if (!qword_1E94F95F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94F95F0);
  }
  return result;
}

uint64_t sub_1A0887BAC()
{
  return sub_1A0792558(&qword_1E94F95F8, (uint64_t *)&unk_1E94F9600);
}

unint64_t sub_1A0887BE8(uint64_t a1)
{
  unint64_t result = sub_1A0887C10();
  *(void *)(a1 + _Block_object_dispose(&a9, 8) = result;
  return result;
}

unint64_t sub_1A0887C10()
{
  unint64_t result = qword_1E94F9610;
  if (!qword_1E94F9610)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_1E94F9610);
  }
  return result;
}

unint64_t sub_1A0887C64()
{
  unint64_t result = qword_1E94F9630;
  if (!qword_1E94F9630)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94F9630);
  }
  return result;
}

unint64_t sub_1A0887CB8()
{
  unint64_t result = qword_1E94F9640;
  if (!qword_1E94F9640)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94F9640);
  }
  return result;
}

unint64_t sub_1A0887D0C()
{
  unint64_t result = qword_1E94F9650;
  if (!qword_1E94F9650)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94F9650);
  }
  return result;
}

uint64_t sub_1A0887D60(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 7562345 && a2 == 0xE300000000000000;
  if (v2 || (sub_1A09F4B28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6C79745374616863 && a2 == 0xE900000000000065 || (sub_1A09F4B28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x4E65636976726573 && a2 == 0xEC00000073656D61 || (sub_1A09F4B28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x736567617373656DLL && a2 == 0xEC00000061746144 || (sub_1A09F4B28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001A0A318E0 || (sub_1A09F4B28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001A0A31900)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    char v6 = sub_1A09F4B28();
    swift_bridgeObjectRelease();
    if (v6) {
      return 5;
    }
    else {
      return 6;
    }
  }
}

uint64_t sub_1A0888004@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = sub_1A07856F8(&qword_1E94F96D0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A086F45C(a1, a1[3]);
  sub_1A088919C();
  sub_1A09F4CA8();
  if (v2) {
    return _s17IMSharedUtilities29RemoteIntentBroadcastEncodingVwxx_0((uint64_t)a1);
  }
  uint64_t v17 = a2;
  sub_1A07856F8(&qword_1EB4A5610);
  char v18 = 0;
  sub_1A0879F5C(&qword_1E94F9128);
  sub_1A09F4928();
  uint64_t v9 = v19;
  LOBYTE(v19) = 1;
  swift_bridgeObjectRetain();
  int v16 = sub_1A09F4958();
  char v18 = 2;
  sub_1A09F4928();
  uint64_t v10 = v19;
  swift_bridgeObjectRetain();
  uint64_t v11 = sub_1A094BF74(3);
  LOBYTE(v19) = 4;
  swift_bridgeObjectRetain();
  uint64_t v15 = sub_1A09F4908();
  LOBYTE(v19) = 5;
  char v12 = sub_1A09F48E8();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  _s17IMSharedUtilities29RemoteIntentBroadcastEncodingVwxx_0((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v14 = v17;
  *uint64_t v17 = v9;
  *((unsigned char *)v14 + _Block_object_dispose(&a9, 8) = v16;
  _DWORD v14[2] = v10;
  void v14[3] = v11;
  void v14[4] = v15;
  *((unsigned char *)v14 + 40) = v12 & 1;
  return result;
}

uint64_t sub_1A08883AC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 7562345 && a2 == 0xE300000000000000;
  if (v2 || (sub_1A09F4B28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6C79745374616863 && a2 == 0xE900000000000065 || (sub_1A09F4B28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x4E65636976726573 && a2 == 0xEC00000073656D61 || (sub_1A09F4B28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x736567617373656DLL && a2 == 0xEC00000061746144 || (sub_1A09F4B28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001A0A318E0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_1A09F4B28();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t sub_1A08885F4@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = sub_1A07856F8(&qword_1E94F96B8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A086F45C(a1, a1[3]);
  sub_1A0889148();
  sub_1A09F4CA8();
  if (v2) {
    return _s17IMSharedUtilities29RemoteIntentBroadcastEncodingVwxx_0((uint64_t)a1);
  }
  uint64_t v17 = a2;
  sub_1A07856F8(&qword_1EB4A5610);
  char v18 = 0;
  sub_1A0879F5C(&qword_1E94F9128);
  sub_1A09F4928();
  uint64_t v9 = v19;
  LOBYTE(v19) = 1;
  swift_bridgeObjectRetain();
  int v16 = sub_1A09F4958();
  char v18 = 2;
  sub_1A09F4928();
  uint64_t v10 = v19;
  swift_bridgeObjectRetain();
  uint64_t v11 = sub_1A094C1F0(3);
  LOBYTE(v19) = 4;
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_1A09F4908();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  _s17IMSharedUtilities29RemoteIntentBroadcastEncodingVwxx_0((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v14 = v17;
  *uint64_t v17 = v9;
  *((unsigned char *)v14 + _Block_object_dispose(&a9, 8) = v16;
  _DWORD v14[2] = v10;
  void v14[3] = v11;
  void v14[4] = v12;
  return result;
}

uint64_t sub_1A088894C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 7562345 && a2 == 0xE300000000000000;
  if (v2 || (sub_1A09F4B28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6C79745374616863 && a2 == 0xE900000000000065 || (sub_1A09F4B28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x4E65636976726573 && a2 == 0xEC00000073656D61 || (sub_1A09F4B28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x446567617373656DLL && a2 == 0xEB00000000617461)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_1A09F4B28();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

id sub_1A0888B34(void *a1, uint64_t *a2, void (*a3)(void))
{
  id v5 = v3;
  uint64_t v15 = sub_1A07856F8(a2);
  uint64_t v7 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  uint64_t v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A086F45C(a1, a1[3]);
  a3();
  sub_1A09F4CA8();
  if (v3)
  {
    _s17IMSharedUtilities29RemoteIntentBroadcastEncodingVwxx_0((uint64_t)a1);
  }
  else
  {
    uint64_t v14 = v7;
    sub_1A07856F8(&qword_1EB4A5610);
    char v16 = 0;
    sub_1A0879F5C(&qword_1E94F9128);
    uint64_t v10 = v15;
    sub_1A09F4928();
    id v5 = v17;
    LOBYTE(v17) = 1;
    swift_bridgeObjectRetain();
    sub_1A09F4958();
    char v16 = 2;
    sub_1A09F4928();
    sub_1A07856F8(&qword_1E94F9668);
    char v16 = 3;
    sub_1A0792558(&qword_1E94F9670, &qword_1E94F9668);
    swift_bridgeObjectRetain();
    sub_1A09F4928();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v9, v10);
    id v12 = v17;
    _s17IMSharedUtilities29RemoteIntentBroadcastEncodingVwxx_0((uint64_t)a1);

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v5;
}

uint64_t sub_1A0888E7C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 7562345 && a2 == 0xE300000000000000;
  if (v2 || (sub_1A09F4B28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6C79745374616863 && a2 == 0xE900000000000065 || (sub_1A09F4B28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x4E65636976726573 && a2 == 0xEC00000073656D61 || (sub_1A09F4B28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6567617373656DLL && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_1A09F4B28();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

unint64_t sub_1A088904C()
{
  unint64_t result = qword_1E94F9660;
  if (!qword_1E94F9660)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94F9660);
  }
  return result;
}

unint64_t sub_1A08890A0()
{
  unint64_t result = qword_1E94F9690;
  if (!qword_1E94F9690)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94F9690);
  }
  return result;
}

unint64_t sub_1A08890F4()
{
  unint64_t result = qword_1E94F96A8;
  if (!qword_1E94F96A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94F96A8);
  }
  return result;
}

unint64_t sub_1A0889148()
{
  unint64_t result = qword_1E94F96C0;
  if (!qword_1E94F96C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94F96C0);
  }
  return result;
}

unint64_t sub_1A088919C()
{
  unint64_t result = qword_1E94F96D8;
  if (!qword_1E94F96D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94F96D8);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for RemoteIntentMessageItemScheduleState(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFB) {
    goto LABEL_17;
  }
  if (a2 + 5 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 5) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 5;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 6;
  int v8 = v6 - 6;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for MarkMessageReadClearUnreadCountRequest.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A088934CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MarkMessageReadClearUnreadCountRequest.CodingKeys()
{
  return &type metadata for MarkMessageReadClearUnreadCountRequest.CodingKeys;
}

uint64_t getEnumTagSinglePayload for MarkMessageReadRequest.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFC) {
    goto LABEL_17;
  }
  if (a2 + 4 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 4) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 4;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 5;
  int v8 = v6 - 5;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for MarkMessageReadRequest.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A08894E0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MarkMessageReadRequest.CodingKeys()
{
  return &type metadata for MarkMessageReadRequest.CodingKeys;
}

ValueMetadata *type metadata accessor for MarkPlayedRequest.CodingKeys()
{
  return &type metadata for MarkPlayedRequest.CodingKeys;
}

ValueMetadata *type metadata accessor for MarkPlayedExpressiveSendRequest.CodingKeys()
{
  return &type metadata for MarkPlayedExpressiveSendRequest.CodingKeys;
}

unsigned char *_s17IMSharedUtilities17MarkPlayedRequestV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A088960CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MarkSavedRequest.CodingKeys()
{
  return &type metadata for MarkSavedRequest.CodingKeys;
}

ValueMetadata *type metadata accessor for MarkSavedResponse.CodingKeys()
{
  return &type metadata for MarkSavedResponse.CodingKeys;
}

ValueMetadata *type metadata accessor for MarkMessageReadClearUnreadCountResponse.CodingKeys()
{
  return &type metadata for MarkMessageReadClearUnreadCountResponse.CodingKeys;
}

ValueMetadata *type metadata accessor for MarkPlayedResponse.CodingKeys()
{
  return &type metadata for MarkPlayedResponse.CodingKeys;
}

ValueMetadata *type metadata accessor for MarkPlayedResponse()
{
  return &type metadata for MarkPlayedResponse;
}

ValueMetadata *type metadata accessor for MarkMessageReadClearUnreadCountResponse()
{
  return &type metadata for MarkMessageReadClearUnreadCountResponse;
}

ValueMetadata *type metadata accessor for MarkSavedResponse()
{
  return &type metadata for MarkSavedResponse;
}

unint64_t sub_1A08896A8()
{
  unint64_t result = qword_1E94F96E8;
  if (!qword_1E94F96E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94F96E8);
  }
  return result;
}

unint64_t sub_1A0889700()
{
  unint64_t result = qword_1E94F96F0;
  if (!qword_1E94F96F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94F96F0);
  }
  return result;
}

unint64_t sub_1A0889758()
{
  unint64_t result = qword_1E94F96F8;
  if (!qword_1E94F96F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94F96F8);
  }
  return result;
}

unint64_t sub_1A08897B0()
{
  unint64_t result = qword_1E94F9700;
  if (!qword_1E94F9700)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94F9700);
  }
  return result;
}

unint64_t sub_1A0889808()
{
  unint64_t result = qword_1E94F9708;
  if (!qword_1E94F9708)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94F9708);
  }
  return result;
}

unint64_t sub_1A0889860()
{
  unint64_t result = qword_1E94F9710;
  if (!qword_1E94F9710)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94F9710);
  }
  return result;
}

unint64_t sub_1A08898B8()
{
  unint64_t result = qword_1E94F9718;
  if (!qword_1E94F9718)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94F9718);
  }
  return result;
}

unint64_t sub_1A0889910()
{
  unint64_t result = qword_1E94F9720;
  if (!qword_1E94F9720)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94F9720);
  }
  return result;
}

unint64_t sub_1A0889968()
{
  unint64_t result = qword_1E94F9728;
  if (!qword_1E94F9728)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94F9728);
  }
  return result;
}

unint64_t sub_1A08899C0()
{
  unint64_t result = qword_1E94F9730;
  if (!qword_1E94F9730)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94F9730);
  }
  return result;
}

unint64_t sub_1A0889A18()
{
  unint64_t result = qword_1E94F9738;
  if (!qword_1E94F9738)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94F9738);
  }
  return result;
}

unint64_t sub_1A0889A70()
{
  unint64_t result = qword_1E94F9740;
  if (!qword_1E94F9740)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94F9740);
  }
  return result;
}

unint64_t sub_1A0889AC8()
{
  unint64_t result = qword_1E94F9748;
  if (!qword_1E94F9748)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94F9748);
  }
  return result;
}

unint64_t sub_1A0889B20()
{
  unint64_t result = qword_1E94F9750;
  if (!qword_1E94F9750)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94F9750);
  }
  return result;
}

unint64_t sub_1A0889B78()
{
  unint64_t result = qword_1E94F9758;
  if (!qword_1E94F9758)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94F9758);
  }
  return result;
}

unint64_t sub_1A0889BD0()
{
  unint64_t result = qword_1E94F9760;
  if (!qword_1E94F9760)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94F9760);
  }
  return result;
}

unint64_t sub_1A0889C28()
{
  unint64_t result = qword_1E94F9768;
  if (!qword_1E94F9768)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94F9768);
  }
  return result;
}

unint64_t sub_1A0889C80()
{
  unint64_t result = qword_1E94F9770;
  if (!qword_1E94F9770)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94F9770);
  }
  return result;
}

unint64_t sub_1A0889CD8()
{
  unint64_t result = qword_1E94F9778;
  if (!qword_1E94F9778)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94F9778);
  }
  return result;
}

unint64_t sub_1A0889D30()
{
  unint64_t result = qword_1E94F9780;
  if (!qword_1E94F9780)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94F9780);
  }
  return result;
}

unint64_t sub_1A0889D88()
{
  unint64_t result = qword_1E94F9788;
  if (!qword_1E94F9788)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94F9788);
  }
  return result;
}

void __swiftcall IMPersistentMenu.init(dictionary:)(IMPersistentMenu_optional *__return_ptr retstr, Swift::OpaquePointer dictionary)
{
  id v2 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  int v3 = (void *)sub_1A09F3CE8();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_initWithDictionary_, v3);
}

id IMPersistentMenu.init(dictionary:)(uint64_t a1)
{
  id v2 = v1;
  uint64_t v4 = sub_1A09F3E18();
  if (!*(void *)(a1 + 16) || (unint64_t v6 = sub_1A087AAA4(v4, v5), (v7 & 1) == 0))
  {
    long long v25 = 0u;
    long long v26 = 0u;
    swift_bridgeObjectRelease();
LABEL_9:
    sub_1A0783C7C((uint64_t)&v25);
    if (!*(void *)(a1 + 16)) {
      goto LABEL_17;
    }
    goto LABEL_10;
  }
  sub_1A0785268(*(void *)(a1 + 56) + 32 * v6, (uint64_t)&v25);
  swift_bridgeObjectRelease();
  if (!*((void *)&v26 + 1)) {
    goto LABEL_9;
  }
  sub_1A07856F8(&qword_1E94FDD10);
  if (swift_dynamicCast())
  {
    swift_bridgeObjectRelease();
    a1 = v24;
  }
  if (!*(void *)(a1 + 16)) {
    goto LABEL_17;
  }
LABEL_10:
  unint64_t v8 = sub_1A087AAA4(0x6C6576656CLL, 0xE500000000000000);
  if (v9)
  {
    sub_1A0785268(*(void *)(a1 + 56) + 32 * v8, (uint64_t)&v25);
    if (swift_dynamicCast())
    {
      if (*(void *)(a1 + 16))
      {
        uint64_t v10 = v24;
        unint64_t v11 = sub_1A087AAA4(0x736D657469, 0xE500000000000000);
        if (v12)
        {
          sub_1A0785268(*(void *)(a1 + 56) + 32 * v11, (uint64_t)&v25);
          sub_1A07856F8(&qword_1E94F9790);
          if (swift_dynamicCast())
          {
            *(void *)&long long v25 = MEMORY[0x1E4FBC860];
            uint64_t v13 = *(void *)(v24 + 16);
            if (v13)
            {
              swift_bridgeObjectRetain();
              for (uint64_t i = 0; i != v13; ++i)
              {
                id v17 = objc_allocWithZone((Class)IMPersistentMenuItem);
                swift_bridgeObjectRetain();
                char v18 = (void *)sub_1A09F3CE8();
                swift_bridgeObjectRelease();
                id v19 = objc_msgSend(v17, sel_initWithDictionary_, v18);

                if (v19)
                {
                  MEMORY[0x1A6226220]();
                  if (*(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
                    sub_1A09F40A8();
                  }
                  sub_1A09F40D8();
                  sub_1A09F4098();
                }
              }
              swift_bridgeObjectRelease();
              uint64_t v10 = v24;
            }
            swift_bridgeObjectRelease();
            if (*(void *)(a1 + 16)
              && (unint64_t v20 = sub_1A087AAA4(0x5479616C70736964, 0xEB00000000747865), (v21 & 1) != 0))
            {
              sub_1A0785268(*(void *)(a1 + 56) + 32 * v20, (uint64_t)&v25);
            }
            else
            {
              long long v25 = 0u;
              long long v26 = 0u;
            }
            swift_bridgeObjectRelease();
            if (*((void *)&v26 + 1))
            {
              if (swift_dynamicCast())
              {
                uint64_t v22 = (void *)sub_1A09F3DE8();
                swift_bridgeObjectRelease();
LABEL_34:
                type metadata accessor for IMPersistentMenuItem();
                char v23 = (void *)sub_1A09F4068();
                swift_bridgeObjectRelease();
                id v15 = objc_msgSend(v2, sel_initWithLevel_displayText_items_, v10, v22, v23);

                return v15;
              }
            }
            else
            {
              sub_1A0783C7C((uint64_t)&v25);
            }
            uint64_t v22 = 0;
            goto LABEL_34;
          }
        }
      }
    }
  }
LABEL_17:
  swift_bridgeObjectRelease();
  swift_getObjectType();
  swift_deallocPartialClassInstance();
  return 0;
}

unint64_t sub_1A088A43C()
{
  uint64_t v1 = v0;
  sub_1A07856F8(&qword_1E94F97B8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1A0A099E0;
  *(void *)(inited + 32) = 0x6C6576656CLL;
  *(void *)(inited + 40) = 0xE500000000000000;
  id v3 = objc_msgSend(v0, sel_level);
  uint64_t v4 = MEMORY[0x1E4FBB550];
  *(void *)(inited + 4_Block_object_dispose(&a9, 8) = v3;
  *(void *)(inited + 72) = v4;
  *(void *)(inited + 80) = 0x5479616C70736964;
  *(void *)(inited + 8_Block_object_dispose(&a9, 8) = 0xEB00000000747865;
  id v5 = objc_msgSend(v0, sel_displayText);
  if (v5)
  {
    unint64_t v6 = v5;
    uint64_t v7 = sub_1A09F3E18();
    uint64_t v9 = v8;

    uint64_t v10 = MEMORY[0x1E4FBB1A0];
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v9 = 0;
    uint64_t v10 = 0;
    *(void *)(inited + 112) = 0;
  }
  *(void *)(inited + 96) = v7;
  *(void *)(inited + 104) = v9;
  *(void *)(inited + 120) = v10;
  *(void *)(inited + 12_Block_object_dispose(&a9, 8) = 0x736D657469;
  *(void *)(inited + 136) = 0xE500000000000000;
  id v11 = objc_msgSend(v1, sel_items);
  type metadata accessor for IMPersistentMenuItem();
  unint64_t v12 = sub_1A09F4078();

  if (v12 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v13 = sub_1A09F47B8();
  }
  else
  {
    uint64_t v13 = *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
  }
  uint64_t v30 = inited;
  id v31 = v1;
  if (v13)
  {
    if (v13 < 1)
    {
      __break(1u);
      goto LABEL_28;
    }
    uint64_t v14 = 0;
    id v15 = (void *)MEMORY[0x1E4FBC860];
    do
    {
      if ((v12 & 0xC000000000000001) != 0) {
        id v16 = (id)MEMORY[0x1A6226890](v14, v12);
      }
      else {
        id v16 = *(id *)(v12 + 8 * v14 + 32);
      }
      id v17 = v16;
      id v18 = objc_msgSend(v16, sel_dictionaryRepresentation);
      uint64_t v19 = sub_1A09F3D08();

      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        id v15 = sub_1A0891954(0, v15[2] + 1, 1, v15);
      }
      unint64_t v21 = v15[2];
      unint64_t v20 = v15[3];
      if (v21 >= v20 >> 1) {
        id v15 = sub_1A0891954((void *)(v20 > 1), v21 + 1, 1, v15);
      }
      ++v14;
      _OWORD v15[2] = v21 + 1;
      v15[v21 + 4] = v19;
    }
    while (v13 != v14);
  }
  else
  {
    id v15 = (void *)MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRelease_n();
  *(void *)(v30 + 16_Block_object_dispose(&a9, 8) = sub_1A07856F8(&qword_1E94F9790);
  *(void *)(v30 + 144) = v15;
  unint64_t v22 = sub_1A08D76DC(v30);
  uint64_t v1 = (void *)sub_1A09BE198(v22);
  swift_bridgeObjectRelease();
  if (objc_msgSend(v31, sel_level)) {
    return (unint64_t)v1;
  }
  id v23 = objc_msgSend(v31, sel_items);
  unint64_t v24 = sub_1A09F4078();

  if (!(v24 >> 62))
  {
    uint64_t v25 = *(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10);
    goto LABEL_22;
  }
LABEL_28:
  swift_bridgeObjectRetain();
  uint64_t v25 = sub_1A09F47B8();
  swift_bridgeObjectRelease();
LABEL_22:
  swift_bridgeObjectRelease();
  if (v25)
  {
    sub_1A07856F8(&qword_1E94F9368);
    uint64_t v26 = swift_initStackObject();
    *(_OWORD *)(v26 + 16) = xmmword_1A0A08A20;
    *(void *)(v26 + 32) = sub_1A09F3E18();
    *(void *)(v26 + 40) = v27;
    *(void *)(v26 + 72) = sub_1A07856F8(&qword_1E94FDD10);
    *(void *)(v26 + 4_Block_object_dispose(&a9, 8) = v1;
    return sub_1A08D7480(v26);
  }
  else
  {
    swift_bridgeObjectRelease();
    id v28 = objc_msgSend(self, sel_emptyStampProperty);
    uint64_t v1 = (void *)sub_1A09F3D08();
  }
  return (unint64_t)v1;
}

void __swiftcall IMPersistentMenu.init()(IMPersistentMenu *__return_ptr retstr)
{
  id v1 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());

  objc_msgSend(v1, sel_init);
}

void IMPersistentMenu.init()()
{
}

unint64_t type metadata accessor for IMPersistentMenu()
{
  unint64_t result = qword_1E94F97B0;
  if (!qword_1E94F97B0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1E94F97B0);
  }
  return result;
}

uint64_t sub_1A088AB40(uint64_t a1)
{
  sub_1A0875C10(a1, (uint64_t)v7);
  if (!v8)
  {
    sub_1A0783C7C((uint64_t)v7);
    goto LABEL_9;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_9:
    char v3 = 0;
    return v3 & 1;
  }
  if (v5 == sub_1A09F3E18() && v6 == v1)
  {
    swift_bridgeObjectRelease_n();
    char v3 = 1;
  }
  else
  {
    char v3 = sub_1A09F4B28();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v3 & 1;
}

uint64_t destroy for CancelScheduledMessageRequest()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for CancelScheduledMessageRequest(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for CancelScheduledMessageRequest(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  return a1;
}

uint64_t assignWithTake for CancelScheduledMessageRequest(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + _Block_object_dispose(&a9, 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(void *)(a1 + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = *(void *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for CancelScheduledMessageRequest(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CancelScheduledMessageRequest(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + _Block_object_dispose(&a9, 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + _Block_object_dispose(&a9, 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CancelScheduledMessageRequest()
{
  return &type metadata for CancelScheduledMessageRequest;
}

uint64_t sub_1A088ADF0()
{
  uint64_t v0 = sub_1A09F39E8();
  sub_1A078D848(v0, qword_1E94F97C0);
  sub_1A078510C(v0, (uint64_t)qword_1E94F97C0);
  return sub_1A09F39D8();
}

uint64_t sub_1A088AE70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void v5[6] = a4;
  v5[7] = a5;
  void v5[4] = a2;
  void v5[5] = a3;
  v5[3] = a1;
  return MEMORY[0x1F4188298](sub_1A088AE98, 0, 0);
}

uint64_t sub_1A088AE98()
{
  if (v0[7] >= 5uLL)
  {
    if (qword_1E94F84D8 != -1) {
      swift_once();
    }
    uint64_t v1 = sub_1A09F39E8();
    sub_1A078510C(v1, (uint64_t)qword_1E94F97C0);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v2 = sub_1A09F39C8();
    os_log_type_t v3 = sub_1A09F4378();
    if (os_log_type_enabled(v2, v3))
    {
      uint64_t v4 = v0[7];
      uint64_t v5 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v5 = 134217984;
      v0[2] = v4;
      sub_1A09F4528();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A0772000, v2, v3, "Unknown cancel type: %lu", v5, 0xCu);
      MEMORY[0x1A6228C20](v5, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
  uint64_t v6 = v0[7];
  uint64_t v7 = (void *)v0[3];
  uint64_t v8 = (void *)sub_1A09F3DE8();
  uint64_t v9 = (void *)sub_1A09F4298();
  objc_msgSend(v7, sel_cancelScheduledMessageWithGUID_destinations_cancelType_, v8, v9, v6);

  uint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

uint64_t sub_1A088B08C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v12[1] = a5;
  uint64_t v13 = a4;
  uint64_t v7 = sub_1A07856F8(&qword_1E94F9880);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A086F45C(a1, a1[3]);
  sub_1A088BF98();
  sub_1A09F4CC8();
  char v17 = 0;
  sub_1A09F4A28();
  if (!v5)
  {
    uint64_t v14 = v13;
    char v16 = 1;
    sub_1A07856F8(&qword_1E94F9870);
    sub_1A088BFEC(&qword_1E94F9888);
    sub_1A09F4A78();
    char v15 = 2;
    sub_1A09F4A68();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_1A088B270()
{
  uint64_t v1 = 0x74616E6974736564;
  if (*v0 != 1) {
    uint64_t v1 = 0x79546C65636E6163;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x476567617373656DLL;
  }
}

uint64_t sub_1A088B2E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A088BB44(a1, a2);
  *a3 = result;
  return result;
}

void sub_1A088B308(unsigned char *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_1A088B314(uint64_t a1)
{
  unint64_t v2 = sub_1A088BF98();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A088B350(uint64_t a1)
{
  unint64_t v2 = sub_1A088BF98();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A088B38C()
{
  uint64_t v0 = qword_1E94F97D8;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_1A088B3C4(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  uint64_t v6 = v2[3];
  uint64_t v7 = swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *(void *)uint64_t v7 = v3;
  *(void *)(v7 + _Block_object_dispose(&a9, 8) = sub_1A077EE58;
  *(void *)(v7 + 56) = v6;
  *(_OWORD *)(v7 + 40) = *(_OWORD *)(v2 + 1);
  *(void *)(v7 + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = a2;
  *(void *)(v7 + 32) = v5;
  return MEMORY[0x1F4188298](sub_1A088AE98, 0, 0);
}

uint64_t sub_1A088B48C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1A088BCD8(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
    a2[3] = v7;
  }
  return result;
}

uint64_t sub_1A088B4BC(void *a1)
{
  return sub_1A088B08C(a1, *v1, v1[1], v1[2], v1[3]);
}

uint64_t sub_1A088B4DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A088B8FC(a1, a2, a3, (uint64_t (*)(void))sub_1A088B508, (uint64_t (*)(void))sub_1A088B55C);
}

unint64_t sub_1A088B508()
{
  unint64_t result = qword_1E94F97E8;
  if (!qword_1E94F97E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94F97E8);
  }
  return result;
}

unint64_t sub_1A088B55C()
{
  unint64_t result = qword_1E94F97F0;
  if (!qword_1E94F97F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94F97F0);
  }
  return result;
}

unint64_t sub_1A088B5B0(uint64_t a1)
{
  unint64_t result = sub_1A088B5D8();
  *(void *)(a1 + _Block_object_dispose(&a9, 8) = result;
  return result;
}

unint64_t sub_1A088B5D8()
{
  unint64_t result = qword_1E94F97F8;
  if (!qword_1E94F97F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94F97F8);
  }
  return result;
}

unint64_t sub_1A088B630()
{
  unint64_t result = qword_1E94F9800;
  if (!qword_1E94F9800)
  {
    sub_1A078D800(&qword_1E94F9808);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94F9800);
  }
  return result;
}

unint64_t sub_1A088B690()
{
  unint64_t result = qword_1E94F9810;
  if (!qword_1E94F9810)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94F9810);
  }
  return result;
}

unint64_t sub_1A088B6E4(uint64_t a1)
{
  unint64_t result = sub_1A088B70C();
  *(void *)(a1 + _Block_object_dispose(&a9, 8) = result;
  return result;
}

unint64_t sub_1A088B70C()
{
  unint64_t result = qword_1E94F9820;
  if (!qword_1E94F9820)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94F9820);
  }
  return result;
}

uint64_t sub_1A088B760(uint64_t a1)
{
  unint64_t v2 = sub_1A088BAF0();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A088B79C(uint64_t a1)
{
  unint64_t v2 = sub_1A088BAF0();

  return MEMORY[0x1F41862B0](a1, v2);
}

unint64_t sub_1A088B7D8(uint64_t a1)
{
  unint64_t result = sub_1A088B800();
  *(void *)(a1 + _Block_object_dispose(&a9, 8) = result;
  return result;
}

unint64_t sub_1A088B800()
{
  unint64_t result = qword_1E94F9828;
  if (!qword_1E94F9828)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94F9828);
  }
  return result;
}

unint64_t sub_1A088B854(uint64_t a1)
{
  unint64_t result = sub_1A088B87C();
  *(void *)(a1 + _Block_object_dispose(&a9, 8) = result;
  return result;
}

unint64_t sub_1A088B87C()
{
  unint64_t result = qword_1E94F9830;
  if (!qword_1E94F9830)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94F9830);
  }
  return result;
}

uint64_t sub_1A088B8D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A088B8FC(a1, a2, a3, (uint64_t (*)(void))sub_1A088B938, (uint64_t (*)(void))sub_1A088B98C);
}

uint64_t sub_1A088B8FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t (*a5)(void))
{
  *(void *)(a1 + _Block_object_dispose(&a9, 8) = a4();
  uint64_t result = a5();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1A088B938()
{
  unint64_t result = qword_1E94F9838;
  if (!qword_1E94F9838)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94F9838);
  }
  return result;
}

unint64_t sub_1A088B98C()
{
  unint64_t result = qword_1E94F9840;
  if (!qword_1E94F9840)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94F9840);
  }
  return result;
}

uint64_t sub_1A088B9E0(void *a1)
{
  uint64_t v2 = sub_1A07856F8(&qword_1E94F9848);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A086F45C(a1, a1[3]);
  sub_1A088BAF0();
  sub_1A09F4CC8();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

unint64_t sub_1A088BAF0()
{
  unint64_t result = qword_1E94F9850;
  if (!qword_1E94F9850)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_1E94F9850);
  }
  return result;
}

uint64_t sub_1A088BB44(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x476567617373656DLL && a2 == 0xEB00000000444955;
  if (v2 || (sub_1A09F4B28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74616E6974736564 && a2 == 0xEC000000736E6F69 || (sub_1A09F4B28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x79546C65636E6163 && a2 == 0xEA00000000006570)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_1A09F4B28();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_1A088BCD8(void *a1)
{
  uint64_t v3 = sub_1A07856F8(&qword_1E94F9860);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  char v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = a1[4];
  sub_1A086F45C(a1, a1[3]);
  sub_1A088BF98();
  sub_1A09F4CA8();
  if (v1)
  {
    _s17IMSharedUtilities29RemoteIntentBroadcastEncodingVwxx_0((uint64_t)a1);
  }
  else
  {
    char v12 = 0;
    uint64_t v7 = sub_1A09F48D8();
    sub_1A07856F8(&qword_1E94F9870);
    char v11 = 1;
    sub_1A088BFEC(&qword_1E94F9878);
    swift_bridgeObjectRetain();
    sub_1A09F4928();
    char v10 = 2;
    swift_bridgeObjectRetain();
    uint64_t v9 = 0;
    sub_1A09F4918();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    _s17IMSharedUtilities29RemoteIntentBroadcastEncodingVwxx_0((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v7;
}

unint64_t sub_1A088BF98()
{
  unint64_t result = qword_1E94F9868;
  if (!qword_1E94F9868)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94F9868);
  }
  return result;
}

uint64_t sub_1A088BFEC(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1A078D800(&qword_1E94F9870);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for RemoteIntentMessageItemScheduleType(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 2 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 2) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 2;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v8 = v6 - 3;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for CancelScheduledMessageRequest.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A088C1ACLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CancelScheduledMessageRequest.CodingKeys()
{
  return &type metadata for CancelScheduledMessageRequest.CodingKeys;
}

ValueMetadata *type metadata accessor for CancelScheduledMessageResponse.CodingKeys()
{
  return &type metadata for CancelScheduledMessageResponse.CodingKeys;
}

ValueMetadata *type metadata accessor for CancelScheduledMessageResponse()
{
  return &type metadata for CancelScheduledMessageResponse;
}

unint64_t sub_1A088C208()
{
  unint64_t result = qword_1E94F9890;
  if (!qword_1E94F9890)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94F9890);
  }
  return result;
}

unint64_t sub_1A088C260()
{
  unint64_t result = qword_1E94F9898;
  if (!qword_1E94F9898)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94F9898);
  }
  return result;
}

unint64_t sub_1A088C2B8()
{
  unint64_t result = qword_1E94F98A0;
  if (!qword_1E94F98A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94F98A0);
  }
  return result;
}

unint64_t sub_1A088C310()
{
  unint64_t result = qword_1E94F98A8;
  if (!qword_1E94F98A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94F98A8);
  }
  return result;
}

unint64_t sub_1A088C368()
{
  unint64_t result = qword_1E94F98B0;
  if (!qword_1E94F98B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94F98B0);
  }
  return result;
}

id sub_1A088C3D4()
{
  swift_bridgeObjectRetain();
  uint64_t v0 = (void *)sub_1A09F3DE8();
  swift_bridgeObjectRelease();

  return v0;
}

void __swiftcall IMActionComposeText.init(dictionary:)(IMActionComposeText_optional *__return_ptr retstr, Swift::OpaquePointer dictionary)
{
  id v2 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  int v3 = (void *)sub_1A09F3CE8();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_initWithDictionary_, v3);
}

id IMActionComposeText.init(dictionary:)(uint64_t a1)
{
  id v2 = v1;
  if (*(void *)(a1 + 16))
  {
    unint64_t v4 = sub_1A087AAA4(0x6D754E656E6F6870, 0xEB00000000726562);
    if (v5)
    {
      sub_1A0785268(*(void *)(a1 + 56) + 32 * v4, (uint64_t)&v12);
      if (swift_dynamicCast())
      {
        if (*(void *)(a1 + 16) && (unint64_t v6 = sub_1A087AAA4(1954047348, 0xE400000000000000), (v7 & 1) != 0))
        {
          sub_1A0785268(*(void *)(a1 + 56) + 32 * v6, (uint64_t)&v12);
        }
        else
        {
          long long v12 = 0u;
          long long v13 = 0u;
        }
        swift_bridgeObjectRelease();
        if (!*((void *)&v13 + 1))
        {
          swift_bridgeObjectRelease();
          sub_1A0783C7C((uint64_t)&v12);
          goto LABEL_8;
        }
        if (swift_dynamicCast())
        {
          char v10 = (void *)sub_1A09F3DE8();
          swift_bridgeObjectRelease();
          char v11 = (void *)sub_1A09F3DE8();
          swift_bridgeObjectRelease();
          id v8 = objc_msgSend(v2, sel_initWithPhoneNumber_text_, v10, v11);

          return v8;
        }
      }
    }
  }
  swift_bridgeObjectRelease();
LABEL_8:
  swift_getObjectType();
  swift_deallocPartialClassInstance();
  return 0;
}

unint64_t sub_1A088C73C()
{
  sub_1A07856F8(&qword_1E94F9368);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1A0A081A0;
  *(void *)(inited + 32) = 0x6D754E656E6F6870;
  *(void *)(inited + 40) = 0xEB00000000726562;
  id v2 = objc_msgSend(v0, sel_phoneNumber);
  uint64_t v3 = sub_1A09F3E18();
  uint64_t v5 = v4;

  uint64_t v6 = MEMORY[0x1E4FBB1A0];
  *(void *)(inited + 4_Block_object_dispose(&a9, 8) = v3;
  *(void *)(inited + 56) = v5;
  *(void *)(inited + 72) = v6;
  *(void *)(inited + 80) = 1954047348;
  *(void *)(inited + 8_Block_object_dispose(&a9, 8) = 0xE400000000000000;
  id v7 = objc_msgSend(v0, sel_text);
  uint64_t v8 = sub_1A09F3E18();
  uint64_t v10 = v9;

  *(void *)(inited + 120) = v6;
  *(void *)(inited + 96) = v8;
  *(void *)(inited + 104) = v10;
  return sub_1A08D7480(inited);
}

void __swiftcall IMActionComposeText.init()(IMActionComposeText *__return_ptr retstr)
{
  id v1 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());

  objc_msgSend(v1, sel_init);
}

void IMActionComposeText.init()()
{
}

unint64_t type metadata accessor for IMActionComposeText()
{
  unint64_t result = qword_1E94F9930;
  if (!qword_1E94F9930)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1E94F9930);
  }
  return result;
}

void __swiftcall IMActionComposeAudio.init(dictionary:)(IMActionComposeAudio_optional *__return_ptr retstr, Swift::OpaquePointer dictionary)
{
  id v2 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  uint64_t v3 = (void *)sub_1A09F3CE8();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_initWithDictionary_, v3);
}

id IMActionComposeAudio.init(dictionary:)(uint64_t a1)
{
  id v2 = v1;
  if (!*(void *)(a1 + 16) || (unint64_t v4 = sub_1A087AAA4(0x6D754E656E6F6870, 0xEB00000000726562), (v5 & 1) == 0))
  {
    long long v9 = 0u;
    long long v10 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  sub_1A0785268(*(void *)(a1 + 56) + 32 * v4, (uint64_t)&v9);
  swift_bridgeObjectRelease();
  if (!*((void *)&v10 + 1))
  {
LABEL_7:
    sub_1A0783C7C((uint64_t)&v9);
    goto LABEL_8;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_8:
    swift_getObjectType();
    swift_deallocPartialClassInstance();
    return 0;
  }
  uint64_t v6 = (void *)sub_1A09F3DE8();
  swift_bridgeObjectRelease();
  id v7 = objc_msgSend(v2, sel_initWithPhoneNumber_, v6);

  return v7;
}

void __swiftcall IMActionComposeAudio.init()(IMActionComposeAudio *__return_ptr retstr)
{
  id v1 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());

  objc_msgSend(v1, sel_init);
}

void IMActionComposeAudio.init()()
{
}

unint64_t type metadata accessor for IMActionComposeAudio()
{
  unint64_t result = qword_1E94F9940;
  if (!qword_1E94F9940)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, &qword_1E94F9940);
  }
  return result;
}

uint64_t AsyncSerialQueue.init(priority:bufferingPolicy:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v30 = a1;
  uint64_t v31 = a2;
  uint64_t v27 = a3;
  uint64_t v3 = sub_1A07856F8(&qword_1E94F7350);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = sub_1A07856F8(&qword_1E94F7378);
  uint64_t v7 = *(void *)(v28 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  uint64_t v9 = MEMORY[0x1F4188790](v28);
  uint64_t v26 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  char v11 = (char *)&v26 - v10;
  uint64_t v12 = sub_1A07856F8(&qword_1E94F7368);
  uint64_t v13 = MEMORY[0x1F4188790](v12 - 8);
  char v15 = (char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  char v17 = (char *)&v26 - v16;
  uint64_t v18 = sub_1A07856F8(&qword_1E94F7358);
  uint64_t v19 = *(void *)(v18 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v19 + 56))(v17, 1, 1, v18);
  uint64_t v29 = v4;
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v31, v3);
  uint64_t v32 = v17;
  sub_1A07856F8(&qword_1E94F7380);
  sub_1A09F4228();
  sub_1A0884370((uint64_t)v17, (uint64_t)v15, &qword_1E94F7368);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v19 + 48))(v15, 1, v18);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v19 + 32))(v27, v15, v18);
    unint64_t v21 = v26;
    uint64_t v22 = v28;
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v26, v11, v28);
    unint64_t v23 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    uint64_t v24 = swift_allocObject();
    *(void *)(v24 + 16) = 0;
    *(void *)(v24 + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = 0;
    (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v24 + v23, v21, v22);
    uint64_t v25 = v30;
    sub_1A088D67C(v30, (uint64_t)&unk_1E94F9950, v24);
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v31, v3);
    sub_1A0784C08(v25, &qword_1EB4A5650);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v11, v22);
    return sub_1A0784C08((uint64_t)v17, &qword_1E94F7368);
  }
  return result;
}

uint64_t sub_1A088D250(uint64_t a1, uint64_t a2)
{
  sub_1A0784C08(a2, &qword_1E94F7368);
  uint64_t v4 = sub_1A07856F8(&qword_1E94F7358);
  uint64_t v7 = *(void *)(v4 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(a2, a1, v4);
  uint64_t v5 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v7 + 56);

  return v5(a2, 0, 1, v4);
}

uint64_t sub_1A088D320(uint64_t a1)
{
  return sub_1A088D250(a1, *(void *)(v1 + 16));
}

uint64_t sub_1A088D328(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void v4[4] = a4;
  uint64_t v5 = sub_1A07856F8(&qword_1E94F7370);
  void v4[5] = v5;
  void v4[6] = *(void *)(v5 - 8);
  void v4[7] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1A088D3EC, 0, 0);
}

uint64_t sub_1A088D3EC()
{
  sub_1A07856F8(&qword_1E94F7378);
  sub_1A09F4208();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 64) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1A077F190;
  uint64_t v2 = *(void *)(v0 + 40);
  return MEMORY[0x1F4187D58](v0 + 16, 0, 0, v2);
}

uint64_t sub_1A088D4BC()
{
  uint64_t v1 = sub_1A07856F8(&qword_1E94F7378);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x1F4186498](v0, v5, v6);
}

uint64_t sub_1A088D58C(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_1A07856F8(&qword_1E94F7378) - 8);
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v6 = *(void *)(v1 + 24);
  uint64_t v7 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  void *v8 = v2;
  v8[1] = sub_1A077EE54;
  return sub_1A088D328(a1, v5, v6, v7);
}

uint64_t sub_1A088D67C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1A07856F8(&qword_1EB4A5650);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A0884370(a1, (uint64_t)v8, &qword_1EB4A5650);
  uint64_t v9 = sub_1A09F41C8();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_1A0784C08((uint64_t)v8, &qword_1EB4A5650);
    if (*(void *)(a3 + 16))
    {
LABEL_3:
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v11 = sub_1A09F4108();
      uint64_t v13 = v12;
      swift_unknownObjectRelease();
      goto LABEL_6;
    }
  }
  else
  {
    sub_1A09F41B8();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v9);
    if (*(void *)(a3 + 16)) {
      goto LABEL_3;
    }
  }
  uint64_t v11 = 0;
  uint64_t v13 = 0;
LABEL_6:
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a2;
  *(void *)(v14 + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = a3;
  if (v13 | v11)
  {
    v16[0] = 0;
    v16[1] = 0;
    void v16[2] = v11;
    v16[3] = v13;
  }
  return swift_task_create();
}

uint64_t sub_1A088D870(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1A07856F8(&qword_1EB4A5650);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A0884370(a1, (uint64_t)v8, &qword_1EB4A5650);
  uint64_t v9 = sub_1A09F41C8();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_1A0784C08((uint64_t)v8, &qword_1EB4A5650);
    if (*(void *)(a3 + 16))
    {
LABEL_3:
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v11 = sub_1A09F4108();
      uint64_t v13 = v12;
      swift_unknownObjectRelease();
      goto LABEL_6;
    }
  }
  else
  {
    sub_1A09F41B8();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v9);
    if (*(void *)(a3 + 16)) {
      goto LABEL_3;
    }
  }
  uint64_t v11 = 0;
  uint64_t v13 = 0;
LABEL_6:
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a2;
  *(void *)(v14 + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = a3;
  sub_1A07856F8(&qword_1E94F9998);
  if (v13 | v11)
  {
    v16[0] = 0;
    v16[1] = 0;
    void v16[2] = v11;
    v16[3] = v13;
  }
  return swift_task_create();
}

uint64_t AsyncSerialQueue.performAndWaitFor<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void v5[5] = a4;
  void v5[6] = v4;
  v5[3] = a2;
  void v5[4] = a3;
  void v5[2] = a1;
  return MEMORY[0x1F4188298](sub_1A088DA94, 0, 0);
}

{
  uint64_t v4;
  void *v5;

  void v5[5] = a4;
  void v5[6] = v4;
  v5[3] = a2;
  void v5[4] = a3;
  void v5[2] = a1;
  return MEMORY[0x1F4188298](sub_1A088E3B4, 0, 0);
}

uint64_t sub_1A088DA94()
{
  uint64_t v1 = swift_task_alloc();
  *(void *)(v0 + 56) = v1;
  long long v2 = *(_OWORD *)(v0 + 24);
  *(_OWORD *)(v1 + 16) = *(_OWORD *)(v0 + 40);
  *(_OWORD *)(v1 + 32) = v2;
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1E94F9970 + dword_1E94F9970);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 64) = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_1A088DB7C;
  uint64_t v4 = *(void *)(v0 + 16);
  return v6(v4, 0, 0, (uint64_t)sub_1A088DEB0, v1);
}

uint64_t sub_1A088DB7C()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_1A088DC8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v20 = a3;
  uint64_t v21 = a2;
  uint64_t v8 = sub_1A07856F8(&qword_1E94F7358);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1A07856F8(&qword_1E94F7348);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  char v15 = (char *)&v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = (void *)swift_allocObject();
  void v16[2] = a5;
  v16[3] = a1;
  uint64_t v17 = v21;
  void v16[4] = v20;
  void v16[5] = a4;
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v17, v8);
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = &unk_1E94F99C0;
  *(void *)(v18 + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = v16;
  uint64_t v22 = &unk_1E94F99C8;
  uint64_t v23 = v18;
  swift_retain();
  swift_retain();
  sub_1A09F41D8();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  return swift_release();
}

uint64_t sub_1A088DEB0(uint64_t a1)
{
  return sub_1A088DC8C(a1, v1[3], v1[4], v1[5], v1[2]);
}

uint64_t sub_1A088DEBC(uint64_t a1, int *a2, uint64_t a3, uint64_t a4)
{
  _DWORD v4[2] = a1;
  v4[3] = a4;
  uint64_t v6 = swift_task_alloc();
  void v4[4] = v6;
  uint64_t v9 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v7 = (void *)swift_task_alloc();
  void v4[5] = v7;
  *uint64_t v7 = v4;
  v7[1] = sub_1A088DFC8;
  return v9(v6);
}

uint64_t sub_1A088DFC8()
{
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1A088E0C4, 0, 0);
}

uint64_t sub_1A088E0C4()
{
  (*(void (**)(void, void))(*(void *)(v0[3] - 8) + 32))(*(void *)(*(void *)(v0[2] + 64) + 40), v0[4]);
  swift_continuation_resume();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_1A088E178(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[11] = a4;
  v5[12] = a5;
  v5[10] = a1;
  if (a2)
  {
    swift_getObjectType();
    uint64_t v6 = sub_1A09F4108();
    uint64_t v8 = v7;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v8 = 0;
  }
  return MEMORY[0x1F4188298](sub_1A088E20C, v6, v8);
}

uint64_t sub_1A088E20C()
{
  uint64_t v1 = (void (*)(uint64_t))v0[11];
  uint64_t v2 = v0[10];
  v0[2] = v0;
  v0[7] = v2;
  v0[3] = sub_1A088E2B4;
  uint64_t v3 = swift_continuation_init();
  v1(v3);
  return MEMORY[0x1F41881E8](v0 + 2);
}

uint64_t sub_1A088E2B4()
{
  uint64_t v1 = *(uint64_t (**)(void))(*(void *)v0 + 8);
  return v1();
}

uint64_t sub_1A088E3B4()
{
  uint64_t v1 = swift_task_alloc();
  *(void *)(v0 + 56) = v1;
  long long v2 = *(_OWORD *)(v0 + 24);
  *(_OWORD *)(v1 + 16) = *(_OWORD *)(v0 + 40);
  *(_OWORD *)(v1 + 32) = v2;
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1E94F9980 + dword_1E94F9980);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 64) = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_1A088E49C;
  uint64_t v4 = *(void *)(v0 + 16);
  return v6(v4, 0, 0, (uint64_t)sub_1A088E860, v1);
}

uint64_t sub_1A088E49C()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 72) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x1F4188298](sub_1A088E5D8, 0, 0);
  }
  else
  {
    swift_task_dealloc();
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_1A088E5D8()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1A088E63C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v20 = a3;
  uint64_t v21 = a2;
  uint64_t v8 = sub_1A07856F8(&qword_1E94F7358);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1A07856F8(&qword_1E94F7348);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  char v15 = (char *)&v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = (void *)swift_allocObject();
  void v16[2] = a5;
  v16[3] = a1;
  uint64_t v17 = v21;
  void v16[4] = v20;
  void v16[5] = a4;
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v17, v8);
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = &unk_1E94F99A8;
  *(void *)(v18 + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = v16;
  uint64_t v22 = &unk_1E94F99B0;
  uint64_t v23 = v18;
  swift_retain();
  swift_retain();
  sub_1A09F41D8();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  return swift_release();
}

uint64_t sub_1A088E860(uint64_t a1)
{
  return sub_1A088E63C(a1, v1[3], v1[4], v1[5], v1[2]);
}

uint64_t sub_1A088E86C(uint64_t a1, int *a2, uint64_t a3, uint64_t a4)
{
  v4[3] = a1;
  void v4[4] = a4;
  void v4[5] = *(void *)(a4 - 8);
  uint64_t v6 = swift_task_alloc();
  void v4[6] = v6;
  uint64_t v9 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v7 = (void *)swift_task_alloc();
  void v4[7] = v7;
  *uint64_t v7 = v4;
  v7[1] = sub_1A088E97C;
  return v9(v6);
}

uint64_t sub_1A088E97C()
{
  *(void *)(*(void *)v1 + 64) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1A088EB40;
  }
  else {
    uint64_t v2 = sub_1A088EA90;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1A088EA90()
{
  (*(void (**)(void, void))(v0[5] + 32))(*(void *)(*(void *)(v0[3] + 64) + 40), v0[6]);
  swift_continuation_throwingResume();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_1A088EB40()
{
  uint64_t v1 = v0[3];
  uint64_t v2 = v0[4];
  v0[2] = v0[8];
  uint64_t v3 = sub_1A07856F8((uint64_t *)&unk_1EB4A5620);
  sub_1A088EBE0((uint64_t)(v0 + 2), v1, v2, v3);
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_1A088EBE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = swift_allocError();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a4 - 8) + 32))(v8, a1, a4);

  return MEMORY[0x1F4188208](a2, v7);
}

uint64_t sub_1A088EC74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[11] = a4;
  v5[12] = a5;
  v5[10] = a1;
  if (a2)
  {
    swift_getObjectType();
    uint64_t v6 = sub_1A09F4108();
    uint64_t v8 = v7;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v8 = 0;
  }
  return MEMORY[0x1F4188298](sub_1A088ED08, v6, v8);
}

uint64_t sub_1A088ED08()
{
  uint64_t v1 = (void (*)(uint64_t))v0[11];
  uint64_t v2 = v0[10];
  v0[2] = v0;
  v0[7] = v2;
  v0[3] = sub_1A088EDB0;
  uint64_t v3 = swift_continuation_init();
  v1(v3);
  return MEMORY[0x1F41881E8](v0 + 2);
}

uint64_t sub_1A088EDB0()
{
  uint64_t v1 = *v0;
  if (*(void *)(*v0 + 48)) {
    swift_willThrow();
  }
  uint64_t v2 = *(uint64_t (**)(void))(v1 + 8);
  return v2();
}

uint64_t initializeBufferWithCopyOfBuffer for AsyncSerialQueue(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1A07856F8(&qword_1E94F7358);
  uint64_t v5 = **(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);

  return v5(a1, a2, v4);
}

uint64_t destroy for AsyncSerialQueue(uint64_t a1)
{
  uint64_t v2 = sub_1A07856F8(&qword_1E94F7358);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(a1, v2);
}

uint64_t initializeWithCopy for AsyncSerialQueue(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1A07856F8(&qword_1E94F7358);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t assignWithCopy for AsyncSerialQueue(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1A07856F8(&qword_1E94F7358);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t initializeWithTake for AsyncSerialQueue(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1A07856F8(&qword_1E94F7358);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t assignWithTake for AsyncSerialQueue(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1A07856F8(&qword_1E94F7358);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for AsyncSerialQueue(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1A088F144);
}

uint64_t sub_1A088F144(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1A07856F8(&qword_1E94F7358);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for AsyncSerialQueue(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1A088F1C8);
}

uint64_t sub_1A088F1C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1A07856F8(&qword_1E94F7358);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for AsyncSerialQueue()
{
  uint64_t result = qword_1E94F7220;
  if (!qword_1E94F7220) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1A088F288()
{
  sub_1A088F314();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_1A088F314()
{
  if (!qword_1E94F7360)
  {
    sub_1A078D800(&qword_1E94F7380);
    unint64_t v0 = sub_1A09F41F8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E94F7360);
    }
  }
}

uint64_t sub_1A088F370(uint64_t a1, int *a2)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v5 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v2 + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = v3;
  *uint64_t v3 = v2;
  v3[1] = sub_1A088F450;
  return v5(v2 + 32);
}

uint64_t sub_1A088F450()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(unsigned char **)(*v0 + 16);
  uint64_t v5 = *v0;
  swift_task_dealloc();
  unsigned char *v2 = *(unsigned char *)(v1 + 32);
  uint64_t v3 = *(uint64_t (**)(void))(v5 + 8);
  return v3();
}

uint64_t sub_1A088F564()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1A088F59C(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1A077EE58;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_1E94F9988 + dword_1E94F9988);
  return v6(a1, v4);
}

uint64_t sub_1A088F654()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_1A088F68C()
{
  uint64_t v2 = v0[2];
  uint64_t v3 = v0[3];
  uint64_t v5 = (int *)v0[4];
  uint64_t v4 = v0[5];
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v6;
  *uint64_t v6 = v1;
  v6[1] = sub_1A077EE58;
  return sub_1A088E86C(v3, v5, v4, v2);
}

uint64_t sub_1A088F738()
{
  uint64_t v2 = v0[2];
  uint64_t v3 = v0[3];
  uint64_t v5 = (int *)v0[4];
  uint64_t v4 = v0[5];
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v6;
  *uint64_t v6 = v1;
  v6[1] = sub_1A077EE54;
  return sub_1A088DEBC(v3, v5, v4, v2);
}

uint64_t sub_1A088F7E4(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1A077EE54;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_1E94FAD90 + dword_1E94FAD90);
  return v6(a1, v4);
}

uint64_t sub_1A088F8B0()
{
  uint64_t v0 = sub_1A09F39E8();
  sub_1A078D848(v0, qword_1E94F99D8);
  sub_1A078510C(v0, (uint64_t)qword_1E94F99D8);
  return sub_1A09F39D8();
}

uint64_t static RemoteIntentRequestBroadcasts.notificationEntityTypeIdentifier.getter()
{
  return sub_1A088F9B8(&qword_1E94F99F0);
}

uint64_t static RemoteIntentRequestBroadcasts.notificationEntityTypeIdentifier.setter(uint64_t a1, uint64_t a2)
{
  return sub_1A088FA1C(a1, a2, &qword_1E94F99F0, &off_1E94F99F8);
}

uint64_t (*static RemoteIntentRequestBroadcasts.notificationEntityTypeIdentifier.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t static RemoteIntentRequestBroadcasts.requestTypeIdentifier.getter()
{
  return sub_1A088F9B8((uint64_t *)&unk_1E94F9A00);
}

uint64_t sub_1A088F9B8(uint64_t *a1)
{
  swift_beginAccess();
  uint64_t v2 = *a1;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t static RemoteIntentRequestBroadcasts.requestTypeIdentifier.setter(uint64_t a1, uint64_t a2)
{
  return sub_1A088FA1C(a1, a2, qword_1E94F9A00, &qword_1E94F9A00[1]);
}

uint64_t sub_1A088FA1C(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  *a3 = a1;
  *a4 = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*static RemoteIntentRequestBroadcasts.requestTypeIdentifier.modify())()
{
  return j__swift_endAccess;
}

uint64_t RemoteIntentRequestBroadcasts.perform(using:)(uint64_t a1)
{
  *(void *)(v1 + 120) = a1;
  return MEMORY[0x1F4188298](sub_1A088FAFC, 0, 0);
}

uint64_t sub_1A088FAFC()
{
  *(void *)(v0 + 12_Block_object_dispose(&a9, 8) = sub_1A09F4188();
  *(void *)(v0 + 136) = sub_1A09F4178();
  uint64_t v2 = sub_1A09F4108();
  return MEMORY[0x1F4188298](sub_1A088FB94, v2, v1);
}

uint64_t sub_1A088FB94()
{
  swift_release();
  if (qword_1E94F7598 != -1) {
    swift_once();
  }
  return MEMORY[0x1F4188298](sub_1A088FC2C, 0, 0);
}

uint64_t sub_1A088FC2C()
{
  *(void *)(v0 + 144) = sub_1A09F4178();
  uint64_t v2 = sub_1A09F4108();
  return MEMORY[0x1F4188298](sub_1A088FCB8, v2, v1);
}

uint64_t sub_1A088FCB8()
{
  swift_release();
  *(void *)(v0 + 152) = qword_1E94F7588;
  return MEMORY[0x1F4188298](sub_1A088FD2C, 0, 0);
}

uint64_t sub_1A088FD2C()
{
  swift_beginAccess();
  uint64_t v1 = off_1E94F99F8;
  v0[20] = qword_1E94F99F0;
  v0[21] = v1;
  swift_bridgeObjectRetain();
  v0[22] = sub_1A09F4178();
  uint64_t v3 = sub_1A09F4108();
  return MEMORY[0x1F4188298](sub_1A088FDE0, v3, v2);
}

uint64_t sub_1A088FDE0()
{
  unint64_t v1 = v0[21];
  uint64_t v2 = v0[20];
  swift_release();
  v0[23] = sub_1A0882984(v2, v1);
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4188298](sub_1A088FE6C, 0, 0);
}

uint64_t sub_1A088FE6C()
{
  uint64_t v1 = *(void *)(v0 + 184);
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    uint64_t v3 = v1 + 32;
    swift_bridgeObjectRetain();
    uint64_t v4 = (void *)MEMORY[0x1E4FBC860];
    do
    {
      sub_1A0883D94(v3, v0 + 16);
      sub_1A0883D94(v0 + 16, v0 + 56);
      _s17IMSharedUtilities29RemoteIntentBroadcastEncodingVwxx_0(v0 + 16);
      if (*(void *)(v0 + 80))
      {
        long long v10 = *(_OWORD *)(v0 + 56);
        long long v11 = *(_OWORD *)(v0 + 72);
        uint64_t v12 = *(void *)(v0 + 88);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v4 = sub_1A0891780(0, v4[2] + 1, 1, v4);
        }
        unint64_t v6 = v4[2];
        unint64_t v5 = v4[3];
        if (v6 >= v5 >> 1) {
          uint64_t v4 = sub_1A0891780((void *)(v5 > 1), v6 + 1, 1, v4);
        }
        _DWORD v4[2] = v6 + 1;
        uint64_t v7 = &v4[5 * v6];
        v7[8] = v12;
        *((_OWORD *)v7 + 2) = v10;
        *((_OWORD *)v7 + 3) = v11;
      }
      else
      {
        sub_1A0784C08(v0 + 56, &qword_1E94F9A18);
      }
      v3 += 40;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease_n();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v4 = (void *)MEMORY[0x1E4FBC860];
  }
  **(void **)(v0 + 120) = v4;
  uint64_t v8 = *(uint64_t (**)(void))(v0 + 8);
  return v8();
}

void RemoteIntentRequestBroadcasts.route(response:to:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(*(void *)a1 + 16);
  if (v2)
  {
    uint64_t v3 = *(void *)a1 + 32;
    swift_bridgeObjectRetain();
    uint64_t v4 = (void *)MEMORY[0x1E4FBC860];
    do
    {
      sub_1A08918A4(v3, (uint64_t)v37);
      sub_1A0883D94((uint64_t)v37, (uint64_t)&v34);
      sub_1A0891900((uint64_t)v37);
      if (v35)
      {
        sub_1A089266C(&v34, (uint64_t)v36);
        sub_1A089266C(v36, (uint64_t)&v34);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v4 = sub_1A0891AAC(0, v4[2] + 1, 1, v4, &qword_1E94F9BB0, &qword_1E94F9BB8);
        }
        unint64_t v6 = v4[2];
        unint64_t v5 = v4[3];
        if (v6 >= v5 >> 1) {
          uint64_t v4 = sub_1A0891AAC((void *)(v5 > 1), v6 + 1, 1, v4, &qword_1E94F9BB0, &qword_1E94F9BB8);
        }
        _DWORD v4[2] = v6 + 1;
        sub_1A089266C(&v34, (uint64_t)&v4[5 * v6 + 4]);
      }
      else
      {
        sub_1A0784C08((uint64_t)&v34, &qword_1E94F9A20);
      }
      v3 += 40;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease();
    uint64_t v7 = v4[2];
    if (v7) {
      goto LABEL_12;
    }
  }
  else
  {
    uint64_t v4 = (void *)MEMORY[0x1E4FBC860];
    uint64_t v7 = *(void *)(MEMORY[0x1E4FBC860] + 16);
    if (v7)
    {
LABEL_12:
      uint64_t v8 = (uint64_t)(v4 + 4);
      swift_bridgeObjectRetain();
      uint64_t v9 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v10 = (uint64_t)(v4 + 4);
      uint64_t v11 = v7;
      do
      {
        sub_1A0883D94(v10, (uint64_t)v37);
        sub_1A086F45C(v37, v38);
        *(void *)&v36[0] = swift_getDynamicType();
        *((void *)&v36[0] + 1) = v39;
        sub_1A07856F8(&qword_1E94F9A28);
        uint64_t v12 = sub_1A09F3E38();
        uint64_t v14 = v13;
        _s17IMSharedUtilities29RemoteIntentBroadcastEncodingVwxx_0((uint64_t)v37);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v9 = sub_1A0891400(0, v9[2] + 1, 1, v9);
        }
        unint64_t v16 = v9[2];
        unint64_t v15 = v9[3];
        if (v16 >= v15 >> 1) {
          uint64_t v9 = sub_1A0891400((void *)(v15 > 1), v16 + 1, 1, v9);
        }
        void v9[2] = v16 + 1;
        uint64_t v17 = &v9[2 * v16];
        void v17[4] = v12;
        v17[5] = v14;
        v10 += 40;
        --v11;
      }
      while (v11);
      swift_bridgeObjectRelease();
      sub_1A08925D4((uint64_t)v9);
      swift_bridgeObjectRelease();
      if (qword_1E94F84E0 != -1) {
        swift_once();
      }
      uint64_t v18 = sub_1A09F39E8();
      sub_1A078510C(v18, (uint64_t)qword_1E94F99D8);
      swift_bridgeObjectRetain();
      uint64_t v19 = sub_1A09F39C8();
      os_log_type_t v20 = sub_1A09F4388();
      if (os_log_type_enabled(v19, v20))
      {
        uint64_t v21 = swift_slowAlloc();
        uint64_t v32 = swift_slowAlloc();
        v37[0] = v32;
        *(_DWORD *)uint64_t v21 = 136315394;
        *(void *)&v36[0] = sub_1A0785144(0xD000000000000013, 0x80000001A0A31AC0, v37);
        sub_1A09F4528();
        *(_WORD *)(v21 + 12) = 2080;
        swift_bridgeObjectRetain();
        uint64_t v22 = sub_1A09F42C8();
        unint64_t v24 = v23;
        swift_bridgeObjectRelease();
        *(void *)&v36[0] = sub_1A0785144(v22, v24, v37);
        sub_1A09F4528();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1A0772000, v19, v20, "%s Routing invocation for the following broadcast types: %s", (uint8_t *)v21, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1A6228C20](v32, -1, -1);
        MEMORY[0x1A6228C20](v21, -1, -1);
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      do
      {
        sub_1A0883D94(v8, (uint64_t)v37);
        uint64_t v30 = v38;
        uint64_t v31 = v39;
        sub_1A086F45C(v37, v38);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v31 + 64))(a2, v30, v31);
        _s17IMSharedUtilities29RemoteIntentBroadcastEncodingVwxx_0((uint64_t)v37);
        v8 += 40;
        --v7;
      }
      while (v7);
      swift_bridgeObjectRelease();
      return;
    }
  }
  swift_bridgeObjectRelease();
  if (qword_1E94F84E0 != -1) {
    swift_once();
  }
  uint64_t v25 = sub_1A09F39E8();
  sub_1A078510C(v25, (uint64_t)qword_1E94F99D8);
  uint64_t v26 = sub_1A09F39C8();
  os_log_type_t v27 = sub_1A09F4388();
  if (os_log_type_enabled(v26, v27))
  {
    uint64_t v28 = (uint8_t *)swift_slowAlloc();
    uint64_t v29 = swift_slowAlloc();
    v37[0] = v29;
    *(_DWORD *)uint64_t v28 = 136315138;
    *(void *)&v36[0] = sub_1A0785144(0xD000000000000013, 0x80000001A0A31AC0, v37);
    sub_1A09F4528();
    _os_log_impl(&dword_1A0772000, v26, v27, "%s Remote request did not return any broadcasts to process.", v28, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1A6228C20](v29, -1, -1);
    MEMORY[0x1A6228C20](v28, -1, -1);
  }
}

uint64_t sub_1A0890614(uint64_t a1)
{
  type metadata accessor for RemoteIntentFileMirrorRequestTask();
  sub_1A0893B7C();
  uint64_t result = sub_1A09F42D8();
  int64_t v3 = 0;
  uint64_t v16 = result;
  uint64_t v4 = a1 + 64;
  uint64_t v5 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(a1 + 64);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      unint64_t v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v10 = v9 | (v3 << 6);
      goto LABEL_5;
    }
    int64_t v12 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v12 >= v8) {
      goto LABEL_23;
    }
    unint64_t v13 = *(void *)(v4 + 8 * v12);
    ++v3;
    if (!v13)
    {
      int64_t v3 = v12 + 1;
      if (v12 + 1 >= v8) {
        goto LABEL_23;
      }
      unint64_t v13 = *(void *)(v4 + 8 * v3);
      if (!v13)
      {
        int64_t v3 = v12 + 2;
        if (v12 + 2 >= v8) {
          goto LABEL_23;
        }
        unint64_t v13 = *(void *)(v4 + 8 * v3);
        if (!v13)
        {
          int64_t v3 = v12 + 3;
          if (v12 + 3 >= v8) {
            goto LABEL_23;
          }
          unint64_t v13 = *(void *)(v4 + 8 * v3);
          if (!v13) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v7 = (v13 - 1) & v13;
    unint64_t v10 = __clz(__rbit64(v13)) + (v3 << 6);
LABEL_5:
    uint64_t v11 = *(void *)(*(void *)(a1 + 56) + 8 * v10);
    swift_retain();
    sub_1A08EEC28(&v15, v11);
    uint64_t result = swift_release();
  }
  int64_t v14 = v12 + 4;
  if (v14 >= v8)
  {
LABEL_23:
    swift_release();
    return v16;
  }
  unint64_t v13 = *(void *)(v4 + 8 * v14);
  if (v13)
  {
    int64_t v3 = v14;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v3 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v3 >= v8) {
      goto LABEL_23;
    }
    unint64_t v13 = *(void *)(v4 + 8 * v3);
    ++v14;
    if (v13) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_1A08907B4(uint64_t a1)
{
  uint64_t result = sub_1A09F42D8();
  int64_t v3 = 0;
  uint64_t v18 = result;
  uint64_t v4 = a1 + 64;
  uint64_t v5 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(a1 + 64);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      unint64_t v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v10 = v9 | (v3 << 6);
      goto LABEL_5;
    }
    int64_t v14 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v14 >= v8) {
      goto LABEL_23;
    }
    unint64_t v15 = *(void *)(v4 + 8 * v14);
    ++v3;
    if (!v15)
    {
      int64_t v3 = v14 + 1;
      if (v14 + 1 >= v8) {
        goto LABEL_23;
      }
      unint64_t v15 = *(void *)(v4 + 8 * v3);
      if (!v15)
      {
        int64_t v3 = v14 + 2;
        if (v14 + 2 >= v8) {
          goto LABEL_23;
        }
        unint64_t v15 = *(void *)(v4 + 8 * v3);
        if (!v15)
        {
          int64_t v3 = v14 + 3;
          if (v14 + 3 >= v8) {
            goto LABEL_23;
          }
          unint64_t v15 = *(void *)(v4 + 8 * v3);
          if (!v15) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v7 = (v15 - 1) & v15;
    unint64_t v10 = __clz(__rbit64(v15)) + (v3 << 6);
LABEL_5:
    uint64_t v11 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v10);
    uint64_t v12 = *v11;
    uint64_t v13 = v11[1];
    swift_bridgeObjectRetain();
    sub_1A08EEA78(&v17, v12, v13);
    uint64_t result = swift_bridgeObjectRelease();
  }
  int64_t v16 = v14 + 4;
  if (v16 >= v8)
  {
LABEL_23:
    swift_release();
    return v18;
  }
  unint64_t v15 = *(void *)(v4 + 8 * v16);
  if (v15)
  {
    int64_t v3 = v16;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v3 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v3 >= v8) {
      goto LABEL_23;
    }
    unint64_t v15 = *(void *)(v4 + 8 * v3);
    ++v16;
    if (v15) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_1A089094C(uint64_t a1)
{
  uint64_t result = sub_1A09F42D8();
  int64_t v3 = 0;
  uint64_t v18 = result;
  uint64_t v4 = a1 + 64;
  uint64_t v5 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(a1 + 64);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      unint64_t v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v10 = v9 | (v3 << 6);
      goto LABEL_5;
    }
    int64_t v14 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v14 >= v8) {
      goto LABEL_23;
    }
    unint64_t v15 = *(void *)(v4 + 8 * v14);
    ++v3;
    if (!v15)
    {
      int64_t v3 = v14 + 1;
      if (v14 + 1 >= v8) {
        goto LABEL_23;
      }
      unint64_t v15 = *(void *)(v4 + 8 * v3);
      if (!v15)
      {
        int64_t v3 = v14 + 2;
        if (v14 + 2 >= v8) {
          goto LABEL_23;
        }
        unint64_t v15 = *(void *)(v4 + 8 * v3);
        if (!v15)
        {
          int64_t v3 = v14 + 3;
          if (v14 + 3 >= v8) {
            goto LABEL_23;
          }
          unint64_t v15 = *(void *)(v4 + 8 * v3);
          if (!v15) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v7 = (v15 - 1) & v15;
    unint64_t v10 = __clz(__rbit64(v15)) + (v3 << 6);
LABEL_5:
    uint64_t v11 = (uint64_t *)(*(void *)(a1 + 56) + 16 * v10);
    uint64_t v12 = *v11;
    uint64_t v13 = v11[1];
    swift_bridgeObjectRetain();
    sub_1A08EEA78(&v17, v12, v13);
    uint64_t result = swift_bridgeObjectRelease();
  }
  int64_t v16 = v14 + 4;
  if (v16 >= v8)
  {
LABEL_23:
    swift_release();
    return v18;
  }
  unint64_t v15 = *(void *)(v4 + 8 * v16);
  if (v15)
  {
    int64_t v3 = v16;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v3 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v3 >= v8) {
      goto LABEL_23;
    }
    unint64_t v15 = *(void *)(v4 + 8 * v3);
    ++v16;
    if (v15) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_1A0890AE4(uint64_t a1)
{
  unint64_t v2 = sub_1A0892684();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A0890B20(uint64_t a1)
{
  unint64_t v2 = sub_1A0892684();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t RemoteIntentRequestBroadcasts.encode(to:)(void *a1)
{
  uint64_t v2 = sub_1A07856F8(&qword_1E94F9A30);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A086F45C(a1, a1[3]);
  sub_1A0892684();
  sub_1A09F4CC8();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t RemoteIntentRequestBroadcasts.init(from:)(uint64_t a1)
{
  return _s17IMSharedUtilities29RemoteIntentBroadcastEncodingVwxx_0(a1);
}

uint64_t sub_1A0890C94(uint64_t a1, uint64_t a2)
{
  return sub_1A0890CCC(a1, a2, &qword_1E94F99F0);
}

void sub_1A0890CA4(uint64_t a1, uint64_t a2)
{
}

uint64_t sub_1A0890CBC(uint64_t a1, uint64_t a2)
{
  return sub_1A0890CCC(a1, a2, qword_1E94F9A00);
}

uint64_t sub_1A0890CCC(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  swift_beginAccess();
  uint64_t v4 = *a3;
  swift_bridgeObjectRetain();
  return v4;
}

uint64_t sub_1A0890D24(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1A077EE58;
  v3[15] = a1;
  return MEMORY[0x1F4188298](sub_1A088FAFC, 0, 0);
}

uint64_t sub_1A0890DD0(void *a1)
{
  uint64_t v2 = sub_1A07856F8(&qword_1E94F9A30);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A086F45C(a1, a1[3]);
  sub_1A0892684();
  sub_1A09F4CC8();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t RemoteIntentRequestBroadcastsResponse.broadcastEncodings.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t RemoteIntentRequestBroadcastsResponse.broadcastEncodings.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v1 = a1;
  return result;
}

uint64_t (*RemoteIntentRequestBroadcastsResponse.broadcastEncodings.modify())()
{
  return nullsub_5;
}

uint64_t sub_1A0890F34()
{
  return 1;
}

uint64_t sub_1A0890F3C()
{
  return sub_1A09F4C88();
}

uint64_t sub_1A0890F80()
{
  return sub_1A09F4C58();
}

uint64_t sub_1A0890FA8()
{
  return sub_1A09F4C88();
}

unint64_t sub_1A0890FE8()
{
  return 0xD000000000000012;
}

uint64_t sub_1A0891004@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A089335C(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1A0891030(uint64_t a1)
{
  unint64_t v2 = sub_1A08926D8();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A089106C(uint64_t a1)
{
  unint64_t v2 = sub_1A08926D8();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t RemoteIntentRequestBroadcastsResponse.encode(to:)(void *a1)
{
  uint64_t v3 = sub_1A07856F8(&qword_1E94F9A40);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *v1;
  sub_1A086F45C(a1, a1[3]);
  sub_1A08926D8();
  sub_1A09F4CC8();
  v9[1] = v7;
  sub_1A07856F8(&qword_1E94F9A50);
  sub_1A0892780(&qword_1E94F9A58, (void (*)(void))sub_1A089272C);
  sub_1A09F4A78();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t RemoteIntentRequestBroadcastsResponse.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = sub_1A07856F8(&qword_1E94F9A68);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  int64_t v8 = (char *)v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A086F45C(a1, a1[3]);
  sub_1A08926D8();
  sub_1A09F4CA8();
  if (!v2)
  {
    sub_1A07856F8(&qword_1E94F9A50);
    sub_1A0892780(&qword_1E94F9A70, (void (*)(void))sub_1A08927F0);
    sub_1A09F4928();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v10[1];
  }
  return _s17IMSharedUtilities29RemoteIntentBroadcastEncodingVwxx_0((uint64_t)a1);
}

uint64_t sub_1A08913D0@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return RemoteIntentRequestBroadcastsResponse.init(from:)(a1, a2);
}

uint64_t sub_1A08913E8(void *a1)
{
  return RemoteIntentRequestBroadcastsResponse.encode(to:)(a1);
}

void *sub_1A0891400(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1A07856F8(&qword_1E94FE520);
      unint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      void v10[2] = v8;
      uint64_t v10[3] = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      unint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1A08924E0(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1A0891510(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1A07856F8(&qword_1E94F9B88);
      unint64_t v10 = (void *)swift_allocObject();
      size_t v11 = j__malloc_size(v10);
      void v10[2] = v8;
      uint64_t v10[3] = 2 * ((uint64_t)(v11 - 32) / 80);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[10 * v8 + 4]) {
          memmove(v12, a4 + 4, 80 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      unint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v12 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1A089305C(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1A0891630(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1A0891968(a1, a2, a3, a4, &qword_1E94F9B58, (uint64_t *)&unk_1E94F9030);
}

void *sub_1A0891644(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1A0891AAC(a1, a2, a3, a4, &qword_1E94F9BB0, &qword_1E94F9BB8);
}

void *sub_1A0891658(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1A07856F8(&qword_1E94F9B48);
      unint64_t v10 = (void *)swift_allocObject();
      size_t v11 = j__malloc_size(v10);
      void v10[2] = v8;
      uint64_t v10[3] = 2 * ((uint64_t)(v11 - 32) / 48);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[6 * v8 + 4]) {
          memmove(v12, a4 + 4, 48 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      unint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v12 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1A0893154(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1A0891780(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1A07856F8(&qword_1E94F9BC0);
      unint64_t v10 = (void *)swift_allocObject();
      size_t v11 = j__malloc_size(v10);
      void v10[2] = v8;
      uint64_t v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[5 * v8 + 4]) {
          memmove(v12, a4 + 4, 40 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      unint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v12 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1A0893264(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1A08918A4(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1A0891900(uint64_t a1)
{
  return a1;
}

void *sub_1A0891954(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1A0891968(a1, a2, a3, a4, &qword_1E94F9B20, &qword_1E94FDD10);
}

void *sub_1A0891968(void *result, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t *a6)
{
  char v8 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v10 = a2;
    goto LABEL_8;
  }
  unint64_t v9 = a4[3];
  uint64_t v10 = v9 >> 1;
  if ((uint64_t)(v9 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v10 + 0x4000000000000000 >= 0)
  {
    uint64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v10 = a2;
    }
LABEL_8:
    uint64_t v11 = a4[2];
    if (v10 <= v11) {
      uint64_t v12 = a4[2];
    }
    else {
      uint64_t v12 = v10;
    }
    if (v12)
    {
      sub_1A07856F8(a5);
      uint64_t v13 = (void *)swift_allocObject();
      int64_t v14 = j__malloc_size(v13);
      uint64_t v15 = v14 - 32;
      if (v14 < 32) {
        uint64_t v15 = v14 - 25;
      }
      void v13[2] = v11;
      v13[3] = 2 * (v15 >> 3);
      int64_t v16 = v13 + 4;
      if (v8) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v13 = (void *)MEMORY[0x1E4FBC860];
      int64_t v16 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v13 != a4 || v16 >= &a4[v11 + 4]) {
          memmove(v16, a4 + 4, 8 * v11);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1A0893A74(0, v11, (unint64_t)v16, (uint64_t)a4, a6);
LABEL_24:
    swift_bridgeObjectRelease();
    return v13;
  }
  __break(1u);
  return result;
}

uint64_t sub_1A0891A84(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1A0892004(a1, a2, a3, a4, &qword_1E94F9B68, &qword_1E94F9B70);
}

void *sub_1A0891A98(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1A0891AAC(a1, a2, a3, a4, &qword_1E94F9BA0, &qword_1E94F9BA8);
}

void *sub_1A0891AAC(void *result, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t *a6)
{
  char v8 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v10 = a2;
    goto LABEL_8;
  }
  unint64_t v9 = a4[3];
  uint64_t v10 = v9 >> 1;
  if ((uint64_t)(v9 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v10 + 0x4000000000000000 >= 0)
  {
    uint64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v10 = a2;
    }
LABEL_8:
    uint64_t v11 = a4[2];
    if (v10 <= v11) {
      uint64_t v12 = a4[2];
    }
    else {
      uint64_t v12 = v10;
    }
    if (v12)
    {
      sub_1A07856F8(a5);
      uint64_t v13 = (void *)swift_allocObject();
      size_t v14 = j__malloc_size(v13);
      void v13[2] = v11;
      v13[3] = 2 * ((uint64_t)(v14 - 32) / 40);
      uint64_t v15 = v13 + 4;
      if (v8)
      {
LABEL_13:
        if (v13 != a4 || v15 >= &a4[5 * v11 + 4]) {
          memmove(v15, a4 + 4, 40 * v11);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v13 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v15 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1A08933E4(0, v11, (unint64_t)v15, (uint64_t)a4, a6);
LABEL_22:
    swift_bridgeObjectRelease();
    return v13;
  }
  __break(1u);
  return result;
}

uint64_t sub_1A0891BDC(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1A0891C44(a1, a2, a3, a4, &qword_1E94FD1B0, type metadata accessor for RemoteIntentMirrorFile, type metadata accessor for RemoteIntentMirrorFile);
}

uint64_t sub_1A0891C10(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1A0891C44(a1, a2, a3, a4, &qword_1E94F9B78, type metadata accessor for RemoteIntentMirrorFileRepresentation, type metadata accessor for RemoteIntentMirrorFileRepresentation);
}

uint64_t sub_1A0891C44(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t (*a6)(void), uint64_t (*a7)(void))
{
  if (a3)
  {
    unint64_t v11 = *(void *)(a4 + 24);
    uint64_t v12 = v11 >> 1;
    if ((uint64_t)(v11 >> 1) < a2)
    {
      if (v12 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v12 = v11 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v11 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v12 = a2;
      }
    }
  }
  else
  {
    uint64_t v12 = a2;
  }
  uint64_t v13 = *(void *)(a4 + 16);
  if (v12 <= v13) {
    uint64_t v14 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v14 = v12;
  }
  if (!v14)
  {
    uint64_t v18 = (void *)MEMORY[0x1E4FBC860];
    goto LABEL_19;
  }
  sub_1A07856F8(a5);
  uint64_t v15 = *(void *)(a6(0) - 8);
  uint64_t v16 = *(void *)(v15 + 72);
  unint64_t v17 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  uint64_t v18 = (void *)swift_allocObject();
  size_t v19 = j__malloc_size(v18);
  if (!v16 || (v19 - v17 == 0x8000000000000000 ? (BOOL v20 = v16 == -1) : (BOOL v20 = 0), v20))
  {
LABEL_29:
    uint64_t result = sub_1A09F4798();
    __break(1u);
    return result;
  }
  v18[2] = v13;
  _OWORD v18[3] = 2 * ((uint64_t)(v19 - v17) / v16);
LABEL_19:
  uint64_t v21 = *(void *)(a6(0) - 8);
  unint64_t v22 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  unint64_t v23 = (unint64_t)v18 + v22;
  if (a1)
  {
    if ((unint64_t)v18 < a4 || v23 >= a4 + v22 + *(void *)(v21 + 72) * v13)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v18 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_1A08934F0(0, v13, v23, a4, a7);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v18;
}

uint64_t sub_1A0891EC4(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1A0891C44(a1, a2, a3, a4, &qword_1E94F9B90, MEMORY[0x1F418AE88], MEMORY[0x1F418AEC8]);
}

void *sub_1A0891EE0(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1A07856F8((uint64_t *)&unk_1EB4A5BD0);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 25;
      }
      void v10[2] = v8;
      uint64_t v10[3] = 2 * (v12 >> 3);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4]) {
          memmove(v13, a4 + 4, 8 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1A089364C(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1A0891FF0(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1A0892004(a1, a2, a3, a4, &qword_1E94F9B28, &qword_1E94F9B30);
}

uint64_t sub_1A0892004(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t *a6)
{
  if (a3)
  {
    unint64_t v9 = *(void *)(a4 + 24);
    uint64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v10 = a2;
      }
    }
  }
  else
  {
    uint64_t v10 = a2;
  }
  uint64_t v11 = *(void *)(a4 + 16);
  if (v10 <= v11) {
    uint64_t v12 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v12 = v10;
  }
  if (!v12)
  {
    uint64_t v16 = (void *)MEMORY[0x1E4FBC860];
    goto LABEL_19;
  }
  sub_1A07856F8(a5);
  uint64_t v13 = *(void *)(sub_1A07856F8(a6) - 8);
  uint64_t v14 = *(void *)(v13 + 72);
  unint64_t v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v16 = (void *)swift_allocObject();
  size_t v17 = j__malloc_size(v16);
  if (!v14 || (v17 - v15 == 0x8000000000000000 ? (BOOL v18 = v14 == -1) : (BOOL v18 = 0), v18))
  {
LABEL_29:
    uint64_t result = sub_1A09F4798();
    __break(1u);
    return result;
  }
  void v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  uint64_t v19 = *(void *)(sub_1A07856F8(a6) - 8);
  unint64_t v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  unint64_t v21 = (unint64_t)v16 + v20;
  if (a1)
  {
    if ((unint64_t)v16 < a4 || v21 >= a4 + v20 + *(void *)(v19 + 72) * v11)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_1A089391C(0, v11, v21, a4, a6);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v16;
}

void *sub_1A0892270(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1A07856F8((uint64_t *)&unk_1E94F7610);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = j__malloc_size(v10);
      void v10[2] = v8;
      uint64_t v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[5 * v8 + 4]) {
          memmove(v12, a4 + 4, 40 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v12 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1A0893738(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1A0892394(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1A07856F8(&qword_1E94F9B80);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      void v10[2] = v8;
      uint64_t v10[3] = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1A0893830(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1A08924A4(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1A0892004(a1, a2, a3, a4, &qword_1E94F9B38, &qword_1E94F9B40);
}

void *sub_1A08924B8(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1A0891968(a1, a2, a3, a4, &qword_1E94F9B60, (uint64_t *)&unk_1E94FE370);
}

void *sub_1A08924CC(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1A0891968(a1, a2, a3, a4, &qword_1E94F9B10, &qword_1E94F9B18);
}

uint64_t sub_1A08924E0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1A09F47F8();
  __break(1u);
  return result;
}

uint64_t sub_1A08925D4(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t result = sub_1A09F42D8();
  uint64_t v8 = result;
  if (v2)
  {
    uint64_t v4 = (uint64_t *)(a1 + 40);
    do
    {
      uint64_t v5 = *(v4 - 1);
      uint64_t v6 = *v4;
      swift_bridgeObjectRetain();
      sub_1A08EEA78(&v7, v5, v6);
      swift_bridgeObjectRelease();
      v4 += 2;
      --v2;
    }
    while (v2);
    return v8;
  }
  return result;
}

uint64_t sub_1A089266C(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(void *)(a2 + 32) = *((void *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

unint64_t sub_1A0892684()
{
  unint64_t result = qword_1E94F9A38;
  if (!qword_1E94F9A38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94F9A38);
  }
  return result;
}

unint64_t sub_1A08926D8()
{
  unint64_t result = qword_1E94F9A48;
  if (!qword_1E94F9A48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94F9A48);
  }
  return result;
}

unint64_t sub_1A089272C()
{
  unint64_t result = qword_1E94F9A60;
  if (!qword_1E94F9A60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94F9A60);
  }
  return result;
}

uint64_t sub_1A0892780(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1A078D800(&qword_1E94F9A50);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1A08927F0()
{
  unint64_t result = qword_1E94F9A78;
  if (!qword_1E94F9A78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94F9A78);
  }
  return result;
}

unint64_t sub_1A0892844(uint64_t a1)
{
  unint64_t result = sub_1A089286C();
  *(void *)(a1 + _Block_object_dispose(&a9, 8) = result;
  return result;
}

unint64_t sub_1A089286C()
{
  unint64_t result = qword_1E94F9A80;
  if (!qword_1E94F9A80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94F9A80);
  }
  return result;
}

unint64_t sub_1A08928C4()
{
  unint64_t result = qword_1E94F9A88;
  if (!qword_1E94F9A88)
  {
    sub_1A078D800(&qword_1E94F9A90);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94F9A88);
  }
  return result;
}

unint64_t sub_1A0892924()
{
  unint64_t result = qword_1E94F9A98;
  if (!qword_1E94F9A98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94F9A98);
  }
  return result;
}

unint64_t sub_1A0892978(uint64_t a1)
{
  unint64_t result = sub_1A08929A0();
  *(void *)(a1 + _Block_object_dispose(&a9, 8) = result;
  return result;
}

unint64_t sub_1A08929A0()
{
  unint64_t result = qword_1E94F9AA8;
  if (!qword_1E94F9AA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94F9AA8);
  }
  return result;
}

unint64_t sub_1A08929F4(uint64_t a1)
{
  unint64_t result = sub_1A0892A1C();
  *(void *)(a1 + _Block_object_dispose(&a9, 8) = result;
  return result;
}

unint64_t sub_1A0892A1C()
{
  unint64_t result = qword_1E94F9AB0;
  if (!qword_1E94F9AB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94F9AB0);
  }
  return result;
}

uint64_t sub_1A0892A70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A0892C68(a1, a2, a3, (uint64_t (*)(void))sub_1A0892A9C, (uint64_t (*)(void))sub_1A0892AF0);
}

unint64_t sub_1A0892A9C()
{
  unint64_t result = qword_1E94F9AB8;
  if (!qword_1E94F9AB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94F9AB8);
  }
  return result;
}

unint64_t sub_1A0892AF0()
{
  unint64_t result = qword_1E94F9AC0;
  if (!qword_1E94F9AC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94F9AC0);
  }
  return result;
}

unint64_t sub_1A0892B44(uint64_t a1)
{
  unint64_t result = sub_1A0892B6C();
  *(void *)(a1 + _Block_object_dispose(&a9, 8) = result;
  return result;
}

unint64_t sub_1A0892B6C()
{
  unint64_t result = qword_1E94F9AC8;
  if (!qword_1E94F9AC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94F9AC8);
  }
  return result;
}

unint64_t sub_1A0892BC0(uint64_t a1)
{
  unint64_t result = sub_1A0892BE8();
  *(void *)(a1 + _Block_object_dispose(&a9, 8) = result;
  return result;
}

unint64_t sub_1A0892BE8()
{
  unint64_t result = qword_1E94F9AD0;
  if (!qword_1E94F9AD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94F9AD0);
  }
  return result;
}

uint64_t sub_1A0892C3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A0892C68(a1, a2, a3, (uint64_t (*)(void))sub_1A0892CA4, (uint64_t (*)(void))sub_1A0892CF8);
}

uint64_t sub_1A0892C68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t (*a5)(void))
{
  *(void *)(a1 + _Block_object_dispose(&a9, 8) = a4();
  uint64_t result = a5();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1A0892CA4()
{
  unint64_t result = qword_1E94F9AD8;
  if (!qword_1E94F9AD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94F9AD8);
  }
  return result;
}

unint64_t sub_1A0892CF8()
{
  unint64_t result = qword_1E94F9AE0;
  if (!qword_1E94F9AE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94F9AE0);
  }
  return result;
}

ValueMetadata *type metadata accessor for RemoteIntentRequestBroadcasts()
{
  return &type metadata for RemoteIntentRequestBroadcasts;
}

ValueMetadata *type metadata accessor for RemoteIntentRequestBroadcastsResponse()
{
  return &type metadata for RemoteIntentRequestBroadcastsResponse;
}

uint64_t getEnumTagSinglePayload for RemoteIntentRequestBroadcastsResponse.CodingKeys(unsigned int *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if ((a2 + 1) >= 0x10000) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) < 0x100) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4) {
    return *a1;
  }
  if (v3 == 2) {
    return *(unsigned __int16 *)a1;
  }
  return *(unsigned __int8 *)a1;
}

unsigned char *storeEnumTagSinglePayload for RemoteIntentRequestBroadcastsResponse.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1A0892E5CLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for RemoteIntentRequestBroadcastsResponse.CodingKeys()
{
  return &type metadata for RemoteIntentRequestBroadcastsResponse.CodingKeys;
}

ValueMetadata *type metadata accessor for RemoteIntentRequestBroadcasts.CodingKeys()
{
  return &type metadata for RemoteIntentRequestBroadcasts.CodingKeys;
}

unint64_t sub_1A0892EA8()
{
  unint64_t result = qword_1E94F9AE8;
  if (!qword_1E94F9AE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94F9AE8);
  }
  return result;
}

unint64_t sub_1A0892F00()
{
  unint64_t result = qword_1E94F9AF0;
  if (!qword_1E94F9AF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94F9AF0);
  }
  return result;
}

unint64_t sub_1A0892F58()
{
  unint64_t result = qword_1E94F9AF8;
  if (!qword_1E94F9AF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94F9AF8);
  }
  return result;
}

unint64_t sub_1A0892FB0()
{
  unint64_t result = qword_1E94F9B00;
  if (!qword_1E94F9B00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94F9B00);
  }
  return result;
}

unint64_t sub_1A0893008()
{
  unint64_t result = qword_1E94F9B08;
  if (!qword_1E94F9B08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94F9B08);
  }
  return result;
}

uint64_t sub_1A089305C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 80 * a1 + 32;
    unint64_t v6 = a3 + 80 * v4;
    if (v5 >= v6 || v5 + 80 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1A09F47F8();
  __break(1u);
  return result;
}

uint64_t sub_1A0893154(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 48 * a1 + 32;
    unint64_t v6 = a3 + 48 * v4;
    if (v5 >= v6 || v5 + 48 * v4 <= a3)
    {
      sub_1A07856F8(&qword_1E94F9B50);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1A09F47F8();
  __break(1u);
  return result;
}

uint64_t sub_1A0893264(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 40 * a1 + 32;
    unint64_t v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1A09F47F8();
  __break(1u);
  return result;
}

uint64_t sub_1A089335C(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000012 && a2 == 0x80000001A0A31AE0)
  {
    swift_bridgeObjectRelease();
    char v2 = 0;
  }
  else
  {
    char v3 = sub_1A09F4B28();
    swift_bridgeObjectRelease();
    char v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t sub_1A08933E4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    unint64_t v6 = a4 + 40 * a1 + 32;
    unint64_t v7 = a3 + 40 * v5;
    if (v6 >= v7 || v6 + 40 * v5 <= a3)
    {
      sub_1A07856F8(a5);
      swift_arrayInitWithCopy();
      return v7;
    }
  }
  uint64_t result = sub_1A09F47F8();
  __break(1u);
  return result;
}

uint64_t sub_1A08934F0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    uint64_t v9 = *(void *)(a5(0) - 8);
    uint64_t v10 = a4 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v11 = *(void *)(v9 + 72);
    unint64_t v12 = v10 + v11 * a1;
    unint64_t v13 = a3 + v11 * v5;
    if (v12 >= v13 || v12 + v11 * v5 <= a3)
    {
      swift_arrayInitWithCopy();
      return v13;
    }
  }
  uint64_t result = sub_1A09F47F8();
  __break(1u);
  return result;
}

char *sub_1A089364C(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    uint64_t v5 = (char *)(a4 + 8 * a1 + 32);
    size_t v6 = 8 * v4;
    unint64_t v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  uint64_t result = (char *)sub_1A09F47F8();
  __break(1u);
  return result;
}

uint64_t sub_1A0893738(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 40 * a1 + 32;
    unint64_t v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1A09F47F8();
  __break(1u);
  return result;
}

char *sub_1A0893830(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + 16 * a1 + 32);
    size_t v6 = 16 * v4;
    unint64_t v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  uint64_t result = (char *)sub_1A09F47F8();
  __break(1u);
  return result;
}

uint64_t sub_1A089391C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    uint64_t v9 = *(void *)(sub_1A07856F8(a5) - 8);
    uint64_t v10 = a4 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v11 = *(void *)(v9 + 72);
    unint64_t v12 = v10 + v11 * a1;
    unint64_t v13 = a3 + v11 * v5;
    if (v12 >= v13 || v12 + v11 * v5 <= a3)
    {
      swift_arrayInitWithCopy();
      return v13;
    }
  }
  uint64_t result = sub_1A09F47F8();
  __break(1u);
  return result;
}

uint64_t sub_1A0893A74(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    unint64_t v6 = a4 + 8 * a1 + 32;
    unint64_t v7 = a3 + 8 * v5;
    if (v6 >= v7 || v6 + 8 * v5 <= a3)
    {
      sub_1A07856F8(a5);
      swift_arrayInitWithCopy();
      return v7;
    }
  }
  uint64_t result = sub_1A09F47F8();
  __break(1u);
  return result;
}

unint64_t sub_1A0893B7C()
{
  unint64_t result = qword_1E94F9B98;
  if (!qword_1E94F9B98)
  {
    type metadata accessor for RemoteIntentFileMirrorRequestTask();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94F9B98);
  }
  return result;
}

void sub_1A0893BD8(unsigned char *a1@<X8>)
{
  char v2 = (void *)sub_1A09F3DE8();
  char v3 = (void *)sub_1A09F3DE8();
  char v4 = IMGetCachedDomainBoolForKeyWithDefaultValue();

  *a1 = v4;
}

id PrototypingSetting.wrappedValue.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  id result = objc_msgSend(self, sel_sharedInstance);
  if (result)
  {
    unint64_t v6 = result;
    unsigned int v7 = objc_msgSend(result, sel_isInternalInstall);

    if (v7)
    {
      uint64_t v8 = *(int *)(a1 + 36);
      uint64_t v9 = (void (**)(unint64_t, unint64_t, void, void, uint64_t))(v2 + *(int *)(a1 + 40));
      if (*(unsigned char *)v2) {
        unint64_t v10 = 0xD000000000000013;
      }
      else {
        unint64_t v10 = 0xD000000000000012;
      }
      if (*(unsigned char *)v2) {
        unint64_t v11 = 0x80000001A0A30C80;
      }
      else {
        unint64_t v11 = 0x80000001A0A30C60;
      }
      (*v9)(v10, v11, *(void *)(v2 + 8), *(void *)(v2 + 16), v2 + v8);
      return (id)swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v12 = v2 + *(int *)(a1 + 32);
      unint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16);
      return (id)v13(a2, v12);
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t PrototypingSetting.init<A>(_:domain:default:internalDefault:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X2>, char a4@<W3>, char a5@<W4>, uint64_t a6@<X8>)
{
  if (a5 == 2) {
    char v6 = a4;
  }
  else {
    char v6 = a5;
  }
  *(unsigned char *)a6 = *a3 & 1;
  *(void *)(a6 + _Block_object_dispose(&a9, 8) = result;
  *(void *)(a6 + 16) = a2;
  *(unsigned char *)(a6 + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = a4;
  *(unsigned char *)(a6 + 25) = v6 & 1;
  *(void *)(a6 + 32) = sub_1A0893BD8;
  *(void *)(a6 + 40) = 0;
  return result;
}

void sub_1A0893DD4(uint64_t *a1@<X8>)
{
  uint64_t v2 = (void *)sub_1A09F3DE8();
  char v3 = (void *)sub_1A09F3DE8();
  uint64_t v4 = IMGetCachedDomainIntForKeyWithDefaultValue();

  *a1 = v4;
}

void sub_1A0893E48(double *a1@<X4>, double *a2@<X8>)
{
  *a2 = sub_1A08951A8(*a1);
}

uint64_t sub_1A0893E74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char v6 = (void *)sub_1A09F3DE8();
  unsigned int v7 = (void *)sub_1A09F3DE8();
  id v8 = (id)IMGetCachedDomainValueForKey();

  if (v8)
  {
    sub_1A09F4588();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v11, 0, sizeof(v11));
  }
  sub_1A0784BA0((uint64_t)v11, (uint64_t)v12);
  if (!v13)
  {
    sub_1A0783C7C((uint64_t)v12);
    goto LABEL_8;
  }
  sub_1A09F40E8();
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_8:
    swift_bridgeObjectRetain();
    return a5;
  }
  return v10;
}

uint64_t sub_1A0893F74@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X4>, uint64_t *a6@<X8>)
{
  uint64_t result = sub_1A0893E74(a1, a2, a3, a4, *a5);
  *a6 = result;
  return result;
}

uint64_t PrototypingSetting.DefaultsDomain.init(rawValue:)@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1A09F4818();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

unint64_t PrototypingSetting.DefaultsDomain.rawValue.getter()
{
  if (*v0) {
    return 0xD000000000000013;
  }
  else {
    return 0xD000000000000012;
  }
}

uint64_t type metadata accessor for PrototypingSetting.DefaultsDomain()
{
  return sub_1A0780100();
}

uint64_t sub_1A0894060(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x1E4FBB1C8];

  return MEMORY[0x1F4185BB0](a1, a2, a3, WitnessTable, v7);
}

uint64_t sub_1A08940D4(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v5 = MEMORY[0x1E4FBB1B0];

  return MEMORY[0x1F4183DE0](a1, a2, WitnessTable, v5);
}

uint64_t sub_1A0894140(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x1E4FBB1B0];

  return MEMORY[0x1F4183DF0](a1, a2, a3, WitnessTable, v7);
}

uint64_t sub_1A08941B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x1E4FBB1B0];

  return MEMORY[0x1F4183DE8](a1, a2, a3, WitnessTable, v7);
}

uint64_t sub_1A0894220@<X0>(char *a1@<X8>)
{
  return PrototypingSetting.DefaultsDomain.init(rawValue:)(a1);
}

unint64_t sub_1A089422C@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = PrototypingSetting.DefaultsDomain.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t (*sub_1A0894254@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X6>, uint64_t a6@<X8>))(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v26 = a5;
  uint64_t v10 = *(void *)(a4 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](a1);
  uint64_t v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x1F4188790](v11);
  uint64_t v16 = (char *)&v25 - v15;
  *(unsigned char *)a6 = *v17 & 1;
  *(void *)(a6 + _Block_object_dispose(&a9, 8) = v14;
  *(void *)(a6 + 16) = v18;
  uint64_t v19 = (int *)type metadata accessor for PrototypingSetting();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(a6 + v19[8], a2, a4);
  unint64_t v20 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 32);
  v20(v13, a2, a4);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(a3, 1, a4) == 1)
  {
    v20(v16, (uint64_t)v13, a4);
    uint64_t v21 = sub_1A09F4518();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v21 - 8) + 8))(a3, v21);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v13, a4);
    v20(v16, a3, a4);
  }
  v20((char *)(a6 + v19[9]), (uint64_t)v16, a4);
  unint64_t result = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))swift_allocObject();
  uint64_t v23 = v26;
  *((void *)result + 2) = a4;
  *((void *)result + 3) = v23;
  *((void *)result + 4) = a4;
  unint64_t v24 = (uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a6 + v19[10]);
  *unint64_t v24 = sub_1A08952C0;
  v24[1] = result;
  return result;
}

uint64_t PrototypingSetting.init<A>(_:domain:default:internalDefault:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X8>)
{
  *(unsigned char *)a7 = *a3 & 1;
  if (a6) {
    a5 = a4;
  }
  *(void *)(a7 + _Block_object_dispose(&a9, 8) = result;
  *(void *)(a7 + 16) = a2;
  *(void *)(a7 + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = a4;
  *(void *)(a7 + 32) = a5;
  *(void *)(a7 + 40) = sub_1A0893DD4;
  *(void *)(a7 + 4_Block_object_dispose(&a9, 8) = 0;
  return result;
}

uint64_t PrototypingSetting.init<A>(_:domain:default:internalDefault:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X2>, double a4@<X3>, char a5@<W4>, uint64_t a6@<X8>, double a7@<D0>)
{
  *(unsigned char *)a6 = *a3 & 1;
  if (a5) {
    a4 = a7;
  }
  *(void *)(a6 + _Block_object_dispose(&a9, 8) = result;
  *(void *)(a6 + 16) = a2;
  *(double *)(a6 + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = a7;
  *(double *)(a6 + 32) = a4;
  *(void *)(a6 + 40) = sub_1A0893E48;
  *(void *)(a6 + 4_Block_object_dispose(&a9, 8) = 0;
  return result;
}

__n128 PrototypingSetting.init<A>(_:domain:default:internalDefault:)@<Q0>(uint64_t a1@<X0>, char *a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  char v14 = *a2;
  uint64_t v12 = a4;
  uint64_t v13 = a3;
  uint64_t v7 = sub_1A09F40E8();
  sub_1A0894254(a1, (uint64_t)&v13, (uint64_t)&v12, v7, (uint64_t)&off_1EF2BDEC8, (uint64_t)v15);
  uint64_t v8 = v16;
  uint64_t v9 = v19;
  __n128 result = v17;
  long long v11 = v18;
  *(unsigned char *)a5 = v15[0];
  *(void *)(a5 + _Block_object_dispose(&a9, 8) = v8;
  *(__n128 *)(a5 + 16) = result;
  *(_OWORD *)(a5 + 32) = v11;
  *(void *)(a5 + 4_Block_object_dispose(&a9, 8) = v9;
  return result;
}

uint64_t sub_1A08945AC()
{
  return swift_getWitnessTable();
}

uint64_t sub_1A08945C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F41863F8](a1, a2, a3, 32);
}

uint64_t sub_1A08945D0()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void *sub_1A0894684(unint64_t a1, unint64_t a2, uint64_t a3)
{
  unint64_t v3 = (void *)a1;
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(_DWORD *)(v5 + 80);
  uint64_t v7 = *(void *)(v5 + 64);
  uint64_t v8 = v7 + v6;
  uint64_t v9 = v7 + 7;
  unint64_t v10 = ((v7 + 7 + ((v7 + v6 + ((v6 + 24) & ~v6)) & ~v6)) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v6 > 7 || (*(_DWORD *)(v5 + 80) & 0x100000) != 0 || v10 > 0x18)
  {
    uint64_t v13 = *(void *)a2;
    *unint64_t v3 = *(void *)a2;
    unint64_t v3 = (void *)(v13 + ((v6 & 0xF8 ^ 0x1F8) & (v6 + 16)));
  }
  else
  {
    uint64_t v14 = ~v6;
    *(unsigned char *)a1 = *(unsigned char *)a2;
    unint64_t v15 = a1 & 0xFFFFFFFFFFFFFFF8;
    *(void *)(v15 + _Block_object_dispose(&a9, 8) = *(void *)((a2 & 0xFFFFFFFFFFFFFFF8) + 8);
    *(void *)(v15 + 16) = *(void *)((a2 & 0xFFFFFFFFFFFFFFF8) + 16);
    unint64_t v16 = ((a1 & 0xFFFFFFFFFFFFFFF8) + v6 + 24) & ~v6;
    unint64_t v17 = ((a2 & 0xFFFFFFFFFFFFFFF8) + v6 + 24) & ~v6;
    long long v18 = *(void (**)(unint64_t, unint64_t, uint64_t))(v5 + 16);
    swift_bridgeObjectRetain();
    v18(v16, v17, v4);
    unint64_t v19 = (v8 + v16) & v14;
    unint64_t v20 = (v8 + v17) & v14;
    v18(v19, v20, v4);
    uint64_t v21 = (void *)((v9 + v20) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v22 = v21[1];
    uint64_t v23 = (void *)((v9 + v19) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v23 = *v21;
    v23[1] = v22;
  }
  swift_retain();
  return v3;
}

uint64_t sub_1A0894810(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = a1 & 0xFFFFFFFFFFFFFFF8;
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  uint64_t v7 = v5 + 8;
  uint64_t v8 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v9 = (v3 + v8 + 24) & ~v8;
  v6(v9, v4);
  v6((*(void *)(v7 + 56) + v8 + v9) & ~v8, v4);

  return swift_release();
}

unint64_t sub_1A08948D4(unint64_t a1, unint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  unint64_t v4 = a1 & 0xFFFFFFFFFFFFFFF8;
  *(void *)(v4 + _Block_object_dispose(&a9, 8) = *(void *)((a2 & 0xFFFFFFFFFFFFFFF8) + 8);
  *(void *)(v4 + 16) = *(void *)((a2 & 0xFFFFFFFFFFFFFFF8) + 16);
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void (**)(unint64_t, unint64_t, uint64_t))(*(void *)(v5 - 8) + 16);
  uint64_t v7 = *(void *)(v5 - 8) + 16;
  uint64_t v8 = *(unsigned __int8 *)(*(void *)(v5 - 8) + 80);
  unint64_t v9 = (v8 + 24 + (a1 & 0xFFFFFFFFFFFFFFF8)) & ~v8;
  unint64_t v10 = (v8 + 24 + (a2 & 0xFFFFFFFFFFFFFFF8)) & ~v8;
  swift_bridgeObjectRetain();
  v6(v9, v10, v5);
  uint64_t v11 = *(void *)(v7 + 48);
  unint64_t v12 = (v11 + v8 + v9) & ~v8;
  unint64_t v13 = (v11 + v8 + v10) & ~v8;
  v6(v12, v13, v5);
  uint64_t v14 = (uint64_t *)((v11 + 7 + v13) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  unint64_t v17 = (void *)((v11 + 7 + v12) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v17 = v16;
  v17[1] = v15;
  swift_retain();
  return a1;
}

unint64_t sub_1A08949D4(unint64_t a1, unint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  unint64_t v5 = a1 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v6 = a2 & 0xFFFFFFFFFFFFFFF8;
  *(void *)(v5 + _Block_object_dispose(&a9, 8) = *(void *)((a2 & 0xFFFFFFFFFFFFFFF8) + 8);
  *(void *)(v5 + 16) = *(void *)((a2 & 0xFFFFFFFFFFFFFFF8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a3 + 16);
  uint64_t v8 = *(void *)(v7 - 8);
  unint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 24);
  uint64_t v10 = v8 + 24;
  uint64_t v11 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v12 = (v11 + 24 + v5) & ~v11;
  uint64_t v13 = (v11 + 24 + v6) & ~v11;
  v9(v12, v13, v7);
  uint64_t v14 = *(void *)(v10 + 40);
  uint64_t v15 = (v14 + v11 + v12) & ~v11;
  uint64_t v16 = (v14 + v11 + v13) & ~v11;
  v9(v15, v16, v7);
  unint64_t v17 = (void *)((v14 + 7 + v15) & 0xFFFFFFFFFFFFFFF8);
  long long v18 = (void *)((v14 + 7 + v16) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v19 = v18[1];
  *unint64_t v17 = *v18;
  v17[1] = v19;
  swift_retain();
  swift_release();
  return a1;
}

unint64_t sub_1A0894AF0(unint64_t a1, unint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_OWORD *)((a1 & 0xFFFFFFFFFFFFFFF8) + _Block_object_dispose(&a9, 8) = *(_OWORD *)((a2 & 0xFFFFFFFFFFFFFFF8) + 8);
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  unint64_t v6 = *(void (**)(unint64_t, unint64_t, uint64_t))(v5 + 32);
  uint64_t v7 = v5 + 32;
  uint64_t v8 = *(unsigned __int8 *)(v5 + 80);
  unint64_t v9 = (v8 + 24 + (a1 & 0xFFFFFFFFFFFFFFF8)) & ~v8;
  unint64_t v10 = (v8 + 24 + (a2 & 0xFFFFFFFFFFFFFFF8)) & ~v8;
  v6(v9, v10, v4);
  uint64_t v11 = *(void *)(v7 + 32);
  unint64_t v12 = (v11 + v8 + v9) & ~v8;
  unint64_t v13 = (v11 + v8 + v10) & ~v8;
  v6(v12, v13, v4);
  *(_OWORD *)((v11 + 7 + v12) & 0xFFFFFFFFFFFFFFF_Block_object_dispose(&a9, 8) = *(_OWORD *)((v11 + 7 + v13) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

unint64_t sub_1A0894BE0(unint64_t a1, unint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  unint64_t v5 = a1 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v6 = a2 & 0xFFFFFFFFFFFFFFF8;
  *(void *)(v5 + _Block_object_dispose(&a9, 8) = *(void *)((a2 & 0xFFFFFFFFFFFFFFF8) + 8);
  *(void *)(v5 + 16) = *(void *)((a2 & 0xFFFFFFFFFFFFFFF8) + 16);
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a3 + 16);
  uint64_t v8 = *(void *)(v7 - 8);
  unint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 40);
  uint64_t v10 = v8 + 40;
  uint64_t v11 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v12 = (v11 + 24 + v5) & ~v11;
  uint64_t v13 = (v11 + 24 + v6) & ~v11;
  v9(v12, v13, v7);
  uint64_t v14 = *(void *)(v10 + 24);
  uint64_t v15 = (v14 + v11 + v12) & ~v11;
  uint64_t v16 = (v14 + v11 + v13) & ~v11;
  v9(v15, v16, v7);
  *(_OWORD *)((v14 + 7 + v15) & 0xFFFFFFFFFFFFFFF_Block_object_dispose(&a9, 8) = *(_OWORD *)((v14 + 7 + v16) & 0xFFFFFFFFFFFFFFF8);
  swift_release();
  return a1;
}

uint64_t sub_1A0894CEC(unint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(unsigned __int8 *)(v4 + 80);
  if (v5 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  if (v8 < a2)
  {
    uint64_t v7 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
    unint64_t v9 = ((v7 + ((v7 + v6 + ((v6 + 24) & ~v6)) & ~v6) + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
    unsigned int v10 = a2 - v8;
    uint64_t v11 = v9 & 0xFFFFFFF8;
    if ((v9 & 0xFFFFFFF8) != 0) {
      unsigned int v12 = 2;
    }
    else {
      unsigned int v12 = v10 + 1;
    }
    if (v12 >= 0x10000) {
      unsigned int v13 = 4;
    }
    else {
      unsigned int v13 = 2;
    }
    if (v12 < 0x100) {
      unsigned int v13 = 1;
    }
    if (v12 >= 2) {
      uint64_t v14 = v13;
    }
    else {
      uint64_t v14 = 0;
    }
    switch(v14)
    {
      case 1:
        int v15 = *(unsigned __int8 *)(a1 + v9);
        if (!v15) {
          break;
        }
        goto LABEL_22;
      case 2:
        int v15 = *(unsigned __int16 *)(a1 + v9);
        if (v15) {
          goto LABEL_22;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x1A0894E54);
      case 4:
        int v15 = *(_DWORD *)(a1 + v9);
        if (!v15) {
          break;
        }
LABEL_22:
        int v17 = v15 - 1;
        if (v11)
        {
          int v17 = 0;
          LODWORD(v11) = *(_DWORD *)a1;
        }
        return v8 + (v11 | v17) + 1;
      default:
        break;
    }
  }
  unint64_t v18 = a1 & 0xFFFFFFFFFFFFFFF8;
  if ((v5 & 0x80000000) != 0) {
    return (*(uint64_t (**)(unint64_t))(v4 + 48))((v18 + v6 + 24) & ~v6);
  }
  unint64_t v19 = *(void *)(v18 + 16);
  if (v19 >= 0xFFFFFFFF) {
    LODWORD(v19) = -1;
  }
  return (v19 + 1);
}

void sub_1A0894E68(unint64_t a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(unsigned __int8 *)(v6 + 80);
  size_t v10 = ((*(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64)
        + ((*(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64) + v9 + ((v9 + 24) & ~v9)) & ~v9)
        + 7) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  if (v8 >= a3)
  {
    int v14 = 0;
    int v15 = a2 - v8;
    if (a2 <= v8)
    {
LABEL_17:
      switch(v14)
      {
        case 1:
          *(unsigned char *)(a1 + v10) = 0;
          if (!a2) {
            return;
          }
          goto LABEL_30;
        case 2:
          *(_WORD *)(a1 + v10) = 0;
          if (!a2) {
            return;
          }
          goto LABEL_30;
        case 3:
          goto LABEL_42;
        case 4:
          *(_DWORD *)(a1 + v10) = 0;
          goto LABEL_29;
        default:
LABEL_29:
          if (a2)
          {
LABEL_30:
            unint64_t v18 = a1 & 0xFFFFFFFFFFFFFFF8;
            if ((v7 & 0x80000000) != 0)
            {
              unint64_t v19 = *(void (**)(unint64_t))(v6 + 56);
              v19((v18 + v9 + 24) & ~v9);
            }
            else if ((a2 & 0x80000000) != 0)
            {
              *(void *)(v18 + _Block_object_dispose(&a9, 8) = a2 ^ 0x80000000;
              *(void *)(v18 + 16) = 0;
            }
            else
            {
              *(void *)(v18 + 16) = a2 - 1;
            }
          }
          break;
      }
      return;
    }
  }
  else
  {
    unsigned int v11 = a3 - v8;
    if (((*(_DWORD *)(*(void *)(*(void *)(a4 + 16) - 8) + 64)
         + ((*(_DWORD *)(*(void *)(*(void *)(a4 + 16) - 8) + 64) + v9 + ((v9 + 24) & ~v9)) & ~v9)
         + 7) & 0xFFFFFFF8) == 0xFFFFFFF0)
      unsigned int v12 = v11 + 1;
    else {
      unsigned int v12 = 2;
    }
    if (v12 >= 0x10000) {
      int v13 = 4;
    }
    else {
      int v13 = 2;
    }
    if (v12 < 0x100) {
      int v13 = 1;
    }
    if (v12 >= 2) {
      int v14 = v13;
    }
    else {
      int v14 = 0;
    }
    int v15 = a2 - v8;
    if (a2 <= v8) {
      goto LABEL_17;
    }
  }
  if (((*(_DWORD *)(*(void *)(*(void *)(a4 + 16) - 8) + 64)
       + ((*(_DWORD *)(*(void *)(*(void *)(a4 + 16) - 8) + 64) + v9 + ((v9 + 24) & ~v9)) & ~v9)
       + 7) & 0xFFFFFFF8) == 0xFFFFFFF0)
    int v16 = v15;
  else {
    int v16 = 1;
  }
  if (((*(_DWORD *)(*(void *)(*(void *)(a4 + 16) - 8) + 64)
       + ((*(_DWORD *)(*(void *)(*(void *)(a4 + 16) - 8) + 64) + v9 + ((v9 + 24) & ~v9)) & ~v9)
       + 7) & 0xFFFFFFF8) != 0xFFFFFFF0)
  {
    int v17 = ~v8 + a2;
    bzero((void *)a1, v10);
    *(_DWORD *)a1 = v17;
  }
  switch(v14)
  {
    case 1:
      *(unsigned char *)(a1 + v10) = v16;
      break;
    case 2:
      *(_WORD *)(a1 + v10) = v16;
      break;
    case 3:
LABEL_42:
      __break(1u);
      JUMPOUT(0x1A089506CLL);
    case 4:
      *(_DWORD *)(a1 + v10) = v16;
      break;
    default:
      return;
  }
}

uint64_t type metadata accessor for PrototypingSetting()
{
  return sub_1A0780100();
}

uint64_t sub_1A08950AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F41863F8](a1, a2, a3, 8);
}

unsigned char *sub_1A08950B4(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A0895180);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

double sub_1A08951A8(double a1)
{
  uint64_t v2 = (void *)sub_1A09F3DE8();
  int v3 = (void *)sub_1A09F3DE8();
  id v4 = (id)IMGetCachedDomainValueForKey();

  if (v4)
  {
    sub_1A09F4588();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v8, 0, sizeof(v8));
  }
  sub_1A0784BA0((uint64_t)v8, (uint64_t)v9);
  if (v10)
  {
    sub_1A08847C8();
    if (swift_dynamicCast())
    {
      objc_msgSend(v7, sel_doubleValue);
      a1 = v5;
    }
  }
  else
  {
    sub_1A0783C7C((uint64_t)v9);
  }
  return a1;
}

uint64_t sub_1A08952B0()
{
  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_1A08952C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void))(*(void *)(v5 + 24) + 8))(a1, a2, a3, a4, a5, *(void *)(v5 + 16));
}

ValueMetadata *type metadata accessor for RecoveredMessagesForChatsBroadcast()
{
  return &type metadata for RecoveredMessagesForChatsBroadcast;
}

uint64_t sub_1A0895308(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v12 = a4;
  uint64_t v7 = sub_1A07856F8(&qword_1E94F9C08);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A086F45C(a1, a1[3]);
  sub_1A0895BC4();
  sub_1A09F4CC8();
  uint64_t v15 = a2;
  char v14 = 0;
  sub_1A07856F8(&qword_1EB4A5610);
  sub_1A0879F5C(&qword_1E94F9140);
  sub_1A09F4A78();
  if (!v4)
  {
    char v13 = 1;
    sub_1A09F4A28();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_1A08954C0()
{
  if (*v0) {
    return 0x44497972657571;
  }
  else {
    return 0x4449554774616863;
  }
}

uint64_t sub_1A0895500@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A0895880(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A0895528(uint64_t a1)
{
  unint64_t v2 = sub_1A0895BC4();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A0895564(uint64_t a1)
{
  unint64_t v2 = sub_1A0895BC4();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A08955A0()
{
  uint64_t v0 = qword_1E94F9BC8;
  swift_bridgeObjectRetain();
  return v0;
}

void sub_1A08955D8(void *a1)
{
  unint64_t v2 = (void *)sub_1A09F4068();
  id v3 = (id)sub_1A09F3DE8();
  objc_msgSend(a1, sel_recoveredMessagesWithChatGUIDs_queryID_, v2, v3);
}

uint64_t sub_1A0895660@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1A0895980(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
  }
  return result;
}

uint64_t sub_1A0895690(void *a1)
{
  return sub_1A0895308(a1, *v1, v1[1], v1[2]);
}

unint64_t sub_1A08956B0(uint64_t a1)
{
  *(void *)(a1 + _Block_object_dispose(&a9, 8) = sub_1A08956E0();
  unint64_t result = sub_1A0895734();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1A08956E0()
{
  unint64_t result = qword_1E94F9BD8;
  if (!qword_1E94F9BD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94F9BD8);
  }
  return result;
}

unint64_t sub_1A0895734()
{
  unint64_t result = qword_1E94F9BE0;
  if (!qword_1E94F9BE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94F9BE0);
  }
  return result;
}

unint64_t sub_1A0895788(uint64_t a1)
{
  unint64_t result = sub_1A08957B0();
  *(void *)(a1 + _Block_object_dispose(&a9, 8) = result;
  return result;
}

unint64_t sub_1A08957B0()
{
  unint64_t result = qword_1E94F9BE8;
  if (!qword_1E94F9BE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94F9BE8);
  }
  return result;
}

unint64_t sub_1A0895804(uint64_t a1)
{
  unint64_t result = sub_1A089582C();
  *(void *)(a1 + _Block_object_dispose(&a9, 8) = result;
  return result;
}

unint64_t sub_1A089582C()
{
  unint64_t result = qword_1E94F9BF0;
  if (!qword_1E94F9BF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94F9BF0);
  }
  return result;
}

uint64_t sub_1A0895880(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x4449554774616863 && a2 == 0xE900000000000073;
  if (v2 || (sub_1A09F4B28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x44497972657571 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1A09F4B28();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1A0895980(void *a1)
{
  uint64_t v3 = sub_1A07856F8(&qword_1E94F9BF8);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  char v6 = &v9[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = a1[3];
  sub_1A086F45C(a1, v7);
  sub_1A0895BC4();
  sub_1A09F4CA8();
  if (v1)
  {
    _s17IMSharedUtilities29RemoteIntentBroadcastEncodingVwxx_0((uint64_t)a1);
  }
  else
  {
    sub_1A07856F8(&qword_1EB4A5610);
    v9[7] = 0;
    sub_1A0879F5C(&qword_1E94F9128);
    sub_1A09F4928();
    uint64_t v7 = v10;
    v9[6] = 1;
    swift_bridgeObjectRetain();
    sub_1A09F48D8();
    (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
    swift_bridgeObjectRetain();
    _s17IMSharedUtilities29RemoteIntentBroadcastEncodingVwxx_0((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v7;
}

unint64_t sub_1A0895BC4()
{
  unint64_t result = qword_1E94F9C00;
  if (!qword_1E94F9C00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94F9C00);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for RecoveredMessagesForChatsBroadcast.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A0895CE4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RecoveredMessagesForChatsBroadcast.CodingKeys()
{
  return &type metadata for RecoveredMessagesForChatsBroadcast.CodingKeys;
}

unint64_t sub_1A0895D20()
{
  unint64_t result = qword_1E94F9C10;
  if (!qword_1E94F9C10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94F9C10);
  }
  return result;
}

unint64_t sub_1A0895D78()
{
  unint64_t result = qword_1E94F9C18;
  if (!qword_1E94F9C18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94F9C18);
  }
  return result;
}

unint64_t sub_1A0895DD0()
{
  unint64_t result = qword_1E94F9C20;
  if (!qword_1E94F9C20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94F9C20);
  }
  return result;
}

uint64_t sub_1A0895E24()
{
  uint64_t v0 = sub_1A09F39E8();
  sub_1A078D848(v0, qword_1E9522590);
  sub_1A078510C(v0, (uint64_t)qword_1E9522590);
  return sub_1A09F39D8();
}

uint64_t sub_1A0895EA4()
{
  sub_1A07856F8(&qword_1E94F9C48);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1A0A08A20;
  BOOL v2 = (void *)*MEMORY[0x1E4F2FF10];
  *(void *)(inited + 32) = *MEMORY[0x1E4F2FF10];
  *(void *)(inited + 64) = MEMORY[0x1E4FBB390];
  *(unsigned char *)(inited + 40) = 0;
  id v3 = v2;
  sub_1A08D7814(inited);
  type metadata accessor for CFString(0);
  sub_1A0897DD8(&qword_1E94F8800, type metadata accessor for CFString);
  CFDictionaryRef v4 = (const __CFDictionary *)sub_1A09F3CE8();
  swift_bridgeObjectRelease();
  CFDictionaryRef v5 = CGImageSourceCopyProperties(v0, v4);

  if (v5)
  {
    sub_1A09F3CF8();
  }
  return 0;
}

uint64_t sub_1A08963B4(uint64_t a1)
{
  uint64_t v2 = sub_1A09F3B08();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  CFDictionaryRef v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1A07856F8(&qword_1E94F9C40);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1A09F3B28();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](v9);
  char v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v15 = (char *)&v21 - v14;
  uint64_t v16 = sub_1A09F33A8();
  MEMORY[0x1F4188790](v16);
  (*(void (**)(char *, uint64_t))(v18 + 16))((char *)&v21 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  sub_1A09F3B18();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_1A0784C08((uint64_t)v8, &qword_1E94F9C40);
    char v19 = 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v15, v8, v9);
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v13, v15, v9);
    sub_1A09F3AF8();
    char v19 = sub_1A09F3AE8();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v9);
  }
  return v19 & 1;
}

uint64_t sub_1A08966B8(uint64_t a1)
{
  sub_1A07856F8(&qword_1E94F9C48);
  uint64_t inited = swift_initStackObject();
  uint64_t v3 = (void **)MEMORY[0x1E4F2FF50];
  *(_OWORD *)(inited + 16) = xmmword_1A0A0A440;
  uint64_t v4 = *v3;
  *(void *)(inited + 32) = v4;
  uint64_t v5 = MEMORY[0x1E4FBB390];
  *(unsigned char *)(inited + 40) = 1;
  uint64_t v6 = (void *)*MEMORY[0x1E4F2FE90];
  *(void *)(inited + 64) = v5;
  *(void *)(inited + 72) = v6;
  *(unsigned char *)(inited + 80) = 1;
  uint64_t v7 = (void *)*MEMORY[0x1E4F2FF70];
  *(void *)(inited + 104) = v5;
  *(void *)(inited + 112) = v7;
  id v8 = v4;
  id v9 = v6;
  id v10 = v7;
  sub_1A09F38F8();
  uint64_t v11 = sub_1A09F3DE8();
  swift_bridgeObjectRelease();
  type metadata accessor for CFString(0);
  uint64_t v12 = (void **)MEMORY[0x1E4F2FE88];
  *(void *)(inited + 120) = v11;
  char v13 = *v12;
  *(void *)(inited + 144) = v14;
  *(void *)(inited + 152) = v13;
  *(void *)(inited + 184) = v5;
  *(unsigned char *)(inited + 160) = 1;
  id v15 = v13;
  sub_1A08D7814(inited);
  CFURLRef v16 = (const __CFURL *)sub_1A09F3308();
  sub_1A0897DD8(&qword_1E94F8800, type metadata accessor for CFString);
  CFDictionaryRef v17 = (const __CFDictionary *)sub_1A09F3CE8();
  swift_bridgeObjectRelease();
  CGImageSourceRef v18 = CGImageSourceCreateWithURL(v16, v17);

  if (!v18)
  {
    if (qword_1E94F84E8 != -1) {
      swift_once();
    }
    uint64_t v25 = sub_1A09F39E8();
    sub_1A078510C(v25, (uint64_t)qword_1E9522590);
    uint64_t v26 = sub_1A09F33A8();
    uint64_t v27 = *(void *)(v26 - 8);
    MEMORY[0x1F4188790](v26);
    uint64_t v29 = (char *)v38 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, uint64_t, uint64_t))(v27 + 16))(v29, a1, v26);
    uint64_t v30 = sub_1A09F39C8();
    os_log_type_t v31 = sub_1A09F4378();
    if (os_log_type_enabled(v30, v31))
    {
      uint64_t v32 = swift_slowAlloc();
      v38[0] = v38;
      uint64_t v33 = (uint8_t *)v32;
      uint64_t v34 = swift_slowAlloc();
      uint64_t v39 = v34;
      *(_DWORD *)uint64_t v33 = 136315138;
      sub_1A0897D8C();
      uint64_t v35 = sub_1A09F4AE8();
      v38[1] = sub_1A0785144(v35, v36, &v39);
      sub_1A09F4528();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v27 + 8))(v29, v26);
      _os_log_impl(&dword_1A0772000, v30, v31, "Unable to create CGImageSource with URL: %s", v33, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1A6228C20](v34, -1, -1);
      MEMORY[0x1A6228C20](v33, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v27 + 8))(v29, v26);
    }

    goto LABEL_15;
  }
  if (sub_1A09F4398() < 2)
  {

LABEL_15:
    char v24 = 0;
    return v24 & 1;
  }
  char v19 = sub_1A0895EA4();
  if (qword_1E94F84E8 != -1) {
    swift_once();
  }
  uint64_t v20 = sub_1A09F39E8();
  sub_1A078510C(v20, (uint64_t)qword_1E9522590);
  uint64_t v21 = sub_1A09F39C8();
  os_log_type_t v22 = sub_1A09F4358();
  if (os_log_type_enabled(v21, v22))
  {
    uint64_t v23 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v23 = 67109120;
    LODWORD(v39) = v19 & 1;
    sub_1A09F4528();
    _os_log_impl(&dword_1A0772000, v21, v22, "Frame count > 1, isSpacial: %{BOOL}d", v23, 8u);
    MEMORY[0x1A6228C20](v23, -1, -1);
  }

  char v24 = v19 ^ 1;
  return v24 & 1;
}

uint64_t sub_1A0896BA4(uint64_t a1)
{
  uint64_t v2 = sub_1A07856F8(&qword_1E94F9C28);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v121 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1A09F39B8();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v5);
  id v9 = (char *)&v121 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x1F4188790](v7);
  uint64_t v12 = (char *)&v121 - v11;
  uint64_t v13 = MEMORY[0x1F4188790](v10);
  v124 = (char *)&v121 - v14;
  uint64_t v15 = MEMORY[0x1F4188790](v13);
  v125 = (char *)&v121 - v16;
  uint64_t v17 = MEMORY[0x1F4188790](v15);
  v126 = (char *)&v121 - v18;
  uint64_t v19 = MEMORY[0x1F4188790](v17);
  uint64_t v21 = (char *)&v121 - v20;
  uint64_t v22 = MEMORY[0x1F4188790](v19);
  char v24 = (char *)&v121 - v23;
  MEMORY[0x1F4188790](v22);
  v128 = (char *)&v121 - v25;
  uint64_t v26 = sub_1A09F32C8();
  uint64_t v28 = HIBYTE(v27) & 0xF;
  if ((v27 & 0x2000000000000000) == 0) {
    uint64_t v28 = v26 & 0xFFFFFFFFFFFFLL;
  }
  if (v28)
  {
    sub_1A09F3938();
    sub_1A09F3908();
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1, 1, v5);
    swift_bridgeObjectRelease();
  }
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_1A0784C08((uint64_t)v4, &qword_1E94F9C28);
    if (qword_1E94F84E8 != -1) {
      swift_once();
    }
    uint64_t v29 = sub_1A09F39E8();
    sub_1A078510C(v29, (uint64_t)qword_1E9522590);
    uint64_t v30 = sub_1A09F33A8();
    uint64_t v31 = *(void *)(v30 - 8);
    MEMORY[0x1F4188790](v30);
    uint64_t v33 = (char *)&v121 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, uint64_t, uint64_t))(v31 + 16))(v33, a1, v30);
    uint64_t v34 = sub_1A09F39C8();
    os_log_type_t v35 = sub_1A09F4378();
    if (os_log_type_enabled(v34, v35))
    {
      uint64_t v36 = swift_slowAlloc();
      v128 = (char *)&v121;
      uint64_t v37 = (uint8_t *)v36;
      uint64_t v38 = swift_slowAlloc();
      uint64_t v130 = v38;
      *(_DWORD *)uint64_t v37 = 136315138;
      sub_1A0897D8C();
      uint64_t v39 = sub_1A09F4AE8();
      uint64_t v129 = sub_1A0785144(v39, v40, &v130);
      sub_1A09F4528();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v31 + 8))(v33, v30);
      _os_log_impl(&dword_1A0772000, v34, v35, "Unable to create UTType with URL: %s", v37, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1A6228C20](v38, -1, -1);
      MEMORY[0x1A6228C20](v37, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v31 + 8))(v33, v30);
    }

LABEL_29:
    char v82 = 0;
    return v82 & 1;
  }
  v123 = v12;
  uint64_t v41 = v128;
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v128, v4, v5);
  sub_1A09F38F8();
  uint64_t v42 = v5;
  uint64_t v43 = (__CFString *)sub_1A09F3DE8();
  swift_bridgeObjectRelease();
  BOOL IsSupportedAnimatedImage = IMUTTypeIsSupportedAnimatedImage(v43);

  uint64_t v127 = v5;
  if (!IsSupportedAnimatedImage)
  {
    if (qword_1E94F84E8 != -1) {
      swift_once();
    }
    uint64_t v57 = sub_1A09F39E8();
    sub_1A078510C(v57, (uint64_t)qword_1E9522590);
    uint64_t v59 = v127;
    uint64_t v58 = v128;
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v9, v128, v127);
    uint64_t v60 = sub_1A09F39C8();
    os_log_type_t v61 = sub_1A09F4358();
    if (os_log_type_enabled(v60, v61))
    {
      uint64_t v62 = (uint8_t *)swift_slowAlloc();
      uint64_t v63 = swift_slowAlloc();
      uint64_t v130 = v63;
      *(_DWORD *)uint64_t v62 = 136315138;
      sub_1A0897DD8(&qword_1E94F9C38, MEMORY[0x1E4FBCEA8]);
      uint64_t v64 = sub_1A09F4AE8();
      uint64_t v129 = sub_1A0785144(v64, v65, &v130);
      sub_1A09F4528();
      swift_bridgeObjectRelease();
      char v66 = *(void (**)(char *, uint64_t))(v6 + 8);
      v66(v9, v59);
      _os_log_impl(&dword_1A0772000, v60, v61, "UTType is not a supported animated image: %s", v62, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1A6228C20](v63, -1, -1);
      MEMORY[0x1A6228C20](v62, -1, -1);

      v66(v128, v59);
    }
    else
    {

      long long v81 = *(void (**)(char *, uint64_t))(v6 + 8);
      v81(v9, v59);
      v81(v58, v59);
    }
    goto LABEL_29;
  }
  uint64_t v122 = a1;
  sub_1A09F3928();
  char v45 = sub_1A09F39A8();
  uint64_t v46 = *(void (**)(char *, uint64_t))(v6 + 8);
  v46(v24, v5);
  uint64_t v47 = v41;
  if (v45)
  {
    if (qword_1E94F84E8 != -1) {
      swift_once();
    }
    uint64_t v48 = sub_1A09F39E8();
    sub_1A078510C(v48, (uint64_t)qword_1E9522590);
    uint64_t v49 = v127;
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v21, v41, v127);
    uint64_t v50 = sub_1A09F39C8();
    os_log_type_t v51 = sub_1A09F4358();
    if (os_log_type_enabled(v50, v51))
    {
      uint64_t v52 = (uint8_t *)swift_slowAlloc();
      uint64_t v53 = swift_slowAlloc();
      uint64_t v130 = v53;
      *(_DWORD *)uint64_t v52 = 136315138;
      sub_1A0897DD8(&qword_1E94F9C38, MEMORY[0x1E4FBCEA8]);
      uint64_t v54 = sub_1A09F4AE8();
      uint64_t v129 = sub_1A0785144(v54, v55, &v130);
      uint64_t v49 = v127;
      sub_1A09F4528();
      swift_bridgeObjectRelease();
      v46(v21, v49);
      _os_log_impl(&dword_1A0772000, v50, v51, "Type conforms to PNG: %s", v52, 0xCu);
      swift_arrayDestroy();
      uint64_t v56 = v53;
      uint64_t v47 = v128;
      MEMORY[0x1A6228C20](v56, -1, -1);
      MEMORY[0x1A6228C20](v52, -1, -1);
    }
    else
    {
      v46(v21, v49);
    }

    char v82 = sub_1A08963B4(v122);
    v46(v47, v49);
    return v82 & 1;
  }
  sub_1A09F3948();
  char v67 = sub_1A09F39A8();
  v46(v24, v42);
  id v68 = (char *)v46;
  if (v67)
  {
    uint64_t v69 = v122;
    if (qword_1E94F84E8 != -1) {
      swift_once();
    }
    uint64_t v70 = sub_1A09F39E8();
    sub_1A078510C(v70, (uint64_t)qword_1E9522590);
    id v72 = v126;
    uint64_t v71 = v127;
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v126, v47, v127);
    uint64_t v73 = sub_1A09F39C8();
    os_log_type_t v74 = sub_1A09F4358();
    if (os_log_type_enabled(v73, v74))
    {
      id v75 = (uint8_t *)swift_slowAlloc();
      uint64_t v76 = swift_slowAlloc();
      uint64_t v130 = v76;
      *(_DWORD *)id v75 = 136315138;
      v125 = v68;
      sub_1A0897DD8(&qword_1E94F9C38, MEMORY[0x1E4FBCEA8]);
      uint64_t v77 = sub_1A09F4AE8();
      uint64_t v129 = sub_1A0785144(v77, v78, &v130);
      id v68 = v125;
      uint64_t v71 = v127;
      sub_1A09F4528();
      swift_bridgeObjectRelease();
      ((void (*)(char *, uint64_t))v68)(v72, v71);
      _os_log_impl(&dword_1A0772000, v73, v74, "Type conforms to WebP: %s", v75, 0xCu);
      swift_arrayDestroy();
      uint64_t v79 = v76;
      uint64_t v47 = v128;
      MEMORY[0x1A6228C20](v79, -1, -1);
      id v80 = v75;
      uint64_t v69 = v122;
      MEMORY[0x1A6228C20](v80, -1, -1);
    }
    else
    {
      ((void (*)(char *, uint64_t))v68)(v72, v71);
    }

    sub_1A09F3948();
    uint64_t v94 = v69;
LABEL_47:
    char v82 = sub_1A08966B8(v94);
    ((void (*)(char *, uint64_t))v68)(v24, v71);
    ((void (*)(char *, uint64_t))v68)(v47, v71);
    return v82 & 1;
  }
  sub_1A09F3968();
  char v84 = sub_1A09F39A8();
  v46(v24, v42);
  if (v84)
  {
    if (qword_1E94F84E8 != -1) {
      swift_once();
    }
    uint64_t v85 = sub_1A09F39E8();
    sub_1A078510C(v85, (uint64_t)qword_1E9522590);
    id v86 = v125;
    uint64_t v71 = v127;
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v125, v47, v127);
    id v87 = sub_1A09F39C8();
    os_log_type_t v88 = sub_1A09F4358();
    if (os_log_type_enabled(v87, v88))
    {
      long long v89 = (uint8_t *)swift_slowAlloc();
      uint64_t v90 = swift_slowAlloc();
      uint64_t v130 = v90;
      *(_DWORD *)long long v89 = 136315138;
      v126 = (char *)(v89 + 4);
      sub_1A0897DD8(&qword_1E94F9C38, MEMORY[0x1E4FBCEA8]);
      uint64_t v91 = sub_1A09F4AE8();
      uint64_t v129 = sub_1A0785144(v91, v92, &v130);
      uint64_t v71 = v127;
      sub_1A09F4528();
      swift_bridgeObjectRelease();
      ((void (*)(char *, uint64_t))v68)(v86, v71);
      _os_log_impl(&dword_1A0772000, v87, v88, "Type conforms to HEICS: %s", v89, 0xCu);
      swift_arrayDestroy();
      uint64_t v93 = v90;
      uint64_t v47 = v128;
      MEMORY[0x1A6228C20](v93, -1, -1);
      MEMORY[0x1A6228C20](v89, -1, -1);
    }
    else
    {
      ((void (*)(char *, uint64_t))v68)(v86, v71);
    }

    uint64_t v108 = v122;
    sub_1A09F3968();
    uint64_t v94 = v108;
    goto LABEL_47;
  }
  sub_1A09F3918();
  char v95 = sub_1A09F39A8();
  v46(v24, v42);
  if ((v95 & 1) == 0)
  {
    if (qword_1E94F84E8 != -1) {
      swift_once();
    }
    uint64_t v109 = sub_1A09F39E8();
    sub_1A078510C(v109, (uint64_t)qword_1E9522590);
    v110 = v123;
    uint64_t v111 = v127;
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v123, v47, v127);
    v112 = sub_1A09F39C8();
    os_log_type_t v113 = sub_1A09F4358();
    if (os_log_type_enabled(v112, v113))
    {
      v114 = (uint8_t *)swift_slowAlloc();
      uint64_t v115 = swift_slowAlloc();
      uint64_t v130 = v115;
      uint64_t v116 = v111;
      *(_DWORD *)v114 = 136315138;
      v125 = v68;
      sub_1A0897DD8(&qword_1E94F9C38, MEMORY[0x1E4FBCEA8]);
      uint64_t v117 = sub_1A09F4AE8();
      uint64_t v129 = sub_1A0785144(v117, v118, &v130);
      sub_1A09F4528();
      swift_bridgeObjectRelease();
      uint64_t v119 = v111;
      v120 = v125;
      ((void (*)(char *, uint64_t))v125)(v110, v119);
      _os_log_impl(&dword_1A0772000, v112, v113, "Not one of our supported types: %s", v114, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1A6228C20](v115, -1, -1);
      MEMORY[0x1A6228C20](v114, -1, -1);

      ((void (*)(char *, uint64_t))v120)(v128, v116);
    }
    else
    {

      ((void (*)(char *, uint64_t))v68)(v110, v111);
      ((void (*)(char *, uint64_t))v68)(v47, v111);
    }
    goto LABEL_29;
  }
  if (qword_1E94F84E8 != -1) {
    swift_once();
  }
  uint64_t v96 = sub_1A09F39E8();
  sub_1A078510C(v96, (uint64_t)qword_1E9522590);
  v97 = v124;
  uint64_t v98 = v47;
  v99 = v47;
  uint64_t v100 = v127;
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v124, v98, v127);
  v101 = sub_1A09F39C8();
  os_log_type_t v102 = sub_1A09F4358();
  if (os_log_type_enabled(v101, v102))
  {
    v103 = (uint8_t *)swift_slowAlloc();
    uint64_t v104 = swift_slowAlloc();
    uint64_t v130 = v104;
    *(_DWORD *)v103 = 136315138;
    v125 = v68;
    sub_1A0897DD8(&qword_1E94F9C38, MEMORY[0x1E4FBCEA8]);
    uint64_t v105 = sub_1A09F4AE8();
    uint64_t v129 = sub_1A0785144(v105, v106, &v130);
    sub_1A09F4528();
    swift_bridgeObjectRelease();
    v107 = v125;
    ((void (*)(char *, uint64_t))v125)(v97, v100);
    _os_log_impl(&dword_1A0772000, v101, v102, "Type conforms to GIF: %s", v103, 0xCu);
    char v82 = 1;
    swift_arrayDestroy();
    MEMORY[0x1A6228C20](v104, -1, -1);
    MEMORY[0x1A6228C20](v103, -1, -1);

    ((void (*)(char *, uint64_t))v107)(v128, v100);
  }
  else
  {

    ((void (*)(char *, uint64_t))v68)(v97, v100);
    ((void (*)(char *, uint64_t))v68)(v99, v100);
    char v82 = 1;
  }
  return v82 & 1;
}

unint64_t sub_1A0897D8C()
{
  unint64_t result = qword_1E94F9C30;
  if (!qword_1E94F9C30)
  {
    sub_1A09F33A8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94F9C30);
  }
  return result;
}

uint64_t sub_1A0897DD8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t destroy for ChatStatusChangedBroadcast()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ChatStatusChangedBroadcast(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + _Block_object_dispose(&a9, 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = v4;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 4_Block_object_dispose(&a9, 8) = v5;
  uint64_t v6 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v6;
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
  *(void *)(a1 + 8_Block_object_dispose(&a9, 8) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ChatStatusChangedBroadcast(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + _Block_object_dispose(&a9, 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 4_Block_object_dispose(&a9, 8) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
  *(void *)(a1 + 8_Block_object_dispose(&a9, 8) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for ChatStatusChangedBroadcast(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(__n128 *)(a1 + 32) = result;
  *(_OWORD *)(a1 + 4_Block_object_dispose(&a9, 8) = v4;
  return result;
}

uint64_t assignWithTake for ChatStatusChangedBroadcast(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + _Block_object_dispose(&a9, 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = v5;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 56);
  *(void *)(a1 + 4_Block_object_dispose(&a9, 8) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v7;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
  *(void *)(a1 + 8_Block_object_dispose(&a9, 8) = *(void *)(a2 + 88);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ChatStatusChangedBroadcast(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 96)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ChatStatusChangedBroadcast(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8_Block_object_dispose(&a9, 8) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = 0u;
    *(_OWORD *)(result + _Block_object_dispose(&a9, 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 96) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + _Block_object_dispose(&a9, 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 96) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ChatStatusChangedBroadcast()
{
  return &type metadata for ChatStatusChangedBroadcast;
}

void sub_1A0898170(void *a1)
{
  uint64_t v3 = *(unsigned __int8 *)(v1 + 32);
  int v4 = *(_DWORD *)(v1 + 80);
  uint64_t v5 = (void *)sub_1A09F3DE8();
  uint64_t v6 = (void *)sub_1A09F3DE8();
  uint64_t v15 = *(void *)(v1 + 40);
  if (v15)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = (void *)sub_1A09F3CE8();
    sub_1A08787A8((uint64_t)&v15);
  }
  else
  {
    uint64_t v7 = 0;
  }
  uint64_t v8 = (void *)sub_1A09F3DE8();
  sub_1A0878700(v1 + 64, (uint64_t)v14);
  sub_1A0878700((uint64_t)v14, (uint64_t)v16);
  if (v16[1]) {
    id v9 = (void *)sub_1A09F3DE8();
  }
  else {
    id v9 = 0;
  }
  uint64_t v13 = *(void *)(v1 + 88);
  if (v13)
  {
    uint64_t v10 = swift_bridgeObjectRetain();
    sub_1A0874020(v10);
    sub_1A08787A8((uint64_t)&v13);
    uint64_t v11 = (void *)sub_1A09F4068();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v11 = 0;
  }
  LODWORD(v12) = v4;
  objc_msgSend(a1, sel_account_chat_style_chatProperties_groupID_chatPersonCentricID_statusChanged_handleInfo_, v5, v6, v3, v7, v8, v9, v12, v11);
}

unint64_t sub_1A08982E8(char a1)
{
  unint64_t result = 0x55746E756F636361;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6E65644974616863;
      break;
    case 2:
      unint64_t result = 0x6C79745374616863;
      break;
    case 3:
      unint64_t result = 0xD000000000000012;
      break;
    case 4:
      unint64_t result = 0x444970756F7267;
      break;
    case 5:
      unint64_t result = 0x65436E6F73726570;
      break;
    case 6:
      unint64_t result = 0x737574617473;
      break;
    case 7:
      unint64_t result = 0x6E49656C646E6168;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A0898420(void *a1)
{
  uint64_t v3 = sub_1A07856F8(&qword_1E94F9CA0);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = &v10[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1A086F45C(a1, a1[3]);
  sub_1A089926C();
  sub_1A09F4CC8();
  v10[15] = 0;
  sub_1A09F4A28();
  if (!v1)
  {
    v10[14] = 1;
    sub_1A09F4A28();
    v10[13] = 2;
    sub_1A09F4AA8();
    uint64_t v7 = swift_bridgeObjectRetain();
    sub_1A094F8C0(v7, 3);
    swift_bridgeObjectRelease();
    v10[12] = 4;
    sub_1A09F4A28();
    v10[11] = 5;
    sub_1A09F4978();
    v10[10] = 6;
    sub_1A09F4A88();
    uint64_t v8 = swift_bridgeObjectRetain();
    sub_1A094FB44(v8, 7);
    swift_bridgeObjectRelease();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_1A0898678()
{
  return sub_1A08982E8(*v0);
}

uint64_t sub_1A0898680@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A08989DC(a1, a2);
  *a3 = result;
  return result;
}

void sub_1A08986A8(unsigned char *a1@<X8>)
{
  *a1 = 8;
}

uint64_t sub_1A08986B4(uint64_t a1)
{
  unint64_t v2 = sub_1A089926C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A08986F0(uint64_t a1)
{
  unint64_t v2 = sub_1A089926C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A089872C()
{
  uint64_t v0 = qword_1E94F9C60;
  swift_bridgeObjectRetain();
  return v0;
}

void sub_1A0898764(void *a1)
{
}

double sub_1A08987A8@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  sub_1A0898DB4(a1, (uint64_t *)v8);
  if (!v2)
  {
    long long v5 = v8[3];
    a2[2] = v8[2];
    a2[3] = v5;
    long long v6 = v8[5];
    a2[4] = v8[4];
    a2[5] = v6;
    double result = *(double *)v8;
    long long v7 = v8[1];
    *a2 = v8[0];
    a2[1] = v7;
  }
  return result;
}

uint64_t sub_1A08987F4(void *a1)
{
  return sub_1A0898420(a1);
}

unint64_t sub_1A089880C(uint64_t a1)
{
  *(void *)(a1 + _Block_object_dispose(&a9, 8) = sub_1A089883C();
  unint64_t result = sub_1A0898890();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1A089883C()
{
  unint64_t result = qword_1E94F9C70;
  if (!qword_1E94F9C70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94F9C70);
  }
  return result;
}

unint64_t sub_1A0898890()
{
  unint64_t result = qword_1E94F9C78;
  if (!qword_1E94F9C78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94F9C78);
  }
  return result;
}

unint64_t sub_1A08988E4(uint64_t a1)
{
  unint64_t result = sub_1A089890C();
  *(void *)(a1 + _Block_object_dispose(&a9, 8) = result;
  return result;
}

unint64_t sub_1A089890C()
{
  unint64_t result = qword_1E94F9C80;
  if (!qword_1E94F9C80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94F9C80);
  }
  return result;
}

unint64_t sub_1A0898960(uint64_t a1)
{
  unint64_t result = sub_1A0898988();
  *(void *)(a1 + _Block_object_dispose(&a9, 8) = result;
  return result;
}

unint64_t sub_1A0898988()
{
  unint64_t result = qword_1E94F9C88;
  if (!qword_1E94F9C88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94F9C88);
  }
  return result;
}

uint64_t sub_1A08989DC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x55746E756F636361 && a2 == 0xEF4449657571696ELL;
  if (v2 || (sub_1A09F4B28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E65644974616863 && a2 == 0xEE00726569666974 || (sub_1A09F4B28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6C79745374616863 && a2 == 0xE900000000000065 || (sub_1A09F4B28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001A0A31320 || (sub_1A09F4B28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x444970756F7267 && a2 == 0xE700000000000000 || (sub_1A09F4B28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x65436E6F73726570 && a2 == 0xEF4449636972746ELL || (sub_1A09F4B28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x737574617473 && a2 == 0xE600000000000000 || (sub_1A09F4B28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x6E49656C646E6168 && a2 == 0xEE00617461446F66)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else
  {
    char v6 = sub_1A09F4B28();
    swift_bridgeObjectRelease();
    if (v6) {
      return 7;
    }
    else {
      return 8;
    }
  }
}

uint64_t sub_1A0898DB4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = sub_1A07856F8(&qword_1E94F9C90);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A086F45C(a1, a1[3]);
  sub_1A089926C();
  sub_1A09F4CA8();
  if (v2)
  {
    _s17IMSharedUtilities29RemoteIntentBroadcastEncodingVwxx_0((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    char v44 = 0;
    uint64_t v9 = sub_1A09F48D8();
    uint64_t v11 = v10;
    uint64_t v38 = v9;
    char v43 = 1;
    swift_bridgeObjectRetain();
    uint64_t v12 = sub_1A09F48D8();
    uint64_t v14 = v13;
    uint64_t v37 = v12;
    char v42 = 2;
    swift_bridgeObjectRetain();
    int v36 = sub_1A09F4958();
    uint64_t v15 = sub_1A094C46C(3);
    uint64_t v34 = a2;
    uint64_t v35 = v15;
    char v41 = 4;
    swift_bridgeObjectRetain();
    uint64_t v16 = sub_1A09F48D8();
    uint64_t v18 = v17;
    uint64_t v32 = v16;
    uint64_t v33 = v14;
    char v40 = 5;
    swift_bridgeObjectRetain();
    uint64_t v19 = sub_1A09F4828();
    uint64_t v21 = v20;
    uint64_t v31 = v19;
    char v39 = 6;
    swift_bridgeObjectRetain();
    int v30 = sub_1A09F4938();
    uint64_t v22 = sub_1A094C6E8(7);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    _s17IMSharedUtilities29RemoteIntentBroadcastEncodingVwxx_0((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v23 = v35;
    swift_bridgeObjectRelease();
    uint64_t v24 = v33;
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v26 = v34;
    *uint64_t v34 = v38;
    v26[1] = v11;
    v26[2] = v37;
    uint64_t v26[3] = v24;
    *((unsigned char *)v26 + 32) = v36;
    uint64_t v27 = v32;
    v26[5] = v23;
    v26[6] = v27;
    uint64_t v28 = v31;
    v26[7] = v18;
    v26[8] = v28;
    v26[9] = v21;
    *((_DWORD *)v26 + 20) = v30;
    v26[11] = v22;
  }
  return result;
}

unint64_t sub_1A089926C()
{
  unint64_t result = qword_1E94F9C98;
  if (!qword_1E94F9C98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94F9C98);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for ChatStatusChangedBroadcast.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF9) {
    goto LABEL_17;
  }
  if (a2 + 7 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 7) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 7;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 7;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 7;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 8;
  int v8 = v6 - 8;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for ChatStatusChangedBroadcast.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *unint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A089941CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ChatStatusChangedBroadcast.CodingKeys()
{
  return &type metadata for ChatStatusChangedBroadcast.CodingKeys;
}

unint64_t sub_1A0899458()
{
  unint64_t result = qword_1E94F9CA8;
  if (!qword_1E94F9CA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94F9CA8);
  }
  return result;
}

unint64_t sub_1A08994B0()
{
  unint64_t result = qword_1E94F9CB0;
  if (!qword_1E94F9CB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94F9CB0);
  }
  return result;
}

unint64_t sub_1A0899508()
{
  unint64_t result = qword_1E94F9CB8;
  if (!qword_1E94F9CB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94F9CB8);
  }
  return result;
}

void *sub_1A0899560(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for ChatUpdatedBroadcast(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for ChatUpdatedBroadcast(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + _Block_object_dispose(&a9, 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for ChatUpdatedBroadcast()
{
  return &type metadata for ChatUpdatedBroadcast;
}

uint64_t sub_1A0899660(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v11[0] = a4;
  uint64_t v6 = sub_1A07856F8(&qword_1E94F9D10);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A086F45C(a1, a1[3]);
  sub_1A0899F0C();
  sub_1A09F4CC8();
  char v13 = 0;
  sub_1A09F4A28();
  if (!v4)
  {
    v11[1] = v11[0];
    char v12 = 1;
    sub_1A07856F8(&qword_1E94F9D00);
    sub_1A0899F60(&qword_1E94F9D18);
    sub_1A09F4A78();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1A0899814()
{
  return 0xD000000000000014;
}

uint64_t sub_1A0899844@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A0899BE0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A089986C(uint64_t a1)
{
  unint64_t v2 = sub_1A0899F0C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A08998A8(uint64_t a1)
{
  unint64_t v2 = sub_1A0899F0C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A08998E4()
{
  uint64_t v0 = *(void *)aChatupdated;
  swift_bridgeObjectRetain();
  return v0;
}

void sub_1A089991C(void *a1)
{
  unint64_t v2 = (void *)sub_1A09F3DE8();
  swift_bridgeObjectRetain();
  id v3 = (id)sub_1A09F3CE8();
  swift_bridgeObjectRelease();
  objc_msgSend(a1, sel_chat_updated_, v2, v3);
}

uint64_t sub_1A08999C0@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1A0899CCC(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
  }
  return result;
}

uint64_t sub_1A08999F0(void *a1)
{
  return sub_1A0899660(a1, *v1, v1[1], v1[2]);
}

unint64_t sub_1A0899A10(uint64_t a1)
{
  *(void *)(a1 + _Block_object_dispose(&a9, 8) = sub_1A0899A40();
  unint64_t result = sub_1A0899A94();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1A0899A40()
{
  unint64_t result = qword_1E94F9CD0;
  if (!qword_1E94F9CD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94F9CD0);
  }
  return result;
}

unint64_t sub_1A0899A94()
{
  unint64_t result = qword_1E94F9CD8;
  if (!qword_1E94F9CD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94F9CD8);
  }
  return result;
}

unint64_t sub_1A0899AE8(uint64_t a1)
{
  unint64_t result = sub_1A0899B10();
  *(void *)(a1 + _Block_object_dispose(&a9, 8) = result;
  return result;
}

unint64_t sub_1A0899B10()
{
  unint64_t result = qword_1E94F9CE0;
  if (!qword_1E94F9CE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94F9CE0);
  }
  return result;
}

unint64_t sub_1A0899B64(uint64_t a1)
{
  unint64_t result = sub_1A0899B8C();
  *(void *)(a1 + _Block_object_dispose(&a9, 8) = result;
  return result;
}

unint64_t sub_1A0899B8C()
{
  unint64_t result = qword_1E94F9CE8;
  if (!qword_1E94F9CE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94F9CE8);
  }
  return result;
}

uint64_t sub_1A0899BE0(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000014 && a2 == 0x80000001A0A31C70 || (sub_1A09F4B28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001A0A31C90)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v5 = sub_1A09F4B28();
    swift_bridgeObjectRelease();
    if (v5) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1A0899CCC(void *a1)
{
  uint64_t v3 = sub_1A07856F8(&qword_1E94F9CF0);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = &v9[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = a1[4];
  sub_1A086F45C(a1, a1[3]);
  sub_1A0899F0C();
  sub_1A09F4CA8();
  if (v1)
  {
    _s17IMSharedUtilities29RemoteIntentBroadcastEncodingVwxx_0((uint64_t)a1);
  }
  else
  {
    v9[31] = 0;
    uint64_t v7 = sub_1A09F48D8();
    sub_1A07856F8(&qword_1E94F9D00);
    v9[15] = 1;
    sub_1A0899F60(&qword_1E94F9D08);
    swift_bridgeObjectRetain();
    sub_1A09F4928();
    (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
    swift_bridgeObjectRetain();
    _s17IMSharedUtilities29RemoteIntentBroadcastEncodingVwxx_0((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v7;
}

unint64_t sub_1A0899F0C()
{
  unint64_t result = qword_1E94F9CF8;
  if (!qword_1E94F9CF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94F9CF8);
  }
  return result;
}

uint64_t sub_1A0899F60(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1A078D800(&qword_1E94F9D00);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ChatUpdatedBroadcast.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A089A074);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ChatUpdatedBroadcast.CodingKeys()
{
  return &type metadata for ChatUpdatedBroadcast.CodingKeys;
}

unint64_t sub_1A089A0B0()
{
  unint64_t result = qword_1E94F9D20;
  if (!qword_1E94F9D20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94F9D20);
  }
  return result;
}

unint64_t sub_1A089A108()
{
  unint64_t result = qword_1E94F9D28;
  if (!qword_1E94F9D28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94F9D28);
  }
  return result;
}

unint64_t sub_1A089A160()
{
  unint64_t result = qword_1E94F9D30;
  if (!qword_1E94F9D30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94F9D30);
  }
  return result;
}

uint64_t RemoteIntentBroadcastEncoding.init(broadcast:)@<X0>(long long *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1A089266C(a1, a2);
}

uint64_t RemoteIntentBroadcastEncoding.broadcast.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A0883D94(v1, a1);
}

uint64_t sub_1A089A1C8(char *a1, char *a2)
{
  return sub_1A09B1854(*a1, *a2);
}

uint64_t sub_1A089A1D4()
{
  return sub_1A09F4C88();
}

uint64_t sub_1A089A250()
{
  sub_1A09F3DA8();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1A089A2B8()
{
  return sub_1A09F4C88();
}

uint64_t sub_1A089A330@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1A09F4818();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

void sub_1A089A390(uint64_t *a1@<X8>)
{
  uint64_t v2 = 25705;
  if (*v1) {
    uint64_t v2 = 0x73616364616F7262;
  }
  unint64_t v3 = 0xE200000000000000;
  if (*v1) {
    unint64_t v3 = 0xE900000000000074;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1A089A3C8()
{
  if (*v0) {
    return 0x73616364616F7262;
  }
  else {
    return 25705;
  }
}

uint64_t sub_1A089A3FC@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1A09F4818();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

uint64_t sub_1A089A460(uint64_t a1)
{
  unint64_t v2 = sub_1A089A75C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A089A49C(uint64_t a1)
{
  unint64_t v2 = sub_1A089A75C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t RemoteIntentBroadcastEncoding.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_1A07856F8(&qword_1E94F9D38);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v18[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A086F45C(a1, a1[3]);
  sub_1A089A75C();
  sub_1A09F4CA8();
  if (!v2)
  {
    LOBYTE(v18[0]) = 0;
    uint64_t v9 = sub_1A09F48D8();
    uint64_t v11 = v10;
    if (qword_1E94F84A8 != -1) {
      swift_once();
    }
    char v12 = off_1E94F9180;
    if (*((void *)off_1E94F9180 + 2))
    {
      swift_bridgeObjectRetain();
      unint64_t v13 = sub_1A087AAA4(v9, v11);
      if (v14)
      {
        long long v17 = *(_OWORD *)(v12[7] + 16 * v13);
        swift_bridgeObjectRelease_n();
        char v19 = 1;
        *(_OWORD *)&_OWORD v18[3] = v17;
        sub_1A0884478(v18);
        sub_1A09F4928();
        (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
        sub_1A089266C((long long *)v18, a2);
        return _s17IMSharedUtilities29RemoteIntentBroadcastEncodingVwxx_0((uint64_t)a1);
      }
      swift_bridgeObjectRelease();
    }
    sub_1A089A9DC();
    swift_allocError();
    uint64_t *v15 = v9;
    v15[1] = v11;
    swift_willThrow();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  return _s17IMSharedUtilities29RemoteIntentBroadcastEncodingVwxx_0((uint64_t)a1);
}

unint64_t sub_1A089A75C()
{
  unint64_t result = qword_1E94F9D40;
  if (!qword_1E94F9D40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94F9D40);
  }
  return result;
}

uint64_t RemoteIntentBroadcastEncoding.encode(to:)(void *a1)
{
  unint64_t v3 = v1;
  uint64_t v5 = sub_1A07856F8(&qword_1E94F9D50);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v13[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A086F45C(a1, a1[3]);
  sub_1A089A75C();
  sub_1A09F4CC8();
  sub_1A0883D94((uint64_t)v3, (uint64_t)v13);
  sub_1A086F45C(v13, v13[3]);
  DynamicCFStringRef Type = swift_getDynamicType();
  uint64_t v10 = v13[4];
  _s17IMSharedUtilities29RemoteIntentBroadcastEncodingVwxx_0((uint64_t)v13);
  (*(void (**)(uint64_t, uint64_t))(v10 + 48))(DynamicType, v10);
  LOBYTE(v13[0]) = 0;
  sub_1A09F4A28();
  if (v2)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_1A086F45C(v3, v3[3]);
    LOBYTE(v13[0]) = 1;
    sub_1A09F4A78();
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
}

uint64_t sub_1A089A9AC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return RemoteIntentBroadcastEncoding.init(from:)(a1, a2);
}

uint64_t sub_1A089A9C4(void *a1)
{
  return RemoteIntentBroadcastEncoding.encode(to:)(a1);
}

unint64_t sub_1A089A9DC()
{
  unint64_t result = qword_1E94F9D48;
  if (!qword_1E94F9D48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94F9D48);
  }
  return result;
}

uint64_t sub_1A089AA30(uint64_t result)
{
  if ((*(_DWORD *)(*(void *)(*(void *)(result + 24) - 8) + 80) & 0x20000) != 0) {
    JUMPOUT(0x1A6228C20);
  }
  return result;
}

unint64_t sub_1A089AA84(uint64_t a1)
{
  *(void *)(a1 + _Block_object_dispose(&a9, 8) = sub_1A08927F0();
  unint64_t result = sub_1A089272C();
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t initializeWithCopy for RemoteIntentBroadcastEncoding(uint64_t a1, uint64_t a2)
{
  long long v3 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = v3;
  (**(void (***)(void))(v3 - 8))();
  return a1;
}

uint64_t *assignWithCopy for RemoteIntentBroadcastEncoding(uint64_t *a1, uint64_t *a2)
{
  return a1;
}

uint64_t *sub_1A089AB38(uint64_t *result, uint64_t *a2)
{
  if (result != a2)
  {
    long long v3 = result;
    uint64_t v4 = result[3];
    uint64_t v5 = a2[3];
    if (v4 == v5)
    {
      uint64_t v10 = *(void *)(v4 - 8);
      if ((*(unsigned char *)(v10 + 82) & 2) != 0)
      {
        uint64_t v12 = *a2;
        swift_retain();
        unint64_t result = (uint64_t *)swift_release();
        *long long v3 = v12;
      }
      else
      {
        uint64_t v11 = *(uint64_t (**)(void))(v10 + 24);
        return (uint64_t *)v11();
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      uint64_t v6 = *(void *)(v4 - 8);
      uint64_t v7 = *(void *)(v5 - 8);
      uint64_t v8 = v7;
      int v9 = *(_DWORD *)(v7 + 80);
      if ((*(unsigned char *)(v6 + 82) & 2) != 0)
      {
        if ((v9 & 0x20000) != 0)
        {
          *unint64_t result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(unsigned char *, uint64_t *, uint64_t))(v6 + 32))(v13, result, v4);
        if ((v9 & 0x20000) != 0)
        {
          *long long v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v13, v4);
      }
    }
  }
  return result;
}

uint64_t assignWithTake for RemoteIntentBroadcastEncoding(uint64_t a1, uint64_t a2)
{
  _s17IMSharedUtilities29RemoteIntentBroadcastEncodingVwxx_0(a1);
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for RemoteIntentBroadcastEncoding(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for RemoteIntentBroadcastEncoding(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + _Block_object_dispose(&a9, 8) = 0u;
    *(_OWORD *)(result + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RemoteIntentBroadcastEncoding()
{
  return &type metadata for RemoteIntentBroadcastEncoding;
}

ValueMetadata *type metadata accessor for RemoteIntentBroadcastEncoding.DecodingError()
{
  return &type metadata for RemoteIntentBroadcastEncoding.DecodingError;
}

unsigned char *storeEnumTagSinglePayload for RemoteIntentBroadcastEncoding.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A089AF20);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RemoteIntentBroadcastEncoding.CodingKeys()
{
  return &type metadata for RemoteIntentBroadcastEncoding.CodingKeys;
}

unint64_t sub_1A089AF5C()
{
  unint64_t result = qword_1E94F9D58;
  if (!qword_1E94F9D58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94F9D58);
  }
  return result;
}

unint64_t sub_1A089AFB4()
{
  unint64_t result = qword_1E94F9D60;
  if (!qword_1E94F9D60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94F9D60);
  }
  return result;
}

unint64_t sub_1A089B00C()
{
  unint64_t result = qword_1E94F9D68;
  if (!qword_1E94F9D68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94F9D68);
  }
  return result;
}

void __swiftcall IMChipAction.init(dictionary:)(IMChipAction_optional *__return_ptr retstr, Swift::OpaquePointer dictionary)
{
  id v2 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  int v3 = (void *)sub_1A09F3CE8();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_initWithDictionary_, v3);
}

id IMChipAction.init(dictionary:)(uint64_t a1)
{
  id v2 = v1;
  if (*(void *)(a1 + 16))
  {
    unint64_t v4 = sub_1A087AAA4(0x6974736567677573, 0xEA00000000006E6FLL);
    if (v5)
    {
      sub_1A0785268(*(void *)(a1 + 56) + 32 * v4, (uint64_t)&v18);
      sub_1A07856F8(&qword_1E94FDD10);
      if (swift_dynamicCast())
      {
        id v6 = objc_allocWithZone((Class)IMChipSuggestion);
        uint64_t v7 = (void *)sub_1A09F3CE8();
        swift_bridgeObjectRelease();
        id v8 = objc_msgSend(v6, sel_initWithDictionary_, v7);

        if (v8)
        {
          if (*(void *)(a1 + 16))
          {
            unint64_t v9 = sub_1A087AAA4(1701869940, 0xE400000000000000);
            if (v10)
            {
              sub_1A0785268(*(void *)(a1 + 56) + 32 * v9, (uint64_t)&v18);
              if (swift_dynamicCast())
              {
                if (*(void *)(a1 + 16)
                  && (unint64_t v11 = sub_1A087AAA4(0x6E6F69746361, 0xE600000000000000), (v12 & 1) != 0))
                {
                  sub_1A0785268(*(void *)(a1 + 56) + 32 * v11, (uint64_t)&v18);
                }
                else
                {
                  long long v18 = 0u;
                  long long v19 = 0u;
                }
                swift_bridgeObjectRelease();
                if (*((void *)&v19 + 1))
                {
                  if (swift_dynamicCast())
                  {
                    uint64_t v15 = (void *)sub_1A09F3CE8();
                    swift_bridgeObjectRelease();
LABEL_20:
                    id v16 = objc_msgSend(self, sel_actionWithType_dictionary_, v17, v15);

                    id v13 = objc_msgSend(v2, sel_initWithSuggestion_type_action_, v8, v17, v16);
                    swift_unknownObjectRelease();

                    return v13;
                  }
                }
                else
                {
                  sub_1A0783C7C((uint64_t)&v18);
                }
                uint64_t v15 = 0;
                goto LABEL_20;
              }
            }
          }
        }
      }
    }
  }
  swift_bridgeObjectRelease();
  swift_getObjectType();
  swift_deallocPartialClassInstance();
  return 0;
}

uint64_t sub_1A089B498()
{
  sub_1A07856F8(&qword_1E94F97B8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1A0A099E0;
  *(void *)(inited + 32) = 0x6974736567677573;
  *(void *)(inited + 40) = 0xEA00000000006E6FLL;
  id v2 = objc_msgSend(v0, sel_suggestion);
  id v3 = objc_msgSend(v2, sel_dictionaryRepresentation);

  uint64_t v4 = sub_1A09F3D08();
  uint64_t v5 = sub_1A07856F8(&qword_1E94FDD10);
  *(void *)(inited + 4_Block_object_dispose(&a9, 8) = v4;
  *(void *)(inited + 72) = v5;
  *(void *)(inited + 80) = 1701869940;
  *(void *)(inited + 8_Block_object_dispose(&a9, 8) = 0xE400000000000000;
  id v6 = objc_msgSend(v0, sel_type);
  uint64_t v7 = MEMORY[0x1E4FBB550];
  *(void *)(inited + 96) = v6;
  *(void *)(inited + 120) = v7;
  *(void *)(inited + 12_Block_object_dispose(&a9, 8) = 0x6E6F69746361;
  *(void *)(inited + 136) = 0xE600000000000000;
  id v8 = objc_msgSend(v0, sel_action);
  uint64_t v9 = (uint64_t)v8;
  if (v8)
  {
    id v10 = objc_msgSend(v8, sel_dictionaryRepresentation);
    swift_unknownObjectRelease();
    uint64_t v9 = sub_1A09F3D08();
  }
  else
  {
    uint64_t v5 = 0;
    *(void *)(inited + 152) = 0;
    *(void *)(inited + 160) = 0;
  }
  *(void *)(inited + 144) = v9;
  *(void *)(inited + 16_Block_object_dispose(&a9, 8) = v5;
  unint64_t v11 = sub_1A08D76DC(inited);
  uint64_t v12 = sub_1A09BE198(v11);
  swift_bridgeObjectRelease();
  return v12;
}

id sub_1A089B76C()
{
  sub_1A07856F8(&qword_1E94F9D90);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1A0A08A20;
  *(void *)(inited + 32) = @"__kIMSuggestedActionAttributeName";
  id v2 = @"__kIMSuggestedActionAttributeName";
  id v3 = objc_msgSend(v0, sel_dictionaryRepresentation);
  uint64_t v4 = sub_1A09F3D08();

  *(void *)(inited + 40) = v4;
  unint64_t v5 = sub_1A08D7944(inited);
  sub_1A09F3E18();
  sub_1A09E5D28(v5);
  swift_bridgeObjectRelease();
  id v6 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
  uint64_t v7 = (void *)sub_1A09F3DE8();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_1A089BA50();
  id v8 = (void *)sub_1A09F3CE8();
  swift_bridgeObjectRelease();
  id v9 = objc_msgSend(v6, sel_initWithString_attributes_, v7, v8);

  return v9;
}

void __swiftcall IMChipAction.init()(IMChipAction *__return_ptr retstr)
{
  id v1 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());

  objc_msgSend(v1, sel_init);
}

void IMChipAction.init()()
{
}

unint64_t type metadata accessor for IMChipAction()
{
  unint64_t result = qword_1E94F9D88;
  if (!qword_1E94F9D88)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1E94F9D88);
  }
  return result;
}

unint64_t sub_1A089BA50()
{
  unint64_t result = qword_1E94F87D8;
  if (!qword_1E94F87D8)
  {
    type metadata accessor for Key(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94F87D8);
  }
  return result;
}

id sub_1A089BAA8(uint64_t a1, void *a2)
{
  id v2 = a2;
  if (a2)
  {
    switch(a1)
    {
      case 0:
        id v3 = IMActionOpenWeb;
        goto LABEL_17;
      case 1:
        id v3 = IMActionOpenApp;
        goto LABEL_17;
      case 2:
        id v3 = IMActionComposeText;
        goto LABEL_17;
      case 3:
        id v3 = IMActionComposeAudio;
        goto LABEL_17;
      case 4:
        id v3 = IMActionComposeVideo;
        goto LABEL_17;
      case 5:
        id v3 = IMActionShowLocation;
        goto LABEL_17;
      case 6:
        id v3 = IMActionRequestLocation;
        goto LABEL_17;
      case 7:
        id v3 = IMActionCalendar;
        goto LABEL_17;
      case 8:
        id v3 = IMActionDialVideo;
        goto LABEL_17;
      case 9:
        id v3 = IMActionDialEnriched;
        goto LABEL_17;
      case 10:
        id v3 = IMActionDialPhone;
        goto LABEL_17;
      case 11:
        id v3 = IMActionDevice;
        goto LABEL_17;
      case 12:
        id v3 = IMActionSettings;
LABEL_17:
        id v4 = objc_allocWithZone((Class)v3);
        swift_bridgeObjectRetain();
        unint64_t v5 = (void *)sub_1A09F3CE8();
        swift_bridgeObjectRelease();
        id v2 = objc_msgSend(v4, sel_initWithDictionary_, v5);

        break;
      default:
        id v2 = 0;
        break;
    }
  }
  return v2;
}

uint64_t sub_1A089BC30()
{
  uint64_t v0 = sub_1A09F39E8();
  sub_1A078D848(v0, qword_1E94F9D98);
  sub_1A078510C(v0, (uint64_t)qword_1E94F9D98);
  return sub_1A09F39D8();
}

uint64_t RemoteIntentFilePersistedNodeStore.__allocating_init(configuration:)(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  RemoteIntentFilePersistedNodeStore.init(configuration:)(a1);
  return v2;
}

uint64_t RemoteIntentFilePersistedNodeStore.init(configuration:)(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v33 = (void *)*v1;
  uint64_t v4 = sub_1A07856F8(&qword_1E94F9DB0);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v31 = v4;
  uint64_t v32 = v5;
  MEMORY[0x1F4188790](v4);
  uint64_t v34 = (char *)v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A09F3BC8();
  sub_1A07856F8(&qword_1E94F9DB8);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1A0A081A0;
  uint64_t v8 = type metadata accessor for PersistedListModel(0);
  uint64_t v9 = sub_1A089C334(&qword_1E94F9DC0, (void (*)(uint64_t))type metadata accessor for PersistedListModel);
  *(void *)(v7 + 32) = v8;
  *(void *)(v7 + 40) = v9;
  uint64_t v10 = type metadata accessor for RemoteIntentFileListNode(0);
  uint64_t v11 = sub_1A089C334((unint64_t *)&unk_1E94FE480, (void (*)(uint64_t))type metadata accessor for RemoteIntentFileListNode);
  *(void *)(v7 + 4_Block_object_dispose(&a9, 8) = v10;
  *(void *)(v7 + 56) = v11;
  sub_1A07856F8(&qword_1E94F9DC8);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_1A0A08A20;
  uint64_t v13 = sub_1A09F3C98();
  *(void *)(v12 + 56) = v13;
  *(void *)(v12 + 64) = sub_1A089C334(&qword_1E94F9DD0, MEMORY[0x1E4F3C3C8]);
  char v14 = sub_1A0884478((uint64_t *)(v12 + 32));
  uint64_t v15 = *(void *)(v13 - 8);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v15 + 16))(v14, a1, v13);
  uint64_t v16 = v39;
  uint64_t v17 = sub_1A09F3BB8();
  if (v16)
  {
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(a1, v13);
    swift_deallocPartialClassInstance();
    return (uint64_t)v1;
  }
  uint64_t v39 = a1;
  void v1[2] = v17;
  sub_1A09F3B98();
  swift_allocObject();
  swift_retain();
  v1[3] = sub_1A09F3BA8();
  swift_retain();
  sub_1A09F3B58();
  swift_release();
  uint64_t v19 = sub_1A07856F8(&qword_1E94F9DD8);
  v30[1] = v30;
  MEMORY[0x1F4188790](v19 - 8);
  uint64_t v21 = (char *)v30 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_1A07856F8(&qword_1E94F9DE0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v21, 1, 1, v22);
  sub_1A09F3BE8();
  uint64_t v33 = v2;
  swift_retain();
  unint64_t v23 = sub_1A09F3B68();
  uint64_t result = swift_release();
  uint64_t v24 = v32;
  if (!(v23 >> 62))
  {
    if (*(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_5;
    }
LABEL_11:
    swift_bridgeObjectRelease();
    uint64_t v26 = swift_allocObject();
    *(void *)(v26 + 4_Block_object_dispose(&a9, 8) = sub_1A07856F8(&qword_1E94F9DE8);
    uint64_t v35 = v8;
    uint64_t v36 = v8;
    uint64_t v37 = v9;
    uint64_t v38 = v9;
    *(void *)(v26 + 56) = swift_getOpaqueTypeConformance2();
    sub_1A0884478((uint64_t *)(v26 + 24));
    sub_1A09F3BF8();
    *(_WORD *)(v26 + 16) = 257;
    sub_1A09F34F8();
    uint64_t v28 = v33;
    sub_1A09F3B88();
    uint64_t v25 = v39;
    uint64_t v27 = v31;
    goto LABEL_9;
  }
  swift_bridgeObjectRetain();
  uint64_t v29 = sub_1A09F47B8();
  uint64_t result = swift_bridgeObjectRelease();
  if (!v29) {
    goto LABEL_11;
  }
LABEL_5:
  if ((v23 & 0xC000000000000001) != 0)
  {
    uint64_t v26 = MEMORY[0x1A6226890](0, v23);
    uint64_t v25 = v39;
    goto LABEL_8;
  }
  uint64_t v25 = v39;
  if (*(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    uint64_t v26 = *(void *)(v23 + 32);
    swift_retain();
LABEL_8:
    uint64_t v27 = v31;
    swift_bridgeObjectRelease();
    uint64_t v28 = v33;
LABEL_9:
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v25, v13);
    (*(void (**)(char *, uint64_t))(v24 + 8))(v34, v27);
    v28[4] = v26;
    return (uint64_t)v28;
  }
  __break(1u);
  return result;
}

uint64_t type metadata accessor for PersistedListModel(uint64_t a1)
{
  return sub_1A089C2FC(a1, (uint64_t *)&unk_1E94F9E70);
}

uint64_t type metadata accessor for RemoteIntentFileListNode(uint64_t a1)
{
  return sub_1A089C2FC(a1, (uint64_t *)&unk_1E94F9E80);
}

uint64_t sub_1A089C2FC(uint64_t a1, uint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1A089C334(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t RemoteIntentFilePersistedNodeStore.firstNode.getter()
{
  return sub_1A089C55C();
}

uint64_t RemoteIntentFilePersistedNodeStore.firstNode.setter()
{
  return sub_1A089C8C4();
}

void (*RemoteIntentFilePersistedNodeStore.firstNode.modify(void *a1))(uint64_t a1, char a2)
{
  id v3 = malloc(0x28uLL);
  *a1 = v3;
  uint64_t v4 = *(void *)(v1 + 32);
  uint64_t v5 = OBJC_IVAR____TtC17IMSharedUtilitiesP33_6AB6E0F32B41741B3ED4EB5BEFB3C68918PersistedListModel___observationRegistrar;
  void v3[2] = v4;
  v3[3] = v5;
  v3[1] = v4;
  swift_getKeyPath();
  void v3[4] = sub_1A089C334((unint64_t *)&unk_1E94FE470, (void (*)(uint64_t))type metadata accessor for PersistedListModel);
  sub_1A09F34E8();
  swift_release();
  swift_getKeyPath();
  sub_1A089C334(&qword_1E94F9DC0, (void (*)(uint64_t))type metadata accessor for PersistedListModel);
  sub_1A089C334((unint64_t *)&unk_1E94FE480, (void (*)(uint64_t))type metadata accessor for RemoteIntentFileListNode);
  uint64_t v6 = sub_1A09F3C38();
  swift_release();
  *id v3 = v6;
  return sub_1A089C51C;
}

void sub_1A089C51C(uint64_t a1, char a2)
{
}

uint64_t RemoteIntentFilePersistedNodeStore.lastNode.getter()
{
  return sub_1A089C55C();
}

uint64_t sub_1A089C55C()
{
  swift_getKeyPath();
  sub_1A089C334((unint64_t *)&unk_1E94FE470, (void (*)(uint64_t))type metadata accessor for PersistedListModel);
  sub_1A09F34E8();
  swift_release();
  swift_getKeyPath();
  sub_1A089C334(&qword_1E94F9DC0, (void (*)(uint64_t))type metadata accessor for PersistedListModel);
  sub_1A089C334((unint64_t *)&unk_1E94FE480, (void (*)(uint64_t))type metadata accessor for RemoteIntentFileListNode);
  uint64_t v0 = sub_1A09F3C38();
  swift_release();
  return v0;
}

uint64_t sub_1A089C68C@<X0>(uint64_t *a1@<X8>)
{
  swift_getKeyPath();
  sub_1A089C334((unint64_t *)&unk_1E94FE470, (void (*)(uint64_t))type metadata accessor for PersistedListModel);
  sub_1A09F34E8();
  swift_release();
  swift_getKeyPath();
  sub_1A089C334(&qword_1E94F9DC0, (void (*)(uint64_t))type metadata accessor for PersistedListModel);
  sub_1A089C334((unint64_t *)&unk_1E94FE480, (void (*)(uint64_t))type metadata accessor for RemoteIntentFileListNode);
  uint64_t v2 = sub_1A09F3C38();
  uint64_t result = swift_release();
  *a1 = v2;
  return result;
}

uint64_t sub_1A089C7C8()
{
  return swift_release();
}

uint64_t RemoteIntentFilePersistedNodeStore.lastNode.setter()
{
  return sub_1A089C8C4();
}

uint64_t sub_1A089C8C4()
{
  return swift_release();
}

void (*RemoteIntentFilePersistedNodeStore.lastNode.modify(void *a1))(uint64_t a1, char a2)
{
  id v3 = malloc(0x28uLL);
  *a1 = v3;
  uint64_t v4 = *(void *)(v1 + 32);
  uint64_t v5 = OBJC_IVAR____TtC17IMSharedUtilitiesP33_6AB6E0F32B41741B3ED4EB5BEFB3C68918PersistedListModel___observationRegistrar;
  void v3[2] = v4;
  v3[3] = v5;
  v3[1] = v4;
  swift_getKeyPath();
  void v3[4] = sub_1A089C334((unint64_t *)&unk_1E94FE470, (void (*)(uint64_t))type metadata accessor for PersistedListModel);
  sub_1A09F34E8();
  swift_release();
  swift_getKeyPath();
  sub_1A089C334(&qword_1E94F9DC0, (void (*)(uint64_t))type metadata accessor for PersistedListModel);
  sub_1A089C334((unint64_t *)&unk_1E94FE480, (void (*)(uint64_t))type metadata accessor for RemoteIntentFileListNode);
  uint64_t v6 = sub_1A09F3C38();
  swift_release();
  *id v3 = v6;
  return sub_1A089CB04;
}

void sub_1A089CB04(uint64_t a1, char a2)
{
}

void sub_1A089CB38(uint64_t a1, char a2)
{
  id v3 = *(void **)a1;
  *(void *)(*(void *)a1 + _Block_object_dispose(&a9, 8) = *(void *)(*(void *)a1 + 16);
  swift_getKeyPath();
  if (a2)
  {
    swift_retain();
    sub_1A09F34D8();
    swift_release();
  }
  else
  {
    sub_1A09F34D8();
  }
  swift_release();
  swift_release();
  free(v3);
}

uint64_t RemoteIntentFilePersistedNodeStore.count.getter()
{
  uint64_t v0 = sub_1A07856F8(&qword_1E94F9DF8);
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  id v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1A07856F8(&qword_1E94F9E00);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1A07856F8(&qword_1E94F9E08);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v6, 1, 1, v7);
  type metadata accessor for RemoteIntentFileListNode(0);
  sub_1A089C334((unint64_t *)&unk_1E94FE480, (void (*)(uint64_t))type metadata accessor for RemoteIntentFileListNode);
  sub_1A09F3BE8();
  uint64_t v8 = sub_1A09F3B48();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v8;
}

BOOL RemoteIntentFilePersistedNodeStore.isEmpty.getter()
{
  return RemoteIntentFilePersistedNodeStore.count.getter() == 0;
}

uint64_t sub_1A089CFE4(uint64_t *a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3 = *a3;
  unint64_t v4 = a3[1];
  uint64_t v5 = *a1;
  swift_retain();
  swift_bridgeObjectRetain();
  return RemoteIntentFilePersistedNodeStore.subscript.setter(v5, v3, v4);
}

uint64_t RemoteIntentFilePersistedNodeStore.subscript.setter(uint64_t a1, uint64_t a2, unint64_t a3)
{
  if (a1)
  {
    swift_retain();
    unint64_t v6 = _s17IMSharedUtilities34RemoteIntentFilePersistedNodeStoreCyAA0cde4ListG0CSgSScig_0(a2, a3);
    swift_bridgeObjectRelease();
    if (v6)
    {
      uint64_t v13 = a1;
      swift_getKeyPath();
      sub_1A089C334(&qword_1E94F9E18, (void (*)(uint64_t))type metadata accessor for RemoteIntentFileListNode);
      sub_1A09F34E8();
      swift_release();
      swift_getKeyPath();
      sub_1A089C334((unint64_t *)&unk_1E94FE480, (void (*)(uint64_t))type metadata accessor for RemoteIntentFileListNode);
      sub_1A08A2920((unint64_t *)&qword_1E94F9E20, &qword_1E94F9E30);
      sub_1A09F3C48();
      swift_release();
      _s17IMSharedUtilities34RemoteIntentFilePersistedNodeStoreC6update_4withyAA0cde4ListG0C_Shy10Foundation3URLVGtF_0(v6);
      swift_release();
      swift_bridgeObjectRelease();
    }
    else
    {
      type metadata accessor for RemoteIntentFileListNode(0);
      sub_1A089C334((unint64_t *)&unk_1E94FE480, (void (*)(uint64_t))type metadata accessor for RemoteIntentFileListNode);
      sub_1A09F3B88();
    }
    return swift_release_n();
  }
  else
  {
    if (qword_1E94F84F0 != -1) {
      swift_once();
    }
    uint64_t v7 = sub_1A09F39E8();
    sub_1A078510C(v7, (uint64_t)qword_1E94F9D98);
    swift_bridgeObjectRetain_n();
    uint64_t v8 = sub_1A09F39C8();
    os_log_type_t v9 = sub_1A09F4388();
    if (os_log_type_enabled(v8, v9))
    {
      uint64_t v10 = (uint8_t *)swift_slowAlloc();
      uint64_t v11 = swift_slowAlloc();
      uint64_t v13 = v11;
      *(_DWORD *)uint64_t v10 = 136315138;
      swift_bridgeObjectRetain();
      sub_1A0785144(a2, a3, &v13);
      sub_1A09F4528();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1A0772000, v8, v9, "subscript: Deleting model for key: %s", v10, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1A6228C20](v11, -1, -1);
      MEMORY[0x1A6228C20](v10, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    if (_s17IMSharedUtilities34RemoteIntentFilePersistedNodeStoreCyAA0cde4ListG0CSgSScig_0(a2, a3))
    {
      type metadata accessor for RemoteIntentFileListNode(0);
      sub_1A089C334((unint64_t *)&unk_1E94FE480, (void (*)(uint64_t))type metadata accessor for RemoteIntentFileListNode);
      sub_1A09F3B78();
      swift_bridgeObjectRelease();
      return swift_release();
    }
    else
    {
      return swift_bridgeObjectRelease();
    }
  }
}

unint64_t _s17IMSharedUtilities34RemoteIntentFilePersistedNodeStoreCyAA0cde4ListG0CSgSScig_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1A07856F8(&qword_1E94F9DF8);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1A07856F8(&qword_1E94F9E00);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  void v15[4] = a1;
  v15[5] = a2;
  void v15[9] = type metadata accessor for RemoteIntentFileListNode(0);
  sub_1A09F34C8();
  uint64_t v11 = sub_1A07856F8(&qword_1E94F9E08);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v10, 0, 1, v11);
  sub_1A089C334((unint64_t *)&unk_1E94FE480, (void (*)(uint64_t))type metadata accessor for RemoteIntentFileListNode);
  sub_1A09F3BE8();
  sub_1A09F3BD8();
  unint64_t result = sub_1A09F3B68();
  unint64_t v13 = result;
  if (result >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v14 = sub_1A09F47B8();
    unint64_t result = swift_bridgeObjectRelease();
    if (!v14) {
      goto LABEL_6;
    }
  }
  else
  {
    uint64_t v14 = *(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v14)
    {
LABEL_6:
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      return v14;
    }
  }
  if ((v13 & 0xC000000000000001) != 0)
  {
    uint64_t v14 = MEMORY[0x1A6226890](0, v13);
    goto LABEL_6;
  }
  if (*(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    uint64_t v14 = *(void *)(v13 + 32);
    swift_retain();
    goto LABEL_6;
  }
  __break(1u);
  return result;
}

Swift::Void __swiftcall RemoteIntentFilePersistedNodeStore.removeValue(forKey:)(Swift::String forKey)
{
  if (_s17IMSharedUtilities34RemoteIntentFilePersistedNodeStoreCyAA0cde4ListG0CSgSScig_0(forKey._countAndFlagsBits, (uint64_t)forKey._object))
  {
    type metadata accessor for RemoteIntentFileListNode(0);
    sub_1A089C334((unint64_t *)&unk_1E94FE480, (void (*)(uint64_t))type metadata accessor for RemoteIntentFileListNode);
    sub_1A09F3B78();
    swift_release();
  }
}

uint64_t RemoteIntentFileListNode.value.getter()
{
  swift_getKeyPath();
  sub_1A089C334(&qword_1E94F9E18, (void (*)(uint64_t))type metadata accessor for RemoteIntentFileListNode);
  sub_1A09F34E8();
  swift_release();
  swift_getKeyPath();
  sub_1A089C334((unint64_t *)&unk_1E94FE480, (void (*)(uint64_t))type metadata accessor for RemoteIntentFileListNode);
  sub_1A08A2920((unint64_t *)&qword_1E94F9E20, &qword_1E94F9E30);
  sub_1A09F3C48();
  swift_release();
  return v0;
}

uint64_t (*RemoteIntentFilePersistedNodeStore.subscript.modify(unint64_t *a1, uint64_t a2, uint64_t a3))(uint64_t *a1, char a2)
{
  a1[2] = a3;
  a1[3] = v3;
  a1[1] = a2;
  *a1 = _s17IMSharedUtilities34RemoteIntentFilePersistedNodeStoreCyAA0cde4ListG0CSgSScig_0(a2, a3);
  return sub_1A089DB68;
}

uint64_t sub_1A089DB68(uint64_t *a1, char a2)
{
  unint64_t v2 = a1[2];
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  if (a2)
  {
    swift_retain();
    swift_bridgeObjectRetain();
    RemoteIntentFilePersistedNodeStore.subscript.setter(v3, v4, v2);
    return swift_release();
  }
  else
  {
    swift_bridgeObjectRetain();
    return RemoteIntentFilePersistedNodeStore.subscript.setter(v3, v4, v2);
  }
}

uint64_t sub_1A089DBF4@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t v19 = a2;
  uint64_t v5 = sub_1A07856F8(&qword_1E94F9EC0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1A07856F8(&qword_1E94F9EC8);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A0792558(&qword_1E94F9ED0, &qword_1E94F9EC8);
  sub_1A09F3238();
  swift_getKeyPath();
  sub_1A09F3218();
  swift_release();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  uint64_t v13 = sub_1A07856F8(&qword_1E94F9ED8);
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)&v18 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = a1;
  uint64_t v21 = v19;
  sub_1A09F3228();
  a3[3] = sub_1A07856F8(&qword_1E94F9EE0);
  a3[4] = sub_1A08A29A8();
  sub_1A0884478(a3);
  sub_1A0792558(&qword_1E94F9F08, &qword_1E94F9EC0);
  sub_1A0792558((unint64_t *)&unk_1E94F9F10, &qword_1E94F9ED8);
  sub_1A09F3208();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t RemoteIntentFileListNode.key.getter()
{
  swift_getKeyPath();
  sub_1A089C334(&qword_1E94F9E18, (void (*)(uint64_t))type metadata accessor for RemoteIntentFileListNode);
  sub_1A09F34E8();
  swift_release();
  swift_getKeyPath();
  sub_1A089C334((unint64_t *)&unk_1E94FE480, (void (*)(uint64_t))type metadata accessor for RemoteIntentFileListNode);
  sub_1A09F3C48();
  swift_release();
  return v0;
}

uint64_t sub_1A089E010@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = *a1;
  swift_getKeyPath();
  sub_1A089C334(&qword_1E94F9E18, (void (*)(uint64_t))type metadata accessor for RemoteIntentFileListNode);
  sub_1A09F34E8();
  swift_release();
  swift_getKeyPath();
  sub_1A089C334((unint64_t *)&unk_1E94FE480, (void (*)(uint64_t))type metadata accessor for RemoteIntentFileListNode);
  sub_1A09F3C48();
  uint64_t result = swift_release();
  *a2 = v4;
  a2[1] = v5;
  return result;
}

uint64_t sub_1A089E11C()
{
  return swift_bridgeObjectRelease();
}

uint64_t RemoteIntentFileListNode.key.setter()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A089E2EC(uint64_t a1, uint64_t a2)
{
  uint64_t v29 = a1;
  uint64_t v30 = a2;
  uint64_t v2 = *(void *)(a1 + 56);
  uint64_t v27 = a1 + 56;
  uint64_t v3 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v4 = -1;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  unint64_t v5 = v4 & v2;
  uint64_t v6 = sub_1A07856F8((uint64_t *)&unk_1EB4A5630);
  v26[1] = v26;
  uint64_t result = MEMORY[0x1F4188790](v6 - 8);
  uint64_t v9 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v10 = 0;
  int64_t v28 = (unint64_t)(v3 + 63) >> 6;
  if (!v5) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v11 = __clz(__rbit64(v5));
  v5 &= v5 - 1;
  for (unint64_t i = v11 | (v10 << 6); ; unint64_t i = __clz(__rbit64(v14)) + (v10 << 6))
  {
    uint64_t v16 = *(void *)(v29 + 48);
    uint64_t v17 = sub_1A09F33A8();
    uint64_t v18 = *(void *)(v17 - 8);
    (*(void (**)(char *, unint64_t, uint64_t))(v18 + 16))(v9, v16 + *(void *)(v18 + 72) * i, v17);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v9, 0, 1, v17);
    uint64_t v19 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v18 + 48))(v9, 1, v17);
    if (v19 == 1) {
      goto LABEL_25;
    }
    uint64_t v20 = MEMORY[0x1F4188790](v19);
    uint64_t v22 = (char *)v26 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
    MEMORY[0x1F4188790](v20);
    uint64_t v24 = (char *)v26 - v23;
    (*(void (**)(char *, char *, uint64_t))(v18 + 32))((char *)v26 - v23, v9, v17);
    sub_1A08EEF20(v22, v24);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v22, v17);
    if (v5) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v13 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v13 >= v28) {
      goto LABEL_24;
    }
    unint64_t v14 = *(void *)(v27 + 8 * v13);
    ++v10;
    if (!v14)
    {
      int64_t v10 = v13 + 1;
      if (v13 + 1 >= v28) {
        goto LABEL_24;
      }
      unint64_t v14 = *(void *)(v27 + 8 * v10);
      if (!v14)
      {
        int64_t v10 = v13 + 2;
        if (v13 + 2 >= v28) {
          goto LABEL_24;
        }
        unint64_t v14 = *(void *)(v27 + 8 * v10);
        if (!v14)
        {
          int64_t v10 = v13 + 3;
          if (v13 + 3 >= v28) {
            goto LABEL_24;
          }
          unint64_t v14 = *(void *)(v27 + 8 * v10);
          if (!v14) {
            break;
          }
        }
      }
    }
LABEL_20:
    unint64_t v5 = (v14 - 1) & v14;
  }
  int64_t v15 = v13 + 4;
  if (v15 >= v28)
  {
LABEL_24:
    uint64_t v25 = sub_1A09F33A8();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v9, 1, 1, v25);
LABEL_25:
    swift_release();
    return v30;
  }
  unint64_t v14 = *(void *)(v27 + 8 * v15);
  if (v14)
  {
    int64_t v10 = v15;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v10 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v10 >= v28) {
      goto LABEL_24;
    }
    unint64_t v14 = *(void *)(v27 + 8 * v10);
    ++v15;
    if (v14) {
      goto LABEL_20;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t RemoteIntentFileListNode.value.setter()
{
  return swift_bridgeObjectRelease();
}

uint64_t RemoteIntentFilePersistedNodeStore.deinit()
{
  swift_release();
  swift_release();
  swift_release();
  return v0;
}

uint64_t RemoteIntentFilePersistedNodeStore.__deallocating_deinit()
{
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_1A089E7D4()
{
  return sub_1A089E864();
}

uint64_t sub_1A089E7E0()
{
  return sub_1A089E9B8();
}

uint64_t (*sub_1A089E800(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = RemoteIntentFilePersistedNodeStore.firstNode.modify(v2);
  return sub_1A0870534;
}

uint64_t sub_1A089E858()
{
  return sub_1A089E864();
}

uint64_t sub_1A089E864()
{
  swift_getKeyPath();
  sub_1A089C334((unint64_t *)&unk_1E94FE470, (void (*)(uint64_t))type metadata accessor for PersistedListModel);
  sub_1A09F34E8();
  swift_release();
  swift_getKeyPath();
  sub_1A089C334(&qword_1E94F9DC0, (void (*)(uint64_t))type metadata accessor for PersistedListModel);
  sub_1A089C334((unint64_t *)&unk_1E94FE480, (void (*)(uint64_t))type metadata accessor for RemoteIntentFileListNode);
  uint64_t v0 = sub_1A09F3C38();
  swift_release();
  return v0;
}

uint64_t sub_1A089E998()
{
  return sub_1A089E9B8();
}

uint64_t sub_1A089E9B8()
{
  return swift_release();
}

uint64_t (*sub_1A089EA84(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = RemoteIntentFilePersistedNodeStore.lastNode.modify(v2);
  return sub_1A0870534;
}

BOOL sub_1A089EAE0()
{
  return RemoteIntentFilePersistedNodeStore.count.getter() == 0;
}

unint64_t sub_1A089EB00(uint64_t *a1)
{
  return _s17IMSharedUtilities34RemoteIntentFilePersistedNodeStoreCyAA0cde4ListG0CSgSScig_0(*a1, a1[1]);
}

uint64_t sub_1A089EB0C(uint64_t a1, uint64_t a2)
{
  return RemoteIntentFilePersistedNodeStore.subscript.setter(a1, *(void *)a2, *(void *)(a2 + 8));
}

uint64_t (*sub_1A089EB18(unint64_t *a1, uint64_t *a2))(uint64_t *a1, char a2)
{
  uint64_t v4 = *a2;
  uint64_t v5 = a2[1];
  a1[1] = v2;
  a1[2] = v4;
  a1[3] = v5;
  *a1 = _s17IMSharedUtilities34RemoteIntentFilePersistedNodeStoreCyAA0cde4ListG0CSgSScig_0(v4, v5);
  return sub_1A089EB68;
}

uint64_t sub_1A089EB68(uint64_t *a1, char a2)
{
  uint64_t v3 = a1[2];
  unint64_t v2 = a1[3];
  uint64_t v4 = *a1;
  if (a2)
  {
    swift_retain();
    swift_bridgeObjectRetain();
    RemoteIntentFilePersistedNodeStore.subscript.setter(v4, v3, v2);
    return swift_release();
  }
  else
  {
    swift_bridgeObjectRetain();
    return RemoteIntentFilePersistedNodeStore.subscript.setter(v4, v3, v2);
  }
}

uint64_t sub_1A089EBF4(uint64_t a1)
{
  return _s17IMSharedUtilities34RemoteIntentFilePersistedNodeStoreC6update_4withyAA0cde4ListG0C_Shy10Foundation3URLVGtF_0(a1);
}

unint64_t sub_1A089EBFC(uint64_t *a1)
{
  unint64_t result = _s17IMSharedUtilities34RemoteIntentFilePersistedNodeStoreCyAA0cde4ListG0CSgSScig_0(*a1, a1[1]);
  if (result)
  {
    type metadata accessor for RemoteIntentFileListNode(0);
    sub_1A089C334((unint64_t *)&unk_1E94FE480, (void (*)(uint64_t))type metadata accessor for RemoteIntentFileListNode);
    sub_1A09F3B78();
    return swift_release();
  }
  return result;
}

uint64_t sub_1A089ECAC@<X0>(uint64_t *a1@<X8>)
{
  return sub_1A089ED88(a1);
}

uint64_t sub_1A089ECB8()
{
  return sub_1A089EEE0();
}

uint64_t sub_1A089ECD8()
{
  return sub_1A089EFC4();
}

uint64_t sub_1A089ECE4@<X0>(uint64_t *a1@<X8>)
{
  return sub_1A089ED88(a1);
}

uint64_t sub_1A089ED04()
{
  return sub_1A089EEE0();
}

uint64_t sub_1A089ED38()
{
  return sub_1A089F168();
}

uint64_t sub_1A089ED58()
{
  return sub_1A089F168();
}

uint64_t sub_1A089ED7C@<X0>(uint64_t *a1@<X8>)
{
  return sub_1A089ED88(a1);
}

uint64_t sub_1A089ED88@<X0>(uint64_t *a1@<X8>)
{
  swift_getKeyPath();
  sub_1A089C334((unint64_t *)&unk_1E94FE470, (void (*)(uint64_t))type metadata accessor for PersistedListModel);
  sub_1A09F34E8();
  swift_release();
  swift_getKeyPath();
  sub_1A089C334(&qword_1E94F9DC0, (void (*)(uint64_t))type metadata accessor for PersistedListModel);
  sub_1A089C334((unint64_t *)&unk_1E94FE480, (void (*)(uint64_t))type metadata accessor for RemoteIntentFileListNode);
  uint64_t v2 = sub_1A09F3C38();
  uint64_t result = swift_release();
  *a1 = v2;
  return result;
}

uint64_t sub_1A089EEC0()
{
  return sub_1A089EEE0();
}

uint64_t sub_1A089EEE0()
{
  return swift_release();
}

uint64_t sub_1A089EFB8()
{
  return sub_1A089EFC4();
}

uint64_t sub_1A089EFC4()
{
  swift_getKeyPath();
  sub_1A089C334((unint64_t *)&unk_1E94FE470, (void (*)(uint64_t))type metadata accessor for PersistedListModel);
  sub_1A09F34E8();
  swift_release();
  swift_getKeyPath();
  sub_1A089C334(&qword_1E94F9DC0, (void (*)(uint64_t))type metadata accessor for PersistedListModel);
  sub_1A089C334((unint64_t *)&unk_1E94FE480, (void (*)(uint64_t))type metadata accessor for RemoteIntentFileListNode);
  uint64_t v0 = sub_1A09F3C38();
  swift_release();
  return v0;
}

uint64_t sub_1A089F0F4@<X0>(uint64_t *a1@<X8>)
{
  return sub_1A089ED88(a1);
}

uint64_t sub_1A089F114()
{
  return sub_1A089EEE0();
}

uint64_t sub_1A089F148()
{
  return sub_1A089F168();
}

uint64_t sub_1A089F168()
{
  return swift_release();
}

uint64_t sub_1A089F23C()
{
  return sub_1A089F168();
}

uint64_t sub_1A089F260(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = (uint64_t *)(v1 + 24);
  uint64_t v5 = type metadata accessor for PersistedListModel(0);
  *(void *)(v2 + 4_Block_object_dispose(&a9, 8) = sub_1A07856F8(&qword_1E94F9DE8);
  *(void *)&long long v7 = v5;
  *((void *)&v7 + 1) = v5;
  uint64_t v8 = sub_1A089C334(&qword_1E94F9DC0, (void (*)(uint64_t))type metadata accessor for PersistedListModel);
  uint64_t v9 = v8;
  *(void *)(v2 + 56) = swift_getOpaqueTypeConformance2();
  sub_1A0884478(v4);
  sub_1A09F3BF8();
  *(_WORD *)(v2 + 16) = 257;
  sub_1A09F34F8();
  *(_WORD *)(v2 + 16) = 0;
  sub_1A0883D94(a1, (uint64_t)&v7);
  swift_beginAccess();
  _s17IMSharedUtilities29RemoteIntentBroadcastEncodingVwxx_0((uint64_t)v4);
  sub_1A089266C(&v7, (uint64_t)v4);
  swift_endAccess();
  _s17IMSharedUtilities29RemoteIntentBroadcastEncodingVwxx_0(a1);
  return v2;
}

uint64_t sub_1A089F3A4()
{
  return sub_1A08A08DC(&OBJC_IVAR____TtC17IMSharedUtilitiesP33_6AB6E0F32B41741B3ED4EB5BEFB3C68918PersistedListModel___observationRegistrar);
}

void *RemoteIntentFileListNode.__allocating_init(key:value:)()
{
  swift_allocObject();
  uint64_t v0 = sub_1A08A1DAC();
  swift_bridgeObjectRelease();
  return v0;
}

void *RemoteIntentFileListNode.init(key:value:)()
{
  uint64_t v0 = sub_1A08A1DAC();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t RemoteIntentFileListNode.previous.getter()
{
  return sub_1A089F714();
}

uint64_t sub_1A089F454@<X0>(uint64_t *a1@<X8>)
{
  return sub_1A089F818(a1);
}

uint64_t sub_1A089F460()
{
  return sub_1A089F480();
}

uint64_t sub_1A089F480()
{
  return swift_release();
}

uint64_t RemoteIntentFileListNode.previous.setter()
{
  return sub_1A089F958();
}

uint64_t sub_1A089F578()
{
  return sub_1A089FA44();
}

void (*RemoteIntentFileListNode.previous.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC17IMSharedUtilities24RemoteIntentFileListNode___observationRegistrar;
  void v3[2] = v1;
  v3[3] = v4;
  v3[1] = v1;
  swift_getKeyPath();
  void v3[4] = sub_1A089C334(&qword_1E94F9E18, (void (*)(uint64_t))type metadata accessor for RemoteIntentFileListNode);
  sub_1A09F34E8();
  swift_release();
  swift_getKeyPath();
  sub_1A089C334((unint64_t *)&unk_1E94FE480, (void (*)(uint64_t))type metadata accessor for RemoteIntentFileListNode);
  uint64_t v5 = sub_1A09F3C38();
  swift_release();
  *uint64_t v3 = v5;
  return sub_1A089F6D4;
}

void sub_1A089F6D4(uint64_t a1, char a2)
{
}

uint64_t RemoteIntentFileListNode.next.getter()
{
  return sub_1A089F714();
}

uint64_t sub_1A089F714()
{
  swift_getKeyPath();
  sub_1A089C334(&qword_1E94F9E18, (void (*)(uint64_t))type metadata accessor for RemoteIntentFileListNode);
  sub_1A09F34E8();
  swift_release();
  swift_getKeyPath();
  sub_1A089C334((unint64_t *)&unk_1E94FE480, (void (*)(uint64_t))type metadata accessor for RemoteIntentFileListNode);
  uint64_t v0 = sub_1A09F3C38();
  swift_release();
  return v0;
}

uint64_t sub_1A089F80C@<X0>(uint64_t *a1@<X8>)
{
  return sub_1A089F818(a1);
}

uint64_t sub_1A089F818@<X0>(uint64_t *a1@<X8>)
{
  swift_getKeyPath();
  sub_1A089C334(&qword_1E94F9E18, (void (*)(uint64_t))type metadata accessor for RemoteIntentFileListNode);
  sub_1A09F34E8();
  swift_release();
  swift_getKeyPath();
  sub_1A089C334((unint64_t *)&unk_1E94FE480, (void (*)(uint64_t))type metadata accessor for RemoteIntentFileListNode);
  uint64_t v2 = sub_1A09F3C38();
  uint64_t result = swift_release();
  *a1 = v2;
  return result;
}

uint64_t sub_1A089F918()
{
  return sub_1A089F480();
}

uint64_t RemoteIntentFileListNode.next.setter()
{
  return sub_1A089F958();
}

uint64_t sub_1A089F958()
{
  return swift_release();
}

uint64_t sub_1A089FA24()
{
  return sub_1A089FA44();
}

uint64_t sub_1A089FA44()
{
  return swift_release();
}

void (*RemoteIntentFileListNode.next.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC17IMSharedUtilities24RemoteIntentFileListNode___observationRegistrar;
  void v3[2] = v1;
  v3[3] = v4;
  v3[1] = v1;
  swift_getKeyPath();
  void v3[4] = sub_1A089C334(&qword_1E94F9E18, (void (*)(uint64_t))type metadata accessor for RemoteIntentFileListNode);
  sub_1A09F34E8();
  swift_release();
  swift_getKeyPath();
  sub_1A089C334((unint64_t *)&unk_1E94FE480, (void (*)(uint64_t))type metadata accessor for RemoteIntentFileListNode);
  uint64_t v5 = sub_1A09F3C38();
  swift_release();
  *uint64_t v3 = v5;
  return sub_1A089FC14;
}

void sub_1A089FC14(uint64_t a1, char a2)
{
}

uint64_t sub_1A089FC48()
{
  return swift_release();
}

void (*RemoteIntentFileListNode.key.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC17IMSharedUtilities24RemoteIntentFileListNode___observationRegistrar;
  void v3[4] = v1;
  void v3[5] = v4;
  void v3[2] = v1;
  swift_getKeyPath();
  void v3[6] = sub_1A089C334(&qword_1E94F9E18, (void (*)(uint64_t))type metadata accessor for RemoteIntentFileListNode);
  sub_1A09F34E8();
  swift_release();
  swift_getKeyPath();
  sub_1A089C334((unint64_t *)&unk_1E94FE480, (void (*)(uint64_t))type metadata accessor for RemoteIntentFileListNode);
  sub_1A09F3C48();
  swift_release();
  uint64_t v5 = v3[3];
  *uint64_t v3 = v3[2];
  v3[1] = v5;
  return sub_1A089FE44;
}

void sub_1A089FE44(uint64_t a1, char a2)
{
  uint64_t v3 = *(void **)a1;
  *(void *)(*(void *)a1 + 16) = *(void *)(*(void *)a1 + 32);
  swift_getKeyPath();
  if (a2)
  {
    swift_bridgeObjectRetain();
    sub_1A09F34D8();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1A09F34D8();
    swift_bridgeObjectRelease();
    swift_release();
  }
  free(v3);
}

uint64_t sub_1A089FF7C@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = *a1;
  swift_getKeyPath();
  sub_1A089C334(&qword_1E94F9E18, (void (*)(uint64_t))type metadata accessor for RemoteIntentFileListNode);
  sub_1A09F34E8();
  swift_release();
  swift_getKeyPath();
  sub_1A089C334((unint64_t *)&unk_1E94FE480, (void (*)(uint64_t))type metadata accessor for RemoteIntentFileListNode);
  sub_1A08A2920((unint64_t *)&qword_1E94F9E20, &qword_1E94F9E30);
  sub_1A09F3C48();
  uint64_t result = swift_release();
  *a2 = v4;
  return result;
}

uint64_t sub_1A08A00B8()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A08A0198()
{
  return swift_release();
}

void (*RemoteIntentFileListNode.value.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC17IMSharedUtilities24RemoteIntentFileListNode___observationRegistrar;
  void v3[2] = v1;
  v3[3] = v4;
  v3[1] = v1;
  swift_getKeyPath();
  void v3[4] = sub_1A089C334(&qword_1E94F9E18, (void (*)(uint64_t))type metadata accessor for RemoteIntentFileListNode);
  sub_1A09F34E8();
  swift_release();
  swift_getKeyPath();
  sub_1A089C334((unint64_t *)&unk_1E94FE480, (void (*)(uint64_t))type metadata accessor for RemoteIntentFileListNode);
  sub_1A08A2920((unint64_t *)&qword_1E94F9E20, &qword_1E94F9E30);
  sub_1A09F3C48();
  swift_release();
  *uint64_t v3 = v3[1];
  return sub_1A08A03E4;
}

void sub_1A08A03E4(uint64_t a1, char a2)
{
  uint64_t v3 = *(void **)a1;
  *(void *)(*(void *)a1 + _Block_object_dispose(&a9, 8) = *(void *)(*(void *)a1 + 16);
  swift_getKeyPath();
  if (a2)
  {
    swift_bridgeObjectRetain();
    sub_1A09F34D8();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1A09F34D8();
    swift_bridgeObjectRelease();
    swift_release();
  }
  free(v3);
}

uint64_t RemoteIntentFileListNode.persistentBackingData.getter@<X0>(uint64_t a1@<X8>)
{
  swift_beginAccess();
  return sub_1A0883D94(v1 + 24, a1);
}

uint64_t sub_1A08A0568(uint64_t a1, void *a2)
{
  sub_1A0883D94(a1, (uint64_t)v5);
  uint64_t v3 = *a2 + 24;
  swift_beginAccess();
  _s17IMSharedUtilities29RemoteIntentBroadcastEncodingVwxx_0(v3);
  sub_1A089266C(v5, v3);
  return swift_endAccess();
}

uint64_t RemoteIntentFileListNode.persistentBackingData.setter(long long *a1)
{
  uint64_t v3 = v1 + 24;
  swift_beginAccess();
  _s17IMSharedUtilities29RemoteIntentBroadcastEncodingVwxx_0(v3);
  sub_1A089266C(a1, v3);
  return swift_endAccess();
}

void (*RemoteIntentFileListNode.persistentBackingData.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x88uLL);
  *a1 = v3;
  uint8_t v3[16] = v1;
  swift_beginAccess();
  sub_1A0883D94(v1 + 24, (uint64_t)v3);
  return sub_1A08A06A8;
}

void sub_1A08A06A8(uint64_t *a1, char a2)
{
}

uint64_t RemoteIntentFileListNode.__allocating_init(backingData:)(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  RemoteIntentFileListNode.init(backingData:)(a1);
  return v2;
}

void *RemoteIntentFileListNode.init(backingData:)(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v1;
  v2[6] = sub_1A07856F8(&qword_1E94F9E38);
  *(void *)&long long v6 = v4;
  *((void *)&v6 + 1) = v4;
  uint64_t v7 = sub_1A089C334((unint64_t *)&unk_1E94FE480, (void (*)(uint64_t))type metadata accessor for RemoteIntentFileListNode);
  uint64_t v8 = v7;
  v2[7] = swift_getOpaqueTypeConformance2();
  sub_1A0884478(v2 + 3);
  sub_1A09F3BF8();
  *((_WORD *)v2 + _Block_object_dispose(&a9, 8) = 257;
  sub_1A09F34F8();
  *((_WORD *)v2 + _Block_object_dispose(&a9, 8) = 0;
  sub_1A0883D94(a1, (uint64_t)&v6);
  swift_beginAccess();
  _s17IMSharedUtilities29RemoteIntentBroadcastEncodingVwxx_0((uint64_t)(v2 + 3));
  sub_1A089266C(&v6, (uint64_t)(v2 + 3));
  swift_endAccess();
  _s17IMSharedUtilities29RemoteIntentBroadcastEncodingVwxx_0(a1);
  return v2;
}

uint64_t RemoteIntentFileListNode.deinit()
{
  _s17IMSharedUtilities29RemoteIntentBroadcastEncodingVwxx_0(v0 + 24);
  uint64_t v1 = v0 + OBJC_IVAR____TtC17IMSharedUtilities24RemoteIntentFileListNode___observationRegistrar;
  uint64_t v2 = sub_1A09F3508();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t RemoteIntentFileListNode.__deallocating_deinit()
{
  return sub_1A08A08DC(&OBJC_IVAR____TtC17IMSharedUtilities24RemoteIntentFileListNode___observationRegistrar);
}

uint64_t sub_1A08A08DC(void *a1)
{
  _s17IMSharedUtilities29RemoteIntentBroadcastEncodingVwxx_0(v1 + 24);
  uint64_t v3 = v1 + *a1;
  uint64_t v4 = sub_1A09F3508();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);

  return swift_deallocClassInstance();
}

uint64_t sub_1A08A0984()
{
  return sub_1A08A0A14();
}

uint64_t sub_1A08A0990()
{
  return sub_1A08A0B30();
}

uint64_t (*sub_1A08A09B0(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = RemoteIntentFileListNode.previous.modify(v2);
  return sub_1A0870534;
}

uint64_t sub_1A08A0A08()
{
  return sub_1A08A0A14();
}

uint64_t sub_1A08A0A14()
{
  swift_getKeyPath();
  sub_1A089C334(&qword_1E94F9E18, (void (*)(uint64_t))type metadata accessor for RemoteIntentFileListNode);
  sub_1A09F34E8();
  swift_release();
  swift_getKeyPath();
  sub_1A089C334((unint64_t *)&unk_1E94FE480, (void (*)(uint64_t))type metadata accessor for RemoteIntentFileListNode);
  uint64_t v0 = sub_1A09F3C38();
  swift_release();
  return v0;
}

uint64_t sub_1A08A0B10()
{
  return sub_1A08A0B30();
}

uint64_t sub_1A08A0B30()
{
  return swift_release();
}

uint64_t (*sub_1A08A0BFC(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = RemoteIntentFileListNode.next.modify(v2);
  return sub_1A0870534;
}

uint64_t sub_1A08A0C54@<X0>(void *a1@<X8>)
{
  swift_getKeyPath();
  sub_1A089C334(&qword_1E94F9E18, (void (*)(uint64_t))type metadata accessor for RemoteIntentFileListNode);
  sub_1A09F34E8();
  swift_release();
  swift_getKeyPath();
  sub_1A089C334((unint64_t *)&unk_1E94FE480, (void (*)(uint64_t))type metadata accessor for RemoteIntentFileListNode);
  sub_1A09F3C48();
  uint64_t result = swift_release();
  *a1 = v1;
  a1[1] = v4;
  return result;
}

uint64_t sub_1A08A0D60@<X0>(void *a1@<X8>)
{
  swift_getKeyPath();
  sub_1A089C334(&qword_1E94F9E18, (void (*)(uint64_t))type metadata accessor for RemoteIntentFileListNode);
  sub_1A09F34E8();
  swift_release();
  swift_getKeyPath();
  sub_1A089C334((unint64_t *)&unk_1E94FE480, (void (*)(uint64_t))type metadata accessor for RemoteIntentFileListNode);
  sub_1A08A2920((unint64_t *)&qword_1E94F9E20, &qword_1E94F9E30);
  sub_1A09F3C48();
  uint64_t result = swift_release();
  *a1 = v1;
  return result;
}

uint64_t sub_1A08A0E9C()
{
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1A08A0F70(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = RemoteIntentFileListNode.value.modify(v2);
  return sub_1A0870534;
}

void *sub_1A08A0FC8()
{
  swift_allocObject();
  uint64_t v0 = sub_1A08A1DAC();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1A08A1028(uint64_t *a1, uint64_t *a2)
{
  return _s17IMSharedUtilities24RemoteIntentFileListNodeC2eeoiySbAC_ACtFZ_0(*a1, *a2);
}

uint64_t RemoteIntentFileListNode.hashValue.getter()
{
  return sub_1A09F4C88();
}

uint64_t sub_1A08A10E0(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  RemoteIntentFileListNode.init(backingData:)(a1);
  return v2;
}

uint64_t sub_1A08A1124(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A08A14D8(a1, a2, a3, (void (*)(uint64_t, uint64_t))sub_1A089266C);
}

void (*sub_1A08A113C(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x88uLL);
  *a1 = v3;
  uint8_t v3[16] = v1;
  swift_beginAccess();
  sub_1A0883D94(v1 + 24, (uint64_t)v3);
  return sub_1A08A06A8;
}

void sub_1A08A11B8(uint64_t *a1, char a2, void (*a3)(uint64_t, uint64_t))
{
  uint64_t v4 = (void *)*a1;
  uint64_t v5 = *a1 + 40;
  if (a2)
  {
    uint64_t v6 = v4[16] + 24;
    sub_1A0883D94(*a1, v5);
    swift_beginAccess();
    _s17IMSharedUtilities29RemoteIntentBroadcastEncodingVwxx_0(v6);
    a3(v5, v6);
    swift_endAccess();
    _s17IMSharedUtilities29RemoteIntentBroadcastEncodingVwxx_0((uint64_t)v4);
  }
  else
  {
    uint64_t v7 = v4[16] + 24;
    swift_beginAccess();
    _s17IMSharedUtilities29RemoteIntentBroadcastEncodingVwxx_0(v7);
    a3((uint64_t)v4, v7);
    swift_endAccess();
  }

  free(v4);
}

uint64_t sub_1A08A12A0()
{
  return sub_1A09F4C88();
}

uint64_t sub_1A08A1304()
{
  return sub_1A09F3C28();
}

uint64_t sub_1A08A1378()
{
  return sub_1A09F4C88();
}

uint64_t sub_1A08A13D8()
{
  return sub_1A09F3C18();
}

uint64_t sub_1A08A144C(uint64_t a1)
{
  return sub_1A089F260(a1);
}

uint64_t sub_1A08A148C@<X0>(uint64_t a1@<X8>)
{
  swift_beginAccess();
  return sub_1A0883D94(v1 + 24, a1);
}

uint64_t sub_1A08A14D8(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t))
{
  uint64_t v7 = v4 + 24;
  swift_beginAccess();
  _s17IMSharedUtilities29RemoteIntentBroadcastEncodingVwxx_0(v7);
  a4(a1, v7);
  return swift_endAccess();
}

uint64_t sub_1A08A1548()
{
  return sub_1A09F4C88();
}

uint64_t sub_1A08A15D4()
{
  return sub_1A09F3C28();
}

uint64_t sub_1A08A162C()
{
  return sub_1A09F4C88();
}

uint64_t sub_1A08A1694()
{
  return sub_1A09F3C18();
}

uint64_t sub_1A08A1710(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = *a1;
  uint64_t v5 = *a2;
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x1F40F7CA8](v4, v5, a3, WitnessTable);
}

uint64_t _s17IMSharedUtilities24RemoteIntentFileListNodeC2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  swift_getKeyPath();
  sub_1A089C334(&qword_1E94F9E18, (void (*)(uint64_t))type metadata accessor for RemoteIntentFileListNode);
  sub_1A09F34E8();
  swift_release();
  swift_getKeyPath();
  sub_1A089C334((unint64_t *)&unk_1E94FE480, (void (*)(uint64_t))type metadata accessor for RemoteIntentFileListNode);
  sub_1A09F3C48();
  swift_release();
  swift_getKeyPath();
  sub_1A09F34E8();
  swift_release();
  swift_getKeyPath();
  sub_1A09F3C48();
  swift_release();
  if (a1 == a2)
  {
    swift_bridgeObjectRelease_n();
LABEL_4:
    swift_getKeyPath();
    sub_1A09F34E8();
    swift_release();
    swift_getKeyPath();
    sub_1A08A2920((unint64_t *)&qword_1E94F9E20, &qword_1E94F9E30);
    sub_1A09F3C48();
    swift_release();
    swift_getKeyPath();
    sub_1A09F34E8();
    swift_release();
    swift_getKeyPath();
    sub_1A09F3C48();
    swift_release();
    char v5 = sub_1A09AF13C(a1, a2);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v5 & 1;
  }
  char v4 = sub_1A09F4B28();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  char v5 = 0;
  if (v4) {
    goto LABEL_4;
  }
  return v5 & 1;
}

uint64_t _s17IMSharedUtilities34RemoteIntentFilePersistedNodeStoreC6update_4withyAA0cde4ListG0C_Shy10Foundation3URLVGtF_0(uint64_t a1)
{
  swift_getKeyPath();
  sub_1A089C334(&qword_1E94F9E18, (void (*)(uint64_t))type metadata accessor for RemoteIntentFileListNode);
  sub_1A09F34E8();
  swift_release();
  swift_getKeyPath();
  sub_1A089C334((unint64_t *)&unk_1E94FE480, (void (*)(uint64_t))type metadata accessor for RemoteIntentFileListNode);
  sub_1A08A2920((unint64_t *)&qword_1E94F9E20, &qword_1E94F9E30);
  sub_1A09F3C48();
  swift_release();
  uint64_t v1 = swift_bridgeObjectRetain();
  sub_1A089E2EC(v1, a1);
  swift_getKeyPath();
  sub_1A09F34D8();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A08A1C38()
{
  return sub_1A089FC48();
}

uint64_t sub_1A08A1C58()
{
  return sub_1A08A0198();
}

uint64_t sub_1A08A1C74()
{
  sub_1A07856F8(&qword_1E94F9EA8);
  sub_1A09F3CC8();
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1A0A081A0;
  swift_getKeyPath();
  sub_1A09F3CB8();
  swift_getKeyPath();
  sub_1A09F3CB8();
  return v0;
}

void *sub_1A08A1DAC()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  void v1[6] = sub_1A07856F8(&qword_1E94F9E38);
  v4[0] = v2;
  v4[1] = v2;
  uint64_t v5 = sub_1A089C334((unint64_t *)&unk_1E94FE480, (void (*)(uint64_t))type metadata accessor for RemoteIntentFileListNode);
  uint64_t v6 = v5;
  v1[7] = swift_getOpaqueTypeConformance2();
  sub_1A0884478(v1 + 3);
  sub_1A09F3BF8();
  *((_WORD *)v1 + _Block_object_dispose(&a9, 8) = 257;
  sub_1A09F34F8();
  sub_1A0883D94((uint64_t)(v1 + 3), (uint64_t)v4);
  sub_1A086F45C(v4, v6);
  swift_getKeyPath();
  sub_1A09F3B38();
  swift_bridgeObjectRelease();
  swift_release();
  _s17IMSharedUtilities29RemoteIntentBroadcastEncodingVwxx_0((uint64_t)v4);
  sub_1A0883D94((uint64_t)(v1 + 3), (uint64_t)v4);
  sub_1A086F45C(v4, v6);
  swift_getKeyPath();
  sub_1A07856F8(&qword_1E94F9E28);
  sub_1A08A2920(&qword_1E94F9EB0, &qword_1E94F9EB8);
  sub_1A09F3B38();
  swift_release();
  _s17IMSharedUtilities29RemoteIntentBroadcastEncodingVwxx_0((uint64_t)v4);
  return v1;
}

uint64_t sub_1A08A1FF0()
{
  return sub_1A089FA44();
}

uint64_t sub_1A08A201C()
{
  return sub_1A089FA44();
}

uint64_t _s17IMSharedUtilities24RemoteIntentFileListNodeC14schemaMetadataSay9SwiftData6SchemaC08PropertyI0VGvgZ_0()
{
  sub_1A07856F8(&qword_1E94F9EA8);
  sub_1A09F3CC8();
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1A0A0A440;
  swift_getKeyPath();
  sub_1A09F3CB8();
  swift_getKeyPath();
  sub_1A09F3CB8();
  swift_getKeyPath();
  sub_1A09F3CB8();
  swift_getKeyPath();
  sub_1A09F3CB8();
  return v0;
}

uint64_t sub_1A08A2210()
{
  return sub_1A089C334(&qword_1E94F9E48, (void (*)(uint64_t))type metadata accessor for RemoteIntentFileListNode);
}

uint64_t sub_1A08A2258()
{
  return MEMORY[0x1E4FBB1B0];
}

unint64_t sub_1A08A2268()
{
  unint64_t result = qword_1E94F9E50;
  if (!qword_1E94F9E50)
  {
    sub_1A078D800(&qword_1E94F9E28);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94F9E50);
  }
  return result;
}

uint64_t sub_1A08A22C4(uint64_t a1)
{
  uint64_t result = sub_1A089C334(&qword_1E94F9E58, (void (*)(uint64_t))type metadata accessor for RemoteIntentFileListNode);
  *(void *)(a1 + _Block_object_dispose(&a9, 8) = result;
  return result;
}

uint64_t sub_1A08A231C()
{
  return sub_1A089C334(&qword_1E94F9E18, (void (*)(uint64_t))type metadata accessor for RemoteIntentFileListNode);
}

uint64_t sub_1A08A2364()
{
  return sub_1A089C334(&qword_1E94F9E40, (void (*)(uint64_t))type metadata accessor for RemoteIntentFileListNode);
}

uint64_t sub_1A08A23AC()
{
  return sub_1A089C334(&qword_1E94F9E60, (void (*)(uint64_t))type metadata accessor for RemoteIntentFileListNode);
}

uint64_t sub_1A08A23F4()
{
  return sub_1A089C334(&qword_1E94F9E58, (void (*)(uint64_t))type metadata accessor for RemoteIntentFileListNode);
}

uint64_t sub_1A08A243C()
{
  return sub_1A089C334(&qword_1E94F9E68, MEMORY[0x1E4F3C3D0]);
}

uint64_t sub_1A08A2484@<X0>(uint64_t *a1@<X8>)
{
  return sub_1A089C68C(a1);
}

uint64_t sub_1A08A24A4()
{
  return sub_1A089C7C8();
}

uint64_t sub_1A08A24D8@<X0>(uint64_t *a1@<X8>)
{
  return sub_1A089C68C(a1);
}

uint64_t sub_1A08A24F8()
{
  return sub_1A089C7C8();
}

unint64_t sub_1A08A252C@<X0>(uint64_t *a1@<X1>, unint64_t *a2@<X8>)
{
  unint64_t result = _s17IMSharedUtilities34RemoteIntentFilePersistedNodeStoreCyAA0cde4ListG0CSgSScig_0(*a1, a1[1]);
  *a2 = result;
  return result;
}

uint64_t sub_1A08A2560()
{
  return 0;
}

uint64_t sub_1A08A2570@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1 + 24;
  swift_beginAccess();
  return sub_1A0883D94(v3, a2);
}

uint64_t type metadata accessor for RemoteIntentFilePersistedNodeStore()
{
  return self;
}

uint64_t method lookup function for RemoteIntentFilePersistedNodeStore(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for RemoteIntentFilePersistedNodeStore);
}

uint64_t dispatch thunk of RemoteIntentFilePersistedNodeStore.__allocating_init(configuration:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t sub_1A08A2628()
{
  return type metadata accessor for PersistedListModel(0);
}

uint64_t sub_1A08A2630()
{
  uint64_t result = sub_1A09F3508();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1A08A26DC()
{
  return type metadata accessor for RemoteIntentFileListNode(0);
}

uint64_t sub_1A08A26E4()
{
  uint64_t result = sub_1A09F3508();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for RemoteIntentFileListNode(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for RemoteIntentFileListNode);
}

uint64_t dispatch thunk of RemoteIntentFileListNode.__allocating_init(key:value:)()
{
  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t dispatch thunk of RemoteIntentFileListNode.__allocating_init(backingData:)()
{
  return (*(uint64_t (**)(void))(v0 + 136))();
}

ValueMetadata *type metadata accessor for RemoteIntentFileListNode._SwiftDataNoType()
{
  return &type metadata for RemoteIntentFileListNode._SwiftDataNoType;
}

ValueMetadata *type metadata accessor for PersistedListModel._SwiftDataNoType()
{
  return &type metadata for PersistedListModel._SwiftDataNoType;
}

uint64_t sub_1A08A2800()
{
  return sub_1A089C334(&qword_1E94F9E90, (void (*)(uint64_t))type metadata accessor for PersistedListModel);
}

uint64_t sub_1A08A2848()
{
  return sub_1A089C334((unint64_t *)&unk_1E94FE470, (void (*)(uint64_t))type metadata accessor for PersistedListModel);
}

uint64_t sub_1A08A2890()
{
  return sub_1A089C334(&qword_1E94F9E98, (void (*)(uint64_t))type metadata accessor for PersistedListModel);
}

uint64_t sub_1A08A28D8()
{
  return sub_1A089C334(&qword_1E94F9EA0, (void (*)(uint64_t))type metadata accessor for PersistedListModel);
}

uint64_t sub_1A08A2920(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1A078D800(&qword_1E94F9E28);
    sub_1A087B3D8(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1A08A29A0@<X0>(uint64_t *a1@<X8>)
{
  return sub_1A089DBF4(*(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

unint64_t sub_1A08A29A8()
{
  unint64_t result = qword_1E94F9EE8;
  if (!qword_1E94F9EE8)
  {
    sub_1A078D800(&qword_1E94F9EE0);
    sub_1A08A2A18();
    sub_1A08A2A98();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94F9EE8);
  }
  return result;
}

unint64_t sub_1A08A2A18()
{
  unint64_t result = qword_1E94F9EF0;
  if (!qword_1E94F9EF0)
  {
    sub_1A078D800(&qword_1E94F9EC0);
    sub_1A0792558(&qword_1E94F9EF8, &qword_1E94F9EC8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94F9EF0);
  }
  return result;
}

unint64_t sub_1A08A2A98()
{
  unint64_t result = qword_1E94F9F00;
  if (!qword_1E94F9F00)
  {
    sub_1A078D800(&qword_1E94F9ED8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94F9F00);
  }
  return result;
}

uint64_t sub_1A08A2B00()
{
  return sub_1A089ED58();
}

uint64_t sub_1A08A2B18()
{
  return sub_1A089F23C();
}

uint64_t sub_1A08A2B30()
{
  return sub_1A08A1FF0();
}

uint64_t sub_1A08A2B48()
{
  return sub_1A08A201C();
}

uint64_t sub_1A08A2B60()
{
  return sub_1A08A1C58();
}

uint64_t sub_1A08A2B78()
{
  return sub_1A08A1C38();
}

uint64_t static NSXPCInterface.prewarmMessagesInterfaces()()
{
  if (qword_1EB4A5B88 != -1) {
    uint64_t result = swift_once();
  }
  if (qword_1EB4A5BF0 != -1)
  {
    return swift_once();
  }
  return result;
}

id sub_1A08A2C50(uint64_t a1, uint64_t a2, void *a3)
{
  if (*(void *)(a1 + *a3 + 8))
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = (void *)sub_1A09F3DE8();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v3 = 0;
  }

  return v3;
}

void __swiftcall IMActionCalendar.init(dictionary:)(IMActionCalendar_optional *__return_ptr retstr, Swift::OpaquePointer dictionary)
{
  id v2 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  uint64_t v3 = (void *)sub_1A09F3CE8();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_initWithDictionary_, v3);
}

id IMActionCalendar.init(dictionary:)(uint64_t a1)
{
  id v2 = v1;
  if (!*(void *)(a1 + 16)) {
    goto LABEL_17;
  }
  unint64_t v4 = sub_1A087AAA4(0x6D69547472617473, 0xE900000000000065);
  if ((v5 & 1) == 0) {
    goto LABEL_17;
  }
  sub_1A0785268(*(void *)(a1 + 56) + 32 * v4, (uint64_t)&v21);
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_17;
  }
  if (!*(void *)(a1 + 16)) {
    goto LABEL_16;
  }
  unint64_t v6 = sub_1A087AAA4(0x656D6954646E65, 0xE700000000000000);
  if ((v7 & 1) == 0) {
    goto LABEL_16;
  }
  sub_1A0785268(*(void *)(a1 + 56) + 32 * v6, (uint64_t)&v21);
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_16;
  }
  if (*(void *)(a1 + 16))
  {
    unint64_t v8 = sub_1A087AAA4(0x656C746974, 0xE500000000000000);
    if (v9)
    {
      sub_1A0785268(*(void *)(a1 + 56) + 32 * v8, (uint64_t)&v21);
      if (swift_dynamicCast())
      {
        int64_t v10 = (void *)sub_1A09F3DE8();
        swift_bridgeObjectRelease();
        unint64_t v11 = (void *)sub_1A09F3DE8();
        swift_bridgeObjectRelease();
        uint64_t v12 = (void *)sub_1A09F3DE8();
        swift_bridgeObjectRelease();
        if (*(void *)(a1 + 16)
          && (unint64_t v13 = sub_1A087AAA4(0x72637365446C6163, 0xEE006E6F69747069), (v14 & 1) != 0)
          && (sub_1A0785268(*(void *)(a1 + 56) + 32 * v13, (uint64_t)&v21), (swift_dynamicCast() & 1) != 0))
        {
          int64_t v15 = (void *)sub_1A09F3DE8();
          swift_bridgeObjectRelease();
        }
        else
        {
          int64_t v15 = 0;
        }
        if (*(void *)(a1 + 16) && (unint64_t v18 = sub_1A087AAA4(0x6B6361626C6C6166, 0xEB000000006C7255), (v19 & 1) != 0))
        {
          sub_1A0785268(*(void *)(a1 + 56) + 32 * v18, (uint64_t)&v21);
        }
        else
        {
          long long v21 = 0u;
          long long v22 = 0u;
        }
        swift_bridgeObjectRelease();
        if (*((void *)&v22 + 1))
        {
          if (swift_dynamicCast())
          {
            uint64_t v20 = (void *)sub_1A09F3DE8();
            swift_bridgeObjectRelease();
LABEL_29:
            id v16 = objc_msgSend(v2, sel_initWithStartTime_endTime_title_calDescription_fallbackUrl_, v10, v11, v12, v15, v20);

            return v16;
          }
        }
        else
        {
          sub_1A0783C7C((uint64_t)&v21);
        }
        uint64_t v20 = 0;
        goto LABEL_29;
      }
      swift_bridgeObjectRelease();
LABEL_16:
      swift_bridgeObjectRelease();
      goto LABEL_17;
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_17:
  swift_bridgeObjectRelease();
  swift_getObjectType();
  swift_deallocPartialClassInstance();
  return 0;
}

uint64_t sub_1A08A3218()
{
  sub_1A07856F8(&qword_1E94F97B8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1A0A0AED0;
  *(void *)(inited + 32) = 0x6D69547472617473;
  *(void *)(inited + 40) = 0xE900000000000065;
  id v2 = objc_msgSend(v0, sel_startTime);
  uint64_t v3 = sub_1A09F3E18();
  uint64_t v5 = v4;

  uint64_t v6 = MEMORY[0x1E4FBB1A0];
  *(void *)(inited + 4_Block_object_dispose(&a9, 8) = v3;
  *(void *)(inited + 56) = v5;
  *(void *)(inited + 72) = v6;
  *(void *)(inited + 80) = 0x656D6954646E65;
  *(void *)(inited + 8_Block_object_dispose(&a9, 8) = 0xE700000000000000;
  id v7 = objc_msgSend(v0, sel_endTime);
  uint64_t v8 = sub_1A09F3E18();
  uint64_t v10 = v9;

  *(void *)(inited + 96) = v8;
  *(void *)(inited + 104) = v10;
  *(void *)(inited + 120) = v6;
  *(void *)(inited + 12_Block_object_dispose(&a9, 8) = 0x656C746974;
  *(void *)(inited + 136) = 0xE500000000000000;
  id v11 = objc_msgSend(v0, sel_title);
  uint64_t v12 = sub_1A09F3E18();
  uint64_t v14 = v13;

  *(void *)(inited + 144) = v12;
  *(void *)(inited + 152) = v14;
  *(void *)(inited + 16_Block_object_dispose(&a9, 8) = v6;
  strcpy((char *)(inited + 176), "calDescription");
  *(unsigned char *)(inited + 191) = -18;
  id v15 = objc_msgSend(v0, sel_calDescription);
  if (v15)
  {
    id v16 = v15;
    uint64_t v17 = sub_1A09F3E18();
    uint64_t v19 = v18;

    uint64_t v20 = MEMORY[0x1E4FBB1A0];
  }
  else
  {
    uint64_t v17 = 0;
    uint64_t v19 = 0;
    uint64_t v20 = 0;
    *(void *)(inited + 20_Block_object_dispose(&a9, 8) = 0;
  }
  *(void *)(inited + 192) = v17;
  *(void *)(inited + 200) = v19;
  *(void *)(inited + 216) = v20;
  *(void *)(inited + 2++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = 0x6B6361626C6C6166;
  *(void *)(inited + 232) = 0xEB000000006C7255;
  id v21 = objc_msgSend(v0, sel_fallbackUrl);
  if (v21)
  {
    long long v22 = v21;
    uint64_t v23 = sub_1A09F3E18();
    uint64_t v25 = v24;

    uint64_t v26 = MEMORY[0x1E4FBB1A0];
  }
  else
  {
    uint64_t v23 = 0;
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    *(void *)(inited + 256) = 0;
  }
  *(void *)(inited + 240) = v23;
  *(void *)(inited + 24_Block_object_dispose(&a9, 8) = v25;
  *(void *)(inited + 264) = v26;
  unint64_t v27 = sub_1A08D76DC(inited);
  uint64_t v28 = sub_1A09BE198(v27);
  swift_bridgeObjectRelease();
  return v28;
}

void __swiftcall IMActionCalendar.init()(IMActionCalendar *__return_ptr retstr)
{
  id v1 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());

  objc_msgSend(v1, sel_init);
}

void IMActionCalendar.init()()
{
}

unint64_t type metadata accessor for IMActionCalendar()
{
  unint64_t result = qword_1E94FA7A0;
  if (!qword_1E94FA7A0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1E94FA7A0);
  }
  return result;
}

uint64_t RemoteIntentBroadcastCache.__allocating_init(limit:)(uint64_t a1)
{
  uint64_t result = swift_allocObject();
  uint64_t v3 = MEMORY[0x1E4FBC860];
  *(void *)(result + 16) = a1;
  *(void *)(result + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = v3;
  return result;
}

uint64_t sub_1A08A368C()
{
  uint64_t v0 = sub_1A09F39E8();
  sub_1A078D848(v0, qword_1E94FA7A8);
  sub_1A078510C(v0, (uint64_t)qword_1E94FA7A8);
  return sub_1A09F39D8();
}

uint64_t RemoteIntentBroadcastCache.init(limit:)(uint64_t a1)
{
  uint64_t v2 = MEMORY[0x1E4FBC860];
  *(void *)(v1 + 16) = a1;
  *(void *)(v1 + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = v2;
  return v1;
}

void sub_1A08A3720(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = (uint64_t **)(v1 + 24);
  swift_beginAccess();
  uint64_t v5 = *(void *)(v1 + 16);
  if (*(void *)(*(void *)(v1 + 24) + 16) >= v5)
  {
    if (qword_1E94F84F8 != -1) {
      swift_once();
    }
    uint64_t v6 = sub_1A09F39E8();
    sub_1A078510C(v6, (uint64_t)qword_1E94FA7A8);
    swift_retain();
    id v7 = sub_1A09F39C8();
    os_log_type_t v8 = sub_1A09F4358();
    if (os_log_type_enabled(v7, v8))
    {
      uint64_t v9 = swift_slowAlloc();
      *(_DWORD *)uint64_t v9 = 134218240;
      *(void *)&long long v26 = v5;
      sub_1A09F4528();
      *(_WORD *)(v9 + 12) = 2048;
      *(void *)&long long v26 = *(void *)(*(void *)(v2 + 24) + 16);
      sub_1A09F4528();
      swift_release();
      _os_log_impl(&dword_1A0772000, v7, v8, "RemoteIntentBroadcastPayloadCache hit limit: %ld currentCount:%ld. Pruning to the limit.", (uint8_t *)v9, 0x16u);
      MEMORY[0x1A6228C20](v9, -1, -1);
    }
    else
    {

      swift_release();
    }
  }
  if ((*v4)[2] < v5)
  {
LABEL_15:
    sub_1A0883D94(a1, (uint64_t)&v26);
    swift_beginAccess();
    uint64_t v10 = *v4;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    void *v4 = v10;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
LABEL_24:
      uint64_t v10 = sub_1A0891644(0, v10[2] + 1, 1, v10);
      void *v4 = v10;
    }
    unint64_t v17 = v10[2];
    unint64_t v16 = v10[3];
    if (v17 >= v16 >> 1)
    {
      uint64_t v10 = sub_1A0891644((void *)(v16 > 1), v17 + 1, 1, v10);
      void *v4 = v10;
    }
    void v10[2] = v17 + 1;
    sub_1A089266C(&v26, (uint64_t)&v10[5 * v17 + 4]);
    swift_endAccess();
    if (qword_1E94F84F8 != -1) {
      swift_once();
    }
    uint64_t v18 = sub_1A09F39E8();
    sub_1A078510C(v18, (uint64_t)qword_1E94FA7A8);
    sub_1A0883D94(a1, (uint64_t)&v26);
    swift_retain_n();
    uint64_t v19 = sub_1A09F39C8();
    os_log_type_t v20 = sub_1A09F4358();
    if (os_log_type_enabled(v19, v20))
    {
      uint64_t v21 = swift_slowAlloc();
      uint64_t v22 = swift_slowAlloc();
      v25[0] = v22;
      *(_DWORD *)uint64_t v21 = 136315650;
      sub_1A0785144(0x293A5F2868737570, 0xE800000000000000, v25);
      sub_1A09F4528();
      *(_WORD *)(v21 + 12) = 2080;
      sub_1A086F45C(&v26, v27);
      swift_getDynamicType();
      uint64_t v23 = sub_1A09F4D08();
      sub_1A0785144(v23, v24, v25);
      sub_1A09F4528();
      swift_bridgeObjectRelease();
      _s17IMSharedUtilities29RemoteIntentBroadcastEncodingVwxx_0((uint64_t)&v26);
      *(_WORD *)(v21 + 22) = 2048;
      swift_release();
      sub_1A09F4528();
      swift_release();
      _os_log_impl(&dword_1A0772000, v19, v20, "%s cached a new payload of type: %s. Current payload count: %ld", (uint8_t *)v21, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x1A6228C20](v22, -1, -1);
      MEMORY[0x1A6228C20](v21, -1, -1);
    }
    else
    {
      swift_release();
      _s17IMSharedUtilities29RemoteIntentBroadcastEncodingVwxx_0((uint64_t)&v26);

      swift_release();
    }
  }
  else
  {
    uint64_t v10 = &qword_1E94F9BB8;
    while (1)
    {
      swift_beginAccess();
      id v11 = *v4;
      int64_t v12 = (*v4)[2];
      if (!v12)
      {
        __break(1u);
        goto LABEL_24;
      }
      uint64_t v13 = (void *)swift_isUniquelyReferenced_nonNull_native();
      if (!v13 || v12 - 1 > (unint64_t)v11[3] >> 1) {
        id v11 = sub_1A0891644(v13, v12, 1, v11);
      }
      sub_1A07856F8(&qword_1E94F9BB8);
      swift_arrayDestroy();
      uint64_t v14 = v11[2];
      if (!v14) {
        break;
      }
      memmove(v11 + 4, v11 + 9, 40 * v14 - 40);
      void v11[2] = v14 - 1;
      void *v4 = v11;
      swift_endAccess();
      if ((*v4)[2] < v5) {
        goto LABEL_15;
      }
    }
    sub_1A09F47F8();
    __break(1u);
  }
}

uint64_t sub_1A08A3C88(uint64_t a1, uint64_t a2)
{
  long long v26 = (void **)(v2 + 24);
  swift_beginAccess();
  uint64_t v5 = swift_bridgeObjectRetain();
  uint64_t v6 = sub_1A08A4008(v5);
  unint64_t v7 = 0;
  unint64_t v8 = *(void *)(v6 + 16);
  uint64_t v28 = v6 + 32;
  uint64_t v29 = v6;
  uint64_t v27 = (void *)MEMORY[0x1E4FBC860];
  while (1)
  {
    if (v7 == v8)
    {
      long long v33 = 0u;
      long long v34 = 0u;
      unint64_t v9 = v8;
      long long v32 = 0u;
      goto LABEL_8;
    }
    if (v7 >= *(void *)(v29 + 16)) {
      break;
    }
    sub_1A08A4334(v28 + 48 * v7, (uint64_t)&v32);
    unint64_t v9 = v7 + 1;
LABEL_8:
    sub_1A08A439C((uint64_t)&v32, (uint64_t)&v35);
    if (!v37)
    {
      swift_bridgeObjectRelease();
      return sub_1A08A4134((uint64_t)v27);
    }
    unint64_t v30 = v9;
    unint64_t v10 = v35;
    sub_1A089266C(&v36, (uint64_t)&v32);
    sub_1A086F45C(&v32, *((uint64_t *)&v33 + 1));
    swift_getDynamicType();
    (*(void (**)(void))(v34 + 40))();
    swift_getAssociatedTypeWitness();
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    uint64_t v12 = a1;
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 16);
    uint64_t v14 = swift_checkMetadataState();
    uint64_t v15 = v13(v14, AssociatedConformanceWitness);
    a1 = v12;
    if (v15 == v12 && v16 == a2)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      char v18 = sub_1A09F4B28();
      swift_bridgeObjectRelease();
      if ((v18 & 1) == 0) {
        goto LABEL_3;
      }
    }
    swift_beginAccess();
    uint64_t v19 = *v26;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *long long v26 = v19;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      uint64_t v19 = sub_1A08A4404(v19);
      *long long v26 = v19;
    }
    unint64_t v21 = v19[2];
    if (v10 >= v21) {
      goto LABEL_26;
    }
    unint64_t v22 = v21 - 1;
    sub_1A089266C((long long *)&v19[5 * v10 + 4], (uint64_t)v31);
    if ((uint64_t)(v22 - v10) < 0) {
      goto LABEL_27;
    }
    memmove(&v19[5 * v10 + 4], &v19[5 * v10 + 9], 40 * (v22 - v10));
    _OWORD v19[2] = v22;
    *long long v26 = v19;
    swift_endAccess();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v27 = sub_1A0891644(0, v27[2] + 1, 1, v27);
    }
    unint64_t v24 = v27[2];
    unint64_t v23 = v27[3];
    if (v24 >= v23 >> 1) {
      uint64_t v27 = sub_1A0891644((void *)(v23 > 1), v24 + 1, 1, v27);
    }
    v27[2] = v24 + 1;
    sub_1A089266C(v31, (uint64_t)&v27[5 * v24 + 4]);
LABEL_3:
    _s17IMSharedUtilities29RemoteIntentBroadcastEncodingVwxx_0((uint64_t)&v32);
    unint64_t v7 = v30;
  }
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  uint64_t result = sub_1A09F47F8();
  __break(1u);
  return result;
}

uint64_t sub_1A08A4008(uint64_t a1)
{
  uint64_t v1 = (void *)sub_1A08A442C(a1);
  unint64_t v2 = v1[2];
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 < 2) {
    return (uint64_t)v1;
  }
  unint64_t v4 = 0;
  unint64_t v5 = v2 >> 1;
  unint64_t v6 = v2 - 1;
  uint64_t v7 = 48 * v2 - 16;
  for (uint64_t i = 4; ; i += 6)
  {
    if (v4 == v6) {
      goto LABEL_4;
    }
    unint64_t v9 = v1[2];
    if (v4 >= v9) {
      break;
    }
    uint64_t result = sub_1A08A4334((uint64_t)&v1[i], (uint64_t)v11);
    if (v6 >= v9) {
      goto LABEL_14;
    }
    sub_1A08A4334((uint64_t)v1 + v7, (uint64_t)v10);
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_1A08A4418(v1);
      uint64_t v1 = (void *)result;
    }
    if (v4 >= v1[2]) {
      goto LABEL_15;
    }
    uint64_t result = sub_1A08A4610((uint64_t)v10, (uint64_t)&v1[i]);
    if (v6 >= v1[2]) {
      goto LABEL_16;
    }
    uint64_t result = sub_1A08A4610((uint64_t)v11, (uint64_t)v1 + v7);
LABEL_4:
    ++v4;
    --v6;
    v7 -= 48;
    if (v5 == v4) {
      return (uint64_t)v1;
    }
  }
  __break(1u);
LABEL_14:
  __break(1u);
LABEL_15:
  __break(1u);
LABEL_16:
  __break(1u);
  return result;
}

uint64_t sub_1A08A4134(uint64_t result)
{
  uint64_t v1 = (void *)result;
  unint64_t v2 = *(void *)(result + 16);
  if (v2 < 2) {
    return (uint64_t)v1;
  }
  unint64_t v3 = 0;
  unint64_t v4 = v2 >> 1;
  unint64_t v5 = v2 - 1;
  uint64_t v6 = 40 * v2 - 8;
  for (uint64_t i = 4; ; i += 5)
  {
    if (v3 == v5) {
      goto LABEL_4;
    }
    unint64_t v8 = v1[2];
    if (v3 >= v8) {
      break;
    }
    uint64_t result = sub_1A0883D94((uint64_t)&v1[i], (uint64_t)v10);
    if (v5 >= v8) {
      goto LABEL_14;
    }
    sub_1A0883D94((uint64_t)v1 + v6, (uint64_t)v9);
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_1A08A4404(v1);
      uint64_t v1 = (void *)result;
    }
    if (v3 >= v1[2]) {
      goto LABEL_15;
    }
    _s17IMSharedUtilities29RemoteIntentBroadcastEncodingVwxx_0((uint64_t)&v1[i]);
    uint64_t result = sub_1A089266C(v9, (uint64_t)&v1[i]);
    if (v5 >= v1[2]) {
      goto LABEL_16;
    }
    _s17IMSharedUtilities29RemoteIntentBroadcastEncodingVwxx_0((uint64_t)v1 + v6);
    uint64_t result = sub_1A089266C(v10, (uint64_t)v1 + v6);
LABEL_4:
    ++v3;
    --v5;
    v6 -= 40;
    if (v4 == v3) {
      return (uint64_t)v1;
    }
  }
  __break(1u);
LABEL_14:
  __break(1u);
LABEL_15:
  __break(1u);
LABEL_16:
  __break(1u);
  return result;
}

uint64_t RemoteIntentBroadcastCache.deinit()
{
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t RemoteIntentBroadcastCache.__deallocating_deinit()
{
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for RemoteIntentBroadcastCache()
{
  return self;
}

uint64_t method lookup function for RemoteIntentBroadcastCache(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for RemoteIntentBroadcastCache);
}

uint64_t dispatch thunk of RemoteIntentBroadcastCache.__allocating_init(limit:)()
{
  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t dispatch thunk of RemoteIntentBroadcastCache.push(_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

uint64_t sub_1A08A4334(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1A07856F8(&qword_1E94F9B50);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A08A439C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1A07856F8(&qword_1E94FA7C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void *sub_1A08A4404(void *a1)
{
  return sub_1A0891644(0, a1[2], 0, a1);
}

void *sub_1A08A4418(void *a1)
{
  return sub_1A0891658(0, a1[2], 0, a1);
}

uint64_t sub_1A08A442C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = swift_bridgeObjectRetain();
  unint64_t v3 = (void *)MEMORY[0x1E4FBC860];
  if (v1)
  {
    uint64_t v4 = 0;
    uint64_t v5 = 0;
    uint64_t v6 = v2 + 32;
    uint64_t v7 = (_OWORD *)(MEMORY[0x1E4FBC860] + 32);
    while (1)
    {
      sub_1A0883D94(v6, (uint64_t)v24);
      *(void *)&v25[0] = v4;
      uint64_t result = sub_1A089266C(v24, (uint64_t)v25 + 8);
      long long v26 = v25[0];
      long long v27 = v25[1];
      long long v28 = v25[2];
      if (!v5)
      {
        unint64_t v9 = v3[3];
        if ((uint64_t)((v9 >> 1) + 0x4000000000000000) < 0) {
          goto LABEL_26;
        }
        uint64_t v10 = v1;
        int64_t v11 = v9 & 0xFFFFFFFFFFFFFFFELL;
        if (v11 <= 1) {
          uint64_t v12 = 1;
        }
        else {
          uint64_t v12 = v11;
        }
        sub_1A07856F8(&qword_1E94F9B48);
        uint64_t v13 = (void *)swift_allocObject();
        uint64_t v14 = (uint64_t)(j__malloc_size(v13) - 32) / 48;
        void v13[2] = v12;
        v13[3] = 2 * v14;
        unint64_t v15 = (unint64_t)(v13 + 4);
        uint64_t v16 = v3[3] >> 1;
        if (v3[2])
        {
          if (v13 != v3 || v15 >= (unint64_t)&v3[6 * v16 + 4]) {
            memmove(v13 + 4, v3 + 4, 48 * v16);
          }
          void v3[2] = 0;
        }
        uint64_t v7 = (_OWORD *)(v15 + 48 * v16);
        uint64_t v5 = (v14 & 0x7FFFFFFFFFFFFFFFLL) - v16;
        uint64_t result = swift_release();
        unint64_t v3 = v13;
        uint64_t v1 = v10;
      }
      BOOL v18 = __OFSUB__(v5--, 1);
      if (v18) {
        break;
      }
      ++v4;
      long long v19 = v26;
      long long v20 = v28;
      v7[1] = v27;
      _OWORD v7[2] = v20;
      *uint64_t v7 = v19;
      v7 += 3;
      v6 += 40;
      if (v1 == v4) {
        goto LABEL_21;
      }
    }
    __break(1u);
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  uint64_t v5 = 0;
LABEL_21:
  uint64_t result = swift_bridgeObjectRelease();
  unint64_t v21 = v3[3];
  if (v21 < 2) {
    return (uint64_t)v3;
  }
  unint64_t v22 = v21 >> 1;
  BOOL v18 = __OFSUB__(v22, v5);
  uint64_t v23 = v22 - v5;
  if (!v18)
  {
    void v3[2] = v23;
    return (uint64_t)v3;
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_1A08A4610(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1A07856F8(&qword_1E94F9B50);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A08A4678()
{
  uint64_t v0 = sub_1A09F39E8();
  sub_1A078D848(v0, qword_1E94FA7C8);
  sub_1A078510C(v0, (uint64_t)qword_1E94FA7C8);
  return sub_1A09F39D8();
}

uint64_t sub_1A08A46F8(uint64_t a1)
{
  *(void *)(v2 + 4_Block_object_dispose(&a9, 8) = a1;
  *(void *)(v2 + 56) = v1;
  return MEMORY[0x1F4188298](sub_1A08A4718, 0, 0);
}

uint64_t sub_1A08A4718()
{
  uint64_t v1 = v0[7];
  uint64_t v2 = sub_1A07856F8(&qword_1E94FA820);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = swift_task_alloc();
  sub_1A07856F8(&qword_1E94FA828);
  uint64_t v5 = swift_task_alloc();
  uint64_t v6 = v1 + OBJC_IVAR____TtC17IMSharedUtilities28RemoteIntentFileDownloadTask_result;
  swift_beginAccess();
  sub_1A0884370(v6, v5, &qword_1E94FA828);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v5, 1, v2) == 1)
  {
    sub_1A0784C08(v5, &qword_1E94FA828);
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v7 = (void *)swift_task_alloc();
    v0[8] = v7;
    uint64_t v8 = sub_1A09F33A8();
    *uint64_t v7 = v0;
    v7[1] = sub_1A08A4A5C;
    uint64_t v9 = v0[6];
    uint64_t v10 = v0[7];
    return MEMORY[0x1F4188160](v9, 0, 0, 7107189, 0xE300000000000000, sub_1A08AF508, v10, v8);
  }
  else
  {
    sub_1A08AF448(v5, v4, &qword_1E94FA820);
    swift_task_dealloc();
    int64_t v11 = (void *)swift_task_alloc();
    sub_1A0884370(v4, (uint64_t)v11, &qword_1E94FA820);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v0[5] = *v11;
      sub_1A07856F8((uint64_t *)&unk_1EB4A5620);
      swift_willThrowTypedImpl();
    }
    else
    {
      uint64_t v13 = v0[6];
      uint64_t v14 = sub_1A09F33A8();
      (*(void (**)(uint64_t, void *, uint64_t))(*(void *)(v14 - 8) + 32))(v13, v11, v14);
    }
    sub_1A0784C08(v4, &qword_1E94FA820);
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v12 = (uint64_t (*)(void))v0[1];
    return v12();
  }
}

uint64_t sub_1A08A4A5C()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 72) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x1F4188298](sub_1A08A4B90, 0, 0);
  }
  else
  {
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_1A08A4B90()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1A08A4BA8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1A07856F8(&qword_1E94F9B70);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  uint64_t v8 = (unint64_t *)(a2 + OBJC_IVAR____TtC17IMSharedUtilities28RemoteIntentFileDownloadTask_continuations);
  swift_beginAccess();
  unint64_t v9 = *v8;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  unint64_t *v8 = v9;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    unint64_t v9 = sub_1A0891A84(0, *(void *)(v9 + 16) + 1, 1, v9);
    unint64_t *v8 = v9;
  }
  unint64_t v12 = *(void *)(v9 + 16);
  unint64_t v11 = *(void *)(v9 + 24);
  if (v12 >= v11 >> 1)
  {
    unint64_t v9 = sub_1A0891A84(v11 > 1, v12 + 1, 1, v9);
    unint64_t *v8 = v9;
  }
  *(void *)(v9 + 16) = v12 + 1;
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v9+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(void *)(v5 + 72) * v12, v7, v4);
  return swift_endAccess();
}

uint64_t sub_1A08A4D50(uint64_t (*a1)(void, void, void))
{
  uint64_t v2 = v1;
  unint64_t v55 = a1;
  uint64_t v3 = sub_1A07856F8(&qword_1E94FA820);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = v6;
  MEMORY[0x1F4188790](v5);
  unint64_t v9 = (char *)v47 - v8;
  uint64_t v10 = sub_1A07856F8(&qword_1E94FA828);
  uint64_t v11 = *(void *)(*(void *)(v10 - 8) + 64);
  MEMORY[0x1F4188790](v10 - 8);
  unint64_t v12 = (v11 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v13 = v2 + OBJC_IVAR____TtC17IMSharedUtilities28RemoteIntentFileDownloadTask_result;
  swift_beginAccess();
  sub_1A0884370(v13, (uint64_t)v47 - v12, &qword_1E94FA828);
  int v14 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v4 + 48))((char *)v47 - v12, 1, v3);
  uint64_t v49 = v3;
  if (v14 == 1)
  {
    uint64_t v15 = sub_1A0784C08((uint64_t)v47 - v12, &qword_1E94FA828);
    MEMORY[0x1F4188790](v15);
    uint64_t v16 = v55;
    sub_1A0884370((uint64_t)v55, (uint64_t)v47 - v12, &qword_1E94FA820);
    uint64_t v17 = (*(uint64_t (**)(char *, void, uint64_t, uint64_t))(v4 + 56))((char *)v47 - v12, 0, 1, v3);
    MEMORY[0x1F4188790](v17);
    sub_1A08AF448((uint64_t)v47 - v12, (uint64_t)v47 - v12, &qword_1E94FA828);
    swift_beginAccess();
    sub_1A08AF3E0((uint64_t)v47 - v12, v13);
    swift_endAccess();
    sub_1A0884370((uint64_t)v16, (uint64_t)v7, &qword_1E94FA820);
    BOOL v18 = (uint64_t (*)(void, void, void))v7;
  }
  else
  {
    unint64_t v55 = (uint64_t (*)(void, void, void))v7;
    sub_1A08AF448((uint64_t)v47 - v12, (uint64_t)v9, &qword_1E94FA820);
    uint64_t v19 = v2 + OBJC_IVAR____TtC17IMSharedUtilities28RemoteIntentFileDownloadTask_remoteFile;
    long long v20 = (uint64_t *)(v19 + *(int *)(type metadata accessor for RemoteIntentMirrorFileRepresentation(0) + 24));
    uint64_t v21 = *v20;
    unint64_t v22 = v20[1];
    uint64_t v23 = qword_1E94F8500;
    swift_bridgeObjectRetain();
    if (v23 != -1) {
      swift_once();
    }
    uint64_t v24 = sub_1A09F39E8();
    sub_1A078510C(v24, (uint64_t)qword_1E94FA7C8);
    swift_bridgeObjectRetain();
    uint64_t v25 = sub_1A09F39C8();
    os_log_type_t v26 = sub_1A09F4378();
    if (os_log_type_enabled(v25, v26))
    {
      long long v27 = (uint8_t *)swift_slowAlloc();
      uint64_t v28 = swift_slowAlloc();
      v58[0] = v28;
      *(_DWORD *)long long v27 = 136315138;
      swift_bridgeObjectRetain();
      uint64_t v57 = sub_1A0785144(v21, v22, v58);
      sub_1A09F4528();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1A0772000, v25, v26, "Task for %s is already complete, but we attempted to complete it again with a new result. This is a programmer error.", v27, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1A6228C20](v28, -1, -1);
      MEMORY[0x1A6228C20](v27, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    BOOL v18 = v55;
    sub_1A08AF448((uint64_t)v9, (uint64_t)v55, &qword_1E94FA820);
  }
  if (*(void *)(v2 + OBJC_IVAR____TtC17IMSharedUtilities28RemoteIntentFileDownloadTask_activeTask))
  {
    swift_retain();
    sub_1A07856F8(&qword_1E94FA830);
    sub_1A07856F8((uint64_t *)&unk_1EB4A5620);
    sub_1A09F4258();
    swift_release();
  }
  uint64_t v29 = (uint64_t *)(v2 + OBJC_IVAR____TtC17IMSharedUtilities28RemoteIntentFileDownloadTask_continuations);
  swift_beginAccess();
  uint64_t v30 = *v29;
  uint64_t v31 = *(void *)(*v29 + 16);
  if (v31)
  {
    uint64_t v48 = v29;
    uint64_t v32 = sub_1A07856F8(&qword_1E94F9B70);
    uint64_t v33 = *(void *)(v32 - 8);
    long long v34 = *(uint64_t (**)(void, void, void))(v33 + 16);
    uint64_t v54 = v33 + 16;
    unint64_t v55 = v34;
    uint64_t v35 = v30 + ((*(unsigned __int8 *)(v33 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80));
    uint64_t v36 = *(void *)(v33 + 72);
    uint64_t v52 = *(void *)(v33 + 64);
    uint64_t v53 = v36;
    os_log_type_t v51 = (uint64_t (**)(char *, uint64_t))(v33 + 8);
    v47[1] = v30;
    uint64_t v37 = swift_bridgeObjectRetain();
    do
    {
      MEMORY[0x1F4188790](v37);
      uint64_t v39 = (char *)v47 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
      uint64_t v40 = v55(v39, v35, v32);
      MEMORY[0x1F4188790](v40);
      char v42 = (void *)((char *)v47 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0));
      sub_1A0884370((uint64_t)v18, (uint64_t)v42, &qword_1E94FA820);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v57 = *v42;
        sub_1A09F4118();
      }
      else
      {
        uint64_t v43 = sub_1A09F33A8();
        uint64_t v50 = v47;
        MEMORY[0x1F4188790](v43);
        (*(void (**)(char *, uint64_t *))(v45 + 32))((char *)v47 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0), v42);
        sub_1A09F4128();
      }
      uint64_t v37 = (*v51)(v39, v32);
      v35 += v53;
      --v31;
    }
    while (v31);
    swift_bridgeObjectRelease();
    uint64_t v29 = v48;
  }
  sub_1A0784C08((uint64_t)v18, &qword_1E94FA820);
  *uint64_t v29 = MEMORY[0x1E4FBC860];
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A08A544C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[15] = a3;
  uint8_t v4[16] = v3;
  v4[13] = a1;
  v4[14] = a2;
  uint64_t v5 = type metadata accessor for RemoteIntentMirrorFileRepresentation(0);
  v4[17] = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  v4[18] = v6;
  v4[19] = *(void *)(v6 + 64);
  v4[20] = swift_task_alloc();
  sub_1A07856F8(&qword_1EB4A5650);
  v4[21] = swift_task_alloc();
  if (qword_1E94F8658 != -1) {
    swift_once();
  }
  uint64_t v7 = qword_1E94FE320;
  v4[22] = qword_1E94FE320;
  return MEMORY[0x1F4188298](sub_1A08A5580, v7, 0);
}

uint64_t sub_1A08A5580()
{
  uint64_t v136 = v0;
  uint64_t v1 = *(void *)(v0 + 128);
  uint64_t v2 = OBJC_IVAR____TtC17IMSharedUtilities28RemoteIntentFileDownloadTask_activeTask;
  *(void *)(v0 + 184) = OBJC_IVAR____TtC17IMSharedUtilities28RemoteIntentFileDownloadTask_activeTask;
  if (*(void *)(v1 + v2))
  {
    uint64_t v3 = (uint64_t *)(v1
                   + OBJC_IVAR____TtC17IMSharedUtilities28RemoteIntentFileDownloadTask_remoteFile
                   + *(int *)(*(void *)(v0 + 136) + 24));
    uint64_t v5 = *v3;
    unint64_t v4 = v3[1];
    uint64_t v6 = qword_1E94F8500;
    swift_bridgeObjectRetain();
    if (v6 != -1) {
      swift_once();
    }
    uint64_t v7 = sub_1A09F39E8();
    sub_1A078510C(v7, (uint64_t)qword_1E94FA7C8);
    swift_bridgeObjectRetain();
    uint64_t v8 = sub_1A09F39C8();
    os_log_type_t v9 = sub_1A09F4378();
    if (os_log_type_enabled(v8, v9))
    {
      uint64_t v10 = (uint8_t *)swift_slowAlloc();
      uint64_t v11 = swift_slowAlloc();
      v135[0] = v11;
      *(_DWORD *)uint64_t v10 = 136315138;
      swift_bridgeObjectRetain();
      *(void *)(v0 + 40) = sub_1A0785144(v5, v4, v135);
      sub_1A09F4528();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1A0772000, v8, v9, "download[%s]: Task is already in progress. It's a programmer error to attempt to start again.", v10, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1A6228C20](v11, -1, -1);
      MEMORY[0x1A6228C20](v10, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    sub_1A08AD488();
    swift_allocError();
    char v26 = 3;
LABEL_16:
    char *v25 = v26;
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v36 = *(uint64_t (**)(void))(v0 + 8);
    return v36();
  }
  sub_1A07856F8(&qword_1E94FA828);
  uint64_t v12 = swift_task_alloc();
  uint64_t v13 = v1 + OBJC_IVAR____TtC17IMSharedUtilities28RemoteIntentFileDownloadTask_result;
  swift_beginAccess();
  sub_1A0884370(v13, v12, &qword_1E94FA828);
  uint64_t v14 = sub_1A07856F8(&qword_1E94FA820);
  int v15 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48))(v12, 1, v14);
  sub_1A0784C08(v12, &qword_1E94FA828);
  swift_task_dealloc();
  if (v15 != 1)
  {
    long long v27 = (uint64_t *)(*(void *)(v0 + 128)
                    + OBJC_IVAR____TtC17IMSharedUtilities28RemoteIntentFileDownloadTask_remoteFile
                    + *(int *)(*(void *)(v0 + 136) + 24));
    uint64_t v29 = *v27;
    unint64_t v28 = v27[1];
    uint64_t v30 = qword_1E94F8500;
    swift_bridgeObjectRetain();
    if (v30 != -1) {
      swift_once();
    }
    uint64_t v31 = sub_1A09F39E8();
    sub_1A078510C(v31, (uint64_t)qword_1E94FA7C8);
    swift_bridgeObjectRetain();
    uint64_t v32 = sub_1A09F39C8();
    os_log_type_t v33 = sub_1A09F4378();
    if (os_log_type_enabled(v32, v33))
    {
      long long v34 = (uint8_t *)swift_slowAlloc();
      uint64_t v35 = swift_slowAlloc();
      v135[0] = v35;
      *(_DWORD *)long long v34 = 136315138;
      swift_bridgeObjectRetain();
      *(void *)(v0 + 96) = sub_1A0785144(v29, v28, v135);
      sub_1A09F4528();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1A0772000, v32, v33, "download[%s]: Task is already complete. It's a programmer error to attempt to start a download for this task again.", v34, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1A6228C20](v35, -1, -1);
      MEMORY[0x1A6228C20](v34, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    sub_1A08AD488();
    swift_allocError();
    char v26 = 4;
    goto LABEL_16;
  }
  uint64_t v132 = v2;
  uint64_t v133 = v1;
  uint64_t v16 = *(void *)(v0 + 128);
  uint64_t v17 = (int *)sub_1A07856F8(&qword_1E94FA848);
  *(void *)(v0 + 192) = v17;
  uint64_t v18 = *((void *)v17 - 1);
  uint64_t v19 = *(void *)(v18 + 64);
  *(void *)(v0 + 200) = v19;
  long long v20 = (char *)swift_task_alloc();
  *(void *)(v0 + 20_Block_object_dispose(&a9, 8) = v20;
  uint64_t v21 = v17[12];
  *(_DWORD *)(v0 + 336) = v21;
  unint64_t v22 = &v20[v21];
  type metadata accessor for RemoteIntentFileDownloadTask();
  uint64_t v23 = v16 + OBJC_IVAR____TtC17IMSharedUtilities28RemoteIntentFileDownloadTask_remoteFile;
  char v24 = sub_1A08A6F08(v20, v22, v16 + OBJC_IVAR____TtC17IMSharedUtilities28RemoteIntentFileDownloadTask_remoteFile);
  v134 = v22;
  uint64_t v120 = v18;
  uint64_t v121 = v19;
  uint64_t v38 = *(void *)(v0 + 136);
  uint64_t v39 = v17[16];
  *(_DWORD *)(v0 + 340) = v39;
  uint64_t v40 = v17[20];
  *(_DWORD *)(v0 + 344) = v40;
  v20[v39] = v24 & 1;
  *(void *)&v20[v40] = v41;
  uint64_t v115 = v23;
  uint64_t v42 = v23 + *(int *)(v38 + 24);
  os_log_t log = *(os_log_t *)v42;
  *(void *)(v0 + 216) = *(void *)v42;
  unint64_t v43 = *(void *)(v42 + 8);
  *(void *)(v0 + 2++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = v43;
  uint64_t v44 = qword_1E94F8500;
  unint64_t v126 = v43;
  swift_bridgeObjectRetain();
  if (v44 != -1) {
    swift_once();
  }
  uint64_t v45 = sub_1A09F39E8();
  *(void *)(v0 + 232) = sub_1A078510C(v45, (uint64_t)qword_1E94FA7C8);
  uint64_t v46 = swift_task_alloc();
  uint64_t v125 = v46 + v17[12];
  uint64_t v123 = v17[16];
  uint64_t v130 = v17[20];
  uint64_t v47 = sub_1A09F33A8();
  *(void *)(v0 + 240) = v47;
  uint64_t v48 = *(void *)(v47 - 8);
  *(void *)(v0 + 24_Block_object_dispose(&a9, 8) = v48;
  uint64_t v112 = v48;
  uint64_t v49 = *(void (**)(void))(v48 + 16);
  *(void *)(v0 + 256) = v49;
  *(void *)(v0 + 264) = (v48 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  ((void (*)(uint64_t, char *, uint64_t))v49)(v46, v20, v47);
  ((void (*)(uint64_t, char *, uint64_t))v49)(v125, v134, v47);
  uint64_t v118 = v39;
  LOBYTE(v125) = v20[v39];
  *(unsigned char *)(v46 + v123) = v125;
  uint64_t v117 = v40;
  uint64_t v109 = *(void **)&v20[v40];
  *(void *)(v46 + v130) = v109;
  uint64_t v131 = swift_task_alloc();
  sub_1A0884370(v46, v131, &qword_1E94FA848);
  uint64_t v124 = swift_task_alloc();
  sub_1A08AF448(v46, v124, &qword_1E94FA848);
  uint64_t v50 = swift_task_alloc();
  uint64_t v51 = v50 + v17[12];
  uint64_t v114 = v17[16];
  uint64_t v52 = v17[20];
  uint64_t v119 = v20;
  v49();
  uint64_t v110 = v47;
  uint64_t v122 = v49;
  ((void (*)(uint64_t, char *, uint64_t))v49)(v51, v134, v47);
  *(unsigned char *)(v50 + v114) = v125;
  *(void *)(v50 + v52) = v109;
  uint64_t v53 = swift_task_alloc();
  sub_1A0884370(v50, v53, &qword_1E94FA848);
  uint64_t v54 = swift_task_alloc();
  sub_1A08AF448(v50, v54, &qword_1E94FA848);
  swift_bridgeObjectRetain_n();
  id v55 = v109;
  uint64_t v56 = sub_1A09F39C8();
  os_log_type_t v57 = sub_1A09F4388();
  if (os_log_type_enabled(v56, v57))
  {
    os_log_type_t type = v57;
    uint64_t v58 = swift_slowAlloc();
    uint64_t v105 = swift_slowAlloc();
    v135[0] = v105;
    *(_DWORD *)uint64_t v58 = 136315650;
    uint64_t v104 = v54;
    swift_bridgeObjectRetain();
    *(void *)(v0 + 72) = sub_1A0785144((uint64_t)log, v126, v135);
    sub_1A09F4528();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v58 + 12) = 2080;
    uint64_t v100 = swift_task_alloc();
    uint64_t v59 = swift_task_alloc();
    uint64_t v60 = v17[12];
    uint64_t v61 = v59 + v60;
    loga = v56;
    uint64_t v62 = v17[16];
    uint64_t v127 = v53;
    uint64_t v63 = v17[20];
    uint64_t v64 = v131 + v60;
    v122();
    ((void (*)(uint64_t, uint64_t, uint64_t))v122)(v61, v64, v47);
    *(unsigned char *)(v59 + v62) = *(unsigned char *)(v131 + v62);
    *(void *)(v59 + v63) = *(void *)(v131 + v63);
    os_log_type_t v102 = *(void (**)(uint64_t, uint64_t, uint64_t))(v112 + 32);
    v102(v100, v59, v47);
    unint64_t v65 = *(void (**)(uint64_t, uint64_t))(v112 + 8);
    v65(v61, v47);
    v101 = v65;
    swift_task_dealloc();
    sub_1A0897D8C();
    uint64_t v66 = sub_1A09F4AE8();
    unint64_t v68 = v67;
    v65(v100, v110);
    swift_task_dealloc();
    *(void *)(v0 + 80) = sub_1A0785144(v66, v68, v135);
    sub_1A09F4528();
    swift_bridgeObjectRelease();
    sub_1A0784C08(v124, &qword_1E94FA848);
    sub_1A0784C08(v131, &qword_1E94FA848);
    *(_WORD *)(v58 + 22) = 2080;
    uint64_t v69 = swift_task_alloc();
    uint64_t v70 = swift_task_alloc();
    uint64_t v71 = v17[12];
    uint64_t v72 = v70 + v71;
    uint64_t v73 = v17[16];
    uint64_t v74 = v17[20];
    uint64_t v103 = v127 + v71;
    v122();
    ((void (*)(uint64_t, uint64_t, uint64_t))v122)(v72, v103, v110);
    *(unsigned char *)(v70 + v73) = *(unsigned char *)(v127 + v73);
    *(void *)(v70 + v74) = *(void *)(v127 + v74);
    v102(v69, v72, v110);
    v101(v70, v110);
    swift_task_dealloc();
    uint64_t v75 = sub_1A09F4AE8();
    unint64_t v77 = v76;
    v101(v69, v110);
    swift_task_dealloc();
    *(void *)(v0 + 8_Block_object_dispose(&a9, 8) = sub_1A0785144(v75, v77, v135);
    sub_1A09F4528();
    swift_bridgeObjectRelease();
    sub_1A0784C08(v104, &qword_1E94FA848);
    sub_1A0784C08(v127, &qword_1E94FA848);
    _os_log_impl(&dword_1A0772000, loga, type, "download[%s]: Starting download to temporary url: %s. Final url: %s", (uint8_t *)v58, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x1A6228C20](v105, -1, -1);
    MEMORY[0x1A6228C20](v58, -1, -1);

    swift_task_dealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
    sub_1A0784C08(v124, &qword_1E94FA848);
    sub_1A0784C08(v131, &qword_1E94FA848);
    sub_1A0784C08(v54, &qword_1E94FA848);
    swift_task_dealloc();
    sub_1A0784C08(v53, &qword_1E94FA848);
  }
  uint64_t v78 = v115;
  uint64_t v80 = *(void *)(v0 + 160);
  uint64_t v79 = *(void *)(v0 + 168);
  uint64_t v116 = v79;
  uint64_t v111 = *(void *)(v0 + 144);
  uint64_t v113 = *(void *)(v0 + 152);
  uint64_t v129 = *(void *)(v0 + 120);
  uint64_t v128 = *(void *)(v0 + 112);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_1A09F4198();
  uint64_t v81 = sub_1A09F41C8();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v81 - 8) + 56))(v79, 0, 1, v81);
  sub_1A08AD4DC(v78, v80);
  uint64_t v82 = swift_task_alloc();
  uint64_t v83 = v82 + v17[12];
  uint64_t v84 = v17[16];
  uint64_t v85 = v17[20];
  v122();
  ((void (*)(uint64_t, char *, uint64_t))v122)(v83, v134, v110);
  *(unsigned char *)(v82 + v84) = v119[v118];
  id v86 = *(void **)&v119[v117];
  *(void *)(v82 + v85) = v86;
  uint64_t v87 = qword_1E94FE320;
  uint64_t v88 = sub_1A08AF33C(&qword_1E94FA858, (void (*)(uint64_t))type metadata accessor for RemoteIntentFileDownloadActor);
  unint64_t v89 = (*(unsigned __int8 *)(v111 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v111 + 80);
  unint64_t v90 = (v113 + v89 + *(unsigned __int8 *)(v120 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v120 + 80);
  uint64_t v91 = swift_allocObject();
  *(void *)(v91 + 16) = v87;
  *(void *)(v91 + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = v88;
  sub_1A08AD750(v80, v91 + v89);
  sub_1A08AF448(v82, v91 + v90, &qword_1E94FA848);
  unint64_t v92 = (void *)(v91 + ((v121 + v90 + 7) & 0xFFFFFFFFFFFFFFF8));
  void *v92 = v128;
  v92[1] = v129;
  swift_task_dealloc();
  id v93 = v86;
  swift_retain();
  swift_retain();
  uint64_t v94 = sub_1A08EA8EC(v116, (uint64_t)&unk_1E94FA860, v91);
  *(void *)(v0 + 272) = v94;
  *(void *)(v133 + v132) = v94;
  swift_retain();
  swift_release();
  uint64_t v95 = sub_1A07856F8(&qword_1E94FA830);
  *(void *)(v0 + 280) = v95;
  *(void *)(v0 + 28_Block_object_dispose(&a9, 8) = *(void *)(*(void *)(v95 - 8) + 64);
  *(void *)(v0 + 296) = swift_task_alloc();
  uint64_t v96 = swift_task_alloc();
  *(void *)(v0 + 304) = v96;
  v97 = (void *)swift_task_alloc();
  *(void *)(v0 + 312) = v97;
  uint64_t v98 = sub_1A07856F8((uint64_t *)&unk_1EB4A5620);
  *(void *)(v0 + 320) = v98;
  void *v97 = v0;
  v97[1] = sub_1A08A6548;
  uint64_t v99 = MEMORY[0x1E4FBC0F0];
  return MEMORY[0x1F4187D90](v96, v94, v95, v98, v99);
}

uint64_t sub_1A08A6548()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 32_Block_object_dispose(&a9, 8) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 176);
    swift_bridgeObjectRelease();
    unint64_t v4 = sub_1A08A6DE8;
    uint64_t v5 = v3;
  }
  else
  {
    uint64_t v5 = *(void *)(v2 + 176);
    unint64_t v4 = sub_1A08A6670;
  }
  return MEMORY[0x1F4188298](v4, v5, 0);
}

uint64_t sub_1A08A6670()
{
  uint64_t v72 = v0;
  uint64_t v1 = *(void *)(v0 + 296);
  uint64_t v2 = *(void *)(v0 + 304);
  uint64_t v3 = *(int **)(v0 + 280);
  uint64_t v4 = *(void *)(v2 + v3[12]);
  uint64_t v5 = *(void *)(v2 + v3[16]);
  uint64_t v6 = *(void *)(v0 + 128);
  uint64_t v7 = *(void *)(v2 + v3[20]);
  uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 + 248) + 32);
  v8(v1, v2, *(void *)(v0 + 240));
  *(void *)(v1 + v3[12]) = v4;
  *(void *)(v1 + v3[16]) = v5;
  *(void *)(v1 + v3[20]) = v7;
  swift_task_dealloc();
  if (*(unsigned char *)(v6 + OBJC_IVAR____TtC17IMSharedUtilities28RemoteIntentFileDownloadTask_isCancelled))
  {
    swift_bridgeObjectRetain();
    os_log_type_t v9 = sub_1A09F39C8();
    os_log_type_t v10 = sub_1A09F4388();
    BOOL v11 = os_log_type_enabled(v9, v10);
    unint64_t v12 = *(void *)(v0 + 224);
    if (v11)
    {
      uint64_t v13 = *(void *)(v0 + 216);
      uint64_t v14 = (uint8_t *)swift_slowAlloc();
      uint64_t v15 = swift_slowAlloc();
      v71[0] = v15;
      *(_DWORD *)uint64_t v14 = 136315138;
      swift_bridgeObjectRetain();
      *(void *)(v0 + 64) = sub_1A0785144(v13, v12, v71);
      sub_1A09F4528();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1A0772000, v9, v10, "download[%s]: Finished downloading but the task was already marked as cancelled. This happens if the task was canceled close to when it finished downloading.", v14, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1A6228C20](v15, -1, -1);
      MEMORY[0x1A6228C20](v14, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    uint64_t v45 = *(void *)(v0 + 296);
    uint64_t v46 = *(void *)(v0 + 208);
    sub_1A08AD488();
    swift_allocError();
    *uint64_t v47 = 1;
    swift_willThrow();
    swift_release();
    sub_1A0784C08(v45, &qword_1E94FA830);
    sub_1A0784C08(v46, &qword_1E94FA848);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v48 = *(uint64_t (**)(void))(v0 + 8);
    return v48();
  }
  else
  {
    unint64_t v67 = v8;
    uint64_t v68 = v7;
    uint64_t v69 = v5;
    uint64_t v70 = v4;
    uint64_t v16 = *(void (**)(void))(v0 + 256);
    uint64_t v17 = *(void *)(v0 + 240);
    uint64_t v66 = *(int *)(v0 + 344);
    uint64_t v18 = *(void *)(v0 + 208);
    uint64_t v19 = *(int **)(v0 + 192);
    uint64_t v61 = v18 + *(int *)(v0 + 336);
    os_log_t log = (os_log_t)*(int *)(v0 + 340);
    uint64_t v20 = swift_task_alloc();
    uint64_t v21 = v20 + v19[12];
    uint64_t v22 = v19[16];
    uint64_t v23 = v19[20];
    v16();
    ((void (*)(uint64_t, uint64_t, uint64_t))v16)(v21, v61, v17);
    *(unsigned char *)(v20 + v22) = *((unsigned char *)&log->isa + v18);
    char v24 = *(void **)(v18 + v66);
    *(void *)(v20 + v23) = v24;
    uint64_t v25 = swift_task_alloc();
    sub_1A0884370(v20, v25, &qword_1E94FA848);
    uint64_t v26 = swift_task_alloc();
    sub_1A08AF448(v20, v26, &qword_1E94FA848);
    swift_bridgeObjectRetain();
    id v27 = v24;
    unint64_t v28 = sub_1A09F39C8();
    os_log_type_t v29 = sub_1A09F4388();
    if (os_log_type_enabled(v28, v29))
    {
      uint64_t v60 = *(void (**)(void))(v0 + 256);
      uint64_t v57 = *(void *)(v0 + 248);
      loga = v28;
      uint64_t v31 = *(void *)(v0 + 216);
      unint64_t v30 = *(void *)(v0 + 224);
      uint64_t v65 = *(void *)(v0 + 208);
      uint64_t v32 = *(int **)(v0 + 192);
      uint64_t v59 = *(void *)(v0 + 240);
      uint64_t v33 = swift_slowAlloc();
      uint64_t v62 = swift_slowAlloc();
      v71[0] = v62;
      *(_DWORD *)uint64_t v33 = 136315394;
      swift_bridgeObjectRetain();
      *(void *)(v0 + 4_Block_object_dispose(&a9, 8) = sub_1A0785144(v31, v30, v71);
      sub_1A09F4528();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v33 + 12) = 2080;
      uint64_t v56 = swift_task_alloc();
      uint64_t v34 = swift_task_alloc();
      uint64_t v35 = v32[12];
      uint64_t v36 = v34 + v35;
      uint64_t v58 = v26;
      uint64_t v37 = v32[16];
      uint64_t v38 = v32[20];
      uint64_t v39 = v25 + v35;
      v60();
      ((void (*)(uint64_t, uint64_t, uint64_t))v60)(v36, v39, v59);
      *(unsigned char *)(v34 + v37) = *(unsigned char *)(v25 + v37);
      *(void *)(v34 + v3_Block_object_dispose(&a9, 8) = *(void *)(v25 + v38);
      uint64_t v40 = v67;
      v67(v56, v36, v59);
      uint64_t v41 = *(void (**)(uint64_t, uint64_t))(v57 + 8);
      v41(v34, v59);
      swift_task_dealloc();
      sub_1A0897D8C();
      uint64_t v42 = sub_1A09F4AE8();
      unint64_t v44 = v43;
      v41(v56, v59);
      swift_task_dealloc();
      *(void *)(v0 + 56) = sub_1A0785144(v42, v44, v71);
      sub_1A09F4528();
      swift_bridgeObjectRelease();
      sub_1A0784C08(v58, &qword_1E94FA848);
      sub_1A0784C08(v25, &qword_1E94FA848);
      _os_log_impl(&dword_1A0772000, loga, v29, "download[%s]: Finished downloading to path: %s", (uint8_t *)v33, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1A6228C20](v62, -1, -1);
      MEMORY[0x1A6228C20](v33, -1, -1);

      swift_release();
      sub_1A0784C08(v65, &qword_1E94FA848);
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
    }
    else
    {
      uint64_t v50 = *(void *)(v0 + 208);

      sub_1A0784C08(v26, &qword_1E94FA848);
      swift_task_dealloc();
      sub_1A0784C08(v25, &qword_1E94FA848);
      swift_bridgeObjectRelease_n();
      swift_release();
      swift_task_dealloc();
      swift_task_dealloc();
      sub_1A0784C08(v50, &qword_1E94FA848);
      uint64_t v40 = v67;
    }
    uint64_t v51 = *(void *)(v0 + 296);
    uint64_t v52 = *(void *)(v0 + 240);
    uint64_t v53 = *(void *)(v0 + 104);
    uint64_t v54 = swift_task_alloc();
    v40(v54, v51, v52);
    v40(v53, v54, v52);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    id v55 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 8);
    return v55(v70, v69, v68);
  }
}

uint64_t sub_1A08A6DE8()
{
  uint64_t v1 = v0[23];
  uint64_t v2 = v0[16];
  swift_task_dealloc();
  if (*(void *)(v2 + v1))
  {
    swift_retain();
    sub_1A09F4258();
    swift_release();
  }
  uint64_t v3 = v0[26];
  *(void *)(v0[16] + v0[23]) = 0;
  swift_release();
  swift_willThrow();
  swift_release();
  sub_1A0784C08(v3, &qword_1E94FA848);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_1A08A6F08(char *a1, char *a2, uint64_t a3)
{
  v144 = a2;
  v143 = a1;
  uint64_t v157 = *MEMORY[0x1E4F143B8];
  uint64_t v4 = sub_1A09F33A8();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  MEMORY[0x1F4188790](v4);
  unint64_t v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF0;
  v146 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v147 = (v5 + 16);
  v146((char *)&v133 - v7, a3, v4);
  uint64_t v8 = type metadata accessor for RemoteIntentMirrorFileRepresentation(0);
  uint64_t v9 = a3 + *(int *)(v8 + 24);
  unint64_t v10 = *(void *)(v9 + 8);
  os_log_t v149 = *(os_log_t *)v9;
  v142 = (os_log_t *)v9;
  MEMORY[0x1F4188790](v8);
  v148 = (char *)&v133 - v7;
  BOOL v11 = self;
  unint64_t v152 = v10;
  swift_bridgeObjectRetain();
  id v12 = objc_msgSend(v11, sel_sharedUserVault);
  v150 = (char *)&v133 - v7;
  uint64_t v13 = (void *)sub_1A09F3308();
  id v14 = objc_msgSend(v12, sel_convertedPathForRemoteFile_, v13);

  uint64_t v15 = sub_1A07856F8((uint64_t *)&unk_1EB4A5630);
  uint64_t v16 = MEMORY[0x1F4188790](v15 - 8);
  unint64_t v18 = (v17 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v19 = (char *)&v133 - v18;
  uint64_t v151 = v5;
  if (v14)
  {
    uint64_t v153 = v4;
    uint64_t v141 = v6;
    MEMORY[0x1F4188790](v16);
    uint64_t v20 = (char *)&v133 - v7;
    sub_1A09F3358();

    uint64_t v21 = v5 + 32;
    uint64_t v22 = *(void (**)(char *, char *, uint64_t))(v5 + 32);
    v22(v19, v20, v153);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v5 + 56))(v19, 0, 1, v153);
    uint64_t v4 = v153;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v19, 1, v153) != 1)
    {
      uint64_t v23 = v148;
      v140 = v22;
      uint64_t v24 = ((uint64_t (*)(char *, char *, uint64_t))v22)(v148, v19, v4);
      LODWORD(v6) = *(unsigned __int8 *)(a3 + *(int *)(v8 + 28));
      if (v6 == 1)
      {
        id v25 = objc_msgSend(self, sel_defaultManager);
        uint64_t v26 = (void *)sub_1A09F3308();
        os_log_t v155 = 0;
        unsigned int v27 = objc_msgSend(v25, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v26, 1, 0, &v155);

        if (v27)
        {
          uint64_t v139 = v21;
          int v135 = 1;
          uint64_t v28 = qword_1E94F8500;
          os_log_type_t v29 = v155;
          uint64_t v30 = v151;
          if (v28 != -1) {
            swift_once();
          }
          uint64_t v31 = sub_1A09F39E8();
          uint64_t v32 = sub_1A078510C(v31, (uint64_t)qword_1E94FA7C8);
          uint64_t v33 = v141;
          MEMORY[0x1F4188790](v32);
          v146((char *)&v133 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t)v23, v4);
          swift_bridgeObjectRetain_n();
          uint64_t v137 = (os_log_t *)v32;
          uint64_t v34 = sub_1A09F39C8();
          os_log_type_t v35 = sub_1A09F4388();
          int v36 = v35;
          if (os_log_type_enabled(v34, v35))
          {
            uint64_t v37 = swift_slowAlloc();
            uint64_t v136 = swift_slowAlloc();
            os_log_t v155 = v136;
            *(_DWORD *)uint64_t v37 = 136315394;
            LODWORD(v134) = v36;
            swift_bridgeObjectRetain();
            uint64_t v154 = sub_1A0785144((uint64_t)v149, v152, (uint64_t *)&v155);
            sub_1A09F4528();
            swift_bridgeObjectRelease_n();
            *(_WORD *)(v37 + 12) = 2080;
            sub_1A0897D8C();
            uint64_t v38 = sub_1A09F4AE8();
            uint64_t v154 = sub_1A0785144(v38, v39, (uint64_t *)&v155);
            sub_1A09F4528();
            swift_bridgeObjectRelease();
            v138 = *(os_log_t **)(v151 + 8);
            ((void (*)(char *, uint64_t))v138)((char *)&v133 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
            _os_log_impl(&dword_1A0772000, v34, (os_log_type_t)v134, "download[%s]: final url: %s", (uint8_t *)v37, 0x16u);
            uint64_t v40 = v136;
            swift_arrayDestroy();
            MEMORY[0x1A6228C20](v40, -1, -1);
            MEMORY[0x1A6228C20](v37, -1, -1);
          }
          else
          {
            swift_bridgeObjectRelease_n();
            v138 = *(os_log_t **)(v30 + 8);
            ((void (*)(char *, uint64_t))v138)((char *)&v133 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
          }

          os_log_t v79 = v142[1];
          os_log_t v155 = *v142;
          unint64_t v156 = (unint64_t)v79;
          swift_bridgeObjectRetain();
          sub_1A09F3EA8();
          uint64_t v80 = sub_1A09F3EA8();
          v142 = &v133;
          unint64_t v81 = v156;
          MEMORY[0x1F4188790](v80);
          unint64_t v82 = (v33 + 15) & 0xFFFFFFFFFFFFFFF0;
          os_log_t v155 = v83;
          unint64_t v156 = v81;
          uint64_t v84 = sub_1A09F32B8();
          uint64_t v85 = *(void *)(v84 - 8);
          MEMORY[0x1F4188790](v84);
          uint64_t v87 = (char *)&v133 - ((v86 + 15) & 0xFFFFFFFFFFFFFFF0);
          (*(void (**)(char *, void, uint64_t))(v85 + 104))(v87, *MEMORY[0x1E4F276B0], v84);
          sub_1A07857EC();
          sub_1A09F3398();
          (*(void (**)(char *, uint64_t))(v85 + 8))(v87, v84);
          uint64_t v88 = swift_bridgeObjectRelease();
          MEMORY[0x1F4188790](v88);
          unint64_t v89 = (char *)&v133 - v82;
          uint64_t v136 = ((char *)&v133 - v82);
          uint64_t v90 = v153;
          v146((char *)&v133 - v82, (uint64_t)&v133 - v82, v153);
          unint64_t v91 = v152;
          swift_bridgeObjectRetain_n();
          unint64_t v92 = sub_1A09F39C8();
          os_log_type_t v93 = sub_1A09F4388();
          if (os_log_type_enabled(v92, v93))
          {
            uint64_t v94 = swift_slowAlloc();
            v134 = swift_slowAlloc();
            os_log_t v155 = v134;
            *(_DWORD *)uint64_t v94 = 136315394;
            os_log_t v133 = v92;
            swift_bridgeObjectRetain();
            uint64_t v154 = sub_1A0785144((uint64_t)v149, v152, (uint64_t *)&v155);
            sub_1A09F4528();
            swift_bridgeObjectRelease_n();
            *(_WORD *)(v94 + 12) = 2080;
            sub_1A0897D8C();
            uint64_t v95 = sub_1A09F4AE8();
            uint64_t v154 = sub_1A0785144(v95, v96, (uint64_t *)&v155);
            sub_1A09F4528();
            swift_bridgeObjectRelease();
            v97 = v138;
            ((void (*)(char *, uint64_t))v138)(v89, v90);
            os_log_t v98 = v133;
            _os_log_impl(&dword_1A0772000, v133, v93, "download[%s]: output url: %s", (uint8_t *)v94, 0x16u);
            uint64_t v99 = v134;
            swift_arrayDestroy();
            MEMORY[0x1A6228C20](v99, -1, -1);
            uint64_t v100 = v94;
            unint64_t v91 = v152;
            MEMORY[0x1A6228C20](v100, -1, -1);
          }
          else
          {
            swift_bridgeObjectRelease_n();
            v97 = v138;
            ((void (*)(char *, uint64_t))v138)(v89, v90);
          }
          id v101 = objc_allocWithZone(MEMORY[0x1E4F1CAB0]);
          uint64_t v6 = (uint64_t)v136;
          os_log_type_t v102 = (void *)sub_1A09F3308();
          id v103 = objc_msgSend(v101, sel_initWithURL_append_, v102, 0);

          uint64_t v105 = v148;
          if (v103)
          {
            ((void (*)(char *, uint64_t))v97)(v150, v90);
            swift_bridgeObjectRelease();
            unint64_t v106 = v140;
            v140(v143, (char *)v6, v90);
            v106(v144, v105, v90);
            LOBYTE(v6) = v135;
          }
          else
          {
            v145 = &v133;
            MEMORY[0x1F4188790](v104);
            uint64_t v123 = (char *)&v133 - ((v122 + 15) & 0xFFFFFFFFFFFFFFF0);
            v146(v123, v6, v90);
            swift_bridgeObjectRetain();
            uint64_t v6 = sub_1A09F39C8();
            unint64_t v124 = v91;
            os_log_type_t v125 = sub_1A09F4378();
            if (os_log_type_enabled((os_log_t)v6, v125))
            {
              uint64_t v126 = swift_slowAlloc();
              v147 = swift_slowAlloc();
              os_log_t v155 = v147;
              *(_DWORD *)uint64_t v126 = 136315394;
              swift_bridgeObjectRetain();
              uint64_t v154 = sub_1A0785144((uint64_t)v149, v124, (uint64_t *)&v155);
              sub_1A09F4528();
              swift_bridgeObjectRelease_n();
              *(_WORD *)(v126 + 12) = 2080;
              sub_1A0897D8C();
              uint64_t v127 = sub_1A09F4AE8();
              uint64_t v154 = sub_1A0785144(v127, v128, (uint64_t *)&v155);
              sub_1A09F4528();
              swift_bridgeObjectRelease();
              ((void (*)(char *, uint64_t))v138)(v123, v90);
              _os_log_impl(&dword_1A0772000, (os_log_t)v6, v125, "download[%s]: Failed to start download because we couldn't create an output stream to: %s", (uint8_t *)v126, 0x16u);
              uint64_t v129 = v147;
              swift_arrayDestroy();
              MEMORY[0x1A6228C20](v129, -1, -1);
              uint64_t v130 = v126;
              v97 = v138;
              uint64_t v105 = v148;
              MEMORY[0x1A6228C20](v130, -1, -1);
            }
            else
            {
              swift_bridgeObjectRelease_n();
              ((void (*)(char *, uint64_t))v97)(v123, v90);
            }

            sub_1A08AD488();
            swift_allocError();
            *uint64_t v132 = 6;
            swift_willThrow();
            ((void (*)(NSObject *, uint64_t))v97)(v136, v90);
            ((void (*)(char *, uint64_t))v97)(v105, v90);
            ((void (*)(char *, uint64_t))v97)(v150, v90);
          }
        }
        else
        {
          uint64_t v74 = v155;
          swift_bridgeObjectRelease();
          sub_1A09F3258();

          swift_willThrow();
          uint64_t v75 = *(void (**)(char *, uint64_t))(v151 + 8);
          v75(v23, v4);
          v75(v150, v4);
        }
      }
      else
      {
        uint64_t v139 = v21;
        uint64_t v50 = v141;
        MEMORY[0x1F4188790](v24);
        unint64_t v51 = (v50 + 15) & 0xFFFFFFFFFFFFFFF0;
        uint64_t v52 = (char *)&v133 - v51;
        sub_1A09F3338();
        id v53 = objc_msgSend(self, sel_defaultManager);
        uint64_t v54 = (void *)sub_1A09F3308();
        os_log_t v155 = 0;
        unsigned int v55 = objc_msgSend(v53, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v54, 1, 0, &v155);

        os_log_t v56 = v155;
        if (v55)
        {
          v142 = &v133;
          os_log_t v155 = v149;
          unint64_t v156 = v152;
          swift_bridgeObjectRetain();
          uint64_t v57 = v56;
          sub_1A09F3EA8();
          uint64_t v58 = sub_1A09F3EA8();
          v138 = &v133;
          unint64_t v59 = v156;
          MEMORY[0x1F4188790](v58);
          uint64_t v60 = (os_log_t *)((char *)&v133 - v51);
          os_log_t v155 = v61;
          unint64_t v156 = v59;
          uint64_t v62 = sub_1A09F32B8();
          uint64_t v137 = &v133;
          uint64_t v63 = *(void *)(v62 - 8);
          MEMORY[0x1F4188790](v62);
          uint64_t v65 = (char *)&v133 - ((v64 + 15) & 0xFFFFFFFFFFFFFFF0);
          (*(void (**)(char *, void, uint64_t))(v63 + 104))(v65, *MEMORY[0x1E4F276B0], v62);
          sub_1A07857EC();
          sub_1A09F3398();
          (*(void (**)(char *, uint64_t))(v63 + 8))(v65, v62);
          uint64_t v66 = v60;
          swift_bridgeObjectRelease();
          id v67 = objc_allocWithZone(MEMORY[0x1E4F1CAB0]);
          uint64_t v68 = (void *)sub_1A09F3308();
          id v69 = objc_msgSend(v67, sel_initWithURL_append_, v68, 0);

          if (v69)
          {
            swift_bridgeObjectRelease();
            uint64_t v70 = *(void (**)(char *, uint64_t))(v151 + 8);
            uint64_t v71 = v23;
            uint64_t v72 = v153;
            v70(v52, v153);
            v70(v150, v72);
            uint64_t v73 = v140;
            v140(v143, (char *)v66, v72);
            v73(v144, v71, v72);
          }
          else
          {
            v144 = v52;
            v145 = v60;
            uint64_t v107 = v153;
            if (qword_1E94F8500 != -1) {
              swift_once();
            }
            uint64_t v108 = sub_1A09F39E8();
            uint64_t v109 = sub_1A078510C(v108, (uint64_t)qword_1E94FA7C8);
            MEMORY[0x1F4188790](v109);
            uint64_t v111 = (char *)&v133 - ((v110 + 15) & 0xFFFFFFFFFFFFFFF0);
            v146(v111, (uint64_t)v145, v107);
            unint64_t v112 = v152;
            swift_bridgeObjectRetain();
            uint64_t v113 = sub_1A09F39C8();
            LOBYTE(v6) = sub_1A09F4378();
            BOOL v114 = os_log_type_enabled(v113, (os_log_type_t)v6);
            uint64_t v115 = (uint64_t)v149;
            if (v114)
            {
              uint64_t v116 = swift_slowAlloc();
              v147 = swift_slowAlloc();
              os_log_t v155 = v147;
              *(_DWORD *)uint64_t v116 = 136315394;
              swift_bridgeObjectRetain();
              uint64_t v154 = sub_1A0785144(v115, v112, (uint64_t *)&v155);
              sub_1A09F4528();
              swift_bridgeObjectRelease_n();
              *(_WORD *)(v116 + 12) = 2080;
              sub_1A0897D8C();
              uint64_t v117 = sub_1A09F4AE8();
              uint64_t v154 = sub_1A0785144(v117, v118, (uint64_t *)&v155);
              sub_1A09F4528();
              swift_bridgeObjectRelease();
              uint64_t v119 = *(void (**)(char *, uint64_t))(v151 + 8);
              v119(v111, v107);
              _os_log_impl(&dword_1A0772000, v113, (os_log_type_t)v6, "download[%s]: Failed to start download because we couldn't create an output stream to: %s", (uint8_t *)v116, 0x16u);
              uint64_t v120 = v147;
              swift_arrayDestroy();
              MEMORY[0x1A6228C20](v120, -1, -1);
              uint64_t v121 = v116;
              uint64_t v23 = v148;
              MEMORY[0x1A6228C20](v121, -1, -1);
            }
            else
            {
              swift_bridgeObjectRelease_n();
              uint64_t v119 = *(void (**)(char *, uint64_t))(v151 + 8);
              v119(v111, v107);
            }

            sub_1A08AD488();
            swift_allocError();
            *uint64_t v131 = 6;
            swift_willThrow();
            v119((char *)v145, v107);
            v119(v144, v107);
            v119(v23, v107);
            v119(v150, v107);
          }
        }
        else
        {
          unint64_t v76 = v155;
          swift_bridgeObjectRelease();
          sub_1A09F3258();

          swift_willThrow();
          unint64_t v77 = *(void (**)(char *, uint64_t))(v151 + 8);
          uint64_t v78 = v153;
          v77(v52, v153);
          v77(v23, v78);
          v77(v150, v78);
        }
      }
      return v6 & 1;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))((char *)&v133 - v18, 1, 1, v4);
  }
  sub_1A0784C08((uint64_t)v19, (uint64_t *)&unk_1EB4A5630);
  if (qword_1E94F8500 != -1) {
    swift_once();
  }
  uint64_t v41 = sub_1A09F39E8();
  sub_1A078510C(v41, (uint64_t)qword_1E94FA7C8);
  unint64_t v42 = v152;
  swift_bridgeObjectRetain();
  unint64_t v43 = sub_1A09F39C8();
  os_log_type_t v44 = sub_1A09F4378();
  if (os_log_type_enabled(v43, v44))
  {
    uint64_t v45 = (uint8_t *)swift_slowAlloc();
    uint64_t v46 = swift_slowAlloc();
    os_log_t v155 = v46;
    *(_DWORD *)uint64_t v45 = 136315138;
    LOBYTE(v6) = (_BYTE)v45 + 12;
    swift_bridgeObjectRetain();
    uint64_t v154 = sub_1A0785144((uint64_t)v149, v42, (uint64_t *)&v155);
    sub_1A09F4528();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1A0772000, v43, v44, "download[%s]: Failed to start download because we couldn't determine a target user vault path.", v45, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1A6228C20](v46, -1, -1);
    MEMORY[0x1A6228C20](v45, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v47 = v151;
  sub_1A08AD488();
  swift_allocError();
  unsigned char *v48 = 5;
  swift_willThrow();
  (*(void (**)(char *, uint64_t))(v47 + 8))(v150, v4);
  return v6 & 1;
}

uint64_t sub_1A08A83E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _OWORD v7[5] = a6;
  _OWORD v7[6] = a7;
  void v7[3] = a4;
  void v7[4] = a5;
  _OWORD v7[2] = a1;
  if (qword_1E94F8658 != -1) {
    swift_once();
  }
  uint64_t v8 = qword_1E94FE320;
  void v7[7] = qword_1E94FE320;
  return MEMORY[0x1F4188298](sub_1A08A8488, v8, 0);
}

uint64_t sub_1A08A8488()
{
  uint64_t v1 = *(void *)(v0 + 32);
  type metadata accessor for RemoteIntentFileDownloadTask();
  uint64_t v2 = (int *)(sub_1A07856F8(&qword_1E94FA848) - 8);
  uint64_t v3 = swift_task_alloc();
  *(void *)(v0 + 64) = v3;
  uint64_t v4 = v2[14];
  *(_DWORD *)(v0 + 136) = v4;
  uint64_t v5 = v3 + v4;
  uint64_t v6 = v2[18];
  uint64_t v7 = v2[22];
  uint64_t v8 = v1 + v4;
  uint64_t v9 = sub_1A09F33A8();
  *(void *)(v0 + 72) = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  *(void *)(v0 + 80) = v10;
  BOOL v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16);
  v11(v3, v1, v9);
  v11(v5, v8, v9);
  char v12 = *(unsigned char *)(v1 + v6);
  *(unsigned char *)(v3 + v6) = v12;
  uint64_t v13 = *(void **)(v1 + v7);
  *(void *)(v0 + 8_Block_object_dispose(&a9, 8) = v13;
  *(void *)(v3 + v7) = v13;
  id v14 = v13;
  uint64_t v15 = (void *)swift_task_alloc();
  *(void *)(v0 + 96) = v15;
  void *v15 = v0;
  v15[1] = sub_1A08A8648;
  uint64_t v16 = *(void *)(v0 + 40);
  uint64_t v17 = *(void *)(v0 + 48);
  uint64_t v18 = *(void *)(v0 + 16);
  uint64_t v19 = *(void *)(v0 + 24);
  return sub_1A08A88E8(v18, v19, v3, v5, v12, v14, v16, v17);
}

uint64_t sub_1A08A8648(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v8 = *v4;
  *(void *)(*v4 + 104) = v3;
  swift_task_dealloc();
  if (v3)
  {
    uint64_t v9 = *(void *)(v8 + 56);
    uint64_t v10 = sub_1A08A8840;
  }
  else
  {
    uint64_t v11 = *(void *)(v8 + 80);
    uint64_t v13 = *(void *)(v8 + 64);
    uint64_t v12 = *(void *)(v8 + 72);
    uint64_t v14 = *(int *)(v8 + 136);
    uint64_t v15 = *(void *)(v8 + 56);

    *(void *)(v8 + 112) = a3;
    *(void *)(v8 + 120) = a2;
    *(void *)(v8 + 12_Block_object_dispose(&a9, 8) = a1;
    uint64_t v16 = (_DWORD *)sub_1A07856F8(&qword_1E94FA830);
    *(_DWORD *)(v8 + 140) = v16[12];
    *(_DWORD *)(v8 + 144) = v16[16];
    *(_DWORD *)(v8 + 14_Block_object_dispose(&a9, 8) = v16[20];
    uint64_t v17 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
    v17(v13 + v14, v12);
    v17(v13, v12);
    swift_task_dealloc();
    uint64_t v10 = sub_1A08A8808;
    uint64_t v9 = v15;
  }
  return MEMORY[0x1F4188298](v10, v9, 0);
}

uint64_t sub_1A08A8808()
{
  uint64_t v2 = *(int *)(v0 + 144);
  uint64_t v1 = *(int *)(v0 + 148);
  uint64_t v3 = *(void *)(v0 + 120);
  uint64_t v4 = *(void *)(v0 + 112);
  uint64_t v5 = *(void *)(v0 + 16);
  *(void *)(v5 + *(int *)(v0 + 140)) = *(void *)(v0 + 128);
  *(void *)(v5 + v2) = v3;
  *(void *)(v5 + v1) = v4;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1A08A8840()
{
  uint64_t v1 = *(void *)(v0 + 80);
  uint64_t v2 = *(int *)(v0 + 136);
  uint64_t v3 = *(void *)(v0 + 64);
  uint64_t v4 = *(void *)(v0 + 72);

  uint64_t v5 = v3 + v2;
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v1 + 8);
  v6(v5, v4);
  v6(v3, v4);
  swift_task_dealloc();
  uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7();
}

uint64_t sub_1A08A88E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, void *a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v8 + 24_Block_object_dispose(&a9, 8) = a7;
  *(void *)(v8 + 256) = a8;
  *(void *)(v8 + 232) = a1;
  *(void *)(v8 + 240) = a2;
  uint64_t v11 = sub_1A09F3818();
  *(void *)(v8 + 264) = v11;
  *(void *)(v8 + 272) = *(void *)(v11 - 8);
  *(void *)(v8 + 280) = swift_task_alloc();
  uint64_t v12 = sub_1A09F3828();
  *(void *)(v8 + 28_Block_object_dispose(&a9, 8) = v12;
  *(void *)(v8 + 296) = *(void *)(v12 - 8);
  *(void *)(v8 + 304) = swift_task_alloc();
  uint64_t v13 = sub_1A09F38B8();
  *(void *)(v8 + 312) = v13;
  *(void *)(v8 + 320) = *(void *)(v13 - 8);
  *(void *)(v8 + 32_Block_object_dispose(&a9, 8) = swift_task_alloc();
  uint64_t v14 = (int *)sub_1A07856F8(&qword_1E94FA848);
  *(void *)(v8 + 336) = v14;
  *(void *)(v8 + 344) = *(void *)(*((void *)v14 - 1) + 64);
  uint64_t v15 = swift_task_alloc();
  *(void *)(v8 + 352) = v15;
  uint64_t v16 = v14[12];
  *(_DWORD *)(v8 + 464) = v16;
  uint64_t v17 = v15 + v16;
  uint64_t v18 = v14[16];
  *(_DWORD *)(v8 + 46_Block_object_dispose(&a9, 8) = v18;
  uint64_t v19 = v14[20];
  *(_DWORD *)(v8 + 472) = v19;
  uint64_t v20 = sub_1A09F33A8();
  *(void *)(v8 + 360) = v20;
  uint64_t v21 = *(void *)(v20 - 8);
  *(void *)(v8 + 36_Block_object_dispose(&a9, 8) = v21;
  uint64_t v22 = *(void (**)(uint64_t, uint64_t, uint64_t))(v21 + 16);
  *(void *)(v8 + 376) = v22;
  *(void *)(v8 + 384) = (v21 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v22(v15, a3, v20);
  v22(v17, a4, v20);
  *(unsigned char *)(v15 + v1_Block_object_dispose(&a9, 8) = a5;
  *(void *)(v15 + v19) = a6;
  id v23 = a6;
  return MEMORY[0x1F4188298](sub_1A08A8BB4, 0, 0);
}

uint64_t sub_1A08A8BB4()
{
  uint64_t v1 = *(void *)(v0 + 368);
  os_log_type_t v29 = *(void (**)(void))(v0 + 376);
  uint64_t v32 = *(int *)(v0 + 472);
  uint64_t v3 = *(void *)(v0 + 352);
  uint64_t v2 = *(void *)(v0 + 360);
  uint64_t v4 = *(int **)(v0 + 336);
  uint64_t v6 = *(void *)(v0 + 320);
  uint64_t v5 = *(void *)(v0 + 328);
  id v26 = *(id *)(v0 + 312);
  uint64_t v7 = *(void *)(v0 + 240);
  uint64_t v30 = v3 + *(int *)(v0 + 464);
  uint64_t v31 = *(int *)(v0 + 468);
  uint64_t v8 = type metadata accessor for RemoteIntentMirrorFileRepresentation(0);
  (*(void (**)(uint64_t, uint64_t, id))(v6 + 16))(v5, v7 + *(int *)(v8 + 20), v26);
  *(void *)(v0 + 392) = sub_1A09F3898();
  *(unsigned char *)(v0 + 476) = v9;
  uint64_t v10 = (void *)(v7 + *(int *)(v8 + 24));
  *(void *)(v0 + 400) = *v10;
  *(void *)(v0 + 40_Block_object_dispose(&a9, 8) = v10[1];
  uint64_t v11 = swift_task_alloc();
  uint64_t v12 = v11 + v4[12];
  uint64_t v23 = v4[16];
  uint64_t v24 = v12;
  id v27 = (id)v4[20];
  v29();
  ((void (*)(uint64_t, uint64_t, uint64_t))v29)(v12, v30, v2);
  *(unsigned char *)(v11 + v23) = *(unsigned char *)(v3 + v31);
  uint64_t v13 = *(void **)(v3 + v32);
  *(void *)(v0 + 416) = v13;
  *(void *)((char *)v27 + v11) = v13;
  uint64_t v14 = *(void (**)(uint64_t, uint64_t))(v1 + 8);
  *(void *)(v0 + 4++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = v14;
  *(void *)(v0 + 432) = (v1 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  swift_bridgeObjectRetain();
  id v28 = v13;
  v14(v24, v2);
  v14(v11, v2);
  swift_task_dealloc();
  uint64_t v15 = swift_task_alloc();
  uint64_t v16 = v15 + v4[12];
  uint64_t v17 = v4[16];
  uint64_t v25 = v4[20];
  v29();
  ((void (*)(uint64_t, uint64_t, uint64_t))v29)(v16, v30, v2);
  char v18 = *(unsigned char *)(v3 + v31);
  *(unsigned char *)(v0 + 477) = v18;
  *(unsigned char *)(v15 + v17) = v18;
  *(void *)(v15 + v25) = *(void *)(v3 + v32);
  v14(v16, v2);
  v14(v15, v2);
  swift_task_dealloc();
  sub_1A09F3838();
  *(void *)(v0 + 56) = 0;
  objc_msgSend(v28, sel_open);
  sub_1A09F3808();
  swift_beginAccess();
  *(void *)(v0 + 440) = 0;
  uint64_t v19 = sub_1A08AF33C(&qword_1E94FA870, MEMORY[0x1E4F4ACE8]);
  uint64_t v20 = (void *)swift_task_alloc();
  *(void *)(v0 + 44_Block_object_dispose(&a9, 8) = v20;
  *uint64_t v20 = v0;
  v20[1] = sub_1A08A8F20;
  uint64_t v21 = *(void *)(v0 + 264);
  return MEMORY[0x1F4187C78](v0 + 40, v21, v19);
}

uint64_t sub_1A08A8F20()
{
  *(void *)(*(void *)v1 + 456) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1A08ABBF8;
  }
  else {
    uint64_t v2 = sub_1A08A9060;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1A08A9060()
{
  v406 = v0;
  v405[1] = *MEMORY[0x1E4F143B8];
  uint64_t v2 = v0[5];
  v395 = v0 + 5;
  unint64_t v3 = v0[6];
  if (v3 >> 60 != 15)
  {
    uint64_t v385 = v0[5];
    unint64_t v389 = v0[6];
    if ((sub_1A09F4268() & 1) == 0)
    {
      os_log_type_t v93 = v0 + 7;
      switch(v3 >> 62)
      {
        case 1uLL:
          if (!__OFSUB__(HIDWORD(v2), v2))
          {
            uint64_t v94 = HIDWORD(v2) - (int)v2;
            goto LABEL_45;
          }
          __break(1u);
          goto LABEL_108;
        case 2uLL:
          uint64_t v190 = *(void *)(v2 + 16);
          uint64_t v189 = *(void *)(v2 + 24);
          uint64_t v94 = v189 - v190;
          if (__OFSUB__(v189, v190))
          {
LABEL_108:
            __break(1u);
LABEL_109:
            __break(1u);
LABEL_110:
            __break(1u);
            return sub_1A09F4798();
          }
LABEL_45:
          sub_1A08AF264(v2, v3);
          if (v94)
          {
LABEL_46:
            if (v94 < 1)
            {
              uint64_t v95 = (void *)MEMORY[0x1E4FBC860];
            }
            else
            {
              sub_1A07856F8((uint64_t *)&unk_1EB4A5A00);
              uint64_t v95 = (void *)swift_allocObject();
              size_t v191 = j__malloc_size(v95);
              v95[2] = v94;
              v95[3] = 2 * v191 - 64;
            }
            uint64_t v192 = sub_1A09F3408();
            uint64_t v193 = *(void *)(v192 - 8);
            uint64_t v194 = swift_task_alloc();
            uint64_t v195 = sub_1A09F33C8();
            (*(void (**)(uint64_t, uint64_t))(v193 + 8))(v194, v192);
            if (v195 != v94) {
              goto LABEL_105;
            }
            sub_1A08AF2D0(v2, v3);
            swift_task_dealloc();
            os_log_type_t v93 = v0 + 7;
          }
          else
          {
LABEL_18:
            sub_1A08AF2D0(v2, v3);
            uint64_t v94 = 0;
            uint64_t v95 = (void *)MEMORY[0x1E4FBC860];
          }
          id v196 = objc_msgSend((id)v0[52], sel_write_maxLength_, v95 + 4, v95[2]);
          swift_release();
          if ((uint64_t)v196 > 0)
          {
            double v1 = *((double *)v0 + 55) + ((double)v94 - *((double *)v0 + 55)) * 0.333333333;
            uint64_t v197 = 0;
            switch(v3 >> 62)
            {
              case 1uLL:
                LODWORD(v197) = HIDWORD(v2) - v2;
                if (__OFSUB__(HIDWORD(v2), v2)) {
                  goto LABEL_109;
                }
                uint64_t v197 = (int)v197;
                goto LABEL_76;
              case 2uLL:
                uint64_t v270 = *(void *)(v2 + 16);
                uint64_t v269 = *(void *)(v2 + 24);
                BOOL v271 = __OFSUB__(v269, v270);
                uint64_t v197 = v269 - v270;
                if (v271) {
                  goto LABEL_110;
                }
LABEL_76:
                if ((v197 & 0x8000000000000000) == 0) {
                  goto LABEL_77;
                }
                return sub_1A09F4798();
              case 3uLL:
                goto LABEL_77;
              default:
                uint64_t v197 = BYTE6(v3);
LABEL_77:
                BOOL v272 = __CFADD__(*v93, v197);
                uint64_t v273 = *v93 + v197;
                if (v272) {
                  goto LABEL_100;
                }
                void *v93 = v273;
                if (qword_1E94F8500 == -1) {
                  goto LABEL_79;
                }
                goto LABEL_101;
            }
          }
          if (qword_1E94F8500 == -1) {
            goto LABEL_55;
          }
          goto LABEL_106;
        case 3uLL:
          goto LABEL_18;
        default:
          uint64_t v94 = BYTE6(v3);
          if (!BYTE6(v3)) {
            goto LABEL_18;
          }
          goto LABEL_46;
      }
    }
    if (qword_1E94F8500 != -1) {
      swift_once();
    }
    uint64_t v47 = sub_1A09F39E8();
    sub_1A078510C(v47, (uint64_t)qword_1E94FA7C8);
    swift_bridgeObjectRetain_n();
    uint64_t v48 = sub_1A09F39C8();
    os_log_type_t v49 = sub_1A09F4388();
    BOOL v50 = os_log_type_enabled(v48, v49);
    unint64_t v51 = v0[51];
    if (v50)
    {
      uint64_t v52 = v0[50];
      id v53 = (uint8_t *)swift_slowAlloc();
      uint64_t v54 = swift_slowAlloc();
      v405[0] = v54;
      *(_DWORD *)id v53 = 136315138;
      swift_bridgeObjectRetain();
      v0[28] = sub_1A0785144(v52, v51, v405);
      sub_1A09F4528();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1A0772000, v48, v49, "download[%s]: Task was cancelled, aborting data stream processing.", v53, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1A6228C20](v54, -1, -1);
      MEMORY[0x1A6228C20](v53, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    uint64_t v103 = v0[34];
    uint64_t v102 = v0[35];
    uint64_t v104 = v0[33];
    sub_1A08AD488();
    uint64_t v105 = (void *)swift_allocError();
    *unint64_t v106 = 1;
    swift_willThrow();
    uint64_t v107 = v385;
    goto LABEL_59;
  }
  int v4 = *((unsigned __int8 *)v0 + 477);
  uint64_t v5 = (void *)v0[52];
  (*(void (**)(void, void))(v0[34] + 8))(v0[35], v0[33]);
  objc_msgSend(v5, sel_close);
  if (v4 == 1)
  {
    if (qword_1E94F8500 != -1) {
      swift_once();
    }
    uint64_t v6 = (void (*)(void))v0[47];
    uint64_t v387 = *((int *)v0 + 118);
    uint64_t v378 = *((int *)v0 + 117);
    uint64_t v8 = v0[44];
    uint64_t v7 = v0[45];
    char v9 = (int *)v0[42];
    v363 = (void (*)(void))(v8 + *((int *)v0 + 116));
    uint64_t v10 = sub_1A09F39E8();
    sub_1A078510C(v10, (uint64_t)qword_1E94FA7C8);
    uint64_t v11 = swift_task_alloc();
    uint64_t v12 = v11 + v9[12];
    uint64_t v13 = v9[16];
    uint64_t v359 = v9[20];
    v6();
    uint64_t v14 = v12;
    uint64_t v15 = v7;
    ((void (*)(uint64_t, void (*)(void), uint64_t))v6)(v14, v363, v7);
    char v340 = *(unsigned char *)(v8 + v378);
    *(unsigned char *)(v11 + v13) = v340;
    v334 = *(void **)(v8 + v387);
    *(void *)(v11 + v359) = v334;
    uint64_t v388 = swift_task_alloc();
    sub_1A0884370(v11, v388, &qword_1E94FA848);
    uint64_t v379 = swift_task_alloc();
    sub_1A08AF448(v11, v379, &qword_1E94FA848);
    uint64_t v16 = swift_task_alloc();
    uint64_t v17 = v16 + v9[12];
    uint64_t v18 = v9[16];
    uint64_t v19 = v9[20];
    v6();
    ((void (*)(uint64_t, void (*)(void), uint64_t))v6)(v17, v363, v15);
    *(unsigned char *)(v16 + v1_Block_object_dispose(&a9, 8) = v340;
    *(void *)(v16 + v19) = v334;
    uint64_t v20 = swift_task_alloc();
    sub_1A0884370(v16, v20, &qword_1E94FA848);
    uint64_t v21 = swift_task_alloc();
    sub_1A08AF448(v16, v21, &qword_1E94FA848);
    swift_bridgeObjectRetain_n();
    id v22 = v334;
    uint64_t v23 = sub_1A09F39C8();
    os_log_type_t v24 = sub_1A09F4388();
    if (os_log_type_enabled(v23, v24))
    {
      v335 = (void (*)(uint64_t, uint64_t))v0[53];
      os_log_type_t type = v24;
      os_log_t v318 = (os_log_t)v21;
      uint64_t v25 = v0[50];
      unint64_t v26 = v0[51];
      v331 = (void (*)(void))v0[47];
      uint64_t v353 = v0[46];
      os_log_t log = v23;
      uint64_t v307 = v0[45];
      id v27 = (int *)v0[42];
      uint64_t v28 = swift_slowAlloc();
      os_log_t v315 = (os_log_t)swift_slowAlloc();
      v405[0] = (uint64_t)v315;
      *(_DWORD *)uint64_t v28 = 136315650;
      swift_bridgeObjectRetain();
      v0[22] = sub_1A0785144(v25, v26, v405);
      sub_1A09F4528();
      swift_bridgeObjectRelease_n();
      uint64_t v327 = v28;
      *(_WORD *)(v28 + 12) = 2080;
      uint64_t v305 = swift_task_alloc();
      uint64_t v29 = swift_task_alloc();
      uint64_t v30 = v27[12];
      uint64_t v31 = v29 + v30;
      uint64_t v32 = v27[16];
      uint64_t v33 = v27[20];
      uint64_t v34 = v388 + v30;
      v331();
      ((void (*)(uint64_t, uint64_t, uint64_t))v331)(v31, v34, v307);
      *(unsigned char *)(v29 + v32) = *(unsigned char *)(v388 + v32);
      *(void *)(v29 + v33) = *(void *)(v388 + v33);
      v311 = *(void (**)(uint64_t, uint64_t, uint64_t))(v353 + 32);
      v311(v305, v29, v307);
      v335(v31, v307);
      swift_task_dealloc();
      sub_1A0897D8C();
      uint64_t v35 = sub_1A09F4AE8();
      unint64_t v37 = v36;
      v335(v305, v307);
      swift_task_dealloc();
      v0[23] = sub_1A0785144(v35, v37, v405);
      sub_1A09F4528();
      swift_bridgeObjectRelease();
      sub_1A0784C08(v379, &qword_1E94FA848);
      sub_1A0784C08(v388, &qword_1E94FA848);
      *(_WORD *)(v327 + 22) = 2080;
      uint64_t v38 = swift_task_alloc();
      uint64_t v39 = swift_task_alloc();
      uint64_t v40 = v27[12];
      uint64_t v41 = v39 + v40;
      uint64_t v42 = v27[16];
      uint64_t v43 = v27[20];
      uint64_t v312 = v20 + v40;
      v331();
      ((void (*)(uint64_t, uint64_t, uint64_t))v331)(v41, v312, v307);
      *(unsigned char *)(v39 + v42) = *(unsigned char *)(v20 + v42);
      *(void *)(v39 + v43) = *(void *)(v20 + v43);
      v311(v38, v41, v307);
      v335(v39, v307);
      swift_task_dealloc();
      uint64_t v44 = sub_1A09F4AE8();
      unint64_t v46 = v45;
      v335(v38, v307);
      swift_task_dealloc();
      v0[24] = sub_1A0785144(v44, v46, v405);
      sub_1A09F4528();
      swift_bridgeObjectRelease();
      sub_1A0784C08((uint64_t)v318, &qword_1E94FA848);
      sub_1A0784C08(v20, &qword_1E94FA848);
      _os_log_impl(&dword_1A0772000, log, type, "download[%s]: Finished downloading. Decompressing temp file to final destination (%s -> %s).", (uint8_t *)v327, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x1A6228C20](v315, -1, -1);
      MEMORY[0x1A6228C20](v327, -1, -1);

      swift_task_dealloc();
    }
    else
    {
      swift_bridgeObjectRelease_n();
      sub_1A0784C08(v379, &qword_1E94FA848);
      sub_1A0784C08(v388, &qword_1E94FA848);
      sub_1A0784C08(v21, &qword_1E94FA848);
      swift_task_dealloc();
      sub_1A0784C08(v20, &qword_1E94FA848);
    }
    uint64_t v96 = v0[57];
    uint64_t v97 = v0[50];
    unint64_t v98 = v0[51];
    uint64_t v99 = v0[44];
    unint64_t v100 = v99 + *((int *)v0 + 116);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_1A08AD950(v99, v100, v97, v98);
    uint64_t v101 = v96;
    if (!v96) {
      goto LABEL_26;
    }
LABEL_36:
    v402 = (void *)v101;
    if (qword_1E94F8500 != -1) {
      swift_once();
    }
    uint64_t v139 = (void (*)(void))v0[47];
    uint64_t v373 = *((int *)v0 + 117);
    uint64_t v380 = *((int *)v0 + 118);
    uint64_t v140 = v0[44];
    uint64_t v141 = v0[45];
    v142 = (int *)v0[42];
    uint64_t v393 = v140 + *((int *)v0 + 116);
    uint64_t v143 = sub_1A09F39E8();
    sub_1A078510C(v143, (uint64_t)qword_1E94FA7C8);
    uint64_t v144 = swift_task_alloc();
    uint64_t v145 = v144 + v142[12];
    uint64_t v146 = v142[16];
    v345 = v0;
    uint64_t v147 = v142[20];
    v139();
    uint64_t v148 = v145;
    uint64_t v149 = v141;
    ((void (*)(uint64_t, uint64_t, uint64_t))v139)(v148, v393, v141);
    char v350 = *(unsigned char *)(v140 + v373);
    *(unsigned char *)(v144 + v146) = v350;
    v150 = *(void **)(v140 + v380);
    *(void *)(v144 + v147) = v150;
    uint64_t v151 = v150;
    uint64_t v381 = swift_task_alloc();
    sub_1A0884370(v144, v381, &qword_1E94FA848);
    uint64_t v374 = swift_task_alloc();
    sub_1A08AF448(v144, v374, &qword_1E94FA848);
    uint64_t v152 = swift_task_alloc();
    uint64_t v153 = v152 + v142[12];
    uint64_t v154 = v142[16];
    uint64_t v155 = v142[20];
    v139();
    ((void (*)(uint64_t, uint64_t, uint64_t))v139)(v153, v393, v149);
    *(unsigned char *)(v152 + v154) = v350;
    *(void *)(v152 + v155) = v151;
    uint64_t v156 = swift_task_alloc();
    sub_1A0884370(v152, v156, &qword_1E94FA848);
    uint64_t v157 = swift_task_alloc();
    sub_1A08AF448(v152, v157, &qword_1E94FA848);
    id v158 = v402;
    id v159 = v151;
    swift_bridgeObjectRetain();
    id v160 = v402;
    id v161 = v159;
    v162 = sub_1A09F39C8();
    os_log_type_t v163 = sub_1A09F4378();
    if (os_log_type_enabled(v162, v163))
    {
      os_log_type_t typeb = v163;
      v342 = (void (*)(uint64_t, uint64_t))v345[53];
      uint64_t v314 = v157;
      uint64_t v351 = v156;
      uint64_t v165 = v345[50];
      unint64_t v164 = v345[51];
      v333 = (void (*)(void))v345[47];
      uint64_t v396 = v345[46];
      uint64_t v308 = v345[45];
      v338 = (int *)v345[42];
      uint64_t v166 = swift_slowAlloc();
      os_log_t v320 = (os_log_t)swift_slowAlloc();
      os_log_t logb = (os_log_t)swift_slowAlloc();
      v405[0] = (uint64_t)logb;
      *(_DWORD *)uint64_t v166 = 136315906;
      v317 = v162;
      swift_bridgeObjectRetain();
      v345[15] = sub_1A0785144(v165, v164, v405);
      sub_1A09F4528();
      swift_bridgeObjectRelease_n();
      uint64_t v329 = v166;
      *(_WORD *)(v166 + 12) = 2080;
      uint64_t v167 = swift_task_alloc();
      uint64_t v168 = swift_task_alloc();
      uint64_t v169 = v338[12];
      uint64_t v170 = v168 + v169;
      uint64_t v171 = v338[16];
      uint64_t v172 = v338[20];
      uint64_t v173 = v381 + v169;
      v333();
      ((void (*)(uint64_t, uint64_t, uint64_t))v333)(v170, v173, v308);
      *(unsigned char *)(v168 + v171) = *(unsigned char *)(v381 + v171);
      *(void *)(v168 + v172) = *(void *)(v381 + v172);
      v309 = *(void (**)(uint64_t, uint64_t, uint64_t))(v396 + 32);
      v309(v167, v168, v308);
      v342(v170, v308);
      swift_task_dealloc();
      sub_1A0897D8C();
      uint64_t v174 = sub_1A09F4AE8();
      unint64_t v176 = v175;
      v342(v167, v308);
      swift_task_dealloc();
      uint64_t v0 = v345;
      v345[16] = sub_1A0785144(v174, v176, v405);
      sub_1A09F4528();
      swift_bridgeObjectRelease();
      sub_1A0784C08(v374, &qword_1E94FA848);
      sub_1A0784C08(v381, &qword_1E94FA848);
      *(_WORD *)(v166 + 22) = 2080;
      uint64_t v177 = swift_task_alloc();
      uint64_t v178 = swift_task_alloc();
      uint64_t v179 = v338[12];
      uint64_t v180 = v178 + v179;
      uint64_t v181 = v338[16];
      uint64_t v182 = v338[20];
      uint64_t v183 = v351 + v179;
      v333();
      ((void (*)(uint64_t, uint64_t, uint64_t))v333)(v180, v183, v308);
      *(unsigned char *)(v178 + v181) = *(unsigned char *)(v351 + v181);
      *(void *)(v178 + v182) = *(void *)(v351 + v182);
      v309(v177, v180, v308);
      v342(v178, v308);
      swift_task_dealloc();
      uint64_t v184 = sub_1A09F4AE8();
      unint64_t v186 = v185;
      v342(v177, v308);
      swift_task_dealloc();
      v345[17] = sub_1A0785144(v184, v186, v405);
      sub_1A09F4528();
      swift_bridgeObjectRelease();
      sub_1A0784C08(v314, &qword_1E94FA848);
      sub_1A0784C08(v351, &qword_1E94FA848);
      *(_WORD *)(v329 + 32) = 2112;
      id v187 = v402;
      uint64_t v188 = _swift_stdlib_bridgeErrorToNSError();
      v345[18] = v188;
      sub_1A09F4528();
      v320->isa = (Class)v188;

      _os_log_impl(&dword_1A0772000, v317, typeb, "download[%s]: Caught error while moving temp file from %s -> %s: %@. Rethrowing", (uint8_t *)v329, 0x2Au);
      sub_1A07856F8(&qword_1E94F7740);
      swift_arrayDestroy();
      MEMORY[0x1A6228C20](v320, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x1A6228C20](logb, -1, -1);
      MEMORY[0x1A6228C20](v329, -1, -1);

      swift_task_dealloc();
    }
    else
    {
      uint64_t v0 = v345;
      swift_bridgeObjectRelease_n();
      sub_1A0784C08(v374, &qword_1E94FA848);
      sub_1A0784C08(v381, &qword_1E94FA848);
      sub_1A0784C08(v157, &qword_1E94FA848);
      swift_task_dealloc();
      sub_1A0784C08(v156, &qword_1E94FA848);
    }
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    goto LABEL_67;
  }
  if (qword_1E94F8500 != -1) {
    swift_once();
  }
  unsigned int v55 = (void (*)(void))v0[47];
  uint64_t v390 = *((int *)v0 + 118);
  v364 = (void (*)(void))*((int *)v0 + 117);
  uint64_t v57 = v0[44];
  uint64_t v56 = v0[45];
  uint64_t v58 = (int *)v0[42];
  uint64_t v59 = v57 + *((int *)v0 + 116);
  uint64_t v398 = v59;
  uint64_t v60 = sub_1A09F39E8();
  sub_1A078510C(v60, (uint64_t)qword_1E94FA7C8);
  uint64_t v61 = swift_task_alloc();
  uint64_t v62 = v61 + v58[12];
  uint64_t v346 = v58[16];
  uint64_t v336 = v56;
  uint64_t v341 = v58[20];
  v55();
  ((void (*)(uint64_t, uint64_t, uint64_t))v55)(v62, v59, v56);
  LOBYTE(v62) = *((unsigned char *)v364 + v57);
  *(unsigned char *)(v61 + v346) = v62;
  v347 = *(void **)(v57 + v390);
  *(void *)(v61 + v341) = v347;
  uint64_t v391 = swift_task_alloc();
  sub_1A0884370(v61, v391, &qword_1E94FA848);
  uint64_t v365 = swift_task_alloc();
  sub_1A08AF448(v61, v365, &qword_1E94FA848);
  uint64_t v63 = swift_task_alloc();
  uint64_t v64 = v63 + v58[12];
  uint64_t v65 = v58[16];
  uint64_t v66 = v58[20];
  v55();
  ((void (*)(uint64_t, uint64_t, uint64_t))v55)(v64, v398, v336);
  *(unsigned char *)(v63 + v65) = v62;
  *(void *)(v63 + v66) = v347;
  uint64_t v399 = swift_task_alloc();
  sub_1A0884370(v63, v399, &qword_1E94FA848);
  uint64_t v67 = swift_task_alloc();
  sub_1A08AF448(v63, v67, &qword_1E94FA848);
  swift_bridgeObjectRetain_n();
  id v68 = v347;
  id v69 = sub_1A09F39C8();
  os_log_type_t v70 = sub_1A09F4388();
  if (os_log_type_enabled(v69, v70))
  {
    os_log_type_t loga = v70;
    unint64_t v71 = v0[51];
    os_log_t v316 = (os_log_t)v67;
    uint64_t typea = v0[50];
    v332 = (void (*)(void))v0[47];
    v337 = (void (*)(uint64_t, uint64_t))v0[53];
    uint64_t v360 = v0[46];
    v319 = v69;
    uint64_t v306 = v0[45];
    uint64_t v72 = (int *)v0[42];
    uint64_t v73 = swift_slowAlloc();
    uint64_t v313 = swift_slowAlloc();
    v405[0] = v313;
    *(_DWORD *)uint64_t v73 = 136315650;
    swift_bridgeObjectRetain();
    v0[19] = sub_1A0785144(typea, v71, v405);
    sub_1A09F4528();
    swift_bridgeObjectRelease_n();
    uint64_t v328 = v73;
    *(_WORD *)(v73 + 12) = 2080;
    uint64_t v304 = swift_task_alloc();
    uint64_t v74 = swift_task_alloc();
    uint64_t v75 = v72[12];
    uint64_t v76 = v74 + v75;
    uint64_t v77 = v72[16];
    uint64_t v78 = v72[20];
    uint64_t v79 = v391 + v75;
    v332();
    ((void (*)(uint64_t, uint64_t, uint64_t))v332)(v76, v79, v306);
    *(unsigned char *)(v74 + v77) = *(unsigned char *)(v391 + v77);
    *(void *)(v74 + v7_Block_object_dispose(&a9, 8) = *(void *)(v391 + v78);
    v310 = *(void (**)(uint64_t, uint64_t, uint64_t))(v360 + 32);
    v310(v304, v74, v306);
    v337(v76, v306);
    swift_task_dealloc();
    sub_1A0897D8C();
    uint64_t v80 = sub_1A09F4AE8();
    unint64_t v82 = v81;
    v337(v304, v306);
    swift_task_dealloc();
    v0[20] = sub_1A0785144(v80, v82, v405);
    sub_1A09F4528();
    swift_bridgeObjectRelease();
    sub_1A0784C08(v365, &qword_1E94FA848);
    sub_1A0784C08(v391, &qword_1E94FA848);
    *(_WORD *)(v328 + 22) = 2080;
    uint64_t v83 = swift_task_alloc();
    uint64_t v84 = swift_task_alloc();
    uint64_t v85 = v72[12];
    uint64_t v86 = v84 + v85;
    uint64_t v87 = v72[16];
    uint64_t v88 = v72[20];
    uint64_t v89 = v399 + v85;
    v332();
    ((void (*)(uint64_t, uint64_t, uint64_t))v332)(v86, v89, v306);
    *(unsigned char *)(v84 + v87) = *(unsigned char *)(v399 + v87);
    *(void *)(v84 + v8_Block_object_dispose(&a9, 8) = *(void *)(v399 + v88);
    v310(v83, v86, v306);
    v337(v84, v306);
    swift_task_dealloc();
    uint64_t v90 = sub_1A09F4AE8();
    unint64_t v92 = v91;
    v337(v83, v306);
    swift_task_dealloc();
    v0[21] = sub_1A0785144(v90, v92, v405);
    sub_1A09F4528();
    swift_bridgeObjectRelease();
    sub_1A0784C08((uint64_t)v316, &qword_1E94FA848);
    sub_1A0784C08(v399, &qword_1E94FA848);
    _os_log_impl(&dword_1A0772000, v319, loga, "download[%s]: Finished downloading. Moving temp file to final destination (%s -> %s).", (uint8_t *)v328, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x1A6228C20](v313, -1, -1);
    MEMORY[0x1A6228C20](v328, -1, -1);

    swift_task_dealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
    sub_1A0784C08(v365, &qword_1E94FA848);
    sub_1A0784C08(v391, &qword_1E94FA848);
    sub_1A0784C08(v67, &qword_1E94FA848);
    swift_task_dealloc();
    sub_1A0784C08(v399, &qword_1E94FA848);
  }
  v348 = (void (*)(uint64_t, uint64_t))v0[53];
  uint64_t v108 = (void (*)(void))v0[47];
  uint64_t v371 = *((int *)v0 + 118);
  uint64_t v110 = v0[44];
  uint64_t v109 = v0[45];
  uint64_t v111 = (int *)v0[42];
  uint64_t v354 = v110 + *((int *)v0 + 116);
  uint64_t v361 = *((int *)v0 + 117);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v400 = objc_msgSend(self, sel_defaultManager);
  uint64_t v112 = swift_task_alloc();
  uint64_t v113 = v112 + v111[12];
  uint64_t v114 = v111[16];
  uint64_t v115 = v111[20];
  v108();
  ((void (*)(uint64_t, uint64_t, uint64_t))v108)(v113, v354, v109);
  *(unsigned char *)(v112 + v114) = *(unsigned char *)(v110 + v361);
  *(void *)(v112 + v115) = *(void *)(v110 + v371);
  v392 = (void *)sub_1A09F3308();
  v348(v113, v109);
  v348(v112, v109);
  swift_task_dealloc();
  uint64_t v116 = swift_task_alloc();
  uint64_t v117 = v116 + v111[12];
  uint64_t v118 = v111[16];
  uint64_t v119 = v111[20];
  v108();
  ((void (*)(uint64_t, uint64_t, uint64_t))v108)(v117, v354, v109);
  *(unsigned char *)(v116 + v11_Block_object_dispose(&a9, 8) = *(unsigned char *)(v110 + v361);
  *(void *)(v116 + v119) = *(void *)(v110 + v371);
  uint64_t v120 = (void *)sub_1A09F3308();
  v348(v117, v109);
  v348(v116, v109);
  swift_task_dealloc();
  v0[14] = 0;
  LODWORD(v116) = objc_msgSend(v400, sel_moveItemAtURL_toURL_error_, v392, v120, v0 + 14);

  id v121 = (id)v0[14];
  if (!v116)
  {
    v138 = v121;
    uint64_t v101 = sub_1A09F3258();

    swift_willThrow();
    goto LABEL_36;
  }
LABEL_26:
  v366 = (void (*)(void))v0[47];
  v395 = (void *)v0[46];
  uint64_t v401 = v0[55];
  unint64_t v389 = *((int *)v0 + 118);
  uint64_t v385 = *((int *)v0 + 117);
  uint64_t v122 = *((int *)v0 + 116);
  uint64_t v123 = v0[44];
  unint64_t v124 = (int *)v0[42];
  uint64_t v125 = v0[40];
  uint64_t v355 = v0[41];
  uint64_t v362 = v0[45];
  uint64_t v126 = v0[38];
  uint64_t v349 = v0[39];
  uint64_t v128 = v0[36];
  uint64_t v127 = v0[37];
  uint64_t v372 = v0[29];

  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v127 + 8))(v126, v128);
  (*(void (**)(uint64_t, uint64_t))(v125 + 8))(v355, v349);
  uint64_t v129 = swift_task_alloc();
  uint64_t v130 = v129 + v124[12];
  uint64_t v131 = v124[16];
  uint64_t v132 = v124[20];
  v366();
  ((void (*)(uint64_t, uint64_t, uint64_t))v366)(v130, v123 + v122, v362);
  *(unsigned char *)(v129 + v131) = *(unsigned char *)(v123 + v385);
  *(void *)(v129 + v132) = *(void *)(v123 + v389);
  ((void (*)(uint64_t, uint64_t, uint64_t))v395[4])(v372, v130, v362);
  if ((~v401 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_98;
  }
  double v1 = *((double *)v0 + 55);
  if (v1 <= -1.0)
  {
LABEL_98:
    __break(1u);
    goto LABEL_99;
  }
  if (v1 < 1.84467441e19)
  {
    uint64_t v133 = v0[7];
    uint64_t v134 = v0[44];
    ((void (*)(uint64_t, void))v0[53])(v129, v0[45]);
    swift_task_dealloc();
    sub_1A0784C08(v134, &qword_1E94FA848);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    int v135 = (uint64_t (*)(uint64_t, uint64_t, unint64_t))v0[1];
    if (*((unsigned char *)v0 + 476)) {
      uint64_t v136 = 0;
    }
    else {
      uint64_t v136 = v0[49];
    }
    return v135(v133, v136, (unint64_t)v1);
  }
LABEL_99:
  __break(1u);
LABEL_100:
  __break(1u);
LABEL_101:
  swift_once();
LABEL_79:
  uint64_t v274 = sub_1A09F39E8();
  sub_1A078510C(v274, (uint64_t)qword_1E94FA7C8);
  swift_bridgeObjectRetain_n();
  v275 = sub_1A09F39C8();
  os_log_type_t v276 = sub_1A09F4388();
  BOOL v277 = os_log_type_enabled(v275, v276);
  unint64_t v278 = v0[51];
  if (v277)
  {
    uint64_t v279 = v0[50];
    if (*((unsigned char *)v0 + 476)) {
      uint64_t v280 = 0;
    }
    else {
      uint64_t v280 = v0[49];
    }
    uint64_t v281 = swift_slowAlloc();
    uint64_t v282 = swift_slowAlloc();
    v405[0] = v282;
    *(_DWORD *)uint64_t v281 = 136315650;
    swift_bridgeObjectRetain();
    *(void *)(v281 + 4) = sub_1A0785144(v279, v278, v405);
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v281 + 12) = 2048;
    *(void *)(v281 + 14) = v0[7];
    *(_WORD *)(v281 + 22) = 2048;
    *(void *)(v281 + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = v280;
    _os_log_impl(&dword_1A0772000, v275, v276, "download[%s]: %llu bytes / %llu total bytes downloaded", (uint8_t *)v281, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x1A6228C20](v282, -1, -1);
    MEMORY[0x1A6228C20](v281, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  v283 = (void (*)(void))v0[47];
  uint64_t v384 = v0[46];
  uint64_t v377 = *((int *)v0 + 118);
  v369 = (void (*)(void))*((int *)v0 + 117);
  uint64_t v285 = v0[44];
  uint64_t v284 = v0[45];
  v286 = (int *)v0[42];
  if (*((unsigned char *)v0 + 476)) {
    uint64_t v287 = 0;
  }
  else {
    uint64_t v287 = v0[49];
  }
  uint64_t v403 = v287;
  uint64_t v357 = v285 + *((int *)v0 + 116);
  v288 = (int *)sub_1A07856F8(&qword_1E94FA830);
  uint64_t v289 = swift_task_alloc();
  uint64_t v352 = v288[12];
  uint64_t v344 = v288[16];
  uint64_t v330 = v288[20];
  uint64_t v290 = swift_task_alloc();
  uint64_t v291 = v290 + v286[12];
  uint64_t v292 = v286[16];
  uint64_t v339 = v286[20];
  uint64_t v2 = v284;
  v283();
  ((void (*)(uint64_t, uint64_t, uint64_t))v283)(v291, v357, v284);
  *(unsigned char *)(v290 + v292) = *((unsigned char *)v369 + v285);
  *(void *)(v290 + v339) = *(void *)(v285 + v377);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v384 + 32))(v289, v291, v284);
  uint64_t v293 = v0[7];
  *(void *)(v289 + v352) = v293;
  *(void *)(v289 + v344) = v403;
  if ((~*(void *)&v1 & 0x7FF0000000000000) != 0)
  {
    if (v1 > -1.0)
    {
      if (v1 < 1.84467441e19)
      {
        v294 = (void (*)(uint64_t, uint64_t))v0[53];
        v404 = v294;
        v358 = (void (*)(uint64_t, uint64_t, uint64_t))v0[47];
        uint64_t v295 = v0[45];
        v370 = (void (*)(void))v0[31];
        if (*((unsigned char *)v0 + 476)) {
          uint64_t v296 = 0;
        }
        else {
          uint64_t v296 = v0[49];
        }
        *(void *)(v289 + v330) = (unint64_t)v1;
        v294(v290, v295);
        swift_task_dealloc();
        uint64_t v297 = swift_task_alloc();
        uint64_t v298 = v288[12];
        uint64_t v299 = v288[16];
        uint64_t v300 = v288[20];
        v358(v297, v289, v295);
        *(void *)(v297 + v29_Block_object_dispose(&a9, 8) = v293;
        *(void *)(v297 + v299) = v296;
        *(void *)(v297 + v300) = (unint64_t)v1;
        ((void (*)(uint64_t, uint64_t, uint64_t, unint64_t))v370)(v297, v293, v296, (unint64_t)v1);
        sub_1A08AF2D0(v385, v389);
        sub_1A0784C08(v289, &qword_1E94FA830);
        v404(v297, v295);
        swift_task_dealloc();
        swift_task_dealloc();
        *((double *)v0 + 55) = v1;
        uint64_t v301 = sub_1A08AF33C(&qword_1E94FA870, MEMORY[0x1E4F4ACE8]);
        v302 = (void *)swift_task_alloc();
        v0[56] = v302;
        void *v302 = v0;
        v302[1] = sub_1A08A8F20;
        uint64_t v303 = v0[33];
        return MEMORY[0x1F4187C78](v395, v303, v301);
      }
      goto LABEL_104;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
LABEL_104:
  __break(1u);
LABEL_105:
  __break(1u);
LABEL_106:
  swift_once();
LABEL_55:
  v198 = (void *)v0[52];
  uint64_t v199 = sub_1A09F39E8();
  sub_1A078510C(v199, (uint64_t)qword_1E94FA7C8);
  swift_bridgeObjectRetain_n();
  id v200 = v198;
  v201 = sub_1A09F39C8();
  os_log_type_t v202 = sub_1A09F4378();
  BOOL v203 = os_log_type_enabled(v201, v202);
  unint64_t v204 = v0[51];
  v205 = (void *)v0[52];
  if (v203)
  {
    uint64_t v206 = v0[50];
    uint64_t v207 = swift_slowAlloc();
    uint64_t v208 = swift_slowAlloc();
    v405[0] = v208;
    *(_DWORD *)uint64_t v207 = 136315394;
    swift_bridgeObjectRetain();
    v0[25] = sub_1A0785144(v206, v204, v405);
    sub_1A09F4528();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v207 + 12) = 2080;
    v0[26] = objc_msgSend(v205, sel_streamError);
    sub_1A07856F8(&qword_1E94FA878);
    uint64_t v209 = sub_1A09F3E38();
    v0[27] = sub_1A0785144(v209, v210, v405);
    sub_1A09F4528();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1A0772000, v201, v202, "download[%s]: failed to write bytes. OutputStream error: %s", (uint8_t *)v207, 0x16u);
    swift_arrayDestroy();
    uint64_t v211 = v208;
    uint64_t v2 = v385;
    MEMORY[0x1A6228C20](v211, -1, -1);
    MEMORY[0x1A6228C20](v207, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }
  uint64_t v103 = v0[34];
  uint64_t v102 = v0[35];
  uint64_t v104 = v0[33];
  sub_1A08AD488();
  uint64_t v105 = (void *)swift_allocError();
  unsigned char *v212 = 7;
  swift_willThrow();
  uint64_t v107 = v2;
LABEL_59:
  sub_1A08AF2D0(v107, v389);
  (*(void (**)(uint64_t, uint64_t))(v103 + 8))(v102, v104);
  if (qword_1E94F8500 != -1) {
    swift_once();
  }
  uint64_t v213 = sub_1A09F39E8();
  sub_1A078510C(v213, (uint64_t)qword_1E94FA7C8);
  swift_bridgeObjectRetain();
  id v214 = v105;
  swift_bridgeObjectRetain();
  id v215 = v105;
  v216 = sub_1A09F39C8();
  os_log_type_t v217 = sub_1A09F4378();
  BOOL v218 = os_log_type_enabled(v216, v217);
  unint64_t v219 = v0[51];
  if (v218)
  {
    uint64_t v394 = v0[50];
    uint64_t v220 = swift_slowAlloc();
    v221 = (void *)swift_slowAlloc();
    v222 = v105;
    uint64_t v223 = swift_slowAlloc();
    v405[0] = v223;
    *(_DWORD *)uint64_t v220 = 136315394;
    swift_bridgeObjectRetain();
    v0[12] = sub_1A0785144(v394, v219, v405);
    sub_1A09F4528();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v220 + 12) = 2112;
    id v224 = v105;
    uint64_t v225 = _swift_stdlib_bridgeErrorToNSError();
    v0[13] = v225;
    sub_1A09F4528();
    void *v221 = v225;

    _os_log_impl(&dword_1A0772000, v216, v217, "download[%s]: Closing output stream and deleting partially downloaded file, because we caught an error during download: %@", (uint8_t *)v220, 0x16u);
    sub_1A07856F8(&qword_1E94F7740);
    swift_arrayDestroy();
    MEMORY[0x1A6228C20](v221, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x1A6228C20](v223, -1, -1);
    MEMORY[0x1A6228C20](v220, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }
  v386 = (void (*)(uint64_t, uint64_t))v0[53];
  v226 = (void (*)(void))v0[47];
  uint64_t v375 = *((int *)v0 + 117);
  uint64_t v382 = *((int *)v0 + 118);
  uint64_t v227 = v0[44];
  uint64_t v228 = v0[45];
  v229 = (int *)v0[42];
  v367 = (void (*)(void))(v227 + *((int *)v0 + 116));
  objc_msgSend((id)v0[52], sel_close);
  v356 = self;
  id v230 = objc_msgSend(v356, sel_defaultManager);
  uint64_t v231 = swift_task_alloc();
  uint64_t v232 = v231 + v229[12];
  uint64_t v233 = v229[16];
  uint64_t v234 = v229[20];
  v226();
  ((void (*)(uint64_t, void (*)(void), uint64_t))v226)(v232, v367, v228);
  *(unsigned char *)(v231 + v233) = *(unsigned char *)(v227 + v375);
  *(void *)(v231 + v234) = *(void *)(v227 + v382);
  sub_1A09F3378();
  v235 = (void *)sub_1A09F3DE8();
  swift_bridgeObjectRelease();
  v386(v231, v228);
  v386(v232, v228);
  swift_task_dealloc();
  LODWORD(v227) = objc_msgSend(v230, sel_fileExistsAtPath_, v235);

  if (!v227) {
    goto LABEL_66;
  }
  v383 = (void (*)(uint64_t, uint64_t))v0[53];
  v236 = (void (*)(void))v0[47];
  v368 = (void (*)(void))*((int *)v0 + 118);
  uint64_t v343 = *((int *)v0 + 117);
  uint64_t v237 = v0[44];
  uint64_t v238 = v0[45];
  v239 = (int *)v0[42];
  uint64_t v240 = v237 + *((int *)v0 + 116);
  id v376 = objc_msgSend(v356, sel_defaultManager);
  uint64_t v241 = swift_task_alloc();
  uint64_t v242 = v241 + v239[12];
  uint64_t v243 = v239[16];
  uint64_t v244 = v239[20];
  v236();
  ((void (*)(uint64_t, uint64_t, uint64_t))v236)(v242, v240, v238);
  *(unsigned char *)(v241 + v243) = *(unsigned char *)(v237 + v343);
  *(void *)(v241 + v244) = *(void *)((char *)v368 + v237);
  sub_1A09F3378();
  v245 = (void *)sub_1A09F3DE8();
  swift_bridgeObjectRelease();
  v383(v241, v238);
  v383(v242, v238);
  swift_task_dealloc();
  v0[9] = 0;
  LODWORD(v241) = objc_msgSend(v376, sel_removeItemAtPath_error_, v245, v395 + 4);

  id v246 = (id)v0[9];
  if (!v241)
  {
    v256 = v246;
    v257 = (void *)sub_1A09F3258();

    swift_willThrow();
    id v258 = v257;
    swift_bridgeObjectRetain();
    id v259 = v257;
    v260 = sub_1A09F39C8();
    int v261 = sub_1A09F4378();
    BOOL v262 = os_log_type_enabled(v260, (os_log_type_t)v261);
    unint64_t v263 = v0[51];
    if (v262)
    {
      uint64_t v264 = v0[50];
      uint64_t v265 = swift_slowAlloc();
      v266 = (void *)swift_slowAlloc();
      uint64_t v397 = swift_slowAlloc();
      v405[0] = v397;
      *(_DWORD *)uint64_t v265 = 136315394;
      swift_bridgeObjectRetain();
      v0[10] = sub_1A0785144(v264, v263, v405);
      sub_1A09F4528();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v265 + 12) = 2112;
      id v267 = v257;
      uint64_t v268 = _swift_stdlib_bridgeErrorToNSError();
      v0[11] = v268;
      sub_1A09F4528();
      void *v266 = v268;

      _os_log_impl(&dword_1A0772000, v260, (os_log_type_t)v261, "download[%s]: Failed to delete partially downloaded file after receiving error during download. Error: %@", (uint8_t *)v265, 0x16u);
      sub_1A07856F8(&qword_1E94F7740);
      swift_arrayDestroy();
      MEMORY[0x1A6228C20](v266, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x1A6228C20](v397, -1, -1);
      MEMORY[0x1A6228C20](v265, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
  }
  else
  {
LABEL_66:
    swift_bridgeObjectRelease();
  }
LABEL_67:
  v247 = (void *)v0[52];
  uint64_t v248 = v0[44];
  uint64_t v250 = v0[40];
  uint64_t v249 = v0[41];
  uint64_t v252 = v0[38];
  uint64_t v251 = v0[39];
  uint64_t v253 = v0[36];
  uint64_t v254 = v0[37];
  swift_willThrow();

  (*(void (**)(uint64_t, uint64_t))(v254 + 8))(v252, v253);
  (*(void (**)(uint64_t, uint64_t))(v250 + 8))(v249, v251);
  sub_1A0784C08(v248, &qword_1E94FA848);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  v255 = (uint64_t (*)(void))v0[1];
  return v255();
}

uint64_t sub_1A08ABBF8()
{
  *(void *)(v0 + 64) = *(void *)(v0 + 456);
  sub_1A07856F8((uint64_t *)&unk_1EB4A5620);
  swift_willThrowTypedImpl();
  return MEMORY[0x1F4188298](sub_1A08ABCB0, 0, 0);
}

uint64_t sub_1A08ABCB0()
{
  uint64_t v70 = v0;
  v69[1] = *MEMORY[0x1E4F143B8];
  (*(void (**)(void, void))(*(void *)(v0 + 272) + 8))(*(void *)(v0 + 280), *(void *)(v0 + 264));
  double v1 = *(void **)(v0 + 456);
  if (qword_1E94F8500 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1A09F39E8();
  sub_1A078510C(v2, (uint64_t)qword_1E94FA7C8);
  swift_bridgeObjectRetain();
  id v3 = v1;
  swift_bridgeObjectRetain();
  id v4 = v1;
  uint64_t v5 = sub_1A09F39C8();
  os_log_type_t v6 = sub_1A09F4378();
  BOOL v7 = os_log_type_enabled(v5, v6);
  unint64_t v8 = *(void *)(v0 + 408);
  if (v7)
  {
    uint64_t v9 = *(void *)(v0 + 400);
    uint64_t v10 = swift_slowAlloc();
    uint64_t v11 = (void *)swift_slowAlloc();
    uint64_t v67 = swift_slowAlloc();
    v69[0] = v67;
    *(_DWORD *)uint64_t v10 = 136315394;
    swift_bridgeObjectRetain();
    *(void *)(v0 + 96) = sub_1A0785144(v9, v8, v69);
    sub_1A09F4528();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v10 + 12) = 2112;
    id v12 = v1;
    uint64_t v13 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 104) = v13;
    sub_1A09F4528();
    void *v11 = v13;

    _os_log_impl(&dword_1A0772000, v5, v6, "download[%s]: Closing output stream and deleting partially downloaded file, because we caught an error during download: %@", (uint8_t *)v10, 0x16u);
    sub_1A07856F8(&qword_1E94F7740);
    swift_arrayDestroy();
    MEMORY[0x1A6228C20](v11, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x1A6228C20](v67, -1, -1);
    MEMORY[0x1A6228C20](v10, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }
  uint64_t v66 = *(void (**)(uint64_t, uint64_t))(v0 + 424);
  uint64_t v14 = *(void (**)(void))(v0 + 376);
  id v62 = (id)*(int *)(v0 + 468);
  uint64_t v64 = *(int *)(v0 + 472);
  uint64_t v15 = *(void *)(v0 + 352);
  uint64_t v16 = *(void *)(v0 + 360);
  uint64_t v17 = *(int **)(v0 + 336);
  uint64_t v60 = v15 + *(int *)(v0 + 464);
  objc_msgSend(*(id *)(v0 + 416), sel_close);
  id v59 = self;
  id v18 = objc_msgSend(v59, sel_defaultManager);
  uint64_t v19 = swift_task_alloc();
  uint64_t v20 = v19 + v17[12];
  uint64_t v21 = v17[16];
  uint64_t v22 = v17[20];
  v14();
  ((void (*)(uint64_t, uint64_t, uint64_t))v14)(v20, v60, v16);
  *(unsigned char *)(v19 + v21) = *((unsigned char *)v62 + v15);
  *(void *)(v19 + v22) = *(void *)(v15 + v64);
  sub_1A09F3378();
  uint64_t v23 = (void *)sub_1A09F3DE8();
  swift_bridgeObjectRelease();
  v66(v19, v16);
  v66(v20, v16);
  swift_task_dealloc();
  LODWORD(v15) = objc_msgSend(v18, sel_fileExistsAtPath_, v23);

  if (!v15) {
    goto LABEL_8;
  }
  uint64_t v65 = *(void (**)(uint64_t, uint64_t))(v0 + 424);
  os_log_type_t v24 = *(void (**)(void))(v0 + 376);
  uint64_t v61 = *(int *)(v0 + 472);
  uint64_t v58 = *(int *)(v0 + 468);
  uint64_t v25 = *(void *)(v0 + 352);
  uint64_t v26 = *(void *)(v0 + 360);
  id v27 = *(int **)(v0 + 336);
  uint64_t v28 = v25 + *(int *)(v0 + 464);
  id v63 = objc_msgSend(v59, sel_defaultManager);
  uint64_t v29 = swift_task_alloc();
  uint64_t v30 = v29 + v27[12];
  uint64_t v31 = v27[16];
  uint64_t v32 = v27[20];
  v24();
  ((void (*)(uint64_t, uint64_t, uint64_t))v24)(v30, v28, v26);
  *(unsigned char *)(v29 + v31) = *(unsigned char *)(v25 + v58);
  *(void *)(v29 + v32) = *(void *)(v25 + v61);
  sub_1A09F3378();
  uint64_t v33 = (void *)sub_1A09F3DE8();
  swift_bridgeObjectRelease();
  v65(v29, v26);
  v65(v30, v26);
  swift_task_dealloc();
  *(void *)(v0 + 72) = 0;
  LODWORD(v26) = objc_msgSend(v63, sel_removeItemAtPath_error_, v33, v0 + 72);

  id v34 = *(id *)(v0 + 72);
  if (!v26)
  {
    uint64_t v35 = v34;
    unint64_t v36 = (void *)sub_1A09F3258();

    swift_willThrow();
    id v37 = v36;
    swift_bridgeObjectRetain();
    id v38 = v36;
    uint64_t v39 = sub_1A09F39C8();
    os_log_type_t v40 = sub_1A09F4378();
    BOOL v41 = os_log_type_enabled(v39, v40);
    unint64_t v42 = *(void *)(v0 + 408);
    if (v41)
    {
      uint64_t v43 = *(void *)(v0 + 400);
      uint64_t v44 = swift_slowAlloc();
      unint64_t v45 = (void *)swift_slowAlloc();
      uint64_t v68 = swift_slowAlloc();
      v69[0] = v68;
      *(_DWORD *)uint64_t v44 = 136315394;
      swift_bridgeObjectRetain();
      *(void *)(v0 + 80) = sub_1A0785144(v43, v42, v69);
      sub_1A09F4528();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v44 + 12) = 2112;
      id v46 = v36;
      uint64_t v47 = _swift_stdlib_bridgeErrorToNSError();
      *(void *)(v0 + 8_Block_object_dispose(&a9, 8) = v47;
      sub_1A09F4528();
      void *v45 = v47;

      _os_log_impl(&dword_1A0772000, v39, v40, "download[%s]: Failed to delete partially downloaded file after receiving error during download. Error: %@", (uint8_t *)v44, 0x16u);
      sub_1A07856F8(&qword_1E94F7740);
      swift_arrayDestroy();
      MEMORY[0x1A6228C20](v45, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x1A6228C20](v68, -1, -1);
      MEMORY[0x1A6228C20](v44, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
  }
  else
  {
LABEL_8:
    swift_bridgeObjectRelease();
  }
  uint64_t v48 = *(void **)(v0 + 416);
  uint64_t v49 = *(void *)(v0 + 352);
  uint64_t v51 = *(void *)(v0 + 320);
  uint64_t v50 = *(void *)(v0 + 328);
  uint64_t v53 = *(void *)(v0 + 304);
  uint64_t v52 = *(void *)(v0 + 312);
  uint64_t v54 = *(void *)(v0 + 288);
  uint64_t v55 = *(void *)(v0 + 296);
  swift_willThrow();

  (*(void (**)(uint64_t, uint64_t))(v55 + 8))(v53, v54);
  (*(void (**)(uint64_t, uint64_t))(v51 + 8))(v50, v52);
  sub_1A0784C08(v49, &qword_1E94FA848);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v56 = *(uint64_t (**)(void))(v0 + 8);
  return v56();
}

void sub_1A08AC47C()
{
  if (*(void *)(v0 + OBJC_IVAR____TtC17IMSharedUtilities28RemoteIntentFileDownloadTask_activeTask))
  {
    uint64_t v1 = v0 + OBJC_IVAR____TtC17IMSharedUtilities28RemoteIntentFileDownloadTask_remoteFile;
    uint64_t v2 = (uint64_t *)(v1 + *(int *)(type metadata accessor for RemoteIntentMirrorFileRepresentation(0) + 24));
    uint64_t v4 = *v2;
    unint64_t v3 = v2[1];
    swift_retain();
    swift_bridgeObjectRetain();
    sub_1A07856F8(&qword_1E94FA830);
    sub_1A07856F8((uint64_t *)&unk_1EB4A5620);
    sub_1A09F4258();
    if (qword_1E94F8500 != -1) {
      swift_once();
    }
    uint64_t v5 = sub_1A09F39E8();
    sub_1A078510C(v5, (uint64_t)qword_1E94FA7C8);
    swift_bridgeObjectRetain();
    os_log_type_t v6 = sub_1A09F39C8();
    os_log_type_t v7 = sub_1A09F4388();
    if (os_log_type_enabled(v6, v7))
    {
      unint64_t v8 = (uint8_t *)swift_slowAlloc();
      uint64_t v9 = swift_slowAlloc();
      uint64_t v10 = v9;
      *(_DWORD *)unint64_t v8 = 136315138;
      swift_bridgeObjectRetain();
      sub_1A0785144(v4, v3, &v10);
      sub_1A09F4528();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1A0772000, v6, v7, "download[%s]: Cancelled.", v8, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1A6228C20](v9, -1, -1);
      MEMORY[0x1A6228C20](v8, -1, -1);

      swift_release();
    }
    else
    {

      swift_release();
      swift_bridgeObjectRelease_n();
    }
  }
}

uint64_t sub_1A08AC6A4()
{
  sub_1A08AF4AC(v0 + OBJC_IVAR____TtC17IMSharedUtilities28RemoteIntentFileDownloadTask_remoteFile);
  sub_1A0784C08(v0 + OBJC_IVAR____TtC17IMSharedUtilities28RemoteIntentFileDownloadTask_result, &qword_1E94FA828);
  swift_bridgeObjectRelease();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_1A08AC740()
{
  return type metadata accessor for RemoteIntentFileDownloadTask();
}

uint64_t type metadata accessor for RemoteIntentFileDownloadTask()
{
  uint64_t result = qword_1E94FA7F8;
  if (!qword_1E94FA7F8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1A08AC794()
{
  type metadata accessor for RemoteIntentMirrorFileRepresentation(319);
  if (v0 <= 0x3F)
  {
    sub_1A08AC88C();
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

void sub_1A08AC88C()
{
  if (!qword_1E94FA818)
  {
    sub_1A078D800(&qword_1E94FA820);
    unint64_t v0 = sub_1A09F4518();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E94FA818);
    }
  }
}

uint64_t sub_1A08AC8E8(uint64_t *a1, uint64_t *a2)
{
  return sub_1A08AC8F4(*a1, *a2);
}

uint64_t sub_1A08AC8F4(uint64_t a1, uint64_t a2)
{
  if ((_s17IMSharedUtilities36RemoteIntentMirrorFileRepresentationV2eeoiySbAC_ACtFZ_0(a1 + OBJC_IVAR____TtC17IMSharedUtilities28RemoteIntentFileDownloadTask_remoteFile, a2 + OBJC_IVAR____TtC17IMSharedUtilities28RemoteIntentFileDownloadTask_remoteFile) & 1) != 0&& *(void *)(a1 + OBJC_IVAR____TtC17IMSharedUtilities28RemoteIntentFileDownloadTask_numberOfAttempts) == *(void *)(a2 + OBJC_IVAR____TtC17IMSharedUtilities28RemoteIntentFileDownloadTask_numberOfAttempts))
  {
    LODWORD(v69) = *(unsigned __int8 *)(a1
                                      + OBJC_IVAR____TtC17IMSharedUtilities28RemoteIntentFileDownloadTask_isCancelled) ^ *(unsigned __int8 *)(a2 + OBJC_IVAR____TtC17IMSharedUtilities28RemoteIntentFileDownloadTask_isCancelled) ^ 1;
  }
  else
  {
    LODWORD(v69) = 0;
  }
  uint64_t v4 = sub_1A07856F8(&qword_1E94FA828);
  uint64_t v5 = *(void *)(*(void *)(v4 - 8) + 64);
  MEMORY[0x1F4188790](v4 - 8);
  unint64_t v6 = (v5 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v67 = a1;
  uint64_t v7 = a1 + OBJC_IVAR____TtC17IMSharedUtilities28RemoteIntentFileDownloadTask_result;
  swift_beginAccess();
  uint64_t v8 = sub_1A0884370(v7, (uint64_t)v58 - v6, &qword_1E94FA828);
  uint64_t v70 = v58;
  MEMORY[0x1F4188790](v8);
  uint64_t v68 = a2;
  uint64_t v9 = a2 + OBJC_IVAR____TtC17IMSharedUtilities28RemoteIntentFileDownloadTask_result;
  swift_beginAccess();
  sub_1A0884370(v9, (uint64_t)v58 - v6, &qword_1E94FA828);
  uint64_t v10 = sub_1A07856F8(&qword_1E94FA820);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
  uint64_t v72 = (uint64_t)v58 - v6;
  uint64_t v12 = v11((char *)v58 - v6, 1, v10);
  int v13 = v12;
  MEMORY[0x1F4188790](v12);
  uint64_t v71 = (uint64_t)v58 - v6;
  sub_1A0884370((uint64_t)v58 - v6, (uint64_t)v58 - v6, &qword_1E94FA828);
  if (v13 != 1 && v11((char *)v58 - v6, 1, v10) != 1)
  {
    sub_1A0784C08((uint64_t)v58 - v6, &qword_1E94FA828);
    uint64_t v23 = sub_1A07856F8(&qword_1E94FA838);
    uint64_t v24 = MEMORY[0x1F4188790](v23 - 8);
    uint64_t v26 = (char *)v58 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v27 = (uint64_t)&v26[*(int *)(v24 + 56)];
    sub_1A0884370(v72, (uint64_t)v26, &qword_1E94FA828);
    sub_1A0884370(v71, v27, &qword_1E94FA828);
    uint64_t v28 = v11(v26, 1, v10);
    if (v28 != 1)
    {
      MEMORY[0x1F4188790](v28);
      uint64_t v29 = (void **)((char *)v58 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
      sub_1A0884370((uint64_t)v26, (uint64_t)v29, &qword_1E94FA828);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v30 = *v29;
        uint64_t v31 = v11((char *)v27, 1, v10);
        if (v31 == 1)
        {
        }
        else
        {
          MEMORY[0x1F4188790](v31);
          id v38 = (void **)((char *)v58 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
          sub_1A0884370(v27, (uint64_t)v38, &qword_1E94FA828);
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            uint64_t v39 = *v38;
            if (v69)
            {
              swift_getErrorValue();
              uint64_t v69 = sub_1A09F4BF8();
              uint64_t v41 = v40;
              swift_getErrorValue();
              if (v69 == sub_1A09F4BF8() && v41 == v42)
              {

                swift_bridgeObjectRelease_n();
                sub_1A0784C08(v27, &qword_1E94FA828);
                sub_1A0784C08((uint64_t)v26, &qword_1E94FA828);
              }
              else
              {
                LODWORD(v69) = sub_1A09F4B28();

                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                sub_1A0784C08(v27, &qword_1E94FA828);
                sub_1A0784C08((uint64_t)v26, &qword_1E94FA828);
                uint64_t v21 = 0;
                if ((v69 & 1) == 0) {
                  goto LABEL_38;
                }
              }
              goto LABEL_12;
            }

            sub_1A0784C08(v27, &qword_1E94FA828);
            uint64_t v54 = (uint64_t)v26;
            uint64_t v53 = &qword_1E94FA828;
LABEL_37:
            sub_1A0784C08(v54, v53);
            uint64_t v21 = 0;
            goto LABEL_38;
          }

          sub_1A0784C08((uint64_t)v38, &qword_1E94FA820);
        }
      }
      else
      {
        uint64_t v35 = v11((char *)v27, 1, v10);
        if (v35 != 1)
        {
          MEMORY[0x1F4188790](v35);
          unint64_t v36 = (void **)((char *)v58 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
          sub_1A0884370(v27, (uint64_t)v36, &qword_1E94FA828);
          if (swift_getEnumCaseMultiPayload() != 1)
          {
            uint64_t v60 = v58;
            id v63 = v58;
            uint64_t v64 = v58;
            uint64_t v65 = v58;
            uint64_t v43 = sub_1A09F33A8();
            id v62 = v58;
            uint64_t v66 = *(void **)(v43 - 8);
            uint64_t v44 = v66;
            uint64_t v45 = v66[8];
            MEMORY[0x1F4188790](v43);
            id v46 = (uint64_t (*)(char *, void **, uint64_t))v44[4];
            uint64_t v47 = v46((char *)v58 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0), v29, v43);
            v58[2] = v58;
            MEMORY[0x1F4188790](v47);
            uint64_t v48 = v46((char *)v58 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0), v36, v43);
            v58[1] = v58;
            MEMORY[0x1F4188790](v48);
            uint64_t v49 = (char *)v58 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
            uint64_t v50 = (uint64_t (*)(char *, char *, uint64_t))v66[2];
            id v59 = v49;
            uint64_t v51 = v50(v49, v49, v43);
            v58[0] = v58;
            MEMORY[0x1F4188790](v51);
            uint64_t v61 = v43;
            v50(v49, v49, v43);
            if (v69) {
              char v52 = MEMORY[0x1A6225510](v49, v49);
            }
            else {
              char v52 = 0;
            }
            uint64_t v56 = (void (*)(char *, uint64_t))v66[1];
            uint64_t v57 = v61;
            v56(v49, v61);
            v56(v49, v57);
            v56(v49, v57);
            v56(v59, v57);
            sub_1A0784C08(v27, &qword_1E94FA828);
            sub_1A0784C08((uint64_t)v26, &qword_1E94FA828);
            if (v52) {
              goto LABEL_12;
            }
LABEL_22:
            uint64_t v21 = 0;
            goto LABEL_38;
          }
          sub_1A0784C08((uint64_t)v36, &qword_1E94FA820);
        }
        uint64_t v37 = sub_1A09F33A8();
        (*(void (**)(void **, uint64_t))(*(void *)(v37 - 8) + 8))(v29, v37);
      }
    }
    uint64_t v53 = &qword_1E94FA838;
    uint64_t v54 = (uint64_t)v26;
    goto LABEL_37;
  }
  uint64_t v14 = sub_1A0784C08((uint64_t)v58 - v6, &qword_1E94FA828);
  MEMORY[0x1F4188790](v14);
  sub_1A0884370(v72, (uint64_t)v58 - v6, &qword_1E94FA828);
  BOOL v15 = (v69 & 1) != 0 && v11((char *)v58 - v6, 1, v10) == 1;
  uint64_t v16 = sub_1A0784C08((uint64_t)v58 - v6, &qword_1E94FA828);
  MEMORY[0x1F4188790](v16);
  uint64_t v17 = (char *)v58 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A0884370(v71, (uint64_t)v17, &qword_1E94FA828);
  if (!v15)
  {
    sub_1A0784C08((uint64_t)v17, &qword_1E94FA828);
    uint64_t v21 = 0;
    goto LABEL_38;
  }
  int v18 = v11(v17, 1, v10);
  sub_1A0784C08((uint64_t)v17, &qword_1E94FA828);
  if (v18 != 1) {
    goto LABEL_22;
  }
LABEL_12:
  uint64_t v19 = v67;
  uint64_t v20 = v68;
  uint64_t v21 = *(void *)(v68 + OBJC_IVAR____TtC17IMSharedUtilities28RemoteIntentFileDownloadTask_activeTask);
  if (!*(void *)(v67 + OBJC_IVAR____TtC17IMSharedUtilities28RemoteIntentFileDownloadTask_activeTask))
  {
    if (!v21)
    {
LABEL_23:
      uint64_t v32 = v19 + OBJC_IVAR____TtC17IMSharedUtilities28RemoteIntentFileDownloadTask_continuations;
      swift_beginAccess();
      uint64_t v33 = *(void *)(*(void *)v32 + 16);
      uint64_t v34 = v20 + OBJC_IVAR____TtC17IMSharedUtilities28RemoteIntentFileDownloadTask_continuations;
      swift_beginAccess();
      uint64_t v21 = v33 == *(void *)(*(void *)v34 + 16);
      goto LABEL_38;
    }
    goto LABEL_22;
  }
  if (v21)
  {
    swift_retain();
    swift_retain();
    sub_1A07856F8(&qword_1E94FA830);
    sub_1A07856F8((uint64_t *)&unk_1EB4A5620);
    char v22 = sub_1A09F4238();
    swift_release();
    swift_release();
    if (v22) {
      goto LABEL_23;
    }
    goto LABEL_22;
  }
LABEL_38:
  sub_1A0784C08(v71, &qword_1E94FA828);
  sub_1A0784C08(v72, &qword_1E94FA828);
  return v21;
}

unint64_t sub_1A08AD488()
{
  unint64_t result = qword_1E94FA840;
  if (!qword_1E94FA840)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FA840);
  }
  return result;
}

uint64_t sub_1A08AD4DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for RemoteIntentMirrorFileRepresentation(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A08AD540()
{
  uint64_t v1 = (int *)(type metadata accessor for RemoteIntentMirrorFileRepresentation(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 32) & ~v2;
  uint64_t v4 = v3 + *(void *)(*(void *)v1 + 64);
  uint64_t v5 = (int *)(sub_1A07856F8(&qword_1E94FA848) - 8);
  uint64_t v6 = *(unsigned __int8 *)(*(void *)v5 + 80);
  uint64_t v7 = (v4 + v6) & ~v6;
  unint64_t v14 = ((*(void *)(*(void *)v5 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  uint64_t v15 = v2 | v6 | 7;
  swift_unknownObjectRelease();
  uint64_t v8 = v0 + v3;
  uint64_t v9 = sub_1A09F33A8();
  uint64_t v10 = *(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8);
  v10(v8, v9);
  uint64_t v11 = v8 + v1[7];
  uint64_t v12 = sub_1A09F38B8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  swift_bridgeObjectRelease();
  v10(v0 + v7, v9);
  v10(v0 + v7 + v5[14], v9);

  swift_release();

  return MEMORY[0x1F4186498](v0, v14, v15);
}

uint64_t sub_1A08AD750(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for RemoteIntentMirrorFileRepresentation(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A08AD7B4(uint64_t a1)
{
  uint64_t v3 = v2;
  uint64_t v5 = *(void *)(type metadata accessor for RemoteIntentMirrorFileRepresentation(0) - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v7 = v6 + *(void *)(v5 + 64);
  uint64_t v8 = *(void *)(sub_1A07856F8(&qword_1E94FA848) - 8);
  unint64_t v9 = (v7 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = *(void *)(v1 + 16);
  uint64_t v11 = *(void *)(v1 + 24);
  uint64_t v12 = v1 + v6;
  uint64_t v13 = v1 + v9;
  unint64_t v14 = (uint64_t *)(v1 + ((*(void *)(v8 + 64) + v9 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v15 = *v14;
  uint64_t v16 = v14[1];
  uint64_t v17 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v17;
  *uint64_t v17 = v3;
  v17[1] = sub_1A077EE58;
  return sub_1A08A83E4(a1, v10, v11, v12, v13, v15, v16);
}

uint64_t sub_1A08AD950(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v166 = a3;
  unint64_t v167 = a4;
  unint64_t v163 = a2;
  uint64_t v168 = a1;
  v170[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v4 = sub_1A09F3558();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v153 = v4;
  uint64_t v154 = v5;
  uint64_t v6 = MEMORY[0x1F4188790](v4);
  uint64_t v148 = (char *)v144 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v152 = (char *)v144 - v8;
  uint64_t v9 = sub_1A07856F8(&qword_1E94FA880);
  uint64_t v10 = MEMORY[0x1F4188790](v9 - 8);
  v150 = (char *)v144 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v157 = (char *)v144 - v12;
  uint64_t v13 = sub_1A09F3A08();
  uint64_t v165 = *(void *)(v13 - 8);
  uint64_t v14 = MEMORY[0x1F4188790](v13);
  uint64_t v151 = (char *)v144 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  id v159 = (char *)v144 - v16;
  if (qword_1E94F8500 != -1) {
    swift_once();
  }
  uint64_t v17 = sub_1A09F39E8();
  uint64_t v18 = sub_1A078510C(v17, (uint64_t)qword_1E94FA7C8);
  uint64_t v19 = sub_1A09F33A8();
  uint64_t v156 = v144;
  uint64_t v20 = *(void **)(v19 - 8);
  uint64_t v21 = v20[8];
  MEMORY[0x1F4188790](v19);
  char v22 = (char *)v144 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = (uint64_t (*)(char *, uint64_t, uint64_t))v20[2];
  uint64_t v24 = v23(v22, v168, v19);
  uint64_t v155 = (void (*)(char *, uint64_t, uint64_t))v144;
  uint64_t v162 = v21;
  MEMORY[0x1F4188790](v24);
  id v160 = (void (*)(char *, uint64_t, uint64_t))v23;
  id v161 = v20 + 2;
  v23(v22, v163, v19);
  unint64_t v25 = v167;
  swift_bridgeObjectRetain_n();
  uint64_t v158 = v18;
  uint64_t v26 = sub_1A09F39C8();
  os_log_type_t v27 = sub_1A09F4388();
  int v28 = v27;
  BOOL v29 = os_log_type_enabled(v26, v27);
  uint64_t v164 = v13;
  if (v29)
  {
    uint64_t v30 = swift_slowAlloc();
    uint64_t v147 = (void *)swift_slowAlloc();
    v170[0] = v147;
    *(_DWORD *)uint64_t v30 = 136315650;
    LODWORD(v146) = v28;
    swift_bridgeObjectRetain();
    uint64_t v169 = sub_1A0785144(v166, v25, (uint64_t *)v170);
    os_log_t v145 = v26;
    sub_1A09F4528();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v30 + 12) = 2080;
    sub_1A0897D8C();
    uint64_t v31 = sub_1A09F4AE8();
    uint64_t v169 = sub_1A0785144(v31, v32, (uint64_t *)v170);
    sub_1A09F4528();
    swift_bridgeObjectRelease();
    uint64_t v33 = (void (*)(char *, uint64_t))v20[1];
    v33(v22, v19);
    *(_WORD *)(v30 + 22) = 2080;
    uint64_t v34 = sub_1A09F4AE8();
    uint64_t v169 = sub_1A0785144(v34, v35, (uint64_t *)v170);
    uint64_t v36 = v165;
    sub_1A09F4528();
    swift_bridgeObjectRelease();
    uint64_t v37 = v36;
    v33(v22, v19);
    uint64_t v38 = v166;
    os_log_t v39 = v145;
    _os_log_impl(&dword_1A0772000, v145, (os_log_type_t)v146, "decompress[%s]: Decompressing temp file to final destination (%s -> %s).", (uint8_t *)v30, 0x20u);
    uint64_t v40 = v147;
    swift_arrayDestroy();
    MEMORY[0x1A6228C20](v40, -1, -1);
    uint64_t v41 = v30;
    uint64_t v13 = v164;
    MEMORY[0x1A6228C20](v41, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
    uint64_t v43 = (void (*)(char *, uint64_t))v20[1];
    v43(v22, v19);
    v43(v22, v19);

    uint64_t v37 = v165;
    uint64_t v38 = v166;
  }
  MEMORY[0x1F4188790](v42);
  uint64_t v156 = (void *)v19;
  v160((char *)v144 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0), v168, v19);
  uint64_t v45 = (uint64_t)v157;
  sub_1A09F39F8();
  id v46 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v37 + 48);
  if (v46(v45, 1, v13) == 1)
  {
    sub_1A0784C08(v45, &qword_1E94FA880);
    unint64_t v47 = v167;
    swift_bridgeObjectRetain_n();
    uint64_t v48 = sub_1A09F39C8();
    os_log_type_t v49 = sub_1A09F4388();
    if (os_log_type_enabled(v48, v49))
    {
      uint64_t v50 = (uint8_t *)swift_slowAlloc();
      uint64_t v51 = (void *)swift_slowAlloc();
      v170[0] = v51;
      *(_DWORD *)uint64_t v50 = 136315138;
      swift_bridgeObjectRetain();
      uint64_t v169 = sub_1A0785144(v38, v47, (uint64_t *)v170);
      sub_1A09F4528();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1A0772000, v48, v49, "decompress[%s]: Could not create FilePath for the input file", v50, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1A6228C20](v51, -1, -1);
      MEMORY[0x1A6228C20](v50, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    sub_1A08AD488();
    swift_allocError();
    *uint64_t v78 = 8;
    return swift_willThrow();
  }
  uint64_t v155 = *(void (**)(char *, uint64_t, uint64_t))(v37 + 32);
  v155(v159, v45, v13);
  sub_1A09F3548();
  uint64_t v52 = sub_1A09F3528();
  if (v52)
  {
    uint64_t v53 = (char *)v52;
    uint64_t v147 = v46;
    os_log_t v145 = (os_log_t)(v37 + 32);
    v170[0] = (id)MEMORY[0x1E4FBC860];
    uint64_t v54 = sub_1A08AF33C(&qword_1E94FA888, MEMORY[0x1E4FBAC70]);
    uint64_t v55 = sub_1A07856F8(&qword_1E94FA890);
    unint64_t v56 = sub_1A08AF384();
    uint64_t v58 = v152;
    uint64_t v57 = v153;
    sub_1A09F45B8();
    uint64_t v157 = v53;
    id v59 = v58;
    uint64_t v60 = sub_1A09F3518();
    uint64_t v61 = v154 + 8;
    id v62 = *(void (**)(char *, uint64_t))(v154 + 8);
    v62(v59, v57);
    if (v60)
    {
      uint64_t v63 = sub_1A09F35A8();
      uint64_t v154 = v61;
      uint64_t v64 = v63;
      v170[0] = (id)MEMORY[0x1E4FBC860];
      v144[2] = v55;
      uint64_t v146 = v62;
      uint64_t v65 = v59;
      v144[3] = v54;
      sub_1A09F45B8();
      v144[1] = v64;
      uint64_t v66 = sub_1A09F3568();
      uint64_t v67 = v65;
      uint64_t v68 = v146;
      uint64_t v69 = ((uint64_t (*)(char *, uint64_t))v146)(v67, v57);
      v144[4] = v66;
      if (!v66)
      {
        unint64_t v92 = v167;
        swift_bridgeObjectRetain_n();
        os_log_type_t v93 = sub_1A09F39C8();
        os_log_type_t v94 = sub_1A09F4378();
        if (os_log_type_enabled(v93, v94))
        {
          uint64_t v95 = (uint8_t *)swift_slowAlloc();
          uint64_t v96 = (void *)swift_slowAlloc();
          v170[0] = v96;
          *(_DWORD *)uint64_t v95 = 136315138;
          swift_bridgeObjectRetain();
          uint64_t v169 = sub_1A0785144(v166, v92, (uint64_t *)v170);
          sub_1A09F4528();
          swift_bridgeObjectRelease_n();
          _os_log_impl(&dword_1A0772000, v93, v94, "decompress[%s]: Failed to create decode filestream", v95, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x1A6228C20](v96, -1, -1);
          MEMORY[0x1A6228C20](v95, -1, -1);
        }
        else
        {

          swift_bridgeObjectRelease_n();
        }
        uint64_t v108 = v165;
        sub_1A08AD488();
        swift_allocError();
        *uint64_t v109 = 8;
        swift_willThrow();
        sub_1A09F3538();
        goto LABEL_34;
      }
      v144[5] = v60;
      MEMORY[0x1F4188790](v69);
      v160((char *)v144 - ((v70 + 15) & 0xFFFFFFFFFFFFFFF0), v163, (uint64_t)v156);
      uint64_t v71 = (uint64_t)v150;
      sub_1A09F39F8();
      uint64_t v72 = v164;
      if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v147)(v71, 1, v164) == 1)
      {
        sub_1A0784C08(v71, &qword_1E94FA880);
        unint64_t v73 = v167;
        swift_bridgeObjectRetain_n();
        uint64_t v74 = sub_1A09F39C8();
        os_log_type_t v75 = sub_1A09F4378();
        if (os_log_type_enabled(v74, v75))
        {
          uint64_t v76 = (uint8_t *)swift_slowAlloc();
          uint64_t v77 = (void *)swift_slowAlloc();
          v170[0] = v77;
          *(_DWORD *)uint64_t v76 = 136315138;
          swift_bridgeObjectRetain();
          uint64_t v169 = sub_1A0785144(v166, v73, (uint64_t *)v170);
          sub_1A09F4528();
          swift_bridgeObjectRelease_n();
          _os_log_impl(&dword_1A0772000, v74, v75, "decompress[%s]: Failed to create destination filepath", v76, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x1A6228C20](v77, -1, -1);
          MEMORY[0x1A6228C20](v76, -1, -1);
        }
        else
        {

          swift_bridgeObjectRelease_n();
        }
        uint64_t v108 = v165;
        sub_1A08AD488();
        swift_allocError();
        unsigned char *v110 = 8;
        swift_willThrow();
        sub_1A09F3588();
        swift_release();
        sub_1A09F3538();
LABEL_34:
        swift_release();
        sub_1A09F3538();
        swift_release();
        return (*(uint64_t (**)(char *, uint64_t))(v108 + 8))(v159, v164);
      }
      uint64_t v97 = v151;
      v155(v151, v71, v72);
      v170[0] = (id)MEMORY[0x1E4FBC860];
      uint64_t v99 = v152;
      uint64_t v98 = v153;
      unint64_t v163 = v56;
      sub_1A09F45B8();
      uint64_t v100 = MEMORY[0x1A6225740](v97, 0, 0, v99, 0);
      v68(v99, v98);
      if (!v100)
      {
        unint64_t v111 = v167;
        swift_bridgeObjectRetain_n();
        uint64_t v112 = sub_1A09F39C8();
        os_log_type_t v113 = sub_1A09F4378();
        if (os_log_type_enabled(v112, v113))
        {
          uint64_t v114 = (uint8_t *)swift_slowAlloc();
          uint64_t v115 = (void *)swift_slowAlloc();
          v170[0] = v115;
          *(_DWORD *)uint64_t v114 = 136315138;
          swift_bridgeObjectRetain();
          uint64_t v169 = sub_1A0785144(v166, v111, (uint64_t *)v170);
          sub_1A09F4528();
          swift_bridgeObjectRelease_n();
          _os_log_impl(&dword_1A0772000, v112, v113, "decompress[%s]: Failed to extract", v114, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x1A6228C20](v115, -1, -1);
          MEMORY[0x1A6228C20](v114, -1, -1);
        }
        else
        {

          swift_bridgeObjectRelease_n();
        }
        uint64_t v128 = v165;
        sub_1A08AD488();
        swift_allocError();
        *uint64_t v129 = 8;
        swift_willThrow();
        uint64_t v130 = *(void (**)(char *, uint64_t))(v128 + 8);
        v130(v151, v164);
        sub_1A09F3588();
        goto LABEL_47;
      }
      v170[0] = (id)MEMORY[0x1E4FBC860];
      uint64_t v101 = v148;
      sub_1A09F45B8();
      unint64_t v163 = v100;
      uint64_t v102 = v149;
      sub_1A09F3598();
      uint64_t v103 = v102;
      unint64_t v104 = v167;
      if (v102)
      {
        v146(v101, v98);
LABEL_43:
        swift_bridgeObjectRetain();
        id v132 = v103;
        swift_bridgeObjectRetain();
        id v133 = v103;
        uint64_t v134 = sub_1A09F39C8();
        os_log_type_t v135 = sub_1A09F4378();
        if (os_log_type_enabled(v134, v135))
        {
          uint64_t v136 = swift_slowAlloc();
          uint64_t v137 = (void *)swift_slowAlloc();
          v138 = (void *)swift_slowAlloc();
          v170[0] = v138;
          *(_DWORD *)uint64_t v136 = 136315394;
          swift_bridgeObjectRetain();
          uint64_t v169 = sub_1A0785144(v166, v104, (uint64_t *)v170);
          sub_1A09F4528();
          swift_bridgeObjectRelease_n();
          *(_WORD *)(v136 + 12) = 2112;
          id v139 = v103;
          uint64_t v140 = _swift_stdlib_bridgeErrorToNSError();
          uint64_t v169 = v140;
          sub_1A09F4528();
          *uint64_t v137 = v140;

          _os_log_impl(&dword_1A0772000, v134, v135, "decompress[%s]: Failed to decompress: %@", (uint8_t *)v136, 0x16u);
          sub_1A07856F8(&qword_1E94F7740);
          swift_arrayDestroy();
          MEMORY[0x1A6228C20](v137, -1, -1);
          swift_arrayDestroy();
          MEMORY[0x1A6228C20](v138, -1, -1);
          MEMORY[0x1A6228C20](v136, -1, -1);
        }
        else
        {
          swift_bridgeObjectRelease_n();
        }
        uint64_t v141 = v165;
        sub_1A08AD488();
        swift_allocError();
        unsigned char *v142 = 8;
        swift_willThrow();

        sub_1A09F3588();
        swift_release();
        uint64_t v130 = *(void (**)(char *, uint64_t))(v141 + 8);
        v130(v151, v164);
        sub_1A09F3588();
LABEL_47:
        swift_release();
        sub_1A09F3538();
        swift_release();
        sub_1A09F3538();
        swift_release();
        return ((uint64_t (*)(char *, uint64_t))v130)(v159, v164);
      }
      v146(v101, v98);
      id v116 = objc_msgSend(self, sel_defaultManager);
      uint64_t v117 = (void *)sub_1A09F3308();
      v170[0] = 0;
      unsigned int v118 = objc_msgSend(v116, sel_removeItemAtURL_error_, v117, v170);

      id v119 = v170[0];
      if (!v118)
      {
        id v131 = v170[0];
        uint64_t v103 = (void *)sub_1A09F3258();

        swift_willThrow();
        goto LABEL_43;
      }
      swift_bridgeObjectRetain_n();
      id v120 = v119;
      id v121 = sub_1A09F39C8();
      os_log_type_t v122 = sub_1A09F4388();
      BOOL v123 = os_log_type_enabled(v121, v122);
      unint64_t v124 = v104;
      uint64_t v125 = v165;
      if (v123)
      {
        uint64_t v126 = (uint8_t *)swift_slowAlloc();
        uint64_t v127 = (void *)swift_slowAlloc();
        v170[0] = v127;
        *(_DWORD *)uint64_t v126 = 136315138;
        swift_bridgeObjectRetain();
        uint64_t v169 = sub_1A0785144(v166, v124, (uint64_t *)v170);
        sub_1A09F4528();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_1A0772000, v121, v122, "decompress[%s]: Success", v126, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1A6228C20](v127, -1, -1);
        MEMORY[0x1A6228C20](v126, -1, -1);
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      sub_1A09F3588();
      swift_release();
      uint64_t v143 = *(void (**)(char *, uint64_t))(v125 + 8);
      v143(v151, v164);
      sub_1A09F3588();
      swift_release();
      sub_1A09F3538();
      swift_release();
      sub_1A09F3538();
      swift_release();
      return ((uint64_t (*)(char *, uint64_t))v143)(v159, v164);
    }
    else
    {
      unint64_t v85 = v167;
      swift_bridgeObjectRetain_n();
      uint64_t v86 = sub_1A09F39C8();
      os_log_type_t v87 = sub_1A09F4378();
      if (os_log_type_enabled(v86, v87))
      {
        uint64_t v88 = (uint8_t *)swift_slowAlloc();
        uint64_t v89 = (void *)swift_slowAlloc();
        v170[0] = v89;
        *(_DWORD *)uint64_t v88 = 136315138;
        swift_bridgeObjectRetain();
        uint64_t v169 = sub_1A0785144(v166, v85, (uint64_t *)v170);
        sub_1A09F4528();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_1A0772000, v86, v87, "decompress[%s]: Failed to create decompression filestream", v88, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1A6228C20](v89, -1, -1);
        MEMORY[0x1A6228C20](v88, -1, -1);
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      uint64_t v106 = v164;
      uint64_t v105 = v165;
      sub_1A08AD488();
      swift_allocError();
      unsigned char *v107 = 8;
      swift_willThrow();
      sub_1A09F3538();
      swift_release();
      return (*(uint64_t (**)(char *, uint64_t))(v105 + 8))(v159, v106);
    }
  }
  else
  {
    unint64_t v80 = v167;
    swift_bridgeObjectRetain_n();
    unint64_t v81 = sub_1A09F39C8();
    os_log_type_t v82 = sub_1A09F4378();
    if (os_log_type_enabled(v81, v82))
    {
      uint64_t v83 = (uint8_t *)swift_slowAlloc();
      uint64_t v84 = (void *)swift_slowAlloc();
      v170[0] = v84;
      *(_DWORD *)uint64_t v83 = 136315138;
      swift_bridgeObjectRetain();
      uint64_t v169 = sub_1A0785144(v166, v80, (uint64_t *)v170);
      sub_1A09F4528();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1A0772000, v81, v82, "decompress[%s]: Could not create filestream for the input file", v83, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1A6228C20](v84, -1, -1);
      MEMORY[0x1A6228C20](v83, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    uint64_t v90 = v164;
    sub_1A08AD488();
    swift_allocError();
    *unint64_t v91 = 8;
    swift_willThrow();
    return (*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v159, v90);
  }
}

uint64_t sub_1A08AF264(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_1A08AF278(a1, a2);
  }
  return a1;
}

uint64_t sub_1A08AF278(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_retain();
  }

  return swift_retain();
}

uint64_t sub_1A08AF2D0(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_1A08AF2E4(a1, a2);
  }
  return a1;
}

uint64_t sub_1A08AF2E4(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_release();
  }

  return swift_release();
}

uint64_t sub_1A08AF33C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1A08AF384()
{
  unint64_t result = qword_1E94FA898;
  if (!qword_1E94FA898)
  {
    sub_1A078D800(&qword_1E94FA890);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FA898);
  }
  return result;
}

uint64_t sub_1A08AF3E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1A07856F8(&qword_1E94FA828);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A08AF448(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_1A07856F8(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1A08AF4AC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for RemoteIntentMirrorFileRepresentation(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1A08AF508(uint64_t a1)
{
  return sub_1A08A4BA8(a1, v1);
}

uint64_t sub_1A08AF510()
{
  uint64_t v0 = sub_1A09F39E8();
  sub_1A078D848(v0, qword_1E94FA8A0);
  sub_1A078510C(v0, (uint64_t)qword_1E94FA8A0);
  return sub_1A09F39D8();
}

uint64_t static RemoteIntentRequestAttachmentBroadcasts.notificationEntityTypeIdentifier.getter()
{
  return sub_1A088F9B8(&qword_1E94FA8B8);
}

uint64_t static RemoteIntentRequestAttachmentBroadcasts.notificationEntityTypeIdentifier.setter(uint64_t a1, uint64_t a2)
{
  return sub_1A088FA1C(a1, a2, &qword_1E94FA8B8, &off_1E94FA8C0);
}

uint64_t (*static RemoteIntentRequestAttachmentBroadcasts.notificationEntityTypeIdentifier.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t static RemoteIntentRequestAttachmentBroadcasts.requestTypeIdentifier.getter()
{
  return sub_1A088F9B8((uint64_t *)&unk_1E94FA8C8);
}

uint64_t static RemoteIntentRequestAttachmentBroadcasts.requestTypeIdentifier.setter(uint64_t a1, uint64_t a2)
{
  return sub_1A088FA1C(a1, a2, qword_1E94FA8C8, &qword_1E94FA8C8[1]);
}

uint64_t (*static RemoteIntentRequestAttachmentBroadcasts.requestTypeIdentifier.modify())()
{
  return j__swift_endAccess;
}

uint64_t RemoteIntentRequestAttachmentBroadcasts.perform(using:)(uint64_t a1)
{
  *(void *)(v1 + 120) = a1;
  return MEMORY[0x1F4188298](sub_1A08AF6A4, 0, 0);
}

uint64_t sub_1A08AF6A4()
{
  *(void *)(v0 + 12_Block_object_dispose(&a9, 8) = sub_1A09F4188();
  *(void *)(v0 + 136) = sub_1A09F4178();
  uint64_t v2 = sub_1A09F4108();
  return MEMORY[0x1F4188298](sub_1A08AF73C, v2, v1);
}

uint64_t sub_1A08AF73C()
{
  swift_release();
  if (qword_1E94F7598 != -1) {
    swift_once();
  }
  return MEMORY[0x1F4188298](sub_1A08AF7D4, 0, 0);
}

uint64_t sub_1A08AF7D4()
{
  *(void *)(v0 + 144) = sub_1A09F4178();
  uint64_t v2 = sub_1A09F4108();
  return MEMORY[0x1F4188298](sub_1A08AF860, v2, v1);
}

uint64_t sub_1A08AF860()
{
  swift_release();
  *(void *)(v0 + 152) = qword_1E94F7588;
  return MEMORY[0x1F4188298](sub_1A08AF8D4, 0, 0);
}

uint64_t sub_1A08AF8D4()
{
  swift_beginAccess();
  uint64_t v1 = off_1E94FA8C0;
  v0[20] = qword_1E94FA8B8;
  v0[21] = v1;
  swift_bridgeObjectRetain();
  v0[22] = sub_1A09F4178();
  uint64_t v3 = sub_1A09F4108();
  return MEMORY[0x1F4188298](sub_1A088FDE0, v3, v2);
}

void RemoteIntentRequestAttachmentBroadcasts.route(response:auxiliaryOutput:to:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)a1 + 16);
  if (!v5)
  {
    uint64_t v7 = (void *)MEMORY[0x1E4FBC860];
    if (*(void *)(MEMORY[0x1E4FBC860] + 16)) {
      goto LABEL_12;
    }
LABEL_18:
    swift_bridgeObjectRelease();
    if (qword_1E94F8508 != -1) {
      swift_once();
    }
    uint64_t v15 = sub_1A09F39E8();
    sub_1A078510C(v15, (uint64_t)qword_1E94FA8A0);
    uint64_t v16 = sub_1A09F39C8();
    os_log_type_t v17 = sub_1A09F4358();
    if (!os_log_type_enabled(v16, v17)) {
      goto LABEL_27;
    }
    uint64_t v18 = (uint8_t *)swift_slowAlloc();
    uint64_t v19 = swift_slowAlloc();
    v25[0] = v19;
    *(_DWORD *)uint64_t v18 = 136315138;
    *(void *)&v24[0] = sub_1A0785144(0xD000000000000023, 0x80000001A0A32110, v25);
    sub_1A09F4528();
    uint64_t v20 = "%s Remote request did not return any broadcasts to process.";
    goto LABEL_26;
  }
  uint64_t v6 = *(void *)a1 + 32;
  swift_bridgeObjectRetain();
  uint64_t v7 = (void *)MEMORY[0x1E4FBC860];
  do
  {
    sub_1A08918A4(v6, (uint64_t)v25);
    sub_1A0883D94((uint64_t)v25, (uint64_t)&v22);
    sub_1A0891900((uint64_t)v25);
    if (v23)
    {
      sub_1A089266C(&v22, (uint64_t)v24);
      sub_1A089266C(v24, (uint64_t)&v22);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v7 = sub_1A0891644(0, v7[2] + 1, 1, v7);
      }
      unint64_t v9 = v7[2];
      unint64_t v8 = v7[3];
      if (v9 >= v8 >> 1) {
        uint64_t v7 = sub_1A0891644((void *)(v8 > 1), v9 + 1, 1, v7);
      }
      _OWORD v7[2] = v9 + 1;
      sub_1A089266C(&v22, (uint64_t)&v7[5 * v9 + 4]);
    }
    else
    {
      sub_1A0784C08((uint64_t)&v22, &qword_1E94F9A20);
    }
    v6 += 40;
    --v5;
  }
  while (v5);
  swift_bridgeObjectRelease();
  if (!v7[2]) {
    goto LABEL_18;
  }
LABEL_12:
  uint64_t v10 = sub_1A08AFF00((uint64_t)v7);
  swift_bridgeObjectRelease();
  if (!v10)
  {
    if (qword_1E94F8508 != -1) {
      swift_once();
    }
    uint64_t v21 = sub_1A09F39E8();
    sub_1A078510C(v21, (uint64_t)qword_1E94FA8A0);
    uint64_t v16 = sub_1A09F39C8();
    os_log_type_t v17 = sub_1A09F4378();
    if (!os_log_type_enabled(v16, v17)) {
      goto LABEL_27;
    }
    uint64_t v18 = (uint8_t *)swift_slowAlloc();
    uint64_t v19 = swift_slowAlloc();
    v25[0] = v19;
    *(_DWORD *)uint64_t v18 = 136315138;
    *(void *)&v24[0] = sub_1A0785144(0xD000000000000023, 0x80000001A0A32110, v25);
    sub_1A09F4528();
    uint64_t v20 = "%s broadcasts do not conform to RemoteIntentFileBroadcast. Bailing!";
LABEL_26:
    _os_log_impl(&dword_1A0772000, v16, v17, v20, v18, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1A6228C20](v19, -1, -1);
    MEMORY[0x1A6228C20](v18, -1, -1);
LABEL_27:

    return;
  }
  uint64_t v11 = *(void *)(v10 + 16);
  if (v11)
  {
    uint64_t v12 = v10 + 32;
    do
    {
      sub_1A0883D94(v12, (uint64_t)v25);
      uint64_t v13 = v26;
      uint64_t v14 = v27;
      sub_1A086F45C(v25, v26);
      *(void *)&v24[0] = a2;
      (*(void (**)(uint64_t, long long *, uint64_t))(*(void *)(v14 + 8) + 56))(a3, v24, v13);
      _s17IMSharedUtilities29RemoteIntentBroadcastEncodingVwxx_0((uint64_t)v25);
      v12 += 40;
      --v11;
    }
    while (v11);
  }
  swift_bridgeObjectRelease();
}

uint64_t sub_1A08AFDB8(uint64_t a1)
{
  int64_t v2 = *(void *)(a1 + 16);
  uint64_t v12 = MEMORY[0x1E4FBC860];
  sub_1A09EAEEC(0, v2, 0);
  uint64_t v3 = v12;
  if (v2)
  {
    for (uint64_t i = a1 + 32; ; i += 32)
    {
      sub_1A0785268(i, (uint64_t)v11);
      if (!swift_dynamicCast()) {
        break;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1A09EAEEC(0, *(void *)(v3 + 16) + 1, 1);
        uint64_t v3 = v12;
      }
      unint64_t v6 = *(void *)(v3 + 16);
      unint64_t v5 = *(void *)(v3 + 24);
      if (v6 >= v5 >> 1)
      {
        sub_1A09EAEEC(v5 > 1, v6 + 1, 1);
        uint64_t v3 = v12;
      }
      *(void *)(v3 + 16) = v6 + 1;
      uint64_t v7 = v3 + 16 * v6;
      *(void *)(v7 + 32) = v9;
      *(void *)(v7 + 40) = v10;
      if (!--v2) {
        return v3;
      }
    }
    swift_release();
    swift_bridgeObjectRelease();
    return 0;
  }
  return v3;
}

uint64_t sub_1A08AFF00(uint64_t a1)
{
  int64_t v2 = *(void *)(a1 + 16);
  uint64_t v12 = MEMORY[0x1E4FBC860];
  sub_1A09EAF0C(0, v2, 0);
  uint64_t v3 = v12;
  if (v2)
  {
    for (uint64_t i = a1 + 32; ; i += 40)
    {
      sub_1A0883D94(i, (uint64_t)v10);
      sub_1A07856F8(&qword_1E94F9BB8);
      sub_1A07856F8(&qword_1E94F9BA8);
      if (!swift_dynamicCast()) {
        break;
      }
      sub_1A089266C(v8, (uint64_t)v11);
      sub_1A089266C(v11, (uint64_t)v10);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1A09EAF0C(0, *(void *)(v3 + 16) + 1, 1);
        uint64_t v3 = v12;
      }
      unint64_t v6 = *(void *)(v3 + 16);
      unint64_t v5 = *(void *)(v3 + 24);
      if (v6 >= v5 >> 1)
      {
        sub_1A09EAF0C(v5 > 1, v6 + 1, 1);
        uint64_t v3 = v12;
      }
      *(void *)(v3 + 16) = v6 + 1;
      sub_1A089266C(v10, v3 + 40 * v6 + 32);
      if (!--v2) {
        return v3;
      }
    }
    uint64_t v9 = 0;
    memset(v8, 0, sizeof(v8));
    swift_release();
    sub_1A0784C08((uint64_t)v8, &qword_1E94FA8F0);
    return 0;
  }
  return v3;
}

uint64_t sub_1A08B0080(uint64_t a1)
{
  int64_t v2 = *(void *)(a1 + 16);
  uint64_t v10 = MEMORY[0x1E4FBC860];
  sub_1A09EAF2C(0, v2, 0);
  uint64_t v3 = v10;
  if (v2)
  {
    for (uint64_t i = a1 + 32; ; i += 32)
    {
      sub_1A0785268(i, (uint64_t)v9);
      sub_1A07856F8((uint64_t *)&unk_1E94F9030);
      if (!swift_dynamicCast()) {
        break;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1A09EAF2C(0, *(void *)(v3 + 16) + 1, 1);
        uint64_t v3 = v10;
      }
      unint64_t v6 = *(void *)(v3 + 16);
      unint64_t v5 = *(void *)(v3 + 24);
      if (v6 >= v5 >> 1)
      {
        sub_1A09EAF2C(v5 > 1, v6 + 1, 1);
        uint64_t v3 = v10;
      }
      *(void *)(v3 + 16) = v6 + 1;
      *(void *)(v3 + 8 * v6 + 32) = v8;
      if (!--v2) {
        return v3;
      }
    }
    swift_release();
    swift_bridgeObjectRelease();
    return 0;
  }
  return v3;
}

uint64_t sub_1A08B01C8(uint64_t a1)
{
  unint64_t v2 = sub_1A08B0EA0();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A08B0204(uint64_t a1)
{
  unint64_t v2 = sub_1A08B0EA0();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t RemoteIntentRequestAttachmentBroadcasts.encode(to:)(void *a1)
{
  uint64_t v2 = sub_1A07856F8(&qword_1E94FA8E0);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  unint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A086F45C(a1, a1[3]);
  sub_1A08B0EA0();
  sub_1A09F4CC8();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t RemoteIntentRequestAttachmentBroadcasts.init(from:)(uint64_t a1)
{
  return _s17IMSharedUtilities29RemoteIntentBroadcastEncodingVwxx_0(a1);
}

uint64_t sub_1A08B0378(uint64_t a1, uint64_t a2)
{
  return sub_1A0890CCC(a1, a2, &qword_1E94FA8B8);
}

void sub_1A08B0388(uint64_t a1, uint64_t *a2, uint64_t a3)
{
}

uint64_t sub_1A08B03A4(uint64_t a1, uint64_t a2)
{
  return sub_1A0890CCC(a1, a2, qword_1E94FA8C8);
}

uint64_t sub_1A08B03B4(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1A077EE58;
  v3[15] = a1;
  return MEMORY[0x1F4188298](sub_1A08AF6A4, 0, 0);
}

uint64_t sub_1A08B0460(void *a1)
{
  uint64_t v2 = sub_1A07856F8(&qword_1E94FA8E0);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A086F45C(a1, a1[3]);
  sub_1A08B0EA0();
  sub_1A09F4CC8();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t RemoteIntentRequestAttachmentBroadcastsResponse.auxiliaryOutput()()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    uint64_t v3 = v1 + 32;
    swift_bridgeObjectRetain();
    uint64_t v4 = (void *)MEMORY[0x1E4FBC860];
    do
    {
      sub_1A08918A4(v3, (uint64_t)v43);
      sub_1A0883D94((uint64_t)v43, (uint64_t)v42);
      sub_1A07856F8(&qword_1E94F9BB8);
      sub_1A07856F8(&qword_1E94F9BA8);
      if ((swift_dynamicCast() & 1) == 0)
      {
        uint64_t v41 = 0;
        long long v39 = 0u;
        long long v40 = 0u;
      }
      sub_1A0891900((uint64_t)v43);
      if (*((void *)&v40 + 1))
      {
        sub_1A089266C(&v39, (uint64_t)v42);
        sub_1A089266C(v42, (uint64_t)&v39);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v4 = sub_1A0891A98(0, v4[2] + 1, 1, v4);
        }
        unint64_t v6 = v4[2];
        unint64_t v5 = v4[3];
        if (v6 >= v5 >> 1) {
          uint64_t v4 = sub_1A0891A98((void *)(v5 > 1), v6 + 1, 1, v4);
        }
        void v4[2] = v6 + 1;
        sub_1A089266C(&v39, (uint64_t)&v4[5 * v6 + 4]);
      }
      else
      {
        sub_1A0784C08((uint64_t)&v39, &qword_1E94FA8F0);
      }
      v3 += 40;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease();
    uint64_t v7 = v4[2];
    if (v7) {
      goto LABEL_14;
    }
LABEL_37:
    swift_bridgeObjectRelease();
    if (qword_1E94F8508 != -1) {
      goto LABEL_46;
    }
    goto LABEL_38;
  }
  uint64_t v4 = (void *)MEMORY[0x1E4FBC860];
  uint64_t v7 = *(void *)(MEMORY[0x1E4FBC860] + 16);
  if (!v7) {
    goto LABEL_37;
  }
LABEL_14:
  uint64_t v8 = (uint64_t)(v4 + 4);
  swift_bridgeObjectRetain();
  unint64_t v9 = MEMORY[0x1E4FBC860];
  while (1)
  {
    sub_1A0883D94(v8, (uint64_t)v43);
    uint64_t v10 = v44;
    uint64_t v11 = v45;
    sub_1A086F45C(v43, v44);
    uint64_t v12 = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 16))(v10, v11);
    uint64_t v13 = *(void *)(v12 + 16);
    int64_t v14 = *(void *)(v9 + 16);
    int64_t v15 = v14 + v13;
    if (__OFADD__(v14, v13)) {
      break;
    }
    uint64_t v16 = v12;
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    if (isUniquelyReferenced_nonNull_native && v15 <= *(void *)(v9 + 24) >> 1)
    {
      if (*(void *)(v16 + 16)) {
        goto LABEL_26;
      }
    }
    else
    {
      if (v14 <= v15) {
        int64_t v18 = v14 + v13;
      }
      else {
        int64_t v18 = v14;
      }
      unint64_t v9 = sub_1A0891BDC(isUniquelyReferenced_nonNull_native, v18, 1, v9);
      if (*(void *)(v16 + 16))
      {
LABEL_26:
        uint64_t v19 = *(void *)(v9 + 16);
        uint64_t v20 = (*(void *)(v9 + 24) >> 1) - v19;
        uint64_t v21 = *(void *)(type metadata accessor for RemoteIntentMirrorFile(0) - 8);
        uint64_t v22 = *(void *)(v21 + 72);
        if (v20 < v13) {
          goto LABEL_44;
        }
        unint64_t v23 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
        unint64_t v24 = v9 + v23 + v22 * v19;
        unint64_t v25 = v16 + v23;
        uint64_t v26 = v22 * v13;
        unint64_t v27 = v24 + v26;
        unint64_t v28 = v25 + v26;
        if (v25 < v27 && v24 < v28)
        {
          uint64_t result = sub_1A09F47F8();
          __break(1u);
          return result;
        }
        swift_arrayInitWithCopy();
        if (v13)
        {
          uint64_t v30 = *(void *)(v9 + 16);
          BOOL v31 = __OFADD__(v30, v13);
          uint64_t v32 = v30 + v13;
          if (v31) {
            goto LABEL_45;
          }
          *(void *)(v9 + 16) = v32;
        }
        goto LABEL_16;
      }
    }
    if (v13) {
      goto LABEL_43;
    }
LABEL_16:
    swift_bridgeObjectRelease();
    _s17IMSharedUtilities29RemoteIntentBroadcastEncodingVwxx_0((uint64_t)v43);
    v8 += 40;
    if (!--v7)
    {
      swift_bridgeObjectRelease_n();
      return v9;
    }
  }
  __break(1u);
LABEL_43:
  __break(1u);
LABEL_44:
  __break(1u);
LABEL_45:
  __break(1u);
LABEL_46:
  swift_once();
LABEL_38:
  uint64_t v33 = sub_1A09F39E8();
  sub_1A078510C(v33, (uint64_t)qword_1E94FA8A0);
  uint64_t v34 = sub_1A09F39C8();
  os_log_type_t v35 = sub_1A09F4378();
  if (os_log_type_enabled(v34, v35))
  {
    uint64_t v36 = (uint8_t *)swift_slowAlloc();
    uint64_t v37 = swift_slowAlloc();
    v43[0] = v37;
    *(_DWORD *)uint64_t v36 = 136315138;
    *(void *)&v42[0] = sub_1A0785144(0xD000000000000011, 0x80000001A0A32140, v43);
    sub_1A09F4528();
    _os_log_impl(&dword_1A0772000, v34, v35, "%s Expected broadcasts to be of type RemoteIntentFileBroadcast to retrieve file data.", v36, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1A6228C20](v37, -1, -1);
    MEMORY[0x1A6228C20](v36, -1, -1);
  }

  return MEMORY[0x1E4FBC860];
}

uint64_t RemoteIntentRequestAttachmentBroadcastsResponse.broadcastEncodings.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t RemoteIntentRequestAttachmentBroadcastsResponse.broadcastEncodings.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v1 = a1;
  return result;
}

uint64_t (*RemoteIntentRequestAttachmentBroadcastsResponse.broadcastEncodings.modify())()
{
  return nullsub_5;
}

uint64_t sub_1A08B0AA8(uint64_t a1)
{
  unint64_t v2 = sub_1A08B0EF4();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A08B0AE4(uint64_t a1)
{
  unint64_t v2 = sub_1A08B0EF4();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t RemoteIntentRequestAttachmentBroadcastsResponse.encode(to:)(void *a1)
{
  uint64_t v3 = sub_1A07856F8(&qword_1E94FA8F8);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  unint64_t v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *v1;
  sub_1A086F45C(a1, a1[3]);
  sub_1A08B0EF4();
  sub_1A09F4CC8();
  v9[1] = v7;
  sub_1A07856F8(&qword_1E94F9A50);
  sub_1A0892780(&qword_1E94F9A58, (void (*)(void))sub_1A089272C);
  sub_1A09F4A78();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t RemoteIntentRequestAttachmentBroadcastsResponse.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = sub_1A07856F8(&qword_1E94FA908);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A086F45C(a1, a1[3]);
  sub_1A08B0EF4();
  sub_1A09F4CA8();
  if (!v2)
  {
    sub_1A07856F8(&qword_1E94F9A50);
    sub_1A0892780(&qword_1E94F9A70, (void (*)(void))sub_1A08927F0);
    sub_1A09F4928();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v10[1];
  }
  return _s17IMSharedUtilities29RemoteIntentBroadcastEncodingVwxx_0((uint64_t)a1);
}

uint64_t sub_1A08B0E48@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = RemoteIntentRequestAttachmentBroadcastsResponse.auxiliaryOutput()();
  *a1 = result;
  return result;
}

uint64_t sub_1A08B0E70@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return RemoteIntentRequestAttachmentBroadcastsResponse.init(from:)(a1, a2);
}

uint64_t sub_1A08B0E88(void *a1)
{
  return RemoteIntentRequestAttachmentBroadcastsResponse.encode(to:)(a1);
}

unint64_t sub_1A08B0EA0()
{
  unint64_t result = qword_1E94FA8E8;
  if (!qword_1E94FA8E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FA8E8);
  }
  return result;
}

unint64_t sub_1A08B0EF4()
{
  unint64_t result = qword_1E94FA900;
  if (!qword_1E94FA900)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FA900);
  }
  return result;
}

unint64_t sub_1A08B0F48(uint64_t a1)
{
  unint64_t result = sub_1A08B0F70();
  *(void *)(a1 + _Block_object_dispose(&a9, 8) = result;
  return result;
}

unint64_t sub_1A08B0F70()
{
  unint64_t result = qword_1E94FA910;
  if (!qword_1E94FA910)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FA910);
  }
  return result;
}

unint64_t sub_1A08B0FC8()
{
  unint64_t result = qword_1E94FA918;
  if (!qword_1E94FA918)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FA918);
  }
  return result;
}

unint64_t sub_1A08B1020()
{
  unint64_t result = qword_1E94FA920;
  if (!qword_1E94FA920)
  {
    sub_1A078D800(&qword_1E94FA928);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FA920);
  }
  return result;
}

unint64_t sub_1A08B1080()
{
  unint64_t result = qword_1E94FA930;
  if (!qword_1E94FA930)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FA930);
  }
  return result;
}

unint64_t sub_1A08B10D4(uint64_t a1)
{
  unint64_t result = sub_1A08B10FC();
  *(void *)(a1 + _Block_object_dispose(&a9, 8) = result;
  return result;
}

unint64_t sub_1A08B10FC()
{
  unint64_t result = qword_1E94FA940;
  if (!qword_1E94FA940)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FA940);
  }
  return result;
}

unint64_t sub_1A08B1150(uint64_t a1)
{
  unint64_t result = sub_1A08B1178();
  *(void *)(a1 + _Block_object_dispose(&a9, 8) = result;
  return result;
}

unint64_t sub_1A08B1178()
{
  unint64_t result = qword_1E94FA948;
  if (!qword_1E94FA948)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FA948);
  }
  return result;
}

uint64_t sub_1A08B11CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A08B13EC(a1, a2, a3, (uint64_t (*)(void))sub_1A08B11F8, (uint64_t (*)(void))sub_1A08B124C);
}

unint64_t sub_1A08B11F8()
{
  unint64_t result = qword_1E94FA950;
  if (!qword_1E94FA950)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FA950);
  }
  return result;
}

unint64_t sub_1A08B124C()
{
  unint64_t result = qword_1E94FA958;
  if (!qword_1E94FA958)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FA958);
  }
  return result;
}

unint64_t sub_1A08B12A0(uint64_t a1)
{
  unint64_t result = sub_1A08B1080();
  *(void *)(a1 + _Block_object_dispose(&a9, 8) = result;
  return result;
}

unint64_t sub_1A08B12C8(uint64_t a1)
{
  unint64_t result = sub_1A08B12F0();
  *(void *)(a1 + _Block_object_dispose(&a9, 8) = result;
  return result;
}

unint64_t sub_1A08B12F0()
{
  unint64_t result = qword_1E94FA960;
  if (!qword_1E94FA960)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FA960);
  }
  return result;
}

unint64_t sub_1A08B1344(uint64_t a1)
{
  unint64_t result = sub_1A08B136C();
  *(void *)(a1 + _Block_object_dispose(&a9, 8) = result;
  return result;
}

unint64_t sub_1A08B136C()
{
  unint64_t result = qword_1E94FA968;
  if (!qword_1E94FA968)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FA968);
  }
  return result;
}

uint64_t sub_1A08B13C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A08B13EC(a1, a2, a3, (uint64_t (*)(void))sub_1A08B1428, (uint64_t (*)(void))sub_1A08B147C);
}

uint64_t sub_1A08B13EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t (*a5)(void))
{
  *(void *)(a1 + _Block_object_dispose(&a9, 8) = a4();
  uint64_t result = a5();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1A08B1428()
{
  unint64_t result = qword_1E94FA970;
  if (!qword_1E94FA970)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FA970);
  }
  return result;
}

unint64_t sub_1A08B147C()
{
  unint64_t result = qword_1E94FA978;
  if (!qword_1E94FA978)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FA978);
  }
  return result;
}

ValueMetadata *type metadata accessor for RemoteIntentRequestAttachmentBroadcasts()
{
  return &type metadata for RemoteIntentRequestAttachmentBroadcasts;
}

ValueMetadata *type metadata accessor for RemoteIntentRequestAttachmentBroadcastsResponse()
{
  return &type metadata for RemoteIntentRequestAttachmentBroadcastsResponse;
}

unsigned char *storeEnumTagSinglePayload for RemoteIntentRequestAttachmentBroadcastsResponse.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1A08B158CLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for RemoteIntentRequestAttachmentBroadcastsResponse.CodingKeys()
{
  return &type metadata for RemoteIntentRequestAttachmentBroadcastsResponse.CodingKeys;
}

ValueMetadata *type metadata accessor for RemoteIntentRequestAttachmentBroadcasts.CodingKeys()
{
  return &type metadata for RemoteIntentRequestAttachmentBroadcasts.CodingKeys;
}

unint64_t sub_1A08B15D8()
{
  unint64_t result = qword_1E94FA980;
  if (!qword_1E94FA980)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FA980);
  }
  return result;
}

unint64_t sub_1A08B1630()
{
  unint64_t result = qword_1E94FA988;
  if (!qword_1E94FA988)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FA988);
  }
  return result;
}

unint64_t sub_1A08B1688()
{
  unint64_t result = qword_1E94FA990;
  if (!qword_1E94FA990)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FA990);
  }
  return result;
}

unint64_t sub_1A08B16E0()
{
  unint64_t result = qword_1E94FA998;
  if (!qword_1E94FA998)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FA998);
  }
  return result;
}

unint64_t sub_1A08B1738()
{
  unint64_t result = qword_1E94FA9A0;
  if (!qword_1E94FA9A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FA9A0);
  }
  return result;
}

void __swiftcall IMActionDialVideo.init(dictionary:)(IMActionDialVideo_optional *__return_ptr retstr, Swift::OpaquePointer dictionary)
{
  id v2 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  int v3 = (void *)sub_1A09F3CE8();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_initWithDictionary_, v3);
}

id IMActionDialVideo.init(dictionary:)(uint64_t a1)
{
  id v2 = v1;
  if (*(void *)(a1 + 16))
  {
    unint64_t v4 = sub_1A087AAA4(0x6D754E656E6F6870, 0xEB00000000726562);
    if (v5)
    {
      sub_1A0785268(*(void *)(a1 + 56) + 32 * v4, (uint64_t)&v12);
      if (swift_dynamicCast())
      {
        uint64_t v6 = (void *)sub_1A09F3DE8();
        swift_bridgeObjectRelease();
        if (*(void *)(a1 + 16) && (unint64_t v7 = sub_1A087AAA4(0x6B6361626C6C6166, 0xEB000000006C7255), (v8 & 1) != 0))
        {
          sub_1A0785268(*(void *)(a1 + 56) + 32 * v7, (uint64_t)&v12);
        }
        else
        {
          long long v12 = 0u;
          long long v13 = 0u;
        }
        swift_bridgeObjectRelease();
        if (*((void *)&v13 + 1))
        {
          if (swift_dynamicCast())
          {
            uint64_t v11 = (void *)sub_1A09F3DE8();
            swift_bridgeObjectRelease();
LABEL_15:
            id v9 = objc_msgSend(v2, sel_initWithPhoneNumber_fallbackUrl_, v6, v11);

            return v9;
          }
        }
        else
        {
          sub_1A0783C7C((uint64_t)&v12);
        }
        uint64_t v11 = 0;
        goto LABEL_15;
      }
    }
  }
  swift_bridgeObjectRelease();
  swift_getObjectType();
  swift_deallocPartialClassInstance();
  return 0;
}

uint64_t sub_1A08B1B78()
{
  sub_1A07856F8(&qword_1E94F97B8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1A0A081A0;
  *(void *)(inited + 32) = 0x6D754E656E6F6870;
  *(void *)(inited + 40) = 0xEB00000000726562;
  id v2 = objc_msgSend(v0, sel_phoneNumber);
  uint64_t v3 = sub_1A09F3E18();
  uint64_t v5 = v4;

  uint64_t v6 = MEMORY[0x1E4FBB1A0];
  *(void *)(inited + 4_Block_object_dispose(&a9, 8) = v3;
  *(void *)(inited + 56) = v5;
  *(void *)(inited + 72) = v6;
  *(void *)(inited + 80) = 0x6B6361626C6C6166;
  *(void *)(inited + 8_Block_object_dispose(&a9, 8) = 0xEB000000006C7255;
  id v7 = objc_msgSend(v0, sel_fallbackUrl);
  if (v7)
  {
    char v8 = v7;
    uint64_t v9 = sub_1A09F3E18();
    uint64_t v11 = v10;

    uint64_t v12 = MEMORY[0x1E4FBB1A0];
  }
  else
  {
    uint64_t v9 = 0;
    uint64_t v11 = 0;
    uint64_t v12 = 0;
    *(void *)(inited + 112) = 0;
  }
  *(void *)(inited + 96) = v9;
  *(void *)(inited + 104) = v11;
  *(void *)(inited + 120) = v12;
  unint64_t v13 = sub_1A08D76DC(inited);
  uint64_t v14 = sub_1A09BE198(v13);
  swift_bridgeObjectRelease();
  return v14;
}

void __swiftcall IMActionDialVideo.init()(IMActionDialVideo *__return_ptr retstr)
{
  id v1 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());

  objc_msgSend(v1, sel_init);
}

void IMActionDialVideo.init()()
{
}

unint64_t type metadata accessor for IMActionDialVideo()
{
  unint64_t result = qword_1E94FA9C0;
  if (!qword_1E94FA9C0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1E94FA9C0);
  }
  return result;
}

void __swiftcall IMActionShowLocation.init(dictionary:)(IMActionShowLocation_optional *__return_ptr retstr, Swift::OpaquePointer dictionary)
{
  id v2 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  uint64_t v3 = (void *)sub_1A09F3CE8();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_initWithDictionary_, v3);
}

id IMActionShowLocation.init(dictionary:)(uint64_t a1)
{
  id v2 = v1;
  if (!*(void *)(a1 + 16))
  {
    uint64_t v6 = 0;
    goto LABEL_16;
  }
  unint64_t v4 = sub_1A087AAA4(0x656475746974616CLL, 0xE800000000000000);
  if ((v5 & 1) == 0)
  {
    uint64_t v6 = 0;
    if (*(void *)(a1 + 16)) {
      goto LABEL_10;
    }
LABEL_16:
    uint64_t v9 = 0;
    goto LABEL_17;
  }
  sub_1A0785268(*(void *)(a1 + 56) + 32 * v4, (uint64_t)&v22);
  sub_1A078231C(0, (unint64_t *)&qword_1EB4A59B8);
  if (swift_dynamicCast()) {
    uint64_t v6 = v21;
  }
  else {
    uint64_t v6 = 0;
  }
  if (!*(void *)(a1 + 16)) {
    goto LABEL_16;
  }
LABEL_10:
  unint64_t v7 = sub_1A087AAA4(0x64757469676E6F6CLL, 0xE900000000000065);
  if (v8)
  {
    sub_1A0785268(*(void *)(a1 + 56) + 32 * v7, (uint64_t)&v22);
    sub_1A078231C(0, (unint64_t *)&qword_1EB4A59B8);
    if (swift_dynamicCast()) {
      uint64_t v9 = v21;
    }
    else {
      uint64_t v9 = 0;
    }
    if (!*(void *)(a1 + 16))
    {
LABEL_17:
      uint64_t v10 = 0;
      if (!*(void *)(a1 + 16)) {
        goto LABEL_26;
      }
      goto LABEL_18;
    }
  }
  else
  {
    uint64_t v9 = 0;
    if (!*(void *)(a1 + 16)) {
      goto LABEL_17;
    }
  }
  unint64_t v14 = sub_1A087AAA4(0x7972657571, 0xE500000000000000);
  if ((v15 & 1) == 0) {
    goto LABEL_17;
  }
  sub_1A0785268(*(void *)(a1 + 56) + 32 * v14, (uint64_t)&v22);
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_17;
  }
  uint64_t v10 = (void *)sub_1A09F3DE8();
  swift_bridgeObjectRelease();
  if (!*(void *)(a1 + 16)) {
    goto LABEL_26;
  }
LABEL_18:
  unint64_t v11 = sub_1A087AAA4(0x6C6562616CLL, 0xE500000000000000);
  if ((v12 & 1) == 0 || (sub_1A0785268(*(void *)(a1 + 56) + 32 * v11, (uint64_t)&v22), (swift_dynamicCast() & 1) == 0))
  {
LABEL_26:
    unint64_t v13 = 0;
    if (!*(void *)(a1 + 16)) {
      goto LABEL_29;
    }
    goto LABEL_27;
  }
  unint64_t v13 = (void *)sub_1A09F3DE8();
  swift_bridgeObjectRelease();
  if (!*(void *)(a1 + 16)) {
    goto LABEL_29;
  }
LABEL_27:
  unint64_t v16 = sub_1A087AAA4(0x6B6361626C6C6166, 0xEB000000006C7255);
  if (v17)
  {
    sub_1A0785268(*(void *)(a1 + 56) + 32 * v16, (uint64_t)&v22);
    goto LABEL_30;
  }
LABEL_29:
  long long v22 = 0u;
  long long v23 = 0u;
LABEL_30:
  swift_bridgeObjectRelease();
  if (!*((void *)&v23 + 1))
  {
    sub_1A0783C7C((uint64_t)&v22);
    goto LABEL_34;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_34:
    int64_t v18 = 0;
    goto LABEL_35;
  }
  int64_t v18 = (void *)sub_1A09F3DE8();
  swift_bridgeObjectRelease();
LABEL_35:
  id v19 = objc_msgSend(v2, sel_initWithLatitude_longitude_query_label_fallbackUrl_, v6, v9, v10, v13, v18);

  return v19;
}

uint64_t sub_1A08B23D8()
{
  sub_1A07856F8(&qword_1E94F97B8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1A0A0AED0;
  *(void *)(inited + 32) = 0x656475746974616CLL;
  *(void *)(inited + 40) = 0xE800000000000000;
  id v2 = objc_msgSend(v0, sel_latitude);
  id v3 = v2;
  if (v2)
  {
    id v2 = (id)sub_1A078231C(0, (unint64_t *)&qword_1EB4A59B8);
  }
  else
  {
    *(void *)(inited + 56) = 0;
    *(void *)(inited + 64) = 0;
  }
  *(void *)(inited + 4_Block_object_dispose(&a9, 8) = v3;
  *(void *)(inited + 72) = v2;
  *(void *)(inited + 80) = 0x64757469676E6F6CLL;
  *(void *)(inited + 8_Block_object_dispose(&a9, 8) = 0xE900000000000065;
  id v4 = objc_msgSend(v0, sel_longitude);
  id v5 = v4;
  if (v4)
  {
    id v4 = (id)sub_1A078231C(0, (unint64_t *)&qword_1EB4A59B8);
  }
  else
  {
    *(void *)(inited + 104) = 0;
    *(void *)(inited + 112) = 0;
  }
  *(void *)(inited + 96) = v5;
  *(void *)(inited + 120) = v4;
  *(void *)(inited + 12_Block_object_dispose(&a9, 8) = 0x7972657571;
  *(void *)(inited + 136) = 0xE500000000000000;
  id v6 = objc_msgSend(v0, sel_query);
  if (v6)
  {
    unint64_t v7 = v6;
    uint64_t v8 = sub_1A09F3E18();
    uint64_t v10 = v9;

    uint64_t v11 = MEMORY[0x1E4FBB1A0];
  }
  else
  {
    uint64_t v8 = 0;
    uint64_t v10 = 0;
    uint64_t v11 = 0;
    *(void *)(inited + 160) = 0;
  }
  *(void *)(inited + 144) = v8;
  *(void *)(inited + 152) = v10;
  *(void *)(inited + 16_Block_object_dispose(&a9, 8) = v11;
  *(void *)(inited + 176) = 0x6C6562616CLL;
  *(void *)(inited + 184) = 0xE500000000000000;
  id v12 = objc_msgSend(v0, sel_label);
  if (v12)
  {
    unint64_t v13 = v12;
    uint64_t v14 = sub_1A09F3E18();
    uint64_t v16 = v15;

    uint64_t v17 = MEMORY[0x1E4FBB1A0];
  }
  else
  {
    uint64_t v14 = 0;
    uint64_t v16 = 0;
    uint64_t v17 = 0;
    *(void *)(inited + 20_Block_object_dispose(&a9, 8) = 0;
  }
  *(void *)(inited + 192) = v14;
  *(void *)(inited + 200) = v16;
  *(void *)(inited + 216) = v17;
  *(void *)(inited + 2++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = 0x6B6361626C6C6166;
  *(void *)(inited + 232) = 0xEB000000006C7255;
  id v18 = objc_msgSend(v0, sel_fallbackUrl);
  if (v18)
  {
    id v19 = v18;
    uint64_t v20 = sub_1A09F3E18();
    uint64_t v22 = v21;

    uint64_t v23 = MEMORY[0x1E4FBB1A0];
  }
  else
  {
    uint64_t v20 = 0;
    uint64_t v22 = 0;
    uint64_t v23 = 0;
    *(void *)(inited + 256) = 0;
  }
  *(void *)(inited + 240) = v20;
  *(void *)(inited + 24_Block_object_dispose(&a9, 8) = v22;
  *(void *)(inited + 264) = v23;
  unint64_t v24 = sub_1A08D76DC(inited);
  uint64_t v25 = sub_1A09BE198(v24);
  swift_bridgeObjectRelease();
  return v25;
}

void __swiftcall IMActionShowLocation.init()(IMActionShowLocation *__return_ptr retstr)
{
  id v1 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());

  objc_msgSend(v1, sel_init);
}

void IMActionShowLocation.init()()
{
}

uint64_t type metadata accessor for IMActionShowLocation(uint64_t a1)
{
  return sub_1A078231C(a1, &qword_1E94FAA00);
}

__n128 sub_1A08B2804@<Q0>(uint64_t a1@<X8>)
{
  sub_1A09F30B8();
  swift_allocObject();
  sub_1A09F30A8();
  uint64_t v3 = sub_1A09F3078();
  MEMORY[0x1F4188790](v3);
  (*(void (**)(char *, void))(v5 + 104))((char *)v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E4F26CA0]);
  sub_1A09F3088();
  sub_1A086EDA4();
  sub_1A09F3098();
  swift_release();
  if (!v1)
  {
    uint64_t v7 = v10[1];
    char v8 = v11;
    __n128 result = v12;
    uint64_t v9 = v13;
    *(void *)a1 = v10[0];
    *(void *)(a1 + _Block_object_dispose(&a9, 8) = v7;
    *(unsigned char *)(a1 + 16) = v8;
    *(__n128 *)(a1 + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = result;
    *(void *)(a1 + 40) = v9;
  }
  return result;
}

uint64_t static IntentCodable.decode(from:)()
{
  sub_1A09F30B8();
  swift_allocObject();
  sub_1A09F30A8();
  uint64_t v0 = sub_1A09F3078();
  MEMORY[0x1F4188790](v0);
  (*(void (**)(char *, void))(v2 + 104))((char *)&v4 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E4F26CA0]);
  sub_1A09F3088();
  sub_1A09F3098();
  return swift_release();
}

uint64_t sub_1A08B2AB4()
{
  uint64_t v1 = *(void *)(v0 + 8);
  char v2 = *(unsigned char *)(v0 + 16);
  long long v3 = *(_OWORD *)(v0 + 24);
  uint64_t v4 = *(void *)(v0 + 40);
  v10[0] = *(void *)v0;
  v10[1] = v1;
  char v11 = v2;
  long long v12 = v3;
  uint64_t v13 = v4;
  sub_1A09F3108();
  swift_allocObject();
  sub_1A09F30F8();
  uint64_t v5 = sub_1A09F30C8();
  MEMORY[0x1F4188790](v5);
  (*(void (**)(char *, void))(v7 + 104))((char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E4F26D18]);
  sub_1A09F30D8();
  sub_1A086EDF8();
  uint64_t v8 = sub_1A09F30E8();
  swift_release();
  return v8;
}

uint64_t IntentCodable.data.getter()
{
  sub_1A09F3108();
  swift_allocObject();
  sub_1A09F30F8();
  uint64_t v0 = sub_1A09F30C8();
  MEMORY[0x1F4188790](v0);
  (*(void (**)(char *, void))(v2 + 104))((char *)&v5 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E4F26D18]);
  sub_1A09F30D8();
  uint64_t v3 = sub_1A09F30E8();
  swift_release();
  return v3;
}

uint64_t sub_1A08B2D34()
{
  sub_1A09F30B8();
  swift_allocObject();
  sub_1A09F30A8();
  uint64_t v0 = sub_1A09F3078();
  MEMORY[0x1F4188790](v0);
  (*(void (**)(char *, void))(v2 + 104))((char *)&v4 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E4F26CA0]);
  sub_1A09F3088();
  sub_1A0877568();
  sub_1A09F3098();
  return swift_release();
}

uint64_t sub_1A08B2E78()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 24);
  char v3 = *(unsigned char *)(v0 + 32);
  uint64_t v4 = *(void *)(v0 + 56);
  char v5 = *(unsigned char *)(v0 + 96);
  *(_OWORD *)&void v12[8] = *(_OWORD *)v0;
  uint64_t v13 = v1;
  uint64_t v14 = v2;
  char v15 = v3;
  long long v16 = *(_OWORD *)(v0 + 40);
  uint64_t v17 = v4;
  long long v6 = *(_OWORD *)(v0 + 80);
  long long v18 = *(_OWORD *)(v0 + 64);
  long long v19 = v6;
  char v20 = v5;
  sub_1A09F3108();
  swift_allocObject();
  sub_1A09F30F8();
  uint64_t v7 = sub_1A09F30C8();
  MEMORY[0x1F4188790](v7);
  (*(void (**)(unsigned char *, void))(v9 + 104))(&v12[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)], *MEMORY[0x1E4F26D18]);
  sub_1A09F30D8();
  sub_1A08775BC();
  uint64_t v10 = sub_1A09F30E8();
  swift_release();
  return v10;
}

uint64_t sub_1A08B2FE0()
{
  sub_1A09F30B8();
  swift_allocObject();
  sub_1A09F30A8();
  uint64_t v0 = sub_1A09F3078();
  MEMORY[0x1F4188790](v0);
  (*(void (**)(char *, void))(v2 + 104))((char *)&v4 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E4F26CA0]);
  sub_1A09F3088();
  sub_1A08784E4();
  sub_1A09F3098();
  return swift_release();
}

uint64_t sub_1A08B3124()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 24);
  char v3 = *(unsigned char *)(v0 + 32);
  uint64_t v4 = *(void *)(v0 + 56);
  uint64_t v5 = *(void *)(v0 + 80);
  *(_OWORD *)&v11[8] = *(_OWORD *)v0;
  uint64_t v12 = v1;
  uint64_t v13 = v2;
  char v14 = v3;
  long long v15 = *(_OWORD *)(v0 + 40);
  uint64_t v16 = v4;
  long long v17 = *(_OWORD *)(v0 + 64);
  uint64_t v18 = v5;
  sub_1A09F3108();
  swift_allocObject();
  sub_1A09F30F8();
  uint64_t v6 = sub_1A09F30C8();
  MEMORY[0x1F4188790](v6);
  (*(void (**)(unsigned char *, void))(v8 + 104))(&v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)], *MEMORY[0x1E4F26D18]);
  sub_1A09F30D8();
  sub_1A0878538();
  uint64_t v9 = sub_1A09F30E8();
  swift_release();
  return v9;
}

double sub_1A08B3288@<D0>(uint64_t a1@<X8>)
{
  sub_1A09F30B8();
  swift_allocObject();
  sub_1A09F30A8();
  uint64_t v3 = sub_1A09F3078();
  MEMORY[0x1F4188790](v3);
  (*(void (**)(char *, void))(v5 + 104))((char *)v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E4F26CA0]);
  sub_1A09F3088();
  sub_1A087E2C4();
  sub_1A09F3098();
  swift_release();
  if (!v1)
  {
    uint64_t v7 = v8[2];
    double result = *(double *)&v8[3];
    *(void *)a1 = v8[1];
    *(void *)(a1 + _Block_object_dispose(&a9, 8) = v7;
    *(double *)(a1 + 16) = result;
  }
  return result;
}

uint64_t sub_1A08B33E8()
{
  uint64_t v1 = v0[1];
  uint64_t v2 = v0[2];
  v8[1] = *v0;
  long long v8[2] = v1;
  void v8[3] = v2;
  sub_1A09F3108();
  swift_allocObject();
  sub_1A09F30F8();
  uint64_t v3 = sub_1A09F30C8();
  MEMORY[0x1F4188790](v3);
  (*(void (**)(char *, void))(v5 + 104))((char *)v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E4F26D18]);
  sub_1A09F30D8();
  sub_1A087E318();
  uint64_t v6 = sub_1A09F30E8();
  swift_release();
  return v6;
}

double sub_1A08B3524@<D0>(uint64_t a1@<X8>)
{
  sub_1A09F30B8();
  swift_allocObject();
  sub_1A09F30A8();
  uint64_t v3 = sub_1A09F3078();
  MEMORY[0x1F4188790](v3);
  (*(void (**)(char *, void))(v5 + 104))((char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E4F26CA0]);
  sub_1A09F3088();
  sub_1A087F434();
  sub_1A09F3098();
  swift_release();
  if (!v1)
  {
    double result = *(double *)&v9;
    uint64_t v7 = v10;
    *(_OWORD *)a1 = v9;
    *(void *)(a1 + 16) = v7;
  }
  return result;
}

uint64_t sub_1A08B3684()
{
  uint64_t v1 = *(void *)(v0 + 16);
  *(_OWORD *)&v7[8] = *(_OWORD *)v0;
  uint64_t v8 = v1;
  sub_1A09F3108();
  swift_allocObject();
  sub_1A09F30F8();
  uint64_t v2 = sub_1A09F30C8();
  MEMORY[0x1F4188790](v2);
  (*(void (**)(unsigned char *, void))(v4 + 104))(&v7[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)], *MEMORY[0x1E4F26D18]);
  sub_1A09F30D8();
  sub_1A087F488();
  uint64_t v5 = sub_1A09F30E8();
  swift_release();
  return v5;
}

__n128 sub_1A08B37C0@<Q0>(uint64_t a1@<X8>)
{
  sub_1A09F30B8();
  swift_allocObject();
  sub_1A09F30A8();
  uint64_t v3 = sub_1A09F3078();
  MEMORY[0x1F4188790](v3);
  (*(void (**)(char *, void))(v5 + 104))((char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E4F26CA0]);
  sub_1A09F3088();
  sub_1A088564C();
  sub_1A09F3098();
  swift_release();
  if (!v1)
  {
    char v7 = v11;
    uint64_t v8 = v12;
    char v9 = v14;
    __n128 result = v13;
    *(void *)a1 = v10;
    *(unsigned char *)(a1 + _Block_object_dispose(&a9, 8) = v7;
    *(void *)(a1 + 16) = v8;
    *(__n128 *)(a1 + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = result;
    *(unsigned char *)(a1 + 40) = v9;
  }
  return result;
}

uint64_t sub_1A08B3938()
{
  char v1 = *((unsigned char *)v0 + 8);
  uint64_t v2 = v0[2];
  char v3 = *((unsigned char *)v0 + 40);
  uint64_t v9 = *v0;
  char v10 = v1;
  uint64_t v11 = v2;
  long long v12 = *(_OWORD *)(v0 + 3);
  char v13 = v3;
  sub_1A09F3108();
  swift_allocObject();
  sub_1A09F30F8();
  uint64_t v4 = sub_1A09F30C8();
  MEMORY[0x1F4188790](v4);
  (*(void (**)(char *, void))(v6 + 104))((char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E4F26D18]);
  sub_1A09F30D8();
  sub_1A08856A0();
  uint64_t v7 = sub_1A09F30E8();
  swift_release();
  return v7;
}

uint64_t sub_1A08B3A8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1A08BB3B0(a1, a2, a3, a4, (void (*)(uint64_t))sub_1A0887734);
}

uint64_t sub_1A08B3AB8(uint64_t a1, uint64_t a2)
{
  return sub_1A08BB520(a1, a2, (void (*)(uint64_t))sub_1A0887788);
}

__n128 sub_1A08B3AE4@<Q0>(uint64_t a1@<X8>)
{
  sub_1A09F30B8();
  swift_allocObject();
  sub_1A09F30A8();
  uint64_t v3 = sub_1A09F3078();
  MEMORY[0x1F4188790](v3);
  (*(void (**)(char *, void))(v5 + 104))((char *)v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E4F26CA0]);
  sub_1A09F3088();
  sub_1A0885FAC();
  sub_1A09F3098();
  swift_release();
  if (!v1)
  {
    char v7 = v10;
    uint64_t v8 = v11;
    __n128 result = v12;
    *(void *)a1 = v9[1];
    *(unsigned char *)(a1 + _Block_object_dispose(&a9, 8) = v7;
    *(void *)(a1 + 16) = v8;
    *(__n128 *)(a1 + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = result;
  }
  return result;
}

uint64_t sub_1A08B3C54()
{
  char v1 = *(unsigned char *)(v0 + 8);
  uint64_t v2 = *(void *)(v0 + 16);
  v8[1] = *(void *)v0;
  char v9 = v1;
  uint64_t v10 = v2;
  long long v11 = *(_OWORD *)(v0 + 24);
  sub_1A09F3108();
  swift_allocObject();
  sub_1A09F30F8();
  uint64_t v3 = sub_1A09F30C8();
  MEMORY[0x1F4188790](v3);
  (*(void (**)(char *, void))(v5 + 104))((char *)v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E4F26D18]);
  sub_1A09F30D8();
  sub_1A0886000();
  uint64_t v6 = sub_1A09F30E8();
  swift_release();
  return v6;
}

double sub_1A08B3DA0@<D0>(__n128 *a1@<X8>)
{
  *(void *)&double result = sub_1A08B3ED4((void (*)(uint64_t))sub_1A0886328, a1).n128_u64[0];
  return result;
}

uint64_t sub_1A08B3DCC(uint64_t a1, uint64_t a2)
{
  return sub_1A08B4078(a1, a2, (void (*)(uint64_t))sub_1A088637C);
}

uint64_t sub_1A08B3DF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1A08BB3B0(a1, a2, a3, a4, (void (*)(uint64_t))sub_1A0887A4C);
}

uint64_t sub_1A08B3E24(uint64_t a1, uint64_t a2)
{
  return sub_1A08BB520(a1, a2, (void (*)(uint64_t))sub_1A0887AA0);
}

double sub_1A08B3E50@<D0>(__n128 *a1@<X8>)
{
  *(void *)&double result = sub_1A08B3ED4((void (*)(uint64_t))sub_1A0886A84, a1).n128_u64[0];
  return result;
}

uint64_t sub_1A08B3E7C(uint64_t a1, uint64_t a2)
{
  return sub_1A08B4078(a1, a2, (void (*)(uint64_t))sub_1A0886AD8);
}

double sub_1A08B3EA8@<D0>(__n128 *a1@<X8>)
{
  *(void *)&double result = sub_1A08B3ED4((void (*)(uint64_t))sub_1A0886EFC, a1).n128_u64[0];
  return result;
}

__n128 sub_1A08B3ED4@<Q0>(void (*a1)(uint64_t)@<X4>, __n128 *a2@<X8>)
{
  sub_1A09F30B8();
  swift_allocObject();
  sub_1A09F30A8();
  uint64_t v5 = sub_1A09F3078();
  MEMORY[0x1F4188790](v5);
  (*(void (**)(char *, void))(v7 + 104))((char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E4F26CA0]);
  uint64_t v8 = sub_1A09F3088();
  a1(v8);
  sub_1A09F3098();
  swift_release();
  if (!v2)
  {
    unsigned __int8 v10 = v12;
    __n128 result = v13;
    a2->n128_u64[0] = v11;
    a2->n128_u8[8] = v10;
    a2[1] = result;
  }
  return result;
}

uint64_t sub_1A08B404C(uint64_t a1, uint64_t a2)
{
  return sub_1A08B4078(a1, a2, (void (*)(uint64_t))sub_1A0886F50);
}

uint64_t sub_1A08B4078(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  char v5 = *((unsigned char *)v3 + 8);
  uint64_t v12 = *v3;
  char v13 = v5;
  long long v14 = *((_OWORD *)v3 + 1);
  sub_1A09F3108();
  swift_allocObject();
  sub_1A09F30F8();
  uint64_t v6 = sub_1A09F30C8();
  MEMORY[0x1F4188790](v6);
  (*(void (**)(char *, void))(v8 + 104))((char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E4F26D18]);
  uint64_t v9 = sub_1A09F30D8();
  a3(v9);
  uint64_t v10 = sub_1A09F30E8();
  swift_release();
  return v10;
}

uint64_t sub_1A08B41CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1A08BB3B0(a1, a2, a3, a4, (void (*)(uint64_t))sub_1A08872FC);
}

uint64_t sub_1A08B41F8(uint64_t a1, uint64_t a2)
{
  return sub_1A08BB520(a1, a2, (void (*)(uint64_t))sub_1A0887350);
}

__n128 sub_1A08B4224@<Q0>(uint64_t a1@<X8>)
{
  sub_1A09F30B8();
  swift_allocObject();
  sub_1A09F30A8();
  uint64_t v3 = sub_1A09F3078();
  MEMORY[0x1F4188790](v3);
  (*(void (**)(char *, void))(v5 + 104))((char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E4F26CA0]);
  sub_1A09F3088();
  sub_1A088B508();
  sub_1A09F3098();
  swift_release();
  if (!v1)
  {
    uint64_t v7 = v10;
    __n128 result = v9;
    *(void *)a1 = v8;
    *(__n128 *)(a1 + _Block_object_dispose(&a9, 8) = result;
    *(void *)(a1 + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = v7;
  }
  return result;
}

uint64_t sub_1A08B438C()
{
  uint64_t v1 = v0[3];
  uint64_t v7 = *v0;
  long long v8 = *(_OWORD *)(v0 + 1);
  uint64_t v9 = v1;
  sub_1A09F3108();
  swift_allocObject();
  sub_1A09F30F8();
  uint64_t v2 = sub_1A09F30C8();
  MEMORY[0x1F4188790](v2);
  (*(void (**)(char *, void))(v4 + 104))((char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E4F26D18]);
  sub_1A09F30D8();
  sub_1A088B55C();
  uint64_t v5 = sub_1A09F30E8();
  swift_release();
  return v5;
}

uint64_t sub_1A08B44D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1A08BB3B0(a1, a2, a3, a4, (void (*)(uint64_t))sub_1A088B938);
}

uint64_t sub_1A08B44FC(uint64_t a1, uint64_t a2)
{
  return sub_1A08BB520(a1, a2, (void (*)(uint64_t))sub_1A088B98C);
}

uint64_t sub_1A08B4528(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1A08B4C00(a1, a2, a3, a4, (void (*)(uint64_t))sub_1A0892A9C);
}

uint64_t sub_1A08B4554(uint64_t a1, uint64_t a2)
{
  return sub_1A08BB520(a1, a2, (void (*)(uint64_t))sub_1A0892AF0);
}

uint64_t sub_1A08B4580(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1A08B4DAC(a1, a2, a3, a4, (void (*)(uint64_t))sub_1A0892CA4);
}

uint64_t sub_1A08B45AC(uint64_t a1, uint64_t a2)
{
  return sub_1A08B6F68(a1, a2, (void (*)(uint64_t))sub_1A0892CF8);
}

double sub_1A08B45D8@<D0>(uint64_t a1@<X8>)
{
  sub_1A09F30B8();
  swift_allocObject();
  sub_1A09F30A8();
  uint64_t v3 = sub_1A09F3078();
  MEMORY[0x1F4188790](v3);
  (*(void (**)(char *, void))(v5 + 104))((char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E4F26CA0]);
  sub_1A09F3088();
  sub_1A08956E0();
  sub_1A09F3098();
  swift_release();
  if (!v1)
  {
    double result = *(double *)&v9;
    uint64_t v7 = v10;
    *(_OWORD *)a1 = v9;
    *(void *)(a1 + 16) = v7;
  }
  return result;
}

uint64_t sub_1A08B4738()
{
  uint64_t v1 = *(void *)(v0 + 16);
  *(_OWORD *)&v7[8] = *(_OWORD *)v0;
  uint64_t v8 = v1;
  sub_1A09F3108();
  swift_allocObject();
  sub_1A09F30F8();
  uint64_t v2 = sub_1A09F30C8();
  MEMORY[0x1F4188790](v2);
  (*(void (**)(unsigned char *, void))(v4 + 104))(&v7[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)], *MEMORY[0x1E4F26D18]);
  sub_1A09F30D8();
  sub_1A0895734();
  uint64_t v5 = sub_1A09F30E8();
  swift_release();
  return v5;
}

uint64_t sub_1A08B4874()
{
  sub_1A09F30B8();
  swift_allocObject();
  sub_1A09F30A8();
  uint64_t v0 = sub_1A09F3078();
  MEMORY[0x1F4188790](v0);
  (*(void (**)(char *, void))(v2 + 104))((char *)&v4 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E4F26CA0]);
  sub_1A09F3088();
  sub_1A089883C();
  sub_1A09F3098();
  return swift_release();
}

uint64_t sub_1A08B49B8()
{
  uint64_t v1 = *((void *)v0 + 2);
  uint64_t v2 = *((void *)v0 + 3);
  char v3 = *((unsigned char *)v0 + 32);
  uint64_t v4 = *((void *)v0 + 7);
  int v5 = *((_DWORD *)v0 + 20);
  uint64_t v6 = *((void *)v0 + 11);
  long long v12 = *v0;
  uint64_t v13 = v1;
  uint64_t v14 = v2;
  char v15 = v3;
  long long v16 = *(long long *)((char *)v0 + 40);
  uint64_t v17 = v4;
  long long v18 = v0[4];
  int v19 = v5;
  uint64_t v20 = v6;
  sub_1A09F3108();
  swift_allocObject();
  sub_1A09F30F8();
  uint64_t v7 = sub_1A09F30C8();
  MEMORY[0x1F4188790](v7);
  (*(void (**)(char *, void))(v9 + 104))((char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E4F26D18]);
  sub_1A09F30D8();
  sub_1A0898890();
  uint64_t v10 = sub_1A09F30E8();
  swift_release();
  return v10;
}

double sub_1A08B4B24@<D0>(uint64_t a1@<X8>)
{
  *(void *)&double result = sub_1A08B8750((void (*)(uint64_t))sub_1A0899A40, a1).n128_u64[0];
  return result;
}

uint64_t sub_1A08B4B50(uint64_t a1, uint64_t a2)
{
  return sub_1A08B88EC(a1, a2, (void (*)(uint64_t))sub_1A0899A94);
}

uint64_t sub_1A08B4B7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1A08B9D4C(a1, a2, a3, a4, (void (*)(uint64_t))sub_1A08927F0);
}

uint64_t sub_1A08B4BA8(uint64_t a1, uint64_t a2)
{
  return sub_1A08B9ECC(a1, a2, (void (*)(uint64_t))sub_1A089272C);
}

uint64_t sub_1A08B4BD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1A08B4C00(a1, a2, a3, a4, (void (*)(uint64_t))sub_1A08B11F8);
}

uint64_t sub_1A08B4C00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t))
{
  sub_1A09F30B8();
  swift_allocObject();
  sub_1A09F30A8();
  uint64_t v6 = sub_1A09F3078();
  MEMORY[0x1F4188790](v6);
  (*(void (**)(char *, void))(v8 + 104))((char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E4F26CA0]);
  uint64_t v9 = sub_1A09F3088();
  a5(v9);
  sub_1A09F3098();
  return swift_release();
}

uint64_t sub_1A08B4D54(uint64_t a1, uint64_t a2)
{
  return sub_1A08BB520(a1, a2, (void (*)(uint64_t))sub_1A08B124C);
}

uint64_t sub_1A08B4D80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1A08B4DAC(a1, a2, a3, a4, (void (*)(uint64_t))sub_1A08B1428);
}

uint64_t sub_1A08B4DAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t))
{
  sub_1A09F30B8();
  swift_allocObject();
  sub_1A09F30A8();
  uint64_t v6 = sub_1A09F3078();
  MEMORY[0x1F4188790](v6);
  (*(void (**)(char *, void))(v8 + 104))((char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E4F26CA0]);
  uint64_t v9 = sub_1A09F3088();
  a5(v9);
  sub_1A09F3098();
  return swift_release();
}

uint64_t sub_1A08B4F00(uint64_t a1, uint64_t a2)
{
  return sub_1A08B6F68(a1, a2, (void (*)(uint64_t))sub_1A08B147C);
}

uint64_t sub_1A08B4F2C()
{
  return static IntentCodable.decode(from:)();
}

uint64_t sub_1A08B4F44()
{
  return IntentCodable.data.getter();
}

void IntentCodableError.init(_:)(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = (void *)sub_1A09F3248();
  id v5 = objc_msgSend(v4, sel_domain);
  uint64_t v6 = sub_1A09F3E18();
  uint64_t v8 = v7;

  id v9 = objc_msgSend(v4, sel_code);
  id v10 = objc_msgSend(v4, sel_localizedDescription);
  uint64_t v11 = sub_1A09F3E18();
  uint64_t v13 = v12;

  *a2 = v6;
  a2[1] = v8;
  a2[2] = (uint64_t)v9;
  a2[3] = v11;
  a2[4] = v13;
}

uint64_t sub_1A08B5028()
{
  unint64_t v1 = 1701080931;
  if (*v0 != 1) {
    unint64_t v1 = 0xD000000000000014;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6E69616D6F64;
  }
}

uint64_t sub_1A08B507C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A08BBCA8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A08B50A4(uint64_t a1)
{
  unint64_t v2 = sub_1A08B52CC();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A08B50E0(uint64_t a1)
{
  unint64_t v2 = sub_1A08B52CC();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t IntentCodableError.encode(to:)(void *a1)
{
  uint64_t v3 = sub_1A07856F8(&qword_1E94FAA08);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = v1[2];
  v10[1] = v1[3];
  void v10[2] = v7;
  v10[0] = v1[4];
  sub_1A086F45C(a1, a1[3]);
  sub_1A08B52CC();
  sub_1A09F4CC8();
  char v13 = 0;
  uint64_t v8 = v10[3];
  sub_1A09F4A28();
  if (!v8)
  {
    char v12 = 1;
    sub_1A09F4A58();
    char v11 = 2;
    sub_1A09F4A28();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_1A08B52CC()
{
  unint64_t result = qword_1E94FAA10;
  if (!qword_1E94FAA10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FAA10);
  }
  return result;
}

uint64_t IntentCodableError.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = sub_1A07856F8(&qword_1E94FAA18);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A086F45C(a1, a1[3]);
  sub_1A08B52CC();
  sub_1A09F4CA8();
  if (v2) {
    return _s17IMSharedUtilities29RemoteIntentBroadcastEncodingVwxx_0((uint64_t)a1);
  }
  char v22 = 0;
  uint64_t v9 = sub_1A09F48D8();
  uint64_t v11 = v10;
  char v21 = 1;
  swift_bridgeObjectRetain();
  uint64_t v19 = sub_1A09F4908();
  char v20 = 2;
  uint64_t v12 = sub_1A09F48D8();
  uint64_t v15 = v14;
  long long v16 = *(void (**)(char *, uint64_t))(v6 + 8);
  uint64_t v18 = v12;
  v16(v8, v5);
  *a2 = v9;
  a2[1] = v11;
  uint64_t v17 = v18;
  a2[2] = v19;
  a2[3] = v17;
  a2[4] = v15;
  swift_bridgeObjectRetain();
  _s17IMSharedUtilities29RemoteIntentBroadcastEncodingVwxx_0((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A08B5554()
{
  sub_1A09F30B8();
  swift_allocObject();
  sub_1A09F30A8();
  uint64_t v0 = sub_1A09F3078();
  MEMORY[0x1F4188790](v0);
  (*(void (**)(char *, void))(v2 + 104))((char *)&v4 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E4F26CA0]);
  sub_1A09F3088();
  sub_1A08B580C();
  sub_1A09F3098();
  return swift_release();
}

uint64_t sub_1A08B5698()
{
  uint64_t v1 = *(void *)(v0 + 8);
  uint64_t v2 = *(void *)(v0 + 32);
  v8[1] = *(void *)v0;
  void v8[2] = v1;
  long long v9 = *(_OWORD *)(v0 + 16);
  uint64_t v10 = v2;
  sub_1A09F3108();
  swift_allocObject();
  sub_1A09F30F8();
  uint64_t v3 = sub_1A09F30C8();
  MEMORY[0x1F4188790](v3);
  (*(void (**)(char *, void))(v5 + 104))((char *)v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E4F26D18]);
  sub_1A09F30D8();
  sub_1A08B5860();
  uint64_t v6 = sub_1A09F30E8();
  swift_release();
  return v6;
}

unint64_t sub_1A08B57DC(uint64_t a1)
{
  *(void *)(a1 + _Block_object_dispose(&a9, 8) = sub_1A08B580C();
  unint64_t result = sub_1A08B5860();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1A08B580C()
{
  unint64_t result = qword_1E94FAA20;
  if (!qword_1E94FAA20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FAA20);
  }
  return result;
}

unint64_t sub_1A08B5860()
{
  unint64_t result = qword_1E94FAA28;
  if (!qword_1E94FAA28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FAA28);
  }
  return result;
}

uint64_t sub_1A08B58B4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return IntentCodableError.init(from:)(a1, a2);
}

uint64_t sub_1A08B58CC(void *a1)
{
  return IntentCodableError.encode(to:)(a1);
}

uint64_t dispatch thunk of static IntentCodable.decode(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

uint64_t dispatch thunk of IntentCodable.data.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t destroy for IntentCodableError()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for IntentCodableError(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + _Block_object_dispose(&a9, 8) = v3;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for IntentCodableError(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for IntentCodableError(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + _Block_object_dispose(&a9, 8) = v4;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for IntentCodableError(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for IntentCodableError(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + _Block_object_dispose(&a9, 8) = 0u;
    *(_OWORD *)(result + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + _Block_object_dispose(&a9, 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for IntentCodableError()
{
  return &type metadata for IntentCodableError;
}

unsigned char *storeEnumTagSinglePayload for IntentCodableError.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A08B5BECLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for IntentCodableError.CodingKeys()
{
  return &type metadata for IntentCodableError.CodingKeys;
}

unint64_t sub_1A08B5C28()
{
  unint64_t result = qword_1E94FAA30;
  if (!qword_1E94FAA30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FAA30);
  }
  return result;
}

unint64_t sub_1A08B5C80()
{
  unint64_t result = qword_1E94FAA38;
  if (!qword_1E94FAA38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FAA38);
  }
  return result;
}

unint64_t sub_1A08B5CD8()
{
  unint64_t result = qword_1E94FAA40;
  if (!qword_1E94FAA40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FAA40);
  }
  return result;
}

double sub_1A08B5D2C@<D0>(uint64_t a1@<X8>)
{
  sub_1A09F30B8();
  swift_allocObject();
  sub_1A09F30A8();
  uint64_t v3 = sub_1A09F3078();
  MEMORY[0x1F4188790](v3);
  (*(void (**)(char *, void))(v5 + 104))((char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E4F26CA0]);
  sub_1A09F3088();
  sub_1A08BD290();
  sub_1A09F3098();
  swift_release();
  if (!v1)
  {
    double result = *(double *)&v9;
    uint64_t v7 = v10;
    uint64_t v8 = v11;
    *(_OWORD *)a1 = v9;
    *(void *)(a1 + 16) = v7;
    *(void *)(a1 + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = v8;
  }
  return result;
}

uint64_t sub_1A08B5E8C()
{
  uint64_t v1 = *((void *)v0 + 2);
  uint64_t v2 = *((void *)v0 + 3);
  long long v8 = *v0;
  uint64_t v9 = v1;
  uint64_t v10 = v2;
  sub_1A09F3108();
  swift_allocObject();
  sub_1A09F30F8();
  uint64_t v3 = sub_1A09F30C8();
  MEMORY[0x1F4188790](v3);
  (*(void (**)(char *, void))(v5 + 104))((char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E4F26D18]);
  sub_1A09F30D8();
  sub_1A08BD23C();
  uint64_t v6 = sub_1A09F30E8();
  swift_release();
  return v6;
}

uint64_t sub_1A08B5FC8()
{
  sub_1A09F30B8();
  swift_allocObject();
  sub_1A09F30A8();
  uint64_t v0 = sub_1A09F3078();
  MEMORY[0x1F4188790](v0);
  (*(void (**)(char *, void))(v2 + 104))((char *)&v4 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E4F26CA0]);
  sub_1A09F3088();
  sub_1A08BCA08();
  sub_1A09F3098();
  return swift_release();
}

uint64_t sub_1A08B610C()
{
  long long v1 = *(_OWORD *)(v0 + 176);
  v12[10] = *(_OWORD *)(v0 + 160);
  v12[11] = v1;
  uint64_t v13 = *(void *)(v0 + 192);
  long long v2 = *(_OWORD *)(v0 + 112);
  v12[6] = *(_OWORD *)(v0 + 96);
  v12[7] = v2;
  long long v3 = *(_OWORD *)(v0 + 144);
  void v12[8] = *(_OWORD *)(v0 + 128);
  v12[9] = v3;
  long long v4 = *(_OWORD *)(v0 + 48);
  void v12[2] = *(_OWORD *)(v0 + 32);
  uint64_t v12[3] = v4;
  long long v5 = *(_OWORD *)(v0 + 80);
  void v12[4] = *(_OWORD *)(v0 + 64);
  void v12[5] = v5;
  long long v6 = *(_OWORD *)(v0 + 16);
  v12[0] = *(_OWORD *)v0;
  v12[1] = v6;
  sub_1A09F3108();
  swift_allocObject();
  sub_1A09F30F8();
  uint64_t v7 = sub_1A09F30C8();
  MEMORY[0x1F4188790](v7);
  (*(void (**)(char *, void))(v9 + 104))((char *)v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E4F26D18]);
  sub_1A09F30D8();
  sub_1A08BC9B4();
  uint64_t v10 = sub_1A09F30E8();
  swift_release();
  return v10;
}

uint64_t sub_1A08B6270()
{
  sub_1A09F30B8();
  swift_allocObject();
  sub_1A09F30A8();
  uint64_t v0 = sub_1A09F3078();
  MEMORY[0x1F4188790](v0);
  (*(void (**)(char *, void))(v2 + 104))((char *)&v4 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E4F26CA0]);
  sub_1A09F3088();
  sub_1A08BD1E8();
  sub_1A09F3098();
  return swift_release();
}

uint64_t sub_1A08B63B4()
{
  uint64_t v1 = *((void *)v0 + 2);
  uint64_t v2 = *((void *)v0 + 3);
  char v3 = *((unsigned char *)v0 + 32);
  uint64_t v4 = *((void *)v0 + 7);
  uint64_t v5 = *((void *)v0 + 8);
  int v6 = *((_DWORD *)v0 + 18);
  long long v12 = *v0;
  uint64_t v13 = v1;
  uint64_t v14 = v2;
  char v15 = v3;
  long long v16 = *(long long *)((char *)v0 + 40);
  uint64_t v17 = v4;
  uint64_t v18 = v5;
  int v19 = v6;
  sub_1A09F3108();
  swift_allocObject();
  sub_1A09F30F8();
  uint64_t v7 = sub_1A09F30C8();
  MEMORY[0x1F4188790](v7);
  (*(void (**)(char *, void))(v9 + 104))((char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E4F26D18]);
  sub_1A09F30D8();
  sub_1A08BD194();
  uint64_t v10 = sub_1A09F30E8();
  swift_release();
  return v10;
}

__n128 sub_1A08B6510@<Q0>(uint64_t a1@<X8>)
{
  sub_1A09F30B8();
  swift_allocObject();
  sub_1A09F30A8();
  uint64_t v3 = sub_1A09F3078();
  MEMORY[0x1F4188790](v3);
  (*(void (**)(unsigned char *, void))(v5 + 104))(&v9[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)], *MEMORY[0x1E4F26CA0]);
  sub_1A09F3088();
  sub_1A08BDA10();
  sub_1A09F3098();
  swift_release();
  if (!v1)
  {
    __n128 result = v10;
    uint64_t v7 = v11;
    uint64_t v8 = v12;
    *(unsigned char *)a1 = v9[8];
    *(__n128 *)(a1 + _Block_object_dispose(&a9, 8) = result;
    *(void *)(a1 + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = v7;
    *(void *)(a1 + 32) = v8;
  }
  return result;
}

uint64_t sub_1A08B6678()
{
  long long v1 = *(_OWORD *)(v0 + 8);
  uint64_t v2 = *(void *)(v0 + 24);
  uint64_t v3 = *(void *)(v0 + 32);
  unsigned char v9[8] = *(unsigned char *)v0;
  long long v10 = v1;
  uint64_t v11 = v2;
  uint64_t v12 = v3;
  sub_1A09F3108();
  swift_allocObject();
  sub_1A09F30F8();
  uint64_t v4 = sub_1A09F30C8();
  MEMORY[0x1F4188790](v4);
  (*(void (**)(unsigned char *, void))(v6 + 104))(&v9[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)], *MEMORY[0x1E4F26D18]);
  sub_1A09F30D8();
  sub_1A08BD9BC();
  uint64_t v7 = sub_1A09F30E8();
  swift_release();
  return v7;
}

uint64_t sub_1A08B67BC()
{
  sub_1A09F30B8();
  swift_allocObject();
  sub_1A09F30A8();
  uint64_t v0 = sub_1A09F3078();
  MEMORY[0x1F4188790](v0);
  (*(void (**)(char *, void))(v2 + 104))((char *)&v4 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E4F26CA0]);
  sub_1A09F3088();
  sub_1A08BC2D0();
  sub_1A09F3098();
  return swift_release();
}

uint64_t sub_1A08B6900()
{
  v7[8] = *(unsigned char *)v0;
  long long v1 = *(_OWORD *)(v0 + 24);
  long long v8 = *(_OWORD *)(v0 + 8);
  long long v9 = v1;
  sub_1A09F3108();
  swift_allocObject();
  sub_1A09F30F8();
  uint64_t v2 = sub_1A09F30C8();
  MEMORY[0x1F4188790](v2);
  (*(void (**)(unsigned char *, void))(v4 + 104))(&v7[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)], *MEMORY[0x1E4F26D18]);
  sub_1A09F30D8();
  sub_1A08BC27C();
  uint64_t v5 = sub_1A09F30E8();
  swift_release();
  return v5;
}

__n128 sub_1A08B6A40@<Q0>(uint64_t a1@<X8>)
{
  sub_1A09F30B8();
  swift_allocObject();
  sub_1A09F30A8();
  uint64_t v3 = sub_1A09F3078();
  MEMORY[0x1F4188790](v3);
  (*(void (**)(char *, void))(v5 + 104))((char *)v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E4F26CA0]);
  sub_1A09F3088();
  sub_1A08BD818();
  sub_1A09F3098();
  swift_release();
  if (!v1)
  {
    char v7 = v11;
    uint64_t v8 = v12;
    __n128 result = v10;
    *(void *)a1 = v9[1];
    *(__n128 *)(a1 + _Block_object_dispose(&a9, 8) = result;
    *(unsigned char *)(a1 + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = v7;
    *(void *)(a1 + 32) = v8;
  }
  return result;
}

uint64_t sub_1A08B6BB0()
{
  char v1 = *(unsigned char *)(v0 + 24);
  uint64_t v2 = *(void *)(v0 + 32);
  v8[1] = *(void *)v0;
  long long v9 = *(_OWORD *)(v0 + 8);
  char v10 = v1;
  uint64_t v11 = v2;
  sub_1A09F3108();
  swift_allocObject();
  sub_1A09F30F8();
  uint64_t v3 = sub_1A09F30C8();
  MEMORY[0x1F4188790](v3);
  (*(void (**)(char *, void))(v5 + 104))((char *)v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E4F26D18]);
  sub_1A09F30D8();
  sub_1A08BD7C4();
  uint64_t v6 = sub_1A09F30E8();
  swift_release();
  return v6;
}

uint64_t sub_1A08B6CFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1A08BB3B0(a1, a2, a3, a4, (void (*)(uint64_t))sub_1A08BC4C8);
}

uint64_t sub_1A08B6D28(uint64_t a1, uint64_t a2)
{
  return sub_1A08BB520(a1, a2, (void (*)(uint64_t))sub_1A08BC474);
}

uint64_t sub_1A08B6D54@<X0>(void *a1@<X8>)
{
  return sub_1A08B6DD8((void (*)(uint64_t))sub_1A08BD488, a1);
}

uint64_t sub_1A08B6D80(uint64_t a1, uint64_t a2)
{
  return sub_1A08B6F68(a1, a2, (void (*)(uint64_t))sub_1A08BD434);
}

uint64_t sub_1A08B6DAC@<X0>(void *a1@<X8>)
{
  return sub_1A08B6DD8((void (*)(uint64_t))sub_1A08BD3E0, a1);
}

uint64_t sub_1A08B6DD8@<X0>(void (*a1)(uint64_t)@<X4>, void *a2@<X8>)
{
  sub_1A09F30B8();
  swift_allocObject();
  sub_1A09F30A8();
  uint64_t v5 = sub_1A09F3078();
  MEMORY[0x1F4188790](v5);
  (*(void (**)(char *, void))(v7 + 104))((char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E4F26CA0]);
  uint64_t v8 = sub_1A09F3088();
  a1(v8);
  sub_1A09F3098();
  uint64_t result = swift_release();
  if (!v2) {
    *a2 = v10[1];
  }
  return result;
}

uint64_t sub_1A08B6F3C(uint64_t a1, uint64_t a2)
{
  return sub_1A08B6F68(a1, a2, (void (*)(uint64_t))sub_1A08BD38C);
}

uint64_t sub_1A08B6F68(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  v11[1] = *v3;
  sub_1A09F3108();
  swift_allocObject();
  sub_1A09F30F8();
  uint64_t v5 = sub_1A09F30C8();
  MEMORY[0x1F4188790](v5);
  (*(void (**)(char *, void))(v7 + 104))((char *)v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E4F26D18]);
  uint64_t v8 = sub_1A09F30D8();
  a3(v8);
  uint64_t v9 = sub_1A09F30E8();
  swift_release();
  return v9;
}

uint64_t sub_1A08B70A8()
{
  sub_1A09F30B8();
  swift_allocObject();
  sub_1A09F30A8();
  uint64_t v0 = sub_1A09F3078();
  MEMORY[0x1F4188790](v0);
  (*(void (**)(char *, void))(v2 + 104))((char *)&v4 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E4F26CA0]);
  sub_1A09F3088();
  sub_1A08BC180();
  sub_1A09F3098();
  return swift_release();
}

uint64_t sub_1A08B71EC(uint64_t a1, uint64_t a2)
{
  return sub_1A08BBB64(a1, a2, (void (*)(uint64_t))sub_1A08BC12C);
}

uint64_t sub_1A08B7218()
{
  sub_1A09F30B8();
  swift_allocObject();
  sub_1A09F30A8();
  uint64_t v0 = sub_1A09F3078();
  MEMORY[0x1F4188790](v0);
  (*(void (**)(char *, void))(v2 + 104))((char *)&v4 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E4F26CA0]);
  sub_1A09F3088();
  sub_1A08BC0D8();
  sub_1A09F3098();
  return swift_release();
}

uint64_t sub_1A08B735C()
{
  uint64_t v1 = *(void *)(v0 + 8);
  uint64_t v2 = *(void *)(v0 + 32);
  v8[1] = *(void *)v0;
  void v8[2] = v1;
  long long v9 = *(_OWORD *)(v0 + 16);
  uint64_t v10 = v2;
  sub_1A09F3108();
  swift_allocObject();
  sub_1A09F30F8();
  uint64_t v3 = sub_1A09F30C8();
  MEMORY[0x1F4188790](v3);
  (*(void (**)(char *, void))(v5 + 104))((char *)v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E4F26D18]);
  sub_1A09F30D8();
  sub_1A08BC084();
  uint64_t v6 = sub_1A09F30E8();
  swift_release();
  return v6;
}

uint64_t sub_1A08B74A0@<X0>(void *a1@<X8>)
{
  return sub_1A08BA72C((void (*)(uint64_t))sub_1A08BBE38, a1);
}

uint64_t sub_1A08B74CC(uint64_t a1, uint64_t a2)
{
  return sub_1A08BA8C0(a1, a2, (void (*)(uint64_t))sub_1A08BBDE4);
}

double sub_1A08B74F8@<D0>(uint64_t a1@<X8>)
{
  sub_1A09F30B8();
  swift_allocObject();
  sub_1A09F30A8();
  uint64_t v3 = sub_1A09F3078();
  MEMORY[0x1F4188790](v3);
  (*(void (**)(char *, void))(v5 + 104))((char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E4F26CA0]);
  sub_1A09F3088();
  sub_1A08BCB58();
  sub_1A09F3098();
  swift_release();
  if (!v1)
  {
    uint64_t v7 = v9;
    double result = *(double *)&v8;
    *(_OWORD *)a1 = v8;
    *(void *)(a1 + 16) = v7;
  }
  return result;
}

uint64_t sub_1A08B7658()
{
  uint64_t v1 = *((void *)v0 + 2);
  long long v7 = *v0;
  uint64_t v8 = v1;
  sub_1A09F3108();
  swift_allocObject();
  sub_1A09F30F8();
  uint64_t v2 = sub_1A09F30C8();
  MEMORY[0x1F4188790](v2);
  (*(void (**)(char *, void))(v4 + 104))((char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E4F26D18]);
  sub_1A09F30D8();
  sub_1A08BCB04();
  uint64_t v5 = sub_1A09F30E8();
  swift_release();
  return v5;
}

uint64_t sub_1A08B7794@<X0>(void *a1@<X8>)
{
  return sub_1A08BB710((void (*)(uint64_t))sub_1A08BBEE0, a1);
}

uint64_t sub_1A08B77C0(uint64_t a1, uint64_t a2)
{
  return sub_1A08BB8A0(a1, a2, (void (*)(uint64_t))sub_1A08BBE8C);
}

uint64_t sub_1A08B77EC()
{
  sub_1A09F30B8();
  swift_allocObject();
  sub_1A09F30A8();
  uint64_t v0 = sub_1A09F3078();
  MEMORY[0x1F4188790](v0);
  (*(void (**)(char *, void))(v2 + 104))((char *)&v4 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E4F26CA0]);
  sub_1A09F3088();
  sub_1A08BDAB8();
  sub_1A09F3098();
  return swift_release();
}

uint64_t sub_1A08B7930()
{
  char v1 = *((unsigned char *)v0 + 24);
  uint64_t v2 = v0[4];
  uint64_t v3 = v0[11];
  uint64_t v9 = *v0;
  long long v10 = *(_OWORD *)(v0 + 1);
  char v11 = v1;
  uint64_t v12 = v2;
  long long v13 = *(_OWORD *)(v0 + 5);
  long long v14 = *(_OWORD *)(v0 + 7);
  long long v15 = *(_OWORD *)(v0 + 9);
  uint64_t v16 = v3;
  sub_1A09F3108();
  swift_allocObject();
  sub_1A09F30F8();
  uint64_t v4 = sub_1A09F30C8();
  MEMORY[0x1F4188790](v4);
  (*(void (**)(char *, void))(v6 + 104))((char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E4F26D18]);
  sub_1A09F30D8();
  sub_1A08BDA64();
  uint64_t v7 = sub_1A09F30E8();
  swift_release();
  return v7;
}

double sub_1A08B7A9C@<D0>(_OWORD *a1@<X8>)
{
  sub_1A09F30B8();
  swift_allocObject();
  sub_1A09F30A8();
  uint64_t v3 = sub_1A09F3078();
  MEMORY[0x1F4188790](v3);
  (*(void (**)(char *, void))(v5 + 104))((char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E4F26CA0]);
  sub_1A09F3088();
  sub_1A08BC228();
  sub_1A09F3098();
  swift_release();
  if (!v1)
  {
    double result = *(double *)&v7;
    *a1 = v7;
  }
  return result;
}

uint64_t sub_1A08B7BF4()
{
  long long v6 = *v0;
  sub_1A09F3108();
  swift_allocObject();
  sub_1A09F30F8();
  uint64_t v1 = sub_1A09F30C8();
  MEMORY[0x1F4188790](v1);
  (*(void (**)(char *, void))(v3 + 104))((char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E4F26D18]);
  sub_1A09F30D8();
  sub_1A08BC1D4();
  uint64_t v4 = sub_1A09F30E8();
  swift_release();
  return v4;
}

uint64_t sub_1A08B7D28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1A08B9A1C(a1, a2, a3, a4, &qword_1E94FAD08, (void (*)(uint64_t))type metadata accessor for MoveMessagesInChatsWithGUIDsRequest);
}

uint64_t sub_1A08B7D70(uint64_t a1, uint64_t a2)
{
  return sub_1A08B9BCC(a1, a2, &qword_1E94FAD00, (void (*)(uint64_t))type metadata accessor for MoveMessagesInChatsWithGUIDsRequest);
}

uint64_t sub_1A08B7DB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1A08BB3B0(a1, a2, a3, a4, (void (*)(uint64_t))sub_1A08BC570);
}

uint64_t sub_1A08B7DE4(uint64_t a1, uint64_t a2)
{
  return sub_1A08BB520(a1, a2, (void (*)(uint64_t))sub_1A08BC51C);
}

uint64_t sub_1A08B7E10@<X0>(void *a1@<X8>)
{
  return sub_1A08BA72C((void (*)(uint64_t))sub_1A08BD728, a1);
}

uint64_t sub_1A08B7E3C(uint64_t a1, uint64_t a2)
{
  return sub_1A08BA8C0(a1, a2, (void (*)(uint64_t))sub_1A08BD6D4);
}

uint64_t sub_1A08B7E68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1A08BB3B0(a1, a2, a3, a4, (void (*)(uint64_t))sub_1A08BC618);
}

uint64_t sub_1A08B7E94(uint64_t a1, uint64_t a2)
{
  return sub_1A08BB520(a1, a2, (void (*)(uint64_t))sub_1A08BC5C4);
}

uint64_t sub_1A08B7EC0()
{
  sub_1A09F30B8();
  swift_allocObject();
  sub_1A09F30A8();
  uint64_t v0 = sub_1A09F3078();
  MEMORY[0x1F4188790](v0);
  (*(void (**)(char *, void))(v2 + 104))((char *)&v4 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E4F26CA0]);
  sub_1A09F3088();
  sub_1A08BD680();
  sub_1A09F3098();
  return swift_release();
}

uint64_t sub_1A08B8004()
{
  uint64_t v1 = *(void *)(v0 + 16);
  char v2 = *(unsigned char *)(v0 + 40);
  uint64_t v3 = *(void *)(v0 + 48);
  *(_OWORD *)&v10[8] = *(_OWORD *)v0;
  uint64_t v11 = v1;
  long long v12 = *(_OWORD *)(v0 + 24);
  char v13 = v2;
  uint64_t v14 = v3;
  long long v4 = *(_OWORD *)(v0 + 72);
  long long v15 = *(_OWORD *)(v0 + 56);
  long long v16 = v4;
  sub_1A09F3108();
  swift_allocObject();
  sub_1A09F30F8();
  uint64_t v5 = sub_1A09F30C8();
  MEMORY[0x1F4188790](v5);
  (*(void (**)(unsigned char *, void))(v7 + 104))(&v10[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)], *MEMORY[0x1E4F26D18]);
  sub_1A09F30D8();
  sub_1A08BD62C();
  uint64_t v8 = sub_1A09F30E8();
  swift_release();
  return v8;
}

double sub_1A08B8164@<D0>(uint64_t a1@<X8>)
{
  sub_1A09F30B8();
  swift_allocObject();
  sub_1A09F30A8();
  uint64_t v3 = sub_1A09F3078();
  MEMORY[0x1F4188790](v3);
  (*(void (**)(char *, void))(v5 + 104))((char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E4F26CA0]);
  sub_1A09F3088();
  sub_1A08BC6C0();
  sub_1A09F3098();
  swift_release();
  if (!v1)
  {
    char v7 = v10;
    char v8 = v11;
    double result = *(double *)&v9;
    *(_OWORD *)a1 = v9;
    *(unsigned char *)(a1 + 16) = v7;
    *(unsigned char *)(a1 + 17) = v8;
  }
  return result;
}

uint64_t sub_1A08B82CC()
{
  char v1 = *((unsigned char *)v0 + 16);
  char v2 = *((unsigned char *)v0 + 17);
  long long v8 = *v0;
  char v9 = v1;
  char v10 = v2;
  sub_1A09F3108();
  swift_allocObject();
  sub_1A09F30F8();
  uint64_t v3 = sub_1A09F30C8();
  MEMORY[0x1F4188790](v3);
  (*(void (**)(char *, void))(v5 + 104))((char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E4F26D18]);
  sub_1A09F30D8();
  sub_1A08BC66C();
  uint64_t v6 = sub_1A09F30E8();
  swift_release();
  return v6;
}

double sub_1A08B8410@<D0>(uint64_t a1@<X8>)
{
  *(void *)&double result = sub_1A08B8750((void (*)(uint64_t))sub_1A08BCC00, a1).n128_u64[0];
  return result;
}

uint64_t sub_1A08B843C(uint64_t a1, uint64_t a2)
{
  return sub_1A08B88EC(a1, a2, (void (*)(uint64_t))sub_1A08BCBAC);
}

__n128 sub_1A08B8468@<Q0>(__n128 *a1@<X8>)
{
  sub_1A09F30B8();
  swift_allocObject();
  sub_1A09F30A8();
  uint64_t v3 = sub_1A09F3078();
  MEMORY[0x1F4188790](v3);
  (*(void (**)(char *, void))(v5 + 104))((char *)v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E4F26CA0]);
  sub_1A09F3088();
  sub_1A08BD140();
  sub_1A09F3098();
  swift_release();
  if (!v1)
  {
    unint64_t v7 = v10[1];
    unsigned __int8 v8 = v12;
    unint64_t v9 = v13;
    __n128 result = v11;
    a1->n128_u64[0] = v10[0];
    a1->n128_u64[1] = v7;
    a1[1] = result;
    a1[2].n128_u8[0] = v8;
    a1[2].n128_u64[1] = v9;
  }
  return result;
}

uint64_t sub_1A08B85D8()
{
  uint64_t v1 = *(void *)(v0 + 8);
  char v2 = *(unsigned char *)(v0 + 32);
  uint64_t v3 = *(void *)(v0 + 40);
  v9[0] = *(void *)v0;
  v9[1] = v1;
  long long v10 = *(_OWORD *)(v0 + 16);
  char v11 = v2;
  uint64_t v12 = v3;
  sub_1A09F3108();
  swift_allocObject();
  sub_1A09F30F8();
  uint64_t v4 = sub_1A09F30C8();
  MEMORY[0x1F4188790](v4);
  (*(void (**)(char *, void))(v6 + 104))((char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E4F26D18]);
  sub_1A09F30D8();
  sub_1A08BD0EC();
  uint64_t v7 = sub_1A09F30E8();
  swift_release();
  return v7;
}

double sub_1A08B8724@<D0>(uint64_t a1@<X8>)
{
  *(void *)&double result = sub_1A08B8750((void (*)(uint64_t))sub_1A08BCCA8, a1).n128_u64[0];
  return result;
}

__n128 sub_1A08B8750@<Q0>(void (*a1)(uint64_t)@<X4>, uint64_t a2@<X8>)
{
  sub_1A09F30B8();
  swift_allocObject();
  sub_1A09F30A8();
  uint64_t v5 = sub_1A09F3078();
  MEMORY[0x1F4188790](v5);
  (*(void (**)(char *, void))(v7 + 104))((char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E4F26CA0]);
  uint64_t v8 = sub_1A09F3088();
  a1(v8);
  sub_1A09F3098();
  swift_release();
  if (!v2)
  {
    __n128 result = v11;
    *(void *)a2 = v10[1];
    *(__n128 *)(a2 + _Block_object_dispose(&a9, 8) = result;
  }
  return result;
}

uint64_t sub_1A08B88C0(uint64_t a1, uint64_t a2)
{
  return sub_1A08B88EC(a1, a2, (void (*)(uint64_t))sub_1A08BCC54);
}

uint64_t sub_1A08B88EC(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  v11[1] = *(void *)v3;
  long long v12 = *(_OWORD *)(v3 + 8);
  sub_1A09F3108();
  swift_allocObject();
  sub_1A09F30F8();
  uint64_t v5 = sub_1A09F30C8();
  MEMORY[0x1F4188790](v5);
  (*(void (**)(char *, void))(v7 + 104))((char *)v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E4F26D18]);
  uint64_t v8 = sub_1A09F30D8();
  a3(v8);
  uint64_t v9 = sub_1A09F30E8();
  swift_release();
  return v9;
}

uint64_t sub_1A08B8A38()
{
  sub_1A09F30B8();
  swift_allocObject();
  sub_1A09F30A8();
  uint64_t v0 = sub_1A09F3078();
  MEMORY[0x1F4188790](v0);
  (*(void (**)(char *, void))(v2 + 104))((char *)&v4 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E4F26CA0]);
  sub_1A09F3088();
  sub_1A08BCEA0();
  sub_1A09F3098();
  return swift_release();
}

uint64_t sub_1A08B8B7C()
{
  uint64_t v1 = *(void *)(v0 + 8);
  char v2 = *(unsigned char *)(v0 + 32);
  uint64_t v3 = *(void *)(v0 + 56);
  uint64_t v4 = *(void *)(v0 + 80);
  v10[1] = *(void *)v0;
  void v10[2] = v1;
  long long v11 = *(_OWORD *)(v0 + 16);
  char v12 = v2;
  long long v13 = *(_OWORD *)(v0 + 40);
  uint64_t v14 = v3;
  long long v15 = *(_OWORD *)(v0 + 64);
  uint64_t v16 = v4;
  sub_1A09F3108();
  swift_allocObject();
  sub_1A09F30F8();
  uint64_t v5 = sub_1A09F30C8();
  MEMORY[0x1F4188790](v5);
  (*(void (**)(char *, void))(v7 + 104))((char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E4F26D18]);
  sub_1A09F30D8();
  sub_1A08BCE4C();
  uint64_t v8 = sub_1A09F30E8();
  swift_release();
  return v8;
}

uint64_t sub_1A08B8CE0()
{
  sub_1A09F30B8();
  swift_allocObject();
  sub_1A09F30A8();
  uint64_t v0 = sub_1A09F3078();
  MEMORY[0x1F4188790](v0);
  (*(void (**)(char *, void))(v2 + 104))((char *)&v4 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E4F26CA0]);
  sub_1A09F3088();
  sub_1A08BCF48();
  sub_1A09F3098();
  return swift_release();
}

uint64_t sub_1A08B8E24()
{
  uint64_t v1 = *(void *)(v0 + 8);
  char v2 = *(unsigned char *)(v0 + 32);
  uint64_t v3 = *(void *)(v0 + 40);
  uint64_t v4 = *(void *)(v0 + 48);
  uint64_t v5 = *(void *)(v0 + 56);
  char v6 = *(unsigned char *)(v0 + 64);
  v12[1] = *(void *)v0;
  void v12[2] = v1;
  long long v13 = *(_OWORD *)(v0 + 16);
  char v14 = v2;
  uint64_t v15 = v3;
  uint64_t v16 = v4;
  uint64_t v17 = v5;
  char v18 = v6;
  sub_1A09F3108();
  swift_allocObject();
  sub_1A09F30F8();
  uint64_t v7 = sub_1A09F30C8();
  MEMORY[0x1F4188790](v7);
  (*(void (**)(char *, void))(v9 + 104))((char *)v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E4F26D18]);
  sub_1A09F30D8();
  sub_1A08BCEF4();
  uint64_t v10 = sub_1A09F30E8();
  swift_release();
  return v10;
}

uint64_t sub_1A08B8F80()
{
  sub_1A09F30B8();
  swift_allocObject();
  sub_1A09F30A8();
  uint64_t v0 = sub_1A09F3078();
  MEMORY[0x1F4188790](v0);
  (*(void (**)(char *, void))(v2 + 104))((char *)&v4 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E4F26CA0]);
  sub_1A09F3088();
  sub_1A08BCFF0();
  sub_1A09F3098();
  return swift_release();
}

uint64_t sub_1A08B90C4()
{
  uint64_t v1 = *(void *)(v0 + 8);
  char v2 = *(unsigned char *)(v0 + 32);
  uint64_t v3 = *(void *)(v0 + 40);
  uint64_t v4 = *(void *)(v0 + 48);
  v10[1] = *(void *)v0;
  void v10[2] = v1;
  long long v11 = *(_OWORD *)(v0 + 16);
  char v12 = v2;
  uint64_t v13 = v3;
  uint64_t v14 = v4;
  sub_1A09F3108();
  swift_allocObject();
  sub_1A09F30F8();
  uint64_t v5 = sub_1A09F30C8();
  MEMORY[0x1F4188790](v5);
  (*(void (**)(char *, void))(v7 + 104))((char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E4F26D18]);
  sub_1A09F30D8();
  sub_1A08BCF9C();
  uint64_t v8 = sub_1A09F30E8();
  swift_release();
  return v8;
}

uint64_t sub_1A08B9210()
{
  sub_1A09F30B8();
  swift_allocObject();
  sub_1A09F30A8();
  uint64_t v0 = sub_1A09F3078();
  MEMORY[0x1F4188790](v0);
  (*(void (**)(char *, void))(v2 + 104))((char *)&v4 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E4F26CA0]);
  sub_1A09F3088();
  sub_1A08BD098();
  sub_1A09F3098();
  return swift_release();
}

uint64_t sub_1A08B9354()
{
  uint64_t v1 = *(void *)(v0 + 8);
  char v2 = *(unsigned char *)(v0 + 32);
  uint64_t v3 = *(void *)(v0 + 40);
  uint64_t v4 = *(void *)(v0 + 48);
  v10[1] = *(void *)v0;
  void v10[2] = v1;
  long long v11 = *(_OWORD *)(v0 + 16);
  char v12 = v2;
  uint64_t v13 = v3;
  uint64_t v14 = v4;
  sub_1A09F3108();
  swift_allocObject();
  sub_1A09F30F8();
  uint64_t v5 = sub_1A09F30C8();
  MEMORY[0x1F4188790](v5);
  (*(void (**)(char *, void))(v7 + 104))((char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E4F26D18]);
  sub_1A09F30D8();
  sub_1A08BD044();
  uint64_t v8 = sub_1A09F30E8();
  swift_release();
  return v8;
}

uint64_t sub_1A08B94A0()
{
  sub_1A09F30B8();
  swift_allocObject();
  sub_1A09F30A8();
  uint64_t v0 = sub_1A09F3078();
  MEMORY[0x1F4188790](v0);
  (*(void (**)(char *, void))(v2 + 104))((char *)&v4 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E4F26CA0]);
  sub_1A09F3088();
  sub_1A08BCDF8();
  sub_1A09F3098();
  return swift_release();
}

uint64_t sub_1A08B95E4()
{
  uint64_t v1 = *(void *)(v0 + 8);
  uint64_t v2 = *(void *)(v0 + 48);
  uint64_t v3 = *(void *)(v0 + 56);
  v10[0] = *(void *)v0;
  v10[1] = v1;
  long long v4 = *(_OWORD *)(v0 + 32);
  long long v11 = *(_OWORD *)(v0 + 16);
  long long v12 = v4;
  uint64_t v13 = v2;
  uint64_t v14 = v3;
  sub_1A09F3108();
  swift_allocObject();
  sub_1A09F30F8();
  uint64_t v5 = sub_1A09F30C8();
  MEMORY[0x1F4188790](v5);
  (*(void (**)(char *, void))(v7 + 104))((char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E4F26D18]);
  sub_1A09F30D8();
  sub_1A08BCDA4();
  uint64_t v8 = sub_1A09F30E8();
  swift_release();
  return v8;
}

__n128 sub_1A08B9728@<Q0>(__n128 *a1@<X8>)
{
  sub_1A09F30B8();
  swift_allocObject();
  sub_1A09F30A8();
  uint64_t v3 = sub_1A09F3078();
  MEMORY[0x1F4188790](v3);
  (*(void (**)(char *, void))(v5 + 104))((char *)v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E4F26CA0]);
  sub_1A09F3088();
  sub_1A08BCD50();
  sub_1A09F3098();
  swift_release();
  if (!v1)
  {
    unint64_t v7 = v10[1];
    unint64_t v8 = v12;
    unint64_t v9 = v13;
    __n128 result = v11;
    a1->n128_u64[0] = v10[0];
    a1->n128_u64[1] = v7;
    a1[1] = result;
    a1[2].n128_u64[0] = v8;
    a1[2].n128_u64[1] = v9;
  }
  return result;
}

uint64_t sub_1A08B9890()
{
  uint64_t v1 = *(void *)(v0 + 8);
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = *(void *)(v0 + 40);
  v9[0] = *(void *)v0;
  v9[1] = v1;
  long long v10 = *(_OWORD *)(v0 + 16);
  uint64_t v11 = v2;
  uint64_t v12 = v3;
  sub_1A09F3108();
  swift_allocObject();
  sub_1A09F30F8();
  uint64_t v4 = sub_1A09F30C8();
  MEMORY[0x1F4188790](v4);
  (*(void (**)(char *, void))(v6 + 104))((char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E4F26D18]);
  sub_1A09F30D8();
  sub_1A08BCCFC();
  uint64_t v7 = sub_1A09F30E8();
  swift_release();
  return v7;
}

uint64_t sub_1A08B99D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1A08B9A1C(a1, a2, a3, a4, &qword_1E94FAAA0, (void (*)(uint64_t))type metadata accessor for RemoteIntentFileTransfer);
}

uint64_t sub_1A08B9A1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t *a5, void (*a6)(uint64_t))
{
  v12[1] = a3;
  sub_1A09F30B8();
  swift_allocObject();
  sub_1A09F30A8();
  uint64_t v8 = sub_1A09F3078();
  MEMORY[0x1F4188790](v8);
  (*(void (**)(char *, void))(v10 + 104))((char *)v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E4F26CA0]);
  sub_1A09F3088();
  sub_1A08BD77C(a5, a6);
  sub_1A09F3098();
  return swift_release();
}

uint64_t sub_1A08B9B84(uint64_t a1, uint64_t a2)
{
  return sub_1A08B9BCC(a1, a2, &qword_1E94FAA98, (void (*)(uint64_t))type metadata accessor for RemoteIntentFileTransfer);
}

uint64_t sub_1A08B9BCC(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_1A09F3108();
  swift_allocObject();
  sub_1A09F30F8();
  uint64_t v6 = sub_1A09F30C8();
  MEMORY[0x1F4188790](v6);
  (*(void (**)(char *, void))(v8 + 104))((char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E4F26D18]);
  sub_1A09F30D8();
  sub_1A08BD77C(a3, a4);
  uint64_t v9 = sub_1A09F30E8();
  swift_release();
  return v9;
}

uint64_t sub_1A08B9D20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1A08B9D4C(a1, a2, a3, a4, (void (*)(uint64_t))sub_1A08BC030);
}

uint64_t sub_1A08B9D4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t))
{
  sub_1A09F30B8();
  swift_allocObject();
  sub_1A09F30A8();
  uint64_t v6 = sub_1A09F3078();
  MEMORY[0x1F4188790](v6);
  (*(void (**)(char *, void))(v8 + 104))((char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E4F26CA0]);
  uint64_t v9 = sub_1A09F3088();
  a5(v9);
  sub_1A09F3098();
  return swift_release();
}

uint64_t sub_1A08B9EA0(uint64_t a1, uint64_t a2)
{
  return sub_1A08B9ECC(a1, a2, (void (*)(uint64_t))sub_1A08BBFDC);
}

uint64_t sub_1A08B9ECC(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  sub_1A09F3108();
  swift_allocObject();
  sub_1A09F30F8();
  uint64_t v4 = sub_1A09F30C8();
  MEMORY[0x1F4188790](v4);
  (*(void (**)(char *, void))(v6 + 104))((char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E4F26D18]);
  uint64_t v7 = sub_1A09F30D8();
  a3(v7);
  uint64_t v8 = sub_1A09F30E8();
  swift_release();
  return v8;
}

uint64_t sub_1A08BA008(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1A08B9A1C(a1, a2, a3, a4, (unint64_t *)&unk_1E94FD140, (void (*)(uint64_t))type metadata accessor for FileTransferExplicitDownloadSucceeded);
}

uint64_t sub_1A08BA050(uint64_t a1, uint64_t a2)
{
  return sub_1A08B9BCC(a1, a2, &qword_1E94FAB98, (void (*)(uint64_t))type metadata accessor for FileTransferExplicitDownloadSucceeded);
}

uint64_t sub_1A08BA098(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1A08B9A1C(a1, a2, a3, a4, &qword_1E94FAC08, (void (*)(uint64_t))type metadata accessor for MovedMessagesToRecentlyDeletedForChatsBroadcast);
}

uint64_t sub_1A08BA0E0(uint64_t a1, uint64_t a2)
{
  return sub_1A08B9BCC(a1, a2, &qword_1E94FAC00, (void (*)(uint64_t))type metadata accessor for MovedMessagesToRecentlyDeletedForChatsBroadcast);
}

double sub_1A08BA128@<D0>(uint64_t a1@<X8>)
{
  sub_1A09F30B8();
  swift_allocObject();
  sub_1A09F30A8();
  uint64_t v3 = sub_1A09F3078();
  MEMORY[0x1F4188790](v3);
  (*(void (**)(char *, void))(v5 + 104))((char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E4F26CA0]);
  sub_1A09F3088();
  sub_1A08BD5D8();
  sub_1A09F3098();
  swift_release();
  if (!v1)
  {
    double result = *(double *)&v9;
    uint64_t v7 = v10;
    *(_OWORD *)a1 = v9;
    *(void *)(a1 + 16) = v7;
  }
  return result;
}

uint64_t sub_1A08BA288()
{
  uint64_t v1 = *(void *)(v0 + 16);
  *(_OWORD *)&v7[8] = *(_OWORD *)v0;
  uint64_t v8 = v1;
  sub_1A09F3108();
  swift_allocObject();
  sub_1A09F30F8();
  uint64_t v2 = sub_1A09F30C8();
  MEMORY[0x1F4188790](v2);
  (*(void (**)(unsigned char *, void))(v4 + 104))(&v7[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)], *MEMORY[0x1E4F26D18]);
  sub_1A09F30D8();
  sub_1A08BD584();
  uint64_t v5 = sub_1A09F30E8();
  swift_release();
  return v5;
}

uint64_t sub_1A08BA3C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1A08BB3B0(a1, a2, a3, a4, (void (*)(uint64_t))sub_1A08BC810);
}

uint64_t sub_1A08BA3F0(uint64_t a1, uint64_t a2)
{
  return sub_1A08BB520(a1, a2, (void (*)(uint64_t))sub_1A08BC7BC);
}

uint64_t sub_1A08BA41C@<X0>(void *a1@<X8>)
{
  sub_1A09F30B8();
  swift_allocObject();
  sub_1A09F30A8();
  uint64_t v3 = sub_1A09F3078();
  MEMORY[0x1F4188790](v3);
  (*(void (**)(char *, void))(v5 + 104))((char *)v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E4F26CA0]);
  sub_1A09F3088();
  sub_1A08BD530();
  sub_1A09F3098();
  uint64_t result = swift_release();
  if (!v1)
  {
    uint64_t v7 = v8[1];
    *a1 = v8[0];
    a1[1] = v7;
  }
  return result;
}

uint64_t sub_1A08BA574()
{
  uint64_t v1 = v0[1];
  v7[0] = *v0;
  v7[1] = v1;
  sub_1A09F3108();
  swift_allocObject();
  sub_1A09F30F8();
  uint64_t v2 = sub_1A09F30C8();
  MEMORY[0x1F4188790](v2);
  (*(void (**)(char *, void))(v4 + 104))((char *)v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E4F26D18]);
  sub_1A09F30D8();
  sub_1A08BD4DC();
  uint64_t v5 = sub_1A09F30E8();
  swift_release();
  return v5;
}

uint64_t sub_1A08BA6A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1A08BB3B0(a1, a2, a3, a4, (void (*)(uint64_t))sub_1A08BC8B8);
}

uint64_t sub_1A08BA6D4(uint64_t a1, uint64_t a2)
{
  return sub_1A08BB520(a1, a2, (void (*)(uint64_t))sub_1A08BC864);
}

uint64_t sub_1A08BA700@<X0>(void *a1@<X8>)
{
  return sub_1A08BA72C((void (*)(uint64_t))sub_1A08BD8C0, a1);
}

uint64_t sub_1A08BA72C@<X0>(void (*a1)(uint64_t)@<X4>, void *a2@<X8>)
{
  sub_1A09F30B8();
  swift_allocObject();
  sub_1A09F30A8();
  uint64_t v5 = sub_1A09F3078();
  MEMORY[0x1F4188790](v5);
  (*(void (**)(char *, void))(v7 + 104))((char *)v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E4F26CA0]);
  uint64_t v8 = sub_1A09F3088();
  a1(v8);
  sub_1A09F3098();
  uint64_t result = swift_release();
  if (!v2)
  {
    uint64_t v10 = v11[1];
    *a2 = v11[0];
    a2[1] = v10;
  }
  return result;
}

uint64_t sub_1A08BA894(uint64_t a1, uint64_t a2)
{
  return sub_1A08BA8C0(a1, a2, (void (*)(uint64_t))sub_1A08BD86C);
}

uint64_t sub_1A08BA8C0(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t v5 = v3[1];
  v12[0] = *v3;
  v12[1] = v5;
  sub_1A09F3108();
  swift_allocObject();
  sub_1A09F30F8();
  uint64_t v6 = sub_1A09F30C8();
  MEMORY[0x1F4188790](v6);
  (*(void (**)(char *, void))(v8 + 104))((char *)v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E4F26D18]);
  uint64_t v9 = sub_1A09F30D8();
  a3(v9);
  uint64_t v10 = sub_1A09F30E8();
  swift_release();
  return v10;
}

uint64_t sub_1A08BAA04@<X0>(void *a1@<X8>)
{
  return sub_1A08BAB18((void (*)(uint64_t))sub_1A08BC420, a1);
}

uint64_t sub_1A08BAA30(uint64_t a1, uint64_t a2)
{
  return sub_1A08BACA8(a1, a2, (void (*)(uint64_t))sub_1A08BC3CC);
}

uint64_t sub_1A08BAA5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1A08B9A1C(a1, a2, a3, a4, &qword_1E94FACD8, (void (*)(uint64_t))type metadata accessor for LoadChatsFilteredRequest);
}

uint64_t sub_1A08BAAA4(uint64_t a1, uint64_t a2)
{
  return sub_1A08B9BCC(a1, a2, &qword_1E94FACD0, (void (*)(uint64_t))type metadata accessor for LoadChatsFilteredRequest);
}

uint64_t sub_1A08BAAEC@<X0>(void *a1@<X8>)
{
  return sub_1A08BAB18((void (*)(uint64_t))sub_1A08BC768, a1);
}

uint64_t sub_1A08BAB18@<X0>(void (*a1)(uint64_t)@<X4>, void *a2@<X8>)
{
  sub_1A09F30B8();
  swift_allocObject();
  sub_1A09F30A8();
  uint64_t v5 = sub_1A09F3078();
  MEMORY[0x1F4188790](v5);
  (*(void (**)(char *, void))(v7 + 104))((char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E4F26CA0]);
  uint64_t v8 = sub_1A09F3088();
  a1(v8);
  sub_1A09F3098();
  uint64_t result = swift_release();
  if (!v2) {
    *a2 = v10[1];
  }
  return result;
}

uint64_t sub_1A08BAC7C(uint64_t a1, uint64_t a2)
{
  return sub_1A08BACA8(a1, a2, (void (*)(uint64_t))sub_1A08BC714);
}

uint64_t sub_1A08BACA8(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  v11[1] = *v3;
  sub_1A09F3108();
  swift_allocObject();
  sub_1A09F30F8();
  uint64_t v5 = sub_1A09F30C8();
  MEMORY[0x1F4188790](v5);
  (*(void (**)(char *, void))(v7 + 104))((char *)v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E4F26D18]);
  uint64_t v8 = sub_1A09F30D8();
  a3(v8);
  uint64_t v9 = sub_1A09F30E8();
  swift_release();
  return v9;
}

uint64_t sub_1A08BADE8()
{
  sub_1A09F30B8();
  swift_allocObject();
  sub_1A09F30A8();
  uint64_t v0 = sub_1A09F3078();
  MEMORY[0x1F4188790](v0);
  (*(void (**)(char *, void))(v2 + 104))((char *)&v4 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E4F26CA0]);
  sub_1A09F3088();
  sub_1A08BD338();
  sub_1A09F3098();
  return swift_release();
}

uint64_t sub_1A08BAF2C()
{
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v2 = *(void *)(v0 + 32);
  char v3 = *(unsigned char *)(v0 + 40);
  long long v4 = *(_OWORD *)(v0 + 48);
  long long v5 = *(_OWORD *)(v0 + 64);
  uint64_t v6 = *(void *)(v0 + 80);
  uint64_t v7 = *(void *)(v0 + 104);
  uint64_t v8 = *(void *)(v0 + 112);
  v14[1] = *(void *)v0;
  long long v15 = *(_OWORD *)(v0 + 8);
  uint64_t v16 = v1;
  uint64_t v17 = v2;
  char v18 = v3;
  long long v19 = v4;
  long long v20 = v5;
  uint64_t v21 = v6;
  long long v22 = *(_OWORD *)(v0 + 88);
  uint64_t v23 = v7;
  uint64_t v24 = v8;
  sub_1A09F3108();
  swift_allocObject();
  sub_1A09F30F8();
  uint64_t v9 = sub_1A09F30C8();
  MEMORY[0x1F4188790](v9);
  (*(void (**)(char *, void))(v11 + 104))((char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E4F26D18]);
  sub_1A09F30D8();
  sub_1A08BD2E4();
  uint64_t v12 = sub_1A09F30E8();
  swift_release();
  return v12;
}

uint64_t sub_1A08BB09C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1A08BB3B0(a1, a2, a3, a4, (void (*)(uint64_t))sub_1A08BC960);
}

uint64_t sub_1A08BB0C8(uint64_t a1, uint64_t a2)
{
  return sub_1A08BB520(a1, a2, (void (*)(uint64_t))sub_1A08BC90C);
}

uint64_t sub_1A08BB0F4()
{
  sub_1A09F30B8();
  swift_allocObject();
  sub_1A09F30A8();
  uint64_t v0 = sub_1A09F3078();
  MEMORY[0x1F4188790](v0);
  (*(void (**)(char *, void))(v2 + 104))((char *)&v4 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E4F26CA0]);
  sub_1A09F3088();
  sub_1A08BD968();
  sub_1A09F3098();
  return swift_release();
}

uint64_t sub_1A08BB238()
{
  long long v1 = *(_OWORD *)(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 32);
  char v3 = *(unsigned char *)(v0 + 40);
  uint64_t v4 = *(void *)(v0 + 48);
  uint64_t v5 = *(void *)(v0 + 56);
  v11[0] = *(_OWORD *)v0;
  v11[1] = v1;
  uint64_t v12 = v2;
  char v13 = v3;
  uint64_t v14 = v4;
  uint64_t v15 = v5;
  sub_1A09F3108();
  swift_allocObject();
  sub_1A09F30F8();
  uint64_t v6 = sub_1A09F30C8();
  MEMORY[0x1F4188790](v6);
  (*(void (**)(char *, void))(v8 + 104))((char *)v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E4F26D18]);
  sub_1A09F30D8();
  sub_1A08BD914();
  uint64_t v9 = sub_1A09F30E8();
  swift_release();
  return v9;
}

uint64_t sub_1A08BB384(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1A08BB3B0(a1, a2, a3, a4, (void (*)(uint64_t))sub_1A08BC378);
}

uint64_t sub_1A08BB3B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t))
{
  sub_1A09F30B8();
  swift_allocObject();
  sub_1A09F30A8();
  uint64_t v6 = sub_1A09F3078();
  MEMORY[0x1F4188790](v6);
  (*(void (**)(char *, void))(v8 + 104))((char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E4F26CA0]);
  uint64_t v9 = sub_1A09F3088();
  a5(v9);
  sub_1A09F3098();
  return swift_release();
}

uint64_t sub_1A08BB4F4(uint64_t a1, uint64_t a2)
{
  return sub_1A08BB520(a1, a2, (void (*)(uint64_t))sub_1A08BC324);
}

uint64_t sub_1A08BB520(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  sub_1A09F3108();
  swift_allocObject();
  sub_1A09F30F8();
  uint64_t v4 = sub_1A09F30C8();
  MEMORY[0x1F4188790](v4);
  (*(void (**)(char *, void))(v6 + 104))((char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E4F26D18]);
  uint64_t v7 = sub_1A09F30D8();
  a3(v7);
  uint64_t v8 = sub_1A09F30E8();
  swift_release();
  return v8;
}

uint64_t sub_1A08BB654(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1A08B9A1C(a1, a2, a3, a4, &qword_1E94FAA80, (void (*)(uint64_t))type metadata accessor for RemoteIntentMirrorFile);
}

uint64_t sub_1A08BB69C(uint64_t a1, uint64_t a2)
{
  return sub_1A08B9BCC(a1, a2, &qword_1E94FAA78, (void (*)(uint64_t))type metadata accessor for RemoteIntentMirrorFile);
}

uint64_t sub_1A08BB6E4@<X0>(void *a1@<X8>)
{
  return sub_1A08BB710((void (*)(uint64_t))sub_1A08BBF88, a1);
}

uint64_t sub_1A08BB710@<X0>(void (*a1)(uint64_t)@<X4>, void *a2@<X8>)
{
  sub_1A09F30B8();
  swift_allocObject();
  sub_1A09F30A8();
  uint64_t v5 = sub_1A09F3078();
  MEMORY[0x1F4188790](v5);
  (*(void (**)(char *, void))(v7 + 104))((char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E4F26CA0]);
  uint64_t v8 = sub_1A09F3088();
  a1(v8);
  sub_1A09F3098();
  uint64_t result = swift_release();
  if (!v2) {
    *a2 = v10[1];
  }
  return result;
}

uint64_t sub_1A08BB874(uint64_t a1, uint64_t a2)
{
  return sub_1A08BB8A0(a1, a2, (void (*)(uint64_t))sub_1A08BBF34);
}

uint64_t sub_1A08BB8A0(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  v11[1] = *v3;
  sub_1A09F3108();
  swift_allocObject();
  sub_1A09F30F8();
  uint64_t v5 = sub_1A09F30C8();
  MEMORY[0x1F4188790](v5);
  (*(void (**)(char *, void))(v7 + 104))((char *)v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E4F26D18]);
  uint64_t v8 = sub_1A09F30D8();
  a3(v8);
  uint64_t v9 = sub_1A09F30E8();
  swift_release();
  return v9;
}

double sub_1A08BB9E0@<D0>(_OWORD *a1@<X8>)
{
  sub_1A09F30B8();
  swift_allocObject();
  sub_1A09F30A8();
  uint64_t v3 = sub_1A09F3078();
  MEMORY[0x1F4188790](v3);
  (*(void (**)(char *, void))(v5 + 104))((char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E4F26CA0]);
  sub_1A09F3088();
  sub_1A08BCAB0();
  sub_1A09F3098();
  swift_release();
  if (!v1)
  {
    double result = *(double *)&v7;
    *a1 = v7;
  }
  return result;
}

uint64_t sub_1A08BBB38(uint64_t a1, uint64_t a2)
{
  return sub_1A08BBB64(a1, a2, (void (*)(uint64_t))sub_1A08BCA5C);
}

uint64_t sub_1A08BBB64(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  long long v11 = *v3;
  sub_1A09F3108();
  swift_allocObject();
  sub_1A09F30F8();
  uint64_t v5 = sub_1A09F30C8();
  MEMORY[0x1F4188790](v5);
  (*(void (**)(char *, void))(v7 + 104))((char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E4F26D18]);
  uint64_t v8 = sub_1A09F30D8();
  a3(v8);
  uint64_t v9 = sub_1A09F30E8();
  swift_release();
  return v9;
}

uint64_t sub_1A08BBCA8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6E69616D6F64 && a2 == 0xE600000000000000;
  if (v2 || (sub_1A09F4B28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701080931 && a2 == 0xE400000000000000 || (sub_1A09F4B28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001A0A32260)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_1A09F4B28();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

unint64_t sub_1A08BBDE4()
{
  unint64_t result = qword_1E94FAA48;
  if (!qword_1E94FAA48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FAA48);
  }
  return result;
}

unint64_t sub_1A08BBE38()
{
  unint64_t result = qword_1E94FAA50;
  if (!qword_1E94FAA50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FAA50);
  }
  return result;
}

unint64_t sub_1A08BBE8C()
{
  unint64_t result = qword_1E94FAA58;
  if (!qword_1E94FAA58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FAA58);
  }
  return result;
}

unint64_t sub_1A08BBEE0()
{
  unint64_t result = qword_1E94FAA60;
  if (!qword_1E94FAA60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FAA60);
  }
  return result;
}

unint64_t sub_1A08BBF34()
{
  unint64_t result = qword_1E94FAA68;
  if (!qword_1E94FAA68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FAA68);
  }
  return result;
}

unint64_t sub_1A08BBF88()
{
  unint64_t result = qword_1E94FAA70;
  if (!qword_1E94FAA70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FAA70);
  }
  return result;
}

unint64_t sub_1A08BBFDC()
{
  unint64_t result = qword_1E94FAA88;
  if (!qword_1E94FAA88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FAA88);
  }
  return result;
}

unint64_t sub_1A08BC030()
{
  unint64_t result = qword_1E94FAA90;
  if (!qword_1E94FAA90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FAA90);
  }
  return result;
}

unint64_t sub_1A08BC084()
{
  unint64_t result = qword_1E94FAAA8;
  if (!qword_1E94FAAA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FAAA8);
  }
  return result;
}

unint64_t sub_1A08BC0D8()
{
  unint64_t result = qword_1E94FAAB0;
  if (!qword_1E94FAAB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FAAB0);
  }
  return result;
}

unint64_t sub_1A08BC12C()
{
  unint64_t result = qword_1E94FAAB8;
  if (!qword_1E94FAAB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FAAB8);
  }
  return result;
}

unint64_t sub_1A08BC180()
{
  unint64_t result = qword_1E94FAAC0;
  if (!qword_1E94FAAC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FAAC0);
  }
  return result;
}

unint64_t sub_1A08BC1D4()
{
  unint64_t result = qword_1E94FAAC8;
  if (!qword_1E94FAAC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FAAC8);
  }
  return result;
}

unint64_t sub_1A08BC228()
{
  unint64_t result = qword_1E94FAAD0;
  if (!qword_1E94FAAD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FAAD0);
  }
  return result;
}

unint64_t sub_1A08BC27C()
{
  unint64_t result = qword_1E94FAAD8;
  if (!qword_1E94FAAD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FAAD8);
  }
  return result;
}

unint64_t sub_1A08BC2D0()
{
  unint64_t result = qword_1E94FAAE0;
  if (!qword_1E94FAAE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FAAE0);
  }
  return result;
}

unint64_t sub_1A08BC324()
{
  unint64_t result = qword_1E94FAAE8;
  if (!qword_1E94FAAE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FAAE8);
  }
  return result;
}

unint64_t sub_1A08BC378()
{
  unint64_t result = qword_1E94FAAF0;
  if (!qword_1E94FAAF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FAAF0);
  }
  return result;
}

unint64_t sub_1A08BC3CC()
{
  unint64_t result = qword_1E94FAAF8;
  if (!qword_1E94FAAF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FAAF8);
  }
  return result;
}

unint64_t sub_1A08BC420()
{
  unint64_t result = qword_1E94FAB00;
  if (!qword_1E94FAB00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FAB00);
  }
  return result;
}

unint64_t sub_1A08BC474()
{
  unint64_t result = qword_1E94FAB08;
  if (!qword_1E94FAB08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FAB08);
  }
  return result;
}

unint64_t sub_1A08BC4C8()
{
  unint64_t result = qword_1E94FAB10;
  if (!qword_1E94FAB10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FAB10);
  }
  return result;
}

unint64_t sub_1A08BC51C()
{
  unint64_t result = qword_1E94FAB18;
  if (!qword_1E94FAB18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FAB18);
  }
  return result;
}

unint64_t sub_1A08BC570()
{
  unint64_t result = qword_1E94FAB20;
  if (!qword_1E94FAB20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FAB20);
  }
  return result;
}

unint64_t sub_1A08BC5C4()
{
  unint64_t result = qword_1E94FAB28;
  if (!qword_1E94FAB28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FAB28);
  }
  return result;
}

unint64_t sub_1A08BC618()
{
  unint64_t result = qword_1E94FAB30;
  if (!qword_1E94FAB30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FAB30);
  }
  return result;
}

unint64_t sub_1A08BC66C()
{
  unint64_t result = qword_1E94FAB38;
  if (!qword_1E94FAB38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FAB38);
  }
  return result;
}

unint64_t sub_1A08BC6C0()
{
  unint64_t result = qword_1E94FAB40;
  if (!qword_1E94FAB40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FAB40);
  }
  return result;
}

unint64_t sub_1A08BC714()
{
  unint64_t result = qword_1E94FAB48;
  if (!qword_1E94FAB48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FAB48);
  }
  return result;
}

unint64_t sub_1A08BC768()
{
  unint64_t result = qword_1E94FAB50;
  if (!qword_1E94FAB50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FAB50);
  }
  return result;
}

unint64_t sub_1A08BC7BC()
{
  unint64_t result = qword_1E94FAB58;
  if (!qword_1E94FAB58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FAB58);
  }
  return result;
}

unint64_t sub_1A08BC810()
{
  unint64_t result = qword_1E94FAB60;
  if (!qword_1E94FAB60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FAB60);
  }
  return result;
}

unint64_t sub_1A08BC864()
{
  unint64_t result = qword_1E94FAB68;
  if (!qword_1E94FAB68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FAB68);
  }
  return result;
}

unint64_t sub_1A08BC8B8()
{
  unint64_t result = qword_1E94FAB70;
  if (!qword_1E94FAB70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FAB70);
  }
  return result;
}

unint64_t sub_1A08BC90C()
{
  unint64_t result = qword_1E94FAB78;
  if (!qword_1E94FAB78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FAB78);
  }
  return result;
}

unint64_t sub_1A08BC960()
{
  unint64_t result = qword_1E94FAB80;
  if (!qword_1E94FAB80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FAB80);
  }
  return result;
}

unint64_t sub_1A08BC9B4()
{
  unint64_t result = qword_1E94FAB88;
  if (!qword_1E94FAB88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FAB88);
  }
  return result;
}

unint64_t sub_1A08BCA08()
{
  unint64_t result = qword_1E94FAB90;
  if (!qword_1E94FAB90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FAB90);
  }
  return result;
}

unint64_t sub_1A08BCA5C()
{
  unint64_t result = qword_1E94FABA0;
  if (!qword_1E94FABA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FABA0);
  }
  return result;
}

unint64_t sub_1A08BCAB0()
{
  unint64_t result = qword_1E94FABA8;
  if (!qword_1E94FABA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FABA8);
  }
  return result;
}

unint64_t sub_1A08BCB04()
{
  unint64_t result = qword_1E94FABB0;
  if (!qword_1E94FABB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FABB0);
  }
  return result;
}

unint64_t sub_1A08BCB58()
{
  unint64_t result = qword_1E94FABB8;
  if (!qword_1E94FABB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FABB8);
  }
  return result;
}

unint64_t sub_1A08BCBAC()
{
  unint64_t result = qword_1E94FABC0;
  if (!qword_1E94FABC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FABC0);
  }
  return result;
}

unint64_t sub_1A08BCC00()
{
  unint64_t result = qword_1E94FABC8;
  if (!qword_1E94FABC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FABC8);
  }
  return result;
}

unint64_t sub_1A08BCC54()
{
  unint64_t result = qword_1E94FABD0;
  if (!qword_1E94FABD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FABD0);
  }
  return result;
}

unint64_t sub_1A08BCCA8()
{
  unint64_t result = qword_1E94FABD8;
  if (!qword_1E94FABD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FABD8);
  }
  return result;
}

unint64_t sub_1A08BCCFC()
{
  unint64_t result = qword_1E94FABE0;
  if (!qword_1E94FABE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FABE0);
  }
  return result;
}

unint64_t sub_1A08BCD50()
{
  unint64_t result = qword_1E94FABE8;
  if (!qword_1E94FABE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FABE8);
  }
  return result;
}

unint64_t sub_1A08BCDA4()
{
  unint64_t result = qword_1E94FABF0;
  if (!qword_1E94FABF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FABF0);
  }
  return result;
}

unint64_t sub_1A08BCDF8()
{
  unint64_t result = qword_1E94FABF8;
  if (!qword_1E94FABF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FABF8);
  }
  return result;
}

unint64_t sub_1A08BCE4C()
{
  unint64_t result = qword_1E94FAC10;
  if (!qword_1E94FAC10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FAC10);
  }
  return result;
}

unint64_t sub_1A08BCEA0()
{
  unint64_t result = qword_1E94FAC18;
  if (!qword_1E94FAC18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FAC18);
  }
  return result;
}

unint64_t sub_1A08BCEF4()
{
  unint64_t result = qword_1E94FAC20;
  if (!qword_1E94FAC20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FAC20);
  }
  return result;
}

unint64_t sub_1A08BCF48()
{
  unint64_t result = qword_1E94FAC28;
  if (!qword_1E94FAC28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FAC28);
  }
  return result;
}

unint64_t sub_1A08BCF9C()
{
  unint64_t result = qword_1E94FAC30;
  if (!qword_1E94FAC30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FAC30);
  }
  return result;
}

unint64_t sub_1A08BCFF0()
{
  unint64_t result = qword_1E94FAC38;
  if (!qword_1E94FAC38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FAC38);
  }
  return result;
}

unint64_t sub_1A08BD044()
{
  unint64_t result = qword_1E94FAC40;
  if (!qword_1E94FAC40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FAC40);
  }
  return result;
}

unint64_t sub_1A08BD098()
{
  unint64_t result = qword_1E94FAC48;
  if (!qword_1E94FAC48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FAC48);
  }
  return result;
}

unint64_t sub_1A08BD0EC()
{
  unint64_t result = qword_1E94FAC50;
  if (!qword_1E94FAC50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FAC50);
  }
  return result;
}

unint64_t sub_1A08BD140()
{
  unint64_t result = qword_1E94FAC58;
  if (!qword_1E94FAC58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FAC58);
  }
  return result;
}

unint64_t sub_1A08BD194()
{
  unint64_t result = qword_1E94FAC60;
  if (!qword_1E94FAC60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FAC60);
  }
  return result;
}

unint64_t sub_1A08BD1E8()
{
  unint64_t result = qword_1E94FAC68;
  if (!qword_1E94FAC68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FAC68);
  }
  return result;
}

unint64_t sub_1A08BD23C()
{
  unint64_t result = qword_1E94FAC70;
  if (!qword_1E94FAC70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FAC70);
  }
  return result;
}

unint64_t sub_1A08BD290()
{
  unint64_t result = qword_1E94FAC78;
  if (!qword_1E94FAC78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FAC78);
  }
  return result;
}

unint64_t sub_1A08BD2E4()
{
  unint64_t result = qword_1E94FAC80;
  if (!qword_1E94FAC80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FAC80);
  }
  return result;
}

unint64_t sub_1A08BD338()
{
  unint64_t result = qword_1E94FAC88;
  if (!qword_1E94FAC88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FAC88);
  }
  return result;
}

unint64_t sub_1A08BD38C()
{
  unint64_t result = qword_1E94FAC90;
  if (!qword_1E94FAC90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FAC90);
  }
  return result;
}

unint64_t sub_1A08BD3E0()
{
  unint64_t result = qword_1E94FAC98;
  if (!qword_1E94FAC98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FAC98);
  }
  return result;
}

unint64_t sub_1A08BD434()
{
  unint64_t result = qword_1E94FACA0;
  if (!qword_1E94FACA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FACA0);
  }
  return result;
}

unint64_t sub_1A08BD488()
{
  unint64_t result = qword_1E94FACA8;
  if (!qword_1E94FACA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FACA8);
  }
  return result;
}

unint64_t sub_1A08BD4DC()
{
  unint64_t result = qword_1E94FACB0;
  if (!qword_1E94FACB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FACB0);
  }
  return result;
}

unint64_t sub_1A08BD530()
{
  unint64_t result = qword_1E94FACB8;
  if (!qword_1E94FACB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FACB8);
  }
  return result;
}

unint64_t sub_1A08BD584()
{
  unint64_t result = qword_1E94FACC0;
  if (!qword_1E94FACC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FACC0);
  }
  return result;
}

unint64_t sub_1A08BD5D8()
{
  unint64_t result = qword_1E94FACC8;
  if (!qword_1E94FACC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FACC8);
  }
  return result;
}

unint64_t sub_1A08BD62C()
{
  unint64_t result = qword_1E94FACE0;
  if (!qword_1E94FACE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FACE0);
  }
  return result;
}

unint64_t sub_1A08BD680()
{
  unint64_t result = qword_1E94FACE8;
  if (!qword_1E94FACE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FACE8);
  }
  return result;
}

unint64_t sub_1A08BD6D4()
{
  unint64_t result = qword_1E94FACF0;
  if (!qword_1E94FACF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FACF0);
  }
  return result;
}

unint64_t sub_1A08BD728()
{
  unint64_t result = qword_1E94FACF8;
  if (!qword_1E94FACF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FACF8);
  }
  return result;
}

uint64_t sub_1A08BD77C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1A08BD7C4()
{
  unint64_t result = qword_1E94FAD10;
  if (!qword_1E94FAD10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FAD10);
  }
  return result;
}

unint64_t sub_1A08BD818()
{
  unint64_t result = qword_1E94FAD18;
  if (!qword_1E94FAD18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FAD18);
  }
  return result;
}

unint64_t sub_1A08BD86C()
{
  unint64_t result = qword_1E94FAD20;
  if (!qword_1E94FAD20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FAD20);
  }
  return result;
}

unint64_t sub_1A08BD8C0()
{
  unint64_t result = qword_1E94FAD28;
  if (!qword_1E94FAD28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FAD28);
  }
  return result;
}

unint64_t sub_1A08BD914()
{
  unint64_t result = qword_1E94FAD30;
  if (!qword_1E94FAD30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FAD30);
  }
  return result;
}

unint64_t sub_1A08BD968()
{
  unint64_t result = qword_1E94FAD38;
  if (!qword_1E94FAD38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FAD38);
  }
  return result;
}

unint64_t sub_1A08BD9BC()
{
  unint64_t result = qword_1E94FAD40;
  if (!qword_1E94FAD40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FAD40);
  }
  return result;
}

unint64_t sub_1A08BDA10()
{
  unint64_t result = qword_1E94FAD48;
  if (!qword_1E94FAD48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FAD48);
  }
  return result;
}

unint64_t sub_1A08BDA64()
{
  unint64_t result = qword_1E94FAD50;
  if (!qword_1E94FAD50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FAD50);
  }
  return result;
}

unint64_t sub_1A08BDAB8()
{
  unint64_t result = qword_1E94FAD58;
  if (!qword_1E94FAD58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94FAD58);
  }
  return result;
}

uint64_t sub_1A08BDB0C()
{
  uint64_t v0 = sub_1A09F39E8();
  sub_1A078D848(v0, qword_1E94FAD60);
  sub_1A078510C(v0, (uint64_t)qword_1E94FAD60);
  return sub_1A09F39D8();
}

Swift::Void __swiftcall IntentClientBroadcaster.fileTransfer(_:highQualityDownloadSucceededWithPath:)(Swift::String _, Swift::String highQualityDownloadSucceededWithPath)
{
}

Swift::Void __swiftcall IntentClientBroadcaster.fileTransfer(_:explicitDownloadSucceededWithPath:livePhotoBundlePath:)(Swift::String _, Swift::String explicitDownloadSucceededWithPath, Swift::String livePhotoBundlePath)
{
  object = livePhotoBundlePath._object;
  uint64_t countAndFlagsBits = livePhotoBundlePath._countAndFlagsBits;
  char v6 = explicitDownloadSucceededWithPath._object;
  uint64_t v7 = explicitDownloadSucceededWithPath._countAndFlagsBits;
  uint64_t v8 = _._object;
  uint64_t v9 = _._countAndFlagsBits;
  uint64_t v10 = sub_1A07856F8(&qword_1EB4A5650);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1A09F41C8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v12, 1, 1, v13);
  uint64_t v14 = (void *)swift_allocObject();
  void v14[2] = 0;
  void v14[3] = 0;
  void v14[4] = v3;
  v14[5] = v9;
  v14[6] = v8;
  v14[7] = v7;
  v14[8] = v6;
  v14[9] = countAndFlagsBits;
  v14[10] = object;
  id v15 = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1A08BE6E4((uint64_t)v12, (uint64_t)&unk_1E94FAD80, (uint64_t)v14);
  swift_release();
}

uint64_t sub_1A08BDD48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[20] = v11;
  v8[21] = v12;
  v8[18] = a7;
  v8[19] = a8;
  unsigned char v8[16] = a5;
  v8[17] = a6;
  v8[15] = a4;
  sub_1A07856F8(&qword_1EB4A5650);
  v8[22] = swift_task_alloc();
  v8[23] = type metadata accessor for FileTransferExplicitDownloadSucceeded();
  v8[24] = swift_task_alloc();
  sub_1A07856F8(&qword_1E94FAD98);
  v8[25] = swift_task_alloc();
  v8[26] = sub_1A07856F8(&qword_1E94FADA0);
  v8[27] = swift_task_alloc();
  v8[28] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1A08BDE94, 0, 0);
}

uint64_t sub_1A08BDE94()
{
  uint64_t v1 = (void *)(v0[15] + OBJC_IVAR____TtC17IMSharedUtilities23IntentClientBroadcaster_safeRenderProvider);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  sub_1A086F45C(v1, v2);
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v3 + 24)
                                                                                    + **(int **)(v3 + 24));
  uint64_t v4 = (void *)swift_task_alloc();
  v0[29] = v4;
  void *v4 = v0;
  v4[1] = sub_1A08BDFB4;
  uint64_t v5 = v0[28];
  uint64_t v6 = v0[16];
  uint64_t v7 = v0[17];
  return v9(v5, v6, v7, 1, v2, v3);
}

uint64_t sub_1A08BDFB4()
{
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1A08BE0B0, 0, 0);
}

uint64_t sub_1A08BE0B0()
{
  uint64_t v40 = v0;
  uint64_t v2 = *(void *)(v0 + 216);
  uint64_t v1 = *(void *)(v0 + 224);
  uint64_t v3 = *(void *)(v0 + 200);
  uint64_t v4 = type metadata accessor for RemoteIntentMirrorFile(0);
  uint64_t v5 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  v5(v3, 1, 1, v4);
  sub_1A0884370(v1, v2, &qword_1E94FADA0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v7 = *(void ***)(v0 + 216);
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v8 = *v7;
    if (qword_1E94F8510 != -1) {
      swift_once();
    }
    uint64_t v9 = sub_1A09F39E8();
    sub_1A078510C(v9, (uint64_t)qword_1E94FAD60);
    swift_bridgeObjectRetain();
    id v10 = v8;
    swift_bridgeObjectRetain();
    id v11 = v8;
    uint64_t v12 = sub_1A09F39C8();
    os_log_type_t v13 = sub_1A09F4378();
    BOOL v14 = os_log_type_enabled(v12, v13);
    unint64_t v15 = *(void *)(v0 + 136);
    if (v14)
    {
      uint64_t v37 = *(void *)(v0 + 128);
      uint64_t v16 = swift_slowAlloc();
      uint64_t v17 = (void *)swift_slowAlloc();
      uint64_t v18 = swift_slowAlloc();
      uint64_t v39 = v18;
      *(_DWORD *)uint64_t v16 = 136315650;
      *(void *)(v0 + 96) = sub_1A0785144(0xD000000000000046, 0x80000001A0A323B0, &v39);
      sub_1A09F4528();
      *(_WORD *)(v16 + 12) = 2080;
      swift_bridgeObjectRetain();
      *(void *)(v0 + 104) = sub_1A0785144(v37, v15, &v39);
      sub_1A09F4528();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v16 + 22) = 2112;
      id v19 = v8;
      uint64_t v20 = _swift_stdlib_bridgeErrorToNSError();
      *(void *)(v0 + 112) = v20;
      sub_1A09F4528();
      *uint64_t v17 = v20;

      _os_log_impl(&dword_1A0772000, v12, v13, "%s Failed to generate safe render: %s. Using original file URL which may be larger. Error: %@", (uint8_t *)v16, 0x20u);
      sub_1A07856F8(&qword_1E94F7740);
      swift_arrayDestroy();
      MEMORY[0x1A6228C20](v17, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x1A6228C20](v18, -1, -1);
      MEMORY[0x1A6228C20](v16, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
  }
  else
  {
    uint64_t v21 = *(void *)(v0 + 200);
    sub_1A0784C08(v21, &qword_1E94FAD98);
    sub_1A08BF1F0((uint64_t)v7, v21);
    v5(v21, 0, 1, v4);
  }
  uint64_t v38 = *(void *)(v0 + 224);
  long long v22 = *(void **)(v0 + 192);
  uint64_t v36 = *(void *)(v0 + 200);
  uint64_t v23 = *(void *)(v0 + 184);
  uint64_t v35 = *(void *)(v0 + 176);
  uint64_t v24 = *(void *)(v0 + 160);
  uint64_t v25 = *(void *)(v0 + 168);
  uint64_t v27 = *(void *)(v0 + 144);
  uint64_t v26 = *(void *)(v0 + 152);
  uint64_t v29 = *(void *)(v0 + 128);
  uint64_t v28 = *(void *)(v0 + 136);
  sub_1A0884370(v36, (uint64_t)v22 + *(int *)(v23 + 28), &qword_1E94FAD98);
  *long long v22 = v29;
  v22[1] = v28;
  v22[2] = v27;
  _OWORD v22[3] = v26;
  void v22[4] = v24;
  v22[5] = v25;
  *(void *)(v0 + 40) = v23;
  *(void *)(v0 + 4_Block_object_dispose(&a9, 8) = sub_1A08BF098();
  uint64_t v30 = sub_1A0884478((uint64_t *)(v0 + 16));
  sub_1A08BF0F0((uint64_t)v22, (uint64_t)v30);
  uint64_t v31 = sub_1A09F41C8();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v35, 1, 1, v31);
  sub_1A0883D94(v0 + 16, v0 + 56);
  uint64_t v32 = swift_allocObject();
  *(void *)(v32 + 16) = 0;
  *(void *)(v32 + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = 0;
  sub_1A089266C((long long *)(v0 + 56), v32 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1A08BE6E4(v35, (uint64_t)&unk_1E94FAEE0, v32);
  swift_release();
  _s17IMSharedUtilities29RemoteIntentBroadcastEncodingVwxx_0(v0 + 16);
  sub_1A08BF194((uint64_t)v22);
  sub_1A0784C08(v36, &qword_1E94FAD98);
  sub_1A0784C08(v38, &qword_1E94FADA0);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v33 = *(uint64_t (**)(void))(v0 + 8);
  return v33();
}

uint64_t sub_1A08BE5F0(uint64_t a1)
{
  uint64_t v4 = v1[3];
  uint64_t v12 = v1[2];
  uint64_t v5 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v7 = v1[6];
  uint64_t v8 = v1[7];
  uint64_t v9 = v1[8];
  id v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *id v10 = v2;
  v10[1] = sub_1A077EE54;
  return sub_1A08BDD48(a1, v12, v4, v5, v6, v7, v8, v9);
}

uint64_t sub_1A08BE6E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1A09F41C8();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_1A09F41B8();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_1A0784C08(a1, &qword_1EB4A5650);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_1A09F4108();
    swift_unknownObjectRelease();
  }
LABEL_5:
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = a3;
  return swift_task_create();
}

void IntentClientBroadcaster.fileTransferExplicitDownloadFailed(_:suggestedRetryGUID:error:)()
{
}

Swift::Void __swiftcall IntentClientBroadcaster.fileTransferHighQualityDownloadFailed(_:)(Swift::String a1)
{
}

void IntentClientBroadcaster.fileTransferDownloadedSucceeded(withLocalURL:)()
{
}

void IntentClientBroadcaster.fileTransferDownloadFailed(withLocalURL:error:)()
{
}

uint64_t sub_1A08BED98(uint64_t a1)
{
  uint64_t v4 = v1[3];
  uint64_t v12 = v1[2];
  uint64_t v5 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v7 = v1[6];
  uint64_t v8 = v1[7];
  uint64_t v9 = v1[8];
  id v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *id v10 = v2;
  v10[1] = sub_1A077EE58;
  return sub_1A08BDD48(a1, v12, v4, v5, v6, v7, v8, v9);
}

uint64_t sub_1A08BEE8C(uint64_t a1, int *a2)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  void *v4 = v2;
  v4[1] = sub_1A08BEF68;
  return v6(a1);
}

uint64_t sub_1A08BEF68()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_1A08BF060()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

unint64_t sub_1A08BF098()
{
  unint64_t result = qword_1E94F9230;
  if (!qword_1E94F9230)
  {
    type metadata accessor for FileTransferExplicitDownloadSucceeded();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94F9230);
  }
  return result;
}

uint64_t sub_1A08BF0F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FileTransferExplicitDownloadSucceeded();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A08BF154()
{
  swift_unknownObjectRelease();
  _s17IMSharedUtilities29RemoteIntentBroadcastEncodingVwxx_0(v0 + 32);

  return MEMORY[0x1F4186498](v0, 72, 7);
}

uint64_t sub_1A08BF194(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for FileTransferExplicitDownloadSucceeded();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1A08BF1F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for RemoteIntentMirrorFile(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t _s17IMSharedUtilities23IntentClientBroadcasterC21updateNicknameHandles10forSharing7blockedyShySSG_AGtF_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1A07856F8(&qword_1EB4A5650);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11[3] = &type metadata for UpdateNicknameHandlesBroadcast;
  v11[4] = sub_1A087B764();
  v11[0] = a1;
  v11[1] = a2;
  uint64_t v7 = sub_1A09F41C8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v6, 1, 1, v7);
  sub_1A0883D94((uint64_t)v11, (uint64_t)v10);
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = 0;
  *(void *)(v8 + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = 0;
  sub_1A089266C(v10, v8 + 32);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  sub_1A08BE6E4((uint64_t)v6, (uint64_t)&unk_1E94FAF30, v8);
  swift_release();
  _s17IMSharedUtilities29RemoteIntentBroadcastEncodingVwxx_0((uint64_t)v11);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t _s17IMSharedUtilities23IntentClientBroadcasterC28updatePendingNicknameUpdates_16handledNicknames08archivedK0ySDys11AnyHashableVypG_A2ItF_0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1A07856F8(&qword_1EB4A5650);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  void v14[3] = &type metadata for UpdatePendingNicknameUpdatesBroadcast;
  unint64_t v9 = sub_1A087B710();
  v14[0] = a1;
  v14[1] = a2;
  void v14[4] = v9;
  void v14[2] = a3;
  uint64_t v10 = sub_1A09F41C8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v8, 1, 1, v10);
  sub_1A0883D94((uint64_t)v14, (uint64_t)v13);
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = 0;
  *(void *)(v11 + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = 0;
  sub_1A089266C(v13, v11 + 32);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  sub_1A08BE6E4((uint64_t)v8, (uint64_t)&unk_1E94FAEE0, v11);
  swift_release();
  _s17IMSharedUtilities29RemoteIntentBroadcastEncodingVwxx_0((uint64_t)v14);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t destroy for RemoteIntentRequestSetupInfo()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for RemoteIntentRequestSetupInfo(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for RemoteIntentRequestSetupInfo(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for RemoteIntentRequestSetupInfo(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for RemoteIntentRequestSetupInfo()
{
  return &type metadata for RemoteIntentRequestSetupInfo;
}

uint64_t sub_1A08BF808(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[21] = a5;
  v6[22] = a6;
  v6[19] = a3;
  v6[20] = a4;
  v6[17] = a1;
  v6[18] = a2;
  return MEMORY[0x1F4188298](sub_1A08BF830, 0, 0);
}

uint64_t sub_1A08BF830()
{
  uint64_t v1 = v0[21];
  uint64_t v2 = (void *)v0[18];
  uint64_t v3 = sub_1A09F3DE8();
  v0[23] = v3;
  swift_bridgeObjectRetain();
  uint64_t v4 = sub_1A09F3CE8();
  v0[24] = v4;
  swift_bridgeObjectRelease();
  v0[2] = v0;
  v0[7] = v0 + 15;
  v0[3] = sub_1A08BF998;
  uint64_t v5 = swift_continuation_init();
  v0[10] = MEMORY[0x1E4F143A8];
  v0[11] = 0x40000000;
  v0[12] = sub_1A08BFC60;
  v0[13] = &unk_1E5A0FD28;
  v0[14] = v5;
  objc_msgSend(v2, sel_requestSetupWithClientID_capabilities_context_reply_, v3, v1, v4, v0 + 10);
  return MEMORY[0x1F41881E8](v0 + 2);
}

uint64_t sub_1A08BF998()
{
  return MEMORY[0x1F4188298](sub_1A08BFA78, 0, 0);
}

uint64_t sub_1A08BFA78()
{
  uint64_t v2 = *(void **)(v0 + 184);
  uint64_t v1 = *(void **)(v0 + 192);
  char v3 = *(unsigned char *)(v0 + 120);
  uint64_t v4 = *(void *)(v0 + 128);
  *(void *)(v0 + 200) = v4;

  uint64_t v5 = swift_task_alloc();
  *(void *)(v0 + 20_Block_object_dispose(&a9, 8) = v5;
  *(void *)uint64_t v5 = v0;
  *(void *)(v5 + _Block_object_dispose(&a9, 8) = sub_1A08BFB4C;
  uint64_t v7 = *(void *)(v0 + 136);
  uint64_t v6 = *(void *)(v0 + 144);
  *(void *)(v5 + 264) = v4;
  *(void *)(v5 + 272) = v6;
  *(unsigned char *)(v5 + 242) = v3;
  *(void *)(v5 + 256) = v7;
  return MEMORY[0x1F4188298](sub_1A08BFD08, 0, 0);
}

uint64_t sub_1A08BFB4C()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_1A08BFC60(uint64_t a1, char a2)
{
  uint64_t v3 = *(void *)(a1 + 32);
  uint64_t v4 = sub_1A09F3D08();
  uint64_t v5 = *(void *)(*(void *)(v3 + 64) + 40);
  *(unsigned char *)uint64_t v5 = a2;
  *(void *)(v5 + _Block_object_dispose(&a9, 8) = v4;

  return swift_continuation_resume();
}

uint64_t sub_1A08BFCE0(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 264) = a3;
  *(void *)(v4 + 272) = a4;
  *(unsigned char *)(v4 + 242) = a2;
  *(void *)(v4 + 256) = a1;
  return MEMORY[0x1F4188298](sub_1A08BFD08, 0, 0);
}

uint64_t sub_1A08BFD08()
{
  uint64_t v1 = (void *)v0[34];
  v0[35] = sub_1A08C1E70(v0[33]);
  uint64_t v2 = swift_bridgeObjectRetain();
  uint64_t v3 = sub_1A089094C(v2);
  sub_1A08DCD14(v3);
  swift_bridgeObjectRelease();
  uint64_t v4 = sub_1A09F4068();
  v0[36] = v4;
  swift_release();
  v0[2] = v0;
  v0[7] = v0 + 31;
  v0[3] = sub_1A08BFE58;
  uint64_t v5 = swift_continuation_init();
  v0[10] = MEMORY[0x1E4F143A8];
  v0[11] = 0x40000000;
  v0[12] = sub_1A08E1C14;
  v0[13] = &unk_1E5A0FDB8;
  v0[14] = v5;
  objc_msgSend(v1, sel_requestContactsForIdentifiers_reply_, v4, v0 + 10);
  return MEMORY[0x1F41881E8](v0 + 2);
}

uint64_t sub_1A08BFE58()
{
  return MEMORY[0x1F4188298](sub_1A08BFF38, 0, 0);
}

uint64_t sub_1A08BFF38()
{
  uint64_t v1 = (void *)v0[36];
  v0[37] = v0[31];

  sub_1A09F4188();
  v0[38] = sub_1A09F4178();
  uint64_t v3 = sub_1A09F4108();
  return MEMORY[0x1F4188298](sub_1A08BFFDC, v3, v2);
}

uint64_t sub_1A08BFFDC()
{
  swift_release();
  id v1 = objc_msgSend(self, sel_sharedList);
  id v2 = objc_msgSend(v1, sel_mutedChatList);

  sub_1A08847C8();
  *(void *)(v0 + 312) = sub_1A09F3D08();

  return MEMORY[0x1F4188298](sub_1A08C00B0, 0, 0);
}

uint64_t sub_1A08C00B0()
{
  uint64_t v1 = *(void *)(v0 + 296);
  uint64_t v2 = *(void *)(v0 + 280);
  char v3 = *(unsigned char *)(v0 + 242);
  uint64_t v4 = *(void *)(v0 + 256);
  sub_1A08C01BC(*(void *)(v0 + 312));
  uint64_t v6 = v5;
  swift_bridgeObjectRelease();
  uint64_t v7 = swift_bridgeObjectRetain();
  sub_1A0949304(v7, v0 + 80);
  *(unsigned char *)uint64_t v4 = v3;
  long long v8 = *(_OWORD *)(v0 + 80);
  long long v9 = *(_OWORD *)(v0 + 96);
  *(_OWORD *)(v4 + 40) = *(_OWORD *)(v0 + 112);
  *(_OWORD *)(v4 + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = v9;
  *(_OWORD *)(v4 + _Block_object_dispose(&a9, 8) = v8;
  long long v10 = *(_OWORD *)(v0 + 128);
  long long v11 = *(_OWORD *)(v0 + 144);
  long long v12 = *(_OWORD *)(v0 + 160);
  *(_OWORD *)(v4 + 104) = *(_OWORD *)(v0 + 176);
  *(_OWORD *)(v4 + 8_Block_object_dispose(&a9, 8) = v12;
  *(_OWORD *)(v4 + 72) = v11;
  *(_OWORD *)(v4 + 56) = v10;
  long long v13 = *(_OWORD *)(v0 + 192);
  long long v14 = *(_OWORD *)(v0 + 208);
  long long v15 = *(_OWORD *)(v0 + 224);
  *(_WORD *)(v4 + 16_Block_object_dispose(&a9, 8) = *(_WORD *)(v0 + 240);
  *(_OWORD *)(v4 + 152) = v15;
  *(_OWORD *)(v4 + 136) = v14;
  *(_OWORD *)(v4 + 120) = v13;
  *(void *)(v4 + 176) = v2;
  *(void *)(v4 + 184) = v1;
  *(void *)(v4 + 192) = v6;
  uint64_t v16 = *(uint64_t (**)(void))(v0 + 8);
  return v16();
}

void sub_1A08C01BC(uint64_t a1)
{
  uint64_t v2 = MEMORY[0x1E4FBC868];
  uint64_t v33 = a1 + 64;
  uint64_t v34 = MEMORY[0x1E4FBC868];
  uint64_t v3 = -1 << *(unsigned char *)(a1 + 32);
  if (-v3 < 64) {
    uint64_t v4 = ~(-1 << -(char)v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(a1 + 64);
  int64_t v32 = (unint64_t)(63 - v3) >> 6;
  swift_bridgeObjectRetain();
  int64_t v6 = 0;
  while (1)
  {
    if (v5)
    {
      unint64_t v14 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      unint64_t v15 = v14 | (v6 << 6);
      goto LABEL_34;
    }
    int64_t v16 = v6 + 1;
    if (__OFADD__(v6, 1))
    {
LABEL_37:
      __break(1u);
      goto LABEL_38;
    }
    if (v16 >= v32) {
      goto LABEL_36;
    }
    unint64_t v17 = *(void *)(v33 + 8 * v16);
    int64_t v18 = v6 + 1;
    if (!v17)
    {
      int64_t v18 = v6 + 2;
      if (v6 + 2 >= v32) {
        goto LABEL_36;
      }
      unint64_t v17 = *(void *)(v33 + 8 * v18);
      if (!v17)
      {
        int64_t v18 = v6 + 3;
        if (v6 + 3 >= v32) {
          goto LABEL_36;
        }
        unint64_t v17 = *(void *)(v33 + 8 * v18);
        if (!v17)
        {
          int64_t v18 = v6 + 4;
          if (v6 + 4 >= v32) {
            goto LABEL_36;
          }
          unint64_t v17 = *(void *)(v33 + 8 * v18);
          if (!v17) {
            break;
          }
        }
      }
    }
LABEL_33:
    unint64_t v5 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v18 << 6);
    int64_t v6 = v18;
LABEL_34:
    uint64_t v24 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v15);
    uint64_t v26 = *v24;
    uint64_t v25 = v24[1];
    uint64_t v27 = *(void **)(*(void *)(a1 + 56) + 8 * v15);
    swift_bridgeObjectRetain();
    id v28 = v27;
    objc_msgSend(v28, sel_doubleValue);
    uint64_t v30 = v29;
    unint64_t v31 = *(void *)(v2 + 16);
    if (*(void *)(v2 + 24) <= v31)
    {
      sub_1A09DE36C(v31 + 1, 1);
      uint64_t v2 = v34;
    }
    sub_1A09F4C48();
    sub_1A09F3DA8();
    uint64_t v7 = sub_1A09F4C88();
    uint64_t v8 = v2 + 64;
    uint64_t v9 = -1 << *(unsigned char *)(v2 + 32);
    unint64_t v10 = v7 & ~v9;
    unint64_t v11 = v10 >> 6;
    if (((-1 << v10) & ~*(void *)(v2 + 64 + 8 * (v10 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v10) & ~*(void *)(v2 + 64 + 8 * (v10 >> 6)))) | v10 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v20 = 0;
      unint64_t v21 = (unint64_t)(63 - v9) >> 6;
      do
      {
        if (++v11 == v21 && (v20 & 1) != 0)
        {
          __break(1u);
          goto LABEL_37;
        }
        BOOL v22 = v11 == v21;
        if (v11 == v21) {
          unint64_t v11 = 0;
        }
        v20 |= v22;
        uint64_t v23 = *(void *)(v8 + 8 * v11);
      }
      while (v23 == -1);
      unint64_t v12 = __clz(__rbit64(~v23)) + (v11 << 6);
    }
    *(void *)(v8 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    long long v13 = (void *)(*(void *)(v2 + 48) + 16 * v12);
    *long long v13 = v26;
    v13[1] = v25;
    *(void *)(*(void *)(v2 + 56) + 8 * v12) = v30;
    ++*(void *)(v2 + 16);
  }
  int64_t v19 = v6 + 5;
  if (v6 + 5 >= v32)
  {
LABEL_36:
    sub_1A08C1F7C();
    return;
  }
  unint64_t v17 = *(void *)(v33 + 8 * v19);
  if (v17)
  {
    int64_t v18 = v6 + 5;
    goto LABEL_33;
  }
  while (1)
  {
    int64_t v18 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v18 >= v32) {
      goto LABEL_36;
    }
    unint64_t v17 = *(void *)(v33 + 8 * v18);
    ++v19;
    if (v17) {
      goto LABEL_33;
    }
  }
LABEL_38:
  __break(1u);
}