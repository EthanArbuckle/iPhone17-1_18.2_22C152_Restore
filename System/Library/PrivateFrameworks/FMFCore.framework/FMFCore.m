uint64_t sub_21CA02CF8@<X0>(uint64_t *a1@<X8>)
{
  return sub_21CA02D2C(a1);
}

uint64_t sub_21CA02D10@<X0>(uint64_t *a1@<X8>)
{
  return sub_21CB25E2C(a1);
}

uint64_t sub_21CA02D2C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_21CA5A5F4();
  *a1 = result;
  return result;
}

void sub_21CA02D5C()
{
  sub_21CA02ED8(319, (unint64_t *)&qword_267C95478, MEMORY[0x263F06EA8]);
  if (v0 <= 0x3F)
  {
    sub_21CA02ED8(319, (unint64_t *)&qword_267C97000, MEMORY[0x263F07490]);
    if (v1 <= 0x3F)
    {
      sub_21CA02ED8(319, &qword_267C95568, (void (*)(uint64_t))type metadata accessor for FMFLocationAlert);
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

void sub_21CA02ED8(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_21CB889A0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_21CA02F2C@<X0>(unsigned __int8 a1@<W0>, void *a2@<X8>)
{
  uint64_t result = sub_21CA02F5C(a1);
  if (!v2) {
    *a2 = v5;
  }
  return result;
}

uint64_t sub_21CA02F5C(unsigned __int8 a1)
{
  if (qword_267C949A8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v2 = off_267C97428;
  if (*((void *)off_267C97428 + 2) && (unint64_t v3 = sub_21CA34A58(a1), (v4 & 1) != 0)) {
    sub_21CA4E524(v2[7] + 32 * v3, (uint64_t)v6);
  }
  else {
    memset(v6, 0, sizeof(v6));
  }
  swift_endAccess();
  sub_21CA57E34(&qword_267C955B8);
  return swift_dynamicCast();
}

void sub_21CA0305C()
{
  sub_21CA031C8(319, (unint64_t *)&qword_267C97000, MEMORY[0x263F07490]);
  if (v0 <= 0x3F)
  {
    sub_21CA031C8(319, (unint64_t *)&qword_267C97520, (void (*)(uint64_t))type metadata accessor for FMFLocation);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_21CA031C8(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_21CB889A0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_21CA0321C(void *a1)
{
  return sub_21CA5E5E4(a1);
}

uint64_t sub_21CA03234()
{
  uint64_t v0 = sub_21CB880A0();
  sub_21CA61F60(v0, qword_267CA5380);
  sub_21CA4CC18(v0, (uint64_t)qword_267CA5380);
  return sub_21CB88080();
}

uint64_t sub_21CA032B8(uint64_t a1)
{
  unint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *unint64_t v4 = v2;
  v4[1] = sub_21CA65B10;
  return sub_21CA15248(a1, v1);
}

void sub_21CA03354(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *(void *)(a1 + 1032);
  sub_21CA26A4C((uint64_t)a2, a1 + 1032, &qword_267C95CF0);
  sub_21CA62580(a2);
  sub_21CA2D658(v3);
  sub_21CA2D15C();
}

uint64_t sub_21CA033FC()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t sub_21CA0343C()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

id sub_21CA035A8()
{
  id result = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08850]), sel_init);
  qword_267C975C0 = (uint64_t)result;
  return result;
}

void sub_21CA035DC(uint64_t a1)
{
  if (a1) {
    uint64_t v2 = sub_21CB884F0();
  }
  else {
    uint64_t v2 = 0;
  }
  id v3 = (id)v2;
  objc_msgSend(v1, sel_setEnabledTopics_);
}

void sub_21CA0363C()
{
  if (!qword_267C95618)
  {
    sub_21CB875D0();
    unint64_t v0 = sub_21CB889A0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_267C95618);
    }
  }
}

void *sub_21CA03694(void *result, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t *a6)
{
  char v8 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v10 = a2;
    goto LABEL_8;
  }
  unint64_t v9 = a4[3];
  uint64_t v10 = v9 >> 1;
  if ((uint64_t)(v9 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v10 + 0x4000000000000000 >= 0)
  {
    uint64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v10 = a2;
    }
LABEL_8:
    uint64_t v11 = a4[2];
    if (v10 <= v11) {
      uint64_t v12 = a4[2];
    }
    else {
      uint64_t v12 = v10;
    }
    if (v12)
    {
      sub_21CA57E34(a5);
      v13 = (void *)swift_allocObject();
      int64_t v14 = j__malloc_size(v13);
      uint64_t v15 = v14 - 32;
      if (v14 < 32) {
        uint64_t v15 = v14 - 25;
      }
      v13[2] = v11;
      v13[3] = 2 * (v15 >> 3);
      v16 = v13 + 4;
      if (v8) {
        goto LABEL_15;
      }
    }
    else
    {
      v13 = (void *)MEMORY[0x263F8EE78];
      v16 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v13 != a4 || v16 >= &a4[v11 + 4]) {
          memmove(v16, a4 + 4, 8 * v11);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_21CA620C4(0, v11, (unint64_t)v16, (uint64_t)a4, a6);
LABEL_24:
    swift_bridgeObjectRelease();
    return v13;
  }
  __break(1u);
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for FMFAddress(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

void *sub_21CA037E4(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_21CA57E34(&qword_267C95C58);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 25;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4]) {
          memmove(v13, a4 + 4, 8 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_21CA61FD8(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_21CA038F4(uint64_t a1, uint64_t a2)
{
  char v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *char v5 = v2;
  v5[1] = sub_21CA647CC;
  return sub_21CA0ADCC(a1, a2);
}

uint64_t sub_21CA0399C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t (*a5)(uint64_t))
{
  unint64_t v6 = (void *)(a1 + *a4);
  *unint64_t v6 = a2;
  v6[1] = a3;
  swift_bridgeObjectRetain();
  uint64_t v7 = swift_bridgeObjectRelease();
  return a5(v7);
}

uint64_t type metadata accessor for FMFGenericResponseHandler()
{
  return self;
}

void sub_21CA03A14(unsigned char *a1, unsigned int a2, unsigned int a3)
{
  uint64_t v6 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  unsigned int v8 = v7 - 2;
  size_t v9 = *(void *)(v6 + 64);
  if (v7 <= 1)
  {
    unsigned int v8 = 0;
    if (v9 <= 3)
    {
      unsigned int v11 = (~(-1 << (8 * v9)) - v7 + 2) >> (8 * v9);
      if (v11 > 0xFFFE)
      {
        uint64_t v10 = 4;
      }
      else
      {
        BOOL v12 = v11 != 0;
        BOOL v13 = v11 >= 0xFF;
        uint64_t v10 = 2;
        if (!v13) {
          uint64_t v10 = v12;
        }
      }
    }
    else
    {
      uint64_t v10 = 1;
    }
    v9 += v10;
  }
  if (a3 <= v8)
  {
    int v14 = 0;
  }
  else if (v9 <= 3)
  {
    unsigned int v17 = ((a3 - v8 + ~(-1 << (8 * v9))) >> (8 * v9)) + 1;
    if (HIWORD(v17))
    {
      int v14 = 4;
    }
    else if (v17 >= 0x100)
    {
      int v14 = 2;
    }
    else
    {
      int v14 = v17 > 1;
    }
  }
  else
  {
    int v14 = 1;
  }
  if (v8 >= a2)
  {
    switch(v14)
    {
      case 1:
        a1[v9] = 0;
        if (a2) {
          goto LABEL_30;
        }
        break;
      case 2:
        *(_WORD *)&a1[v9] = 0;
        if (a2) {
          goto LABEL_30;
        }
        break;
      case 3:
LABEL_43:
        __break(1u);
        break;
      case 4:
        *(_DWORD *)&a1[v9] = 0;
        goto LABEL_29;
      default:
LABEL_29:
        if (a2)
        {
LABEL_30:
          v19 = *(void (**)(unsigned char *, void))(v6 + 56);
          v19(a1, a2 + 2);
        }
        break;
    }
  }
  else
  {
    unsigned int v15 = ~v8 + a2;
    if (v9 < 4)
    {
      int v16 = (v15 >> (8 * v9)) + 1;
      if (v9)
      {
        int v18 = v15 & ~(-1 << (8 * v9));
        bzero(a1, v9);
        if (v9 == 3)
        {
          *(_WORD *)a1 = v18;
          a1[2] = BYTE2(v18);
        }
        else if (v9 == 2)
        {
          *(_WORD *)a1 = v18;
        }
        else
        {
          *a1 = v18;
        }
      }
    }
    else
    {
      bzero(a1, v9);
      *(_DWORD *)a1 = v15;
      int v16 = 1;
    }
    switch(v14)
    {
      case 1:
        a1[v9] = v16;
        break;
      case 2:
        *(_WORD *)&a1[v9] = v16;
        break;
      case 3:
        goto LABEL_43;
      case 4:
        *(_DWORD *)&a1[v9] = v16;
        break;
      default:
        return;
    }
  }
}

void *_s7FMFCore14InitialTabInfoVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_21CA03D0C()
{
  int v1 = *((unsigned __int8 *)v0 + OBJC_IVAR____TtC7FMFCore8FMFAlert_alertType);
  if (v1 == 5)
  {
    if (v0[7]) {
      goto LABEL_3;
    }
LABEL_15:
    char v3 = 0;
    return v3 & 1;
  }
  if (!MEMORY[0x21D4B6C80](v0 + 2))
  {
    if (MEMORY[0x21D4B6C80](v0 + 2))
    {
      if (!v1)
      {
        id v4 = objc_msgSend(self, sel_sharedInstance);
        id v5 = objc_msgSend(v4, sel_deviceModelName);

        if (v5)
        {
          sub_21CB882F0();
        }
        sub_21CB2ECE0(0xD000000000000017, 0x800000021CB94FB0);
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (MEMORY[0x21D4B6C80](v0 + 2)) {
          goto LABEL_19;
        }
        goto LABEL_3;
      }
      swift_unknownObjectRelease();
    }
    else if (!v0[7])
    {
      goto LABEL_15;
    }
    if (MEMORY[0x21D4B6C80](v0 + 2))
    {
      if (v1)
      {
        swift_unknownObjectRelease();
        goto LABEL_21;
      }
LABEL_19:
      type metadata accessor for FMLocalize();
      uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
      id v7 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
      sub_21CB872B0();
      swift_unknownObjectRelease();

LABEL_20:
      swift_bridgeObjectRelease();
      goto LABEL_21;
    }
LABEL_3:
    if (!v0[11])
    {
      sub_21CA85C44();
      if (v2) {
        goto LABEL_20;
      }
      goto LABEL_15;
    }
LABEL_21:
    char v3 = 1;
    return v3 & 1;
  }
  char v9 = v1;
  char v3 = sub_21CA1081C(&v9, v0[4], v0[5]);
  swift_unknownObjectRelease();
  return v3 & 1;
}

void *sub_21CA03F54()
{
  swift_defaultActor_initialize();
  uint64_t v1 = MEMORY[0x263F8EE80];
  v0[14] = 0;
  v0[15] = v1;
  v0[16] = v1;
  v0[17] = 0;
  v0[18] = 0;
  v0[19] = v1;
  v0[20] = v1;
  uint64_t v2 = (char *)v0 + OBJC_IVAR____TtC7FMFCore27FMFSecureLocationController_startRefreshingTimestamp;
  uint64_t v3 = sub_21CB87590();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v2, 1, 1, v3);
  *(void *)((char *)v0 + OBJC_IVAR____TtC7FMFCore27FMFSecureLocationController_delegate + 8) = 0;
  swift_unknownObjectWeakInit();
  return v0;
}

void sub_21CA03FF8(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 1112) = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_21CA2D15C();
}

uint64_t type metadata accessor for FMFMyLocationResponse()
{
  return self;
}

uint64_t sub_21CA04058(unsigned __int16 *a1, unsigned int a2)
{
  uint64_t v4 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  unsigned int v6 = v5 - 2;
  uint64_t v7 = *(void *)(v4 + 64);
  if (v5 <= 1)
  {
    unsigned int v6 = 0;
    if (v7 <= 3)
    {
      unsigned int v9 = (~(-1 << (8 * v7)) - v5 + 2) >> (8 * v7);
      if (v9 > 0xFFFE)
      {
        uint64_t v8 = 4;
      }
      else
      {
        BOOL v10 = v9 != 0;
        BOOL v11 = v9 >= 0xFF;
        uint64_t v8 = 2;
        if (!v11) {
          uint64_t v8 = v10;
        }
      }
    }
    else
    {
      uint64_t v8 = 1;
    }
    v7 += v8;
  }
  if (!a2) {
    return 0;
  }
  if (a2 <= v6) {
    goto LABEL_28;
  }
  char v12 = 8 * v7;
  if (v7 <= 3)
  {
    unsigned int v14 = ((a2 - v6 + ~(-1 << v12)) >> v12) + 1;
    if (HIWORD(v14))
    {
      int v13 = *(_DWORD *)((char *)a1 + v7);
      if (!v13) {
        goto LABEL_28;
      }
      goto LABEL_20;
    }
    if (v14 > 0xFF)
    {
      int v13 = *(unsigned __int16 *)((char *)a1 + v7);
      if (!*(unsigned __int16 *)((char *)a1 + v7)) {
        goto LABEL_28;
      }
      goto LABEL_20;
    }
    if (v14 < 2)
    {
LABEL_28:
      if (v6)
      {
        unsigned int v16 = (*(uint64_t (**)(unsigned __int16 *))(v4 + 48))(a1);
        if (v16 >= 3) {
          return v16 - 2;
        }
        else {
          return 0;
        }
      }
      return 0;
    }
  }
  int v13 = *((unsigned __int8 *)a1 + v7);
  if (!*((unsigned char *)a1 + v7)) {
    goto LABEL_28;
  }
LABEL_20:
  int v15 = (v13 - 1) << v12;
  if (v7 > 3) {
    int v15 = 0;
  }
  if (v7)
  {
    if (v7 > 3) {
      LODWORD(v7) = 4;
    }
    switch((int)v7)
    {
      case 2:
        LODWORD(v7) = *a1;
        break;
      case 3:
        LODWORD(v7) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v7) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v7) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v6 + (v7 | v15) + 1;
}

uint64_t sub_21CA0425C()
{
  uint64_t result = sub_21CB877E0();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_21CB87810();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

void sub_21CA04324()
{
  sub_21CA056B0();
  if (v0 <= 0x3F)
  {
    sub_21CB87590();
    if (v1 <= 0x3F) {
      swift_initClassMetadata2();
    }
  }
}

void sub_21CA04450()
{
  sub_21CA627A0();
  if (v0 <= 0x3F)
  {
    sub_21CB87590();
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

uint64_t sub_21CA045A8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_21CA045F0()
{
  uint64_t result = sub_21CB87590();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

void sub_21CA046A0()
{
  sub_21CB87590();
  if (v0 <= 0x3F)
  {
    sub_21CA056B0();
    if (v1 <= 0x3F) {
      swift_initClassMetadata2();
    }
  }
}

FMFCore::FMFAlertType_optional __swiftcall FMFAlertType.init(rawValue:)(Swift::String rawValue)
{
  unint64_t v2 = v1;
  unint64_t v3 = sub_21CB88D70();
  result.value = swift_bridgeObjectRelease();
  char v5 = 5;
  if (v3 < 5) {
    char v5 = v3;
  }
  *unint64_t v2 = v5;
  return result;
}

uint64_t sub_21CA047F8()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 80) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 16);
    uint64_t v4 = sub_21CAA198C;
  }
  else
  {
    uint64_t v5 = *(void *)(v2 + 16);
    swift_release();
    uint64_t v4 = sub_21CA0B5E0;
    uint64_t v3 = v5;
  }
  return MEMORY[0x270FA2498](v4, v3, 0);
}

uint64_t sub_21CA04920()
{
  uint64_t result = swift_getAssociatedTypeWitness();
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

uint64_t sub_21CA049CC()
{
  uint64_t result = sub_21CB87630();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_21CA04A98()
{
  uint64_t result = swift_getAssociatedTypeWitness();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for FMAPSConnectionHandler()
{
  return self;
}

uint64_t sub_21CA04B4C(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC7FMFCore10FMFManager_selectedFriend;
  swift_beginAccess();
  sub_21CA626D0(a1, v3);
  swift_endAccess();
  sub_21CA09D20();
  return sub_21CA1B88C(a1, &qword_267C96F10);
}

uint64_t sub_21CA04BC4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = MEMORY[0x263F8EE88];
  if (a2) {
    uint64_t v2 = a2;
  }
  *(void *)(a1 + OBJC_IVAR____TtC7FMFCore25FMFGenericResponseHandler_fences) = v2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return sub_21CA32354();
}

uint64_t sub_21CA04C18()
{
  type metadata accessor for FMDiskIO.KeyPair();
  uint64_t result = sub_21CB889A0();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for FMLocationShifter()
{
  return self;
}

uint64_t sub_21CA04CFC()
{
  uint64_t result = type metadata accessor for MergeStateMachine.State();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void sub_21CA04DA8(uint64_t a1@<X0>, void *a2@<X1>, char *a3@<X8>)
{
  uint64_t v6 = a2[85];
  swift_bridgeObjectRetain();
  char v7 = sub_21CA6253C(a1, v6);
  swift_bridgeObjectRelease();
  if (v7)
  {
    char v8 = 0;
  }
  else
  {
    a2[72] = 0;
    swift_bridgeObjectRelease();
    a2[78] = 0;
    swift_bridgeObjectRelease();
    char v8 = 1;
    swift_beginAccess();
    a2[79] = 0;
    swift_bridgeObjectRelease();
    a2[85] = a1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    sub_21CA2D15C();
  }
  *a3 = v8;
}

uint64_t sub_21CA04E7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  *(void *)(v6 + 56) = v5;
  uint64_t v12 = sub_21CB88C50();
  *(void *)(v6 + 64) = v12;
  *(void *)(v6 + 72) = *(void *)(v12 - 8);
  *(void *)(v6 + 80) = swift_task_alloc();
  *(void *)(v6 + 88) = swift_task_alloc();
  *(void *)(v6 + 40) = a1;
  *(void *)(v6 + 48) = a2;
  *(void *)(v6 + 16) = a3;
  *(void *)(v6 + 24) = a4;
  *(unsigned char *)(v6 + 32) = a5 & 1;
  return MEMORY[0x270FA2498](sub_21CA07B60, 0, 0);
}

void sub_21CA04F80(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v6 = *(void *)(a2 + 544);
  swift_bridgeObjectRetain();
  char v7 = sub_21CA6253C(a1, v6);
  swift_bridgeObjectRelease();
  if (v7)
  {
    char v8 = 0;
  }
  else
  {
    *(void *)(a2 + 576) = 0;
    swift_bridgeObjectRelease();
    *(void *)(a2 + 544) = a1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    sub_21CA2D15C();
    char v8 = 1;
  }
  *a3 = v8;
}

uint64_t sub_21CA05020@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v21 = a2;
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](a1);
  unsigned int v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = *(void *)(v7 + 24);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v11 = sub_21CB889A0();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  int v15 = (char *)&v20 - v14;
  MEMORY[0x270FA5388](v13);
  unsigned int v17 = (char *)&v20 - v16;
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))((char *)&v20 - v16, v3 + *(int *)(a1 + 36), AssociatedTypeWitness);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v15, v3 + *(int *)(a1 + 40), v11);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v9, v3, v5);
  return sub_21CA06A90((uint64_t)v17, (uint64_t)v15, (uint64_t)v9, v5, v21);
}

uint64_t sub_21CA052C8()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_21CA05358()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = *(void *)(v1 + 112);
  v0[8] = v2;
  if (v2)
  {
    swift_retain();
    uint64_t v3 = (void *)swift_task_alloc();
    v0[9] = v3;
    *uint64_t v3 = v0;
    v3[1] = sub_21CA047F8;
    uint64_t v4 = v0[7];
    return MEMORY[0x270F296B8](v4, 0);
  }
  else
  {
    uint64_t v5 = v0[6];
    uint64_t v6 = v0[7];
    uint64_t v8 = v0[4];
    uint64_t v7 = v0[5];
    uint64_t v9 = v0[3];
    uint64_t v10 = sub_21CA57E34(&qword_267C95990);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v6, 1, 1, v10);
    uint64_t v11 = sub_21CB88640();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v9, 1, 1, v11);
    sub_21CA24E80(v6, v5, &qword_267C95988);
    uint64_t v12 = sub_21CA07D00(&qword_267C95800, (void (*)(uint64_t))type metadata accessor for FMFSecureLocationController);
    unint64_t v13 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    unint64_t v14 = (v7 + v13 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v15 = swift_allocObject();
    *(void *)(v15 + 16) = v1;
    *(void *)(v15 + 24) = v12;
    sub_21CA26A4C(v5, v15 + v13, &qword_267C95988);
    *(void *)(v15 + v14) = v1;
    swift_retain_n();
    sub_21CB0A588(v9, (uint64_t)&unk_267C959A0, v15);
    swift_release();
    sub_21CA1B88C(v6, &qword_267C95988);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v16 = (uint64_t (*)(void))v0[1];
    return v16();
  }
}

uint64_t sub_21CA055F0()
{
  sub_21CA05908(0, &qword_267C97018);
  sub_21CA57E34(&qword_267C97020);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_21CB8B220;
  *(void *)(v0 + 56) = MEMORY[0x263F8D310];
  *(void *)(v0 + 64) = sub_21CA4ECA4();
  *(void *)(v0 + 32) = 0xD000000000000029;
  *(void *)(v0 + 40) = 0x800000021CB96DC0;
  uint64_t result = sub_21CB88830();
  qword_267CA52B8 = result;
  return result;
}

void sub_21CA056B0()
{
  if (!qword_267C96D00[0])
  {
    sub_21CB87630();
    unint64_t v0 = sub_21CB889A0();
    if (!v1) {
      atomic_store(v0, qword_267C96D00);
    }
  }
}

uint64_t destroy for InitialTabInfo()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_21CA0574C()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 224) = v0;
  swift_task_dealloc();
  uint64_t v3 = v2[19];
  uint64_t v4 = v2[18];
  uint64_t v5 = v2[17];
  uint64_t v6 = v2[8];
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  swift_bridgeObjectRelease();
  swift_release();
  if (v0) {
    uint64_t v7 = sub_21CAA3110;
  }
  else {
    uint64_t v7 = sub_21CA11E58;
  }
  return MEMORY[0x270FA2498](v7, v6, 0);
}

uint64_t sub_21CA05908(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    self;
    uint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

void sub_21CA05944(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 1104) = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_21CA2D15C();
}

void sub_21CA05980()
{
  if (!qword_267C94AB0)
  {
    sub_21CB876F0();
    unint64_t v0 = sub_21CB889A0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_267C94AB0);
    }
  }
}

uint64_t sub_21CA059D8()
{
  uint64_t v0 = sub_21CB880A0();
  sub_21CA61F60(v0, qword_267CA5368);
  sub_21CA4CC18(v0, (uint64_t)qword_267CA5368);
  return sub_21CB88090();
}

uint64_t sub_21CA05A24()
{
  swift_getAssociatedTypeWitness();
  uint64_t result = sub_21CB889A0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for FMDemoManager()
{
  return self;
}

uint64_t sub_21CA05AF4()
{
  uint64_t result = type metadata accessor for MergeStateMachine();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_21CA05BA8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_21CA57E34((uint64_t *)&unk_267C96EF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_21CA05C10(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_21CA57E34(&qword_267C96F10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_21CA05C78@<X0>(unsigned char *a1@<X8>)
{
  return sub_21CA45FA0(*(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

uint64_t sub_21CA05C94@<X0>(unsigned char *a1@<X8>)
{
  return sub_21CA3A70C(*(void *)(v1 + 16), *(void **)(v1 + 24), a1);
}

uint64_t sub_21CA05CB0(uint64_t a1)
{
  unint64_t v2 = sub_21CA2ABB0();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_21CA05CEC(void *a1)
{
  return FMFPreferences.encode(to:)(a1);
}

unint64_t sub_21CA05D04@<X0>(unint64_t *a1@<X8>)
{
  return sub_21CA05D20(a1);
}

unint64_t sub_21CA05D20@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_21CA59F08();
  *a1 = result;
  return result;
}

uint64_t sub_21CA05D5C(uint64_t a1, id a2)
{
  if (a2 && (id v3 = objc_msgSend(a2, sel_identifier)) != 0)
  {
    uint64_t v4 = v3;
    uint64_t v5 = sub_21CB882F0();
    uint64_t v7 = v6;
  }
  else
  {
    uint64_t v5 = 0;
    uint64_t v7 = 0;
  }
  *(void *)(a1 + 48) = v5;
  *(void *)(a1 + 56) = v7;

  return swift_bridgeObjectRelease();
}

uint64_t sub_21CA05DE0()
{
  uint64_t AssociatedTypeWitness = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    if (v2 <= 0x3F)
    {
      uint64_t AssociatedTypeWitness = sub_21CB889A0();
      if (v3 <= 0x3F)
      {
        swift_initStructMetadata();
        return 0;
      }
    }
  }
  return AssociatedTypeWitness;
}

void sub_21CA05F18(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = a1[93];
  uint64_t v7 = a1[94];
  uint64_t v8 = a1[95];
  a1[93] = a2;
  a1[94] = a3;
  a1[95] = a4;
  a1[96] = a5;
  sub_21CA1F33C(a2, a3, a4);
  sub_21CA59D84(v6, v7, v8);
  a1[72] = 0;
  swift_bridgeObjectRelease();
  sub_21CA2D15C();
}

void *sub_21CA05FA0(void *a1, unsigned __int8 *a2, void *a3)
{
  uint64_t v5 = a3[2];
  uint64_t v46 = *(void *)(v5 - 8);
  uint64_t v6 = *(void *)(v46 + 64);
  uint64_t v48 = a3[3];
  uint64_t v7 = *(void *)(v48 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = v6 + v8;
  uint64_t v49 = a3[4];
  uint64_t v10 = *(void *)(v49 - 8);
  uint64_t v11 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v47 = *(void *)(v7 + 64);
  uint64_t v12 = (v47 + v11 + ((v6 + v8) & ~v8)) & ~v11;
  size_t v13 = *(void *)(v10 + 64);
  if (!*(_DWORD *)(v10 + 84)) {
    ++v13;
  }
  size_t __n = v13;
  unint64_t v14 = v13 + v12;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  if (*(void *)(*(void *)(AssociatedTypeWitness - 8) + 64) <= 8uLL) {
    uint64_t v16 = 8;
  }
  else {
    uint64_t v16 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
  }
  if (v16 + 1 > v14) {
    unint64_t v17 = v16 + 1;
  }
  else {
    unint64_t v17 = v14;
  }
  if (v17 <= 8) {
    uint64_t v18 = 8;
  }
  else {
    uint64_t v18 = v17;
  }
  if (v18 > 3) {
    goto LABEL_15;
  }
  unsigned int v19 = ((1 << (8 * v18)) + 1) >> (8 * v18);
  if (v19 > 0xFFFC)
  {
    unsigned int v20 = *(_DWORD *)&a2[v18];
    unsigned int v21 = v20 - 3;
    if (v20 < 3) {
      goto LABEL_29;
    }
    goto LABEL_20;
  }
  if (v19 > 0xFC)
  {
    unsigned int v20 = *(unsigned __int16 *)&a2[v18];
    unsigned int v21 = v20 - 3;
    if (v20 < 3) {
      goto LABEL_29;
    }
  }
  else
  {
LABEL_15:
    unsigned int v20 = a2[v18];
    unsigned int v21 = v20 - 3;
    if (v20 < 3) {
      goto LABEL_29;
    }
  }
LABEL_20:
  if (v18 <= 3) {
    uint64_t v22 = v18;
  }
  else {
    uint64_t v22 = 4;
  }
  switch(v22)
  {
    case 1:
      int v23 = *a2;
      if (v18 < 4) {
        goto LABEL_27;
      }
      goto LABEL_28;
    case 2:
      int v23 = *(unsigned __int16 *)a2;
      if (v18 < 4) {
        goto LABEL_27;
      }
      goto LABEL_28;
    case 3:
      int v23 = *(unsigned __int16 *)a2 | (a2[2] << 16);
      if (v18 >= 4) {
        goto LABEL_28;
      }
      goto LABEL_27;
    case 4:
      int v23 = *(_DWORD *)a2;
      if (v18 < 4) {
LABEL_27:
      }
        v23 |= v21 << (8 * v18);
LABEL_28:
      unsigned int v20 = v23 + 3;
      break;
    default:
      break;
  }
LABEL_29:
  if (v20 == 2)
  {
    v33 = *(void **)a2;
    id v34 = v33;
    *a1 = v33;
    if (v18 <= 3)
    {
      unsigned int v35 = ((1 << (8 * v18)) + 1) >> (8 * v18);
      if (v35 > 0xFFFC)
      {
        int v39 = 2;
        goto LABEL_78;
      }
      if (v35 > 0xFC)
      {
        *(_WORD *)((char *)a1 + v18) = 2;
        return a1;
      }
    }
    *((unsigned char *)a1 + v18) = 2;
    return a1;
  }
  if (v20 == 1)
  {
    unsigned int v29 = a2[v16];
    unsigned int v30 = v29 - 2;
    if (v29 >= 2)
    {
      if (v16 <= 3) {
        uint64_t v31 = v16;
      }
      else {
        uint64_t v31 = 4;
      }
      switch(v31)
      {
        case 1:
          int v32 = *a2;
          if (v16 >= 4) {
            goto LABEL_71;
          }
          goto LABEL_65;
        case 2:
          int v32 = *(unsigned __int16 *)a2;
          if (v16 < 4) {
            goto LABEL_65;
          }
          goto LABEL_71;
        case 3:
          int v32 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          if (v16 < 4) {
            goto LABEL_65;
          }
          goto LABEL_71;
        case 4:
          int v32 = *(_DWORD *)a2;
          if (v16 < 4)
          {
LABEL_65:
            unsigned int v29 = (v32 | (v30 << (8 * v16))) + 2;
            break;
          }
LABEL_71:
          if (v32 != -1) {
            goto LABEL_72;
          }
          goto LABEL_67;
        default:
          break;
      }
    }
    if (v29 == 1)
    {
LABEL_67:
      v40 = *(void **)a2;
      id v41 = v40;
      *a1 = v40;
      char v42 = 1;
    }
    else
    {
LABEL_72:
      (*(void (**)(void *, unsigned __int8 *, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16))(a1, a2, AssociatedTypeWitness);
      char v42 = 0;
    }
    *((unsigned char *)a1 + v16) = v42;
    if (v18 > 3)
    {
LABEL_74:
      *((unsigned char *)a1 + v18) = 1;
      return a1;
    }
    int v39 = 1;
    unsigned int v43 = ((1 << (8 * v18)) + 1) >> (8 * v18);
    if (v43 <= 0xFFFC)
    {
      if (v43 > 0xFC)
      {
        *(_WORD *)((char *)a1 + v18) = 1;
        return a1;
      }
      goto LABEL_74;
    }
LABEL_78:
    *(_DWORD *)((char *)a1 + v18) = v39;
    return a1;
  }
  if (v20)
  {
    if (v18 > 3) {
      goto LABEL_49;
    }
    unsigned int v36 = ((1 << (8 * v18)) + 1) >> (8 * v18);
    uint64_t v37 = 2;
    if (v36 > 0xFFFC) {
      uint64_t v37 = 4;
    }
    if (v36 <= 0xFC) {
LABEL_49:
    }
      uint64_t v37 = 1;
    memcpy(a1, a2, v37 + v18);
  }
  else
  {
    uint64_t v24 = ~v8;
    (*(void (**)(void *, unsigned __int8 *, uint64_t))(v46 + 16))(a1, a2, v5);
    unint64_t v25 = ((unint64_t)a1 + v9) & v24;
    unint64_t v26 = (unint64_t)&a2[v9] & v24;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v7 + 16))(v25, v26, v48);
    v27 = (void *)((v25 + v47 + v11) & ~v11);
    v28 = (const void *)((v26 + v47 + v11) & ~v11);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v28, 1, v49))
    {
      memcpy(v27, v28, __n);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v10 + 16))(v27, v28, v49);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v27, 0, 1, v49);
    }
    if (v18 <= 3)
    {
      unsigned int v38 = ((1 << (8 * v18)) + 1) >> (8 * v18);
      if (v38 > 0xFFFC)
      {
        *(_DWORD *)((char *)a1 + v18) = 0;
        return a1;
      }
      if (v38 > 0xFC)
      {
        *(_WORD *)((char *)a1 + v18) = 0;
        return a1;
      }
    }
    *((unsigned char *)a1 + v18) = 0;
  }
  return a1;
}

uint64_t sub_21CA06574(uint64_t result)
{
  uint64_t v2 = *(void *)result;
  if (*(void *)result)
  {
    uint64_t v3 = *(void *)(result + 24);
    uint64_t v4 = *(void *)(result + 32);
    char v5 = *(unsigned char *)(result + 56);
    uint64_t v7 = *(void *)(result + 40);
    uint64_t v6 = *(void *)(result + 48);
    uint64_t v9 = *(void *)(result + 8);
    uint64_t v8 = *(void *)(result + 16);
    swift_beginAccess();
    unint64_t result = MEMORY[0x21D4B6C80](v1 + 32);
    if (result)
    {
      uint64_t v14 = v6;
      uint64_t v10 = v4;
      uint64_t v11 = v3;
      uint64_t v12 = *(void *)(v1 + 40);
      uint64_t ObjectType = swift_getObjectType();
      v15[0] = v2;
      v15[1] = v9;
      v15[2] = v8;
      v15[3] = v11;
      v15[4] = v10;
      v15[5] = v7;
      v15[6] = v14;
      char v16 = v5 & 1;
      (*(void (**)(uint64_t, void *, uint64_t, uint64_t))(v12 + 72))(v1, v15, ObjectType, v12);
      return swift_unknownObjectRelease();
    }
  }
  return result;
}

uint64_t sub_21CA06658(uint64_t a1)
{
  swift_beginAccess();
  uint64_t result = MEMORY[0x21D4B6C80](v1 + 32);
  if (result)
  {
    uint64_t v4 = *(void *)(v1 + 40);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 88))(v1, a1, ObjectType, v4);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t *sub_21CA066E8(uint64_t *result)
{
  uint64_t v2 = result[2];
  if (v2)
  {
    uint64_t v3 = result[3];
    uint64_t v5 = *result;
    uint64_t v4 = result[1];
    swift_beginAccess();
    uint64_t result = (uint64_t *)MEMORY[0x21D4B6C80](v1 + 32);
    if (result)
    {
      uint64_t v6 = *(void *)(v1 + 40);
      uint64_t ObjectType = swift_getObjectType();
      __int16 v8 = v5 & 0x101;
      char v9 = BYTE2(v5) & 1;
      char v10 = BYTE3(v5);
      uint64_t v11 = v4;
      uint64_t v12 = v2;
      uint64_t v13 = v3;
      (*(void (**)(uint64_t, __int16 *, uint64_t, uint64_t))(v6 + 64))(v1, &v8, ObjectType, v6);
      return (uint64_t *)swift_unknownObjectRelease();
    }
  }
  return result;
}

uint64_t sub_21CA067BC()
{
  uint64_t v2 = v0[13];
  uint64_t v1 = v0[14];
  uint64_t v4 = v0[8];
  uint64_t v3 = v0[9];
  uint64_t v6 = v0[6];
  uint64_t v5 = v0[7];
  uint64_t v7 = v0[4];
  uint64_t v8 = v0[3];
  sub_21CB88FB0();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v6);
  uint64_t v9 = v7 + *(int *)(v8 + 44);
  uint64_t v10 = sub_21CB889A0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32))(v9, v3, v5);
  uint64_t v11 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v4 + 56);
  v11(v9, 0, 1, v5);
  v11(v0[2], 0, 1, v0[7]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v12 = (uint64_t (*)(void))v0[1];
  return v12();
}

uint64_t sub_21CA06924()
{
  uint64_t result = sub_21CAC1DD4();
  qword_267C95AD8 = result;
  unk_267C95AE0 = v1;
  return result;
}

uint64_t sub_21CA06948()
{
  memcpy(__dst, (const void *)(v0 + 16), 0x161uLL);
  sub_21CA76350(__dst);
  return swift_deallocClassInstance();
}

uint64_t sub_21CA06994(uint64_t result)
{
  if (*(void *)(result + OBJC_IVAR____TtC7FMFCore22FMAPSConnectionHandler_connection))
  {
    uint64_t v1 = result;
    uint64_t v2 = *(void *)(result + OBJC_IVAR____TtC7FMFCore22FMAPSConnectionHandler_connection + 8);
    uint64_t ObjectType = swift_getObjectType();
    sub_21CA57E34((uint64_t *)&unk_267C96F20);
    uint64_t v4 = swift_allocObject();
    *(_OWORD *)(v4 + 16) = xmmword_21CB8B220;
    uint64_t v5 = *(void *)(v1 + OBJC_IVAR____TtC7FMFCore22FMAPSConnectionHandler_topic);
    uint64_t v6 = *(void *)(v1 + OBJC_IVAR____TtC7FMFCore22FMAPSConnectionHandler_topic + 8);
    *(void *)(v4 + 32) = v5;
    *(void *)(v4 + 40) = v6;
    uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32);
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    v7(v4, ObjectType, v2);
    swift_bridgeObjectRelease();
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_21CA06A90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v8 = *(void *)(a4 - 8);
  uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 56);
  v9(a5, 1, 1);
  uint64_t v10 = (int *)type metadata accessor for AsyncTimerSequence.Iterator();
  uint64_t v11 = a5 + v10[11];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 56))(v11, 1, 1, AssociatedTypeWitness);
  uint64_t v13 = sub_21CB889A0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(a5, v13);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 32))(a5, a3, a4);
  ((void (*)(uint64_t, void, uint64_t, uint64_t))v9)(a5, 0, 1, a4);
  uint64_t v14 = a5 + v10[9];
  uint64_t v15 = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 32))(v14, a1, v15);
  uint64_t v16 = a5 + v10[10];
  uint64_t v17 = sub_21CB889A0();
  uint64_t v18 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 32);

  return v18(v16, a2, v17);
}

void *sub_21CA06CE4()
{
  sub_21CA57E34((uint64_t *)&unk_267C974B0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_21CB91380;
  *(unsigned char *)(inited + 32) = 0;
  uint64_t v1 = (void *)sub_21CB882C0();
  int v2 = MGGetSInt32Answer();

  if (v2 == 9)
  {
    unint64_t v3 = 0xD000000000000056;
    uint64_t v4 = "https://support.apple.com/guide/findmy-mac/set-location-notifications-fmmeb70d2de0/mac";
  }
  else if (v2 == 3)
  {
    unint64_t v3 = 0xD00000000000005FLL;
    uint64_t v4 = "https://support.apple.com/guide/ipad/set-location-notifications-for-friends-ipad4c370380/ipados";
  }
  else
  {
    unint64_t v3 = 0xD00000000000005ELL;
    uint64_t v4 = "https://support.apple.com/guide/iphone/set-location-notifications-for-friends-iph843dd79b6/ios";
  }
  *(void *)(inited + 64) = MEMORY[0x263F8D310];
  *(void *)(inited + 40) = v3;
  *(void *)(inited + 48) = (unint64_t)(v4 - 32) | 0x8000000000000000;
  *(unsigned char *)(inited + 72) = 1;
  uint64_t v5 = MEMORY[0x263F8D6C8];
  *(void *)(inited + 104) = MEMORY[0x263F8D6C8];
  *(void *)(inited + 80) = 200;
  *(unsigned char *)(inited + 112) = 2;
  uint64_t v6 = MEMORY[0x263F8D538];
  *(void *)(inited + 144) = MEMORY[0x263F8D538];
  *(void *)(inited + 120) = 0x4000000000000000;
  *(unsigned char *)(inited + 152) = 3;
  *(void *)(inited + 184) = v6;
  *(void *)(inited + 160) = 0x404E000000000000;
  *(unsigned char *)(inited + 192) = 5;
  *(void *)(inited + 224) = v6;
  *(void *)(inited + 200) = 0x403E000000000000;
  *(unsigned char *)(inited + 232) = 6;
  *(void *)(inited + 264) = v5;
  *(void *)(inited + 240) = 100;
  *(unsigned char *)(inited + 272) = 4;
  *(void *)(inited + 304) = v6;
  *(void *)(inited + 280) = 0x403E000000000000;
  *(unsigned char *)(inited + 312) = 7;
  *(void *)(inited + 344) = v6;
  *(void *)(inited + 320) = 0x4092C00000000000;
  *(unsigned char *)(inited + 352) = 11;
  *(void *)(inited + 384) = v6;
  *(void *)(inited + 360) = 0x4072C00000000000;
  uint64_t result = (void *)sub_21CA345B8(inited);
  off_267C97428 = result;
  return result;
}

uint64_t sub_21CA06E94(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = (void **)(a2 + OBJC_IVAR____TtC7FMFCore20FMFRefreshController_tapContexts);
  swift_beginAccess();
  uint64_t v4 = *v3;
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *unint64_t v3 = v4;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v4 = sub_21CA61FC4(0, v4[2] + 1, 1, v4);
    *unint64_t v3 = v4;
  }
  unint64_t v7 = v4[2];
  unint64_t v6 = v4[3];
  if (v7 >= v6 >> 1)
  {
    uint64_t v4 = sub_21CA61FC4((void *)(v6 > 1), v7 + 1, 1, v4);
    *unint64_t v3 = v4;
  }
  v4[2] = v7 + 1;
  v4[v7 + 4] = a1;
  swift_endAccess();
  return sub_21CA34FE0(0.0);
}

void sub_21CA06F80(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = *(void (**)(uint64_t, void *))(a1 + 32);
  sub_21CA05908(0, &qword_267C96EA8);
  sub_21CA622C0();
  uint64_t v5 = sub_21CB88730();
  swift_retain();
  id v6 = a3;
  v4(v5, a3);
  swift_release();
  swift_bridgeObjectRelease();
}

uint64_t sub_21CA0703C()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_21CA071A8()
{
  swift_getAssociatedTypeWitness();
  uint64_t result = sub_21CB889A0();
  if (v1 <= 0x3F)
  {
    swift_getAssociatedTypeWitness();
    uint64_t result = sub_21CB889A0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_21CA072B8()
{
  uint64_t v1 = sub_21CB87590();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *v0;
  sub_21CB87580();
  uint64_t v6 = v5 + qword_267CA5398;
  swift_beginAccess();
  (*(void (**)(uint64_t, char *, uint64_t))(v2 + 40))(v6, v4, v1);
  return swift_endAccess();
}

uint64_t static FMDemoManager.assetURL(for:)()
{
  uint64_t v0 = sub_21CA57E34(&qword_267C95190);
  MEMORY[0x270FA5388](v0);
  uint64_t v2 = (char *)&v9 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_21CB87480();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_267C949D8 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_21CA4CC18(v0, (uint64_t)qword_267C975C8);
  sub_21CA66CA4(v7, (uint64_t)v2);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1)
  {
    sub_21CA07B00((uint64_t)v2);
    sub_21CA78EF4();
    swift_allocError();
    return swift_willThrow();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v6, v2, v3);
    sub_21CB87440();
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
}

uint64_t sub_21CA075E8()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      uint64_t result = sub_21CB889A0();
      if (v3 <= 0x3F)
      {
        swift_getTupleTypeLayout3();
        uint64_t v5 = &v4;
        uint64_t v6 = "(";
        uint64_t v7 = &unk_21CB8EF88;
        swift_initEnumMetadataMultiPayload();
        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_21CA0771C(uint64_t result, char a2)
{
  if (result)
  {
    uint64_t v4 = result;
    swift_beginAccess();
    uint64_t result = MEMORY[0x21D4B6C80](v2 + 32);
    if (result)
    {
      uint64_t v5 = *(void *)(v2 + 40);
      uint64_t ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t, void, uint64_t, uint64_t))(v5 + 80))(v2, v4, a2 & 1, ObjectType, v5);
      return swift_unknownObjectRelease();
    }
  }
  return result;
}

uint64_t sub_21CA077C4()
{
  v1[2] = v0;
  sub_21CA57E34(&qword_267C95028);
  v1[3] = swift_task_alloc();
  uint64_t v2 = *(void *)(sub_21CA57E34(&qword_267C95988) - 8);
  v1[4] = v2;
  v1[5] = *(void *)(v2 + 64);
  v1[6] = swift_task_alloc();
  v1[7] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_21CA05358, v0, 0);
}

void sub_21CA078CC(char *a1@<X8>)
{
  sub_21CA078E8(*(void **)(v1 + 16), *(void *)(v1 + 24), a1);
}

void sub_21CA078E8(void *a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v6 = swift_bridgeObjectRetain();
  char v7 = sub_21CA07990(v6, a2);
  swift_bridgeObjectRelease();
  if (v7)
  {
    char v8 = 0;
  }
  else
  {
    a1[86] = 0;
    swift_bridgeObjectRelease();
    a1[72] = 0;
    swift_bridgeObjectRelease();
    a1[80] = a2;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    sub_21CA2D15C();
    char v8 = 1;
  }
  *a3 = v8;
}

uint64_t sub_21CA07990(uint64_t a1, uint64_t a2)
{
  return sub_21CA2DEE4(a1, a2, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert, (uint64_t (*)(char *, char *))static FMFLocationAlert.== infix(_:_:));
}

void sub_21CA079D0(char *a1@<X8>)
{
  sub_21CA079EC(*(void *)(v1 + 16), *(void **)(v1 + 24), a1);
}

void sub_21CA079EC(uint64_t a1@<X0>, void *a2@<X1>, char *a3@<X8>)
{
  uint64_t v6 = a2[81];
  swift_bridgeObjectRetain();
  char v7 = sub_21CA07990(a1, v6);
  swift_bridgeObjectRelease();
  if (v7)
  {
    char v8 = 0;
  }
  else
  {
    a2[86] = 0;
    swift_bridgeObjectRelease();
    a2[72] = 0;
    swift_bridgeObjectRelease();
    a2[81] = a1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    sub_21CA2D15C();
    char v8 = 1;
  }
  *a3 = v8;
}

uint64_t FMFAlert.deinit()
{
  sub_21CA640FC(v0 + 16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_21CA07B00(v0 + OBJC_IVAR____TtC7FMFCore8FMFAlert_okButtonURL);
  sub_21CA07B00(v0 + OBJC_IVAR____TtC7FMFCore8FMFAlert_cancelButtonURL);
  return v0;
}

uint64_t sub_21CA07B00(uint64_t a1)
{
  uint64_t v2 = sub_21CA57E34(&qword_267C95190);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_21CA07B60()
{
  uint64_t v1 = v0[10];
  uint64_t v2 = v0[8];
  uint64_t v3 = v0[9];
  uint64_t v4 = sub_21CB88C70();
  uint64_t v5 = sub_21CA07D00(&qword_267C957A8, MEMORY[0x263F8F710]);
  sub_21CB88FB0();
  sub_21CA07D00(&qword_267C957B0, MEMORY[0x263F8F6D8]);
  sub_21CB88C80();
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v0[12] = v6;
  v0[13] = (v3 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v6(v1, v2);
  char v7 = (void *)swift_task_alloc();
  v0[14] = v7;
  *char v7 = v0;
  v7[1] = sub_21CAB49EC;
  uint64_t v8 = v0[11];
  return MEMORY[0x270FA2380](v8, v0 + 2, v4, v5);
}

uint64_t sub_21CA07D00(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_21CA07D48@<X0>(void *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v6 = sub_21CA57E34(&qword_267C95400);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0) + 40;
  uint64_t v9 = sub_21CA57E34(&qword_267C96C40);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0) + 40;
  uint64_t v12 = sub_21CB87740();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 1, 1, v12);
  sub_21CA66BD0(a2, (uint64_t)v8);
  uint64_t v13 = type metadata accessor for FMFServerInteractionController();
  swift_allocObject();
  id v14 = a1;
  uint64_t result = sub_21CA1B1E4((uint64_t)v11, a1, (uint64_t)v8);
  uint64_t v16 = (void *)result;
  if (qword_267C949C0 != -1) {
    uint64_t result = swift_once();
  }
  if (byte_267C975B8 == 1)
  {
    v23[3] = v13;
    v23[4] = &off_26CD6F798;
    v23[0] = v16;
    swift_retain();
    uint64_t v17 = sub_21CA78B50(v14, (uint64_t)v23);
    sub_21CA2B0D0((uint64_t)v23);
    if (qword_267C94990 != -1) {
      swift_once();
    }
    uint64_t v18 = sub_21CB880A0();
    sub_21CA4CC18(v18, (uint64_t)qword_267CA5368);
    unsigned int v19 = sub_21CB88070();
    os_log_type_t v20 = sub_21CB88880();
    if (os_log_type_enabled(v19, v20))
    {
      unsigned int v21 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unsigned int v21 = 0;
      _os_log_impl(&dword_21CA00000, v19, v20, "FMFManager: Entering Demo Mode", v21, 2u);
      MEMORY[0x21D4B6B70](v21, -1, -1);
    }

    a3[3] = type metadata accessor for FMFDemoInteractionController();
    a3[4] = &off_26CD6B8A8;
    uint64_t result = swift_release();
    uint64_t v16 = v17;
  }
  else
  {
    a3[3] = v13;
    a3[4] = &off_26CD6F798;
  }
  *a3 = v16;
  return result;
}

void *sub_21CA081B8(char a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v9 = v8;
  uint64_t v17 = *(void *)(a8 + 16);
  sub_21CA24E80(a4, v9 + qword_267CA53F8, &qword_267C96F10);
  *(void *)(v9 + qword_267CA5400) = a5;
  *(void *)(v9 + qword_267CA5408) = a6;
  *(void *)(v9 + qword_267CA5410) = a7;
  uint64_t v18 = v9 + qword_267CA5418;
  *(_OWORD *)uint64_t v18 = *(_OWORD *)a8;
  *(void *)(v18 + 16) = v17;
  *(unsigned char *)(v9 + qword_267CA5420) = a1;
  if ((a1 & 1) == 0)
  {
    uint64_t v19 = type metadata accessor for FMFFriend();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 48))(a4, 1, v19) == 1)
    {
      if (a3 == 2) {
        goto LABEL_7;
      }
      goto LABEL_6;
    }
    if (a3 != 2)
    {
LABEL_6:
      sub_21CB88B70();
      sub_21CB88CA0();
      sub_21CB883D0();
    }
  }
LABEL_7:
  os_log_type_t v20 = sub_21CA36A84();
  sub_21CA37A10(a4);
  return v20;
}

uint64_t sub_21CA08454()
{
  uint64_t v0 = sub_21CB888F0();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_21CB888B0();
  MEMORY[0x270FA5388](v4);
  uint64_t v5 = sub_21CB88150();
  MEMORY[0x270FA5388](v5 - 8);
  sub_21CA182AC();
  sub_21CB88120();
  v7[1] = MEMORY[0x263F8EE78];
  sub_21CA36588((unint64_t *)&qword_267C96F60, MEMORY[0x263F8F0F8]);
  sub_21CA57E34((uint64_t *)&unk_267C96F90);
  sub_21CA3566C((unint64_t *)&qword_267C96F70, (uint64_t *)&unk_267C96F90);
  sub_21CB88A60();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x263F8F130], v0);
  uint64_t result = sub_21CB88930();
  qword_267C97420 = result;
  return result;
}

uint64_t sub_21CA08694()
{
  if (qword_267C94948 != -1) {
    swift_once();
  }
  swift_bridgeObjectRetain();
  sub_21CB883D0();
  swift_bridgeObjectRetain();
  sub_21CB883D0();
  swift_bridgeObjectRelease();
  sub_21CB87420();

  return swift_bridgeObjectRelease();
}

void sub_21CA0884C()
{
  if (qword_267C94990 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_21CB880A0();
  sub_21CA4CC18(v0, (uint64_t)qword_267CA5368);
  oslog = sub_21CB88070();
  os_log_type_t v1 = sub_21CB88880();
  if (os_log_type_enabled(oslog, v1))
  {
    uint64_t v2 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v2 = 0;
    _os_log_impl(&dword_21CA00000, oslog, v1, "FMFRefreshController: refresh request completed after timer", v2, 2u);
    MEMORY[0x21D4B6B70](v2, -1, -1);
  }
}

uint64_t sub_21CA08934()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_21CA08A04()
{
  uint64_t v0 = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t v2 = swift_checkMetadataState();
    if (v3 > 0x3F) {
      return v2;
    }
    uint64_t v2 = sub_21CB889A0();
    if (v4 > 0x3F)
    {
      return v2;
    }
    else
    {
      swift_getTupleTypeLayout3();
      uint64_t v9 = &v8;
      swift_getAssociatedTypeWitness();
      sub_21CA5EEBC((uint64_t *)&unk_267C96F50);
      uint64_t v5 = sub_21CB890A0();
      uint64_t v0 = v5;
      if (v6 <= 0x3F)
      {
        uint64_t v10 = *(void *)(v5 - 8) + 64;
        uint64_t v11 = "\b";
        swift_initEnumMetadataMultiPayload();
        return 0;
      }
    }
  }
  return v0;
}

uint64_t sub_21CA08C7C()
{
  type metadata accessor for FMSystemDirectoryUtilities();
  uint64_t v0 = swift_allocObject();
  uint64_t v1 = swift_slowAlloc();
  uint64_t started = sysdir_start_search_path_enumeration_private();
  MEMORY[0x21D4B6D00](started, v1);
  uint64_t v3 = sub_21CB883E0();
  uint64_t v5 = v4;
  uint64_t result = MEMORY[0x21D4B6B70](v1, -1, -1);
  *(void *)(v0 + 16) = v3;
  *(void *)(v0 + 24) = v5;
  qword_267CA51E0 = v0;
  return result;
}

uint64_t sub_21CA08D04()
{
  if (qword_267C94948 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void *)(qword_267CA51E0 + 16);
  uint64_t v2 = *(void *)(qword_267CA51E0 + 24);
  swift_bridgeObjectRetain();
  sub_21CB883D0();
  swift_bridgeObjectRetain();
  sub_21CB883D0();
  uint64_t result = swift_bridgeObjectRelease();
  qword_267CA5330 = v1;
  *(void *)algn_267CA5338 = v2;
  return result;
}

uint64_t sub_21CA08DD0(uint64_t a1)
{
  uint64_t v2 = sub_21CA57E34(&qword_267C96F10);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = &v9[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = *(void *)(a1 + 128);
  uint64_t v6 = a1 + OBJC_IVAR____TtC7FMFCore10FMFManager_selectedFriend;
  swift_beginAccess();
  sub_21CA24E80(v6, (uint64_t)v4, &qword_267C96F10);
  uint64_t v7 = v5 + OBJC_IVAR____TtC7FMFCore20FMFRefreshController_selectedFriend;
  swift_beginAccess();
  swift_retain();
  sub_21CA62738((uint64_t)v4, v7);
  swift_endAccess();
  swift_release();
  swift_retain();
  sub_21CA34FE0(0.0);
  return swift_release();
}

uint64_t sub_21CA08EEC()
{
  uint64_t v0 = sub_21CB87630();
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v2 = (char *)&v15 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_267C94958 != -1) {
    swift_once();
  }
  uint64_t v16 = qword_267C96C00;
  sub_21CB87600();
  if (qword_267C94978 != -1) {
    swift_once();
  }
  uint64_t v3 = qword_267CA5330;
  uint64_t v4 = *(void *)algn_267CA5338;
  uint64_t v5 = qword_267C94970;
  swift_bridgeObjectRetain();
  if (v5 != -1) {
    swift_once();
  }
  uint64_t v6 = qword_267C97030;
  id v7 = objc_msgSend(self, sel_mainBundle);
  id v8 = objc_msgSend(v7, sel_bundleIdentifier);

  if (v8)
  {
    uint64_t v9 = sub_21CB882F0();
    uint64_t v11 = v10;
  }
  else
  {
    uint64_t v9 = 0;
    uint64_t v11 = 0xE000000000000000;
  }
  char v12 = sub_21CB3B114(v9, v11, v6);
  swift_bridgeObjectRelease();
  type metadata accessor for FMFManagerConfiguration();
  uint64_t v13 = swift_allocObject();
  uint64_t result = sub_21CAFF9E0(&v16, (uint64_t)v2, v3, v4, v12 & 1, (uint64_t)sub_21CA07D48, 0, 0, 0, 0);
  qword_267C96C08 = v13;
  return result;
}

uint64_t sub_21CA0910C()
{
  uint64_t AssociatedTypeWitness = sub_21CB889A0();
  if (v1 <= 0x3F)
  {
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    if (v2 <= 0x3F)
    {
      uint64_t AssociatedTypeWitness = sub_21CB889A0();
      if (v3 <= 0x3F)
      {
        swift_getAssociatedTypeWitness();
        uint64_t AssociatedTypeWitness = sub_21CB889A0();
        if (v4 <= 0x3F)
        {
          swift_initStructMetadata();
          return 0;
        }
      }
    }
  }
  return AssociatedTypeWitness;
}

uint64_t sub_21CA092B8()
{
  return swift_bridgeObjectRetain();
}

id static FMDemoManager.hasDemoModeAsset(for:)(unsigned char *a1)
{
  uint64_t v2 = sub_21CB87480();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = &v10[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10[15] = *a1;
  static FMDemoManager.assetURL(for:)();
  if (qword_267C949D0 != -1) {
    swift_once();
  }
  uint64_t v6 = (void *)qword_267C975C0;
  sub_21CB87460();
  id v7 = (void *)sub_21CB882C0();
  swift_bridgeObjectRelease();
  id v8 = objc_msgSend(v6, sel_fileExistsAtPath_, v7);

  (*(void (**)(unsigned char *, uint64_t))(v3 + 8))(v5, v2);
  return v8;
}

uint64_t sub_21CA0946C(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  v2[5] = a2;
  swift_unknownObjectWeakAssign();
  uint64_t v4 = v2[9];
  uint64_t v5 = v2[10];
  v7[0] = v2[8];
  v7[1] = v4;
  void v7[2] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_21CA0C7DC(v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_unknownObjectRelease();
}

uint64_t sub_21CA09520()
{
  uint64_t v1 = sub_21CB88100();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_21CB88150();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  id v8 = (char *)v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11[0] = *(void *)(v0 + OBJC_IVAR____TtC7FMFCore20FMFRefreshController_refreshQueue);
  aBlock[4] = sub_21CA63F1C;
  uint64_t v13 = v0;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_21CA1B084;
  aBlock[3] = &unk_26CD6A528;
  uint64_t v9 = _Block_copy(aBlock);
  swift_retain();
  sub_21CB88120();
  v11[1] = MEMORY[0x263F8EE78];
  sub_21CA364B0((unint64_t *)&qword_267C96FC0, MEMORY[0x263F8F030]);
  sub_21CA57E34((uint64_t *)&unk_267C96DD0);
  sub_21CA3566C((unint64_t *)&qword_267C96FD0, (uint64_t *)&unk_267C96DD0);
  sub_21CB88A60();
  MEMORY[0x21D4B5A20](0, v8, v4, v9);
  _Block_release(v9);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return swift_release();
}

uint64_t sub_21CA097B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10 = sub_21CB871A0();
  uint64_t v30 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  char v12 = (char *)v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_21CA57E34(&qword_267C97238);
  uint64_t v14 = MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)v29 - v17;
  v29[1] = a1;
  v29[2] = a2;
  v29[3] = a3;
  v29[4] = a4;
  uint64_t v19 = sub_21CB871C0();
  uint64_t v31 = a5;
  unint64_t v21 = v20;
  if (v20 >> 60 == 15)
  {
    sub_21CA57E34(&qword_267C972A8);
    sub_21CA356BC(&qword_267C972B0, &qword_267C972A8);
    uint64_t v22 = (void *)swift_allocError();
    swift_willThrow();
    sub_21CB877D0();
    sub_21CB87800();
    sub_21CB87310();
    swift_allocObject();
    sub_21CB87300();
    sub_21CA356BC(&qword_267C97298, &qword_267C97238);
    uint64_t v24 = sub_21CB872F0();
    unint64_t v26 = v25;
    swift_release();
    uint64_t v32 = v24;
    unint64_t v33 = v26;
    uint64_t v27 = v30;
    (*(void (**)(char *, void, uint64_t))(v30 + 104))(v12, *MEMORY[0x263F3CA40], v10);
    sub_21CB2C1A0();
    sub_21CB871B0();
    (*(void (**)(char *, uint64_t))(v27 + 8))(v12, v10);

    sub_21CA36618(v24, v26);
    uint64_t v18 = v16;
  }
  else
  {
    uint64_t v23 = v19;
    sub_21CB872E0();
    swift_allocObject();
    sub_21CB872D0();
    sub_21CA356BC(&qword_267C972B8, &qword_267C97238);
    sub_21CB872C0();
    sub_21CA66C90(v23, v21);
    swift_release();
  }
  return sub_21CA26A4C((uint64_t)v18, v31, &qword_267C97238);
}

uint64_t sub_21CA09D20()
{
  uint64_t v1 = sub_21CB88100();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_21CB88150();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  id v8 = (char *)v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11[0] = *(void *)(v0 + 48);
  aBlock[4] = sub_21CA66894;
  uint64_t v13 = v0;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_21CA1B084;
  aBlock[3] = &unk_26CD6E238;
  uint64_t v9 = _Block_copy(aBlock);
  swift_retain();
  sub_21CB88120();
  v11[1] = MEMORY[0x263F8EE78];
  sub_21CA5DEAC((unint64_t *)&qword_267C96FC0, MEMORY[0x263F8F030]);
  sub_21CA57E34((uint64_t *)&unk_267C96DD0);
  sub_21CA356BC((unint64_t *)&qword_267C96FD0, (uint64_t *)&unk_267C96DD0);
  sub_21CB88A60();
  MEMORY[0x21D4B5A20](0, v8, v4, v9);
  _Block_release(v9);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return swift_release();
}

uint64_t sub_21CA09FC4()
{
  uint64_t v0 = sub_21CB87730();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + qword_267CA51F8;
  uint64_t v2 = sub_21CB87590();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return v0;
}

uint64_t sub_21CA0A0A8()
{
  uint64_t v0 = sub_21CA57E34(&qword_267C95190);
  uint64_t v1 = MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21CA61F60(v1, qword_267C975C8);
  uint64_t v4 = sub_21CA4CC18(v0, (uint64_t)qword_267C975C8);
  if (qword_267C949D0 != -1) {
    swift_once();
  }
  uint64_t v5 = (void *)qword_267C975C0;
  uint64_t v6 = (void *)sub_21CB882C0();
  id v7 = objc_msgSend(v5, sel_containerURLForSecurityApplicationGroupIdentifier_, v6);

  if (v7)
  {
    sub_21CB87450();

    uint64_t v8 = sub_21CB87480();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v3, 0, 1, v8);
  }
  else
  {
    uint64_t v9 = sub_21CB87480();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v3, 1, 1, v9);
  }
  return sub_21CA66D0C((uint64_t)v3, v4);
}

uint64_t sub_21CA0A250()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 40, 7);
}

void sub_21CA0A290(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (qword_267C94990 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_21CB880A0();
  sub_21CA4CC18(v6, (uint64_t)qword_267CA5368);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  id v7 = sub_21CB88070();
  os_log_type_t v8 = sub_21CB88850();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    uint64_t v15 = v10;
    *(_DWORD *)uint64_t v9 = 136315394;
    if (a2) {
      uint64_t v11 = 1702195828;
    }
    else {
      uint64_t v11 = 0x65736C6166;
    }
    if (a2) {
      unint64_t v12 = 0xE400000000000000;
    }
    else {
      unint64_t v12 = 0xE500000000000000;
    }
    sub_21CA4E450(v11, v12, &v15);
    sub_21CB889C0();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v9 + 12) = 2080;
    if (a4) {
      uint64_t v13 = 1702195828;
    }
    else {
      uint64_t v13 = 0x65736C6166;
    }
    if (a4) {
      unint64_t v14 = 0xE400000000000000;
    }
    else {
      unint64_t v14 = 0xE500000000000000;
    }
    sub_21CA4E450(v13, v14, &v15);
    sub_21CB889C0();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_21CA00000, v7, v8, "FMFRefreshController: connectionHandler didReceive topicToken: %s publicToken:%s", (uint8_t *)v9, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x21D4B6B70](v10, -1, -1);
    MEMORY[0x21D4B6B70](v9, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
}

void sub_21CA0A4E0(uint64_t a1)
{
  sub_21CA57E34(&qword_267C95848);
  uint64_t v3 = ((uint64_t (*)(void))MEMORY[0x270FA5388])();
  uint64_t v5 = (uint64_t *)((char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v3);
  id v7 = (char *)&v15 - v6;
  sub_21CA24E80(v1, (uint64_t)&v15 - v6, &qword_267C95848);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    switch(EnumCaseMultiPayload)
    {
      case 2:
        goto LABEL_6;
      case 3:
        goto LABEL_5;
      case 4:
        goto LABEL_7;
      default:
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
LABEL_5:
        __break(1u);
LABEL_6:
        unint64_t v14 = (void *)*((void *)v7 + 1);
        swift_release();

        __break(1u);
LABEL_7:
        __break(1u);
        break;
    }
  }
  else
  {
    uint64_t v9 = sub_21CA57E34(&qword_267C95850);
    uint64_t v10 = &v7[*(int *)(v9 + 48)];
    uint64_t v11 = (uint64_t)&v7[*(int *)(v9 + 64)];
    swift_retain();
    uint64_t v12 = *(void *)sub_21CB88010();
    *uint64_t v5 = a1;
    v5[1] = v12;
    v5[2] = MEMORY[0x263F8EE78];
    v5[3] = 0;
    v5[4] = 0;
    swift_storeEnumTagMultiPayload();
    swift_retain();
    sub_21CAB68E0((uint64_t)v5, v1, &qword_267C95848);
    sub_21CA1B88C(v11, &qword_267C95858);
    uint64_t v13 = sub_21CA57E34(&qword_267C95860);
    (*(void (**)(char *, uint64_t))(*(void *)(v13 - 8) + 8))(v10, v13);
    sub_21CA1B88C((uint64_t)v7, &qword_267C95868);
  }
}

uint64_t sub_21CA0A6D4@<X0>(uint64_t a1@<X8>)
{
  return sub_21CA346E8(*(unsigned char *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 16), &qword_267C949A8, (uint64_t *)&off_267C97428, a1);
}

uint64_t sub_21CA0A718(uint64_t a1)
{
  if (qword_267C949A0 != -1) {
    a1 = swift_once();
  }
  MEMORY[0x270FA5388](a1);
  return sub_21CB88910();
}

uint64_t FMFGenericResponseHandler.didUpdate(_:)(uint64_t a1)
{
  uint64_t v3 = sub_21CB88100();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_21CB88150();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_21CB87190();
  uint64_t v19 = (void *)v11;
  uint64_t v20 = sub_21CB068B4((unint64_t *)&qword_267C94E20, MEMORY[0x263F3CA38]);
  uint64_t v12 = sub_21CA6D80C(aBlock);
  (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v11 - 8) + 104))(v12, *MEMORY[0x263F3CA28], v11);
  LOBYTE(v11) = MEMORY[0x21D4B4280](aBlock);
  uint64_t result = sub_21CA2B0D0((uint64_t)aBlock);
  if ((v11 & 1) == 0)
  {
    v17[0] = *(void *)&v1[OBJC_IVAR____TtC7FMFCore25FMFGenericResponseHandler_updateQueue];
    uint64_t v14 = swift_allocObject();
    *(void *)(v14 + 16) = v1;
    *(void *)(v14 + 24) = a1;
    uint64_t v20 = (uint64_t)sub_21CA63550;
    uint64_t v21 = v14;
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_21CA1B084;
    uint64_t v19 = &unk_26CD6D9E0;
    uint64_t v15 = _Block_copy(aBlock);
    swift_bridgeObjectRetain();
    uint64_t v16 = v1;
    sub_21CB88120();
    v17[1] = MEMORY[0x263F8EE78];
    sub_21CB068B4((unint64_t *)&qword_267C96FC0, MEMORY[0x263F8F030]);
    sub_21CA57E34((uint64_t *)&unk_267C96DD0);
    sub_21CA3566C((unint64_t *)&qword_267C96FD0, (uint64_t *)&unk_267C96DD0);
    sub_21CB88A60();
    MEMORY[0x21D4B5A20](0, v10, v6, v15);
    _Block_release(v15);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    return swift_release();
  }
  return result;
}

uint64_t sub_21CA0AB30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_21CB88100();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_21CB88150();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18[0] = *(void *)&v3[OBJC_IVAR____TtC7FMFCore22FMAPSConnectionHandler_connectionQueue];
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = v3;
  aBlock[4] = a2;
  void aBlock[5] = v14;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_21CA1B084;
  uint64_t aBlock[3] = a3;
  uint64_t v15 = _Block_copy(aBlock);
  uint64_t v16 = v3;
  sub_21CB88120();
  v18[1] = MEMORY[0x263F8EE78];
  sub_21CA364F8((unint64_t *)&qword_267C96FC0, MEMORY[0x263F8F030]);
  sub_21CA57E34((uint64_t *)&unk_267C96DD0);
  sub_21CA3566C((unint64_t *)&qword_267C96FD0, (uint64_t *)&unk_267C96DD0);
  sub_21CB88A60();
  MEMORY[0x21D4B5A20](0, v13, v9, v15);
  _Block_release(v15);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  return swift_release();
}

uint64_t sub_21CA0ADCC(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  v3[5] = *(void *)(a2 + 24);
  uint64_t v4 = *(void *)(a2 + 16);
  v3[6] = v4;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v3[7] = AssociatedTypeWitness;
  v3[8] = *(void *)(AssociatedTypeWitness - 8);
  v3[9] = swift_task_alloc();
  uint64_t v6 = sub_21CB889A0();
  v3[10] = v6;
  v3[11] = *(void *)(v6 - 8);
  v3[12] = swift_task_alloc();
  v3[13] = *(void *)(v4 - 8);
  v3[14] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_21CA0FA48, 0, 0);
}

uint64_t sub_21CA0AF68(long long *a1)
{
  uint64_t v3 = sub_21CB88100();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_21CB88150();
  uint64_t v7 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v15 = *a1;
  uint64_t v10 = *((void *)a1 + 2);
  uint64_t v11 = *((void *)a1 + 3);
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = v1;
  *(_OWORD *)(v12 + 24) = v15;
  *(void *)(v12 + 40) = v10;
  *(void *)(v12 + 48) = v11;
  aBlock[4] = sub_21CA65940;
  void aBlock[5] = v12;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_21CA1B084;
  uint64_t aBlock[3] = &unk_26CD6F068;
  uint64_t v13 = _Block_copy(aBlock);
  swift_retain();
  sub_21CB88120();
  uint64_t v17 = MEMORY[0x263F8EE78];
  sub_21CA36540((unint64_t *)&qword_267C96FC0, MEMORY[0x263F8F030]);
  sub_21CA57E34((uint64_t *)&unk_267C96DD0);
  sub_21CA356BC((unint64_t *)&qword_267C96FD0, (uint64_t *)&unk_267C96DD0);
  sub_21CB88A60();
  MEMORY[0x21D4B5A20](0, v9, v6, v13);
  _Block_release(v13);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v16);
  return swift_release();
}

uint64_t sub_21CA0B23C()
{
  uint64_t v1 = *(NSObject **)(v0 + 32);
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = sub_21CA63694;
  *(void *)(v2 + 24) = v0;
  v5[4] = sub_21CA18880;
  v5[5] = v2;
  v5[0] = MEMORY[0x263EF8330];
  v5[1] = 1107296256;
  v5[2] = sub_21CA18830;
  v5[3] = &unk_26CD6AAB0;
  uint64_t v3 = _Block_copy(v5);
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v1, v3);
  _Block_release(v3);
  LOBYTE(v1) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (v1) {
    __break(1u);
  }
  return result;
}

uint64_t FMLocationShiftingRequest.__deallocating_deinit()
{
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_21CA0B3B0(uint64_t a1)
{
  uint64_t v2 = sub_21CA57E34(&qword_267C95028);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (sub_21CA33A7C())
  {
    uint64_t v5 = sub_21CB88640();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 1, 1, v5);
    uint64_t v6 = (void *)swift_allocObject();
    _OWORD v6[2] = 0;
    v6[3] = 0;
    v6[4] = a1;
    swift_retain();
    sub_21CB0A710((uint64_t)v4, (uint64_t)&unk_267C97140, (uint64_t)v6);
LABEL_5:
    swift_release();
    goto LABEL_6;
  }
  if (*(void *)(a1 + 200))
  {
    swift_retain();
    swift_retain();
    sub_21CA57E34(&qword_267C95D50);
    sub_21CB88910();
    swift_release();
    sub_21CB41A24(v8[1]);
    swift_bridgeObjectRelease();
    goto LABEL_5;
  }
LABEL_6:
  swift_retain();
  sub_21CA0DD08();
  swift_release();
  swift_retain();
  sub_21CA0EE7C();
  return swift_release();
}

uint64_t sub_21CA0B570(uint64_t *a1)
{
  swift_retain();
  sub_21CA57E34(a1);
  sub_21CB88910();
  swift_release();
  return v3;
}

uint64_t sub_21CA0B5E0()
{
  uint64_t v1 = v0[6];
  uint64_t v2 = v0[7];
  uint64_t v4 = v0[4];
  uint64_t v3 = v0[5];
  uint64_t v6 = v0[2];
  uint64_t v5 = v0[3];
  uint64_t v7 = sub_21CA57E34(&qword_267C95990);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v2, 0, 1, v7);
  uint64_t v8 = sub_21CB88640();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v5, 1, 1, v8);
  sub_21CA24E80(v2, v1, &qword_267C95988);
  uint64_t v9 = sub_21CA07D00(&qword_267C95800, (void (*)(uint64_t))type metadata accessor for FMFSecureLocationController);
  unint64_t v10 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v11 = (v3 + v10 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = v6;
  *(void *)(v12 + 24) = v9;
  sub_21CA26A4C(v1, v12 + v10, &qword_267C95988);
  *(void *)(v12 + v11) = v6;
  swift_retain_n();
  sub_21CB0A588(v5, (uint64_t)&unk_267C959A0, v12);
  swift_release();
  sub_21CA1B88C(v2, &qword_267C95988);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v13 = (uint64_t (*)(void))v0[1];
  return v13();
}

uint64_t sub_21CA0B7D8(uint64_t a1)
{
  uint64_t v3 = sub_21CB88100();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13[0] = sub_21CB88150();
  uint64_t v7 = *(void *)(v13[0] - 8);
  MEMORY[0x270FA5388](v13[0]);
  uint64_t v9 = (char *)v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21CA26A4C(a1, (uint64_t)v15, &qword_267C95CF0);
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = v1;
  sub_21CA26A4C((uint64_t)v15, v10 + 24, &qword_267C95CF0);
  aBlock[4] = sub_21CA658C0;
  void aBlock[5] = v10;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_21CA1B084;
  uint64_t aBlock[3] = &unk_26CD6EF78;
  unint64_t v11 = _Block_copy(aBlock);
  swift_retain();
  sub_21CB88120();
  v13[1] = MEMORY[0x263F8EE78];
  sub_21CA36540((unint64_t *)&qword_267C96FC0, MEMORY[0x263F8F030]);
  sub_21CA57E34((uint64_t *)&unk_267C96DD0);
  sub_21CA356BC((unint64_t *)&qword_267C96FD0, (uint64_t *)&unk_267C96DD0);
  sub_21CB88A60();
  MEMORY[0x21D4B5A20](0, v9, v6, v11);
  _Block_release(v11);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  (*(void (**)(char *, void))(v7 + 8))(v9, v13[0]);
  return swift_release();
}

uint64_t destroy for FMFMyInfo()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_21CA0BB0C(uint64_t a1, void *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t a5)
{
  uint64_t v10 = sub_21CB88100();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_21CB88150();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)v32 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2 || !a1)
  {
    if (qword_267C94990 != -1) {
      swift_once();
    }
    uint64_t v22 = sub_21CB880A0();
    sub_21CA4CC18(v22, (uint64_t)qword_267CA5368);
    id v23 = a2;
    id v24 = a2;
    unint64_t v25 = sub_21CB88070();
    os_log_type_t v26 = sub_21CB88880();
    if (os_log_type_enabled(v25, v26))
    {
      uint64_t v27 = (uint8_t *)swift_slowAlloc();
      uint64_t v28 = swift_slowAlloc();
      aBlock[0] = v28;
      *(_DWORD *)uint64_t v27 = 136315138;
      uint64_t v35 = (uint64_t)a2;
      id v29 = a2;
      sub_21CA57E34(&qword_267C975A0);
      uint64_t v30 = sub_21CB88310();
      uint64_t v35 = sub_21CA4E450(v30, v31, aBlock);
      sub_21CB889C0();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_21CA00000, v25, v26, "FMFRefreshController: refreshClientRequest completed with error: %s", v27, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x21D4B6B70](v28, -1, -1);
      MEMORY[0x21D4B6B70](v27, -1, -1);
    }
    else
    {
    }
    return a3(0);
  }
  else
  {
    v32[1] = *(void *)(a5 + OBJC_IVAR____TtC7FMFCore20FMFRefreshController_refreshQueue);
    uint64_t v33 = v16;
    uint64_t v19 = (void *)swift_allocObject();
    v19[2] = a5;
    v19[3] = a1;
    v19[4] = a3;
    v19[5] = a4;
    aBlock[4] = (uint64_t)sub_21CA63F04;
    void aBlock[5] = (uint64_t)v19;
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_21CA1B084;
    uint64_t aBlock[3] = (uint64_t)&unk_26CD6A5A0;
    uint64_t v20 = _Block_copy(aBlock);
    swift_retain_n();
    swift_retain();
    swift_retain();
    sub_21CB88120();
    uint64_t v35 = MEMORY[0x263F8EE78];
    sub_21CA364B0((unint64_t *)&qword_267C96FC0, MEMORY[0x263F8F030]);
    sub_21CA57E34((uint64_t *)&unk_267C96DD0);
    sub_21CA3566C((unint64_t *)&qword_267C96FD0, (uint64_t *)&unk_267C96DD0);
    sub_21CB88A60();
    MEMORY[0x21D4B5A20](0, v18, v13, v20);
    _Block_release(v20);
    swift_release();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v18, v33);
    return swift_release();
  }
}

uint64_t sub_21CA0BF94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (*(unsigned char *)(*(void *)(a1 + 88) + 704) == 1)
  {
    if (qword_267C94990 != -1) {
      swift_once();
    }
    uint64_t v8 = sub_21CB880A0();
    sub_21CA4CC18(v8, (uint64_t)qword_267CA5368);
    uint64_t v9 = sub_21CB88070();
    os_log_type_t v10 = sub_21CB88880();
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v11 = 0;
      _os_log_impl(&dword_21CA00000, v9, v10, "FMFManager: loaded cached data", v11, 2u);
      MEMORY[0x21D4B6B70](v11, -1, -1);
    }

    uint64_t v12 = (char *)(a1 + OBJC_IVAR____TtC7FMFCore10FMFManager_isInitialized);
    swift_beginAccess();
    char v13 = *v12;
    *uint64_t v12 = 1;
    sub_21CA13710(v13);
  }
  uint64_t v14 = *(void *)(a1 + 128);
  uint64_t v15 = swift_retain();
  uint64_t v16 = (void *)MEMORY[0x21D4B6380](v15);
  sub_21CA19308(v14, a2, a3, a4);
  return swift_release();
}

uint64_t sub_21CA0C114(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_21CB877E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 44);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_21CB87810();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  return a1;
}

void sub_21CA0C1CC(uint64_t a1)
{
  uint64_t v2 = sub_21CB88180();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (uint64_t *)((char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (qword_267C94990 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_21CB880A0();
  sub_21CA4CC18(v6, (uint64_t)qword_267CA5368);
  uint64_t v7 = sub_21CB88070();
  os_log_type_t v8 = sub_21CB88880();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v9 = 0;
    _os_log_impl(&dword_21CA00000, v7, v8, "FMFRefreshController: refreshTimerFired", v9, 2u);
    MEMORY[0x21D4B6B70](v9, -1, -1);
  }

  uint64_t v10 = *(void **)(a1 + OBJC_IVAR____TtC7FMFCore20FMFRefreshController_refreshQueue);
  *uint64_t v5 = v10;
  (*(void (**)(void *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x263F8F0E0], v2);
  id v11 = v10;
  LOBYTE(v10) = sub_21CB881A0();
  uint64_t v12 = (*(uint64_t (**)(void *, uint64_t))(v3 + 8))(v5, v2);
  if (v10)
  {
    char v13 = (void *)MEMORY[0x21D4B6380](v12);
    sub_21CA10514(a1, (uint64_t)sub_21CA0884C, 0);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_21CA0C3D4()
{
  uint64_t v1 = v0;
  if (qword_267C94990 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_21CB880A0();
  sub_21CA4CC18(v2, (uint64_t)qword_267CA5368);
  uint64_t v3 = sub_21CB88070();
  os_log_type_t v4 = sub_21CB88880();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl(&dword_21CA00000, v3, v4, "FMFSecureLocationCtrl: start refreshing", v5, 2u);
    MEMORY[0x21D4B6B70](v5, -1, -1);
  }
  uint64_t v6 = v0[17];
  uint64_t v8 = v0[15];
  uint64_t v7 = v0[16];
  uint64_t v10 = v1[5];
  uint64_t v9 = v1[6];

  (*(void (**)(uint64_t, void, uint64_t))(v7 + 104))(v6, *MEMORY[0x263F3CCF8], v8);
  sub_21CB878F0();
  sub_21CB87E20();
  swift_allocObject();
  *(void *)(v9 + 112) = sub_21CB87E30();
  swift_release();
  int64_t v11 = *(void *)(v10 + 16);
  uint64_t v12 = MEMORY[0x263F8EE78];
  if (v11)
  {
    uint64_t v13 = v1[10];
    uint64_t v32 = v1[11];
    uint64_t v33 = MEMORY[0x263F8EE78];
    uint64_t v14 = v1[5];
    sub_21CA45524(0, v11, 0);
    uint64_t v15 = v14 + ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80));
    uint64_t v16 = *(void *)(v13 + 72);
    uint64_t v12 = v33;
    do
    {
      uint64_t v17 = v1;
      uint64_t v18 = (uint64_t *)v1[11];
      sub_21CA570B0(v15, (uint64_t)v18, (uint64_t (*)(void))type metadata accessor for FMFFriend);
      uint64_t v19 = *v18;
      uint64_t v20 = *(void *)(v32 + 8);
      swift_bridgeObjectRetain();
      sub_21CA581B8((uint64_t)v18, (uint64_t (*)(void))type metadata accessor for FMFFriend);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_21CA45524(0, *(void *)(v12 + 16) + 1, 1);
        uint64_t v12 = v33;
      }
      unint64_t v22 = *(void *)(v12 + 16);
      unint64_t v21 = *(void *)(v12 + 24);
      if (v22 >= v21 >> 1)
      {
        sub_21CA45524(v21 > 1, v22 + 1, 1);
        uint64_t v12 = v33;
      }
      *(void *)(v12 + 16) = v22 + 1;
      uint64_t v23 = v12 + 16 * v22;
      *(void *)(v23 + 32) = v19;
      *(void *)(v23 + 40) = v20;
      v15 += v16;
      --v11;
      uint64_t v1 = v17;
    }
    while (v11);
  }
  (*(void (**)(void, void, void))(v1[13] + 104))(v1[14], *MEMORY[0x263F3CCA8], v1[12]);
  if (*(void *)(v12 + 16)
    && MEMORY[0x21D4B6C80](v1[6] + OBJC_IVAR____TtC7FMFCore27FMFSecureLocationController_delegate))
  {
    sub_21CA16848(1, v1[14], v12);
    swift_unknownObjectRelease();
  }
  swift_bridgeObjectRelease();
  uint64_t v25 = v1[8];
  uint64_t v24 = v1[9];
  uint64_t v26 = v1[6];
  (*(void (**)(void, void))(v1[13] + 8))(v1[14], v1[12]);
  sub_21CB87580();
  uint64_t v27 = sub_21CB87590();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v24, 0, 1, v27);
  sub_21CA26A4C(v24, v25, (uint64_t *)&unk_267C951B0);
  uint64_t v28 = v26 + OBJC_IVAR____TtC7FMFCore27FMFSecureLocationController_startRefreshingTimestamp;
  swift_beginAccess();
  sub_21CAB68E0(v25, v28, (uint64_t *)&unk_267C951B0);
  swift_endAccess();
  id v29 = (void *)swift_task_alloc();
  v1[19] = v29;
  *id v29 = v1;
  v29[1] = sub_21CA63238;
  uint64_t v30 = v1[5];
  return sub_21CA0E8D0(v30);
}

uint64_t sub_21CA0C7DC(uint64_t *a1)
{
  uint64_t v3 = sub_21CB88100();
  uint64_t v17 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_21CB88150();
  uint64_t v6 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *a1;
  uint64_t v10 = a1[1];
  uint64_t v11 = a1[2];
  uint64_t v12 = (void *)swift_allocObject();
  v12[2] = v1;
  v12[3] = v9;
  v12[4] = v10;
  v12[5] = v11;
  aBlock[4] = sub_21CA6689C;
  void aBlock[5] = v12;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_21CA1B084;
  uint64_t aBlock[3] = &unk_26CD6DC38;
  uint64_t v13 = _Block_copy(aBlock);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_21CB88120();
  uint64_t v18 = MEMORY[0x263F8EE78];
  sub_21CA5DEAC((unint64_t *)&qword_267C96FC0, MEMORY[0x263F8F030]);
  sub_21CA57E34((uint64_t *)&unk_267C96DD0);
  sub_21CA356BC((unint64_t *)&qword_267C96FD0, (uint64_t *)&unk_267C96DD0);
  sub_21CB88A60();
  MEMORY[0x21D4B5A20](0, v8, v5, v13);
  _Block_release(v13);
  (*(void (**)(char *, uint64_t))(v17 + 8))(v5, v3);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v16);
  return swift_release();
}

uint64_t sub_21CA0CAC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = sub_21CB88100();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_21CB88150();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19[0] = *(void *)(v4 + qword_267C97460);
  uint64_t v16 = (void *)swift_allocObject();
  v16[2] = v4;
  v16[3] = a1;
  v16[4] = a2;
  v16[5] = a3;
  aBlock[4] = sub_21CA63004;
  void aBlock[5] = v16;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_21CA1B084;
  uint64_t aBlock[3] = &unk_26CD6F810;
  uint64_t v17 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_retain();
  sub_21CB88120();
  v19[1] = MEMORY[0x263F8EE78];
  sub_21CA36588((unint64_t *)&qword_267C96FC0, MEMORY[0x263F8F030]);
  sub_21CA57E34((uint64_t *)&unk_267C96DD0);
  sub_21CA3566C((unint64_t *)&qword_267C96FD0, (uint64_t *)&unk_267C96DD0);
  sub_21CB88A60();
  MEMORY[0x21D4B5A20](0, v15, v11, v17);
  _Block_release(v17);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  return swift_release();
}

uint64_t sub_21CA0CD94(uint64_t a1)
{
  uint64_t result = sub_21CB88910();
  if (v7 == 1)
  {
    if (MEMORY[0x21D4B6C80](a1 + 32))
    {
      uint64_t v3 = *(void *)(a1 + 40);
      uint64_t ObjectType = swift_getObjectType();
      sub_21CA57E34(&qword_267C94EC0);
      sub_21CB88910();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 72))(v7, ObjectType, v3);
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
    }
    uint64_t result = MEMORY[0x21D4B6C80](a1 + 32);
    if (result)
    {
      uint64_t v5 = *(void *)(a1 + 40);
      uint64_t v6 = swift_getObjectType();
      sub_21CA57E34(&qword_267C95D50);
      sub_21CB88910();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v5 + 56))(v7, 0, v6, v5);
      swift_bridgeObjectRelease();
      return swift_unknownObjectRelease();
    }
  }
  return result;
}

uint64_t sub_21CA0CF38(uint64_t a1)
{
  v2[5] = a1;
  v2[6] = v1;
  sub_21CA57E34(&qword_267C95028);
  v2[7] = swift_task_alloc();
  sub_21CA57E34((uint64_t *)&unk_267C951B0);
  v2[8] = swift_task_alloc();
  v2[9] = swift_task_alloc();
  v2[10] = *(void *)(type metadata accessor for FMFFriend() - 8);
  v2[11] = swift_task_alloc();
  uint64_t v3 = sub_21CB87840();
  v2[12] = v3;
  v2[13] = *(void *)(v3 - 8);
  v2[14] = swift_task_alloc();
  uint64_t v4 = sub_21CB87870();
  v2[15] = v4;
  v2[16] = *(void *)(v4 - 8);
  v2[17] = swift_task_alloc();
  sub_21CB878E0();
  v2[18] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_21CA0C3D4, v1, 0);
}

uint64_t sub_21CA0D148(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46)
{
  if (result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_21CA59D84(a10, a11, a12);
    sub_21CA2D658(a46);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_21CA0D2BC()
{
  uint64_t v1 = v0;
  if (qword_267C94990 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_21CB880A0();
  sub_21CA4CC18(v2, (uint64_t)qword_267CA5368);
  swift_retain_n();
  uint64_t v3 = sub_21CB88070();
  os_log_type_t v4 = sub_21CB88880();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v6 = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136315138;
    int v7 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC7FMFCore20FMFRefreshController_isRefreshing);
    uint64_t v10 = v6;
    if (v7) {
      uint64_t v8 = 1702195828;
    }
    else {
      uint64_t v8 = 0x65736C6166;
    }
    if (v7) {
      unint64_t v9 = 0xE400000000000000;
    }
    else {
      unint64_t v9 = 0xE500000000000000;
    }
    sub_21CA4E450(v8, v9, &v10);
    sub_21CB889C0();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_21CA00000, v3, v4, "FMFRefreshController: auto refreshing set to: %s", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x21D4B6B70](v6, -1, -1);
    MEMORY[0x21D4B6B70](v5, -1, -1);
  }
  else
  {

    swift_release_n();
  }
}

uint64_t sub_21CA0D490(uint64_t a1, void *a2, uint64_t a3)
{
  if (qword_267C94990 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_21CB880A0();
  sub_21CA4CC18(v6, (uint64_t)qword_267CA5368);
  int v7 = sub_21CB88070();
  os_log_type_t v8 = sub_21CB88880();
  if (os_log_type_enabled(v7, v8))
  {
    unint64_t v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v9 = 0;
    _os_log_impl(&dword_21CA00000, v7, v8, "FMFRefreshController: initClientRequest completed", v9, 2u);
    MEMORY[0x21D4B6B70](v9, -1, -1);
  }

  if (a2 || !a1)
  {
    id v14 = a2;
    id v15 = a2;
    uint64_t v16 = sub_21CB88070();
    os_log_type_t v17 = sub_21CB88860();
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v18 = (uint8_t *)swift_slowAlloc();
      uint64_t v19 = swift_slowAlloc();
      uint64_t v23 = v19;
      *(_DWORD *)uint64_t v18 = 136315138;
      id v20 = a2;
      sub_21CA57E34(&qword_267C975A0);
      uint64_t v21 = sub_21CB88310();
      sub_21CA4E450(v21, v22, &v23);
      sub_21CB889C0();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_21CA00000, v16, v17, "FMFRefreshController: initClient completed with error: %s", v18, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x21D4B6B70](v19, -1, -1);
      MEMORY[0x21D4B6B70](v18, -1, -1);
    }
    else
    {
    }
    uint64_t result = MEMORY[0x21D4B6C80](a3 + 40);
    if (result)
    {
      sub_21CB1448C(a2);
      uint64_t result = swift_unknownObjectRelease();
    }
  }
  else
  {
    *(unsigned char *)(a3 + OBJC_IVAR____TtC7FMFCore20FMFRefreshController_initializedOnce) = 1;
    swift_retain();
    uint64_t v10 = sub_21CB88070();
    os_log_type_t v11 = sub_21CB88880();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v12 = 0;
      _os_log_impl(&dword_21CA00000, v10, v11, "FMFRefreshController: received snapshot initClient response", v12, 2u);
      MEMORY[0x21D4B6B70](v12, -1, -1);
    }

    sub_21CA10F08(a1);
    if ((*(unsigned char *)(a3 + OBJC_IVAR____TtC7FMFCore20FMFRefreshController_isSnapshotMode) & 1) == 0) {
      sub_21CA34FE0(0.0);
    }
    uint64_t result = swift_release();
  }
  *(unsigned char *)(a3 + OBJC_IVAR____TtC7FMFCore20FMFRefreshController_initializationInProgress) = 0;
  return result;
}

uint64_t sub_21CA0D7C0(void *a1)
{
  uint64_t v2 = (char *)a1 + OBJC_IVAR____TtC7FMFCore10FMFManager_isInitialized;
  swift_beginAccess();
  char v3 = *v2;
  *uint64_t v2 = 1;
  sub_21CA13710(v3);
  os_log_type_t v4 = (void *)a1[23];
  if (v4)
  {
    uint64_t v5 = qword_267C94990;
    uint64_t v6 = v4;
    if (v5 != -1) {
      swift_once();
    }
    uint64_t v7 = sub_21CB880A0();
    sub_21CA4CC18(v7, (uint64_t)qword_267CA5368);
    os_log_type_t v8 = sub_21CB88070();
    os_log_type_t v9 = sub_21CB88880();
    if (os_log_type_enabled(v8, v9))
    {
      uint64_t v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v10 = 0;
      _os_log_impl(&dword_21CA00000, v8, v9, "FMFMyLocationController: Starting to update my location", v10, 2u);
      MEMORY[0x21D4B6B70](v10, -1, -1);
    }

    objc_msgSend(*(id *)&v6[OBJC_IVAR____TtC7FMFCore23FMFMyLocationController_locationManager], sel_startUpdatingLocation);
  }
  if (*(unsigned char *)(a1[7] + OBJC_IVAR____TtC7FMFCore23FMFManagerConfiguration_useOptimizedFetch) == 1)
  {
    if (qword_267C94990 != -1) {
      swift_once();
    }
    uint64_t v11 = sub_21CB880A0();
    sub_21CA4CC18(v11, (uint64_t)qword_267CA5368);
    uint64_t v12 = sub_21CB88070();
    os_log_type_t v13 = sub_21CB88880();
    if (os_log_type_enabled(v12, v13))
    {
      id v14 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v14 = 0;
      _os_log_impl(&dword_21CA00000, v12, v13, "FMFManager: ingesting friends from fmfd", v14, 2u);
      MEMORY[0x21D4B6B70](v14, -1, -1);
    }

    swift_retain();
    sub_21CA57E34(&qword_267C95D50);
    sub_21CB88910();
    swift_release();
    FMFManager.didReceive(friends:fromServer:)(friends, 1);
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  uint64_t result = MEMORY[0x21D4B6C80](a1 + 4);
  if (result)
  {
    uint64_t v16 = a1[5];
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(void *, uint64_t, uint64_t))(v16 + 16))(a1, ObjectType, v16);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_21CA0DA98(void (*a1)(void), uint64_t a2)
{
  a1(*(void *)(v2 + 16));
  swift_release();

  return MEMORY[0x270FA0238](v2, a2, 7);
}

uint64_t sub_21CA0DAEC()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_21CA0DB2C(void (*a1)(void))
{
  a1(*(void *)(v1 + 16));
  swift_release();

  return MEMORY[0x270FA0238](v1, 40, 7);
}

uint64_t sub_21CA0DB74()
{
  swift_release();
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_21CA0DBB4()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 48) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x270FA0238](v0, v5, v6);
}

uint64_t sub_21CA0DC78()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_21CA0DCB8(void (*a1)(void))
{
  swift_release();
  a1(*(void *)(v1 + 32));

  return MEMORY[0x270FA0238](v1, 40, 7);
}

uint64_t sub_21CA0DD08()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_21CB88100();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15[0] = sub_21CB88150();
  uint64_t v6 = *(void *)(v15[0] - 8);
  MEMORY[0x270FA5388](v15[0]);
  os_log_type_t v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_267C94990 != -1) {
    swift_once();
  }
  uint64_t v9 = sub_21CB880A0();
  sub_21CA4CC18(v9, (uint64_t)qword_267CA5368);
  uint64_t v10 = sub_21CB88070();
  os_log_type_t v11 = sub_21CB88880();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v12 = 0;
    _os_log_impl(&dword_21CA00000, v10, v11, "FMFDataManager: purging old locations", v12, 2u);
    MEMORY[0x21D4B6B70](v12, -1, -1);
  }

  aBlock[4] = sub_21CA65904;
  void aBlock[5] = v1;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_21CA1B084;
  uint64_t aBlock[3] = &unk_26CD6ED70;
  os_log_type_t v13 = _Block_copy(aBlock);
  swift_retain();
  sub_21CB88120();
  v15[1] = MEMORY[0x263F8EE78];
  sub_21CA36540((unint64_t *)&qword_267C96FC0, MEMORY[0x263F8F030]);
  sub_21CA57E34((uint64_t *)&unk_267C96DD0);
  sub_21CA356BC((unint64_t *)&qword_267C96FD0, (uint64_t *)&unk_267C96DD0);
  sub_21CB88A60();
  MEMORY[0x21D4B5A20](0, v8, v5, v13);
  _Block_release(v13);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  (*(void (**)(char *, void))(v6 + 8))(v8, v15[0]);
  return swift_release();
}

uint64_t sub_21CA0E060()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_21CB88100();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15[0] = sub_21CB88150();
  uint64_t v6 = *(void *)(v15[0] - 8);
  MEMORY[0x270FA5388](v15[0]);
  os_log_type_t v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_267C94990 != -1) {
    swift_once();
  }
  uint64_t v9 = sub_21CB880A0();
  sub_21CA4CC18(v9, (uint64_t)qword_267CA5368);
  uint64_t v10 = sub_21CB88070();
  os_log_type_t v11 = sub_21CB88880();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v12 = 0;
    _os_log_impl(&dword_21CA00000, v10, v11, "FMFManager: didInitialize", v12, 2u);
    MEMORY[0x21D4B6B70](v12, -1, -1);
  }

  aBlock[4] = sub_21CA664BC;
  void aBlock[5] = v1;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_21CA1B084;
  uint64_t aBlock[3] = &unk_26CD6E030;
  os_log_type_t v13 = _Block_copy(aBlock);
  swift_retain();
  sub_21CB88120();
  v15[1] = MEMORY[0x263F8EE78];
  sub_21CA5DEAC((unint64_t *)&qword_267C96FC0, MEMORY[0x263F8F030]);
  sub_21CA57E34((uint64_t *)&unk_267C96DD0);
  sub_21CA356BC((unint64_t *)&qword_267C96FD0, (uint64_t *)&unk_267C96DD0);
  sub_21CB88A60();
  MEMORY[0x21D4B5A20](0, v8, v5, v13);
  _Block_release(v13);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  (*(void (**)(char *, void))(v6 + 8))(v8, v15[0]);
  return swift_release();
}

uint64_t initializeWithCopy for FMFMyInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void sub_21CA0E428(int a1)
{
  uint64_t v2 = v1;
  switch(a1)
  {
    case 0:
      if (qword_267C94990 != -1) {
        swift_once();
      }
      uint64_t v12 = sub_21CB880A0();
      sub_21CA4CC18(v12, (uint64_t)qword_267CA5368);
      os_log_type_t v8 = sub_21CB88070();
      os_log_type_t v13 = sub_21CB88880();
      if (!os_log_type_enabled(v8, v13)) {
        goto LABEL_16;
      }
      id v14 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v14 = 0;
      _os_log_impl(&dword_21CA00000, v8, v13, "FMFMyLocationController: location manager didChangeAuthorization: NOT DETERMINED", v14, 2u);
      os_log_type_t v11 = v14;
      goto LABEL_15;
    case 1:
      if (qword_267C94990 != -1) {
        swift_once();
      }
      uint64_t v15 = sub_21CB880A0();
      sub_21CA4CC18(v15, (uint64_t)qword_267CA5368);
      uint64_t v16 = sub_21CB88070();
      os_log_type_t v17 = sub_21CB88880();
      if (!os_log_type_enabled(v16, v17)) {
        goto LABEL_26;
      }
      uint64_t v18 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v18 = 0;
      uint64_t v19 = "FMFMyLocationController: location manager didChangeAuthorization: RESTRICTED";
      break;
    case 2:
      if (qword_267C94990 != -1) {
        swift_once();
      }
      uint64_t v20 = sub_21CB880A0();
      sub_21CA4CC18(v20, (uint64_t)qword_267CA5368);
      uint64_t v16 = sub_21CB88070();
      os_log_type_t v17 = sub_21CB88880();
      if (!os_log_type_enabled(v16, v17)) {
        goto LABEL_26;
      }
      uint64_t v18 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v18 = 0;
      uint64_t v19 = "FMFMyLocationController: location manager didChangeAuthorization: DENIED";
      break;
    case 3:
    case 4:
      if (qword_267C94990 != -1) {
        swift_once();
      }
      uint64_t v3 = sub_21CB880A0();
      sub_21CA4CC18(v3, (uint64_t)qword_267CA5368);
      uint64_t v4 = sub_21CB88070();
      os_log_type_t v5 = sub_21CB88880();
      if (os_log_type_enabled(v4, v5))
      {
        uint64_t v6 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v6 = 0;
        _os_log_impl(&dword_21CA00000, v4, v5, "FMFMyLocationController: location manager didChangeAuthorization: AUTHORIZED", v6, 2u);
        MEMORY[0x21D4B6B70](v6, -1, -1);
      }

      objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtC7FMFCore23FMFMyLocationController_locationManager), sel_startUpdatingLocation);
      goto LABEL_27;
    default:
      if (qword_267C94990 != -1) {
        swift_once();
      }
      uint64_t v7 = sub_21CB880A0();
      sub_21CA4CC18(v7, (uint64_t)qword_267CA5368);
      os_log_type_t v8 = sub_21CB88070();
      os_log_type_t v9 = sub_21CB88880();
      if (os_log_type_enabled(v8, v9))
      {
        uint64_t v10 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)uint64_t v10 = 67109120;
        sub_21CB889C0();
        _os_log_impl(&dword_21CA00000, v8, v9, "FMFMyLocationController: location manager didChangeAuthorization: UNKNOWN: %d", v10, 8u);
        os_log_type_t v11 = v10;
LABEL_15:
        MEMORY[0x21D4B6B70](v11, -1, -1);
      }
LABEL_16:

      goto LABEL_27;
  }
  _os_log_impl(&dword_21CA00000, v16, v17, v19, v18, 2u);
  MEMORY[0x21D4B6B70](v18, -1, -1);
LABEL_26:

  sub_21CB32D90();
LABEL_27:
  uint64_t v21 = self;
  BOOL v22 = objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtC7FMFCore23FMFMyLocationController_locationManager), sel_accuracyAuthorization) != 0;
  uint64_t v23 = (void *)sub_21CB882C0();
  uint64_t v24 = (void *)sub_21CB882C0();
  objc_msgSend(v21, sel_setBool_forKey_inDomain_, v22, v23, v24);
}

uint64_t sub_21CA0E8D0(uint64_t a1)
{
  v2[7] = a1;
  v2[8] = v1;
  sub_21CA57E34(&qword_267C95028);
  v2[9] = swift_task_alloc();
  sub_21CA57E34((uint64_t *)&unk_267C951B0);
  v2[10] = swift_task_alloc();
  v2[11] = sub_21CA57E34(&qword_267C957C8);
  v2[12] = swift_task_alloc();
  uint64_t v3 = *(void *)(sub_21CA57E34(&qword_267C957D0) - 8);
  v2[13] = v3;
  v2[14] = *(void *)(v3 + 64);
  v2[15] = swift_task_alloc();
  v2[16] = swift_task_alloc();
  uint64_t v4 = sub_21CB87840();
  v2[17] = v4;
  v2[18] = *(void *)(v4 - 8);
  v2[19] = swift_task_alloc();
  v2[20] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for FMFFriend();
  v2[21] = v5;
  v2[22] = *(void *)(v5 - 8);
  v2[23] = swift_task_alloc();
  v2[24] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_21CA40728, v1, 0);
}

uint64_t sub_21CA0EB14(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 80);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v17 = *(void *)(v3 + 64);
  uint64_t v4 = MEMORY[0x270FA5388](a1);
  uint64_t v6 = (char *)&v16 - v5;
  uint64_t v18 = v4;
  sub_21CB885E0();
  swift_bridgeObjectRetain();
  swift_getWitnessTable();
  uint64_t v7 = sub_21CB88BF0();
  if (qword_267C94990 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_21CB880A0();
  sub_21CA4CC18(v8, (uint64_t)qword_267CA5368);
  swift_bridgeObjectRetain();
  os_log_type_t v9 = sub_21CB88070();
  os_log_type_t v10 = sub_21CB88880();
  if (os_log_type_enabled(v9, v10))
  {
    os_log_type_t v11 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)os_log_type_t v11 = 134217984;
    uint64_t v18 = MEMORY[0x21D4B56B0](v7, v2);
    sub_21CB889C0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_21CA00000, v9, v10, "FMImageCache: Preloading data for %ld requests.", v11, 0xCu);
    MEMORY[0x21D4B6B70](v11, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease();
  }
  if (!MEMORY[0x21D4B56D0](v7, v2)) {
    return swift_bridgeObjectRelease();
  }
  for (uint64_t i = 0; ; ++i)
  {
    char v13 = sub_21CB88590();
    sub_21CB88550();
    if (v13)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v6, v7+ ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))+ *(void *)(v3 + 72) * i, v2);
      uint64_t v14 = i + 1;
      if (__OFADD__(i, 1)) {
        goto LABEL_15;
      }
      goto LABEL_10;
    }
    uint64_t result = sub_21CB88B90();
    if (v17 != 8) {
      break;
    }
    uint64_t v18 = result;
    (*(void (**)(char *, uint64_t *, uint64_t))(v3 + 16))(v6, &v18, v2);
    swift_unknownObjectRelease();
    uint64_t v14 = i + 1;
    if (__OFADD__(i, 1))
    {
LABEL_15:
      __break(1u);
      return swift_bridgeObjectRelease();
    }
LABEL_10:
    sub_21CB72C00((uint64_t)v6, 0, 0);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
    if (v14 == MEMORY[0x21D4B56D0](v7, v2)) {
      return swift_bridgeObjectRelease();
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_21CA0EE7C()
{
  uint64_t v1 = v0;
  if (qword_267C94990 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_21CB880A0();
  sub_21CA4CC18(v2, (uint64_t)qword_267CA5368);
  uint64_t v3 = sub_21CB88070();
  os_log_type_t v4 = sub_21CB88880();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl(&dword_21CA00000, v3, v4, "FMFRefreshController: Start refreshing.", v5, 2u);
    MEMORY[0x21D4B6B70](v5, -1, -1);
  }

  uint64_t v6 = *(NSObject **)(v1 + OBJC_IVAR____TtC7FMFCore20FMFRefreshController_refreshQueue);
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = sub_21CA63F68;
  *(void *)(v7 + 24) = v1;
  v10[4] = sub_21CA18880;
  v10[5] = v7;
  v10[0] = MEMORY[0x263EF8330];
  v10[1] = 1107296256;
  v10[2] = sub_21CA18830;
  v10[3] = &unk_26CD6A6B8;
  uint64_t v8 = _Block_copy(v10);
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v6, v8);
  _Block_release(v8);
  LOBYTE(v6) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (v6) {
    __break(1u);
  }
  return result;
}

uint64_t sub_21CA0F070()
{
  uint64_t v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC7FMFCore22FMAPSConnectionHandler_publicAPSToken);
  if (*(void *)(v0 + OBJC_IVAR____TtC7FMFCore22FMAPSConnectionHandler_publicAPSToken + 8))
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = (void *)sub_21CB882C0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v3 = self;
  os_log_type_t v4 = (void *)sub_21CB882C0();
  uint64_t v5 = (void *)sub_21CB882C0();
  objc_msgSend(v3, sel_setString_forKey_inDomain_, v2, v4, v5);

  uint64_t v6 = v0 + OBJC_IVAR____TtC7FMFCore22FMAPSConnectionHandler_delegate;
  swift_beginAccess();
  uint64_t result = MEMORY[0x21D4B6C80](v6);
  if (result)
  {
    uint64_t v8 = *(void *)(v6 + 8);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v10 = *(void *)(v0 + OBJC_IVAR____TtC7FMFCore22FMAPSConnectionHandler_topicAPSToken);
    uint64_t v11 = *(void *)(v0 + OBJC_IVAR____TtC7FMFCore22FMAPSConnectionHandler_topicAPSToken + 8);
    uint64_t v12 = *v1;
    uint64_t v13 = v1[1];
    uint64_t v14 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v14(v0, v10, v11, v12, v13, ObjectType, v8);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_unknownObjectRelease();
  }
  return result;
}

void *sub_21CA0F218(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_21CA57E34(&qword_267C96B58);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = a1[3];
  uint64_t v28 = a1;
  sub_21CA2B2CC(a1, v9);
  sub_21CA63C7C();
  sub_21CB890B0();
  if (v2)
  {
    uint64_t v13 = v3;
    uint64_t v14 = (uint64_t)v28;
    type metadata accessor for FMFMyLocationResponse();
    swift_deallocPartialClassInstance();
    uint64_t v15 = v14;
  }
  else
  {
    uint64_t v10 = v6;
    char v33 = 0;
    sub_21CA2B730();
    sub_21CB88E20();
    memcpy(v3 + 2, v31, 0x161uLL);
    LOBYTE(v30[0]) = 1;
    sub_21CB88E00();
    v3[47] = v11;
    LOBYTE(v30[0]) = 2;
    sub_21CB88E00();
    uint64_t v27 = v5;
    v3[48] = v12;
    uint64_t v13 = v3;
    if (qword_267C94990 != -1) {
      swift_once();
    }
    uint64_t v17 = sub_21CB880A0();
    sub_21CA4CC18(v17, (uint64_t)qword_267CA5368);
    swift_retain_n();
    uint64_t v18 = sub_21CB88070();
    os_log_type_t v19 = sub_21CB88880();
    int v20 = v19;
    if (os_log_type_enabled(v18, v19))
    {
      int v32 = v20;
      uint64_t v21 = (uint8_t *)swift_slowAlloc();
      uint64_t v26 = swift_slowAlloc();
      v30[0] = v26;
      *(_DWORD *)uint64_t v21 = 136315138;
      uint64_t v25 = v21 + 4;
      uint64_t v22 = sub_21CA18630();
      uint64_t v29 = sub_21CA4E450(v22, v23, v30);
      sub_21CB889C0();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_21CA00000, v18, (os_log_type_t)v32, "FMFMyLocationResponse: initialized with coder %s", v21, 0xCu);
      uint64_t v24 = v26;
      swift_arrayDestroy();
      MEMORY[0x21D4B6B70](v24, -1, -1);
      MEMORY[0x21D4B6B70](v21, -1, -1);
    }
    else
    {
      swift_release_n();
    }

    (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v27);
    uint64_t v15 = (uint64_t)v28;
  }
  sub_21CA2B0D0(v15);
  return v13;
}

uint64_t sub_21CA0F5E8(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_21CB88100();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = sub_21CB88150();
  uint64_t v8 = *(void *)(v26 - 8);
  MEMORY[0x270FA5388](v26);
  uint64_t v25 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_267C94990 != -1) {
    swift_once();
  }
  uint64_t v10 = sub_21CB880A0();
  sub_21CA4CC18(v10, (uint64_t)qword_267CA5368);
  swift_bridgeObjectRetain();
  uint64_t v11 = sub_21CB88070();
  os_log_type_t v12 = sub_21CB88850();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v22 = v2;
    uint64_t v13 = (uint8_t *)swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    uint64_t v23 = v8;
    uint64_t v15 = (void *)v14;
    *(_DWORD *)uint64_t v13 = 138412290;
    uint64_t v24 = v7;
    uint64_t v16 = sub_21CB881E0();
    aBlock[0] = v16;
    uint64_t v7 = v24;
    sub_21CB889C0();
    *uint64_t v15 = v16;
    uint64_t v2 = v22;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_21CA00000, v11, v12, "FMFRefreshController: connectionHandler didReceive message: %@", v13, 0xCu);
    sub_21CA57E34(&qword_267C95020);
    swift_arrayDestroy();
    uint64_t v17 = v15;
    uint64_t v8 = v23;
    MEMORY[0x21D4B6B70](v17, -1, -1);
    MEMORY[0x21D4B6B70](v13, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease();
  }
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = a1;
  *(void *)(v18 + 24) = v2;
  aBlock[4] = sub_21CA63F60;
  void aBlock[5] = v18;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_21CA1B084;
  uint64_t aBlock[3] = &unk_26CD6A320;
  os_log_type_t v19 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  swift_retain();
  int v20 = v25;
  sub_21CB88120();
  uint64_t v27 = MEMORY[0x263F8EE78];
  sub_21CA364B0((unint64_t *)&qword_267C96FC0, MEMORY[0x263F8F030]);
  sub_21CA57E34((uint64_t *)&unk_267C96DD0);
  sub_21CA3566C((unint64_t *)&qword_267C96FD0, (uint64_t *)&unk_267C96DD0);
  sub_21CB88A60();
  MEMORY[0x21D4B5A20](0, v20, v7, v19);
  _Block_release(v19);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v20, v26);
  return swift_release();
}

uint64_t sub_21CA0FA48()
{
  uint64_t v1 = v0[12];
  uint64_t v2 = v0[13];
  uint64_t v3 = v0[6];
  (*(void (**)(uint64_t, void, void))(v0[11] + 16))(v1, v0[4], v0[10]);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v1, 1, v3) == 1)
  {
    uint64_t v4 = v0[8];
    (*(void (**)(void, void))(v0[11] + 8))(v0[12], v0[10]);
    (*(void (**)(void, uint64_t, uint64_t, void))(v4 + 56))(v0[2], 1, 1, v0[7]);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v5 = (uint64_t (*)(void))v0[1];
    return v5();
  }
  else
  {
    uint64_t v7 = v0[9];
    uint64_t v9 = v0[3];
    uint64_t v8 = v0[4];
    (*(void (**)(void, void, void))(v0[13] + 32))(v0[14], v0[12], v0[6]);
    sub_21CA0FC10(v9, v7);
    uint64_t v10 = v8 + *(int *)(v9 + 40);
    uint64_t v11 = (void *)swift_task_alloc();
    v0[15] = v11;
    *uint64_t v11 = v0;
    v11[1] = sub_21CA647E8;
    uint64_t v12 = v0[9];
    uint64_t v14 = v0[5];
    uint64_t v13 = v0[6];
    return MEMORY[0x270FA2380](v12, v10, v13, v14);
  }
}

uint64_t sub_21CA0FC10@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v53 = a2;
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v3 = *(char **)(a1 + 24);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v50 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v51 = AssociatedTypeWitness;
  uint64_t v6 = MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v49 = (char *)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  v52 = (char *)&v47 - v9;
  MEMORY[0x270FA5388](v8);
  uint64_t v48 = (char *)&v47 - v10;
  uint64_t v11 = swift_getAssociatedTypeWitness();
  uint64_t v12 = sub_21CB889A0();
  uint64_t v54 = *(void *)(v12 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v47 - v14;
  uint64_t v16 = *(void *)(v11 - 8);
  uint64_t v17 = MEMORY[0x270FA5388](v13);
  v59 = (char *)&v47 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  uint64_t v21 = (char *)&v47 - v20;
  uint64_t v22 = MEMORY[0x270FA5388](v19);
  uint64_t v24 = (char *)&v47 - v23;
  MEMORY[0x270FA5388](v22);
  uint64_t v57 = v4;
  v58 = v3;
  uint64_t v26 = (char *)&v47 - v25;
  sub_21CB88FB0();
  uint64_t v56 = a1;
  uint64_t v27 = *(int *)(a1 + 44);
  uint64_t v29 = v54;
  uint64_t v28 = v55;
  (*(void (**)(char *, uint64_t, uint64_t))(v54 + 16))(v15, v55 + v27, v12);
  uint64_t v30 = *(void (**)(char *, char *, uint64_t))(v16 + 16);
  v60 = v26;
  v30(v21, v26, v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v15, 1, v11) == 1)
  {
    unint64_t v31 = *(void (**)(char *, char *, uint64_t))(v16 + 32);
    v31(v24, v21, v11);
    (*(void (**)(char *, uint64_t))(v29 + 8))(v15, v12);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v16 + 8))(v21, v11);
    unint64_t v31 = *(void (**)(char *, char *, uint64_t))(v16 + 32);
    v31(v24, v15, v11);
  }
  uint64_t v32 = v28 + *(int *)(v56 + 36);
  swift_getAssociatedConformanceWitness();
  char v33 = v59;
  sub_21CB88C80();
  if ((sub_21CB882A0() & 1) == 0)
  {
    uint64_t v46 = *(void (**)(char *, uint64_t))(v16 + 8);
    v46(v24, v11);
    v46(v60, v11);
    return ((uint64_t (*)(uint64_t, char *, uint64_t))v31)(v53, v33, v11);
  }
  v58 = v24;
  uint64_t v35 = v50;
  uint64_t v34 = v51;
  (*(void (**)(char *, uint64_t, uint64_t))(v50 + 16))(v52, v32, v51);
  unsigned int v36 = v49;
  sub_21CB88C90();
  swift_getAssociatedConformanceWitness();
  sub_21CB88CD0();
  double v38 = v37;
  int v39 = *(uint64_t (**)(char *, uint64_t))(v35 + 8);
  uint64_t result = v39(v36, v34);
  double v41 = ceil(v38);
  if ((~*(void *)&v41 & 0x7FF0000000000000) != 0)
  {
    if (v41 > -9.22337204e18)
    {
      if (v41 < 9.22337204e18)
      {
        char v42 = v48;
        unsigned int v43 = v52;
        sub_21CB88CE0();
        v39(v43, v34);
        v44 = v58;
        sub_21CB88C80();
        v39(v42, v34);
        v45 = *(void (**)(char *, uint64_t))(v16 + 8);
        v45(v59, v11);
        v45(v44, v11);
        return ((uint64_t (*)(char *, uint64_t))v45)(v60, v11);
      }
      goto LABEL_12;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
LABEL_12:
  __break(1u);
  return result;
}

uint64_t sub_21CA101E8(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  uint64_t v4 = type metadata accessor for FMFFriend();
  v3[5] = v4;
  v3[6] = *(void *)(v4 - 8);
  v3[7] = swift_task_alloc();
  v3[8] = swift_task_alloc();
  v3[9] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_21CA27E64, v2, 0);
}

uint64_t sub_21CA102C8(uint64_t a1)
{
  uint64_t v3 = sub_21CA57E34(&qword_267C95848);
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (uint64_t *)((char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_21CA24E80((uint64_t)v1, (uint64_t)v5, &qword_267C95848);
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 1:
      uint64_t v8 = *v5;
      uint64_t v7 = v5[1];
      uint64_t v9 = (void *)v5[2];
      if (v5[4])
      {
        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v11 = v5[3];
        sub_21CA1B88C((uint64_t)v1, &qword_267C95848);
        swift_storeEnumTagMultiPayload();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v9 = sub_21CA037E4(0, v9[2] + 1, 1, v9);
        }
        unint64_t v12 = v9[2];
        unint64_t v13 = v9[3];
        unint64_t v14 = v12 + 1;
        if (v12 >= v13 >> 1)
        {
          uint64_t v15 = v9;
          unint64_t v16 = v9[2];
          uint64_t v17 = sub_21CA037E4((void *)(v13 > 1), v12 + 1, 1, v15);
          unint64_t v12 = v16;
          uint64_t v9 = v17;
        }
        v9[2] = v14;
        v9[v12 + 4] = a1;
        sub_21CA1B88C((uint64_t)v1, &qword_267C95848);
        *uint64_t v1 = v8;
        v1[1] = v7;
        v1[2] = v9;
        v1[3] = v11;
        v1[4] = 0;
        swift_storeEnumTagMultiPayload();
        return 0;
      }
      return a1;
    case 2:
      uint64_t v10 = (void *)v5[1];
      swift_release();

      goto LABEL_5;
    case 3:
LABEL_5:
      sub_21CB88600();
      sub_21CA07D00((unint64_t *)&qword_267C95840, MEMORY[0x263F8F488]);
      swift_allocError();
      sub_21CB881C0();
      return a1;
    case 4:
      goto LABEL_13;
    default:
      __break(1u);
LABEL_13:
      __break(1u);
      return result;
  }
}

uint64_t sub_21CA10514(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_21CA57E34(&qword_267C96F10);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v29[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_267C94990 != -1) {
    swift_once();
  }
  uint64_t v9 = sub_21CB880A0();
  sub_21CA4CC18(v9, (uint64_t)qword_267CA5368);
  uint64_t v10 = sub_21CB88070();
  os_log_type_t v11 = sub_21CB88880();
  if (os_log_type_enabled(v10, v11))
  {
    unint64_t v12 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v12 = 0;
    _os_log_impl(&dword_21CA00000, v10, v11, "FMFRefreshController: sending refreshClient request…", v12, 2u);
    MEMORY[0x21D4B6B70](v12, -1, -1);
  }

  uint64_t v13 = a1 + OBJC_IVAR____TtC7FMFCore20FMFRefreshController_selectedFriend;
  char v14 = *(unsigned char *)(a1 + OBJC_IVAR____TtC7FMFCore20FMFRefreshController_refreshReason);
  swift_beginAccess();
  sub_21CA05C10(v13, (uint64_t)v8);
  uint64_t v15 = (uint64_t *)(a1 + OBJC_IVAR____TtC7FMFCore20FMFRefreshController_tapContexts);
  swift_beginAccess();
  uint64_t v16 = *v15;
  uint64_t v17 = (uint64_t *)(a1 + OBJC_IVAR____TtC7FMFCore20FMFRefreshController_liveSessionStatistics);
  swift_beginAccess();
  uint64_t v18 = *v17;
  uint64_t v19 = (uint64_t *)(a1 + OBJC_IVAR____TtC7FMFCore20FMFRefreshController_legacyFallbackData);
  swift_beginAccess();
  uint64_t v20 = *v19;
  v29[0] = MEMORY[0x263F8EE78];
  v29[1] = MEMORY[0x263F8EE78];
  v29[2] = MEMORY[0x263F8EE78];
  type metadata accessor for FMFInitRefreshClientRequest();
  swift_allocObject();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v21 = sub_21CA081B8(0, 0, v14, (uint64_t)v8, v16, v18, v20, (uint64_t)v29);
  uint64_t v22 = *(void *)(a1 + OBJC_IVAR____TtC7FMFCore20FMFRefreshController_interactionController + 24);
  uint64_t v23 = *(void *)(a1 + OBJC_IVAR____TtC7FMFCore20FMFRefreshController_interactionController + 32);
  sub_21CA2B2CC((void *)(a1 + OBJC_IVAR____TtC7FMFCore20FMFRefreshController_interactionController), v22);
  uint64_t v24 = (void *)swift_allocObject();
  v24[2] = a2;
  v24[3] = a3;
  v24[4] = a1;
  uint64_t v25 = *(void (**)(void *, uint64_t (*)(uint64_t, void *), void *, uint64_t, uint64_t, uint64_t))(v23 + 64);
  uint64_t refreshed = type metadata accessor for FMFInitRefreshClientResponse();
  swift_retain();
  swift_retain();
  v25(v21, sub_21CA63F10, v24, refreshed, v22, v23);
  swift_release();
  return swift_release();
}

uint64_t sub_21CA1081C(unsigned char *a1, uint64_t a2, uint64_t a3)
{
  if (*a1) {
    return 0;
  }
  uint64_t v6 = self;
  id v7 = objc_msgSend(v6, sel_standardUserDefaults);
  uint64_t v8 = (void *)sub_21CB882C0();
  id v9 = objc_msgSend(v7, sel_objectForKey_, v8);

  if (v9)
  {
    sub_21CB88A40();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v21, 0, sizeof(v21));
  }
  sub_21CA26A4C((uint64_t)v21, (uint64_t)v22, &qword_267C955B8);
  if (!v23)
  {
    sub_21CA1B88C((uint64_t)v22, &qword_267C955B8);
LABEL_13:
    if (!a3) {
      return 1;
    }
LABEL_14:
    id v10 = objc_msgSend(v6, sel_standardUserDefaults);
    os_log_type_t v11 = (void *)sub_21CB882C0();
    unint64_t v12 = (void *)sub_21CB882C0();
    objc_msgSend(v10, sel_setObject_forKey_, v11, v12);

    id v13 = objc_msgSend(v6, sel_standardUserDefaults);
    objc_msgSend(v13, sel_synchronize);

    return 1;
  }
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_13;
  }
  if (!a3)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  if (v19 != a2 || v20 != a3)
  {
    char v14 = sub_21CB88F50();
    swift_bridgeObjectRelease();
    if (v14) {
      goto LABEL_18;
    }
    goto LABEL_14;
  }
  swift_bridgeObjectRelease();
LABEL_18:
  if (qword_267C94990 != -1) {
    swift_once();
  }
  uint64_t v15 = sub_21CB880A0();
  sub_21CA4CC18(v15, (uint64_t)qword_267CA5368);
  uint64_t v16 = sub_21CB88070();
  os_log_type_t v17 = sub_21CB88880();
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v18 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v18 = 0;
    _os_log_impl(&dword_21CA00000, v16, v17, "Location alert has already been displayed. Not displaying again.", v18, 2u);
    MEMORY[0x21D4B6B70](v18, -1, -1);
  }

  return 0;
}

void *sub_21CA10AFC(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v26 = a3;
  uint64_t v27 = a5;
  unint64_t v23 = a4;
  uint64_t v24 = a1;
  uint64_t v25 = a2;
  uint64_t v7 = sub_21CB888F0();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  id v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_21CB888B0();
  MEMORY[0x270FA5388](v11);
  uint64_t v12 = sub_21CB88150();
  MEMORY[0x270FA5388](v12 - 8);
  unint64_t v22 = sub_21CA182AC();
  sub_21CB88120();
  uint64_t v29 = MEMORY[0x263F8EE78];
  sub_21CA36540((unint64_t *)&qword_267C96F60, MEMORY[0x263F8F0F8]);
  sub_21CA57E34((uint64_t *)&unk_267C96F90);
  sub_21CA356BC((unint64_t *)&qword_267C96F70, (uint64_t *)&unk_267C96F90);
  sub_21CB88A60();
  (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, *MEMORY[0x263F8F130], v7);
  v5[2] = sub_21CB88930();
  if (qword_267C94990 != -1) {
    swift_once();
  }
  uint64_t v13 = sub_21CB880A0();
  sub_21CA4CC18(v13, (uint64_t)qword_267CA5368);
  unint64_t v14 = v23;
  swift_bridgeObjectRetain_n();
  uint64_t v15 = sub_21CB88070();
  os_log_type_t v16 = sub_21CB88880();
  if (os_log_type_enabled(v15, v16))
  {
    os_log_type_t v17 = (uint8_t *)swift_slowAlloc();
    uint64_t v18 = swift_slowAlloc();
    uint64_t v29 = v18;
    *(_DWORD *)os_log_type_t v17 = 136315138;
    swift_bridgeObjectRetain();
    uint64_t v19 = v26;
    uint64_t v28 = sub_21CA4E450(v26, v14, &v29);
    sub_21CB889C0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_21CA00000, v15, v16, "FMDiskIO: init with file name: %s", v17, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x21D4B6B70](v18, -1, -1);
    MEMORY[0x21D4B6B70](v17, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    uint64_t v19 = v26;
  }
  uint64_t v20 = v25;
  v6[3] = v24;
  v6[4] = v20;
  v6[5] = v19;
  v6[6] = v14;
  sub_21CA26A4C(v27, (uint64_t)v6 + *(void *)(*v6 + 128), &qword_267C97230);
  return v6;
}

double sub_21CA10F08(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v3 = *(void *)(a1 + 16);
  if (*(void *)(v3 + 16))
  {
    unint64_t v4 = sub_21CA5BCE0(0xD000000000000017, 0x800000021CB946D0);
    if (v6)
    {
      sub_21CA4E524(*(void *)(v3 + 56) + 32 * v4, (uint64_t)v12);
      if (swift_dynamicCast())
      {
        double result = (double)v11;
        *(double *)(v2 + OBJC_IVAR____TtC7FMFCore20FMFRefreshController_minCallbackInterval) = (double)v11;
      }
    }
  }
  if (*(void *)(v3 + 16))
  {
    unint64_t v7 = sub_21CA5BCE0(0xD000000000000017, 0x800000021CB946F0);
    if (v8)
    {
      sub_21CA4E524(*(void *)(v3 + 56) + 32 * v7, (uint64_t)v12);
      if (swift_dynamicCast())
      {
        double result = (double)v11;
        *(double *)(v2 + OBJC_IVAR____TtC7FMFCore20FMFRefreshController_maxCallbackInterval) = (double)v11;
      }
    }
  }
  if (*(void *)(v3 + 16))
  {
    unint64_t v9 = sub_21CA5BCE0(0xD000000000000014, 0x800000021CB94710);
    if (v10)
    {
      sub_21CA4E524(*(void *)(v3 + 56) + 32 * v9, (uint64_t)v12);
      if (swift_dynamicCast())
      {
        double result = (double)v11;
        *(double *)(v2 + OBJC_IVAR____TtC7FMFCore20FMFRefreshController_callbackInterval) = (double)v11;
      }
    }
  }
  return result;
}

uint64_t sub_21CA1109C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_21CA57E34(&qword_267C95858);
  MEMORY[0x270FA5388](v2 - 8);
  unsigned int v43 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_21CA57E34(&qword_267C95860);
  uint64_t v41 = *(void *)(v4 - 8);
  uint64_t v42 = v4;
  MEMORY[0x270FA5388](v4);
  v40 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = sub_21CA57E34(&qword_267C95820);
  MEMORY[0x270FA5388](v39);
  uint64_t v38 = (uint64_t)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_21CA57E34(&qword_267C957F0);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  char v10 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_21CA57E34(&qword_267C95890);
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  unint64_t v14 = (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_21CA57E34(&qword_267C95868);
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v36 = v15;
  uint64_t v37 = v16;
  MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)&v35 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_21CA57E34(&qword_267C95940);
  uint64_t v20 = v19 - 8;
  MEMORY[0x270FA5388](v19);
  unint64_t v22 = (char *)&v35 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v1, v7);
  uint64_t v23 = sub_21CA57E34(&qword_267C95818);
  sub_21CA356BC(&qword_267C95950, &qword_267C957F0);
  sub_21CB88CC0();
  sub_21CA57E34(&qword_267C95958);
  unint64_t v24 = (*(unsigned __int8 *)(*(void *)(v23 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v23 - 8) + 80);
  uint64_t v25 = swift_allocObject();
  *(_OWORD *)(v25 + 16) = xmmword_21CB8B220;
  uint64_t v26 = sub_21CA57E34(&qword_267C957E0);
  (*(void (**)(unint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v25 + v24, 1, 2, v26);
  uint64_t v27 = v11;
  (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v18, v14, v11);
  uint64_t v28 = v36;
  *(void *)&v18[*(int *)(v36 + 52)] = v25;
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v27);
  uint64_t v29 = sub_21CA57E34(&qword_267C95828);
  sub_21CA24E80(v1 + *(int *)(v29 + 68), v38, &qword_267C95820);
  uint64_t v30 = &v22[*(int *)(v20 + 60)];
  sub_21CA356BC(&qword_267C95968, &qword_267C95820);
  sub_21CB88CC0();
  sub_21CA26A4C((uint64_t)v18, (uint64_t)v22, &qword_267C95868);
  sub_21CA24E80((uint64_t)v22, (uint64_t)v18, &qword_267C95868);
  uint64_t v31 = (uint64_t)v40;
  (*(void (**)(char *, char *, uint64_t))(v41 + 16))(v40, v30, v42);
  uint64_t v32 = (uint64_t)v43;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v37 + 56))(v43, 1, 1, v28);
  sub_21CA57E34(&qword_267C95970);
  swift_allocObject();
  uint64_t v33 = sub_21CA2669C((uint64_t)v18, v31, v32);
  sub_21CA57E34(&qword_267C95978);
  *(void *)(swift_allocObject() + 16) = v33;
  sub_21CA1B88C((uint64_t)v22, &qword_267C95940);
  return *(void *)(v1 + *(int *)(v29 + 72));
}

uint64_t FMFAddress.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = sub_21CA57E34(&qword_267C97B00);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v66 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21CA2B2CC(a1, a1[3]);
  sub_21CA61070();
  sub_21CB890B0();
  if (v2)
  {
    uint64_t v9 = (uint64_t)a1;
  }
  else
  {
    v101 = a1;
    sub_21CA57E34(&qword_267C94E60);
    char v102 = 0;
    sub_21CA4A500((unint64_t *)&qword_267C94E68, &qword_267C94E60);
    sub_21CB88E20();
    uint64_t v99 = v103;
    LOBYTE(v103) = 1;
    uint64_t v10 = sub_21CB88DE0();
    uint64_t v97 = v11;
    uint64_t v98 = v10;
    LOBYTE(v103) = 2;
    uint64_t v12 = sub_21CB88DE0();
    uint64_t v95 = v13;
    uint64_t v96 = v12;
    LOBYTE(v103) = 3;
    uint64_t v14 = sub_21CB88DE0();
    uint64_t v93 = v15;
    uint64_t v94 = v14;
    LOBYTE(v103) = 4;
    uint64_t v16 = sub_21CB88DE0();
    uint64_t v91 = v17;
    uint64_t v92 = v16;
    LOBYTE(v103) = 5;
    uint64_t v18 = sub_21CB88DE0();
    uint64_t v89 = v19;
    uint64_t v90 = v18;
    LOBYTE(v103) = 6;
    uint64_t v20 = sub_21CB88DE0();
    uint64_t v87 = v21;
    uint64_t v88 = v20;
    LOBYTE(v103) = 7;
    uint64_t v22 = sub_21CB88DE0();
    uint64_t v85 = v23;
    uint64_t v86 = v22;
    LOBYTE(v103) = 8;
    uint64_t v24 = sub_21CB88DE0();
    uint64_t v83 = v25;
    uint64_t v84 = v24;
    LOBYTE(v103) = 9;
    uint64_t v26 = sub_21CB88DE0();
    uint64_t v81 = v27;
    uint64_t v82 = v26;
    LOBYTE(v103) = 10;
    uint64_t v28 = sub_21CB88DE0();
    uint64_t v79 = v29;
    uint64_t v80 = v28;
    char v102 = 11;
    sub_21CB88E20();
    uint64_t v67 = v103;
    LOBYTE(v103) = 12;
    uint64_t v30 = sub_21CB88DE0();
    uint64_t v77 = v31;
    uint64_t v78 = v30;
    LOBYTE(v103) = 13;
    uint64_t v32 = sub_21CB88DE0();
    uint64_t v75 = v33;
    uint64_t v76 = v32;
    LOBYTE(v103) = 14;
    uint64_t v34 = sub_21CB88DE0();
    uint64_t v73 = v35;
    uint64_t v74 = v34;
    LOBYTE(v103) = 15;
    uint64_t v36 = sub_21CB88DE0();
    uint64_t v71 = v37;
    uint64_t v72 = v36;
    LOBYTE(v103) = 16;
    uint64_t v38 = sub_21CB88DE0();
    uint64_t v100 = v6;
    uint64_t v69 = v39;
    uint64_t v70 = v38;
    LOBYTE(v103) = 17;
    uint64_t v40 = sub_21CB88DE0();
    uint64_t v42 = v41;
    uint64_t v68 = v40;
    LOBYTE(v103) = 18;
    uint64_t v43 = sub_21CB88DE0();
    uint64_t v45 = v44;
    LOBYTE(v103) = 19;
    uint64_t v46 = sub_21CB88DE0();
    uint64_t v48 = v47;
    (*(void (**)(char *, uint64_t))(v100 + 8))(v8, v5);
    uint64_t v49 = v98;
    *a2 = v99;
    a2[1] = v49;
    uint64_t v50 = v96;
    a2[2] = v97;
    a2[3] = v50;
    uint64_t v51 = v94;
    a2[4] = v95;
    a2[5] = v51;
    uint64_t v52 = v92;
    a2[6] = v93;
    a2[7] = v52;
    uint64_t v53 = v90;
    a2[8] = v91;
    a2[9] = v53;
    uint64_t v54 = v88;
    a2[10] = v89;
    a2[11] = v54;
    uint64_t v55 = v86;
    a2[12] = v87;
    a2[13] = v55;
    uint64_t v56 = v84;
    a2[14] = v85;
    a2[15] = v56;
    uint64_t v57 = v82;
    a2[16] = v83;
    a2[17] = v57;
    uint64_t v58 = v80;
    a2[18] = v81;
    a2[19] = v58;
    uint64_t v59 = v67;
    a2[20] = v79;
    a2[21] = v59;
    uint64_t v60 = v77;
    a2[22] = v78;
    a2[23] = v60;
    uint64_t v61 = v75;
    a2[24] = v76;
    a2[25] = v61;
    uint64_t v62 = v73;
    a2[26] = v74;
    a2[27] = v62;
    uint64_t v63 = v71;
    a2[28] = v72;
    a2[29] = v63;
    uint64_t v64 = v69;
    a2[30] = v70;
    a2[31] = v64;
    a2[32] = v68;
    a2[33] = v42;
    a2[34] = v43;
    a2[35] = v45;
    a2[36] = v46;
    a2[37] = v48;
    uint64_t v9 = (uint64_t)v101;
  }
  return sub_21CA2B0D0(v9);
}

uint64_t sub_21CA11E58()
{
  sub_21CA57E34(&qword_267C957E0);
  sub_21CA356BC(&qword_267C957E8, &qword_267C957C8);
  sub_21CB88EF0();
  uint64_t v1 = v0[15];
  uint64_t v2 = v0[16];
  uint64_t v4 = v0[13];
  uint64_t v3 = v0[14];
  uint64_t v5 = v0[9];
  uint64_t v6 = v0[8];
  uint64_t v7 = sub_21CA57E34(&qword_267C957F0);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v2, 0, 1, v7);
  uint64_t v8 = sub_21CB88640();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v5, 1, 1, v8);
  sub_21CA24E80(v2, v1, &qword_267C957D0);
  uint64_t v9 = sub_21CA07D00(&qword_267C95800, (void (*)(uint64_t))type metadata accessor for FMFSecureLocationController);
  unint64_t v10 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v11 = (v3 + v10 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = v6;
  *(void *)(v12 + 24) = v9;
  sub_21CA26A4C(v1, v12 + v10, &qword_267C957D0);
  *(void *)(v12 + v11) = v6;
  swift_retain_n();
  sub_21CB0A588(v5, (uint64_t)&unk_267C95808, v12);
  swift_release();
  sub_21CA1B88C(v2, &qword_267C957D0);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v13 = (uint64_t (*)(void))v0[1];
  return v13();
}

void sub_21CA12114(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v7 = objc_allocWithZone(MEMORY[0x263F3BA18]);
  uint64_t v8 = (void *)sub_21CB882C0();
  id v9 = objc_msgSend(v7, sel_initWithDescription_andTimeout_, v8, 120.0);

  sub_21CA30F78(a2);
  uint64_t v17 = type metadata accessor for FMFMyLocationRequest();
  uint64_t v18 = MEMORY[0x263F3BA90];
  v16[0] = a2;
  v15[3] = v17;
  v15[4] = sub_21CA36588(&qword_267C97490, (void (*)(uint64_t))type metadata accessor for FMFMyLocationRequest);
  unint64_t v10 = self;
  swift_retain_n();
  id v11 = objc_msgSend(v10, sel_processInfo, a2);
  id v12 = objc_msgSend(v11, sel_processName);

  sub_21CB882F0();
  uint64_t v13 = (void *)swift_allocObject();
  void v13[2] = a3;
  v13[3] = a4;
  v13[4] = v9;
  swift_retain();
  id v14 = v9;
  sub_21CB87780();
  swift_bridgeObjectRelease();
  swift_release();
  sub_21CA2B0D0((uint64_t)v15);
  sub_21CA2B0D0((uint64_t)v16);
  objc_msgSend(v14, sel_wait);
}

uint64_t sub_21CA1230C()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC7FMFCore10FMFManager_isInitialized);
  swift_beginAccess();
  return *v1;
}

id sub_21CA12354(uint64_t a1, unint64_t a2, void *a3, void (*a4)(uint64_t, void *), uint64_t a5, void *a6)
{
  if (a3)
  {
    if (qword_267C94990 != -1) {
      swift_once();
    }
    uint64_t v9 = sub_21CB880A0();
    sub_21CA4CC18(v9, (uint64_t)qword_267CA5368);
    id v10 = a3;
    id v11 = a3;
    id v12 = sub_21CB88070();
    os_log_type_t v13 = sub_21CB88880();
    if (os_log_type_enabled(v12, v13))
    {
      id v14 = (uint8_t *)swift_slowAlloc();
      uint64_t v15 = swift_slowAlloc();
      uint64_t v35 = v15;
      *(_DWORD *)id v14 = 136315138;
      swift_getErrorValue();
      uint64_t v16 = sub_21CB89000();
      sub_21CA4E450(v16, v17, &v35);
      sub_21CB889C0();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_21CA00000, v12, v13, "FMFServerInteractionController: didn't complete because of error: %s", v14, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x21D4B6B70](v15, -1, -1);
      MEMORY[0x21D4B6B70](v14, -1, -1);
    }
    else
    {
    }
    a4(0, a3);
    return objc_msgSend(a6, sel_signal);
  }
  else if (a2 >> 60 == 15)
  {
LABEL_16:
    if (qword_267C94990 != -1) {
      swift_once();
    }
    uint64_t v21 = sub_21CB880A0();
    sub_21CA4CC18(v21, (uint64_t)qword_267CA5368);
    uint64_t v22 = sub_21CB88070();
    os_log_type_t v23 = sub_21CB88880();
    if (os_log_type_enabled(v22, v23))
    {
      uint64_t v24 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v24 = 0;
      _os_log_impl(&dword_21CA00000, v22, v23, "FMFServerInteractionController: received empty data", v24, 2u);
      MEMORY[0x21D4B6B70](v24, -1, -1);
    }

    sub_21CB312DC();
    uint64_t v25 = (void *)swift_allocError();
    *uint64_t v26 = 1;
    a4(0, v25);

    return objc_msgSend(a6, sel_signal);
  }
  else
  {
    switch(a2 >> 62)
    {
      case 1uLL:
        if ((int)a1 == a1 >> 32) {
          goto LABEL_16;
        }
        goto LABEL_13;
      case 2uLL:
        if (*(void *)(a1 + 16) == *(void *)(a1 + 24)) {
          goto LABEL_16;
        }
LABEL_13:
        sub_21CA1E93C(a1, a2);
        goto LABEL_14;
      case 3uLL:
        goto LABEL_9;
      default:
        if ((a2 & 0xFF000000000000) == 0)
        {
LABEL_9:
          sub_21CA66C90(a1, a2);
          goto LABEL_16;
        }
LABEL_14:
        sub_21CB871F0();
        swift_allocObject();
        sub_21CB871E0();
        type metadata accessor for FMFMyLocationResponse();
        sub_21CA36588(&qword_267C974A0, (void (*)(uint64_t))type metadata accessor for FMFMyLocationResponse);
        sub_21CB871D0();
        swift_release();
        if (qword_267C94990 != -1) {
          swift_once();
        }
        uint64_t v27 = sub_21CB880A0();
        sub_21CA4CC18(v27, (uint64_t)qword_267CA5368);
        swift_retain_n();
        uint64_t v28 = sub_21CB88070();
        os_log_type_t v29 = sub_21CB88880();
        if (os_log_type_enabled(v28, v29))
        {
          uint64_t v30 = (uint8_t *)swift_slowAlloc();
          uint64_t v34 = swift_slowAlloc();
          uint64_t v35 = v34;
          *(_DWORD *)uint64_t v30 = 136315138;
          swift_retain();
          uint64_t v31 = sub_21CB88310();
          sub_21CA4E450(v31, v32, &v35);
          sub_21CB889C0();
          swift_release_n();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_21CA00000, v28, v29, "FMFServerInteractionController: received response?: %s", v30, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x21D4B6B70](v34, -1, -1);
          MEMORY[0x21D4B6B70](v30, -1, -1);
        }
        else
        {

          swift_release_n();
        }
        uint64_t v33 = swift_retain();
        a4(v33, 0);
        swift_release_n();
        objc_msgSend(a6, sel_signal);
        id result = (id)sub_21CA66C90(a1, a2);
        break;
    }
  }
  return result;
}

char *sub_21CA12B64(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v25 = a1;
  uint64_t v3 = sub_21CB888F0();
  uint64_t v23 = *(void *)(v3 - 8);
  uint64_t v24 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_21CB888B0();
  MEMORY[0x270FA5388](v6);
  uint64_t v7 = sub_21CB88150();
  MEMORY[0x270FA5388](v7 - 8);
  *(void *)&v1[OBJC_IVAR____TtC7FMFCore23FMFMyLocationController_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v1[OBJC_IVAR____TtC7FMFCore23FMFMyLocationController_unshiftedLocation] = 0;
  *(void *)&v1[OBJC_IVAR____TtC7FMFCore23FMFMyLocationController_currentMyLocation] = 0;
  uint64_t v8 = &v1[OBJC_IVAR____TtC7FMFCore23FMFMyLocationController_myLocation];
  uint64_t v9 = type metadata accessor for FMFLocation();
  id v10 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56);
  v10(v8, 1, 1, v9);
  v10(&v2[OBJC_IVAR____TtC7FMFCore23FMFMyLocationController_myUnshiftedLocation], 1, 1, v9);
  uint64_t v11 = OBJC_IVAR____TtC7FMFCore23FMFMyLocationController_locationShifter;
  type metadata accessor for FMLocationShifter();
  swift_allocObject();
  id v12 = v2;
  *(void *)&v2[v11] = FMLocationShifter.init()();
  os_log_type_t v13 = &v12[OBJC_IVAR____TtC7FMFCore23FMFMyLocationController_accuracyThreshold];
  *(void *)os_log_type_t v13 = 0;
  v13[8] = 1;
  id v14 = &v12[OBJC_IVAR____TtC7FMFCore23FMFMyLocationController_distanceThreshold];
  *(void *)id v14 = 0;
  v14[8] = 1;
  uint64_t v15 = OBJC_IVAR____TtC7FMFCore23FMFMyLocationController_myLocationUpdatingQueue;
  sub_21CA05908(0, (unint64_t *)&qword_267C96F80);
  sub_21CB88120();
  uint64_t v27 = MEMORY[0x263F8EE78];
  sub_21CA364B0((unint64_t *)&qword_267C96F60, MEMORY[0x263F8F0F8]);
  sub_21CA57E34((uint64_t *)&unk_267C96F90);
  sub_21CA3566C((unint64_t *)&qword_267C96F70, (uint64_t *)&unk_267C96F90);
  sub_21CB88A60();
  (*(void (**)(char *, void, uint64_t))(v23 + 104))(v5, *MEMORY[0x263F8F130], v24);
  *(void *)&v12[v15] = sub_21CB88930();
  id v16 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F00A60]), sel_init);
  *(void *)&v12[OBJC_IVAR____TtC7FMFCore23FMFMyLocationController_locationManager] = v16;
  uint64_t v17 = v25;
  sub_21CA219EC(v25, (uint64_t)&v12[OBJC_IVAR____TtC7FMFCore23FMFMyLocationController_interactionController]);

  uint64_t v18 = (objc_class *)type metadata accessor for FMFMyLocationController();
  v26.receiver = v12;
  v26.super_class = v18;
  uint64_t v19 = (char *)objc_msgSendSuper2(&v26, sel_init);
  uint64_t v20 = *(void **)&v19[OBJC_IVAR____TtC7FMFCore23FMFMyLocationController_locationManager];
  uint64_t v21 = v19;
  objc_msgSend(v20, sel_setDelegate_, v21);
  objc_msgSend(v20, sel_setDesiredAccuracy_, 100.0);
  objc_msgSend(v20, sel_setDistanceFilter_, 100.0);

  sub_21CA2B0D0(v17);
  return v21;
}

uint64_t sub_21CA12F84(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = sub_21CB880A0();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_267C94990 != -1) {
    swift_once();
  }
  uint64_t v12 = sub_21CA4CC18(v8, (uint64_t)qword_267CA5368);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v12, v8);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  os_log_type_t v13 = sub_21CB88070();
  os_log_type_t v14 = sub_21CB88880();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v27 = v4;
    uint64_t v15 = swift_slowAlloc();
    uint64_t v25 = (void *)swift_slowAlloc();
    uint64_t v26 = swift_slowAlloc();
    v29[0] = v26;
    *(_DWORD *)uint64_t v15 = 136315394;
    if (!a2)
    {
LABEL_13:
      uint64_t result = swift_bridgeObjectRelease();
      __break(1u);
      goto LABEL_14;
    }
    swift_bridgeObjectRetain();
    uint64_t v28 = sub_21CA4E450(a1, a2, v29);
    sub_21CB889C0();
    uint64_t result = swift_bridgeObjectRelease_n();
    *(_WORD *)(v15 + 12) = 2112;
    if (!a3)
    {
LABEL_14:
      __break(1u);
      return result;
    }
    uint64_t v24 = MEMORY[0x263F8EE58] + 8;
    uint64_t v17 = a3;
    uint64_t v18 = sub_21CB881E0();
    uint64_t v28 = v18;
    sub_21CB889C0();
    uint64_t v19 = v25;
    *uint64_t v25 = v18;
    a3 = v17;
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_21CA00000, v13, v14, "FMAPSConnectionHandler: Received message for topic: %s \n Message: %@", (uint8_t *)v15, 0x16u);
    sub_21CA57E34(&qword_267C95020);
    swift_arrayDestroy();
    MEMORY[0x21D4B6B70](v19, -1, -1);
    uint64_t v20 = v26;
    swift_arrayDestroy();
    MEMORY[0x21D4B6B70](v20, -1, -1);
    MEMORY[0x21D4B6B70](v15, -1, -1);

    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    uint64_t v4 = v27;
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  uint64_t v21 = v4 + OBJC_IVAR____TtC7FMFCore22FMAPSConnectionHandler_delegate;
  swift_beginAccess();
  uint64_t result = MEMORY[0x21D4B6C80](v21);
  if (!result) {
    return result;
  }
  if (!a3)
  {
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v22 = *(void *)(v21 + 8);
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v22 + 16))(v4, a3, ObjectType, v22);
  return swift_unknownObjectRelease();
}

uint64_t FMFMyInfo.debugDescription.getter()
{
  sub_21CB88B70();
  sub_21CB883D0();
  sub_21CB883D0();
  sub_21CB883D0();
  uint64_t v0 = swift_bridgeObjectRetain();
  MEMORY[0x21D4B5620](v0, MEMORY[0x263F8D310]);
  sub_21CB883D0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_21CB883D0();
  swift_bridgeObjectRetain();
  sub_21CB883D0();
  swift_bridgeObjectRelease();
  sub_21CB883D0();
  swift_bridgeObjectRetain();
  sub_21CA57E34((uint64_t *)&unk_267C95220);
  sub_21CB88310();
  sub_21CB883D0();
  swift_bridgeObjectRelease();
  sub_21CB883D0();
  swift_bridgeObjectRetain();
  sub_21CB883D0();
  swift_bridgeObjectRelease();
  sub_21CB883D0();
  sub_21CB883D0();
  swift_bridgeObjectRelease();
  sub_21CB883D0();
  return 0;
}

uint64_t sub_21CA1358C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  uint64_t result = a22;
  if (a22)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_21CA13710(char a1)
{
  uint64_t v3 = sub_21CB88100();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_21CB88150();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14[0] = *(void *)(v1 + 48);
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = v1;
  *(unsigned char *)(v11 + 24) = a1;
  aBlock[4] = sub_21CA342D8;
  void aBlock[5] = v11;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_21CA1B084;
  uint64_t aBlock[3] = &unk_26CD6DF90;
  uint64_t v12 = _Block_copy(aBlock);
  swift_retain();
  sub_21CB88120();
  v14[1] = MEMORY[0x263F8EE78];
  sub_21CA5DEAC((unint64_t *)&qword_267C96FC0, MEMORY[0x263F8F030]);
  sub_21CA57E34((uint64_t *)&unk_267C96DD0);
  sub_21CA356BC((unint64_t *)&qword_267C96FD0, (uint64_t *)&unk_267C96DD0);
  sub_21CB88A60();
  MEMORY[0x21D4B5A20](0, v10, v6, v12);
  _Block_release(v12);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return swift_release();
}

uint64_t sub_21CA139D4()
{
  uint64_t v1 = *(void **)(v0 + qword_267CA5350);
  objc_msgSend(v1, sel_coordinate);
  uint64_t v2 = MEMORY[0x263F8D538];
  uint64_t v15 = MEMORY[0x263F8D538];
  *(void *)&long long v14 = v3;
  sub_21CA38B20(&v14, v13);
  uint64_t v4 = MEMORY[0x263F8EE80];
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_21CA38660(v13, 0x656475746974616CLL, 0xE800000000000000, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_coordinate);
  uint64_t v15 = v2;
  *(void *)&long long v14 = v6;
  sub_21CA38B20(&v14, v13);
  char v7 = swift_isUniquelyReferenced_nonNull_native();
  sub_21CA38660(v13, 0x64757469676E6F6CLL, 0xE900000000000065, v7);
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_horizontalAccuracy);
  uint64_t v15 = v2;
  *(void *)&long long v14 = v8;
  sub_21CA38B20(&v14, v13);
  char v9 = swift_isUniquelyReferenced_nonNull_native();
  sub_21CA38660(v13, 0xD000000000000012, 0x800000021CB92FF0, v9);
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_verticalAccuracy);
  uint64_t v15 = v2;
  *(void *)&long long v14 = v10;
  sub_21CA38B20(&v14, v13);
  char v11 = swift_isUniquelyReferenced_nonNull_native();
  sub_21CA38660(v13, 0xD000000000000010, 0x800000021CB967E0, v11);
  swift_bridgeObjectRelease();
  uint64_t v15 = sub_21CA57E34(&qword_267C955B0);
  *(void *)&long long v14 = v4;
  swift_beginAccess();
  sub_21CA3769C((uint64_t)&v14, 0x6E6F697461636F6CLL, 0xE800000000000000);
  return swift_endAccess();
}

uint64_t sub_21CA13C10(uint64_t *a1)
{
  uint64_t v3 = sub_21CB88100();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15[0] = sub_21CB88150();
  uint64_t v7 = *(void *)(v15[0] - 8);
  MEMORY[0x270FA5388](v15[0]);
  char v9 = (char *)v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *a1;
  char v11 = *((unsigned char *)a1 + 8);
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = v1;
  *(void *)(v12 + 24) = v10;
  *(unsigned char *)(v12 + 32) = v11;
  aBlock[4] = sub_21CA33060;
  void aBlock[5] = v12;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_21CA1B084;
  uint64_t aBlock[3] = &unk_26CD6F018;
  os_log_type_t v13 = _Block_copy(aBlock);
  swift_retain();
  sub_21CB88120();
  v15[1] = MEMORY[0x263F8EE78];
  sub_21CA36540((unint64_t *)&qword_267C96FC0, MEMORY[0x263F8F030]);
  sub_21CA57E34((uint64_t *)&unk_267C96DD0);
  sub_21CA356BC((unint64_t *)&qword_267C96FD0, (uint64_t *)&unk_267C96DD0);
  sub_21CB88A60();
  MEMORY[0x21D4B5A20](0, v9, v6, v13);
  _Block_release(v13);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  (*(void (**)(char *, void))(v7 + 8))(v9, v15[0]);
  return swift_release();
}

uint64_t sub_21CA13ED8(int a1)
{
  uint64_t v2 = v1;
  int v19 = a1;
  uint64_t v18 = sub_21CB888F0();
  uint64_t v3 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  uint64_t v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_21CB888B0();
  MEMORY[0x270FA5388](v6);
  uint64_t v7 = sub_21CB88150();
  MEMORY[0x270FA5388](v7 - 8);
  *(void *)(v1 + 16) = 0xD00000000000001ELL;
  *(void *)(v1 + 24) = 0x800000021CB988A0;
  *(void *)(v1 + 32) = objc_msgSend(objc_allocWithZone(MEMORY[0x263EFB210]), sel_init);
  *(unsigned char *)(v1 + 41) = 0;
  sub_21CA182AC();
  *(void *)(v1 + 48) = 0;
  *(void *)(v1 + 56) = 0;
  sub_21CB88130();
  uint64_t v20 = MEMORY[0x263F8EE78];
  sub_21CA364F8((unint64_t *)&qword_267C96F60, MEMORY[0x263F8F0F8]);
  sub_21CA57E34((uint64_t *)&unk_267C96F90);
  sub_21CA3566C((unint64_t *)&qword_267C96F70, (uint64_t *)&unk_267C96F90);
  sub_21CB88A60();
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x263F8F130], v18);
  *(void *)(v1 + 64) = sub_21CB88930();
  *(void *)(v1 + 80) = 0;
  swift_unknownObjectWeakInit();
  sub_21CA57E34((uint64_t *)&unk_267C96F20);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_21CB8B220;
  if (qword_267C94978 != -1) {
    swift_once();
  }
  uint64_t v9 = *(void *)algn_267CA5338;
  *(void *)(v8 + 32) = qword_267CA5330;
  *(void *)(v8 + 40) = v9;
  *(void *)(v2 + 88) = v8;
  uint64_t v10 = qword_267C94990;
  swift_bridgeObjectRetain();
  if (v10 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_21CB880A0();
  sub_21CA4CC18(v11, (uint64_t)qword_267CA5368);
  uint64_t v12 = sub_21CB88070();
  os_log_type_t v13 = sub_21CB88880();
  if (os_log_type_enabled(v12, v13))
  {
    long long v14 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)long long v14 = 0;
    _os_log_impl(&dword_21CA00000, v12, v13, "FMFGarbageCollector: initialized", v14, 2u);
    MEMORY[0x21D4B6B70](v14, -1, -1);
  }

  *(unsigned char *)(v2 + 40) = v19 & 1;
  sub_21CA1E994();
  id v15 = objc_msgSend(self, sel_defaultCenter);
  objc_msgSend(v15, sel_addObserver_selector_name_object_, v2, sel_scheduleAccountVerificationWithNotification_, *MEMORY[0x263EFAE28], 0);

  return v2;
}

void *sub_21CA142FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v63 = a6;
  uint64_t v64 = a5;
  uint64_t v61 = a3;
  uint64_t v62 = a4;
  uint64_t v59 = a1;
  uint64_t v60 = a2;
  uint64_t v7 = sub_21CB88100();
  uint64_t v53 = *(void *)(v7 - 8);
  uint64_t v54 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v52 = (char *)&v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = sub_21CB888F0();
  uint64_t v9 = *(void *)(v58 - 8);
  MEMORY[0x270FA5388](v58);
  uint64_t v11 = (char *)&v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_21CB888B0();
  MEMORY[0x270FA5388](v12);
  uint64_t v51 = sub_21CB88150();
  uint64_t v50 = *(void *)(v51 - 8);
  MEMORY[0x270FA5388](v51);
  long long v14 = (char *)&v49 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = v6;
  *(void *)&v6[OBJC_IVAR____TtC7FMFCore22FMAPSConnectionHandler_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  uint64_t v57 = OBJC_IVAR____TtC7FMFCore22FMAPSConnectionHandler_connectionQueue;
  unint64_t v55 = sub_21CA182AC();
  id v15 = v6;
  sub_21CB88120();
  aBlock[0] = MEMORY[0x263F8EE78];
  sub_21CA364F8((unint64_t *)&qword_267C96F60, MEMORY[0x263F8F0F8]);
  sub_21CA57E34((uint64_t *)&unk_267C96F90);
  sub_21CA3566C((unint64_t *)&qword_267C96F70, (uint64_t *)&unk_267C96F90);
  sub_21CB88A60();
  (*(void (**)(char *, void, uint64_t))(v9 + 104))(v11, *MEMORY[0x263F8F130], v58);
  id v16 = v14;
  *(void *)&v56[v57] = sub_21CB88930();
  uint64_t v17 = &v15[OBJC_IVAR____TtC7FMFCore22FMAPSConnectionHandler_connection];
  *(void *)uint64_t v17 = 0;
  *((void *)v17 + 1) = 0;
  uint64_t v18 = &v15[OBJC_IVAR____TtC7FMFCore22FMAPSConnectionHandler_topicAPSToken];
  *(void *)uint64_t v18 = 0;
  *((void *)v18 + 1) = 0;
  int v19 = &v15[OBJC_IVAR____TtC7FMFCore22FMAPSConnectionHandler_publicAPSToken];
  *(void *)int v19 = 0;
  *((void *)v19 + 1) = 0;
  uint64_t v20 = &v15[OBJC_IVAR____TtC7FMFCore22FMAPSConnectionHandler_topic];
  uint64_t v21 = v60;
  *(void *)uint64_t v20 = v59;
  *((void *)v20 + 1) = v21;
  uint64_t v22 = &v15[OBJC_IVAR____TtC7FMFCore22FMAPSConnectionHandler_preferenceDomain];
  uint64_t v23 = v62;
  *(void *)uint64_t v22 = v61;
  *((void *)v22 + 1) = v23;
  uint64_t v25 = v63;
  uint64_t v24 = v64;
  *(void *)uint64_t v17 = v64;
  *((void *)v17 + 1) = v25;
  uint64_t v26 = v24;
  swift_unknownObjectRetain();

  swift_unknownObjectRelease();
  uint64_t v27 = (objc_class *)type metadata accessor for FMAPSConnectionHandler();
  v67.receiver = v15;
  v67.super_class = v27;
  uint64_t v28 = (char *)objc_msgSendSuper2(&v67, sel_init);
  os_log_type_t v29 = v28;
  if (v26)
  {
    if (*(void *)&v28[OBJC_IVAR____TtC7FMFCore22FMAPSConnectionHandler_connection])
    {
      uint64_t v30 = *(void *)&v28[OBJC_IVAR____TtC7FMFCore22FMAPSConnectionHandler_connection + 8];
      uint64_t ObjectType = swift_getObjectType();
      unint64_t v32 = *(void (**)(void *, uint64_t, uint64_t))(v30 + 16);
      id v33 = v29;
      swift_unknownObjectRetain();
      v32(v29, ObjectType, v30);
      swift_unknownObjectRelease();
    }
    else
    {
      uint64_t v39 = v28;
    }
    if (qword_267C94990 != -1) {
      swift_once();
    }
    uint64_t v40 = sub_21CB880A0();
    sub_21CA4CC18(v40, (uint64_t)qword_267CA5368);
    uint64_t v41 = v29;
    uint64_t v42 = sub_21CB88070();
    os_log_type_t v43 = sub_21CB88880();
    if (os_log_type_enabled(v42, v43))
    {
      uint64_t v44 = (uint8_t *)swift_slowAlloc();
      uint64_t v45 = swift_slowAlloc();
      *(_DWORD *)uint64_t v44 = 136315138;
      aBlock[0] = v45;
      uint64_t v46 = *(void *)&v41[OBJC_IVAR____TtC7FMFCore22FMAPSConnectionHandler_topic];
      unint64_t v47 = *(void *)&v41[OBJC_IVAR____TtC7FMFCore22FMAPSConnectionHandler_topic + 8];
      swift_bridgeObjectRetain();
      uint64_t v65 = sub_21CA4E450(v46, v47, aBlock);
      sub_21CB889C0();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_21CA00000, v42, v43, "FMAPSConnectionHandler: initialized with topic %s", v44, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x21D4B6B70](v45, -1, -1);
      MEMORY[0x21D4B6B70](v44, -1, -1);

      swift_unknownObjectRelease();
    }
    else
    {

      swift_unknownObjectRelease();
    }
  }
  else
  {
    uint64_t v34 = swift_allocObject();
    *(void *)(v34 + 16) = v29;
    aBlock[4] = (uint64_t)sub_21CA63A18;
    void aBlock[5] = v34;
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_21CA1B084;
    uint64_t aBlock[3] = (uint64_t)&unk_26CD6F5C8;
    uint64_t v35 = _Block_copy(aBlock);
    id v36 = v29;
    sub_21CB88120();
    uint64_t v65 = MEMORY[0x263F8EE78];
    sub_21CA364F8((unint64_t *)&qword_267C96FC0, MEMORY[0x263F8F030]);
    sub_21CA57E34((uint64_t *)&unk_267C96DD0);
    sub_21CA3566C((unint64_t *)&qword_267C96FD0, (uint64_t *)&unk_267C96DD0);
    uint64_t v37 = v52;
    uint64_t v38 = v54;
    sub_21CB88A60();
    MEMORY[0x21D4B5A20](0, v16, v37, v35);

    _Block_release(v35);
    (*(void (**)(char *, uint64_t))(v53 + 8))(v37, v38);
    (*(void (**)(char *, uint64_t))(v50 + 8))(v16, v51);
    swift_release();
  }
  return v29;
}

uint64_t sub_21CA14A58()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_21CB888F0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_21CB888B0();
  MEMORY[0x270FA5388](v6);
  uint64_t v7 = sub_21CB88150();
  MEMORY[0x270FA5388](v7 - 8);
  *(void *)(v0 + 24) = 0;
  swift_unknownObjectWeakInit();
  sub_21CA182AC();
  sub_21CB88140();
  aBlock[0] = MEMORY[0x263F8EE78];
  sub_21CA62370();
  sub_21CA57E34((uint64_t *)&unk_267C96F90);
  sub_21CA62410();
  sub_21CB88A60();
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x263F8F130], v2);
  *(void *)(v0 + 32) = sub_21CB88930();
  *(unsigned char *)(v0 + 40) = 0;
  uint64_t v8 = self;
  id v9 = objc_msgSend(v8, sel_defaultCenter);
  swift_retain();
  uint64_t v10 = (void *)sub_21CB882C0();
  objc_msgSend(v9, sel_addObserver_selector_name_object_, v1, sel_refreshFMFRestricted, v10, 0);

  swift_release();
  id v11 = objc_msgSend(v8, sel_defaultCenter);
  objc_msgSend(v11, sel_addObserver_selector_name_object_, v1, sel_refreshFMFRestricted, *MEMORY[0x263F536E0], 0);

  uint64_t v12 = *(NSObject **)(v1 + 32);
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = sub_21CA63694;
  *(void *)(v13 + 24) = v1;
  aBlock[4] = sub_21CA6257C;
  void aBlock[5] = v13;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_21CA18830;
  uint64_t aBlock[3] = &unk_26CD6AB00;
  long long v14 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v12, v14);
  _Block_release(v14);
  LOBYTE(v12) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if ((v12 & 1) == 0) {
    return v1;
  }
  __break(1u);
  return result;
}

void *sub_21CA14E38(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v44 = a4;
  uint64_t v45 = a1;
  id v42 = a3;
  uint64_t v7 = sub_21CB87870();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_21CB875D0();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  long long v14 = (char *)&v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21CB875C0();
  uint64_t v15 = sub_21CB875B0();
  uint64_t v17 = v16;
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  v5[2] = v15;
  v5[3] = v17;
  v5[5] = 0;
  swift_unknownObjectWeakInit();
  sub_21CB87E20();
  (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, *MEMORY[0x263F3CCF8], v7);
  uint64_t v18 = sub_21CB87CF0();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  v5[14] = v18;
  sub_21CA219EC(v45, (uint64_t)(v5 + 8));
  v5[13] = v44;
  id v19 = v42;
  void v5[6] = a2;
  v5[7] = v19;
  uint64_t v20 = qword_267C94990;
  uint64_t v43 = a2;
  swift_retain();
  swift_retain();
  id v21 = v19;
  if (v20 != -1) {
    swift_once();
  }
  uint64_t v22 = sub_21CB880A0();
  sub_21CA4CC18(v22, (uint64_t)qword_267CA5368);
  swift_retain_n();
  uint64_t v23 = sub_21CB88070();
  os_log_type_t v24 = sub_21CB88880();
  if (os_log_type_enabled(v23, v24))
  {
    uint64_t v25 = (uint8_t *)swift_slowAlloc();
    uint64_t v41 = swift_slowAlloc();
    uint64_t v47 = v41;
    id v42 = v21;
    *(_DWORD *)uint64_t v25 = 136315138;
    uint64_t v40 = v25 + 4;
    uint64_t v27 = v5[2];
    unint64_t v26 = v5[3];
    swift_bridgeObjectRetain();
    unint64_t v28 = sub_21CA30E24(0xCuLL, v27, v26);
    uint64_t v30 = v29;
    uint64_t v32 = v31;
    uint64_t v34 = v33;
    swift_bridgeObjectRelease();
    uint64_t v35 = MEMORY[0x21D4B5450](v28, v30, v32, v34);
    unint64_t v37 = v36;
    swift_bridgeObjectRelease();
    uint64_t v46 = sub_21CA4E450(v35, v37, &v47);
    sub_21CB889C0();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_21CA00000, v23, v24, "FMFActionsController<%s>.init", v25, 0xCu);
    uint64_t v38 = v41;
    swift_arrayDestroy();
    MEMORY[0x21D4B6B70](v38, -1, -1);
    MEMORY[0x21D4B6B70](v25, -1, -1);

    swift_release();
  }
  else
  {
    swift_release_n();

    swift_release();
  }
  swift_release();
  sub_21CA2B0D0(v45);
  return v5;
}

uint64_t sub_21CA15248(uint64_t a1, uint64_t a2)
{
  v2[24] = a1;
  v2[25] = a2;
  sub_21CA57E34(&qword_267C95870);
  v2[26] = swift_task_alloc();
  sub_21CA57E34(&qword_267C95810);
  v2[27] = swift_task_alloc();
  v2[28] = swift_task_alloc();
  sub_21CA57E34(&qword_267C95028);
  v2[29] = swift_task_alloc();
  uint64_t v3 = *(void *)(sub_21CA57E34(&qword_267C95858) - 8);
  v2[30] = v3;
  v2[31] = *(void *)(v3 + 64);
  v2[32] = swift_task_alloc();
  v2[33] = swift_task_alloc();
  uint64_t v4 = sub_21CA57E34(&qword_267C95860);
  v2[34] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v2[35] = v5;
  v2[36] = *(void *)(v5 + 64);
  v2[37] = swift_task_alloc();
  v2[38] = swift_task_alloc();
  uint64_t v6 = *(void *)(sub_21CA57E34(&qword_267C95868) - 8);
  v2[39] = v6;
  v2[40] = *(void *)(v6 + 64);
  v2[41] = swift_task_alloc();
  v2[42] = swift_task_alloc();
  v2[43] = sub_21CA57E34(&qword_267C95878);
  v2[44] = swift_task_alloc();
  v2[45] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_21CA257D0, 0, 0);
}

uint64_t sub_21CA154F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21CA15514(a1, a2, a3, a4);
}

uint64_t sub_21CA15514(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = sub_21CB88100();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_21CB88150();
  uint64_t v14 = *(void *)(v21 - 8);
  MEMORY[0x270FA5388](v21);
  uint64_t v16 = (char *)v20 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20[1] = *(void *)(v5 + qword_267C97460);
  uint64_t v17 = (void *)swift_allocObject();
  void v17[2] = a4;
  v17[3] = v5;
  v17[4] = a1;
  v17[5] = a2;
  v17[6] = a3;
  aBlock[4] = sub_21CA30760;
  void aBlock[5] = v17;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_21CA1B084;
  uint64_t aBlock[3] = &unk_26CD6F888;
  uint64_t v18 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_retain();
  sub_21CB88120();
  uint64_t v22 = MEMORY[0x263F8EE78];
  sub_21CA36588((unint64_t *)&qword_267C96FC0, MEMORY[0x263F8F030]);
  sub_21CA57E34((uint64_t *)&unk_267C96DD0);
  sub_21CA3566C((unint64_t *)&qword_267C96FD0, (uint64_t *)&unk_267C96DD0);
  sub_21CB88A60();
  MEMORY[0x21D4B5A20](0, v16, v13, v18);
  _Block_release(v18);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v21);
  return swift_release();
}

uint64_t sub_21CA157F0(uint64_t a1)
{
  uint64_t v3 = sub_21CB88100();
  uint64_t v13 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_21CB88150();
  uint64_t v6 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21CA26A4C(a1, (uint64_t)v16, (uint64_t *)&unk_267C96EE0);
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = v1;
  sub_21CA26A4C((uint64_t)v16, v9 + 24, (uint64_t *)&unk_267C96EE0);
  v15[4] = sub_21CA33CB8;
  void v15[5] = v9;
  v15[0] = MEMORY[0x263EF8330];
  v15[1] = 1107296256;
  void v15[2] = sub_21CA1B084;
  v15[3] = &unk_26CD6EFC8;
  uint64_t v10 = _Block_copy(v15);
  swift_retain();
  sub_21CB88120();
  uint64_t v14 = MEMORY[0x263F8EE78];
  sub_21CA36540((unint64_t *)&qword_267C96FC0, MEMORY[0x263F8F030]);
  sub_21CA57E34((uint64_t *)&unk_267C96DD0);
  sub_21CA356BC((unint64_t *)&qword_267C96FD0, (uint64_t *)&unk_267C96DD0);
  sub_21CB88A60();
  MEMORY[0x21D4B5A20](0, v8, v5, v10);
  _Block_release(v10);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v5, v3);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v12);
  return swift_release();
}

uint64_t FMFConfig.encode(to:)(void *a1)
{
  uint64_t v3 = sub_21CA57E34(&qword_267C95E10);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(v1 + 8);
  uint64_t v37 = *(void *)(v1 + 16);
  uint64_t v38 = v7;
  uint64_t v8 = *(void *)(v1 + 32);
  uint64_t v35 = *(void *)(v1 + 40);
  uint64_t v36 = v8;
  int v34 = *(unsigned __int8 *)(v1 + 48);
  uint64_t v9 = *(void *)(v1 + 56);
  uint64_t v32 = *(void *)(v1 + 64);
  uint64_t v33 = v9;
  uint64_t v10 = *(void *)(v1 + 72);
  uint64_t v30 = *(void *)(v1 + 80);
  uint64_t v31 = v10;
  uint64_t v29 = *(void *)(v1 + 88);
  int v28 = *(unsigned __int8 *)(v1 + 96);
  uint64_t v11 = *(void *)(v1 + 104);
  uint64_t v26 = *(void *)(v1 + 112);
  uint64_t v27 = v11;
  uint64_t v12 = *(void *)(v1 + 120);
  uint64_t v24 = *(void *)(v1 + 128);
  uint64_t v25 = v12;
  v18[0] = *(void *)(v1 + 136);
  v18[1] = *(void *)(v1 + 144);
  void v18[2] = *(void *)(v1 + 152);
  v18[3] = *(void *)(v1 + 160);
  v18[4] = *(void *)(v1 + 168);
  v18[5] = *(void *)(v1 + 176);
  v18[6] = *(void *)(v1 + 184);
  v18[7] = *(void *)(v1 + 192);
  LODWORD(v5) = *(unsigned __int8 *)(v1 + 201);
  int v19 = *(unsigned __int8 *)(v1 + 200);
  int v20 = v5;
  uint64_t v13 = *(void *)(v1 + 216);
  uint64_t v21 = *(void *)(v1 + 208);
  uint64_t v22 = v13;
  uint64_t v14 = *(void *)(v1 + 232);
  uint64_t v23 = *(void *)(v1 + 224);
  sub_21CA2B2CC(a1, a1[3]);
  sub_21CA1DB34();
  sub_21CB890C0();
  char v40 = 0;
  uint64_t v15 = v39;
  sub_21CB88EA0();
  if (v15) {
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  uint64_t v39 = v14;
  char v40 = 1;
  sub_21CB88EA0();
  char v40 = 2;
  sub_21CB88EA0();
  char v40 = 3;
  sub_21CB88E90();
  char v40 = 4;
  sub_21CB88EA0();
  char v40 = 5;
  sub_21CB88EA0();
  char v40 = 6;
  sub_21CB88E80();
  char v40 = 7;
  sub_21CB88EA0();
  char v40 = 8;
  sub_21CB88EA0();
  char v40 = 9;
  sub_21CB88EA0();
  char v40 = 10;
  uint64_t v38 = v3;
  sub_21CB88EA0();
  char v40 = 11;
  sub_21CB88EA0();
  char v40 = 12;
  sub_21CB88E80();
  char v40 = 13;
  sub_21CB88EA0();
  char v40 = 14;
  sub_21CB88EA0();
  char v40 = 15;
  sub_21CB88EA0();
  char v40 = 16;
  sub_21CB88EA0();
  char v40 = 17;
  sub_21CB88EA0();
  char v40 = 18;
  sub_21CB88EA0();
  char v40 = 19;
  sub_21CB88EA0();
  char v40 = 20;
  sub_21CB88EA0();
  char v40 = 21;
  sub_21CB88EA0();
  char v40 = 22;
  sub_21CB88EA0();
  char v40 = 23;
  sub_21CB88EA0();
  char v40 = 24;
  sub_21CB88EA0();
  char v40 = 25;
  sub_21CB88E80();
  char v40 = 26;
  sub_21CB88E80();
  char v40 = 27;
  sub_21CB88EA0();
  char v40 = 28;
  sub_21CB88EA0();
  char v40 = 29;
  sub_21CB88EA0();
  char v40 = 30;
  uint64_t v16 = v38;
  sub_21CB88EA0();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v16);
}

void *FMFAlert.init(from:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_21CA57E34(&qword_267C95190);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v25 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_21CA57E34(&qword_267C95440);
  uint64_t v26 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = (uint64_t)(v1 + 2);
  v1[3] = 0;
  swift_unknownObjectWeakInit();
  if (qword_267C94990 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_21CB880A0();
  sub_21CA4CC18(v11, (uint64_t)qword_267CA5368);
  uint64_t v12 = sub_21CB88070();
  os_log_type_t v13 = sub_21CB88880();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v14 = 0;
    _os_log_impl(&dword_21CA00000, v12, v13, "FMAlert: initialized with coder", v14, 2u);
    MEMORY[0x21D4B6B70](v14, -1, -1);
  }

  sub_21CA2B2CC(a1, a1[3]);
  sub_21CA60D40();
  sub_21CB890B0();
  if (v2)
  {
    sub_21CA640FC(v10);
    type metadata accessor for FMFAlert();
    swift_deallocPartialClassInstance();
  }
  else
  {
    char v35 = 0;
    v3[4] = sub_21CB88DE0();
    v3[5] = v15;
    char v34 = 1;
    v3[6] = sub_21CB88DE0();
    v3[7] = v16;
    char v33 = 2;
    v3[8] = sub_21CB88DE0();
    v3[9] = v17;
    char v32 = 3;
    v3[10] = sub_21CB88DE0();
    v3[11] = v18;
    char v31 = 5;
    v3[12] = sub_21CB88DE0();
    v3[13] = v19;
    char v30 = 4;
    sub_21CB88DE0();
    uint64_t v20 = (uint64_t)v25;
    sub_21CB87470();
    swift_bridgeObjectRelease();
    sub_21CA66D0C(v20, (uint64_t)v3 + OBJC_IVAR____TtC7FMFCore8FMFAlert_okButtonURL);
    char v29 = 6;
    sub_21CB88DE0();
    uint64_t v21 = (uint64_t)v25;
    sub_21CB87470();
    swift_bridgeObjectRelease();
    sub_21CA66D0C(v21, (uint64_t)v3 + OBJC_IVAR____TtC7FMFCore8FMFAlert_cancelButtonURL);
    char v28 = 7;
    v22._countAndFlagsBits = sub_21CB88DE0();
    FMFAlertType.init(rawValue:)(v22);
    (*(void (**)(char *, uint64_t))(v26 + 8))(v9, v7);
    *((unsigned char *)v3 + OBJC_IVAR____TtC7FMFCore8FMFAlert_alertType) = v27;
  }
  sub_21CA2B0D0((uint64_t)a1);
  return v3;
}

unint64_t FMFAddress.debugDescription.getter()
{
  return 0xD000000000000016;
}

uint64_t sub_21CA16848(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = sub_21CB87840();
  uint64_t result = MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v12 = *(void *)(a3 + 16);
  if (v12)
  {
    uint64_t v27 = a2;
    char v28 = v11;
    uint64_t v29 = v9;
    uint64_t v30 = result;
    uint64_t v26 = v3;
    uint64_t v31 = MEMORY[0x263F8EE78];
    sub_21CA16B10(0, v12, 0);
    uint64_t v13 = v31;
    uint64_t v14 = (uint64_t *)(a3 + 40);
    do
    {
      uint64_t v15 = *(v14 - 1);
      uint64_t v16 = *v14;
      uint64_t v31 = v13;
      unint64_t v18 = *(void *)(v13 + 16);
      unint64_t v17 = *(void *)(v13 + 24);
      swift_bridgeObjectRetain();
      if (v18 >= v17 >> 1)
      {
        sub_21CA16B10(v17 > 1, v18 + 1, 1);
        uint64_t v13 = v31;
      }
      v14 += 2;
      *(void *)(v13 + 16) = v18 + 1;
      unint64_t v19 = v13 + 24 * v18;
      *(void *)(v19 + 32) = v15;
      *(void *)(v19 + 40) = v16;
      *(unsigned char *)(v19 + 48) = a1;
      --v12;
    }
    while (v12);
    uint64_t v21 = v28;
    uint64_t v20 = v29;
    uint64_t v22 = v30;
    (*(void (**)(char *, uint64_t, uint64_t))(v29 + 16))(v28, v27, v30);
    uint64_t v23 = (*(uint64_t (**)(char *, uint64_t))(v20 + 88))(v21, v22);
    if (v23 == *MEMORY[0x263F3CCA8] || v23 == *MEMORY[0x263F3CCA0])
    {
      uint64_t v24 = *(void *)(v26 + 88);
      MEMORY[0x270FA5388](v23);
      *(&v25 - 2) = v13;
      *(&v25 - 1) = v24;
      swift_retain();
      sub_21CB88910();
      swift_release();
      return swift_release();
    }
    else
    {
      swift_release();
      return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v21, v22);
    }
  }
  return result;
}

uint64_t sub_21CA16B10(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_21CA3CB9C(a1, a2, a3, *v3, &qword_267C95210);
  *uint64_t v3 = (char *)result;
  return result;
}

void *FMImageCache.init(converter:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v21 = a1;
  uint64_t v22 = a2;
  uint64_t v20 = sub_21CB888F0();
  uint64_t v4 = *(void *)(v20 - 8);
  MEMORY[0x270FA5388](v20);
  uint64_t v6 = (char *)v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_21CB888B0();
  MEMORY[0x270FA5388](v7);
  uint64_t v8 = sub_21CB88150();
  MEMORY[0x270FA5388](v8 - 8);
  v2[2] = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08A48]), sel_init);
  v19[1] = sub_21CA182AC();
  sub_21CB88140();
  uint64_t v23 = MEMORY[0x263F8EE78];
  sub_21CA5DEF4((unint64_t *)&qword_267C96F60, MEMORY[0x263F8F0F8]);
  sub_21CA57E34((uint64_t *)&unk_267C96F90);
  sub_21CA3566C((unint64_t *)&qword_267C96F70, (uint64_t *)&unk_267C96F90);
  sub_21CB88A60();
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x263F8F130], v20);
  v2[3] = sub_21CB88930();
  swift_getAssociatedConformanceWitness();
  v2[4] = sub_21CB881D0();
  sub_21CA5EEBC((uint64_t *)&unk_267C96F50);
  sub_21CB890A0();
  swift_getFunctionTypeMetadata1();
  sub_21CB885E0();
  v2[5] = sub_21CB881B0();
  v2[6] = sub_21CB881B0();
  if (qword_267C94990 != -1) {
    swift_once();
  }
  uint64_t v9 = sub_21CB880A0();
  sub_21CA4CC18(v9, (uint64_t)qword_267CA5368);
  uint64_t v10 = sub_21CB88070();
  os_log_type_t v11 = sub_21CB88880();
  if (os_log_type_enabled(v10, v11))
  {
    int64_t v12 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)int64_t v12 = 0;
    _os_log_impl(&dword_21CA00000, v10, v11, "FMImageCache: initialized", v12, 2u);
    MEMORY[0x21D4B6B70](v12, -1, -1);
  }

  uint64_t v13 = v22;
  v3[7] = v21;
  v3[8] = v13;
  uint64_t v14 = (void *)v3[2];
  swift_retain();
  id v15 = v14;
  uint64_t v16 = (void *)sub_21CB882C0();
  swift_bridgeObjectRelease();
  objc_msgSend(v15, sel_setName_, v16);

  id v17 = (id)v3[2];
  objc_msgSend(v17, sel_setMaxConcurrentOperationCount_, 3);

  swift_release();
  return v3;
}

uint64_t sub_21CA16FC4(void *a1)
{
  return FMFFeatures.encode(to:)(a1);
}

uint64_t FMFFeatures.encode(to:)(void *a1)
{
  uint64_t v3 = sub_21CA57E34(&qword_267C97300);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_21CA2B2CC(a1, a1[3]);
  sub_21CA1F97C();
  sub_21CB890C0();
  v8[31] = 0;
  sub_21CB88E80();
  if (!v1)
  {
    v8[30] = 1;
    sub_21CB88E80();
    v8[29] = 2;
    sub_21CB88E80();
    v8[28] = 3;
    sub_21CB88E80();
    v8[27] = 4;
    sub_21CB88E80();
    v8[26] = 5;
    sub_21CB88E80();
    v8[25] = 6;
    sub_21CB88E80();
    v8[24] = 7;
    sub_21CB88E80();
    v8[15] = 8;
    sub_21CB88E80();
    v8[14] = 9;
    sub_21CB88E80();
    v8[13] = 10;
    sub_21CB88E80();
    v8[12] = 11;
    sub_21CB88E80();
    v8[11] = 12;
    sub_21CB88E80();
    v8[10] = 13;
    sub_21CB88E80();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_21CA17324(void *a1)
{
  return FMFMyInfo.encode(to:)(a1);
}

uint64_t FMFMyInfo.encode(to:)(void *a1)
{
  uint64_t v4 = sub_21CA57E34(&qword_267C97C48);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v1;
  uint64_t v8 = v1[1];
  uint64_t v18 = v1[2];
  uint64_t v19 = v8;
  uint64_t v10 = v1[3];
  uint64_t v16 = v1[4];
  uint64_t v17 = v10;
  uint64_t v11 = v1[5];
  v15[0] = v1[6];
  v15[1] = v11;
  int v22 = *((unsigned __int8 *)v1 + 56);
  sub_21CA2B2CC(a1, a1[3]);
  sub_21CA17F48();
  sub_21CB890C0();
  uint64_t v20 = v9;
  char v23 = 0;
  sub_21CA57E34(&qword_267C94E60);
  sub_21CA4A500(&qword_267C95140, &qword_267C94E60);
  sub_21CB88EB0();
  if (!v2)
  {
    uint64_t v13 = v16;
    uint64_t v12 = v17;
    LOBYTE(v20) = 1;
    sub_21CB88E70();
    uint64_t v20 = v12;
    uint64_t v21 = v13;
    char v23 = 2;
    sub_21CA57E34((uint64_t *)&unk_267C95220);
    sub_21CA4A500((unint64_t *)&qword_267C94A70, (uint64_t *)&unk_267C95220);
    sub_21CB88EB0();
    LOBYTE(v20) = 3;
    sub_21CB88E70();
    LOBYTE(v20) = 4;
    sub_21CB88E80();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

void sub_21CA175E8(uint64_t a1, unint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = sub_21CB88100();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_21CB88150();
  uint64_t v10 = MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2 >> 60 == 15)
  {
    if (qword_267C94990 != -1) {
      swift_once();
    }
    uint64_t v14 = sub_21CB880A0();
    sub_21CA4CC18(v14, (uint64_t)qword_267CA5368);
    os_log_t v44 = (os_log_t)sub_21CB88070();
    os_log_type_t v15 = sub_21CB88860();
    if (os_log_type_enabled(v44, v15))
    {
      uint64_t v16 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v16 = 0;
      _os_log_impl(&dword_21CA00000, v44, v15, "FMAPSConnectionHandler: Public APS Token was nil.", v16, 2u);
      MEMORY[0x21D4B6B70](v16, -1, -1);
    }
    os_log_t v17 = v44;
  }
  else
  {
    uint64_t v42 = v11;
    os_log_t v44 = v10;
    uint64_t v18 = (void *)sub_21CB874B0();
    if (qword_267C94990 != -1) {
      swift_once();
    }
    uint64_t v43 = v8;
    uint64_t v19 = sub_21CB880A0();
    sub_21CA4CC18(v19, (uint64_t)qword_267CA5368);
    id v20 = v18;
    uint64_t v21 = sub_21CB88070();
    os_log_type_t v22 = sub_21CB88880();
    if (os_log_type_enabled(v21, v22))
    {
      char v23 = (uint8_t *)swift_slowAlloc();
      uint64_t v24 = swift_slowAlloc();
      uint64_t v41 = v6;
      uint64_t v39 = (void *)v24;
      *(_DWORD *)char v23 = 138412290;
      aBlock[0] = v20;
      id v25 = v20;
      char v40 = v13;
      uint64_t v26 = v3;
      id v27 = v25;
      sub_21CB889C0();
      char v28 = v39;
      *uint64_t v39 = v20;

      uint64_t v3 = v26;
      uint64_t v13 = v40;
      _os_log_impl(&dword_21CA00000, v21, v22, "FMAPSConnectionHandler: Public APS Token received %@.", v23, 0xCu);
      sub_21CA57E34(&qword_267C95020);
      swift_arrayDestroy();
      uint64_t v6 = v41;
      MEMORY[0x21D4B6B70](v28, -1, -1);
      MEMORY[0x21D4B6B70](v23, -1, -1);
    }
    else
    {
    }
    uint64_t v29 = v20;
    id v30 = objc_msgSend(v20, sel_fm_hexString);
    uint64_t v31 = sub_21CB882F0();
    uint64_t v33 = v32;

    char v34 = (void *)swift_allocObject();
    v34[2] = v3;
    v34[3] = v31;
    v34[4] = v33;
    aBlock[4] = sub_21CA63A50;
    void aBlock[5] = v34;
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_21CA1B084;
    uint64_t aBlock[3] = &unk_26CD6F578;
    char v35 = _Block_copy(aBlock);
    id v36 = v3;
    sub_21CB88120();
    uint64_t v45 = MEMORY[0x263F8EE78];
    sub_21CA364F8((unint64_t *)&qword_267C96FC0, MEMORY[0x263F8F030]);
    sub_21CA57E34((uint64_t *)&unk_267C96DD0);
    sub_21CA3566C((unint64_t *)&qword_267C96FD0, (uint64_t *)&unk_267C96DD0);
    uint64_t v37 = v43;
    sub_21CB88A60();
    MEMORY[0x21D4B5A20](0, v13, v37, v35);
    _Block_release(v35);

    (*(void (**)(char *, uint64_t))(v6 + 8))(v37, v5);
    (*(void (**)(char *, os_log_t))(v42 + 8))(v13, v44);
    swift_release();
  }
}

uint64_t sub_21CA17B60@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FMFMyInfo.init(from:)(a1, a2);
}

uint64_t FMFMyInfo.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_21CA57E34(&qword_267C97C38);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21CA2B2CC(a1, a1[3]);
  sub_21CA17F48();
  sub_21CB890B0();
  if (v2) {
    return sub_21CA2B0D0((uint64_t)a1);
  }
  sub_21CA57E34(&qword_267C94E60);
  char v35 = 0;
  sub_21CA4A500((unint64_t *)&qword_267C94E68, &qword_267C94E60);
  sub_21CB88E20();
  uint64_t v9 = v36;
  char v34 = 1;
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_21CB88DE0();
  uint64_t v30 = v11;
  uint64_t v27 = v10;
  char v33 = 2;
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_21CB88DE0();
  uint64_t v28 = v9;
  uint64_t v26 = v12;
  char v32 = 3;
  uint64_t v14 = v13;
  swift_bridgeObjectRetain();
  uint64_t v15 = sub_21CB88DE0();
  uint64_t v29 = v14;
  uint64_t v24 = v15;
  uint64_t v25 = v16;
  char v31 = 4;
  swift_bridgeObjectRetain();
  char v18 = sub_21CB88DF0();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v19 = v27;
  *(void *)a2 = v28;
  *(void *)(a2 + 8) = v19;
  uint64_t v20 = v29;
  uint64_t v22 = v25;
  uint64_t v21 = v26;
  *(void *)(a2 + 16) = v30;
  *(void *)(a2 + 24) = v21;
  uint64_t v23 = v24;
  *(void *)(a2 + 32) = v20;
  *(void *)(a2 + 40) = v23;
  *(void *)(a2 + 48) = v22;
  *(unsigned char *)(a2 + 56) = v18 & 1;
  sub_21CA2B0D0((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

unint64_t sub_21CA17F48()
{
  unint64_t result = qword_267C97C40;
  if (!qword_267C97C40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C97C40);
  }
  return result;
}

uint64_t FMLocationShifter.init()()
{
  uint64_t v0 = sub_21CB888F0();
  uint64_t v13 = v0;
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_21CB888B0();
  MEMORY[0x270FA5388](v4);
  uint64_t v5 = sub_21CB88150();
  MEMORY[0x270FA5388](v5 - 8);
  unint64_t v16 = sub_21CA182AC();
  sub_21CB88140();
  uint64_t v18 = MEMORY[0x263F8EE78];
  uint64_t v15 = sub_21CA5DE64((unint64_t *)&qword_267C96F60, MEMORY[0x263F8F0F8]);
  uint64_t v14 = sub_21CA57E34((uint64_t *)&unk_267C96F90);
  sub_21CA3566C((unint64_t *)&qword_267C96F70, (uint64_t *)&unk_267C96F90);
  sub_21CB88A60();
  uint64_t v6 = *MEMORY[0x263F8F130];
  uint64_t v7 = v1 + 104;
  uint64_t v8 = *(void (**)(char *, uint64_t, uint64_t))(v1 + 104);
  v12[1] = v7;
  v8(v3, v6, v0);
  uint64_t v9 = sub_21CB88930();
  uint64_t v10 = v17;
  *(void *)(v17 + 24) = v9;
  sub_21CB88140();
  uint64_t v18 = MEMORY[0x263F8EE78];
  sub_21CB88A60();
  v8(v3, v6, v13);
  *(void *)(v10 + 32) = sub_21CB88930();
  *(void *)(v10 + 16) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F417D8]), sel_init);
  return v10;
}

unint64_t sub_21CA182AC()
{
  unint64_t result = qword_267C96F80;
  if (!qword_267C96F80)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_267C96F80);
  }
  return result;
}

unint64_t FMFPreferences.debugDescription.getter()
{
  return 0xD000000000000026;
}

uint64_t sub_21CA18630()
{
  sub_21CB89110();
  sub_21CB883D0();
  swift_bridgeObjectRelease();
  sub_21CB883D0();
  sub_21CA2A060();
  sub_21CB88470();
  sub_21CB883D0();
  swift_bridgeObjectRelease();
  sub_21CB883D0();
  __dst[0] = 0;
  __dst[1] = 0xE000000000000000;
  sub_21CB88B70();
  uint64_t __dst[45] = 0;
  __dst[46] = 0xE000000000000000;
  sub_21CB883D0();
  memcpy(__dst, (const void *)(v0 + 16), 0x161uLL);
  sub_21CB88CA0();
  sub_21CB883D0();
  sub_21CB88710();
  sub_21CB883D0();
  sub_21CB88710();
  __dst[0] = 60;
  __dst[1] = 0xE100000000000000;
  swift_bridgeObjectRetain();
  sub_21CB883D0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return __dst[0];
}

uint64_t sub_21CA18830(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 32))();
}

uint64_t sub_21CA18858()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_21CA18880()
{
  return sub_21CA18888(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_21CA18888(uint64_t (*a1)(void))
{
  return a1();
}

void sub_21CA188B0(uint64_t a1)
{
  id v2 = objc_msgSend(self, sel_sharedConnection);
  if (v2)
  {
    uint64_t v3 = v2;
    unsigned int v4 = objc_msgSend(v2, sel_effectiveBoolValueForSetting_, *MEMORY[0x263F538D0]);
    if (qword_267C94990 != -1) {
      swift_once();
    }
    uint64_t v5 = sub_21CB880A0();
    sub_21CA4CC18(v5, (uint64_t)qword_267CA5368);
    uint64_t v6 = sub_21CB88070();
    os_log_type_t v7 = sub_21CB88880();
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v8 = (uint8_t *)swift_slowAlloc();
      uint64_t v9 = swift_slowAlloc();
      *(_DWORD *)uint64_t v8 = 136315138;
      v19[0] = v9;
      if (v4 == 2) {
        uint64_t v10 = 1702195828;
      }
      else {
        uint64_t v10 = 0x65736C6166;
      }
      if (v4 == 2) {
        unint64_t v11 = 0xE400000000000000;
      }
      else {
        unint64_t v11 = 0xE500000000000000;
      }
      sub_21CA4E450(v10, v11, v19);
      sub_21CB889C0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_21CA00000, v6, v7, "FMFSystemStateController: isRestricted: %s", v8, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x21D4B6B70](v9, -1, -1);
      MEMORY[0x21D4B6B70](v8, -1, -1);
    }

    int v12 = v4 == 2;
    int v13 = *(unsigned __int8 *)(a1 + 40);
    *(unsigned char *)(a1 + 40) = v12;
    if (v12 == v13 || (uint64_t v14 = MEMORY[0x21D4B6C80](a1 + 16)) == 0)
    {
    }
    else
    {
      uint64_t v15 = v14;
      uint64_t v16 = v14 + 32;
      swift_beginAccess();
      if (MEMORY[0x21D4B6C80](v16))
      {
        uint64_t v17 = *(void *)(v15 + 40);
        uint64_t ObjectType = swift_getObjectType();
        (*(void (**)(uint64_t, BOOL, uint64_t, uint64_t))(v17 + 120))(v15, v4 == 2, ObjectType, v17);

        swift_unknownObjectRelease();
      }
      else
      {
      }
      swift_unknownObjectRelease();
    }
  }
}

void sub_21CA18B48(char *a1)
{
  uint64_t v28 = a1;
  uint64_t v27 = sub_21CB888F0();
  uint64_t v1 = *(void *)(v27 - 8);
  MEMORY[0x270FA5388](v27);
  uint64_t v3 = (char *)v26 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_21CB888B0();
  MEMORY[0x270FA5388](v4);
  uint64_t v5 = sub_21CB88150();
  MEMORY[0x270FA5388](v5 - 8);
  v26[2] = sub_21CB882F0();
  v26[3] = sub_21CB882F0();
  v26[1] = sub_21CA182AC();
  sub_21CB88120();
  uint64_t v30 = MEMORY[0x263F8EE78];
  sub_21CA364F8((unint64_t *)&qword_267C96F60, MEMORY[0x263F8F0F8]);
  sub_21CA57E34((uint64_t *)&unk_267C96F90);
  sub_21CA3566C((unint64_t *)&qword_267C96F70, (uint64_t *)&unk_267C96F90);
  sub_21CB88A60();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x263F8F130], v27);
  uint64_t v6 = (void *)sub_21CB88930();
  id v7 = objc_allocWithZone(MEMORY[0x263F280F0]);
  uint64_t v8 = (void *)sub_21CB882C0();
  swift_bridgeObjectRelease();
  uint64_t v9 = (void *)sub_21CB882C0();
  uint64_t v10 = v28;
  swift_bridgeObjectRelease();
  id v11 = objc_msgSend(v7, sel_initWithEnvironmentName_namedDelegatePort_queue_, v8, v9, v6);

  int v12 = &off_26CD6F430;
  int v13 = &v10[OBJC_IVAR____TtC7FMFCore22FMAPSConnectionHandler_connection];
  if (!v11) {
    int v12 = 0;
  }
  *(void *)int v13 = v11;
  *((void *)v13 + 1) = v12;
  swift_unknownObjectRelease();
  if (*(void *)v13)
  {
    uint64_t v14 = *((void *)v13 + 1);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v16 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 16);
    swift_unknownObjectRetain();
    uint64_t v17 = v10;
    v16(v10, ObjectType, v14);
    swift_unknownObjectRelease();
  }
  if (qword_267C94990 != -1) {
    swift_once();
  }
  uint64_t v18 = sub_21CB880A0();
  sub_21CA4CC18(v18, (uint64_t)qword_267CA5368);
  uint64_t v19 = v10;
  uint64_t v20 = sub_21CB88070();
  os_log_type_t v21 = sub_21CB88880();
  if (os_log_type_enabled(v20, v21))
  {
    uint64_t v22 = (uint8_t *)swift_slowAlloc();
    uint64_t v23 = swift_slowAlloc();
    uint64_t v30 = v23;
    *(_DWORD *)uint64_t v22 = 136315138;
    uint64_t v24 = *(void *)&v19[OBJC_IVAR____TtC7FMFCore22FMAPSConnectionHandler_topic];
    unint64_t v25 = *(void *)&v19[OBJC_IVAR____TtC7FMFCore22FMAPSConnectionHandler_topic + 8];
    swift_bridgeObjectRetain();
    uint64_t v29 = sub_21CA4E450(v24, v25, &v30);
    sub_21CB889C0();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_21CA00000, v20, v21, "FMAPSConnectionHandler: initialized with default connection for topic %s", v22, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x21D4B6B70](v23, -1, -1);
    MEMORY[0x21D4B6B70](v22, -1, -1);
  }
  else
  {
  }
}

uint64_t sub_21CA19004@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_21CA494C8(a1, a2);
}

uint64_t sub_21CA1901C()
{
  sub_21CA19074();

  return swift_deallocClassInstance();
}

uint64_t sub_21CA19074()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_21CA191E0(v0 + OBJC_IVAR____TtC7FMFCore15FMFBaseResponse_commandResponse);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_21CA59D84(*(void *)(v0 + OBJC_IVAR____TtC7FMFCore28FMFInitRefreshClientResponse_preferences), *(void *)(v0 + OBJC_IVAR____TtC7FMFCore28FMFInitRefreshClientResponse_preferences + 8), *(void *)(v0 + OBJC_IVAR____TtC7FMFCore28FMFInitRefreshClientResponse_preferences + 16));
  sub_21CA2D658(*(void *)(v0 + OBJC_IVAR____TtC7FMFCore28FMFInitRefreshClientResponse_myInfo));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_21CA191E0(uint64_t a1)
{
  uint64_t v2 = sub_21CA57E34(&qword_267C94E48);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_21CA19240(uint64_t a1)
{
  uint64_t v2 = sub_21CA57E34((uint64_t *)&unk_267C96EF0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_21CA192A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_21CA57E34((uint64_t *)&unk_267C96EF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_21CA19308(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = sub_21CA57E34(&qword_267C96F10);
  uint64_t result = MEMORY[0x270FA5388](v9 - 8);
  int v12 = (char *)v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = OBJC_IVAR____TtC7FMFCore20FMFRefreshController_initializationInProgress;
  if ((*(unsigned char *)(a1 + OBJC_IVAR____TtC7FMFCore20FMFRefreshController_initializationInProgress) & 1) == 0)
  {
    if (*(unsigned char *)(a1 + OBJC_IVAR____TtC7FMFCore20FMFRefreshController_useOptimizedFetch) == 1)
    {
      if (qword_267C94990 != -1) {
        swift_once();
      }
      uint64_t v14 = sub_21CB880A0();
      sub_21CA4CC18(v14, (uint64_t)qword_267CA5368);
      uint64_t v15 = sub_21CB88070();
      os_log_type_t v16 = sub_21CB88880();
      if (os_log_type_enabled(v15, v16))
      {
        uint64_t v17 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v17 = 0;
        _os_log_impl(&dword_21CA00000, v15, v16, "FMFRefreshController: asking fmfd about followers and following…", v17, 2u);
        MEMORY[0x21D4B6B70](v17, -1, -1);
      }

      uint64_t result = sub_21CA70C94();
      *(unsigned char *)(a1 + OBJC_IVAR____TtC7FMFCore20FMFRefreshController_initializedOnce) = 1;
    }
    else
    {
      uint64_t v34 = v4;
      v33[3] = *(unsigned __int8 *)(a1 + OBJC_IVAR____TtC7FMFCore20FMFRefreshController_initializedOnce);
      uint64_t v18 = type metadata accessor for FMFFriend();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v12, 1, 1, v18);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v19 = MEMORY[0x263F8EE78];
      unint64_t v20 = sub_21CA19A20(MEMORY[0x263F8EE78]);
      unint64_t v21 = sub_21CA19A20(v19);
      type metadata accessor for FMFInitRefreshClientRequest();
      uint64_t v22 = swift_allocObject();
      sub_21CA05C10((uint64_t)v12, v22 + qword_267CA53F8);
      *(void *)(v22 + qword_267CA5400) = 0;
      *(void *)(v22 + qword_267CA5408) = v20;
      *(void *)(v22 + qword_267CA5410) = v21;
      uint64_t v23 = (void *)(v22 + qword_267CA5418);
      *uint64_t v23 = a2;
      v23[1] = a3;
      v23[2] = a4;
      *(unsigned char *)(v22 + qword_267CA5420) = 1;
      uint64_t v24 = sub_21CA36A84();
      sub_21CA1B88C((uint64_t)v12, &qword_267C96F10);
      *(unsigned char *)(a1 + v13) = 1;
      if (qword_267C94990 != -1) {
        swift_once();
      }
      uint64_t v25 = sub_21CB880A0();
      sub_21CA4CC18(v25, (uint64_t)qword_267CA5368);
      uint64_t v26 = sub_21CB88070();
      os_log_type_t v27 = sub_21CB88880();
      if (os_log_type_enabled(v26, v27))
      {
        uint64_t v28 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v28 = 0;
        _os_log_impl(&dword_21CA00000, v26, v27, "FMFRefreshController: sending initClient request…", v28, 2u);
        MEMORY[0x21D4B6B70](v28, -1, -1);
      }

      uint64_t v29 = *(void *)(a1 + OBJC_IVAR____TtC7FMFCore20FMFRefreshController_interactionController + 24);
      uint64_t v30 = *(void *)(a1 + OBJC_IVAR____TtC7FMFCore20FMFRefreshController_interactionController + 32);
      sub_21CA2B2CC((void *)(a1 + OBJC_IVAR____TtC7FMFCore20FMFRefreshController_interactionController), v29);
      char v31 = *(void (**)(void *, uint64_t (*)(uint64_t, void *), uint64_t, uint64_t, uint64_t, uint64_t))(v30 + 64);
      uint64_t refreshed = type metadata accessor for FMFInitRefreshClientResponse();
      swift_retain();
      v31(v24, sub_21CA64004, a1, refreshed, v29, v30);
      swift_release();
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_21CA1974C(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v6 = sub_21CB87590();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = OBJC_IVAR____TtC7FMFCore20FMFRefreshController_firstRefreshCompleted;
  if ((*(unsigned char *)(a1 + OBJC_IVAR____TtC7FMFCore20FMFRefreshController_firstRefreshCompleted) & 1) == 0)
  {
    if (MEMORY[0x21D4B6C80](a1 + 40))
    {
      sub_21CA0E060();
      swift_unknownObjectRelease();
    }
    *(unsigned char *)(a1 + v10) = 1;
  }
  sub_21CA10F08(a2);
  sub_21CB87580();
  uint64_t v11 = a1 + OBJC_IVAR____TtC7FMFCore20FMFRefreshController_lastRefreshTime;
  swift_beginAccess();
  (*(void (**)(uint64_t, char *, uint64_t))(v7 + 40))(v11, v9, v6);
  swift_endAccess();
  int v12 = (void *)(a1 + OBJC_IVAR____TtC7FMFCore20FMFRefreshController_tapContexts);
  swift_beginAccess();
  uint64_t v13 = MEMORY[0x263F8EE78];
  *int v12 = MEMORY[0x263F8EE78];
  swift_bridgeObjectRelease();
  unint64_t v14 = sub_21CA19A20(v13);
  uint64_t v15 = (unint64_t *)(a1 + OBJC_IVAR____TtC7FMFCore20FMFRefreshController_liveSessionStatistics);
  swift_beginAccess();
  *uint64_t v15 = v14;
  swift_bridgeObjectRelease();
  unint64_t v16 = sub_21CA19A20(v13);
  uint64_t v17 = (unint64_t *)(a1 + OBJC_IVAR____TtC7FMFCore20FMFRefreshController_legacyFallbackData);
  swift_beginAccess();
  *uint64_t v17 = v16;
  swift_bridgeObjectRelease();
  sub_21CA34FE0(*(double *)(a1 + OBJC_IVAR____TtC7FMFCore20FMFRefreshController_callbackInterval));
  if (qword_267C94990 != -1) {
    swift_once();
  }
  uint64_t v18 = sub_21CB880A0();
  sub_21CA4CC18(v18, (uint64_t)qword_267CA5368);
  uint64_t v19 = sub_21CB88070();
  os_log_type_t v20 = sub_21CB88850();
  if (os_log_type_enabled(v19, v20))
  {
    unint64_t v21 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v21 = 0;
    _os_log_impl(&dword_21CA00000, v19, v20, "FMFRefreshController: refreshClientRequest completed", v21, 2u);
    MEMORY[0x21D4B6B70](v21, -1, -1);
  }

  return a3(1);
}

unint64_t sub_21CA19A20(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  sub_21CA57E34(&qword_267C97AC0);
  uint64_t v2 = (void *)sub_21CB88D40();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (unsigned char *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *((void *)v4 - 2);
    uint64_t v6 = *((void *)v4 - 1);
    char v7 = *v4;
    swift_bridgeObjectRetain();
    unint64_t result = sub_21CA5BCE0(v5, v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v10 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v10 = v5;
    v10[1] = v6;
    *(unsigned char *)(v2[7] + result) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v4 += 24;
    v2[2] = v13;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_21CA19B34(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v22 = a1;
  uint64_t v3 = sub_21CB888F0();
  uint64_t v20 = *(void *)(v3 - 8);
  uint64_t v21 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v19 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_21CB888B0();
  MEMORY[0x270FA5388](v18);
  uint64_t v5 = sub_21CB88150();
  MEMORY[0x270FA5388](v5 - 8);
  sub_21CB87570();
  uint64_t v6 = MEMORY[0x263F8EE80];
  *(void *)(v1 + qword_267C96C50) = MEMORY[0x263F8EE80];
  *(void *)(v1 + qword_267C96C58) = v6;
  *(void *)(v1 + qword_267C96C60) = v6;
  *(void *)(v1 + qword_267C96C68) = 0;
  if (qword_267C94998 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_21CB880A0();
  sub_21CA4CC18(v7, (uint64_t)qword_267CA5380);
  swift_retain_n();
  uint64_t v8 = sub_21CB88070();
  os_log_type_t v9 = sub_21CB88880();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = (uint8_t *)swift_slowAlloc();
    uint64_t v11 = swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 136315138;
    uint64_t v24 = v11;
    uint64_t v12 = sub_21CB89110();
    uint64_t v23 = sub_21CA4E450(v12, v13, &v24);
    sub_21CB889C0();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_21CA00000, v8, v9, "%s: initialized", v10, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x21D4B6B70](v11, -1, -1);
    MEMORY[0x21D4B6B70](v10, -1, -1);
  }
  else
  {

    swift_release_n();
  }
  id v14 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08A48]), sel_init);
  uint64_t v24 = 0;
  unint64_t v25 = 0xE000000000000000;
  sub_21CB88B70();
  sub_21CB883D0();
  sub_21CB89110();
  sub_21CB883D0();
  swift_bridgeObjectRelease();
  sub_21CB883D0();
  uint64_t v15 = (void *)sub_21CB882C0();
  swift_bridgeObjectRelease();
  objc_msgSend(v14, sel_setName_, v15);

  objc_msgSend(v14, sel_setMaxConcurrentOperationCount_, 10);
  sub_21CA182AC();
  uint64_t v24 = 0;
  unint64_t v25 = 0xE000000000000000;
  sub_21CB88B70();
  swift_bridgeObjectRelease();
  uint64_t v24 = 0xD000000000000022;
  unint64_t v25 = 0x800000021CB96A40;
  sub_21CB89110();
  sub_21CB883D0();
  swift_bridgeObjectRelease();
  sub_21CB883D0();
  sub_21CB88140();
  uint64_t v24 = MEMORY[0x263F8EE78];
  sub_21CA5DEAC((unint64_t *)&qword_267C96F60, MEMORY[0x263F8F0F8]);
  sub_21CA57E34((uint64_t *)&unk_267C96F90);
  sub_21CA356BC((unint64_t *)&qword_267C96F70, (uint64_t *)&unk_267C96F90);
  sub_21CB88A60();
  (*(void (**)(char *, void, uint64_t))(v20 + 104))(v19, *MEMORY[0x263F8F130], v21);
  uint64_t v16 = sub_21CB88930();
  *(void *)(v2 + qword_267C96C70) = v14;
  sub_21CA26A4C(v22, v2 + qword_267CA5298, &qword_267C95400);
  *(void *)(v2 + qword_267C96C78) = v16;
  return v2;
}

uint64_t sub_21CA1A108()
{
  swift_retain();
  sub_21CA57E34(&qword_267C95598);
  sub_21CB88910();

  return swift_release();
}

void *sub_21CA1A190(uint64_t a1, uint64_t a2, char *a3, int a4, int a5)
{
  uint64_t v6 = v5;
  int v62 = a4;
  int v63 = a5;
  uint64_t v61 = a3;
  uint64_t v64 = a1;
  uint64_t v65 = a2;
  uint64_t v7 = sub_21CB888F0();
  uint64_t v59 = *(void *)(v7 - 8);
  uint64_t v60 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v58 = (char *)&v56 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = sub_21CB888B0();
  MEMORY[0x270FA5388](v57);
  uint64_t v56 = (char *)&v56 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_21CB88150();
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v11 = sub_21CB87870();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  id v14 = (char *)&v56 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_21CB875D0();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)&v56 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21CB875C0();
  uint64_t v19 = sub_21CB875B0();
  uint64_t v21 = v20;
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  _OWORD v6[2] = v19;
  v6[3] = v21;
  sub_21CB87E20();
  (*(void (**)(char *, void, uint64_t))(v12 + 104))(v14, *MEMORY[0x263F3CCF8], v11);
  uint64_t v22 = sub_21CB87CF0();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  v6[4] = v22;
  v6[6] = 0;
  swift_unknownObjectWeakInit();
  uint64_t v23 = (char *)v6 + OBJC_IVAR____TtC7FMFCore20FMFRefreshController_selectedFriend;
  uint64_t v24 = type metadata accessor for FMFFriend();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v23, 1, 1, v24);
  *((unsigned char *)v6 + OBJC_IVAR____TtC7FMFCore20FMFRefreshController_refreshReason) = 2;
  swift_weakInit();
  uint64_t v25 = MEMORY[0x263F8EE78];
  *(void *)((char *)v6 + OBJC_IVAR____TtC7FMFCore20FMFRefreshController_tapContexts) = MEMORY[0x263F8EE78];
  uint64_t v26 = MEMORY[0x263F8EE80];
  *(void *)((char *)v6 + OBJC_IVAR____TtC7FMFCore20FMFRefreshController_liveSessionStatistics) = MEMORY[0x263F8EE80];
  *(void *)((char *)v6 + OBJC_IVAR____TtC7FMFCore20FMFRefreshController_legacyFallbackData) = v26;
  uint64_t v27 = OBJC_IVAR____TtC7FMFCore20FMFRefreshController_refreshQueue;
  sub_21CA05908(0, (unint64_t *)&qword_267C96F80);
  sub_21CB88120();
  v67[1] = v25;
  sub_21CA364B0((unint64_t *)&qword_267C96F60, MEMORY[0x263F8F0F8]);
  sub_21CA57E34((uint64_t *)&unk_267C96F90);
  sub_21CA3566C((unint64_t *)&qword_267C96F70, (uint64_t *)&unk_267C96F90);
  sub_21CB88A60();
  (*(void (**)(char *, void, uint64_t))(v59 + 104))(v58, *MEMORY[0x263F8F130], v60);
  *(void *)((char *)v6 + v27) = sub_21CB88930();
  *(void *)((char *)v6 + OBJC_IVAR____TtC7FMFCore20FMFRefreshController_callbackInterval) = 0x40E86A0000000000;
  *(void *)((char *)v6 + OBJC_IVAR____TtC7FMFCore20FMFRefreshController_minCallbackInterval) = 0x40B3880000000000;
  *(void *)((char *)v6 + OBJC_IVAR____TtC7FMFCore20FMFRefreshController_maxCallbackInterval) = 0x40ED4C0000000000;
  sub_21CB874F0();
  *(void *)((char *)v6 + OBJC_IVAR____TtC7FMFCore20FMFRefreshController_refreshTimer) = 0;
  *((unsigned char *)v6 + OBJC_IVAR____TtC7FMFCore20FMFRefreshController_initializedOnce) = 0;
  *((unsigned char *)v6 + OBJC_IVAR____TtC7FMFCore20FMFRefreshController_initializationInProgress) = 0;
  *((unsigned char *)v6 + OBJC_IVAR____TtC7FMFCore20FMFRefreshController_firstRefreshCompleted) = 0;
  *((unsigned char *)v6 + OBJC_IVAR____TtC7FMFCore20FMFRefreshController_isRefreshing) = 0;
  swift_weakAssign();
  sub_21CA219EC(v65, (uint64_t)v6 + OBJC_IVAR____TtC7FMFCore20FMFRefreshController_interactionController);
  uint64_t v28 = v61;
  *(void *)((char *)v6 + OBJC_IVAR____TtC7FMFCore20FMFRefreshController_apsConnectionHandler) = v61;
  *((unsigned char *)v6 + OBJC_IVAR____TtC7FMFCore20FMFRefreshController_isSnapshotMode) = v62;
  *((unsigned char *)v6 + OBJC_IVAR____TtC7FMFCore20FMFRefreshController_useOptimizedFetch) = v63;
  uint64_t v29 = &v28[OBJC_IVAR____TtC7FMFCore22FMAPSConnectionHandler_delegate];
  uint64_t v30 = v28;
  swift_beginAccess();
  *((void *)v29 + 1) = &off_26CD6A2E0;
  swift_unknownObjectWeakAssign();
  uint64_t v31 = qword_267C94990;
  char v32 = v30;
  if (v31 != -1) {
    swift_once();
  }
  uint64_t v33 = sub_21CB880A0();
  sub_21CA4CC18(v33, (uint64_t)qword_267CA5368);
  swift_retain_n();
  uint64_t v34 = sub_21CB88070();
  os_log_type_t v35 = sub_21CB88880();
  if (os_log_type_enabled(v34, v35))
  {
    uint64_t v36 = swift_slowAlloc();
    uint64_t v61 = v32;
    uint64_t v37 = v36;
    uint64_t v60 = swift_slowAlloc();
    v67[0] = v60;
    *(_DWORD *)uint64_t v37 = 136315650;
    uint64_t v38 = v6[2];
    unint64_t v39 = v6[3];
    swift_bridgeObjectRetain();
    unint64_t v40 = sub_21CA30E24(0xCuLL, v38, v39);
    uint64_t v42 = v41;
    uint64_t v44 = v43;
    uint64_t v46 = v45;
    swift_bridgeObjectRelease();
    uint64_t v47 = MEMORY[0x21D4B5450](v40, v42, v44, v46);
    unint64_t v49 = v48;
    swift_bridgeObjectRelease();
    uint64_t v66 = sub_21CA4E450(v47, v49, v67);
    sub_21CB889C0();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v37 + 12) = 2080;
    if (v62) {
      uint64_t v50 = 0x70616E7320736120;
    }
    else {
      uint64_t v50 = 0;
    }
    if (v62) {
      unint64_t v51 = 0xEC000000746F6873;
    }
    else {
      unint64_t v51 = 0xE000000000000000;
    }
    uint64_t v66 = sub_21CA4E450(v50, v51, v67);
    sub_21CB889C0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v37 + 22) = 2080;
    if (v63) {
      uint64_t v52 = 0x4620676E69737520;
    }
    else {
      uint64_t v52 = 0;
    }
    if (v63) {
      unint64_t v53 = 0xEB0000000044464DLL;
    }
    else {
      unint64_t v53 = 0xE000000000000000;
    }
    uint64_t v66 = sub_21CA4E450(v52, v53, v67);
    sub_21CB889C0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_21CA00000, v34, v35, "FMFRefreshController<%s>.init%s%s", (uint8_t *)v37, 0x20u);
    uint64_t v54 = v60;
    swift_arrayDestroy();
    MEMORY[0x21D4B6B70](v54, -1, -1);
    MEMORY[0x21D4B6B70](v37, -1, -1);

    swift_release();
  }
  else
  {
    swift_release_n();

    swift_release();
  }
  sub_21CA2B0D0(v65);
  return v6;
}

uint64_t FMFContactsDataController.init(isSnapshotMode:)(int a1)
{
  uint64_t v2 = v1;
  LODWORD(v43) = a1;
  uint64_t v42 = sub_21CB888B0();
  MEMORY[0x270FA5388](v42);
  v41[1] = (char *)v41 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_21CB88150();
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v5 = sub_21CB888F0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_21CB875D0();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21CB875C0();
  uint64_t v13 = sub_21CB875B0();
  uint64_t v15 = v14;
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  *(void *)(v2 + 16) = v13;
  *(void *)(v2 + 24) = v15;
  *(void *)(v2 + 48) = 0;
  swift_unknownObjectWeakInit();
  *(void *)(v2 + 56) = objc_msgSend(objc_allocWithZone(MEMORY[0x263EFEA58]), sel_init);
  sub_21CA05908(0, (unint64_t *)&qword_267C96F80);
  (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x263F8F138], v5);
  sub_21CB88120();
  uint64_t v45 = MEMORY[0x263F8EE78];
  sub_21CA5DE64((unint64_t *)&qword_267C96F60, MEMORY[0x263F8F0F8]);
  sub_21CA57E34((uint64_t *)&unk_267C96F90);
  sub_21CA3566C((unint64_t *)&qword_267C96F70, (uint64_t *)&unk_267C96F90);
  sub_21CB88A60();
  *(void *)(v2 + 64) = sub_21CB88930();
  uint64_t v16 = v2 + OBJC_IVAR____TtC7FMFCore25FMFContactsDataController_lastContactSearchDate;
  uint64_t v17 = sub_21CB87590();
  uint64_t v18 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56);
  v18(v16, 1, 1, v17);
  v18(v2 + OBJC_IVAR____TtC7FMFCore25FMFContactsDataController_lastContactUpdateDate, 1, 1, v17);
  *(void *)(v2 + OBJC_IVAR____TtC7FMFCore25FMFContactsDataController_contactRecords) = 0;
  *(unsigned char *)(v2 + 32) = v43;
  id v19 = objc_msgSend(self, sel_defaultCenter);
  objc_msgSend(v19, sel_addObserver_selector_name_object_, v2, sel_contactStoreChangedWithNotification_, *MEMORY[0x263EFE118], 0);

  if (qword_267C94990 != -1) {
    swift_once();
  }
  uint64_t v20 = sub_21CB880A0();
  sub_21CA4CC18(v20, (uint64_t)qword_267CA5368);
  swift_retain_n();
  uint64_t v21 = sub_21CB88070();
  os_log_type_t v22 = sub_21CB88880();
  if (os_log_type_enabled(v21, v22))
  {
    uint64_t v23 = swift_slowAlloc();
    uint64_t v24 = swift_slowAlloc();
    uint64_t v43 = v24;
    *(_DWORD *)uint64_t v23 = 136446466;
    uint64_t v44 = *(void *)v2;
    uint64_t v45 = v24;
    sub_21CA57E34((uint64_t *)&unk_267C96FB0);
    uint64_t v25 = sub_21CB88310();
    uint64_t v44 = sub_21CA4E450(v25, v26, &v45);
    sub_21CB889C0();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v23 + 12) = 2080;
    uint64_t v42 = v23 + 14;
    uint64_t v27 = *(void *)(v2 + 16);
    unint64_t v28 = *(void *)(v2 + 24);
    swift_bridgeObjectRetain();
    unint64_t v29 = sub_21CA30E24(0xCuLL, v27, v28);
    uint64_t v31 = v30;
    uint64_t v33 = v32;
    uint64_t v35 = v34;
    swift_bridgeObjectRelease();
    uint64_t v36 = MEMORY[0x21D4B5450](v29, v31, v33, v35);
    unint64_t v38 = v37;
    swift_bridgeObjectRelease();
    uint64_t v44 = sub_21CA4E450(v36, v38, &v45);
    sub_21CB889C0();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_21CA00000, v21, v22, "%{public}s<%s>.init", (uint8_t *)v23, 0x16u);
    uint64_t v39 = v43;
    swift_arrayDestroy();
    MEMORY[0x21D4B6B70](v39, -1, -1);
    MEMORY[0x21D4B6B70](v23, -1, -1);
  }
  else
  {

    swift_release_n();
  }
  return v2;
}

uint64_t destroy for FMFPreferences()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_21CA1B084(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  v1(v2);

  return swift_release();
}

void sub_21CA1B0C8()
{
  sub_21CA1B0D4(*(void *)(v0 + 16), *(void **)(v0 + 24), *(void **)(v0 + 32));
}

void sub_21CA1B0D4(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  if (!a2) {
    id v5 = a3;
  }
  id v7 = v5;
  id v6 = a2;
  sub_21CB31514(v7, a3, 0);
}

uint64_t sub_21CA1B144@<X0>(uint64_t *a1@<X8>)
{
  return sub_21CA1B178(a1);
}

uint64_t sub_21CA1B15C@<X0>(uint64_t *a1@<X8>)
{
  return sub_21CA1B1A8(a1);
}

uint64_t sub_21CA1B178@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_21CA4ECF8();
  *a1 = result;
  return result;
}

uint64_t sub_21CA1B1A8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_21CA4ECF8();
  *a1 = result;
  return result;
}

uint64_t sub_21CA1B1E4(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v4 = v3;
  id v48 = a2;
  uint64_t v49 = a3;
  uint64_t v50 = a1;
  uint64_t v5 = sub_21CA57E34(&qword_267C96C40);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v47 = (uint64_t)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_21CB888F0();
  uint64_t v45 = *(void *)(v7 - 8);
  uint64_t v46 = (uint8_t *)v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v44 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_21CB888B0();
  MEMORY[0x270FA5388](v9);
  uint64_t v10 = sub_21CB88150();
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v11 = sub_21CB875D0();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = (uint64_t *)(v4 + qword_267C97448);
  swift_retain();
  sub_21CB875C0();
  uint64_t v16 = sub_21CB875B0();
  uint64_t v18 = v17;
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  *uint64_t v15 = v16;
  v15[1] = v18;
  uint64_t v43 = v4 + qword_267C97450;
  swift_unknownObjectWeakInit();
  uint64_t v19 = qword_267C97458;
  sub_21CB87760();
  swift_allocObject();
  *(void *)(v4 + v19) = sub_21CB87750();
  uint64_t v20 = qword_267C97460;
  sub_21CA182AC();
  sub_21CB88120();
  uint64_t v52 = MEMORY[0x263F8EE78];
  sub_21CA36588((unint64_t *)&qword_267C96F60, MEMORY[0x263F8F0F8]);
  sub_21CA57E34((uint64_t *)&unk_267C96F90);
  sub_21CA3566C((unint64_t *)&qword_267C96F70, (uint64_t *)&unk_267C96F90);
  sub_21CB88A60();
  (*(void (**)(char *, void, uint8_t *))(v45 + 104))(v44, *MEMORY[0x263F8F130], v46);
  *(void *)(v4 + v20) = sub_21CB88930();
  *(unsigned char *)(v4 + qword_267C97470) = 0;
  sub_21CB87580();
  *(void *)(v4 + qword_267CA53A0 + 8) = 0;
  swift_unknownObjectWeakInit();
  *(void *)(v4 + qword_267CA53A8 + 8) = 0;
  swift_unknownObjectWeakInit();
  *(void *)(v4 + qword_267CA53B0) = 0;
  *(void *)(v4 + qword_267CA53B8) = 0;
  uint64_t v21 = qword_267C97478;
  *(void *)(v4 + v21) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F66178]), sel_init);
  swift_unknownObjectWeakAssign();
  sub_21CA24E80(v49, v4 + qword_267C97468, &qword_267C95400);
  swift_release();
  sub_21CA24E80(v50, v47, &qword_267C96C40);
  swift_retain();
  uint64_t v22 = sub_21CB87790();
  uint64_t v23 = qword_267C94990;
  swift_retain();
  if (v23 != -1) {
    swift_once();
  }
  uint64_t v24 = sub_21CB880A0();
  sub_21CA4CC18(v24, (uint64_t)qword_267CA5368);
  swift_retain_n();
  uint64_t v25 = sub_21CB88070();
  os_log_type_t v26 = sub_21CB88880();
  if (os_log_type_enabled(v25, v26))
  {
    uint64_t v27 = (uint8_t *)swift_slowAlloc();
    uint64_t v28 = swift_slowAlloc();
    uint64_t v47 = v28;
    *(_DWORD *)uint64_t v27 = 136315138;
    uint64_t v52 = v28;
    uint64_t v46 = v27 + 4;
    uint64_t v29 = *(void *)(v22 + qword_267C97448);
    unint64_t v30 = *(void *)(v22 + qword_267C97448 + 8);
    swift_bridgeObjectRetain();
    unint64_t v31 = sub_21CA30E24(0xCuLL, v29, v30);
    uint64_t v33 = v32;
    uint64_t v35 = v34;
    uint64_t v37 = v36;
    swift_bridgeObjectRelease();
    uint64_t v38 = MEMORY[0x21D4B5450](v31, v33, v35, v37);
    unint64_t v40 = v39;
    swift_bridgeObjectRelease();
    uint64_t v51 = sub_21CA4E450(v38, v40, &v52);
    sub_21CB889C0();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_21CA00000, v25, v26, "FMFServerInteractionController<%s>.init", v27, 0xCu);
    uint64_t v41 = v47;
    swift_arrayDestroy();
    MEMORY[0x21D4B6B70](v41, -1, -1);
    MEMORY[0x21D4B6B70](v27, -1, -1);

    swift_release();
  }
  else
  {

    swift_release_n();
  }
  sub_21CA1B88C(v49, &qword_267C95400);
  sub_21CA1B88C(v50, &qword_267C96C40);
  return v22;
}

uint64_t sub_21CA1B88C(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_21CA57E34(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

char *sub_21CA1B8E8(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  int v55 = a2;
  uint64_t v56 = a1;
  uint64_t v4 = sub_21CB888F0();
  uint64_t v53 = *(void *)(v4 - 8);
  uint64_t v54 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v52 = (char *)v50 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = sub_21CB888B0();
  MEMORY[0x270FA5388](v51);
  v50[1] = (char *)v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_21CB88150();
  MEMORY[0x270FA5388](v7 - 8);
  v50[0] = (char *)v50 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_21CB87870();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)v50 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_21CB875D0();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)v50 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = (uint64_t *)&v3[OBJC_IVAR____TtC7FMFCore25FMFGenericResponseHandler_identifier];
  uint64_t v18 = v3;
  sub_21CB875C0();
  uint64_t v19 = sub_21CB875B0();
  uint64_t v21 = v20;
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  *uint64_t v17 = v19;
  v17[1] = v21;
  *(void *)&v18[OBJC_IVAR____TtC7FMFCore25FMFGenericResponseHandler_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v18[OBJC_IVAR____TtC7FMFCore25FMFGenericResponseHandler_fmfSession] = 0;
  *(void *)&v18[OBJC_IVAR____TtC7FMFCore25FMFGenericResponseHandler_fences] = MEMORY[0x263F8EE88];
  *(void *)&v18[OBJC_IVAR____TtC7FMFCore25FMFGenericResponseHandler_fenceUpdateStream] = 0;
  uint64_t v22 = OBJC_IVAR____TtC7FMFCore25FMFGenericResponseHandler_fmlSession;
  sub_21CB87E20();
  (*(void (**)(char *, void, uint64_t))(v10 + 104))(v12, *MEMORY[0x263F3CCF8], v9);
  uint64_t v23 = sub_21CB87CF0();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  *(void *)&v18[v22] = v23;
  uint64_t v24 = MEMORY[0x263F8EE78];
  *(void *)&v18[OBJC_IVAR____TtC7FMFCore25FMFGenericResponseHandler_fmlFences] = MEMORY[0x263F8EE78];
  uint64_t v25 = OBJC_IVAR____TtC7FMFCore25FMFGenericResponseHandler_isSnapshotMode;
  v18[OBJC_IVAR____TtC7FMFCore25FMFGenericResponseHandler_isSnapshotMode] = 0;
  *(void *)&v18[OBJC_IVAR____TtC7FMFCore25FMFGenericResponseHandler_locationAlertsOnMeByMe] = 0;
  *(void *)&v18[OBJC_IVAR____TtC7FMFCore25FMFGenericResponseHandler_locationAlertsOnMeByFriends] = 0;
  *(void *)&v18[OBJC_IVAR____TtC7FMFCore25FMFGenericResponseHandler_locationAlertsOnFriendsByMe] = 0;
  *(void *)&v18[OBJC_IVAR____TtC7FMFCore25FMFGenericResponseHandler_locationAlertsOnFriendsByFriends] = 0;
  uint64_t v26 = OBJC_IVAR____TtC7FMFCore25FMFGenericResponseHandler_secureLocationsManager;
  *(void *)&v18[v26] = objc_msgSend(objc_allocWithZone(MEMORY[0x263F66178]), sel_init);
  *(void *)&v18[OBJC_IVAR____TtC7FMFCore25FMFGenericResponseHandler_dataManager] = v56;
  LOBYTE(v10) = v55;
  v18[v25] = v55;
  type metadata accessor for FMLocationShifter();
  swift_allocObject();
  swift_retain();
  *(void *)&v18[OBJC_IVAR____TtC7FMFCore25FMFGenericResponseHandler_locationShifter] = FMLocationShifter.init()();
  sub_21CA05908(0, (unint64_t *)&qword_267C96F80);
  sub_21CB88130();
  uint64_t v59 = v24;
  sub_21CB068B4((unint64_t *)&qword_267C96F60, MEMORY[0x263F8F0F8]);
  sub_21CA57E34((uint64_t *)&unk_267C96F90);
  sub_21CA3566C((unint64_t *)&qword_267C96F70, (uint64_t *)&unk_267C96F90);
  sub_21CB88A60();
  (*(void (**)(char *, void, uint64_t))(v53 + 104))(v52, *MEMORY[0x263F8F130], v54);
  *(void *)&v18[OBJC_IVAR____TtC7FMFCore25FMFGenericResponseHandler_updateQueue] = sub_21CB88930();

  uint64_t v27 = (objc_class *)type metadata accessor for FMFGenericResponseHandler();
  v58.receiver = v18;
  v58.super_class = v27;
  id v28 = objc_msgSendSuper2(&v58, sel_init);
  if ((v10 & 1) == 0) {
    sub_21CB01DB0();
  }
  if (qword_267C94990 != -1) {
    swift_once();
  }
  uint64_t v29 = sub_21CB880A0();
  sub_21CA4CC18(v29, (uint64_t)qword_267CA5368);
  unint64_t v30 = (char *)v28;
  unint64_t v31 = sub_21CB88070();
  os_log_type_t v32 = sub_21CB88880();
  if (os_log_type_enabled(v31, v32))
  {
    uint64_t v33 = swift_slowAlloc();
    uint64_t v34 = swift_slowAlloc();
    uint64_t v59 = v34;
    *(_DWORD *)uint64_t v33 = 136315394;
    uint64_t v54 = v33 + 4;
    uint64_t v35 = *(void *)&v30[OBJC_IVAR____TtC7FMFCore25FMFGenericResponseHandler_identifier];
    unint64_t v36 = *(void *)&v30[OBJC_IVAR____TtC7FMFCore25FMFGenericResponseHandler_identifier + 8];
    swift_bridgeObjectRetain();
    unint64_t v37 = sub_21CA30E24(0xCuLL, v35, v36);
    uint64_t v39 = v38;
    uint64_t v41 = v40;
    uint64_t v43 = v42;
    swift_bridgeObjectRelease();
    uint64_t v44 = MEMORY[0x21D4B5450](v37, v39, v41, v43);
    unint64_t v46 = v45;
    swift_bridgeObjectRelease();
    uint64_t v57 = sub_21CA4E450(v44, v46, &v59);
    sub_21CB889C0();

    swift_bridgeObjectRelease();
    *(_WORD *)(v33 + 12) = 2080;
    if (v55) {
      uint64_t v47 = 0x70616E7320736120;
    }
    else {
      uint64_t v47 = 0;
    }
    if (v55) {
      unint64_t v48 = 0xEC000000746F6873;
    }
    else {
      unint64_t v48 = 0xE000000000000000;
    }
    uint64_t v57 = sub_21CA4E450(v47, v48, &v59);
    sub_21CB889C0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_21CA00000, v31, v32, "FMFGenericResponseHandler<%s>.init%s", (uint8_t *)v33, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x21D4B6B70](v34, -1, -1);
    MEMORY[0x21D4B6B70](v33, -1, -1);

    swift_release();
  }
  else
  {

    swift_release();
  }

  return v30;
}

uint64_t destroy for SecureFriend()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_21CA1C098(uint64_t a1)
{
  unint64_t v2 = sub_21CA4A560();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_21CA1C0D4(uint64_t a1, uint64_t a2)
{
  v3[23] = a2;
  v3[24] = v2;
  v3[22] = a1;
  sub_21CA57E34(&qword_267C95028);
  v3[25] = swift_task_alloc();
  sub_21CA57E34((uint64_t *)&unk_267C951B0);
  v3[26] = swift_task_alloc();
  uint64_t v4 = sub_21CB880A0();
  v3[27] = v4;
  v3[28] = *(void *)(v4 - 8);
  v3[29] = swift_task_alloc();
  v3[30] = swift_task_alloc();
  v3[31] = swift_task_alloc();
  v3[32] = swift_task_alloc();
  uint64_t v5 = sub_21CB87840();
  v3[33] = v5;
  v3[34] = *(void *)(v5 - 8);
  v3[35] = swift_task_alloc();
  v3[36] = swift_task_alloc();
  v3[37] = swift_task_alloc();
  v3[38] = swift_task_alloc();
  v3[39] = swift_task_alloc();
  v3[40] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_21CA41F74, v2, 0);
}

void sub_21CA1C2BC()
{
  uint64_t v1 = *(void *)(v0 + 48);
  if (*(unsigned char *)(v1 + OBJC_IVAR____TtC7FMFCore23FMFManagerConfiguration_useCache) == 1
    && (*(unsigned char *)(v1 + OBJC_IVAR____TtC7FMFCore23FMFManagerConfiguration_useOptimizedFetch) & 1) == 0)
  {
    uint64_t v2 = *(void *)(v0 + 696);
    if (!v2)
    {
LABEL_6:
      os_unfair_lock_lock((os_unfair_lock_t)(v0 + 72));
      memcpy(__dst, (const void *)(v0 + 80), sizeof(__dst));
      sub_21CAC940C(__dst);
      sub_21CA6E2F0((uint64_t)v29);
      uint64_t v7 = MEMORY[0x263F8EE78];
      __src[0] = MEMORY[0x263F8EE78];
      __src[1] = MEMORY[0x263F8EE78];
      __src[2] = MEMORY[0x263F8EE78];
      __src[3] = MEMORY[0x263F8EE78];
      __src[4] = MEMORY[0x263F8EE78];
      __src[5] = MEMORY[0x263F8EE78];
      __src[6] = MEMORY[0x263F8EE78];
      __src[7] = MEMORY[0x263F8EE78];
      memset(&__src[9], 0, 40);
      LOBYTE(__src[14]) = 1;
      __src[8] = MEMORY[0x263F8EE78];
      sub_21CA26A4C((uint64_t)v29, (uint64_t)&__src[15], (uint64_t *)&unk_267C96EE0);
      memset(&__src[45], 0, 57);
      __src[53] = v7;
      __src[54] = v7;
      __src[55] = v7;
      __src[56] = MEMORY[0x263F8EE80];
      memcpy((void *)(v0 + 80), __src, 0x1C8uLL);
      os_unfair_lock_unlock((os_unfair_lock_t)(v0 + 72));
      *(unsigned char *)(v0 + 704) = 0;
      return;
    }
    sub_21CB2A73C((uint64_t)v29);
    sub_21CA26A4C((uint64_t)v29, (uint64_t)v28, &qword_267C97258);
    uint64_t v3 = *(NSObject **)(v2 + 16);
    uint64_t v4 = swift_allocObject();
    *(void *)(v4 + 16) = v2;
    *(void *)(v4 + 24) = v28;
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = sub_21CA62E80;
    *(void *)(v5 + 24) = v4;
    uint64_t v26 = sub_21CA18880;
    uint64_t v27 = v5;
    uint64_t aBlock = MEMORY[0x263EF8330];
    uint64_t v23 = 1107296256;
    uint64_t v24 = sub_21CA18830;
    uint64_t v25 = &unk_26CD6E848;
    uint64_t v6 = _Block_copy(&aBlock);
    swift_retain_n();
    swift_retain();
    swift_release();
    dispatch_sync(v3, v6);
    _Block_release(v6);
    LOBYTE(v3) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    if (v3)
    {
      __break(1u);
    }
    else
    {
      sub_21CA26A4C((uint64_t)v28, (uint64_t)__dst, &qword_267C97258);
      swift_release();
      swift_release();
      sub_21CA26A4C((uint64_t)__dst, (uint64_t)__src, &qword_267C97258);
      if (sub_21CAEE6D4(__src) == 1) {
        goto LABEL_6;
      }
      os_unfair_lock_lock((os_unfair_lock_t)(v0 + 72));
      memcpy(v28, (const void *)(v0 + 80), sizeof(v28));
      sub_21CAC940C(v28);
      memcpy((void *)(v0 + 80), __src, 0x1C8uLL);
      sub_21CA2D014(__src);
      os_unfair_lock_unlock((os_unfair_lock_t)(v0 + 72));
      *(void *)(v0 + 680) = __src[0];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(v0 + 544) = __src[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(v0 + 560) = __src[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(v0 + 568) = __src[4];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(v0 + 640) = __src[5];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(v0 + 648) = __src[6];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(v0 + 656) = __src[7];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(v0 + 664) = __src[8];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v8 = swift_bridgeObjectRetain();
      sub_21CA65860(v8);
      uint64_t v9 = swift_bridgeObjectRetain();
      sub_21CA658D4(v9);
      uint64_t v10 = swift_bridgeObjectRetain();
      sub_21CA65914(v10);
      *(void *)(v0 + 720) = __src[56];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v11 = __src[11];
      if (__src[11])
      {
        uint64_t v12 = __src[12];
        uint64_t v13 = *(void *)(v0 + 744);
        uint64_t v14 = *(void *)(v0 + 752);
        uint64_t v15 = *(void *)(v0 + 760);
        *(_OWORD *)(v0 + 744) = *(_OWORD *)&__src[9];
        *(void *)(v0 + 760) = v11;
        *(void *)(v0 + 768) = v12;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_21CA59D84(v13, v14, v15);
      }
      if (__src[45])
      {
        char v16 = __src[52];
        uint64_t v17 = __src[51];
        uint64_t v18 = __src[46];
        uint64_t v20 = *(void *)(v0 + 1032);
        *(void *)(v0 + 1032) = __src[45];
        *(void *)(v0 + 1040) = v18;
        long long v19 = *(_OWORD *)&__src[49];
        *(_OWORD *)(v0 + 1048) = *(_OWORD *)&__src[47];
        *(_OWORD *)(v0 + 1064) = v19;
        *(void *)(v0 + 1080) = v17;
        *(unsigned char *)(v0 + 1088) = v16;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_21CA2D658(v20);
      }
      if (LOBYTE(__src[14]) != 1)
      {
        uint64_t aBlock = __src[13];
        LOBYTE(v23) = 0;
        sub_21CA13C10(&aBlock);
      }
      sub_21CB2A7C8((uint64_t)__dst);
      sub_21CA26A4C((uint64_t)&__src[15], (uint64_t)&aBlock, (uint64_t *)&unk_267C96EE0);
      if (sub_21CA6E2D4((uint64_t)&aBlock) != 1)
      {
        sub_21CA26A4C((uint64_t)&__src[15], (uint64_t)v21, (uint64_t *)&unk_267C96EE0);
        sub_21CA157F0((uint64_t)v21);
      }
      *(unsigned char *)(v0 + 704) = 1;
    }
  }
}

uint64_t initializeWithCopy for FMFPreferences(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_21CA1C888(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v5 = v4;
  int v72 = a4;
  uint64_t v70 = a1;
  uint64_t v71 = a3;
  uint64_t v69 = a2;
  uint64_t v6 = sub_21CA57E34(&qword_267C97230);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v61 = (uint64_t)&v58 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_21CA57E34(&qword_267C97238);
  uint64_t v58 = *(void *)(v8 - 8);
  uint64_t v59 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v60 = (uint64_t)&v58 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = sub_21CB888F0();
  uint64_t v74 = *(void *)(v68 - 8);
  MEMORY[0x270FA5388](v68);
  uint64_t v73 = (char *)&v58 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_21CB888B0();
  MEMORY[0x270FA5388](v11);
  objc_super v67 = (char *)&v58 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_21CB88150();
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v14 = sub_21CB875D0();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v58 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21CB875C0();
  uint64_t v18 = sub_21CB875B0();
  uint64_t v20 = v19;
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  *(void *)(v5 + 16) = v18;
  *(void *)(v5 + 24) = v20;
  *(void *)(v5 + 40) = 0;
  swift_unknownObjectWeakInit();
  unint64_t v66 = sub_21CA182AC();
  sub_21CB88130();
  uint64_t v21 = MEMORY[0x263F8EE78];
  v78[0] = MEMORY[0x263F8EE78];
  uint64_t v64 = sub_21CA36540((unint64_t *)&qword_267C96F60, MEMORY[0x263F8F0F8]);
  uint64_t v63 = sub_21CA57E34((uint64_t *)&unk_267C96F90);
  uint64_t v65 = sub_21CA356BC((unint64_t *)&qword_267C96F70, (uint64_t *)&unk_267C96F90);
  sub_21CB88A60();
  unsigned int v62 = *MEMORY[0x263F8F130];
  uint64_t v22 = *(void (**)(char *))(v74 + 104);
  v74 += 104;
  uint64_t v23 = v68;
  v22(v73);
  *(void *)(v5 + 56) = sub_21CB88930();
  sub_21CB88120();
  v78[0] = v21;
  sub_21CB88A60();
  ((void (*)(char *, void, uint64_t))v22)(v73, v62, v23);
  uint64_t v24 = v71;
  *(void *)(v5 + 64) = sub_21CB88930();
  sub_21CA6E2F0((uint64_t)v77);
  v78[0] = v21;
  v78[1] = v21;
  v78[2] = v21;
  v78[3] = v21;
  v78[4] = v21;
  v78[5] = v21;
  v78[6] = v21;
  v78[7] = v21;
  memset(&v78[9], 0, 40);
  v78[8] = v21;
  LOBYTE(v78[14]) = 1;
  sub_21CA26A4C((uint64_t)v77, (uint64_t)&v78[15], (uint64_t *)&unk_267C96EE0);
  memset(&v78[45], 0, 57);
  v78[53] = v21;
  v78[54] = v21;
  uint64_t v25 = MEMORY[0x263F8EE80];
  v78[55] = v21;
  v78[56] = MEMORY[0x263F8EE80];
  *(_DWORD *)(v5 + 72) = 0;
  memcpy((void *)(v5 + 80), v78, 0x1C8uLL);
  type metadata accessor for FMFPendingDataManager();
  uint64_t v26 = swift_allocObject();
  *(void *)(v26 + 16) = v25;
  *(void *)(v26 + 24) = v25;
  *(void *)(v26 + 32) = v25;
  *(_OWORD *)(v26 + 40) = 0u;
  *(_OWORD *)(v26 + 56) = 0u;
  *(_OWORD *)(v26 + 72) = 0u;
  *(_OWORD *)(v26 + 88) = 0u;
  *(_OWORD *)(v26 + 104) = 0u;
  *(_OWORD *)(v26 + 113) = 0u;
  *(void *)(v5 + 536) = v26;
  *(void *)(v5 + 544) = v21;
  *(void *)(v5 + 552) = v21;
  *(void *)(v5 + 560) = v21;
  *(void *)(v5 + 568) = v21;
  *(void *)(v5 + 576) = 0;
  *(void *)(v5 + 584) = v21;
  *(void *)(v5 + 592) = v21;
  *(void *)(v5 + 600) = v21;
  *(void *)(v5 + 608) = v21;
  *(void *)(v5 + 616) = v21;
  *(_OWORD *)(v5 + 624) = 0u;
  *(void *)(v5 + 640) = v21;
  *(void *)(v5 + 648) = v21;
  *(void *)(v5 + 656) = v21;
  *(void *)(v5 + 664) = v21;
  *(unsigned char *)(v5 + 672) = 0;
  *(void *)(v5 + 680) = v21;
  *(_OWORD *)(v5 + 688) = 0u;
  *(unsigned char *)(v5 + 704) = 0;
  *(void *)(v5 + 720) = v25;
  *(void *)(v5 + 728) = v25;
  *(_OWORD *)(v5 + 744) = 0u;
  *(_OWORD *)(v5 + 760) = 0u;
  *(void *)(v5 + 776) = 0;
  *(unsigned char *)(v5 + 784) = 1;
  sub_21CA26A4C((uint64_t)v77, v5 + 792, (uint64_t *)&unk_267C96EE0);
  *(_OWORD *)(v5 + 1032) = 0u;
  *(_OWORD *)(v5 + 1048) = 0u;
  *(_OWORD *)(v5 + 1064) = 0u;
  *(_OWORD *)(v5 + 1073) = 0u;
  *(void *)(v5 + 1096) = v21;
  *(void *)(v5 + 1104) = v21;
  *(void *)(v5 + 1112) = v21;
  *(void *)(v5 + 736) = v24;
  *(unsigned char *)(v5 + 672) = v72;
  uint64_t v27 = v70;
  *(void *)(v5 + 48) = v70;
  uint64_t v28 = v69;
  if (v69)
  {
    swift_retain();
    swift_retain();
    uint64_t v29 = v28;
  }
  else
  {
    type metadata accessor for FMFContactsDataController();
    swift_allocObject();
    swift_retain();
    swift_retain();
    uint64_t v29 = FMFContactsDataController.init(isSnapshotMode:)(v72 & 1);
  }
  *(void *)(v5 + 712) = v29;
  if (*(unsigned char *)(v27 + OBJC_IVAR____TtC7FMFCore23FMFManagerConfiguration_useCache) == 1
    && (*(unsigned char *)(v27 + OBJC_IVAR____TtC7FMFCore23FMFManagerConfiguration_useOptimizedFetch) & 1) == 0)
  {
    swift_retain();
    uint64_t v30 = v60;
    sub_21CA097B8(0xD000000000000011, 0x800000021CB976C0, 0x4D61746144464D46, 0xEE00726567616E61, v60);
    uint64_t v31 = *(void *)(v27 + OBJC_IVAR____TtC7FMFCore23FMFManagerConfiguration_cacheDirectory);
    uint64_t v32 = *(void *)(v27 + OBJC_IVAR____TtC7FMFCore23FMFManagerConfiguration_cacheDirectory + 8);
    uint64_t v33 = v61;
    sub_21CA24E80(v30, v61, &qword_267C97238);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v58 + 56))(v33, 0, 1, v59);
    sub_21CA57E34(&qword_267C97290);
    swift_allocObject();
    swift_bridgeObjectRetain();
    uint64_t v34 = sub_21CA10AFC(v31, v32, 0xD000000000000014, 0x800000021CB976E0, v33);
    sub_21CA1B88C(v30, &qword_267C97238);
    *(void *)(v5 + 696) = v34;
  }
  else
  {
    *(void *)(v5 + 696) = 0;
    swift_retain();
  }
  swift_release();
  uint64_t v35 = *(NSObject **)(v5 + 56);
  uint64_t v36 = swift_allocObject();
  *(void *)(v36 + 16) = sub_21CA6593C;
  *(void *)(v36 + 24) = v5;
  v76[4] = (uint64_t)sub_21CA6257C;
  v76[5] = v36;
  v76[0] = MEMORY[0x263EF8330];
  v76[1] = 1107296256;
  v76[2] = (uint64_t)sub_21CA18830;
  v76[3] = (uint64_t)&unk_26CD6F2C0;
  unint64_t v37 = _Block_copy(v76);
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v35, v37);
  _Block_release(v37);
  LOBYTE(v35) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v35)
  {
    __break(1u);
  }
  else
  {
    *(void *)(*(void *)(v5 + 712) + 48) = &off_26CD6E560;
    swift_unknownObjectWeakAssign();
    if (qword_267C94990 == -1) {
      goto LABEL_10;
    }
  }
  swift_once();
LABEL_10:
  uint64_t v38 = sub_21CB880A0();
  sub_21CA4CC18(v38, (uint64_t)qword_267CA5368);
  swift_retain_n();
  uint64_t v39 = sub_21CB88070();
  os_log_type_t v40 = sub_21CB88880();
  if (os_log_type_enabled(v39, v40))
  {
    uint64_t v41 = swift_slowAlloc();
    uint64_t v74 = swift_slowAlloc();
    v76[0] = v74;
    *(_DWORD *)uint64_t v41 = 136315394;
    uint64_t v73 = (char *)(v41 + 4);
    uint64_t v42 = *(void *)(v5 + 16);
    unint64_t v43 = *(void *)(v5 + 24);
    swift_bridgeObjectRetain();
    unint64_t v44 = sub_21CA30E24(0xCuLL, v42, v43);
    uint64_t v46 = v45;
    uint64_t v48 = v47;
    uint64_t v50 = v49;
    swift_bridgeObjectRelease();
    uint64_t v51 = MEMORY[0x21D4B5450](v44, v46, v48, v50);
    unint64_t v53 = v52;
    swift_bridgeObjectRelease();
    uint64_t v75 = sub_21CA4E450(v51, v53, v76);
    sub_21CB889C0();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v41 + 12) = 2080;
    if (v72) {
      uint64_t v54 = 0x70616E7320736120;
    }
    else {
      uint64_t v54 = 0;
    }
    if (v72) {
      unint64_t v55 = 0xEC000000746F6873;
    }
    else {
      unint64_t v55 = 0xE000000000000000;
    }
    uint64_t v75 = sub_21CA4E450(v54, v55, v76);
    sub_21CB889C0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_21CA00000, v39, v40, "FMFDataManager<%s>.init%s", (uint8_t *)v41, 0x16u);
    uint64_t v56 = v74;
    swift_arrayDestroy();
    MEMORY[0x21D4B6B70](v56, -1, -1);
    MEMORY[0x21D4B6B70](v41, -1, -1);
    swift_release();

    swift_release();
    swift_release();
  }
  else
  {

    swift_release();
    swift_release();
    swift_release_n();
  }
  swift_release();
  return v5;
}

uint64_t sub_21CA1D3C4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FMFDevice.init(from:)(a1, a2);
}

uint64_t sub_21CA1D3DC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FMFConfig.init(from:)(a1, a2);
}

uint64_t FMFConfig.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_21CA57E34(&qword_267C95E00);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21CA2B2CC(a1, a1[3]);
  sub_21CA1DB34();
  sub_21CB890B0();
  if (!v2)
  {
    char v57 = 0;
    uint64_t v9 = sub_21CB88E10();
    char v57 = 1;
    uint64_t v10 = sub_21CB88E10();
    char v57 = 2;
    uint64_t v56 = sub_21CB88E10();
    char v57 = 3;
    sub_21CB88E00();
    uint64_t v12 = v11;
    char v57 = 4;
    uint64_t v55 = sub_21CB88E10();
    char v57 = 5;
    uint64_t v54 = sub_21CB88E10();
    char v57 = 6;
    int v53 = sub_21CB88DF0();
    char v57 = 7;
    uint64_t v52 = sub_21CB88E10();
    char v57 = 8;
    uint64_t v51 = sub_21CB88E10();
    char v57 = 9;
    uint64_t v50 = sub_21CB88E10();
    char v57 = 10;
    uint64_t v49 = sub_21CB88E10();
    char v57 = 11;
    uint64_t v48 = sub_21CB88E10();
    char v57 = 12;
    int v47 = sub_21CB88DF0();
    char v57 = 13;
    uint64_t v46 = sub_21CB88E10();
    char v57 = 14;
    uint64_t v45 = sub_21CB88E10();
    char v57 = 15;
    uint64_t v44 = sub_21CB88E10();
    char v57 = 16;
    uint64_t v43 = sub_21CB88E10();
    char v57 = 17;
    uint64_t v13 = sub_21CB88DC0();
    uint64_t v15 = 20;
    if ((v14 & 1) == 0) {
      uint64_t v15 = v13;
    }
    uint64_t v42 = v15;
    char v57 = 18;
    uint64_t v41 = sub_21CB88E10();
    char v57 = 19;
    uint64_t v40 = sub_21CB88E10();
    char v57 = 20;
    uint64_t v39 = sub_21CB88E10();
    char v57 = 21;
    uint64_t v38 = sub_21CB88E10();
    char v57 = 22;
    uint64_t v37 = sub_21CB88E10();
    char v57 = 23;
    uint64_t v36 = sub_21CB88E10();
    char v57 = 24;
    uint64_t v35 = sub_21CB88E10();
    char v57 = 25;
    int v34 = sub_21CB88DF0();
    char v57 = 26;
    int v33 = sub_21CB88DF0();
    char v57 = 27;
    uint64_t v32 = sub_21CB88E10();
    char v57 = 28;
    uint64_t v31 = sub_21CB88E10();
    char v57 = 29;
    uint64_t v30 = sub_21CB88E10();
    char v57 = 30;
    uint64_t v17 = sub_21CB88E10();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    char v18 = v53 & 1;
    char v19 = v47 & 1;
    char v20 = v34 & 1;
    *(void *)a2 = v9;
    *(void *)(a2 + 8) = v10;
    char v21 = v33 & 1;
    *(void *)(a2 + 16) = v56;
    *(void *)(a2 + 24) = v12;
    uint64_t v22 = v54;
    *(void *)(a2 + 32) = v55;
    *(void *)(a2 + 40) = v22;
    *(unsigned char *)(a2 + 48) = v18;
    *(void *)(a2 + 56) = v52;
    *(void *)(a2 + 64) = v51;
    *(void *)(a2 + 72) = v50;
    *(void *)(a2 + 80) = v49;
    *(void *)(a2 + 88) = v48;
    *(unsigned char *)(a2 + 96) = v19;
    uint64_t v23 = v45;
    *(void *)(a2 + 104) = v46;
    *(void *)(a2 + 112) = v23;
    uint64_t v24 = v43;
    *(void *)(a2 + 120) = v44;
    *(void *)(a2 + 128) = v24;
    uint64_t v25 = v41;
    *(void *)(a2 + 136) = v42;
    *(void *)(a2 + 144) = v25;
    uint64_t v26 = v39;
    *(void *)(a2 + 152) = v40;
    *(void *)(a2 + 160) = v26;
    uint64_t v27 = v37;
    *(void *)(a2 + 168) = v38;
    *(void *)(a2 + 176) = v27;
    uint64_t v28 = v35;
    *(void *)(a2 + 184) = v36;
    *(void *)(a2 + 192) = v28;
    *(unsigned char *)(a2 + 200) = v20;
    *(unsigned char *)(a2 + 201) = v21;
    uint64_t v29 = v31;
    *(void *)(a2 + 208) = v32;
    *(void *)(a2 + 216) = v29;
    *(void *)(a2 + 224) = v30;
    *(void *)(a2 + 232) = v17;
  }
  return sub_21CA2B0D0((uint64_t)a1);
}

unint64_t sub_21CA1DB34()
{
  unint64_t result = qword_267C95E08;
  if (!qword_267C95E08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C95E08);
  }
  return result;
}

void sub_21CA1DB88(void *a1, uint64_t a2)
{
  uint64_t v70 = a2;
  uint64_t v3 = sub_21CB877B0();
  uint64_t v67 = *(void *)(v3 - 8);
  uint64_t v68 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v69 = (char *)v61 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_21CB87830();
  uint64_t v66 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v74 = (char *)v61 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_21CA57E34(&qword_267C97230);
  MEMORY[0x270FA5388](v7 - 8);
  int v72 = (char *)v61 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v73 = sub_21CA57E34(&qword_267C97238);
  uint64_t v76 = *(void *)(v73 - 8);
  MEMORY[0x270FA5388](v73);
  uint64_t v10 = (char *)v61 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_21CB87480();
  uint64_t v78 = *(void *)(v11 - 8);
  uint64_t v79 = v11;
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)v61 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_267C94990 != -1) {
    swift_once();
  }
  uint64_t v77 = v10;
  uint64_t v75 = v5;
  uint64_t v14 = sub_21CB880A0();
  uint64_t v80 = sub_21CA4CC18(v14, (uint64_t)qword_267CA5368);
  uint64_t v15 = sub_21CB88070();
  os_log_type_t v16 = sub_21CB88880();
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v17 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v17 = 0;
    _os_log_impl(&dword_21CA00000, v15, v16, "FMDiskIO: read from disk", v17, 2u);
    MEMORY[0x21D4B6B70](v17, -1, -1);
  }

  id v18 = objc_msgSend(self, sel_defaultManager);
  uint64_t v20 = a1[3];
  unint64_t v19 = a1[4];
  uint64_t v21 = a1[5];
  uint64_t v22 = a1[6];
  uint64_t v83 = v20;
  unint64_t v84 = v19;
  swift_bridgeObjectRetain();
  sub_21CB883D0();
  uint64_t v23 = (void *)sub_21CB882C0();
  swift_bridgeObjectRelease();
  unsigned __int8 v24 = objc_msgSend(v18, sel_fileExistsAtPath_, v23);

  if (v24)
  {
    uint64_t v65 = a1;
    uint64_t v83 = v20;
    unint64_t v84 = v19;
    swift_bridgeObjectRetain();
    sub_21CB883D0();
    sub_21CB87420();
    swift_bridgeObjectRelease();
    uint64_t v29 = sub_21CB87490();
    unint64_t v31 = v30;
    uint64_t v32 = v20;
    uint64_t v71 = v22;
    (*(void (**)(char *, uint64_t))(v78 + 8))(v13, v79);
    int v33 = v65;
    swift_retain();
    sub_21CA1E93C(v29, v31);
    swift_retain();
    sub_21CA1E93C(v29, v31);
    uint64_t v34 = v29;
    uint64_t v35 = sub_21CB88070();
    os_log_type_t v36 = sub_21CB88880();
    int v37 = v36;
    BOOL v38 = os_log_type_enabled(v35, v36);
    unint64_t v63 = v31;
    uint64_t v64 = v21;
    v61[1] = v32;
    uint64_t v62 = v34;
    v61[0] = v19;
    if (v38)
    {
      uint64_t v39 = swift_slowAlloc();
      LODWORD(v79) = v37;
      uint64_t v40 = v39;
      uint64_t v78 = swift_slowAlloc();
      v82[0] = v78;
      *(_DWORD *)uint64_t v40 = 136315394;
      uint64_t v83 = v32;
      unint64_t v84 = v19;
      swift_bridgeObjectRetain();
      uint64_t v41 = v35;
      sub_21CB883D0();
      uint64_t v83 = sub_21CA4E450(v83, v84, v82);
      sub_21CB889C0();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v40 + 12) = 2080;
      unint64_t v42 = v63;
      uint64_t v43 = sub_21CB874A0();
      uint64_t v83 = sub_21CA4E450(v43, v44, v82);
      sub_21CB889C0();
      int v33 = v65;
      swift_bridgeObjectRelease();
      sub_21CA36618(v34, v42);
      sub_21CA36618(v34, v42);
      _os_log_impl(&dword_21CA00000, v35, (os_log_type_t)v79, "FMDiskIO: file: %s data: %s", (uint8_t *)v40, 0x16u);
      uint64_t v45 = v78;
      swift_arrayDestroy();
      MEMORY[0x21D4B6B70](v45, -1, -1);
      MEMORY[0x21D4B6B70](v40, -1, -1);
    }
    else
    {
      swift_release_n();
      sub_21CA36618(v34, v31);
      sub_21CA36618(v34, v31);
    }
    int v47 = v74;
    uint64_t v46 = v75;
    uint64_t v49 = (uint64_t)v72;
    uint64_t v48 = v73;
    sub_21CB872E0();
    swift_allocObject();
    sub_21CB872D0();
    sub_21CA24E80((uint64_t)v33 + *(void *)(*v33 + 128), v49, &qword_267C97230);
    int v50 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v76 + 48))(v49, 1, v48);
    uint64_t v51 = (uint64_t)v77;
    if (v50 == 1)
    {
      sub_21CA1B88C(v49, &qword_267C97230);
      sub_21CA65388();
      uint64_t v52 = v62;
      unint64_t v53 = v63;
      sub_21CB872C0();
      sub_21CA36618(v52, v53);
      swift_release();
    }
    else
    {
      sub_21CA26A4C(v49, (uint64_t)v77, &qword_267C97238);
      sub_21CA36540(&qword_267C97268, MEMORY[0x263F3CC18]);
      sub_21CB872C0();
      uint64_t v56 = v69;
      sub_21CB877C0();
      char v57 = v56;
      uint64_t v58 = sub_21CB87820();
      unint64_t v60 = v59;
      (*(void (**)(char *, uint64_t))(v67 + 8))(v57, v68);
      sub_21CA65388();
      sub_21CB872C0();
      swift_release();
      sub_21CA36618(v58, v60);
      sub_21CA36618(v62, v63);
      (*(void (**)(char *, uint64_t))(v66 + 8))(v47, v46);
      sub_21CA1B88C(v51, &qword_267C97238);
    }
    nullsub_1(&v83, v54);
    sub_21CA26A4C((uint64_t)&v83, (uint64_t)v81, &qword_267C97258);
    uint64_t v55 = v70;
    sub_21CA26A4C(v70, (uint64_t)v82, &qword_267C97258);
    sub_21CA26A4C((uint64_t)v81, v55, &qword_267C97258);
    sub_21CB2A7C8((uint64_t)v82);
  }
  else
  {
    uint64_t v71 = v22;
    uint64_t v64 = v21;
    swift_retain_n();
    uint64_t v25 = sub_21CB88070();
    os_log_type_t v26 = sub_21CB88860();
    if (os_log_type_enabled(v25, v26))
    {
      uint64_t v27 = (uint8_t *)swift_slowAlloc();
      uint64_t v28 = swift_slowAlloc();
      v82[0] = v28;
      *(_DWORD *)uint64_t v27 = 136315138;
      uint64_t v80 = (uint64_t)(v27 + 4);
      uint64_t v83 = v20;
      unint64_t v84 = v19;
      swift_bridgeObjectRetain();
      sub_21CB883D0();
      uint64_t v83 = sub_21CA4E450(v83, v84, v82);
      sub_21CB889C0();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_21CA00000, v25, v26, "FMDiskIO: Disk archive does not exist at: %s", v27, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x21D4B6B70](v28, -1, -1);
      MEMORY[0x21D4B6B70](v27, -1, -1);
    }
    else
    {

      swift_release_n();
    }
  }
}

uint64_t sub_21CA1E93C(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_retain();
  }

  return swift_retain();
}

void sub_21CA1E994()
{
  uint64_t v1 = v0;
  if (qword_267C94990 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_21CB880A0();
  sub_21CA4CC18(v2, (uint64_t)qword_267CA5368);
  uint64_t v3 = sub_21CB88070();
  os_log_type_t v4 = sub_21CB88880();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl(&dword_21CA00000, v3, v4, "FMFGarbageCollector: verifyingAccount...", v5, 2u);
    MEMORY[0x21D4B6B70](v5, -1, -1);
  }

  uint64_t v6 = *(void **)(v0 + 32);
  id v7 = objc_msgSend(v6, sel_aa_primaryAppleAccount);
  if (!v7)
  {
    uint64_t v12 = sub_21CB88070();
    os_log_type_t v13 = sub_21CB88860();
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v14 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v14 = 0;
      _os_log_impl(&dword_21CA00000, v12, v13, "FMFGarbageCollector: error retrieving primary account", v14, 2u);
      MEMORY[0x21D4B6B70](v14, -1, -1);
    }

    sub_21CB785E4();
    return;
  }
  id v8 = v7;
  id v9 = objc_msgSend(v7, sel_aa_personID);
  if (v9)
  {
    uint64_t v55 = sub_21CB882F0();
    uint64_t v11 = v10;
  }
  else
  {
    uint64_t v55 = 0;
    uint64_t v11 = 0;
  }
  id v53 = v8;
  uint64_t v15 = self;
  os_log_type_t v16 = (void *)sub_21CB882C0();
  uint64_t v17 = (void *)sub_21CB882C0();
  id v18 = objc_msgSend(v15, sel_stringForKey_inDomain_, v16, v17);

  uint64_t v52 = v15;
  if (v18)
  {
    uint64_t v54 = sub_21CB882F0();
    uint64_t v20 = v19;
  }
  else
  {
    uint64_t v54 = 0;
    uint64_t v20 = 0;
  }
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v21 = sub_21CB88070();
  os_log_type_t v22 = sub_21CB88880();
  if (os_log_type_enabled(v21, v22))
  {
    uint64_t v23 = swift_slowAlloc();
    uint64_t v24 = swift_slowAlloc();
    *(_DWORD *)uint64_t v23 = 136315394;
    uint64_t v56 = v24;
    uint64_t aBlock = v55;
    uint64_t v58 = v11;
    swift_bridgeObjectRetain();
    sub_21CA57E34((uint64_t *)&unk_267C95220);
    uint64_t v25 = sub_21CB88310();
    uint64_t aBlock = sub_21CA4E450(v25, v26, &v56);
    sub_21CB889C0();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v23 + 12) = 2080;
    uint64_t aBlock = v54;
    uint64_t v58 = v20;
    swift_bridgeObjectRetain();
    uint64_t v27 = sub_21CB88310();
    uint64_t aBlock = sub_21CA4E450(v27, v28, &v56);
    sub_21CB889C0();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_21CA00000, v21, v22, "FMFGarbageCollector: verifyingAccount new: %s previous: %s", (uint8_t *)v23, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x21D4B6B70](v24, -1, -1);
    MEMORY[0x21D4B6B70](v23, -1, -1);

    if (v11) {
      goto LABEL_19;
    }
LABEL_24:
    if (!v20) {
      goto LABEL_29;
    }
    goto LABEL_25;
  }

  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  if (!v11) {
    goto LABEL_24;
  }
LABEL_19:
  if (!v20)
  {
LABEL_25:
    swift_bridgeObjectRelease();
    goto LABEL_26;
  }
  if (v55 == v54 && v11 == v20)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_29;
  }
  char v51 = sub_21CB88F50();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v51 & 1) == 0)
  {
LABEL_26:
    uint64_t v29 = sub_21CB88070();
    os_log_type_t v30 = sub_21CB88880();
    if (os_log_type_enabled(v29, v30))
    {
      unint64_t v31 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v31 = 0;
      _os_log_impl(&dword_21CA00000, v29, v30, "FMFGarbageCollector: purging cache because person id are not matching.", v31, 2u);
      MEMORY[0x21D4B6B70](v31, -1, -1);
    }

    sub_21CB785E4();
  }
LABEL_29:
  id v32 = objc_msgSend(v53, sel_aa_fmfAccount);
  id v33 = objc_msgSend(v6, sel_credentialForAccount_, v32);
  uint64_t v34 = v33;
  if (v33
    && (id v35 = objc_msgSend(v33, sel_credentialItemForKey_, *MEMORY[0x263EFB098])) != 0)
  {

    os_log_type_t v36 = *(void **)(v1 + 64);
    uint64_t v37 = swift_allocObject();
    *(void *)(v37 + 16) = v1;
    *(void *)(v37 + 24) = v32;
    uint64_t v38 = swift_allocObject();
    *(void *)(v38 + 16) = sub_21CA64420;
    *(void *)(v38 + 24) = v37;
    uint64_t v61 = sub_21CA6257C;
    uint64_t v62 = v38;
    uint64_t aBlock = MEMORY[0x263EF8330];
    uint64_t v58 = 1107296256;
    unint64_t v59 = sub_21CA18830;
    unint64_t v60 = &unk_26CD719F0;
    uint64_t v39 = _Block_copy(&aBlock);
    uint64_t v40 = v36;
    swift_retain();
    id v41 = v32;
    swift_retain();
    swift_release();
    dispatch_sync(v40, v39);

    _Block_release(v39);
    LOBYTE(v39) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    if ((v39 & 1) == 0)
    {
      unint64_t v42 = (void *)sub_21CB882C0();
      uint64_t v43 = (void *)sub_21CB882C0();
      objc_msgSend(v52, sel_setString_forKey_inDomain_, v9, v42, v43);
      swift_release();

      return;
    }
  }
  else
  {

    unint64_t v44 = sub_21CB88070();
    os_log_type_t v45 = sub_21CB88880();
    if (os_log_type_enabled(v44, v45))
    {
      uint64_t v46 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v46 = 0;
      _os_log_impl(&dword_21CA00000, v44, v45, "FMFGarbageCollector: purging cache because the token is missing", v46, 2u);
      MEMORY[0x21D4B6B70](v46, -1, -1);
    }

    int v47 = *(void **)(v1 + 64);
    uint64_t v48 = swift_allocObject();
    *(void *)(v48 + 16) = sub_21CB78AE0;
    *(void *)(v48 + 24) = v1;
    uint64_t v61 = sub_21CA18880;
    uint64_t v62 = v48;
    uint64_t aBlock = MEMORY[0x263EF8330];
    uint64_t v58 = 1107296256;
    unint64_t v59 = sub_21CA18830;
    unint64_t v60 = &unk_26CD71978;
    uint64_t v49 = _Block_copy(&aBlock);
    swift_retain();
    int v50 = v47;
    swift_retain();
    swift_release();
    dispatch_sync(v50, v49);

    _Block_release(v49);
    LOBYTE(v49) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    if ((v49 & 1) == 0)
    {
      sub_21CB785E4();
      swift_release();

      return;
    }
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_21CA1F278@<X0>(uint64_t *a1@<X8>)
{
  return sub_21CA1F294(v1, a1);
}

uint64_t sub_21CA1F294@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = (void *)a1[67];
  uint64_t v4 = v3[5];
  uint64_t v5 = v3[6];
  uint64_t v6 = v3[7];
  uint64_t v7 = v4;
  uint64_t v8 = v5;
  uint64_t v9 = v6;
  uint64_t v10 = v3[8];
  if (!v6)
  {
    uint64_t v7 = a1[93];
    uint64_t v8 = a1[94];
    uint64_t v9 = a1[95];
    uint64_t v10 = a1[96];
    sub_21CA1F33C(v7, v8, v9);
  }
  *a2 = v7;
  a2[1] = v8;
  a2[2] = v9;
  a2[3] = v10;
  return sub_21CA1F33C(v4, v5, v6);
}

uint64_t sub_21CA1F33C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_21CA1F380@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return FMFFeatures.init(from:)(a1, a2);
}

uint64_t FMFFeatures.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = sub_21CA57E34(&qword_267C972F0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21CA2B2CC(a1, a1[3]);
  sub_21CA1F97C();
  sub_21CB890B0();
  if (!v2)
  {
    LOBYTE(v35) = 0;
    char v9 = sub_21CB88DF0();
    LOBYTE(v35) = 1;
    char v10 = sub_21CB88DF0();
    LOBYTE(v35) = 2;
    LODWORD(v33) = sub_21CB88DF0();
    LOBYTE(v35) = 3;
    LODWORD(v32) = sub_21CB88DF0();
    LOBYTE(v35) = 4;
    LODWORD(v31) = sub_21CB88DF0();
    LOBYTE(v35) = 5;
    LODWORD(v30) = sub_21CB88DF0();
    LOBYTE(v35) = 6;
    LODWORD(v29) = sub_21CB88DF0();
    LOBYTE(v35) = 7;
    LODWORD(v28) = sub_21CB88DF0();
    LOBYTE(v35) = 8;
    int v27 = sub_21CB88DF0();
    LOBYTE(v35) = 9;
    int v26 = sub_21CB88DF0();
    LOBYTE(v35) = 10;
    int v25 = sub_21CB88DF0();
    LOBYTE(v35) = 11;
    int v24 = sub_21CB88DF0();
    LOBYTE(v35) = 12;
    HIDWORD(v23) = sub_21CB88DF0();
    LOBYTE(v35) = 13;
    char v11 = sub_21CB88DF0();
    uint64_t v13 = v9 & 1;
    if (v10) {
      uint64_t v13 = v9 & 1 | 2;
    }
    if (v33) {
      v13 |= 4uLL;
    }
    if (v32) {
      v13 |= 8uLL;
    }
    if (v31) {
      v13 |= 0x10uLL;
    }
    if (v30) {
      v13 |= 0x20uLL;
    }
    if (v29) {
      v13 |= 0x40uLL;
    }
    if (v28) {
      v13 |= 0x80uLL;
    }
    if (v27) {
      v13 |= 0x100uLL;
    }
    if (v26) {
      v13 |= 0x200uLL;
    }
    if (v25) {
      v13 |= 0x400uLL;
    }
    if (v24) {
      v13 |= 0x800uLL;
    }
    if ((v23 & 0x100000000) != 0) {
      v13 |= 0x1000uLL;
    }
    if (v11) {
      v13 |= 0x2000uLL;
    }
    uint64_t v33 = v13;
    uint64_t v35 = v13;
    unint64_t v31 = FMFFeatures.debugDescription.getter();
    unint64_t v15 = v14;
    if (qword_267C94990 != -1) {
      swift_once();
    }
    uint64_t v16 = sub_21CB880A0();
    sub_21CA4CC18(v16, (uint64_t)qword_267CA5368);
    swift_bridgeObjectRetain();
    uint64_t v17 = sub_21CB88070();
    os_log_type_t v18 = sub_21CB88880();
    id v32 = v17;
    if (os_log_type_enabled(v17, v18))
    {
      uint64_t v19 = (uint8_t *)swift_slowAlloc();
      uint64_t v30 = swift_slowAlloc();
      uint64_t v35 = v30;
      uint64_t v29 = v19;
      *(_DWORD *)uint64_t v19 = 136315138;
      unint64_t v28 = v19 + 4;
      swift_bridgeObjectRetain();
      uint64_t v34 = sub_21CA4E450(v31, v15, &v35);
      sub_21CB889C0();
      swift_bridgeObjectRelease_n();
      uint64_t v20 = v32;
      uint64_t v21 = v29;
      _os_log_impl(&dword_21CA00000, v32, v18, "FMFFeature: initialized %s", v29, 0xCu);
      uint64_t v22 = v30;
      swift_arrayDestroy();
      MEMORY[0x21D4B6B70](v22, -1, -1);
      MEMORY[0x21D4B6B70](v21, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v33;
  }
  return sub_21CA2B0D0((uint64_t)a1);
}

unint64_t sub_21CA1F97C()
{
  unint64_t result = qword_267C972F8;
  if (!qword_267C972F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C972F8);
  }
  return result;
}

unint64_t FMFFeatures.debugDescription.getter()
{
  return 0xD000000000000018;
}

void *sub_21CA1FA74@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  id v53 = a2;
  uint64_t v4 = sub_21CA57E34(&qword_267C95C78);
  uint64_t v54 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  memset(&v61[72], 0, 40);
  v61[112] = 1;
  sub_21CA6E2F0((uint64_t)v62);
  sub_21CAC93A4((uint64_t)v62, (uint64_t)&v61[120]);
  memset(&v61[360], 0, 57);
  uint64_t v7 = a1[3];
  unint64_t v63 = a1;
  sub_21CA2B2CC(a1, v7);
  sub_21CA5F16C();
  sub_21CB890B0();
  if (v2)
  {
    sub_21CA2B0D0((uint64_t)v63);
    BOOL v9 = 0;
  }
  else
  {
    uint64_t v52 = &v61[120];
    sub_21CA57E34(&qword_267C94EF0);
    LOBYTE(v55[0]) = 0;
    sub_21CA2A120();
    uint64_t v8 = v6;
    sub_21CB88E20();
    uint64_t v11 = *(void *)v56;
    *(void *)uint64_t v61 = *(void *)v56;
    LOBYTE(v55[0]) = 1;
    swift_bridgeObjectRetain();
    sub_21CB88E20();
    uint64_t v51 = v11;
    uint64_t v12 = *(void *)v56;
    *(void *)&v61[8] = *(void *)v56;
    LOBYTE(v55[0]) = 2;
    swift_bridgeObjectRetain();
    sub_21CB88E20();
    uint64_t v50 = v12;
    uint64_t v13 = *(void *)v56;
    *(void *)&v61[16] = *(void *)v56;
    LOBYTE(v55[0]) = 3;
    swift_bridgeObjectRetain();
    sub_21CB88E20();
    uint64_t v49 = v13;
    uint64_t v14 = *(void *)v56;
    *(void *)&v61[24] = *(void *)v56;
    LOBYTE(v55[0]) = 4;
    swift_bridgeObjectRetain();
    sub_21CB88E20();
    uint64_t v15 = *(void *)v56;
    *(void *)&v61[32] = *(void *)v56;
    sub_21CA57E34(&qword_267C94F08);
    LOBYTE(v55[0]) = 5;
    sub_21CA2A268();
    swift_bridgeObjectRetain();
    sub_21CB88E20();
    uint64_t v48 = v15;
    uint64_t v16 = *(void *)v56;
    *(void *)&v61[40] = *(void *)v56;
    LOBYTE(v55[0]) = 6;
    swift_bridgeObjectRetain();
    sub_21CB88E20();
    uint64_t v17 = *(void *)v56;
    *(void *)&v61[48] = *(void *)v56;
    LOBYTE(v55[0]) = 7;
    swift_bridgeObjectRetain();
    sub_21CB88E20();
    uint64_t v45 = v17;
    uint64_t v18 = *(void *)v56;
    *(void *)&v61[56] = *(void *)v56;
    LOBYTE(v55[0]) = 8;
    swift_bridgeObjectRetain();
    sub_21CB88E20();
    uint64_t v32 = v18;
    uint64_t v33 = v16;
    uint64_t v30 = v14;
    uint64_t v19 = *(void *)v56;
    *(void *)&v61[64] = *(void *)v56;
    LOBYTE(v55[0]) = 9;
    sub_21CA2AD18();
    uint64_t v31 = v19;
    swift_bridgeObjectRetain();
    uint64_t v46 = v8;
    uint64_t v47 = v4;
    sub_21CB88E20();
    long long v42 = *(_OWORD *)&v56[8];
    uint64_t v43 = *(void *)&v56[24];
    uint64_t v20 = 256;
    if (!v56[1]) {
      uint64_t v20 = 0;
    }
    uint64_t v21 = v20 | v56[0];
    uint64_t v22 = 0x10000;
    if (!v56[2]) {
      uint64_t v22 = 0;
    }
    unint64_t v41 = v21 | v22 | ((unint64_t)v56[3] << 24);
    *(void *)&v61[72] = v41;
    *(_OWORD *)&v61[80] = v42;
    *(void *)&v61[96] = v43;
    v59[247] = 10;
    sub_21CA1F33C(v41, v42, *((uint64_t *)&v42 + 1));
    sub_21CA2AD6C();
    sub_21CB88E20();
    uint64_t v44 = 0;
    uint64_t v34 = v60;
    *(void *)&v61[104] = v60;
    v61[112] = 0;
    LOBYTE(v58) = 11;
    sub_21CA2A404();
    sub_21CB88E20();
    v55[12] = *(_OWORD *)&v56[192];
    v55[13] = *(_OWORD *)&v56[208];
    v55[14] = *(_OWORD *)&v56[224];
    v55[8] = *(_OWORD *)&v56[128];
    v55[9] = *(_OWORD *)&v56[144];
    v55[10] = *(_OWORD *)&v56[160];
    v55[11] = *(_OWORD *)&v56[176];
    v55[4] = *(_OWORD *)&v56[64];
    v55[5] = *(_OWORD *)&v56[80];
    v55[6] = *(_OWORD *)&v56[96];
    v55[7] = *(_OWORD *)&v56[112];
    v55[0] = *(_OWORD *)v56;
    v55[1] = *(_OWORD *)&v56[16];
    v55[2] = *(_OWORD *)&v56[32];
    v55[3] = *(_OWORD *)&v56[48];
    nullsub_1(v55, *(double *)&v56[48]);
    sub_21CAC93A4((uint64_t)v55, (uint64_t)v59);
    sub_21CAC93A4((uint64_t)v59, (uint64_t)v52);
    LOBYTE(v55[0]) = 12;
    sub_21CA2A3B0();
    sub_21CB88E20();
    uint64_t v52 = 0;
    uint64_t v38 = *(void *)v56;
    long long v39 = *(_OWORD *)&v56[8];
    uint64_t v40 = *(void *)&v56[32];
    uint64_t v35 = *(void *)&v56[24];
    long long v36 = *(_OWORD *)&v56[40];
    int v37 = v56[56];
    uint64_t v23 = *(void *)v56;
    *(void *)&v61[360] = *(void *)v56;
    *(_OWORD *)&v61[368] = *(_OWORD *)&v56[8];
    *(void *)&v61[384] = *(void *)&v56[24];
    *(void *)&v61[392] = *(void *)&v56[32];
    *(void *)&v61[400] = *(void *)&v56[40];
    *(void *)&v61[408] = *(void *)&v56[48];
    v61[416] = v56[56];
    v29[1] = sub_21CA57E34(&qword_267C94E88);
    LOBYTE(v55[0]) = 13;
    sub_21CA2D5F4(v23);
    sub_21CA5EE50(&qword_267C94E90, &qword_267C94E88, (void (*)(void))sub_21CA62808);
    int v24 = v52;
    sub_21CB88E20();
    BOOL v9 = v24 == 0;
    if (!v24)
    {
      uint64_t v25 = *(void *)v56;
      *(void *)&v61[424] = *(void *)v56;
      sub_21CA57E34(&qword_267C95C88);
      LOBYTE(v55[0]) = 16;
      sub_21CA5F0F0(&qword_267C95C90, (void (*)(void))sub_21CA668A8);
      swift_bridgeObjectRetain();
      sub_21CB88E20();
      uint64_t v26 = *(void *)v56;
      *(void *)&v61[448] = *(void *)v56;
      sub_21CA57E34(&qword_267C95C98);
      LOBYTE(v55[0]) = 14;
      sub_21CA5EE50(&qword_267C95CA0, &qword_267C95C98, (void (*)(void))sub_21CA62B0C);
      swift_bridgeObjectRetain();
      sub_21CB88E20();
      uint64_t v27 = *(void *)v56;
      *(void *)&v61[432] = *(void *)v56;
      sub_21CA57E34(&qword_267C94E70);
      char v57 = 15;
      sub_21CA2A1C4();
      swift_bridgeObjectRetain();
      sub_21CB88E20();
      BOOL v28 = v44 != 0;
      (*(void (**)(char *, uint64_t))(v54 + 8))(v46, v47);
      uint64_t v54 = v58;
      *(void *)&v61[440] = v58;
      *(void *)&v55[0] = v51;
      *((void *)&v55[0] + 1) = v50;
      *(void *)&v55[1] = v49;
      *((void *)&v55[1] + 1) = v30;
      *(void *)&v55[2] = v48;
      *((void *)&v55[2] + 1) = v33;
      *(void *)&v55[3] = v45;
      *((void *)&v55[3] + 1) = v32;
      *(void *)&v55[4] = v31;
      *((void *)&v55[4] + 1) = v41;
      v55[5] = v42;
      *(void *)&v55[6] = v43;
      *((void *)&v55[6] + 1) = v34;
      LOBYTE(v55[7]) = v28;
      sub_21CAC93A4((uint64_t)v59, (uint64_t)&v55[7] + 8);
      *((void *)&v55[22] + 1) = v38;
      v55[23] = v39;
      *(void *)&v55[24] = v35;
      *((void *)&v55[24] + 1) = v40;
      v55[25] = v36;
      LOBYTE(v55[26]) = v37;
      *((void *)&v55[26] + 1) = v25;
      *(void *)&v55[27] = v27;
      *((void *)&v55[27] + 1) = v54;
      *(void *)&v55[28] = v26;
      sub_21CA2D014(v55);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_21CA2D658(v38);
      sub_21CA59D84(v41, v42, *((uint64_t *)&v42 + 1));
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      memcpy(v53, v55, 0x1C8uLL);
      sub_21CA2B0D0((uint64_t)v63);
      memcpy(v56, v61, sizeof(v56));
      return sub_21CAC940C(v56);
    }
    (*(void (**)(char *, uint64_t))(v54 + 8))(v46, v47);
    sub_21CA2D658(v38);
    sub_21CA59D84(v41, v42, *((uint64_t *)&v42 + 1));
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_21CA2B0D0((uint64_t)v63);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  sub_21CA59D84(*(uint64_t *)&v61[72], *(uint64_t *)&v61[80], *(uint64_t *)&v61[88]);
  unint64_t result = (void *)sub_21CA2D658(*(uint64_t *)&v61[360]);
  if (v9) {
    return (void *)swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t FMFManager.init(configuration:tabInfo:)(uint64_t a1, long long *a2)
{
  void (*v43)(long long *__return_ptr);
  uint64_t v44;
  char *v45;
  char *v46;
  id v47;
  void *v48;
  uint64_t v49;
  id v50;
  char *v51;
  int v52;
  uint64_t v53;
  void *v54;
  uint64_t v55;
  id v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void *v62;
  uint64_t v63;
  void *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void (*v69)(uint64_t, _UNKNOWN **, uint64_t, uint64_t);
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  void (*v73)(uint64_t, _UNKNOWN **, uint64_t, uint64_t);
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  NSObject *v78;
  os_log_type_t v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  unint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  unint64_t v92;
  uint64_t v93;
  unint64_t v94;
  uint64_t v95;
  unint64_t v96;
  char *v97;
  void v99[2];
  long long v100;
  void (*v101)(char *, char *, uint64_t);
  char *v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  long long v110[3];

  uint64_t v3 = v2;
  v107 = a1;
  uint64_t v5 = sub_21CA57E34(&qword_267C95028);
  MEMORY[0x270FA5388](v5 - 8);
  v99[0] = (char *)v99 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_21CA57E34(&qword_267C95400);
  uint64_t v8 = MEMORY[0x270FA5388](v7 - 8);
  v106 = (uint64_t)v99 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  v104 = (char *)v99 - v10;
  v105 = sub_21CB888F0();
  uint64_t v103 = *(void *)(v105 - 8);
  MEMORY[0x270FA5388](v105);
  char v102 = (char *)v99 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_21CB888B0();
  MEMORY[0x270FA5388](v12);
  v99[1] = (char *)v99 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_21CB88150();
  MEMORY[0x270FA5388](v14 - 8);
  uint64_t v15 = sub_21CB875D0();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)v99 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v101 = (void (*)(char *, char *, uint64_t))*((void *)a2 + 2);
  sub_21CB875C0();
  uint64_t v19 = sub_21CB875B0();
  uint64_t v21 = v20;
  uint64_t v22 = *(void (**)(char *, uint64_t))(v16 + 8);
  uint64_t v100 = *a2;
  v22(v18, v15);
  *(void *)(v3 + 16) = v19;
  *(void *)(v3 + 24) = v21;
  *(void *)(v3 + 40) = 0;
  swift_unknownObjectWeakInit();
  sub_21CA182AC();
  sub_21CB88120();
  *(void *)&v110[0] = MEMORY[0x263F8EE78];
  sub_21CA5DEAC((unint64_t *)&qword_267C96F60, MEMORY[0x263F8F0F8]);
  sub_21CA57E34((uint64_t *)&unk_267C96F90);
  sub_21CA356BC((unint64_t *)&qword_267C96F70, (uint64_t *)&unk_267C96F90);
  sub_21CB88A60();
  (*(void (**)(char *, void, uint64_t))(v103 + 104))(v102, *MEMORY[0x263F8F130], v105);
  *(void *)(v3 + 48) = sub_21CB88930();
  *(_WORD *)(v3 + 224) = 0;
  *(unsigned char *)(v3 + 226) = 0;
  *(_OWORD *)(v3 + 184) = 0u;
  *(_OWORD *)(v3 + 200) = 0u;
  uint64_t v23 = v3 + OBJC_IVAR____TtC7FMFCore10FMFManager_selectedFriend;
  uint64_t v24 = type metadata accessor for FMFFriend();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v23, 1, 1, v24);
  uint64_t v25 = v107;
  *(unsigned char *)(v3 + OBJC_IVAR____TtC7FMFCore10FMFManager_isInitialized) = 0;
  *(void *)(v3 + 56) = v25;
  *(_OWORD *)(v3 + 64) = v100;
  *(void *)(v3 + 80) = v101;
  uint64_t v26 = *(void *)(v25 + OBJC_IVAR____TtC7FMFCore23FMFManagerConfiguration_snapshotHandlers);
  if (v26) {
    BOOL v27 = *(void *)(v26 + 32) != 0;
  }
  else {
    BOOL v27 = 0;
  }
  uint64_t v28 = OBJC_IVAR____TtC7FMFCore23FMFManagerConfiguration_useOptimizedFetch;
  LODWORD(v103) = *(unsigned __int8 *)(v25 + OBJC_IVAR____TtC7FMFCore23FMFManagerConfiguration_useOptimizedFetch);
  LODWORD(v105) = v27;
  *(unsigned char *)(v3 + 225) = v27;
  uint64_t v29 = (char *)(v25 + OBJC_IVAR____TtC7FMFCore23FMFManagerConfiguration_preferredLocale);
  uint64_t v30 = sub_21CB87630();
  uint64_t v31 = *(void *)(v30 - 8);
  uint64_t v32 = (uint64_t)v104;
  v101 = *(void (**)(char *, char *, uint64_t))(v31 + 16);
  char v102 = v29;
  v101(v104, v29, v30);
  uint64_t v33 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v31 + 56);
  v33(v32, 0, 1, v30);
  type metadata accessor for FMFReverseGeocodingCache();
  swift_allocObject();
  uint64_t v34 = v106;
  sub_21CA24E80(v32, v106, &qword_267C95400);
  swift_retain();
  v106 = sub_21CA19B34(v34);
  sub_21CA1B88C(v32, &qword_267C95400);
  uint64_t v35 = v107;
  char v36 = 0;
  if (*(unsigned char *)(v107 + OBJC_IVAR____TtC7FMFCore23FMFManagerConfiguration_useCache) == 1) {
    char v36 = *(unsigned char *)(v107 + v28) ^ 1;
  }
  type metadata accessor for FMFGarbageCollector();
  swift_allocObject();
  *(void *)(v3 + 104) = sub_21CA13ED8(v36 & 1);
  type metadata accessor for FMFSystemStateController();
  swift_allocObject();
  *(void *)(v3 + 112) = sub_21CA14A58();
  uint64_t v37 = v106;
  *(void *)(v3 + 216) = v106;
  type metadata accessor for FMFDataManager();
  swift_allocObject();
  swift_retain_n();
  uint64_t v38 = swift_retain();
  int v39 = v105;
  *(void *)(v3 + 88) = sub_21CA1C888(v38, 0, v37, v105);
  *(void *)(v3 + 96) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F66178]), sel_init);
  id v40 = objc_allocWithZone((Class)type metadata accessor for FMFGenericResponseHandler());
  uint64_t v41 = swift_retain();
  long long v42 = sub_21CA1B8E8(v41, v39);
  *(void *)(v3 + 120) = v42;
  uint64_t v43 = *(void (**)(long long *__return_ptr))(v35
                                                      + OBJC_IVAR____TtC7FMFCore23FMFManagerConfiguration_interactionControllerProvider);
  uint64_t v44 = (uint64_t)v104;
  v101(v104, v102, v30);
  v33(v44, 0, 1, v30);
  uint64_t v45 = v42;
  v43(v110);

  sub_21CA1B88C(v44, &qword_267C95400);
  sub_21CA6375C(v110, v3 + 136);
  uint64_t v46 = 0;
  if ((*(unsigned char *)(v35 + OBJC_IVAR____TtC7FMFCore23FMFManagerConfiguration_enabledSubsystems) & 2) != 0)
  {
    swift_beginAccess();
    sub_21CA219EC(v3 + 136, (uint64_t)v110);
    uint64_t v47 = objc_allocWithZone((Class)type metadata accessor for FMFMyLocationController());
    uint64_t v46 = sub_21CA12B64((uint64_t)v110);
  }
  uint64_t v48 = *(void **)(v3 + 184);
  *(void *)(v3 + 184) = v46;

  uint64_t v49 = *(void *)(v3 + 88);
  swift_beginAccess();
  sub_21CA219EC(v3 + 136, (uint64_t)v110);
  uint64_t v50 = objc_allocWithZone((Class)type metadata accessor for FMAPSConnectionHandler());
  swift_retain();
  uint64_t v51 = (char *)sub_21CA142FC(0xD000000000000017, 0x800000021CB96E50, 0xD000000000000024, 0x800000021CB95950, 0, 0);
  type metadata accessor for FMFRefreshController();
  swift_allocObject();
  uint64_t v52 = v105;
  *(void *)(v3 + 128) = sub_21CA1A190(v49, (uint64_t)v110, v51, v105, v103);
  sub_21CA219EC(v3 + 136, (uint64_t)v110);
  id v53 = *(void *)(v3 + 88);
  uint64_t v54 = *(void **)(v3 + 96);
  uint64_t v55 = *(void *)(v3 + 112);
  type metadata accessor for FMFActionsController();
  swift_allocObject();
  swift_retain();
  uint64_t v56 = v54;
  swift_retain();
  *(void *)(v3 + 176) = sub_21CA14E38((uint64_t)v110, v53, v56, v55);
  if (v52)
  {
    type metadata accessor for FMFProactiveLocationController();
    swift_allocObject();
    char v57 = v106;
    swift_retain();
    uint64_t v58 = swift_retain();
    sub_21CAC9A50(v58, v57);
    *(void *)(v3 + 192) = v59;
    swift_release();
  }
  else if (sub_21CA33A7C())
  {
    type metadata accessor for FMFSecureLocationController(0);
    swift_allocObject();
    *(void *)(v3 + 208) = sub_21CA03F54();
    swift_release();
    uint64_t v60 = sub_21CB88640();
    uint64_t v61 = v99[0];
    (*(void (**)(void, uint64_t, uint64_t, uint64_t))(*(void *)(v60 - 8) + 56))(v99[0], 1, 1, v60);
    uint64_t v62 = (void *)swift_allocObject();
    v62[2] = 0;
    v62[3] = 0;
    v62[4] = v3;
    swift_retain();
    sub_21CB0A144(v61, (uint64_t)&unk_267C97040, (uint64_t)v62);
    swift_release();
  }
  else
  {
    unint64_t v63 = *(void *)(v3 + 88);
    uint64_t v64 = *(void **)(v3 + 96);
    type metadata accessor for FMFSecureLocationRefreshController();
    swift_allocObject();
    swift_retain();
    *(void *)(v3 + 200) = sub_21CB3B6E0(v63, v64);
    swift_release();
    uint64_t v65 = *(void *)(v3 + 200);
    if (v65)
    {
      *(void *)(v65 + 176) = &off_26CD6DEC8;
      swift_unknownObjectWeakAssign();
      uint64_t v66 = *(void *)(v3 + 200);
      if (v66)
      {
        *(void *)(v66 + 192) = &off_26CD6DF00;
        swift_unknownObjectWeakAssign();
      }
    }
  }
  *(void *)(*(void *)(v3 + 88) + 40) = &protocol witness table for FMFManager;
  swift_unknownObjectWeakAssign();
  *(void *)(*(void *)(v3 + 112) + 24) = &off_26CD6DE48;
  swift_unknownObjectWeakAssign();
  swift_beginAccess();
  uint64_t v67 = *(void *)(v3 + 160);
  uint64_t v68 = *(void *)(v3 + 168);
  sub_21CA21950(v3 + 136, v67);
  uint64_t v69 = *(void (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v68 + 16);
  uint64_t v70 = swift_retain();
  v69(v70, &off_26CD6DE38, v67, v68);
  uint64_t v71 = *(void *)(v3 + 160);
  int v72 = *(void *)(v3 + 168);
  sub_21CA21950(v3 + 136, v71);
  uint64_t v73 = *(void (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v72 + 40);
  uint64_t v74 = swift_retain();
  v73(v74, &off_26CD6DE58, v71, v72);
  swift_endAccess();
  uint64_t v75 = *(void *)(v3 + 120) + OBJC_IVAR____TtC7FMFCore25FMFGenericResponseHandler_delegate;
  swift_beginAccess();
  *(void *)(v75 + 8) = &protocol witness table for FMFManager;
  swift_unknownObjectWeakAssign();
  *(void *)(*(void *)(v3 + 128) + 48) = &off_26CD6DDA0;
  swift_unknownObjectWeakAssign();
  uint64_t v76 = *(void *)(v3 + 184);
  if (v76)
  {
    *(void *)(v76 + OBJC_IVAR____TtC7FMFCore23FMFMyLocationController_delegate + 8) = &protocol witness table for FMFManager;
    swift_unknownObjectWeakAssign();
  }
  *(void *)(*(void *)(v3 + 176) + 40) = &off_26CD6DE98;
  swift_unknownObjectWeakAssign();
  *(void *)(*(void *)(v3 + 104) + 80) = &off_26CD6DEB8;
  swift_unknownObjectWeakAssign();
  if (qword_267C94990 != -1) {
    swift_once();
  }
  uint64_t v77 = sub_21CB880A0();
  sub_21CA4CC18(v77, (uint64_t)qword_267CA5368);
  swift_retain_n();
  uint64_t v78 = sub_21CB88070();
  uint64_t v79 = sub_21CB88880();
  if (os_log_type_enabled(v78, v79))
  {
    uint64_t v80 = swift_slowAlloc();
    v104 = (char *)swift_slowAlloc();
    v109 = v104;
    *(_DWORD *)uint64_t v80 = 136315650;
    uint64_t v81 = *(void *)(v3 + 16);
    uint64_t v82 = *(void *)(v3 + 24);
    swift_bridgeObjectRetain();
    uint64_t v83 = sub_21CA30E24(0xCuLL, v81, v82);
    uint64_t v85 = v84;
    uint64_t v87 = v86;
    uint64_t v89 = v88;
    swift_bridgeObjectRelease();
    uint64_t v90 = MEMORY[0x21D4B5450](v83, v85, v87, v89);
    uint64_t v92 = v91;
    swift_bridgeObjectRelease();
    v108 = sub_21CA4E450(v90, v92, (uint64_t *)&v109);
    sub_21CB889C0();
    swift_bridgeObjectRelease();
    swift_release_n();
    *(_WORD *)(v80 + 12) = 2080;
    if (v105) {
      uint64_t v93 = 0x70616E7320736120;
    }
    else {
      uint64_t v93 = 0;
    }
    if (v105) {
      uint64_t v94 = 0xEC000000746F6873;
    }
    else {
      uint64_t v94 = 0xE000000000000000;
    }
    v108 = sub_21CA4E450(v93, v94, (uint64_t *)&v109);
    sub_21CB889C0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v80 + 22) = 2080;
    if (v103) {
      uint64_t v95 = 0x4620676E69737520;
    }
    else {
      uint64_t v95 = 0;
    }
    if (v103) {
      uint64_t v96 = 0xEB0000000044464DLL;
    }
    else {
      uint64_t v96 = 0xE000000000000000;
    }
    v108 = sub_21CA4E450(v95, v96, (uint64_t *)&v109);
    sub_21CB889C0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_21CA00000, v78, v79, "FMFManager<%s>.init%s%s", (uint8_t *)v80, 0x20u);
    uint64_t v97 = v104;
    swift_arrayDestroy();
    MEMORY[0x21D4B6B70](v97, -1, -1);
    MEMORY[0x21D4B6B70](v80, -1, -1);
    swift_release();

    swift_release();
  }
  else
  {
    swift_release();
    swift_release_n();
    swift_release();
  }
  return v3;
}

uint64_t sub_21CA21950(uint64_t a1, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

uint64_t sub_21CA219A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  *(void *)(*v5 + *a5 + 8) = a2;
  swift_unknownObjectWeakAssign();

  return swift_unknownObjectRelease();
}

uint64_t sub_21CA219EC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_21CA21A50@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FMFPreferences.init(from:)(a1, a2);
}

uint64_t FMFPreferences.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_21CA57E34(&qword_267C95B58);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21CA2B2CC(a1, a1[3]);
  sub_21CA223B0();
  sub_21CB890B0();
  if (!v2)
  {
    LOBYTE(v41) = 1;
    uint64_t v9 = sub_21CB88DE0();
    uint64_t v40 = a2;
    uint64_t v11 = v10;
    uint64_t v39 = v9;
    LOBYTE(v41) = 0;
    uint64_t v12 = sub_21CB88DE0();
    uint64_t v14 = v13;
    LOBYTE(v41) = 2;
    uint64_t v37 = sub_21CB88DE0();
    uint64_t v38 = v15;
    LOBYTE(v41) = 3;
    uint64_t v35 = sub_21CB88DE0();
    uint64_t v36 = v16;
    LOBYTE(v41) = 4;
    uint64_t v17 = sub_21CB88DE0();
    uint64_t v33 = v19;
    uint64_t v34 = v17;
    sub_21CA57E34(&qword_267C95B68);
    char v43 = 5;
    sub_21CA22344(&qword_267C95B70, &qword_267C95B68, (void (*)(void))sub_21CA65144);
    sub_21CB88E20();
    uint64_t v32 = v41;
    if (v12 == 7562585 && v14 == 0xE300000000000000 || (sub_21CB88F50() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      char v20 = 1;
    }
    else
    {
      if (v12 != 28494 || v14 != 0xE200000000000000) {
        sub_21CB88F50();
      }
      swift_bridgeObjectRelease();
      char v20 = 0;
    }
    char v42 = v20;
    uint64_t v21 = v37;
    uint64_t v22 = v38;
    uint64_t v23 = v40;
    if (v37 == 7562585 && v38 == 0xE300000000000000 || (sub_21CB88F50() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      char v24 = 1;
    }
    else
    {
      if (v21 != 28494 || v22 != 0xE200000000000000) {
        sub_21CB88F50();
      }
      swift_bridgeObjectRelease();
      char v24 = 0;
    }
    char v44 = v24;
    if (v35 == 7562585 && v36 == 0xE300000000000000)
    {
      swift_bridgeObjectRelease();
      char v25 = 1;
    }
    else
    {
      char v25 = sub_21CB88F50();
      swift_bridgeObjectRelease();
    }
    char v26 = v25 & 1;
    if (v11)
    {
      uint64_t v27 = sub_21CB88D70();
      swift_bridgeObjectRelease();
      char v28 = v27 == 1;
    }
    else
    {
      char v28 = 2;
    }
    uint64_t v29 = v32;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    char v30 = v44;
    *(unsigned char *)uint64_t v23 = v42;
    *(unsigned char *)(v23 + 1) = v30;
    *(unsigned char *)(v23 + 2) = v26;
    *(unsigned char *)(v23 + 3) = v28;
    uint64_t v31 = v33;
    *(void *)(v23 + 8) = v34;
    *(void *)(v23 + 16) = v31;
    *(void *)(v23 + 24) = v29;
  }
  return sub_21CA2B0D0((uint64_t)a1);
}

uint64_t FMFPreferences.encode(to:)(void *a1)
{
  uint64_t v3 = sub_21CA57E34(&qword_267C95B80);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v20 = *v1;
  int v7 = v1[1];
  v14[0] = v1[2];
  v14[1] = v7;
  int v16 = v1[3];
  uint64_t v15 = *((void *)v1 + 3);
  sub_21CA2B2CC(a1, a1[3]);
  sub_21CA223B0();
  sub_21CB890C0();
  LOBYTE(v18) = 4;
  uint64_t v8 = v17;
  sub_21CB88E70();
  if (v8) {
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  int v10 = v16;
  uint64_t v18 = v15;
  char v21 = 5;
  sub_21CA57E34(&qword_267C95B88);
  sub_21CA22344(&qword_267C95B90, &qword_267C95B88, (void (*)(void))sub_21CA62500);
  sub_21CB88EB0();
  uint64_t v11 = 0x454E4F5952455645;
  if ((v10 & 1) == 0) {
    uint64_t v11 = 0x53444E45495246;
  }
  unint64_t v12 = 0xE800000000000000;
  if ((v10 & 1) == 0) {
    unint64_t v12 = 0xE700000000000000;
  }
  if (v10 == 2)
  {
    uint64_t v11 = 0;
    unint64_t v13 = 0;
  }
  else
  {
    unint64_t v13 = v12;
  }
  uint64_t v18 = v11;
  unint64_t v19 = v13;
  char v21 = 1;
  sub_21CA57E34((uint64_t *)&unk_267C95220);
  sub_21CA22404();
  sub_21CB88EB0();
  swift_bridgeObjectRelease();
  LOBYTE(v18) = 0;
  sub_21CB88E70();
  swift_bridgeObjectRelease();
  LOBYTE(v18) = 2;
  sub_21CB88E70();
  swift_bridgeObjectRelease();
  LOBYTE(v18) = 3;
  sub_21CB88E70();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return swift_bridgeObjectRelease();
}

uint64_t sub_21CA22344(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_21CA5EEBC(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_21CA223B0()
{
  unint64_t result = qword_267C95B60;
  if (!qword_267C95B60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C95B60);
  }
  return result;
}

unint64_t sub_21CA22404()
{
  unint64_t result = qword_267C94A70;
  if (!qword_267C94A70)
  {
    sub_21CA5EEBC((uint64_t *)&unk_267C95220);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C94A70);
  }
  return result;
}

uint64_t destroy for FMFDevice()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_21CA224AC()
{
  uint64_t v0 = sub_21CB882F0();
  uint64_t v2 = v1;
  if (v0 == sub_21CB882F0() && v2 == v3) {
    char v5 = 1;
  }
  else {
    char v5 = sub_21CB88F50();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t FMDiskIO.KeyPair.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v23 = a2;
  uint64_t v27 = sub_21CB87810();
  uint64_t v22 = *(void *)(v27 - 8);
  MEMORY[0x270FA5388](v27);
  char v26 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = sub_21CB877E0();
  uint64_t v25 = *(void *)(v29 - 8);
  MEMORY[0x270FA5388](v29);
  char v28 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for FMDiskIO.KeyPair.CodingKeys();
  swift_getWitnessTable();
  uint64_t v30 = sub_21CB88E40();
  uint64_t v24 = *(void *)(v30 - 8);
  MEMORY[0x270FA5388](v30);
  uint64_t v6 = (char *)&v20 - v5;
  uint64_t v7 = type metadata accessor for FMDiskIO.KeyPair();
  uint64_t v21 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v20 - v8;
  sub_21CA2B2CC(a1, a1[3]);
  uint64_t v10 = (uint64_t)v31;
  sub_21CB890B0();
  if (v10) {
    return sub_21CA2B0D0((uint64_t)a1);
  }
  uint64_t v31 = a1;
  uint64_t v11 = v9;
  uint64_t v13 = v24;
  uint64_t v12 = v25;
  uint64_t v14 = v26;
  uint64_t v15 = v27;
  char v33 = 0;
  sub_21CA22A10(&qword_267C97600, MEMORY[0x263F3CBE8]);
  sub_21CB88E20();
  int v16 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
  int v20 = v11;
  v16(v11, v28, v29);
  char v32 = 1;
  sub_21CA22A10(qword_267C97608, MEMORY[0x263F3CC00]);
  sub_21CB88E20();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v6, v30);
  uint64_t v17 = v20;
  (*(void (**)(char *, char *, uint64_t))(v22 + 32))(&v20[*(int *)(v7 + 44)], v14, v15);
  uint64_t v18 = v21;
  (*(void (**)(uint64_t, char *, uint64_t))(v21 + 16))(v23, v17, v7);
  sub_21CA2B0D0((uint64_t)v31);
  return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v17, v7);
}

uint64_t sub_21CA229E0()
{
  return swift_getGenericMetadata();
}

uint64_t sub_21CA22A10(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t FMFFriend.identifier.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FMFFriend.shortName.getter()
{
  uint64_t v1 = (void *)(v0 + *(int *)(type metadata accessor for FMFFriend() + 76));
  if (!v1[1]) {
    return 0;
  }
  uint64_t v2 = v1[5];
  unint64_t v3 = v1[6];
  uint64_t v4 = HIBYTE(v3) & 0xF;
  if ((v3 & 0x2000000000000000) == 0) {
    uint64_t v4 = v2 & 0xFFFFFFFFFFFFLL;
  }
  if (!v4) {
    return 0;
  }
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t FMFFriend.isWaitingForShallowLocation.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for FMFFriend() + 72));
}

uint64_t FMFFriend.contact.getter@<X0>(uint64_t *a1@<X8>)
{
  unint64_t v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for FMFFriend() + 76));
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  uint64_t v6 = v3[2];
  uint64_t v7 = v3[3];
  uint64_t v8 = v3[4];
  uint64_t v9 = v3[5];
  uint64_t v10 = v3[6];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  a1[4] = v8;
  a1[5] = v9;
  a1[6] = v10;

  return sub_21CA5859C(v4, v5);
}

id sub_21CA22B74(uint64_t a1, unint64_t a2, void *a3)
{
  return sub_21CA22BA4(a1, a2, a3, *(void *)(v3 + 24), *(uint64_t **)(v3 + 32), *(void (**)(uint64_t, void *))(v3 + 40), *(void *)(v3 + 48), *(void **)(v3 + 56));
}

id sub_21CA22BA4(uint64_t a1, unint64_t a2, void *a3, uint64_t a4, uint64_t *a5, void (*a6)(uint64_t, void *), uint64_t a7, void *a8)
{
  if (a3)
  {
    uint64_t v13 = sub_21CB87190();
    v69[3] = v13;
    v69[4] = sub_21CA36588((unint64_t *)&qword_267C94E20, MEMORY[0x263F3CA38]);
    uint64_t v14 = sub_21CA6D80C(v69);
    (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v13 - 8) + 104))(v14, *MEMORY[0x263F3CA20], v13);
    LOBYTE(v13) = MEMORY[0x21D4B4280](v69);
    sub_21CA2B0D0((uint64_t)v69);
    if (v13)
    {
      if (qword_267C94990 != -1) {
        swift_once();
      }
      uint64_t v15 = sub_21CB880A0();
      sub_21CA4CC18(v15, (uint64_t)qword_267CA5368);
      id v16 = a3;
      id v17 = a3;
      uint64_t v18 = sub_21CB88070();
      os_log_type_t v19 = sub_21CB88880();
      if (os_log_type_enabled(v18, v19))
      {
        uint64_t v67 = a8;
        int v20 = (uint8_t *)swift_slowAlloc();
        uint64_t v21 = swift_slowAlloc();
        v69[0] = v21;
        *(_DWORD *)int v20 = 136315138;
        swift_getErrorValue();
        uint64_t v22 = sub_21CB89000();
        uint64_t v70 = sub_21CA4E450(v22, v23, v69);
        sub_21CB889C0();
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_21CA00000, v18, v19, "FMFServerInteractionController: didn't complete because of error (will check Stewie): %s", v20, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x21D4B6B70](v21, -1, -1);
        uint64_t v24 = v20;
        a8 = v67;
        MEMORY[0x21D4B6B70](v24, -1, -1);
      }
      else
      {
      }
      id v28 = *(id *)(a4 + qword_267C97478);
      char v29 = sub_21CA6D038(v28);

      if (v29 & 1) != 0 && ((*(uint64_t (**)(void))(qword_267CA5200 + *a5 + 192))())
      {
        uint64_t v30 = sub_21CB88070();
        os_log_type_t v31 = sub_21CB88880();
        if (os_log_type_enabled(v30, v31))
        {
          char v32 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)char v32 = 0;
          _os_log_impl(&dword_21CA00000, v30, v31, "FMFServerInteractionController: discarded alert because refresh request and Stewie-enabled", v32, 2u);
          MEMORY[0x21D4B6B70](v32, -1, -1);
        }
      }
      else
      {
        char v33 = sub_21CB88070();
        os_log_type_t v34 = sub_21CB88880();
        if (os_log_type_enabled(v33, v34))
        {
          uint64_t v35 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v35 = 0;
          _os_log_impl(&dword_21CA00000, v33, v34, "FMFServerInteractionController: proceeding with alert", v35, 2u);
          MEMORY[0x21D4B6B70](v35, -1, -1);
        }

        sub_21CB3068C(a5, (uint64_t)a3);
      }
    }
    a6(0, a3);
    return objc_msgSend(a8, sel_signal);
  }
  else
  {
    uint64_t v27 = *a5;
    if (type metadata accessor for FMFInitRefreshClientRequest() == v27) {
      *(unsigned char *)(a4 + qword_267C97470) = 1;
    }
    if (a2 >> 60 == 15)
    {
LABEL_27:
      if (qword_267C94990 != -1) {
        swift_once();
      }
      uint64_t v37 = sub_21CB880A0();
      sub_21CA4CC18(v37, (uint64_t)qword_267CA5368);
      uint64_t v38 = sub_21CB88070();
      os_log_type_t v39 = sub_21CB88880();
      if (os_log_type_enabled(v38, v39))
      {
        uint64_t v40 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v40 = 0;
        _os_log_impl(&dword_21CA00000, v38, v39, "FMFServerInteractionController: received empty data", v40, 2u);
        MEMORY[0x21D4B6B70](v40, -1, -1);
      }

      sub_21CB312DC();
      uint64_t v41 = (void *)swift_allocError();
      *char v42 = 1;
      a6(0, v41);

      return objc_msgSend(a8, sel_signal);
    }
    else
    {
      switch(a2 >> 62)
      {
        case 1uLL:
          if ((int)a1 == a1 >> 32) {
            goto LABEL_27;
          }
          goto LABEL_24;
        case 2uLL:
          if (*(void *)(a1 + 16) == *(void *)(a1 + 24)) {
            goto LABEL_27;
          }
LABEL_24:
          sub_21CA1E93C(a1, a2);
          goto LABEL_25;
        case 3uLL:
          goto LABEL_12;
        default:
          if ((a2 & 0xFF000000000000) == 0)
          {
LABEL_12:
            sub_21CA66C90(a1, a2);
            goto LABEL_27;
          }
LABEL_25:
          sub_21CB871F0();
          swift_allocObject();
          sub_21CB871E0();
          swift_getWitnessTable();
          sub_21CB871D0();
          swift_release();
          uint64_t v43 = v69[0];
          if (qword_267C94990 != -1) {
            swift_once();
          }
          uint64_t v44 = sub_21CB880A0();
          sub_21CA4CC18(v44, (uint64_t)qword_267CA5368);
          swift_retain_n();
          uint64_t v45 = sub_21CB88070();
          os_log_type_t v46 = sub_21CB88880();
          if (os_log_type_enabled(v45, v46))
          {
            uint64_t v47 = (uint8_t *)swift_slowAlloc();
            uint64_t v66 = swift_slowAlloc();
            v69[0] = v66;
            *(_DWORD *)uint64_t v47 = 136315138;
            uint64_t v65 = v47 + 4;
            uint64_t v70 = v43;
            swift_retain();
            uint64_t v48 = sub_21CB88310();
            uint64_t v70 = sub_21CA4E450(v48, v49, v69);
            sub_21CB889C0();
            swift_release_n();
            swift_bridgeObjectRelease();
            _os_log_impl(&dword_21CA00000, v45, v46, "*** FMFServerInteractionController: received response?: %s", v47, 0xCu);
            swift_arrayDestroy();
            MEMORY[0x21D4B6B70](v66, -1, -1);
            MEMORY[0x21D4B6B70](v47, -1, -1);
          }
          else
          {

            swift_release_n();
          }
          uint64_t v50 = *(void *)(v43 + 16);
          *(void *)(a4 + qword_267CA53B0) = v50;
          swift_retain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(void *)(a4 + qword_267CA53B8) = *(void *)(v43 + 24);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          sub_21CA23880(v50);
          swift_release();
          uint64_t v51 = MEMORY[0x21D4B6C80](a4 + qword_267C97450);
          if (v51)
          {
            uint64_t v52 = (void *)v51;
            type metadata accessor for FMFInitRefreshClientResponse();
            uint64_t v53 = swift_dynamicCastClass();
            if (v53)
            {
              uint64_t v54 = v53;
              swift_retain();
              sub_21CA23D70(v54);

              swift_release();
            }
            else
            {
            }
          }
          uint64_t v55 = *(void *)(v43 + OBJC_IVAR____TtC7FMFCore15FMFBaseResponse_alert);
          if (v55)
          {
            uint64_t v56 = a4 + qword_267CA53A8;
            MEMORY[0x21D4B6C80](a4 + qword_267CA53A8);
            *(void *)(v55 + 24) = *(void *)(v56 + 8);
            swift_unknownObjectWeakAssign();
            swift_retain();
            swift_retain();
            swift_unknownObjectRelease();
            if ((sub_21CA03D0C() & 1) != 0 && (uint64_t v57 = MEMORY[0x21D4B6C80](a4 + qword_267CA53A0)) != 0)
            {
              uint64_t v58 = v57;
              swift_retain();
              unint64_t v59 = sub_21CB88070();
              os_log_type_t v60 = sub_21CB88880();
              if (os_log_type_enabled(v59, v60))
              {
                uint64_t v61 = (uint8_t *)swift_slowAlloc();
                *(_WORD *)uint64_t v61 = 0;
                _os_log_impl(&dword_21CA00000, v59, v60, "FMFManager: didReceive serverAlert", v61, 2u);
                MEMORY[0x21D4B6B70](v61, -1, -1);
              }

              swift_beginAccess();
              if (MEMORY[0x21D4B6C80](v58 + 32))
              {
                uint64_t v62 = *(void *)(v58 + 40);
                uint64_t ObjectType = swift_getObjectType();
                (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v62 + 104))(v58, v55, ObjectType, v62);
                swift_release();
                swift_release();
                swift_release();
                swift_unknownObjectRelease();
              }
              else
              {
                swift_release();
                swift_release();
                swift_release();
              }
              swift_unknownObjectRelease();
            }
            else
            {
              swift_release();
              swift_release();
            }
          }
          uint64_t v64 = swift_retain();
          a6(v64, 0);
          swift_release_n();
          objc_msgSend(a8, sel_signal, v65);
          id result = (id)sub_21CA66C90(a1, a2);
          break;
      }
    }
  }
  return result;
}

uint64_t sub_21CA23880(uint64_t a1)
{
  uint64_t v2 = sub_21CB88100();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  id v28 = (char *)v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_21CB88150();
  uint64_t v27 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  char v26 = (char *)v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_267C94990 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_21CB880A0();
  sub_21CA4CC18(v7, (uint64_t)qword_267CA5368);
  swift_bridgeObjectRetain_n();
  uint64_t v8 = sub_21CB88070();
  os_log_type_t v9 = sub_21CB88880();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = (uint8_t *)swift_slowAlloc();
    uint64_t v11 = swift_slowAlloc();
    uint64_t v25 = v3;
    uint64_t v12 = v11;
    aBlock[0] = v11;
    *(_DWORD *)uint64_t v10 = 136315138;
    v23[1] = v10 + 4;
    swift_bridgeObjectRetain();
    uint64_t v24 = v5;
    uint64_t v13 = sub_21CB88210();
    uint64_t v14 = v2;
    unint64_t v16 = v15;
    swift_bridgeObjectRelease();
    uint64_t v29 = sub_21CA4E450(v13, v16, aBlock);
    sub_21CB889C0();
    swift_bridgeObjectRelease_n();
    uint64_t v2 = v14;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_21CA00000, v8, v9, "FMFServerInteractionController: process server context: %s", v10, 0xCu);
    uint64_t v5 = v24;
    swift_arrayDestroy();
    uint64_t v17 = v12;
    uint64_t v3 = v25;
    MEMORY[0x21D4B6B70](v17, -1, -1);
    MEMORY[0x21D4B6B70](v10, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  if (qword_267C949A0 != -1) {
    swift_once();
  }
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = a1;
  aBlock[4] = (uint64_t)sub_21CA2FC44;
  void aBlock[5] = v18;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_21CA1B084;
  uint64_t aBlock[3] = (uint64_t)&unk_26CD6F900;
  os_log_type_t v19 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  int v20 = v26;
  sub_21CB88120();
  uint64_t v29 = MEMORY[0x263F8EE78];
  sub_21CA36588((unint64_t *)&qword_267C96FC0, MEMORY[0x263F8F030]);
  sub_21CA57E34((uint64_t *)&unk_267C96DD0);
  sub_21CA3566C((unint64_t *)&qword_267C96FD0, (uint64_t *)&unk_267C96DD0);
  uint64_t v21 = v28;
  sub_21CB88A60();
  MEMORY[0x21D4B5A20](0, v20, v21, v19);
  _Block_release(v19);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v21, v2);
  (*(void (**)(char *, uint64_t))(v27 + 8))(v20, v5);
  return swift_release();
}

uint64_t type metadata accessor for FMFInitRefreshClientResponse()
{
  uint64_t result = qword_267C94E28;
  if (!qword_267C94E28) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_21CA23D70(uint64_t a1)
{
  uint64_t v3 = sub_21CB88100();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_21CB88150();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15[0] = *(void *)&v1[OBJC_IVAR____TtC7FMFCore25FMFGenericResponseHandler_updateQueue];
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v1;
  aBlock[4] = sub_21CA312A0;
  void aBlock[5] = v11;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_21CA1B084;
  uint64_t aBlock[3] = &unk_26CD6DA30;
  uint64_t v12 = _Block_copy(aBlock);
  swift_retain();
  uint64_t v13 = v1;
  sub_21CB88120();
  v15[1] = MEMORY[0x263F8EE78];
  sub_21CB068B4((unint64_t *)&qword_267C96FC0, MEMORY[0x263F8F030]);
  sub_21CA57E34((uint64_t *)&unk_267C96DD0);
  sub_21CA3566C((unint64_t *)&qword_267C96FD0, (uint64_t *)&unk_267C96DD0);
  sub_21CB88A60();
  MEMORY[0x21D4B5A20](0, v10, v6, v12);
  _Block_release(v12);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return swift_release();
}

uint64_t *sub_21CA24028@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return sub_21CA24040(a1, a2);
}

uint64_t *sub_21CA24040@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  char v102 = a2;
  uint64_t v3 = sub_21CA57E34(&qword_267C95078);
  uint64_t v4 = MEMORY[0x270FA5388](v3 - 8);
  uint64_t v99 = (uint64_t)v90 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v100 = (uint64_t)v90 - v7;
  MEMORY[0x270FA5388](v6);
  uint64_t v103 = (uint64_t)v90 - v8;
  uint64_t v9 = type metadata accessor for FMFLabelledLocation();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v104 = v9;
  uint64_t v105 = v10;
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v107 = (uint64_t)v90 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v97 = (char *)v90 - v14;
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v108 = (uint64_t)v90 - v16;
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  uint64_t v98 = (char *)v90 - v18;
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  uint64_t v106 = (uint64_t)v90 - v20;
  MEMORY[0x270FA5388](v19);
  uint64_t v96 = (uint64_t)v90 - v21;
  uint64_t v22 = sub_21CB87590();
  uint64_t v101 = *(void *)(v22 - 8);
  MEMORY[0x270FA5388](v22);
  uint64_t v24 = (char *)v90 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_21CA57E34(&qword_267C95080);
  uint64_t v109 = *(void *)(v25 - 8);
  MEMORY[0x270FA5388](v25);
  uint64_t v27 = (char *)v90 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  LOBYTE(v115[39]) = 0;
  sub_21CA2B2CC(a1, a1[3]);
  sub_21CA24DA4();
  uint64_t v28 = v110;
  sub_21CB890B0();
  if (v28) {
    return (uint64_t *)sub_21CA2B0D0((uint64_t)a1);
  }
  uint64_t v95 = v24;
  uint64_t v110 = v22;
  uint64_t v30 = v109;
  v111[0] = 0;
  sub_21CA669BC();
  os_log_type_t v31 = v27;
  sub_21CB88E20();
  memcpy(v112, v113, 0x130uLL);
  nullsub_1(v112, v32);
  sub_21CA76174((uint64_t)v112, (uint64_t)v114);
  uint64_t v33 = v30;
  sub_21CA76174((uint64_t)v114, (uint64_t)v115);
  LOBYTE(v113[0]) = 6;
  char v34 = sub_21CB88DF0();
  uint64_t v35 = v110;
  LOBYTE(v115[44]) = v34 & 1;
  LOBYTE(v113[0]) = 1;
  sub_21CB88E00();
  double v37 = v36;
  LOBYTE(v113[0]) = 2;
  sub_21CB88E00();
  double v39 = v38;
  LOBYTE(v113[0]) = 3;
  sub_21CB88E00();
  double v41 = v40;
  LOBYTE(v113[0]) = 4;
  uint64_t v42 = sub_21CB88E30();
  uint64_t v92 = &v115[39];
  id v43 = objc_msgSend(self, sel_fm_dateFromEpoch_, v42);
  sub_21CB87560();

  sub_21CA57E34(&qword_267C94E70);
  LOBYTE(v112[0]) = 5;
  sub_21CA6246C((unint64_t *)&qword_267C94E78, &qword_267C94E80);
  sub_21CB88E20();
  uint64_t v93 = v31;
  v115[43] = v113[0];
  uint64_t v49 = v104;
  uint64_t v50 = v103;
  if (v113[0])
  {
    v90[1] = v113[0];
    uint64_t v91 = v25;
    uint64_t v51 = *(void *)(v113[0] + 16);
    if (v51)
    {
      uint64_t v52 = v113[0] + ((*(unsigned __int8 *)(v105 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v105 + 80));
      uint64_t v94 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v105 + 72);
      swift_bridgeObjectRetain();
      uint64_t v53 = v106;
      while (1)
      {
        sub_21CA761DC(v52, v53);
        if (*(void *)(v53 + 24)) {
          break;
        }
LABEL_16:
        uint64_t v53 = v106;
        sub_21CA76240(v106);
        v52 += (uint64_t)v94;
        if (!--v51) {
          goto LABEL_24;
        }
      }
      switch(*(unsigned char *)(v106 + 32))
      {
        case 1:
        case 2:
          char v54 = sub_21CB88F50();
          swift_bridgeObjectRelease();
          if ((v54 & 1) == 0) {
            goto LABEL_16;
          }
          break;
        case 3:
          goto LABEL_16;
        default:
          swift_bridgeObjectRelease();
          break;
      }
      uint64_t v50 = v103;
      sub_21CA76404(v106, v103);
      uint64_t v58 = v105;
      unint64_t v59 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v105 + 56);
      uint64_t v60 = v50;
      uint64_t v61 = 0;
    }
    else
    {
      swift_bridgeObjectRetain();
LABEL_24:
      uint64_t v58 = v105;
      unint64_t v59 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v105 + 56);
      uint64_t v50 = v103;
      uint64_t v60 = v103;
      uint64_t v61 = 1;
    }
    uint64_t v77 = v104;
    uint64_t v94 = v59;
    v59(v60, v61, 1, v104);
    swift_bridgeObjectRelease();
    int v78 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v58 + 48))(v50, 1, v77);
    uint64_t v33 = v30;
    uint64_t v25 = v91;
    if (v78 != 1)
    {
      uint64_t v79 = v50;
      uint64_t v80 = v96;
      sub_21CA76404(v79, v96);
      uint64_t v81 = v80;
      uint64_t v75 = *(void *)(v80 + 16);
      uint64_t v74 = *(void *)(v80 + 24);
      __int16 v76 = *(_WORD *)(v81 + 32);
      swift_bridgeObjectRetain();
      sub_21CA76240(v81);
      goto LABEL_56;
    }
    uint64_t v49 = v104;
  }
  else
  {
    uint64_t v94 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v105 + 56);
    v94(v103, 1, 1, v104);
  }
  sub_21CA24E20(v50);
  if (!v115[43])
  {
    uint64_t v55 = v100;
    v94(v100, 1, 1, v49);
LABEL_29:
    sub_21CA24E20(v55);
    if (!v115[43])
    {
      uint64_t v71 = v99;
      v94(v99, 1, 1, v49);
LABEL_45:
      sub_21CA24E20(v71);
      if (v115[43] && *(void *)(v115[43] + 16))
      {
        unint64_t v73 = v115[43] + ((*(unsigned __int8 *)(v105 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v105 + 80));
        uint64_t v75 = *(void *)(v73 + 16);
        uint64_t v74 = *(void *)(v73 + 24);
        __int16 v76 = *(_WORD *)(v73 + 32);
        swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v75 = 0;
        uint64_t v74 = 0;
        __int16 v76 = 0;
      }
      goto LABEL_56;
    }
    uint64_t v63 = v25;
    uint64_t v64 = *(void *)(v115[43] + 16);
    uint64_t v65 = v105;
    if (v64)
    {
      uint64_t v66 = v115[43] + ((*(unsigned __int8 *)(v105 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v105 + 80));
      uint64_t v108 = *(void *)(v105 + 72);
      uint64_t v106 = v115[43];
      swift_bridgeObjectRetain();
      uint64_t v67 = v107;
      while (1)
      {
        sub_21CA761DC(v66, v67);
        if (*(void *)(v67 + 24)) {
          break;
        }
LABEL_33:
        uint64_t v67 = v107;
        sub_21CA76240(v107);
        v66 += v108;
        if (!--v64)
        {
          uint64_t v72 = 1;
          goto LABEL_42;
        }
      }
      switch(*(unsigned char *)(v107 + 32))
      {
        case 2:
          swift_bridgeObjectRelease();
          break;
        case 3:
          goto LABEL_33;
        default:
          char v68 = sub_21CB88F50();
          swift_bridgeObjectRelease();
          if ((v68 & 1) == 0) {
            goto LABEL_33;
          }
          break;
      }
      sub_21CA76404(v107, v99);
      uint64_t v72 = 0;
LABEL_42:
      uint64_t v33 = v30;
      uint64_t v49 = v104;
      uint64_t v65 = v105;
    }
    else
    {
      swift_bridgeObjectRetain();
      uint64_t v72 = 1;
    }
    uint64_t v71 = v99;
    v94(v99, v72, 1, v49);
    swift_bridgeObjectRelease();
    uint64_t v25 = v63;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v65 + 48))(v71, 1, v49) == 1)
    {
      uint64_t v35 = v110;
      goto LABEL_45;
    }
    uint64_t v69 = v71;
    uint64_t v70 = (uint64_t)v97;
    goto LABEL_50;
  }
  uint64_t v91 = v25;
  uint64_t v44 = *(void *)(v115[43] + 16);
  uint64_t v45 = v105;
  if (v44)
  {
    uint64_t v46 = v115[43] + ((*(unsigned __int8 *)(v105 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v105 + 80));
    uint64_t v106 = *(void *)(v105 + 72);
    swift_bridgeObjectRetain();
    uint64_t v47 = v108;
    while (1)
    {
      sub_21CA761DC(v46, v47);
      if (*(void *)(v47 + 24)) {
        break;
      }
LABEL_9:
      uint64_t v47 = v108;
      sub_21CA76240(v108);
      v46 += v106;
      if (!--v44)
      {
        uint64_t v56 = 1;
        uint64_t v33 = v30;
        uint64_t v49 = v104;
        uint64_t v45 = v105;
        goto LABEL_22;
      }
    }
    switch(*(unsigned char *)(v108 + 32))
    {
      case 1:
        swift_bridgeObjectRelease();
        break;
      case 3:
        goto LABEL_9;
      default:
        char v48 = sub_21CB88F50();
        swift_bridgeObjectRelease();
        if ((v48 & 1) == 0) {
          goto LABEL_9;
        }
        break;
    }
    uint64_t v57 = v100;
    sub_21CA76404(v108, v100);
    uint64_t v56 = 0;
    uint64_t v33 = v30;
    uint64_t v49 = v104;
    uint64_t v45 = v105;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v56 = 1;
LABEL_22:
    uint64_t v57 = v100;
  }
  v94(v57, v56, 1, v49);
  swift_bridgeObjectRelease();
  int v62 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v45 + 48))(v57, 1, v49);
  uint64_t v55 = v57;
  uint64_t v25 = v91;
  if (v62 == 1)
  {
    uint64_t v35 = v110;
    goto LABEL_29;
  }
  uint64_t v69 = v55;
  uint64_t v70 = (uint64_t)v98;
LABEL_50:
  sub_21CA76404(v69, v70);
  uint64_t v75 = *(void *)(v70 + 16);
  uint64_t v74 = *(void *)(v70 + 24);
  __int16 v76 = *(_WORD *)(v70 + 32);
  swift_bridgeObjectRetain();
  sub_21CA76240(v70);
  uint64_t v35 = v110;
LABEL_56:
  v115[40] = v75;
  v115[41] = v74;
  LOWORD(v115[42]) = v76;
  id v82 = objc_allocWithZone(MEMORY[0x263F00A50]);
  uint64_t v83 = v95;
  unint64_t v84 = (void *)sub_21CB87510();
  id v85 = objc_msgSend(v82, sel_initWithCoordinate_altitude_horizontalAccuracy_verticalAccuracy_course_speed_timestamp_, v84, v39, v37, 0.0, v41, 0.0, -1.0, -1.0);
  uint64_t v110 = (uint64_t)v85;

  (*(void (**)(char *, uint64_t))(v101 + 8))(v83, v35);
  (*(void (**)(char *, uint64_t))(v33 + 8))(v93, v25);
  v115[38] = v85;
  sub_21CA76174((uint64_t)v115, (uint64_t)v111);
  LOBYTE(v84) = *v92;
  uint64_t v86 = v115[40];
  uint64_t v87 = v115[41];
  __int16 v88 = v115[42];
  uint64_t v89 = v115[43];
  LOBYTE(v85) = v92[40];
  sub_21CA76174((uint64_t)v111, (uint64_t)v112);
  v112[38] = v110;
  LOBYTE(v112[39]) = (_BYTE)v84;
  v112[40] = v86;
  v112[41] = v87;
  LOWORD(v112[42]) = v88;
  v112[43] = v89;
  LOBYTE(v112[44]) = (_BYTE)v85;
  memcpy(v102, v112, 0x161uLL);
  sub_21CA7629C(v112);
  sub_21CA2B0D0((uint64_t)a1);
  memcpy(v113, v115, 0x161uLL);
  return sub_21CA76350(v113);
}

uint64_t type metadata accessor for FMFLabelledLocation()
{
  uint64_t result = qword_267C95DC8;
  if (!qword_267C95DC8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unint64_t sub_21CA24DA4()
{
  unint64_t result = qword_267C95088;
  if (!qword_267C95088)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C95088);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for FMFLabelledLocation(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_21CAD7FE8);
}

uint64_t storeEnumTagSinglePayload for FMFLabelledLocation(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_21CAD80A8);
}

uint64_t sub_21CA24E20(uint64_t a1)
{
  uint64_t v2 = sub_21CA57E34(&qword_267C95078);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_21CA24E80(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_21CA57E34(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

char *sub_21CA24EE4(char *__dst, char *__src, void *a3)
{
  uint64_t v4 = __dst;
  uint64_t v5 = a3[3];
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = *(void *)(*(void *)(a3[2] - 8) + 64) + v7;
  uint64_t v9 = a3[4] - 8;
  uint64_t v10 = *(void *)v9;
  uint64_t v11 = *(unsigned __int8 *)(*(void *)v9 + 80);
  uint64_t v12 = (*(void *)(v6 + 64) + v11 + (v8 & ~v7)) & ~v11;
  if (*(_DWORD *)(*(void *)v9 + 84)) {
    uint64_t v13 = *(void *)(*(void *)v9 + 64);
  }
  else {
    uint64_t v13 = *(void *)(*(void *)v9 + 64) + 1;
  }
  if ((unint64_t)(v13 + v12) <= 0x28) {
    uint64_t v14 = 40;
  }
  else {
    uint64_t v14 = v13 + v12;
  }
  if (v14 > 3) {
    goto LABEL_10;
  }
  unsigned int v15 = ((1 << (8 * v14)) + 1) >> (8 * v14);
  if (v15 > 0xFFFC)
  {
    unsigned int v16 = *(_DWORD *)&__src[v14];
    unsigned int v17 = v16 - 3;
    if (v16 < 3) {
      goto LABEL_28;
    }
    goto LABEL_15;
  }
  if (v15 > 0xFC)
  {
    unsigned int v16 = *(unsigned __int16 *)&__src[v14];
    unsigned int v17 = v16 - 3;
    if (v16 < 3) {
      goto LABEL_28;
    }
  }
  else
  {
LABEL_10:
    unsigned int v16 = __src[v14];
    unsigned int v17 = v16 - 3;
    if (v16 < 3) {
      goto LABEL_28;
    }
  }
LABEL_15:
  if (v14 <= 3) {
    uint64_t v18 = v14;
  }
  else {
    uint64_t v18 = 4;
  }
  switch(v18)
  {
    case 1:
      int v19 = *__src;
      if (v14 < 4) {
        goto LABEL_26;
      }
      goto LABEL_27;
    case 2:
      int v19 = *(unsigned __int16 *)__src;
      if (v14 >= 4) {
        goto LABEL_27;
      }
      goto LABEL_26;
    case 3:
      int v19 = *(unsigned __int16 *)__src | (__src[2] << 16);
      if (v14 >= 4) {
        goto LABEL_27;
      }
      goto LABEL_26;
    case 4:
      int v19 = *(_DWORD *)__src;
      if (v14 < 4) {
LABEL_26:
      }
        v19 |= v17 << (8 * v14);
LABEL_27:
      unsigned int v16 = v19 + 3;
      break;
    default:
      break;
  }
LABEL_28:
  if (v16 == 2)
  {
    uint64_t v25 = (void *)*((void *)__src + 1);
    *(void *)__dst = *(void *)__src;
    swift_retain();
    id v26 = v25;
    *((void *)v4 + 1) = v25;
    if (v14 <= 3)
    {
      unsigned int v27 = ((1 << (8 * v14)) + 1) >> (8 * v14);
      if (v27 > 0xFFFC)
      {
        int v29 = 2;
        goto LABEL_54;
      }
      if (v27 > 0xFC)
      {
        LOWORD(v29) = 2;
        goto LABEL_57;
      }
    }
    v4[v14] = 2;
    return v4;
  }
  if (v16 == 1)
  {
    uint64_t v28 = *((void *)__src + 1);
    *(void *)__dst = *(void *)__src;
    *((void *)__dst + 1) = v28;
    *((void *)__dst + 2) = *((void *)__src + 2);
    *(_OWORD *)(__dst + 24) = *(_OWORD *)(__src + 24);
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    if (v14 > 3)
    {
LABEL_40:
      v4[v14] = 1;
      return v4;
    }
    int v29 = 1;
    unsigned int v30 = ((1 << (8 * v14)) + 1) >> (8 * v14);
    if (v30 <= 0xFFFC)
    {
      if (v30 <= 0xFC) {
        goto LABEL_40;
      }
LABEL_57:
      *(_WORD *)&v4[v14] = v29;
      return v4;
    }
LABEL_54:
    *(_DWORD *)&v4[v14] = v29;
    return v4;
  }
  if (v16)
  {
    if (v14 > 3) {
      goto LABEL_45;
    }
    unsigned int v31 = ((1 << (8 * v14)) + 1) >> (8 * v14);
    uint64_t v32 = 2;
    if (v31 > 0xFFFC) {
      uint64_t v32 = 4;
    }
    if (v31 <= 0xFC) {
LABEL_45:
    }
      uint64_t v32 = 1;
    memcpy(__dst, __src, v32 + v14);
  }
  else
  {
    size_t __n = v13;
    uint64_t v20 = ~v7;
    uint64_t v37 = *(void *)(v6 + 64);
    uint64_t v38 = a3[4];
    (*(void (**)(char *, char *))(*(void *)(a3[2] - 8) + 16))(__dst, __src);
    double v36 = v4;
    unint64_t v21 = (unint64_t)&v4[v8] & v20;
    unint64_t v22 = (unint64_t)&__src[v8] & v20;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 16))(v21, v22, v5);
    uint64_t v23 = (void *)((v21 + v37 + v11) & ~v11);
    uint64_t v24 = (const void *)((v22 + v37 + v11) & ~v11);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v24, 1, v38))
    {
      memcpy(v23, v24, __n);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v10 + 16))(v23, v24, v38);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v23, 0, 1, v38);
    }
    uint64_t v4 = v36;
    if (v14 > 3) {
      goto LABEL_49;
    }
    unsigned int v33 = ((1 << (8 * v14)) + 1) >> (8 * v14);
    if (v33 > 0xFFFC)
    {
      *(_DWORD *)&v36[v14] = 0;
      return v4;
    }
    if (v33 <= 0xFC) {
LABEL_49:
    }
      v36[v14] = 0;
    else {
      *(_WORD *)&v36[v14] = 0;
    }
  }
  return v4;
}

uint64_t sub_21CA2538C(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = *(void *)(a3 + 24);
  unsigned int v6 = *(_DWORD *)(v4 + 84);
  uint64_t v7 = *(void *)(v5 - 8);
  uint64_t v8 = *(unsigned int *)(v7 + 84);
  uint64_t v9 = *(unsigned __int8 *)(v7 + 80);
  if (v8 <= v6) {
    unsigned int v10 = *(_DWORD *)(v4 + 84);
  }
  else {
    unsigned int v10 = *(_DWORD *)(v7 + 84);
  }
  if (!a2) {
    return 0;
  }
  uint64_t v11 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) + v9;
  unsigned int v12 = a2 - v10;
  if (a2 <= v10) {
    goto LABEL_24;
  }
  uint64_t v13 = (v11 & ~v9) + *(void *)(*(void *)(v5 - 8) + 64);
  char v14 = 8 * v13;
  if (v13 <= 3)
  {
    unsigned int v16 = ((v12 + ~(-1 << v14)) >> v14) + 1;
    if (HIWORD(v16))
    {
      int v15 = *(_DWORD *)((char *)a1 + v13);
      if (!v15) {
        goto LABEL_24;
      }
      goto LABEL_14;
    }
    if (v16 > 0xFF)
    {
      int v15 = *(unsigned __int16 *)((char *)a1 + v13);
      if (!*(unsigned __int16 *)((char *)a1 + v13)) {
        goto LABEL_24;
      }
      goto LABEL_14;
    }
    if (v16 < 2)
    {
LABEL_24:
      if (v10)
      {
        if (v6 >= v8) {
          return (*(uint64_t (**)(void))(v4 + 48))();
        }
        else {
          return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v7 + 48))(((unint64_t)a1 + v11) & ~v9, v8, v5);
        }
      }
      return 0;
    }
  }
  int v15 = *((unsigned __int8 *)a1 + v13);
  if (!*((unsigned char *)a1 + v13)) {
    goto LABEL_24;
  }
LABEL_14:
  int v17 = (v15 - 1) << v14;
  if (v13 > 3) {
    int v17 = 0;
  }
  if (v13)
  {
    if (v13 <= 3) {
      int v18 = v13;
    }
    else {
      int v18 = 4;
    }
    switch(v18)
    {
      case 2:
        int v19 = *a1;
        break;
      case 3:
        int v19 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        int v19 = *(_DWORD *)a1;
        break;
      default:
        int v19 = *(unsigned __int8 *)a1;
        break;
    }
  }
  else
  {
    int v19 = 0;
  }
  return v10 + (v19 | v17) + 1;
}

uint64_t sub_21CA25578(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(*(void *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 16))((*(void *)(v6 + 48) + *(unsigned __int8 *)(v7 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(void *)(v6 + 48) + *(unsigned __int8 *)(v7 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_21CA25620(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1;
}

void *sub_21CA25674(void *a1, const void *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v5 + 48))(a2, 2, AssociatedTypeWitness))
  {
    unsigned int v6 = *(_DWORD *)(v5 + 84);
    size_t v7 = *(void *)(v5 + 64);
    if (v6 <= 1)
    {
      if (v7 <= 3)
      {
        unsigned int v9 = (~(-1 << (8 * v7)) - v6 + 2) >> (8 * v7);
        if (v9 > 0xFFFE)
        {
          uint64_t v8 = 4;
        }
        else
        {
          BOOL v10 = v9 != 0;
          BOOL v11 = v9 >= 0xFF;
          uint64_t v8 = 2;
          if (!v11) {
            uint64_t v8 = v10;
          }
        }
      }
      else
      {
        uint64_t v8 = 1;
      }
      v7 += v8;
    }
    memcpy(a1, a2, v7);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v5 + 56))(a1, 0, 2, AssociatedTypeWitness);
  }
  return a1;
}

uint64_t sub_21CA257D0()
{
  uint64_t v2 = v0[44];
  uint64_t v1 = (void *)v0[45];
  uint64_t v3 = *(os_unfair_lock_s **)(v0[25] + 16);
  os_unfair_lock_lock(v3);
  swift_beginAccess();
  sub_21CA25DE0(v1);
  swift_endAccess();
  sub_21CA24E80((uint64_t)v1, v2, &qword_267C95878);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v19 = v0[24];
      sub_21CA26A4C(v0[44], v0[26], &qword_267C95870);
      os_unfair_lock_unlock(v3);
      sub_21CAAEEB8(v19);
      uint64_t v24 = v0[45];
      uint64_t v25 = v0[24];
      sub_21CA1B88C(v0[26], &qword_267C95870);
      sub_21CA1B88C(v24, &qword_267C95878);
      uint64_t v26 = sub_21CA57E34(&qword_267C95818);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v25, 0, 1, v26);
      goto LABEL_10;
    case 2u:
      os_unfair_lock_unlock(v3);
      swift_willThrow();
      sub_21CA1B88C(v0[45], &qword_267C95878);
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v20 = (uint64_t (*)(void))v0[1];
      goto LABEL_11;
    case 3u:
      uint64_t v21 = v0[45];
      uint64_t v22 = v0[24];
      os_unfair_lock_unlock(v3);
      sub_21CA1B88C(v21, &qword_267C95878);
      uint64_t v23 = sub_21CA57E34(&qword_267C95818);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v22, 1, 1, v23);
LABEL_10:
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v20 = (uint64_t (*)(void))v0[1];
LABEL_11:
      return v20();
    case 4u:
      int v18 = sub_21CAAF4E0;
      goto LABEL_7;
    default:
      uint64_t v4 = v0[44];
      uint64_t v5 = v0[42];
      uint64_t v6 = v0[38];
      uint64_t v28 = v0[41];
      uint64_t v29 = v0[37];
      uint64_t v7 = v0[35];
      uint64_t v34 = v0[40];
      uint64_t v35 = v0[36];
      uint64_t v8 = v0[33];
      uint64_t v37 = v0[34];
      uint64_t v30 = v0[32];
      uint64_t v31 = v0[30];
      uint64_t v32 = v0[39];
      uint64_t v38 = v0[29];
      uint64_t v36 = v0[25];
      uint64_t v9 = sub_21CA57E34(&qword_267C95880);
      uint64_t v10 = v4 + *(int *)(v9 + 48);
      uint64_t v11 = v4 + *(int *)(v9 + 64);
      sub_21CA26A4C(v4, v5, &qword_267C95868);
      unsigned int v33 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32);
      v33(v6, v10, v37);
      sub_21CA26A4C(v11, v8, &qword_267C95858);
      swift_beginAccess();
      uint64_t v12 = sub_21CB88640();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v38, 1, 1, v12);
      sub_21CA24E80(v5, v28, &qword_267C95868);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v29, v6, v37);
      sub_21CA24E80(v8, v30, &qword_267C95858);
      unint64_t v13 = (*(unsigned __int8 *)(v32 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80);
      unint64_t v14 = (v34 + *(unsigned __int8 *)(v7 + 80) + v13) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
      unint64_t v15 = (v35 + *(unsigned __int8 *)(v31 + 80) + v14) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80);
      unsigned int v16 = (void *)swift_allocObject();
      v16[2] = 0;
      uint64_t v16[3] = 0;
      v16[4] = v36;
      sub_21CA26A4C(v28, (uint64_t)v16 + v13, &qword_267C95868);
      v33((uint64_t)v16 + v14, v29, v37);
      sub_21CA26A4C(v30, (uint64_t)v16 + v15, &qword_267C95858);
      swift_retain();
      uint64_t v17 = sub_21CB09F98(v38, (uint64_t)&unk_267C95898, (uint64_t)v16);
      sub_21CA0A4E0(v17);
      swift_endAccess();
      swift_release();
      int v18 = sub_21CAAF068;
LABEL_7:
      return MEMORY[0x270FA2498](v18, 0, 0);
  }
}

uint64_t sub_21CA25DE0@<X0>(void *a1@<X8>)
{
  uint64_t v2 = (void *)v1;
  uint64_t v45 = a1;
  uint64_t v3 = sub_21CA57E34(&qword_267C95810);
  uint64_t v4 = MEMORY[0x270FA5388](v3 - 8);
  uint64_t v6 = (char *)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v43 - v7;
  uint64_t v9 = sub_21CA57E34(&qword_267C95818);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  unint64_t v13 = (char *)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  unint64_t v15 = (char *)&v43 - v14;
  uint64_t v16 = sub_21CA57E34(&qword_267C95848);
  MEMORY[0x270FA5388](v16);
  int v18 = (uint64_t *)((char *)&v43 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_21CA24E80(v1, (uint64_t)v18, &qword_267C95848);
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 1:
      if (v18[4]) {
        goto LABEL_30;
      }
      uint64_t v34 = v18[2];
      uint64_t v44 = v18[3];
      uint64_t v36 = (void *)*v18;
      uint64_t v46 = (void *)v18[1];
      uint64_t v35 = v46;
      sub_21CA1B88C((uint64_t)v2, &qword_267C95848);
      swift_storeEnumTagMultiPayload();
      if ((uint64_t)v35[3] < 1)
      {
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v6, 1, 1, v9);
        sub_21CA1B88C((uint64_t)v6, &qword_267C95810);
        sub_21CA1B88C((uint64_t)v2, &qword_267C95848);
        *uint64_t v2 = v36;
        v2[1] = v35;
        uint64_t v42 = v44;
        v2[2] = v34;
        v2[3] = v42;
        v2[4] = 0;
        swift_storeEnumTagMultiPayload();
        sub_21CA57E34(&qword_267C95878);
        return swift_storeEnumTagMultiPayload();
      }
      uint64_t v37 = v36;
      uint64_t v38 = v44;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_21CAB54A8();
        uint64_t v35 = v46;
      }
      uint64_t result = sub_21CA26A4C((uint64_t)v35+ ((*(unsigned __int8 *)(v10 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))+ *(void *)(v10 + 72) * v35[4], (uint64_t)v6, &qword_267C95818);
      uint64_t v39 = v35[4];
      BOOL v30 = __OFADD__(v39, 1);
      uint64_t v40 = v39 + 1;
      if (v30) {
        goto LABEL_26;
      }
      uint64_t v41 = v35[3];
      if (v40 >= v35[2]) {
        uint64_t v40 = 0;
      }
      v35[4] = v40;
      if (!__OFSUB__(v41, 1))
      {
        v35[3] = v41 - 1;
        (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v6, 0, 1, v9);
        sub_21CA26A4C((uint64_t)v6, (uint64_t)v13, &qword_267C95818);
        sub_21CA1B88C((uint64_t)v2, &qword_267C95848);
        *uint64_t v2 = v37;
        v2[1] = v35;
        v2[2] = v34;
        v2[3] = v38;
        v2[4] = 0;
        swift_storeEnumTagMultiPayload();
        uint64_t v33 = (uint64_t)v13;
        goto LABEL_21;
      }
      goto LABEL_28;
    case 2:
      uint64_t v28 = v18[1];
      uint64_t v46 = (void *)*v18;
      unsigned int v27 = v46;
      sub_21CA1B88C((uint64_t)v2, &qword_267C95848);
      swift_storeEnumTagMultiPayload();
      if ((uint64_t)v27[3] < 1)
      {
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, 1, 1, v9);
        swift_release();
        sub_21CA1B88C((uint64_t)v8, &qword_267C95810);
        sub_21CA1B88C((uint64_t)v2, &qword_267C95848);
        swift_storeEnumTagMultiPayload();
        *uint64_t v45 = v28;
        sub_21CA57E34(&qword_267C95878);
        return swift_storeEnumTagMultiPayload();
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_21CAB54A8();
        unsigned int v27 = v46;
      }
      uint64_t result = sub_21CA26A4C((uint64_t)v27+ ((*(unsigned __int8 *)(v10 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))+ *(void *)(v10 + 72) * v27[4], (uint64_t)v8, &qword_267C95818);
      uint64_t v29 = v27[4];
      BOOL v30 = __OFADD__(v29, 1);
      uint64_t v31 = v29 + 1;
      if (v30)
      {
        __break(1u);
LABEL_26:
        __break(1u);
      }
      else
      {
        uint64_t v32 = v27[3];
        if (v31 >= v27[2]) {
          uint64_t v31 = 0;
        }
        v27[4] = v31;
        if (!__OFSUB__(v32, 1))
        {
          v27[3] = v32 - 1;
          (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v8, 0, 1, v9);
          sub_21CA26A4C((uint64_t)v8, (uint64_t)v15, &qword_267C95818);
          sub_21CA1B88C((uint64_t)v2, &qword_267C95848);
          *uint64_t v2 = v27;
          v2[1] = v28;
          swift_storeEnumTagMultiPayload();
          uint64_t v33 = (uint64_t)v15;
LABEL_21:
          sub_21CA26A4C(v33, (uint64_t)v45, &qword_267C95818);
          sub_21CA57E34(&qword_267C95870);
          swift_storeEnumTagMultiPayload();
          sub_21CA57E34(&qword_267C95878);
          return swift_storeEnumTagMultiPayload();
        }
      }
      __break(1u);
LABEL_28:
      __break(1u);
LABEL_29:
      __break(1u);
LABEL_30:
      __break(1u);
      return result;
    case 3:
      sub_21CA57E34(&qword_267C95878);
      return swift_storeEnumTagMultiPayload();
    case 4:
      goto LABEL_29;
    default:
      uint64_t v20 = sub_21CA57E34(&qword_267C95850);
      uint64_t v21 = (char *)v18 + *(int *)(v20 + 48);
      uint64_t v22 = (uint64_t)v18 + *(int *)(v20 + 64);
      uint64_t v23 = v45;
      sub_21CA26A4C((uint64_t)v18, (uint64_t)v45, &qword_267C95868);
      uint64_t v24 = sub_21CA57E34(&qword_267C95880);
      uint64_t v25 = (char *)v23 + *(int *)(v24 + 48);
      uint64_t v26 = sub_21CA57E34(&qword_267C95860);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 32))(v25, v21, v26);
      sub_21CA26A4C(v22, (uint64_t)v23 + *(int *)(v24 + 64), &qword_267C95858);
      sub_21CA57E34(&qword_267C95878);
      return swift_storeEnumTagMultiPayload();
  }
}

uint64_t sub_21CA2641C(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t v4 = sub_21CA264CC(a1);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(a2 + 16));
  uint64_t v5 = *(void *)(v4 + 16);
  if (v5)
  {
    swift_bridgeObjectRetain();
    for (uint64_t i = 0; i != v5; ++i)
      swift_continuation_throwingResume();
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_21CA264CC(uint64_t a1)
{
  uint64_t v3 = sub_21CA57E34(&qword_267C95848);
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (uint64_t *)((char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_21CA24E80((uint64_t)v1, (uint64_t)v5, &qword_267C95848);
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 1)
  {
    uint64_t v8 = *v5;
    uint64_t v7 = v5[1];
    uint64_t v9 = v5[2];
    if (!v5[4])
    {
      uint64_t v10 = v5[3];
      sub_21CA1B88C((uint64_t)v1, &qword_267C95848);
      *uint64_t v1 = v8;
      v1[1] = v7;
      v1[2] = MEMORY[0x263F8EE78];
      v1[3] = v10;
      v1[4] = a1;
      swift_storeEnumTagMultiPayload();
      return v9;
    }
  }
  else
  {
    switch((int)result)
    {
      case 1:
        goto LABEL_10;
      case 2:
        goto LABEL_8;
      case 3:
        goto LABEL_6;
      case 4:
        goto LABEL_7;
      default:
        uint64_t v11 = sub_21CA57E34(&qword_267C95850);
        uint64_t v12 = (char *)v5 + *(int *)(v11 + 48);
        sub_21CA1B88C((uint64_t)v5 + *(int *)(v11 + 64), &qword_267C95858);
        uint64_t v13 = sub_21CA57E34(&qword_267C95860);
        (*(void (**)(char *, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
        sub_21CA1B88C((uint64_t)v5, &qword_267C95868);
LABEL_6:
        __break(1u);
LABEL_7:
        __break(1u);
LABEL_8:
        uint64_t v14 = (void *)v5[1];
        swift_release();

        __break(1u);
        break;
    }
  }
  swift_release();
  swift_release();
  uint64_t result = swift_bridgeObjectRelease();
LABEL_10:
  __break(1u);
  return result;
}

uint64_t sub_21CA2669C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v33 = a1;
  uint64_t v36 = a3;
  uint64_t v31 = a2;
  uint64_t v6 = sub_21CA57E34(&qword_267C95858);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_21CA57E34(&qword_267C95860);
  uint64_t v9 = *(void *)(v30 - 8);
  MEMORY[0x270FA5388](v30);
  uint64_t v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = sub_21CA57E34(&qword_267C95868);
  uint64_t v35 = *(void *)(v37 - 8);
  MEMORY[0x270FA5388](v37);
  uint64_t v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_21CA57E34(&qword_267C95900);
  uint64_t v15 = v14 - 8;
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  int v18 = (char *)&v30 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v32 = (uint64_t)&v30 - v19;
  uint64_t v20 = (_DWORD *)swift_slowAlloc();
  *uint64_t v20 = 0;
  *(void *)(v3 + 16) = v20;
  sub_21CA24E80(a1, (uint64_t)v13, &qword_267C95868);
  uint64_t v21 = v30;
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v30);
  uint64_t v22 = v36;
  sub_21CA24E80(v36, (uint64_t)v8, &qword_267C95858);
  uint64_t v23 = sub_21CA57E34(&qword_267C95850);
  uint64_t v24 = &v18[*(int *)(v23 + 48)];
  uint64_t v25 = (uint64_t)&v18[*(int *)(v23 + 64)];
  sub_21CA26A4C((uint64_t)v13, (uint64_t)v18, &qword_267C95868);
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v24, v11, v21);
  sub_21CA24E80((uint64_t)v8, v25, &qword_267C95858);
  sub_21CA57E34(&qword_267C95848);
  swift_storeEnumTagMultiPayload();
  LODWORD(v13) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v35 + 48))(v8, 1, v37);
  sub_21CA1B88C((uint64_t)v8, &qword_267C95858);
  uint64_t v26 = 2;
  if (v13 != 1) {
    uint64_t v26 = 3;
  }
  *(void *)&v18[*(int *)(v15 + 76)] = v26;
  uint64_t v27 = v32;
  sub_21CA26A4C((uint64_t)v18, v32, &qword_267C95900);
  sub_21CA1B88C(v22, &qword_267C95858);
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v31, v21);
  sub_21CA1B88C(v33, &qword_267C95868);
  uint64_t v28 = v34;
  sub_21CA26A4C(v27, v34 + *(void *)(*(void *)v34 + 136), &qword_267C95900);
  return v28;
}

uint64_t sub_21CA26A4C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_21CA57E34(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t destroy for FriendCacheData(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 88))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (*(void *)(a1 + 360))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_21CA26B7C()
{
  sub_21CB882F0();
  sub_21CB89050();
  sub_21CB88380();
  uint64_t v0 = sub_21CB89090();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_21CA26C7C(unint64_t a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_21CB875D0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_267C94990 != -1) {
    swift_once();
  }
  uint64_t v9 = sub_21CB880A0();
  sub_21CA4CC18(v9, (uint64_t)qword_267CA5368);
  swift_bridgeObjectRetain_n();
  uint64_t v10 = sub_21CB88070();
  os_log_type_t v11 = sub_21CB88880();
  unint64_t v12 = a1 >> 62;
  if (!os_log_type_enabled(v10, v11))
  {

    swift_bridgeObjectRelease_n();
    goto LABEL_14;
  }
  uint64_t v35 = v6;
  uint64_t v2 = (uint8_t *)swift_slowAlloc();
  uint64_t v6 = swift_slowAlloc();
  uint64_t v39 = v6;
  *(_DWORD *)uint64_t v2 = 136315138;
  if (v12) {
    goto LABEL_24;
  }
  uint64_t v13 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  for (uint64_t result = swift_bridgeObjectRetain(); ; v13 = result)
  {
    uint64_t v36 = v5;
    uint64_t v34 = v3;
    if (!v13)
    {
      swift_bridgeObjectRelease();
      uint64_t v19 = 0;
      goto LABEL_13;
    }
    if ((a1 & 0xC000000000000001) != 0)
    {
      id v15 = (id)MEMORY[0x21D4B5CA0](0, a1);
      goto LABEL_10;
    }
    if (!*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      break;
    }
    id v15 = *(id *)(a1 + 32);
LABEL_10:
    uint64_t v16 = v15;
    swift_bridgeObjectRelease();
    id v17 = objc_msgSend(v16, sel_debugDescription);

    uint64_t v13 = sub_21CB882F0();
    uint64_t v19 = v18;

LABEL_13:
    uint64_t v37 = v13;
    uint64_t v38 = v19;
    sub_21CA57E34((uint64_t *)&unk_267C95220);
    uint64_t v20 = sub_21CB88310();
    uint64_t v37 = sub_21CA4E450(v20, v21, &v39);
    sub_21CB889C0();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_21CA00000, v10, v11, "FMFMyLocationController: location manager didUpdateLocations: %s", v2, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x21D4B6B70](v6, -1, -1);
    MEMORY[0x21D4B6B70](v2, -1, -1);

    uint64_t v6 = v35;
    uint64_t v5 = v36;
    uint64_t v3 = v34;
LABEL_14:
    if (v12)
    {
      swift_bridgeObjectRetain();
      uint64_t v10 = sub_21CB88D10();
      if (!v10) {
        return swift_bridgeObjectRelease();
      }
    }
    else
    {
      uint64_t v10 = *(NSObject **)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v10) {
        return swift_bridgeObjectRelease();
      }
    }
    if ((a1 & 0xC000000000000001) != 0)
    {
      id v22 = (id)MEMORY[0x21D4B5CA0](0, a1);
      goto LABEL_19;
    }
    if (*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      id v22 = *(id *)(a1 + 32);
LABEL_19:
      uint64_t v23 = v22;
      swift_bridgeObjectRelease();
      uint64_t v24 = swift_allocObject();
      *(void *)(v24 + 16) = v3;
      *(void *)(v24 + 24) = v23;
      id v25 = v23;
      v3;
      sub_21CB875C0();
      uint64_t v26 = sub_21CB875B0();
      uint64_t v28 = v27;
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      type metadata accessor for FMLocationShiftingRequest();
      uint64_t v29 = (void *)swift_allocObject();
      void v29[2] = v25;
      uint64_t v29[3] = v26;
      v29[4] = v28;
      sub_21CA57E34((uint64_t *)&unk_267C97590);
      uint64_t v30 = swift_allocObject();
      *(_OWORD *)(v30 + 16) = xmmword_21CB91560;
      *(void *)(v30 + 32) = v29;
      uint64_t v37 = v30;
      sub_21CB88530();
      uint64_t v31 = v37;
      uint64_t v32 = (void *)swift_allocObject();
      void v32[2] = v25;
      v32[3] = sub_21CA32D68;
      v32[4] = v24;
      id v33 = v25;
      swift_retain();
      swift_retain();
      sub_21CA5D8D4(v31, (uint64_t)sub_21CA2F3E4, (uint64_t)v32);
      swift_release();

      swift_release();
      swift_bridgeObjectRelease();
      return swift_release();
    }
    __break(1u);
LABEL_24:
    swift_bridgeObjectRetain();
    uint64_t result = sub_21CB88D10();
  }
  __break(1u);
  return result;
}

uint64_t type metadata accessor for FMLocationShiftingRequest()
{
  return self;
}

uint64_t initializeWithCopy for FriendCacheData(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  uint64_t v7 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v7;
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  uint64_t v24 = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v24)
  {
    *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
    *(void *)(a1 + 80) = *(void *)(a2 + 80);
    *(void *)(a1 + 88) = v24;
    *(void *)(a1 + 96) = *(void *)(a2 + 96);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v8 = *(_OWORD *)(a2 + 88);
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 88) = v8;
  }
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  *(_OWORD *)(a1 + 232) = *(_OWORD *)(a2 + 232);
  *(_OWORD *)(a1 + 248) = *(_OWORD *)(a2 + 248);
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
  *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
  *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  long long v9 = *(_OWORD *)(a2 + 312);
  *(_OWORD *)(a1 + 296) = *(_OWORD *)(a2 + 296);
  *(_OWORD *)(a1 + 312) = v9;
  long long v10 = *(_OWORD *)(a2 + 344);
  *(_OWORD *)(a1 + 328) = *(_OWORD *)(a2 + 328);
  *(_OWORD *)(a1 + 344) = v10;
  long long v11 = *(_OWORD *)(a2 + 280);
  *(_OWORD *)(a1 + 264) = *(_OWORD *)(a2 + 264);
  *(_OWORD *)(a1 + 280) = v11;
  uint64_t v12 = *(void *)(a2 + 360);
  if (v12)
  {
    uint64_t v13 = *(void *)(a2 + 368);
    uint64_t v14 = *(void *)(a2 + 376);
    *(void *)(a1 + 360) = v12;
    *(void *)(a1 + 368) = v13;
    uint64_t v15 = *(void *)(a2 + 384);
    uint64_t v16 = *(void *)(a2 + 392);
    *(void *)(a1 + 376) = v14;
    *(void *)(a1 + 384) = v15;
    uint64_t v17 = *(void *)(a2 + 400);
    uint64_t v18 = *(void *)(a2 + 408);
    *(void *)(a1 + 392) = v16;
    *(void *)(a1 + 400) = v17;
    *(void *)(a1 + 408) = v18;
    *(unsigned char *)(a1 + 416) = *(unsigned char *)(a2 + 416);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v19 = *(_OWORD *)(a2 + 376);
    *(_OWORD *)(a1 + 360) = *(_OWORD *)(a2 + 360);
    *(_OWORD *)(a1 + 376) = v19;
    *(_OWORD *)(a1 + 392) = *(_OWORD *)(a2 + 392);
    *(_OWORD *)(a1 + 401) = *(_OWORD *)(a2 + 401);
  }
  uint64_t v20 = *(void *)(a2 + 432);
  *(void *)(a1 + 424) = *(void *)(a2 + 424);
  *(void *)(a1 + 432) = v20;
  uint64_t v22 = *(void *)(a2 + 440);
  uint64_t v21 = *(void *)(a2 + 448);
  *(void *)(a1 + 440) = v22;
  *(void *)(a1 + 448) = v21;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t initializeWithCopy for FMFDevice(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *initializeWithCopy for FMFAddress(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  uint64_t v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  uint64_t v7 = a2[9];
  a1[8] = a2[8];
  a1[9] = v7;
  uint64_t v8 = a2[11];
  a1[10] = a2[10];
  a1[11] = v8;
  uint64_t v9 = a2[13];
  a1[12] = a2[12];
  a1[13] = v9;
  uint64_t v10 = a2[15];
  a1[14] = a2[14];
  a1[15] = v10;
  uint64_t v11 = a2[17];
  a1[16] = a2[16];
  a1[17] = v11;
  uint64_t v12 = a2[19];
  a1[18] = a2[18];
  a1[19] = v12;
  uint64_t v22 = a2[21];
  a1[20] = a2[20];
  a1[21] = v22;
  uint64_t v13 = a2[23];
  a1[22] = a2[22];
  a1[23] = v13;
  uint64_t v14 = a2[25];
  a1[24] = a2[24];
  a1[25] = v14;
  uint64_t v15 = a2[27];
  a1[26] = a2[26];
  a1[27] = v15;
  uint64_t v16 = a2[29];
  a1[28] = a2[28];
  a1[29] = v16;
  uint64_t v17 = a2[31];
  a1[30] = a2[30];
  a1[31] = v17;
  uint64_t v18 = a2[33];
  a1[32] = a2[32];
  a1[33] = v18;
  uint64_t v19 = a2[35];
  a1[34] = a2[34];
  a1[35] = v19;
  uint64_t v20 = a2[37];
  a1[36] = a2[36];
  a1[37] = v20;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_21CA27590@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_21CA275C0(a1);
  if (!v2)
  {
    *(void *)a2 = result;
    *(void *)(a2 + 8) = v5;
    *(unsigned char *)(a2 + 16) = v6;
  }
  return result;
}

uint64_t sub_21CA275C0(void *a1)
{
  uint64_t v3 = sub_21CA57E34(&qword_267C96B20);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  char v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = a1[4];
  sub_21CA2B2CC(a1, a1[3]);
  sub_21CA277E8();
  sub_21CB890B0();
  if (v1)
  {
    sub_21CA2B0D0((uint64_t)a1);
  }
  else
  {
    char v11 = 0;
    uint64_t v7 = sub_21CB88DE0();
    char v10 = 1;
    swift_bridgeObjectRetain();
    sub_21CB88DE0();
    sub_21CB88D70();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    sub_21CA2B0D0((uint64_t)a1);
    swift_bridgeObjectRelease();
  }
  return v7;
}

unint64_t sub_21CA277E8()
{
  unint64_t result = qword_267C96B28;
  if (!qword_267C96B28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C96B28);
  }
  return result;
}

uint64_t FMFFriend.shareExpires.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for FMFFriend();
  return sub_21CA24E80(v1 + *(int *)(v3 + 32), a1, (uint64_t *)&unk_267C951B0);
}

uint64_t destroy for FMFAddress()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t FMFFriend.locationAlertsOnFriend.getter()
{
  type metadata accessor for FMFFriend();

  return swift_bridgeObjectRetain();
}

void *initializeWithCopy for FMFSimpleLocation(void *__dst, void *__src)
{
  uint64_t v4 = __src[21];
  if (v4)
  {
    uint64_t v5 = __src[1];
    *__dst = *__src;
    __dst[1] = v5;
    uint64_t v6 = __src[3];
    __dst[2] = __src[2];
    __dst[3] = v6;
    uint64_t v7 = __src[5];
    __dst[4] = __src[4];
    __dst[5] = v7;
    uint64_t v8 = __src[7];
    __dst[6] = __src[6];
    __dst[7] = v8;
    uint64_t v9 = __src[9];
    __dst[8] = __src[8];
    __dst[9] = v9;
    uint64_t v10 = __src[11];
    __dst[10] = __src[10];
    __dst[11] = v10;
    uint64_t v11 = __src[13];
    __dst[12] = __src[12];
    __dst[13] = v11;
    uint64_t v12 = __src[15];
    __dst[14] = __src[14];
    __dst[15] = v12;
    uint64_t v13 = __src[17];
    __dst[16] = __src[16];
    __dst[17] = v13;
    uint64_t v14 = __src[19];
    __dst[18] = __src[18];
    __dst[19] = v14;
    __dst[20] = __src[20];
    __dst[21] = v4;
    uint64_t v15 = __src[23];
    __dst[22] = __src[22];
    __dst[23] = v15;
    uint64_t v16 = __src[25];
    __dst[24] = __src[24];
    __dst[25] = v16;
    uint64_t v17 = __src[27];
    __dst[26] = __src[26];
    __dst[27] = v17;
    uint64_t v18 = __src[29];
    __dst[28] = __src[28];
    __dst[29] = v18;
    uint64_t v19 = __src[31];
    __dst[30] = __src[30];
    __dst[31] = v19;
    uint64_t v20 = __src[33];
    __dst[32] = __src[32];
    __dst[33] = v20;
    uint64_t v21 = __src[35];
    __dst[34] = __src[34];
    __dst[35] = v21;
    uint64_t v22 = __src[37];
    __dst[36] = __src[36];
    __dst[37] = v22;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    memcpy(__dst, __src, 0x130uLL);
  }
  uint64_t v23 = (void *)__src[38];
  __dst[38] = v23;
  *((unsigned char *)__dst + 312) = *((unsigned char *)__src + 312);
  uint64_t v24 = __src[41];
  __dst[40] = __src[40];
  __dst[41] = v24;
  *((_WORD *)__dst + 168) = *((_WORD *)__src + 168);
  __dst[43] = __src[43];
  *((unsigned char *)__dst + 352) = *((unsigned char *)__src + 352);
  id v25 = v23;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return __dst;
}

uint64_t destroy for FMFSimpleLocation(uint64_t a1)
{
  if (*(void *)(a1 + 168))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_21CA27C84@<X0>(size_t *a1@<X8>)
{
  return sub_21CA27CA0(a1);
}

uint64_t sub_21CA27CA0@<X0>(size_t *a1@<X8>)
{
  swift_beginAccess();
  uint64_t v2 = swift_bridgeObjectRetain();
  size_t v3 = sub_21CA27D10(v2);
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v3;
  return result;
}

size_t sub_21CA27D10(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return MEMORY[0x263F8EE78];
  }
  sub_21CA57E34(&qword_267C95260);
  uint64_t v3 = *(void *)(type metadata accessor for FMFFriend() - 8);
  uint64_t v4 = *(void *)(v3 + 72);
  unint64_t v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v6 = (void *)swift_allocObject();
  size_t result = j__malloc_size(v6);
  if (v4)
  {
    if (result - v5 != 0x8000000000000000 || v4 != -1)
    {
      _OWORD v6[2] = v1;
      v6[3] = 2 * ((uint64_t)(result - v5) / v4);
      uint64_t v9 = sub_21CB4D298(&v10, (uint64_t)v6 + v5, v1, a1);
      swift_bridgeObjectRetain();
      sub_21CA7CFF0();
      if (v9 == v1) {
        return (size_t)v6;
      }
      __break(1u);
      return MEMORY[0x263F8EE78];
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_21CA27E64()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    uint64_t v4 = v0[5];
    uint64_t v3 = v0[6];
    uint64_t v5 = MEMORY[0x263F8EE78];
    uint64_t v33 = MEMORY[0x263F8EE78];
    unint64_t v6 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
    uint64_t v7 = *(void *)(v3 + 72);
    uint64_t v8 = v1 + v6;
    swift_bridgeObjectRetain();
    uint64_t v9 = v5;
    do
    {
      uint64_t v10 = v0[9];
      sub_21CA570B0(v8, v10, (uint64_t (*)(void))type metadata accessor for FMFFriend);
      uint64_t v11 = v0[9];
      if ((*(unsigned char *)(v10 + *(int *)(v4 + 36)) & 2) != 0)
      {
        sub_21CA590D4(v11, v0[8], (uint64_t (*)(void))type metadata accessor for FMFFriend);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_21CA47FE8(0, *(void *)(v9 + 16) + 1, 1);
          uint64_t v9 = v33;
        }
        unint64_t v13 = *(void *)(v9 + 16);
        unint64_t v12 = *(void *)(v9 + 24);
        uint64_t v14 = v9;
        if (v13 >= v12 >> 1)
        {
          sub_21CA47FE8(v12 > 1, v13 + 1, 1);
          uint64_t v14 = v33;
        }
        uint64_t v15 = v0[8];
        *(void *)(v14 + 16) = v13 + 1;
        sub_21CA590D4(v15, v14 + v6 + v13 * v7, (uint64_t (*)(void))type metadata accessor for FMFFriend);
        uint64_t v9 = v14;
      }
      else
      {
        sub_21CA581B8(v11, (uint64_t (*)(void))type metadata accessor for FMFFriend);
      }
      v8 += v7;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease();
    int64_t v16 = *(void *)(v9 + 16);
    if (v16)
    {
      uint64_t v30 = v0[7];
      uint64_t v34 = v5;
      sub_21CA281EC(0, v16, 0);
      uint64_t v17 = v9 + v6;
      uint64_t v18 = v5;
      uint64_t v31 = v7;
      uint64_t v32 = v0;
      do
      {
        uint64_t v19 = (uint64_t *)v0[7];
        sub_21CA570B0(v17, (uint64_t)v19, (uint64_t (*)(void))type metadata accessor for FMFFriend);
        uint64_t v20 = *v19;
        uint64_t v21 = *(void *)(v30 + 8);
        uint64_t v22 = *(void *)(v30 + 32);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_21CA581B8((uint64_t)v19, (uint64_t (*)(void))type metadata accessor for FMFFriend);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_21CA281EC(0, *(void *)(v18 + 16) + 1, 1);
          uint64_t v18 = v34;
        }
        unint64_t v24 = *(void *)(v18 + 16);
        unint64_t v23 = *(void *)(v18 + 24);
        if (v24 >= v23 >> 1)
        {
          sub_21CA281EC(v23 > 1, v24 + 1, 1);
          uint64_t v18 = v34;
        }
        *(void *)(v18 + 16) = v24 + 1;
        uint64_t v25 = v18 + 32 * v24;
        *(void *)(v25 + 32) = v20;
        *(void *)(v25 + 40) = v21;
        *(void *)(v25 + 48) = v22;
        *(_WORD *)(v25 + 56) = 0;
        *(unsigned char *)(v25 + 58) = 0;
        uint64_t v0 = v32;
        v17 += v31;
        --v16;
      }
      while (v16);
      swift_release();
    }
    else
    {
      swift_release();
      uint64_t v18 = MEMORY[0x263F8EE78];
    }
    v0[10] = v18;
    uint64_t v28 = (void *)swift_task_alloc();
    v0[11] = v28;
    void *v28 = v0;
    v28[1] = sub_21CA0703C;
    uint64_t v29 = v0[3];
    return sub_21CA1C0D4(v18, v29);
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v26 = (uint64_t (*)(void))v0[1];
    return v26();
  }
}

uint64_t sub_21CA281EC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_21CA2820C(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_21CA2820C(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_21CA57E34(&qword_267C95280);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  unint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  size_t v15 = 32 * v8;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[v15]) {
      memmove(v13, v14, v15);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[v15] || v13 >= &v14[v15])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_21CB88D50();
  __break(1u);
  return result;
}

uint64_t FMFFriend.favoriteOrder.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for FMFFriend() + 60));
}

uint64_t FMFFriend.optedNotToShare.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for FMFFriend() + 40));
}

uint64_t sub_21CA283BC()
{
  return sub_21CA29234();
}

uint64_t sub_21CA283E0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v1 + 120))();
  if (!v2) {
    *a1 = result;
  }
  return result;
}

void *sub_21CA2841C(void *a1)
{
  return sub_21CA28468(a1);
}

void *sub_21CA28468(void *a1)
{
  uint64_t v4 = sub_21CA57E34(&qword_267C94E50);
  uint64_t v56 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  unint64_t v6 = (char *)&v51 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21CA2B2CC(a1, a1[3]);
  sub_21CA29168();
  swift_retain();
  sub_21CB890B0();
  if (v2)
  {
    swift_release();
    sub_21CA2B0D0((uint64_t)a1);
    type metadata accessor for FMFInitRefreshClientResponse();
    swift_deallocPartialClassInstance();
  }
  else
  {
    sub_21CA57E34(&qword_267C94E60);
    LOBYTE(v59[0]) = 0;
    sub_21CA2A0B4();
    uint64_t v7 = v4;
    sub_21CB88E20();
    uint64_t v8 = 0;
    uint64_t v9 = v1;
    uint64_t v81 = v1;
    uint64_t v55 = v7;
    char v54 = a1;
    uint64_t v10 = v72[0];
    int64_t v11 = *(void *)(v72[0] + 16);
    if (v11)
    {
      uint64_t v52 = 0;
      uint64_t v53 = v6;
      v72[0] = MEMORY[0x263F8EE78];
      sub_21CA7BF68(0, v11, 0);
      uint64_t v12 = v72[0];
      uint64_t v51 = v10;
      unint64_t v13 = (uint64_t *)(v10 + 40);
      do
      {
        uint64_t v15 = *(v13 - 1);
        uint64_t v14 = *v13;
        swift_bridgeObjectRetain_n();
        unint64_t v16 = sub_21CB88D70();
        swift_bridgeObjectRelease();
        BOOL v17 = v16 > 4;
        v72[0] = v12;
        unint64_t v19 = *(void *)(v12 + 16);
        unint64_t v18 = *(void *)(v12 + 24);
        if (v19 >= v18 >> 1)
        {
          sub_21CA7BF68(v18 > 1, v19 + 1, 1);
          BOOL v17 = v16 > 4;
          uint64_t v12 = v72[0];
        }
        v13 += 2;
        *(void *)(v12 + 16) = v19 + 1;
        uint64_t v20 = v12 + 24 * v19;
        *(void *)(v20 + 32) = v15;
        *(void *)(v20 + 40) = v14;
        *(unsigned char *)(v20 + 48) = 3;
        *(unsigned char *)(v20 + 49) = v17;
        --v11;
      }
      while (v11);
      swift_bridgeObjectRelease();
      uint64_t v21 = (uint64_t)v54;
      uint64_t v8 = v52;
      unint64_t v6 = v53;
      uint64_t v9 = v81;
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v12 = MEMORY[0x263F8EE78];
      uint64_t v21 = (uint64_t)v54;
    }
    *(void *)&v9[OBJC_IVAR____TtC7FMFCore28FMFInitRefreshClientResponse_labels] = v12;
    sub_21CA57E34(&qword_267C94E70);
    LOBYTE(v59[0]) = 1;
    sub_21CA2A1C4();
    sub_21CB88E20();
    if (v8)
    {

      uint64_t v22 = 0;
    }
    else
    {
      uint64_t v22 = v72[0];
    }
    *(void *)&v9[OBJC_IVAR____TtC7FMFCore28FMFInitRefreshClientResponse_labelledLocations] = v22;
    sub_21CA57E34(&qword_267C94E88);
    LOBYTE(v59[0]) = 2;
    sub_21CA291BC(&qword_267C94E90, &qword_267C94E88, (void (*)(void))sub_21CA62808);
    sub_21CB88E20();
    unint64_t v23 = v81;
    *(void *)&v81[OBJC_IVAR____TtC7FMFCore28FMFInitRefreshClientResponse_devices] = v72[0];
    LOBYTE(v59[0]) = 3;
    sub_21CA2AD18();
    sub_21CB88E20();
    unint64_t v24 = v72[1];
    unint64_t v25 = v72[2];
    unint64_t v26 = v72[3];
    uint64_t v27 = 256;
    if (!BYTE1(v72[0])) {
      uint64_t v27 = 0;
    }
    uint64_t v28 = v27 | LOBYTE(v72[0]);
    uint64_t v29 = 0x10000;
    if (!BYTE2(v72[0])) {
      uint64_t v29 = 0;
    }
    unint64_t v30 = v28 | v29 | ((unint64_t)BYTE3(v72[0]) << 24);
    uint64_t v31 = (unint64_t *)&v23[OBJC_IVAR____TtC7FMFCore28FMFInitRefreshClientResponse_preferences];
    *uint64_t v31 = v30;
    v31[1] = v24;
    v31[2] = v25;
    v31[3] = v26;
    LOBYTE(v59[0]) = 4;
    sub_21CA2AD6C();
    sub_21CB88E20();
    uint64_t v32 = &v23[OBJC_IVAR____TtC7FMFCore28FMFInitRefreshClientResponse_features];
    *(void *)uint64_t v32 = v72[0];
    v32[8] = 0;
    char v73 = 5;
    sub_21CA2A3B0();
    sub_21CB88E20();
    uint64_t v33 = v75;
    uint64_t v34 = v76;
    long long v35 = v77;
    uint64_t v36 = v78;
    uint64_t v37 = v79;
    uint8_t v38 = v80;
    uint64_t v39 = &v23[OBJC_IVAR____TtC7FMFCore28FMFInitRefreshClientResponse_myInfo];
    *(void *)uint64_t v39 = v74;
    *((void *)v39 + 1) = v33;
    *((void *)v39 + 2) = v34;
    *(_OWORD *)(v39 + 24) = v35;
    *((void *)v39 + 5) = v36;
    *((void *)v39 + 6) = v37;
    v39[56] = v38;
    char v58 = 6;
    sub_21CA2A404();
    sub_21CB88E20();
    v57[12] = v69;
    v57[13] = v70;
    v57[14] = v71;
    v57[8] = v65;
    v57[9] = v66;
    v57[10] = v67;
    v57[11] = v68;
    v57[4] = v61;
    v57[5] = v62;
    v57[6] = v63;
    v57[7] = v64;
    v57[0] = v59[0];
    v57[1] = v59[1];
    v57[2] = v59[2];
    v57[3] = v60;
    nullsub_1(v57, *(double *)&v60);
    sub_21CA26A4C((uint64_t)v57, (uint64_t)v72, (uint64_t *)&unk_267C96EE0);
    sub_21CA26A4C((uint64_t)v72, (uint64_t)&v23[OBJC_IVAR____TtC7FMFCore28FMFInitRefreshClientResponse_config], (uint64_t *)&unk_267C96EE0);
    sub_21CA57E34(&qword_267C94EC0);
    LOBYTE(v57[0]) = 7;
    sub_21CA2A30C();
    sub_21CB88E20();
    *(void *)&v23[OBJC_IVAR____TtC7FMFCore28FMFInitRefreshClientResponse_locations] = *(void *)&v59[0];
    sub_21CA57E34(&qword_267C94ED8);
    LOBYTE(v57[0]) = 8;
    sub_21CA291BC(&qword_267C94EE0, &qword_267C94ED8, (void (*)(void))sub_21CA64238);
    sub_21CB88E20();
    uint64_t v40 = v81;
    *(void *)&v81[OBJC_IVAR____TtC7FMFCore28FMFInitRefreshClientResponse_locatesInProgress] = *(void *)&v59[0];
    sub_21CA57E34(&qword_267C94EF0);
    LOBYTE(v57[0]) = 10;
    sub_21CA2A120();
    sub_21CB88E20();
    *(void *)&v40[OBJC_IVAR____TtC7FMFCore28FMFInitRefreshClientResponse_following] = *(void *)&v59[0];
    LOBYTE(v57[0]) = 11;
    sub_21CB88E20();
    *(void *)&v40[OBJC_IVAR____TtC7FMFCore28FMFInitRefreshClientResponse_followers] = *(void *)&v59[0];
    LOBYTE(v57[0]) = 12;
    sub_21CB88E20();
    *(void *)&v40[OBJC_IVAR____TtC7FMFCore28FMFInitRefreshClientResponse_futureFollowing] = *(void *)&v59[0];
    LOBYTE(v57[0]) = 13;
    sub_21CB88E20();
    *(void *)&v40[OBJC_IVAR____TtC7FMFCore28FMFInitRefreshClientResponse_futureFollowers] = *(void *)&v59[0];
    LOBYTE(v57[0]) = 9;
    sub_21CB88E20();
    *(void *)&v40[OBJC_IVAR____TtC7FMFCore28FMFInitRefreshClientResponse_pendingOffers] = *(void *)&v59[0];
    sub_21CA57E34(&qword_267C94F08);
    LOBYTE(v57[0]) = 14;
    sub_21CA2A268();
    sub_21CB88E20();
    *(void *)&v40[OBJC_IVAR____TtC7FMFCore28FMFInitRefreshClientResponse_locationAlertsOnMeByMe] = *(void *)&v59[0];
    LOBYTE(v57[0]) = 16;
    sub_21CB88E20();
    *(void *)&v40[OBJC_IVAR____TtC7FMFCore28FMFInitRefreshClientResponse_locationAlertsOnMeByFriends] = *(void *)&v59[0];
    LOBYTE(v57[0]) = 15;
    sub_21CB88E20();
    *(void *)&v40[OBJC_IVAR____TtC7FMFCore28FMFInitRefreshClientResponse_locationAlertsOnFriendsByMe] = *(void *)&v59[0];
    LOBYTE(v57[0]) = 17;
    sub_21CB88E20();
    *(void *)&v81[OBJC_IVAR____TtC7FMFCore28FMFInitRefreshClientResponse_locationAlertsOnFriendsByFriends] = *(void *)&v59[0];
    swift_release();
    sub_21CA219EC(v21, (uint64_t)v59);
    a1 = (void *)sub_21CA2A458(v59);
    char v54 = (void *)v21;
    uint64_t v41 = qword_267C94990;
    swift_retain();
    if (v41 != -1) {
      swift_once();
    }
    uint64_t v42 = sub_21CB880A0();
    sub_21CA4CC18(v42, (uint64_t)qword_267CA5368);
    swift_retain_n();
    uint64_t v43 = sub_21CB88070();
    os_log_type_t v44 = sub_21CB88880();
    if (os_log_type_enabled(v43, v44))
    {
      uint64_t v45 = (uint8_t *)swift_slowAlloc();
      uint64_t v46 = swift_slowAlloc();
      *(void *)&v59[0] = v46;
      uint64_t v81 = v45;
      *(_DWORD *)uint64_t v45 = 136315138;
      uint64_t v53 = v6;
      uint64_t v47 = sub_21CA29234();
      *(void *)&v57[0] = sub_21CA4E450(v47, v48, (uint64_t *)v59);
      sub_21CB889C0();
      swift_release_n();
      swift_bridgeObjectRelease();
      uint64_t v49 = v81;
      _os_log_impl(&dword_21CA00000, v43, v44, "FMFInitRefreshClientResponse: initialized with coder %s", v81, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x21D4B6B70](v46, -1, -1);
      MEMORY[0x21D4B6B70](v49, -1, -1);

      (*(void (**)(char *, uint64_t))(v56 + 8))(v53, v55);
    }
    else
    {
      swift_release_n();

      (*(void (**)(char *, uint64_t))(v56 + 8))(v6, v55);
    }
    sub_21CA2B0D0((uint64_t)v54);
    swift_release();
  }
  return a1;
}

uint64_t sub_21CA2912C(uint64_t a1)
{
  unint64_t v2 = sub_21CA29168();

  return MEMORY[0x270FA00B0](a1, v2);
}

unint64_t sub_21CA29168()
{
  unint64_t result = qword_267C94E58;
  if (!qword_267C94E58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C94E58);
  }
  return result;
}

uint64_t sub_21CA291BC(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_21CA5EEBC(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_21CA29234()
{
  sub_21CB89110();
  sub_21CB883D0();
  swift_bridgeObjectRelease();
  sub_21CB883D0();
  uint64_t v24 = v0;
  sub_21CA2A060();
  sub_21CB88470();
  sub_21CB883D0();
  swift_bridgeObjectRelease();
  sub_21CB883D0();
  strcpy((char *)v26, "following: ");
  HIDWORD(v26[1]) = -352321536;
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC7FMFCore28FMFInitRefreshClientResponse_following);
  if (v1) {
    uint64_t v2 = *(void *)(v1 + 16);
  }
  else {
    uint64_t v2 = 0;
  }
  uint64_t v24 = v2;
  BOOL v25 = v1 == 0;
  sub_21CA57E34(&qword_267C94E40);
  sub_21CB88310();
  sub_21CB883D0();
  swift_bridgeObjectRelease();
  sub_21CB883D0();
  swift_bridgeObjectRetain();
  sub_21CB883D0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  strcpy((char *)v26, "followers: ");
  HIDWORD(v26[1]) = -352321536;
  uint64_t v3 = *(void *)(v0 + OBJC_IVAR____TtC7FMFCore28FMFInitRefreshClientResponse_followers);
  if (v3) {
    uint64_t v4 = *(void *)(v3 + 16);
  }
  else {
    uint64_t v4 = 0;
  }
  uint64_t v24 = v4;
  BOOL v25 = v3 == 0;
  sub_21CB88310();
  sub_21CB883D0();
  swift_bridgeObjectRelease();
  sub_21CB883D0();
  swift_bridgeObjectRetain();
  sub_21CB883D0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_21CB88B70();
  swift_bridgeObjectRelease();
  v26[0] = 0xD000000000000011;
  v26[1] = 0x800000021CB943D0;
  uint64_t v5 = *(void *)(v0 + OBJC_IVAR____TtC7FMFCore28FMFInitRefreshClientResponse_futureFollowing);
  if (v5) {
    uint64_t v6 = *(void *)(v5 + 16);
  }
  else {
    uint64_t v6 = 0;
  }
  uint64_t v24 = v6;
  BOOL v25 = v5 == 0;
  sub_21CB88310();
  sub_21CB883D0();
  swift_bridgeObjectRelease();
  sub_21CB883D0();
  swift_bridgeObjectRetain();
  sub_21CB883D0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_21CB88B70();
  swift_bridgeObjectRelease();
  v26[0] = 0xD000000000000011;
  v26[1] = 0x800000021CB943F0;
  uint64_t v7 = *(void *)(v0 + OBJC_IVAR____TtC7FMFCore28FMFInitRefreshClientResponse_futureFollowers);
  if (v7) {
    uint64_t v8 = *(void *)(v7 + 16);
  }
  else {
    uint64_t v8 = 0;
  }
  uint64_t v24 = v8;
  BOOL v25 = v7 == 0;
  sub_21CB88310();
  sub_21CB883D0();
  swift_bridgeObjectRelease();
  sub_21CB883D0();
  swift_bridgeObjectRetain();
  sub_21CB883D0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_21CB88B70();
  swift_bridgeObjectRelease();
  v26[0] = 0x4F676E69646E6570;
  v26[1] = 0xEF203A7372656666;
  uint64_t v9 = *(void *)(v0 + OBJC_IVAR____TtC7FMFCore28FMFInitRefreshClientResponse_pendingOffers);
  if (v9) {
    uint64_t v10 = *(void *)(v9 + 16);
  }
  else {
    uint64_t v10 = 0;
  }
  uint64_t v24 = v10;
  BOOL v25 = v9 == 0;
  sub_21CB88310();
  sub_21CB883D0();
  swift_bridgeObjectRelease();
  sub_21CB883D0();
  swift_bridgeObjectRetain();
  sub_21CB883D0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  strcpy((char *)v26, "locations: ");
  HIDWORD(v26[1]) = -352321536;
  uint64_t v11 = *(void *)(v0 + OBJC_IVAR____TtC7FMFCore28FMFInitRefreshClientResponse_locations);
  if (v11) {
    uint64_t v12 = *(void *)(v11 + 16);
  }
  else {
    uint64_t v12 = 0;
  }
  uint64_t v24 = v12;
  BOOL v25 = v11 == 0;
  sub_21CB88310();
  sub_21CB883D0();
  swift_bridgeObjectRelease();
  sub_21CB883D0();
  swift_bridgeObjectRetain();
  sub_21CB883D0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_21CB88B70();
  swift_bridgeObjectRelease();
  v26[0] = 0xD000000000000013;
  v26[1] = 0x800000021CB94410;
  uint64_t v13 = *(void *)(v0 + OBJC_IVAR____TtC7FMFCore28FMFInitRefreshClientResponse_locatesInProgress);
  if (v13) {
    uint64_t v14 = *(void *)(v13 + 16);
  }
  else {
    uint64_t v14 = 0;
  }
  uint64_t v24 = v14;
  BOOL v25 = v13 == 0;
  sub_21CB88310();
  sub_21CB883D0();
  swift_bridgeObjectRelease();
  sub_21CB883D0();
  swift_bridgeObjectRetain();
  sub_21CB883D0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  strcpy((char *)v26, "labels: ");
  BYTE1(v26[1]) = 0;
  WORD1(v26[1]) = 0;
  HIDWORD(v26[1]) = -402653184;
  uint64_t v15 = *(void *)(v0 + OBJC_IVAR____TtC7FMFCore28FMFInitRefreshClientResponse_labels);
  if (v15) {
    uint64_t v16 = *(void *)(v15 + 16);
  }
  else {
    uint64_t v16 = 0;
  }
  uint64_t v24 = v16;
  BOOL v25 = v15 == 0;
  sub_21CB88310();
  sub_21CB883D0();
  swift_bridgeObjectRelease();
  sub_21CB883D0();
  swift_bridgeObjectRetain();
  sub_21CB883D0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_21CB88B70();
  swift_bridgeObjectRelease();
  v26[0] = 0xD000000000000013;
  v26[1] = 0x800000021CB94430;
  uint64_t v17 = *(void *)(v0 + OBJC_IVAR____TtC7FMFCore28FMFInitRefreshClientResponse_labelledLocations);
  if (v17) {
    uint64_t v18 = *(void *)(v17 + 16);
  }
  else {
    uint64_t v18 = 0;
  }
  uint64_t v24 = v18;
  BOOL v25 = v17 == 0;
  sub_21CB88310();
  sub_21CB883D0();
  swift_bridgeObjectRelease();
  sub_21CB883D0();
  swift_bridgeObjectRetain();
  sub_21CB883D0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  strcpy((char *)v26, "devices: ");
  WORD1(v26[1]) = 0;
  HIDWORD(v26[1]) = -385875968;
  uint64_t v19 = *(void *)(v0 + OBJC_IVAR____TtC7FMFCore28FMFInitRefreshClientResponse_devices);
  if (v19) {
    uint64_t v20 = *(void *)(v19 + 16);
  }
  else {
    uint64_t v20 = 0;
  }
  uint64_t v24 = v20;
  BOOL v25 = v19 == 0;
  sub_21CB88310();
  sub_21CB883D0();
  swift_bridgeObjectRelease();
  sub_21CB883D0();
  swift_bridgeObjectRetain();
  sub_21CB883D0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_21CB88B70();
  swift_bridgeObjectRelease();
  strcpy((char *)v26, "preferences: ");
  sub_21CB883D0();
  swift_bridgeObjectRelease();
  sub_21CB883D0();
  swift_bridgeObjectRetain();
  sub_21CB883D0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  strcpy((char *)v26, "features: ");
  BYTE3(v26[1]) = 0;
  HIDWORD(v26[1]) = -369098752;
  uint64_t v21 = *(void *)(v0 + OBJC_IVAR____TtC7FMFCore28FMFInitRefreshClientResponse_features);
  char v22 = *(unsigned char *)(v0 + OBJC_IVAR____TtC7FMFCore28FMFInitRefreshClientResponse_features + 8);
  if (v22) {
    uint64_t v21 = 0;
  }
  uint64_t v24 = v21;
  BOOL v25 = v22;
  sub_21CB88310();
  sub_21CB883D0();
  swift_bridgeObjectRelease();
  sub_21CB883D0();
  swift_bridgeObjectRetain();
  sub_21CB883D0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v26[30] = 0x203A6F666E49796DLL;
  v26[31] = 0xE800000000000000;
  sub_21CB883D0();
  swift_bridgeObjectRelease();
  sub_21CB883D0();
  v26[0] = 60;
  v26[1] = 0xE100000000000000;
  swift_bridgeObjectRetain();
  sub_21CB883D0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_21CA26A4C(v0 + OBJC_IVAR____TtC7FMFCore28FMFInitRefreshClientResponse_config, (uint64_t)&v24, (uint64_t *)&unk_267C96EE0);
  sub_21CA26A4C((uint64_t)&v24, (uint64_t)v26, (uint64_t *)&unk_267C96EE0);
  sub_21CA6E2D4((uint64_t)v26);
  sub_21CB883D0();
  swift_bridgeObjectRelease();
  sub_21CB883D0();
  swift_bridgeObjectRetain();
  sub_21CB883D0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_21CB88B70();
  swift_bridgeObjectRelease();
  sub_21CB88310();
  sub_21CB883D0();
  swift_bridgeObjectRelease();
  sub_21CB883D0();
  swift_bridgeObjectRetain();
  sub_21CB883D0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_21CB88B70();
  swift_bridgeObjectRelease();
  sub_21CB88310();
  sub_21CB883D0();
  swift_bridgeObjectRelease();
  sub_21CB883D0();
  swift_bridgeObjectRetain();
  sub_21CB883D0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_21CB88B70();
  swift_bridgeObjectRelease();
  sub_21CB88310();
  sub_21CB883D0();
  swift_bridgeObjectRelease();
  sub_21CB883D0();
  swift_bridgeObjectRetain();
  sub_21CB883D0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_21CB88B70();
  swift_bridgeObjectRelease();
  sub_21CB88310();
  sub_21CB883D0();
  swift_bridgeObjectRelease();
  sub_21CB883D0();
  swift_bridgeObjectRetain();
  sub_21CB883D0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return 60;
}

unint64_t sub_21CA2A060()
{
  unint64_t result = qword_267C94E38;
  if (!qword_267C94E38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C94E38);
  }
  return result;
}

unint64_t sub_21CA2A0B4()
{
  unint64_t result = qword_267C94E68;
  if (!qword_267C94E68)
  {
    sub_21CA5EEBC(&qword_267C94E60);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C94E68);
  }
  return result;
}

unint64_t sub_21CA2A120()
{
  unint64_t result = qword_267C94EF8;
  if (!qword_267C94EF8)
  {
    sub_21CA5EEBC(&qword_267C94EF0);
    sub_21CA5E554(&qword_267C94F00, (void (*)(uint64_t))type metadata accessor for FMFIntermediateFriend);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C94EF8);
  }
  return result;
}

unint64_t sub_21CA2A1C4()
{
  unint64_t result = qword_267C94E78;
  if (!qword_267C94E78)
  {
    sub_21CA5EEBC(&qword_267C94E70);
    sub_21CA5E554(&qword_267C94E80, (void (*)(uint64_t))type metadata accessor for FMFLabelledLocation);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C94E78);
  }
  return result;
}

unint64_t sub_21CA2A268()
{
  unint64_t result = qword_267C94F10;
  if (!qword_267C94F10)
  {
    sub_21CA5EEBC(&qword_267C94F08);
    sub_21CA5E554((unint64_t *)&qword_267C94F18, (void (*)(uint64_t))type metadata accessor for FMFLocationAlert);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C94F10);
  }
  return result;
}

unint64_t sub_21CA2A30C()
{
  unint64_t result = qword_267C94EC8;
  if (!qword_267C94EC8)
  {
    sub_21CA5EEBC(&qword_267C94EC0);
    sub_21CA5E554(&qword_267C94ED0, (void (*)(uint64_t))type metadata accessor for FMFLocation);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C94EC8);
  }
  return result;
}

unint64_t sub_21CA2A3B0()
{
  unint64_t result = qword_267C94EB0;
  if (!qword_267C94EB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C94EB0);
  }
  return result;
}

unint64_t sub_21CA2A404()
{
  unint64_t result = qword_267C94EB8;
  if (!qword_267C94EB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C94EB8);
  }
  return result;
}

uint64_t sub_21CA2A458(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_21CA57E34(&qword_267C94E48);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_21CA57E34(&qword_267C97B60);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = a1[3];
  unint64_t v48 = a1;
  sub_21CA2B2CC(a1, v12);
  sub_21CA2ABB0();
  sub_21CB890B0();
  if (v2) {
    goto LABEL_57;
  }
  uint64_t v13 = v9;
  LOBYTE(v49[0]) = 3;
  uint64_t result = sub_21CB88DE0();
  uint64_t v15 = v8;
  uint64_t v17 = v16;
  uint64_t v18 = HIBYTE(v16) & 0xF;
  uint64_t v19 = result & 0xFFFFFFFFFFFFLL;
  if ((v17 & 0x2000000000000000) != 0) {
    uint64_t v20 = v18;
  }
  else {
    uint64_t v20 = result & 0xFFFFFFFFFFFFLL;
  }
  if (!v20)
  {
    uint64_t v22 = v8;
    swift_bridgeObjectRelease();
LABEL_56:
    sub_21CB312DC();
    swift_allocError();
    unsigned char *v44 = 0;
    swift_willThrow();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v11, v22);
LABEL_57:
    uint64_t v45 = (uint64_t)v48;
    type metadata accessor for FMFBaseResponse();
    swift_deallocPartialClassInstance();
    uint64_t v40 = v45;
    goto LABEL_58;
  }
  uint64_t v21 = (uint64_t)v7;
  if ((v17 & 0x1000000000000000) != 0)
  {
    uint64_t v22 = v8;
    uint64_t v24 = (uint64_t)sub_21CB79E50(result, v17, 10);
    char v26 = v46;
    goto LABEL_34;
  }
  if ((v17 & 0x2000000000000000) == 0)
  {
    uint64_t v22 = v8;
    if ((result & 0x1000000000000000) != 0) {
      unint64_t v23 = (unsigned __int8 *)((v17 & 0xFFFFFFFFFFFFFFFLL) + 32);
    }
    else {
      unint64_t v23 = (unsigned __int8 *)sub_21CB88BD0();
    }
    uint64_t v24 = (uint64_t)sub_21CB79E38(v23, v19, 10);
    char v26 = v25 & 1;
LABEL_34:
    swift_bridgeObjectRelease();
    if ((v26 & 1) == 0)
    {
      *(void *)(v3 + OBJC_IVAR____TtC7FMFCore15FMFBaseResponse_fetchStatus) = v24;
      LOBYTE(v49[0]) = 1;
      *(void *)(v3 + 16) = sub_21CB88D90();
      LOBYTE(v49[0]) = 2;
      *(void *)(v3 + 24) = sub_21CB88D90();
      uint64_t v31 = type metadata accessor for FMFCommandResponseFragment();
      LOBYTE(v49[0]) = 4;
      sub_21CA2AB68(&qword_267C97B70, (void (*)(uint64_t))type metadata accessor for FMFCommandResponseFragment);
      uint64_t v32 = v11;
      sub_21CB88E20();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v21, 0, 1, v31);
      sub_21CA2AC64(v21, v3 + OBJC_IVAR____TtC7FMFCore15FMFBaseResponse_commandResponse);
      type metadata accessor for FMFAlert();
      char v50 = 0;
      sub_21CA2AB68(&qword_267C97B78, (void (*)(uint64_t))type metadata accessor for FMFAlert);
      sub_21CB88E20();
      uint64_t v38 = v49[0];
      uint64_t v39 = (uint64_t)v48;
      (*(void (**)(char *, uint64_t))(v13 + 8))(v32, v22);
      *(void *)(v3 + OBJC_IVAR____TtC7FMFCore15FMFBaseResponse_alert) = v38;
      uint64_t v40 = v39;
LABEL_58:
      sub_21CA2B0D0(v40);
      return v3;
    }
    goto LABEL_56;
  }
  v49[0] = result;
  v49[1] = v17 & 0xFFFFFFFFFFFFFFLL;
  if (result == 43)
  {
    if (!v18) {
      goto LABEL_62;
    }
    if (v18 == 1 || (BYTE1(result) - 48) > 9u) {
      goto LABEL_32;
    }
    uint64_t v24 = (BYTE1(result) - 48);
    if (v18 == 2)
    {
LABEL_37:
      uint64_t v22 = v15;
      char v26 = 0;
      goto LABEL_34;
    }
    if ((BYTE2(result) - 48) > 9u) {
      goto LABEL_32;
    }
    uint64_t v22 = v15;
    uint64_t v24 = 10 * (BYTE1(result) - 48) + (BYTE2(result) - 48);
    uint64_t v27 = v18 - 3;
    if (v27)
    {
      uint64_t v28 = (unsigned __int8 *)v49 + 3;
      while (1)
      {
        unsigned int v29 = *v28 - 48;
        if (v29 > 9) {
          goto LABEL_33;
        }
        uint64_t v30 = 10 * v24;
        if ((unsigned __int128)(v24 * (__int128)10) >> 64 != (10 * v24) >> 63) {
          goto LABEL_33;
        }
        uint64_t v24 = v30 + v29;
        if (__OFADD__(v30, v29)) {
          goto LABEL_33;
        }
        char v26 = 0;
        ++v28;
        if (!--v27) {
          goto LABEL_34;
        }
      }
    }
LABEL_48:
    char v26 = 0;
    goto LABEL_34;
  }
  if (result != 45)
  {
    if (!v18 || (result - 48) > 9u) {
      goto LABEL_32;
    }
    uint64_t v24 = (result - 48);
    if (v18 == 1) {
      goto LABEL_37;
    }
    if ((BYTE1(result) - 48) > 9u) {
      goto LABEL_32;
    }
    uint64_t v22 = v15;
    uint64_t v24 = 10 * (result - 48) + (BYTE1(result) - 48);
    uint64_t v33 = v18 - 2;
    if (v33)
    {
      uint64_t v34 = (unsigned __int8 *)v49 + 2;
      while (1)
      {
        unsigned int v35 = *v34 - 48;
        if (v35 > 9) {
          goto LABEL_33;
        }
        uint64_t v36 = 10 * v24;
        if ((unsigned __int128)(v24 * (__int128)10) >> 64 != (10 * v24) >> 63) {
          goto LABEL_33;
        }
        uint64_t v24 = v36 + v35;
        if (__OFADD__(v36, v35)) {
          goto LABEL_33;
        }
        char v26 = 0;
        ++v34;
        if (!--v33) {
          goto LABEL_34;
        }
      }
    }
    goto LABEL_48;
  }
  if (v18)
  {
    if (v18 != 1 && (BYTE1(result) - 48) <= 9u)
    {
      if (v18 == 2)
      {
        uint64_t v22 = v8;
        char v26 = 0;
        uint64_t v24 = -(uint64_t)(BYTE1(result) - 48);
        goto LABEL_34;
      }
      if ((BYTE2(result) - 48) <= 9u)
      {
        uint64_t v22 = v8;
        uint64_t v24 = -10 * (BYTE1(result) - 48) - (BYTE2(result) - 48);
        uint64_t v37 = v18 - 3;
        if (!v37) {
          goto LABEL_48;
        }
        uint64_t v41 = (unsigned __int8 *)v49 + 3;
        while (1)
        {
          unsigned int v42 = *v41 - 48;
          if (v42 > 9) {
            break;
          }
          uint64_t v43 = 10 * v24;
          if ((unsigned __int128)(v24 * (__int128)10) >> 64 != (10 * v24) >> 63) {
            break;
          }
          uint64_t v24 = v43 - v42;
          if (__OFSUB__(v43, v42)) {
            break;
          }
          char v26 = 0;
          ++v41;
          if (!--v37) {
            goto LABEL_34;
          }
        }
LABEL_33:
        uint64_t v24 = 0;
        char v26 = 1;
        goto LABEL_34;
      }
    }
LABEL_32:
    uint64_t v22 = v15;
    goto LABEL_33;
  }
  __break(1u);
LABEL_62:
  __break(1u);
  return result;
}

uint64_t sub_21CA2AB68(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_21CA2ABB0()
{
  unint64_t result = qword_267C97B68;
  if (!qword_267C97B68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C97B68);
  }
  return result;
}

uint64_t type metadata accessor for FMFAlert()
{
  uint64_t result = qword_267C95468;
  if (!qword_267C95468) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_21CA2AC50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_21CAFDB40);
}

uint64_t sub_21CA2AC64(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_21CA57E34(&qword_267C94E48);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for FMFCommandResponseFragment()
{
  uint64_t result = qword_267C96B80;
  if (!qword_267C96B80) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unint64_t sub_21CA2AD18()
{
  unint64_t result = qword_267C94EA0;
  if (!qword_267C94EA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C94EA0);
  }
  return result;
}

unint64_t sub_21CA2AD6C()
{
  unint64_t result = qword_267C94EA8;
  if (!qword_267C94EA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C94EA8);
  }
  return result;
}

id FMFLocation.location.getter()
{
  uint64_t v1 = type metadata accessor for FMFLocation();
  sub_21CA26A4C(v0 + *(int *)(v1 + 44), (uint64_t)v5, &qword_267C951F0);
  sub_21CA26A4C((uint64_t)v5, (uint64_t)v6, &qword_267C951F0);
  id v2 = 0;
  if (sub_21CA7CDBC((uint64_t)v6) != 1)
  {
    id v2 = v7;
    id v3 = v7;
  }
  return v2;
}

uint64_t sub_21CA2AE38(void *a1)
{
  return FMFDevice.encode(to:)(a1);
}

uint64_t FMFDevice.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_21CA57E34(&qword_267C973E0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21CA2B2CC(a1, a1[3]);
  sub_21CA2B310();
  sub_21CB890B0();
  if (v2) {
    return sub_21CA2B0D0((uint64_t)a1);
  }
  char v24 = 0;
  uint64_t v9 = sub_21CB88DE0();
  uint64_t v11 = v10;
  uint64_t v21 = v9;
  char v23 = 1;
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_21CB88DE0();
  uint64_t v14 = v13;
  uint64_t v19 = v12;
  char v22 = 2;
  swift_bridgeObjectRetain();
  uint64_t v20 = v14;
  LOBYTE(v14) = sub_21CB88DF0();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  char v15 = v14 & 1;
  uint64_t v16 = v20;
  *(void *)a2 = v21;
  *(void *)(a2 + 8) = v11;
  *(void *)(a2 + 16) = v19;
  *(void *)(a2 + 24) = v16;
  *(unsigned char *)(a2 + 32) = v15;
  sub_21CA2B0D0((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_21CA2B0D0(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t FMFDevice.encode(to:)(void *a1)
{
  uint64_t v3 = sub_21CA57E34(&qword_267C973F0);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(v1 + 16);
  v10[1] = *(void *)(v1 + 24);
  v10[2] = v7;
  int v11 = *(unsigned __int8 *)(v1 + 32);
  sub_21CA2B2CC(a1, a1[3]);
  sub_21CA2B310();
  sub_21CB890C0();
  char v14 = 0;
  uint64_t v8 = v10[3];
  sub_21CB88E70();
  if (!v8)
  {
    char v13 = 1;
    sub_21CB88E70();
    char v12 = 2;
    sub_21CB88E80();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

void *sub_21CA2B2CC(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80)));
  return result;
}

unint64_t sub_21CA2B310()
{
  unint64_t result = qword_267C973E8;
  if (!qword_267C973E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C973E8);
  }
  return result;
}

uint64_t sub_21CA2B364@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FMFLocation.init(from:)(a1, a2);
}

uint64_t FMFLocation.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v39 = a2;
  uint64_t v36 = sub_21CA57E34(&qword_267C955D0);
  uint64_t v34 = *(void *)(v36 - 8);
  MEMORY[0x270FA5388](v36);
  uint64_t v4 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for FMFLocation();
  uint64_t v6 = MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  *((void *)v8 + 3) = 0;
  unsigned char v8[32] = 1;
  uint64_t v37 = v6;
  uint64_t v9 = (uint64_t)&v8[*(int *)(v6 + 32)];
  uint64_t v10 = sub_21CB875D0();
  uint64_t v11 = *(void *)(v10 - 8);
  char v12 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56);
  uint64_t v13 = v11 + 56;
  uint64_t v41 = v9;
  uint64_t v38 = v12;
  v12(v9, 1, 1, v10);
  sub_21CA2B2CC(a1, a1[3]);
  sub_21CA2B7C0();
  unsigned int v35 = v4;
  uint64_t v14 = v40;
  sub_21CB890B0();
  if (v14)
  {
    sub_21CA2B0D0((uint64_t)a1);
    return sub_21CA1B88C(v41, &qword_267C96F00);
  }
  else
  {
    uint64_t v33 = v13;
    uint64_t v40 = v10;
    uint64_t v16 = v34;
    v44[0] = 3;
    uint64_t v17 = v35;
    uint64_t v18 = sub_21CB88E10();
    uint64_t v31 = 0;
    uint64_t v32 = a1;
    unint64_t v30 = v18;
    uint64_t v19 = (uint64_t)v8;
    v44[383] = 0;
    uint64_t v20 = sub_21CB88DE0();
    uint64_t v21 = v41;
    *(void *)uint64_t v8 = v20;
    *((void *)v8 + 1) = v22;
    v44[382] = 1;
    sub_21CA2B730();
    sub_21CB88E20();
    memcpy(v42, v43, 0x161uLL);
    nullsub_1(v42, v23);
    sub_21CA26A4C((uint64_t)v42, (uint64_t)v44, &qword_267C951F0);
    char v25 = v38;
    uint64_t v24 = v39;
    (*(void (**)(char *, void))(v16 + 8))(v17, 0);
    uint64_t v26 = v37;
    sub_21CA26A4C((uint64_t)v44, v19 + *(int *)(v37 + 44), &qword_267C951F0);
    char v27 = v30;
    BOOL v28 = v30 < 4 && v31 == 0;
    *(unsigned char *)(v19 + 16) = 0;
    if (v28) {
      char v29 = v27;
    }
    else {
      char v29 = 0;
    }
    *(unsigned char *)(v19 + 33) = v29;
    sub_21CA1B88C(v21, &qword_267C96F00);
    v25(v21, 1, 1, v40);
    *(unsigned char *)(v19 + *(int *)(v26 + 36)) = 0;
    *(unsigned char *)(v19 + *(int *)(v26 + 40)) = 0;
    sub_21CA2C9E8(v19, v24);
    sub_21CA2B0D0((uint64_t)v32);
    return sub_21CA2CA4C(v19);
  }
}

unint64_t sub_21CA2B730()
{
  unint64_t result = qword_267C955E0;
  if (!qword_267C955E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C955E0);
  }
  return result;
}

uint64_t sub_21CA2B784(uint64_t a1)
{
  unint64_t v2 = sub_21CA2B7C0();

  return MEMORY[0x270FA00B0](a1, v2);
}

unint64_t sub_21CA2B7C0()
{
  unint64_t result = qword_267C955D8;
  if (!qword_267C955D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C955D8);
  }
  return result;
}

uint64_t sub_21CA2B814(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = type metadata accessor for FMFLocation();
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (uint64_t *)((char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = MEMORY[0x263F8EE78];
  uint64_t v33 = MEMORY[0x263F8EE78];
  uint64_t v12 = *(void *)(a1 + 16);
  if (v12)
  {
    uint64_t v26 = a2;
    uint64_t v27 = a1;
    uint64_t v28 = a3;
    uint64_t v29 = v3;
    uint64_t v13 = a1 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    uint64_t v14 = *(void *)(v8 + 72);
    swift_bridgeObjectRetain();
    char v15 = &qword_267C951F0;
    uint64_t v30 = v14;
    do
    {
      sub_21CA2C9E8(v13, (uint64_t)v10);
      uint64_t v16 = v10[1];
      if (!v16
        || (uint64_t v17 = *v10,
            sub_21CA26A4C((uint64_t)v10 + *(int *)(v7 + 44), (uint64_t)v31, v15),
            sub_21CA26A4C((uint64_t)v31, (uint64_t)v32, v15),
            sub_21CA7CDBC((uint64_t)v32) == 1))
      {
        sub_21CA2CA4C((uint64_t)v10);
      }
      else
      {
        uint64_t v18 = v15;
        uint64_t v19 = (void *)v32[38];
        type metadata accessor for FMLocationShiftingRequest();
        uint64_t v20 = (void *)swift_allocObject();
        void v20[2] = v19;
        v20[3] = v17;
        v20[4] = v16;
        swift_bridgeObjectRetain();
        id v21 = v19;
        uint64_t v22 = sub_21CA2CA4C((uint64_t)v10);
        MEMORY[0x21D4B55E0](v22);
        if (*(void *)((v33 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v33 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_21CB88560();
        }
        sub_21CB885A0();
        sub_21CB88530();
        char v15 = v18;
        uint64_t v14 = v30;
      }
      v13 += v14;
      --v12;
    }
    while (v12);
    a1 = v27;
    swift_bridgeObjectRelease();
    uint64_t v11 = v33;
    a3 = v28;
    a2 = v26;
  }
  double v23 = (void *)swift_allocObject();
  void v23[2] = a1;
  v23[3] = a2;
  v23[4] = a3;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_21CA5D8D4(v11, (uint64_t)sub_21CA33054, (uint64_t)v23);
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_21CA2BA8C(unint64_t a1, uint64_t a2, void (*a3)(unint64_t), uint64_t a4)
{
  uint64_t v8 = sub_21CA57E34(&qword_267C959C8);
  uint64_t v86 = *(void *)(v8 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v8);
  uint64_t v81 = (uint64_t)v68 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v87 = (uint64_t)v68 - v11;
  uint64_t v12 = sub_21CA57E34((uint64_t *)&unk_267C96EF0);
  uint64_t v13 = MEMORY[0x270FA5388](v12 - 8);
  uint64_t v73 = (uint64_t)v68 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v77 = (uint64_t)v68 - v15;
  uint64_t v88 = type metadata accessor for FMFLocation();
  unint64_t v16 = *(void *)(v88 - 8);
  uint64_t v17 = MEMORY[0x270FA5388](v88);
  uint8_t v80 = (char *)v68 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  uint64_t v79 = (uint64_t)v68 - v20;
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  uint64_t v78 = (uint64_t)v68 - v22;
  MEMORY[0x270FA5388](v21);
  uint64_t v91 = (void *)((char *)v68 - v23);
  uint64_t v24 = *(void *)(a2 + 16);
  if (v24)
  {
    v68[1] = a4;
    long long v69 = a3;
    if (a1 >> 62)
    {
LABEL_49:
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v25 = sub_21CB88D10();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v25 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
    }
    uint64_t v26 = a2;
    a2 = 0;
    uint64_t v27 = *(unsigned __int8 *)(v16 + 80);
    v68[0] = v26;
    uint64_t v85 = v26 + ((v27 + 32) & ~v27);
    uint64_t v84 = *(void *)(v16 + 72);
    unint64_t v74 = a1 & 0xC000000000000001;
    unint64_t v90 = a1 + 32;
    long long v70 = &v93[352];
    id v82 = (void (**)(uint64_t, void, uint64_t, uint64_t))(v16 + 56);
    unint64_t v28 = MEMORY[0x263F8EE78];
    unint64_t v71 = a1;
    uint64_t v72 = v8;
    uint64_t v83 = v24;
    do
    {
      if (a2 == v24) {
        goto LABEL_48;
      }
      unint64_t v89 = v28;
      sub_21CA2C9E8(v85 + v84 * a2, (uint64_t)v91);
      if (v25)
      {
        unint64_t v16 = *v91;
        unint64_t v29 = v91[1];
        if (v74)
        {
          swift_bridgeObjectRetain();
          uint64_t v30 = 0;
          while (1)
          {
            uint64_t v31 = MEMORY[0x21D4B5CA0](v30, a1);
            uint64_t v24 = v30 + 1;
            if (__OFADD__(v30, 1)) {
              break;
            }
            uint64_t v32 = (void *)v31;
            if (v29)
            {
              BOOL v33 = *(void *)(v31 + 24) == v16 && v29 == *(void *)(v31 + 32);
              if (v33 || (sub_21CB88F50() & 1) != 0)
              {
                swift_bridgeObjectRelease();
                goto LABEL_30;
              }
            }
            swift_unknownObjectRelease();
            ++v30;
            if (v24 == v25)
            {
              swift_bridgeObjectRelease();
              goto LABEL_39;
            }
          }
          __break(1u);
        }
        else
        {
          uint64_t v34 = 0;
          while (1)
          {
            uint64_t v24 = v34 + 1;
            if (__OFADD__(v34, 1)) {
              break;
            }
            if (v29)
            {
              uint64_t v32 = *(void **)(v90 + 8 * v34);
              BOOL v35 = v32[3] == v16 && v29 == v32[4];
              if (v35 || (sub_21CB88F50() & 1) != 0)
              {
                swift_retain();
LABEL_30:
                uint64_t v36 = v79;
                sub_21CA2C9E8((uint64_t)v91, v79);
                uint64_t v76 = (void *)v32[2];
                uint64_t v37 = v88;
                uint64_t v38 = v80;
                uint64_t v39 = &v80[*(int *)(v88 + 32)];
                uint64_t v40 = sub_21CB875D0();
                (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56))(v39, 1, 1, v40);
                uint64_t v41 = *(void *)(v36 + 8);
                *(void *)uint64_t v38 = *(void *)v36;
                *((void *)v38 + 1) = v41;
                uint64_t v75 = v41;
                v38[16] = *(unsigned char *)(v36 + 16);
                v38[33] = *(unsigned char *)(v36 + 33);
                sub_21CA26A4C(v36 + *(int *)(v37 + 44), (uint64_t)v95, &qword_267C951F0);
                sub_21CA26A4C((uint64_t)v95, (uint64_t)v96, &qword_267C951F0);
                if (sub_21CA7CDBC((uint64_t)v96) == 1)
                {
                  sub_21CA76144(v93);
                  sub_21CA26A4C((uint64_t)v93, (uint64_t)v94, &qword_267C951E0);
                  char v42 = 0;
                  uint64_t v43 = 0;
                  uint64_t v44 = 0;
                  uint64_t v45 = 0;
                  __int16 v46 = 0;
                }
                else
                {
                  sub_21CA26A4C((uint64_t)v95, (uint64_t)v93, &qword_267C951F0);
                  uint64_t v44 = *(void *)&v93[320];
                  uint64_t v45 = *(void *)&v93[328];
                  __int16 v46 = *(_WORD *)&v93[336];
                  uint64_t v43 = *(void *)&v93[344];
                  char v42 = *v70;
                  sub_21CAB6AA4(v96);
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  sub_21CA26A4C((uint64_t)v96, (uint64_t)v94, &qword_267C951E0);
                }
                sub_21CA26A4C((uint64_t)v94, (uint64_t)v92, &qword_267C951E0);
                uint64_t v47 = v76;
                v92[38] = v76;
                LOBYTE(v92[39]) = 0;
                v92[40] = v44;
                v92[41] = v45;
                LOWORD(v92[42]) = v46;
                v92[43] = v43;
                LOBYTE(v92[44]) = v42;
                memcpy(v93, v92, sizeof(v93));
                nullsub_1(v93, v48);
                uint64_t v49 = v88;
                uint64_t v50 = (uint64_t)v80;
                sub_21CA26A4C((uint64_t)v93, (uint64_t)&v80[*(int *)(v88 + 44)], &qword_267C951F0);
                uint64_t v51 = v79;
                char v52 = *(unsigned char *)(v79 + 32);
                *(void *)(v50 + 24) = *(void *)(v79 + 24);
                uint64_t v53 = *(int *)(v49 + 36);
                char v54 = *(unsigned char *)(v51 + v53);
                *(unsigned char *)(v50 + 32) = v52;
                *(unsigned char *)(v50 + v53) = v54;
                char v55 = *(unsigned char *)(v51 + *(int *)(v49 + 40));
                swift_bridgeObjectRetain();
                id v56 = v47;
                sub_21CA2CA4C(v51);
                *(unsigned char *)(v50 + *(int *)(v49 + 40)) = v55;
                uint64_t v57 = v78;
                sub_21CA7CFF8(v50, v78);
                uint64_t v58 = v73;
                sub_21CA2C9E8((uint64_t)v91, v73);
                (*v82)(v58, 0, 1, v49);
                uint64_t v8 = v72;
                uint64_t v59 = v81 + *(int *)(v72 + 48);
                sub_21CA2C9E8(v57, v81);
                sub_21CA26A4C(v58, v59, (uint64_t *)&unk_267C96EF0);
                unint64_t v28 = v89;
                if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                  unint64_t v28 = sub_21CA2CBFC(0, *(void *)(v28 + 16) + 1, 1, v28);
                }
                uint64_t v24 = v83;
                a1 = v71;
                unint64_t v61 = *(void *)(v28 + 16);
                unint64_t v60 = *(void *)(v28 + 24);
                unint64_t v16 = v61 + 1;
                if (v61 >= v60 >> 1) {
                  unint64_t v28 = sub_21CA2CBFC(v60 > 1, v61 + 1, 1, v28);
                }
                *(void *)(v28 + 16) = v16;
                sub_21CA26A4C(v81, v28+ ((*(unsigned __int8 *)(v86 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v86 + 80))+ *(void *)(v86 + 72) * v61, &qword_267C959C8);
                swift_release();
                sub_21CA2CA4C(v78);
                goto LABEL_6;
              }
            }
            ++v34;
            if (v24 == v25) {
              goto LABEL_39;
            }
          }
        }
        __break(1u);
LABEL_48:
        __break(1u);
        goto LABEL_49;
      }
LABEL_39:
      long long v62 = v91;
      uint64_t v63 = v77;
      sub_21CA2C9E8((uint64_t)v91, v77);
      (*v82)(v63, 0, 1, v88);
      uint64_t v64 = v87 + *(int *)(v8 + 48);
      sub_21CA2C9E8((uint64_t)v62, v87);
      sub_21CA26A4C(v63, v64, (uint64_t *)&unk_267C96EF0);
      unint64_t v28 = v89;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v28 = sub_21CA2CBFC(0, *(void *)(v28 + 16) + 1, 1, v28);
      }
      unint64_t v66 = *(void *)(v28 + 16);
      unint64_t v65 = *(void *)(v28 + 24);
      unint64_t v16 = v66 + 1;
      uint64_t v24 = v83;
      if (v66 >= v65 >> 1) {
        unint64_t v28 = sub_21CA2CBFC(v65 > 1, v66 + 1, 1, v28);
      }
      *(void *)(v28 + 16) = v16;
      sub_21CA26A4C(v87, v28+ ((*(unsigned __int8 *)(v86 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v86 + 80))+ *(void *)(v86 + 72) * v66, &qword_267C959C8);
LABEL_6:
      sub_21CA2CA4C((uint64_t)v91);
      ++a2;
    }
    while (a2 != v24);
    swift_bridgeObjectRelease();
    v69(v28);
  }
  else
  {
    a3(MEMORY[0x263F8EE78]);
  }
  return swift_bridgeObjectRelease();
}

uint64_t _s7FMFCore11FMFLocationV2eeoiySbAC_ACtFZ_0(uint64_t a1)
{
  uint64_t v1 = MEMORY[0x270FA5388](a1);
  uint64_t v3 = v2;
  uint64_t v4 = (void *)v1;
  uint64_t v5 = type metadata accessor for FMFLocation();
  uint64_t v6 = MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x270FA5388](v6);
  char v54 = (char *)&v51 - v10;
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v12 = MEMORY[0x270FA5388](v11);
  uint64_t v55 = (uint64_t)&v51 - v13;
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v15 = MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v51 - v16;
  uint64_t v18 = MEMORY[0x270FA5388](v15);
  uint64_t v53 = (uint64_t)&v51 - v19;
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  uint64_t v22 = (char *)&v51 - v21;
  uint64_t v23 = MEMORY[0x270FA5388](v20);
  uint64_t v25 = (char *)&v51 - v24;
  MEMORY[0x270FA5388](v23);
  uint64_t v27 = (char *)&v51 - v26;
  uint64_t v28 = v4[1];
  uint64_t v29 = v3[1];
  uint64_t v56 = v30;
  uint64_t v57 = v31;
  if (!v28)
  {
    if (!v29)
    {
LABEL_10:
      sub_21CA2C9E8((uint64_t)v4, (uint64_t)&v51 - v26);
      sub_21CA2C9E8((uint64_t)v3, (uint64_t)v25);
      goto LABEL_11;
    }
LABEL_8:
    sub_21CA2C9E8((uint64_t)v4, (uint64_t)&v51 - v26);
    sub_21CA2C9E8((uint64_t)v3, (uint64_t)v25);
    goto LABEL_9;
  }
  if (!v29) {
    goto LABEL_8;
  }
  if (*v4 == *v3 && v28 == v29) {
    goto LABEL_10;
  }
  char v32 = sub_21CB88F50();
  sub_21CA2C9E8((uint64_t)v4, (uint64_t)v27);
  sub_21CA2C9E8((uint64_t)v3, (uint64_t)v25);
  if ((v32 & 1) == 0)
  {
LABEL_9:
    sub_21CA2CA4C((uint64_t)v25);
    sub_21CA2CA4C((uint64_t)v27);
    uint64_t v33 = (uint64_t)v17;
    uint64_t v35 = v53;
    uint64_t v34 = (uint64_t)v54;
LABEL_17:
    sub_21CA2C9E8((uint64_t)v4, (uint64_t)v22);
    sub_21CA2C9E8((uint64_t)v3, v35);
LABEL_18:
    sub_21CA2CA4C(v35);
    sub_21CA2CA4C((uint64_t)v22);
    sub_21CA2C9E8((uint64_t)v4, v33);
    uint64_t v36 = v57;
    sub_21CA2C9E8((uint64_t)v3, v57);
LABEL_19:
    sub_21CA2CA4C(v36);
    sub_21CA2CA4C(v33);
    uint64_t v37 = v55;
    sub_21CA2C9E8((uint64_t)v4, v55);
    uint64_t v38 = v56;
    sub_21CA2C9E8((uint64_t)v3, v56);
LABEL_20:
    sub_21CA2CA4C(v38);
    sub_21CA2CA4C(v37);
    sub_21CA2C9E8((uint64_t)v4, v34);
    sub_21CA2C9E8((uint64_t)v3, (uint64_t)v8);
    goto LABEL_21;
  }
LABEL_11:
  char v52 = v8;
  sub_21CA26A4C((uint64_t)&v27[*(int *)(v5 + 44)], (uint64_t)v65, &qword_267C951F0);
  uint64_t v51 = v5;
  sub_21CA26A4C((uint64_t)&v25[*(int *)(v5 + 44)], (uint64_t)v66, &qword_267C951F0);
  sub_21CA26A4C((uint64_t)v65, (uint64_t)v64, &qword_267C951F0);
  sub_21CA26A4C((uint64_t)v66, (uint64_t)&v64[360], &qword_267C951F0);
  sub_21CA26A4C((uint64_t)v65, (uint64_t)v67, &qword_267C951F0);
  if (sub_21CA7CDBC((uint64_t)v67) == 1)
  {
    sub_21CA93348((uint64_t)v66, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_21CA5C7D4);
    sub_21CA2CA4C((uint64_t)v25);
    sub_21CA2CA4C((uint64_t)v27);
    sub_21CA26A4C((uint64_t)&v64[360], (uint64_t)v63, &qword_267C951F0);
    sub_21CA26A4C((uint64_t)v63, (uint64_t)v62, &qword_267C951F0);
    uint64_t v33 = (uint64_t)v17;
    if (sub_21CA7CDBC((uint64_t)v62) == 1)
    {
      sub_21CA26A4C((uint64_t)v64, (uint64_t)v61, &qword_267C951F0);
      sub_21CA93348((uint64_t)v61, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_21CA2CAA8);
      sub_21CA2C9E8((uint64_t)v4, (uint64_t)v22);
      uint64_t v35 = v53;
      sub_21CA2C9E8((uint64_t)v3, v53);
      uint64_t v8 = v52;
      uint64_t v34 = (uint64_t)v54;
      goto LABEL_24;
    }
    goto LABEL_16;
  }
  sub_21CA26A4C((uint64_t)v65, (uint64_t)v63, &qword_267C951F0);
  sub_21CA26A4C((uint64_t)v66, (uint64_t)v62, &qword_267C951F0);
  uint64_t v33 = (uint64_t)v17;
  if (sub_21CA7CDBC((uint64_t)v62) == 1)
  {
    sub_21CA26A4C((uint64_t)v65, (uint64_t)v60, &qword_267C951F0);
    sub_21CA7629C(v60);
    sub_21CA7629C(v60);
    sub_21CA2CA4C((uint64_t)v25);
    sub_21CA2CA4C((uint64_t)v27);
    memcpy(v61, v63, 0x161uLL);
    sub_21CA76350(v61);
LABEL_16:
    uint64_t v8 = v52;
    uint64_t v35 = v53;
    uint64_t v34 = (uint64_t)v54;
    memcpy(v62, v64, 0x2C9uLL);
    sub_21CA9314C((uint64_t)v62);
    goto LABEL_17;
  }
  sub_21CA26A4C((uint64_t)v66, (uint64_t)v58, &qword_267C951F0);
  memcpy(v61, v58, 0x161uLL);
  sub_21CA26A4C((uint64_t)v65, (uint64_t)v59, &qword_267C951F0);
  sub_21CA93348((uint64_t)v65, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_21CA5C7D4);
  sub_21CA7629C(v59);
  char v41 = sub_21CA76668((uint64_t)v63, (uint64_t)v61);
  sub_21CA2CA4C((uint64_t)v25);
  sub_21CA2CA4C((uint64_t)v27);
  memcpy(v60, v63, 0x161uLL);
  sub_21CA76350(v60);
  sub_21CA26A4C((uint64_t)v64, (uint64_t)v61, &qword_267C951F0);
  sub_21CA93348((uint64_t)v61, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_21CA2CAA8);
  sub_21CA2C9E8((uint64_t)v4, (uint64_t)v22);
  uint64_t v35 = v53;
  sub_21CA2C9E8((uint64_t)v3, v53);
  uint64_t v8 = v52;
  uint64_t v34 = (uint64_t)v54;
  if ((v41 & 1) == 0) {
    goto LABEL_18;
  }
LABEL_24:
  int v42 = v22[16];
  sub_21CA2CA4C((uint64_t)v22);
  int v43 = *(unsigned __int8 *)(v35 + 16);
  sub_21CA2CA4C(v35);
  sub_21CA2C9E8((uint64_t)v4, v33);
  uint64_t v36 = v57;
  sub_21CA2C9E8((uint64_t)v3, v57);
  if (v42 != v43) {
    goto LABEL_19;
  }
  int v44 = *(unsigned __int8 *)(v33 + 33);
  int v45 = *(unsigned __int8 *)(v36 + 33);
  sub_21CA2CA4C(v36);
  sub_21CA2CA4C(v33);
  uint64_t v37 = v55;
  sub_21CA2C9E8((uint64_t)v4, v55);
  uint64_t v38 = v56;
  sub_21CA2C9E8((uint64_t)v3, v56);
  if (v44 != v45) {
    goto LABEL_20;
  }
  uint64_t v46 = v51;
  int v47 = *(unsigned __int8 *)(v37 + *(int *)(v51 + 40));
  sub_21CA2CA4C(v37);
  int v48 = *(unsigned __int8 *)(v38 + *(int *)(v46 + 40));
  sub_21CA2CA4C(v38);
  sub_21CA2C9E8((uint64_t)v4, v34);
  sub_21CA2C9E8((uint64_t)v3, (uint64_t)v8);
  if (v47 == v48)
  {
    char v49 = *(unsigned char *)(v34 + *(int *)(v46 + 36));
    sub_21CA2CA4C(v34);
    char v50 = v8[*(int *)(v46 + 36)];
    sub_21CA2CA4C((uint64_t)v8);
    char v39 = v49 ^ v50 ^ 1;
    return v39 & 1;
  }
LABEL_21:
  sub_21CA2CA4C((uint64_t)v8);
  sub_21CA2CA4C(v34);
  char v39 = 0;
  return v39 & 1;
}

uint64_t sub_21CA2C9E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FMFLocation();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_21CA2CA4C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for FMFLocation();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_21CA2CAA8(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,void *a39)
{
  if (a39)
  {
    sub_21CA1358C(result, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
      a20,
      a21,
      a22);

    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_21CA2CBFC(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_21CA2CC10(a1, a2, a3, a4, &qword_267C95C60, &qword_267C959C8);
}

uint64_t sub_21CA2CC10(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t *a6)
{
  if (a3)
  {
    unint64_t v9 = *(void *)(a4 + 24);
    uint64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v10 = a2;
      }
    }
  }
  else
  {
    uint64_t v10 = a2;
  }
  uint64_t v11 = *(void *)(a4 + 16);
  if (v10 <= v11) {
    uint64_t v12 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v12 = v10;
  }
  if (!v12)
  {
    uint64_t v16 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_19;
  }
  sub_21CA57E34(a5);
  uint64_t v13 = *(void *)(sub_21CA57E34(a6) - 8);
  uint64_t v14 = *(void *)(v13 + 72);
  unint64_t v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v16 = (void *)swift_allocObject();
  size_t v17 = j__malloc_size(v16);
  if (!v14 || (v17 - v15 == 0x8000000000000000 ? (BOOL v18 = v14 == -1) : (BOOL v18 = 0), v18))
  {
LABEL_29:
    uint64_t result = sub_21CB88CF0();
    __break(1u);
    return result;
  }
  v16[2] = v11;
  uint64_t v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  uint64_t v19 = *(void *)(sub_21CA57E34(a6) - 8);
  unint64_t v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  unint64_t v21 = (unint64_t)v16 + v20;
  if (a1)
  {
    if ((unint64_t)v16 < a4 || v21 >= a4 + v20 + *(void *)(v19 + 72) * v11)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_21CA2CE7C(0, v11, v21, a4, a6);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v16;
}

uint64_t sub_21CA2CE7C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    uint64_t v9 = *(void *)(sub_21CA57E34(a5) - 8);
    uint64_t v10 = a4 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v11 = *(void *)(v9 + 72);
    unint64_t v12 = v10 + v11 * a1;
    unint64_t v13 = a3 + v11 * v5;
    if (v12 >= v13 || v12 + v11 * v5 <= a3)
    {
      swift_arrayInitWithCopy();
      return v13;
    }
  }
  uint64_t result = sub_21CB88D50();
  __break(1u);
  return result;
}

id sub_21CA2CFD4(uint64_t a1)
{
  return sub_21CA3D8D4(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void **)(v1 + 32));
}

uint64_t FMFFriend.relationshipType.getter@<X0>(void *a1@<X8>)
{
  uint64_t result = type metadata accessor for FMFFriend();
  *a1 = *(void *)(v1 + *(int *)(result + 36));
  return result;
}

void *sub_21CA2D014(void *a1)
{
  uint64_t v4 = a1[10];
  uint64_t v5 = a1[9];
  uint64_t v3 = a1[11];
  uint64_t v6 = a1[45];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_21CA1F33C(v5, v4, v3);
  sub_21CA2D5F4(v6);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void sub_21CA2D15C()
{
  uint64_t v1 = *(void *)(v0 + 48);
  if (*(unsigned char *)(v1 + OBJC_IVAR____TtC7FMFCore23FMFManagerConfiguration_useCache) == 1
    && (*(unsigned char *)(v1 + OBJC_IVAR____TtC7FMFCore23FMFManagerConfiguration_useOptimizedFetch) & 1) == 0)
  {
    uint64_t v2 = v0;
    if (qword_267C94990 != -1) {
      swift_once();
    }
    uint64_t v3 = sub_21CB880A0();
    sub_21CA4CC18(v3, (uint64_t)qword_267CA5368);
    uint64_t v4 = sub_21CB88070();
    os_log_type_t v5 = sub_21CB88880();
    if (os_log_type_enabled(v4, v5))
    {
      uint64_t v6 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v6 = 0;
      _os_log_impl(&dword_21CA00000, v4, v5, "FMFDataManager: Trying to save the cache blob to disk", v6, 2u);
      MEMORY[0x21D4B6B70](v6, -1, -1);
    }

    uint64_t v29 = *(void *)(v2 + 680);
    uint64_t v30 = *(void *)(v2 + 544);
    uint64_t v31 = *(void *)(v2 + 560);
    uint64_t v32 = *(void *)(v2 + 568);
    uint64_t v33 = *(void *)(v2 + 640);
    uint64_t v7 = *(void *)(v2 + 648);
    uint64_t v8 = *(void *)(v2 + 656);
    uint64_t v9 = *(void *)(v2 + 664);
    uint64_t v10 = *(void *)(v2 + 744);
    uint64_t v36 = *(void *)(v2 + 752);
    uint64_t v11 = *(void *)(v2 + 760);
    uint64_t v12 = *(void *)(v2 + 768);
    uint64_t v28 = *(void *)(v2 + 776);
    char v21 = *(unsigned char *)(v2 + 784);
    sub_21CA26A4C(v2 + 792, (uint64_t)v39, (uint64_t *)&unk_267C96EE0);
    uint64_t v25 = *(void *)(v2 + 1040);
    uint64_t v26 = *(void *)(v2 + 1032);
    uint64_t v23 = *(void *)(v2 + 1056);
    uint64_t v24 = *(void *)(v2 + 1048);
    uint64_t v22 = *(void *)(v2 + 1064);
    uint64_t v34 = *(void *)(v2 + 1080);
    uint64_t v35 = *(void *)(v2 + 1072);
    uint64_t v27 = *(void *)(v2 + 1096);
    uint64_t v13 = *(void *)(v2 + 1112);
    uint64_t v14 = *(void *)(v2 + 1104);
    uint64_t v15 = *(void *)(v2 + 720);
    __src[0] = v29;
    __src[1] = v30;
    __src[2] = MEMORY[0x263F8EE78];
    __src[3] = v31;
    __src[4] = v32;
    __src[5] = v33;
    __src[6] = v7;
    __src[7] = v8;
    __src[8] = v9;
    __src[9] = v10;
    __src[10] = v36;
    __src[11] = v11;
    __src[12] = v12;
    __src[13] = v28;
    LOBYTE(__src[14]) = v21;
    LOBYTE(v9) = *(unsigned char *)(v2 + 1088);
    sub_21CA26A4C((uint64_t)v39, (uint64_t)&__src[15], (uint64_t *)&unk_267C96EE0);
    __src[45] = v26;
    __src[46] = v25;
    __src[47] = v24;
    __src[48] = v23;
    __src[49] = v22;
    __src[50] = v35;
    __src[51] = v34;
    LOBYTE(__src[52]) = v9;
    __src[53] = v27;
    __src[54] = v13;
    __src[55] = v14;
    __src[56] = v15;
    memcpy(__dst, __src, 0x1C8uLL);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_21CA1F33C(v10, v36, v11);
    sub_21CA2D5F4(v26);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    os_unfair_lock_lock((os_unfair_lock_t)(v2 + 72));
    memcpy(v38, __dst, sizeof(v38));
    memcpy(v37, (const void *)(v2 + 80), sizeof(v37));
    if (sub_21CA2D6B8((uint64_t)v38, (uint64_t)v37))
    {
      os_unfair_lock_unlock((os_unfair_lock_t)(v2 + 72));
      sub_21CAC940C(__src);
      uint64_t v16 = sub_21CB88070();
      os_log_type_t v17 = sub_21CB88880();
      if (os_log_type_enabled(v16, v17))
      {
        BOOL v18 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)BOOL v18 = 0;
        _os_log_impl(&dword_21CA00000, v16, v17, "FMFDataManager: Nothing changed. Skipping cache write", v18, 2u);
        MEMORY[0x21D4B6B70](v18, -1, -1);
      }
    }
    else
    {
      sub_21CB2A608((uint64_t)__dst, v2 + 80);
      sub_21CA2D014(__src);
      os_unfair_lock_unlock((os_unfair_lock_t)(v2 + 72));
      if (MEMORY[0x21D4B6C80](v2 + 32))
      {
        uint64_t v19 = *(void *)(v2 + 40);
        uint64_t ObjectType = swift_getObjectType();
        (*(void (**)(uint64_t, uint64_t))(v19 + 88))(ObjectType, v19);
        swift_unknownObjectRelease();
      }
      if (*(void *)(v2 + 696))
      {
        swift_retain();
        sub_21CA2E7E4(__dst);
        swift_release();
      }
      sub_21CAC940C(__src);
    }
  }
}

uint64_t sub_21CA2D5F4(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_21CA2D658(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_21CA2D6B8(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)a1;
  uint64_t v4 = *(void *)(a1 + 8);
  uint64_t v7 = *(void *)(a1 + 16);
  uint64_t v6 = *(void *)(a1 + 24);
  uint64_t v67 = *(void *)(a1 + 40);
  uint64_t v68 = *(void *)(a1 + 32);
  uint64_t v65 = *(void *)(a1 + 48);
  uint64_t v63 = *(void *)(a1 + 56);
  uint64_t v61 = *(void *)(a1 + 64);
  uint64_t v56 = *(void *)(a1 + 72);
  uint64_t v57 = *(void *)(a1 + 80);
  uint64_t v58 = *(void *)(a1 + 88);
  uint64_t v59 = *(void *)(a1 + 96);
  uint64_t v49 = *(void *)(a1 + 104);
  char v51 = *(unsigned char *)(a1 + 112);
  sub_21CAC93A4(a1 + 120, (uint64_t)v93);
  uint64_t v46 = *(void *)(a1 + 376);
  uint64_t v47 = *(void *)(a1 + 360);
  uint64_t v42 = *(void *)(a1 + 384);
  uint64_t v43 = *(void *)(a1 + 368);
  uint64_t v41 = *(void *)(a1 + 400);
  uint64_t v44 = *(void *)(a1 + 392);
  uint64_t v45 = *(void *)(a1 + 408);
  char v40 = *(unsigned char *)(a1 + 416);
  uint64_t v31 = *(void *)(a1 + 424);
  uint64_t v26 = *(void *)(a1 + 440);
  uint64_t v28 = *(void *)(a1 + 432);
  uint64_t v29 = *(void *)(a1 + 448);
  uint64_t v9 = *(void *)a2;
  uint64_t v8 = *(void *)(a2 + 8);
  uint64_t v11 = *(void *)(a2 + 16);
  uint64_t v10 = *(void *)(a2 + 24);
  uint64_t v12 = *(void *)(a2 + 32);
  uint64_t v66 = *(void *)(a2 + 40);
  uint64_t v64 = *(void *)(a2 + 48);
  uint64_t v62 = *(void *)(a2 + 56);
  uint64_t v60 = *(void *)(a2 + 64);
  uint64_t v52 = *(void *)(a2 + 72);
  uint64_t v53 = *(void *)(a2 + 80);
  uint64_t v54 = *(void *)(a2 + 96);
  uint64_t v55 = *(void *)(a2 + 88);
  uint64_t v48 = *(void *)(a2 + 104);
  int v50 = *(unsigned __int8 *)(a2 + 112);
  sub_21CAC93A4(a2 + 120, (uint64_t)v94);
  uint64_t v33 = *(void *)(a2 + 368);
  uint64_t v34 = *(void *)(a2 + 376);
  uint64_t v35 = *(void *)(a2 + 384);
  uint64_t v36 = *(void *)(a2 + 392);
  uint64_t v37 = *(void *)(a2 + 400);
  uint64_t v38 = *(void *)(a2 + 408);
  uint64_t v39 = *(void *)(a2 + 360);
  char v32 = *(unsigned char *)(a2 + 416);
  uint64_t v30 = *(void *)(a2 + 424);
  uint64_t v27 = *(void *)(a2 + 432);
  uint64_t v13 = *(void *)(a2 + 440);
  uint64_t v14 = *(void *)(a2 + 448);
  uint64_t v25 = v13;
  if ((sub_21CA2DEE4(v5, v9, (uint64_t (*)(void))type metadata accessor for FMFIntermediateFriend, (uint64_t (*)(void))type metadata accessor for FMFIntermediateFriend, (uint64_t (*)(char *, char *))sub_21CA4A74C) & 1) == 0|| (sub_21CA2DEE4(v4, v8, (uint64_t (*)(void))type metadata accessor for FMFIntermediateFriend, (uint64_t (*)(void))type metadata accessor for FMFIntermediateFriend, (uint64_t (*)(char *, char *))sub_21CA4A74C) & 1) == 0|| (sub_21CA2DEE4(v7, v11, (uint64_t (*)(void))type metadata accessor for FMFIntermediateFriend, (uint64_t (*)(void))type metadata accessor for FMFIntermediateFriend, (uint64_t (*)(char *, char *))sub_21CA4A74C) & 1) == 0|| (sub_21CA2DEE4(v6,
          v10,
          (uint64_t (*)(void))type metadata accessor for FMFIntermediateFriend,
          (uint64_t (*)(void))type metadata accessor for FMFIntermediateFriend,
          (uint64_t (*)(char *, char *))sub_21CA4A74C) & 1) == 0
    || (sub_21CA2DEE4(v68, v12, (uint64_t (*)(void))type metadata accessor for FMFIntermediateFriend, (uint64_t (*)(void))type metadata accessor for FMFIntermediateFriend, (uint64_t (*)(char *, char *))sub_21CA4A74C) & 1) == 0|| (sub_21CA2DEE4(v67, v66, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert, (uint64_t (*)(char *, char *))static FMFLocationAlert.== infix(_:_:)) & 1) == 0|| (sub_21CA2DEE4(v65, v64, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert, (uint64_t (*)(char *, char *))static FMFLocationAlert.== infix(_:_:)) & 1) == 0|| (sub_21CA2DEE4(v63,
          v62,
          (uint64_t (*)(void))type metadata accessor for FMFLocationAlert,
          (uint64_t (*)(void))type metadata accessor for FMFLocationAlert,
          (uint64_t (*)(char *, char *))static FMFLocationAlert.== infix(_:_:)) & 1) == 0
    || (sub_21CA2DEE4(v61, v60, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert, (uint64_t (*)(char *, char *))static FMFLocationAlert.== infix(_:_:)) & 1) == 0)
  {
    goto LABEL_20;
  }
  if (!v58)
  {
    uint64_t v16 = v56;
    uint64_t v15 = v57;
    uint64_t v17 = v55;
    if (!v55) {
      goto LABEL_15;
    }
LABEL_19:
    sub_21CA1F33C(v52, v53, v17);
    sub_21CA59D84(v16, v15, v58);
    sub_21CA59D84(v52, v53, v17);
    goto LABEL_20;
  }
  uint64_t v16 = v56;
  uint64_t v15 = v57;
  uint64_t v72 = v56;
  uint64_t v73 = v57;
  uint64_t v74 = v58;
  uint64_t v75 = v59;
  uint64_t v17 = v55;
  if (!v55)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    goto LABEL_19;
  }
  int v89 = v52 & 0xFF010101;
  uint64_t v90 = v53;
  uint64_t v91 = v55;
  uint64_t v92 = v54;
  sub_21CA1F33C(v56, v57, v58);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char v18 = _s7FMFCore14FMFPreferencesV2eeoiySbAC_ACtFZ_0((unsigned __int8 *)&v72, (unsigned __int8 *)&v89);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_21CA59D84(v56, v57, v58);
  if ((v18 & 1) == 0) {
    goto LABEL_20;
  }
LABEL_15:
  if (v51)
  {
    if (!v50) {
      goto LABEL_20;
    }
  }
  else
  {
    char v21 = v50;
    if (v49 != v48) {
      char v21 = 1;
    }
    if (v21) {
      goto LABEL_20;
    }
  }
  sub_21CAC93A4((uint64_t)v94, (uint64_t)v88);
  sub_21CAC93A4((uint64_t)v93, (uint64_t)&v89);
  if (sub_21CA6E2D4((uint64_t)&v89) == 1)
  {
    sub_21CAC93A4((uint64_t)v94, (uint64_t)v70);
    if (sub_21CA6E2D4((uint64_t)v70) != 1) {
      goto LABEL_20;
    }
    uint64_t v22 = v47;
  }
  else
  {
    sub_21CAC93A4((uint64_t)v93, (uint64_t)v69);
    sub_21CAC93A4((uint64_t)v94, (uint64_t)v70);
    if (sub_21CA6E2D4((uint64_t)v70) == 1) {
      goto LABEL_20;
    }
    uint64_t v22 = v47;
    if (!_s7FMFCore9FMFConfigV2eeoiySbAC_ACtFZ_0((uint64_t)v69, (uint64_t)v88)) {
      goto LABEL_20;
    }
  }
  if (v22)
  {
    uint64_t v72 = v22;
    uint64_t v73 = v43;
    uint64_t v74 = v46;
    uint64_t v75 = v42;
    uint64_t v76 = v44;
    uint64_t v77 = v41;
    uint64_t v78 = v45;
    char v79 = v40;
    if (v39)
    {
      uint64_t v23 = v14;
      v70[0] = v39;
      v70[1] = v33;
      v70[2] = v34;
      v70[3] = v35;
      v70[4] = v36;
      v70[5] = v37;
      v70[6] = v38;
      char v71 = v32 & 1;
      char v24 = _s7FMFCore9FMFMyInfoV2eeoiySbAC_ACtFZ_0((uint64_t)&v72, (uint64_t)v70);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v24 & 1) == 0) {
        goto LABEL_20;
      }
      goto LABEL_35;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
LABEL_40:
    uint64_t v72 = v22;
    uint64_t v73 = v43;
    uint64_t v74 = v46;
    uint64_t v75 = v42;
    uint64_t v76 = v44;
    uint64_t v77 = v41;
    uint64_t v78 = v45;
    char v79 = v40;
    uint64_t v80 = v39;
    uint64_t v81 = v33;
    uint64_t v82 = v34;
    uint64_t v83 = v35;
    uint64_t v84 = v36;
    uint64_t v85 = v37;
    uint64_t v86 = v38;
    char v87 = v32;
    sub_21CA2D5F4(v39);
    sub_21CAC981C(&v72);
    goto LABEL_20;
  }
  uint64_t v23 = v14;
  if (v39) {
    goto LABEL_40;
  }
LABEL_35:
  if (sub_21CA2E350(v31, v30) & 1) != 0 && (sub_21CA5CDD4(v29, v23) & 1) != 0 && (sub_21CA2E44C(v28, v27))
  {
    char v19 = sub_21CA2DEE4(v26, v25, (uint64_t (*)(void))type metadata accessor for FMFLabelledLocation, (uint64_t (*)(void))type metadata accessor for FMFLabelledLocation, (uint64_t (*)(char *, char *))_s7FMFCore19FMFLabelledLocationV2eeoiySbAC_ACtFZ_0);
    return v19 & 1;
  }
LABEL_20:
  char v19 = 0;
  return v19 & 1;
}

uint64_t sub_21CA2DEE4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), uint64_t (*a4)(void), uint64_t (*a5)(char *, char *))
{
  uint64_t v9 = a3(0) - 8;
  uint64_t v10 = MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v15 = (char *)&v24 - v14;
  uint64_t v16 = *(void *)(a1 + 16);
  if (v16 == *(void *)(a2 + 16))
  {
    if (!v16 || a1 == a2)
    {
      char v20 = 1;
    }
    else
    {
      unint64_t v17 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
      uint64_t v18 = *(void *)(v13 + 72);
      uint64_t v19 = v16 - 1;
      do
      {
        sub_21CA2E0CC(a1 + v17, (uint64_t)v15, a4);
        sub_21CA2E0CC(a2 + v17, (uint64_t)v12, a4);
        char v20 = a5(v15, v12);
        sub_21CA2E06C((uint64_t)v12, a4);
        sub_21CA2E06C((uint64_t)v15, a4);
        BOOL v22 = v19-- != 0;
        if ((v20 & 1) == 0) {
          break;
        }
        v17 += v18;
      }
      while (v22);
    }
  }
  else
  {
    char v20 = 0;
  }
  return v20 & 1;
}

uint64_t sub_21CA2E06C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_21CA2E0CC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_21CA2E134(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t _s7FMFCore14FMFPreferencesV2eeoiySbAC_ACtFZ_0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  uint64_t result = 0;
  if (*a1 != *a2 || ((a1[1] ^ a2[1]) & 1) != 0 || ((a1[2] ^ a2[2]) & 1) != 0) {
    return result;
  }
  int v4 = a1[3];
  uint64_t v5 = *((void *)a1 + 1);
  uint64_t v6 = *((void *)a1 + 2);
  uint64_t v7 = *((void *)a1 + 3);
  int v8 = a2[3];
  uint64_t v9 = *((void *)a2 + 1);
  uint64_t v10 = *((void *)a2 + 2);
  uint64_t v11 = *((void *)a2 + 3);
  if (v4 != 2)
  {
    if (v8 != 2)
    {
      if (v4) {
        uint64_t v12 = 0x454E4F5952455645;
      }
      else {
        uint64_t v12 = 0x53444E45495246;
      }
      if (v4) {
        unint64_t v13 = 0xE800000000000000;
      }
      else {
        unint64_t v13 = 0xE700000000000000;
      }
      if (v8) {
        uint64_t v14 = 0x454E4F5952455645;
      }
      else {
        uint64_t v14 = 0x53444E45495246;
      }
      if (v8) {
        unint64_t v15 = 0xE800000000000000;
      }
      else {
        unint64_t v15 = 0xE700000000000000;
      }
      if (v12 == v14 && v13 == v15)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v16 = sub_21CB88F50();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t result = 0;
        if ((v16 & 1) == 0) {
          return result;
        }
      }
      goto LABEL_26;
    }
    return 0;
  }
  if (v8 != 2) {
    return 0;
  }
LABEL_26:
  if (v5 == v9 && v6 == v10 || (v17 = sub_21CB88F50(), uint64_t result = 0, (v17 & 1) != 0))
  {
    uint64_t result = (v7 | v11) == 0;
    if (v7 && v11)
    {
      return sub_21CAC91D8(v7, v11);
    }
  }
  return result;
}

uint64_t sub_21CA2E350(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v2 && a1 != a2)
  {
    for (uint64_t i = 0; ; i += 40)
    {
      uint64_t v6 = *(void *)(a1 + i + 48);
      uint64_t v7 = *(void *)(a1 + i + 56);
      int v8 = *(unsigned __int8 *)(a1 + i + 64);
      uint64_t v9 = *(void *)(a2 + i + 48);
      uint64_t v10 = *(void *)(a2 + i + 56);
      int v11 = *(unsigned __int8 *)(a2 + i + 64);
      BOOL v12 = *(void *)(a1 + i + 32) == *(void *)(a2 + i + 32) && *(void *)(a1 + i + 40) == *(void *)(a2 + i + 40);
      if (!v12 && (sub_21CB88F50() & 1) == 0) {
        break;
      }
      if (v6 == v9 && v7 == v10)
      {
        if (v8 != v11) {
          return 0;
        }
      }
      else
      {
        char v14 = sub_21CB88F50();
        uint64_t result = 0;
        if (v14 & 1) == 0 || ((v8 ^ v11)) {
          return result;
        }
      }
      if (!--v2) {
        return 1;
      }
    }
    return 0;
  }
  return 1;
}

uint64_t sub_21CA2E44C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v2 && a1 != a2)
  {
    uint64_t v3 = (void *)(a2 + 40);
    for (uint64_t i = (void *)(a1 + 40); ; i += 3)
    {
      BOOL v5 = *(i - 1) == *(v3 - 1) && *i == *v3;
      if (!v5 && (sub_21CB88F50() & 1) == 0) {
        break;
      }
      v3 += 3;
      if (!--v2) {
        return 1;
      }
    }
    return 0;
  }
  return 1;
}

uint64_t _s7FMFCore9FMFMyInfoV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v22 = *(void *)(a1 + 24);
  uint64_t v23 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 48);
  uint64_t v20 = *(void *)(a1 + 40);
  uint64_t v21 = *(void *)(a1 + 32);
  int v4 = *(unsigned __int8 *)(a1 + 56);
  uint64_t v5 = *(void *)(a2 + 8);
  uint64_t v7 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v9 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  uint64_t v10 = *(void *)(a2 + 48);
  int v11 = *(unsigned __int8 *)(a2 + 56);
  if ((sub_21CA4C01C(*(void **)a1, *(void **)a2) & 1) == 0) {
    return 0;
  }
  uint64_t v12 = v10;
  if (v2 != v5 || v23 != v7)
  {
    char v13 = sub_21CB88F50();
    uint64_t v12 = v10;
    char v14 = v13;
    uint64_t result = 0;
    if ((v14 & 1) == 0) {
      return result;
    }
  }
  if (v21)
  {
    if (v9)
    {
      if (v22 != v6 || v21 != v9)
      {
        uint64_t v16 = v12;
        char v17 = sub_21CB88F50();
        uint64_t v12 = v16;
        char v18 = v17;
        uint64_t result = 0;
        if ((v18 & 1) == 0) {
          return result;
        }
      }
      goto LABEL_14;
    }
    return 0;
  }
  if (v9) {
    return 0;
  }
LABEL_14:
  if (v20 == v8 && v3 == v12) {
    return v4 ^ v11 ^ 1u;
  }
  char v19 = sub_21CB88F50();
  uint64_t result = 0;
  if (v19) {
    return v4 ^ v11 ^ 1u;
  }
  return result;
}

BOOL _s7FMFCore9FMFConfigV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  BOOL result = 0;
  v6.i64[0] = *(void *)(a1 + 16);
  v6.i64[1] = *(void *)(a1 + 32);
  v2.i64[0] = *(void *)(a1 + 40);
  v7.i64[0] = *(void *)(a2 + 16);
  v7.i64[1] = *(void *)(a2 + 32);
  v3.i64[0] = *(void *)(a2 + 40);
  if ((vminvq_u8((uint8x16_t)vcltzq_s8(vshlq_n_s8(vuzp1q_s8((int8x16_t)vuzp1q_s16((int16x8_t)vuzp1q_s32((int32x4_t)vceqq_s64((int64x2_t)vextq_s8(*(int8x16_t *)a1, *(int8x16_t *)a1, 8uLL), (int64x2_t)vextq_s8(*(int8x16_t *)a2, *(int8x16_t *)a2, 8uLL)), (int32x4_t)vceqq_s64(v6, v7)), (int16x8_t)vuzp1q_s32((int32x4_t)vceqq_s64(vzip1q_s64(v2, *(int64x2_t *)(a1 + 56)), vzip1q_s64(v3, *(int64x2_t *)(a2 + 56))), (int32x4_t)vceqq_s64(
                                                                           (int64x2_t)vextq_s8(*(int8x16_t *)(a1 + 56), *(int8x16_t *)(a1 + 72), 8uLL), (int64x2_t)vextq_s8(*(int8x16_t *)(a2 + 56), *(int8x16_t *)(a2 + 72), 8uLL)))), (int8x16_t)vuzp1q_s16((int16x8_t)vuzp1q_s32((int32x4_t)vceqq_s64(*(int64x2_t *)(a1 + 80), *(int64x2_t *)(a2 + 80)), (int32x4_t)vceqq_s64(*(int64x2_t *)(a1 + 104), *(int64x2_t *)(a2 + 104))), (int16x8_t)vuzp1q_s32((int32x4_t)vceqq_s64(*(int64x2_t *)(a1 + 120), *(int64x2_t *)(a2 + 120)),
                                                              (int32x4_t)vceqq_s64(*(int64x2_t *)(a1 + 136), *(int64x2_t *)(a2 + 136))))), 7uLL))) & 1) != 0)
  {
    int8x8_t v8 = vand_s8(vcltz_s8(vshl_n_s8(vmovn_s16(vuzp1q_s16((int16x8_t)vuzp1q_s32((int32x4_t)vceqq_s64(*(int64x2_t *)(a1 + 152), *(int64x2_t *)(a2 + 152)), (int32x4_t)vceqq_s64(*(int64x2_t *)(a1 + 168), *(int64x2_t *)(a2 + 168))), (int16x8_t)vuzp1q_s32((int32x4_t)vceqq_s64(*(int64x2_t *)(a1 + 184), *(int64x2_t *)(a2 + 184)), (int32x4_t)vceqq_s64(*(int64x2_t *)(a1 + 208), *(int64x2_t *)(a2 + 208))))), 7uLL)), (int8x8_t)0x8040201008040201);
    v8.i8[0] = vaddv_s8(v8);
    if (v8.i32[0] == 255
      && *(void *)(a1 + 224) == *(void *)(a2 + 224)
      && ((*(unsigned __int8 *)(a1 + 48) ^ *(unsigned __int8 *)(a2 + 48)) & 1) == 0
      && ((*(unsigned __int8 *)(a1 + 96) ^ *(unsigned __int8 *)(a2 + 96)) & 1) == 0
      && ((*(unsigned __int8 *)(a1 + 200) ^ *(unsigned __int8 *)(a2 + 200)) & 1) == 0
      && ((*(unsigned __int8 *)(a1 + 201) ^ *(unsigned __int8 *)(a2 + 201)) & 1) == 0
      && *(double *)(a1 + 24) == *(double *)(a2 + 24))
    {
      return *(void *)(a1 + 232) == *(void *)(a2 + 232);
    }
  }
  return result;
}

uint64_t sub_21CA2E7E4(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_21CB88100();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  int64x2_t v7 = (char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18[0] = sub_21CB88150();
  uint64_t v8 = *(void *)(v18[0] - 8);
  MEMORY[0x270FA5388](v18[0]);
  uint64_t v10 = (char *)v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_267C94990 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_21CB880A0();
  sub_21CA4CC18(v11, (uint64_t)qword_267CA5368);
  uint64_t v12 = sub_21CB88070();
  os_log_type_t v13 = sub_21CB88880();
  if (os_log_type_enabled(v12, v13))
  {
    char v14 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)char v14 = 0;
    _os_log_impl(&dword_21CA00000, v12, v13, "FMDiskIO: save to disk", v14, 2u);
    MEMORY[0x21D4B6B70](v14, -1, -1);
  }

  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = v2;
  memcpy((void *)(v15 + 24), a1, 0x1C8uLL);
  aBlock[4] = sub_21CA2FBD0;
  void aBlock[5] = v15;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_21CA1B084;
  uint64_t aBlock[3] = &unk_26CD6E7D0;
  uint64_t v16 = _Block_copy(aBlock);
  sub_21CA2D014(a1);
  swift_retain();
  sub_21CB88120();
  v18[1] = MEMORY[0x263F8EE78];
  sub_21CA36540((unint64_t *)&qword_267C96FC0, MEMORY[0x263F8F030]);
  sub_21CA57E34((uint64_t *)&unk_267C96DD0);
  sub_21CA356BC((unint64_t *)&qword_267C96FD0, (uint64_t *)&unk_267C96DD0);
  sub_21CB88A60();
  MEMORY[0x21D4B5A20](0, v10, v7, v16);
  _Block_release(v16);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  (*(void (**)(char *, void))(v8 + 8))(v10, v18[0]);
  return swift_release();
}

uint64_t FMFFriend.location.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for FMFFriend();
  return sub_21CA24E80(v1 + *(int *)(v3 + 80), a1, (uint64_t *)&unk_267C96EF0);
}

uint64_t sub_21CA2EBB4()
{
  return sub_21CA4C128(v0[2], v0[3], v0[4]);
}

uint64_t sub_21CA2EBC0()
{
  return sub_21CA2EBCC(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void (**)(uint64_t))(v0 + 32), *(void *)(v0 + 40));
}

uint64_t sub_21CA2EBCC(uint64_t a1, uint64_t a2, void (*a3)(uint64_t), uint64_t a4)
{
  v45[1] = a4;
  uint64_t v46 = a3;
  uint64_t v59 = a2;
  uint64_t v64 = a1;
  uint64_t v62 = sub_21CB88100();
  uint64_t v4 = *(void *)(v62 - 8);
  MEMORY[0x270FA5388](v62);
  uint64_t v61 = (char *)v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = sub_21CB88150();
  uint64_t v6 = *(void *)(v60 - 8);
  MEMORY[0x270FA5388](v60);
  uint64_t v58 = (char *)v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_267C94990 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_21CB880A0();
  uint64_t v11 = (void *)sub_21CA4CC18(v8, (uint64_t)qword_267CA5368);
  unint64_t v9 = v64;
  swift_bridgeObjectRetain_n();
  uint64_t v57 = v11;
  uint64_t v10 = sub_21CB88070();
  LOBYTE(v11) = sub_21CB88880();
  uint64_t v12 = v9 >> 62;
  if (!os_log_type_enabled(v10, (os_log_type_t)v11))
  {

    swift_bridgeObjectRelease_n();
    goto LABEL_8;
  }
  unint64_t v9 = swift_slowAlloc();
  *(_DWORD *)unint64_t v9 = 134217984;
  if (v12) {
    goto LABEL_30;
  }
  uint64_t v13 = *(void *)((v64 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    swift_bridgeObjectRelease();
    aBlock[0] = v13;
    sub_21CB889C0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_21CA00000, v10, (os_log_type_t)v11, "FMLocationShifter: processing %ld shifting request", (uint8_t *)v9, 0xCu);
    MEMORY[0x21D4B6B70](v9, -1, -1);

LABEL_8:
    uint64_t v14 = swift_allocObject();
    uint64_t v63 = v14;
    *(void *)(v14 + 16) = MEMORY[0x263F8EE78];
    uint64_t v11 = (void *)(v14 + 16);
    if (v12)
    {
      if (v64 < 0) {
        uint64_t v10 = v64;
      }
      else {
        uint64_t v10 = (v64 & 0xFFFFFFFFFFFFFF8);
      }
      swift_bridgeObjectRetain();
      uint64_t v12 = sub_21CB88D10();
      if (!v12) {
        goto LABEL_28;
      }
    }
    else
    {
      uint64_t v12 = *(void *)((v64 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v12) {
        goto LABEL_28;
      }
    }
    uint64_t v15 = self;
    if (v12 >= 1) {
      break;
    }
    __break(1u);
LABEL_30:
    swift_bridgeObjectRetain();
    uint64_t v13 = sub_21CB88D10();
    swift_bridgeObjectRelease();
  }
  char v17 = (void *)v15;
  uint64_t v18 = 0;
  unint64_t v19 = v64 & 0xC000000000000001;
  uint64_t v52 = v67;
  char v51 = (void (**)(char *, uint64_t))(v4 + 8);
  int v50 = (void (**)(char *, uint64_t))(v6 + 8);
  uint64_t v20 = &off_264437000;
  uint64_t v21 = &off_264437000;
  unint64_t v49 = 0x800000021CB948A0;
  *(void *)&long long v16 = 136315138;
  long long v48 = v16;
  uint64_t v47 = MEMORY[0x263F8EE58] + 8;
  uint64_t v55 = v12;
  uint64_t v56 = v11;
  unint64_t v53 = v64 & 0xC000000000000001;
  uint64_t v54 = (void *)v15;
  do
  {
    if (v19)
    {
      uint64_t v29 = MEMORY[0x21D4B5CA0](v18, v64);
    }
    else
    {
      uint64_t v29 = *(void *)(v64 + 8 * v18 + 32);
      swift_retain();
    }
    uint64_t v30 = *(void **)(v29 + 16);
    [v30 (SEL)v20[63]];
    double v32 = v31;
    [v30 (SEL)v20[63]];
    if (objc_msgSend(v17, (SEL)v21[64], v32))
    {
      id v33 = objc_allocWithZone(MEMORY[0x263F3BA18]);
      uint64_t v34 = (void *)sub_21CB882C0();
      id v35 = objc_msgSend(v33, sel_initWithDescription_andTimeout_, v34, 60.0);

      swift_retain_n();
      uint64_t v36 = sub_21CB88070();
      os_log_type_t v37 = sub_21CB88880();
      if (os_log_type_enabled(v36, v37))
      {
        uint64_t v38 = swift_slowAlloc();
        uint64_t v39 = swift_slowAlloc();
        uint64_t v65 = v29;
        aBlock[0] = v39;
        *(_DWORD *)uint64_t v38 = v48;
        type metadata accessor for FMLocationShiftingRequest();
        swift_retain();
        uint64_t v40 = sub_21CB88310();
        *(void *)(v38 + 4) = sub_21CA4E450(v40, v41, aBlock);
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_21CA00000, v36, v37, "FMLocationShifter: processing shifting request %s", (uint8_t *)v38, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x21D4B6B70](v39, -1, -1);
        MEMORY[0x21D4B6B70](v38, -1, -1);
      }
      else
      {

        swift_release_n();
      }
      uint64_t v22 = v59;
      uint64_t v23 = (void *)swift_allocObject();
      void v23[2] = v22;
      v23[3] = v29;
      v23[4] = v63;
      void v23[5] = v35;
      v67[2] = sub_21CA7520C;
      v67[3] = v23;
      aBlock[0] = MEMORY[0x263EF8330];
      aBlock[1] = 1107296256;
      v67[0] = sub_21CA1B084;
      v67[1] = &unk_26CD6A780;
      uint64_t v24 = _Block_copy(aBlock);
      swift_retain();
      swift_retain();
      swift_retain();
      id v25 = v35;
      uint64_t v26 = v58;
      sub_21CB88120();
      uint64_t v65 = MEMORY[0x263F8EE78];
      sub_21CA5DE64((unint64_t *)&qword_267C96FC0, MEMORY[0x263F8F030]);
      sub_21CA57E34((uint64_t *)&unk_267C96DD0);
      sub_21CA3566C((unint64_t *)&qword_267C96FD0, (uint64_t *)&unk_267C96DD0);
      uint64_t v28 = v61;
      uint64_t v27 = v62;
      sub_21CB88A60();
      MEMORY[0x21D4B5A20](0, v26, v28, v24);
      _Block_release(v24);
      (*v51)(v28, v27);
      (*v50)(v26, v60);
      swift_release();
      objc_msgSend(v25, sel_wait);

      uint64_t v12 = v55;
      uint64_t v11 = v56;
      unint64_t v19 = v53;
      char v17 = v54;
      uint64_t v20 = &off_264437000;
      uint64_t v21 = &off_264437000;
    }
    else
    {
      swift_beginAccess();
      uint64_t v42 = swift_retain();
      MEMORY[0x21D4B55E0](v42);
      if (*(void *)((*v11 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v11 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_21CB88560();
      }
      sub_21CB885A0();
      sub_21CB88530();
      swift_endAccess();
    }
    ++v18;
    swift_release();
  }
  while (v12 != v18);
LABEL_28:
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v43 = swift_bridgeObjectRetain();
  v46(v43);
  swift_release();
  return swift_bridgeObjectRelease();
}

void sub_21CA2F3E4(unint64_t a1)
{
  sub_21CA2F3F0(a1, *(void **)(v1 + 16), *(void (**)(id))(v1 + 24));
}

void sub_21CA2F3F0(unint64_t a1, void *a2, void (*a3)(id))
{
  if (!(a1 >> 62))
  {
    uint64_t v6 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v6) {
      goto LABEL_3;
    }
LABEL_7:
    swift_bridgeObjectRelease();
    id v8 = a2;
    goto LABEL_8;
  }
  swift_bridgeObjectRetain();
  if (!sub_21CB88D10()) {
    goto LABEL_7;
  }
LABEL_3:
  if ((a1 & 0xC000000000000001) != 0)
  {
    uint64_t v9 = MEMORY[0x21D4B5CA0](0, a1);
    swift_bridgeObjectRelease();
    id v8 = *(id *)(v9 + 16);
    swift_unknownObjectRelease();
  }
  else
  {
    if (!*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    uint64_t v7 = *(void *)(a1 + 32);
    swift_retain();
    swift_bridgeObjectRelease();
    id v8 = *(id *)(v7 + 16);
    swift_release();
  }
LABEL_8:
  id v10 = v8;
  a3(v8);
}

void sub_21CA2F528()
{
  sub_21CA2F534(*(void *)(v0 + 24), *(double *)(v0 + 16));
}

void sub_21CA2F534(uint64_t a1, double a2)
{
  uint64_t v4 = sub_21CB87590();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  id v8 = (char *)v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0) + 16;
  MEMORY[0x270FA5388](v6);
  id v10 = (char *)v37 - v9 + 16;
  double v11 = *(double *)(a1 + OBJC_IVAR____TtC7FMFCore20FMFRefreshController_maxCallbackInterval);
  if (v11 >= a2) {
    double v11 = a2;
  }
  double v39 = v11;
  uint64_t v12 = OBJC_IVAR____TtC7FMFCore20FMFRefreshController_minCallbackInterval;
  if (v11 >= *(double *)(a1 + OBJC_IVAR____TtC7FMFCore20FMFRefreshController_minCallbackInterval))
  {
    char v24 = 1;
  }
  else
  {
    sub_21CB87580();
    sub_21CB87550();
    double v14 = v13;
    uint64_t v15 = *(void (**)(char *, uint64_t))(v5 + 8);
    v15(v10, v4);
    uint64_t v16 = a1 + OBJC_IVAR____TtC7FMFCore20FMFRefreshController_lastRefreshTime;
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, v16, v4);
    sub_21CB87550();
    double v18 = v17;
    v15(v8, v4);
    if (qword_267C94990 != -1) {
      swift_once();
    }
    double v19 = v14 - v18;
    uint64_t v20 = sub_21CB880A0();
    sub_21CA4CC18(v20, (uint64_t)qword_267CA5368);
    uint64_t v21 = sub_21CB88070();
    os_log_type_t v22 = sub_21CB88880();
    if (os_log_type_enabled(v21, v22))
    {
      uint64_t v23 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v23 = 134349056;
      *(double *)uint64_t v38 = v19;
      sub_21CB889C0();
      _os_log_impl(&dword_21CA00000, v21, v22, "FMFRefreshController: last refresh interval %{public}f s", v23, 0xCu);
      MEMORY[0x21D4B6B70](v23, -1, -1);
    }

    char v24 = 0;
    double v25 = *(double *)(a1 + v12) + v19 * -1000.0;
    if (v25 <= 0.0) {
      double v25 = 0.0;
    }
    double v39 = v25;
  }
  *(unsigned char *)(a1 + OBJC_IVAR____TtC7FMFCore20FMFRefreshController_refreshReason) = v24;
  if (qword_267C94990 != -1) {
    swift_once();
  }
  uint64_t v26 = sub_21CB880A0();
  sub_21CA4CC18(v26, (uint64_t)qword_267CA5368);
  double v27 = v39;
  uint64_t v28 = sub_21CB88070();
  os_log_type_t v29 = sub_21CB88880();
  if (os_log_type_enabled(v28, v29))
  {
    uint64_t v30 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v30 = 134349056;
    *(double *)uint64_t v38 = v27;
    sub_21CB889C0();
    _os_log_impl(&dword_21CA00000, v28, v29, "FMFRefreshController: scheduling next refresh in %{public}f s", v30, 0xCu);
    MEMORY[0x21D4B6B70](v30, -1, -1);
  }

  uint64_t v31 = OBJC_IVAR____TtC7FMFCore20FMFRefreshController_refreshTimer;
  objc_msgSend(*(id *)(a1 + OBJC_IVAR____TtC7FMFCore20FMFRefreshController_refreshTimer), sel_invalidate);
  sub_21CA05908(0, &qword_267C95070);
  swift_beginAccess();
  double v32 = v39 / 1000.0;
  v38[3] = type metadata accessor for FMFRefreshController();
  v38[0] = a1;
  memset(v37, 0, sizeof(v37));
  swift_retain();
  id v33 = sub_21CA2F9C0(v38, (uint64_t)sel_refreshTimerFired, v37, 0, v32);
  id v34 = objc_msgSend(self, sel_mainRunLoop);
  objc_msgSend(v34, sel_addTimer_forMode_, v33, *MEMORY[0x263EFF478]);

  id v35 = *(void **)(a1 + v31);
  *(void *)(a1 + v31) = v33;
}

id sub_21CA2F9C0(void *a1, uint64_t a2, void *a3, char a4, double a5)
{
  sub_21CA2B2CC(a1, a1[3]);
  uint64_t v10 = sub_21CB88F30();
  uint64_t v11 = a3[3];
  if (v11)
  {
    uint64_t v12 = sub_21CA2B2CC(a3, a3[3]);
    v21[1] = v21;
    char v13 = a4;
    uint64_t v14 = a2;
    uint64_t v15 = *(void *)(v11 - 8);
    MEMORY[0x270FA5388](v12);
    double v17 = (char *)v21 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v15 + 16))(v17);
    uint64_t v18 = sub_21CB88F30();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v11);
    a2 = v14;
    a4 = v13;
    sub_21CA2B0D0((uint64_t)a3);
  }
  else
  {
    uint64_t v18 = 0;
  }
  id v19 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_timerWithTimeInterval_target_selector_userInfo_repeats_, v10, a2, v18, a4 & 1, a5);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  sub_21CA2B0D0((uint64_t)a1);
  return v19;
}

uint64_t type metadata accessor for FMFRefreshController()
{
  uint64_t result = qword_267C95008;
  if (!qword_267C95008) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_21CA2FBD0()
{
  sub_21CA2FBDC(*(void *)(v0 + 16), (const void *)(v0 + 24));
}

void sub_21CA2FBDC(uint64_t a1, const void *a2)
{
  uint64_t v3 = memcpy(__dst, a2, sizeof(__dst));
  uint64_t v4 = (void *)MEMORY[0x21D4B6380](v3);
  sub_21CA35700(a1, __dst);
}

uint64_t sub_21CA2FC44()
{
  return sub_21CA2FC4C(*(void *)(v0 + 16));
}

uint64_t sub_21CA2FC4C(uint64_t result)
{
  uint64_t v1 = result;
  if (*(void *)(result + 16))
  {
    uint64_t result = sub_21CA5BCE0(0xD000000000000019, 0x800000021CB93B90);
    if (v2)
    {
      sub_21CA4E524(*(void *)(v1 + 56) + 32 * result, (uint64_t)v40);
      uint64_t v3 = MEMORY[0x263F8D6C8];
      uint64_t result = swift_dynamicCast();
      if (result)
      {
        uint64_t v4 = v38;
        if (qword_267C949A8 != -1)
        {
          swift_once();
          uint64_t v4 = v38;
        }
        uint64_t v41 = v3;
        v40[0] = v4;
        swift_beginAccess();
        sub_21CA306B0((uint64_t)v40, 1);
        uint64_t result = swift_endAccess();
      }
    }
  }
  if (*(void *)(v1 + 16))
  {
    uint64_t result = sub_21CA5BCE0(0x74655365636E6566, 0xEE006B6E694C7075);
    if (v5)
    {
      sub_21CA4E524(*(void *)(v1 + 56) + 32 * result, (uint64_t)v40);
      uint64_t v6 = MEMORY[0x263F8D310];
      uint64_t result = swift_dynamicCast();
      if (result)
      {
        uint64_t v8 = v38;
        uint64_t v7 = v39;
        if (qword_267C949A8 != -1)
        {
          swift_once();
          uint64_t v7 = v39;
          uint64_t v8 = v38;
        }
        uint64_t v41 = v6;
        v40[0] = v8;
        v40[1] = v7;
        swift_beginAccess();
        sub_21CA306B0((uint64_t)v40, 0);
        uint64_t result = swift_endAccess();
      }
    }
  }
  if (*(void *)(v1 + 16))
  {
    uint64_t result = sub_21CA5BCE0(0xD000000000000015, 0x800000021CB93BB0);
    if (v9)
    {
      sub_21CA4E524(*(void *)(v1 + 56) + 32 * result, (uint64_t)v40);
      uint64_t v10 = MEMORY[0x263F8D538];
      uint64_t result = swift_dynamicCast();
      if (result)
      {
        uint64_t v11 = v38;
        if (qword_267C949A8 != -1)
        {
          swift_once();
          uint64_t v11 = v38;
        }
        uint64_t v41 = v10;
        v40[0] = v11;
        swift_beginAccess();
        sub_21CA306B0((uint64_t)v40, 2);
        uint64_t result = swift_endAccess();
      }
    }
  }
  if (*(void *)(v1 + 16))
  {
    uint64_t result = sub_21CA5BCE0(0xD000000000000014, 0x800000021CB93BD0);
    if (v12)
    {
      sub_21CA4E524(*(void *)(v1 + 56) + 32 * result, (uint64_t)v40);
      uint64_t v13 = MEMORY[0x263F8D538];
      uint64_t result = swift_dynamicCast();
      if (result)
      {
        uint64_t v14 = v38;
        if (qword_267C949A8 != -1)
        {
          swift_once();
          uint64_t v14 = v38;
        }
        uint64_t v41 = v13;
        v40[0] = v14;
        swift_beginAccess();
        sub_21CA306B0((uint64_t)v40, 3);
        uint64_t result = swift_endAccess();
      }
    }
  }
  if (*(void *)(v1 + 16))
  {
    uint64_t result = sub_21CA5BCE0(0xD000000000000018, 0x800000021CB93C10);
    if (v15)
    {
      sub_21CA4E524(*(void *)(v1 + 56) + 32 * result, (uint64_t)v40);
      uint64_t v16 = MEMORY[0x263F8D538];
      uint64_t result = swift_dynamicCast();
      if (result)
      {
        uint64_t v17 = v38;
        if (qword_267C949A8 != -1)
        {
          swift_once();
          uint64_t v17 = v38;
        }
        uint64_t v41 = v16;
        v40[0] = v17;
        swift_beginAccess();
        sub_21CA306B0((uint64_t)v40, 5);
        uint64_t result = swift_endAccess();
      }
    }
  }
  if (*(void *)(v1 + 16))
  {
    uint64_t result = sub_21CA5BCE0(0xD000000000000020, 0x800000021CB93C30);
    if (v18)
    {
      sub_21CA4E524(*(void *)(v1 + 56) + 32 * result, (uint64_t)v40);
      uint64_t v19 = MEMORY[0x263F8D538];
      uint64_t result = swift_dynamicCast();
      if (result)
      {
        uint64_t v20 = v38;
        if (qword_267C949A8 != -1)
        {
          swift_once();
          uint64_t v20 = v38;
        }
        uint64_t v41 = v19;
        v40[0] = v20;
        swift_beginAccess();
        sub_21CA306B0((uint64_t)v40, 6);
        uint64_t result = swift_endAccess();
      }
    }
  }
  if (*(void *)(v1 + 16))
  {
    uint64_t result = sub_21CA5BCE0(0xD00000000000001DLL, 0x800000021CB93BF0);
    if (v21)
    {
      sub_21CA4E524(*(void *)(v1 + 56) + 32 * result, (uint64_t)v40);
      uint64_t v22 = MEMORY[0x263F8D538];
      uint64_t result = swift_dynamicCast();
      if (result)
      {
        uint64_t v23 = v38;
        if (qword_267C949A8 != -1)
        {
          swift_once();
          uint64_t v23 = v38;
        }
        uint64_t v41 = v22;
        v40[0] = v23;
        swift_beginAccess();
        sub_21CA306B0((uint64_t)v40, 4);
        uint64_t result = swift_endAccess();
      }
    }
  }
  if (*(void *)(v1 + 16))
  {
    uint64_t result = sub_21CA5BCE0(0xD00000000000001DLL, 0x800000021CB93C60);
    if (v24)
    {
      sub_21CA4E524(*(void *)(v1 + 56) + 32 * result, (uint64_t)v40);
      uint64_t v25 = MEMORY[0x263F8D538];
      uint64_t result = swift_dynamicCast();
      if (result)
      {
        uint64_t v26 = v38;
        if (qword_267C949A8 != -1)
        {
          swift_once();
          uint64_t v26 = v38;
        }
        uint64_t v41 = v25;
        v40[0] = v26;
        swift_beginAccess();
        sub_21CA306B0((uint64_t)v40, 7);
        uint64_t result = swift_endAccess();
      }
    }
  }
  if (*(void *)(v1 + 16))
  {
    uint64_t result = sub_21CA5BCE0(0xD00000000000001BLL, 0x800000021CB93C80);
    if (v27)
    {
      sub_21CA4E524(*(void *)(v1 + 56) + 32 * result, (uint64_t)v40);
      uint64_t v28 = MEMORY[0x263F8D538];
      uint64_t result = swift_dynamicCast();
      if (result)
      {
        uint64_t v29 = v38;
        if (qword_267C949B0 != -1)
        {
          swift_once();
          uint64_t v29 = v38;
        }
        uint64_t v41 = v28;
        v40[0] = v29;
        swift_beginAccess();
        sub_21CA306B0((uint64_t)v40, 8);
        uint64_t result = swift_endAccess();
      }
    }
  }
  if (*(void *)(v1 + 16))
  {
    uint64_t result = sub_21CA5BCE0(0xD00000000000001BLL, 0x800000021CB93CA0);
    if (v30)
    {
      sub_21CA4E524(*(void *)(v1 + 56) + 32 * result, (uint64_t)v40);
      uint64_t v31 = MEMORY[0x263F8D538];
      uint64_t result = swift_dynamicCast();
      if (result)
      {
        uint64_t v32 = v38;
        if (qword_267C949B0 != -1)
        {
          swift_once();
          uint64_t v32 = v38;
        }
        uint64_t v41 = v31;
        v40[0] = v32;
        swift_beginAccess();
        sub_21CA306B0((uint64_t)v40, 9);
        uint64_t result = swift_endAccess();
      }
    }
  }
  if (*(void *)(v1 + 16))
  {
    uint64_t result = sub_21CA5BCE0(0xD000000000000020, 0x800000021CB93CC0);
    if (v33)
    {
      sub_21CA4E524(*(void *)(v1 + 56) + 32 * result, (uint64_t)v40);
      uint64_t v34 = MEMORY[0x263F8D538];
      uint64_t result = swift_dynamicCast();
      if (result)
      {
        uint64_t v35 = v38;
        if (qword_267C949B0 != -1)
        {
          swift_once();
          uint64_t v35 = v38;
        }
        uint64_t v41 = v34;
        v40[0] = v35;
        swift_beginAccess();
        sub_21CA306B0((uint64_t)v40, 10);
        uint64_t result = swift_endAccess();
      }
    }
  }
  if (*(void *)(v1 + 16))
  {
    uint64_t result = sub_21CA5BCE0(0xD000000000000018, 0x800000021CB93D20);
    if (v36)
    {
      sub_21CA4E524(*(void *)(v1 + 56) + 32 * result, (uint64_t)v40);
      uint64_t v37 = MEMORY[0x263F8D6C8];
      uint64_t result = swift_dynamicCast();
      if (result)
      {
        if (qword_267C949B8 != -1) {
          swift_once();
        }
        uint64_t v41 = v37;
        v40[0] = v38;
        swift_beginAccess();
        sub_21CA306B0((uint64_t)v40, 12);
        return swift_endAccess();
      }
    }
  }
  return result;
}

uint64_t sub_21CA306B0(uint64_t a1, char a2)
{
  if (*(void *)(a1 + 24))
  {
    sub_21CA38B20((_OWORD *)a1, v7);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v6 = *v2;
    *char v2 = 0x8000000000000000;
    sub_21CA3491C(v7, a2, isUniquelyReferenced_nonNull_native);
    *char v2 = v6;
    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_21CA1B88C(a1, &qword_267C955B8);
    sub_21CB80C04(a2, v7);
    return sub_21CA1B88C((uint64_t)v7, &qword_267C955B8);
  }
}

void sub_21CA30760()
{
  sub_21CA30770(*(void *)(v0 + 24), *(uint64_t **)(v0 + 32), *(uint8_t **)(v0 + 40), *(void **)(v0 + 48), *(void *)(v0 + 16));
}

void sub_21CA30770(uint64_t a1, uint64_t *a2, uint8_t *a3, void *a4, uint64_t a5)
{
  uint64_t v73 = a5;
  uint64_t v74 = a3;
  id v76 = a4;
  uint64_t v7 = sub_21CB87590();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v72 = (char *)v67 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_267C94990 != -1) {
    swift_once();
  }
  uint64_t v10 = sub_21CB880A0();
  uint64_t v11 = sub_21CA4CC18(v10, (uint64_t)qword_267CA5368);
  swift_retain_n();
  uint64_t v75 = v11;
  char v12 = sub_21CB88070();
  os_log_type_t v13 = sub_21CB88880();
  int v14 = v13;
  char v15 = sub_21CB89000;
  uint64_t v16 = &qword_267C97000;
  if (os_log_type_enabled(v12, v13))
  {
    int v70 = v14;
    uint64_t v17 = (uint8_t *)swift_slowAlloc();
    uint64_t v18 = swift_slowAlloc();
    uint64_t v69 = v18;
    *(_DWORD *)uint64_t v17 = 136315138;
    v78[0] = v18;
    v67[1] = v17 + 4;
    uint64_t v68 = v17;
    uint64_t v19 = a1 + qword_267C97448;
    uint64_t v20 = a1;
    uint64_t v21 = *(void *)(a1 + qword_267C97448);
    unint64_t v22 = *(void *)(v19 + 8);
    swift_bridgeObjectRetain();
    unint64_t v23 = sub_21CA30E24(0xCuLL, v21, v22);
    uint64_t v71 = v8;
    uint64_t v24 = v7;
    uint64_t v26 = v25;
    uint64_t v28 = v27;
    uint64_t v30 = v29;
    char v15 = sub_21CB89000;
    swift_bridgeObjectRelease();
    unint64_t v31 = v23;
    a1 = v20;
    uint64_t v32 = MEMORY[0x21D4B5450](v31, v26, v28, v30);
    unint64_t v34 = v33;
    swift_bridgeObjectRelease();
    uint64_t v35 = v32;
    uint64_t v7 = v24;
    uint64_t v8 = v71;
    v77[0] = sub_21CA4E450(v35, v34, v78);
    sub_21CB889C0();
    swift_release_n();
    uint64_t v16 = &qword_267C97000;
    swift_bridgeObjectRelease();
    char v36 = v68;
    _os_log_impl(&dword_21CA00000, v12, (os_log_type_t)v70, "FMFServerInteractionController<%s>: sending request…", v68, 0xCu);
    uint64_t v37 = v69;
    swift_arrayDestroy();
    MEMORY[0x21D4B6B70](v37, -1, -1);
    MEMORY[0x21D4B6B70](v36, -1, -1);
  }
  else
  {

    swift_release_n();
  }
  id v38 = objc_allocWithZone(MEMORY[0x263F3BA18]);
  uint64_t v39 = (void *)sub_21CB882C0();
  id v40 = objc_msgSend(v38, sel_initWithDescription_andTimeout_, v39, 120.0);

  uint64_t v41 = *a2;
  if (type metadata accessor for FMFInitRefreshClientRequest() != v41)
  {
    uint64_t v42 = v72;
    sub_21CB87580();
    uint64_t v43 = a1 + qword_267CA5398;
    swift_beginAccess();
    (*(void (**)(uint64_t, char *, uint64_t))(v8 + 40))(v43, v42, v7);
    swift_endAccess();
  }
  sub_21CA30F78((uint64_t)a2);
  uint64_t v79 = type metadata accessor for FMFBaseRequest();
  uint64_t v80 = MEMORY[0x263F3BA90];
  v78[0] = (uint64_t)a2;
  v77[3] = v79;
  v77[4] = sub_21CA36588(&qword_267C974A8, (void (*)(uint64_t))type metadata accessor for FMFBaseRequest);
  v77[0] = a2;
  uint64_t v44 = self;
  swift_retain_n();
  id v45 = objc_msgSend(v44, sel_processInfo);
  id v46 = objc_msgSend(v45, sel_processName);

  sub_21CB882F0();
  uint64_t v47 = (void *)swift_allocObject();
  v47[2] = v73;
  v47[3] = a1;
  long long v48 = v74;
  v47[4] = a2;
  v47[5] = v48;
  v47[6] = v76;
  v47[7] = v40;
  swift_retain();
  swift_retain();
  swift_retain();
  id v49 = v40;
  sub_21CB87780();
  swift_bridgeObjectRelease();
  swift_release();
  sub_21CA2B0D0((uint64_t)v77);
  sub_21CA2B0D0((uint64_t)v78);
  objc_msgSend(v49, sel_wait);
  swift_retain_n();
  int v50 = sub_21CB88070();
  os_log_type_t v51 = sub_21CB88880();
  if (os_log_type_enabled(v50, v51))
  {
    uint64_t v52 = (uint8_t *)swift_slowAlloc();
    uint64_t v53 = swift_slowAlloc();
    *(_DWORD *)uint64_t v52 = *((void *)v15 + 460);
    v78[0] = v53;
    uint64_t v74 = v52 + 4;
    uint64_t v75 = a1;
    uint64_t v54 = (uint64_t *)(a1 + v16[137]);
    uint64_t v55 = *v54;
    unint64_t v56 = v54[1];
    swift_bridgeObjectRetain();
    unint64_t v57 = sub_21CA30E24(0xCuLL, v55, v56);
    id v76 = v49;
    uint64_t v59 = v58;
    uint64_t v61 = v60;
    uint64_t v63 = v62;
    swift_bridgeObjectRelease();
    uint64_t v64 = MEMORY[0x21D4B5450](v57, v59, v61, v63);
    unint64_t v66 = v65;
    swift_bridgeObjectRelease();
    v77[0] = sub_21CA4E450(v64, v66, v78);
    sub_21CB889C0();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_21CA00000, v50, v51, "FMFServerInteractionController<%s>: request sent and done", v52, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x21D4B6B70](v53, -1, -1);
    MEMORY[0x21D4B6B70](v52, -1, -1);
  }
  else
  {

    swift_release_n();
  }
}

unint64_t sub_21CA30E24(unint64_t result, uint64_t a2, unint64_t a3)
{
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_12:
    __break(1u);
    return result;
  }
  if ((a3 & 0x2000000000000000) != 0) {
    uint64_t v3 = HIBYTE(a3) & 0xF;
  }
  else {
    uint64_t v3 = a2 & 0xFFFFFFFFFFFFLL;
  }
  uint64_t result = sub_21CB883B0();
  if (v4) {
    uint64_t result = 15;
  }
  if (4 * v3 < result >> 14) {
    goto LABEL_12;
  }

  return sub_21CB88490();
}

uint64_t type metadata accessor for FMFInitRefreshClientRequest()
{
  uint64_t result = qword_267C97A60;
  if (!qword_267C97A60) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t type metadata accessor for FMFBaseRequest()
{
  uint64_t result = qword_267C95B10;
  if (!qword_267C95B10) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_21CA30F78(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_21CB87590();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = &v20[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = sub_21CA57E34(&qword_267C95400);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = &v20[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = sub_21CB87630();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  int v14 = &v20[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v15 = *(void *)(v2 + qword_267CA53B0);
  if (v15)
  {
    *(void *)(a1 + qword_267C95B00) = v15;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v16 = *(void *)(v2 + qword_267CA53B8);
    if (v16)
    {
      *(void *)(a1 + qword_267C95B08) = v16;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
  }
  sub_21CA24E80(v2 + qword_267C97468, (uint64_t)v10, &qword_267C95400);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_21CA1B88C((uint64_t)v10, &qword_267C95400);
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v12 + 32))(v14, v10, v11);
    sub_21CA33CF4((uint64_t)v14, 1);
    (*(void (**)(unsigned char *, uint64_t))(v12 + 8))(v14, v11);
  }
  uint64_t v17 = v2 + qword_267CA5398;
  swift_beginAccess();
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v5 + 16))(v7, v17, v4);
  uint64_t v18 = a1 + qword_267CA51F8;
  swift_beginAccess();
  (*(void (**)(uint64_t, unsigned char *, uint64_t))(v5 + 24))(v18, v7, v4);
  swift_endAccess();
  sub_21CA340B4();
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
}

void sub_21CA312A0()
{
  sub_21CA312A8(*(void *)(v0 + 16), *(char **)(v0 + 24));
}

void sub_21CA312A8(uint64_t a1, char *a2)
{
  if (qword_267C94990 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_21CB880A0();
  uint64_t v91 = sub_21CA4CC18(v4, (uint64_t)qword_267CA5368);
  uint64_t v5 = sub_21CB88070();
  os_log_type_t v6 = sub_21CB88880();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v7 = 0;
    _os_log_impl(&dword_21CA00000, v5, v6, "FMFGenericResponseHandler: handleInitRefreshResponse", v7, 2u);
    MEMORY[0x21D4B6B70](v7, -1, -1);
  }

  uint64_t v8 = (uint64_t *)(a1 + OBJC_IVAR____TtC7FMFCore28FMFInitRefreshClientResponse_preferences);
  uint64_t v9 = *(void *)(a1 + OBJC_IVAR____TtC7FMFCore28FMFInitRefreshClientResponse_preferences + 16);
  if (v9)
  {
    uint64_t v10 = *v8;
    uint64_t v11 = v8[1];
    uint64_t v12 = v8[3];
    *(void *)&long long v115 = v10;
    *((void *)&v115 + 1) = v11;
    *(void *)&long long v116 = v9;
    *((void *)&v116 + 1) = v12;
    sub_21CA1F33C(v10, v11, v9);
    sub_21CA1F33C(v10, v11, v9);
    swift_retain();
    sub_21CA0AF68(&v115);
    swift_release();
    uint64_t v13 = &a2[OBJC_IVAR____TtC7FMFCore25FMFGenericResponseHandler_delegate];
    swift_beginAccess();
    if (MEMORY[0x21D4B6C80](v13))
    {
      uint64_t v14 = *((void *)v13 + 1);
      uint64_t ObjectType = swift_getObjectType();
      *(void *)&long long v115 = v10 & 0xFF010101;
      *((void *)&v115 + 1) = v11;
      *(void *)&long long v116 = v9;
      *((void *)&v116 + 1) = v12;
      (*(void (**)(long long *, uint64_t, uint64_t))(v14 + 8))(&v115, ObjectType, v14);
      swift_unknownObjectRelease();
    }
    sub_21CA59D84(v10, v11, v9);
  }
  sub_21CA26A4C(a1 + OBJC_IVAR____TtC7FMFCore28FMFInitRefreshClientResponse_config, (uint64_t)v114, (uint64_t *)&unk_267C96EE0);
  sub_21CA26A4C((uint64_t)v114, (uint64_t)&v115, (uint64_t *)&unk_267C96EE0);
  uint64_t v16 = sub_21CA6E2D4((uint64_t)&v115);
  if (v16 != 1)
  {
    sub_21CA26A4C((uint64_t)v114, (uint64_t)&v98, (uint64_t *)&unk_267C96EE0);
    swift_retain();
    sub_21CA157F0((uint64_t)&v98);
    swift_release();
    uint64_t v17 = &a2[OBJC_IVAR____TtC7FMFCore25FMFGenericResponseHandler_delegate];
    swift_beginAccess();
    uint64_t v16 = MEMORY[0x21D4B6C80](v17);
    if (v16)
    {
      uint64_t v18 = *((void *)v17 + 1);
      uint64_t v19 = swift_getObjectType();
      long long v110 = v127;
      long long v111 = v128;
      long long v112 = v129;
      long long v106 = v123;
      long long v107 = v124;
      long long v108 = v125;
      long long v109 = v126;
      long long v102 = v119;
      long long v103 = v120;
      long long v104 = v121;
      long long v105 = v122;
      long long v98 = v115;
      long long v99 = v116;
      long long v100 = v117;
      long long v101 = v118;
      nullsub_1(&v98, *(double *)&v118);
      sub_21CA26A4C((uint64_t)&v98, (uint64_t)v97, (uint64_t *)&unk_267C96EE0);
      (*(void (**)(_DWORD *, uint64_t, uint64_t))(v18 + 32))(v97, v19, v18);
      uint64_t v16 = swift_unknownObjectRelease();
    }
  }
  if ((*(unsigned char *)(a1 + OBJC_IVAR____TtC7FMFCore28FMFInitRefreshClientResponse_features + 8) & 1) == 0)
  {
    uint64_t v20 = *(void *)(a1 + OBJC_IVAR____TtC7FMFCore28FMFInitRefreshClientResponse_features);
    *(void *)&long long v98 = v20;
    BYTE8(v98) = 0;
    swift_retain();
    sub_21CA13C10((uint64_t *)&v98);
    swift_release();
    uint64_t v21 = &a2[OBJC_IVAR____TtC7FMFCore25FMFGenericResponseHandler_delegate];
    swift_beginAccess();
    uint64_t v16 = MEMORY[0x21D4B6C80](v21);
    if (v16)
    {
      uint64_t v22 = *((void *)v21 + 1);
      uint64_t v23 = swift_getObjectType();
      *(void *)&long long v98 = v20;
      BYTE8(v98) = 0;
      (*(void (**)(long long *, uint64_t, uint64_t))(v22 + 16))(&v98, v23, v22);
      uint64_t v16 = swift_unknownObjectRelease();
    }
  }
  uint64_t v95 = a1;
  uint64_t v96 = a2;
  uint64_t v24 = a1 + OBJC_IVAR____TtC7FMFCore28FMFInitRefreshClientResponse_myInfo;
  uint64_t v25 = *(void *)v24;
  if (*(void *)v24)
  {
    uint64_t v26 = *(void *)(v24 + 8);
    uint64_t v27 = *(void *)(v24 + 16);
    uint64_t v28 = *(void *)(v24 + 24);
    uint64_t v29 = *(void *)(v24 + 32);
    uint64_t v31 = *(void *)(v24 + 40);
    uint64_t v30 = *(void *)(v24 + 48);
    char v32 = *(unsigned char *)(v24 + 56);
    *(void *)&long long v98 = *(void *)v24;
    *((void *)&v98 + 1) = v26;
    *(void *)&long long v99 = v27;
    *((void *)&v99 + 1) = v28;
    *(void *)&long long v100 = v29;
    *((void *)&v100 + 1) = v31;
    *(void *)&long long v101 = v30;
    BYTE8(v101) = v32;
    sub_21CA2D5F4(v25);
    char v93 = v32;
    sub_21CA2D5F4(v25);
    swift_retain();
    sub_21CA0B7D8((uint64_t)&v98);
    swift_release();
    unint64_t v33 = &v96[OBJC_IVAR____TtC7FMFCore25FMFGenericResponseHandler_delegate];
    swift_beginAccess();
    if (MEMORY[0x21D4B6C80](v33))
    {
      uint64_t v34 = *((void *)v33 + 1);
      uint64_t v35 = swift_getObjectType();
      *(void *)&long long v98 = v25;
      *((void *)&v98 + 1) = v26;
      *(void *)&long long v99 = v27;
      *((void *)&v99 + 1) = v28;
      *(void *)&long long v100 = v29;
      *((void *)&v100 + 1) = v31;
      *(void *)&long long v101 = v30;
      BYTE8(v101) = v93 & 1;
      (*(void (**)(long long *, uint64_t, uint64_t))(v34 + 24))(&v98, v35, v34);
      swift_unknownObjectRelease();
    }
    uint64_t v16 = sub_21CA2D658(v25);
    a2 = v96;
  }
  uint64_t v36 = *(void *)(v95 + OBJC_IVAR____TtC7FMFCore28FMFInitRefreshClientResponse_devices);
  if (v36)
  {
    swift_retain();
    uint64_t v37 = swift_bridgeObjectRetain();
    sub_21CA65860(v37);
    swift_release();
    id v38 = &a2[OBJC_IVAR____TtC7FMFCore25FMFGenericResponseHandler_delegate];
    swift_beginAccess();
    uint64_t v16 = MEMORY[0x21D4B6C80](v38);
    if (v16)
    {
      uint64_t v39 = *((void *)v38 + 1);
      uint64_t v40 = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v39 + 40))(v36, 1, v40, v39);
      uint64_t v16 = swift_unknownObjectRelease();
    }
  }
  uint64_t v41 = *(void *)(v95 + OBJC_IVAR____TtC7FMFCore28FMFInitRefreshClientResponse_labels);
  if (v41)
  {
    swift_retain();
    uint64_t v42 = swift_bridgeObjectRetain();
    sub_21CA658D4(v42);
    swift_release();
    uint64_t v43 = &a2[OBJC_IVAR____TtC7FMFCore25FMFGenericResponseHandler_delegate];
    swift_beginAccess();
    uint64_t v16 = MEMORY[0x21D4B6C80](v43);
    if (v16)
    {
      uint64_t v44 = *((void *)v43 + 1);
      uint64_t v45 = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v44 + 48))(v41, v45, v44);
      uint64_t v16 = swift_unknownObjectRelease();
    }
  }
  uint64_t v46 = *(void *)(v95 + OBJC_IVAR____TtC7FMFCore28FMFInitRefreshClientResponse_labelledLocations);
  if (v46)
  {
    swift_retain();
    uint64_t v47 = swift_bridgeObjectRetain();
    sub_21CA65914(v47);
    swift_release();
    long long v48 = &a2[OBJC_IVAR____TtC7FMFCore25FMFGenericResponseHandler_delegate];
    swift_beginAccess();
    uint64_t v16 = MEMORY[0x21D4B6C80](v48);
    if (v16)
    {
      uint64_t v49 = *((void *)v48 + 1);
      uint64_t v50 = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v49 + 80))(v46, v50, v49);
      uint64_t v16 = swift_unknownObjectRelease();
    }
  }
  if (*(void *)(v95 + OBJC_IVAR____TtC7FMFCore28FMFInitRefreshClientResponse_following))
  {
    MEMORY[0x270FA5388](v16);
    swift_retain();
    sub_21CB88910();
    uint64_t v16 = swift_release();
    char v51 = v98;
  }
  else
  {
    char v51 = 0;
  }
  if (*(void *)(v95 + OBJC_IVAR____TtC7FMFCore28FMFInitRefreshClientResponse_followers))
  {
    MEMORY[0x270FA5388](v16);
    swift_retain();
    sub_21CB88910();
    uint64_t v16 = swift_release();
    v51 |= v98;
  }
  if (*(void *)(v95 + OBJC_IVAR____TtC7FMFCore28FMFInitRefreshClientResponse_pendingOffers))
  {
    MEMORY[0x270FA5388](v16);
    swift_retain();
    sub_21CB88910();
    uint64_t v16 = swift_release();
    v51 |= v98;
  }
  if (*(void *)(v95 + OBJC_IVAR____TtC7FMFCore28FMFInitRefreshClientResponse_futureFollowing))
  {
    MEMORY[0x270FA5388](v16);
    swift_retain();
    sub_21CB88910();
    uint64_t v16 = swift_release();
    v51 |= v98;
  }
  if (*(void *)(v95 + OBJC_IVAR____TtC7FMFCore28FMFInitRefreshClientResponse_futureFollowers))
  {
    MEMORY[0x270FA5388](v16);
    swift_retain();
    sub_21CB88910();
    swift_release();
    v51 |= v98;
  }
  uint64_t v52 = sub_21CB87190();
  *((void *)&v99 + 1) = v52;
  *(void *)&long long v100 = sub_21CB068B4((unint64_t *)&qword_267C94E20, MEMORY[0x263F3CA38]);
  uint64_t v53 = sub_21CA6D80C((uint64_t *)&v98);
  (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v52 - 8) + 104))(v53, *MEMORY[0x263F3CA28], v52);
  LOBYTE(v52) = MEMORY[0x21D4B4280](&v98);
  sub_21CA2B0D0((uint64_t)&v98);
  if ((v52 & 1) == 0)
  {
    uint64_t v54 = OBJC_IVAR____TtC7FMFCore25FMFGenericResponseHandler_locationAlertsOnMeByMe;
    uint64_t v55 = *(void *)&a2[OBJC_IVAR____TtC7FMFCore25FMFGenericResponseHandler_locationAlertsOnMeByMe];
    uint64_t v56 = *(void *)(v95 + OBJC_IVAR____TtC7FMFCore28FMFInitRefreshClientResponse_locationAlertsOnMeByMe);
    if (!v56)
    {
      swift_bridgeObjectRetain();
      uint64_t v56 = v55;
    }
    *(void *)&a2[v54] = v56;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v57 = OBJC_IVAR____TtC7FMFCore25FMFGenericResponseHandler_locationAlertsOnMeByFriends;
    uint64_t v58 = *(void *)&a2[OBJC_IVAR____TtC7FMFCore25FMFGenericResponseHandler_locationAlertsOnMeByFriends];
    uint64_t v59 = *(void *)(v95 + OBJC_IVAR____TtC7FMFCore28FMFInitRefreshClientResponse_locationAlertsOnMeByFriends);
    if (!v59)
    {
      swift_bridgeObjectRetain();
      uint64_t v59 = v58;
    }
    *(void *)&a2[v57] = v59;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v60 = OBJC_IVAR____TtC7FMFCore25FMFGenericResponseHandler_locationAlertsOnFriendsByMe;
    uint64_t v61 = *(void *)&a2[OBJC_IVAR____TtC7FMFCore25FMFGenericResponseHandler_locationAlertsOnFriendsByMe];
    uint64_t v62 = *(void *)(v95 + OBJC_IVAR____TtC7FMFCore28FMFInitRefreshClientResponse_locationAlertsOnFriendsByMe);
    if (!v62)
    {
      swift_bridgeObjectRetain();
      uint64_t v62 = v61;
    }
    *(void *)&a2[v60] = v62;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v63 = OBJC_IVAR____TtC7FMFCore25FMFGenericResponseHandler_locationAlertsOnFriendsByFriends;
    uint64_t v64 = *(void *)&a2[OBJC_IVAR____TtC7FMFCore25FMFGenericResponseHandler_locationAlertsOnFriendsByFriends];
    uint64_t v65 = *(void *)(v95 + OBJC_IVAR____TtC7FMFCore28FMFInitRefreshClientResponse_locationAlertsOnFriendsByFriends);
    if (!v65)
    {
      swift_bridgeObjectRetain();
      uint64_t v65 = v64;
    }
    *(void *)&a2[v63] = v65;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    sub_21CA32354();
  }
  char v94 = v51;
  uint64_t v66 = swift_allocObject();
  *(unsigned char *)(v66 + 16) = 0;
  swift_retain();
  uint64_t v92 = sub_21CA57E34(&qword_267C95D50);
  sub_21CB88910();
  swift_release();
  uint64_t v67 = v98;
  if (*(void *)(v95 + OBJC_IVAR____TtC7FMFCore28FMFInitRefreshClientResponse_locations))
  {
    swift_bridgeObjectRetain();
    uint64_t v68 = a2;
    uint64_t v69 = swift_bridgeObjectRetain();
    uint64_t v70 = sub_21CA3CF40(v69, v67, (uint64_t)v68);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    id v71 = objc_allocWithZone(MEMORY[0x263F3BA18]);
    uint64_t v72 = (void *)sub_21CB882C0();
    id v73 = objc_msgSend(v71, sel_initWithDescription_andTimeout_, v72, 60.0, v91, v92);

    uint64_t v74 = (void *)swift_allocObject();
    v74[2] = v68;
    v74[3] = v66;
    v74[4] = v73;
    uint64_t v75 = v68;
    swift_retain();
    id v76 = v73;
    sub_21CA2B814(v70, (uint64_t)sub_21CA2CFD4, (uint64_t)v74);
    swift_release();
    swift_bridgeObjectRelease();
    objc_msgSend(v76, sel_wait);
  }
  if (*(void *)(v95 + OBJC_IVAR____TtC7FMFCore28FMFInitRefreshClientResponse_locatesInProgress))
  {
    uint64_t v77 = v96;
    uint64_t v78 = v96;
    uint64_t v79 = swift_bridgeObjectRetain();
    uint64_t v80 = sub_21CA3C600(v79, v67, (uint64_t)v78);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    if (v80)
    {
      MEMORY[0x270FA5388](v81);
      swift_retain();
      swift_bridgeObjectRetain();
      sub_21CB88910();
      swift_release();
      swift_bridgeObjectRelease_n();
      uint64_t v82 = &unk_267C96000;
      char v83 = v94;
      if (v94)
      {
        uint64_t v77 = v96;
        goto LABEL_62;
      }
      char v84 = v98;
      uint64_t v77 = v96;
      goto LABEL_59;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v77 = v96;
  }
  uint64_t v82 = (void *)&unk_267C96000;
  char v83 = v94;
  if (v94)
  {
LABEL_62:
    uint64_t v85 = &v77[v82[436]];
    swift_beginAccess();
    if (MEMORY[0x21D4B6C80](v85))
    {
      uint64_t v86 = *((void *)v85 + 1);
      uint64_t v87 = swift_getObjectType();
      swift_retain();
      sub_21CB88910();
      swift_release();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v86 + 56))(v113, 1, v87, v86);
      swift_release();
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
    }
    else
    {
      swift_release();
    }
    return;
  }
  char v84 = 0;
LABEL_59:
  swift_beginAccess();
  if ((*(unsigned char *)(v66 + 16) & 1) != 0
    || (v84 & 1) != 0
    || v77[OBJC_IVAR____TtC7FMFCore25FMFGenericResponseHandler_isSnapshotMode] == 1)
  {
    goto LABEL_62;
  }
  swift_retain();
  uint64_t v88 = sub_21CB88070();
  os_log_type_t v89 = sub_21CB88880();
  if (os_log_type_enabled(v88, v89))
  {
    uint64_t v90 = swift_slowAlloc();
    *(_DWORD *)uint64_t v90 = 67240448;
    v97[0] = v83 & 1;
    sub_21CB889C0();
    *(_WORD *)(v90 + 8) = 1026;
    v97[0] = *(unsigned __int8 *)(v66 + 16);
    sub_21CB889C0();
    swift_release();
    _os_log_impl(&dword_21CA00000, v88, v89, "FMFGenericResponseHandler: Skipping update due to no changes detected:\nfriendsUpdated: %{BOOL,public}d locationsUpdated: %{BOOL,public}d", (uint8_t *)v90, 0xEu);
    MEMORY[0x21D4B6B70](v90, -1, -1);
    swift_release();
  }
  else
  {

    swift_release_n();
  }
}

uint64_t sub_21CA32354()
{
  uint64_t v1 = v0;
  uint64_t v2 = 0;
  uint64_t v3 = *(void *)&v0[OBJC_IVAR____TtC7FMFCore25FMFGenericResponseHandler_locationAlertsOnMeByMe];
  uint64_t v4 = sub_21CB87190();
  uint64_t v46 = v4;
  uint64_t v5 = sub_21CB068B4((unint64_t *)&qword_267C94E20, MEMORY[0x263F3CA38]);
  uint64_t v47 = v5;
  os_log_type_t v6 = sub_21CA6D80C(v45);
  uint64_t v7 = *MEMORY[0x263F3CA28];
  uint64_t v8 = *(void *)(v4 - 8);
  uint64_t v9 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v8 + 104);
  uint64_t v10 = v8 + 104;
  v9(v6, v7, v4);
  swift_bridgeObjectRetain();
  char v11 = MEMORY[0x21D4B4280](v45);
  sub_21CA2B0D0((uint64_t)v45);
  if (v11)
  {
    uint64_t v46 = v4;
    uint64_t v47 = v5;
    uint64_t v12 = sub_21CA6D80C(v45);
    v9(v12, v7, v4);
    char v13 = MEMORY[0x21D4B4280](v45);
    uint64_t v14 = sub_21CA2B0D0((uint64_t)v45);
    if (v13)
    {
      if (v3)
      {
        uint64_t v42 = v10;
        *(void *)uint64_t v43 = v9;
LABEL_7:
        MEMORY[0x270FA5388](v14);
        swift_retain();
        sub_21CB88910();
        swift_release();
        swift_bridgeObjectRelease();
        unsigned int v16 = LOBYTE(v45[0]);
        uint64_t v9 = *(void (**)(uint64_t *, uint64_t, uint64_t))v43;
        goto LABEL_10;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  else if (v3)
  {
    uint64_t v42 = v10;
    *(void *)uint64_t v43 = v9;
    uint64_t v15 = v1;
    sub_21CA32AA0(v3, v15);
    swift_bridgeObjectRelease();

    goto LABEL_7;
  }
  unsigned int v16 = 0;
LABEL_10:
  uint64_t v17 = *(void *)&v1[OBJC_IVAR____TtC7FMFCore25FMFGenericResponseHandler_locationAlertsOnMeByFriends];
  uint64_t v46 = v4;
  uint64_t v47 = v5;
  uint64_t v18 = sub_21CA6D80C(v45);
  v9(v18, v7, v4);
  swift_bridgeObjectRetain();
  char v19 = MEMORY[0x21D4B4280](v45);
  sub_21CA2B0D0((uint64_t)v45);
  if ((v19 & 1) == 0)
  {
    if (!v17) {
      goto LABEL_18;
    }
    v43[0] = v16;
    uint64_t v23 = v1;
    sub_21CA32AA0(v17, v23);
    swift_bridgeObjectRelease();

    goto LABEL_16;
  }
  uint64_t v46 = v4;
  uint64_t v47 = v5;
  uint64_t v20 = sub_21CA6D80C(v45);
  v9(v20, v7, v4);
  char v21 = MEMORY[0x21D4B4280](v45);
  uint64_t v22 = sub_21CA2B0D0((uint64_t)v45);
  if (v21)
  {
    v43[0] = v16;
    if (!v17)
    {
      unsigned int v16 = v43[0];
      goto LABEL_18;
    }
LABEL_16:
    uint64_t v41 = (uint64_t)&v41;
    uint64_t v42 = 0;
    MEMORY[0x270FA5388](v22);
    swift_retain();
    uint64_t v2 = v42;
    sub_21CB88910();
    swift_release();
    swift_bridgeObjectRelease();
    unsigned int v16 = LOBYTE(v45[0]) | v43[0];
    goto LABEL_18;
  }
  swift_bridgeObjectRelease();
LABEL_18:
  uint64_t v24 = *(void *)&v1[OBJC_IVAR____TtC7FMFCore25FMFGenericResponseHandler_locationAlertsOnFriendsByMe];
  uint64_t v46 = v4;
  uint64_t v47 = v5;
  uint64_t v25 = sub_21CA6D80C(v45);
  v9(v25, v7, v4);
  swift_bridgeObjectRetain();
  char v26 = MEMORY[0x21D4B4280](v45);
  sub_21CA2B0D0((uint64_t)v45);
  if ((v26 & 1) == 0)
  {
    if (!v24) {
      goto LABEL_26;
    }
    v43[0] = v16;
    uint64_t v30 = v1;
    sub_21CA32AA0(v24, v30);
    swift_bridgeObjectRelease();

    goto LABEL_24;
  }
  uint64_t v46 = v4;
  uint64_t v47 = v5;
  uint64_t v27 = sub_21CA6D80C(v45);
  v9(v27, v7, v4);
  char v28 = MEMORY[0x21D4B4280](v45);
  uint64_t v29 = sub_21CA2B0D0((uint64_t)v45);
  if (v28)
  {
    v43[0] = v16;
    if (!v24)
    {
      unsigned int v16 = v43[0];
      goto LABEL_26;
    }
LABEL_24:
    uint64_t v41 = (uint64_t)&v41;
    uint64_t v42 = v2;
    MEMORY[0x270FA5388](v29);
    swift_retain();
    sub_21CB88910();
    swift_release();
    swift_bridgeObjectRelease();
    unsigned int v16 = LOBYTE(v45[0]) | v43[0];
    goto LABEL_26;
  }
  swift_bridgeObjectRelease();
LABEL_26:
  uint64_t v31 = *(void *)&v1[OBJC_IVAR____TtC7FMFCore25FMFGenericResponseHandler_locationAlertsOnFriendsByFriends];
  uint64_t v46 = v4;
  uint64_t v47 = v5;
  char v32 = sub_21CA6D80C(v45);
  v9(v32, v7, v4);
  swift_bridgeObjectRetain();
  char v33 = MEMORY[0x21D4B4280](v45);
  uint64_t result = sub_21CA2B0D0((uint64_t)v45);
  if ((v33 & 1) == 0)
  {
    if (!v31) {
      goto LABEL_34;
    }
    uint64_t v37 = v1;
    sub_21CA32AA0(v31, v37);
    swift_bridgeObjectRelease();

LABEL_32:
    MEMORY[0x270FA5388](result);
    swift_retain();
    sub_21CB88910();
    swift_release();
    uint64_t result = swift_bridgeObjectRelease();
    if (((LOBYTE(v45[0]) | v16) & 1) == 0) {
      return result;
    }
    goto LABEL_37;
  }
  uint64_t v46 = v4;
  uint64_t v47 = v5;
  uint64_t v35 = sub_21CA6D80C(v45);
  v9(v35, v7, v4);
  char v36 = MEMORY[0x21D4B4280](v45);
  uint64_t result = sub_21CA2B0D0((uint64_t)v45);
  if (v36)
  {
    if (!v31)
    {
LABEL_34:
      if ((v16 & 1) == 0) {
        return result;
      }
      goto LABEL_37;
    }
    goto LABEL_32;
  }
  uint64_t result = swift_bridgeObjectRelease();
  if ((v16 & 1) == 0) {
    return result;
  }
LABEL_37:
  id v38 = &v1[OBJC_IVAR____TtC7FMFCore25FMFGenericResponseHandler_delegate];
  swift_beginAccess();
  uint64_t result = MEMORY[0x21D4B6C80](v38);
  if (result)
  {
    uint64_t v39 = *((void *)v38 + 1);
    uint64_t ObjectType = swift_getObjectType();
    swift_retain();
    sub_21CA57E34(&qword_267C94F08);
    sub_21CB88910();
    swift_release();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v39 + 64))(v44, ObjectType, v39);
    swift_bridgeObjectRelease();
    return swift_unknownObjectRelease();
  }
  return result;
}

unint64_t sub_21CA32AA0(uint64_t a1, void *a2)
{
  uint64_t v5 = sub_21CA57E34((uint64_t *)&unk_267C96EC0);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = type metadata accessor for FMFLocationAlert();
  uint64_t v8 = MEMORY[0x270FA5388](v27);
  uint64_t v26 = (uint64_t)v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v25 = (uint64_t)v22 - v11;
  uint64_t v12 = *(void *)(a1 + 16);
  if (!v12) {
    return MEMORY[0x263F8EE78];
  }
  unint64_t v13 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v22[1] = a1;
  unint64_t v23 = v13;
  uint64_t v14 = a1 + v13;
  uint64_t v15 = *(void *)(v10 + 72);
  unsigned int v16 = (unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  swift_bridgeObjectRetain();
  unint64_t v17 = MEMORY[0x263F8EE78];
  uint64_t v24 = a2;
  do
  {
    sub_21CB05F5C(v14, a2, (uint64_t)v7);
    if (v2)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v17;
    }
    if ((*v16)(v7, 1, v27) == 1)
    {
      sub_21CA1B88C((uint64_t)v7, (uint64_t *)&unk_267C96EC0);
    }
    else
    {
      uint64_t v18 = v25;
      sub_21CA3DFAC((uint64_t)v7, v25, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
      sub_21CA3DFAC(v18, v26, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v17 = sub_21CAC8160(0, *(void *)(v17 + 16) + 1, 1, v17);
      }
      unint64_t v20 = *(void *)(v17 + 16);
      unint64_t v19 = *(void *)(v17 + 24);
      if (v20 >= v19 >> 1) {
        unint64_t v17 = sub_21CAC8160(v19 > 1, v20 + 1, 1, v17);
      }
      *(void *)(v17 + 16) = v20 + 1;
      sub_21CA3DFAC(v26, v17 + v23 + v20 * v15, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
      a2 = v24;
    }
    v14 += v15;
    --v12;
  }
  while (v12);
  swift_bridgeObjectRelease();
  return v17;
}

uint64_t sub_21CA32D68(void *a1)
{
  return sub_21CA32D70(a1, *(void **)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_21CA32D70(void *a1, void *a2, void *a3)
{
  uint64_t v6 = sub_21CB88100();
  uint64_t v20 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_21CB88150();
  uint64_t v9 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  uint64_t v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21CA05908(0, (unint64_t *)&qword_267C96F80);
  uint64_t v12 = (void *)sub_21CB88900();
  unint64_t v13 = (void *)swift_allocObject();
  _OWORD v13[2] = a2;
  v13[3] = a1;
  v13[4] = a3;
  aBlock[4] = sub_21CA1B0C8;
  void aBlock[5] = v13;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  uint64_t aBlock[2] = sub_21CA1B084;
  uint64_t aBlock[3] = &unk_26CD6F9F0;
  uint64_t v14 = _Block_copy(aBlock);
  id v15 = a1;
  id v16 = a3;
  id v17 = a2;
  swift_release();
  sub_21CB88120();
  aBlock[0] = MEMORY[0x263F8EE78];
  sub_21CA364B0((unint64_t *)&qword_267C96FC0, MEMORY[0x263F8F030]);
  sub_21CA57E34((uint64_t *)&unk_267C96DD0);
  sub_21CA3566C((unint64_t *)&qword_267C96FD0, (uint64_t *)&unk_267C96DD0);
  sub_21CB88A60();
  MEMORY[0x21D4B5A20](0, v11, v8, v14);
  _Block_release(v14);

  (*(void (**)(char *, uint64_t))(v20 + 8))(v8, v6);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v19);
}

uint64_t sub_21CA33054(unint64_t a1)
{
  return sub_21CA2BA8C(a1, *(void *)(v1 + 16), *(void (**)(unint64_t))(v1 + 24), *(void *)(v1 + 32));
}

void sub_21CA33060()
{
  uint64_t v1 = *(void *)(v0 + 16);
  char v2 = *(unsigned char *)(v0 + 32);
  *(void *)(v1 + 776) = *(void *)(v0 + 24);
  *(unsigned char *)(v1 + 784) = v2;
  sub_21CA2D15C();
}

void sub_21CA33094()
{
  sub_21CA3309C(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

void sub_21CA3309C(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 1096) = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_21CA2D15C();
}

uint64_t sub_21CA330D8()
{
  return sub_21CA33108(v0);
}

uint64_t sub_21CA33108(uint64_t a1)
{
  uint64_t result = MEMORY[0x21D4B6C80](a1 + 32);
  if (result)
  {
    uint64_t v3 = *(void *)(a1 + 40);
    uint64_t ObjectType = swift_getObjectType();
    sub_21CA57E34(&qword_267C95D50);
    sub_21CB88910();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v3 + 56))(v5, 0, ObjectType, v3);
    swift_bridgeObjectRelease();
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_21CA331C4()
{
  return sub_21CA331CC(v0);
}

uint64_t sub_21CA331CC(uint64_t a1)
{
  sub_21CA57E34(&qword_267C94EC0);
  sub_21CB88910();
  if (MEMORY[0x21D4B6C80](a1 + 32))
  {
    uint64_t v2 = *(void *)(a1 + 40);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 72))(v7, ObjectType, v2);
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  uint64_t result = MEMORY[0x21D4B6C80](a1 + 32);
  if (result)
  {
    uint64_t v5 = *(void *)(a1 + 40);
    uint64_t v6 = swift_getObjectType();
    sub_21CA57E34(&qword_267C95D50);
    sub_21CB88910();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v5 + 56))(v7, 0, v6, v5);
    swift_bridgeObjectRelease();
    return swift_unknownObjectRelease();
  }
  return result;
}

Swift::Void __swiftcall FMFManager.didReceive(friends:fromServer:)(Swift::OpaquePointer friends, Swift::Bool fromServer)
{
  BOOL v65 = fromServer;
  rawValue = friends._rawValue;
  uint64_t v3 = sub_21CA57E34(&qword_267C95028);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v61 = (char *)&v54 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_21CA57E34(&qword_267C96F10);
  uint64_t v6 = MEMORY[0x270FA5388](v5 - 8);
  uint64_t v63 = (char *)&v54 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v54 - v8;
  uint64_t v10 = type metadata accessor for FMFFriend();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  uint64_t v13 = MEMORY[0x270FA5388](v10);
  uint64_t v60 = (uint64_t)&v54 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x270FA5388](v13);
  id v16 = (uint64_t *)((char *)&v54 - v15);
  uint64_t v17 = MEMORY[0x270FA5388](v14);
  uint64_t v19 = (char *)&v54 - v18;
  uint64_t v20 = MEMORY[0x270FA5388](v17);
  uint64_t v22 = (char *)&v54 - v21;
  MEMORY[0x270FA5388](v20);
  uint64_t v24 = (uint64_t *)((char *)&v54 - v23);
  uint64_t v25 = v2 + OBJC_IVAR____TtC7FMFCore10FMFManager_selectedFriend;
  swift_beginAccess();
  sub_21CA24E80(v25, (uint64_t)v9, &qword_267C96F10);
  uint64_t v62 = v11;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
    sub_21CA1B88C((uint64_t)v9, &qword_267C96F10);
    uint64_t v26 = rawValue;
    uint64_t v27 = v2;
    if ((*(unsigned char *)(v2 + 225) & 1) == 0 && *(unsigned char *)(v2 + 224) == 1)
    {
      swift_beginAccess();
      if (MEMORY[0x21D4B6C80](v2 + 32))
      {
        uint64_t v28 = *(void *)(v2 + 40);
        uint64_t ObjectType = swift_getObjectType();
        uint64_t v30 = (*(uint64_t (**)(uint64_t, NSObject *, uint64_t, uint64_t))(v28 + 128))(v2, v26, ObjectType, v28);
        swift_unknownObjectRelease();
        if (sub_21CA33A7C())
        {
LABEL_6:
          uint64_t v31 = sub_21CB88640();
          uint64_t v32 = (uint64_t)v61;
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v61, 1, 1, v31);
          char v33 = (void *)swift_allocObject();
          v33[2] = 0;
          v33[3] = 0;
          _DWORD v33[4] = v27;
          v33[5] = v30;
          swift_retain();
          sub_21CB0A588(v32, (uint64_t)&unk_267C97078, (uint64_t)v33);
          swift_release();
          goto LABEL_22;
        }
      }
      else
      {
        swift_bridgeObjectRetain();
        uint64_t v30 = (uint64_t)v26;
        if (sub_21CA33A7C()) {
          goto LABEL_6;
        }
      }
      if (*(void *)(v2 + 200))
      {
        swift_retain();
        sub_21CB3EAB8(v30, 0, 0, 0);
        swift_bridgeObjectRelease();
        swift_release();
      }
      else
      {
        swift_bridgeObjectRelease();
      }
    }
  }
  else
  {
    uint64_t v57 = v19;
    uint64_t v58 = v22;
    uint64_t v59 = v2;
    sub_21CA5913C((uint64_t)v9, (uint64_t)v24, (uint64_t (*)(void))type metadata accessor for FMFFriend);
    uint64_t v34 = (uint64_t)v63;
    uint64_t v26 = rawValue;
    Class isa = rawValue[2].isa;
    uint64_t v36 = v62;
    if (isa)
    {
      uint64_t v37 = *(unsigned __int8 *)(v62 + 80);
      uint64_t v55 = ~v37;
      uint64_t v56 = v37;
      uint64_t v38 = (uint64_t)rawValue + ((v37 + 32) & ~v37);
      uint64_t v39 = *(void *)(v62 + 72);
      uint64_t v40 = rawValue;
      swift_bridgeObjectRetain();
      while (1)
      {
        sub_21CA57180(v38, (uint64_t)v16, (uint64_t (*)(void))type metadata accessor for FMFFriend);
        BOOL v41 = *v16 == *v24 && v16[1] == v24[1];
        if (v41 || (sub_21CB88F50() & 1) != 0) {
          break;
        }
        sub_21CA582D8((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for FMFFriend);
        v38 += v39;
        Class isa = (Class)((char *)isa - 1);
        if (!isa)
        {
          uint64_t v26 = v40;
          swift_bridgeObjectRelease();
          goto LABEL_16;
        }
      }
      uint64_t v26 = v40;
      swift_bridgeObjectRelease();
      uint64_t v45 = (uint64_t)v57;
      sub_21CA5913C((uint64_t)v16, (uint64_t)v57, (uint64_t (*)(void))type metadata accessor for FMFFriend);
      uint64_t v46 = (uint64_t)v58;
      sub_21CA5913C(v45, (uint64_t)v58, (uint64_t (*)(void))type metadata accessor for FMFFriend);
      uint64_t v27 = v59;
      if (*(unsigned char *)(v59 + 224) & 1) != 0 && (sub_21CA33A7C())
      {
        uint64_t v47 = sub_21CB88640();
        uint64_t v48 = (uint64_t)v61;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v47 - 8) + 56))(v61, 1, 1, v47);
        uint64_t v49 = v60;
        sub_21CA57180(v46, v60, (uint64_t (*)(void))type metadata accessor for FMFFriend);
        uint64_t v50 = (v56 + 40) & v55;
        char v51 = (void *)swift_allocObject();
        v51[2] = 0;
        v51[3] = 0;
        v51[4] = v27;
        sub_21CA5913C(v49, (uint64_t)v51 + v50, (uint64_t (*)(void))type metadata accessor for FMFFriend);
        swift_retain();
        sub_21CB09F98(v48, (uint64_t)&unk_267C97088, (uint64_t)v51);
        swift_release();
      }
      sub_21CA582D8(v46, (uint64_t (*)(void))type metadata accessor for FMFFriend);
      uint64_t v44 = (uint64_t)v24;
    }
    else
    {
LABEL_16:
      uint64_t v27 = v59;
      uint64_t v42 = *(void *)(v59 + 128);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v36 + 56))(v34, 1, 1, v10);
      uint64_t v43 = v42 + OBJC_IVAR____TtC7FMFCore20FMFRefreshController_selectedFriend;
      swift_beginAccess();
      swift_retain();
      sub_21CA62738(v34, v43);
      swift_endAccess();
      swift_release();
      uint64_t v44 = (uint64_t)v24;
    }
    sub_21CA582D8(v44, (uint64_t (*)(void))type metadata accessor for FMFFriend);
  }
LABEL_22:
  swift_beginAccess();
  if (MEMORY[0x21D4B6C80](v27 + 32))
  {
    uint64_t v52 = *(void *)(v27 + 40);
    uint64_t v53 = swift_getObjectType();
    (*(void (**)(uint64_t, NSObject *, BOOL, uint64_t, uint64_t))(v52 + 32))(v27, v26, v65, v53, v52);
    swift_unknownObjectRelease();
  }
  if (*(unsigned char *)(v27 + 225) == 1 && (*(unsigned char *)(v27 + 226) & 1) == 0 && v65)
  {
    *(unsigned char *)(v27 + 226) = 1;
    sub_21CB0D814(v26, 0);
  }
}

uint64_t FMFManagerDelegate.fmfManager(_:friendsToShallowLocate:)()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_21CA33A7C()
{
  id v0 = objc_msgSend(self, sel_mainBundle);
  id v1 = objc_msgSend(v0, sel_bundleIdentifier);

  if (v1)
  {
    uint64_t v2 = sub_21CB882F0();
    uint64_t v4 = v3;

    if (v2 != 0xD000000000000015 || v4 != 0x800000021CB97090)
    {
      char v11 = sub_21CB88F50();
      swift_bridgeObjectRelease();
      char v10 = v11 ^ 1;
      return v10 & 1;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    if (qword_267C94990 != -1) {
      swift_once();
    }
    uint64_t v5 = sub_21CB880A0();
    sub_21CA4CC18(v5, (uint64_t)qword_267CA5368);
    uint64_t v6 = sub_21CB88070();
    os_log_type_t v7 = sub_21CB88860();
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v8 = (uint8_t *)swift_slowAlloc();
      uint64_t v9 = swift_slowAlloc();
      uint64_t v13 = v9;
      *(_DWORD *)uint64_t v8 = 136315138;
      sub_21CA4E450(0xD000000000000019, 0x800000021CB97070, &v13);
      sub_21CB889C0();
      _os_log_impl(&dword_21CA00000, v6, v7, "FindMyMessagesAppViewController: %s - No Bundle Identifier", v8, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x21D4B6B70](v9, -1, -1);
      MEMORY[0x21D4B6B70](v8, -1, -1);
    }
  }
  char v10 = 0;
  return v10 & 1;
}

void sub_21CA33CB8()
{
  sub_21CA26A4C(v0 + 24, *(void *)(v0 + 16) + 792, (uint64_t *)&unk_267C96EE0);
  sub_21CA2D15C();
}

uint64_t sub_21CA33CF4(uint64_t a1, char a2)
{
  uint64_t v4 = (uint64_t *)(v2 + qword_267C95AF8);
  swift_beginAccess();
  uint64_t v28 = *v4;
  uint64_t v5 = v28;
  if (*(void *)(v28 + 16))
  {
    swift_bridgeObjectRetain_n();
    unint64_t v6 = sub_21CA5BCE0(0x6F436E6F69676572, 0xEA00000000006564);
    if (v7)
    {
      sub_21CA4E524(*(void *)(v28 + 56) + 32 * v6, (uint64_t)&v26);
    }
    else
    {
      long long v26 = 0u;
      long long v27 = 0u;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    long long v26 = 0u;
    long long v27 = 0u;
    swift_bridgeObjectRetain();
  }
  uint64_t v8 = *((void *)&v27 + 1);
  sub_21CA34054((uint64_t)&v26);
  if (!v8 || (a2 & 1) != 0)
  {
    uint64_t v9 = (void *)sub_21CB875F0();
    id v10 = objc_msgSend(v9, sel_objectForKey_, *MEMORY[0x263EFF4D0]);

    if (v10)
    {
      sub_21CB88A40();
      swift_unknownObjectRelease();
    }
    else
    {
      memset(v23, 0, sizeof(v23));
    }
    sub_21CA33FEC((uint64_t)v23, (uint64_t)&v24);
    if (v25)
    {
      uint64_t v11 = MEMORY[0x263F8D310];
      if (swift_dynamicCast())
      {
        *((void *)&v27 + 1) = v11;
        long long v26 = v22;
        sub_21CA38B20(&v26, &v24);
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *(void *)&v23[0] = v5;
        sub_21CA38660(&v24, 0x6F436E6F69676572, 0xEA00000000006564, isUniquelyReferenced_nonNull_native);
        uint64_t v5 = *(void *)&v23[0];
        uint64_t v28 = *(void *)&v23[0];
        swift_bridgeObjectRelease();
        goto LABEL_15;
      }
    }
    else
    {
      sub_21CA34054((uint64_t)&v24);
    }
    sub_21CB803A4(0x6F436E6F69676572, 0xEA00000000006564, &v24);
    sub_21CA34054((uint64_t)&v24);
    uint64_t v5 = v28;
    if (!*(void *)(v28 + 16)) {
      goto LABEL_22;
    }
    goto LABEL_19;
  }
LABEL_15:
  if (!*(void *)(v5 + 16)) {
    goto LABEL_22;
  }
LABEL_19:
  unint64_t v13 = sub_21CA5BCE0(0x656C61636F6CLL, 0xE600000000000000);
  if (v14)
  {
    sub_21CA4E524(*(void *)(v5 + 56) + 32 * v13, (uint64_t)&v26);
    sub_21CA34054((uint64_t)&v26);
    if ((a2 & 1) == 0) {
      return swift_bridgeObjectRelease();
    }
    goto LABEL_23;
  }
LABEL_22:
  long long v26 = 0u;
  long long v27 = 0u;
  sub_21CA34054((uint64_t)&v26);
LABEL_23:
  uint64_t v15 = MEMORY[0x263F8D310];
  sub_21CB875E0();
  uint64_t v16 = sub_21CB87610();
  uint64_t v18 = v17;
  swift_bridgeObjectRelease();
  *((void *)&v27 + 1) = v15;
  *(void *)&long long v26 = v16;
  *((void *)&v26 + 1) = v18;
  sub_21CA38B20(&v26, &v24);
  uint64_t v19 = v28;
  char v20 = swift_isUniquelyReferenced_nonNull_native();
  *(void *)&v23[0] = v19;
  sub_21CA38660(&v24, 0x656C61636F6CLL, 0xE600000000000000, v20);
  uint64_t v28 = *(void *)&v23[0];
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_21CA33FEC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_21CA57E34(&qword_267C955B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_21CA34054(uint64_t a1)
{
  uint64_t v2 = sub_21CA57E34(&qword_267C955B8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_21CA340B4()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_21CB87590();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  unint64_t v6 = &v17[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = &v17[-v7];
  sub_21CB87580();
  sub_21CB87550();
  double v10 = v9;
  uint64_t v11 = *(void (**)(unsigned char *, uint64_t))(v3 + 8);
  v11(v8, v2);
  uint64_t v12 = v1 + qword_267CA51F8;
  swift_beginAccess();
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v3 + 16))(v6, v12, v2);
  sub_21CB87550();
  double v14 = v13;
  uint64_t result = ((uint64_t (*)(unsigned char *, uint64_t))v11)(v6, v2);
  double v16 = v10 - v14;
  if ((~COERCE__INT64(v10 - v14) & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (v16 <= -9.22337204e18)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (v16 >= 9.22337204e18)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  if ((unsigned __int128)((uint64_t)v16 * (__int128)1000) >> 64 == (1000 * (uint64_t)v16) >> 63)
  {
    v18[3] = MEMORY[0x263F8D6C8];
    v18[0] = 1000 * (uint64_t)v16;
    swift_beginAccess();
    sub_21CA3769C((uint64_t)v18, 0xD000000000000016, 0x800000021CB95890);
    return swift_endAccess();
  }
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_21CA342D8()
{
  return sub_21CA342E4(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
}

uint64_t sub_21CA342E4(uint64_t a1, char a2)
{
  uint64_t v4 = (unsigned char *)(a1 + OBJC_IVAR____TtC7FMFCore10FMFManager_isInitialized);
  uint64_t result = swift_beginAccess();
  if (*v4 == 1 && (a2 & 1) == 0)
  {
    swift_beginAccess();
    uint64_t result = MEMORY[0x21D4B6C80](a1 + 32);
    if (result)
    {
      uint64_t v6 = *(void *)(a1 + 40);
      uint64_t ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 8))(a1, ObjectType, v6);
      return swift_unknownObjectRelease();
    }
  }
  return result;
}

Swift::Void __swiftcall FMFManager.didReceive(locations:)(Swift::OpaquePointer locations)
{
  swift_retain();
  sub_21CA57E34(&qword_267C95D50);
  sub_21CB88910();
  swift_release();
  swift_beginAccess();
  if (MEMORY[0x21D4B6C80](v1 + 32))
  {
    uint64_t v3 = *(void *)(v1 + 40);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, void *, uint64_t, uint64_t))(v3 + 48))(v1, locations._rawValue, ObjectType, v3);
    swift_unknownObjectRelease();
  }
  id v5 = objc_allocWithZone(MEMORY[0x263F08790]);
  swift_retain();
  id v6 = objc_msgSend(v5, sel_init);
  uint64_t v7 = (void *)sub_21CB882C0();
  objc_msgSend(v6, sel_setLocalizedDateFormatFromTemplate_, v7);

  uint64_t v8 = *((void *)locations._rawValue + 2);
  if (v8)
  {
    uint64_t v9 = *(void *)(type metadata accessor for FMFLocation() - 8);
    double v10 = (char *)locations._rawValue
        + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v11 = *(void *)(v9 + 72);
    swift_bridgeObjectRetain();
    do
    {
      sub_21CA4D908((uint64_t)v10, v12, v6, 0x6465747365676E69, 0xE800000000000000);
      v10 += v11;
      --v8;
    }
    while (v8);
    swift_release();

    swift_bridgeObjectRelease();
  }
  else
  {
    swift_release();
  }
  swift_bridgeObjectRelease();
}

unint64_t sub_21CA345B8(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  sub_21CA57E34(&qword_267C97AC8);
  uint64_t v2 = sub_21CB88D40();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_21CA24E80(v6, (uint64_t)v13, &qword_267C97AD0);
    unsigned __int8 v7 = v13[0];
    unint64_t result = sub_21CA34A58(v13[0]);
    if (v9) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(unsigned char *)(v3[6] + result) = v7;
    unint64_t result = (unint64_t)sub_21CA38B20(&v14, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v10 = v3[2];
    BOOL v11 = __OFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11) {
      goto LABEL_11;
    }
    v3[2] = v12;
    v6 += 40;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_21CA346E8@<X0>(unsigned __int8 a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, uint64_t *a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v22 = a2;
  uint64_t v24 = a6;
  uint64_t v10 = sub_21CB889A0();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  double v13 = (char *)&v21 - v12;
  if (*a4 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v14 = *a5;
  if (*(void *)(*a5 + 16) && (unint64_t v15 = sub_21CA34A58(a1), (v16 & 1) != 0)) {
    sub_21CA4E524(*(void *)(v14 + 56) + 32 * v15, (uint64_t)v23);
  }
  else {
    memset(v23, 0, sizeof(v23));
  }
  swift_endAccess();
  sub_21CA57E34(&qword_267C955B8);
  char v17 = swift_dynamicCast();
  uint64_t v18 = *(void *)(a3 - 8);
  uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56);
  if (v17)
  {
    v19(v13, 0, 1, a3);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v18 + 32))(v24, v13, a3);
  }
  else
  {
    v19(v13, 1, 1, a3);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v18 + 16))(v24, v22, a3);
  }
}

_OWORD *sub_21CA3491C(_OWORD *a1, char a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v8 = (void *)*v3;
  unint64_t v10 = sub_21CA34A58(a2);
  uint64_t v11 = v8[2];
  BOOL v12 = (v9 & 1) == 0;
  uint64_t v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v14 = v9;
  uint64_t v15 = v8[3];
  if (v15 < v13 || (a3 & 1) == 0)
  {
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_21CB85CB4();
      goto LABEL_7;
    }
    sub_21CB81F28(v13, a3 & 1);
    unint64_t v19 = sub_21CA34A58(a2);
    if ((v14 & 1) == (v20 & 1))
    {
      unint64_t v10 = v19;
      char v16 = *v4;
      if (v14) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    unint64_t result = (_OWORD *)sub_21CB88FA0();
    __break(1u);
    return result;
  }
LABEL_7:
  char v16 = *v4;
  if (v14)
  {
LABEL_8:
    char v17 = (_OWORD *)(v16[7] + 32 * v10);
    sub_21CA2B0D0((uint64_t)v17);
    return sub_21CA38B20(a1, v17);
  }
LABEL_13:

  return sub_21CB84A14(v10, a2, a1, v16);
}

unint64_t sub_21CA34A58(unsigned __int8 a1)
{
  sub_21CB89050();
  FMFConfigValue.rawValue.getter();
  sub_21CB88380();
  swift_bridgeObjectRelease();
  uint64_t v2 = sub_21CB89090();

  return sub_21CA34C50(a1, v2);
}

unint64_t FMFConfigValue.rawValue.getter()
{
  unint64_t result = 0x74655365636E6566;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0xD000000000000019;
      break;
    case 2:
      unint64_t result = 0xD000000000000015;
      break;
    case 3:
      unint64_t result = 0xD000000000000014;
      break;
    case 4:
      unint64_t result = 0xD00000000000001DLL;
      break;
    case 5:
    case 0xC:
      unint64_t result = 0xD000000000000018;
      break;
    case 6:
      unint64_t result = 0xD000000000000020;
      break;
    case 7:
      unint64_t result = 0xD00000000000001DLL;
      break;
    case 8:
      unint64_t result = 0xD00000000000001BLL;
      break;
    case 9:
      unint64_t result = 0xD00000000000001BLL;
      break;
    case 0xA:
      unint64_t result = 0xD000000000000020;
      break;
    case 0xB:
      unint64_t result = 0xD000000000000021;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_21CA34C50(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v5 = ~v3;
    uint64_t v6 = a1;
    while (1)
    {
      unint64_t v7 = 0xEE006B6E694C7075;
      unint64_t v8 = 0x74655365636E6566;
      switch(*(unsigned char *)(*(void *)(v2 + 48) + v4))
      {
        case 1:
          unint64_t v8 = 0xD000000000000019;
          unint64_t v7 = 0x800000021CB93B90;
          break;
        case 2:
          unint64_t v8 = 0xD000000000000015;
          unint64_t v7 = 0x800000021CB93BB0;
          break;
        case 3:
          unint64_t v8 = 0xD000000000000014;
          unint64_t v7 = 0x800000021CB93BD0;
          break;
        case 4:
          unint64_t v8 = 0xD00000000000001DLL;
          unint64_t v7 = 0x800000021CB93BF0;
          break;
        case 5:
          unint64_t v7 = 0x800000021CB93C10;
          goto LABEL_16;
        case 6:
          unint64_t v8 = 0xD000000000000020;
          unint64_t v7 = 0x800000021CB93C30;
          break;
        case 7:
          unint64_t v8 = 0xD00000000000001DLL;
          unint64_t v7 = 0x800000021CB93C60;
          break;
        case 8:
          unint64_t v8 = 0xD00000000000001BLL;
          unint64_t v7 = 0x800000021CB93C80;
          break;
        case 9:
          unint64_t v8 = 0xD00000000000001BLL;
          unint64_t v7 = 0x800000021CB93CA0;
          break;
        case 0xA:
          unint64_t v8 = 0xD000000000000020;
          unint64_t v7 = 0x800000021CB93CC0;
          break;
        case 0xB:
          unint64_t v8 = 0xD000000000000021;
          unint64_t v7 = 0x800000021CB93CF0;
          break;
        case 0xC:
          unint64_t v7 = 0x800000021CB93D20;
LABEL_16:
          unint64_t v8 = 0xD000000000000018;
          break;
        default:
          break;
      }
      unint64_t v9 = 0xEE006B6E694C7075;
      switch(v6)
      {
        case 1:
          unint64_t v10 = 0xD000000000000019;
          uint64_t v11 = "toMeCapable";
          goto LABEL_30;
        case 2:
          uint64_t v11 = "inaccuracyRadiusThreshold";
          unint64_t v10 = 0xD000000000000015;
          goto LABEL_30;
        case 3:
          uint64_t v11 = "liveAnimationInterval";
          unint64_t v10 = 0xD000000000000014;
          goto LABEL_30;
        case 4:
          unint64_t v10 = 0xD00000000000001DLL;
          uint64_t v11 = "liveTimeoutThreshold";
          goto LABEL_30;
        case 5:
          unint64_t v9 = 0x800000021CB93C10;
          goto LABEL_38;
        case 6:
          unint64_t v10 = 0xD000000000000020;
          uint64_t v11 = "reverseGeocodingThrottle";
          goto LABEL_30;
        case 7:
          unint64_t v10 = 0xD00000000000001DLL;
          uint64_t v11 = "ThrottleDistance";
          goto LABEL_30;
        case 8:
          unint64_t v10 = 0xD00000000000001BLL;
          uint64_t v11 = "precisionFindingSesionTimeout";
          goto LABEL_30;
        case 9:
          unint64_t v10 = 0xD00000000000001BLL;
          uint64_t v11 = "peopleFindingNearbyDistance";
          goto LABEL_30;
        case 10:
          unint64_t v10 = 0xD000000000000020;
          uint64_t v11 = "peopleFindingConnectingTime";
LABEL_30:
          unint64_t v9 = (unint64_t)v11 | 0x8000000000000000;
          if (v8 == v10) {
            goto LABEL_31;
          }
          goto LABEL_32;
        case 11:
          unint64_t v9 = 0x800000021CB93CF0;
          if (v8 != 0xD000000000000021) {
            goto LABEL_32;
          }
          goto LABEL_31;
        case 12:
          unint64_t v9 = 0x800000021CB93D20;
LABEL_38:
          if (v8 != 0xD000000000000018) {
            goto LABEL_32;
          }
          goto LABEL_31;
        default:
          if (v8 != 0x74655365636E6566) {
            goto LABEL_32;
          }
LABEL_31:
          if (v7 == v9)
          {
            swift_bridgeObjectRelease_n();
            return v4;
          }
LABEL_32:
          char v12 = sub_21CB88F50();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v12) {
            return v4;
          }
          unint64_t v4 = (v4 + 1) & v5;
          if (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) == 0) {
            return v4;
          }
          break;
      }
    }
  }
  return v4;
}

uint64_t sub_21CA34FE0(double a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_21CB88100();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  unint64_t v7 = (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_21CB88150();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t result = MEMORY[0x270FA5388](v8);
  char v12 = (char *)v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(unsigned char *)(v1 + OBJC_IVAR____TtC7FMFCore20FMFRefreshController_initializedOnce) == 1)
  {
    if ((*(unsigned char *)(v1 + OBJC_IVAR____TtC7FMFCore20FMFRefreshController_useOptimizedFetch) & 1) == 0)
    {
      v20[1] = *(void *)(v1 + OBJC_IVAR____TtC7FMFCore20FMFRefreshController_refreshQueue);
      uint64_t v13 = swift_allocObject();
      *(double *)(v13 + 16) = a1;
      *(void *)(v13 + 24) = v1;
      aBlock[4] = sub_21CA2F528;
      void aBlock[5] = v13;
      aBlock[0] = MEMORY[0x263EF8330];
      aBlock[1] = 1107296256;
      uint64_t aBlock[2] = sub_21CA1B084;
      uint64_t aBlock[3] = &unk_26CD6A5F0;
      char v14 = _Block_copy(aBlock);
      swift_retain();
      sub_21CB88120();
      void v20[2] = MEMORY[0x263F8EE78];
      sub_21CA364B0((unint64_t *)&qword_267C96FC0, MEMORY[0x263F8F030]);
      sub_21CA57E34((uint64_t *)&unk_267C96DD0);
      sub_21CA3566C((unint64_t *)&qword_267C96FD0, (uint64_t *)&unk_267C96DD0);
      sub_21CB88A60();
      MEMORY[0x21D4B5A20](0, v12, v7, v14);
      _Block_release(v14);
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
      return swift_release();
    }
  }
  else
  {
    if (qword_267C94990 != -1) {
      swift_once();
    }
    uint64_t v15 = sub_21CB880A0();
    sub_21CA4CC18(v15, (uint64_t)qword_267CA5368);
    char v16 = sub_21CB88070();
    os_log_type_t v17 = sub_21CB88880();
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v18 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v18 = 0;
      _os_log_impl(&dword_21CA00000, v16, v17, "FMFRefreshController: Initialization is not completed yet. Cannot fire refresh.", v18, 2u);
      MEMORY[0x21D4B6B70](v18, -1, -1);
    }

    unint64_t v19 = (void *)MEMORY[0x21D4B6380]();
    sub_21CA19308(v2, MEMORY[0x263F8EE78], MEMORY[0x263F8EE78], MEMORY[0x263F8EE78]);
    return swift_bridgeObjectRelease_n();
  }
  return result;
}

uint64_t sub_21CA353BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_21CB88100();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_21CB88150();
  uint64_t v12 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  char v14 = (char *)v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18[1] = *(void *)(v4 + 56);
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = v4;
  *(void *)(v15 + 24) = a1;
  aBlock[4] = a3;
  void aBlock[5] = v15;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  uint64_t aBlock[2] = sub_21CA1B084;
  uint64_t aBlock[3] = a4;
  char v16 = _Block_copy(aBlock);
  swift_retain();
  sub_21CB88120();
  uint64_t v20 = MEMORY[0x263F8EE78];
  sub_21CA36540((unint64_t *)&qword_267C96FC0, MEMORY[0x263F8F030]);
  sub_21CA57E34((uint64_t *)&unk_267C96DD0);
  sub_21CA356BC((unint64_t *)&qword_267C96FD0, (uint64_t *)&unk_267C96DD0);
  sub_21CB88A60();
  MEMORY[0x21D4B5A20](0, v14, v11, v16);
  _Block_release(v16);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v19);
  return swift_release();
}

uint64_t sub_21CA3566C(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_21CA5EEBC(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_21CA356BC(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_21CA5EEBC(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_21CA35700(uint64_t a1, const void *a2)
{
  uint64_t v104 = *MEMORY[0x263EF8340];
  uint64_t v4 = sub_21CB87830();
  uint64_t v88 = *(void *)(v4 - 8);
  uint64_t v89 = v4;
  MEMORY[0x270FA5388](v4);
  unint64_t v91 = (unint64_t)&v87 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_21CA57E34(&qword_267C97230);
  MEMORY[0x270FA5388](v6 - 8);
  char v94 = (uint8_t *)&v87 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_21CA57E34(&qword_267C97238);
  uint64_t v92 = *(void *)(v8 - 8);
  uint64_t v93 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v90 = (uint64_t)&v87 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_21CB87480();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v87 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  memcpy(v103, a2, sizeof(v103));
  v99[0] = 0;
  char v14 = self;
  id v15 = objc_msgSend(v14, sel_defaultManager);
  char v16 = *(void **)(a1 + 24);
  unint64_t v17 = *(void *)(a1 + 32);
  uint64_t v95 = a1;
  uint64_t v97 = v16;
  unint64_t v98 = v17;
  uint64_t v18 = (void *)sub_21CB882C0();
  LOBYTE(a1) = objc_msgSend(v15, sel_fileExistsAtPath_isDirectory_, v18, v99);

  if ((a1 & 1) == 0)
  {
    id v19 = objc_msgSend(v14, sel_defaultManager);
    sub_21CB87420();
    uint64_t v20 = (void *)sub_21CB87430();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    id v100 = 0;
    unsigned __int8 v21 = objc_msgSend(v19, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v20, 1, 0, &v100);

    id v22 = v100;
    if ((v21 & 1) == 0)
    {
      uint64_t v56 = v22;
      uint64_t v57 = sub_21CB87400();

      swift_willThrow();
      if (qword_267C94990 != -1) {
        swift_once();
      }
      uint64_t v58 = sub_21CB880A0();
      sub_21CA4CC18(v58, (uint64_t)qword_267CA5368);
      swift_retain_n();
      uint64_t v59 = sub_21CB88070();
      os_log_type_t v60 = sub_21CB88880();
      if (os_log_type_enabled(v59, v60))
      {
        uint64_t v61 = (uint8_t *)swift_slowAlloc();
        uint64_t v62 = swift_slowAlloc();
        uint64_t v96 = (void *)v57;
        *(_DWORD *)uint64_t v61 = 136315138;
        uint64_t v102 = v62;
        char v94 = v61 + 4;
        id v100 = v97;
        unint64_t v101 = v98;
        swift_bridgeObjectRetain();
        sub_21CB883D0();
        id v100 = (id)sub_21CA4E450((uint64_t)v100, v101, &v102);
        sub_21CB889C0();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_21CA00000, v59, v60, "FMDiskIO: Could not create directory for content: %s", v61, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x21D4B6B70](v62, -1, -1);
        MEMORY[0x21D4B6B70](v61, -1, -1);
        uint64_t v63 = v96;
      }
      else
      {
        swift_release_n();
        uint64_t v63 = (void *)v57;
      }

      return;
    }
  }
  id v87 = v14;
  sub_21CB87310();
  swift_allocObject();
  uint64_t v23 = sub_21CB87300();
  sub_21CA36A30();
  uint64_t v24 = v96;
  uint64_t v25 = sub_21CB872F0();
  if (v24)
  {
    swift_release();
    long long v27 = v24;
LABEL_21:
    if (qword_267C94990 != -1) {
      swift_once();
    }
    uint64_t v66 = sub_21CB880A0();
    sub_21CA4CC18(v66, (uint64_t)qword_267CA5368);
    id v67 = v27;
    id v68 = v27;
    uint64_t v69 = sub_21CB88070();
    os_log_type_t v70 = sub_21CB88860();
    if (os_log_type_enabled(v69, v70))
    {
      id v71 = (uint8_t *)swift_slowAlloc();
      uint64_t v72 = (void *)swift_slowAlloc();
      uint64_t v96 = 0;
      id v73 = v72;
      id v100 = v72;
      *(_DWORD *)id v71 = 136315138;
      swift_getErrorValue();
      uint64_t v74 = sub_21CB89000();
      uint64_t v102 = sub_21CA4E450(v74, v75, (uint64_t *)&v100);
      sub_21CB889C0();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_21CA00000, v69, v70, "FMDiskIO: Could not save objects to disk %s", v71, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x21D4B6B70](v73, -1, -1);
      MEMORY[0x21D4B6B70](v71, -1, -1);
    }
    else
    {
    }
    return;
  }
  uint64_t v28 = v25;
  unint64_t v29 = v26;
  uint64_t v30 = (uint64_t)v94;
  uint64_t v31 = v95;
  sub_21CA24E80(v95 + *(void *)(*(void *)v95 + 128), (uint64_t)v94, &qword_267C97230);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v92 + 48))(v30, 1, v93) != 1)
  {
    sub_21CA26A4C(v30, v90, &qword_267C97238);
    sub_21CB877F0();
    sub_21CA36540(&qword_267C97250, MEMORY[0x263F3CC18]);
    uint64_t v64 = v89;
    uint64_t v76 = sub_21CB872F0();
    unint64_t v78 = v77;
    char v94 = (uint8_t *)v28;
    uint64_t v79 = (void *)sub_21CB874B0();
    sub_21CA36618(v76, v78);
    uint64_t v80 = *(void **)(v31 + 40);
    uint64_t v81 = *(void *)(v31 + 48);
    id v100 = v97;
    unint64_t v101 = v98;
    swift_bridgeObjectRetain();
    uint64_t v96 = v80;
    uint64_t v93 = v81;
    sub_21CB883D0();
    uint64_t v82 = (void *)sub_21CB882C0();
    swift_bridgeObjectRelease();
    LODWORD(v76) = objc_msgSend(v79, sel_writeToFile_atomically_, v82, 1);

    (*(void (**)(unint64_t, uint64_t))(v88 + 8))(v91, v64);
    sub_21CA1B88C(v90, &qword_267C97238);
    if (v76)
    {
      unint64_t v91 = v29;
      uint64_t v92 = v23;
      uint64_t v36 = &off_264437000;
      goto LABEL_8;
    }
LABEL_29:
    if (qword_267C94990 != -1) {
      swift_once();
    }
    uint64_t v83 = sub_21CB880A0();
    sub_21CA4CC18(v83, (uint64_t)qword_267CA5368);
    char v84 = sub_21CB88070();
    os_log_type_t v85 = sub_21CB88880();
    if (os_log_type_enabled(v84, v85))
    {
      uint64_t v86 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v86 = 0;
      _os_log_impl(&dword_21CA00000, v84, v85, "FMDiskIO: Could not save objects to disk", v86, 2u);
      MEMORY[0x21D4B6B70](v86, -1, -1);
    }
    swift_release();
    sub_21CA36618((uint64_t)v94, v29);

    return;
  }
  sub_21CA1B88C(v30, &qword_267C97230);
  char v94 = (uint8_t *)v28;
  uint64_t v32 = (void *)sub_21CB874B0();
  uint64_t v33 = *(void *)(v31 + 48);
  id v100 = v97;
  unint64_t v101 = v98;
  swift_bridgeObjectRetain();
  uint64_t v93 = v33;
  sub_21CB883D0();
  uint64_t v34 = (void *)sub_21CB882C0();
  swift_bridgeObjectRelease();
  unsigned __int8 v35 = objc_msgSend(v32, sel_writeToFile_atomically_, v34, 1);

  uint64_t v36 = &off_264437000;
  if ((v35 & 1) == 0) {
    goto LABEL_29;
  }
  unint64_t v91 = v29;
  uint64_t v92 = v23;
LABEL_8:
  id v37 = [v87 (SEL)v36[200]];
  sub_21CA57E34(&qword_267C97248);
  uint64_t inited = swift_initStackObject();
  uint64_t v39 = (void **)MEMORY[0x263F080A8];
  *(_OWORD *)(inited + 16) = xmmword_21CB8B220;
  uint64_t v40 = *v39;
  *(void *)(inited + 32) = *v39;
  BOOL v41 = (void *)*MEMORY[0x263F08098];
  type metadata accessor for FileProtectionType(0);
  *(void *)(inited + 64) = v42;
  *(void *)(inited + 40) = v41;
  id v43 = v40;
  id v44 = v41;
  sub_21CA366F4(inited);
  type metadata accessor for FileAttributeKey(0);
  sub_21CA36540(&qword_267C94BC0, type metadata accessor for FileAttributeKey);
  uint64_t v45 = (void *)sub_21CB881E0();
  swift_bridgeObjectRelease();
  id v100 = v97;
  unint64_t v101 = v98;
  swift_bridgeObjectRetain();
  sub_21CB883D0();
  uint64_t v46 = (void *)sub_21CB882C0();
  swift_bridgeObjectRelease();
  id v100 = 0;
  unsigned __int8 v47 = objc_msgSend(v37, sel_setAttributes_ofItemAtPath_error_, v45, v46, &v100);

  if ((v47 & 1) == 0)
  {
    id v65 = v100;
    long long v27 = (void *)sub_21CB87400();

    swift_willThrow();
    sub_21CA36618((uint64_t)v94, v91);
    swift_release();
    goto LABEL_21;
  }
  uint64_t v48 = qword_267C94990;
  id v49 = v100;
  if (v48 != -1) {
    swift_once();
  }
  uint64_t v50 = sub_21CB880A0();
  sub_21CA4CC18(v50, (uint64_t)qword_267CA5368);
  swift_retain_n();
  char v51 = sub_21CB88070();
  os_log_type_t v52 = sub_21CB88880();
  if (os_log_type_enabled(v51, v52))
  {
    uint64_t v53 = (uint8_t *)swift_slowAlloc();
    uint64_t v54 = swift_slowAlloc();
    uint64_t v96 = 0;
    uint64_t v55 = v54;
    uint64_t v102 = v54;
    *(_DWORD *)uint64_t v53 = 136315138;
    id v100 = v97;
    unint64_t v101 = v98;
    swift_bridgeObjectRetain();
    sub_21CB883D0();
    id v100 = (id)sub_21CA4E450((uint64_t)v100, v101, &v102);
    sub_21CB889C0();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_21CA00000, v51, v52, "FMDiskIO: Successfully wrote object to disk @ %s", v53, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x21D4B6B70](v55, -1, -1);
    MEMORY[0x21D4B6B70](v53, -1, -1);
    swift_release();
    sub_21CA36618((uint64_t)v94, v91);
  }
  else
  {
    swift_release();
    sub_21CA36618((uint64_t)v94, v91);

    swift_release_n();
  }
}

uint64_t sub_21CA364B0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_21CA364F8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_21CA36540(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_21CA36588(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_21CA365D0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_21CA36618(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_release();
  }

  return swift_release();
}

void sub_21CA36670(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4) {
      atomic_store(ForeignTypeMetadata, a2);
    }
  }
}

uint64_t sub_21CA366B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_21CB39058);
}

void type metadata accessor for FileAttributeKey(uint64_t a1)
{
}

void type metadata accessor for FileProtectionType(uint64_t a1)
{
}

unint64_t sub_21CA366F4(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  sub_21CA57E34(&qword_267C97AA0);
  uint64_t v2 = sub_21CB88D40();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_21CA24E80(v6, (uint64_t)&v13, &qword_267C97AA8);
    uint64_t v7 = v13;
    unint64_t result = sub_21CA36824(v13);
    if (v9) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(void *)(v3[6] + 8 * result) = v7;
    unint64_t result = (unint64_t)sub_21CA38B20(&v14, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v10 = v3[2];
    BOOL v11 = __OFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11) {
      goto LABEL_11;
    }
    v3[2] = v12;
    v6 += 40;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_21CA36824(uint64_t a1)
{
  sub_21CB882F0();
  sub_21CB89050();
  sub_21CB88380();
  uint64_t v2 = sub_21CB89090();
  swift_bridgeObjectRelease();

  return sub_21CA368B8(a1, v2);
}

unint64_t sub_21CA368B8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v5 = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
  {
    uint64_t v6 = sub_21CB882F0();
    uint64_t v8 = v7;
    if (v6 == sub_21CB882F0() && v8 == v9)
    {
LABEL_16:
      swift_bridgeObjectRelease_n();
      return v5;
    }
    char v11 = sub_21CB88F50();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0)
    {
      uint64_t v12 = ~v4;
      unint64_t v5 = (v5 + 1) & v12;
      if ((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
      {
        while (1)
        {
          uint64_t v13 = sub_21CB882F0();
          uint64_t v15 = v14;
          if (v13 == sub_21CB882F0() && v15 == v16) {
            break;
          }
          char v18 = sub_21CB88F50();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v18 & 1) == 0)
          {
            unint64_t v5 = (v5 + 1) & v12;
            if ((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5)) {
              continue;
            }
          }
          return v5;
        }
        goto LABEL_16;
      }
    }
  }
  return v5;
}

unint64_t sub_21CA36A30()
{
  unint64_t result = qword_267C97240;
  if (!qword_267C97240)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C97240);
  }
  return result;
}

void *sub_21CA36A84()
{
  uint64_t v1 = sub_21CB87700();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = MEMORY[0x263F8EE80];
  *(void *)(v0 + qword_267C95AE8) = MEMORY[0x263F8EE80];
  *(void *)(v0 + qword_267C95AF0) = v5;
  *(void *)(v0 + qword_267C95AF8) = v5;
  *(void *)(v0 + qword_267C95B00) = v5;
  *(void *)(v0 + qword_267C95B08) = v5;
  sub_21CB874F0();
  if (qword_267C94990 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_21CB880A0();
  sub_21CA4CC18(v6, (uint64_t)qword_267CA5368);
  uint64_t v7 = sub_21CB88070();
  os_log_type_t v8 = sub_21CB88880();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v9 = 0;
    _os_log_impl(&dword_21CA00000, v7, v8, "BaseEndpoint: initialized", v9, 2u);
    MEMORY[0x21D4B6B70](v9, -1, -1);
  }

  id v10 = objc_msgSend(self, sel_sharedInstance);
  id v11 = objc_msgSend(v10, sel_deviceUDID);

  if (v11)
  {
    sub_21CB882F0();

    unint64_t v15 = 0xD000000000000018;
    unint64_t v16 = 0x800000021CB95AB0;
    sub_21CB883D0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_21CB883D0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_21CB883D0();
    swift_bridgeObjectRelease();
  }
  else
  {
    unint64_t v15 = 0xD000000000000018;
    unint64_t v16 = 0x800000021CB95AB0;
    sub_21CB883D0();
  }
  swift_bridgeObjectRelease();
  uint64_t v12 = (void *)sub_21CB87720();
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, *MEMORY[0x263F3BA88], v1);
  swift_retain();
  sub_21CB87710();
  sub_21CA38D18();
  id v13 = sub_21CA37ABC();
  (*(void (**)(id))(qword_267CA5200 + *v12 + 256))(v13);
  swift_release();
  return v12;
}

void sub_21CA36E18()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_21CA57E34(&qword_267C96F10);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (void *)((char *)v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = *(void *)(v0 + qword_267CA5400);
  if (v5)
  {
    uint64_t v28 = sub_21CA57E34(&qword_267C97A90);
    v27[0] = v5;
    swift_beginAccess();
    swift_bridgeObjectRetain();
    sub_21CA3769C((uint64_t)v27, 0x65746E6F43706174, 0xEA00000000007478);
    swift_endAccess();
  }
  sub_21CA24E80(v1 + qword_267CA53F8, (uint64_t)v4, &qword_267C96F10);
  uint64_t v6 = type metadata accessor for FMFFriend();
  if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v4, 1, v6) == 1)
  {
    sub_21CA37A10((uint64_t)v4);
  }
  else
  {
    uint64_t v8 = *v4;
    uint64_t v7 = v4[1];
    swift_bridgeObjectRetain();
    sub_21CA4C4F4((uint64_t)v4);
    uint64_t v28 = MEMORY[0x263F8D310];
    v27[0] = v8;
    v27[1] = v7;
    swift_beginAccess();
    sub_21CA3769C((uint64_t)v27, 0x64657463656C6573, 0xEE00646E65697246);
    swift_endAccess();
  }
  uint64_t v9 = *(void *)(v1 + qword_267CA5408);
  if (v9)
  {
    uint64_t v28 = sub_21CA57E34(&qword_267C97A88);
    v27[0] = v9;
    swift_beginAccess();
    swift_bridgeObjectRetain();
    sub_21CA3769C((uint64_t)v27, 0xD000000000000015, 0x800000021CB945A0);
    swift_endAccess();
  }
  uint64_t v10 = *(void *)(v1 + qword_267CA5410);
  if (v10)
  {
    uint64_t v28 = sub_21CA57E34(&qword_267C97A88);
    v27[0] = v10;
    swift_beginAccess();
    swift_bridgeObjectRetain();
    sub_21CA3769C((uint64_t)v27, 0xD000000000000012, 0x800000021CB945C0);
    swift_endAccess();
  }
  uint64_t v11 = v1 + qword_267CA5418;
  uint64_t v12 = *(void *)(v1 + qword_267CA5418);
  if (v12)
  {
    uint64_t v14 = *(void *)(v11 + 8);
    uint64_t v13 = *(void *)(v11 + 16);
    sub_21CA57E34(&qword_267C97A78);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_21CB8B3F0;
    *(void *)(inited + 32) = 0x697369567473616CLL;
    *(void *)(inited + 40) = 0xEF656D6954646574;
    *(void *)(inited + 48) = v12;
    *(void *)(inited + 56) = 0x54746E6572727563;
    *(void *)(inited + 64) = 0xEA00000000006261;
    *(void *)(inited + 72) = v14;
    *(void *)(inited + 80) = 0x6E657053656D6974;
    *(void *)(inited + 88) = 0xE900000000000074;
    *(void *)(inited + 96) = v13;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v16 = sub_21CA37774(inited);
    uint64_t v28 = sub_21CA57E34(&qword_267C97A80);
    v27[0] = v16;
    swift_beginAccess();
    sub_21CA3769C((uint64_t)v27, 1935827316, 0xE400000000000000);
    swift_endAccess();
  }
  if (*(unsigned char *)(v1 + qword_267CA5420) == 1)
  {
    if (qword_267C94990 != -1) {
      swift_once();
    }
    uint64_t v17 = sub_21CB880A0();
    sub_21CA4CC18(v17, (uint64_t)qword_267CA5368);
    swift_retain_n();
    char v18 = sub_21CB88070();
    os_log_type_t v19 = sub_21CB88880();
    if (os_log_type_enabled(v18, v19))
    {
      uint64_t v20 = (uint8_t *)swift_slowAlloc();
      uint64_t v21 = swift_slowAlloc();
      v26[0] = v21;
      *(_DWORD *)uint64_t v20 = 136315138;
      v25[1] = v20 + 4;
      swift_beginAccess();
      swift_bridgeObjectRetain();
      uint64_t v22 = sub_21CB88210();
      unint64_t v24 = v23;
      swift_bridgeObjectRelease();
      uint64_t v29 = sub_21CA4E450(v22, v24, v26);
      sub_21CB889C0();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_21CA00000, v18, v19, "FMFInitRefreshController: Client Context for initClient: %s", v20, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x21D4B6B70](v21, -1, -1);
      MEMORY[0x21D4B6B70](v20, -1, -1);
    }
    else
    {

      swift_release_n();
    }
  }
}

uint64_t sub_21CA373E0()
{
  return sub_21CA37404();
}

uint64_t sub_21CA37404()
{
  uint64_t v1 = v0;
  uint64_t v18 = *MEMORY[0x263EF8340];
  uint64_t v2 = (void **)(v0 + qword_267C95AF8);
  swift_beginAccess();
  uint64_t v3 = *v2;
  uint64_t v4 = sub_21CA57E34(&qword_267C955B0);
  uint64_t v17 = v4;
  v16[0] = v3;
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_21CA3769C((uint64_t)v16, 0x6F43746E65696C63, 0xED0000747865746ELL);
  uint64_t v5 = *(void **)(v1 + qword_267C95B00);
  uint64_t v17 = v4;
  v16[0] = v5;
  swift_bridgeObjectRetain();
  sub_21CA3769C((uint64_t)v16, 0x6F43726576726573, 0xED0000747865746ELL);
  uint64_t v6 = *(void **)(v1 + qword_267C95B08);
  uint64_t v17 = v4;
  v16[0] = v6;
  swift_bridgeObjectRetain();
  sub_21CA3769C((uint64_t)v16, 0x746E6F4361746164, 0xEB00000000747865);
  swift_endAccess();
  uint64_t v7 = self;
  swift_bridgeObjectRetain();
  uint64_t v8 = (void *)sub_21CB881E0();
  swift_bridgeObjectRelease();
  LODWORD(v4) = objc_msgSend(v7, sel_isValidJSONObject_, v8);

  if (!v4) {
    return 0;
  }
  swift_bridgeObjectRetain();
  uint64_t v9 = (void *)sub_21CB881E0();
  swift_bridgeObjectRelease();
  v16[0] = 0;
  id v10 = objc_msgSend(v7, sel_dataWithJSONObject_options_error_, v9, 0, v16);

  id v11 = v16[0];
  if (!v10)
  {
    uint64_t v13 = v11;
    uint64_t v14 = (void *)sub_21CB87400();

    swift_willThrow();
    return 0;
  }
  uint64_t v12 = sub_21CB874C0();

  return v12;
}

uint64_t sub_21CA3769C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a1 + 24))
  {
    sub_21CA38B20((_OWORD *)a1, v9);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v8 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_21CA38660(v9, a2, a3, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v8;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_21CA1B88C(a1, &qword_267C955B8);
    sub_21CB803A4(a2, a3, v9);
    swift_bridgeObjectRelease();
    return sub_21CA1B88C((uint64_t)v9, &qword_267C955B8);
  }
}

unint64_t sub_21CA37774(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  sub_21CA57E34(&qword_267C97A98);
  uint64_t v2 = (void *)sub_21CB88D40();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *(v4 - 2);
    uint64_t v6 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_21CA5BCE0(v5, v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    id v10 = (uint64_t *)(v2[6] + 16 * result);
    *id v10 = v5;
    v10[1] = v6;
    *(void *)(v2[7] + 8 * result) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v2[2] = v13;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_21CA37890()
{
  sub_21CA378E4();

  return swift_deallocClassInstance();
}

uint64_t sub_21CA378E4()
{
  uint64_t v0 = sub_21CB87730();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + qword_267CA51F8;
  uint64_t v2 = sub_21CB87590();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  sub_21CA37A10(v0 + qword_267CA53F8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_21CA37A70(*(void *)(v0 + qword_267CA5418));
  return v0;
}

uint64_t sub_21CA37A10(uint64_t a1)
{
  uint64_t v2 = sub_21CA57E34(&qword_267C96F10);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_21CA37A70(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

id sub_21CA37ABC()
{
  uint64_t v85 = sub_21CB87630();
  uint64_t v0 = *(void *)(v85 - 8);
  MEMORY[0x270FA5388](v85);
  uint64_t v2 = (char *)v84 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v84[0] = sub_21CB87590();
  uint64_t v86 = *(void *)(v84[0] - 8);
  MEMORY[0x270FA5388](v84[0]);
  uint64_t v4 = (char *)v84 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21CB87580();
  id v5 = objc_msgSend(self, sel_sharedInstance);
  uint64_t v90 = MEMORY[0x263F8D4F8];
  LOBYTE(v89) = 1;
  sub_21CA38B20(&v89, v88);
  uint64_t v6 = MEMORY[0x263F8EE80];
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)&long long v87 = v6;
  sub_21CA38660(v88, 0x65646F4D68737570, 0xE800000000000000, isUniquelyReferenced_nonNull_native);
  uint64_t v8 = v87;
  swift_bridgeObjectRelease();
  sub_21CB874E0();
  uint64_t v90 = MEMORY[0x263F8D538];
  *(double *)&long long v89 = v9 * 1000.0;
  sub_21CA38B20(&v89, v88);
  char v10 = swift_isUniquelyReferenced_nonNull_native();
  *(void *)&long long v87 = v8;
  sub_21CA38660(v88, 0x54746E6572727563, 0xEB00000000656D69, v10);
  uint64_t v11 = v87;
  swift_bridgeObjectRelease();
  uint64_t v12 = MEMORY[0x263F8D310];
  uint64_t v90 = MEMORY[0x263F8D310];
  *(void *)&long long v89 = 3157559;
  *((void *)&v89 + 1) = 0xE300000000000000;
  sub_21CA38B20(&v89, v88);
  char v13 = swift_isUniquelyReferenced_nonNull_native();
  *(void *)&long long v87 = v11;
  sub_21CA38660(v88, 0x6973726556707061, 0xEA00000000006E6FLL, v13);
  uint64_t v14 = v87;
  uint64_t v91 = v87;
  swift_bridgeObjectRelease();
  id v15 = objc_msgSend(v5, sel_productType);
  if (v15)
  {
    unint64_t v16 = v15;
    uint64_t v17 = sub_21CB882F0();
    uint64_t v19 = v18;

    uint64_t v90 = v12;
    *(void *)&long long v89 = v17;
    *((void *)&v89 + 1) = v19;
    sub_21CA38B20(&v89, v88);
    char v20 = swift_isUniquelyReferenced_nonNull_native();
    *(void *)&long long v87 = v14;
    sub_21CA38660(v88, 0x54746375646F7270, 0xEB00000000657079, v20);
    uint64_t v91 = v87;
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_21CB803A4(0x54746375646F7270, 0xEB00000000657079, &v89);
    sub_21CA34054((uint64_t)&v89);
  }
  id v21 = objc_msgSend(v5, sel_deviceClass, v84[0]);
  if (v21)
  {
    uint64_t v22 = v21;
    uint64_t v23 = sub_21CB882F0();
    uint64_t v25 = v24;

    uint64_t v90 = v12;
    *(void *)&long long v89 = v23;
    *((void *)&v89 + 1) = v25;
    sub_21CA38B20(&v89, v88);
    uint64_t v26 = v91;
    char v27 = swift_isUniquelyReferenced_nonNull_native();
    *(void *)&long long v87 = v26;
    sub_21CA38660(v88, 0x6C43656369766564, 0xEB00000000737361, v27);
    uint64_t v91 = v87;
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_21CB803A4(0x6C43656369766564, 0xEB00000000737361, &v89);
    sub_21CA34054((uint64_t)&v89);
  }
  id v28 = objc_msgSend(v5, sel_osVersion);
  if (v28)
  {
    uint64_t v29 = v28;
    uint64_t v30 = sub_21CB882F0();
    uint64_t v32 = v31;

    uint64_t v90 = v12;
    *(void *)&long long v89 = v30;
    *((void *)&v89 + 1) = v32;
    sub_21CA38B20(&v89, v88);
    uint64_t v33 = v91;
    char v34 = swift_isUniquelyReferenced_nonNull_native();
    *(void *)&long long v87 = v33;
    sub_21CA38660(v88, 0x6F6973726556736FLL, 0xE90000000000006ELL, v34);
    uint64_t v91 = v87;
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_21CB803A4(0x6F6973726556736FLL, 0xE90000000000006ELL, &v89);
    sub_21CA34054((uint64_t)&v89);
  }
  id v35 = objc_msgSend(v5, sel_osBuildVersion);
  if (v35)
  {
    uint64_t v36 = v35;
    uint64_t v37 = sub_21CB882F0();
    uint64_t v39 = v38;

    uint64_t v90 = v12;
    *(void *)&long long v89 = v37;
    *((void *)&v89 + 1) = v39;
    sub_21CA38B20(&v89, v88);
    uint64_t v40 = v91;
    char v41 = swift_isUniquelyReferenced_nonNull_native();
    *(void *)&long long v87 = v40;
    sub_21CA38660(v88, 0x646C697542736FLL, 0xE700000000000000, v41);
    uint64_t v91 = v87;
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_21CB803A4(0x646C697542736FLL, 0xE700000000000000, &v89);
    sub_21CA34054((uint64_t)&v89);
  }
  id v42 = objc_msgSend(v5, sel_deviceUDID);
  if (v42)
  {
    id v43 = v42;
    uint64_t v44 = sub_21CB882F0();
    uint64_t v46 = v45;

    uint64_t v90 = v12;
    *(void *)&long long v89 = v44;
    *((void *)&v89 + 1) = v46;
    sub_21CA38B20(&v89, v88);
    uint64_t v47 = v91;
    char v48 = swift_isUniquelyReferenced_nonNull_native();
    *(void *)&long long v87 = v47;
    sub_21CA38660(v88, 0x4455656369766564, 0xEA00000000004449, v48);
    uint64_t v49 = v87;
    uint64_t v91 = v87;
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_21CB803A4(0x4455656369766564, 0xEA00000000004449, &v89);
    sub_21CA34054((uint64_t)&v89);
    uint64_t v49 = v91;
  }
  uint64_t v90 = MEMORY[0x263F8D4F8];
  LOBYTE(v89) = 1;
  sub_21CA38B20(&v89, v88);
  char v50 = swift_isUniquelyReferenced_nonNull_native();
  *(void *)&long long v87 = v49;
  sub_21CA38660(v88, 0xD000000000000012, 0x800000021CB958D0, v50);
  uint64_t v51 = v87;
  swift_bridgeObjectRelease();
  if (qword_267C94950 != -1) {
    swift_once();
  }
  uint64_t v90 = v12;
  long long v89 = xmmword_267C95AD8;
  sub_21CA38B20(&v89, v88);
  swift_bridgeObjectRetain();
  char v52 = swift_isUniquelyReferenced_nonNull_native();
  *(void *)&long long v87 = v51;
  sub_21CA38660(v88, 0x4B53656369766564, 0xE900000000000055, v52);
  uint64_t v53 = v87;
  uint64_t v91 = v87;
  swift_bridgeObjectRelease();
  id result = objc_msgSend(self, sel_sharedConfiguration);
  if (!result)
  {
    __break(1u);
    return result;
  }
  uint64_t v55 = result;
  id v56 = objc_msgSend(result, sel_countryCode);

  if (v56)
  {
    uint64_t v57 = sub_21CB882F0();
    uint64_t v59 = v58;

    uint64_t v90 = v12;
    *(void *)&long long v89 = v57;
    *((void *)&v89 + 1) = v59;
    sub_21CA38B20(&v89, v88);
    char v60 = swift_isUniquelyReferenced_nonNull_native();
    *(void *)&long long v87 = v53;
    sub_21CA38660(v88, 0x437972746E756F63, 0xEB0000000065646FLL, v60);
    uint64_t v91 = v87;
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_21CB803A4(0x437972746E756F63, 0xEB0000000065646FLL, &v89);
    sub_21CA34054((uint64_t)&v89);
  }
  uint64_t v62 = v84[0];
  uint64_t v61 = v84[1];
  sub_21CB87620();
  uint64_t v63 = (void *)sub_21CB875F0();
  (*(void (**)(char *, uint64_t))(v0 + 8))(v2, v85);
  id v64 = objc_msgSend(v63, sel_objectForKey_, *MEMORY[0x263EFF4D0]);

  if (v64)
  {
    sub_21CB88A40();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v88, 0, sizeof(v88));
  }
  sub_21CA33FEC((uint64_t)v88, (uint64_t)&v89);
  if (!v90)
  {
    sub_21CA34054((uint64_t)&v89);
    goto LABEL_29;
  }
  uint64_t v65 = MEMORY[0x263F8D310];
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_29:
    sub_21CB803A4(0x6F436E6F69676572, 0xEA00000000006564, &v89);
    sub_21CA34054((uint64_t)&v89);
    goto LABEL_30;
  }
  uint64_t v90 = v65;
  long long v89 = v87;
  sub_21CA38B20(&v89, v88);
  uint64_t v66 = v91;
  char v67 = swift_isUniquelyReferenced_nonNull_native();
  *(void *)&long long v87 = v66;
  sub_21CA38660(v88, 0x6F436E6F69676572, 0xEA00000000006564, v67);
  uint64_t v91 = v87;
  swift_bridgeObjectRelease();
LABEL_30:
  id v68 = self;
  uint64_t v69 = (void *)sub_21CB882C0();
  os_log_type_t v70 = (void *)sub_21CB882C0();
  id v71 = objc_msgSend(v68, sel_stringForKey_inDomain_, v69, v70);

  if (v71)
  {
    uint64_t v72 = sub_21CB882F0();
    uint64_t v74 = v73;

    uint64_t v90 = v12;
    *(void *)&long long v89 = v72;
    *((void *)&v89 + 1) = v74;
    sub_21CA38B20(&v89, v88);
    uint64_t v75 = v91;
    char v76 = swift_isUniquelyReferenced_nonNull_native();
    *(void *)&long long v87 = v75;
    sub_21CA38660(v88, 0x6E656B6F54737061, 0xE800000000000000, v76);
    uint64_t v77 = v87;
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v77 = v91;
  }
  unint64_t v78 = (void *)sub_21CB882C0();
  uint64_t v79 = (void *)sub_21CB882C0();
  unsigned __int8 v80 = objc_msgSend(v68, sel_BOOLForKey_inDomain_, v78, v79);

  uint64_t v90 = MEMORY[0x263F8D4F8];
  LOBYTE(v89) = v80;
  sub_21CA38B20(&v89, v88);
  char v81 = swift_isUniquelyReferenced_nonNull_native();
  *(void *)&long long v87 = v77;
  sub_21CA38660(v88, 0xD000000000000010, 0x800000021CB958B0, v81);
  uint64_t v91 = v87;

  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v86 + 8))(v4, v62);
  uint64_t v82 = v91;
  uint64_t v83 = (void *)(v61 + qword_267C95AF8);
  swift_beginAccess();
  *uint64_t v83 = v82;
  return (id)swift_bridgeObjectRelease();
}

_OWORD *sub_21CA38660(_OWORD *a1, uint64_t a2, uint64_t a3, char a4)
{
  id v5 = (void **)v4;
  char v10 = (void *)*v4;
  unint64_t v12 = sub_21CA5BCE0(a2, a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 < v15 || (a4 & 1) == 0)
  {
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_21CA38B30();
      goto LABEL_7;
    }
    sub_21CA38820(v15, a4 & 1);
    unint64_t v21 = sub_21CA5BCE0(a2, a3);
    if ((v16 & 1) == (v22 & 1))
    {
      unint64_t v12 = v21;
      uint64_t v18 = *v5;
      if (v16) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    id result = (_OWORD *)sub_21CB88FA0();
    __break(1u);
    return result;
  }
LABEL_7:
  uint64_t v18 = *v5;
  if (v16)
  {
LABEL_8:
    uint64_t v19 = (_OWORD *)(v18[7] + 32 * v12);
    sub_21CA2B0D0((uint64_t)v19);
    return sub_21CA38B20(a1, v19);
  }
LABEL_13:
  sub_21CA387B4(v12, a2, a3, a1, v18);

  return (_OWORD *)swift_bridgeObjectRetain();
}

_OWORD *sub_21CA387B4(unint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4, void *a5)
{
  a5[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v6 = (void *)(a5[6] + 16 * a1);
  *uint64_t v6 = a2;
  v6[1] = a3;
  id result = sub_21CA38B20(a4, (_OWORD *)(a5[7] + 32 * a1));
  uint64_t v8 = a5[2];
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (v9) {
    __break(1u);
  }
  else {
    a5[2] = v10;
  }
  return result;
}

uint64_t sub_21CA38820(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_21CA57E34(&qword_267C94E08);
  uint64_t v6 = sub_21CB88D30();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    char v34 = (void *)(v5 + 64);
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v33 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v11 = v6 + 64;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    while (1)
    {
      if (v10)
      {
        unint64_t v16 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v17 = v16 | (v13 << 6);
      }
      else
      {
        int64_t v18 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v18 >= v33) {
          goto LABEL_34;
        }
        unint64_t v19 = v34[v18];
        ++v13;
        if (!v19)
        {
          int64_t v13 = v18 + 1;
          if (v18 + 1 >= v33) {
            goto LABEL_34;
          }
          unint64_t v19 = v34[v13];
          if (!v19)
          {
            int64_t v20 = v18 + 2;
            if (v20 >= v33)
            {
LABEL_34:
              swift_release();
              uint64_t v3 = v2;
              if (a2)
              {
                uint64_t v32 = 1 << *(unsigned char *)(v5 + 32);
                if (v32 >= 64) {
                  bzero(v34, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *char v34 = -1 << v32;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v19 = v34[v20];
            if (!v19)
            {
              while (1)
              {
                int64_t v13 = v20 + 1;
                if (__OFADD__(v20, 1)) {
                  goto LABEL_41;
                }
                if (v13 >= v33) {
                  goto LABEL_34;
                }
                unint64_t v19 = v34[v13];
                ++v20;
                if (v19) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v13 = v20;
          }
        }
LABEL_21:
        unint64_t v10 = (v19 - 1) & v19;
        unint64_t v17 = __clz(__rbit64(v19)) + (v13 << 6);
      }
      unint64_t v21 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v17);
      uint64_t v23 = *v21;
      uint64_t v22 = v21[1];
      uint64_t v24 = (_OWORD *)(*(void *)(v5 + 56) + 32 * v17);
      if (a2)
      {
        sub_21CA38B20(v24, v35);
      }
      else
      {
        sub_21CA4E524((uint64_t)v24, (uint64_t)v35);
        swift_bridgeObjectRetain();
      }
      sub_21CB89050();
      sub_21CB88380();
      uint64_t result = sub_21CB89090();
      uint64_t v25 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v26 = result & ~v25;
      unint64_t v27 = v26 >> 6;
      if (((-1 << v26) & ~*(void *)(v11 + 8 * (v26 >> 6))) != 0)
      {
        unint64_t v14 = __clz(__rbit64((-1 << v26) & ~*(void *)(v11 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v28 = 0;
        unint64_t v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v30 = v27 == v29;
          if (v27 == v29) {
            unint64_t v27 = 0;
          }
          v28 |= v30;
          uint64_t v31 = *(void *)(v11 + 8 * v27);
        }
        while (v31 == -1);
        unint64_t v14 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(void *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      uint64_t v15 = (void *)(*(void *)(v7 + 48) + 16 * v14);
      *uint64_t v15 = v23;
      v15[1] = v22;
      uint64_t result = (uint64_t)sub_21CA38B20(v35, (_OWORD *)(*(void *)(v7 + 56) + 32 * v14));
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

_OWORD *sub_21CA38B20(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

void *sub_21CA38B30()
{
  uint64_t v1 = v0;
  sub_21CA57E34(&qword_267C94E08);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_21CB88D20();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = (void *)swift_release();
LABEL_28:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v25 = v1;
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    unint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = 32 * v15;
    sub_21CA4E524(*(void *)(v2 + 56) + 32 * v15, (uint64_t)v26);
    unint64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    *unint64_t v21 = v19;
    v21[1] = v18;
    sub_21CA38B20(v26, (_OWORD *)(*(void *)(v4 + 56) + v20));
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13)
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    uint64_t v1 = v25;
    goto LABEL_28;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void sub_21CA38D18()
{
  uint64_t v1 = (uint64_t *)(v0 + qword_267C95AF0);
  swift_beginAccess();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v19 = *v1;
  *uint64_t v1 = 0x8000000000000000;
  sub_21CA390E8(3157553, 0xE300000000000000, 0xD000000000000015, 0x800000021CB959B0, isUniquelyReferenced_nonNull_native);
  *uint64_t v1 = v19;
  swift_bridgeObjectRelease();
  char v3 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v20 = *v1;
  *uint64_t v1 = 0x8000000000000000;
  sub_21CA390E8(49, 0xE100000000000000, 0xD000000000000013, 0x800000021CB959D0, v3);
  *uint64_t v1 = v20;
  swift_bridgeObjectRelease();
  char v4 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v21 = *v1;
  *uint64_t v1 = 0x8000000000000000;
  sub_21CA390E8(3157554, 0xE300000000000000, 0xD000000000000014, 0x800000021CB959F0, v4);
  *uint64_t v1 = v21;
  swift_bridgeObjectRelease();
  char v5 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v22 = *v1;
  *uint64_t v1 = 0x8000000000000000;
  sub_21CA390E8(0x72657665726F46, 0xE700000000000000, 0xD000000000000012, 0x800000021CB95A10, v5);
  *uint64_t v1 = v22;
  swift_bridgeObjectRelease();
  swift_endAccess();
  id v6 = objc_msgSend(self, sel_currentDevice);
  if (!v6)
  {
    __break(1u);
    return;
  }
  unint64_t v7 = v6;
  id v8 = objc_msgSend(v6, sel_serverFriendlyDescription);

  if (v8)
  {
    uint64_t v9 = sub_21CB882F0();
    uint64_t v11 = v10;

    swift_beginAccess();
    if (v11)
    {
      char v12 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v23 = *v1;
      *uint64_t v1 = 0x8000000000000000;
      sub_21CA390E8(v9, v11, 0xD000000000000011, 0x800000021CB95A30, v12);
      *uint64_t v1 = v23;
      goto LABEL_7;
    }
  }
  else
  {
    swift_beginAccess();
  }
  sub_21CB802BC(0xD000000000000011, 0x800000021CB95A30);
LABEL_7:
  swift_bridgeObjectRelease();
  swift_endAccess();
  id v13 = objc_msgSend(self, sel_sharedInstance);
  unsigned int v14 = objc_msgSend(v13, sel_isInternalBuild);

  if (v14)
  {
    id v15 = objc_msgSend(self, sel_standardUserDefaults);
    uint64_t v16 = (void *)sub_21CB882C0();
    unsigned int v17 = objc_msgSend(v15, sel_BOOLForKey_, v16);

    if (v17)
    {
      swift_beginAccess();
      char v18 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v24 = *v1;
      *uint64_t v1 = 0x8000000000000000;
      sub_21CA390E8(1702195828, 0xE400000000000000, 0xD000000000000018, 0x800000021CB95A70, v18);
      *uint64_t v1 = v24;
      swift_bridgeObjectRelease();
      swift_endAccess();
    }
  }
}

uint64_t sub_21CA390E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  id v6 = v5;
  uint64_t v12 = *v5;
  unint64_t v14 = sub_21CA5BCE0(a3, a4);
  uint64_t v15 = *(void *)(v12 + 16);
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v18 = v13;
  uint64_t v19 = *(void *)(v12 + 24);
  if (v19 >= v17 && (a5 & 1) != 0) {
    goto LABEL_7;
  }
  if (v19 >= v17 && (a5 & 1) == 0)
  {
    sub_21CB84AC4();
LABEL_7:
    uint64_t v20 = (void *)*v6;
    if (v18)
    {
LABEL_8:
      uint64_t v21 = (void *)(v20[7] + 16 * v14);
      uint64_t result = swift_bridgeObjectRelease();
      *uint64_t v21 = a1;
      v21[1] = a2;
      return result;
    }
    goto LABEL_11;
  }
  sub_21CA39270(v17, a5 & 1);
  unint64_t v23 = sub_21CA5BCE0(a3, a4);
  if ((v18 & 1) != (v24 & 1))
  {
LABEL_17:
    uint64_t result = sub_21CB88FA0();
    __break(1u);
    return result;
  }
  unint64_t v14 = v23;
  uint64_t v20 = (void *)*v6;
  if (v18) {
    goto LABEL_8;
  }
LABEL_11:
  v20[(v14 >> 6) + 8] |= 1 << v14;
  uint64_t v25 = (uint64_t *)(v20[6] + 16 * v14);
  *uint64_t v25 = a3;
  v25[1] = a4;
  unint64_t v26 = (void *)(v20[7] + 16 * v14);
  *unint64_t v26 = a1;
  v26[1] = a2;
  uint64_t v27 = v20[2];
  BOOL v28 = __OFADD__(v27, 1);
  uint64_t v29 = v27 + 1;
  if (v28)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  void v20[2] = v29;

  return swift_bridgeObjectRetain();
}

uint64_t sub_21CA39270(uint64_t a1, char a2)
{
  char v3 = v2;
  uint64_t v5 = *v2;
  sub_21CA57E34(&qword_267C97220);
  char v42 = a2;
  uint64_t v6 = sub_21CB88D30();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v41 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  uint64_t v39 = v2;
  int64_t v40 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v21 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v22 = v21 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v23 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v23 >= v40) {
      break;
    }
    char v24 = (void *)(v5 + 64);
    unint64_t v25 = *(void *)(v41 + 8 * v23);
    ++v13;
    if (!v25)
    {
      int64_t v13 = v23 + 1;
      if (v23 + 1 >= v40) {
        goto LABEL_33;
      }
      unint64_t v25 = *(void *)(v41 + 8 * v13);
      if (!v25)
      {
        int64_t v26 = v23 + 2;
        if (v26 >= v40)
        {
LABEL_33:
          swift_release();
          char v3 = v39;
          if ((v42 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v25 = *(void *)(v41 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            int64_t v13 = v26 + 1;
            if (__OFADD__(v26, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v40) {
              goto LABEL_33;
            }
            unint64_t v25 = *(void *)(v41 + 8 * v13);
            ++v26;
            if (v25) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v26;
      }
    }
LABEL_30:
    unint64_t v10 = (v25 - 1) & v25;
    unint64_t v22 = __clz(__rbit64(v25)) + (v13 << 6);
LABEL_31:
    uint64_t v31 = 16 * v22;
    uint64_t v32 = (uint64_t *)(*(void *)(v5 + 48) + v31);
    uint64_t v34 = *v32;
    uint64_t v33 = v32[1];
    id v35 = (uint64_t *)(*(void *)(v5 + 56) + v31);
    uint64_t v36 = *v35;
    uint64_t v37 = v35[1];
    if ((v42 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_21CB89050();
    sub_21CB88380();
    uint64_t result = sub_21CB89090();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v27 = 0;
      unint64_t v28 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v29 = v16 == v28;
        if (v16 == v28) {
          unint64_t v16 = 0;
        }
        v27 |= v29;
        uint64_t v30 = *(void *)(v11 + 8 * v16);
      }
      while (v30 == -1);
      unint64_t v17 = __clz(__rbit64(~v30)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t v18 = 16 * v17;
    uint64_t v19 = (void *)(*(void *)(v7 + 48) + v18);
    *uint64_t v19 = v34;
    v19[1] = v33;
    uint64_t v20 = (void *)(*(void *)(v7 + 56) + v18);
    *uint64_t v20 = v36;
    v20[1] = v37;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  char v3 = v39;
  char v24 = (void *)(v5 + 64);
  if ((v42 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v38 = 1 << *(unsigned char *)(v5 + 32);
  if (v38 >= 64) {
    bzero(v24, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *char v24 = -1 << v38;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *char v3 = v7;
  return result;
}

uint64_t sub_21CA39598@<X0>(unsigned char *a1@<X8>)
{
  return sub_21CA395B4(*(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

uint64_t sub_21CA395B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t v7 = sub_21CB88100();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  long long v120 = (char *)v113 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v121 = sub_21CB88150();
  uint64_t v119 = *(void *)(v121 - 8);
  MEMORY[0x270FA5388](v121);
  long long v118 = (char *)v113 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void *)(a2 + 600);
  swift_bridgeObjectRetain();
  char v12 = sub_21CA3A47C(a1, v11);
  uint64_t result = swift_bridgeObjectRelease();
  if (v12)
  {
    *a3 = 0;
    return result;
  }
  uint64_t v114 = v8;
  uint64_t v115 = v7;
  long long v116 = a3;
  uint64_t v117 = v3;
  *(void *)(a2 + 576) = 0;
  swift_bridgeObjectRelease();
  *(void *)(a2 + 624) = 0;
  swift_bridgeObjectRelease();
  int64_t v14 = *(void *)(a1 + 16);
  uint64_t v15 = MEMORY[0x263F8EE78];
  uint64_t v122 = a2;
  long long v124 = (void *)a1;
  if (v14)
  {
    aBlock[0] = MEMORY[0x263F8EE78];
    sub_21CA3A44C(0, v14, 0);
    uint64_t v125 = sub_21CA57E34(&qword_267C97210);
    a2 = a1 + 48;
    long long v123 = (void *)v14;
    do
    {
      uint64_t v16 = *(void *)(a2 - 8);
      char v17 = *(unsigned char *)a2;
      uint64_t v132 = *(void *)(a2 - 16);
      uint64_t v133 = v16;
      char v134 = v17;
      uint64_t v18 = (void *)sub_21CB88D40();
      uint64_t v15 = v132;
      uint64_t v19 = v133;
      char v20 = v134;
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      unint64_t v21 = sub_21CA5BCE0(v15, v19);
      if (v22)
      {
        __break(1u);
LABEL_71:
        __break(1u);
LABEL_72:
        __break(1u);
        goto LABEL_73;
      }
      v18[(v21 >> 6) + 8] |= 1 << v21;
      int64_t v23 = (uint64_t *)(v18[6] + 16 * v21);
      *int64_t v23 = v15;
      v23[1] = v19;
      *(unsigned char *)(v18[7] + v21) = v20;
      uint64_t v24 = v18[2];
      BOOL v25 = __OFADD__(v24, 1);
      uint64_t v26 = v24 + 1;
      if (v25) {
        goto LABEL_71;
      }
      void v18[2] = v26;
      sub_21CA57E34(&qword_267C97218);
      swift_arrayDestroy();
      swift_release();
      uint64_t v15 = aBlock[0];
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_21CA3A44C(0, *(void *)(v15 + 16) + 1, 1);
        uint64_t v15 = aBlock[0];
      }
      unint64_t v28 = *(void *)(v15 + 16);
      unint64_t v27 = *(void *)(v15 + 24);
      if (v28 >= v27 >> 1)
      {
        sub_21CA3A44C(v27 > 1, v28 + 1, 1);
        uint64_t v15 = aBlock[0];
      }
      a2 += 24;
      *(void *)(v15 + 16) = v28 + 1;
      *(void *)(v15 + 8 * v28 + 32) = v18;
      --v14;
    }
    while (v14);
    a2 = v122;
    int64_t v14 = (int64_t)v123;
  }
  if (qword_267C94990 != -1) {
    goto LABEL_76;
  }
  while (2)
  {
    uint64_t v29 = sub_21CB880A0();
    uint64_t v30 = sub_21CA4CC18(v29, (uint64_t)qword_267CA5368);
    swift_bridgeObjectRetain();
    v113[2] = v30;
    uint64_t v31 = sub_21CB88070();
    os_log_type_t v32 = sub_21CB88880();
    if (os_log_type_enabled(v31, v32))
    {
      uint64_t v33 = (uint8_t *)swift_slowAlloc();
      uint64_t v34 = swift_slowAlloc();
      aBlock[0] = v34;
      *(_DWORD *)uint64_t v33 = 136315138;
      uint64_t v125 = (uint64_t)(v33 + 4);
      swift_bridgeObjectRetain();
      uint64_t v35 = sub_21CA57E34(&qword_267C95248);
      uint64_t v36 = MEMORY[0x21D4B5620](v15, v35);
      unint64_t v38 = v37;
      swift_bridgeObjectRelease();
      uint64_t v135 = sub_21CA4E450(v36, v38, aBlock);
      sub_21CB889C0();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_21CA00000, v31, v32, "FMFDataManager: Shallow locate in progress (in) - %s", v33, 0xCu);
      swift_arrayDestroy();
      uint64_t v39 = v34;
      a2 = v122;
      MEMORY[0x21D4B6B70](v39, -1, -1);
      MEMORY[0x21D4B6B70](v33, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    if (v14)
    {
      int64_t v40 = (unsigned __int8 *)(swift_bridgeObjectRetain() + 48);
      uint64_t v41 = (void *)MEMORY[0x263F8EE80];
      while (1)
      {
        int64_t v43 = v14;
        uint64_t v44 = *((void *)v40 - 2);
        uint64_t v15 = *((void *)v40 - 1);
        int64_t v14 = *v40;
        swift_bridgeObjectRetain_n();
        uint64_t v45 = (uint64_t)v41;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        aBlock[0] = v45;
        unint64_t v48 = sub_21CA5BCE0(v44, v15);
        uint64_t v49 = *(void *)(v45 + 16);
        BOOL v50 = (v47 & 1) == 0;
        uint64_t v51 = v49 + v50;
        if (__OFADD__(v49, v50)) {
          goto LABEL_72;
        }
        a2 = v47;
        if (*(void *)(v45 + 24) >= v51)
        {
          if (isUniquelyReferenced_nonNull_native)
          {
            uint64_t v41 = (void *)aBlock[0];
            if ((v47 & 1) == 0) {
              goto LABEL_28;
            }
          }
          else
          {
            sub_21CB85918();
            uint64_t v41 = (void *)aBlock[0];
            if ((a2 & 1) == 0) {
              goto LABEL_28;
            }
          }
        }
        else
        {
          sub_21CA3A42C(v51, isUniquelyReferenced_nonNull_native);
          unint64_t v52 = sub_21CA5BCE0(v44, v15);
          if ((a2 & 1) != (v53 & 1))
          {
            uint64_t result = sub_21CB88FA0();
            __break(1u);
            return result;
          }
          unint64_t v48 = v52;
          uint64_t v41 = (void *)aBlock[0];
          if ((a2 & 1) == 0)
          {
LABEL_28:
            v41[(v48 >> 6) + 8] |= 1 << v48;
            uint64_t v54 = (uint64_t *)(v41[6] + 16 * v48);
            *uint64_t v54 = v44;
            v54[1] = v15;
            uint64_t v55 = v41[7] + 24 * v48;
            *(void *)uint64_t v55 = v44;
            *(void *)(v55 + 8) = v15;
            *(unsigned char *)(v55 + 16) = v14;
            uint64_t v56 = v41[2];
            BOOL v25 = __OFADD__(v56, 1);
            uint64_t v57 = v56 + 1;
            if (v25) {
              goto LABEL_75;
            }
            void v41[2] = v57;
            swift_bridgeObjectRetain();
            goto LABEL_20;
          }
        }
        uint64_t v42 = v41[7] + 24 * v48;
        swift_bridgeObjectRelease();
        *(void *)uint64_t v42 = v44;
        *(void *)(v42 + 8) = v15;
        *(unsigned char *)(v42 + 16) = v14;
LABEL_20:
        v40 += 24;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        int64_t v14 = v43 - 1;
        if (v43 == 1)
        {
          swift_bridgeObjectRelease();
          a2 = v122;
          goto LABEL_34;
        }
      }
    }
    uint64_t v41 = (void *)MEMORY[0x263F8EE80];
LABEL_34:
    uint64_t v135 = MEMORY[0x263F8EE78];
    uint64_t v58 = *(void *)(*(void *)(a2 + 600) + 16);
    if (!v58) {
      goto LABEL_55;
    }
    uint64_t v125 = swift_bridgeObjectRetain();
    uint64_t v59 = (unsigned char *)(v125 + 48);
    do
    {
      uint64_t v60 = *((void *)v59 - 2);
      uint64_t v61 = *((void *)v59 - 1);
      char v62 = *v59;
      uint64_t v63 = v41[2];
      swift_bridgeObjectRetain();
      if (v63)
      {
        swift_bridgeObjectRetain();
        unint64_t v64 = sub_21CA5BCE0(v60, v61);
        if (v65)
        {
          uint64_t v66 = v41[7] + 24 * v64;
          uint64_t v67 = *(void *)v66;
          uint64_t v68 = *(void *)(v66 + 8);
          char v69 = *(unsigned char *)(v66 + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease_n();
          os_log_type_t v70 = (void *)v135;
          swift_bridgeObjectRetain();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            os_log_type_t v70 = sub_21CA3A438(0, v70[2] + 1, 1, v70);
          }
          unint64_t v72 = v70[2];
          unint64_t v71 = v70[3];
          if (v72 >= v71 >> 1) {
            os_log_type_t v70 = sub_21CA3A438((void *)(v71 > 1), v72 + 1, 1, v70);
          }
          v70[2] = v72 + 1;
          uint64_t v73 = &v70[3 * v72];
          v73[4] = v67;
          v73[5] = v68;
          *((unsigned char *)v73 + 48) = v69;
          uint64_t v135 = (uint64_t)v70;
          swift_bridgeObjectRetain();
          unint64_t v74 = sub_21CA5BCE0(v67, v68);
          char v76 = v75;
          swift_bridgeObjectRelease();
          if (v76)
          {
            char v77 = swift_isUniquelyReferenced_nonNull_native();
            aBlock[0] = (uint64_t)v41;
            if ((v77 & 1) == 0)
            {
              sub_21CB85918();
              uint64_t v41 = (void *)aBlock[0];
            }
            swift_bridgeObjectRelease();
            sub_21CA3A428(v74, v41);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          swift_bridgeObjectRelease();
          goto LABEL_37;
        }
        swift_bridgeObjectRelease();
      }
      unint64_t v78 = (void *)v135;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v78 = sub_21CA3A438(0, v78[2] + 1, 1, v78);
      }
      unint64_t v80 = v78[2];
      unint64_t v79 = v78[3];
      if (v80 >= v79 >> 1) {
        unint64_t v78 = sub_21CA3A438((void *)(v79 > 1), v80 + 1, 1, v78);
      }
      v78[2] = v80 + 1;
      char v81 = &v78[3 * v80];
      v81[4] = v60;
      v81[5] = v61;
      *((unsigned char *)v81 + 48) = v62;
      uint64_t v135 = (uint64_t)v78;
LABEL_37:
      v59 += 24;
      --v58;
    }
    while (v58);
    swift_bridgeObjectRelease();
    a2 = v122;
LABEL_55:
    uint64_t v82 = swift_bridgeObjectRetain();
    sub_21CA3A6E0(v82);
    uint64_t v83 = v135;
    *(void *)(a2 + 600) = v135;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    int64_t v84 = *(void *)(v83 + 16);
    if (v84)
    {
      aBlock[0] = MEMORY[0x263F8EE78];
      swift_bridgeObjectRetain();
      sub_21CA3BE08(0, v84, 0);
      uint64_t v125 = sub_21CA57E34(&qword_267C97220);
      long long v123 = &v128;
      v113[1] = v83;
      uint64_t v15 = v83 + 48;
      long long v124 = v41;
      while (1)
      {
        uint64_t v85 = *(void *)(v15 - 8);
        char v86 = *(unsigned char *)v15;
        uint64_t v128 = *(void *)(v15 - 16);
        uint64_t v129 = v85;
        LOBYTE(v126) = v86;
        swift_bridgeObjectRetain_n();
        uint64_t v130 = sub_21CB88330();
        uint64_t v131 = v87;
        int64_t v14 = sub_21CB88D40();
        a2 = v128;
        uint64_t v88 = v129;
        uint64_t v90 = v130;
        uint64_t v89 = v131;
        swift_retain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        unint64_t v91 = sub_21CA5BCE0(a2, v88);
        if (v92) {
          break;
        }
        *(void *)(v14 + 8 * (v91 >> 6) + 64) |= 1 << v91;
        uint64_t v93 = (uint64_t *)(*(void *)(v14 + 48) + 16 * v91);
        *uint64_t v93 = a2;
        v93[1] = v88;
        char v94 = (uint64_t *)(*(void *)(v14 + 56) + 16 * v91);
        *char v94 = v90;
        v94[1] = v89;
        uint64_t v95 = *(void *)(v14 + 16);
        BOOL v25 = __OFADD__(v95, 1);
        uint64_t v96 = v95 + 1;
        if (v25) {
          goto LABEL_74;
        }
        *(void *)(v14 + 16) = v96;
        sub_21CA57E34(&qword_267C97228);
        swift_arrayDestroy();
        swift_bridgeObjectRelease();
        swift_release();
        uint64_t v97 = aBlock[0];
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_21CA3BE08(0, *(void *)(v97 + 16) + 1, 1);
          uint64_t v97 = aBlock[0];
        }
        unint64_t v99 = *(void *)(v97 + 16);
        unint64_t v98 = *(void *)(v97 + 24);
        if (v99 >= v98 >> 1)
        {
          sub_21CA3BE08(v98 > 1, v99 + 1, 1);
          uint64_t v97 = aBlock[0];
        }
        v15 += 24;
        *(void *)(v97 + 16) = v99 + 1;
        *(void *)(v97 + 8 * v99 + 32) = v14;
        if (!--v84)
        {
          swift_bridgeObjectRelease_n();
          a2 = v122;
          goto LABEL_66;
        }
      }
LABEL_73:
      __break(1u);
LABEL_74:
      __break(1u);
LABEL_75:
      __break(1u);
LABEL_76:
      swift_once();
      continue;
    }
    break;
  }
  swift_bridgeObjectRelease();
  uint64_t v97 = MEMORY[0x263F8EE78];
LABEL_66:
  swift_bridgeObjectRetain();
  id v100 = sub_21CB88070();
  os_log_type_t v101 = sub_21CB88880();
  if (os_log_type_enabled(v100, v101))
  {
    uint64_t v102 = (uint8_t *)swift_slowAlloc();
    uint64_t v103 = swift_slowAlloc();
    aBlock[0] = v103;
    *(_DWORD *)uint64_t v102 = 136315138;
    uint64_t v125 = (uint64_t)(v102 + 4);
    swift_bridgeObjectRetain();
    uint64_t v104 = sub_21CA57E34(&qword_267C95238);
    uint64_t v105 = MEMORY[0x21D4B5620](v97, v104);
    unint64_t v107 = v106;
    swift_bridgeObjectRelease();
    uint64_t v108 = v105;
    a2 = v122;
    uint64_t v126 = sub_21CA4E450(v108, v107, aBlock);
    sub_21CB889C0();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_21CA00000, v100, v101, "FMFDataManager: Shallow locate in progress (out) - %s", v102, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x21D4B6B70](v103, -1, -1);
    MEMORY[0x21D4B6B70](v102, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v109 = v115;
  aBlock[4] = (uint64_t)sub_21CA331C4;
  void aBlock[5] = a2;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  uint64_t aBlock[2] = (uint64_t)sub_21CA1B084;
  uint64_t aBlock[3] = (uint64_t)&unk_26CD6E758;
  long long v110 = _Block_copy(aBlock);
  swift_retain();
  long long v111 = v118;
  sub_21CB88120();
  uint64_t v126 = MEMORY[0x263F8EE78];
  sub_21CA36540((unint64_t *)&qword_267C96FC0, MEMORY[0x263F8F030]);
  sub_21CA57E34((uint64_t *)&unk_267C96DD0);
  sub_21CA356BC((unint64_t *)&qword_267C96FD0, (uint64_t *)&unk_267C96DD0);
  long long v112 = v120;
  sub_21CB88A60();
  MEMORY[0x21D4B5A20](0, v111, v112, v110);
  _Block_release(v110);
  (*(void (**)(char *, uint64_t))(v114 + 8))(v112, v109);
  (*(void (**)(char *, uint64_t))(v119 + 8))(v111, v121);
  swift_release();
  *long long v116 = 1;
  return swift_bridgeObjectRelease();
}

uint64_t sub_21CA3A42C(uint64_t a1, char a2)
{
  return sub_21CA3BAD8(a1, a2, &qword_267C97BD0);
}

void *sub_21CA3A438(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_21CA3CD1C(a1, a2, a3, a4, &qword_267C95210);
}

uint64_t sub_21CA3A44C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_21CA3BE38(a1, a2, a3, (void *)*v3, &qword_267C95240, &qword_267C95248);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_21CA3A47C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  char v5 = *(unsigned char *)(a1 + 48);
  unsigned __int8 v6 = *(unsigned char *)(a2 + 48);
  BOOL v7 = *(void *)(a1 + 32) == *(void *)(a2 + 32) && *(void *)(a1 + 40) == *(void *)(a2 + 40);
  if (v7 || (v8 = sub_21CB88F50(), uint64_t result = 0, (v8 & 1) != 0))
  {
    uint64_t v10 = (unsigned __int8 *)(a2 + 72);
    for (uint64_t i = (unsigned char *)(a1 + 72); ; i += 24)
    {
      --v2;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v5)
      {
        if (v5 == 1)
        {
          uint64_t v12 = 0x4C676E69646E6570;
          unint64_t v13 = 0xEF676E697461636FLL;
          int v14 = v6;
          if (!v6) {
            goto LABEL_21;
          }
        }
        else
        {
          uint64_t v12 = 0x6F4C646573756170;
          unint64_t v13 = 0xEE00676E69746163;
          int v14 = v6;
          if (!v6)
          {
LABEL_21:
            unint64_t v15 = 0xE400000000000000;
            if (v12 != 1701736302) {
              goto LABEL_26;
            }
            goto LABEL_24;
          }
        }
      }
      else
      {
        unint64_t v13 = 0xE400000000000000;
        uint64_t v12 = 1701736302;
        int v14 = v6;
        if (!v6) {
          goto LABEL_21;
        }
      }
      if (v14 == 1)
      {
        unint64_t v15 = 0xEF676E697461636FLL;
        if (v12 != 0x4C676E69646E6570) {
          goto LABEL_26;
        }
      }
      else
      {
        unint64_t v15 = 0xEE00676E69746163;
        if (v12 != 0x6F4C646573756170) {
          goto LABEL_26;
        }
      }
LABEL_24:
      if (v13 == v15)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        goto LABEL_27;
      }
LABEL_26:
      char v16 = sub_21CB88F50();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v16 & 1) == 0) {
        return 0;
      }
LABEL_27:
      if (!v2) {
        return 1;
      }
      char v5 = *i;
      unsigned __int8 v6 = *v10;
      if ((*((void *)i - 2) != *((void *)v10 - 2) || *((void *)i - 1) != *((void *)v10 - 1))
        && (sub_21CB88F50() & 1) == 0)
      {
        return 0;
      }
      v10 += 24;
    }
  }
  return result;
}

uint64_t sub_21CA3A6E0(uint64_t a1)
{
  return sub_21CA3BFC8(a1, (uint64_t (*)(void))sub_21CA3A438, (uint64_t (*)(void *, uint64_t, uint64_t, uint64_t))sub_21CA3D8D0);
}

uint64_t sub_21CA3A70C@<X0>(uint64_t a1@<X0>, void *a2@<X1>, unsigned char *a3@<X8>)
{
  v164 = (int *)type metadata accessor for FMFFriend();
  uint64_t v154 = *((void *)v164 - 1);
  uint64_t v7 = MEMORY[0x270FA5388](v164);
  uint64_t v9 = (char *)&v147 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x270FA5388](v7);
  uint64_t v12 = (char *)&v147 - v11;
  uint64_t v13 = MEMORY[0x270FA5388](v10);
  unint64_t v15 = (uint64_t *)((char *)&v147 - v14);
  MEMORY[0x270FA5388](v13);
  uint64_t v158 = (uint64_t)&v147 - v16;
  uint64_t v17 = sub_21CA57E34(&qword_267C96F10);
  uint64_t v18 = MEMORY[0x270FA5388](v17 - 8);
  uint64_t v161 = (uint64_t)&v147 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  uint64_t v163 = (uint64_t)&v147 - v20;
  uint64_t v21 = a2[73];
  swift_bridgeObjectRetain();
  char v22 = sub_21CA3D680(a1, v21);
  uint64_t result = swift_bridgeObjectRelease();
  if (v22)
  {
    *a3 = 0;
    return result;
  }
  v151 = v12;
  v152 = v9;
  v148 = a3;
  uint64_t v149 = v3;
  a2[72] = 0;
  swift_bridgeObjectRelease();
  a2[78] = 0;
  swift_bridgeObjectRelease();
  int64_t v24 = *(void *)(a1 + 16);
  uint64_t v25 = MEMORY[0x263F8EE78];
  v159 = a2;
  int64_t v160 = v24;
  uint64_t v150 = a1;
  if (v24)
  {
    v167[0] = MEMORY[0x263F8EE78];
    sub_21CA3BE08(0, v24, 0);
    uint64_t v165 = sub_21CA57E34(&qword_267C97220);
    v162 = &v173;
    unint64_t v26 = a1 + 48;
    int64_t v27 = v24;
    do
    {
      uint64_t v28 = *(void *)(v26 - 8);
      int v29 = *(unsigned __int8 *)v26;
      uint64_t v173 = *(void *)(v26 - 16);
      uint64_t v174 = v28;
      uint64_t v166 = v27;
      if (v29)
      {
        if (v29 == 1)
        {
          unint64_t v30 = 0xE700000000000000;
          uint64_t v31 = 0x776F6C6C616873;
        }
        else
        {
          unint64_t v30 = 0xE400000000000000;
          uint64_t v31 = 1885693284;
        }
      }
      else
      {
        unint64_t v30 = 0xE400000000000000;
        uint64_t v31 = 1701736302;
      }
      uint64_t v175 = v31;
      unint64_t v176 = v30;
      os_log_type_t v32 = (void *)sub_21CB88D40();
      uint64_t v33 = v173;
      uint64_t v34 = v174;
      uint64_t v35 = v175;
      uint64_t v25 = v176;
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      unint64_t v36 = sub_21CA5BCE0(v33, v34);
      if (v37)
      {
        __break(1u);
LABEL_108:
        __break(1u);
        goto LABEL_109;
      }
      v32[(v36 >> 6) + 8] |= 1 << v36;
      unint64_t v38 = (uint64_t *)(v32[6] + 16 * v36);
      *unint64_t v38 = v33;
      v38[1] = v34;
      uint64_t v39 = (uint64_t *)(v32[7] + 16 * v36);
      *uint64_t v39 = v35;
      v39[1] = v25;
      uint64_t v40 = v32[2];
      BOOL v41 = __OFADD__(v40, 1);
      uint64_t v42 = v40 + 1;
      if (v41) {
        goto LABEL_108;
      }
      void v32[2] = v42;
      sub_21CA57E34(&qword_267C97228);
      swift_arrayDestroy();
      swift_release();
      uint64_t v25 = v167[0];
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_21CA3BE08(0, *(void *)(v25 + 16) + 1, 1);
        uint64_t v25 = v167[0];
      }
      uint64_t v43 = v166;
      unint64_t v45 = *(void *)(v25 + 16);
      unint64_t v44 = *(void *)(v25 + 24);
      if (v45 >= v44 >> 1)
      {
        sub_21CA3BE08(v44 > 1, v45 + 1, 1);
        uint64_t v25 = v167[0];
      }
      v26 += 24;
      *(void *)(v25 + 16) = v45 + 1;
      *(void *)(v25 + 8 * v45 + 32) = v32;
      int64_t v27 = v43 - 1;
    }
    while (v27);
    unint64_t v26 = (unint64_t)v159;
  }
  else
  {
    unint64_t v26 = (unint64_t)a2;
  }
  if (qword_267C94990 != -1) {
    goto LABEL_113;
  }
  while (2)
  {
    uint64_t v46 = sub_21CB880A0();
    uint64_t v47 = sub_21CA4CC18(v46, (uint64_t)qword_267CA5368);
    swift_bridgeObjectRetain();
    uint64_t v147 = v47;
    unint64_t v48 = sub_21CB88070();
    os_log_type_t v49 = sub_21CB88880();
    if (os_log_type_enabled(v48, v49))
    {
      BOOL v50 = (uint8_t *)swift_slowAlloc();
      uint64_t v51 = swift_slowAlloc();
      *(_DWORD *)BOOL v50 = 136315138;
      uint64_t v166 = (uint64_t)(v50 + 4);
      v167[0] = v51;
      swift_bridgeObjectRetain();
      uint64_t v52 = sub_21CA57E34(&qword_267C95238);
      uint64_t v53 = MEMORY[0x21D4B5620](v25, v52);
      unint64_t v55 = v54;
      swift_bridgeObjectRelease();
      uint64_t v177 = sub_21CA4E450(v53, v55, v167);
      sub_21CB889C0();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_21CA00000, v48, v49, "FMFDataManager: Locate in progress (in) - %s", v50, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x21D4B6B70](v51, -1, -1);
      uint64_t v56 = v50;
      unint64_t v26 = (unint64_t)v159;
      MEMORY[0x21D4B6B70](v56, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    uint64_t v57 = v158;
    if (v160)
    {
      v153 = (unsigned char *)(v26 + 672);
      uint64_t v157 = v150 + 32;
      v156 = (void (**)(uint64_t, uint64_t, uint64_t, int *))(v154 + 56);
      v155 = (unsigned int (**)(uint64_t, uint64_t, int *))(v154 + 48);
      swift_bridgeObjectRetain();
      uint64_t v58 = 0;
      uint64_t v59 = (void *)MEMORY[0x263F8EE80];
      while (1)
      {
        uint64_t v165 = v58;
        uint64_t v61 = v157 + 24 * v58;
        uint64_t v62 = *(void *)v61;
        uint64_t v25 = *(void *)(v61 + 8);
        LODWORD(v162) = *(unsigned __int8 *)(v61 + 16);
        swift_bridgeObjectRetain();
        uint64_t v63 = sub_21CA4ECF8();
        uint64_t v64 = *(void *)(v63 + 16);
        uint64_t v166 = (uint64_t)v59;
        if (v64)
        {
          uint64_t v65 = v63 + ((*(unsigned __int8 *)(v154 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v154 + 80));
          uint64_t v66 = *(void *)(v154 + 72);
          while (1)
          {
            sub_21CA571E8(v65, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for FMFFriend);
            BOOL v67 = *v15 == v62 && v15[1] == v25;
            if (v67 || (sub_21CB88F50() & 1) != 0) {
              break;
            }
            sub_21CA57050((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for FMFFriend);
            v65 += v66;
            if (!--v64)
            {
              uint64_t v68 = 1;
              unint64_t v69 = (unint64_t)v159;
              uint64_t v57 = v158;
              goto LABEL_38;
            }
          }
          uint64_t v70 = v163;
          sub_21CA591A4((uint64_t)v15, v163, (uint64_t (*)(void))type metadata accessor for FMFFriend);
          uint64_t v68 = 0;
          unint64_t v69 = (unint64_t)v159;
          uint64_t v57 = v158;
        }
        else
        {
          unint64_t v69 = v26;
          uint64_t v68 = 1;
LABEL_38:
          uint64_t v70 = v163;
        }
        unint64_t v71 = v164;
        (*v156)(v70, v68, 1, v164);
        swift_bridgeObjectRelease();
        uint64_t v72 = v161;
        sub_21CA24E80(v70, v161, &qword_267C96F10);
        if ((*v155)(v72, 1, v71) != 1) {
          break;
        }
        sub_21CA1B88C(v70, &qword_267C96F10);
        swift_bridgeObjectRelease();
        uint64_t v60 = v72;
        unint64_t v26 = v69;
        uint64_t v59 = (void *)v166;
LABEL_26:
        uint64_t v58 = v165 + 1;
        sub_21CA1B88C(v60, &qword_267C96F10);
        if (v58 == v160)
        {
          swift_bridgeObjectRelease();
          goto LABEL_67;
        }
      }
      sub_21CA591A4(v72, v57, (uint64_t (*)(void))type metadata accessor for FMFFriend);
      if (*v153 != 1)
      {
        int v75 = *(unsigned __int8 *)(v57 + v164[12]);
        if (v75 == 2)
        {
          uint64_t v76 = (uint64_t)v152;
          sub_21CA571E8(v57, (uint64_t)v152, (uint64_t (*)(void))type metadata accessor for FMFFriend);
          uint64_t v59 = (void *)v166;
LABEL_49:
          sub_21CA57050(v76, (uint64_t (*)(void))type metadata accessor for FMFFriend);
LABEL_50:
          swift_bridgeObjectRetain();
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          v167[0] = (uint64_t)v59;
          unint64_t v26 = sub_21CA5BCE0(v62, v25);
          uint64_t v80 = v59[2];
          BOOL v81 = (v79 & 1) == 0;
          uint64_t v82 = v80 + v81;
          if (__OFADD__(v80, v81)) {
            goto LABEL_111;
          }
          char v83 = v79;
          if (v59[3] >= v82)
          {
            uint64_t v86 = v163;
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            {
              sub_21CB84E2C();
              goto LABEL_54;
            }
          }
          else
          {
            sub_21CA3BDFC(v82, isUniquelyReferenced_nonNull_native);
            unint64_t v84 = sub_21CA5BCE0(v62, v25);
            if ((v83 & 1) != (v85 & 1))
            {
              uint64_t result = sub_21CB88FA0();
              __break(1u);
              return result;
            }
            unint64_t v26 = v84;
LABEL_54:
            uint64_t v86 = v163;
          }
          uint64_t v59 = (void *)v167[0];
          if (v83)
          {
            uint64_t v87 = *(void *)(v167[0] + 56) + 24 * v26;
            swift_bridgeObjectRelease();
            *(void *)uint64_t v87 = v62;
            *(void *)(v87 + 8) = v25;
            *(unsigned char *)(v87 + 16) = (_BYTE)v162;
          }
          else
          {
            *(void *)(v167[0] + 8 * (v26 >> 6) + 64) |= 1 << v26;
            uint64_t v88 = (uint64_t *)(v59[6] + 16 * v26);
            *uint64_t v88 = v62;
            v88[1] = v25;
            uint64_t v89 = v59[7] + 24 * v26;
            *(void *)uint64_t v89 = v62;
            *(void *)(v89 + 8) = v25;
            *(unsigned char *)(v89 + 16) = (_BYTE)v162;
            uint64_t v90 = v59[2];
            BOOL v41 = __OFADD__(v90, 1);
            uint64_t v91 = v90 + 1;
            if (v41) {
              goto LABEL_112;
            }
            v59[2] = v91;
            swift_bridgeObjectRetain();
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v57 = v158;
          sub_21CA57050(v158, (uint64_t (*)(void))type metadata accessor for FMFFriend);
          uint64_t v60 = v86;
          unint64_t v26 = (unint64_t)v159;
          goto LABEL_26;
        }
        unint64_t v26 = v69;
        uint64_t v76 = (uint64_t)v152;
        sub_21CA571E8(v57, (uint64_t)v152, (uint64_t (*)(void))type metadata accessor for FMFFriend);
        uint64_t v59 = (void *)v166;
        if ((v75 & 1) == 0) {
          goto LABEL_49;
        }
        int v92 = *(unsigned __int8 *)(v76 + v164[13]);
        sub_21CA57050(v76, (uint64_t (*)(void))type metadata accessor for FMFFriend);
        if (v92 == 1) {
          goto LABEL_50;
        }
        goto LABEL_63;
      }
      int v73 = *(unsigned __int8 *)(v57 + v164[11]);
      unint64_t v26 = v69;
      if (v73 == 2)
      {
        uint64_t v74 = (uint64_t)v151;
        sub_21CA571E8(v57, (uint64_t)v151, (uint64_t (*)(void))type metadata accessor for FMFFriend);
        uint64_t v59 = (void *)v166;
      }
      else
      {
        uint64_t v74 = (uint64_t)v151;
        sub_21CA571E8(v57, (uint64_t)v151, (uint64_t (*)(void))type metadata accessor for FMFFriend);
        uint64_t v59 = (void *)v166;
        if (v73)
        {
          sub_21CA57050(v74, (uint64_t (*)(void))type metadata accessor for FMFFriend);
LABEL_63:
          swift_bridgeObjectRelease();
          sub_21CA57050(v57, (uint64_t (*)(void))type metadata accessor for FMFFriend);
          uint64_t v60 = v163;
          goto LABEL_26;
        }
      }
      char v77 = *(unsigned char *)(v74 + v164[12]);
      sub_21CA57050(v74, (uint64_t (*)(void))type metadata accessor for FMFFriend);
      if ((v77 & 1) == 0) {
        goto LABEL_50;
      }
      goto LABEL_63;
    }
    uint64_t v59 = (void *)MEMORY[0x263F8EE80];
LABEL_67:
    uint64_t v177 = MEMORY[0x263F8EE78];
    uint64_t v93 = *(void *)(*(void *)(v26 + 584) + 16);
    if (!v93) {
      goto LABEL_88;
    }
    uint64_t v166 = swift_bridgeObjectRetain();
    char v94 = (unsigned char *)(v166 + 48);
    do
    {
      uint64_t v95 = *((void *)v94 - 2);
      uint64_t v96 = *((void *)v94 - 1);
      char v97 = *v94;
      uint64_t v98 = v59[2];
      swift_bridgeObjectRetain();
      if (v98)
      {
        swift_bridgeObjectRetain();
        unint64_t v99 = sub_21CA5BCE0(v95, v96);
        if (v100)
        {
          uint64_t v101 = v59[7] + 24 * v99;
          uint64_t v102 = *(void *)v101;
          uint64_t v103 = *(void *)(v101 + 8);
          char v104 = *(unsigned char *)(v101 + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease_n();
          uint64_t v105 = (void *)v177;
          swift_bridgeObjectRetain();
          uint64_t v106 = (uint64_t)v59;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v105 = sub_21CA3F8C0(0, v105[2] + 1, 1, v105);
          }
          unint64_t v108 = v105[2];
          unint64_t v107 = v105[3];
          if (v108 >= v107 >> 1) {
            uint64_t v105 = sub_21CA3F8C0((void *)(v107 > 1), v108 + 1, 1, v105);
          }
          v105[2] = v108 + 1;
          uint64_t v109 = &v105[3 * v108];
          v109[4] = v102;
          v109[5] = v103;
          *((unsigned char *)v109 + 48) = v104;
          uint64_t v177 = (uint64_t)v105;
          uint64_t v59 = (void *)v106;
          swift_bridgeObjectRetain();
          unint64_t v110 = sub_21CA5BCE0(v102, v103);
          char v112 = v111;
          swift_bridgeObjectRelease();
          if (v112)
          {
            char v113 = swift_isUniquelyReferenced_nonNull_native();
            v167[0] = v106;
            if ((v113 & 1) == 0)
            {
              sub_21CB84E2C();
              uint64_t v59 = (void *)v167[0];
            }
            swift_bridgeObjectRelease();
            sub_21CA3A428(v110, v59);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          swift_bridgeObjectRelease();
          goto LABEL_70;
        }
        swift_bridgeObjectRelease();
      }
      uint64_t v114 = (void *)v177;
      uint64_t v115 = v59;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v114 = sub_21CA3F8C0(0, v114[2] + 1, 1, v114);
      }
      unint64_t v117 = v114[2];
      unint64_t v116 = v114[3];
      if (v117 >= v116 >> 1) {
        uint64_t v114 = sub_21CA3F8C0((void *)(v116 > 1), v117 + 1, 1, v114);
      }
      v114[2] = v117 + 1;
      long long v118 = &v114[3 * v117];
      v118[4] = v95;
      v118[5] = v96;
      *((unsigned char *)v118 + 48) = v97;
      uint64_t v177 = (uint64_t)v114;
      uint64_t v59 = v115;
LABEL_70:
      v94 += 24;
      --v93;
    }
    while (v93);
    swift_bridgeObjectRelease();
LABEL_88:
    uint64_t v119 = swift_bridgeObjectRetain();
    sub_21CA3D8A4(v119);
    uint64_t v120 = v177;
    unint64_t v26 = *(void *)(v177 + 16);
    uint64_t v121 = MEMORY[0x263F8EE78];
    uint64_t v166 = (uint64_t)v59;
    if (v26)
    {
      uint64_t v172 = MEMORY[0x263F8EE78];
      swift_bridgeObjectRetain();
      sub_21CA3BE08(0, v26, 0);
      uint64_t v165 = sub_21CA57E34(&qword_267C97220);
      v164 = (int *)&v168;
      uint64_t v163 = v120;
      unint64_t v15 = (void *)(v120 + 48);
      while (1)
      {
        uint64_t v25 = *(v15 - 1);
        int v122 = *(unsigned __int8 *)v15;
        uint64_t v168 = *(v15 - 2);
        uint64_t v169 = v25;
        if (v122)
        {
          if (v122 == 1)
          {
            uint64_t v123 = 0xE700000000000000;
            uint64_t v124 = 0x776F6C6C616873;
          }
          else
          {
            uint64_t v123 = 0xE400000000000000;
            uint64_t v124 = 1885693284;
          }
        }
        else
        {
          uint64_t v123 = 0xE400000000000000;
          uint64_t v124 = 1701736302;
        }
        v167[0] = v124;
        v167[1] = v123;
        swift_bridgeObjectRetain_n();
        uint64_t v170 = sub_21CB88330();
        uint64_t v171 = v125;
        uint64_t v126 = (void *)sub_21CB88D40();
        uint64_t v128 = v168;
        uint64_t v127 = v169;
        uint64_t v129 = v170;
        uint64_t v130 = v171;
        swift_retain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        unint64_t v131 = sub_21CA5BCE0(v128, v127);
        if (v132) {
          break;
        }
        v126[(v131 >> 6) + 8] |= 1 << v131;
        uint64_t v133 = (uint64_t *)(v126[6] + 16 * v131);
        *uint64_t v133 = v128;
        v133[1] = v127;
        char v134 = (uint64_t *)(v126[7] + 16 * v131);
        *char v134 = v129;
        v134[1] = v130;
        uint64_t v135 = v126[2];
        BOOL v41 = __OFADD__(v135, 1);
        uint64_t v136 = v135 + 1;
        if (v41) {
          goto LABEL_110;
        }
        v126[2] = v136;
        sub_21CA57E34(&qword_267C97228);
        swift_arrayDestroy();
        swift_bridgeObjectRelease();
        swift_release();
        uint64_t v121 = v172;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_21CA3BE08(0, *(void *)(v121 + 16) + 1, 1);
          uint64_t v121 = v172;
        }
        unint64_t v138 = *(void *)(v121 + 16);
        unint64_t v137 = *(void *)(v121 + 24);
        if (v138 >= v137 >> 1)
        {
          sub_21CA3BE08(v137 > 1, v138 + 1, 1);
          uint64_t v121 = v172;
        }
        v15 += 3;
        *(void *)(v121 + 16) = v138 + 1;
        *(void *)(v121 + 8 * v138 + 32) = v126;
        if (!--v26)
        {
          swift_bridgeObjectRelease();
          goto LABEL_103;
        }
      }
LABEL_109:
      __break(1u);
LABEL_110:
      __break(1u);
LABEL_111:
      __break(1u);
LABEL_112:
      __break(1u);
LABEL_113:
      swift_once();
      continue;
    }
    break;
  }
LABEL_103:
  swift_bridgeObjectRetain();
  v139 = sub_21CB88070();
  os_log_type_t v140 = sub_21CB88880();
  if (os_log_type_enabled(v139, v140))
  {
    v141 = (uint8_t *)swift_slowAlloc();
    uint64_t v142 = swift_slowAlloc();
    v167[0] = v142;
    *(_DWORD *)v141 = 136315138;
    uint64_t v165 = (uint64_t)(v141 + 4);
    swift_bridgeObjectRetain();
    uint64_t v143 = sub_21CA57E34(&qword_267C95238);
    uint64_t v144 = MEMORY[0x21D4B5620](v121, v143);
    unint64_t v146 = v145;
    swift_bridgeObjectRelease();
    uint64_t v172 = sub_21CA4E450(v144, v146, v167);
    sub_21CB889C0();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_21CA00000, v139, v140, "FMFDataManager: Locate in progress (out) - %s", v141, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x21D4B6B70](v142, -1, -1);
    MEMORY[0x21D4B6B70](v141, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  v159[73] = v177;
  swift_bridgeObjectRelease();
  unsigned char *v148 = 1;
  return swift_bridgeObjectRelease();
}

unint64_t sub_21CA3B8E0(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_21CB88A70();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_21CB89050();
        swift_bridgeObjectRetain();
        sub_21CB88380();
        uint64_t v10 = sub_21CB89090();
        uint64_t result = swift_bridgeObjectRelease();
        unint64_t v11 = v10 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 < v8) {
            goto LABEL_5;
          }
        }
        else if (v11 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v11)
        {
LABEL_11:
          uint64_t v12 = *(void *)(a2 + 48);
          uint64_t v13 = (_OWORD *)(v12 + 16 * v3);
          uint64_t v14 = (_OWORD *)(v12 + 16 * v6);
          if (v3 != v6 || v13 >= v14 + 1) {
            _OWORD *v13 = *v14;
          }
          uint64_t v15 = *(void *)(a2 + 56);
          unint64_t v16 = v15 + 24 * v3;
          uint64_t v17 = (long long *)(v15 + 24 * v6);
          if (24 * v3 < (uint64_t)(24 * v6) || v16 >= (unint64_t)v17 + 24 || (v18 = v3 == v6, int64_t v3 = v6, !v18))
          {
            long long v9 = *v17;
            *(void *)(v16 + 16) = *((void *)v17 + 2);
            *(_OWORD *)unint64_t v16 = v9;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v19 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v20 = *v19;
    uint64_t v21 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v19 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v21 = *v19;
    uint64_t v20 = (-1 << result) - 1;
  }
  *uint64_t v19 = v21 & v20;
  uint64_t v22 = *(void *)(a2 + 16);
  BOOL v23 = __OFSUB__(v22, 1);
  uint64_t v24 = v22 - 1;
  if (v23)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v24;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

uint64_t sub_21CA3BAD8(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t v4 = v3;
  uint64_t v6 = *v3;
  sub_21CA57E34(a3);
  char v41 = a2;
  uint64_t v7 = sub_21CB88D30();
  uint64_t v8 = v7;
  if (*(void *)(v6 + 16))
  {
    uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
    uint64_t v39 = (void *)(v6 + 64);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v6 + 64);
    int64_t v38 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = v7 + 64;
    uint64_t result = swift_retain();
    int64_t v14 = 0;
    for (i = v6; ; uint64_t v6 = i)
    {
      if (v11)
      {
        unint64_t v21 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v22 = v21 | (v14 << 6);
      }
      else
      {
        int64_t v23 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v23 >= v38) {
          goto LABEL_33;
        }
        unint64_t v24 = v39[v23];
        ++v14;
        if (!v24)
        {
          int64_t v14 = v23 + 1;
          if (v23 + 1 >= v38) {
            goto LABEL_33;
          }
          unint64_t v24 = v39[v14];
          if (!v24)
          {
            int64_t v25 = v23 + 2;
            if (v25 >= v38)
            {
LABEL_33:
              swift_release();
              uint64_t v4 = v3;
              if (v41)
              {
                uint64_t v37 = 1 << *(unsigned char *)(v6 + 32);
                if (v37 >= 64) {
                  bzero(v39, ((unint64_t)(v37 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v39 = -1 << v37;
                }
                *(void *)(v6 + 16) = 0;
              }
              break;
            }
            unint64_t v24 = v39[v25];
            if (!v24)
            {
              while (1)
              {
                int64_t v14 = v25 + 1;
                if (__OFADD__(v25, 1)) {
                  goto LABEL_40;
                }
                if (v14 >= v38) {
                  goto LABEL_33;
                }
                unint64_t v24 = v39[v14];
                ++v25;
                if (v24) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v14 = v25;
          }
        }
LABEL_30:
        unint64_t v11 = (v24 - 1) & v24;
        unint64_t v22 = __clz(__rbit64(v24)) + (v14 << 6);
      }
      unint64_t v30 = (uint64_t *)(*(void *)(v6 + 48) + 16 * v22);
      uint64_t v32 = *v30;
      uint64_t v31 = v30[1];
      uint64_t v33 = *(void *)(v6 + 56) + 24 * v22;
      uint64_t v34 = *(void *)v33;
      uint64_t v35 = *(void *)(v33 + 8);
      char v36 = *(unsigned char *)(v33 + 16);
      if ((v41 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      sub_21CB89050();
      sub_21CB88380();
      uint64_t result = sub_21CB89090();
      uint64_t v15 = -1 << *(unsigned char *)(v8 + 32);
      unint64_t v16 = result & ~v15;
      unint64_t v17 = v16 >> 6;
      if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
      {
        unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v26 = 0;
        unint64_t v27 = (unint64_t)(63 - v15) >> 6;
        do
        {
          if (++v17 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v28 = v17 == v27;
          if (v17 == v27) {
            unint64_t v17 = 0;
          }
          v26 |= v28;
          uint64_t v29 = *(void *)(v12 + 8 * v17);
        }
        while (v29 == -1);
        unint64_t v18 = __clz(__rbit64(~v29)) + (v17 << 6);
      }
      *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      uint64_t v19 = (void *)(*(void *)(v8 + 48) + 16 * v18);
      *uint64_t v19 = v32;
      v19[1] = v31;
      uint64_t v20 = *(void *)(v8 + 56) + 24 * v18;
      *(void *)uint64_t v20 = v34;
      *(void *)(v20 + 8) = v35;
      *(unsigned char *)(v20 + 16) = v36;
      ++*(void *)(v8 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v4 = v8;
  return result;
}

uint64_t sub_21CA3BDFC(uint64_t a1, char a2)
{
  return sub_21CA3BAD8(a1, a2, &qword_267C95B38);
}

uint64_t sub_21CA3BE08(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_21CA3BE38(a1, a2, a3, (void *)*v3, &qword_267C95230, &qword_267C95238);
  *int64_t v3 = result;
  return result;
}

uint64_t sub_21CA3BE38(char a1, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t *a6)
{
  if (a3)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = a4[2];
  if (v10 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = v10;
  }
  if (v12)
  {
    sub_21CA57E34(a5);
    uint64_t v13 = (void *)swift_allocObject();
    int64_t v14 = j__malloc_size(v13);
    uint64_t v15 = v14 - 32;
    if (v14 < 32) {
      uint64_t v15 = v14 - 25;
    }
    _OWORD v13[2] = v11;
    v13[3] = 2 * (v15 >> 3);
  }
  else
  {
    uint64_t v13 = (void *)MEMORY[0x263F8EE78];
  }
  unint64_t v16 = (unint64_t)(v13 + 4);
  unint64_t v17 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v13 != a4 || v16 >= v17 + 8 * v11) {
      memmove(v13 + 4, a4 + 4, 8 * v11);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v17 >= v16 + 8 * v11 || v16 >= v17 + 8 * v11)
  {
    sub_21CA57E34(a6);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_32:
  uint64_t result = sub_21CB88D50();
  __break(1u);
  return result;
}

uint64_t sub_21CA3BFC8(uint64_t result, uint64_t (*a2)(void), uint64_t (*a3)(void *, uint64_t, uint64_t, uint64_t))
{
  uint64_t v6 = *(void *)(result + 16);
  uint64_t v7 = *v3;
  uint64_t v8 = *(void *)(*v3 + 16);
  if (__OFADD__(v8, v6))
  {
    __break(1u);
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v4 = a2;
  uint64_t v10 = result;
  if (!swift_isUniquelyReferenced_nonNull_native() || (uint64_t v11 = *(void *)(v7 + 24) >> 1, v11 < v8 + v6))
  {
    uint64_t v7 = v4();
    uint64_t v11 = *(void *)(v7 + 24) >> 1;
  }
  uint64_t v12 = *(void *)(v7 + 16);
  uint64_t v13 = v11 - v12;
  uint64_t result = a3(v42, v7 + 24 * v12 + 32, v11 - v12, v10);
  if (result < v6) {
    goto LABEL_12;
  }
  if (result)
  {
    uint64_t v16 = *(void *)(v7 + 16);
    BOOL v17 = __OFADD__(v16, result);
    uint64_t v18 = v16 + result;
    if (v17)
    {
      __break(1u);
      goto LABEL_44;
    }
    *(void *)(v7 + 16) = v18;
  }
  if (result != v13)
  {
LABEL_10:
    uint64_t result = sub_21CA7CFF0();
    *int64_t v3 = v7;
    return result;
  }
LABEL_13:
  int64_t v5 = *(void *)(v7 + 16);
  uint64_t v41 = v42[0];
  uint64_t v14 = v43;
  uint64_t v40 = v42[1];
  uint64_t v15 = v44;
  if (v45)
  {
    unint64_t v19 = (v45 - 1) & v45;
    uint64_t v20 = v44;
    unint64_t v21 = __clz(__rbit64(v45)) | (v44 << 6);
    int64_t v39 = (unint64_t)(v43 + 64) >> 6;
    goto LABEL_15;
  }
LABEL_44:
  int64_t v36 = v15 + 1;
  if (__OFADD__(v15, 1)) {
    goto LABEL_63;
  }
  int64_t v39 = (unint64_t)(v14 + 64) >> 6;
  if (v36 >= v39) {
    goto LABEL_10;
  }
  unint64_t v37 = *(void *)(v40 + 8 * v36);
  uint64_t v20 = v15 + 1;
  if (!v37)
  {
    uint64_t v20 = v15 + 2;
    if (v15 + 2 >= v39) {
      goto LABEL_10;
    }
    unint64_t v37 = *(void *)(v40 + 8 * v20);
    if (!v37)
    {
      uint64_t v20 = v15 + 3;
      if (v15 + 3 >= v39) {
        goto LABEL_10;
      }
      unint64_t v37 = *(void *)(v40 + 8 * v20);
      if (!v37)
      {
        uint64_t v20 = v15 + 4;
        if (v15 + 4 >= v39) {
          goto LABEL_10;
        }
        unint64_t v37 = *(void *)(v40 + 8 * v20);
        if (!v37)
        {
          uint64_t v20 = v15 + 5;
          if (v15 + 5 >= v39) {
            goto LABEL_10;
          }
          unint64_t v37 = *(void *)(v40 + 8 * v20);
          if (!v37)
          {
            uint64_t v38 = v15 + 6;
            do
            {
              if (v39 == v38) {
                goto LABEL_10;
              }
              unint64_t v37 = *(void *)(v40 + 8 * v38++);
            }
            while (!v37);
            uint64_t v20 = v38 - 1;
          }
        }
      }
    }
  }
  unint64_t v19 = (v37 - 1) & v37;
  unint64_t v21 = __clz(__rbit64(v37)) + (v20 << 6);
LABEL_15:
  uint64_t v22 = *(void *)(v41 + 56) + 24 * v21;
  uint64_t v23 = *(void *)v22;
  uint64_t v24 = *(void *)(v22 + 8);
  char v25 = *(unsigned char *)(v22 + 16);
  uint64_t result = swift_bridgeObjectRetain();
  while (1)
  {
    unint64_t v26 = *(void *)(v7 + 24);
    int64_t v27 = v26 >> 1;
    if ((uint64_t)(v26 >> 1) < v5 + 1) {
      break;
    }
    if (v5 < v27) {
      goto LABEL_20;
    }
LABEL_17:
    *(void *)(v7 + 16) = v5;
  }
  uint64_t result = ((uint64_t (*)(BOOL))v4)(v26 > 1);
  uint64_t v7 = result;
  int64_t v27 = *(void *)(result + 24) >> 1;
  if (v5 >= v27) {
    goto LABEL_17;
  }
  while (1)
  {
LABEL_20:
    uint64_t v28 = v7 + 32 + 24 * v5;
    *(void *)uint64_t v28 = v23;
    *(void *)(v28 + 8) = v24;
    *(unsigned char *)(v28 + 16) = v25;
    ++v5;
    if (v19)
    {
      unint64_t v29 = __clz(__rbit64(v19));
      v19 &= v19 - 1;
      unint64_t v30 = v29 | (v20 << 6);
      goto LABEL_38;
    }
    int64_t v31 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v31 >= v39) {
      goto LABEL_42;
    }
    unint64_t v32 = *(void *)(v40 + 8 * v31);
    uint64_t v33 = v20 + 1;
    if (!v32)
    {
      uint64_t v33 = v20 + 2;
      if (v20 + 2 >= v39) {
        goto LABEL_42;
      }
      unint64_t v32 = *(void *)(v40 + 8 * v33);
      if (!v32)
      {
        uint64_t v33 = v20 + 3;
        if (v20 + 3 >= v39) {
          goto LABEL_42;
        }
        unint64_t v32 = *(void *)(v40 + 8 * v33);
        if (!v32)
        {
          uint64_t v33 = v20 + 4;
          if (v20 + 4 >= v39) {
            goto LABEL_42;
          }
          unint64_t v32 = *(void *)(v40 + 8 * v33);
          if (!v32)
          {
            uint64_t v33 = v20 + 5;
            if (v20 + 5 >= v39) {
              goto LABEL_42;
            }
            unint64_t v32 = *(void *)(v40 + 8 * v33);
            if (!v32)
            {
              uint64_t v34 = v20 + 6;
              while (v39 != v34)
              {
                unint64_t v32 = *(void *)(v40 + 8 * v34++);
                if (v32)
                {
                  uint64_t v33 = v34 - 1;
                  goto LABEL_37;
                }
              }
LABEL_42:
              *(void *)(v7 + 16) = v5;
              goto LABEL_10;
            }
          }
        }
      }
    }
LABEL_37:
    unint64_t v19 = (v32 - 1) & v32;
    unint64_t v30 = __clz(__rbit64(v32)) + (v33 << 6);
    uint64_t v20 = v33;
LABEL_38:
    uint64_t v35 = *(void *)(v41 + 56) + 24 * v30;
    uint64_t v23 = *(void *)v35;
    uint64_t v24 = *(void *)(v35 + 8);
    char v25 = *(unsigned char *)(v35 + 16);
    if (v5 >= v27)
    {
      uint64_t result = swift_bridgeObjectRetain();
      goto LABEL_17;
    }
    uint64_t result = swift_bridgeObjectRetain();
  }
  __break(1u);
LABEL_63:
  __break(1u);
  return result;
}

uint64_t sub_21CA3C3F0(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int64_t v5 = (void *)result;
  uint64_t v6 = a4 + 64;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 64);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_39:
    *int64_t v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_39;
  }
  if (a3 < 0) {
    goto LABEL_41;
  }
  uint64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  uint64_t v23 = -1 << *(unsigned char *)(a4 + 32);
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    uint64_t v20 = *(void *)(a4 + 56) + 24 * v16;
    uint64_t v22 = *(void *)v20;
    uint64_t v21 = *(void *)(v20 + 8);
    LOBYTE(v20) = *(unsigned char *)(v20 + 16);
    *(void *)uint64_t v11 = v22;
    *(void *)(v11 + 8) = v21;
    *(unsigned char *)(v11 + 16) = v20;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 24;
    uint64_t result = swift_bridgeObjectRetain();
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1)) {
      break;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18)
    {
      v12 += 2;
      if (v17 + 1 >= v14)
      {
        unint64_t v9 = 0;
        int64_t v12 = v17;
      }
      else
      {
        unint64_t v18 = *(void *)(v6 + 8 * v12);
        if (v18) {
          goto LABEL_14;
        }
        int64_t v19 = v17 + 2;
        if (v17 + 2 >= v14) {
          goto LABEL_33;
        }
        unint64_t v18 = *(void *)(v6 + 8 * v19);
        if (v18)
        {
LABEL_17:
          int64_t v17 = v19;
          goto LABEL_18;
        }
        int64_t v12 = v17 + 3;
        if (v17 + 3 < v14)
        {
          unint64_t v18 = *(void *)(v6 + 8 * v12);
          if (v18)
          {
LABEL_14:
            int64_t v17 = v12;
            goto LABEL_18;
          }
          int64_t v19 = v17 + 4;
          if (v17 + 4 >= v14)
          {
LABEL_33:
            unint64_t v9 = 0;
            goto LABEL_37;
          }
          unint64_t v18 = *(void *)(v6 + 8 * v19);
          if (!v18)
          {
            while (1)
            {
              int64_t v17 = v19 + 1;
              if (__OFADD__(v19, 1)) {
                goto LABEL_42;
              }
              if (v17 >= v14)
              {
                unint64_t v9 = 0;
                int64_t v12 = v14 - 1;
                goto LABEL_37;
              }
              unint64_t v18 = *(void *)(v6 + 8 * v17);
              ++v19;
              if (v18) {
                goto LABEL_18;
              }
            }
          }
          goto LABEL_17;
        }
        unint64_t v9 = 0;
        int64_t v12 = v17 + 2;
      }
LABEL_37:
      uint64_t v10 = v13;
LABEL_38:
      uint64_t v7 = v23;
      goto LABEL_39;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

uint64_t sub_21CA3C600(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v35 = a3;
  uint64_t v5 = type metadata accessor for FMFFriend();
  uint64_t v37 = *(void *)(v5 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v5 - 8);
  uint64_t v8 = (void *)((char *)v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = MEMORY[0x270FA5388](v6);
  uint64_t v34 = (uint64_t)v32 - v10;
  uint64_t result = MEMORY[0x270FA5388](v9);
  uint64_t v33 = (uint64_t)v32 - v12;
  unint64_t v13 = *(void *)(a1 + 16);
  if (!v13) {
    return MEMORY[0x263F8EE78];
  }
  unint64_t v14 = 0;
  void v32[2] = OBJC_IVAR____TtC7FMFCore25FMFGenericResponseHandler_dataManager;
  uint64_t v39 = a1 + 32;
  uint64_t v15 = MEMORY[0x263F8EE78];
  uint64_t v41 = a2;
  do
  {
    uint64_t v36 = v15;
    if (v14 <= v13) {
      unint64_t v16 = v13;
    }
    else {
      unint64_t v16 = v14;
    }
    unint64_t v38 = v16;
    while (1)
    {
      if (v14 == v16)
      {
        __break(1u);
        return result;
      }
      int64_t v17 = (uint64_t *)(v39 + 24 * v14);
      uint64_t v19 = *v17;
      uint64_t v18 = v17[1];
      ++v14;
      uint64_t v20 = *(void *)(a2 + 16);
      int v40 = *((unsigned __int8 *)v17 + 16);
      if (!v20) {
        break;
      }
      uint64_t v21 = v37;
      uint64_t v22 = a2 + ((*(unsigned __int8 *)(v37 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80));
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v23 = *(void *)(v21 + 72);
      while (1)
      {
        sub_21CA3D5DC(v22, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FMFFriend);
        BOOL v24 = *v8 == v19 && v8[1] == v18;
        if (v24 || (sub_21CB88F50() & 1) != 0) {
          break;
        }
        sub_21CA56FF0((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FMFFriend);
        v22 += v23;
        if (!--v20)
        {
          swift_bridgeObjectRelease();
          goto LABEL_20;
        }
      }
      uint64_t v25 = v41;
      swift_bridgeObjectRelease();
      uint64_t v26 = v34;
      sub_21CA3DFAC((uint64_t)v8, v34, (uint64_t (*)(void))type metadata accessor for FMFFriend);
      uint64_t v27 = v33;
      sub_21CA3DFAC(v26, v33, (uint64_t (*)(void))type metadata accessor for FMFFriend);
      swift_retain();
      LOBYTE(v26) = sub_21CA3C974(v27);
      swift_release();
      uint64_t v28 = v27;
      a2 = v25;
      sub_21CA56FF0(v28, (uint64_t (*)(void))type metadata accessor for FMFFriend);
      if ((v26 & 1) == 0) {
        goto LABEL_20;
      }
      uint64_t result = swift_bridgeObjectRelease();
      unint64_t v16 = v38;
      if (v14 == v13) {
        return v36;
      }
    }
    swift_bridgeObjectRetain();
LABEL_20:
    uint64_t v15 = v36;
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v42 = v15;
    if ((result & 1) == 0)
    {
      uint64_t result = sub_21CA3CB6C(0, *(void *)(v15 + 16) + 1, 1);
      uint64_t v15 = v42;
    }
    unint64_t v30 = *(void *)(v15 + 16);
    unint64_t v29 = *(void *)(v15 + 24);
    if (v30 >= v29 >> 1)
    {
      uint64_t result = sub_21CA3CB6C(v29 > 1, v30 + 1, 1);
      uint64_t v15 = v42;
    }
    *(void *)(v15 + 16) = v30 + 1;
    uint64_t v31 = v15 + 24 * v30;
    *(void *)(v31 + 32) = v19;
    *(void *)(v31 + 40) = v18;
    *(unsigned char *)(v31 + 48) = v40;
    a2 = v41;
  }
  while (v14 != v13);
  return v15;
}

uint64_t sub_21CA3C974(uint64_t a1)
{
  int64_t v3 = (int *)type metadata accessor for FMFFriend();
  uint64_t v4 = MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v14 - v7;
  if (*(unsigned char *)(v1 + 672) == 1)
  {
    int v9 = *(unsigned __int8 *)(a1 + v3[11]);
    if (v9 == 2)
    {
      sub_21CA571E8(a1, (uint64_t)&v14 - v7, (uint64_t (*)(void))type metadata accessor for FMFFriend);
    }
    else
    {
      sub_21CA571E8(a1, (uint64_t)&v14 - v7, (uint64_t (*)(void))type metadata accessor for FMFFriend);
      if (v9)
      {
        sub_21CA57050((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FMFFriend);
        char v11 = 1;
        return v11 & 1;
      }
    }
    int v12 = v8[v3[12]];
    sub_21CA57050((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FMFFriend);
    if (v12 == 2) {
      char v11 = 0;
    }
    else {
      char v11 = v12 & 1;
    }
  }
  else
  {
    int v10 = *(unsigned __int8 *)(a1 + v3[12]);
    if (v10 == 2)
    {
      sub_21CA571E8(a1, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FMFFriend);
      char v11 = 0;
    }
    else
    {
      sub_21CA571E8(a1, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FMFFriend);
      if (v10) {
        char v11 = v6[v3[13]] ^ 1;
      }
      else {
        char v11 = 0;
      }
    }
    sub_21CA57050((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FMFFriend);
  }
  return v11 & 1;
}

uint64_t sub_21CA3CB6C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_21CA3CB9C(a1, a2, a3, *v3, &qword_267C95270);
  *int64_t v3 = (char *)result;
  return result;
}

uint64_t sub_21CA3CB9C(char a1, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  if (a3)
  {
    unint64_t v7 = *((void *)a4 + 3);
    int64_t v8 = v7 >> 1;
    if ((uint64_t)(v7 >> 1) < a2)
    {
      if (v8 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v8 = a2;
      }
    }
  }
  else
  {
    int64_t v8 = a2;
  }
  uint64_t v9 = *((void *)a4 + 2);
  if (v8 <= v9) {
    uint64_t v10 = *((void *)a4 + 2);
  }
  else {
    uint64_t v10 = v8;
  }
  if (v10)
  {
    sub_21CA57E34(a5);
    char v11 = (char *)swift_allocObject();
    size_t v12 = j__malloc_size(v11);
    *((void *)v11 + 2) = v9;
    *((void *)v11 + 3) = 2 * ((uint64_t)(v12 - 32) / 24);
  }
  else
  {
    char v11 = (char *)MEMORY[0x263F8EE78];
  }
  unint64_t v13 = v11 + 32;
  uint64_t v14 = a4 + 32;
  size_t v15 = 24 * v9;
  if (a1)
  {
    if (v11 != a4 || v13 >= &v14[v15]) {
      memmove(v13, v14, v15);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v14 >= &v13[v15] || v13 >= &v14[v15])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v11;
  }
LABEL_30:
  uint64_t result = sub_21CB88D50();
  __break(1u);
  return result;
}

void *sub_21CA3CD1C(void *result, int64_t a2, char a3, void *a4, uint64_t *a5)
{
  char v6 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v8 = a2;
    goto LABEL_8;
  }
  unint64_t v7 = a4[3];
  uint64_t v8 = v7 >> 1;
  if ((uint64_t)(v7 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v8 + 0x4000000000000000 >= 0)
  {
    uint64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v8 = a2;
    }
LABEL_8:
    uint64_t v9 = a4[2];
    if (v8 <= v9) {
      uint64_t v10 = a4[2];
    }
    else {
      uint64_t v10 = v8;
    }
    if (v10)
    {
      sub_21CA57E34(a5);
      char v11 = (void *)swift_allocObject();
      size_t v12 = j__malloc_size(v11);
      void v11[2] = v9;
      v11[3] = 2 * ((uint64_t)(v12 - 32) / 24);
      unint64_t v13 = v11 + 4;
      if (v6)
      {
LABEL_13:
        if (v11 != a4 || v13 >= &a4[3 * v9 + 4]) {
          memmove(v13, a4 + 4, 24 * v9);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      char v11 = (void *)MEMORY[0x263F8EE78];
      unint64_t v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_21CA3CE4C(0, v9, (unint64_t)v13, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v11;
  }
  __break(1u);
  return result;
}

uint64_t sub_21CA3CE4C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 24 * a1 + 32;
    unint64_t v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_21CB88D50();
  __break(1u);
  return result;
}

uint64_t sub_21CA3CF40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v51 = a3;
  uint64_t v6 = type metadata accessor for FMFFriend();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v53 = (int *)v6;
  uint64_t v54 = v7;
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x270FA5388](v8);
  unint64_t v13 = (char *)v46 - v12;
  uint64_t v14 = MEMORY[0x270FA5388](v11);
  unint64_t v16 = (void *)((char *)v46 - v15);
  MEMORY[0x270FA5388](v14);
  uint64_t v55 = (uint64_t)v46 - v17;
  uint64_t v18 = type metadata accessor for FMFLocation() - 8;
  uint64_t v19 = MEMORY[0x270FA5388](v18);
  uint64_t v52 = (uint64_t)v46 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  uint64_t v23 = (void *)((char *)v46 - v22);
  MEMORY[0x270FA5388](v21);
  uint64_t v26 = (char *)v46 - v25;
  uint64_t result = MEMORY[0x263F8EE78];
  uint64_t v59 = MEMORY[0x263F8EE78];
  uint64_t v57 = *(void *)(a1 + 16);
  if (v57)
  {
    uint64_t v47 = v13;
    unint64_t v48 = v10;
    v46[1] = v3;
    uint64_t v28 = 0;
    uint64_t v29 = *(unsigned __int8 *)(v24 + 80);
    uint64_t v58 = *(void *)(v24 + 72);
    uint64_t v49 = (v29 + 32) & ~v29;
    uint64_t v50 = OBJC_IVAR____TtC7FMFCore25FMFGenericResponseHandler_dataManager;
    uint64_t v56 = a1 + v49;
    uint64_t v30 = MEMORY[0x263F8EE78];
    while (1)
    {
      sub_21CA3D5DC(v56 + v58 * v28, (uint64_t)v26, (uint64_t (*)(void))type metadata accessor for FMFLocation);
      sub_21CA3D5DC((uint64_t)v26, (uint64_t)v23, (uint64_t (*)(void))type metadata accessor for FMFLocation);
      uint64_t v31 = *(void *)(a2 + 16);
      if (!v31) {
        goto LABEL_4;
      }
      uint64_t v32 = v54;
      uint64_t v33 = a2 + ((*(unsigned __int8 *)(v54 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v54 + 80));
      swift_bridgeObjectRetain();
      uint64_t v34 = *(void *)(v32 + 72);
      while (1)
      {
        sub_21CA3D5DC(v33, (uint64_t)v16, (uint64_t (*)(void))type metadata accessor for FMFFriend);
        uint64_t v35 = v23[1];
        if (v35)
        {
          BOOL v36 = *v16 == *v23 && v35 == v16[1];
          if (v36 || (sub_21CB88F50() & 1) != 0) {
            break;
          }
        }
        sub_21CA56FF0((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for FMFFriend);
        v33 += v34;
        if (!--v31)
        {
          swift_bridgeObjectRelease();
          goto LABEL_4;
        }
      }
      swift_bridgeObjectRelease();
      uint64_t v37 = v55;
      sub_21CA3DFAC((uint64_t)v16, v55, (uint64_t (*)(void))type metadata accessor for FMFFriend);
      if (*(unsigned char *)(*(void *)(v51 + v50) + 672) != 1) {
        break;
      }
      int v38 = *(unsigned __int8 *)(v37 + v53[11]);
      if (v38 == 2)
      {
        uint64_t v39 = (uint64_t)v47;
        sub_21CA3D5DC(v37, (uint64_t)v47, (uint64_t (*)(void))type metadata accessor for FMFFriend);
      }
      else
      {
        uint64_t v39 = (uint64_t)v47;
        sub_21CA3D5DC(v37, (uint64_t)v47, (uint64_t (*)(void))type metadata accessor for FMFFriend);
        if (v38)
        {
          sub_21CA56FF0(v39, (uint64_t (*)(void))type metadata accessor for FMFFriend);
          sub_21CA56FF0(v55, (uint64_t (*)(void))type metadata accessor for FMFFriend);
LABEL_4:
          sub_21CA56FF0((uint64_t)v23, (uint64_t (*)(void))type metadata accessor for FMFLocation);
          goto LABEL_5;
        }
      }
      int v42 = *(unsigned __int8 *)(v39 + v53[12]);
      sub_21CA56FF0(v39, (uint64_t (*)(void))type metadata accessor for FMFFriend);
      if (v42 == 2)
      {
        sub_21CA56FF0(v55, (uint64_t (*)(void))type metadata accessor for FMFFriend);
        sub_21CA56FF0((uint64_t)v23, (uint64_t (*)(void))type metadata accessor for FMFLocation);
LABEL_31:
        sub_21CA3DFAC((uint64_t)v26, v52, (uint64_t (*)(void))type metadata accessor for FMFLocation);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_21CA3D644(0, *(void *)(v30 + 16) + 1, 1);
        }
        uint64_t v30 = v59;
        unint64_t v45 = *(void *)(v59 + 16);
        unint64_t v44 = *(void *)(v59 + 24);
        if (v45 >= v44 >> 1)
        {
          sub_21CA3D644(v44 > 1, v45 + 1, 1);
          uint64_t v30 = v59;
        }
        *(void *)(v30 + 16) = v45 + 1;
        sub_21CA3DFAC(v52, v30 + v49 + v45 * v58, (uint64_t (*)(void))type metadata accessor for FMFLocation);
        goto LABEL_6;
      }
      char v43 = v42 & 1;
LABEL_30:
      sub_21CA56FF0(v55, (uint64_t (*)(void))type metadata accessor for FMFFriend);
      sub_21CA56FF0((uint64_t)v23, (uint64_t (*)(void))type metadata accessor for FMFLocation);
      if ((v43 & 1) == 0) {
        goto LABEL_31;
      }
LABEL_5:
      sub_21CA56FF0((uint64_t)v26, (uint64_t (*)(void))type metadata accessor for FMFLocation);
LABEL_6:
      if (++v28 == v57) {
        return v59;
      }
    }
    int v40 = *(unsigned __int8 *)(v37 + v53[12]);
    uint64_t v41 = (uint64_t)v48;
    if (v40 == 2)
    {
      sub_21CA3D5DC(v37, (uint64_t)v48, (uint64_t (*)(void))type metadata accessor for FMFFriend);
    }
    else
    {
      sub_21CA3D5DC(v37, (uint64_t)v48, (uint64_t (*)(void))type metadata accessor for FMFFriend);
      if (v40)
      {
        char v43 = *(unsigned char *)(v41 + v53[13]) ^ 1;
        goto LABEL_29;
      }
    }
    char v43 = 0;
LABEL_29:
    sub_21CA56FF0(v41, (uint64_t (*)(void))type metadata accessor for FMFFriend);
    goto LABEL_30;
  }
  return result;
}

uint64_t sub_21CA3D574(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_21CA3D5DC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_21CA3D644(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_21CA48024(a1, a2, a3, (void *)*v3, &qword_267C95250, (uint64_t (*)(void))type metadata accessor for FMFLocation);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_21CA3D680(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  char v5 = *(unsigned char *)(a1 + 48);
  unsigned __int8 v6 = *(unsigned char *)(a2 + 48);
  BOOL v7 = *(void *)(a1 + 32) == *(void *)(a2 + 32) && *(void *)(a1 + 40) == *(void *)(a2 + 40);
  if (v7 || (v8 = sub_21CB88F50(), uint64_t result = 0, (v8 & 1) != 0))
  {
    uint64_t v10 = (unsigned __int8 *)(a2 + 72);
    for (uint64_t i = (unsigned char *)(a1 + 72); ; i += 24)
    {
      --v2;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v5)
      {
        if (v5 == 1)
        {
          unint64_t v12 = 0xE700000000000000;
          uint64_t v13 = 0x776F6C6C616873;
          int v14 = v6;
          if (!v6) {
            goto LABEL_21;
          }
        }
        else
        {
          unint64_t v12 = 0xE400000000000000;
          uint64_t v13 = 1885693284;
          int v14 = v6;
          if (!v6)
          {
LABEL_21:
            unint64_t v15 = 0xE400000000000000;
            if (v13 != 1701736302) {
              goto LABEL_26;
            }
            goto LABEL_24;
          }
        }
      }
      else
      {
        unint64_t v12 = 0xE400000000000000;
        uint64_t v13 = 1701736302;
        int v14 = v6;
        if (!v6) {
          goto LABEL_21;
        }
      }
      if (v14 == 1)
      {
        unint64_t v15 = 0xE700000000000000;
        if (v13 != 0x776F6C6C616873) {
          goto LABEL_26;
        }
      }
      else
      {
        unint64_t v15 = 0xE400000000000000;
        if (v13 != 1885693284) {
          goto LABEL_26;
        }
      }
LABEL_24:
      if (v12 == v15)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        goto LABEL_27;
      }
LABEL_26:
      char v16 = sub_21CB88F50();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v16 & 1) == 0) {
        return 0;
      }
LABEL_27:
      if (!v2) {
        return 1;
      }
      char v5 = *i;
      unsigned __int8 v6 = *v10;
      if ((*((void *)i - 2) != *((void *)v10 - 2) || *((void *)i - 1) != *((void *)v10 - 1))
        && (sub_21CB88F50() & 1) == 0)
      {
        return 0;
      }
      v10 += 24;
    }
  }
  return result;
}

uint64_t sub_21CA3D8A4(uint64_t a1)
{
  return sub_21CA3BFC8(a1, (uint64_t (*)(void))sub_21CA3F8C0, (uint64_t (*)(void *, uint64_t, uint64_t, uint64_t))sub_21CA3D8D0);
}

id sub_21CA3D8D4(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v63 = a3;
  id v64 = a4;
  uint64_t v62 = a2;
  uint64_t v5 = sub_21CA57E34((uint64_t *)&unk_267C96EF0);
  MEMORY[0x270FA5388](v5 - 8);
  BOOL v7 = (char *)&v59 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v75 = sub_21CA57E34(&qword_267C959C8);
  uint64_t v8 = *(void *)(v75 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v75);
  uint64_t v71 = (uint64_t)&v59 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v68 = (uint64_t)&v59 - v12;
  MEMORY[0x270FA5388](v11);
  uint64_t v74 = (char *)&v59 - v13;
  uint64_t v70 = type metadata accessor for FMFLocation();
  uint64_t v72 = *(void *)(v70 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v70);
  uint64_t v69 = (uint64_t)&v59 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v65 = (uint64_t)&v59 - v17;
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  uint64_t v20 = (char *)&v59 - v19;
  int64_t v21 = *(void *)(a1 + 16);
  unint64_t v22 = MEMORY[0x263F8EE78];
  if (v21)
  {
    BOOL v67 = v7;
    uint64_t v76 = MEMORY[0x263F8EE78];
    sub_21CA3D644(0, v21, 0);
    uint64_t v23 = *(unsigned __int8 *)(v8 + 80);
    uint64_t v61 = a1;
    uint64_t v24 = a1 + ((v23 + 32) & ~v23);
    uint64_t v73 = *(void *)(v8 + 72);
    int64_t v25 = v21;
    uint64_t v26 = v76;
    uint64_t v27 = v24;
    int64_t v60 = v25;
    uint64_t v66 = v24;
    uint64_t v28 = (uint64_t)v74;
    do
    {
      sub_21CA24E80(v27, v28, &qword_267C959C8);
      uint64_t v29 = *(int *)(v75 + 48);
      uint64_t v30 = (uint64_t)v20;
      uint64_t v31 = v68;
      uint64_t v32 = v68 + v29;
      uint64_t v33 = v28 + v29;
      sub_21CA3D5DC(v28, v68, (uint64_t (*)(void))type metadata accessor for FMFLocation);
      sub_21CA24E80(v33, v32, (uint64_t *)&unk_267C96EF0);
      sub_21CA3DFAC(v31, v30, (uint64_t (*)(void))type metadata accessor for FMFLocation);
      sub_21CA1B88C(v32, (uint64_t *)&unk_267C96EF0);
      sub_21CA1B88C(v28, &qword_267C959C8);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_21CA3D644(0, *(void *)(v26 + 16) + 1, 1);
        uint64_t v26 = v76;
      }
      unint64_t v35 = *(void *)(v26 + 16);
      unint64_t v34 = *(void *)(v26 + 24);
      uint64_t v36 = v66;
      if (v35 >= v34 >> 1)
      {
        sub_21CA3D644(v34 > 1, v35 + 1, 1);
        uint64_t v26 = v76;
      }
      *(void *)(v26 + 16) = v35 + 1;
      unint64_t v37 = (*(unsigned __int8 *)(v72 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v72 + 80);
      uint64_t v38 = *(void *)(v72 + 72);
      uint64_t v39 = v26 + v37 + v38 * v35;
      uint64_t v20 = (char *)v30;
      sub_21CA3DFAC(v30, v39, (uint64_t (*)(void))type metadata accessor for FMFLocation);
      v27 += v73;
      --v25;
    }
    while (v25);
    uint64_t v68 = v26;
    v72 += 48;
    swift_bridgeObjectRetain();
    unint64_t v22 = MEMORY[0x263F8EE78];
    int64_t v40 = v60;
    uint64_t v41 = (uint64_t)v74;
    do
    {
      uint64_t v42 = v71;
      sub_21CA24E80(v36, v71, &qword_267C959C8);
      uint64_t v43 = *(int *)(v75 + 48);
      uint64_t v44 = v41 + v43;
      uint64_t v45 = v42 + v43;
      sub_21CA3D5DC(v42, v41, (uint64_t (*)(void))type metadata accessor for FMFLocation);
      sub_21CA24E80(v45, v44, (uint64_t *)&unk_267C96EF0);
      uint64_t v46 = (uint64_t)v67;
      sub_21CA26A4C(v44, (uint64_t)v67, (uint64_t *)&unk_267C96EF0);
      sub_21CA56FF0(v41, (uint64_t (*)(void))type metadata accessor for FMFLocation);
      sub_21CA1B88C(v42, &qword_267C959C8);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))v72)(v46, 1, v70) == 1)
      {
        sub_21CA1B88C(v46, (uint64_t *)&unk_267C96EF0);
      }
      else
      {
        uint64_t v47 = v65;
        sub_21CA3DFAC(v46, v65, (uint64_t (*)(void))type metadata accessor for FMFLocation);
        sub_21CA3DFAC(v47, v69, (uint64_t (*)(void))type metadata accessor for FMFLocation);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v22 = sub_21CA47FB4(0, *(void *)(v22 + 16) + 1, 1, v22);
        }
        unint64_t v49 = *(void *)(v22 + 16);
        unint64_t v48 = *(void *)(v22 + 24);
        if (v49 >= v48 >> 1) {
          unint64_t v22 = sub_21CA47FB4(v48 > 1, v49 + 1, 1, v22);
        }
        *(void *)(v22 + 16) = v49 + 1;
        sub_21CA3DFAC(v69, v22 + v37 + v49 * v38, (uint64_t (*)(void))type metadata accessor for FMFLocation);
      }
      v36 += v73;
      --v40;
    }
    while (v40);
    uint64_t v18 = swift_bridgeObjectRelease();
    uint64_t v50 = v68;
  }
  else
  {
    uint64_t v50 = MEMORY[0x263F8EE78];
  }
  uint64_t v51 = v62;
  uint64_t v52 = v63;
  uint64_t v75 = v63 + 16;
  uint64_t v53 = OBJC_IVAR____TtC7FMFCore25FMFGenericResponseHandler_dataManager;
  uint64_t v54 = *(void *)(v62 + OBJC_IVAR____TtC7FMFCore25FMFGenericResponseHandler_dataManager);
  MEMORY[0x270FA5388](v18);
  *(&v59 - 2) = v22;
  *(&v59 - 1) = v54;
  swift_retain();
  sub_21CB88910();
  swift_release();
  uint64_t v55 = swift_bridgeObjectRelease();
  uint64_t v56 = *(void *)(v51 + v53);
  MEMORY[0x270FA5388](v55);
  *(&v59 - 2) = v56;
  *(&v59 - 1) = v50;
  swift_retain();
  sub_21CB88910();
  swift_release();
  swift_bridgeObjectRelease();
  char v57 = v76;
  swift_beginAccess();
  *(unsigned char *)(v52 + 16) = v57;
  return objc_msgSend(v64, sel_signal);
}

uint64_t sub_21CA3DFAC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_21CA3E014(uint64_t a1)
{
  uint64_t v2 = sub_21CB88100();
  uint64_t v147 = *(void *)(v2 - 8);
  uint64_t v148 = v2;
  MEMORY[0x270FA5388](v2);
  unint64_t v145 = (char *)v142 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v146 = sub_21CB88150();
  uint64_t v144 = *(void *)(v146 - 8);
  MEMORY[0x270FA5388](v146);
  uint64_t v143 = (char *)v142 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v160 = sub_21CB87590();
  uint64_t v5 = *(void *)(v160 - 8);
  MEMORY[0x270FA5388](v160);
  v159 = (char *)v142 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  BOOL v7 = (int *)type metadata accessor for FMFLocation();
  uint64_t v8 = MEMORY[0x270FA5388](v7);
  uint64_t v150 = (char *)v142 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v165 = (uint64_t)v142 - v11;
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v163 = (uint64_t)v142 - v13;
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v15 = MEMORY[0x270FA5388](v14);
  uint64_t v154 = (char *)v142 - v16;
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)v142 - v18;
  uint64_t v20 = MEMORY[0x270FA5388](v17);
  unint64_t v22 = (char *)v142 - v21;
  uint64_t v23 = MEMORY[0x270FA5388](v20);
  uint64_t v162 = (uint64_t)v142 - v24;
  uint64_t v25 = MEMORY[0x270FA5388](v23);
  uint64_t v157 = (char *)v142 - v26;
  uint64_t v27 = MEMORY[0x270FA5388](v25);
  uint64_t v28 = MEMORY[0x270FA5388](v27);
  uint64_t v156 = (uint64_t)v142 - v29;
  uint64_t v30 = MEMORY[0x270FA5388](v28);
  uint64_t v32 = (char *)v142 - v31;
  MEMORY[0x270FA5388](v30);
  unint64_t v37 = (char *)v142 - v36;
  uint64_t v149 = a1;
  uint64_t v38 = *(void *)(a1 + 624);
  if (v38)
  {
    uint64_t v39 = *(void *)(v38 + 16);
    if (v39)
    {
      uint64_t v152 = v35;
      uint64_t v153 = v34;
      unint64_t v166 = (*(unsigned __int8 *)(v33 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80);
      uint64_t v40 = v38 + v166;
      uint64_t v41 = *(void *)(v33 + 72);
      uint64_t v158 = (void (**)(char *, uint64_t))(v5 + 8);
      v142[1] = v38;
      swift_bridgeObjectRetain();
      uint64_t v42 = v40;
      uint64_t v168 = v39 - 1;
      *(void *)&long long v43 = 136315138;
      long long v155 = v43;
      uint64_t v151 = MEMORY[0x263F8EE58] + 8;
      uint64_t v161 = (void *)MEMORY[0x263F8EE78];
      unint64_t v170 = MEMORY[0x263F8EE78];
      uint64_t v167 = v41;
      v164 = v32;
      while (1)
      {
        uint64_t v169 = v42;
        sub_21CA571E8(v42, (uint64_t)v37, (uint64_t (*)(void))type metadata accessor for FMFLocation);
        int v44 = v37[33];
        sub_21CA26A4C((uint64_t)&v37[v7[11]], (uint64_t)v175, &qword_267C951F0);
        sub_21CA26A4C((uint64_t)v175, (uint64_t)v176, &qword_267C951F0);
        if (sub_21CA7CDBC((uint64_t)v176) == 1) {
          goto LABEL_12;
        }
        double v45 = v44 ? 604800.0 : 7200.0;
        id v46 = v176[38];
        id v47 = objc_msgSend(v46, sel_timestamp);
        unint64_t v48 = v159;
        sub_21CB87560();

        sub_21CB87530();
        double v50 = v49;
        (*v158)(v48, v160);

        if (fabs(v50) >= v45)
        {
LABEL_12:
          if (qword_267C94990 != -1) {
            swift_once();
          }
          uint64_t v57 = sub_21CB880A0();
          sub_21CA4CC18(v57, (uint64_t)qword_267CA5368);
          sub_21CA571E8((uint64_t)v37, (uint64_t)v32, (uint64_t (*)(void))type metadata accessor for FMFLocation);
          uint64_t v58 = sub_21CB88070();
          os_log_type_t v59 = sub_21CB88880();
          if (os_log_type_enabled(v58, v59))
          {
            uint64_t v60 = swift_slowAlloc();
            uint64_t v61 = swift_slowAlloc();
            v174[0] = v61;
            *(_DWORD *)uint64_t v60 = v155;
            uint64_t v62 = FMFLocation.debugDescription.getter();
            *(void *)(v60 + 4) = sub_21CA4E450(v62, v63, v174);
            swift_bridgeObjectRelease();
            sub_21CA57050((uint64_t)v164, (uint64_t (*)(void))type metadata accessor for FMFLocation);
            _os_log_impl(&dword_21CA00000, v58, v59, "FMFDataManager: Purging location: %s", (uint8_t *)v60, 0xCu);
            swift_arrayDestroy();
            uint64_t v64 = v61;
            uint64_t v32 = v164;
            MEMORY[0x21D4B6B70](v64, -1, -1);
            MEMORY[0x21D4B6B70](v60, -1, -1);
          }
          else
          {
            sub_21CA57050((uint64_t)v32, (uint64_t (*)(void))type metadata accessor for FMFLocation);
          }

          char v51 = 0;
          uint64_t v41 = v167;
          if (!v37[33])
          {
LABEL_10:
            uint64_t v52 = v152;
            sub_21CA571E8((uint64_t)v37, v152, (uint64_t (*)(void))type metadata accessor for FMFLocation);
            uint64_t v53 = v157;
            uint64_t v54 = &v157[v7[8]];
            uint64_t v55 = sub_21CB875D0();
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v55 - 8) + 56))(v54, 1, 1, v55);
            uint64_t v56 = *(void *)(v52 + 8);
            *uint64_t v53 = *(void *)v52;
            v53[1] = v56;
            if (v51)
            {
              sub_21CA26A4C(v52 + v7[11], (uint64_t)v173, &qword_267C951F0);
              sub_21CAC34E8((uint64_t)v173);
            }
            else
            {
              sub_21CA8F350((uint64_t)v173);
            }
            sub_21CA26A4C((uint64_t)v173, (uint64_t)v174, &qword_267C951F0);
            uint64_t v77 = (uint64_t)v157;
            sub_21CA26A4C((uint64_t)v174, (uint64_t)&v157[v7[11]], &qword_267C951F0);
            *(unsigned char *)(v77 + 16) = 1;
            *(unsigned char *)(v77 + 33) = *(unsigned char *)(v52 + 33);
            char v78 = *(unsigned char *)(v52 + 32);
            *(void *)(v77 + 24) = *(void *)(v52 + 24);
            uint64_t v79 = v7[9];
            char v80 = *(unsigned char *)(v52 + v79);
            *(unsigned char *)(v77 + 32) = v78;
            *(unsigned char *)(v77 + v79) = v80;
            char v81 = *(unsigned char *)(v52 + v7[10]);
            swift_bridgeObjectRetain();
            sub_21CA57050(v52, (uint64_t (*)(void))type metadata accessor for FMFLocation);
            *(unsigned char *)(v77 + v7[10]) = v81;
            sub_21CA591A4(v77, v156, (uint64_t (*)(void))type metadata accessor for FMFLocation);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              unint64_t v170 = sub_21CA47FB4(0, *(void *)(v170 + 16) + 1, 1, v170);
            }
            uint64_t v32 = v164;
            unint64_t v83 = *(void *)(v170 + 16);
            unint64_t v82 = *(void *)(v170 + 24);
            if (v83 >= v82 >> 1) {
              unint64_t v170 = sub_21CA47FB4(v82 > 1, v83 + 1, 1, v170);
            }
            unint64_t v84 = v170;
            *(void *)(v170 + 16) = v83 + 1;
            sub_21CA591A4(v156, v84 + v166 + v83 * v41, (uint64_t (*)(void))type metadata accessor for FMFLocation);
            if (*((void *)v37 + 1))
            {
              uint64_t v85 = *(void *)v37;
              unint64_t v86 = *((void *)v37 + 1);
            }
            else
            {
              uint64_t v85 = 0;
              unint64_t v86 = 0xE000000000000000;
            }
            swift_bridgeObjectRetain();
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              uint64_t v161 = sub_21CA3F8C0(0, v161[2] + 1, 1, v161);
            }
            unint64_t v88 = v161[2];
            unint64_t v87 = v161[3];
            if (v88 >= v87 >> 1) {
              uint64_t v161 = sub_21CA3F8C0((void *)(v87 > 1), v88 + 1, 1, v161);
            }
            uint64_t v89 = v161;
            v161[2] = v88 + 1;
            uint64_t v90 = &v89[3 * v88];
            v90[4] = v85;
            v90[5] = v86;
            *((unsigned char *)v90 + 48) = 1;
            sub_21CA57050((uint64_t)v37, (uint64_t (*)(void))type metadata accessor for FMFLocation);
            uint64_t v41 = v167;
            uint64_t v76 = v168;
            uint64_t v75 = v169;
            if (!v168) {
              goto LABEL_46;
            }
            goto LABEL_40;
          }
        }
        else
        {
          char v51 = 1;
          if (!v37[33]) {
            goto LABEL_10;
          }
        }
        sub_21CA571E8((uint64_t)v37, (uint64_t)v22, (uint64_t (*)(void))type metadata accessor for FMFLocation);
        uint64_t v65 = &v19[v7[8]];
        uint64_t v66 = sub_21CB875D0();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v66 - 8) + 56))(v65, 1, 1, v66);
        uint64_t v67 = *((void *)v22 + 1);
        *(void *)uint64_t v19 = *(void *)v22;
        *((void *)v19 + 1) = v67;
        if (v51)
        {
          sub_21CA26A4C((uint64_t)&v22[v7[11]], (uint64_t)v173, &qword_267C951F0);
          sub_21CAC34E8((uint64_t)v173);
        }
        else
        {
          sub_21CA8F350((uint64_t)v173);
        }
        sub_21CA26A4C((uint64_t)v173, (uint64_t)v174, &qword_267C951F0);
        sub_21CA26A4C((uint64_t)v174, (uint64_t)&v19[v7[11]], &qword_267C951F0);
        v19[16] = 1;
        v19[33] = v22[33];
        char v68 = v22[32];
        *((void *)v19 + 3) = *((void *)v22 + 3);
        uint64_t v69 = v7[9];
        char v70 = v22[v69];
        v19[32] = v68;
        v19[v69] = v70;
        char v71 = v22[v7[10]];
        swift_bridgeObjectRetain();
        sub_21CA57050((uint64_t)v22, (uint64_t (*)(void))type metadata accessor for FMFLocation);
        v19[v7[10]] = v71;
        sub_21CA591A4((uint64_t)v19, v162, (uint64_t (*)(void))type metadata accessor for FMFLocation);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v170 = sub_21CA47FB4(0, *(void *)(v170 + 16) + 1, 1, v170);
        }
        unint64_t v73 = *(void *)(v170 + 16);
        unint64_t v72 = *(void *)(v170 + 24);
        if (v73 >= v72 >> 1) {
          unint64_t v170 = sub_21CA47FB4(v72 > 1, v73 + 1, 1, v170);
        }
        unint64_t v74 = v170;
        *(void *)(v170 + 16) = v73 + 1;
        sub_21CA591A4(v162, v74 + v166 + v73 * v41, (uint64_t (*)(void))type metadata accessor for FMFLocation);
        sub_21CA57050((uint64_t)v37, (uint64_t (*)(void))type metadata accessor for FMFLocation);
        uint64_t v76 = v168;
        uint64_t v75 = v169;
        if (!v168)
        {
LABEL_46:
          swift_bridgeObjectRelease();
          uint64_t v96 = v149;
          swift_beginAccess();
          if (*(void *)(v96 + 632)) {
            uint64_t v97 = *(void *)(v96 + 632);
          }
          else {
            uint64_t v97 = MEMORY[0x263F8EE78];
          }
          uint64_t v98 = *(void *)(v97 + 16);
          if (v98)
          {
            v164 = (char *)v97;
            uint64_t v99 = v97 + v166;
            swift_bridgeObjectRetain();
            unint64_t v100 = MEMORY[0x263F8EE78];
            uint64_t v101 = v98 - 1;
            uint64_t v168 = MEMORY[0x263F8EE58] + 8;
            uint64_t v102 = (uint64_t)v150;
            uint64_t v103 = (uint64_t)v154;
            while (1)
            {
              uint64_t v169 = v99;
              sub_21CA571E8(v99, v103, (uint64_t (*)(void))type metadata accessor for FMFLocation);
              int v104 = *(unsigned __int8 *)(v103 + 33);
              sub_21CA26A4C(v103 + v7[11], (uint64_t)v173, &qword_267C951F0);
              sub_21CA26A4C((uint64_t)v173, (uint64_t)v174, &qword_267C951F0);
              if (sub_21CA7CDBC((uint64_t)v174) == 1) {
                goto LABEL_77;
              }
              double v105 = v104 ? 604800.0 : 7200.0;
              id v106 = (id)v174[38];
              id v107 = objc_msgSend(v106, sel_timestamp);
              unint64_t v108 = v159;
              sub_21CB87560();

              sub_21CB87530();
              double v110 = v109;
              char v111 = v108;
              uint64_t v112 = v167;
              (*v158)(v111, v160);

              if (fabs(v110) >= v105)
              {
LABEL_77:
                if (qword_267C94990 != -1) {
                  swift_once();
                }
                uint64_t v114 = sub_21CB880A0();
                sub_21CA4CC18(v114, (uint64_t)qword_267CA5368);
                uint64_t v115 = v103;
                uint64_t v116 = v153;
                sub_21CA571E8(v115, v153, (uint64_t (*)(void))type metadata accessor for FMFLocation);
                unint64_t v117 = sub_21CB88070();
                os_log_type_t v118 = sub_21CB88880();
                if (os_log_type_enabled(v117, v118))
                {
                  uint64_t v119 = swift_slowAlloc();
                  uint64_t v120 = swift_slowAlloc();
                  v172[0] = v120;
                  *(_DWORD *)uint64_t v119 = v155;
                  uint64_t v121 = FMFLocation.debugDescription.getter();
                  *(void *)(v119 + 4) = sub_21CA4E450(v121, v122, v172);
                  swift_bridgeObjectRelease();
                  sub_21CA57050(v116, (uint64_t (*)(void))type metadata accessor for FMFLocation);
                  _os_log_impl(&dword_21CA00000, v117, v118, "FMFDataManager: Purging location: %s", (uint8_t *)v119, 0xCu);
                  swift_arrayDestroy();
                  uint64_t v123 = v120;
                  uint64_t v102 = (uint64_t)v150;
                  MEMORY[0x21D4B6B70](v123, -1, -1);
                  MEMORY[0x21D4B6B70](v119, -1, -1);
                }
                else
                {
                  sub_21CA57050(v116, (uint64_t (*)(void))type metadata accessor for FMFLocation);
                }

                char v113 = 0;
                uint64_t v103 = (uint64_t)v154;
                uint64_t v112 = v167;
              }
              else
              {
                char v113 = 1;
              }
              uint64_t v124 = (void *)v165;
              sub_21CA571E8(v103, v165, (uint64_t (*)(void))type metadata accessor for FMFLocation);
              uint64_t v125 = v102 + v7[8];
              uint64_t v126 = sub_21CB875D0();
              (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v126 - 8) + 56))(v125, 1, 1, v126);
              uint64_t v127 = v124[1];
              *(void *)uint64_t v102 = *v124;
              *(void *)(v102 + 8) = v127;
              if (v113)
              {
                sub_21CA26A4C(v165 + v7[11], (uint64_t)v171, &qword_267C951F0);
                sub_21CAC34E8((uint64_t)v171);
              }
              else
              {
                sub_21CA8F350((uint64_t)v171);
              }
              sub_21CA26A4C((uint64_t)v171, (uint64_t)v172, &qword_267C951F0);
              sub_21CA26A4C((uint64_t)v172, v102 + v7[11], &qword_267C951F0);
              *(unsigned char *)(v102 + 16) = 1;
              uint64_t v128 = v165;
              *(unsigned char *)(v102 + 33) = *(unsigned char *)(v165 + 33);
              char v129 = *(unsigned char *)(v128 + 32);
              *(void *)(v102 + 24) = *(void *)(v128 + 24);
              uint64_t v130 = v7[9];
              char v131 = *(unsigned char *)(v128 + v130);
              *(unsigned char *)(v102 + 32) = v129;
              *(unsigned char *)(v102 + v130) = v131;
              char v132 = *(unsigned char *)(v128 + v7[10]);
              swift_bridgeObjectRetain();
              sub_21CA57050(v128, (uint64_t (*)(void))type metadata accessor for FMFLocation);
              *(unsigned char *)(v102 + v7[10]) = v132;
              sub_21CA591A4(v102, v163, (uint64_t (*)(void))type metadata accessor for FMFLocation);
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                unint64_t v100 = sub_21CA47FB4(0, *(void *)(v100 + 16) + 1, 1, v100);
              }
              unint64_t v134 = *(void *)(v100 + 16);
              unint64_t v133 = *(void *)(v100 + 24);
              if (v134 >= v133 >> 1) {
                unint64_t v100 = sub_21CA47FB4(v133 > 1, v134 + 1, 1, v100);
              }
              *(void *)(v100 + 16) = v134 + 1;
              sub_21CA591A4(v163, v100 + v166 + v134 * v112, (uint64_t (*)(void))type metadata accessor for FMFLocation);
              sub_21CA57050(v103, (uint64_t (*)(void))type metadata accessor for FMFLocation);
              if (!v101) {
                break;
              }
              --v101;
              uint64_t v99 = v169 + v112;
            }
            swift_bridgeObjectRelease();
          }
          else
          {
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            unint64_t v100 = MEMORY[0x263F8EE78];
          }
          uint64_t v135 = v149;
          *(void *)(v149 + 584) = v161;
          swift_bridgeObjectRelease();
          swift_beginAccess();
          unint64_t v136 = v170;
          *(void *)(v135 + 616) = v170;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(void *)(v135 + 632) = v100;
          swift_bridgeObjectRelease();
          uint64_t v137 = swift_allocObject();
          *(void *)(v137 + 16) = v135;
          *(void *)(v137 + 24) = v136;
          v174[4] = (uint64_t)sub_21CA658FC;
          v174[5] = v137;
          v174[0] = MEMORY[0x263EF8330];
          v174[1] = 1107296256;
          v174[2] = (uint64_t)sub_21CA1B084;
          v174[3] = (uint64_t)&unk_26CD6EDC0;
          unint64_t v138 = _Block_copy(v174);
          swift_retain();
          v139 = v143;
          sub_21CB88120();
          v172[0] = MEMORY[0x263F8EE78];
          sub_21CA36540((unint64_t *)&qword_267C96FC0, MEMORY[0x263F8F030]);
          sub_21CA57E34((uint64_t *)&unk_267C96DD0);
          sub_21CA356BC((unint64_t *)&qword_267C96FD0, (uint64_t *)&unk_267C96DD0);
          os_log_type_t v140 = v145;
          uint64_t v141 = v148;
          sub_21CB88A60();
          MEMORY[0x21D4B5A20](0, v139, v140, v138);
          _Block_release(v138);
          (*(void (**)(char *, uint64_t))(v147 + 8))(v140, v141);
          (*(void (**)(char *, uint64_t))(v144 + 8))(v139, v146);
          return swift_release();
        }
LABEL_40:
        uint64_t v168 = v76 - 1;
        uint64_t v42 = v75 + v41;
      }
    }
  }
  if (qword_267C94990 != -1) {
    swift_once();
  }
  uint64_t v91 = sub_21CB880A0();
  sub_21CA4CC18(v91, (uint64_t)qword_267CA5368);
  int v92 = sub_21CB88070();
  os_log_type_t v93 = sub_21CB88880();
  if (os_log_type_enabled(v92, v93))
  {
    char v94 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)char v94 = 0;
    _os_log_impl(&dword_21CA00000, v92, v93, "FMFDataManager: Purge skipped, we don't have any", v94, 2u);
    MEMORY[0x21D4B6B70](v94, -1, -1);
  }

  return sub_21CB24DDC();
}

uint64_t FMFLocation.debugDescription.getter()
{
  uint64_t v1 = v0;
  v15[0] = 0;
  v15[1] = 0xE000000000000000;
  sub_21CB88B70();
  swift_bridgeObjectRelease();
  unint64_t v16 = 0xD00000000000001ALL;
  unint64_t v17 = 0x800000021CB95180;
  swift_bridgeObjectRetain();
  sub_21CB883D0();
  swift_bridgeObjectRelease();
  sub_21CB883D0();
  uint64_t v2 = type metadata accessor for FMFLocation();
  sub_21CA26A4C(v0 + *(int *)(v2 + 44), (uint64_t)v14, &qword_267C951F0);
  sub_21CA26A4C((uint64_t)v14, (uint64_t)v15, &qword_267C951F0);
  if (sub_21CA7CDBC((uint64_t)v15) != 1)
  {
    if (v15[41])
    {
      uint64_t v3 = sub_21CB88320();
      uint64_t v5 = v4;
      swift_bridgeObjectRetain();
      v6._countAndFlagsBits = v3;
      v6._object = v5;
      FMFDefaultLabel.init(rawValue:)(v6);
      if (LOBYTE(v13[0]) != 5)
      {
        FMFDefaultLabel.localizedLabel.getter();
        swift_bridgeObjectRelease();
      }
    }
  }
  sub_21CB883D0();
  swift_bridgeObjectRelease();
  sub_21CB883D0();
  unint64_t v8 = v16;
  unint64_t v7 = v17;
  sub_21CB88B70();
  swift_bridgeObjectRelease();
  strcpy((char *)v13, "locating: ");
  sub_21CB883D0();
  swift_bridgeObjectRelease();
  sub_21CB883D0();
  sub_21CB88310();
  sub_21CB883D0();
  swift_bridgeObjectRelease();
  sub_21CB883D0();
  swift_bridgeObjectRetain();
  sub_21CB883D0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v13[0] = 0;
  v13[1] = 0xE000000000000000;
  sub_21CB88B70();
  swift_bridgeObjectRelease();
  v13[45] = 0x6E6F697461636F6CLL;
  v13[46] = 0xEA0000000000203ALL;
  sub_21CA26A4C((uint64_t)v14, (uint64_t)v13, &qword_267C951F0);
  sub_21CA93348((uint64_t)v14, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_21CA5C7D4);
  sub_21CA57E34(&qword_267C951F0);
  sub_21CB88310();
  sub_21CB883D0();
  swift_bridgeObjectRelease();
  sub_21CB883D0();
  uint64_t v9 = 0;
  if ((*(unsigned char *)(v1 + 32) & 1) == 0) {
    uint64_t v9 = *(void *)(v1 + 24);
  }
  v13[0] = v9;
  sub_21CB88F00();
  sub_21CB883D0();
  swift_bridgeObjectRelease();
  sub_21CB883D0();
  v13[0] = v8;
  v13[1] = v7;
  swift_bridgeObjectRetain();
  sub_21CB883D0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v11 = v13[0];
  uint64_t v10 = v13[1];
  v13[0] = 0;
  v13[1] = 0xE000000000000000;
  sub_21CB88B70();
  swift_bridgeObjectRelease();
  strcpy((char *)v13, "livePending: ");
  HIWORD(v13[1]) = -4864;
  sub_21CB883D0();
  swift_bridgeObjectRelease();
  sub_21CB883D0();
  sub_21CB883D0();
  swift_bridgeObjectRelease();
  v13[0] = v11;
  v13[1] = v10;
  swift_bridgeObjectRetain();
  sub_21CB883D0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_21CB883D0();
  swift_bridgeObjectRelease();
  return v13[0];
}

void *sub_21CA3F8C0(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_21CA3CD1C(a1, a2, a3, a4, &qword_267C95270);
}

uint64_t sub_21CA3F8D4@<X0>(unsigned char *a1@<X8>)
{
  return sub_21CA3F8F0(*(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

uint64_t sub_21CA3F8F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t v4 = v3;
  unint64_t v122 = a3;
  uint64_t v7 = sub_21CA57E34((uint64_t *)&unk_267C96EF0);
  uint64_t v8 = MEMORY[0x270FA5388](v7 - 8);
  uint64_t v124 = (uint64_t)&v116 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v133 = (uint64_t)&v116 - v10;
  uint64_t v135 = type metadata accessor for FMFLocation();
  uint64_t v130 = *(void *)(v135 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v135);
  unint64_t v134 = (char *)&v116 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v128 = (uint64_t)&v116 - v14;
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v120 = (uint64_t)&v116 - v16;
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  uint64_t v118 = (uint64_t)&v116 - v18;
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  unint64_t v117 = (uint64_t *)((char *)&v116 - v20);
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  uint64_t v119 = (uint64_t)&v116 - v22;
  uint64_t v23 = MEMORY[0x270FA5388](v21);
  uint64_t v125 = (uint64_t)&v116 - v24;
  uint64_t v25 = MEMORY[0x270FA5388](v23);
  uint64_t v123 = (uint64_t)&v116 - v26;
  uint64_t v27 = MEMORY[0x270FA5388](v25);
  uint64_t v131 = (uint64_t)&v116 - v28;
  uint64_t v29 = MEMORY[0x270FA5388](v27);
  uint64_t v31 = (uint64_t *)((char *)&v116 - v30);
  uint64_t v32 = MEMORY[0x270FA5388](v29);
  unint64_t v137 = (unint64_t)&v116 - v33;
  MEMORY[0x270FA5388](v32);
  unint64_t v136 = (uint64_t *)((char *)&v116 - v34);
  uint64_t v35 = sub_21CB87590();
  uint64_t v36 = *(void *)(v35 - 8);
  MEMORY[0x270FA5388](v35);
  uint64_t v38 = (char *)&v116 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v126 = (uint64_t *)(a2 + 632);
  swift_beginAccess();
  uint64_t v132 = a2;
  uint64_t v39 = *(void *)(a2 + 632);
  unint64_t v138 = v31;
  if (!v39) {
    goto LABEL_9;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char v40 = sub_21CA48880(a1, v39);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if (v40)
  {
    *unint64_t v122 = 0;
    return result;
  }
  uint64_t v42 = *v126;
  uint64_t v31 = v138;
  if (*v126)
  {
    v142[0] = MEMORY[0x263F8EE78];
    swift_bridgeObjectRetain();
    sub_21CB87580();
    sub_21CB874E0();
    double v44 = v43;
    (*(void (**)(char *, uint64_t))(v36 + 8))(v38, v35);
    uint64_t v45 = *(void *)(a1 + 16);
    if (v45)
    {
      uint64_t v46 = a1 + ((*(unsigned __int8 *)(v130 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v130 + 80));
      uint64_t v47 = *(void *)(v130 + 72);
      swift_bridgeObjectRetain();
      do
      {
        sub_21CA47208(v46, v42, v142, 5.0, 10.0, 300.0, v44);
        v46 += v47;
        --v45;
      }
      while (v45);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v31 = v138;
      a1 = v142[0];
    }
    else
    {
      swift_bridgeObjectRelease();
      a1 = v142[0];
    }
  }
  else
  {
LABEL_9:
    swift_bridgeObjectRetain();
  }
  unint64_t v48 = v136;
  *(void *)(v132 + 576) = 0;
  swift_bridgeObjectRelease();
  uint64_t v49 = *(void *)(a1 + 16);
  if (!v49)
  {
    swift_bridgeObjectRelease();
    uint64_t v53 = (uint64_t *)MEMORY[0x263F8EE80];
    goto LABEL_29;
  }
  uint64_t v121 = v3;
  uint64_t v50 = *(unsigned __int8 *)(v130 + 80);
  char v129 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))a1;
  uint64_t v51 = a1 + ((v50 + 32) & ~v50);
  uint64_t v52 = *(void *)(v130 + 72);
  uint64_t v53 = (uint64_t *)MEMORY[0x263F8EE80];
  uint64_t v132 = v52;
  while (1)
  {
    sub_21CA571E8(v51, (uint64_t)v48, (uint64_t (*)(void))type metadata accessor for FMFLocation);
    uint64_t v55 = v48[1];
    if (!v55) {
      goto LABEL_14;
    }
    uint64_t v56 = *v48;
    sub_21CA571E8((uint64_t)v48, v137, (uint64_t (*)(void))type metadata accessor for FMFLocation);
    swift_bridgeObjectRetain();
    unint64_t v57 = (unint64_t)v53;
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v142[0] = v57;
    unint64_t v60 = sub_21CA5BCE0(v56, v55);
    uint64_t v61 = *(void *)(v57 + 16);
    BOOL v62 = (v59 & 1) == 0;
    uint64_t v63 = v61 + v62;
    if (__OFADD__(v61, v62)) {
      break;
    }
    char v64 = v59;
    if (*(void *)(v57 + 24) >= v63)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        uint64_t v53 = (uint64_t *)v142[0];
        if ((v59 & 1) == 0) {
          goto LABEL_23;
        }
      }
      else
      {
        sub_21CB858B0();
        uint64_t v53 = (uint64_t *)v142[0];
        if ((v64 & 1) == 0) {
          goto LABEL_23;
        }
      }
    }
    else
    {
      sub_21CA5C928(v63, isUniquelyReferenced_nonNull_native);
      unint64_t v65 = sub_21CA5BCE0(v56, v55);
      if ((v64 & 1) != (v66 & 1)) {
        goto LABEL_78;
      }
      unint64_t v60 = v65;
      uint64_t v53 = (uint64_t *)v142[0];
      if ((v64 & 1) == 0)
      {
LABEL_23:
        v53[(v60 >> 6) + 8] |= 1 << v60;
        uint64_t v67 = (uint64_t *)(v53[6] + 16 * v60);
        *uint64_t v67 = v56;
        v67[1] = v55;
        uint64_t v68 = v53[7] + v60 * v132;
        uint64_t v52 = v132;
        sub_21CA591A4(v137, v68, (uint64_t (*)(void))type metadata accessor for FMFLocation);
        uint64_t v69 = v53[2];
        BOOL v70 = __OFADD__(v69, 1);
        uint64_t v71 = v69 + 1;
        if (v70) {
          goto LABEL_77;
        }
        v53[2] = v71;
        swift_bridgeObjectRetain();
        goto LABEL_13;
      }
    }
    uint64_t v54 = v53[7] + v60 * v132;
    uint64_t v52 = v132;
    sub_21CA5C95C(v137, v54, (uint64_t (*)(void))type metadata accessor for FMFLocation);
LABEL_13:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v31 = v138;
    unint64_t v48 = v136;
LABEL_14:
    sub_21CA57050((uint64_t)v48, (uint64_t (*)(void))type metadata accessor for FMFLocation);
    v51 += v52;
    if (!--v49)
    {
      swift_bridgeObjectRelease();
      uint64_t v4 = v121;
LABEL_29:
      unint64_t v143 = MEMORY[0x263F8EE78];
      if (*v126) {
        uint64_t v72 = *v126;
      }
      else {
        uint64_t v72 = MEMORY[0x263F8EE78];
      }
      uint64_t v73 = *(void *)(v72 + 16);
      uint64_t v74 = (uint64_t)v134;
      if (!v73)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
LABEL_74:
        uint64_t v115 = swift_bridgeObjectRetain();
        sub_21CA488C0(v115);
        *uint64_t v126 = v143;
        swift_bridgeObjectRelease();
        *unint64_t v122 = 1;
        return swift_bridgeObjectRelease();
      }
      uint64_t v121 = v4;
      unint64_t v75 = (*(unsigned __int8 *)(v130 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v130 + 80);
      uint64_t v116 = v72;
      unint64_t v136 = v53;
      unint64_t v137 = v75;
      uint64_t v76 = v72 + v75;
      uint64_t v77 = *(void *)(v130 + 72);
      char v78 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v130 + 56);
      v130 += 48;
      swift_bridgeObjectRetain();
      while (1)
      {
        sub_21CA571E8(v76, (uint64_t)v31, (uint64_t (*)(void))type metadata accessor for FMFLocation);
        uint64_t v81 = v31[1];
        if (v81) {
          break;
        }
LABEL_46:
        sub_21CA571E8((uint64_t)v31, v74, (uint64_t (*)(void))type metadata accessor for FMFLocation);
        unint64_t v92 = v143;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v92 = sub_21CA47FB4(0, *(void *)(v92 + 16) + 1, 1, v92);
        }
        unint64_t v94 = *(void *)(v92 + 16);
        unint64_t v93 = *(void *)(v92 + 24);
        if (v94 >= v93 >> 1) {
          unint64_t v92 = sub_21CA47FB4(v93 > 1, v94 + 1, 1, v92);
        }
        *(void *)(v92 + 16) = v94 + 1;
        sub_21CA591A4(v74, v92 + v137 + v94 * v77, (uint64_t (*)(void))type metadata accessor for FMFLocation);
        unint64_t v143 = v92;
LABEL_36:
        uint64_t v31 = v138;
        sub_21CA57050((uint64_t)v138, (uint64_t (*)(void))type metadata accessor for FMFLocation);
        v76 += v77;
        if (!--v73)
        {
          swift_bridgeObjectRelease();
          goto LABEL_74;
        }
      }
      unint64_t v82 = v136;
      if (v136[2])
      {
        uint64_t v83 = *v31;
        swift_bridgeObjectRetain();
        unint64_t v84 = sub_21CA5BCE0(v83, v81);
        if (v85)
        {
          uint64_t v86 = v82[7] + v84 * v77;
          uint64_t v87 = v133;
          sub_21CA571E8(v86, v133, (uint64_t (*)(void))type metadata accessor for FMFLocation);
          unint64_t v88 = *v78;
          uint64_t v89 = v87;
          uint64_t v90 = 0;
        }
        else
        {
          unint64_t v88 = *v78;
          uint64_t v87 = v133;
          uint64_t v89 = v133;
          uint64_t v90 = 1;
        }
        uint64_t v91 = v135;
        v88(v89, v90, 1, v135);
        swift_bridgeObjectRelease();
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))v130)(v87, 1, v91) != 1)
        {
          char v129 = v88;
          uint64_t v95 = v131;
          sub_21CA591A4(v87, v131, (uint64_t (*)(void))type metadata accessor for FMFLocation);
          uint64_t v132 = *(void *)(v95 + 8);
          if (v132)
          {
            uint64_t v127 = *(void *)v95;
            int v96 = *(unsigned __int8 *)(v95 + 33);
            uint64_t v97 = v123;
            sub_21CA571E8(v95, v123, (uint64_t (*)(void))type metadata accessor for FMFLocation);
            if (v96)
            {
              int v98 = *(unsigned __int8 *)(v97 + 16);
              swift_bridgeObjectRetain();
              sub_21CA57050(v97, (uint64_t (*)(void))type metadata accessor for FMFLocation);
              uint64_t v99 = v125;
              sub_21CA571E8(v95, v125, (uint64_t (*)(void))type metadata accessor for FMFLocation);
              if (v98 == 1)
              {
                sub_21CA26A4C(v99 + *(int *)(v91 + 44), (uint64_t)v141, &qword_267C951F0);
                sub_21CA26A4C((uint64_t)v141, (uint64_t)v142, &qword_267C951F0);
                if (sub_21CA7CDBC((uint64_t)v142) == 1)
                {
                  sub_21CA57050(v99, (uint64_t (*)(void))type metadata accessor for FMFLocation);
                  unint64_t v100 = v117;
                  sub_21CA571E8(v131, (uint64_t)v117, (uint64_t (*)(void))type metadata accessor for FMFLocation);
                  uint64_t v101 = v118;
                  sub_21CA571E8((uint64_t)v138, v118, (uint64_t (*)(void))type metadata accessor for FMFLocation);
                  sub_21CA76144(v140);
                  sub_21CA26A4C((uint64_t)v140, (uint64_t)v139, &qword_267C951E0);
                  uint64_t v102 = v119;
                  FMFLocation.init(from:updatedLocation:address:)(v100, v101, (uint64_t)v139, v119);
                  sub_21CA571E8(v102, v120, (uint64_t (*)(void))type metadata accessor for FMFLocation);
                  unint64_t v103 = v143;
                  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                    unint64_t v103 = sub_21CA47FB4(0, *(void *)(v103 + 16) + 1, 1, v103);
                  }
                  unint64_t v105 = *(void *)(v103 + 16);
                  unint64_t v104 = *(void *)(v103 + 24);
                  if (v105 >= v104 >> 1) {
                    unint64_t v103 = sub_21CA47FB4(v104 > 1, v105 + 1, 1, v103);
                  }
                  *(void *)(v103 + 16) = v105 + 1;
                  sub_21CA591A4(v120, v103 + v137 + v105 * v77, (uint64_t (*)(void))type metadata accessor for FMFLocation);
                  unint64_t v143 = v103;
                  sub_21CA57050(v119, (uint64_t (*)(void))type metadata accessor for FMFLocation);
LABEL_68:
                  uint64_t v109 = (uint64_t)v136;
                  swift_bridgeObjectRetain();
                  unint64_t v110 = sub_21CA5BCE0(v127, v132);
                  char v112 = v111;
                  swift_bridgeObjectRelease();
                  uint64_t v113 = v135;
                  if (v112)
                  {
                    int v114 = swift_isUniquelyReferenced_nonNull_native();
                    v142[0] = v109;
                    if (!v114)
                    {
                      sub_21CB858B0();
                      uint64_t v109 = v142[0];
                    }
                    swift_bridgeObjectRelease();
                    uint64_t v80 = v124;
                    sub_21CA591A4(*(void *)(v109 + 56) + v110 * v77, v124, (uint64_t (*)(void))type metadata accessor for FMFLocation);
                    unint64_t v136 = (uint64_t *)v109;
                    sub_21CA4870C(v110, v109);
                    swift_bridgeObjectRelease();
                    uint64_t v79 = 0;
                  }
                  else
                  {
                    uint64_t v79 = 1;
                    uint64_t v80 = v124;
                  }
                  v129(v80, v79, 1, v113);
                  swift_bridgeObjectRelease();
                  sub_21CA1B88C(v80, (uint64_t *)&unk_267C96EF0);
                  sub_21CA57050(v131, (uint64_t (*)(void))type metadata accessor for FMFLocation);
                  uint64_t v74 = (uint64_t)v134;
                  goto LABEL_36;
                }
                uint64_t v95 = v131;
              }
            }
            else
            {
              swift_bridgeObjectRetain();
              sub_21CA57050(v97, (uint64_t (*)(void))type metadata accessor for FMFLocation);
              uint64_t v99 = v125;
              sub_21CA571E8(v95, v125, (uint64_t (*)(void))type metadata accessor for FMFLocation);
            }
            sub_21CA57050(v99, (uint64_t (*)(void))type metadata accessor for FMFLocation);
            sub_21CA571E8(v95, v128, (uint64_t (*)(void))type metadata accessor for FMFLocation);
            unint64_t v106 = v143;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              unint64_t v106 = sub_21CA47FB4(0, *(void *)(v106 + 16) + 1, 1, v106);
            }
            unint64_t v108 = *(void *)(v106 + 16);
            unint64_t v107 = *(void *)(v106 + 24);
            if (v108 >= v107 >> 1) {
              unint64_t v106 = sub_21CA47FB4(v107 > 1, v108 + 1, 1, v106);
            }
            *(void *)(v106 + 16) = v108 + 1;
            sub_21CA591A4(v128, v106 + v137 + v108 * v77, (uint64_t (*)(void))type metadata accessor for FMFLocation);
            unint64_t v143 = v106;
            goto LABEL_68;
          }
          sub_21CA57050(v95, (uint64_t (*)(void))type metadata accessor for FMFLocation);
          goto LABEL_45;
        }
      }
      else
      {
        uint64_t v87 = v133;
        (*v78)(v133, 1, 1, v135);
      }
      sub_21CA1B88C(v87, (uint64_t *)&unk_267C96EF0);
LABEL_45:
      uint64_t v74 = (uint64_t)v134;
      uint64_t v31 = v138;
      goto LABEL_46;
    }
  }
  __break(1u);
LABEL_77:
  __break(1u);
LABEL_78:
  uint64_t result = sub_21CB88FA0();
  __break(1u);
  return result;
}

uint64_t sub_21CA40728()
{
  unint64_t v103 = v0;
  uint64_t v1 = v0[7];
  uint64_t v2 = MEMORY[0x263F8EE78];
  v102[0] = MEMORY[0x263F8EE78];
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = swift_bridgeObjectRetain();
  if (v3)
  {
    uint64_t v6 = v0[21];
    uint64_t v5 = v0[22];
    unint64_t v7 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    uint64_t v8 = *(void *)(v5 + 72);
    uint64_t v9 = v4 + v7;
    do
    {
      uint64_t v10 = v0[24];
      sub_21CA570B0(v9, v10, (uint64_t (*)(void))type metadata accessor for FMFFriend);
      uint64_t v11 = v0[24];
      if ((*(unsigned char *)(v10 + *(int *)(v6 + 36)) & 2) != 0)
      {
        sub_21CA590D4(v11, v0[23], (uint64_t (*)(void))type metadata accessor for FMFFriend);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_21CA47FE8(0, *(void *)(v2 + 16) + 1, 1);
          uint64_t v2 = v102[0];
        }
        unint64_t v13 = *(void *)(v2 + 16);
        unint64_t v12 = *(void *)(v2 + 24);
        if (v13 >= v12 >> 1)
        {
          sub_21CA47FE8(v12 > 1, v13 + 1, 1);
          uint64_t v2 = v102[0];
        }
        uint64_t v14 = v0[23];
        *(void *)(v2 + 16) = v13 + 1;
        sub_21CA590D4(v14, v2 + v7 + v13 * v8, (uint64_t (*)(void))type metadata accessor for FMFFriend);
      }
      else
      {
        sub_21CA581B8(v11, (uint64_t (*)(void))type metadata accessor for FMFFriend);
      }
      v9 += v8;
      --v3;
    }
    while (v3);
  }
  swift_bridgeObjectRelease();
  uint64_t v15 = *(void *)(v2 + 16);
  if (!v15)
  {
    unint64_t v39 = MEMORY[0x263F8EE78];
LABEL_35:
    v0[25] = v39;
    if (qword_267C94990 != -1) {
      swift_once();
    }
    uint64_t v40 = sub_21CB880A0();
    sub_21CA4CC18(v40, (uint64_t)qword_267CA5368);
    swift_bridgeObjectRetain();
    uint64_t v41 = sub_21CB88070();
    os_log_type_t v42 = sub_21CB88880();
    int v98 = v0;
    unint64_t v96 = v39;
    if (os_log_type_enabled(v41, v42))
    {
      uint64_t v43 = v0[20];
      uint64_t v45 = v0[17];
      uint64_t v44 = v0[18];
      uint64_t v46 = swift_slowAlloc();
      uint64_t v101 = swift_slowAlloc();
      v102[0] = v101;
      *(_DWORD *)uint64_t v46 = 134218242;
      v0[5] = *(void *)(v39 + 16);
      sub_21CB889C0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v46 + 12) = 2080;
      (*(void (**)(uint64_t, void, uint64_t))(v44 + 104))(v43, *MEMORY[0x263F3CCA8], v45);
      sub_21CA07D00(&qword_267C95788, MEMORY[0x263F3CCB0]);
      uint64_t v47 = v2;
      uint64_t v48 = sub_21CB88F00();
      unint64_t v50 = v49;
      (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v43, v45);
      uint64_t v51 = v48;
      uint64_t v2 = v47;
      uint64_t v0 = v98;
      v98[6] = sub_21CA4E450(v51, v50, v102);
      sub_21CB889C0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_21CA00000, v41, v42, "FMFSecureLocationCtrl: setup location stream for: %ld friends, mode: %s", (uint8_t *)v46, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x21D4B6B70](v101, -1, -1);
      MEMORY[0x21D4B6B70](v46, -1, -1);

      uint64_t v52 = *(void *)(v2 + 16);
      if (!v52)
      {
LABEL_56:
        uint64_t v78 = v0[8];
        swift_release();
        uint64_t v79 = *(void *)(v78 + 112);
        v0[26] = v79;
        if (v79)
        {
          (*(void (**)(void, void, void))(v0[18] + 104))(v0[19], *MEMORY[0x263F3CCA8], v0[17]);
          swift_retain();
          uint64_t v80 = (void *)swift_task_alloc();
          v0[27] = v80;
          *uint64_t v80 = v0;
          v80[1] = sub_21CA0574C;
          uint64_t v81 = v0[19];
          uint64_t v82 = v0[12];
          return MEMORY[0x270F296D8](v82, v96, v81, 1);
        }
        else
        {
          swift_bridgeObjectRelease();
          uint64_t v83 = v0[15];
          uint64_t v84 = v0[16];
          uint64_t v85 = v0[13];
          uint64_t v86 = v0[14];
          uint64_t v87 = v0[9];
          uint64_t v88 = v0[8];
          uint64_t v89 = sub_21CA57E34(&qword_267C957F0);
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v89 - 8) + 56))(v84, 1, 1, v89);
          uint64_t v90 = sub_21CB88640();
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v90 - 8) + 56))(v87, 1, 1, v90);
          sub_21CA24E80(v84, v83, &qword_267C957D0);
          uint64_t v91 = sub_21CA07D00(&qword_267C95800, (void (*)(uint64_t))type metadata accessor for FMFSecureLocationController);
          unint64_t v92 = (*(unsigned __int8 *)(v85 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v85 + 80);
          uint64_t v93 = swift_allocObject();
          *(void *)(v93 + 16) = v88;
          *(void *)(v93 + 24) = v91;
          sub_21CA26A4C(v83, v93 + v92, &qword_267C957D0);
          *(void *)(v93 + ((v86 + v92 + 7) & 0xFFFFFFFFFFFFFFF8)) = v88;
          swift_retain_n();
          sub_21CB0A588(v87, (uint64_t)&unk_267C95808, v93);
          swift_release();
          sub_21CA1B88C(v84, &qword_267C957D0);
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          unint64_t v94 = (uint64_t (*)(void))v0[1];
          return v94();
        }
      }
    }
    else
    {

      swift_bridgeObjectRelease();
      uint64_t v52 = *(void *)(v2 + 16);
      if (!v52) {
        goto LABEL_56;
      }
    }
    uint64_t v53 = v0[22];
    uint64_t v54 = (uint64_t *)(v2 + ((*(unsigned __int8 *)(v53 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v53 + 80)));
    uint64_t v55 = (uint64_t *)(v0[8] + 120);
    uint64_t v97 = *(void *)(v53 + 72);
    swift_retain();
    uint64_t v0 = v98;
    while (1)
    {
      uint64_t v99 = v52;
      uint64_t v62 = *v54;
      uint64_t v61 = v54[1];
      uint64_t v63 = v54[4];
      swift_beginAccess();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v102[0] = *v55;
      unint64_t v65 = (void *)v102[0];
      *uint64_t v55 = 0x8000000000000000;
      unint64_t v67 = sub_21CA5BCE0(v62, v61);
      uint64_t v68 = v65[2];
      BOOL v69 = (v66 & 1) == 0;
      uint64_t v70 = v68 + v69;
      if (__OFADD__(v68, v69)) {
        goto LABEL_68;
      }
      char v71 = v66;
      if (v65[3] >= v70)
      {
        if (isUniquelyReferenced_nonNull_native)
        {
          if ((v66 & 1) == 0) {
            goto LABEL_51;
          }
        }
        else
        {
          sub_21CB84E38();
          unint64_t v65 = (void *)v102[0];
          if ((v71 & 1) == 0) {
            goto LABEL_51;
          }
        }
      }
      else
      {
        sub_21CA45798(v70, isUniquelyReferenced_nonNull_native);
        unint64_t v65 = (void *)v102[0];
        unint64_t v72 = sub_21CA5BCE0(v62, v61);
        if ((v71 & 1) != (v73 & 1))
        {
          return sub_21CB88FA0();
        }
        unint64_t v67 = v72;
        if ((v71 & 1) == 0)
        {
LABEL_51:
          v65[(v67 >> 6) + 8] |= 1 << v67;
          uint64_t v74 = (uint64_t *)(v65[6] + 16 * v67);
          *uint64_t v74 = v62;
          v74[1] = v61;
          uint64_t v75 = v65[7] + 32 * v67;
          *(void *)uint64_t v75 = v62;
          *(void *)(v75 + 8) = v61;
          *(void *)(v75 + 16) = v63;
          *(_WORD *)(v75 + 24) = 0;
          *(unsigned char *)(v75 + 26) = 0;
          uint64_t v76 = v65[2];
          BOOL v37 = __OFADD__(v76, 1);
          uint64_t v77 = v76 + 1;
          if (v37) {
            goto LABEL_71;
          }
          v65[2] = v77;
          swift_bridgeObjectRetain();
          goto LABEL_43;
        }
      }
      uint64_t v56 = v65[7] + 32 * v67;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *(void *)uint64_t v56 = v62;
      *(void *)(v56 + 8) = v61;
      *(void *)(v56 + 16) = v63;
      *(_WORD *)(v56 + 24) = 0;
      *(unsigned char *)(v56 + 26) = 0;
LABEL_43:
      uint64_t v57 = v98[10];
      *uint64_t v55 = (uint64_t)v65;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_endAccess();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v58 = *v54;
      uint64_t v59 = v54[1];
      uint64_t v60 = sub_21CB87590();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v60 - 8) + 56))(v57, 1, 1, v60);
      sub_21CA41274(v58, v59, v57, 0);
      sub_21CA1B88C(v57, (uint64_t *)&unk_267C951B0);
      uint64_t v54 = (uint64_t *)((char *)v54 + v97);
      uint64_t v52 = v99 - 1;
      if (v99 == 1)
      {
        swift_release();
        goto LABEL_56;
      }
    }
  }
  uint64_t v16 = v0[22];
  uint64_t v17 = v2 + ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80));
  uint64_t v100 = *(void *)(v16 + 72);
  swift_retain();
  unint64_t v18 = MEMORY[0x263F8EE78];
  while (1)
  {
    sub_21CAA31DC(v17, v102);
    uint64_t v19 = v102[0];
    uint64_t v20 = *(void *)(v102[0] + 16);
    int64_t v21 = *(void *)(v18 + 16);
    int64_t v22 = v21 + v20;
    if (__OFADD__(v21, v20)) {
      break;
    }
    int v23 = swift_isUniquelyReferenced_nonNull_native();
    if (v23 && v22 <= *(void *)(v18 + 24) >> 1)
    {
      if (*(void *)(v19 + 16)) {
        goto LABEL_24;
      }
    }
    else
    {
      if (v21 <= v22) {
        int64_t v24 = v21 + v20;
      }
      else {
        int64_t v24 = v21;
      }
      unint64_t v18 = sub_21CA44504(v23, v24, 1, v18);
      if (*(void *)(v19 + 16))
      {
LABEL_24:
        uint64_t v25 = *(void *)(v18 + 16);
        uint64_t v26 = (*(void *)(v18 + 24) >> 1) - v25;
        uint64_t v27 = *(void *)(sub_21CB87CC0() - 8);
        uint64_t v28 = *(void *)(v27 + 72);
        if (v26 < v20) {
          goto LABEL_69;
        }
        unint64_t v29 = (*(unsigned __int8 *)(v27 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80);
        unint64_t v30 = v18 + v29 + v28 * v25;
        unint64_t v31 = v19 + v29;
        uint64_t v32 = v28 * v20;
        unint64_t v33 = v30 + v32;
        unint64_t v34 = v31 + v32;
        if (v31 < v33 && v30 < v34) {
          return sub_21CB88D50();
        }
        swift_arrayInitWithCopy();
        if (v20)
        {
          uint64_t v36 = *(void *)(v18 + 16);
          BOOL v37 = __OFADD__(v36, v20);
          uint64_t v38 = v36 + v20;
          if (v37) {
            goto LABEL_70;
          }
          *(void *)(v18 + 16) = v38;
        }
        goto LABEL_14;
      }
    }
    if (v20) {
      goto LABEL_67;
    }
LABEL_14:
    swift_bridgeObjectRelease();
    v17 += v100;
    if (!--v15)
    {
      swift_release();
      unint64_t v39 = v18;
      goto LABEL_35;
    }
  }
  __break(1u);
LABEL_67:
  __break(1u);
LABEL_68:
  __break(1u);
LABEL_69:
  __break(1u);
LABEL_70:
  __break(1u);
LABEL_71:
  __break(1u);
  return sub_21CB88D50();
}

char *sub_21CA41274(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v5 = v4;
  int v90 = a4;
  uint64_t v89 = (uint64_t (*)(char *, uint64_t, uint64_t))a3;
  uint64_t v92 = a1;
  uint64_t v7 = sub_21CB87590();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v83 = (char *)&v77 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v82 = (char *)&v77 - v12;
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v87 = (char *)&v77 - v14;
  MEMORY[0x270FA5388](v13);
  uint64_t v84 = (char *)&v77 - v15;
  uint64_t v16 = sub_21CA57E34(&qword_267C96AD8);
  uint64_t v17 = MEMORY[0x270FA5388](v16 - 8);
  uint64_t v19 = (char *)&v77 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  int64_t v21 = (char *)&v77 - v20;
  uint64_t v22 = type metadata accessor for ShallowRelabilityStats(0);
  uint64_t v93 = *(void *)(v22 - 8);
  MEMORY[0x270FA5388](v22);
  int64_t v24 = (double *)((char *)&v77 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v25 = sub_21CA57E34((uint64_t *)&unk_267C951B0);
  uint64_t v26 = MEMORY[0x270FA5388](v25 - 8);
  uint64_t v27 = MEMORY[0x270FA5388](v26);
  unint64_t v29 = (char *)&v77 - v28;
  uint64_t v30 = MEMORY[0x270FA5388](v27);
  uint64_t v32 = (char *)&v77 - v31;
  MEMORY[0x270FA5388](v30);
  uint64_t result = (char *)&v77 - v33;
  uint64_t v94 = a2;
  if (a2)
  {
    uint64_t v78 = v34;
    uint64_t v80 = v8;
    uint64_t v36 = *(void (**)(void))(v8 + 56);
    uint64_t v91 = (uint64_t)&v77 - v33;
    uint64_t v81 = v36;
    v36();
    uint64_t v86 = v5 + 152;
    swift_beginAccess();
    uint64_t v79 = v5;
    uint64_t v37 = *(void *)(v5 + 152);
    uint64_t v38 = *(void *)(v37 + 16);
    uint64_t v88 = v24;
    if (v38)
    {
      uint64_t v77 = v7;
      uint64_t v39 = v92;
      uint64_t v40 = v94;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      unint64_t v41 = sub_21CA5BCE0(v39, v40);
      uint64_t v43 = v93;
      if (v42)
      {
        sub_21CAF79DC(*(void *)(v37 + 56) + *(void *)(v93 + 72) * v41, (uint64_t)v21, type metadata accessor for ShallowRelabilityStats);
        uint64_t v44 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v43 + 56);
        uint64_t v45 = v21;
        uint64_t v46 = 0;
      }
      else
      {
        uint64_t v44 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v93 + 56);
        uint64_t v45 = v21;
        uint64_t v46 = 1;
      }
      uint64_t v85 = v44;
      v44(v45, v46, 1, v22);
      uint64_t v47 = v43;
      swift_bridgeObjectRelease();
      uint64_t v7 = v77;
      int64_t v24 = v88;
    }
    else
    {
      uint64_t v47 = v93;
      uint64_t v85 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v93 + 56);
      v85(v21, 1, 1, v22);
      swift_bridgeObjectRetain();
    }
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v47 + 48))(v21, 1, v22) == 1)
    {
      sub_21CA1B88C((uint64_t)v21, &qword_267C96AD8);
      ((void (*)(char *, uint64_t, uint64_t, uint64_t))v81)(&v19[*(int *)(v22 + 32)], 1, 1, v7);
      *(void *)uint64_t v19 = 0xBFF0000000000000;
      v19[8] = 0;
      __asm { FMOV            V0.2D, #-1.0 }
      *((_OWORD *)v19 + 1) = _Q0;
      v85(v19, 0, 1, v22);
      swift_beginAccess();
      sub_21CA41B9C((uint64_t)v19, v92, v94);
      swift_endAccess();
      uint64_t v53 = v91;
      return (char *)sub_21CA1B88C(v53, (uint64_t *)&unk_267C951B0);
    }
    uint64_t v54 = v91;
    sub_21CA1B88C(v91, (uint64_t *)&unk_267C951B0);
    sub_21CAF7914((uint64_t)v21, (uint64_t)v24, type metadata accessor for ShallowRelabilityStats);
    double v55 = *v24;
    sub_21CA4BFB4((uint64_t)v24 + *(int *)(v22 + 32), v54);
    double v56 = v24[2];
    double v57 = v24[3];
    sub_21CA4BFB4((uint64_t)v89, (uint64_t)v32);
    uint64_t v58 = v80;
    uint64_t v59 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v80 + 48);
    if (v59(v32, 1, v7) == 1)
    {
      sub_21CA1B88C((uint64_t)v32, (uint64_t *)&unk_267C951B0);
      sub_21CA4BFB4(v54, (uint64_t)v29);
      int v60 = v59(v29, 1, v7);
      uint64_t v61 = v87;
      if (v60 == 1)
      {
        sub_21CA1B88C((uint64_t)v29, (uint64_t *)&unk_267C951B0);
        uint64_t v62 = v79;
LABEL_22:
        if (v55 == -1.0)
        {
          uint64_t v71 = v62 + OBJC_IVAR____TtC7FMFCore27FMFSecureLocationController_startRefreshingTimestamp;
          swift_beginAccess();
          uint64_t v72 = v71;
          uint64_t v73 = v78;
          sub_21CA4BFB4(v72, v78);
          if (v59((char *)v73, 1, v7) == 1)
          {
            sub_21CA1B88C(v73, (uint64_t *)&unk_267C951B0);
            double v55 = -1.0;
          }
          else
          {
            uint64_t v74 = v83;
            (*(void (**)(char *, uint64_t, uint64_t))(v58 + 32))(v83, v73, v7);
            sub_21CB87580();
            sub_21CB87500();
            double v55 = v75;
            uint64_t v76 = *(void (**)(char *, uint64_t))(v58 + 8);
            v76(v61, v7);
            v76(v74, v7);
          }
        }
        uint64_t v53 = v91;
        sub_21CA4BFB4(v91, (uint64_t)&v19[*(int *)(v22 + 32)]);
        *(double *)uint64_t v19 = v55;
        v19[8] = v90 & 1;
        *((double *)v19 + 2) = v56;
        *((double *)v19 + 3) = v57;
        v85(v19, 0, 1, v22);
        swift_beginAccess();
        sub_21CA41B9C((uint64_t)v19, v92, v94);
        swift_endAccess();
        sub_21CAF797C((uint64_t)v88, type metadata accessor for ShallowRelabilityStats);
        return (char *)sub_21CA1B88C(v53, (uint64_t *)&unk_267C951B0);
      }
      uint64_t v68 = *(void (**)(char *, char *, uint64_t))(v58 + 32);
      uint64_t v89 = v59;
      BOOL v69 = v82;
      v68(v82, v29, v7);
      sub_21CB87580();
      sub_21CB87500();
      double v65 = v70;
      char v66 = *(void (**)(char *, uint64_t))(v58 + 8);
      v66(v61, v7);
      unint64_t v67 = v69;
      uint64_t v59 = v89;
    }
    else
    {
      sub_21CA1B88C(v54, (uint64_t *)&unk_267C951B0);
      uint64_t v63 = v84;
      (*(void (**)(char *, char *, uint64_t))(v58 + 32))(v84, v32, v7);
      (*(void (**)(uint64_t, char *, uint64_t))(v58 + 16))(v54, v63, v7);
      ((void (*)(uint64_t, void, uint64_t, uint64_t))v81)(v54, 0, 1, v7);
      uint64_t v61 = v87;
      sub_21CB87580();
      sub_21CB87500();
      double v65 = v64;
      char v66 = *(void (**)(char *, uint64_t))(v58 + 8);
      v66(v61, v7);
      unint64_t v67 = v63;
    }
    v66(v67, v7);
    if (v56 < v65) {
      double v56 = v65;
    }
    uint64_t v62 = v79;
    if (v65 >= 120.0 && v57 == -1.0)
    {
      double v57 = -1.0;
    }
    else if (v57 < v65)
    {
      double v57 = v65;
    }
    goto LABEL_22;
  }
  return result;
}

uint64_t sub_21CA41B88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_21CAAEBD8);
}

uint64_t sub_21CA41B9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = sub_21CA57E34(&qword_267C96AD8);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for ShallowRelabilityStats(0);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v14 + 48))(a1, 1) == 1)
  {
    sub_21CA1B88C(a1, &qword_267C96AD8);
    sub_21CB80690(a2, a3, (uint64_t)v10);
    swift_bridgeObjectRelease();
    return sub_21CA1B88C((uint64_t)v10, &qword_267C96AD8);
  }
  else
  {
    sub_21CA5920C(a1, (uint64_t)v13, type metadata accessor for ShallowRelabilityStats);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v18 = *v4;
    *uint64_t v4 = 0x8000000000000000;
    sub_21CA41D80((uint64_t)v13, a2, a3, isUniquelyReferenced_nonNull_native);
    *uint64_t v4 = v18;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_21CA41D6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_21CAAEB24);
}

uint64_t sub_21CA41D80(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = (void **)v4;
  uint64_t v10 = (void *)*v4;
  unint64_t v12 = sub_21CA5BCE0(a2, a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 >= v15 && (a4 & 1) != 0)
  {
LABEL_7:
    uint64_t v18 = *v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = v18[7];
      uint64_t v20 = type metadata accessor for ShallowRelabilityStats(0);
      return sub_21CA5BE3C(a1, v19 + *(void *)(*(void *)(v20 - 8) + 72) * v12, type metadata accessor for ShallowRelabilityStats);
    }
    goto LABEL_11;
  }
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_21CB85028(type metadata accessor for ShallowRelabilityStats, &qword_267C97C08, type metadata accessor for ShallowRelabilityStats);
    goto LABEL_7;
  }
  sub_21CA58D20(v15, a4 & 1, type metadata accessor for ShallowRelabilityStats, &qword_267C97C08, type metadata accessor for ShallowRelabilityStats);
  unint64_t v22 = sub_21CA5BCE0(a2, a3);
  if ((v16 & 1) != (v23 & 1))
  {
LABEL_15:
    uint64_t result = sub_21CB88FA0();
    __break(1u);
    return result;
  }
  unint64_t v12 = v22;
  uint64_t v18 = *v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  sub_21CA5C728(v12, a2, a3, a1, v18, type metadata accessor for ShallowRelabilityStats, type metadata accessor for ShallowRelabilityStats);

  return swift_bridgeObjectRetain();
}

uint64_t sub_21CA41F74()
{
  uint64_t v344 = v0;
  uint64_t v1 = v0;
  *(void *)(v0 + 144) = MEMORY[0x263F8EE78];
  v337 = (uint64_t *)(v0 + 144);
  if (qword_267C94990 != -1) {
    goto LABEL_280;
  }
  while (1)
  {
    uint64_t v2 = *(void *)(v1 + 320);
    uint64_t v3 = *(void *)(v1 + 264);
    uint64_t v4 = *(void *)(v1 + 272);
    uint64_t v5 = *(void *)(v1 + 184);
    uint64_t v6 = sub_21CA4CC18(*(void *)(v1 + 216), (uint64_t)qword_267CA5368);
    *(void *)(v1 + 328) = v6;
    uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
    *(void *)(v1 + 336) = v7;
    *(void *)(v1 + 344) = (v4 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    v7(v2, v5, v3);
    uint64_t v313 = v6;
    uint64_t v8 = sub_21CB88070();
    os_log_type_t v9 = sub_21CB88850();
    BOOL v10 = os_log_type_enabled(v8, v9);
    uint64_t v11 = *(void *)(v1 + 320);
    uint64_t v12 = *(void *)(v1 + 264);
    uint64_t v13 = *(void *)(v1 + 272);
    uint64_t v336 = v1;
    if (v10)
    {
      BOOL v14 = (uint8_t *)swift_slowAlloc();
      uint64_t v331 = swift_slowAlloc();
      uint64_t v338 = v331;
      *(_DWORD *)BOOL v14 = 136315138;
      sub_21CA07D00(&qword_267C95788, MEMORY[0x263F3CCB0]);
      uint64_t v15 = sub_21CB88F00();
      *(void *)(v1 + 168) = sub_21CA4E450(v15, v16, &v338);
      sub_21CB889C0();
      swift_bridgeObjectRelease();
      v308 = *(void (***)(uint64_t, uint64_t))(v13 + 8);
      ((void (*)(uint64_t, uint64_t))v308)(v11, v12);
      _os_log_impl(&dword_21CA00000, v8, v9, "FMFSecureLocationCtrl: updateLocating called mode: %s, determining whether we should add friends to the stream", v14, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x21D4B6B70](v331, -1, -1);
      MEMORY[0x21D4B6B70](v14, -1, -1);
    }
    else
    {
      v308 = *(void (***)(uint64_t, uint64_t))(v13 + 8);
      ((void (*)(uint64_t, uint64_t))v308)(v11, v12);
    }

    uint64_t v17 = *(void *)(v1 + 312);
    uint64_t v18 = *(void *)(v1 + 264);
    uint64_t v19 = *(void *)(v1 + 272);
    v7(v17, *(void *)(v1 + 184), v18);
    unsigned int v20 = (*(uint64_t (**)(uint64_t, uint64_t))(v19 + 88))(v17, v18);
    int v21 = *MEMORY[0x263F3CCA8];
    *(_DWORD *)(v1 + 408) = *MEMORY[0x263F3CCA8];
    if (v20 == v21) {
      break;
    }
    uint64_t v32 = v337;
    if (v20 != *MEMORY[0x263F3CCA0])
    {
      ((void (*)(void, void))v308)(*(void *)(v1 + 312), *(void *)(v1 + 264));
LABEL_217:
      uint64_t v91 = (void *)MEMORY[0x263F8EE78];
LABEL_218:
      *(void *)(v1 + 352) = v91;
      if (v91[2])
      {
        swift_bridgeObjectRetain();
        v213 = (void *)swift_task_alloc();
        *(void *)(v1 + 360) = v213;
        void *v213 = v1;
        v213[1] = sub_21CAA9F40;
        uint64_t v214 = *(void *)(v1 + 184);
        return sub_21CAAB818((uint64_t)v91, v214);
      }
      uint64_t v216 = *v32;
      int64_t v217 = *(void *)(*v32 + 16);
      if (v217)
      {
        v330 = v32 + 1;
        v325 = v32 + 2;
        uint64_t v338 = MEMORY[0x263F8EE78];
        swift_bridgeObjectRetain();
        sub_21CA45524(0, v217, 0);
        uint64_t v218 = 0;
        uint64_t v219 = v338;
        unint64_t v220 = *(void *)(v338 + 16);
        uint64_t v221 = 16 * v220;
        do
        {
          uint64_t v222 = *(void *)(v216 + v218 + 32);
          uint64_t v223 = *(void *)(v216 + v218 + 40);
          uint64_t v338 = v219;
          unint64_t v224 = *(void *)(v219 + 24);
          int64_t v225 = v220 + 1;
          swift_bridgeObjectRetain();
          if (v220 >= v224 >> 1)
          {
            sub_21CA45524(v224 > 1, v225, 1);
            uint64_t v219 = v338;
          }
          *(void *)(v219 + 16) = v225;
          uint64_t v226 = v219 + v221;
          *(void *)(v226 + 32) = v222;
          *(void *)(v226 + 40) = v223;
          v221 += 16;
          v218 += 32;
          ++v220;
          --v217;
        }
        while (v217);
        uint64_t v227 = *(unsigned int *)(v336 + 408);
        uint64_t v228 = *(void *)(v336 + 288);
        uint64_t v229 = *(void *)(v336 + 264);
        uint64_t v230 = *(void *)(v336 + 272);
        swift_bridgeObjectRelease();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v230 + 104))(v228, v227, v229);
        if (*(void *)(v219 + 16)
          && MEMORY[0x21D4B6C80](*(void *)(v336 + 192) + OBJC_IVAR____TtC7FMFCore27FMFSecureLocationController_delegate))
        {
          sub_21CA16848(1, *(void *)(v336 + 288), v219);
          swift_unknownObjectRelease();
        }
        swift_release();
        v231 = *(void (**)(uint64_t, uint64_t, uint64_t))(v336 + 336);
        uint64_t v232 = *(void *)(v336 + 280);
        uint64_t v233 = *(void *)(v336 + 264);
        uint64_t v234 = *(void *)(v336 + 184);
        v235 = *(void (**)(void, uint64_t))(*(void *)(v336 + 272) + 8);
        v235(*(void *)(v336 + 288), v233);
        uint64_t v236 = *(void *)(v336 + 144);
        v231(v232, v234, v233);
        swift_bridgeObjectRetain();
        v237 = sub_21CB88070();
        os_log_type_t v238 = sub_21CB88880();
        BOOL v239 = os_log_type_enabled(v237, v238);
        uint64_t v240 = *(void *)(v336 + 280);
        uint64_t v241 = *(void *)(v336 + 264);
        if (v239)
        {
          uint64_t v242 = swift_slowAlloc();
          uint64_t v243 = swift_slowAlloc();
          uint64_t v338 = v243;
          *(_DWORD *)uint64_t v242 = 134218242;
          void *v325 = *(void *)(v236 + 16);
          sub_21CB889C0();
          swift_bridgeObjectRelease();
          *(_WORD *)(v242 + 12) = 2080;
          sub_21CA07D00(&qword_267C95788, MEMORY[0x263F3CCB0]);
          uint64_t v244 = sub_21CB88F00();
          uint64_t *v330 = sub_21CA4E450(v244, v245, &v338);
          sub_21CB889C0();
          swift_bridgeObjectRelease();
          v235(v240, v241);
          _os_log_impl(&dword_21CA00000, v237, v238, "FMFSecureLocationCtrl: add handles to location stream: %ld friends, mode: %s", (uint8_t *)v242, 0x16u);
          swift_arrayDestroy();
          MEMORY[0x21D4B6B70](v243, -1, -1);
          MEMORY[0x21D4B6B70](v242, -1, -1);
        }
        else
        {
          swift_bridgeObjectRelease();
          v235(v240, v241);
        }

        swift_beginAccess();
        uint64_t v247 = *v337;
        uint64_t v248 = *(void *)(*v337 + 16);
        v246 = (void *)v336;
        if (v248)
        {
          swift_bridgeObjectRetain_n();
          v249 = (char *)(v247 + 58);
          unint64_t v250 = MEMORY[0x263F8EE78];
          while (1)
          {
            char v251 = *v249;
            char v252 = *(v249 - 1);
            char v253 = *(v249 - 2);
            uint64_t v338 = *(void *)(v249 - 26);
            long long v339 = *(_OWORD *)(v249 - 18);
            char v340 = v253;
            char v341 = v252;
            char v342 = v251;
            sub_21CAAD3C4((uint64_t)&v338, v343);
            uint64_t v254 = v343[0];
            uint64_t v255 = *(void *)(v343[0] + 16);
            int64_t v256 = *(void *)(v250 + 16);
            int64_t v257 = v256 + v255;
            if (__OFADD__(v256, v255)) {
              break;
            }
            int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            if (!isUniquelyReferenced_nonNull_native || v257 > *(void *)(v250 + 24) >> 1)
            {
              if (v256 <= v257) {
                int64_t v259 = v256 + v255;
              }
              else {
                int64_t v259 = v256;
              }
              unint64_t v250 = sub_21CA44504(isUniquelyReferenced_nonNull_native, v259, 1, v250);
            }
            v246 = (void *)v336;
            if (*(void *)(v254 + 16))
            {
              uint64_t v260 = *(void *)(v250 + 16);
              uint64_t v261 = (*(void *)(v250 + 24) >> 1) - v260;
              uint64_t v262 = *(void *)(sub_21CB87CC0() - 8);
              uint64_t v263 = *(void *)(v262 + 72);
              if (v261 < v255) {
                goto LABEL_273;
              }
              unint64_t v264 = (*(unsigned __int8 *)(v262 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v262 + 80);
              unint64_t v265 = v250 + v264 + v263 * v260;
              unint64_t v266 = v254 + v264;
              uint64_t v267 = v263 * v255;
              unint64_t v268 = v265 + v267;
              unint64_t v269 = v266 + v267;
              if (v266 < v268 && v265 < v269) {
                return sub_21CB88D50();
              }
              swift_arrayInitWithCopy();
              v246 = (void *)v336;
              if (v255)
              {
                uint64_t v271 = *(void *)(v250 + 16);
                BOOL v131 = __OFADD__(v271, v255);
                uint64_t v272 = v271 + v255;
                if (v131) {
                  goto LABEL_276;
                }
                *(void *)(v250 + 16) = v272;
              }
            }
            else if (v255)
            {
              goto LABEL_269;
            }
            v249 += 32;
            swift_bridgeObjectRelease();
            if (!--v248)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease_n();
              goto LABEL_257;
            }
          }
LABEL_270:
          __break(1u);
LABEL_271:
          __break(1u);
LABEL_272:
          __break(1u);
LABEL_273:
          __break(1u);
          goto LABEL_274;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        unint64_t v250 = MEMORY[0x263F8EE78];
LABEL_257:
        v246[47] = v250;
        uint64_t v273 = *(void *)(v246[24] + 112);
        v246[48] = v273;
        if (v273)
        {
          swift_retain();
          v274 = (void *)swift_task_alloc();
          v246[49] = v274;
          void *v274 = v246;
          v274[1] = sub_21CAAA79C;
          uint64_t v275 = v246[23];
          return MEMORY[0x270F296F0](v250, v275, 1);
        }
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v246 = (void *)v336;
      }
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      v276 = (uint64_t (*)(void))v246[1];
      return v276();
    }
    uint64_t v33 = *(void *)(v1 + 176);
    int64_t v34 = *(void *)(v33 + 16);
    uint64_t v35 = MEMORY[0x263F8EE78];
    unsigned int v293 = v20;
    int64_t v280 = v34;
    if (v34)
    {
      uint64_t v338 = MEMORY[0x263F8EE78];
      sub_21CA45524(0, v34, 0);
      uint64_t v35 = v338;
      unint64_t v36 = *(void *)(v338 + 16);
      uint64_t v37 = 16 * v36;
      uint64_t v38 = (uint64_t *)(v33 + 40);
      do
      {
        uint64_t v40 = *(v38 - 1);
        uint64_t v39 = *v38;
        uint64_t v338 = v35;
        unint64_t v41 = *(void *)(v35 + 24);
        swift_bridgeObjectRetain();
        if (v36 >= v41 >> 1)
        {
          sub_21CA45524(v41 > 1, v36 + 1, 1);
          uint64_t v35 = v338;
        }
        *(void *)(v35 + 16) = v36 + 1;
        uint64_t v42 = v35 + v37;
        *(void *)(v42 + 32) = v40;
        *(void *)(v42 + 40) = v39;
        v37 += 16;
        v38 += 4;
        ++v36;
        --v34;
      }
      while (v34);
      uint64_t v1 = v336;
      int64_t v34 = v280;
    }
    uint64_t v119 = sub_21CA5893C(v35);
    swift_bridgeObjectRelease();
    swift_beginAccess();
    uint64_t v312 = swift_bridgeObjectRetain();
    uint64_t v120 = sub_21CA456B0(v312);
    uint64_t v121 = sub_21CA5893C((uint64_t)v120);
    swift_release();
    if (*(void *)(v121 + 16) <= *(void *)(v119 + 16) >> 3)
    {
      uint64_t v338 = v119;
      swift_bridgeObjectRetain();
      sub_21CA45DF8(v121);
      uint64_t v285 = v338;
    }
    else
    {
      swift_bridgeObjectRetain();
      uint64_t v285 = sub_21CA44DD4(v121, v119);
    }
    uint64_t v32 = v337;
    if (*(void *)(v119 + 16) <= *(void *)(v121 + 16) >> 3)
    {
      uint64_t v338 = v121;
      sub_21CA45DF8(v119);
      swift_bridgeObjectRelease();
      uint64_t v284 = v338;
    }
    else
    {
      uint64_t v284 = sub_21CA44DD4(v119, v121);
      swift_bridgeObjectRelease();
    }
    int64_t v122 = 0;
    uint64_t v123 = -1;
    uint64_t v286 = v285 + 56;
    uint64_t v124 = -1 << *(unsigned char *)(v285 + 32);
    if (-v124 < 64) {
      uint64_t v123 = ~(-1 << -(char)v124);
    }
    unint64_t v125 = v123 & *(void *)(v285 + 56);
    uint64_t v303 = *(void *)(v1 + 192);
    uint64_t v278 = v303 + OBJC_IVAR____TtC7FMFCore27FMFSecureLocationController_delegate;
    uint64_t v126 = *(void *)(v1 + 224);
    unint64_t v127 = 63 - v124;
    uint64_t v128 = *(void *)(v1 + 176);
    int64_t v287 = v127 >> 6;
    v281 = (void (**)(uint64_t, uint64_t))(v126 + 8);
    v282 = (void (**)(uint64_t, uint64_t, uint64_t))(v126 + 16);
    v299 = (void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v1 + 272) + 104);
    v277 = (char *)(v128 + 90);
    uint64_t v283 = v128;
    v279 = (uint64_t *)(v128 + 40);
    while (1)
    {
      while (v125)
      {
        unint64_t v129 = __clz(__rbit64(v125));
        v125 &= v125 - 1;
        unint64_t v130 = v129 | (v122 << 6);
        if (v34) {
          goto LABEL_135;
        }
      }
      BOOL v131 = __OFADD__(v122++, 1);
      if (v131) {
        goto LABEL_271;
      }
      if (v122 >= v287) {
        goto LABEL_184;
      }
      unint64_t v132 = *(void *)(v286 + 8 * v122);
      if (!v132) {
        break;
      }
LABEL_134:
      unint64_t v125 = (v132 - 1) & v132;
      unint64_t v130 = __clz(__rbit64(v132)) + (v122 << 6);
      if (v34)
      {
LABEL_135:
        unint64_t v134 = (uint64_t *)(*(void *)(v285 + 48) + 16 * v130);
        uint64_t v136 = *v134;
        unint64_t v135 = v134[1];
        uint64_t v137 = *(void *)(v283 + 40);
        uint64_t v138 = *(void *)(v283 + 48);
        char v328 = *(unsigned char *)(v283 + 56);
        char v323 = *(unsigned char *)(v283 + 57);
        char v319 = *(unsigned char *)(v283 + 58);
        if (*(void *)(v283 + 32) == *v134 && v137 == v135)
        {
          unint64_t v306 = v125;
          uint64_t v289 = v122;
          swift_bridgeObjectRetain_n();
          uint64_t v334 = v138;
          swift_bridgeObjectRetain();
LABEL_142:
          uint64_t v316 = v136;
          uint64_t v137 = v135;
          goto LABEL_143;
        }
        uint64_t v316 = *(void *)(v283 + 32);
        if (sub_21CB88F50())
        {
          unint64_t v306 = v125;
          uint64_t v289 = v122;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v334 = v138;
          swift_bridgeObjectRetain();
          goto LABEL_143;
        }
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v34 == 1)
        {
          swift_bridgeObjectRelease();
LABEL_120:
          swift_bridgeObjectRelease();
        }
        else
        {
          unint64_t v306 = v125;
          v178 = v277;
          uint64_t v179 = 1;
          while (1)
          {
            uint64_t v180 = v179 + 1;
            if (__OFADD__(v179, 1)) {
              goto LABEL_266;
            }
            uint64_t v181 = *(void *)(v178 - 26);
            uint64_t v137 = *(void *)(v178 - 18);
            uint64_t v334 = *(void *)(v178 - 10);
            char v328 = *(v178 - 2);
            char v323 = *(v178 - 1);
            char v319 = *v178;
            if (v181 == v136 && v137 == v135)
            {
              uint64_t v289 = v122;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRelease();
              goto LABEL_142;
            }
            if (sub_21CB88F50()) {
              break;
            }
            ++v179;
            v178 += 32;
            if (v180 == v34)
            {
              swift_bridgeObjectRelease();
              uint64_t v32 = v337;
              unint64_t v125 = v306;
              goto LABEL_120;
            }
          }
          uint64_t v316 = v181;
          uint64_t v289 = v122;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
LABEL_143:
          (*v282)(*(void *)(v1 + 256), v313, *(void *)(v1 + 216));
          swift_bridgeObjectRetain();
          os_log_type_t v140 = sub_21CB88070();
          os_log_type_t v141 = sub_21CB88880();
          BOOL v142 = os_log_type_enabled(v140, v141);
          uint64_t v143 = v1;
          uint64_t v144 = *(void *)(v1 + 256);
          uint64_t v145 = *(void *)(v143 + 216);
          if (v142)
          {
            uint64_t v146 = swift_slowAlloc();
            uint64_t v147 = swift_slowAlloc();
            uint64_t v338 = v147;
            *(_DWORD *)uint64_t v146 = 136315138;
            swift_bridgeObjectRetain();
            *(void *)(v146 + 4) = sub_21CA4E450(v136, v135, &v338);
            swift_bridgeObjectRelease_n();
            _os_log_impl(&dword_21CA00000, v140, v141, "FMFSecureLocationCtrl: Insertion detected, will start live locating %s", (uint8_t *)v146, 0xCu);
            swift_arrayDestroy();
            MEMORY[0x21D4B6B70](v147, -1, -1);
            uint64_t v148 = v293;
            MEMORY[0x21D4B6B70](v146, -1, -1);

            (*v281)(v144, v145);
          }
          else
          {

            swift_bridgeObjectRelease_n();
            (*v281)(v144, v145);
            uint64_t v148 = v293;
          }
          uint64_t v149 = *(void *)(v336 + 304);
          uint64_t v150 = *(void *)(v336 + 264);
          uint64_t v151 = *(void *)(v336 + 208);
          v292 = *v299;
          (*v299)(v149, v148, v150);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_21CAA9CE0(v316, v137, v334, 1, v149);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          ((void (*)(uint64_t, uint64_t))v308)(v149, v150);
          uint64_t v152 = sub_21CB87590();
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v152 - 8) + 56))(v151, 1, 1, v152);
          swift_bridgeObjectRetain();
          sub_21CAF6E98(v316, v137, v151);
          swift_bridgeObjectRelease();
          sub_21CA1B88C(v151, (uint64_t *)&unk_267C951B0);
          uint64_t v338 = MEMORY[0x263F8EE78];
          sub_21CA45524(0, v34, 0);
          uint64_t v153 = v338;
          unint64_t v154 = *(void *)(v338 + 16);
          uint64_t v155 = 16 * v154;
          uint64_t v156 = v279;
          int64_t v157 = v34;
          do
          {
            uint64_t v159 = *(v156 - 1);
            uint64_t v158 = *v156;
            uint64_t v338 = v153;
            int64_t v160 = v154 + 1;
            unint64_t v161 = *(void *)(v153 + 24);
            swift_bridgeObjectRetain();
            if (v154 >= v161 >> 1)
            {
              sub_21CA45524(v161 > 1, v160, 1);
              uint64_t v153 = v338;
            }
            *(void *)(v153 + 16) = v160;
            uint64_t v162 = v153 + v155;
            *(void *)(v162 + 32) = v159;
            *(void *)(v162 + 40) = v158;
            v155 += 16;
            v156 += 4;
            ++v154;
            --v157;
          }
          while (v157);
          v292(*(void *)(v336 + 296), v293, *(void *)(v336 + 264));
          if (*(void *)(v153 + 16) && MEMORY[0x21D4B6C80](v278))
          {
            sub_21CA16848(1, *(void *)(v336 + 296), v153);
            swift_unknownObjectRelease();
          }
          swift_release();
          ((void (*)(void, void))v308)(*(void *)(v336 + 296), *(void *)(v336 + 264));
          if (*(void *)(v303 + 144))
          {
            swift_retain();
            sub_21CA57E34((uint64_t *)&unk_267C96F50);
            sub_21CB88670();
            swift_release();
          }
          uint64_t v163 = *(void *)(v336 + 200);
          uint64_t v164 = sub_21CB88640();
          uint64_t v165 = *(void *)(v164 - 8);
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v165 + 56))(v163, 1, 1, v164);
          uint64_t v166 = swift_allocObject();
          swift_weakInit();
          uint64_t v167 = swift_allocObject();
          *(void *)(v167 + 16) = 0;
          *(void *)(v167 + 24) = 0;
          *(void *)(v167 + 32) = v166;
          *(void *)(v167 + 40) = v316;
          *(void *)(v167 + 48) = v137;
          *(void *)(v167 + 56) = v334;
          *(unsigned char *)(v167 + 64) = v328;
          *(unsigned char *)(v167 + 65) = v323;
          *(unsigned char *)(v167 + 66) = v319;
          int v168 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v165 + 48))(v163, 1, v164);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v169 = *(void *)(v336 + 200);
          if (v168 == 1)
          {
            sub_21CA1B88C(*(void *)(v336 + 200), &qword_267C95028);
          }
          else
          {
            sub_21CB88630();
            (*(void (**)(uint64_t, uint64_t))(v165 + 8))(v169, v164);
          }
          int64_t v34 = v280;
          if (*(void *)(v167 + 16))
          {
            swift_getObjectType();
            swift_unknownObjectRetain();
            uint64_t v170 = sub_21CB885F0();
            uint64_t v172 = v171;
            swift_unknownObjectRelease();
          }
          else
          {
            uint64_t v170 = 0;
            uint64_t v172 = 0;
          }
          int64_t v122 = v289;
          if (v172 | v170)
          {
            *(v337 - 16) = 0;
            *(v337 - 15) = 0;
            *(void *)(v336 + 32) = v170;
            *(void *)(v336 + 40) = v172;
          }
          unint64_t v125 = v306;
          *(void *)(v303 + 144) = swift_task_create();
          swift_release();
          uint64_t v173 = (void *)*v337;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v173 = sub_21CA45AE8(0, v173[2] + 1, 1, v173);
          }
          uint64_t v1 = v336;
          unint64_t v175 = v173[2];
          unint64_t v174 = v173[3];
          uint64_t v176 = v316;
          if (v175 >= v174 >> 1)
          {
            uint64_t v173 = sub_21CA45AE8((void *)(v174 > 1), v175 + 1, 1, v173);
            uint64_t v176 = v316;
          }
          v173[2] = v175 + 1;
          uint64_t v177 = &v173[4 * v175];
          v177[4] = v176;
          v177[5] = v137;
          v177[6] = v334;
          *((unsigned char *)v177 + 56) = v328;
          *((unsigned char *)v177 + 57) = v323;
          *((unsigned char *)v177 + 58) = v319;
          uint64_t v32 = v337;
          uint64_t *v337 = (uint64_t)v173;
        }
      }
    }
    uint64_t v133 = v122 + 1;
    if (v122 + 1 >= v287) {
      goto LABEL_184;
    }
    unint64_t v132 = *(void *)(v286 + 8 * v133);
    if (v132) {
      goto LABEL_133;
    }
    uint64_t v133 = v122 + 2;
    if (v122 + 2 >= v287) {
      goto LABEL_184;
    }
    unint64_t v132 = *(void *)(v286 + 8 * v133);
    if (v132) {
      goto LABEL_133;
    }
    uint64_t v133 = v122 + 3;
    if (v122 + 3 >= v287) {
      goto LABEL_184;
    }
    unint64_t v132 = *(void *)(v286 + 8 * v133);
    if (v132)
    {
LABEL_133:
      int64_t v122 = v133;
      goto LABEL_134;
    }
    while (1)
    {
      int64_t v122 = v133 + 1;
      if (__OFADD__(v133, 1))
      {
        __break(1u);
        goto LABEL_279;
      }
      if (v122 >= v287) {
        break;
      }
      unint64_t v132 = *(void *)(v286 + 8 * v122);
      ++v133;
      if (v132) {
        goto LABEL_134;
      }
    }
LABEL_184:
    swift_release();
    int64_t v183 = 0;
    uint64_t v184 = v284 + 56;
    uint64_t v185 = -1;
    uint64_t v186 = -1 << *(unsigned char *)(v284 + 32);
    if (-v186 < 64) {
      uint64_t v185 = ~(-1 << -(char)v186);
    }
    unint64_t v187 = v185 & *(void *)(v284 + 56);
    v335 = (void *)MEMORY[0x263F8EE78];
    int64_t v188 = (unint64_t)(63 - v186) >> 6;
    while (2)
    {
      if (v187)
      {
        unint64_t v189 = __clz(__rbit64(v187));
        v187 &= v187 - 1;
        unint64_t v190 = v189 | (v183 << 6);
        goto LABEL_200;
      }
      BOOL v131 = __OFADD__(v183++, 1);
      if (v131) {
        goto LABEL_272;
      }
      if (v183 >= v188)
      {
LABEL_215:
        swift_bridgeObjectRelease();
        swift_release();
        uint64_t v91 = v335;
        goto LABEL_218;
      }
      unint64_t v191 = *(void *)(v184 + 8 * v183);
      if (v191)
      {
LABEL_199:
        unint64_t v187 = (v191 - 1) & v191;
        unint64_t v190 = __clz(__rbit64(v191)) + (v183 << 6);
LABEL_200:
        if (*(void *)(v312 + 16))
        {
          v193 = (uint64_t *)(*(void *)(v284 + 48) + 16 * v190);
          uint64_t v194 = *v193;
          unint64_t v195 = v193[1];
          swift_bridgeObjectRetain_n();
          unint64_t v196 = sub_21CA5BCE0(v194, v195);
          if (v197)
          {
            uint64_t v198 = *(void *)(v1 + 248);
            uint64_t v199 = *(void *)(v1 + 216);
            uint64_t v200 = *(void *)(v312 + 56) + 32 * v196;
            uint64_t v320 = *(void *)v200;
            uint64_t v201 = *(void *)(v200 + 16);
            char v317 = *(unsigned char *)(v200 + 24);
            char v310 = *(unsigned char *)(v200 + 25);
            char v307 = *(unsigned char *)(v200 + 26);
            v329 = *(uint64_t **)(v200 + 8);
            swift_bridgeObjectRetain();
            uint64_t v324 = v201;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            (*v282)(v198, v313, v199);
            swift_bridgeObjectRetain();
            v202 = sub_21CB88070();
            uint64_t v203 = v1;
            os_log_type_t v204 = sub_21CB88880();
            BOOL v205 = os_log_type_enabled(v202, v204);
            uint64_t v206 = *(void *)(v203 + 248);
            uint64_t v207 = *(void *)(v203 + 216);
            if (v205)
            {
              uint64_t v300 = v206;
              uint64_t v208 = swift_slowAlloc();
              uint64_t v297 = v207;
              uint64_t v209 = swift_slowAlloc();
              uint64_t v338 = v209;
              *(_DWORD *)uint64_t v208 = 136315138;
              swift_bridgeObjectRetain();
              *(void *)(v208 + 4) = sub_21CA4E450(v194, v195, &v338);
              swift_bridgeObjectRelease_n();
              _os_log_impl(&dword_21CA00000, v202, v204, "FMFSecureLocationCtrl: Removal detected, will stop live locating %s", (uint8_t *)v208, 0xCu);
              swift_arrayDestroy();
              MEMORY[0x21D4B6B70](v209, -1, -1);
              MEMORY[0x21D4B6B70](v208, -1, -1);

              (*v281)(v300, v297);
            }
            else
            {

              swift_bridgeObjectRelease_n();
              (*v281)(v206, v207);
            }
            uint64_t v1 = v336;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              v335 = sub_21CA45AE8(0, v335[2] + 1, 1, v335);
            }
            unint64_t v211 = v335[2];
            unint64_t v210 = v335[3];
            if (v211 >= v210 >> 1) {
              v335 = sub_21CA45AE8((void *)(v210 > 1), v211 + 1, 1, v335);
            }
            v335[2] = v211 + 1;
            v212 = &v335[4 * v211];
            v212[4] = v320;
            v212[5] = v329;
            v212[6] = v324;
            *((unsigned char *)v212 + 56) = v317;
            *((unsigned char *)v212 + 57) = v310;
            *((unsigned char *)v212 + 58) = v307;
            uint64_t v32 = v337;
          }
          else
          {
            swift_bridgeObjectRelease_n();
          }
        }
        continue;
      }
      break;
    }
    int64_t v192 = v183 + 1;
    if (v183 + 1 >= v188) {
      goto LABEL_215;
    }
    unint64_t v191 = *(void *)(v184 + 8 * v192);
    if (v191) {
      goto LABEL_198;
    }
    int64_t v192 = v183 + 2;
    if (v183 + 2 >= v188) {
      goto LABEL_215;
    }
    unint64_t v191 = *(void *)(v184 + 8 * v192);
    if (v191) {
      goto LABEL_198;
    }
    int64_t v192 = v183 + 3;
    if (v183 + 3 >= v188) {
      goto LABEL_215;
    }
    unint64_t v191 = *(void *)(v184 + 8 * v192);
    if (v191)
    {
LABEL_198:
      int64_t v183 = v192;
      goto LABEL_199;
    }
    while (1)
    {
      int64_t v183 = v192 + 1;
      if (__OFADD__(v192, 1)) {
        break;
      }
      if (v183 >= v188) {
        goto LABEL_215;
      }
      unint64_t v191 = *(void *)(v184 + 8 * v183);
      ++v192;
      if (v191) {
        goto LABEL_199;
      }
    }
LABEL_279:
    __break(1u);
LABEL_280:
    swift_once();
  }
  uint64_t v22 = *(void *)(v1 + 176);
  int64_t v23 = *(void *)(v22 + 16);
  uint64_t v24 = MEMORY[0x263F8EE78];
  int64_t v314 = v23;
  if (v23)
  {
    uint64_t v338 = MEMORY[0x263F8EE78];
    sub_21CA45524(0, v23, 0);
    uint64_t v24 = v338;
    unint64_t v25 = *(void *)(v338 + 16);
    uint64_t v26 = 16 * v25;
    uint64_t v27 = (uint64_t *)(v22 + 40);
    do
    {
      uint64_t v29 = *(v27 - 1);
      uint64_t v28 = *v27;
      uint64_t v338 = v24;
      unint64_t v30 = *(void *)(v24 + 24);
      swift_bridgeObjectRetain();
      if (v25 >= v30 >> 1)
      {
        sub_21CA45524(v30 > 1, v25 + 1, 1);
        uint64_t v24 = v338;
      }
      *(void *)(v24 + 16) = v25 + 1;
      uint64_t v31 = v24 + v26;
      *(void *)(v31 + 32) = v29;
      *(void *)(v31 + 40) = v28;
      v26 += 16;
      v27 += 4;
      ++v25;
      --v23;
    }
    while (v23);
    uint64_t v1 = v336;
  }
  uint64_t v43 = *(void *)(v1 + 192);
  uint64_t v44 = sub_21CA5893C(v24);
  swift_bridgeObjectRelease();
  v290 = (uint64_t *)(v43 + 120);
  swift_beginAccess();
  uint64_t v318 = swift_bridgeObjectRetain();
  uint64_t v45 = sub_21CA456B0(v318);
  uint64_t v46 = sub_21CA5893C((uint64_t)v45);
  swift_release();
  int64_t v47 = v314;
  if (*(void *)(v46 + 16) <= *(void *)(v44 + 16) >> 3)
  {
    uint64_t v338 = v44;
    swift_bridgeObjectRetain();
    sub_21CA45DF8(v46);
    uint64_t v48 = v338;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v48 = sub_21CA44DD4(v46, v44);
  }
  uint64_t v32 = v337;
  if (*(void *)(v44 + 16) <= *(void *)(v46 + 16) >> 3)
  {
    uint64_t v338 = v46;
    sub_21CA45DF8(v44);
    swift_bridgeObjectRelease();
    uint64_t v298 = v338;
    if (!*(void *)(v48 + 16))
    {
LABEL_27:
      if (!*(void *)(v298 + 16))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_217;
      }
    }
  }
  else
  {
    uint64_t v298 = sub_21CA44DD4(v44, v46);
    swift_bridgeObjectRelease();
    if (!*(void *)(v48 + 16)) {
      goto LABEL_27;
    }
  }
  int64_t v49 = 0;
  uint64_t v50 = *(void *)(v1 + 224);
  uint64_t v295 = v48 + 56;
  uint64_t v51 = -1;
  uint64_t v52 = -1 << *(unsigned char *)(v48 + 32);
  if (-v52 < 64) {
    uint64_t v51 = ~(-1 << -(char)v52);
  }
  unint64_t v53 = v51 & *(void *)(v48 + 56);
  int64_t v301 = (unint64_t)(63 - v52) >> 6;
  v309 = (void (**)(uint64_t, uint64_t))(v50 + 8);
  v311 = (void (**)(uint64_t, uint64_t, uint64_t))(v50 + 16);
  uint64_t v294 = *(void *)(v1 + 176);
  uint64_t v304 = v48;
  while (2)
  {
    if (v53)
    {
      uint64_t v326 = (v53 - 1) & v53;
      int64_t v332 = v49;
      unint64_t v54 = __clz(__rbit64(v53)) | (v49 << 6);
      goto LABEL_50;
    }
    int64_t v55 = v49 + 1;
    if (__OFADD__(v49, 1)) {
      goto LABEL_267;
    }
    if (v55 < v301)
    {
      unint64_t v56 = *(void *)(v295 + 8 * v55);
      int64_t v57 = v49 + 1;
      if (!v56)
      {
        int64_t v57 = v49 + 2;
        if (v49 + 2 >= v301) {
          break;
        }
        unint64_t v56 = *(void *)(v295 + 8 * v57);
        if (!v56)
        {
          int64_t v57 = v49 + 3;
          if (v49 + 3 >= v301) {
            break;
          }
          unint64_t v56 = *(void *)(v295 + 8 * v57);
          if (!v56)
          {
            uint64_t v58 = v49 + 4;
            if (v49 + 4 >= v301) {
              break;
            }
            unint64_t v56 = *(void *)(v295 + 8 * v58);
            if (!v56)
            {
              while (1)
              {
                int64_t v57 = v58 + 1;
                if (__OFADD__(v58, 1)) {
                  break;
                }
                if (v57 >= v301) {
                  goto LABEL_79;
                }
                unint64_t v56 = *(void *)(v295 + 8 * v57);
                ++v58;
                if (v56) {
                  goto LABEL_49;
                }
              }
LABEL_274:
              __break(1u);
              goto LABEL_275;
            }
            int64_t v57 = v49 + 4;
          }
        }
      }
LABEL_49:
      uint64_t v326 = (v56 - 1) & v56;
      int64_t v332 = v57;
      unint64_t v54 = __clz(__rbit64(v56)) + (v57 << 6);
LABEL_50:
      uint64_t v59 = (uint64_t *)(*(void *)(v48 + 48) + 16 * v54);
      uint64_t v60 = *v59;
      unint64_t v61 = v59[1];
      (*v311)(*(void *)(v1 + 240), v313, *(void *)(v1 + 216));
      swift_bridgeObjectRetain_n();
      uint64_t v62 = sub_21CB88070();
      os_log_type_t v63 = sub_21CB88880();
      BOOL v64 = os_log_type_enabled(v62, v63);
      uint64_t v65 = *(void *)(v1 + 240);
      uint64_t v66 = *(void *)(v1 + 216);
      if (v64)
      {
        uint64_t v67 = swift_slowAlloc();
        uint64_t v68 = swift_slowAlloc();
        uint64_t v338 = v68;
        *(_DWORD *)uint64_t v67 = 136315138;
        swift_bridgeObjectRetain();
        *(void *)(v67 + 4) = sub_21CA4E450(v60, v61, &v338);
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_21CA00000, v62, v63, "FMFSecureLocationCtrl: Insertion detected, will start shallow locating %s", (uint8_t *)v67, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x21D4B6B70](v68, -1, -1);
        uint64_t v69 = v67;
        uint64_t v32 = v337;
        MEMORY[0x21D4B6B70](v69, -1, -1);
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      (*v309)(v65, v66);
      if (!v47) {
        goto LABEL_32;
      }
      uint64_t v71 = *(void *)(v294 + 32);
      unint64_t v70 = *(void *)(v294 + 40);
      uint64_t v72 = *(void *)(v294 + 48);
      char v73 = *(unsigned char *)(v294 + 56);
      char v74 = *(unsigned char *)(v294 + 57);
      char v75 = *(unsigned char *)(v294 + 58);
      if (v71 == v60 && v70 == v61)
      {
        char v321 = *(unsigned char *)(v294 + 58);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
LABEL_61:
        uint64_t v71 = v60;
        unint64_t v70 = v61;
LABEL_62:
        swift_beginAccess();
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        char v77 = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v338 = *v290;
        uint64_t *v290 = 0x8000000000000000;
        sub_21CB83DB4(v60, v61, v72, 0, v60, v61, v77);
        uint64_t *v290 = v338;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_endAccess();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v78 = (void *)*v337;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v78 = sub_21CA45AE8(0, v78[2] + 1, 1, v78);
        }
        uint64_t v1 = v336;
        unint64_t v80 = v78[2];
        unint64_t v79 = v78[3];
        if (v80 >= v79 >> 1) {
          uint64_t v78 = sub_21CA45AE8((void *)(v79 > 1), v80 + 1, 1, v78);
        }
        v78[2] = v80 + 1;
        uint64_t v81 = &v78[4 * v80];
        v81[4] = v71;
        v81[5] = v70;
        v81[6] = v72;
        *((unsigned char *)v81 + 56) = v73;
        *((unsigned char *)v81 + 57) = v74;
        *((unsigned char *)v81 + 58) = v321;
        uint64_t v32 = v337;
        uint64_t *v337 = (uint64_t)v78;
        int64_t v47 = v314;
      }
      else
      {
        if (sub_21CB88F50())
        {
          char v321 = v75;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_62;
        }
        swift_bridgeObjectRetain();
        int64_t v47 = v314;
        if (v314 != 1)
        {
          uint64_t v82 = (char *)(v294 + 90);
          uint64_t v83 = 1;
          while (1)
          {
            uint64_t v84 = v83 + 1;
            if (__OFADD__(v83, 1)) {
              break;
            }
            uint64_t v71 = *(void *)(v82 - 26);
            unint64_t v70 = *(void *)(v82 - 18);
            uint64_t v72 = *(void *)(v82 - 10);
            char v73 = *(v82 - 2);
            char v74 = *(v82 - 1);
            char v321 = *v82;
            if (v71 == v60 && v70 == v61)
            {
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRelease();
              goto LABEL_61;
            }
            if (sub_21CB88F50())
            {
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRelease();
              goto LABEL_62;
            }
            ++v83;
            v82 += 32;
            int64_t v47 = v314;
            if (v84 == v314)
            {
              uint64_t v1 = v336;
              swift_bridgeObjectRelease();
              uint64_t v32 = v337;
              goto LABEL_32;
            }
          }
          __break(1u);
LABEL_266:
          __break(1u);
LABEL_267:
          __break(1u);
LABEL_268:
          __break(1u);
LABEL_269:
          __break(1u);
          goto LABEL_270;
        }
        swift_bridgeObjectRelease();
LABEL_32:
        swift_bridgeObjectRelease();
      }
      uint64_t v48 = v304;
      unint64_t v53 = v326;
      int64_t v49 = v332;
      continue;
    }
    break;
  }
LABEL_79:
  swift_release();
  int64_t v86 = 0;
  uint64_t v87 = v298 + 56;
  uint64_t v88 = -1;
  uint64_t v89 = -1 << *(unsigned char *)(v298 + 32);
  if (-v89 < 64) {
    uint64_t v88 = ~(-1 << -(char)v89);
  }
  unint64_t v90 = v88 & *(void *)(v298 + 56);
  uint64_t v91 = (void *)MEMORY[0x263F8EE78];
  int64_t v92 = (unint64_t)(63 - v89) >> 6;
  while (2)
  {
    if (v90)
    {
      unint64_t v93 = __clz(__rbit64(v90));
      v90 &= v90 - 1;
      unint64_t v94 = v93 | (v86 << 6);
      goto LABEL_98;
    }
    int64_t v95 = v86 + 1;
    if (__OFADD__(v86, 1)) {
      goto LABEL_268;
    }
    if (v95 >= v92)
    {
LABEL_109:
      swift_bridgeObjectRelease();
      swift_release();
      goto LABEL_218;
    }
    unint64_t v96 = *(void *)(v87 + 8 * v95);
    ++v86;
    if (v96) {
      goto LABEL_97;
    }
    int64_t v86 = v95 + 1;
    if (v95 + 1 >= v92) {
      goto LABEL_109;
    }
    unint64_t v96 = *(void *)(v87 + 8 * v86);
    if (v96) {
      goto LABEL_97;
    }
    int64_t v86 = v95 + 2;
    if (v95 + 2 >= v92) {
      goto LABEL_109;
    }
    unint64_t v96 = *(void *)(v87 + 8 * v86);
    if (v96)
    {
LABEL_97:
      unint64_t v90 = (v96 - 1) & v96;
      unint64_t v94 = __clz(__rbit64(v96)) + (v86 << 6);
LABEL_98:
      if (*(void *)(v318 + 16))
      {
        int v98 = (uint64_t *)(*(void *)(v298 + 48) + 16 * v94);
        uint64_t v100 = *v98;
        unint64_t v99 = v98[1];
        swift_bridgeObjectRetain_n();
        unint64_t v101 = sub_21CA5BCE0(v100, v99);
        if (v102)
        {
          v333 = v91;
          uint64_t v103 = *(void *)(v1 + 232);
          uint64_t v104 = *(void *)(v1 + 216);
          uint64_t v105 = *(void *)(v318 + 56) + 32 * v101;
          uint64_t v315 = *(void *)v105;
          uint64_t v106 = *(void *)(v105 + 16);
          char v305 = *(unsigned char *)(v105 + 24);
          char v302 = *(unsigned char *)(v105 + 25);
          char v296 = *(unsigned char *)(v105 + 26);
          v327 = *(uint64_t **)(v105 + 8);
          swift_bridgeObjectRetain();
          uint64_t v322 = v106;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          (*v311)(v103, v313, v104);
          swift_bridgeObjectRetain();
          unint64_t v107 = sub_21CB88070();
          uint64_t v108 = v1;
          os_log_type_t v109 = sub_21CB88880();
          BOOL v110 = os_log_type_enabled(v107, v109);
          uint64_t v111 = *(void *)(v108 + 232);
          uint64_t v112 = *(void *)(v108 + 216);
          if (v110)
          {
            uint64_t v291 = v112;
            uint64_t v113 = swift_slowAlloc();
            uint64_t v288 = v111;
            uint64_t v114 = swift_slowAlloc();
            uint64_t v338 = v114;
            *(_DWORD *)uint64_t v113 = 136315138;
            swift_bridgeObjectRetain();
            *(void *)(v113 + 4) = sub_21CA4E450(v100, v99, &v338);
            swift_bridgeObjectRelease_n();
            _os_log_impl(&dword_21CA00000, v107, v109, "FMFSecureLocationCtrl: Removal detected, will stop shallow locating %s", (uint8_t *)v113, 0xCu);
            swift_arrayDestroy();
            uint64_t v115 = v114;
            uint64_t v91 = v333;
            MEMORY[0x21D4B6B70](v115, -1, -1);
            MEMORY[0x21D4B6B70](v113, -1, -1);

            (*v309)(v288, v291);
          }
          else
          {

            swift_bridgeObjectRelease_n();
            (*v309)(v111, v112);
            uint64_t v91 = v333;
          }
          uint64_t v1 = v336;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v91 = sub_21CA45AE8(0, v91[2] + 1, 1, v91);
          }
          unint64_t v117 = v91[2];
          unint64_t v116 = v91[3];
          if (v117 >= v116 >> 1) {
            uint64_t v91 = sub_21CA45AE8((void *)(v116 > 1), v117 + 1, 1, v91);
          }
          v91[2] = v117 + 1;
          uint64_t v118 = &v91[4 * v117];
          v118[4] = v315;
          v118[5] = v327;
          v118[6] = v322;
          *((unsigned char *)v118 + 56) = v305;
          *((unsigned char *)v118 + 57) = v302;
          *((unsigned char *)v118 + 58) = v296;
          uint64_t v32 = v337;
        }
        else
        {
          swift_bridgeObjectRelease_n();
        }
      }
      continue;
    }
    break;
  }
  int64_t v97 = v95 + 3;
  if (v97 >= v92) {
    goto LABEL_109;
  }
  unint64_t v96 = *(void *)(v87 + 8 * v97);
  if (v96)
  {
    int64_t v86 = v97;
    goto LABEL_97;
  }
  while (1)
  {
    int64_t v86 = v97 + 1;
    if (__OFADD__(v97, 1)) {
      break;
    }
    if (v86 >= v92) {
      goto LABEL_109;
    }
    unint64_t v96 = *(void *)(v87 + 8 * v86);
    ++v97;
    if (v96) {
      goto LABEL_97;
    }
  }
LABEL_275:
  __break(1u);
LABEL_276:
  __break(1u);
  return sub_21CB88D50();
}

uint64_t sub_21CA443E0(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_21CA48024(a1, a2, a3, (void *)*v3, &qword_267C95208, MEMORY[0x263F3CF58]);
  *uint64_t v3 = result;
  return result;
}

int64_t sub_21CA4441C(int64_t result, int a2, char a3, uint64_t a4)
{
  if (a3) {
    goto LABEL_20;
  }
  unint64_t v4 = result;
  if (result < 0 || (uint64_t result = 1 << *(unsigned char *)(a4 + 32), result <= (uint64_t)v4))
  {
    __break(1u);
    goto LABEL_18;
  }
  unint64_t v5 = v4 >> 6;
  uint64_t v6 = a4 + 56;
  unint64_t v7 = *(void *)(a4 + 56 + 8 * (v4 >> 6));
  if (((v7 >> v4) & 1) == 0)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (*(_DWORD *)(a4 + 36) != a2)
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    return result;
  }
  unint64_t v8 = v7 & (-2 << (v4 & 0x3F));
  if (v8) {
    return __clz(__rbit64(v8)) | v4 & 0xFFFFFFFFFFFFFFC0;
  }
  unint64_t v9 = v5 + 1;
  unint64_t v10 = (unint64_t)(result + 63) >> 6;
  if (v5 + 1 < v10)
  {
    unint64_t v11 = *(void *)(v6 + 8 * v9);
    if (v11) {
      return __clz(__rbit64(v11)) + (v9 << 6);
    }
    unint64_t v9 = v5 + 2;
    if (v5 + 2 < v10)
    {
      unint64_t v11 = *(void *)(v6 + 8 * v9);
      if (v11) {
        return __clz(__rbit64(v11)) + (v9 << 6);
      }
      while (v10 - 3 != v5)
      {
        unint64_t v11 = *(void *)(a4 + 80 + 8 * v5++);
        if (v11)
        {
          unint64_t v9 = v5 + 2;
          return __clz(__rbit64(v11)) + (v9 << 6);
        }
      }
    }
  }
  return result;
}

uint64_t sub_21CA44504(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_21CA4826C(a1, a2, a3, a4, &qword_267C95208, MEMORY[0x263F3CF58], MEMORY[0x263F3CF58]);
}

uint64_t sub_21CA44538@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v8 = sub_21CA57E34((uint64_t *)&unk_267C96EF0);
  MEMORY[0x270FA5388](v8 - 8);
  char v75 = (char *)&v55 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_21CA57E34(&qword_267C95040);
  MEMORY[0x270FA5388](v10 - 8);
  unint64_t v61 = (char *)&v55 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_21CA57E34(&qword_267C96F10);
  MEMORY[0x270FA5388](v12 - 8);
  BOOL v14 = (char *)&v55 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for FMFFriend();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v60 = (uint64_t *)((char *)&v55 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v18 = sub_21CA57E34(&qword_267C97288);
  uint64_t v20 = *(int *)(MEMORY[0x270FA5388](v18 - 8) + 56);
  int v21 = (char *)&v55 + v20 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21CA571E8(a1 + v20, (uint64_t)v21, (uint64_t (*)(void))type metadata accessor for FMFFriend);
  sub_21CA591A4((uint64_t)v21, (uint64_t)a3, (uint64_t (*)(void))type metadata accessor for FMFFriend);
  uint64_t v22 = *(void *)(a2 + 720);
  if (*(void *)(v22 + 16))
  {
    uint64_t v23 = *a3;
    uint64_t v24 = a3[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v25 = sub_21CA5BCE0(v23, v24);
    if (v26)
    {
      uint64_t v27 = *(void *)(v22 + 56) + 56 * v25;
      uint64_t v58 = *(void *)v27;
      uint64_t v59 = v4;
      uint64_t v29 = *(void *)(v27 + 8);
      uint64_t v28 = *(void *)(v27 + 16);
      uint64_t v30 = *(void *)(v27 + 24);
      uint64_t v56 = *(unsigned __int8 *)(v27 + 32);
      uint64_t v57 = v28;
      uint64_t v31 = *(void *)(v27 + 48);
      uint64_t v55 = *(void *)(v27 + 40);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_21CA571E8((uint64_t)a3, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for FMFFriend);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v14, 0, 1, v15);
      uint64_t v32 = type metadata accessor for FMFIntermediateFriend();
      uint64_t v33 = (uint64_t)v61;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v61, 1, 1, v32);
      unint64_t v73 = 0;
      char v74 = 1;
      unint64_t v71 = 0;
      char v72 = 1;
      uint64_t v34 = type metadata accessor for FMFLocation();
      uint64_t v35 = (uint64_t)v75;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v75, 1, 1, v34);
      uint64_t v62 = v58;
      uint64_t v63 = v29;
      uint64_t v64 = v57;
      uint64_t v65 = v30;
      uint64_t v66 = v56;
      uint64_t v67 = v55;
      uint64_t v68 = v31;
      unint64_t v36 = v60;
      sub_21CA5572C((uint64_t)v14, v33, &v73, (uint64_t)&v71, v35, 0, 1, &v62, v60, 0, 0, 2u, 2u, 2);
      sub_21CA57050((uint64_t)a3, (uint64_t (*)(void))type metadata accessor for FMFFriend);
      return sub_21CA591A4((uint64_t)v36, (uint64_t)a3, (uint64_t (*)(void))type metadata accessor for FMFFriend);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t result = sub_21CA44BD4(a3[4]);
  if (v38)
  {
    uint64_t v39 = result;
    uint64_t v40 = v38;
    swift_beginAccess();
    uint64_t v41 = *(void *)(a2 + 728);
    if (*(void *)(v41 + 16))
    {
      swift_bridgeObjectRetain();
      unint64_t v42 = sub_21CA5BCE0(v39, v40);
      if (v43)
      {
        uint64_t v44 = *(void *)(v41 + 56) + 56 * v42;
        uint64_t v46 = *(void *)v44;
        uint64_t v45 = *(void *)(v44 + 8);
        uint64_t v47 = *(void *)(v44 + 24);
        uint64_t v58 = *(void *)(v44 + 16);
        uint64_t v59 = v46;
        uint64_t v57 = *(unsigned __int8 *)(v44 + 32);
        uint64_t v48 = *(void *)(v44 + 40);
        uint64_t v49 = *(void *)(v44 + 48);
        uint64_t v55 = v45;
        uint64_t v56 = v48;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_21CA571E8((uint64_t)a3, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for FMFFriend);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v14, 0, 1, v15);
        uint64_t v50 = type metadata accessor for FMFIntermediateFriend();
        uint64_t v51 = (uint64_t)v61;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 56))(v61, 1, 1, v50);
        unint64_t v71 = 0;
        char v72 = 1;
        uint64_t v69 = 0;
        char v70 = 1;
        uint64_t v52 = type metadata accessor for FMFLocation();
        uint64_t v53 = (uint64_t)v75;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v52 - 8) + 56))(v75, 1, 1, v52);
        uint64_t v62 = v59;
        uint64_t v63 = v55;
        uint64_t v64 = v58;
        uint64_t v65 = v47;
        uint64_t v66 = v57;
        uint64_t v67 = v56;
        uint64_t v68 = v49;
        unint64_t v54 = v60;
        sub_21CA5572C((uint64_t)v14, v51, &v71, (uint64_t)&v69, v53, 0, 1, &v62, v60, 0, 0, 2u, 2u, 2);
        sub_21CA57050((uint64_t)a3, (uint64_t (*)(void))type metadata accessor for FMFFriend);
        return sub_21CA591A4((uint64_t)v54, (uint64_t)a3, (uint64_t (*)(void))type metadata accessor for FMFFriend);
      }
      swift_bridgeObjectRelease();
    }
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_21CA44BD4(uint64_t a1)
{
  uint64_t result = sub_21CA44CF4(a1);
  if (v4) {
    goto LABEL_8;
  }
  if (*(_DWORD *)(a1 + 36) != v3)
  {
    __break(1u);
LABEL_8:
    __break(1u);
    return result;
  }
  if (result == 1 << *(unsigned char *)(a1 + 32)) {
    return 0;
  }
  uint64_t v5 = sub_21CA44CF8(result, v3, 0, a1);
  swift_bridgeObjectRetain();
  return v5;
}

uint64_t sub_21CA44C54(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 56);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  if (v6 < 8) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 128;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 3) {
    unint64_t v7 = 3;
  }
  unint64_t v8 = v7 - 3;
  uint64_t v9 = (unint64_t *)(a1 + 80);
  uint64_t v2 = 128;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

uint64_t sub_21CA44CF8(uint64_t result, int a2, uint64_t a3, uint64_t a4)
{
  if (result < 0 || 1 << *(unsigned char *)(a4 + 32) <= result)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (((*(void *)(a4 + 8 * ((unint64_t)result >> 6) + 56) >> result) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (*(_DWORD *)(a4 + 36) == a2) {
    return *(void *)(*(void *)(a4 + 48) + 16 * result);
  }
LABEL_8:
  __break(1u);
  return result;
}

uint64_t sub_21CA44D4C(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2) {
    unint64_t v7 = 2;
  }
  unint64_t v8 = v7 - 2;
  uint64_t v9 = (unint64_t *)(a1 + 80);
  uint64_t v2 = 64;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

uint64_t sub_21CA44DD4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  uint64_t v43 = *MEMORY[0x263EF8340];
  if (*(void *)(a2 + 16))
  {
    uint64_t v4 = *(void *)(a1 + 56);
    uint64_t v37 = a1 + 56;
    uint64_t v5 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v35 = ~v5;
    if (-v5 < 64) {
      uint64_t v6 = ~(-1 << -(char)v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & v4;
    int64_t v36 = (unint64_t)(63 - v5) >> 6;
    uint64_t v8 = a2 + 56;
    swift_bridgeObjectRetain();
    int64_t v9 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v10 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v11 = v10 | (v9 << 6);
      }
      else
      {
        int64_t v12 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
          __break(1u);
          goto LABEL_49;
        }
        if (v12 >= v36) {
          goto LABEL_47;
        }
        unint64_t v13 = *(void *)(v37 + 8 * v12);
        int64_t v14 = v9 + 1;
        if (!v13)
        {
          int64_t v14 = v9 + 2;
          if (v9 + 2 >= v36) {
            goto LABEL_47;
          }
          unint64_t v13 = *(void *)(v37 + 8 * v14);
          if (!v13)
          {
            int64_t v14 = v9 + 3;
            if (v9 + 3 >= v36) {
              goto LABEL_47;
            }
            unint64_t v13 = *(void *)(v37 + 8 * v14);
            if (!v13)
            {
              int64_t v14 = v9 + 4;
              if (v9 + 4 >= v36) {
                goto LABEL_47;
              }
              unint64_t v13 = *(void *)(v37 + 8 * v14);
              if (!v13)
              {
                int64_t v15 = v9 + 5;
                if (v9 + 5 >= v36)
                {
LABEL_47:
                  sub_21CA7CFF0();
                  return v2;
                }
                unint64_t v13 = *(void *)(v37 + 8 * v15);
                if (!v13)
                {
                  while (1)
                  {
                    int64_t v14 = v15 + 1;
                    if (__OFADD__(v15, 1)) {
                      break;
                    }
                    if (v14 >= v36) {
                      goto LABEL_47;
                    }
                    unint64_t v13 = *(void *)(v37 + 8 * v14);
                    ++v15;
                    if (v13) {
                      goto LABEL_24;
                    }
                  }
LABEL_49:
                  __break(1u);
                }
                int64_t v14 = v9 + 5;
              }
            }
          }
        }
LABEL_24:
        unint64_t v7 = (v13 - 1) & v13;
        unint64_t v11 = __clz(__rbit64(v13)) + (v14 << 6);
        int64_t v9 = v14;
      }
      uint64_t v16 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v11);
      uint64_t v18 = *v16;
      uint64_t v17 = v16[1];
      sub_21CB89050();
      swift_bridgeObjectRetain();
      sub_21CB88380();
      uint64_t v19 = sub_21CB89090();
      uint64_t v20 = -1 << *(unsigned char *)(v2 + 32);
      unint64_t v21 = v19 & ~v20;
      if ((*(void *)(v8 + ((v21 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v21)) {
        break;
      }
LABEL_6:
      swift_bridgeObjectRelease();
    }
    uint64_t v22 = *(void *)(v2 + 48);
    uint64_t v23 = (void *)(v22 + 16 * v21);
    BOOL v24 = *v23 == v18 && v23[1] == v17;
    if (v24 || (sub_21CB88F50() & 1) != 0)
    {
      uint64_t isStackAllocationSafe = swift_bridgeObjectRelease();
      uint64_t v38 = a1;
      uint64_t v39 = v37;
      uint64_t v40 = v35;
      int64_t v41 = v9;
      unint64_t v42 = v7;
    }
    else
    {
      uint64_t v25 = ~v20;
      do
      {
        unint64_t v21 = (v21 + 1) & v25;
        if (((*(void *)(v8 + ((v21 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v21) & 1) == 0) {
          goto LABEL_6;
        }
        char v26 = (void *)(v22 + 16 * v21);
        BOOL v27 = *v26 == v18 && v26[1] == v17;
      }
      while (!v27 && (sub_21CB88F50() & 1) == 0);
      uint64_t v38 = a1;
      uint64_t v39 = v37;
      uint64_t v40 = v35;
      int64_t v41 = v9;
      unint64_t v42 = v7;
      uint64_t isStackAllocationSafe = swift_bridgeObjectRelease();
    }
    char v29 = *(unsigned char *)(v2 + 32);
    unint64_t v30 = (unint64_t)((1 << v29) + 63) >> 6;
    size_t v31 = 8 * v30;
    if ((v29 & 0x3Fu) < 0xE
      || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), isStackAllocationSafe))
    {
      MEMORY[0x270FA5388](isStackAllocationSafe);
      memcpy((char *)&v35 - ((v31 + 15) & 0x3FFFFFFFFFFFFFF0), (const void *)(v2 + 56), v31);
      uint64_t v32 = sub_21CA45244((uint64_t)&v35 - ((v31 + 15) & 0x3FFFFFFFFFFFFFF0), v30, v2, v21, &v38);
      swift_release();
      sub_21CA7CFF0();
    }
    else
    {
      uint64_t v33 = (void *)swift_slowAlloc();
      memcpy(v33, (const void *)(v2 + 56), v31);
      uint64_t v32 = sub_21CA45244((uint64_t)v33, v30, v2, v21, &v38);
      swift_release();
      sub_21CA7CFF0();
      MEMORY[0x21D4B6B70](v33, -1, -1);
    }
    return v32;
  }
  else
  {
    swift_release();
    return MEMORY[0x263F8EE88];
  }
}

uint64_t sub_21CA45244(uint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, void *a5)
{
  uint64_t v7 = *(void *)(a3 + 16);
  uint64_t v38 = (unint64_t *)result;
  *(void *)(result + ((a4 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a4) - 1;
  uint64_t v8 = v7 - 1;
  uint64_t v39 = a3 + 56;
  while (2)
  {
    uint64_t v37 = v8;
    do
    {
      while (1)
      {
        int64_t v9 = a5[3];
        unint64_t v10 = a5[4];
        if (v10)
        {
          uint64_t v11 = (v10 - 1) & v10;
          unint64_t v12 = __clz(__rbit64(v10)) | (v9 << 6);
        }
        else
        {
          int64_t v13 = v9 + 1;
          if (__OFADD__(v9, 1))
          {
            __break(1u);
            goto LABEL_45;
          }
          int64_t v14 = (unint64_t)(a5[2] + 64) >> 6;
          int64_t v15 = a5[3];
          if (v13 >= v14) {
            goto LABEL_43;
          }
          uint64_t v16 = a5[1];
          unint64_t v17 = *(void *)(v16 + 8 * v13);
          if (!v17)
          {
            int64_t v15 = v9 + 1;
            if (v9 + 2 >= v14) {
              goto LABEL_43;
            }
            unint64_t v17 = *(void *)(v16 + 8 * (v9 + 2));
            if (v17)
            {
              int64_t v13 = v9 + 2;
            }
            else
            {
              int64_t v15 = v9 + 2;
              if (v9 + 3 >= v14) {
                goto LABEL_43;
              }
              unint64_t v17 = *(void *)(v16 + 8 * (v9 + 3));
              if (v17)
              {
                int64_t v13 = v9 + 3;
              }
              else
              {
                int64_t v13 = v9 + 4;
                int64_t v15 = v9 + 3;
                if (v9 + 4 >= v14) {
                  goto LABEL_43;
                }
                unint64_t v17 = *(void *)(v16 + 8 * v13);
                if (!v17)
                {
                  int64_t v15 = v14 - 1;
                  int64_t v18 = v9 + 5;
                  while (v14 != v18)
                  {
                    unint64_t v17 = *(void *)(v16 + 8 * v18++);
                    if (v17)
                    {
                      int64_t v13 = v18 - 1;
                      goto LABEL_21;
                    }
                  }
LABEL_43:
                  a5[3] = v15;
                  a5[4] = 0;
                  swift_retain();
                  return sub_21CB4BCA4(v38, a2, v37, a3);
                }
              }
            }
          }
LABEL_21:
          uint64_t v11 = (v17 - 1) & v17;
          unint64_t v12 = __clz(__rbit64(v17)) + (v13 << 6);
          int64_t v9 = v13;
        }
        uint64_t v19 = (uint64_t *)(*(void *)(*a5 + 48) + 16 * v12);
        uint64_t v21 = *v19;
        uint64_t v20 = v19[1];
        a5[3] = v9;
        a5[4] = v11;
        sub_21CB89050();
        swift_bridgeObjectRetain();
        sub_21CB88380();
        uint64_t v22 = sub_21CB89090();
        uint64_t v23 = -1 << *(unsigned char *)(a3 + 32);
        unint64_t v24 = v22 & ~v23;
        unint64_t v25 = v24 >> 6;
        uint64_t v26 = 1 << v24;
        if (((1 << v24) & *(void *)(v39 + 8 * (v24 >> 6))) != 0) {
          break;
        }
LABEL_3:
        uint64_t result = swift_bridgeObjectRelease();
      }
      uint64_t v27 = *(void *)(a3 + 48);
      uint64_t v28 = (void *)(v27 + 16 * v24);
      BOOL v29 = *v28 == v21 && v28[1] == v20;
      if (!v29 && (sub_21CB88F50() & 1) == 0)
      {
        uint64_t v31 = ~v23;
        for (unint64_t i = v24 + 1; ; unint64_t i = v33 + 1)
        {
          unint64_t v33 = i & v31;
          if (((*(void *)(v39 + (((i & v31) >> 3) & 0xFFFFFFFFFFFFFF8)) >> (i & v31)) & 1) == 0) {
            break;
          }
          uint64_t v34 = (void *)(v27 + 16 * v33);
          BOOL v35 = *v34 == v21 && v34[1] == v20;
          if (v35 || (sub_21CB88F50() & 1) != 0)
          {
            uint64_t result = swift_bridgeObjectRelease();
            unint64_t v25 = v33 >> 6;
            uint64_t v26 = 1 << v33;
            goto LABEL_29;
          }
        }
        goto LABEL_3;
      }
      uint64_t result = swift_bridgeObjectRelease();
LABEL_29:
      unint64_t v30 = v38[v25];
      v38[v25] = v30 & ~v26;
    }
    while ((v26 & v30) == 0);
    uint64_t v8 = v37 - 1;
    if (__OFSUB__(v37, 1))
    {
LABEL_45:
      __break(1u);
      return result;
    }
    if (v37 != 1) {
      continue;
    }
    return MEMORY[0x263F8EE88];
  }
}

uint64_t sub_21CA45524(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_21CA45544(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_21CA45544(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_21CA57E34((uint64_t *)&unk_267C96F20);
    unint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    unint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  int64_t v13 = v10 + 32;
  int64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_21CB88D50();
  __break(1u);
  return result;
}

void *sub_21CA456B0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (void *)MEMORY[0x263F8EE78];
  }
  sub_21CA57E34((uint64_t *)&unk_267C96F20);
  uint64_t v3 = (void *)swift_allocObject();
  int64_t v4 = j__malloc_size(v3);
  uint64_t v5 = v4 - 32;
  if (v4 < 32) {
    uint64_t v5 = v4 - 17;
  }
  v3[2] = v1;
  v3[3] = 2 * (v5 >> 4);
  uint64_t v6 = sub_21CA45BF8((uint64_t)&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_21CA7CFF0();
  if (v6 != v1)
  {
    __break(1u);
    return (void *)MEMORY[0x263F8EE78];
  }
  return v3;
}

uint64_t sub_21CA45798(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_21CA57E34(&qword_267C97BF8);
  char v40 = a2;
  uint64_t v6 = sub_21CB88D30();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v38 = (void *)(v5 + 64);
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v37 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v11 = v6 + 64;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    for (i = v5; ; uint64_t v5 = i)
    {
      if (v10)
      {
        unint64_t v20 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v21 = v20 | (v13 << 6);
      }
      else
      {
        int64_t v22 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v22 >= v37) {
          goto LABEL_33;
        }
        unint64_t v23 = v38[v22];
        ++v13;
        if (!v23)
        {
          int64_t v13 = v22 + 1;
          if (v22 + 1 >= v37) {
            goto LABEL_33;
          }
          unint64_t v23 = v38[v13];
          if (!v23)
          {
            int64_t v24 = v22 + 2;
            if (v24 >= v37)
            {
LABEL_33:
              swift_release();
              uint64_t v3 = v2;
              if (v40)
              {
                uint64_t v36 = 1 << *(unsigned char *)(v5 + 32);
                if (v36 >= 64) {
                  bzero(v38, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v38 = -1 << v36;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v23 = v38[v24];
            if (!v23)
            {
              while (1)
              {
                int64_t v13 = v24 + 1;
                if (__OFADD__(v24, 1)) {
                  goto LABEL_40;
                }
                if (v13 >= v37) {
                  goto LABEL_33;
                }
                unint64_t v23 = v38[v13];
                ++v24;
                if (v23) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v13 = v24;
          }
        }
LABEL_30:
        unint64_t v10 = (v23 - 1) & v23;
        unint64_t v21 = __clz(__rbit64(v23)) + (v13 << 6);
      }
      BOOL v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v21);
      uint64_t v31 = *v29;
      uint64_t v30 = v29[1];
      uint64_t v32 = *(void *)(v5 + 56) + 32 * v21;
      uint64_t v33 = *(void *)v32;
      uint64_t v34 = *(void *)(v32 + 8);
      uint64_t v35 = *(void *)(v32 + 16);
      char v42 = *(unsigned char *)(v32 + 25);
      char v43 = *(unsigned char *)(v32 + 24);
      char v41 = *(unsigned char *)(v32 + 26);
      if ((v40 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      sub_21CB89050();
      sub_21CB88380();
      uint64_t result = sub_21CB89090();
      uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v15 = result & ~v14;
      unint64_t v16 = v15 >> 6;
      if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
      {
        unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v27 = v16 == v26;
          if (v16 == v26) {
            unint64_t v16 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v11 + 8 * v16);
        }
        while (v28 == -1);
        unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
      }
      *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      int64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
      *int64_t v18 = v31;
      v18[1] = v30;
      uint64_t v19 = *(void *)(v7 + 56) + 32 * v17;
      *(void *)uint64_t v19 = v33;
      *(void *)(v19 + 8) = v34;
      *(void *)(v19 + 16) = v35;
      *(unsigned char *)(v19 + 24) = v43;
      *(unsigned char *)(v19 + 25) = v42;
      *(unsigned char *)(v19 + 26) = v41;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

void *sub_21CA45AE8(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_21CA57E34(&qword_267C95280);
      unint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 1;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      int64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      unint64_t v10 = (void *)MEMORY[0x263F8EE78];
      int64_t v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4]) {
          memmove(v13, a4 + 4, 32 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_21CA621CC(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_21CA45BF8(uint64_t result, void *a2, uint64_t a3, uint64_t a4)
{
  char v5 = (void *)result;
  uint64_t v6 = a4 + 64;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 64);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_38:
    *char v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  int64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    unint64_t v20 = (void *)(*(void *)(a4 + 48) + 16 * v16);
    uint64_t v21 = v20[1];
    *int64_t v11 = *v20;
    v11[1] = v21;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 2;
    uint64_t result = swift_bridgeObjectRetain();
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18) {
      break;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18) {
    goto LABEL_14;
  }
  int64_t v19 = v17 + 2;
  if (v17 + 2 >= v14) {
    goto LABEL_33;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18) {
    goto LABEL_17;
  }
  int64_t v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17 + 2;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    int64_t v17 = v12;
    goto LABEL_18;
  }
  int64_t v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    unint64_t v9 = 0;
LABEL_37:
    uint64_t v10 = v13;
    goto LABEL_38;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    int64_t v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v17 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v17 >= v14)
    {
      unint64_t v9 = 0;
      int64_t v12 = v14 - 1;
      goto LABEL_37;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v19;
    if (v18) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_21CA45DF8(uint64_t result)
{
  if (!*(void *)(*(void *)v1 + 16)) {
    return result;
  }
  uint64_t v2 = result;
  uint64_t v3 = result + 56;
  uint64_t v4 = 1 << *(unsigned char *)(result + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(result + 56);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v8 = 0;
  while (1)
  {
    if (v6)
    {
      unint64_t v9 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v10 = v9 | (v8 << 6);
      goto LABEL_6;
    }
    int64_t v14 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
LABEL_29:
      __break(1u);
      return result;
    }
    if (v14 >= v7) {
      goto LABEL_24;
    }
    unint64_t v15 = *(void *)(v3 + 8 * v14);
    ++v8;
    if (!v15)
    {
      int64_t v8 = v14 + 1;
      if (v14 + 1 >= v7) {
        goto LABEL_24;
      }
      unint64_t v15 = *(void *)(v3 + 8 * v8);
      if (!v15)
      {
        int64_t v8 = v14 + 2;
        if (v14 + 2 >= v7) {
          goto LABEL_24;
        }
        unint64_t v15 = *(void *)(v3 + 8 * v8);
        if (!v15)
        {
          int64_t v8 = v14 + 3;
          if (v14 + 3 >= v7) {
            goto LABEL_24;
          }
          unint64_t v15 = *(void *)(v3 + 8 * v8);
          if (!v15) {
            break;
          }
        }
      }
    }
LABEL_23:
    unint64_t v6 = (v15 - 1) & v15;
    unint64_t v10 = __clz(__rbit64(v15)) + (v8 << 6);
LABEL_6:
    int64_t v11 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v10);
    uint64_t v12 = *v11;
    uint64_t v13 = v11[1];
    swift_bridgeObjectRetain();
    sub_21CB4BB14(v12, v13);
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
  }
  int64_t v16 = v14 + 4;
  if (v16 < v7)
  {
    unint64_t v15 = *(void *)(v3 + 8 * v16);
    if (!v15)
    {
      while (1)
      {
        int64_t v8 = v16 + 1;
        if (__OFADD__(v16, 1)) {
          goto LABEL_29;
        }
        if (v8 >= v7) {
          goto LABEL_24;
        }
        unint64_t v15 = *(void *)(v3 + 8 * v8);
        ++v16;
        if (v15) {
          goto LABEL_23;
        }
      }
    }
    int64_t v8 = v16;
    goto LABEL_23;
  }
LABEL_24:

  return swift_release();
}

uint64_t sub_21CA45FA0@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t v6 = sub_21CB88100();
  uint64_t v150 = *(void *)(v6 - 8);
  uint64_t v151 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v148 = (char *)&v141 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v149 = sub_21CB88150();
  uint64_t v147 = *(void *)(v149 - 8);
  MEMORY[0x270FA5388](v149);
  uint64_t v146 = (char *)&v141 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_21CA57E34((uint64_t *)&unk_267C96EF0);
  uint64_t v10 = MEMORY[0x270FA5388](v9 - 8);
  uint64_t v12 = (char *)&v141 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v166 = (uint64_t)&v141 - v13;
  uint64_t v168 = type metadata accessor for FMFLocation();
  uint64_t v162 = *(void *)(v168 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v168);
  uint64_t v171 = (uint64_t)&v141 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v160 = (uint64_t)&v141 - v17;
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  uint64_t v153 = (uint64_t)&v141 - v19;
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  uint64_t v145 = (uint64_t)&v141 - v21;
  uint64_t v22 = MEMORY[0x270FA5388](v20);
  uint64_t v144 = (uint64_t *)((char *)&v141 - v23);
  uint64_t v24 = MEMORY[0x270FA5388](v22);
  uint64_t v152 = (uint64_t)&v141 - v25;
  uint64_t v26 = MEMORY[0x270FA5388](v24);
  uint64_t v157 = (uint64_t)&v141 - v27;
  uint64_t v28 = MEMORY[0x270FA5388](v26);
  uint64_t v156 = (uint64_t)&v141 - v29;
  uint64_t v30 = MEMORY[0x270FA5388](v28);
  uint64_t v164 = (uint64_t)&v141 - v31;
  uint64_t v32 = MEMORY[0x270FA5388](v30);
  uint64_t v170 = (uint64_t *)((char *)&v141 - v33);
  uint64_t v34 = MEMORY[0x270FA5388](v32);
  uint64_t v169 = (uint64_t *)((char *)&v141 - v35);
  MEMORY[0x270FA5388](v34);
  uint64_t v167 = (uint64_t *)((char *)&v141 - v36);
  uint64_t v165 = sub_21CB87590();
  uint64_t v37 = *(void *)(v165 - 8);
  MEMORY[0x270FA5388](v165);
  uint64_t v39 = (char *)&v141 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = sub_21CA4ECF8();
  unint64_t v159 = a1;
  uint64_t v41 = sub_21CA5A5F4();
  char v42 = sub_21CA48880(a2, v41);
  swift_bridgeObjectRelease();
  if (v42)
  {
    uint64_t result = swift_bridgeObjectRelease();
    *a3 = 0;
    return result;
  }
  uint64_t v155 = v12;
  uint64_t v143 = a3;
  id v44 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08790]), sel_init);
  uint64_t v45 = (void *)sub_21CB882C0();
  objc_msgSend(v44, sel_setLocalizedDateFormatFromTemplate_, v45);

  uint64_t v46 = *(void *)(a2 + 16);
  uint64_t v47 = (void (*)(void, void, void, void))a2;
  if (v46)
  {
    uint64_t v48 = a2 + ((*(unsigned __int8 *)(v162 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v162 + 80));
    uint64_t v49 = *(void *)(v162 + 72);
    unint64_t v161 = (void (*)(void, void, void, void))a2;
    swift_bridgeObjectRetain();
    uint64_t v50 = v46;
    uint64_t v51 = v163;
    do
    {
      sub_21CA4D908(v48, v40, v44, 0x69737365636F7270, 0xEA0000000000676ELL);
      v48 += v49;
      --v50;
    }
    while (v50);
    uint64_t v163 = v51;

    uint64_t v47 = v161;
    swift_bridgeObjectRelease();
  }
  else
  {
  }
  uint64_t v52 = sub_21CA5A5F4();
  v175[0] = MEMORY[0x263F8EE78];
  sub_21CB87580();
  sub_21CB874E0();
  double v54 = v53;
  (*(void (**)(char *, uint64_t))(v37 + 8))(v39, v165);
  uint64_t v55 = v170;
  if (v46)
  {
    uint64_t v56 = (uint64_t)v47 + ((*(unsigned __int8 *)(v162 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v162 + 80));
    uint64_t v57 = *(void *)(v162 + 72);
    swift_bridgeObjectRetain();
    uint64_t v58 = v163;
    do
    {
      sub_21CA47208(v56, v52, v175, 5.0, 10.0, 300.0, v54);
      v56 += v57;
      --v46;
    }
    while (v46);
    uint64_t v163 = v58;
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  unint64_t v59 = v175[0];
  id v60 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08790]), sel_init);
  unint64_t v61 = (void *)sub_21CB882C0();
  objc_msgSend(v60, sel_setLocalizedDateFormatFromTemplate_, v61);

  uint64_t v62 = *(void *)(v59 + 16);
  if (v62)
  {
    uint64_t v63 = v59 + ((*(unsigned __int8 *)(v162 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v162 + 80));
    uint64_t v64 = *(void *)(v162 + 72);
    swift_bridgeObjectRetain();
    uint64_t v65 = v163;
    do
    {
      sub_21CA4D908(v63, v40, v60, 0x65737365636F7270, 0xE900000000000064);
      v63 += v64;
      --v62;
    }
    while (v62);
    uint64_t v163 = v65;
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  unint64_t v66 = v159;
  *(void *)(v159 + 576) = 0;
  swift_bridgeObjectRelease();
  *(void *)(v66 + 624) = 0;
  swift_bridgeObjectRelease();
  uint64_t v67 = *(void *)(v59 + 16);
  if (v67)
  {
    uint64_t v68 = *(unsigned __int8 *)(v162 + 80);
    unint64_t v161 = (void (*)(void, void, void, void))v59;
    uint64_t v69 = v59 + ((v68 + 32) & ~v68);
    uint64_t v70 = *(void *)(v162 + 72);
    unint64_t v71 = (void *)MEMORY[0x263F8EE80];
    char v72 = v167;
    uint64_t v165 = v70;
    while (1)
    {
      sub_21CA571E8(v69, (uint64_t)v72, (uint64_t (*)(void))type metadata accessor for FMFLocation);
      uint64_t v74 = v72[1];
      if (v74) {
        break;
      }
LABEL_21:
      sub_21CA57050((uint64_t)v72, (uint64_t (*)(void))type metadata accessor for FMFLocation);
      v69 += v70;
      if (!--v67)
      {
        swift_bridgeObjectRelease();
        uint64_t v55 = v170;
        goto LABEL_35;
      }
    }
    uint64_t v75 = *v72;
    sub_21CA571E8((uint64_t)v72, (uint64_t)v169, (uint64_t (*)(void))type metadata accessor for FMFLocation);
    swift_bridgeObjectRetain();
    unint64_t v76 = (unint64_t)v71;
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v175[0] = v76;
    unint64_t v79 = sub_21CA5BCE0(v75, v74);
    uint64_t v80 = *(void *)(v76 + 16);
    BOOL v81 = (v78 & 1) == 0;
    uint64_t v82 = v80 + v81;
    if (__OFADD__(v80, v81))
    {
      __break(1u);
LABEL_80:
      __break(1u);
LABEL_81:
      uint64_t result = sub_21CB88FA0();
      __break(1u);
      return result;
    }
    char v83 = v78;
    if (*(void *)(v76 + 24) >= v82)
    {
      char v72 = v167;
      if (isUniquelyReferenced_nonNull_native) {
        goto LABEL_29;
      }
      sub_21CB858B0();
    }
    else
    {
      sub_21CA5C928(v82, isUniquelyReferenced_nonNull_native);
      unint64_t v84 = sub_21CA5BCE0(v75, v74);
      if ((v83 & 1) != (v85 & 1)) {
        goto LABEL_81;
      }
      unint64_t v79 = v84;
    }
    char v72 = v167;
LABEL_29:
    unint64_t v71 = (void *)v175[0];
    if (v83)
    {
      uint64_t v73 = *(void *)(v175[0] + 56) + v79 * v165;
      uint64_t v70 = v165;
      sub_21CA5C95C((uint64_t)v169, v73, (uint64_t (*)(void))type metadata accessor for FMFLocation);
    }
    else
    {
      *(void *)(v175[0] + 8 * (v79 >> 6) + 64) |= 1 << v79;
      int64_t v86 = (uint64_t *)(v71[6] + 16 * v79);
      *int64_t v86 = v75;
      v86[1] = v74;
      uint64_t v87 = v71[7] + v79 * v165;
      uint64_t v70 = v165;
      sub_21CA591A4((uint64_t)v169, v87, (uint64_t (*)(void))type metadata accessor for FMFLocation);
      uint64_t v88 = v71[2];
      BOOL v89 = __OFADD__(v88, 1);
      uint64_t v90 = v88 + 1;
      if (v89) {
        goto LABEL_80;
      }
      v71[2] = v90;
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_21;
  }
  swift_bridgeObjectRelease();
  unint64_t v71 = (void *)MEMORY[0x263F8EE80];
LABEL_35:
  unint64_t v176 = MEMORY[0x263F8EE78];
  unint64_t v91 = v159;
  int64_t v92 = (uint64_t *)(v159 + 616);
  swift_beginAccess();
  uint64_t v93 = *(void *)(v91 + 616);
  uint64_t v94 = *(void *)(v93 + 16);
  uint64_t v95 = v168;
  if (!v94) {
    goto LABEL_75;
  }
  uint64_t v141 = *(void *)(v91 + 616);
  BOOL v142 = (uint64_t *)(v91 + 616);
  uint64_t v169 = v71;
  unint64_t v96 = (*(unsigned __int8 *)(v162 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v162 + 80);
  uint64_t v97 = v93 + v96;
  uint64_t v98 = *(void *)(v162 + 72);
  uint64_t v167 = (uint64_t *)(v162 + 56);
  uint64_t v165 = v162 + 48;
  swift_bridgeObjectRetain();
  unint64_t v154 = v96;
  do
  {
    sub_21CA571E8(v97, (uint64_t)v55, (uint64_t (*)(void))type metadata accessor for FMFLocation);
    uint64_t v101 = v55[1];
    if (!v101) {
      goto LABEL_48;
    }
    uint64_t v102 = (uint64_t)v169;
    if (!v169[2])
    {
      uint64_t v107 = v166;
      ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))*v167)(v166, 1, 1, v95);
LABEL_47:
      sub_21CA1B88C(v107, (uint64_t *)&unk_267C96EF0);
LABEL_48:
      uint64_t v55 = v170;
      sub_21CA571E8((uint64_t)v170, v171, (uint64_t (*)(void))type metadata accessor for FMFLocation);
      unint64_t v109 = v176;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v109 = sub_21CA47FB4(0, *(void *)(v109 + 16) + 1, 1, v109);
      }
      unint64_t v111 = *(void *)(v109 + 16);
      unint64_t v110 = *(void *)(v109 + 24);
      if (v111 >= v110 >> 1) {
        unint64_t v109 = sub_21CA47FB4(v110 > 1, v111 + 1, 1, v109);
      }
      *(void *)(v109 + 16) = v111 + 1;
      sub_21CA591A4(v171, v109 + v96 + v111 * v98, (uint64_t (*)(void))type metadata accessor for FMFLocation);
      unint64_t v176 = v109;
      uint64_t v95 = v168;
      goto LABEL_39;
    }
    uint64_t v103 = *v170;
    swift_bridgeObjectRetain();
    unint64_t v104 = sub_21CA5BCE0(v103, v101);
    if (v105)
    {
      uint64_t v106 = *(void *)(v102 + 56) + v104 * v98;
      uint64_t v107 = v166;
      sub_21CA571E8(v106, v166, (uint64_t (*)(void))type metadata accessor for FMFLocation);
      uint64_t v108 = (void (*)(void, void, void, void))*v167;
      ((void (*)(uint64_t, void, uint64_t, uint64_t))*v167)(v107, 0, 1, v95);
    }
    else
    {
      uint64_t v107 = v166;
      uint64_t v108 = (void (*)(void, void, void, void))*v167;
      ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))*v167)(v166, 1, 1, v95);
    }
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))v165)(v107, 1, v95) == 1) {
      goto LABEL_47;
    }
    unint64_t v161 = v108;
    uint64_t v112 = v164;
    sub_21CA591A4(v107, v164, (uint64_t (*)(void))type metadata accessor for FMFLocation);
    uint64_t v113 = *(void *)(v112 + 8);
    if (!v113)
    {
      sub_21CA57050(v112, (uint64_t (*)(void))type metadata accessor for FMFLocation);
      goto LABEL_48;
    }
    uint64_t v158 = *(void *)v112;
    int v114 = *(unsigned __int8 *)(v112 + 33);
    uint64_t v115 = v156;
    sub_21CA571E8(v112, v156, (uint64_t (*)(void))type metadata accessor for FMFLocation);
    uint64_t v162 = v113;
    if (!v114)
    {
      swift_bridgeObjectRetain();
      sub_21CA57050(v115, (uint64_t (*)(void))type metadata accessor for FMFLocation);
      uint64_t v117 = v157;
      sub_21CA571E8(v112, v157, (uint64_t (*)(void))type metadata accessor for FMFLocation);
LABEL_65:
      sub_21CA57050(v117, (uint64_t (*)(void))type metadata accessor for FMFLocation);
      sub_21CA571E8(v112, v160, (uint64_t (*)(void))type metadata accessor for FMFLocation);
      unint64_t v124 = v176;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v124 = sub_21CA47FB4(0, *(void *)(v124 + 16) + 1, 1, v124);
      }
      unint64_t v126 = *(void *)(v124 + 16);
      unint64_t v125 = *(void *)(v124 + 24);
      if (v126 >= v125 >> 1) {
        unint64_t v124 = sub_21CA47FB4(v125 > 1, v126 + 1, 1, v124);
      }
      *(void *)(v124 + 16) = v126 + 1;
      sub_21CA591A4(v160, v124 + v96 + v126 * v98, (uint64_t (*)(void))type metadata accessor for FMFLocation);
      unint64_t v176 = v124;
      goto LABEL_70;
    }
    int v116 = *(unsigned __int8 *)(v115 + 16);
    swift_bridgeObjectRetain();
    sub_21CA57050(v115, (uint64_t (*)(void))type metadata accessor for FMFLocation);
    uint64_t v117 = v157;
    sub_21CA571E8(v112, v157, (uint64_t (*)(void))type metadata accessor for FMFLocation);
    if (v116 != 1) {
      goto LABEL_65;
    }
    sub_21CA26A4C(v117 + *(int *)(v168 + 44), (uint64_t)v174, &qword_267C951F0);
    sub_21CA26A4C((uint64_t)v174, (uint64_t)v175, &qword_267C951F0);
    if (sub_21CA7CDBC((uint64_t)v175) != 1)
    {
      uint64_t v112 = v164;
      goto LABEL_65;
    }
    sub_21CA57050(v117, (uint64_t (*)(void))type metadata accessor for FMFLocation);
    uint64_t v118 = v144;
    sub_21CA571E8(v164, (uint64_t)v144, (uint64_t (*)(void))type metadata accessor for FMFLocation);
    uint64_t v119 = v145;
    sub_21CA571E8((uint64_t)v170, v145, (uint64_t (*)(void))type metadata accessor for FMFLocation);
    sub_21CA76144(v173);
    sub_21CA26A4C((uint64_t)v173, (uint64_t)v172, &qword_267C951E0);
    uint64_t v120 = v152;
    FMFLocation.init(from:updatedLocation:address:)(v118, v119, (uint64_t)v172, v152);
    sub_21CA571E8(v120, v153, (uint64_t (*)(void))type metadata accessor for FMFLocation);
    unint64_t v121 = v176;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v121 = sub_21CA47FB4(0, *(void *)(v121 + 16) + 1, 1, v121);
    }
    unint64_t v123 = *(void *)(v121 + 16);
    unint64_t v122 = *(void *)(v121 + 24);
    if (v123 >= v122 >> 1) {
      unint64_t v121 = sub_21CA47FB4(v122 > 1, v123 + 1, 1, v121);
    }
    *(void *)(v121 + 16) = v123 + 1;
    sub_21CA591A4(v153, v121 + v96 + v123 * v98, (uint64_t (*)(void))type metadata accessor for FMFLocation);
    unint64_t v176 = v121;
    sub_21CA57050(v152, (uint64_t (*)(void))type metadata accessor for FMFLocation);
LABEL_70:
    uint64_t v127 = (uint64_t)v169;
    swift_bridgeObjectRetain();
    unint64_t v128 = sub_21CA5BCE0(v158, v162);
    char v130 = v129;
    swift_bridgeObjectRelease();
    uint64_t v95 = v168;
    uint64_t v55 = v170;
    if (v130)
    {
      int v131 = swift_isUniquelyReferenced_nonNull_native();
      v175[0] = v127;
      if (!v131)
      {
        sub_21CB858B0();
        uint64_t v127 = v175[0];
      }
      swift_bridgeObjectRelease();
      uint64_t v100 = (uint64_t)v155;
      sub_21CA591A4(*(void *)(v127 + 56) + v128 * v98, (uint64_t)v155, (uint64_t (*)(void))type metadata accessor for FMFLocation);
      uint64_t v169 = (void *)v127;
      sub_21CA4870C(v128, v127);
      swift_bridgeObjectRelease();
      uint64_t v99 = 0;
    }
    else
    {
      uint64_t v99 = 1;
      uint64_t v100 = (uint64_t)v155;
    }
    v161(v100, v99, 1, v95);
    swift_bridgeObjectRelease();
    sub_21CA1B88C(v100, (uint64_t *)&unk_267C96EF0);
    sub_21CA57050(v164, (uint64_t (*)(void))type metadata accessor for FMFLocation);
    unint64_t v96 = v154;
LABEL_39:
    sub_21CA57050((uint64_t)v55, (uint64_t (*)(void))type metadata accessor for FMFLocation);
    v97 += v98;
    --v94;
  }
  while (v94);
  swift_bridgeObjectRelease();
  int64_t v92 = v142;
LABEL_75:
  uint64_t v132 = swift_bridgeObjectRetain();
  sub_21CA488C0(v132);
  uint64_t v133 = *v92;
  uint64_t v134 = v176;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char v135 = sub_21CA48880(v133, v134);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v135)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    unint64_t v136 = v159;
    *(void *)(v159 + 616) = v134;
    swift_bridgeObjectRelease();
    uint64_t v171 = *(void *)(v136 + 64);
    v175[4] = (unint64_t)sub_21CA330D8;
    v175[5] = v136;
    v175[0] = MEMORY[0x263EF8330];
    v175[1] = 1107296256;
    v175[2] = (unint64_t)sub_21CA1B084;
    v175[3] = (unint64_t)&unk_26CD6E730;
    uint64_t v137 = _Block_copy(v175);
    swift_retain();
    uint64_t v138 = v146;
    sub_21CB88120();
    v174[0] = MEMORY[0x263F8EE78];
    sub_21CA36540((unint64_t *)&qword_267C96FC0, MEMORY[0x263F8F030]);
    sub_21CA57E34((uint64_t *)&unk_267C96DD0);
    sub_21CA356BC((unint64_t *)&qword_267C96FD0, (uint64_t *)&unk_267C96DD0);
    v139 = v148;
    uint64_t v140 = v151;
    sub_21CB88A60();
    MEMORY[0x21D4B5A20](0, v138, v139, v137);
    _Block_release(v137);
    (*(void (**)(char *, uint64_t))(v150 + 8))(v139, v140);
    (*(void (**)(char *, uint64_t))(v147 + 8))(v138, v149);
    swift_release();
  }
  *uint64_t v143 = 1;
  return swift_bridgeObjectRelease();
}

uint64_t sub_21CA47208(uint64_t a1, uint64_t a2, unint64_t *a3, double a4, double a5, double a6, double a7)
{
  uint64_t v14 = sub_21CB87590();
  uint64_t v130 = *(void *)(v14 - 8);
  uint64_t v131 = v14;
  MEMORY[0x270FA5388](v14);
  char v129 = (char *)&v118 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_21CA57E34((uint64_t *)&unk_267C96EF0);
  MEMORY[0x270FA5388](v16 - 8);
  uint64_t v18 = (char *)&v118 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v140 = type metadata accessor for FMFLocation();
  uint64_t v19 = *(void *)(v140 - 8);
  uint64_t v20 = MEMORY[0x270FA5388](v140);
  uint64_t v134 = (char *)&v118 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = MEMORY[0x270FA5388](v20);
  uint64_t v127 = (uint64_t)&v118 - v23;
  uint64_t v24 = MEMORY[0x270FA5388](v22);
  uint64_t v122 = (uint64_t)&v118 - v25;
  uint64_t v26 = MEMORY[0x270FA5388](v24);
  uint64_t v121 = (uint64_t)&v118 - v27;
  uint64_t v28 = MEMORY[0x270FA5388](v26);
  uint64_t v123 = (uint64_t)&v118 - v29;
  uint64_t v30 = MEMORY[0x270FA5388](v28);
  unint64_t v126 = (char *)&v118 - v31;
  uint64_t v32 = MEMORY[0x270FA5388](v30);
  uint64_t v120 = (uint64_t)&v118 - v33;
  uint64_t v34 = MEMORY[0x270FA5388](v32);
  unint64_t v125 = (char *)&v118 - v35;
  uint64_t v36 = MEMORY[0x270FA5388](v34);
  uint64_t v124 = (uint64_t)&v118 - v37;
  uint64_t v38 = MEMORY[0x270FA5388](v36);
  uint64_t v128 = (uint64_t)&v118 - v39;
  uint64_t v40 = MEMORY[0x270FA5388](v38);
  char v42 = (uint64_t *)((char *)&v118 - v41);
  uint64_t v43 = MEMORY[0x270FA5388](v40);
  uint64_t v133 = (uint64_t)&v118 - v44;
  MEMORY[0x270FA5388](v43);
  uint64_t v46 = (uint64_t *)((char *)&v118 - v45);
  sub_21CA571E8(a1, (uint64_t)&v118 - v45, (uint64_t (*)(void))type metadata accessor for FMFLocation);
  uint64_t v47 = *(void *)(a2 + 16);
  if (v47)
  {
    uint64_t v132 = a3;
    uint64_t v48 = a2 + ((*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80));
    uint64_t v49 = v19;
    uint64_t v50 = *(void *)(v19 + 72);
    swift_bridgeObjectRetain();
    do
    {
      sub_21CA571E8(v48, (uint64_t)v42, (uint64_t (*)(void))type metadata accessor for FMFLocation);
      uint64_t v51 = v42[1];
      uint64_t v52 = v46[1];
      if (v51)
      {
        if (v52)
        {
          BOOL v53 = *v42 == *v46 && v51 == v52;
          if (v53 || (sub_21CB88F50() & 1) != 0)
          {
LABEL_12:
            sub_21CA591A4((uint64_t)v42, (uint64_t)v18, (uint64_t (*)(void))type metadata accessor for FMFLocation);
            uint64_t v54 = 0;
            goto LABEL_15;
          }
        }
      }
      else if (!v52)
      {
        goto LABEL_12;
      }
      sub_21CA57050((uint64_t)v42, (uint64_t (*)(void))type metadata accessor for FMFLocation);
      v48 += v50;
      --v47;
    }
    while (v47);
    uint64_t v54 = 1;
LABEL_15:
    uint64_t v19 = v49;
    a3 = v132;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v54 = 1;
  }
  uint64_t v55 = v140;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v19 + 56))(v18, v54, 1, v140);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v18, 1, v55) != 1)
  {
    uint64_t v56 = (uint64_t)v18;
    uint64_t v57 = v133;
    sub_21CA591A4(v56, v133, (uint64_t (*)(void))type metadata accessor for FMFLocation);
    sub_21CA26A4C(v57 + *(int *)(v55 + 44), (uint64_t)v138, &qword_267C951F0);
    sub_21CA26A4C((uint64_t)v138, (uint64_t)v139, &qword_267C951F0);
    if (sub_21CA7CDBC((uint64_t)v139) == 1
      || (uint64_t v58 = (void *)v139[38],
          sub_21CA26A4C((uint64_t)v46 + *(int *)(v55 + 44), (uint64_t)v136, &qword_267C951F0),
          sub_21CA26A4C((uint64_t)v136, (uint64_t)v137, &qword_267C951F0),
          sub_21CA7CDBC((uint64_t)v137) == 1))
    {
      sub_21CA57050(v57, (uint64_t (*)(void))type metadata accessor for FMFLocation);
      goto LABEL_21;
    }
    uint64_t v119 = v19;
    unint64_t v66 = (void *)v137[38];
    uint64_t v67 = v58;
    uint64_t v68 = v66;
    uint64_t v132 = v67;
    id v69 = objc_msgSend(v67, sel_timestamp);
    uint64_t v70 = v129;
    sub_21CB87560();

    sub_21CB874E0();
    double v72 = v71;
    uint64_t v73 = v131;
    uint64_t v74 = *(void (**)(char *, uint64_t))(v130 + 8);
    v74(v70, v131);
    uint64_t v134 = v68;
    id v75 = objc_msgSend(v68, sel_timestamp);
    sub_21CB87560();

    sub_21CB874E0();
    double v77 = v76;
    v74(v70, v73);
    if (v77 - v72 < 0.0)
    {
      uint64_t v78 = v133;
      sub_21CA571E8(v133, v128, (uint64_t (*)(void))type metadata accessor for FMFLocation);
      unint64_t v79 = *a3;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *a3 = v79;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        unint64_t v79 = sub_21CA47FB4(0, *(void *)(v79 + 16) + 1, 1, v79);
        *a3 = v79;
      }
      BOOL v81 = v132;
      unint64_t v83 = *(void *)(v79 + 16);
      unint64_t v82 = *(void *)(v79 + 24);
      if (v83 >= v82 >> 1)
      {
        unint64_t v79 = sub_21CA47FB4(v82 > 1, v83 + 1, 1, v79);
        *a3 = v79;
      }
      *(void *)(v79 + 16) = v83 + 1;
      uint64_t v84 = v79
          + ((*(unsigned __int8 *)(v119 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v119 + 80))
          + *(void *)(v119 + 72) * v83;
      uint64_t v85 = v128;
      goto LABEL_58;
    }
    uint64_t v78 = v133;
    if (v77 - v72 >= a4)
    {
      uint64_t v88 = v124;
      sub_21CA571E8(v133, v124, (uint64_t (*)(void))type metadata accessor for FMFLocation);
      BOOL v81 = v132;
      BOOL v89 = (int *)v140;
      uint64_t v91 = (uint64_t)v125;
      uint64_t v90 = (uint64_t)v126;
    }
    else
    {
      BOOL v81 = v132;
      objc_msgSend(v134, sel_distanceFromLocation_, v132);
      double v87 = v86;
      uint64_t v88 = v124;
      sub_21CA571E8(v78, v124, (uint64_t (*)(void))type metadata accessor for FMFLocation);
      BOOL v89 = (int *)v140;
      uint64_t v91 = (uint64_t)v125;
      uint64_t v90 = (uint64_t)v126;
      if (v87 < a5)
      {
        uint64_t v92 = v88;
        int v93 = *(unsigned __int8 *)(v88 + 33);
        sub_21CA57050(v92, (uint64_t (*)(void))type metadata accessor for FMFLocation);
        sub_21CA571E8((uint64_t)v46, v91, (uint64_t (*)(void))type metadata accessor for FMFLocation);
        if (v93 == 2)
        {
          int v94 = *(unsigned __int8 *)(v91 + 33);
          sub_21CA57050(v91, (uint64_t (*)(void))type metadata accessor for FMFLocation);
          if (v94 == 1)
          {
            sub_21CA571E8(v78, v120, (uint64_t (*)(void))type metadata accessor for FMFLocation);
            unint64_t v95 = *a3;
            char v96 = swift_isUniquelyReferenced_nonNull_native();
            *a3 = v95;
            if ((v96 & 1) == 0)
            {
              unint64_t v95 = sub_21CA47FB4(0, *(void *)(v95 + 16) + 1, 1, v95);
              *a3 = v95;
            }
            unint64_t v98 = *(void *)(v95 + 16);
            unint64_t v97 = *(void *)(v95 + 24);
            if (v98 >= v97 >> 1)
            {
              unint64_t v95 = sub_21CA47FB4(v97 > 1, v98 + 1, 1, v95);
              *a3 = v95;
            }
            *(void *)(v95 + 16) = v98 + 1;
            uint64_t v85 = v120;
            uint64_t v84 = v95
                + ((*(unsigned __int8 *)(v119 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v119 + 80))
                + *(void *)(v119 + 72) * v98;
            goto LABEL_58;
          }
          goto LABEL_45;
        }
LABEL_44:
        sub_21CA57050(v91, (uint64_t (*)(void))type metadata accessor for FMFLocation);
LABEL_45:
        sub_21CA571E8((uint64_t)v46, v90, (uint64_t (*)(void))type metadata accessor for FMFLocation);
        if (v77 + a6 >= a7)
        {
          sub_21CA57050(v90, (uint64_t (*)(void))type metadata accessor for FMFLocation);
        }
        else
        {
          int v99 = *(unsigned __int8 *)(v90 + 33);
          sub_21CA57050(v90, (uint64_t (*)(void))type metadata accessor for FMFLocation);
          if (v99 == 2)
          {
            uint64_t v100 = v121;
            sub_21CA571E8((uint64_t)v46, v121, (uint64_t (*)(void))type metadata accessor for FMFLocation);
            uint64_t v101 = v123;
            uint64_t v102 = v123 + v89[8];
            uint64_t v103 = sub_21CB875D0();
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v103 - 8) + 56))(v102, 1, 1, v103);
            uint64_t v104 = *(void *)(v100 + 8);
            *(void *)uint64_t v101 = *(void *)v100;
            *(void *)(v101 + 8) = v104;
            *(unsigned char *)(v101 + 16) = *(unsigned char *)(v100 + 16);
            char v105 = *(unsigned char *)(v100 + 32);
            *(void *)(v101 + 24) = *(void *)(v100 + 24);
            *(unsigned char *)(v101 + 32) = v105;
            *(unsigned char *)(v101 + 33) = 1;
            uint64_t v106 = v100 + v89[8];
            swift_bridgeObjectRetain();
            sub_21CA5CD6C(v106, v102);
            *(unsigned char *)(v101 + v89[9]) = *(unsigned char *)(v100 + v89[9]);
            *(unsigned char *)(v101 + v89[10]) = *(unsigned char *)(v100 + v89[10]);
            sub_21CA26A4C(v100 + v89[11], (uint64_t)v135, &qword_267C951F0);
            sub_21CAC34E8((uint64_t)v135);
            sub_21CA57050(v100, (uint64_t (*)(void))type metadata accessor for FMFLocation);
            sub_21CA26A4C((uint64_t)v135, v101 + v89[11], &qword_267C951F0);
            uint64_t v107 = v101;
            uint64_t v108 = v122;
            sub_21CA571E8(v107, v122, (uint64_t (*)(void))type metadata accessor for FMFLocation);
            unint64_t v109 = *a3;
            char v110 = swift_isUniquelyReferenced_nonNull_native();
            *a3 = v109;
            if ((v110 & 1) == 0)
            {
              unint64_t v109 = sub_21CA47FB4(0, *(void *)(v109 + 16) + 1, 1, v109);
              *a3 = v109;
            }
            unint64_t v112 = *(void *)(v109 + 16);
            unint64_t v111 = *(void *)(v109 + 24);
            if (v112 >= v111 >> 1)
            {
              unint64_t v109 = sub_21CA47FB4(v111 > 1, v112 + 1, 1, v109);
              *a3 = v109;
            }
            *(void *)(v109 + 16) = v112 + 1;
            sub_21CA591A4(v108, v109+ ((*(unsigned __int8 *)(v119 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v119 + 80))+ *(void *)(v119 + 72) * v112, (uint64_t (*)(void))type metadata accessor for FMFLocation);

            sub_21CA57050(v123, (uint64_t (*)(void))type metadata accessor for FMFLocation);
            uint64_t v113 = v78;
            goto LABEL_59;
          }
        }
        sub_21CA571E8((uint64_t)v46, v127, (uint64_t (*)(void))type metadata accessor for FMFLocation);
        unint64_t v114 = *a3;
        char v115 = swift_isUniquelyReferenced_nonNull_native();
        *a3 = v114;
        if ((v115 & 1) == 0)
        {
          unint64_t v114 = sub_21CA47FB4(0, *(void *)(v114 + 16) + 1, 1, v114);
          *a3 = v114;
        }
        unint64_t v117 = *(void *)(v114 + 16);
        unint64_t v116 = *(void *)(v114 + 24);
        if (v117 >= v116 >> 1)
        {
          unint64_t v114 = sub_21CA47FB4(v116 > 1, v117 + 1, 1, v114);
          *a3 = v114;
        }
        *(void *)(v114 + 16) = v117 + 1;
        uint64_t v84 = v114
            + ((*(unsigned __int8 *)(v119 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v119 + 80))
            + *(void *)(v119 + 72) * v117;
        uint64_t v85 = v127;
LABEL_58:
        sub_21CA591A4(v85, v84, (uint64_t (*)(void))type metadata accessor for FMFLocation);

        uint64_t v113 = v78;
LABEL_59:
        sub_21CA57050(v113, (uint64_t (*)(void))type metadata accessor for FMFLocation);
        uint64_t v64 = (uint64_t)v46;
        return sub_21CA57050(v64, (uint64_t (*)(void))type metadata accessor for FMFLocation);
      }
    }
    sub_21CA57050(v88, (uint64_t (*)(void))type metadata accessor for FMFLocation);
    sub_21CA571E8((uint64_t)v46, v91, (uint64_t (*)(void))type metadata accessor for FMFLocation);
    goto LABEL_44;
  }
  sub_21CA1B88C((uint64_t)v18, (uint64_t *)&unk_267C96EF0);
LABEL_21:
  uint64_t v59 = (uint64_t)v134;
  sub_21CA571E8((uint64_t)v46, (uint64_t)v134, (uint64_t (*)(void))type metadata accessor for FMFLocation);
  unint64_t v60 = *a3;
  char v61 = swift_isUniquelyReferenced_nonNull_native();
  *a3 = v60;
  if ((v61 & 1) == 0)
  {
    unint64_t v60 = sub_21CA47FB4(0, *(void *)(v60 + 16) + 1, 1, v60);
    *a3 = v60;
  }
  unint64_t v63 = *(void *)(v60 + 16);
  unint64_t v62 = *(void *)(v60 + 24);
  if (v63 >= v62 >> 1)
  {
    unint64_t v60 = sub_21CA47FB4(v62 > 1, v63 + 1, 1, v60);
    *a3 = v60;
  }
  *(void *)(v60 + 16) = v63 + 1;
  sub_21CA591A4(v59, v60+ ((*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80))+ *(void *)(v19 + 72) * v63, (uint64_t (*)(void))type metadata accessor for FMFLocation);
  uint64_t v64 = (uint64_t)v46;
  return sub_21CA57050(v64, (uint64_t (*)(void))type metadata accessor for FMFLocation);
}

uint64_t sub_21CA47FB4(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_21CA4826C(a1, a2, a3, a4, &qword_267C95250, (uint64_t (*)(void))type metadata accessor for FMFLocation, (uint64_t (*)(void))type metadata accessor for FMFLocation);
}

uint64_t sub_21CA47FE8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_21CA48024(a1, a2, a3, (void *)*v3, &qword_267C95260, (uint64_t (*)(void))type metadata accessor for FMFFriend);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_21CA48024(char a1, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t (*a6)(void))
{
  if (a3)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = a4[2];
  if (v10 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = v10;
  }
  if (!v12)
  {
    uint64_t v16 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_19;
  }
  sub_21CA57E34(a5);
  uint64_t v13 = *(void *)(a6(0) - 8);
  uint64_t v14 = *(void *)(v13 + 72);
  unint64_t v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v16 = (void *)swift_allocObject();
  size_t v17 = j__malloc_size(v16);
  if (!v14)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v17 - v15 == 0x8000000000000000 && v14 == -1) {
    goto LABEL_34;
  }
  v16[2] = v11;
  id v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  uint64_t v19 = *(void *)(a6(0) - 8);
  unint64_t v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  uint64_t v21 = (char *)v16 + v20;
  uint64_t v22 = (char *)a4 + v20;
  if (a1)
  {
    if (v16 < a4 || v21 >= &v22[*(void *)(v19 + 72) * v11])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v23 = *(void *)(v19 + 72) * v11;
  uint64_t v24 = &v21[v23];
  unint64_t v25 = (unint64_t)&v22[v23];
  if (v22 >= v24 || (unint64_t)v21 >= v25)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v16;
  }
LABEL_36:
  uint64_t result = sub_21CB88D50();
  __break(1u);
  return result;
}

uint64_t sub_21CA4826C(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t (*a6)(void), uint64_t (*a7)(void))
{
  if (a3)
  {
    unint64_t v11 = *(void *)(a4 + 24);
    uint64_t v12 = v11 >> 1;
    if ((uint64_t)(v11 >> 1) < a2)
    {
      if (v12 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v12 = v11 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v11 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v12 = a2;
      }
    }
  }
  else
  {
    uint64_t v12 = a2;
  }
  uint64_t v13 = *(void *)(a4 + 16);
  if (v12 <= v13) {
    uint64_t v14 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v14 = v12;
  }
  if (!v14)
  {
    uint64_t v18 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_19;
  }
  sub_21CA57E34(a5);
  uint64_t v15 = *(void *)(a6(0) - 8);
  uint64_t v16 = *(void *)(v15 + 72);
  unint64_t v17 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  uint64_t v18 = (void *)swift_allocObject();
  size_t v19 = j__malloc_size(v18);
  if (!v16 || (v19 - v17 == 0x8000000000000000 ? (BOOL v20 = v16 == -1) : (BOOL v20 = 0), v20))
  {
LABEL_29:
    uint64_t result = sub_21CB88CF0();
    __break(1u);
    return result;
  }
  void v18[2] = v13;
  v18[3] = 2 * ((uint64_t)(v19 - v17) / v16);
LABEL_19:
  uint64_t v21 = *(void *)(a6(0) - 8);
  unint64_t v22 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  unint64_t v23 = (unint64_t)v18 + v22;
  if (a1)
  {
    if ((unint64_t)v18 < a4 || v23 >= a4 + v22 + *(void *)(v21 + 72) * v13)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v18 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_21CA48724(0, v13, v23, a4, a7);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v18;
}

unint64_t sub_21CA484EC(unint64_t result, uint64_t a2, uint64_t (*a3)(void))
{
  int64_t v4 = result;
  uint64_t v5 = a2 + 64;
  uint64_t v6 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v7 = (result + 1) & ~v6;
  if (((1 << v7) & *(void *)(a2 + 64 + 8 * (v7 >> 6))) != 0)
  {
    uint64_t v9 = ~v6;
    uint64_t result = sub_21CB88A70();
    if ((*(void *)(v5 + 8 * (v7 >> 6)) & (1 << v7)) != 0)
    {
      unint64_t v10 = (result + 1) & v9;
      while (1)
      {
        sub_21CB89050();
        swift_bridgeObjectRetain();
        sub_21CB88380();
        uint64_t v11 = sub_21CB89090();
        uint64_t result = swift_bridgeObjectRelease();
        unint64_t v12 = v11 & v9;
        if (v4 >= (uint64_t)v10) {
          break;
        }
        if (v12 < v10) {
          goto LABEL_11;
        }
LABEL_12:
        uint64_t v13 = *(void *)(a2 + 48);
        uint64_t v14 = (_OWORD *)(v13 + 16 * v4);
        uint64_t v15 = (_OWORD *)(v13 + 16 * v7);
        if (v4 != v7 || v14 >= v15 + 1) {
          *uint64_t v14 = *v15;
        }
        uint64_t v16 = *(void *)(a2 + 56);
        uint64_t v17 = *(void *)(*(void *)(a3(0) - 8) + 72);
        int64_t v18 = v17 * v4;
        uint64_t result = v16 + v17 * v4;
        int64_t v19 = v17 * v7;
        unint64_t v20 = v16 + v17 * v7 + v17;
        if (v18 < v19 || result >= v20)
        {
          uint64_t result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          int64_t v4 = v7;
          if (v18 == v19) {
            goto LABEL_6;
          }
          uint64_t result = swift_arrayInitWithTakeBackToFront();
        }
        int64_t v4 = v7;
LABEL_6:
        unint64_t v7 = (v7 + 1) & v9;
        if (((*(void *)(v5 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) == 0) {
          goto LABEL_21;
        }
      }
      if (v12 < v10) {
        goto LABEL_6;
      }
LABEL_11:
      if (v4 < (uint64_t)v12) {
        goto LABEL_6;
      }
      goto LABEL_12;
    }
LABEL_21:
    unint64_t v22 = (uint64_t *)(v5 + 8 * ((unint64_t)v4 >> 6));
    uint64_t v23 = *v22;
    uint64_t v24 = (-1 << v4) - 1;
  }
  else
  {
    unint64_t v22 = (uint64_t *)(v5 + 8 * (result >> 6));
    uint64_t v24 = *v22;
    uint64_t v23 = (-1 << result) - 1;
  }
  *unint64_t v22 = v24 & v23;
  uint64_t v25 = *(void *)(a2 + 16);
  BOOL v26 = __OFSUB__(v25, 1);
  uint64_t v27 = v25 - 1;
  if (v26)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v27;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_21CA4870C(unint64_t a1, uint64_t a2)
{
  return sub_21CA484EC(a1, a2, (uint64_t (*)(void))type metadata accessor for FMFLocation);
}

uint64_t sub_21CA48724(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    uint64_t v9 = *(void *)(a5(0) - 8);
    uint64_t v10 = a4 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v11 = *(void *)(v9 + 72);
    unint64_t v12 = v10 + v11 * a1;
    unint64_t v13 = a3 + v11 * v5;
    if (v12 >= v13 || v12 + v11 * v5 <= a3)
    {
      swift_arrayInitWithCopy();
      return v13;
    }
  }
  uint64_t result = sub_21CB88D50();
  __break(1u);
  return result;
}

uint64_t sub_21CA48880(uint64_t a1, uint64_t a2)
{
  return sub_21CA2DEE4(a1, a2, (uint64_t (*)(void))type metadata accessor for FMFLocation, (uint64_t (*)(void))type metadata accessor for FMFLocation, (uint64_t (*)(char *, char *))_s7FMFCore11FMFLocationV2eeoiySbAC_ACtFZ_0);
}

uint64_t sub_21CA488C0(uint64_t a1)
{
  uint64_t v4 = type metadata accessor for FMFLocation();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v79 = (uint64_t)&v66 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_21CA57E34((uint64_t *)&unk_267C96EF0);
  uint64_t v8 = MEMORY[0x270FA5388](v7 - 8);
  uint64_t v80 = (uint64_t)&v66 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v78 = (uint64_t)&v66 - v11;
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v66 - v13;
  uint64_t v15 = *(void *)(a1 + 16);
  unint64_t v16 = *v1;
  int64_t v17 = *(void *)(*v1 + 16);
  int64_t v18 = v17 + v15;
  if (__OFADD__(v17, v15))
  {
    __break(1u);
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  uint64_t v2 = v5;
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v1 = v16;
  uint64_t v81 = v4;
  if (!isUniquelyReferenced_nonNull_native || (int64_t v20 = *(void *)(v16 + 24) >> 1, v20 < v18))
  {
    if (v17 <= v18) {
      int64_t v21 = v17 + v15;
    }
    else {
      int64_t v21 = v17;
    }
    unint64_t v16 = sub_21CA47FB4(isUniquelyReferenced_nonNull_native, v21, 1, v16);
    *uint64_t v1 = v16;
    int64_t v20 = *(void *)(v16 + 24) >> 1;
  }
  uint64_t v22 = *(void *)(v16 + 16);
  int64_t v17 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  int64_t v18 = *(void *)(v5 + 72);
  int64_t v23 = v20 - v22;
  uint64_t v24 = sub_21CA49494(&v82, v16 + v17 + v18 * v22, v20 - v22, a1);
  if (v24 < v15) {
    goto LABEL_17;
  }
  if (v24)
  {
    uint64_t v26 = *(void *)(v16 + 16);
    BOOL v27 = __OFADD__(v26, v24);
    uint64_t v28 = v26 + v24;
    if (v27)
    {
      __break(1u);
      goto LABEL_22;
    }
    *(void *)(v16 + 16) = v28;
  }
  if (v24 == v23)
  {
LABEL_18:
    int64_t v68 = *(void *)(v16 + 16);
    uint64_t v25 = v82;
    int64_t v23 = v85;
    uint64_t v76 = v83;
    uint64_t v77 = v84;
    if (v86)
    {
      unint64_t v75 = (v86 - 1) & v86;
      unint64_t v30 = __clz(__rbit64(v86)) | (v85 << 6);
      uint64_t v31 = v81;
LABEL_20:
      uint64_t v32 = v25;
      sub_21CA3D574(*(void *)(v25 + 56) + v30 * v18, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for FMFLocation);
      uint64_t v70 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v2 + 56);
      v70(v14, 0, 1, v31);
      uint64_t v15 = v23;
      goto LABEL_44;
    }
LABEL_22:
    int64_t v33 = v23 + 1;
    uint64_t v31 = v81;
    if (__OFADD__(v23, 1))
    {
      __break(1u);
LABEL_42:
      uint64_t v31 = v81;
      uint64_t v25 = v12;
    }
    else
    {
      int64_t v34 = (unint64_t)(v77 + 64) >> 6;
      uint64_t v15 = v23;
      if (v33 < v34)
      {
        unint64_t v35 = *(void *)(v76 + 8 * v33);
        if (v35)
        {
LABEL_25:
          unint64_t v75 = (v35 - 1) & v35;
          unint64_t v30 = __clz(__rbit64(v35)) + (v33 << 6);
          int64_t v23 = v33;
          goto LABEL_20;
        }
        int64_t v36 = v23 + 2;
        uint64_t v15 = v23 + 1;
        if (v23 + 2 < v34)
        {
          uint64_t v12 = v25;
          unint64_t v35 = *(void *)(v76 + 8 * v36);
          if (v35)
          {
LABEL_28:
            int64_t v33 = v36;
LABEL_29:
            uint64_t v31 = v81;
            goto LABEL_25;
          }
          uint64_t v15 = v23 + 2;
          uint64_t v31 = v81;
          if (v23 + 3 < v34)
          {
            unint64_t v35 = *(void *)(v76 + 8 * (v23 + 3));
            if (v35)
            {
              int64_t v33 = v23 + 3;
              goto LABEL_29;
            }
            int64_t v36 = v23 + 4;
            uint64_t v15 = v23 + 3;
            uint64_t v31 = v81;
            if (v23 + 4 < v34)
            {
              unint64_t v35 = *(void *)(v76 + 8 * v36);
              if (v35) {
                goto LABEL_28;
              }
              int64_t v33 = v23 + 5;
              uint64_t v15 = v23 + 4;
              uint64_t v31 = v81;
              if (v23 + 5 < v34)
              {
                unint64_t v35 = *(void *)(v76 + 8 * v33);
                if (v35) {
                  goto LABEL_25;
                }
                uint64_t v15 = v34 - 1;
                int64_t v37 = v23 + 6;
                do
                {
                  if (v34 == v37) {
                    goto LABEL_42;
                  }
                  unint64_t v35 = *(void *)(v76 + 8 * v37++);
                }
                while (!v35);
                int64_t v33 = v37 - 1;
                goto LABEL_29;
              }
            }
          }
        }
      }
    }
    uint64_t v32 = v25;
    uint64_t v70 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v2 + 56);
    v70(v14, 1, 1, v31);
    unint64_t v75 = 0;
LABEL_44:
    uint64_t v38 = v32;
    uint64_t v82 = v32;
    uint64_t v83 = v76;
    uint64_t v84 = v77;
    int64_t v85 = v15;
    uint64_t v71 = v15;
    unint64_t v86 = v75;
    uint64_t v39 = v78;
    sub_21CA24E80((uint64_t)v14, v78, (uint64_t *)&unk_267C96EF0);
    uint64_t v74 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48);
    if (v74(v39, 1, v31) == 1)
    {
      uint64_t v40 = v78;
LABEL_46:
      sub_21CA1B88C((uint64_t)v14, (uint64_t *)&unk_267C96EF0);
      sub_21CA7CFF0();
      return sub_21CA1B88C(v40, (uint64_t *)&unk_267C96EF0);
    }
    uint64_t v69 = v5 + 56;
    uint64_t v40 = v78;
    int64_t v41 = v68;
    while (1)
    {
      uint64_t v67 = v38;
      sub_21CA1B88C(v40, (uint64_t *)&unk_267C96EF0);
      unint64_t v42 = *v1;
      unint64_t v43 = *(void *)(*v1 + 24);
      int64_t v44 = v43 >> 1;
      int64_t v68 = v41;
      if ((uint64_t)(v43 >> 1) < v41 + 1)
      {
        unint64_t v42 = sub_21CA47FB4(v43 > 1, v41 + 1, 1, v42);
        *uint64_t v1 = v42;
        int64_t v44 = *(void *)(v42 + 24) >> 1;
      }
      uint64_t v45 = v80;
      sub_21CA24E80((uint64_t)v14, v80, (uint64_t *)&unk_267C96EF0);
      if (v74(v45, 1, v81) == 1)
      {
        uint64_t v46 = v45;
        uint64_t v38 = v67;
        int64_t v41 = v68;
LABEL_87:
        sub_21CA1B88C(v46, (uint64_t *)&unk_267C96EF0);
        uint64_t v40 = v78;
        goto LABEL_49;
      }
      unint64_t v72 = v42 + v17;
      uint64_t v47 = v79;
      sub_21CA7CFF8(v45, v79);
      uint64_t v38 = v67;
      BOOL v48 = v68 < v44;
      int64_t v49 = v68 <= v44 ? v44 : v68;
      int64_t v73 = v49;
      uint64_t v50 = v47;
      int64_t v51 = v68;
      if (v48) {
        break;
      }
LABEL_48:
      sub_21CA56F30(v50, (uint64_t (*)(void))type metadata accessor for FMFLocation);
      int64_t v41 = v73;
      uint64_t v40 = v78;
LABEL_49:
      *(void *)(*v1 + 16) = v41;
      sub_21CA24E80((uint64_t)v14, v40, (uint64_t *)&unk_267C96EF0);
      if (v74(v40, 1, v81) == 1) {
        goto LABEL_46;
      }
    }
    while (1)
    {
      sub_21CA1B88C((uint64_t)v14, (uint64_t *)&unk_267C96EF0);
      uint64_t result = sub_21CA7CFF8(v50, v72 + v51 * v18);
      uint64_t v52 = v82;
      int64_t v53 = v85;
      uint64_t v76 = v83;
      uint64_t v77 = v84;
      if (v86) {
        break;
      }
      int64_t v58 = v85 + 1;
      if (__OFADD__(v85, 1))
      {
        __break(1u);
        return result;
      }
      int64_t v59 = (unint64_t)(v77 + 64) >> 6;
      int64_t v60 = v85;
      if (v58 < v59)
      {
        unint64_t v61 = *(void *)(v76 + 8 * v58);
        if (v61) {
          goto LABEL_65;
        }
        int64_t v60 = v85 + 1;
        if (v85 + 2 < v59)
        {
          unint64_t v61 = *(void *)(v76 + 8 * (v85 + 2));
          if (v61)
          {
            int64_t v58 = v85 + 2;
            goto LABEL_65;
          }
          int64_t v60 = v85 + 2;
          if (v85 + 3 < v59)
          {
            unint64_t v61 = *(void *)(v76 + 8 * (v85 + 3));
            if (v61)
            {
              int64_t v58 = v85 + 3;
              goto LABEL_65;
            }
            int64_t v60 = v85 + 3;
            if (v85 + 4 < v59)
            {
              unint64_t v61 = *(void *)(v76 + 8 * (v85 + 4));
              if (v61)
              {
                int64_t v58 = v85 + 4;
LABEL_65:
                uint64_t v54 = v51;
                unint64_t v75 = (v61 - 1) & v61;
                unint64_t v55 = __clz(__rbit64(v61)) + (v58 << 6);
                int64_t v53 = v58;
LABEL_61:
                sub_21CA3D574(*(void *)(v82 + 56) + v55 * v18, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for FMFLocation);
                uint64_t v56 = v81;
                v70(v14, 0, 1, v81);
                int64_t v57 = v53;
                uint64_t v50 = v79;
                goto LABEL_83;
              }
              int64_t v58 = v85 + 5;
              int64_t v60 = v85 + 4;
              uint64_t v50 = v79;
              if (v85 + 5 < v59)
              {
                unint64_t v61 = *(void *)(v76 + 8 * v58);
                if (v61) {
                  goto LABEL_65;
                }
                int64_t v62 = v85 + 6;
                while (v59 != v62)
                {
                  unint64_t v61 = *(void *)(v76 + 8 * v62++);
                  if (v61)
                  {
                    int64_t v58 = v62 - 1;
                    goto LABEL_65;
                  }
                }
                uint64_t v50 = v79;
                int64_t v60 = v59 - 1;
              }
            }
          }
        }
      }
      uint64_t v54 = v51;
      uint64_t v56 = v81;
      int64_t v63 = v60;
      v70(v14, 1, 1, v81);
      int64_t v57 = v63;
      unint64_t v75 = 0;
LABEL_83:
      uint64_t v64 = v54 + 1;
      uint64_t v38 = v52;
      uint64_t v82 = v52;
      uint64_t v83 = v76;
      uint64_t v84 = v77;
      int64_t v85 = v57;
      uint64_t v71 = v57;
      unint64_t v86 = v75;
      uint64_t v65 = v80;
      sub_21CA24E80((uint64_t)v14, v80, (uint64_t *)&unk_267C96EF0);
      if (v74(v65, 1, v56) == 1)
      {
        int64_t v41 = v64;
        uint64_t v46 = v65;
        goto LABEL_87;
      }
      sub_21CA7CFF8(v65, v50);
      int64_t v51 = v64;
      if (v64 == v73) {
        goto LABEL_48;
      }
    }
    uint64_t v54 = v51;
    unint64_t v75 = (v86 - 1) & v86;
    unint64_t v55 = __clz(__rbit64(v86)) | (v85 << 6);
    goto LABEL_61;
  }

  return sub_21CA7CFF0();
}

uint64_t sub_21CA4918C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void), uint64_t (*a6)(void))
{
  uint64_t v11 = a5(0);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v11 - 8);
  uint64_t v15 = (char *)&v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = MEMORY[0x270FA5388](v13);
  int64_t v18 = (char *)&v32 - v17;
  uint64_t v37 = a4;
  uint64_t v20 = a4 + 64;
  uint64_t v19 = *(void *)(a4 + 64);
  uint64_t v34 = -1 << *(unsigned char *)(a4 + 32);
  if (-v34 < 64) {
    uint64_t v21 = ~(-1 << -(char)v34);
  }
  else {
    uint64_t v21 = -1;
  }
  unint64_t v22 = v21 & v19;
  if (!a2)
  {
    int64_t v23 = 0;
    a3 = 0;
LABEL_34:
    uint64_t v31 = ~v34;
    *a1 = v37;
    a1[1] = v20;
    a1[2] = v31;
    a1[3] = v23;
    a1[4] = v22;
    return a3;
  }
  if (!a3)
  {
    int64_t v23 = 0;
    goto LABEL_34;
  }
  if (a3 < 0)
  {
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  int64_t v33 = a1;
  int64_t v23 = 0;
  uint64_t v24 = 0;
  uint64_t v35 = v20;
  int64_t v36 = (unint64_t)(63 - v34) >> 6;
  int64_t v32 = v36 - 1;
  if (!v22) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v25 = __clz(__rbit64(v22));
  v22 &= v22 - 1;
  unint64_t v26 = v25 | (v23 << 6);
  while (1)
  {
    ++v24;
    uint64_t v30 = *(void *)(v12 + 72);
    sub_21CA570B0(*(void *)(v37 + 56) + v30 * v26, (uint64_t)v15, a6);
    sub_21CA590D4((uint64_t)v15, (uint64_t)v18, a6);
    uint64_t result = sub_21CA590D4((uint64_t)v18, a2, a6);
    if (v24 == a3) {
      goto LABEL_33;
    }
    a2 += v30;
    if (v22) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v27 = v23 + 1;
    if (__OFADD__(v23, 1))
    {
      __break(1u);
      goto LABEL_41;
    }
    if (v27 >= v36)
    {
      unint64_t v22 = 0;
      a3 = v24;
LABEL_33:
      a1 = v33;
      uint64_t v20 = v35;
      goto LABEL_34;
    }
    uint64_t v20 = v35;
    unint64_t v28 = *(void *)(v35 + 8 * v27);
    if (!v28) {
      break;
    }
LABEL_18:
    unint64_t v22 = (v28 - 1) & v28;
    unint64_t v26 = __clz(__rbit64(v28)) + (v27 << 6);
    int64_t v23 = v27;
  }
  v23 += 2;
  if (v27 + 1 >= v36)
  {
    unint64_t v22 = 0;
    int64_t v23 = v27;
LABEL_39:
    a3 = v24;
    a1 = v33;
    goto LABEL_34;
  }
  unint64_t v28 = *(void *)(v35 + 8 * v23);
  if (v28) {
    goto LABEL_14;
  }
  int64_t v29 = v27 + 2;
  if (v27 + 2 >= v36) {
    goto LABEL_36;
  }
  unint64_t v28 = *(void *)(v35 + 8 * v29);
  if (v28) {
    goto LABEL_17;
  }
  int64_t v23 = v27 + 3;
  if (v27 + 3 >= v36)
  {
    unint64_t v22 = 0;
    int64_t v23 = v27 + 2;
    goto LABEL_39;
  }
  unint64_t v28 = *(void *)(v35 + 8 * v23);
  if (v28)
  {
LABEL_14:
    int64_t v27 = v23;
    goto LABEL_18;
  }
  int64_t v29 = v27 + 4;
  if (v27 + 4 >= v36)
  {
LABEL_36:
    unint64_t v22 = 0;
    goto LABEL_39;
  }
  unint64_t v28 = *(void *)(v35 + 8 * v29);
  if (v28)
  {
LABEL_17:
    int64_t v27 = v29;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v27 = v29 + 1;
    if (__OFADD__(v29, 1)) {
      break;
    }
    if (v27 >= v36)
    {
      unint64_t v22 = 0;
      int64_t v23 = v32;
      goto LABEL_39;
    }
    unint64_t v28 = *(void *)(v35 + 8 * v27);
    ++v29;
    if (v28) {
      goto LABEL_18;
    }
  }
LABEL_42:
  __break(1u);
  return result;
}

uint64_t sub_21CA49494(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21CA4918C(a1, a2, a3, a4, (uint64_t (*)(void))type metadata accessor for FMFLocation, (uint64_t (*)(void))type metadata accessor for FMFLocation);
}

uint64_t sub_21CA494B0(void *a1)
{
  return sub_21CA49CC0(a1);
}

uint64_t sub_21CA494C8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v50 = a2;
  uint64_t v4 = sub_21CA57E34((uint64_t *)&unk_267C951B0);
  MEMORY[0x270FA5388](v4 - 8);
  BOOL v48 = (char *)&v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = sub_21CA57E34(&qword_267C95118);
  uint64_t v49 = *(void *)(v51 - 8);
  MEMORY[0x270FA5388](v51);
  uint64_t v7 = (char *)&v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for FMFIntermediateFriend();
  uint64_t v9 = MEMORY[0x270FA5388](v8);
  uint64_t v11 = (uint64_t *)((char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = *(int *)(v9 + 64);
  *((unsigned char *)v11 + v12) = 2;
  sub_21CA2B2CC(a1, a1[3]);
  sub_21CA4A560();
  sub_21CB890B0();
  if (v2) {
    return sub_21CA2B0D0((uint64_t)a1);
  }
  uint64_t v46 = (int *)v8;
  uint64_t v14 = v49;
  uint64_t v13 = v50;
  LOBYTE(v53) = 0;
  uint64_t v15 = v51;
  *uint64_t v11 = sub_21CB88DE0();
  v11[1] = v17;
  LOBYTE(v53) = 1;
  uint64_t v47 = v7;
  uint64_t v18 = sub_21CB88DE0();
  uint64_t v45 = a1;
  void v11[2] = v18;
  v11[3] = v19;
  sub_21CA57E34(&qword_267C94E60);
  char v52 = 2;
  sub_21CA4A500((unint64_t *)&qword_267C94E68, &qword_267C94E60);
  uint64_t v20 = v15;
  sub_21CB88E20();
  uint64_t v21 = v12;
  unint64_t v22 = v11;
  v11[4] = v53;
  char v52 = 3;
  sub_21CB88E20();
  int64_t v23 = v46;
  v22[5] = v53;
  LOBYTE(v53) = 4;
  v22[6] = sub_21CB88DE0();
  v22[7] = v24;
  LOBYTE(v53) = 5;
  v22[8] = sub_21CB88DE0();
  v22[9] = v25;
  LOBYTE(v53) = 9;
  *((unsigned char *)v22 + v23[13]) = sub_21CB88DF0() & 1;
  LOBYTE(v53) = 10;
  *((unsigned char *)v22 + v23[14]) = sub_21CB88DF0() & 1;
  LOBYTE(v53) = 11;
  *((unsigned char *)v22 + v23[15]) = sub_21CB88DF0() & 1;
  LOBYTE(v53) = 12;
  *((unsigned char *)v22 + v21) = sub_21CB88DF0() & 1;
  char v52 = 13;
  sub_21CB88E20();
  uint64_t v26 = v13;
  *(uint64_t *)((char *)v22 + v23[17]) = v53;
  LOBYTE(v53) = 7;
  uint64_t v27 = sub_21CB88E30();
  uint64_t v28 = (uint64_t)v48;
  int64_t v29 = (char *)v22 + v23[11];
  id v30 = objc_msgSend(self, sel_fm_dateFromEpoch_, v27, v45);
  sub_21CB87560();

  uint64_t v31 = sub_21CB87590();
  int64_t v32 = v29;
  int64_t v33 = v46;
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v32, 0, 1, v31);
  LOBYTE(v53) = 8;
  uint64_t v34 = sub_21CB88E30();
  if (v34 < 1)
  {
    uint64_t v35 = (char *)v22 + v33[12];
    uint64_t v36 = sub_21CB87590();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(v35, 1, 1, v36);
  }
  else
  {
    uint64_t v37 = (char *)v22 + v33[12];
    id v38 = objc_msgSend(self, sel_fm_dateFromEpoch_, v34);
    sub_21CB87560();

    uint64_t v39 = sub_21CB87590();
    uint64_t v40 = v37;
    int64_t v33 = v46;
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56))(v40, 0, 1, v39);
  }
  LOBYTE(v53) = 6;
  int64_t v41 = v47;
  uint64_t v42 = sub_21CB88E30();
  id v43 = objc_msgSend(self, sel_fm_dateFromEpoch_, v42);
  sub_21CB87560();

  (*(void (**)(char *, uint64_t))(v14 + 8))(v41, v20);
  uint64_t v44 = sub_21CB87590();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v44 - 8) + 56))(v28, 0, 1, v44);
  sub_21CA4A6E4(v28, (uint64_t)v22 + v33[10]);
  sub_21CA4BF50((uint64_t)v22, v26);
  sub_21CA2B0D0((uint64_t)v45);
  return sub_21CA4BEF4((uint64_t)v22);
}

uint64_t sub_21CA49CC0(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v41 = sub_21CA57E34((uint64_t *)&unk_267C951B0);
  uint64_t v4 = MEMORY[0x270FA5388](v41);
  uint64_t v6 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v36 - v7;
  uint64_t v9 = sub_21CA57E34(&qword_267C95128);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21CA2B2CC(a1, a1[3]);
  sub_21CA4A560();
  sub_21CB890C0();
  LOBYTE(v44) = 0;
  uint64_t v13 = v42;
  sub_21CB88E70();
  if (v13) {
    return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
  uint64_t v39 = v8;
  uint64_t v40 = v6;
  uint64_t v42 = v10;
  long long v44 = *(_OWORD *)(v2 + 16);
  char v43 = 1;
  sub_21CA57E34((uint64_t *)&unk_267C95220);
  sub_21CA4A500((unint64_t *)&qword_267C94A70, (uint64_t *)&unk_267C95220);
  sub_21CB88EB0();
  uint64_t v15 = v9;
  unint64_t v16 = v12;
  *(void *)&long long v44 = *(void *)(v2 + 32);
  char v43 = 2;
  uint64_t v17 = sub_21CA57E34(&qword_267C95130);
  unint64_t v18 = sub_21CA4A5B4();
  sub_21CB88EB0();
  *(void *)&long long v44 = *(void *)(v2 + 40);
  char v43 = 3;
  sub_21CB88EB0();
  unint64_t v38 = v18;
  long long v44 = *(_OWORD *)(v2 + 48);
  char v43 = 4;
  sub_21CB88EB0();
  long long v44 = *(_OWORD *)(v2 + 64);
  char v43 = 5;
  sub_21CB88EB0();
  uint64_t v37 = (int *)type metadata accessor for FMFIntermediateFriend();
  uint64_t v19 = (uint64_t)v39;
  sub_21CA4BFB4(v2 + v37[10], (uint64_t)v39);
  uint64_t v20 = sub_21CB87590();
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v36 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v21 + 48);
  if (v36(v19, 1, v20) == 1)
  {
    sub_21CA1B88C(v19, (uint64_t *)&unk_267C951B0);
    uint64_t v22 = (uint64_t)v40;
  }
  else
  {
    sub_21CB87550();
    double v24 = v23;
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v19, v20);
    double v25 = v24 * 1000.0;
    BOOL v26 = v24 * 1000.0 > -9.22337204e18;
    if (v24 * 1000.0 >= 9.22337204e18) {
      BOOL v26 = 0;
    }
    int v27 = v26 & (v25 == trunc(v25));
    if (v27) {
      uint64_t v28 = (uint64_t)v25;
    }
    else {
      uint64_t v28 = 0;
    }
    *(void *)&long long v44 = v28;
    BYTE8(v44) = (v27 & 1) == 0;
    char v43 = 6;
    sub_21CA57E34(&qword_267C95168);
    sub_21CA4A500(&qword_267C95170, &qword_267C95168);
    sub_21CB88EB0();
    uint64_t v22 = (uint64_t)v40;
  }
  sub_21CA4BFB4(v2 + v37[11], v22);
  if (v36(v22, 1, v20) == 1)
  {
    sub_21CA1B88C(v22, (uint64_t *)&unk_267C951B0);
  }
  else
  {
    sub_21CB87550();
    double v30 = v29;
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v22, v20);
    double v31 = v30 * 1000.0;
    BOOL v32 = v30 * 1000.0 > -9.22337204e18;
    if (v30 * 1000.0 >= 9.22337204e18) {
      BOOL v32 = 0;
    }
    int v33 = v32 & (v31 == trunc(v31));
    if (v33) {
      uint64_t v34 = (uint64_t)v31;
    }
    else {
      uint64_t v34 = 0;
    }
    *(void *)&long long v44 = v34;
    BYTE8(v44) = (v33 & 1) == 0;
    char v43 = 7;
    sub_21CA57E34(&qword_267C95168);
    sub_21CA4A500(&qword_267C95170, &qword_267C95168);
    sub_21CB88EB0();
  }
  uint64_t v35 = v37;
  LOBYTE(v44) = 8;
  sub_21CA4A654();
  sub_21CB88EB0();
  uint64_t v41 = v17;
  LOBYTE(v44) = *(unsigned char *)(v2 + v35[13]);
  char v43 = 9;
  sub_21CA57E34(&qword_267C95158);
  sub_21CA4A500(&qword_267C95160, &qword_267C95158);
  sub_21CB88EB0();
  LOBYTE(v44) = *(unsigned char *)(v2 + v35[14]);
  char v43 = 10;
  sub_21CB88EB0();
  LOBYTE(v44) = *(unsigned char *)(v2 + v35[15]);
  char v43 = 11;
  sub_21CB88EB0();
  LOBYTE(v44) = *(unsigned char *)(v2 + v37[16]);
  char v43 = 12;
  sub_21CB88EB0();
  *(void *)&long long v44 = *(void *)(v2 + v37[17]);
  char v43 = 13;
  sub_21CB88EB0();
  return (*(uint64_t (**)(char *, uint64_t))(v42 + 8))(v16, v15);
}

uint64_t sub_21CA4A500(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_21CA5EEBC(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_21CA4A560()
{
  unint64_t result = qword_267C95120;
  if (!qword_267C95120)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C95120);
  }
  return result;
}

unint64_t sub_21CA4A5B4()
{
  unint64_t result = qword_267C95138;
  if (!qword_267C95138)
  {
    sub_21CA5EEBC(&qword_267C95130);
    sub_21CA4A500(&qword_267C95140, &qword_267C94E60);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C95138);
  }
  return result;
}

unint64_t sub_21CA4A654()
{
  unint64_t result = qword_267C95148;
  if (!qword_267C95148)
  {
    sub_21CA5EEBC((uint64_t *)&unk_267C951B0);
    sub_21CA4C0E4(&qword_267C95150);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C95148);
  }
  return result;
}

uint64_t sub_21CA4A6E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_21CA57E34((uint64_t *)&unk_267C951B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_21CA4A74C(void *a1, void *a2)
{
  uint64_t v173 = sub_21CB87590();
  uint64_t v172 = *(void *)(v173 - 8);
  MEMORY[0x270FA5388](v173);
  uint64_t v168 = (char *)&v164 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_21CA57E34((uint64_t *)&unk_267C951B0);
  uint64_t v6 = MEMORY[0x270FA5388](v5 - 8);
  uint64_t v165 = (char *)&v164 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v166 = (char *)&v164 - v9;
  MEMORY[0x270FA5388](v8);
  uint64_t v170 = (char *)&v164 - v10;
  uint64_t v171 = sub_21CA57E34(&qword_267C95108);
  uint64_t v11 = MEMORY[0x270FA5388](v171);
  uint64_t v167 = (uint64_t)&v164 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v169 = (uint64_t)&v164 - v14;
  MEMORY[0x270FA5388](v13);
  uint64_t v174 = (uint64_t)&v164 - v15;
  uint64_t v16 = type metadata accessor for FMFIntermediateFriend();
  uint64_t v17 = MEMORY[0x270FA5388](v16);
  uint64_t v181 = (uint64_t)&v164 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  uint64_t v182 = (uint64_t)&v164 - v20;
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  uint64_t v180 = (uint64_t)&v164 - v22;
  uint64_t v23 = MEMORY[0x270FA5388](v21);
  uint64_t v183 = (uint64_t)&v164 - v24;
  uint64_t v25 = MEMORY[0x270FA5388](v23);
  v178 = (char *)&v164 - v26;
  uint64_t v27 = MEMORY[0x270FA5388](v25);
  uint64_t v177 = (char *)&v164 - v28;
  uint64_t v29 = MEMORY[0x270FA5388](v27);
  unint64_t v176 = (char *)&v164 - v30;
  uint64_t v31 = MEMORY[0x270FA5388](v29);
  unint64_t v175 = (char *)&v164 - v32;
  uint64_t v33 = MEMORY[0x270FA5388](v31);
  unint64_t v187 = (char *)&v164 - v34;
  uint64_t v35 = MEMORY[0x270FA5388](v33);
  uint64_t v190 = (uint64_t)&v164 - v36;
  uint64_t v37 = MEMORY[0x270FA5388](v35);
  uint64_t v184 = (uint64_t)&v164 - v38;
  uint64_t v39 = MEMORY[0x270FA5388](v37);
  uint64_t v185 = (uint64_t)&v164 - v40;
  uint64_t v41 = MEMORY[0x270FA5388](v39);
  uint64_t v186 = (uint64_t)&v164 - v42;
  uint64_t v43 = MEMORY[0x270FA5388](v41);
  uint64_t v188 = (uint64_t)&v164 - v44;
  uint64_t v45 = MEMORY[0x270FA5388](v43);
  uint64_t v189 = (uint64_t)&v164 - v46;
  uint64_t v47 = MEMORY[0x270FA5388](v45);
  uint64_t v194 = (uint64_t)&v164 - v48;
  uint64_t v49 = MEMORY[0x270FA5388](v47);
  unint64_t v191 = (int **)((char *)&v164 - v50);
  uint64_t v51 = MEMORY[0x270FA5388](v49);
  uint64_t v192 = (uint64_t)&v164 - v52;
  uint64_t v53 = MEMORY[0x270FA5388](v51);
  uint64_t v193 = (uint64_t)&v164 - v54;
  uint64_t v55 = MEMORY[0x270FA5388](v53);
  uint64_t v179 = (char *)&v164 - v56;
  uint64_t v57 = MEMORY[0x270FA5388](v55);
  int64_t v59 = (char *)&v164 - v58;
  uint64_t v60 = MEMORY[0x270FA5388](v57);
  int64_t v62 = (char *)&v164 - v61;
  uint64_t v63 = MEMORY[0x270FA5388](v60);
  uint64_t v65 = (char *)&v164 - v64;
  uint64_t v66 = MEMORY[0x270FA5388](v63);
  int64_t v68 = (char *)&v164 - v67;
  uint64_t v69 = MEMORY[0x270FA5388](v66);
  uint64_t v71 = (char *)&v164 - v70;
  MEMORY[0x270FA5388](v69);
  int64_t v73 = (char *)&v164 - v72;
  if (*a1 == *a2 && a1[1] == a2[1])
  {
    sub_21CA4BF50((uint64_t)a1, (uint64_t)&v164 - v72);
    sub_21CA4BF50((uint64_t)a2, (uint64_t)v71);
  }
  else
  {
    char v74 = sub_21CB88F50();
    sub_21CA4BF50((uint64_t)a1, (uint64_t)v73);
    sub_21CA4BF50((uint64_t)a2, (uint64_t)v71);
    if ((v74 & 1) == 0)
    {
      sub_21CA4BEF4((uint64_t)v71);
      sub_21CA4BEF4((uint64_t)v73);
LABEL_15:
      uint64_t v77 = v187;
      uint64_t v78 = v194;
      sub_21CA4BF50((uint64_t)a1, (uint64_t)v68);
      sub_21CA4BF50((uint64_t)a2, (uint64_t)v65);
      goto LABEL_16;
    }
  }
  uint64_t v164 = (int *)v16;
  uint64_t v75 = *((void *)v73 + 3);
  uint64_t v76 = *((void *)v71 + 3);
  if (!v75)
  {
    swift_bridgeObjectRetain();
    sub_21CA4BEF4((uint64_t)v71);
    sub_21CA4BEF4((uint64_t)v73);
    if (!v76) {
      goto LABEL_11;
    }
    goto LABEL_14;
  }
  if (!v76)
  {
    swift_bridgeObjectRetain();
    sub_21CA4BEF4((uint64_t)v71);
    sub_21CA4BEF4((uint64_t)v73);
LABEL_14:
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
  if (*((void *)v73 + 2) == *((void *)v71 + 2) && v75 == v76)
  {
    swift_bridgeObjectRetain();
    sub_21CA4BEF4((uint64_t)v71);
    sub_21CA4BEF4((uint64_t)v73);
    swift_bridgeObjectRelease();
LABEL_11:
    sub_21CA4BF50((uint64_t)a1, (uint64_t)v68);
    sub_21CA4BF50((uint64_t)a2, (uint64_t)v65);
    uint64_t v77 = v187;
    goto LABEL_43;
  }
  char v103 = sub_21CB88F50();
  swift_bridgeObjectRetain();
  sub_21CA4BEF4((uint64_t)v71);
  sub_21CA4BEF4((uint64_t)v73);
  swift_bridgeObjectRelease();
  sub_21CA4BF50((uint64_t)a1, (uint64_t)v68);
  sub_21CA4BF50((uint64_t)a2, (uint64_t)v65);
  uint64_t v77 = v187;
  uint64_t v78 = v194;
  if ((v103 & 1) == 0)
  {
LABEL_16:
    sub_21CA4BEF4((uint64_t)v65);
    sub_21CA4BEF4((uint64_t)v68);
    uint64_t v79 = (uint64_t)v179;
LABEL_17:
    sub_21CA4BF50((uint64_t)a1, (uint64_t)v62);
    sub_21CA4BF50((uint64_t)a2, (uint64_t)v59);
LABEL_18:
    uint64_t v80 = (uint64_t)v77;
    sub_21CA4BEF4((uint64_t)v59);
    sub_21CA4BEF4((uint64_t)v62);
    uint64_t v82 = (uint64_t)v176;
    uint64_t v81 = v177;
    uint64_t v83 = (uint64_t)v175;
    uint64_t v84 = v186;
LABEL_19:
    sub_21CA4BF50((uint64_t)a1, v79);
    uint64_t v85 = v193;
    sub_21CA4BF50((uint64_t)a2, v193);
LABEL_20:
    sub_21CA4BEF4(v85);
    sub_21CA4BEF4(v79);
LABEL_21:
    uint64_t v86 = v192;
    sub_21CA4BF50((uint64_t)a1, v192);
    double v87 = v191;
    sub_21CA4BF50((uint64_t)a2, (uint64_t)v191);
    goto LABEL_22;
  }
LABEL_43:
  uint64_t v104 = *((void *)v65 + 4);
  if (!*((void *)v68 + 4))
  {
    swift_bridgeObjectRetain();
    sub_21CA4BEF4((uint64_t)v65);
    sub_21CA4BEF4((uint64_t)v68);
    uint64_t v79 = (uint64_t)v179;
    if (!v104)
    {
      sub_21CA4BF50((uint64_t)a1, (uint64_t)v62);
      sub_21CA4BF50((uint64_t)a2, (uint64_t)v59);
      goto LABEL_52;
    }
    goto LABEL_50;
  }
  uint64_t v79 = (uint64_t)v179;
  if (!v104)
  {
    swift_bridgeObjectRetain();
    sub_21CA4BEF4((uint64_t)v65);
    sub_21CA4BEF4((uint64_t)v68);
LABEL_50:
    swift_bridgeObjectRelease();
    uint64_t v78 = v194;
    goto LABEL_17;
  }
  char v105 = sub_21CA4C01C(*((void **)v68 + 4), *((void **)v65 + 4));
  swift_bridgeObjectRetain();
  sub_21CA4BEF4((uint64_t)v65);
  sub_21CA4BEF4((uint64_t)v68);
  swift_bridgeObjectRelease();
  sub_21CA4BF50((uint64_t)a1, (uint64_t)v62);
  sub_21CA4BF50((uint64_t)a2, (uint64_t)v59);
  uint64_t v78 = v194;
  if ((v105 & 1) == 0) {
    goto LABEL_18;
  }
LABEL_52:
  uint64_t v106 = *((void *)v59 + 5);
  uint64_t v80 = (uint64_t)v77;
  if (!*((void *)v62 + 5))
  {
    swift_bridgeObjectRetain();
    sub_21CA4BEF4((uint64_t)v59);
    sub_21CA4BEF4((uint64_t)v62);
    uint64_t v84 = v186;
    if (!v106)
    {
      sub_21CA4BF50((uint64_t)a1, v79);
      uint64_t v85 = v193;
      sub_21CA4BF50((uint64_t)a2, v193);
      uint64_t v82 = (uint64_t)v176;
      uint64_t v81 = v177;
      uint64_t v83 = (uint64_t)v175;
      goto LABEL_61;
    }
    goto LABEL_59;
  }
  uint64_t v84 = v186;
  if (!v106)
  {
    swift_bridgeObjectRetain();
    sub_21CA4BEF4((uint64_t)v59);
    sub_21CA4BEF4((uint64_t)v62);
LABEL_59:
    swift_bridgeObjectRelease();
    uint64_t v82 = (uint64_t)v176;
    uint64_t v81 = v177;
    uint64_t v83 = (uint64_t)v175;
    uint64_t v78 = v194;
    goto LABEL_19;
  }
  LODWORD(v179) = sub_21CA4C01C(*((void **)v62 + 5), *((void **)v59 + 5));
  swift_bridgeObjectRetain();
  sub_21CA4BEF4((uint64_t)v59);
  sub_21CA4BEF4((uint64_t)v62);
  swift_bridgeObjectRelease();
  sub_21CA4BF50((uint64_t)a1, v79);
  uint64_t v85 = v193;
  sub_21CA4BF50((uint64_t)a2, v193);
  uint64_t v82 = (uint64_t)v176;
  uint64_t v81 = v177;
  uint64_t v83 = (uint64_t)v175;
  uint64_t v78 = v194;
  if ((v179 & 1) == 0) {
    goto LABEL_20;
  }
LABEL_61:
  uint64_t v107 = *(void *)(v79 + 56);
  uint64_t v108 = *(void *)(v85 + 56);
  if (!v107)
  {
    swift_bridgeObjectRetain();
    sub_21CA4BEF4(v85);
    sub_21CA4BEF4(v79);
    if (!v108) {
      goto LABEL_67;
    }
    goto LABEL_69;
  }
  if (!v108)
  {
    swift_bridgeObjectRetain();
    sub_21CA4BEF4(v85);
    sub_21CA4BEF4(v79);
LABEL_69:
    swift_bridgeObjectRelease();
    uint64_t v78 = v194;
    goto LABEL_21;
  }
  if (*(void *)(v79 + 48) == *(void *)(v85 + 48) && v107 == v108)
  {
    swift_bridgeObjectRetain();
    sub_21CA4BEF4(v193);
    sub_21CA4BEF4(v79);
    swift_bridgeObjectRelease();
LABEL_67:
    uint64_t v86 = v192;
    sub_21CA4BF50((uint64_t)a1, v192);
    double v87 = v191;
    sub_21CA4BF50((uint64_t)a2, (uint64_t)v191);
    goto LABEL_71;
  }
  LODWORD(v179) = sub_21CB88F50();
  swift_bridgeObjectRetain();
  sub_21CA4BEF4(v193);
  sub_21CA4BEF4(v79);
  swift_bridgeObjectRelease();
  uint64_t v86 = v192;
  sub_21CA4BF50((uint64_t)a1, v192);
  double v87 = v191;
  sub_21CA4BF50((uint64_t)a2, (uint64_t)v191);
  uint64_t v78 = v194;
  if ((v179 & 1) == 0)
  {
LABEL_22:
    sub_21CA4BEF4((uint64_t)v87);
    sub_21CA4BEF4(v86);
LABEL_23:
    uint64_t v88 = (uint64_t)v81;
LABEL_24:
    uint64_t v89 = v80;
    sub_21CA4BF50((uint64_t)a1, v78);
    uint64_t v90 = v189;
    sub_21CA4BF50((uint64_t)a2, v189);
    uint64_t v91 = v188;
    goto LABEL_25;
  }
LABEL_71:
  uint64_t v109 = *(void *)(v86 + 72);
  uint64_t v110 = v87[9];
  if (!v109)
  {
    swift_bridgeObjectRetain();
    sub_21CA4BEF4((uint64_t)v87);
    sub_21CA4BEF4(v86);
    uint64_t v88 = (uint64_t)v81;
    if (!v110) {
      goto LABEL_78;
    }
    swift_bridgeObjectRelease();
    uint64_t v78 = v194;
    goto LABEL_24;
  }
  if (!v110)
  {
    swift_bridgeObjectRetain();
    sub_21CA4BEF4((uint64_t)v87);
    sub_21CA4BEF4(v86);
    swift_bridgeObjectRelease();
    uint64_t v78 = v194;
    goto LABEL_23;
  }
  if (*(void *)(v86 + 64) == v87[8] && v109 == v110)
  {
    swift_bridgeObjectRetain();
    sub_21CA4BEF4((uint64_t)v191);
    sub_21CA4BEF4(v192);
    swift_bridgeObjectRelease();
    uint64_t v88 = (uint64_t)v81;
LABEL_78:
    uint64_t v78 = v194;
    sub_21CA4BF50((uint64_t)a1, v194);
    uint64_t v90 = v189;
    sub_21CA4BF50((uint64_t)a2, v189);
    uint64_t v89 = v80;
    uint64_t v91 = v188;
    goto LABEL_81;
  }
  LODWORD(v193) = sub_21CB88F50();
  swift_bridgeObjectRetain();
  sub_21CA4BEF4((uint64_t)v191);
  sub_21CA4BEF4(v192);
  swift_bridgeObjectRelease();
  uint64_t v78 = v194;
  sub_21CA4BF50((uint64_t)a1, v194);
  uint64_t v90 = v189;
  sub_21CA4BF50((uint64_t)a2, v189);
  uint64_t v88 = (uint64_t)v81;
  uint64_t v89 = v80;
  uint64_t v91 = v188;
  if ((v193 & 1) == 0)
  {
LABEL_25:
    sub_21CA4BEF4(v90);
    sub_21CA4BEF4(v78);
    uint64_t v92 = v190;
LABEL_26:
    sub_21CA4BF50((uint64_t)a1, v91);
    sub_21CA4BF50((uint64_t)a2, v84);
LABEL_27:
    sub_21CA4BEF4(v84);
    sub_21CA4BEF4(v91);
LABEL_28:
    uint64_t v93 = v185;
    sub_21CA4BF50((uint64_t)a1, v185);
    uint64_t v94 = v184;
    sub_21CA4BF50((uint64_t)a2, v184);
LABEL_29:
    sub_21CA4BEF4(v94);
    sub_21CA4BEF4(v93);
    uint64_t v95 = v183;
    uint64_t v96 = (uint64_t)v178;
LABEL_30:
    sub_21CA4BF50((uint64_t)a1, v92);
    sub_21CA4BF50((uint64_t)a2, v89);
LABEL_31:
    sub_21CA4BEF4(v89);
    sub_21CA4BEF4(v92);
    goto LABEL_32;
  }
LABEL_81:
  uint64_t v111 = v164[10];
  uint64_t v112 = v78 + v111;
  uint64_t v192 = v90 + v111;
  uint64_t v113 = v174;
  uint64_t v193 = v174 + *(int *)(v171 + 48);
  sub_21CA4BFB4(v112, v174);
  sub_21CA4BFB4(v192, v193);
  uint64_t v114 = v113;
  uint64_t v115 = v173;
  unint64_t v191 = *(int ***)(v172 + 48);
  uint64_t v192 = v172 + 48;
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v191)(v114, 1, v173) == 1)
  {
    sub_21CA4BEF4(v90);
    sub_21CA4BEF4(v194);
    int v116 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v191)(v193, 1, v115);
    uint64_t v92 = v190;
    if (v116 == 1)
    {
      sub_21CA1B88C(v174, (uint64_t *)&unk_267C951B0);
      sub_21CA4BF50((uint64_t)a1, v91);
      sub_21CA4BF50((uint64_t)a2, v84);
      goto LABEL_88;
    }
    goto LABEL_86;
  }
  uint64_t v117 = (uint64_t)v170;
  sub_21CA4BFB4(v174, (uint64_t)v170);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v191)(v193, 1, v115) == 1)
  {
    sub_21CA4BEF4(v189);
    sub_21CA4BEF4(v194);
    (*(void (**)(uint64_t, uint64_t))(v172 + 8))(v117, v115);
    uint64_t v92 = v190;
LABEL_86:
    sub_21CA1B88C(v174, &qword_267C95108);
    goto LABEL_26;
  }
  uint64_t v118 = v172;
  uint64_t v119 = v168;
  (*(void (**)(char *, uint64_t, uint64_t))(v172 + 32))(v168, v193, v115);
  sub_21CA4C0E4((unint64_t *)&qword_267C95110);
  LODWORD(v193) = sub_21CB882B0();
  uint64_t v120 = *(void (**)(char *, uint64_t))(v118 + 8);
  uint64_t v121 = v119;
  uint64_t v91 = v188;
  v120(v121, v115);
  sub_21CA4BEF4(v189);
  sub_21CA4BEF4(v194);
  v120(v170, v115);
  uint64_t v89 = (uint64_t)v187;
  sub_21CA1B88C(v174, (uint64_t *)&unk_267C951B0);
  sub_21CA4BF50((uint64_t)a1, v91);
  sub_21CA4BF50((uint64_t)a2, v84);
  uint64_t v92 = v190;
  if ((v193 & 1) == 0) {
    goto LABEL_27;
  }
LABEL_88:
  uint64_t v122 = v164[11];
  uint64_t v194 = v84 + v122;
  uint64_t v123 = v169;
  uint64_t v124 = v169 + *(int *)(v171 + 48);
  sub_21CA4BFB4(v91 + v122, v169);
  uint64_t v125 = v194;
  uint64_t v194 = v124;
  sub_21CA4BFB4(v125, v124);
  unint64_t v126 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v191;
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v191)(v123, 1, v173) == 1)
  {
    sub_21CA4BEF4(v84);
    sub_21CA4BEF4(v91);
    int v127 = v126(v194, 1, v173);
    uint64_t v92 = v190;
    if (v127 == 1)
    {
      sub_21CA1B88C(v123, (uint64_t *)&unk_267C951B0);
      uint64_t v93 = v185;
      sub_21CA4BF50((uint64_t)a1, v185);
      uint64_t v94 = v184;
      sub_21CA4BF50((uint64_t)a2, v184);
      goto LABEL_95;
    }
    goto LABEL_93;
  }
  uint64_t v128 = (uint64_t)v166;
  sub_21CA4BFB4(v123, (uint64_t)v166);
  if (v126(v194, 1, v173) == 1)
  {
    sub_21CA4BEF4(v186);
    sub_21CA4BEF4(v91);
    (*(void (**)(uint64_t, uint64_t))(v172 + 8))(v128, v173);
    uint64_t v92 = v190;
LABEL_93:
    sub_21CA1B88C(v123, &qword_267C95108);
    goto LABEL_28;
  }
  uint64_t v129 = v172;
  uint64_t v130 = v168;
  uint64_t v131 = v173;
  (*(void (**)(char *, uint64_t, uint64_t))(v172 + 32))(v168, v194, v173);
  sub_21CA4C0E4((unint64_t *)&qword_267C95110);
  LODWORD(v194) = sub_21CB882B0();
  uint64_t v132 = *(void (**)(char *, uint64_t))(v129 + 8);
  v132(v130, v131);
  sub_21CA4BEF4(v186);
  sub_21CA4BEF4(v188);
  v132(v166, v131);
  uint64_t v89 = (uint64_t)v187;
  sub_21CA1B88C(v169, (uint64_t *)&unk_267C951B0);
  uint64_t v93 = v185;
  sub_21CA4BF50((uint64_t)a1, v185);
  uint64_t v94 = v184;
  sub_21CA4BF50((uint64_t)a2, v184);
  uint64_t v92 = v190;
  if ((v194 & 1) == 0) {
    goto LABEL_29;
  }
LABEL_95:
  uint64_t v133 = v164[12];
  uint64_t v194 = v94 + v133;
  uint64_t v134 = v167;
  uint64_t v135 = v167 + *(int *)(v171 + 48);
  sub_21CA4BFB4(v93 + v133, v167);
  uint64_t v136 = v194;
  uint64_t v194 = v135;
  sub_21CA4BFB4(v136, v135);
  uint64_t v137 = v134;
  uint64_t v138 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v191;
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v191)(v137, 1, v173) == 1)
  {
    sub_21CA4BEF4(v94);
    sub_21CA4BEF4(v93);
    int v139 = v138(v194, 1, v173);
    uint64_t v95 = v183;
    uint64_t v96 = (uint64_t)v178;
    uint64_t v92 = v190;
    uint64_t v140 = v167;
    if (v139 == 1)
    {
      sub_21CA1B88C(v167, (uint64_t *)&unk_267C951B0);
      sub_21CA4BF50((uint64_t)a1, v92);
      sub_21CA4BF50((uint64_t)a2, v89);
      goto LABEL_102;
    }
    goto LABEL_100;
  }
  uint64_t v140 = v167;
  uint64_t v141 = (uint64_t)v165;
  sub_21CA4BFB4(v167, (uint64_t)v165);
  if (v138(v194, 1, v173) == 1)
  {
    sub_21CA4BEF4(v184);
    sub_21CA4BEF4(v185);
    (*(void (**)(uint64_t, uint64_t))(v172 + 8))(v141, v173);
    uint64_t v95 = v183;
    uint64_t v96 = (uint64_t)v178;
    uint64_t v92 = v190;
LABEL_100:
    sub_21CA1B88C(v140, &qword_267C95108);
    goto LABEL_30;
  }
  uint64_t v142 = v172;
  uint64_t v143 = v168;
  uint64_t v144 = v173;
  (*(void (**)(char *, uint64_t, uint64_t))(v172 + 32))(v168, v194, v173);
  sub_21CA4C0E4((unint64_t *)&qword_267C95110);
  LODWORD(v194) = sub_21CB882B0();
  uint64_t v145 = *(void (**)(char *, uint64_t))(v142 + 8);
  v145(v143, v144);
  sub_21CA4BEF4(v184);
  sub_21CA4BEF4(v185);
  v145(v165, v144);
  sub_21CA1B88C(v167, (uint64_t *)&unk_267C951B0);
  uint64_t v92 = v190;
  sub_21CA4BF50((uint64_t)a1, v190);
  sub_21CA4BF50((uint64_t)a2, v89);
  uint64_t v95 = v183;
  uint64_t v96 = (uint64_t)v178;
  if ((v194 & 1) == 0) {
    goto LABEL_31;
  }
LABEL_102:
  uint64_t v146 = v164;
  LODWORD(v194) = *(unsigned __int8 *)(v92 + v164[13]);
  sub_21CA4BEF4(v92);
  int v147 = *(unsigned __int8 *)(v89 + v146[13]);
  sub_21CA4BEF4(v89);
  if (v194 == 2)
  {
    if (v147 == 2)
    {
      sub_21CA4BF50((uint64_t)a1, v83);
      sub_21CA4BF50((uint64_t)a2, v82);
      goto LABEL_107;
    }
    goto LABEL_32;
  }
  if (v147 == 2)
  {
LABEL_32:
    sub_21CA4BF50((uint64_t)a1, v83);
    sub_21CA4BF50((uint64_t)a2, v82);
LABEL_33:
    sub_21CA4BEF4(v82);
    sub_21CA4BEF4(v83);
    goto LABEL_34;
  }
  char v148 = ((v194 & 1) == 0) ^ v147;
  sub_21CA4BF50((uint64_t)a1, v83);
  sub_21CA4BF50((uint64_t)a2, v82);
  if ((v148 & 1) == 0) {
    goto LABEL_33;
  }
LABEL_107:
  uint64_t v149 = v164;
  int v150 = *(unsigned __int8 *)(v83 + v164[14]);
  sub_21CA4BEF4(v83);
  int v151 = *(unsigned __int8 *)(v82 + v149[14]);
  sub_21CA4BEF4(v82);
  if (v150 == 2)
  {
    if (v151 == 2)
    {
      sub_21CA4BF50((uint64_t)a1, v88);
      sub_21CA4BF50((uint64_t)a2, v96);
      goto LABEL_112;
    }
    goto LABEL_34;
  }
  if (v151 == 2)
  {
LABEL_34:
    sub_21CA4BF50((uint64_t)a1, v88);
    sub_21CA4BF50((uint64_t)a2, v96);
LABEL_35:
    sub_21CA4BEF4(v96);
    sub_21CA4BEF4(v88);
    goto LABEL_36;
  }
  sub_21CA4BF50((uint64_t)a1, v88);
  sub_21CA4BF50((uint64_t)a2, v96);
  if (((((v150 & 1) == 0) ^ v151) & 1) == 0) {
    goto LABEL_35;
  }
LABEL_112:
  uint64_t v152 = v164;
  int v153 = *(unsigned __int8 *)(v88 + v164[15]);
  sub_21CA4BEF4(v88);
  int v154 = *(unsigned __int8 *)(v96 + v152[15]);
  sub_21CA4BEF4(v96);
  if (v153 == 2)
  {
    uint64_t v95 = v183;
    if (v154 == 2)
    {
      sub_21CA4BF50((uint64_t)a1, v183);
      uint64_t v97 = v180;
      sub_21CA4BF50((uint64_t)a2, v180);
      goto LABEL_117;
    }
    goto LABEL_36;
  }
  uint64_t v95 = v183;
  if (v154 == 2)
  {
LABEL_36:
    sub_21CA4BF50((uint64_t)a1, v95);
    uint64_t v97 = v180;
    sub_21CA4BF50((uint64_t)a2, v180);
LABEL_37:
    sub_21CA4BEF4(v97);
    sub_21CA4BEF4(v95);
    goto LABEL_38;
  }
  char v155 = ((v153 & 1) == 0) ^ v154;
  sub_21CA4BF50((uint64_t)a1, v183);
  uint64_t v97 = v180;
  sub_21CA4BF50((uint64_t)a2, v180);
  if ((v155 & 1) == 0) {
    goto LABEL_37;
  }
LABEL_117:
  uint64_t v156 = v164;
  int v157 = *(unsigned __int8 *)(v95 + v164[16]);
  sub_21CA4BEF4(v95);
  uint64_t v158 = v97;
  int v159 = *(unsigned __int8 *)(v97 + v156[16]);
  sub_21CA4BEF4(v158);
  if (v157 == 2)
  {
    if (v159 == 2)
    {
      uint64_t v160 = (uint64_t)a1;
      uint64_t v99 = v182;
      sub_21CA4BF50(v160, v182);
      uint64_t v100 = v181;
      sub_21CA4BF50((uint64_t)a2, v181);
      goto LABEL_122;
    }
    goto LABEL_38;
  }
  if (v159 == 2)
  {
LABEL_38:
    uint64_t v98 = (uint64_t)a1;
    uint64_t v99 = v182;
    sub_21CA4BF50(v98, v182);
    uint64_t v100 = v181;
    sub_21CA4BF50((uint64_t)a2, v181);
LABEL_39:
    sub_21CA4BEF4(v100);
    sub_21CA4BEF4(v99);
LABEL_40:
    LOBYTE(v101) = 0;
    return v101 & 1;
  }
  char v161 = ((v157 & 1) == 0) ^ v159;
  uint64_t v162 = (uint64_t)a1;
  uint64_t v99 = v182;
  sub_21CA4BF50(v162, v182);
  uint64_t v100 = v181;
  sub_21CA4BF50((uint64_t)a2, v181);
  if ((v161 & 1) == 0) {
    goto LABEL_39;
  }
LABEL_122:
  uint64_t v163 = v164[17];
  uint64_t v101 = *(void *)(v100 + v163);
  if (!*(void *)(v99 + v163))
  {
    swift_bridgeObjectRetain();
    sub_21CA4BEF4(v181);
    sub_21CA4BEF4(v182);
    if (!v101)
    {
      LOBYTE(v101) = 1;
      return v101 & 1;
    }
    swift_bridgeObjectRelease();
    goto LABEL_40;
  }
  if (v101) {
    LOBYTE(v101) = sub_21CA4C01C(*(void **)(v99 + v163), *(void **)(v100 + v163));
  }
  swift_bridgeObjectRetain();
  sub_21CA4BEF4(v181);
  sub_21CA4BEF4(v182);
  swift_bridgeObjectRelease();
  return v101 & 1;
}

uint64_t sub_21CA4BEF4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for FMFIntermediateFriend();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_21CA4BF50(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FMFIntermediateFriend();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_21CA4BFB4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_21CA57E34((uint64_t *)&unk_267C951B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_21CA4C01C(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  if (v2 != a2[2]) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  BOOL v5 = a1[4] == a2[4] && a1[5] == a2[5];
  if (v5 || (v6 = sub_21CB88F50(), uint64_t result = 0, (v6 & 1) != 0))
  {
    uint64_t v8 = v2 - 1;
    if (!v8) {
      return 1;
    }
    uint64_t v9 = a2 + 7;
    for (uint64_t i = a1 + 7; ; i += 2)
    {
      BOOL v11 = *(i - 1) == *(v9 - 1) && *i == *v9;
      if (!v11 && (sub_21CB88F50() & 1) == 0) {
        break;
      }
      v9 += 2;
      if (!--v8) {
        return 1;
      }
    }
    return 0;
  }
  return result;
}

uint64_t sub_21CA4C0E4(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_21CB87590();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_21CA4C128(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for FMFFriend();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v9 = (uint64_t *)((char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = sub_21CA57E34((uint64_t *)&unk_267C951B0);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *(void *)(a1 + 16);
  if (!v13)
  {
    uint64_t v28 = MEMORY[0x263F8EE80];
    goto LABEL_17;
  }
  uint64_t v35 = a1;
  uint64_t v36 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = a1 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  uint64_t v39 = *(void *)(v7 + 72);
  swift_bridgeObjectRetain();
  uint64_t v40 = MEMORY[0x263F8EE80];
  uint64_t v37 = a2;
  uint64_t v38 = a3;
  do
  {
    sub_21CA4C550(v14, (uint64_t)v9);
    uint64_t v19 = *v9;
    uint64_t v18 = v9[1];
    if (*(void *)(a2 + 16))
    {
      swift_bridgeObjectRetain();
      unint64_t v20 = sub_21CA5BCE0(v19, v18);
      if (v21)
      {
        uint64_t v22 = (uint64_t *)(*(void *)(a2 + 56) + 56 * v20);
        uint64_t v24 = *v22;
        uint64_t v23 = v22[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        id v25 = sub_21CB087B8(v24, v23, 0);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v25)
        {
          id v26 = v25;
          char v27 = sub_21CB09264((uint64_t)v9, v26);

          a2 = v37;
          a3 = v38;
          if (v27) {
            goto LABEL_3;
          }
        }
        else
        {
          a2 = v37;
          a3 = v38;
        }
        goto LABEL_12;
      }
      swift_bridgeObjectRelease();
    }
    id v25 = 0;
LABEL_12:
    id v26 = sub_21CA4C5B4((uint64_t)v9, 0);

    if (v26)
    {
LABEL_3:
      id v15 = v26;
      sub_21CB075AC(v15, (uint64_t)v42);
      swift_bridgeObjectRetain();
      uint64_t v16 = v40;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v41 = v16;
      sub_21CB84450((uint64_t)v42, v19, v18, isUniquelyReferenced_nonNull_native);
      uint64_t v40 = v41;

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    sub_21CA4C4F4((uint64_t)v9);
    v14 += v39;
    --v13;
  }
  while (v13);
  swift_bridgeObjectRelease();
  uint64_t v28 = v40;
  uint64_t v12 = v36;
LABEL_17:
  sub_21CB87580();
  uint64_t v29 = sub_21CB87590();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v12, 0, 1, v29);
  uint64_t v30 = a3 + OBJC_IVAR____TtC7FMFCore25FMFContactsDataController_lastContactSearchDate;
  swift_beginAccess();
  sub_21CA5D168((uint64_t)v12, v30);
  swift_endAccess();
  uint64_t v31 = swift_bridgeObjectRetain();
  LOBYTE(v30) = sub_21CA5CDD4(v31, a2);
  swift_bridgeObjectRelease();
  if ((v30 & 1) != 0 || !MEMORY[0x21D4B6C80](a3 + 40)) {
    return swift_bridgeObjectRelease();
  }
  uint64_t v32 = *(void *)(a3 + 48);
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v32 + 16))(v28, ObjectType, v32);
  swift_bridgeObjectRelease();
  return swift_unknownObjectRelease();
}

uint64_t sub_21CA4C4F4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for FMFFriend();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_21CA4C550(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FMFFriend();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

id sub_21CA4C5B4(uint64_t a1, uint64_t a2)
{
  void v61[2] = *(id *)MEMORY[0x263EF8340];
  uint64_t v4 = sub_21CA57E34(&qword_267C95400);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(a1 + 32);
  swift_bridgeObjectRetain_n();
  uint64_t v8 = sub_21CA4D61C(v7);
  swift_bridgeObjectRelease();
  v61[0] = v8;
  sub_21CA4CDF4((uint64_t *)v61);
  swift_bridgeObjectRelease();
  uint64_t v9 = (char *)v61[0];
  uint64_t v10 = *((void *)v61[0] + 2);
  if (!v10)
  {
LABEL_19:
    swift_release();
    return 0;
  }
  uint64_t v11 = *(void **)(v54 + 56);
  uint64_t v57 = sub_21CB87630();
  uint64_t v12 = *(void *)(v57 - 8);
  uint64_t v49 = v9;
  uint64_t v13 = (void **)(v9 + 40);
  uint64_t v14 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56);
  uint64_t v55 = v12 + 56;
  uint64_t v56 = v14;
  *(void *)&long long v15 = 136315138;
  long long v51 = v15;
  uint64_t v50 = MEMORY[0x263F8EE58] + 8;
  uint64_t v52 = a2;
  uint64_t v53 = v6;
  while (1)
  {
    uint64_t v16 = *v13;
    v61[0] = *(v13 - 1);
    v61[1] = v16;
    uint64_t v59 = 64;
    unint64_t v60 = 0xE100000000000000;
    v56(v6, 1, 1, v57);
    sub_21CA4D63C();
    swift_bridgeObjectRetain();
    sub_21CB88A20();
    char v18 = v17;
    sub_21CA1B88C((uint64_t)v6, &qword_267C95400);
    swift_bridgeObjectRelease();
    uint64_t v19 = self;
    if (v18)
    {
      id v22 = objc_allocWithZone(MEMORY[0x263EFEB28]);
      uint64_t v23 = (void *)sub_21CB882C0();
      swift_bridgeObjectRelease();
      id v20 = objc_msgSend(v22, sel_initWithStringValue_, v23, v49, v50);

      char v21 = &selRef_predicateForContactsMatchingPhoneNumber_;
    }
    else
    {
      id v20 = (id)sub_21CB882C0();
      swift_bridgeObjectRelease();
      char v21 = &selRef_predicateForContactsMatchingEmailAddress_;
    }
    id v24 = objc_msgSend(v19, *v21, v20, v49, v50);

    if (!a2) {
      sub_21CA4D690();
    }
    swift_bridgeObjectRetain();
    sub_21CA57E34(&qword_267C95320);
    id v25 = (void *)sub_21CB884F0();
    swift_bridgeObjectRelease();
    v61[0] = 0;
    id v26 = objc_msgSend(v11, sel_unifiedContactsMatchingPredicate_keysToFetch_error_, v24, v25, v61);

    id v27 = v61[0];
    if (v26) {
      break;
    }
    uint64_t v28 = v27;
    id v58 = v24;
    uint64_t v29 = (void *)sub_21CB87400();

    swift_willThrow();
    if (qword_267C94990 != -1) {
      swift_once();
    }
    uint64_t v30 = sub_21CB880A0();
    sub_21CA4CC18(v30, (uint64_t)qword_267CA5368);
    id v31 = v29;
    id v32 = v29;
    uint64_t v33 = sub_21CB88070();
    os_log_type_t v34 = sub_21CB88880();
    if (os_log_type_enabled(v33, v34))
    {
      uint64_t v35 = swift_slowAlloc();
      uint64_t v36 = (void *)swift_slowAlloc();
      v61[0] = v36;
      *(_DWORD *)uint64_t v35 = v51;
      uint64_t v59 = (uint64_t)v29;
      id v37 = v29;
      sub_21CA57E34((uint64_t *)&unk_267C96F50);
      uint64_t v38 = sub_21CB88310();
      *(void *)(v35 + 4) = sub_21CA4E450(v38, v39, (uint64_t *)v61);
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_21CA00000, v33, v34, "Error getting contact - %s", (uint8_t *)v35, 0xCu);
      swift_arrayDestroy();
      uint64_t v40 = v36;
      a2 = v52;
      uint64_t v6 = v53;
      MEMORY[0x21D4B6B70](v40, -1, -1);
      MEMORY[0x21D4B6B70](v35, -1, -1);
    }
    else
    {
    }
    v13 += 2;
    if (!--v10) {
      goto LABEL_19;
    }
  }
  swift_release();
  sub_21CA05908(0, &qword_267C96FD8);
  unint64_t v41 = sub_21CB88510();

  if (v41 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v44 = sub_21CB88D10();
    swift_bridgeObjectRelease();
    if (v44) {
      goto LABEL_18;
    }
    goto LABEL_23;
  }
  if (!*(void *)((v41 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_23:
    swift_bridgeObjectRelease();
    if (qword_267C94990 != -1) {
      swift_once();
    }
    uint64_t v45 = sub_21CB880A0();
    sub_21CA4CC18(v45, (uint64_t)qword_267CA5368);
    uint64_t v46 = sub_21CB88070();
    os_log_type_t v47 = sub_21CB88880();
    if (os_log_type_enabled(v46, v47))
    {
      uint64_t v48 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v48 = 0;
      _os_log_impl(&dword_21CA00000, v46, v47, "No contact found in store", v48, 2u);
      MEMORY[0x21D4B6B70](v48, -1, -1);
    }
    else
    {
    }
    return 0;
  }
LABEL_18:
  id v42 = sub_21CB08E10(v41);
  swift_bridgeObjectRelease();

  return v42;
}

uint64_t sub_21CA4CC18(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(*(void *)(a1 - 8) + 82) & 2) != 0) {
    return *(void *)a2;
  }
  return a2;
}

unint64_t FMFFriend.name.getter()
{
  uint64_t v1 = (void *)(v0 + *(int *)(type metadata accessor for FMFFriend() + 76));
  if (!v1[1]) {
    goto LABEL_6;
  }
  uint64_t v2 = v1[2];
  unint64_t v3 = v1[3];
  uint64_t v4 = HIBYTE(v3) & 0xF;
  if ((v3 & 0x2000000000000000) == 0) {
    uint64_t v4 = v2 & 0xFFFFFFFFFFFFLL;
  }
  if (v4)
  {
    swift_bridgeObjectRetain();
  }
  else
  {
LABEL_6:
    uint64_t v5 = *(void *)(v0 + 32);
    swift_bridgeObjectRetain_n();
    uint64_t v6 = sub_21CA4E9B4(v5, (uint64_t *)&unk_267C96F20, (uint64_t (*)(uint64_t *, void *, uint64_t, uint64_t))sub_21CA4EAA4);
    swift_bridgeObjectRelease();
    uint64_t v10 = v6;
    sub_21CA4CDF4((uint64_t *)&v10);
    swift_bridgeObjectRelease();
    if (v10[2])
    {
      uint64_t v2 = v10[4];
      swift_bridgeObjectRetain();
      swift_release();
      if (qword_267C94968 != -1) {
        swift_once();
      }
      uint64_t v7 = qword_267CA52B8;
      uint64_t v8 = (void *)sub_21CB882C0();
      LOBYTE(v7) = objc_msgSend((id)v7, sel_evaluateWithObject_, v8);

      if ((v7 & 1) == 0)
      {
        uint64_t v2 = sub_21CB342A0(v2);
        swift_bridgeObjectRelease();
      }
    }
    else
    {
      swift_release();
      return 0xD000000000000014;
    }
  }
  return v2;
}

uint64_t sub_21CA4CDF4(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_21CAD2EB4(v2);
  }
  uint64_t v3 = *(void *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  uint64_t result = sub_21CA4CE60(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_21CA4CE60(uint64_t *a1)
{
  uint64_t v3 = a1[1];
  uint64_t result = sub_21CB88EE0();
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_152;
    }
    if (v3) {
      return sub_21CA4D54C(0, v3, 1, a1);
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_160;
  }
  uint64_t v105 = result;
  uint64_t v102 = a1;
  if (v3 < 2)
  {
    uint64_t v8 = MEMORY[0x263F8EE78];
    __dst = (char *)(MEMORY[0x263F8EE78] + 32);
    if (v3 != 1)
    {
      unint64_t v12 = *(void *)(MEMORY[0x263F8EE78] + 16);
      uint64_t v11 = (char *)MEMORY[0x263F8EE78];
LABEL_118:
      uint64_t v94 = v11;
      uint64_t v104 = v8;
      if (v12 >= 2)
      {
        uint64_t v95 = *v102;
        do
        {
          unint64_t v96 = v12 - 2;
          if (v12 < 2) {
            goto LABEL_147;
          }
          if (!v95) {
            goto LABEL_159;
          }
          uint64_t v97 = v94;
          uint64_t v98 = *(void *)&v94[16 * v96 + 32];
          uint64_t v99 = *(void *)&v94[16 * v12 + 24];
          sub_21CABB124((char *)(v95 + 16 * v98), (char *)(v95 + 16 * *(void *)&v94[16 * v12 + 16]), v95 + 16 * v99, __dst);
          if (v1) {
            break;
          }
          if (v99 < v98) {
            goto LABEL_148;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v97 = sub_21CAD2EA0((uint64_t)v97);
          }
          if (v96 >= *((void *)v97 + 2)) {
            goto LABEL_149;
          }
          uint64_t v100 = &v97[16 * v96 + 32];
          *(void *)uint64_t v100 = v98;
          *((void *)v100 + 1) = v99;
          unint64_t v101 = *((void *)v97 + 2);
          if (v12 > v101) {
            goto LABEL_150;
          }
          memmove(&v97[16 * v12 + 16], &v97[16 * v12 + 32], 16 * (v101 - v12));
          uint64_t v94 = v97;
          *((void *)v97 + 2) = v101 - 1;
          unint64_t v12 = v101 - 1;
        }
        while (v101 > 2);
      }
LABEL_115:
      swift_bridgeObjectRelease();
      *(void *)(v104 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v104 = MEMORY[0x263F8EE78];
  }
  else
  {
    uint64_t v6 = v5 >> 1;
    uint64_t v7 = sub_21CB88580();
    *(void *)(v7 + 16) = v6;
    uint64_t v104 = v7;
    __dst = (char *)(v7 + 32);
  }
  uint64_t v9 = 0;
  uint64_t v10 = *a1;
  uint64_t v103 = v10 + 8;
  uint64_t v11 = (char *)MEMORY[0x263F8EE78];
  uint64_t v106 = v3;
  while (1)
  {
    uint64_t v13 = v9++;
    if (v9 >= v3) {
      goto LABEL_46;
    }
    uint64_t v14 = (uint64_t *)(v10 + 16 * v9);
    uint64_t v15 = *v14;
    uint64_t v16 = v14[1];
    char v17 = (void *)(v10 + 16 * v13);
    if (v15 == *v17 && v16 == v17[1])
    {
      uint64_t v20 = v13 + 2;
      if (v13 + 2 >= v3) {
        goto LABEL_45;
      }
      int v19 = 0;
    }
    else
    {
      int v19 = sub_21CB88F50();
      uint64_t v20 = v13 + 2;
      if (v13 + 2 >= v3) {
        goto LABEL_36;
      }
    }
    char v21 = (void *)(v103 + 16 * v20);
    do
    {
      uint64_t v23 = (void *)(v10 + 16 * v9);
      if (*(v21 - 1) == *v23 && *v21 == v23[1])
      {
        if (v19) {
          goto LABEL_37;
        }
      }
      else if ((v19 ^ sub_21CB88F50()))
      {
        goto LABEL_36;
      }
      v21 += 2;
      uint64_t v22 = v20 + 1;
      uint64_t v9 = v20;
      uint64_t v20 = v22;
    }
    while (v22 < v3);
    uint64_t v20 = v22;
LABEL_36:
    uint64_t v9 = v20;
    if (v19)
    {
LABEL_37:
      if (v20 < v13) {
        goto LABEL_155;
      }
      if (v13 < v20)
      {
        uint64_t v25 = 16 * v20;
        uint64_t v26 = 16 * v13;
        uint64_t v27 = v20;
        uint64_t v28 = v13;
        do
        {
          if (v28 != --v27)
          {
            if (!v10) {
              goto LABEL_158;
            }
            uint64_t v29 = v10 + v25;
            uint64_t v30 = *(void *)(v10 + v26);
            uint64_t v31 = *(void *)(v10 + v26 + 8);
            *(_OWORD *)(v10 + v26) = *(_OWORD *)(v10 + v25 - 16);
            *(void *)(v29 - 16) = v30;
            *(void *)(v29 - 8) = v31;
          }
          ++v28;
          v25 -= 16;
          v26 += 16;
        }
        while (v28 < v27);
      }
LABEL_45:
      uint64_t v9 = v20;
    }
LABEL_46:
    if (v9 < v3)
    {
      if (__OFSUB__(v9, v13)) {
        goto LABEL_151;
      }
      if (v9 - v13 < v105) {
        break;
      }
    }
LABEL_67:
    if (v9 < v13) {
      goto LABEL_146;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v11 = sub_21CAD2AD8(0, *((void *)v11 + 2) + 1, 1, v11);
    }
    unint64_t v41 = *((void *)v11 + 2);
    unint64_t v40 = *((void *)v11 + 3);
    unint64_t v12 = v41 + 1;
    if (v41 >= v40 >> 1) {
      uint64_t v11 = sub_21CAD2AD8((char *)(v40 > 1), v41 + 1, 1, v11);
    }
    *((void *)v11 + 2) = v12;
    id v42 = v11 + 32;
    uint64_t v43 = &v11[16 * v41 + 32];
    *(void *)uint64_t v43 = v13;
    *((void *)v43 + 1) = v9;
    if (v41)
    {
      uint64_t v107 = v9;
      while (1)
      {
        unint64_t v44 = v12 - 1;
        if (v12 >= 4)
        {
          uint64_t v49 = &v42[16 * v12];
          uint64_t v50 = *((void *)v49 - 8);
          uint64_t v51 = *((void *)v49 - 7);
          BOOL v55 = __OFSUB__(v51, v50);
          uint64_t v52 = v51 - v50;
          if (v55) {
            goto LABEL_135;
          }
          uint64_t v54 = *((void *)v49 - 6);
          uint64_t v53 = *((void *)v49 - 5);
          BOOL v55 = __OFSUB__(v53, v54);
          uint64_t v47 = v53 - v54;
          char v48 = v55;
          if (v55) {
            goto LABEL_136;
          }
          unint64_t v56 = v12 - 2;
          uint64_t v57 = &v42[16 * v12 - 32];
          uint64_t v59 = *(void *)v57;
          uint64_t v58 = *((void *)v57 + 1);
          BOOL v55 = __OFSUB__(v58, v59);
          uint64_t v60 = v58 - v59;
          if (v55) {
            goto LABEL_138;
          }
          BOOL v55 = __OFADD__(v47, v60);
          uint64_t v61 = v47 + v60;
          if (v55) {
            goto LABEL_141;
          }
          if (v61 >= v52)
          {
            uint64_t v79 = &v42[16 * v44];
            uint64_t v81 = *(void *)v79;
            uint64_t v80 = *((void *)v79 + 1);
            BOOL v55 = __OFSUB__(v80, v81);
            uint64_t v82 = v80 - v81;
            if (v55) {
              goto LABEL_145;
            }
            BOOL v72 = v47 < v82;
            goto LABEL_105;
          }
        }
        else
        {
          if (v12 != 3)
          {
            uint64_t v73 = *((void *)v11 + 4);
            uint64_t v74 = *((void *)v11 + 5);
            BOOL v55 = __OFSUB__(v74, v73);
            uint64_t v66 = v74 - v73;
            char v67 = v55;
            goto LABEL_99;
          }
          uint64_t v46 = *((void *)v11 + 4);
          uint64_t v45 = *((void *)v11 + 5);
          BOOL v55 = __OFSUB__(v45, v46);
          uint64_t v47 = v45 - v46;
          char v48 = v55;
        }
        if (v48) {
          goto LABEL_137;
        }
        unint64_t v56 = v12 - 2;
        int64_t v62 = &v42[16 * v12 - 32];
        uint64_t v64 = *(void *)v62;
        uint64_t v63 = *((void *)v62 + 1);
        BOOL v65 = __OFSUB__(v63, v64);
        uint64_t v66 = v63 - v64;
        char v67 = v65;
        if (v65) {
          goto LABEL_140;
        }
        int64_t v68 = &v42[16 * v44];
        uint64_t v70 = *(void *)v68;
        uint64_t v69 = *((void *)v68 + 1);
        BOOL v55 = __OFSUB__(v69, v70);
        uint64_t v71 = v69 - v70;
        if (v55) {
          goto LABEL_143;
        }
        if (__OFADD__(v66, v71)) {
          goto LABEL_144;
        }
        if (v66 + v71 >= v47)
        {
          BOOL v72 = v47 < v71;
LABEL_105:
          if (v72) {
            unint64_t v44 = v56;
          }
          goto LABEL_107;
        }
LABEL_99:
        if (v67) {
          goto LABEL_139;
        }
        uint64_t v75 = &v42[16 * v44];
        uint64_t v77 = *(void *)v75;
        uint64_t v76 = *((void *)v75 + 1);
        BOOL v55 = __OFSUB__(v76, v77);
        uint64_t v78 = v76 - v77;
        if (v55) {
          goto LABEL_142;
        }
        if (v78 < v66) {
          goto LABEL_15;
        }
LABEL_107:
        unint64_t v83 = v44 - 1;
        if (v44 - 1 >= v12)
        {
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
          goto LABEL_154;
        }
        uint64_t v84 = v10;
        if (!v10) {
          goto LABEL_157;
        }
        uint64_t v85 = v11;
        uint64_t v86 = &v42[16 * v83];
        uint64_t v87 = *(void *)v86;
        uint64_t v88 = v42;
        unint64_t v89 = v44;
        uint64_t v90 = &v42[16 * v44];
        uint64_t v91 = *((void *)v90 + 1);
        uint64_t v92 = v84;
        sub_21CABB124((char *)(v84 + 16 * *(void *)v86), (char *)(v84 + 16 * *(void *)v90), v84 + 16 * v91, __dst);
        if (v1) {
          goto LABEL_115;
        }
        if (v91 < v87) {
          goto LABEL_132;
        }
        if (v89 > *((void *)v85 + 2)) {
          goto LABEL_133;
        }
        *(void *)uint64_t v86 = v87;
        *(void *)&v88[16 * v83 + 8] = v91;
        unint64_t v93 = *((void *)v85 + 2);
        if (v89 >= v93) {
          goto LABEL_134;
        }
        uint64_t v11 = v85;
        unint64_t v12 = v93 - 1;
        memmove(v90, v90 + 16, 16 * (v93 - 1 - v89));
        id v42 = v88;
        *((void *)v85 + 2) = v93 - 1;
        uint64_t v10 = v92;
        uint64_t v9 = v107;
        if (v93 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v12 = 1;
LABEL_15:
    uint64_t v3 = v106;
    if (v9 >= v106)
    {
      uint64_t v8 = v104;
      goto LABEL_118;
    }
  }
  if (__OFADD__(v13, v105)) {
    goto LABEL_153;
  }
  if (v13 + v105 >= v3) {
    uint64_t v32 = v3;
  }
  else {
    uint64_t v32 = v13 + v105;
  }
  if (v32 >= v13)
  {
    if (v9 != v32)
    {
      uint64_t v33 = (void *)(v10 + 16 * v9);
      do
      {
        os_log_type_t v34 = (uint64_t *)(v10 + 16 * v9);
        uint64_t v35 = *v34;
        uint64_t v36 = v34[1];
        uint64_t v37 = v13;
        uint64_t v38 = v33;
        do
        {
          BOOL v39 = v35 == *(v38 - 2) && v36 == *(v38 - 1);
          if (v39 || (sub_21CB88F50() & 1) == 0) {
            break;
          }
          if (!v10) {
            goto LABEL_156;
          }
          uint64_t v35 = *v38;
          uint64_t v36 = v38[1];
          *(_OWORD *)uint64_t v38 = *((_OWORD *)v38 - 1);
          *(v38 - 1) = v36;
          *(v38 - 2) = v35;
          v38 -= 2;
          ++v37;
        }
        while (v9 != v37);
        ++v9;
        v33 += 2;
      }
      while (v9 != v32);
      uint64_t v9 = v32;
    }
    goto LABEL_67;
  }
LABEL_154:
  __break(1u);
LABEL_155:
  __break(1u);
LABEL_156:
  __break(1u);
LABEL_157:
  __break(1u);
LABEL_158:
  __break(1u);
LABEL_159:
  __break(1u);
LABEL_160:
  uint64_t result = sub_21CB88CF0();
  __break(1u);
  return result;
}

uint64_t sub_21CA4D54C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (a3 != a2)
  {
    uint64_t v4 = a3;
    uint64_t v6 = result;
    uint64_t v7 = *a4;
    uint64_t v8 = *a4 + 16 * a3;
LABEL_5:
    uint64_t v9 = (uint64_t *)(v7 + 16 * v4);
    uint64_t result = *v9;
    uint64_t v10 = v9[1];
    uint64_t v11 = v6;
    unint64_t v12 = (uint64_t *)v8;
    while (1)
    {
      BOOL v13 = result == *(v12 - 2) && v10 == *(v12 - 1);
      if (v13 || (uint64_t result = sub_21CB88F50(), (result & 1) == 0))
      {
LABEL_4:
        ++v4;
        v8 += 16;
        if (v4 == a2) {
          return result;
        }
        goto LABEL_5;
      }
      if (!v7) {
        break;
      }
      uint64_t result = *v12;
      uint64_t v10 = v12[1];
      *(_OWORD *)unint64_t v12 = *((_OWORD *)v12 - 1);
      *(v12 - 1) = v10;
      *(v12 - 2) = result;
      v12 -= 2;
      if (v4 == ++v11) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

void *sub_21CA4D61C(uint64_t a1)
{
  return sub_21CA4E9B4(a1, (uint64_t *)&unk_267C96F20, (uint64_t (*)(uint64_t *, void *, uint64_t, uint64_t))sub_21CA4EAA4);
}

unint64_t sub_21CA4D63C()
{
  unint64_t result = qword_267C96FE0;
  if (!qword_267C96FE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C96FE0);
  }
  return result;
}

uint64_t sub_21CA4D690()
{
  char v1 = *(unsigned char *)(v0 + 32);
  sub_21CA57E34((uint64_t *)&unk_267C97590);
  uint64_t v2 = swift_allocObject();
  if (v1)
  {
    *(_OWORD *)(v2 + 16) = xmmword_21CB901E0;
    os_log_type_t v34 = (void *)*MEMORY[0x263EFDFC8];
    uint64_t v3 = *MEMORY[0x263EFDFC8];
    uint64_t v35 = (void *)*MEMORY[0x263EFE040];
    *(void *)(v2 + 32) = *MEMORY[0x263EFE040];
    *(void *)(v2 + 40) = v3;
    uint64_t v32 = (void *)*MEMORY[0x263EFDFB8];
    uint64_t v4 = *MEMORY[0x263EFDFB8];
    uint64_t v33 = (void *)*MEMORY[0x263EFE038];
    *(void *)(v2 + 48) = *MEMORY[0x263EFE038];
    *(void *)(v2 + 56) = v4;
    uint64_t v5 = (void *)*MEMORY[0x263EFE0B8];
    uint64_t v6 = (void *)*MEMORY[0x263EFE048];
    *(void *)(v2 + 64) = *MEMORY[0x263EFE0B8];
    *(void *)(v2 + 72) = v6;
    id v7 = (id)*MEMORY[0x263EFE050];
    uint64_t v8 = (void *)*MEMORY[0x263EFDFF0];
    *(void *)(v2 + 80) = *MEMORY[0x263EFE050];
    *(void *)(v2 + 88) = v8;
    uint64_t v9 = (void *)*MEMORY[0x263EFE148];
    uint64_t v10 = (void *)*MEMORY[0x263EFE140];
    *(void *)(v2 + 96) = *MEMORY[0x263EFE148];
    *(void *)(v2 + 104) = v10;
    uint64_t v11 = (void *)*MEMORY[0x263EFDF80];
    *(void *)(v2 + 112) = v7;
    *(void *)(v2 + 120) = v11;
    unint64_t v12 = (void *)*MEMORY[0x263EFE070];
    *(void *)(v2 + 128) = *MEMORY[0x263EFE070];
    uint64_t v36 = v2;
    sub_21CB88530();
    uint64_t v13 = v36;
    uint64_t v14 = v7;
  }
  else
  {
    *(_OWORD *)(v2 + 16) = xmmword_21CB901D0;
    uint64_t v14 = (void *)*MEMORY[0x263EFE040];
    uint64_t v15 = (void *)*MEMORY[0x263EFDFC8];
    *(void *)(v2 + 32) = *MEMORY[0x263EFE040];
    *(void *)(v2 + 40) = v15;
    uint64_t v35 = v15;
    uint64_t v33 = (void *)*MEMORY[0x263EFDFB8];
    uint64_t v16 = *MEMORY[0x263EFDFB8];
    os_log_type_t v34 = (void *)*MEMORY[0x263EFE038];
    *(void *)(v2 + 48) = *MEMORY[0x263EFE038];
    *(void *)(v2 + 56) = v16;
    uint64_t v5 = (void *)*MEMORY[0x263EFE048];
    uint64_t v32 = (void *)*MEMORY[0x263EFE0B8];
    *(void *)(v2 + 64) = *MEMORY[0x263EFE0B8];
    *(void *)(v2 + 72) = v5;
    char v17 = (void *)*MEMORY[0x263EFE050];
    uint64_t v6 = (void *)*MEMORY[0x263EFDFF0];
    *(void *)(v2 + 80) = *MEMORY[0x263EFE050];
    *(void *)(v2 + 88) = v6;
    uint64_t v8 = (void *)*MEMORY[0x263EFE148];
    uint64_t v9 = (void *)*MEMORY[0x263EFDFF8];
    *(void *)(v2 + 96) = *MEMORY[0x263EFE148];
    *(void *)(v2 + 104) = v9;
    uint64_t v10 = (void *)*MEMORY[0x263EFE140];
    *(void *)(v2 + 112) = *MEMORY[0x263EFE140];
    *(void *)(v2 + 120) = v17;
    uint64_t v11 = (void *)*MEMORY[0x263EFDF80];
    unint64_t v12 = (void *)*MEMORY[0x263EFE070];
    *(void *)(v2 + 128) = *MEMORY[0x263EFDF80];
    *(void *)(v2 + 136) = v12;
    uint64_t v37 = v2;
    sub_21CB88530();
    uint64_t v13 = v37;
    id v7 = v17;
  }
  id v18 = v7;
  id v19 = v14;
  id v20 = v35;
  id v21 = v34;
  id v22 = v33;
  id v23 = v32;
  id v24 = v5;
  id v25 = v6;
  id v26 = v8;
  id v27 = v9;
  id v28 = v10;
  id v29 = v11;
  id v30 = v12;
  return v13;
}

uint64_t sub_21CA4D908(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, unint64_t a5)
{
  unint64_t v89 = a5;
  id v86 = a3;
  uint64_t v103 = a2;
  uint64_t v8 = sub_21CB87590();
  uint64_t v84 = *(void *)(v8 - 8);
  uint64_t v85 = v8;
  MEMORY[0x270FA5388](v8);
  unint64_t v83 = (char *)&v79 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_21CA57E34(&qword_267C96F10);
  MEMORY[0x270FA5388](v10 - 8);
  unint64_t v12 = (char *)&v79 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v87 = type metadata accessor for FMFFriend();
  uint64_t v13 = *(void *)(v87 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v87);
  uint64_t v16 = (uint64_t *)((char *)&v79 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v14);
  uint64_t v82 = (uint64_t)&v79 - v17;
  uint64_t v88 = type metadata accessor for FMFLocation();
  MEMORY[0x270FA5388](v88);
  id v19 = (uint64_t *)((char *)&v79 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_21CA571E8(a1, (uint64_t)v19, (uint64_t (*)(void))type metadata accessor for FMFLocation);
  uint64_t v20 = v19[1];
  if (!v20) {
    return sub_21CA57050((uint64_t)v19, (uint64_t (*)(void))type metadata accessor for FMFLocation);
  }
  uint64_t v80 = a4;
  uint64_t v81 = v5;
  uint64_t v90 = v19;
  uint64_t v21 = *v19;
  uint64_t v98 = 91;
  unint64_t v99 = 0xE100000000000000;
  sub_21CB883D0();
  uint64_t v101 = v98;
  unint64_t v102 = v99;
  uint64_t v22 = *(void *)(v103 + 16);
  if (v22)
  {
    uint64_t v23 = v103 + ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80));
    uint64_t v24 = *(void *)(v13 + 72);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_21CA571E8(v23, (uint64_t)v16, (uint64_t (*)(void))type metadata accessor for FMFFriend);
      BOOL v25 = v21 == *v16 && v20 == v16[1];
      if (v25 || (sub_21CB88F50() & 1) != 0) {
        break;
      }
      sub_21CA57050((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for FMFFriend);
      v23 += v24;
      if (!--v22)
      {
        swift_bridgeObjectRelease();
        goto LABEL_14;
      }
    }
    swift_bridgeObjectRelease();
    sub_21CA591A4((uint64_t)v16, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for FMFFriend);
    uint64_t v27 = 0;
  }
  else
  {
    swift_bridgeObjectRetain();
LABEL_14:
    uint64_t v27 = 1;
  }
  uint64_t v28 = v87;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v12, v27, 1, v87);
  swift_bridgeObjectRelease();
  int v29 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48))(v12, 1, v28);
  uint64_t v30 = (uint64_t)v90;
  if (v29 == 1)
  {
    sub_21CA1B88C((uint64_t)v12, &qword_267C96F10);
  }
  else
  {
    uint64_t v31 = (uint64_t)v12;
    uint64_t v32 = v82;
    sub_21CA591A4(v31, v82, (uint64_t (*)(void))type metadata accessor for FMFFriend);
    uint64_t v33 = (void *)(v32 + *(int *)(v28 + 76));
    if (v33[1])
    {
      uint64_t v34 = v33[5];
      unint64_t v35 = v33[6];
      uint64_t v36 = HIBYTE(v35) & 0xF;
      if ((v35 & 0x2000000000000000) == 0) {
        uint64_t v36 = v34 & 0xFFFFFFFFFFFFLL;
      }
      if (v36) {
        swift_bridgeObjectRetain();
      }
    }
    uint64_t v98 = 47;
    unint64_t v99 = 0xE100000000000000;
    sub_21CB883D0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_21CB883D0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_21CB883D0();
    swift_bridgeObjectRelease();
    sub_21CA57050(v32, (uint64_t (*)(void))type metadata accessor for FMFFriend);
  }
  sub_21CB883D0();
  uint64_t v37 = v30 + *(int *)(v88 + 44);
  sub_21CA26A4C(v37, (uint64_t)v97, &qword_267C951F0);
  sub_21CA26A4C((uint64_t)v97, (uint64_t)&v98, &qword_267C951F0);
  if (sub_21CA7CDBC((uint64_t)&v98) != 1)
  {
    id v42 = v100;
    id v43 = objc_msgSend(v42, sel_timestamp);
    unint64_t v44 = v83;
    sub_21CB87560();

    uint64_t v45 = (void *)sub_21CB87510();
    (*(void (**)(char *, uint64_t))(v84 + 8))(v44, v85);
    id v46 = objc_msgSend(v86, sel_stringFromDate_, v45);

    uint64_t v47 = sub_21CB882F0();
    uint64_t v103 = v48;

    uint64_t v93 = 0;
    unint64_t v94 = 0xE000000000000000;
    sub_21CB88B70();
    swift_bridgeObjectRelease();
    uint64_t v93 = 0x100000000000002ELL;
    unint64_t v94 = 0x800000021CB97630;
    char v49 = *(unsigned char *)(v30 + 33);
    uint64_t v50 = v42;
    LOBYTE(v92[0]) = v49;
    sub_21CB88310();
    sub_21CB883D0();
    swift_bridgeObjectRelease();
    uint64_t v87 = v93;
    uint64_t v88 = v94;
    sub_21CA57E34(&qword_267C97020);
    uint64_t v51 = swift_allocObject();
    *(_OWORD *)(v51 + 16) = xmmword_21CB8E120;
    objc_msgSend(v50, sel_coordinate);
    uint64_t v52 = MEMORY[0x263F8D538];
    uint64_t v53 = MEMORY[0x263F8D5B8];
    *(void *)(v51 + 56) = MEMORY[0x263F8D538];
    *(void *)(v51 + 64) = v53;
    *(void *)(v51 + 32) = v54;
    objc_msgSend(v50, sel_coordinate);
    *(void *)(v51 + 96) = v52;
    *(void *)(v51 + 104) = v53;
    *(void *)(v51 + 72) = v55;
    uint64_t v56 = MEMORY[0x263F8D310];
    *(void *)(v51 + 136) = MEMORY[0x263F8D310];
    unint64_t v57 = sub_21CA4ECA4();
    *(void *)(v51 + 144) = v57;
    uint64_t v58 = v103;
    *(void *)(v51 + 112) = v47;
    *(void *)(v51 + 120) = v58;
    sub_21CA26A4C(v37, (uint64_t)v92, &qword_267C951F0);
    sub_21CA26A4C((uint64_t)v92, (uint64_t)&v93, &qword_267C951F0);
    if (sub_21CA7CDBC((uint64_t)&v93) == 1 || (unint64_t v59 = v96) == 0)
    {
      BOOL v65 = (uint64_t *)(v51 + 152);
      *(void *)(v51 + 176) = v56;
      *(void *)(v51 + 184) = v57;
    }
    else
    {
      uint64_t v60 = v95;
      uint64_t v61 = sub_21CB88320();
      uint64_t v63 = v62;
      swift_bridgeObjectRetain();
      v64._countAndFlagsBits = v61;
      v64._object = v63;
      FMFDefaultLabel.init(rawValue:)(v64);
      if (v91 == 5)
      {
        BOOL v65 = (uint64_t *)(v51 + 152);
        *(void *)(v51 + 176) = v56;
        *(void *)(v51 + 184) = v57;
LABEL_33:
        *BOOL v65 = v60;
        goto LABEL_34;
      }
      uint64_t v60 = FMFDefaultLabel.localizedLabel.getter();
      unint64_t v67 = v66;
      swift_bridgeObjectRelease();
      BOOL v65 = (uint64_t *)(v51 + 152);
      *(void *)(v51 + 176) = v56;
      *(void *)(v51 + 184) = v57;
      if (v67)
      {
        unint64_t v59 = v67;
        goto LABEL_33;
      }
    }
    *BOOL v65 = 7104878;
    unint64_t v59 = 0xE300000000000000;
LABEL_34:
    *(void *)(v51 + 160) = v59;
    uint64_t v39 = sub_21CB88300();
    unint64_t v41 = v68;
    swift_bridgeObjectRelease();

    uint64_t v30 = (uint64_t)v90;
    goto LABEL_35;
  }
  uint64_t v93 = 0;
  unint64_t v94 = 0xE000000000000000;
  sub_21CB88B70();
  swift_bridgeObjectRelease();
  uint64_t v93 = 0x1000000000000023;
  unint64_t v94 = 0x800000021CB97600;
  LOBYTE(v92[0]) = *(unsigned char *)(v30 + 33);
  sub_21CB88310();
  sub_21CB883D0();
  swift_bridgeObjectRelease();
  sub_21CA57E34(&qword_267C97020);
  uint64_t v38 = swift_allocObject();
  *(_OWORD *)(v38 + 16) = xmmword_21CB8B220;
  *(void *)(v38 + 56) = MEMORY[0x263F8D310];
  *(void *)(v38 + 64) = sub_21CA4ECA4();
  *(void *)(v38 + 32) = 7104878;
  *(void *)(v38 + 40) = 0xE300000000000000;
  uint64_t v39 = sub_21CB88300();
  unint64_t v41 = v40;
  swift_bridgeObjectRelease();
LABEL_35:
  unint64_t v69 = v89;
  if (qword_267C94990 != -1) {
    swift_once();
  }
  uint64_t v70 = sub_21CB880A0();
  sub_21CA4CC18(v70, (uint64_t)qword_267CA5368);
  uint64_t v103 = v101;
  unint64_t v71 = v102;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  BOOL v72 = sub_21CB88070();
  os_log_type_t v73 = sub_21CB88880();
  if (os_log_type_enabled(v72, v73))
  {
    uint64_t v74 = swift_slowAlloc();
    uint64_t v87 = v39;
    unint64_t v75 = v69;
    uint64_t v76 = v74;
    uint64_t v88 = swift_slowAlloc();
    uint64_t v93 = v88;
    *(_DWORD *)uint64_t v76 = 136315650;
    swift_bridgeObjectRetain();
    v92[0] = sub_21CA4E450(v80, v75, &v93);
    sub_21CB889C0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v76 + 12) = 2080;
    swift_bridgeObjectRetain();
    v92[0] = sub_21CA4E450(v103, v71, &v93);
    sub_21CB889C0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v76 + 22) = 2080;
    swift_bridgeObjectRetain();
    v92[0] = sub_21CA4E450(v87, v41, &v93);
    sub_21CB889C0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_21CA00000, v72, v73, "👀 FMFSecureLocCtrl: %s location for %s: %s", (uint8_t *)v76, 0x20u);
    uint64_t v77 = v88;
    swift_arrayDestroy();
    MEMORY[0x21D4B6B70](v77, -1, -1);
    MEMORY[0x21D4B6B70](v76, -1, -1);

    uint64_t v78 = (uint64_t)v90;
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();

    uint64_t v78 = v30;
  }
  return sub_21CA57050(v78, (uint64_t (*)(void))type metadata accessor for FMFLocation);
}

uint64_t sub_21CA4E450(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6 = sub_21CA4E580(v12, 0, 0, 1, a1, a2);
  uint64_t v7 = v12[0];
  if (v6)
  {
    uint64_t v8 = v6;
    uint64_t ObjectType = swift_getObjectType();
    v12[0] = v8;
    uint64_t v9 = *a3;
    if (*a3)
    {
      sub_21CA4E524((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    uint64_t ObjectType = MEMORY[0x263F8DBE0];
    v12[0] = a1;
    v12[1] = a2;
    uint64_t v10 = *a3;
    if (*a3)
    {
      sub_21CA4E524((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  sub_21CA2B0D0((uint64_t)v12);
  return v7;
}

uint64_t sub_21CA4E524(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_21CA4E580(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        uint64_t v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (void *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_21CB889D0();
            uint64_t result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    uint64_t result = sub_21CA4E73C(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0) {
    goto LABEL_13;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    uint64_t v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  uint64_t v8 = sub_21CB88BD0();
  if (!v8)
  {
    sub_21CB88CF0();
    __break(1u);
LABEL_17:
    uint64_t result = sub_21CB88D50();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0) {
    return 0;
  }
  else {
    return swift_unknownObjectRetain();
  }
}

uint64_t sub_21CA4E73C(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = sub_21CA4E7D4(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_21CA5D530(0, *(void *)(v2 + 16) + 1, 1, (char *)v2);
  }
  unint64_t v4 = *(void *)(v2 + 16);
  unint64_t v3 = *(void *)(v2 + 24);
  if (v4 >= v3 >> 1) {
    uint64_t v2 = sub_21CA5D530(v3 > 1, v4 + 1, 1, (char *)v2);
  }
  *(void *)(v2 + 16) = v4 + 1;
  *(unsigned char *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_21CA4E7D4(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0) {
    goto LABEL_10;
  }
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2)
  {
    while (1)
    {
      unint64_t v3 = sub_21CA4E94C(v2, 0);
      if (v2 < 0) {
        break;
      }
      unint64_t v4 = v3;
      uint64_t v5 = sub_21CB88B80();
      if (v6) {
        goto LABEL_14;
      }
      if (v5 == v2) {
        return (uint64_t)v4;
      }
      sub_21CB88CF0();
      __break(1u);
LABEL_10:
      uint64_t v2 = sub_21CB88400();
      if (!v2) {
        return MEMORY[0x263F8EE78];
      }
    }
    sub_21CB88D50();
    __break(1u);
LABEL_14:
    uint64_t result = sub_21CB88CF0();
    __break(1u);
  }
  else
  {
    return MEMORY[0x263F8EE78];
  }
  return result;
}

void *sub_21CA4E94C(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return (void *)MEMORY[0x263F8EE78];
  }
  sub_21CA57E34(&qword_267C94B08);
  unint64_t v4 = (void *)swift_allocObject();
  size_t v5 = j__malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

void *sub_21CA4E9B4(uint64_t a1, uint64_t *a2, uint64_t (*a3)(uint64_t *, void *, uint64_t, uint64_t))
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3) {
    return (void *)MEMORY[0x263F8EE78];
  }
  sub_21CA57E34(a2);
  char v6 = (void *)swift_allocObject();
  int64_t v7 = j__malloc_size(v6);
  uint64_t v8 = v7 - 32;
  if (v7 < 32) {
    uint64_t v8 = v7 - 17;
  }
  _OWORD v6[2] = v3;
  v6[3] = 2 * (v8 >> 4);
  uint64_t v9 = a3(&v11, v6 + 4, v3, a1);
  swift_bridgeObjectRetain();
  sub_21CA7CFF0();
  if (v9 != v3)
  {
    __break(1u);
    return (void *)MEMORY[0x263F8EE78];
  }
  return v6;
}

uint64_t sub_21CA4EAA4(uint64_t result, void *a2, uint64_t a3, uint64_t a4)
{
  size_t v5 = (void *)result;
  uint64_t v6 = a4 + 56;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 56);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_38:
    *size_t v5 = a4;
    v5[1] = v6;
    uint64_t v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  uint64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    uint64_t v20 = (void *)(*(void *)(a4 + 48) + 16 * v16);
    uint64_t v21 = v20[1];
    *uint64_t v11 = *v20;
    v11[1] = v21;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 2;
    uint64_t result = swift_bridgeObjectRetain();
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18) {
      break;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18) {
    goto LABEL_14;
  }
  int64_t v19 = v17 + 2;
  if (v17 + 2 >= v14) {
    goto LABEL_33;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18) {
    goto LABEL_17;
  }
  int64_t v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17 + 2;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    int64_t v17 = v12;
    goto LABEL_18;
  }
  int64_t v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    unint64_t v9 = 0;
LABEL_37:
    uint64_t v10 = v13;
    goto LABEL_38;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    int64_t v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v17 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v17 >= v14)
    {
      unint64_t v9 = 0;
      int64_t v12 = v14 - 1;
      goto LABEL_37;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v19;
    if (v18) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

unint64_t sub_21CA4ECA4()
{
  unint64_t result = qword_267C97028;
  if (!qword_267C97028)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C97028);
  }
  return result;
}

uint64_t sub_21CA4ECF8()
{
  uint64_t v1 = sub_21CA57E34(&qword_267C97278);
  uint64_t v2 = MEMORY[0x270FA5388](v1 - 8);
  v681 = (char *)&v662 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  v680 = (uint64_t *)((char *)&v662 - v5);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  v700 = (char *)&v662 - v7;
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  v699 = (uint64_t *)((char *)&v662 - v9);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  v717 = (char *)&v662 - v11;
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  v718 = (uint64_t *)((char *)&v662 - v13);
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  v720 = (char *)&v662 - v15;
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  v719 = (uint64_t *)((char *)&v662 - v17);
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  v721 = (char *)&v662 - v19;
  MEMORY[0x270FA5388](v18);
  v725 = (uint64_t *)((char *)&v662 - v20);
  uint64_t v742 = type metadata accessor for FMFLocation();
  uint64_t v672 = *(void *)(v742 - 8);
  MEMORY[0x270FA5388](v742);
  v676 = (char *)&v662 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v722 = sub_21CB880A0();
  uint64_t v711 = *(void *)(v722 - 8);
  uint64_t v22 = MEMORY[0x270FA5388](v722);
  v713 = (char *)&v662 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = MEMORY[0x270FA5388](v22);
  v668 = (char *)&v662 - v25;
  uint64_t v26 = MEMORY[0x270FA5388](v24);
  v665 = (char *)&v662 - v27;
  uint64_t v28 = MEMORY[0x270FA5388](v26);
  v710 = (uint64_t (*)(void))((char *)&v662 - v29);
  uint64_t v30 = MEMORY[0x270FA5388](v28);
  v666 = (char *)&v662 - v31;
  MEMORY[0x270FA5388](v30);
  v667 = (char *)&v662 - v32;
  uint64_t v33 = sub_21CA57E34((uint64_t *)&unk_267C96EF0);
  MEMORY[0x270FA5388](v33 - 8);
  uint64_t v736 = (uint64_t)&v662 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = sub_21CA57E34(&qword_267C95040);
  MEMORY[0x270FA5388](v35 - 8);
  uint64_t v743 = (uint64_t)&v662 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = sub_21CA57E34(&qword_267C96F10);
  uint64_t v38 = MEMORY[0x270FA5388](v37 - 8);
  v679 = (uint64_t *)((char *)&v662 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v40 = MEMORY[0x270FA5388](v38);
  v669 = (char *)&v662 - v41;
  uint64_t v42 = MEMORY[0x270FA5388](v40);
  v686 = (char *)&v662 - v43;
  uint64_t v44 = MEMORY[0x270FA5388](v42);
  unint64_t v706 = (unint64_t)&v662 - v45;
  uint64_t v46 = MEMORY[0x270FA5388](v44);
  v677 = (char *)&v662 - v47;
  uint64_t v48 = MEMORY[0x270FA5388](v46);
  uint64_t v685 = (uint64_t)&v662 - v49;
  uint64_t v50 = MEMORY[0x270FA5388](v48);
  v687 = (char *)&v662 - v51;
  uint64_t v52 = MEMORY[0x270FA5388](v50);
  uint64_t v692 = (uint64_t)&v662 - v53;
  uint64_t v54 = MEMORY[0x270FA5388](v52);
  v694 = (char *)&v662 - v55;
  uint64_t v56 = MEMORY[0x270FA5388](v54);
  uint64_t v691 = (uint64_t)&v662 - v57;
  uint64_t v58 = MEMORY[0x270FA5388](v56);
  v693 = (char *)&v662 - v59;
  uint64_t v60 = MEMORY[0x270FA5388](v58);
  uint64_t v746 = (uint64_t)&v662 - v61;
  MEMORY[0x270FA5388](v60);
  v707 = (char *)&v662 - v62;
  uint64_t v748 = type metadata accessor for FMFFriend();
  uint64_t v745 = *(void *)(v748 - 8);
  uint64_t v63 = *(void *)(v745 + 64);
  uint64_t v64 = MEMORY[0x270FA5388](v748);
  v663 = (char *)&v662 - ((v63 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v65 = MEMORY[0x270FA5388](v64);
  v698 = (char *)&v662 - v66;
  uint64_t v67 = MEMORY[0x270FA5388](v65);
  uint64_t v715 = (uint64_t)&v662 - v68;
  uint64_t v69 = MEMORY[0x270FA5388](v67);
  uint64_t v731 = (uint64_t)&v662 - v70;
  uint64_t v71 = MEMORY[0x270FA5388](v69);
  v716 = (char *)&v662 - v72;
  uint64_t v73 = MEMORY[0x270FA5388](v71);
  v675 = (uint64_t *)((char *)&v662 - v74);
  uint64_t v75 = MEMORY[0x270FA5388](v73);
  v682 = (uint64_t *)((char *)&v662 - v76);
  uint64_t v77 = MEMORY[0x270FA5388](v75);
  v683 = (uint64_t *)((char *)&v662 - v78);
  uint64_t v79 = MEMORY[0x270FA5388](v77);
  v673 = (uint64_t *)((char *)&v662 - v80);
  uint64_t v81 = MEMORY[0x270FA5388](v79);
  v671 = (uint64_t *)((char *)&v662 - v82);
  uint64_t v83 = MEMORY[0x270FA5388](v81);
  uint64_t v684 = (uint64_t)&v662 - v84;
  uint64_t v85 = MEMORY[0x270FA5388](v83);
  v737 = (unsigned int (*)(void, void, void))((char *)&v662 - v86);
  uint64_t v87 = MEMORY[0x270FA5388](v85);
  uint64_t v674 = (uint64_t)&v662 - v88;
  uint64_t v89 = MEMORY[0x270FA5388](v87);
  v678 = (uint64_t *)((char *)&v662 - v90);
  uint64_t v91 = MEMORY[0x270FA5388](v89);
  uint64_t v690 = (uint64_t)&v662 - v92;
  uint64_t v93 = MEMORY[0x270FA5388](v91);
  v708 = (uint64_t *)((char *)&v662 - v94);
  uint64_t v95 = MEMORY[0x270FA5388](v93);
  v740 = (uint64_t (**)())((char *)&v662 - v96);
  uint64_t v97 = MEMORY[0x270FA5388](v95);
  v744 = (uint64_t *)((char *)&v662 - v98);
  uint64_t v99 = MEMORY[0x270FA5388](v97);
  v701 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&v662 - v100);
  MEMORY[0x270FA5388](v99);
  uint64_t v697 = (uint64_t)&v662 - v101;
  uint64_t v741 = type metadata accessor for FMFIntermediateFriend();
  v730 = *(uint64_t (**)())(v741 - 8);
  uint64_t v102 = MEMORY[0x270FA5388](v741);
  v724 = (uint64_t *)((char *)&v662 - ((v103 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v104 = MEMORY[0x270FA5388](v102);
  uint64_t v709 = (uint64_t)&v662 - v105;
  uint64_t v106 = MEMORY[0x270FA5388](v104);
  uint64_t v108 = (uint64_t (*)())((char *)&v662 - v107);
  MEMORY[0x270FA5388](v106);
  uint64_t v110 = (uint64_t *)((char *)&v662 - v109);
  uint64_t v111 = type metadata accessor for FMFLocationAlert();
  uint64_t v112 = *(uint64_t (**)(void))(v111 - 8);
  uint64_t v113 = MEMORY[0x270FA5388](v111);
  uint64_t v114 = MEMORY[0x270FA5388](v113);
  int v116 = (char *)&v662 - v115;
  uint64_t v117 = MEMORY[0x270FA5388](v114);
  uint64_t v118 = MEMORY[0x270FA5388](v117);
  unint64_t v120 = (unint64_t)&v662 - v119;
  uint64_t v121 = (char *)MEMORY[0x270FA5388](v118);
  uint64_t v125 = (char *)&v662 - v124;
  uint64_t v126 = *(void *)(v0 + 576);
  if (v126)
  {
    swift_bridgeObjectRetain();
    return v126;
  }
  uint64_t v732 = v123;
  v734 = v122;
  v733 = v121;
  v705 = v110;
  v738 = v108;
  uint64_t v714 = v63;
  uint64_t v127 = swift_allocObject();
  uint64_t v670 = v127;
  *(void *)(v127 + 16) = MEMORY[0x263F8EE80];
  v747 = (uint64_t *)(v127 + 16);
  uint64_t v695 = v0;
  unint64_t v128 = sub_21CA59F08();
  uint64_t v129 = (uint64_t (*)(void))MEMORY[0x263F8EE78];
  *(void *)&long long v764 = MEMORY[0x263F8EE78];
  uint64_t v130 = (void *)sub_21CA59DC8(v128);
  v739 = v112;
  v729 = v116;
  id v735 = v130;
  if (!v130)
  {
    uint64_t v723 = (uint64_t)v129;
    uint64_t v132 = (int *)v733;
LABEL_16:
    swift_bridgeObjectRelease();
    uint64_t v0 = v695;
    unint64_t v120 = sub_21CA59F08();
    *(void *)&long long v764 = v129;
    int v139 = (void *)sub_21CA59DC8(v120);
    uint64_t v140 = v748;
    id v735 = v139;
    if (v139)
    {
      unint64_t v141 = 0;
      while (1)
      {
        sub_21CAC955C(v141, 1, v120);
        uint64_t v133 = v141 + 1;
        if (__OFADD__(v141, 1)) {
          goto LABEL_357;
        }
        uint64_t v142 = v140;
        uint64_t v0 = (uint64_t)type metadata accessor for FMFLocationAlert;
        sub_21CA571E8(v120+ ((*((unsigned __int8 *)v112 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v112 + 80))+ *((void *)v112 + 9) * v141, (uint64_t)v116, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
        uint64_t v143 = v132;
        int v144 = v116[v132[24]];
        uint64_t v145 = v734;
        sub_21CA571E8((uint64_t)v116, (uint64_t)v734, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
        if (v144 == 1)
        {
          uint64_t v0 = *((unsigned __int8 *)&v145->isa + v143[25]);
          sub_21CA57050((uint64_t)v145, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
          uint64_t v132 = v143;
          if (v0)
          {
            uint64_t v146 = (uint64_t)v116;
            uint64_t v147 = v732;
            sub_21CA591A4(v146, v732, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
            uint64_t v0 = (uint64_t)&v764;
            sub_21CB29530();
            unint64_t v149 = *(void *)(v764 + 16);
            unint64_t v148 = *(void *)(v764 + 24);
            uint64_t v112 = v739;
            uint64_t v140 = v142;
            if (v149 >= v148 >> 1) {
              sub_21CA7C050(v148 > 1, v149 + 1, 1);
            }
            sub_21CB295B4(v149, v147);
            uint64_t v132 = (int *)v733;
            int v116 = v729;
            goto LABEL_20;
          }
        }
        else
        {
          sub_21CA57050((uint64_t)v145, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
          uint64_t v132 = v143;
        }
        sub_21CA57050((uint64_t)v116, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
        uint64_t v112 = v739;
        uint64_t v140 = v142;
LABEL_20:
        ++v141;
        if ((id)v133 == v735)
        {
          v739 = (uint64_t (*)(void))v764;
          goto LABEL_29;
        }
      }
    }
    v739 = v129;
LABEL_29:
    swift_bridgeObjectRelease();
    uint64_t v150 = v695;
    uint64_t v151 = *(void *)(v695 + 544);
    uint64_t v152 = sub_21CA59DC8(v151);
    uint64_t v153 = v743;
    uint64_t v133 = v745;
    int v154 = v705;
    uint64_t v704 = v152;
    if (!v152)
    {
      id v735 = 0;
LABEL_53:
      uint64_t v0 = v722;
      unint64_t v120 = (unint64_t)v667;
      if (qword_267C94990 == -1) {
        goto LABEL_54;
      }
      goto LABEL_368;
    }
    uint64_t v155 = *(void *)(v150 + 536) + 24;
    uint64_t v0 = (uint64_t)v730;
    v702 = (uint64_t (*)(void))(v151
                                          + ((*((unsigned __int8 *)v730 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v730 + 80)));
    uint64_t v664 = v151;
    swift_bridgeObjectRetain();
    v703 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v155;
    swift_beginAccess();
    uint64_t v156 = 0;
    id v735 = 0;
    uint64_t v732 = v133 + 56;
    v696 = (uint64_t *)(v0 + 56);
    v688 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v133 + 48);
    v689 = (uint64_t (**)())(v672 + 56);
    unint64_t v120 = (unint64_t)v707;
    while (1)
    {
      if (__OFADD__(v156, 1)) {
        goto LABEL_358;
      }
      v733 = v156 + 1;
      uint64_t v171 = *((void *)v730 + 9);
      v734 = v156;
      sub_21CA571E8((uint64_t)v702 + v171 * (void)v156, (uint64_t)v154, (uint64_t (*)(void))type metadata accessor for FMFIntermediateFriend);
      uint64_t v172 = *(void *)v703;
      if (*(void *)(*(void *)v703 + 16))
      {
        uint64_t v174 = *v154;
        uint64_t v173 = v154[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        unint64_t v175 = sub_21CA5BCE0(v174, v173);
        if (v176)
        {
          sub_21CA571E8(*(void *)(v172 + 56) + *(void *)(v133 + 72) * v175, v120, (uint64_t (*)(void))type metadata accessor for FMFFriend);
          int v157 = *(void (**)(unint64_t, uint64_t, uint64_t, uint64_t))(v133 + 56);
          v157(v120, 0, 1, v140);
        }
        else
        {
          int v157 = *(void (**)(unint64_t, uint64_t, uint64_t, uint64_t))v732;
          (*(void (**)(unint64_t, uint64_t, uint64_t, uint64_t))v732)(v120, 1, 1, v140);
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (((unsigned int (*)(unint64_t, uint64_t, uint64_t))*v688)(v120, 1, v140) != 1)
        {
          uint64_t v177 = v697;
          sub_21CA591A4(v120, v697, (uint64_t (*)(void))type metadata accessor for FMFFriend);
          sub_21CA571E8(v177, (uint64_t)v701, (uint64_t (*)(void))type metadata accessor for FMFFriend);
          swift_bridgeObjectRetain();
          uint64_t v133 = (uint64_t)v747;
          int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          *(void *)&long long v764 = *(void *)v133;
          uint64_t v0 = v764;
          *(void *)uint64_t v133 = 0x8000000000000000;
          unint64_t v120 = sub_21CA5BCE0(v174, v173);
          uint64_t v180 = *(void *)(v0 + 16);
          BOOL v181 = (v179 & 1) == 0;
          uint64_t v182 = v180 + v181;
          if (__OFADD__(v180, v181)) {
            goto LABEL_364;
          }
          char v183 = v179;
          if (*(void *)(v0 + 24) >= v182)
          {
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            {
              uint64_t v0 = (uint64_t)&v764;
              sub_21CB858E4();
            }
          }
          else
          {
            sub_21CB81BCC(v182, isUniquelyReferenced_nonNull_native);
            uint64_t v0 = v764;
            unint64_t v184 = sub_21CA5BCE0(v174, v173);
            if ((v183 & 1) != (v185 & 1)) {
              goto LABEL_380;
            }
            unint64_t v120 = v184;
          }
          uint64_t v153 = v743;
          uint64_t v133 = v764;
          if (v183)
          {
            sub_21CA5C95C((uint64_t)v701, *(void *)(v764 + 56) + *(void *)(v745 + 72) * v120, (uint64_t (*)(void))type metadata accessor for FMFFriend);
          }
          else
          {
            *(void *)(v764 + 8 * (v120 >> 6) + 64) |= 1 << v120;
            uint64_t v186 = (uint64_t *)(*(void *)(v133 + 48) + 16 * v120);
            *uint64_t v186 = v174;
            v186[1] = v173;
            sub_21CA591A4((uint64_t)v701, *(void *)(v133 + 56) + *(void *)(v745 + 72) * v120, (uint64_t (*)(void))type metadata accessor for FMFFriend);
            uint64_t v187 = *(void *)(v133 + 16);
            BOOL v188 = __OFADD__(v187, 1);
            uint64_t v189 = v187 + 1;
            if (v188) {
              goto LABEL_367;
            }
            *(void *)(v133 + 16) = v189;
            swift_bridgeObjectRetain();
          }
          uint64_t v0 = *v747;
          uint64_t *v747 = v133;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_21CA57050(v697, (uint64_t (*)(void))type metadata accessor for FMFFriend);
          int v154 = v705;
          sub_21CA57050((uint64_t)v705, (uint64_t (*)(void))type metadata accessor for FMFIntermediateFriend);
          unint64_t v120 = (unint64_t)v707;
          goto LABEL_33;
        }
      }
      else
      {
        int v157 = *(void (**)(unint64_t, uint64_t, uint64_t, uint64_t))v732;
        (*(void (**)(unint64_t, uint64_t, uint64_t, uint64_t))v732)(v120, 1, 1, v140);
      }
      sub_21CA1B88C(v120, &qword_267C96F10);
      uint64_t v158 = v746;
      v157(v746, 1, 1, v748);
      sub_21CA571E8((uint64_t)v154, v153, (uint64_t (*)(void))type metadata accessor for FMFIntermediateFriend);
      v729 = (char *)*v696;
      ((void (*)(uint64_t, void, uint64_t, uint64_t))v729)(v743, 0, 1, v741);
      unint64_t v762 = 1;
      char v763 = 0;
      uint64_t v760 = 0;
      char v761 = 1;
      v728 = *v689;
      uint64_t v159 = v736;
      ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v728)(v736, 1, 1, v742);
      uint64_t v767 = 0;
      long long v765 = 0u;
      long long v766 = 0u;
      long long v764 = 0u;
      uint64_t v160 = v744;
      sub_21CA5572C(v158, v743, &v762, (uint64_t)&v760, v159, 0, 1, (uint64_t *)&v764, v744, 0, 0, 2u, 2u, 2);
      uint64_t v161 = swift_retain();
      uint64_t v162 = v157;
      v726 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))v157;
      id v163 = v735;
      v727 = (uint64_t (*)(void))sub_21CA59818(v161, v160);
      swift_release();
      uint64_t v164 = swift_retain();
      v712 = (void (*)(char *, uint64_t))sub_21CA5939C(v164, v160, (uint64_t)&unk_26CD6ED08);
      id v735 = v163;
      swift_release();
      sub_21CA571E8((uint64_t)v160, v158, (uint64_t (*)(void))type metadata accessor for FMFFriend);
      v162(v158, 0, 1, v748);
      ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v729)(v743, 1, 1, v741);
      uint64_t v165 = v743;
      unint64_t v762 = 0;
      char v763 = 1;
      uint64_t v760 = 0;
      char v761 = 1;
      ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v728)(v159, 1, 1, v742);
      uint64_t v767 = 0;
      long long v765 = 0u;
      long long v766 = 0u;
      long long v764 = 0u;
      uint64_t v166 = v740;
      sub_21CA5572C(v158, v165, &v762, (uint64_t)&v760, v159, 0, 1, (uint64_t *)&v764, v740, (uint64_t)v727, (uint64_t)v712, 2u, 2u, 2);
      sub_21CA5C95C((uint64_t)v166, (uint64_t)v160, (uint64_t (*)(void))type metadata accessor for FMFFriend);
      uint64_t v167 = *v160;
      uint64_t v168 = v160[1];
      unint64_t v120 = (unint64_t)v707;
      sub_21CA571E8((uint64_t)v160, v158, (uint64_t (*)(void))type metadata accessor for FMFFriend);
      ((void (*)(uint64_t, void, uint64_t, uint64_t))v726)(v158, 0, 1, v748);
      swift_bridgeObjectRetain();
      uint64_t v169 = v158;
      uint64_t v140 = v748;
      sub_21CA585EC(v169, v167, v168);
      uint64_t v0 = (uint64_t)v705;
      sub_21CA57050((uint64_t)v705, (uint64_t (*)(void))type metadata accessor for FMFIntermediateFriend);
      uint64_t v170 = (uint64_t)v160;
      uint64_t v153 = v165;
      int v154 = (uint64_t *)v0;
      sub_21CA57050(v170, (uint64_t (*)(void))type metadata accessor for FMFFriend);
LABEL_33:
      uint64_t v156 = (char *)&v734->isa + 1;
      uint64_t v133 = v745;
      if (v733 == (char *)v704)
      {
        swift_bridgeObjectRelease();
        goto LABEL_53;
      }
    }
  }
  unint64_t v131 = 0;
  uint64_t v132 = (int *)v733;
  while (1)
  {
    sub_21CAC955C(v131, 1, v128);
    uint64_t v133 = v131 + 1;
    if (__OFADD__(v131, 1)) {
      break;
    }
    uint64_t v0 = (uint64_t)type metadata accessor for FMFLocationAlert;
    sub_21CA571E8(v128+ ((*((unsigned __int8 *)v112 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v112 + 80))+ *((void *)v112 + 9) * v131, (uint64_t)v125, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
    uint64_t v134 = v132;
    int v135 = v125[v132[24]];
    sub_21CA571E8((uint64_t)v125, v120, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
    if (v135 == 1)
    {
      uint64_t v0 = *(unsigned __int8 *)(v120 + v134[25]);
      sub_21CA57050(v120, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
      uint64_t v132 = v134;
      if ((v0 & 1) == 0)
      {
        uint64_t v136 = v732;
        sub_21CA591A4((uint64_t)v125, v732, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
        uint64_t v0 = (uint64_t)&v764;
        sub_21CB29530();
        unint64_t v138 = *(void *)(v764 + 16);
        unint64_t v137 = *(void *)(v764 + 24);
        uint64_t v112 = v739;
        if (v138 >= v137 >> 1) {
          sub_21CA7C050(v137 > 1, v138 + 1, 1);
        }
        sub_21CB295B4(v138, v136);
        uint64_t v132 = (int *)v733;
        int v116 = v729;
        goto LABEL_7;
      }
    }
    else
    {
      sub_21CA57050(v120, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
      uint64_t v132 = v134;
    }
    sub_21CA57050((uint64_t)v125, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
    uint64_t v112 = v739;
LABEL_7:
    ++v131;
    if ((id)v133 == v735)
    {
      uint64_t v723 = v764;
      uint64_t v129 = (uint64_t (*)(void))MEMORY[0x263F8EE78];
      goto LABEL_16;
    }
  }
  __break(1u);
LABEL_357:
  __break(1u);
LABEL_358:
  __break(1u);
LABEL_359:
  __break(1u);
LABEL_360:
  __break(1u);
  while (2)
  {
    __break(1u);
LABEL_362:
    __break(1u);
LABEL_363:
    __break(1u);
LABEL_364:
    __break(1u);
LABEL_365:
    __break(1u);
LABEL_366:
    __break(1u);
LABEL_367:
    __break(1u);
LABEL_368:
    swift_once();
LABEL_54:
    uint64_t v190 = sub_21CA4CC18(v0, (uint64_t)qword_267CA5368);
    unint64_t v191 = *(uint64_t **)(v711 + 16);
    uint64_t v664 = v190;
    v707 = (char *)(v711 + 16);
    v705 = v191;
    ((void (*)(unint64_t))v191)(v120);
    uint64_t v192 = v670;
    swift_retain_n();
    uint64_t v193 = sub_21CB88070();
    LODWORD(v734) = sub_21CB88850();
    uint64_t v194 = swift_allocObject();
    *(unsigned char *)(v194 + 16) = 64;
    uint64_t v195 = swift_allocObject();
    *(unsigned char *)(v195 + 16) = 8;
    uint64_t v196 = swift_allocObject();
    *(void *)(v196 + 16) = sub_21CB2ACF0;
    *(void *)(v196 + 24) = v192;
    uint64_t v197 = swift_allocObject();
    *(void *)(v197 + 16) = sub_21CB2AD6C;
    *(void *)(v197 + 24) = v196;
    uint64_t v704 = sub_21CA57E34(&qword_267C97280);
    uint64_t v198 = swift_allocObject();
    sub_21CB090A8(v198, 3);
    *uint64_t v199 = sub_21CB2AD1C;
    v199[1] = v194;
    v199[2] = sub_21CB2C1FC;
    v199[3] = v195;
    v199[4] = sub_21CB2AD74;
    v199[5] = v197;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRelease();
    os_log_type_t v200 = v734;
    v734 = v193;
    if (os_log_type_enabled(v193, v200))
    {
      uint64_t v201 = (uint8_t *)swift_slowAlloc();
      v733 = (char *)swift_slowAlloc();
      *(_WORD *)uint64_t v201 = 258;
      v201[2] = 64;
      swift_release();
      v201[3] = 8;
      swift_release();
      swift_beginAccess();
      uint64_t v202 = v670;
      swift_bridgeObjectRetain();
      uint64_t v203 = sub_21CB881E0();
      swift_bridgeObjectRelease();
      *(void *)&long long v764 = v203;
      sub_21CB889C0();
      os_log_type_t v204 = v733;
      *(void *)v733 = v203;
      swift_release_n();
      swift_release();
      swift_release();
      BOOL v205 = v734;
      _os_log_impl(&dword_21CA00000, v734, v200, "Follower friends - %@", v201, 0xCu);
      sub_21CA57E34(&qword_267C95020);
      swift_arrayDestroy();
      uint64_t v206 = v204;
      uint64_t v133 = v745;
      MEMORY[0x21D4B6B70](v206, -1, -1);
      MEMORY[0x21D4B6B70](v201, -1, -1);
    }
    else
    {

      uint64_t v202 = v670;
      swift_release_n();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
    }
    uint64_t v207 = v744;
    uint64_t v208 = *(void (**)(char *, uint64_t))(v711 + 8);
    v711 += 8;
    v712 = v208;
    v208(v667, v722);
    uint64_t v209 = *(void *)(v695 + 552);
    uint64_t v210 = sub_21CA59DC8(v209);
    if (v210)
    {
      uint64_t v211 = v210;
      if (v210 >= 1)
      {
        uint64_t v212 = v209 + ((*((unsigned __int8 *)v730 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v730 + 80));
        v213 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))*((void *)v730 + 9);
        v733 = *(char **)(v133 + 56);
        v734 = (v133 + 56);
        v702 = (uint64_t (*)(void))((char *)v730 + 56);
        v703 = v213;
        v701 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))(v672 + 56);
        uint64_t v697 = v209;
        swift_bridgeObjectRetain();
        uint64_t v214 = v746;
        v215 = (void (***)(uint64_t, uint64_t, uint64_t, uint64_t))v701;
        uint64_t v216 = v736;
        do
        {
          v729 = (char *)v212;
          uint64_t v732 = v211;
          ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v733)(v214, 1, 1, v748);
          uint64_t v217 = v743;
          sub_21CA571E8(v212, v743, (uint64_t (*)(void))type metadata accessor for FMFIntermediateFriend);
          v727 = *(uint64_t (**)(void))v702;
          uint64_t v218 = v741;
          ((void (*)(uint64_t, void, uint64_t, uint64_t))v727)(v217, 0, 1, v741);
          unint64_t v762 = 1;
          char v763 = 0;
          uint64_t v760 = 0;
          char v761 = 1;
          v726 = *v215;
          uint64_t v219 = v742;
          ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v726)(v216, 1, 1, v742);
          uint64_t v767 = 0;
          long long v765 = 0u;
          long long v766 = 0u;
          long long v764 = 0u;
          sub_21CA5572C(v214, v217, &v762, (uint64_t)&v760, v216, 0, 1, (uint64_t *)&v764, v207, 0, 0, 2u, 2u, 2);
          v728 = type metadata accessor for FMFFriend;
          sub_21CA571E8((uint64_t)v207, v214, (uint64_t (*)(void))type metadata accessor for FMFFriend);
          ((void (*)(uint64_t, void, uint64_t, uint64_t))v733)(v214, 0, 1, v748);
          ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v727)(v217, 1, 1, v218);
          unint64_t v762 = 0;
          char v763 = 1;
          uint64_t v760 = 0;
          char v761 = 1;
          ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v726)(v216, 1, 1, v219);
          uint64_t v767 = 0;
          long long v765 = 0u;
          long long v766 = 0u;
          long long v764 = 0u;
          uint64_t v220 = swift_retain();
          uint64_t v221 = v740;
          sub_21CA5572C(v214, v217, &v762, (uint64_t)&v760, v216, 0, 1, (uint64_t *)&v764, v740, 0, v220, 2u, 2u, 2);
          sub_21CA57050((uint64_t)v207, (uint64_t (*)(void))type metadata accessor for FMFFriend);
          sub_21CA591A4((uint64_t)v221, (uint64_t)v207, (uint64_t (*)(void))type metadata accessor for FMFFriend);
          uint64_t v222 = *v207;
          uint64_t v223 = v744[1];
          unint64_t v224 = (unint64_t *)v747;
          swift_beginAccess();
          sub_21CA571E8((uint64_t)v744, (uint64_t)v221, (uint64_t (*)(void))v728);
          swift_bridgeObjectRetain();
          char v225 = swift_isUniquelyReferenced_nonNull_native();
          unint64_t v762 = *v224;
          *unint64_t v224 = 0x8000000000000000;
          uint64_t v226 = v222;
          uint64_t v227 = (uint64_t)v729;
          sub_21CA5BAEC((uint64_t)v221, v226, v223, v225);
          *unint64_t v224 = v762;
          uint64_t v207 = v744;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_endAccess();
          uint64_t v228 = v732;
          sub_21CA57050((uint64_t)v207, (uint64_t (*)(void))type metadata accessor for FMFFriend);
          uint64_t v212 = (uint64_t)v703 + v227;
          uint64_t v211 = v228 - 1;
        }
        while (v211);
        swift_bridgeObjectRelease();
        uint64_t v202 = v670;
        goto LABEL_62;
      }
      __break(1u);
LABEL_370:
      __break(1u);
LABEL_371:
      __break(1u);
LABEL_372:
      __break(1u);
LABEL_373:
      __break(1u);
LABEL_374:
      __break(1u);
LABEL_375:
      __break(1u);
LABEL_376:
      __break(1u);
LABEL_377:
      __break(1u);
      goto LABEL_378;
    }
LABEL_62:
    ((void (*)(char *, uint64_t, uint64_t))v705)(v666, v664, v722);
    swift_retain_n();
    uint64_t v229 = sub_21CB88070();
    os_log_type_t v230 = sub_21CB88850();
    uint64_t v231 = swift_allocObject();
    *(unsigned char *)(v231 + 16) = 64;
    uint64_t v232 = swift_allocObject();
    *(unsigned char *)(v232 + 16) = 8;
    uint64_t v233 = swift_allocObject();
    *(void *)(v233 + 16) = sub_21CB2ACF0;
    *(void *)(v233 + 24) = v202;
    uint64_t v234 = swift_allocObject();
    *(void *)(v234 + 16) = sub_21CB2C1F4;
    *(void *)(v234 + 24) = v233;
    uint64_t v235 = swift_allocObject();
    sub_21CB090A8(v235, 3);
    *uint64_t v236 = sub_21CB2C1FC;
    v236[1] = v231;
    v236[2] = sub_21CB2C1FC;
    v236[3] = v232;
    v236[4] = sub_21CB2C1F8;
    v236[5] = v234;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRelease();
    os_log_type_t v237 = v230;
    if (os_log_type_enabled(v229, v230))
    {
      os_log_type_t v238 = (uint8_t *)swift_slowAlloc();
      uint64_t v239 = swift_slowAlloc();
      v734 = v229;
      uint64_t v240 = (void *)v239;
      *(_WORD *)os_log_type_t v238 = 258;
      v238[2] = 64;
      swift_release();
      v238[3] = 8;
      swift_release();
      swift_beginAccess();
      swift_bridgeObjectRetain();
      uint64_t v241 = sub_21CB881E0();
      swift_bridgeObjectRelease();
      *(void *)&long long v764 = v241;
      sub_21CB889C0();
      *uint64_t v240 = v241;
      swift_release_n();
      swift_release();
      swift_release();
      uint64_t v242 = v734;
      _os_log_impl(&dword_21CA00000, v734, v237, "Follower friends with pending - %@", v238, 0xCu);
      sub_21CA57E34(&qword_267C95020);
      swift_arrayDestroy();
      MEMORY[0x21D4B6B70](v240, -1, -1);
      MEMORY[0x21D4B6B70](v238, -1, -1);
    }
    else
    {

      swift_release_n();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
    }
    uint64_t v133 = v745;
    uint64_t v243 = v710;
    uint64_t v244 = (uint64_t)v693;
    v712(v666, v722);
    uint64_t v245 = v695;
    uint64_t v246 = *(void *)(v695 + 680);
    uint64_t v247 = (uint64_t (*)())sub_21CA59DC8(v246);
    uint64_t v248 = v748;
    unint64_t v120 = (unint64_t)v708;
    v728 = v247;
    if (v247)
    {
      v249 = (uint64_t (*)(void))(*(void *)(v245 + 536) + 24);
      uint64_t v0 = (uint64_t)v730;
      v726 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v246
                                                                      + ((*((unsigned __int8 *)v730 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v730 + 80)));
      swift_bridgeObjectRetain();
      v727 = v249;
      swift_beginAccess();
      unint64_t v250 = 0;
      v734 = (v133 + 56);
      v729 = (char *)(v133 + 48);
      v688 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v672 + 56);
      v689 = (uint64_t (**)())(v0 + 56);
      v703 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v246;
      while (1)
      {
        if (__OFADD__(v250, 1)) {
          goto LABEL_359;
        }
        uint64_t v732 = (uint64_t)(v250 + 1);
        uint64_t v267 = *((void *)v730 + 9);
        v733 = v250;
        unint64_t v268 = (uint64_t *)v738;
        sub_21CA571E8((uint64_t)v726 + v267 * (void)v250, (uint64_t)v738, (uint64_t (*)(void))type metadata accessor for FMFIntermediateFriend);
        uint64_t v269 = *(void *)v727;
        if (*(void *)(*(void *)v727 + 16))
        {
          uint64_t v271 = *v268;
          uint64_t v270 = v268[1];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          unint64_t v272 = sub_21CA5BCE0(v271, v270);
          if (v273)
          {
            sub_21CA571E8(*(void *)(v269 + 56) + *(void *)(v133 + 72) * v272, v244, (uint64_t (*)(void))type metadata accessor for FMFFriend);
            Class isa = *(void (**)(void, void, void, void))(v133 + 56);
            uint64_t v275 = v244;
            uint64_t v276 = 0;
          }
          else
          {
            Class isa = (void (*)(void, void, void, void))v734->isa;
            uint64_t v275 = v244;
            uint64_t v276 = 1;
          }
          v277 = isa;
          isa(v275, v276, 1, v248);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))v729)(v244, 1, v248) != 1)
          {
            sub_21CA591A4(v244, v120, (uint64_t (*)(void))type metadata accessor for FMFFriend);
            uint64_t v287 = v120;
            unint64_t v120 = (unint64_t)v747;
            swift_beginAccess();
            sub_21CA571E8(v287, v690, (uint64_t (*)(void))type metadata accessor for FMFFriend);
            swift_bridgeObjectRetain();
            int v288 = swift_isUniquelyReferenced_nonNull_native();
            uint64_t v760 = *(void *)v120;
            uint64_t v0 = v760;
            *(void *)unint64_t v120 = 0x8000000000000000;
            unint64_t v290 = sub_21CA5BCE0(v271, v270);
            uint64_t v291 = *(void *)(v0 + 16);
            BOOL v292 = (v289 & 1) == 0;
            uint64_t v293 = v291 + v292;
            if (__OFADD__(v291, v292)) {
              goto LABEL_365;
            }
            char v294 = v289;
            if (*(void *)(v0 + 24) >= v293)
            {
              uint64_t v297 = v690;
              if ((v288 & 1) == 0)
              {
                sub_21CB858E4();
                uint64_t v297 = v690;
              }
              uint64_t v248 = v748;
              uint64_t v0 = v760;
              if ((v294 & 1) == 0) {
                goto LABEL_85;
              }
            }
            else
            {
              sub_21CB81BCC(v293, v288);
              unint64_t v295 = sub_21CA5BCE0(v271, v270);
              if ((v294 & 1) != (v296 & 1)) {
                goto LABEL_380;
              }
              unint64_t v290 = v295;
              uint64_t v248 = v748;
              uint64_t v297 = v690;
              uint64_t v0 = v760;
              if ((v294 & 1) == 0)
              {
LABEL_85:
                sub_21CB849E8(v290, v271, v270, v297, (void *)v0);
                swift_bridgeObjectRetain();
LABEL_93:
                uint64_t v243 = v710;
                uint64_t *v747 = v0;
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_endAccess();
                unint64_t v120 = (unint64_t)v708;
                sub_21CA57050((uint64_t)v708, (uint64_t (*)(void))type metadata accessor for FMFFriend);
                sub_21CA57050((uint64_t)v738, (uint64_t (*)(void))type metadata accessor for FMFIntermediateFriend);
                goto LABEL_70;
              }
            }
            sub_21CA5C95C(v297, *(void *)(v0 + 56) + *(void *)(v133 + 72) * v290, (uint64_t (*)(void))type metadata accessor for FMFFriend);
            goto LABEL_93;
          }
        }
        else
        {
          v277 = (void (*)(void, void, void, void))v734->isa;
          ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v734->isa)(v244, 1, 1, v248);
        }
        sub_21CA1B88C(v244, &qword_267C96F10);
        uint64_t v279 = *v268;
        uint64_t v278 = v268[1];
        int64_t v280 = (unint64_t *)v747;
        swift_beginAccess();
        unint64_t v281 = *v280;
        if (*(void *)(*v280 + 16))
        {
          swift_bridgeObjectRetain();
          unint64_t v282 = sub_21CA5BCE0(v279, v278);
          uint64_t v283 = v678;
          if (v284)
          {
            uint64_t v285 = *(void *)(v281 + 56) + *(void *)(v133 + 72) * v282;
            uint64_t v251 = v691;
            sub_21CA571E8(v285, v691, (uint64_t (*)(void))type metadata accessor for FMFFriend);
            uint64_t v286 = 0;
          }
          else
          {
            uint64_t v286 = 1;
            uint64_t v251 = v691;
          }
          char v252 = v277;
          v277(v251, v286, 1, v248);
          swift_bridgeObjectRelease();
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))v729)(v251, 1, v248) != 1)
          {
            sub_21CA591A4(v251, (uint64_t)v283, (uint64_t (*)(void))type metadata accessor for FMFFriend);
            swift_endAccess();
            uint64_t v298 = v746;
            sub_21CA571E8((uint64_t)v283, v746, (uint64_t (*)(void))type metadata accessor for FMFFriend);
            v252(v298, 0, 1, v248);
            uint64_t v299 = v743;
            sub_21CA571E8((uint64_t)v738, v743, (uint64_t (*)(void))type metadata accessor for FMFIntermediateFriend);
            ((void (*)(uint64_t, void, uint64_t, uint64_t))*v689)(v299, 0, 1, v741);
            uint64_t v760 = 2;
            char v761 = 0;
            unint64_t v758 = 0;
            char v759 = 1;
            uint64_t v300 = v736;
            (*v688)(v736, 1, 1, v742);
            uint64_t v767 = 0;
            long long v765 = 0u;
            long long v766 = 0u;
            long long v764 = 0u;
            uint64_t v301 = v248;
            char v302 = v744;
            sub_21CA5572C(v298, v299, (unint64_t *)&v760, (uint64_t)&v758, v300, 0, 1, (uint64_t *)&v764, v744, 0, 0, 2u, 2u, 2);
            sub_21CA57050((uint64_t)v283, (uint64_t (*)(void))type metadata accessor for FMFFriend);
            sub_21CA591A4((uint64_t)v302, (uint64_t)v283, (uint64_t (*)(void))type metadata accessor for FMFFriend);
            uint64_t v304 = *v283;
            uint64_t v303 = v283[1];
            swift_beginAccess();
            sub_21CA571E8((uint64_t)v283, (uint64_t)v302, (uint64_t (*)(void))type metadata accessor for FMFFriend);
            swift_bridgeObjectRetain();
            char v305 = swift_isUniquelyReferenced_nonNull_native();
            uint64_t v760 = *v280;
            *int64_t v280 = 0x8000000000000000;
            uint64_t v306 = (uint64_t)v302;
            uint64_t v248 = v301;
            sub_21CA5BAEC(v306, v304, v303, v305);
            uint64_t v0 = *v280;
            *int64_t v280 = v760;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_endAccess();
            sub_21CA57050((uint64_t)v283, (uint64_t (*)(void))type metadata accessor for FMFFriend);
            unint64_t v265 = type metadata accessor for FMFIntermediateFriend;
            unint64_t v266 = v738;
            goto LABEL_69;
          }
        }
        else
        {
          uint64_t v251 = v691;
          char v252 = v277;
          v277(v691, 1, 1, v248);
        }
        sub_21CA1B88C(v251, &qword_267C96F10);
        swift_endAccess();
        v252(v746, 1, 1, v248);
        uint64_t v253 = v743;
        sub_21CA571E8((uint64_t)v738, v743, (uint64_t (*)(void))type metadata accessor for FMFIntermediateFriend);
        v702 = (uint64_t (*)(void))*v689;
        ((void (*)(uint64_t, void, uint64_t, uint64_t))v702)(v253, 0, 1, v741);
        uint64_t v760 = 2;
        char v761 = 0;
        unint64_t v758 = 0;
        char v759 = 1;
        v701 = *v688;
        uint64_t v254 = v736;
        v701(v736, 1, 1, v742);
        uint64_t v767 = 0;
        long long v765 = 0u;
        long long v766 = 0u;
        long long v764 = 0u;
        uint64_t v255 = v744;
        sub_21CA5572C(v746, v253, (unint64_t *)&v760, (uint64_t)&v758, v254, 0, 1, (uint64_t *)&v764, v744, 0, 0, 2u, 2u, 2);
        uint64_t v256 = swift_retain();
        id v257 = v735;
        uint64_t v697 = sub_21CA59818(v256, v255);
        swift_release();
        uint64_t v258 = swift_retain();
        v696 = (uint64_t *)sub_21CB2AD9C(v258, v255);
        id v735 = v257;
        swift_release();
        sub_21CA571E8((uint64_t)v255, v746, (uint64_t (*)(void))type metadata accessor for FMFFriend);
        v252(v746, 0, 1, v748);
        ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v702)(v253, 1, 1, v741);
        uint64_t v259 = (uint64_t)v747;
        uint64_t v760 = 0;
        char v761 = 1;
        unint64_t v758 = 0;
        char v759 = 1;
        v701(v254, 1, 1, v742);
        uint64_t v248 = v748;
        uint64_t v767 = 0;
        long long v765 = 0u;
        long long v766 = 0u;
        long long v764 = 0u;
        uint64_t v260 = v740;
        uint64_t v261 = v746;
        sub_21CA5572C(v746, v253, (unint64_t *)&v760, (uint64_t)&v758, v254, 0, 1, (uint64_t *)&v764, v740, v697, (uint64_t)v696, 2u, 2u, 2);
        sub_21CA5C95C((uint64_t)v260, (uint64_t)v255, (uint64_t (*)(void))type metadata accessor for FMFFriend);
        uint64_t v262 = *v255;
        uint64_t v263 = v255[1];
        sub_21CA571E8((uint64_t)v255, v261, (uint64_t (*)(void))type metadata accessor for FMFFriend);
        v252(v261, 0, 1, v248);
        swift_beginAccess();
        swift_bridgeObjectRetain();
        uint64_t v264 = v262;
        uint64_t v0 = v259;
        sub_21CA585EC(v261, v264, v263);
        swift_endAccess();
        sub_21CA57050((uint64_t)v738, (uint64_t (*)(void))type metadata accessor for FMFIntermediateFriend);
        unint64_t v265 = type metadata accessor for FMFFriend;
        unint64_t v266 = (uint64_t (*)())v255;
LABEL_69:
        sub_21CA57050((uint64_t)v266, (uint64_t (*)(void))v265);
        uint64_t v133 = v745;
        uint64_t v243 = v710;
        uint64_t v244 = (uint64_t)v693;
        unint64_t v120 = (unint64_t)v708;
LABEL_70:
        unint64_t v250 = v733 + 1;
        if ((uint64_t (*)())v732 == v728)
        {
          swift_bridgeObjectRelease();
          break;
        }
      }
    }
    ((void (*)(uint64_t (*)(void), uint64_t, uint64_t))v705)(v243, v664, v722);
    uint64_t v307 = v670;
    swift_retain_n();
    v308 = (uint64_t (*)())sub_21CB88070();
    os_log_type_t v309 = sub_21CB88850();
    uint64_t v310 = swift_allocObject();
    *(unsigned char *)(v310 + 16) = 64;
    uint64_t v311 = swift_allocObject();
    *(unsigned char *)(v311 + 16) = 8;
    uint64_t v312 = swift_allocObject();
    *(void *)(v312 + 16) = sub_21CB2ACF0;
    *(void *)(v312 + 24) = v307;
    uint64_t v313 = swift_allocObject();
    *(void *)(v313 + 16) = sub_21CB2C1F4;
    *(void *)(v313 + 24) = v312;
    uint64_t v314 = swift_allocObject();
    sub_21CB090A8(v314, 3);
    *uint64_t v315 = sub_21CB2C1FC;
    v315[1] = v310;
    v315[2] = sub_21CB2C1FC;
    v315[3] = v311;
    v315[4] = sub_21CB2C1F8;
    v315[5] = v313;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRelease();
    os_log_type_t v316 = v309;
    v738 = v308;
    if (os_log_type_enabled((os_log_t)v308, v309))
    {
      char v317 = (uint8_t *)swift_slowAlloc();
      uint64_t v318 = (void *)swift_slowAlloc();
      *(_WORD *)char v317 = 258;
      v317[2] = 64;
      swift_release();
      v317[3] = 8;
      swift_release();
      swift_beginAccess();
      swift_bridgeObjectRetain();
      uint64_t v319 = sub_21CB881E0();
      swift_bridgeObjectRelease();
      *(void *)&long long v764 = v319;
      sub_21CB889C0();
      *uint64_t v318 = v319;
      swift_release_n();
      swift_release();
      swift_release();
      uint64_t v320 = v738;
      _os_log_impl(&dword_21CA00000, (os_log_t)v738, v316, "Follower+following friends - %@", v317, 0xCu);
      sub_21CA57E34(&qword_267C95020);
      swift_arrayDestroy();
      MEMORY[0x21D4B6B70](v318, -1, -1);
      MEMORY[0x21D4B6B70](v317, -1, -1);
    }
    else
    {

      swift_release_n();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
    }
    char v321 = v724;
    uint64_t v322 = v722;
    v712((char *)v710, v722);
    uint64_t v323 = *(void *)(v695 + 568);
    uint64_t v324 = sub_21CA59DC8(v323);
    uint64_t v325 = (uint64_t)v694;
    uint64_t v133 = v709;
    if (v324)
    {
      v734 = v324;
      if (v324 < 1) {
        goto LABEL_370;
      }
      uint64_t v326 = *(void *)(v695 + 536) + 24;
      v327 = v730;
      char v328 = (uint64_t (*)(void))(v323
                                            + ((*((unsigned __int8 *)v730 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v730 + 80)));
      uint64_t v697 = v323;
      swift_bridgeObjectRetain();
      v729 = (char *)v326;
      swift_beginAccess();
      v738 = (uint64_t (*)())(v745 + 56);
      v733 = (char *)(v745 + 48);
      v728 = (uint64_t (*)())*((void *)v327 + 9);
      v727 = (uint64_t (*)(void))((char *)v327 + 56);
      v726 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v672 + 56);
      while (1)
      {
        sub_21CA571E8((uint64_t)v328, v133, (uint64_t (*)(void))type metadata accessor for FMFIntermediateFriend);
        uint64_t v341 = *(void *)v729;
        if (!*(void *)(*(void *)v729 + 16)) {
          break;
        }
        uint64_t v342 = *(void *)v133;
        uint64_t v343 = *(void *)(v133 + 8);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        unint64_t v344 = sub_21CA5BCE0(v342, v343);
        if (v345)
        {
          uint64_t v346 = v745;
          sub_21CA571E8(*(void *)(v341 + 56) + *(void *)(v745 + 72) * v344, v325, (uint64_t (*)(void))type metadata accessor for FMFFriend);
          v347 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v346 + 56);
          uint64_t v348 = v748;
          v347(v325, 0, 1, v748);
        }
        else
        {
          v347 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))v738;
          uint64_t v348 = v748;
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))v738)(v325, 1, 1, v748);
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))v733)(v325, 1, v348) == 1) {
          goto LABEL_110;
        }
        uint64_t v365 = v674;
        sub_21CA591A4(v325, v674, (uint64_t (*)(void))type metadata accessor for FMFFriend);
        uint64_t v366 = v746;
        sub_21CA571E8(v365, v746, (uint64_t (*)(void))type metadata accessor for FMFFriend);
        v347(v366, 0, 1, v348);
        swift_beginAccess();
        swift_bridgeObjectRetain();
        sub_21CA585EC(v366, v342, v343);
        swift_endAccess();
        uint64_t v367 = v365;
        uint64_t v133 = v709;
        sub_21CA57050(v367, (uint64_t (*)(void))type metadata accessor for FMFFriend);
        sub_21CA57050(v133, (uint64_t (*)(void))type metadata accessor for FMFIntermediateFriend);
LABEL_103:
        char v328 = (uint64_t (*)(void))((char *)v728 + (void)v328);
        v734 = ((char *)v734 - 1);
        char v321 = v724;
        if (!v734)
        {
          swift_bridgeObjectRelease();
          uint64_t v322 = v722;
          goto LABEL_114;
        }
      }
      uint64_t v348 = v748;
      v347 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))v738;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))v738)(v325, 1, 1, v748);
LABEL_110:
      sub_21CA1B88C(v325, &qword_267C96F10);
      uint64_t v349 = *(void *)v133;
      uint64_t v350 = *(void *)(v133 + 8);
      v351 = v747;
      swift_beginAccess();
      uint64_t v352 = *v351;
      swift_bridgeObjectRetain();
      uint64_t v353 = v692;
      sub_21CA59274(v349, v350, v352, v692);
      swift_bridgeObjectRelease();
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))v733)(v353, 1, v348) == 1)
      {
        sub_21CA1B88C(v353, &qword_267C96F10);
        swift_endAccess();
        uint64_t v329 = v746;
        uint64_t v732 = (uint64_t)v347;
        v347(v746, 1, 1, v348);
        uint64_t v330 = v743;
        sub_21CA571E8(v133, v743, (uint64_t (*)(void))type metadata accessor for FMFIntermediateFriend);
        v708 = *(void **)v727;
        ((void (*)(uint64_t, void, uint64_t, uint64_t))v708)(v330, 0, 1, v741);
        unint64_t v758 = 8;
        char v759 = 0;
        uint64_t v756 = 0;
        char v757 = 1;
        v710 = v328;
        v703 = *v726;
        uint64_t v331 = v736;
        v703(v736, 1, 1, v742);
        uint64_t v767 = 0;
        long long v765 = 0u;
        long long v766 = 0u;
        long long v764 = 0u;
        int64_t v332 = v744;
        sub_21CA5572C(v329, v330, &v758, (uint64_t)&v756, v331, 0, 1, (uint64_t *)&v764, v744, 0, 0, 2u, 2u, 2);
        uint64_t v333 = swift_retain();
        id v334 = v735;
        v702 = (uint64_t (*)(void))sub_21CA59818(v333, v332);
        swift_release();
        uint64_t v335 = swift_retain();
        v701 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_21CA5939C(v335, v332, (uint64_t)&unk_26CD6ECB8);
        id v735 = v334;
        uint64_t v133 = v709;
        swift_release();
        sub_21CA571E8((uint64_t)v332, v329, (uint64_t (*)(void))type metadata accessor for FMFFriend);
        ((void (*)(uint64_t, void, uint64_t, uint64_t))v732)(v329, 0, 1, v348);
        ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v708)(v330, 1, 1, v741);
        unint64_t v758 = 0;
        char v759 = 1;
        uint64_t v756 = 0;
        char v757 = 1;
        v703(v331, 1, 1, v742);
        char v328 = v710;
        uint64_t v767 = 0;
        long long v765 = 0u;
        long long v766 = 0u;
        long long v764 = 0u;
        uint64_t v336 = v740;
        sub_21CA5572C(v329, v330, &v758, (uint64_t)&v756, v331, 0, 1, (uint64_t *)&v764, v740, (uint64_t)v702, (uint64_t)v701, 2u, 2u, 2);
        sub_21CA5C95C((uint64_t)v336, (uint64_t)v332, (uint64_t (*)(void))type metadata accessor for FMFFriend);
        uint64_t v337 = *v332;
        uint64_t v338 = v332[1];
        sub_21CA571E8((uint64_t)v332, v329, (uint64_t (*)(void))type metadata accessor for FMFFriend);
        ((void (*)(uint64_t, void, uint64_t, uint64_t))v732)(v329, 0, 1, v348);
        swift_beginAccess();
        swift_bridgeObjectRetain();
        sub_21CA585EC(v329, v337, v338);
        swift_endAccess();
        sub_21CA57050(v133, (uint64_t (*)(void))type metadata accessor for FMFIntermediateFriend);
        long long v339 = type metadata accessor for FMFFriend;
        uint64_t v340 = (uint64_t)v332;
      }
      else
      {
        uint64_t v354 = v353;
        v355 = v737;
        sub_21CA591A4(v354, (uint64_t)v737, (uint64_t (*)(void))type metadata accessor for FMFFriend);
        swift_endAccess();
        v710 = (uint64_t (*)(void))type metadata accessor for FMFFriend;
        uint64_t v356 = v746;
        sub_21CA571E8((uint64_t)v355, v746, (uint64_t (*)(void))type metadata accessor for FMFFriend);
        v347(v356, 0, 1, v348);
        uint64_t v357 = v743;
        sub_21CA571E8(v133, v743, (uint64_t (*)(void))type metadata accessor for FMFIntermediateFriend);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))v727)(v357, 0, 1, v741);
        unint64_t v758 = 8;
        char v759 = 0;
        uint64_t v756 = 0;
        char v757 = 1;
        uint64_t v358 = v736;
        (*v726)(v736, 1, 1, v742);
        uint64_t v767 = 0;
        long long v765 = 0u;
        long long v766 = 0u;
        long long v764 = 0u;
        v359 = v744;
        uint64_t v360 = v358;
        uint64_t v133 = v709;
        sub_21CA5572C(v356, v357, &v758, (uint64_t)&v756, v360, 0, 1, (uint64_t *)&v764, v744, 0, 0, 2u, 2u, 2);
        sub_21CA57050((uint64_t)v737, (uint64_t (*)(void))type metadata accessor for FMFFriend);
        sub_21CA591A4((uint64_t)v359, (uint64_t)v737, (uint64_t (*)(void))type metadata accessor for FMFFriend);
        v361 = *(void (**)(void, void, void, void))v737;
        uint64_t v362 = *((void *)v737 + 1);
        sub_21CA571E8((uint64_t)v737, v356, v710);
        v347(v356, 0, 1, v348);
        swift_beginAccess();
        swift_bridgeObjectRetain();
        uint64_t v363 = v356;
        v364 = v737;
        sub_21CA585EC(v363, (uint64_t)v361, v362);
        swift_endAccess();
        sub_21CA57050((uint64_t)v364, (uint64_t (*)(void))type metadata accessor for FMFFriend);
        long long v339 = type metadata accessor for FMFIntermediateFriend;
        uint64_t v340 = v133;
      }
      sub_21CA57050(v340, (uint64_t (*)(void))v339);
      uint64_t v325 = (uint64_t)v694;
      goto LABEL_103;
    }
LABEL_114:
    v368 = v665;
    ((void (*)(char *, uint64_t, uint64_t))v705)(v665, v664, v322);
    uint64_t v369 = v670;
    swift_retain();
    v370 = sub_21CB88070();
    os_log_type_t v371 = sub_21CB88850();
    uint64_t v372 = swift_allocObject();
    *(unsigned char *)(v372 + 16) = 64;
    uint64_t v373 = swift_allocObject();
    *(unsigned char *)(v373 + 16) = 8;
    uint64_t v374 = swift_allocObject();
    *(void *)(v374 + 16) = sub_21CB2ACF0;
    *(void *)(v374 + 24) = v369;
    uint64_t v375 = swift_allocObject();
    *(void *)(v375 + 16) = sub_21CB2C1F4;
    *(void *)(v375 + 24) = v374;
    uint64_t v376 = swift_allocObject();
    sub_21CB090A8(v376, 3);
    void *v377 = sub_21CB2C1FC;
    v377[1] = v372;
    v377[2] = sub_21CB2C1FC;
    v377[3] = v373;
    v377[4] = sub_21CB2C1F8;
    v377[5] = v375;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRelease();
    if (os_log_type_enabled(v370, v371))
    {
      os_log_type_t v378 = v371;
      v379 = (uint8_t *)swift_slowAlloc();
      uint64_t v380 = swift_slowAlloc();
      uint64_t v756 = v380;
      *(_WORD *)v379 = 258;
      uint64_t v754 = 0;
      unint64_t v758 = (unint64_t)(v379 + 2);
      *(void *)&long long v764 = sub_21CB2C1FC;
      *((void *)&v764 + 1) = v372;
      uint64_t v133 = (uint64_t)v735;
      sub_21CA69FFC((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v764, (uint64_t)&v758, (uint64_t)&v756, (uint64_t)&v754);
      if (!v133)
      {
        swift_release();
        *(void *)&long long v764 = sub_21CB2C1FC;
        *((void *)&v764 + 1) = v373;
        sub_21CA69FFC((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v764, (uint64_t)&v758, (uint64_t)&v756, (uint64_t)&v754);
        swift_release();
        *(void *)&long long v764 = sub_21CB2C1F8;
        *((void *)&v764 + 1) = v375;
        sub_21CA69FFC((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v764, (uint64_t)&v758, (uint64_t)&v756, (uint64_t)&v754);
        id v735 = 0;
        swift_release();
        _os_log_impl(&dword_21CA00000, v370, v378, "FMFDataManager: Follower+following+futureFollower friends - %@", v379, 0xCu);
        sub_21CA57E34(&qword_267C95020);
        swift_arrayDestroy();
        MEMORY[0x21D4B6B70](v380, -1, -1);
        sub_21CA69698();
      }
      goto LABEL_379;
    }

    swift_release();
    swift_release();
    swift_release();
    v712(v368, v322);
    v381 = v668;
    uint64_t v133 = *(void *)(v695 + 560);
    uint64_t v382 = sub_21CA59DC8(v133);
    uint64_t v383 = (uint64_t)v687;
    if (v382)
    {
      v384 = (uint64_t (*)())v382;
      if (v382 < 1) {
        goto LABEL_371;
      }
      v385 = (*(void *)(v695 + 536) + 24);
      v386 = v730;
      uint64_t v387 = v133 + ((*((unsigned __int8 *)v730 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v730 + 80));
      v708 = (void *)v133;
      swift_bridgeObjectRetain();
      v734 = v385;
      swift_beginAccess();
      v388 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v745 + 48);
      v737 = (unsigned int (*)(void, void, void))(v745 + 56);
      uint64_t v732 = *((void *)v386 + 9);
      v729 = (char *)v386 + 56;
      v728 = (uint64_t (*)())(v672 + 56);
      v733 = (char *)(v745 + 48);
      do
      {
        v738 = v384;
        sub_21CA571E8(v387, (uint64_t)v321, (uint64_t (*)(void))type metadata accessor for FMFIntermediateFriend);
        uint64_t v391 = *v321;
        uint64_t v392 = v321[1];
        uint64_t v393 = (uint64_t)v734->isa;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_21CA59274(v391, v392, v393, v383);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v394 = *v388;
        uint64_t v395 = v748;
        if ((*v388)(v383, 1, v748) == 1)
        {
          sub_21CA1B88C(v383, &qword_267C96F10);
          uint64_t v396 = *v321;
          uint64_t v397 = v321[1];
          v398 = v747;
          swift_beginAccess();
          uint64_t v399 = *v398;
          swift_bridgeObjectRetain();
          uint64_t v400 = v685;
          sub_21CA59274(v396, v397, v399, v685);
          swift_bridgeObjectRelease();
          if (v394(v400, 1, v395) == 1)
          {
            sub_21CA1B88C(v400, &qword_267C96F10);
            swift_endAccess();
            v401 = *(void (**)(uint64_t, void, uint64_t, uint64_t))v737;
            uint64_t v402 = v746;
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))v737)(v746, 1, 1, v395);
            v403 = v401;
            uint64_t v404 = v743;
            sub_21CA571E8((uint64_t)v321, v743, (uint64_t (*)(void))type metadata accessor for FMFIntermediateFriend);
            v727 = *(uint64_t (**)(void))v729;
            ((void (*)(uint64_t, void, uint64_t, uint64_t))v727)(v404, 0, 1, v741);
            uint64_t v756 = 4;
            char v757 = 0;
            uint64_t v754 = 0;
            char v755 = 1;
            v726 = *(void (***)(uint64_t, uint64_t, uint64_t, uint64_t))v728;
            uint64_t v405 = v736;
            ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v726)(v736, 1, 1, v742);
            uint64_t v767 = 0;
            long long v765 = 0u;
            long long v766 = 0u;
            long long v764 = 0u;
            v406 = v744;
            sub_21CA5572C(v402, v404, (unint64_t *)&v756, (uint64_t)&v754, v405, 0, 1, (uint64_t *)&v764, v744, 0, 0, 2u, 2u, 2);
            uint64_t v407 = swift_retain();
            id v408 = v735;
            v710 = (uint64_t (*)(void))sub_21CA59818(v407, v406);
            swift_release();
            uint64_t v409 = swift_retain();
            uint64_t v709 = sub_21CA5939C(v409, v406, (uint64_t)&unk_26CD6EC90);
            id v735 = v408;
            swift_release();
            sub_21CA571E8((uint64_t)v406, v402, (uint64_t (*)(void))type metadata accessor for FMFFriend);
            v403(v402, 0, 1, v748);
            ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v727)(v404, 1, 1, v741);
            uint64_t v756 = 0;
            char v757 = 1;
            uint64_t v754 = 0;
            char v755 = 1;
            ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v726)(v405, 1, 1, v742);
            uint64_t v767 = 0;
            long long v765 = 0u;
            long long v766 = 0u;
            long long v764 = 0u;
            v410 = v740;
            sub_21CA5572C(v402, v404, (unint64_t *)&v756, (uint64_t)&v754, v405, 0, 1, (uint64_t *)&v764, v740, (uint64_t)v710, v709, 2u, 2u, 2);
            sub_21CA5C95C((uint64_t)v410, (uint64_t)v406, (uint64_t (*)(void))type metadata accessor for FMFFriend);
            uint64_t v411 = *v406;
            uint64_t v412 = v406[1];
            sub_21CA571E8((uint64_t)v406, v402, (uint64_t (*)(void))type metadata accessor for FMFFriend);
            v403(v402, 0, 1, v748);
            swift_beginAccess();
            swift_bridgeObjectRetain();
            sub_21CA585EC(v402, v411, v412);
            swift_endAccess();
            sub_21CA57050((uint64_t)v724, (uint64_t (*)(void))type metadata accessor for FMFIntermediateFriend);
            v413 = type metadata accessor for FMFFriend;
            uint64_t v414 = (uint64_t)v406;
            char v321 = v724;
          }
          else
          {
            v415 = v671;
            sub_21CA591A4(v400, (uint64_t)v671, (uint64_t (*)(void))type metadata accessor for FMFFriend);
            swift_endAccess();
            v727 = (uint64_t (*)(void))type metadata accessor for FMFFriend;
            uint64_t v416 = v746;
            sub_21CA571E8((uint64_t)v415, v746, (uint64_t (*)(void))type metadata accessor for FMFFriend);
            v726 = *(void (***)(uint64_t, uint64_t, uint64_t, uint64_t))v737;
            ((void (*)(uint64_t, void, uint64_t, uint64_t))v726)(v416, 0, 1, v395);
            uint64_t v417 = v743;
            sub_21CA571E8((uint64_t)v321, v743, (uint64_t (*)(void))type metadata accessor for FMFIntermediateFriend);
            (*(void (**)(uint64_t, void, uint64_t, uint64_t))v729)(v417, 0, 1, v741);
            uint64_t v756 = 4;
            char v757 = 0;
            uint64_t v754 = 0;
            char v755 = 1;
            uint64_t v418 = v736;
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))v728)(v736, 1, 1, v742);
            uint64_t v767 = 0;
            long long v765 = 0u;
            long long v766 = 0u;
            long long v764 = 0u;
            v419 = v744;
            sub_21CA5572C(v416, v417, (unint64_t *)&v756, (uint64_t)&v754, v418, 0, 1, (uint64_t *)&v764, v744, 0, 0, 2u, 2u, 2);
            sub_21CA57050((uint64_t)v415, (uint64_t (*)(void))type metadata accessor for FMFFriend);
            uint64_t v420 = (uint64_t)v419;
            char v321 = v724;
            sub_21CA591A4(v420, (uint64_t)v415, (uint64_t (*)(void))type metadata accessor for FMFFriend);
            uint64_t v421 = *v415;
            uint64_t v422 = v415[1];
            sub_21CA571E8((uint64_t)v415, v416, v727);
            ((void (*)(uint64_t, void, uint64_t, uint64_t))v726)(v416, 0, 1, v395);
            swift_beginAccess();
            swift_bridgeObjectRetain();
            sub_21CA585EC(v416, v421, v422);
            swift_endAccess();
            sub_21CA57050((uint64_t)v415, (uint64_t (*)(void))type metadata accessor for FMFFriend);
            v413 = type metadata accessor for FMFIntermediateFriend;
            uint64_t v414 = (uint64_t)v321;
          }
          sub_21CA57050(v414, (uint64_t (*)(void))v413);
          uint64_t v383 = (uint64_t)v687;
        }
        else
        {
          uint64_t v389 = v684;
          sub_21CA591A4(v383, v684, (uint64_t (*)(void))type metadata accessor for FMFFriend);
          uint64_t v390 = v746;
          sub_21CA571E8(v389, v746, (uint64_t (*)(void))type metadata accessor for FMFFriend);
          (*(void (**)(uint64_t, void, uint64_t, uint64_t))v737)(v390, 0, 1, v395);
          swift_beginAccess();
          swift_bridgeObjectRetain();
          sub_21CA585EC(v390, v391, v392);
          swift_endAccess();
          sub_21CA57050(v389, (uint64_t (*)(void))type metadata accessor for FMFFriend);
          sub_21CA57050((uint64_t)v321, (uint64_t (*)(void))type metadata accessor for FMFIntermediateFriend);
        }
        v387 += v732;
        v384 = (uint64_t (*)())((char *)v738 - 1);
        v388 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))v733;
      }
      while (v738 != (uint64_t (*)())1);
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v322 = v722;
      v381 = v668;
    }
    else
    {
      swift_release();
      swift_release();
    }
    v726 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))sub_21CA5D104();
    ((void (*)(char *))v705)(v381);
    uint64_t v423 = v670;
    swift_retain();
    v424 = sub_21CB88070();
    uint64_t v133 = sub_21CB88850();
    unint64_t v120 = swift_allocObject();
    *(unsigned char *)(v120 + 16) = 64;
    uint64_t v425 = swift_allocObject();
    *(unsigned char *)(v425 + 16) = 8;
    uint64_t v426 = swift_allocObject();
    *(void *)(v426 + 16) = sub_21CB2ACF0;
    *(void *)(v426 + 24) = v423;
    uint64_t v427 = swift_allocObject();
    *(void *)(v427 + 16) = sub_21CB2C1F4;
    *(void *)(v427 + 24) = v426;
    uint64_t v428 = swift_allocObject();
    sub_21CB090A8(v428, 3);
    void *v429 = sub_21CB2C1FC;
    v429[1] = v120;
    v429[2] = sub_21CB2C1FC;
    v429[3] = v425;
    v429[4] = sub_21CB2C1F8;
    v429[5] = v427;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRelease();
    BOOL v430 = os_log_type_enabled(v424, (os_log_type_t)v133);
    uint64_t v431 = v748;
    if (v430)
    {
      LODWORD(v740) = v133;
      v432 = (uint8_t *)sub_21CA69690();
      uint64_t v433 = swift_slowAlloc();
      uint64_t v754 = v433;
      *(_WORD *)v432 = 258;
      v752 = 0;
      uint64_t v756 = (uint64_t)(v432 + 2);
      *(void *)&long long v764 = sub_21CB2C1FC;
      *((void *)&v764 + 1) = v120;
      uint64_t v133 = (uint64_t)v735;
      sub_21CA69FFC((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v764, (uint64_t)&v756, (uint64_t)&v754, (uint64_t)&v752);
      if (!v133)
      {
        swift_release();
        *(void *)&long long v764 = sub_21CB2C1FC;
        *((void *)&v764 + 1) = v425;
        sub_21CA69FFC((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v764, (uint64_t)&v756, (uint64_t)&v754, (uint64_t)&v752);
        swift_release();
        *(void *)&long long v764 = sub_21CB2C1F8;
        *((void *)&v764 + 1) = v427;
        sub_21CA69FFC((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v764, (uint64_t)&v756, (uint64_t)&v754, (uint64_t)&v752);
        id v735 = 0;
        swift_release();
        _os_log_impl(&dword_21CA00000, v424, (os_log_type_t)v740, "Follower+following+futureFollower+futureFollowing friends - %@", v432, 0xCu);
        sub_21CA57E34(&qword_267C95020);
        swift_arrayDestroy();
        MEMORY[0x21D4B6B70](v433, -1, -1);
        sub_21CA69698();
      }
      goto LABEL_379;
    }

    swift_release();
    swift_release();
    swift_release();
    v712(v381, v322);
    uint64_t v434 = (uint64_t)v677;
    v435 = v747;
    uint64_t v436 = sub_21CA5A5F4();
    uint64_t v437 = sub_21CA59D24(v436);
    v729 = (char *)v436;
    if (v437)
    {
      uint64_t v438 = v437;
      if (v437 < 1) {
        goto LABEL_372;
      }
      uint64_t v439 = v436 + ((*(unsigned __int8 *)(v672 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v672 + 80));
      v739 = (uint64_t (*)(void))(v745 + 48);
      v740 = *(uint64_t (***)())(v672 + 72);
      v734 = (v745 + 56);
      v733 = (char *)v730 + 56;
      uint64_t v732 = v672 + 56;
      uint64_t v133 = (uint64_t)v676;
      do
      {
        sub_21CA571E8(v439, v133, (uint64_t (*)(void))type metadata accessor for FMFLocation);
        unint64_t v120 = *(void *)(v133 + 8);
        if (v120)
        {
          uint64_t v451 = *(void *)v133;
          swift_beginAccess();
          uint64_t v452 = *v435;
          swift_bridgeObjectRetain();
          sub_21CA59274(v451, v120, v452, v434);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))v739)(v434, 1, v431) == 1)
          {
            sub_21CA1B88C(v434, &qword_267C96F10);
            swift_endAccess();
            swift_bridgeObjectRelease();
          }
          else
          {
            v440 = v673;
            sub_21CA591A4(v434, (uint64_t)v673, (uint64_t (*)(void))type metadata accessor for FMFFriend);
            swift_endAccess();
            swift_bridgeObjectRelease();
            v738 = type metadata accessor for FMFFriend;
            uint64_t v441 = v746;
            sub_21CA571E8((uint64_t)v440, v746, (uint64_t (*)(void))type metadata accessor for FMFFriend);
            v737 = (unsigned int (*)(void, void, void))v734->isa;
            ((void (*)(uint64_t, void, uint64_t, uint64_t))v737)(v441, 0, 1, v431);
            uint64_t v442 = v743;
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))v733)(v743, 1, 1, v741);
            uint64_t v756 = 0;
            char v757 = 1;
            uint64_t v754 = 0;
            char v755 = 1;
            uint64_t v443 = v736;
            sub_21CA571E8(v133, v736, (uint64_t (*)(void))type metadata accessor for FMFLocation);
            (*(void (**)(uint64_t, void, uint64_t, uint64_t))v732)(v443, 0, 1, v742);
            uint64_t v767 = 0;
            long long v765 = 0u;
            long long v766 = 0u;
            long long v764 = 0u;
            v444 = v744;
            sub_21CA5572C(v441, v442, (unint64_t *)&v756, (uint64_t)&v754, v443, 0, 1, (uint64_t *)&v764, v744, 0, 0, 2u, 2u, 2);
            sub_21CA57050((uint64_t)v440, (uint64_t (*)(void))type metadata accessor for FMFFriend);
            uint64_t v445 = (uint64_t)v444;
            uint64_t v133 = (uint64_t)v676;
            sub_21CA591A4(v445, (uint64_t)v440, (uint64_t (*)(void))type metadata accessor for FMFFriend);
            uint64_t v446 = *v440;
            uint64_t v447 = v440[1];
            sub_21CA571E8((uint64_t)v440, v441, (uint64_t (*)(void))v738);
            ((void (*)(uint64_t, void, uint64_t, uint64_t))v737)(v441, 0, 1, v748);
            unint64_t v120 = (unint64_t)v747;
            swift_beginAccess();
            swift_bridgeObjectRetain();
            uint64_t v448 = v441;
            uint64_t v434 = (uint64_t)v677;
            uint64_t v449 = v447;
            uint64_t v431 = v748;
            sub_21CA585EC(v448, v446, v449);
            swift_endAccess();
            uint64_t v450 = (uint64_t)v440;
            v435 = (uint64_t *)v120;
            sub_21CA57050(v450, (uint64_t (*)(void))type metadata accessor for FMFFriend);
          }
        }
        sub_21CA57050(v133, (uint64_t (*)(void))type metadata accessor for FMFLocation);
        v439 += (uint64_t)v740;
        --v438;
      }
      while (v438);
    }
    swift_bridgeObjectRelease();
    uint64_t v453 = *(void *)(v695 + 608);
    uint64_t v454 = sub_21CA59DC8(v453);
    if (v454)
    {
      uint64_t v455 = v454;
      uint64_t v456 = (uint64_t)v686;
      if (v454 < 1) {
        goto LABEL_373;
      }
      v457 = (uint64_t (**)())(v745 + 48);
      v739 = (uint64_t (*)(void))(v745 + 56);
      v734 = ((char *)v730 + 56);
      v733 = (char *)(v672 + 56);
      swift_bridgeObjectRetain();
      uint64_t v732 = v453;
      v458 = (unsigned char *)(v453 + 48);
      v740 = v457;
      do
      {
        uint64_t v460 = *((void *)v458 - 2);
        uint64_t v459 = *((void *)v458 - 1);
        unsigned __int8 v461 = *v458;
        v462 = v747;
        swift_beginAccess();
        uint64_t v463 = *v462;
        swift_bridgeObjectRetain();
        uint64_t v464 = v460;
        unint64_t v120 = v706;
        sub_21CA59274(v464, v459, v463, v706);
        if (((unsigned int (*)(unint64_t, uint64_t, uint64_t))*v457)(v120, 1, v431) == 1)
        {
          sub_21CA1B88C(v120, &qword_267C96F10);
          swift_endAccess();
          swift_bridgeObjectRelease();
        }
        else
        {
          v465 = v683;
          sub_21CA591A4(v120, (uint64_t)v683, (uint64_t (*)(void))type metadata accessor for FMFFriend);
          swift_endAccess();
          uint64_t v466 = v742;
          if ((*((unsigned char *)v465 + *(int *)(v431 + 36)) & 2) != 0)
          {
            v738 = type metadata accessor for FMFFriend;
            unint64_t v120 = v746;
            sub_21CA571E8((uint64_t)v465, v746, (uint64_t (*)(void))type metadata accessor for FMFFriend);
            v737 = *(unsigned int (**)(void, void, void))v739;
            ((void (*)(unint64_t, void, uint64_t, uint64_t))v737)(v120, 0, 1, v431);
            uint64_t v467 = v743;
            ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v734->isa)(v743, 1, 1, v741);
            uint64_t v756 = 0;
            char v757 = 1;
            uint64_t v754 = 0;
            char v755 = 1;
            uint64_t v468 = v736;
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))v733)(v736, 1, 1, v466);
            uint64_t v767 = 0;
            long long v765 = 0u;
            long long v766 = 0u;
            long long v764 = 0u;
            unsigned __int8 v661 = v461;
            v469 = v744;
            uint64_t v470 = v468;
            uint64_t v431 = v748;
            sub_21CA5572C(v120, v467, (unint64_t *)&v756, (uint64_t)&v754, v470, 0, 1, (uint64_t *)&v764, v744, 0, 0, v661, 2u, 2);
            swift_bridgeObjectRelease();
            sub_21CA57050((uint64_t)v465, (uint64_t (*)(void))type metadata accessor for FMFFriend);
            sub_21CA591A4((uint64_t)v469, (uint64_t)v465, (uint64_t (*)(void))type metadata accessor for FMFFriend);
            uint64_t v471 = *v465;
            uint64_t v472 = v465[1];
            sub_21CA571E8((uint64_t)v465, v120, (uint64_t (*)(void))v738);
            ((void (*)(unint64_t, void, uint64_t, uint64_t))v737)(v120, 0, 1, v431);
            swift_beginAccess();
            swift_bridgeObjectRetain();
            uint64_t v456 = (uint64_t)v686;
            sub_21CA585EC(v120, v471, v472);
            swift_endAccess();
            sub_21CA57050((uint64_t)v465, (uint64_t (*)(void))type metadata accessor for FMFFriend);
          }
          else
          {
            sub_21CA57050((uint64_t)v465, (uint64_t (*)(void))type metadata accessor for FMFFriend);
            swift_bridgeObjectRelease();
          }
          v457 = v740;
        }
        v458 += 24;
        --v455;
      }
      while (v455);
      swift_bridgeObjectRelease();
      v435 = v747;
    }
    else
    {
      uint64_t v456 = (uint64_t)v686;
    }
    uint64_t v473 = *(void *)(v695 + 600);
    uint64_t v474 = sub_21CA59DC8(v473);
    uint64_t v133 = v745;
    if (v474)
    {
      uint64_t v475 = v474;
      if (v474 < 1) {
        goto LABEL_374;
      }
      v476 = (uint64_t (**)())(v745 + 48);
      v739 = (uint64_t (*)(void))(v745 + 56);
      v734 = ((char *)v730 + 56);
      v733 = (char *)(v672 + 56);
      swift_bridgeObjectRetain();
      uint64_t v732 = v473;
      v477 = (unsigned __int8 *)(v473 + 48);
      v740 = v476;
      do
      {
        uint64_t v479 = *((void *)v477 - 2);
        uint64_t v478 = *((void *)v477 - 1);
        unint64_t v120 = *v477;
        swift_beginAccess();
        uint64_t v480 = *v435;
        swift_bridgeObjectRetain();
        sub_21CA59274(v479, v478, v480, v456);
        if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))*v476)(v456, 1, v431) == 1)
        {
          sub_21CA1B88C(v456, &qword_267C96F10);
          swift_endAccess();
          swift_bridgeObjectRelease();
          v435 = v747;
        }
        else
        {
          v481 = v682;
          sub_21CA591A4(v456, (uint64_t)v682, (uint64_t (*)(void))type metadata accessor for FMFFriend);
          swift_endAccess();
          if ((*((unsigned char *)v481 + *(int *)(v431 + 36)) & 2) != 0)
          {
            v738 = type metadata accessor for FMFFriend;
            uint64_t v482 = v746;
            sub_21CA571E8((uint64_t)v481, v746, (uint64_t (*)(void))type metadata accessor for FMFFriend);
            v737 = *(unsigned int (**)(void, void, void))v739;
            ((void (*)(uint64_t, void, uint64_t, uint64_t))v737)(v482, 0, 1, v431);
            uint64_t v483 = v743;
            ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v734->isa)(v743, 1, 1, v741);
            uint64_t v756 = 0;
            char v757 = 1;
            uint64_t v754 = 0;
            char v755 = 1;
            uint64_t v484 = v736;
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))v733)(v736, 1, 1, v742);
            uint64_t v767 = 0;
            long long v765 = 0u;
            long long v766 = 0u;
            long long v764 = 0u;
            char v485 = sub_21CA59DCC(v120, 0);
            swift_bridgeObjectRelease();
            v486 = v744;
            uint64_t v487 = v483;
            uint64_t v431 = v748;
            sub_21CA5572C(v482, v487, (unint64_t *)&v756, (uint64_t)&v754, v484, 0, 1, (uint64_t *)&v764, v744, 0, 0, 2u, (v485 & 1) == 0, 2);
            unint64_t v120 = (unint64_t)type metadata accessor for FMFFriend;
            sub_21CA57050((uint64_t)v481, (uint64_t (*)(void))type metadata accessor for FMFFriend);
            sub_21CA591A4((uint64_t)v486, (uint64_t)v481, (uint64_t (*)(void))type metadata accessor for FMFFriend);
            uint64_t v488 = *v481;
            uint64_t v489 = v481[1];
            sub_21CA571E8((uint64_t)v481, v482, (uint64_t (*)(void))v738);
            ((void (*)(uint64_t, void, uint64_t, uint64_t))v737)(v482, 0, 1, v431);
            v490 = v747;
            swift_beginAccess();
            swift_bridgeObjectRetain();
            uint64_t v491 = v482;
            uint64_t v456 = (uint64_t)v686;
            uint64_t v492 = v489;
            v435 = v490;
            sub_21CA585EC(v491, v488, v492);
            swift_endAccess();
            sub_21CA57050((uint64_t)v481, (uint64_t (*)(void))type metadata accessor for FMFFriend);
          }
          else
          {
            sub_21CA57050((uint64_t)v481, (uint64_t (*)(void))type metadata accessor for FMFFriend);
            swift_bridgeObjectRelease();
            v435 = v747;
          }
          v476 = v740;
        }
        v477 += 24;
        --v475;
      }
      while (v475);
      swift_bridgeObjectRelease();
      uint64_t v133 = v745;
    }
    v729 = *(char **)(v695 + 536);
    uint64_t v493 = *((void *)v729 + 7);
    v494 = v721;
    if (v493)
    {
      uint64_t v495 = *((void *)v729 + 8);
      uint64_t v496 = *((void *)v729 + 5);
      unint64_t v120 = *((void *)v729 + 6);
      swift_bridgeObjectRetain();
      sub_21CA1F33C(v496, v120, v493);
      sub_21CA59D84(v496, v120, v493);
      if (v495) {
        goto LABEL_167;
      }
    }
    uint64_t v497 = *(void *)(v695 + 760);
    if (!v497)
    {
      swift_bridgeObjectRelease();
      goto LABEL_180;
    }
    uint64_t v495 = *(void *)(v695 + 768);
    unint64_t v120 = *(void *)(v695 + 752);
    uint64_t v498 = *(void *)(v695 + 744);
    swift_bridgeObjectRetain();
    sub_21CA1F33C(v498, v120, v497);
    sub_21CA59D84(v498, v120, v497);
    swift_bridgeObjectRelease();
    if (v495)
    {
LABEL_167:
      uint64_t v499 = sub_21CA59DC8(v495);
      if (v499)
      {
        uint64_t v500 = v499;
        if (v499 < 1) {
          goto LABEL_375;
        }
        uint64_t v501 = v133;
        v502 = (unsigned int (*)(void, void, void))(v133 + 48);
        v740 = (uint64_t (**)())(v501 + 56);
        v734 = ((char *)v730 + 56);
        v733 = (char *)(v672 + 56);
        uint64_t v732 = v495;
        v503 = (unint64_t *)(v495 + 48);
        uint64_t v504 = (uint64_t)v669;
        v737 = v502;
        while (1)
        {
          uint64_t v507 = *(v503 - 2);
          uint64_t v506 = *(v503 - 1);
          unint64_t v120 = *v503;
          swift_beginAccess();
          uint64_t v508 = *v435;
          swift_bridgeObjectRetain();
          sub_21CA59274(v507, v506, v508, v504);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))v502)(v504, 1, v431) == 1)
          {
            sub_21CA1B88C(v504, &qword_267C96F10);
            swift_endAccess();
          }
          else
          {
            v509 = v675;
            sub_21CA591A4(v504, (uint64_t)v675, (uint64_t (*)(void))type metadata accessor for FMFFriend);
            swift_endAccess();
            if ((*((unsigned char *)v509 + *(int *)(v431 + 36)) & 2) != 0)
            {
              v739 = (uint64_t (*)(void))type metadata accessor for FMFFriend;
              uint64_t v510 = v746;
              sub_21CA571E8((uint64_t)v509, v746, (uint64_t (*)(void))type metadata accessor for FMFFriend);
              v738 = *v740;
              ((void (*)(uint64_t, void, uint64_t, uint64_t))v738)(v510, 0, 1, v431);
              uint64_t v511 = v743;
              ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v734->isa)(v743, 1, 1, v741);
              uint64_t v756 = 0;
              char v757 = 1;
              uint64_t v754 = 0;
              char v755 = 1;
              uint64_t v512 = v736;
              (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))v733)(v736, 1, 1, v742);
              uint64_t v767 = 0;
              long long v765 = 0u;
              long long v766 = 0u;
              long long v764 = 0u;
              v513 = v744;
              uint64_t v514 = v511;
              uint64_t v431 = v748;
              sub_21CA5572C(v510, v514, (unint64_t *)&v756, (uint64_t)&v754, v512, v120, 0, (uint64_t *)&v764, v744, 0, 0, 2u, 2u, 2);
              swift_bridgeObjectRelease();
              unint64_t v120 = (unint64_t)type metadata accessor for FMFFriend;
              sub_21CA57050((uint64_t)v509, (uint64_t (*)(void))type metadata accessor for FMFFriend);
              sub_21CA591A4((uint64_t)v513, (uint64_t)v509, (uint64_t (*)(void))type metadata accessor for FMFFriend);
              uint64_t v515 = *v509;
              uint64_t v516 = v509[1];
              sub_21CA571E8((uint64_t)v509, v510, v739);
              ((void (*)(uint64_t, void, uint64_t, uint64_t))v738)(v510, 0, 1, v431);
              v517 = v747;
              swift_beginAccess();
              swift_bridgeObjectRetain();
              uint64_t v518 = v510;
              uint64_t v504 = (uint64_t)v669;
              uint64_t v519 = v516;
              v435 = v517;
              v502 = v737;
              sub_21CA585EC(v518, v515, v519);
              swift_endAccess();
              sub_21CA57050((uint64_t)v509, (uint64_t (*)(void))type metadata accessor for FMFFriend);
              goto LABEL_172;
            }
            sub_21CA57050((uint64_t)v509, (uint64_t (*)(void))type metadata accessor for FMFFriend);
          }
          swift_bridgeObjectRelease();
          v435 = v747;
LABEL_172:
          v505 = v725;
          v503 += 3;
          if (!--v500)
          {
            swift_bridgeObjectRelease();
            uint64_t v133 = v745;
            v494 = v721;
            goto LABEL_181;
          }
        }
      }
      swift_bridgeObjectRelease();
      v494 = v721;
    }
LABEL_180:
    v505 = v725;
LABEL_181:
    uint64_t v520 = *((void *)v729 + 2);
    uint64_t v521 = *(void *)(v520 + 64);
    v738 = (uint64_t (*)())(v520 + 64);
    uint64_t v0 = 1 << *(unsigned char *)(v520 + 32);
    uint64_t v522 = -1;
    if (v0 < 64) {
      uint64_t v522 = ~(-1 << v0);
    }
    unint64_t v523 = v522 & v521;
    swift_beginAccess();
    v740 = (uint64_t (**)())(v133 + 56);
    v739 = (uint64_t (*)(void))((unint64_t)(v0 + 63) >> 6);
    v737 = (unsigned int (*)(void, void, void))((char *)v739 - 1);
    swift_bridgeObjectRetain();
    uint64_t v133 = 0;
    if (v523)
    {
LABEL_184:
      unint64_t v524 = __clz(__rbit64(v523));
      v523 &= v523 - 1;
      unint64_t v525 = v524 | (v133 << 6);
LABEL_185:
      uint64_t v526 = *(void *)(v520 + 56);
      v527 = (void *)(*(void *)(v520 + 48) + 16 * v525);
      uint64_t v528 = v527[1];
      void *v494 = *v527;
      v494[1] = v528;
      uint64_t v529 = v526 + *(void *)(v745 + 72) * v525;
      uint64_t v530 = sub_21CA57E34(&qword_267C97288);
      sub_21CA571E8(v529, (uint64_t)v494 + *(int *)(v530 + 48), (uint64_t (*)(void))type metadata accessor for FMFFriend);
      (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v530 - 8) + 56))(v494, 0, 1, v530);
      swift_bridgeObjectRetain();
      v505 = v725;
      goto LABEL_195;
    }
    while (1)
    {
      uint64_t v531 = v133 + 1;
      if (__OFADD__(v133, 1)) {
        goto LABEL_360;
      }
      if (v531 < (uint64_t)v739)
      {
        unint64_t v532 = *((void *)v738 + v531);
        if (v532) {
          goto LABEL_189;
        }
        v133 += 2;
        if (v531 + 1 >= (uint64_t)v739)
        {
          uint64_t v133 = v531;
        }
        else
        {
          unint64_t v532 = *((void *)v738 + v133);
          if (v532)
          {
            ++v531;
LABEL_189:
            unint64_t v523 = (v532 - 1) & v532;
            unint64_t v525 = __clz(__rbit64(v532)) + (v531 << 6);
            uint64_t v133 = v531;
            goto LABEL_185;
          }
          if (v531 + 2 < (uint64_t)v739)
          {
            unint64_t v532 = *((void *)v738 + v531 + 2);
            if (v532)
            {
              v531 += 2;
              goto LABEL_189;
            }
            uint64_t v540 = v531 + 3;
            if (v531 + 3 < (uint64_t)v739)
            {
              unint64_t v532 = *((void *)v738 + v540);
              if (!v532)
              {
                while (1)
                {
                  uint64_t v531 = v540 + 1;
                  if (__OFADD__(v540, 1)) {
                    goto LABEL_376;
                  }
                  if (v531 >= (uint64_t)v739)
                  {
                    uint64_t v133 = (uint64_t)v737;
                    goto LABEL_194;
                  }
                  unint64_t v532 = *((void *)v738 + v531);
                  ++v540;
                  if (v532) {
                    goto LABEL_189;
                  }
                }
              }
              v531 += 3;
              goto LABEL_189;
            }
            uint64_t v133 = v531 + 2;
          }
        }
      }
LABEL_194:
      uint64_t v533 = sub_21CA57E34(&qword_267C97288);
      (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v533 - 8) + 56))(v494, 1, 1, v533);
      unint64_t v523 = 0;
LABEL_195:
      sub_21CA26A4C((uint64_t)v494, (uint64_t)v505, &qword_267C97278);
      uint64_t v534 = sub_21CA57E34(&qword_267C97288);
      uint64_t v0 = *(void *)(v534 - 8);
      v536 = (uint64_t (*)())(v0 + 48);
      v535 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v0 + 48);
      if (v535(v505, 1, v534) == 1) {
        break;
      }
      uint64_t v537 = *v505;
      unint64_t v120 = v505[1];
      uint64_t v538 = v746;
      sub_21CA591A4((uint64_t)v505 + *(int *)(v534 + 48), v746, (uint64_t (*)(void))type metadata accessor for FMFFriend);
      ((void (*)(uint64_t, void, uint64_t, uint64_t))*v740)(v538, 0, 1, v748);
      uint64_t v539 = v537;
      uint64_t v0 = (uint64_t)v747;
      sub_21CA585EC(v538, v539, v120);
      v494 = v721;
      if (v523) {
        goto LABEL_184;
      }
    }
    v739 = (uint64_t (*)(void))v535;
    swift_endAccess();
    swift_release();
    uint64_t v541 = (uint64_t)v729;
    swift_beginAccess();
    uint64_t v542 = *(void *)(v541 + 24);
    uint64_t v543 = *(void *)(v542 + 64);
    uint64_t v732 = v542 + 64;
    uint64_t v544 = 1 << *(unsigned char *)(v542 + 32);
    uint64_t v545 = -1;
    if (v544 < 64) {
      uint64_t v545 = ~(-1 << v544);
    }
    unint64_t v546 = v545 & v543;
    v738 = (uint64_t (*)())(v0 + 56);
    v733 = (char *)((unint64_t)(v544 + 63) >> 6);
    v728 = (uint64_t (*)())(v733 - 1);
    v734 = v542;
    swift_bridgeObjectRetain();
    uint64_t v133 = 0;
    uint64_t v547 = v748;
    v548 = v719;
    unint64_t v120 = (unint64_t)v720;
    uint64_t v549 = (uint64_t)v716;
LABEL_215:
    if (v546)
    {
      unint64_t v553 = __clz(__rbit64(v546));
      v546 &= v546 - 1;
      unint64_t v554 = v553 | (v133 << 6);
      goto LABEL_217;
    }
    uint64_t v558 = v133 + 1;
    if (__OFADD__(v133, 1)) {
      continue;
    }
    break;
  }
  if (v558 >= (uint64_t)v733) {
    goto LABEL_226;
  }
  unint64_t v559 = *(void *)(v732 + 8 * v558);
  if (!v559)
  {
    v133 += 2;
    if (v558 + 1 >= (uint64_t)v733)
    {
      uint64_t v133 = v558;
    }
    else
    {
      unint64_t v559 = *(void *)(v732 + 8 * v133);
      if (v559)
      {
        ++v558;
        goto LABEL_221;
      }
      if (v558 + 2 < (uint64_t)v733)
      {
        unint64_t v559 = *(void *)(v732 + 8 * (v558 + 2));
        if (v559)
        {
          v558 += 2;
          goto LABEL_221;
        }
        uint64_t v562 = v558 + 3;
        if (v558 + 3 >= (uint64_t)v733)
        {
          uint64_t v133 = v558 + 2;
        }
        else
        {
          unint64_t v559 = *(void *)(v732 + 8 * v562);
          if (v559)
          {
            v558 += 3;
            goto LABEL_221;
          }
          while (1)
          {
            uint64_t v558 = v562 + 1;
            if (__OFADD__(v562, 1)) {
              goto LABEL_377;
            }
            if (v558 >= (uint64_t)v733) {
              break;
            }
            unint64_t v559 = *(void *)(v732 + 8 * v558);
            ++v562;
            if (v559) {
              goto LABEL_221;
            }
          }
          uint64_t v133 = (uint64_t)v728;
        }
      }
    }
LABEL_226:
    v737 = *(unsigned int (**)(void, void, void))v738;
    ((void (*)(unint64_t, uint64_t, uint64_t, uint64_t))v737)(v120, 1, 1, v534);
    unint64_t v546 = 0;
    goto LABEL_227;
  }
LABEL_221:
  unint64_t v546 = (v559 - 1) & v559;
  unint64_t v554 = __clz(__rbit64(v559)) + (v558 << 6);
  uint64_t v133 = v558;
LABEL_217:
  Class v555 = v734[7].isa;
  v556 = (void *)((char *)v734[6].isa + 16 * v554);
  uint64_t v557 = v556[1];
  *(void *)unint64_t v120 = *v556;
  *(void *)(v120 + 8) = v557;
  sub_21CA571E8((uint64_t)v555 + *(void *)(v745 + 72) * v554, v120 + *(int *)(v534 + 48), (uint64_t (*)(void))type metadata accessor for FMFFriend);
  v737 = *(unsigned int (**)(void, void, void))v738;
  ((void (*)(unint64_t, void, uint64_t, uint64_t))v737)(v120, 0, 1, v534);
  swift_bridgeObjectRetain();
LABEL_227:
  sub_21CA26A4C(v120, (uint64_t)v548, &qword_267C97278);
  if (((unsigned int (*)(uint64_t *, uint64_t, uint64_t))v739)(v548, 1, v534) != 1)
  {
    uint64_t v560 = *v548;
    uint64_t v561 = v548[1];
    sub_21CA591A4((uint64_t)v548 + *(int *)(v534 + 48), v549, (uint64_t (*)(void))type metadata accessor for FMFFriend);
    if (sub_21CA7E41C(*(void *)(v549 + *(int *)(v547 + 36)), 0))
    {
      uint64_t v550 = v746;
      ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))*v740)(v746, 1, 1, v547);
    }
    else
    {
      uint64_t v550 = v746;
      sub_21CA571E8(v549, v746, (uint64_t (*)(void))type metadata accessor for FMFFriend);
      ((void (*)(uint64_t, void, uint64_t, uint64_t))*v740)(v550, 0, 1, v547);
    }
    uint64_t v551 = (uint64_t)v747;
    swift_beginAccess();
    uint64_t v552 = v560;
    uint64_t v0 = v551;
    sub_21CA585EC(v550, v552, v561);
    swift_endAccess();
    sub_21CA57050(v549, (uint64_t (*)(void))type metadata accessor for FMFFriend);
    uint64_t v547 = v748;
    v548 = v719;
    unint64_t v120 = (unint64_t)v720;
    goto LABEL_215;
  }
  swift_release();
  uint64_t v563 = (uint64_t)v729;
  swift_beginAccess();
  uint64_t v564 = *(void *)(v563 + 32);
  uint64_t v565 = *(void *)(v564 + 64);
  v733 = (char *)(v564 + 64);
  uint64_t v0 = 1 << *(unsigned char *)(v564 + 32);
  uint64_t v566 = -1;
  if (v0 < 64) {
    uint64_t v566 = ~(-1 << v0);
  }
  unint64_t v567 = v566 & v565;
  swift_beginAccess();
  v734 = ((unint64_t)(v0 + 63) >> 6);
  uint64_t v732 = (uint64_t)&v734[-1].isa + 7;
  swift_bridgeObjectRetain();
  uint64_t v133 = 0;
  uint64_t v568 = v746;
  if (v567)
  {
LABEL_245:
    unint64_t v569 = __clz(__rbit64(v567));
    v567 &= v567 - 1;
    unint64_t v570 = v569 | (v133 << 6);
    v571 = v717;
    v572 = v718;
LABEL_246:
    uint64_t v573 = *(void *)(v564 + 56);
    v574 = (void *)(*(void *)(v564 + 48) + 16 * v570);
    uint64_t v575 = v574[1];
    void *v571 = *v574;
    v571[1] = v575;
    sub_21CA571E8(v573 + *(void *)(v745 + 72) * v570, (uint64_t)v571 + *(int *)(v534 + 48), (uint64_t (*)(void))type metadata accessor for FMFFriend);
    ((void (*)(void *, void, uint64_t, uint64_t))v737)(v571, 0, 1, v534);
    swift_bridgeObjectRetain();
    goto LABEL_256;
  }
  while (2)
  {
    uint64_t v576 = v133 + 1;
    v572 = v718;
    if (__OFADD__(v133, 1)) {
      goto LABEL_362;
    }
    v571 = v717;
    if (v576 < (uint64_t)v734)
    {
      unint64_t v577 = *(void *)&v733[8 * v576];
      if (v577) {
        goto LABEL_250;
      }
      v133 += 2;
      if (v576 + 1 >= (uint64_t)v734)
      {
        uint64_t v133 = v576;
      }
      else
      {
        unint64_t v577 = *(void *)&v733[8 * v133];
        if (v577)
        {
          ++v576;
LABEL_250:
          unint64_t v567 = (v577 - 1) & v577;
          unint64_t v570 = __clz(__rbit64(v577)) + (v576 << 6);
          uint64_t v133 = v576;
          goto LABEL_246;
        }
        if (v576 + 2 < (uint64_t)v734)
        {
          unint64_t v577 = *(void *)&v733[8 * v576 + 16];
          if (v577)
          {
            v576 += 2;
            goto LABEL_250;
          }
          uint64_t v581 = v576 + 3;
          if (v576 + 3 < (uint64_t)v734)
          {
            unint64_t v577 = *(void *)&v733[8 * v581];
            if (v577)
            {
              v576 += 3;
              goto LABEL_250;
            }
            while (1)
            {
              uint64_t v576 = v581 + 1;
              if (__OFADD__(v581, 1)) {
                break;
              }
              if (v576 >= (uint64_t)v734)
              {
                uint64_t v133 = v732;
                goto LABEL_255;
              }
              unint64_t v577 = *(void *)&v733[8 * v576];
              ++v581;
              if (v577) {
                goto LABEL_250;
              }
            }
LABEL_378:
            __break(1u);
            goto LABEL_379;
          }
          uint64_t v133 = v576 + 2;
        }
      }
    }
LABEL_255:
    ((void (*)(char *, uint64_t, uint64_t, uint64_t))v737)(v717, 1, 1, v534);
    unint64_t v567 = 0;
LABEL_256:
    sub_21CA26A4C((uint64_t)v571, (uint64_t)v572, &qword_267C97278);
    if (((unsigned int (*)(uint64_t *, uint64_t, uint64_t))v739)(v572, 1, v534) != 1)
    {
      uint64_t v578 = *v572;
      unint64_t v120 = v572[1];
      uint64_t v579 = (uint64_t)v572 + *(int *)(v534 + 48);
      ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))*v740)(v568, 1, 1, v748);
      uint64_t v580 = v578;
      uint64_t v0 = (uint64_t)v747;
      sub_21CA585EC(v568, v580, v120);
      sub_21CA57050(v579, (uint64_t (*)(void))type metadata accessor for FMFFriend);
      if (v567) {
        goto LABEL_245;
      }
      continue;
    }
    break;
  }
  swift_endAccess();
  swift_release();
  uint64_t v582 = (uint64_t)v747;
  uint64_t v583 = *v747;
  uint64_t v584 = *(void *)(*v747 + 64);
  uint64_t v723 = *v747 + 64;
  uint64_t v585 = 1 << *(unsigned char *)(v583 + 32);
  uint64_t v586 = -1;
  if (v585 < 64) {
    uint64_t v586 = ~(-1 << v585);
  }
  unint64_t v587 = v586 & v584;
  uint64_t v0 = (unint64_t)(v585 + 63) >> 6;
  v719 = (uint64_t *)(v0 - 1);
  v588 = (uint64_t (*)(void))swift_bridgeObjectRetain();
  uint64_t v133 = 0;
  v725 = (uint64_t *)v0;
  v727 = v588;
  v720 = (char *)(v0 - 5);
  v721 = (char *)v588 + 104;
  v724 = (uint64_t *)(MEMORY[0x263F8EE58] + 8);
  v589 = v699;
  unint64_t v120 = (unint64_t)v700;
  uint64_t v590 = (uint64_t)v698;
  v728 = v536;
  if (!v587)
  {
LABEL_278:
    uint64_t v597 = v133 + 1;
    if (!__OFADD__(v133, 1))
    {
      if (v597 < (uint64_t)v725)
      {
        unint64_t v598 = *(void *)(v723 + 8 * v597);
        if (v598)
        {
LABEL_281:
          v592 = (char *)((v598 - 1) & v598);
          unint64_t v593 = __clz(__rbit64(v598)) + (v597 << 6);
          uint64_t v133 = v597;
          goto LABEL_277;
        }
        if (v133 + 2 >= (uint64_t)v725)
        {
          ++v133;
        }
        else
        {
          unint64_t v598 = *(void *)(v723 + 8 * (v133 + 2));
          if (v598)
          {
            uint64_t v597 = v133 + 2;
            goto LABEL_281;
          }
          if (v133 + 3 >= (uint64_t)v725)
          {
            v133 += 2;
          }
          else
          {
            unint64_t v598 = *(void *)(v723 + 8 * (v133 + 3));
            if (v598)
            {
              uint64_t v597 = v133 + 3;
              goto LABEL_281;
            }
            uint64_t v597 = v133 + 4;
            if (v133 + 4 >= (uint64_t)v725)
            {
              v133 += 3;
            }
            else
            {
              unint64_t v598 = *(void *)(v723 + 8 * v597);
              if (v598) {
                goto LABEL_281;
              }
              while (v720 != (char *)v133)
              {
                unint64_t v598 = *(void *)&v721[8 * v133++];
                if (v598)
                {
                  uint64_t v597 = v133 + 4;
                  goto LABEL_281;
                }
              }
              uint64_t v133 = (uint64_t)v719;
            }
          }
        }
      }
      ((void (*)(unint64_t, uint64_t, uint64_t, uint64_t))v737)(v120, 1, 1, v534);
      v592 = 0;
      goto LABEL_287;
    }
    goto LABEL_363;
  }
  while (2)
  {
    while (2)
    {
      unint64_t v591 = __clz(__rbit64(v587));
      v592 = (char *)((v587 - 1) & v587);
      unint64_t v593 = v591 | (v133 << 6);
LABEL_277:
      uint64_t v594 = *((void *)v727 + 7);
      v595 = (void *)(*((void *)v727 + 6) + 16 * v593);
      uint64_t v596 = v595[1];
      *(void *)unint64_t v120 = *v595;
      *(void *)(v120 + 8) = v596;
      sub_21CA571E8(v594 + *(void *)(v745 + 72) * v593, v120 + *(int *)(v534 + 48), (uint64_t (*)(void))type metadata accessor for FMFFriend);
      ((void (*)(unint64_t, void, uint64_t, uint64_t))v737)(v120, 0, 1, v534);
      swift_bridgeObjectRetain();
LABEL_287:
      sub_21CA26A4C(v120, (uint64_t)v589, &qword_267C97278);
      if (((unsigned int (*)(uint64_t *, uint64_t, uint64_t))v739)(v589, 1, v534) == 1)
      {
        swift_release();
        uint64_t v624 = *(void *)(v695 + 760);
        if (!v624) {
          goto LABEL_352;
        }
        uint64_t v625 = *(unsigned __int8 *)(v695 + 744);
        uint64_t v626 = *(void *)(v695 + 752);
        unint64_t v627 = ((unint64_t)*(unsigned int *)(v695 + 745) << 8) | ((unint64_t)(*(unsigned __int16 *)(v695 + 749) | (*(unsigned __int8 *)(v695 + 751) << 16)) << 40) | v625;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_21CA59D84(v627, v626, v624);
        if (v625) {
          goto LABEL_352;
        }
        uint64_t v628 = *(void *)v582;
        uint64_t v629 = *(void *)(*(void *)v582 + 64);
        v727 = (uint64_t (*)(void))(*(void *)v582 + 64);
        uint64_t v630 = 1 << *(unsigned char *)(v628 + 32);
        uint64_t v631 = -1;
        if (v630 < 64) {
          uint64_t v631 = ~(-1 << v630);
        }
        uint64_t v133 = v631 & v629;
        uint64_t v0 = (unint64_t)(v630 + 63) >> 6;
        v729 = (char *)v730 + 56;
        v728 = (uint64_t (*)())(v672 + 56);
        v724 = (uint64_t *)(v0 - 1);
        uint64_t v632 = swift_bridgeObjectRetain();
        uint64_t v633 = 0;
        uint64_t v731 = v0;
        uint64_t v732 = v632;
        v725 = (uint64_t *)(v632 + 104);
        v726 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v0 - 5);
        uint64_t v634 = (uint64_t)v663;
        uint64_t v635 = v748;
        unint64_t v120 = (unint64_t)v681;
        if (v133)
        {
          while (1)
          {
            unint64_t v636 = __clz(__rbit64(v133));
            v133 &= v133 - 1;
            unint64_t v637 = v636 | (v633 << 6);
LABEL_323:
            uint64_t v638 = *(void *)(v732 + 56);
            v639 = (void *)(*(void *)(v732 + 48) + 16 * v637);
            uint64_t v640 = v639[1];
            *(void *)unint64_t v120 = *v639;
            *(void *)(v120 + 8) = v640;
            sub_21CA571E8(v638 + *(void *)(v745 + 72) * v637, v120 + *(int *)(v534 + 48), (uint64_t (*)(void))type metadata accessor for FMFFriend);
            ((void (*)(unint64_t, void, uint64_t, uint64_t))v737)(v120, 0, 1, v534);
            swift_bridgeObjectRetain();
LABEL_333:
            v643 = v680;
            sub_21CA26A4C(v120, (uint64_t)v680, &qword_267C97278);
            if (((unsigned int (*)(uint64_t *, uint64_t, uint64_t))v739)(v643, 1, v534) == 1) {
              break;
            }
            v644 = v643;
            uint64_t v0 = *v643;
            uint64_t v645 = v644[1];
            sub_21CA591A4((uint64_t)v644 + *(int *)(v534 + 48), v634, (uint64_t (*)(void))type metadata accessor for FMFFriend);
            uint64_t v646 = *(void *)(v634 + *(int *)(v635 + 36));
            if ((v646 & 8) != 0)
            {
              v733 = (char *)v0;
              v734 = v133;
              v744 = (uint64_t *)v633;
              if ((v646 & 2) != 0)
              {
                uint64_t v651 = v634;
                uint64_t v649 = v634;
                uint64_t v650 = v746;
                sub_21CA571E8(v651, v746, (uint64_t (*)(void))type metadata accessor for FMFFriend);
                v730 = *v740;
                ((void (*)(uint64_t, void, uint64_t, uint64_t))v730)(v650, 0, 1, v635);
                uint64_t v652 = v743;
                (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))v729)(v743, 1, 1, v741);
                v752 = 0;
                char v753 = 1;
                uint64_t v750 = 8;
                char v751 = 0;
                uint64_t v653 = v736;
                (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))v728)(v736, 1, 1, v742);
                uint64_t v767 = 0;
                long long v765 = 0u;
                long long v766 = 0u;
                long long v764 = 0u;
                uint64_t v654 = v652;
                uint64_t v655 = v748;
                sub_21CA5572C(v650, v654, (unint64_t *)&v752, (uint64_t)&v750, v653, 0, 1, (uint64_t *)&v764, v679, 0, 0, 2u, 2u, 2);
                uint64_t v648 = v655;
                ((void (*)(void *, void, uint64_t, uint64_t))v730)(v679, 0, 1, v655);
                v647 = v679;
              }
              else
              {
                v647 = v679;
                uint64_t v648 = v635;
                ((void (*)(void *, uint64_t, uint64_t, uint64_t))*v740)(v679, 1, 1, v635);
                uint64_t v649 = v634;
                uint64_t v650 = v746;
              }
              uint64_t v656 = (uint64_t)v647;
              sub_21CA24E80((uint64_t)v647, v650, &qword_267C96F10);
              uint64_t v0 = (uint64_t)v747;
              swift_beginAccess();
              sub_21CA585EC(v650, (uint64_t)v733, v645);
              swift_endAccess();
              sub_21CA1B88C(v656, &qword_267C96F10);
              sub_21CA57050(v649, (uint64_t (*)(void))type metadata accessor for FMFFriend);
              uint64_t v634 = v649;
              uint64_t v633 = (uint64_t)v744;
              uint64_t v635 = v648;
              uint64_t v133 = (uint64_t)v734;
              unint64_t v120 = (unint64_t)v681;
              if (!v734) {
                goto LABEL_324;
              }
            }
            else
            {
              sub_21CA57050(v634, (uint64_t (*)(void))type metadata accessor for FMFFriend);
              swift_bridgeObjectRelease();
              unint64_t v120 = (unint64_t)v681;
              if (!v133) {
                goto LABEL_324;
              }
            }
          }
          swift_release();
LABEL_352:
          swift_retain();
          uint64_t v657 = swift_bridgeObjectRetain();
          uint64_t v126 = sub_21CB2A8AC(v657, v695);
          swift_bridgeObjectRelease();
          swift_release();
          uint64_t v658 = v695;
          if ((*(unsigned char *)(*(void *)(v695 + 48)
                         + OBJC_IVAR____TtC7FMFCore23FMFManagerConfiguration_disableContactMatching) & 1) == 0)
          {
            uint64_t v659 = *(void *)(v695 + 720);
            swift_bridgeObjectRetain();
            sub_21CA5DBA0(v126, v659);
            swift_bridgeObjectRelease();
            uint64_t v658 = v695;
          }
          *(void *)(v658 + 576) = v126;
          swift_bridgeObjectRetain();
          swift_release();
          swift_bridgeObjectRelease();
          return v126;
        }
LABEL_324:
        uint64_t v641 = v633 + 1;
        if (__OFADD__(v633, 1)) {
          goto LABEL_366;
        }
        if (v641 < v731)
        {
          unint64_t v642 = *((void *)v727 + v641);
          if (v642)
          {
LABEL_327:
            uint64_t v133 = (v642 - 1) & v642;
            unint64_t v637 = __clz(__rbit64(v642)) + (v641 << 6);
            uint64_t v633 = v641;
            goto LABEL_323;
          }
          if (v633 + 2 >= v731)
          {
            ++v633;
          }
          else
          {
            unint64_t v642 = *((void *)v727 + v633 + 2);
            if (v642)
            {
              uint64_t v641 = v633 + 2;
              goto LABEL_327;
            }
            if (v633 + 3 >= v731)
            {
              v633 += 2;
            }
            else
            {
              unint64_t v642 = *((void *)v727 + v633 + 3);
              if (v642)
              {
                uint64_t v641 = v633 + 3;
                goto LABEL_327;
              }
              uint64_t v641 = v633 + 4;
              if (v633 + 4 >= v731)
              {
                v633 += 3;
              }
              else
              {
                unint64_t v642 = *((void *)v727 + v641);
                if (v642) {
                  goto LABEL_327;
                }
                while (v726 != (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))v633)
                {
                  unint64_t v642 = v725[v633++];
                  if (v642)
                  {
                    uint64_t v641 = v633 + 4;
                    goto LABEL_327;
                  }
                }
                uint64_t v633 = (uint64_t)v724;
              }
            }
          }
        }
        ((void (*)(unint64_t, uint64_t, uint64_t, uint64_t))v737)(v120, 1, 1, v534);
        uint64_t v133 = 0;
        goto LABEL_333;
      }
      v733 = v592;
      v734 = v133;
      v729 = (char *)*v589;
      uint64_t v732 = v589[1];
      uint64_t v599 = v731;
      sub_21CA591A4((uint64_t)v589 + *(int *)(v534 + 48), v731, (uint64_t (*)(void))type metadata accessor for FMFFriend);
      uint64_t v600 = v748;
      uint64_t v601 = *(void *)(v599 + *(int *)(v748 + 36));
      uint64_t v602 = v715;
      sub_21CA571E8(v599, v715, (uint64_t (*)(void))type metadata accessor for FMFFriend);
      if ((v601 & 2) == 0)
      {
        sub_21CA57050(v602, (uint64_t (*)(void))type metadata accessor for FMFFriend);
        goto LABEL_291;
      }
      int v603 = *(unsigned __int8 *)(v602 + *(int *)(v600 + 40));
      sub_21CA57050(v602, (uint64_t (*)(void))type metadata accessor for FMFFriend);
      if (v603 == 2)
      {
LABEL_291:
        sub_21CA571E8(v599, v590, (uint64_t (*)(void))type metadata accessor for FMFFriend);
LABEL_292:
        uint64_t v0 = *(void *)(v590 + *(int *)(v748 + 36));
        sub_21CA57050(v590, (uint64_t (*)(void))type metadata accessor for FMFFriend);
        if ((v0 & 8) == 0)
        {
          sub_21CA57050(v599, (uint64_t (*)(void))type metadata accessor for FMFFriend);
          swift_bridgeObjectRelease();
          uint64_t v582 = (uint64_t)v747;
          uint64_t v133 = (uint64_t)v734;
          unint64_t v587 = (unint64_t)v733;
          if (!v733) {
            goto LABEL_278;
          }
          continue;
        }
      }
      else
      {
        sub_21CA571E8(v599, v590, (uint64_t (*)(void))type metadata accessor for FMFFriend);
        if (v603) {
          goto LABEL_292;
        }
        sub_21CA57050(v590, (uint64_t (*)(void))type metadata accessor for FMFFriend);
      }
      break;
    }
    v604 = v713;
    uint64_t v605 = v722;
    ((void (*)(char *, void (**)(uint64_t, uint64_t, uint64_t, uint64_t), uint64_t))v705)(v713, v726, v722);
    v606 = v744;
    sub_21CA571E8(v599, (uint64_t)v744, (uint64_t (*)(void))type metadata accessor for FMFFriend);
    unint64_t v607 = (*(unsigned __int8 *)(v745 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v745 + 80);
    uint64_t v608 = swift_allocObject();
    sub_21CA591A4((uint64_t)v606, v608 + v607, (uint64_t (*)(void))type metadata accessor for FMFFriend);
    v609 = sub_21CB88070();
    os_log_type_t v610 = sub_21CB88880();
    uint64_t v611 = swift_allocObject();
    *(unsigned char *)(v611 + 16) = 32;
    uint64_t v612 = swift_allocObject();
    *(unsigned char *)(v612 + 16) = 8;
    uint64_t v613 = swift_allocObject();
    *(void *)(v613 + 16) = sub_21CB2B540;
    *(void *)(v613 + 24) = v608;
    uint64_t v614 = swift_allocObject();
    *(void *)(v614 + 16) = sub_21CB2B5BC;
    *(void *)(v614 + 24) = v613;
    uint64_t v615 = swift_allocObject();
    sub_21CB090A8(v615, 3);
    void *v616 = sub_21CB2C1FC;
    v616[1] = v611;
    v616[2] = sub_21CB2C1FC;
    v616[3] = v612;
    v616[4] = sub_21CB2B5C4;
    v616[5] = v614;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRelease();
    if (!os_log_type_enabled(v609, v610))
    {

      swift_release();
      swift_release();
      swift_release();
      v712(v604, v605);
      uint64_t v582 = (uint64_t)v747;
      uint64_t v620 = v731;
      uint64_t v0 = v731;
      Swift::Bool v621 = FMFFriend.isBlocked()();
      v589 = v699;
      unint64_t v120 = (unint64_t)v700;
      uint64_t v590 = (uint64_t)v698;
      if (v621)
      {
        uint64_t v622 = v746;
        ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))*v740)(v746, 1, 1, v748);
        swift_beginAccess();
        uint64_t v623 = v622;
        uint64_t v0 = v582;
        sub_21CA585EC(v623, (uint64_t)v729, v732);
        swift_endAccess();
        sub_21CA57050(v620, (uint64_t (*)(void))type metadata accessor for FMFFriend);
      }
      else
      {
        sub_21CA57050(v620, (uint64_t (*)(void))type metadata accessor for FMFFriend);
        swift_bridgeObjectRelease();
      }
      uint64_t v133 = (uint64_t)v734;
      unint64_t v587 = (unint64_t)v733;
      if (!v733) {
        goto LABEL_278;
      }
      continue;
    }
    break;
  }
  os_log_type_t v617 = v610;
  v618 = (uint8_t *)sub_21CA69690();
  uint64_t v619 = swift_slowAlloc();
  uint64_t v750 = 0;
  *(_WORD *)v618 = 258;
  uint64_t v749 = v619;
  v752 = v618 + 2;
  *(void *)&long long v764 = sub_21CB2C1FC;
  *((void *)&v764 + 1) = v611;
  uint64_t v133 = (uint64_t)v735;
  sub_21CA69FFC((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v764, (uint64_t)&v752, (uint64_t)&v750, (uint64_t)&v749);
  if (!v133)
  {
    swift_release();
    *(void *)&long long v764 = sub_21CB2C1FC;
    *((void *)&v764 + 1) = v612;
    sub_21CA69FFC((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v764, (uint64_t)&v752, (uint64_t)&v750, (uint64_t)&v749);
    swift_release();
    *(void *)&long long v764 = sub_21CB2B5C4;
    *((void *)&v764 + 1) = v614;
    sub_21CA69FFC((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v764, (uint64_t)&v752, (uint64_t)&v750, (uint64_t)&v749);
    id v735 = 0;
    swift_release();
    _os_log_impl(&dword_21CA00000, v609, v617, "FMFDataManager: checking if person is blocked %s", v618, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x21D4B6B70](v619, -1, -1);
    sub_21CA69698();
  }
LABEL_379:

  __break(1u);
  __break(1u);
LABEL_380:
  uint64_t result = sub_21CB88FA0();
  __break(1u);
  return result;
}

uint64_t storeEnumTagSinglePayload for FMFFriend(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_21CABF874);
}

uint64_t sub_21CA55718(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_21CA77D34);
}

uint64_t sub_21CA5572C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, int a7@<W6>, uint64_t *a8@<X7>, void *a9@<X8>, uint64_t a10, uint64_t a11, unsigned __int8 a12, unsigned __int8 a13, char a14)
{
  int v166 = a7;
  uint64_t v167 = a6;
  uint64_t v174 = a5;
  uint64_t v199 = a4;
  uint64_t v196 = a2;
  uint64_t v197 = a1;
  uint64_t v17 = type metadata accessor for FMFLocation();
  uint64_t v195 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v151 = (uint64_t)&v145 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_21CA57E34(&qword_267C95040);
  MEMORY[0x270FA5388](v19 - 8);
  uint64_t v175 = (uint64_t)&v145 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v181 = type metadata accessor for FMFIntermediateFriend();
  uint64_t v152 = *(void *)(v181 - 8);
  uint64_t v21 = MEMORY[0x270FA5388](v181);
  uint64_t v147 = (uint64_t)&v145 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = MEMORY[0x270FA5388](v21);
  uint64_t v146 = (uint64_t)&v145 - v24;
  uint64_t v25 = MEMORY[0x270FA5388](v23);
  char v176 = (char *)&v145 - v26;
  MEMORY[0x270FA5388](v25);
  v178 = (char *)&v145 - v27;
  uint64_t v28 = sub_21CA57E34(&qword_267C96F10);
  MEMORY[0x270FA5388](v28 - 8);
  uint64_t v30 = (char *)&v145 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = (int *)type metadata accessor for FMFFriend();
  uint64_t v32 = *((void *)v31 - 1);
  MEMORY[0x270FA5388](v31);
  uint64_t v34 = (uint64_t *)((char *)&v145 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v35 = sub_21CA57E34((uint64_t *)&unk_267C96EF0);
  MEMORY[0x270FA5388](v35 - 8);
  uint64_t v37 = (char *)&v145 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = sub_21CA57E34((uint64_t *)&unk_267C951B0);
  MEMORY[0x270FA5388](v38 - 8);
  uint64_t v40 = (char *)&v145 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v159 = *a3;
  int v184 = *((unsigned __int8 *)a3 + 8);
  uint64_t v172 = *(void *)v199;
  int v171 = *(unsigned __int8 *)(v199 + 8);
  uint64_t v158 = *a8;
  uint64_t v199 = a8[1];
  uint64_t v157 = a8[2];
  uint64_t v156 = a8[3];
  uint64_t v155 = a8[4];
  uint64_t v154 = a8[5];
  uint64_t v153 = a8[6];
  uint64_t v164 = v31[13];
  *((unsigned char *)a9 + v164) = 0;
  uint64_t v163 = v31[14];
  *((unsigned char *)a9 + v163) = 2;
  uint64_t v173 = v31[18];
  *((unsigned char *)a9 + v173) = 1;
  uint64_t v41 = v31[21];
  uint64_t v186 = a9;
  *((unsigned char *)a9 + v41) = 7;
  uint64_t v42 = sub_21CB87590();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 56))(v40, 1, 1, v42);
  uint64_t v43 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v195 + 56);
  uint64_t v168 = v17;
  uint64_t v150 = v43;
  uint64_t v149 = v195 + 56;
  v43((uint64_t)v37, 1, 1, v17);
  sub_21CA24E80(v197, (uint64_t)v30, &qword_267C96F10);
  int v44 = (*(uint64_t (**)(char *, uint64_t, int *))(v32 + 48))(v30, 1, v31);
  unint64_t v191 = v40;
  uint64_t v165 = v37;
  if (v44 == 1)
  {
    sub_21CA1B88C((uint64_t)v30, &qword_267C96F10);
    uint64_t v190 = 0;
    uint64_t v45 = 0;
    uint64_t v179 = 0;
    uint64_t v198 = 0;
    uint64_t v46 = 0;
    uint64_t v47 = 0;
    uint64_t v160 = 0;
    uint64_t v177 = 0;
    uint64_t v48 = 0;
    uint64_t v49 = 0;
    int v162 = 0;
    uint64_t v182 = 0;
    uint64_t v187 = 0;
    uint64_t v183 = 0;
    uint64_t v50 = 0;
    unint64_t v193 = 0xE000000000000000;
    uint64_t v192 = MEMORY[0x263F8EE88];
    int v180 = 2;
    uint64_t v161 = 0x7FFFFFFFFFFFFFFFLL;
    int v148 = 2;
    int v185 = 2;
    int v189 = 2;
    int v188 = 2;
  }
  else
  {
    sub_21CA1B88C((uint64_t)v37, (uint64_t *)&unk_267C96EF0);
    sub_21CA1B88C((uint64_t)v40, (uint64_t *)&unk_267C951B0);
    sub_21CA58534((uint64_t)v30, (uint64_t)v34, (uint64_t (*)(void))type metadata accessor for FMFFriend);
    uint64_t v183 = *v34;
    unint64_t v193 = v34[1];
    uint64_t v51 = v34[3];
    uint64_t v182 = v34[2];
    uint64_t v192 = v34[4];
    sub_21CA24E80((uint64_t)v34 + v31[8], (uint64_t)v40, (uint64_t *)&unk_267C951B0);
    uint64_t v52 = v31[10];
    uint64_t v145 = *(void *)((char *)v34 + v31[9]);
    int v180 = *((unsigned __int8 *)v34 + v52);
    uint64_t v53 = v31[12];
    int v188 = *((unsigned __int8 *)v34 + v31[11]);
    int v189 = *((unsigned __int8 *)v34 + v53);
    int v148 = *((unsigned __int8 *)v34 + v31[18]);
    uint64_t v54 = v31[14];
    int v162 = *((unsigned __int8 *)v34 + v31[13]);
    int v185 = *((unsigned __int8 *)v34 + v54);
    uint64_t v55 = (uint64_t)v34 + v31[20];
    uint64_t v161 = *(void *)((char *)v34 + v31[15]);
    sub_21CA24E80(v55, (uint64_t)v37, (uint64_t *)&unk_267C96EF0);
    uint64_t v56 = (void *)((char *)v34 + v31[19]);
    uint64_t v57 = *v56;
    uint64_t v169 = v56[1];
    uint64_t v58 = v56[3];
    uint64_t v170 = v56[2];
    uint64_t v59 = v56[4];
    uint64_t v48 = v56[5];
    uint64_t v60 = v56[6];
    uint64_t v61 = v31[17];
    uint64_t v62 = v31;
    uint64_t v63 = *(void *)((char *)v34 + v31[16]);
    uint64_t v194 = *(void *)((char *)v34 + v61);
    *((unsigned char *)v186 + v41) = *((unsigned char *)v34 + v62[21]);
    uint64_t v64 = v34[5];
    uint64_t v187 = v51;
    uint64_t v65 = v57;
    uint64_t v198 = v57;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v66 = v65;
    uint64_t v67 = v169;
    uint64_t v68 = v170;
    uint64_t v160 = v58;
    uint64_t v177 = v59;
    uint64_t v49 = v60;
    sub_21CA5859C(v66, v169);
    uint64_t v190 = v64;
    swift_bridgeObjectRetain();
    uint64_t v179 = v63;
    uint64_t v31 = v62;
    swift_bridgeObjectRetain();
    uint64_t v69 = v194;
    swift_bridgeObjectRetain();
    sub_21CA58218((uint64_t)v34, (uint64_t (*)(void))type metadata accessor for FMFFriend);
    uint64_t v50 = v145;
    uint64_t v46 = v67;
    uint64_t v47 = v68;
    uint64_t v45 = v69;
  }
  uint64_t v70 = (uint64_t *)v178;
  uint64_t v71 = (int *)v181;
  uint64_t v72 = (uint64_t)v176;
  uint64_t v73 = v175;
  uint64_t v194 = v45;
  if (v184)
  {
    uint64_t v74 = v199;
    uint64_t v75 = v172;
    int v76 = v171;
    uint64_t v77 = v160;
    uint64_t v78 = v49;
    goto LABEL_44;
  }
  uint64_t v169 = v46;
  uint64_t v170 = v47;
  unint64_t v79 = v159;
  if ((v159 & ~v50) == 0) {
    unint64_t v79 = 0;
  }
  v50 |= v79;
  sub_21CA24E80(v196, v175, &qword_267C95040);
  if ((*(unsigned int (**)(uint64_t, uint64_t, int *))(v152 + 48))(v73, 1, v71) == 1)
  {
    sub_21CA1B88C(v73, &qword_267C95040);
    uint64_t v74 = v199;
    uint64_t v75 = v172;
    int v76 = v171;
    uint64_t v77 = v160;
    uint64_t v47 = v170;
    uint64_t v46 = v169;
    uint64_t v78 = v49;
    goto LABEL_44;
  }
  uint64_t v152 = v48;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_21CA58534(v73, (uint64_t)v70, (uint64_t (*)(void))type metadata accessor for FMFIntermediateFriend);
  uint64_t v80 = *v70;
  unint64_t v81 = v70[1];
  uint64_t v82 = v70[2];
  uint64_t v83 = v70[3];
  uint64_t v175 = v49;
  uint64_t v182 = v82;
  if (v188 == 2)
  {
    sub_21CA57118((uint64_t)v70, v72, (uint64_t (*)(void))type metadata accessor for FMFIntermediateFriend);
    uint64_t v84 = (uint64_t)v191;
LABEL_13:
    char v86 = *(unsigned char *)(v72 + v71[14]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_21CA58218(v72, (uint64_t (*)(void))type metadata accessor for FMFIntermediateFriend);
    int v87 = v86 & 1;
    goto LABEL_15;
  }
  char v85 = v188;
  sub_21CA57118((uint64_t)v70, v72, (uint64_t (*)(void))type metadata accessor for FMFIntermediateFriend);
  uint64_t v84 = (uint64_t)v191;
  if ((v85 & 1) == 0) {
    goto LABEL_13;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_21CA58218(v72, (uint64_t (*)(void))type metadata accessor for FMFIntermediateFriend);
  int v87 = 1;
LABEL_15:
  int v188 = v87;
  char v88 = v189;
  uint64_t v89 = v146;
  if (v189 == 2)
  {
    sub_21CA57118((uint64_t)v70, v146, (uint64_t (*)(void))type metadata accessor for FMFIntermediateFriend);
LABEL_18:
    char v90 = *(unsigned char *)(v89 + v71[15]);
    sub_21CA58218(v89, (uint64_t (*)(void))type metadata accessor for FMFIntermediateFriend);
    int v91 = v90 & 1;
    goto LABEL_20;
  }
  sub_21CA57118((uint64_t)v70, v146, (uint64_t (*)(void))type metadata accessor for FMFIntermediateFriend);
  if ((v88 & 1) == 0) {
    goto LABEL_18;
  }
  sub_21CA58218(v89, (uint64_t (*)(void))type metadata accessor for FMFIntermediateFriend);
  int v91 = 1;
LABEL_20:
  int v189 = v91;
  char v92 = v185;
  uint64_t v93 = v147;
  if (v185 == 2)
  {
    sub_21CA57118((uint64_t)v70, v147, (uint64_t (*)(void))type metadata accessor for FMFIntermediateFriend);
LABEL_23:
    char v94 = *(unsigned char *)(v93 + v71[16]);
    sub_21CA58218(v93, (uint64_t (*)(void))type metadata accessor for FMFIntermediateFriend);
    int v95 = v94 & 1;
    goto LABEL_25;
  }
  sub_21CA57118((uint64_t)v70, v147, (uint64_t (*)(void))type metadata accessor for FMFIntermediateFriend);
  if ((v92 & 1) == 0) {
    goto LABEL_23;
  }
  sub_21CA58218(v93, (uint64_t (*)(void))type metadata accessor for FMFIntermediateFriend);
  int v95 = 1;
LABEL_25:
  int v185 = v95;
  uint64_t v78 = v175;
  uint64_t v190 = *(uint64_t *)((char *)v70 + v71[17]);
  uint64_t v187 = v83;
  unint64_t v193 = v81;
  uint64_t v183 = v80;
  switch(v159)
  {
    case 1uLL:
      uint64_t v96 = v70[9];
      if (v96)
      {
        uint64_t v97 = v70[8];
        sub_21CA57E34((uint64_t *)&unk_267C96F20);
        uint64_t inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_21CB8B220;
        *(void *)(inited + 32) = v97;
        uint64_t v48 = v152;
        *(void *)(inited + 40) = v96;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v192 = sub_21CAB559C(inited, v192);
        swift_setDeallocating();
        swift_arrayDestroy();
        uint64_t v77 = v160;
      }
      else
      {
        if (v70[4])
        {
          swift_bridgeObjectRetain();
          uint64_t v108 = swift_bridgeObjectRetain();
          uint64_t v109 = sub_21CA5893C(v108);
          swift_bridgeObjectRelease();
          uint64_t v192 = sub_21CA587BC(v109, v192);
        }
        else
        {
          swift_bridgeObjectRetain();
        }
        uint64_t v77 = v160;
        uint64_t v48 = v152;
      }
      sub_21CA1B88C(v84, (uint64_t *)&unk_267C951B0);
      sub_21CA24E80((uint64_t)v70 + *(int *)(v181 + 48), v84, (uint64_t *)&unk_267C951B0);
      uint64_t v78 = v175;
      goto LABEL_43;
    case 2uLL:
      if (!v70[5])
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        sub_21CABD7FC(v198, v169);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        __break(1u);
LABEL_78:
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        sub_21CABD7FC(v198, v169);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        __break(1u);
LABEL_79:
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        sub_21CABD7FC(v198, v169);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t result = swift_bridgeObjectRelease();
        __break(1u);
        return result;
      }
      swift_bridgeObjectRetain();
      uint64_t v99 = swift_bridgeObjectRetain();
      uint64_t v100 = sub_21CA5893C(v99);
      swift_bridgeObjectRelease();
      uint64_t v192 = sub_21CA587BC(v100, v192);
      uint64_t v101 = v71[14];
      int v180 = *((unsigned __int8 *)v70 + v71[13]);
      int v188 = *((unsigned __int8 *)v70 + v101);
      int v189 = *((unsigned __int8 *)v70 + v71[15]);
LABEL_36:
      uint64_t v78 = v175;
LABEL_37:
      uint64_t v77 = v160;
      uint64_t v48 = v152;
LABEL_43:
      sub_21CA58218((uint64_t)v70, (uint64_t (*)(void))type metadata accessor for FMFIntermediateFriend);
      uint64_t v74 = v199;
      uint64_t v75 = v172;
      int v76 = v171;
      uint64_t v47 = v170;
      uint64_t v46 = v169;
      break;
    case 4uLL:
      sub_21CA57E34((uint64_t *)&unk_267C96F20);
      uint64_t v102 = swift_initStackObject();
      *(_OWORD *)(v102 + 16) = xmmword_21CB8B220;
      uint64_t v103 = v70[7];
      if (!v103) {
        goto LABEL_78;
      }
      uint64_t v104 = v102;
      uint64_t v105 = v70[6];
      goto LABEL_35;
    case 8uLL:
      sub_21CA57E34((uint64_t *)&unk_267C96F20);
      uint64_t v106 = swift_initStackObject();
      *(_OWORD *)(v106 + 16) = xmmword_21CB8B220;
      uint64_t v103 = v70[9];
      if (!v103) {
        goto LABEL_79;
      }
      uint64_t v104 = v106;
      uint64_t v105 = v70[8];
LABEL_35:
      *(void *)(v104 + 32) = v105;
      *(void *)(v104 + 40) = v103;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v107 = sub_21CA5893C(v104);
      swift_setDeallocating();
      swift_arrayDestroy();
      uint64_t v192 = sub_21CA587BC(v107, v192);
      goto LABEL_36;
    default:
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v192 = MEMORY[0x263F8EE88];
      goto LABEL_37;
  }
LABEL_44:
  uint64_t v110 = v186;
  LODWORD(v178) = a13;
  if ((v50 & v75) == 0) {
    int v76 = 1;
  }
  BOOL v111 = v76 == 0;
  uint64_t v112 = -1;
  if (v111) {
    uint64_t v112 = ~v75;
  }
  uint64_t v113 = v112 & v50;
  if (v74)
  {
    sub_21CABD7FC(v198, v46);
    uint64_t v198 = v158;
    uint64_t v114 = v157;
    uint64_t v115 = v156;
    uint64_t v116 = v155;
    uint64_t v48 = v154;
    uint64_t v117 = v153;
  }
  else
  {
    uint64_t v199 = v46;
    uint64_t v117 = v78;
    uint64_t v116 = v177;
    uint64_t v115 = v77;
    uint64_t v114 = v47;
  }
  LODWORD(v181) = a12;
  unint64_t v118 = v193;
  *uint64_t v110 = v183;
  v110[1] = v118;
  uint64_t v119 = v187;
  v110[2] = v182;
  v110[3] = v119;
  v110[4] = v192;
  uint64_t v120 = (uint64_t)v110 + v31[8];
  uint64_t v121 = v31;
  uint64_t v122 = (uint64_t)v191;
  sub_21CA24E80((uint64_t)v191, v120, (uint64_t *)&unk_267C951B0);
  *(void *)((char *)v110 + v121[9]) = v113;
  char v123 = v180;
  if (a14 != 2) {
    char v123 = a14;
  }
  *((unsigned char *)v110 + v121[10]) = v123;
  *((unsigned char *)v110 + v121[11]) = v188;
  *((unsigned char *)v110 + v121[12]) = v189;
  uint64_t v124 = (void *)((char *)v110 + v121[19]);
  uint64_t v125 = v199;
  *uint64_t v124 = v198;
  v124[1] = v125;
  v124[2] = v114;
  v124[3] = v115;
  v124[4] = v116;
  v124[5] = v48;
  uint64_t v126 = v110;
  v124[6] = v117;
  *((unsigned char *)v110 + v163) = v185;
  if (v178 == 2)
  {
    uint64_t v127 = v168;
    char v128 = v162;
    uint64_t v129 = v167;
    char v130 = v181;
    if (v148 == 2)
    {
      uint64_t v131 = v173;
      uint64_t v132 = v121;
      if (v184) {
        LOBYTE(v133) = 1;
      }
      else {
        uint64_t v133 = (v159 >> 1) & 1;
      }
    }
    else
    {
      LOBYTE(v133) = v148 != 0;
      uint64_t v131 = v173;
      uint64_t v132 = v121;
    }
    uint64_t v134 = v174;
    sub_21CA1B88C(v196, &qword_267C95040);
    sub_21CA1B88C(v197, &qword_267C96F10);
    sub_21CA1B88C((uint64_t)v191, (uint64_t *)&unk_267C951B0);
  }
  else
  {
    LOBYTE(v133) = v178 & 1;
    sub_21CA1B88C(v196, &qword_267C95040);
    sub_21CA1B88C(v197, &qword_267C96F10);
    sub_21CA1B88C(v122, (uint64_t *)&unk_267C951B0);
    uint64_t v127 = v168;
    uint64_t v131 = v173;
    char v128 = v162;
    uint64_t v132 = v121;
    uint64_t v134 = v174;
    uint64_t v129 = v167;
    char v130 = v181;
  }
  uint64_t v135 = a10;
  *((unsigned char *)v126 + v131) = v133;
  if (v130 == 2) {
    char v136 = v128;
  }
  else {
    char v136 = v130 & 1;
  }
  *((unsigned char *)v126 + v164) = v136;
  v126[5] = v190;
  uint64_t v137 = v161;
  if ((v166 & 1) == 0) {
    uint64_t v137 = v129;
  }
  *(void *)((char *)v126 + v132[15]) = v137;
  int v138 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v195 + 48))(v134, 1, v127);
  uint64_t v139 = (uint64_t)v165;
  if (v138 == 1)
  {
    sub_21CA1B88C(v134, (uint64_t *)&unk_267C96EF0);
    uint64_t result = sub_21CA26A4C(v139, (uint64_t)v126 + v132[20], (uint64_t *)&unk_267C96EF0);
  }
  else
  {
    sub_21CA1B88C((uint64_t)v165, (uint64_t *)&unk_267C96EF0);
    uint64_t v141 = v151;
    sub_21CA58534(v134, v151, (uint64_t (*)(void))type metadata accessor for FMFLocation);
    uint64_t v142 = (uint64_t)v126 + v132[20];
    sub_21CA58534(v141, v142, (uint64_t (*)(void))type metadata accessor for FMFLocation);
    uint64_t result = v150(v142, 0, 1, v127);
  }
  uint64_t v143 = a11;
  uint64_t v144 = v194;
  if (a10) {
    uint64_t result = swift_bridgeObjectRelease();
  }
  else {
    uint64_t v135 = v179;
  }
  *(void *)((char *)v126 + v132[16]) = v135;
  if (a11) {
    uint64_t result = swift_bridgeObjectRelease();
  }
  else {
    uint64_t v143 = v144;
  }
  *(void *)((char *)v126 + v132[17]) = v143;
  return result;
}

uint64_t getEnumTagSinglePayload for FMFFriend(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_21CABF740);
}

void *sub_21CA56C1C(void *a1, char *a2, int *a3)
{
  uint64_t v5 = *((void *)a2 + 1);
  *a1 = *(void *)a2;
  a1[1] = v5;
  uint64_t v6 = *((void *)a2 + 3);
  a1[2] = *((void *)a2 + 2);
  a1[3] = v6;
  uint64_t v7 = *((void *)a2 + 5);
  a1[4] = *((void *)a2 + 4);
  a1[5] = v7;
  uint64_t v8 = *((void *)a2 + 7);
  a1[6] = *((void *)a2 + 6);
  a1[7] = v8;
  uint64_t v9 = *((void *)a2 + 9);
  uint64_t v10 = a3[10];
  __dst = (char *)a1 + v10;
  uint64_t v25 = &a2[v10];
  a1[8] = *((void *)a2 + 8);
  a1[9] = v9;
  uint64_t v11 = sub_21CB87590();
  uint64_t v26 = *(void *)(v11 - 8);
  uint64_t v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v12(v25, 1, v11))
  {
    uint64_t v13 = sub_21CA57E34((uint64_t *)&unk_267C951B0);
    memcpy(__dst, v25, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v26 + 16))(__dst, v25, v11);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v26 + 56))(__dst, 0, 1, v11);
  }
  uint64_t v14 = a3[11];
  uint64_t v15 = (char *)a1 + v14;
  uint64_t v16 = &a2[v14];
  if (v12(&a2[v14], 1, v11))
  {
    uint64_t v17 = sub_21CA57E34((uint64_t *)&unk_267C951B0);
    memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v26 + 16))(v15, v16, v11);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v26 + 56))(v15, 0, 1, v11);
  }
  uint64_t v18 = a3[12];
  uint64_t v19 = (char *)a1 + v18;
  uint64_t v20 = &a2[v18];
  if (v12(&a2[v18], 1, v11))
  {
    uint64_t v21 = sub_21CA57E34((uint64_t *)&unk_267C951B0);
    memcpy(v19, v20, *(void *)(*(void *)(v21 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v26 + 16))(v19, v20, v11);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v26 + 56))(v19, 0, 1, v11);
  }
  uint64_t v22 = a3[14];
  *((unsigned char *)a1 + a3[13]) = a2[a3[13]];
  *((unsigned char *)a1 + v22) = a2[v22];
  uint64_t v23 = a3[16];
  *((unsigned char *)a1 + a3[15]) = a2[a3[15]];
  *((unsigned char *)a1 + v23) = a2[v23];
  *(void *)((char *)a1 + a3[17]) = *(void *)&a2[a3[17]];
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_21CA56F30(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_21CA56F90(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_21CA56FF0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_21CA57050(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_21CA570B0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_21CA57118(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_21CA57180(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_21CA571E8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t type metadata accessor for FMFFriend()
{
  uint64_t result = qword_267C95A70;
  if (!qword_267C95A70) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t type metadata accessor for FMFIntermediateFriend()
{
  uint64_t result = qword_267C950F8;
  if (!qword_267C950F8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t initializeWithCopy for FMFLocation(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  uint64_t v7 = a3[8];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = sub_21CB875D0();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v10))
  {
    uint64_t v13 = sub_21CA57E34(&qword_267C96F00);
    memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v14 = a3[10];
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  *(unsigned char *)(a1 + v14) = *(unsigned char *)(a2 + v14);
  uint64_t v15 = a3[11];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = (void *)(a2 + v15);
  uint64_t v18 = (void *)v17[38];
  if (v18)
  {
    uint64_t v19 = v17[21];
    if (v19)
    {
      uint64_t v20 = v17[1];
      *(void *)uint64_t v16 = *v17;
      *(void *)(v16 + 8) = v20;
      uint64_t v21 = v17[3];
      *(void *)(v16 + 16) = v17[2];
      *(void *)(v16 + 24) = v21;
      uint64_t v22 = v17[5];
      *(void *)(v16 + 32) = v17[4];
      *(void *)(v16 + 40) = v22;
      uint64_t v23 = v17[7];
      *(void *)(v16 + 48) = v17[6];
      *(void *)(v16 + 56) = v23;
      uint64_t v24 = v17[9];
      *(void *)(v16 + 64) = v17[8];
      *(void *)(v16 + 72) = v24;
      uint64_t v25 = v17[11];
      *(void *)(v16 + 80) = v17[10];
      *(void *)(v16 + 88) = v25;
      uint64_t v26 = v17[13];
      *(void *)(v16 + 96) = v17[12];
      *(void *)(v16 + 104) = v26;
      uint64_t v27 = v17[15];
      *(void *)(v16 + 112) = v17[14];
      *(void *)(v16 + 120) = v27;
      uint64_t v28 = v17[17];
      *(void *)(v16 + 128) = v17[16];
      *(void *)(v16 + 136) = v28;
      uint64_t v29 = v17[19];
      *(void *)(v16 + 144) = v17[18];
      *(void *)(v16 + 152) = v29;
      *(void *)(v16 + 160) = v17[20];
      *(void *)(v16 + 168) = v19;
      uint64_t v40 = v17[23];
      *(void *)(v16 + 176) = v17[22];
      *(void *)(v16 + 184) = v40;
      uint64_t v30 = v17[25];
      *(void *)(v16 + 192) = v17[24];
      *(void *)(v16 + 200) = v30;
      uint64_t v31 = v17[27];
      *(void *)(v16 + 208) = v17[26];
      *(void *)(v16 + 216) = v31;
      uint64_t v32 = v17[29];
      *(void *)(v16 + 224) = v17[28];
      *(void *)(v16 + 232) = v32;
      uint64_t v33 = v17[31];
      *(void *)(v16 + 240) = v17[30];
      *(void *)(v16 + 248) = v33;
      uint64_t v34 = v17[33];
      *(void *)(v16 + 256) = v17[32];
      *(void *)(v16 + 264) = v34;
      uint64_t v35 = v17[35];
      *(void *)(v16 + 272) = v17[34];
      *(void *)(v16 + 280) = v35;
      uint64_t v36 = v17[37];
      *(void *)(v16 + 288) = v17[36];
      *(void *)(v16 + 296) = v36;
      uint64_t v18 = (void *)v17[38];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      memcpy((void *)(a1 + v15), v17, 0x130uLL);
    }
    *(void *)(v16 + 304) = v18;
    *(unsigned char *)(v16 + 312) = *((unsigned char *)v17 + 312);
    uint64_t v37 = v17[41];
    *(void *)(v16 + 320) = v17[40];
    *(void *)(v16 + 328) = v37;
    *(_WORD *)(v16 + 336) = *((_WORD *)v17 + 168);
    *(void *)(v16 + 344) = v17[43];
    *(unsigned char *)(v16 + 352) = *((unsigned char *)v17 + 352);
    id v38 = v18;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    memcpy((void *)(a1 + v15), v17, 0x161uLL);
  }
  return a1;
}

uint64_t destroy for FMFLocation(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 32);
  uint64_t v5 = sub_21CB875D0();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  if (!result) {
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  uint64_t v8 = a1 + *(int *)(a2 + 44);
  uint64_t v9 = *(void **)(v8 + 304);
  if (v9)
  {
    if (*(void *)(v8 + 168))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v9 = *(void **)(v8 + 304);
    }

    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

void *initializeWithCopy for FMFFriend(void *a1, void *a2, int *a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  uint64_t v6 = a2[5];
  uint64_t v7 = a3[8];
  uint64_t v69 = (char *)a1 + v7;
  uint64_t v8 = (char *)a2 + v7;
  a1[4] = a2[4];
  a1[5] = v6;
  uint64_t v9 = sub_21CB87590();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v11(v8, 1, v9))
  {
    uint64_t v12 = sub_21CA57E34((uint64_t *)&unk_267C951B0);
    memcpy(v69, v8, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v69, v8, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v69, 0, 1, v9);
  }
  uint64_t v13 = a3;
  uint64_t v14 = a2;
  uint64_t v15 = a3[10];
  *(void *)((char *)a1 + a3[9]) = *(void *)((char *)a2 + a3[9]);
  *((unsigned char *)a1 + v15) = *((unsigned char *)a2 + v15);
  uint64_t v16 = a3[12];
  *((unsigned char *)a1 + a3[11]) = *((unsigned char *)a2 + a3[11]);
  *((unsigned char *)a1 + v16) = *((unsigned char *)a2 + v16);
  uint64_t v17 = a3[14];
  *((unsigned char *)a1 + a3[13]) = *((unsigned char *)a2 + a3[13]);
  *((unsigned char *)a1 + v17) = *((unsigned char *)a2 + v17);
  uint64_t v18 = a3[16];
  *(void *)((char *)a1 + a3[15]) = *(void *)((char *)a2 + a3[15]);
  *(void *)((char *)a1 + v18) = *(void *)((char *)a2 + v18);
  uint64_t v19 = a3[18];
  *(void *)((char *)a1 + a3[17]) = *(void *)((char *)a2 + a3[17]);
  *((unsigned char *)a1 + v19) = *((unsigned char *)a2 + v19);
  uint64_t v20 = a3[19];
  uint64_t v21 = (char *)a1 + v20;
  uint64_t v22 = (char *)a2 + v20;
  uint64_t v23 = *(void *)((char *)a2 + v20 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v23)
  {
    *(void *)uint64_t v21 = *(void *)v22;
    *((void *)v21 + 1) = v23;
    uint64_t v24 = *((void *)v22 + 3);
    *((void *)v21 + 2) = *((void *)v22 + 2);
    *((void *)v21 + 3) = v24;
    v21[32] = v22[32];
    uint64_t v25 = *((void *)v22 + 5);
    uint64_t v26 = *((void *)v22 + 6);
    *((void *)v21 + 5) = v25;
    *((void *)v21 + 6) = v26;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v27 = *((_OWORD *)v22 + 1);
    *(_OWORD *)uint64_t v21 = *(_OWORD *)v22;
    *((_OWORD *)v21 + 1) = v27;
    *((_OWORD *)v21 + 2) = *((_OWORD *)v22 + 2);
    *((void *)v21 + 6) = *((void *)v22 + 6);
  }
  uint64_t v28 = a3[20];
  uint64_t v29 = (void *)((char *)a1 + v28);
  uint64_t v30 = (void *)((char *)a2 + v28);
  uint64_t v31 = type metadata accessor for FMFLocation();
  uint64_t v32 = *(void *)(v31 - 8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v32 + 48))(v30, 1, v31))
  {
    uint64_t v33 = sub_21CA57E34((uint64_t *)&unk_267C96EF0);
    memcpy(v29, v30, *(void *)(*(void *)(v33 - 8) + 64));
  }
  else
  {
    uint64_t v68 = v32;
    uint64_t v70 = (int *)v31;
    uint64_t v34 = v30[1];
    *uint64_t v29 = *v30;
    v29[1] = v34;
    *((unsigned char *)v29 + 16) = *((unsigned char *)v30 + 16);
    uint64_t v29[3] = v30[3];
    *((_WORD *)v29 + 16) = *((_WORD *)v30 + 16);
    uint64_t v35 = *(int *)(v31 + 32);
    __dst = (char *)v29 + v35;
    uint64_t v36 = (char *)v30 + v35;
    uint64_t v37 = sub_21CB875D0();
    uint64_t v38 = *(void *)(v37 - 8);
    uint64_t v39 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48);
    swift_bridgeObjectRetain();
    if (v39(v36, 1, v37))
    {
      uint64_t v40 = sub_21CA57E34(&qword_267C96F00);
      memcpy(__dst, v36, *(void *)(*(void *)(v40 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v38 + 16))(__dst, v36, v37);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v38 + 56))(__dst, 0, 1, v37);
    }
    uint64_t v41 = v70;
    uint64_t v13 = a3;
    *((unsigned char *)v29 + v70[9]) = *((unsigned char *)v30 + v70[9]);
    *((unsigned char *)v29 + v70[10]) = *((unsigned char *)v30 + v70[10]);
    uint64_t v42 = v70[11];
    uint64_t v43 = (char *)v29 + v42;
    int v44 = (void *)((char *)v30 + v42);
    uint64_t v45 = (void *)v44[38];
    if (v45)
    {
      uint64_t v46 = v44[21];
      if (v46)
      {
        uint64_t v47 = v44[1];
        *(void *)uint64_t v43 = *v44;
        *((void *)v43 + 1) = v47;
        uint64_t v48 = v44[3];
        *((void *)v43 + 2) = v44[2];
        *((void *)v43 + 3) = v48;
        uint64_t v49 = v44[5];
        *((void *)v43 + 4) = v44[4];
        *((void *)v43 + 5) = v49;
        uint64_t v50 = v44[7];
        *((void *)v43 + 6) = v44[6];
        *((void *)v43 + 7) = v50;
        uint64_t v51 = v44[9];
        *((void *)v43 + 8) = v44[8];
        *((void *)v43 + 9) = v51;
        uint64_t v52 = v44[11];
        *((void *)v43 + 10) = v44[10];
        *((void *)v43 + 11) = v52;
        uint64_t v53 = v44[13];
        *((void *)v43 + 12) = v44[12];
        *((void *)v43 + 13) = v53;
        uint64_t v54 = v44[15];
        *((void *)v43 + 14) = v44[14];
        *((void *)v43 + 15) = v54;
        uint64_t v55 = v44[17];
        *((void *)v43 + 16) = v44[16];
        *((void *)v43 + 17) = v55;
        uint64_t v56 = v44[19];
        *((void *)v43 + 18) = v44[18];
        *((void *)v43 + 19) = v56;
        *((void *)v43 + 20) = v44[20];
        *((void *)v43 + 21) = v46;
        uint64_t v73 = v44[23];
        *((void *)v43 + 22) = v44[22];
        *((void *)v43 + 23) = v73;
        uint64_t v71 = v44[25];
        *((void *)v43 + 24) = v44[24];
        *((void *)v43 + 25) = v71;
        uint64_t v57 = v44[27];
        *((void *)v43 + 26) = v44[26];
        *((void *)v43 + 27) = v57;
        uint64_t v58 = v44[29];
        *((void *)v43 + 28) = v44[28];
        *((void *)v43 + 29) = v58;
        uint64_t v59 = v44[31];
        *((void *)v43 + 30) = v44[30];
        *((void *)v43 + 31) = v59;
        uint64_t v60 = v44[33];
        *((void *)v43 + 32) = v44[32];
        *((void *)v43 + 33) = v60;
        uint64_t v61 = v44[35];
        *((void *)v43 + 34) = v44[34];
        *((void *)v43 + 35) = v61;
        uint64_t v62 = v44[37];
        *((void *)v43 + 36) = v44[36];
        *((void *)v43 + 37) = v62;
        uint64_t v45 = (void *)v44[38];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        memcpy((char *)v29 + v42, v44, 0x130uLL);
      }
      *((void *)v43 + 38) = v45;
      v43[312] = *((unsigned char *)v44 + 312);
      uint64_t v63 = v44[41];
      *((void *)v43 + 40) = v44[40];
      *((void *)v43 + 41) = v63;
      *((_WORD *)v43 + 168) = *((_WORD *)v44 + 168);
      *((void *)v43 + 43) = v44[43];
      v43[352] = *((unsigned char *)v44 + 352);
      id v64 = v45;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      memcpy((char *)v29 + v42, v44, 0x161uLL);
    }
    (*(void (**)(void *, void, uint64_t, int *))(v68 + 56))(v29, 0, 1, v41);
  }
  *((unsigned char *)a1 + v13[21]) = *((unsigned char *)v14 + v13[21]);
  return a1;
}

uint64_t sub_21CA57E34(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContext2();
    *a1 = result;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for FMFLocation(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_21CA92F7C);
}

uint64_t destroy for FMFFriend(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[8];
  uint64_t v5 = sub_21CB87590();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + a2[19] + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v7 = a1 + a2[20];
  uint64_t v8 = type metadata accessor for FMFLocation();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v7, 1, v8);
  if (!result)
  {
    swift_bridgeObjectRelease();
    uint64_t v10 = v7 + *(int *)(v8 + 32);
    uint64_t v11 = sub_21CB875D0();
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11);
    if (!result) {
      uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 8))(v10, v11);
    }
    uint64_t v13 = v7 + *(int *)(v8 + 44);
    uint64_t v14 = *(void **)(v13 + 304);
    if (v14)
    {
      if (*(void *)(v13 + 168))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v14 = *(void **)(v13 + 304);
      }

      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t type metadata accessor for FMFLocation()
{
  uint64_t result = qword_267C95608;
  if (!qword_267C95608) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t getEnumTagSinglePayload for FMFLocation(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_21CA92EBC);
}

uint64_t sub_21CA581B8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_21CA58218(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_21CA58278(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_21CA582D8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_21CA58338(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[10];
  uint64_t v5 = sub_21CB87590();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  if (!v7(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  uint64_t v8 = a1 + a2[11];
  if (!v7(v8, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v8, v5);
  }
  uint64_t v9 = a1 + a2[12];
  if (!v7(v9, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v9, v5);
  }

  return swift_bridgeObjectRelease();
}

uint64_t sub_21CA584B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_21CA77C80);
}

uint64_t sub_21CA584CC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_21CA58534(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_21CA5859C(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_21CA585EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = sub_21CA57E34(&qword_267C96F10);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for FMFFriend();
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v14 + 48))(a1, 1) == 1)
  {
    sub_21CA1B88C(a1, &qword_267C96F10);
    sub_21CB80A1C(a2, a3, (uint64_t)v10);
    swift_bridgeObjectRelease();
    return sub_21CA1B88C((uint64_t)v10, &qword_267C96F10);
  }
  else
  {
    sub_21CA5920C(a1, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for FMFFriend);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v18 = *v4;
    *uint64_t v4 = 0x8000000000000000;
    sub_21CA5BAEC((uint64_t)v13, a2, a3, isUniquelyReferenced_nonNull_native);
    *uint64_t v4 = v18;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_21CA587BC(uint64_t result, uint64_t a2)
{
  uint64_t v2 = result;
  int64_t v3 = 0;
  uint64_t v18 = a2;
  uint64_t v4 = result + 56;
  uint64_t v5 = 1 << *(unsigned char *)(result + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(result + 56);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      unint64_t v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v10 = v9 | (v3 << 6);
      goto LABEL_5;
    }
    int64_t v14 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v14 >= v8) {
      goto LABEL_23;
    }
    unint64_t v15 = *(void *)(v4 + 8 * v14);
    ++v3;
    if (!v15)
    {
      int64_t v3 = v14 + 1;
      if (v14 + 1 >= v8) {
        goto LABEL_23;
      }
      unint64_t v15 = *(void *)(v4 + 8 * v3);
      if (!v15)
      {
        int64_t v3 = v14 + 2;
        if (v14 + 2 >= v8) {
          goto LABEL_23;
        }
        unint64_t v15 = *(void *)(v4 + 8 * v3);
        if (!v15)
        {
          int64_t v3 = v14 + 3;
          if (v14 + 3 >= v8) {
            goto LABEL_23;
          }
          unint64_t v15 = *(void *)(v4 + 8 * v3);
          if (!v15) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v7 = (v15 - 1) & v15;
    unint64_t v10 = __clz(__rbit64(v15)) + (v3 << 6);
LABEL_5:
    uint64_t v11 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v10);
    uint64_t v12 = *v11;
    uint64_t v13 = v11[1];
    swift_bridgeObjectRetain();
    sub_21CA589D4(&v17, v12, v13);
    uint64_t result = swift_bridgeObjectRelease();
  }
  int64_t v16 = v14 + 4;
  if (v16 >= v8)
  {
LABEL_23:
    swift_release();
    return v18;
  }
  unint64_t v15 = *(void *)(v4 + 8 * v16);
  if (v15)
  {
    int64_t v3 = v16;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v3 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v3 >= v8) {
      goto LABEL_23;
    }
    unint64_t v15 = *(void *)(v4 + 8 * v3);
    ++v16;
    if (v15) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_21CA5893C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t result = sub_21CB88750();
  uint64_t v8 = result;
  if (v2)
  {
    uint64_t v4 = (uint64_t *)(a1 + 40);
    do
    {
      uint64_t v5 = *(v4 - 1);
      uint64_t v6 = *v4;
      swift_bridgeObjectRetain();
      sub_21CA589D4(&v7, v5, v6);
      swift_bridgeObjectRelease();
      v4 += 2;
      --v2;
    }
    while (v2);
    return v8;
  }
  return result;
}

uint64_t sub_21CA589D4(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *v3;
  sub_21CB89050();
  swift_bridgeObjectRetain();
  sub_21CB88380();
  uint64_t v8 = sub_21CB89090();
  uint64_t v9 = -1 << *(unsigned char *)(v7 + 32);
  unint64_t v10 = v8 & ~v9;
  if ((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10))
  {
    uint64_t v11 = *(void *)(v7 + 48);
    uint64_t v12 = (void *)(v11 + 16 * v10);
    BOOL v13 = *v12 == a2 && v12[1] == a3;
    if (v13 || (sub_21CB88F50() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      int64_t v14 = (uint64_t *)(*(void *)(*v3 + 48) + 16 * v10);
      uint64_t v15 = v14[1];
      *a1 = *v14;
      a1[1] = v15;
      swift_bridgeObjectRetain();
      return 0;
    }
    uint64_t v17 = ~v9;
    while (1)
    {
      unint64_t v10 = (v10 + 1) & v17;
      if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
        break;
      }
      uint64_t v18 = (void *)(v11 + 16 * v10);
      BOOL v19 = *v18 == a2 && v18[1] == a3;
      if (v19 || (sub_21CB88F50() & 1) != 0) {
        goto LABEL_7;
      }
    }
  }
  swift_bridgeObjectRelease();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v21 = *v3;
  *int64_t v3 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  sub_21CA58B84(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  *int64_t v3 = v21;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t sub_21CA58B84(uint64_t result, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v8 = result;
  unint64_t v9 = *(void *)(*v4 + 16);
  unint64_t v10 = *(void *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0) {
    goto LABEL_22;
  }
  if (a4)
  {
    sub_21CB622BC();
  }
  else
  {
    if (v10 > v9)
    {
      uint64_t result = (uint64_t)sub_21CB640B8();
      goto LABEL_22;
    }
    sub_21CA59A74();
  }
  uint64_t v11 = *v4;
  sub_21CB89050();
  sub_21CB88380();
  uint64_t result = sub_21CB89090();
  uint64_t v12 = -1 << *(unsigned char *)(v11 + 32);
  a3 = result & ~v12;
  uint64_t v13 = v11 + 56;
  if ((*(void *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3))
  {
    uint64_t v14 = *(void *)(v11 + 48);
    uint64_t v15 = (void *)(v14 + 16 * a3);
    BOOL v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (uint64_t result = sub_21CB88F50(), (result & 1) != 0))
    {
LABEL_21:
      uint64_t result = sub_21CB88F90();
      __break(1u);
    }
    else
    {
      uint64_t v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(void *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3) & 1) == 0) {
          break;
        }
        uint64_t v18 = (void *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          uint64_t result = sub_21CB88F50();
          if ((result & 1) == 0) {
            continue;
          }
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  uint64_t v20 = *v5;
  *(void *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  uint64_t v21 = (uint64_t *)(*(void *)(v20 + 48) + 16 * a3);
  *uint64_t v21 = v8;
  v21[1] = a2;
  uint64_t v22 = *(void *)(v20 + 16);
  BOOL v23 = __OFADD__(v22, 1);
  uint64_t v24 = v22 + 1;
  if (v23) {
    __break(1u);
  }
  else {
    *(void *)(v20 + 16) = v24;
  }
  return result;
}

uint64_t sub_21CA58D20(uint64_t a1, int a2, uint64_t (*a3)(void), uint64_t *a4, uint64_t (*a5)(void))
{
  uint64_t v49 = a5;
  uint64_t v7 = v5;
  uint64_t v9 = a3(0);
  uint64_t v47 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)&v43 - v10;
  uint64_t v12 = *v5;
  sub_21CA57E34(a4);
  int v48 = a2;
  uint64_t v13 = sub_21CB88D30();
  uint64_t v14 = v13;
  if (!*(void *)(v12 + 16)) {
    goto LABEL_41;
  }
  uint64_t v15 = 1 << *(unsigned char *)(v12 + 32);
  uint64_t v16 = *(void *)(v12 + 64);
  uint64_t v46 = (void *)(v12 + 64);
  if (v15 < 64) {
    uint64_t v17 = ~(-1 << v15);
  }
  else {
    uint64_t v17 = -1;
  }
  unint64_t v18 = v17 & v16;
  int v44 = v5;
  int64_t v45 = (unint64_t)(v15 + 63) >> 6;
  uint64_t v19 = v13 + 64;
  uint64_t result = swift_retain();
  int64_t v21 = 0;
  while (1)
  {
    if (v18)
    {
      unint64_t v24 = __clz(__rbit64(v18));
      v18 &= v18 - 1;
      unint64_t v25 = v24 | (v21 << 6);
      goto LABEL_22;
    }
    int64_t v26 = v21 + 1;
    if (__OFADD__(v21, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v26 >= v45) {
      break;
    }
    long long v27 = v46;
    unint64_t v28 = v46[v26];
    ++v21;
    if (!v28)
    {
      int64_t v21 = v26 + 1;
      if (v26 + 1 >= v45) {
        goto LABEL_34;
      }
      unint64_t v28 = v46[v21];
      if (!v28)
      {
        int64_t v29 = v26 + 2;
        if (v29 >= v45)
        {
LABEL_34:
          swift_release();
          uint64_t v7 = v44;
          if ((v48 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v28 = v46[v29];
        if (!v28)
        {
          while (1)
          {
            int64_t v21 = v29 + 1;
            if (__OFADD__(v29, 1)) {
              goto LABEL_43;
            }
            if (v21 >= v45) {
              goto LABEL_34;
            }
            unint64_t v28 = v46[v21];
            ++v29;
            if (v28) {
              goto LABEL_21;
            }
          }
        }
        int64_t v21 = v29;
      }
    }
LABEL_21:
    unint64_t v18 = (v28 - 1) & v28;
    unint64_t v25 = __clz(__rbit64(v28)) + (v21 << 6);
LABEL_22:
    uint64_t v30 = (uint64_t *)(*(void *)(v12 + 48) + 16 * v25);
    uint64_t v31 = *v30;
    uint64_t v32 = v30[1];
    uint64_t v33 = *(void *)(v47 + 72);
    uint64_t v34 = *(void *)(v12 + 56) + v33 * v25;
    if (v48)
    {
      sub_21CA5920C(v34, (uint64_t)v11, v49);
    }
    else
    {
      sub_21CA57180(v34, (uint64_t)v11, v49);
      swift_bridgeObjectRetain();
    }
    sub_21CB89050();
    sub_21CB88380();
    uint64_t result = sub_21CB89090();
    uint64_t v35 = -1 << *(unsigned char *)(v14 + 32);
    unint64_t v36 = result & ~v35;
    unint64_t v37 = v36 >> 6;
    if (((-1 << v36) & ~*(void *)(v19 + 8 * (v36 >> 6))) != 0)
    {
      unint64_t v22 = __clz(__rbit64((-1 << v36) & ~*(void *)(v19 + 8 * (v36 >> 6)))) | v36 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v38 = 0;
      unint64_t v39 = (unint64_t)(63 - v35) >> 6;
      do
      {
        if (++v37 == v39 && (v38 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v40 = v37 == v39;
        if (v37 == v39) {
          unint64_t v37 = 0;
        }
        v38 |= v40;
        uint64_t v41 = *(void *)(v19 + 8 * v37);
      }
      while (v41 == -1);
      unint64_t v22 = __clz(__rbit64(~v41)) + (v37 << 6);
    }
    *(void *)(v19 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    BOOL v23 = (void *)(*(void *)(v14 + 48) + 16 * v22);
    *BOOL v23 = v31;
    v23[1] = v32;
    uint64_t result = sub_21CA5920C((uint64_t)v11, *(void *)(v14 + 56) + v33 * v22, v49);
    ++*(void *)(v14 + 16);
  }
  swift_release();
  uint64_t v7 = v44;
  long long v27 = v46;
  if ((v48 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v42 = 1 << *(unsigned char *)(v12 + 32);
  if (v42 >= 64) {
    bzero(v27, ((unint64_t)(v42 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v27 = -1 << v42;
  }
  *(void *)(v12 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v7 = v14;
  return result;
}

uint64_t sub_21CA590D4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_21CA5913C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_21CA591A4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_21CA5920C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_21CA59274@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  if (*(void *)(a3 + 16) && (unint64_t v6 = sub_21CA5BCE0(a1, a2), (v7 & 1) != 0))
  {
    unint64_t v8 = v6;
    uint64_t v9 = *(void *)(a3 + 56);
    uint64_t v10 = type metadata accessor for FMFFriend();
    uint64_t v17 = *(void *)(v10 - 8);
    sub_21CA571E8(v9 + *(void *)(v17 + 72) * v8, a4, (uint64_t (*)(void))type metadata accessor for FMFFriend);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v17 + 56);
    uint64_t v12 = a4;
    uint64_t v13 = 0;
    uint64_t v14 = v10;
  }
  else
  {
    uint64_t v15 = type metadata accessor for FMFFriend();
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56);
    uint64_t v14 = v15;
    uint64_t v12 = a4;
    uint64_t v13 = 1;
  }

  return v11(v12, v13, 1, v14);
}

uint64_t sub_21CA5939C(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v38 = a3;
  uint64_t v41 = a2;
  uint64_t v5 = type metadata accessor for FMFLocationAlert();
  uint64_t v6 = MEMORY[0x270FA5388](v5);
  unint64_t v8 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x270FA5388](v6);
  uint64_t v43 = (char *)&v38 - v10;
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v38 - v12;
  uint64_t result = MEMORY[0x263F8EE78];
  uint64_t v48 = MEMORY[0x263F8EE78];
  uint64_t v45 = *(void *)(a1 + 16);
  if (!v45) {
    return result;
  }
  uint64_t v42 = v3;
  uint64_t v15 = 0;
  uint64_t v16 = *(unsigned __int8 *)(v11 + 80);
  uint64_t v46 = *(void *)(v11 + 72);
  uint64_t v39 = (v16 + 32) & ~v16;
  uint64_t v44 = a1 + v39;
  uint64_t v17 = MEMORY[0x263F8EE78];
  uint64_t v18 = (uint64_t)v43;
  BOOL v40 = (char *)&v38 - v12;
  while (1)
  {
    sub_21CA571E8(v44 + v46 * v15, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
    uint64_t v19 = *(void **)&v13[*(int *)(v5 + 72)];
    uint64_t v47 = v17;
    if (v19)
    {
      uint64_t v20 = v19[2];
      if (v20)
      {
        uint64_t v22 = *v41;
        uint64_t v21 = v41[1];
        BOOL v23 = v19[4] == *v41 && v19[5] == v21;
        if (v23 || (uint64_t result = sub_21CB88F50(), (result & 1) != 0))
        {
LABEL_27:
          uint64_t v17 = v47;
          sub_21CA571E8((uint64_t)v13, v18, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
          sub_21CA57050(v18, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
LABEL_28:
          sub_21CA591A4((uint64_t)v13, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_21CA7C050(0, *(void *)(v17 + 16) + 1, 1);
            uint64_t v18 = (uint64_t)v43;
          }
          uint64_t v17 = v48;
          unint64_t v37 = *(void *)(v48 + 16);
          unint64_t v36 = *(void *)(v48 + 24);
          if (v37 >= v36 >> 1)
          {
            sub_21CA7C050(v36 > 1, v37 + 1, 1);
            uint64_t v18 = (uint64_t)v43;
            uint64_t v17 = v48;
          }
          *(void *)(v17 + 16) = v37 + 1;
          sub_21CA591A4((uint64_t)v8, v17 + v39 + v37 * v46, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
          goto LABEL_5;
        }
        if (v20 != 1) {
          break;
        }
      }
    }
LABEL_23:
    uint64_t v13 = v40;
    sub_21CA571E8((uint64_t)v40, v18, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
    uint64_t v30 = *(void *)(v18 + *(int *)(v5 + 68));
    if (v30)
    {
      swift_bridgeObjectRetain();
      uint64_t v31 = swift_bridgeObjectRetain();
      uint64_t v32 = sub_21CA4D61C(v31);
      swift_bridgeObjectRelease();
      uint64_t v33 = v42;
      uint64_t v34 = sub_21CB214A8(v30, (uint64_t)v32);
      uint64_t v42 = v33;
      uint64_t v35 = *(void *)(v34 + 16);
      swift_bridgeObjectRelease();
      sub_21CA57050(v18, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
      uint64_t v17 = v47;
      if (v35) {
        goto LABEL_28;
      }
    }
    else
    {
      sub_21CA57050(v18, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
      uint64_t v17 = v47;
    }
    sub_21CA57050((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
LABEL_5:
    if (++v15 == v45) {
      return v48;
    }
  }
  unint64_t v24 = v19 + 7;
  uint64_t v25 = 1;
  while (1)
  {
    int64_t v26 = v8;
    uint64_t v27 = v5;
    uint64_t v28 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    BOOL v29 = *(v24 - 1) == v22 && *v24 == v21;
    if (v29 || (uint64_t result = sub_21CB88F50(), (result & 1) != 0))
    {
      uint64_t v5 = v27;
      unint64_t v8 = v26;
      uint64_t v18 = (uint64_t)v43;
      uint64_t v13 = v40;
      goto LABEL_27;
    }
    v24 += 2;
    ++v25;
    BOOL v23 = v28 == v20;
    uint64_t v5 = v27;
    unint64_t v8 = v26;
    uint64_t v18 = (uint64_t)v43;
    if (v23) {
      goto LABEL_23;
    }
  }
  __break(1u);
  return result;
}

uint64_t type metadata accessor for FMFLocationAlert()
{
  uint64_t result = qword_267C956B0;
  if (!qword_267C956B0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_21CA59818(uint64_t a1, void *a2)
{
  BOOL v23 = a2;
  uint64_t v4 = type metadata accessor for FMFLocationAlert();
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v10 = (char *)v21 - v9;
  uint64_t result = MEMORY[0x263F8EE78];
  uint64_t v24 = MEMORY[0x263F8EE78];
  uint64_t v12 = *(void *)(a1 + 16);
  if (v12)
  {
    v21[1] = v2;
    uint64_t v13 = *(void *)(v8 + 72);
    unint64_t v22 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    uint64_t v14 = a1 + v22;
    uint64_t v15 = MEMORY[0x263F8EE78];
    do
    {
      sub_21CA571E8(v14, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
      uint64_t v16 = &v10[*(int *)(v4 + 76)];
      uint64_t v17 = *((void *)v16 + 1);
      if (v17 && (*(void *)v16 == *v23 ? (BOOL v18 = v17 == v23[1]) : (BOOL v18 = 0), v18 || (sub_21CB88F50() & 1) != 0))
      {
        sub_21CA591A4((uint64_t)v10, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_21CA7C050(0, *(void *)(v15 + 16) + 1, 1);
        }
        uint64_t v15 = v24;
        unint64_t v20 = *(void *)(v24 + 16);
        unint64_t v19 = *(void *)(v24 + 24);
        if (v20 >= v19 >> 1)
        {
          sub_21CA7C050(v19 > 1, v20 + 1, 1);
          uint64_t v15 = v24;
        }
        *(void *)(v15 + 16) = v20 + 1;
        sub_21CA591A4((uint64_t)v7, v15 + v22 + v20 * v13, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
      }
      else
      {
        sub_21CA57050((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
      }
      v14 += v13;
      --v12;
    }
    while (v12);
    return v24;
  }
  return result;
}

uint64_t sub_21CA59A74()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_21CA57E34(&qword_267C97160);
  uint64_t v3 = sub_21CB88B20();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v29 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v9 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v11 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v15 = v14 | (v11 << 6);
      goto LABEL_24;
    }
    int64_t v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v11;
    if (!v17)
    {
      int64_t v11 = v16 + 1;
      if (v16 + 1 >= v29) {
        goto LABEL_33;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v11);
      if (!v17)
      {
        int64_t v11 = v16 + 2;
        if (v16 + 2 >= v29) {
          goto LABEL_33;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v11);
        if (!v17) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_24:
    unint64_t v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v20 = *v19;
    uint64_t v21 = v19[1];
    sub_21CB89050();
    swift_bridgeObjectRetain();
    sub_21CB88380();
    uint64_t result = sub_21CB89090();
    uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v27 = v24 == v26;
        if (v24 == v26) {
          unint64_t v24 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v9 + 8 * v24);
      }
      while (v28 == -1);
      unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    uint64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
    void *v13 = v20;
    v13[1] = v21;
    ++*(void *)(v4 + 16);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v29)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v11 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v11 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v11 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v11);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_21CA59D24(uint64_t a1)
{
  return *(void *)(a1 + 16);
}

uint64_t sub_21CA59D2C(uint64_t a1, uint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t type metadata accessor for ShallowRelabilityStats(uint64_t a1)
{
  return sub_21CA59D2C(a1, (uint64_t *)&unk_267C95770);
}

uint64_t sub_21CA59D84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_21CA59DCC(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v3 = 0x4C676E69646E6570;
    }
    else {
      uint64_t v3 = 0x6F4C646573756170;
    }
    if (v2 == 1) {
      unint64_t v4 = 0xEF676E697461636FLL;
    }
    else {
      unint64_t v4 = 0xEE00676E69746163;
    }
    int v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1) {
        uint64_t v6 = 0x4C676E69646E6570;
      }
      else {
        uint64_t v6 = 0x6F4C646573756170;
      }
      if (v5 == 1) {
        unint64_t v7 = 0xEF676E697461636FLL;
      }
      else {
        unint64_t v7 = 0xEE00676E69746163;
      }
      if (v3 != v6) {
        goto LABEL_21;
      }
      goto LABEL_19;
    }
  }
  else
  {
    unint64_t v4 = 0xE400000000000000;
    uint64_t v3 = 1701736302;
    int v5 = a2;
    if (a2) {
      goto LABEL_9;
    }
  }
  unint64_t v7 = 0xE400000000000000;
  if (v3 != 1701736302)
  {
LABEL_21:
    char v8 = sub_21CB88F50();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7) {
    goto LABEL_21;
  }
  char v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

unint64_t sub_21CA59F08()
{
  uint64_t v1 = type metadata accessor for FMFLocationAlert() - 8;
  uint64_t v2 = MEMORY[0x270FA5388](v1);
  uint64_t v3 = MEMORY[0x270FA5388](v2);
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = MEMORY[0x270FA5388]((char *)v60 - v4);
  uint64_t v6 = MEMORY[0x270FA5388](v5);
  char v8 = (char *)v60 - v7;
  uint64_t v9 = MEMORY[0x270FA5388](v6);
  int64_t v11 = (char *)v60 - v10;
  uint64_t v12 = MEMORY[0x270FA5388](v9);
  unint64_t v14 = (char *)v60 - v13;
  uint64_t v15 = MEMORY[0x270FA5388](v12);
  unint64_t v17 = (char *)v60 - v16;
  uint64_t v18 = MEMORY[0x270FA5388](v15);
  unint64_t v24 = (char *)v60 - v23;
  unint64_t v25 = v0[86];
  if (v25)
  {
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v65 = v19;
    uint64_t v66 = v18;
    uint64_t v67 = v21;
    uint64_t v68 = v8;
    uint64_t v61 = v20;
    uint64_t v62 = v22;
    uint64_t v26 = v0[80];
    uint64_t v27 = *(void *)(v26 + 16);
    uint64_t v63 = v0;
    if (v27)
    {
      unint64_t v64 = (*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
      uint64_t v28 = v26 + v64;
      uint64_t v29 = *(void *)(v22 + 72);
      v60[1] = v26;
      swift_bridgeObjectRetain();
      unint64_t v25 = MEMORY[0x263F8EE78];
      do
      {
        sub_21CA571E8(v28, (uint64_t)v17, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
        sub_21CA987B4((uint64_t)v17, 1, 1, (uint64_t)v24);
        sub_21CA571E8((uint64_t)v24, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v25 = sub_21CAC8160(0, *(void *)(v25 + 16) + 1, 1, v25);
        }
        unint64_t v31 = *(void *)(v25 + 16);
        unint64_t v30 = *(void *)(v25 + 24);
        if (v31 >= v30 >> 1) {
          unint64_t v25 = sub_21CAC8160(v30 > 1, v31 + 1, 1, v25);
        }
        *(void *)(v25 + 16) = v31 + 1;
        sub_21CA591A4((uint64_t)v14, v25 + v64 + v31 * v29, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
        sub_21CA57050((uint64_t)v24, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
        v28 += v29;
        --v27;
        char v8 = v68;
      }
      while (v27);
      swift_bridgeObjectRelease();
      uint64_t v22 = v62;
      uint64_t v0 = v63;
    }
    else
    {
      unint64_t v25 = MEMORY[0x263F8EE78];
    }
    uint64_t v32 = v0[81];
    uint64_t v33 = *(void *)(v32 + 16);
    if (v33)
    {
      unint64_t v34 = (*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
      uint64_t v35 = v32 + v34;
      uint64_t v36 = *(void *)(v22 + 72);
      swift_bridgeObjectRetain();
      do
      {
        sub_21CA571E8(v35, (uint64_t)v17, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
        sub_21CA987B4((uint64_t)v17, 0, 1, (uint64_t)v11);
        sub_21CA571E8((uint64_t)v11, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v25 = sub_21CAC8160(0, *(void *)(v25 + 16) + 1, 1, v25);
        }
        unint64_t v38 = *(void *)(v25 + 16);
        unint64_t v37 = *(void *)(v25 + 24);
        if (v38 >= v37 >> 1) {
          unint64_t v25 = sub_21CAC8160(v37 > 1, v38 + 1, 1, v25);
        }
        *(void *)(v25 + 16) = v38 + 1;
        uint64_t v39 = v25 + v34 + v38 * v36;
        char v8 = v68;
        sub_21CA591A4((uint64_t)v68, v39, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
        sub_21CA57050((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
        v35 += v36;
        --v33;
      }
      while (v33);
      swift_bridgeObjectRelease();
      uint64_t v22 = v62;
      uint64_t v0 = v63;
    }
    uint64_t v40 = v0[82];
    uint64_t v41 = *(void *)(v40 + 16);
    uint64_t v42 = v61;
    if (v41)
    {
      unint64_t v43 = (*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
      uint64_t v44 = v40 + v43;
      uint64_t v45 = *(void *)(v22 + 72);
      uint64_t v68 = (char *)v40;
      swift_bridgeObjectRetain();
      uint64_t v46 = v65;
      uint64_t v47 = v66;
      do
      {
        sub_21CA571E8(v44, (uint64_t)v17, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
        sub_21CA987B4((uint64_t)v17, 1, 0, v46);
        sub_21CA571E8(v46, v47, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v25 = sub_21CAC8160(0, *(void *)(v25 + 16) + 1, 1, v25);
        }
        unint64_t v49 = *(void *)(v25 + 16);
        unint64_t v48 = *(void *)(v25 + 24);
        if (v49 >= v48 >> 1) {
          unint64_t v25 = sub_21CAC8160(v48 > 1, v49 + 1, 1, v25);
        }
        *(void *)(v25 + 16) = v49 + 1;
        uint64_t v50 = v25 + v43 + v49 * v45;
        uint64_t v47 = v66;
        sub_21CA591A4(v66, v50, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
        uint64_t v46 = v65;
        sub_21CA57050(v65, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
        v44 += v45;
        --v41;
      }
      while (v41);
      swift_bridgeObjectRelease();
      uint64_t v22 = v62;
      uint64_t v0 = v63;
    }
    uint64_t v51 = v0[83];
    uint64_t v52 = *(void *)(v51 + 16);
    if (v52)
    {
      unint64_t v53 = (*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
      uint64_t v54 = v51 + v53;
      uint64_t v55 = *(void *)(v22 + 72);
      swift_bridgeObjectRetain();
      uint64_t v56 = v67;
      do
      {
        sub_21CA571E8(v54, (uint64_t)v17, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
        sub_21CA987B4((uint64_t)v17, 0, 0, v56);
        sub_21CA571E8(v56, v42, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v25 = sub_21CAC8160(0, *(void *)(v25 + 16) + 1, 1, v25);
        }
        unint64_t v58 = *(void *)(v25 + 16);
        unint64_t v57 = *(void *)(v25 + 24);
        if (v58 >= v57 >> 1) {
          unint64_t v25 = sub_21CAC8160(v57 > 1, v58 + 1, 1, v25);
        }
        *(void *)(v25 + 16) = v58 + 1;
        sub_21CA591A4(v42, v25 + v53 + v58 * v55, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
        uint64_t v56 = v67;
        sub_21CA57050(v67, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
        v54 += v55;
        --v52;
      }
      while (v52);
      swift_bridgeObjectRelease();
      uint64_t v0 = v63;
    }
    v0[86] = v25;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v0[72] = 0;
    swift_bridgeObjectRelease();
  }
  return v25;
}

uint64_t sub_21CA5A5F4()
{
  uint64_t v234 = sub_21CA57E34(&qword_267C97270);
  uint64_t v1 = MEMORY[0x270FA5388](v234);
  uint64_t v233 = (char *)&v213 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = MEMORY[0x270FA5388](v1);
  uint64_t v232 = (uint64_t)&v213 - v4;
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  uint64_t v231 = (uint64_t *)((char *)&v213 - v6);
  MEMORY[0x270FA5388](v5);
  char v8 = (char *)&v213 - v7;
  uint64_t v9 = type metadata accessor for FMFIntermediateFriend();
  uint64_t v217 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9 - 8);
  int64_t v11 = (uint64_t *)((char *)&v213 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = sub_21CA57E34((uint64_t *)&unk_267C96EF0);
  uint64_t v13 = MEMORY[0x270FA5388](v12 - 8);
  uint64_t v15 = (char *)&v213 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  unint64_t v17 = (char *)&v213 - v16;
  uint64_t v18 = type metadata accessor for FMFLocation();
  uint64_t v240 = *(void *)(v18 - 8);
  uint64_t v19 = MEMORY[0x270FA5388](v18);
  uint64_t v20 = MEMORY[0x270FA5388](v19);
  uint64_t v21 = MEMORY[0x270FA5388](v20);
  uint64_t v22 = MEMORY[0x270FA5388](v21);
  uint64_t v23 = MEMORY[0x270FA5388](v22);
  uint64_t v24 = MEMORY[0x270FA5388](v23);
  uint64_t v25 = MEMORY[0x270FA5388](v24);
  uint64_t v26 = MEMORY[0x270FA5388](v25);
  uint64_t v27 = MEMORY[0x270FA5388](v26);
  uint64_t v28 = MEMORY[0x270FA5388](v27);
  uint64_t v29 = MEMORY[0x270FA5388](v28);
  unint64_t v31 = (char *)&v213 - v30;
  uint64_t v32 = MEMORY[0x270FA5388](v29);
  unint64_t v34 = (char *)&v213 - v33;
  uint64_t v35 = MEMORY[0x270FA5388](v32);
  unint64_t v37 = (char *)&v213 - v36;
  uint64_t v38 = MEMORY[0x270FA5388](v35);
  uint64_t v40 = (uint64_t (*)())((char *)&v213 - v39);
  uint64_t v41 = MEMORY[0x270FA5388](v38);
  unint64_t v53 = v0;
  uint64_t v54 = v0[78];
  if (v54)
  {
    swift_bridgeObjectRetain();
    return v54;
  }
  uint64_t v229 = v8;
  os_log_type_t v230 = (uint64_t *)((char *)&v213 - v49);
  uint64_t v235 = v40;
  uint64_t v236 = (uint64_t)v17;
  uint64_t v226 = (uint64_t)v37;
  uint64_t v227 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))v48;
  uint64_t v221 = v34;
  uint64_t v222 = v31;
  uint64_t v223 = v47;
  uint64_t v224 = v52;
  uint64_t v219 = v42;
  uint64_t v220 = v46;
  uint64_t v214 = v45;
  uint64_t v215 = v44;
  uint64_t v216 = v43;
  uint64_t v225 = v51;
  uint64_t v238 = v50;
  uint64_t v239 = v41;
  uint64_t v237 = (uint64_t)v15;
  uint64_t v228 = v11;
  uint64_t v218 = v53;
  swift_beginAccess();
  uint64_t v55 = v218;
  uint64_t v56 = v218[77];
  uint64_t v57 = *(void *)(v56 + 16);
  if (v57)
  {
    uint64_t v58 = v56 + ((*(unsigned __int8 *)(v240 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v240 + 80));
    uint64_t v59 = *(void *)(v240 + 72);
    uint64_t v213 = v218[77];
    swift_bridgeObjectRetain();
    uint64_t v60 = (uint64_t *)MEMORY[0x263F8EE80];
    uint64_t v61 = v237;
    uint64_t v62 = v239;
    uint64_t v63 = (uint64_t (*)(void))v235;
    unint64_t v64 = v230;
    do
    {
      sub_21CA571E8(v58, (uint64_t)v64, (uint64_t (*)(void))type metadata accessor for FMFLocation);
      uint64_t v65 = v64[1];
      if (v65)
      {
        uint64_t v66 = (uint64_t)v64;
        uint64_t v67 = *v64;
        sub_21CA571E8(v66, (uint64_t)v63, (uint64_t (*)(void))type metadata accessor for FMFLocation);
        swift_bridgeObjectRetain();
        int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v242[0] = v60;
        unint64_t v70 = sub_21CA5BCE0(v67, v65);
        uint64_t v71 = v60[2];
        BOOL v72 = (v69 & 1) == 0;
        uint64_t v73 = v71 + v72;
        if (__OFADD__(v71, v72)) {
          goto LABEL_120;
        }
        char v74 = v69;
        if (v60[3] >= v73)
        {
          if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
            sub_21CB858B0();
          }
        }
        else
        {
          sub_21CA5C928(v73, isUniquelyReferenced_nonNull_native);
          unint64_t v75 = sub_21CA5BCE0(v67, v65);
          if ((v74 & 1) != (v76 & 1)) {
            goto LABEL_129;
          }
          unint64_t v70 = v75;
        }
        uint64_t v63 = (uint64_t (*)(void))v235;
        uint64_t v60 = (uint64_t *)v242[0];
        if (v74)
        {
          sub_21CA5C95C((uint64_t)v235, *(void *)(v242[0] + 56) + v70 * v59, (uint64_t (*)(void))type metadata accessor for FMFLocation);
        }
        else
        {
          *(void *)(v242[0] + 8 * (v70 >> 6) + 64) |= 1 << v70;
          uint64_t v77 = (uint64_t *)(v60[6] + 16 * v70);
          *uint64_t v77 = v67;
          v77[1] = v65;
          sub_21CA591A4((uint64_t)v63, v60[7] + v70 * v59, (uint64_t (*)(void))type metadata accessor for FMFLocation);
          uint64_t v78 = v60[2];
          BOOL v79 = __OFADD__(v78, 1);
          uint64_t v80 = v78 + 1;
          if (v79) {
            goto LABEL_121;
          }
          void v60[2] = v80;
          swift_bridgeObjectRetain();
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v61 = v237;
        uint64_t v62 = v239;
        unint64_t v64 = v230;
      }
      sub_21CA57050((uint64_t)v64, (uint64_t (*)(void))type metadata accessor for FMFLocation);
      v58 += v59;
      --v57;
    }
    while (v57);
    swift_bridgeObjectRelease();
    uint64_t v55 = v218;
  }
  else
  {
    uint64_t v60 = (uint64_t *)MEMORY[0x263F8EE80];
    uint64_t v61 = v237;
    uint64_t v62 = v239;
  }
  uint64_t v81 = *(void *)(v55[74] + 16);
  uint64_t v82 = v236;
  if (!v81) {
    goto LABEL_43;
  }
  uint64_t v235 = (uint64_t (*)())(v240 + 56);
  os_log_type_t v230 = (uint64_t *)(v240 + 48);
  uint64_t v213 = swift_bridgeObjectRetain();
  uint64_t v83 = (unsigned char *)(v213 + 48);
  do
  {
    if (!v60[2])
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))v235)(v82, 1, 1, v62);
LABEL_23:
      sub_21CA1B88C(v82, (uint64_t *)&unk_267C96EF0);
      goto LABEL_24;
    }
    uint64_t v85 = *((void *)v83 - 2);
    uint64_t v84 = *((void *)v83 - 1);
    unsigned __int8 v86 = *v83;
    swift_bridgeObjectRetain_n();
    unint64_t v87 = sub_21CA5BCE0(v85, v84);
    if (v88)
    {
      uint64_t v82 = v236;
      sub_21CA571E8(v60[7] + *(void *)(v240 + 72) * v87, v236, (uint64_t (*)(void))type metadata accessor for FMFLocation);
      uint64_t v89 = 0;
    }
    else
    {
      uint64_t v89 = 1;
      uint64_t v82 = v236;
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))v235)(v82, v89, 1, v62);
    swift_bridgeObjectRelease();
    if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))*v230)(v82, 1, v62) == 1)
    {
      swift_bridgeObjectRelease();
      goto LABEL_23;
    }
    uint64_t v90 = v82;
    uint64_t v91 = v226;
    sub_21CA591A4(v90, v226, (uint64_t (*)(void))type metadata accessor for FMFLocation);
    uint64_t v92 = v91;
    uint64_t v93 = (uint64_t)v222;
    sub_21CA571E8(v92, (uint64_t)v222, (uint64_t (*)(void))type metadata accessor for FMFLocation);
    swift_bridgeObjectRetain();
    unsigned __int8 v94 = v86;
    uint64_t v95 = (uint64_t)v221;
    sub_21CA8F388(v93, v84, v94, (uint64_t)v221);
    sub_21CA571E8(v95, (uint64_t)v227, (uint64_t (*)(void))type metadata accessor for FMFLocation);
    int v96 = swift_isUniquelyReferenced_nonNull_native();
    v242[0] = v60;
    unint64_t v98 = sub_21CA5BCE0(v85, v84);
    uint64_t v99 = v60[2];
    BOOL v100 = (v97 & 1) == 0;
    uint64_t v101 = v99 + v100;
    if (__OFADD__(v99, v100)) {
      goto LABEL_122;
    }
    char v102 = v97;
    if (v60[3] >= v101)
    {
      uint64_t v105 = (uint64_t)v227;
      if ((v96 & 1) == 0)
      {
        sub_21CB858B0();
        uint64_t v105 = (uint64_t)v227;
      }
      uint64_t v62 = v239;
      uint64_t v106 = (uint64_t *)v242[0];
      if ((v102 & 1) == 0) {
        goto LABEL_35;
      }
    }
    else
    {
      sub_21CA5C928(v101, v96);
      unint64_t v103 = sub_21CA5BCE0(v85, v84);
      if ((v102 & 1) != (v104 & 1)) {
        goto LABEL_129;
      }
      unint64_t v98 = v103;
      uint64_t v62 = v239;
      uint64_t v105 = (uint64_t)v227;
      uint64_t v106 = (uint64_t *)v242[0];
      if ((v102 & 1) == 0)
      {
LABEL_35:
        v106[(v98 >> 6) + 8] |= 1 << v98;
        uint64_t v107 = (uint64_t *)(v106[6] + 16 * v98);
        *uint64_t v107 = v85;
        v107[1] = v84;
        sub_21CA591A4(v105, v106[7] + *(void *)(v240 + 72) * v98, (uint64_t (*)(void))type metadata accessor for FMFLocation);
        uint64_t v108 = v106[2];
        BOOL v79 = __OFADD__(v108, 1);
        uint64_t v109 = v108 + 1;
        if (v79) {
          goto LABEL_124;
        }
        uint64_t v110 = v106;
        v106[2] = v109;
        swift_bridgeObjectRetain();
        goto LABEL_41;
      }
    }
    uint64_t v110 = v106;
    sub_21CA5C95C(v105, v106[7] + *(void *)(v240 + 72) * v98, (uint64_t (*)(void))type metadata accessor for FMFLocation);
LABEL_41:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_21CA57050(v95, (uint64_t (*)(void))type metadata accessor for FMFLocation);
    sub_21CA57050(v226, (uint64_t (*)(void))type metadata accessor for FMFLocation);
    uint64_t v60 = v110;
    uint64_t v82 = v236;
    uint64_t v61 = v237;
LABEL_24:
    v83 += 24;
    --v81;
  }
  while (v81);
  swift_bridgeObjectRelease();
  uint64_t v55 = v218;
LABEL_43:
  uint64_t v111 = *(void *)(v55[73] + 16);
  uint64_t v112 = v228;
  if (!v111) {
    goto LABEL_64;
  }
  uint64_t v222 = (char *)swift_bridgeObjectRetain();
  uint64_t v113 = (unsigned __int8 *)(v222 + 48);
  while (2)
  {
    if (!v60[2]) {
      goto LABEL_47;
    }
    uint64_t v114 = *((void *)v113 - 2);
    uint64_t v115 = *((void *)v113 - 1);
    int v116 = *v113;
    swift_bridgeObjectRetain();
    unint64_t v117 = sub_21CA5BCE0(v114, v115);
    if ((v118 & 1) == 0)
    {
LABEL_46:
      swift_bridgeObjectRelease();
      uint64_t v112 = v228;
      uint64_t v62 = v239;
      goto LABEL_47;
    }
    uint64_t v119 = *(void *)(v240 + 72);
    uint64_t v120 = v220;
    sub_21CA571E8(v60[7] + v119 * v117, v220, (uint64_t (*)(void))type metadata accessor for FMFLocation);
    uint64_t v121 = v120;
    uint64_t v122 = v223;
    sub_21CA591A4(v121, v223, (uint64_t (*)(void))type metadata accessor for FMFLocation);
    if (*(unsigned char *)(v122 + 33))
    {
      sub_21CA57050(v122, (uint64_t (*)(void))type metadata accessor for FMFLocation);
      goto LABEL_46;
    }
    uint64_t v226 = v119;
    os_log_type_t v230 = v60;
    uint64_t v235 = type metadata accessor for FMFLocation;
    uint64_t v123 = v122;
    uint64_t v124 = v215;
    sub_21CA571E8(v123, v215, (uint64_t (*)(void))type metadata accessor for FMFLocation);
    uint64_t v236 = v114;
    uint64_t v125 = v216;
    *(void *)(v216 + 24) = 0;
    *(unsigned char *)(v125 + 32) = 1;
    uint64_t v126 = (int *)v239;
    uint64_t v227 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v125 + *(int *)(v239 + 32));
    uint64_t v127 = (uint64_t)v227;
    uint64_t v128 = sub_21CB875D0();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v128 - 8) + 56))(v127, 1, 1, v128);
    uint64_t v129 = *(void *)(v124 + 8);
    *(void *)uint64_t v125 = *(void *)v124;
    *(void *)(v125 + 8) = v129;
    sub_21CA26A4C(v124 + v126[11], (uint64_t)v242, &qword_267C951F0);
    sub_21CA26A4C((uint64_t)v242, v125 + v126[11], &qword_267C951F0);
    uint64_t v130 = v124 + v126[8];
    swift_bridgeObjectRetain();
    sub_21CAC34E8((uint64_t)v242);
    sub_21CA5CD6C(v130, (uint64_t)v227);
    *(unsigned char *)(v125 + 33) = *(unsigned char *)(v124 + 33);
    char v131 = *(unsigned char *)(v124 + 32);
    *(void *)(v125 + 24) = *(void *)(v124 + 24);
    *(unsigned char *)(v125 + 32) = v131;
    uint64_t v132 = v126[9];
    char v133 = *(unsigned char *)(v124 + v132);
    *(unsigned char *)(v125 + 16) = (v116 - 1) < 2;
    *(unsigned char *)(v125 + v132) = v133;
    char v134 = *(unsigned char *)(v124 + v126[10]);
    sub_21CA57050(v124, (uint64_t (*)(void))type metadata accessor for FMFLocation);
    *(unsigned char *)(v125 + v126[10]) = v134;
    uint64_t v135 = v125;
    uint64_t v136 = v236;
    uint64_t v137 = v214;
    sub_21CA591A4(v135, v214, (uint64_t (*)(void))type metadata accessor for FMFLocation);
    sub_21CA571E8(v137, v219, (uint64_t (*)(void))v235);
    int v138 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v241 = v230;
    unint64_t v140 = sub_21CA5BCE0(v136, v115);
    uint64_t v141 = v230[2];
    BOOL v142 = (v139 & 1) == 0;
    uint64_t v143 = v141 + v142;
    if (__OFADD__(v141, v142)) {
      goto LABEL_126;
    }
    char v144 = v139;
    if (v230[3] >= v143)
    {
      uint64_t v147 = v228;
      if (v138)
      {
        int v148 = v241;
        if ((v139 & 1) == 0) {
          goto LABEL_55;
        }
      }
      else
      {
        sub_21CB858B0();
        int v148 = v241;
        if ((v144 & 1) == 0) {
          goto LABEL_55;
        }
      }
      goto LABEL_59;
    }
    sub_21CA5C928(v143, v138);
    unint64_t v145 = sub_21CA5BCE0(v136, v115);
    uint64_t v147 = v228;
    if ((v144 & 1) != (v146 & 1)) {
      goto LABEL_129;
    }
    unint64_t v140 = v145;
    int v148 = v241;
    if (v144)
    {
LABEL_59:
      uint64_t v152 = v148;
      sub_21CA5C95C(v219, v148[7] + v140 * v226, (uint64_t (*)(void))type metadata accessor for FMFLocation);
      goto LABEL_60;
    }
LABEL_55:
    v148[(v140 >> 6) + 8] |= 1 << v140;
    uint64_t v149 = (void *)(v148[6] + 16 * v140);
    *uint64_t v149 = v236;
    v149[1] = v115;
    sub_21CA591A4(v219, v148[7] + v140 * v226, (uint64_t (*)(void))type metadata accessor for FMFLocation);
    uint64_t v150 = v148[2];
    BOOL v79 = __OFADD__(v150, 1);
    uint64_t v151 = v150 + 1;
    if (v79) {
      goto LABEL_127;
    }
    uint64_t v152 = v148;
    v148[2] = v151;
    swift_bridgeObjectRetain();
LABEL_60:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_21CA57050(v137, (uint64_t (*)(void))type metadata accessor for FMFLocation);
    sub_21CA57050(v223, (uint64_t (*)(void))type metadata accessor for FMFLocation);
    uint64_t v60 = v152;
    uint64_t v61 = v237;
    uint64_t v62 = v239;
    uint64_t v112 = v147;
LABEL_47:
    v113 += 24;
    if (--v111) {
      continue;
    }
    break;
  }
  swift_bridgeObjectRelease();
  uint64_t v55 = v218;
LABEL_64:
  uint64_t v153 = v55[85];
  uint64_t v154 = *(void *)(v153 + 16);
  os_log_type_t v230 = v60;
  if (v154)
  {
    uint64_t v155 = v153 + ((*(unsigned __int8 *)(v217 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v217 + 80));
    uint64_t v156 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v240 + 56);
    uint64_t v228 = (uint64_t *)(v240 + 48);
    uint64_t v235 = *(uint64_t (**)())(v217 + 72);
    uint64_t v226 = v153;
    swift_bridgeObjectRetain();
    uint64_t v239 = MEMORY[0x263F8EE80];
    uint64_t v227 = v156;
    while (1)
    {
      sub_21CA571E8(v155, (uint64_t)v112, (uint64_t (*)(void))type metadata accessor for FMFIntermediateFriend);
      if (v60[2])
      {
        uint64_t v158 = *v112;
        uint64_t v157 = v112[1];
        swift_bridgeObjectRetain();
        uint64_t v236 = v158;
        unint64_t v159 = sub_21CA5BCE0(v158, v157);
        if (v160)
        {
          sub_21CA571E8(v60[7] + *(void *)(v240 + 72) * v159, v61, (uint64_t (*)(void))type metadata accessor for FMFLocation);
          uint64_t v161 = 0;
        }
        else
        {
          uint64_t v161 = 1;
        }
        (*v156)(v61, v161, 1, v62);
        swift_bridgeObjectRelease();
        if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))*v228)(v61, 1, v62) != 1)
        {
          uint64_t v162 = (uint64_t)v112;
          uint64_t v163 = v224;
          sub_21CA591A4(v61, v224, (uint64_t (*)(void))type metadata accessor for FMFLocation);
          sub_21CA571E8(v163, v225, (uint64_t (*)(void))type metadata accessor for FMFLocation);
          swift_bridgeObjectRetain();
          uint64_t v164 = v239;
          int v165 = swift_isUniquelyReferenced_nonNull_native();
          v242[0] = v164;
          unint64_t v167 = sub_21CA5BCE0(v236, v157);
          uint64_t v168 = *(void *)(v164 + 16);
          BOOL v169 = (v166 & 1) == 0;
          uint64_t v170 = v168 + v169;
          if (__OFADD__(v168, v169)) {
            goto LABEL_123;
          }
          char v171 = v166;
          if (*(void *)(v164 + 24) >= v170)
          {
            uint64_t v60 = v230;
            if ((v165 & 1) == 0)
            {
              sub_21CB858B0();
              uint64_t v60 = v230;
            }
            uint64_t v174 = v240;
          }
          else
          {
            sub_21CA5C928(v170, v165);
            unint64_t v172 = sub_21CA5BCE0(v236, v157);
            if ((v171 & 1) != (v173 & 1)) {
              goto LABEL_129;
            }
            unint64_t v167 = v172;
            uint64_t v174 = v240;
            uint64_t v60 = v230;
          }
          uint64_t v175 = v242[0];
          uint64_t v239 = v242[0];
          if (v171)
          {
            sub_21CA5C95C(v225, *(void *)(v242[0] + 56) + *(void *)(v174 + 72) * v167, (uint64_t (*)(void))type metadata accessor for FMFLocation);
          }
          else
          {
            *(void *)(v242[0] + 8 * (v167 >> 6) + 64) |= 1 << v167;
            char v176 = (void *)(*(void *)(v175 + 48) + 16 * v167);
            *char v176 = v236;
            v176[1] = v157;
            sub_21CA591A4(v225, *(void *)(v175 + 56) + *(void *)(v174 + 72) * v167, (uint64_t (*)(void))type metadata accessor for FMFLocation);
            uint64_t v177 = *(void *)(v239 + 16);
            BOOL v79 = __OFADD__(v177, 1);
            uint64_t v178 = v177 + 1;
            if (v79) {
              goto LABEL_125;
            }
            *(void *)(v239 + 16) = v178;
            swift_bridgeObjectRetain();
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_21CA57050(v224, (uint64_t (*)(void))type metadata accessor for FMFLocation);
          uint64_t v112 = (uint64_t *)v162;
          sub_21CA57050(v162, (uint64_t (*)(void))type metadata accessor for FMFIntermediateFriend);
          uint64_t v61 = v237;
          uint64_t v156 = v227;
          goto LABEL_68;
        }
      }
      else
      {
        (*v156)(v61, 1, 1, v62);
      }
      sub_21CA57050((uint64_t)v112, (uint64_t (*)(void))type metadata accessor for FMFIntermediateFriend);
      sub_21CA1B88C(v61, (uint64_t *)&unk_267C96EF0);
LABEL_68:
      v155 += (uint64_t)v235;
      if (!--v154)
      {
        swift_bridgeObjectRelease();
        uint64_t v55 = v218;
        uint64_t v179 = v239;
        goto LABEL_88;
      }
    }
  }
  uint64_t v179 = MEMORY[0x263F8EE80];
LABEL_88:
  int64_t v180 = *(void *)(v179 + 16);
  uint64_t v181 = MEMORY[0x263F8EE78];
  uint64_t v239 = v179;
  if (v180)
  {
    v242[0] = MEMORY[0x263F8EE78];
    swift_bridgeObjectRetain();
    sub_21CA3D644(0, v180, 0);
    uint64_t v182 = sub_21CA44D4C(v239);
    uint64_t v184 = v239;
    uint64_t v185 = v240;
    uint64_t v186 = v182;
    uint64_t v187 = 0;
    int v188 = (uint64_t *)(v239 + 64);
    char v189 = *(unsigned char *)(v239 + 32);
    uint64_t v225 = v239 + 80;
    uint64_t v226 = v180;
    uint64_t v227 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))v183;
    uint64_t v228 = (uint64_t *)(v239 + 64);
    uint64_t v190 = v234;
    unint64_t v191 = v229;
    while ((v186 & 0x8000000000000000) == 0 && v186 < 1 << v189)
    {
      unint64_t v194 = (unint64_t)v186 >> 6;
      if ((v188[(unint64_t)v186 >> 6] & (1 << v186)) == 0) {
        goto LABEL_115;
      }
      if (*(_DWORD *)(v184 + 36) != v183) {
        goto LABEL_116;
      }
      uint64_t v235 = v187;
      uint64_t v236 = 1 << v186;
      uint64_t v195 = (uint64_t)v191 + *(int *)(v190 + 48);
      uint64_t v196 = *(void *)(v184 + 56);
      uint64_t v197 = (uint64_t *)(*(void *)(v184 + 48) + 16 * v186);
      uint64_t v198 = *v197;
      uint64_t v199 = v197[1];
      uint64_t v237 = *(void *)(v185 + 72);
      sub_21CA571E8(v196 + v237 * v186, v195, (uint64_t (*)(void))type metadata accessor for FMFLocation);
      *unint64_t v191 = v198;
      v191[1] = v199;
      uint64_t v200 = (uint64_t)v231;
      *uint64_t v231 = v198;
      *(void *)(v200 + 8) = v199;
      sub_21CA571E8(v195, v200 + *(int *)(v190 + 48), (uint64_t (*)(void))type metadata accessor for FMFLocation);
      uint64_t v201 = v232;
      sub_21CA26A4C(v200, v232, &qword_267C97270);
      swift_bridgeObjectRetain_n();
      sub_21CA1B88C((uint64_t)v191, &qword_267C97270);
      uint64_t v202 = *(int *)(v190 + 48);
      uint64_t v203 = (uint64_t)&v233[v202];
      sub_21CA571E8(v201 + v202, (uint64_t)&v233[v202], (uint64_t (*)(void))type metadata accessor for FMFLocation);
      sub_21CA591A4(v203, v238, (uint64_t (*)(void))type metadata accessor for FMFLocation);
      sub_21CA1B88C(v201, &qword_267C97270);
      uint64_t v181 = v242[0];
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_21CA3D644(0, *(void *)(v181 + 16) + 1, 1);
        uint64_t v181 = v242[0];
      }
      unint64_t v205 = *(void *)(v181 + 16);
      unint64_t v204 = *(void *)(v181 + 24);
      if (v205 >= v204 >> 1)
      {
        sub_21CA3D644(v204 > 1, v205 + 1, 1);
        uint64_t v181 = v242[0];
      }
      *(void *)(v181 + 16) = v205 + 1;
      sub_21CA591A4(v238, v181+ ((*(unsigned __int8 *)(v240 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v240 + 80))+ v205 * v237, (uint64_t (*)(void))type metadata accessor for FMFLocation);
      uint64_t v184 = v239;
      char v189 = *(unsigned char *)(v239 + 32);
      unint64_t v192 = 1 << v189;
      if (v186 >= 1 << v189) {
        goto LABEL_117;
      }
      int v188 = v228;
      unint64_t v206 = v228[v194];
      if ((v206 & v236) == 0) {
        goto LABEL_118;
      }
      LODWORD(v183) = v227;
      if (*(_DWORD *)(v239 + 36) != v227) {
        goto LABEL_119;
      }
      unint64_t v207 = v206 & (-2 << (v186 & 0x3F));
      if (v207)
      {
        unint64_t v192 = __clz(__rbit64(v207)) | v186 & 0xFFFFFFFFFFFFFFC0;
        uint64_t v185 = v240;
        unint64_t v193 = (uint64_t (*)(void))v226;
      }
      else
      {
        unint64_t v208 = v194 + 1;
        unint64_t v209 = (v192 + 63) >> 6;
        uint64_t v185 = v240;
        unint64_t v193 = (uint64_t (*)(void))v226;
        if (v194 + 1 < v209)
        {
          unint64_t v210 = v228[v208];
          if (v210)
          {
LABEL_109:
            unint64_t v192 = __clz(__rbit64(v210)) + (v208 << 6);
          }
          else
          {
            while (v209 - 2 != v194)
            {
              unint64_t v210 = *(void *)(v225 + 8 * v194++);
              if (v210)
              {
                unint64_t v208 = v194 + 1;
                goto LABEL_109;
              }
            }
          }
        }
      }
      uint64_t v187 = (uint64_t (*)())((char *)v235 + 1);
      uint64_t v186 = v192;
      if ((char *)((char *)v235 + 1) == (char *)v193)
      {
        swift_bridgeObjectRelease();
        uint64_t v55 = v218;
        goto LABEL_111;
      }
    }
    __break(1u);
LABEL_115:
    __break(1u);
LABEL_116:
    __break(1u);
LABEL_117:
    __break(1u);
LABEL_118:
    __break(1u);
LABEL_119:
    __break(1u);
LABEL_120:
    __break(1u);
LABEL_121:
    __break(1u);
LABEL_122:
    __break(1u);
LABEL_123:
    __break(1u);
LABEL_124:
    __break(1u);
LABEL_125:
    __break(1u);
LABEL_126:
    __break(1u);
LABEL_127:
    __break(1u);
  }
  else
  {
LABEL_111:
    v55[78] = v181;
    uint64_t v211 = v55;
    swift_bridgeObjectRelease();
    uint64_t v54 = v211[78];
    if (v54)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v54;
    }
  }
  __break(1u);
LABEL_129:
  uint64_t result = sub_21CB88FA0();
  __break(1u);
  return result;
}

uint64_t sub_21CA5BAEC(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = (void **)v4;
  uint64_t v10 = (void *)*v4;
  unint64_t v12 = sub_21CA5BCE0(a2, a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 >= v15 && (a4 & 1) != 0)
  {
LABEL_7:
    uint64_t v18 = *v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = v18[7];
      uint64_t v20 = type metadata accessor for FMFFriend();
      return sub_21CA5BE3C(a1, v19 + *(void *)(*(void *)(v20 - 8) + 72) * v12, (uint64_t (*)(void))type metadata accessor for FMFFriend);
    }
    goto LABEL_11;
  }
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_21CB85028((uint64_t (*)(void))type metadata accessor for FMFFriend, &qword_267C97BB8, (uint64_t (*)(void))type metadata accessor for FMFFriend);
    goto LABEL_7;
  }
  sub_21CA58D20(v15, a4 & 1, (uint64_t (*)(void))type metadata accessor for FMFFriend, &qword_267C97BB8, (uint64_t (*)(void))type metadata accessor for FMFFriend);
  unint64_t v22 = sub_21CA5BCE0(a2, a3);
  if ((v16 & 1) != (v23 & 1))
  {
LABEL_15:
    uint64_t result = sub_21CB88FA0();
    __break(1u);
    return result;
  }
  unint64_t v12 = v22;
  uint64_t v18 = *v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  sub_21CA5C728(v12, a2, a3, a1, v18, (uint64_t (*)(void))type metadata accessor for FMFFriend, (uint64_t (*)(void))type metadata accessor for FMFFriend);

  return swift_bridgeObjectRetain();
}

unint64_t sub_21CA5BCE0(uint64_t a1, uint64_t a2)
{
  sub_21CB89050();
  sub_21CB88380();
  uint64_t v4 = sub_21CB89090();

  return sub_21CA5BD58(a1, a2, v4);
}

unint64_t sub_21CA5BD58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    uint64_t v10 = (void *)(v9 + 16 * v6);
    BOOL v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_21CB88F50() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      do
      {
        unint64_t v6 = (v6 + 1) & v12;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          break;
        }
        uint64_t v13 = (void *)(v9 + 16 * v6);
        BOOL v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_21CB88F50() & 1) == 0);
    }
  }
  return v6;
}

uint64_t sub_21CA5BE3C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

void *assignWithTake for FMFFriend(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  swift_bridgeObjectRelease();
  uint64_t v8 = a3[8];
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = sub_21CB87590();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48);
  int v14 = v13(v9, 1, v11);
  int v15 = v13(v10, 1, v11);
  if (v14)
  {
    if (!v15)
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v15)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v9, v11);
LABEL_6:
    uint64_t v16 = sub_21CA57E34((uint64_t *)&unk_267C951B0);
    memcpy(v9, v10, *(void *)(*(void *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 40))(v9, v10, v11);
LABEL_7:
  uint64_t v17 = a3[10];
  *(void *)((char *)a1 + a3[9]) = *(void *)((char *)a2 + a3[9]);
  *((unsigned char *)a1 + v17) = *((unsigned char *)a2 + v17);
  uint64_t v18 = a3[12];
  *((unsigned char *)a1 + a3[11]) = *((unsigned char *)a2 + a3[11]);
  *((unsigned char *)a1 + v18) = *((unsigned char *)a2 + v18);
  uint64_t v19 = a3[14];
  *((unsigned char *)a1 + a3[13]) = *((unsigned char *)a2 + a3[13]);
  *((unsigned char *)a1 + v19) = *((unsigned char *)a2 + v19);
  uint64_t v20 = a3[16];
  *(void *)((char *)a1 + a3[15]) = *(void *)((char *)a2 + a3[15]);
  *(void *)((char *)a1 + v20) = *(void *)((char *)a2 + v20);
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[17]) = *(void *)((char *)a2 + a3[17]);
  swift_bridgeObjectRelease();
  uint64_t v21 = a3[19];
  *((unsigned char *)a1 + a3[18]) = *((unsigned char *)a2 + a3[18]);
  unint64_t v22 = (char *)a1 + v21;
  char v23 = (char *)a2 + v21;
  if (*(void *)((char *)a1 + v21 + 8))
  {
    uint64_t v24 = *((void *)v23 + 1);
    if (v24)
    {
      *(void *)unint64_t v22 = *(void *)v23;
      *((void *)v22 + 1) = v24;
      swift_bridgeObjectRelease();
      uint64_t v25 = *((void *)v23 + 3);
      *((void *)v22 + 2) = *((void *)v23 + 2);
      *((void *)v22 + 3) = v25;
      swift_bridgeObjectRelease();
      v22[32] = v23[32];
      uint64_t v26 = *((void *)v23 + 6);
      *((void *)v22 + 5) = *((void *)v23 + 5);
      *((void *)v22 + 6) = v26;
      swift_bridgeObjectRelease();
      goto LABEL_12;
    }
    sub_21CABF340((uint64_t)a1 + v21);
  }
  long long v27 = *((_OWORD *)v23 + 1);
  *(_OWORD *)unint64_t v22 = *(_OWORD *)v23;
  *((_OWORD *)v22 + 1) = v27;
  *((_OWORD *)v22 + 2) = *((_OWORD *)v23 + 2);
  *((void *)v22 + 6) = *((void *)v23 + 6);
LABEL_12:
  uint64_t v28 = a3[20];
  uint64_t v29 = (uint64_t)a1 + v28;
  uint64_t v30 = (char *)a2 + v28;
  unint64_t v31 = (int *)type metadata accessor for FMFLocation();
  uint64_t v32 = *((void *)v31 - 1);
  uint64_t v33 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v32 + 48);
  int v34 = v33(v29, 1, v31);
  int v35 = v33((uint64_t)v30, 1, v31);
  if (!v34)
  {
    if (v35)
    {
      sub_21CA58218(v29, (uint64_t (*)(void))type metadata accessor for FMFLocation);
      goto LABEL_18;
    }
    uint64_t v44 = *((void *)v30 + 1);
    *(void *)uint64_t v29 = *(void *)v30;
    *(void *)(v29 + 8) = v44;
    swift_bridgeObjectRelease();
    *(unsigned char *)(v29 + 16) = v30[16];
    *(void *)(v29 + 24) = *((void *)v30 + 3);
    *(_WORD *)(v29 + 32) = *((_WORD *)v30 + 16);
    uint64_t v45 = v31[8];
    uint64_t v46 = (void *)(v29 + v45);
    __dsta = &v30[v45];
    uint64_t v47 = sub_21CB875D0();
    uint64_t v76 = *(void *)(v47 - 8);
    uint64_t v77 = v46;
    uint64_t v48 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v76 + 48);
    LODWORD(v46) = v48(v46, 1, v47);
    int v49 = v48(__dsta, 1, v47);
    if (v46)
    {
      if (v49)
      {
        size_t v50 = *(void *)(*(void *)(sub_21CA57E34(&qword_267C96F00) - 8) + 64);
        uint64_t v51 = v77;
LABEL_29:
        memcpy(v51, __dsta, v50);
        goto LABEL_32;
      }
      (*(void (**)(void *, char *, uint64_t))(v76 + 32))(v77, __dsta, v47);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v76 + 56))(v77, 0, 1, v47);
    }
    else
    {
      if (v49)
      {
        (*(void (**)(void *, uint64_t))(v76 + 8))(v77, v47);
        size_t v50 = *(void *)(*(void *)(sub_21CA57E34(&qword_267C96F00) - 8) + 64);
        uint64_t v51 = v77;
        goto LABEL_29;
      }
      (*(void (**)(void *, char *, uint64_t))(v76 + 40))(v77, __dsta, v47);
    }
LABEL_32:
    *(unsigned char *)(v29 + v31[9]) = v30[v31[9]];
    *(unsigned char *)(v29 + v31[10]) = v30[v31[10]];
    uint64_t v53 = v31[11];
    uint64_t v54 = (void *)(v29 + v53);
    uint64_t v55 = &v30[v53];
    if (v54[38])
    {
      if (*((void *)v55 + 38))
      {
        if (v54[21])
        {
          if (*((void *)v55 + 21))
          {
            *uint64_t v54 = *(void *)v55;
            swift_bridgeObjectRelease();
            uint64_t v56 = *((void *)v55 + 2);
            v54[1] = *((void *)v55 + 1);
            v54[2] = v56;
            swift_bridgeObjectRelease();
            uint64_t v57 = *((void *)v55 + 4);
            v54[3] = *((void *)v55 + 3);
            v54[4] = v57;
            swift_bridgeObjectRelease();
            uint64_t v58 = *((void *)v55 + 6);
            v54[5] = *((void *)v55 + 5);
            v54[6] = v58;
            swift_bridgeObjectRelease();
            uint64_t v59 = *((void *)v55 + 8);
            v54[7] = *((void *)v55 + 7);
            v54[8] = v59;
            swift_bridgeObjectRelease();
            uint64_t v60 = *((void *)v55 + 10);
            v54[9] = *((void *)v55 + 9);
            v54[10] = v60;
            swift_bridgeObjectRelease();
            uint64_t v61 = *((void *)v55 + 12);
            v54[11] = *((void *)v55 + 11);
            v54[12] = v61;
            swift_bridgeObjectRelease();
            uint64_t v62 = *((void *)v55 + 14);
            v54[13] = *((void *)v55 + 13);
            v54[14] = v62;
            swift_bridgeObjectRelease();
            uint64_t v63 = *((void *)v55 + 16);
            v54[15] = *((void *)v55 + 15);
            v54[16] = v63;
            swift_bridgeObjectRelease();
            uint64_t v64 = *((void *)v55 + 18);
            v54[17] = *((void *)v55 + 17);
            v54[18] = v64;
            swift_bridgeObjectRelease();
            uint64_t v65 = *((void *)v55 + 20);
            v54[19] = *((void *)v55 + 19);
            v54[20] = v65;
            swift_bridgeObjectRelease();
            v54[21] = *((void *)v55 + 21);
            swift_bridgeObjectRelease();
            uint64_t v66 = *((void *)v55 + 23);
            v54[22] = *((void *)v55 + 22);
            v54[23] = v66;
            swift_bridgeObjectRelease();
            uint64_t v67 = *((void *)v55 + 25);
            v54[24] = *((void *)v55 + 24);
            v54[25] = v67;
            swift_bridgeObjectRelease();
            uint64_t v68 = *((void *)v55 + 27);
            v54[26] = *((void *)v55 + 26);
            v54[27] = v68;
            swift_bridgeObjectRelease();
            uint64_t v69 = *((void *)v55 + 29);
            v54[28] = *((void *)v55 + 28);
            v54[29] = v69;
            swift_bridgeObjectRelease();
            uint64_t v70 = *((void *)v55 + 31);
            v54[30] = *((void *)v55 + 30);
            v54[31] = v70;
            swift_bridgeObjectRelease();
            uint64_t v71 = *((void *)v55 + 33);
            v54[32] = *((void *)v55 + 32);
            v54[33] = v71;
            swift_bridgeObjectRelease();
            uint64_t v72 = *((void *)v55 + 35);
            v54[34] = *((void *)v55 + 34);
            v54[35] = v72;
            swift_bridgeObjectRelease();
            uint64_t v73 = *((void *)v55 + 37);
            v54[36] = *((void *)v55 + 36);
            v54[37] = v73;
            swift_bridgeObjectRelease();
LABEL_41:
            char v74 = (void *)v54[38];
            v54[38] = *((void *)v55 + 38);

            *((unsigned char *)v54 + 312) = v55[312];
            uint64_t v75 = *((void *)v55 + 41);
            v54[40] = *((void *)v55 + 40);
            v54[41] = v75;
            swift_bridgeObjectRelease();
            *((_WORD *)v54 + 168) = *((_WORD *)v55 + 168);
            v54[43] = *((void *)v55 + 43);
            swift_bridgeObjectRelease();
            *((unsigned char *)v54 + 352) = v55[352];
            goto LABEL_26;
          }
          sub_21CA757AC((uint64_t)v54);
        }
        memcpy(v54, v55, 0x130uLL);
        goto LABEL_41;
      }
      sub_21CA92D04((uint64_t)v54);
    }
    uint64_t v42 = v54;
    uint64_t v43 = v55;
    size_t v41 = 353;
    goto LABEL_19;
  }
  if (v35)
  {
LABEL_18:
    size_t v41 = *(void *)(*(void *)(sub_21CA57E34((uint64_t *)&unk_267C96EF0) - 8) + 64);
    uint64_t v42 = (void *)v29;
    uint64_t v43 = v30;
LABEL_19:
    memcpy(v42, v43, v41);
    goto LABEL_26;
  }
  *(_OWORD *)uint64_t v29 = *(_OWORD *)v30;
  *(unsigned char *)(v29 + 16) = v30[16];
  *(void *)(v29 + 24) = *((void *)v30 + 3);
  *(_WORD *)(v29 + 32) = *((_WORD *)v30 + 16);
  uint64_t v36 = v31[8];
  __dst = (void *)(v29 + v36);
  unint64_t v37 = &v30[v36];
  uint64_t v38 = sub_21CB875D0();
  uint64_t v39 = *(void *)(v38 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48))(v37, 1, v38))
  {
    uint64_t v40 = sub_21CA57E34(&qword_267C96F00);
    memcpy(__dst, v37, *(void *)(*(void *)(v40 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v39 + 32))(__dst, v37, v38);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v39 + 56))(__dst, 0, 1, v38);
  }
  *(unsigned char *)(v29 + v31[9]) = v30[v31[9]];
  *(unsigned char *)(v29 + v31[10]) = v30[v31[10]];
  memcpy((void *)(v29 + v31[11]), &v30[v31[11]], 0x161uLL);
  (*(void (**)(uint64_t, void, uint64_t, int *))(v32 + 56))(v29, 0, 1, v31);
LABEL_26:
  *((unsigned char *)a1 + a3[21]) = *((unsigned char *)a2 + a3[21]);
  return a1;
}

uint64_t sub_21CA5C728(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t (*a6)(void), uint64_t (*a7)(void))
{
  a5[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v11 = (void *)(a5[6] + 16 * a1);
  *uint64_t v11 = a2;
  v11[1] = a3;
  uint64_t v12 = a5[7];
  uint64_t v13 = a6(0);
  uint64_t result = sub_21CA5920C(a4, v12 + *(void *)(*(void *)(v13 - 8) + 72) * a1, a7);
  uint64_t v15 = a5[2];
  BOOL v16 = __OFADD__(v15, 1);
  uint64_t v17 = v15 + 1;
  if (v16) {
    __break(1u);
  }
  else {
    a5[2] = v17;
  }
  return result;
}

uint64_t sub_21CA5C7D4(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,void *a39)
{
  if (a39)
  {
    sub_21CA5E3D0(result, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
      a20,
      a21,
      a22);
    swift_bridgeObjectRetain();
    id v39 = a39;
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_21CA5C928(uint64_t a1, int a2)
{
  return sub_21CA58D20(a1, a2, (uint64_t (*)(void))type metadata accessor for FMFLocation, &qword_267C97BE8, (uint64_t (*)(void))type metadata accessor for FMFLocation);
}

uint64_t sub_21CA5C95C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

uint64_t assignWithTake for FMFLocation(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  uint64_t v7 = a3[8];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = sub_21CB875D0();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 32))(v8, v9, v10);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
LABEL_6:
    uint64_t v15 = sub_21CA57E34(&qword_267C96F00);
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 40))(v8, v9, v10);
LABEL_7:
  uint64_t v16 = a3[10];
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  *(unsigned char *)(a1 + v16) = *(unsigned char *)(a2 + v16);
  uint64_t v17 = a3[11];
  uint64_t v18 = (void *)(a1 + v17);
  uint64_t v19 = (void *)(a2 + v17);
  if (*(void *)(a1 + v17 + 304))
  {
    if (v19[38])
    {
      if (v18[21])
      {
        if (v19[21])
        {
          *uint64_t v18 = *v19;
          swift_bridgeObjectRelease();
          uint64_t v20 = v19[2];
          v18[1] = v19[1];
          void v18[2] = v20;
          swift_bridgeObjectRelease();
          uint64_t v21 = v19[4];
          v18[3] = v19[3];
          void v18[4] = v21;
          swift_bridgeObjectRelease();
          uint64_t v22 = v19[6];
          v18[5] = v19[5];
          v18[6] = v22;
          swift_bridgeObjectRelease();
          uint64_t v23 = v19[8];
          v18[7] = v19[7];
          void v18[8] = v23;
          swift_bridgeObjectRelease();
          uint64_t v24 = v19[10];
          v18[9] = v19[9];
          v18[10] = v24;
          swift_bridgeObjectRelease();
          uint64_t v25 = v19[12];
          v18[11] = v19[11];
          v18[12] = v25;
          swift_bridgeObjectRelease();
          uint64_t v26 = v19[14];
          v18[13] = v19[13];
          v18[14] = v26;
          swift_bridgeObjectRelease();
          uint64_t v27 = v19[16];
          v18[15] = v19[15];
          v18[16] = v27;
          swift_bridgeObjectRelease();
          uint64_t v28 = v19[18];
          v18[17] = v19[17];
          v18[18] = v28;
          swift_bridgeObjectRelease();
          uint64_t v29 = v19[20];
          v18[19] = v19[19];
          v18[20] = v29;
          swift_bridgeObjectRelease();
          v18[21] = v19[21];
          swift_bridgeObjectRelease();
          uint64_t v30 = v19[23];
          v18[22] = v19[22];
          v18[23] = v30;
          swift_bridgeObjectRelease();
          uint64_t v31 = v19[25];
          v18[24] = v19[24];
          v18[25] = v31;
          swift_bridgeObjectRelease();
          uint64_t v32 = v19[27];
          v18[26] = v19[26];
          v18[27] = v32;
          swift_bridgeObjectRelease();
          uint64_t v33 = v19[29];
          v18[28] = v19[28];
          v18[29] = v33;
          swift_bridgeObjectRelease();
          uint64_t v34 = v19[31];
          v18[30] = v19[30];
          v18[31] = v34;
          swift_bridgeObjectRelease();
          uint64_t v35 = v19[33];
          v18[32] = v19[32];
          v18[33] = v35;
          swift_bridgeObjectRelease();
          uint64_t v36 = v19[35];
          v18[34] = v19[34];
          v18[35] = v36;
          swift_bridgeObjectRelease();
          uint64_t v37 = v19[37];
          v18[36] = v19[36];
          v18[37] = v37;
          swift_bridgeObjectRelease();
LABEL_17:
          uint64_t v38 = (void *)v18[38];
          v18[38] = v19[38];

          *((unsigned char *)v18 + 312) = *((unsigned char *)v19 + 312);
          uint64_t v39 = v19[41];
          v18[40] = v19[40];
          v18[41] = v39;
          swift_bridgeObjectRelease();
          *((_WORD *)v18 + 168) = *((_WORD *)v19 + 168);
          v18[43] = v19[43];
          swift_bridgeObjectRelease();
          *((unsigned char *)v18 + 352) = *((unsigned char *)v19 + 352);
          return a1;
        }
        sub_21CA757AC((uint64_t)v18);
      }
      memcpy(v18, v19, 0x130uLL);
      goto LABEL_17;
    }
    sub_21CA92D04((uint64_t)v18);
  }
  memcpy(v18, v19, 0x161uLL);
  return a1;
}

uint64_t sub_21CA5CD6C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_21CA57E34(&qword_267C96F00);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_21CA5CDD4(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  uint64_t v2 = a2;
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v3 = 0;
  uint64_t v34 = result + 64;
  uint64_t v4 = 1 << *(unsigned char *)(result + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(result + 64);
  int64_t v35 = (unint64_t)(v4 + 63) >> 6;
  uint64_t v36 = result;
  while (v6)
  {
    uint64_t v39 = (v6 - 1) & v6;
    int64_t v40 = v3;
    unint64_t v7 = __clz(__rbit64(v6)) | (v3 << 6);
LABEL_25:
    uint64_t v12 = (uint64_t *)(*(void *)(result + 48) + 16 * v7);
    uint64_t v13 = *v12;
    uint64_t v14 = v12[1];
    uint64_t v15 = *(void *)(result + 56) + 56 * v7;
    uint64_t v17 = *(void *)v15;
    uint64_t v16 = *(void *)(v15 + 8);
    uint64_t v19 = *(void *)(v15 + 16);
    uint64_t v18 = *(void *)(v15 + 24);
    int v20 = *(unsigned __int8 *)(v15 + 32);
    uint64_t v21 = *(void *)(v15 + 48);
    uint64_t v41 = *(void *)(v15 + 40);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v22 = v2;
    unint64_t v23 = sub_21CA5BCE0(v13, v14);
    char v25 = v24;
    swift_bridgeObjectRelease();
    if ((v25 & 1) == 0
      || ((uint64_t v26 = *(void *)(v22 + 56) + 56 * v23,
           uint64_t v27 = *(void *)(v26 + 16),
           uint64_t v28 = *(void *)(v26 + 24),
           int v38 = *(unsigned __int8 *)(v26 + 32),
           uint64_t v29 = *(void *)(v26 + 40),
           uint64_t v37 = *(void *)(v26 + 48),
           *(void *)v26 == v17)
        ? (BOOL v30 = *(void *)(v26 + 8) == v16)
        : (BOOL v30 = 0),
          !v30 && (sub_21CB88F50() & 1) == 0))
    {
LABEL_46:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return 0;
    }
    if (v27 == v19 && v28 == v18)
    {
      if (v20 != v38) {
        goto LABEL_46;
      }
    }
    else if (sub_21CB88F50() & 1) == 0 || ((v20 ^ v38))
    {
      goto LABEL_46;
    }
    if (v29 == v41 && v37 == v21)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v2 = v22;
      uint64_t result = v36;
      unint64_t v6 = v39;
      int64_t v3 = v40;
    }
    else
    {
      char v33 = sub_21CB88F50();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v2 = v22;
      uint64_t result = v36;
      unint64_t v6 = v39;
      int64_t v3 = v40;
      if ((v33 & 1) == 0) {
        return 0;
      }
    }
  }
  int64_t v8 = v3 + 1;
  if (__OFADD__(v3, 1))
  {
    __break(1u);
    goto LABEL_49;
  }
  if (v8 >= v35) {
    return 1;
  }
  unint64_t v9 = *(void *)(v34 + 8 * v8);
  int64_t v10 = v3 + 1;
  if (v9) {
    goto LABEL_24;
  }
  int64_t v10 = v3 + 2;
  if (v3 + 2 >= v35) {
    return 1;
  }
  unint64_t v9 = *(void *)(v34 + 8 * v10);
  if (v9) {
    goto LABEL_24;
  }
  int64_t v10 = v3 + 3;
  if (v3 + 3 >= v35) {
    return 1;
  }
  unint64_t v9 = *(void *)(v34 + 8 * v10);
  if (v9) {
    goto LABEL_24;
  }
  int64_t v10 = v3 + 4;
  if (v3 + 4 >= v35) {
    return 1;
  }
  unint64_t v9 = *(void *)(v34 + 8 * v10);
  if (v9)
  {
LABEL_24:
    uint64_t v39 = (v9 - 1) & v9;
    int64_t v40 = v10;
    unint64_t v7 = __clz(__rbit64(v9)) + (v10 << 6);
    goto LABEL_25;
  }
  uint64_t v11 = v3 + 5;
  if (v3 + 5 >= v35) {
    return 1;
  }
  unint64_t v9 = *(void *)(v34 + 8 * v11);
  if (v9)
  {
    int64_t v10 = v3 + 5;
    goto LABEL_24;
  }
  while (1)
  {
    int64_t v10 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      break;
    }
    if (v10 >= v35) {
      return 1;
    }
    unint64_t v9 = *(void *)(v34 + 8 * v10);
    ++v11;
    if (v9) {
      goto LABEL_24;
    }
  }
LABEL_49:
  __break(1u);
  return result;
}

uint64_t sub_21CA5D104()
{
  if (qword_267C94990 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_21CB880A0();

  return sub_21CA4CC18(v0, (uint64_t)qword_267CA5368);
}

uint64_t sub_21CA5D168(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_21CA57E34((uint64_t *)&unk_267C951B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void sub_21CA5D1D0(unsigned __int8 *a1, void *a2)
{
  uint64_t v4 = a2[3];
  uint64_t v3 = a2[4];
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(*(void *)(a2[2] - 8) + 64) + v6;
  uint64_t v8 = *(void *)(v5 + 64);
  uint64_t v9 = *(void *)(v3 - 8);
  uint64_t v10 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v11 = *(void *)(v9 + 64);
  if (!*(_DWORD *)(v9 + 84)) {
    ++v11;
  }
  unint64_t v12 = v11 + ((v8 + v10 + (v7 & ~v6)) & ~v10);
  if (v12 <= 0x28) {
    unint64_t v12 = 40;
  }
  if (v12 > 3) {
    goto LABEL_6;
  }
  unsigned int v14 = ((1 << (8 * v12)) + 1) >> (8 * v12);
  if (v14 > 0xFFFC)
  {
    unsigned int v13 = *(_DWORD *)&a1[v12];
  }
  else
  {
    if (v14 <= 0xFC)
    {
LABEL_6:
      unsigned int v13 = a1[v12];
      goto LABEL_11;
    }
    unsigned int v13 = *(unsigned __int16 *)&a1[v12];
  }
LABEL_11:
  unsigned int v15 = v13 - 3;
  if (v13 >= 3)
  {
    if (v12 <= 3) {
      uint64_t v16 = v12;
    }
    else {
      uint64_t v16 = 4;
    }
    switch(v16)
    {
      case 1:
        int v17 = *a1;
        goto LABEL_20;
      case 2:
        int v17 = *(unsigned __int16 *)a1;
        goto LABEL_20;
      case 3:
        int v17 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_20;
      case 4:
        int v17 = *(_DWORD *)a1;
LABEL_20:
        int v18 = (v17 | (v15 << (8 * v12))) + 3;
        unsigned int v13 = v17 + 3;
        if (v12 < 4) {
          unsigned int v13 = v18;
        }
        break;
      default:
        break;
    }
  }
  switch(v13)
  {
    case 2u:
      swift_release();
      uint64_t v22 = (void *)*((void *)a1 + 1);

      break;
    case 1u:
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      break;
    case 0u:
      uint64_t v19 = ~v6;
      uint64_t v24 = *(void *)(v3 - 8);
      (*(void (**)(unsigned __int8 *))(*(void *)(a2[2] - 8) + 8))(a1);
      unint64_t v20 = (unint64_t)&a1[v7] & v19;
      (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v20, v4);
      unint64_t v21 = (v20 + v8 + v10) & ~v10;
      if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v24 + 48))(v21, 1, v3))
      {
        unint64_t v23 = *(void (**)(unint64_t, uint64_t))(v24 + 8);
        v23(v21, v3);
      }
      break;
  }
}

uint64_t sub_21CA5D530(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    sub_21CA57E34(&qword_267C94B08);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  unint64_t v12 = v10 + 32;
  unsigned int v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_21CB88D50();
  __break(1u);
  return result;
}

uint64_t sub_21CA5D680(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_21CB877E0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 44);
  uint64_t v6 = sub_21CB87810();
  int64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);

  return v7(v5, v6);
}

uint64_t sub_21CA5D728(uint64_t a1)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 2, AssociatedTypeWitness);
  if (!result)
  {
    uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8);
    return v4(a1, AssociatedTypeWitness);
  }
  return result;
}

uint64_t sub_21CA5D800(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(*(void *)(a2 + 16) - 8) + 8;
  (*(void (**)(void))v4)();
  uint64_t v5 = *(void *)(*(void *)(a2 + 24) - 8);
  uint64_t v6 = *(uint64_t (**)(unint64_t))(v5 + 8);
  unint64_t v7 = (*(void *)(v4 + 56) + a1 + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);

  return v6(v7);
}

uint64_t sub_21CA5D8A8(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(*(void *)(*(void *)(a2 + 16) - 8) + 8))();
}

uint64_t sub_21CA5D8D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = sub_21CB88100();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  size_t v11 = (char *)v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_21CB88150();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  unsigned int v15 = (char *)v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19[0] = *(void *)(v4 + 24);
  uint64_t v16 = (void *)swift_allocObject();
  v16[2] = a1;
  id v16[3] = v4;
  v16[4] = a2;
  v16[5] = a3;
  aBlock[4] = sub_21CA2EBC0;
  void aBlock[5] = v16;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  uint64_t aBlock[2] = sub_21CA1B084;
  uint64_t aBlock[3] = &unk_26CD6A708;
  int v17 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  sub_21CB88120();
  v19[1] = MEMORY[0x263F8EE78];
  sub_21CA5DE64((unint64_t *)&qword_267C96FC0, MEMORY[0x263F8F030]);
  sub_21CA57E34((uint64_t *)&unk_267C96DD0);
  sub_21CA3566C((unint64_t *)&qword_267C96FD0, (uint64_t *)&unk_267C96DD0);
  sub_21CB88A60();
  MEMORY[0x21D4B5A20](0, v15, v11, v17);
  _Block_release(v17);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  return swift_release();
}

uint64_t sub_21CA5DBA0(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_21CB88100();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_21CB88150();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16[0] = *(void *)(v2 + 64);
  uint64_t v13 = (void *)swift_allocObject();
  _OWORD v13[2] = a1;
  v13[3] = a2;
  v13[4] = v2;
  aBlock[4] = sub_21CA2EBB4;
  void aBlock[5] = v13;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  uint64_t aBlock[2] = sub_21CA1B084;
  uint64_t aBlock[3] = &unk_26CD6DBC0;
  uint64_t v14 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  sub_21CB88120();
  v16[1] = MEMORY[0x263F8EE78];
  sub_21CA5DE64((unint64_t *)&qword_267C96FC0, MEMORY[0x263F8F030]);
  sub_21CA57E34((uint64_t *)&unk_267C96DD0);
  sub_21CA3566C((unint64_t *)&qword_267C96FD0, (uint64_t *)&unk_267C96DD0);
  sub_21CB88A60();
  MEMORY[0x21D4B5A20](0, v12, v8, v14);
  _Block_release(v14);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  return swift_release();
}

uint64_t sub_21CA5DE64(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_21CA5DEAC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_21CA5DEF4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_21CA5DF3C()
{
  uint64_t v1 = sub_21CB87590();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21CA76174(v0, (uint64_t)v26);
  uint64_t v5 = *(void **)(v0 + 304);
  void v20[3] = *(unsigned __int8 *)(v0 + 312);
  unint64_t v21 = *(void *)(v0 + 344);
  sub_21CA57E34(&qword_267C97020);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_21CB8B3F0;
  objc_msgSend(v5, sel_coordinate);
  uint64_t v7 = MEMORY[0x263F8D538];
  uint64_t v8 = MEMORY[0x263F8D5B8];
  *(void *)(v6 + 56) = MEMORY[0x263F8D538];
  *(void *)(v6 + 64) = v8;
  *(void *)(v6 + 32) = v9;
  objc_msgSend(v5, sel_coordinate);
  *(void *)(v6 + 96) = v7;
  *(void *)(v6 + 104) = v8;
  *(void *)(v6 + 72) = v10;
  objc_msgSend(v5, sel_horizontalAccuracy);
  *(void *)(v6 + 136) = v7;
  *(void *)(v6 + 144) = v8;
  *(void *)(v6 + 112) = v11;
  sub_21CB88300();
  unint64_t v22 = 0xD000000000000014;
  unint64_t v23 = 0x800000021CB94920;
  sub_21CB883D0();
  swift_bridgeObjectRelease();
  sub_21CB883D0();
  unint64_t v12 = v22;
  unint64_t v13 = v23;
  unint64_t v22 = 0x6D617473656D6974;
  unint64_t v23 = 0xEB00000000203A70;
  id v14 = objc_msgSend(v5, sel_timestamp);
  sub_21CB87560();

  sub_21CA5E59C(&qword_267C950D8, MEMORY[0x263F07490]);
  sub_21CB88F00();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  sub_21CB883D0();
  swift_bridgeObjectRelease();
  unint64_t v22 = v12;
  unint64_t v23 = v13;
  swift_bridgeObjectRetain();
  sub_21CB883D0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v15 = v22;
  unint64_t v16 = v23;
  unint64_t v22 = 0;
  unint64_t v23 = 0xE000000000000000;
  sub_21CB88B70();
  swift_bridgeObjectRelease();
  unint64_t v22 = 0xD000000000000012;
  unint64_t v23 = 0x800000021CB94940;
  sub_21CB883D0();
  swift_bridgeObjectRelease();
  sub_21CB883D0();
  unint64_t v22 = v15;
  unint64_t v23 = v16;
  swift_bridgeObjectRetain();
  sub_21CB883D0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v18 = v22;
  unint64_t v17 = v23;
  unint64_t v22 = 0;
  unint64_t v23 = 0xE000000000000000;
  sub_21CB88B70();
  swift_bridgeObjectRelease();
  uint64_t v24 = 0x3A73736572646461;
  unint64_t v25 = 0xE900000000000020;
  sub_21CA76174((uint64_t)v26, (uint64_t)&v22);
  sub_21CA76468((uint64_t)v26, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_21CA5E3D0);
  sub_21CA57E34(&qword_267C951E0);
  sub_21CB88310();
  sub_21CB883D0();
  swift_bridgeObjectRelease();
  sub_21CB883D0();
  unint64_t v22 = v21;
  swift_bridgeObjectRetain();
  sub_21CA57E34(&qword_267C950B0);
  sub_21CB88310();
  sub_21CB883D0();
  swift_bridgeObjectRelease();
  sub_21CB883D0();
  unint64_t v22 = v18;
  unint64_t v23 = v17;
  swift_bridgeObjectRetain();
  sub_21CB883D0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v22;
}

uint64_t sub_21CA5E3D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  if (a22)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_21CA5E554(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_21CA5E59C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_21CA5E5E4(void *a1)
{
  uint64_t v3 = sub_21CA57E34(&qword_267C95CB0);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388]();
  uint64_t v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v1;
  uint64_t v7 = v1[1];
  uint64_t v48 = v1[2];
  uint64_t v49 = v7;
  uint64_t v9 = v1[3];
  uint64_t v46 = v1[4];
  uint64_t v47 = v9;
  uint64_t v10 = v1[5];
  uint64_t v44 = v1[6];
  uint64_t v45 = v10;
  uint64_t v11 = v1[7];
  uint64_t v42 = v1[8];
  uint64_t v43 = v11;
  uint64_t v12 = v1[9];
  uint64_t v13 = v1[10];
  uint64_t v40 = v1[11];
  uint64_t v41 = v13;
  uint64_t v14 = v1[12];
  uint64_t v38 = v12;
  uint64_t v39 = v14;
  uint64_t v37 = v1[13];
  int v60 = *((unsigned __int8 *)v1 + 112);
  sub_21CAC93A4((uint64_t)(v1 + 15), (uint64_t)v59);
  uint64_t v15 = v1[45];
  uint64_t v16 = v1[46];
  uint64_t v35 = v1[47];
  uint64_t v36 = v16;
  uint64_t v17 = v1[48];
  uint64_t v33 = v1[49];
  uint64_t v34 = v17;
  uint64_t v18 = v1[50];
  uint64_t v31 = v1[51];
  uint64_t v32 = v18;
  int v30 = *((unsigned __int8 *)v1 + 416);
  uint64_t v28 = v1[53];
  uint64_t v29 = v15;
  uint64_t v19 = v1[54];
  uint64_t v25 = v1[55];
  uint64_t v26 = v19;
  uint64_t v27 = v1[56];
  sub_21CA2B2CC(a1, a1[3]);
  sub_21CA5F16C();
  sub_21CB890C0();
  uint64_t v51 = v8;
  char v61 = 0;
  sub_21CA57E34(&qword_267C94EF0);
  sub_21CA5EF04();
  uint64_t v20 = v50;
  sub_21CB88EB0();
  if (v20) {
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  uint64_t v21 = v48;
  uint64_t v51 = v49;
  char v61 = 1;
  sub_21CB88EB0();
  uint64_t v51 = v21;
  char v61 = 2;
  sub_21CB88EB0();
  uint64_t v51 = v47;
  char v61 = 3;
  sub_21CB88EB0();
  uint64_t v50 = v4;
  uint64_t v51 = v46;
  char v61 = 4;
  sub_21CB88EB0();
  uint64_t v51 = v45;
  char v61 = 5;
  sub_21CA57E34(&qword_267C94F08);
  sub_21CA5F04C();
  sub_21CB88EB0();
  uint64_t v51 = v44;
  char v61 = 6;
  sub_21CB88EB0();
  uint64_t v51 = v43;
  char v61 = 7;
  sub_21CB88EB0();
  uint64_t v51 = v42;
  char v61 = 8;
  sub_21CB88EB0();
  uint64_t v51 = v38;
  uint64_t v52 = v41;
  uint64_t v53 = v40;
  uint64_t v54 = v39;
  char v61 = 9;
  sub_21CA57E34(&qword_267C95598);
  sub_21CA5EE50((unint64_t *)&qword_267C955A0, &qword_267C95598, (void (*)(void))sub_21CA656A8);
  sub_21CB88EB0();
  uint64_t v51 = v37;
  LOBYTE(v52) = v60;
  char v61 = 10;
  sub_21CA57E34(&qword_267C95CC8);
  sub_21CA5EE50(&qword_267C95CD0, &qword_267C95CC8, (void (*)(void))sub_21CA6623C);
  uint64_t v50 = v3;
  sub_21CB88EB0();
  sub_21CAC93A4((uint64_t)v59, (uint64_t)&v51);
  char v61 = 11;
  sub_21CA57E34((uint64_t *)&unk_267C96EE0);
  sub_21CA5EE50(&qword_267C95CE0, (uint64_t *)&unk_267C96EE0, (void (*)(void))sub_21CA62A08);
  sub_21CB88EB0();
  uint64_t v51 = v29;
  uint64_t v52 = v36;
  uint64_t v53 = v35;
  uint64_t v54 = v34;
  uint64_t v55 = v33;
  uint64_t v56 = v32;
  uint64_t v57 = v31;
  char v58 = v30;
  char v61 = 12;
  sub_21CA57E34(&qword_267C95CF0);
  sub_21CA5EE50(&qword_267C95CF8, &qword_267C95CF0, (void (*)(void))sub_21CA625CC);
  sub_21CB88EB0();
  uint64_t v51 = v28;
  char v61 = 13;
  sub_21CA57E34(&qword_267C94E88);
  sub_21CA5EE50(&qword_267C95D08, &qword_267C94E88, (void (*)(void))sub_21CA6285C);
  sub_21CB88EB0();
  uint64_t v51 = v27;
  char v61 = 16;
  sub_21CA57E34(&qword_267C95C88);
  sub_21CA5F0F0(&qword_267C95D18, (void (*)(void))sub_21CA668FC);
  sub_21CB88EB0();
  uint64_t v51 = v26;
  char v61 = 14;
  sub_21CA57E34(&qword_267C95C98);
  sub_21CA5EE50(&qword_267C95D28, &qword_267C95C98, (void (*)(void))sub_21CA62B60);
  sub_21CB88EB0();
  uint64_t v51 = v25;
  char v61 = 15;
  sub_21CA57E34(&qword_267C94E70);
  sub_21CA5EFA8();
  uint64_t v22 = v50;
  sub_21CB88EB0();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v22);
}

uint64_t sub_21CA5EE50(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_21CA5EEBC(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_21CA5EEBC(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContextInMetadataState2();
    *a1 = result;
  }
  return result;
}

unint64_t sub_21CA5EF04()
{
  unint64_t result = qword_267C95CB8;
  if (!qword_267C95CB8)
  {
    sub_21CA5EEBC(&qword_267C94EF0);
    sub_21CA045A8(&qword_267C95CC0, (void (*)(uint64_t))type metadata accessor for FMFIntermediateFriend);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C95CB8);
  }
  return result;
}

unint64_t sub_21CA5EFA8()
{
  unint64_t result = qword_267C950C0;
  if (!qword_267C950C0)
  {
    sub_21CA5EEBC(&qword_267C94E70);
    sub_21CA045A8((unint64_t *)&qword_267C950C8, (void (*)(uint64_t))type metadata accessor for FMFLabelledLocation);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C950C0);
  }
  return result;
}

unint64_t sub_21CA5F04C()
{
  unint64_t result = qword_267C95A58;
  if (!qword_267C95A58)
  {
    sub_21CA5EEBC(&qword_267C94F08);
    sub_21CA045A8((unint64_t *)&qword_267C95A60, (void (*)(uint64_t))type metadata accessor for FMFLocationAlert);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C95A58);
  }
  return result;
}

uint64_t sub_21CA5F0F0(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_21CA5EEBC(&qword_267C95C88);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_21CA5F16C()
{
  unint64_t result = qword_267C95C80;
  if (!qword_267C95C80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C95C80);
  }
  return result;
}

unsigned char *initializeBufferWithCopyOfBuffer for FMFSchedule.CodingKeys(unsigned char *result, unsigned char *a2)
{
  *unint64_t result = *a2;
  return result;
}

BOOL sub_21CA5F1D0(void *a1)
{
  return (*a1 & ~*v1) == 0;
}

uint64_t sub_21CA5F1E4()
{
  return sub_21CA5F1EC(*v0);
}

uint64_t sub_21CA5F1EC(char a1)
{
  uint64_t result = 25705;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x64496E6F73726570;
      break;
    case 2:
      uint64_t result = 0xD000000000000015;
      break;
    case 3:
      uint64_t result = 0xD000000000000019;
      break;
    case 4:
    case 10:
      uint64_t result = 0xD000000000000016;
      break;
    case 5:
      uint64_t result = 0xD000000000000014;
      break;
    case 6:
      unsigned int v3 = 1633972341;
      goto LABEL_8;
    case 7:
      unsigned int v3 = 1634038371;
LABEL_8:
      uint64_t result = v3 | 0x6954657400000000;
      break;
    case 8:
      uint64_t result = 0x73657269707865;
      break;
    case 9:
      uint64_t result = 0x746F4E646574706FLL;
      break;
    case 11:
      uint64_t result = 0xD000000000000023;
      break;
    case 12:
      uint64_t result = 0xD000000000000017;
      break;
    case 13:
      uint64_t result = 0x6E65644968737570;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for FMFRelationshipType()
{
  return &type metadata for FMFRelationshipType;
}

void static FMFRelationshipType.willFollowMyLocation.getter(void *a1@<X8>)
{
  *a1 = 8;
}

void static FMFRelationshipType.sharesLocationWithMe.getter(void *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_21CA5F39C()
{
  uint64_t v1 = 1701667182;
  if (*v0 != 1) {
    uint64_t v1 = 0x6143654D6F747561;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 25705;
  }
}

__n128 initializeWithTake for FMFDevice(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for FMFContact(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 56)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

ValueMetadata *type metadata accessor for FMFLocationSource()
{
  return &type metadata for FMFLocationSource;
}

void static FMFRelationshipType.willShareLocationWithMe.getter(void *a1@<X8>)
{
  *a1 = 4;
}

void static FMFRelationshipType.followsMyLocation.getter(void *a1@<X8>)
{
  *a1 = 1;
}

void sub_21CA5F474(void *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t sub_21CA5F484(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *storeEnumTagSinglePayload for FMFIntermediateFriend.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 13 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 13) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF2)
  {
    unsigned int v6 = ((a2 - 243) >> 8) + 1;
    *__n128 result = a2 + 13;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        break;
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 13;
        break;
    }
  }
  return result;
}

uint64_t getEnumTagSinglePayload for FMFSimpleLocation(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 353)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 304);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t dispatch thunk of FMFManager.friendsOperationsRestricted.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 760))();
}

uint64_t sub_21CA5F5CC()
{
  return *(unsigned __int8 *)(*(void *)(v0 + 112) + 40);
}

ValueMetadata *type metadata accessor for FMFContact()
{
  return &type metadata for FMFContact;
}

uint64_t FMFFriend.contactHandles.getter()
{
  return swift_bridgeObjectRetain();
}

ValueMetadata *type metadata accessor for FMFLabel()
{
  return &type metadata for FMFLabel;
}

ValueMetadata *type metadata accessor for FMFAddress()
{
  return &type metadata for FMFAddress;
}

uint64_t storeEnumTagSinglePayload for FMFLocationAlert(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_21CA9F2C4);
}

uint64_t getEnumTagSinglePayload for FMFLocationAlert(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_21CA9F184);
}

BOOL FMFLocation.isSecureLocation.getter()
{
  return *(unsigned char *)(v0 + 33) != 0;
}

void FMFLocation.locationSource.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 33);
}

unsigned char *sub_21CA5F658(unsigned char *result, char a2)
{
  *__n128 result = a2;
  return result;
}

uint64_t dispatch thunk of FMFManager.pendingUpdateFriends.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 776))();
}

uint64_t sub_21CA5F68C()
{
  return sub_21CA0B570(&qword_267C95D50);
}

uint64_t getEnumTagSinglePayload for FMFPreferences(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

unint64_t sub_21CA5F6F4()
{
  unint64_t result = 25705;
  switch(*v0)
  {
    case 1:
    case 3:
      unint64_t result = 0x6E6F697461636F6CLL;
      break;
    case 2:
      unint64_t result = 0xD000000000000010;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_21CA5F768()
{
  return sub_21CA5F770(*v0);
}

unint64_t sub_21CA5F770(char a1)
{
  unint64_t result = 0x6F6C6C6F4678616DLL;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000019;
      break;
    case 2:
      unint64_t result = 0x4C6E6F6973736573;
      break;
    case 3:
      unint64_t result = 0xD000000000000019;
      break;
    case 4:
      unint64_t result = 0xD000000000000017;
      break;
    case 5:
      unint64_t result = 0x7469766E4978616DLL;
      break;
    case 6:
      unint64_t result = 0xD000000000000010;
      break;
    case 7:
      unint64_t result = 0x6C6562614C78616DLL;
      break;
    case 8:
      unint64_t result = 0xD000000000000016;
      break;
    case 9:
    case 21:
    case 22:
    case 28:
    case 29:
      unint64_t result = 0xD000000000000018;
      break;
    case 10:
      unint64_t result = 0xD000000000000017;
      break;
    case 11:
      unint64_t result = 0xD00000000000001FLL;
      break;
    case 12:
      unint64_t result = 0x65764F4E4F726162;
      break;
    case 13:
      unint64_t result = 0x6E6F697461636F6CLL;
      break;
    case 14:
      unint64_t result = 0xD00000000000001CLL;
      break;
    case 15:
      unint64_t result = 0xD000000000000012;
      break;
    case 16:
      unint64_t result = 0xD000000000000014;
      break;
    case 17:
      unint64_t result = 0xD000000000000011;
      break;
    case 18:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 19:
      unint64_t result = 0xD000000000000017;
      break;
    case 20:
      unint64_t result = 0x6E6569724678616DLL;
      break;
    case 23:
      unint64_t result = 0xD00000000000001ELL;
      break;
    case 24:
      unint64_t result = 0xD00000000000001BLL;
      break;
    case 25:
      unint64_t result = 0x6E45636F4C726162;
      break;
    case 26:
      unint64_t result = 0x67694D776F6C6C61;
      break;
    case 27:
      unint64_t result = 0xD00000000000001BLL;
      break;
    case 30:
      unint64_t result = 0xD00000000000001ELL;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_21CA5FAA8()
{
  return sub_21CA5FAB0(*v0);
}

unint64_t sub_21CA5FAB0(char a1)
{
  unint64_t result = 0x736C6562616CLL;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000011;
      break;
    case 2:
      unint64_t result = 0x73656369766564;
      break;
    case 3:
      unint64_t result = 0x7366657270;
      break;
    case 4:
      unint64_t result = 0x7365727574616566;
      break;
    case 5:
      unint64_t result = 0x6F666E49796DLL;
      break;
    case 6:
      unint64_t result = 0x6769666E6F63;
      break;
    case 7:
      unint64_t result = 0x6E6F697461636F6CLL;
      break;
    case 8:
    case 15:
      unint64_t result = 0xD000000000000010;
      break;
    case 9:
      unint64_t result = 0x4F676E69646E6570;
      break;
    case 10:
      unint64_t result = 0x6E69776F6C6C6F66;
      break;
    case 11:
      unint64_t result = 0x7265776F6C6C6F66;
      break;
    case 12:
    case 13:
      unint64_t result = 0x6F46657275747566;
      break;
    case 14:
      unint64_t result = 0x7365636E6546796DLL;
      break;
    case 16:
      unint64_t result = 0xD000000000000011;
      break;
    case 17:
      unint64_t result = 0xD000000000000015;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_21CA5FC94()
{
  return swift_release();
}

uint64_t sub_21CA5FC9C()
{
  return swift_release();
}

uint64_t sub_21CA5FCA4()
{
  return swift_release();
}

uint64_t sub_21CA5FCAC()
{
  return swift_release();
}

uint64_t sub_21CA5FCB4()
{
  return swift_release();
}

uint64_t sub_21CA5FCBC()
{
  return swift_release();
}

uint64_t sub_21CA5FCC4()
{
  return swift_release();
}

uint64_t sub_21CA5FCCC()
{
  return swift_release();
}

uint64_t sub_21CA5FCD4()
{
  return swift_release();
}

uint64_t sub_21CA5FCDC()
{
  return swift_release();
}

uint64_t sub_21CA5FCE4()
{
  return swift_release();
}

uint64_t sub_21CA5FCEC()
{
  return swift_release();
}

uint64_t sub_21CA5FCF4()
{
  return swift_release();
}

uint64_t sub_21CA5FCFC()
{
  return swift_release();
}

uint64_t sub_21CA5FD04()
{
  return swift_release();
}

uint64_t sub_21CA5FD0C()
{
  return swift_release();
}

uint64_t sub_21CA5FD14()
{
  return swift_release();
}

uint64_t sub_21CA5FD1C()
{
  return swift_release();
}

uint64_t sub_21CA5FD24()
{
  return swift_release();
}

uint64_t sub_21CA5FD2C()
{
  return swift_release();
}

uint64_t sub_21CA5FD34()
{
  return swift_release();
}

uint64_t sub_21CA5FD3C()
{
  return swift_release();
}

uint64_t sub_21CA5FD44(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_21CA5FD54(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_21CA5FD64(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_21CA5FD74(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_21CA5FD84(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_21CA5FD94(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_21CA5FDA4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_21CA5FDB4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_21CA5FDC4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_21CA5FDD4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_21CA5FDE4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_21CA5FDF4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_21CA5FE04(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_21CA5FE14(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_21CA5FE24(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_21CA5FE34(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_21CA5FE44(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_21CA5FE54(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_21CA5FE64(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_21CA5FE74(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_21CA5FE84(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_21CA5FE94(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t destroy for FMFLabel()
{
  return swift_bridgeObjectRelease();
}

uint64_t type metadata accessor for AsyncTimerSequence()
{
  return sub_21CA229E0();
}

unint64_t sub_21CA5FEC4()
{
  return sub_21CA5FECC(*v0);
}

unint64_t sub_21CA5FECC(char a1)
{
  unint64_t result = 0x6E69776F6C6C6F66;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x7265776F6C6C6F66;
      break;
    case 2:
      unint64_t result = 0xD000000000000010;
      break;
    case 3:
    case 4:
      unint64_t result = 0x6F46657275747566;
      break;
    case 5:
      unint64_t result = 0xD000000000000016;
      break;
    case 6:
    case 7:
      unint64_t result = 0xD00000000000001BLL;
      break;
    case 8:
      unint64_t result = 0xD000000000000020;
      break;
    case 9:
      unint64_t result = 0x6E65726566657270;
      break;
    case 10:
      unint64_t result = 0x7365727574616566;
      break;
    case 11:
      unint64_t result = 0x6769666E6F63;
      break;
    case 12:
      unint64_t result = 0x6F666E49796DLL;
      break;
    case 13:
      unint64_t result = 0x73656369766564;
      break;
    case 14:
      unint64_t result = 0x736C6562616CLL;
      break;
    case 15:
      unint64_t result = 0xD000000000000011;
      break;
    case 16:
      unint64_t result = 0x73746361746E6F63;
      break;
    default:
      return result;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for FMFDevice.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        break;
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

uint64_t getEnumTagSinglePayload for FMFIntermediateFriend.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF3) {
    goto LABEL_17;
  }
  if (a2 + 13 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 13) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 13;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 13;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 13;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xE;
  int v8 = v6 - 14;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

uint64_t sub_21CA601EC()
{
  return 0;
}

uint64_t type metadata accessor for AsyncChunksOfCountOrSignalSequence.Either()
{
  return swift_getGenericMetadata();
}

unint64_t sub_21CA60210()
{
  return sub_21CA60218(*v0);
}

unint64_t sub_21CA60218(char a1)
{
  unint64_t result = 0x6569724677656976;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6C6C6F4677656976;
      break;
    case 2:
      unint64_t result = 0x7165526E4F746361;
      break;
    case 3:
      unint64_t result = 0x636F4C726566666FLL;
      break;
    case 4:
      unint64_t result = 0x794D65676E616863;
      break;
    case 5:
      unint64_t result = 0x654D65676E616863;
      break;
    case 6:
      unint64_t result = 0xD000000000000012;
      break;
    case 7:
      unint64_t result = 0xD000000000000019;
      break;
    case 8:
      unint64_t result = 0xD000000000000017;
      break;
    case 9:
      unint64_t result = 0x724665766F6D6572;
      break;
    case 10:
      unint64_t result = 0x6F4665766F6D6572;
      break;
    case 11:
      unint64_t result = 0x654465766F6D6572;
      break;
    case 12:
      unint64_t result = 0x744F796669746F6ELL;
      break;
    case 13:
      unint64_t result = 0x654D796669746F6ELL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for FriendCacheData(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 456)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

__n128 initializeWithTake for FMFLocateInProgress(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

unsigned char *storeEnumTagSinglePayload for FMFLocateInProgress.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        break;
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

uint64_t sub_21CA6052C()
{
  if (*v0) {
    return 0x737574617473;
  }
  else {
    return 25705;
  }
}

unsigned char *_s7FMFCore17FMFLocationSourceOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *__n128 result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        break;
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 3;
        break;
    }
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for FriendCacheData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 424) = 0u;
    *(_OWORD *)(result + 408) = 0u;
    *(_OWORD *)(result + 392) = 0u;
    *(_OWORD *)(result + 440) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 456) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 456) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for FMFDevice(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 33) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t getEnumTagSinglePayload for FMFDevice(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 33)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FMFPreferences(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t getEnumTagSinglePayload for FMFAddress(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 304)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 168);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

unint64_t sub_21CA607F4()
{
  return sub_21CA607FC(*v0);
}

unint64_t sub_21CA607FC(char a1)
{
  unint64_t result = 0xD000000000000013;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000011;
      break;
    case 2:
      unint64_t result = 0x61636F4C65646968;
      break;
    case 4:
      unint64_t result = 0x457972616D697270;
      break;
    case 5:
      unint64_t result = 0x657469726F766166;
      break;
    default:
      return result;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for FMFConfig.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 30 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 30) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xE2) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xE1)
  {
    unsigned int v6 = ((a2 - 226) >> 8) + 1;
    *unint64_t result = a2 + 30;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        break;
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 30;
        break;
    }
  }
  return result;
}

unint64_t sub_21CA60988()
{
  return sub_21CB7C6C8(*v0);
}

uint64_t dispatch thunk of FMFManager.isInitialized.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 640))();
}

void *initializeWithTake for FriendCacheData(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x1C8uLL);
}

unint64_t sub_21CA609C8()
{
  return sub_21CA609D0(*v0);
}

unint64_t sub_21CA609D0(char a1)
{
  unint64_t result = 0x64497472656C61;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x656C746974;
      break;
    case 2:
      unint64_t result = 0x6567617373656DLL;
      break;
    case 3:
    case 4:
      unint64_t result = 0x6E6F747475426B6FLL;
      break;
    case 5:
      unint64_t result = 0xD000000000000011;
      break;
    case 6:
      unint64_t result = 0x75426C65636E6163;
      break;
    case 7:
      unint64_t result = 0x7079547472656C61;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for FMFLocationAlertTriggerType(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFD) {
    goto LABEL_17;
  }
  if (a2 + 3 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 3) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 3;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 4;
  int v8 = v6 - 4;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

uint64_t FMFLocation.locateInProgress.getter()
{
  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t sub_21CA60B60()
{
  uint64_t result = 0x736C69616D65;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6D614E7473726966;
      break;
    case 2:
      uint64_t result = 0x656369766544656DLL;
      break;
    case 3:
      uint64_t result = 0x6449656369766564;
      break;
    case 4:
      uint64_t result = 0x656C626967696C65;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t type metadata accessor for AsyncChain2Sequence()
{
  return swift_getGenericMetadata();
}

uint64_t type metadata accessor for AsyncSyncSequence()
{
  return sub_21CA229E0();
}

ValueMetadata *type metadata accessor for FMFPreferences()
{
  return &type metadata for FMFPreferences;
}

uint64_t sub_21CA60C48()
{
  uint64_t result = 0x7472656C61;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6F43726576726573;
      break;
    case 2:
      uint64_t result = 0x746E6F4361746164;
      break;
    case 3:
      uint64_t result = 0x6174536863746566;
      break;
    case 4:
      uint64_t result = 0x52646E616D6D6F63;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_21CA60D04(uint64_t a1)
{
  unint64_t v2 = sub_21CA60D40();

  return MEMORY[0x270FA00B0](a1, v2);
}

unint64_t sub_21CA60D40()
{
  unint64_t result = qword_267C95448;
  if (!qword_267C95448)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C95448);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for FMFInitRefreshClientResponse.InitRefreshCodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 17 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 17) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xEF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xEE)
  {
    unsigned int v6 = ((a2 - 239) >> 8) + 1;
    *unint64_t result = a2 + 17;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        break;
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 17;
        break;
    }
  }
  return result;
}

uint64_t getEnumTagSinglePayload for FMFInitRefreshClientResponse.InitRefreshCodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xEF) {
    goto LABEL_17;
  }
  if (a2 + 17 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 17) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 17;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 17;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 17;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x12;
  int v8 = v6 - 18;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

uint64_t FMFPreferences.hideLocation.getter()
{
  return *(unsigned __int8 *)(v0 + 1);
}

uint64_t dispatch thunk of FMFManager.friends.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 608))();
}

uint64_t sub_21CA60F24()
{
  return sub_21CA0B570(&qword_267C95D50);
}

uint64_t dispatch thunk of FMFManager.preferences.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 696))();
}

uint64_t storeEnumTagSinglePayload for FMFAddress(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 296) = 0;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 304) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 168) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 304) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t FMTabInfoLastVisited.getter()
{
  return 0x697369567473616CLL;
}

ValueMetadata *type metadata accessor for FMFConfigValue()
{
  return &type metadata for FMFConfigValue;
}

uint64_t sub_21CA61034(uint64_t a1)
{
  unint64_t v2 = sub_21CA61070();

  return MEMORY[0x270FA00B0](a1, v2);
}

unint64_t sub_21CA61070()
{
  unint64_t result = qword_267C97B08;
  if (!qword_267C97B08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C97B08);
  }
  return result;
}

uint64_t FMTabInfoTimeSpent.getter()
{
  return 0x6E657053656D6974;
}

uint64_t FMFGlobalConfig<A>(_:fallback:)(uint64_t a1)
{
  return sub_21CA0A718(a1);
}

uint64_t storeEnumTagSinglePayload for FMFSimpleLocation(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 344) = 0;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(unsigned char *)(result + 352) = 0;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 353) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 304) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 353) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for FMFAddress.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 19 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 19) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xED) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xEC)
  {
    unsigned int v6 = ((a2 - 237) >> 8) + 1;
    *unint64_t result = a2 + 19;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        break;
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 19;
        break;
    }
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for FMFBaseResponse.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        break;
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

uint64_t getEnumTagSinglePayload for FMFMyInfo(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 57)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_21CA61378(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_21CB39150);
}

unsigned char *storeEnumTagSinglePayload for FMFSimpleLocation.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *unint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        break;
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

unint64_t sub_21CA6145C()
{
  return sub_21CA61464(*v0);
}

unint64_t sub_21CA61464(char a1)
{
  unint64_t result = 0x73736572646461;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x64757469676E6F6CLL;
      break;
    case 2:
      unint64_t result = 0x656475746974616CLL;
      break;
    case 3:
      unint64_t result = 0xD000000000000012;
      break;
    case 4:
      unint64_t result = 0x6D617473656D6974;
      break;
    case 5:
      unint64_t result = 0x736C6562616CLL;
      break;
    case 6:
      unint64_t result = 0x756363616E497369;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for FMFAlertType(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFC) {
    goto LABEL_17;
  }
  if (a2 + 4 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 4) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 4;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 5;
  int v8 = v6 - 5;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for FMFPreferences.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        break;
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

__n128 initializeWithTake for FMFMyInfo(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

__n128 initializeWithTake for FMFPreferences(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t storeEnumTagSinglePayload for FMFMyInfo(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 56) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 57) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 57) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for FMFMyInfo.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *__n128 result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        break;
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FMFMyInfo.CodingKeys()
{
  return &type metadata for FMFMyInfo.CodingKeys;
}

ValueMetadata *type metadata accessor for FMFDevice.CodingKeys()
{
  return &type metadata for FMFDevice.CodingKeys;
}

uint64_t getEnumTagSinglePayload for FMFConfig(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 240)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 48);
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

ValueMetadata *type metadata accessor for FMFConfig.CodingKeys()
{
  return &type metadata for FMFConfig.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for FMFAlert.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *__n128 result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        break;
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 7;
        break;
    }
  }
  return result;
}

uint64_t type metadata accessor for FMDiskIO.KeyPair()
{
  return sub_21CA229E0();
}

uint64_t sub_21CA61998()
{
  return sub_21CA619AC(*v0);
}

uint64_t sub_21CA619AC(char a1)
{
  if (a1) {
    return 0x697274656D6D7973;
  }
  else {
    return 0x4B65746176697270;
  }
}

ValueMetadata *type metadata accessor for FMFSecureOrLiveLocateInProgressStatus()
{
  return &type metadata for FMFSecureOrLiveLocateInProgressStatus;
}

ValueMetadata *type metadata accessor for FMFSecureOrLiveLocateInProgress()
{
  return &type metadata for FMFSecureOrLiveLocateInProgress;
}

uint64_t sub_21CA61A10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_21CAFD9B0);
}

unsigned char *storeEnumTagSinglePayload for FMFMyLocationResponse.MyLocationCodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *__n128 result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        break;
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 2;
        break;
    }
  }
  return result;
}

uint64_t sub_21CA61AF0()
{
  if (*v0) {
    return 0xD000000000000011;
  }
  else {
    return 0x6E6F697461636F6CLL;
  }
}

ValueMetadata *type metadata accessor for FMFIntermediateFriend.CodingKeys()
{
  return &type metadata for FMFIntermediateFriend.CodingKeys;
}

ValueMetadata *type metadata accessor for FMFLocateInProgress()
{
  return &type metadata for FMFLocateInProgress;
}

uint64_t sub_21CA61B74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 56);
}

uint64_t getEnumTagSinglePayload for FMFSchedule.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFA) {
    goto LABEL_17;
  }
  if (a2 + 6 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 6) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 6;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 7;
  int v8 = v6 - 7;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

ValueMetadata *type metadata accessor for FMFFavoriteFriend()
{
  return &type metadata for FMFFavoriteFriend;
}

void sub_21CA61C1C()
{
  sub_21CA61D90(319, &qword_267C956C0, (void (*)(uint64_t))type metadata accessor for FMFSchedule);
  if (v0 <= 0x3F)
  {
    sub_21CA61D90(319, (unint64_t *)&qword_267C97000, MEMORY[0x263F07490]);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_21CA61D90(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_21CB889A0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

ValueMetadata *type metadata accessor for FriendCacheData()
{
  return &type metadata for FriendCacheData;
}

ValueMetadata *type metadata accessor for FriendCacheData.CodingKeys()
{
  return &type metadata for FriendCacheData.CodingKeys;
}

ValueMetadata *type metadata accessor for FMFPreferences.CodingKeys()
{
  return &type metadata for FMFPreferences.CodingKeys;
}

uint64_t sub_21CA61E18()
{
  return 0;
}

uint64_t sub_21CA61E20()
{
  return 1;
}

ValueMetadata *type metadata accessor for SecureFriend()
{
  return &type metadata for SecureFriend;
}

uint64_t type metadata accessor for FMImageCache()
{
  return swift_getGenericMetadata();
}

ValueMetadata *type metadata accessor for FMFFeatures.CodingKeys()
{
  return &type metadata for FMFFeatures.CodingKeys;
}

uint64_t dispatch thunk of FMFManager.locationAlerts.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 736))();
}

uint64_t sub_21CA61E8C()
{
  return sub_21CA0B570(&qword_267C94F08);
}

__n128 initializeWithCopy for FMFConfig(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  long long v4 = a2[3];
  long long v5 = a2[4];
  long long v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  long long v7 = a2[7];
  long long v8 = a2[8];
  long long v9 = a2[10];
  *(_OWORD *)(a1 + 144) = a2[9];
  *(_OWORD *)(a1 + 160) = v9;
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 128) = v8;
  __n128 result = (__n128)a2[11];
  long long v11 = a2[12];
  long long v12 = a2[14];
  *(_OWORD *)(a1 + 208) = a2[13];
  *(_OWORD *)(a1 + 224) = v12;
  *(__n128 *)(a1 + 176) = result;
  *(_OWORD *)(a1 + 192) = v11;
  return result;
}

uint64_t *sub_21CA61F60(uint64_t a1, uint64_t *a2)
{
  if ((*(_DWORD *)(*(void *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    uint64_t v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

void *sub_21CA61FC4(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_21CA03694(a1, a2, a3, a4, &qword_267C95C48, &qword_267C95C50);
}

char *sub_21CA61FD8(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    long long v5 = (char *)(a4 + 8 * a1 + 32);
    size_t v6 = 8 * v4;
    long long v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  __n128 result = (char *)sub_21CB88D50();
  __break(1u);
  return result;
}

uint64_t sub_21CA620C4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    unint64_t v6 = a4 + 8 * a1 + 32;
    unint64_t v7 = a3 + 8 * v5;
    if (v6 >= v7 || v6 + 8 * v5 <= a3)
    {
      sub_21CA57E34(a5);
      swift_arrayInitWithCopy();
      return v7;
    }
  }
  uint64_t result = sub_21CB88D50();
  __break(1u);
  return result;
}

uint64_t sub_21CA621CC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 32 * a1 + 32;
    unint64_t v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_21CB88D50();
  __break(1u);
  return result;
}

unint64_t sub_21CA622C0()
{
  unint64_t result = qword_267C96EB0;
  if (!qword_267C96EB0)
  {
    sub_21CA05908(255, &qword_267C96EA8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C96EB0);
  }
  return result;
}

uint64_t sub_21CA62328()
{
  return sub_21CA66B88(&qword_267C94BA8, type metadata accessor for FileAttributeKey);
}

unint64_t sub_21CA62370()
{
  unint64_t result = qword_267C96F60;
  if (!qword_267C96F60)
  {
    sub_21CB888B0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C96F60);
  }
  return result;
}

uint64_t sub_21CA623C8(uint64_t a1)
{
  objc_msgSend(v1, sel_setDelegate_, a1);

  return swift_unknownObjectRelease();
}

unint64_t sub_21CA62410()
{
  unint64_t result = qword_267C96F70;
  if (!qword_267C96F70)
  {
    sub_21CA5EEBC((uint64_t *)&unk_267C96F90);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C96F70);
  }
  return result;
}

uint64_t sub_21CA6246C(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_21CA5EEBC(&qword_267C94E70);
    sub_21CA5E59C(a2, (void (*)(uint64_t))type metadata accessor for FMFLabelledLocation);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_21CA62500()
{
  return sub_21CA22344(&qword_267C95B98, &qword_267C95B68, (void (*)(void))sub_21CA65198);
}

uint64_t sub_21CA6253C(uint64_t a1, uint64_t a2)
{
  return sub_21CA2DEE4(a1, a2, (uint64_t (*)(void))type metadata accessor for FMFIntermediateFriend, (uint64_t (*)(void))type metadata accessor for FMFIntermediateFriend, (uint64_t (*)(char *, char *))sub_21CA4A74C);
}

uint64_t *sub_21CA62580(uint64_t *a1)
{
  return a1;
}

ValueMetadata *type metadata accessor for FMFMyInfo()
{
  return &type metadata for FMFMyInfo;
}

unint64_t sub_21CA625CC()
{
  unint64_t result = qword_267C95D00;
  if (!qword_267C95D00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C95D00);
  }
  return result;
}

unint64_t sub_21CA62628()
{
  unint64_t result = qword_267C97C58;
  if (!qword_267C97C58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C97C58);
  }
  return result;
}

unint64_t sub_21CA6267C()
{
  unint64_t result = qword_267C97C60;
  if (!qword_267C97C60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C97C60);
  }
  return result;
}

uint64_t sub_21CA626D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_21CA57E34(&qword_267C96F10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_21CA62738(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_21CA57E34(&qword_267C96F10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void sub_21CA627A0()
{
  if (!qword_267C95018)
  {
    type metadata accessor for FMFFriend();
    unint64_t v0 = sub_21CB889A0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_267C95018);
    }
  }
}

ValueMetadata *type metadata accessor for FMFDevice()
{
  return &type metadata for FMFDevice;
}

unint64_t sub_21CA62808()
{
  unint64_t result = qword_267C94E98;
  if (!qword_267C94E98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C94E98);
  }
  return result;
}

unint64_t sub_21CA6285C()
{
  unint64_t result = qword_267C95D10;
  if (!qword_267C95D10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C95D10);
  }
  return result;
}

unint64_t sub_21CA628B8()
{
  unint64_t result = qword_267C97400;
  if (!qword_267C97400)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C97400);
  }
  return result;
}

unint64_t sub_21CA6290C()
{
  unint64_t result = qword_267C97408;
  if (!qword_267C97408)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C97408);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for FMFConfig(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)(result + 232) = 0;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 240) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 240) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 48) = a2 + 1;
    }
  }
  return result;
}

uint64_t sub_21CA629E0(void *a1)
{
  return FMFConfig.encode(to:)(a1);
}

ValueMetadata *type metadata accessor for FMFConfig()
{
  return &type metadata for FMFConfig;
}

unint64_t sub_21CA62A08()
{
  unint64_t result = qword_267C95CE8;
  if (!qword_267C95CE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C95CE8);
  }
  return result;
}

unint64_t sub_21CA62A64()
{
  unint64_t result = qword_267C95E20;
  if (!qword_267C95E20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C95E20);
  }
  return result;
}

unint64_t sub_21CA62AB8()
{
  unint64_t result = qword_267C95E28;
  if (!qword_267C95E28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C95E28);
  }
  return result;
}

unint64_t sub_21CA62B0C()
{
  unint64_t result = qword_267C95CA8;
  if (!qword_267C95CA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C95CA8);
  }
  return result;
}

unint64_t sub_21CA62B60()
{
  unint64_t result = qword_267C95D30;
  if (!qword_267C95D30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C95D30);
  }
  return result;
}

uint64_t FMFAlert.__deallocating_deinit()
{
  FMFAlert.deinit();

  return swift_deallocClassInstance();
}

void *sub_21CA62C0C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  type metadata accessor for FMFAlert();
  uint64_t v5 = swift_allocObject();
  unint64_t result = FMFAlert.init(from:)(a1);
  if (!v2) {
    *a2 = v5;
  }
  return result;
}

void sub_21CA62C68()
{
  sub_21CA66D74();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

ValueMetadata *type metadata accessor for FMFAlert.CodingKeys()
{
  return &type metadata for FMFAlert.CodingKeys;
}

unint64_t sub_21CA62D38()
{
  unint64_t result = qword_267C95488;
  if (!qword_267C95488)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C95488);
  }
  return result;
}

unint64_t sub_21CA62D8C()
{
  unint64_t result = qword_267C95490;
  if (!qword_267C95490)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C95490);
  }
  return result;
}

uint64_t type metadata accessor for FMDiskIO()
{
  return sub_21CA229E0();
}

uint64_t sub_21CA62DFC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FMDiskIO.KeyPair.init(from:)(a1, a2);
}

uint64_t sub_21CA62E20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 32);
}

uint64_t sub_21CA62E28()
{
  return swift_getWitnessTable();
}

uint64_t sub_21CA62E44()
{
  return swift_getWitnessTable();
}

uint64_t sub_21CA62E60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 24);
}

uint64_t type metadata accessor for FMDiskIO.KeyPair.CodingKeys()
{
  return sub_21CA229E0();
}

void sub_21CA62E80()
{
  sub_21CA1DB88(*(void **)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_21CA62E88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 64);
}

uint64_t type metadata accessor for AsyncChunksOfCountOrSignalSequence()
{
  return swift_getGenericMetadata();
}

uint64_t sub_21CA62EA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 48);
}

uint64_t sub_21CA62EB0()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = sub_21CA57E34(&qword_267C957E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v1, 2, 2, v2);
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_21CA62F50(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return MEMORY[0x270FA2498](sub_21CA62EB0, 0, 0);
}

uint64_t type metadata accessor for FMFServerInteractionController()
{
  uint64_t result = qword_267C97480;
  if (!qword_267C97480) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_21CA62FBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21CA219A0(a1, a2, a3, a4, &qword_267CA53A0);
}

uint64_t sub_21CA62FC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21CA219A0(a1, a2, a3, a4, &qword_267CA53A8);
}

uint64_t sub_21CA62FD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_21CA0CAC0(a1, a2, a3);
}

id sub_21CA62FF8(uint64_t a1, unint64_t a2, void *a3)
{
  return sub_21CA12354(a1, a2, a3, *(void (**)(uint64_t, void *))(v3 + 16), *(void *)(v3 + 24), *(void **)(v3 + 32));
}

void sub_21CA63004()
{
  sub_21CA12114(v0[2], v0[3], v0[4], v0[5]);
}

uint64_t sub_21CA63010()
{
  return swift_updateClassMetadata2();
}

ValueMetadata *type metadata accessor for FMFInitRefreshClientResponse.InitRefreshCodingKeys()
{
  return &type metadata for FMFInitRefreshClientResponse.InitRefreshCodingKeys;
}

unint64_t sub_21CA630AC()
{
  unint64_t result = qword_267C94F28;
  if (!qword_267C94F28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C94F28);
  }
  return result;
}

unint64_t sub_21CA63100()
{
  unint64_t result = qword_267C94F30;
  if (!qword_267C94F30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C94F30);
  }
  return result;
}

void sub_21CA63154()
{
  sub_21CA66C38();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t type metadata accessor for FMFSecureLocationController(uint64_t a1)
{
  return sub_21CA59D2C(a1, (uint64_t *)&unk_267C95700);
}

uint64_t sub_21CA63238()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *v1;
  swift_task_dealloc();
  if (v0)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v4 = *(uint64_t (**)(void))(v3 + 8);
    return v4();
  }
  else
  {
    unint64_t v6 = (void *)swift_task_alloc();
    *(void *)(v2 + 160) = v6;
    *unint64_t v6 = v3;
    v6[1] = sub_21CA9FBF4;
    return sub_21CA077C4();
  }
}

void sub_21CA63404()
{
  sub_21CA627A0();
  if (v0 <= 0x3F) {
    swift_initClassMetadata2();
  }
}

uint64_t type metadata accessor for FMSystemDirectoryUtilities()
{
  return self;
}

void sub_21CA634E0()
{
  if (!qword_267C97B58)
  {
    type metadata accessor for FMFCommandResponseFragment();
    unint64_t v0 = sub_21CB889A0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_267C97B58);
    }
  }
}

id FMLocationShiftingRequest.location.getter()
{
  return *(id *)(v0 + 16);
}

void *FMLocationShiftingRequest.init(identifier:location:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[2] = a3;
  v3[3] = a1;
  v3[4] = a2;
  return v3;
}

uint64_t sub_21CA63550()
{
  return sub_21CA04BC4(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

void sub_21CA63558()
{
  sub_21CA66C38();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t type metadata accessor for FMFContactsDataController()
{
  uint64_t result = qword_267C96FF0;
  if (!qword_267C96FF0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t type metadata accessor for FMFSystemStateController()
{
  return self;
}

void sub_21CA63694()
{
  sub_21CA188B0(v0);
}

uint64_t sub_21CA636D8()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for FMFReverseGeocodingCache()
{
  uint64_t result = qword_267C97178;
  if (!qword_267C97178) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_21CA6375C(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(void *)(a2 + 32) = *((void *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t type metadata accessor for FMReverseGeocodingCache()
{
  return sub_21CA229E0();
}

void sub_21CA6378C()
{
  sub_21CA66054();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t type metadata accessor for FMFMyLocationController()
{
  uint64_t result = qword_267C97510;
  if (!qword_267C97510) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t type metadata accessor for FMFManagerConfiguration()
{
  uint64_t result = qword_267C96C30;
  if (!qword_267C96C30) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t static FMFManagerConfiguration.default.getter()
{
  if (qword_267C94960 != -1) {
    swift_once();
  }

  return swift_retain();
}

void sub_21CA63960()
{
  sub_21CA66C38();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

ValueMetadata *type metadata accessor for FMFPendingUpdateReason()
{
  return &type metadata for FMFPendingUpdateReason;
}

void sub_21CA63A18()
{
  sub_21CA18B48(*(char **)(v0 + 16));
}

uint64_t sub_21CA63A20()
{
  return sub_21CA06994(*(void *)(v0 + 16));
}

uint64_t sub_21CA63A28()
{
  return sub_21CA0AB30((uint64_t)&unk_26CD6F4C0, (uint64_t)sub_21CA63A20, (uint64_t)&unk_26CD6F4D8);
}

uint64_t sub_21CA63A50()
{
  return sub_21CA0399C(v0[2], v0[3], v0[4], &OBJC_IVAR____TtC7FMFCore22FMAPSConnectionHandler_publicAPSToken, (uint64_t (*)(uint64_t))sub_21CA0F070);
}

uint64_t type metadata accessor for FMFPendingDataManager()
{
  return self;
}

uint64_t sub_21CA63AB0()
{
  return sub_21CA18630();
}

void *sub_21CA63AD4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  type metadata accessor for FMFMyLocationResponse();
  uint64_t v5 = swift_allocObject();
  uint64_t result = sub_21CA0F218(a1);
  if (!v2) {
    *a2 = v5;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for FMFLocationAlertAcceptanceStatus(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 2 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 2) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 2;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v8 = v6 - 3;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

ValueMetadata *type metadata accessor for FMFMyLocationResponse.MyLocationCodingKeys()
{
  return &type metadata for FMFMyLocationResponse.MyLocationCodingKeys;
}

unint64_t sub_21CA63BD4()
{
  unint64_t result = qword_267C96B70;
  if (!qword_267C96B70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C96B70);
  }
  return result;
}

unint64_t sub_21CA63C28()
{
  unint64_t result = qword_267C96B78;
  if (!qword_267C96B78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C96B78);
  }
  return result;
}

unint64_t sub_21CA63C7C()
{
  unint64_t result = qword_267C96B60;
  if (!qword_267C96B60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C96B60);
  }
  return result;
}

void sub_21CA63CD0()
{
  sub_21CA66C38();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

unint64_t sub_21CA63D9C()
{
  unint64_t result = qword_267C95180;
  if (!qword_267C95180)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C95180);
  }
  return result;
}

unint64_t sub_21CA63DF0()
{
  unint64_t result = qword_267C95188;
  if (!qword_267C95188)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C95188);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for FMFLocationAlertTarget(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = v6 - 2;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

ValueMetadata *type metadata accessor for FMFGeofenceAlertsFrom()
{
  return &type metadata for FMFGeofenceAlertsFrom;
}

uint64_t sub_21CA63EE8(uint64_t a1, uint64_t a2)
{
  return sub_21CA0F5E8(a2);
}

void sub_21CA63EF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
}

uint64_t sub_21CA63F04()
{
  return sub_21CA1974C(*(void *)(v0 + 16), *(void *)(v0 + 24), *(uint64_t (**)(uint64_t))(v0 + 32));
}

uint64_t sub_21CA63F10(uint64_t a1, void *a2)
{
  return sub_21CA0BB0C(a1, a2, *(uint64_t (**)(void))(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32));
}

void sub_21CA63F1C()
{
  sub_21CA0C1CC(v0);
}

uint64_t sub_21CA63F60()
{
  return sub_21CA06E94(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_21CA63F68()
{
  return sub_21CA63F70(v0);
}

uint64_t sub_21CA63F70(uint64_t a1)
{
  *(unsigned char *)(a1 + OBJC_IVAR____TtC7FMFCore20FMFRefreshController_isRefreshing) = 1;
  sub_21CA0D2BC();
  uint64_t v2 = *(void *)(a1 + OBJC_IVAR____TtC7FMFCore20FMFRefreshController_interactionController + 24);
  uint64_t v3 = *(void *)(a1 + OBJC_IVAR____TtC7FMFCore20FMFRefreshController_interactionController + 32);
  sub_21CA2B2CC((void *)(a1 + OBJC_IVAR____TtC7FMFCore20FMFRefreshController_interactionController), v2);
  (*(void (**)(uint64_t, uint64_t))(v3 + 56))(v2, v3);
  sub_21CA63A28();
  return sub_21CA34FE0(0.0);
}

uint64_t sub_21CA64004(uint64_t a1, void *a2)
{
  return sub_21CA0D490(a1, a2, v2);
}

uint64_t sub_21CA6400C()
{
  sub_21CA09FC4();

  return swift_deallocClassInstance();
}

uint64_t sub_21CA64060()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for FMFMyLocationRequest()
{
  uint64_t result = qword_267C97410;
  if (!qword_267C97410) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_21CA640FC(uint64_t a1)
{
  return a1;
}

uint64_t type metadata accessor for FMFActionsController()
{
  return self;
}

uint64_t FMTabInfoCurrentTab.getter()
{
  return 0x54746E6572727563;
}

unint64_t sub_21CA6416C()
{
  unint64_t result = qword_267C95AB8;
  if (!qword_267C95AB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C95AB8);
  }
  return result;
}

unint64_t sub_21CA641C0()
{
  unint64_t result = qword_267C95AB0;
  if (!qword_267C95AB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C95AB0);
  }
  return result;
}

void sub_21CA64214()
{
  uint64_t v0 = unk_26CD69470;
  if ((unk_26CD69470 & ~qword_26CD69468) == 0) {
    uint64_t v0 = 0;
  }
  qword_267C96C00 = v0 | qword_26CD69468;
}

unint64_t sub_21CA64238()
{
  unint64_t result = qword_267C94EE8;
  if (!qword_267C94EE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C94EE8);
  }
  return result;
}

ValueMetadata *type metadata accessor for FMFLocateInProgress.CodingKeys()
{
  return &type metadata for FMFLocateInProgress.CodingKeys;
}

unint64_t sub_21CA642A4()
{
  unint64_t result = qword_267C96B48;
  if (!qword_267C96B48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C96B48);
  }
  return result;
}

unint64_t sub_21CA642F8()
{
  unint64_t result = qword_267C96B50;
  if (!qword_267C96B50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C96B50);
  }
  return result;
}

void sub_21CA6434C()
{
  sub_21CA66C38();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t type metadata accessor for FMFGarbageCollector()
{
  return self;
}

uint64_t sub_21CA64420()
{
  return sub_21CA05D5C(*(void *)(v0 + 16), *(id *)(v0 + 24));
}

uint64_t sub_21CA6442C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 40);
}

uint64_t type metadata accessor for AsyncMerge2Sequence()
{
  return swift_getGenericMetadata();
}

uint64_t sub_21CA6444C()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for AsyncMerge2Sequence.Iterator.InternalClass()
{
  return swift_getGenericMetadata();
}

void sub_21CA644AC(unsigned char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  uint64_t v8 = *(void *)(a4 + 24);
  uint64_t v9 = *(void *)(v8 - 8);
  unsigned int v10 = *(_DWORD *)(v9 + 84);
  uint64_t v11 = *(unsigned __int8 *)(v9 + 80);
  if (v10 <= v7) {
    unsigned int v12 = *(_DWORD *)(v6 + 84);
  }
  else {
    unsigned int v12 = *(_DWORD *)(v9 + 84);
  }
  uint64_t v13 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64) + v11;
  size_t v14 = (v13 & ~v11) + *(void *)(*(void *)(v8 - 8) + 64);
  BOOL v15 = a3 >= v12;
  unsigned int v16 = a3 - v12;
  if (v16 != 0 && v15)
  {
    if (v14 <= 3)
    {
      unsigned int v20 = ((v16 + ~(-1 << (8 * v14))) >> (8 * v14)) + 1;
      if (HIWORD(v20))
      {
        int v17 = 4;
      }
      else if (v20 >= 0x100)
      {
        int v17 = 2;
      }
      else
      {
        int v17 = v20 > 1;
      }
    }
    else
    {
      int v17 = 1;
    }
  }
  else
  {
    int v17 = 0;
  }
  if (v12 >= a2)
  {
    switch(v17)
    {
      case 1:
        a1[v14] = 0;
        if (a2) {
          goto LABEL_24;
        }
        break;
      case 2:
        *(_WORD *)&a1[v14] = 0;
        if (a2) {
          goto LABEL_24;
        }
        break;
      case 3:
LABEL_41:
        __break(1u);
        break;
      case 4:
        *(_DWORD *)&a1[v14] = 0;
        goto LABEL_23;
      default:
LABEL_23:
        if (a2)
        {
LABEL_24:
          if (v7 >= v10)
          {
            uint64_t v24 = *(void (**)(void))(v6 + 56);
            v24();
          }
          else
          {
            unint64_t v22 = (unint64_t)&a1[v13] & ~v11;
            unint64_t v23 = *(void (**)(unint64_t))(v9 + 56);
            v23(v22);
          }
        }
        break;
    }
  }
  else
  {
    unsigned int v18 = ~v12 + a2;
    if (v14 < 4)
    {
      int v19 = (v18 >> (8 * v14)) + 1;
      if (v14)
      {
        int v21 = v18 & ~(-1 << (8 * v14));
        bzero(a1, v14);
        if (v14 == 3)
        {
          *(_WORD *)a1 = v21;
          a1[2] = BYTE2(v21);
        }
        else if (v14 == 2)
        {
          *(_WORD *)a1 = v21;
        }
        else
        {
          *a1 = v21;
        }
      }
    }
    else
    {
      bzero(a1, v14);
      *(_DWORD *)a1 = v18;
      int v19 = 1;
    }
    switch(v17)
    {
      case 1:
        a1[v14] = v19;
        break;
      case 2:
        *(_WORD *)&a1[v14] = v19;
        break;
      case 3:
        goto LABEL_41;
      case 4:
        *(_DWORD *)&a1[v14] = v19;
        break;
      default:
        return;
    }
  }
}

uint64_t type metadata accessor for AsyncChain2Sequence.Iterator()
{
  return swift_getGenericMetadata();
}

uint64_t sub_21CA64798(uint64_t a1, uint64_t a2)
{
  return sub_21CA651EC(a1, a2, (void (*)(void))sub_21CA05020);
}

uint64_t sub_21CA647B0()
{
  return swift_getWitnessTable();
}

uint64_t type metadata accessor for AsyncTimerSequence.Iterator()
{
  return sub_21CA229E0();
}

uint64_t sub_21CA647E8()
{
  *(void *)(*(void *)v1 + 128) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_21CAE9E88;
  }
  else {
    uint64_t v2 = sub_21CA067BC;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t type metadata accessor for MergeStateMachine()
{
  return swift_getGenericMetadata();
}

uint64_t sub_21CA64914(uint64_t *a1)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v3 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v4 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = ~v4;
  uint64_t v9 = v3;
  if ((*(_DWORD *)(v3 + 84) & 0x80000000) != 0)
  {
    uint64_t result = (*(uint64_t (**)(unint64_t))(v3 + 48))(((unint64_t)a1 + v4 + 8) & v5);
    if (result) {
      return result;
    }
    goto LABEL_7;
  }
  uint64_t v6 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v6) = -1;
  }
  uint64_t result = (v6 + 1);
  if (v6 == -1)
  {
LABEL_7:
    uint64_t v8 = *(uint64_t (**)(unint64_t, uint64_t))(v9 + 8);
    return v8(((unint64_t)a1 + v4 + 8) & v5, AssociatedTypeWitness);
  }
  return result;
}

uint64_t *sub_21CA64A2C(uint64_t *a1, uint64_t *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = ~v6;
  uint64_t v8 = *(void *)(v5 + 64);
  if ((*(_DWORD *)(v5 + 84) & 0x80000000) == 0)
  {
    uint64_t v9 = *a2;
    if ((unint64_t)*a2 >= 0xFFFFFFFF) {
      LODWORD(v9) = -1;
    }
    if (v9 != -1) {
      goto LABEL_5;
    }
LABEL_7:
    *a1 = *a2;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v5 + 16))(((unint64_t)a1 + v6 + 8) & v7, ((unint64_t)a2 + v6 + 8) & v7, AssociatedTypeWitness);
    return a1;
  }
  if (!(*(unsigned int (**)(unint64_t))(v5 + 48))(((unint64_t)a2 + v6 + 8) & v7)) {
    goto LABEL_7;
  }
LABEL_5:
  memcpy(a1, a2, ((v6 + 8) & ~v6) + v8);
  return a1;
}

uint64_t type metadata accessor for MergeStateMachine.ElementProducedAction()
{
  return swift_getGenericMetadata();
}

void sub_21CA64B8C(unsigned __int8 *a1, void *a2)
{
  uint64_t v4 = a2[2];
  uint64_t v3 = a2[3];
  uint64_t v36 = *(void *)(v4 - 8);
  uint64_t v5 = *(void *)(v36 + 64);
  uint64_t v6 = *(void *)(v3 - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = v5 + v7;
  uint64_t v9 = *(void *)(v6 + 64);
  uint64_t v10 = a2[4];
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned __int8 *)(v11 + 80);
  uint64_t v13 = (v9 + v12 + ((v5 + v7) & ~v7)) & ~v12;
  uint64_t v37 = v11;
  uint64_t v14 = *(void *)(v11 + 64);
  if (!*(_DWORD *)(v11 + 84)) {
    ++v14;
  }
  unint64_t v15 = v14 + v13;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v17 = *(void *)(AssociatedTypeWitness - 8);
  unint64_t v18 = *(void *)(v17 + 64);
  uint64_t v19 = 8;
  if (v18 <= 8) {
    unint64_t v18 = 8;
  }
  if (v18 + 1 > v15) {
    unint64_t v20 = v18 + 1;
  }
  else {
    unint64_t v20 = v15;
  }
  if (v20 > 8) {
    uint64_t v19 = v20;
  }
  if (v19 > 3) {
    goto LABEL_13;
  }
  unsigned int v21 = ((1 << (8 * v19)) + 1) >> (8 * v19);
  if (v21 <= 0xFFFC)
  {
    if (v21 > 0xFC)
    {
      unsigned int v22 = *(unsigned __int16 *)&a1[v19];
      unsigned int v23 = v22 - 3;
      if (v22 < 3) {
        goto LABEL_28;
      }
      goto LABEL_18;
    }
LABEL_13:
    unsigned int v22 = a1[v19];
    unsigned int v23 = v22 - 3;
    if (v22 < 3) {
      goto LABEL_28;
    }
LABEL_18:
    if (v19 <= 3) {
      uint64_t v24 = v19;
    }
    else {
      uint64_t v24 = 4;
    }
    switch(v24)
    {
      case 1:
        int v25 = *a1;
        if (v19 < 4) {
          goto LABEL_41;
        }
        goto LABEL_27;
      case 2:
        int v25 = *(unsigned __int16 *)a1;
        if (v19 < 4) {
          goto LABEL_41;
        }
        goto LABEL_27;
      case 3:
        int v25 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        if (v19 < 4) {
          goto LABEL_41;
        }
        goto LABEL_27;
      case 4:
        int v25 = *(_DWORD *)a1;
        if (v19 >= 4)
        {
LABEL_27:
          unsigned int v22 = v25 + 3;
          goto LABEL_28;
        }
LABEL_41:
        int v32 = v25 | (v23 << (8 * v19));
        unsigned int v22 = v32 + 3;
        if (v32 == -1) {
          goto LABEL_51;
        }
        goto LABEL_29;
      default:
        goto LABEL_28;
    }
  }
  unsigned int v22 = *(_DWORD *)&a1[v19];
  unsigned int v23 = v22 - 3;
  if (v22 >= 3) {
    goto LABEL_18;
  }
LABEL_28:
  if (v22 != 2)
  {
LABEL_29:
    if (v22 != 1)
    {
      if (!v22)
      {
        (*(void (**)(unsigned __int8 *, uint64_t, uint64_t))(v36 + 8))(a1, v4, v17);
        unint64_t v26 = (unint64_t)&a1[v8] & ~v7;
        (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v26, v3);
        unint64_t v27 = (v26 + v9 + v12) & ~v12;
        if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v37 + 48))(v27, 1, v10))
        {
          uint64_t v33 = *(void (**)(unint64_t, uint64_t))(v37 + 8);
          v33(v27, v10);
        }
      }
      return;
    }
    unsigned int v28 = a1[v18];
    unsigned int v29 = v28 - 2;
    if (v28 >= 2)
    {
      if (v18 <= 3) {
        uint64_t v30 = v18;
      }
      else {
        uint64_t v30 = 4;
      }
      switch(v30)
      {
        case 1:
          int v31 = *a1;
          if (v18 >= 4) {
            goto LABEL_55;
          }
          goto LABEL_49;
        case 2:
          int v31 = *(unsigned __int16 *)a1;
          if (v18 >= 4) {
            goto LABEL_55;
          }
          goto LABEL_49;
        case 3:
          int v31 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          if (v18 < 4) {
            goto LABEL_49;
          }
          goto LABEL_55;
        case 4:
          int v31 = *(_DWORD *)a1;
          if (v18 < 4)
          {
LABEL_49:
            unsigned int v28 = (v31 | (v29 << (8 * v18))) + 2;
            break;
          }
LABEL_55:
          if (v31 != -1) {
            goto LABEL_56;
          }
          goto LABEL_51;
        default:
          break;
      }
    }
    if (v28 != 1)
    {
LABEL_56:
      uint64_t v35 = *(void (**)(unsigned __int8 *, uint64_t))(v17 + 8);
      v35(a1, AssociatedTypeWitness);
      return;
    }
  }
LABEL_51:
  uint64_t v34 = *(void **)a1;
}

uint64_t type metadata accessor for MergeStateMachine.NextAction()
{
  return swift_getGenericMetadata();
}

uint64_t type metadata accessor for MergeStateMachine.State()
{
  return swift_getGenericMetadata();
}

uint64_t dispatch thunk of FMLocationShifter.shift(requests:completion:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

ValueMetadata *type metadata accessor for FMFSimpleLocation()
{
  return &type metadata for FMFSimpleLocation;
}

ValueMetadata *type metadata accessor for FMFSimpleLocation.CodingKeys()
{
  return &type metadata for FMFSimpleLocation.CodingKeys;
}

unint64_t sub_21CA6509C()
{
  unint64_t result = qword_267C950E8;
  if (!qword_267C950E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C950E8);
  }
  return result;
}

unint64_t sub_21CA650F0()
{
  unint64_t result = qword_267C950F0;
  if (!qword_267C950F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C950F0);
  }
  return result;
}

unint64_t sub_21CA65144()
{
  unint64_t result = qword_267C95B78;
  if (!qword_267C95B78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C95B78);
  }
  return result;
}

unint64_t sub_21CA65198()
{
  unint64_t result = qword_267C95BA0;
  if (!qword_267C95BA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C95BA0);
  }
  return result;
}

uint64_t sub_21CA651EC(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(a1 - 8) + 8);

  return v5(v3, a1);
}

uint64_t sub_21CA65250()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_21CA65348(uint64_t result)
{
  if (result != 1) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t type metadata accessor for AsyncSyncSequence.Iterator()
{
  return sub_21CA229E0();
}

void *sub_21CA65370@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return sub_21CA1FA74(a1, a2);
}

unint64_t sub_21CA65388()
{
  unint64_t result = qword_267C97260;
  if (!qword_267C97260)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C97260);
  }
  return result;
}

unint64_t sub_21CA653E4()
{
  unint64_t result = qword_267C95D40;
  if (!qword_267C95D40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C95D40);
  }
  return result;
}

unint64_t sub_21CA65438()
{
  unint64_t result = qword_267C95D48;
  if (!qword_267C95D48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C95D48);
  }
  return result;
}

uint64_t sub_21CA6548C@<X0>(void *a1@<X8>)
{
  return sub_21CA02F2C(*(unsigned char *)(v1 + 16), a1);
}

uint64_t sub_21CA654AC@<X0>(void *a1@<X8>)
{
  return sub_21CB4E540(a1);
}

void sub_21CA654C4()
{
  sub_21CA634E0();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t type metadata accessor for FMFBaseResponse()
{
  uint64_t result = qword_267C97B48;
  if (!qword_267C97B48) {
    return swift_getSingletonMetadata();
  }
  return result;
}

ValueMetadata *type metadata accessor for FMFBaseResponse.CodingKeys()
{
  return &type metadata for FMFBaseResponse.CodingKeys;
}

unint64_t sub_21CA655E0()
{
  unint64_t result = qword_267C97B90;
  if (!qword_267C97B90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C97B90);
  }
  return result;
}

unint64_t sub_21CA65634()
{
  unint64_t result = qword_267C97B98;
  if (!qword_267C97B98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C97B98);
  }
  return result;
}

ValueMetadata *type metadata accessor for InitialTabInfo()
{
  return &type metadata for InitialTabInfo;
}

FMFCore::InitialTabInfo __swiftcall InitialTabInfo.init(lastVisitedTimes:currentTab:timeSpent:)(Swift::OpaquePointer lastVisitedTimes, Swift::OpaquePointer currentTab, Swift::OpaquePointer timeSpent)
{
  v3->_rawValue = lastVisitedTimes._rawValue;
  v3[1]._rawValue = currentTab._rawValue;
  v3[2]._rawValue = timeSpent._rawValue;
  result.timeSpent = timeSpent;
  result.currentTab = currentTab;
  result.lastVisitedTimes = lastVisitedTimes;
  return result;
}

unint64_t sub_21CA656A8()
{
  unint64_t result = qword_267C955A8;
  if (!qword_267C955A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C955A8);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for FMFPreferences.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFB) {
    goto LABEL_17;
  }
  if (a2 + 5 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 5) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 5;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 6;
  int v8 = v6 - 6;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unint64_t sub_21CA65794()
{
  unint64_t result = qword_267C95BC8;
  if (!qword_267C95BC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C95BC8);
  }
  return result;
}

unint64_t sub_21CA657E8()
{
  unint64_t result = qword_267C95BD0;
  if (!qword_267C95BD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C95BD0);
  }
  return result;
}

uint64_t type metadata accessor for FMFDataManager()
{
  return self;
}

uint64_t sub_21CA65860(uint64_t a1)
{
  return sub_21CA353BC(a1, (uint64_t)&unk_26CD6EF10, (uint64_t)sub_21CA33094, (uint64_t)&unk_26CD6EF28);
}

void sub_21CA65888(char *a1@<X8>)
{
  sub_21CA04DA8(*(void *)(v1 + 16), *(void **)(v1 + 24), a1);
}

void sub_21CA658A4(char *a1@<X8>)
{
  sub_21CA04F80(*(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

void sub_21CA658C0()
{
  sub_21CA03354(*(void *)(v0 + 16), (uint64_t *)(v0 + 24));
}

void sub_21CA658CC()
{
  sub_21CA03FF8(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_21CA658D4(uint64_t a1)
{
  return sub_21CA353BC(a1, (uint64_t)&unk_26CD6EE70, (uint64_t)sub_21CA658CC, (uint64_t)&unk_26CD6EE88);
}

uint64_t sub_21CA658FC()
{
  return sub_21CA0CD94(*(void *)(v0 + 16));
}

uint64_t sub_21CA65904()
{
  return sub_21CA3E014(v0);
}

void sub_21CA6590C()
{
  sub_21CA05944(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_21CA65914(uint64_t a1)
{
  return sub_21CA353BC(a1, (uint64_t)&unk_26CD6EEC0, (uint64_t)sub_21CA6590C, (uint64_t)&unk_26CD6EED8);
}

void sub_21CA65940()
{
  sub_21CA05F18(*(void **)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48));
}

unint64_t sub_21CA65954()
{
  unint64_t result = qword_267C97440;
  if (!qword_267C97440)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C97440);
  }
  return result;
}

void sub_21CA659A8(uint64_t a1, char a2, uint64_t a3, uint64_t a4, unsigned __int8 *a5)
{
  type metadata accessor for FMDemoManager();
  char v11 = a2;
  if (static FMDemoManager.hasDemoModeAsset(for:)(&v11))
  {
    BOOL v7 = self;
    int v8 = (void *)sub_21CB882C0();
    uint64_t v9 = (void *)sub_21CB882C0();
    unsigned __int8 v10 = objc_msgSend(v7, sel_BOOLForKey_inDomain_, v8, v9);
  }
  else
  {
    unsigned __int8 v10 = 0;
  }
  *a5 = v10;
}

void sub_21CA65A70(uint64_t a1)
{
}

uint64_t sub_21CA65A98(void *a1, unsigned __int8 *a2)
{
  if (*a1 != -1) {
    swift_once();
  }
  return *a2;
}

uint64_t static FMDemoManager.peopleDemoEnabled.getter()
{
  return sub_21CA65A98(&qword_267C949C0, (unsigned __int8 *)&byte_267C975B8);
}

uint64_t type metadata accessor for MergeStorage()
{
  return swift_getGenericMetadata();
}

uint64_t method lookup function for FMImageCache(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for FMImageCache);
}

uint64_t sub_21CA65B2C()
{
  return swift_initClassMetadata2();
}

uint64_t dispatch thunk of FMImageCache.preload(requests:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 248))();
}

void sub_21CA65BB8()
{
  sub_21CA05980();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t type metadata accessor for FMFSchedule()
{
  uint64_t result = qword_267C94AA0;
  if (!qword_267C94AA0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for FMFLocation(uint64_t a1, uint64_t *a2, int *a3)
{
  int v4 = (void *)a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *int v4 = *a2;
    int v4 = (void *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
    *(void *)(a1 + 24) = a2[3];
    uint64_t v8 = a3[8];
    uint64_t v9 = (void *)(a1 + v8);
    unsigned __int8 v10 = (char *)a2 + v8;
    *(_WORD *)(a1 + 32) = *((_WORD *)a2 + 16);
    uint64_t v11 = sub_21CB875D0();
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      uint64_t v14 = sub_21CA57E34(&qword_267C96F00);
      memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    uint64_t v16 = a3[10];
    *((unsigned char *)v4 + a3[9]) = *((unsigned char *)a2 + a3[9]);
    *((unsigned char *)v4 + v16) = *((unsigned char *)a2 + v16);
    uint64_t v17 = a3[11];
    unint64_t v18 = (char *)v4 + v17;
    uint64_t v19 = (uint64_t *)((char *)a2 + v17);
    unint64_t v20 = (void *)v19[38];
    if (v20)
    {
      uint64_t v21 = v19[21];
      if (v21)
      {
        uint64_t v22 = v19[1];
        *(void *)unint64_t v18 = *v19;
        *((void *)v18 + 1) = v22;
        uint64_t v23 = v19[3];
        *((void *)v18 + 2) = v19[2];
        *((void *)v18 + 3) = v23;
        uint64_t v24 = v19[5];
        *((void *)v18 + 4) = v19[4];
        *((void *)v18 + 5) = v24;
        uint64_t v25 = v19[7];
        *((void *)v18 + 6) = v19[6];
        *((void *)v18 + 7) = v25;
        uint64_t v26 = v19[9];
        *((void *)v18 + 8) = v19[8];
        *((void *)v18 + 9) = v26;
        uint64_t v27 = v19[11];
        *((void *)v18 + 10) = v19[10];
        *((void *)v18 + 11) = v27;
        uint64_t v28 = v19[13];
        *((void *)v18 + 12) = v19[12];
        *((void *)v18 + 13) = v28;
        uint64_t v29 = v19[15];
        *((void *)v18 + 14) = v19[14];
        *((void *)v18 + 15) = v29;
        uint64_t v30 = v19[17];
        *((void *)v18 + 16) = v19[16];
        *((void *)v18 + 17) = v30;
        uint64_t v31 = v19[19];
        *((void *)v18 + 18) = v19[18];
        *((void *)v18 + 19) = v31;
        *((void *)v18 + 20) = v19[20];
        *((void *)v18 + 21) = v21;
        uint64_t v42 = v19[23];
        *((void *)v18 + 22) = v19[22];
        *((void *)v18 + 23) = v42;
        uint64_t v32 = v19[25];
        *((void *)v18 + 24) = v19[24];
        *((void *)v18 + 25) = v32;
        uint64_t v33 = v19[27];
        *((void *)v18 + 26) = v19[26];
        *((void *)v18 + 27) = v33;
        uint64_t v34 = v19[29];
        *((void *)v18 + 28) = v19[28];
        *((void *)v18 + 29) = v34;
        uint64_t v35 = v19[31];
        *((void *)v18 + 30) = v19[30];
        *((void *)v18 + 31) = v35;
        uint64_t v36 = v19[33];
        *((void *)v18 + 32) = v19[32];
        *((void *)v18 + 33) = v36;
        uint64_t v37 = v19[35];
        *((void *)v18 + 34) = v19[34];
        *((void *)v18 + 35) = v37;
        uint64_t v38 = v19[37];
        *((void *)v18 + 36) = v19[36];
        *((void *)v18 + 37) = v38;
        unint64_t v20 = (void *)v19[38];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        memcpy((char *)v4 + v17, v19, 0x130uLL);
      }
      *((void *)v18 + 38) = v20;
      v18[312] = *((unsigned char *)v19 + 312);
      uint64_t v39 = v19[41];
      *((void *)v18 + 40) = v19[40];
      *((void *)v18 + 41) = v39;
      *((_WORD *)v18 + 168) = *((_WORD *)v19 + 168);
      *((void *)v18 + 43) = v19[43];
      v18[352] = *((unsigned char *)v19 + 352);
      id v40 = v20;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      memcpy((char *)v4 + v17, v19, 0x161uLL);
    }
  }
  return v4;
}

void sub_21CA66054()
{
  if (!qword_267C97520)
  {
    type metadata accessor for FMFLocation();
    unint64_t v0 = sub_21CB889A0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_267C97520);
    }
  }
}

void sub_21CA660AC()
{
  sub_21CA0363C();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

ValueMetadata *type metadata accessor for FMFLocation.CodingKeys()
{
  return &type metadata for FMFLocation.CodingKeys;
}

unint64_t sub_21CA66184()
{
  unint64_t result = qword_267C95628;
  if (!qword_267C95628)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C95628);
  }
  return result;
}

unint64_t sub_21CA661D8()
{
  unint64_t result = qword_267C95630;
  if (!qword_267C95630)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C95630);
  }
  return result;
}

ValueMetadata *type metadata accessor for FMFFeatures()
{
  return &type metadata for FMFFeatures;
}

unint64_t sub_21CA6623C()
{
  unint64_t result = qword_267C95CD8;
  if (!qword_267C95CD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C95CD8);
  }
  return result;
}

unint64_t sub_21CA66298()
{
  unint64_t result = qword_267C97330;
  if (!qword_267C97330)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C97330);
  }
  return result;
}

unint64_t sub_21CA662EC()
{
  unint64_t result = qword_267C97338;
  if (!qword_267C97338)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C97338);
  }
  return result;
}

void sub_21CA66340()
{
  sub_21CA627A0();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t type metadata accessor for FMFManager()
{
  uint64_t result = qword_267C97090;
  if (!qword_267C97090) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t dispatch thunk of FMFManager.delegate.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 272))();
}

uint64_t sub_21CA664BC()
{
  return sub_21CA0D7C0(v0);
}

uint64_t sub_21CA664C4()
{
  return sub_21CA0B3B0(v0);
}

uint64_t dispatch thunk of FMFManager.startRefreshing()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 808))();
}

uint64_t sub_21CA664F8()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_21CB88100();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  int v5 = (char *)v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_21CB88150();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t result = MEMORY[0x270FA5388](v6);
  unsigned __int8 v10 = (char *)v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned char *)(v1 + 225) & 1) == 0)
  {
    v16[0] = v3;
    if (qword_267C94990 != -1) {
      swift_once();
    }
    uint64_t v11 = sub_21CB880A0();
    sub_21CA4CC18(v11, (uint64_t)qword_267CA5368);
    uint64_t v12 = sub_21CB88070();
    os_log_type_t v13 = sub_21CB88880();
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v14 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v14 = 0;
      _os_log_impl(&dword_21CA00000, v12, v13, "FMFManager: start refreshing", v14, 2u);
      MEMORY[0x21D4B6B70](v14, -1, -1);
    }

    *(unsigned char *)(v1 + 224) = 1;
    aBlock[4] = sub_21CA664C4;
    void aBlock[5] = v1;
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 1107296256;
    uint64_t aBlock[2] = sub_21CA1B084;
    uint64_t aBlock[3] = &unk_26CD6DC60;
    uint64_t v15 = _Block_copy(aBlock);
    swift_retain();
    sub_21CB88120();
    v16[1] = MEMORY[0x263F8EE78];
    sub_21CA5DEAC((unint64_t *)&qword_267C96FC0, MEMORY[0x263F8F030]);
    sub_21CA57E34((uint64_t *)&unk_267C96DD0);
    sub_21CA356BC((unint64_t *)&qword_267C96FD0, (uint64_t *)&unk_267C96DD0);
    sub_21CB88A60();
    MEMORY[0x21D4B5A20](0, v10, v5, v15);
    _Block_release(v15);
    (*(void (**)(char *, uint64_t))(v16[0] + 8))(v5, v2);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    return swift_release();
  }
  return result;
}

uint64_t dispatch thunk of FMFManager.selectedFriend.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 624))();
}

uint64_t sub_21CA66894()
{
  return sub_21CA08DD0(v0);
}

uint64_t sub_21CA6689C()
{
  return sub_21CA0BF94(v0[2], v0[3], v0[4], v0[5]);
}

unint64_t sub_21CA668A8()
{
  unint64_t result = qword_267C95A20;
  if (!qword_267C95A20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C95A20);
  }
  return result;
}

unint64_t sub_21CA668FC()
{
  unint64_t result = qword_267C95D20;
  if (!qword_267C95D20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C95D20);
  }
  return result;
}

uint64_t sub_21CA66950@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return FMFAddress.init(from:)(a1, a2);
}

unint64_t sub_21CA66968()
{
  unint64_t result = qword_267C97168;
  if (!qword_267C97168)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C97168);
  }
  return result;
}

unint64_t sub_21CA669BC()
{
  unint64_t result = qword_267C95090;
  if (!qword_267C95090)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C95090);
  }
  return result;
}

unint64_t sub_21CA66A10(uint64_t a1)
{
  unint64_t result = sub_21CA66968();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t getEnumTagSinglePayload for FMFAddress.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xED) {
    goto LABEL_17;
  }
  if (a2 + 19 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 19) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 19;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 19;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 19;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x14;
  int v8 = v6 - 20;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

ValueMetadata *type metadata accessor for FMFAddress.CodingKeys()
{
  return &type metadata for FMFAddress.CodingKeys;
}

unint64_t sub_21CA66AE0()
{
  unint64_t result = qword_267C97B28;
  if (!qword_267C97B28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C97B28);
  }
  return result;
}

unint64_t sub_21CA66B34()
{
  unint64_t result = qword_267C97B30;
  if (!qword_267C97B30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C97B30);
  }
  return result;
}

uint64_t sub_21CA66B88(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_21CA66BD0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_21CA57E34(&qword_267C95400);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_21CA66C38()
{
  if (!qword_267C97000)
  {
    sub_21CB87590();
    unint64_t v0 = sub_21CB889A0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_267C97000);
    }
  }
}

uint64_t sub_21CA66C90(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_21CA36618(a1, a2);
  }
  return a1;
}

uint64_t sub_21CA66CA4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_21CA57E34(&qword_267C95190);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_21CA66D0C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_21CA57E34(&qword_267C95190);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_21CA66D74()
{
  if (!qword_267C95478)
  {
    sub_21CB87480();
    unint64_t v0 = sub_21CB889A0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_267C95478);
    }
  }
}

uint64_t FMFSchedule.DaysOfWeek.rawValue.getter()
{
  return *(void *)v0;
}

FMFCore::FMFSchedule::DaysOfWeek __swiftcall FMFSchedule.DaysOfWeek.init(rawValue:)(FMFCore::FMFSchedule::DaysOfWeek rawValue)
{
  v1->rawValue = rawValue.rawValue;
  return rawValue;
}

void static FMFSchedule.DaysOfWeek.none.getter(void *a1@<X8>)
{
  *a1 = 0;
}

void static FMFSchedule.DaysOfWeek.sunday.getter(void *a1@<X8>)
{
  *a1 = 64;
}

void static FMFSchedule.DaysOfWeek.monday.getter(void *a1@<X8>)
{
  *a1 = 32;
}

void static FMFSchedule.DaysOfWeek.tuesday.getter(void *a1@<X8>)
{
  *a1 = 16;
}

void static FMFSchedule.DaysOfWeek.wednesday.getter(void *a1@<X8>)
{
  *a1 = 8;
}

void static FMFSchedule.DaysOfWeek.thursday.getter(void *a1@<X8>)
{
  *a1 = 4;
}

void static FMFSchedule.DaysOfWeek.friday.getter(void *a1@<X8>)
{
  *a1 = 2;
}

void static FMFSchedule.DaysOfWeek.saturday.getter(void *a1@<X8>)
{
  *a1 = 1;
}

void sub_21CA66E38()
{
  qword_267C94908 = 65;
}

void *static FMFSchedule.DaysOfWeek.weekends.getter@<X0>(void *a1@<X8>)
{
  return sub_21CA66F64(&qword_267C94900, &qword_267C94908, a1);
}

void sub_21CA66E6C()
{
  qword_267C94918 = 62;
}

void *static FMFSchedule.DaysOfWeek.weekdays.getter@<X0>(void *a1@<X8>)
{
  return sub_21CA66F64(&qword_267C94910, &qword_267C94918, a1);
}

uint64_t sub_21CA66EA0()
{
  if (qword_267C94900 != -1) {
    uint64_t result = swift_once();
  }
  uint64_t v0 = qword_267C94908;
  if (qword_267C94910 != -1) {
    uint64_t result = swift_once();
  }
  uint64_t v1 = qword_267C94918;
  if ((qword_267C94918 & ~v0) == 0) {
    uint64_t v1 = 0;
  }
  qword_267C94928 = v1 | v0;
  return result;
}

void *static FMFSchedule.DaysOfWeek.all.getter@<X0>(void *a1@<X8>)
{
  return sub_21CA66F64(&qword_267C94920, &qword_267C94928, a1);
}

void *sub_21CA66F64@<X0>(void *result@<X0>, void *a2@<X1>, void *a3@<X8>)
{
  if (*result != -1) {
    uint64_t result = (void *)swift_once();
  }
  *a3 = *a2;
  return result;
}

Swift::String __swiftcall FMFSchedule.DaysOfWeek.description()()
{
  uint64_t v0 = sub_21CB88F00();
  result._object = v1;
  result._countAndFlagsBits = v0;
  return result;
}

void *sub_21CA66FEC@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *result;
  return result;
}

void sub_21CA66FF8(void *a1@<X8>)
{
  *a1 = 0;
}

void *sub_21CA67000@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 | *result;
  return result;
}

void *sub_21CA67014@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 & *result;
  return result;
}

void *sub_21CA67028@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 ^ *result;
  return result;
}

BOOL sub_21CA6703C(void *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = *v2 & *a2;
  if (v4 != *a2) {
    *v2 |= v3;
  }
  *a1 = v3;
  return v4 != v3;
}

void *sub_21CA6706C@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *v2 & *result;
  if (v3) {
    *v2 &= ~*result;
  }
  *(void *)a2 = v3;
  *(unsigned char *)(a2 + 8) = v3 == 0;
  return result;
}

uint64_t *sub_21CA67098@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *result;
  uint64_t v4 = *v2;
  *v2 |= *result;
  uint64_t v5 = v4 & v3;
  *(void *)a2 = v5;
  *(unsigned char *)(a2 + 8) = v5 == 0;
  return result;
}

void *sub_21CA670BC(void *result)
{
  *v1 |= *result;
  return result;
}

void *sub_21CA670D0(void *result)
{
  *v1 &= *result;
  return result;
}

void *sub_21CA670E4(void *result)
{
  *v1 ^= *result;
  return result;
}

void *sub_21CA670F8@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 & ~*result;
  return result;
}

BOOL sub_21CA6710C(void *a1)
{
  return (*v1 & ~*a1) == 0;
}

BOOL sub_21CA67120(void *a1)
{
  return (*v1 & *a1) == 0;
}

BOOL sub_21CA67134()
{
  return *v0 == 0;
}

uint64_t sub_21CA67144(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return MEMORY[0x270F9E7D8](a1, a4, a2, a5, a3);
}

void *sub_21CA6715C(void *result)
{
  *v1 &= ~*result;
  return result;
}

void *sub_21CA67170@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = *result;
  *(unsigned char *)(a2 + 8) = 0;
  return result;
}

void sub_21CA67180(void *a1@<X8>)
{
  *a1 = *v1;
}

BOOL sub_21CA6718C(void *a1, void *a2)
{
  return *a1 == *a2;
}

uint64_t sub_21CA671A4(unsigned __int8 *a1, char *a2)
{
  return sub_21CA8046C(*a1, *a2);
}

uint64_t sub_21CA671B0()
{
  return sub_21CAD4B64();
}

uint64_t sub_21CA671BC()
{
  sub_21CB88380();

  return swift_bridgeObjectRelease();
}

uint64_t sub_21CA672D8()
{
  return sub_21CAD4B64();
}

uint64_t sub_21CA672E0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_21CA6B4C0();
  *a1 = result;
  return result;
}

void sub_21CA67310(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE900000000000072;
  uint64_t v3 = 0x756F487472617473;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE800000000000000;
      uint64_t v3 = 0x6E694D7472617473;
      goto LABEL_3;
    case 2:
      *a1 = 0x72756F48646E65;
      a1[1] = 0xE700000000000000;
      break;
    case 3:
      *a1 = 0x6E694D646E65;
      a1[1] = 0xE600000000000000;
      break;
    case 4:
      *a1 = 0x6557664F73796164;
      a1[1] = 0xEA00000000006B65;
      break;
    case 5:
      *a1 = 0x737961446E617073;
      a1[1] = 0xE800000000000000;
      break;
    case 6:
      *a1 = 0x7A5465636E6566;
      a1[1] = 0xE700000000000000;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

uint64_t sub_21CA67410()
{
  uint64_t result = 0x756F487472617473;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6E694D7472617473;
      break;
    case 2:
      uint64_t result = 0x72756F48646E65;
      break;
    case 3:
      uint64_t result = 0x6E694D646E65;
      break;
    case 4:
      uint64_t result = 0x6557664F73796164;
      break;
    case 5:
      uint64_t result = 0x737961446E617073;
      break;
    case 6:
      uint64_t result = 0x7A5465636E6566;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_21CA674F8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_21CA6B4C0();
  *a1 = result;
  return result;
}

void sub_21CA67520(unsigned char *a1@<X8>)
{
  *a1 = 7;
}

uint64_t sub_21CA6752C(uint64_t a1)
{
  unint64_t v2 = sub_21CA67F2C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_21CA67568(uint64_t a1)
{
  unint64_t v2 = sub_21CA67F2C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t FMFSchedule.startHour.getter()
{
  return *(void *)v0;
}

uint64_t FMFSchedule.startHour.setter(uint64_t result)
{
  *uint64_t v1 = result;
  return result;
}

uint64_t (*FMFSchedule.startHour.modify())()
{
  return nullsub_1;
}

uint64_t FMFSchedule.startMin.getter()
{
  return *(void *)(v0 + 8);
}

uint64_t FMFSchedule.startMin.setter(uint64_t result)
{
  *(void *)(v1 + 8) = result;
  return result;
}

uint64_t (*FMFSchedule.startMin.modify())()
{
  return nullsub_1;
}

uint64_t FMFSchedule.endHour.getter()
{
  return *(void *)(v0 + 16);
}

uint64_t FMFSchedule.endHour.setter(uint64_t result)
{
  *(void *)(v1 + 16) = result;
  return result;
}

uint64_t (*FMFSchedule.endHour.modify())()
{
  return nullsub_1;
}

uint64_t FMFSchedule.endMin.getter()
{
  return *(void *)(v0 + 24);
}

uint64_t FMFSchedule.endMin.setter(uint64_t result)
{
  *(void *)(v1 + 24) = result;
  return result;
}

uint64_t (*FMFSchedule.endMin.modify())()
{
  return nullsub_1;
}

void FMFSchedule.daysOfWeek.getter(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 32);
}

void *FMFSchedule.daysOfWeek.setter(void *result)
{
  *(void *)(v1 + 32) = *result;
  return result;
}

uint64_t (*FMFSchedule.daysOfWeek.modify())()
{
  return nullsub_1;
}

uint64_t FMFSchedule.spanDays.getter()
{
  return *(void *)(v0 + 40);
}

uint64_t FMFSchedule.spanDays.setter(uint64_t result)
{
  *(void *)(v1 + 40) = result;
  return result;
}

uint64_t (*FMFSchedule.spanDays.modify())()
{
  return nullsub_1;
}

uint64_t FMFSchedule.timeZone.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for FMFSchedule() + 40);

  return sub_21CA67710(v3, a1);
}

uint64_t sub_21CA67710(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_21CA57E34(&qword_267C94A48);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t FMFSchedule.timeZone.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for FMFSchedule() + 40);

  return sub_21CA677BC(a1, v3);
}

uint64_t sub_21CA677BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_21CA57E34(&qword_267C94A48);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t (*FMFSchedule.timeZone.modify())(void, double)
{
  return nullsub_1;
}

uint64_t FMFSchedule.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_21CA57E34(&qword_267C94A48);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = a1 + *(int *)(type metadata accessor for FMFSchedule() + 40);
  uint64_t v6 = sub_21CB876F0();
  BOOL v7 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);
  v7(v5, 1, 1, v6);
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  *(_OWORD *)(a1 + 16) = xmmword_21CB89E50;
  if (qword_267C94920 != -1) {
    swift_once();
  }
  *(void *)(a1 + 32) = qword_267C94928;
  *(void *)(a1 + 40) = 0;
  sub_21CB876E0();
  v7((uint64_t)v4, 0, 1, v6);
  return sub_21CA677BC((uint64_t)v4, v5);
}

uint64_t FMFSchedule.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v41 = a2;
  uint64_t v4 = sub_21CA57E34(&qword_267C94A48);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_21CA57E34(&qword_267C94A50);
  uint64_t v42 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for FMFSchedule();
  uint64_t v11 = MEMORY[0x270FA5388](v10 - 8);
  os_log_type_t v13 = (void *)((char *)v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v14 = ((char *)v13 + *(int *)(v11 + 48));
  uint64_t v15 = sub_21CB876F0();
  uint64_t v16 = *(void (**)(NSObject *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56);
  uint64_t v43 = v14;
  v16(v14, 1, 1, v15);
  sub_21CA2B2CC(a1, a1[3]);
  sub_21CA67F2C();
  sub_21CB890B0();
  if (v2)
  {
    unint64_t v20 = v43;
    sub_21CA2B0D0((uint64_t)a1);
    return sub_21CA1B88C((uint64_t)v20, &qword_267C94A48);
  }
  else
  {
    id v40 = v13;
    uint64_t v17 = v42;
    LOBYTE(v45) = 0;
    uint64_t v18 = sub_21CB88E10();
    uint64_t v19 = v7;
    uint64_t v22 = v40;
    uint64_t *v40 = v18;
    LOBYTE(v45) = 1;
    uint64_t v23 = v9;
    uint64_t v24 = (uint64_t)a1;
    v22[1] = sub_21CB88E10();
    LOBYTE(v45) = 2;
    uint64_t v25 = v22;
    void v22[2] = sub_21CB88E10();
    LOBYTE(v45) = 3;
    uint64_t v26 = sub_21CB88E10();
    uint64_t v27 = v43;
    v25[3] = v26;
    LOBYTE(v45) = 5;
    v25[5] = sub_21CB88E10();
    LOBYTE(v45) = 4;
    v25[4] = sub_21CB88E10();
    LOBYTE(v45) = 6;
    sub_21CB88DE0();
    uint64_t v39 = v19;
    sub_21CB876A0();
    swift_bridgeObjectRelease();
    sub_21CA677BC((uint64_t)v6, (uint64_t)v27);
    uint64_t v28 = FMFSchedule.debugDescription.getter();
    unint64_t v30 = v29;
    if (qword_267C94990 != -1) {
      swift_once();
    }
    uint64_t v31 = sub_21CB880A0();
    sub_21CA4CC18(v31, (uint64_t)qword_267CA5368);
    swift_bridgeObjectRetain();
    uint64_t v32 = sub_21CB88070();
    os_log_type_t v33 = sub_21CB88880();
    uint64_t v43 = v32;
    if (os_log_type_enabled(v32, v33))
    {
      uint64_t v34 = (uint8_t *)swift_slowAlloc();
      uint64_t v35 = swift_slowAlloc();
      uint64_t v45 = v35;
      *(_DWORD *)uint64_t v34 = 136315138;
      v38[1] = v34 + 4;
      swift_bridgeObjectRetain();
      uint64_t v44 = sub_21CA4E450(v28, v30, &v45);
      sub_21CB889C0();
      swift_bridgeObjectRelease_n();
      uint64_t v36 = v43;
      _os_log_impl(&dword_21CA00000, v43, v33, "FMFCore.FMFSchedule: initialized with coder %s", v34, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x21D4B6B70](v35, -1, -1);
      uint64_t v37 = v34;
      uint64_t v25 = v40;
      MEMORY[0x21D4B6B70](v37, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }
    (*(void (**)(char *, uint64_t))(v17 + 8))(v23, v39);
    sub_21CA696A4((uint64_t)v25, v41);
    sub_21CA2B0D0(v24);
    return sub_21CA69708((uint64_t)v25);
  }
}

{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t result;
  id v16;
  uint64_t v17;
  void (*v18)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;

  uint64_t v4 = sub_21CA57E34(&qword_267C94A48);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for FMFSchedule();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v11 = (uint64_t *)((char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = (uint64_t)v11 + *(int *)(v9 + 40);
  os_log_type_t v13 = sub_21CB876F0();
  uint64_t v14 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
  v14(v12, 1, 1, v13);
  if (a1)
  {
    uint64_t result = (uint64_t)objc_msgSend(a1, sel_startHour);
    if (result < 0)
    {
      __break(1u);
    }
    else
    {
      *uint64_t v11 = result;
      uint64_t result = (uint64_t)objc_msgSend(a1, sel_startMin);
      if ((result & 0x8000000000000000) == 0)
      {
        v11[1] = result;
        uint64_t result = (uint64_t)objc_msgSend(a1, sel_endHour);
        if ((result & 0x8000000000000000) == 0)
        {
          void v11[2] = result;
          uint64_t result = (uint64_t)objc_msgSend(a1, sel_endMin);
          if ((result & 0x8000000000000000) == 0)
          {
            v11[3] = result;
            v11[4] = (uint64_t)objc_msgSend(a1, sel_daysOfWeek);
            uint64_t result = (uint64_t)objc_msgSend(a1, sel_spanDays);
            if ((result & 0x8000000000000000) == 0)
            {
              v11[5] = result;
              uint64_t v16 = objc_msgSend(a1, sel_timeZone);
              uint64_t v22 = v7;
              uint64_t v17 = v12;
              uint64_t v18 = v14;
              uint64_t v19 = a2;
              unint64_t v20 = v16;
              sub_21CB876D0();

              v18((uint64_t)v6, 0, 1, v13);
              sub_21CA677BC((uint64_t)v6, v17);
              sub_21CA696A4((uint64_t)v11, v19);
              (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v8 + 56))(v19, 0, 1, v22);
              return sub_21CA69708((uint64_t)v11);
            }
            goto LABEL_14;
          }
LABEL_13:
          __break(1u);
LABEL_14:
          __break(1u);
          return result;
        }
LABEL_12:
        __break(1u);
        goto LABEL_13;
      }
    }
    __break(1u);
    goto LABEL_12;
  }
  sub_21CA1B88C(v12, &qword_267C94A48);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(a2, 1, 1, v7);
}

unint64_t sub_21CA67F2C()
{
  unint64_t result = qword_267C94A58;
  if (!qword_267C94A58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C94A58);
  }
  return result;
}

uint64_t FMFSchedule.debugDescription.getter()
{
  uint64_t v1 = sub_21CA57E34(&qword_267C94A48);
  MEMORY[0x270FA5388](v1);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = 0;
  unint64_t v11 = 0xE000000000000000;
  sub_21CB88B70();
  sub_21CB883D0();
  sub_21CB883D0();
  sub_21CB883D0();
  uint64_t v9 = *v0;
  sub_21CB88F00();
  sub_21CB883D0();
  swift_bridgeObjectRelease();
  sub_21CB883D0();
  uint64_t v9 = v0[1];
  sub_21CB88F00();
  sub_21CB883D0();
  swift_bridgeObjectRelease();
  sub_21CB883D0();
  uint64_t v9 = v0[2];
  sub_21CB88F00();
  sub_21CB883D0();
  swift_bridgeObjectRelease();
  sub_21CB883D0();
  uint64_t v9 = v0[3];
  sub_21CB88F00();
  sub_21CB883D0();
  swift_bridgeObjectRelease();
  uint64_t v5 = v10;
  unint64_t v4 = v11;
  uint64_t v10 = 0;
  unint64_t v11 = 0xE000000000000000;
  sub_21CB88B70();
  sub_21CB883D0();
  uint64_t v9 = v0[4];
  sub_21CB88CA0();
  sub_21CB883D0();
  uint64_t v9 = v0[5];
  sub_21CB88F00();
  sub_21CB883D0();
  swift_bridgeObjectRelease();
  sub_21CB883D0();
  uint64_t v6 = type metadata accessor for FMFSchedule();
  sub_21CA67710((uint64_t)v0 + *(int *)(v6 + 40), (uint64_t)v3);
  sub_21CB88310();
  sub_21CB883D0();
  swift_bridgeObjectRelease();
  sub_21CB883D0();
  uint64_t v10 = v5;
  unint64_t v11 = v4;
  swift_bridgeObjectRetain();
  sub_21CB883D0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t FMFSchedule.init(fmlSchedule:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = sub_21CB87BD0();
  uint64_t v48 = *(void *)(v4 - 8);
  uint64_t v49 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v42 = (char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_21CA57E34(&qword_267C94A48);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_21CB87970();
  unint64_t v46 = *(void *)(v9 - 8);
  uint64_t v47 = (uint64_t *)v9;
  MEMORY[0x270FA5388](v9);
  unint64_t v11 = (char *)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_21CB87C10();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v50 = (char *)&v41 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v41 - v16;
  uint64_t v18 = (uint64_t)a2 + *(int *)(type metadata accessor for FMFSchedule() + 40);
  uint64_t v19 = sub_21CB876F0();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v44 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 56);
  uint64_t v45 = v18;
  uint64_t v43 = v20 + 56;
  v44(v18, 1, 1, v19);
  sub_21CB87BB0();
  uint64_t v21 = sub_21CB87BF0();
  uint64_t v22 = *(uint64_t (**)(char *, uint64_t))(v13 + 8);
  uint64_t result = v22(v17, v12);
  if (v21 < 0)
  {
    __break(1u);
    goto LABEL_14;
  }
  *a2 = v21;
  sub_21CB87BB0();
  uint64_t v24 = sub_21CB87C00();
  uint64_t result = v22(v17, v12);
  if (v24 < 0)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  a2[1] = v24;
  sub_21CB87B90();
  uint64_t v25 = sub_21CB87BF0();
  uint64_t result = v22(v17, v12);
  if (v25 < 0)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  a2[2] = v25;
  sub_21CB87B90();
  uint64_t v26 = sub_21CB87C00();
  uint64_t result = v22(v17, v12);
  if ((v26 & 0x8000000000000000) == 0)
  {
    a2[3] = v26;
    sub_21CB87B80();
    unsigned __int8 v27 = sub_21CB87960();
    (*(void (**)(char *, uint64_t *))(v46 + 8))(v11, v47);
    a2[4] = v27;
    sub_21CB87BC0();
    v44((uint64_t)v8, 0, 1, v19);
    sub_21CA677BC((uint64_t)v8, v45);
    sub_21CB87B90();
    unint64_t v28 = sub_21CB87BF0();
    v22(v17, v12);
    unint64_t v29 = v50;
    sub_21CB87BB0();
    unint64_t v30 = sub_21CB87BF0();
    v22(v29, v12);
    if (v28 < v30)
    {
      uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v48 + 8))(a1, v49);
      uint64_t v31 = 1;
LABEL_12:
      a2[5] = v31;
      return result;
    }
    uint64_t v47 = a2;
    sub_21CB87B90();
    uint64_t v32 = sub_21CB87BF0();
    v22(v17, v12);
    sub_21CB87BB0();
    uint64_t v33 = sub_21CB87BF0();
    v22(v29, v12);
    uint64_t v34 = v48;
    uint64_t v35 = v49;
    uint64_t v36 = v42;
    (*(void (**)(char *, uint64_t, uint64_t))(v48 + 16))(v42, a1, v49);
    if (v32 == v33)
    {
      sub_21CB87B90();
      unint64_t v46 = sub_21CB87C00();
      v22(v17, v12);
      uint64_t v37 = v50;
      sub_21CB87BB0();
      unint64_t v38 = sub_21CB87C00();
      uint64_t v39 = *(void (**)(uint64_t, uint64_t))(v34 + 8);
      v39(a1, v35);
      v22(v37, v12);
      uint64_t result = ((uint64_t (*)(char *, uint64_t))v39)(v36, v35);
      a2 = v47;
      if (v46 < v38)
      {
        uint64_t v31 = 1;
        goto LABEL_12;
      }
    }
    else
    {
      id v40 = *(void (**)(uint64_t, uint64_t))(v34 + 8);
      v40(a1, v35);
      uint64_t result = ((uint64_t (*)(char *, uint64_t))v40)(v36, v35);
      a2 = v47;
    }
    uint64_t v31 = 0;
    goto LABEL_12;
  }
LABEL_16:
  __break(1u);
  return result;
}

uint64_t sub_21CA6888C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v49 = a1;
  uint64_t v2 = sub_21CB87970();
  uint64_t v50 = *(void *)(v2 - 8);
  uint64_t v51 = v2;
  MEMORY[0x270FA5388](v2);
  uint64_t v48 = (char *)v40 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v47 = (char *)v40 - v5;
  uint64_t v6 = sub_21CB87C10();
  uint64_t v45 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  unint64_t v11 = (char *)v40 - v10;
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)v40 - v13;
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (char *)v40 - v16;
  uint64_t v18 = sub_21CA57E34(&qword_267C94A48);
  MEMORY[0x270FA5388](v18 - 8);
  uint64_t v20 = (char *)v40 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_21CB876F0();
  uint64_t v22 = *(void *)(v21 - 8);
  MEMORY[0x270FA5388](v21);
  uint64_t v43 = (char *)v40 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v24);
  uint64_t v26 = (char *)v40 - v25;
  uint64_t v27 = type metadata accessor for FMFSchedule();
  sub_21CA67710((uint64_t)v1 + *(int *)(v27 + 40), (uint64_t)v20);
  int v28 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21);
  uint64_t v46 = v22;
  uint64_t v44 = v26;
  if (v28 == 1)
  {
    sub_21CB876E0();
    sub_21CA1B88C((uint64_t)v20, &qword_267C94A48);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v26, v20, v21);
  }
  if ((*v1 & 0x8000000000000000) != 0
    || (v1[1] & 0x8000000000000000) != 0
    || (sub_21CB87BE0(), (v1[2] & 0x8000000000000000) != 0)
    || (v1[3] & 0x8000000000000000) != 0
    || (sub_21CB87BE0(), unint64_t v29 = v1[4], (v29 & 0x8000000000000000) != 0)
    || v29 >= 0x100)
  {
    while (1)
    {
      sub_21CB88CF0();
      __break(1u);
    }
  }
  uint64_t v30 = v21;
  uint64_t v31 = v47;
  sub_21CB87950();
  uint64_t v32 = v45;
  uint64_t v33 = *(void (**)(char *, char *, uint64_t))(v45 + 16);
  v33(v11, v17, v6);
  v40[1] = v11;
  v40[2] = v8;
  uint64_t v41 = v14;
  uint64_t v42 = v17;
  v33(v8, v14, v6);
  uint64_t v35 = v50;
  uint64_t v34 = v51;
  (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v48, v31, v51);
  uint64_t v36 = v46;
  uint64_t v37 = v44;
  (*(void (**)(char *, char *, uint64_t))(v46 + 16))(v43, v44, v30);
  sub_21CB87BA0();
  (*(void (**)(char *, uint64_t))(v35 + 8))(v31, v34);
  unint64_t v38 = *(void (**)(char *, uint64_t))(v32 + 8);
  v38(v41, v6);
  v38(v42, v6);
  return (*(uint64_t (**)(char *, uint64_t))(v36 + 8))(v37, v30);
}

uint64_t sub_21CA69060()
{
  uint64_t v1 = sub_21CA57E34(&qword_267C94A48);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_21CB876F0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F3BA78]), sel_init);
  if ((*v0 & 0x8000000000000000) != 0
    || (uint64_t v9 = v8, objc_msgSend(v8, sel_setStartHour_), (v0[1] & 0x8000000000000000) != 0)
    || (objc_msgSend(v9, sel_setStartMin_), (v0[2] & 0x8000000000000000) != 0)
    || (objc_msgSend(v9, sel_setEndHour_), (v0[3] & 0x8000000000000000) != 0)
    || (objc_msgSend(v9, sel_setEndMin_),
        objc_msgSend(v9, sel_setDaysOfWeek_, v0[4]),
        (v0[5] & 0x8000000000000000) != 0))
  {
    uint64_t result = sub_21CB88CF0();
    __break(1u);
  }
  else
  {
    objc_msgSend(v9, sel_setSpanDays_);
    uint64_t v10 = type metadata accessor for FMFSchedule();
    sub_21CA67710((uint64_t)v0 + *(int *)(v10 + 40), (uint64_t)v3);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
    {
      sub_21CA1B88C((uint64_t)v3, &qword_267C94A48);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v3, v4);
      unint64_t v11 = (void *)sub_21CB876C0();
      objc_msgSend(v9, sel_setTimeZone_, v11);

      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    }
    return (uint64_t)v9;
  }
  return result;
}

uint64_t FMFSchedule.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_21CA57E34(&qword_267C94A48);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_21CA57E34((uint64_t *)&unk_267C94A60);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  unint64_t v11 = (char *)v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21CA2B2CC(a1, a1[3]);
  sub_21CA67F2C();
  sub_21CB890C0();
  LOBYTE(v19[0]) = 0;
  sub_21CB88EA0();
  if (!v2)
  {
    LOBYTE(v19[0]) = 1;
    sub_21CB88EA0();
    LOBYTE(v19[0]) = 2;
    sub_21CB88EA0();
    LOBYTE(v19[0]) = 3;
    sub_21CB88EA0();
    LOBYTE(v19[0]) = 4;
    sub_21CB88EA0();
    LOBYTE(v19[0]) = 5;
    sub_21CB88EA0();
    uint64_t v12 = type metadata accessor for FMFSchedule();
    sub_21CA67710(v3 + *(int *)(v12 + 40), (uint64_t)v7);
    uint64_t v13 = sub_21CB876F0();
    uint64_t v14 = *(void *)(v13 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v7, 1, v13) == 1)
    {
      sub_21CA1B88C((uint64_t)v7, &qword_267C94A48);
      uint64_t v15 = 0;
      uint64_t v16 = 0;
    }
    else
    {
      uint64_t v15 = sub_21CB876B0();
      uint64_t v16 = v17;
      (*(void (**)(char *, uint64_t))(v14 + 8))(v7, v13);
    }
    v19[0] = v15;
    v19[1] = v16;
    char v20 = 6;
    sub_21CA57E34((uint64_t *)&unk_267C95220);
    sub_21CA22404();
    sub_21CB88EB0();
    swift_bridgeObjectRelease();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t sub_21CA69658@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FMFSchedule.init(from:)(a1, a2);
}

uint64_t sub_21CA69670(void *a1)
{
  return FMFSchedule.encode(to:)(a1);
}

uint64_t sub_21CA69690()
{
  return swift_slowAlloc();
}

void sub_21CA69698()
{
}

uint64_t sub_21CA696A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FMFSchedule();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_21CA69708(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for FMFSchedule();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

_DWORD *sub_21CA69764@<X0>(_DWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_DWORD *)a2 = *result;
  *(unsigned char *)(a2 + 4) = 0;
  return result;
}

void sub_21CA69774(_DWORD *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t sub_21CA69780(uint64_t a1, uint64_t a2)
{
  return sub_21CA69F54(a1, a2, MEMORY[0x263F07B58]);
}

uint64_t sub_21CA697A4(uint64_t a1, id *a2)
{
  uint64_t result = sub_21CB882D0();
  *a2 = 0;
  return result;
}

uint64_t sub_21CA6981C(uint64_t a1, id *a2)
{
  char v3 = sub_21CB882E0();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_21CA6989C@<X0>(uint64_t *a1@<X8>)
{
  sub_21CB882F0();
  uint64_t v2 = sub_21CB882C0();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_21CA698E0(uint64_t a1, uint64_t a2)
{
  return sub_21CA69F54(a1, a2, MEMORY[0x263F8D308]);
}

id sub_21CA698FC()
{
  return *v0;
}

uint64_t sub_21CA69904@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t sub_21CA6990C(uint64_t a1)
{
  uint64_t v2 = sub_21CA66B88(&qword_267C94B68, type metadata accessor for SecureLocationsStewieError);

  return MEMORY[0x270EF2670](a1, v2);
}

uint64_t sub_21CA69978(uint64_t a1)
{
  uint64_t v2 = sub_21CA66B88(&qword_267C94B68, type metadata accessor for SecureLocationsStewieError);

  return MEMORY[0x270EF2668](a1, v2);
}

uint64_t sub_21CA699E8(uint64_t a1)
{
  uint64_t v2 = sub_21CA66B88(&qword_267C94BA0, type metadata accessor for SecureLocationsStewieError);

  return MEMORY[0x270EEF788](a1, v2);
}

uint64_t sub_21CA69A54()
{
  return sub_21CB882F0();
}

uint64_t sub_21CA69A64(uint64_t a1)
{
  uint64_t v2 = sub_21CA66B88(&qword_267C94BA0, type metadata accessor for SecureLocationsStewieError);

  return MEMORY[0x270EEF7E8](a1, v2);
}

uint64_t sub_21CA69AD0(uint64_t a1)
{
  uint64_t v2 = sub_21CA66B88(&qword_267C94BA0, type metadata accessor for SecureLocationsStewieError);

  return MEMORY[0x270EEF7A0](a1, v2);
}

uint64_t sub_21CA69B3C(void *a1, uint64_t a2)
{
  uint64_t v4 = sub_21CA66B88(&qword_267C94BA0, type metadata accessor for SecureLocationsStewieError);
  id v5 = a1;

  return MEMORY[0x270EEF790](v5, a2, v4);
}

uint64_t sub_21CA69BCC()
{
  id v1 = *v0;
  uint64_t v2 = sub_21CB88980();

  return v2;
}

uint64_t sub_21CA69C04(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_21CA66B88(&qword_267C94BA0, type metadata accessor for SecureLocationsStewieError);

  return MEMORY[0x270EEF7D0](a1, a2, v4);
}

uint64_t sub_21CA69C80()
{
  return sub_21CB89090();
}

uint64_t sub_21CA69CE4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_21CB882F0();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_21CA69D10(uint64_t a1)
{
  uint64_t v2 = sub_21CA66B88(&qword_267C94BC0, type metadata accessor for FileAttributeKey);
  uint64_t v3 = sub_21CA66B88(&qword_267C94BC8, type metadata accessor for FileAttributeKey);
  uint64_t v4 = MEMORY[0x263F8D320];

  return MEMORY[0x270F9F1A8](a1, v2, v3, v4);
}

uint64_t sub_21CA69DCC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_21CB882C0();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_21CA69E14(uint64_t a1)
{
  uint64_t v2 = sub_21CA66B88(&qword_267C94BB0, type metadata accessor for FileProtectionType);
  uint64_t v3 = sub_21CA66B88(&qword_267C94BB8, type metadata accessor for FileProtectionType);
  uint64_t v4 = MEMORY[0x263F8D320];

  return MEMORY[0x270F9F1A8](a1, v2, v3, v4);
}

uint64_t sub_21CA69ED0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_21CA66B88(&qword_267C94BA0, type metadata accessor for SecureLocationsStewieError);

  return MEMORY[0x270EEF7B8](a1, a2, a3, v6);
}

uint64_t sub_21CA69F54(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4 = sub_21CB882F0();
  uint64_t v5 = a3(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_21CA69F98()
{
  sub_21CB882F0();
  sub_21CB88380();

  return swift_bridgeObjectRelease();
}

uint64_t sub_21CA69FEC(uint64_t result, unsigned char **a2)
{
  uint64_t v2 = *a2;
  *uint64_t v2 = result;
  *a2 = v2 + 1;
  return result;
}

uint64_t sub_21CA69FFC(uint64_t (**a1)(uint64_t, uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*a1)(a2, a3, a4);
}

uint64_t sub_21CA6A038(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_21CA6A060(uint64_t *a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(void))
{
  uint64_t v6 = a4();
  sub_21CA4E450(v6, v7, a3);
  uint64_t v8 = *a1 + 8;
  sub_21CB889C0();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v8;
  return result;
}

unsigned char **sub_21CA6A0D8(unsigned char **result, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4 = *result;
  *uint64_t v4 = a4;
  *uint64_t result = v4 + 1;
  return result;
}

uint64_t _s7FMFCore11FMFScheduleV2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = sub_21CB876F0();
  uint64_t v76 = *(void *)(v4 - 8);
  uint64_t v77 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v71 = (char *)&v70 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_21CA57E34(&qword_267C94A48);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v72 = (uint64_t)&v70 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v74 = sub_21CA57E34(&qword_267C94AF8);
  MEMORY[0x270FA5388](v74);
  uint64_t v75 = (uint64_t)&v70 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v73 = type metadata accessor for FMFSchedule();
  uint64_t v9 = MEMORY[0x270FA5388](v73);
  uint64_t v82 = (uint64_t)&v70 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v83 = (char *)&v70 - v12;
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v81 = (uint64_t)&v70 - v14;
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v80 = (char *)&v70 - v16;
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  uint64_t v79 = (uint64_t)&v70 - v18;
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  uint64_t v78 = (char *)&v70 - v20;
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  uint64_t v23 = (char *)&v70 - v22;
  uint64_t v24 = MEMORY[0x270FA5388](v21);
  uint64_t v26 = (char *)&v70 - v25;
  uint64_t v27 = MEMORY[0x270FA5388](v24);
  unint64_t v29 = (char *)&v70 - v28;
  uint64_t v30 = MEMORY[0x270FA5388](v27);
  uint64_t v32 = (char *)&v70 - v31;
  uint64_t v33 = MEMORY[0x270FA5388](v30);
  uint64_t v35 = (char *)&v70 - v34;
  MEMORY[0x270FA5388](v33);
  uint64_t v37 = (char *)&v70 - v36;
  uint64_t v38 = *a1;
  uint64_t v39 = *a2;
  sub_21CA696A4((uint64_t)a1, (uint64_t)&v70 - v36);
  sub_21CA696A4((uint64_t)a2, (uint64_t)v35);
  if (v38 != v39)
  {
    sub_21CA69708((uint64_t)v35);
    sub_21CA69708((uint64_t)v37);
    sub_21CA696A4((uint64_t)a1, (uint64_t)v32);
    sub_21CA696A4((uint64_t)a2, (uint64_t)v29);
    goto LABEL_11;
  }
  uint64_t v40 = *((void *)v37 + 1);
  sub_21CA69708((uint64_t)v37);
  uint64_t v41 = *((void *)v35 + 1);
  sub_21CA69708((uint64_t)v35);
  sub_21CA696A4((uint64_t)a1, (uint64_t)v32);
  sub_21CA696A4((uint64_t)a2, (uint64_t)v29);
  if (v40 != v41)
  {
LABEL_11:
    sub_21CA69708((uint64_t)v29);
    sub_21CA69708((uint64_t)v32);
    sub_21CA696A4((uint64_t)a1, (uint64_t)v26);
    sub_21CA696A4((uint64_t)a2, (uint64_t)v23);
    uint64_t v44 = (uint64_t)v78;
    goto LABEL_12;
  }
  uint64_t v42 = *((void *)v32 + 2);
  sub_21CA69708((uint64_t)v32);
  uint64_t v43 = *((void *)v29 + 2);
  sub_21CA69708((uint64_t)v29);
  sub_21CA696A4((uint64_t)a1, (uint64_t)v26);
  sub_21CA696A4((uint64_t)a2, (uint64_t)v23);
  uint64_t v44 = (uint64_t)v78;
  if (v42 != v43)
  {
LABEL_12:
    sub_21CA69708((uint64_t)v23);
    sub_21CA69708((uint64_t)v26);
    sub_21CA696A4((uint64_t)a1, v44);
    uint64_t v47 = v79;
    sub_21CA696A4((uint64_t)a2, v79);
    uint64_t v48 = (uint64_t)v80;
    goto LABEL_13;
  }
  uint64_t v45 = *((void *)v26 + 3);
  sub_21CA69708((uint64_t)v26);
  uint64_t v46 = *((void *)v23 + 3);
  sub_21CA69708((uint64_t)v23);
  sub_21CA696A4((uint64_t)a1, v44);
  uint64_t v47 = v79;
  sub_21CA696A4((uint64_t)a2, v79);
  uint64_t v48 = (uint64_t)v80;
  if (v45 != v46)
  {
LABEL_13:
    sub_21CA69708(v47);
    sub_21CA69708(v44);
    sub_21CA696A4((uint64_t)a1, v48);
    uint64_t v51 = v81;
    sub_21CA696A4((uint64_t)a2, v81);
    uint64_t v52 = (uint64_t)v83;
    goto LABEL_14;
  }
  uint64_t v49 = *(void *)(v44 + 32);
  uint64_t v50 = *(void *)(v47 + 32);
  sub_21CA69708(v47);
  sub_21CA69708(v44);
  sub_21CA696A4((uint64_t)a1, v48);
  uint64_t v51 = v81;
  sub_21CA696A4((uint64_t)a2, v81);
  uint64_t v52 = (uint64_t)v83;
  if (v49 != v50)
  {
LABEL_14:
    sub_21CA69708(v51);
    sub_21CA69708(v48);
    sub_21CA696A4((uint64_t)a1, v52);
    uint64_t v65 = (uint64_t)a2;
    uint64_t v56 = v82;
    sub_21CA696A4(v65, v82);
    goto LABEL_15;
  }
  uint64_t v53 = *(void *)(v48 + 40);
  sub_21CA69708(v48);
  uint64_t v54 = *(void *)(v51 + 40);
  sub_21CA69708(v51);
  sub_21CA696A4((uint64_t)a1, v52);
  uint64_t v55 = (uint64_t)a2;
  uint64_t v56 = v82;
  sub_21CA696A4(v55, v82);
  if (v53 != v54)
  {
LABEL_15:
    sub_21CA69708(v56);
    sub_21CA69708(v52);
LABEL_16:
    char v64 = 0;
    return v64 & 1;
  }
  uint64_t v57 = *(int *)(v73 + 40);
  uint64_t v58 = v56 + v57;
  uint64_t v59 = v75;
  uint64_t v60 = v75 + *(int *)(v74 + 48);
  sub_21CA67710(v52 + v57, v75);
  sub_21CA67710(v58, v60);
  uint64_t v62 = v76;
  uint64_t v61 = v77;
  uint64_t v63 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v76 + 48);
  if (v63(v59, 1, v77) != 1)
  {
    uint64_t v67 = v72;
    sub_21CA67710(v59, v72);
    if (v63(v60, 1, v61) != 1)
    {
      uint64_t v68 = v71;
      (*(void (**)(char *, uint64_t, uint64_t))(v62 + 32))(v71, v60, v61);
      sub_21CA66B88(&qword_267C94B00, MEMORY[0x263F079C8]);
      char v64 = sub_21CB882B0();
      uint64_t v69 = *(void (**)(char *, uint64_t))(v62 + 8);
      v69(v68, v61);
      sub_21CA69708(v56);
      sub_21CA69708(v52);
      v69((char *)v67, v61);
      sub_21CA1B88C(v59, &qword_267C94A48);
      return v64 & 1;
    }
    sub_21CA69708(v56);
    sub_21CA69708(v52);
    (*(void (**)(uint64_t, uint64_t))(v62 + 8))(v67, v61);
    goto LABEL_20;
  }
  sub_21CA69708(v56);
  sub_21CA69708(v52);
  if (v63(v60, 1, v61) != 1)
  {
LABEL_20:
    sub_21CA1B88C(v59, &qword_267C94AF8);
    goto LABEL_16;
  }
  sub_21CA1B88C(v59, &qword_267C94A48);
  char v64 = 1;
  return v64 & 1;
}

unint64_t sub_21CA6A838()
{
  unint64_t result = qword_267C94A78;
  if (!qword_267C94A78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C94A78);
  }
  return result;
}

unint64_t sub_21CA6A890()
{
  unint64_t result = qword_267C94A80;
  if (!qword_267C94A80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C94A80);
  }
  return result;
}

unint64_t sub_21CA6A8E8()
{
  unint64_t result = qword_267C94A88;
  if (!qword_267C94A88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C94A88);
  }
  return result;
}

unint64_t sub_21CA6A940()
{
  unint64_t result = qword_267C94A90;
  if (!qword_267C94A90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C94A90);
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for FMFSchedule(_OWORD *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (void *)(v12 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    long long v5 = *((_OWORD *)a2 + 1);
    *a1 = *(_OWORD *)a2;
    a1[1] = v5;
    a1[2] = *((_OWORD *)a2 + 2);
    uint64_t v6 = *(int *)(a3 + 40);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = sub_21CB876F0();
    uint64_t v10 = *(void *)(v9 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
    {
      uint64_t v11 = sub_21CA57E34(&qword_267C94A48);
      memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
    }
  }
  return v3;
}

uint64_t destroy for FMFSchedule(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 40);
  uint64_t v3 = sub_21CB876F0();
  uint64_t v6 = *(void *)(v3 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v2, 1, v3);
  if (!result)
  {
    long long v5 = *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8);
    return v5(v2, v3);
  }
  return result;
}

_OWORD *initializeWithCopy for FMFSchedule(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  a1[2] = a2[2];
  uint64_t v5 = *(int *)(a3 + 40);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = sub_21CB876F0();
  uint64_t v9 = *(void *)(v8 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
  {
    uint64_t v10 = sub_21CA57E34(&qword_267C94A48);
    memcpy(v6, v7, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v6, v7, v8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
  }
  return a1;
}

void *assignWithCopy for FMFSchedule(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  a1[5] = a2[5];
  uint64_t v4 = *(int *)(a3 + 40);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_21CB876F0();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48);
  int v10 = v9(v5, 1, v7);
  int v11 = v9(v6, 1, v7);
  if (!v10)
  {
    if (!v11)
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 24))(v5, v6, v7);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v8 + 8))(v5, v7);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    uint64_t v12 = sub_21CA57E34(&qword_267C94A48);
    memcpy(v5, v6, *(void *)(*(void *)(v12 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v5, v6, v7);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  return a1;
}

_OWORD *initializeWithTake for FMFSchedule(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  a1[2] = a2[2];
  uint64_t v5 = *(int *)(a3 + 40);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = sub_21CB876F0();
  uint64_t v9 = *(void *)(v8 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
  {
    uint64_t v10 = sub_21CA57E34(&qword_267C94A48);
    memcpy(v6, v7, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v6, v7, v8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
  }
  return a1;
}

_OWORD *assignWithTake for FMFSchedule(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  a1[2] = a2[2];
  uint64_t v5 = *(int *)(a3 + 40);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = sub_21CB876F0();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48);
  int v11 = v10(v6, 1, v8);
  int v12 = v10(v7, 1, v8);
  if (!v11)
  {
    if (!v12)
    {
      (*(void (**)(char *, char *, uint64_t))(v9 + 40))(v6, v7, v8);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v9 + 8))(v6, v8);
    goto LABEL_6;
  }
  if (v12)
  {
LABEL_6:
    uint64_t v13 = sub_21CA57E34(&qword_267C94A48);
    memcpy(v6, v7, *(void *)(*(void *)(v13 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v6, v7, v8);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for FMFSchedule(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_21CA6B140);
}

uint64_t sub_21CA6B140(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a1 + *(int *)(a3 + 40);
  uint64_t v5 = sub_21CA57E34(&qword_267C94A48);
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48);

  return v6(v4, a2, v5);
}

uint64_t storeEnumTagSinglePayload for FMFSchedule(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_21CA6B1C8);
}

uint64_t sub_21CA6B1C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = a1 + *(int *)(a4 + 40);
  uint64_t v6 = sub_21CA57E34(&qword_267C94A48);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);

  return v7(v5, a2, a2, v6);
}

ValueMetadata *type metadata accessor for FMFSchedule.DaysOfWeek()
{
  return &type metadata for FMFSchedule.DaysOfWeek;
}

void type metadata accessor for SecureLocationsStewiePublishReason(uint64_t a1)
{
}

void type metadata accessor for os_unfair_lock_s(uint64_t a1)
{
}

void type metadata accessor for SPMotionActivityState(uint64_t a1)
{
}

void type metadata accessor for SPSecureLocationPublishReason(uint64_t a1)
{
}

void type metadata accessor for CLClientLocationReferenceFrame(uint64_t a1)
{
}

unsigned char *storeEnumTagSinglePayload for FMFSchedule.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *uint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x21CA6B380);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FMFSchedule.CodingKeys()
{
  return &type metadata for FMFSchedule.CodingKeys;
}

unint64_t sub_21CA6B3BC()
{
  unint64_t result = qword_267C94AE0;
  if (!qword_267C94AE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C94AE0);
  }
  return result;
}

unint64_t sub_21CA6B414()
{
  unint64_t result = qword_267C94AE8;
  if (!qword_267C94AE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C94AE8);
  }
  return result;
}

unint64_t sub_21CA6B46C()
{
  unint64_t result = qword_267C94AF0;
  if (!qword_267C94AF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C94AF0);
  }
  return result;
}

uint64_t sub_21CA6B4C0()
{
  unint64_t v0 = sub_21CB88D70();
  swift_bridgeObjectRelease();
  if (v0 >= 7) {
    return 7;
  }
  else {
    return v0;
  }
}

void type metadata accessor for SecureLocationsStewieServiceState(uint64_t a1)
{
}

void type metadata accessor for SecureLocationsStewieError(uint64_t a1)
{
}

uint64_t sub_21CA6B534()
{
  return sub_21CA66B88(&qword_267C94B30, type metadata accessor for FileAttributeKey);
}

uint64_t sub_21CA6B57C()
{
  return sub_21CA66B88(&qword_267C94B38, type metadata accessor for FileAttributeKey);
}

uint64_t sub_21CA6B5C4()
{
  return sub_21CA66B88(&qword_267C94B40, type metadata accessor for FileProtectionType);
}

uint64_t sub_21CA6B60C()
{
  return sub_21CA66B88(&qword_267C94B48, type metadata accessor for FileProtectionType);
}

uint64_t sub_21CA6B654()
{
  return sub_21CA66B88(&qword_267C94B50, type metadata accessor for FileProtectionType);
}

uint64_t sub_21CA6B69C()
{
  return sub_21CA66B88(&qword_267C94B58, type metadata accessor for SecureLocationsStewieError);
}

uint64_t sub_21CA6B6E4()
{
  return sub_21CA66B88(&qword_267C94B60, type metadata accessor for SecureLocationsStewieError);
}

uint64_t sub_21CA6B72C()
{
  return sub_21CA66B88(&qword_267C94B68, type metadata accessor for SecureLocationsStewieError);
}

uint64_t sub_21CA6B774()
{
  return sub_21CA66B88(&qword_267C94B70, type metadata accessor for SecureLocationsStewieError);
}

uint64_t sub_21CA6B7BC()
{
  return sub_21CA66B88(&qword_267C94B78, type metadata accessor for SecureLocationsStewieError);
}

uint64_t sub_21CA6B804()
{
  return sub_21CA66B88(&qword_267C94B80, type metadata accessor for Code);
}

void type metadata accessor for Code(uint64_t a1)
{
}

uint64_t sub_21CA6B860()
{
  return sub_21CA66B88(&qword_267C94B88, type metadata accessor for Code);
}

unint64_t sub_21CA6B8AC()
{
  unint64_t result = qword_267C94B90;
  if (!qword_267C94B90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C94B90);
  }
  return result;
}

uint64_t sub_21CA6B900()
{
  return sub_21CA66B88(&qword_267C94B98, type metadata accessor for Code);
}

uint64_t sub_21CA6B948()
{
  return sub_21CA66B88(&qword_267C94BA0, type metadata accessor for SecureLocationsStewieError);
}

uint64_t sub_21CA6B9B0()
{
  qword_267C94D60 = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "_os_activity_none");

  return swift_unknownObjectRetain();
}

uint64_t sub_21CA6B9EC()
{
  qword_267C94D68 = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "_os_activity_current");

  return swift_unknownObjectRetain();
}

uint64_t static FMOSActivity.current.getter@<X0>(void *a1@<X8>)
{
  return sub_21CA6BAE4(&qword_267C94938, &qword_267C94D68, a1);
}

const char *FMOSActivity.init(_:parent:options:)@<X0>(const char *description@<X0>, char a2@<W2>, os_activity_t *a3@<X3>, os_activity_flag_t *a4@<X4>, os_activity_t *a5@<X8>)
{
  if (a2)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (!description)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (*a3)
  {
    os_activity_t v6 = _os_activity_create(&dword_21CA00000, description, *a3, *a4);
    description = (const char *)swift_unknownObjectRelease();
    *a5 = v6;
    return description;
  }
LABEL_7:
  __break(1u);
  return description;
}

uint64_t FMOSActivity.Options.flags.getter()
{
  return *v0;
}

uint64_t static FMOSActivity.none.getter@<X0>(void *a1@<X8>)
{
  return sub_21CA6BAE4(&qword_267C94930, &qword_267C94D60, a1);
}

uint64_t sub_21CA6BAE4@<X0>(void *a1@<X0>, void *a2@<X1>, void *a3@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  *a3 = *a2;

  return swift_unknownObjectRetain();
}

uint64_t FMOSActivity.apply(execute:)(const void *a1)
{
  uint64_t result = (uint64_t)_Block_copy(a1);
  int v3 = *v1;
  if (v3)
  {
    uint64_t v4 = result;
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v4;
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = sub_21CA6BCC8;
    *(void *)(v6 + 24) = v5;
    v9[4] = sub_21CA18858;
    v9[5] = v6;
    v9[0] = MEMORY[0x263EF8330];
    v9[1] = 1107296256;
    _OWORD v9[2] = sub_21CA18830;
    v9[3] = &unk_26CD69E78;
    uint64_t v7 = _Block_copy(v9);
    swift_retain();
    swift_release();
    os_activity_apply(v3, v7);
    _Block_release(v7);
    char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    uint64_t result = swift_release();
    if ((isEscapingClosureAtFileLocation & 1) == 0) {
      return result;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_21CA6BC90()
{
  _Block_release(*(const void **)(v0 + 16));

  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_21CA6BCC8()
{
  return (*(uint64_t (**)(void))(*(void *)(v0 + 16) + 16))();
}

uint64_t sub_21CA6BCD8()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

const void *static FMOSActivity.start(_:execute:)(const char *a1, int a2, char a3, void *aBlock)
{
  uint64_t result = _Block_copy(aBlock);
  uint64_t v7 = result;
  if (qword_267C94938 == -1)
  {
    if ((a3 & 1) == 0) {
      goto LABEL_3;
    }
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  uint64_t result = (const void *)swift_once();
  if (a3) {
    goto LABEL_7;
  }
LABEL_3:
  if (!a1)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v8 = qword_267C94D68;
  swift_unknownObjectRetain();
  uint64_t v9 = _os_activity_create(&dword_21CA00000, a1, v8, OS_ACTIVITY_FLAG_DEFAULT);
  swift_unknownObjectRelease();
  uint64_t v10 = _Block_copy(v7);
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = v10;
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = sub_21CA6C390;
  *(void *)(v12 + 24) = v11;
  v14[4] = sub_21CA6C388;
  v14[5] = v12;
  v14[0] = MEMORY[0x263EF8330];
  v14[1] = 1107296256;
  _DWORD v14[2] = sub_21CA18830;
  v14[3] = &unk_26CD69EF0;
  uint64_t v13 = _Block_copy(v14);
  swift_retain();
  swift_release();
  os_activity_apply(v9, v13);
  _Block_release(v13);
  LOBYTE(v13) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  _Block_release(v7);
  uint64_t result = (const void *)swift_unknownObjectRelease();
  if (v13) {
LABEL_9:
  }
    __break(1u);
  return result;
}

uint64_t FMOSActivity.Options.rawValue.getter()
{
  return *v0;
}

uint64_t FMOSActivity.Options.init(rawValue:)@<X0>(uint64_t result@<X0>, _DWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

void static FMOSActivity.Options.default.getter(_DWORD *a1@<X8>)
{
  *a1 = 0;
}

void static FMOSActivity.Options.detached.getter(_DWORD *a1@<X8>)
{
  *a1 = 1;
}

void static FMOSActivity.Options.ifNonePresent.getter(_DWORD *a1@<X8>)
{
  *a1 = 2;
}

_DWORD *sub_21CA6BF00@<X0>(_DWORD *result@<X0>, _DWORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

void sub_21CA6BF0C(_DWORD *a1@<X8>)
{
  *a1 = 0;
}

uint64_t sub_21CA6BF14()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

unint64_t sub_21CA6BF28()
{
  unint64_t result = qword_267C94D70;
  if (!qword_267C94D70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C94D70);
  }
  return result;
}

unint64_t sub_21CA6BF80()
{
  unint64_t result = qword_267C94D78;
  if (!qword_267C94D78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C94D78);
  }
  return result;
}

unint64_t sub_21CA6BFD8()
{
  unint64_t result = qword_267C94D80;
  if (!qword_267C94D80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C94D80);
  }
  return result;
}

unint64_t sub_21CA6C030()
{
  unint64_t result = qword_267C94D88;
  if (!qword_267C94D88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C94D88);
  }
  return result;
}

_DWORD *sub_21CA6C084@<X0>(_DWORD *result@<X0>, int *a2@<X8>)
{
  *a2 = *v2 | *result;
  return result;
}

_DWORD *sub_21CA6C098@<X0>(_DWORD *result@<X0>, int *a2@<X8>)
{
  *a2 = *v2 & *result;
  return result;
}

_DWORD *sub_21CA6C0AC@<X0>(_DWORD *result@<X0>, int *a2@<X8>)
{
  *a2 = *v2 ^ *result;
  return result;
}

BOOL sub_21CA6C0C0(_DWORD *a1, int *a2)
{
  int v3 = *a2;
  int v4 = *v2 & *a2;
  if (v4 != *a2) {
    *v2 |= v3;
  }
  *a1 = v3;
  return v4 != v3;
}

_DWORD *sub_21CA6C0F0@<X0>(_DWORD *result@<X0>, uint64_t a2@<X8>)
{
  int v3 = *v2 & *result;
  if (v3) {
    *v2 &= ~*result;
  }
  *(_DWORD *)a2 = v3;
  *(unsigned char *)(a2 + 4) = v3 == 0;
  return result;
}

int *sub_21CA6C11C@<X0>(int *result@<X0>, uint64_t a2@<X8>)
{
  int v3 = *result;
  int v4 = *v2;
  *v2 |= *result;
  int v5 = v4 & v3;
  *(_DWORD *)a2 = v5;
  *(unsigned char *)(a2 + 4) = v5 == 0;
  return result;
}

_DWORD *sub_21CA6C140(_DWORD *result)
{
  *v1 |= *result;
  return result;
}

_DWORD *sub_21CA6C154(_DWORD *result)
{
  *v1 &= *result;
  return result;
}

_DWORD *sub_21CA6C168(_DWORD *result)
{
  *v1 ^= *result;
  return result;
}

_DWORD *sub_21CA6C17C@<X0>(_DWORD *result@<X0>, int *a2@<X8>)
{
  *a2 = *v2 & ~*result;
  return result;
}

BOOL sub_21CA6C190(_DWORD *a1)
{
  return (*v1 & ~*a1) == 0;
}

BOOL sub_21CA6C1A4(_DWORD *a1)
{
  return (*v1 & *a1) == 0;
}

BOOL sub_21CA6C1B8(_DWORD *a1)
{
  return (*a1 & ~*v1) == 0;
}

BOOL sub_21CA6C1CC()
{
  return *v0 == 0;
}

_DWORD *sub_21CA6C1DC(_DWORD *result)
{
  *v1 &= ~*result;
  return result;
}

BOOL sub_21CA6C1F0(_DWORD *a1, _DWORD *a2)
{
  return *a1 == *a2;
}

void *initializeBufferWithCopyOfBuffer for FMOSActivity(void *a1, void *a2)
{
  *a1 = *a2;
  swift_unknownObjectRetain();
  return a1;
}

uint64_t destroy for FMOSActivity()
{
  return swift_unknownObjectRelease();
}

void *assignWithCopy for FMOSActivity(void *a1, void *a2)
{
  *a1 = *a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  return a1;
}

void *initializeWithTake for FMOSActivity(void *result, void *a2)
{
  *unint64_t result = *a2;
  return result;
}

void *assignWithTake for FMOSActivity(void *a1, void *a2)
{
  *a1 = *a2;
  swift_unknownObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for FMOSActivity(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 8)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for FMOSActivity(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2) {
      *(void *)unint64_t result = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FMOSActivity()
{
  return &type metadata for FMOSActivity;
}

ValueMetadata *type metadata accessor for FMOSActivity.Options()
{
  return &type metadata for FMOSActivity.Options;
}

uint64_t type metadata accessor for FMFSaveFavoritesRequest()
{
  uint64_t result = qword_267C94DF0;
  if (!qword_267C94DF0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_21CA6C3F0()
{
  return swift_initClassMetadata2();
}

unint64_t sub_21CA6C440()
{
  uint64_t v1 = *(void *)(v0 + qword_267CA50F0);
  uint64_t v2 = 1 << *(unsigned char *)(v1 + 32);
  uint64_t v3 = -1;
  if (v2 < 64) {
    uint64_t v3 = ~(-1 << v2);
  }
  unint64_t v4 = v3 & *(void *)(v1 + 64);
  int64_t v37 = (unint64_t)(v2 + 63) >> 6;
  uint64_t v38 = *(void *)(v0 + qword_267CA50F0);
  unint64_t result = swift_bridgeObjectRetain();
  int64_t v6 = 0;
  uint64_t v7 = (void *)MEMORY[0x263F8EE78];
  if (!v4) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v8 = __clz(__rbit64(v4));
  v4 &= v4 - 1;
  for (unint64_t i = v8 | (v6 << 6); ; unint64_t i = __clz(__rbit64(v11)) + (v6 << 6))
  {
    uint64_t v13 = (uint64_t *)(*(void *)(v38 + 48) + 16 * i);
    uint64_t v15 = *v13;
    uint64_t v14 = v13[1];
    uint64_t v16 = *(void *)(*(void *)(v38 + 56) + 8 * i);
    sub_21CA57E34(&qword_267C94E00);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_21CB8AC70;
    *(void *)(inited + 32) = 25705;
    uint64_t v18 = inited + 32;
    *(void *)(inited + 72) = MEMORY[0x263F8D310];
    *(void *)(inited + 40) = 0xE200000000000000;
    *(void *)(inited + 48) = v15;
    *(void *)(inited + 56) = v14;
    *(void *)(inited + 80) = 0x726564726FLL;
    uint64_t v19 = inited + 80;
    *(void *)(inited + 120) = MEMORY[0x263F8D6C8];
    *(void *)(inited + 88) = 0xE500000000000000;
    *(void *)(inited + 96) = v16;
    sub_21CA57E34(&qword_267C94E08);
    uint64_t v20 = (void *)sub_21CB88D40();
    swift_bridgeObjectRetain();
    swift_retain();
    sub_21CA6C990(v18, (uint64_t)&v39);
    uint64_t v22 = (uint64_t)v39;
    uint64_t v21 = v40;
    unint64_t result = sub_21CA5BCE0((uint64_t)v39, v40);
    if (v23) {
      goto LABEL_30;
    }
    *(void *)((char *)v20 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v24 = (uint64_t *)(v20[6] + 16 * result);
    *uint64_t v24 = v22;
    v24[1] = v21;
    unint64_t result = (unint64_t)sub_21CA38B20(v41, (_OWORD *)(v20[7] + 32 * result));
    uint64_t v25 = v20[2];
    BOOL v26 = __OFADD__(v25, 1);
    uint64_t v27 = v25 + 1;
    if (v26) {
      goto LABEL_31;
    }
    void v20[2] = v27;
    sub_21CA6C990(v19, (uint64_t)&v39);
    uint64_t v28 = (uint64_t)v39;
    uint64_t v29 = v40;
    unint64_t result = sub_21CA5BCE0((uint64_t)v39, v40);
    if (v30)
    {
LABEL_30:
      __break(1u);
LABEL_31:
      __break(1u);
LABEL_32:
      __break(1u);
      goto LABEL_33;
    }
    *(void *)((char *)v20 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v31 = (uint64_t *)(v20[6] + 16 * result);
    *uint64_t v31 = v28;
    v31[1] = v29;
    unint64_t result = (unint64_t)sub_21CA38B20(v41, (_OWORD *)(v20[7] + 32 * result));
    uint64_t v32 = v20[2];
    BOOL v26 = __OFADD__(v32, 1);
    uint64_t v33 = v32 + 1;
    if (v26) {
      goto LABEL_31;
    }
    void v20[2] = v33;
    swift_release();
    swift_bridgeObjectRelease();
    unint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      unint64_t result = (unint64_t)sub_21CAC7850(0, v7[2] + 1, 1, v7);
      uint64_t v7 = (void *)result;
    }
    unint64_t v35 = v7[2];
    unint64_t v34 = v7[3];
    if (v35 >= v34 >> 1)
    {
      unint64_t result = (unint64_t)sub_21CAC7850((void *)(v34 > 1), v35 + 1, 1, v7);
      uint64_t v7 = (void *)result;
    }
    _OWORD v7[2] = v35 + 1;
    v7[v35 + 4] = v20;
    if (v4) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v10 = v6 + 1;
    if (__OFADD__(v6, 1)) {
      goto LABEL_32;
    }
    if (v10 >= v37) {
      goto LABEL_29;
    }
    unint64_t v11 = *(void *)(v36 + 8 * v10);
    ++v6;
    if (!v11)
    {
      int64_t v6 = v10 + 1;
      if (v10 + 1 >= v37) {
        goto LABEL_29;
      }
      unint64_t v11 = *(void *)(v36 + 8 * v6);
      if (!v11)
      {
        int64_t v6 = v10 + 2;
        if (v10 + 2 >= v37) {
          goto LABEL_29;
        }
        unint64_t v11 = *(void *)(v36 + 8 * v6);
        if (!v11) {
          break;
        }
      }
    }
LABEL_18:
    unint64_t v4 = (v11 - 1) & v11;
  }
  int64_t v12 = v10 + 3;
  if (v12 >= v37)
  {
LABEL_29:
    swift_release();
    *((void *)&v41[0] + 1) = sub_21CA57E34(&qword_267C94E18);
    uint64_t v39 = v7;
    swift_beginAccess();
    sub_21CA3769C((uint64_t)&v39, 0x657469726F766166, 0xE900000000000073);
    return swift_endAccess();
  }
  unint64_t v11 = *(void *)(v36 + 8 * v12);
  if (v11)
  {
    int64_t v6 = v12;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v6 = v12 + 1;
    if (__OFADD__(v12, 1)) {
      break;
    }
    if (v6 >= v37) {
      goto LABEL_29;
    }
    unint64_t v11 = *(void *)(v36 + 8 * v6);
    ++v12;
    if (v11) {
      goto LABEL_18;
    }
  }
LABEL_33:
  __break(1u);
  return result;
}

uint64_t sub_21CA6C840()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_21CA6C850()
{
  uint64_t v0 = sub_21CB87730();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + qword_267CA51F8;
  uint64_t v2 = sub_21CB87590();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_21CA6C934()
{
  sub_21CA6C850();

  return swift_deallocClassInstance();
}

uint64_t sub_21CA6C988()
{
  return type metadata accessor for FMFSaveFavoritesRequest();
}

uint64_t sub_21CA6C990(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_21CA57E34(&qword_267C94E10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_21CA6C9F8(uint64_t a1, void *a2, void *a3)
{
  int v5 = *(void (**)(void *, void *))(a1 + 32);
  swift_retain();
  id v7 = a2;
  id v6 = a3;
  v5(a2, a3);
  swift_release();
}

void sub_21CA6CA84(void *a1, uint64_t a2, void *a3)
{
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a2;
  *(void *)(v6 + 24) = a3;
  v9[4] = sub_21CA6D9B8;
  v9[5] = v6;
  v9[0] = MEMORY[0x263EF8330];
  v9[1] = 1107296256;
  _OWORD v9[2] = sub_21CA6CB74;
  v9[3] = &unk_26CD6A060;
  id v7 = _Block_copy(v9);
  swift_retain();
  id v8 = a3;
  swift_release();
  objc_msgSend(a1, sel_currentStewieStateWithCompletion_, v7);
  _Block_release(v7);
}

void sub_21CA6CB74(uint64_t a1, uint64_t a2, void *a3)
{
  int v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  swift_retain();
  id v6 = a3;
  v5(a2, a3);
  swift_release();
}

uint64_t FMNetworkUtil.deinit()
{
  return v0;
}

uint64_t FMNetworkUtil.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for FMNetworkUtil()
{
  return self;
}

uint64_t method lookup function for FMNetworkUtil(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for FMNetworkUtil);
}

uint64_t sub_21CA6CC40()
{
  void aBlock[6] = *MEMORY[0x263EF8340];
  uint64_t v0 = (void *)sub_21CB882C0();
  sub_21CA182AC();
  uint64_t v1 = (void *)sub_21CB88900();
  aBlock[4] = nullsub_1;
  void aBlock[5] = 0;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  uint64_t aBlock[2] = sub_21CA6C9F8;
  uint64_t aBlock[3] = &unk_26CD6A088;
  uint64_t v2 = _Block_copy(aBlock);
  uint64_t v3 = _CTServerConnectionCreateOnTargetQueue();
  _Block_release(v2);

  if (v3)
  {
    uint64_t v4 = (void *)sub_21CB882C0();
    _CTServerConnectionCopyCellularUsagePolicy();

    _CTServerConnectionGetCellularDataIsEnabled();
    if (qword_267C94990 != -1) {
      swift_once();
    }
    uint64_t v5 = sub_21CB880A0();
    sub_21CA4CC18(v5, (uint64_t)qword_267CA5368);
    id v6 = sub_21CB88070();
    os_log_type_t v7 = sub_21CB88880();
    if (os_log_type_enabled(v6, v7))
    {
      id v8 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)id v8 = 67109120;
      swift_beginAccess();
      LODWORD(aBlock[0]) = 0;
      sub_21CB889C0();
      _os_log_impl(&dword_21CA00000, v6, v7, "FMNetworkUtil: Global cellular enabled? %{BOOL}d", v8, 8u);
      MEMORY[0x21D4B6B70](v8, -1, -1);
    }
  }
  return 0;
}

uint64_t sub_21CA6D038(void *a1)
{
  uint64_t v53 = a1;
  uint64_t v1 = sub_21CB88170();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = MEMORY[0x270FA5388](v1);
  uint64_t v5 = (char *)&v49 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  os_log_type_t v7 = (char *)&v49 - v6;
  uint64_t v8 = sub_21CB88100();
  uint64_t v56 = *(void *)(v8 - 8);
  uint64_t v57 = v8;
  MEMORY[0x270FA5388](v8);
  int64_t v10 = (char *)&v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_21CB88150();
  uint64_t v54 = *(void *)(v11 - 8);
  uint64_t v55 = v11;
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v49 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_21CB88110();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v49 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_21CB87190();
  uint64_t v60 = (void *)v18;
  uint64_t v61 = sub_21CA6D8D4((unint64_t *)&qword_267C94E20, MEMORY[0x263F3CA38]);
  uint64_t v19 = sub_21CA6D80C(aBlock);
  (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v18 - 8) + 104))(v19, *MEMORY[0x263F3CA20], v18);
  LOBYTE(v18) = MEMORY[0x21D4B4280](aBlock);
  sub_21CA2B0D0((uint64_t)aBlock);
  if (v18)
  {
    uint64_t v20 = swift_allocObject();
    uint64_t v52 = v7;
    uint64_t v21 = v20;
    *(void *)(v20 + 16) = 0;
    uint64_t v49 = (void *)(v20 + 16);
    uint64_t v22 = dispatch_group_create();
    uint64_t v51 = v5;
    char v23 = v22;
    dispatch_group_enter(v22);
    sub_21CA182AC();
    (*(void (**)(char *, void, uint64_t))(v15 + 104))(v17, *MEMORY[0x263F8F080], v14);
    uint64_t v24 = sub_21CB88940();
    uint64_t v50 = v1;
    uint64_t v25 = (void *)v24;
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    BOOL v26 = (void *)swift_allocObject();
    uint64_t v27 = v53;
    _OWORD v26[2] = v53;
    uint64_t v26[3] = v21;
    void v26[4] = v23;
    uint64_t v61 = (uint64_t)sub_21CA6D8C8;
    uint64_t v62 = v26;
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 1107296256;
    uint64_t aBlock[2] = (uint64_t)sub_21CA1B084;
    uint64_t v60 = &unk_26CD6A010;
    uint64_t v28 = _Block_copy(aBlock);
    id v29 = v27;
    swift_retain();
    char v30 = v23;
    sub_21CB88120();
    uint64_t v58 = MEMORY[0x263F8EE78];
    sub_21CA6D8D4((unint64_t *)&qword_267C96FC0, MEMORY[0x263F8F030]);
    sub_21CA57E34((uint64_t *)&unk_267C96DD0);
    sub_21CA6D91C();
    uint64_t v31 = v57;
    sub_21CB88A60();
    MEMORY[0x21D4B5A20](0, v13, v10, v28);
    _Block_release(v28);

    (*(void (**)(char *, uint64_t))(v56 + 8))(v10, v31);
    (*(void (**)(char *, uint64_t))(v54 + 8))(v13, v55);
    swift_release();
    uint64_t v32 = v51;
    sub_21CB88160();
    uint64_t v33 = v52;
    MEMORY[0x21D4B5290](v32, 60.0);
    unint64_t v34 = *(void (**)(char *, uint64_t))(v2 + 8);
    uint64_t v35 = v50;
    v34(v32, v50);
    sub_21CB88890();
    v34(v33, v35);
    if (sub_21CB880F0())
    {
      if (qword_267C94990 != -1) {
        swift_once();
      }
      uint64_t v36 = sub_21CB880A0();
      sub_21CA4CC18(v36, (uint64_t)qword_267CA5368);
      int64_t v37 = sub_21CB88070();
      os_log_type_t v38 = sub_21CB88880();
      if (os_log_type_enabled(v37, v38))
      {
        uint64_t v39 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v39 = 0;
        _os_log_impl(&dword_21CA00000, v37, v38, "FMNetworkUtil: Stewie state is unavailable (timed out after 60 secs)", v39, 2u);
        MEMORY[0x21D4B6B70](v39, -1, -1);
        swift_release();

        uint64_t v40 = 0;
LABEL_18:

        return v40;
      }
      swift_release();

      uint64_t v40 = 0;
    }
    else
    {
      id v41 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F3B9E8]), sel_init);
      unsigned int v42 = objc_msgSend(v41, sel_isNetworkUp);

      uint64_t v43 = v49;
      swift_beginAccess();
      if (*v43 == 7) {
        uint64_t v40 = 0;
      }
      else {
        uint64_t v40 = v42 ^ 1;
      }
      if (qword_267C94990 != -1) {
        swift_once();
      }
      uint64_t v44 = sub_21CB880A0();
      sub_21CA4CC18(v44, (uint64_t)qword_267CA5368);
      swift_retain();
      int64_t v37 = sub_21CB88070();
      os_log_type_t v45 = sub_21CB88880();
      if (os_log_type_enabled(v37, v45))
      {
        uint64_t v46 = v21;
        uint64_t v47 = swift_slowAlloc();
        *(_DWORD *)uint64_t v47 = 134218240;
        uint64_t v58 = *(void *)(v46 + 16);
        sub_21CB889C0();
        swift_release();
        *(_WORD *)(v47 + 12) = 1024;
        LODWORD(v58) = v40;
        sub_21CB889C0();
        _os_log_impl(&dword_21CA00000, v37, v45, "FMNetworkUtil: Stewie state is %ld (available=%{BOOL}d)", (uint8_t *)v47, 0x12u);
        MEMORY[0x21D4B6B70](v47, -1, -1);
        swift_release();

        goto LABEL_18;
      }

      swift_release_n();
    }
    int64_t v37 = v30;
    goto LABEL_18;
  }
  return 0;
}

uint64_t *sub_21CA6D80C(uint64_t *a1)
{
  uint64_t v1 = a1;
  if ((*(unsigned char *)(*(void *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t sub_21CA6D870()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_21CA6D880()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 40, 7);
}

void sub_21CA6D8C8()
{
  sub_21CA6CA84(*(void **)(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32));
}

uint64_t sub_21CA6D8D4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_21CA6D91C()
{
  unint64_t result = qword_267C96FD0;
  if (!qword_267C96FD0)
  {
    sub_21CA5EEBC((uint64_t *)&unk_267C96DD0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C96FD0);
  }
  return result;
}

uint64_t sub_21CA6D978()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

void sub_21CA6D9B8(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v3 = *(NSObject **)(v1 + 24);
  swift_beginAccess();
  *(void *)(v4 + 16) = a1;
  dispatch_group_leave(v3);
}

unint64_t sub_21CA6DA1C(char a1)
{
  unint64_t result = 0x736C6562616CLL;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000011;
      break;
    case 2:
      unint64_t result = 0x73656369766564;
      break;
    case 3:
      unint64_t result = 0x7366657270;
      break;
    case 4:
      unint64_t result = 0x7365727574616566;
      break;
    case 5:
      unint64_t result = 0x6F666E49796DLL;
      break;
    case 6:
      unint64_t result = 0x6769666E6F63;
      break;
    case 7:
      unint64_t result = 0x6E6F697461636F6CLL;
      break;
    case 8:
    case 15:
      unint64_t result = 0xD000000000000010;
      break;
    case 9:
      unint64_t result = 0x4F676E69646E6570;
      break;
    case 10:
      unint64_t result = 0x6E69776F6C6C6F66;
      break;
    case 11:
      unint64_t result = 0x7265776F6C6C6F66;
      break;
    case 12:
    case 13:
      unint64_t result = 0x6F46657275747566;
      break;
    case 14:
      unint64_t result = 0x7365636E6546796DLL;
      break;
    case 16:
      unint64_t result = 0xD000000000000011;
      break;
    case 17:
      unint64_t result = 0xD000000000000015;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_21CA6DC90(char *a1, char *a2)
{
  char v2 = *a2;
  unint64_t v3 = sub_21CA6DA1C(*a1);
  uint64_t v5 = v4;
  if (v3 == sub_21CA6DA1C(v2) && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = sub_21CB88F50();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_21CA6DD1C()
{
  char v1 = *v0;
  sub_21CB89050();
  sub_21CA6DA1C(v1);
  sub_21CB88380();
  swift_bridgeObjectRelease();
  return sub_21CB89090();
}

uint64_t sub_21CA6DD80()
{
  sub_21CA6DA1C(*v0);
  sub_21CB88380();

  return swift_bridgeObjectRelease();
}

uint64_t sub_21CA6DDD4()
{
  char v1 = *v0;
  sub_21CB89050();
  sub_21CA6DA1C(v1);
  sub_21CB88380();
  swift_bridgeObjectRelease();
  return sub_21CB89090();
}

uint64_t sub_21CA6DE34@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_21CA6E3B8();
  *a1 = result;
  return result;
}

unint64_t sub_21CA6DE64@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_21CA6DA1C(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_21CA6DE90@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_21CA6E3B8();
  *a1 = result;
  return result;
}

void sub_21CA6DEB8(unsigned char *a1@<X8>)
{
  *a1 = 18;
}

uint64_t sub_21CA6DEC4(uint64_t a1)
{
  unint64_t v2 = sub_21CA29168();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_21CA6DF00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, long long *a9, uint64_t *a10, long long *a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  uint64_t v27 = *((void *)a9 + 2);
  uint64_t v28 = *((void *)a9 + 3);
  uint64_t v29 = *a10;
  char v30 = *((unsigned char *)a10 + 8);
  long long v39 = a11[1];
  long long v40 = *a11;
  long long v37 = *a9;
  long long v38 = a11[2];
  uint64_t v31 = *((void *)a11 + 6);
  char v32 = *((unsigned char *)a11 + 56);
  sub_21CA26A4C(a12, (uint64_t)v46, (uint64_t *)&unk_267C96EE0);
  *(void *)(v23 + OBJC_IVAR____TtC7FMFCore28FMFInitRefreshClientResponse_labels) = a6;
  *(void *)(v23 + OBJC_IVAR____TtC7FMFCore28FMFInitRefreshClientResponse_labelledLocations) = a7;
  *(void *)(v23 + OBJC_IVAR____TtC7FMFCore28FMFInitRefreshClientResponse_devices) = a8;
  uint64_t v33 = v23 + OBJC_IVAR____TtC7FMFCore28FMFInitRefreshClientResponse_preferences;
  *(_OWORD *)uint64_t v33 = v37;
  *(void *)(v33 + 16) = v27;
  *(void *)(v33 + 24) = v28;
  uint64_t v34 = v23 + OBJC_IVAR____TtC7FMFCore28FMFInitRefreshClientResponse_features;
  *(void *)uint64_t v34 = v29;
  *(unsigned char *)(v34 + 8) = v30;
  uint64_t v35 = v23 + OBJC_IVAR____TtC7FMFCore28FMFInitRefreshClientResponse_myInfo;
  *(_OWORD *)uint64_t v35 = v40;
  *(_OWORD *)(v35 + 16) = v39;
  *(_OWORD *)(v35 + 32) = v38;
  *(void *)(v35 + 48) = v31;
  *(unsigned char *)(v35 + 56) = v32;
  sub_21CA26A4C((uint64_t)v46, v23 + OBJC_IVAR____TtC7FMFCore28FMFInitRefreshClientResponse_config, (uint64_t *)&unk_267C96EE0);
  *(void *)(v23 + OBJC_IVAR____TtC7FMFCore28FMFInitRefreshClientResponse_locations) = a13;
  *(void *)(v23 + OBJC_IVAR____TtC7FMFCore28FMFInitRefreshClientResponse_locatesInProgress) = a14;
  *(void *)(v23 + OBJC_IVAR____TtC7FMFCore28FMFInitRefreshClientResponse_following) = a15;
  *(void *)(v23 + OBJC_IVAR____TtC7FMFCore28FMFInitRefreshClientResponse_followers) = a16;
  *(void *)(v23 + OBJC_IVAR____TtC7FMFCore28FMFInitRefreshClientResponse_futureFollowing) = a17;
  *(void *)(v23 + OBJC_IVAR____TtC7FMFCore28FMFInitRefreshClientResponse_futureFollowers) = a18;
  *(void *)(v23 + OBJC_IVAR____TtC7FMFCore28FMFInitRefreshClientResponse_pendingOffers) = a19;
  *(void *)(v23 + OBJC_IVAR____TtC7FMFCore28FMFInitRefreshClientResponse_locationAlertsOnMeByMe) = a20;
  *(void *)(v23 + OBJC_IVAR____TtC7FMFCore28FMFInitRefreshClientResponse_locationAlertsOnMeByFriends) = a21;
  *(void *)(v23 + OBJC_IVAR____TtC7FMFCore28FMFInitRefreshClientResponse_locationAlertsOnFriendsByMe) = a22;
  *(void *)(v23 + OBJC_IVAR____TtC7FMFCore28FMFInitRefreshClientResponse_locationAlertsOnFriendsByFriends) = a23;
  *(void *)(v23 + 16) = a1;
  *(void *)(v23 + 24) = a2;
  sub_21CA26A4C(a3, v23 + OBJC_IVAR____TtC7FMFCore15FMFBaseResponse_commandResponse, &qword_267C94E48);
  *(void *)(v23 + OBJC_IVAR____TtC7FMFCore15FMFBaseResponse_alert) = a4;
  *(void *)(v23 + OBJC_IVAR____TtC7FMFCore15FMFBaseResponse_fetchStatus) = a5;
  return v23;
}

uint64_t sub_21CA6E190()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_21CA59D84(*(void *)(v0 + OBJC_IVAR____TtC7FMFCore28FMFInitRefreshClientResponse_preferences), *(void *)(v0 + OBJC_IVAR____TtC7FMFCore28FMFInitRefreshClientResponse_preferences + 8), *(void *)(v0 + OBJC_IVAR____TtC7FMFCore28FMFInitRefreshClientResponse_preferences + 16));
  sub_21CA2D658(*(void *)(v0 + OBJC_IVAR____TtC7FMFCore28FMFInitRefreshClientResponse_myInfo));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_21CA6E2CC()
{
  return type metadata accessor for FMFInitRefreshClientResponse();
}

uint64_t sub_21CA6E2D4(uint64_t a1)
{
  unsigned int v1 = *(unsigned __int8 *)(a1 + 48);
  BOOL v2 = v1 >= 2;
  int v3 = (v1 + 2147483646) & 0x7FFFFFFF;
  if (v2) {
    return (v3 + 1);
  }
  else {
    return 0;
  }
}

double sub_21CA6E2F0(uint64_t a1)
{
  double result = 0.0;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  *(void *)(a1 + 48) = 2;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_OWORD *)(a1 + 104) = 0u;
  *(_OWORD *)(a1 + 120) = 0u;
  *(_OWORD *)(a1 + 136) = 0u;
  *(_OWORD *)(a1 + 152) = 0u;
  *(_OWORD *)(a1 + 168) = 0u;
  *(_OWORD *)(a1 + 184) = 0u;
  *(_OWORD *)(a1 + 200) = 0u;
  *(_OWORD *)(a1 + 216) = 0u;
  *(void *)(a1 + 232) = 0;
  return result;
}

unint64_t sub_21CA6E364()
{
  unint64_t result = qword_267C94F20;
  if (!qword_267C94F20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C94F20);
  }
  return result;
}

uint64_t sub_21CA6E3B8()
{
  unint64_t v0 = sub_21CB88F80();
  swift_bridgeObjectRelease();
  if (v0 >= 0x12) {
    return 18;
  }
  else {
    return v0;
  }
}

uint64_t sub_21CA6E410(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for FMFLocateInProgress(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

uint64_t assignWithTake for FMFLocateInProgress(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for FMFLocateInProgress(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 17)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FMFLocateInProgress(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 17) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t sub_21CA6E568(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_21CA59DCC(*a1, *a2);
}

uint64_t sub_21CA6E574()
{
  return sub_21CB89090();
}

uint64_t sub_21CA6E628()
{
  sub_21CB88380();

  return swift_bridgeObjectRelease();
}

uint64_t sub_21CA6E6C8()
{
  return sub_21CB89090();
}

uint64_t sub_21CA6E778@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_21CA6EEB4();
  *a1 = result;
  return result;
}

void sub_21CA6E7A8(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE400000000000000;
  unint64_t v4 = 0xEF676E697461636FLL;
  uint64_t v5 = 0x4C676E69646E6570;
  if (v2 != 1)
  {
    uint64_t v5 = 0x6F4C646573756170;
    unint64_t v4 = 0xEE00676E69746163;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 1701736302;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_21CA6E818(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_21CA7E89C(*a1, *a2);
}

uint64_t sub_21CA6E824()
{
  return sub_21CB89090();
}

uint64_t sub_21CA6E898()
{
  sub_21CB88380();

  return swift_bridgeObjectRelease();
}

uint64_t sub_21CA6E8F8()
{
  return sub_21CB89090();
}

uint64_t sub_21CA6E968@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_21CB88D70();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

void sub_21CA6E9C8(uint64_t *a1@<X8>)
{
  uint64_t v2 = 25705;
  if (*v1) {
    uint64_t v2 = 0x737574617473;
  }
  unint64_t v3 = 0xE200000000000000;
  if (*v1) {
    unint64_t v3 = 0xE600000000000000;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_21CA6E9F8@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_21CB88D70();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

void sub_21CA6EA5C(unsigned char *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_21CA6EA68(uint64_t a1)
{
  unint64_t v2 = sub_21CA6F128();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_21CA6EAA4(uint64_t a1)
{
  unint64_t v2 = sub_21CA6F128();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_21CA6EAE0(void *a1, uint64_t a2, uint64_t a3, int a4)
{
  int v12 = a4;
  uint64_t v6 = sub_21CA57E34(&qword_267C94F48);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21CA2B2CC(a1, a1[3]);
  sub_21CA6F128();
  sub_21CB890C0();
  char v14 = 0;
  sub_21CB88E70();
  if (v4) {
    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  char v13 = 1;
  sub_21CB88E70();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return swift_bridgeObjectRelease();
}

uint64_t sub_21CA6ECDC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_21CA6EF00(a1);
  if (!v2)
  {
    *(void *)a2 = result;
    *(void *)(a2 + 8) = v5;
    *(unsigned char *)(a2 + 16) = v6;
  }
  return result;
}

uint64_t sub_21CA6ED0C(void *a1)
{
  return sub_21CA6EAE0(a1, *(void *)v1, *(void *)(v1 + 8), *(unsigned __int8 *)(v1 + 16));
}

uint64_t sub_21CA6ED2C(uint64_t a1, uint64_t a2)
{
  return sub_21CA6ED48(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16), *(void *)a2, *(void *)(a2 + 8), *(unsigned char *)(a2 + 16));
}

uint64_t sub_21CA6ED48(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  if (a1 == a4 && a2 == a5 || (char v8 = 0, (sub_21CB88F50() & 1) != 0))
  {
    if (a3)
    {
      if (a3 == 1) {
        uint64_t v9 = 0x4C676E69646E6570;
      }
      else {
        uint64_t v9 = 0x6F4C646573756170;
      }
      if (a3 == 1) {
        unint64_t v10 = 0xEF676E697461636FLL;
      }
      else {
        unint64_t v10 = 0xEE00676E69746163;
      }
      int v11 = a6;
      if (a6)
      {
LABEL_12:
        if (v11 == 1) {
          uint64_t v12 = 0x4C676E69646E6570;
        }
        else {
          uint64_t v12 = 0x6F4C646573756170;
        }
        if (v11 == 1) {
          unint64_t v13 = 0xEF676E697461636FLL;
        }
        else {
          unint64_t v13 = 0xEE00676E69746163;
        }
        if (v9 != v12) {
          goto LABEL_24;
        }
LABEL_22:
        if (v10 == v13)
        {
          char v8 = 1;
LABEL_25:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          return v8 & 1;
        }
LABEL_24:
        char v8 = sub_21CB88F50();
        goto LABEL_25;
      }
    }
    else
    {
      unint64_t v10 = 0xE400000000000000;
      uint64_t v9 = 1701736302;
      int v11 = a6;
      if (a6) {
        goto LABEL_12;
      }
    }
    unint64_t v13 = 0xE400000000000000;
    if (v9 != 1701736302) {
      goto LABEL_24;
    }
    goto LABEL_22;
  }
  return v8 & 1;
}

uint64_t sub_21CA6EEB4()
{
  unint64_t v0 = sub_21CB88D70();
  swift_bridgeObjectRelease();
  if (v0 >= 3) {
    return 3;
  }
  else {
    return v0;
  }
}

uint64_t sub_21CA6EF00(void *a1)
{
  uint64_t v3 = sub_21CA57E34(&qword_267C94F38);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  char v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = a1[4];
  sub_21CA2B2CC(a1, a1[3]);
  sub_21CA6F128();
  sub_21CB890B0();
  if (v1)
  {
    sub_21CA2B0D0((uint64_t)a1);
  }
  else
  {
    char v11 = 0;
    uint64_t v7 = sub_21CB88DE0();
    char v10 = 1;
    swift_bridgeObjectRetain();
    sub_21CB88DE0();
    sub_21CB88D70();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    sub_21CA2B0D0((uint64_t)a1);
    swift_bridgeObjectRelease();
  }
  return v7;
}

unint64_t sub_21CA6F128()
{
  unint64_t result = qword_267C94F40;
  if (!qword_267C94F40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C94F40);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for FMFSecureOrLiveLocateInProgress.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x21CA6F248);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

unsigned char *sub_21CA6F270(unsigned char *result, char a2)
{
  *unint64_t result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for FMFSecureOrLiveLocateInProgress.CodingKeys()
{
  return &type metadata for FMFSecureOrLiveLocateInProgress.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for FMFSecureOrLiveLocateInProgressStatus(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x21CA6F358);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

unint64_t sub_21CA6F384()
{
  unint64_t result = qword_267C94F50;
  if (!qword_267C94F50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C94F50);
  }
  return result;
}

unint64_t sub_21CA6F3DC()
{
  unint64_t result = qword_267C94F58;
  if (!qword_267C94F58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C94F58);
  }
  return result;
}

unint64_t sub_21CA6F434()
{
  unint64_t result = qword_267C94F60;
  if (!qword_267C94F60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C94F60);
  }
  return result;
}

unint64_t sub_21CA6F48C()
{
  unint64_t result = qword_267C94F68;
  if (!qword_267C94F68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C94F68);
  }
  return result;
}

uint64_t sub_21CA6F4E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t sub_21CA6F4F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t sub_21CA6F508()
{
  uint64_t v1 = v0;
  if (qword_267C94990 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_21CB880A0();
  sub_21CA4CC18(v2, (uint64_t)qword_267CA5368);
  swift_retain_n();
  int v3 = sub_21CB88070();
  os_log_type_t v4 = sub_21CB88880();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v21 = swift_slowAlloc();
    uint64_t v22 = v21;
    *(_DWORD *)uint64_t v5 = 136315138;
    uint64_t v6 = *(void *)(v1 + 16);
    unint64_t v7 = *(void *)(v1 + 24);
    swift_bridgeObjectRetain();
    unint64_t v8 = sub_21CA30E24(0xCuLL, v6, v7);
    uint64_t v10 = v9;
    uint64_t v12 = v11;
    uint64_t v14 = v13;
    swift_bridgeObjectRelease();
    uint64_t v15 = MEMORY[0x21D4B5450](v8, v10, v12, v14);
    unint64_t v17 = v16;
    swift_bridgeObjectRelease();
    sub_21CA4E450(v15, v17, &v22);
    sub_21CB889C0();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_21CA00000, v3, v4, "FMFRefreshController<%s>.deinit", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x21D4B6B70](v21, -1, -1);
    MEMORY[0x21D4B6B70](v5, -1, -1);
  }
  else
  {

    swift_release_n();
  }
  swift_bridgeObjectRelease();
  swift_release();
  sub_21CA640FC(v1 + 40);
  sub_21CA1B88C(v1 + OBJC_IVAR____TtC7FMFCore20FMFRefreshController_selectedFriend, &qword_267C96F10);
  sub_21CA2B0D0(v1 + OBJC_IVAR____TtC7FMFCore20FMFRefreshController_interactionController);

  swift_weakDestroy();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  uint64_t v18 = v1 + OBJC_IVAR____TtC7FMFCore20FMFRefreshController_lastRefreshTime;
  uint64_t v19 = sub_21CB87590();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v19 - 8) + 8))(v18, v19);

  return v1;
}

uint64_t sub_21CA6F80C()
{
  sub_21CA6F508();

  return swift_deallocClassInstance();
}

uint64_t sub_21CA6F864()
{
  return type metadata accessor for FMFRefreshController();
}

uint64_t sub_21CA6F86C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_21CB88100();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15[0] = sub_21CB88150();
  uint64_t v6 = *(void *)(v15[0] - 8);
  MEMORY[0x270FA5388](v15[0]);
  unint64_t v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_267C94990 != -1) {
    swift_once();
  }
  uint64_t v9 = sub_21CB880A0();
  sub_21CA4CC18(v9, (uint64_t)qword_267CA5368);
  uint64_t v10 = sub_21CB88070();
  os_log_type_t v11 = sub_21CB88880();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v12 = 0;
    _os_log_impl(&dword_21CA00000, v10, v11, "FMFRefreshController: Stop refreshing.", v12, 2u);
    MEMORY[0x21D4B6B70](v12, -1, -1);
  }

  aBlock[4] = sub_21CA74454;
  void aBlock[5] = v1;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  uint64_t aBlock[2] = sub_21CA1B084;
  uint64_t aBlock[3] = &unk_26CD6A668;
  uint64_t v13 = _Block_copy(aBlock);
  swift_retain();
  sub_21CB88120();
  v15[1] = MEMORY[0x263F8EE78];
  sub_21CA364B0((unint64_t *)&qword_267C96FC0, MEMORY[0x263F8F030]);
  sub_21CA57E34((uint64_t *)&unk_267C96DD0);
  sub_21CA3566C((unint64_t *)&qword_267C96FD0, (uint64_t *)&unk_267C96DD0);
  sub_21CB88A60();
  MEMORY[0x21D4B5A20](0, v8, v5, v13);
  _Block_release(v13);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  (*(void (**)(char *, void))(v6 + 8))(v8, v15[0]);
  return swift_release();
}

id sub_21CA6FBB8(uint64_t a1)
{
  *(unsigned char *)(a1 + OBJC_IVAR____TtC7FMFCore20FMFRefreshController_isRefreshing) = 0;
  sub_21CA0D2BC();
  sub_21CB2E108();
  uint64_t v2 = *(void **)(a1 + OBJC_IVAR____TtC7FMFCore20FMFRefreshController_refreshTimer);

  return objc_msgSend(v2, sel_invalidate);
}

uint64_t sub_21CA6FC20(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_21CB88100();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_21CB88150();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = *(void *)(v3 + OBJC_IVAR____TtC7FMFCore20FMFRefreshController_refreshQueue);
  uint64_t v14 = (void *)swift_allocObject();
  _DWORD v14[2] = v3;
  v14[3] = a1;
  v14[4] = a2;
  aBlock[4] = sub_21CA74448;
  void aBlock[5] = v14;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  uint64_t aBlock[2] = sub_21CA1B084;
  uint64_t aBlock[3] = &unk_26CD6A640;
  uint64_t v15 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  sub_21CB88120();
  v17[1] = MEMORY[0x263F8EE78];
  sub_21CA364B0((unint64_t *)&qword_267C96FC0, MEMORY[0x263F8F030]);
  sub_21CA57E34((uint64_t *)&unk_267C96DD0);
  sub_21CA3566C((unint64_t *)&qword_267C96FD0, (uint64_t *)&unk_267C96DD0);
  sub_21CB88A60();
  MEMORY[0x21D4B5A20](0, v13, v9, v15);
  _Block_release(v15);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  return swift_release();
}

void sub_21CA6FEE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_21CB88180();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (uint64_t *)((char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (qword_267C94990 != -1) {
    swift_once();
  }
  uint64_t v10 = sub_21CB880A0();
  sub_21CA4CC18(v10, (uint64_t)qword_267CA5368);
  uint64_t v11 = sub_21CB88070();
  os_log_type_t v12 = sub_21CB88880();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = swift_slowAlloc();
    uint64_t v25 = a3;
    uint64_t v14 = (uint8_t *)v13;
    uint64_t v15 = swift_slowAlloc();
    uint64_t v24 = a2;
    uint64_t v16 = v15;
    uint64_t v27 = v15;
    *(_DWORD *)uint64_t v14 = 136315138;
    uint64_t v26 = sub_21CA4E450(0xD000000000000014, 0x800000021CB94750, &v27);
    sub_21CB889C0();
    _os_log_impl(&dword_21CA00000, v11, v12, "FMFRefreshController: refreshTimerFired from %s", v14, 0xCu);
    swift_arrayDestroy();
    uint64_t v17 = v16;
    a2 = v24;
    MEMORY[0x21D4B6B70](v17, -1, -1);
    uint64_t v18 = v14;
    a3 = v25;
    MEMORY[0x21D4B6B70](v18, -1, -1);
  }

  uint64_t v19 = *(void **)(a1 + OBJC_IVAR____TtC7FMFCore20FMFRefreshController_refreshQueue);
  *uint64_t v9 = v19;
  (*(void (**)(void *, void, uint64_t))(v7 + 104))(v9, *MEMORY[0x263F8F0E0], v6);
  id v20 = v19;
  LOBYTE(v19) = sub_21CB881A0();
  uint64_t v21 = (*(uint64_t (**)(void *, uint64_t))(v7 + 8))(v9, v6);
  if (v19)
  {
    uint64_t v22 = (void *)MEMORY[0x21D4B6380](v21);
    sub_21CA10514(a1, a2, a3);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_21CA7018C(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = sub_21CB88100();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_21CB88150();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19[0] = *(void *)(v4 + OBJC_IVAR____TtC7FMFCore20FMFRefreshController_refreshQueue);
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = v4;
  *(void *)(v16 + 24) = a1;
  *(void *)(v16 + 32) = a2;
  *(unsigned char *)(v16 + 40) = a3;
  aBlock[4] = sub_21CA742E4;
  void aBlock[5] = v16;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  uint64_t aBlock[2] = sub_21CA1B084;
  uint64_t aBlock[3] = &unk_26CD6A500;
  uint64_t v17 = _Block_copy(aBlock);
  swift_retain();
  swift_bridgeObjectRetain();
  sub_21CB88120();
  v19[1] = MEMORY[0x263F8EE78];
  sub_21CA364B0((unint64_t *)&qword_267C96FC0, MEMORY[0x263F8F030]);
  sub_21CA57E34((uint64_t *)&unk_267C96DD0);
  sub_21CA3566C((unint64_t *)&qword_267C96FD0, (uint64_t *)&unk_267C96DD0);
  sub_21CB88A60();
  MEMORY[0x21D4B5A20](0, v15, v11, v17);
  _Block_release(v17);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  return swift_release();
}

void sub_21CA7045C(uint64_t a1, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t v7 = (uint64_t *)(a1 + OBJC_IVAR____TtC7FMFCore20FMFRefreshController_liveSessionStatistics);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v14 = *v7;
  *uint64_t v7 = 0x8000000000000000;
  sub_21CB83C48(a4, a2, a3, isUniquelyReferenced_nonNull_native);
  *uint64_t v7 = v14;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_endAccess();
  if (qword_267C94990 != -1) {
    swift_once();
  }
  uint64_t v9 = sub_21CB880A0();
  sub_21CA4CC18(v9, (uint64_t)qword_267CA5368);
  swift_bridgeObjectRetain_n();
  uint64_t v10 = sub_21CB88070();
  os_log_type_t v11 = sub_21CB88880();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = swift_slowAlloc();
    uint64_t v13 = swift_slowAlloc();
    v15[0] = v13;
    *(_DWORD *)uint64_t v12 = 136315394;
    swift_bridgeObjectRetain();
    sub_21CA4E450(a2, a3, v15);
    sub_21CB889C0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v12 + 12) = 1024;
    sub_21CB889C0();
    _os_log_impl(&dword_21CA00000, v10, v11, "FMFRefreshController: appendLiveSessionInformation, friendID: %s, successfulLive: %{BOOL}d", (uint8_t *)v12, 0x12u);
    swift_arrayDestroy();
    MEMORY[0x21D4B6B70](v13, -1, -1);
    MEMORY[0x21D4B6B70](v12, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
}

uint64_t sub_21CA706A0(uint64_t a1, char a2)
{
  uint64_t v5 = sub_21CB88100();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_21CB88150();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16[0] = *(void *)(v2 + OBJC_IVAR____TtC7FMFCore20FMFRefreshController_refreshQueue);
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = a1;
  *(void *)(v13 + 24) = v2;
  *(unsigned char *)(v13 + 32) = a2;
  aBlock[4] = sub_21CA742A8;
  void aBlock[5] = v13;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  uint64_t aBlock[2] = sub_21CA1B084;
  uint64_t aBlock[3] = &unk_26CD6A4B0;
  uint64_t v14 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_21CB88120();
  v16[1] = MEMORY[0x263F8EE78];
  sub_21CA364B0((unint64_t *)&qword_267C96FC0, MEMORY[0x263F8F030]);
  sub_21CA57E34((uint64_t *)&unk_267C96DD0);
  sub_21CA3566C((unint64_t *)&qword_267C96FD0, (uint64_t *)&unk_267C96DD0);
  sub_21CB88A60();
  MEMORY[0x21D4B5A20](0, v12, v8, v14);
  _Block_release(v14);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  return swift_release();
}

uint64_t sub_21CA70964(uint64_t result, uint64_t a2, char a3)
{
  uint64_t v3 = *(void *)(result + 16);
  if (!v3) {
    return result;
  }
  uint64_t v4 = (void *)(a2 + OBJC_IVAR____TtC7FMFCore20FMFRefreshController_legacyFallbackData);
  int v5 = a3 & 1;
  for (unint64_t i = (unint64_t *)(swift_bridgeObjectRetain() + 40); ; i += 2)
  {
    uint64_t v8 = *(i - 1);
    unint64_t v7 = *i;
    swift_beginAccess();
    swift_bridgeObjectRetain_n();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v10 = (void *)*v4;
    uint64_t v29 = (void *)*v4;
    *uint64_t v4 = 0x8000000000000000;
    unint64_t v12 = sub_21CA5BCE0(v8, v7);
    uint64_t v13 = v10[2];
    BOOL v14 = (v11 & 1) == 0;
    uint64_t v15 = v13 + v14;
    if (__OFADD__(v13, v14)) {
      break;
    }
    char v16 = v11;
    if (v10[3] >= v15)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        uint64_t v19 = v29;
        if (v11) {
          goto LABEL_12;
        }
      }
      else
      {
        sub_21CB84C80();
        uint64_t v19 = v29;
        if (v16) {
          goto LABEL_12;
        }
      }
    }
    else
    {
      sub_21CB80EAC(v15, isUniquelyReferenced_nonNull_native);
      unint64_t v17 = sub_21CA5BCE0(v8, v7);
      if ((v16 & 1) != (v18 & 1)) {
        goto LABEL_24;
      }
      unint64_t v12 = v17;
      uint64_t v19 = v29;
      if (v16)
      {
LABEL_12:
        *(unsigned char *)(v19[7] + v12) = v5;
        goto LABEL_16;
      }
    }
    v19[(v12 >> 6) + 8] |= 1 << v12;
    id v20 = (uint64_t *)(v19[6] + 16 * v12);
    *id v20 = v8;
    v20[1] = v7;
    *(unsigned char *)(v19[7] + v12) = v5;
    uint64_t v21 = v19[2];
    BOOL v22 = __OFADD__(v21, 1);
    uint64_t v23 = v21 + 1;
    if (v22) {
      goto LABEL_23;
    }
    void v19[2] = v23;
    swift_bridgeObjectRetain();
LABEL_16:
    *uint64_t v4 = v19;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
    if (qword_267C94990 != -1) {
      swift_once();
    }
    uint64_t v24 = sub_21CB880A0();
    sub_21CA4CC18(v24, (uint64_t)qword_267CA5368);
    swift_bridgeObjectRetain();
    uint64_t v25 = sub_21CB88070();
    os_log_type_t v26 = sub_21CB88880();
    if (os_log_type_enabled(v25, v26))
    {
      uint64_t v27 = swift_slowAlloc();
      uint64_t v28 = swift_slowAlloc();
      v30[0] = v28;
      *(_DWORD *)uint64_t v27 = 136315394;
      swift_bridgeObjectRetain();
      *(void *)(v27 + 4) = sub_21CA4E450(v8, v7, v30);
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v27 + 12) = 1024;
      *(_DWORD *)(v27 + 14) = v5;
      _os_log_impl(&dword_21CA00000, v25, v26, "FMFRefreshController: appendLiveSessionInformation, friendID: %s, didFallback: %{BOOL}d", (uint8_t *)v27, 0x12u);
      swift_arrayDestroy();
      MEMORY[0x21D4B6B70](v28, -1, -1);
      MEMORY[0x21D4B6B70](v27, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    if (!--v3) {
      return swift_bridgeObjectRelease();
    }
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  unint64_t result = sub_21CB88FA0();
  __break(1u);
  return result;
}

uint64_t sub_21CA70C94()
{
  uint64_t v1 = sub_21CA57E34(&qword_267C95028);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v33 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_21CB88100();
  uint64_t v36 = *(void *)(v4 - 8);
  uint64_t v37 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_21CB88150();
  uint64_t v34 = *(void *)(v7 - 8);
  uint64_t v35 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_21CB87190();
  unsigned int v42 = (void *)v10;
  uint64_t v11 = sub_21CA364B0((unint64_t *)&qword_267C94E20, MEMORY[0x263F3CA38]);
  uint64_t v43 = v11;
  unint64_t v12 = sub_21CA6D80C(&aBlock);
  uint64_t v13 = *MEMORY[0x263F3CA28];
  BOOL v14 = *(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 104);
  v14(v12, v13, v10);
  char v15 = MEMORY[0x21D4B4280](&aBlock);
  sub_21CA2B0D0((uint64_t)&aBlock);
  if (v15)
  {
    unsigned int v42 = (void *)v10;
    uint64_t v43 = v11;
    char v16 = sub_21CA6D80C(&aBlock);
    v14(v16, v13, v10);
    char v17 = MEMORY[0x21D4B4280](&aBlock);
    uint64_t result = sub_21CA2B0D0((uint64_t)&aBlock);
    if ((v17 & 1) == 0) {
      return result;
    }
    uint64_t v19 = sub_21CB88640();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v3, 1, 1, v19);
    id v20 = (void *)swift_allocObject();
    void v20[2] = 0;
    void v20[3] = 0;
    _DWORD v20[4] = v0;
    swift_retain();
    sub_21CB09F98((uint64_t)v3, (uint64_t)&unk_267C95038, (uint64_t)v20);
  }
  else
  {
    uint64_t v21 = dispatch_group_create();
    id v22 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F3BA80]), sel_init);
    uint64_t v23 = swift_allocObject();
    *(void *)(v23 + 16) = 0;
    dispatch_group_enter(v21);
    uint64_t v24 = (void *)swift_allocObject();
    v24[2] = v0;
    v24[3] = v23;
    v24[4] = v21;
    uint64_t v43 = (uint64_t)sub_21CA73D38;
    uint64_t v44 = v24;
    uint64_t aBlock = MEMORY[0x263EF8330];
    uint64_t v40 = 1107296256;
    id v41 = sub_21CA71D38;
    unsigned int v42 = &unk_26CD6A398;
    uint64_t v25 = _Block_copy(&aBlock);
    swift_retain();
    swift_retain();
    os_log_type_t v26 = v21;
    swift_release();
    id v33 = v22;
    objc_msgSend(v22, sel_getHandlesSharingLocationsWithMe_, v25);
    _Block_release(v25);
    dispatch_group_enter(v26);
    uint64_t v27 = (void *)swift_allocObject();
    v27[2] = v0;
    void v27[3] = v23;
    v27[4] = v26;
    uint64_t v43 = (uint64_t)sub_21CA73DD4;
    uint64_t v44 = v27;
    uint64_t aBlock = MEMORY[0x263EF8330];
    uint64_t v40 = 1107296256;
    id v41 = sub_21CA71D38;
    unsigned int v42 = &unk_26CD6A3E8;
    uint64_t v28 = _Block_copy(&aBlock);
    swift_retain();
    swift_retain();
    uint64_t v29 = v26;
    swift_release();
    objc_msgSend(v22, sel_getHandlesFollowingMyLocation_, v28);
    _Block_release(v28);
    uint64_t v30 = swift_allocObject();
    *(void *)(v30 + 16) = v0;
    *(void *)(v30 + 24) = v23;
    uint64_t v43 = (uint64_t)sub_21CA73E40;
    uint64_t v44 = (void *)v30;
    uint64_t aBlock = MEMORY[0x263EF8330];
    uint64_t v40 = 1107296256;
    id v41 = sub_21CA1B084;
    unsigned int v42 = &unk_26CD6A438;
    uint64_t v31 = _Block_copy(&aBlock);
    swift_retain();
    swift_retain();
    sub_21CB88120();
    uint64_t v38 = MEMORY[0x263F8EE78];
    sub_21CA364B0((unint64_t *)&qword_267C96FC0, MEMORY[0x263F8F030]);
    sub_21CA57E34((uint64_t *)&unk_267C96DD0);
    sub_21CA3566C((unint64_t *)&qword_267C96FD0, (uint64_t *)&unk_267C96DD0);
    uint64_t v32 = v37;
    sub_21CB88A60();
    sub_21CB888A0();
    _Block_release(v31);

    (*(void (**)(char *, uint64_t))(v36 + 8))(v6, v32);
    (*(void (**)(char *, uint64_t))(v34 + 8))(v9, v35);
    swift_release();
  }
  return swift_release();
}

id sub_21CA712D0(uint64_t a1, unint64_t *a2)
{
  uint64_t v54 = a2;
  uint64_t v3 = type metadata accessor for FMFIntermediateFriend();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v50 = (int *)v3;
  uint64_t v51 = v4;
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  uint64_t v7 = &v47[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (uint64_t *)&v47[-v8];
  uint64_t v10 = *(void *)(a1 + 56);
  uint64_t v48 = a1 + 56;
  uint64_t v11 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & v10;
  int64_t v55 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v53 = v9 + 2;
  uint64_t v49 = v9 + 6;
  uint64_t v56 = a1;
  id result = (id)swift_bridgeObjectRetain();
  int64_t v15 = 0;
  long long v52 = xmmword_21CB8B220;
  while (1)
  {
    if (v13)
    {
      unint64_t v16 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v17 = v16 | (v15 << 6);
      goto LABEL_24;
    }
    int64_t v18 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
      __break(1u);
      goto LABEL_34;
    }
    if (v18 >= v55) {
      return (id)swift_release();
    }
    unint64_t v19 = *(void *)(v48 + 8 * v18);
    ++v15;
    if (!v19)
    {
      int64_t v15 = v18 + 1;
      if (v18 + 1 >= v55) {
        return (id)swift_release();
      }
      unint64_t v19 = *(void *)(v48 + 8 * v15);
      if (!v19)
      {
        int64_t v15 = v18 + 2;
        if (v18 + 2 >= v55) {
          return (id)swift_release();
        }
        unint64_t v19 = *(void *)(v48 + 8 * v15);
        if (!v19)
        {
          int64_t v15 = v18 + 3;
          if (v18 + 3 >= v55) {
            return (id)swift_release();
          }
          unint64_t v19 = *(void *)(v48 + 8 * v15);
          if (!v19) {
            break;
          }
        }
      }
    }
LABEL_23:
    unint64_t v13 = (v19 - 1) & v19;
    unint64_t v17 = __clz(__rbit64(v19)) + (v15 << 6);
LABEL_24:
    sub_21CA741DC(*(void *)(v56 + 48) + 40 * v17, (uint64_t)v60);
    v58[0] = v60[0];
    v58[1] = v60[1];
    uint64_t v59 = v61;
    uint64_t v21 = (void *)sub_21CB88AD0();
    self;
    uint64_t v22 = swift_dynamicCastObjCClass();
    if (v22)
    {
      uint64_t v23 = (void *)v22;
      id v62 = v21;
      id result = objc_msgSend(v23, sel_serverId);
      if (!result) {
        goto LABEL_36;
      }
      uint64_t v24 = result;
      unint64_t v57 = v13;
      int64_t v25 = v15;
      uint64_t v26 = (uint64_t)v7;
      uint64_t v27 = sub_21CB882F0();
      uint64_t v29 = v28;

      *uint64_t v9 = v27;
      v9[1] = v29;
      uint64_t v30 = v53;
      v53[1] = 0;
      v30[2] = 0;
      *uint64_t v30 = 0;
      sub_21CA57E34((uint64_t *)&unk_267C96F20);
      uint64_t v31 = swift_allocObject();
      *(_OWORD *)(v31 + 16) = v52;
      id result = objc_msgSend(v23, sel_identifier);
      if (!result) {
        goto LABEL_35;
      }
      uint64_t v32 = result;
      id v33 = v50;
      uint64_t v34 = v50[16];
      uint64_t v35 = sub_21CB882F0();
      uint64_t v37 = v36;

      *(void *)(v31 + 32) = v35;
      *(void *)(v31 + 40) = v37;

      v9[5] = v31;
      uint64_t v38 = v49;
      *uint64_t v49 = 0u;
      v38[1] = 0u;
      long long v39 = (char *)v9 + v33[10];
      uint64_t v40 = sub_21CB87590();
      id v41 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56);
      v41(v39, 1, 1, v40);
      v41((char *)v9 + v33[11], 1, 1, v40);
      v41((char *)v9 + v33[12], 1, 1, v40);
      *((unsigned char *)v9 + v33[13]) = 2;
      *((unsigned char *)v9 + v33[14]) = 1;
      *((unsigned char *)v9 + v33[15]) = 1;
      *((unsigned char *)v9 + v34) = 2;
      *(uint64_t *)((char *)v9 + v33[17]) = 0;
      uint64_t v7 = (unsigned char *)v26;
      sub_21CA4BF50((uint64_t)v9, v26);
      unsigned int v42 = v54;
      unint64_t v43 = *v54;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *unsigned int v42 = v43;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        unint64_t v43 = sub_21CAC7974(0, *(void *)(v43 + 16) + 1, 1, v43);
        *uint64_t v54 = v43;
      }
      unint64_t v46 = *(void *)(v43 + 16);
      unint64_t v45 = *(void *)(v43 + 24);
      int64_t v15 = v25;
      unint64_t v13 = v57;
      if (v46 >= v45 >> 1)
      {
        unint64_t v43 = sub_21CAC7974(v45 > 1, v46 + 1, 1, v43);
        *uint64_t v54 = v43;
      }
      *(void *)(v43 + 16) = v46 + 1;
      sub_21CA74178((uint64_t)v7, v43+ ((*(unsigned __int8 *)(v51 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v51 + 80))+ *(void *)(v51 + 72) * v46);

      sub_21CA4BEF4((uint64_t)v9);
    }
    else
    {
    }
    id result = (id)sub_21CA74238((uint64_t)v58);
  }
  int64_t v20 = v18 + 4;
  if (v20 >= v55) {
    return (id)swift_release();
  }
  unint64_t v19 = *(void *)(v48 + 8 * v20);
  if (v19)
  {
    int64_t v15 = v20;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v15 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v15 >= v55) {
      return (id)swift_release();
    }
    unint64_t v19 = *(void *)(v48 + 8 * v15);
    ++v20;
    if (v19) {
      goto LABEL_23;
    }
  }
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

id sub_21CA71804(uint64_t a1, unint64_t *a2)
{
  uint64_t v53 = a2;
  uint64_t v3 = type metadata accessor for FMFIntermediateFriend();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v49 = (int *)v3;
  uint64_t v50 = v4;
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  uint64_t v7 = &v46[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (uint64_t *)&v46[-v8];
  uint64_t v10 = *(void *)(a1 + 56);
  uint64_t v47 = a1 + 56;
  uint64_t v11 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & v10;
  int64_t v54 = (unint64_t)(v11 + 63) >> 6;
  long long v52 = v9 + 2;
  uint64_t v48 = v9 + 5;
  uint64_t v55 = a1;
  id result = (id)swift_bridgeObjectRetain();
  int64_t v15 = 0;
  long long v51 = xmmword_21CB8B220;
  unint64_t v16 = v49;
  while (1)
  {
    if (v13)
    {
      unint64_t v17 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v18 = v17 | (v15 << 6);
      goto LABEL_24;
    }
    int64_t v19 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
      __break(1u);
      goto LABEL_34;
    }
    if (v19 >= v54) {
      return (id)swift_release();
    }
    unint64_t v20 = *(void *)(v47 + 8 * v19);
    ++v15;
    if (!v20)
    {
      int64_t v15 = v19 + 1;
      if (v19 + 1 >= v54) {
        return (id)swift_release();
      }
      unint64_t v20 = *(void *)(v47 + 8 * v15);
      if (!v20)
      {
        int64_t v15 = v19 + 2;
        if (v19 + 2 >= v54) {
          return (id)swift_release();
        }
        unint64_t v20 = *(void *)(v47 + 8 * v15);
        if (!v20)
        {
          int64_t v15 = v19 + 3;
          if (v19 + 3 >= v54) {
            return (id)swift_release();
          }
          unint64_t v20 = *(void *)(v47 + 8 * v15);
          if (!v20) {
            break;
          }
        }
      }
    }
LABEL_23:
    unint64_t v13 = (v20 - 1) & v20;
    unint64_t v18 = __clz(__rbit64(v20)) + (v15 << 6);
LABEL_24:
    sub_21CA741DC(*(void *)(v55 + 48) + 40 * v18, (uint64_t)v59);
    v57[0] = v59[0];
    v57[1] = v59[1];
    uint64_t v58 = v60;
    uint64_t v22 = (void *)sub_21CB88AD0();
    self;
    uint64_t v23 = swift_dynamicCastObjCClass();
    if (v23)
    {
      uint64_t v24 = (void *)v23;
      id v61 = v22;
      id result = objc_msgSend(v24, sel_serverId);
      if (!result) {
        goto LABEL_36;
      }
      int64_t v25 = result;
      int64_t v26 = v15;
      uint64_t v27 = (uint64_t)v7;
      uint64_t v28 = sub_21CB882F0();
      uint64_t v30 = v29;

      *uint64_t v9 = v28;
      v9[1] = v30;
      uint64_t v31 = v52;
      void *v52 = 0;
      v31[1] = 0;
      sub_21CA57E34((uint64_t *)&unk_267C96F20);
      uint64_t v32 = swift_allocObject();
      *(_OWORD *)(v32 + 16) = v51;
      id result = objc_msgSend(v24, sel_identifier);
      if (!result) {
        goto LABEL_35;
      }
      id v33 = result;
      uint64_t v56 = v16[16];
      uint64_t v34 = sub_21CB882F0();
      uint64_t v36 = v35;

      *(void *)(v32 + 32) = v34;
      *(void *)(v32 + 40) = v36;

      v9[4] = v32;
      uint64_t v37 = v48;
      *uint64_t v48 = 0u;
      v37[1] = 0u;
      *((void *)v37 + 4) = 0;
      uint64_t v38 = (char *)v9 + v16[10];
      uint64_t v39 = sub_21CB87590();
      uint64_t v40 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56);
      v40(v38, 1, 1, v39);
      v40((char *)v9 + v16[11], 1, 1, v39);
      v40((char *)v9 + v16[12], 1, 1, v39);
      *((unsigned char *)v9 + v16[13]) = 2;
      *((unsigned char *)v9 + v16[14]) = 1;
      *((unsigned char *)v9 + v16[15]) = 1;
      *((unsigned char *)v9 + v56) = 2;
      *(uint64_t *)((char *)v9 + v16[17]) = 0;
      uint64_t v7 = (unsigned char *)v27;
      sub_21CA4BF50((uint64_t)v9, v27);
      id v41 = v53;
      unint64_t v42 = *v53;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *id v41 = v42;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        unint64_t v42 = sub_21CAC7974(0, *(void *)(v42 + 16) + 1, 1, v42);
        *uint64_t v53 = v42;
      }
      unint64_t v45 = *(void *)(v42 + 16);
      unint64_t v44 = *(void *)(v42 + 24);
      int64_t v15 = v26;
      if (v45 >= v44 >> 1)
      {
        unint64_t v42 = sub_21CAC7974(v44 > 1, v45 + 1, 1, v42);
        *uint64_t v53 = v42;
      }
      *(void *)(v42 + 16) = v45 + 1;
      sub_21CA74178((uint64_t)v7, v42+ ((*(unsigned __int8 *)(v50 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v50 + 80))+ *(void *)(v50 + 72) * v45);

      sub_21CA4BEF4((uint64_t)v9);
    }
    else
    {
    }
    id result = (id)sub_21CA74238((uint64_t)v57);
  }
  int64_t v21 = v19 + 4;
  if (v21 >= v54) {
    return (id)swift_release();
  }
  unint64_t v20 = *(void *)(v47 + 8 * v21);
  if (v20)
  {
    int64_t v15 = v21;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v15 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v15 >= v54) {
      return (id)swift_release();
    }
    unint64_t v20 = *(void *)(v47 + 8 * v15);
    ++v21;
    if (v20) {
      goto LABEL_23;
    }
  }
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_21CA71D38(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = *(void (**)(uint64_t, void *))(a1 + 32);
  if (a2) {
    uint64_t v5 = sub_21CB88730();
  }
  else {
    uint64_t v5 = 0;
  }
  swift_retain();
  id v6 = a3;
  v4(v5, a3);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_21CA71DD8(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, NSObject *a5, void (*a6)(uint64_t, uint64_t *), const char *a7)
{
  uint64_t v25 = MEMORY[0x263F8EE78];
  if (a1)
  {
    uint64_t v12 = swift_bridgeObjectRetain();
    a6(v12, &v25);
    swift_bridgeObjectRelease();
  }
  if (qword_267C94990 != -1) {
    swift_once();
  }
  uint64_t v13 = sub_21CB880A0();
  sub_21CA4CC18(v13, (uint64_t)qword_267CA5368);
  BOOL v14 = sub_21CB88070();
  os_log_type_t v15 = sub_21CB88880();
  if (os_log_type_enabled(v14, v15))
  {
    unint64_t v16 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)unint64_t v16 = 134217984;
    swift_beginAccess();
    sub_21CB889C0();
    _os_log_impl(&dword_21CA00000, v14, v15, a7, v16, 0xCu);
    MEMORY[0x21D4B6B70](v16, -1, -1);
  }

  unint64_t v17 = (void **)(a4 + 16);
  if (swift_weakLoadStrong())
  {
    uint64_t v18 = swift_beginAccess();
    MEMORY[0x270FA5388](v18);
    swift_bridgeObjectRetain();
    sub_21CB88910();
    swift_release();
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  int64_t v19 = *v17;
  unint64_t v20 = *v17;
  if (!*v17)
  {
    id v21 = a2;
    unint64_t v20 = a2;
  }
  swift_beginAccess();
  uint64_t v22 = *v17;
  *unint64_t v17 = v20;
  id v23 = v19;

  dispatch_group_leave(a5);
  return swift_bridgeObjectRelease();
}

void sub_21CA7208C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = OBJC_IVAR____TtC7FMFCore20FMFRefreshController_firstRefreshCompleted;
  if ((*(unsigned char *)(a1 + OBJC_IVAR____TtC7FMFCore20FMFRefreshController_firstRefreshCompleted) & 1) == 0)
  {
    swift_beginAccess();
    uint64_t v5 = *(void **)(a2 + 16);
    uint64_t v6 = MEMORY[0x21D4B6C80](a1 + 40);
    if (v5)
    {
      if (v6)
      {
        id v7 = v5;
        sub_21CB1448C(v5);
        swift_unknownObjectRelease();
      }
    }
    else if (v6)
    {
      sub_21CA0E060();
      swift_unknownObjectRelease();
    }
    *(unsigned char *)(a1 + v2) = 1;
  }
}

uint64_t sub_21CA72138(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[214] = a4;
  uint64_t v5 = sub_21CB87CC0();
  v4[215] = v5;
  v4[216] = *(void *)(v5 - 8);
  v4[217] = swift_task_alloc();
  v4[218] = swift_task_alloc();
  sub_21CA57E34(&qword_267C95040);
  v4[219] = swift_task_alloc();
  v4[220] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for FMFIntermediateFriend();
  v4[221] = v6;
  v4[222] = *(void *)(v6 - 8);
  v4[223] = swift_task_alloc();
  v4[224] = swift_task_alloc();
  v4[225] = swift_task_alloc();
  v4[226] = swift_task_alloc();
  v4[227] = swift_task_alloc();
  v4[228] = swift_task_alloc();
  uint64_t v7 = sub_21CB87C80();
  v4[229] = v7;
  v4[230] = *(void *)(v7 - 8);
  v4[231] = swift_task_alloc();
  v4[232] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_21CA72350, 0, 0);
}

uint64_t sub_21CA72350()
{
  swift_retain_n();
  sub_21CA5EEBC(&qword_267C95058);
  swift_asyncLet_begin();
  swift_retain_n();
  swift_asyncLet_begin();
  *(void *)(v0 + 1560) = MEMORY[0x263F8EE78];
  return MEMORY[0x270FA23E8](v0 + 656, v0 + 1704, sub_21CA72470, v0 + 1472);
}

uint64_t sub_21CA72470()
{
  *(void *)(v1 + 1864) = v0;
  if (v0) {
    uint64_t v2 = sub_21CA733C4;
  }
  else {
    uint64_t v2 = sub_21CA724A4;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_21CA724A4()
{
  uint64_t v1 = v0[213];
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    uint64_t v3 = v0[230];
    uint64_t v4 = v0[227];
    uint64_t v5 = (int *)v0[221];
    long long v51 = *(void (**)(void, uint64_t, void))(v3 + 16);
    uint64_t v6 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    unint64_t v45 = (void *)(v4 + 16);
    uint64_t v46 = v4;
    uint64_t v49 = *(void *)(v3 + 72);
    uint64_t v50 = (void (**)(uint64_t, uint64_t))(v0[216] + 8);
    unint64_t v44 = (_OWORD *)(v4 + 48);
    uint64_t v43 = v0[222];
    uint64_t v48 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v43 + 56);
    uint64_t v47 = (void (**)(void, void))(v3 + 8);
    swift_bridgeObjectRetain();
    do
    {
      uint64_t v54 = v2;
      uint64_t v7 = v0[227];
      v51(v0[232], v6, v0[229]);
      sub_21CB87C70();
      uint64_t v8 = v5[16];
      *(unsigned char *)(v7 + v8) = 2;
      uint64_t v9 = sub_21CB87CB0();
      if (v10)
      {
        uint64_t v11 = (uint64_t *)v0[227];
        uint64_t v52 = v0[220];
        uint64_t v53 = v0[221];
        uint64_t v12 = v0[218];
        uint64_t v13 = v0[215];
        *uint64_t v11 = v9;
        *(void *)(v46 + 8) = v10;
        v45[1] = 0;
        void v45[2] = 0;
        *unint64_t v45 = 0;
        sub_21CA57E34((uint64_t *)&unk_267C96F20);
        uint64_t v14 = swift_allocObject();
        *(_OWORD *)(v14 + 16) = xmmword_21CB8B220;
        *(void *)(v14 + 32) = sub_21CB87C90();
        *(void *)(v14 + 40) = v15;
        (*v50)(v12, v13);
        *(void *)(v46 + 40) = v14;
        _OWORD *v44 = 0u;
        v44[1] = 0u;
        unint64_t v16 = (char *)v11 + v5[10];
        uint64_t v17 = sub_21CB87590();
        uint64_t v18 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56);
        v18(v16, 1, 1, v17);
        v18((char *)v11 + v5[11], 1, 1, v17);
        v18((char *)v11 + v5[12], 1, 1, v17);
        *((unsigned char *)v11 + v5[13]) = 2;
        *((unsigned char *)v11 + v5[14]) = 1;
        *((unsigned char *)v11 + v5[15]) = 1;
        *(unsigned char *)(v7 + v8) = 2;
        *(uint64_t *)((char *)v11 + v5[17]) = 0;
        sub_21CA4BF50((uint64_t)v11, v52);
        (*v48)(v52, 0, 1, v53);
        sub_21CA4BEF4((uint64_t)v11);
      }
      else
      {
        uint64_t v19 = v0[221];
        uint64_t v20 = v0[220];
        (*v50)(v0[218], v0[215]);
        (*v48)(v20, 1, 1, v19);
      }
      uint64_t v21 = v0[220];
      if ((*(unsigned int (**)(uint64_t, uint64_t, void))(v43 + 48))(v21, 1, v0[221]) == 1)
      {
        sub_21CA1B88C(v21, &qword_267C95040);
        if (qword_267C94990 != -1) {
          swift_once();
        }
        uint64_t v22 = sub_21CB880A0();
        sub_21CA4CC18(v22, (uint64_t)qword_267CA5368);
        id v23 = sub_21CB88070();
        os_log_type_t v24 = sub_21CB88860();
        if (os_log_type_enabled(v23, v24))
        {
          uint64_t v25 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v25 = 0;
          _os_log_impl(&dword_21CA00000, v23, v24, "FMFRefreshController: failed to create following friend object!", v25, 2u);
          MEMORY[0x21D4B6B70](v25, -1, -1);
        }
      }
      else
      {
        uint64_t v26 = v0[228];
        uint64_t v27 = v0[226];
        sub_21CA74178(v21, v26);
        sub_21CA4BF50(v26, v27);
        unint64_t v28 = v0[195];
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v28 = sub_21CAC7974(0, *(void *)(v28 + 16) + 1, 1, v28);
        }
        unint64_t v30 = *(void *)(v28 + 16);
        unint64_t v29 = *(void *)(v28 + 24);
        if (v30 >= v29 >> 1) {
          unint64_t v28 = sub_21CAC7974(v29 > 1, v30 + 1, 1, v28);
        }
        uint64_t v31 = v0[228];
        uint64_t v32 = v0[226];
        *(void *)(v28 + 16) = v30 + 1;
        sub_21CA74178(v32, v28+ ((*(unsigned __int8 *)(v43 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v43 + 80))+ *(void *)(v43 + 72) * v30);
        v0[195] = v28;
        sub_21CA4BEF4(v31);
      }
      (*v47)(v0[232], v0[229]);
      v6 += v49;
      uint64_t v2 = v54 - 1;
    }
    while (v54 != 1);
    swift_bridgeObjectRelease();
  }
  if (qword_267C94990 != -1) {
    swift_once();
  }
  uint64_t v33 = sub_21CB880A0();
  v0[234] = sub_21CA4CC18(v33, (uint64_t)qword_267CA5368);
  uint64_t v34 = v0[195];
  swift_bridgeObjectRetain();
  uint64_t v35 = sub_21CB88070();
  os_log_type_t v36 = sub_21CB88880();
  if (os_log_type_enabled(v35, v36))
  {
    uint64_t v37 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v37 = 134217984;
    v0[207] = *(void *)(v34 + 16);
    sub_21CB889C0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_21CA00000, v35, v36, "FMFRefreshController: fmld returned %ld following", v37, 0xCu);
    MEMORY[0x21D4B6B70](v37, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease();
  }

  v0[235] = OBJC_IVAR____TtC7FMFCore20FMFRefreshController_dataManager;
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v39 = Strong;
    swift_beginAccess();
    uint64_t v40 = v0[195];
    uint64_t v41 = swift_task_alloc();
    *(void *)(v41 + 16) = v40;
    *(void *)(v41 + 24) = v39;
    sub_21CB88910();
    swift_bridgeObjectRelease();
    swift_release();
    swift_task_dealloc();
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  v0[183] = MEMORY[0x263F8EE78];
  return MEMORY[0x270FA23E8](v0 + 2, v0 + 189, sub_21CA72B58, v0 + 178);
}

uint64_t sub_21CA72B58()
{
  *(void *)(v1 + 1888) = v0;
  if (v0) {
    uint64_t v2 = sub_21CA73628;
  }
  else {
    uint64_t v2 = sub_21CA72B8C;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_21CA72B8C()
{
  uint64_t v1 = v0[189];
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    uint64_t v3 = v0[230];
    uint64_t v4 = v0[224];
    uint64_t v5 = v0[222];
    uint64_t v6 = (int *)v0[221];
    uint64_t v52 = *(void (**)(void, uint64_t, void))(v3 + 16);
    uint64_t v7 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    unint64_t v45 = (void *)(v4 + 16);
    uint64_t v46 = v4;
    uint64_t v51 = *(void *)(v3 + 72);
    uint64_t v44 = v4 + 40;
    uint64_t v47 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56);
    uint64_t v48 = (void (**)(uint64_t, uint64_t))(v0[216] + 8);
    uint64_t v43 = v5;
    uint64_t v49 = (void (**)(void, void))(v3 + 8);
    uint64_t v50 = (unsigned int (**)(uint64_t, uint64_t, void))(v5 + 48);
    swift_bridgeObjectRetain();
    do
    {
      uint64_t v55 = v2;
      uint64_t v8 = v0[224];
      v52(v0[231], v7, v0[229]);
      sub_21CB87C70();
      uint64_t v9 = v6[16];
      *(unsigned char *)(v8 + v9) = 2;
      uint64_t v10 = sub_21CB87CB0();
      if (v11)
      {
        uint64_t v12 = (uint64_t *)v0[224];
        uint64_t v53 = v0[219];
        uint64_t v54 = v0[221];
        uint64_t v13 = v0[217];
        uint64_t v14 = v0[215];
        *uint64_t v12 = v10;
        *(void *)(v46 + 8) = v11;
        *unint64_t v45 = 0;
        v45[1] = 0;
        sub_21CA57E34((uint64_t *)&unk_267C96F20);
        uint64_t v15 = swift_allocObject();
        *(_OWORD *)(v15 + 16) = xmmword_21CB8B220;
        *(void *)(v15 + 32) = sub_21CB87C90();
        *(void *)(v15 + 40) = v16;
        *(void *)(v46 + 32) = v15;
        (*v48)(v13, v14);
        *(void *)(v44 + 32) = 0;
        *(_OWORD *)uint64_t v44 = 0u;
        *(_OWORD *)(v44 + 16) = 0u;
        uint64_t v17 = (char *)v12 + v6[10];
        uint64_t v18 = sub_21CB87590();
        uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56);
        v19(v17, 1, 1, v18);
        v19((char *)v12 + v6[11], 1, 1, v18);
        v19((char *)v12 + v6[12], 1, 1, v18);
        *((unsigned char *)v12 + v6[13]) = 2;
        *((unsigned char *)v12 + v6[14]) = 1;
        *((unsigned char *)v12 + v6[15]) = 1;
        *(unsigned char *)(v8 + v9) = 2;
        *(uint64_t *)((char *)v12 + v6[17]) = 0;
        sub_21CA4BF50((uint64_t)v12, v53);
        (*v47)(v53, 0, 1, v54);
        sub_21CA4BEF4((uint64_t)v12);
      }
      else
      {
        uint64_t v20 = v0[221];
        uint64_t v21 = v0[219];
        (*v48)(v0[217], v0[215]);
        (*v47)(v21, 1, 1, v20);
      }
      uint64_t v22 = v0[219];
      if ((*v50)(v22, 1, v0[221]) == 1)
      {
        sub_21CA1B88C(v22, &qword_267C95040);
        id v23 = sub_21CB88070();
        os_log_type_t v24 = sub_21CB88860();
        if (os_log_type_enabled(v23, v24))
        {
          uint64_t v25 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v25 = 0;
          _os_log_impl(&dword_21CA00000, v23, v24, "FMFRefreshController: failed to create followers friend object!", v25, 2u);
          MEMORY[0x21D4B6B70](v25, -1, -1);
        }
      }
      else
      {
        uint64_t v26 = v0[225];
        uint64_t v27 = v0[223];
        sub_21CA74178(v22, v26);
        sub_21CA4BF50(v26, v27);
        unint64_t v28 = v0[183];
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v28 = sub_21CAC7974(0, *(void *)(v28 + 16) + 1, 1, v28);
        }
        unint64_t v30 = *(void *)(v28 + 16);
        unint64_t v29 = *(void *)(v28 + 24);
        if (v30 >= v29 >> 1) {
          unint64_t v28 = sub_21CAC7974(v29 > 1, v30 + 1, 1, v28);
        }
        uint64_t v31 = v0[225];
        uint64_t v32 = v0[223];
        *(void *)(v28 + 16) = v30 + 1;
        sub_21CA74178(v32, v28+ ((*(unsigned __int8 *)(v43 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v43 + 80))+ *(void *)(v43 + 72) * v30);
        v0[183] = v28;
        sub_21CA4BEF4(v31);
      }
      (*v49)(v0[231], v0[229]);
      v7 += v51;
      uint64_t v2 = v55 - 1;
    }
    while (v55 != 1);
    swift_bridgeObjectRelease();
  }
  uint64_t v33 = v0[183];
  swift_bridgeObjectRetain();
  uint64_t v34 = sub_21CB88070();
  os_log_type_t v35 = sub_21CB88880();
  if (os_log_type_enabled(v34, v35))
  {
    os_log_type_t v36 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)os_log_type_t v36 = 134217984;
    v0[201] = *(void *)(v33 + 16);
    sub_21CB889C0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_21CA00000, v34, v35, "FMFRefreshController: fmld returned %ld followers", v36, 0xCu);
    MEMORY[0x21D4B6B70](v36, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease();
  }

  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v38 = Strong;
    swift_beginAccess();
    uint64_t v39 = v0[183];
    uint64_t v40 = swift_task_alloc();
    *(void *)(v40 + 16) = v39;
    *(void *)(v40 + 24) = v38;
    sub_21CB88910();
    swift_bridgeObjectRelease();
    swift_release();
    swift_task_dealloc();
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  uint64_t v41 = v0[214];
  if ((*(unsigned char *)(v41 + OBJC_IVAR____TtC7FMFCore20FMFRefreshController_firstRefreshCompleted) & 1) == 0
    && MEMORY[0x21D4B6C80](v41 + 40))
  {
    sub_21CA0E060();
    swift_unknownObjectRelease();
  }
  return MEMORY[0x270FA23D8](v0 + 2, v0 + 189, sub_21CA731D8, v0 + 162);
}

uint64_t sub_21CA731D8()
{
  return MEMORY[0x270FA2498](sub_21CA731F4, 0, 0);
}

uint64_t sub_21CA731F4()
{
  swift_release();
  return MEMORY[0x270FA23D8](v0 + 656, v0 + 1704, sub_21CA73274, v0 + 1360);
}

uint64_t sub_21CA73274()
{
  return MEMORY[0x270FA2498](sub_21CA73290, 0, 0);
}

uint64_t sub_21CA73290()
{
  swift_release();
  *(unsigned char *)(*(void *)(v0 + 1712) + OBJC_IVAR____TtC7FMFCore20FMFRefreshController_firstRefreshCompleted) = 1;
  swift_release_n();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_21CA733C4()
{
  return MEMORY[0x270FA23D8](v0 + 16, v0 + 1512, sub_21CA733E4, v0 + 1520);
}

uint64_t sub_21CA733E4()
{
  return MEMORY[0x270FA2498](sub_21CA73400, 0, 0);
}

uint64_t sub_21CA73400()
{
  swift_release();
  return MEMORY[0x270FA23D8](v0 + 656, v0 + 1704, sub_21CA73480, v0 + 1568);
}

uint64_t sub_21CA73480()
{
  return MEMORY[0x270FA2498](sub_21CA7349C, 0, 0);
}

uint64_t sub_21CA7349C()
{
  uint64_t v1 = (void *)v0[233];
  uint64_t v2 = v0[214];
  swift_release();
  if (*(unsigned char *)(v2 + OBJC_IVAR____TtC7FMFCore20FMFRefreshController_firstRefreshCompleted) != 1
    && MEMORY[0x21D4B6C80](v0[214] + 40))
  {
    id v3 = v1;
    sub_21CB1448C(v1);

    swift_unknownObjectRelease();
  }

  *(unsigned char *)(v0[214] + OBJC_IVAR____TtC7FMFCore20FMFRefreshController_firstRefreshCompleted) = 1;
  swift_release_n();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_21CA73628()
{
  return MEMORY[0x270FA23D8](v0 + 16, v0 + 1512, sub_21CA73648, v0 + 1616);
}

uint64_t sub_21CA73648()
{
  return MEMORY[0x270FA2498](sub_21CA73664, 0, 0);
}

uint64_t sub_21CA73664()
{
  swift_release();
  return MEMORY[0x270FA23D8](v0 + 656, v0 + 1704, sub_21CA736E4, v0 + 1664);
}

uint64_t sub_21CA736E4()
{
  return MEMORY[0x270FA2498](sub_21CA73700, 0, 0);
}

uint64_t sub_21CA73700()
{
  uint64_t v1 = (void *)v0[236];
  uint64_t v2 = v0[214];
  swift_release();
  if (*(unsigned char *)(v2 + OBJC_IVAR____TtC7FMFCore20FMFRefreshController_firstRefreshCompleted) != 1
    && MEMORY[0x21D4B6C80](v0[214] + 40))
  {
    id v3 = v1;
    sub_21CB1448C(v1);

    swift_unknownObjectRelease();
  }

  *(unsigned char *)(v0[214] + OBJC_IVAR____TtC7FMFCore20FMFRefreshController_firstRefreshCompleted) = 1;
  swift_release_n();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_21CA7388C(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return MEMORY[0x270FA2498](sub_21CA738AC, 0, 0);
}

uint64_t sub_21CA738AC()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 32) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_21CA73944;
  return MEMORY[0x270F29718]();
}

uint64_t sub_21CA73944(uint64_t a1)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *v2;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v6 = *(uint64_t (**)(void))(v5 + 8);
    return v6();
  }
  else
  {
    *(void *)(v4 + 40) = a1;
    return MEMORY[0x270FA2498](sub_21CA7446C, 0, 0);
  }
}

uint64_t sub_21CA73A90(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return MEMORY[0x270FA2498](sub_21CA73AB0, 0, 0);
}

uint64_t sub_21CA73AB0()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 32) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_21CA73B48;
  return MEMORY[0x270F29628]();
}

uint64_t sub_21CA73B48(uint64_t a1)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *v2;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v6 = *(uint64_t (**)(void))(v5 + 8);
    return v6();
  }
  else
  {
    *(void *)(v4 + 40) = a1;
    return MEMORY[0x270FA2498](sub_21CA73C94, 0, 0);
  }
}

uint64_t sub_21CA73C94()
{
  **(void **)(v0 + 16) = *(void *)(v0 + 40);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21CA73CB8(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_21CA73CE0()
{
  return sub_21CA0DA98(MEMORY[0x263F8EEA0], 32);
}

uint64_t sub_21CA73CFC()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_21CA73D38(uint64_t a1, void *a2)
{
  return sub_21CA71DD8(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24), *(NSObject **)(v2 + 32), (void (*)(uint64_t, uint64_t *))sub_21CA712D0, "FMFRefreshController: fmfd returned %ld following");
}

uint64_t sub_21CA73D8C()
{
  swift_release();
  swift_release();

  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t sub_21CA73DD4(uint64_t a1, void *a2)
{
  return sub_21CA71DD8(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24), *(NSObject **)(v2 + 32), (void (*)(uint64_t, uint64_t *))sub_21CA71804, "FMFRefreshController: fmfd returned %ld followers");
}

uint64_t sub_21CA73E24()
{
  return sub_21CA0DA98(MEMORY[0x263F8EED8], 32);
}

void sub_21CA73E40()
{
  sub_21CA7208C(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_21CA73E48()
{
  return sub_21CA743E4(MEMORY[0x263F8EEE8], MEMORY[0x263F8EED8], 40);
}

uint64_t sub_21CA73E78(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_21CA73F2C;
  return sub_21CA72138(a1, v4, v5, v6);
}

uint64_t sub_21CA73F2C()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_21CA74020(uint64_t a1)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[2] = a1;
  v4[3] = v1;
  v4[1] = sub_21CA65B10;
  return MEMORY[0x270FA2498](sub_21CA738AC, 0, 0);
}

uint64_t sub_21CA740CC(uint64_t a1)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[2] = a1;
  v4[3] = v1;
  v4[1] = sub_21CA73F2C;
  return MEMORY[0x270FA2498](sub_21CA73AB0, 0, 0);
}

uint64_t sub_21CA74178(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FMFIntermediateFriend();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_21CA741DC(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_21CA74238(uint64_t a1)
{
  return a1;
}

uint64_t sub_21CA7428C()
{
  return sub_21CA0DA98(MEMORY[0x263F8EEA0], 33);
}

uint64_t sub_21CA742A8()
{
  return sub_21CA70964(*(void *)(v0 + 16), *(void *)(v0 + 24), *(unsigned char *)(v0 + 32));
}

uint64_t sub_21CA742B4()
{
  return sub_21CA743E4(MEMORY[0x263F8EED8], MEMORY[0x263F8EEA0], 41);
}

void sub_21CA742E4()
{
  sub_21CA7045C(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(unsigned char *)(v0 + 40));
}

uint64_t sub_21CA742F4()
{
  swift_release();
  swift_release();

  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t sub_21CA74334()
{
  swift_release();
  swift_release();
  swift_release();

  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_21CA7437C()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_21CA743B4()
{
  return sub_21CA743E4(MEMORY[0x263F8EED8], MEMORY[0x263F8EED8], 40);
}

uint64_t sub_21CA743E4(void (*a1)(void), void (*a2)(void), uint64_t a3)
{
  a1(*(void *)(v3 + 16));
  a2(*(void *)(v3 + 32));

  return MEMORY[0x270FA0238](v3, a3, 7);
}

void sub_21CA74448()
{
  sub_21CA6FEE8(v0[2], v0[3], v0[4]);
}

id sub_21CA74454()
{
  return sub_21CA6FBB8(v0);
}

uint64_t sub_21CA7445C()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

void sub_21CA744C0(char *a1@<X8>)
{
}

void sub_21CA744D8(char *a1@<X8>)
{
}

void *FMLocationShiftingRequest.__allocating_init(identifier:location:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id result = (void *)swift_allocObject();
  result[2] = a3;
  result[3] = a1;
  result[4] = a2;
  return result;
}

uint64_t FMLocationShiftingRequest.deinit()
{
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t FMLocationShifter.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  FMLocationShifter.init()();
  return v0;
}

uint64_t sub_21CA74598()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  return MEMORY[0x270FA0238](v0, 48, 7);
}

void sub_21CA745E0(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v26 = sub_21CB88110();
  uint64_t v8 = *(void *)(v26 - 8);
  MEMORY[0x270FA5388](v26);
  uint64_t v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v27 = *(id *)(a1 + 16);
  uint64_t v11 = *(void **)(a2 + 16);
  objc_msgSend(v11, sel_coordinate);
  double v13 = v12;
  objc_msgSend(v11, sel_coordinate);
  double v15 = v14;
  objc_msgSend(v11, sel_horizontalAccuracy);
  double v17 = v16;
  uint64_t v18 = (void *)swift_allocObject();
  void v18[2] = a2;
  v18[3] = a3;
  void v18[4] = a4;
  uint64_t v32 = sub_21CA7521C;
  uint64_t v33 = v18;
  uint64_t aBlock = MEMORY[0x263EF8330];
  uint64_t v29 = 1107296256;
  unint64_t v30 = sub_21CA74DE0;
  uint64_t v31 = &unk_26CD6A7D0;
  uint64_t v19 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  id v20 = a4;
  swift_release();
  uint64_t v21 = (void *)swift_allocObject();
  void v21[2] = a3;
  v21[3] = a2;
  v21[4] = v20;
  uint64_t v32 = sub_21CA7522C;
  uint64_t v33 = v21;
  uint64_t aBlock = MEMORY[0x263EF8330];
  uint64_t v29 = 1107296256;
  unint64_t v30 = sub_21CB4F760;
  uint64_t v31 = &unk_26CD6A820;
  uint64_t v22 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  id v23 = v20;
  swift_release();
  sub_21CA182AC();
  uint64_t v24 = v26;
  (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, *MEMORY[0x263F8F080], v26);
  uint64_t v25 = (void *)sub_21CB88940();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v24);
  objc_msgSend(v27, sel_shiftCoordinate_accuracy_withCompletionHandler_mustGoToNetworkCallback_errorHandler_callbackQueue_, v19, 0, v22, v25, v13, v15, v17);

  _Block_release(v22);
  _Block_release(v19);
}

uint64_t sub_21CA748D0(uint64_t a1, uint64_t a2, void *a3, double a4, double a5, double a6)
{
  id v51 = a3;
  uint64_t v11 = sub_21CB87590();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  double v14 = (char *)&v48 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v15 = *(void **)(a1 + 16);
  objc_msgSend(v15, sel_altitude);
  double v17 = v16;
  objc_msgSend(v15, sel_verticalAccuracy);
  double v19 = v18;
  objc_msgSend(v15, sel_course);
  double v21 = v20;
  objc_msgSend(v15, sel_speed);
  double v23 = v22;
  id v24 = objc_msgSend(v15, sel_timestamp);
  sub_21CB87560();

  id v25 = objc_allocWithZone(MEMORY[0x263F00A50]);
  uint64_t v26 = (void *)sub_21CB87510();
  id v27 = objc_msgSend(v25, sel_initWithCoordinate_altitude_horizontalAccuracy_verticalAccuracy_course_speed_timestamp_, v26, a4, a5, v17, a6, v19, v21, v23);

  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  uint64_t v28 = a1;
  objc_msgSend(v27, sel_setReferenceFrame_, 2);
  uint64_t v29 = *(void *)(a1 + 24);
  unint64_t v30 = *(void *)(v28 + 32);
  type metadata accessor for FMLocationShiftingRequest();
  uint64_t v31 = (void *)swift_allocObject();
  v31[2] = v27;
  v31[3] = v29;
  v31[4] = v30;
  swift_beginAccess();
  swift_bridgeObjectRetain();
  id v32 = v27;
  uint64_t v33 = swift_retain();
  MEMORY[0x21D4B55E0](v33);
  if (*(void *)((*(void *)(a2 + 16) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)(a2 + 16) & 0xFFFFFFFFFFFFFF8)
                                                                                     + 0x18) >> 1)
    sub_21CB88560();
  sub_21CB885A0();
  sub_21CB88530();
  swift_endAccess();
  if (qword_267C94990 != -1) {
    swift_once();
  }
  uint64_t v34 = sub_21CB880A0();
  sub_21CA4CC18(v34, (uint64_t)qword_267CA5368);
  id v35 = v32;
  swift_retain_n();
  id v36 = v15;
  id v37 = v35;
  id v38 = v36;
  uint64_t v39 = sub_21CB88070();
  os_log_type_t v40 = sub_21CB88880();
  int v41 = v40;
  if (os_log_type_enabled(v39, v40))
  {
    uint64_t v42 = swift_slowAlloc();
    uint64_t v43 = (void *)swift_slowAlloc();
    uint64_t v50 = swift_slowAlloc();
    v53[0] = v50;
    *(_DWORD *)uint64_t v42 = 136315650;
    int v49 = v41;
    swift_bridgeObjectRetain();
    uint64_t v52 = sub_21CA4E450(v29, v30, v53);
    sub_21CB889C0();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v42 + 12) = 2112;
    uint64_t v52 = (uint64_t)v37;
    id v44 = v37;
    sub_21CB889C0();
    *uint64_t v43 = v37;

    *(_WORD *)(v42 + 22) = 2112;
    uint64_t v52 = (uint64_t)v38;
    id v45 = v38;
    sub_21CB889C0();
    v43[1] = v38;

    _os_log_impl(&dword_21CA00000, v39, (os_log_type_t)v49, "FMLocationShifter: shifting completed %s newLocation: %@ oldLocation: %@", (uint8_t *)v42, 0x20u);
    sub_21CA57E34(&qword_267C95020);
    swift_arrayDestroy();
    MEMORY[0x21D4B6B70](v43, -1, -1);
    uint64_t v46 = v50;
    swift_arrayDestroy();
    MEMORY[0x21D4B6B70](v46, -1, -1);
    MEMORY[0x21D4B6B70](v42, -1, -1);
  }
  else
  {

    swift_release_n();
  }
  objc_msgSend(v51, sel_signal);

  return swift_release();
}

uint64_t sub_21CA74DE0(uint64_t a1, double a2, double a3, double a4)
{
  uint64_t v7 = *(void (**)(uint64_t, double, double, double))(a1 + 32);
  uint64_t v8 = swift_retain();
  v7(v8, a2, a3, a4);

  return swift_release();
}

id sub_21CA74E4C(void *a1, uint64_t a2, uint64_t a3, void *a4)
{
  if (qword_267C94990 != -1) {
    swift_once();
  }
  uint64_t v7 = (void *)(a2 + 16);
  uint64_t v8 = sub_21CB880A0();
  sub_21CA4CC18(v8, (uint64_t)qword_267CA5368);
  id v9 = a1;
  id v10 = a1;
  uint64_t v11 = sub_21CB88070();
  os_log_type_t v12 = sub_21CB88860();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = (uint8_t *)swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    v20[0] = v14;
    *(_DWORD *)uint64_t v13 = 136315138;
    id v15 = a1;
    sub_21CA57E34(&qword_267C975A0);
    uint64_t v16 = sub_21CB88310();
    sub_21CA4E450(v16, v17, v20);
    sub_21CB889C0();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_21CA00000, v11, v12, "FMLocationShifter: shifting request error %s", v13, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x21D4B6B70](v14, -1, -1);
    MEMORY[0x21D4B6B70](v13, -1, -1);
  }
  else
  {
  }
  swift_beginAccess();
  uint64_t v18 = swift_retain();
  MEMORY[0x21D4B55E0](v18);
  if (*(void *)((*v7 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v7 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_21CB88560();
  }
  sub_21CB885A0();
  sub_21CB88530();
  swift_endAccess();
  return objc_msgSend(a4, sel_signal);
}

id *FMLocationShifter.deinit()
{
  return v0;
}

uint64_t FMLocationShifter.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t method lookup function for FMLocationShiftingRequest(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for FMLocationShiftingRequest);
}

uint64_t dispatch thunk of FMLocationShiftingRequest.__allocating_init(identifier:location:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t method lookup function for FMLocationShifter(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for FMLocationShifter);
}

uint64_t dispatch thunk of FMLocationShifter.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t sub_21CA75184()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_21CA751BC()
{
  swift_release();
  swift_release();
  swift_release();

  return MEMORY[0x270FA0238](v0, 48, 7);
}

void sub_21CA7520C()
{
  sub_21CA745E0(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void **)(v0 + 40));
}

uint64_t sub_21CA7521C(double a1, double a2, double a3)
{
  return sub_21CA748D0(*(void *)(v3 + 16), *(void *)(v3 + 24), *(void **)(v3 + 32), a1, a2, a3);
}

id sub_21CA7522C(void *a1)
{
  return sub_21CA74E4C(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void **)(v1 + 32));
}

void *assignWithCopy for FMFSimpleLocation(void *__dst, void *__src)
{
  uint64_t v4 = (char *)(__src + 39);
  uint64_t v5 = __src[21];
  if (!__dst[21])
  {
    if (v5)
    {
      void *__dst = *__src;
      __dst[1] = __src[1];
      __dst[2] = __src[2];
      __dst[3] = __src[3];
      id v10 = (char *)(__src + 39);
      __dst[4] = __src[4];
      __dst[5] = __src[5];
      __dst[6] = __src[6];
      __dst[7] = __src[7];
      __dst[8] = __src[8];
      __dst[9] = __src[9];
      __dst[10] = __src[10];
      __dst[11] = __src[11];
      __dst[12] = __src[12];
      __dst[13] = __src[13];
      __dst[14] = __src[14];
      __dst[15] = __src[15];
      __dst[16] = __src[16];
      __dst[17] = __src[17];
      __dst[18] = __src[18];
      __dst[19] = __src[19];
      __dst[20] = __src[20];
      __dst[21] = __src[21];
      __dst[22] = __src[22];
      __dst[23] = __src[23];
      __dst[24] = __src[24];
      __dst[25] = __src[25];
      __dst[26] = __src[26];
      __dst[27] = __src[27];
      __dst[28] = __src[28];
      __dst[29] = __src[29];
      __dst[30] = __src[30];
      __dst[31] = __src[31];
      __dst[32] = __src[32];
      __dst[33] = __src[33];
      __dst[34] = __src[34];
      __dst[35] = __src[35];
      __dst[36] = __src[36];
      __dst[37] = __src[37];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v4 = v10;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_8;
    }
LABEL_7:
    memcpy(__dst, __src, 0x130uLL);
    goto LABEL_8;
  }
  if (!v5)
  {
    sub_21CA757AC((uint64_t)__dst);
    goto LABEL_7;
  }
  void *__dst = *__src;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __dst[1] = __src[1];
  __dst[2] = __src[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __dst[3] = __src[3];
  __dst[4] = __src[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __dst[5] = __src[5];
  __dst[6] = __src[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __dst[7] = __src[7];
  __dst[8] = __src[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __dst[9] = __src[9];
  __dst[10] = __src[10];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __dst[11] = __src[11];
  __dst[12] = __src[12];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __dst[13] = __src[13];
  __dst[14] = __src[14];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __dst[15] = __src[15];
  __dst[16] = __src[16];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __dst[17] = __src[17];
  __dst[18] = __src[18];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __dst[19] = __src[19];
  __dst[20] = __src[20];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __dst[21] = __src[21];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __dst[22] = __src[22];
  __dst[23] = __src[23];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __dst[24] = __src[24];
  __dst[25] = __src[25];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __dst[26] = __src[26];
  __dst[27] = __src[27];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __dst[28] = __src[28];
  __dst[29] = __src[29];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __dst[30] = __src[30];
  __dst[31] = __src[31];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __dst[32] = __src[32];
  __dst[33] = __src[33];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __dst[34] = __src[34];
  __dst[35] = __src[35];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __dst[36] = __src[36];
  __dst[37] = __src[37];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_8:
  uint64_t v6 = (void *)__src[38];
  uint64_t v7 = (void *)__dst[38];
  __dst[38] = v6;
  id v8 = v6;

  *((unsigned char *)__dst + 312) = *v4;
  __dst[40] = __src[40];
  __dst[41] = __src[41];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((unsigned char *)__dst + 336) = *((unsigned char *)__src + 336);
  *((unsigned char *)__dst + 337) = *((unsigned char *)__src + 337);
  __dst[43] = __src[43];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((unsigned char *)__dst + 352) = v4[40];
  return __dst;
}

uint64_t sub_21CA757AC(uint64_t a1)
{
  return a1;
}

void *initializeWithTake for FMFSimpleLocation(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x161uLL);
}

void *assignWithTake for FMFSimpleLocation(void *__dst, char *__src)
{
  uint64_t v4 = __src + 312;
  if (!__dst[21]) {
    goto LABEL_5;
  }
  if (!*((void *)__src + 21))
  {
    sub_21CA757AC((uint64_t)__dst);
LABEL_5:
    memcpy(__dst, __src, 0x130uLL);
    goto LABEL_6;
  }
  void *__dst = *(void *)__src;
  swift_bridgeObjectRelease();
  uint64_t v5 = *((void *)__src + 2);
  __dst[1] = *((void *)__src + 1);
  __dst[2] = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *((void *)__src + 4);
  __dst[3] = *((void *)__src + 3);
  __dst[4] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *((void *)__src + 6);
  __dst[5] = *((void *)__src + 5);
  __dst[6] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *((void *)__src + 8);
  __dst[7] = *((void *)__src + 7);
  __dst[8] = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *((void *)__src + 10);
  __dst[9] = *((void *)__src + 9);
  __dst[10] = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = *((void *)__src + 12);
  __dst[11] = *((void *)__src + 11);
  __dst[12] = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = *((void *)__src + 14);
  __dst[13] = *((void *)__src + 13);
  __dst[14] = v11;
  swift_bridgeObjectRelease();
  uint64_t v12 = *((void *)__src + 16);
  __dst[15] = *((void *)__src + 15);
  __dst[16] = v12;
  swift_bridgeObjectRelease();
  uint64_t v13 = *((void *)__src + 18);
  __dst[17] = *((void *)__src + 17);
  __dst[18] = v13;
  swift_bridgeObjectRelease();
  uint64_t v14 = *((void *)__src + 20);
  __dst[19] = *((void *)__src + 19);
  __dst[20] = v14;
  swift_bridgeObjectRelease();
  __dst[21] = *((void *)__src + 21);
  swift_bridgeObjectRelease();
  uint64_t v15 = *((void *)__src + 23);
  __dst[22] = *((void *)__src + 22);
  __dst[23] = v15;
  swift_bridgeObjectRelease();
  uint64_t v16 = *((void *)__src + 25);
  __dst[24] = *((void *)__src + 24);
  __dst[25] = v16;
  swift_bridgeObjectRelease();
  uint64_t v17 = *((void *)__src + 27);
  __dst[26] = *((void *)__src + 26);
  __dst[27] = v17;
  swift_bridgeObjectRelease();
  uint64_t v18 = *((void *)__src + 29);
  __dst[28] = *((void *)__src + 28);
  __dst[29] = v18;
  swift_bridgeObjectRelease();
  uint64_t v19 = *((void *)__src + 31);
  __dst[30] = *((void *)__src + 30);
  __dst[31] = v19;
  swift_bridgeObjectRelease();
  uint64_t v20 = *((void *)__src + 33);
  __dst[32] = *((void *)__src + 32);
  __dst[33] = v20;
  swift_bridgeObjectRelease();
  uint64_t v21 = *((void *)__src + 35);
  __dst[34] = *((void *)__src + 34);
  __dst[35] = v21;
  swift_bridgeObjectRelease();
  uint64_t v22 = *((void *)__src + 37);
  __dst[36] = *((void *)__src + 36);
  __dst[37] = v22;
  swift_bridgeObjectRelease();
LABEL_6:
  double v23 = (void *)__dst[38];
  __dst[38] = *((void *)__src + 38);

  *((unsigned char *)__dst + 312) = *v4;
  uint64_t v24 = *((void *)__src + 41);
  __dst[40] = *((void *)__src + 40);
  __dst[41] = v24;
  swift_bridgeObjectRelease();
  *((_WORD *)__dst + 168) = *((_WORD *)__src + 168);
  __dst[43] = *((void *)__src + 43);
  swift_bridgeObjectRelease();
  *((unsigned char *)__dst + 352) = v4[40];
  return __dst;
}

uint64_t sub_21CA759F0()
{
  sub_21CA76174(v0, (uint64_t)v18);
  unint64_t v1 = *(void *)(v0 + 328);
  if (!v1) {
    goto LABEL_9;
  }
  uint64_t v2 = *(void *)(v0 + 320);
  uint64_t v3 = sub_21CB88320();
  uint64_t v5 = v4;
  swift_bridgeObjectRetain();
  v6._countAndFlagsBits = v3;
  v6._object = v5;
  FMFDefaultLabel.init(rawValue:)(v6);
  uint64_t v7 = v2;
  unint64_t v8 = v1;
  if (__src[0] != 5)
  {
    uint64_t v7 = FMFDefaultLabel.localizedLabel.getter();
    unint64_t v8 = v9;
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  uint64_t v10 = HIBYTE(v8) & 0xF;
  if ((v8 & 0x2000000000000000) == 0) {
    uint64_t v10 = v7 & 0xFFFFFFFFFFFFLL;
  }
  if (v10)
  {
    uint64_t v11 = sub_21CB88320();
    uint64_t v13 = v12;
    swift_bridgeObjectRetain();
    v14._countAndFlagsBits = v11;
    v14._object = v13;
    FMFDefaultLabel.init(rawValue:)(v14);
    if (__src[0] != 5)
    {
      uint64_t v2 = FMFDefaultLabel.localizedLabel.getter();
      swift_bridgeObjectRelease();
    }
  }
  else
  {
LABEL_9:
    sub_21CA76174((uint64_t)v18, (uint64_t)__src);
    if (sub_21CA76890((uint64_t)__src) == 1)
    {
      return 0;
    }
    else
    {
      memcpy(v16, __src, sizeof(v16));
      return FMFAddress.displayAddress.getter();
    }
  }
  return v2;
}

unint64_t sub_21CA75B60(char a1)
{
  unint64_t result = 0x73736572646461;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x64757469676E6F6CLL;
      break;
    case 2:
      unint64_t result = 0x656475746974616CLL;
      break;
    case 3:
      unint64_t result = 0xD000000000000012;
      break;
    case 4:
      unint64_t result = 0x6D617473656D6974;
      break;
    case 5:
      unint64_t result = 0x736C6562616CLL;
      break;
    case 6:
      unint64_t result = 0x756363616E497369;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_21CA75C78(unsigned __int8 *a1, char *a2)
{
  return sub_21CA7F460(*a1, *a2);
}

uint64_t sub_21CA75C84()
{
  return sub_21CAD4EC8();
}

uint64_t sub_21CA75C90()
{
  return sub_21CAD485C();
}

uint64_t sub_21CA75C98()
{
  return sub_21CAD4EC8();
}

uint64_t sub_21CA75CA0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_21CA76DA8();
  *a1 = result;
  return result;
}

unint64_t sub_21CA75CD0@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_21CA75B60(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_21CA75CFC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_21CA76DA8();
  *a1 = result;
  return result;
}

uint64_t sub_21CA75D24(uint64_t a1)
{
  unint64_t v2 = sub_21CA24DA4();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_21CA75D60(uint64_t a1)
{
  unint64_t v2 = sub_21CA24DA4();

  return MEMORY[0x270FA00B8](a1, v2);
}

void sub_21CA75DCC(void *a1)
{
  uint64_t v4 = sub_21CA57E34(&qword_267C95098);
  uint64_t v12 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  Swift::String v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21CA76174(v1, (uint64_t)v14);
  uint64_t v7 = *(void **)(v1 + 304);
  uint64_t v11 = *(void *)(v1 + 344);
  sub_21CA2B2CC(a1, a1[3]);
  sub_21CA24DA4();
  sub_21CB890C0();
  id v8 = objc_msgSend(v7, sel_timestamp);
  if (v8)
  {
    unint64_t v9 = v8;
    sub_21CA76174((uint64_t)v14, (uint64_t)v13);
    char v15 = 0;
    sub_21CA76468((uint64_t)v14, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_21CA5E3D0);
    sub_21CA57E34(&qword_267C951E0);
    sub_21CA764F4();
    sub_21CB88EB0();
    if (v2)
    {

      sub_21CA76468((uint64_t)v14, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_21CA1358C);
    }
    else
    {
      sub_21CA76468((uint64_t)v14, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_21CA1358C);
      objc_msgSend(v7, sel_coordinate);
      LOBYTE(v13[0]) = 2;
      sub_21CB88E90();
      objc_msgSend(v7, sel_coordinate);
      LOBYTE(v13[0]) = 1;
      sub_21CB88E90();
      objc_msgSend(v7, sel_horizontalAccuracy);
      LOBYTE(v13[0]) = 3;
      sub_21CB88E90();
      objc_msgSend(v9, sel_fm_epoch);
      LOBYTE(v13[0]) = 4;
      sub_21CB88EC0();
      v13[0] = v11;
      char v15 = 5;
      swift_bridgeObjectRetain();
      sub_21CA57E34(&qword_267C950B0);
      sub_21CA765BC();
      sub_21CB88EB0();
      swift_bridgeObjectRelease();
    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v6, v4);
  }
  else
  {
    __break(1u);
  }
}

void sub_21CA76128(void *a1)
{
}

double sub_21CA76144(_OWORD *a1)
{
  double result = 0.0;
  a1[17] = 0u;
  a1[18] = 0u;
  a1[15] = 0u;
  a1[16] = 0u;
  a1[13] = 0u;
  a1[14] = 0u;
  a1[11] = 0u;
  a1[12] = 0u;
  a1[9] = 0u;
  a1[10] = 0u;
  a1[7] = 0u;
  a1[8] = 0u;
  a1[5] = 0u;
  a1[6] = 0u;
  a1[3] = 0u;
  a1[4] = 0u;
  a1[1] = 0u;
  a1[2] = 0u;
  *a1 = 0u;
  return result;
}

uint64_t sub_21CA76174(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_21CA57E34(&qword_267C951E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_21CA761DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FMFLabelledLocation();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_21CA76240(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for FMFLabelledLocation();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t *sub_21CA7629C(uint64_t *a1)
{
  uint64_t v2 = (void *)a1[38];
  sub_21CA5E3D0(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9], a1[10], a1[11], a1[12], a1[13], a1[14], a1[15], a1[16], a1[17], a1[18],
    a1[19],
    a1[20],
    a1[21]);
  swift_bridgeObjectRetain();
  id v3 = v2;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t *sub_21CA76350(uint64_t *a1)
{
  uint64_t v2 = (void *)a1[38];
  sub_21CA1358C(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9], a1[10], a1[11], a1[12], a1[13], a1[14], a1[15], a1[16], a1[17], a1[18],
    a1[19],
    a1[20],
    a1[21]);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_21CA76404(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FMFLabelledLocation();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_21CA76468(uint64_t a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))
{
  long long v6 = *(_OWORD *)(a1 + 256);
  long long v7 = *(_OWORD *)(a1 + 272);
  long long v4 = *(_OWORD *)(a1 + 224);
  long long v5 = *(_OWORD *)(a1 + 240);
  a2(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
    *(void *)(a1 + 152),
    *(void *)(a1 + 160),
    *(void *)(a1 + 168),
    *(void *)(a1 + 176),
    *(void *)(a1 + 184),
    *(void *)(a1 + 192),
    *(void *)(a1 + 200),
    *(void *)(a1 + 208),
    *(void *)(a1 + 216),
    v4,
    *((void *)&v4 + 1),
    v5,
    *((void *)&v5 + 1),
    v6,
    *((void *)&v6 + 1),
    v7,
    *((void *)&v7 + 1),
    *(void *)(a1 + 288),
    *(void *)(a1 + 296));
  return a1;
}

unint64_t sub_21CA764F4()
{
  unint64_t result = qword_267C950A0;
  if (!qword_267C950A0)
  {
    sub_21CA5EEBC(&qword_267C951E0);
    sub_21CA76568();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C950A0);
  }
  return result;
}

unint64_t sub_21CA76568()
{
  unint64_t result = qword_267C950A8;
  if (!qword_267C950A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C950A8);
  }
  return result;
}

unint64_t sub_21CA765BC()
{
  unint64_t result = qword_267C950B8;
  if (!qword_267C950B8)
  {
    sub_21CA5EEBC(&qword_267C950B0);
    sub_21CA6246C((unint64_t *)&qword_267C950C0, (unint64_t *)&qword_267C950C8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C950B8);
  }
  return result;
}

uint64_t sub_21CA76668(uint64_t a1, uint64_t a2)
{
  sub_21CA76174(a1, (uint64_t)v22);
  long long v4 = *(void **)(a1 + 304);
  uint64_t v5 = *(void *)(a1 + 344);
  sub_21CA76174(a2, (uint64_t)v23);
  long long v6 = *(void **)(a2 + 304);
  uint64_t v7 = *(void *)(a2 + 344);
  sub_21CA76174((uint64_t)v22, (uint64_t)v24);
  if (sub_21CA76890((uint64_t)v24) != 1)
  {
    sub_21CA76174((uint64_t)v22, (uint64_t)__src);
    sub_21CA76174((uint64_t)v23, (uint64_t)v20);
    if (sub_21CA76890((uint64_t)v20) != 1)
    {
      sub_21CA76174((uint64_t)v23, (uint64_t)__dst);
      memcpy(v15, __dst, sizeof(v15));
      char v8 = _s7FMFCore10FMFAddressV2eeoiySbAC_ACtFZ_0((uint64_t)__src, (uint64_t)v15);
      memcpy(v17, __src, sizeof(v17));
      sub_21CA76174((uint64_t)v22, (uint64_t)v18);
      sub_21CA76A94((uint64_t)v18);
      sub_21CA76BE0((uint64_t)v17);
      if (v8) {
        goto LABEL_8;
      }
LABEL_12:
      char v12 = 0;
      return v12 & 1;
    }
    memcpy(__dst, __src, sizeof(__dst));
    sub_21CA76174((uint64_t)v22, (uint64_t)v17);
    sub_21CA76174((uint64_t)v22, (uint64_t)v18);
    sub_21CA76A94((uint64_t)v18);
    sub_21CA76A94((uint64_t)v17);
    sub_21CA76BE0((uint64_t)__dst);
LABEL_6:
    sub_21CA76174((uint64_t)v22, (uint64_t)v20);
    sub_21CA76174((uint64_t)v23, (uint64_t)&v21);
    sub_21CA76468((uint64_t)v23, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_21CA5E3D0);
    sub_21CA768A8((uint64_t)v20);
    goto LABEL_12;
  }
  sub_21CA76174((uint64_t)v23, (uint64_t)v20);
  if (sub_21CA76890((uint64_t)v20) != 1) {
    goto LABEL_6;
  }
LABEL_8:
  sub_21CA76A54();
  id v9 = v4;
  id v10 = v6;
  char v11 = sub_21CB88960();

  if ((v11 & 1) == 0) {
    goto LABEL_12;
  }
  char v12 = (v5 | v7) == 0;
  if (v5 && v7)
  {
    swift_bridgeObjectRetain();
    uint64_t v13 = swift_bridgeObjectRetain();
    char v12 = sub_21CAC9198(v13, v7);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v12 & 1;
}

uint64_t sub_21CA76890(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 168);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

uint64_t sub_21CA768A8(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 312);
  uint64_t v17 = *(void *)(a1 + 304);
  uint64_t v3 = *(void *)(a1 + 320);
  uint64_t v4 = *(void *)(a1 + 328);
  uint64_t v5 = *(void *)(a1 + 336);
  uint64_t v6 = *(void *)(a1 + 344);
  uint64_t v7 = *(void *)(a1 + 352);
  uint64_t v8 = *(void *)(a1 + 360);
  long long v15 = *(_OWORD *)(a1 + 384);
  long long v16 = *(_OWORD *)(a1 + 368);
  long long v13 = *(_OWORD *)(a1 + 416);
  long long v14 = *(_OWORD *)(a1 + 400);
  long long v11 = *(_OWORD *)(a1 + 448);
  long long v12 = *(_OWORD *)(a1 + 432);
  long long v10 = *(_OWORD *)(a1 + 464);
  sub_21CA1358C(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
    *(void *)(a1 + 152),
    *(void *)(a1 + 160),
    *(void *)(a1 + 168));
  sub_21CA1358C(v17, v2, v3, v4, v5, v6, v7, v8, v16, *((uint64_t *)&v16 + 1), v15, *((uint64_t *)&v15 + 1), v14, *((uint64_t *)&v14 + 1), v13, *((uint64_t *)&v13 + 1), v12, *((uint64_t *)&v12 + 1), v11,
    *((uint64_t *)&v11 + 1),
    v10,
    *((uint64_t *)&v10 + 1));
  return a1;
}

unint64_t sub_21CA76A54()
{
  unint64_t result = qword_267C950D0;
  if (!qword_267C950D0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_267C950D0);
  }
  return result;
}

uint64_t sub_21CA76A94(uint64_t a1)
{
  return a1;
}

uint64_t sub_21CA76BE0(uint64_t a1)
{
  return a1;
}

unint64_t sub_21CA76D54()
{
  unint64_t result = qword_267C950E0;
  if (!qword_267C950E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C950E0);
  }
  return result;
}

uint64_t sub_21CA76DA8()
{
  unint64_t v0 = sub_21CB88D70();
  swift_bridgeObjectRelease();
  if (v0 >= 7) {
    return 7;
  }
  else {
    return v0;
  }
}

void *sub_21CA76DF4(void *a1, char *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v17 = *(void *)a2;
    *uint64_t v4 = *(void *)a2;
    uint64_t v4 = (void *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = *((void *)a2 + 1);
    *a1 = *(void *)a2;
    a1[1] = v7;
    uint64_t v8 = *((void *)a2 + 3);
    a1[2] = *((void *)a2 + 2);
    a1[3] = v8;
    uint64_t v9 = *((void *)a2 + 5);
    a1[4] = *((void *)a2 + 4);
    a1[5] = v9;
    uint64_t v10 = *((void *)a2 + 7);
    a1[6] = *((void *)a2 + 6);
    a1[7] = v10;
    uint64_t v11 = *((void *)a2 + 9);
    uint64_t v12 = a3[10];
    __dst = (char *)a1 + v12;
    uint64_t v29 = &a2[v12];
    a1[8] = *((void *)a2 + 8);
    a1[9] = v11;
    uint64_t v13 = sub_21CB87590();
    uint64_t v30 = *(void *)(v13 - 8);
    long long v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v14(v29, 1, v13))
    {
      uint64_t v15 = sub_21CA57E34((uint64_t *)&unk_267C951B0);
      memcpy(__dst, v29, *(void *)(*(void *)(v15 - 8) + 64));
      uint64_t v16 = v30;
    }
    else
    {
      uint64_t v16 = v30;
      (*(void (**)(char *, char *, uint64_t))(v30 + 16))(__dst, v29, v13);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v30 + 56))(__dst, 0, 1, v13);
    }
    uint64_t v18 = a3[11];
    uint64_t v19 = (char *)v4 + v18;
    uint64_t v20 = &a2[v18];
    if (v14(&a2[v18], 1, v13))
    {
      uint64_t v21 = sub_21CA57E34((uint64_t *)&unk_267C951B0);
      memcpy(v19, v20, *(void *)(*(void *)(v21 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v19, v20, v13);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v19, 0, 1, v13);
    }
    uint64_t v22 = a3[12];
    double v23 = (char *)v4 + v22;
    uint64_t v24 = &a2[v22];
    if (v14(&a2[v22], 1, v13))
    {
      uint64_t v25 = sub_21CA57E34((uint64_t *)&unk_267C951B0);
      memcpy(v23, v24, *(void *)(*(void *)(v25 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v23, v24, v13);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v23, 0, 1, v13);
    }
    uint64_t v26 = a3[14];
    *((unsigned char *)v4 + a3[13]) = a2[a3[13]];
    *((unsigned char *)v4 + v26) = a2[v26];
    uint64_t v27 = a3[16];
    *((unsigned char *)v4 + a3[15]) = a2[a3[15]];
    *((unsigned char *)v4 + v27) = a2[v27];
    *(void *)((char *)v4 + a3[17]) = *(void *)&a2[a3[17]];
    swift_bridgeObjectRetain();
  }
  return v4;
}

char *sub_21CA77150(char *a1, void *a2, int *a3)
{
  *(void *)a1 = *a2;
  *((void *)a1 + 1) = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)a1 + 2) = a2[2];
  *((void *)a1 + 3) = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)a1 + 4) = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)a1 + 5) = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)a1 + 6) = a2[6];
  *((void *)a1 + 7) = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)a1 + 8) = a2[8];
  *((void *)a1 + 9) = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[10];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_21CB87590();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    uint64_t v14 = sub_21CA57E34((uint64_t *)&unk_267C951B0);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
LABEL_7:
  uint64_t v15 = a3[11];
  uint64_t v16 = &a1[v15];
  uint64_t v17 = (char *)a2 + v15;
  int v18 = v11(&a1[v15], 1, v9);
  int v19 = v11(v17, 1, v9);
  if (v18)
  {
    if (!v19)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v16, v17, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v16, 0, 1, v9);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v19)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v16, v9);
LABEL_12:
    uint64_t v20 = sub_21CA57E34((uint64_t *)&unk_267C951B0);
    memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v16, v17, v9);
LABEL_13:
  uint64_t v21 = a3[12];
  uint64_t v22 = &a1[v21];
  double v23 = (char *)a2 + v21;
  int v24 = v11(&a1[v21], 1, v9);
  int v25 = v11(v23, 1, v9);
  if (!v24)
  {
    if (!v25)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v22, v23, v9);
      goto LABEL_19;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v22, v9);
    goto LABEL_18;
  }
  if (v25)
  {
LABEL_18:
    uint64_t v26 = sub_21CA57E34((uint64_t *)&unk_267C951B0);
    memcpy(v22, v23, *(void *)(*(void *)(v26 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v22, v23, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v22, 0, 1, v9);
LABEL_19:
  a1[a3[13]] = *((unsigned char *)a2 + a3[13]);
  a1[a3[14]] = *((unsigned char *)a2 + a3[14]);
  a1[a3[15]] = *((unsigned char *)a2 + a3[15]);
  a1[a3[16]] = *((unsigned char *)a2 + a3[16]);
  *(void *)&a1[a3[17]] = *(void *)((char *)a2 + a3[17]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *sub_21CA775C4(_OWORD *a1, char *a2, int *a3)
{
  long long v6 = *((_OWORD *)a2 + 1);
  *a1 = *(_OWORD *)a2;
  a1[1] = v6;
  long long v7 = *((_OWORD *)a2 + 3);
  a1[2] = *((_OWORD *)a2 + 2);
  a1[3] = v7;
  a1[4] = *((_OWORD *)a2 + 4);
  uint64_t v8 = a3[10];
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = &a2[v8];
  uint64_t v11 = sub_21CB87590();
  uint64_t v12 = *(void *)(v11 - 8);
  int v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
  if (v13(v10, 1, v11))
  {
    uint64_t v14 = sub_21CA57E34((uint64_t *)&unk_267C951B0);
    memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  uint64_t v15 = a3[11];
  uint64_t v16 = (char *)a1 + v15;
  uint64_t v17 = &a2[v15];
  if (v13(&a2[v15], 1, v11))
  {
    uint64_t v18 = sub_21CA57E34((uint64_t *)&unk_267C951B0);
    memcpy(v16, v17, *(void *)(*(void *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v16, v17, v11);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v16, 0, 1, v11);
  }
  uint64_t v19 = a3[12];
  uint64_t v20 = (char *)a1 + v19;
  uint64_t v21 = &a2[v19];
  if (v13(&a2[v19], 1, v11))
  {
    uint64_t v22 = sub_21CA57E34((uint64_t *)&unk_267C951B0);
    memcpy(v20, v21, *(void *)(*(void *)(v22 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v20, v21, v11);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v20, 0, 1, v11);
  }
  uint64_t v23 = a3[14];
  *((unsigned char *)a1 + a3[13]) = a2[a3[13]];
  *((unsigned char *)a1 + v23) = a2[v23];
  uint64_t v24 = a3[16];
  *((unsigned char *)a1 + a3[15]) = a2[a3[15]];
  *((unsigned char *)a1 + v24) = a2[v24];
  *(void *)((char *)a1 + a3[17]) = *(void *)&a2[a3[17]];
  return a1;
}

char *sub_21CA7786C(char *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *(void *)a1 = *a2;
  *((void *)a1 + 1) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  *((void *)a1 + 2) = a2[2];
  *((void *)a1 + 3) = v7;
  swift_bridgeObjectRelease();
  *((void *)a1 + 4) = a2[4];
  swift_bridgeObjectRelease();
  *((void *)a1 + 5) = a2[5];
  swift_bridgeObjectRelease();
  uint64_t v8 = a2[7];
  *((void *)a1 + 6) = a2[6];
  *((void *)a1 + 7) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = a2[9];
  *((void *)a1 + 8) = a2[8];
  *((void *)a1 + 9) = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = a3[10];
  uint64_t v11 = &a1[v10];
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = sub_21CB87590();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48);
  int v16 = v15(v11, 1, v13);
  int v17 = v15(v12, 1, v13);
  if (v16)
  {
    if (!v17)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v12, v13);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v17)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v11, v13);
LABEL_6:
    uint64_t v18 = sub_21CA57E34((uint64_t *)&unk_267C951B0);
    memcpy(v11, v12, *(void *)(*(void *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v14 + 40))(v11, v12, v13);
LABEL_7:
  uint64_t v19 = a3[11];
  uint64_t v20 = &a1[v19];
  uint64_t v21 = (char *)a2 + v19;
  int v22 = v15(&a1[v19], 1, v13);
  int v23 = v15(v21, 1, v13);
  if (v22)
  {
    if (!v23)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v20, v21, v13);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v20, 0, 1, v13);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v23)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v20, v13);
LABEL_12:
    uint64_t v24 = sub_21CA57E34((uint64_t *)&unk_267C951B0);
    memcpy(v20, v21, *(void *)(*(void *)(v24 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v14 + 40))(v20, v21, v13);
LABEL_13:
  uint64_t v25 = a3[12];
  uint64_t v26 = &a1[v25];
  uint64_t v27 = (char *)a2 + v25;
  int v28 = v15(&a1[v25], 1, v13);
  int v29 = v15(v27, 1, v13);
  if (!v28)
  {
    if (!v29)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 40))(v26, v27, v13);
      goto LABEL_19;
    }
    (*(void (**)(char *, uint64_t))(v14 + 8))(v26, v13);
    goto LABEL_18;
  }
  if (v29)
  {
LABEL_18:
    uint64_t v30 = sub_21CA57E34((uint64_t *)&unk_267C951B0);
    memcpy(v26, v27, *(void *)(*(void *)(v30 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v26, v27, v13);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v26, 0, 1, v13);
LABEL_19:
  uint64_t v31 = a3[14];
  a1[a3[13]] = *((unsigned char *)a2 + a3[13]);
  a1[v31] = *((unsigned char *)a2 + v31);
  uint64_t v32 = a3[16];
  a1[a3[15]] = *((unsigned char *)a2 + a3[15]);
  a1[v32] = *((unsigned char *)a2 + v32);
  *(void *)&a1[a3[17]] = *(void *)((char *)a2 + a3[17]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_21CA77C80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_21CA57E34((uint64_t *)&unk_267C951B0);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 40);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_21CA77D34(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_21CA57E34((uint64_t *)&unk_267C951B0);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 40);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_21CA77DE0(char a1)
{
  uint64_t result = 25705;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x64496E6F73726570;
      break;
    case 2:
      uint64_t result = 0xD000000000000015;
      break;
    case 3:
      uint64_t result = 0xD000000000000019;
      break;
    case 4:
    case 10:
      uint64_t result = 0xD000000000000016;
      break;
    case 5:
      uint64_t result = 0xD000000000000014;
      break;
    case 6:
      unsigned int v3 = 1633972341;
      goto LABEL_8;
    case 7:
      unsigned int v3 = 1634038371;
LABEL_8:
      uint64_t result = v3 | 0x6954657400000000;
      break;
    case 8:
      uint64_t result = 0x73657269707865;
      break;
    case 9:
      uint64_t result = 0x746F4E646574706FLL;
      break;
    case 11:
      uint64_t result = 0xD000000000000023;
      break;
    case 12:
      uint64_t result = 0xD000000000000017;
      break;
    case 13:
      uint64_t result = 0x6E65644968737570;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_21CA77FD8(char *a1, char *a2)
{
  char v2 = *a2;
  uint64_t v3 = sub_21CA77DE0(*a1);
  uint64_t v5 = v4;
  if (v3 == sub_21CA77DE0(v2) && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = sub_21CB88F50();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_21CA78064()
{
  char v1 = *v0;
  sub_21CB89050();
  sub_21CA77DE0(v1);
  sub_21CB88380();
  swift_bridgeObjectRelease();
  return sub_21CB89090();
}

uint64_t sub_21CA780C8()
{
  sub_21CA77DE0(*v0);
  sub_21CB88380();

  return swift_bridgeObjectRelease();
}

uint64_t sub_21CA7811C()
{
  char v1 = *v0;
  sub_21CB89050();
  sub_21CA77DE0(v1);
  sub_21CB88380();
  swift_bridgeObjectRelease();
  return sub_21CB89090();
}

uint64_t sub_21CA7817C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_21CA787BC();
  *a1 = result;
  return result;
}

uint64_t sub_21CA781AC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_21CA77DE0(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_21CA781D8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_21CA787BC();
  *a1 = result;
  return result;
}

void sub_21CA78200(unsigned char *a1@<X8>)
{
  *a1 = 14;
}

uint64_t sub_21CA7820C(uint64_t a1)
{
  unint64_t v2 = sub_21CA4A560();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_21CA7824C()
{
  uint64_t v1 = sub_21CA57E34((uint64_t *)&unk_267C951B0);
  MEMORY[0x270FA5388](v1);
  uint64_t v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = 0;
  unint64_t v12 = 0xE000000000000000;
  sub_21CB88B70();
  sub_21CB883D0();
  sub_21CB883D0();
  sub_21CB883D0();
  swift_bridgeObjectRetain();
  sub_21CB883D0();
  swift_bridgeObjectRelease();
  sub_21CB883D0();
  uint64_t v4 = v0[3];
  uint64_t v9 = v0[2];
  uint64_t v10 = v4;
  swift_bridgeObjectRetain();
  sub_21CA57E34((uint64_t *)&unk_267C95220);
  sub_21CB88310();
  sub_21CB883D0();
  swift_bridgeObjectRelease();
  sub_21CB883D0();
  uint64_t v9 = v0[4];
  swift_bridgeObjectRetain();
  sub_21CA57E34(&qword_267C95130);
  sub_21CB88310();
  sub_21CB883D0();
  swift_bridgeObjectRelease();
  sub_21CB883D0();
  uint64_t v9 = v0[5];
  swift_bridgeObjectRetain();
  sub_21CB88310();
  sub_21CB883D0();
  swift_bridgeObjectRelease();
  sub_21CB883D0();
  uint64_t v5 = v0[7];
  uint64_t v9 = v0[6];
  uint64_t v10 = v5;
  swift_bridgeObjectRetain();
  sub_21CB88310();
  sub_21CB883D0();
  swift_bridgeObjectRelease();
  sub_21CB883D0();
  uint64_t v6 = v0[9];
  uint64_t v9 = v0[8];
  uint64_t v10 = v6;
  swift_bridgeObjectRetain();
  sub_21CB88310();
  sub_21CB883D0();
  swift_bridgeObjectRelease();
  sub_21CB883D0();
  uint64_t v7 = (int *)type metadata accessor for FMFIntermediateFriend();
  sub_21CA4BFB4((uint64_t)v0 + v7[10], (uint64_t)v3);
  sub_21CB88310();
  sub_21CB883D0();
  swift_bridgeObjectRelease();
  sub_21CB883D0();
  sub_21CA4BFB4((uint64_t)v0 + v7[11], (uint64_t)v3);
  sub_21CB88310();
  sub_21CB883D0();
  swift_bridgeObjectRelease();
  sub_21CB883D0();
  sub_21CA4BFB4((uint64_t)v0 + v7[12], (uint64_t)v3);
  sub_21CB88310();
  sub_21CB883D0();
  swift_bridgeObjectRelease();
  sub_21CB883D0();
  LOBYTE(v9) = *((unsigned char *)v0 + v7[13]);
  sub_21CA57E34(&qword_267C95158);
  sub_21CB88310();
  sub_21CB883D0();
  swift_bridgeObjectRelease();
  sub_21CB883D0();
  LOBYTE(v9) = *((unsigned char *)v0 + v7[14]);
  sub_21CB88310();
  sub_21CB883D0();
  swift_bridgeObjectRelease();
  sub_21CB883D0();
  LOBYTE(v9) = *((unsigned char *)v0 + v7[15]);
  sub_21CB88310();
  sub_21CB883D0();
  swift_bridgeObjectRelease();
  sub_21CB883D0();
  LOBYTE(v9) = *((unsigned char *)v0 + v7[16]);
  sub_21CB88310();
  sub_21CB883D0();
  swift_bridgeObjectRelease();
  sub_21CB883D0();
  uint64_t v9 = *(void *)((char *)v0 + v7[17]);
  swift_bridgeObjectRetain();
  sub_21CB88310();
  sub_21CB883D0();
  swift_bridgeObjectRelease();
  sub_21CB883D0();
  return v11;
}

unint64_t sub_21CA78768()
{
  unint64_t result = qword_267C95178;
  if (!qword_267C95178)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C95178);
  }
  return result;
}

uint64_t sub_21CA787BC()
{
  unint64_t v0 = sub_21CB88D70();
  swift_bridgeObjectRelease();
  if (v0 >= 0xE) {
    return 14;
  }
  else {
    return v0;
  }
}

uint64_t FMFRemoveLabelsAction.__allocating_init(labels:)(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  uint64_t v3 = v2;
  if (*(void *)(a1 + 16))
  {
    *(void *)(v2 + 24) = a1;
    *(unsigned char *)(v2 + 16) = 1;
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_deallocPartialClassInstance();
    return 0;
  }
  return v3;
}

uint64_t FMFRemoveLabelsAction.init(labels:)(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    *(void *)(v1 + 24) = a1;
    *(unsigned char *)(v1 + 16) = 1;
  }
  else
  {
    swift_bridgeObjectRelease();
    type metadata accessor for FMFRemoveLabelsAction();
    swift_deallocPartialClassInstance();
    return 0;
  }
  return v1;
}

uint64_t type metadata accessor for FMFRemoveLabelsAction()
{
  return self;
}

uint64_t sub_21CA788FC()
{
  sub_21CB89110();
  sub_21CB883D0();
  swift_bridgeObjectRelease();
  sub_21CB883D0();
  sub_21CA2A060();
  sub_21CB88470();
  sub_21CB883D0();
  swift_bridgeObjectRelease();
  sub_21CB883D0();
  uint64_t v0 = swift_bridgeObjectRetain();
  MEMORY[0x21D4B5620](v0, MEMORY[0x263F8D310]);
  sub_21CB883D0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_21CB883D0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return 60;
}

void FMFRemoveLabelsAction.__allocating_init(requiresRefresh:)()
{
}

void FMFRemoveLabelsAction.init(requiresRefresh:)()
{
}

uint64_t sub_21CA78AC4()
{
  return swift_bridgeObjectRelease();
}

uint64_t FMFRemoveLabelsAction.deinit()
{
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t FMFRemoveLabelsAction.__deallocating_deinit()
{
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t method lookup function for FMFRemoveLabelsAction(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for FMFRemoveLabelsAction);
}

uint64_t dispatch thunk of FMFRemoveLabelsAction.__allocating_init(labels:)()
{
  return (*(uint64_t (**)(void))(v0 + 136))();
}

void *sub_21CA78B50(void *a1, uint64_t a2)
{
  uint64_t v5 = sub_21CA57E34(&qword_267C95190);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_21CB87480();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  unint64_t v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v26 - v13;
  if (qword_267C949D8 != -1) {
    swift_once();
  }
  uint64_t v15 = sub_21CA4CC18(v5, (uint64_t)qword_267C975C8);
  sub_21CA66CA4(v15, (uint64_t)v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    sub_21CA07B00((uint64_t)v7);
    sub_21CA78EF4();
    swift_allocError();
    return (void *)swift_willThrow();
  }
  else
  {
    id v28 = a1;
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v12, v7, v8);
    sub_21CB87440();
    int v17 = *(void (**)(char *, uint64_t))(v9 + 8);
    v17(v12, v8);
    uint64_t v18 = sub_21CB87490();
    if (v2)
    {
      return (void *)((uint64_t (*)(char *, uint64_t))v17)(v14, v8);
    }
    else
    {
      uint64_t v20 = v18;
      unint64_t v21 = v19;
      if (qword_267C94940 != -1) {
        swift_once();
      }
      sub_21CA78F48();
      sub_21CB871D0();
      sub_21CA36618(v20, v21);
      v17(v14, v8);
      uint64_t v22 = *(void *)&v27[0];
      type metadata accessor for FMFDemoDataSource();
      int v23 = (void *)swift_allocObject();
      uint64_t v24 = MEMORY[0x263F8EE78];
      v23[4] = MEMORY[0x263F8EE78];
      void v23[5] = v24;
      v23[6] = v24;
      v23[7] = v24;
      _OWORD v23[2] = v22;
      type metadata accessor for FMFDemoDataGenerator();
      uint64_t v25 = swift_allocObject();
      *(_OWORD *)(v25 + 16) = xmmword_21CB8B8D0;
      *(void *)(v25 + 32) = 0x4024000000000000;
      v23[3] = v25;
      sub_21CA83F5C();
      sub_21CA219EC(a2, (uint64_t)v27);
      type metadata accessor for FMFDemoInteractionController();
      swift_allocObject();
      return sub_21CABFFF0((uint64_t)v23, (uint64_t)v28, v27);
    }
  }
}

unint64_t sub_21CA78EF4()
{
  unint64_t result = qword_267C95198;
  if (!qword_267C95198)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C95198);
  }
  return result;
}

unint64_t sub_21CA78F48()
{
  unint64_t result = qword_267C951A0;
  if (!qword_267C951A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C951A0);
  }
  return result;
}

BOOL sub_21CA78F9C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_21CA78FB4()
{
  return sub_21CB89090();
}

uint64_t sub_21CA78FFC()
{
  return sub_21CB89060();
}

uint64_t sub_21CA79028()
{
  return sub_21CB89090();
}

uint64_t FMFLocationAlert.fmlFence.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v218 = a1;
  uint64_t v2 = v1;
  uint64_t v3 = sub_21CB87590();
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v196 = (char *)&v193 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_21CA57E34((uint64_t *)&unk_267C951B0);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v217 = (uint64_t)&v193 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_21CB87AC0();
  uint64_t v208 = *(void *)(v7 - 8);
  uint64_t v209 = v7;
  MEMORY[0x270FA5388](v7);
  unint64_t v206 = (char *)&v193 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v193 - v10;
  uint64_t v12 = sub_21CB87A60();
  uint64_t v228 = *(void *)(v12 - 8);
  uint64_t v229 = v12;
  MEMORY[0x270FA5388](v12);
  unint64_t v205 = (char *)&v193 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v212 = (char *)&v193 - v15;
  uint64_t v16 = sub_21CA57E34(&qword_267C96F00);
  MEMORY[0x270FA5388](v16 - 8);
  uint64_t v195 = (char *)&v193 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  uint64_t v227 = (char *)&v193 - v19;
  uint64_t v220 = sub_21CB875D0();
  uint64_t v236 = *(void *)(v220 - 8);
  MEMORY[0x270FA5388](v220);
  unint64_t v194 = (char *)&v193 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v21);
  uint64_t v214 = (char *)&v193 - v22;
  uint64_t v23 = sub_21CB878D0();
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v248 = v23;
  uint64_t v249 = v24;
  MEMORY[0x270FA5388](v23);
  uint64_t v247 = (char *)&v193 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = sub_21CB87BD0();
  uint64_t v203 = *(void *)(v26 - 8);
  uint64_t v204 = v26;
  MEMORY[0x270FA5388](v26);
  uint64_t v202 = (uint64_t)&v193 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v28);
  uint64_t v201 = (char *)&v193 - v29;
  uint64_t v30 = sub_21CA57E34((uint64_t *)&unk_267C951C0);
  MEMORY[0x270FA5388](v30 - 8);
  uint64_t v226 = (char *)&v193 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v32);
  uint64_t v200 = (char *)&v193 - v33;
  uint64_t v34 = sub_21CA57E34((uint64_t *)&unk_267C96ED0);
  MEMORY[0x270FA5388](v34 - 8);
  uint64_t v219 = (char *)&v193 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v36);
  uint64_t v210 = (uint64_t)&v193 - v37;
  MEMORY[0x270FA5388](v38);
  uint64_t v211 = (uint64_t)&v193 - v39;
  uint64_t v40 = type metadata accessor for FMFLocationAlert();
  MEMORY[0x270FA5388](v40);
  uint64_t v225 = (char *)&v193 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v42);
  uint64_t v224 = (uint64_t)&v193 - v43;
  uint64_t v239 = sub_21CB87B60();
  uint64_t v235 = *(void *)(v239 - 8);
  MEMORY[0x270FA5388](v239);
  uint64_t v233 = (char *)&v193 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v45);
  uint64_t v197 = (char *)&v193 - v46;
  MEMORY[0x270FA5388](v47);
  uint64_t v199 = (char *)&v193 - v48;
  MEMORY[0x270FA5388](v49);
  uint64_t v238 = (char *)&v193 - v50;
  uint64_t v51 = sub_21CB87990();
  uint64_t v240 = *(void **)(v51 - 8);
  uint64_t v241 = v51;
  MEMORY[0x270FA5388](v51);
  uint64_t v232 = (char *)&v193 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v53);
  uint64_t v231 = (char *)&v193 - v54;
  MEMORY[0x270FA5388](v55);
  uint64_t v243 = (char *)&v193 - v56;
  MEMORY[0x270FA5388](v57);
  uint64_t v244 = (char *)&v193 - v58;
  uint64_t v59 = sub_21CA57E34((uint64_t *)&unk_267C951D0);
  MEMORY[0x270FA5388](v59 - 8);
  uint64_t v213 = (uint64_t)&v193 - ((v60 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v61);
  uint64_t v198 = (char *)&v193 - v62;
  MEMORY[0x270FA5388](v63);
  uint64_t v237 = (uint64_t)&v193 - v64;
  uint64_t v65 = sub_21CB87A00();
  uint64_t v222 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v65 - 8);
  uint64_t v223 = v65;
  MEMORY[0x270FA5388](v65);
  uint64_t v221 = (char *)&v193 - ((v66 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v234 = sub_21CB87A50();
  uint64_t v251 = *(void *)(v234 - 8);
  MEMORY[0x270FA5388](v234);
  os_log_type_t v230 = (char *)&v193 - ((v67 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v68);
  uint64_t v242 = (char *)&v193 - v69;
  uint64_t v70 = sub_21CA57E34((uint64_t *)&unk_267C96EF0);
  MEMORY[0x270FA5388](v70 - 8);
  uint64_t v72 = (char *)&v193 - ((v71 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v73);
  uint64_t v75 = (char *)&v193 - v74;
  uint64_t v76 = sub_21CB88000();
  uint64_t v253 = *(void *)(v76 - 8);
  uint64_t v254 = v76;
  MEMORY[0x270FA5388](v76);
  uint64_t v216 = (char *)&v193 - ((v77 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v78);
  uint64_t v80 = (char *)&v193 - v79;
  MEMORY[0x270FA5388](v81);
  uint64_t v255 = (char *)&v193 - v82;
  uint64_t v83 = (uint64_t *)((char *)v1 + *(int *)(v40 + 80));
  unint64_t v84 = v83[1];
  if (v84)
  {
    uint64_t v246 = *v83;
    uint64_t v85 = sub_21CB88320();
    unint64_t v87 = v86;
    swift_bridgeObjectRetain();
    v88._countAndFlagsBits = v85;
    v88._object = v87;
    FMFDefaultLabel.init(rawValue:)(v88);
    if (v260[0] == 5)
    {
      unint64_t v250 = v84;
    }
    else
    {
      uint64_t v246 = FMFDefaultLabel.localizedLabel.getter();
      unint64_t v90 = v89;
      swift_bridgeObjectRelease();
      unint64_t v250 = v90;
    }
  }
  else
  {
    uint64_t v246 = 0;
    unint64_t v250 = 0xE000000000000000;
  }
  uint64_t v91 = *v2;
  uint64_t v215 = v2[1];
  uint64_t v245 = (int *)v40;
  sub_21CA26A4C((uint64_t)v2 + *(int *)(v40 + 92), (uint64_t)v262, &qword_267C951E0);
  sub_21CA26A4C((uint64_t)v262, (uint64_t)v263, &qword_267C951E0);
  int v92 = sub_21CA76890((uint64_t)v263);
  unint64_t v207 = v11;
  if (v92 == 1)
  {
    sub_21CB87FF0();
  }
  else
  {
    memcpy(v260, v263, sizeof(v260));
    FMFAddress.fmlPlacemark.getter();
    (*(void (**)(char *, char *, uint64_t))(v253 + 32))(v255, v80, v254);
  }
  char v252 = v2;
  FMFLocationAlert.location.getter((uint64_t)v75);
  uint64_t v93 = type metadata accessor for FMFLocation();
  unsigned __int8 v94 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v93 - 8) + 48);
  if (v94(v75, 1, v93) == 1)
  {
    swift_bridgeObjectRelease();
    sub_21CA1B88C((uint64_t)v75, (uint64_t *)&unk_267C96EF0);
LABEL_13:
    sub_21CA7CD68();
    swift_allocError();
    *uint64_t v95 = 0;
    swift_willThrow();
    return (*(uint64_t (**)(char *, uint64_t))(v253 + 8))(v255, v254);
  }
  sub_21CA26A4C((uint64_t)&v75[*(int *)(v93 + 44)], (uint64_t)v259, &qword_267C951F0);
  sub_21CA26A4C((uint64_t)v259, (uint64_t)v260, &qword_267C951F0);
  if (sub_21CA7CDBC((uint64_t)v260) == 1)
  {
    sub_21CA56F30((uint64_t)v75, (uint64_t (*)(void))type metadata accessor for FMFLocation);
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  id v97 = v261;
  sub_21CA56F30((uint64_t)v75, (uint64_t (*)(void))type metadata accessor for FMFLocation);
  objc_msgSend(v97, sel_horizontalAccuracy);

  FMFLocationAlert.location.getter((uint64_t)v72);
  if (v94(v72, 1, v93) == 1)
  {
    swift_bridgeObjectRelease();
    sub_21CA1B88C((uint64_t)v72, (uint64_t *)&unk_267C96EF0);
LABEL_19:
    uint64_t v98 = v253;
    uint64_t v99 = v255;
    sub_21CA7CD68();
    swift_allocError();
    *BOOL v100 = 0;
    swift_willThrow();
    return (*(uint64_t (**)(char *, uint64_t))(v98 + 8))(v99, v254);
  }
  sub_21CA26A4C((uint64_t)&v72[*(int *)(v93 + 44)], (uint64_t)v257, &qword_267C951F0);
  sub_21CA26A4C((uint64_t)v257, (uint64_t)v258, &qword_267C951F0);
  if (sub_21CA7CDBC((uint64_t)v258) == 1)
  {
    sub_21CA56F30((uint64_t)v72, (uint64_t (*)(void))type metadata accessor for FMFLocation);
    swift_bridgeObjectRelease();
    goto LABEL_19;
  }
  id v101 = v258[38];
  sub_21CA56F30((uint64_t)v72, (uint64_t (*)(void))type metadata accessor for FMFLocation);
  objc_msgSend(v101, sel_coordinate);

  char v102 = v245;
  uint64_t v103 = (uint64_t)v252;
  (*((void (**)(char *, void, uint64_t))v222 + 13))(v221, **((unsigned int **)&unk_264436D00 + *((char *)v252 + v245[21])), v223);
  sub_21CB87A10();
  char v104 = (char *)v102[15];
  uint64_t v105 = v104[v103];
  uint64_t v106 = (unsigned int *)MEMORY[0x263F3CEC8];
  uint64_t v223 = v91;
  uint64_t v107 = v251;
  uint64_t v221 = v104;
  switch(v105)
  {
    case 1:
      uint64_t v106 = (unsigned int *)MEMORY[0x263F3CEC0];
      goto LABEL_23;
    case 2:
      goto LABEL_23;
    case 3:
      uint64_t v114 = v229;
      uint64_t v111 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v228 + 56);
      uint64_t v112 = v237;
      uint64_t v113 = 1;
      goto LABEL_25;
    default:
      uint64_t v106 = (unsigned int *)MEMORY[0x263F3CEB8];
LABEL_23:
      uint64_t v109 = v228;
      uint64_t v108 = v229;
      uint64_t v110 = v237;
      (*(void (**)(uint64_t, void, uint64_t))(v228 + 104))(v237, *v106, v229);
      uint64_t v111 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v109 + 56);
      uint64_t v112 = v110;
      uint64_t v113 = 0;
      uint64_t v114 = v108;
      char v102 = v245;
LABEL_25:
      uint64_t v222 = v111;
      v111((char *)v112, v113, 1, v114);
      uint64_t v115 = v241;
      int v116 = (void (*)(char *, uint64_t, uint64_t))v240[13];
      unsigned int v117 = *MEMORY[0x263F3CE48];
      unsigned int v118 = *MEMORY[0x263F3CE50];
      if (*(unsigned char *)(v103 + v102[24])) {
        uint64_t v119 = v117;
      }
      else {
        uint64_t v119 = v118;
      }
      v116(v244, v119, v241);
      if (*(unsigned char *)(v103 + v102[25])) {
        uint64_t v120 = v118;
      }
      else {
        uint64_t v120 = v117;
      }
      v116(v243, v120, v115);
      char v121 = *(unsigned char *)(v103 + 43);
      uint64_t v122 = v224;
      sub_21CA3D574(v103, v224, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
      if (v121)
      {
        sub_21CA56F30(v122, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
        uint64_t v123 = v236;
        uint64_t v124 = (uint64_t)v225;
        unint64_t v125 = (unint64_t)v226;
      }
      else
      {
        uint64_t v126 = v211;
        sub_21CA24E80(v122 + v102[12], v211, (uint64_t *)&unk_267C96ED0);
        sub_21CA56F30(v122, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
        uint64_t v127 = type metadata accessor for FMFSchedule();
        int v128 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v127 - 8) + 48))(v126, 1, v127);
        sub_21CA1B88C(v126, (uint64_t *)&unk_267C96ED0);
        BOOL v129 = v128 == 1;
        uint64_t v123 = v236;
        uint64_t v124 = (uint64_t)v225;
        unint64_t v125 = (unint64_t)v226;
        if (v129)
        {
          if (*(unsigned char *)(v103 + 41))
          {
            unint64_t v125 = (unint64_t)v200;
            if (*(unsigned char *)(v103 + 41) != 1)
            {
LABEL_80:
              uint64_t v191 = sub_21CB87B50();
              (*(void (**)(unint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v191 - 8) + 56))(v125, 1, 1, v191);
              __break(1u);
              goto LABEL_81;
            }
            uint64_t v130 = *MEMORY[0x263F3CEE0];
            uint64_t v131 = sub_21CB87B50();
            (*(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v131 - 8) + 104))(v125, v130, v131);
          }
          else
          {
            uint64_t v149 = *MEMORY[0x263F3CEE8];
            uint64_t v131 = sub_21CB87B50();
            unint64_t v125 = (unint64_t)v200;
            (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v131 - 8) + 104))(v200, v149, v131);
          }
          sub_21CB87B50();
          uint64_t v150 = *(void *)(v131 - 8);
          (*(void (**)(unint64_t, void, uint64_t, uint64_t))(v150 + 56))(v125, 0, 1, v131);
          uint64_t v151 = v199;
          (*(void (**)(char *, unint64_t, uint64_t))(v150 + 32))(v199, v125, v131);
          uint64_t v152 = (unsigned int *)MEMORY[0x263F3CF00];
          goto LABEL_51;
        }
      }
      int v132 = *(unsigned __int8 *)(v103 + 43);
      sub_21CA3D574(v103, v124, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
      if (v132 == 1)
      {
        char v133 = v245;
        uint64_t v134 = v210;
        sub_21CA24E80(v124 + v245[12], v210, (uint64_t *)&unk_267C96ED0);
        sub_21CA56F30(v124, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
        uint64_t v135 = type metadata accessor for FMFSchedule();
        int v136 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v135 - 8) + 48))(v134, 1, v135);
        uint64_t v137 = v133;
        sub_21CA1B88C(v134, (uint64_t *)&unk_267C96ED0);
        uint64_t v138 = (uint64_t)v219;
        if (v136 == 1)
        {
          if (*(unsigned char *)(v103 + 41))
          {
            if (*(unsigned char *)(v103 + 41) != 1)
            {
LABEL_81:
              uint64_t v192 = sub_21CB87B50();
              (*(void (**)(unint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v192 - 8) + 56))(v125, 1, 1, v192);
              __break(1u);
              JUMPOUT(0x21CA7AD44);
            }
            char v139 = (unsigned int *)MEMORY[0x263F3CEE0];
          }
          else
          {
            char v139 = (unsigned int *)MEMORY[0x263F3CEE8];
          }
          uint64_t v153 = *v139;
          uint64_t v154 = sub_21CB87B50();
          (*(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v154 - 8) + 104))(v125, v153, v154);
          sub_21CB87B50();
          uint64_t v155 = *(void *)(v154 - 8);
          (*(void (**)(unint64_t, void, uint64_t, uint64_t))(v155 + 56))(v125, 0, 1, v154);
          uint64_t v151 = v197;
          (*(void (**)(char *, unint64_t, uint64_t))(v155 + 32))(v197, v125, v154);
          uint64_t v152 = (unsigned int *)MEMORY[0x263F3CF08];
LABEL_51:
          uint64_t v156 = v235;
          uint64_t v157 = v239;
          (*(void (**)(char *, void, uint64_t))(v235 + 104))(v151, *v152, v239);
          (*(void (**)(char *, char *, uint64_t))(v156 + 32))(v238, v151, v157);
          goto LABEL_52;
        }
      }
      else
      {
        sub_21CA56F30(v124, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
        uint64_t v137 = v245;
        uint64_t v138 = (uint64_t)v219;
      }
      sub_21CA24E80(v103 + v137[12], v138, (uint64_t *)&unk_267C96ED0);
      uint64_t v140 = type metadata accessor for FMFSchedule();
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v140 - 8) + 48))(v138, 1, v140) == 1)
      {
        sub_21CA1B88C(v138, (uint64_t *)&unk_267C96ED0);
        swift_bridgeObjectRelease();
        sub_21CA7CD68();
        swift_allocError();
        unsigned char *v141 = 1;
        swift_willThrow();
        uint64_t v142 = v241;
        uint64_t v143 = (void (*)(char *, uint64_t))v240[1];
        v143(v243, v241);
        v143(v244, v142);
        sub_21CA1B88C(v237, (uint64_t *)&unk_267C951D0);
        (*(void (**)(char *, uint64_t))(v107 + 8))(v242, v234);
        return (*(uint64_t (**)(char *, uint64_t))(v253 + 8))(v255, v254);
      }
      uint64_t v144 = v202;
      sub_21CA6888C(v202);
      sub_21CA56F30(v138, (uint64_t (*)(void))type metadata accessor for FMFSchedule);
      uint64_t v145 = v204;
      char v146 = *(void (**)(char *, uint64_t, uint64_t))(v203 + 32);
      uint64_t v147 = v201;
      v146(v201, v144, v204);
      int v148 = v238;
      v146(v238, (uint64_t)v147, v145);
      (*(void (**)(char *, void, uint64_t))(v235 + 104))(v148, *MEMORY[0x263F3CF10], v239);
LABEL_52:
      FMFLocationAlert.recipients.getter();
      unint64_t v125 = v158;
      uint64_t v159 = (uint64_t)v227;
      if (v158 >> 62) {
        goto LABEL_66;
      }
      uint64_t v160 = *(void *)((v158 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v160)
      {
        while (1)
        {
          uint64_t v256 = MEMORY[0x263F8EE78];
          sub_21CA7BFF4(0, v160 & ~(v160 >> 63), 0);
          if (v160 < 0) {
            break;
          }
          uint64_t v123 = 0;
          uint64_t v161 = v256;
          uint64_t v225 = (char *)(v249 + 32);
          uint64_t v226 = (char *)(v125 & 0xC000000000000001);
          uint64_t v159 = v125;
          while (v160 != v123)
          {
            if (v226) {
              id v162 = (id)MEMORY[0x21D4B5CA0](v123, v125);
            }
            else {
              id v162 = *(id *)(v125 + 8 * v123 + 32);
            }
            unint64_t v125 = (unint64_t)v162;
            id v163 = objc_msgSend(v162, sel_identifier);
            if (!v163) {
              goto LABEL_79;
            }
            uint64_t v164 = v163;
            sub_21CB882F0();

            int v165 = v247;
            sub_21CB878A0();

            uint64_t v256 = v161;
            unint64_t v167 = *(void *)(v161 + 16);
            unint64_t v166 = *(void *)(v161 + 24);
            if (v167 >= v166 >> 1)
            {
              sub_21CA7BFF4(v166 > 1, v167 + 1, 1);
              uint64_t v161 = v256;
            }
            ++v123;
            *(void *)(v161 + 16) = v167 + 1;
            (*(void (**)(unint64_t, char *, uint64_t))(v249 + 32))(v161+ ((*(unsigned __int8 *)(v249 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v249 + 80))+ *(void *)(v249 + 72) * v167, v165, v248);
            uint64_t v107 = v251;
            uint64_t v103 = (uint64_t)v252;
            unint64_t v125 = v159;
            if (v160 == v123)
            {
              swift_bridgeObjectRelease();
              uint64_t v123 = v236;
              uint64_t v159 = (uint64_t)v227;
              goto LABEL_68;
            }
          }
          __break(1u);
LABEL_66:
          uint64_t v160 = sub_21CB88D10();
          if (!v160) {
            goto LABEL_67;
          }
        }
        __break(1u);
LABEL_79:
        __break(1u);
        goto LABEL_80;
      }
LABEL_67:
      swift_bridgeObjectRelease();
LABEL_68:
      uint64_t v168 = v220;
      if (!v215) {
        goto LABEL_76;
      }
      sub_21CB875A0();
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v123 + 48))(v159, 1, v168) == 1)
      {
        sub_21CA1B88C(v159, &qword_267C96F00);
LABEL_76:
        uint64_t v186 = v240;
        uint64_t v185 = v241;
        uint64_t v187 = (void (*)(char *, char *, uint64_t))v240[2];
        v187(v231, v244, v241);
        v187(v232, v243, v185);
        uint64_t v188 = v235;
        (*(void (**)(char *, char *, uint64_t))(v235 + 16))(v233, v238, v239);
        (*(void (**)(char *, char *, uint64_t))(v107 + 16))(v230, v242, v234);
        (*(void (**)(char *, char *, uint64_t))(v253 + 16))(v216, v255, v254);
        sub_21CA24E80(v103 + v245[27], v217, (uint64_t *)&unk_267C951B0);
        uint64_t v183 = v237;
        sub_21CA24E80(v237, v213, (uint64_t *)&unk_267C951D0);
        sub_21CB87AF0();
        uint64_t v170 = v234;
        (*(void (**)(char *, uint64_t))(v188 + 8))(v238, v239);
        char v189 = (void (*)(char *, uint64_t))v186[1];
        v189(v243, v185);
        uint64_t v190 = v185;
        uint64_t v180 = v254;
        v189(v244, v190);
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v123 + 32))(v214, v159, v168);
        BOOL v169 = (unsigned int *)MEMORY[0x263F3CEC8];
        uint64_t v170 = v234;
        switch(v221[v103])
        {
          case 1:
            BOOL v169 = (unsigned int *)MEMORY[0x263F3CEC0];
            break;
          case 2:
            break;
          case 3:
            uint64_t v184 = (uint64_t)v198;
            v222(v198, 1, 1, v229);
            (*(void (**)(char *, uint64_t))(v123 + 8))(v214, v168);
            sub_21CA1B88C(v184, (uint64_t *)&unk_267C951D0);
            uint64_t v107 = v251;
            goto LABEL_76;
          default:
            BOOL v169 = (unsigned int *)MEMORY[0x263F3CEB8];
            break;
        }
        uint64_t v171 = v123;
        uint64_t v172 = v228;
        uint64_t v173 = v229;
        uint64_t v174 = v198;
        (*(void (**)(char *, void, uint64_t))(v228 + 104))(v198, *v169, v229);
        v222(v174, 0, 1, v173);
        (*(void (**)(char *, char *, uint64_t))(v172 + 32))(v212, v174, v173);
        uint64_t v175 = v194;
        (*(void (**)(char *, char *, uint64_t))(v171 + 16))(v194, v214, v168);
        char v176 = v207;
        MEMORY[0x21D4B4BB0](v175);
        (*(void (**)(char *, char *, uint64_t))(v208 + 16))(v206, v176, v209);
        uint64_t v177 = v241;
        uint64_t v178 = (void (*)(char *, char *, uint64_t))v240[2];
        v178(v231, v244, v241);
        v178(v232, v243, v177);
        (*(void (**)(char *, char *, uint64_t))(v235 + 16))(v233, v238, v239);
        (*(void (**)(char *, char *, uint64_t))(v172 + 16))(v205, v212, v173);
        (*(void (**)(char *, char *, uint64_t))(v251 + 16))(v230, v242, v170);
        (*(void (**)(char *, char *, uint64_t))(v253 + 16))(v216, v255, v254);
        sub_21CA24E80(v103 + v245[27], v217, (uint64_t *)&unk_267C951B0);
        uint64_t v179 = v220;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v236 + 56))(v195, 1, 1, v220);
        sub_21CB87580();
        sub_21CB87AD0();
        (*(void (**)(char *, uint64_t))(v208 + 8))(v207, v209);
        (*(void (**)(char *, uint64_t))(v172 + 8))(v212, v229);
        uint64_t v180 = v254;
        (*(void (**)(char *, uint64_t))(v236 + 8))(v214, v179);
        (*(void (**)(char *, uint64_t))(v235 + 8))(v238, v239);
        uint64_t v181 = v241;
        uint64_t v182 = (void (*)(char *, uint64_t))v240[1];
        v182(v243, v241);
        v182(v244, v181);
        uint64_t v183 = v237;
      }
      sub_21CA1B88C(v183, (uint64_t *)&unk_267C951D0);
      (*(void (**)(char *, uint64_t))(v251 + 8))(v242, v170);
      return (*(uint64_t (**)(char *, uint64_t))(v253 + 8))(v255, v180);
  }
}

void FMFLocationAlert.recipients.getter()
{
  uint64_t v1 = type metadata accessor for FMFLocationAlert();
  uint64_t v2 = *(void *)(v0 + *(int *)(v1 + 68));
  if (v2)
  {
    uint64_t v3 = *(void *)(v2 + 16);
    unint64_t v4 = MEMORY[0x263F8EE78];
    if (v3)
    {
      unint64_t v16 = MEMORY[0x263F8EE78];
      sub_21CB88C20();
      uint64_t v5 = self;
      uint64_t v6 = v2 + 40;
      while (1)
      {
        swift_bridgeObjectRetain();
        uint64_t v7 = (void *)sub_21CB882C0();
        id v8 = objc_msgSend(v5, sel_handleWithId_, v7);

        if (!v8) {
          break;
        }
        v6 += 16;
        swift_bridgeObjectRelease();
        sub_21CB88C00();
        sub_21CB88C30();
        sub_21CB88C40();
        sub_21CB88C10();
        if (!--v3)
        {
          unint64_t v4 = v16;
          goto LABEL_7;
        }
      }
      __break(1u);
      goto LABEL_17;
    }
LABEL_7:
    sub_21CA7B684(v4);
  }
  uint64_t v9 = *(void *)(v0 + *(int *)(v1 + 64));
  if (v9)
  {
    uint64_t v10 = *(void *)(v9 + 16);
    unint64_t v11 = MEMORY[0x263F8EE78];
    if (v10)
    {
      unint64_t v17 = MEMORY[0x263F8EE78];
      sub_21CB88C20();
      uint64_t v12 = self;
      uint64_t v13 = v9 + 40;
      while (1)
      {
        swift_bridgeObjectRetain();
        uint64_t v14 = (void *)sub_21CB882C0();
        id v15 = objc_msgSend(v12, sel_handleWithId_, v14);

        if (!v15) {
          break;
        }
        v13 += 16;
        swift_bridgeObjectRelease();
        sub_21CB88C00();
        sub_21CB88C30();
        sub_21CB88C40();
        sub_21CB88C10();
        if (!--v10)
        {
          unint64_t v11 = v17;
          goto LABEL_14;
        }
      }
LABEL_17:
      __break(1u);
      return;
    }
LABEL_14:
    sub_21CA7B684(v11);
  }
}

id FMFLocationAlert.fence.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_21CA57E34((uint64_t *)&unk_267C96EF0);
  MEMORY[0x270FA5388](v2 - 8);
  unint64_t v4 = &v29[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = sub_21CA57E34((uint64_t *)&unk_267C96ED0);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = &v29[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  id v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F3BA58]), sel_init);
  if (*(void *)(v0 + 8))
  {
    uint64_t v9 = (void *)sub_21CB882C0();
    objc_msgSend(v8, sel_setIdentifier_, v9);
  }
  uint64_t v10 = (int *)type metadata accessor for FMFLocationAlert();
  if (*(void *)(v1 + v10[19] + 8))
  {
    unint64_t v11 = (void *)sub_21CB882C0();
    objc_msgSend(v8, sel_setFriendIdentifier_, v11);
  }
  FMFLocationAlert.recipients.getter();
  sub_21CA7CDD4();
  uint64_t v12 = (void *)sub_21CB884F0();
  swift_bridgeObjectRelease();
  objc_msgSend(v8, sel_setRecipients_, v12);

  objc_msgSend(v8, sel_setActive_, 1);
  objc_msgSend(v8, sel_setRecurring_, *(unsigned __int8 *)(v1 + 43));
  sub_21CA24E80(v1 + v10[12], (uint64_t)v7, (uint64_t *)&unk_267C96ED0);
  uint64_t v13 = type metadata accessor for FMFSchedule();
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48))(v7, 1, v13) == 1)
  {
    sub_21CA1B88C((uint64_t)v7, (uint64_t *)&unk_267C96ED0);
    uint64_t v14 = 0;
  }
  else
  {
    uint64_t v14 = (void *)sub_21CA69060();
    sub_21CA56F30((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for FMFSchedule);
  }
  objc_msgSend(v8, sel_setSchedule_, v14);

  id v15 = (void *)sub_21CB882C0();
  swift_bridgeObjectRelease();
  objc_msgSend(v8, sel_setType_, v15);

  unint64_t v16 = (void *)sub_21CB882C0();
  swift_bridgeObjectRelease();
  objc_msgSend(v8, sel_setTrigger_, v16);

  if (*(void *)(v1 + v10[20] + 8))
  {
    uint64_t v17 = sub_21CB88320();
    uint64_t v19 = v18;
    swift_bridgeObjectRetain();
    v20._countAndFlagsBits = v17;
    v20._object = v19;
    FMFDefaultLabel.init(rawValue:)(v20);
    if (v30[0] != 5)
    {
      FMFDefaultLabel.localizedLabel.getter();
      swift_bridgeObjectRelease();
    }
    uint64_t v21 = (void *)sub_21CB882C0();
    swift_bridgeObjectRelease();
    objc_msgSend(v8, sel_setLabel_, v21);
  }
  sub_21CA26A4C(v1 + v10[23], (uint64_t)v32, &qword_267C951E0);
  sub_21CA26A4C((uint64_t)v32, (uint64_t)v33, &qword_267C951E0);
  if (sub_21CA76890((uint64_t)v33) != 1)
  {
    memcpy(v30, v33, sizeof(v30));
    id v22 = FMFAddress.placemark.getter();
    objc_msgSend(v8, sel_setPlacemark_, v22);
  }
  objc_msgSend(v8, sel_setLocationType_, *(unsigned __int8 *)(v1 + v10[21]));
  FMFLocationAlert.location.getter((uint64_t)v4);
  uint64_t v23 = type metadata accessor for FMFLocation();
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v23 - 8) + 48))(v4, 1, v23) == 1)
  {
    sub_21CA1B88C((uint64_t)v4, (uint64_t *)&unk_267C96EF0);
  }
  else
  {
    sub_21CA26A4C((uint64_t)&v4[*(int *)(v23 + 44)], (uint64_t)v29, &qword_267C951F0);
    sub_21CA26A4C((uint64_t)v29, (uint64_t)v30, &qword_267C951F0);
    if (sub_21CA7CDBC((uint64_t)v30) == 1)
    {
      sub_21CA56F30((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for FMFLocation);
    }
    else
    {
      id v24 = v31;
      sub_21CA56F30((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for FMFLocation);
      objc_msgSend(v8, sel_setLocation_, v24);
    }
  }
  switch(*(unsigned char *)(v1 + v10[15]))
  {
    case 3:
      break;
    default:
      uint64_t v25 = (void *)sub_21CB882C0();
      swift_bridgeObjectRelease();
      objc_msgSend(v8, sel_setAcceptanceStatus_, v25);

      break;
  }
  if (*(void *)(v1 + v10[13] + 8)) {
    uint64_t v26 = (void *)sub_21CB882C0();
  }
  else {
    uint64_t v26 = 0;
  }
  objc_msgSend(v8, sel_setCkRecordName_, v26);

  if (*(void *)(v1 + v10[14] + 8)) {
    uint64_t v27 = (void *)sub_21CB882C0();
  }
  else {
    uint64_t v27 = 0;
  }
  objc_msgSend(v8, sel_setCkRecordZoneOwnerName_, v27);

  objc_msgSend(v8, sel_setFromMe_, *(unsigned __int8 *)(v1 + v10[24]));
  return v8;
}

uint64_t sub_21CA7B684(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_21CB88D10();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  unint64_t v4 = *v1;
  if (*v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_21CB88D10();
    swift_bridgeObjectRelease();
    uint64_t v6 = v5 + v3;
    if (!__OFADD__(v5, v3)) {
      goto LABEL_5;
    }
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v6 = v5 + v3;
  if (__OFADD__(v5, v3)) {
    goto LABEL_25;
  }
LABEL_5:
  unint64_t v4 = *v1;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v1 = v4;
  uint64_t v5 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v4 & 0x8000000000000000) == 0 && (v4 & 0x4000000000000000) == 0)
  {
    uint64_t v8 = v4 & 0xFFFFFFFFFFFFFF8;
    if (v6 <= *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      goto LABEL_15;
    }
    uint64_t v5 = 1;
  }
  if (v4 >> 62) {
    goto LABEL_27;
  }
  uint64_t v9 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v9 <= v6) {
      uint64_t v9 = v6;
    }
    swift_bridgeObjectRetain();
    unint64_t v4 = MEMORY[0x21D4B5CB0](v5, v9, 1, v4);
    swift_bridgeObjectRelease();
    *uint64_t v1 = v4;
    uint64_t v8 = v4 & 0xFFFFFFFFFFFFFF8;
LABEL_15:
    uint64_t result = sub_21CA7C7A0(v8 + 8 * *(void *)(v8 + 16) + 32, (*(void *)(v8 + 24) >> 1) - *(void *)(v8 + 16), a1);
    if (v11 >= v3) {
      break;
    }
LABEL_26:
    __break(1u);
LABEL_27:
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_21CB88D10();
    swift_bridgeObjectRelease();
  }
  if (v11 >= 1)
  {
    uint64_t v12 = *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    BOOL v13 = __OFADD__(v12, v11);
    uint64_t v14 = v12 + v11;
    if (v13)
    {
      __break(1u);
      return result;
    }
    *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10) = v14;
  }
  swift_bridgeObjectRelease();

  return sub_21CB88530();
}

uint64_t sub_21CA7B850(uint64_t a1)
{
  size_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *v1;
  int64_t v4 = *((void *)*v1 + 2);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  char isUniquelyReferenced_nonNull_native = (char *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= *((void *)v3 + 3) >> 1)
  {
    size_t v8 = *(void *)(a1 + 16);
    if (v8) {
      goto LABEL_5;
    }
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
  if (v4 <= v5) {
    int64_t v15 = v4 + v2;
  }
  else {
    int64_t v15 = v4;
  }
  uint64_t v3 = sub_21CAC79BC(isUniquelyReferenced_nonNull_native, v15, 1, v3);
  size_t v8 = *(void *)(a1 + 16);
  if (!v8) {
    goto LABEL_18;
  }
LABEL_5:
  uint64_t v9 = *((void *)v3 + 2);
  if ((*((void *)v3 + 3) >> 1) - v9 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v10 = &v3[v9 + 32];
  if (a1 + 32 < (unint64_t)&v10[v8] && (unint64_t)v10 < a1 + 32 + v8) {
    goto LABEL_24;
  }
  memcpy(v10, (const void *)(a1 + 32), v8);
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v12 = *((void *)v3 + 2);
  BOOL v13 = __OFADD__(v12, v8);
  size_t v14 = v12 + v8;
  if (!v13)
  {
    *((void *)v3 + 2) = v14;
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *uint64_t v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_21CB88D50();
  __break(1u);
  return result;
}

uint64_t sub_21CA7B99C(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_21CB88D10();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  unint64_t v4 = *v1;
  if (*v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_21CB88D10();
    swift_bridgeObjectRelease();
    uint64_t v6 = v5 + v3;
    if (!__OFADD__(v5, v3)) {
      goto LABEL_5;
    }
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v6 = v5 + v3;
  if (__OFADD__(v5, v3)) {
    goto LABEL_25;
  }
LABEL_5:
  unint64_t v4 = *v1;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v1 = v4;
  uint64_t v5 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v4 & 0x8000000000000000) == 0 && (v4 & 0x4000000000000000) == 0)
  {
    uint64_t v8 = v4 & 0xFFFFFFFFFFFFFF8;
    if (v6 <= *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      goto LABEL_15;
    }
    uint64_t v5 = 1;
  }
  if (v4 >> 62) {
    goto LABEL_27;
  }
  uint64_t v9 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v9 <= v6) {
      uint64_t v9 = v6;
    }
    swift_bridgeObjectRetain();
    unint64_t v4 = MEMORY[0x21D4B5CB0](v5, v9, 1, v4);
    swift_bridgeObjectRelease();
    *uint64_t v1 = v4;
    uint64_t v8 = v4 & 0xFFFFFFFFFFFFFF8;
LABEL_15:
    uint64_t result = sub_21CA7C9B0(v8 + 8 * *(void *)(v8 + 16) + 32, (*(void *)(v8 + 24) >> 1) - *(void *)(v8 + 16), a1);
    if (v11 >= v3) {
      break;
    }
LABEL_26:
    __break(1u);
LABEL_27:
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_21CB88D10();
    swift_bridgeObjectRelease();
  }
  if (v11 >= 1)
  {
    uint64_t v12 = *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    BOOL v13 = __OFADD__(v12, v11);
    uint64_t v14 = v12 + v11;
    if (v13)
    {
      __break(1u);
      return result;
    }
    *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10) = v14;
  }
  swift_bridgeObjectRelease();

  return sub_21CB88530();
}

uint64_t sub_21CA7BB68(uint64_t result)
{
  uint64_t v3 = *(void *)(result + 16);
  unint64_t v4 = *(void **)v1;
  int64_t v5 = *(void *)(*(void *)v1 + 16);
  int64_t v6 = v5 + v3;
  if (__OFADD__(v5, v3))
  {
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  uint64_t v7 = result;
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || (int64_t v9 = v4[3] >> 1, v9 < v6))
  {
    if (v5 <= v6) {
      int64_t v10 = v5 + v3;
    }
    else {
      int64_t v10 = v5;
    }
    unint64_t v4 = sub_21CAC8194(isUniquelyReferenced_nonNull_native, v10, 1, v4);
    int64_t v9 = v4[3] >> 1;
  }
  uint64_t v11 = v4[2];
  uint64_t v12 = v9 - v11;
  uint64_t result = sub_21CA3C3F0((uint64_t)v41, (uint64_t)&v4[3 * v11 + 4], v9 - v11, v7);
  if (result < v3) {
    goto LABEL_15;
  }
  if (result)
  {
    uint64_t v15 = v4[2];
    BOOL v16 = __OFADD__(v15, result);
    uint64_t v17 = v15 + result;
    if (v16)
    {
      __break(1u);
      goto LABEL_47;
    }
    v4[2] = v17;
  }
  if (result != v12)
  {
LABEL_13:
    uint64_t result = sub_21CA7CFF0();
    *(void *)uint64_t v1 = v4;
    return result;
  }
LABEL_16:
  int64_t v2 = v4[2];
  uint64_t v13 = v42;
  uint64_t v39 = v41[1];
  uint64_t v40 = v41[0];
  uint64_t v14 = v43;
  if (v44)
  {
    unint64_t v18 = (v44 - 1) & v44;
    uint64_t v19 = v43;
    unint64_t v20 = __clz(__rbit64(v44)) | (v43 << 6);
    int64_t v38 = (unint64_t)(v42 + 64) >> 6;
    goto LABEL_18;
  }
LABEL_47:
  int64_t v35 = v14 + 1;
  if (__OFADD__(v14, 1)) {
    goto LABEL_66;
  }
  int64_t v38 = (unint64_t)(v13 + 64) >> 6;
  if (v35 >= v38) {
    goto LABEL_13;
  }
  unint64_t v36 = *(void *)(v39 + 8 * v35);
  uint64_t v19 = v14 + 1;
  if (!v36)
  {
    uint64_t v19 = v14 + 2;
    if (v14 + 2 >= v38) {
      goto LABEL_13;
    }
    unint64_t v36 = *(void *)(v39 + 8 * v19);
    if (!v36)
    {
      uint64_t v19 = v14 + 3;
      if (v14 + 3 >= v38) {
        goto LABEL_13;
      }
      unint64_t v36 = *(void *)(v39 + 8 * v19);
      if (!v36)
      {
        uint64_t v19 = v14 + 4;
        if (v14 + 4 >= v38) {
          goto LABEL_13;
        }
        unint64_t v36 = *(void *)(v39 + 8 * v19);
        if (!v36)
        {
          uint64_t v19 = v14 + 5;
          if (v14 + 5 >= v38) {
            goto LABEL_13;
          }
          unint64_t v36 = *(void *)(v39 + 8 * v19);
          if (!v36)
          {
            uint64_t v37 = v14 + 6;
            do
            {
              if (v38 == v37) {
                goto LABEL_13;
              }
              unint64_t v36 = *(void *)(v39 + 8 * v37++);
            }
            while (!v36);
            uint64_t v19 = v37 - 1;
          }
        }
      }
    }
  }
  unint64_t v18 = (v36 - 1) & v36;
  unint64_t v20 = __clz(__rbit64(v36)) + (v19 << 6);
LABEL_18:
  uint64_t v21 = *(void *)(v40 + 56) + 24 * v20;
  uint64_t v22 = *(void *)v21;
  uint64_t v23 = *(void *)(v21 + 8);
  char v24 = *(unsigned char *)(v21 + 16);
  uint64_t result = swift_bridgeObjectRetain();
  while (1)
  {
    unint64_t v25 = v4[3];
    int64_t v26 = v25 >> 1;
    if ((uint64_t)(v25 >> 1) < v2 + 1) {
      break;
    }
    if (v2 < v26) {
      goto LABEL_23;
    }
LABEL_20:
    v4[2] = v2;
  }
  uint64_t result = (uint64_t)sub_21CAC8194((void *)(v25 > 1), v2 + 1, 1, v4);
  unint64_t v4 = (void *)result;
  int64_t v26 = *(void *)(result + 24) >> 1;
  if (v2 >= v26) {
    goto LABEL_20;
  }
  while (1)
  {
LABEL_23:
    uint64_t v27 = (uint64_t)&v4[3 * v2 + 4];
    *(void *)uint64_t v27 = v22;
    *(void *)(v27 + 8) = v23;
    *(unsigned char *)(v27 + 16) = v24 & 1;
    ++v2;
    if (v18)
    {
      unint64_t v28 = __clz(__rbit64(v18));
      v18 &= v18 - 1;
      unint64_t v29 = v28 | (v19 << 6);
      goto LABEL_41;
    }
    int64_t v30 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v30 >= v38) {
      goto LABEL_45;
    }
    unint64_t v31 = *(void *)(v39 + 8 * v30);
    uint64_t v32 = v19 + 1;
    if (!v31)
    {
      uint64_t v32 = v19 + 2;
      if (v19 + 2 >= v38) {
        goto LABEL_45;
      }
      unint64_t v31 = *(void *)(v39 + 8 * v32);
      if (!v31)
      {
        uint64_t v32 = v19 + 3;
        if (v19 + 3 >= v38) {
          goto LABEL_45;
        }
        unint64_t v31 = *(void *)(v39 + 8 * v32);
        if (!v31)
        {
          uint64_t v32 = v19 + 4;
          if (v19 + 4 >= v38) {
            goto LABEL_45;
          }
          unint64_t v31 = *(void *)(v39 + 8 * v32);
          if (!v31)
          {
            uint64_t v32 = v19 + 5;
            if (v19 + 5 >= v38) {
              goto LABEL_45;
            }
            unint64_t v31 = *(void *)(v39 + 8 * v32);
            if (!v31)
            {
              uint64_t v33 = v19 + 6;
              while (v38 != v33)
              {
                unint64_t v31 = *(void *)(v39 + 8 * v33++);
                if (v31)
                {
                  uint64_t v32 = v33 - 1;
                  goto LABEL_40;
                }
              }
LABEL_45:
              v4[2] = v2;
              goto LABEL_13;
            }
          }
        }
      }
    }
LABEL_40:
    unint64_t v18 = (v31 - 1) & v31;
    unint64_t v29 = __clz(__rbit64(v31)) + (v32 << 6);
    uint64_t v19 = v32;
LABEL_41:
    uint64_t v34 = *(void *)(v40 + 56) + 24 * v29;
    uint64_t v22 = *(void *)v34;
    uint64_t v23 = *(void *)(v34 + 8);
    char v24 = *(unsigned char *)(v34 + 16);
    if (v2 >= v26)
    {
      uint64_t result = swift_bridgeObjectRetain();
      goto LABEL_20;
    }
    uint64_t result = swift_bridgeObjectRetain();
  }
  __break(1u);
LABEL_66:
  __break(1u);
  return result;
}

uint64_t sub_21CA7BF68(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_21CA3CB9C(a1, a2, a3, *v3, &qword_267C952A8);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_21CA7BF98(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_21CA48024(a1, a2, a3, (void *)*v3, &qword_267C952A0, (uint64_t (*)(void))type metadata accessor for FMFIntermediateFriend);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_21CA7BFD4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_21CA7C168(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_21CA7BFF4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_21CA48024(a1, a2, a3, (void *)*v3, &qword_267C95348, MEMORY[0x263F3CD48]);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_21CA7C030(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_21CA7C2F4(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_21CA7C050(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_21CA48024(a1, a2, a3, (void *)*v3, &qword_267C95268, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_21CA7C08C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_21CA48024(a1, a2, a3, (void *)*v3, &qword_267C95278, MEMORY[0x263F3CF28]);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_21CA7C0C8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_21CA3CB9C(a1, a2, a3, *v3, &qword_267C95258);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_21CA7C0F8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_21CA7C614(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_21CA7C118(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_21CA3CB9C(a1, a2, a3, *v3, &qword_267C952B8);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_21CA7C148(char a1, int64_t a2, char a3, void *a4)
{
  return sub_21CA48024(a1, a2, a3, a4, &qword_267C95260, (uint64_t (*)(void))type metadata accessor for FMFFriend);
}

uint64_t sub_21CA7C168(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_21CA57E34(&qword_267C95298);
    int64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 408);
  }
  else
  {
    int64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[408 * v8]) {
      memmove(v12, v13, 408 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[408 * v8] || v12 >= &v13[408 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_21CB88D50();
  __break(1u);
  return result;
}

uint64_t sub_21CA7C2F4(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_21CA57E34(&qword_267C95288);
    int64_t v10 = (void *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    int64_t v10 = (void *)MEMORY[0x263F8EE78];
  }
  uint64_t v12 = v10 + 4;
  uint64_t v13 = a4 + 4;
  size_t v14 = 5 * v8;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v14]) {
      memmove(v10 + 4, a4 + 4, v14 * 8);
    }
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v14] || v12 >= &v13[v14])
  {
    sub_21CA57E34(&qword_267C95290);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_21CB88D50();
  __break(1u);
  return result;
}

uint64_t sub_21CA7C48C(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_21CA57E34(&qword_267C952B0);
    int64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    int64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[24 * v8]) {
      memmove(v12, v13, 24 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[24 * v8] || v12 >= &v13[24 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_21CB88D50();
  __break(1u);
  return result;
}

uint64_t sub_21CA7C614(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_21CA57E34(&qword_267C95218);
    int64_t v10 = (void *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 4);
  }
  else
  {
    int64_t v10 = (void *)MEMORY[0x263F8EE78];
  }
  unint64_t v13 = (unint64_t)(v10 + 4);
  unint64_t v14 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v13 >= v14 + 16 * v8) {
      memmove(v10 + 4, a4 + 4, 16 * v8);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 16 * v8 || v13 >= v14 + 16 * v8)
  {
    sub_21CA57E34((uint64_t *)&unk_267C95220);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_21CB88D50();
  __break(1u);
  return result;
}

uint64_t sub_21CA7C7A0(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_21CB88D10();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_21CB88D10();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_21CA7D05C(&qword_267C95340, &qword_267C95338);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          sub_21CA57E34(&qword_267C95338);
          uint64_t v12 = sub_21CA7CBC4(v16, i, a3);
          id v14 = *v13;
          ((void (*)(void (**)(id *), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_21CA7CDD4();
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = sub_21CB88D50();
  __break(1u);
  return result;
}

uint64_t sub_21CA7C9B0(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_21CB88D10();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_21CB88D10();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_21CA7D05C(&qword_267C95330, &qword_267C95328);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          sub_21CA57E34(&qword_267C95328);
          uint64_t v12 = sub_21CA7CC30(v16, i, a3);
          uint64_t v14 = *v13;
          swift_unknownObjectRetain();
          ((void (*)(uint64_t (**)(), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_21CA57E34(&qword_267C95320);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = sub_21CB88D50();
  __break(1u);
  return result;
}

void (*sub_21CA7CBC4(void (**a1)(id *a1), unint64_t a2, uint64_t a3))(void *)
{
  unint64_t v6 = (void (*)(id *))malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_21CA7CCE0(v6, a2, a3);
  return sub_21CA7CC2C;
}

void (*sub_21CA7CC30(uint64_t (**a1)(), unint64_t a2, uint64_t a3))(void *)
{
  unint64_t v6 = (uint64_t (*)())malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_21CA7CF70(v6, a2, a3);
  return sub_21CA7CC2C;
}

void sub_21CA7CC98(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void))(*a1 + 32))(*a1);

  free(v1);
}

void (*sub_21CA7CCE0(void (*result)(id *a1), unint64_t a2, uint64_t a3))(id *a1)
{
  uint64_t v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    id v4 = (id)MEMORY[0x21D4B5CA0](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    id v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(void *)uint64_t v3 = v4;
    return sub_21CA7CD60;
  }
  __break(1u);
  return result;
}

void sub_21CA7CD60(id *a1)
{
}

unint64_t sub_21CA7CD68()
{
  unint64_t result = qword_267C951E8;
  if (!qword_267C951E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C951E8);
  }
  return result;
}

uint64_t sub_21CA7CDBC(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 304);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

unint64_t sub_21CA7CDD4()
{
  unint64_t result = qword_267C951F8;
  if (!qword_267C951F8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_267C951F8);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for FMLFenceError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x21CA7CEE0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FMLFenceError()
{
  return &type metadata for FMLFenceError;
}

unint64_t sub_21CA7CF1C()
{
  unint64_t result = qword_267C95200;
  if (!qword_267C95200)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C95200);
  }
  return result;
}

uint64_t (*sub_21CA7CF70(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  int v3 = (uint64_t *)result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    uint64_t v4 = MEMORY[0x21D4B5CA0](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    uint64_t v4 = swift_unknownObjectRetain();
LABEL_5:
    *int v3 = v4;
    return destroy for FMOSActivity;
  }
  __break(1u);
  return result;
}

uint64_t sub_21CA7CFF0()
{
  return swift_release();
}

uint64_t sub_21CA7CFF8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FMFLocation();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_21CA7D05C(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_21CA5EEBC(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t FMFShowHideLocationAction.__allocating_init(hideLocation:)(char a1)
{
  uint64_t result = swift_allocObject();
  *(unsigned char *)(result + 17) = a1;
  *(unsigned char *)(result + 16) = 0;
  return result;
}

uint64_t FMFShowHideLocationAction.init(hideLocation:)(char a1)
{
  *(unsigned char *)(v1 + 17) = a1;
  *(unsigned char *)(v1 + 16) = 0;
  return v1;
}

uint64_t sub_21CA7D0F4()
{
  return 60;
}

void FMFShowHideLocationAction.__allocating_init(requiresRefresh:)()
{
}

void FMFShowHideLocationAction.init(requiresRefresh:)()
{
}

uint64_t FMFShowHideLocationAction.deinit()
{
  return v0;
}

uint64_t FMFShowHideLocationAction.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for FMFShowHideLocationAction()
{
  return self;
}

uint64_t method lookup function for FMFShowHideLocationAction(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for FMFShowHideLocationAction);
}

uint64_t dispatch thunk of FMFShowHideLocationAction.__allocating_init(hideLocation:)()
{
  return (*(uint64_t (**)(void))(v0 + 136))();
}

__n128 FMFUpdateMeDeviceAction.__allocating_init(meDevice:)(__n128 *a1)
{
  uint64_t v2 = swift_allocObject();
  __n128 result = *a1;
  unint64_t v4 = a1[1].n128_u64[0];
  unint64_t v5 = a1[1].n128_u64[1];
  unsigned __int8 v6 = a1[2].n128_u8[0];
  *(__n128 *)(v2 + 24) = *a1;
  *(void *)(v2 + 40) = v4;
  *(void *)(v2 + 48) = v5;
  *(unsigned char *)(v2 + 56) = v6;
  *(unsigned char *)(v2 + 16) = 0;
  return result;
}

uint64_t FMFUpdateMeDeviceAction.init(meDevice:)(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 24);
  char v4 = *(unsigned char *)(a1 + 32);
  *(_OWORD *)(v1 + 24) = *(_OWORD *)a1;
  *(void *)(v1 + 40) = v2;
  *(void *)(v1 + 48) = v3;
  *(unsigned char *)(v1 + 56) = v4;
  *(unsigned char *)(v1 + 16) = 0;
  return v1;
}

uint64_t sub_21CA7D380()
{
  return 0;
}

void FMFUpdateMeDeviceAction.__allocating_init(requiresRefresh:)()
{
}

void FMFUpdateMeDeviceAction.init(requiresRefresh:)()
{
}

uint64_t sub_21CA7D530()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t FMFUpdateMeDeviceAction.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t FMFUpdateMeDeviceAction.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for FMFUpdateMeDeviceAction()
{
  return self;
}

uint64_t method lookup function for FMFUpdateMeDeviceAction(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for FMFUpdateMeDeviceAction);
}

uint64_t dispatch thunk of FMFUpdateMeDeviceAction.__allocating_init(meDevice:)()
{
  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t sub_21CA7D63C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t sub_21CA7D650(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_21CA7D664(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t sub_21CA7D678(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t sub_21CA7D68C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t sub_21CA7D6A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 40))();
}

uint64_t sub_21CA7D6B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t sub_21CA7D6C8(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t sub_21CA7D6DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 64))();
}

uint64_t sub_21CA7D6F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 72))();
}

uint64_t FMFUpdateLocationAlertAction.__allocating_init(locationAlert:location:radius:address:label:triggerType:isOn:repeating:phoneNumbers:emails:schedule:ckRecordName:ckRecordZoneOwnerName:acceptanceStatus:)(uint64_t a1, void *a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, void *a7, unsigned __int8 *a8, char a9, char a10, unsigned __int8 *a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, unsigned __int8 *a18)
{
  int v23 = a4 & 1;
  uint64_t v24 = swift_allocObject();
  uint64_t v25 = sub_21CA7DAE4(a1, a2, a3, v23, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, v24);
  swift_release();
  return v25;
}

uint64_t FMFUpdateLocationAlertAction.init(locationAlert:location:radius:address:label:triggerType:isOn:repeating:phoneNumbers:emails:schedule:ckRecordName:ckRecordZoneOwnerName:acceptanceStatus:)(uint64_t a1, void *a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, void *a7, unsigned __int8 *a8, char a9, char a10, unsigned __int8 *a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  uint64_t v17 = sub_21CA7DAE4(a1, a2, a3, a4 & 1, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, v19, v20);
  swift_release();
  return v17;
}

uint64_t sub_21CA7D854()
{
  return 60;
}

void FMFUpdateLocationAlertAction.__allocating_init(requiresRefresh:)()
{
}

void FMFUpdateLocationAlertAction.init(requiresRefresh:)()
{
}

uint64_t sub_21CA7DA48()
{
  return sub_21CA7DF00(v0 + OBJC_IVAR____TtC7FMFCore28FMFUpdateLocationAlertAction_locationAlert);
}

uint64_t FMFUpdateLocationAlertAction.deinit()
{
  sub_21CA7DF00(v0 + OBJC_IVAR____TtC7FMFCore28FMFUpdateLocationAlertAction_locationAlert);
  return v0;
}

uint64_t FMFUpdateLocationAlertAction.__deallocating_deinit()
{
  sub_21CA7DF00(v0 + OBJC_IVAR____TtC7FMFCore28FMFUpdateLocationAlertAction_locationAlert);

  return swift_deallocClassInstance();
}

uint64_t sub_21CA7DAE4(uint64_t a1, void *a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, void *a7, unsigned __int8 *a8, char a9, unsigned __int8 *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, unsigned __int8 *a17, uint64_t a18)
{
  uint64_t v60 = a8;
  uint64_t v54 = a7;
  uint64_t v66 = a3;
  uint64_t v67 = a6;
  int v53 = a4;
  uint64_t v65 = a2;
  uint64_t v64 = a12;
  uint64_t v20 = sub_21CA57E34((uint64_t *)&unk_267C951B0);
  MEMORY[0x270FA5388](v20 - 8);
  uint64_t v62 = &v52[-((v21 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v22 = sub_21CA57E34((uint64_t *)&unk_267C96ED0);
  MEMORY[0x270FA5388](v22 - 8);
  uint64_t v63 = &v52[-((v23 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v24 = type metadata accessor for FMFLocationAlert();
  uint64_t v25 = MEMORY[0x270FA5388](v24 - 8);
  uint64_t v27 = &v52[-((v26 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v28 = MEMORY[0x270FA5388](v25);
  int64_t v30 = &v52[-v29];
  uint64_t v31 = MEMORY[0x270FA5388](v28);
  uint64_t v33 = &v52[-v32];
  MEMORY[0x270FA5388](v31);
  int64_t v35 = &v52[-v34];
  sub_21CA76174(a5, (uint64_t)v71);
  unsigned __int8 v36 = *v60;
  int v37 = *a17;
  sub_21CA7E0A0(a1, (uint64_t)v35);
  if (a9 == 2) {
    unsigned __int8 v38 = v35[43];
  }
  else {
    unsigned __int8 v38 = a9 & 1;
  }
  uint64_t v59 = a16;
  uint64_t v58 = a15;
  uint64_t v57 = a14;
  uint64_t v56 = a13;
  uint64_t v55 = a11;
  uint64_t v60 = a10;
  swift_retain();
  sub_21CA7DF00((uint64_t)v35);
  sub_21CA7E0A0(a1, (uint64_t)v33);
  uint64_t v61 = a18;
  if (v37 == 3)
  {
    if (v33[40])
    {
      unsigned __int8 v39 = v38;
      char v40 = sub_21CB88F50();
      swift_bridgeObjectRelease();
      sub_21CA7DF00((uint64_t)v33);
      LOBYTE(v37) = 0;
      unsigned __int8 v41 = v39;
      char v42 = v40 & v39;
      uint64_t v43 = v54;
      char v44 = v53;
      if (v42) {
        goto LABEL_12;
      }
      goto LABEL_11;
    }
    swift_bridgeObjectRelease();
    sub_21CA7DF00((uint64_t)v33);
    uint64_t v43 = v54;
    char v44 = v53;
    unsigned __int8 v41 = v38;
    if ((v38 & 1) == 0)
    {
LABEL_11:
      LOBYTE(v37) = 2;
      goto LABEL_12;
    }
    LOBYTE(v37) = 0;
  }
  else
  {
    unsigned __int8 v41 = v38;
    sub_21CA7DF00((uint64_t)v33);
    uint64_t v43 = v54;
    char v44 = v53;
  }
LABEL_12:
  int v45 = v44 & 1;
  sub_21CA7E0A0(a1, (uint64_t)v27);
  sub_21CA76174((uint64_t)v71, (uint64_t)v70);
  unsigned __int8 v69 = v36;
  uint64_t v46 = v63;
  uint64_t v47 = v64;
  sub_21CA7E104(v64, (uint64_t)v63);
  unsigned __int8 v68 = v37;
  uint64_t v48 = sub_21CB87590();
  uint64_t v49 = (uint64_t)v62;
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v48 - 8) + 56))(v62, 1, 1, v48);
  FMFLocationAlert.init(locationAlert:location:radius:address:label:triggerType:isOn:repeating:schedule:phoneNumbers:emails:ckRecordName:ckRecordZoneOwnerName:acceptanceStatus:muteEndDate:)(v27, v65, v66, v45, (uint64_t)v70, v67, v43, &v69, (uint64_t)v30, 2, v41, (uint64_t)v46, (uint64_t)v60, v55, v56, v57, v58, v59, &v68,
    v49);
  sub_21CA7E16C(v47);
  sub_21CA7DF00(a1);
  uint64_t v50 = v61;
  sub_21CA7E1CC((uint64_t)v30, v61 + OBJC_IVAR____TtC7FMFCore28FMFUpdateLocationAlertAction_locationAlert);
  *(unsigned char *)(v50 + 16) = 1;
  return v50;
}

uint64_t sub_21CA7DF00(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for FMFLocationAlert();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_21CA7DF5C()
{
  return type metadata accessor for FMFUpdateLocationAlertAction();
}

uint64_t type metadata accessor for FMFUpdateLocationAlertAction()
{
  uint64_t result = qword_267C95350;
  if (!qword_267C95350) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_21CA7DFB0()
{
  uint64_t result = type metadata accessor for FMFLocationAlert();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for FMFUpdateLocationAlertAction(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for FMFUpdateLocationAlertAction);
}

uint64_t dispatch thunk of FMFUpdateLocationAlertAction.__allocating_init(locationAlert:location:radius:address:label:triggerType:isOn:repeating:phoneNumbers:emails:schedule:ckRecordName:ckRecordZoneOwnerName:acceptanceStatus:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, void))(v4 + 136))(a1, a2, a3, a4 & 1);
}

uint64_t sub_21CA7E0A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FMFLocationAlert();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_21CA7E104(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_21CA57E34((uint64_t *)&unk_267C96ED0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_21CA7E16C(uint64_t a1)
{
  uint64_t v2 = sub_21CA57E34((uint64_t *)&unk_267C96ED0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_21CA7E1CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FMFLocationAlert();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_21CA7E230(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x736C69616D65;
  unint64_t v3 = 0xE600000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 0x736C69616D65;
  switch(v4)
  {
    case 1:
      uint64_t v5 = 0x6D614E7473726966;
      unint64_t v3 = 0xE900000000000065;
      break;
    case 2:
      uint64_t v5 = 0x656369766544656DLL;
      unint64_t v3 = 0xEA00000000006449;
      break;
    case 3:
      unint64_t v3 = 0xE800000000000000;
      uint64_t v5 = 0x6449656369766564;
      break;
    case 4:
      uint64_t v5 = 0x656C626967696C65;
      unint64_t v3 = 0xEE00654D6F747541;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE600000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xE900000000000065;
      if (v5 == 0x6D614E7473726966) {
        goto LABEL_13;
      }
      goto LABEL_16;
    case 2:
      unint64_t v6 = 0xEA00000000006449;
      if (v5 != 0x656369766544656DLL) {
        goto LABEL_16;
      }
      goto LABEL_13;
    case 3:
      unint64_t v6 = 0xE800000000000000;
      uint64_t v2 = 0x6449656369766564;
      goto LABEL_12;
    case 4:
      unint64_t v6 = 0xEE00654D6F747541;
      if (v5 != 0x656C626967696C65) {
        goto LABEL_16;
      }
      goto LABEL_13;
    default:
LABEL_12:
      if (v5 != v2) {
        goto LABEL_16;
      }
LABEL_13:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_16:
      }
        char v7 = sub_21CB88F50();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

BOOL sub_21CA7E41C(uint64_t a1, uint64_t a2)
{
  return a1 == a2;
}

uint64_t sub_21CA7E428(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v3 = 1701667182;
    }
    else {
      uint64_t v3 = 0x6143654D6F747561;
    }
    if (v2 == 1) {
      unint64_t v4 = 0xE400000000000000;
    }
    else {
      unint64_t v4 = 0xED0000656C626170;
    }
    int v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1) {
        uint64_t v6 = 1701667182;
      }
      else {
        uint64_t v6 = 0x6143654D6F747561;
      }
      if (v5 == 1) {
        unint64_t v7 = 0xE400000000000000;
      }
      else {
        unint64_t v7 = 0xED0000656C626170;
      }
      if (v3 != v6) {
        goto LABEL_21;
      }
      goto LABEL_19;
    }
  }
  else
  {
    unint64_t v4 = 0xE200000000000000;
    uint64_t v3 = 25705;
    int v5 = a2;
    if (a2) {
      goto LABEL_9;
    }
  }
  unint64_t v7 = 0xE200000000000000;
  if (v3 != 25705)
  {
LABEL_21:
    char v8 = sub_21CB88F50();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7) {
    goto LABEL_21;
  }
  char v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_21CA7E534(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 1701869940;
  }
  else {
    uint64_t v3 = 0x65756C6176;
  }
  if (v2) {
    unint64_t v4 = 0xE500000000000000;
  }
  else {
    unint64_t v4 = 0xE400000000000000;
  }
  if (a2) {
    uint64_t v5 = 1701869940;
  }
  else {
    uint64_t v5 = 0x65756C6176;
  }
  if (a2) {
    unint64_t v6 = 0xE400000000000000;
  }
  else {
    unint64_t v6 = 0xE500000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_21CB88F50();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_21CA7E5D0(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x64497472656C61;
  unint64_t v3 = 0xE700000000000000;
  uint64_t v4 = a1;
  unint64_t v5 = 0x64497472656C61;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0xE500000000000000;
      unint64_t v5 = 0x656C746974;
      break;
    case 2:
      unint64_t v5 = 0x6567617373656DLL;
      break;
    case 3:
      unint64_t v5 = 0x6E6F747475426B6FLL;
      unint64_t v3 = 0xED0000656C746954;
      break;
    case 4:
      unint64_t v5 = 0x6E6F747475426B6FLL;
      unint64_t v3 = 0xEB000000004C5255;
      break;
    case 5:
      unint64_t v3 = 0x800000021CB931E0;
      unint64_t v5 = 0xD000000000000011;
      break;
    case 6:
      unint64_t v5 = 0x75426C65636E6163;
      unint64_t v3 = 0xEF4C52556E6F7474;
      break;
    case 7:
      unint64_t v5 = 0x7079547472656C61;
      unint64_t v3 = 0xE900000000000065;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE700000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xE500000000000000;
      if (v5 == 0x656C746974) {
        goto LABEL_22;
      }
      goto LABEL_25;
    case 2:
      if (v5 != 0x6567617373656DLL) {
        goto LABEL_25;
      }
      goto LABEL_22;
    case 3:
      unint64_t v6 = 0xED0000656C746954;
      if (v5 != 0x6E6F747475426B6FLL) {
        goto LABEL_25;
      }
      goto LABEL_22;
    case 4:
      unint64_t v6 = 0xEB000000004C5255;
      if (v5 != 0x6E6F747475426B6FLL) {
        goto LABEL_25;
      }
      goto LABEL_22;
    case 5:
      unint64_t v6 = 0x800000021CB931E0;
      if (v5 != 0xD000000000000011) {
        goto LABEL_25;
      }
      goto LABEL_22;
    case 6:
      uint64_t v2 = 0x75426C65636E6163;
      unint64_t v6 = 0xEF4C52556E6F7474;
      goto LABEL_21;
    case 7:
      unint64_t v6 = 0xE900000000000065;
      if (v5 != 0x7079547472656C61) {
        goto LABEL_25;
      }
      goto LABEL_22;
    default:
LABEL_21:
      if (v5 != v2) {
        goto LABEL_25;
      }
LABEL_22:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_25:
      }
        char v7 = sub_21CB88F50();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_21CA7E8A0(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x7265746E65;
  unint64_t v3 = 0xE500000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 0x7265746E65;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0xE400000000000000;
      uint64_t v5 = 1953069157;
      break;
    case 2:
      uint64_t v5 = 0x74616964656D6D69;
      unint64_t v3 = 0xE900000000000065;
      break;
    case 3:
      uint64_t v5 = 0x656C756465686373;
      unint64_t v3 = 0xE900000000000064;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE500000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xE400000000000000;
      if (v5 == 1953069157) {
        goto LABEL_12;
      }
      goto LABEL_14;
    case 2:
      uint64_t v2 = 0x74616964656D6D69;
      unint64_t v6 = 0xE900000000000065;
      goto LABEL_9;
    case 3:
      unint64_t v6 = 0xE900000000000064;
      if (v5 == 0x656C756465686373) {
        goto LABEL_12;
      }
      goto LABEL_14;
    default:
LABEL_9:
      if (v5 != v2) {
        goto LABEL_14;
      }
LABEL_12:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_14:
      }
        char v7 = sub_21CB88F50();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_21CA7EA30(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xEA00000000006564;
  uint64_t v3 = 0x6F43737574617473;
  uint64_t v4 = a1;
  unint64_t v5 = 0x6F43737574617473;
  unint64_t v6 = 0xEA00000000006564;
  switch(v4)
  {
    case 1:
      unint64_t v5 = 0x614D737574617473;
      unint64_t v6 = 0xE900000000000070;
      break;
    case 2:
      unint64_t v6 = 0xE300000000000000;
      unint64_t v5 = 7107189;
      break;
    case 3:
      unint64_t v5 = 0x6D614E7473726966;
      unint64_t v6 = 0xE900000000000065;
      break;
    case 4:
      unint64_t v6 = 0xE800000000000000;
      unint64_t v5 = 0x656D614E7473616CLL;
      break;
    case 5:
      unint64_t v6 = 0xE500000000000000;
      unint64_t v5 = 0x6C69616D65;
      break;
    case 6:
      unint64_t v6 = 0x800000021CB93A10;
      unint64_t v5 = 0xD000000000000010;
      break;
    case 7:
      unint64_t v5 = 0x55746E6572727563;
      unint64_t v6 = 0xED00006449726573;
      break;
    case 8:
      unint64_t v6 = 0xE500000000000000;
      unint64_t v5 = 0x65636E6566;
      break;
    default:
      break;
  }
  switch(a2)
  {
    case 1:
      unint64_t v2 = 0xE900000000000070;
      if (v5 == 0x614D737574617473) {
        goto LABEL_25;
      }
      goto LABEL_28;
    case 2:
      unint64_t v2 = 0xE300000000000000;
      if (v5 != 7107189) {
        goto LABEL_28;
      }
      goto LABEL_25;
    case 3:
      unint64_t v2 = 0xE900000000000065;
      if (v5 != 0x6D614E7473726966) {
        goto LABEL_28;
      }
      goto LABEL_25;
    case 4:
      unint64_t v2 = 0xE800000000000000;
      if (v5 != 0x656D614E7473616CLL) {
        goto LABEL_28;
      }
      goto LABEL_25;
    case 5:
      unint64_t v2 = 0xE500000000000000;
      if (v5 != 0x6C69616D65) {
        goto LABEL_28;
      }
      goto LABEL_25;
    case 6:
      unint64_t v2 = 0x800000021CB93A10;
      if (v5 != 0xD000000000000010) {
        goto LABEL_28;
      }
      goto LABEL_25;
    case 7:
      uint64_t v3 = 0x55746E6572727563;
      unint64_t v2 = 0xED00006449726573;
      goto LABEL_24;
    case 8:
      unint64_t v2 = 0xE500000000000000;
      if (v5 != 0x65636E6566) {
        goto LABEL_28;
      }
      goto LABEL_25;
    default:
LABEL_24:
      if (v5 != v3) {
        goto LABEL_28;
      }
LABEL_25:
      if (v6 == v2) {
        char v7 = 1;
      }
      else {
LABEL_28:
      }
        char v7 = sub_21CB88F50();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_21CA7ED1C(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v3 = 0x776F6C6C616873;
    }
    else {
      uint64_t v3 = 1885693284;
    }
    if (v2 == 1) {
      unint64_t v4 = 0xE700000000000000;
    }
    else {
      unint64_t v4 = 0xE400000000000000;
    }
    int v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1) {
        uint64_t v6 = 0x776F6C6C616873;
      }
      else {
        uint64_t v6 = 1885693284;
      }
      if (v5 == 1) {
        unint64_t v7 = 0xE700000000000000;
      }
      else {
        unint64_t v7 = 0xE400000000000000;
      }
      if (v3 != v6) {
        goto LABEL_21;
      }
      goto LABEL_19;
    }
  }
  else
  {
    unint64_t v4 = 0xE400000000000000;
    uint64_t v3 = 1701736302;
    int v5 = a2;
    if (a2) {
      goto LABEL_9;
    }
  }
  unint64_t v7 = 0xE400000000000000;
  if (v3 != 1701736302)
  {
LABEL_21:
    char v8 = sub_21CB88F50();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7) {
    goto LABEL_21;
  }
  char v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_21CA7EE18(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x744F796669746F4ELL;
  }
  else {
    uint64_t v3 = 0x654D796669746F4ELL;
  }
  if (v2) {
    unint64_t v4 = 0xE800000000000000;
  }
  else {
    unint64_t v4 = 0xEC00000073726568;
  }
  if (a2) {
    uint64_t v5 = 0x744F796669746F4ELL;
  }
  else {
    uint64_t v5 = 0x654D796669746F4ELL;
  }
  if (a2) {
    unint64_t v6 = 0xEC00000073726568;
  }
  else {
    unint64_t v6 = 0xE800000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_21CB88F50();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_21CA7EEC8(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x6956776F646E6977;
  }
  else {
    uint64_t v3 = 0x736F4D746E6F7266;
  }
  if (v2) {
    unint64_t v4 = 0xEF776F646E695774;
  }
  else {
    unint64_t v4 = 0xED0000656C626973;
  }
  if (a2) {
    uint64_t v5 = 0x6956776F646E6977;
  }
  else {
    uint64_t v5 = 0x736F4D746E6F7266;
  }
  if (a2) {
    unint64_t v6 = 0xED0000656C626973;
  }
  else {
    unint64_t v6 = 0xEF776F646E695774;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_21CB88F50();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_21CA7EF88(char a1, unsigned __int8 a2)
{
  if (a1)
  {
    if (a1 == 1) {
      unint64_t v2 = 0x800000021CB939A0;
    }
    else {
      unint64_t v2 = 0x800000021CB939C0;
    }
    unint64_t v3 = 0xD000000000000011;
    int v4 = a2;
    if (a2)
    {
LABEL_6:
      if (v4 == 1) {
        unint64_t v5 = 0x800000021CB939A0;
      }
      else {
        unint64_t v5 = 0x800000021CB939C0;
      }
      if (v3 != 0xD000000000000011) {
        goto LABEL_15;
      }
      goto LABEL_13;
    }
  }
  else
  {
    unint64_t v2 = 0xE800000000000000;
    unint64_t v3 = 0x6E6F697461636F6CLL;
    int v4 = a2;
    if (a2) {
      goto LABEL_6;
    }
  }
  unint64_t v5 = 0xE800000000000000;
  if (v3 != 0x6E6F697461636F6CLL)
  {
LABEL_15:
    char v6 = sub_21CB88F50();
    goto LABEL_16;
  }
LABEL_13:
  if (v2 != v5) {
    goto LABEL_15;
  }
  char v6 = 1;
LABEL_16:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v6 & 1;
}

uint64_t sub_21CA7F08C(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x737574617473;
  }
  else {
    uint64_t v3 = 25705;
  }
  if (v2) {
    unint64_t v4 = 0xE200000000000000;
  }
  else {
    unint64_t v4 = 0xE600000000000000;
  }
  if (a2) {
    uint64_t v5 = 0x737574617473;
  }
  else {
    uint64_t v5 = 25705;
  }
  if (a2) {
    unint64_t v6 = 0xE600000000000000;
  }
  else {
    unint64_t v6 = 0xE200000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_21CB88F50();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_21CA7F124(char a1, char a2)
{
  unint64_t v3 = 0xE200000000000000;
  uint64_t v4 = 25705;
  switch(a1)
  {
    case 1:
      unint64_t v3 = 0xE500000000000000;
      uint64_t v4 = 0x6C6562616CLL;
      break;
    case 2:
      uint64_t v4 = 0x7079546C6562616CLL;
      goto LABEL_7;
    case 3:
      unint64_t v3 = 0xE600000000000000;
      uint64_t v4 = 0x644972657375;
      break;
    case 4:
      unint64_t v3 = 0xE800000000000000;
      uint64_t v4 = 0x656475746974616CLL;
      break;
    case 5:
      uint64_t v4 = 0x64757469676E6F6CLL;
LABEL_7:
      unint64_t v3 = 0xE900000000000065;
      break;
    case 6:
      unint64_t v3 = 0xE800000000000000;
      uint64_t v4 = 0x7354657461647075;
      break;
    default:
      break;
  }
  unint64_t v5 = 0xE200000000000000;
  uint64_t v6 = 25705;
  switch(a2)
  {
    case 1:
      unint64_t v5 = 0xE500000000000000;
      if (v4 == 0x6C6562616CLL) {
        goto LABEL_20;
      }
      goto LABEL_23;
    case 2:
      unint64_t v5 = 0xE900000000000065;
      if (v4 != 0x7079546C6562616CLL) {
        goto LABEL_23;
      }
      goto LABEL_20;
    case 3:
      unint64_t v5 = 0xE600000000000000;
      if (v4 != 0x644972657375) {
        goto LABEL_23;
      }
      goto LABEL_20;
    case 4:
      unint64_t v5 = 0xE800000000000000;
      if (v4 != 0x656475746974616CLL) {
        goto LABEL_23;
      }
      goto LABEL_20;
    case 5:
      uint64_t v6 = 0x64757469676E6F6CLL;
      unint64_t v5 = 0xE900000000000065;
      goto LABEL_19;
    case 6:
      unint64_t v5 = 0xE800000000000000;
      if (v4 != 0x7354657461647075) {
        goto LABEL_23;
      }
      goto LABEL_20;
    default:
LABEL_19:
      if (v4 != v6) {
        goto LABEL_23;
      }
LABEL_20:
      if (v3 == v5) {
        char v7 = 1;
      }
      else {
LABEL_23:
      }
        char v7 = sub_21CB88F50();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_21CA7F354(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v3 = 0x646E65697266;
    }
    else {
      uint64_t v3 = 0x736573696D657270;
    }
    if (v2 == 1) {
      unint64_t v4 = 0xE600000000000000;
    }
    else {
      unint64_t v4 = 0xE800000000000000;
    }
    int v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1) {
        uint64_t v6 = 0x646E65697266;
      }
      else {
        uint64_t v6 = 0x736573696D657270;
      }
      if (v5 == 1) {
        unint64_t v7 = 0xE600000000000000;
      }
      else {
        unint64_t v7 = 0xE800000000000000;
      }
      if (v3 != v6) {
        goto LABEL_21;
      }
      goto LABEL_19;
    }
  }
  else
  {
    unint64_t v4 = 0xE500000000000000;
    uint64_t v3 = 0x6C61636F6CLL;
    int v5 = a2;
    if (a2) {
      goto LABEL_9;
    }
  }
  unint64_t v7 = 0xE500000000000000;
  if (v3 != 0x6C61636F6CLL)
  {
LABEL_21:
    char v8 = sub_21CB88F50();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7) {
    goto LABEL_21;
  }
  char v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_21CA7F460(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x73736572646461;
  unint64_t v3 = 0xE700000000000000;
  uint64_t v4 = a1;
  unint64_t v5 = 0x73736572646461;
  switch(v4)
  {
    case 1:
      unint64_t v5 = 0x64757469676E6F6CLL;
      unint64_t v3 = 0xE900000000000065;
      break;
    case 2:
      unint64_t v3 = 0xE800000000000000;
      unint64_t v5 = 0x656475746974616CLL;
      break;
    case 3:
      unint64_t v3 = 0x800000021CB92FF0;
      unint64_t v5 = 0xD000000000000012;
      break;
    case 4:
      unint64_t v5 = 0x6D617473656D6974;
      unint64_t v3 = 0xE900000000000070;
      break;
    case 5:
      unint64_t v3 = 0xE600000000000000;
      unint64_t v5 = 0x736C6562616CLL;
      break;
    case 6:
      unint64_t v5 = 0x756363616E497369;
      unint64_t v3 = 0xEC00000065746172;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE700000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xE900000000000065;
      if (v5 == 0x64757469676E6F6CLL) {
        goto LABEL_19;
      }
      goto LABEL_22;
    case 2:
      unint64_t v6 = 0xE800000000000000;
      if (v5 != 0x656475746974616CLL) {
        goto LABEL_22;
      }
      goto LABEL_19;
    case 3:
      unint64_t v6 = 0x800000021CB92FF0;
      if (v5 != 0xD000000000000012) {
        goto LABEL_22;
      }
      goto LABEL_19;
    case 4:
      unint64_t v6 = 0xE900000000000070;
      if (v5 != 0x6D617473656D6974) {
        goto LABEL_22;
      }
      goto LABEL_19;
    case 5:
      unint64_t v6 = 0xE600000000000000;
      uint64_t v2 = 0x736C6562616CLL;
      goto LABEL_18;
    case 6:
      unint64_t v6 = 0xEC00000065746172;
      if (v5 != 0x756363616E497369) {
        goto LABEL_22;
      }
      goto LABEL_19;
    default:
LABEL_18:
      if (v5 != v2) {
        goto LABEL_22;
      }
LABEL_19:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_22:
      }
        char v7 = sub_21CB88F50();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_21CA7F6D4(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v3 = 0x6E69776F6C6C6F66;
    }
    else {
      uint64_t v3 = 0x7463657269646962;
    }
    if (v2 == 1) {
      unint64_t v4 = 0xE900000000000067;
    }
    else {
      unint64_t v4 = 0xED00006C616E6F69;
    }
    int v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1) {
        uint64_t v6 = 0x6E69776F6C6C6F66;
      }
      else {
        uint64_t v6 = 0x7463657269646962;
      }
      if (v5 == 1) {
        unint64_t v7 = 0xE900000000000067;
      }
      else {
        unint64_t v7 = 0xED00006C616E6F69;
      }
      if (v3 != v6) {
        goto LABEL_21;
      }
      goto LABEL_19;
    }
  }
  else
  {
    unint64_t v4 = 0xE800000000000000;
    uint64_t v3 = 0x7265776F6C6C6F66;
    int v5 = a2;
    if (a2) {
      goto LABEL_9;
    }
  }
  unint64_t v7 = 0xE800000000000000;
  if (v3 != 0x7265776F6C6C6F66)
  {
LABEL_21:
    char v8 = sub_21CB88F50();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7) {
    goto LABEL_21;
  }
  char v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_21CA7F810(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x726564726FLL;
  }
  else {
    uint64_t v3 = 25705;
  }
  if (v2) {
    unint64_t v4 = 0xE200000000000000;
  }
  else {
    unint64_t v4 = 0xE500000000000000;
  }
  if (a2) {
    uint64_t v5 = 0x726564726FLL;
  }
  else {
    uint64_t v5 = 25705;
  }
  if (a2) {
    unint64_t v6 = 0xE500000000000000;
  }
  else {
    unint64_t v6 = 0xE200000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_21CB88F50();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_21CA7F8A8(char a1, char a2)
{
  if (a1) {
    uint64_t v2 = 0x626C6C614378616DLL;
  }
  else {
    uint64_t v2 = 0x626C6C61436E696DLL;
  }
  if (a2) {
    uint64_t v3 = 0x626C6C614378616DLL;
  }
  else {
    uint64_t v3 = 0x626C6C61436E696DLL;
  }
  if (v2 == v3) {
    char v4 = 1;
  }
  else {
    char v4 = sub_21CB88F50();
  }
  swift_bridgeObjectRelease_n();
  return v4 & 1;
}

uint64_t sub_21CA7F940(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v3 = 0x676E69646E6550;
    }
    else {
      uint64_t v3 = 0x6465747065636341;
    }
    if (v2 == 1) {
      unint64_t v4 = 0xE700000000000000;
    }
    else {
      unint64_t v4 = 0xE800000000000000;
    }
    int v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1) {
        uint64_t v6 = 0x676E69646E6550;
      }
      else {
        uint64_t v6 = 0x6465747065636341;
      }
      if (v5 == 1) {
        unint64_t v7 = 0xE700000000000000;
      }
      else {
        unint64_t v7 = 0xE800000000000000;
      }
      if (v3 != v6) {
        goto LABEL_21;
      }
      goto LABEL_19;
    }
  }
  else
  {
    unint64_t v4 = 0xE600000000000000;
    uint64_t v3 = 0x6E6564646948;
    int v5 = a2;
    if (a2) {
      goto LABEL_9;
    }
  }
  unint64_t v7 = 0xE600000000000000;
  if (v3 != 0x6E6564646948)
  {
LABEL_21:
    char v8 = sub_21CB88F50();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7) {
    goto LABEL_21;
  }
  char v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_21CA7FA54(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x6D6F74737563;
  }
  else {
    uint64_t v3 = 0x746C7561666564;
  }
  if (v2) {
    unint64_t v4 = 0xE700000000000000;
  }
  else {
    unint64_t v4 = 0xE600000000000000;
  }
  if (a2) {
    uint64_t v5 = 0x6D6F74737563;
  }
  else {
    uint64_t v5 = 0x746C7561666564;
  }
  if (a2) {
    unint64_t v6 = 0xE600000000000000;
  }
  else {
    unint64_t v6 = 0xE700000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_21CB88F50();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_21CA7FAF8(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xEC0000005F24213ELL;
  uint64_t v3 = 0x656D6F683C21245FLL;
  uint64_t v4 = a1;
  uint64_t v5 = 0x656D6F683C21245FLL;
  unint64_t v6 = 0xEC0000005F24213ELL;
  switch(v4)
  {
    case 1:
      uint64_t v5 = 0x6B726F773C21245FLL;
      break;
    case 2:
      uint64_t v5 = 0x6F6863733C21245FLL;
      unint64_t v6 = 0xEE005F24213E6C6FLL;
      break;
    case 3:
      uint64_t v5 = 0x3E6D79673C21245FLL;
      unint64_t v6 = 0xEB000000005F2421;
      break;
    case 4:
      uint64_t v5 = 0x6568746F3C21245FLL;
      unint64_t v6 = 0xED00005F24213E72;
      break;
    default:
      break;
  }
  switch(a2)
  {
    case 1:
      if (v5 == 0x6B726F773C21245FLL) {
        goto LABEL_13;
      }
      goto LABEL_16;
    case 2:
      unint64_t v2 = 0xEE005F24213E6C6FLL;
      if (v5 != 0x6F6863733C21245FLL) {
        goto LABEL_16;
      }
      goto LABEL_13;
    case 3:
      uint64_t v3 = 0x3E6D79673C21245FLL;
      unint64_t v2 = 0xEB000000005F2421;
      goto LABEL_12;
    case 4:
      unint64_t v2 = 0xED00005F24213E72;
      if (v5 != 0x6568746F3C21245FLL) {
        goto LABEL_16;
      }
      goto LABEL_13;
    default:
LABEL_12:
      if (v5 != v3) {
        goto LABEL_16;
      }
LABEL_13:
      if (v6 == v2) {
        char v7 = 1;
      }
      else {
LABEL_16:
      }
        char v7 = sub_21CB88F50();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_21CA7FD0C(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x7472656C61;
  unint64_t v3 = 0xE500000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 0x7472656C61;
  switch(v4)
  {
    case 1:
      uint64_t v5 = 0x6F43726576726573;
      unint64_t v3 = 0xED0000747865746ELL;
      break;
    case 2:
      uint64_t v5 = 0x746E6F4361746164;
      unint64_t v3 = 0xEB00000000747865;
      break;
    case 3:
      uint64_t v5 = 0x6174536863746566;
      unint64_t v3 = 0xEB00000000737574;
      break;
    case 4:
      uint64_t v5 = 0x52646E616D6D6F63;
      unint64_t v3 = 0xEF65736E6F707365;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE500000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xED0000747865746ELL;
      if (v5 == 0x6F43726576726573) {
        goto LABEL_13;
      }
      goto LABEL_16;
    case 2:
      unint64_t v6 = 0xEB00000000747865;
      if (v5 != 0x746E6F4361746164) {
        goto LABEL_16;
      }
      goto LABEL_13;
    case 3:
      uint64_t v2 = 0x6174536863746566;
      unint64_t v6 = 0xEB00000000737574;
      goto LABEL_12;
    case 4:
      unint64_t v6 = 0xEF65736E6F707365;
      if (v5 != 0x52646E616D6D6F63) {
        goto LABEL_16;
      }
      goto LABEL_13;
    default:
LABEL_12:
      if (v5 != v2) {
        goto LABEL_16;
      }
LABEL_13:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_16:
      }
        char v7 = sub_21CB88F50();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_21CA7FF20(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x454E4F5952455645;
  }
  else {
    uint64_t v3 = 0x53444E45495246;
  }
  if (v2) {
    unint64_t v4 = 0xE700000000000000;
  }
  else {
    unint64_t v4 = 0xE800000000000000;
  }
  if (a2) {
    uint64_t v5 = 0x454E4F5952455645;
  }
  else {
    uint64_t v5 = 0x53444E45495246;
  }
  if (a2) {
    unint64_t v6 = 0xE800000000000000;
  }
  else {
    unint64_t v6 = 0xE700000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_21CB88F50();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_21CA7FFC8(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xD000000000000013;
  unint64_t v3 = 0x800000021CB934F0;
  uint64_t v4 = a1;
  unint64_t v5 = 0xD000000000000013;
  switch(v4)
  {
    case 1:
      unint64_t v5 = 0xD000000000000011;
      unint64_t v6 = "fenceNotification";
      goto LABEL_5;
    case 2:
      unint64_t v5 = 0x61636F4C65646968;
      unint64_t v3 = 0xEC0000006E6F6974;
      break;
    case 3:
      unint64_t v6 = "shouldReceiveEmails";
LABEL_5:
      unint64_t v3 = (unint64_t)(v6 - 32) | 0x8000000000000000;
      break;
    case 4:
      unint64_t v5 = 0x457972616D697270;
      unint64_t v3 = 0xEC0000006C69616DLL;
      break;
    case 5:
      unint64_t v5 = 0x657469726F766166;
      unint64_t v3 = 0xE900000000000073;
      break;
    default:
      break;
  }
  unint64_t v7 = 0x800000021CB934F0;
  switch(a2)
  {
    case 1:
      unint64_t v2 = 0xD000000000000011;
      char v8 = "fenceNotification";
      goto LABEL_13;
    case 2:
      unint64_t v7 = 0xEC0000006E6F6974;
      if (v5 != 0x61636F4C65646968) {
        goto LABEL_20;
      }
      goto LABEL_17;
    case 3:
      char v8 = "shouldReceiveEmails";
LABEL_13:
      unint64_t v7 = (unint64_t)(v8 - 32) | 0x8000000000000000;
      if (v5 != v2) {
        goto LABEL_20;
      }
      goto LABEL_17;
    case 4:
      unint64_t v2 = 0x457972616D697270;
      unint64_t v7 = 0xEC0000006C69616DLL;
      goto LABEL_16;
    case 5:
      unint64_t v7 = 0xE900000000000073;
      if (v5 != 0x657469726F766166) {
        goto LABEL_20;
      }
      goto LABEL_17;
    default:
LABEL_16:
      if (v5 != v2) {
        goto LABEL_20;
      }
LABEL_17:
      if (v3 == v7) {
        char v9 = 1;
      }
      else {
LABEL_20:
      }
        char v9 = sub_21CB88F50();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v9 & 1;
  }
}

uint64_t sub_21CA801D8()
{
  unint64_t v0 = FMFConfigValue.rawValue.getter();
  uint64_t v2 = v1;
  if (v0 == FMFConfigValue.rawValue.getter() && v2 == v3) {
    char v5 = 1;
  }
  else {
    char v5 = sub_21CB88F50();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t sub_21CA80270(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x454D45564153;
  unint64_t v3 = 0xE600000000000000;
  uint64_t v4 = a1;
  unint64_t v5 = 0x454D45564153;
  switch(v4)
  {
    case 1:
      unint64_t v5 = 0x5441434552504544;
      unint64_t v3 = 0xEA00000000004445;
      break;
    case 2:
      unint64_t v3 = 0x800000021CB93170;
      unint64_t v5 = 0xD000000000000015;
      break;
    case 3:
      unint64_t v5 = 0x496B726F7774656ELL;
      unint64_t v3 = 0xEC00000065757373;
      break;
    case 4:
      unint64_t v5 = 0x696C616974696E69;
      unint64_t v3 = 0xEE006E6F6974617ALL;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE600000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xEA00000000004445;
      if (v5 == 0x5441434552504544) {
        goto LABEL_13;
      }
      goto LABEL_16;
    case 2:
      unint64_t v6 = 0x800000021CB93170;
      if (v5 != 0xD000000000000015) {
        goto LABEL_16;
      }
      goto LABEL_13;
    case 3:
      uint64_t v2 = 0x496B726F7774656ELL;
      unint64_t v6 = 0xEC00000065757373;
      goto LABEL_12;
    case 4:
      unint64_t v6 = 0xEE006E6F6974617ALL;
      if (v5 != 0x696C616974696E69) {
        goto LABEL_16;
      }
      goto LABEL_13;
    default:
LABEL_12:
      if (v5 != v2) {
        goto LABEL_16;
      }
LABEL_13:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_16:
      }
        char v7 = sub_21CB88F50();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_21CA8046C(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xE900000000000072;
  uint64_t v3 = 0x756F487472617473;
  uint64_t v4 = a1;
  uint64_t v5 = 0x756F487472617473;
  unint64_t v6 = 0xE900000000000072;
  switch(v4)
  {
    case 1:
      unint64_t v6 = 0xE800000000000000;
      uint64_t v5 = 0x6E694D7472617473;
      break;
    case 2:
      unint64_t v6 = 0xE700000000000000;
      uint64_t v5 = 0x72756F48646E65;
      break;
    case 3:
      unint64_t v6 = 0xE600000000000000;
      uint64_t v5 = 0x6E694D646E65;
      break;
    case 4:
      uint64_t v5 = 0x6557664F73796164;
      unint64_t v6 = 0xEA00000000006B65;
      break;
    case 5:
      unint64_t v6 = 0xE800000000000000;
      uint64_t v5 = 0x737961446E617073;
      break;
    case 6:
      unint64_t v6 = 0xE700000000000000;
      uint64_t v5 = 0x7A5465636E6566;
      break;
    default:
      break;
  }
  switch(a2)
  {
    case 1:
      unint64_t v2 = 0xE800000000000000;
      if (v5 == 0x6E694D7472617473) {
        goto LABEL_19;
      }
      goto LABEL_22;
    case 2:
      unint64_t v2 = 0xE700000000000000;
      if (v5 != 0x72756F48646E65) {
        goto LABEL_22;
      }
      goto LABEL_19;
    case 3:
      unint64_t v2 = 0xE600000000000000;
      if (v5 != 0x6E694D646E65) {
        goto LABEL_22;
      }
      goto LABEL_19;
    case 4:
      unint64_t v2 = 0xEA00000000006B65;
      if (v5 != 0x6557664F73796164) {
        goto LABEL_22;
      }
      goto LABEL_19;
    case 5:
      unint64_t v2 = 0xE800000000000000;
      uint64_t v3 = 0x737961446E617073;
      goto LABEL_18;
    case 6:
      unint64_t v2 = 0xE700000000000000;
      if (v5 != 0x7A5465636E6566) {
        goto LABEL_22;
      }
      goto LABEL_19;
    default:
LABEL_18:
      if (v5 != v3) {
        goto LABEL_22;
      }
LABEL_19:
      if (v6 == v2) {
        char v7 = 1;
      }
      else {
LABEL_22:
      }
        char v7 = sub_21CB88F50();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_21CA806C0(char a1, char a2)
{
  unint64_t v3 = 0xE200000000000000;
  unint64_t v4 = 25705;
  switch(a1)
  {
    case 1:
      unint64_t v3 = 0xE800000000000000;
      unint64_t v4 = 0x6E6F697461636F6CLL;
      break;
    case 2:
      unint64_t v3 = 0x800000021CB93230;
      unint64_t v4 = 0xD000000000000010;
      break;
    case 3:
      unint64_t v4 = 0x6E6F697461636F6CLL;
      unint64_t v3 = 0xEE00656372756F53;
      break;
    default:
      break;
  }
  unint64_t v5 = 0xE200000000000000;
  unint64_t v6 = 25705;
  switch(a2)
  {
    case 1:
      unint64_t v5 = 0xE800000000000000;
      if (v4 == 0x6E6F697461636F6CLL) {
        goto LABEL_12;
      }
      goto LABEL_14;
    case 2:
      unint64_t v5 = 0x800000021CB93230;
      unint64_t v6 = 0xD000000000000010;
      goto LABEL_9;
    case 3:
      unint64_t v5 = 0xEE00656372756F53;
      if (v4 == 0x6E6F697461636F6CLL) {
        goto LABEL_12;
      }
      goto LABEL_14;
    default:
LABEL_9:
      if (v4 != v6) {
        goto LABEL_14;
      }
LABEL_12:
      if (v3 == v5) {
        char v7 = 1;
      }
      else {
LABEL_14:
      }
        char v7 = sub_21CB88F50();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_21CA8085C(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xE900000000000044;
  uint64_t v3 = 0x49555565726F7473;
  unint64_t v4 = 0xE900000000000044;
  uint64_t v5 = a1;
  uint64_t v6 = 0x49555565726F7473;
  switch(v5)
  {
    case 1:
      uint64_t v6 = 0x4E79616C70736964;
      unint64_t v4 = 0xEB00000000656D61;
      break;
    case 2:
      uint64_t v6 = 0x73614865726F7473;
      unint64_t v4 = 0xED00006567616D49;
      break;
    case 3:
      uint64_t v6 = 0x6D614E74726F6873;
      unint64_t v4 = 0xE900000000000065;
      break;
    default:
      break;
  }
  switch(a2)
  {
    case 1:
      unint64_t v2 = 0xEB00000000656D61;
      if (v6 == 0x4E79616C70736964) {
        goto LABEL_12;
      }
      goto LABEL_14;
    case 2:
      uint64_t v3 = 0x73614865726F7473;
      unint64_t v2 = 0xED00006567616D49;
      goto LABEL_9;
    case 3:
      unint64_t v2 = 0xE900000000000065;
      if (v6 == 0x6D614E74726F6873) {
        goto LABEL_12;
      }
      goto LABEL_14;
    default:
LABEL_9:
      if (v6 != v3) {
        goto LABEL_14;
      }
LABEL_12:
      if (v4 == v2) {
        char v7 = 1;
      }
      else {
LABEL_14:
      }
        char v7 = sub_21CB88F50();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t FMFAddLocationAlertAction.__allocating_init(friendId:followerIds:emails:phoneNumbers:location:address:label:addressType:radius:locationAlertTarget:triggerType:repeating:schedule:ckRecordName:ckRecordZoneOwnerName:acceptanceStatus:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, double a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, unsigned __int8 *a12, unsigned __int8 *a13, unsigned __int8 *a14, unsigned __int8 a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,unsigned __int8 *a21)
{
  uint64_t v26 = swift_allocObject();
  FMFAddLocationAlertAction.init(friendId:followerIds:emails:phoneNumbers:location:address:label:addressType:radius:locationAlertTarget:triggerType:repeating:schedule:ckRecordName:ckRecordZoneOwnerName:acceptanceStatus:)(a1, a2, a3, a4, a5, a6, a7, v27, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
    a20,
    a21);
  return v26;
}

uint64_t FMFAddLocationAlertAction.init(friendId:followerIds:emails:phoneNumbers:location:address:label:addressType:radius:locationAlertTarget:triggerType:repeating:schedule:ckRecordName:ckRecordZoneOwnerName:acceptanceStatus:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, double a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, unsigned __int8 *a12, unsigned __int8 *a13, unsigned __int8 *a14, unsigned __int8 a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,unsigned __int8 *a21)
{
  uint64_t v103 = a1;
  uint64_t v107 = a2;
  uint64_t v111 = a5;
  uint64_t v108 = a3;
  uint64_t v112 = a18;
  uint64_t v109 = a16;
  uint64_t v110 = a20;
  uint64_t v24 = sub_21CA57E34((uint64_t *)&unk_267C951B0);
  MEMORY[0x270FA5388](v24 - 8);
  id v101 = (char *)&v91 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = type metadata accessor for FMFLocationAlert();
  MEMORY[0x270FA5388](v26 - 8);
  uint64_t v102 = (uint64_t)&v91 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = sub_21CA57E34((uint64_t *)&unk_267C96ED0);
  uint64_t v29 = MEMORY[0x270FA5388](v28 - 8);
  uint64_t v100 = (uint64_t)&v91 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v29);
  uint64_t v104 = (uint64_t)&v91 - v31;
  swift_bridgeObjectRelease();
  int v32 = *a12;
  int v33 = *a13;
  uint64_t v34 = *a14;
  int v35 = *a21;
  uint64_t v36 = *(int *)(type metadata accessor for FMFLocation() + 44);
  uint64_t v105 = a6;
  sub_21CA26A4C(a6 + v36, (uint64_t)v122, &qword_267C951F0);
  sub_21CA26A4C((uint64_t)v122, (uint64_t)v123, &qword_267C951F0);
  if (sub_21CA7CDBC((uint64_t)v123) == 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (qword_267C94990 != -1) {
      swift_once();
    }
    uint64_t v37 = sub_21CB880A0();
    sub_21CA4CC18(v37, (uint64_t)qword_267CA5368);
    unsigned __int8 v38 = sub_21CB88070();
    os_log_type_t v39 = sub_21CB88860();
    BOOL v40 = os_log_type_enabled(v38, v39);
    uint64_t v41 = v106;
    if (v40)
    {
      char v42 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)char v42 = 0;
      _os_log_impl(&dword_21CA00000, v38, v39, "Location must have an coordinates.", v42, 2u);
      MEMORY[0x21D4B6B70](v42, -1, -1);
    }

    sub_21CA81BB4();
    swift_allocError();
    *(void *)uint64_t v43 = 0xD000000000000013;
    *(void *)(v43 + 8) = 0x800000021CB94C70;
    *(void *)(v43 + 16) = 0;
    *(void *)(v43 + 24) = 0;
    *(unsigned char *)(v43 + 32) = 0;
    swift_willThrow();
    uint64_t v44 = v109;
    goto LABEL_44;
  }
  int v97 = v35;
  int v98 = v32;
  uint64_t v99 = v34;
  uint64_t v45 = v107;
  uint64_t v46 = v110;
  uint64_t v47 = (void *)v123[38];
  sub_21CA26A4C((uint64_t)v122, (uint64_t)v120, &qword_267C951F0);
  sub_21CA26A4C((uint64_t)v120, (uint64_t)v121, &qword_267C951E0);
  if (sub_21CA76890((uint64_t)v121) != 1)
  {
    int v96 = v33;
    uint64_t v41 = v106;
    if (!a4 || !*(void *)(a4 + 16))
    {
      if (v111)
      {
        if (!(*(void *)(v111 + 16) | v45))
        {
LABEL_17:
          id v48 = v47;
          sub_21CA81C54((uint64_t)v120, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_21CA5E3D0);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_21CA81C54((uint64_t)v120, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_21CA1358C);
          if (qword_267C94990 != -1) {
            swift_once();
          }
          uint64_t v57 = sub_21CB880A0();
          sub_21CA4CC18(v57, (uint64_t)qword_267CA5368);
          uint64_t v58 = sub_21CB88070();
          os_log_type_t v59 = sub_21CB88860();
          BOOL v60 = os_log_type_enabled(v58, v59);
          uint64_t v44 = v109;
          if (v60)
          {
            uint64_t v61 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)uint64_t v61 = 0;
            _os_log_impl(&dword_21CA00000, v58, v59, "Email, phone numbers, friendId all cannot be empty.", v61, 2u);
            MEMORY[0x21D4B6B70](v61, -1, -1);
          }

          sub_21CA81BB4();
          swift_allocError();
          unint64_t v55 = 0xD00000000000001ELL;
          uint64_t v56 = "emails, phoneNumbers, friendId";
          goto LABEL_22;
        }
      }
      else if (!v45)
      {
        goto LABEL_17;
      }
    }
    if (v96)
    {
      char v62 = sub_21CB88F50();
      id v63 = v47;
      swift_retain();
      sub_21CA81C54((uint64_t)v120, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_21CA5E3D0);
      swift_bridgeObjectRelease();
      if ((v62 & 1) != 0 && !v45) {
        goto LABEL_27;
      }
    }
    else
    {
      id v70 = v47;
      swift_retain();
      sub_21CA81C54((uint64_t)v120, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_21CA5E3D0);
      swift_bridgeObjectRelease();
      if (!v45)
      {
LABEL_27:
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_21CA81C54((uint64_t)v120, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_21CA1358C);
        if (qword_267C94990 != -1) {
          swift_once();
        }
        uint64_t v64 = sub_21CB880A0();
        sub_21CA4CC18(v64, (uint64_t)qword_267CA5368);
        uint64_t v65 = sub_21CB88070();
        os_log_type_t v66 = sub_21CB88860();
        BOOL v67 = os_log_type_enabled(v65, v66);
        uint64_t v44 = v109;
        if (v67)
        {
          unsigned __int8 v68 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)unsigned __int8 v68 = 0;
          _os_log_impl(&dword_21CA00000, v65, v66, "Alert me should be with a friendId only.", v68, 2u);
          MEMORY[0x21D4B6B70](v68, -1, -1);
        }

        sub_21CA81BB4();
        swift_allocError();
        *(_OWORD *)uint64_t v69 = xmmword_21CB8BAE0;
        *(_OWORD *)(v69 + 16) = xmmword_21CB8BAF0;
        *(unsigned char *)(v69 + 32) = 1;
LABEL_43:
        swift_willThrow();

        goto LABEL_44;
      }
    }
    uint64_t v91 = a19;
    uint64_t v92 = a17;
    int v93 = a15;
    unsigned __int8 v94 = v47;
    uint64_t v95 = a10;
    switch(v99)
    {
      case 3:
        swift_bridgeObjectRelease();
        uint64_t v72 = v104;
        sub_21CA7E104(v109, v104);
        goto LABEL_37;
      default:
        char v71 = sub_21CB88F50();
        swift_bridgeObjectRelease();
        uint64_t v72 = v104;
        sub_21CA7E104(v109, v104);
        if ((v71 & 1) == 0) {
          goto LABEL_46;
        }
LABEL_37:
        uint64_t v73 = type metadata accessor for FMFSchedule();
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v73 - 8) + 48))(v72, 1, v73) == 1)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_21CA81C54((uint64_t)v120, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_21CA1358C);
          swift_release();
          sub_21CA7E16C(v72);
          if (qword_267C94990 != -1) {
            swift_once();
          }
          uint64_t v74 = sub_21CB880A0();
          sub_21CA4CC18(v74, (uint64_t)qword_267CA5368);
          uint64_t v75 = sub_21CB88070();
          os_log_type_t v76 = sub_21CB88860();
          BOOL v77 = os_log_type_enabled(v75, v76);
          uint64_t v47 = v94;
          uint64_t v44 = v109;
          if (v77)
          {
            uint64_t v78 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)uint64_t v78 = 0;
            _os_log_impl(&dword_21CA00000, v75, v76, "Scheduled fences need to have a schedule", v78, 2u);
            MEMORY[0x21D4B6B70](v78, -1, -1);
          }

          sub_21CA81BB4();
          swift_allocError();
          *(_OWORD *)uint64_t v79 = xmmword_21CB8BAD0;
          *(void *)(v79 + 16) = 0;
          *(void *)(v79 + 24) = 0;
          *(unsigned char *)(v79 + 32) = 0;
          goto LABEL_43;
        }
LABEL_46:
        sub_21CA7E16C(v72);
        if (a11)
        {
          swift_bridgeObjectRetain();
          v81._countAndFlagsBits = v95;
          v81._object = a11;
          FMFDefaultLabel.init(rawValue:)(v81);
          if (v119[0] == 5) {
            __int16 v82 = 259;
          }
          else {
            __int16 v82 = 3;
          }
        }
        else
        {
          uint64_t v95 = 0;
          __int16 v82 = 0;
        }
        char v83 = v97;
        if (v97 != 3) {
          goto LABEL_59;
        }
        if (v96)
        {
          char v84 = sub_21CB88F50();
          swift_bridgeObjectRelease();
          if (v84)
          {
            char v83 = 0;
            if (v93) {
              goto LABEL_59;
            }
          }
        }
        else
        {
          swift_bridgeObjectRelease();
          if (v93)
          {
            char v83 = 0;
LABEL_59:
            memcpy(v119, v121, sizeof(v119));
            char v118 = v98;
            v116[0] = v95;
            v116[1] = (uint64_t)a11;
            __int16 v117 = v82;
            unsigned __int8 v115 = v96;
            uint64_t v85 = v100;
            char v114 = v99;
            uint64_t v86 = v109;
            sub_21CA7E104(v109, v100);
            char v113 = v83;
            uint64_t v87 = sub_21CB87590();
            uint64_t v88 = (uint64_t)v101;
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v87 - 8) + 56))(v101, 1, 1, v87);
            uint64_t v90 = v46;
            uint64_t v89 = v102;
            FMFLocationAlert.init(identifier:location:address:addressType:radius:label:locationAlertTarget:triggerType:repeating:schedule:phoneNumbers:emails:followerIds:friendId:ckRecordName:ckRecordZoneOwnerName:acceptanceStatus:muteEndDate:)(v119, 0, 0, v94, &v118, v116, &v115, &v114, v102, a7, v93 & 1, v85, v111, a4, v108, v103, v45, v92, v112,
              v91,
              v90,
              &v113,
              v88);
            sub_21CA7E16C(v86);
            sub_21CA56F90(v105, (uint64_t (*)(void))type metadata accessor for FMFLocation);
            sub_21CA7E1CC(v89, v41 + OBJC_IVAR____TtC7FMFCore25FMFAddLocationAlertAction_locationAlert);
            swift_release();
            *(unsigned char *)(v41 + 16) = 1;
            return v41;
          }
        }
        char v83 = 2;
        goto LABEL_59;
    }
  }
  id v48 = v47;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v41 = v106;
  if (qword_267C94990 != -1) {
    swift_once();
  }
  uint64_t v49 = sub_21CB880A0();
  sub_21CA4CC18(v49, (uint64_t)qword_267CA5368);
  uint64_t v50 = sub_21CB88070();
  os_log_type_t v51 = sub_21CB88860();
  BOOL v52 = os_log_type_enabled(v50, v51);
  uint64_t v44 = v109;
  if (v52)
  {
    int v53 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)int v53 = 0;
    _os_log_impl(&dword_21CA00000, v50, v51, "Location must have an address.", v53, 2u);
    MEMORY[0x21D4B6B70](v53, -1, -1);
  }

  sub_21CA81BB4();
  swift_allocError();
  unint64_t v55 = 0xD000000000000010;
  uint64_t v56 = "location.address";
LABEL_22:
  *(void *)uint64_t v54 = v55;
  *(void *)(v54 + 8) = (unint64_t)(v56 - 32) | 0x8000000000000000;
  *(void *)(v54 + 16) = 0;
  *(void *)(v54 + 24) = 0;
  *(unsigned char *)(v54 + 32) = 0;
  swift_willThrow();

LABEL_44:
  sub_21CA7E16C(v44);
  sub_21CA56F90(v105, (uint64_t (*)(void))type metadata accessor for FMFLocation);
  type metadata accessor for FMFAddLocationAlertAction();
  swift_deallocPartialClassInstance();
  return v41;
}

uint64_t sub_21CA818D4()
{
  return 60;
}

void FMFAddLocationAlertAction.__allocating_init(requiresRefresh:)()
{
}

void FMFAddLocationAlertAction.init(requiresRefresh:)()
{
}

uint64_t sub_21CA81AC8()
{
  return sub_21CA56F90(v0 + OBJC_IVAR____TtC7FMFCore25FMFAddLocationAlertAction_locationAlert, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
}

uint64_t FMFAddLocationAlertAction.deinit()
{
  sub_21CA56F90(v0 + OBJC_IVAR____TtC7FMFCore25FMFAddLocationAlertAction_locationAlert, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
  return v0;
}

uint64_t FMFAddLocationAlertAction.__deallocating_deinit()
{
  sub_21CA56F90(v0 + OBJC_IVAR____TtC7FMFCore25FMFAddLocationAlertAction_locationAlert, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);

  return swift_deallocClassInstance();
}

unint64_t sub_21CA81BB4()
{
  unint64_t result = qword_267C95360;
  if (!qword_267C95360)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C95360);
  }
  return result;
}

uint64_t type metadata accessor for FMFAddLocationAlertAction()
{
  uint64_t result = qword_267C95368;
  if (!qword_267C95368) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_21CA81C54(uint64_t a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))
{
  long long v6 = *(_OWORD *)(a1 + 256);
  long long v7 = *(_OWORD *)(a1 + 272);
  long long v4 = *(_OWORD *)(a1 + 224);
  long long v5 = *(_OWORD *)(a1 + 240);
  a2(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
    *(void *)(a1 + 152),
    *(void *)(a1 + 160),
    *(void *)(a1 + 168),
    *(void *)(a1 + 176),
    *(void *)(a1 + 184),
    *(void *)(a1 + 192),
    *(void *)(a1 + 200),
    *(void *)(a1 + 208),
    *(void *)(a1 + 216),
    v4,
    *((void *)&v4 + 1),
    v5,
    *((void *)&v5 + 1),
    v6,
    *((void *)&v6 + 1),
    v7,
    *((void *)&v7 + 1),
    *(void *)(a1 + 288),
    *(void *)(a1 + 296));
  return a1;
}

uint64_t sub_21CA81CE0()
{
  return type metadata accessor for FMFAddLocationAlertAction();
}

uint64_t method lookup function for FMFAddLocationAlertAction(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for FMFAddLocationAlertAction);
}

uint64_t dispatch thunk of FMFAddLocationAlertAction.__allocating_init(friendId:followerIds:emails:phoneNumbers:location:address:label:addressType:radius:locationAlertTarget:triggerType:repeating:schedule:ckRecordName:ckRecordZoneOwnerName:acceptanceStatus:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 136))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12);
}

uint64_t sub_21CA81D58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t sub_21CA81D6C()
{
  uint64_t v1 = self;
  id v2 = objc_msgSend(v1, sel_defaultCenter);
  uint64_t v3 = (void *)sub_21CB882C0();
  objc_msgSend(v2, sel_removeObserver_name_object_, v0, v3, 0);

  id v4 = objc_msgSend(v1, sel_defaultCenter);
  objc_msgSend(v4, sel_removeObserver_name_object_, v0, *MEMORY[0x263F536E0], 0);

  sub_21CA640FC(v0 + 16);
  return v0;
}

uint64_t sub_21CA81E50()
{
  sub_21CA81D6C();

  return swift_deallocClassInstance();
}

uint64_t sub_21CA81E84()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_21CA81E94()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

void sub_21CA82098()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_21CA57E34(&qword_267C95400);
  MEMORY[0x270FA5388](v2 - 8);
  id v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_21CB87630();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  char v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v9 = (objc_class *)type metadata accessor for FMReverseGeocodingOperation();
  v26.receiver = v0;
  v26.super_class = v9;
  objc_msgSendSuper2(&v26, sel_start);
  id v24 = self;
  id v10 = objc_msgSend(v24, sel_sharedService);
  id v11 = objc_msgSend(v10, sel_defaultTraits);

  sub_21CA82BC8();
  uint64_t v12 = &v1[OBJC_IVAR____TtC7FMFCore27FMReverseGeocodingOperation_request];
  sub_21CB39F50(*(id *)&v1[OBJC_IVAR____TtC7FMFCore27FMReverseGeocodingOperation_request + 16]);
  uint64_t v14 = v13;
  uint64_t v15 = type metadata accessor for FMReverseGeocodingRequest();
  sub_21CA66BD0((uint64_t)&v12[*(int *)(v15 + 24)], (uint64_t)v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_21CA82C08((uint64_t)v4);
  }
  else
  {
    uint64_t v23 = v1;
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
    sub_21CB875E0();
    sub_21CB87610();
    swift_bridgeObjectRelease();
    objc_msgSend(v11, sel_clearDeviceDisplayLanguages);
    if (v11)
    {
      id v16 = v11;
      uint64_t v17 = (void *)sub_21CB882C0();
      swift_bridgeObjectRelease();
      objc_msgSend(v16, sel_addDeviceDisplayLanguage_, v17);

      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      swift_bridgeObjectRelease();
    }
    uint64_t v1 = v23;
  }
  if (v12[*(int *)(v15 + 32)] == 1 && v14) {
    objc_msgSend(v14, sel_setHorizontalAccuracy_, 1100.0);
  }
  id v18 = objc_msgSend(v24, sel_sharedService);
  id v19 = objc_msgSend(v18, sel_ticketForReverseGeocodeLocation_traits_, v14, v11);

  if (v19)
  {
    uint64_t v20 = swift_allocObject();
    *(void *)(v20 + 16) = v1;
    aBlock[4] = sub_21CA82CA0;
    void aBlock[5] = v20;
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 1107296256;
    uint64_t aBlock[2] = sub_21CA82934;
    uint64_t aBlock[3] = &unk_26CD6AB50;
    uint64_t v21 = _Block_copy(aBlock);
    swift_unknownObjectRetain();
    uint64_t v22 = v1;
    swift_release();
    objc_msgSend(v19, sel_submitWithHandler_timeout_networkActivity_, v21, 25, 0);
    swift_unknownObjectRelease_n();

    _Block_release(v21);
  }
  else
  {
  }
}

void sub_21CA82498(unint64_t a1, id a2, char *a3)
{
  unint64_t v6 = 0x267C94000uLL;
  uint64_t v7 = &unk_267CA5000;
  char v8 = &off_264437000;
  if (a2)
  {
    id v9 = a2;
    if (qword_267C94998 != -1) {
      swift_once();
    }
    uint64_t v10 = sub_21CB880A0();
    sub_21CA4CC18(v10, (uint64_t)qword_267CA5380);
    id v11 = a2;
    id v12 = a2;
    unint64_t v13 = sub_21CB88070();
    os_log_type_t v14 = sub_21CB88860();
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v15 = (uint8_t *)swift_slowAlloc();
      uint64_t v16 = swift_slowAlloc();
      uint64_t v31 = v16;
      *(_DWORD *)uint64_t v15 = 136315138;
      swift_getErrorValue();
      uint64_t v17 = sub_21CB89000();
      uint64_t v33 = sub_21CA4E450(v17, v18, &v31);
      uint64_t v7 = (void *)&unk_267CA5000;
      sub_21CB889C0();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_21CA00000, v13, v14, "FMReverseGeocodingOperation: reverse geocoding completed with error: %s", v15, 0xCu);
      swift_arrayDestroy();
      uint64_t v19 = v16;
      char v8 = &off_264437000;
      MEMORY[0x21D4B6B70](v19, -1, -1);
      uint64_t v20 = v15;
      unint64_t v6 = 0x267C94000;
      MEMORY[0x21D4B6B70](v20, -1, -1);
    }
    else
    {
    }
    uint64_t v21 = *(void (**)(void, id))&a3[v7[55]];
    id v22 = a2;
    v21(0, a2);

    objc_msgSend(a3, (SEL)v8[110], 1);
  }
  if (a1)
  {
    if (a1 >> 62)
    {
      swift_bridgeObjectRetain();
      if (sub_21CB88D10())
      {
LABEL_11:
        if ((a1 & 0xC000000000000001) != 0)
        {
          MEMORY[0x21D4B5CA0](0, a1);
        }
        else
        {
          if (!*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
            goto LABEL_24;
          }
          swift_unknownObjectRetain();
        }
        swift_bridgeObjectRelease();
        if (*(void *)(v6 + 2456) == -1)
        {
LABEL_15:
          uint64_t v24 = sub_21CB880A0();
          sub_21CA4CC18(v24, (uint64_t)qword_267CA5380);
          swift_unknownObjectRetain_n();
          uint64_t v25 = sub_21CB88070();
          os_log_type_t v26 = sub_21CB88880();
          if (os_log_type_enabled(v25, v26))
          {
            uint64_t v27 = (uint8_t *)swift_slowAlloc();
            uint64_t v28 = swift_slowAlloc();
            *(_DWORD *)uint64_t v27 = 136315138;
            uint64_t v31 = 0;
            unint64_t v32 = 0xE000000000000000;
            uint64_t v33 = v28;
            sub_21CA57E34((uint64_t *)&unk_267C95410);
            sub_21CB88CA0();
            uint64_t v31 = sub_21CA4E450(v31, v32, &v33);
            uint64_t v7 = (void *)&unk_267CA5000;
            char v8 = &off_264437000;
            sub_21CB889C0();
            swift_unknownObjectRelease_n();
            swift_bridgeObjectRelease();
            _os_log_impl(&dword_21CA00000, v25, v26, "FMReverseGeocodingOperation: reverse geocoding completed with item: %s", v27, 0xCu);
            swift_arrayDestroy();
            MEMORY[0x21D4B6B70](v28, -1, -1);
            MEMORY[0x21D4B6B70](v27, -1, -1);
          }
          else
          {

            swift_unknownObjectRelease_n();
          }
          uint64_t v29 = *(void (**)(uint64_t, id))&a3[v7[55]];
          uint64_t v30 = swift_unknownObjectRetain();
          v29(v30, a2);
          swift_unknownObjectRelease();
          objc_msgSend(a3, (SEL)v8[110], 1);
          swift_unknownObjectRelease();
          return;
        }
LABEL_24:
        swift_once();
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v23 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v23) {
        goto LABEL_11;
      }
    }
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_21CA82934(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = a2;
  uint64_t v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  if (a2)
  {
    sub_21CA57E34((uint64_t *)&unk_267C95410);
    uint64_t v4 = sub_21CB88510();
  }
  swift_retain();
  id v6 = a3;
  v5(v4, a3);
  swift_release();

  return swift_bridgeObjectRelease();
}

id sub_21CA82A44()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMReverseGeocodingOperation();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_21CA82ACC()
{
  return type metadata accessor for FMReverseGeocodingOperation();
}

uint64_t type metadata accessor for FMReverseGeocodingOperation()
{
  uint64_t result = qword_267C95390;
  if (!qword_267C95390) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_21CA82B20()
{
  uint64_t result = type metadata accessor for FMReverseGeocodingRequest();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

unint64_t sub_21CA82BC8()
{
  unint64_t result = qword_267C95408;
  if (!qword_267C95408)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_267C95408);
  }
  return result;
}

uint64_t sub_21CA82C08(uint64_t a1)
{
  uint64_t v2 = sub_21CA57E34(&qword_267C95400);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_21CA82C68()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

void sub_21CA82CA0(unint64_t a1, void *a2)
{
  sub_21CA82498(a1, a2, *(char **)(v2 + 16));
}

uint64_t sub_21CA82CA8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for FMReverseGeocodingRequest();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t FMFShareLocationAction.__allocating_init(handles:friendId:duration:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 24) = a1;
  *(void *)(v8 + 32) = a2;
  *(void *)(v8 + 40) = a3;
  uint64_t v9 = v8 + OBJC_IVAR____TtC7FMFCore22FMFShareLocationAction_duration;
  uint64_t v10 = sub_21CB87920();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v9, a4, v10);
  *(unsigned char *)(v8 + 16) = 1;
  return v8;
}

uint64_t FMFShareLocationAction.init(handles:friendId:duration:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 24) = a1;
  *(void *)(v4 + 32) = a2;
  *(void *)(v4 + 40) = a3;
  uint64_t v6 = v4 + OBJC_IVAR____TtC7FMFCore22FMFShareLocationAction_duration;
  uint64_t v7 = sub_21CB87920();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(v6, a4, v7);
  *(unsigned char *)(v4 + 16) = 1;
  return v4;
}

uint64_t sub_21CA82E34()
{
  sub_21CB88B70();
  swift_bridgeObjectRelease();
  sub_21CB89110();
  sub_21CB883D0();
  swift_bridgeObjectRelease();
  sub_21CB883D0();
  sub_21CA2A060();
  sub_21CB88470();
  sub_21CB883D0();
  swift_bridgeObjectRelease();
  sub_21CB883D0();
  uint64_t v0 = swift_bridgeObjectRetain();
  MEMORY[0x21D4B5620](v0, MEMORY[0x263F8D310]);
  sub_21CB883D0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_21CB883D0();
  sub_21CB87920();
  sub_21CA82FD4();
  sub_21CB88F00();
  sub_21CB883D0();
  swift_bridgeObjectRelease();
  return 60;
}

unint64_t sub_21CA82FD4()
{
  unint64_t result = qword_267C95420;
  if (!qword_267C95420)
  {
    sub_21CB87920();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C95420);
  }
  return result;
}

void FMFShareLocationAction.__allocating_init(requiresRefresh:)()
{
}

void FMFShareLocationAction.init(requiresRefresh:)()
{
}

uint64_t sub_21CA8308C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtC7FMFCore22FMFShareLocationAction_duration;
  uint64_t v2 = sub_21CB87920();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(v1, v2);
}

uint64_t FMFShareLocationAction.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtC7FMFCore22FMFShareLocationAction_duration;
  uint64_t v2 = sub_21CB87920();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t FMFShareLocationAction.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtC7FMFCore22FMFShareLocationAction_duration;
  uint64_t v2 = sub_21CB87920();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_21CA8322C()
{
  return type metadata accessor for FMFShareLocationAction();
}

uint64_t type metadata accessor for FMFShareLocationAction()
{
  uint64_t result = qword_267C95428;
  if (!qword_267C95428) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_21CA83280()
{
  uint64_t result = sub_21CB87920();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for FMFShareLocationAction(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for FMFShareLocationAction);
}

uint64_t dispatch thunk of FMFShareLocationAction.__allocating_init(handles:friendId:duration:)()
{
  return (*(uint64_t (**)(void))(v0 + 152))();
}

uint64_t sub_21CA83354@<X0>(uint64_t a1@<X8>)
{
  uint64_t v53 = a1;
  uint64_t v1 = sub_21CB87650();
  uint64_t v46 = *(void *)(v1 - 8);
  uint64_t v47 = v1;
  MEMORY[0x270FA5388](v1);
  uint64_t v45 = (char *)&v36 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = sub_21CB87660();
  uint64_t v44 = *(void *)(v51 - 8);
  MEMORY[0x270FA5388](v51);
  uint64_t v43 = (char *)&v36 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = sub_21CB87640();
  uint64_t v39 = *(void *)(v50 - 8);
  MEMORY[0x270FA5388](v50);
  char v42 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_21CA57E34(&qword_267C94A48);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_21CA57E34(&qword_267C95438);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_21CB872A0();
  uint64_t v40 = *(void *)(v11 - 8);
  uint64_t v41 = v11;
  MEMORY[0x270FA5388](v11);
  uint64_t v49 = (char *)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_21CB87590();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = sub_21CB87690();
  uint64_t v17 = *(void *)(v48 - 8);
  MEMORY[0x270FA5388](v48);
  uint64_t v19 = (char *)&v36 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_21CB87920();
  uint64_t v21 = *(void *)(v20 - 8);
  MEMORY[0x270FA5388](v20);
  uint64_t v23 = (char *)&v36 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v21 + 16))(v23, v52, v20);
  int v24 = (*(uint64_t (**)(char *, uint64_t))(v21 + 88))(v23, v20);
  if (v24 == *MEMORY[0x263F3CDC8])
  {
    uint64_t v25 = v53;
    sub_21CB87520();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v14 + 56))(v25, 0, 1, v13);
  }
  else
  {
    uint64_t v52 = v13;
    if (v24 == *MEMORY[0x263F3CDD0])
    {
      sub_21CB87670();
      unsigned __int8 v38 = v16;
      sub_21CB87580();
      uint64_t v37 = v17;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56))(v10, 1, 1, v48);
      uint64_t v27 = sub_21CB876F0();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v7, 1, 1, v27);
      sub_21CB87290();
      uint64_t v28 = v39;
      uint64_t v29 = v42;
      (*(void (**)(char *, void, uint64_t))(v39 + 104))(v42, *MEMORY[0x263F07780], v50);
      uint64_t v31 = v43;
      uint64_t v30 = v44;
      (*(void (**)(char *, void, uint64_t))(v44 + 104))(v43, *MEMORY[0x263F07800], v51);
      uint64_t v33 = v45;
      uint64_t v32 = v46;
      uint64_t v34 = v47;
      (*(void (**)(char *, void, uint64_t))(v46 + 104))(v45, *MEMORY[0x263F077E0], v47);
      int v35 = v49;
      sub_21CB87680();
      (*(void (**)(char *, uint64_t))(v32 + 8))(v33, v34);
      (*(void (**)(char *, uint64_t))(v30 + 8))(v31, v51);
      (*(void (**)(char *, uint64_t))(v28 + 8))(v29, v50);
      (*(void (**)(char *, uint64_t))(v40 + 8))(v35, v41);
      (*(void (**)(char *, uint64_t))(v14 + 8))(v38, v52);
      return (*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v19, v48);
    }
    else if (v24 == *MEMORY[0x263F3CDC0])
    {
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56))(v53, 1, 1, v52);
    }
    else
    {
      uint64_t result = sub_21CB88F40();
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_21CA83AA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if (a5)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = vars8;
  }
  return swift_bridgeObjectRetain();
}

uint64_t destroy for ArgumentsError(uint64_t a1)
{
  return sub_21CA83AF8(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(unsigned char *)(a1 + 32));
}

uint64_t sub_21CA83AF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t result = swift_bridgeObjectRelease();
  if (a5)
  {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for ArgumentsError(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  char v7 = *(unsigned char *)(a2 + 32);
  sub_21CA83AA4(*(void *)a2, v4, v5, v6, v7);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(unsigned char *)(a1 + 32) = v7;
  return a1;
}

uint64_t assignWithCopy for ArgumentsError(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  char v7 = *(unsigned char *)(a2 + 32);
  sub_21CA83AA4(*(void *)a2, v4, v5, v6, v7);
  uint64_t v8 = *(void *)a1;
  uint64_t v9 = *(void *)(a1 + 8);
  uint64_t v10 = *(void *)(a1 + 16);
  uint64_t v11 = *(void *)(a1 + 24);
  char v12 = *(unsigned char *)(a1 + 32);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(unsigned char *)(a1 + 32) = v7;
  sub_21CA83AF8(v8, v9, v10, v11, v12);
  return a1;
}

uint64_t assignWithTake for ArgumentsError(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 32);
  uint64_t v4 = *(void *)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  char v8 = *(unsigned char *)(a1 + 32);
  long long v9 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v9;
  *(unsigned char *)(a1 + 32) = v3;
  sub_21CA83AF8(v4, v6, v5, v7, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for ArgumentsError(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 33)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 32);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ArgumentsError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)uint64_t result = a2 - 255;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 33) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 32) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_21CA83CFC(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 32);
}

uint64_t sub_21CA83D04(uint64_t result, char a2)
{
  *(unsigned char *)(result + 32) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for ArgumentsError()
{
  return &type metadata for ArgumentsError;
}

BOOL sub_21CA83D20(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 - 8);
  MEMORY[0x270FA5388](a1);
  int v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v5, a1);
  uint64_t v6 = sub_21CB88F20();
  if (v6)
  {
    uint64_t v7 = (void *)v6;
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, a1);
  }
  else
  {
    uint64_t v7 = (void *)swift_allocError();
    (*(void (**)(uint64_t, char *, uint64_t))(v2 + 32))(v8, v4, a1);
  }
  long long v9 = (void *)sub_21CB873F0();

  BOOL v10 = sub_21CA83E74();
  return v10;
}

BOOL sub_21CA83E74()
{
  id v1 = objc_msgSend(v0, sel_domain);
  uint64_t v2 = sub_21CB882F0();
  uint64_t v4 = v3;

  if (v2 == sub_21CB882F0() && v4 == v5)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v7 = sub_21CB88F50();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    BOOL result = 0;
    if ((v7 & 1) == 0) {
      return result;
    }
  }
  return (uint64_t)objc_msgSend(v0, sel_code) >= 500 && (uint64_t)objc_msgSend(v0, sel_code) < 600;
}

uint64_t sub_21CA83F5C()
{
  id v1 = v0;
  uint64_t v2 = v0[2];
  uint64_t v3 = *(void *)(v2 + 16);
  if (v3)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = v3 - 1;
    uint64_t v5 = MEMORY[0x263F8EE78];
    for (uint64_t i = 32; ; i += 408)
    {
      memcpy(__dst, (const void *)(v2 + i), sizeof(__dst));
      int v7 = LOBYTE(__dst[2]);
      if (LOBYTE(__dst[2]))
      {
        if (LOBYTE(__dst[2]) != 1) {
          break;
        }
      }
      char v8 = sub_21CB88F50();
      sub_21CA853FC((uint64_t)__dst);
      swift_bridgeObjectRelease();
      if (v8) {
        goto LABEL_12;
      }
      if (!v7) {
        goto LABEL_11;
      }
      char v9 = sub_21CB88F50();
      swift_bridgeObjectRelease();
      if ((v9 & 1) == 0)
      {
        sub_21CA85560((uint64_t)__dst);
        if (!v4) {
          goto LABEL_18;
        }
        goto LABEL_17;
      }
LABEL_12:
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v39 = v5;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_21CA7BFD4(0, *(void *)(v5 + 16) + 1, 1);
        uint64_t v5 = v39;
      }
      unint64_t v12 = *(void *)(v5 + 16);
      unint64_t v11 = *(void *)(v5 + 24);
      if (v12 >= v11 >> 1)
      {
        sub_21CA7BFD4(v11 > 1, v12 + 1, 1);
        uint64_t v5 = v39;
      }
      *(void *)(v5 + 16) = v12 + 1;
      memcpy((void *)(v5 + 408 * v12 + 32), __dst, 0x198uLL);
      if (!v4)
      {
LABEL_18:
        swift_bridgeObjectRelease();
        goto LABEL_20;
      }
LABEL_17:
      --v4;
    }
    sub_21CA853FC((uint64_t)__dst);
LABEL_11:
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  uint64_t v5 = MEMORY[0x263F8EE78];
LABEL_20:
  swift_retain();
  uint64_t v36 = sub_21CA84968(v5);
  swift_release();
  swift_release();
  uint64_t v13 = *(void *)(v2 + 16);
  uint64_t v37 = v1;
  if (v13)
  {
    swift_bridgeObjectRetain();
    uint64_t v14 = v13 - 1;
    uint64_t v15 = MEMORY[0x263F8EE78];
    for (uint64_t j = 32; ; j += 408)
    {
      memcpy(__dst, (const void *)(v2 + j), sizeof(__dst));
      int v17 = LOBYTE(__dst[2]);
      if (LOBYTE(__dst[2]))
      {
        if (LOBYTE(__dst[2]) != 1) {
          break;
        }
      }
      char v18 = sub_21CB88F50();
      sub_21CA853FC((uint64_t)__dst);
      swift_bridgeObjectRelease();
      if (v18) {
        goto LABEL_31;
      }
      if (v17) {
        goto LABEL_30;
      }
      char v19 = sub_21CB88F50();
      swift_bridgeObjectRelease();
      if ((v19 & 1) == 0)
      {
        sub_21CA85560((uint64_t)__dst);
        if (!v14) {
          goto LABEL_37;
        }
        goto LABEL_36;
      }
LABEL_31:
      char v20 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v39 = v15;
      if ((v20 & 1) == 0)
      {
        sub_21CA7BFD4(0, *(void *)(v15 + 16) + 1, 1);
        uint64_t v15 = v39;
      }
      unint64_t v22 = *(void *)(v15 + 16);
      unint64_t v21 = *(void *)(v15 + 24);
      if (v22 >= v21 >> 1)
      {
        sub_21CA7BFD4(v21 > 1, v22 + 1, 1);
        uint64_t v15 = v39;
      }
      *(void *)(v15 + 16) = v22 + 1;
      memcpy((void *)(v15 + 408 * v22 + 32), __dst, 0x198uLL);
      if (!v14)
      {
LABEL_37:
        swift_bridgeObjectRelease();
        goto LABEL_39;
      }
LABEL_36:
      --v14;
    }
    sub_21CA853FC((uint64_t)__dst);
LABEL_30:
    swift_bridgeObjectRelease();
    goto LABEL_31;
  }
  uint64_t v15 = MEMORY[0x263F8EE78];
LABEL_39:
  swift_retain();
  uint64_t v23 = sub_21CA84C7C(v15);
  swift_release();
  swift_release();
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v24 = sub_21CA84F90(v2);
  swift_bridgeObjectRelease();
  swift_release();
  int64_t v25 = *(void *)(v2 + 16);
  uint64_t v26 = MEMORY[0x263F8EE78];
  if (v25)
  {
    uint64_t v34 = v24;
    uint64_t v35 = v23;
    __dst[0] = MEMORY[0x263F8EE78];
    swift_bridgeObjectRetain();
    sub_21CA3CB6C(0, v25, 0);
    uint64_t v26 = __dst[0];
    uint64_t v27 = (uint64_t *)(v2 + 40);
    do
    {
      uint64_t v28 = *(v27 - 1);
      uint64_t v29 = *v27;
      __dst[0] = v26;
      unint64_t v31 = *(void *)(v26 + 16);
      unint64_t v30 = *(void *)(v26 + 24);
      swift_bridgeObjectRetain();
      if (v31 >= v30 >> 1)
      {
        sub_21CA3CB6C(v30 > 1, v31 + 1, 1);
        uint64_t v26 = __dst[0];
      }
      v27 += 51;
      *(void *)(v26 + 16) = v31 + 1;
      uint64_t v32 = v26 + 24 * v31;
      *(void *)(v32 + 32) = v28;
      *(void *)(v32 + 40) = v29;
      *(unsigned char *)(v32 + 48) = 0;
      --v25;
    }
    while (v25);
    swift_bridgeObjectRelease();
    uint64_t v24 = v34;
    uint64_t v23 = v35;
  }
  v37[4] = v36;
  v37[5] = v23;
  v37[6] = v24;
  v37[7] = v26;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_21CA844DC(uint64_t a1)
{
  uint64_t v2 = v1;
  if (qword_267C94990 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_21CB880A0();
  sub_21CA4CC18(v4, (uint64_t)qword_267CA5368);
  uint64_t v5 = sub_21CB88070();
  os_log_type_t v6 = sub_21CB88880();
  if (os_log_type_enabled(v5, v6))
  {
    int v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)int v7 = 0;
    _os_log_impl(&dword_21CA00000, v5, v6, "FMFDemoDataSource: Recalculating state for demo content.", v7, 2u);
    MEMORY[0x21D4B6B70](v7, -1, -1);
  }

  uint64_t v8 = v2[4];
  uint64_t v9 = v2[5];
  uint64_t v10 = v2[6];
  unint64_t v11 = (void *)v2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_21CAC2B38(v8, v9, v10, v11, a1);
  uint64_t v14 = v13;
  uint64_t v16 = v15;
  uint64_t v18 = v17;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v2[4] = v12;
  v2[5] = v14;
  v2[6] = v16;
  v2[7] = v18;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_21CA846AC()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for FMFDemoDataSource()
{
  return self;
}

uint64_t destroy for FMFDemoDataState()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for FMFDemoDataState(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for FMFDemoDataState(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *assignWithTake for FMFDemoDataState(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for FMFDemoDataState(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FMFDemoDataState(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)BOOL result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)BOOL result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FMFDemoDataState()
{
  return &type metadata for FMFDemoDataState;
}

uint64_t sub_21CA84968(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for FMFIntermediateFriend();
  uint64_t v24 = *(void *)(v3 - 8);
  int64_t v25 = (int *)v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v6 = *(void *)(a1 + 16);
  uint64_t v7 = MEMORY[0x263F8EE78];
  if (v6)
  {
    v21[1] = v1;
    uint64_t v31 = MEMORY[0x263F8EE78];
    sub_21CA7BF98(0, v6, 0);
    uint64_t v8 = (char *)(a1 + 32);
    int64_t v27 = v6 - 1;
    uint64_t v28 = v31;
    long long v23 = xmmword_21CB8B220;
    long long v22 = xmmword_21CB8BCC0;
    uint64_t v9 = v25;
    while (1)
    {
      uint64_t v26 = v8;
      memcpy(v30, v8, 0x198uLL);
      uint64_t v10 = v30[0];
      uint64_t v11 = v30[1];
      uint64_t v29 = v30[0];
      sub_21CA57E34((uint64_t *)&unk_267C96F20);
      uint64_t v12 = swift_allocObject();
      *(_OWORD *)(v12 + 16) = v23;
      *(void *)(v12 + 32) = v10;
      *(void *)(v12 + 40) = v11;
      uint64_t v13 = &v5[v9[10]];
      swift_bridgeObjectRetain_n();
      sub_21CA853FC((uint64_t)v30);
      sub_21CB87580();
      uint64_t v14 = sub_21CB87590();
      uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
      v15(v13, 0, 1, v14);
      uint64_t v16 = &v5[v9[11]];
      sub_21CB87580();
      v15(v16, 0, 1, v14);
      v15(&v5[v9[12]], 1, 1, v14);
      v5[v9[16]] = 2;
      uint64_t v17 = v29;
      *(void *)uint64_t v5 = v29;
      *((void *)v5 + 1) = v11;
      *((void *)v5 + 2) = v17;
      *((void *)v5 + 3) = v11;
      *((void *)v5 + 4) = v12;
      *((void *)v5 + 5) = &unk_26CD67E10;
      *((_OWORD *)v5 + 3) = v22;
      *((void *)v5 + 8) = v17;
      *((void *)v5 + 9) = v11;
      v5[v9[13]] = 1;
      v5[v9[14]] = 0;
      v5[v9[15]] = 0;
      *(void *)&v5[v9[17]] = 0;
      swift_bridgeObjectRetain();
      sub_21CA85560((uint64_t)v30);
      uint64_t v7 = v28;
      uint64_t v31 = v28;
      unint64_t v19 = *(void *)(v28 + 16);
      unint64_t v18 = *(void *)(v28 + 24);
      if (v19 >= v18 >> 1)
      {
        sub_21CA7BF98(v18 > 1, v19 + 1, 1);
        uint64_t v7 = v31;
      }
      *(void *)(v7 + 16) = v19 + 1;
      sub_21CA584CC((uint64_t)v5, v7+ ((*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80))+ *(void *)(v24 + 72) * v19, (uint64_t (*)(void))type metadata accessor for FMFIntermediateFriend);
      if (!v27) {
        break;
      }
      uint64_t v8 = v26 + 408;
      --v27;
      uint64_t v28 = v7;
    }
  }
  return v7;
}

uint64_t sub_21CA84C7C(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for FMFIntermediateFriend();
  uint64_t v24 = *(void *)(v3 - 8);
  int64_t v25 = (int *)v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v6 = *(void *)(a1 + 16);
  uint64_t v7 = MEMORY[0x263F8EE78];
  if (v6)
  {
    v21[1] = v1;
    uint64_t v31 = MEMORY[0x263F8EE78];
    sub_21CA7BF98(0, v6, 0);
    uint64_t v8 = (char *)(a1 + 32);
    int64_t v27 = v6 - 1;
    uint64_t v28 = v31;
    long long v23 = xmmword_21CB8B220;
    long long v22 = xmmword_21CB8BCC0;
    uint64_t v9 = v25;
    while (1)
    {
      uint64_t v26 = v8;
      memcpy(v30, v8, 0x198uLL);
      uint64_t v10 = v30[0];
      uint64_t v11 = v30[1];
      uint64_t v29 = v30[0];
      sub_21CA57E34((uint64_t *)&unk_267C96F20);
      uint64_t v12 = swift_allocObject();
      *(_OWORD *)(v12 + 16) = v23;
      *(void *)(v12 + 32) = v10;
      *(void *)(v12 + 40) = v11;
      uint64_t v13 = &v5[v9[10]];
      swift_bridgeObjectRetain_n();
      sub_21CA853FC((uint64_t)v30);
      sub_21CB87580();
      uint64_t v14 = sub_21CB87590();
      uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
      v15(v13, 0, 1, v14);
      uint64_t v16 = &v5[v9[11]];
      sub_21CB87580();
      v15(v16, 0, 1, v14);
      v15(&v5[v9[12]], 1, 1, v14);
      v5[v9[16]] = 2;
      uint64_t v17 = v29;
      *(void *)uint64_t v5 = v29;
      *((void *)v5 + 1) = v11;
      *((void *)v5 + 2) = v17;
      *((void *)v5 + 3) = v11;
      *((void *)v5 + 4) = &unk_26CD67E40;
      *((void *)v5 + 5) = v12;
      *((void *)v5 + 6) = v17;
      *((void *)v5 + 7) = v11;
      *((_OWORD *)v5 + 4) = v22;
      v5[v9[13]] = 1;
      v5[v9[14]] = 0;
      v5[v9[15]] = 0;
      *(void *)&v5[v9[17]] = 0;
      swift_bridgeObjectRetain();
      sub_21CA85560((uint64_t)v30);
      uint64_t v7 = v28;
      uint64_t v31 = v28;
      unint64_t v19 = *(void *)(v28 + 16);
      unint64_t v18 = *(void *)(v28 + 24);
      if (v19 >= v18 >> 1)
      {
        sub_21CA7BF98(v18 > 1, v19 + 1, 1);
        uint64_t v7 = v31;
      }
      *(void *)(v7 + 16) = v19 + 1;
      sub_21CA584CC((uint64_t)v5, v7+ ((*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80))+ *(void *)(v24 + 72) * v19, (uint64_t (*)(void))type metadata accessor for FMFIntermediateFriend);
      if (!v27) {
        break;
      }
      uint64_t v8 = v26 + 408;
      --v27;
      uint64_t v28 = v7;
    }
  }
  return v7;
}

uint64_t sub_21CA84F90(uint64_t a1)
{
  uint64_t v39 = sub_21CB87590();
  uint64_t v3 = *(void *)(v39 - 8);
  MEMORY[0x270FA5388](v39);
  unsigned __int8 v38 = (char *)v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for FMFLocation();
  uint64_t v36 = *(void *)(v5 - 8);
  uint64_t v37 = (int *)v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v8 = *(void *)(a1 + 16);
  uint64_t v9 = MEMORY[0x263F8EE78];
  if (v8)
  {
    v34[0] = v1;
    uint64_t v47 = MEMORY[0x263F8EE78];
    sub_21CA3D644(0, v8, 0);
    uint64_t v10 = (char *)(a1 + 32);
    v34[1] = &v46[13];
    uint64_t v35 = (void (**)(char *, uint64_t))(v3 + 8);
    int64_t v41 = v8 - 1;
    for (uint64_t i = v47; ; uint64_t i = v9)
    {
      uint64_t v40 = v10;
      memcpy(v46, v10, 0x198uLL);
      double v11 = *(double *)&v46[3];
      double v12 = *(double *)&v46[4];
      uint64_t v13 = v46[11];
      uint64_t v14 = v46[12];
      double v15 = LOBYTE(v46[6]) ? 0.0 : *(double *)&v46[5];
      double v16 = LOBYTE(v46[8]) ? 0.0 : *(double *)&v46[7];
      double v17 = LOBYTE(v46[10]) ? 0.0 : *(double *)&v46[9];
      id v18 = objc_allocWithZone(MEMORY[0x263F00A50]);
      sub_21CA853FC((uint64_t)v46);
      unint64_t v19 = v38;
      sub_21CB87580();
      char v20 = (void *)sub_21CB87510();
      (*v35)(v19, v39);
      id v21 = objc_msgSend(v18, sel_initWithCoordinate_altitude_horizontalAccuracy_verticalAccuracy_timestamp_, v20, v11, v12, v15, v16, v17);

      if (v14)
      {
        swift_bridgeObjectRetain_n();
        unint64_t v22 = sub_21CB88D70();
        swift_bridgeObjectRelease();
        __int16 v23 = v22 >= 5 ? 259 : 3;
      }
      else
      {
        uint64_t v13 = 0;
        __int16 v23 = 0;
      }
      uint64_t v24 = v46[0];
      uint64_t v25 = v46[1];
      memcpy(v43, &v46[13], sizeof(v43));
      nullsub_1(v43, v26);
      sub_21CA26A4C((uint64_t)v43, (uint64_t)v44, &qword_267C951E0);
      v44[38] = v21;
      LOBYTE(v44[39]) = 0;
      v44[40] = v13;
      v44[41] = v14;
      LOWORD(v44[42]) = v23;
      v44[43] = 0;
      LOBYTE(v44[44]) = 0;
      memcpy(v45, v44, 0x161uLL);
      nullsub_1(v45, v27);
      *((void *)v7 + 3) = 0;
      v7[32] = 1;
      uint64_t v28 = v37;
      uint64_t v29 = &v7[v37[8]];
      uint64_t v30 = sub_21CB875D0();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v29, 1, 1, v30);
      *(void *)uint64_t v7 = v24;
      *((void *)v7 + 1) = v25;
      v7[16] = 0;
      sub_21CA26A4C((uint64_t)v45, (uint64_t)&v7[v28[11]], &qword_267C951F0);
      v7[33] = 0;
      v7[v28[9]] = 0;
      v7[v28[10]] = 0;
      swift_bridgeObjectRetain();
      sub_21CA76A94((uint64_t)&v46[13]);
      sub_21CA85560((uint64_t)v46);
      uint64_t v9 = i;
      uint64_t v47 = i;
      unint64_t v32 = *(void *)(i + 16);
      unint64_t v31 = *(void *)(i + 24);
      if (v32 >= v31 >> 1)
      {
        sub_21CA3D644(v31 > 1, v32 + 1, 1);
        uint64_t v9 = v47;
      }
      *(void *)(v9 + 16) = v32 + 1;
      sub_21CA584CC((uint64_t)v7, v9+ ((*(unsigned __int8 *)(v36 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80))+ *(void *)(v36 + 72) * v32, (uint64_t (*)(void))type metadata accessor for FMFLocation);
      if (!v41) {
        break;
      }
      uint64_t v10 = v40 + 408;
      --v41;
    }
  }
  return v9;
}

uint64_t sub_21CA853FC(uint64_t a1)
{
  return a1;
}

uint64_t sub_21CA85560(uint64_t a1)
{
  return a1;
}

unint64_t FMFAlertType.rawValue.getter()
{
  unint64_t result = 0x454D45564153;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x5441434552504544;
      break;
    case 2:
      unint64_t result = 0xD000000000000015;
      break;
    case 3:
      unint64_t result = 0x496B726F7774656ELL;
      break;
    case 4:
      unint64_t result = 0x696C616974696E69;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_21CA85784(unsigned __int8 *a1, char *a2)
{
  return sub_21CA80270(*a1, *a2);
}

uint64_t sub_21CA85790()
{
  return sub_21CAC4140();
}

uint64_t sub_21CA85798()
{
  sub_21CB88380();

  return swift_bridgeObjectRelease();
}

uint64_t sub_21CA85890()
{
  return sub_21CAD4C94();
}

FMFCore::FMFAlertType_optional sub_21CA85898(Swift::String *a1)
{
  return FMFAlertType.init(rawValue:)(*a1);
}

void sub_21CA858A4(uint64_t a1@<X8>)
{
  unint64_t v2 = 0xE600000000000000;
  uint64_t v3 = 0x454D45564153;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xEA00000000004445;
      uint64_t v3 = 0x5441434552504544;
      goto LABEL_3;
    case 2:
      *(void *)a1 = 0xD000000000000015;
      *(void *)(a1 + 8) = 0x800000021CB93170;
      break;
    case 3:
      strcpy((char *)a1, "networkIssue");
      *(unsigned char *)(a1 + 13) = 0;
      *(_WORD *)(a1 + 14) = -5120;
      break;
    case 4:
      strcpy((char *)a1, "initialization");
      *(unsigned char *)(a1 + 15) = -18;
      break;
    default:
LABEL_3:
      *(void *)a1 = v3;
      *(void *)(a1 + 8) = v2;
      break;
  }
}

void FMFAlert.alertType.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + OBJC_IVAR____TtC7FMFCore8FMFAlert_alertType);
}

uint64_t sub_21CA8598C()
{
  int v1 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC7FMFCore8FMFAlert_alertType);
  if (v1 == 5 || !MEMORY[0x21D4B6C80](v0 + 16))
  {
    uint64_t v2 = *(void *)(v0 + 48);
    swift_bridgeObjectRetain();
  }
  else if (v1)
  {
    swift_unknownObjectRelease();
    return 0;
  }
  else
  {
    id v4 = objc_msgSend(self, sel_sharedInstance);
    id v5 = objc_msgSend(v4, sel_deviceModelName);

    if (v5)
    {
      sub_21CB882F0();
    }
    uint64_t v2 = sub_21CB2ECE0(0xD000000000000017, 0x800000021CB94FB0);
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v2;
}

uint64_t sub_21CA85AB4()
{
  int v1 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC7FMFCore8FMFAlert_alertType);
  if (v1 == 5 || !MEMORY[0x21D4B6C80](v0 + 16))
  {
    uint64_t v2 = *(void *)(v0 + 64);
    swift_bridgeObjectRetain();
  }
  else
  {
    char v4 = v1;
    uint64_t v2 = sub_21CB121F4(&v4);
    swift_unknownObjectRelease();
  }
  return v2;
}

uint64_t sub_21CA85B3C()
{
  int v1 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC7FMFCore8FMFAlert_alertType);
  if (v1 == 5 || !MEMORY[0x21D4B6C80](v0 + 16))
  {
    uint64_t v2 = *(void *)(v0 + 80);
    swift_bridgeObjectRetain();
  }
  else if (v1)
  {
    swift_unknownObjectRelease();
    return 0;
  }
  else
  {
    type metadata accessor for FMLocalize();
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    id v5 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
    uint64_t v2 = sub_21CB872B0();
    swift_unknownObjectRelease();
  }
  return v2;
}

uint64_t sub_21CA85C44()
{
  int v1 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC7FMFCore8FMFAlert_alertType);
  if (v1 == 5 || !MEMORY[0x21D4B6C80](v0 + 16))
  {
    uint64_t v2 = *(void *)(v0 + 96);
    swift_bridgeObjectRetain();
  }
  else if (v1)
  {
    swift_unknownObjectRelease();
    return 0;
  }
  else
  {
    type metadata accessor for FMLocalize();
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    id v5 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
    uint64_t v2 = sub_21CB872B0();
    swift_unknownObjectRelease();
  }
  return v2;
}

unint64_t sub_21CA85D4C(char a1)
{
  unint64_t result = 0x64497472656C61;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x656C746974;
      break;
    case 2:
      unint64_t result = 0x6567617373656DLL;
      break;
    case 3:
    case 4:
      unint64_t result = 0x6E6F747475426B6FLL;
      break;
    case 5:
      unint64_t result = 0xD000000000000011;
      break;
    case 6:
      unint64_t result = 0x75426C65636E6163;
      break;
    case 7:
      unint64_t result = 0x7079547472656C61;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_21CA85E80(unsigned __int8 *a1, char *a2)
{
  return sub_21CA7E5D0(*a1, *a2);
}

uint64_t sub_21CA85E8C()
{
  return sub_21CAD51C8();
}

uint64_t sub_21CA85E98()
{
  return sub_21CAD45B0();
}

uint64_t sub_21CA85EA0()
{
  return sub_21CAD51C8();
}

uint64_t sub_21CA85EA8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_21CA86F2C();
  *a1 = result;
  return result;
}

unint64_t sub_21CA85ED8@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_21CA85D4C(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_21CA85F04@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_21CA86F2C();
  *a1 = result;
  return result;
}

void sub_21CA85F2C(unsigned char *a1@<X8>)
{
  *a1 = 8;
}

uint64_t sub_21CA85F38(uint64_t a1)
{
  unint64_t v2 = sub_21CA60D40();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t FMFAlert.__allocating_init(from:)(void *a1)
{
  uint64_t v2 = swift_allocObject();
  FMFAlert.init(from:)(a1);
  return v2;
}

void *FMFAlert.__allocating_init(alertId:title:message:okButtonLabel:okButtonURL:cancelButtonLabel:cancelButtonURL:alertType:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char *a13)
{
  unint64_t v19 = (void *)swift_allocObject();
  char v20 = *a13;
  uint64_t v19[3] = 0;
  swift_unknownObjectWeakInit();
  v19[4] = a1;
  v19[5] = a2;
  v19[6] = a3;
  v19[7] = a4;
  v19[8] = a5;
  v19[9] = a6;
  v19[10] = a7;
  v19[11] = a8;
  v19[12] = a10;
  v19[13] = a11;
  sub_21CA66D0C(a9, (uint64_t)v19 + OBJC_IVAR____TtC7FMFCore8FMFAlert_okButtonURL);
  sub_21CA66D0C(a12, (uint64_t)v19 + OBJC_IVAR____TtC7FMFCore8FMFAlert_cancelButtonURL);
  *((unsigned char *)v19 + OBJC_IVAR____TtC7FMFCore8FMFAlert_alertType) = v20;
  return v19;
}

void *FMFAlert.init(alertId:title:message:okButtonLabel:okButtonURL:cancelButtonLabel:cancelButtonURL:alertType:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char *a13)
{
  char v23 = *a13;
  v13[3] = 0;
  swift_unknownObjectWeakInit();
  v13[4] = a1;
  v13[5] = a2;
  v13[6] = a3;
  v13[7] = a4;
  unsigned __int8 v13[8] = a5;
  v13[9] = a6;
  v13[10] = a7;
  v13[11] = a8;
  v13[12] = a10;
  v13[13] = a11;
  sub_21CA66D0C(a9, (uint64_t)v13 + OBJC_IVAR____TtC7FMFCore8FMFAlert_okButtonURL);
  sub_21CA66D0C(a12, (uint64_t)v13 + OBJC_IVAR____TtC7FMFCore8FMFAlert_cancelButtonURL);
  *((unsigned char *)v13 + OBJC_IVAR____TtC7FMFCore8FMFAlert_alertType) = v23;
  return v13;
}

uint64_t sub_21CA8619C(void (*a1)(unsigned char *))
{
  uint64_t v3 = sub_21CA57E34(&qword_267C95190);
  MEMORY[0x270FA5388](v3 - 8);
  id v5 = &v13[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = sub_21CB87480();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = &v13[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  int v10 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC7FMFCore8FMFAlert_alertType);
  if (v10 == 5
    || !MEMORY[0x21D4B6C80](v1 + 16)
    || (v14 = v10, v11 = sub_21CB123C8(&v14), uint64_t result = swift_unknownObjectRelease(), (v11 & 1) == 0))
  {
    sub_21CA66CA4(v1 + OBJC_IVAR____TtC7FMFCore8FMFAlert_okButtonURL, (uint64_t)v5);
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
    {
      return sub_21CA07B00((uint64_t)v5);
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v7 + 32))(v9, v5, v6);
      a1(v9);
      return (*(uint64_t (**)(unsigned char *, uint64_t))(v7 + 8))(v9, v6);
    }
  }
  return result;
}

uint64_t sub_21CA8637C(void (*a1)(char *))
{
  uint64_t v3 = sub_21CA57E34(&qword_267C95190);
  MEMORY[0x270FA5388](v3 - 8);
  id v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_21CB87480();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(unsigned char *)(v1 + OBJC_IVAR____TtC7FMFCore8FMFAlert_alertType) == 5 || !MEMORY[0x21D4B6C80](v1 + 16))
  {
    sub_21CA66CA4(v1 + OBJC_IVAR____TtC7FMFCore8FMFAlert_cancelButtonURL, (uint64_t)v5);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
    {
      return sub_21CA07B00((uint64_t)v5);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v5, v6);
      a1(v9);
      return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    }
  }
  else
  {
    return swift_unknownObjectRelease();
  }
}

uint64_t sub_21CA86558()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_21CA57E34(&qword_267C95190);
  uint64_t v3 = MEMORY[0x270FA5388](v2 - 8);
  id v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v20 - v6;
  v22[0] = 0;
  v22[1] = 0xE000000000000000;
  sub_21CB88B70();
  swift_bridgeObjectRelease();
  v22[0] = 60;
  v22[1] = 0xE100000000000000;
  sub_21CB89110();
  sub_21CB883D0();
  swift_bridgeObjectRelease();
  sub_21CB883D0();
  swift_bridgeObjectRetain();
  sub_21CB883D0();
  swift_bridgeObjectRelease();
  sub_21CB883D0();
  swift_bridgeObjectRetain();
  sub_21CB883D0();
  swift_bridgeObjectRelease();
  sub_21CB883D0();
  uint64_t v8 = v22[0];
  uint64_t v9 = v22[1];
  v22[0] = 0;
  v22[1] = 0xE000000000000000;
  sub_21CB88B70();
  swift_bridgeObjectRelease();
  strcpy((char *)v22, "okButtonLabel:");
  HIBYTE(v22[1]) = -18;
  swift_bridgeObjectRetain();
  sub_21CB883D0();
  swift_bridgeObjectRelease();
  sub_21CB883D0();
  swift_bridgeObjectRetain();
  sub_21CB883D0();
  swift_bridgeObjectRelease();
  sub_21CB883D0();
  v22[0] = v8;
  v22[1] = v9;
  swift_bridgeObjectRetain();
  sub_21CB883D0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v11 = v22[0];
  uint64_t v10 = v22[1];
  v22[0] = 0;
  v22[1] = 0xE000000000000000;
  sub_21CB88B70();
  swift_bridgeObjectRelease();
  v22[0] = 0xD000000000000011;
  v22[1] = 0x800000021CB95030;
  sub_21CA66CA4(v0 + OBJC_IVAR____TtC7FMFCore8FMFAlert_cancelButtonURL, (uint64_t)v7);
  uint64_t v12 = sub_21CB87480();
  uint64_t v13 = *(void *)(v12 - 8);
  char v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
  unsigned int v15 = v14(v7, 1, v12);
  char v20 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v14;
  id v21 = v5;
  if (v15 == 1)
  {
    sub_21CA07B00((uint64_t)v7);
  }
  else
  {
    sub_21CB87410();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v7, v12);
  }
  sub_21CB883D0();
  swift_bridgeObjectRelease();
  sub_21CB883D0();
  v22[0] = v11;
  v22[1] = v10;
  swift_bridgeObjectRetain();
  sub_21CB883D0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v17 = v22[0];
  uint64_t v16 = v22[1];
  v22[0] = 0;
  v22[1] = 0xE000000000000000;
  sub_21CB88B70();
  swift_bridgeObjectRelease();
  strcpy((char *)v22, "okButtonURL: ");
  HIWORD(v22[1]) = -4864;
  uint64_t v18 = (uint64_t)v21;
  sub_21CA66CA4(v1 + OBJC_IVAR____TtC7FMFCore8FMFAlert_okButtonURL, (uint64_t)v21);
  if (v20(v18, 1, v12) == 1)
  {
    sub_21CA07B00(v18);
  }
  else
  {
    sub_21CB87410();
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v18, v12);
  }
  sub_21CB883D0();
  swift_bridgeObjectRelease();
  sub_21CB883D0();
  v22[0] = v17;
  v22[1] = v16;
  swift_bridgeObjectRetain();
  sub_21CB883D0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v22[0];
}

uint64_t sub_21CA86A7C()
{
  return sub_21CA86558();
}

unint64_t sub_21CA86AA4()
{
  unint64_t result = qword_267C95460;
  if (!qword_267C95460)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C95460);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for FMFAlertType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x21CA86BC4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FMFAlertType()
{
  return &type metadata for FMFAlertType;
}

uint64_t sub_21CA86BFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t sub_21CA86C10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t sub_21CA86C24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t sub_21CA86C38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t sub_21CA86C4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t sub_21CA86C60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t sub_21CA86C74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 56))();
}

uint64_t sub_21CA86C88()
{
  return type metadata accessor for FMFAlert();
}

uint64_t method lookup function for FMFAlert(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for FMFAlert);
}

uint64_t dispatch thunk of FMFAlert.title.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 176))();
}

uint64_t dispatch thunk of FMFAlert.message.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 184))();
}

uint64_t dispatch thunk of FMFAlert.okButtonLabel.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 192))();
}

uint64_t dispatch thunk of FMFAlert.cancelButtonLabel.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 200))();
}

uint64_t dispatch thunk of FMFAlert.displayAlert.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 208))();
}

uint64_t dispatch thunk of FMFAlert.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 216))();
}

uint64_t dispatch thunk of FMFAlert.__allocating_init(alertId:title:message:okButtonLabel:okButtonURL:cancelButtonLabel:cancelButtonURL:alertType:)()
{
  return (*(uint64_t (**)(void))(v0 + 224))();
}

uint64_t dispatch thunk of FMFAlert.handleOkAction(urlHandler:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 232))();
}

uint64_t dispatch thunk of FMFAlert.handleCancelAction(urlHandler:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 240))();
}

uint64_t dispatch thunk of FMFAlert.debugDescription.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 248))();
}

uint64_t getEnumTagSinglePayload for FMFLocationAlertAddressType(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF9) {
    goto LABEL_17;
  }
  if (a2 + 7 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 7) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 7;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 7;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 7;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 8;
  int v8 = v6 - 8;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unint64_t sub_21CA86ED8()
{
  unint64_t result = qword_267C95480;
  if (!qword_267C95480)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C95480);
  }
  return result;
}

uint64_t sub_21CA86F2C()
{
  unint64_t v0 = sub_21CB88D70();
  swift_bridgeObjectRelease();
  if (v0 >= 8) {
    return 8;
  }
  else {
    return v0;
  }
}

uint64_t static FMFDemoContent.load(from:)()
{
  uint64_t result = sub_21CB87490();
  if (!v0)
  {
    uint64_t v3 = result;
    unint64_t v4 = v2;
    if (qword_267C94940 != -1) {
      swift_once();
    }
    sub_21CA78F48();
    sub_21CB871D0();
    return sub_21CA36618(v3, v4);
  }
  return result;
}

uint64_t sub_21CA87034(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_21CA7F6D4(*a1, *a2);
}

uint64_t sub_21CA87040()
{
  return sub_21CB89090();
}

uint64_t sub_21CA870F4()
{
  sub_21CB88380();

  return swift_bridgeObjectRelease();
}

uint64_t sub_21CA87194()
{
  return sub_21CB89090();
}

uint64_t sub_21CA87244@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_21CA8930C();
  *a1 = result;
  return result;
}

void sub_21CA87274(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE800000000000000;
  unint64_t v4 = 0xE900000000000067;
  uint64_t v5 = 0x6E69776F6C6C6F66;
  if (v2 != 1)
  {
    uint64_t v5 = 0x7463657269646962;
    unint64_t v4 = 0xED00006C616E6F69;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x7265776F6C6C6F66;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_21CA872E4()
{
  return sub_21CB884D0();
}

uint64_t sub_21CA87344()
{
  return sub_21CB884C0();
}

uint64_t sub_21CA87394(void *a1)
{
  int v2 = v1;
  uint64_t v4 = sub_21CA57E34(&qword_267C954F8);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = *v2;
  int v29 = *((unsigned __int8 *)v2 + 16);
  uint64_t v8 = v2[3];
  uint64_t v9 = v2[4];
  uint64_t v25 = v2[5];
  int v24 = *((unsigned __int8 *)v2 + 48);
  uint64_t v23 = v2[7];
  int v22 = *((unsigned __int8 *)v2 + 64);
  uint64_t v21 = v2[9];
  int v20 = *((unsigned __int8 *)v2 + 80);
  uint64_t v10 = v2[11];
  uint64_t v18 = v2[12];
  uint64_t v19 = v10;
  sub_21CA2B2CC(a1, a1[3]);
  sub_21CA88E00();
  sub_21CB890C0();
  LOBYTE(v28[0]) = 0;
  uint64_t v11 = v27;
  uint64_t v12 = v7;
  sub_21CB88E70();
  if (!v11)
  {
    uint64_t v13 = v23;
    char v14 = v24;
    uint64_t v15 = v25;
    LOBYTE(v28[0]) = v29;
    char v30 = 1;
    sub_21CA88E54();
    sub_21CB88EB0();
    v28[0] = v8;
    v28[1] = v9;
    v28[2] = v15;
    LOBYTE(v28[3]) = v14;
    v28[4] = v13;
    LOBYTE(v28[5]) = v22;
    v28[6] = v21;
    LOBYTE(v28[7]) = v20;
    v28[8] = v19;
    v28[9] = v18;
    char v30 = 2;
    sub_21CA88EA8();
    sub_21CB88EB0();
    memcpy(v28, v2 + 13, sizeof(v28));
    char v30 = 3;
    sub_21CA76568();
    sub_21CB88EB0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v12, v4);
}

uint64_t sub_21CA87624@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v57 = sub_21CA57E34(&qword_267C95518);
  uint64_t v5 = *(void *)(v57 - 8);
  MEMORY[0x270FA5388](v57);
  uint64_t v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21CA2B2CC(a1, a1[3]);
  sub_21CA88E00();
  sub_21CB890B0();
  if (v2) {
    return sub_21CA2B0D0((uint64_t)a1);
  }
  char v30 = a2;
  unint64_t v31 = a1;
  uint64_t v8 = v5;
  LOBYTE(v33) = 0;
  uint64_t v9 = v57;
  uint64_t v10 = sub_21CB88DE0();
  uint64_t v12 = v11;
  LOBYTE(v32[0]) = 1;
  sub_21CA88EFC();
  swift_bridgeObjectRetain();
  sub_21CB88E20();
  int v13 = v33;
  LOBYTE(v32[0]) = 2;
  sub_21CA88F50();
  sub_21CB88E20();
  int v28 = v13;
  uint64_t v14 = v33;
  uint64_t v15 = v34;
  uint64_t v25 = v35;
  uint64_t v26 = v37;
  uint64_t v27 = v39;
  uint64_t v29 = v41;
  uint64_t v16 = v42;
  int v23 = v38;
  int v24 = v36;
  char v55 = v36;
  char v53 = v38;
  int v22 = v40;
  char v51 = v40;
  v47[311] = 3;
  sub_21CA669BC();
  swift_bridgeObjectRetain();
  sub_21CB88E20();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v7, v9);
  memcpy(&v32[13], v48, 0x130uLL);
  memcpy(v49, v48, sizeof(v49));
  v32[0] = v10;
  v32[1] = v12;
  LOBYTE(v9) = v28;
  LOBYTE(v32[2]) = v28;
  void v32[3] = v14;
  v32[4] = v15;
  uint64_t v17 = v25;
  uint64_t v18 = v26;
  v32[5] = v25;
  LOBYTE(v32[6]) = v24;
  v32[7] = v26;
  LOBYTE(v32[8]) = v23;
  uint64_t v19 = v27;
  v32[9] = v27;
  LOBYTE(v32[10]) = v22;
  v32[11] = v29;
  v32[12] = v16;
  sub_21CA853FC((uint64_t)v32);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  memcpy(v30, v32, 0x198uLL);
  sub_21CA2B0D0((uint64_t)v31);
  uint64_t v33 = v10;
  uint64_t v34 = v12;
  LOBYTE(v35) = v9;
  *(_DWORD *)((char *)&v35 + 1) = v56[0];
  HIDWORD(v35) = *(_DWORD *)((char *)v56 + 3);
  uint64_t v36 = v14;
  uint64_t v37 = v15;
  uint64_t v38 = v17;
  LOBYTE(v39) = v55;
  *(_DWORD *)((char *)&v39 + 1) = *(_DWORD *)v54;
  HIDWORD(v39) = *(_DWORD *)&v54[3];
  uint64_t v40 = v18;
  LOBYTE(v41) = v53;
  *(_DWORD *)((char *)&v41 + 1) = *(_DWORD *)v52;
  HIDWORD(v41) = *(_DWORD *)&v52[3];
  uint64_t v42 = v19;
  char v43 = v51;
  *(_DWORD *)uint64_t v44 = *(_DWORD *)v50;
  *(_DWORD *)&v44[3] = *(_DWORD *)&v50[3];
  uint64_t v45 = v29;
  uint64_t v46 = v16;
  memcpy(v47, v49, 0x130uLL);
  return sub_21CA85560((uint64_t)&v33);
}

BOOL sub_21CA87A84(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

unint64_t sub_21CA87A98()
{
  unint64_t result = 0x656C646E6168;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0xD000000000000010;
      break;
    case 2:
      unint64_t result = 0x6E6F697461636F6CLL;
      break;
    case 3:
      unint64_t result = 0x73736572646461;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_21CA87B28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_21CA89358(a1, a2);
  *a3 = result;
  return result;
}

void sub_21CA87B50(unsigned char *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_21CA87B5C(uint64_t a1)
{
  unint64_t v2 = sub_21CA88E00();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_21CA87B98(uint64_t a1)
{
  unint64_t v2 = sub_21CA88E00();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_21CA87BD4@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return sub_21CA87624(a1, a2);
}

uint64_t sub_21CA87BEC(void *a1)
{
  return sub_21CA87394(a1);
}

uint64_t sub_21CA87C04()
{
  sub_21CB871F0();
  swift_allocObject();
  uint64_t result = sub_21CB871E0();
  qword_267C95498 = result;
  return result;
}

uint64_t sub_21CA87C44()
{
  return sub_21CB89090();
}

uint64_t sub_21CA87C88()
{
  return sub_21CB89060();
}

uint64_t sub_21CA87CB0()
{
  return sub_21CB89090();
}

uint64_t sub_21CA87CF0()
{
  return 0x656C706F6570;
}

uint64_t sub_21CA87D04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x656C706F6570 && a2 == 0xE600000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_21CB88F50();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

void sub_21CA87D94(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_21CA87DA0(uint64_t a1)
{
  unint64_t v2 = sub_21CA87F9C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_21CA87DDC(uint64_t a1)
{
  unint64_t v2 = sub_21CA87F9C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t FMFDemoContent.encode(to:)(void *a1)
{
  uint64_t v3 = sub_21CA57E34(&qword_267C954A0);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *v1;
  sub_21CA2B2CC(a1, a1[3]);
  sub_21CA87F9C();
  sub_21CB890C0();
  v9[1] = v7;
  sub_21CA57E34(&qword_267C954B0);
  sub_21CA881E8(&qword_267C954B8, (void (*)(void))sub_21CA87FF0);
  sub_21CB88EB0();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_21CA87F9C()
{
  unint64_t result = qword_267C954A8;
  if (!qword_267C954A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C954A8);
  }
  return result;
}

unint64_t sub_21CA87FF0()
{
  unint64_t result = qword_267C954C0;
  if (!qword_267C954C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C954C0);
  }
  return result;
}

uint64_t FMFDemoContent.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = sub_21CA57E34(&qword_267C954C8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21CA2B2CC(a1, a1[3]);
  sub_21CA87F9C();
  sub_21CB890B0();
  if (!v2)
  {
    sub_21CA57E34(&qword_267C954B0);
    sub_21CA881E8(&qword_267C954D0, (void (*)(void))sub_21CA88258);
    sub_21CB88E20();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v10[1];
  }
  return sub_21CA2B0D0((uint64_t)a1);
}

uint64_t sub_21CA881E8(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_21CA5EEBC(&qword_267C954B0);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_21CA88258()
{
  unint64_t result = qword_267C954D8;
  if (!qword_267C954D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C954D8);
  }
  return result;
}

uint64_t sub_21CA882AC@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return FMFDemoContent.init(from:)(a1, a2);
}

uint64_t sub_21CA882C4(void *a1)
{
  return FMFDemoContent.encode(to:)(a1);
}

ValueMetadata *type metadata accessor for FMFDemoContent()
{
  return &type metadata for FMFDemoContent;
}

uint64_t destroy for FMFPersonTemplate()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for FMFPersonTemplate(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  uint64_t v4 = *(void *)(a2 + 72);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(void *)(a1 + 72) = v4;
  uint64_t v5 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v5;
  uint64_t v6 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v6;
  uint64_t v7 = *(void *)(a2 + 128);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = v7;
  uint64_t v8 = *(void *)(a2 + 144);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = v8;
  uint64_t v9 = *(void *)(a2 + 160);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = v9;
  uint64_t v10 = *(void *)(a2 + 176);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(void *)(a1 + 176) = v10;
  uint64_t v11 = *(void *)(a2 + 192);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(void *)(a1 + 192) = v11;
  uint64_t v12 = *(void *)(a2 + 208);
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  *(void *)(a1 + 208) = v12;
  uint64_t v13 = *(void *)(a2 + 224);
  *(void *)(a1 + 216) = *(void *)(a2 + 216);
  *(void *)(a1 + 224) = v13;
  uint64_t v14 = *(void *)(a2 + 240);
  *(void *)(a1 + 232) = *(void *)(a2 + 232);
  *(void *)(a1 + 240) = v14;
  uint64_t v15 = *(void *)(a2 + 256);
  *(void *)(a1 + 248) = *(void *)(a2 + 248);
  *(void *)(a1 + 256) = v15;
  uint64_t v25 = *(void *)(a2 + 272);
  *(void *)(a1 + 264) = *(void *)(a2 + 264);
  *(void *)(a1 + 272) = v25;
  uint64_t v16 = *(void *)(a2 + 288);
  *(void *)(a1 + 280) = *(void *)(a2 + 280);
  *(void *)(a1 + 288) = v16;
  uint64_t v17 = *(void *)(a2 + 304);
  *(void *)(a1 + 296) = *(void *)(a2 + 296);
  *(void *)(a1 + 304) = v17;
  uint64_t v18 = *(void *)(a2 + 320);
  *(void *)(a1 + 312) = *(void *)(a2 + 312);
  *(void *)(a1 + 320) = v18;
  uint64_t v19 = *(void *)(a2 + 336);
  *(void *)(a1 + 328) = *(void *)(a2 + 328);
  *(void *)(a1 + 336) = v19;
  uint64_t v20 = *(void *)(a2 + 352);
  *(void *)(a1 + 344) = *(void *)(a2 + 344);
  *(void *)(a1 + 352) = v20;
  uint64_t v21 = *(void *)(a2 + 368);
  *(void *)(a1 + 360) = *(void *)(a2 + 360);
  *(void *)(a1 + 368) = v21;
  uint64_t v22 = *(void *)(a2 + 384);
  *(void *)(a1 + 376) = *(void *)(a2 + 376);
  *(void *)(a1 + 384) = v22;
  uint64_t v23 = *(void *)(a2 + 400);
  *(void *)(a1 + 392) = *(void *)(a2 + 392);
  *(void *)(a1 + 400) = v23;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for FMFPersonTemplate(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v4 = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 40) = v4;
  uint64_t v5 = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(void *)(a1 + 56) = v5;
  uint64_t v6 = *(void *)(a2 + 72);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(void *)(a1 + 72) = v6;
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  *(void *)(a1 + 216) = *(void *)(a2 + 216);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 224) = *(void *)(a2 + 224);
  *(void *)(a1 + 232) = *(void *)(a2 + 232);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 240) = *(void *)(a2 + 240);
  *(void *)(a1 + 248) = *(void *)(a2 + 248);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 256) = *(void *)(a2 + 256);
  *(void *)(a1 + 264) = *(void *)(a2 + 264);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 272) = *(void *)(a2 + 272);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 280) = *(void *)(a2 + 280);
  *(void *)(a1 + 288) = *(void *)(a2 + 288);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 296) = *(void *)(a2 + 296);
  *(void *)(a1 + 304) = *(void *)(a2 + 304);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 312) = *(void *)(a2 + 312);
  *(void *)(a1 + 320) = *(void *)(a2 + 320);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 328) = *(void *)(a2 + 328);
  *(void *)(a1 + 336) = *(void *)(a2 + 336);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 344) = *(void *)(a2 + 344);
  *(void *)(a1 + 352) = *(void *)(a2 + 352);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 360) = *(void *)(a2 + 360);
  *(void *)(a1 + 368) = *(void *)(a2 + 368);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 376) = *(void *)(a2 + 376);
  *(void *)(a1 + 384) = *(void *)(a2 + 384);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 392) = *(void *)(a2 + 392);
  *(void *)(a1 + 400) = *(void *)(a2 + 400);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *initializeWithTake for FMFPersonTemplate(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x198uLL);
}

uint64_t assignWithTake for FMFPersonTemplate(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  uint64_t v5 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v5;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 136);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 152);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 168);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(a2 + 184);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(void *)(a1 + 184) = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void *)(a2 + 200);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  *(void *)(a1 + 200) = v11;
  swift_bridgeObjectRelease();
  uint64_t v12 = *(void *)(a2 + 216);
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  *(void *)(a1 + 216) = v12;
  swift_bridgeObjectRelease();
  uint64_t v13 = *(void *)(a2 + 232);
  *(void *)(a1 + 224) = *(void *)(a2 + 224);
  *(void *)(a1 + 232) = v13;
  swift_bridgeObjectRelease();
  uint64_t v14 = *(void *)(a2 + 248);
  *(void *)(a1 + 240) = *(void *)(a2 + 240);
  *(void *)(a1 + 248) = v14;
  swift_bridgeObjectRelease();
  uint64_t v15 = *(void *)(a2 + 264);
  *(void *)(a1 + 256) = *(void *)(a2 + 256);
  *(void *)(a1 + 264) = v15;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 272) = *(void *)(a2 + 272);
  swift_bridgeObjectRelease();
  uint64_t v16 = *(void *)(a2 + 288);
  *(void *)(a1 + 280) = *(void *)(a2 + 280);
  *(void *)(a1 + 288) = v16;
  swift_bridgeObjectRelease();
  uint64_t v17 = *(void *)(a2 + 304);
  *(void *)(a1 + 296) = *(void *)(a2 + 296);
  *(void *)(a1 + 304) = v17;
  swift_bridgeObjectRelease();
  uint64_t v18 = *(void *)(a2 + 320);
  *(void *)(a1 + 312) = *(void *)(a2 + 312);
  *(void *)(a1 + 320) = v18;
  swift_bridgeObjectRelease();
  uint64_t v19 = *(void *)(a2 + 336);
  *(void *)(a1 + 328) = *(void *)(a2 + 328);
  *(void *)(a1 + 336) = v19;
  swift_bridgeObjectRelease();
  uint64_t v20 = *(void *)(a2 + 352);
  *(void *)(a1 + 344) = *(void *)(a2 + 344);
  *(void *)(a1 + 352) = v20;
  swift_bridgeObjectRelease();
  uint64_t v21 = *(void *)(a2 + 368);
  *(void *)(a1 + 360) = *(void *)(a2 + 360);
  *(void *)(a1 + 368) = v21;
  swift_bridgeObjectRelease();
  uint64_t v22 = *(void *)(a2 + 384);
  *(void *)(a1 + 376) = *(void *)(a2 + 376);
  *(void *)(a1 + 384) = v22;
  swift_bridgeObjectRelease();
  uint64_t v23 = *(void *)(a2 + 400);
  *(void *)(a1 + 392) = *(void *)(a2 + 392);
  *(void *)(a1 + 400) = v23;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for FMFPersonTemplate(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 408)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FMFPersonTemplate(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 392) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 408) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 408) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FMFPersonTemplate()
{
  return &type metadata for FMFPersonTemplate;
}

uint64_t getEnumTagSinglePayload for FMFDemoContent.CodingKeys(unsigned int *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if ((a2 + 1) >= 0x10000) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) < 0x100) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4) {
    return *a1;
  }
  if (v3 == 2) {
    return *(unsigned __int16 *)a1;
  }
  return *(unsigned __int8 *)a1;
}

unsigned char *storeEnumTagSinglePayload for FMFDemoContent.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x21CA88CC0);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for FMFDemoContent.CodingKeys()
{
  return &type metadata for FMFDemoContent.CodingKeys;
}

unint64_t sub_21CA88CFC()
{
  unint64_t result = qword_267C954E0;
  if (!qword_267C954E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C954E0);
  }
  return result;
}

unint64_t sub_21CA88D54()
{
  unint64_t result = qword_267C954E8;
  if (!qword_267C954E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C954E8);
  }
  return result;
}

unint64_t sub_21CA88DAC()
{
  unint64_t result = qword_267C954F0;
  if (!qword_267C954F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C954F0);
  }
  return result;
}

unint64_t sub_21CA88E00()
{
  unint64_t result = qword_267C95500;
  if (!qword_267C95500)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C95500);
  }
  return result;
}

unint64_t sub_21CA88E54()
{
  unint64_t result = qword_267C95508;
  if (!qword_267C95508)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C95508);
  }
  return result;
}

unint64_t sub_21CA88EA8()
{
  unint64_t result = qword_267C95510;
  if (!qword_267C95510)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C95510);
  }
  return result;
}

unint64_t sub_21CA88EFC()
{
  unint64_t result = qword_267C95520;
  if (!qword_267C95520)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C95520);
  }
  return result;
}

unint64_t sub_21CA88F50()
{
  unint64_t result = qword_267C95528;
  if (!qword_267C95528)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C95528);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for FMFPersonTemplate.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x21CA89070);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FMFPersonTemplate.CodingKeys()
{
  return &type metadata for FMFPersonTemplate.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for FMFPersonTemplate.RelationshipType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x21CA89174);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FMFPersonTemplate.RelationshipType()
{
  return &type metadata for FMFPersonTemplate.RelationshipType;
}

unint64_t sub_21CA891B0()
{
  unint64_t result = qword_267C95530;
  if (!qword_267C95530)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C95530);
  }
  return result;
}

unint64_t sub_21CA89208()
{
  unint64_t result = qword_267C95538;
  if (!qword_267C95538)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C95538);
  }
  return result;
}

unint64_t sub_21CA89260()
{
  unint64_t result = qword_267C95540;
  if (!qword_267C95540)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C95540);
  }
  return result;
}

unint64_t sub_21CA892B8()
{
  unint64_t result = qword_267C95548;
  if (!qword_267C95548)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C95548);
  }
  return result;
}

uint64_t sub_21CA8930C()
{
  unint64_t v0 = sub_21CB88D70();
  swift_bridgeObjectRelease();
  if (v0 >= 3) {
    return 3;
  }
  else {
    return v0;
  }
}

uint64_t sub_21CA89358(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x656C646E6168 && a2 == 0xE600000000000000;
  if (v2 || (sub_21CB88F50() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000021CB933C0 || (sub_21CB88F50() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6E6F697461636F6CLL && a2 == 0xE800000000000000 || (sub_21CB88F50() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x73736572646461 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_21CB88F50();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

unint64_t sub_21CA89504()
{
  unint64_t result = qword_267C95550;
  if (!qword_267C95550)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C95550);
  }
  return result;
}

uint64_t FMFActionURLInfo.actionURL.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21CA24E80(v1, a1, &qword_267C95190);
}

uint64_t FMFActionURLInfo.firstName.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for FMFActionURLInfo() + 20));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t type metadata accessor for FMFActionURLInfo()
{
  uint64_t result = qword_267C95558;
  if (!qword_267C95558) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t FMFActionURLInfo.lastName.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for FMFActionURLInfo() + 24));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FMFActionURLInfo.email.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for FMFActionURLInfo() + 28));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FMFActionURLInfo.triggerDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for FMFActionURLInfo();
  return sub_21CA24E80(v1 + *(int *)(v3 + 32), a1, (uint64_t *)&unk_267C951B0);
}

uint64_t FMFActionURLInfo.currentUserId.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for FMFActionURLInfo() + 36));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FMFActionURLInfo.locationAlert.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for FMFActionURLInfo();
  return sub_21CA24E80(v1 + *(int *)(v3 + 40), a1, (uint64_t *)&unk_267C96EC0);
}

uint64_t *initializeBufferWithCopyOfBuffer for FMFActionURLInfo(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    uint64_t v11 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_21CB87480();
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      uint64_t v9 = sub_21CA57E34(&qword_267C95190);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    uint64_t v12 = a3[5];
    uint64_t v13 = a3[6];
    uint64_t v14 = (uint64_t *)((char *)a1 + v12);
    uint64_t v15 = (uint64_t *)((char *)a2 + v12);
    uint64_t v16 = v15[1];
    *uint64_t v14 = *v15;
    v14[1] = v16;
    uint64_t v17 = (uint64_t *)((char *)a1 + v13);
    uint64_t v18 = (uint64_t *)((char *)a2 + v13);
    uint64_t v19 = v18[1];
    *uint64_t v17 = *v18;
    v17[1] = v19;
    uint64_t v20 = a3[7];
    uint64_t v21 = a3[8];
    uint64_t v22 = (uint64_t *)((char *)a1 + v20);
    uint64_t v23 = (uint64_t *)((char *)a2 + v20);
    uint64_t v24 = v23[1];
    *uint64_t v22 = *v23;
    v22[1] = v24;
    uint64_t v112 = (char *)a1 + v21;
    char v114 = a1;
    uint64_t v25 = (char *)a2 + v21;
    uint64_t v26 = sub_21CB87590();
    uint64_t v27 = *(void *)(v26 - 8);
    int v28 = *(unsigned int (**)(void, void, void))(v27 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v111 = (unsigned int (*)(char *, uint64_t, uint64_t))v28;
    uint64_t v110 = v27;
    if (v28(v25, 1, v26))
    {
      uint64_t v29 = sub_21CA57E34((uint64_t *)&unk_267C951B0);
      memcpy(v112, v25, *(void *)(*(void *)(v29 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v27 + 16))(v112, v25, v26);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v27 + 56))(v112, 0, 1, v26);
    }
    uint64_t v11 = v114;
    uint64_t v30 = a3[9];
    uint64_t v31 = a3[10];
    unint64_t v32 = (uint64_t *)((char *)v114 + v30);
    uint64_t v33 = (uint64_t *)((char *)a2 + v30);
    uint64_t v34 = v33[1];
    *unint64_t v32 = *v33;
    v32[1] = v34;
    uint64_t v35 = (uint64_t *)((char *)v114 + v31);
    uint64_t v36 = (uint64_t *)((char *)a2 + v31);
    uint64_t v37 = (int *)type metadata accessor for FMFLocationAlert();
    uint64_t v38 = *((void *)v37 - 1);
    uint64_t v39 = *(unsigned int (**)(void *, uint64_t, int *))(v38 + 48);
    swift_bridgeObjectRetain();
    if (v39(v36, 1, v37))
    {
      uint64_t v40 = sub_21CA57E34((uint64_t *)&unk_267C96EC0);
      memcpy(v35, v36, *(void *)(*(void *)(v40 - 8) + 64));
    }
    else
    {
      uint64_t v106 = v38;
      uint64_t v113 = v26;
      uint64_t v41 = v36[1];
      *uint64_t v35 = *v36;
      v35[1] = v41;
      *((_OWORD *)v35 + 1) = *((_OWORD *)v36 + 1);
      v35[4] = v36[4];
      *((unsigned char *)v35 + 40) = *((unsigned char *)v36 + 40);
      *((unsigned char *)v35 + 41) = *((unsigned char *)v36 + 41);
      *((_WORD *)v35 + 21) = *((_WORD *)v36 + 21);
      uint64_t v42 = v37[12];
      __dst = (_OWORD *)((char *)v35 + v42);
      char v43 = (_OWORD *)((char *)v36 + v42);
      uint64_t v44 = type metadata accessor for FMFSchedule();
      uint64_t v45 = *(void *)(v44 - 8);
      uint64_t v46 = *(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v45 + 48);
      swift_bridgeObjectRetain();
      if (v46(v43, 1, v44))
      {
        uint64_t v47 = sub_21CA57E34((uint64_t *)&unk_267C96ED0);
        memcpy(__dst, v43, *(void *)(*(void *)(v47 - 8) + 64));
      }
      else
      {
        uint64_t v107 = v45;
        long long v48 = v43[1];
        _OWORD *__dst = *v43;
        __dst[1] = v48;
        __dst[2] = v43[2];
        uint64_t v49 = *(int *)(v44 + 40);
        uint64_t v50 = (char *)__dst + v49;
        char v51 = (char *)v43 + v49;
        uint64_t v52 = sub_21CB876F0();
        uint64_t v53 = *(void *)(v52 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v53 + 48))(v51, 1, v52))
        {
          uint64_t v54 = sub_21CA57E34(&qword_267C94A48);
          memcpy(v50, v51, *(void *)(*(void *)(v54 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v53 + 16))(v50, v51, v52);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v53 + 56))(v50, 0, 1, v52);
        }
        (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v107 + 56))(__dst, 0, 1, v44);
      }
      uint64_t v55 = v37[13];
      uint64_t v56 = (void *)((char *)v35 + v55);
      uint64_t v57 = (void *)((char *)v36 + v55);
      uint64_t v58 = v57[1];
      *uint64_t v56 = *v57;
      v56[1] = v58;
      uint64_t v59 = v37[14];
      BOOL v60 = (void *)((char *)v35 + v59);
      uint64_t v61 = (void *)((char *)v36 + v59);
      __dsta = (void *)v61[1];
      void *v60 = *v61;
      v60[1] = __dsta;
      *((unsigned char *)v35 + v37[15]) = *((unsigned char *)v36 + v37[15]);
      *(void *)((char *)v35 + v37[16]) = *(void *)((char *)v36 + v37[16]);
      *(void *)((char *)v35 + v37[17]) = *(void *)((char *)v36 + v37[17]);
      *(void *)((char *)v35 + v37[18]) = *(void *)((char *)v36 + v37[18]);
      uint64_t v62 = v37[19];
      id v63 = (void *)((char *)v35 + v62);
      uint64_t v64 = (void *)((char *)v36 + v62);
      uint64_t v65 = v64[1];
      *id v63 = *v64;
      v63[1] = v65;
      uint64_t v66 = v37[20];
      BOOL v67 = (char *)v35 + v66;
      unsigned __int8 v68 = (char *)v36 + v66;
      uint64_t v69 = *((void *)v68 + 1);
      *(void *)BOOL v67 = *(void *)v68;
      *((void *)v67 + 1) = v69;
      v67[16] = v68[16];
      v67[17] = v68[17];
      *((unsigned char *)v35 + v37[21]) = *((unsigned char *)v36 + v37[21]);
      uint64_t v70 = v37[22];
      char v71 = (void *)((char *)v35 + v70);
      uint64_t v72 = (void *)((char *)v36 + v70);
      uint64_t v73 = v72[1];
      *char v71 = *v72;
      v71[1] = v73;
      uint64_t v74 = v37[23];
      uint64_t v75 = (void *)((char *)v35 + v74);
      os_log_type_t v76 = (void *)((char *)v36 + v74);
      uint64_t v77 = *(void *)((char *)v36 + v74 + 168);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v77)
      {
        uint64_t v78 = v76[1];
        *uint64_t v75 = *v76;
        v75[1] = v78;
        uint64_t v79 = v76[3];
        v75[2] = v76[2];
        v75[3] = v79;
        uint64_t v80 = v76[5];
        v75[4] = v76[4];
        v75[5] = v80;
        uint64_t v81 = v76[7];
        v75[6] = v76[6];
        v75[7] = v81;
        uint64_t v82 = v76[9];
        v75[8] = v76[8];
        v75[9] = v82;
        uint64_t v83 = v76[11];
        v75[10] = v76[10];
        v75[11] = v83;
        uint64_t v84 = v76[13];
        v75[12] = v76[12];
        v75[13] = v84;
        uint64_t v85 = v76[15];
        v75[14] = v76[14];
        v75[15] = v85;
        uint64_t v86 = v76[17];
        v75[16] = v76[16];
        v75[17] = v86;
        uint64_t v87 = v76[19];
        v75[18] = v76[18];
        v75[19] = v87;
        v75[20] = v76[20];
        v75[21] = v77;
        uint64_t v88 = v76[23];
        v75[22] = v76[22];
        v75[23] = v88;
        uint64_t v89 = v76[25];
        v75[24] = v76[24];
        v75[25] = v89;
        uint64_t v90 = v76[27];
        v75[26] = v76[26];
        v75[27] = v90;
        uint64_t v91 = v76[29];
        v75[28] = v76[28];
        v75[29] = v91;
        uint64_t v92 = v76[31];
        v75[30] = v76[30];
        v75[31] = v92;
        uint64_t v93 = v76[33];
        v75[32] = v76[32];
        v75[33] = v93;
        uint64_t v94 = v76[35];
        v75[34] = v76[34];
        v75[35] = v94;
        uint64_t v95 = v76[36];
        uint64_t v96 = v76[37];
        v75[36] = v95;
        v75[37] = v96;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        memcpy(v75, v76, 0x130uLL);
      }
      *((unsigned char *)v35 + v37[24]) = *((unsigned char *)v36 + v37[24]);
      *((unsigned char *)v35 + v37[25]) = *((unsigned char *)v36 + v37[25]);
      uint64_t v97 = v37[26];
      int v98 = (char *)v35 + v97;
      uint64_t v99 = (char *)v36 + v97;
      uint64_t v11 = v114;
      if (v111((char *)v36 + v97, 1, v113))
      {
        uint64_t v100 = sub_21CA57E34((uint64_t *)&unk_267C951B0);
        memcpy(v98, v99, *(void *)(*(void *)(v100 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v110 + 16))(v98, v99, v113);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v110 + 56))(v98, 0, 1, v113);
      }
      uint64_t v101 = v37[27];
      uint64_t v102 = (char *)v35 + v101;
      uint64_t v103 = (char *)v36 + v101;
      if (v111(v103, 1, v113))
      {
        uint64_t v104 = sub_21CA57E34((uint64_t *)&unk_267C951B0);
        memcpy(v102, v103, *(void *)(*(void *)(v104 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v110 + 16))(v102, v103, v113);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v110 + 56))(v102, 0, 1, v113);
      }
      (*(void (**)(void *, void, uint64_t, int *))(v106 + 56))(v35, 0, 1, v37);
    }
  }
  return v11;
}

uint64_t destroy for FMFActionURLInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_21CB87480();
  uint64_t v5 = *(void *)(v4 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v6 = a1 + *(int *)(a2 + 32);
  uint64_t v7 = sub_21CB87590();
  uint64_t v20 = *(void *)(v7 - 8);
  uint64_t v8 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v20 + 48);
  if (!v8(v6, 1, v7)) {
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v6, v7);
  }
  swift_bridgeObjectRelease();
  uint64_t v9 = a1 + *(int *)(a2 + 40);
  uint64_t v10 = (int *)type metadata accessor for FMFLocationAlert();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, int *))(*((void *)v10 - 1) + 48))(v9, 1, v10);
  if (!result)
  {
    swift_bridgeObjectRelease();
    uint64_t v12 = v9 + v10[12];
    uint64_t v13 = type metadata accessor for FMFSchedule();
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48))(v12, 1, v13))
    {
      uint64_t v14 = v12 + *(int *)(v13 + 40);
      uint64_t v15 = sub_21CB876F0();
      uint64_t v16 = *(void *)(v15 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15)) {
        (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v14, v15);
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(void *)(v9 + v10[23] + 168))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    uint64_t v17 = v9 + v10[26];
    if (!v8(v17, 1, v7)) {
      (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v17, v7);
    }
    uint64_t v18 = v9 + v10[27];
    uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v8)(v18, 1, v7);
    if (!result)
    {
      uint64_t v19 = *(uint64_t (**)(uint64_t, uint64_t))(v20 + 8);
      return v19(v18, v7);
    }
  }
  return result;
}

char *initializeWithCopy for FMFActionURLInfo(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_21CB87480();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = sub_21CA57E34(&qword_267C95190);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v9 = a3[5];
  uint64_t v10 = a3[6];
  uint64_t v11 = &a1[v9];
  uint64_t v12 = &a2[v9];
  uint64_t v13 = *((void *)v12 + 1);
  *(void *)uint64_t v11 = *(void *)v12;
  *((void *)v11 + 1) = v13;
  uint64_t v14 = &a1[v10];
  uint64_t v15 = &a2[v10];
  uint64_t v16 = *((void *)v15 + 1);
  *(void *)uint64_t v14 = *(void *)v15;
  *((void *)v14 + 1) = v16;
  uint64_t v17 = a3[7];
  uint64_t v18 = a3[8];
  uint64_t v19 = &a1[v17];
  uint64_t v20 = &a2[v17];
  uint64_t v21 = *((void *)v20 + 1);
  *(void *)uint64_t v19 = *(void *)v20;
  *((void *)v19 + 1) = v21;
  uint64_t v109 = &a1[v18];
  uint64_t v111 = a1;
  uint64_t v22 = &a2[v18];
  uint64_t v23 = sub_21CB87590();
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v25 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v108 = v25;
  uint64_t v106 = v24;
  uint64_t v107 = v23;
  if (v25(v22, 1, v23))
  {
    uint64_t v26 = sub_21CA57E34((uint64_t *)&unk_267C951B0);
    memcpy(v109, v22, *(void *)(*(void *)(v26 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v109, v22, v23);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56))(v109, 0, 1, v23);
  }
  uint64_t v27 = v111;
  uint64_t v28 = a3[9];
  uint64_t v29 = a3[10];
  uint64_t v30 = &v111[v28];
  uint64_t v31 = &a2[v28];
  uint64_t v32 = *((void *)v31 + 1);
  *(void *)uint64_t v30 = *(void *)v31;
  *((void *)v30 + 1) = v32;
  uint64_t v33 = &v111[v29];
  uint64_t v34 = &a2[v29];
  uint64_t v35 = (int *)type metadata accessor for FMFLocationAlert();
  uint64_t v36 = *((void *)v35 - 1);
  uint64_t v37 = *(unsigned int (**)(char *, uint64_t, int *))(v36 + 48);
  swift_bridgeObjectRetain();
  if (v37(v34, 1, v35))
  {
    uint64_t v38 = sub_21CA57E34((uint64_t *)&unk_267C96EC0);
    memcpy(v33, v34, *(void *)(*(void *)(v38 - 8) + 64));
  }
  else
  {
    uint64_t v110 = v36;
    uint64_t v39 = *((void *)v34 + 1);
    *(void *)uint64_t v33 = *(void *)v34;
    *((void *)v33 + 1) = v39;
    *((_OWORD *)v33 + 1) = *((_OWORD *)v34 + 1);
    *((void *)v33 + 4) = *((void *)v34 + 4);
    v33[40] = v34[40];
    v33[41] = v34[41];
    *((_WORD *)v33 + 21) = *((_WORD *)v34 + 21);
    uint64_t v40 = v35[12];
    uint64_t v41 = &v33[v40];
    uint64_t v42 = &v34[v40];
    uint64_t v43 = type metadata accessor for FMFSchedule();
    uint64_t v44 = *(void *)(v43 - 8);
    uint64_t v45 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v44 + 48);
    swift_bridgeObjectRetain();
    if (v45(v42, 1, v43))
    {
      uint64_t v46 = sub_21CA57E34((uint64_t *)&unk_267C96ED0);
      memcpy(v41, v42, *(void *)(*(void *)(v46 - 8) + 64));
    }
    else
    {
      long long v47 = *((_OWORD *)v42 + 1);
      *(_OWORD *)uint64_t v41 = *(_OWORD *)v42;
      *((_OWORD *)v41 + 1) = v47;
      *((_OWORD *)v41 + 2) = *((_OWORD *)v42 + 2);
      uint64_t v48 = *(int *)(v43 + 40);
      uint64_t v49 = &v41[v48];
      uint64_t v50 = &v42[v48];
      uint64_t v51 = sub_21CB876F0();
      uint64_t v52 = *(void *)(v51 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v52 + 48))(v50, 1, v51))
      {
        uint64_t v53 = sub_21CA57E34(&qword_267C94A48);
        memcpy(v49, v50, *(void *)(*(void *)(v53 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v52 + 16))(v49, v50, v51);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v52 + 56))(v49, 0, 1, v51);
      }
      (*(void (**)(char *, void, uint64_t, uint64_t))(v44 + 56))(v41, 0, 1, v43);
    }
    uint64_t v54 = v35[13];
    uint64_t v55 = &v33[v54];
    uint64_t v56 = &v34[v54];
    uint64_t v57 = *((void *)v56 + 1);
    *(void *)uint64_t v55 = *(void *)v56;
    *((void *)v55 + 1) = v57;
    uint64_t v58 = v35[14];
    uint64_t v59 = &v33[v58];
    BOOL v60 = &v34[v58];
    uint64_t v105 = *((void *)v60 + 1);
    *(void *)uint64_t v59 = *(void *)v60;
    *((void *)v59 + 1) = v105;
    v33[v35[15]] = v34[v35[15]];
    *(void *)&v33[v35[16]] = *(void *)&v34[v35[16]];
    *(void *)&v33[v35[17]] = *(void *)&v34[v35[17]];
    *(void *)&v33[v35[18]] = *(void *)&v34[v35[18]];
    uint64_t v61 = v35[19];
    uint64_t v62 = &v33[v61];
    id v63 = &v34[v61];
    uint64_t v64 = *((void *)v63 + 1);
    *(void *)uint64_t v62 = *(void *)v63;
    *((void *)v62 + 1) = v64;
    uint64_t v65 = v35[20];
    uint64_t v66 = &v33[v65];
    BOOL v67 = &v34[v65];
    uint64_t v68 = *((void *)v67 + 1);
    *(void *)uint64_t v66 = *(void *)v67;
    *((void *)v66 + 1) = v68;
    v66[16] = v67[16];
    v66[17] = v67[17];
    v33[v35[21]] = v34[v35[21]];
    uint64_t v69 = v35[22];
    uint64_t v70 = &v33[v69];
    char v71 = &v34[v69];
    uint64_t v72 = *((void *)v71 + 1);
    *(void *)uint64_t v70 = *(void *)v71;
    *((void *)v70 + 1) = v72;
    uint64_t v73 = v35[23];
    uint64_t v74 = &v33[v73];
    uint64_t v75 = &v34[v73];
    uint64_t v76 = *(void *)&v34[v73 + 168];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v76)
    {
      uint64_t v77 = *((void *)v75 + 1);
      *(void *)uint64_t v74 = *(void *)v75;
      *((void *)v74 + 1) = v77;
      uint64_t v78 = *((void *)v75 + 3);
      *((void *)v74 + 2) = *((void *)v75 + 2);
      *((void *)v74 + 3) = v78;
      uint64_t v79 = *((void *)v75 + 5);
      *((void *)v74 + 4) = *((void *)v75 + 4);
      *((void *)v74 + 5) = v79;
      uint64_t v80 = *((void *)v75 + 7);
      *((void *)v74 + 6) = *((void *)v75 + 6);
      *((void *)v74 + 7) = v80;
      uint64_t v81 = *((void *)v75 + 9);
      *((void *)v74 + 8) = *((void *)v75 + 8);
      *((void *)v74 + 9) = v81;
      uint64_t v82 = *((void *)v75 + 11);
      *((void *)v74 + 10) = *((void *)v75 + 10);
      *((void *)v74 + 11) = v82;
      uint64_t v83 = *((void *)v75 + 13);
      *((void *)v74 + 12) = *((void *)v75 + 12);
      *((void *)v74 + 13) = v83;
      uint64_t v84 = *((void *)v75 + 15);
      *((void *)v74 + 14) = *((void *)v75 + 14);
      *((void *)v74 + 15) = v84;
      uint64_t v85 = *((void *)v75 + 17);
      *((void *)v74 + 16) = *((void *)v75 + 16);
      *((void *)v74 + 17) = v85;
      uint64_t v86 = *((void *)v75 + 19);
      *((void *)v74 + 18) = *((void *)v75 + 18);
      *((void *)v74 + 19) = v86;
      *((void *)v74 + 20) = *((void *)v75 + 20);
      *((void *)v74 + 21) = v76;
      uint64_t v87 = *((void *)v75 + 23);
      *((void *)v74 + 22) = *((void *)v75 + 22);
      *((void *)v74 + 23) = v87;
      uint64_t v88 = *((void *)v75 + 25);
      *((void *)v74 + 24) = *((void *)v75 + 24);
      *((void *)v74 + 25) = v88;
      uint64_t v89 = *((void *)v75 + 27);
      *((void *)v74 + 26) = *((void *)v75 + 26);
      *((void *)v74 + 27) = v89;
      uint64_t v90 = *((void *)v75 + 29);
      *((void *)v74 + 28) = *((void *)v75 + 28);
      *((void *)v74 + 29) = v90;
      uint64_t v91 = *((void *)v75 + 31);
      *((void *)v74 + 30) = *((void *)v75 + 30);
      *((void *)v74 + 31) = v91;
      uint64_t v92 = *((void *)v75 + 33);
      *((void *)v74 + 32) = *((void *)v75 + 32);
      *((void *)v74 + 33) = v92;
      uint64_t v93 = *((void *)v75 + 35);
      *((void *)v74 + 34) = *((void *)v75 + 34);
      *((void *)v74 + 35) = v93;
      uint64_t v94 = *((void *)v75 + 36);
      uint64_t v95 = *((void *)v75 + 37);
      *((void *)v74 + 36) = v94;
      *((void *)v74 + 37) = v95;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      memcpy(v74, v75, 0x130uLL);
    }
    uint64_t v27 = v111;
    v33[v35[24]] = v34[v35[24]];
    v33[v35[25]] = v34[v35[25]];
    uint64_t v96 = v35[26];
    uint64_t v97 = &v33[v96];
    int v98 = &v34[v96];
    if (v108(&v34[v96], 1, v107))
    {
      uint64_t v99 = sub_21CA57E34((uint64_t *)&unk_267C951B0);
      memcpy(v97, v98, *(void *)(*(void *)(v99 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v106 + 16))(v97, v98, v107);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v106 + 56))(v97, 0, 1, v107);
    }
    uint64_t v100 = v35[27];
    uint64_t v101 = &v33[v100];
    uint64_t v102 = &v34[v100];
    if (v108(v102, 1, v107))
    {
      uint64_t v103 = sub_21CA57E34((uint64_t *)&unk_267C951B0);
      memcpy(v101, v102, *(void *)(*(void *)(v103 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v106 + 16))(v101, v102, v107);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v106 + 56))(v101, 0, 1, v107);
    }
    (*(void (**)(char *, void, uint64_t, int *))(v110 + 56))(v33, 0, 1, v35);
  }
  return v27;
}

char *assignWithCopy for FMFActionURLInfo(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_21CB87480();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    uint64_t v11 = sub_21CA57E34(&qword_267C95190);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
LABEL_7:
  uint64_t v12 = a3[5];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  *(void *)uint64_t v13 = *(void *)v14;
  *((void *)v13 + 1) = *((void *)v14 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v15 = a3[6];
  uint64_t v16 = &a1[v15];
  uint64_t v17 = &a2[v15];
  *(void *)uint64_t v16 = *(void *)v17;
  *((void *)v16 + 1) = *((void *)v17 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v18 = a3[7];
  uint64_t v19 = &a1[v18];
  uint64_t v20 = &a2[v18];
  *(void *)uint64_t v19 = *(void *)v20;
  *((void *)v19 + 1) = *((void *)v20 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v21 = a3[8];
  uint64_t v22 = &a1[v21];
  uint64_t v23 = &a2[v21];
  uint64_t v24 = sub_21CB87590();
  uint64_t v25 = *(void *)(v24 - 8);
  uint64_t v26 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48);
  unsigned int v27 = v26(v22, 1, v24);
  uint64_t v152 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v26;
  unsigned int v28 = v26(v23, 1, v24);
  if (v27)
  {
    if (!v28)
    {
      (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v22, v23, v24);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v28)
  {
    (*(void (**)(char *, uint64_t))(v25 + 8))(v22, v24);
LABEL_12:
    uint64_t v29 = sub_21CA57E34((uint64_t *)&unk_267C951B0);
    memcpy(v22, v23, *(void *)(*(void *)(v29 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v25 + 24))(v22, v23, v24);
LABEL_13:
  uint64_t v30 = a3[9];
  uint64_t v31 = &a1[v30];
  uint64_t v32 = &a2[v30];
  *(void *)uint64_t v31 = *(void *)v32;
  *((void *)v31 + 1) = *((void *)v32 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v33 = a3[10];
  uint64_t v34 = (uint64_t)&a1[v33];
  uint64_t v35 = &a2[v33];
  uint64_t v36 = type metadata accessor for FMFLocationAlert();
  uint64_t v151 = *(void *)(v36 - 8);
  uint64_t v37 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v151 + 48);
  int v38 = v37(v34, 1, v36);
  int v39 = v37((uint64_t)v35, 1, v36);
  if (!v38)
  {
    if (v39)
    {
      sub_21CA8C5E8(v34, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
      goto LABEL_19;
    }
    uint64_t v148 = v25;
    *(void *)uint64_t v34 = *(void *)v35;
    *(void *)(v34 + 8) = *((void *)v35 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v34 + 16) = *((void *)v35 + 2);
    *(void *)(v34 + 24) = *((void *)v35 + 3);
    *(void *)(v34 + 32) = *((void *)v35 + 4);
    *(unsigned char *)(v34 + 40) = v35[40];
    *(unsigned char *)(v34 + 41) = v35[41];
    *(unsigned char *)(v34 + 42) = v35[42];
    *(unsigned char *)(v34 + 43) = v35[43];
    uint64_t v51 = *(int *)(v36 + 48);
    uint64_t v52 = v35;
    uint64_t v53 = (char *)(v34 + v51);
    uint64_t v154 = (int *)v36;
    uint64_t v156 = v52;
    uint64_t v54 = &v52[v51];
    uint64_t v55 = type metadata accessor for FMFSchedule();
    uint64_t v56 = *(void *)(v55 - 8);
    uint64_t v57 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v56 + 48);
    int v58 = v57(v53, 1, v55);
    int v59 = v57(v54, 1, v55);
    if (v58)
    {
      if (!v59)
      {
        uint64_t v149 = v34;
        uint64_t v60 = v24;
        *(void *)uint64_t v53 = *(void *)v54;
        *((void *)v53 + 1) = *((void *)v54 + 1);
        *((void *)v53 + 2) = *((void *)v54 + 2);
        *((void *)v53 + 3) = *((void *)v54 + 3);
        *((void *)v53 + 4) = *((void *)v54 + 4);
        *((void *)v53 + 5) = *((void *)v54 + 5);
        uint64_t v61 = *(int *)(v55 + 40);
        uint64_t v62 = &v53[v61];
        id v63 = &v54[v61];
        uint64_t v64 = sub_21CB876F0();
        uint64_t v65 = *(void *)(v64 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v65 + 48))(v63, 1, v64))
        {
          uint64_t v66 = sub_21CA57E34(&qword_267C94A48);
          memcpy(v62, v63, *(void *)(*(void *)(v66 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v65 + 16))(v62, v63, v64);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v65 + 56))(v62, 0, 1, v64);
        }
        uint64_t v24 = v60;
        (*(void (**)(char *, void, uint64_t, uint64_t))(v56 + 56))(v53, 0, 1, v55);
        uint64_t v34 = v149;
LABEL_51:
        uint64_t v112 = v152;
        uint64_t v113 = v154[13];
        char v114 = (void *)(v34 + v113);
        unsigned __int8 v115 = &v156[v113];
        *char v114 = *(void *)v115;
        v114[1] = *((void *)v115 + 1);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        uint64_t v116 = v154[14];
        __int16 v117 = (void *)(v34 + v116);
        char v118 = &v156[v116];
        *__int16 v117 = *(void *)v118;
        v117[1] = *((void *)v118 + 1);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *(unsigned char *)(v34 + v154[15]) = v156[v154[15]];
        *(void *)(v34 + v154[16]) = *(void *)&v156[v154[16]];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *(void *)(v34 + v154[17]) = *(void *)&v156[v154[17]];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *(void *)(v34 + v154[18]) = *(void *)&v156[v154[18]];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        uint64_t v119 = v154[19];
        uint64_t v120 = (void *)(v34 + v119);
        char v121 = &v156[v119];
        *uint64_t v120 = *(void *)v121;
        v120[1] = *((void *)v121 + 1);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        uint64_t v122 = v154[20];
        uint64_t v123 = v34 + v122;
        uint64_t v124 = &v156[v122];
        *(void *)uint64_t v123 = *(void *)&v156[v122];
        *(void *)(v123 + 8) = *(void *)&v156[v122 + 8];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *(unsigned char *)(v123 + 16) = v124[16];
        *(unsigned char *)(v123 + 17) = v124[17];
        *(unsigned char *)(v34 + v154[21]) = v156[v154[21]];
        uint64_t v125 = v154[22];
        uint64_t v126 = (void *)(v34 + v125);
        uint64_t v127 = &v156[v125];
        *uint64_t v126 = *(void *)v127;
        v126[1] = *((void *)v127 + 1);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        uint64_t v128 = v154[23];
        BOOL v129 = (void *)(v34 + v128);
        uint64_t v130 = &v156[v128];
        uint64_t v131 = *(void *)(v34 + v128 + 168);
        uint64_t v132 = *(void *)&v156[v128 + 168];
        if (v131)
        {
          if (v132)
          {
            *BOOL v129 = *(void *)v130;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            v129[1] = *((void *)v130 + 1);
            v129[2] = *((void *)v130 + 2);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            v129[3] = *((void *)v130 + 3);
            v129[4] = *((void *)v130 + 4);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            v129[5] = *((void *)v130 + 5);
            v129[6] = *((void *)v130 + 6);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            v129[7] = *((void *)v130 + 7);
            v129[8] = *((void *)v130 + 8);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            v129[9] = *((void *)v130 + 9);
            v129[10] = *((void *)v130 + 10);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            v129[11] = *((void *)v130 + 11);
            v129[12] = *((void *)v130 + 12);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            v129[13] = *((void *)v130 + 13);
            v129[14] = *((void *)v130 + 14);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            v129[15] = *((void *)v130 + 15);
            v129[16] = *((void *)v130 + 16);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            v129[17] = *((void *)v130 + 17);
            v129[18] = *((void *)v130 + 18);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            v129[19] = *((void *)v130 + 19);
            v129[20] = *((void *)v130 + 20);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            v129[21] = *((void *)v130 + 21);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            v129[22] = *((void *)v130 + 22);
            v129[23] = *((void *)v130 + 23);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            v129[24] = *((void *)v130 + 24);
            v129[25] = *((void *)v130 + 25);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            v129[26] = *((void *)v130 + 26);
            v129[27] = *((void *)v130 + 27);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            v129[28] = *((void *)v130 + 28);
            v129[29] = *((void *)v130 + 29);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            v129[30] = *((void *)v130 + 30);
            v129[31] = *((void *)v130 + 31);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            v129[32] = *((void *)v130 + 32);
            v129[33] = *((void *)v130 + 33);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            v129[34] = *((void *)v130 + 34);
            v129[35] = *((void *)v130 + 35);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            v129[36] = *((void *)v130 + 36);
            v129[37] = *((void *)v130 + 37);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
LABEL_58:
            *(unsigned char *)(v34 + v154[24]) = v156[v154[24]];
            *(unsigned char *)(v34 + v154[25]) = v156[v154[25]];
            uint64_t v133 = v154[26];
            uint64_t v134 = (void *)(v34 + v133);
            uint64_t v135 = &v156[v133];
            int v136 = v112(v34 + v133, 1, v24);
            int v137 = v112((uint64_t)v135, 1, v24);
            if (v136)
            {
              if (v137)
              {
                uint64_t v138 = sub_21CA57E34((uint64_t *)&unk_267C951B0);
                memcpy(v134, v135, *(void *)(*(void *)(v138 - 8) + 64));
                uint64_t v139 = v148;
              }
              else
              {
                uint64_t v139 = v148;
                (*(void (**)(void *, char *, uint64_t))(v148 + 16))(v134, v135, v24);
                (*(void (**)(void *, void, uint64_t, uint64_t))(v148 + 56))(v134, 0, 1, v24);
              }
            }
            else
            {
              uint64_t v139 = v148;
              if (v137)
              {
                (*(void (**)(void *, uint64_t))(v148 + 8))(v134, v24);
                uint64_t v140 = sub_21CA57E34((uint64_t *)&unk_267C951B0);
                memcpy(v134, v135, *(void *)(*(void *)(v140 - 8) + 64));
              }
              else
              {
                (*(void (**)(void *, char *, uint64_t))(v148 + 24))(v134, v135, v24);
              }
            }
            uint64_t v141 = v154[27];
            uint64_t v142 = (void *)(v34 + v141);
            uint64_t v143 = &v156[v141];
            int v144 = v112((uint64_t)v142, 1, v24);
            int v145 = v112((uint64_t)v143, 1, v24);
            if (v144)
            {
              if (!v145)
              {
                (*(void (**)(void *, char *, uint64_t))(v139 + 16))(v142, v143, v24);
                (*(void (**)(void *, void, uint64_t, uint64_t))(v139 + 56))(v142, 0, 1, v24);
                return a1;
              }
            }
            else
            {
              if (!v145)
              {
                (*(void (**)(void *, char *, uint64_t))(v139 + 24))(v142, v143, v24);
                return a1;
              }
              (*(void (**)(void *, uint64_t))(v139 + 8))(v142, v24);
            }
            size_t v48 = *(void *)(*(void *)(sub_21CA57E34((uint64_t *)&unk_267C951B0) - 8) + 64);
            uint64_t v49 = v142;
            uint64_t v50 = v143;
            goto LABEL_20;
          }
          sub_21CA757AC((uint64_t)v129);
        }
        else if (v132)
        {
          *BOOL v129 = *(void *)v130;
          v129[1] = *((void *)v130 + 1);
          v129[2] = *((void *)v130 + 2);
          v129[3] = *((void *)v130 + 3);
          v129[4] = *((void *)v130 + 4);
          v129[5] = *((void *)v130 + 5);
          v129[6] = *((void *)v130 + 6);
          v129[7] = *((void *)v130 + 7);
          v129[8] = *((void *)v130 + 8);
          v129[9] = *((void *)v130 + 9);
          v129[10] = *((void *)v130 + 10);
          v129[11] = *((void *)v130 + 11);
          v129[12] = *((void *)v130 + 12);
          v129[13] = *((void *)v130 + 13);
          v129[14] = *((void *)v130 + 14);
          v129[15] = *((void *)v130 + 15);
          v129[16] = *((void *)v130 + 16);
          v129[17] = *((void *)v130 + 17);
          v129[18] = *((void *)v130 + 18);
          v129[19] = *((void *)v130 + 19);
          v129[20] = *((void *)v130 + 20);
          v129[21] = *((void *)v130 + 21);
          v129[22] = *((void *)v130 + 22);
          v129[23] = *((void *)v130 + 23);
          v129[24] = *((void *)v130 + 24);
          v129[25] = *((void *)v130 + 25);
          v129[26] = *((void *)v130 + 26);
          v129[27] = *((void *)v130 + 27);
          v129[28] = *((void *)v130 + 28);
          v129[29] = *((void *)v130 + 29);
          v129[30] = *((void *)v130 + 30);
          v129[31] = *((void *)v130 + 31);
          v129[32] = *((void *)v130 + 32);
          v129[33] = *((void *)v130 + 33);
          v129[34] = *((void *)v130 + 34);
          v129[35] = *((void *)v130 + 35);
          v129[36] = *((void *)v130 + 36);
          v129[37] = *((void *)v130 + 37);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v112 = v152;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_58;
        }
        memcpy(v129, v130, 0x130uLL);
        goto LABEL_58;
      }
    }
    else
    {
      if (!v59)
      {
        *(void *)uint64_t v53 = *(void *)v54;
        *((void *)v53 + 1) = *((void *)v54 + 1);
        *((void *)v53 + 2) = *((void *)v54 + 2);
        *((void *)v53 + 3) = *((void *)v54 + 3);
        *((void *)v53 + 4) = *((void *)v54 + 4);
        *((void *)v53 + 5) = *((void *)v54 + 5);
        uint64_t v104 = *(int *)(v55 + 40);
        uint64_t v105 = &v53[v104];
        uint64_t v106 = &v54[v104];
        uint64_t v107 = sub_21CB876F0();
        uint64_t v108 = *(void *)(v107 - 8);
        uint64_t v109 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v108 + 48);
        int v110 = v109(v105, 1, v107);
        int v111 = v109(v106, 1, v107);
        if (v110)
        {
          if (!v111)
          {
            (*(void (**)(char *, char *, uint64_t))(v108 + 16))(v105, v106, v107);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v108 + 56))(v105, 0, 1, v107);
            goto LABEL_51;
          }
        }
        else
        {
          if (!v111)
          {
            (*(void (**)(char *, char *, uint64_t))(v108 + 24))(v105, v106, v107);
            goto LABEL_51;
          }
          (*(void (**)(char *, uint64_t))(v108 + 8))(v105, v107);
        }
        size_t v73 = *(void *)(*(void *)(sub_21CA57E34(&qword_267C94A48) - 8) + 64);
        uint64_t v74 = v105;
        uint64_t v75 = v106;
LABEL_32:
        memcpy(v74, v75, v73);
        goto LABEL_51;
      }
      sub_21CA8C5E8((uint64_t)v53, (uint64_t (*)(void))type metadata accessor for FMFSchedule);
    }
    size_t v73 = *(void *)(*(void *)(sub_21CA57E34((uint64_t *)&unk_267C96ED0) - 8) + 64);
    uint64_t v74 = v53;
    uint64_t v75 = v54;
    goto LABEL_32;
  }
  if (v39)
  {
LABEL_19:
    size_t v48 = *(void *)(*(void *)(sub_21CA57E34((uint64_t *)&unk_267C96EC0) - 8) + 64);
    uint64_t v49 = (void *)v34;
    uint64_t v50 = v35;
LABEL_20:
    memcpy(v49, v50, v48);
    return a1;
  }
  uint64_t v147 = v25;
  *(void *)uint64_t v34 = *(void *)v35;
  *(void *)(v34 + 8) = *((void *)v35 + 1);
  *(void *)(v34 + 16) = *((void *)v35 + 2);
  *(void *)(v34 + 24) = *((void *)v35 + 3);
  *(void *)(v34 + 32) = *((void *)v35 + 4);
  *(unsigned char *)(v34 + 40) = v35[40];
  *(unsigned char *)(v34 + 41) = v35[41];
  *(unsigned char *)(v34 + 42) = v35[42];
  *(unsigned char *)(v34 + 43) = v35[43];
  uint64_t v40 = *(int *)(v36 + 48);
  uint64_t v41 = v35;
  uint64_t v42 = (void *)(v34 + v40);
  uint64_t v153 = (int *)v36;
  uint64_t v155 = v41;
  uint64_t v43 = &v41[v40];
  uint64_t v44 = type metadata accessor for FMFSchedule();
  uint64_t v45 = *(void *)(v44 - 8);
  uint64_t v46 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48);
  swift_bridgeObjectRetain();
  uint64_t v146 = v24;
  if (v46(v43, 1, v44))
  {
    uint64_t v47 = sub_21CA57E34((uint64_t *)&unk_267C96ED0);
    memcpy(v42, v43, *(void *)(*(void *)(v47 - 8) + 64));
  }
  else
  {
    *uint64_t v42 = *(void *)v43;
    v42[1] = *((void *)v43 + 1);
    void v42[2] = *((void *)v43 + 2);
    v42[3] = *((void *)v43 + 3);
    v42[4] = *((void *)v43 + 4);
    v42[5] = *((void *)v43 + 5);
    uint64_t v67 = *(int *)(v44 + 40);
    uint64_t v68 = (char *)v42 + v67;
    uint64_t v69 = &v43[v67];
    uint64_t v70 = sub_21CB876F0();
    uint64_t v71 = *(void *)(v70 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v71 + 48))(v69, 1, v70))
    {
      uint64_t v72 = sub_21CA57E34(&qword_267C94A48);
      memcpy(v68, v69, *(void *)(*(void *)(v72 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v71 + 16))(v68, v69, v70);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v71 + 56))(v68, 0, 1, v70);
    }
    (*(void (**)(void *, void, uint64_t, uint64_t))(v45 + 56))(v42, 0, 1, v44);
  }
  uint64_t v76 = v153[13];
  uint64_t v77 = (void *)(v34 + v76);
  uint64_t v78 = &v155[v76];
  *uint64_t v77 = *(void *)v78;
  v77[1] = *((void *)v78 + 1);
  uint64_t v79 = v153[14];
  uint64_t v80 = (void *)(v34 + v79);
  uint64_t v81 = &v155[v79];
  *uint64_t v80 = *(void *)v81;
  v80[1] = *((void *)v81 + 1);
  *(unsigned char *)(v34 + v153[15]) = v155[v153[15]];
  *(void *)(v34 + v153[16]) = *(void *)&v155[v153[16]];
  *(void *)(v34 + v153[17]) = *(void *)&v155[v153[17]];
  *(void *)(v34 + v153[18]) = *(void *)&v155[v153[18]];
  uint64_t v82 = v153[19];
  uint64_t v83 = (void *)(v34 + v82);
  uint64_t v84 = &v155[v82];
  *uint64_t v83 = *(void *)v84;
  v83[1] = *((void *)v84 + 1);
  uint64_t v85 = v153[20];
  uint64_t v86 = v34 + v85;
  uint64_t v87 = &v155[v85];
  *(void *)uint64_t v86 = *(void *)v87;
  *(void *)(v86 + 8) = *((void *)v87 + 1);
  *(unsigned char *)(v86 + 16) = v87[16];
  *(unsigned char *)(v86 + 17) = v87[17];
  *(unsigned char *)(v34 + v153[21]) = v155[v153[21]];
  uint64_t v88 = v153[22];
  uint64_t v89 = (void *)(v34 + v88);
  uint64_t v90 = &v155[v88];
  *uint64_t v89 = *(void *)v90;
  v89[1] = *((void *)v90 + 1);
  uint64_t v91 = v153[23];
  uint64_t v150 = v34;
  uint64_t v92 = (void *)(v34 + v91);
  uint64_t v93 = &v155[v91];
  uint64_t v94 = *(void *)&v155[v91 + 168];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v94)
  {
    *uint64_t v92 = *(void *)v93;
    v92[1] = *((void *)v93 + 1);
    v92[2] = *((void *)v93 + 2);
    v92[3] = *((void *)v93 + 3);
    v92[4] = *((void *)v93 + 4);
    v92[5] = *((void *)v93 + 5);
    v92[6] = *((void *)v93 + 6);
    v92[7] = *((void *)v93 + 7);
    v92[8] = *((void *)v93 + 8);
    v92[9] = *((void *)v93 + 9);
    v92[10] = *((void *)v93 + 10);
    v92[11] = *((void *)v93 + 11);
    v92[12] = *((void *)v93 + 12);
    v92[13] = *((void *)v93 + 13);
    v92[14] = *((void *)v93 + 14);
    v92[15] = *((void *)v93 + 15);
    v92[16] = *((void *)v93 + 16);
    v92[17] = *((void *)v93 + 17);
    v92[18] = *((void *)v93 + 18);
    v92[19] = *((void *)v93 + 19);
    v92[20] = *((void *)v93 + 20);
    v92[21] = *((void *)v93 + 21);
    v92[22] = *((void *)v93 + 22);
    v92[23] = *((void *)v93 + 23);
    v92[24] = *((void *)v93 + 24);
    v92[25] = *((void *)v93 + 25);
    v92[26] = *((void *)v93 + 26);
    v92[27] = *((void *)v93 + 27);
    v92[28] = *((void *)v93 + 28);
    v92[29] = *((void *)v93 + 29);
    v92[30] = *((void *)v93 + 30);
    v92[31] = *((void *)v93 + 31);
    v92[32] = *((void *)v93 + 32);
    v92[33] = *((void *)v93 + 33);
    v92[34] = *((void *)v93 + 34);
    v92[35] = *((void *)v93 + 35);
    v92[36] = *((void *)v93 + 36);
    v92[37] = *((void *)v93 + 37);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    memcpy(v92, v93, 0x130uLL);
  }
  *(unsigned char *)(v150 + v153[24]) = v155[v153[24]];
  *(unsigned char *)(v150 + v153[25]) = v155[v153[25]];
  uint64_t v95 = v153[26];
  uint64_t v96 = (void *)(v150 + v95);
  uint64_t v97 = &v155[v95];
  if (v152((uint64_t)&v155[v95], 1, v146))
  {
    uint64_t v98 = sub_21CA57E34((uint64_t *)&unk_267C951B0);
    memcpy(v96, v97, *(void *)(*(void *)(v98 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v147 + 16))(v96, v97, v146);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v147 + 56))(v96, 0, 1, v146);
  }
  uint64_t v99 = v153[27];
  uint64_t v100 = (void *)(v150 + v99);
  uint64_t v101 = &v155[v99];
  if (v152((uint64_t)&v155[v99], 1, v146))
  {
    uint64_t v102 = sub_21CA57E34((uint64_t *)&unk_267C951B0);
    memcpy(v100, v101, *(void *)(*(void *)(v102 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v147 + 16))(v100, v101, v146);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v147 + 56))(v100, 0, 1, v146);
  }
  (*(void (**)(uint64_t, void, uint64_t, int *))(v151 + 56))(v150, 0, 1, v153);
  return a1;
}

uint64_t sub_21CA8C5E8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

char *initializeWithTake for FMFActionURLInfo(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_21CB87480();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = sub_21CA57E34(&qword_267C95190);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v9 = a3[6];
  *(_OWORD *)&a1[a3[5]] = *(_OWORD *)&a2[a3[5]];
  *(_OWORD *)&a1[v9] = *(_OWORD *)&a2[v9];
  uint64_t v10 = a3[8];
  *(_OWORD *)&a1[a3[7]] = *(_OWORD *)&a2[a3[7]];
  uint64_t v11 = &a1[v10];
  uint64_t v12 = &a2[v10];
  uint64_t v13 = sub_21CB87590();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
  if (v15(v12, 1, v13))
  {
    uint64_t v16 = sub_21CA57E34((uint64_t *)&unk_267C951B0);
    memcpy(v11, v12, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v12, v13);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  }
  uint64_t v17 = a3[10];
  *(_OWORD *)&a1[a3[9]] = *(_OWORD *)&a2[a3[9]];
  uint64_t v18 = &a1[v17];
  uint64_t v19 = &a2[v17];
  uint64_t v20 = (int *)type metadata accessor for FMFLocationAlert();
  uint64_t v21 = *((void *)v20 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v21 + 48))(v19, 1, v20))
  {
    uint64_t v22 = sub_21CA57E34((uint64_t *)&unk_267C96EC0);
    memcpy(v18, v19, *(void *)(*(void *)(v22 - 8) + 64));
  }
  else
  {
    uint64_t v52 = v14;
    uint64_t v53 = v21;
    uint64_t v54 = v15;
    long long v23 = *((_OWORD *)v19 + 1);
    *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
    *((_OWORD *)v18 + 1) = v23;
    *((void *)v18 + 4) = *((void *)v19 + 4);
    v18[40] = v19[40];
    v18[41] = v19[41];
    *((_WORD *)v18 + 21) = *((_WORD *)v19 + 21);
    uint64_t v24 = v20[12];
    uint64_t v25 = &v18[v24];
    uint64_t v26 = &v19[v24];
    uint64_t v27 = type metadata accessor for FMFSchedule();
    uint64_t v28 = *(void *)(v27 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27))
    {
      uint64_t v29 = sub_21CA57E34((uint64_t *)&unk_267C96ED0);
      memcpy(v25, v26, *(void *)(*(void *)(v29 - 8) + 64));
      uint64_t v30 = v54;
      uint64_t v31 = v52;
    }
    else
    {
      long long v32 = *((_OWORD *)v26 + 1);
      *(_OWORD *)uint64_t v25 = *(_OWORD *)v26;
      *((_OWORD *)v25 + 1) = v32;
      *((_OWORD *)v25 + 2) = *((_OWORD *)v26 + 2);
      uint64_t v33 = *(int *)(v27 + 40);
      uint64_t v50 = v25;
      __dst = &v25[v33];
      uint64_t v34 = &v26[v33];
      uint64_t v35 = sub_21CB876F0();
      uint64_t v49 = *(void *)(v35 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v49 + 48))(v34, 1, v35))
      {
        uint64_t v36 = sub_21CA57E34(&qword_267C94A48);
        memcpy(__dst, v34, *(void *)(*(void *)(v36 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v49 + 32))(__dst, v34, v35);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v49 + 56))(__dst, 0, 1, v35);
      }
      uint64_t v30 = v54;
      uint64_t v31 = v52;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v28 + 56))(v50, 0, 1, v27);
    }
    *(_OWORD *)&v18[v20[13]] = *(_OWORD *)&v19[v20[13]];
    *(_OWORD *)&v18[v20[14]] = *(_OWORD *)&v19[v20[14]];
    v18[v20[15]] = v19[v20[15]];
    *(void *)&v18[v20[16]] = *(void *)&v19[v20[16]];
    *(void *)&v18[v20[17]] = *(void *)&v19[v20[17]];
    *(void *)&v18[v20[18]] = *(void *)&v19[v20[18]];
    *(_OWORD *)&v18[v20[19]] = *(_OWORD *)&v19[v20[19]];
    uint64_t v37 = v20[20];
    int v38 = &v18[v37];
    int v39 = &v19[v37];
    *(_OWORD *)int v38 = *(_OWORD *)v39;
    *((_WORD *)v38 + 8) = *((_WORD *)v39 + 8);
    v18[v20[21]] = v19[v20[21]];
    *(_OWORD *)&v18[v20[22]] = *(_OWORD *)&v19[v20[22]];
    memcpy(&v18[v20[23]], &v19[v20[23]], 0x130uLL);
    v18[v20[24]] = v19[v20[24]];
    v18[v20[25]] = v19[v20[25]];
    uint64_t v40 = v20[26];
    uint64_t v41 = &v18[v40];
    uint64_t v42 = &v19[v40];
    if (v30(&v19[v40], 1, v13))
    {
      uint64_t v43 = sub_21CA57E34((uint64_t *)&unk_267C951B0);
      memcpy(v41, v42, *(void *)(*(void *)(v43 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v31 + 32))(v41, v42, v13);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v31 + 56))(v41, 0, 1, v13);
    }
    uint64_t v44 = v20[27];
    uint64_t v45 = &v18[v44];
    uint64_t v46 = &v19[v44];
    if (v30(v46, 1, v13))
    {
      uint64_t v47 = sub_21CA57E34((uint64_t *)&unk_267C951B0);
      memcpy(v45, v46, *(void *)(*(void *)(v47 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v31 + 32))(v45, v46, v13);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v31 + 56))(v45, 0, 1, v13);
    }
    (*(void (**)(char *, void, uint64_t, int *))(v53 + 56))(v18, 0, 1, v20);
  }
  return a1;
}

char *assignWithTake for FMFActionURLInfo(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_21CB87480();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    uint64_t v11 = sub_21CA57E34(&qword_267C95190);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
LABEL_7:
  uint64_t v12 = a3[5];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  uint64_t v16 = *(void *)v14;
  uint64_t v15 = *((void *)v14 + 1);
  *(void *)uint64_t v13 = v16;
  *((void *)v13 + 1) = v15;
  swift_bridgeObjectRelease();
  uint64_t v17 = a3[6];
  uint64_t v18 = &a1[v17];
  uint64_t v19 = &a2[v17];
  uint64_t v21 = *(void *)v19;
  uint64_t v20 = *((void *)v19 + 1);
  *(void *)uint64_t v18 = v21;
  *((void *)v18 + 1) = v20;
  swift_bridgeObjectRelease();
  uint64_t v22 = a3[7];
  long long v23 = &a1[v22];
  uint64_t v24 = &a2[v22];
  uint64_t v26 = *(void *)v24;
  uint64_t v25 = *((void *)v24 + 1);
  *(void *)long long v23 = v26;
  *((void *)v23 + 1) = v25;
  swift_bridgeObjectRelease();
  uint64_t v27 = a3[8];
  uint64_t v28 = &a1[v27];
  uint64_t v29 = &a2[v27];
  uint64_t v30 = sub_21CB87590();
  uint64_t v31 = *(void *)(v30 - 8);
  long long v32 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v31 + 48);
  int v33 = v32(v28, 1, v30);
  uint64_t v170 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v32;
  int v34 = v32(v29, 1, v30);
  if (v33)
  {
    if (!v34)
    {
      (*(void (**)(char *, char *, uint64_t))(v31 + 32))(v28, v29, v30);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v31 + 56))(v28, 0, 1, v30);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v34)
  {
    (*(void (**)(char *, uint64_t))(v31 + 8))(v28, v30);
LABEL_12:
    uint64_t v35 = sub_21CA57E34((uint64_t *)&unk_267C951B0);
    memcpy(v28, v29, *(void *)(*(void *)(v35 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v31 + 40))(v28, v29, v30);
LABEL_13:
  uint64_t v36 = a3[9];
  uint64_t v37 = &a1[v36];
  int v38 = &a2[v36];
  uint64_t v40 = *(void *)v38;
  uint64_t v39 = *((void *)v38 + 1);
  *(void *)uint64_t v37 = v40;
  *((void *)v37 + 1) = v39;
  swift_bridgeObjectRelease();
  uint64_t v41 = a3[10];
  uint64_t v42 = (uint64_t)&a1[v41];
  uint64_t v43 = &a2[v41];
  uint64_t v44 = (int *)type metadata accessor for FMFLocationAlert();
  uint64_t v45 = *((void *)v44 - 1);
  uint64_t v46 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v45 + 48);
  int v47 = v46(v42, 1, v44);
  int v48 = v46((uint64_t)v43, 1, v44);
  if (!v47)
  {
    if (v48)
    {
      sub_21CA8C5E8(v42, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
      goto LABEL_19;
    }
    uint64_t v166 = v30;
    uint64_t v169 = v31;
    uint64_t v60 = *((void *)v43 + 1);
    *(void *)uint64_t v42 = *(void *)v43;
    *(void *)(v42 + 8) = v60;
    swift_bridgeObjectRelease();
    *(_OWORD *)(v42 + 16) = *((_OWORD *)v43 + 1);
    *(void *)(v42 + 32) = *((void *)v43 + 4);
    *(unsigned char *)(v42 + 40) = v43[40];
    *(unsigned char *)(v42 + 41) = v43[41];
    *(unsigned char *)(v42 + 42) = v43[42];
    *(unsigned char *)(v42 + 43) = v43[43];
    uint64_t v61 = v44[12];
    uint64_t v62 = (char *)(v42 + v61);
    id v63 = &v43[v61];
    uint64_t v64 = type metadata accessor for FMFSchedule();
    __src = *(void **)(v64 - 8);
    uint64_t v65 = (uint64_t (*)(char *, uint64_t, uint64_t))__src[6];
    int v66 = v65(v62, 1, v64);
    int v67 = v65(v63, 1, v64);
    if (v66)
    {
      if (!v67)
      {
        long long v68 = *((_OWORD *)v63 + 1);
        *(_OWORD *)uint64_t v62 = *(_OWORD *)v63;
        *((_OWORD *)v62 + 1) = v68;
        *((_OWORD *)v62 + 2) = *((_OWORD *)v63 + 2);
        uint64_t v69 = *(int *)(v64 + 40);
        __dst = &v62[v69];
        uint64_t v70 = &v63[v69];
        uint64_t v71 = sub_21CB876F0();
        uint64_t v72 = *(void *)(v71 - 8);
        uint64_t v73 = v166;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v72 + 48))(v70, 1, v71))
        {
          uint64_t v74 = sub_21CA57E34(&qword_267C94A48);
          memcpy(__dst, v70, *(void *)(*(void *)(v74 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v72 + 32))(__dst, v70, v71);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v72 + 56))(__dst, 0, 1, v71);
        }
        ((void (*)(char *, void, uint64_t, uint64_t))__src[7])(v62, 0, 1, v64);
LABEL_52:
        uint64_t v103 = v44[13];
        uint64_t v104 = (void *)(v42 + v103);
        uint64_t v105 = &v43[v103];
        uint64_t v107 = *(void *)v105;
        uint64_t v106 = *((void *)v105 + 1);
        *uint64_t v104 = v107;
        v104[1] = v106;
        swift_bridgeObjectRelease();
        uint64_t v108 = v44[14];
        uint64_t v109 = (void *)(v42 + v108);
        int v110 = &v43[v108];
        uint64_t v112 = *(void *)v110;
        uint64_t v111 = *((void *)v110 + 1);
        *uint64_t v109 = v112;
        v109[1] = v111;
        swift_bridgeObjectRelease();
        *(unsigned char *)(v42 + v44[15]) = v43[v44[15]];
        *(void *)(v42 + v44[16]) = *(void *)&v43[v44[16]];
        swift_bridgeObjectRelease();
        *(void *)(v42 + v44[17]) = *(void *)&v43[v44[17]];
        swift_bridgeObjectRelease();
        *(void *)(v42 + v44[18]) = *(void *)&v43[v44[18]];
        swift_bridgeObjectRelease();
        uint64_t v113 = v44[19];
        char v114 = (void *)(v42 + v113);
        unsigned __int8 v115 = &v43[v113];
        uint64_t v117 = *(void *)v115;
        uint64_t v116 = *((void *)v115 + 1);
        *char v114 = v117;
        v114[1] = v116;
        swift_bridgeObjectRelease();
        uint64_t v118 = v44[20];
        uint64_t v119 = v42 + v118;
        uint64_t v120 = &v43[v118];
        uint64_t v121 = *(void *)&v43[v118 + 8];
        *(void *)uint64_t v119 = *(void *)&v43[v118];
        *(void *)(v119 + 8) = v121;
        swift_bridgeObjectRelease();
        *(_WORD *)(v119 + 16) = *((_WORD *)v120 + 8);
        *(unsigned char *)(v42 + v44[21]) = v43[v44[21]];
        uint64_t v122 = v44[22];
        uint64_t v123 = (void *)(v42 + v122);
        uint64_t v124 = &v43[v122];
        uint64_t v126 = *(void *)v124;
        uint64_t v125 = *((void *)v124 + 1);
        *uint64_t v123 = v126;
        v123[1] = v125;
        swift_bridgeObjectRelease();
        uint64_t v127 = v44[23];
        uint64_t v128 = (void *)(v42 + v127);
        BOOL v129 = &v43[v127];
        if (*(void *)(v42 + v127 + 168))
        {
          if (*((void *)v129 + 21))
          {
            *uint64_t v128 = *(void *)v129;
            swift_bridgeObjectRelease();
            uint64_t v130 = *((void *)v129 + 2);
            v128[1] = *((void *)v129 + 1);
            v128[2] = v130;
            swift_bridgeObjectRelease();
            uint64_t v131 = *((void *)v129 + 4);
            v128[3] = *((void *)v129 + 3);
            v128[4] = v131;
            swift_bridgeObjectRelease();
            uint64_t v132 = *((void *)v129 + 6);
            v128[5] = *((void *)v129 + 5);
            v128[6] = v132;
            swift_bridgeObjectRelease();
            uint64_t v133 = *((void *)v129 + 8);
            v128[7] = *((void *)v129 + 7);
            v128[8] = v133;
            swift_bridgeObjectRelease();
            uint64_t v134 = *((void *)v129 + 10);
            v128[9] = *((void *)v129 + 9);
            v128[10] = v134;
            swift_bridgeObjectRelease();
            uint64_t v135 = *((void *)v129 + 12);
            v128[11] = *((void *)v129 + 11);
            v128[12] = v135;
            swift_bridgeObjectRelease();
            uint64_t v136 = *((void *)v129 + 14);
            v128[13] = *((void *)v129 + 13);
            v128[14] = v136;
            swift_bridgeObjectRelease();
            uint64_t v137 = *((void *)v129 + 16);
            v128[15] = *((void *)v129 + 15);
            v128[16] = v137;
            swift_bridgeObjectRelease();
            uint64_t v138 = *((void *)v129 + 18);
            v128[17] = *((void *)v129 + 17);
            v128[18] = v138;
            swift_bridgeObjectRelease();
            uint64_t v139 = *((void *)v129 + 20);
            v128[19] = *((void *)v129 + 19);
            v128[20] = v139;
            swift_bridgeObjectRelease();
            v128[21] = *((void *)v129 + 21);
            swift_bridgeObjectRelease();
            uint64_t v140 = *((void *)v129 + 23);
            v128[22] = *((void *)v129 + 22);
            v128[23] = v140;
            swift_bridgeObjectRelease();
            uint64_t v141 = *((void *)v129 + 25);
            v128[24] = *((void *)v129 + 24);
            v128[25] = v141;
            swift_bridgeObjectRelease();
            uint64_t v142 = *((void *)v129 + 27);
            v128[26] = *((void *)v129 + 26);
            v128[27] = v142;
            swift_bridgeObjectRelease();
            uint64_t v143 = *((void *)v129 + 29);
            v128[28] = *((void *)v129 + 28);
            v128[29] = v143;
            swift_bridgeObjectRelease();
            uint64_t v144 = *((void *)v129 + 31);
            v128[30] = *((void *)v129 + 30);
            v128[31] = v144;
            swift_bridgeObjectRelease();
            uint64_t v145 = *((void *)v129 + 33);
            v128[32] = *((void *)v129 + 32);
            v128[33] = v145;
            swift_bridgeObjectRelease();
            uint64_t v146 = *((void *)v129 + 35);
            v128[34] = *((void *)v129 + 34);
            v128[35] = v146;
            swift_bridgeObjectRelease();
            uint64_t v147 = *((void *)v129 + 37);
            v128[36] = *((void *)v129 + 36);
            v128[37] = v147;
            swift_bridgeObjectRelease();
LABEL_57:
            *(unsigned char *)(v42 + v44[24]) = v43[v44[24]];
            *(unsigned char *)(v42 + v44[25]) = v43[v44[25]];
            uint64_t v148 = v44[26];
            uint64_t v149 = (void *)(v42 + v148);
            uint64_t v150 = &v43[v148];
            int v151 = v170(v42 + v148, 1, v73);
            int v152 = v170((uint64_t)v150, 1, v73);
            if (v151)
            {
              if (v152)
              {
                uint64_t v153 = sub_21CA57E34((uint64_t *)&unk_267C951B0);
                memcpy(v149, v150, *(void *)(*(void *)(v153 - 8) + 64));
                uint64_t v154 = v169;
              }
              else
              {
                uint64_t v154 = v169;
                (*(void (**)(void *, char *, uint64_t))(v169 + 32))(v149, v150, v73);
                (*(void (**)(void *, void, uint64_t, uint64_t))(v169 + 56))(v149, 0, 1, v73);
              }
            }
            else
            {
              uint64_t v154 = v169;
              if (v152)
              {
                (*(void (**)(void *, uint64_t))(v169 + 8))(v149, v73);
                uint64_t v155 = sub_21CA57E34((uint64_t *)&unk_267C951B0);
                memcpy(v149, v150, *(void *)(*(void *)(v155 - 8) + 64));
              }
              else
              {
                (*(void (**)(void *, char *, uint64_t))(v169 + 40))(v149, v150, v73);
              }
            }
            uint64_t v156 = v44[27];
            uint64_t v157 = (void *)(v42 + v156);
            unint64_t v158 = &v43[v156];
            int v159 = v170((uint64_t)v157, 1, v73);
            int v160 = v170((uint64_t)v158, 1, v73);
            if (v159)
            {
              if (!v160)
              {
                (*(void (**)(void *, char *, uint64_t))(v154 + 32))(v157, v158, v73);
                (*(void (**)(void *, void, uint64_t, uint64_t))(v154 + 56))(v157, 0, 1, v73);
                return a1;
              }
            }
            else
            {
              if (!v160)
              {
                (*(void (**)(void *, char *, uint64_t))(v154 + 40))(v157, v158, v73);
                return a1;
              }
              (*(void (**)(void *, uint64_t))(v154 + 8))(v157, v73);
            }
            size_t v57 = *(void *)(*(void *)(sub_21CA57E34((uint64_t *)&unk_267C951B0) - 8) + 64);
            int v58 = v157;
            int v59 = v158;
            goto LABEL_20;
          }
          sub_21CA757AC((uint64_t)v128);
        }
        memcpy(v128, v129, 0x130uLL);
        goto LABEL_57;
      }
    }
    else
    {
      if (!v67)
      {
        long long v93 = *((_OWORD *)v63 + 1);
        *(_OWORD *)uint64_t v62 = *(_OWORD *)v63;
        *((_OWORD *)v62 + 1) = v93;
        *((_OWORD *)v62 + 2) = *((_OWORD *)v63 + 2);
        uint64_t v94 = *(int *)(v64 + 40);
        uint64_t v95 = &v62[v94];
        uint64_t v96 = &v63[v94];
        uint64_t v97 = sub_21CB876F0();
        uint64_t v98 = *(void *)(v97 - 8);
        uint64_t v99 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v98 + 48);
        __dsta = v95;
        LODWORD(v95) = v99(v95, 1, v97);
        int v100 = v99(v96, 1, v97);
        if (v95)
        {
          uint64_t v73 = v166;
          if (!v100)
          {
            (*(void (**)(void *, char *, uint64_t))(v98 + 32))(__dsta, v96, v97);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v98 + 56))(__dsta, 0, 1, v97);
            goto LABEL_52;
          }
          size_t v101 = *(void *)(*(void *)(sub_21CA57E34(&qword_267C94A48) - 8) + 64);
          uint64_t v102 = __dsta;
        }
        else
        {
          uint64_t v73 = v166;
          if (!v100)
          {
            (*(void (**)(void *, char *, uint64_t))(v98 + 40))(__dsta, v96, v97);
            goto LABEL_52;
          }
          (*(void (**)(void *, uint64_t))(v98 + 8))(__dsta, v97);
          size_t v101 = *(void *)(*(void *)(sub_21CA57E34(&qword_267C94A48) - 8) + 64);
          uint64_t v102 = __dsta;
        }
        memcpy(v102, v96, v101);
        goto LABEL_52;
      }
      sub_21CA8C5E8((uint64_t)v62, (uint64_t (*)(void))type metadata accessor for FMFSchedule);
    }
    uint64_t v80 = sub_21CA57E34((uint64_t *)&unk_267C96ED0);
    memcpy(v62, v63, *(void *)(*(void *)(v80 - 8) + 64));
    uint64_t v73 = v166;
    goto LABEL_52;
  }
  if (v48)
  {
LABEL_19:
    size_t v57 = *(void *)(*(void *)(sub_21CA57E34((uint64_t *)&unk_267C96EC0) - 8) + 64);
    int v58 = (void *)v42;
    int v59 = v43;
LABEL_20:
    memcpy(v58, v59, v57);
    return a1;
  }
  uint64_t v168 = v31;
  long long v49 = *((_OWORD *)v43 + 1);
  *(_OWORD *)uint64_t v42 = *(_OWORD *)v43;
  *(_OWORD *)(v42 + 16) = v49;
  *(void *)(v42 + 32) = *((void *)v43 + 4);
  *(unsigned char *)(v42 + 40) = v43[40];
  *(unsigned char *)(v42 + 41) = v43[41];
  *(_WORD *)(v42 + 42) = *((_WORD *)v43 + 21);
  uint64_t v50 = v44[12];
  uint64_t v51 = (_OWORD *)(v42 + v50);
  uint64_t v52 = &v43[v50];
  uint64_t v53 = type metadata accessor for FMFSchedule();
  uint64_t v54 = *(void *)(v53 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v54 + 48))(v52, 1, v53))
  {
    uint64_t v55 = sub_21CA57E34((uint64_t *)&unk_267C96ED0);
    memcpy(v51, v52, *(void *)(*(void *)(v55 - 8) + 64));
    uint64_t v56 = v168;
  }
  else
  {
    long long v75 = *((_OWORD *)v52 + 1);
    *uint64_t v51 = *(_OWORD *)v52;
    v51[1] = v75;
    v51[2] = *((_OWORD *)v52 + 2);
    uint64_t v76 = *(int *)(v53 + 40);
    __srca = (char *)v51 + v76;
    uint64_t v167 = v30;
    uint64_t v77 = &v52[v76];
    uint64_t v78 = sub_21CB876F0();
    uint64_t v161 = *(void *)(v78 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v161 + 48))(v77, 1, v78))
    {
      uint64_t v79 = sub_21CA57E34(&qword_267C94A48);
      memcpy(__srca, v77, *(void *)(*(void *)(v79 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v161 + 32))(__srca, v77, v78);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v161 + 56))(__srca, 0, 1, v78);
    }
    uint64_t v30 = v167;
    uint64_t v56 = v168;
    (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v54 + 56))(v51, 0, 1, v53);
  }
  *(_OWORD *)(v42 + v44[13]) = *(_OWORD *)&v43[v44[13]];
  *(_OWORD *)(v42 + v44[14]) = *(_OWORD *)&v43[v44[14]];
  *(unsigned char *)(v42 + v44[15]) = v43[v44[15]];
  *(void *)(v42 + v44[16]) = *(void *)&v43[v44[16]];
  *(void *)(v42 + v44[17]) = *(void *)&v43[v44[17]];
  *(void *)(v42 + v44[18]) = *(void *)&v43[v44[18]];
  *(_OWORD *)(v42 + v44[19]) = *(_OWORD *)&v43[v44[19]];
  uint64_t v81 = v44[20];
  uint64_t v82 = v42 + v81;
  uint64_t v83 = &v43[v81];
  *(_OWORD *)uint64_t v82 = *(_OWORD *)v83;
  *(_WORD *)(v82 + 16) = *((_WORD *)v83 + 8);
  *(unsigned char *)(v42 + v44[21]) = v43[v44[21]];
  *(_OWORD *)(v42 + v44[22]) = *(_OWORD *)&v43[v44[22]];
  memcpy((void *)(v42 + v44[23]), &v43[v44[23]], 0x130uLL);
  *(unsigned char *)(v42 + v44[24]) = v43[v44[24]];
  *(unsigned char *)(v42 + v44[25]) = v43[v44[25]];
  uint64_t v84 = v44[26];
  uint64_t v85 = (void *)(v42 + v84);
  uint64_t v86 = &v43[v84];
  if (v170((uint64_t)&v43[v84], 1, v30))
  {
    uint64_t v87 = sub_21CA57E34((uint64_t *)&unk_267C951B0);
    memcpy(v85, v86, *(void *)(*(void *)(v87 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v56 + 32))(v85, v86, v30);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v56 + 56))(v85, 0, 1, v30);
  }
  uint64_t v88 = v44[27];
  uint64_t v89 = (void *)(v42 + v88);
  uint64_t v90 = &v43[v88];
  if (v170((uint64_t)v90, 1, v30))
  {
    uint64_t v91 = sub_21CA57E34((uint64_t *)&unk_267C951B0);
    memcpy(v89, v90, *(void *)(*(void *)(v91 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v56 + 32))(v89, v90, v30);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v56 + 56))(v89, 0, 1, v30);
  }
  (*(void (**)(uint64_t, void, uint64_t, int *))(v45 + 56))(v42, 0, 1, v44);
  return a1;
}

uint64_t getEnumTagSinglePayload for FMFActionURLInfo(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_21CA8DD78);
}

uint64_t sub_21CA8DD78(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_21CA57E34(&qword_267C95190);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    int v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_11:
    return v9(v10, a2, v8);
  }
  if (a2 == 2147483646)
  {
    unint64_t v11 = *(void *)(a1 + a3[5] + 8);
    if (v11 >= 0xFFFFFFFF) {
      LODWORD(v11) = -1;
    }
    int v12 = v11 - 1;
    if (v12 < 0) {
      int v12 = -1;
    }
    return (v12 + 1);
  }
  else
  {
    uint64_t v14 = sub_21CA57E34((uint64_t *)&unk_267C951B0);
    uint64_t v15 = *(void *)(v14 - 8);
    if (*(_DWORD *)(v15 + 84) == a2)
    {
      uint64_t v8 = v14;
      uint64_t v10 = a1 + a3[8];
      int v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v15 + 48);
      goto LABEL_11;
    }
    uint64_t v16 = sub_21CA57E34((uint64_t *)&unk_267C96EC0);
    uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 48);
    uint64_t v18 = v16;
    uint64_t v19 = a1 + a3[10];
    return v17(v19, a2, v18);
  }
}

uint64_t storeEnumTagSinglePayload for FMFActionURLInfo(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_21CA8DF28);
}

uint64_t sub_21CA8DF28(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t result = sub_21CA57E34(&qword_267C95190);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    unint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_7:
    return v11(v12, a2, a2, v10);
  }
  if (a3 == 2147483646)
  {
    *(void *)(a1 + a4[5] + 8) = a2;
    return result;
  }
  uint64_t v13 = sub_21CA57E34((uint64_t *)&unk_267C951B0);
  uint64_t v14 = *(void *)(v13 - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v12 = a1 + a4[8];
    unint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_7;
  }
  uint64_t v15 = sub_21CA57E34((uint64_t *)&unk_267C96EC0);
  uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56);
  uint64_t v17 = v15;
  uint64_t v18 = a1 + a4[10];

  return v16(v18, a2, a2, v17);
}

void sub_21CA8E0B8()
{
  sub_21CA02ED8(319, (unint64_t *)&qword_267C95478, MEMORY[0x263F06EA8]);
  if (v0 <= 0x3F)
  {
    sub_21CA02ED8(319, (unint64_t *)&qword_267C97000, MEMORY[0x263F07490]);
    if (v1 <= 0x3F)
    {
      sub_21CA02ED8(319, &qword_267C95568, (void (*)(uint64_t))type metadata accessor for FMFLocationAlert);
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

uint64_t type metadata accessor for FMFSavePrefsRequest()
{
  uint64_t result = qword_267C95588;
  if (!qword_267C95588) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_21CA8E268()
{
  return swift_initClassMetadata2();
}

uint64_t sub_21CA8E2C8()
{
  uint64_t v1 = v0;
  uint64_t v33 = *MEMORY[0x263EF8340];
  uint64_t v2 = *(void *)(v0 + qword_267C95580 + 8);
  if (v2)
  {
    uint64_t v3 = *(void *)(v0 + qword_267C95580);
    uint64_t v32 = MEMORY[0x263F8D310];
    *(void *)&long long v30 = v3;
    *((void *)&v30 + 1) = v2;
    swift_beginAccess();
    swift_bridgeObjectRetain();
    sub_21CA3769C((uint64_t)&v30, 0x656369766544656DLL, 0xEA00000000006449);
    return swift_endAccess();
  }
  else
  {
    sub_21CB87220();
    swift_allocObject();
    sub_21CB87210();
    uint64_t v5 = *(void *)(v0 + qword_267C95570 + 8);
    uint64_t v6 = *(void *)(v0 + qword_267C95570 + 16);
    uint64_t v7 = *(void *)(v0 + qword_267C95570 + 24);
    *(void *)&long long v30 = *(void *)(v0 + qword_267C95570);
    *((void *)&v30 + 1) = v5;
    uint64_t v31 = v6;
    uint64_t v32 = v7;
    sub_21CA1F33C(v30, v5, v6);
    sub_21CA57E34(&qword_267C95598);
    sub_21CA8E90C();
    uint64_t v8 = sub_21CB87200();
    unint64_t v10 = v9;
    sub_21CA59D84(v30, v5, v6);
    swift_release();
    unint64_t v11 = self;
    uint64_t v12 = (void *)sub_21CB874B0();
    v27[0] = 0;
    id v13 = objc_msgSend(v11, sel_JSONObjectWithData_options_error_, v12, 0, v27);

    id v14 = v27[0];
    if (v13)
    {
      sub_21CB88A40();
      swift_unknownObjectRelease();
      sub_21CA38B20(&v28, &v30);
      sub_21CA4E524((uint64_t)&v30, (uint64_t)&v28);
      uint64_t v15 = sub_21CA57E34(&qword_267C955B0);
      if (swift_dynamicCast())
      {
        uint64_t v16 = v27[0];
        id v26 = v27[0];
        if (*(unsigned char *)(v1 + qword_267C95578))
        {
          sub_21CA57E34(&qword_267C955C0);
          uint64_t inited = swift_initStackObject();
          *(_OWORD *)(inited + 16) = xmmword_21CB8B220;
          uint64_t v22 = (_OWORD *)(inited + 48);
          strcpy((char *)(inited + 32), "hideLocation");
          *(unsigned char *)(inited + 45) = 0;
          *(_WORD *)(inited + 46) = -5120;
          if (v16[2] && (unint64_t v23 = sub_21CA5BCE0(0x61636F4C65646968, 0xEC0000006E6F6974), (v24 & 1) != 0))
          {
            sub_21CA4E524(v16[7] + 32 * v23, (uint64_t)v22);
          }
          else
          {
            *uint64_t v22 = 0u;
            *(_OWORD *)(inited + 64) = 0u;
          }
          swift_bridgeObjectRelease();
          unint64_t v25 = sub_21CB78B20(inited);
          *((void *)&v29 + 1) = sub_21CA57E34(&qword_267C955C8);
          *(void *)&long long v28 = v25;
          swift_beginAccess();
          uint64_t v17 = 0x7366657270;
          uint64_t v18 = 0xE500000000000000;
        }
        else
        {
          sub_21CB803A4(0x61636F4C65646968, 0xEC0000006E6F6974, &v28);
          sub_21CA34054((uint64_t)&v28);
          sub_21CB803A4(0x657469726F766166, 0xE900000000000073, &v28);
          sub_21CA34054((uint64_t)&v28);
          *((void *)&v29 + 1) = v15;
          *(void *)&long long v28 = v26;
          swift_beginAccess();
          sub_21CA3769C((uint64_t)&v28, 0x7366657270, 0xE500000000000000);
          long long v28 = 0u;
          long long v29 = 0u;
          uint64_t v17 = 0x656369766544656DLL;
          uint64_t v18 = 0xEA00000000006449;
        }
        sub_21CA3769C((uint64_t)&v28, v17, v18);
        swift_endAccess();
      }
      sub_21CA36618(v8, v10);
      return sub_21CA2B0D0((uint64_t)&v30);
    }
    else
    {
      uint64_t v19 = v14;
      uint64_t v20 = (void *)sub_21CB87400();

      swift_willThrow();
      return sub_21CA36618(v8, v10);
    }
  }
}

uint64_t sub_21CA8E764()
{
  sub_21CA59D84(*(void *)(v0 + qword_267C95570), *(void *)(v0 + qword_267C95570 + 8), *(void *)(v0 + qword_267C95570 + 16));

  return swift_bridgeObjectRelease();
}

uint64_t sub_21CA8E7B0()
{
  uint64_t v0 = sub_21CB87730();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + qword_267CA51F8;
  uint64_t v2 = sub_21CB87590();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  sub_21CA59D84(*(void *)(v0 + qword_267C95570), *(void *)(v0 + qword_267C95570 + 8), *(void *)(v0 + qword_267C95570 + 16));
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_21CA8E8B0()
{
  sub_21CA8E7B0();

  return swift_deallocClassInstance();
}

uint64_t sub_21CA8E904()
{
  return type metadata accessor for FMFSavePrefsRequest();
}

unint64_t sub_21CA8E90C()
{
  unint64_t result = qword_267C955A0;
  if (!qword_267C955A0)
  {
    sub_21CA5EEBC(&qword_267C95598);
    sub_21CA656A8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C955A0);
  }
  return result;
}

uint64_t sub_21CA8E980()
{
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t FMFLocation.address.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for FMFLocation();
  sub_21CA26A4C(v1 + *(int *)(v3 + 44), (uint64_t)v6, &qword_267C951F0);
  sub_21CA26A4C((uint64_t)v6, (uint64_t)v7, &qword_267C951F0);
  if (sub_21CA7CDBC((uint64_t)v7) == 1)
  {
    sub_21CA76144(v5);
    return sub_21CA26A4C((uint64_t)v5, a1, &qword_267C951E0);
  }
  else
  {
    sub_21CA26A4C((uint64_t)v7, a1, &qword_267C951E0);
    return sub_21CA81C54((uint64_t)v7, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_21CA5E3D0);
  }
}

FMFCore::FMFLocationSource_optional __swiftcall FMFLocationSource.init(rawValue:)(Swift::Int rawValue)
{
  char v2 = 4;
  if ((unint64_t)rawValue < 4) {
    char v2 = rawValue;
  }
  *uint64_t v1 = v2;
  return (FMFCore::FMFLocationSource_optional)rawValue;
}

uint64_t FMFLocationSource.rawValue.getter()
{
  return *v0;
}

FMFCore::FMFLocationSource_optional sub_21CA8EA98(Swift::Int *a1)
{
  return FMFLocationSource.init(rawValue:)(*a1);
}

uint64_t FMFLocation.identifier.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FMFLocation.motionActivityState.getter()
{
  return *(void *)(v0 + 24);
}

uint64_t FMFLocation.motionActivityState.setter(uint64_t result, char a2)
{
  *(void *)(v2 + 24) = result;
  *(unsigned char *)(v2 + 32) = a2 & 1;
  return result;
}

uint64_t (*FMFLocation.motionActivityState.modify())()
{
  return nullsub_1;
}

unsigned char *FMFLocation.locationSource.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 33) = *result;
  return result;
}

uint64_t (*FMFLocation.locationSource.modify())()
{
  return nullsub_1;
}

uint64_t FMFLocation.poiIdentifier.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for FMFLocation() + 32);

  return sub_21CA8EB7C(v3, a1);
}

uint64_t sub_21CA8EB7C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_21CA57E34(&qword_267C96F00);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t FMFLocation.poiIdentifier.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for FMFLocation() + 32);

  return sub_21CA8EC28(a1, v3);
}

uint64_t sub_21CA8EC28(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_21CA57E34(&qword_267C96F00);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t (*FMFLocation.poiIdentifier.modify())(void, double)
{
  return nullsub_1;
}

uint64_t FMFLocation.isLivePending.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for FMFLocation() + 36));
}

uint64_t FMFLocation.isLivePending.setter(char a1)
{
  uint64_t result = type metadata accessor for FMFLocation();
  *(unsigned char *)(v1 + *(int *)(result + 36)) = a1;
  return result;
}

uint64_t (*FMFLocation.isLivePending.modify())(void, double)
{
  return nullsub_1;
}

uint64_t FMFLocation.isLivePaused.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for FMFLocation() + 40));
}

uint64_t FMFLocation.isLivePaused.setter(char a1)
{
  uint64_t result = type metadata accessor for FMFLocation();
  *(unsigned char *)(v1 + *(int *)(result + 40)) = a1;
  return result;
}

uint64_t (*FMFLocation.isLivePaused.modify())(void, double)
{
  return nullsub_1;
}

uint64_t FMFLocation.label.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for FMFLocation();
  sub_21CA26A4C(v1 + *(int *)(v3 + 44), (uint64_t)v7, &qword_267C951F0);
  sub_21CA26A4C((uint64_t)v7, (uint64_t)v8, &qword_267C951F0);
  if (sub_21CA7CDBC((uint64_t)v8) == 1)
  {
    uint64_t v4 = 0;
    uint64_t result = 0;
    __int16 v6 = 0;
  }
  else
  {
    uint64_t v4 = v9;
    __int16 v6 = v10;
    uint64_t result = swift_bridgeObjectRetain();
  }
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = result;
  *(_WORD *)(a1 + 16) = v6;
  return result;
}

uint64_t FMFLocation.isInaccurate.getter()
{
  uint64_t v1 = type metadata accessor for FMFLocation();
  sub_21CA26A4C(v0 + *(int *)(v1 + 44), (uint64_t)v4, &qword_267C951F0);
  sub_21CA26A4C((uint64_t)v4, (uint64_t)v5, &qword_267C951F0);
  BOOL v2 = sub_21CA7CDBC((uint64_t)v5) == 1;
  return (v2 | v5[352]) & 1;
}

uint64_t FMFLocation.displayLabel.getter()
{
  uint64_t v1 = type metadata accessor for FMFLocation();
  sub_21CA26A4C(v0 + *(int *)(v1 + 44), (uint64_t)v5, &qword_267C951F0);
  sub_21CA26A4C((uint64_t)v5, (uint64_t)__src, &qword_267C951F0);
  int v2 = sub_21CA7CDBC((uint64_t)__src);
  uint64_t result = 0;
  if (v2 != 1)
  {
    memcpy(__dst, __src, sizeof(__dst));
    return sub_21CA759F0();
  }
  return result;
}

BOOL FMFLocation.isProactiveLocation.getter()
{
  return *(unsigned char *)(v0 + 33) == 1;
}

BOOL FMFLocation.isLiveLocation.getter()
{
  return *(unsigned char *)(v0 + 33) == 2;
}

BOOL FMFLocation.isOld.getter()
{
  uint64_t v1 = sub_21CB87590();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = &v11[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = type metadata accessor for FMFLocation();
  sub_21CA26A4C(v0 + *(int *)(v5 + 44), (uint64_t)v11, &qword_267C951F0);
  sub_21CA26A4C((uint64_t)v11, (uint64_t)v12, &qword_267C951F0);
  if (sub_21CA7CDBC((uint64_t)v12) == 1) {
    return 0;
  }
  id v7 = v12[38];
  id v8 = objc_msgSend(v7, sel_timestamp);
  sub_21CB87560();

  sub_21CB87530();
  double v10 = v9;

  (*(void (**)(unsigned char *, uint64_t))(v2 + 8))(v4, v1);
  return v10 < -300.0;
}

uint64_t sub_21CA8F14C(char *a1, char *a2)
{
  return sub_21CA806C0(*a1, *a2);
}

uint64_t sub_21CA8F158()
{
  return sub_21CAC4250();
}

uint64_t sub_21CA8F160()
{
  sub_21CB88380();

  return swift_bridgeObjectRelease();
}

uint64_t sub_21CA8F218()
{
  return sub_21CAD4A98();
}

uint64_t sub_21CA8F220@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_21CA930A8();
  *a1 = result;
  return result;
}

void sub_21CA8F250(unint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE200000000000000;
  unint64_t v3 = 25705;
  switch(*v1)
  {
    case 1:
      unint64_t v4 = 0xE800000000000000;
      goto LABEL_6;
    case 2:
      unint64_t v2 = 0x800000021CB93230;
      unint64_t v3 = 0xD000000000000010;
      goto LABEL_4;
    case 3:
      unint64_t v4 = 0xEE00656372756F53;
LABEL_6:
      *a1 = 0x6E6F697461636F6CLL;
      a1[1] = v4;
      return;
    default:
LABEL_4:
      *a1 = v3;
      a1[1] = v2;
      return;
  }
}

uint64_t sub_21CA8F2EC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_21CA930A8();
  *a1 = result;
  return result;
}

uint64_t sub_21CA8F314(uint64_t a1)
{
  unint64_t v2 = sub_21CA2B7C0();

  return MEMORY[0x270FA00B8](a1, v2);
}

double sub_21CA8F350(uint64_t a1)
{
  *(unsigned char *)(a1 + 352) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 320) = 0u;
  *(_OWORD *)(a1 + 336) = 0u;
  *(_OWORD *)(a1 + 288) = 0u;
  *(_OWORD *)(a1 + 304) = 0u;
  *(_OWORD *)(a1 + 256) = 0u;
  *(_OWORD *)(a1 + 272) = 0u;
  *(_OWORD *)(a1 + 224) = 0u;
  *(_OWORD *)(a1 + 240) = 0u;
  *(_OWORD *)(a1 + 192) = 0u;
  *(_OWORD *)(a1 + 208) = 0u;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 176) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return result;
}

uint64_t sub_21CA8F388@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, unsigned __int8 a3@<W3>, uint64_t a4@<X8>)
{
  v26[1] = a2;
  id v7 = (int *)type metadata accessor for FMFLocation();
  uint64_t v8 = MEMORY[0x270FA5388](v7);
  double v10 = (char *)v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x270FA5388](v8);
  id v13 = (char *)v26 - v12;
  *(void *)(a4 + 24) = 0;
  *(unsigned char *)(a4 + 32) = 1;
  uint64_t v14 = a4 + *(int *)(v11 + 32);
  uint64_t v15 = sub_21CB875D0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v14, 1, 1, v15);
  uint64_t v16 = *(void *)(a1 + 8);
  *(void *)a4 = *(void *)a1;
  *(void *)(a4 + 8) = v16;
  sub_21CA26A4C(a1 + v7[11], (uint64_t)v27, &qword_267C951F0);
  sub_21CA26A4C((uint64_t)v27, a4 + v7[11], &qword_267C951F0);
  uint64_t v17 = a1 + v7[8];
  swift_bridgeObjectRetain();
  sub_21CA93348((uint64_t)v27, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_21CA5C7D4);
  sub_21CA5CD6C(v17, v14);
  *(unsigned char *)(a4 + 33) = *(unsigned char *)(a1 + 33);
  char v18 = *(unsigned char *)(a1 + 32);
  *(void *)(a4 + 24) = *(void *)(a1 + 24);
  *(unsigned char *)(a4 + 32) = v18;
  *(unsigned char *)(a4 + 16) = *(unsigned char *)(a1 + 16);
  if (a3 == 1)
  {
    swift_bridgeObjectRelease();
    sub_21CA2C9E8(a1, (uint64_t)v13);
LABEL_4:
    int v20 = v13[33];
    sub_21CA2CA4C((uint64_t)v13);
    BOOL v21 = v20 != 3;
    goto LABEL_6;
  }
  char v19 = sub_21CB88F50();
  swift_bridgeObjectRelease();
  sub_21CA2C9E8(a1, (uint64_t)v13);
  if (v19) {
    goto LABEL_4;
  }
  sub_21CA2CA4C((uint64_t)v13);
  BOOL v21 = 0;
LABEL_6:
  *(unsigned char *)(a4 + v7[9]) = v21;
  if (a3 < 2u)
  {
    char v22 = sub_21CB88F50();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_21CA7CFF8(a1, (uint64_t)v10);
    if ((v22 & 1) == 0)
    {
      uint64_t result = sub_21CA2CA4C((uint64_t)v10);
      BOOL v25 = 0;
      goto LABEL_11;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_21CA7CFF8(a1, (uint64_t)v10);
  }
  int v23 = v10[33];
  uint64_t result = sub_21CA2CA4C((uint64_t)v10);
  BOOL v25 = v23 != 3;
LABEL_11:
  *(unsigned char *)(a4 + v7[10]) = v25;
  return result;
}

uint64_t FMFLocation.init(from:address:label:labels:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  sub_21CA26A4C(a2, (uint64_t)v17, &qword_267C951E0);
  uint64_t v9 = *a3;
  uint64_t v10 = a3[1];
  __int16 v11 = *((_WORD *)a3 + 8);
  *(void *)(a5 + 24) = 0;
  *(unsigned char *)(a5 + 32) = 1;
  uint64_t v12 = (int *)type metadata accessor for FMFLocation();
  uint64_t v13 = a5 + v12[8];
  uint64_t v14 = sub_21CB875D0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v13, 1, 1, v14);
  *(void *)a5 = 0;
  *(void *)(a5 + 8) = 0;
  *(unsigned char *)(a5 + 16) = 0;
  sub_21CA26A4C((uint64_t)v17, (uint64_t)__src, &qword_267C951E0);
  __src[38] = a1;
  LOBYTE(__src[39]) = 0;
  __src[40] = v9;
  __src[41] = v10;
  LOWORD(__src[42]) = v11;
  __src[43] = a4;
  LOBYTE(__src[44]) = 0;
  memcpy(__dst, __src, 0x161uLL);
  nullsub_1(__dst, v15);
  uint64_t result = sub_21CA26A4C((uint64_t)__dst, a5 + v12[11], &qword_267C951F0);
  *(unsigned char *)(a5 + 33) = 0;
  *(unsigned char *)(a5 + v12[9]) = 0;
  *(unsigned char *)(a5 + v12[10]) = 0;
  return result;
}

uint64_t FMFLocation.init(from:shiftedLocation:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  __int16 v6 = (int *)type metadata accessor for FMFLocation();
  uint64_t v7 = a3 + v6[8];
  uint64_t v8 = sub_21CB875D0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v7, 1, 1, v8);
  uint64_t v9 = *(void *)(a1 + 8);
  *(void *)a3 = *(void *)a1;
  *(void *)(a3 + 8) = v9;
  *(unsigned char *)(a3 + 16) = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a3 + 33) = *(unsigned char *)(a1 + 33);
  sub_21CA26A4C(a1 + v6[11], (uint64_t)v22, &qword_267C951F0);
  sub_21CA26A4C((uint64_t)v22, (uint64_t)v23, &qword_267C951F0);
  if (sub_21CA7CDBC((uint64_t)v23) == 1)
  {
    sub_21CA76144(__dst);
    sub_21CA26A4C((uint64_t)__dst, (uint64_t)v21, &qword_267C951E0);
    char v10 = 0;
    uint64_t v11 = 0;
    uint64_t v12 = 0;
    uint64_t v13 = 0;
    __int16 v14 = 0;
  }
  else
  {
    sub_21CA26A4C((uint64_t)v22, (uint64_t)__dst, &qword_267C951F0);
    uint64_t v12 = *(void *)&__dst[320];
    uint64_t v13 = *(void *)&__dst[328];
    __int16 v14 = *(_WORD *)&__dst[336];
    uint64_t v11 = *(void *)&__dst[344];
    char v10 = __dst[352];
    sub_21CA81C54((uint64_t)v23, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_21CA5E3D0);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_21CA26A4C((uint64_t)v23, (uint64_t)v21, &qword_267C951E0);
  }
  sub_21CA26A4C((uint64_t)v21, (uint64_t)__src, &qword_267C951E0);
  __src[38] = a2;
  LOBYTE(__src[39]) = 0;
  __src[40] = v12;
  __src[41] = v13;
  LOWORD(__src[42]) = v14;
  __src[43] = v11;
  LOBYTE(__src[44]) = v10;
  memcpy(__dst, __src, sizeof(__dst));
  nullsub_1(__dst, v15);
  sub_21CA26A4C((uint64_t)__dst, a3 + v6[11], &qword_267C951F0);
  char v16 = *(unsigned char *)(a1 + 32);
  *(void *)(a3 + 24) = *(void *)(a1 + 24);
  *(unsigned char *)(a3 + 32) = v16;
  *(unsigned char *)(a3 + v6[9]) = *(unsigned char *)(a1 + v6[9]);
  char v17 = *(unsigned char *)(a1 + v6[10]);
  swift_bridgeObjectRetain();
  uint64_t result = sub_21CA2CA4C(a1);
  *(unsigned char *)(a3 + v6[10]) = v17;
  return result;
}

uint64_t sub_21CA8FA68@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v181 = a2;
  uint64_t v5 = sub_21CB87F10();
  uint64_t v168 = *(void *)(v5 - 8);
  uint64_t v169 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v167 = (char *)&v141 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_21CB87880();
  uint64_t v164 = *(void *)(v7 - 8);
  uint64_t v165 = v7;
  MEMORY[0x270FA5388](v7);
  id v163 = (char *)&v141 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_21CB87910();
  uint64_t v161 = *(void *)(v9 - 8);
  uint64_t v162 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v166 = (char *)&v141 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_21CA57E34(&qword_267C95640);
  uint64_t v12 = MEMORY[0x270FA5388](v11 - 8);
  int v160 = (char *)&v141 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  int v159 = (char *)&v141 - v15;
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  unint64_t v158 = (char *)&v141 - v17;
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  uint64_t v178 = (char *)&v141 - v19;
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  uint64_t v177 = (char *)&v141 - v21;
  uint64_t v22 = MEMORY[0x270FA5388](v20);
  char v176 = (char *)&v141 - v23;
  uint64_t v24 = MEMORY[0x270FA5388](v22);
  uint64_t v175 = (char *)&v141 - v25;
  uint64_t v26 = MEMORY[0x270FA5388](v24);
  uint64_t v174 = (char *)&v141 - v27;
  uint64_t v28 = MEMORY[0x270FA5388](v26);
  uint64_t v173 = (char *)&v141 - v29;
  uint64_t v30 = MEMORY[0x270FA5388](v28);
  uint64_t v172 = (char *)&v141 - v31;
  uint64_t v32 = MEMORY[0x270FA5388](v30);
  uint64_t v171 = (char *)&v141 - v33;
  uint64_t v34 = MEMORY[0x270FA5388](v32);
  uint64_t v170 = (char *)&v141 - v35;
  MEMORY[0x270FA5388](v34);
  uint64_t v37 = (char *)&v141 - v36;
  uint64_t v151 = sub_21CB87E40();
  uint64_t v38 = *(void *)(v151 - 8);
  MEMORY[0x270FA5388](v151);
  uint64_t v40 = (char *)&v141 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = sub_21CB87590();
  uint64_t v42 = *(void *)(v41 - 8);
  MEMORY[0x270FA5388](v41);
  uint64_t v44 = (char *)&v141 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)(a3 + 24) = 0;
  *(unsigned char *)(a3 + 32) = 1;
  uint64_t v179 = (int *)type metadata accessor for FMFLocation();
  uint64_t v180 = (uint64_t *)a3;
  uint64_t v45 = a3 + v179[8];
  uint64_t v46 = sub_21CB875D0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 56))(v45, 1, 1, v46);
  sub_21CB87EE0();
  double v48 = v47;
  sub_21CB87EF0();
  double v50 = v49;
  sub_21CB87ED0();
  double v52 = v51;
  sub_21CB87E70();
  double v54 = v53;
  sub_21CB87E60();
  double v56 = v55;
  sub_21CB87EA0();
  double v58 = v57;
  sub_21CB87F00();
  sub_21CB87540();
  id v59 = objc_allocWithZone(MEMORY[0x263F00A50]);
  uint64_t v60 = (void *)sub_21CB87510();
  id v157 = objc_msgSend(v59, sel_initWithCoordinate_altitude_horizontalAccuracy_verticalAccuracy_course_courseAccuracy_speed_speedAccuracy_timestamp_, v60, v48, v50, v52, v54, v56, 0.0, 0.0, v58, 0);

  (*(void (**)(char *, uint64_t))(v42 + 8))(v44, v41);
  uint64_t v61 = (void *)sub_21CB87EB0();
  if (v61[2])
  {
    uint64_t v62 = v61[4];
    id v63 = (void *)v61[5];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    uint64_t v155 = v63;
    uint64_t v156 = v62;
    v64._countAndFlagsBits = v62;
    v64._object = v63;
    FMFDefaultLabel.init(rawValue:)(v64);
    if (v209[0] == 5) {
      int v65 = 259;
    }
    else {
      int v65 = 3;
    }
    int v154 = v65;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v155 = 0;
    uint64_t v156 = 0;
    int v154 = 0;
  }
  uint64_t v66 = sub_21CB87CB0();
  int v67 = v180;
  *uint64_t v180 = v66;
  v67[1] = v68;
  uint64_t v69 = v151;
  (*(void (**)(char *, void, uint64_t))(v38 + 104))(v40, *MEMORY[0x263F3D0C8], v151);
  uint64_t v70 = sub_21CB87E90();
  uint64_t v152 = v71;
  uint64_t v153 = v70;
  (*(void (**)(char *, uint64_t))(v38 + 8))(v40, v69);
  sub_21CB87EC0();
  uint64_t v72 = sub_21CB88000();
  uint64_t v73 = *(void *)(v72 - 8);
  uint64_t v74 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v73 + 48);
  int v75 = v74(v37, 1, v72);
  uint64_t v76 = (uint64_t)v158;
  if (v75 == 1)
  {
    sub_21CA1B88C((uint64_t)v37, &qword_267C95640);
    uint64_t v151 = 0;
  }
  else
  {
    uint64_t v151 = sub_21CB87FA0();
    (*(void (**)(char *, uint64_t))(v73 + 8))(v37, v72);
  }
  uint64_t v77 = (uint64_t)v160;
  sub_21CB87EC0();
  uint64_t v78 = (uint64_t)v170;
  int v79 = v74(v170, 1, v72);
  uint64_t v80 = (uint64_t)v159;
  if (v79 == 1)
  {
    sub_21CA1B88C(v78, &qword_267C95640);
    int v160 = 0;
    uint64_t v150 = 0;
  }
  else
  {
    int v160 = (char *)sub_21CB87FB0();
    uint64_t v150 = v81;
    (*(void (**)(uint64_t, uint64_t))(v73 + 8))(v78, v72);
  }
  sub_21CB87EC0();
  uint64_t v82 = (uint64_t)v171;
  if (v74(v171, 1, v72) == 1)
  {
    sub_21CA1B88C(v82, &qword_267C95640);
    uint64_t v170 = 0;
    uint64_t v149 = 0;
  }
  else
  {
    uint64_t v170 = (char *)sub_21CB87F30();
    uint64_t v149 = v83;
    (*(void (**)(uint64_t, uint64_t))(v73 + 8))(v82, v72);
  }
  sub_21CB87EC0();
  uint64_t v84 = (uint64_t)v172;
  if (v74(v172, 1, v72) == 1)
  {
    sub_21CA1B88C(v84, &qword_267C95640);
    uint64_t v171 = 0;
    uint64_t v148 = 0;
  }
  else
  {
    uint64_t v171 = (char *)sub_21CB87F80();
    uint64_t v148 = v85;
    (*(void (**)(uint64_t, uint64_t))(v73 + 8))(v84, v72);
  }
  sub_21CB87EC0();
  uint64_t v86 = (uint64_t)v173;
  if (v74(v173, 1, v72) == 1)
  {
    sub_21CA1B88C(v86, &qword_267C95640);
    uint64_t v172 = 0;
    uint64_t v147 = 0;
  }
  else
  {
    uint64_t v172 = (char *)sub_21CB87FD0();
    uint64_t v147 = v87;
    (*(void (**)(uint64_t, uint64_t))(v73 + 8))(v86, v72);
  }
  sub_21CB87EC0();
  uint64_t v88 = (uint64_t)v174;
  if (v74(v174, 1, v72) == 1)
  {
    sub_21CA1B88C(v88, &qword_267C95640);
    uint64_t v173 = 0;
    uint64_t v146 = 0;
  }
  else
  {
    uint64_t v173 = (char *)sub_21CB87FE0();
    uint64_t v146 = v89;
    (*(void (**)(uint64_t, uint64_t))(v73 + 8))(v88, v72);
  }
  sub_21CB87EC0();
  uint64_t v90 = (uint64_t)v175;
  if (v74(v175, 1, v72) == 1)
  {
    sub_21CA1B88C(v90, &qword_267C95640);
    uint64_t v174 = 0;
    uint64_t v145 = 0;
  }
  else
  {
    uint64_t v174 = (char *)sub_21CB87F90();
    uint64_t v145 = v91;
    (*(void (**)(uint64_t, uint64_t))(v73 + 8))(v90, v72);
  }
  sub_21CB87EC0();
  uint64_t v92 = (uint64_t)v176;
  if (v74(v176, 1, v72) == 1)
  {
    sub_21CA1B88C(v92, &qword_267C95640);
    uint64_t v175 = 0;
    uint64_t v144 = 0;
  }
  else
  {
    uint64_t v175 = (char *)sub_21CB87F60();
    uint64_t v144 = v93;
    (*(void (**)(uint64_t, uint64_t))(v73 + 8))(v92, v72);
  }
  sub_21CB87EC0();
  uint64_t v94 = (uint64_t)v177;
  if (v74(v177, 1, v72) == 1)
  {
    sub_21CA1B88C(v94, &qword_267C95640);
    char v176 = 0;
    uint64_t v143 = 0;
  }
  else
  {
    char v176 = (char *)sub_21CB87F80();
    uint64_t v143 = v95;
    (*(void (**)(uint64_t, uint64_t))(v73 + 8))(v94, v72);
  }
  sub_21CB87EC0();
  id v96 = v178;
  if (v74(v178, 1, v72) == 1)
  {
    sub_21CA1B88C((uint64_t)v96, &qword_267C95640);
    uint64_t v177 = 0;
    uint64_t v142 = 0;
  }
  else
  {
    uint64_t v177 = (char *)sub_21CB87F50();
    uint64_t v142 = v97;
    (*(void (**)(id, uint64_t))(v73 + 8))(v96, v72);
  }
  sub_21CB87EC0();
  if (v74((char *)v76, 1, v72) == 1)
  {
    sub_21CA1B88C(v76, &qword_267C95640);
    uint64_t v178 = 0;
    uint64_t v141 = 0;
  }
  else
  {
    uint64_t v178 = (char *)sub_21CB87F70();
    uint64_t v141 = v98;
    (*(void (**)(uint64_t, uint64_t))(v73 + 8))(v76, v72);
  }
  sub_21CB87EC0();
  if (v74((char *)v80, 1, v72) == 1)
  {
    sub_21CA1B88C(v80, &qword_267C95640);
    uint64_t v99 = 0;
    uint64_t v100 = 0;
  }
  else
  {
    uint64_t v99 = sub_21CB87F40();
    uint64_t v101 = v80;
    uint64_t v100 = v102;
    (*(void (**)(uint64_t, uint64_t))(v73 + 8))(v101, v72);
  }
  sub_21CB87EC0();
  if (v74((char *)v77, 1, v72) == 1)
  {
    sub_21CA1B88C(v77, &qword_267C95640);
    uint64_t v103 = 0;
    uint64_t v104 = 0;
  }
  else
  {
    uint64_t v103 = sub_21CB87F20();
    uint64_t v105 = v77;
    uint64_t v104 = v106;
    (*(void (**)(uint64_t, uint64_t))(v73 + 8))(v105, v72);
  }
  uint64_t v108 = v167;
  uint64_t v107 = v168;
  uint64_t v109 = v163;
  v184[0] = v151;
  v184[1] = v160;
  v184[2] = v150;
  v184[3] = 0;
  v184[4] = 0;
  v184[5] = v170;
  v184[6] = v149;
  v184[7] = v171;
  v184[8] = v148;
  v184[9] = v172;
  v184[10] = v147;
  v184[11] = v173;
  v184[12] = v146;
  long long v185 = 0u;
  long long v186 = 0u;
  uint64_t v187 = v174;
  uint64_t v188 = v145;
  uint64_t v189 = 0;
  uint64_t v190 = 0;
  uint64_t v191 = MEMORY[0x263F8EE78];
  uint64_t v192 = 0;
  uint64_t v193 = 0;
  uint64_t v194 = v153;
  uint64_t v195 = v152;
  uint64_t v196 = v175;
  uint64_t v197 = v144;
  uint64_t v198 = v176;
  uint64_t v199 = v143;
  uint64_t v200 = v177;
  uint64_t v201 = v142;
  uint64_t v202 = v178;
  uint64_t v203 = v141;
  uint64_t v204 = v99;
  uint64_t v205 = v100;
  uint64_t v206 = v103;
  uint64_t v207 = v104;
  nullsub_1(v184, 0.0);
  sub_21CA26A4C((uint64_t)v184, (uint64_t)v208, &qword_267C951E0);
  int v110 = v157;
  v208[38] = v157;
  LOBYTE(v208[39]) = 0;
  v208[40] = v156;
  v208[41] = v155;
  LOWORD(v208[42]) = v154;
  v208[43] = 0;
  LOBYTE(v208[44]) = 0;
  memcpy(v209, v208, 0x161uLL);
  nullsub_1(v209, v111);
  uint64_t v112 = v180;
  sub_21CA26A4C((uint64_t)v209, (uint64_t)v180 + v179[11], &qword_267C951F0);
  *((unsigned char *)v112 + 16) = 0;
  uint64_t v178 = v110;
  uint64_t v113 = v166;
  sub_21CB87E80();
  uint64_t v115 = v161;
  uint64_t v114 = v162;
  int v116 = (*(uint64_t (**)(char *, uint64_t))(v161 + 88))(v113, v162);
  uint64_t v117 = 0;
  uint64_t v118 = v169;
  uint64_t v119 = v164;
  if (v116 != *MEMORY[0x263F3CDB0])
  {
    if (v116 == *MEMORY[0x263F3CD98])
    {
      uint64_t v117 = 1;
    }
    else if (v116 == *MEMORY[0x263F3CDB8])
    {
      uint64_t v117 = 2;
    }
    else if (v116 == *MEMORY[0x263F3CDA8])
    {
      uint64_t v117 = 3;
    }
    else if (v116 == *MEMORY[0x263F3CDA0])
    {
      uint64_t v117 = 4;
    }
    else if (v116 == *MEMORY[0x263F3CD90])
    {
      uint64_t v117 = 5;
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v115 + 8))(v166, v114);
      uint64_t v117 = 0;
    }
  }
  v112[3] = v117;
  *((unsigned char *)v112 + 32) = 0;
  sub_21CB87E50();
  uint64_t v120 = v165;
  int v121 = (*(uint64_t (**)(char *, uint64_t))(v119 + 88))(v109, v165);
  char v122 = 0;
  if (v121 != *MEMORY[0x263F3CD38])
  {
    if (v121 == *MEMORY[0x263F3CD28])
    {
LABEL_60:
      char v122 = 1;
      goto LABEL_65;
    }
    if (v121 == *MEMORY[0x263F3CD30])
    {
      char v122 = 2;
    }
    else
    {
      if (v121 != *MEMORY[0x263F3CD40])
      {
        (*(void (**)(char *, uint64_t))(v119 + 8))(v109, v120);
        goto LABEL_60;
      }
      char v122 = 3;
    }
  }
LABEL_65:
  *((unsigned char *)v112 + 33) = v122;
  uint64_t v123 = v179;
  *((unsigned char *)v112 + v179[9]) = 0;
  *((unsigned char *)v112 + v123[10]) = 0;
  uint64_t v124 = FMFLocation.debugDescription.getter();
  unint64_t v126 = v125;
  if (qword_267C94990 != -1) {
    swift_once();
  }
  uint64_t v127 = sub_21CB880A0();
  sub_21CA4CC18(v127, (uint64_t)qword_267CA5368);
  (*(void (**)(char *, uint64_t, uint64_t))(v107 + 16))(v108, a1, v118);
  swift_bridgeObjectRetain();
  uint64_t v128 = sub_21CB88070();
  os_log_type_t v129 = sub_21CB88880();
  if (os_log_type_enabled(v128, v129))
  {
    uint64_t v130 = swift_slowAlloc();
    uint64_t v131 = swift_slowAlloc();
    uint64_t v183 = v131;
    *(_DWORD *)uint64_t v130 = 136315394;
    swift_bridgeObjectRetain();
    uint64_t v182 = sub_21CA4E450(v124, v126, &v183);
    sub_21CB889C0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v130 + 12) = 2080;
    uint64_t v132 = (void *)sub_21CB87EB0();
    if (v132[2])
    {
      uint64_t v134 = v132[4];
      unint64_t v133 = v132[5];
      swift_bridgeObjectRetain();
    }
    else
    {
      unint64_t v133 = 0xE300000000000000;
      uint64_t v134 = 7104878;
    }
    swift_bridgeObjectRelease();
    uint64_t v182 = sub_21CA4E450(v134, v133, &v183);
    sub_21CB889C0();
    swift_bridgeObjectRelease();
    uint64_t v138 = *(void (**)(char *, uint64_t))(v168 + 8);
    uint64_t v139 = v169;
    v138(v167, v169);
    _os_log_impl(&dword_21CA00000, v128, v129, "👀 FMFLocation: created from FMLLocation %s with secure label: '%s'", (uint8_t *)v130, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x21D4B6B70](v131, -1, -1);
    MEMORY[0x21D4B6B70](v130, -1, -1);

    uint64_t v140 = sub_21CB87CC0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v140 - 8) + 8))(v181, v140);
    return ((uint64_t (*)(uint64_t, uint64_t))v138)(a1, v139);
  }
  else
  {

    uint64_t v135 = *(void (**)(char *, uint64_t))(v107 + 8);
    v135(v108, v118);

    swift_bridgeObjectRelease_n();
    uint64_t v136 = sub_21CB87CC0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v136 - 8) + 8))(v181, v136);
    return ((uint64_t (*)(uint64_t, uint64_t))v135)(a1, v118);
  }
}

void sub_21CA90D4C(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_21CB87590();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v59 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)(a2 + 24) = 0;
  *(unsigned char *)(a2 + 32) = 1;
  id v59 = (int *)type metadata accessor for FMFLocation();
  uint64_t v8 = a2 + v59[8];
  uint64_t v9 = sub_21CB875D0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v8, 1, 1, v9);
  objc_msgSend(a1, sel_latitude);
  double v11 = v10;
  objc_msgSend(a1, sel_longitude);
  double v13 = v12;
  objc_msgSend(a1, sel_altitude);
  double v15 = v14;
  objc_msgSend(a1, sel_horizontalAccuracy);
  double v17 = v16;
  objc_msgSend(a1, sel_verticalAccuracy);
  double v19 = v18;
  objc_msgSend(a1, sel_course);
  double v21 = v20;
  objc_msgSend(a1, sel_speed);
  double v23 = v22;
  id v24 = objc_msgSend(a1, sel_timestamp);
  sub_21CB87560();

  id v25 = objc_allocWithZone(MEMORY[0x263F00A50]);
  uint64_t v26 = (void *)sub_21CB87510();
  id v27 = objc_msgSend(v25, sel_initWithCoordinate_altitude_horizontalAccuracy_verticalAccuracy_course_courseAccuracy_speed_speedAccuracy_timestamp_, v26, v11, v13, v15, v17, v19, v21, 0.0, v23, 0);

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  id v28 = objc_msgSend(a1, sel_locationLabel);
  if (v28)
  {
    uint64_t v29 = v28;
    uint64_t v30 = sub_21CB882F0();
    uint64_t v32 = v31;

    swift_bridgeObjectRetain();
    v33._countAndFlagsBits = v30;
    v33._object = v32;
    FMFDefaultLabel.init(rawValue:)(v33);
    if (v64[0] == 5) {
      __int16 v34 = 259;
    }
    else {
      __int16 v34 = 3;
    }
  }
  else
  {
    uint64_t v30 = 0;
    uint64_t v32 = 0;
    __int16 v34 = 0;
  }
  id v35 = objc_msgSend(a1, sel_findMyId);
  uint64_t v36 = sub_21CB882F0();
  uint64_t v38 = v37;

  *(void *)a2 = v36;
  *(void *)(a2 + 8) = v38;
  sub_21CA76144(v62);
  sub_21CA26A4C((uint64_t)v62, (uint64_t)v63, &qword_267C951E0);
  v63[38] = v27;
  LOBYTE(v63[39]) = 0;
  v63[40] = v30;
  v63[41] = v32;
  LOWORD(v63[42]) = v34;
  v63[43] = 0;
  LOBYTE(v63[44]) = 0;
  memcpy(v64, v63, 0x161uLL);
  nullsub_1(v64, v39);
  uint64_t v40 = v59;
  sub_21CA26A4C((uint64_t)v64, a2 + v59[11], &qword_267C951F0);
  *(unsigned char *)(a2 + 16) = 0;
  uint64_t v41 = (int *)v27;
  *(void *)(a2 + 24) = objc_msgSend(a1, sel_motionActivityState);
  *(unsigned char *)(a2 + 32) = 0;
  uint64_t v42 = sub_21CB87190();
  id v61[3] = v42;
  v61[4] = sub_21CA930F4();
  uint64_t v43 = sub_21CA6D80C(v61);
  (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v42 - 8) + 104))(v43, *MEMORY[0x263F3CA20], v42);
  LOBYTE(v42) = MEMORY[0x21D4B4280](v61);
  sub_21CA2B0D0((uint64_t)v61);
  if ((v42 & 1) != 0 && objc_msgSend(a1, sel_publishReason) == (id)8)
  {
    char v44 = 3;
  }
  else if (objc_msgSend(a1, sel_publishReason) == (id)7)
  {
    char v44 = 2;
  }
  else
  {
    char v44 = 1;
  }
  *(unsigned char *)(a2 + 33) = v44;
  *(unsigned char *)(a2 + v40[9]) = 0;
  *(unsigned char *)(a2 + v40[10]) = 0;
  uint64_t v45 = FMFLocation.debugDescription.getter();
  unint64_t v47 = v46;
  if (qword_267C94990 != -1) {
    swift_once();
  }
  uint64_t v48 = sub_21CB880A0();
  sub_21CA4CC18(v48, (uint64_t)qword_267CA5368);
  id v49 = a1;
  swift_bridgeObjectRetain();
  double v50 = sub_21CB88070();
  os_log_type_t v51 = sub_21CB88880();
  if (os_log_type_enabled(v50, v51))
  {
    id v59 = v41;
    uint64_t v52 = swift_slowAlloc();
    uint64_t v53 = swift_slowAlloc();
    v61[0] = v53;
    *(_DWORD *)uint64_t v52 = 136315394;
    swift_bridgeObjectRetain();
    uint64_t v60 = sub_21CA4E450(v45, v47, v61);
    sub_21CB889C0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v52 + 12) = 2080;
    id v54 = objc_msgSend(v49, sel_locationLabel);
    if (v54)
    {
      double v55 = v54;
      uint64_t v56 = sub_21CB882F0();
      unint64_t v58 = v57;
    }
    else
    {
      unint64_t v58 = 0xE300000000000000;
      uint64_t v56 = 7104878;
    }
    uint64_t v60 = sub_21CA4E450(v56, v58, v61);
    sub_21CB889C0();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_21CA00000, v50, v51, "👀 FMFLocation: created %s with secure label: '%s'", (uint8_t *)v52, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x21D4B6B70](v53, -1, -1);
    MEMORY[0x21D4B6B70](v52, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
}

void FMFLocation.init(from:location:locationSource:locationLabel:)(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, char *a4@<X3>, uint64_t a5@<X4>, void *a6@<X5>, uint64_t a7@<X8>)
{
  char v13 = *a4;
  double v14 = (int *)type metadata accessor for FMFLocation();
  uint64_t v15 = a7 + v14[8];
  uint64_t v16 = sub_21CB875D0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v15, 1, 1, v16);
  if (a6)
  {
    swift_bridgeObjectRetain();
    v17._countAndFlagsBits = a5;
    v17._object = a6;
    FMFDefaultLabel.init(rawValue:)(v17);
    if (__dst[0] == 5) {
      __int16 v18 = 259;
    }
    else {
      __int16 v18 = 3;
    }
  }
  else
  {
    a5 = 0;
    __int16 v18 = 0;
  }
  *(void *)a7 = a1;
  *(void *)(a7 + 8) = a2;
  sub_21CA76144(v30);
  sub_21CA26A4C((uint64_t)v30, (uint64_t)__src, &qword_267C951E0);
  __src[38] = a3;
  LOBYTE(__src[39]) = 0;
  __src[40] = a5;
  __src[41] = a6;
  LOWORD(__src[42]) = v18;
  __src[43] = 0;
  LOBYTE(__src[44]) = 0;
  memcpy(__dst, __src, 0x161uLL);
  nullsub_1(__dst, v19);
  sub_21CA26A4C((uint64_t)__dst, a7 + v14[11], &qword_267C951F0);
  *(unsigned char *)(a7 + 16) = 0;
  *(void *)(a7 + 24) = 0;
  *(unsigned char *)(a7 + 32) = 1;
  *(unsigned char *)(a7 + 33) = v13;
  *(unsigned char *)(a7 + v14[9]) = 0;
  *(unsigned char *)(a7 + v14[10]) = 0;
  id v20 = a3;
  uint64_t v21 = FMFLocation.debugDescription.getter();
  unint64_t v23 = v22;
  if (qword_267C94990 != -1) {
    swift_once();
  }
  uint64_t v24 = sub_21CB880A0();
  sub_21CA4CC18(v24, (uint64_t)qword_267CA5368);
  swift_bridgeObjectRetain();
  id v25 = sub_21CB88070();
  os_log_type_t v26 = sub_21CB88880();
  if (os_log_type_enabled(v25, v26))
  {
    id v27 = (uint8_t *)swift_slowAlloc();
    uint64_t v28 = swift_slowAlloc();
    uint64_t v29 = v28;
    *(_DWORD *)id v27 = 136315138;
    swift_bridgeObjectRetain();
    sub_21CA4E450(v21, v23, &v29);
    sub_21CB889C0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_21CA00000, v25, v26, "👀 FMFLocation: created %s'", v27, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x21D4B6B70](v28, -1, -1);
    MEMORY[0x21D4B6B70](v27, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
}

void sub_21CA916BC(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X2>, void *a4@<X3>, uint64_t a5@<X8>)
{
  char v9 = *a3;
  double v10 = (int *)type metadata accessor for FMFLocation();
  uint64_t v11 = a5 + v10[8];
  uint64_t v12 = sub_21CB875D0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 1, 1, v12);
  *(void *)a5 = a1;
  *(void *)(a5 + 8) = a2;
  if (a4)
  {
    sub_21CA76144(v26);
    sub_21CA26A4C((uint64_t)v26, (uint64_t)__src, &qword_267C951E0);
    __src[38] = a4;
    LOBYTE(__src[39]) = 0;
    __src[43] = 0;
    LOBYTE(__src[44]) = 0;
    memset(&__src[40], 0, 18);
    memcpy(__dst, __src, 0x161uLL);
    nullsub_1(__dst, v13);
  }
  else
  {
    sub_21CA8F350((uint64_t)__dst);
  }
  sub_21CA26A4C((uint64_t)__dst, a5 + v10[11], &qword_267C951F0);
  *(unsigned char *)(a5 + 16) = 0;
  *(void *)(a5 + 24) = 0;
  *(unsigned char *)(a5 + 32) = 1;
  *(unsigned char *)(a5 + 33) = v9;
  *(unsigned char *)(a5 + v10[9]) = 0;
  *(unsigned char *)(a5 + v10[10]) = 0;
  id v14 = a4;
  uint64_t v15 = FMFLocation.debugDescription.getter();
  unint64_t v17 = v16;
  if (qword_267C94990 != -1) {
    swift_once();
  }
  uint64_t v18 = sub_21CB880A0();
  sub_21CA4CC18(v18, (uint64_t)qword_267CA5368);
  id v19 = v14;
  swift_bridgeObjectRetain();
  id v20 = sub_21CB88070();
  os_log_type_t v21 = sub_21CB88880();
  if (os_log_type_enabled(v20, v21))
  {
    uint64_t v22 = swift_slowAlloc();
    uint64_t v23 = swift_slowAlloc();
    __dst[0] = v23;
    *(_DWORD *)uint64_t v22 = 136315394;
    swift_bridgeObjectRetain();
    __src[0] = sub_21CA4E450(v15, v17, __dst);
    sub_21CB889C0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v22 + 12) = 2080;
    __src[0] = a4;
    sub_21CA57E34(&qword_267C95638);
    uint64_t v24 = sub_21CB88990();
    __src[0] = sub_21CA4E450(v24, v25, __dst);
    sub_21CB889C0();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_21CA00000, v20, v21, "👀 FMFLocation: created %s with location: '%s'", (uint8_t *)v22, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x21D4B6B70](v23, -1, -1);
    MEMORY[0x21D4B6B70](v22, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
}

uint64_t FMFLocation.init(from:updatedLocation:address:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = (int *)type metadata accessor for FMFLocation();
  uint64_t v9 = MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  double v13 = (char *)&v39 - v12;
  sub_21CA26A4C(a3, (uint64_t)v55, &qword_267C951E0);
  *(void *)(a4 + 24) = 0;
  *(unsigned char *)(a4 + 32) = 1;
  uint64_t v14 = a4 + v8[8];
  uint64_t v15 = sub_21CB875D0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v14, 1, 1, v15);
  uint64_t v42 = a1;
  uint64_t v16 = *a1;
  uint64_t v17 = a1[1];
  uint64_t v18 = *(void *)(a2 + 8);
  if (!v17) {
    goto LABEL_7;
  }
  if (!v18 || (v16 != *(void *)a2 || v17 != v18) && (sub_21CB88F50() & 1) == 0)
  {
    do
    {
      sub_21CA81C54((uint64_t)v55, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_21CA1358C);
      sub_21CB88D00();
      __break(1u);
LABEL_7:
      ;
    }
    while (v18);
  }
  *(void *)a4 = v16;
  *(void *)(a4 + 8) = v17;
  *(unsigned char *)(a4 + 16) = *(unsigned char *)(a2 + 16);
  *(unsigned char *)(a4 + 33) = *(unsigned char *)(a2 + 33);
  sub_21CA26A4C(a2 + v8[11], (uint64_t)v53, &qword_267C951F0);
  sub_21CA26A4C((uint64_t)v53, (uint64_t)v54, &qword_267C951F0);
  if (sub_21CA7CDBC((uint64_t)v54) == 1)
  {
    swift_bridgeObjectRetain();
    sub_21CA81C54((uint64_t)v55, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_21CA1358C);
    sub_21CA26A4C((uint64_t)v53, a4 + v8[11], &qword_267C951F0);
  }
  else
  {
    id v19 = (void *)v54[38];
    sub_21CA26A4C((uint64_t)v53, (uint64_t)v49, &qword_267C951F0);
    uint64_t v41 = v49[40];
    uint64_t v20 = v49[41];
    int v40 = v50;
    uint64_t v21 = v51;
    sub_21CA2C9E8(a2, (uint64_t)v13);
    sub_21CA26A4C((uint64_t)v55, (uint64_t)v52, &qword_267C951E0);
    if (sub_21CA76890((uint64_t)v52) == 1)
    {
      double v39 = v19;
      sub_21CA26A4C((uint64_t)&v13[v8[11]], (uint64_t)v45, &qword_267C951F0);
      sub_21CA26A4C((uint64_t)v45, (uint64_t)v46, &qword_267C951F0);
      if (sub_21CA7CDBC((uint64_t)v46) == 1)
      {
        sub_21CA76144(v44);
        uint64_t v22 = v44;
      }
      else
      {
        sub_21CA81C54((uint64_t)v46, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_21CA5E3D0);
        uint64_t v22 = v46;
      }
      sub_21CA26A4C((uint64_t)v22, (uint64_t)v48, &qword_267C951E0);
      id v19 = v39;
    }
    else
    {
      sub_21CA26A4C((uint64_t)v55, (uint64_t)v48, &qword_267C951E0);
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v23 = v19;
    swift_bridgeObjectRetain();
    sub_21CA2CA4C((uint64_t)v13);
    sub_21CA26A4C((uint64_t)v42 + v8[11], (uint64_t)v45, &qword_267C951F0);
    sub_21CA26A4C((uint64_t)v45, (uint64_t)v46, &qword_267C951F0);
    BOOL v24 = sub_21CA7CDBC((uint64_t)v46) != 1;
    char v25 = v24 & v47;
    sub_21CA26A4C((uint64_t)v48, (uint64_t)v43, &qword_267C951E0);
    v43[38] = v23;
    LOBYTE(v43[39]) = 0;
    v43[40] = v41;
    v43[41] = v20;
    LOWORD(v43[42]) = v40;
    v43[43] = v21;
    LOBYTE(v43[44]) = v25;
    memcpy(v44, v43, 0x161uLL);
    nullsub_1(v44, v26);
    sub_21CA26A4C((uint64_t)v44, a4 + v8[11], &qword_267C951F0);
    char v27 = *(unsigned char *)(a2 + 32);
    *(void *)(a4 + 24) = *(void *)(a2 + 24);
    *(unsigned char *)(a4 + 32) = v27;
  }
  *(unsigned char *)(a4 + v8[9]) = *(unsigned char *)(a2 + v8[9]);
  *(unsigned char *)(a4 + v8[10]) = *(unsigned char *)(a2 + v8[10]);
  uint64_t v28 = FMFLocation.debugDescription.getter();
  unint64_t v30 = v29;
  if (qword_267C94990 != -1) {
    swift_once();
  }
  uint64_t v31 = sub_21CB880A0();
  sub_21CA4CC18(v31, (uint64_t)qword_267CA5368);
  sub_21CA2C9E8(a2, (uint64_t)v11);
  swift_bridgeObjectRetain();
  uint64_t v32 = sub_21CB88070();
  os_log_type_t v33 = sub_21CB88880();
  if (os_log_type_enabled(v32, v33))
  {
    uint64_t v34 = swift_slowAlloc();
    uint64_t v35 = swift_slowAlloc();
    v49[0] = v35;
    *(_DWORD *)uint64_t v34 = 136315394;
    swift_bridgeObjectRetain();
    v46[0] = sub_21CA4E450(v28, v30, v49);
    sub_21CB889C0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v34 + 12) = 2080;
    uint64_t v36 = FMFLocation.debugDescription.getter();
    v46[0] = sub_21CA4E450(v36, v37, v49);
    sub_21CB889C0();
    swift_bridgeObjectRelease();
    sub_21CA2CA4C((uint64_t)v11);
    _os_log_impl(&dword_21CA00000, v32, v33, "👀 FMFLocation: updated %sfrom %s", (uint8_t *)v34, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x21D4B6B70](v35, -1, -1);
    MEMORY[0x21D4B6B70](v34, -1, -1);
  }
  else
  {

    sub_21CA2CA4C((uint64_t)v11);
    swift_bridgeObjectRelease_n();
  }
  sub_21CA2CA4C(a2);
  return sub_21CA2CA4C((uint64_t)v42);
}

uint64_t FMFLocation.encode(to:)(void *a1)
{
  unint64_t v3 = v1;
  uint64_t v5 = sub_21CA57E34(&qword_267C955E8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_21CA2B2CC(a1, a1[3]);
  sub_21CA2B7C0();
  sub_21CB890C0();
  *(_OWORD *)&v12[360] = *v3;
  v12[407] = 0;
  sub_21CA57E34((uint64_t *)&unk_267C95220);
  sub_21CA22404();
  sub_21CB88EB0();
  if (!v2)
  {
    uint64_t v9 = type metadata accessor for FMFLocation();
    sub_21CA26A4C((uint64_t)v3 + *(int *)(v9 + 44), (uint64_t)v12, &qword_267C951F0);
    sub_21CA26A4C((uint64_t)v12, (uint64_t)v11, &qword_267C951F0);
    v12[406] = 1;
    sub_21CA57E34(&qword_267C951F0);
    sub_21CA9224C();
    sub_21CB88EB0();
    v11[0] = 3;
    sub_21CB88EA0();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_21CA92230(void *a1)
{
  return FMFLocation.encode(to:)(a1);
}

unint64_t sub_21CA9224C()
{
  unint64_t result = qword_267C955F0;
  if (!qword_267C955F0)
  {
    sub_21CA5EEBC(&qword_267C951F0);
    sub_21CA922C0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C955F0);
  }
  return result;
}

unint64_t sub_21CA922C0()
{
  unint64_t result = qword_267C955F8;
  if (!qword_267C955F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C955F8);
  }
  return result;
}

unint64_t sub_21CA92318()
{
  unint64_t result = qword_267C95600;
  if (!qword_267C95600)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C95600);
  }
  return result;
}

uint64_t assignWithCopy for FMFLocation(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 24) = v6;
  *(unsigned char *)(a1 + 33) = *(unsigned char *)(a2 + 33);
  uint64_t v7 = a3[8];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = sub_21CB875D0();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
LABEL_6:
    uint64_t v15 = sub_21CA57E34(&qword_267C96F00);
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 24))(v8, v9, v10);
LABEL_7:
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  *(unsigned char *)(a1 + a3[10]) = *(unsigned char *)(a2 + a3[10]);
  uint64_t v16 = a3[11];
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  uint64_t v19 = *(void *)(a1 + v16 + 304);
  uint64_t v20 = *(void *)(v18 + 304);
  if (v19)
  {
    if (v20)
    {
      uint64_t v21 = *(void *)(v18 + 168);
      if (*(void *)(v17 + 168))
      {
        if (v21)
        {
          *(void *)uint64_t v17 = *(void *)v18;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(void *)(v17 + 8) = *(void *)(v18 + 8);
          *(void *)(v17 + 16) = *(void *)(v18 + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(void *)(v17 + 24) = *(void *)(v18 + 24);
          *(void *)(v17 + 32) = *(void *)(v18 + 32);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(void *)(v17 + 40) = *(void *)(v18 + 40);
          *(void *)(v17 + 48) = *(void *)(v18 + 48);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(void *)(v17 + 56) = *(void *)(v18 + 56);
          *(void *)(v17 + 64) = *(void *)(v18 + 64);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(void *)(v17 + 72) = *(void *)(v18 + 72);
          *(void *)(v17 + 80) = *(void *)(v18 + 80);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(void *)(v17 + 88) = *(void *)(v18 + 88);
          *(void *)(v17 + 96) = *(void *)(v18 + 96);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(void *)(v17 + 104) = *(void *)(v18 + 104);
          *(void *)(v17 + 112) = *(void *)(v18 + 112);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(void *)(v17 + 120) = *(void *)(v18 + 120);
          *(void *)(v17 + 128) = *(void *)(v18 + 128);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(void *)(v17 + 136) = *(void *)(v18 + 136);
          *(void *)(v17 + 144) = *(void *)(v18 + 144);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(void *)(v17 + 152) = *(void *)(v18 + 152);
          *(void *)(v17 + 160) = *(void *)(v18 + 160);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(void *)(v17 + 168) = *(void *)(v18 + 168);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(void *)(v17 + 176) = *(void *)(v18 + 176);
          *(void *)(v17 + 184) = *(void *)(v18 + 184);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(void *)(v17 + 192) = *(void *)(v18 + 192);
          *(void *)(v17 + 200) = *(void *)(v18 + 200);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(void *)(v17 + 208) = *(void *)(v18 + 208);
          *(void *)(v17 + 216) = *(void *)(v18 + 216);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(void *)(v17 + 224) = *(void *)(v18 + 224);
          *(void *)(v17 + 232) = *(void *)(v18 + 232);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(void *)(v17 + 240) = *(void *)(v18 + 240);
          *(void *)(v17 + 248) = *(void *)(v18 + 248);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(void *)(v17 + 256) = *(void *)(v18 + 256);
          *(void *)(v17 + 264) = *(void *)(v18 + 264);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(void *)(v17 + 272) = *(void *)(v18 + 272);
          *(void *)(v17 + 280) = *(void *)(v18 + 280);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(void *)(v17 + 288) = *(void *)(v18 + 288);
          *(void *)(v17 + 296) = *(void *)(v18 + 296);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
LABEL_22:
          uint64_t v22 = *(void **)(v18 + 304);
          id v23 = *(void **)(v17 + 304);
          *(void *)(v17 + 304) = v22;
          id v24 = v22;

          *(unsigned char *)(v17 + 312) = *(unsigned char *)(v18 + 312);
          *(void *)(v17 + 320) = *(void *)(v18 + 320);
          *(void *)(v17 + 328) = *(void *)(v18 + 328);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(unsigned char *)(v17 + 336) = *(unsigned char *)(v18 + 336);
          *(unsigned char *)(v17 + 337) = *(unsigned char *)(v18 + 337);
          *(void *)(v17 + 344) = *(void *)(v18 + 344);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(unsigned char *)(v17 + 352) = *(unsigned char *)(v18 + 352);
          return a1;
        }
        sub_21CA757AC(v17);
      }
      else if (v21)
      {
        *(void *)uint64_t v17 = *(void *)v18;
        *(void *)(v17 + 8) = *(void *)(v18 + 8);
        *(void *)(v17 + 16) = *(void *)(v18 + 16);
        *(void *)(v17 + 24) = *(void *)(v18 + 24);
        *(void *)(v17 + 32) = *(void *)(v18 + 32);
        *(void *)(v17 + 40) = *(void *)(v18 + 40);
        *(void *)(v17 + 48) = *(void *)(v18 + 48);
        *(void *)(v17 + 56) = *(void *)(v18 + 56);
        *(void *)(v17 + 64) = *(void *)(v18 + 64);
        *(void *)(v17 + 72) = *(void *)(v18 + 72);
        *(void *)(v17 + 80) = *(void *)(v18 + 80);
        *(void *)(v17 + 88) = *(void *)(v18 + 88);
        *(void *)(v17 + 96) = *(void *)(v18 + 96);
        *(void *)(v17 + 104) = *(void *)(v18 + 104);
        *(void *)(v17 + 112) = *(void *)(v18 + 112);
        *(void *)(v17 + 120) = *(void *)(v18 + 120);
        *(void *)(v17 + 128) = *(void *)(v18 + 128);
        *(void *)(v17 + 136) = *(void *)(v18 + 136);
        *(void *)(v17 + 144) = *(void *)(v18 + 144);
        *(void *)(v17 + 152) = *(void *)(v18 + 152);
        *(void *)(v17 + 160) = *(void *)(v18 + 160);
        *(void *)(v17 + 168) = *(void *)(v18 + 168);
        *(void *)(v17 + 176) = *(void *)(v18 + 176);
        *(void *)(v17 + 184) = *(void *)(v18 + 184);
        *(void *)(v17 + 192) = *(void *)(v18 + 192);
        *(void *)(v17 + 200) = *(void *)(v18 + 200);
        *(void *)(v17 + 208) = *(void *)(v18 + 208);
        *(void *)(v17 + 216) = *(void *)(v18 + 216);
        *(void *)(v17 + 224) = *(void *)(v18 + 224);
        *(void *)(v17 + 232) = *(void *)(v18 + 232);
        *(void *)(v17 + 240) = *(void *)(v18 + 240);
        *(void *)(v17 + 248) = *(void *)(v18 + 248);
        *(void *)(v17 + 256) = *(void *)(v18 + 256);
        *(void *)(v17 + 264) = *(void *)(v18 + 264);
        *(void *)(v17 + 272) = *(void *)(v18 + 272);
        *(void *)(v17 + 280) = *(void *)(v18 + 280);
        *(void *)(v17 + 288) = *(void *)(v18 + 288);
        *(void *)(v17 + 296) = *(void *)(v18 + 296);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_22;
      }
      memcpy((void *)v17, (const void *)v18, 0x130uLL);
      goto LABEL_22;
    }
    sub_21CA92D04(v17);
    goto LABEL_16;
  }
  if (!v20)
  {
LABEL_16:
    memcpy((void *)v17, (const void *)v18, 0x161uLL);
    return a1;
  }
  if (*(void *)(v18 + 168))
  {
    *(void *)uint64_t v17 = *(void *)v18;
    *(void *)(v17 + 8) = *(void *)(v18 + 8);
    *(void *)(v17 + 16) = *(void *)(v18 + 16);
    *(void *)(v17 + 24) = *(void *)(v18 + 24);
    *(void *)(v17 + 32) = *(void *)(v18 + 32);
    *(void *)(v17 + 40) = *(void *)(v18 + 40);
    *(void *)(v17 + 48) = *(void *)(v18 + 48);
    *(void *)(v17 + 56) = *(void *)(v18 + 56);
    *(void *)(v17 + 64) = *(void *)(v18 + 64);
    *(void *)(v17 + 72) = *(void *)(v18 + 72);
    *(void *)(v17 + 80) = *(void *)(v18 + 80);
    *(void *)(v17 + 88) = *(void *)(v18 + 88);
    *(void *)(v17 + 96) = *(void *)(v18 + 96);
    *(void *)(v17 + 104) = *(void *)(v18 + 104);
    *(void *)(v17 + 112) = *(void *)(v18 + 112);
    *(void *)(v17 + 120) = *(void *)(v18 + 120);
    *(void *)(v17 + 128) = *(void *)(v18 + 128);
    *(void *)(v17 + 136) = *(void *)(v18 + 136);
    *(void *)(v17 + 144) = *(void *)(v18 + 144);
    *(void *)(v17 + 152) = *(void *)(v18 + 152);
    *(void *)(v17 + 160) = *(void *)(v18 + 160);
    *(void *)(v17 + 168) = *(void *)(v18 + 168);
    *(void *)(v17 + 176) = *(void *)(v18 + 176);
    *(void *)(v17 + 184) = *(void *)(v18 + 184);
    *(void *)(v17 + 192) = *(void *)(v18 + 192);
    *(void *)(v17 + 200) = *(void *)(v18 + 200);
    *(void *)(v17 + 208) = *(void *)(v18 + 208);
    *(void *)(v17 + 216) = *(void *)(v18 + 216);
    *(void *)(v17 + 224) = *(void *)(v18 + 224);
    *(void *)(v17 + 232) = *(void *)(v18 + 232);
    *(void *)(v17 + 240) = *(void *)(v18 + 240);
    *(void *)(v17 + 248) = *(void *)(v18 + 248);
    *(void *)(v17 + 256) = *(void *)(v18 + 256);
    *(void *)(v17 + 264) = *(void *)(v18 + 264);
    *(void *)(v17 + 272) = *(void *)(v18 + 272);
    *(void *)(v17 + 280) = *(void *)(v18 + 280);
    *(void *)(v17 + 288) = *(void *)(v18 + 288);
    *(void *)(v17 + 296) = *(void *)(v18 + 296);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    memcpy((void *)v17, (const void *)v18, 0x130uLL);
  }
  char v25 = *(void **)(v18 + 304);
  *(void *)(v17 + 304) = v25;
  *(unsigned char *)(v17 + 312) = *(unsigned char *)(v18 + 312);
  *(void *)(v17 + 320) = *(void *)(v18 + 320);
  *(void *)(v17 + 328) = *(void *)(v18 + 328);
  *(unsigned char *)(v17 + 336) = *(unsigned char *)(v18 + 336);
  *(unsigned char *)(v17 + 337) = *(unsigned char *)(v18 + 337);
  *(void *)(v17 + 344) = *(void *)(v18 + 344);
  *(unsigned char *)(v17 + 352) = *(unsigned char *)(v18 + 352);
  id v26 = v25;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_21CA92D04(uint64_t a1)
{
  return a1;
}

uint64_t initializeWithTake for FMFLocation(uint64_t a1, uint64_t a2, int *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  uint64_t v6 = a3[8];
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (const void *)(a2 + v6);
  uint64_t v9 = sub_21CB875D0();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    uint64_t v11 = sub_21CA57E34(&qword_267C96F00);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v12 = a3[10];
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  *(unsigned char *)(a1 + v12) = *(unsigned char *)(a2 + v12);
  memcpy((void *)(a1 + a3[11]), (const void *)(a2 + a3[11]), 0x161uLL);
  return a1;
}

uint64_t sub_21CA92EBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 2147483646)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  else
  {
    uint64_t v9 = sub_21CA57E34(&qword_267C96F00);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48);
    uint64_t v11 = v9;
    uint64_t v12 = a1 + *(int *)(a3 + 32);
    return v10(v12, a2, v11);
  }
}

uint64_t sub_21CA92F7C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 2147483646)
  {
    *(void *)(result + 8) = a2;
  }
  else
  {
    uint64_t v7 = sub_21CA57E34(&qword_267C96F00);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 32);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

unint64_t sub_21CA93054()
{
  unint64_t result = qword_267C95620;
  if (!qword_267C95620)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C95620);
  }
  return result;
}

uint64_t sub_21CA930A8()
{
  unint64_t v0 = sub_21CB88D70();
  swift_bridgeObjectRelease();
  if (v0 >= 4) {
    return 4;
  }
  else {
    return v0;
  }
}

unint64_t sub_21CA930F4()
{
  unint64_t result = qword_267C94E20;
  if (!qword_267C94E20)
  {
    sub_21CB87190();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C94E20);
  }
  return result;
}

uint64_t sub_21CA9314C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 376);
  uint64_t v29 = *(void *)(a1 + 368);
  uint64_t v30 = *(void *)(a1 + 360);
  uint64_t v3 = *(void *)(a1 + 384);
  uint64_t v4 = *(void *)(a1 + 392);
  uint64_t v5 = *(void *)(a1 + 400);
  uint64_t v6 = *(void *)(a1 + 408);
  uint64_t v7 = *(void *)(a1 + 416);
  long long v27 = *(_OWORD *)(a1 + 440);
  long long v28 = *(_OWORD *)(a1 + 424);
  long long v25 = *(_OWORD *)(a1 + 472);
  long long v26 = *(_OWORD *)(a1 + 456);
  long long v23 = *(_OWORD *)(a1 + 504);
  long long v24 = *(_OWORD *)(a1 + 488);
  long long v21 = *(_OWORD *)(a1 + 536);
  long long v22 = *(_OWORD *)(a1 + 520);
  long long v20 = *(_OWORD *)(a1 + 552);
  long long v18 = *(_OWORD *)(a1 + 584);
  long long v19 = *(_OWORD *)(a1 + 568);
  long long v16 = *(_OWORD *)(a1 + 616);
  long long v17 = *(_OWORD *)(a1 + 600);
  long long v14 = *(_OWORD *)(a1 + 648);
  long long v15 = *(_OWORD *)(a1 + 632);
  long long v13 = *(_OWORD *)(a1 + 664);
  long long v11 = *(_OWORD *)(a1 + 272);
  long long v12 = *(_OWORD *)(a1 + 288);
  long long v9 = *(_OWORD *)(a1 + 240);
  long long v10 = *(_OWORD *)(a1 + 256);
  sub_21CA2CAA8(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
    *(void *)(a1 + 152),
    *(void *)(a1 + 160),
    *(void *)(a1 + 168),
    *(void *)(a1 + 176),
    *(void *)(a1 + 184),
    *(void *)(a1 + 192),
    *(void *)(a1 + 200),
    *(void *)(a1 + 208),
    *(void *)(a1 + 216),
    *(void *)(a1 + 224),
    *(void *)(a1 + 232),
    v9,
    *((uint64_t *)&v9 + 1),
    v10,
    *((uint64_t *)&v10 + 1),
    v11,
    *((uint64_t *)&v11 + 1),
    v12,
    *((uint64_t *)&v12 + 1),
    *(void **)(a1 + 304));
  sub_21CA2CAA8(v30, v29, v2, v3, v4, v5, v6, v7, v28, *((uint64_t *)&v28 + 1), v27, *((uint64_t *)&v27 + 1), v26, *((uint64_t *)&v26 + 1), v25, *((uint64_t *)&v25 + 1), v24, *((uint64_t *)&v24 + 1), v23,
    *((uint64_t *)&v23 + 1),
    v22,
    *((uint64_t *)&v22 + 1),
    v21,
    *((uint64_t *)&v21 + 1),
    v20,
    *((uint64_t *)&v20 + 1),
    v19,
    *((uint64_t *)&v19 + 1),
    v18,
    *((uint64_t *)&v18 + 1),
    v17,
    *((uint64_t *)&v17 + 1),
    v16,
    *((uint64_t *)&v16 + 1),
    v15,
    *((uint64_t *)&v15 + 1),
    v14,
    *((uint64_t *)&v14 + 1),
    (void *)v13);
  return a1;
}

uint64_t sub_21CA93348(uint64_t a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))
{
  char v11 = *(unsigned char *)(a1 + 352);
  long long v9 = *(_OWORD *)(a1 + 304);
  long long v10 = *(_OWORD *)(a1 + 320);
  long long v7 = *(_OWORD *)(a1 + 272);
  long long v8 = *(_OWORD *)(a1 + 288);
  long long v5 = *(_OWORD *)(a1 + 240);
  long long v6 = *(_OWORD *)(a1 + 256);
  long long v4 = *(_OWORD *)(a1 + 208);
  a2(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
    *(void *)(a1 + 152),
    *(void *)(a1 + 160),
    *(void *)(a1 + 168),
    *(void *)(a1 + 176),
    *(void *)(a1 + 184),
    *(void *)(a1 + 192),
    *(void *)(a1 + 200),
    v4,
    *((void *)&v4 + 1),
    *(void *)(a1 + 224),
    *(void *)(a1 + 232),
    v5,
    *((void *)&v5 + 1),
    v6,
    *((void *)&v6 + 1),
    v7,
    *((void *)&v7 + 1),
    v8,
    *((void *)&v8 + 1),
    v9,
    *((void *)&v9 + 1),
    v10,
    *((void *)&v10 + 1),
    *(void *)(a1 + 336),
    *(void *)(a1 + 344),
    v11);
  return a1;
}

uint64_t FMFLocationAlert.location.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_21CA57E34((uint64_t *)&unk_267C951B0);
  MEMORY[0x270FA5388](v4 - 8);
  long long v6 = &v26[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = sub_21CB87590();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  long long v10 = &v26[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  CLLocationCoordinate2D v11 = CLLocationCoordinate2DMake(v2[2], v2[3]);
  double v12 = v2[4];
  long long v13 = (int *)type metadata accessor for FMFLocationAlert();
  sub_21CA24E80((uint64_t)v2 + v13[26], (uint64_t)v6, (uint64_t *)&unk_267C951B0);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_21CB874F0();
    sub_21CA1B88C((uint64_t)v6, (uint64_t *)&unk_267C951B0);
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v8 + 32))(v10, v6, v7);
  }
  id v14 = objc_allocWithZone(MEMORY[0x263F00A50]);
  long long v15 = (void *)sub_21CB87510();
  id v16 = objc_msgSend(v14, sel_initWithCoordinate_altitude_horizontalAccuracy_verticalAccuracy_course_speed_timestamp_, v15, v11.latitude, v11.longitude, 0.0, v12, 0.0, 0.0, 0.0);

  (*(void (**)(unsigned char *, uint64_t))(v8 + 8))(v10, v7);
  sub_21CA26A4C((uint64_t)v2 + v13[23], (uint64_t)v26, &qword_267C951E0);
  long long v17 = (char *)v2 + v13[20];
  uint64_t v19 = *(void *)v17;
  uint64_t v18 = *((void *)v17 + 1);
  __int16 v20 = *((_WORD *)v17 + 8);
  *(void *)(a1 + 24) = 0;
  *(unsigned char *)(a1 + 32) = 1;
  long long v21 = (int *)type metadata accessor for FMFLocation();
  uint64_t v22 = a1 + v21[8];
  uint64_t v23 = sub_21CB875D0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v22, 1, 1, v23);
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 0;
  sub_21CA26A4C((uint64_t)v26, (uint64_t)v27, &qword_267C951E0);
  v27[38] = v16;
  LOBYTE(v27[39]) = 0;
  v27[40] = v19;
  v27[41] = v18;
  LOWORD(v27[42]) = v20;
  v27[43] = 0;
  LOBYTE(v27[44]) = 0;
  memcpy(v28, v27, 0x161uLL);
  nullsub_1(v28, v24);
  sub_21CA26A4C((uint64_t)v28, a1 + v21[11], &qword_267C951F0);
  *(unsigned char *)(a1 + 33) = 0;
  *(unsigned char *)(a1 + v21[9]) = 0;
  *(unsigned char *)(a1 + v21[10]) = 0;
  (*(void (**)(uint64_t, void, uint64_t, int *))(*((void *)v21 - 1) + 56))(a1, 0, 1, v21);
  sub_21CA81C54((uint64_t)v26, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_21CA5E3D0);
  return swift_bridgeObjectRetain();
}

uint64_t FMFLocationAlertTarget.rawValue.getter()
{
  if (*v0) {
    return 0x744F796669746F4ELL;
  }
  else {
    return 0x654D796669746F4ELL;
  }
}

uint64_t FMFLocationAlertTriggerType.rawValue.getter()
{
  uint64_t result = 0x7265746E65;
  switch(*v0)
  {
    case 1:
      uint64_t result = 1953069157;
      break;
    case 2:
      uint64_t result = 0x74616964656D6D69;
      break;
    case 3:
      uint64_t result = 0x656C756465686373;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t FMFLocationAlertAddressType.rawValue.getter()
{
  return *v0;
}

uint64_t FMFLocationAlertAcceptanceStatus.rawValue.getter()
{
  uint64_t v1 = 0x676E69646E6550;
  if (*v0 != 1) {
    uint64_t v1 = 0x6465747065636341;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6E6564646948;
  }
}

uint64_t FMFLocationAlert.init(locationAlert:location:radius:address:label:triggerType:isOn:repeating:schedule:phoneNumbers:emails:ckRecordName:ckRecordZoneOwnerName:acceptanceStatus:muteEndDate:)@<X0>(unsigned __int8 *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, void *a7@<X6>, unsigned __int8 *a8@<X7>, uint64_t a9@<X8>, char a10, unsigned __int8 a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, unsigned __int8 *a19, uint64_t a20)
{
  uint64_t v140 = a8;
  uint64_t v135 = a3;
  uint64_t v136 = a7;
  uint64_t v120 = a6;
  uint64_t v127 = a5;
  int v134 = a4;
  id v137 = a2;
  uint64_t v139 = a12;
  int v124 = a11;
  uint64_t v22 = sub_21CA57E34((uint64_t *)&unk_267C951B0);
  uint64_t v23 = MEMORY[0x270FA5388](v22 - 8);
  uint64_t v132 = (char *)&v120 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v23);
  uint64_t v123 = (uint64_t)&v120 - v25;
  uint64_t v26 = sub_21CA57E34((uint64_t *)&unk_267C96ED0);
  uint64_t v27 = MEMORY[0x270FA5388](v26 - 8);
  uint64_t v29 = (char *)&v120 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v27);
  char v122 = (char *)&v120 - v30;
  uint64_t v31 = (int *)type metadata accessor for FMFLocationAlert();
  uint64_t v32 = MEMORY[0x270FA5388](v31);
  uint64_t v133 = (uint64_t)&v120 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = MEMORY[0x270FA5388](v32);
  uint64_t v131 = (char *)&v120 - v35;
  uint64_t v36 = MEMORY[0x270FA5388](v34);
  uint64_t v130 = (uint64_t)&v120 - v37;
  uint64_t v38 = MEMORY[0x270FA5388](v36);
  uint64_t v129 = (uint64_t)&v120 - v39;
  uint64_t v40 = MEMORY[0x270FA5388](v38);
  uint64_t v128 = (uint64_t)&v120 - v41;
  uint64_t v42 = MEMORY[0x270FA5388](v40);
  uint64_t v138 = (uint64_t)&v120 - v43;
  uint64_t v44 = MEMORY[0x270FA5388](v42);
  uint64_t v126 = (uint64_t)&v120 - v45;
  uint64_t v46 = MEMORY[0x270FA5388](v44);
  uint64_t v125 = (uint64_t)&v120 - v47;
  uint64_t v48 = MEMORY[0x270FA5388](v46);
  unsigned __int16 v50 = (char *)&v120 - v49;
  uint64_t v51 = MEMORY[0x270FA5388](v48);
  uint64_t v53 = (char *)&v120 - v52;
  MEMORY[0x270FA5388](v51);
  double v55 = (char *)&v120 - v54;
  sub_21CA26A4C(v127, (uint64_t)v143, &qword_267C951E0);
  int v121 = *v140;
  LODWORD(v127) = *a19;
  uint64_t v56 = *((void *)a1 + 1);
  *(void *)a9 = *(void *)a1;
  *(void *)(a9 + 8) = v56;
  uint64_t v140 = a1;
  sub_21CA7E0A0((uint64_t)a1, (uint64_t)v55);
  if (a10 == 2) {
    char v57 = v55[42];
  }
  else {
    char v57 = a10 & 1;
  }
  uint64_t v58 = (uint64_t)v122;
  swift_bridgeObjectRetain();
  sub_21CA9E4B4((uint64_t)v55, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
  *(unsigned char *)(a9 + 42) = v57;
  sub_21CA7E0A0((uint64_t)v140, (uint64_t)v53);
  if (v124 == 2) {
    char v59 = v53[43];
  }
  else {
    char v59 = v124 & 1;
  }
  sub_21CA9E4B4((uint64_t)v53, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
  *(unsigned char *)(a9 + 43) = v59;
  sub_21CA24E80(v139, (uint64_t)v29, (uint64_t *)&unk_267C96ED0);
  uint64_t v60 = v140;
  sub_21CA7E0A0((uint64_t)v140, (uint64_t)v50);
  uint64_t v61 = type metadata accessor for FMFSchedule();
  uint64_t v62 = *(void *)(v61 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v62 + 48))(v29, 1, v61) == 1)
  {
    sub_21CA24E80((uint64_t)&v50[v31[12]], v58, (uint64_t *)&unk_267C96ED0);
    sub_21CA9E4B4((uint64_t)v50, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
    sub_21CA1B88C((uint64_t)v29, (uint64_t *)&unk_267C96ED0);
  }
  else
  {
    sub_21CA9E4B4((uint64_t)v50, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
    sub_21CA996FC((uint64_t)v29, v58);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v62 + 56))(v58, 0, 1, v61);
  }
  int v63 = v121;
  uint64_t v65 = a16;
  sub_21CA26A4C(v58, a9 + v31[12], (uint64_t *)&unk_267C96ED0);
  *(unsigned char *)(a9 + 40) = v60[40];
  uint64_t v66 = v125;
  sub_21CA7E0A0((uint64_t)v60, v125);
  if (v63 == 4) {
    LOBYTE(v63) = *(unsigned char *)(v66 + 41);
  }
  uint64_t v67 = a18;
  sub_21CA9E4B4(v66, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
  *(unsigned char *)(a9 + 41) = v63;
  uint64_t v69 = v126;
  sub_21CA7E0A0((uint64_t)v60, v126);
  if (!a16)
  {
    uint64_t v70 = (uint64_t *)(v69 + v31[13]);
    a15 = *v70;
    uint64_t v65 = v70[1];
    swift_bridgeObjectRetain();
  }
  sub_21CA9E4B4(v69, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
  uint64_t v71 = (void *)(a9 + v31[13]);
  *uint64_t v71 = a15;
  v71[1] = v65;
  uint64_t v72 = v138;
  sub_21CA7E0A0((uint64_t)v60, v138);
  if (!a18)
  {
    uint64_t v73 = (uint64_t *)(v72 + v31[14]);
    a17 = *v73;
    uint64_t v67 = v73[1];
    swift_bridgeObjectRetain();
  }
  uint64_t v74 = a13;
  sub_21CA9E4B4(v72, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
  int v75 = (void *)(a9 + v31[14]);
  *int v75 = a17;
  v75[1] = v67;
  uint64_t v76 = v128;
  sub_21CA7E0A0((uint64_t)v60, v128);
  char v77 = v127;
  uint64_t v78 = (uint64_t)v131;
  if (v127 == 3) {
    char v77 = *(unsigned char *)(v76 + v31[15]);
  }
  uint64_t v138 = a20;
  uint64_t v79 = a14;
  sub_21CA9E4B4(v76, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
  *(unsigned char *)(a9 + v31[15]) = v77;
  uint64_t v80 = v129;
  sub_21CA7E0A0((uint64_t)v60, v129);
  uint64_t v81 = (uint64_t)v132;
  if (!a13)
  {
    uint64_t v74 = *(void *)(v80 + v31[16]);
    swift_bridgeObjectRetain();
  }
  sub_21CA9E4B4(v80, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
  *(void *)(a9 + v31[16]) = v74;
  uint64_t v82 = v130;
  sub_21CA7E0A0((uint64_t)v60, v130);
  if (!a14)
  {
    uint64_t v79 = *(void *)(v82 + v31[17]);
    swift_bridgeObjectRetain();
  }
  sub_21CA9E4B4(v82, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
  *(void *)(a9 + v31[17]) = v79;
  *(void *)(a9 + v31[18]) = *(void *)&v60[v31[18]];
  uint64_t v83 = v31[19];
  uint64_t v84 = (uint64_t)v60;
  uint64_t v85 = *(void *)&v60[v83];
  uint64_t v86 = *(void *)&v60[v83 + 8];
  uint64_t v87 = (void *)(a9 + v83);
  *uint64_t v87 = v85;
  v87[1] = v86;
  sub_21CA24E80(v138, v81, (uint64_t *)&unk_267C951B0);
  sub_21CA7E0A0(v84, v78);
  uint64_t v88 = sub_21CB87590();
  uint64_t v89 = *(void *)(v88 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v89 + 48))(v81, 1, v88) == 1)
  {
    uint64_t v90 = v123;
    sub_21CA24E80(v78 + v31[27], v123, (uint64_t *)&unk_267C951B0);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_21CA9E4B4(v78, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
    sub_21CA1B88C(v81, (uint64_t *)&unk_267C951B0);
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_21CA9E4B4(v78, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
    uint64_t v90 = v123;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v89 + 32))(v123, v81, v88);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v89 + 56))(v90, 0, 1, v88);
  }
  id v91 = v137;
  uint64_t v92 = v140;
  sub_21CA26A4C(v90, a9 + v31[27], (uint64_t *)&unk_267C951B0);
  if (v91)
  {
    id v93 = v91;
    objc_msgSend(v93, sel_coordinate);
    *(void *)(a9 + 16) = v94;
    objc_msgSend(v93, sel_coordinate);
    *(void *)(a9 + 24) = v95;
    uint64_t v96 = a9 + v31[26];
    id v97 = objc_msgSend(v93, sel_timestamp);
    sub_21CB87560();

    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v89 + 56))(v96, 0, 1, v88);
  }
  else
  {
    *(_OWORD *)(a9 + 16) = *((_OWORD *)v92 + 1);
    sub_21CA24E80((uint64_t)&v92[v31[26]], a9 + v31[26], (uint64_t *)&unk_267C951B0);
  }
  uint64_t v98 = v135;
  uint64_t v99 = v136;
  uint64_t v100 = v133;
  sub_21CA7E0A0((uint64_t)v92, v133);
  if (v134) {
    uint64_t v98 = *(void *)(v100 + 32);
  }
  sub_21CA9E4B4(v100, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
  *(void *)(a9 + 32) = v98;
  sub_21CA26A4C((uint64_t)v143, (uint64_t)v142, &qword_267C951E0);
  if (sub_21CA76890((uint64_t)v142) != 1)
  {
    sub_21CA26A4C((uint64_t)v143, a9 + v31[23], &qword_267C951E0);
    memcpy(v141, v142, sizeof(v141));
    uint64_t v110 = FMFAddress.displayAddress.getter();
    double v111 = (uint64_t *)(a9 + v31[22]);
    *double v111 = v110;
    v111[1] = v112;
    if (v99) {
      goto LABEL_32;
    }
LABEL_35:

    sub_21CA1B88C(v138, (uint64_t *)&unk_267C951B0);
    sub_21CA1B88C(v139, (uint64_t *)&unk_267C96ED0);
    uint64_t v113 = v31[20];
    uint64_t v115 = *(void *)&v92[v113];
    uint64_t v114 = *(void *)&v92[v113 + 8];
    __int16 v116 = *(_WORD *)&v92[v113 + 16];
    uint64_t v117 = a9 + v113;
    *(void *)uint64_t v117 = v115;
    *(void *)(v117 + 8) = v114;
    *(_WORD *)(v117 + 16) = v116;
    swift_bridgeObjectRetain();
    goto LABEL_38;
  }
  sub_21CA26A4C((uint64_t)&v92[v31[23]], (uint64_t)v141, &qword_267C951E0);
  sub_21CA26A4C((uint64_t)v141, a9 + v31[23], &qword_267C951E0);
  uint64_t v101 = v31[22];
  uint64_t v102 = *(void *)&v92[v101];
  uint64_t v103 = *(void *)&v92[v101 + 8];
  uint64_t v104 = (void *)(a9 + v101);
  *uint64_t v104 = v102;
  v104[1] = v103;
  sub_21CA81C54((uint64_t)v141, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_21CA5E3D0);
  swift_bridgeObjectRetain();
  if (!v99) {
    goto LABEL_35;
  }
LABEL_32:
  swift_bridgeObjectRetain();
  uint64_t v105 = v120;
  v106._countAndFlagsBits = v120;
  v106._object = v99;
  FMFDefaultLabel.init(rawValue:)(v106);

  int v107 = v141[0];
  sub_21CA1B88C(v138, (uint64_t *)&unk_267C951B0);
  sub_21CA1B88C(v139, (uint64_t *)&unk_267C96ED0);
  uint64_t v108 = a9 + v31[20];
  *(void *)uint64_t v108 = v105;
  *(void *)(v108 + 8) = v99;
  if (v107 == 5) {
    __int16 v109 = 259;
  }
  else {
    __int16 v109 = 3;
  }
  *(_WORD *)(v108 + 16) = v109;
LABEL_38:
  *(unsigned char *)(a9 + v31[21]) = v92[v31[21]];
  *(unsigned char *)(a9 + v31[24]) = v92[v31[24]];
  unsigned __int8 v118 = v92[v31[25]];
  uint64_t result = sub_21CA9E4B4((uint64_t)v92, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
  *(unsigned char *)(a9 + v31[25]) = v118;
  return result;
}

uint64_t FMFLocationAlert.init(identifier:location:address:addressType:radius:label:locationAlertTarget:triggerType:repeating:schedule:phoneNumbers:emails:followerIds:friendId:ckRecordName:ckRecordZoneOwnerName:acceptanceStatus:muteEndDate:)@<X0>(void *__src@<X3>, uint64_t a2@<X0>, uint64_t a3@<X1>, void *a4@<X2>, char *a5@<X4>, uint64_t *a6@<X5>, unsigned __int8 *a7@<X6>, unsigned char *a8@<X7>, uint64_t a9@<X8>, double a10@<D0>, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,char *a22,uint64_t a23)
{
  memcpy(__dst, __src, sizeof(__dst));
  char v52 = *a5;
  uint64_t v50 = a6[1];
  uint64_t v51 = *a6;
  __int16 v49 = *((_WORD *)a6 + 8);
  LODWORD(a5) = *a7;
  LOBYTE(a8) = *a8;
  char v31 = *a22;
  *(void *)a9 = a2;
  *(void *)(a9 + 8) = a3;
  char v32 = 1;
  *(unsigned char *)(a9 + 42) = 1;
  *(unsigned char *)(a9 + 43) = a11;
  uint64_t v33 = (int *)type metadata accessor for FMFLocationAlert();
  sub_21CA24E80(a12, a9 + v33[12], (uint64_t *)&unk_267C96ED0);
  *(unsigned char *)(a9 + 40) = (_BYTE)a5;
  *(unsigned char *)(a9 + 41) = (_BYTE)a8;
  uint64_t v34 = (void *)(a9 + v33[13]);
  *uint64_t v34 = a18;
  v34[1] = a19;
  uint64_t v35 = (void *)(a9 + v33[14]);
  *uint64_t v35 = a20;
  v35[1] = a21;
  *(unsigned char *)(a9 + v33[15]) = v31;
  *(void *)(a9 + v33[16]) = a13;
  *(void *)(a9 + v33[17]) = a14;
  *(void *)(a9 + v33[18]) = a15;
  uint64_t v36 = (void *)(a9 + v33[19]);
  *uint64_t v36 = a16;
  v36[1] = a17;
  objc_msgSend(a4, sel_coordinate);
  *(void *)(a9 + 16) = v37;
  objc_msgSend(a4, sel_coordinate);
  *(void *)(a9 + 24) = v38;
  uint64_t v39 = a9 + v33[26];
  id v40 = objc_msgSend(a4, sel_timestamp);
  sub_21CB87560();

  uint64_t v41 = sub_21CB87590();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56))(v39, 0, 1, v41);
  *(double *)(a9 + 32) = a10;
  memcpy(v55, __dst, 0x130uLL);
  nullsub_1(v55, v42);
  sub_21CA26A4C((uint64_t)v55, a9 + v33[23], &qword_267C951E0);
  memcpy(v53, __dst, sizeof(v53));
  uint64_t v43 = FMFAddress.displayAddress.getter();
  uint64_t v44 = (uint64_t *)(a9 + v33[22]);
  uint64_t *v44 = v43;
  v44[1] = v45;
  uint64_t v46 = a9 + v33[20];
  *(void *)uint64_t v46 = v51;
  *(void *)(v46 + 8) = v50;
  *(_WORD *)(v46 + 16) = v49;
  *(unsigned char *)(a9 + v33[21]) = v52;
  sub_21CA24E80(a23, a9 + v33[27], (uint64_t *)&unk_267C951B0);
  *(unsigned char *)(a9 + v33[24]) = 1;
  if (a5 != 1) {
    char v32 = sub_21CB88F50();
  }

  swift_bridgeObjectRelease();
  sub_21CA1B88C(a23, (uint64_t *)&unk_267C951B0);
  uint64_t result = sub_21CA1B88C(a12, (uint64_t *)&unk_267C96ED0);
  *(unsigned char *)(a9 + v33[25]) = v32 & 1;
  return result;
}

uint64_t sub_21CA9472C@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v4 = sub_21CB87A00();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x270FA5388](v6);
  CLLocationCoordinate2D v11 = (char *)v27 - v10;
  MEMORY[0x270FA5388](v9);
  long long v13 = (char *)v27 - v12;
  id v14 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v14((char *)v27 - v12, a1, v4);
  int v15 = (*(uint64_t (**)(char *, uint64_t))(v5 + 88))(v13, v4);
  if (v15 == *MEMORY[0x263F3CEA0])
  {
    char v16 = 0;
LABEL_17:
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
    *a2 = v16;
    return result;
  }
  if (v15 == *MEMORY[0x263F3CE80])
  {
    char v16 = 1;
    goto LABEL_17;
  }
  if (v15 == *MEMORY[0x263F3CE78])
  {
    char v16 = 2;
    goto LABEL_17;
  }
  if (v15 == *MEMORY[0x263F3CE88])
  {
    char v16 = 3;
    goto LABEL_17;
  }
  if (v15 == *MEMORY[0x263F3CE70])
  {
    char v16 = 4;
    goto LABEL_17;
  }
  if (v15 == *MEMORY[0x263F3CE98])
  {
    char v16 = 5;
    goto LABEL_17;
  }
  if (v15 == *MEMORY[0x263F3CE68])
  {
    char v16 = 6;
    goto LABEL_17;
  }
  if (v15 == *MEMORY[0x263F3CE90])
  {
    char v16 = 7;
    goto LABEL_17;
  }
  if (qword_267C94990 != -1) {
    swift_once();
  }
  uint64_t v18 = sub_21CB880A0();
  sub_21CA4CC18(v18, (uint64_t)qword_267CA5368);
  v14(v11, a1, v4);
  uint64_t v19 = sub_21CB88070();
  os_log_type_t v20 = sub_21CB88870();
  uint64_t v30 = v19;
  if (os_log_type_enabled(v19, v20))
  {
    long long v21 = (uint8_t *)swift_slowAlloc();
    uint64_t v29 = swift_slowAlloc();
    uint64_t v32 = v29;
    uint64_t v28 = v21;
    *(_DWORD *)long long v21 = 136315138;
    v27[1] = v21 + 4;
    sub_21CA9F6E8(&qword_267C956F0, MEMORY[0x263F3CEA8]);
    uint64_t v22 = sub_21CB88F00();
    uint64_t v31 = sub_21CA4E450(v22, v23, &v32);
    sub_21CB889C0();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v11, v4);
    uint64_t v24 = v30;
    uint64_t v25 = v28;
    _os_log_impl(&dword_21CA00000, v30, v20, "Unrecognized source variant %s", v28, 0xCu);
    uint64_t v26 = v29;
    swift_arrayDestroy();
    MEMORY[0x21D4B6B70](v26, -1, -1);
    MEMORY[0x21D4B6B70](v25, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v11, v4);
  }
  v14(v8, a1, v4);
  uint64_t v32 = 0;
  unint64_t v33 = 0xE000000000000000;
  sub_21CB88B70();
  swift_bridgeObjectRelease();
  uint64_t v32 = 0xD00000000000001CLL;
  unint64_t v33 = 0x800000021CB952D0;
  sub_21CA9F6E8(&qword_267C956F0, MEMORY[0x263F3CEA8]);
  sub_21CB88F00();
  sub_21CB883D0();
  swift_bridgeObjectRelease();
  uint64_t result = sub_21CB88D00();
  __break(1u);
  return result;
}

FMFCore::FMFLocationAlertAddressType_optional __swiftcall FMFLocationAlertAddressType.init(rawValue:)(Swift::Int rawValue)
{
  char v2 = 8;
  if ((unint64_t)rawValue < 8) {
    char v2 = rawValue;
  }
  *uint64_t v1 = v2;
  return (FMFCore::FMFLocationAlertAddressType_optional)rawValue;
}

FMFCore::FMFLocationAlertAddressType_optional sub_21CA94C40(Swift::Int *a1)
{
  return FMFLocationAlertAddressType.init(rawValue:)(*a1);
}

uint64_t sub_21CA94C48@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v4 = sub_21CB87B50();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x270FA5388](v6);
  CLLocationCoordinate2D v11 = (char *)v27 - v10;
  MEMORY[0x270FA5388](v9);
  long long v13 = (char *)v27 - v12;
  id v14 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v14((char *)v27 - v12, a1, v4);
  int v15 = (*(uint64_t (**)(char *, uint64_t))(v5 + 88))(v13, v4);
  if (v15 == *MEMORY[0x263F3CEE8])
  {
    char v16 = 0;
LABEL_5:
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
    *a2 = v16;
    return result;
  }
  if (v15 == *MEMORY[0x263F3CEE0])
  {
    char v16 = 1;
    goto LABEL_5;
  }
  if (qword_267C94990 != -1) {
    swift_once();
  }
  uint64_t v18 = sub_21CB880A0();
  sub_21CA4CC18(v18, (uint64_t)qword_267CA5368);
  v14(v11, a1, v4);
  uint64_t v19 = sub_21CB88070();
  os_log_type_t v20 = sub_21CB88870();
  uint64_t v30 = v19;
  if (os_log_type_enabled(v19, v20))
  {
    long long v21 = (uint8_t *)swift_slowAlloc();
    uint64_t v29 = swift_slowAlloc();
    uint64_t v32 = v29;
    uint64_t v28 = v21;
    *(_DWORD *)long long v21 = 136315138;
    v27[1] = v21 + 4;
    sub_21CA9F6E8(&qword_267C956E0, MEMORY[0x263F3CEF0]);
    uint64_t v22 = sub_21CB88F00();
    uint64_t v31 = sub_21CA4E450(v22, v23, &v32);
    sub_21CB889C0();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v11, v4);
    uint64_t v24 = v30;
    uint64_t v25 = v28;
    _os_log_impl(&dword_21CA00000, v30, v20, "Unrecognized trigger variant %s", v28, 0xCu);
    uint64_t v26 = v29;
    swift_arrayDestroy();
    MEMORY[0x21D4B6B70](v26, -1, -1);
    MEMORY[0x21D4B6B70](v25, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v11, v4);
  }
  v14(v8, a1, v4);
  uint64_t v32 = 0;
  unint64_t v33 = 0xE000000000000000;
  sub_21CB88B70();
  swift_bridgeObjectRelease();
  uint64_t v32 = 0xD00000000000001DLL;
  unint64_t v33 = 0x800000021CB95290;
  sub_21CA9F6E8(&qword_267C956E0, MEMORY[0x263F3CEF0]);
  sub_21CB88F00();
  sub_21CB883D0();
  swift_bridgeObjectRelease();
  uint64_t result = sub_21CB88D00();
  __break(1u);
  return result;
}

FMFCore::FMFLocationAlertTriggerType_optional __swiftcall FMFLocationAlertTriggerType.init(rawValue:)(Swift::String rawValue)
{
  char v2 = v1;
  unint64_t v3 = sub_21CB88D70();
  result.value = swift_bridgeObjectRelease();
  char v5 = 4;
  if (v3 < 4) {
    char v5 = v3;
  }
  *char v2 = v5;
  return result;
}

uint64_t sub_21CA950FC(unsigned __int8 *a1, char *a2)
{
  return sub_21CA7E8A0(*a1, *a2);
}

uint64_t sub_21CA95108()
{
  return sub_21CB89090();
}

uint64_t sub_21CA951E4()
{
  sub_21CB88380();

  return swift_bridgeObjectRelease();
}

uint64_t sub_21CA952A8()
{
  return sub_21CB89090();
}

FMFCore::FMFLocationAlertTriggerType_optional sub_21CA95380(Swift::String *a1)
{
  return FMFLocationAlertTriggerType.init(rawValue:)(*a1);
}

void sub_21CA9538C(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE500000000000000;
  uint64_t v3 = 0x7265746E65;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE400000000000000;
      uint64_t v3 = 1953069157;
      goto LABEL_3;
    case 2:
      *a1 = 0x74616964656D6D69;
      a1[1] = 0xE900000000000065;
      break;
    case 3:
      *a1 = 0x656C756465686373;
      a1[1] = 0xE900000000000064;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

FMFCore::FMFLocationAlertTarget_optional __swiftcall FMFLocationAlertTarget.init(rawValue:)(Swift::String rawValue)
{
  unint64_t v2 = v1;
  uint64_t v3 = sub_21CB88D70();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1) {
    char v5 = 1;
  }
  else {
    char v5 = 2;
  }
  if (!v3) {
    char v5 = 0;
  }
  *unint64_t v2 = v5;
  return result;
}

uint64_t sub_21CA9548C(char *a1, char *a2)
{
  return sub_21CA7EE18(*a1, *a2);
}

uint64_t sub_21CA95498()
{
  return sub_21CB89090();
}

uint64_t sub_21CA95524()
{
  sub_21CB88380();

  return swift_bridgeObjectRelease();
}

uint64_t sub_21CA9559C()
{
  return sub_21CB89090();
}

FMFCore::FMFLocationAlertTarget_optional sub_21CA95624(Swift::String *a1)
{
  return FMFLocationAlertTarget.init(rawValue:)(*a1);
}

void sub_21CA95630(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x654D796669746F4ELL;
  if (*v1) {
    uint64_t v2 = 0x744F796669746F4ELL;
  }
  unint64_t v3 = 0xE800000000000000;
  if (*v1) {
    unint64_t v3 = 0xEC00000073726568;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_21CA95678@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v4 = sub_21CB87A60();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v15 - v9;
  CLLocationCoordinate2D v11 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v11((char *)&v15 - v9, a1, v4);
  int v12 = (*(uint64_t (**)(char *, uint64_t))(v5 + 88))(v10, v4);
  if (v12 == *MEMORY[0x263F3CEB8])
  {
    char v13 = 0;
LABEL_7:
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
    *a2 = v13;
    return result;
  }
  if (v12 == *MEMORY[0x263F3CEC0])
  {
    char v13 = 1;
    goto LABEL_7;
  }
  if (v12 == *MEMORY[0x263F3CEC8])
  {
    char v13 = 2;
    goto LABEL_7;
  }
  v11(v8, a1, v4);
  unint64_t v15 = 0;
  unint64_t v16 = 0xE000000000000000;
  sub_21CB88B70();
  swift_bridgeObjectRelease();
  unint64_t v15 = 0xD00000000000001CLL;
  unint64_t v16 = 0x800000021CB952B0;
  sub_21CA9F6E8(&qword_267C956E8, MEMORY[0x263F3CED0]);
  sub_21CB88F00();
  sub_21CB883D0();
  swift_bridgeObjectRelease();
  uint64_t result = sub_21CB88D00();
  __break(1u);
  return result;
}

FMFCore::FMFLocationAlertAcceptanceStatus_optional __swiftcall FMFLocationAlertAcceptanceStatus.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_21CB88D70();
  result.value = swift_bridgeObjectRelease();
  char v5 = 3;
  if (v3 < 3) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

uint64_t sub_21CA95940(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_21CA7F940(*a1, *a2);
}

uint64_t sub_21CA9594C()
{
  return sub_21CB89090();
}

uint64_t sub_21CA959EC()
{
  sub_21CB88380();

  return swift_bridgeObjectRelease();
}

uint64_t sub_21CA95A78()
{
  return sub_21CB89090();
}

FMFCore::FMFLocationAlertAcceptanceStatus_optional sub_21CA95B14(Swift::String *a1)
{
  return FMFLocationAlertAcceptanceStatus.init(rawValue:)(*a1);
}

void sub_21CA95B20(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE600000000000000;
  unint64_t v4 = 0xE700000000000000;
  uint64_t v5 = 0x676E69646E6550;
  if (v2 != 1)
  {
    uint64_t v5 = 0x6465747065636341;
    unint64_t v4 = 0xE800000000000000;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x6E6564646948;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t FMFLocationAlert.identifier.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

double FMFLocationAlert.latitude.getter()
{
  return *(double *)(v0 + 16);
}

double FMFLocationAlert.longitude.getter()
{
  return *(double *)(v0 + 24);
}

double FMFLocationAlert.radius.getter()
{
  return *(double *)(v0 + 32);
}

void FMFLocationAlert.locationAlertTarget.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 40);
}

void FMFLocationAlert.triggerType.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 41);
}

uint64_t FMFLocationAlert.isOn.getter()
{
  return *(unsigned __int8 *)(v0 + 42);
}

uint64_t FMFLocationAlert.repeating.getter()
{
  return *(unsigned __int8 *)(v0 + 43);
}

uint64_t FMFLocationAlert.schedule.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for FMFLocationAlert();
  return sub_21CA24E80(v1 + *(int *)(v3 + 48), a1, (uint64_t *)&unk_267C96ED0);
}

uint64_t FMFLocationAlert.ckRecordName.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for FMFLocationAlert() + 52));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FMFLocationAlert.ckRecordZoneOwnerName.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for FMFLocationAlert() + 56));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FMFLocationAlert.acceptanceStatus.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for FMFLocationAlert();
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 60));
  return result;
}

uint64_t FMFLocationAlert.phoneNumbers.getter()
{
  type metadata accessor for FMFLocationAlert();

  return swift_bridgeObjectRetain();
}

uint64_t FMFLocationAlert.emails.getter()
{
  type metadata accessor for FMFLocationAlert();

  return swift_bridgeObjectRetain();
}

uint64_t FMFLocationAlert.followerIds.getter()
{
  type metadata accessor for FMFLocationAlert();

  return swift_bridgeObjectRetain();
}

uint64_t FMFLocationAlert.friendId.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for FMFLocationAlert() + 76));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FMFLocationAlert.label.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for FMFLocationAlert() + 80));
  uint64_t v5 = *v3;
  uint64_t v4 = v3[1];
  LOWORD(v3) = *((_WORD *)v3 + 8);
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v4;
  *(_WORD *)(a1 + 16) = (_WORD)v3;

  return swift_bridgeObjectRetain();
}

uint64_t FMFLocationAlert.addressType.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for FMFLocationAlert();
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 84));
  return result;
}

uint64_t FMFLocationAlert.address.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for FMFLocationAlert() + 88));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FMFLocationAlert.fullAddress.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for FMFLocationAlert();
  sub_21CA26A4C(v1 + *(int *)(v3 + 92), (uint64_t)v5, &qword_267C951E0);
  sub_21CA26A4C((uint64_t)v5, a1, &qword_267C951E0);
  return sub_21CA81C54((uint64_t)v5, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_21CA5E3D0);
}

uint64_t FMFLocationAlert.setByMe.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for FMFLocationAlert() + 96));
}

uint64_t FMFLocationAlert.setOnMe.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for FMFLocationAlert() + 100));
}

uint64_t FMFLocationAlert.updateTimestamp.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for FMFLocationAlert();
  return sub_21CA24E80(v1 + *(int *)(v3 + 104), a1, (uint64_t *)&unk_267C951B0);
}

uint64_t FMFLocationAlert.muteEndDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for FMFLocationAlert();
  return sub_21CA24E80(v1 + *(int *)(v3 + 108), a1, (uint64_t *)&unk_267C951B0);
}

uint64_t FMFLocationAlert.displayLabel.getter()
{
  uint64_t v1 = v0;
  int v2 = (int *)type metadata accessor for FMFLocationAlert();
  uint64_t v3 = (uint64_t *)(v0 + v2[20]);
  uint64_t v4 = v3[1];
  if (!v4) {
    goto LABEL_9;
  }
  uint64_t v5 = *v3;
  uint64_t v6 = sub_21CB88320();
  uint64_t v8 = v7;
  swift_bridgeObjectRetain();
  v9._countAndFlagsBits = v6;
  v9._object = v8;
  FMFDefaultLabel.init(rawValue:)(v9);
  uint64_t v10 = v5;
  unint64_t v11 = v4;
  if (__src[0] != 5)
  {
    uint64_t v10 = FMFDefaultLabel.localizedLabel.getter();
    unint64_t v11 = v12;
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  uint64_t v13 = HIBYTE(v11) & 0xF;
  if ((v11 & 0x2000000000000000) == 0) {
    uint64_t v13 = v10 & 0xFFFFFFFFFFFFLL;
  }
  if (v13)
  {
    uint64_t v14 = sub_21CB88320();
    unint64_t v16 = v15;
    swift_bridgeObjectRetain();
    v17._countAndFlagsBits = v14;
    v17._object = v16;
    FMFDefaultLabel.init(rawValue:)(v17);
    if (__src[0] != 5)
    {
      uint64_t v5 = FMFDefaultLabel.localizedLabel.getter();
      swift_bridgeObjectRelease();
    }
  }
  else
  {
LABEL_9:
    uint64_t v18 = (uint64_t *)(v1 + v2[22]);
    unint64_t v19 = v18[1];
    if (!v19) {
      goto LABEL_14;
    }
    uint64_t v5 = *v18;
    uint64_t v20 = HIBYTE(v19) & 0xF;
    if ((v19 & 0x2000000000000000) == 0) {
      uint64_t v20 = v5 & 0xFFFFFFFFFFFFLL;
    }
    if (v20)
    {
      swift_bridgeObjectRetain();
    }
    else
    {
LABEL_14:
      sub_21CA26A4C(v1 + v2[23], (uint64_t)v23, &qword_267C951E0);
      sub_21CA26A4C((uint64_t)v23, (uint64_t)__src, &qword_267C951E0);
      if (sub_21CA76890((uint64_t)__src) == 1)
      {
        return 0;
      }
      else
      {
        memcpy(v22, __src, sizeof(v22));
        return FMFAddress.displayAddress.getter();
      }
    }
  }
  return v5;
}

unint64_t sub_21CA961A0(char a1)
{
  unint64_t result = 25705;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x656475746974616CLL;
      break;
    case 2:
      unint64_t result = 0x64757469676E6F6CLL;
      break;
    case 3:
      unint64_t result = 0x737569646172;
      break;
    case 4:
      unint64_t result = 1701869940;
      break;
    case 5:
      unint64_t result = 0x72656767697274;
      break;
    case 6:
      unint64_t result = 1850700649;
      break;
    case 7:
      unint64_t result = 0x6F656D6974656E6FLL;
      break;
    case 8:
      unint64_t result = 0x6D695465636E6566;
      break;
    case 9:
      unint64_t result = 0x64726F6365526B63;
      break;
    case 10:
      unint64_t result = 0xD000000000000015;
      break;
    case 11:
      unint64_t result = 0xD000000000000010;
      break;
    case 12:
      unint64_t result = 0x6954657461647075;
      break;
    case 13:
      unint64_t result = 0x6D754E656E6F6870;
      break;
    case 14:
      unint64_t result = 0x736C69616D65;
      break;
    case 15:
      unint64_t result = 0x7265776F6C6C6F66;
      break;
    case 16:
      unint64_t result = 0x6449646E65697266;
      break;
    case 17:
      unint64_t result = 0x6C6562616CLL;
      break;
    case 18:
      unint64_t result = 0x6E6F697461636F6CLL;
      break;
    case 19:
      unint64_t result = 0x73736572646461;
      break;
    case 20:
      unint64_t result = 0x726464416C6C7566;
      break;
    case 21:
      unint64_t result = 0x44646E456574756DLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_21CA9646C(char *a1, char *a2)
{
  char v2 = *a2;
  unint64_t v3 = sub_21CA961A0(*a1);
  uint64_t v5 = v4;
  if (v3 == sub_21CA961A0(v2) && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = sub_21CB88F50();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_21CA964F8()
{
  char v1 = *v0;
  sub_21CB89050();
  sub_21CA961A0(v1);
  sub_21CB88380();
  swift_bridgeObjectRelease();
  return sub_21CB89090();
}

uint64_t sub_21CA9655C()
{
  sub_21CA961A0(*v0);
  sub_21CB88380();

  return swift_bridgeObjectRelease();
}

uint64_t sub_21CA965B0()
{
  char v1 = *v0;
  sub_21CB89050();
  sub_21CA961A0(v1);
  sub_21CB88380();
  swift_bridgeObjectRelease();
  return sub_21CB89090();
}

uint64_t sub_21CA96610@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_21CA9F694();
  *a1 = result;
  return result;
}

unint64_t sub_21CA96640@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_21CA961A0(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_21CA9666C()
{
  return sub_21CA961A0(*v0);
}

uint64_t sub_21CA96674@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_21CA9F694();
  *a1 = result;
  return result;
}

void sub_21CA9669C(unsigned char *a1@<X8>)
{
  *a1 = 22;
}

uint64_t sub_21CA966A8(uint64_t a1)
{
  unint64_t v2 = sub_21CA99760();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_21CA966E4(uint64_t a1)
{
  unint64_t v2 = sub_21CA99760();

  return MEMORY[0x270FA00B8](a1, v2);
}

char FMFLocationAlert.init(from:)@<W0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v116 = a2;
  uint64_t v3 = sub_21CA57E34((uint64_t *)&unk_267C951B0);
  MEMORY[0x270FA5388](v3 - 8);
  unsigned __int8 v118 = (uint8_t *)&v114 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v119 = sub_21CB87590();
  uint64_t v117 = *(uint8_t **)(v119 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v119);
  uint64_t v7 = (char *)&v114 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  Swift::String v9 = (char *)&v114 - v8;
  uint64_t v10 = sub_21CA57E34((uint64_t *)&unk_267C96ED0);
  MEMORY[0x270FA5388](v10 - 8);
  unint64_t v12 = (char *)&v114 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_21CA57E34(&qword_267C95648);
  uint64_t v120 = *(char **)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  unint64_t v15 = (char *)&v114 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v123 = (int *)type metadata accessor for FMFLocationAlert();
  MEMORY[0x270FA5388](v123);
  uint64_t v124 = (uint64_t)&v114 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = a1[3];
  int v121 = a1;
  sub_21CA2B2CC(a1, v17);
  sub_21CA99760();
  uint64_t v18 = v122;
  sub_21CB890B0();
  if (v18)
  {
    LODWORD(v122) = 0;
    LODWORD(v120) = 0;
    int v19 = 0;
    int v20 = 0;
    if (qword_267C94990 != -1) {
      swift_once();
    }
    uint64_t v28 = sub_21CB880A0();
    sub_21CA4CC18(v28, (uint64_t)qword_267CA5368);
    uint64_t v29 = v18;
    uint64_t v30 = v18;
    uint64_t v31 = sub_21CB88070();
    os_log_type_t v32 = sub_21CB88860();
    if (os_log_type_enabled(v31, v32))
    {
      uint64_t v33 = swift_slowAlloc();
      LODWORD(v119) = 0;
      uint64_t v34 = (uint8_t *)v33;
      uint64_t v35 = swift_slowAlloc();
      LODWORD(v118) = 0;
      uint64_t v36 = v35;
      v128[0] = v35;
      *(_DWORD *)uint64_t v34 = 136315138;
      uint64_t v117 = v34 + 4;
      v127[0] = v18;
      uint64_t v37 = v18;
      sub_21CA57E34((uint64_t *)&unk_267C96F50);
      uint64_t v38 = sub_21CB88310();
      v127[0] = sub_21CA4E450(v38, v39, v128);
      sub_21CB889C0();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_21CA00000, v31, v32, "FMFFence: Could not decode. Error - %s", v34, 0xCu);
      swift_arrayDestroy();
      uint64_t v40 = v36;
      int v19 = (int)v118;
      MEMORY[0x21D4B6B70](v40, -1, -1);
      uint64_t v41 = v34;
      int v20 = v119;
      MEMORY[0x21D4B6B70](v41, -1, -1);
    }
    else
    {
    }
    uint64_t v43 = v123;
    uint64_t v42 = v124;
    swift_willThrow();
    LOBYTE(v44) = sub_21CA2B0D0((uint64_t)v121);
    if (v122)
    {
      LOBYTE(v44) = swift_bridgeObjectRelease();
      if (!v120)
      {
LABEL_11:
        if (!v19) {
          goto LABEL_12;
        }
        goto LABEL_17;
      }
    }
    else if (!v120)
    {
      goto LABEL_11;
    }
    sub_21CA1B88C(v42 + v43[12], (uint64_t *)&unk_267C96ED0);
    swift_bridgeObjectRelease();
    LOBYTE(v44) = swift_bridgeObjectRelease();
    if (!v19)
    {
LABEL_12:
      if (!v20) {
        goto LABEL_13;
      }
LABEL_18:
      LOBYTE(v44) = swift_bridgeObjectRelease();
LABEL_13:
      if (v20)
      {
        sub_21CA26A4C(v42 + v43[23], (uint64_t)v128, &qword_267C951E0);
        LOBYTE(v44) = sub_21CA81C54((uint64_t)v128, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_21CA1358C);
      }
      return v44;
    }
LABEL_17:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    LOBYTE(v44) = swift_bridgeObjectRelease();
    if (!v20) {
      goto LABEL_13;
    }
    goto LABEL_18;
  }
  long long v21 = v12;
  uint64_t v115 = v7;
  char v122 = v9;
  LOBYTE(v128[0]) = 0;
  uint64_t v22 = sub_21CB88DE0();
  uint64_t v23 = v13;
  uint64_t v24 = v124;
  *(void *)uint64_t v124 = v22;
  *(void *)(v24 + 8) = v25;
  LOBYTE(v128[0]) = 6;
  char v26 = sub_21CB88DF0();
  uint64_t v27 = v120;
  *(unsigned char *)(v24 + 42) = v26 & 1;
  LOBYTE(v128[0]) = 7;
  *(unsigned char *)(v24 + 43) = (sub_21CB88DF0() & 1) == 0;
  uint64_t v45 = type metadata accessor for FMFSchedule();
  LOBYTE(v128[0]) = 8;
  sub_21CA9F6E8(&qword_267C95658, (void (*)(uint64_t))type metadata accessor for FMFSchedule);
  uint64_t v46 = (uint64_t)v21;
  unint64_t v47 = v45;
  sub_21CB88E20();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v45 - 8) + 56))(v46, 0, 1, v45);
  sub_21CA26A4C(v46, v24 + v123[12], (uint64_t *)&unk_267C96ED0);
  LOBYTE(v128[0]) = 9;
  uint64_t v48 = sub_21CB88DE0();
  __int16 v49 = (uint64_t *)(v24 + v123[13]);
  *__int16 v49 = v48;
  v49[1] = v50;
  LOBYTE(v128[0]) = 10;
  uint64_t v51 = sub_21CB88DE0();
  char v52 = (uint64_t *)(v24 + v123[14]);
  uint64_t *v52 = v51;
  v52[1] = v53;
  LOBYTE(v128[0]) = 11;
  uint64_t v54 = sub_21CB88DA0();
  if (!v55
    || (FMFLocationAlertAcceptanceStatus.init(rawValue:)(*(Swift::String *)&v54), char v56 = v128[0], LOBYTE(v128[0]) == 3))
  {
    char v56 = 3;
  }
  *(unsigned char *)(v24 + v123[15]) = v56;
  LOBYTE(v128[0]) = 4;
  sub_21CB88DE0();
  unint64_t v57 = sub_21CB88D70();
  swift_bridgeObjectRelease();
  if (v57 > 1)
  {
    __break(1u);
    goto LABEL_48;
  }
  *(unsigned char *)(v24 + 40) = v57 != 0;
  LOBYTE(v128[0]) = 5;
  v58._countAndFlagsBits = sub_21CB88DE0();
  LOBYTE(v44) = FMFLocationAlertTriggerType.init(rawValue:)(v58);
  if (LOBYTE(v128[0]) == 4)
  {
    __break(1u);
LABEL_50:
    __break(1u);
    return v44;
  }
  *(unsigned char *)(v24 + 41) = v128[0];
  sub_21CA57E34(&qword_267C94E60);
  LOBYTE(v127[0]) = 13;
  sub_21CA4A500((unint64_t *)&qword_267C94E68, &qword_267C94E60);
  sub_21CB88E20();
  *(void *)(v24 + v123[16]) = v128[0];
  LOBYTE(v127[0]) = 14;
  sub_21CB88E20();
  *(void *)(v24 + v123[17]) = v128[0];
  LOBYTE(v127[0]) = 15;
  sub_21CB88E20();
  *(void *)(v24 + v123[18]) = v128[0];
  LOBYTE(v128[0]) = 16;
  uint64_t v59 = sub_21CB88DE0();
  uint64_t v60 = (uint64_t *)(v24 + v123[19]);
  uint64_t *v60 = v59;
  v60[1] = v61;
  LOBYTE(v128[0]) = 1;
  double v62 = COERCE_DOUBLE(sub_21CB88DB0());
  uint64_t v63 = v23;
  uint64_t v64 = MEMORY[0x263F00B58];
  double v65 = *MEMORY[0x263F00B58];
  if ((v66 & 1) == 0) {
    double v65 = v62;
  }
  *(double *)(v24 + 16) = v65;
  LOBYTE(v128[0]) = 2;
  double v67 = COERCE_DOUBLE(sub_21CB88DB0());
  double v68 = *(double *)(v64 + 8);
  if ((v69 & 1) == 0) {
    double v68 = v67;
  }
  *(double *)(v24 + 24) = v68;
  LOBYTE(v128[0]) = 3;
  double v70 = COERCE_DOUBLE(sub_21CB88DB0());
  if (v71) {
    double v70 = -1.0;
  }
  *(double *)(v124 + 32) = v70;
  LOBYTE(v128[0]) = 12;
  uint64_t v114 = v63;
  uint64_t v27 = v15;
  uint64_t v72 = sub_21CB88E30();
  id v73 = objc_msgSend(self, sel_fm_dateFromEpoch_, v72);
  uint64_t v74 = v122;
  sub_21CB87560();

  uint64_t v75 = v124 + v123[26];
  uint64_t v76 = v117;
  char v77 = v74;
  uint64_t v78 = v119;
  (*((void (**)(uint64_t, char *, uint64_t))v117 + 2))(v75, v77, v119);
  uint64_t v79 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))*((void *)v76 + 7);
  v79(v75, 0, 1, v78);
  LOBYTE(v128[0]) = 21;
  sub_21CA9F6E8(&qword_267C95660, MEMORY[0x263F07490]);
  sub_21CB88E20();
  uint64_t v81 = (uint64_t)v118;
  uint64_t v80 = v119;
  v79((uint64_t)v118, 0, 1, v119);
  if ((*((unsigned int (**)(uint64_t, uint64_t, uint64_t))v117 + 6))(v81, 1, v80) == 1)
  {
    sub_21CA1B88C((uint64_t)v118, (uint64_t *)&unk_267C951B0);
    uint64_t v82 = v124 + v123[27];
    uint64_t v83 = 1;
    uint64_t v84 = v119;
  }
  else
  {
    uint64_t v88 = (void (*)(char *, uint8_t *, uint64_t))*((void *)v117 + 4);
    uint64_t v89 = v115;
    uint64_t v90 = v119;
    v88(v115, v118, v119);
    id v91 = (void (*)(uint64_t, char *, uint64_t))v88;
    uint64_t v92 = v124 + v123[27];
    v91(v92, v89, v90);
    uint64_t v82 = v92;
    uint64_t v83 = 0;
    uint64_t v84 = v90;
  }
  v79(v82, v83, 1, v84);
  LOBYTE(v128[0]) = 19;
  uint64_t v85 = sub_21CB88DE0();
  uint64_t v86 = (uint64_t *)(v124 + v123[22]);
  *uint64_t v86 = v85;
  v86[1] = v87;
  char v129 = 20;
  sub_21CA669BC();
  sub_21CB88DD0();
  sub_21CA26A4C((uint64_t)v128, (uint64_t)v127, &qword_267C951E0);
  sub_21CA26A4C((uint64_t)v127, v124 + v123[23], &qword_267C951E0);
  LOBYTE(v126) = 17;
  uint64_t v93 = sub_21CB88DE0();
  uint64_t v95 = v94;
  swift_bridgeObjectRetain();
  v96._countAndFlagsBits = v93;
  v96._object = v95;
  FMFDefaultLabel.init(rawValue:)(v96);
  int v97 = v126;
  uint64_t v98 = v124 + v123[20];
  *(void *)uint64_t v98 = v93;
  *(void *)(v98 + 8) = v95;
  if (v97 == 5) {
    __int16 v99 = 259;
  }
  else {
    __int16 v99 = 3;
  }
  *(_WORD *)(v98 + 16) = v99;
  LOBYTE(v126) = 18;
  uint64_t v100 = sub_21CB88DE0();
  uint64_t v44 = sub_21CA9791C(v100, v101);
  if (v102) {
    unint64_t v103 = 0;
  }
  else {
    unint64_t v103 = v44;
  }
  if (v103 > 7) {
    goto LABEL_50;
  }
  uint64_t v104 = v123;
  uint64_t v105 = v124;
  *(unsigned char *)(v124 + v123[21]) = v103;
  *(unsigned char *)(v105 + v104[24]) = 1;
  *(unsigned char *)(v105 + v104[25]) = 1;
  uint64_t v123 = (int *)FMFLocationAlert.debugDescription.getter();
  unint64_t v47 = v106;
  if (qword_267C94990 != -1) {
LABEL_48:
  }
    swift_once();
  uint64_t v107 = sub_21CB880A0();
  sub_21CA4CC18(v107, (uint64_t)qword_267CA5368);
  swift_bridgeObjectRetain();
  uint64_t v108 = sub_21CB88070();
  os_log_type_t v109 = sub_21CB88880();
  if (os_log_type_enabled(v108, v109))
  {
    uint64_t v110 = (uint8_t *)swift_slowAlloc();
    uint64_t v111 = swift_slowAlloc();
    uint64_t v126 = v111;
    *(_DWORD *)uint64_t v110 = 136315138;
    unsigned __int8 v118 = v110 + 4;
    swift_bridgeObjectRetain();
    uint64_t v125 = sub_21CA4E450((uint64_t)v123, v47, &v126);
    sub_21CB889C0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_21CA00000, v108, v109, "FMFFence: initialized with coder %s", v110, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x21D4B6B70](v111, -1, -1);
    MEMORY[0x21D4B6B70](v110, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  (*((void (**)(char *, uint64_t))v117 + 1))(v122, v119);
  (*((void (**)(char *, uint64_t))v120 + 1))(v27, v114);
  uint64_t v112 = v124;
  sub_21CA7E0A0(v124, v116);
  sub_21CA2B0D0((uint64_t)v121);
  LOBYTE(v44) = sub_21CA9E4B4(v112, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
  return v44;
}

uint64_t sub_21CA9791C(uint64_t result, unint64_t a2)
{
  uint64_t v3 = HIBYTE(a2) & 0xF;
  uint64_t v4 = result & 0xFFFFFFFFFFFFLL;
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = result & 0xFFFFFFFFFFFFLL;
  }
  if (!v5)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  if ((a2 & 0x1000000000000000) == 0)
  {
    if ((a2 & 0x2000000000000000) == 0)
    {
      if ((result & 0x1000000000000000) != 0) {
        uint64_t v6 = (unsigned __int8 *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 32);
      }
      else {
        uint64_t v6 = (unsigned __int8 *)sub_21CB88BD0();
      }
      uint64_t v7 = (uint64_t)sub_21CB79E38(v6, v4, 10);
      char v9 = v8 & 1;
      goto LABEL_37;
    }
    v23[0] = result;
    v23[1] = a2 & 0xFFFFFFFFFFFFFFLL;
    if (result == 43)
    {
      if (!v3) {
        goto LABEL_50;
      }
      if (v3 == 1 || (BYTE1(result) - 48) > 9u) {
        goto LABEL_34;
      }
      uint64_t v7 = (BYTE1(result) - 48);
      uint64_t v14 = v3 - 2;
      if (v14)
      {
        unint64_t v15 = (unsigned __int8 *)v23 + 2;
        while (1)
        {
          unsigned int v16 = *v15 - 48;
          if (v16 > 9) {
            goto LABEL_34;
          }
          uint64_t v17 = 10 * v7;
          if ((unsigned __int128)(v7 * (__int128)10) >> 64 != (10 * v7) >> 63) {
            goto LABEL_34;
          }
          uint64_t v7 = v17 + v16;
          if (__OFADD__(v17, v16)) {
            goto LABEL_34;
          }
          char v9 = 0;
          ++v15;
          if (!--v14) {
            goto LABEL_37;
          }
        }
      }
    }
    else
    {
      if (result == 45)
      {
        if (v3)
        {
          if (v3 != 1 && (BYTE1(result) - 48) <= 9u)
          {
            uint64_t v7 = -(uint64_t)(BYTE1(result) - 48);
            uint64_t v10 = v3 - 2;
            if (v10)
            {
              uint64_t v11 = (unsigned __int8 *)v23 + 2;
              while (1)
              {
                unsigned int v12 = *v11 - 48;
                if (v12 > 9) {
                  goto LABEL_34;
                }
                uint64_t v13 = 10 * v7;
                if ((unsigned __int128)(v7 * (__int128)10) >> 64 != (10 * v7) >> 63) {
                  goto LABEL_34;
                }
                uint64_t v7 = v13 - v12;
                if (__OFSUB__(v13, v12)) {
                  goto LABEL_34;
                }
                char v9 = 0;
                ++v11;
                if (!--v10) {
                  goto LABEL_37;
                }
              }
            }
            goto LABEL_36;
          }
LABEL_34:
          uint64_t v7 = 0;
          char v9 = 1;
          goto LABEL_37;
        }
        __break(1u);
LABEL_50:
        __break(1u);
        return result;
      }
      if (!v3 || (result - 48) > 9u) {
        goto LABEL_34;
      }
      uint64_t v7 = (result - 48);
      uint64_t v18 = v3 - 1;
      if (v18)
      {
        int v19 = (unsigned __int8 *)v23 + 1;
        while (1)
        {
          unsigned int v20 = *v19 - 48;
          if (v20 > 9) {
            goto LABEL_34;
          }
          uint64_t v21 = 10 * v7;
          if ((unsigned __int128)(v7 * (__int128)10) >> 64 != (10 * v7) >> 63) {
            goto LABEL_34;
          }
          uint64_t v7 = v21 + v20;
          if (__OFADD__(v21, v20)) {
            goto LABEL_34;
          }
          char v9 = 0;
          ++v19;
          if (!--v18) {
            goto LABEL_37;
          }
        }
      }
    }
LABEL_36:
    char v9 = 0;
    goto LABEL_37;
  }
  uint64_t v7 = (uint64_t)sub_21CB79E50(result, a2, 10);
  char v9 = v22;
LABEL_37:
  swift_bridgeObjectRelease();
  if (v9) {
    return 0;
  }
  else {
    return v7;
  }
}

uint64_t FMFLocationAlert.debugDescription.getter()
{
  uint64_t v1 = sub_21CA57E34((uint64_t *)&unk_267C96ED0);
  MEMORY[0x270FA5388](v1);
  uint64_t v3 = (char *)&v39 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_21CA57E34((uint64_t *)&unk_267C951B0);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = (int *)type metadata accessor for FMFLocationAlert();
  sub_21CA24E80(v0 + v7[27], (uint64_t)v6, (uint64_t *)&unk_267C951B0);
  uint64_t v8 = sub_21CB88310();
  uint64_t v43 = v9;
  uint64_t v44 = v8;
  sub_21CA24E80(v0 + v7[12], (uint64_t)v3, (uint64_t *)&unk_267C96ED0);
  uint64_t v10 = sub_21CB88310();
  uint64_t v41 = v11;
  uint64_t v42 = v10;
  uint64_t v49 = 0;
  unint64_t v50 = 0xE000000000000000;
  sub_21CB88B70();
  sub_21CB883D0();
  sub_21CB883D0();
  sub_21CB883D0();
  uint64_t v12 = *(void *)(v0 + 8);
  v46[0] = *(void *)v0;
  v46[1] = v12;
  swift_bridgeObjectRetain();
  uint64_t v45 = sub_21CA57E34((uint64_t *)&unk_267C95220);
  sub_21CB88310();
  sub_21CB883D0();
  swift_bridgeObjectRelease();
  sub_21CB883D0();
  sub_21CB88710();
  sub_21CB883D0();
  sub_21CB88710();
  sub_21CB883D0();
  unint64_t v13 = v50;
  uint64_t v40 = v49;
  uint64_t v49 = 0;
  unint64_t v50 = 0xE000000000000000;
  sub_21CB88B70();
  uint64_t v52 = v49;
  unint64_t v53 = v50;
  sub_21CB883D0();
  sub_21CB88710();
  sub_21CB883D0();
  sub_21CB883D0();
  swift_bridgeObjectRelease();
  sub_21CB883D0();
  sub_21CB883D0();
  swift_bridgeObjectRelease();
  sub_21CB883D0();
  uint64_t v49 = *(void *)(v0 + v7[16]);
  swift_bridgeObjectRetain();
  sub_21CA57E34(&qword_267C95130);
  sub_21CB88310();
  sub_21CB883D0();
  swift_bridgeObjectRelease();
  sub_21CB883D0();
  uint64_t v49 = v40;
  unint64_t v50 = v13;
  swift_bridgeObjectRetain();
  sub_21CB883D0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v15 = v49;
  unint64_t v14 = v50;
  uint64_t v49 = 0;
  unint64_t v50 = 0xE000000000000000;
  sub_21CB88B70();
  swift_bridgeObjectRelease();
  uint64_t v49 = 0x203A736C69616D65;
  unint64_t v50 = 0xE800000000000000;
  v46[0] = *(void *)(v0 + v7[17]);
  swift_bridgeObjectRetain();
  sub_21CB88310();
  sub_21CB883D0();
  swift_bridgeObjectRelease();
  sub_21CB883D0();
  unsigned int v16 = (void *)(v0 + v7[19]);
  uint64_t v17 = v16[1];
  v46[0] = *v16;
  v46[1] = v17;
  swift_bridgeObjectRetain();
  sub_21CB88310();
  sub_21CB883D0();
  swift_bridgeObjectRelease();
  sub_21CB883D0();
  v46[0] = *(void *)(v0 + v7[18]);
  swift_bridgeObjectRetain();
  sub_21CB88310();
  sub_21CB883D0();
  swift_bridgeObjectRelease();
  sub_21CB883D0();
  uint64_t v49 = v15;
  unint64_t v50 = v14;
  swift_bridgeObjectRetain();
  sub_21CB883D0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v19 = v49;
  unint64_t v18 = v50;
  uint64_t v49 = 0;
  unint64_t v50 = 0xE000000000000000;
  sub_21CB88B70();
  v46[0] = v49;
  v46[1] = v50;
  sub_21CB883D0();
  uint64_t v20 = v0 + v7[20];
  uint64_t v22 = *(void *)v20;
  unint64_t v21 = *(void *)(v20 + 8);
  LOWORD(v20) = *(_WORD *)(v20 + 16);
  uint64_t v49 = v22;
  unint64_t v50 = v21;
  __int16 v51 = v20;
  swift_bridgeObjectRetain();
  sub_21CA57E34(&qword_267C95668);
  sub_21CB88310();
  sub_21CB883D0();
  swift_bridgeObjectRelease();
  sub_21CB883D0();
  LOBYTE(v49) = *(unsigned char *)(v0 + v7[21]);
  sub_21CB88CA0();
  sub_21CB883D0();
  uint64_t v23 = (uint64_t *)(v0 + v7[22]);
  unint64_t v24 = v23[1];
  uint64_t v49 = *v23;
  unint64_t v50 = v24;
  swift_bridgeObjectRetain();
  sub_21CB88310();
  sub_21CB883D0();
  swift_bridgeObjectRelease();
  sub_21CB883D0();
  uint64_t v49 = v19;
  unint64_t v50 = v18;
  swift_bridgeObjectRetain();
  sub_21CB883D0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v26 = v49;
  unint64_t v25 = v50;
  uint64_t v49 = 0;
  unint64_t v50 = 0xE000000000000000;
  sub_21CB88B70();
  uint64_t v47 = v49;
  unint64_t v48 = v50;
  sub_21CB883D0();
  sub_21CA26A4C(v0 + v7[23], (uint64_t)&v49, &qword_267C951E0);
  sub_21CA26A4C((uint64_t)&v49, (uint64_t)v46, &qword_267C951E0);
  sub_21CA81C54((uint64_t)&v49, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_21CA5E3D0);
  sub_21CA57E34(&qword_267C951E0);
  sub_21CB88310();
  sub_21CB883D0();
  swift_bridgeObjectRelease();
  sub_21CB883D0();
  LOBYTE(v46[0]) = *(unsigned char *)(v0 + 40);
  sub_21CB88CA0();
  sub_21CB883D0();
  LOBYTE(v46[0]) = *(unsigned char *)(v0 + 41);
  sub_21CB88CA0();
  sub_21CB883D0();
  v46[0] = v26;
  v46[1] = v25;
  swift_bridgeObjectRetain();
  sub_21CB883D0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v27 = v46[1];
  uint64_t v40 = v46[0];
  v46[0] = 0;
  v46[1] = 0xE000000000000000;
  sub_21CB88B70();
  swift_bridgeObjectRelease();
  strcpy((char *)v46, "setOnMe: ");
  WORD1(v46[1]) = 0;
  HIDWORD(v46[1]) = -385875968;
  sub_21CB883D0();
  swift_bridgeObjectRelease();
  sub_21CB883D0();
  sub_21CB883D0();
  swift_bridgeObjectRelease();
  sub_21CB883D0();
  sub_21CB883D0();
  sub_21CB883D0();
  sub_21CB883D0();
  swift_bridgeObjectRelease();
  sub_21CB883D0();
  v46[0] = v40;
  v46[1] = v27;
  swift_bridgeObjectRetain();
  sub_21CB883D0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v29 = v46[0];
  uint64_t v28 = v46[1];
  v46[0] = 0;
  v46[1] = 0xE000000000000000;
  sub_21CB88B70();
  swift_bridgeObjectRelease();
  strcpy((char *)v46, "ckRecordName: ");
  HIBYTE(v46[1]) = -18;
  uint64_t v30 = (uint64_t *)(v0 + v7[13]);
  unint64_t v31 = v30[1];
  uint64_t v47 = *v30;
  unint64_t v48 = v31;
  swift_bridgeObjectRetain();
  sub_21CB88310();
  sub_21CB883D0();
  swift_bridgeObjectRelease();
  sub_21CB883D0();
  os_log_type_t v32 = (uint64_t *)(v0 + v7[14]);
  unint64_t v33 = v32[1];
  uint64_t v47 = *v32;
  unint64_t v48 = v33;
  swift_bridgeObjectRetain();
  sub_21CB88310();
  sub_21CB883D0();
  swift_bridgeObjectRelease();
  sub_21CB883D0();
  v46[0] = v29;
  v46[1] = v28;
  swift_bridgeObjectRetain();
  sub_21CB883D0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v35 = v46[0];
  uint64_t v34 = v46[1];
  v46[0] = 0;
  v46[1] = 0xE000000000000000;
  sub_21CB88B70();
  swift_bridgeObjectRelease();
  v46[0] = 0xD000000000000012;
  v46[1] = 0x800000021CB95250;
  LOBYTE(v47) = *(unsigned char *)(v0 + v7[15]);
  sub_21CA57E34(&qword_267C95670);
  sub_21CB88310();
  sub_21CB883D0();
  swift_bridgeObjectRelease();
  sub_21CB883D0();
  v46[0] = v35;
  v46[1] = v34;
  swift_bridgeObjectRetain();
  sub_21CB883D0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v37 = v46[0];
  uint64_t v36 = v46[1];
  strcpy((char *)v46, "muteEndDate: ");
  HIWORD(v46[1]) = -4864;
  sub_21CB883D0();
  swift_bridgeObjectRelease();
  sub_21CB883D0();
  v46[0] = v37;
  v46[1] = v36;
  swift_bridgeObjectRetain();
  sub_21CB883D0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v46[0];
}

uint64_t sub_21CA987B4@<X0>(uint64_t a1@<X0>, char a2@<W1>, char a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v6 = *(void *)(a1 + 8);
  *(void *)a4 = *(void *)a1;
  *(void *)(a4 + 8) = v6;
  *(unsigned char *)(a4 + 42) = *(unsigned char *)(a1 + 42);
  *(unsigned char *)(a4 + 43) = *(unsigned char *)(a1 + 43);
  uint64_t v7 = (int *)type metadata accessor for FMFLocationAlert();
  sub_21CA24E80(a1 + v7[12], a4 + v7[12], (uint64_t *)&unk_267C96ED0);
  *(unsigned char *)(a4 + 40) = *(unsigned char *)(a1 + 40);
  *(unsigned char *)(a4 + 41) = *(unsigned char *)(a1 + 41);
  uint64_t v8 = v7[13];
  uint64_t v10 = *(void *)(a1 + v8);
  uint64_t v9 = *(void *)(a1 + v8 + 8);
  uint64_t v11 = (void *)(a4 + v8);
  *uint64_t v11 = v10;
  v11[1] = v9;
  uint64_t v12 = v7[14];
  uint64_t v13 = *(void *)(a1 + v12);
  uint64_t v14 = *(void *)(a1 + v12 + 8);
  uint64_t v15 = (void *)(a4 + v12);
  *uint64_t v15 = v13;
  v15[1] = v14;
  *(unsigned char *)(a4 + v7[15]) = *(unsigned char *)(a1 + v7[15]);
  *(void *)(a4 + v7[16]) = *(void *)(a1 + v7[16]);
  *(void *)(a4 + v7[17]) = *(void *)(a1 + v7[17]);
  *(void *)(a4 + v7[18]) = *(void *)(a1 + v7[18]);
  uint64_t v16 = v7[19];
  uint64_t v17 = *(void *)(a1 + v16);
  uint64_t v18 = *(void *)(a1 + v16 + 8);
  uint64_t v19 = (void *)(a4 + v16);
  *uint64_t v19 = v17;
  v19[1] = v18;
  *(_OWORD *)(a4 + 16) = *(_OWORD *)(a1 + 16);
  *(void *)(a4 + 32) = *(void *)(a1 + 32);
  sub_21CA24E80(a1 + v7[26], a4 + v7[26], (uint64_t *)&unk_267C951B0);
  sub_21CA24E80(a1 + v7[27], a4 + v7[27], (uint64_t *)&unk_267C951B0);
  uint64_t v20 = v7[22];
  uint64_t v21 = *(void *)(a1 + v20);
  uint64_t v22 = *(void *)(a1 + v20 + 8);
  uint64_t v23 = (void *)(a4 + v20);
  *uint64_t v23 = v21;
  v23[1] = v22;
  sub_21CA26A4C(a1 + v7[23], (uint64_t)v41, &qword_267C951E0);
  sub_21CA26A4C((uint64_t)v41, a4 + v7[23], &qword_267C951E0);
  uint64_t v24 = v7[20];
  uint64_t v25 = *(void *)(a1 + v24);
  uint64_t v26 = *(void *)(a1 + v24 + 8);
  __int16 v27 = *(_WORD *)(a1 + v24 + 16);
  uint64_t v28 = a4 + v24;
  *(void *)uint64_t v28 = v25;
  *(void *)(v28 + 8) = v26;
  *(_WORD *)(v28 + 16) = v27;
  *(unsigned char *)(a4 + v7[21]) = *(unsigned char *)(a1 + v7[21]);
  *(unsigned char *)(a4 + v7[24]) = a2;
  *(unsigned char *)(a4 + v7[25]) = a3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_21CA81C54((uint64_t)v41, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_21CA5E3D0);
  swift_bridgeObjectRetain();
  uint64_t v29 = FMFLocationAlert.debugDescription.getter();
  unint64_t v31 = v30;
  if (qword_267C94990 != -1) {
    swift_once();
  }
  uint64_t v32 = sub_21CB880A0();
  sub_21CA4CC18(v32, (uint64_t)qword_267CA5368);
  swift_bridgeObjectRetain();
  unint64_t v33 = sub_21CB88070();
  os_log_type_t v34 = sub_21CB88880();
  if (os_log_type_enabled(v33, v34))
  {
    uint64_t v35 = (uint8_t *)swift_slowAlloc();
    uint64_t v36 = swift_slowAlloc();
    uint64_t v40 = v36;
    *(_DWORD *)uint64_t v35 = 136315138;
    swift_bridgeObjectRetain();
    sub_21CA4E450(v29, v31, &v40);
    sub_21CB889C0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_21CA00000, v33, v34, "FMFFence: initialized from fence %s", v35, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x21D4B6B70](v36, -1, -1);
    MEMORY[0x21D4B6B70](v35, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  return sub_21CA9E4B4(a1, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
}

uint64_t FMFLocationAlert.encode(to:)(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_21CB87590();
  uint64_t v41 = *(void *)(v4 - 8);
  uint64_t v42 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v39 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_21CA57E34((uint64_t *)&unk_267C951B0);
  uint64_t v7 = MEMORY[0x270FA5388](v6 - 8);
  uint64_t v40 = (uint64_t)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v32 - v9;
  uint64_t v11 = sub_21CA57E34(&qword_267C95678);
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21CA2B2CC(a1, a1[3]);
  sub_21CA99760();
  uint64_t v15 = v2;
  sub_21CB890C0();
  v45[0] = *v2;
  LOBYTE(v44[0]) = 0;
  uint64_t v16 = sub_21CA57E34((uint64_t *)&unk_267C95220);
  uint64_t v17 = sub_21CA4A500((unint64_t *)&qword_267C94A70, (uint64_t *)&unk_267C95220);
  uint64_t v18 = v48;
  sub_21CB88EB0();
  if (v18) {
    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
  uint64_t v38 = v10;
  uint64_t v48 = v12;
  LOBYTE(v45[0]) = 6;
  sub_21CB88E80();
  uint64_t v37 = v17;
  LOBYTE(v45[0]) = 7;
  sub_21CB88E80();
  uint64_t v36 = v16;
  uint64_t v20 = type metadata accessor for FMFLocationAlert();
  LOBYTE(v45[0]) = 8;
  sub_21CA57E34((uint64_t *)&unk_267C96ED0);
  sub_21CA997B4();
  sub_21CB88EB0();
  uint64_t v35 = (int *)v20;
  LOBYTE(v45[0]) = 4;
  sub_21CB88E70();
  unint64_t v33 = v14;
  uint64_t v34 = v11;
  swift_bridgeObjectRelease();
  LOBYTE(v45[0]) = 5;
  sub_21CB88E70();
  swift_bridgeObjectRelease();
  uint64_t v21 = v35;
  v45[0] = *(_OWORD *)((char *)v15 + v35[13]);
  LOBYTE(v44[0]) = 9;
  sub_21CB88EB0();
  v45[0] = *(_OWORD *)((char *)v15 + v21[14]);
  LOBYTE(v44[0]) = 10;
  sub_21CB88EB0();
  switch(*((unsigned char *)v15 + v21[15]))
  {
    case 3:
      break;
    default:
      LOBYTE(v45[0]) = 11;
      sub_21CB88E70();
      swift_bridgeObjectRelease();
      break;
  }
  LOBYTE(v45[0]) = 1;
  sub_21CB88E90();
  uint64_t v32 = v15;
  LOBYTE(v45[0]) = 2;
  sub_21CB88E90();
  LOBYTE(v45[0]) = 3;
  sub_21CB88E90();
  uint64_t v22 = (uint64_t)v38;
  sub_21CA24E80((uint64_t)v32 + v35[26], (uint64_t)v38, (uint64_t *)&unk_267C951B0);
  uint64_t v23 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v41 + 48);
  if (v23(v22, 1, v42) != 1)
  {
    uint64_t v24 = (uint64_t)v38;
    uint64_t v25 = (void *)sub_21CB87510();
    (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v24, v42);
    objc_msgSend(v25, sel_fm_epoch);
    LOBYTE(v45[0]) = 12;
    sub_21CB88EC0();
  }
  uint64_t v26 = v40;
  sub_21CA24E80((uint64_t)v32 + v35[27], v40, (uint64_t *)&unk_267C951B0);
  if (v23(v26, 1, v42) == 1)
  {
    sub_21CA1B88C(v40, (uint64_t *)&unk_267C951B0);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v41 + 32))(v39, v40, v42);
    LOBYTE(v45[0]) = 21;
    sub_21CA9F6E8(&qword_267C95150, MEMORY[0x263F07490]);
    sub_21CB88EB0();
    (*(void (**)(char *, uint64_t))(v41 + 8))(v39, v42);
  }
  *(void *)&v45[0] = *(void *)((char *)v32 + v35[16]);
  LOBYTE(v44[0]) = 13;
  sub_21CA57E34(&qword_267C95130);
  sub_21CA4A5B4();
  sub_21CB88EB0();
  *(void *)&v45[0] = *(void *)((char *)v32 + v35[17]);
  LOBYTE(v44[0]) = 14;
  sub_21CB88EB0();
  *(void *)&v45[0] = *(void *)((char *)v32 + v35[18]);
  LOBYTE(v44[0]) = 15;
  sub_21CB88EB0();
  v45[0] = *(_OWORD *)((char *)v32 + v35[19]);
  LOBYTE(v44[0]) = 16;
  sub_21CB88EB0();
  long long v47 = *(_OWORD *)((char *)v32 + v35[22]);
  char v46 = 19;
  sub_21CB88EB0();
  sub_21CA26A4C((uint64_t)v32 + v35[23], (uint64_t)v45, &qword_267C951E0);
  sub_21CA26A4C((uint64_t)v45, (uint64_t)v44, &qword_267C951E0);
  char v43 = 20;
  sub_21CA57E34(&qword_267C951E0);
  sub_21CA764F4();
  sub_21CB88EB0();
  uint64_t v27 = v35[21];
  uint64_t v28 = *((unsigned __int8 *)v32 + v27);
  LOBYTE(v44[0]) = *((unsigned char *)v32 + v27);
  sub_21CB88310();
  LOBYTE(v44[0]) = 18;
  sub_21CB88E70();
  swift_bridgeObjectRelease();
  uint64_t v29 = (uint64_t *)((char *)v32 + v35[20]);
  uint64_t v30 = v29[1];
  if (v30) {
    uint64_t v31 = *v29;
  }
  else {
    uint64_t v31 = 0;
  }
  v44[0] = v31;
  v44[1] = v30;
  char v43 = 17;
  sub_21CB88EB0();
  v44[0] = v28;
  sub_21CB88F00();
  LOBYTE(v44[0]) = 18;
  sub_21CB88E70();
  (*(void (**)(char *, uint64_t))(v48 + 8))(v33, v34);
  return swift_bridgeObjectRelease();
}

uint64_t sub_21CA996C4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FMFLocationAlert.init(from:)(a1, a2);
}

uint64_t sub_21CA996DC(void *a1)
{
  return FMFLocationAlert.encode(to:)(a1);
}

uint64_t sub_21CA996FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FMFSchedule();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_21CA99760()
{
  unint64_t result = qword_267C95650;
  if (!qword_267C95650)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C95650);
  }
  return result;
}

unint64_t sub_21CA997B4()
{
  unint64_t result = qword_267C95680;
  if (!qword_267C95680)
  {
    sub_21CA5EEBC((uint64_t *)&unk_267C96ED0);
    sub_21CA9F6E8(&qword_267C95688, (void (*)(uint64_t))type metadata accessor for FMFSchedule);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C95680);
  }
  return result;
}

uint64_t _s7FMFCore16FMFLocationAlertV2eeoiySbAC_ACtFZ_0(void *a1, void *a2)
{
  uint64_t v4 = type metadata accessor for FMFSchedule();
  uint64_t v264 = *(void *)(v4 - 8);
  uint64_t v265 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v263 = (uint64_t *)((char *)&v258 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = sub_21CA57E34((uint64_t *)&unk_267C96ED0);
  MEMORY[0x270FA5388](v6 - 8);
  unint64_t v266 = (uint64_t *)((char *)&v258 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v262 = sub_21CA57E34(&qword_267C956F8);
  MEMORY[0x270FA5388](v262);
  uint64_t v9 = (char *)&v258 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_21CB87590();
  uint64_t v269 = *(void *)(v10 - 8);
  uint64_t v270 = v10;
  MEMORY[0x270FA5388](v10);
  uint64_t v260 = (char *)&v258 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_21CA57E34((uint64_t *)&unk_267C951B0);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v261 = (uint64_t)&v258 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v267 = sub_21CA57E34(&qword_267C95108);
  MEMORY[0x270FA5388](v267);
  uint64_t v268 = (uint64_t)&v258 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for FMFLocationAlert();
  uint64_t v16 = MEMORY[0x270FA5388](v15);
  uint64_t v283 = (uint64_t)&v258 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  uint64_t v284 = (uint64_t)&v258 - v19;
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  uint64_t v285 = (uint64_t)&v258 - v21;
  uint64_t v22 = MEMORY[0x270FA5388](v20);
  uint64_t v282 = (uint64_t)&v258 - v23;
  uint64_t v24 = MEMORY[0x270FA5388](v22);
  uint64_t v289 = (uint64_t)&v258 - v25;
  uint64_t v26 = MEMORY[0x270FA5388](v24);
  uint64_t v288 = (uint64_t)&v258 - v27;
  uint64_t v28 = MEMORY[0x270FA5388](v26);
  uint64_t v286 = (uint64_t)&v258 - v29;
  uint64_t v30 = MEMORY[0x270FA5388](v28);
  uint64_t v298 = (uint64_t)&v258 - v31;
  uint64_t v32 = MEMORY[0x270FA5388](v30);
  uint64_t v287 = (uint64_t)&v258 - v33;
  uint64_t v34 = MEMORY[0x270FA5388](v32);
  uint64_t v290 = (uint64_t)&v258 - v35;
  uint64_t v36 = MEMORY[0x270FA5388](v34);
  uint64_t v291 = (char *)&v258 - v37;
  uint64_t v38 = MEMORY[0x270FA5388](v36);
  uint64_t v39 = MEMORY[0x270FA5388](v38);
  uint64_t v280 = (uint64_t)&v258 - v40;
  uint64_t v41 = MEMORY[0x270FA5388](v39);
  uint64_t v297 = (char *)&v258 - v42;
  uint64_t v43 = MEMORY[0x270FA5388](v41);
  uint64_t v44 = MEMORY[0x270FA5388](v43);
  uint64_t v279 = (uint64_t)&v258 - v45;
  uint64_t v46 = MEMORY[0x270FA5388](v44);
  uint64_t v292 = (uint64_t)&v258 - v47;
  uint64_t v48 = MEMORY[0x270FA5388](v46);
  uint64_t v308 = (uint64_t)&v258 - v49;
  uint64_t v50 = MEMORY[0x270FA5388](v48);
  uint64_t v293 = (uint64_t)&v258 - v51;
  uint64_t v52 = MEMORY[0x270FA5388](v50);
  uint64_t v294 = (uint64_t)&v258 - v53;
  uint64_t v54 = MEMORY[0x270FA5388](v52);
  uint64_t v296 = (uint64_t)&v258 - v55;
  uint64_t v56 = MEMORY[0x270FA5388](v54);
  uint64_t v295 = (uint64_t)&v258 - v57;
  uint64_t v58 = MEMORY[0x270FA5388](v56);
  uint64_t v276 = (uint64_t)&v258 - v59;
  uint64_t v60 = MEMORY[0x270FA5388](v58);
  uint64_t v277 = (uint64_t)&v258 - v61;
  uint64_t v62 = MEMORY[0x270FA5388](v60);
  uint64_t v299 = (uint64_t)&v258 - v63;
  uint64_t v64 = MEMORY[0x270FA5388](v62);
  uint64_t v301 = (uint64_t)&v258 - v65;
  uint64_t v66 = MEMORY[0x270FA5388](v64);
  uint64_t v300 = (uint64_t)&v258 - v67;
  uint64_t v68 = MEMORY[0x270FA5388](v66);
  uint64_t v302 = (uint64_t)&v258 - v69;
  uint64_t v70 = MEMORY[0x270FA5388](v68);
  uint64_t v303 = (uint64_t)&v258 - v71;
  uint64_t v72 = MEMORY[0x270FA5388](v70);
  uint64_t v275 = (char *)&v258 - v73;
  uint64_t v74 = MEMORY[0x270FA5388](v72);
  uint64_t v304 = (uint64_t)&v258 - v75;
  uint64_t v76 = MEMORY[0x270FA5388](v74);
  uint64_t v305 = (uint64_t)&v258 - v77;
  uint64_t v78 = MEMORY[0x270FA5388](v76);
  uint64_t v306 = (uint64_t)&v258 - v79;
  uint64_t v80 = MEMORY[0x270FA5388](v78);
  uint64_t v307 = (uint64_t)&v258 - v81;
  uint64_t v82 = MEMORY[0x270FA5388](v80);
  uint64_t v274 = (uint64_t)&v258 - v83;
  MEMORY[0x270FA5388](v82);
  uint64_t v85 = MEMORY[0x270FA5388]((char *)&v258 - v84);
  uint64_t v272 = (uint64_t)&v258 - v86;
  uint64_t v87 = MEMORY[0x270FA5388](v85);
  uint64_t v271 = (char *)&v258 - v88;
  uint64_t v89 = MEMORY[0x270FA5388](v87);
  id v91 = (double *)((char *)&v258 - v90);
  uint64_t v92 = MEMORY[0x270FA5388](v89);
  uint64_t v94 = (double *)((char *)&v258 - v93);
  uint64_t v95 = MEMORY[0x270FA5388](v92);
  int v97 = (double *)((char *)&v258 - v96);
  uint64_t v98 = MEMORY[0x270FA5388](v95);
  uint64_t v100 = (double *)((char *)&v258 - v99);
  uint64_t v101 = MEMORY[0x270FA5388](v98);
  unint64_t v103 = (double *)((char *)&v258 - v102);
  uint64_t v104 = MEMORY[0x270FA5388](v101);
  uint64_t v107 = (double *)((char *)&v258 - v105);
  os_log_type_t v309 = a1;
  uint64_t v310 = a2;
  uint64_t v108 = a1[1];
  uint64_t v109 = a2[1];
  uint64_t v281 = v110;
  uint64_t v278 = v111;
  uint64_t v273 = v104;
  if (!v108)
  {
    if (!v109)
    {
LABEL_10:
      uint64_t v258 = v9;
      uint64_t v259 = v106;
      uint64_t v113 = v309;
      sub_21CA7E0A0((uint64_t)v309, (uint64_t)&v258 - v105);
      uint64_t v114 = v310;
      sub_21CA7E0A0((uint64_t)v310, (uint64_t)v103);
      goto LABEL_11;
    }
LABEL_8:
    uint64_t v113 = v309;
    sub_21CA7E0A0((uint64_t)v309, (uint64_t)&v258 - v105);
    uint64_t v114 = v310;
    sub_21CA7E0A0((uint64_t)v310, (uint64_t)v103);
    goto LABEL_9;
  }
  if (!v109) {
    goto LABEL_8;
  }
  if (*v309 == *v310 && v108 == v109) {
    goto LABEL_10;
  }
  uint64_t v258 = v9;
  uint64_t v259 = v106;
  char v112 = sub_21CB88F50();
  uint64_t v113 = v309;
  sub_21CA7E0A0((uint64_t)v309, (uint64_t)v107);
  uint64_t v114 = v310;
  sub_21CA7E0A0((uint64_t)v310, (uint64_t)v103);
  if ((v112 & 1) == 0)
  {
LABEL_9:
    sub_21CA9E4B4((uint64_t)v103, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
    sub_21CA9E4B4((uint64_t)v107, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
    sub_21CA7E0A0((uint64_t)v113, (uint64_t)v100);
    sub_21CA7E0A0((uint64_t)v114, (uint64_t)v97);
LABEL_22:
    sub_21CA9E4B4((uint64_t)v97, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
    sub_21CA9E4B4((uint64_t)v100, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
    sub_21CA7E0A0((uint64_t)v113, (uint64_t)v94);
    sub_21CA7E0A0((uint64_t)v114, (uint64_t)v91);
    uint64_t v119 = (uint64_t)v271;
    goto LABEL_23;
  }
LABEL_11:
  double v115 = v107[2];
  sub_21CA9E4B4((uint64_t)v107, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
  double v116 = v103[2];
  sub_21CA9E4B4((uint64_t)v103, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
  sub_21CA7E0A0((uint64_t)v113, (uint64_t)v100);
  sub_21CA7E0A0((uint64_t)v114, (uint64_t)v97);
  if (v115 != v116) {
    goto LABEL_22;
  }
  double v117 = v100[3];
  sub_21CA9E4B4((uint64_t)v100, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
  double v118 = v97[3];
  sub_21CA9E4B4((uint64_t)v97, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
  sub_21CA7E0A0((uint64_t)v113, (uint64_t)v94);
  sub_21CA7E0A0((uint64_t)v114, (uint64_t)v91);
  uint64_t v119 = (uint64_t)v271;
  if (v117 != v118)
  {
LABEL_23:
    sub_21CA9E4B4((uint64_t)v91, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
    sub_21CA9E4B4((uint64_t)v94, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
    sub_21CA7E0A0((uint64_t)v113, v119);
    uint64_t v122 = v272;
    sub_21CA7E0A0((uint64_t)v114, v272);
    uint64_t v123 = v297;
    uint64_t v124 = v308;
    goto LABEL_24;
  }
  double v120 = v94[4];
  sub_21CA9E4B4((uint64_t)v94, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
  double v121 = v91[4];
  sub_21CA9E4B4((uint64_t)v91, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
  sub_21CA7E0A0((uint64_t)v113, v119);
  uint64_t v122 = v272;
  sub_21CA7E0A0((uint64_t)v114, v272);
  uint64_t v123 = v297;
  uint64_t v124 = v308;
  if (v120 != v121)
  {
LABEL_24:
    sub_21CA9E4B4(v122, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
    sub_21CA9E4B4(v119, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
    uint64_t v127 = v273;
    sub_21CA7E0A0((uint64_t)v113, v273);
    uint64_t v130 = v274;
    sub_21CA7E0A0((uint64_t)v114, v274);
LABEL_25:
    sub_21CA9E4B4(v130, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
    sub_21CA9E4B4(v127, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
    uint64_t v135 = v307;
    sub_21CA7E0A0((uint64_t)v113, v307);
    uint64_t v134 = v306;
    sub_21CA7E0A0((uint64_t)v114, v306);
    uint64_t v136 = v124;
LABEL_26:
    sub_21CA9E4B4(v134, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
    sub_21CA9E4B4(v135, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
LABEL_27:
    uint64_t v142 = v305;
    uint64_t v144 = (uint64_t)v275;
    sub_21CA7E0A0((uint64_t)v113, v305);
    uint64_t v143 = v304;
    sub_21CA7E0A0((uint64_t)v114, v304);
LABEL_28:
    sub_21CA9E4B4(v143, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
    sub_21CA9E4B4(v142, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
LABEL_29:
    sub_21CA7E0A0((uint64_t)v113, v144);
    uint64_t v145 = v303;
    sub_21CA7E0A0((uint64_t)v114, v303);
LABEL_30:
    sub_21CA9E4B4(v145, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
    sub_21CA9E4B4(v144, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
LABEL_31:
    uint64_t v146 = v302;
    sub_21CA7E0A0((uint64_t)v113, v302);
    uint64_t v147 = v300;
    sub_21CA7E0A0((uint64_t)v114, v300);
LABEL_32:
    uint64_t v148 = v136;
    uint64_t v149 = (uint64_t)v123;
    uint64_t v150 = v298;
    sub_21CA9E4B4(v147, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
    sub_21CA9E4B4(v146, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
LABEL_33:
    uint64_t v151 = v301;
    sub_21CA7E0A0((uint64_t)v113, v301);
    uint64_t v152 = v299;
    sub_21CA7E0A0((uint64_t)v114, v299);
LABEL_34:
    sub_21CA9E4B4(v152, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
    sub_21CA9E4B4(v151, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
    uint64_t v153 = v276;
LABEL_35:
    uint64_t v154 = v150;
    uint64_t v155 = v277;
    sub_21CA7E0A0((uint64_t)v113, v277);
    sub_21CA7E0A0((uint64_t)v114, v153);
    uint64_t v156 = v149;
LABEL_36:
    sub_21CA9E4B4(v153, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
    sub_21CA9E4B4(v155, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
    uint64_t v157 = v295;
    sub_21CA7E0A0((uint64_t)v113, v295);
    uint64_t v158 = v296;
    sub_21CA7E0A0((uint64_t)v114, v296);
LABEL_37:
    sub_21CA9E4B4(v158, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
    sub_21CA9E4B4(v157, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
LABEL_38:
    uint64_t v159 = v294;
    sub_21CA7E0A0((uint64_t)v113, v294);
    uint64_t v160 = v293;
    sub_21CA7E0A0((uint64_t)v114, v293);
    uint64_t v161 = (uint64_t)v291;
LABEL_39:
    sub_21CA9E4B4(v160, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
    sub_21CA9E4B4(v159, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
LABEL_40:
    sub_21CA7E0A0((uint64_t)v113, v148);
    uint64_t v162 = v292;
    sub_21CA7E0A0((uint64_t)v114, v292);
    uint64_t v163 = v289;
LABEL_41:
    sub_21CA9E4B4(v162, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
    sub_21CA9E4B4(v148, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
    uint64_t v164 = v279;
    sub_21CA7E0A0((uint64_t)v113, v279);
    uint64_t v165 = v278;
    sub_21CA7E0A0((uint64_t)v114, v278);
LABEL_42:
    sub_21CA9E4B4(v165, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
    sub_21CA9E4B4(v164, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
    sub_21CA7E0A0((uint64_t)v113, v156);
    uint64_t v166 = v280;
    sub_21CA7E0A0((uint64_t)v114, v280);
    uint64_t v167 = v290;
LABEL_43:
    sub_21CA9E4B4(v166, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
    sub_21CA9E4B4(v156, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
    uint64_t v168 = v281;
    sub_21CA7E0A0((uint64_t)v113, v281);
    sub_21CA7E0A0((uint64_t)v114, v161);
    uint64_t v169 = v288;
LABEL_44:
    sub_21CA9E4B4(v161, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
    sub_21CA9E4B4(v168, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
    sub_21CA7E0A0((uint64_t)v113, v167);
    uint64_t v170 = v287;
    sub_21CA7E0A0((uint64_t)v114, v287);
LABEL_45:
    sub_21CA9E4B4(v170, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
    sub_21CA9E4B4(v167, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
    uint64_t v171 = v285;
LABEL_46:
    sub_21CA7E0A0((uint64_t)v113, v154);
    uint64_t v172 = v286;
    sub_21CA7E0A0((uint64_t)v114, v286);
LABEL_47:
    sub_21CA9E4B4(v172, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
    sub_21CA9E4B4(v154, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
LABEL_48:
    sub_21CA7E0A0((uint64_t)v113, v169);
    sub_21CA7E0A0((uint64_t)v114, v163);
LABEL_49:
    sub_21CA9E4B4(v163, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
    sub_21CA9E4B4(v169, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
LABEL_50:
    uint64_t v173 = v282;
    sub_21CA7E0A0((uint64_t)v113, v282);
    sub_21CA7E0A0((uint64_t)v114, v171);
LABEL_51:
    sub_21CA9E4B4(v171, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
    sub_21CA9E4B4(v173, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
LABEL_52:
    uint64_t v174 = v284;
    sub_21CA7E0A0((uint64_t)v113, v284);
    uint64_t v175 = v283;
    sub_21CA7E0A0((uint64_t)v114, v283);
LABEL_53:
    sub_21CA9E4B4(v175, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
    sub_21CA9E4B4(v174, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
    goto LABEL_54;
  }
  int v125 = *(unsigned __int8 *)(v119 + 42);
  sub_21CA9E4B4(v119, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
  int v126 = *(unsigned __int8 *)(v122 + 42);
  sub_21CA9E4B4(v122, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
  uint64_t v127 = v273;
  sub_21CA7E0A0((uint64_t)v113, v273);
  uint64_t v128 = v274;
  sub_21CA7E0A0((uint64_t)v114, v274);
  BOOL v129 = v125 == v126;
  uint64_t v130 = v128;
  uint64_t v124 = v308;
  if (!v129) {
    goto LABEL_25;
  }
  int v131 = *(unsigned __int8 *)(v127 + 43);
  sub_21CA9E4B4(v127, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
  int v132 = *(unsigned __int8 *)(v128 + 43);
  sub_21CA9E4B4(v128, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
  uint64_t v133 = v307;
  sub_21CA7E0A0((uint64_t)v113, v307);
  uint64_t v134 = v306;
  sub_21CA7E0A0((uint64_t)v114, v306);
  BOOL v129 = v131 == v132;
  uint64_t v135 = v133;
  uint64_t v136 = v308;
  if (!v129) {
    goto LABEL_26;
  }
  uint64_t v137 = v259[16];
  uint64_t v138 = *(void **)(v133 + v137);
  uint64_t v139 = v135;
  uint64_t v140 = *(void **)(v134 + v137);
  if (!v138)
  {
    swift_bridgeObjectRetain();
    sub_21CA9E4B4(v134, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
    sub_21CA9E4B4(v139, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
    if (!v140)
    {
      uint64_t v142 = v305;
      sub_21CA7E0A0((uint64_t)v113, v305);
      uint64_t v143 = v304;
      sub_21CA7E0A0((uint64_t)v114, v304);
      uint64_t v144 = (uint64_t)v275;
      goto LABEL_61;
    }
LABEL_59:
    swift_bridgeObjectRelease();
    goto LABEL_27;
  }
  if (!v140)
  {
    swift_bridgeObjectRetain();
    sub_21CA9E4B4(v306, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
    sub_21CA9E4B4(v307, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
    goto LABEL_59;
  }
  char v141 = sub_21CA4C01C(v138, v140);
  swift_bridgeObjectRetain();
  sub_21CA9E4B4(v306, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
  uint64_t v136 = v308;
  sub_21CA9E4B4(v307, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
  swift_bridgeObjectRelease();
  uint64_t v142 = v305;
  sub_21CA7E0A0((uint64_t)v113, v305);
  uint64_t v143 = v304;
  sub_21CA7E0A0((uint64_t)v114, v304);
  uint64_t v144 = (uint64_t)v275;
  if ((v141 & 1) == 0) {
    goto LABEL_28;
  }
LABEL_61:
  uint64_t v178 = v259[17];
  uint64_t v179 = *(void *)(v143 + v178);
  if (!*(void *)(v142 + v178))
  {
    swift_bridgeObjectRetain();
    sub_21CA9E4B4(v143, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
    sub_21CA9E4B4(v142, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
    if (!v179)
    {
      sub_21CA7E0A0((uint64_t)v113, v144);
      uint64_t v145 = v303;
      sub_21CA7E0A0((uint64_t)v114, v303);
      goto LABEL_70;
    }
LABEL_68:
    swift_bridgeObjectRelease();
    goto LABEL_29;
  }
  if (!v179)
  {
    swift_bridgeObjectRetain();
    sub_21CA9E4B4(v304, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
    sub_21CA9E4B4(v305, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
    goto LABEL_68;
  }
  char v180 = sub_21CA4C01C(*(void **)(v142 + v178), *(void **)(v143 + v178));
  swift_bridgeObjectRetain();
  sub_21CA9E4B4(v304, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
  uint64_t v136 = v308;
  sub_21CA9E4B4(v305, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
  swift_bridgeObjectRelease();
  sub_21CA7E0A0((uint64_t)v113, v144);
  uint64_t v145 = v303;
  sub_21CA7E0A0((uint64_t)v114, v303);
  if ((v180 & 1) == 0) {
    goto LABEL_30;
  }
LABEL_70:
  uint64_t v181 = v259[18];
  uint64_t v182 = *(void **)(v144 + v181);
  uint64_t v183 = *(void **)(v145 + v181);
  if (v182)
  {
    if (!v183)
    {
      swift_bridgeObjectRetain();
      sub_21CA9E4B4(v303, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
      sub_21CA9E4B4(v144, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
      swift_bridgeObjectRelease();
      goto LABEL_31;
    }
    char v184 = sub_21CA4C01C(v182, v183);
    swift_bridgeObjectRetain();
    sub_21CA9E4B4(v303, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
    uint64_t v136 = v308;
    sub_21CA9E4B4(v144, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
    swift_bridgeObjectRelease();
    uint64_t v146 = v302;
    sub_21CA7E0A0((uint64_t)v113, v302);
    uint64_t v147 = v300;
    sub_21CA7E0A0((uint64_t)v114, v300);
    if ((v184 & 1) == 0) {
      goto LABEL_32;
    }
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_21CA9E4B4(v145, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
    sub_21CA9E4B4(v144, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
    if (v183)
    {
      swift_bridgeObjectRelease();
      goto LABEL_31;
    }
    uint64_t v146 = v302;
    sub_21CA7E0A0((uint64_t)v113, v302);
    uint64_t v147 = v300;
    sub_21CA7E0A0((uint64_t)v114, v300);
  }
  uint64_t v185 = v259[19];
  long long v186 = (void *)(v146 + v185);
  uint64_t v187 = *(void *)(v146 + v185 + 8);
  uint64_t v188 = (void *)(v147 + v185);
  uint64_t v189 = v188[1];
  uint64_t v148 = v136;
  if (!v187)
  {
    uint64_t v149 = (uint64_t)v123;
    swift_bridgeObjectRetain();
    sub_21CA9E4B4(v147, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
    sub_21CA9E4B4(v146, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
    uint64_t v150 = v298;
    if (v189)
    {
      swift_bridgeObjectRelease();
      goto LABEL_33;
    }
    goto LABEL_85;
  }
  if (!v189)
  {
    uint64_t v149 = (uint64_t)v123;
    uint64_t v150 = v298;
    swift_bridgeObjectRetain();
    sub_21CA9E4B4(v147, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
    sub_21CA9E4B4(v302, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
    swift_bridgeObjectRelease();
    goto LABEL_33;
  }
  if (*v186 == *v188 && v187 == v189)
  {
    uint64_t v149 = (uint64_t)v123;
    swift_bridgeObjectRetain();
    sub_21CA9E4B4(v300, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
    sub_21CA9E4B4(v302, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
    swift_bridgeObjectRelease();
    uint64_t v150 = v298;
LABEL_85:
    uint64_t v151 = v301;
    sub_21CA7E0A0((uint64_t)v113, v301);
    uint64_t v152 = v299;
    sub_21CA7E0A0((uint64_t)v114, v299);
    goto LABEL_88;
  }
  uint64_t v149 = (uint64_t)v123;
  uint64_t v150 = v298;
  char v190 = sub_21CB88F50();
  swift_bridgeObjectRetain();
  sub_21CA9E4B4(v300, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
  uint64_t v148 = v308;
  sub_21CA9E4B4(v302, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
  swift_bridgeObjectRelease();
  uint64_t v151 = v301;
  sub_21CA7E0A0((uint64_t)v113, v301);
  uint64_t v152 = v299;
  sub_21CA7E0A0((uint64_t)v114, v299);
  if ((v190 & 1) == 0) {
    goto LABEL_34;
  }
LABEL_88:
  uint64_t v191 = v259[20];
  uint64_t v192 = (void *)(v151 + v191);
  uint64_t v193 = *(void *)(v151 + v191 + 8);
  uint64_t v194 = (void *)(v152 + v191);
  uint64_t v195 = v194[1];
  if (!v193)
  {
    swift_bridgeObjectRetain();
    sub_21CA9E4B4(v152, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
    sub_21CA9E4B4(v301, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
    if (!v195)
    {
      swift_bridgeObjectRelease();
      uint64_t v154 = v150;
      goto LABEL_100;
    }
LABEL_96:
    uint64_t v153 = v276;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_35;
  }
  if (!v195)
  {
    swift_bridgeObjectRetain_n();
    sub_21CA9E4B4(v152, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
    sub_21CA9E4B4(v301, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
    swift_bridgeObjectRelease();
    goto LABEL_96;
  }
  uint64_t v154 = v150;
  if (*v192 == *v194 && v193 == v195)
  {
    swift_bridgeObjectRetain_n();
    sub_21CA9E4B4(v299, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
    sub_21CA9E4B4(v301, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
    swift_bridgeObjectRelease_n();
LABEL_100:
    uint64_t v155 = v277;
    sub_21CA7E0A0((uint64_t)v113, v277);
    uint64_t v153 = v276;
    sub_21CA7E0A0((uint64_t)v114, v276);
    uint64_t v156 = v149;
    goto LABEL_101;
  }
  char v196 = sub_21CB88F50();
  swift_bridgeObjectRetain_n();
  sub_21CA9E4B4(v299, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
  uint64_t v148 = v308;
  sub_21CA9E4B4(v301, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
  swift_bridgeObjectRelease_n();
  uint64_t v155 = v277;
  sub_21CA7E0A0((uint64_t)v113, v277);
  uint64_t v153 = v276;
  sub_21CA7E0A0((uint64_t)v114, v276);
  uint64_t v156 = v149;
  if ((v196 & 1) == 0) {
    goto LABEL_36;
  }
LABEL_101:
  uint64_t v197 = v259[21];
  int v198 = *(unsigned __int8 *)(v155 + v197);
  int v199 = *(unsigned __int8 *)(v153 + v197);
  sub_21CA9E4B4(v153, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
  sub_21CA9E4B4(v155, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
  uint64_t v157 = v295;
  sub_21CA7E0A0((uint64_t)v113, v295);
  uint64_t v158 = v296;
  sub_21CA7E0A0((uint64_t)v114, v296);
  BOOL v129 = v198 == v199;
  uint64_t v148 = v308;
  if (!v129) {
    goto LABEL_37;
  }
  uint64_t v200 = v259[22];
  uint64_t v201 = (void *)(v157 + v200);
  uint64_t v202 = *(void *)(v157 + v200 + 8);
  uint64_t v203 = (void *)(v158 + v200);
  uint64_t v204 = v203[1];
  if (!v202)
  {
    swift_bridgeObjectRetain();
    sub_21CA9E4B4(v296, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
    sub_21CA9E4B4(v157, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
    if (!v204) {
      goto LABEL_109;
    }
LABEL_111:
    swift_bridgeObjectRelease();
    uint64_t v113 = v309;
    uint64_t v114 = v310;
    uint64_t v156 = (uint64_t)v297;
    uint64_t v154 = v298;
    uint64_t v148 = v308;
    goto LABEL_38;
  }
  if (!v204)
  {
    swift_bridgeObjectRetain();
    sub_21CA9E4B4(v296, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
    sub_21CA9E4B4(v295, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
    goto LABEL_111;
  }
  if (*v201 == *v203 && v202 == v204)
  {
    swift_bridgeObjectRetain();
    sub_21CA9E4B4(v296, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
    sub_21CA9E4B4(v295, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
    swift_bridgeObjectRelease();
LABEL_109:
    uint64_t v159 = v294;
    sub_21CA7E0A0((uint64_t)v309, v294);
    uint64_t v160 = v293;
    sub_21CA7E0A0((uint64_t)v310, v293);
    goto LABEL_113;
  }
  LODWORD(v307) = sub_21CB88F50();
  swift_bridgeObjectRetain();
  sub_21CA9E4B4(v296, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
  sub_21CA9E4B4(v295, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
  swift_bridgeObjectRelease();
  uint64_t v113 = v309;
  uint64_t v159 = v294;
  sub_21CA7E0A0((uint64_t)v309, v294);
  uint64_t v114 = v310;
  uint64_t v160 = v293;
  sub_21CA7E0A0((uint64_t)v310, v293);
  uint64_t v156 = (uint64_t)v297;
  uint64_t v154 = v298;
  uint64_t v161 = (uint64_t)v291;
  uint64_t v148 = v308;
  if ((v307 & 1) == 0) {
    goto LABEL_39;
  }
LABEL_113:
  uint64_t v205 = v259;
  sub_21CA26A4C(v159 + v259[23], (uint64_t)v318, &qword_267C951E0);
  sub_21CA26A4C(v160 + v205[23], (uint64_t)v319, &qword_267C951E0);
  sub_21CA26A4C((uint64_t)v318, (uint64_t)v317, &qword_267C951E0);
  sub_21CA26A4C((uint64_t)v319, (uint64_t)&v317[304], &qword_267C951E0);
  sub_21CA26A4C((uint64_t)v318, (uint64_t)v320, &qword_267C951E0);
  if (sub_21CA76890((uint64_t)v320) == 1)
  {
    sub_21CA81C54((uint64_t)v319, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_21CA5E3D0);
    sub_21CA9E4B4(v293, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
    sub_21CA9E4B4(v294, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
    sub_21CA26A4C((uint64_t)&v317[304], (uint64_t)v316, &qword_267C951E0);
    sub_21CA26A4C((uint64_t)v316, (uint64_t)v315, &qword_267C951E0);
    if (sub_21CA76890((uint64_t)v315) == 1)
    {
      sub_21CA26A4C((uint64_t)v317, (uint64_t)v314, &qword_267C951E0);
      sub_21CA81C54((uint64_t)v314, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_21CA1358C);
      uint64_t v148 = v308;
      sub_21CA7E0A0((uint64_t)v309, v308);
      uint64_t v162 = v292;
      sub_21CA7E0A0((uint64_t)v310, v292);
      goto LABEL_120;
    }
LABEL_118:
    memcpy(v315, v317, sizeof(v315));
    sub_21CA768A8((uint64_t)v315);
    uint64_t v113 = v309;
    uint64_t v114 = v310;
    uint64_t v156 = (uint64_t)v297;
    uint64_t v154 = v298;
    uint64_t v161 = (uint64_t)v291;
    uint64_t v148 = v308;
    goto LABEL_40;
  }
  sub_21CA26A4C((uint64_t)v318, (uint64_t)v316, &qword_267C951E0);
  sub_21CA26A4C((uint64_t)v319, (uint64_t)v315, &qword_267C951E0);
  if (sub_21CA76890((uint64_t)v315) == 1)
  {
    sub_21CA26A4C((uint64_t)v318, (uint64_t)v313, &qword_267C951E0);
    sub_21CA76A94((uint64_t)v313);
    sub_21CA76A94((uint64_t)v313);
    sub_21CA9E4B4(v293, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
    sub_21CA9E4B4(v294, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
    memcpy(v314, v316, sizeof(v314));
    sub_21CA76BE0((uint64_t)v314);
    goto LABEL_118;
  }
  sub_21CA26A4C((uint64_t)v319, (uint64_t)v311, &qword_267C951E0);
  memcpy(v314, v311, sizeof(v314));
  char v206 = _s7FMFCore10FMFAddressV2eeoiySbAC_ACtFZ_0((uint64_t)v316, (uint64_t)v314);
  sub_21CA26A4C((uint64_t)v318, (uint64_t)v312, &qword_267C951E0);
  sub_21CA81C54((uint64_t)v318, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_21CA5E3D0);
  sub_21CA76A94((uint64_t)v312);
  sub_21CA9E4B4(v293, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
  sub_21CA9E4B4(v294, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
  memcpy(v313, v316, sizeof(v313));
  sub_21CA76BE0((uint64_t)v313);
  sub_21CA26A4C((uint64_t)v317, (uint64_t)v314, &qword_267C951E0);
  sub_21CA81C54((uint64_t)v314, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_21CA1358C);
  uint64_t v148 = v308;
  uint64_t v113 = v309;
  sub_21CA7E0A0((uint64_t)v309, v308);
  uint64_t v114 = v310;
  uint64_t v162 = v292;
  sub_21CA7E0A0((uint64_t)v310, v292);
  uint64_t v163 = v289;
  uint64_t v156 = (uint64_t)v297;
  uint64_t v154 = v298;
  uint64_t v161 = (uint64_t)v291;
  if ((v206 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_120:
  if (*(unsigned char *)(v148 + 40)) {
    uint64_t v207 = 0x744F796669746F4ELL;
  }
  else {
    uint64_t v207 = 0x654D796669746F4ELL;
  }
  if (*(unsigned char *)(v148 + 40)) {
    unint64_t v208 = 0xEC00000073726568;
  }
  else {
    unint64_t v208 = 0xE800000000000000;
  }
  if (*(unsigned char *)(v162 + 40)) {
    uint64_t v209 = 0x744F796669746F4ELL;
  }
  else {
    uint64_t v209 = 0x654D796669746F4ELL;
  }
  if (*(unsigned char *)(v162 + 40)) {
    unint64_t v210 = 0xEC00000073726568;
  }
  else {
    unint64_t v210 = 0xE800000000000000;
  }
  if (v207 == v209 && v208 == v210)
  {
    swift_bridgeObjectRelease_n();
    sub_21CA9E4B4(v292, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
    sub_21CA9E4B4(v308, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
    uint64_t v113 = v309;
    uint64_t v164 = v279;
    sub_21CA7E0A0((uint64_t)v309, v279);
    uint64_t v114 = v310;
    uint64_t v165 = v278;
    sub_21CA7E0A0((uint64_t)v310, v278);
    uint64_t v163 = v289;
    uint64_t v156 = (uint64_t)v297;
    uint64_t v154 = v298;
    uint64_t v161 = (uint64_t)v291;
  }
  else
  {
    LODWORD(v307) = sub_21CB88F50();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_21CA9E4B4(v292, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
    sub_21CA9E4B4(v308, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
    uint64_t v113 = v309;
    uint64_t v164 = v279;
    sub_21CA7E0A0((uint64_t)v309, v279);
    uint64_t v114 = v310;
    uint64_t v165 = v278;
    sub_21CA7E0A0((uint64_t)v310, v278);
    uint64_t v163 = v289;
    uint64_t v156 = (uint64_t)v297;
    uint64_t v154 = v298;
    uint64_t v161 = (uint64_t)v291;
    if ((v307 & 1) == 0) {
      goto LABEL_42;
    }
  }
  LODWORD(v308) = sub_21CA7E8A0(*(unsigned char *)(v164 + 41), *(unsigned char *)(v165 + 41));
  sub_21CA9E4B4(v165, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
  sub_21CA9E4B4(v164, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
  sub_21CA7E0A0((uint64_t)v113, v156);
  uint64_t v166 = v280;
  sub_21CA7E0A0((uint64_t)v114, v280);
  uint64_t v167 = v290;
  if ((v308 & 1) == 0) {
    goto LABEL_43;
  }
  uint64_t v211 = v156;
  uint64_t v212 = v166;
  uint64_t v213 = v259;
  int v214 = *(unsigned __int8 *)(v211 + v259[25]);
  sub_21CA9E4B4(v211, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
  LODWORD(v213) = *(unsigned __int8 *)(v212 + v213[25]);
  sub_21CA9E4B4(v212, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
  uint64_t v168 = v281;
  sub_21CA7E0A0((uint64_t)v113, v281);
  sub_21CA7E0A0((uint64_t)v114, v161);
  BOOL v129 = v214 == v213;
  uint64_t v167 = v290;
  uint64_t v169 = v288;
  if (!v129) {
    goto LABEL_44;
  }
  uint64_t v215 = v259;
  int v216 = *(unsigned __int8 *)(v168 + v259[24]);
  sub_21CA9E4B4(v168, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
  LODWORD(v215) = *(unsigned __int8 *)(v161 + v215[24]);
  sub_21CA9E4B4(v161, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
  sub_21CA7E0A0((uint64_t)v113, v290);
  uint64_t v170 = v287;
  sub_21CA7E0A0((uint64_t)v114, v287);
  BOOL v129 = v216 == v215;
  uint64_t v167 = v290;
  uint64_t v169 = v288;
  if (!v129) {
    goto LABEL_45;
  }
  uint64_t v217 = v259[13];
  uint64_t v218 = (void *)(v290 + v217);
  uint64_t v219 = *(void *)(v290 + v217 + 8);
  uint64_t v220 = (void *)(v170 + v217);
  uint64_t v221 = v220[1];
  if (!v219)
  {
    swift_bridgeObjectRetain();
    sub_21CA9E4B4(v287, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
    sub_21CA9E4B4(v290, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
    if (!v221) {
      goto LABEL_147;
    }
LABEL_149:
    swift_bridgeObjectRelease();
    uint64_t v113 = v309;
    uint64_t v114 = v310;
    uint64_t v171 = v285;
    uint64_t v169 = v288;
    uint64_t v163 = v289;
    uint64_t v154 = v298;
    goto LABEL_46;
  }
  if (!v221)
  {
    swift_bridgeObjectRetain();
    sub_21CA9E4B4(v287, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
    sub_21CA9E4B4(v290, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
    goto LABEL_149;
  }
  if (*v218 == *v220 && v219 == v221)
  {
    swift_bridgeObjectRetain();
    sub_21CA9E4B4(v287, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
    sub_21CA9E4B4(v290, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
    swift_bridgeObjectRelease();
LABEL_147:
    uint64_t v154 = v298;
    sub_21CA7E0A0((uint64_t)v309, v298);
    uint64_t v172 = v286;
    sub_21CA7E0A0((uint64_t)v310, v286);
    goto LABEL_151;
  }
  char v222 = sub_21CB88F50();
  swift_bridgeObjectRetain();
  sub_21CA9E4B4(v287, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
  sub_21CA9E4B4(v290, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
  swift_bridgeObjectRelease();
  uint64_t v113 = v309;
  uint64_t v154 = v298;
  sub_21CA7E0A0((uint64_t)v309, v298);
  uint64_t v114 = v310;
  uint64_t v172 = v286;
  sub_21CA7E0A0((uint64_t)v310, v286);
  uint64_t v171 = v285;
  uint64_t v169 = v288;
  uint64_t v163 = v289;
  if ((v222 & 1) == 0) {
    goto LABEL_47;
  }
LABEL_151:
  uint64_t v223 = v259[14];
  uint64_t v224 = (void *)(v154 + v223);
  uint64_t v225 = *(void *)(v154 + v223 + 8);
  uint64_t v226 = (void *)(v172 + v223);
  uint64_t v227 = v226[1];
  if (!v225)
  {
    swift_bridgeObjectRetain();
    sub_21CA9E4B4(v286, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
    sub_21CA9E4B4(v298, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
    if (!v227) {
      goto LABEL_157;
    }
LABEL_159:
    swift_bridgeObjectRelease();
    uint64_t v113 = v309;
    uint64_t v114 = v310;
    uint64_t v171 = v285;
    uint64_t v169 = v288;
    uint64_t v163 = v289;
    goto LABEL_48;
  }
  if (!v227)
  {
    swift_bridgeObjectRetain();
    sub_21CA9E4B4(v286, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
    sub_21CA9E4B4(v298, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
    goto LABEL_159;
  }
  if (*v224 == *v226 && v225 == v227)
  {
    swift_bridgeObjectRetain();
    sub_21CA9E4B4(v286, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
    sub_21CA9E4B4(v298, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
    swift_bridgeObjectRelease();
LABEL_157:
    uint64_t v169 = v288;
    sub_21CA7E0A0((uint64_t)v309, v288);
    uint64_t v163 = v289;
    sub_21CA7E0A0((uint64_t)v310, v289);
    goto LABEL_161;
  }
  char v228 = sub_21CB88F50();
  swift_bridgeObjectRetain();
  sub_21CA9E4B4(v286, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
  sub_21CA9E4B4(v298, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
  swift_bridgeObjectRelease();
  uint64_t v113 = v309;
  uint64_t v169 = v288;
  sub_21CA7E0A0((uint64_t)v309, v288);
  uint64_t v114 = v310;
  uint64_t v163 = v289;
  sub_21CA7E0A0((uint64_t)v310, v289);
  uint64_t v171 = v285;
  if ((v228 & 1) == 0) {
    goto LABEL_49;
  }
LABEL_161:
  uint64_t v229 = v259[15];
  int v230 = *(unsigned __int8 *)(v169 + v229);
  int v231 = *(unsigned __int8 *)(v163 + v229);
  if (v230 == 3)
  {
    sub_21CA9E4B4(v289, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
    sub_21CA9E4B4(v288, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
    uint64_t v113 = v309;
    uint64_t v114 = v310;
    uint64_t v171 = v285;
    if (v231 != 3) {
      goto LABEL_50;
    }
    goto LABEL_178;
  }
  uint64_t v113 = v309;
  uint64_t v114 = v310;
  uint64_t v171 = v285;
  uint64_t v169 = v288;
  uint64_t v163 = v289;
  if (v231 == 3) {
    goto LABEL_49;
  }
  uint64_t v232 = 0x6E6564646948;
  if (v230)
  {
    if (v230 == 1)
    {
      unint64_t v233 = 0xE700000000000000;
      uint64_t v234 = 0x676E69646E6550;
    }
    else
    {
      unint64_t v233 = 0xE800000000000000;
      uint64_t v234 = 0x6465747065636341;
    }
  }
  else
  {
    unint64_t v233 = 0xE600000000000000;
    uint64_t v234 = 0x6E6564646948;
  }
  if (v231)
  {
    if (v231 == 1)
    {
      unint64_t v235 = 0xE700000000000000;
      uint64_t v232 = 0x676E69646E6550;
    }
    else
    {
      unint64_t v235 = 0xE800000000000000;
      uint64_t v232 = 0x6465747065636341;
    }
  }
  else
  {
    unint64_t v235 = 0xE600000000000000;
  }
  if (v234 == v232 && v233 == v235)
  {
    swift_bridgeObjectRelease_n();
    sub_21CA9E4B4(v289, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
    sub_21CA9E4B4(v288, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
    uint64_t v113 = v309;
    uint64_t v114 = v310;
    uint64_t v171 = v285;
LABEL_178:
    uint64_t v173 = v282;
    sub_21CA7E0A0((uint64_t)v113, v282);
    sub_21CA7E0A0((uint64_t)v114, v171);
    goto LABEL_179;
  }
  char v242 = sub_21CB88F50();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_21CA9E4B4(v289, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
  sub_21CA9E4B4(v288, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
  uint64_t v113 = v309;
  uint64_t v173 = v282;
  sub_21CA7E0A0((uint64_t)v309, v282);
  uint64_t v114 = v310;
  uint64_t v171 = v285;
  sub_21CA7E0A0((uint64_t)v310, v285);
  if ((v242 & 1) == 0) {
    goto LABEL_51;
  }
LABEL_179:
  uint64_t v236 = v259[27];
  uint64_t v237 = v173 + v236;
  uint64_t v238 = v171 + v236;
  uint64_t v239 = v268;
  uint64_t v240 = v268 + *(int *)(v267 + 48);
  sub_21CA24E80(v237, v268, (uint64_t *)&unk_267C951B0);
  sub_21CA24E80(v238, v240, (uint64_t *)&unk_267C951B0);
  uint64_t v241 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v269 + 48);
  if (v241(v239, 1, v270) == 1)
  {
    sub_21CA9E4B4(v285, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
    sub_21CA9E4B4(v282, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
    if (v241(v240, 1, v270) == 1)
    {
      sub_21CA1B88C(v268, (uint64_t *)&unk_267C951B0);
      uint64_t v174 = v284;
      sub_21CA7E0A0((uint64_t)v309, v284);
      uint64_t v175 = v283;
      sub_21CA7E0A0((uint64_t)v310, v283);
      goto LABEL_188;
    }
LABEL_184:
    sub_21CA1B88C(v268, &qword_267C95108);
    uint64_t v113 = v309;
    uint64_t v114 = v310;
    goto LABEL_52;
  }
  sub_21CA24E80(v268, v261, (uint64_t *)&unk_267C951B0);
  if (v241(v240, 1, v270) == 1)
  {
    sub_21CA9E4B4(v285, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
    sub_21CA9E4B4(v282, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
    (*(void (**)(uint64_t, uint64_t))(v269 + 8))(v261, v270);
    goto LABEL_184;
  }
  uint64_t v244 = v269;
  uint64_t v243 = v270;
  uint64_t v245 = v260;
  (*(void (**)(char *, uint64_t, uint64_t))(v269 + 32))(v260, v240, v270);
  sub_21CA9F6E8((unint64_t *)&qword_267C95110, MEMORY[0x263F07490]);
  uint64_t v246 = v261;
  char v247 = sub_21CB882B0();
  uint64_t v248 = *(void (**)(char *, uint64_t))(v244 + 8);
  v248(v245, v243);
  sub_21CA9E4B4(v285, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
  sub_21CA9E4B4(v282, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
  v248((char *)v246, v243);
  sub_21CA1B88C(v268, (uint64_t *)&unk_267C951B0);
  uint64_t v174 = v284;
  sub_21CA7E0A0((uint64_t)v309, v284);
  uint64_t v175 = v283;
  sub_21CA7E0A0((uint64_t)v310, v283);
  if ((v247 & 1) == 0) {
    goto LABEL_53;
  }
LABEL_188:
  uint64_t v249 = (uint64_t)v258;
  uint64_t v250 = v259[12];
  uint64_t v251 = v174 + v250;
  uint64_t v252 = v175 + v250;
  uint64_t v253 = (uint64_t)&v258[*(int *)(v262 + 48)];
  sub_21CA24E80(v251, (uint64_t)v258, (uint64_t *)&unk_267C96ED0);
  sub_21CA24E80(v252, v253, (uint64_t *)&unk_267C96ED0);
  uint64_t v254 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v264 + 48);
  uint64_t v255 = v249;
  if (v254(v249, 1, v265) == 1)
  {
    sub_21CA9E4B4(v283, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
    sub_21CA9E4B4(v284, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
    if (v254(v253, 1, v265) == 1)
    {
      sub_21CA1B88C(v249, (uint64_t *)&unk_267C96ED0);
      char v176 = 1;
      return v176 & 1;
    }
  }
  else
  {
    sub_21CA24E80(v249, (uint64_t)v266, (uint64_t *)&unk_267C96ED0);
    if (v254(v253, 1, v265) != 1)
    {
      uint64_t v256 = v263;
      sub_21CA996FC(v253, (uint64_t)v263);
      id v257 = v266;
      char v176 = static FMFSchedule.== infix(_:_:)(v266, v256);
      sub_21CA9E4B4((uint64_t)v256, (uint64_t (*)(void))type metadata accessor for FMFSchedule);
      sub_21CA9E4B4(v283, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
      sub_21CA9E4B4(v284, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
      sub_21CA9E4B4((uint64_t)v257, (uint64_t (*)(void))type metadata accessor for FMFSchedule);
      sub_21CA1B88C(v255, (uint64_t *)&unk_267C96ED0);
      return v176 & 1;
    }
    sub_21CA9E4B4(v283, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
    sub_21CA9E4B4(v284, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
    sub_21CA9E4B4((uint64_t)v266, (uint64_t (*)(void))type metadata accessor for FMFSchedule);
  }
  sub_21CA1B88C(v249, &qword_267C956F8);
LABEL_54:
  char v176 = 0;
  return v176 & 1;
}

unint64_t sub_21CA9C2FC()
{
  unint64_t result = qword_267C95690;
  if (!qword_267C95690)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C95690);
  }
  return result;
}

unint64_t sub_21CA9C354()
{
  unint64_t result = qword_267C95698;
  if (!qword_267C95698)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C95698);
  }
  return result;
}

unint64_t sub_21CA9C3AC()
{
  unint64_t result = qword_267C956A0;
  if (!qword_267C956A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C956A0);
  }
  return result;
}

unint64_t sub_21CA9C404()
{
  unint64_t result = qword_267C956A8;
  if (!qword_267C956A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C956A8);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for FMFLocationAlertAddressType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *unint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x21CA9C524);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FMFLocationAlertAddressType()
{
  return &type metadata for FMFLocationAlertAddressType;
}

unsigned char *storeEnumTagSinglePayload for FMFLocationAlertTriggerType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x21CA9C628);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FMFLocationAlertTriggerType()
{
  return &type metadata for FMFLocationAlertTriggerType;
}

unsigned char *storeEnumTagSinglePayload for FMFLocationAlertTarget(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x21CA9C72CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FMFLocationAlertTarget()
{
  return &type metadata for FMFLocationAlertTarget;
}

unsigned char *storeEnumTagSinglePayload for FMFLocationAlertAcceptanceStatus(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x21CA9C830);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FMFLocationAlertAcceptanceStatus()
{
  return &type metadata for FMFLocationAlertAcceptanceStatus;
}

void *initializeBufferWithCopyOfBuffer for FMFLocationAlert(uint64_t a1, uint64_t *a2, int *a3)
{
  unsigned int v4 = (void *)a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *unsigned int v4 = *a2;
    unsigned int v4 = (void *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    long long v8 = *((_OWORD *)a2 + 1);
    *(void *)(a1 + 32) = a2[4];
    *(unsigned char *)(a1 + 40) = *((unsigned char *)a2 + 40);
    *(unsigned char *)(a1 + 41) = *((unsigned char *)a2 + 41);
    *(_WORD *)(a1 + 42) = *((_WORD *)a2 + 21);
    uint64_t v9 = a3[12];
    uint64_t v10 = (_OWORD *)(a1 + v9);
    uint64_t v11 = (_OWORD *)((char *)a2 + v9);
    *(_OWORD *)(a1 + 16) = v8;
    uint64_t v12 = type metadata accessor for FMFSchedule();
    uint64_t v13 = *(void *)(v12 - 8);
    uint64_t v14 = *(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v13 + 48);
    swift_bridgeObjectRetain();
    if (v14(v11, 1, v12))
    {
      uint64_t v15 = sub_21CA57E34((uint64_t *)&unk_267C96ED0);
      memcpy(v10, v11, *(void *)(*(void *)(v15 - 8) + 64));
    }
    else
    {
      long long v17 = v11[1];
      *uint64_t v10 = *v11;
      v10[1] = v17;
      void v10[2] = v11[2];
      uint64_t v18 = *(int *)(v12 + 40);
      uint64_t v19 = (char *)v10 + v18;
      uint64_t v20 = (char *)v11 + v18;
      uint64_t v21 = sub_21CB876F0();
      uint64_t v22 = *(void *)(v21 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
      {
        uint64_t v23 = sub_21CA57E34(&qword_267C94A48);
        memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v22 + 16))(v19, v20, v21);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
      }
      (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
    }
    uint64_t v24 = a3[13];
    uint64_t v25 = a3[14];
    uint64_t v26 = (void *)((char *)v4 + v24);
    uint64_t v27 = (uint64_t *)((char *)a2 + v24);
    uint64_t v28 = v27[1];
    *uint64_t v26 = *v27;
    v26[1] = v28;
    uint64_t v29 = (void *)((char *)v4 + v25);
    uint64_t v30 = (uint64_t *)((char *)a2 + v25);
    uint64_t v82 = v30[1];
    *uint64_t v29 = *v30;
    v29[1] = v82;
    uint64_t v31 = a3[16];
    *((unsigned char *)v4 + a3[15]) = *((unsigned char *)a2 + a3[15]);
    *(void *)((char *)v4 + v31) = *(uint64_t *)((char *)a2 + v31);
    uint64_t v32 = a3[18];
    *(void *)((char *)v4 + a3[17]) = *(uint64_t *)((char *)a2 + a3[17]);
    *(void *)((char *)v4 + v32) = *(uint64_t *)((char *)a2 + v32);
    uint64_t v33 = a3[19];
    uint64_t v34 = a3[20];
    uint64_t v35 = (void *)((char *)v4 + v33);
    uint64_t v36 = (uint64_t *)((char *)a2 + v33);
    uint64_t v37 = a3;
    uint64_t v38 = v36[1];
    *uint64_t v35 = *v36;
    v35[1] = v38;
    uint64_t v39 = (char *)v4 + v34;
    uint64_t v40 = (uint64_t)a2 + v34;
    uint64_t v41 = *(void *)(v40 + 8);
    *(void *)uint64_t v39 = *(void *)v40;
    *((void *)v39 + 1) = v41;
    v39[16] = *(unsigned char *)(v40 + 16);
    v39[17] = *(unsigned char *)(v40 + 17);
    uint64_t v42 = v37[22];
    *((unsigned char *)v4 + v37[21]) = *((unsigned char *)a2 + v37[21]);
    uint64_t v43 = (void *)((char *)v4 + v42);
    uint64_t v44 = (uint64_t *)((char *)a2 + v42);
    uint64_t v45 = v44[1];
    *uint64_t v43 = *v44;
    v43[1] = v45;
    uint64_t v83 = v37;
    uint64_t v46 = v37[23];
    uint64_t v47 = (void *)((char *)v4 + v46);
    uint64_t v48 = (uint64_t *)((char *)a2 + v46);
    uint64_t v49 = *(uint64_t *)((char *)a2 + v46 + 168);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v49)
    {
      uint64_t v50 = v48[1];
      *uint64_t v47 = *v48;
      v47[1] = v50;
      uint64_t v51 = v48[3];
      v47[2] = v48[2];
      v47[3] = v51;
      uint64_t v52 = v48[5];
      v47[4] = v48[4];
      v47[5] = v52;
      uint64_t v53 = v48[7];
      v47[6] = v48[6];
      v47[7] = v53;
      uint64_t v54 = v48[9];
      v47[8] = v48[8];
      v47[9] = v54;
      uint64_t v55 = v48[11];
      v47[10] = v48[10];
      v47[11] = v55;
      uint64_t v56 = v48[13];
      v47[12] = v48[12];
      v47[13] = v56;
      uint64_t v57 = v48[15];
      v47[14] = v48[14];
      v47[15] = v57;
      uint64_t v58 = v48[17];
      unsigned char v47[16] = v48[16];
      v47[17] = v58;
      uint64_t v59 = v48[19];
      v47[18] = v48[18];
      v47[19] = v59;
      v47[20] = v48[20];
      v47[21] = v49;
      uint64_t v60 = v48[23];
      v47[22] = v48[22];
      v47[23] = v60;
      uint64_t v61 = v48[25];
      v47[24] = v48[24];
      v47[25] = v61;
      uint64_t v62 = v48[27];
      v47[26] = v48[26];
      v47[27] = v62;
      uint64_t v63 = v48[29];
      v47[28] = v48[28];
      v47[29] = v63;
      uint64_t v64 = v48[31];
      v47[30] = v48[30];
      v47[31] = v64;
      uint64_t v65 = v48[33];
      v47[32] = v48[32];
      v47[33] = v65;
      uint64_t v66 = v48[35];
      v47[34] = v48[34];
      v47[35] = v66;
      uint64_t v67 = v48[36];
      uint64_t v68 = v48[37];
      v47[36] = v67;
      v47[37] = v68;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      memcpy(v47, v48, 0x130uLL);
    }
    uint64_t v69 = v83[25];
    *((unsigned char *)v4 + v83[24]) = *((unsigned char *)a2 + v83[24]);
    *((unsigned char *)v4 + v69) = *((unsigned char *)a2 + v69);
    uint64_t v70 = v83[26];
    uint64_t v71 = (char *)v4 + v70;
    uint64_t v72 = (char *)a2 + v70;
    uint64_t v73 = sub_21CB87590();
    uint64_t v74 = *(void *)(v73 - 8);
    uint64_t v75 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v74 + 48);
    if (v75(v72, 1, v73))
    {
      uint64_t v76 = sub_21CA57E34((uint64_t *)&unk_267C951B0);
      memcpy(v71, v72, *(void *)(*(void *)(v76 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v74 + 16))(v71, v72, v73);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v74 + 56))(v71, 0, 1, v73);
    }
    uint64_t v77 = v83[27];
    uint64_t v78 = (char *)v4 + v77;
    uint64_t v79 = (char *)a2 + v77;
    if (v75(v79, 1, v73))
    {
      uint64_t v80 = sub_21CA57E34((uint64_t *)&unk_267C951B0);
      memcpy(v78, v79, *(void *)(*(void *)(v80 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v74 + 16))(v78, v79, v73);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v74 + 56))(v78, 0, 1, v73);
    }
  }
  return v4;
}