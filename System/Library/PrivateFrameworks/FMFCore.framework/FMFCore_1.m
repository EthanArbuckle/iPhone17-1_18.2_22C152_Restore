uint64_t destroy for FMFLocationAlert(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t (*v14)(uint64_t, uint64_t);
  uint64_t v15;
  uint64_t vars8;

  swift_bridgeObjectRelease();
  v4 = a1 + a2[12];
  v5 = type metadata accessor for FMFSchedule();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v4, 1, v5))
  {
    v6 = v4 + *(int *)(v5 + 40);
    v7 = sub_21CB876F0();
    v8 = *(void *)(v7 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7)) {
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + a2[23] + 168))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v9 = a1 + a2[26];
  v10 = sub_21CB87590();
  v15 = *(void *)(v10 - 8);
  v11 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48);
  if (!v11(v9, 1, v10)) {
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v9, v10);
  }
  v12 = a1 + a2[27];
  result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v11)(v12, 1, v10);
  if (!result)
  {
    v14 = *(uint64_t (**)(uint64_t, uint64_t))(v15 + 8);
    return v14(v12, v10);
  }
  return result;
}

uint64_t initializeWithCopy for FMFLocationAlert(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  long long v7 = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(unsigned char *)(a1 + 41) = *(unsigned char *)(a2 + 41);
  *(_WORD *)(a1 + 42) = *(_WORD *)(a2 + 42);
  uint64_t v8 = a3[12];
  v9 = (_OWORD *)(a1 + v8);
  v10 = (_OWORD *)(a2 + v8);
  *(_OWORD *)(a1 + 16) = v7;
  uint64_t v11 = type metadata accessor for FMFSchedule();
  uint64_t v12 = *(void *)(v11 - 8);
  v13 = *(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v12 + 48);
  swift_bridgeObjectRetain();
  if (v13(v10, 1, v11))
  {
    uint64_t v14 = sub_21CA57E34((uint64_t *)&unk_267C96ED0);
    memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    long long v15 = v10[1];
    _OWORD *v9 = *v10;
    v9[1] = v15;
    v9[2] = v10[2];
    uint64_t v16 = *(int *)(v11 + 40);
    v17 = (char *)v9 + v16;
    v18 = (char *)v10 + v16;
    uint64_t v19 = sub_21CB876F0();
    uint64_t v20 = *(void *)(v19 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
    {
      uint64_t v21 = sub_21CA57E34(&qword_267C94A48);
      memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v17, v18, v19);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
    }
    (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  uint64_t v22 = a3[13];
  uint64_t v23 = a3[14];
  v24 = (void *)(a1 + v22);
  v25 = (void *)(a2 + v22);
  uint64_t v26 = v25[1];
  void *v24 = *v25;
  v24[1] = v26;
  v27 = (void *)(a1 + v23);
  v28 = (void *)(a2 + v23);
  uint64_t v80 = v28[1];
  void *v27 = *v28;
  v27[1] = v80;
  uint64_t v29 = a3[16];
  *(unsigned char *)(a1 + a3[15]) = *(unsigned char *)(a2 + a3[15]);
  *(void *)(a1 + v29) = *(void *)(a2 + v29);
  uint64_t v30 = a3[18];
  *(void *)(a1 + a3[17]) = *(void *)(a2 + a3[17]);
  *(void *)(a1 + v30) = *(void *)(a2 + v30);
  uint64_t v31 = a3[19];
  uint64_t v32 = a3[20];
  v33 = (void *)(a1 + v31);
  v34 = (void *)(a2 + v31);
  v35 = a3;
  uint64_t v36 = v34[1];
  void *v33 = *v34;
  v33[1] = v36;
  uint64_t v37 = a1 + v32;
  uint64_t v38 = a2 + v32;
  uint64_t v39 = *(void *)(v38 + 8);
  *(void *)uint64_t v37 = *(void *)v38;
  *(void *)(v37 + 8) = v39;
  *(unsigned char *)(v37 + 16) = *(unsigned char *)(v38 + 16);
  *(unsigned char *)(v37 + 17) = *(unsigned char *)(v38 + 17);
  uint64_t v40 = v35[22];
  *(unsigned char *)(a1 + v35[21]) = *(unsigned char *)(a2 + v35[21]);
  v41 = (void *)(a1 + v40);
  v42 = (void *)(a2 + v40);
  uint64_t v43 = v42[1];
  void *v41 = *v42;
  v41[1] = v43;
  v81 = v35;
  uint64_t v44 = v35[23];
  v45 = (void *)(a1 + v44);
  v46 = (void *)(a2 + v44);
  uint64_t v47 = *(void *)(a2 + v44 + 168);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v47)
  {
    uint64_t v48 = v46[1];
    void *v45 = *v46;
    v45[1] = v48;
    uint64_t v49 = v46[3];
    v45[2] = v46[2];
    v45[3] = v49;
    uint64_t v50 = v46[5];
    v45[4] = v46[4];
    v45[5] = v50;
    uint64_t v51 = v46[7];
    v45[6] = v46[6];
    v45[7] = v51;
    uint64_t v52 = v46[9];
    v45[8] = v46[8];
    v45[9] = v52;
    uint64_t v53 = v46[11];
    v45[10] = v46[10];
    v45[11] = v53;
    uint64_t v54 = v46[13];
    v45[12] = v46[12];
    v45[13] = v54;
    uint64_t v55 = v46[15];
    v45[14] = v46[14];
    v45[15] = v55;
    uint64_t v56 = v46[17];
    v45[16] = v46[16];
    v45[17] = v56;
    uint64_t v57 = v46[19];
    v45[18] = v46[18];
    v45[19] = v57;
    v45[20] = v46[20];
    v45[21] = v47;
    uint64_t v58 = v46[23];
    v45[22] = v46[22];
    v45[23] = v58;
    uint64_t v59 = v46[25];
    v45[24] = v46[24];
    v45[25] = v59;
    uint64_t v60 = v46[27];
    v45[26] = v46[26];
    v45[27] = v60;
    uint64_t v61 = v46[29];
    v45[28] = v46[28];
    v45[29] = v61;
    uint64_t v62 = v46[31];
    v45[30] = v46[30];
    v45[31] = v62;
    uint64_t v63 = v46[33];
    v45[32] = v46[32];
    v45[33] = v63;
    uint64_t v64 = v46[35];
    v45[34] = v46[34];
    v45[35] = v64;
    uint64_t v65 = v46[36];
    uint64_t v66 = v46[37];
    v45[36] = v65;
    v45[37] = v66;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    memcpy(v45, v46, 0x130uLL);
  }
  uint64_t v67 = v81[25];
  *(unsigned char *)(a1 + v81[24]) = *(unsigned char *)(a2 + v81[24]);
  *(unsigned char *)(a1 + v67) = *(unsigned char *)(a2 + v67);
  uint64_t v68 = v81[26];
  v69 = (void *)(a1 + v68);
  v70 = (const void *)(a2 + v68);
  uint64_t v71 = sub_21CB87590();
  uint64_t v72 = *(void *)(v71 - 8);
  v73 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v72 + 48);
  if (v73(v70, 1, v71))
  {
    uint64_t v74 = sub_21CA57E34((uint64_t *)&unk_267C951B0);
    memcpy(v69, v70, *(void *)(*(void *)(v74 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v72 + 16))(v69, v70, v71);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v72 + 56))(v69, 0, 1, v71);
  }
  uint64_t v75 = v81[27];
  v76 = (void *)(a1 + v75);
  v77 = (const void *)(a2 + v75);
  if (v73(v77, 1, v71))
  {
    uint64_t v78 = sub_21CA57E34((uint64_t *)&unk_267C951B0);
    memcpy(v76, v77, *(void *)(*(void *)(v78 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v72 + 16))(v76, v77, v71);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v72 + 56))(v76, 0, 1, v71);
  }
  return a1;
}

uint64_t assignWithCopy for FMFLocationAlert(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(unsigned char *)(a1 + 41) = *(unsigned char *)(a2 + 41);
  *(unsigned char *)(a1 + 42) = *(unsigned char *)(a2 + 42);
  *(unsigned char *)(a1 + 43) = *(unsigned char *)(a2 + 43);
  uint64_t v6 = a3[12];
  long long v7 = (char *)(a1 + v6);
  uint64_t v8 = (char *)(a2 + v6);
  uint64_t v9 = type metadata accessor for FMFSchedule();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      *(void *)long long v7 = *(void *)v8;
      *((void *)v7 + 1) = *((void *)v8 + 1);
      *((void *)v7 + 2) = *((void *)v8 + 2);
      *((void *)v7 + 3) = *((void *)v8 + 3);
      *((void *)v7 + 4) = *((void *)v8 + 4);
      *((void *)v7 + 5) = *((void *)v8 + 5);
      uint64_t v23 = *(int *)(v9 + 40);
      v24 = &v7[v23];
      v25 = &v8[v23];
      uint64_t v26 = sub_21CB876F0();
      uint64_t v27 = *(void *)(v26 - 8);
      v28 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v27 + 48);
      int v29 = v28(v24, 1, v26);
      int v30 = v28(v25, 1, v26);
      if (v29)
      {
        if (!v30)
        {
          (*(void (**)(char *, char *, uint64_t))(v27 + 16))(v24, v25, v26);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
          goto LABEL_14;
        }
      }
      else
      {
        if (!v30)
        {
          (*(void (**)(char *, char *, uint64_t))(v27 + 24))(v24, v25, v26);
          goto LABEL_14;
        }
        (*(void (**)(char *, uint64_t))(v27 + 8))(v24, v26);
      }
      size_t v20 = *(void *)(*(void *)(sub_21CA57E34(&qword_267C94A48) - 8) + 64);
      uint64_t v21 = v24;
      uint64_t v22 = v25;
LABEL_8:
      memcpy(v21, v22, v20);
      goto LABEL_14;
    }
    sub_21CA9E4B4((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for FMFSchedule);
LABEL_7:
    size_t v20 = *(void *)(*(void *)(sub_21CA57E34((uint64_t *)&unk_267C96ED0) - 8) + 64);
    uint64_t v21 = v7;
    uint64_t v22 = v8;
    goto LABEL_8;
  }
  if (v13) {
    goto LABEL_7;
  }
  *(void *)long long v7 = *(void *)v8;
  *((void *)v7 + 1) = *((void *)v8 + 1);
  *((void *)v7 + 2) = *((void *)v8 + 2);
  *((void *)v7 + 3) = *((void *)v8 + 3);
  *((void *)v7 + 4) = *((void *)v8 + 4);
  *((void *)v7 + 5) = *((void *)v8 + 5);
  uint64_t v14 = *(int *)(v9 + 40);
  long long v15 = &v7[v14];
  uint64_t v16 = &v8[v14];
  uint64_t v17 = sub_21CB876F0();
  uint64_t v18 = *(void *)(v17 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
  {
    uint64_t v19 = sub_21CA57E34(&qword_267C94A48);
    memcpy(v15, v16, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v15, v16, v17);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
  }
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_14:
  uint64_t v31 = a3[13];
  uint64_t v32 = (void *)(a1 + v31);
  v33 = (void *)(a2 + v31);
  *uint64_t v32 = *v33;
  v32[1] = v33[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v34 = a3[14];
  v35 = (void *)(a1 + v34);
  uint64_t v36 = (void *)(a2 + v34);
  void *v35 = *v36;
  v35[1] = v36[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[15]) = *(unsigned char *)(a2 + a3[15]);
  *(void *)(a1 + a3[16]) = *(void *)(a2 + a3[16]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[17]) = *(void *)(a2 + a3[17]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[18]) = *(void *)(a2 + a3[18]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v37 = a3[19];
  uint64_t v38 = (void *)(a1 + v37);
  uint64_t v39 = (void *)(a2 + v37);
  *uint64_t v38 = *v39;
  v38[1] = v39[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v40 = a3[20];
  uint64_t v41 = a1 + v40;
  uint64_t v42 = a2 + v40;
  *(void *)uint64_t v41 = *(void *)(a2 + v40);
  *(void *)(v41 + 8) = *(void *)(a2 + v40 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v41 + 16) = *(unsigned char *)(v42 + 16);
  *(unsigned char *)(v41 + 17) = *(unsigned char *)(v42 + 17);
  *(unsigned char *)(a1 + a3[21]) = *(unsigned char *)(a2 + a3[21]);
  uint64_t v43 = a3[22];
  uint64_t v44 = (void *)(a1 + v43);
  v45 = (void *)(a2 + v43);
  *uint64_t v44 = *v45;
  v44[1] = v45[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v46 = a3[23];
  uint64_t v47 = (void *)(a1 + v46);
  uint64_t v48 = (void *)(a2 + v46);
  uint64_t v49 = *(void *)(a1 + v46 + 168);
  uint64_t v50 = *(void *)(a2 + v46 + 168);
  if (v49)
  {
    if (v50)
    {
      *uint64_t v47 = *v48;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v47[1] = v48[1];
      v47[2] = v48[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v47[3] = v48[3];
      v47[4] = v48[4];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v47[5] = v48[5];
      v47[6] = v48[6];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v47[7] = v48[7];
      v47[8] = v48[8];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v47[9] = v48[9];
      v47[10] = v48[10];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v47[11] = v48[11];
      v47[12] = v48[12];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v47[13] = v48[13];
      v47[14] = v48[14];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v47[15] = v48[15];
      v47[16] = v48[16];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v47[17] = v48[17];
      v47[18] = v48[18];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v47[19] = v48[19];
      v47[20] = v48[20];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v47[21] = v48[21];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v47[22] = v48[22];
      v47[23] = v48[23];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v47[24] = v48[24];
      v47[25] = v48[25];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v47[26] = v48[26];
      v47[27] = v48[27];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v47[28] = v48[28];
      v47[29] = v48[29];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v47[30] = v48[30];
      v47[31] = v48[31];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v47[32] = v48[32];
      v47[33] = v48[33];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v47[34] = v48[34];
      v47[35] = v48[35];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v47[36] = v48[36];
      v47[37] = v48[37];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_21;
    }
    sub_21CA757AC((uint64_t)v47);
  }
  else if (v50)
  {
    *uint64_t v47 = *v48;
    v47[1] = v48[1];
    v47[2] = v48[2];
    v47[3] = v48[3];
    v47[4] = v48[4];
    v47[5] = v48[5];
    v47[6] = v48[6];
    v47[7] = v48[7];
    v47[8] = v48[8];
    v47[9] = v48[9];
    v47[10] = v48[10];
    v47[11] = v48[11];
    v47[12] = v48[12];
    v47[13] = v48[13];
    v47[14] = v48[14];
    v47[15] = v48[15];
    v47[16] = v48[16];
    v47[17] = v48[17];
    v47[18] = v48[18];
    v47[19] = v48[19];
    v47[20] = v48[20];
    v47[21] = v48[21];
    v47[22] = v48[22];
    v47[23] = v48[23];
    v47[24] = v48[24];
    v47[25] = v48[25];
    v47[26] = v48[26];
    v47[27] = v48[27];
    v47[28] = v48[28];
    v47[29] = v48[29];
    v47[30] = v48[30];
    v47[31] = v48[31];
    v47[32] = v48[32];
    v47[33] = v48[33];
    v47[34] = v48[34];
    v47[35] = v48[35];
    v47[36] = v48[36];
    v47[37] = v48[37];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    goto LABEL_21;
  }
  memcpy(v47, v48, 0x130uLL);
LABEL_21:
  *(unsigned char *)(a1 + a3[24]) = *(unsigned char *)(a2 + a3[24]);
  *(unsigned char *)(a1 + a3[25]) = *(unsigned char *)(a2 + a3[25]);
  uint64_t v51 = a3[26];
  uint64_t v52 = (void *)(a1 + v51);
  uint64_t v53 = (void *)(a2 + v51);
  uint64_t v54 = sub_21CB87590();
  uint64_t v55 = *(void *)(v54 - 8);
  uint64_t v56 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v55 + 48);
  int v57 = v56(v52, 1, v54);
  int v58 = v56(v53, 1, v54);
  if (v57)
  {
    if (!v58)
    {
      (*(void (**)(void *, void *, uint64_t))(v55 + 16))(v52, v53, v54);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v55 + 56))(v52, 0, 1, v54);
      goto LABEL_27;
    }
    goto LABEL_26;
  }
  if (v58)
  {
    (*(void (**)(void *, uint64_t))(v55 + 8))(v52, v54);
LABEL_26:
    uint64_t v59 = sub_21CA57E34((uint64_t *)&unk_267C951B0);
    memcpy(v52, v53, *(void *)(*(void *)(v59 - 8) + 64));
    goto LABEL_27;
  }
  (*(void (**)(void *, void *, uint64_t))(v55 + 24))(v52, v53, v54);
LABEL_27:
  uint64_t v60 = a3[27];
  uint64_t v61 = (void *)(a1 + v60);
  uint64_t v62 = (void *)(a2 + v60);
  int v63 = v56((void *)(a1 + v60), 1, v54);
  int v64 = v56(v62, 1, v54);
  if (!v63)
  {
    if (!v64)
    {
      (*(void (**)(void *, void *, uint64_t))(v55 + 24))(v61, v62, v54);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v55 + 8))(v61, v54);
    goto LABEL_32;
  }
  if (v64)
  {
LABEL_32:
    uint64_t v65 = sub_21CA57E34((uint64_t *)&unk_267C951B0);
    memcpy(v61, v62, *(void *)(*(void *)(v65 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v55 + 16))(v61, v62, v54);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v55 + 56))(v61, 0, 1, v54);
  return a1;
}

uint64_t sub_21CA9E4B4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t initializeWithTake for FMFLocationAlert(uint64_t a1, long long *a2, int *a3)
{
  long long v6 = *a2;
  long long v7 = a2[1];
  *(void *)(a1 + 32) = *((void *)a2 + 4);
  *(unsigned char *)(a1 + 40) = *((unsigned char *)a2 + 40);
  *(unsigned char *)(a1 + 41) = *((unsigned char *)a2 + 41);
  *(_WORD *)(a1 + 42) = *((_WORD *)a2 + 21);
  uint64_t v8 = a3[12];
  uint64_t v9 = (_OWORD *)(a1 + v8);
  uint64_t v10 = (long long *)((char *)a2 + v8);
  *(_OWORD *)a1 = v6;
  *(_OWORD *)(a1 + 16) = v7;
  uint64_t v11 = type metadata accessor for FMFSchedule();
  uint64_t v12 = *(void *)(v11 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
  {
    uint64_t v13 = sub_21CA57E34((uint64_t *)&unk_267C96ED0);
    memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    long long v14 = v10[1];
    _OWORD *v9 = *v10;
    v9[1] = v14;
    v9[2] = v10[2];
    uint64_t v15 = *(int *)(v11 + 40);
    uint64_t v16 = (char *)v9 + v15;
    uint64_t v17 = (char *)v10 + v15;
    uint64_t v18 = sub_21CB876F0();
    uint64_t v19 = *(void *)(v18 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
    {
      uint64_t v20 = sub_21CA57E34(&qword_267C94A48);
      memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v16, v17, v18);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
    }
    (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  uint64_t v21 = a3[14];
  *(_OWORD *)(a1 + a3[13]) = *(long long *)((char *)a2 + a3[13]);
  *(_OWORD *)(a1 + v21) = *(long long *)((char *)a2 + v21);
  uint64_t v22 = a3[16];
  *(unsigned char *)(a1 + a3[15]) = *((unsigned char *)a2 + a3[15]);
  *(void *)(a1 + v22) = *(void *)((char *)a2 + v22);
  uint64_t v23 = a3[18];
  *(void *)(a1 + a3[17]) = *(void *)((char *)a2 + a3[17]);
  *(void *)(a1 + v23) = *(void *)((char *)a2 + v23);
  uint64_t v24 = a3[20];
  *(_OWORD *)(a1 + a3[19]) = *(long long *)((char *)a2 + a3[19]);
  uint64_t v25 = a1 + v24;
  uint64_t v26 = (uint64_t)a2 + v24;
  *(_OWORD *)uint64_t v25 = *(_OWORD *)v26;
  *(_WORD *)(v25 + 16) = *(_WORD *)(v26 + 16);
  uint64_t v27 = a3[22];
  *(unsigned char *)(a1 + a3[21]) = *((unsigned char *)a2 + a3[21]);
  *(_OWORD *)(a1 + v27) = *(long long *)((char *)a2 + v27);
  memcpy((void *)(a1 + a3[23]), (char *)a2 + a3[23], 0x130uLL);
  uint64_t v28 = a3[25];
  *(unsigned char *)(a1 + a3[24]) = *((unsigned char *)a2 + a3[24]);
  *(unsigned char *)(a1 + v28) = *((unsigned char *)a2 + v28);
  uint64_t v29 = a3[26];
  int v30 = (void *)(a1 + v29);
  uint64_t v31 = (char *)a2 + v29;
  uint64_t v32 = sub_21CB87590();
  uint64_t v33 = *(void *)(v32 - 8);
  uint64_t v34 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48);
  if (v34(v31, 1, v32))
  {
    uint64_t v35 = sub_21CA57E34((uint64_t *)&unk_267C951B0);
    memcpy(v30, v31, *(void *)(*(void *)(v35 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v33 + 32))(v30, v31, v32);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
  }
  uint64_t v36 = a3[27];
  uint64_t v37 = (void *)(a1 + v36);
  uint64_t v38 = (char *)a2 + v36;
  if (v34(v38, 1, v32))
  {
    uint64_t v39 = sub_21CA57E34((uint64_t *)&unk_267C951B0);
    memcpy(v37, v38, *(void *)(*(void *)(v39 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v33 + 32))(v37, v38, v32);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v33 + 56))(v37, 0, 1, v32);
  }
  return a1;
}

uint64_t assignWithTake for FMFLocationAlert(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(unsigned char *)(a1 + 41) = *(unsigned char *)(a2 + 41);
  *(unsigned char *)(a1 + 42) = *(unsigned char *)(a2 + 42);
  *(unsigned char *)(a1 + 43) = *(unsigned char *)(a2 + 43);
  uint64_t v8 = a3[12];
  uint64_t v9 = (char *)(a1 + v8);
  uint64_t v10 = (char *)(a2 + v8);
  *(void *)(a1 + 32) = v7;
  uint64_t v11 = type metadata accessor for FMFSchedule();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48);
  int v14 = v13(v9, 1, v11);
  int v15 = v13(v10, 1, v11);
  if (!v14)
  {
    if (!v15)
    {
      long long v26 = *((_OWORD *)v10 + 1);
      *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
      *((_OWORD *)v9 + 1) = v26;
      *((_OWORD *)v9 + 2) = *((_OWORD *)v10 + 2);
      uint64_t v27 = *(int *)(v11 + 40);
      uint64_t v28 = &v9[v27];
      uint64_t v29 = &v10[v27];
      uint64_t v30 = sub_21CB876F0();
      uint64_t v31 = *(void *)(v30 - 8);
      uint64_t v32 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v31 + 48);
      int v33 = v32(v28, 1, v30);
      int v34 = v32(v29, 1, v30);
      if (v33)
      {
        if (!v34)
        {
          (*(void (**)(char *, char *, uint64_t))(v31 + 32))(v28, v29, v30);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v31 + 56))(v28, 0, 1, v30);
          goto LABEL_14;
        }
      }
      else
      {
        if (!v34)
        {
          (*(void (**)(char *, char *, uint64_t))(v31 + 40))(v28, v29, v30);
          goto LABEL_14;
        }
        (*(void (**)(char *, uint64_t))(v31 + 8))(v28, v30);
      }
      size_t v23 = *(void *)(*(void *)(sub_21CA57E34(&qword_267C94A48) - 8) + 64);
      uint64_t v24 = v28;
      uint64_t v25 = v29;
LABEL_8:
      memcpy(v24, v25, v23);
      goto LABEL_14;
    }
    sub_21CA9E4B4((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for FMFSchedule);
LABEL_7:
    size_t v23 = *(void *)(*(void *)(sub_21CA57E34((uint64_t *)&unk_267C96ED0) - 8) + 64);
    uint64_t v24 = v9;
    uint64_t v25 = v10;
    goto LABEL_8;
  }
  if (v15) {
    goto LABEL_7;
  }
  long long v16 = *((_OWORD *)v10 + 1);
  *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
  *((_OWORD *)v9 + 1) = v16;
  *((_OWORD *)v9 + 2) = *((_OWORD *)v10 + 2);
  uint64_t v17 = *(int *)(v11 + 40);
  uint64_t v18 = &v9[v17];
  uint64_t v19 = &v10[v17];
  uint64_t v20 = sub_21CB876F0();
  uint64_t v21 = *(void *)(v20 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
  {
    uint64_t v22 = sub_21CA57E34(&qword_267C94A48);
    memcpy(v18, v19, *(void *)(*(void *)(v22 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v18, v19, v20);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
  }
  (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
LABEL_14:
  uint64_t v35 = a3[13];
  uint64_t v36 = (void *)(a1 + v35);
  uint64_t v37 = (uint64_t *)(a2 + v35);
  uint64_t v39 = *v37;
  uint64_t v38 = v37[1];
  *uint64_t v36 = v39;
  v36[1] = v38;
  swift_bridgeObjectRelease();
  uint64_t v40 = a3[14];
  uint64_t v41 = (void *)(a1 + v40);
  uint64_t v42 = (uint64_t *)(a2 + v40);
  uint64_t v44 = *v42;
  uint64_t v43 = v42[1];
  void *v41 = v44;
  v41[1] = v43;
  swift_bridgeObjectRelease();
  uint64_t v45 = a3[16];
  *(unsigned char *)(a1 + a3[15]) = *(unsigned char *)(a2 + a3[15]);
  *(void *)(a1 + v45) = *(void *)(a2 + v45);
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[17]) = *(void *)(a2 + a3[17]);
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[18]) = *(void *)(a2 + a3[18]);
  swift_bridgeObjectRelease();
  uint64_t v46 = a3[19];
  uint64_t v47 = (void *)(a1 + v46);
  uint64_t v48 = (uint64_t *)(a2 + v46);
  uint64_t v50 = *v48;
  uint64_t v49 = v48[1];
  *uint64_t v47 = v50;
  v47[1] = v49;
  swift_bridgeObjectRelease();
  uint64_t v51 = a3[20];
  uint64_t v52 = a1 + v51;
  uint64_t v53 = a2 + v51;
  uint64_t v54 = *(void *)(a2 + v51 + 8);
  *(void *)uint64_t v52 = *(void *)(a2 + v51);
  *(void *)(v52 + 8) = v54;
  swift_bridgeObjectRelease();
  *(_WORD *)(v52 + 16) = *(_WORD *)(v53 + 16);
  uint64_t v55 = a3[22];
  *(unsigned char *)(a1 + a3[21]) = *(unsigned char *)(a2 + a3[21]);
  uint64_t v56 = (void *)(a1 + v55);
  int v57 = (uint64_t *)(a2 + v55);
  uint64_t v59 = *v57;
  uint64_t v58 = v57[1];
  *uint64_t v56 = v59;
  v56[1] = v58;
  swift_bridgeObjectRelease();
  uint64_t v60 = a3[23];
  uint64_t v61 = (void *)(a1 + v60);
  uint64_t v62 = (void *)(a2 + v60);
  if (*(void *)(a1 + v60 + 168))
  {
    if (v62[21])
    {
      *uint64_t v61 = *v62;
      swift_bridgeObjectRelease();
      uint64_t v63 = v62[2];
      v61[1] = v62[1];
      v61[2] = v63;
      swift_bridgeObjectRelease();
      uint64_t v64 = v62[4];
      v61[3] = v62[3];
      v61[4] = v64;
      swift_bridgeObjectRelease();
      uint64_t v65 = v62[6];
      v61[5] = v62[5];
      v61[6] = v65;
      swift_bridgeObjectRelease();
      uint64_t v66 = v62[8];
      v61[7] = v62[7];
      v61[8] = v66;
      swift_bridgeObjectRelease();
      uint64_t v67 = v62[10];
      v61[9] = v62[9];
      v61[10] = v67;
      swift_bridgeObjectRelease();
      uint64_t v68 = v62[12];
      v61[11] = v62[11];
      v61[12] = v68;
      swift_bridgeObjectRelease();
      uint64_t v69 = v62[14];
      v61[13] = v62[13];
      v61[14] = v69;
      swift_bridgeObjectRelease();
      uint64_t v70 = v62[16];
      v61[15] = v62[15];
      v61[16] = v70;
      swift_bridgeObjectRelease();
      uint64_t v71 = v62[18];
      v61[17] = v62[17];
      v61[18] = v71;
      swift_bridgeObjectRelease();
      uint64_t v72 = v62[20];
      v61[19] = v62[19];
      v61[20] = v72;
      swift_bridgeObjectRelease();
      v61[21] = v62[21];
      swift_bridgeObjectRelease();
      uint64_t v73 = v62[23];
      v61[22] = v62[22];
      v61[23] = v73;
      swift_bridgeObjectRelease();
      uint64_t v74 = v62[25];
      v61[24] = v62[24];
      v61[25] = v74;
      swift_bridgeObjectRelease();
      uint64_t v75 = v62[27];
      v61[26] = v62[26];
      v61[27] = v75;
      swift_bridgeObjectRelease();
      uint64_t v76 = v62[29];
      v61[28] = v62[28];
      v61[29] = v76;
      swift_bridgeObjectRelease();
      uint64_t v77 = v62[31];
      v61[30] = v62[30];
      v61[31] = v77;
      swift_bridgeObjectRelease();
      uint64_t v78 = v62[33];
      v61[32] = v62[32];
      v61[33] = v78;
      swift_bridgeObjectRelease();
      uint64_t v79 = v62[35];
      v61[34] = v62[34];
      v61[35] = v79;
      swift_bridgeObjectRelease();
      uint64_t v80 = v62[37];
      v61[36] = v62[36];
      v61[37] = v80;
      swift_bridgeObjectRelease();
      goto LABEL_19;
    }
    sub_21CA757AC((uint64_t)v61);
  }
  memcpy(v61, v62, 0x130uLL);
LABEL_19:
  uint64_t v81 = a3[25];
  *(unsigned char *)(a1 + a3[24]) = *(unsigned char *)(a2 + a3[24]);
  *(unsigned char *)(a1 + v81) = *(unsigned char *)(a2 + v81);
  uint64_t v82 = a3[26];
  v83 = (void *)(a1 + v82);
  v84 = (void *)(a2 + v82);
  uint64_t v85 = sub_21CB87590();
  uint64_t v86 = *(void *)(v85 - 8);
  v87 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v86 + 48);
  int v88 = v87(v83, 1, v85);
  int v89 = v87(v84, 1, v85);
  if (v88)
  {
    if (!v89)
    {
      (*(void (**)(void *, void *, uint64_t))(v86 + 32))(v83, v84, v85);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v86 + 56))(v83, 0, 1, v85);
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  if (v89)
  {
    (*(void (**)(void *, uint64_t))(v86 + 8))(v83, v85);
LABEL_24:
    uint64_t v90 = sub_21CA57E34((uint64_t *)&unk_267C951B0);
    memcpy(v83, v84, *(void *)(*(void *)(v90 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(void *, void *, uint64_t))(v86 + 40))(v83, v84, v85);
LABEL_25:
  uint64_t v91 = a3[27];
  v92 = (void *)(a1 + v91);
  v93 = (void *)(a2 + v91);
  int v94 = v87((void *)(a1 + v91), 1, v85);
  int v95 = v87(v93, 1, v85);
  if (!v94)
  {
    if (!v95)
    {
      (*(void (**)(void *, void *, uint64_t))(v86 + 40))(v92, v93, v85);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v86 + 8))(v92, v85);
    goto LABEL_30;
  }
  if (v95)
  {
LABEL_30:
    uint64_t v96 = sub_21CA57E34((uint64_t *)&unk_267C951B0);
    memcpy(v92, v93, *(void *)(*(void *)(v96 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v86 + 32))(v92, v93, v85);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v86 + 56))(v92, 0, 1, v85);
  return a1;
}

uint64_t sub_21CA9F184(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 2147483646)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  else
  {
    uint64_t v9 = sub_21CA57E34((uint64_t *)&unk_267C96ED0);
    uint64_t v10 = *(void *)(v9 - 8);
    if (*(_DWORD *)(v10 + 84) == a2)
    {
      uint64_t v11 = v9;
      uint64_t v12 = a1 + *(int *)(a3 + 48);
      uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
      return v13(v12, a2, v11);
    }
    else
    {
      uint64_t v14 = sub_21CA57E34((uint64_t *)&unk_267C951B0);
      int v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
      uint64_t v16 = v14;
      uint64_t v17 = a1 + *(int *)(a3 + 104);
      return v15(v17, a2, v16);
    }
  }
}

uint64_t sub_21CA9F2C4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 2147483646)
  {
    *(void *)(result + 8) = a2;
  }
  else
  {
    uint64_t v8 = sub_21CA57E34((uint64_t *)&unk_267C96ED0);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 48);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_21CA57E34((uint64_t *)&unk_267C951B0);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 104);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

uint64_t getEnumTagSinglePayload for FMFLocationAlert.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xEB) {
    goto LABEL_17;
  }
  if (a2 + 21 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 21) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 21;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 21;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 21;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x16;
  int v8 = v6 - 22;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for FMFLocationAlert.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 21 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 21) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xEB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xEA)
  {
    unsigned int v6 = ((a2 - 235) >> 8) + 1;
    *result = a2 + 21;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x21CA9F554);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *result = a2 + 21;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FMFLocationAlert.CodingKeys()
{
  return &type metadata for FMFLocationAlert.CodingKeys;
}

unint64_t sub_21CA9F590()
{
  unint64_t result = qword_267C956C8;
  if (!qword_267C956C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C956C8);
  }
  return result;
}

unint64_t sub_21CA9F5E8()
{
  unint64_t result = qword_267C956D0;
  if (!qword_267C956D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C956D0);
  }
  return result;
}

unint64_t sub_21CA9F640()
{
  unint64_t result = qword_267C956D8;
  if (!qword_267C956D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C956D8);
  }
  return result;
}

uint64_t sub_21CA9F694()
{
  unint64_t v0 = sub_21CB88F80();
  swift_bridgeObjectRelease();
  if (v0 >= 0x16) {
    return 22;
  }
  else {
    return v0;
  }
}

uint64_t sub_21CA9F6E8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

__n128 FMFUpdatePrefsAction.__allocating_init(prefs:)(uint64_t a1)
{
  int v2 = (__n128 *)swift_allocObject();
  unsigned __int8 v3 = *(unsigned char *)(a1 + 1);
  unsigned __int8 v4 = *(unsigned char *)(a1 + 2);
  unsigned __int8 v5 = *(unsigned char *)(a1 + 3);
  __n128 result = *(__n128 *)(a1 + 8);
  unint64_t v7 = *(void *)(a1 + 24);
  v2[1].n128_u8[8] = *(unsigned char *)a1;
  v2[1].n128_u8[9] = v3;
  v2[1].n128_u8[10] = v4;
  v2[1].n128_u8[11] = v5;
  v2[2] = result;
  v2[3].n128_u64[0] = v7;
  v2[1].n128_u8[0] = 0;
  return result;
}

uint64_t FMFUpdatePrefsAction.init(prefs:)(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 1);
  char v3 = *(unsigned char *)(a1 + 2);
  char v4 = *(unsigned char *)(a1 + 3);
  long long v5 = *(_OWORD *)(a1 + 8);
  uint64_t v6 = *(void *)(a1 + 24);
  *(unsigned char *)(v1 + 24) = *(unsigned char *)a1;
  *(unsigned char *)(v1 + 25) = v2;
  *(unsigned char *)(v1 + 26) = v3;
  *(unsigned char *)(v1 + 27) = v4;
  *(_OWORD *)(v1 + 32) = v5;
  *(void *)(v1 + 48) = v6;
  *(unsigned char *)(v1 + 16) = 0;
  return v1;
}

uint64_t sub_21CA9F7D0()
{
  return 0;
}

void FMFUpdatePrefsAction.__allocating_init(requiresRefresh:)()
{
}

void FMFUpdatePrefsAction.init(requiresRefresh:)()
{
}

uint64_t sub_21CA9F990()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t FMFUpdatePrefsAction.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t FMFUpdatePrefsAction.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for FMFUpdatePrefsAction()
{
  return self;
}

uint64_t method lookup function for FMFUpdatePrefsAction(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for FMFUpdatePrefsAction);
}

uint64_t dispatch thunk of FMFUpdatePrefsAction.__allocating_init(prefs:)()
{
  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t sub_21CA9FA90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t sub_21CA9FAA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 16))();
}

uint64_t sub_21CA9FAB8()
{
  return sub_21CB89090();
}

uint64_t sub_21CA9FB14()
{
  swift_bridgeObjectRetain();
  sub_21CB88380();

  return swift_bridgeObjectRelease();
}

uint64_t sub_21CA9FB6C()
{
  return sub_21CB89090();
}

uint64_t sub_21CA9FBC4(void *a1, void *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1]) {
    return 1;
  }
  else {
    return sub_21CB88F50();
  }
}

uint64_t sub_21CA9FBF4()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *v1;
  swift_task_dealloc();
  if (v0)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    char v4 = *(uint64_t (**)(void))(v3 + 8);
    return v4();
  }
  else
  {
    uint64_t v6 = *(void *)(v2 + 48);
    return MEMORY[0x270FA2498](sub_21CA9FD90, v6, 0);
  }
}

uint64_t sub_21CA9FD90()
{
  uint64_t v1 = v0[7];
  uint64_t v3 = v0[5];
  uint64_t v2 = v0[6];
  uint64_t v4 = sub_21CB88640();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v1, 1, 1, v4);
  uint64_t v5 = swift_allocObject();
  swift_weakInit();
  uint64_t v6 = (void *)swift_allocObject();
  v6[2] = 0;
  v6[3] = 0;
  v6[4] = v5;
  v6[5] = v3;
  swift_bridgeObjectRetain();
  *(void *)(v2 + 136) = sub_21CB0A588(v1, (uint64_t)&unk_267C959C0, (uint64_t)v6);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_21CA9FF1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[7] = a4;
  v5[8] = a5;
  v5[9] = *(void *)(type metadata accessor for FMFFriend() - 8);
  v5[10] = swift_task_alloc();
  uint64_t v6 = sub_21CB87840();
  v5[11] = v6;
  v5[12] = *(void *)(v6 - 8);
  v5[13] = swift_task_alloc();
  uint64_t v7 = sub_21CB88C70();
  v5[14] = v7;
  v5[15] = *(void *)(v7 - 8);
  v5[16] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_21CAA0090, 0, 0);
}

uint64_t sub_21CAA0090()
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  v0[17] = Strong;
  if (Strong)
  {
    v0[6] = 0x403E000000000000;
    if (qword_267C949A0 != -1) {
      swift_once();
    }
    uint64_t v2 = swift_task_alloc();
    *(unsigned char *)(v2 + 16) = 4;
    *(void *)(v2 + 24) = v0 + 6;
    sub_21CB88910();
    swift_task_dealloc();
    uint64_t v3 = sub_21CB890D0();
    uint64_t v5 = v4;
    sub_21CB88C60();
    uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_267C957A0 + dword_267C957A0);
    uint64_t v6 = (void *)swift_task_alloc();
    v0[18] = v6;
    *uint64_t v6 = v0;
    v6[1] = sub_21CAA0290;
    return v9(v3, v5, 0, 0, 1);
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    int v8 = (uint64_t (*)(void))v0[1];
    return v8();
  }
}

uint64_t sub_21CAA0290()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 152) = v0;
  swift_task_dealloc();
  (*(void (**)(void, void))(v2[15] + 8))(v2[16], v2[14]);
  if (v0) {
    uint64_t v3 = sub_21CAA06D4;
  }
  else {
    uint64_t v3 = sub_21CAA03F8;
  }
  return MEMORY[0x270FA2498](v3, 0, 0);
}

uint64_t sub_21CAA03F8()
{
  uint64_t v1 = v0[19];
  sub_21CB88690();
  if (v1)
  {
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v2 = (uint64_t (*)(void))v0[1];
    return v2();
  }
  else
  {
    if (qword_267C94990 != -1) {
      swift_once();
    }
    uint64_t v4 = sub_21CB880A0();
    sub_21CA4CC18(v4, (uint64_t)qword_267CA5368);
    uint64_t v5 = sub_21CB88070();
    os_log_type_t v6 = sub_21CB88880();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v7 = 0;
      _os_log_impl(&dword_21CA00000, v5, v6, "FMFSecureLocationCtrl: Stop remaining locating spinners", v7, 2u);
      MEMORY[0x21D4B6B70](v7, -1, -1);
    }
    uint64_t v8 = v0[8];

    int64_t v9 = *(void *)(v8 + 16);
    uint64_t v10 = MEMORY[0x263F8EE78];
    if (v9)
    {
      uint64_t v11 = v0[9];
      uint64_t v12 = v0[10];
      uint64_t v13 = v0[8];
      uint64_t v23 = MEMORY[0x263F8EE78];
      sub_21CA45524(0, v9, 0);
      uint64_t v14 = v13 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
      uint64_t v15 = *(void *)(v11 + 72);
      uint64_t v10 = v23;
      do
      {
        uint64_t v16 = (uint64_t *)v0[10];
        sub_21CA570B0(v14, (uint64_t)v16, (uint64_t (*)(void))type metadata accessor for FMFFriend);
        uint64_t v17 = *v16;
        uint64_t v18 = *(void *)(v12 + 8);
        swift_bridgeObjectRetain();
        sub_21CA581B8((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for FMFFriend);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_21CA45524(0, *(void *)(v10 + 16) + 1, 1);
          uint64_t v10 = v23;
        }
        unint64_t v20 = *(void *)(v10 + 16);
        unint64_t v19 = *(void *)(v10 + 24);
        if (v20 >= v19 >> 1)
        {
          sub_21CA45524(v19 > 1, v20 + 1, 1);
          uint64_t v10 = v23;
        }
        *(void *)(v10 + 16) = v20 + 1;
        uint64_t v21 = v10 + 16 * v20;
        *(void *)(v21 + 32) = v17;
        *(void *)(v21 + 40) = v18;
        v14 += v15;
        --v9;
      }
      while (v9);
    }
    v0[20] = v10;
    uint64_t v22 = v0[17];
    (*(void (**)(void, void, void))(v0[12] + 104))(v0[13], *MEMORY[0x263F3CCA8], v0[11]);
    return MEMORY[0x270FA2498](sub_21CAA0A6C, v22, 0);
  }
}

uint64_t sub_21CAA06D4()
{
  if (qword_267C94990 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_21CB880A0();
  sub_21CA4CC18(v1, (uint64_t)qword_267CA5368);
  uint64_t v2 = sub_21CB88070();
  os_log_type_t v3 = sub_21CB88880();
  BOOL v4 = os_log_type_enabled(v2, v3);
  uint64_t v5 = (void *)v0[19];
  if (v4)
  {
    os_log_type_t v6 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)os_log_type_t v6 = 0;
    _os_log_impl(&dword_21CA00000, v2, v3, "FMFSecureLocationCtrl: Shallow loading task cancelled", v6, 2u);
    MEMORY[0x21D4B6B70](v6, -1, -1);
  }

  sub_21CB88690();
  if (qword_267C94990 != -1) {
    swift_once();
  }
  sub_21CA4CC18(v1, (uint64_t)qword_267CA5368);
  uint64_t v7 = sub_21CB88070();
  os_log_type_t v8 = sub_21CB88880();
  if (os_log_type_enabled(v7, v8))
  {
    int64_t v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)int64_t v9 = 0;
    _os_log_impl(&dword_21CA00000, v7, v8, "FMFSecureLocationCtrl: Stop remaining locating spinners", v9, 2u);
    MEMORY[0x21D4B6B70](v9, -1, -1);
  }
  uint64_t v10 = v0[8];

  int64_t v11 = *(void *)(v10 + 16);
  uint64_t v12 = MEMORY[0x263F8EE78];
  if (v11)
  {
    uint64_t v13 = v0[9];
    uint64_t v14 = v0[10];
    uint64_t v15 = v0[8];
    uint64_t v26 = MEMORY[0x263F8EE78];
    sub_21CA45524(0, v11, 0);
    uint64_t v16 = v15 + ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80));
    uint64_t v17 = *(void *)(v13 + 72);
    uint64_t v12 = v26;
    do
    {
      uint64_t v18 = (uint64_t *)v0[10];
      sub_21CA570B0(v16, (uint64_t)v18, (uint64_t (*)(void))type metadata accessor for FMFFriend);
      uint64_t v19 = *v18;
      uint64_t v20 = *(void *)(v14 + 8);
      swift_bridgeObjectRetain();
      sub_21CA581B8((uint64_t)v18, (uint64_t (*)(void))type metadata accessor for FMFFriend);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_21CA45524(0, *(void *)(v12 + 16) + 1, 1);
        uint64_t v12 = v26;
      }
      unint64_t v22 = *(void *)(v12 + 16);
      unint64_t v21 = *(void *)(v12 + 24);
      if (v22 >= v21 >> 1)
      {
        sub_21CA45524(v21 > 1, v22 + 1, 1);
        uint64_t v12 = v26;
      }
      *(void *)(v12 + 16) = v22 + 1;
      uint64_t v23 = v12 + 16 * v22;
      *(void *)(v23 + 32) = v19;
      *(void *)(v23 + 40) = v20;
      v16 += v17;
      --v11;
    }
    while (v11);
  }
  v0[20] = v12;
  uint64_t v24 = v0[17];
  (*(void (**)(void, void, void))(v0[12] + 104))(v0[13], *MEMORY[0x263F3CCA8], v0[11]);
  return MEMORY[0x270FA2498](sub_21CAA0A6C, v24, 0);
}

uint64_t sub_21CAA0A6C()
{
  if (*(void *)(v0[20] + 16)
    && MEMORY[0x21D4B6C80](v0[17] + OBJC_IVAR____TtC7FMFCore27FMFSecureLocationController_delegate))
  {
    sub_21CA16848(0, v0[13], v0[20]);
    swift_unknownObjectRelease();
  }
  swift_bridgeObjectRelease();
  (*(void (**)(void, void))(v0[12] + 8))(v0[13], v0[11]);
  return MEMORY[0x270FA2498](sub_21CAA0B30, 0, 0);
}

uint64_t sub_21CAA0B30()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_21CAA0BB4()
{
  *(void *)(v1 + 152) = v0;
  sub_21CA57E34((uint64_t *)&unk_267C951B0);
  *(void *)(v1 + 160) = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_21CAA0C48, v0, 0);
}

uint64_t sub_21CAA0C48()
{
  if (qword_267C94990 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_21CB880A0();
  v0[21] = sub_21CA4CC18(v1, (uint64_t)qword_267CA5368);
  uint64_t v2 = sub_21CB88070();
  os_log_type_t v3 = sub_21CB88880();
  if (os_log_type_enabled(v2, v3))
  {
    BOOL v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)BOOL v4 = 0;
    _os_log_impl(&dword_21CA00000, v2, v3, "FMFSecureLocationCtrl: stop refreshing", v4, 2u);
    MEMORY[0x21D4B6B70](v4, -1, -1);
  }
  uint64_t v5 = (void *)v0[19];

  swift_beginAccess();
  uint64_t v6 = MEMORY[0x263F8EE80];
  v5[15] = MEMORY[0x263F8EE80];
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v5[16] = v6;
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v5[19] = v6;
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v5[20] = v6;
  swift_bridgeObjectRelease();
  if (v5[17])
  {
    swift_retain();
    sub_21CA57E34((uint64_t *)&unk_267C96F50);
    sub_21CB88670();
    swift_release();
  }
  uint64_t v7 = v0[19];
  if (*(void *)(v7 + 144))
  {
    swift_retain();
    sub_21CA57E34((uint64_t *)&unk_267C96F50);
    sub_21CB88670();
    swift_release();
    uint64_t v7 = v0[19];
  }
  uint64_t v8 = *(void *)(v7 + 112);
  v0[22] = v8;
  if (v8)
  {
    swift_retain();
    int64_t v9 = (void *)swift_task_alloc();
    v0[23] = v9;
    void *v9 = v0;
    v9[1] = sub_21CAA0FB0;
    return MEMORY[0x270F296D0]();
  }
  else
  {
    uint64_t v10 = v0[20];
    uint64_t v11 = sub_21CB87590();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v10, 1, 1, v11);
    uint64_t v12 = v7 + OBJC_IVAR____TtC7FMFCore27FMFSecureLocationController_startRefreshingTimestamp;
    swift_beginAccess();
    sub_21CAB68E0(v10, v12, (uint64_t *)&unk_267C951B0);
    swift_endAccess();
    swift_task_dealloc();
    uint64_t v13 = (uint64_t (*)(void))v0[1];
    return v13();
  }
}

uint64_t sub_21CAA0FB0()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 192) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 152);
    BOOL v4 = sub_21CAA1468;
  }
  else
  {
    uint64_t v5 = *(void *)(v2 + 152);
    swift_release();
    BOOL v4 = sub_21CAA10D8;
    uint64_t v3 = v5;
  }
  return MEMORY[0x270FA2498](v4, v3, 0);
}

uint64_t sub_21CAA10D8()
{
  uint64_t v1 = v0[19];
  uint64_t v2 = *(void *)(v1 + 112);
  v0[25] = v2;
  if (v2)
  {
    swift_retain();
    uint64_t v3 = (void *)swift_task_alloc();
    v0[26] = v3;
    *uint64_t v3 = v0;
    v3[1] = sub_21CAA1250;
    return MEMORY[0x270F296A0]();
  }
  else
  {
    uint64_t v4 = v0[20];
    uint64_t v5 = sub_21CB87590();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 1, 1, v5);
    uint64_t v6 = v1 + OBJC_IVAR____TtC7FMFCore27FMFSecureLocationController_startRefreshingTimestamp;
    swift_beginAccess();
    sub_21CAB68E0(v4, v6, (uint64_t *)&unk_267C951B0);
    swift_endAccess();
    swift_task_dealloc();
    uint64_t v7 = (uint64_t (*)(void))v0[1];
    return v7();
  }
}

uint64_t sub_21CAA1250()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 216) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 152);
    uint64_t v4 = sub_21CAA1740;
  }
  else
  {
    uint64_t v5 = *(void *)(v2 + 152);
    swift_release();
    uint64_t v4 = sub_21CAA1378;
    uint64_t v3 = v5;
  }
  return MEMORY[0x270FA2498](v4, v3, 0);
}

uint64_t sub_21CAA1378()
{
  uint64_t v2 = v0[19];
  uint64_t v1 = v0[20];
  uint64_t v3 = sub_21CB87590();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v1, 1, 1, v3);
  uint64_t v4 = v2 + OBJC_IVAR____TtC7FMFCore27FMFSecureLocationController_startRefreshingTimestamp;
  swift_beginAccess();
  sub_21CAB68E0(v1, v4, (uint64_t *)&unk_267C951B0);
  swift_endAccess();
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_21CAA1468()
{
  uint64_t v1 = (void *)v0[24];
  swift_release();
  id v2 = v1;
  id v3 = v1;
  uint64_t v4 = sub_21CB88070();
  os_log_type_t v5 = sub_21CB88880();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (void *)v0[24];
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 138412290;
    id v9 = v6;
    uint64_t v10 = _swift_stdlib_bridgeErrorToNSError();
    v0[18] = v10;
    sub_21CB889C0();
    *uint64_t v8 = v10;

    _os_log_impl(&dword_21CA00000, v4, v5, "FMFSecureLocationCtrl: Stop refreshing location failed with error: %@", v7, 0xCu);
    sub_21CA57E34(&qword_267C95020);
    swift_arrayDestroy();
    MEMORY[0x21D4B6B70](v8, -1, -1);
    MEMORY[0x21D4B6B70](v7, -1, -1);
  }
  else
  {
    uint64_t v11 = (void *)v0[24];
  }
  uint64_t v12 = v0[19];
  uint64_t v13 = *(void *)(v12 + 112);
  v0[25] = v13;
  if (v13)
  {
    swift_retain();
    uint64_t v14 = (void *)swift_task_alloc();
    v0[26] = v14;
    *uint64_t v14 = v0;
    v14[1] = sub_21CAA1250;
    return MEMORY[0x270F296A0]();
  }
  else
  {
    uint64_t v15 = v0[20];
    uint64_t v16 = sub_21CB87590();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v15, 1, 1, v16);
    uint64_t v17 = v12 + OBJC_IVAR____TtC7FMFCore27FMFSecureLocationController_startRefreshingTimestamp;
    swift_beginAccess();
    sub_21CAB68E0(v15, v17, (uint64_t *)&unk_267C951B0);
    swift_endAccess();
    swift_task_dealloc();
    uint64_t v18 = (uint64_t (*)(void))v0[1];
    return v18();
  }
}

uint64_t sub_21CAA1740()
{
  uint64_t v1 = (void *)v0[27];
  swift_release();
  id v2 = v1;
  id v3 = v1;
  uint64_t v4 = sub_21CB88070();
  os_log_type_t v5 = sub_21CB88880();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (void *)v0[27];
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 138412290;
    id v9 = v6;
    uint64_t v10 = _swift_stdlib_bridgeErrorToNSError();
    v0[17] = v10;
    sub_21CB889C0();
    *uint64_t v8 = v10;

    _os_log_impl(&dword_21CA00000, v4, v5, "FMFSecureLocationCtrl: Stop updating friends failed with error: %@", v7, 0xCu);
    sub_21CA57E34(&qword_267C95020);
    swift_arrayDestroy();
    MEMORY[0x21D4B6B70](v8, -1, -1);
    MEMORY[0x21D4B6B70](v7, -1, -1);
  }
  else
  {
    uint64_t v11 = (void *)v0[27];
  }
  uint64_t v13 = v0[19];
  uint64_t v12 = v0[20];
  uint64_t v14 = sub_21CB87590();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v12, 1, 1, v14);
  uint64_t v15 = v13 + OBJC_IVAR____TtC7FMFCore27FMFSecureLocationController_startRefreshingTimestamp;
  swift_beginAccess();
  sub_21CAB68E0(v12, v15, (uint64_t *)&unk_267C951B0);
  swift_endAccess();
  swift_task_dealloc();
  uint64_t v16 = (uint64_t (*)(void))v0[1];
  return v16();
}

uint64_t sub_21CAA198C()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_21CAA1A18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[18] = a4;
  v5[19] = a5;
  uint64_t v7 = sub_21CB87840();
  v5[20] = v7;
  v5[21] = *(void *)(v7 - 8);
  v5[22] = swift_task_alloc();
  uint64_t v8 = sub_21CB87860();
  v5[23] = v8;
  v5[24] = *(void *)(v8 - 8);
  v5[25] = swift_task_alloc();
  v5[26] = swift_task_alloc();
  uint64_t v9 = sub_21CB87CC0();
  v5[27] = v9;
  v5[28] = *(void *)(v9 - 8);
  v5[29] = swift_task_alloc();
  uint64_t v10 = sub_21CB87C80();
  v5[30] = v10;
  v5[31] = *(void *)(v10 - 8);
  v5[32] = swift_task_alloc();
  uint64_t v11 = sub_21CB87900();
  v5[33] = v11;
  v5[34] = *(void *)(v11 - 8);
  v5[35] = swift_task_alloc();
  v5[36] = swift_task_alloc();
  v5[37] = swift_task_alloc();
  v5[38] = swift_task_alloc();
  v5[39] = swift_task_alloc();
  sub_21CA57E34(&qword_267C959A8);
  v5[40] = swift_task_alloc();
  uint64_t v12 = sub_21CA57E34(&qword_267C959B0);
  v5[41] = v12;
  v5[42] = *(void *)(v12 - 8);
  v5[43] = swift_task_alloc();
  sub_21CA57E34(&qword_267C95988);
  v5[44] = swift_task_alloc();
  uint64_t v13 = sub_21CA57E34(&qword_267C95990);
  v5[45] = v13;
  v5[46] = *(void *)(v13 - 8);
  v5[47] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_21CAA1DB0, a5, 0);
}

uint64_t sub_21CAA1DB0()
{
  uint64_t v1 = *(void *)(v0 + 360);
  uint64_t v2 = *(void *)(v0 + 368);
  uint64_t v3 = *(void *)(v0 + 352);
  sub_21CA24E80(*(void *)(v0 + 144), v3, &qword_267C95988);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_21CA1B88C(*(void *)(v0 + 352), &qword_267C95988);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
    return v4();
  }
  else
  {
    (*(void (**)(void, void, void))(*(void *)(v0 + 368) + 32))(*(void *)(v0 + 376), *(void *)(v0 + 352), *(void *)(v0 + 360));
    sub_21CB88650();
    *(void *)(v0 + 384) = sub_21CA07D00(&qword_267C95800, (void (*)(uint64_t))type metadata accessor for FMFSecureLocationController);
    swift_beginAccess();
    *(_DWORD *)(v0 + 440) = *MEMORY[0x263F3CD78];
    *(_DWORD *)(v0 + 444) = *MEMORY[0x263F3CCE0];
    *(_DWORD *)(v0 + 448) = *MEMORY[0x263F3CCA8];
    *(void *)(v0 + 392) = 0;
    uint64_t v6 = *(void *)(v0 + 384);
    uint64_t v7 = *(void *)(v0 + 152);
    uint64_t v8 = (void *)swift_task_alloc();
    *(void *)(v0 + 400) = v8;
    *uint64_t v8 = v0;
    v8[1] = sub_21CAA2064;
    uint64_t v9 = *(void *)(v0 + 320);
    uint64_t v10 = *(void *)(v0 + 328);
    return MEMORY[0x270FA1F68](v9, v7, v6, v10);
  }
}

uint64_t sub_21CAA2064()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 152);
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_21CAA2174, v1, 0);
}

uint64_t sub_21CAA2174()
{
  uint64_t v110 = v0;
  uint64_t v1 = *(void *)(v0 + 320);
  uint64_t v2 = *(void *)(v0 + 264);
  uint64_t v3 = *(void *)(v0 + 272);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    uint64_t v5 = *(void *)(v0 + 368);
    uint64_t v4 = *(void *)(v0 + 376);
    uint64_t v6 = *(void *)(v0 + 360);
    (*(void (**)(void, void))(*(void *)(v0 + 336) + 8))(*(void *)(v0 + 344), *(void *)(v0 + 328));
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
LABEL_5:
    return v7();
  }
  uint64_t v8 = *(void *)(v0 + 392);
  (*(void (**)(void, uint64_t, uint64_t))(v3 + 32))(*(void *)(v0 + 312), v1, v2);
  sub_21CB88690();
  if (v8)
  {
    uint64_t v10 = *(void *)(v0 + 368);
    uint64_t v9 = *(void *)(v0 + 376);
    uint64_t v11 = *(void *)(v0 + 360);
    uint64_t v13 = *(void *)(v0 + 336);
    uint64_t v12 = *(void *)(v0 + 344);
    uint64_t v14 = *(void *)(v0 + 328);
    (*(void (**)(void, void))(*(void *)(v0 + 272) + 8))(*(void *)(v0 + 312), *(void *)(v0 + 264));
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v12, v14);
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
    goto LABEL_5;
  }
  if (qword_267C94990 != -1) {
    swift_once();
  }
  uint64_t v16 = *(void *)(v0 + 304);
  uint64_t v17 = *(void *)(v0 + 312);
  uint64_t v18 = *(void *)(v0 + 264);
  uint64_t v19 = *(void *)(v0 + 272);
  uint64_t v20 = sub_21CB880A0();
  sub_21CA4CC18(v20, (uint64_t)qword_267CA5368);
  unint64_t v21 = *(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 16);
  v21(v16, v17, v18);
  unint64_t v22 = sub_21CB88070();
  os_log_type_t v23 = sub_21CB88850();
  BOOL v24 = os_log_type_enabled(v22, v23);
  uint64_t v25 = *(void *)(v0 + 304);
  if (v24)
  {
    uint64_t v26 = *(void *)(v0 + 296);
    uint64_t v27 = v21;
    uint64_t v29 = *(void *)(v0 + 264);
    uint64_t v28 = *(void *)(v0 + 272);
    uint64_t v30 = swift_slowAlloc();
    uint64_t v31 = swift_slowAlloc();
    v109[0] = v31;
    *(_DWORD *)uint64_t v30 = 136315138;
    v27(v26, v25, v29);
    uint64_t v32 = sub_21CB88310();
    *(void *)(v30 + 4) = sub_21CA4E450(v32, v33, v109);
    swift_bridgeObjectRelease();
    int v34 = *(void (**)(uint64_t, uint64_t))(v28 + 8);
    v34(v25, v29);
    unint64_t v21 = v27;
    _os_log_impl(&dword_21CA00000, v22, v23, "FMFSecureLocationCtrl: friendship stream update - %s", (uint8_t *)v30, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x21D4B6B70](v31, -1, -1);
    MEMORY[0x21D4B6B70](v30, -1, -1);
  }
  else
  {
    int v34 = *(void (**)(uint64_t, uint64_t))(*(void *)(v0 + 272) + 8);
    v34(v25, *(void *)(v0 + 264));
  }

  *(void *)(v0 + 408) = v34;
  int v35 = *(_DWORD *)(v0 + 440);
  uint64_t v36 = *(void *)(v0 + 288);
  uint64_t v37 = *(void *)(v0 + 264);
  uint64_t v38 = *(void *)(v0 + 272);
  v21(v36, *(void *)(v0 + 312), v37);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v38 + 88))(v36, v37) != v35)
  {
    uint64_t v72 = *(void *)(v0 + 288);
    uint64_t v73 = *(void *)(v0 + 264);
    v34(*(void *)(v0 + 312), v73);
LABEL_22:
    v34(v72, v73);
    goto LABEL_25;
  }
  v106 = v21;
  uint64_t v39 = *(void *)(v0 + 288);
  uint64_t v41 = *(void *)(v0 + 248);
  uint64_t v40 = *(void *)(v0 + 256);
  uint64_t v43 = *(void *)(v0 + 232);
  uint64_t v42 = *(void *)(v0 + 240);
  uint64_t v44 = *(void *)(v0 + 216);
  uint64_t v45 = *(void *)(v0 + 224);
  (*(void (**)(uint64_t, void))(*(void *)(v0 + 272) + 96))(v39, *(void *)(v0 + 264));
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v41 + 32))(v40, v39, v42);
  sub_21CB87C70();
  uint64_t v46 = sub_21CB87CB0();
  uint64_t v48 = v47;
  (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v43, v44);
  if (!v48)
  {
    uint64_t v72 = *(void *)(v0 + 312);
    uint64_t v73 = *(void *)(v0 + 264);
    (*(void (**)(void, void))(*(void *)(v0 + 248) + 8))(*(void *)(v0 + 256), *(void *)(v0 + 240));
    goto LABEL_22;
  }
  uint64_t v105 = v46;
  uint64_t v49 = *(unsigned int *)(v0 + 444);
  uint64_t v51 = *(void *)(v0 + 200);
  uint64_t v50 = *(void *)(v0 + 208);
  uint64_t v53 = *(void *)(v0 + 184);
  uint64_t v52 = *(void *)(v0 + 192);
  sub_21CB87C60();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v52 + 104))(v51, v49, v53);
  char v54 = sub_21CB87850();
  uint64_t v55 = *(void (**)(uint64_t, uint64_t))(v52 + 8);
  v55(v51, v53);
  v55(v50, v53);
  if (v54)
  {
    uint64_t v56 = *(void *)(*(void *)(v0 + 152) + 120);
    if (*(void *)(v56 + 16))
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      unint64_t v57 = sub_21CA5BCE0(v105, v48);
      if (v58)
      {
        uint64_t v59 = *(void *)(v0 + 312);
        uint64_t v60 = *(void *)(v0 + 280);
        uint64_t v61 = *(void *)(v0 + 264);
        uint64_t v62 = *(void *)(v56 + 56) + 32 * v57;
        uint64_t v102 = *(void *)v62;
        uint64_t v63 = *(void *)(v62 + 16);
        char v100 = *(unsigned char *)(v62 + 25);
        char v101 = *(unsigned char *)(v62 + 24);
        char v99 = *(unsigned char *)(v62 + 26);
        uint64_t v104 = *(void *)(v62 + 8);
        swift_bridgeObjectRetain();
        uint64_t v103 = v63;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v106(v60, v59, v61);
        uint64_t v64 = sub_21CB88070();
        os_log_type_t v65 = sub_21CB88880();
        if (os_log_type_enabled(v64, v65))
        {
          uint64_t v66 = *(void *)(v0 + 296);
          uint64_t v67 = *(void *)(v0 + 280);
          log = v64;
          uint64_t v68 = *(void *)(v0 + 264);
          uint64_t v69 = (uint8_t *)swift_slowAlloc();
          uint64_t v98 = swift_slowAlloc();
          v109[0] = v98;
          *(_DWORD *)uint64_t v69 = 136315138;
          v106(v66, v67, v68);
          uint64_t v70 = sub_21CB88310();
          *(void *)(v0 + 136) = sub_21CA4E450(v70, v71, v109);
          sub_21CB889C0();
          swift_bridgeObjectRelease();
          v34(v67, v68);
          uint64_t v64 = log;
          _os_log_impl(&dword_21CA00000, log, v65, "FMFSecureLocationCtrl: stream friend added but we already started locating them. Restart. - %s", v69, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x21D4B6B70](v98, -1, -1);
          MEMORY[0x21D4B6B70](v69, -1, -1);
        }
        else
        {
          v34(*(void *)(v0 + 280), *(void *)(v0 + 264));
        }

        swift_beginAccess();
        swift_bridgeObjectRetain();
        unint64_t v82 = sub_21CA5BCE0(v105, v48);
        char v84 = v83;
        swift_bridgeObjectRelease();
        if (v84)
        {
          uint64_t v85 = *(void *)(v0 + 152);
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v87 = *(void *)(v85 + 120);
          *(void *)(v0 + 128) = v87;
          *(void *)(v85 + 120) = 0x8000000000000000;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            sub_21CB84E38();
            uint64_t v87 = *(void *)(v0 + 128);
          }
          uint64_t v88 = *(void *)(v0 + 152);
          swift_bridgeObjectRelease();
          int v89 = (uint64_t *)(*(void *)(v87 + 56) + 32 * v82);
          uint64_t v90 = v89[1];
          uint64_t v108 = *v89;
          sub_21CB830F0(v82, v87);
          *(void *)(v88 + 120) = v87;
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v108 = 0;
          uint64_t v90 = 0;
        }
        uint64_t v91 = *(unsigned int *)(v0 + 448);
        uint64_t v92 = *(void *)(v0 + 168);
        uint64_t v93 = *(void *)(v0 + 176);
        uint64_t v94 = *(void *)(v0 + 160);
        swift_endAccess();
        swift_bridgeObjectRelease();
        sub_21CAB689C(v108, v90);
        sub_21CA57E34(&qword_267C95280);
        uint64_t inited = swift_initStackObject();
        *(void *)(v0 + 416) = inited;
        *(_OWORD *)(inited + 16) = xmmword_21CB8B220;
        *(void *)(inited + 32) = v102;
        *(void *)(inited + 40) = v104;
        *(void *)(inited + 48) = v103;
        *(unsigned char *)(inited + 56) = v101;
        *(unsigned char *)(inited + 57) = v100;
        *(unsigned char *)(inited + 58) = v99;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v92 + 104))(v93, v91, v94);
        uint64_t v96 = (void *)swift_task_alloc();
        *(void *)(v0 + 424) = v96;
        *uint64_t v96 = v0;
        v96[1] = sub_21CAA2CA8;
        uint64_t v97 = *(void *)(v0 + 176);
        return sub_21CAAD664(inited, v97);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v74 = *(void (**)(uint64_t, uint64_t))(v0 + 408);
  uint64_t v75 = *(void *)(v0 + 312);
  uint64_t v76 = *(void *)(v0 + 264);
  (*(void (**)(void, void))(*(void *)(v0 + 248) + 8))(*(void *)(v0 + 256), *(void *)(v0 + 240));
  v74(v75, v76);
LABEL_25:
  *(void *)(v0 + 392) = 0;
  uint64_t v77 = *(void *)(v0 + 384);
  uint64_t v78 = *(void *)(v0 + 152);
  uint64_t v79 = (void *)swift_task_alloc();
  *(void *)(v0 + 400) = v79;
  *uint64_t v79 = v0;
  v79[1] = sub_21CAA2064;
  uint64_t v80 = *(void *)(v0 + 320);
  uint64_t v81 = *(void *)(v0 + 328);
  return MEMORY[0x270FA1F68](v80, v78, v77, v81);
}

uint64_t sub_21CAA2CA8()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 432) = v0;
  swift_task_dealloc();
  uint64_t v3 = v2[22];
  uint64_t v4 = v2[21];
  uint64_t v5 = v2[20];
  uint64_t v6 = v2[19];
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  if (v0)
  {
    swift_bridgeObjectRelease();
    uint64_t v7 = sub_21CAA2F70;
  }
  else
  {
    swift_setDeallocating();
    swift_arrayDestroy();
    uint64_t v7 = sub_21CAA2E70;
  }
  return MEMORY[0x270FA2498](v7, v6, 0);
}

uint64_t sub_21CAA2E70()
{
  uint64_t v1 = v0[54];
  uint64_t v2 = (void (*)(uint64_t, uint64_t))v0[51];
  uint64_t v3 = v0[39];
  uint64_t v4 = v0[33];
  (*(void (**)(void, void))(v0[31] + 8))(v0[32], v0[30]);
  v2(v3, v4);
  v0[49] = v1;
  uint64_t v5 = v0[48];
  uint64_t v6 = v0[19];
  uint64_t v7 = (void *)swift_task_alloc();
  v0[50] = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_21CAA2064;
  uint64_t v8 = v0[40];
  uint64_t v9 = v0[41];
  return MEMORY[0x270FA1F68](v8, v6, v5, v9);
}

uint64_t sub_21CAA2F70()
{
  uint64_t v1 = (void (*)(uint64_t, uint64_t))v0[51];
  uint64_t v2 = v0[46];
  uint64_t v11 = v0[47];
  uint64_t v3 = v0[45];
  uint64_t v5 = v0[42];
  uint64_t v4 = v0[43];
  uint64_t v6 = v0[41];
  uint64_t v7 = v0[39];
  uint64_t v8 = v0[33];
  (*(void (**)(void, void))(v0[31] + 8))(v0[32], v0[30]);
  v1(v7, v8);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v11, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

uint64_t sub_21CAA3110()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_21CAA31DC@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v28 = sub_21CB87CC0();
  uint64_t v5 = *(void *)(v28 - 8);
  uint64_t result = MEMORY[0x270FA5388](v28);
  uint64_t v8 = (char *)v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void *)(a1 + 32);
  int64_t v10 = *(void *)(v9 + 16);
  uint64_t v11 = MEMORY[0x263F8EE78];
  if (v10)
  {
    uint64_t v25 = v8;
    v24[0] = a2;
    v24[1] = v2;
    uint64_t v30 = MEMORY[0x263F8EE78];
    swift_bridgeObjectRetain();
    sub_21CA443E0(0, v10, 0);
    uint64_t v12 = v30;
    uint64_t result = sub_21CA44CF4(v9);
    int64_t v13 = result;
    int v15 = v14;
    int v17 = v16 & 1;
    uint64_t v26 = v5;
    uint64_t v27 = v9 + 56;
    v24[2] = v5 + 32;
    uint64_t v18 = v25;
    while ((v13 & 0x8000000000000000) == 0 && v13 < 1 << *(unsigned char *)(v9 + 32))
    {
      if (((*(void *)(v27 + (((unint64_t)v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v13) & 1) == 0) {
        goto LABEL_14;
      }
      if (*(_DWORD *)(v9 + 36) != v15) {
        goto LABEL_15;
      }
      int v29 = v17;
      swift_bridgeObjectRetain_n();
      sub_21CB6114C(v11);
      sub_21CB87CA0();
      swift_bridgeObjectRelease();
      uint64_t v30 = v12;
      uint64_t v19 = v9;
      unint64_t v21 = *(void *)(v12 + 16);
      unint64_t v20 = *(void *)(v12 + 24);
      if (v21 >= v20 >> 1)
      {
        sub_21CA443E0(v20 > 1, v21 + 1, 1);
        uint64_t v12 = v30;
      }
      *(void *)(v12 + 16) = v21 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v26 + 32))(v12+ ((*(unsigned __int8 *)(v26 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80))+ *(void *)(v26 + 72) * v21, v18, v28);
      uint64_t result = sub_21CA44500(v13, v15, v29 & 1, v19);
      int64_t v13 = result;
      int v15 = v22;
      int v17 = v23 & 1;
      --v10;
      uint64_t v9 = v19;
      uint64_t v11 = MEMORY[0x263F8EE78];
      if (!v10)
      {
        sub_21CAB561C(result, v22, v17);
        uint64_t result = swift_bridgeObjectRelease();
        a2 = (void *)v24[0];
        goto LABEL_12;
      }
    }
    __break(1u);
LABEL_14:
    __break(1u);
LABEL_15:
    __break(1u);
  }
  else
  {
    uint64_t v12 = MEMORY[0x263F8EE78];
LABEL_12:
    *a2 = v12;
  }
  return result;
}

uint64_t sub_21CAA347C(uint64_t a1, uint64_t a2)
{
  v2[2] = a1;
  v2[3] = a2;
  type metadata accessor for FMFLocation();
  v2[4] = swift_task_alloc();
  uint64_t v3 = sub_21CB87CC0();
  v2[5] = v3;
  v2[6] = *(void *)(v3 - 8);
  v2[7] = swift_task_alloc();
  v2[8] = swift_task_alloc();
  v2[9] = swift_task_alloc();
  uint64_t v4 = sub_21CB87F10();
  v2[10] = v4;
  v2[11] = *(void *)(v4 - 8);
  v2[12] = swift_task_alloc();
  v2[13] = swift_task_alloc();
  uint64_t v5 = sub_21CB87930();
  v2[14] = v5;
  v2[15] = *(void *)(v5 - 8);
  v2[16] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_21CAA364C, 0, 0);
}

uint64_t sub_21CAA364C()
{
  uint64_t v41 = v0;
  uint64_t v2 = v0[15];
  uint64_t v1 = v0[16];
  uint64_t v3 = v0[14];
  (*(void (**)(uint64_t, void, uint64_t))(v2 + 16))(v1, v0[3], v3);
  int v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 88))(v1, v3);
  if (v4 == *MEMORY[0x263F3CDE8])
  {
    uint64_t v5 = v0[16];
    uint64_t v6 = v0[13];
    uint64_t v7 = v0[11];
    uint64_t v35 = v0[12];
    uint64_t v8 = v0[9];
    uint64_t v9 = v0[10];
    uint64_t v11 = v0[5];
    uint64_t v10 = v0[6];
    uint64_t v37 = v0[8];
    uint64_t v38 = v0[4];
    uint64_t v39 = v0[2];
    (*(void (**)(uint64_t, void))(v0[15] + 96))(v5, v0[14]);
    uint64_t v12 = v5 + *(int *)(sub_21CA57E34(&qword_267C95980) + 48);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))(v6, v5, v9);
    uint64_t v36 = *(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 32);
    v36(v8, v12, v11);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v35, v6, v9);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(v37, v8, v11);
    sub_21CA8FA68(v35, v37, v38);
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v9);
    uint64_t v13 = sub_21CA57E34(&qword_267C957E0);
    uint64_t v14 = v39 + *(int *)(v13 + 48);
    sub_21CA590D4(v38, v39, (uint64_t (*)(void))type metadata accessor for FMFLocation);
    v36(v14, v8, v11);
    int v15 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
    uint64_t v16 = v39;
  }
  else
  {
    uint64_t v18 = v0[15];
    uint64_t v17 = v0[16];
    uint64_t v19 = v0[14];
    if (v4 != *MEMORY[0x263F3CDE0])
    {
      uint64_t v29 = v0[2];
      uint64_t v30 = sub_21CA57E34(&qword_267C957E0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v29, 1, 1, v30);
      (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v19);
      goto LABEL_9;
    }
    uint64_t v21 = v0[6];
    uint64_t v20 = v0[7];
    uint64_t v22 = v0[5];
    (*(void (**)(void, void))(v18 + 96))(v0[16], v0[14]);
    char v23 = *(void (**)(uint64_t, uint64_t, uint64_t))(v21 + 32);
    v23(v20, v17, v22);
    uint64_t v24 = sub_21CB87CB0();
    uint64_t v26 = v0[7];
    if (!v25)
    {
      uint64_t v33 = v0[2];
      (*(void (**)(void, void))(v0[6] + 8))(v0[7], v0[5]);
      uint64_t v34 = sub_21CA57E34(&qword_267C957E0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v33, 1, 1, v34);
      goto LABEL_9;
    }
    uint64_t v27 = v0[5];
    uint64_t v28 = v0[2];
    char v40 = 1;
    sub_21CA916BC(v24, v25, &v40, 0, v28);
    uint64_t v13 = sub_21CA57E34(&qword_267C957E0);
    v23(v28 + *(int *)(v13 + 48), v26, v27);
    int v15 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
    uint64_t v16 = v28;
  }
  v15(v16, 0, 1, v13);
LABEL_9:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v31 = (uint64_t (*)(void))v0[1];
  return v31();
}

uint64_t sub_21CAA3A8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[280] = a5;
  v5[279] = a4;
  sub_21CA57E34((uint64_t *)&unk_267C951B0);
  v5[281] = swift_task_alloc();
  v5[282] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for FMFLocation();
  v5[283] = v7;
  v5[284] = *(void *)(v7 - 8);
  v5[285] = swift_task_alloc();
  uint64_t v8 = sub_21CA57E34(&qword_267C957E0);
  v5[286] = v8;
  v5[287] = *(void *)(v8 - 8);
  v5[288] = swift_task_alloc();
  v5[289] = swift_task_alloc();
  v5[290] = swift_task_alloc();
  v5[291] = swift_task_alloc();
  v5[292] = swift_task_alloc();
  v5[293] = swift_task_alloc();
  v5[294] = swift_task_alloc();
  v5[295] = swift_task_alloc();
  v5[296] = swift_task_alloc();
  v5[297] = swift_task_alloc();
  v5[298] = swift_task_alloc();
  v5[299] = swift_task_alloc();
  v5[300] = swift_task_alloc();
  v5[301] = swift_task_alloc();
  v5[302] = swift_task_alloc();
  v5[303] = swift_task_alloc();
  v5[304] = swift_task_alloc();
  v5[305] = sub_21CA57E34(&qword_267C95810);
  v5[306] = swift_task_alloc();
  uint64_t v9 = sub_21CA57E34(&qword_267C95818);
  v5[307] = v9;
  v5[308] = *(void *)(v9 - 8);
  v5[309] = swift_task_alloc();
  v5[310] = swift_task_alloc();
  uint64_t v10 = sub_21CB88C70();
  v5[311] = v10;
  v5[312] = *(void *)(v10 - 8);
  v5[313] = swift_task_alloc();
  v5[314] = sub_21CA57E34(&qword_267C95820);
  v5[315] = swift_task_alloc();
  v5[316] = sub_21CA57E34(&qword_267C95828);
  v5[317] = swift_task_alloc();
  sub_21CA57E34(&qword_267C957D0);
  v5[318] = swift_task_alloc();
  uint64_t v11 = sub_21CA57E34(&qword_267C957F0);
  v5[319] = v11;
  v5[320] = *(void *)(v11 - 8);
  v5[321] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_21CAA3EB0, a5, 0);
}

uint64_t sub_21CAA3EB0()
{
  uint64_t v1 = *(void *)(v0 + 2560);
  uint64_t v2 = *(void *)(v0 + 2552);
  uint64_t v3 = *(void *)(v0 + 2544);
  sub_21CA24E80(*(void *)(v0 + 2232), v3, &qword_267C957D0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v1 + 48))(v3, 1, v2) == 1)
  {
    sub_21CA1B88C(*(void *)(v0 + 2544), &qword_267C957D0);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    int v4 = *(uint64_t (**)(void))(v0 + 8);
    return v4();
  }
  else
  {
    uint64_t v6 = *(void *)(v0 + 2568);
    uint64_t v7 = *(void *)(v0 + 2560);
    uint64_t v8 = *(void *)(v0 + 2552);
    uint64_t v9 = *(void *)(v0 + 2536);
    uint64_t v20 = *(void *)(v0 + 2528);
    uint64_t v10 = *(void *)(v0 + 2520);
    uint64_t v11 = *(void *)(v0 + 2512);
    uint64_t v12 = *(void *)(v0 + 2504);
    uint64_t v13 = *(void *)(v0 + 2496);
    uint64_t v14 = *(void *)(v0 + 2488);
    (*(void (**)(uint64_t, void, uint64_t))(v7 + 32))(v6, *(void *)(v0 + 2544), v8);
    sub_21CB88FD0();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16))(v10, v12, v14);
    *(_OWORD *)(v10 + *(int *)(v11 + 36)) = xmmword_21CB8CFF0;
    uint64_t v15 = v10 + *(int *)(v11 + 40);
    *(void *)uint64_t v15 = 0;
    *(void *)(v15 + 8) = 0;
    *(unsigned char *)(v15 + 16) = 1;
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v12, v14);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v9, v6, v8);
    sub_21CA24E80(v10, v9 + *(int *)(v20 + 68), &qword_267C95820);
    uint64_t v16 = v9 + *(int *)(v20 + 72);
    *(void *)uint64_t v16 = 0;
    *(unsigned char *)(v16 + 8) = 1;
    sub_21CA1B88C(v10, &qword_267C95820);
    *(void *)(v0 + 2576) = sub_21CA1109C();
    *(unsigned char *)(v0 + 369) = v17;
    *(void *)(v0 + 2584) = v18;
    *(unsigned char *)(v0 + 370) = v19 & 1;
    *(void *)(v0 + 2592) = sub_21CA07D00(&qword_267C95800, (void (*)(uint64_t))type metadata accessor for FMFSecureLocationController);
    *(void *)(v0 + 2600) = OBJC_IVAR____TtC7FMFCore27FMFSecureLocationController_delegate;
    return MEMORY[0x270FA2498](sub_21CAA429C, 0, 0);
  }
}

uint64_t sub_21CAA429C()
{
  if (*(unsigned char *)(v0 + 370))
  {
    uint64_t v1 = *(void *)(v0 + 2240);
    return MEMORY[0x270FA2498](sub_21CAA43BC, v1, 0);
  }
  else
  {
    *(void *)(v0 + 2616) = 0;
    uint64_t v2 = *(void *)(*(void *)(v0 + 2584) + 16);
    uint64_t v3 = (void *)swift_task_alloc();
    *(void *)(v0 + 2624) = v3;
    *uint64_t v3 = v0;
    v3[1] = sub_21CAA5C20;
    uint64_t v4 = *(void *)(v0 + 2448);
    uint64_t v5 = *(void *)(v0 + 2440);
    return MEMORY[0x270FA2338](v4, &unk_267C95838, v2, sub_21CAB5A4C, v2, 0, 0, v5);
  }
}

uint64_t sub_21CAA43BC()
{
  swift_release();
  if (qword_267C94990 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_21CB880A0();
  sub_21CA4CC18(v1, (uint64_t)qword_267CA5368);
  uint64_t v2 = sub_21CB88070();
  os_log_type_t v3 = sub_21CB88880();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl(&dword_21CA00000, v2, v3, "FMFSecureLocationCtrl: location stream - ending", v4, 2u);
    MEMORY[0x21D4B6B70](v4, -1, -1);
  }
  uint64_t v5 = v0[321];
  uint64_t v6 = v0[320];
  uint64_t v7 = v0[319];
  uint64_t v8 = v0[317];

  sub_21CA1B88C(v8, &qword_267C95828);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

uint64_t sub_21CAA469C()
{
  uint64_t v169 = v0;
  uint64_t v1 = *(void *)(v0 + 2608);
  if (!v1)
  {
    swift_release();
    if (qword_267C94990 != -1) {
      swift_once();
    }
    uint64_t v8 = sub_21CB880A0();
    sub_21CA4CC18(v8, (uint64_t)qword_267CA5368);
    uint64_t v9 = sub_21CB88070();
    os_log_type_t v10 = sub_21CB88880();
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v11 = 0;
      _os_log_impl(&dword_21CA00000, v9, v10, "FMFSecureLocationCtrl: location stream - ending", v11, 2u);
      MEMORY[0x21D4B6B70](v11, -1, -1);
    }
    uint64_t v12 = *(void *)(v167 + 2568);
    uint64_t v13 = *(void *)(v167 + 2560);
    uint64_t v14 = *(void *)(v167 + 2552);
    uint64_t v15 = *(void *)(v167 + 2536);

    sub_21CA1B88C(v15, &qword_267C95828);
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v12, v14);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v7 = *(uint64_t (**)(void))(v167 + 8);
    goto LABEL_9;
  }
  *(unsigned char *)(v167 + 372) = *(unsigned char *)(v167 + 371);
  uint64_t v2 = *(void *)(v167 + 2632);
  sub_21CB88690();
  if (v2)
  {
    uint64_t v3 = *(void *)(v167 + 2568);
    uint64_t v4 = *(void *)(v167 + 2560);
    uint64_t v5 = *(void *)(v167 + 2552);
    uint64_t v6 = *(void *)(v167 + 2536);
    swift_release();
    swift_bridgeObjectRelease();
    sub_21CA1B88C(v6, &qword_267C95828);
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v7 = *(uint64_t (**)(void))(v167 + 8);
LABEL_9:
    return v7();
  }
  if (qword_267C94990 != -1) {
    swift_once();
  }
  uint64_t v17 = sub_21CB880A0();
  sub_21CA4CC18(v17, (uint64_t)qword_267CA5368);
  swift_bridgeObjectRetain();
  uint64_t v18 = sub_21CB88070();
  os_log_type_t v19 = sub_21CB88880();
  if (os_log_type_enabled(v18, v19))
  {
    uint64_t v20 = swift_slowAlloc();
    *(_DWORD *)uint64_t v20 = 134217984;
    *(void *)(v20 + 4) = *(void *)(v1 + 16);
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_21CA00000, v18, v19, "FMFSecureLocationCtrl: location stream update - updating %ld locations", (uint8_t *)v20, 0xCu);
    MEMORY[0x21D4B6B70](v20, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease();
  }

  uint64_t v134 = v1;
  if (MEMORY[0x21D4B6C80](*(void *)(v167 + 2240) + *(void *)(v167 + 2600)))
  {
    int64_t v21 = *(void *)(v1 + 16);
    uint64_t v22 = MEMORY[0x263F8EE78];
    if (v21)
    {
      uint64_t v23 = *(void *)(v167 + 2296);
      *(void *)(v167 + 2208) = MEMORY[0x263F8EE78];
      v161 = (uint64_t *)(v167 + 2208);
      sub_21CA3D644(0, v21, 0);
      uint64_t v24 = v1 + ((*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80));
      uint64_t v163 = *(void *)(v23 + 72);
      do
      {
        uint64_t v25 = *(void *)(v167 + 2416);
        uint64_t v26 = *(void *)(v167 + 2408);
        uint64_t v27 = *(void *)(v167 + 2288);
        uint64_t v165 = *(void *)(v167 + 2280);
        sub_21CA24E80(v24, v25, &qword_267C957E0);
        uint64_t v28 = *(int *)(v27 + 48);
        uint64_t v29 = v26 + v28;
        uint64_t v30 = v25 + v28;
        sub_21CA570B0(v25, v26, (uint64_t (*)(void))type metadata accessor for FMFLocation);
        uint64_t v31 = sub_21CB87CC0();
        uint64_t v32 = *(void *)(v31 - 8);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v32 + 16))(v29, v30, v31);
        sub_21CA590D4(v26, v165, (uint64_t (*)(void))type metadata accessor for FMFLocation);
        (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v29, v31);
        sub_21CA1B88C(v25, &qword_267C957E0);
        uint64_t v22 = *(void *)(v167 + 2208);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_21CA3D644(0, *(void *)(v22 + 16) + 1, 1);
          uint64_t v22 = *v161;
        }
        unint64_t v34 = *(void *)(v22 + 16);
        unint64_t v33 = *(void *)(v22 + 24);
        if (v34 >= v33 >> 1)
        {
          sub_21CA3D644(v33 > 1, v34 + 1, 1);
          uint64_t v22 = *v161;
        }
        uint64_t v35 = *(void *)(v167 + 2280);
        uint64_t v36 = *(void *)(v167 + 2272);
        *(void *)(v22 + 16) = v34 + 1;
        sub_21CA590D4(v35, v22+ ((*(unsigned __int8 *)(v36 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80))+ *(void *)(v36 + 72) * v34, (uint64_t (*)(void))type metadata accessor for FMFLocation);
        v24 += v163;
        --v21;
      }
      while (v21);
    }
    sub_21CB149D0(v22);
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    uint64_t v1 = v134;
  }
  uint64_t v37 = *(void *)(v1 + 16);
  if (v37)
  {
    uint64_t v141 = v167 + 736;
    uint64_t v142 = v167 + 16;
    uint64_t v139 = v167 + 1456;
    uint64_t v140 = v167 + 1096;
    uint64_t v135 = v167 + 1816;
    uint64_t v136 = v167 + 376;
    uint64_t v38 = *(void *)(v167 + 2296);
    uint64_t v138 = *(void *)(v167 + 2400) + *(int *)(*(void *)(v167 + 2288) + 48);
    uint64_t v39 = v1 + ((*(unsigned __int8 *)(v38 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80));
    swift_beginAccess();
    uint64_t v137 = *(void *)(v38 + 72);
    for (uint64_t i = v37 - 1; ; --i)
    {
      uint64_t v40 = *(void *)(v167 + 2400);
      uint64_t v41 = *(void *)(v167 + 2392);
      uint64_t v42 = *(void *)(v167 + 2384);
      os_log_t logb = *(os_log_t *)(v167 + 2376);
      uint64_t v43 = *(void *)(v167 + 2368);
      uint64_t v156 = *(void *)(v167 + 2360);
      uint64_t v44 = *(void *)(v167 + 2288);
      uint64_t v154 = v39;
      sub_21CA24E80(v39, v40, &qword_267C957E0);
      uint64_t v45 = v41 + *(int *)(v44 + 48);
      sub_21CA590D4(v40, v41, (uint64_t (*)(void))type metadata accessor for FMFLocation);
      uint64_t v46 = sub_21CB87CC0();
      uint64_t v47 = *(void *)(v46 - 8);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v47 + 32))(v45, v138, v46);
      uint64_t v48 = v42 + *(int *)(v44 + 48);
      sub_21CA570B0(v41, v42, (uint64_t (*)(void))type metadata accessor for FMFLocation);
      uint64_t v164 = v47;
      uint64_t v49 = *(void (**)(uint64_t, uint64_t, uint64_t))(v47 + 16);
      uint64_t v50 = v48;
      uint64_t v51 = v45;
      v49(v50, v45, v46);
      sub_21CA26A4C(v42, (uint64_t)logb, &qword_267C957E0);
      uint64_t v52 = v43 + *(int *)(v44 + 48);
      sub_21CA570B0(v41, v43, (uint64_t (*)(void))type metadata accessor for FMFLocation);
      v49(v52, v45, v46);
      sub_21CA26A4C(v43, v156, &qword_267C957E0);
      uint64_t v53 = sub_21CB88070();
      os_log_type_t v54 = sub_21CB88880();
      uint64_t v166 = v46;
      uint64_t v160 = v45;
      v162 = v49;
      if (os_log_type_enabled(v53, v54))
      {
        uint64_t v55 = *(void *)(v167 + 2416);
        uint64_t v56 = *(void *)(v167 + 2376);
        uint64_t v157 = *(void *)(v167 + 2360);
        uint64_t v57 = *(void *)(v167 + 2288);
        uint64_t v58 = swift_slowAlloc();
        uint64_t v148 = swift_slowAlloc();
        v168[0] = v148;
        *(_DWORD *)uint64_t v58 = 136315394;
        uint64_t v59 = *(int *)(v57 + 48);
        os_log_type_t type = v54;
        uint64_t v60 = v55 + v59;
        uint64_t v61 = v56 + v59;
        sub_21CA570B0(v56, v55, (uint64_t (*)(void))type metadata accessor for FMFLocation);
        v49(v60, v61, v166);
        uint64_t v62 = sub_21CB87C90();
        unint64_t v64 = v63;
        v143 = *(void (**)(uint64_t, uint64_t))(v164 + 8);
        v143(v60, v166);
        sub_21CA581B8(v55, (uint64_t (*)(void))type metadata accessor for FMFLocation);
        *(void *)(v167 + 2216) = sub_21CA4E450(v62, v64, v168);
        sub_21CB889C0();
        swift_bridgeObjectRelease();
        sub_21CA1B88C(v56, &qword_267C957E0);
        *(_WORD *)(v58 + 12) = 2080;
        uint64_t v65 = *(int *)(v57 + 48);
        uint64_t v66 = v55 + v65;
        uint64_t v67 = v157 + v65;
        sub_21CA570B0(v157, v55, (uint64_t (*)(void))type metadata accessor for FMFLocation);
        v162(v66, v67, v166);
        uint64_t v68 = FMFLocation.debugDescription.getter();
        unint64_t v70 = v69;
        sub_21CA581B8(v55, (uint64_t (*)(void))type metadata accessor for FMFLocation);
        v143(v66, v166);
        *(void *)(v167 + 2224) = sub_21CA4E450(v68, v70, v168);
        sub_21CB889C0();
        swift_bridgeObjectRelease();
        sub_21CA1B88C(v157, &qword_267C957E0);
        _os_log_impl(&dword_21CA00000, v53, type, "FMFSecureLocationCtrl: location stream update - %s: %s", (uint8_t *)v58, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x21D4B6B70](v148, -1, -1);
        uint64_t v71 = v58;
        uint64_t v51 = v45;
        MEMORY[0x21D4B6B70](v71, -1, -1);
      }
      else
      {
        uint64_t v72 = *(void *)(v167 + 2360);
        sub_21CA1B88C(*(void *)(v167 + 2376), &qword_267C957E0);
        sub_21CA1B88C(v72, &qword_267C957E0);
      }

      uint64_t typea = *(void *)(v167 + 2392);
      uint64_t v73 = *(void *)(v167 + 2352);
      uint64_t v74 = *(void *)(v167 + 2344);
      uint64_t v75 = *(void *)(v167 + 2288);
      uint64_t v158 = *(void *)(v167 + 2264);
      uint64_t v76 = v73 + *(int *)(v75 + 48);
      sub_21CA570B0(typea, v73, (uint64_t (*)(void))type metadata accessor for FMFLocation);
      v162(v76, v51, v166);
      uint64_t v149 = sub_21CB87CB0();
      os_log_t log = v77;
      uint64_t v78 = v51;
      uint64_t v79 = *(void (**)(uint64_t, uint64_t))(v164 + 8);
      v79(v76, v166);
      uint64_t v80 = v74 + *(int *)(v75 + 48);
      sub_21CA570B0(typea, v74, (uint64_t (*)(void))type metadata accessor for FMFLocation);
      v162(v80, v78, v166);
      sub_21CA26A4C(v74 + *(int *)(v158 + 44), v139, &qword_267C951F0);
      sub_21CA26A4C(v139, v140, &qword_267C951F0);
      int v81 = sub_21CA7CDBC(v140);
      uint64_t v82 = *(void *)(v167 + 2344);
      uint64_t v83 = *(void *)(v167 + 2256);
      v159 = v79;
      if (v81 == 1)
      {
        char v84 = v162;
        sub_21CA581B8(v82, (uint64_t (*)(void))type metadata accessor for FMFLocation);
        v79(v80, v166);
        uint64_t v85 = sub_21CB87590();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v85 - 8) + 56))(v83, 1, 1, v85);
        uint64_t v86 = v166;
      }
      else
      {
        id v87 = *(id *)(v167 + 1400);
        sub_21CA581B8(v82, (uint64_t (*)(void))type metadata accessor for FMFLocation);
        id v88 = objc_msgSend(v87, sel_timestamp);

        char v84 = v162;
        sub_21CB87560();

        uint64_t v89 = sub_21CB87590();
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v89 - 8) + 56))(v83, 0, 1, v89);
        uint64_t v86 = v166;
        v79(v80, v166);
      }
      uint64_t v90 = *(void *)(v167 + 2336);
      uint64_t v91 = *(void *)(v167 + 2264);
      uint64_t v92 = v90 + *(int *)(*(void *)(v167 + 2288) + 48);
      sub_21CA570B0(*(void *)(v167 + 2392), v90, (uint64_t (*)(void))type metadata accessor for FMFLocation);
      v84(v92, v45, v86);
      sub_21CA26A4C(v90 + *(int *)(v91 + 44), v141, &qword_267C951F0);
      sub_21CA26A4C(v141, v142, &qword_267C951F0);
      int v93 = sub_21CA7CDBC(v142);
      if (v93 == 1) {
        id v94 = 0;
      }
      else {
        id v94 = *(id *)(v167 + 320);
      }
      BOOL v95 = v93 != 1;
      uint64_t v96 = *(void *)(v167 + 2416);
      uint64_t v97 = *(void *)(v167 + 2392);
      uint64_t v144 = *(void *)(v167 + 2352);
      *(void *)typeb = *(void *)(v167 + 2288);
      uint64_t v98 = *(void *)(v167 + 2256);
      sub_21CA581B8(*(void *)(v167 + 2336), (uint64_t (*)(void))type metadata accessor for FMFLocation);

      v159(v92, v166);
      sub_21CA41274(v149, (uint64_t)log, v98, v95);
      swift_bridgeObjectRelease();
      sub_21CA1B88C(v98, (uint64_t *)&unk_267C951B0);
      uint64_t v99 = v166;
      sub_21CA581B8(v144, (uint64_t (*)(void))type metadata accessor for FMFLocation);
      uint64_t v100 = v96 + *(int *)(*(void *)typeb + 48);
      sub_21CA570B0(v97, v96, (uint64_t (*)(void))type metadata accessor for FMFLocation);
      uint64_t v101 = v160;
      uint64_t v102 = v162;
      v162(v100, v160, v166);
      int v103 = *(unsigned __int8 *)(v96 + 33);
      sub_21CA581B8(v96, (uint64_t (*)(void))type metadata accessor for FMFLocation);
      v159(v100, v166);
      if (v103 == 2)
      {
        uint64_t v104 = *(void *)(v167 + 2392);
        uint64_t v105 = *(void *)(v167 + 2328);
        uint64_t v106 = *(void *)(v167 + 2320);
        uint64_t v107 = *(void *)(v167 + 2288);
        uint64_t v108 = *(void *)(v167 + 2264);
        uint64_t v109 = v105 + *(int *)(v107 + 48);
        sub_21CA570B0(v104, v105, (uint64_t (*)(void))type metadata accessor for FMFLocation);
        v162(v109, v160, v166);
        uint64_t v150 = sub_21CB87CB0();
        os_log_t loga = v110;
        v159(v109, v166);
        uint64_t v111 = *(int *)(v107 + 48);
        uint64_t v101 = v160;
        uint64_t v112 = v106 + v111;
        sub_21CA570B0(v104, v106, (uint64_t (*)(void))type metadata accessor for FMFLocation);
        v162(v112, v160, v166);
        sub_21CA26A4C(v106 + *(int *)(v108 + 44), v136, &qword_267C951F0);
        sub_21CA26A4C(v136, v135, &qword_267C951F0);
        int v113 = sub_21CA7CDBC(v135);
        uint64_t v114 = *(void *)(v167 + 2320);
        uint64_t v115 = *(void *)(v167 + 2248);
        if (v113 == 1)
        {
          sub_21CA581B8(*(void *)(v167 + 2320), (uint64_t (*)(void))type metadata accessor for FMFLocation);
          uint64_t v99 = v166;
          v159(v112, v166);
          uint64_t v116 = sub_21CB87590();
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v116 - 8) + 56))(v115, 1, 1, v116);
        }
        else
        {
          id v117 = *(id *)(v167 + 2120);
          sub_21CA581B8(v114, (uint64_t (*)(void))type metadata accessor for FMFLocation);
          id v118 = objc_msgSend(v117, sel_timestamp);

          sub_21CB87560();
          uint64_t v119 = sub_21CB87590();
          (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v119 - 8) + 56))(v115, 0, 1, v119);
          uint64_t v99 = v166;
          v159(v112, v166);
        }
        uint64_t v120 = *(void *)(v167 + 2328);
        uint64_t v121 = *(void *)(v167 + 2248);
        swift_bridgeObjectRetain();
        sub_21CAF6E98(v150, (uint64_t)loga, v121);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_21CA1B88C(v121, (uint64_t *)&unk_267C951B0);
        sub_21CA581B8(v120, (uint64_t (*)(void))type metadata accessor for FMFLocation);
        uint64_t v102 = v162;
      }
      uint64_t v122 = *(void *)(v167 + 2312);
      uint64_t v123 = v122 + *(int *)(*(void *)(v167 + 2288) + 48);
      sub_21CA570B0(*(void *)(v167 + 2392), v122, (uint64_t (*)(void))type metadata accessor for FMFLocation);
      v102(v123, v101, v99);
      int v124 = *(unsigned __int8 *)(v122 + 33);
      sub_21CA581B8(v122, (uint64_t (*)(void))type metadata accessor for FMFLocation);
      uint64_t v125 = *(void *)(v167 + 2392);
      if (v124 == 2)
      {
        uint64_t v126 = *(void *)(v167 + 2304);
        uint64_t v127 = v126 + *(int *)(*(void *)(v167 + 2288) + 48);
        sub_21CA570B0(v125, v126, (uint64_t (*)(void))type metadata accessor for FMFLocation);
        v102(v127, v101, v99);
        uint64_t v128 = sub_21CB87CB0();
        uint64_t v130 = *(void *)(v167 + 2392);
        uint64_t v131 = *(void *)(v167 + 2304);
        if (v129)
        {
          uint64_t v132 = v128;
          uint64_t v133 = v129;
          v159(v127, v99);
          sub_21CA581B8(v131, (uint64_t (*)(void))type metadata accessor for FMFLocation);
          sub_21CAA8F34(v132, v133);
          swift_bridgeObjectRelease();
          sub_21CA1B88C(v130, &qword_267C957E0);
        }
        else
        {
          sub_21CA1B88C(*(void *)(v167 + 2392), &qword_267C957E0);
          v159(v127, v99);
          sub_21CA581B8(v131, (uint64_t (*)(void))type metadata accessor for FMFLocation);
        }
        v159(v123, v99);
      }
      else
      {
        sub_21CA1B88C(v125, &qword_267C957E0);
        v159(v123, v99);
      }
      if (!i) {
        break;
      }
      uint64_t v39 = v154 + v137;
    }
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA2498](sub_21CAA748C, 0, 0);
}

uint64_t sub_21CAA5C20()
{
  *(void *)(*(void *)v1 + 2632) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_21CAA6078;
  }
  else {
    uint64_t v2 = sub_21CAA5D34;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_21CAA5D34()
{
  uint64_t v1 = *(void *)(v0 + 2448);
  int v2 = (*(uint64_t (**)(uint64_t, uint64_t, void))(*(void *)(v0 + 2464) + 48))(v1, 1, *(void *)(v0 + 2456));
  BOOL v3 = v2 != 1;
  if (v2 == 1)
  {
    os_log_type_t v10 = &qword_267C95810;
    uint64_t v9 = v1;
    goto LABEL_6;
  }
  uint64_t v4 = *(void *)(v0 + 2480);
  uint64_t v5 = *(void *)(v0 + 2472);
  uint64_t v6 = *(void *)(v0 + 2296);
  uint64_t v7 = *(void *)(v0 + 2288);
  sub_21CA26A4C(v1, v4, &qword_267C95818);
  sub_21CA24E80(v4, v5, &qword_267C95818);
  int v8 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v5, 2, v7);
  if (v8)
  {
    if (v8 == 1)
    {
      uint64_t v9 = *(void *)(v0 + 2480);
      os_log_type_t v10 = &qword_267C95818;
LABEL_6:
      sub_21CA1B88C(v9, v10);
      unint64_t v11 = *(void *)(v0 + 2616);
LABEL_7:
      *(unsigned char *)(v0 + 371) = v3;
      *(void *)(v0 + 2608) = v11;
      uint64_t v12 = *(void *)(v0 + 2240);
      uint64_t v13 = sub_21CAA469C;
LABEL_8:
      return MEMORY[0x270FA2498](v13, v12, 0);
    }
    unint64_t v11 = *(void *)(v0 + 2616);
    sub_21CA1B88C(*(void *)(v0 + 2480), &qword_267C95818);
    if (v11)
    {
      uint64_t v12 = *(void *)(v0 + 2240);
      uint64_t v13 = sub_21CAA6198;
      goto LABEL_8;
    }
  }
  else
  {
    unint64_t v11 = *(void *)(v0 + 2616);
    uint64_t v14 = *(void *)(v0 + 2432);
    uint64_t v15 = *(void *)(v0 + 2424);
    sub_21CA26A4C(*(void *)(v0 + 2472), v14, &qword_267C957E0);
    if (!v11) {
      unint64_t v11 = MEMORY[0x263F8EE78];
    }
    sub_21CA24E80(v14, v15, &qword_267C957E0);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v11 = sub_21CAC79A8(0, *(void *)(v11 + 16) + 1, 1, v11);
    }
    unint64_t v17 = *(void *)(v11 + 16);
    unint64_t v16 = *(void *)(v11 + 24);
    unint64_t v18 = v17 + 1;
    if (v17 >= v16 >> 1)
    {
      uint64_t v30 = sub_21CAC79A8(v16 > 1, v17 + 1, 1, v11);
      unint64_t v18 = v17 + 1;
      unint64_t v11 = v30;
    }
    char v19 = *(unsigned char *)(v0 + 369);
    uint64_t v20 = *(void *)(v0 + 2576);
    uint64_t v21 = *(void *)(v0 + 2480);
    uint64_t v22 = *(void *)(v0 + 2432);
    uint64_t v23 = *(void *)(v0 + 2424);
    uint64_t v24 = *(void *)(v0 + 2296);
    *(void *)(v11 + 16) = v18;
    sub_21CA26A4C(v23, v11+ ((*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80))+ *(void *)(v24 + 72) * v17, &qword_267C957E0);
    uint64_t v25 = *(void *)(v11 + 16);
    sub_21CA1B88C(v22, &qword_267C957E0);
    sub_21CA1B88C(v21, &qword_267C95818);
    if ((v19 & 1) == 0 && v25 == v20)
    {
      BOOL v3 = 0;
      goto LABEL_7;
    }
  }
  *(void *)(v0 + 2616) = v11;
  uint64_t v26 = *(void *)(*(void *)(v0 + 2584) + 16);
  uint64_t v27 = (void *)swift_task_alloc();
  *(void *)(v0 + 2624) = v27;
  void *v27 = v0;
  v27[1] = sub_21CAA5C20;
  uint64_t v28 = *(void *)(v0 + 2448);
  uint64_t v29 = *(void *)(v0 + 2440);
  return MEMORY[0x270FA2338](v28, &unk_267C95838, v26, sub_21CAB5A4C, v26, 0, 0, v29);
}

uint64_t sub_21CAA6078()
{
  uint64_t v1 = *(void *)(v0 + 2240);
  swift_bridgeObjectRelease();
  if (v1)
  {
    swift_getObjectType();
    uint64_t v2 = sub_21CB885F0();
    uint64_t v4 = v3;
  }
  else
  {
    uint64_t v2 = 0;
    uint64_t v4 = 0;
  }
  return MEMORY[0x270FA2498](sub_21CAA6110, v2, v4);
}

uint64_t sub_21CAA6110()
{
  *(void *)(v0 + 2200) = *(void *)(v0 + 2632);
  sub_21CA57E34((uint64_t *)&unk_267C96F50);
  swift_dynamicCast();
  return swift_willThrowTypedImpl();
}

uint64_t sub_21CAA6198()
{
  uint64_t v161 = v0;
  uint64_t v1 = *(void *)(v0 + 2616);
  *(unsigned char *)(v0 + 372) = 0;
  uint64_t v2 = *(void *)(v0 + 2632);
  sub_21CB88690();
  if (v2)
  {
    uint64_t v3 = *(void *)(v159 + 2568);
    uint64_t v4 = *(void *)(v159 + 2560);
    uint64_t v5 = *(void *)(v159 + 2552);
    uint64_t v6 = *(void *)(v159 + 2536);
    swift_release();
    swift_bridgeObjectRelease();
    sub_21CA1B88C(v6, &qword_267C95828);
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v7 = *(uint64_t (**)(void))(v159 + 8);
    return v7();
  }
  else
  {
    if (qword_267C94990 != -1) {
      swift_once();
    }
    uint64_t v9 = sub_21CB880A0();
    sub_21CA4CC18(v9, (uint64_t)qword_267CA5368);
    swift_bridgeObjectRetain();
    os_log_type_t v10 = sub_21CB88070();
    os_log_type_t v11 = sub_21CB88880();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = swift_slowAlloc();
      *(_DWORD *)uint64_t v12 = 134217984;
      *(void *)(v12 + 4) = *(void *)(v1 + 16);
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_21CA00000, v10, v11, "FMFSecureLocationCtrl: location stream update - updating %ld locations", (uint8_t *)v12, 0xCu);
      MEMORY[0x21D4B6B70](v12, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease();
    }

    uint64_t v126 = v1;
    if (MEMORY[0x21D4B6C80](*(void *)(v159 + 2240) + *(void *)(v159 + 2600)))
    {
      int64_t v13 = *(void *)(v1 + 16);
      uint64_t v14 = MEMORY[0x263F8EE78];
      if (v13)
      {
        uint64_t v15 = *(void *)(v159 + 2296);
        *(void *)(v159 + 2208) = MEMORY[0x263F8EE78];
        v153 = (uint64_t *)(v159 + 2208);
        sub_21CA3D644(0, v13, 0);
        uint64_t v16 = v1 + ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80));
        uint64_t v155 = *(void *)(v15 + 72);
        do
        {
          uint64_t v17 = *(void *)(v159 + 2416);
          uint64_t v18 = *(void *)(v159 + 2408);
          uint64_t v19 = *(void *)(v159 + 2288);
          uint64_t v157 = *(void *)(v159 + 2280);
          sub_21CA24E80(v16, v17, &qword_267C957E0);
          uint64_t v20 = *(int *)(v19 + 48);
          uint64_t v21 = v18 + v20;
          uint64_t v22 = v17 + v20;
          sub_21CA570B0(v17, v18, (uint64_t (*)(void))type metadata accessor for FMFLocation);
          uint64_t v23 = sub_21CB87CC0();
          uint64_t v24 = *(void *)(v23 - 8);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 16))(v21, v22, v23);
          sub_21CA590D4(v18, v157, (uint64_t (*)(void))type metadata accessor for FMFLocation);
          (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v21, v23);
          sub_21CA1B88C(v17, &qword_267C957E0);
          uint64_t v14 = *(void *)(v159 + 2208);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_21CA3D644(0, *(void *)(v14 + 16) + 1, 1);
            uint64_t v14 = *v153;
          }
          unint64_t v26 = *(void *)(v14 + 16);
          unint64_t v25 = *(void *)(v14 + 24);
          if (v26 >= v25 >> 1)
          {
            sub_21CA3D644(v25 > 1, v26 + 1, 1);
            uint64_t v14 = *v153;
          }
          uint64_t v27 = *(void *)(v159 + 2280);
          uint64_t v28 = *(void *)(v159 + 2272);
          *(void *)(v14 + 16) = v26 + 1;
          sub_21CA590D4(v27, v14+ ((*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80))+ *(void *)(v28 + 72) * v26, (uint64_t (*)(void))type metadata accessor for FMFLocation);
          v16 += v155;
          --v13;
        }
        while (v13);
      }
      sub_21CB149D0(v14);
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      uint64_t v1 = v126;
    }
    uint64_t v29 = *(void *)(v1 + 16);
    if (v29)
    {
      uint64_t v133 = v159 + 736;
      uint64_t v134 = v159 + 16;
      uint64_t v131 = v159 + 1456;
      uint64_t v132 = v159 + 1096;
      uint64_t v127 = v159 + 1816;
      uint64_t v128 = v159 + 376;
      uint64_t v30 = *(void *)(v159 + 2296);
      uint64_t v130 = *(void *)(v159 + 2400) + *(int *)(*(void *)(v159 + 2288) + 48);
      uint64_t v31 = v1 + ((*(unsigned __int8 *)(v30 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80));
      swift_beginAccess();
      uint64_t v129 = *(void *)(v30 + 72);
      for (uint64_t i = v29 - 1; ; --i)
      {
        uint64_t v32 = *(void *)(v159 + 2400);
        uint64_t v33 = *(void *)(v159 + 2392);
        uint64_t v34 = *(void *)(v159 + 2384);
        os_log_t logb = *(os_log_t *)(v159 + 2376);
        uint64_t v35 = *(void *)(v159 + 2368);
        uint64_t v147 = v31;
        uint64_t v148 = *(void *)(v159 + 2360);
        uint64_t v36 = *(void *)(v159 + 2288);
        sub_21CA24E80(v31, v32, &qword_267C957E0);
        uint64_t v37 = v33 + *(int *)(v36 + 48);
        sub_21CA590D4(v32, v33, (uint64_t (*)(void))type metadata accessor for FMFLocation);
        uint64_t v38 = sub_21CB87CC0();
        uint64_t v39 = *(void *)(v38 - 8);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v39 + 32))(v37, v130, v38);
        uint64_t v40 = v34 + *(int *)(v36 + 48);
        sub_21CA570B0(v33, v34, (uint64_t (*)(void))type metadata accessor for FMFLocation);
        uint64_t v156 = v39;
        uint64_t v41 = *(void (**)(uint64_t, uint64_t, uint64_t))(v39 + 16);
        uint64_t v42 = v40;
        uint64_t v43 = v37;
        v41(v42, v37, v38);
        sub_21CA26A4C(v34, (uint64_t)logb, &qword_267C957E0);
        uint64_t v44 = v35 + *(int *)(v36 + 48);
        sub_21CA570B0(v33, v35, (uint64_t (*)(void))type metadata accessor for FMFLocation);
        v41(v44, v37, v38);
        sub_21CA26A4C(v35, v148, &qword_267C957E0);
        uint64_t v45 = sub_21CB88070();
        os_log_type_t v46 = sub_21CB88880();
        uint64_t v158 = v38;
        uint64_t v152 = v37;
        uint64_t v154 = v41;
        if (os_log_type_enabled(v45, v46))
        {
          uint64_t v47 = *(void *)(v159 + 2416);
          uint64_t v48 = *(void *)(v159 + 2376);
          uint64_t v149 = *(void *)(v159 + 2360);
          uint64_t v49 = *(void *)(v159 + 2288);
          uint64_t v50 = swift_slowAlloc();
          uint64_t v140 = swift_slowAlloc();
          v160[0] = v140;
          *(_DWORD *)uint64_t v50 = 136315394;
          uint64_t v51 = *(int *)(v49 + 48);
          os_log_type_t type = v46;
          uint64_t v52 = v47 + v51;
          uint64_t v53 = v48 + v51;
          sub_21CA570B0(v48, v47, (uint64_t (*)(void))type metadata accessor for FMFLocation);
          v41(v52, v53, v158);
          uint64_t v54 = sub_21CB87C90();
          unint64_t v56 = v55;
          uint64_t v135 = *(void (**)(uint64_t, uint64_t))(v156 + 8);
          v135(v52, v158);
          sub_21CA581B8(v47, (uint64_t (*)(void))type metadata accessor for FMFLocation);
          *(void *)(v159 + 2216) = sub_21CA4E450(v54, v56, v160);
          sub_21CB889C0();
          swift_bridgeObjectRelease();
          sub_21CA1B88C(v48, &qword_267C957E0);
          *(_WORD *)(v50 + 12) = 2080;
          uint64_t v57 = *(int *)(v49 + 48);
          uint64_t v58 = v47 + v57;
          uint64_t v59 = v149 + v57;
          sub_21CA570B0(v149, v47, (uint64_t (*)(void))type metadata accessor for FMFLocation);
          v154(v58, v59, v158);
          uint64_t v60 = FMFLocation.debugDescription.getter();
          unint64_t v62 = v61;
          sub_21CA581B8(v47, (uint64_t (*)(void))type metadata accessor for FMFLocation);
          v135(v58, v158);
          *(void *)(v159 + 2224) = sub_21CA4E450(v60, v62, v160);
          sub_21CB889C0();
          swift_bridgeObjectRelease();
          sub_21CA1B88C(v149, &qword_267C957E0);
          _os_log_impl(&dword_21CA00000, v45, type, "FMFSecureLocationCtrl: location stream update - %s: %s", (uint8_t *)v50, 0x16u);
          swift_arrayDestroy();
          MEMORY[0x21D4B6B70](v140, -1, -1);
          uint64_t v63 = v50;
          uint64_t v43 = v37;
          MEMORY[0x21D4B6B70](v63, -1, -1);
        }
        else
        {
          uint64_t v64 = *(void *)(v159 + 2360);
          sub_21CA1B88C(*(void *)(v159 + 2376), &qword_267C957E0);
          sub_21CA1B88C(v64, &qword_267C957E0);
        }

        uint64_t typea = *(void *)(v159 + 2392);
        uint64_t v65 = *(void *)(v159 + 2352);
        uint64_t v66 = *(void *)(v159 + 2344);
        uint64_t v67 = *(void *)(v159 + 2288);
        uint64_t v150 = *(void *)(v159 + 2264);
        uint64_t v68 = v65 + *(int *)(v67 + 48);
        sub_21CA570B0(typea, v65, (uint64_t (*)(void))type metadata accessor for FMFLocation);
        v154(v68, v43, v158);
        uint64_t v141 = sub_21CB87CB0();
        os_log_t log = v69;
        uint64_t v70 = v43;
        uint64_t v71 = *(void (**)(uint64_t, uint64_t))(v156 + 8);
        v71(v68, v158);
        uint64_t v72 = v66 + *(int *)(v67 + 48);
        sub_21CA570B0(typea, v66, (uint64_t (*)(void))type metadata accessor for FMFLocation);
        v154(v72, v70, v158);
        sub_21CA26A4C(v66 + *(int *)(v150 + 44), v131, &qword_267C951F0);
        sub_21CA26A4C(v131, v132, &qword_267C951F0);
        int v73 = sub_21CA7CDBC(v132);
        uint64_t v74 = *(void *)(v159 + 2344);
        uint64_t v75 = *(void *)(v159 + 2256);
        v151 = v71;
        if (v73 == 1)
        {
          uint64_t v76 = v154;
          sub_21CA581B8(v74, (uint64_t (*)(void))type metadata accessor for FMFLocation);
          v71(v72, v158);
          uint64_t v77 = sub_21CB87590();
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v77 - 8) + 56))(v75, 1, 1, v77);
          uint64_t v78 = v158;
        }
        else
        {
          id v79 = *(id *)(v159 + 1400);
          sub_21CA581B8(v74, (uint64_t (*)(void))type metadata accessor for FMFLocation);
          id v80 = objc_msgSend(v79, sel_timestamp);

          uint64_t v76 = v154;
          sub_21CB87560();

          uint64_t v81 = sub_21CB87590();
          (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v81 - 8) + 56))(v75, 0, 1, v81);
          uint64_t v78 = v158;
          v71(v72, v158);
        }
        uint64_t v82 = *(void *)(v159 + 2336);
        uint64_t v83 = *(void *)(v159 + 2264);
        uint64_t v84 = v82 + *(int *)(*(void *)(v159 + 2288) + 48);
        sub_21CA570B0(*(void *)(v159 + 2392), v82, (uint64_t (*)(void))type metadata accessor for FMFLocation);
        v76(v84, v37, v78);
        sub_21CA26A4C(v82 + *(int *)(v83 + 44), v133, &qword_267C951F0);
        sub_21CA26A4C(v133, v134, &qword_267C951F0);
        int v85 = sub_21CA7CDBC(v134);
        if (v85 == 1) {
          id v86 = 0;
        }
        else {
          id v86 = *(id *)(v159 + 320);
        }
        BOOL v87 = v85 != 1;
        uint64_t v88 = *(void *)(v159 + 2416);
        uint64_t v89 = *(void *)(v159 + 2392);
        uint64_t v136 = *(void *)(v159 + 2352);
        *(void *)typeb = *(void *)(v159 + 2288);
        uint64_t v90 = *(void *)(v159 + 2256);
        sub_21CA581B8(*(void *)(v159 + 2336), (uint64_t (*)(void))type metadata accessor for FMFLocation);

        v151(v84, v158);
        sub_21CA41274(v141, (uint64_t)log, v90, v87);
        swift_bridgeObjectRelease();
        sub_21CA1B88C(v90, (uint64_t *)&unk_267C951B0);
        uint64_t v91 = v158;
        sub_21CA581B8(v136, (uint64_t (*)(void))type metadata accessor for FMFLocation);
        uint64_t v92 = v88 + *(int *)(*(void *)typeb + 48);
        sub_21CA570B0(v89, v88, (uint64_t (*)(void))type metadata accessor for FMFLocation);
        uint64_t v93 = v152;
        id v94 = v154;
        v154(v92, v152, v158);
        int v95 = *(unsigned __int8 *)(v88 + 33);
        sub_21CA581B8(v88, (uint64_t (*)(void))type metadata accessor for FMFLocation);
        v151(v92, v158);
        if (v95 == 2)
        {
          uint64_t v96 = *(void *)(v159 + 2392);
          uint64_t v97 = *(void *)(v159 + 2328);
          uint64_t v98 = *(void *)(v159 + 2320);
          uint64_t v99 = *(void *)(v159 + 2288);
          uint64_t v100 = *(void *)(v159 + 2264);
          uint64_t v101 = v97 + *(int *)(v99 + 48);
          sub_21CA570B0(v96, v97, (uint64_t (*)(void))type metadata accessor for FMFLocation);
          v154(v101, v152, v158);
          uint64_t v142 = sub_21CB87CB0();
          os_log_t loga = v102;
          v151(v101, v158);
          uint64_t v103 = *(int *)(v99 + 48);
          uint64_t v93 = v152;
          uint64_t v104 = v98 + v103;
          sub_21CA570B0(v96, v98, (uint64_t (*)(void))type metadata accessor for FMFLocation);
          v154(v104, v152, v158);
          sub_21CA26A4C(v98 + *(int *)(v100 + 44), v128, &qword_267C951F0);
          sub_21CA26A4C(v128, v127, &qword_267C951F0);
          int v105 = sub_21CA7CDBC(v127);
          uint64_t v106 = *(void *)(v159 + 2320);
          uint64_t v107 = *(void *)(v159 + 2248);
          if (v105 == 1)
          {
            sub_21CA581B8(*(void *)(v159 + 2320), (uint64_t (*)(void))type metadata accessor for FMFLocation);
            uint64_t v91 = v158;
            v151(v104, v158);
            uint64_t v108 = sub_21CB87590();
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v108 - 8) + 56))(v107, 1, 1, v108);
          }
          else
          {
            id v109 = *(id *)(v159 + 2120);
            sub_21CA581B8(v106, (uint64_t (*)(void))type metadata accessor for FMFLocation);
            id v110 = objc_msgSend(v109, sel_timestamp);

            sub_21CB87560();
            uint64_t v111 = sub_21CB87590();
            (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v111 - 8) + 56))(v107, 0, 1, v111);
            uint64_t v91 = v158;
            v151(v104, v158);
          }
          uint64_t v112 = *(void *)(v159 + 2328);
          uint64_t v113 = *(void *)(v159 + 2248);
          swift_bridgeObjectRetain();
          sub_21CAF6E98(v142, (uint64_t)loga, v113);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_21CA1B88C(v113, (uint64_t *)&unk_267C951B0);
          sub_21CA581B8(v112, (uint64_t (*)(void))type metadata accessor for FMFLocation);
          id v94 = v154;
        }
        uint64_t v114 = *(void *)(v159 + 2312);
        uint64_t v115 = v114 + *(int *)(*(void *)(v159 + 2288) + 48);
        sub_21CA570B0(*(void *)(v159 + 2392), v114, (uint64_t (*)(void))type metadata accessor for FMFLocation);
        v94(v115, v93, v91);
        int v116 = *(unsigned __int8 *)(v114 + 33);
        sub_21CA581B8(v114, (uint64_t (*)(void))type metadata accessor for FMFLocation);
        uint64_t v117 = *(void *)(v159 + 2392);
        if (v116 == 2)
        {
          uint64_t v118 = *(void *)(v159 + 2304);
          uint64_t v119 = v118 + *(int *)(*(void *)(v159 + 2288) + 48);
          sub_21CA570B0(v117, v118, (uint64_t (*)(void))type metadata accessor for FMFLocation);
          v94(v119, v93, v91);
          uint64_t v120 = sub_21CB87CB0();
          uint64_t v122 = *(void *)(v159 + 2392);
          uint64_t v123 = *(void *)(v159 + 2304);
          if (v121)
          {
            uint64_t v124 = v120;
            uint64_t v125 = v121;
            v151(v119, v91);
            sub_21CA581B8(v123, (uint64_t (*)(void))type metadata accessor for FMFLocation);
            sub_21CAA8F34(v124, v125);
            swift_bridgeObjectRelease();
            sub_21CA1B88C(v122, &qword_267C957E0);
          }
          else
          {
            sub_21CA1B88C(*(void *)(v159 + 2392), &qword_267C957E0);
            v151(v119, v91);
            sub_21CA581B8(v123, (uint64_t (*)(void))type metadata accessor for FMFLocation);
          }
          v151(v115, v91);
        }
        else
        {
          sub_21CA1B88C(v117, &qword_267C957E0);
          v151(v115, v91);
        }
        if (!i) {
          break;
        }
        uint64_t v31 = v147 + v129;
      }
    }
    swift_bridgeObjectRelease();
    return MEMORY[0x270FA2498](sub_21CAA748C, 0, 0);
  }
}

uint64_t sub_21CAA748C()
{
  if (*(unsigned char *)(v0 + 372) == 1)
  {
    uint64_t v1 = *(void *)(v0 + 2240);
    return MEMORY[0x270FA2498](sub_21CAA43BC, v1, 0);
  }
  else
  {
    *(void *)(v0 + 2616) = 0;
    uint64_t v2 = *(void *)(*(void *)(v0 + 2584) + 16);
    uint64_t v3 = (void *)swift_task_alloc();
    *(void *)(v0 + 2624) = v3;
    *uint64_t v3 = v0;
    v3[1] = sub_21CAA5C20;
    uint64_t v4 = *(void *)(v0 + 2448);
    uint64_t v5 = *(void *)(v0 + 2440);
    return MEMORY[0x270FA2338](v4, &unk_267C95838, v2, sub_21CAB5A4C, v2, 0, 0, v5);
  }
}

uint64_t sub_21CAA75B0(uint64_t a1, uint64_t a2)
{
  v3[10] = a2;
  v3[11] = v2;
  v3[9] = a1;
  uint64_t v4 = type metadata accessor for FMFFriend();
  v3[12] = v4;
  v3[13] = *(void *)(v4 - 8);
  v3[14] = swift_task_alloc();
  v3[15] = swift_task_alloc();
  v3[16] = swift_task_alloc();
  uint64_t v5 = sub_21CB87840();
  v3[17] = v5;
  v3[18] = *(void *)(v5 - 8);
  v3[19] = swift_task_alloc();
  v3[20] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_21CAA76FC, v2, 0);
}

uint64_t sub_21CAA76FC()
{
  uint64_t v63 = v0;
  uint64_t v1 = v0 + 9;
  uint64_t v2 = *(void *)(v0[9] + 16);
  if (v2)
  {
    if (qword_267C94990 != -1) {
      swift_once();
    }
    uint64_t v3 = v0[20];
    uint64_t v5 = v0[17];
    uint64_t v4 = v0[18];
    uint64_t v6 = v0[10];
    uint64_t v7 = sub_21CB880A0();
    sub_21CA4CC18(v7, (uint64_t)qword_267CA5368);
    unint64_t v61 = v0;
    uint64_t v57 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
    v57(v3, v6, v5);
    int v8 = v0;
    uint64_t v9 = sub_21CB88070();
    os_log_type_t v10 = sub_21CB88880();
    BOOL v11 = os_log_type_enabled(v9, v10);
    uint64_t v12 = v0[20];
    uint64_t v14 = v0[17];
    uint64_t v13 = v0[18];
    if (v11)
    {
      uint64_t v15 = (uint8_t *)swift_slowAlloc();
      uint64_t v59 = swift_slowAlloc();
      uint64_t v62 = v59;
      *(_DWORD *)uint64_t v15 = 136315138;
      sub_21CA07D00(&qword_267C95788, MEMORY[0x263F3CCB0]);
      uint64_t v16 = sub_21CB88F00();
      *(v1 - 1) = sub_21CA4E450(v16, v17, &v62);
      int v8 = v61;
      sub_21CB889C0();
      swift_bridgeObjectRelease();
      unint64_t v56 = *(void (**)(uint64_t, uint64_t))(v13 + 8);
      v56(v12, v14);
      _os_log_impl(&dword_21CA00000, v9, v10, "FMFSecureLocationCtrl: startLocating called, with priority: %s", v15, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x21D4B6B70](v59, -1, -1);
      MEMORY[0x21D4B6B70](v15, -1, -1);
    }
    else
    {
      unint64_t v56 = *(void (**)(uint64_t, uint64_t))(v13 + 8);
      v56(v8[20], v8[17]);
    }

    uint64_t v21 = v8[12];
    uint64_t v20 = v8[13];
    uint64_t v22 = v8[9];
    uint64_t v23 = MEMORY[0x263F8EE78];
    uint64_t v62 = MEMORY[0x263F8EE78];
    unint64_t v24 = (*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
    uint64_t v25 = *(void *)(v20 + 72);
    uint64_t v26 = v22 + v24;
    swift_bridgeObjectRetain();
    uint64_t v27 = v23;
    uint64_t v60 = v25;
    do
    {
      uint64_t v28 = v8[16];
      sub_21CA570B0(v26, v28, (uint64_t (*)(void))type metadata accessor for FMFFriend);
      uint64_t v29 = v8[16];
      if ((*(unsigned char *)(v28 + *(int *)(v21 + 36)) & 2) != 0)
      {
        sub_21CA590D4(v29, v8[15], (uint64_t (*)(void))type metadata accessor for FMFFriend);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_21CA47FE8(0, *(void *)(v27 + 16) + 1, 1);
          uint64_t v27 = v62;
        }
        unint64_t v31 = *(void *)(v27 + 16);
        unint64_t v30 = *(void *)(v27 + 24);
        if (v31 >= v30 >> 1)
        {
          sub_21CA47FE8(v30 > 1, v31 + 1, 1);
          uint64_t v27 = v62;
        }
        uint64_t v32 = v61[15];
        *(void *)(v27 + 16) = v31 + 1;
        int v8 = v61;
        uint64_t v33 = v27 + v24 + v31 * v60;
        uint64_t v25 = v60;
        sub_21CA590D4(v32, v33, (uint64_t (*)(void))type metadata accessor for FMFFriend);
      }
      else
      {
        sub_21CA581B8(v29, (uint64_t (*)(void))type metadata accessor for FMFFriend);
      }
      v26 += v25;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease();
    int64_t v34 = *(void *)(v27 + 16);
    if (v34)
    {
      uint64_t v58 = v8[14];
      uint64_t v62 = v23;
      sub_21CA281EC(0, v34, 0);
      uint64_t v35 = v27 + v24;
      uint64_t v36 = v62;
      do
      {
        uint64_t v37 = (uint64_t *)v8[14];
        sub_21CA570B0(v35, (uint64_t)v37, (uint64_t (*)(void))type metadata accessor for FMFFriend);
        uint64_t v38 = *v37;
        uint64_t v39 = *(void *)(v58 + 8);
        uint64_t v40 = *(void *)(v58 + 32);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_21CA581B8((uint64_t)v37, (uint64_t (*)(void))type metadata accessor for FMFFriend);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_21CA281EC(0, *(void *)(v36 + 16) + 1, 1);
          uint64_t v36 = v62;
        }
        unint64_t v42 = *(void *)(v36 + 16);
        unint64_t v41 = *(void *)(v36 + 24);
        if (v42 >= v41 >> 1)
        {
          sub_21CA281EC(v41 > 1, v42 + 1, 1);
          uint64_t v36 = v62;
        }
        *(void *)(v36 + 16) = v42 + 1;
        uint64_t v43 = v36 + 32 * v42;
        *(void *)(v43 + 32) = v38;
        *(void *)(v43 + 40) = v39;
        *(void *)(v43 + 48) = v40;
        *(_WORD *)(v43 + 56) = 0;
        *(unsigned char *)(v43 + 58) = 0;
        int v8 = v61;
        v35 += v60;
        --v34;
      }
      while (v34);
      swift_release();
    }
    else
    {
      swift_release();
      uint64_t v36 = MEMORY[0x263F8EE78];
    }
    uint64_t v45 = v8[18];
    uint64_t v44 = v8[19];
    uint64_t v46 = v8[17];
    v57(v44, v8[10], v46);
    int v47 = (*(uint64_t (**)(uint64_t, uint64_t))(v45 + 88))(v44, v46);
    if (v47 == *MEMORY[0x263F3CCA8] || v47 == *MEMORY[0x263F3CCA0])
    {
      swift_beginAccess();
      uint64_t v48 = swift_bridgeObjectRetain();
      uint64_t v49 = sub_21CABAEC8(v48);
      swift_bridgeObjectRelease();
      uint64_t v50 = sub_21CB4DE30((uint64_t)v49);
      swift_release();
    }
    else
    {
      v56(v8[19], v8[17]);
      uint64_t v50 = MEMORY[0x263F8EE88];
    }
    uint64_t v51 = sub_21CB4DE30(v36);
    swift_bridgeObjectRelease();
    uint64_t v52 = sub_21CAA7FFC(v51, v50);
    uint64_t v53 = sub_21CABADE0(v52);
    v8[21] = v53;
    swift_bridgeObjectRelease();
    uint64_t v54 = (void *)swift_task_alloc();
    v8[22] = v54;
    *uint64_t v54 = v8;
    v54[1] = sub_21CAA7DD8;
    uint64_t v55 = v8[10];
    return sub_21CA1C0D4((uint64_t)v53, v55);
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v18 = (uint64_t (*)(void))v0[1];
    return v18();
  }
}

uint64_t sub_21CAA7DD8()
{
  uint64_t v2 = (void *)*v1;
  v2[23] = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = v2[11];
    return MEMORY[0x270FA2498](sub_21CAA7F54, v3, 0);
  }
  else
  {
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v4 = (uint64_t (*)(void))v2[1];
    return v4();
  }
}

uint64_t sub_21CAA7F54()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_21CAA7FFC(uint64_t result, uint64_t a2)
{
  uint64_t v3 = result;
  int64_t v4 = 0;
  uint64_t v27 = a2;
  uint64_t v5 = result + 56;
  uint64_t v6 = 1 << *(unsigned char *)(result + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(result + 56);
  int64_t v9 = (unint64_t)(v6 + 63) >> 6;
  while (1)
  {
    if (v8)
    {
      unint64_t v10 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v11 = v10 | (v4 << 6);
      goto LABEL_5;
    }
    int64_t v23 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v23 >= v9) {
      goto LABEL_29;
    }
    unint64_t v24 = *(void *)(v5 + 8 * v23);
    ++v4;
    if (!v24)
    {
      int64_t v4 = v23 + 1;
      if (v23 + 1 >= v9) {
        goto LABEL_29;
      }
      unint64_t v24 = *(void *)(v5 + 8 * v4);
      if (!v24)
      {
        int64_t v4 = v23 + 2;
        if (v23 + 2 >= v9) {
          goto LABEL_29;
        }
        unint64_t v24 = *(void *)(v5 + 8 * v4);
        if (!v24)
        {
          int64_t v4 = v23 + 3;
          if (v23 + 3 >= v9) {
            goto LABEL_29;
          }
          unint64_t v24 = *(void *)(v5 + 8 * v4);
          if (!v24) {
            break;
          }
        }
      }
    }
LABEL_28:
    unint64_t v8 = (v24 - 1) & v24;
    unint64_t v11 = __clz(__rbit64(v24)) + (v4 << 6);
LABEL_5:
    uint64_t v12 = *(void *)(v3 + 48) + 32 * v11;
    uint64_t v13 = *(void *)v12;
    uint64_t v14 = *(void *)(v12 + 8);
    uint64_t v15 = *(void *)(v12 + 16);
    int v16 = *(unsigned __int8 *)(v12 + 24);
    int v17 = *(unsigned __int8 *)(v12 + 25);
    int v18 = *(unsigned __int8 *)(v12 + 26);
    unsigned int v19 = v2 & 0xFF000000 | v16;
    if (v17) {
      int v20 = 256;
    }
    else {
      int v20 = 0;
    }
    int v21 = v19 | v20;
    if (v18) {
      int v22 = 0x10000;
    }
    else {
      int v22 = 0;
    }
    int v2 = v21 | v22;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_21CB61420((uint64_t)v26, v13, v14, v15, v2);
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
  }
  int64_t v25 = v23 + 4;
  if (v25 >= v9)
  {
LABEL_29:
    swift_release();
    return v27;
  }
  unint64_t v24 = *(void *)(v5 + 8 * v25);
  if (v24)
  {
    int64_t v4 = v25;
    goto LABEL_28;
  }
  while (1)
  {
    int64_t v4 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v4 >= v9) {
      goto LABEL_29;
    }
    unint64_t v24 = *(void *)(v5 + 8 * v4);
    ++v25;
    if (v24) {
      goto LABEL_28;
    }
  }
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_21CAA81D4(uint64_t a1, uint64_t a2)
{
  v3[7] = a2;
  v3[8] = v2;
  v3[6] = a1;
  v3[9] = *(void *)(type metadata accessor for FMFFriend() - 8);
  v3[10] = swift_task_alloc();
  v3[11] = swift_task_alloc();
  uint64_t v4 = sub_21CB87840();
  v3[12] = v4;
  v3[13] = *(void *)(v4 - 8);
  v3[14] = swift_task_alloc();
  v3[15] = swift_task_alloc();
  v3[16] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_21CAA831C, v2, 0);
}

uint64_t sub_21CAA831C()
{
  uint64_t v43 = v0;
  uint64_t v1 = v0 + 6;
  int64_t v2 = *(void *)(v0[6] + 16);
  v0[17] = v2;
  if (v2)
  {
    if (qword_267C94990 != -1) {
      swift_once();
    }
    uint64_t v3 = v0;
    uint64_t v4 = v0[16];
    uint64_t v5 = v0[13];
    uint64_t v6 = v3[12];
    uint64_t v7 = v3[7];
    uint64_t v8 = sub_21CB880A0();
    sub_21CA4CC18(v8, (uint64_t)qword_267CA5368);
    int64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
    v3[18] = v9;
    v3[19] = (v5 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    v9(v4, v7, v6);
    unint64_t v10 = sub_21CB88070();
    os_log_type_t v11 = sub_21CB88880();
    BOOL v12 = os_log_type_enabled(v10, v11);
    uint64_t v13 = v3[16];
    uint64_t v39 = v3;
    int v16 = v3 + 12;
    uint64_t v15 = v3[12];
    uint64_t v14 = v16[1];
    if (v12)
    {
      int v17 = (uint8_t *)swift_slowAlloc();
      uint64_t v40 = swift_slowAlloc();
      uint64_t v42 = v40;
      *(_DWORD *)int v17 = 136315138;
      sub_21CA07D00(&qword_267C95788, MEMORY[0x263F3CCB0]);
      uint64_t v18 = sub_21CB88F00();
      *(v1 - 1) = sub_21CA4E450(v18, v19, &v42);
      sub_21CB889C0();
      swift_bridgeObjectRelease();
      int v20 = *(void (**)(uint64_t, uint64_t))(v14 + 8);
      v20(v13, v15);
      _os_log_impl(&dword_21CA00000, v10, v11, "FMFSecureLocationCtrl: stopLocating called, with priority: %s", v17, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x21D4B6B70](v40, -1, -1);
      MEMORY[0x21D4B6B70](v17, -1, -1);
    }
    else
    {
      int v20 = *(void (**)(uint64_t, uint64_t))(v14 + 8);
      v20(v13, v15);
    }

    v39[20] = v20;
    uint64_t v23 = v39[11];
    uint64_t v24 = v39[9];
    uint64_t v25 = v39[6];
    uint64_t v42 = MEMORY[0x263F8EE78];
    sub_21CA281EC(0, v2, 0);
    uint64_t v26 = v39;
    int v27 = *(_DWORD *)(v24 + 80);
    *((_DWORD *)v39 + 52) = v27;
    uint64_t v28 = v25 + ((v27 + 32) & ~(unint64_t)v27);
    uint64_t v41 = *(void *)(v24 + 72);
    v39[21] = v41;
    uint64_t v29 = v42;
    do
    {
      unint64_t v30 = (uint64_t *)v26[11];
      sub_21CA570B0(v28, (uint64_t)v30, (uint64_t (*)(void))type metadata accessor for FMFFriend);
      uint64_t v31 = *v30;
      uint64_t v32 = *(void *)(v23 + 8);
      uint64_t v33 = *(void *)(v23 + 32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_21CA581B8((uint64_t)v30, (uint64_t (*)(void))type metadata accessor for FMFFriend);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_21CA281EC(0, *(void *)(v29 + 16) + 1, 1);
        uint64_t v26 = v39;
        uint64_t v29 = v42;
      }
      unint64_t v35 = *(void *)(v29 + 16);
      unint64_t v34 = *(void *)(v29 + 24);
      if (v35 >= v34 >> 1)
      {
        sub_21CA281EC(v34 > 1, v35 + 1, 1);
        uint64_t v26 = v39;
        uint64_t v29 = v42;
      }
      v26[22] = v29;
      *(void *)(v29 + 16) = v35 + 1;
      uint64_t v36 = v29 + 32 * v35;
      *(void *)(v36 + 32) = v31;
      *(void *)(v36 + 40) = v32;
      *(void *)(v36 + 48) = v33;
      *(_WORD *)(v36 + 56) = 0;
      v28 += v41;
      *(unsigned char *)(v36 + 58) = 0;
      --v2;
    }
    while (v2);
    uint64_t v37 = (void *)swift_task_alloc();
    v26[23] = v37;
    *uint64_t v37 = v26;
    v37[1] = sub_21CAA879C;
    uint64_t v38 = v26[7];
    return sub_21CAAB818(v29, v38);
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    int v21 = (uint64_t (*)(void))v0[1];
    return v21();
  }
}

uint64_t sub_21CAA879C()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *v1;
  swift_task_dealloc();
  swift_release();
  if (v0)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v4 = *(uint64_t (**)(void))(v3 + 8);
    return v4();
  }
  else
  {
    uint64_t v6 = *(void *)(v2 + 64);
    return MEMORY[0x270FA2498](sub_21CAA8930, v6, 0);
  }
}

uint64_t sub_21CAA8930()
{
  uint64_t v1 = *(void *)(v0 + 120);
  uint64_t v2 = *(void *)(v0 + 96);
  uint64_t v3 = *(void *)(v0 + 104);
  (*(void (**)(uint64_t, void, uint64_t))(v0 + 144))(v1, *(void *)(v0 + 56), v2);
  int v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 88))(v1, v2);
  if (v4 != *MEMORY[0x263F3CCA8])
  {
    if (v4 == *MEMORY[0x263F3CCA0])
    {
      unsigned int v24 = *MEMORY[0x263F3CCA8];
      uint64_t v5 = *(void *)(v0 + 80);
      uint64_t v6 = (uint64_t *)(*(void *)(v0 + 64) + 120);
      swift_bridgeObjectRetain();
      uint64_t v7 = 0;
      do
      {
        int64_t v9 = *(uint64_t **)(v0 + 80);
        sub_21CA570B0(*(void *)(v0 + 48)+ ((*(unsigned __int8 *)(v0 + 208) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 208))+ *(void *)(v0 + 168) * v7, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for FMFFriend);
        uint64_t v10 = *v9;
        uint64_t v11 = *(void *)(v5 + 8);
        swift_bridgeObjectRetain();
        sub_21CA581B8((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for FMFFriend);
        swift_beginAccess();
        swift_bridgeObjectRetain();
        unint64_t v12 = sub_21CA5BCE0(v10, v11);
        LOBYTE(v10) = v13;
        swift_bridgeObjectRelease();
        if (v10)
        {
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v15 = *v6;
          uint64_t v25 = *v6;
          *uint64_t v6 = 0x8000000000000000;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            sub_21CB84E38();
            uint64_t v15 = v25;
          }
          swift_bridgeObjectRelease();
          sub_21CB830F0(v12, v15);
          *uint64_t v6 = v15;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        swift_bridgeObjectRelease();
        ++v7;
        uint64_t v8 = *(void *)(v0 + 136);
        swift_endAccess();
      }
      while (v7 != v8);
      uint64_t v18 = *(void *)(v0 + 104);
      uint64_t v19 = *(void *)(v0 + 112);
      uint64_t v20 = *(void *)(v0 + 96);
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, void, uint64_t))(v18 + 104))(v19, v24, v20);
      int v21 = (void *)swift_task_alloc();
      *(void *)(v0 + 192) = v21;
      *int v21 = v0;
      v21[1] = sub_21CAA8C60;
      uint64_t v22 = *(void *)(v0 + 112);
      uint64_t v23 = *(void *)(v0 + 48);
      return sub_21CAA75B0(v23, v22);
    }
    (*(void (**)(void, void))(v0 + 160))(*(void *)(v0 + 120), *(void *)(v0 + 96));
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  int v16 = *(uint64_t (**)(void))(v0 + 8);
  return v16();
}

uint64_t sub_21CAA8C60()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void (**)(uint64_t, uint64_t))(*v1 + 160);
  uint64_t v4 = *(void *)(*v1 + 112);
  uint64_t v5 = *(void *)(*v1 + 96);
  *(void *)(*v1 + 200) = v0;
  swift_task_dealloc();
  v3(v4, v5);
  uint64_t v6 = *(void *)(v2 + 64);
  if (v0) {
    uint64_t v7 = sub_21CAA8E98;
  }
  else {
    uint64_t v7 = sub_21CAA8E04;
  }
  return MEMORY[0x270FA2498](v7, v6, 0);
}

uint64_t sub_21CAA8E04()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_21CAA8E98()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_21CAA8F34(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_21CA57E34(&qword_267C95028);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v52 = &v43[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = sub_21CB87840();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  unint64_t v12 = &v43[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = &v43[-v13];
  swift_beginAccess();
  uint64_t v15 = *(void *)(v2 + 128);
  if (!*(void *)(v15 + 16)) {
    goto LABEL_13;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v16 = sub_21CA5BCE0(a1, a2);
  if ((v17 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_13:
    uint64_t v28 = 0;
    uint64_t v29 = 0;
    uint64_t v30 = 0;
    int v27 = 0;
    goto LABEL_18;
  }
  uint64_t v47 = v9;
  uint64_t v18 = *(void *)(v15 + 56) + 32 * v16;
  uint64_t v19 = *(void *)(v18 + 8);
  uint64_t v49 = *(void *)v18;
  uint64_t v50 = a1;
  uint64_t v20 = *(void *)(v18 + 16);
  int v21 = *(unsigned __int8 *)(v18 + 24);
  int v22 = *(unsigned __int8 *)(v18 + 25);
  int v23 = *(unsigned __int8 *)(v18 + 26);
  if (v22) {
    int v24 = 256;
  }
  else {
    int v24 = 0;
  }
  int v25 = v24 | v21;
  if (v23) {
    int v26 = 0x10000;
  }
  else {
    int v26 = 0;
  }
  int v27 = v25 | v26;
  uint64_t v48 = v19;
  swift_bridgeObjectRetain();
  uint64_t v51 = v20;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v21 & 1) != 0 || (v22)
  {
    unsigned int v44 = *MEMORY[0x263F3CCA0];
    uint64_t v31 = v47;
    uint64_t v32 = *(void (**)(void))(v47 + 104);
    uint64_t v45 = v47 + 104;
    uint64_t v46 = (void (*)(unsigned char *, void, uint64_t))v32;
    v32(v14);
    swift_bridgeObjectRetain();
    uint64_t v33 = v51;
    swift_bridgeObjectRetain();
    a1 = v50;
    sub_21CAA9CE0(v50, a2, v33, 0x10000, (uint64_t)v14);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v34 = *(void (**)(unsigned char *, uint64_t))(v31 + 8);
    v34(v14, v8);
    unint64_t v35 = v34;
    sub_21CA57E34((uint64_t *)&unk_267C96F20);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_21CB8B220;
    *(void *)(inited + 32) = a1;
    *(void *)(inited + 40) = a2;
    v46(v12, v44, v8);
    uint64_t v37 = MEMORY[0x21D4B6C80](v3 + OBJC_IVAR____TtC7FMFCore27FMFSecureLocationController_delegate);
    swift_bridgeObjectRetain();
    if (v37)
    {
      sub_21CA16848(0, (uint64_t)v12, inited);
      swift_unknownObjectRelease();
    }
    swift_bridgeObjectRelease();
    v35(v12, v8);
  }
  else
  {
    a1 = v50;
  }
  uint64_t v29 = v48;
  uint64_t v28 = v49;
  uint64_t v30 = v51;
LABEL_18:
  uint64_t v38 = (uint64_t)v52;
  if (*(void *)(v3 + 144))
  {
    swift_retain();
    sub_21CA57E34((uint64_t *)&unk_267C96F50);
    sub_21CB88670();
    swift_release();
  }
  uint64_t v39 = sub_21CB88640();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56))(v38, 1, 1, v39);
  uint64_t v40 = swift_allocObject();
  swift_weakInit();
  uint64_t v41 = swift_allocObject();
  *(void *)(v41 + 16) = 0;
  *(void *)(v41 + 24) = 0;
  *(void *)(v41 + 32) = v40;
  *(void *)(v41 + 40) = a1;
  *(void *)(v41 + 48) = a2;
  *(void *)(v41 + 56) = v28;
  *(void *)(v41 + 64) = v29;
  *(void *)(v41 + 72) = v30;
  *(unsigned char *)(v41 + 82) = BYTE2(v27);
  *(_WORD *)(v41 + 80) = v27;
  swift_bridgeObjectRetain();
  *(void *)(v3 + 144) = sub_21CB0A588(v38, (uint64_t)&unk_267C957C0, v41);
  return swift_release();
}

uint64_t sub_21CAA9394(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[16] = a8;
  v8[17] = v13;
  v8[14] = a5;
  v8[15] = a6;
  v8[13] = a4;
  uint64_t v9 = sub_21CB87840();
  v8[18] = v9;
  v8[19] = *(void *)(v9 - 8);
  v8[20] = swift_task_alloc();
  v8[21] = swift_task_alloc();
  uint64_t v10 = sub_21CB88C70();
  v8[22] = v10;
  v8[23] = *(void *)(v10 - 8);
  v8[24] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_21CAA94D0, 0, 0);
}

uint64_t sub_21CAA94D0()
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  v0[25] = Strong;
  if (Strong)
  {
    v0[12] = 0x403E000000000000;
    if (qword_267C949A0 != -1) {
      swift_once();
    }
    uint64_t v2 = swift_task_alloc();
    *(unsigned char *)(v2 + 16) = 3;
    *(void *)(v2 + 24) = v0 + 12;
    sub_21CB88910();
    swift_task_dealloc();
    uint64_t v3 = sub_21CB890D0();
    uint64_t v5 = v4;
    sub_21CB88C60();
    uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_267C957A0 + dword_267C957A0);
    uint64_t v6 = (void *)swift_task_alloc();
    v0[26] = v6;
    *uint64_t v6 = v0;
    v6[1] = sub_21CAA96CC;
    return v9(v3, v5, 0, 0, 1);
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v8 = (uint64_t (*)(void))v0[1];
    return v8();
  }
}

uint64_t sub_21CAA96CC()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 216) = v0;
  swift_task_dealloc();
  (*(void (**)(void, void))(v2[23] + 8))(v2[24], v2[22]);
  if (v0) {
    uint64_t v3 = sub_21CAA996C;
  }
  else {
    uint64_t v3 = sub_21CAA9834;
  }
  return MEMORY[0x270FA2498](v3, 0, 0);
}

uint64_t sub_21CAA9834()
{
  uint64_t v1 = *(void *)(v0 + 216);
  sub_21CB88690();
  if (v1)
  {
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
    return v2();
  }
  else
  {
    if (*(void *)(v0 + 128)) {
      uint64_t v4 = swift_bridgeObjectRetain();
    }
    else {
      uint64_t v4 = MEMORY[0x263F8EE88];
    }
    *(void *)(v0 + 224) = v4;
    uint64_t v5 = *(void *)(v0 + 200);
    uint64_t v6 = *(void *)(v0 + 168);
    uint64_t v7 = *(void *)(v0 + 152);
    *(_DWORD *)(v0 + 272) = *MEMORY[0x263F3CCA0];
    uint64_t v8 = *(void (**)(uint64_t))(v7 + 104);
    *(void *)(v0 + 232) = v8;
    *(void *)(v0 + 240) = (v7 + 104) & 0xFFFFFFFFFFFFLL | 0xB2E4000000000000;
    v8(v6);
    swift_bridgeObjectRetain();
    return MEMORY[0x270FA2498](sub_21CAA99F4, v5, 0);
  }
}

uint64_t sub_21CAA996C()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_21CAA99F4()
{
  uint64_t v1 = v0[21];
  uint64_t v2 = v0[18];
  uint64_t v3 = v0[19];
  sub_21CAA9CE0(v0[14], v0[15], v0[28], 65792, v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v0[31] = (uint64_t)v4;
  v0[32] = (v3 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v4(v1, v2);
  return MEMORY[0x270FA2498](sub_21CAA9AC4, 0, 0);
}

uint64_t sub_21CAA9AC4()
{
  uint64_t v1 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 232);
  uint64_t v2 = *(unsigned int *)(v0 + 272);
  uint64_t v3 = *(void *)(v0 + 200);
  uint64_t v4 = *(void *)(v0 + 160);
  uint64_t v5 = *(void *)(v0 + 144);
  uint64_t v7 = *(void *)(v0 + 112);
  uint64_t v6 = *(void *)(v0 + 120);
  sub_21CA57E34((uint64_t *)&unk_267C96F20);
  uint64_t inited = swift_initStackObject();
  *(void *)(v0 + 264) = inited;
  *(_OWORD *)(inited + 16) = xmmword_21CB8B220;
  *(void *)(inited + 32) = v7;
  *(void *)(inited + 40) = v6;
  v1(v4, v2, v5);
  swift_bridgeObjectRetain();
  return MEMORY[0x270FA2498](sub_21CAA9BA4, v3, 0);
}

uint64_t sub_21CAA9BA4()
{
  if (*(void *)(*(void *)(v0 + 264) + 16)
    && MEMORY[0x21D4B6C80](*(void *)(v0 + 200) + OBJC_IVAR____TtC7FMFCore27FMFSecureLocationController_delegate))
  {
    sub_21CA16848(2, *(void *)(v0 + 160), *(void *)(v0 + 264));
    swift_unknownObjectRelease();
  }
  swift_bridgeObjectRelease();
  (*(void (**)(void, void))(v0 + 248))(*(void *)(v0 + 160), *(void *)(v0 + 144));
  return MEMORY[0x270FA2498](sub_21CAA9C60, 0, 0);
}

uint64_t sub_21CAA9C60()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_21CAA9CE0(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v12 = sub_21CB87840();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, a5, v12);
  int v16 = (*(uint64_t (**)(char *, uint64_t))(v13 + 88))(v15, v12);
  if (v16 == *MEMORY[0x263F3CCA8])
  {
    swift_beginAccess();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v20 = *(void *)(v6 + 120);
    *(void *)(v6 + 120) = 0x8000000000000000;
    sub_21CB83DB4(a1, a2, a3, a4 & 0x10101, a1, a2, isUniquelyReferenced_nonNull_native);
    *(void *)(v6 + 120) = v20;
LABEL_5:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_endAccess();
  }
  if (v16 == *MEMORY[0x263F3CCA0])
  {
    swift_beginAccess();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    char v18 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v20 = *(void *)(v6 + 128);
    *(void *)(v6 + 128) = 0x8000000000000000;
    sub_21CB83DB4(a1, a2, a3, a4 & 0x10101, a1, a2, v18);
    *(void *)(v6 + 128) = v20;
    goto LABEL_5;
  }
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
}

uint64_t sub_21CAA9F40()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 368) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 192);
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    uint64_t v4 = sub_21CAAA9F8;
  }
  else
  {
    uint64_t v3 = *(void *)(v2 + 192);
    swift_bridgeObjectRelease();
    uint64_t v4 = sub_21CAAA078;
  }
  return MEMORY[0x270FA2498](v4, v3, 0);
}

uint64_t sub_21CAAA078()
{
  uint64_t v72 = v0;
  uint64_t v1 = v0[18];
  int64_t v2 = *(void *)(v1 + 16);
  if (!v2)
  {
    swift_bridgeObjectRelease();
LABEL_41:
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v60 = (uint64_t (*)(void))v0[1];
    return v60();
  }
  uint64_t v64 = v0 + 18;
  uint64_t v66 = MEMORY[0x263F8EE78];
  swift_bridgeObjectRetain();
  sub_21CA45524(0, v2, 0);
  uint64_t v3 = 0;
  uint64_t v4 = v66;
  unint64_t v5 = *(void *)(v66 + 16);
  uint64_t v6 = 16 * v5;
  do
  {
    uint64_t v8 = *(void *)(v1 + v3 + 32);
    uint64_t v7 = *(void *)(v1 + v3 + 40);
    uint64_t v66 = v4;
    unint64_t v9 = *(void *)(v4 + 24);
    int64_t v10 = v5 + 1;
    swift_bridgeObjectRetain();
    if (v5 >= v9 >> 1)
    {
      sub_21CA45524(v9 > 1, v10, 1);
      uint64_t v4 = v66;
    }
    *(void *)(v4 + 16) = v10;
    uint64_t v11 = v4 + v6;
    *(void *)(v11 + 32) = v8;
    *(void *)(v11 + 40) = v7;
    v6 += 16;
    v3 += 32;
    ++v5;
    --v2;
  }
  while (v2);
  uint64_t v12 = *(unsigned int *)(v65 + 408);
  uint64_t v13 = *(void *)(v65 + 288);
  uint64_t v15 = *(void *)(v65 + 264);
  uint64_t v14 = *(void *)(v65 + 272);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 104))(v13, v12, v15);
  if (*(void *)(v4 + 16)
    && MEMORY[0x21D4B6C80](*(void *)(v65 + 192) + OBJC_IVAR____TtC7FMFCore27FMFSecureLocationController_delegate))
  {
    sub_21CA16848(1, *(void *)(v65 + 288), v4);
    swift_unknownObjectRelease();
  }
  swift_release();
  int v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(v65 + 336);
  uint64_t v17 = *(void *)(v65 + 280);
  uint64_t v18 = *(void *)(v65 + 264);
  uint64_t v19 = *(void *)(v65 + 184);
  uint64_t v20 = *(void (**)(uint64_t, uint64_t))(*(void *)(v65 + 272) + 8);
  v20(*(void *)(v65 + 288), v18);
  uint64_t v21 = *(void *)(v65 + 144);
  v16(v17, v19, v18);
  swift_bridgeObjectRetain();
  int v22 = sub_21CB88070();
  os_log_type_t v23 = sub_21CB88880();
  BOOL v24 = os_log_type_enabled(v22, v23);
  uint64_t v25 = *(void *)(v65 + 280);
  uint64_t v26 = *(void *)(v65 + 264);
  if (v24)
  {
    uint64_t v62 = v20;
    uint64_t v27 = swift_slowAlloc();
    uint64_t v63 = swift_slowAlloc();
    uint64_t v66 = v63;
    *(_DWORD *)uint64_t v27 = 134218242;
    *(void *)(v65 + 160) = *(void *)(v21 + 16);
    sub_21CB889C0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v27 + 12) = 2080;
    sub_21CA07D00(&qword_267C95788, MEMORY[0x263F3CCB0]);
    uint64_t v28 = sub_21CB88F00();
    *(void *)(v65 + 152) = sub_21CA4E450(v28, v29, &v66);
    sub_21CB889C0();
    swift_bridgeObjectRelease();
    v62(v25, v26);
    _os_log_impl(&dword_21CA00000, v22, v23, "FMFSecureLocationCtrl: add handles to location stream: %ld friends, mode: %s", (uint8_t *)v27, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x21D4B6B70](v63, -1, -1);
    MEMORY[0x21D4B6B70](v27, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease();
    v20(v25, v26);
  }

  swift_beginAccess();
  uint64_t v30 = *v64;
  uint64_t v31 = *(void *)(*v64 + 16);
  if (!v31)
  {
    uint64_t v0 = (void *)v65;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v33 = MEMORY[0x263F8EE78];
LABEL_37:
    v0[47] = v33;
    uint64_t v57 = *(void *)(v0[24] + 112);
    v0[48] = v57;
    if (v57)
    {
      swift_retain();
      uint64_t v58 = (void *)swift_task_alloc();
      v0[49] = v58;
      *uint64_t v58 = v0;
      v58[1] = sub_21CAAA79C;
      uint64_t v59 = v0[23];
      return MEMORY[0x270F296F0](v33, v59, 1);
    }
    goto LABEL_41;
  }
  swift_bridgeObjectRetain_n();
  uint64_t v32 = (char *)(v30 + 58);
  unint64_t v33 = MEMORY[0x263F8EE78];
  while (1)
  {
    char v34 = *v32;
    char v35 = *(v32 - 1);
    char v36 = *(v32 - 2);
    uint64_t v66 = *(void *)(v32 - 26);
    long long v67 = *(_OWORD *)(v32 - 18);
    char v68 = v36;
    char v69 = v35;
    char v70 = v34;
    sub_21CAAD3C4((uint64_t)&v66, &v71);
    uint64_t v37 = v71;
    uint64_t v38 = *(void *)(v71 + 16);
    int64_t v39 = *(void *)(v33 + 16);
    int64_t v40 = v39 + v38;
    if (__OFADD__(v39, v38)) {
      break;
    }
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    if (isUniquelyReferenced_nonNull_native && v40 <= *(void *)(v33 + 24) >> 1)
    {
      if (*(void *)(v37 + 16)) {
        goto LABEL_26;
      }
    }
    else
    {
      if (v39 <= v40) {
        int64_t v42 = v39 + v38;
      }
      else {
        int64_t v42 = v39;
      }
      unint64_t v33 = sub_21CA44504(isUniquelyReferenced_nonNull_native, v42, 1, v33);
      if (*(void *)(v37 + 16))
      {
LABEL_26:
        uint64_t v43 = *(void *)(v33 + 16);
        uint64_t v44 = (*(void *)(v33 + 24) >> 1) - v43;
        uint64_t v45 = *(void *)(sub_21CB87CC0() - 8);
        uint64_t v46 = *(void *)(v45 + 72);
        if (v44 < v38) {
          goto LABEL_46;
        }
        unint64_t v47 = (*(unsigned __int8 *)(v45 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v45 + 80);
        unint64_t v48 = v33 + v47 + v46 * v43;
        unint64_t v49 = v37 + v47;
        uint64_t v50 = v46 * v38;
        unint64_t v51 = v48 + v50;
        unint64_t v52 = v49 + v50;
        if (v49 < v51 && v48 < v52) {
          return sub_21CB88D50();
        }
        swift_arrayInitWithCopy();
        if (v38)
        {
          uint64_t v54 = *(void *)(v33 + 16);
          BOOL v55 = __OFADD__(v54, v38);
          uint64_t v56 = v54 + v38;
          if (v55) {
            goto LABEL_47;
          }
          *(void *)(v33 + 16) = v56;
        }
        goto LABEL_16;
      }
    }
    if (v38)
    {
      __break(1u);
      break;
    }
LABEL_16:
    v32 += 32;
    swift_bridgeObjectRelease();
    if (!--v31)
    {
      uint64_t v0 = (void *)v65;
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      goto LABEL_37;
    }
  }
  __break(1u);
LABEL_46:
  __break(1u);
LABEL_47:
  __break(1u);
  return sub_21CB88D50();
}

uint64_t sub_21CAAA79C()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 400) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 192);
  swift_bridgeObjectRelease();
  swift_release();
  if (v0) {
    uint64_t v4 = sub_21CAAAAF8;
  }
  else {
    uint64_t v4 = sub_21CAAA900;
  }
  return MEMORY[0x270FA2498](v4, v3, 0);
}

uint64_t sub_21CAAA900()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_21CAAA9F8()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_21CAAAAF8()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_21CAAABF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[15] = a6;
  v7[16] = a7;
  v7[13] = a4;
  v7[14] = a5;
  uint64_t v8 = sub_21CB87840();
  v7[17] = v8;
  v7[18] = *(void *)(v8 - 8);
  v7[19] = swift_task_alloc();
  v7[20] = swift_task_alloc();
  uint64_t v9 = sub_21CB88C70();
  v7[21] = v9;
  v7[22] = *(void *)(v9 - 8);
  v7[23] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_21CAAAD28, 0, 0);
}

uint64_t sub_21CAAAD28()
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  v0[24] = Strong;
  if (Strong)
  {
    v0[12] = 0x403E000000000000;
    if (qword_267C949A0 != -1) {
      swift_once();
    }
    uint64_t v2 = swift_task_alloc();
    *(unsigned char *)(v2 + 16) = 3;
    *(void *)(v2 + 24) = v0 + 12;
    sub_21CB88910();
    swift_task_dealloc();
    uint64_t v3 = sub_21CB890D0();
    uint64_t v5 = v4;
    sub_21CB88C60();
    uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_267C957A0 + dword_267C957A0);
    uint64_t v6 = (void *)swift_task_alloc();
    v0[25] = v6;
    *uint64_t v6 = v0;
    v6[1] = sub_21CAAAF24;
    return v9(v3, v5, 0, 0, 1);
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v8 = (uint64_t (*)(void))v0[1];
    return v8();
  }
}

uint64_t sub_21CAAAF24()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 208) = v0;
  swift_task_dealloc();
  (*(void (**)(void, void))(v2[22] + 8))(v2[23], v2[21]);
  if (v0) {
    uint64_t v3 = sub_21CAAB280;
  }
  else {
    uint64_t v3 = sub_21CAAB08C;
  }
  return MEMORY[0x270FA2498](v3, 0, 0);
}

uint64_t sub_21CAAB08C()
{
  uint64_t v1 = *(void *)(v0 + 208);
  sub_21CB88690();
  if (v1)
  {
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
    return v2();
  }
  else
  {
    if (qword_267C94990 != -1) {
      swift_once();
    }
    uint64_t v4 = sub_21CB880A0();
    sub_21CA4CC18(v4, (uint64_t)qword_267CA5368);
    uint64_t v5 = sub_21CB88070();
    os_log_type_t v6 = sub_21CB88880();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v7 = 0;
      _os_log_impl(&dword_21CA00000, v5, v6, "FMFSecureLocationCtrl: Stop initial live locating spinners", v7, 2u);
      MEMORY[0x21D4B6B70](v7, -1, -1);
    }
    uint64_t v8 = *(void *)(v0 + 192);
    uint64_t v9 = *(void *)(v0 + 160);
    uint64_t v10 = *(void *)(v0 + 144);

    *(_DWORD *)(v0 + 256) = *MEMORY[0x263F3CCA0];
    uint64_t v11 = *(void (**)(uint64_t))(v10 + 104);
    *(void *)(v0 + 216) = v11;
    *(void *)(v0 + 224) = (v10 + 104) & 0xFFFFFFFFFFFFLL | 0xB2E4000000000000;
    v11(v9);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return MEMORY[0x270FA2498](sub_21CAAB530, v8, 0);
  }
}

uint64_t sub_21CAAB280()
{
  if (qword_267C94990 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_21CB880A0();
  sub_21CA4CC18(v1, (uint64_t)qword_267CA5368);
  uint64_t v2 = sub_21CB88070();
  os_log_type_t v3 = sub_21CB88880();
  BOOL v4 = os_log_type_enabled(v2, v3);
  uint64_t v5 = *(void **)(v0 + 208);
  if (v4)
  {
    os_log_type_t v6 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)os_log_type_t v6 = 0;
    _os_log_impl(&dword_21CA00000, v2, v3, "FMFSecureLocationCtrl: Live loading task cancelled", v6, 2u);
    MEMORY[0x21D4B6B70](v6, -1, -1);
  }

  sub_21CB88690();
  if (qword_267C94990 != -1) {
    swift_once();
  }
  sub_21CA4CC18(v1, (uint64_t)qword_267CA5368);
  uint64_t v7 = sub_21CB88070();
  os_log_type_t v8 = sub_21CB88880();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v9 = 0;
    _os_log_impl(&dword_21CA00000, v7, v8, "FMFSecureLocationCtrl: Stop initial live locating spinners", v9, 2u);
    MEMORY[0x21D4B6B70](v9, -1, -1);
  }
  uint64_t v10 = *(void *)(v0 + 192);
  uint64_t v11 = *(void *)(v0 + 160);
  uint64_t v12 = *(void *)(v0 + 144);

  *(_DWORD *)(v0 + 256) = *MEMORY[0x263F3CCA0];
  uint64_t v13 = *(void (**)(uint64_t))(v12 + 104);
  *(void *)(v0 + 216) = v13;
  *(void *)(v0 + 224) = (v12 + 104) & 0xFFFFFFFFFFFFLL | 0xB2E4000000000000;
  v13(v11);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return MEMORY[0x270FA2498](sub_21CAAB530, v10, 0);
}

uint64_t sub_21CAAB530()
{
  uint64_t v1 = v0[20];
  uint64_t v2 = v0[17];
  uint64_t v3 = v0[18];
  sub_21CAA9CE0(v0[14], v0[15], v0[16], 0, v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  BOOL v4 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v0[29] = (uint64_t)v4;
  v0[30] = (v3 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v4(v1, v2);
  return MEMORY[0x270FA2498](sub_21CAAB5FC, 0, 0);
}

uint64_t sub_21CAAB5FC()
{
  uint64_t v1 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 216);
  uint64_t v2 = *(unsigned int *)(v0 + 256);
  uint64_t v3 = *(void *)(v0 + 192);
  uint64_t v4 = *(void *)(v0 + 152);
  uint64_t v5 = *(void *)(v0 + 136);
  uint64_t v7 = *(void *)(v0 + 112);
  uint64_t v6 = *(void *)(v0 + 120);
  sub_21CA57E34((uint64_t *)&unk_267C96F20);
  uint64_t inited = swift_initStackObject();
  *(void *)(v0 + 248) = inited;
  *(_OWORD *)(inited + 16) = xmmword_21CB8B220;
  *(void *)(inited + 32) = v7;
  *(void *)(inited + 40) = v6;
  v1(v4, v2, v5);
  swift_bridgeObjectRetain();
  return MEMORY[0x270FA2498](sub_21CAAB6DC, v3, 0);
}

uint64_t sub_21CAAB6DC()
{
  if (*(void *)(*(void *)(v0 + 248) + 16)
    && MEMORY[0x21D4B6C80](*(void *)(v0 + 192) + OBJC_IVAR____TtC7FMFCore27FMFSecureLocationController_delegate))
  {
    sub_21CA16848(0, *(void *)(v0 + 152), *(void *)(v0 + 248));
    swift_unknownObjectRelease();
  }
  swift_bridgeObjectRelease();
  (*(void (**)(void, void))(v0 + 232))(*(void *)(v0 + 152), *(void *)(v0 + 136));
  return MEMORY[0x270FA2498](sub_21CAAB798, 0, 0);
}

uint64_t sub_21CAAB798()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_21CAAB818(uint64_t a1, uint64_t a2)
{
  v3[13] = a2;
  v3[14] = v2;
  v3[12] = a1;
  uint64_t v4 = sub_21CB87840();
  v3[15] = v4;
  v3[16] = *(void *)(v4 - 8);
  v3[17] = swift_task_alloc();
  v3[18] = swift_task_alloc();
  v3[19] = swift_task_alloc();
  v3[20] = swift_task_alloc();
  v3[21] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_21CAAB910, v2, 0);
}

uint64_t sub_21CAAB910()
{
  uint64_t v114 = v0;
  if (qword_267C94990 != -1) {
    swift_once();
  }
  uint64_t v1 = v0 + 12;
  uint64_t v2 = v0[21];
  uint64_t v3 = v0[15];
  uint64_t v4 = v0[16];
  uint64_t v5 = v0[13];
  uint64_t v6 = sub_21CB880A0();
  v0[22] = sub_21CA4CC18(v6, (uint64_t)qword_267CA5368);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
  v0[23] = v7;
  v0[24] = (v4 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v7(v2, v5, v3);
  swift_bridgeObjectRetain();
  os_log_type_t v8 = sub_21CB88070();
  os_log_type_t v9 = sub_21CB88880();
  BOOL v10 = os_log_type_enabled(v8, v9);
  uint64_t v11 = v0[21];
  uint64_t v13 = v0[15];
  uint64_t v12 = v0[16];
  uint64_t v14 = v0[12];
  if (v10)
  {
    os_log_type_t type = v9;
    uint64_t v15 = swift_slowAlloc();
    uint64_t v106 = swift_slowAlloc();
    uint64_t v108 = v106;
    *(_DWORD *)uint64_t v15 = 134218242;
    v0[10] = *(void *)(v14 + 16);
    sub_21CB889C0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v15 + 12) = 2080;
    sub_21CA07D00(&qword_267C95788, MEMORY[0x263F3CCB0]);
    uint64_t v16 = sub_21CB88F00();
    v0[11] = sub_21CA4E450(v16, v17, &v108);
    sub_21CB889C0();
    swift_bridgeObjectRelease();
    uint64_t v18 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
    v18(v11, v13);
    _os_log_impl(&dword_21CA00000, v8, type, "FMFSecureLocationCtrl: stop refreshing location: %ld friends, mode: %s", (uint8_t *)v15, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x21D4B6B70](v106, -1, -1);
    MEMORY[0x21D4B6B70](v15, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v18 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
    v18(v11, v13);
  }

  v0[25] = v18;
  uint64_t v19 = *(void *)(v0[12] + 16);
  v0[26] = v19;
  uint64_t v20 = v0;
  if (!v19)
  {
    unint64_t v22 = MEMORY[0x263F8EE78];
LABEL_30:
    v20[27] = v22;
    uint64_t v46 = *(void *)(v20[14] + 112);
    v20[28] = v46;
    if (v46)
    {
      swift_retain();
      unint64_t v47 = (void *)swift_task_alloc();
      v20[29] = (uint64_t)v47;
      *unint64_t v47 = v20;
      v47[1] = sub_21CAAC3F8;
      uint64_t v48 = v20[13];
      return MEMORY[0x270F296C8](v22, v48);
    }
    swift_bridgeObjectRelease();
    uint64_t v50 = v20 + 20;
    uint64_t v49 = v20[20];
    uint64_t v51 = v20[15];
    uint64_t v52 = v20[16];
    ((void (*)(uint64_t, uint64_t, uint64_t))v20[23])(v49, v20[13], v51);
    uint64_t v53 = (*(uint64_t (**)(uint64_t, uint64_t))(v52 + 88))(v49, v51);
    uint64_t v54 = v53;
    uint64_t v107 = v20;
    if (v53 == *MEMORY[0x263F3CCA8])
    {
      uint64_t v55 = MEMORY[0x263F8EE78];
      if (v20[26])
      {
        unsigned int v103 = v53;
        uint64_t v56 = (uint64_t *)(v20[14] + 120);
        uint64_t v57 = 0;
        uint64_t v102 = swift_bridgeObjectRetain();
        uint64_t v58 = v102 + 48;
        do
        {
          uint64_t v61 = *(void *)(v58 - 16);
          uint64_t v60 = *(void *)(v58 - 8);
          swift_beginAccess();
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          unint64_t v62 = sub_21CA5BCE0(v61, v60);
          char v64 = v63;
          swift_bridgeObjectRelease();
          if (v64)
          {
            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            uint64_t v66 = *v56;
            uint64_t v108 = *v56;
            *uint64_t v56 = 0x8000000000000000;
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            {
              sub_21CB84E38();
              uint64_t v66 = v108;
            }
            swift_bridgeObjectRelease();
            sub_21CB830F0(v62, v66);
            *uint64_t v56 = v66;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          else
          {
            swift_bridgeObjectRelease();
          }
          ++v57;
          uint64_t v59 = v107[26];
          swift_endAccess();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v58 += 32;
        }
        while (v57 != v59);
        int64_t v77 = v107[26];
        swift_bridgeObjectRelease();
        uint64_t v108 = v55;
        sub_21CA45524(0, v77, 0);
        uint64_t v78 = 0;
        uint64_t v55 = v108;
        uint64_t v79 = *(void *)(v108 + 16);
        uint64_t v80 = 16 * v79;
        uint64_t v81 = (uint64_t *)(v102 + 40);
        do
        {
          uint64_t v83 = *(v81 - 1);
          uint64_t v82 = *v81;
          uint64_t v108 = v55;
          unint64_t v84 = *(void *)(v55 + 24);
          uint64_t v85 = v79 + v78 + 1;
          swift_bridgeObjectRetain();
          if (v79 + v78 >= v84 >> 1)
          {
            sub_21CA45524(v84 > 1, v79 + v78 + 1, 1);
            uint64_t v55 = v108;
          }
          uint64_t v20 = v107;
          uint64_t v86 = v107[26];
          ++v78;
          *(void *)(v55 + 16) = v85;
          uint64_t v87 = v55 + v80;
          *(void *)(v87 + 32) = v83;
          *(void *)(v87 + 40) = v82;
          v80 += 16;
          v81 += 4;
        }
        while (v78 != v86);
        uint64_t v54 = v103;
      }
      uint64_t v50 = v20 + 19;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v20[16] + 104))(v20[19], v54, v20[15]);
    }
    else
    {
      if (v53 != *MEMORY[0x263F3CCA0])
      {
LABEL_71:
        ((void (*)(uint64_t, uint64_t))v20[25])(*v50, v20[15]);
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        uint64_t v100 = (uint64_t (*)(void))v20[1];
        return v100();
      }
      unsigned int v104 = v53;
      if (v20[26])
      {
        long long v67 = (uint64_t *)(v20[14] + 128);
        uint64_t v68 = 0;
        uint64_t v69 = swift_bridgeObjectRetain() + 48;
        do
        {
          uint64_t v71 = *(void *)(v69 - 16);
          uint64_t v72 = *(void *)(v69 - 8);
          swift_beginAccess();
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          unint64_t v73 = sub_21CA5BCE0(v71, v72);
          LOBYTE(v71) = v74;
          swift_bridgeObjectRelease();
          if (v71)
          {
            char v75 = swift_isUniquelyReferenced_nonNull_native();
            uint64_t v76 = *v67;
            uint64_t v108 = *v67;
            *long long v67 = 0x8000000000000000;
            if ((v75 & 1) == 0)
            {
              sub_21CB84E38();
              uint64_t v76 = v108;
            }
            swift_bridgeObjectRelease();
            sub_21CB830F0(v73, v76);
            *long long v67 = v76;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v20 = v107;
          }
          else
          {
            swift_bridgeObjectRelease();
          }
          ++v68;
          uint64_t v70 = v20[26];
          swift_endAccess();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v69 += 32;
        }
        while (v68 != v70);
        swift_bridgeObjectRelease();
      }
      if (*(void *)(v20[14] + 144))
      {
        swift_retain();
        sub_21CA57E34((uint64_t *)&unk_267C96F50);
        sub_21CB88670();
        swift_release();
      }
      int64_t v88 = v20[26];
      uint64_t v55 = MEMORY[0x263F8EE78];
      if (v88)
      {
        uint64_t v89 = *v1;
        uint64_t v108 = MEMORY[0x263F8EE78];
        sub_21CA45524(0, v88, 0);
        uint64_t v90 = 0;
        uint64_t v55 = v108;
        uint64_t v91 = *(void *)(v108 + 16);
        uint64_t v92 = 16 * v91;
        uint64_t v93 = (uint64_t *)(v89 + 40);
        do
        {
          uint64_t v95 = *(v93 - 1);
          uint64_t v94 = *v93;
          uint64_t v108 = v55;
          unint64_t v96 = *(void *)(v55 + 24);
          uint64_t v97 = v91 + v90 + 1;
          swift_bridgeObjectRetain();
          if (v91 + v90 >= v96 >> 1)
          {
            sub_21CA45524(v96 > 1, v91 + v90 + 1, 1);
            uint64_t v55 = v108;
          }
          uint64_t v20 = v107;
          uint64_t v98 = v107[26];
          ++v90;
          *(void *)(v55 + 16) = v97;
          uint64_t v99 = v55 + v92;
          *(void *)(v99 + 32) = v95;
          *(void *)(v99 + 40) = v94;
          v92 += 16;
          v93 += 4;
        }
        while (v90 != v98);
      }
      uint64_t v50 = v20 + 18;
      (*(void (**)(uint64_t, void, uint64_t))(v20[16] + 104))(v20[18], v104, v20[15]);
    }
    if (*(void *)(v55 + 16)
      && MEMORY[0x21D4B6C80](v20[14] + OBJC_IVAR____TtC7FMFCore27FMFSecureLocationController_delegate))
    {
      sub_21CA16848(0, *v50, v55);
      swift_unknownObjectRelease();
    }
    swift_bridgeObjectRelease();
    goto LABEL_71;
  }
  uint64_t v21 = (char *)(swift_bridgeObjectRetain() + 58);
  unint64_t v22 = MEMORY[0x263F8EE78];
  while (1)
  {
    char v23 = *v21;
    char v24 = *(v21 - 1);
    char v25 = *(v21 - 2);
    uint64_t v108 = *(void *)(v21 - 26);
    long long v109 = *(_OWORD *)(v21 - 18);
    char v110 = v25;
    char v111 = v24;
    char v112 = v23;
    sub_21CAAD3C4((uint64_t)&v108, &v113);
    uint64_t v26 = v113;
    uint64_t v27 = *(void *)(v113 + 16);
    int64_t v28 = *(void *)(v22 + 16);
    int64_t v29 = v28 + v27;
    if (__OFADD__(v28, v27)) {
      break;
    }
    int v30 = swift_isUniquelyReferenced_nonNull_native();
    if (v30 && v29 <= *(void *)(v22 + 24) >> 1)
    {
      if (*(void *)(v26 + 16)) {
        goto LABEL_19;
      }
    }
    else
    {
      if (v28 <= v29) {
        int64_t v31 = v28 + v27;
      }
      else {
        int64_t v31 = v28;
      }
      unint64_t v22 = sub_21CA44504(v30, v31, 1, v22);
      if (*(void *)(v26 + 16))
      {
LABEL_19:
        uint64_t v32 = *(void *)(v22 + 16);
        uint64_t v33 = (*(void *)(v22 + 24) >> 1) - v32;
        uint64_t v34 = *(void *)(sub_21CB87CC0() - 8);
        uint64_t v35 = *(void *)(v34 + 72);
        if (v33 < v27) {
          goto LABEL_76;
        }
        unint64_t v36 = (*(unsigned __int8 *)(v34 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80);
        unint64_t v37 = v22 + v36 + v35 * v32;
        unint64_t v38 = v26 + v36;
        uint64_t v39 = v35 * v27;
        unint64_t v40 = v37 + v39;
        unint64_t v41 = v38 + v39;
        if (v38 < v40 && v37 < v41) {
          return sub_21CB88D50();
        }
        swift_arrayInitWithCopy();
        if (v27)
        {
          uint64_t v43 = *(void *)(v22 + 16);
          BOOL v44 = __OFADD__(v43, v27);
          uint64_t v45 = v43 + v27;
          if (v44) {
            goto LABEL_77;
          }
          *(void *)(v22 + 16) = v45;
        }
        goto LABEL_9;
      }
    }
    if (v27)
    {
      __break(1u);
      break;
    }
LABEL_9:
    v21 += 32;
    swift_bridgeObjectRelease();
    if (!--v19)
    {
      swift_bridgeObjectRelease();
      goto LABEL_30;
    }
  }
  __break(1u);
LABEL_76:
  __break(1u);
LABEL_77:
  __break(1u);
  return sub_21CB88D50();
}

uint64_t sub_21CAAC3F8()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 240) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 112);
  swift_bridgeObjectRelease();
  swift_release();
  if (v0) {
    uint64_t v4 = sub_21CAACB54;
  }
  else {
    uint64_t v4 = sub_21CAAC55C;
  }
  return MEMORY[0x270FA2498](v4, v3, 0);
}

uint64_t sub_21CAAC55C()
{
  uint64_t v2 = (uint64_t *)(v0 + 160);
  uint64_t v1 = *(void *)(v0 + 160);
  uint64_t v3 = *(void *)(v0 + 120);
  uint64_t v4 = *(void *)(v0 + 128);
  (*(void (**)(uint64_t, void, uint64_t))(v0 + 184))(v1, *(void *)(v0 + 104), v3);
  uint64_t v5 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 88))(v1, v3);
  uint64_t v6 = v5;
  uint64_t v57 = v0;
  if (v5 == *MEMORY[0x263F3CCA8])
  {
    uint64_t v7 = MEMORY[0x263F8EE78];
    if (*(void *)(v0 + 208))
    {
      unsigned int v55 = v5;
      os_log_type_t v8 = (uint64_t *)(*(void *)(v0 + 112) + 120);
      uint64_t v9 = 0;
      uint64_t v54 = swift_bridgeObjectRetain();
      uint64_t v10 = v54 + 48;
      do
      {
        uint64_t v13 = *(void *)(v10 - 16);
        uint64_t v12 = *(void *)(v10 - 8);
        swift_beginAccess();
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        unint64_t v14 = sub_21CA5BCE0(v13, v12);
        char v16 = v15;
        swift_bridgeObjectRelease();
        if (v16)
        {
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v18 = *v8;
          uint64_t v58 = *v8;
          *os_log_type_t v8 = 0x8000000000000000;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            sub_21CB84E38();
            uint64_t v18 = v58;
          }
          swift_bridgeObjectRelease();
          sub_21CB830F0(v14, v18);
          *os_log_type_t v8 = v18;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        else
        {
          swift_bridgeObjectRelease();
        }
        ++v9;
        uint64_t v11 = *(void *)(v57 + 208);
        swift_endAccess();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v10 += 32;
      }
      while (v9 != v11);
      int64_t v29 = *(void *)(v57 + 208);
      swift_bridgeObjectRelease();
      sub_21CA45524(0, v29, 0);
      uint64_t v30 = 0;
      uint64_t v31 = *(void *)(v7 + 16);
      uint64_t v32 = 16 * v31;
      uint64_t v33 = (uint64_t *)(v54 + 40);
      do
      {
        uint64_t v35 = *(v33 - 1);
        uint64_t v34 = *v33;
        unint64_t v36 = *(void *)(v7 + 24);
        uint64_t v37 = v31 + v30 + 1;
        swift_bridgeObjectRetain();
        if (v31 + v30 >= v36 >> 1) {
          sub_21CA45524(v36 > 1, v31 + v30 + 1, 1);
        }
        uint64_t v38 = *(void *)(v57 + 208);
        ++v30;
        *(void *)(v7 + 16) = v37;
        uint64_t v39 = v7 + v32;
        *(void *)(v39 + 32) = v35;
        *(void *)(v39 + 40) = v34;
        v32 += 16;
        v33 += 4;
      }
      while (v30 != v38);
      uint64_t v0 = v57;
      uint64_t v6 = v55;
    }
    uint64_t v2 = (uint64_t *)(v0 + 152);
    (*(void (**)(void, uint64_t, void))(*(void *)(v0 + 128) + 104))(*(void *)(v0 + 152), v6, *(void *)(v0 + 120));
  }
  else
  {
    if (v5 != *MEMORY[0x263F3CCA0]) {
      goto LABEL_39;
    }
    unsigned int v56 = v5;
    if (*(void *)(v0 + 208))
    {
      uint64_t v19 = (uint64_t *)(*(void *)(v0 + 112) + 128);
      uint64_t v20 = 0;
      uint64_t v21 = swift_bridgeObjectRetain() + 48;
      do
      {
        uint64_t v23 = *(void *)(v21 - 16);
        uint64_t v24 = *(void *)(v21 - 8);
        swift_beginAccess();
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        unint64_t v25 = sub_21CA5BCE0(v23, v24);
        LOBYTE(v23) = v26;
        swift_bridgeObjectRelease();
        if (v23)
        {
          char v27 = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v28 = *v19;
          uint64_t v59 = *v19;
          *uint64_t v19 = 0x8000000000000000;
          if ((v27 & 1) == 0)
          {
            sub_21CB84E38();
            uint64_t v28 = v59;
          }
          swift_bridgeObjectRelease();
          sub_21CB830F0(v25, v28);
          *uint64_t v19 = v28;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v0 = v57;
        }
        else
        {
          swift_bridgeObjectRelease();
        }
        ++v20;
        uint64_t v22 = *(void *)(v0 + 208);
        swift_endAccess();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v21 += 32;
      }
      while (v20 != v22);
      swift_bridgeObjectRelease();
    }
    if (*(void *)(*(void *)(v0 + 112) + 144))
    {
      swift_retain();
      sub_21CA57E34((uint64_t *)&unk_267C96F50);
      sub_21CB88670();
      swift_release();
    }
    int64_t v40 = *(void *)(v0 + 208);
    uint64_t v7 = MEMORY[0x263F8EE78];
    if (v40)
    {
      uint64_t v41 = *(void *)(v0 + 96);
      uint64_t v60 = MEMORY[0x263F8EE78];
      sub_21CA45524(0, v40, 0);
      uint64_t v42 = 0;
      uint64_t v7 = v60;
      uint64_t v43 = *(void *)(v60 + 16);
      uint64_t v44 = 16 * v43;
      uint64_t v45 = (uint64_t *)(v41 + 40);
      do
      {
        uint64_t v47 = *(v45 - 1);
        uint64_t v46 = *v45;
        unint64_t v48 = *(void *)(v60 + 24);
        uint64_t v49 = v43 + v42 + 1;
        swift_bridgeObjectRetain();
        if (v43 + v42 >= v48 >> 1) {
          sub_21CA45524(v48 > 1, v43 + v42 + 1, 1);
        }
        uint64_t v50 = *(void *)(v57 + 208);
        ++v42;
        *(void *)(v60 + 16) = v49;
        uint64_t v51 = v60 + v44;
        *(void *)(v51 + 32) = v47;
        *(void *)(v51 + 40) = v46;
        v44 += 16;
        v45 += 4;
      }
      while (v42 != v50);
      uint64_t v0 = v57;
    }
    uint64_t v2 = (uint64_t *)(v0 + 144);
    (*(void (**)(void, void, void))(*(void *)(v0 + 128) + 104))(*(void *)(v0 + 144), v56, *(void *)(v0 + 120));
  }
  if (*(void *)(v7 + 16)
    && MEMORY[0x21D4B6C80](*(void *)(v0 + 112) + OBJC_IVAR____TtC7FMFCore27FMFSecureLocationController_delegate))
  {
    sub_21CA16848(0, *v2, v7);
    swift_unknownObjectRelease();
  }
  swift_bridgeObjectRelease();
LABEL_39:
  (*(void (**)(uint64_t, void))(v0 + 200))(*v2, *(void *)(v0 + 120));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v52 = *(uint64_t (**)(void))(v0 + 8);
  return v52();
}

uint64_t sub_21CAACB54()
{
  uint64_t v82 = v0;
  uint64_t v1 = (void *)v0[30];
  ((void (*)(void, void, void))v0[23])(v0[17], v0[13], v0[15]);
  id v2 = v1;
  id v3 = v1;
  uint64_t v4 = sub_21CB88070();
  os_log_type_t v5 = sub_21CB88880();
  uint64_t v80 = v0;
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (void *)v0[30];
    uint64_t v7 = v0[17];
    uint64_t v76 = (void (*)(uint64_t, uint64_t))v0[25];
    uint64_t v8 = v0[15];
    uint64_t v9 = swift_slowAlloc();
    unint64_t v73 = (void *)swift_slowAlloc();
    uint64_t v79 = swift_slowAlloc();
    uint64_t v81 = v79;
    *(_DWORD *)uint64_t v9 = 138412546;
    id v10 = v6;
    uint64_t v11 = _swift_stdlib_bridgeErrorToNSError();
    v80[8] = v11;
    sub_21CB889C0();
    *unint64_t v73 = v11;
    id v74 = v6;

    *(_WORD *)(v9 + 12) = 2080;
    sub_21CA07D00(&qword_267C95788, MEMORY[0x263F3CCB0]);
    uint64_t v12 = v4;
    uint64_t v13 = v8;
    uint64_t v14 = sub_21CB88F00();
    v80[9] = sub_21CA4E450(v14, v15, &v81);
    uint64_t v0 = v80;
    sub_21CB889C0();
    swift_bridgeObjectRelease();
    v76(v7, v13);
    _os_log_impl(&dword_21CA00000, v12, v5, "FMFSecureLocationCtrl: Error when trying to stop refreshing locations: %@ mode: %s", (uint8_t *)v9, 0x16u);
    sub_21CA57E34(&qword_267C95020);
    swift_arrayDestroy();
    MEMORY[0x21D4B6B70](v73, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x21D4B6B70](v79, -1, -1);
    MEMORY[0x21D4B6B70](v9, -1, -1);
  }
  else
  {
    char v16 = (void *)v0[30];
    unint64_t v17 = (void (*)(uint64_t, uint64_t))v0[25];
    uint64_t v18 = v0[17];
    uint64_t v19 = v0[15];

    v17(v18, v19);
  }
  uint64_t v21 = v0 + 20;
  uint64_t v20 = v0[20];
  uint64_t v22 = v0[15];
  uint64_t v23 = v0[16];
  ((void (*)(uint64_t, void, uint64_t))v0[23])(v20, v0[13], v22);
  uint64_t v24 = (*(uint64_t (**)(uint64_t, uint64_t))(v23 + 88))(v20, v22);
  uint64_t v25 = v24;
  if (v24 == *MEMORY[0x263F3CCA8])
  {
    uint64_t v26 = MEMORY[0x263F8EE78];
    if (v0[26])
    {
      unsigned int v77 = v24;
      char v27 = (uint64_t *)(v0[14] + 120);
      uint64_t v28 = 0;
      uint64_t v75 = swift_bridgeObjectRetain();
      uint64_t v29 = v75 + 48;
      do
      {
        uint64_t v32 = *(void *)(v29 - 16);
        uint64_t v31 = *(void *)(v29 - 8);
        swift_beginAccess();
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        unint64_t v33 = sub_21CA5BCE0(v32, v31);
        char v35 = v34;
        swift_bridgeObjectRelease();
        if (v35)
        {
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v37 = *v27;
          uint64_t v81 = *v27;
          uint64_t *v27 = 0x8000000000000000;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            sub_21CB84E38();
            uint64_t v37 = v81;
          }
          swift_bridgeObjectRelease();
          sub_21CB830F0(v33, v37);
          uint64_t *v27 = v37;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        else
        {
          swift_bridgeObjectRelease();
        }
        ++v28;
        uint64_t v30 = v80[26];
        swift_endAccess();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v29 += 32;
      }
      while (v28 != v30);
      int64_t v48 = v80[26];
      swift_bridgeObjectRelease();
      uint64_t v81 = v26;
      sub_21CA45524(0, v48, 0);
      uint64_t v49 = 0;
      uint64_t v26 = v81;
      uint64_t v50 = *(void *)(v81 + 16);
      uint64_t v51 = 16 * v50;
      uint64_t v52 = (uint64_t *)(v75 + 40);
      do
      {
        uint64_t v54 = *(v52 - 1);
        uint64_t v53 = *v52;
        uint64_t v81 = v26;
        unint64_t v55 = *(void *)(v26 + 24);
        uint64_t v56 = v50 + v49 + 1;
        swift_bridgeObjectRetain();
        if (v50 + v49 >= v55 >> 1)
        {
          sub_21CA45524(v55 > 1, v50 + v49 + 1, 1);
          uint64_t v26 = v81;
        }
        uint64_t v57 = v80[26];
        ++v49;
        *(void *)(v26 + 16) = v56;
        uint64_t v58 = v26 + v51;
        *(void *)(v58 + 32) = v54;
        *(void *)(v58 + 40) = v53;
        v51 += 16;
        v52 += 4;
      }
      while (v49 != v57);
      uint64_t v0 = v80;
      uint64_t v25 = v77;
    }
    uint64_t v21 = v0 + 19;
    (*(void (**)(void, uint64_t, void))(v0[16] + 104))(v0[19], v25, v0[15]);
  }
  else
  {
    if (v24 != *MEMORY[0x263F3CCA0]) {
      goto LABEL_42;
    }
    unsigned int v78 = v24;
    if (v0[26])
    {
      uint64_t v38 = (uint64_t *)(v0[14] + 128);
      uint64_t v39 = 0;
      uint64_t v40 = swift_bridgeObjectRetain() + 48;
      do
      {
        uint64_t v42 = *(void *)(v40 - 16);
        uint64_t v43 = *(void *)(v40 - 8);
        swift_beginAccess();
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        unint64_t v44 = sub_21CA5BCE0(v42, v43);
        LOBYTE(v42) = v45;
        swift_bridgeObjectRelease();
        if (v42)
        {
          char v46 = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v47 = *v38;
          uint64_t v81 = *v38;
          *uint64_t v38 = 0x8000000000000000;
          if ((v46 & 1) == 0)
          {
            sub_21CB84E38();
            uint64_t v47 = v81;
          }
          swift_bridgeObjectRelease();
          sub_21CB830F0(v44, v47);
          *uint64_t v38 = v47;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v0 = v80;
        }
        else
        {
          swift_bridgeObjectRelease();
        }
        ++v39;
        uint64_t v41 = v0[26];
        swift_endAccess();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v40 += 32;
      }
      while (v39 != v41);
      swift_bridgeObjectRelease();
    }
    if (*(void *)(v0[14] + 144))
    {
      swift_retain();
      sub_21CA57E34((uint64_t *)&unk_267C96F50);
      sub_21CB88670();
      swift_release();
    }
    int64_t v59 = v0[26];
    uint64_t v26 = MEMORY[0x263F8EE78];
    if (v59)
    {
      uint64_t v60 = v0[12];
      uint64_t v81 = MEMORY[0x263F8EE78];
      sub_21CA45524(0, v59, 0);
      uint64_t v61 = 0;
      uint64_t v26 = v81;
      uint64_t v62 = *(void *)(v81 + 16);
      uint64_t v63 = 16 * v62;
      char v64 = (uint64_t *)(v60 + 40);
      do
      {
        uint64_t v66 = *(v64 - 1);
        uint64_t v65 = *v64;
        uint64_t v81 = v26;
        unint64_t v67 = *(void *)(v26 + 24);
        uint64_t v68 = v62 + v61 + 1;
        swift_bridgeObjectRetain();
        if (v62 + v61 >= v67 >> 1)
        {
          sub_21CA45524(v67 > 1, v62 + v61 + 1, 1);
          uint64_t v26 = v81;
        }
        uint64_t v69 = v80[26];
        ++v61;
        *(void *)(v26 + 16) = v68;
        uint64_t v70 = v26 + v63;
        *(void *)(v70 + 32) = v66;
        *(void *)(v70 + 40) = v65;
        v63 += 16;
        v64 += 4;
      }
      while (v61 != v69);
      uint64_t v0 = v80;
    }
    uint64_t v21 = v0 + 18;
    (*(void (**)(void, void, void))(v0[16] + 104))(v0[18], v78, v0[15]);
  }
  if (*(void *)(v26 + 16)
    && MEMORY[0x21D4B6C80](v0[14] + OBJC_IVAR____TtC7FMFCore27FMFSecureLocationController_delegate))
  {
    sub_21CA16848(0, *v21, v26);
    swift_unknownObjectRelease();
  }
  swift_bridgeObjectRelease();
LABEL_42:
  ((void (*)(uint64_t, void))v0[25])(*v21, v0[15]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v71 = (uint64_t (*)(void))v0[1];
  return v71();
}

uint64_t sub_21CAAD3C4@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v28 = sub_21CB87CC0();
  uint64_t v5 = *(void *)(v28 - 8);
  uint64_t result = MEMORY[0x270FA5388](v28);
  uint64_t v8 = (char *)v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void *)(a1 + 16);
  int64_t v10 = *(void *)(v9 + 16);
  uint64_t v11 = MEMORY[0x263F8EE78];
  if (v10)
  {
    uint64_t v25 = v8;
    v24[0] = a2;
    v24[1] = v2;
    uint64_t v30 = MEMORY[0x263F8EE78];
    swift_bridgeObjectRetain();
    sub_21CA443E0(0, v10, 0);
    uint64_t v12 = v30;
    uint64_t result = sub_21CA44CF4(v9);
    int64_t v13 = result;
    int v15 = v14;
    int v17 = v16 & 1;
    uint64_t v26 = v5;
    uint64_t v27 = v9 + 56;
    v24[2] = v5 + 32;
    uint64_t v18 = v25;
    while ((v13 & 0x8000000000000000) == 0 && v13 < 1 << *(unsigned char *)(v9 + 32))
    {
      if (((*(void *)(v27 + (((unint64_t)v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v13) & 1) == 0) {
        goto LABEL_14;
      }
      if (*(_DWORD *)(v9 + 36) != v15) {
        goto LABEL_15;
      }
      int v29 = v17;
      swift_bridgeObjectRetain_n();
      sub_21CB6114C(v11);
      sub_21CB87CA0();
      swift_bridgeObjectRelease();
      uint64_t v30 = v12;
      uint64_t v19 = v9;
      unint64_t v21 = *(void *)(v12 + 16);
      unint64_t v20 = *(void *)(v12 + 24);
      if (v21 >= v20 >> 1)
      {
        sub_21CA443E0(v20 > 1, v21 + 1, 1);
        uint64_t v12 = v30;
      }
      *(void *)(v12 + 16) = v21 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v26 + 32))(v12+ ((*(unsigned __int8 *)(v26 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80))+ *(void *)(v26 + 72) * v21, v18, v28);
      uint64_t result = sub_21CA44500(v13, v15, v29 & 1, v19);
      int64_t v13 = result;
      int v15 = v22;
      int v17 = v23 & 1;
      --v10;
      uint64_t v9 = v19;
      uint64_t v11 = MEMORY[0x263F8EE78];
      if (!v10)
      {
        sub_21CAB561C(result, v22, v17);
        uint64_t result = swift_bridgeObjectRelease();
        a2 = (void *)v24[0];
        goto LABEL_12;
      }
    }
    __break(1u);
LABEL_14:
    __break(1u);
LABEL_15:
    __break(1u);
  }
  else
  {
    uint64_t v12 = MEMORY[0x263F8EE78];
LABEL_12:
    *a2 = v12;
  }
  return result;
}

uint64_t sub_21CAAD664(uint64_t a1, uint64_t a2)
{
  v3[10] = a2;
  v3[11] = v2;
  v3[9] = a1;
  uint64_t v4 = sub_21CB87840();
  v3[12] = v4;
  v3[13] = *(void *)(v4 - 8);
  v3[14] = swift_task_alloc();
  v3[15] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_21CAAD738, v2, 0);
}

uint64_t sub_21CAAD738()
{
  char v35 = v0;
  if (*(void *)(v0[9] + 16))
  {
    if (qword_267C94990 != -1) {
      swift_once();
    }
    uint64_t v1 = v0[15];
    uint64_t v2 = v0[12];
    uint64_t v3 = v0[13];
    uint64_t v4 = v0[10];
    uint64_t v5 = sub_21CB880A0();
    sub_21CA4CC18(v5, (uint64_t)qword_267CA5368);
    uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
    v6(v1, v4, v2);
    uint64_t v7 = sub_21CB88070();
    os_log_type_t v8 = sub_21CB88880();
    BOOL v9 = os_log_type_enabled(v7, v8);
    uint64_t v10 = v0[15];
    uint64_t v12 = v0[12];
    uint64_t v11 = v0[13];
    if (v9)
    {
      os_log_t log = v7;
      int64_t v13 = (uint8_t *)swift_slowAlloc();
      uint64_t v33 = swift_slowAlloc();
      uint64_t v34 = v33;
      *(_DWORD *)int64_t v13 = 136315138;
      sub_21CA07D00(&qword_267C95788, MEMORY[0x263F3CCB0]);
      uint64_t v14 = sub_21CB88F00();
      v0[8] = sub_21CA4E450(v14, v15, &v34);
      sub_21CB889C0();
      swift_bridgeObjectRelease();
      char v16 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
      v16(v10, v12);
      _os_log_impl(&dword_21CA00000, log, v8, "FMFSecureLocationCtrl: startLocating secure friends called, with priority: %s", v13, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x21D4B6B70](v33, -1, -1);
      MEMORY[0x21D4B6B70](v13, -1, -1);
    }
    else
    {
      char v16 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
      v16(v0[15], v0[12]);
    }
    uint64_t v20 = v0[13];
    uint64_t v19 = v0[14];
    uint64_t v21 = v0[12];
    v6(v19, v0[10], v21);
    int v22 = (*(uint64_t (**)(uint64_t, uint64_t))(v20 + 88))(v19, v21);
    if (v22 == *MEMORY[0x263F3CCA8] || v22 == *MEMORY[0x263F3CCA0])
    {
      swift_beginAccess();
      uint64_t v23 = swift_bridgeObjectRetain();
      uint64_t v24 = sub_21CABAEC8(v23);
      swift_bridgeObjectRelease();
      uint64_t v25 = sub_21CB4DE30((uint64_t)v24);
      swift_release();
    }
    else
    {
      v16(v0[14], v0[12]);
      uint64_t v25 = MEMORY[0x263F8EE88];
    }
    uint64_t v26 = swift_bridgeObjectRetain();
    uint64_t v27 = sub_21CB4DE30(v26);
    swift_bridgeObjectRelease();
    uint64_t v28 = sub_21CAA7FFC(v27, v25);
    int v29 = sub_21CABADE0(v28);
    v0[16] = v29;
    swift_bridgeObjectRelease();
    uint64_t v30 = (void *)swift_task_alloc();
    v0[17] = v30;
    *uint64_t v30 = v0;
    v30[1] = sub_21CAADB74;
    uint64_t v31 = v0[10];
    return sub_21CA1C0D4((uint64_t)v29, v31);
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    int v17 = (uint64_t (*)(void))v0[1];
    return v17();
  }
}

uint64_t sub_21CAADB74()
{
  uint64_t v2 = (void *)*v1;
  v2[18] = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = v2[11];
    return MEMORY[0x270FA2498](sub_21CAADCC4, v3, 0);
  }
  else
  {
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v4 = (uint64_t (*)(void))v2[1];
    return v4();
  }
}

uint64_t sub_21CAADCC4()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_21CAADD3C()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_21CA1B88C(v0 + OBJC_IVAR____TtC7FMFCore27FMFSecureLocationController_startRefreshingTimestamp, (uint64_t *)&unk_267C951B0);
  sub_21CA640FC(v0 + OBJC_IVAR____TtC7FMFCore27FMFSecureLocationController_delegate);
  swift_defaultActor_destroy();
  return v0;
}

uint64_t sub_21CAADDBC()
{
  sub_21CAADD3C();

  return MEMORY[0x270FA2418](v0);
}

uint64_t sub_21CAADDE8()
{
  return type metadata accessor for FMFSecureLocationController(0);
}

void *sub_21CAADDF0(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = (void *)a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (void *)(v9 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(void *)a1 = *a2;
    *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
    uint64_t v5 = *(int *)(a3 + 24);
    uint64_t v6 = a1 + v5;
    uint64_t v7 = (uint64_t)a2 + v5;
    uint64_t v8 = sub_21CB87590();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16))(v6, v7, v8);
  }
  return v3;
}

uint64_t sub_21CAADEC4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 24);
  uint64_t v3 = sub_21CB87590();
  int v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);

  return v4(v2, v3);
}

uint64_t sub_21CAADF2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = sub_21CB87590();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(v5, v6, v7);
  return a1;
}

uint64_t sub_21CAADFB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = sub_21CB87590();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

uint64_t sub_21CAAE034(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = sub_21CB87590();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t sub_21CAAE0B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = sub_21CB87590();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t sub_21CAAE13C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_21CAAE150);
}

uint64_t sub_21CAAE150(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 254)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 8);
    BOOL v5 = v4 >= 2;
    int v6 = (v4 + 2147483646) & 0x7FFFFFFF;
    if (v5) {
      return (v6 + 1);
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v10 = sub_21CB87590();
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 24);
    return v11(v13, a2, v12);
  }
}

uint64_t sub_21CAAE200(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_21CAAE214);
}

uint64_t sub_21CAAE214(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 254)
  {
    *(unsigned char *)(result + 8) = a2 + 1;
  }
  else
  {
    uint64_t v7 = sub_21CB87590();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for LiveRelabilityStats(uint64_t a1)
{
  return sub_21CA59D2C(a1, (uint64_t *)&unk_267C95760);
}

uint64_t sub_21CAAE2D8()
{
  uint64_t result = sub_21CB87590();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void *sub_21CAAE37C(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = (void *)a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (void *)(v11 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(void *)a1 = *a2;
    *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
    *(_OWORD *)(a1 + 16) = *((_OWORD *)a2 + 1);
    uint64_t v5 = *(int *)(a3 + 32);
    int v6 = (void *)(a1 + v5);
    uint64_t v7 = (char *)a2 + v5;
    uint64_t v8 = sub_21CB87590();
    uint64_t v9 = *(void *)(v8 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
    {
      uint64_t v10 = sub_21CA57E34((uint64_t *)&unk_267C951B0);
      memcpy(v6, v7, *(void *)(*(void *)(v10 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v9 + 16))(v6, v7, v8);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
    }
  }
  return v3;
}

uint64_t sub_21CAAE4F0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 32);
  uint64_t v3 = sub_21CB87590();
  uint64_t v6 = *(void *)(v3 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v2, 1, v3);
  if (!result)
  {
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8);
    return v5(v2, v3);
  }
  return result;
}

uint64_t sub_21CAAE5C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  uint64_t v4 = *(int *)(a3 + 32);
  uint64_t v5 = (void *)(a1 + v4);
  uint64_t v6 = (const void *)(a2 + v4);
  uint64_t v7 = sub_21CB87590();
  uint64_t v8 = *(void *)(v7 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
  {
    uint64_t v9 = sub_21CA57E34((uint64_t *)&unk_267C951B0);
    memcpy(v5, v6, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v8 + 16))(v5, v6, v7);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

uint64_t sub_21CAAE6E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  uint64_t v4 = *(int *)(a3 + 32);
  uint64_t v5 = (void *)(a1 + v4);
  uint64_t v6 = (void *)(a2 + v4);
  uint64_t v7 = sub_21CB87590();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v8 + 48);
  int v10 = v9(v5, 1, v7);
  int v11 = v9(v6, 1, v7);
  if (!v10)
  {
    if (!v11)
    {
      (*(void (**)(void *, void *, uint64_t))(v8 + 24))(v5, v6, v7);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v8 + 8))(v5, v7);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    uint64_t v12 = sub_21CA57E34((uint64_t *)&unk_267C951B0);
    memcpy(v5, v6, *(void *)(*(void *)(v12 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v8 + 16))(v5, v6, v7);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  return a1;
}

uint64_t sub_21CAAE878(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  uint64_t v4 = *(int *)(a3 + 32);
  uint64_t v5 = (void *)(a1 + v4);
  uint64_t v6 = (const void *)(a2 + v4);
  uint64_t v7 = sub_21CB87590();
  uint64_t v8 = *(void *)(v7 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
  {
    uint64_t v9 = sub_21CA57E34((uint64_t *)&unk_267C951B0);
    memcpy(v5, v6, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v8 + 32))(v5, v6, v7);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

uint64_t sub_21CAAE99C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  uint64_t v4 = *(int *)(a3 + 32);
  uint64_t v5 = (void *)(a1 + v4);
  uint64_t v6 = (void *)(a2 + v4);
  uint64_t v7 = sub_21CB87590();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v8 + 48);
  int v10 = v9(v5, 1, v7);
  int v11 = v9(v6, 1, v7);
  if (!v10)
  {
    if (!v11)
    {
      (*(void (**)(void *, void *, uint64_t))(v8 + 40))(v5, v6, v7);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v8 + 8))(v5, v7);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    uint64_t v12 = sub_21CA57E34((uint64_t *)&unk_267C951B0);
    memcpy(v5, v6, *(void *)(*(void *)(v12 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v8 + 32))(v5, v6, v7);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  return a1;
}

uint64_t sub_21CAAEB24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 254)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 8);
    BOOL v5 = v4 >= 2;
    int v6 = (v4 + 2147483646) & 0x7FFFFFFF;
    if (v5) {
      return (v6 + 1);
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v10 = sub_21CA57E34((uint64_t *)&unk_267C951B0);
    int v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 32);
    return v11(v13, a2, v12);
  }
}

uint64_t sub_21CAAEBD8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 254)
  {
    *(unsigned char *)(result + 8) = a2 + 1;
  }
  else
  {
    uint64_t v7 = sub_21CA57E34((uint64_t *)&unk_267C951B0);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 32);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t initializeWithCopy for SecureFriend(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(_WORD *)(a1 + 25) = *(_WORD *)(a2 + 25);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SecureFriend(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(unsigned char *)(a1 + 25) = *(unsigned char *)(a2 + 25);
  *(unsigned char *)(a1 + 26) = *(unsigned char *)(a2 + 26);
  return a1;
}

__n128 initializeWithTake for SecureFriend(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 11) = *(_OWORD *)(a2 + 11);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for SecureFriend(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(unsigned char *)(a1 + 25) = *(unsigned char *)(a2 + 25);
  *(unsigned char *)(a1 + 26) = *(unsigned char *)(a2 + 26);
  return a1;
}

uint64_t getEnumTagSinglePayload for SecureFriend(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 27)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SecureFriend(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 26) = 0;
    *(_WORD *)(result + 24) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 27) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 27) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

unint64_t sub_21CAAEE58()
{
  unint64_t result = qword_267C95780;
  if (!qword_267C95780)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C95780);
  }
  return result;
}

uint64_t sub_21CAAEEAC()
{
  return v0;
}

void sub_21CAAEEB8(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_21CA57E34(&qword_267C95870);
  MEMORY[0x270FA5388](v4);
  int v6 = (void **)((char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_21CA24E80(v2, (uint64_t)v6, &qword_267C95870);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = *v6;
    uint64_t v7 = v10;
    sub_21CA57E34((uint64_t *)&unk_267C96F50);
    swift_willThrowTypedImpl();
    uint64_t v10 = v7;
    if (sub_21CB88F20())
    {
    }
    else
    {
      swift_allocError();
      *uint64_t v8 = v10;
    }
  }
  else
  {
    sub_21CA26A4C((uint64_t)v6, a1, &qword_267C95818);
  }
}

uint64_t sub_21CAAF068()
{
  uint64_t v1 = v0[28];
  uint64_t v2 = v0[25];
  v0[10] = v0;
  v0[15] = v1;
  v0[11] = sub_21CAAF108;
  uint64_t v3 = swift_continuation_init();
  sub_21CA2641C(v3, v2);
  return MEMORY[0x270FA23F0](v0 + 10);
}

uint64_t sub_21CAAF108()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 112);
  *(void *)(*v0 + 368) = v2;
  if (v2)
  {
    swift_willThrow();
    uint64_t v3 = sub_21CAAF388;
  }
  else
  {
    sub_21CA26A4C(*(void *)(v1 + 224), *(void *)(v1 + 192), &qword_267C95810);
    uint64_t v3 = sub_21CAAF238;
  }
  return MEMORY[0x270FA2498](v3, 0, 0);
}

uint64_t sub_21CAAF238()
{
  uint64_t v1 = v0[45];
  uint64_t v2 = v0[42];
  uint64_t v3 = v0[38];
  uint64_t v4 = v0[34];
  uint64_t v5 = v0[35];
  sub_21CA1B88C(v0[33], &qword_267C95858);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
  sub_21CA1B88C(v2, &qword_267C95868);
  sub_21CA1B88C(v1, &qword_267C95878);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  int v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t sub_21CAAF388()
{
  uint64_t v1 = v0[42];
  uint64_t v2 = v0[38];
  uint64_t v3 = v0[34];
  uint64_t v4 = v0[35];
  sub_21CA1B88C(v0[33], &qword_267C95858);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  sub_21CA1B88C(v1, &qword_267C95868);
  sub_21CA1B88C(v0[45], &qword_267C95878);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_21CAAF4E0()
{
  uint64_t v1 = v0[27];
  uint64_t v2 = v0[25];
  v0[2] = v0;
  v0[7] = v1;
  v0[3] = sub_21CAAF580;
  uint64_t v3 = swift_continuation_init();
  sub_21CA2641C(v3, v2);
  return MEMORY[0x270FA23F0](v0 + 2);
}

uint64_t sub_21CAAF580()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 48);
  *(void *)(*v0 + 376) = v2;
  if (v2)
  {
    swift_willThrow();
    uint64_t v3 = sub_21CAAF7B8;
  }
  else
  {
    sub_21CA26A4C(*(void *)(v1 + 216), *(void *)(v1 + 192), &qword_267C95810);
    uint64_t v3 = sub_21CAAF6B0;
  }
  return MEMORY[0x270FA2498](v3, 0, 0);
}

uint64_t sub_21CAAF6B0()
{
  sub_21CA1B88C(*(void *)(v0 + 360), &qword_267C95878);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_21CAAF7B8()
{
  sub_21CA1B88C(*(void *)(v0 + 360), &qword_267C95878);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_21CAAF8CC(uint64_t a1)
{
  uint64_t v2 = sub_21CA57E34(&qword_267C95810);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *(os_unfair_lock_s **)(a1 + 16);
  os_unfair_lock_lock(v5);
  unint64_t v6 = sub_21CAAFC90(a1);
  uint64_t v8 = v7;
  uint64_t v10 = v9;
  os_unfair_lock_unlock(v5);
  if (v6 >> 62)
  {
    if (v6 >> 62 == 1)
    {
      uint64_t v11 = *(void *)(v8 + 16);
      if (v11)
      {
        unint64_t v22 = v6;
        sub_21CB88600();
        sub_21CA07D00((unint64_t *)&qword_267C95840, MEMORY[0x263F8F488]);
        uint64_t v21 = v6 & 0x3FFFFFFFFFFFFFFFLL;
        swift_retain();
        swift_bridgeObjectRetain();
        uint64_t v12 = 0;
        do
        {
          ++v12;
          uint64_t v13 = swift_allocError();
          sub_21CB881C0();
          sub_21CA57E34((uint64_t *)&unk_267C96F50);
          swift_allocError();
          *uint64_t v14 = v13;
          swift_continuation_throwingResumeWithError();
        }
        while (v11 != v12);
        swift_bridgeObjectRelease();
        unint64_t v6 = v22;
      }
      else
      {
        swift_retain();
      }
      sub_21CB88670();
      sub_21CAB5A54(v6);
      swift_release();
    }
  }
  else
  {
    uint64_t v15 = *(void *)(v10 + 16);
    if (v15)
    {
      uint64_t v21 = (uint64_t)v4;
      unint64_t v22 = v6;
      sub_21CB88600();
      sub_21CA07D00((unint64_t *)&qword_267C95840, MEMORY[0x263F8F488]);
      swift_retain();
      swift_bridgeObjectRetain();
      uint64_t v16 = 0;
      do
      {
        ++v16;
        uint64_t v17 = swift_allocError();
        sub_21CB881C0();
        sub_21CA57E34((uint64_t *)&unk_267C96F50);
        swift_allocError();
        uint64_t *v18 = v17;
        swift_continuation_throwingResumeWithError();
      }
      while (v15 != v16);
      swift_bridgeObjectRelease();
      uint64_t v4 = (char *)v21;
      unint64_t v6 = v22;
    }
    else
    {
      swift_retain();
    }
    sub_21CB88670();
    uint64_t v19 = sub_21CA57E34(&qword_267C95818);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v4, 1, 1, v19);
    sub_21CA26A4C((uint64_t)v4, *(void *)(*(void *)(v6 + 64) + 40), &qword_267C95810);
    swift_continuation_throwingResume();
    swift_release();
    sub_21CAB5A54(v6);
  }
}

uint64_t sub_21CAAFC90(uint64_t a1)
{
  uint64_t v2 = sub_21CA57E34(&qword_267C95848);
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (uint64_t *)((char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = a1 + *(void *)(*(void *)a1 + 136);
  swift_beginAccess();
  sub_21CA24E80(v5, (uint64_t)v4, &qword_267C95848);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v13 = *v4;
      uint64_t v11 = v4[4];
      swift_release();
      sub_21CA1B88C(v5, &qword_267C95848);
      swift_storeEnumTagMultiPayload();
      if (!v11) {
        uint64_t v11 = v13 | 0x4000000000000000;
      }
      goto LABEL_7;
    case 2u:
      sub_21CA1B88C((uint64_t)v4, &qword_267C95848);
      uint64_t v10 = v5;
      goto LABEL_5;
    case 3u:
      uint64_t v10 = v5;
LABEL_5:
      sub_21CA1B88C(v10, &qword_267C95848);
      swift_storeEnumTagMultiPayload();
      break;
    case 4u:
      __break(1u);
      JUMPOUT(0x21CAAFECCLL);
    default:
      uint64_t v6 = sub_21CA57E34(&qword_267C95850);
      uint64_t v7 = (char *)v4 + *(int *)(v6 + 48);
      uint64_t v8 = (uint64_t)v4 + *(int *)(v6 + 64);
      sub_21CA1B88C(v5, &qword_267C95848);
      swift_storeEnumTagMultiPayload();
      sub_21CA1B88C(v8, &qword_267C95858);
      uint64_t v9 = sub_21CA57E34(&qword_267C95860);
      (*(void (**)(char *, uint64_t))(*(void *)(v9 - 8) + 8))(v7, v9);
      sub_21CA1B88C((uint64_t)v4, &qword_267C95868);
      break;
  }
  uint64_t v11 = 0x8000000000000000;
LABEL_7:
  swift_endAccess();
  return v11;
}

uint64_t sub_21CAAFEE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[5] = a6;
  v7[6] = a7;
  v7[3] = a4;
  v7[4] = a5;
  v7[2] = a1;
  return MEMORY[0x270FA2498](sub_21CAAFF08, 0, 0);
}

uint64_t sub_21CAAFF08()
{
  uint64_t v1 = swift_task_alloc();
  *(void *)(v0 + 56) = v1;
  long long v2 = *(_OWORD *)(v0 + 40);
  *(_OWORD *)(v1 + 16) = *(_OWORD *)(v0 + 24);
  *(_OWORD *)(v1 + 32) = v2;
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 64) = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_21CAAFFF8;
  uint64_t v4 = *(void *)(v0 + 16);
  uint64_t v5 = MEMORY[0x263F8EE60] + 8;
  uint64_t v6 = MEMORY[0x263F8EE60] + 8;
  uint64_t v7 = MEMORY[0x263F8EE60] + 8;
  return MEMORY[0x270FA22B8](v4, v5, v6, 0, 0, &unk_267C958A8, v1, v7);
}

uint64_t sub_21CAAFFF8()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_21CAB0108(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[8] = a5;
  v6[9] = a6;
  v6[6] = a3;
  v6[7] = a4;
  v6[5] = a2;
  v6[10] = sub_21CA57E34(&qword_267C95848);
  v6[11] = swift_task_alloc();
  sub_21CA57E34(&qword_267C95858);
  v6[12] = swift_task_alloc();
  uint64_t v7 = sub_21CA57E34(&qword_267C95860);
  v6[13] = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  v6[14] = v8;
  v6[15] = *(void *)(v8 + 64);
  v6[16] = swift_task_alloc();
  uint64_t v9 = sub_21CA57E34(&qword_267C95868);
  v6[17] = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  v6[18] = v10;
  v6[19] = *(void *)(v10 + 64);
  v6[20] = swift_task_alloc();
  v6[21] = swift_task_alloc();
  sub_21CA57E34(&qword_267C95028);
  v6[22] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_21CAB02E8, 0, 0);
}

uint64_t sub_21CAB02E8()
{
  uint64_t v1 = v0[21];
  uint64_t v2 = v0[22];
  uint64_t v4 = v0[18];
  uint64_t v3 = v0[19];
  uint64_t v29 = v4;
  uint64_t v32 = v0[17];
  uint64_t v5 = v0[14];
  uint64_t v27 = v0[16];
  uint64_t v28 = v0[15];
  uint64_t v26 = v0[13];
  uint64_t v31 = v0[12];
  uint64_t v30 = v0[9];
  uint64_t v6 = v0[7];
  uint64_t v7 = v0[6];
  uint64_t v25 = v0[8];
  uint64_t v8 = sub_21CB88640();
  uint64_t v33 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56);
  v33(v2, 1, 1, v8);
  sub_21CA24E80(v6, v1, &qword_267C95868);
  unint64_t v9 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = 0;
  *(void *)(v10 + 24) = 0;
  sub_21CA26A4C(v1, v10 + v9, &qword_267C95868);
  unint64_t v24 = (v3 + v9 + 7) & 0xFFFFFFFFFFFFFFF8;
  *(void *)(v10 + v24) = v7;
  swift_retain();
  sub_21CAE2624(v2, (uint64_t)&unk_267C958B8, v10);
  sub_21CA1B88C(v2, &qword_267C95028);
  v33(v2, 1, 1, v8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v27, v25, v26);
  unint64_t v11 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = 0;
  *(void *)(v12 + 24) = 0;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v5 + 32))(v12 + v11, v27, v26);
  *(void *)(v12 + ((v28 + v11 + 7) & 0xFFFFFFFFFFFFFFF8)) = v7;
  swift_retain();
  sub_21CAE2624(v2, (uint64_t)&unk_267C958C8, v12);
  sub_21CA1B88C(v2, &qword_267C95028);
  sub_21CA24E80(v30, v31, &qword_267C95858);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v29 + 48))(v31, 1, v32) == 1)
  {
    uint64_t v13 = v0[12];
    uint64_t v14 = &qword_267C95858;
  }
  else
  {
    uint64_t v16 = v0[21];
    uint64_t v15 = v0[22];
    uint64_t v17 = v0[20];
    uint64_t v18 = v0[6];
    sub_21CA26A4C(v0[12], v17, &qword_267C95868);
    v33(v15, 1, 1, v8);
    sub_21CA24E80(v17, v16, &qword_267C95868);
    uint64_t v19 = swift_allocObject();
    *(void *)(v19 + 16) = 0;
    *(void *)(v19 + 24) = 0;
    sub_21CA26A4C(v16, v19 + v9, &qword_267C95868);
    *(void *)(v19 + v24) = v18;
    swift_retain();
    sub_21CAE2624(v15, (uint64_t)&unk_267C958D8, v19);
    sub_21CA1B88C(v15, &qword_267C95028);
    uint64_t v13 = v17;
    uint64_t v14 = &qword_267C95868;
  }
  sub_21CA1B88C(v13, v14);
  v0[23] = sub_21CA57E34((uint64_t *)&unk_267C96F50);
  if (sub_21CB886C0())
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v20 = (uint64_t (*)(void))v0[1];
    return v20();
  }
  else
  {
    v0[24] = *(void *)(*(void *)v0[6] + 136);
    unint64_t v22 = (void *)swift_task_alloc();
    v0[25] = v22;
    uint64_t v23 = sub_21CA57E34(&qword_267C958D0);
    *unint64_t v22 = v0;
    v22[1] = sub_21CAB07C8;
    return MEMORY[0x270FA2048](v0 + 27, 0, 0, v23);
  }
}

uint64_t sub_21CAB07C8()
{
  *(void *)(*(void *)v1 + 208) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_21CAB0A44;
  }
  else {
    uint64_t v2 = sub_21CAB08DC;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_21CAB08DC()
{
  if (sub_21CB886C0())
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
    return v1();
  }
  else
  {
    uint64_t v3 = (void *)swift_task_alloc();
    *(void *)(v0 + 200) = v3;
    uint64_t v4 = sub_21CA57E34(&qword_267C958D0);
    *uint64_t v3 = v0;
    v3[1] = sub_21CAB07C8;
    return MEMORY[0x270FA2048](v0 + 216, 0, 0, v4);
  }
}

uint64_t sub_21CAB0A44()
{
  uint64_t v1 = v0 + 27;
  uint64_t v2 = v0[11];
  uint64_t v3 = v0[6];
  uint64_t v4 = v3 + v0[24];
  uint64_t v5 = *(os_unfair_lock_s **)(v3 + 16);
  os_unfair_lock_lock(v5);
  swift_beginAccess();
  sub_21CA24E80(v4, v2, &qword_267C95848);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v6 = (uint64_t *)v0[11];
      uint64_t v8 = *v6;
      uint64_t v7 = v6[1];
      unint64_t v9 = (void *)v6[2];
      uint64_t v10 = v6[4];
      if (v10)
      {
        int v40 = v10;
        uint64_t v11 = *(void *)(v7 + 24);
        swift_release();
        if (v11)
        {
          __break(1u);
LABEL_26:
          __break(1u);
LABEL_27:
          __break(1u);
          JUMPOUT(0x21CAB1024);
        }
        uint64_t v12 = (void *)v0[26];
        sub_21CA1B88C(v0[6] + v0[24], &qword_267C95848);
        swift_storeEnumTagMultiPayload();
        uint64_t v39 = v8 | 0x4000000000000000;
        id v13 = v12;
        swift_endAccess();
        os_unfair_lock_unlock(v5);
        uint64_t v14 = v9[2];
        uint64_t v15 = (void *)v0[26];
        if (v14)
        {
          uint64_t v38 = v12;
          id v16 = v15;
          sub_21CB88600();
          sub_21CA07D00((unint64_t *)&qword_267C95840, MEMORY[0x263F8F488]);
          swift_retain();
          swift_bridgeObjectRetain();
          uint64_t v17 = 0;
          do
          {
            ++v17;
            uint64_t v18 = swift_allocError();
            sub_21CB881C0();
            swift_allocError();
            *uint64_t v19 = v18;
            swift_continuation_throwingResumeWithError();
          }
          while (v14 != v17);
          swift_bridgeObjectRelease();
          uint64_t v1 = v0 + 27;
          uint64_t v12 = v38;
        }
        else
        {
          id v30 = v15;
          swift_retain();
          uint64_t v1 = v0 + 27;
        }
        uint64_t v31 = v0[26];
        sub_21CB88670();
        swift_allocError();
        *uint64_t v32 = v31;
        int v21 = v40;
        swift_continuation_throwingResumeWithError();
        swift_release();
        unint64_t v22 = v39;
      }
      else
      {
        int v41 = v8;
        uint64_t v23 = (void *)v0[26];
        unint64_t v24 = (void *)(v0[6] + v0[24]);
        sub_21CA1B88C((uint64_t)v24, &qword_267C95848);
        void *v24 = v7;
        v24[1] = v23;
        swift_storeEnumTagMultiPayload();
        id v25 = v23;
        swift_endAccess();
        os_unfair_lock_unlock(v5);
        uint64_t v26 = v9[2];
        if (v26)
        {
          sub_21CB88600();
          sub_21CA07D00((unint64_t *)&qword_267C95840, MEMORY[0x263F8F488]);
          swift_retain();
          swift_bridgeObjectRetain();
          uint64_t v27 = 0;
          do
          {
            ++v27;
            uint64_t v28 = swift_allocError();
            sub_21CB881C0();
            swift_allocError();
            *uint64_t v29 = v28;
            swift_continuation_throwingResumeWithError();
          }
          while (v26 != v27);
          swift_bridgeObjectRelease();
          int v21 = v41;
        }
        else
        {
          int v21 = v41;
          swift_retain();
        }
        uint64_t v12 = v9;
        sub_21CB88670();
        swift_release();
        unint64_t v22 = 0;
        uint64_t v1 = v0 + 27;
      }
LABEL_18:
      uint64_t v33 = (void *)v0[26];
      sub_21CB886D0();
      sub_21CAB62E4(v21, v12, v22);

      if (sub_21CB886C0())
      {
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        uint64_t v34 = (uint64_t (*)(void))v0[1];
        return v34();
      }
      else
      {
        uint64_t v36 = (void *)swift_task_alloc();
        v0[25] = v36;
        uint64_t v37 = sub_21CA57E34(&qword_267C958D0);
        *uint64_t v36 = v0;
        v36[1] = sub_21CAB07C8;
        return MEMORY[0x270FA2048](v1, 0, 0, v37);
      }
    case 2u:
      uint64_t v20 = *(void **)(v0[11] + 8);
      swift_release();

      goto LABEL_9;
    case 3u:
LABEL_9:
      swift_endAccess();
      os_unfair_lock_unlock(v5);
      uint64_t v12 = 0;
      int v21 = 0;
      unint64_t v22 = 0x8000000000000000;
      goto LABEL_18;
    case 4u:
      goto LABEL_27;
    default:
      goto LABEL_26;
  }
}

uint64_t sub_21CAB1038(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[17] = a4;
  v5[18] = a5;
  v5[19] = sub_21CA57E34(&qword_267C95848);
  v5[20] = swift_task_alloc();
  v5[21] = swift_task_alloc();
  sub_21CA57E34(&qword_267C958E0);
  v5[22] = swift_task_alloc();
  v5[23] = swift_task_alloc();
  sub_21CA57E34(&qword_267C95810);
  v5[24] = swift_task_alloc();
  v5[25] = swift_task_alloc();
  uint64_t v6 = sub_21CA57E34(&qword_267C95818);
  v5[26] = v6;
  v5[27] = *(void *)(v6 - 8);
  v5[28] = swift_task_alloc();
  v5[29] = swift_task_alloc();
  uint64_t v7 = sub_21CA57E34(&qword_267C95860);
  v5[30] = v7;
  v5[31] = *(void *)(v7 - 8);
  v5[32] = swift_task_alloc();
  uint64_t v8 = sub_21CA57E34(&qword_267C958E8);
  v5[33] = v8;
  v5[34] = *(void *)(v8 - 8);
  v5[35] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_21CAB1290, 0, 0);
}

uint64_t sub_21CAB1290()
{
  uint64_t v1 = (void *)v0[18];
  (*(void (**)(void, void, void))(v0[31] + 16))(v0[32], v0[17], v0[30]);
  sub_21CA356BC(&qword_267C958F0, &qword_267C95860);
  sub_21CB886E0();
  v0[36] = *(void *)(*v1 + 136);
  v0[37] = v1[2];
  return MEMORY[0x270FA2498](sub_21CAB137C, 0, 0);
}

uint64_t sub_21CAB137C()
{
  uint64_t v1 = v0;
  uint64_t v2 = v0;
  uint64_t v3 = v0 + 2;
  uint64_t v4 = (os_unfair_lock_s *)v1[37];
  v1[2] = v2;
  v1[3] = sub_21CAB14B8;
  uint64_t v5 = swift_continuation_init();
  os_unfair_lock_lock(v4);
  swift_beginAccess();
  sub_21CA102C8(v5);
  unint64_t v7 = v6;
  swift_endAccess();
  os_unfair_lock_unlock(v4);
  if (v7 >> 62)
  {
    if (v7 >> 62 == 1)
    {
      sub_21CA57E34((uint64_t *)&unk_267C96F50);
      swift_allocError();
      *uint64_t v8 = v7 & 0x3FFFFFFFFFFFFFFFLL;
      swift_continuation_throwingResumeWithError();
    }
  }
  else
  {
    swift_continuation_throwingResume();
  }
  return MEMORY[0x270FA23F0](v3);
}

uint64_t sub_21CAB14B8()
{
  uint64_t v1 = *(void **)v0;
  uint64_t v2 = *(void **)v0;
  uint64_t v3 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 304) = v3;
  if (v3)
  {
    swift_willThrow();
    return MEMORY[0x270FA2498](sub_21CAB178C, 0, 0);
  }
  else
  {
    uint64_t v4 = sub_21CA356BC(&qword_267C958F8, &qword_267C958E8);
    uint64_t v5 = (void *)swift_task_alloc();
    v1[39] = v5;
    *uint64_t v5 = v2;
    v5[1] = sub_21CAB1678;
    uint64_t v6 = v1[33];
    uint64_t v7 = v1[25];
    return MEMORY[0x270FA1E80](v7, v6, v4);
  }
}

uint64_t sub_21CAB1678()
{
  *(void *)(*(void *)v1 + 320) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_21CAB22D4;
  }
  else {
    uint64_t v2 = sub_21CAB188C;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_21CAB178C()
{
  (*(void (**)(void, void))(v0[34] + 8))(v0[35], v0[33]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_21CAB188C()
{
  uint64_t v1 = *(void *)(v0 + 200);
  int v2 = (*(uint64_t (**)(uint64_t, uint64_t, void))(*(void *)(v0 + 216) + 48))(v1, 1, *(void *)(v0 + 208));
  uint64_t v3 = *(void *)(v0 + 288);
  uint64_t v4 = *(os_unfair_lock_s **)(v0 + 296);
  if (v2 == 1)
  {
    uint64_t v5 = *(void *)(v0 + 160);
    uint64_t v6 = *(void *)(v0 + 144) + v3;
    sub_21CA1B88C(v1, &qword_267C95810);
    os_unfair_lock_lock(v4);
    sub_21CA24E80(v6, v5, &qword_267C95848);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v7 = *(unint64_t **)(v0 + 160);
        unint64_t v8 = *v7;
        uint64_t v9 = (void *)v7[1];
        unint64_t v11 = v7[2];
        unint64_t v10 = v7[3];
        unint64_t v12 = v7[4];
        if (!v12)
        {
          unint64_t v29 = v10 + 1;
          if (!__OFADD__(v10, 1))
          {
            id v30 = (unint64_t *)(*(void *)(v0 + 144) + *(void *)(v0 + 288));
            sub_21CA1B88C((uint64_t)v30, &qword_267C95848);
            *id v30 = v8;
            v30[1] = (unint64_t)v9;
            v30[2] = v11;
            v30[3] = v29;
            v30[4] = 0;
            swift_storeEnumTagMultiPayload();
            if (v29 == *(unint64_t *)((char *)v30 + *(int *)(sub_21CA57E34(&qword_267C95900) + 68)))
            {
              swift_retain();
              swift_bridgeObjectRetain();
              unint64_t v15 = v8;
              unint64_t v8 = v11;
              unint64_t v11 = 0;
              goto LABEL_18;
            }
LABEL_35:
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v0 + 296));
            goto LABEL_36;
          }
          goto LABEL_61;
        }
        if (!v9[3])
        {
          id v13 = (void *)(v10 + 1);
          if (!__OFADD__(v10, 1))
          {
            uint64_t v14 = (unint64_t *)(*(void *)(v0 + 144) + *(void *)(v0 + 288));
            if (v13 == *(void **)((char *)v14 + *(int *)(sub_21CA57E34(&qword_267C95900) + 68)))
            {
              swift_release();
              sub_21CA1B88C((uint64_t)v14, &qword_267C95848);
              swift_storeEnumTagMultiPayload();
              unint64_t v15 = v12 | 0x4000000000000000;
LABEL_18:
              os_unfair_lock_unlock(*(os_unfair_lock_t *)(v0 + 296));
              if (!(v15 >> 62))
              {
                uint64_t v47 = *(void *)(v8 + 16);
                if (v47)
                {
                  sub_21CB88600();
                  sub_21CA07D00((unint64_t *)&qword_267C95840, MEMORY[0x263F8F488]);
                  swift_retain();
                  swift_bridgeObjectRetain();
                  uint64_t v48 = 0;
                  do
                  {
                    ++v48;
                    uint64_t v49 = swift_allocError();
                    sub_21CB881C0();
                    sub_21CA57E34((uint64_t *)&unk_267C96F50);
                    swift_allocError();
                    *uint64_t v50 = v49;
                    swift_continuation_throwingResumeWithError();
                  }
                  while (v47 != v48);
                  swift_bridgeObjectRelease();
                }
                else
                {
                  swift_retain();
                }
                sub_21CB88670();
                goto LABEL_57;
              }
              if (v15 >> 62 == 1)
              {
                uint64_t v31 = v15 & 0x3FFFFFFFFFFFFFFFLL;
                uint64_t v32 = *(void *)(v11 + 16);
                if (v32)
                {
                  sub_21CB88600();
                  sub_21CA07D00((unint64_t *)&qword_267C95840, MEMORY[0x263F8F488]);
                  swift_retain();
                  swift_bridgeObjectRetain();
                  uint64_t v33 = 0;
                  do
                  {
                    ++v33;
                    uint64_t v34 = swift_allocError();
                    sub_21CB881C0();
                    sub_21CA57E34((uint64_t *)&unk_267C96F50);
                    swift_allocError();
                    uint64_t *v35 = v34;
                    swift_continuation_throwingResumeWithError();
                  }
                  while (v32 != v33);
                  swift_bridgeObjectRelease();
                  uint64_t v31 = v15 & 0x3FFFFFFFFFFFFFFFLL;
                }
                else
                {
                  swift_retain();
                }
                uint64_t v68 = *(void *)(v0 + 208);
                uint64_t v67 = *(void *)(v0 + 216);
                uint64_t v69 = *(void *)(v0 + 192);
                sub_21CB88670();
                (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v67 + 56))(v69, 1, 1, v68);
                sub_21CA26A4C(v69, *(void *)(*(void *)(v31 + 64) + 40), &qword_267C95810);
                swift_continuation_throwingResume();
LABEL_57:
                swift_release();
                sub_21CAB65C0(v15);
              }
LABEL_36:
              (*(void (**)(void, void))(*(void *)(v0 + 272) + 8))(*(void *)(v0 + 280), *(void *)(v0 + 264));
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              char v45 = *(uint64_t (**)(void))(v0 + 8);
              return v45();
            }
            goto LABEL_34;
          }
          goto LABEL_60;
        }
        __break(1u);
        break;
      case 2u:
        uint64_t v26 = *(void **)(*(void *)(v0 + 160) + 8);
        swift_release();

        goto LABEL_35;
      case 3u:
        goto LABEL_35;
      case 4u:
        goto LABEL_67;
      default:
        goto LABEL_66;
    }
LABEL_59:
    __break(1u);
LABEL_60:
    __break(1u);
LABEL_61:
    __break(1u);
    goto LABEL_62;
  }
  unint64_t v8 = v0 + 104;
  id v13 = (void *)(v0 + 128);
  uint64_t v16 = *(void *)(v0 + 168);
  uint64_t v17 = *(void *)(v0 + 144) + v3;
  sub_21CA26A4C(v1, *(void *)(v0 + 232), &qword_267C95818);
  os_unfair_lock_lock(v4);
  swift_beginAccess();
  sub_21CA24E80(v17, v16, &qword_267C95848);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v18 = *(unint64_t **)(v0 + 168);
      unint64_t v11 = *v18;
      uint64_t v9 = (void *)v18[1];
      unint64_t v19 = v18[2];
      unint64_t v12 = v18[3];
      unint64_t v20 = v18[4];
      if (v20)
      {
        if (v9[3]) {
          goto LABEL_59;
        }
        unint64_t v21 = v18[3];
        uint64_t v70 = *(void *)(v0 + 232);
        unint64_t v22 = *(unint64_t **)(v0 + 184);
        uint64_t v23 = (unint64_t *)(*(void *)(v0 + 144) + *(void *)(v0 + 288));
        sub_21CA1B88C((uint64_t)v23, &qword_267C95848);
        *uint64_t v23 = v11;
        v23[1] = (unint64_t)v9;
        v23[2] = v19;
        v23[3] = v21;
        v23[4] = 0;
        swift_storeEnumTagMultiPayload();
        uint64_t v24 = sub_21CA57E34(&qword_267C95908);
        uint64_t v25 = (uint64_t)v22 + *(int *)(v24 + 48);
        *unint64_t v22 = v20;
        sub_21CA24E80(v70, v25, &qword_267C95818);
        (*(void (**)(unint64_t *, void, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v22, 0, 1, v24);
      }
      else
      {
        uint64_t v36 = *(void *)(v0 + 144) + *(void *)(v0 + 288);
        *(void *)(v0 + 128) = v9;
        sub_21CA1B88C(v36, &qword_267C95848);
        swift_storeEnumTagMultiPayload();
        uint64_t v37 = v9[3];
        uint64_t v14 = (unint64_t *)(v37 + 1);
        if (__OFADD__(v37, 1))
        {
LABEL_62:
          __break(1u);
LABEL_63:
          __break(1u);
          goto LABEL_64;
        }
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        if (v9[2] < (uint64_t)v14 || (isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_21CAB4C14((uint64_t)v14);
          uint64_t v9 = (void *)*v13;
        }
        uint64_t v40 = v9[3];
        uint64_t v39 = v9[4];
        BOOL v43 = __OFADD__(v39, v40);
        uint64_t v41 = v39 + v40;
        if (v43) {
          goto LABEL_63;
        }
        if (v40 < 0)
        {
          if (v41 < 0)
          {
            uint64_t v51 = v9[2];
            BOOL v43 = __OFADD__(v41, v51);
            v41 += v51;
            if (v43)
            {
LABEL_65:
              __break(1u);
LABEL_66:
              __break(1u);
LABEL_67:
              __break(1u);
LABEL_68:
              __break(1u);
LABEL_69:
              __break(1u);
              JUMPOUT(0x21CAB22ACLL);
            }
          }
        }
        else
        {
          uint64_t v42 = v9[2];
          BOOL v43 = __OFSUB__(v41, v42);
          uint64_t v44 = v41 - v42;
          if (v44 < 0 == v43)
          {
            uint64_t v41 = v44;
            if (v43)
            {
              __break(1u);
LABEL_34:
              sub_21CA1B88C((uint64_t)v14, &qword_267C95848);
              *uint64_t v14 = v8;
              v14[1] = (unint64_t)v9;
              v14[2] = v11;
              v14[3] = (unint64_t)v13;
              v14[4] = v12;
              swift_storeEnumTagMultiPayload();
              goto LABEL_35;
            }
          }
        }
        sub_21CA24E80(*(void *)(v0 + 232), (uint64_t)v9+ ((*(unsigned __int8 *)(*(void *)(v0 + 216) + 80) + 40) & -(*(unsigned __int8 *)(*(void *)(v0 + 216)+ 80)+ 1))+ *(void *)(*(void *)(v0 + 216) + 72) * v41, &qword_267C95818);
        uint64_t v52 = v9[3];
        BOOL v43 = __OFADD__(v52, 1);
        uint64_t v53 = v52 + 1;
        if (v43)
        {
LABEL_64:
          __break(1u);
          goto LABEL_65;
        }
        uint64_t v27 = *(void *)(v0 + 184);
        uint64_t v54 = (unint64_t *)(*(void *)(v0 + 144) + *(void *)(v0 + 288));
        v9[3] = v53;
        sub_21CA1B88C((uint64_t)v54, &qword_267C95848);
        *uint64_t v54 = v11;
        v54[1] = (unint64_t)v9;
        v54[2] = v19;
        v54[3] = v12;
        v54[4] = 0;
        swift_storeEnumTagMultiPayload();
LABEL_47:
        uint64_t v55 = sub_21CA57E34(&qword_267C95908);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v55 - 8) + 56))(v27, 1, 1, v55);
      }
      uint64_t v56 = *(os_unfair_lock_s **)(v0 + 296);
      uint64_t v58 = *(void *)(v0 + 176);
      uint64_t v57 = *(void *)(v0 + 184);
      swift_endAccess();
      os_unfair_lock_unlock(v56);
      sub_21CA24E80(v57, v58, &qword_267C958E0);
      uint64_t v59 = sub_21CA57E34(&qword_267C95908);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v59 - 8) + 48))(v58, 1, v59) != 1)
      {
        uint64_t v61 = *(void *)(v0 + 216);
        uint64_t v60 = *(void *)(v0 + 224);
        uint64_t v62 = *(void *)(v0 + 208);
        uint64_t v63 = *(void *)(v0 + 192);
        char v64 = *(uint64_t **)(v0 + 176);
        uint64_t v65 = *v64;
        sub_21CA26A4C((uint64_t)v64 + *(int *)(v59 + 48), v60, &qword_267C95818);
        sub_21CA24E80(v60, v63, &qword_267C95818);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v61 + 56))(v63, 0, 1, v62);
        sub_21CA26A4C(v63, *(void *)(*(void *)(v65 + 64) + 40), &qword_267C95810);
        swift_continuation_throwingResume();
        sub_21CA1B88C(v60, &qword_267C95818);
      }
      uint64_t v66 = *(void *)(v0 + 232);
      sub_21CA1B88C(*(void *)(v0 + 184), &qword_267C958E0);
      sub_21CA1B88C(v66, &qword_267C95818);
      return MEMORY[0x270FA2498](sub_21CAB137C, 0, 0);
    case 2u:
      uint64_t v27 = *(void *)(v0 + 184);
      uint64_t v28 = *(void **)(*(void *)(v0 + 168) + 8);
      swift_release();

      goto LABEL_47;
    case 3u:
      uint64_t v27 = *(void *)(v0 + 184);
      goto LABEL_47;
    case 4u:
      goto LABEL_69;
    default:
      goto LABEL_68;
  }
}

uint64_t sub_21CAB22D4()
{
  (*(void (**)(void, void))(v0[34] + 8))(v0[35], v0[33]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_21CAB23D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[17] = a4;
  v5[18] = a5;
  v5[19] = sub_21CA57E34(&qword_267C95848);
  v5[20] = swift_task_alloc();
  v5[21] = swift_task_alloc();
  sub_21CA57E34(&qword_267C958E0);
  v5[22] = swift_task_alloc();
  v5[23] = swift_task_alloc();
  sub_21CA57E34(&qword_267C95810);
  v5[24] = swift_task_alloc();
  v5[25] = swift_task_alloc();
  v5[26] = swift_task_alloc();
  uint64_t v6 = sub_21CA57E34(&qword_267C95818);
  v5[27] = v6;
  v5[28] = *(void *)(v6 - 8);
  v5[29] = swift_task_alloc();
  v5[30] = swift_task_alloc();
  v5[31] = swift_task_alloc();
  v5[32] = swift_task_alloc();
  uint64_t v7 = sub_21CA57E34(&qword_267C95890);
  v5[33] = v7;
  v5[34] = *(void *)(v7 - 8);
  v5[35] = swift_task_alloc();
  uint64_t v8 = sub_21CA57E34(&qword_267C95918);
  v5[36] = v8;
  v5[37] = *(void *)(v8 - 8);
  v5[38] = swift_task_alloc();
  v5[39] = sub_21CA57E34(&qword_267C95868);
  v5[40] = swift_task_alloc();
  v5[41] = sub_21CA57E34(&qword_267C95920);
  v5[42] = swift_task_alloc();
  v5[43] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_21CAB26C8, 0, 0);
}

uint64_t sub_21CAB26C8()
{
  uint64_t v1 = v0[42];
  uint64_t v2 = v0[40];
  uint64_t v3 = v0[38];
  uint64_t v13 = v0[39];
  uint64_t v14 = v0[41];
  uint64_t v5 = v0[36];
  uint64_t v4 = v0[37];
  uint64_t v7 = v0[34];
  uint64_t v6 = v0[35];
  uint64_t v8 = v0[33];
  unint64_t v15 = (void *)v0[18];
  uint64_t v16 = v0[43];
  sub_21CA24E80(v0[17], v2, &qword_267C95868);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v6, v2, v8);
  sub_21CA356BC(&qword_267C95928, &qword_267C95890);
  sub_21CB886E0();
  uint64_t v9 = *(void *)(v2 + *(int *)(v13 + 52));
  uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 56);
  v0[44] = (uint64_t)v10;
  v0[45] = (v4 + 56) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
  v10(v1, 1, 1, v5);
  unint64_t v11 = (uint64_t *)(v1 + *(int *)(v14 + 52));
  *unint64_t v11 = 1;
  v11[1] = 0;
  swift_bridgeObjectRetain();
  sub_21CA1B88C(v1, &qword_267C95930);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32))(v1, v3, v5);
  v10(v1, 0, 1, v5);
  sub_21CA65348(*v11);
  *unint64_t v11 = v9;
  v11[1] = 0;
  sub_21CA26A4C(v1, v16, &qword_267C95920);
  sub_21CA1B88C(v2, &qword_267C95868);
  v0[46] = *(void *)(*v15 + 136);
  v0[47] = v15[2];
  return MEMORY[0x270FA2498](sub_21CAB28C4, 0, 0);
}

uint64_t sub_21CAB28C4()
{
  uint64_t v1 = v0;
  uint64_t v2 = v0;
  uint64_t v3 = v0 + 2;
  uint64_t v4 = (os_unfair_lock_s *)v1[47];
  v1[2] = v2;
  v1[3] = sub_21CAB2A00;
  uint64_t v5 = swift_continuation_init();
  os_unfair_lock_lock(v4);
  swift_beginAccess();
  sub_21CA102C8(v5);
  unint64_t v7 = v6;
  swift_endAccess();
  os_unfair_lock_unlock(v4);
  if (v7 >> 62)
  {
    if (v7 >> 62 == 1)
    {
      sub_21CA57E34((uint64_t *)&unk_267C96F50);
      swift_allocError();
      *uint64_t v8 = v7 & 0x3FFFFFFFFFFFFFFFLL;
      swift_continuation_throwingResumeWithError();
    }
  }
  else
  {
    swift_continuation_throwingResume();
  }
  return MEMORY[0x270FA23F0](v3);
}

uint64_t sub_21CAB2A00()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 384) = v1;
  if (v1)
  {
    swift_willThrow();
    uint64_t v2 = sub_21CAB47C4;
  }
  else
  {
    uint64_t v2 = sub_21CAB2B1C;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_21CAB2B1C()
{
  if ((*(unsigned int (**)(void, uint64_t, void))(*(void *)(v0 + 296) + 48))(*(void *)(v0 + 344), 1, *(void *)(v0 + 288)))
  {
    (*(void (**)(void, uint64_t, uint64_t, void))(*(void *)(v0 + 224) + 56))(*(void *)(v0 + 200), 1, 1, *(void *)(v0 + 216));
    uint64_t v1 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v0 + 352);
    uint64_t v2 = *(void *)(v0 + 344);
    uint64_t v3 = *(void *)(v0 + 328);
    uint64_t v4 = *(void *)(v0 + 288);
    sub_21CA1B88C(*(void *)(v0 + 200), &qword_267C95810);
    sub_21CA1B88C(v2, &qword_267C95930);
    v1(v2, 1, 1, v4);
    uint64_t v5 = (uint64_t *)(v2 + *(int *)(v3 + 52));
    if (*v5 == 1)
    {
      unint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v0 + 224) + 56);
      v6(*(void *)(v0 + 208), 1, 1, *(void *)(v0 + 216));
    }
    else
    {
      char v11 = sub_21CB88680();
      uint64_t v12 = *v5;
      if ((v11 & 1) != 0 || !v12 || (v13 = v5[1], unint64_t v14 = *(void *)(v12 + 16), v13 == v14))
      {
        uint64_t v15 = *(void *)(v0 + 216);
        uint64_t v16 = *(void *)(v0 + 224);
        uint64_t v17 = *(void *)(v0 + 208);
        swift_bridgeObjectRelease();
        *uint64_t v5 = 0;
        v5[1] = 0;
        unint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 56);
        v6(v17, 1, 1, v15);
      }
      else
      {
        if (v13 >= v14)
        {
LABEL_74:
          __break(1u);
LABEL_75:
          __break(1u);
          goto LABEL_76;
        }
        uint64_t v47 = *(void *)(v0 + 240);
        uint64_t v48 = *(void *)(v0 + 216);
        uint64_t v49 = *(void *)(v0 + 224);
        uint64_t v50 = *(void *)(v0 + 208);
        sub_21CA24E80(v12+ ((*(unsigned __int8 *)(v49 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v49 + 80))+ *(void *)(v49 + 72) * v13, v47, &qword_267C95818);
        v5[1] = v13 + 1;
        sub_21CA26A4C(v47, v50, &qword_267C95818);
        unint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v49 + 56);
        v6(v50, 0, 1, v48);
      }
    }
    uint64_t v18 = *(void *)(v0 + 208);
    int v19 = (*(uint64_t (**)(uint64_t, uint64_t, void))(*(void *)(v0 + 224) + 48))(v18, 1, *(void *)(v0 + 216));
    uint64_t v20 = *(void *)(v0 + 368);
    unint64_t v21 = *(os_unfair_lock_s **)(v0 + 376);
    if (v19 == 1)
    {
      uint64_t v22 = *(void *)(v0 + 160);
      uint64_t v23 = *(void *)(v0 + 144) + v20;
      sub_21CA1B88C(v18, &qword_267C95810);
      os_unfair_lock_lock(v21);
      sub_21CA24E80(v23, v22, &qword_267C95848);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          uint64_t v24 = *(unint64_t **)(v0 + 160);
          unint64_t v25 = *v24;
          uint64_t v26 = (void *)v24[1];
          unint64_t v28 = v24[2];
          unint64_t v27 = v24[3];
          unint64_t v29 = v24[4];
          if (!v29)
          {
            unint64_t v51 = v27 + 1;
            if (!__OFADD__(v27, 1))
            {
              uint64_t v52 = (unint64_t *)(*(void *)(v0 + 144) + *(void *)(v0 + 368));
              sub_21CA1B88C((uint64_t)v52, &qword_267C95848);
              *uint64_t v52 = v25;
              v52[1] = (unint64_t)v26;
              v52[2] = v28;
              v52[3] = v51;
              v52[4] = 0;
              swift_storeEnumTagMultiPayload();
              if (v51 == *(unint64_t *)((char *)v52 + *(int *)(sub_21CA57E34(&qword_267C95900) + 68)))
              {
                swift_retain();
                swift_bridgeObjectRetain();
                unint64_t v32 = v25;
                unint64_t v25 = v28;
                unint64_t v28 = 0;
                goto LABEL_31;
              }
LABEL_48:
              os_unfair_lock_unlock(*(os_unfair_lock_t *)(v0 + 376));
              goto LABEL_49;
            }
            goto LABEL_75;
          }
          if (!v26[3])
          {
            id v30 = (void *)(v27 + 1);
            if (!__OFADD__(v27, 1))
            {
              uint64_t v31 = (unint64_t *)(*(void *)(v0 + 144) + *(void *)(v0 + 368));
              if (v30 == *(void **)((char *)v31 + *(int *)(sub_21CA57E34(&qword_267C95900) + 68)))
              {
                swift_release();
                sub_21CA1B88C((uint64_t)v31, &qword_267C95848);
                swift_storeEnumTagMultiPayload();
                unint64_t v32 = v29 | 0x4000000000000000;
LABEL_31:
                os_unfair_lock_unlock(*(os_unfair_lock_t *)(v0 + 376));
                if (!(v32 >> 62))
                {
                  uint64_t v68 = *(void *)(v25 + 16);
                  if (v68)
                  {
                    sub_21CB88600();
                    sub_21CA07D00((unint64_t *)&qword_267C95840, MEMORY[0x263F8F488]);
                    swift_retain();
                    swift_bridgeObjectRetain();
                    uint64_t v69 = 0;
                    do
                    {
                      ++v69;
                      uint64_t v70 = swift_allocError();
                      sub_21CB881C0();
                      sub_21CA57E34((uint64_t *)&unk_267C96F50);
                      swift_allocError();
                      *uint64_t v71 = v70;
                      swift_continuation_throwingResumeWithError();
                    }
                    while (v68 != v69);
                    swift_bridgeObjectRelease();
                  }
                  else
                  {
                    swift_retain();
                  }
                  sub_21CB88670();
                  goto LABEL_70;
                }
                if (v32 >> 62 == 1)
                {
                  uint64_t v53 = v32 & 0x3FFFFFFFFFFFFFFFLL;
                  uint64_t v54 = *(void *)(v28 + 16);
                  if (v54)
                  {
                    sub_21CB88600();
                    sub_21CA07D00((unint64_t *)&qword_267C95840, MEMORY[0x263F8F488]);
                    swift_retain();
                    swift_bridgeObjectRetain();
                    uint64_t v55 = 0;
                    do
                    {
                      ++v55;
                      uint64_t v56 = swift_allocError();
                      sub_21CB881C0();
                      sub_21CA57E34((uint64_t *)&unk_267C96F50);
                      swift_allocError();
                      *uint64_t v57 = v56;
                      swift_continuation_throwingResumeWithError();
                    }
                    while (v54 != v55);
                    swift_bridgeObjectRelease();
                    uint64_t v53 = v32 & 0x3FFFFFFFFFFFFFFFLL;
                  }
                  else
                  {
                    swift_retain();
                  }
                  uint64_t v88 = *(void *)(v0 + 216);
                  uint64_t v89 = *(void *)(v0 + 192);
                  sub_21CB88670();
                  v6(v89, 1, 1, v88);
                  sub_21CA26A4C(v89, *(void *)(*(void *)(v53 + 64) + 40), &qword_267C95810);
                  swift_continuation_throwingResume();
LABEL_70:
                  swift_release();
                  sub_21CAB65C0(v32);
                }
LABEL_49:
                sub_21CA1B88C(*(void *)(v0 + 344), &qword_267C95920);
                swift_task_dealloc();
                swift_task_dealloc();
                swift_task_dealloc();
                swift_task_dealloc();
                swift_task_dealloc();
                swift_task_dealloc();
                swift_task_dealloc();
                swift_task_dealloc();
                swift_task_dealloc();
                swift_task_dealloc();
                swift_task_dealloc();
                swift_task_dealloc();
                swift_task_dealloc();
                swift_task_dealloc();
                swift_task_dealloc();
                swift_task_dealloc();
                uint64_t v67 = *(uint64_t (**)(void))(v0 + 8);
                return v67();
              }
              goto LABEL_47;
            }
            goto LABEL_73;
          }
          __break(1u);
          break;
        case 2u:
          BOOL v43 = *(void **)(*(void *)(v0 + 160) + 8);
          swift_release();

          goto LABEL_48;
        case 3u:
          goto LABEL_48;
        case 4u:
          goto LABEL_81;
        default:
          goto LABEL_80;
      }
LABEL_72:
      __break(1u);
LABEL_73:
      __break(1u);
      goto LABEL_74;
    }
    unint64_t v25 = v0 + 104;
    id v30 = (void *)(v0 + 128);
    uint64_t v33 = *(void *)(v0 + 168);
    uint64_t v34 = *(void *)(v0 + 144) + v20;
    sub_21CA26A4C(v18, *(void *)(v0 + 256), &qword_267C95818);
    os_unfair_lock_lock(v21);
    swift_beginAccess();
    sub_21CA24E80(v34, v33, &qword_267C95848);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v92 = v6;
        char v35 = *(unint64_t **)(v0 + 168);
        unint64_t v28 = *v35;
        uint64_t v26 = (void *)v35[1];
        unint64_t v36 = v35[2];
        unint64_t v29 = v35[3];
        unint64_t v37 = v35[4];
        if (v37)
        {
          if (v26[3]) {
            goto LABEL_72;
          }
          unint64_t v38 = v35[3];
          uint64_t v91 = *(void *)(v0 + 256);
          uint64_t v39 = *(unint64_t **)(v0 + 184);
          uint64_t v40 = (unint64_t *)(*(void *)(v0 + 144) + *(void *)(v0 + 368));
          sub_21CA1B88C((uint64_t)v40, &qword_267C95848);
          *uint64_t v40 = v28;
          v40[1] = (unint64_t)v26;
          v40[2] = v36;
          v40[3] = v38;
          v40[4] = 0;
          swift_storeEnumTagMultiPayload();
          uint64_t v41 = sub_21CA57E34(&qword_267C95908);
          uint64_t v42 = (uint64_t)v39 + *(int *)(v41 + 48);
          *uint64_t v39 = v37;
          sub_21CA24E80(v91, v42, &qword_267C95818);
          (*(void (**)(unint64_t *, void, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56))(v39, 0, 1, v41);
        }
        else
        {
          uint64_t v58 = *(void *)(v0 + 144) + *(void *)(v0 + 368);
          *(void *)(v0 + 128) = v26;
          sub_21CA1B88C(v58, &qword_267C95848);
          swift_storeEnumTagMultiPayload();
          uint64_t v59 = v26[3];
          uint64_t v31 = (unint64_t *)(v59 + 1);
          if (__OFADD__(v59, 1))
          {
LABEL_76:
            __break(1u);
LABEL_77:
            __break(1u);
            goto LABEL_78;
          }
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          if (v26[2] < (uint64_t)v31 || (isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            sub_21CAB4C14((uint64_t)v31);
            uint64_t v26 = (void *)*v30;
          }
          uint64_t v62 = v26[3];
          uint64_t v61 = v26[4];
          BOOL v65 = __OFADD__(v61, v62);
          uint64_t v63 = v61 + v62;
          if (v65) {
            goto LABEL_77;
          }
          if (v62 < 0)
          {
            if (v63 < 0)
            {
              uint64_t v72 = v26[2];
              BOOL v65 = __OFADD__(v63, v72);
              v63 += v72;
              if (v65)
              {
LABEL_79:
                __break(1u);
LABEL_80:
                __break(1u);
LABEL_81:
                __break(1u);
LABEL_82:
                __break(1u);
LABEL_83:
                __break(1u);
                JUMPOUT(0x21CAB3820);
              }
            }
          }
          else
          {
            uint64_t v64 = v26[2];
            BOOL v65 = __OFSUB__(v63, v64);
            uint64_t v66 = v63 - v64;
            if (v66 < 0 == v65)
            {
              uint64_t v63 = v66;
              if (v65)
              {
                __break(1u);
LABEL_47:
                sub_21CA1B88C((uint64_t)v31, &qword_267C95848);
                *uint64_t v31 = v25;
                v31[1] = (unint64_t)v26;
                v31[2] = v28;
                v31[3] = (unint64_t)v30;
                v31[4] = v29;
                swift_storeEnumTagMultiPayload();
                goto LABEL_48;
              }
            }
          }
          sub_21CA24E80(*(void *)(v0 + 256), (uint64_t)v26+ ((*(unsigned __int8 *)(*(void *)(v0 + 224) + 80) + 40) & -(*(unsigned __int8 *)(*(void *)(v0 + 224)+ 80)+ 1))+ *(void *)(*(void *)(v0 + 224) + 72) * v63, &qword_267C95818);
          uint64_t v73 = v26[3];
          BOOL v65 = __OFADD__(v73, 1);
          uint64_t v74 = v73 + 1;
          if (v65)
          {
LABEL_78:
            __break(1u);
            goto LABEL_79;
          }
          uint64_t v75 = *(void *)(v0 + 184);
          uint64_t v76 = (unint64_t *)(*(void *)(v0 + 144) + *(void *)(v0 + 368));
          v26[3] = v74;
          sub_21CA1B88C((uint64_t)v76, &qword_267C95848);
          unint64_t *v76 = v28;
          v76[1] = (unint64_t)v26;
          v76[2] = v36;
          v76[3] = v29;
          v76[4] = 0;
          swift_storeEnumTagMultiPayload();
          uint64_t v77 = sub_21CA57E34(&qword_267C95908);
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v77 - 8) + 56))(v75, 1, 1, v77);
        }
        unint64_t v6 = v92;
LABEL_61:
        unsigned int v78 = *(os_unfair_lock_s **)(v0 + 376);
        uint64_t v80 = *(void *)(v0 + 176);
        uint64_t v79 = *(void *)(v0 + 184);
        swift_endAccess();
        os_unfair_lock_unlock(v78);
        sub_21CA24E80(v79, v80, &qword_267C958E0);
        uint64_t v81 = sub_21CA57E34(&qword_267C95908);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v81 - 8) + 48))(v80, 1, v81) != 1)
        {
          uint64_t v82 = *(void *)(v0 + 232);
          uint64_t v83 = *(void *)(v0 + 216);
          uint64_t v84 = *(void *)(v0 + 192);
          uint64_t v85 = *(uint64_t **)(v0 + 176);
          uint64_t v86 = *v85;
          sub_21CA26A4C((uint64_t)v85 + *(int *)(v81 + 48), v82, &qword_267C95818);
          sub_21CA24E80(v82, v84, &qword_267C95818);
          v6(v84, 0, 1, v83);
          sub_21CA26A4C(v84, *(void *)(*(void *)(v86 + 64) + 40), &qword_267C95810);
          swift_continuation_throwingResume();
          sub_21CA1B88C(v82, &qword_267C95818);
        }
        uint64_t v87 = *(void *)(v0 + 256);
        sub_21CA1B88C(*(void *)(v0 + 184), &qword_267C958E0);
        sub_21CA1B88C(v87, &qword_267C95818);
        uint64_t result = MEMORY[0x270FA2498](sub_21CAB28C4, 0, 0);
        break;
      case 2u:
        uint64_t v44 = *(void *)(v0 + 184);
        char v45 = *(void **)(*(void *)(v0 + 168) + 8);
        swift_release();

        goto LABEL_25;
      case 3u:
        uint64_t v44 = *(void *)(v0 + 184);
LABEL_25:
        uint64_t v46 = sub_21CA57E34(&qword_267C95908);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 56))(v44, 1, 1, v46);
        goto LABEL_61;
      case 4u:
        goto LABEL_83;
      default:
        goto LABEL_82;
    }
  }
  else
  {
    uint64_t v7 = sub_21CA356BC(&qword_267C95938, &qword_267C95918);
    uint64_t v8 = (void *)swift_task_alloc();
    *(void *)(v0 + 392) = v8;
    *uint64_t v8 = v0;
    v8[1] = sub_21CAB3848;
    uint64_t v9 = *(void *)(v0 + 288);
    uint64_t v10 = *(void *)(v0 + 200);
    return MEMORY[0x270FA1E80](v10, v9, v7);
  }
  return result;
}

uint64_t sub_21CAB3848()
{
  *(void *)(*(void *)v1 + 400) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_21CAB4614;
  }
  else {
    uint64_t v2 = sub_21CAB395C;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_21CAB395C()
{
  uint64_t v1 = *(void *)(v0 + 216);
  uint64_t v2 = *(void *)(v0 + 224);
  uint64_t v3 = *(void *)(v0 + 200);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    uint64_t v4 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v0 + 352);
    uint64_t v5 = *(void *)(v0 + 344);
    uint64_t v6 = *(void *)(v0 + 328);
    uint64_t v7 = *(void *)(v0 + 288);
    sub_21CA1B88C(v3, &qword_267C95810);
    sub_21CA1B88C(v5, &qword_267C95930);
    v4(v5, 1, 1, v7);
    uint64_t v8 = (uint64_t *)(v5 + *(int *)(v6 + 52));
    if (*v8 == 1)
    {
      uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v0 + 224) + 56);
      v9(*(void *)(v0 + 208), 1, 1, *(void *)(v0 + 216));
    }
    else
    {
      char v12 = sub_21CB88680();
      uint64_t v13 = *v8;
      if ((v12 & 1) != 0 || !v13 || (unint64_t v14 = v8[1], v15 = *(void *)(v13 + 16), v14 == v15))
      {
        uint64_t v16 = *(void *)(v0 + 216);
        uint64_t v17 = *(void *)(v0 + 224);
        uint64_t v18 = *(void *)(v0 + 208);
        swift_bridgeObjectRelease();
        *uint64_t v8 = 0;
        v8[1] = 0;
        uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v17 + 56);
        v9(v18, 1, 1, v16);
      }
      else
      {
        if (v14 >= v15)
        {
LABEL_76:
          __break(1u);
          goto LABEL_77;
        }
        uint64_t v66 = *(void *)(v0 + 240);
        uint64_t v67 = *(void *)(v0 + 216);
        uint64_t v68 = *(void *)(v0 + 224);
        uint64_t v69 = *(void *)(v0 + 208);
        sub_21CA24E80(v13+ ((*(unsigned __int8 *)(v68 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v68 + 80))+ *(void *)(v68 + 72) * v14, v66, &qword_267C95818);
        v8[1] = v14 + 1;
        sub_21CA26A4C(v66, v69, &qword_267C95818);
        uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v68 + 56);
        v9(v69, 0, 1, v67);
      }
    }
  }
  else
  {
    uint64_t v10 = *(void *)(v0 + 248);
    uint64_t v11 = *(void *)(v0 + 208);
    sub_21CA26A4C(v3, v10, &qword_267C95818);
    sub_21CA26A4C(v10, v11, &qword_267C95818);
    uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v2 + 56);
    v9(v11, 0, 1, v1);
  }
  uint64_t v19 = *(void *)(v0 + 208);
  int v20 = (*(uint64_t (**)(uint64_t, uint64_t, void))(*(void *)(v0 + 224) + 48))(v19, 1, *(void *)(v0 + 216));
  uint64_t v21 = *(void *)(v0 + 368);
  uint64_t v22 = *(os_unfair_lock_s **)(v0 + 376);
  if (v20 == 1)
  {
    uint64_t v23 = *(void *)(v0 + 160);
    uint64_t v24 = *(void *)(v0 + 144) + v21;
    sub_21CA1B88C(v19, &qword_267C95810);
    os_unfair_lock_lock(v22);
    sub_21CA24E80(v24, v23, &qword_267C95848);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        unint64_t v25 = *(unint64_t **)(v0 + 160);
        unint64_t v26 = *v25;
        unint64_t v27 = (void *)v25[1];
        unint64_t v29 = v25[2];
        unint64_t v28 = v25[3];
        unint64_t v30 = v25[4];
        if (!v30)
        {
          unint64_t v48 = v28 + 1;
          if (!__OFADD__(v28, 1))
          {
            uint64_t v49 = (unint64_t *)(*(void *)(v0 + 144) + *(void *)(v0 + 368));
            sub_21CA1B88C((uint64_t)v49, &qword_267C95848);
            *uint64_t v49 = v26;
            v49[1] = (unint64_t)v27;
            v49[2] = v29;
            v49[3] = v48;
            v49[4] = 0;
            swift_storeEnumTagMultiPayload();
            if (v48 == *(unint64_t *)((char *)v49 + *(int *)(sub_21CA57E34(&qword_267C95900) + 68)))
            {
              swift_retain();
              swift_bridgeObjectRetain();
              unint64_t v33 = v26;
              unint64_t v26 = v29;
              unint64_t v29 = 0;
              goto LABEL_27;
            }
LABEL_44:
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v0 + 376));
            goto LABEL_45;
          }
          goto LABEL_72;
        }
        if (!v27[3])
        {
          uint64_t v31 = (void *)(v28 + 1);
          if (!__OFADD__(v28, 1))
          {
            unint64_t v32 = (unint64_t *)(*(void *)(v0 + 144) + *(void *)(v0 + 368));
            if (v31 == *(void **)((char *)v32 + *(int *)(sub_21CA57E34(&qword_267C95900) + 68)))
            {
              swift_release();
              sub_21CA1B88C((uint64_t)v32, &qword_267C95848);
              swift_storeEnumTagMultiPayload();
              unint64_t v33 = v30 | 0x4000000000000000;
LABEL_27:
              os_unfair_lock_unlock(*(os_unfair_lock_t *)(v0 + 376));
              if (!(v33 >> 62))
              {
                uint64_t v70 = *(void *)(v26 + 16);
                if (v70)
                {
                  sub_21CB88600();
                  sub_21CA07D00((unint64_t *)&qword_267C95840, MEMORY[0x263F8F488]);
                  swift_retain();
                  swift_bridgeObjectRetain();
                  uint64_t v71 = 0;
                  do
                  {
                    ++v71;
                    uint64_t v72 = swift_allocError();
                    sub_21CB881C0();
                    sub_21CA57E34((uint64_t *)&unk_267C96F50);
                    swift_allocError();
                    *uint64_t v73 = v72;
                    swift_continuation_throwingResumeWithError();
                  }
                  while (v70 != v71);
                  swift_bridgeObjectRelease();
                }
                else
                {
                  swift_retain();
                }
                sub_21CB88670();
                goto LABEL_68;
              }
              if (v33 >> 62 == 1)
              {
                uint64_t v50 = v33 & 0x3FFFFFFFFFFFFFFFLL;
                uint64_t v51 = *(void *)(v29 + 16);
                if (v51)
                {
                  sub_21CB88600();
                  sub_21CA07D00((unint64_t *)&qword_267C95840, MEMORY[0x263F8F488]);
                  swift_retain();
                  swift_bridgeObjectRetain();
                  uint64_t v52 = 0;
                  do
                  {
                    ++v52;
                    uint64_t v53 = swift_allocError();
                    sub_21CB881C0();
                    sub_21CA57E34((uint64_t *)&unk_267C96F50);
                    swift_allocError();
                    *uint64_t v54 = v53;
                    swift_continuation_throwingResumeWithError();
                  }
                  while (v51 != v52);
                  swift_bridgeObjectRelease();
                  uint64_t v50 = v33 & 0x3FFFFFFFFFFFFFFFLL;
                }
                else
                {
                  swift_retain();
                }
                uint64_t v90 = *(void *)(v0 + 216);
                uint64_t v91 = *(void *)(v0 + 192);
                sub_21CB88670();
                v9(v91, 1, 1, v90);
                sub_21CA26A4C(v91, *(void *)(*(void *)(v50 + 64) + 40), &qword_267C95810);
                swift_continuation_throwingResume();
LABEL_68:
                swift_release();
                sub_21CAB65C0(v33);
              }
LABEL_45:
              sub_21CA1B88C(*(void *)(v0 + 344), &qword_267C95920);
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              uint64_t v64 = *(uint64_t (**)(void))(v0 + 8);
              return v64();
            }
            goto LABEL_43;
          }
          goto LABEL_71;
        }
        __break(1u);
        break;
      case 2u:
        uint64_t v44 = *(void **)(*(void *)(v0 + 160) + 8);
        swift_release();

        goto LABEL_44;
      case 3u:
        goto LABEL_44;
      case 4u:
        goto LABEL_79;
      default:
        goto LABEL_78;
    }
LABEL_70:
    __break(1u);
LABEL_71:
    __break(1u);
LABEL_72:
    __break(1u);
    goto LABEL_73;
  }
  unint64_t v26 = v0 + 104;
  uint64_t v31 = (void *)(v0 + 128);
  uint64_t v34 = *(void *)(v0 + 168);
  uint64_t v35 = *(void *)(v0 + 144) + v21;
  sub_21CA26A4C(v19, *(void *)(v0 + 256), &qword_267C95818);
  os_unfair_lock_lock(v22);
  swift_beginAccess();
  sub_21CA24E80(v35, v34, &qword_267C95848);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v93 = v9;
      unint64_t v36 = *(unint64_t **)(v0 + 168);
      unint64_t v29 = *v36;
      unint64_t v27 = (void *)v36[1];
      unint64_t v37 = v36[2];
      unint64_t v30 = v36[3];
      unint64_t v38 = v36[4];
      if (v38)
      {
        if (v27[3]) {
          goto LABEL_70;
        }
        unint64_t v39 = v36[3];
        uint64_t v92 = *(void *)(v0 + 256);
        uint64_t v40 = *(unint64_t **)(v0 + 184);
        uint64_t v41 = (unint64_t *)(*(void *)(v0 + 144) + *(void *)(v0 + 368));
        sub_21CA1B88C((uint64_t)v41, &qword_267C95848);
        unint64_t *v41 = v29;
        v41[1] = (unint64_t)v27;
        v41[2] = v37;
        v41[3] = v39;
        v41[4] = 0;
        swift_storeEnumTagMultiPayload();
        uint64_t v42 = sub_21CA57E34(&qword_267C95908);
        uint64_t v43 = (uint64_t)v40 + *(int *)(v42 + 48);
        *uint64_t v40 = v38;
        sub_21CA24E80(v92, v43, &qword_267C95818);
        (*(void (**)(unint64_t *, void, uint64_t, uint64_t))(*(void *)(v42 - 8) + 56))(v40, 0, 1, v42);
      }
      else
      {
        uint64_t v55 = *(void *)(v0 + 144) + *(void *)(v0 + 368);
        *(void *)(v0 + 128) = v27;
        sub_21CA1B88C(v55, &qword_267C95848);
        swift_storeEnumTagMultiPayload();
        uint64_t v56 = v27[3];
        unint64_t v32 = (unint64_t *)(v56 + 1);
        if (__OFADD__(v56, 1))
        {
LABEL_73:
          __break(1u);
LABEL_74:
          __break(1u);
LABEL_75:
          __break(1u);
          goto LABEL_76;
        }
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        if (v27[2] < (uint64_t)v32 || (isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_21CAB4C14((uint64_t)v32);
          unint64_t v27 = (void *)*v31;
        }
        uint64_t v59 = v27[3];
        uint64_t v58 = v27[4];
        BOOL v62 = __OFADD__(v58, v59);
        uint64_t v60 = v58 + v59;
        if (v62) {
          goto LABEL_74;
        }
        if (v59 < 0)
        {
          if (v60 < 0)
          {
            uint64_t v74 = v27[2];
            BOOL v62 = __OFADD__(v60, v74);
            v60 += v74;
            if (v62)
            {
LABEL_77:
              __break(1u);
LABEL_78:
              __break(1u);
LABEL_79:
              __break(1u);
LABEL_80:
              __break(1u);
LABEL_81:
              __break(1u);
              JUMPOUT(0x21CAB45ECLL);
            }
          }
        }
        else
        {
          uint64_t v61 = v27[2];
          BOOL v62 = __OFSUB__(v60, v61);
          uint64_t v63 = v60 - v61;
          if (v63 < 0 == v62)
          {
            uint64_t v60 = v63;
            if (v62)
            {
              __break(1u);
LABEL_43:
              sub_21CA1B88C((uint64_t)v32, &qword_267C95848);
              *unint64_t v32 = v26;
              v32[1] = (unint64_t)v27;
              v32[2] = v29;
              v32[3] = (unint64_t)v31;
              v32[4] = v30;
              swift_storeEnumTagMultiPayload();
              goto LABEL_44;
            }
          }
        }
        sub_21CA24E80(*(void *)(v0 + 256), (uint64_t)v27+ ((*(unsigned __int8 *)(*(void *)(v0 + 224) + 80) + 40) & -(*(unsigned __int8 *)(*(void *)(v0 + 224)+ 80)+ 1))+ *(void *)(*(void *)(v0 + 224) + 72) * v60, &qword_267C95818);
        uint64_t v75 = v27[3];
        BOOL v62 = __OFADD__(v75, 1);
        uint64_t v76 = v75 + 1;
        if (v62) {
          goto LABEL_75;
        }
        uint64_t v77 = *(void *)(v0 + 184);
        unsigned int v78 = (unint64_t *)(*(void *)(v0 + 144) + *(void *)(v0 + 368));
        v27[3] = v76;
        sub_21CA1B88C((uint64_t)v78, &qword_267C95848);
        *unsigned int v78 = v29;
        v78[1] = (unint64_t)v27;
        v78[2] = v37;
        v78[3] = v30;
        v78[4] = 0;
        swift_storeEnumTagMultiPayload();
        uint64_t v79 = sub_21CA57E34(&qword_267C95908);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v79 - 8) + 56))(v77, 1, 1, v79);
      }
      uint64_t v9 = v93;
LABEL_59:
      uint64_t v80 = *(os_unfair_lock_s **)(v0 + 376);
      uint64_t v82 = *(void *)(v0 + 176);
      uint64_t v81 = *(void *)(v0 + 184);
      swift_endAccess();
      os_unfair_lock_unlock(v80);
      sub_21CA24E80(v81, v82, &qword_267C958E0);
      uint64_t v83 = sub_21CA57E34(&qword_267C95908);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v83 - 8) + 48))(v82, 1, v83) != 1)
      {
        uint64_t v84 = *(void *)(v0 + 232);
        uint64_t v85 = *(void *)(v0 + 216);
        uint64_t v86 = *(void *)(v0 + 192);
        uint64_t v87 = *(uint64_t **)(v0 + 176);
        uint64_t v88 = *v87;
        sub_21CA26A4C((uint64_t)v87 + *(int *)(v83 + 48), v84, &qword_267C95818);
        sub_21CA24E80(v84, v86, &qword_267C95818);
        v9(v86, 0, 1, v85);
        sub_21CA26A4C(v86, *(void *)(*(void *)(v88 + 64) + 40), &qword_267C95810);
        swift_continuation_throwingResume();
        sub_21CA1B88C(v84, &qword_267C95818);
      }
      uint64_t v89 = *(void *)(v0 + 256);
      sub_21CA1B88C(*(void *)(v0 + 184), &qword_267C958E0);
      sub_21CA1B88C(v89, &qword_267C95818);
      return MEMORY[0x270FA2498](sub_21CAB28C4, 0, 0);
    case 2u:
      uint64_t v45 = *(void *)(v0 + 184);
      uint64_t v46 = *(void **)(*(void *)(v0 + 168) + 8);
      swift_release();

      goto LABEL_23;
    case 3u:
      uint64_t v45 = *(void *)(v0 + 184);
LABEL_23:
      uint64_t v47 = sub_21CA57E34(&qword_267C95908);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v47 - 8) + 56))(v45, 1, 1, v47);
      goto LABEL_59;
    case 4u:
      goto LABEL_81;
    default:
      goto LABEL_80;
  }
}

uint64_t sub_21CAB4614()
{
  uint64_t v1 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v0[44];
  uint64_t v2 = v0[43];
  uint64_t v3 = v0[41];
  uint64_t v4 = v0[36];
  sub_21CA1B88C(v2, &qword_267C95930);
  v1(v2, 1, 1, v4);
  uint64_t v5 = (uint64_t *)(v2 + *(int *)(v3 + 52));
  sub_21CA65348(*v5);
  *(_OWORD *)uint64_t v5 = xmmword_21CB8D000;
  swift_willThrow();
  sub_21CA1B88C(v0[43], &qword_267C95920);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t sub_21CAB47C4()
{
  sub_21CA1B88C(*(void *)(v0 + 344), &qword_267C95920);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_21CAB491C(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return MEMORY[0x270FA2498](sub_21CAB493C, 0, 0);
}

uint64_t sub_21CAB493C()
{
  uint64_t v1 = v0[2];
  sub_21CA24E80(v0[3], v1, &qword_267C957E0);
  uint64_t v2 = sub_21CA57E34(&qword_267C957E0);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v1, 0, 2, v2);
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_21CAB49EC()
{
  uint64_t v2 = *(void (**)(uint64_t, uint64_t))(*v1 + 96);
  uint64_t v3 = *(void *)(*v1 + 88);
  uint64_t v4 = *(void *)(*v1 + 64);
  uint64_t v5 = *v1;
  *(void *)(v5 + 120) = v0;
  swift_task_dealloc();
  v2(v3, v4);
  if (v0)
  {
    return MEMORY[0x270FA2498](sub_21CAB4BA8, 0, 0);
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v6 = *(uint64_t (**)(void))(v5 + 8);
    return v6();
  }
}

uint64_t sub_21CAB4BA8()
{
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

size_t sub_21CAB4C14(uint64_t a1)
{
  uint64_t v2 = *v1;
  uint64_t v3 = (uint64_t *)(*v1 + 16);
  uint64_t v4 = *v3;
  if (*v3 >= a1)
  {
    uint64_t v16 = *(unsigned __int8 *)(*(void *)(sub_21CA57E34(&qword_267C95818) - 8) + 80);
    sub_21CA57E34(&qword_267C95910);
    uint64_t v13 = swift_allocObject();
    long long v17 = *(_OWORD *)(v2 + 24);
    *(void *)(v13 + 16) = v4;
    *(_OWORD *)(v13 + 24) = v17;
    if ((uint64_t)v17 >= 1) {
      sub_21CAB52C4(v13 + 16, v13 + ((v16 + 40) & ~v16), v3, v2 + ((v16 + 40) & ~v16));
    }
    goto LABEL_19;
  }
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v6 = *v1;
  uint64_t v7 = sub_21CA57E34(&qword_267C95818);
  sub_21CB88030();
  if (isUniquelyReferenced_nonNull_native)
  {
    uint64_t v8 = *(void *)(v7 - 8);
    uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
    uint64_t v10 = *(void *)(v6 + 24);
    sub_21CA57E34(&qword_267C95910);
    uint64_t v11 = *(void *)(v8 + 72);
    uint64_t v12 = (v9 + 40) & ~v9;
    uint64_t v13 = swift_allocObject();
    size_t result = j__malloc_size((const void *)v13);
    if (v11)
    {
      if (result - v12 != 0x8000000000000000 || v11 != -1)
      {
        *(void *)(v13 + 16) = (uint64_t)(result - v12) / v11;
        *(void *)(v13 + 24) = v10;
        *(void *)(v13 + 32) = 0;
        if (v10 >= 1)
        {
          swift_retain();
          sub_21CAB4EF4(v13 + 16, v13 + v12, (void *)(v6 + 16), v6 + v12);
          *(void *)(v6 + 24) = 0;
          swift_release();
        }
LABEL_19:
        size_t result = swift_release();
        *uint64_t v1 = v13;
        return result;
      }
      goto LABEL_22;
    }
    __break(1u);
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v18 = *(void *)(v7 - 8);
  uint64_t v19 = *(unsigned __int8 *)(v18 + 80);
  sub_21CA57E34(&qword_267C95910);
  uint64_t v20 = *(void *)(v18 + 72);
  uint64_t v21 = (v19 + 40) & ~v19;
  uint64_t v13 = swift_allocObject();
  size_t result = j__malloc_size((const void *)v13);
  if (!v20) {
    goto LABEL_21;
  }
  if (result - v21 != 0x8000000000000000 || v20 != -1)
  {
    uint64_t v23 = *(void *)(v6 + 24);
    *(void *)(v13 + 16) = (uint64_t)(result - v21) / v20;
    *(void *)(v13 + 24) = v23;
    *(void *)(v13 + 32) = 0;
    if (v23 >= 1) {
      sub_21CAB50DC(v13 + 16, v13 + v21, (void *)(v6 + 16), v6 + v21);
    }
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
  return result;
}

void sub_21CAB4EF4(uint64_t a1, unint64_t a2, void *a3, unint64_t a4)
{
  uint64_t v4 = a3[2];
  uint64_t v5 = *a3 - v4;
  if (__OFSUB__(*a3, v4))
  {
    __break(1u);
    goto LABEL_32;
  }
  uint64_t v8 = a3[1];
  uint64_t v9 = *(void *)(sub_21CA57E34(&qword_267C95818) - 8);
  if (v5 < v8)
  {
    uint64_t v10 = v8 - v5;
    if (!__OFSUB__(v8, v5))
    {
      uint64_t v11 = v5;
      unint64_t v12 = a4;
      goto LABEL_6;
    }
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  unint64_t v12 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = v8;
LABEL_6:
  BOOL v13 = v5 < v8;
  BOOL v14 = v10 != 0;
  BOOL v15 = v13 && v14;
  if (v13 && v14) {
    unint64_t v16 = v12;
  }
  else {
    unint64_t v16 = 0;
  }
  if (v13 && v14) {
    uint64_t v17 = v10;
  }
  else {
    uint64_t v17 = 0;
  }
  if (v11 < 1)
  {
    uint64_t v11 = 0;
    goto LABEL_20;
  }
  if (!a4)
  {
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  unint64_t v18 = a4 + *(void *)(v9 + 72) * v4;
  if (v18 > a2 || v18 + *(void *)(*(void *)(sub_21CA57E34(&qword_267C95818) - 8) + 72) * v11 <= a2)
  {
    sub_21CA57E34(&qword_267C95818);
    swift_arrayInitWithTakeFrontToBack();
  }
  else if (v18 != a2)
  {
    swift_arrayInitWithTakeBackToFront();
  }
LABEL_20:
  if (!v15 || v17 <= 0) {
    return;
  }
  if (!v16)
  {
LABEL_34:
    __break(1u);
    return;
  }
  uint64_t v19 = *(void *)(*(void *)(sub_21CA57E34(&qword_267C95818) - 8) + 72);
  unint64_t v20 = a2 + v19 * v11;
  unint64_t v21 = v16 + v19 * v17;
  if (v20 < v16 || v20 >= v21)
  {
    swift_arrayInitWithTakeFrontToBack();
  }
  else if (v20 != v16)
  {
    swift_arrayInitWithTakeBackToFront();
  }
}

uint64_t sub_21CAB50DC(uint64_t a1, unint64_t a2, void *a3, unint64_t a4)
{
  uint64_t v4 = a3[2];
  uint64_t v5 = *a3 - v4;
  if (__OFSUB__(*a3, v4))
  {
    __break(1u);
    goto LABEL_26;
  }
  uint64_t v8 = a3[1];
  uint64_t v9 = sub_21CA57E34(&qword_267C95818);
  uint64_t v12 = *(void *)(v9 - 8);
  uint64_t result = v9 - 8;
  uint64_t v11 = v12;
  if (v5 >= v8)
  {
    unint64_t v15 = 0;
    uint64_t v13 = 0;
    uint64_t v14 = v8;
    if (v8 < 1) {
      goto LABEL_5;
    }
    goto LABEL_7;
  }
  uint64_t v13 = v8 - v5;
  if (__OFSUB__(v8, v5))
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  uint64_t v14 = v5;
  unint64_t v15 = a4;
  if (v5 < 1)
  {
LABEL_5:
    uint64_t v14 = 0;
    goto LABEL_13;
  }
LABEL_7:
  if (!a4)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  unint64_t v16 = a4 + *(void *)(v11 + 72) * v4;
  uint64_t v17 = *(void *)(*(void *)(sub_21CA57E34(&qword_267C95818) - 8) + 72) * v14;
  unint64_t v18 = a2 + v17;
  unint64_t v19 = v16 + v17;
  if (v16 < v18 && v19 > a2) {
    goto LABEL_29;
  }
  uint64_t result = swift_arrayInitWithCopy();
LABEL_13:
  if (v5 >= v8 || v13 < 1) {
    return result;
  }
  if (!v15)
  {
LABEL_28:
    __break(1u);
LABEL_29:
    uint64_t result = sub_21CB88D50();
    __break(1u);
    return result;
  }
  uint64_t v22 = *(void *)(*(void *)(sub_21CA57E34(&qword_267C95818) - 8) + 72);
  unint64_t v23 = a2 + v22 * v14;
  uint64_t v24 = v22 * v13;
  unint64_t v25 = v23 + v24;
  unint64_t v26 = v15 + v24;
  if (v25 > v15 && v23 < v26) {
    goto LABEL_29;
  }
  return swift_arrayInitWithCopy();
}

uint64_t sub_21CAB52C4(uint64_t a1, unint64_t a2, void *a3, unint64_t a4)
{
  uint64_t v4 = a3[2];
  uint64_t v5 = *a3 - v4;
  if (__OFSUB__(*a3, v4))
  {
    __break(1u);
    goto LABEL_26;
  }
  uint64_t v8 = a3[1];
  uint64_t v9 = sub_21CA57E34(&qword_267C95818);
  uint64_t v12 = *(void *)(v9 - 8);
  uint64_t result = v9 - 8;
  uint64_t v11 = v12;
  if (v5 >= v8)
  {
    unint64_t v15 = 0;
    uint64_t v13 = 0;
    uint64_t v14 = v8;
    if (v8 < 1) {
      goto LABEL_14;
    }
    goto LABEL_7;
  }
  uint64_t v13 = v8 - v5;
  if (__OFSUB__(v8, v5))
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  uint64_t v14 = v5;
  unint64_t v15 = a4;
  if (v5 < 1) {
    goto LABEL_14;
  }
LABEL_7:
  if (!a4)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  unint64_t v16 = a4 + *(void *)(v11 + 72) * v4;
  uint64_t v17 = *(void *)(*(void *)(sub_21CA57E34(&qword_267C95818) - 8) + 72);
  unint64_t v18 = a2 + v17 * v4;
  uint64_t v19 = v17 * v14;
  unint64_t v20 = v18 + v19;
  unint64_t v21 = v16 + v19;
  if (v16 < v20 && v18 < v21) {
    goto LABEL_29;
  }
  uint64_t result = swift_arrayInitWithCopy();
LABEL_14:
  if (v5 < v8 && v13 >= 1)
  {
    if (v15)
    {
      uint64_t v24 = *(void *)(*(void *)(sub_21CA57E34(&qword_267C95818) - 8) + 72) * v13;
      unint64_t v25 = a2 + v24;
      unint64_t v26 = v15 + v24;
      if (v25 <= v15 || v26 <= a2) {
        return swift_arrayInitWithCopy();
      }
LABEL_29:
      uint64_t result = sub_21CB88D50();
      __break(1u);
      return result;
    }
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  return result;
}

uint64_t sub_21CAB54A8()
{
  uint64_t v1 = *v0;
  uint64_t v2 = sub_21CA57E34(&qword_267C95818);
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = *(unsigned __int8 *)(*(void *)(v2 - 8) + 80);
  sub_21CA57E34(&qword_267C95910);
  uint64_t v5 = swift_allocObject();
  long long v6 = *(_OWORD *)(v1 + 24);
  *(void *)(v5 + 16) = v3;
  *(_OWORD *)(v5 + 24) = v6;
  if ((uint64_t)v6 >= 1) {
    sub_21CAB52C4(v5 + 16, v5 + ((v4 + 40) & ~v4), (void *)(v1 + 16), v1 + ((v4 + 40) & ~v4));
  }
  uint64_t result = swift_release();
  *uint64_t v0 = v5;
  return result;
}

uint64_t sub_21CAB559C(uint64_t a1, uint64_t a2)
{
  uint64_t v8 = a2;
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2)
  {
    uint64_t v3 = (uint64_t *)(a1 + 40);
    do
    {
      uint64_t v4 = *(v3 - 1);
      uint64_t v5 = *v3;
      swift_bridgeObjectRetain();
      sub_21CA589D4(&v7, v4, v5);
      swift_bridgeObjectRelease();
      v3 += 2;
      --v2;
    }
    while (v2);
    return v8;
  }
  return a2;
}

uint64_t sub_21CAB561C(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_21CAB5628()
{
  swift_weakDestroy();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_21CAB5660()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 67, 7);
}

uint64_t sub_21CAB56B0(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = v1[7];
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  void *v10 = v2;
  v10[1] = sub_21CA65B10;
  return sub_21CAAABF8(a1, v4, v5, v6, v7, v8, v9);
}

uint64_t sub_21CAB57B4()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 64))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

  return MEMORY[0x270FA0238](v0, 83, 7);
}

uint64_t sub_21CAB5810(uint64_t a1)
{
  uint64_t v4 = v1[3];
  uint64_t v12 = v1[2];
  uint64_t v5 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v7 = v1[6];
  uint64_t v8 = v1[7];
  uint64_t v9 = v1[8];
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  void *v10 = v2;
  v10[1] = sub_21CA65B10;
  return sub_21CAA9394(a1, v12, v4, v5, v6, v7, v8, v9);
}

uint64_t sub_21CAB5910()
{
  return sub_21CAB6634(&qword_267C957D0, &qword_267C957F0);
}

uint64_t sub_21CAB5924(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_21CA57E34(&qword_267C957D0) - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v1 + 16);
  uint64_t v7 = *(void *)(v1 + 24);
  uint64_t v8 = v1 + v5;
  uint64_t v9 = *(void *)(v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  void *v10 = v2;
  v10[1] = sub_21CA65B10;
  return sub_21CAA3A8C(a1, v6, v7, v8, v9);
}

void sub_21CAB5A4C()
{
  sub_21CAAF8CC(v0);
}

unint64_t sub_21CAB5A54(unint64_t result)
{
  if ((result >> 62) <= 1)
  {
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_21CAB5AB8()
{
  uint64_t v1 = sub_21CA57E34(&qword_267C95868);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v19 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v3 = (v19 + 40) & ~v19;
  uint64_t v4 = *(void *)(v2 + 64);
  uint64_t v16 = sub_21CA57E34(&qword_267C95860);
  uint64_t v5 = *(void *)(v16 - 8);
  uint64_t v18 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v6 = (v3 + v4 + v18) & ~v18;
  uint64_t v7 = *(void *)(v5 + 64);
  uint64_t v8 = *(void *)(sub_21CA57E34(&qword_267C95858) - 8);
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = (v6 + v7 + v9) & ~v9;
  uint64_t v17 = *(void *)(v8 + 64);
  swift_unknownObjectRelease();
  swift_release();
  uint64_t v11 = v0 + v3;
  uint64_t v12 = sub_21CA57E34(&qword_267C95890);
  uint64_t v13 = (void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8);
  unint64_t v15 = *v13;
  (*v13)(v11, v12);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v0 + v6, v16);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v0 + v10, 1, v1))
  {
    v15(v0 + v10, v12);
    swift_bridgeObjectRelease();
  }

  return MEMORY[0x270FA0238](v0, v10 + v17, v19 | v18 | v9 | 7);
}

uint64_t sub_21CAB5D18(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_21CA57E34(&qword_267C95868) - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v4 + 64);
  uint64_t v7 = *(void *)(sub_21CA57E34(&qword_267C95860) - 8);
  unint64_t v8 = (v5 + v6 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = *(void *)(v7 + 64);
  uint64_t v10 = *(unsigned __int8 *)(*(void *)(sub_21CA57E34(&qword_267C95858) - 8) + 80);
  unint64_t v11 = v8 + v9 + v10;
  uint64_t v12 = *(void *)(v1 + 32);
  uint64_t v13 = v1 + v5;
  uint64_t v14 = v1 + v8;
  uint64_t v15 = v1 + (v11 & ~v10);
  uint64_t v16 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v16;
  *uint64_t v16 = v2;
  v16[5] = v14;
  v16[6] = v15;
  v16[3] = v12;
  v16[4] = v13;
  v16[1] = sub_21CA73F2C;
  v16[2] = a1;
  return MEMORY[0x270FA2498](sub_21CAAFF08, 0, 0);
}

uint64_t sub_21CAB5EDC(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = v2[2];
  uint64_t v7 = v2[3];
  uint64_t v9 = v2[4];
  uint64_t v8 = v2[5];
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v10;
  void *v10 = v3;
  v10[1] = sub_21CA65B10;
  return sub_21CAB0108(a1, a2, v6, v7, v9, v8);
}

uint64_t sub_21CAB5FA8(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_21CA57E34(&qword_267C95868) - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v1 + 16);
  uint64_t v7 = *(void *)(v1 + 24);
  uint64_t v8 = v1 + v5;
  uint64_t v9 = *(void *)(v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  void *v10 = v2;
  v10[1] = sub_21CA65B10;
  return sub_21CAB23D4(a1, v6, v7, v8, v9);
}

uint64_t sub_21CAB60D0()
{
  uint64_t v1 = sub_21CA57E34(&qword_267C95860);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();

  return MEMORY[0x270FA0238](v0, v6, v5);
}

uint64_t sub_21CAB61BC(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_21CA57E34(&qword_267C95860) - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v1 + 16);
  uint64_t v7 = *(void *)(v1 + 24);
  uint64_t v8 = v1 + v5;
  uint64_t v9 = *(void *)(v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  void *v10 = v2;
  v10[1] = sub_21CA65B10;
  return sub_21CAB1038(a1, v6, v7, v8, v9);
}

uint64_t sub_21CAB62E4(int a1, id a2, unint64_t a3)
{
  if (a3 >> 62 == 1)
  {

    swift_bridgeObjectRelease();
    return swift_release();
  }
  else if (!(a3 >> 62))
  {
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_21CAB6384()
{
  uint64_t v1 = *(void *)(sub_21CA57E34(&qword_267C95868) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 32) & ~v2;
  uint64_t v4 = v2 | 7;
  unint64_t v5 = ((*(void *)(v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  swift_unknownObjectRelease();
  uint64_t v6 = sub_21CA57E34(&qword_267C95890);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v0 + v3, v6);
  swift_bridgeObjectRelease();
  swift_release();

  return MEMORY[0x270FA0238](v0, v5, v4);
}

uint64_t sub_21CAB6498(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_21CA57E34(&qword_267C95868) - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v1 + 16);
  uint64_t v7 = *(void *)(v1 + 24);
  uint64_t v8 = v1 + v5;
  uint64_t v9 = *(void *)(v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  void *v10 = v2;
  v10[1] = sub_21CA73F2C;
  return sub_21CAB23D4(a1, v6, v7, v8, v9);
}

unint64_t sub_21CAB65C0(unint64_t result)
{
  if ((result >> 62) <= 1)
  {
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_21CAB6620()
{
  return sub_21CAB6634(&qword_267C95988, &qword_267C95990);
}

uint64_t sub_21CAB6634(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = *(void *)(sub_21CA57E34(a1) - 8);
  uint64_t v5 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = (v5 + 32) & ~v5;
  uint64_t v7 = *(void *)(v4 + 64);
  swift_unknownObjectRelease();
  uint64_t v8 = sub_21CA57E34(a2);
  uint64_t v9 = *(void *)(v8 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v2 + v6, 1, v8)) {
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v2 + v6, v8);
  }
  swift_release();

  return MEMORY[0x270FA0238](v2, ((v7 + v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 8, v5 | 7);
}

uint64_t sub_21CAB6774(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_21CA57E34(&qword_267C95988) - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v1 + 16);
  uint64_t v7 = *(void *)(v1 + 24);
  uint64_t v8 = v1 + v5;
  uint64_t v9 = *(void *)(v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  void *v10 = v2;
  v10[1] = sub_21CA65B10;
  return sub_21CAA1A18(a1, v6, v7, v8, v9);
}

uint64_t sub_21CAB689C(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_21CAB68E0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_21CA57E34(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

uint64_t sub_21CAB6944()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_21CAB698C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_21CA65B10;
  return sub_21CA9FF1C(a1, v4, v5, v7, v6);
}

uint64_t sub_21CAB6A4C@<X0>(void *a1@<X8>)
{
  return sub_21CA6548C(a1);
}

uint64_t sub_21CAB6A64()
{
  swift_bridgeObjectRelease();
  swift_release();

  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t *sub_21CAB6AA4(uint64_t *a1)
{
  sub_21CA5E3D0(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9], a1[10], a1[11], a1[12], a1[13], a1[14], a1[15], a1[16], a1[17], a1[18],
    a1[19],
    a1[20],
    a1[21]);
  return a1;
}

uint64_t FMFContact.storeUUID.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FMFContact.displayName.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FMFContact.storeHasImage.getter()
{
  return *(unsigned __int8 *)(v0 + 32);
}

uint64_t FMFContact.shortName.getter()
{
  uint64_t v1 = *(void *)(v0 + 40);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_21CAB6BC0(unsigned __int8 *a1, char *a2)
{
  return sub_21CA8085C(*a1, *a2);
}

uint64_t sub_21CAB6BCC()
{
  return sub_21CB89090();
}

uint64_t sub_21CAB6CC0()
{
  sub_21CB88380();

  return swift_bridgeObjectRelease();
}

uint64_t sub_21CAB6D9C()
{
  return sub_21CB89090();
}

uint64_t sub_21CAB6E8C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_21CAB7B48();
  *a1 = result;
  return result;
}

void sub_21CAB6EBC(uint64_t a1@<X8>)
{
  unint64_t v2 = 0xE900000000000044;
  uint64_t v3 = 0x49555565726F7473;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xEB00000000656D61;
      uint64_t v3 = 0x4E79616C70736964;
      goto LABEL_3;
    case 2:
      strcpy((char *)a1, "storeHasImage");
      *(_WORD *)(a1 + 14) = -4864;
      break;
    case 3:
      *(void *)a1 = 0x6D614E74726F6873;
      *(void *)(a1 + 8) = 0xE900000000000065;
      break;
    default:
LABEL_3:
      *(void *)a1 = v3;
      *(void *)(a1 + 8) = v2;
      break;
  }
}

uint64_t sub_21CAB6F70()
{
  uint64_t result = 0x49555565726F7473;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x4E79616C70736964;
      break;
    case 2:
      uint64_t result = 0x73614865726F7473;
      break;
    case 3:
      uint64_t result = 0x6D614E74726F6873;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_21CAB7018@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_21CAB7B48();
  *a1 = result;
  return result;
}

uint64_t sub_21CAB7040(uint64_t a1)
{
  unint64_t v2 = sub_21CAB7394();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_21CAB707C(uint64_t a1)
{
  unint64_t v2 = sub_21CAB7394();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t FMFContact.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_21CA57E34(&qword_267C959D0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21CA2B2CC(a1, a1[3]);
  sub_21CAB7394();
  sub_21CB890B0();
  if (v2) {
    return sub_21CA2B0D0((uint64_t)a1);
  }
  char v29 = 0;
  uint64_t v9 = sub_21CB88DE0();
  uint64_t v11 = v10;
  uint64_t v24 = v9;
  char v28 = 1;
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_21CB88DE0();
  uint64_t v14 = v13;
  uint64_t v22 = v12;
  char v27 = 2;
  swift_bridgeObjectRetain();
  uint64_t v23 = v14;
  int v25 = sub_21CB88DF0();
  char v26 = 3;
  uint64_t v15 = sub_21CB88DE0();
  uint64_t v18 = v17;
  v25 &= 1u;
  uint64_t v19 = v15;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v20 = v23;
  *(void *)a2 = v24;
  *(void *)(a2 + 8) = v11;
  *(void *)(a2 + 16) = v22;
  *(void *)(a2 + 24) = v20;
  *(unsigned char *)(a2 + 32) = v25;
  *(void *)(a2 + 40) = v19;
  *(void *)(a2 + 48) = v18;
  sub_21CA2B0D0((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

unint64_t sub_21CAB7394()
{
  unint64_t result = qword_267C959D8;
  if (!qword_267C959D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C959D8);
  }
  return result;
}

uint64_t FMFContact.encode(to:)(void *a1)
{
  uint64_t v4 = sub_21CA57E34(&qword_267C959E0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)(v1 + 16);
  v15[2] = *(void *)(v1 + 24);
  v15[3] = v8;
  int v16 = *(unsigned __int8 *)(v1 + 32);
  uint64_t v9 = *(void *)(v1 + 40);
  v15[0] = *(void *)(v1 + 48);
  v15[1] = v9;
  uint64_t v10 = a1[3];
  uint64_t v11 = a1;
  uint64_t v13 = v12;
  sub_21CA2B2CC(v11, v10);
  sub_21CAB7394();
  sub_21CB890C0();
  char v20 = 0;
  sub_21CB88E70();
  if (!v2)
  {
    char v19 = 1;
    sub_21CB88E70();
    char v18 = 2;
    sub_21CB88E80();
    char v17 = 3;
    sub_21CB88E70();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v13);
}

uint64_t sub_21CAB75D8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FMFContact.init(from:)(a1, a2);
}

uint64_t sub_21CAB75F0(void *a1)
{
  return FMFContact.encode(to:)(a1);
}

uint64_t _s7FMFCore10FMFContactV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 24);
  int v4 = *(unsigned __int8 *)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 40);
  uint64_t v6 = *(void *)(a1 + 48);
  uint64_t v7 = *(void *)(a2 + 16);
  uint64_t v8 = *(void *)(a2 + 24);
  int v9 = *(unsigned __int8 *)(a2 + 32);
  uint64_t v10 = *(void *)(a2 + 40);
  uint64_t v11 = *(void *)(a2 + 48);
  if (*(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8)
    || (char v12 = sub_21CB88F50(), result = 0, (v12 & 1) != 0))
  {
    if (v2 == v7 && v3 == v8)
    {
      if (v4 != v9) {
        return 0;
      }
    }
    else
    {
      char v14 = sub_21CB88F50();
      uint64_t result = 0;
      if (v14 & 1) == 0 || ((v4 ^ v9)) {
        return result;
      }
    }
    if (v5 == v10 && v6 == v11)
    {
      return 1;
    }
    else
    {
      return sub_21CB88F50();
    }
  }
  return result;
}

uint64_t destroy for FMFContact()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for FMFContact(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for FMFContact(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for FMFContact(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for FMFContact(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v6 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t storeEnumTagSinglePayload for FMFContact(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 56) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for FMFContact.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *__n128 result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x21CAB7A08);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FMFContact.CodingKeys()
{
  return &type metadata for FMFContact.CodingKeys;
}

unint64_t sub_21CAB7A44()
{
  unint64_t result = qword_267C959E8;
  if (!qword_267C959E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C959E8);
  }
  return result;
}

unint64_t sub_21CAB7A9C()
{
  unint64_t result = qword_267C959F0;
  if (!qword_267C959F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C959F0);
  }
  return result;
}

unint64_t sub_21CAB7AF4()
{
  unint64_t result = qword_267C959F8;
  if (!qword_267C959F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C959F8);
  }
  return result;
}

uint64_t sub_21CAB7B48()
{
  unint64_t v0 = sub_21CB88D70();
  swift_bridgeObjectRelease();
  if (v0 >= 4) {
    return 4;
  }
  else {
    return v0;
  }
}

uint64_t FMFFriend.personIdHash.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FMFFriend.pushIdentifiers.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FMFFriend.supportsProactiveLocations.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for FMFFriend() + 44));
}

uint64_t FMFFriend.supportsShallowOrLiveLocations.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for FMFFriend() + 48));
}

uint64_t FMFFriend.fallbackToLegacy.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for FMFFriend() + 52));
}

uint64_t FMFFriend.fallbackToLegacy.setter(char a1)
{
  uint64_t result = type metadata accessor for FMFFriend();
  *(unsigned char *)(v1 + *(int *)(result + 52)) = a1;
  return result;
}

uint64_t (*FMFFriend.fallbackToLegacy.modify())(void, double)
{
  return nullsub_1;
}

uint64_t FMFFriend.fallbackToLegacyAllowed.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for FMFFriend() + 56));
}

uint64_t FMFFriend.fallbackToLegacyAllowed.setter(char a1)
{
  uint64_t result = type metadata accessor for FMFFriend();
  *(unsigned char *)(v1 + *(int *)(result + 56)) = a1;
  return result;
}

uint64_t (*FMFFriend.fallbackToLegacyAllowed.modify())(void, double)
{
  return nullsub_1;
}

uint64_t FMFFriend.locationAlertsOnMe.getter()
{
  type metadata accessor for FMFFriend();

  return swift_bridgeObjectRetain();
}

uint64_t FMFFriend.isWaitingForShallowLocation.setter(char a1)
{
  uint64_t result = type metadata accessor for FMFFriend();
  *(unsigned char *)(v1 + *(int *)(result + 72)) = a1;
  return result;
}

uint64_t (*FMFFriend.isWaitingForShallowLocation.modify())(void, double)
{
  return nullsub_1;
}

uint64_t FMFFriend.properName.getter()
{
  uint64_t v1 = (void *)(v0 + *(int *)(type metadata accessor for FMFFriend() + 76));
  if (!v1[1]) {
    return 0;
  }
  uint64_t v2 = v1[2];
  unint64_t v3 = v1[3];
  uint64_t v4 = HIBYTE(v3) & 0xF;
  if ((v3 & 0x2000000000000000) == 0) {
    uint64_t v4 = v2 & 0xFFFFFFFFFFFFLL;
  }
  if (!v4) {
    return 0;
  }
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t FMFFriend.pendingUpdateReason.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for FMFFriend();
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 84));
  return result;
}

uint64_t FMFFriend.pendingUpdateReason.setter(char *a1)
{
  char v2 = *a1;
  uint64_t result = type metadata accessor for FMFFriend();
  *(unsigned char *)(v1 + *(int *)(result + 84)) = v2;
  return result;
}

uint64_t (*FMFFriend.pendingUpdateReason.modify())(void, double)
{
  return nullsub_1;
}

unint64_t sub_21CAB7F0C(char a1)
{
  unint64_t result = 0x696669746E656469;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x64496E6F73726570;
      break;
    case 2:
      unint64_t result = 0x48746361746E6F63;
      break;
    case 3:
      unint64_t result = 0x7078456572616873;
      break;
    case 4:
    case 9:
      unint64_t result = 0xD000000000000010;
      break;
    case 5:
      unint64_t result = 0x746F4E646574706FLL;
      break;
    case 6:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 7:
      unint64_t result = 0xD00000000000001ELL;
      break;
    case 8:
      unint64_t result = 0xD00000000000001BLL;
      break;
    case 10:
      unint64_t result = 0xD000000000000017;
      break;
    case 11:
      unint64_t result = 0x657469726F766166;
      break;
    case 12:
      unint64_t result = 0x6E6F697461636F6CLL;
      break;
    case 13:
      unint64_t result = 0x746361746E6F63;
      break;
    case 14:
      unint64_t result = 0xD000000000000012;
      break;
    case 15:
      unint64_t result = 0xD000000000000016;
      break;
    case 16:
      unint64_t result = 0x6E65644968737570;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_21CAB8158(char a1)
{
  unint64_t result = 0x696669746E656469;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x64496E6F73726570;
      break;
    case 2:
      unint64_t result = 0x48746361746E6F63;
      break;
    case 3:
      unint64_t result = 0x7078456572616873;
      break;
    case 4:
    case 9:
      unint64_t result = 0xD000000000000010;
      break;
    case 5:
      unint64_t result = 0x746F4E646574706FLL;
      break;
    case 6:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 7:
      unint64_t result = 0xD00000000000001ELL;
      break;
    case 8:
      unint64_t result = 0xD00000000000001BLL;
      break;
    case 10:
      unint64_t result = 0xD000000000000017;
      break;
    case 11:
      unint64_t result = 0x657469726F766166;
      break;
    case 12:
      unint64_t result = 0x6E6F697461636F6CLL;
      break;
    case 13:
      unint64_t result = 0x746361746E6F63;
      break;
    case 14:
      unint64_t result = 0xD000000000000012;
      break;
    case 15:
      unint64_t result = 0xD000000000000016;
      break;
    case 16:
      unint64_t result = 0x6E65644968737570;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_21CAB83A4(char *a1, char *a2)
{
  char v2 = *a2;
  unint64_t v3 = sub_21CAB7F0C(*a1);
  uint64_t v5 = v4;
  if (v3 == sub_21CAB7F0C(v2) && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = sub_21CB88F50();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_21CAB8430()
{
  char v1 = *v0;
  sub_21CB89050();
  sub_21CAB7F0C(v1);
  sub_21CB88380();
  swift_bridgeObjectRelease();
  return sub_21CB89090();
}

uint64_t sub_21CAB8494()
{
  sub_21CAB7F0C(*v0);
  sub_21CB88380();

  return swift_bridgeObjectRelease();
}

uint64_t sub_21CAB84E8()
{
  char v1 = *v0;
  sub_21CB89050();
  sub_21CAB7F0C(v1);
  sub_21CB88380();
  swift_bridgeObjectRelease();
  return sub_21CB89090();
}

uint64_t sub_21CAB8548@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_21CABFC44();
  *a1 = result;
  return result;
}

unint64_t sub_21CAB8578@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_21CAB7F0C(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_21CAB85A4()
{
  return sub_21CAB8158(*v0);
}

uint64_t sub_21CAB85AC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_21CABFC44();
  *a1 = result;
  return result;
}

void sub_21CAB85D4(unsigned char *a1@<X8>)
{
  *a1 = 17;
}

uint64_t sub_21CAB85E0(uint64_t a1)
{
  unint64_t v2 = sub_21CABD7A8();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_21CAB861C(uint64_t a1)
{
  unint64_t v2 = sub_21CABD7A8();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t FMFFriend.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v44 = a2;
  uint64_t v3 = sub_21CA57E34((uint64_t *)&unk_267C96EF0);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v45 = (char *)v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_21CA57E34((uint64_t *)&unk_267C951B0);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v47 = (char *)v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = sub_21CA57E34(&qword_267C95A00);
  uint64_t v46 = *(void *)(v48 - 8);
  MEMORY[0x270FA5388](v48);
  char v8 = (char *)v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for FMFFriend();
  uint64_t v10 = (int *)MEMORY[0x270FA5388](v9);
  char v12 = (void *)((char *)v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v13 = v10[13];
  *((unsigned char *)v12 + v13) = 0;
  uint64_t v14 = v10[14];
  *((unsigned char *)v12 + v14) = 2;
  uint64_t v15 = v10[18];
  *((unsigned char *)v12 + v15) = 1;
  *((unsigned char *)v12 + v10[21]) = 7;
  uint64_t v16 = a1[3];
  uint64_t v49 = a1;
  sub_21CA2B2CC(a1, v16);
  sub_21CABD7A8();
  char v17 = v50;
  sub_21CB890B0();
  if (v17) {
    return sub_21CA2B0D0((uint64_t)v49);
  }
  uint64_t v42 = v15;
  uint64_t v43 = v13;
  uint64_t v18 = v14;
  LOBYTE(v51) = 0;
  char v19 = v8;
  uint64_t v20 = (uint64_t)v12;
  *char v12 = sub_21CB88DE0();
  v12[1] = v21;
  LOBYTE(v51) = 1;
  uint64_t v22 = sub_21CB88DE0();
  uint64_t v50 = v19;
  v12[2] = v22;
  v12[3] = v23;
  sub_21CA57E34(&qword_267C95A10);
  char v58 = 2;
  sub_21CA4A500(&qword_267C95A18, &qword_267C95A10);
  sub_21CB88E20();
  v12[4] = v51;
  uint64_t v24 = sub_21CB87590();
  LOBYTE(v51) = 3;
  sub_21CABFC98(&qword_267C95660, MEMORY[0x263F07490]);
  v41[1] = 0;
  sub_21CB88E20();
  int v25 = (int *)v9;
  (*(void (**)(void, void, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(0, 0, 1, v24);
  sub_21CA26A4C(0, v20 + *(int *)(v9 + 32), (uint64_t *)&unk_267C951B0);
  LOBYTE(v51) = 5;
  char v26 = sub_21CB88DF0() & 1;
  uint64_t v28 = v42;
  uint64_t v27 = v43;
  *(unsigned char *)(v20 + v25[10]) = v26;
  LOBYTE(v51) = 6;
  *(unsigned char *)(v20 + v25[11]) = sub_21CB88DF0() & 1;
  LOBYTE(v51) = 7;
  *(unsigned char *)(v20 + v25[12]) = sub_21CB88DF0() & 1;
  LOBYTE(v51) = 8;
  *(unsigned char *)(v20 + v28) = sub_21CB88DF0() & 1;
  LOBYTE(v51) = 9;
  *(unsigned char *)(v20 + v27) = sub_21CB88DF0() & 1;
  LOBYTE(v51) = 10;
  *(unsigned char *)(v20 + v18) = sub_21CB88DF0() & 1;
  LOBYTE(v51) = 11;
  *(void *)(v20 + v25[15]) = sub_21CB88E10();
  uint64_t v29 = type metadata accessor for FMFLocation();
  LOBYTE(v51) = 12;
  sub_21CABFC98(&qword_267C94ED0, (void (*)(uint64_t))type metadata accessor for FMFLocation);
  uint64_t v30 = (uint64_t)v45;
  sub_21CB88E20();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v30, 0, 1, v29);
  sub_21CA26A4C(v30, v20 + v25[20], (uint64_t *)&unk_267C96EF0);
  char v58 = 13;
  sub_21CA668A8();
  sub_21CB88E20();
  uint64_t v31 = v52;
  uint64_t v32 = v53;
  uint64_t v33 = v54;
  uint64_t v34 = v55;
  uint64_t v35 = v56;
  uint64_t v36 = v57;
  unint64_t v37 = (uint64_t *)(v20 + v25[19]);
  *unint64_t v37 = v51;
  v37[1] = v31;
  v37[2] = v32;
  v37[3] = v33;
  v37[4] = v34;
  v37[5] = v35;
  v37[6] = v36;
  LOBYTE(v51) = 4;
  *(void *)(v20 + v25[9]) = sub_21CB88E10();
  sub_21CA57E34(&qword_267C94F08);
  char v58 = 14;
  sub_21CABD99C((unint64_t *)&qword_267C94F10, (unint64_t *)&qword_267C94F18);
  sub_21CB88E20();
  *(void *)(v20 + v25[17]) = v51;
  char v58 = 15;
  sub_21CB88E20();
  *(void *)(v20 + v25[16]) = v51;
  sub_21CA57E34(&qword_267C94E60);
  char v58 = 16;
  sub_21CA4A500((unint64_t *)&qword_267C94E68, &qword_267C94E60);
  sub_21CB88E20();
  uint64_t v38 = v51;
  uint64_t v39 = v44;
  (*(void (**)(char *, uint64_t))(v46 + 8))(v50, v48);
  *(void *)(v20 + 40) = v38;
  sub_21CA57118(v20, v39, (uint64_t (*)(void))type metadata accessor for FMFFriend);
  sub_21CA2B0D0((uint64_t)v49);
  return sub_21CA58218(v20, (uint64_t (*)(void))type metadata accessor for FMFFriend);
}

uint64_t FMFFriend.init(friend:updatedLocation:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v6 = sub_21CA57E34((uint64_t *)&unk_267C96EF0);
  MEMORY[0x270FA5388](v6 - 8);
  char v8 = (char *)v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_21CA57E34(&qword_267C95040);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_21CA57E34(&qword_267C96F10);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = (char *)v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21CA57118(a1, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for FMFFriend);
  uint64_t v15 = type metadata accessor for FMFFriend();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v14, 0, 1, v15);
  uint64_t v16 = type metadata accessor for FMFIntermediateFriend();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v11, 1, 1, v16);
  unint64_t v22 = 0;
  char v23 = 1;
  uint64_t v20 = 0;
  char v21 = 1;
  sub_21CA24E80(a2, (uint64_t)v8, (uint64_t *)&unk_267C96EF0);
  uint64_t v19 = 0;
  memset(v18, 0, sizeof(v18));
  sub_21CA5572C((uint64_t)v14, (uint64_t)v11, &v22, (uint64_t)&v20, (uint64_t)v8, 0, 1, (uint64_t *)v18, a3, 0, 0, 2u, 2u, 2);
  sub_21CA1B88C(a2, (uint64_t *)&unk_267C96EF0);
  return sub_21CA58218(a1, (uint64_t (*)(void))type metadata accessor for FMFFriend);
}

Swift::Bool __swiftcall FMFFriend.isBlocked()()
{
  uint64_t v49 = sub_21CB87280();
  uint64_t v1 = *(void *)(v49 - 8);
  LOBYTE(v2) = MEMORY[0x270FA5388](v49);
  uint64_t v4 = (char *)&v46 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *(void *)(v0 + 32);
  uint64_t v6 = *(void *)(v5 + 16);
  unint64_t v7 = MEMORY[0x263F8EE78];
  if (!v6)
  {
LABEL_29:
    if (v7 >> 62) {
      goto LABEL_52;
    }
    uint64_t v39 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v39) {
      goto LABEL_31;
    }
LABEL_45:
    swift_bridgeObjectRelease();
    LOBYTE(v2) = v39;
    return v2;
  }
  unint64_t v55 = MEMORY[0x263F8EE78];
  swift_bridgeObjectRetain();
  unint64_t v7 = (unint64_t)&v55;
  sub_21CB88C20();
  int64_t v8 = sub_21CA44C54(v5);
  int v10 = v9;
  int v12 = v11 & 1;
  uint64_t v50 = *MEMORY[0x263EFFB08];
  uint64_t v51 = v5 + 56;
  uint64_t v47 = v5;
  uint64_t v48 = (void (**)(char *, uint64_t))(v1 + 8);
  uint64_t v46 = v4;
  while ((v8 & 0x8000000000000000) == 0 && v8 < 1 << *(unsigned char *)(v5 + 32))
  {
    if (((*(void *)(v51 + (((unint64_t)v8 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
      goto LABEL_47;
    }
    if (*(_DWORD *)(v5 + 36) != v10) {
      goto LABEL_48;
    }
    int v52 = v12;
    uint64_t v19 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v8);
    uint64_t v20 = *v19;
    uint64_t v21 = v19[1];
    uint64_t v22 = qword_267C94968;
    swift_bridgeObjectRetain();
    if (v22 != -1) {
      swift_once();
    }
    char v23 = (void *)qword_267CA52B8;
    uint64_t v24 = (void *)sub_21CB882C0();
    LODWORD(v23) = objc_msgSend(v23, sel_evaluateWithObject_, v24);

    if (v23)
    {
      uint64_t v14 = (void *)sub_21CB882C0();
      uint64_t v2 = CMFItemCreateWithEmailAddress();
      if (!v2) {
        goto LABEL_57;
      }
      swift_bridgeObjectRelease();
      goto LABEL_7;
    }
    sub_21CB87240();
    sub_21CB87250();
    uint64_t v53 = v20;
    uint64_t v54 = v21;
    sub_21CA4D63C();
    sub_21CB889F0();
    if (v25)
    {
      swift_bridgeObjectRetain();
      uint64_t v30 = v20;
      unint64_t v32 = v21;
    }
    else
    {
      uint64_t v53 = v20;
      uint64_t v54 = v21;
      unint64_t v7 = sub_21CB88390();
      uint64_t v26 = sub_21CB883A0();
      unint64_t v27 = v26 - v7;
      if (__OFSUB__(v26, v7)) {
        goto LABEL_49;
      }
      uint64_t v28 = (void *)sub_21CB882C0();
      id v29 = objc_msgSend(v28, sel_substringWithRange_, v7, v27);

      uint64_t v30 = sub_21CB882F0();
      unint64_t v32 = v31;
    }
    uint64_t v33 = HIBYTE(v32) & 0xF;
    if ((v32 & 0x2000000000000000) == 0) {
      uint64_t v33 = v30 & 0xFFFFFFFFFFFFLL;
    }
    if (v33)
    {
      sub_21CB34170();
      uint64_t v34 = (void *)sub_21CB882C0();
      uint64_t v35 = (void *)sub_21CB882C0();
      swift_bridgeObjectRelease();
      uint64_t v36 = (void *)CFPhoneNumberCreate();

      if (!v36)
      {
        uint64_t v4 = v46;
        (*v48)(v46, v49);
        uint64_t v5 = v47;
        goto LABEL_5;
      }
      id v37 = v36;
      uint64_t String = CFPhoneNumberCreateString();
      uint64_t v4 = v46;
      uint64_t v5 = v47;
      if (!String)
      {
        (*v48)(v46, v49);

        goto LABEL_5;
      }
      uint64_t v13 = (void *)String;
      swift_bridgeObjectRelease();
      sub_21CB882F0();
    }
    (*v48)(v4, v49);
LABEL_5:
    uint64_t v14 = (void *)sub_21CB882C0();
    swift_bridgeObjectRelease();
    uint64_t v15 = (void *)CFPhoneNumberCreate();
    uint64_t v2 = CMFItemCreateWithPhoneNumber();
    if (!v2) {
      goto LABEL_56;
    }
    swift_bridgeObjectRelease();

LABEL_7:
    unint64_t v7 = (unint64_t)&v55;
    sub_21CB88C00();
    sub_21CB88C30();
    sub_21CB88C40();
    sub_21CB88C10();
    int64_t v16 = sub_21CA4441C(v8, v10, v52 & 1, v5);
    int64_t v8 = v16;
    int v10 = v17;
    int v12 = v18 & 1;
    if (!--v6)
    {
      sub_21CAB561C(v16, v17, v12);
      LOBYTE(v2) = swift_bridgeObjectRelease();
      unint64_t v7 = v55;
      goto LABEL_29;
    }
  }
  __break(1u);
LABEL_47:
  __break(1u);
LABEL_48:
  __break(1u);
LABEL_49:
  __break(1u);
LABEL_50:
  __break(1u);
LABEL_51:
  __break(1u);
LABEL_52:
  swift_bridgeObjectRetain();
  uint64_t v39 = sub_21CB88D10();
  LOBYTE(v2) = swift_bridgeObjectRelease();
  if (!v39) {
    goto LABEL_45;
  }
LABEL_31:
  if ((v7 & 0xC000000000000001) != 0)
  {
    MEMORY[0x21D4B5CA0](0, v7);
LABEL_34:
    int IsItemBlocked = CMFBlockListIsItemBlocked();
    swift_unknownObjectRelease();
    if (IsItemBlocked)
    {
      LOBYTE(v39) = 1;
    }
    else
    {
      uint64_t v41 = 0;
      uint64_t v42 = v39 - 1;
      while (1)
      {
        LOBYTE(v39) = v42 != v41;
        if (v42 == v41) {
          break;
        }
        unint64_t v43 = v41 + 1;
        if ((v7 & 0xC000000000000001) != 0)
        {
          MEMORY[0x21D4B5CA0](v41 + 1, v7);
          if (__OFADD__(v43, 1)) {
            goto LABEL_50;
          }
        }
        else
        {
          if (v43 >= *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            goto LABEL_51;
          }
          swift_unknownObjectRetain();
          if (__OFADD__(v43, 1)) {
            goto LABEL_50;
          }
        }
        int v44 = CMFBlockListIsItemBlocked();
        swift_unknownObjectRelease();
        ++v41;
        if (v44) {
          goto LABEL_45;
        }
      }
    }
    goto LABEL_45;
  }
  if (*(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    swift_unknownObjectRetain();
    goto LABEL_34;
  }
  __break(1u);
LABEL_56:
  __break(1u);
LABEL_57:
  __break(1u);
  return v2;
}

uint64_t FMFFriend.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_21CA57E34(&qword_267C95A28);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  int64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21CA2B2CC(a1, a1[3]);
  sub_21CABD7A8();
  sub_21CB890C0();
  LOBYTE(v11) = 0;
  sub_21CB88E70();
  if (!v2)
  {
    long long v11 = *(_OWORD *)(v3 + 16);
    char v12 = 1;
    sub_21CA57E34((uint64_t *)&unk_267C95220);
    sub_21CA4A500((unint64_t *)&qword_267C94A70, (uint64_t *)&unk_267C95220);
    sub_21CB88EB0();
    *(void *)&long long v11 = *(void *)(v3 + 32);
    char v12 = 2;
    sub_21CA57E34(&qword_267C95A10);
    sub_21CA4A500(&qword_267C95A30, &qword_267C95A10);
    sub_21CB88EB0();
    int v9 = (int *)type metadata accessor for FMFFriend();
    LOBYTE(v11) = 3;
    sub_21CA57E34((uint64_t *)&unk_267C951B0);
    sub_21CA4A654();
    sub_21CB88EB0();
    LOBYTE(v11) = *(unsigned char *)(v3 + v9[10]);
    char v12 = 5;
    sub_21CA57E34(&qword_267C95158);
    sub_21CA4A500(&qword_267C95160, &qword_267C95158);
    sub_21CB88EB0();
    LOBYTE(v11) = *(unsigned char *)(v3 + v9[11]);
    char v12 = 6;
    sub_21CB88EB0();
    LOBYTE(v11) = *(unsigned char *)(v3 + v9[12]);
    char v12 = 7;
    sub_21CB88EB0();
    LOBYTE(v11) = 8;
    sub_21CB88E80();
    LOBYTE(v11) = 9;
    sub_21CB88E80();
    LOBYTE(v11) = *(unsigned char *)(v3 + v9[14]);
    char v12 = 10;
    sub_21CB88EB0();
    LOBYTE(v11) = 11;
    sub_21CB88EA0();
    LOBYTE(v11) = 4;
    sub_21CB88EA0();
    LOBYTE(v11) = 12;
    sub_21CA57E34((uint64_t *)&unk_267C96EF0);
    sub_21CABD84C();
    sub_21CB88EB0();
    *(void *)&long long v11 = *(void *)(v3 + v9[17]);
    char v12 = 14;
    sub_21CA57E34(&qword_267C95A48);
    sub_21CABD8F0();
    sub_21CB88EB0();
    *(void *)&long long v11 = *(void *)(v3 + v9[16]);
    char v12 = 15;
    sub_21CB88EB0();
    *(void *)&long long v11 = *(void *)(v3 + 40);
    char v12 = 16;
    sub_21CA57E34(&qword_267C95130);
    sub_21CA4A5B4();
    sub_21CB88EB0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t FMFFriend.hash(into:)()
{
  swift_bridgeObjectRetain();
  sub_21CB88380();

  return swift_bridgeObjectRelease();
}

uint64_t FMFFriend.debugDescription.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_21CA57E34((uint64_t *)&unk_267C951B0);
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)&v57 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_21CA57E34((uint64_t *)&unk_267C96EF0);
  uint64_t v6 = MEMORY[0x270FA5388](v5);
  int64_t v8 = (char *)&v57 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  int v10 = (char *)&v57 - v9;
  uint64_t v67 = (int *)type metadata accessor for FMFFriend();
  uint64_t v61 = v1 + v67[20];
  sub_21CA24E80(v61, (uint64_t)v10, (uint64_t *)&unk_267C96EF0);
  uint64_t v11 = type metadata accessor for FMFLocation();
  int v12 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48))(v10, 1, v11);
  BOOL v65 = v4;
  uint64_t v66 = v2;
  BOOL v62 = v8;
  uint64_t v63 = v5;
  if (v12 == 1)
  {
    sub_21CA1B88C((uint64_t)v10, (uint64_t *)&unk_267C96EF0);
LABEL_9:
    uint64_t v58 = 0;
    unint64_t v59 = 0xE000000000000000;
    goto LABEL_10;
  }
  sub_21CA26A4C((uint64_t)&v10[*(int *)(v11 + 44)], (uint64_t)v70, &qword_267C951F0);
  sub_21CA26A4C((uint64_t)v70, (uint64_t)v71, &qword_267C951F0);
  if (sub_21CA7CDBC((uint64_t)v71) == 1)
  {
    sub_21CA58218((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for FMFLocation);
    goto LABEL_9;
  }
  uint64_t v14 = v71[40];
  unint64_t v13 = v71[41];
  swift_bridgeObjectRetain();
  sub_21CA58218((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for FMFLocation);
  if (!v13) {
    goto LABEL_9;
  }
  v15._countAndFlagsBits = sub_21CB88320();
  FMFDefaultLabel.init(rawValue:)(v15);
  if (v69 != 5)
  {
    uint64_t v14 = FMFDefaultLabel.localizedLabel.getter();
    unint64_t v17 = v16;
    swift_bridgeObjectRelease();
    unint64_t v13 = v17;
  }
  uint64_t v58 = v14;
  unint64_t v59 = v13;
LABEL_10:
  v71[0] = 0;
  v71[1] = 0xE000000000000000;
  sub_21CB88B70();
  swift_bridgeObjectRelease();
  unint64_t v64 = 0xD000000000000018;
  v71[0] = 0xD000000000000018;
  v71[1] = 0x800000021CB95450;
  swift_bridgeObjectRetain();
  sub_21CB883D0();
  swift_bridgeObjectRelease();
  sub_21CB883D0();
  uint64_t v18 = v1;
  uint64_t v19 = v71[0];
  uint64_t v20 = v71[1];
  v71[0] = 0;
  v71[1] = 0xE000000000000000;
  sub_21CB88B70();
  swift_bridgeObjectRelease();
  strcpy((char *)v71, "personIdHash: ");
  HIBYTE(v71[1]) = -18;
  uint64_t v21 = *(void *)(v18 + 24);
  v70[0] = *(void *)(v18 + 16);
  v70[1] = v21;
  swift_bridgeObjectRetain();
  sub_21CA57E34((uint64_t *)&unk_267C95220);
  sub_21CB88310();
  sub_21CB883D0();
  swift_bridgeObjectRelease();
  sub_21CB883D0();
  v71[0] = v19;
  v71[1] = v20;
  swift_bridgeObjectRetain();
  sub_21CB883D0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v22 = v71[0];
  uint64_t v23 = v71[1];
  v71[0] = 0;
  v71[1] = 0xE000000000000000;
  sub_21CB88B70();
  swift_bridgeObjectRelease();
  v71[0] = 0xD00000000000001CLL;
  v71[1] = 0x800000021CB95470;
  uint64_t v24 = v67;
  LOBYTE(v70[0]) = *(unsigned char *)(v18 + v67[11]);
  uint64_t v68 = sub_21CA57E34(&qword_267C95158);
  sub_21CB88310();
  sub_21CB883D0();
  swift_bridgeObjectRelease();
  sub_21CB883D0();
  v71[0] = v22;
  v71[1] = v23;
  swift_bridgeObjectRetain();
  sub_21CB883D0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v25 = v71[0];
  uint64_t v26 = v71[1];
  v71[0] = 0;
  v71[1] = 0xE000000000000000;
  sub_21CB88B70();
  swift_bridgeObjectRelease();
  v71[0] = 0xD000000000000020;
  v71[1] = 0x800000021CB95490;
  LOBYTE(v70[0]) = *(unsigned char *)(v18 + v24[12]);
  sub_21CB88310();
  sub_21CB883D0();
  swift_bridgeObjectRelease();
  sub_21CB883D0();
  v71[0] = v25;
  v71[1] = v26;
  swift_bridgeObjectRetain();
  sub_21CB883D0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v27 = v71[0];
  uint64_t v28 = v71[1];
  v71[0] = 0;
  v71[1] = 0xE000000000000000;
  sub_21CB88B70();
  swift_bridgeObjectRelease();
  v71[0] = 0xD00000000000001DLL;
  v71[1] = 0x800000021CB954C0;
  sub_21CB883D0();
  swift_bridgeObjectRelease();
  sub_21CB883D0();
  v71[0] = v27;
  v71[1] = v28;
  swift_bridgeObjectRetain();
  sub_21CB883D0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v29 = v71[0];
  uint64_t v30 = v71[1];
  v71[0] = 0;
  v71[1] = 0xE000000000000000;
  sub_21CB88B70();
  swift_bridgeObjectRelease();
  unint64_t v60 = 0xD000000000000012;
  v71[0] = 0xD000000000000012;
  v71[1] = 0x800000021CB954E0;
  sub_21CB883D0();
  swift_bridgeObjectRelease();
  sub_21CB883D0();
  v71[0] = v29;
  v71[1] = v30;
  swift_bridgeObjectRetain();
  sub_21CB883D0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v31 = v71[0];
  uint64_t v32 = v71[1];
  v71[0] = 0;
  v71[1] = 0xE000000000000000;
  sub_21CB88B70();
  swift_bridgeObjectRelease();
  v71[0] = 0xD000000000000019;
  v71[1] = 0x800000021CB95500;
  uint64_t v33 = v18;
  LOBYTE(v70[0]) = *(unsigned char *)(v18 + v24[14]);
  sub_21CB88310();
  sub_21CB883D0();
  swift_bridgeObjectRelease();
  sub_21CB883D0();
  v71[0] = v31;
  v71[1] = v32;
  swift_bridgeObjectRetain();
  sub_21CB883D0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v34 = v71[0];
  uint64_t v35 = v71[1];
  strcpy((char *)v71, "label: '");
  BYTE1(v71[1]) = 0;
  WORD1(v71[1]) = 0;
  HIDWORD(v71[1]) = -402653184;
  sub_21CB883D0();
  swift_bridgeObjectRelease();
  sub_21CB883D0();
  v71[0] = v34;
  v71[1] = v35;
  swift_bridgeObjectRetain();
  sub_21CB883D0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v36 = v71[0];
  uint64_t v37 = v71[1];
  strcpy((char *)v71, "location: ");
  BYTE3(v71[1]) = 0;
  HIDWORD(v71[1]) = -369098752;
  sub_21CA24E80(v61, (uint64_t)v62, (uint64_t *)&unk_267C96EF0);
  sub_21CB88310();
  sub_21CB883D0();
  swift_bridgeObjectRelease();
  sub_21CB883D0();
  v71[0] = v36;
  v71[1] = v37;
  swift_bridgeObjectRetain();
  sub_21CB883D0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v38 = v71[0];
  uint64_t v39 = v71[1];
  v71[0] = 0;
  v71[1] = 0xE000000000000000;
  sub_21CB88B70();
  swift_bridgeObjectRelease();
  v71[0] = 0xD000000000000010;
  v71[1] = 0x800000021CB95520;
  swift_bridgeObjectRetain();
  sub_21CB88740();
  sub_21CB883D0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_21CB883D0();
  v71[0] = v38;
  v71[1] = v39;
  swift_bridgeObjectRetain();
  sub_21CB883D0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v40 = v71[0];
  uint64_t v41 = v71[1];
  v71[0] = 0;
  v71[1] = 0xE000000000000000;
  sub_21CB88B70();
  swift_bridgeObjectRelease();
  v71[0] = 0x657469726F766166;
  v71[1] = 0xEF203A726564724FLL;
  uint64_t v42 = v67;
  v70[0] = *(void *)(v33 + v67[15]);
  sub_21CB88F00();
  sub_21CB883D0();
  swift_bridgeObjectRelease();
  sub_21CB883D0();
  v71[0] = v40;
  v71[1] = v41;
  swift_bridgeObjectRetain();
  sub_21CB883D0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v43 = v71[0];
  uint64_t v44 = v71[1];
  v71[0] = 0;
  v71[1] = 0xE000000000000000;
  sub_21CB88B70();
  swift_bridgeObjectRelease();
  strcpy((char *)v71, "shareExpires: ");
  HIBYTE(v71[1]) = -18;
  sub_21CA24E80(v33 + v42[8], (uint64_t)v65, (uint64_t *)&unk_267C951B0);
  sub_21CB88310();
  sub_21CB883D0();
  swift_bridgeObjectRelease();
  sub_21CB883D0();
  v71[0] = v43;
  v71[1] = v44;
  swift_bridgeObjectRetain();
  sub_21CB883D0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v45 = v71[0];
  uint64_t v46 = v71[1];
  v71[0] = 0;
  v71[1] = 0xE000000000000000;
  sub_21CB88B70();
  sub_21CB883D0();
  v70[0] = *(void *)(v33 + v42[9]);
  sub_21CB88CA0();
  sub_21CB883D0();
  v71[0] = v45;
  v71[1] = v46;
  swift_bridgeObjectRetain();
  sub_21CB883D0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v47 = v71[0];
  uint64_t v48 = v71[1];
  v71[0] = 0;
  v71[1] = 0xE000000000000000;
  sub_21CB88B70();
  swift_bridgeObjectRelease();
  v71[0] = 0xD000000000000011;
  v71[1] = 0x800000021CB95560;
  LOBYTE(v70[0]) = *(unsigned char *)(v33 + v42[10]);
  sub_21CB88310();
  sub_21CB883D0();
  swift_bridgeObjectRelease();
  sub_21CB883D0();
  v71[0] = v47;
  v71[1] = v48;
  swift_bridgeObjectRetain();
  sub_21CB883D0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v50 = v71[0];
  uint64_t v49 = v71[1];
  v71[0] = 0;
  v71[1] = 0xE000000000000000;
  sub_21CB88B70();
  swift_bridgeObjectRelease();
  v71[0] = v64;
  v71[1] = 0x800000021CB95580;
  uint64_t v51 = v33;
  v70[0] = *(void *)(v33 + v42[16]);
  swift_bridgeObjectRetain();
  sub_21CA57E34(&qword_267C95A48);
  sub_21CB88310();
  sub_21CB883D0();
  swift_bridgeObjectRelease();
  sub_21CB883D0();
  v71[0] = v50;
  v71[1] = v49;
  swift_bridgeObjectRetain();
  sub_21CB883D0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v53 = v71[0];
  uint64_t v52 = v71[1];
  v71[0] = 0;
  v71[1] = 0xE000000000000000;
  sub_21CB88B70();
  swift_bridgeObjectRelease();
  v71[0] = 0xD000000000000014;
  v71[1] = 0x800000021CB955A0;
  v70[0] = *(void *)(v51 + v42[17]);
  swift_bridgeObjectRetain();
  sub_21CB88310();
  sub_21CB883D0();
  swift_bridgeObjectRelease();
  sub_21CB883D0();
  v71[0] = v53;
  v71[1] = v52;
  swift_bridgeObjectRetain();
  sub_21CB883D0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v55 = v71[0];
  uint64_t v54 = v71[1];
  v71[0] = 0;
  v71[1] = 0xE000000000000000;
  sub_21CB88B70();
  swift_bridgeObjectRelease();
  v71[0] = 0xD000000000000011;
  v71[1] = 0x800000021CB955C0;
  v70[0] = *(void *)(v51 + 40);
  swift_bridgeObjectRetain();
  sub_21CA57E34(&qword_267C95130);
  sub_21CB88310();
  sub_21CB883D0();
  swift_bridgeObjectRelease();
  sub_21CB883D0();
  v71[0] = v55;
  v71[1] = v54;
  swift_bridgeObjectRetain();
  sub_21CB883D0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v71[0];
}

uint64_t FMFFriend.hashValue.getter()
{
  return sub_21CB89090();
}

uint64_t sub_21CABACF4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FMFFriend.init(from:)(a1, a2);
}

uint64_t sub_21CABAD0C(void *a1)
{
  return FMFFriend.encode(to:)(a1);
}

uint64_t sub_21CABAD28()
{
  return sub_21CB89090();
}

uint64_t sub_21CABAD84()
{
  return sub_21CB89090();
}

void *sub_21CABADE0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (void *)MEMORY[0x263F8EE78];
  }
  sub_21CA57E34(&qword_267C95280);
  uint64_t v3 = (void *)swift_allocObject();
  int64_t v4 = j__malloc_size(v3);
  uint64_t v5 = v4 - 32;
  if (v4 < 32) {
    uint64_t v5 = v4 - 1;
  }
  v3[2] = v1;
  v3[3] = 2 * (v5 >> 5);
  uint64_t v6 = sub_21CB4CE30((uint64_t)&v8, (uint64_t)(v3 + 4), v1, a1);
  swift_bridgeObjectRetain();
  sub_21CA7CFF0();
  if (v6 != v1)
  {
    __break(1u);
    return (void *)MEMORY[0x263F8EE78];
  }
  return v3;
}

void *sub_21CABAEC8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (void *)MEMORY[0x263F8EE78];
  }
  sub_21CA57E34(&qword_267C95280);
  uint64_t v3 = (void *)swift_allocObject();
  int64_t v4 = j__malloc_size(v3);
  uint64_t v5 = v4 - 32;
  if (v4 < 32) {
    uint64_t v5 = v4 - 1;
  }
  v3[2] = v1;
  v3[3] = 2 * (v5 >> 5);
  uint64_t v6 = sub_21CB4D064((uint64_t)&v8, (uint64_t)(v3 + 4), v1, a1);
  swift_bridgeObjectRetain();
  sub_21CA7CFF0();
  if (v6 != v1)
  {
    __break(1u);
    return (void *)MEMORY[0x263F8EE78];
  }
  return v3;
}

void *sub_21CABAFB0(uint64_t a1)
{
  return sub_21CA4E9B4(a1, &qword_267C95218, (uint64_t (*)(uint64_t *, void *, uint64_t, uint64_t))sub_21CA4EAA4);
}

size_t sub_21CABAFD0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return MEMORY[0x263F8EE78];
  }
  sub_21CA57E34(&qword_267C95208);
  uint64_t v3 = *(void *)(sub_21CB87CC0() - 8);
  uint64_t v4 = *(void *)(v3 + 72);
  unint64_t v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v6 = (void *)swift_allocObject();
  size_t result = j__malloc_size(v6);
  if (v4)
  {
    if (result - v5 != 0x8000000000000000 || v4 != -1)
    {
      v6[2] = v1;
      v6[3] = 2 * ((uint64_t)(result - v5) / v4);
      sub_21CB4D528(&v11, (char *)v6 + v5, v1, a1);
      uint64_t v10 = v9;
      swift_bridgeObjectRetain();
      sub_21CA7CFF0();
      if (v10 == v1) {
        return (size_t)v6;
      }
      __break(1u);
      return MEMORY[0x263F8EE78];
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_21CABB124(char *__src, char *a2, unint64_t a3, char *__dst)
{
  uint64_t v4 = __dst;
  uint64_t v6 = a2;
  uint64_t v7 = __src;
  int64_t v8 = a2 - __src;
  int64_t v9 = a2 - __src + 15;
  if (a2 - __src >= 0) {
    int64_t v9 = a2 - __src;
  }
  uint64_t v10 = v9 >> 4;
  uint64_t v11 = a3 - (void)a2;
  uint64_t v12 = a3 - (void)a2 + 15;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v12 = a3 - (void)a2;
  }
  uint64_t v13 = v12 >> 4;
  uint64_t v27 = __src;
  uint64_t v26 = __dst;
  if (v10 >= v12 >> 4)
  {
    if (v11 >= -15)
    {
      if (__dst != a2 || &a2[16 * v13] <= __dst) {
        memmove(__dst, a2, 16 * v13);
      }
      unint64_t v17 = &v4[16 * v13];
      uint64_t v25 = v17;
      uint64_t v27 = v6;
      if (v7 < v6 && v11 >= 16)
      {
        uint64_t v18 = (char *)(a3 - 16);
        uint64_t v19 = v6;
        while (1)
        {
          uint64_t v20 = v18 + 16;
          uint64_t v21 = *((void *)v19 - 2);
          uint64_t v22 = *((void *)v19 - 1);
          v19 -= 16;
          BOOL v23 = *((void *)v17 - 2) == v21 && *((void *)v17 - 1) == v22;
          if (v23 || (sub_21CB88F50() & 1) == 0)
          {
            uint64_t v25 = v17 - 16;
            if (v20 < v17 || v18 >= v17 || v20 != v17) {
              *(_OWORD *)uint64_t v18 = *((_OWORD *)v17 - 1);
            }
            uint64_t v19 = v6;
            v17 -= 16;
            if (v6 <= v7) {
              goto LABEL_50;
            }
          }
          else
          {
            if (v20 != v6 || v18 >= v6) {
              *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
            }
            uint64_t v27 = v19;
            if (v19 <= v7) {
              goto LABEL_50;
            }
          }
          v18 -= 16;
          uint64_t v6 = v19;
          if (v17 <= v4) {
            goto LABEL_50;
          }
        }
      }
      goto LABEL_50;
    }
  }
  else if (v8 >= -15)
  {
    if (__dst != __src || &__src[16 * v10] <= __dst) {
      memmove(__dst, __src, 16 * v10);
    }
    uint64_t v14 = &v4[16 * v10];
    uint64_t v25 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 16)
    {
      do
      {
        BOOL v15 = *(void *)v6 == *(void *)v4 && *((void *)v6 + 1) == *((void *)v4 + 1);
        if (v15 || (sub_21CB88F50() & 1) == 0)
        {
          if (v7 != v4) {
            *(_OWORD *)uint64_t v7 = *(_OWORD *)v4;
          }
          v4 += 16;
          uint64_t v26 = v4;
          unint64_t v16 = v6;
        }
        else
        {
          unint64_t v16 = v6 + 16;
          if (v7 < v6 || v7 >= v16 || v7 != v6) {
            *(_OWORD *)uint64_t v7 = *(_OWORD *)v6;
          }
        }
        v7 += 16;
        if (v4 >= v14) {
          break;
        }
        uint64_t v6 = v16;
      }
      while ((unint64_t)v16 < a3);
      uint64_t v27 = v7;
    }
LABEL_50:
    sub_21CAD2BD4((void **)&v27, (const void **)&v26, &v25);
    return 1;
  }
  uint64_t result = sub_21CB88D50();
  __break(1u);
  return result;
}

uint64_t _s7FMFCore9FMFFriendV2eeoiySbAC_ACtFZ_0(void *a1, void *a2)
{
  uint64_t v192 = type metadata accessor for FMFLocation();
  uint64_t v191 = *(void *)(v192 - 8);
  MEMORY[0x270FA5388](v192);
  v189 = &v187[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = sub_21CA57E34((uint64_t *)&unk_267C96EF0);
  MEMORY[0x270FA5388](v5 - 8);
  v193 = &v187[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v190 = sub_21CA57E34(&qword_267C95A98);
  MEMORY[0x270FA5388](v190);
  v194 = &v187[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v198 = sub_21CB87590();
  uint64_t v8 = *(void *)(v198 - 8);
  MEMORY[0x270FA5388](v198);
  v195 = &v187[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = sub_21CA57E34((uint64_t *)&unk_267C951B0);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = &v187[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v196 = sub_21CA57E34(&qword_267C95108);
  MEMORY[0x270FA5388](v196);
  v200 = &v187[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v201 = (int *)type metadata accessor for FMFFriend();
  uint64_t v14 = MEMORY[0x270FA5388](v201);
  v216 = &v187[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  v215 = &v187[-v17];
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  v220 = &v187[-v19];
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  v221 = &v187[-v21];
  uint64_t v22 = MEMORY[0x270FA5388](v20);
  v222 = &v187[-v23];
  uint64_t v24 = MEMORY[0x270FA5388](v22);
  v223 = &v187[-v25];
  uint64_t v26 = MEMORY[0x270FA5388](v24);
  v224 = &v187[-v27];
  uint64_t v28 = MEMORY[0x270FA5388](v26);
  v217 = &v187[-v29];
  uint64_t v30 = MEMORY[0x270FA5388](v28);
  v218 = &v187[-v31];
  uint64_t v32 = MEMORY[0x270FA5388](v30);
  v219 = &v187[-v33];
  uint64_t v34 = MEMORY[0x270FA5388](v32);
  v214 = &v187[-v35];
  uint64_t v36 = MEMORY[0x270FA5388](v34);
  v213 = &v187[-v37];
  uint64_t v38 = MEMORY[0x270FA5388](v36);
  v225 = &v187[-v39];
  uint64_t v40 = MEMORY[0x270FA5388](v38);
  uint64_t v41 = MEMORY[0x270FA5388](v40);
  v211 = &v187[-v42];
  uint64_t v43 = MEMORY[0x270FA5388](v41);
  uint64_t v44 = MEMORY[0x270FA5388](v43);
  v209 = &v187[-v45];
  uint64_t v46 = MEMORY[0x270FA5388](v44);
  uint64_t v47 = MEMORY[0x270FA5388](v46);
  v226 = &v187[-v48];
  uint64_t v49 = MEMORY[0x270FA5388](v47);
  v207 = &v187[-v50];
  uint64_t v51 = MEMORY[0x270FA5388](v49);
  v206 = &v187[-v52];
  uint64_t v53 = MEMORY[0x270FA5388](v51);
  v205 = &v187[-v54];
  uint64_t v55 = MEMORY[0x270FA5388](v53);
  uint64_t v227 = (uint64_t)&v187[-v56];
  uint64_t v57 = MEMORY[0x270FA5388](v55);
  uint64_t v58 = MEMORY[0x270FA5388](v57);
  v202 = &v187[-v59];
  uint64_t v60 = MEMORY[0x270FA5388](v58);
  uint64_t v203 = (uint64_t)&v187[-v61];
  uint64_t v62 = MEMORY[0x270FA5388](v60);
  unint64_t v64 = &v187[-v63];
  uint64_t v65 = MEMORY[0x270FA5388](v62);
  uint64_t v67 = &v187[-v66];
  uint64_t v68 = MEMORY[0x270FA5388](v65);
  uint64_t v70 = &v187[-v69];
  uint64_t v71 = MEMORY[0x270FA5388](v68);
  uint64_t v73 = &v187[-v72];
  uint64_t v74 = MEMORY[0x270FA5388](v71);
  uint64_t v76 = &v187[-v75];
  MEMORY[0x270FA5388](v74);
  unsigned int v78 = &v187[-v77];
  uint64_t v79 = a1[1];
  uint64_t v80 = a2[1];
  BOOL v81 = *a1 == *a2;
  uint64_t v212 = v82;
  uint64_t v210 = v83;
  uint64_t v208 = v84;
  uint64_t v204 = v85;
  uint64_t v197 = v8;
  v199 = v12;
  if (v81 && v79 == v80)
  {
    sub_21CA57118((uint64_t)a1, (uint64_t)&v187[-v77], (uint64_t (*)(void))type metadata accessor for FMFFriend);
    sub_21CA57118((uint64_t)a2, (uint64_t)v76, (uint64_t (*)(void))type metadata accessor for FMFFriend);
  }
  else
  {
    char v86 = sub_21CB88F50();
    sub_21CA57118((uint64_t)a1, (uint64_t)v78, (uint64_t (*)(void))type metadata accessor for FMFFriend);
    sub_21CA57118((uint64_t)a2, (uint64_t)v76, (uint64_t (*)(void))type metadata accessor for FMFFriend);
    if ((v86 & 1) == 0)
    {
      sub_21CA58218((uint64_t)v76, (uint64_t (*)(void))type metadata accessor for FMFFriend);
      sub_21CA58218((uint64_t)v78, (uint64_t (*)(void))type metadata accessor for FMFFriend);
LABEL_16:
      sub_21CA57118((uint64_t)a1, (uint64_t)v73, (uint64_t (*)(void))type metadata accessor for FMFFriend);
      sub_21CA57118((uint64_t)a2, (uint64_t)v70, (uint64_t (*)(void))type metadata accessor for FMFFriend);
      goto LABEL_17;
    }
  }
  uint64_t v87 = *((void *)v78 + 3);
  uint64_t v88 = *((void *)v76 + 3);
  if (!v87)
  {
    swift_bridgeObjectRetain();
    sub_21CA58218((uint64_t)v76, (uint64_t (*)(void))type metadata accessor for FMFFriend);
    sub_21CA58218((uint64_t)v78, (uint64_t (*)(void))type metadata accessor for FMFFriend);
    if (!v88) {
      goto LABEL_12;
    }
    goto LABEL_15;
  }
  if (!v88)
  {
    swift_bridgeObjectRetain();
    sub_21CA58218((uint64_t)v76, (uint64_t (*)(void))type metadata accessor for FMFFriend);
    sub_21CA58218((uint64_t)v78, (uint64_t (*)(void))type metadata accessor for FMFFriend);
LABEL_15:
    swift_bridgeObjectRelease();
    goto LABEL_16;
  }
  if (*((void *)v78 + 2) == *((void *)v76 + 2) && v87 == v88)
  {
    swift_bridgeObjectRetain();
    sub_21CA58218((uint64_t)v76, (uint64_t (*)(void))type metadata accessor for FMFFriend);
    sub_21CA58218((uint64_t)v78, (uint64_t (*)(void))type metadata accessor for FMFFriend);
    swift_bridgeObjectRelease();
LABEL_12:
    sub_21CA57118((uint64_t)a1, (uint64_t)v73, (uint64_t (*)(void))type metadata accessor for FMFFriend);
    sub_21CA57118((uint64_t)a2, (uint64_t)v70, (uint64_t (*)(void))type metadata accessor for FMFFriend);
    goto LABEL_44;
  }
  int v188 = sub_21CB88F50();
  swift_bridgeObjectRetain();
  sub_21CA58218((uint64_t)v76, (uint64_t (*)(void))type metadata accessor for FMFFriend);
  sub_21CA58218((uint64_t)v78, (uint64_t (*)(void))type metadata accessor for FMFFriend);
  swift_bridgeObjectRelease();
  sub_21CA57118((uint64_t)a1, (uint64_t)v73, (uint64_t (*)(void))type metadata accessor for FMFFriend);
  sub_21CA57118((uint64_t)a2, (uint64_t)v70, (uint64_t (*)(void))type metadata accessor for FMFFriend);
  if ((v188 & 1) == 0)
  {
LABEL_17:
    sub_21CA58218((uint64_t)v73, (uint64_t (*)(void))type metadata accessor for FMFFriend);
    sub_21CA58218((uint64_t)v70, (uint64_t (*)(void))type metadata accessor for FMFFriend);
    sub_21CA57118((uint64_t)a1, (uint64_t)v67, (uint64_t (*)(void))type metadata accessor for FMFFriend);
    sub_21CA57118((uint64_t)a2, (uint64_t)v64, (uint64_t (*)(void))type metadata accessor for FMFFriend);
LABEL_18:
    sub_21CA58218((uint64_t)v64, (uint64_t (*)(void))type metadata accessor for FMFFriend);
    sub_21CA58218((uint64_t)v67, (uint64_t (*)(void))type metadata accessor for FMFFriend);
    uint64_t v89 = v220;
    uint64_t v91 = v222;
    uint64_t v90 = v223;
    uint64_t v92 = v224;
    uint64_t v93 = v227;
LABEL_19:
    uint64_t v94 = v203;
    sub_21CA57118((uint64_t)a1, v203, (uint64_t (*)(void))type metadata accessor for FMFFriend);
    uint64_t v95 = v202;
    sub_21CA57118((uint64_t)a2, (uint64_t)v202, (uint64_t (*)(void))type metadata accessor for FMFFriend);
LABEL_20:
    sub_21CA58218((uint64_t)v95, (uint64_t (*)(void))type metadata accessor for FMFFriend);
    sub_21CA58218(v94, (uint64_t (*)(void))type metadata accessor for FMFFriend);
    uint64_t v96 = v204;
    sub_21CA57118((uint64_t)a1, v204, (uint64_t (*)(void))type metadata accessor for FMFFriend);
    sub_21CA57118((uint64_t)a2, v93, (uint64_t (*)(void))type metadata accessor for FMFFriend);
LABEL_21:
    sub_21CA58218(v93, (uint64_t (*)(void))type metadata accessor for FMFFriend);
    sub_21CA58218(v96, (uint64_t (*)(void))type metadata accessor for FMFFriend);
    uint64_t v97 = v205;
    uint64_t v98 = v89;
    uint64_t v99 = v90;
LABEL_22:
    sub_21CA57118((uint64_t)a1, (uint64_t)v97, (uint64_t (*)(void))type metadata accessor for FMFFriend);
    uint64_t v100 = v206;
    sub_21CA57118((uint64_t)a2, (uint64_t)v206, (uint64_t (*)(void))type metadata accessor for FMFFriend);
    uint64_t v101 = v91;
LABEL_23:
    sub_21CA58218((uint64_t)v100, (uint64_t (*)(void))type metadata accessor for FMFFriend);
    sub_21CA58218((uint64_t)v97, (uint64_t (*)(void))type metadata accessor for FMFFriend);
    uint64_t v102 = v207;
    unsigned int v103 = v92;
    uint64_t v104 = (uint64_t)v209;
LABEL_24:
    sub_21CA57118((uint64_t)a1, (uint64_t)v102, (uint64_t (*)(void))type metadata accessor for FMFFriend);
    int v105 = v226;
    sub_21CA57118((uint64_t)a2, (uint64_t)v226, (uint64_t (*)(void))type metadata accessor for FMFFriend);
LABEL_25:
    sub_21CA58218((uint64_t)v105, (uint64_t (*)(void))type metadata accessor for FMFFriend);
    sub_21CA58218((uint64_t)v102, (uint64_t (*)(void))type metadata accessor for FMFFriend);
LABEL_26:
    uint64_t v106 = v208;
    sub_21CA57118((uint64_t)a1, v208, (uint64_t (*)(void))type metadata accessor for FMFFriend);
    sub_21CA57118((uint64_t)a2, v104, (uint64_t (*)(void))type metadata accessor for FMFFriend);
    uint64_t v107 = v225;
LABEL_27:
    sub_21CA58218(v104, (uint64_t (*)(void))type metadata accessor for FMFFriend);
    sub_21CA58218(v106, (uint64_t (*)(void))type metadata accessor for FMFFriend);
    uint64_t v108 = v210;
    sub_21CA57118((uint64_t)a1, v210, (uint64_t (*)(void))type metadata accessor for FMFFriend);
    long long v109 = v211;
    sub_21CA57118((uint64_t)a2, (uint64_t)v211, (uint64_t (*)(void))type metadata accessor for FMFFriend);
LABEL_28:
    sub_21CA58218((uint64_t)v109, (uint64_t (*)(void))type metadata accessor for FMFFriend);
    sub_21CA58218(v108, (uint64_t (*)(void))type metadata accessor for FMFFriend);
    uint64_t v110 = v212;
    sub_21CA57118((uint64_t)a1, v212, (uint64_t (*)(void))type metadata accessor for FMFFriend);
    sub_21CA57118((uint64_t)a2, (uint64_t)v107, (uint64_t (*)(void))type metadata accessor for FMFFriend);
LABEL_29:
    sub_21CA58218((uint64_t)v107, (uint64_t (*)(void))type metadata accessor for FMFFriend);
    sub_21CA58218(v110, (uint64_t (*)(void))type metadata accessor for FMFFriend);
    char v111 = v213;
    char v112 = v221;
LABEL_30:
    sub_21CA57118((uint64_t)a1, (uint64_t)v111, (uint64_t (*)(void))type metadata accessor for FMFFriend);
    uint64_t v113 = v214;
    sub_21CA57118((uint64_t)a2, (uint64_t)v214, (uint64_t (*)(void))type metadata accessor for FMFFriend);
LABEL_31:
    sub_21CA58218((uint64_t)v113, (uint64_t (*)(void))type metadata accessor for FMFFriend);
    sub_21CA58218((uint64_t)v111, (uint64_t (*)(void))type metadata accessor for FMFFriend);
    uint64_t v114 = v219;
    sub_21CA57118((uint64_t)a1, (uint64_t)v219, (uint64_t (*)(void))type metadata accessor for FMFFriend);
    uint64_t v115 = v218;
    sub_21CA57118((uint64_t)a2, (uint64_t)v218, (uint64_t (*)(void))type metadata accessor for FMFFriend);
LABEL_32:
    sub_21CA58218((uint64_t)v115, (uint64_t (*)(void))type metadata accessor for FMFFriend);
    sub_21CA58218((uint64_t)v114, (uint64_t (*)(void))type metadata accessor for FMFFriend);
LABEL_33:
    int v116 = v217;
    sub_21CA57118((uint64_t)a1, (uint64_t)v217, (uint64_t (*)(void))type metadata accessor for FMFFriend);
    sub_21CA57118((uint64_t)a2, (uint64_t)v103, (uint64_t (*)(void))type metadata accessor for FMFFriend);
LABEL_34:
    sub_21CA58218((uint64_t)v103, (uint64_t (*)(void))type metadata accessor for FMFFriend);
    sub_21CA58218((uint64_t)v116, (uint64_t (*)(void))type metadata accessor for FMFFriend);
LABEL_35:
    sub_21CA57118((uint64_t)a1, (uint64_t)v99, (uint64_t (*)(void))type metadata accessor for FMFFriend);
    sub_21CA57118((uint64_t)a2, (uint64_t)v101, (uint64_t (*)(void))type metadata accessor for FMFFriend);
LABEL_36:
    sub_21CA58218((uint64_t)v101, (uint64_t (*)(void))type metadata accessor for FMFFriend);
    sub_21CA58218((uint64_t)v99, (uint64_t (*)(void))type metadata accessor for FMFFriend);
LABEL_37:
    sub_21CA57118((uint64_t)a1, (uint64_t)v112, (uint64_t (*)(void))type metadata accessor for FMFFriend);
    sub_21CA57118((uint64_t)a2, (uint64_t)v98, (uint64_t (*)(void))type metadata accessor for FMFFriend);
    uint64_t v117 = v216;
LABEL_38:
    sub_21CA58218((uint64_t)v98, (uint64_t (*)(void))type metadata accessor for FMFFriend);
    sub_21CA58218((uint64_t)v112, (uint64_t (*)(void))type metadata accessor for FMFFriend);
LABEL_39:
    uint64_t v118 = (uint64_t)a1;
    uint64_t v119 = v215;
    sub_21CA57118(v118, (uint64_t)v215, (uint64_t (*)(void))type metadata accessor for FMFFriend);
    sub_21CA57118((uint64_t)a2, (uint64_t)v117, (uint64_t (*)(void))type metadata accessor for FMFFriend);
LABEL_40:
    sub_21CA58218((uint64_t)v117, (uint64_t (*)(void))type metadata accessor for FMFFriend);
    sub_21CA58218((uint64_t)v119, (uint64_t (*)(void))type metadata accessor for FMFFriend);
    goto LABEL_41;
  }
LABEL_44:
  char v122 = sub_21CB3AB50(*((void *)v73 + 4), *((void *)v70 + 4));
  sub_21CA58218((uint64_t)v73, (uint64_t (*)(void))type metadata accessor for FMFFriend);
  sub_21CA58218((uint64_t)v70, (uint64_t (*)(void))type metadata accessor for FMFFriend);
  sub_21CA57118((uint64_t)a1, (uint64_t)v67, (uint64_t (*)(void))type metadata accessor for FMFFriend);
  sub_21CA57118((uint64_t)a2, (uint64_t)v64, (uint64_t (*)(void))type metadata accessor for FMFFriend);
  if ((v122 & 1) == 0) {
    goto LABEL_18;
  }
  uint64_t v123 = v201[8];
  uint64_t v124 = &v64[v123];
  uint64_t v125 = v200;
  uint64_t v126 = (uint64_t)&v200[*(int *)(v196 + 48)];
  sub_21CA24E80((uint64_t)&v67[v123], (uint64_t)v200, (uint64_t *)&unk_267C951B0);
  uint64_t v127 = (uint64_t)v124;
  uint64_t v128 = v125;
  sub_21CA24E80(v127, v126, (uint64_t *)&unk_267C951B0);
  uint64_t v129 = v197;
  uint64_t v130 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v197 + 48);
  uint64_t v131 = v198;
  if (v130((uint64_t)v128, 1, v198) == 1)
  {
    sub_21CA58218((uint64_t)v64, (uint64_t (*)(void))type metadata accessor for FMFFriend);
    uint64_t v128 = v200;
    sub_21CA58218((uint64_t)v67, (uint64_t (*)(void))type metadata accessor for FMFFriend);
    int v132 = v130(v126, 1, v131);
    uint64_t v93 = v227;
    if (v132 == 1)
    {
      sub_21CA1B88C((uint64_t)v128, (uint64_t *)&unk_267C951B0);
      uint64_t v94 = v203;
      sub_21CA57118((uint64_t)a1, v203, (uint64_t (*)(void))type metadata accessor for FMFFriend);
      uint64_t v95 = v202;
      sub_21CA57118((uint64_t)a2, (uint64_t)v202, (uint64_t (*)(void))type metadata accessor for FMFFriend);
      uint64_t v89 = v220;
      uint64_t v91 = v222;
      uint64_t v90 = v223;
      uint64_t v92 = v224;
      goto LABEL_52;
    }
    goto LABEL_50;
  }
  sub_21CA24E80((uint64_t)v128, (uint64_t)v199, (uint64_t *)&unk_267C951B0);
  if (v130(v126, 1, v131) == 1)
  {
    sub_21CA58218((uint64_t)v64, (uint64_t (*)(void))type metadata accessor for FMFFriend);
    sub_21CA58218((uint64_t)v67, (uint64_t (*)(void))type metadata accessor for FMFFriend);
    (*(void (**)(unsigned char *, uint64_t))(v129 + 8))(v199, v131);
    uint64_t v93 = v227;
LABEL_50:
    sub_21CA1B88C((uint64_t)v128, &qword_267C95108);
    uint64_t v89 = v220;
    uint64_t v91 = v222;
    uint64_t v90 = v223;
    uint64_t v92 = v224;
    goto LABEL_19;
  }
  uint64_t v133 = v195;
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v129 + 32))(v195, v126, v131);
  sub_21CABFC98((unint64_t *)&qword_267C95110, MEMORY[0x263F07490]);
  char v134 = sub_21CB882B0();
  uint64_t v135 = *(void (**)(unsigned char *, uint64_t))(v129 + 8);
  v135(v133, v131);
  sub_21CA58218((uint64_t)v64, (uint64_t (*)(void))type metadata accessor for FMFFriend);
  sub_21CA58218((uint64_t)v67, (uint64_t (*)(void))type metadata accessor for FMFFriend);
  v135(v199, v131);
  sub_21CA1B88C((uint64_t)v128, (uint64_t *)&unk_267C951B0);
  uint64_t v136 = v203;
  sub_21CA57118((uint64_t)a1, v203, (uint64_t (*)(void))type metadata accessor for FMFFriend);
  uint64_t v95 = v202;
  uint64_t v94 = v136;
  sub_21CA57118((uint64_t)a2, (uint64_t)v202, (uint64_t (*)(void))type metadata accessor for FMFFriend);
  uint64_t v89 = v220;
  uint64_t v91 = v222;
  uint64_t v90 = v223;
  uint64_t v92 = v224;
  uint64_t v93 = v227;
  if ((v134 & 1) == 0) {
    goto LABEL_20;
  }
LABEL_52:
  uint64_t v137 = v201[9];
  uint64_t v203 = *(void *)(v94 + v137);
  uint64_t v138 = *(void *)&v95[v137];
  sub_21CA58218((uint64_t)v95, (uint64_t (*)(void))type metadata accessor for FMFFriend);
  sub_21CA58218(v94, (uint64_t (*)(void))type metadata accessor for FMFFriend);
  uint64_t v96 = v204;
  sub_21CA57118((uint64_t)a1, v204, (uint64_t (*)(void))type metadata accessor for FMFFriend);
  sub_21CA57118((uint64_t)a2, v227, (uint64_t (*)(void))type metadata accessor for FMFFriend);
  BOOL v81 = v203 == v138;
  uint64_t v93 = v227;
  if (!v81) {
    goto LABEL_21;
  }
  uint64_t v139 = v201;
  LODWORD(v203) = *(unsigned __int8 *)(v96 + v201[10]);
  sub_21CA58218(v96, (uint64_t (*)(void))type metadata accessor for FMFFriend);
  uint64_t v140 = v93;
  int v141 = *(unsigned __int8 *)(v93 + v139[10]);
  sub_21CA58218(v140, (uint64_t (*)(void))type metadata accessor for FMFFriend);
  uint64_t v98 = v89;
  if (v203 == 2)
  {
    uint64_t v97 = v205;
    uint64_t v99 = v90;
    if (v141 != 2) {
      goto LABEL_22;
    }
    sub_21CA57118((uint64_t)a1, (uint64_t)v205, (uint64_t (*)(void))type metadata accessor for FMFFriend);
    uint64_t v100 = v206;
    sub_21CA57118((uint64_t)a2, (uint64_t)v206, (uint64_t (*)(void))type metadata accessor for FMFFriend);
    uint64_t v101 = v91;
  }
  else
  {
    uint64_t v97 = v205;
    uint64_t v99 = v90;
    if (v141 == 2) {
      goto LABEL_22;
    }
    LODWORD(v227) = ((v203 & 1) == 0) ^ v141;
    sub_21CA57118((uint64_t)a1, (uint64_t)v205, (uint64_t (*)(void))type metadata accessor for FMFFriend);
    uint64_t v100 = v206;
    sub_21CA57118((uint64_t)a2, (uint64_t)v206, (uint64_t (*)(void))type metadata accessor for FMFFriend);
    uint64_t v101 = v91;
    if ((v227 & 1) == 0) {
      goto LABEL_23;
    }
  }
  uint64_t v142 = (uint64_t)v100;
  v143 = v201;
  LODWORD(v227) = v97[v201[11]];
  sub_21CA58218((uint64_t)v97, (uint64_t (*)(void))type metadata accessor for FMFFriend);
  int v144 = *(unsigned __int8 *)(v142 + v143[11]);
  sub_21CA58218(v142, (uint64_t (*)(void))type metadata accessor for FMFFriend);
  unsigned int v103 = v92;
  if (v227 == 2)
  {
    uint64_t v102 = v207;
    uint64_t v104 = (uint64_t)v209;
    if (v144 != 2) {
      goto LABEL_24;
    }
    sub_21CA57118((uint64_t)a1, (uint64_t)v207, (uint64_t (*)(void))type metadata accessor for FMFFriend);
    sub_21CA57118((uint64_t)a2, (uint64_t)v226, (uint64_t (*)(void))type metadata accessor for FMFFriend);
  }
  else
  {
    uint64_t v102 = v207;
    uint64_t v104 = (uint64_t)v209;
    if (v144 == 2) {
      goto LABEL_24;
    }
    LODWORD(v227) = ((v227 & 1) == 0) ^ v144;
    sub_21CA57118((uint64_t)a1, (uint64_t)v207, (uint64_t (*)(void))type metadata accessor for FMFFriend);
    int v105 = v226;
    sub_21CA57118((uint64_t)a2, (uint64_t)v226, (uint64_t (*)(void))type metadata accessor for FMFFriend);
    if ((v227 & 1) == 0) {
      goto LABEL_25;
    }
  }
  v145 = v201;
  LODWORD(v227) = v102[v201[12]];
  sub_21CA58218((uint64_t)v102, (uint64_t (*)(void))type metadata accessor for FMFFriend);
  int v146 = v226[v145[12]];
  sub_21CA58218((uint64_t)v226, (uint64_t (*)(void))type metadata accessor for FMFFriend);
  if (v227 == 2)
  {
    if (v146 != 2) {
      goto LABEL_26;
    }
    uint64_t v106 = v208;
    sub_21CA57118((uint64_t)a1, v208, (uint64_t (*)(void))type metadata accessor for FMFFriend);
    sub_21CA57118((uint64_t)a2, v104, (uint64_t (*)(void))type metadata accessor for FMFFriend);
  }
  else
  {
    if (v146 == 2) {
      goto LABEL_26;
    }
    LODWORD(v227) = ((v227 & 1) == 0) ^ v146;
    uint64_t v106 = v208;
    sub_21CA57118((uint64_t)a1, v208, (uint64_t (*)(void))type metadata accessor for FMFFriend);
    sub_21CA57118((uint64_t)a2, v104, (uint64_t (*)(void))type metadata accessor for FMFFriend);
    uint64_t v107 = v225;
    if ((v227 & 1) == 0) {
      goto LABEL_27;
    }
  }
  uint64_t v147 = v201;
  LODWORD(v227) = *(unsigned __int8 *)(v106 + v201[18]);
  sub_21CA58218(v106, (uint64_t (*)(void))type metadata accessor for FMFFriend);
  LODWORD(v147) = *(unsigned __int8 *)(v104 + v147[18]);
  sub_21CA58218(v104, (uint64_t (*)(void))type metadata accessor for FMFFriend);
  uint64_t v108 = v210;
  sub_21CA57118((uint64_t)a1, v210, (uint64_t (*)(void))type metadata accessor for FMFFriend);
  long long v109 = v211;
  sub_21CA57118((uint64_t)a2, (uint64_t)v211, (uint64_t (*)(void))type metadata accessor for FMFFriend);
  BOOL v81 = v227 == v147;
  uint64_t v107 = v225;
  if (!v81) {
    goto LABEL_28;
  }
  uint64_t v148 = v201;
  LODWORD(v227) = *(unsigned __int8 *)(v108 + v201[13]);
  sub_21CA58218(v108, (uint64_t (*)(void))type metadata accessor for FMFFriend);
  LODWORD(v148) = v109[v148[13]];
  sub_21CA58218((uint64_t)v109, (uint64_t (*)(void))type metadata accessor for FMFFriend);
  uint64_t v110 = v212;
  sub_21CA57118((uint64_t)a1, v212, (uint64_t (*)(void))type metadata accessor for FMFFriend);
  sub_21CA57118((uint64_t)a2, (uint64_t)v225, (uint64_t (*)(void))type metadata accessor for FMFFriend);
  BOOL v81 = v227 == v148;
  uint64_t v107 = v225;
  if (!v81) {
    goto LABEL_29;
  }
  uint64_t v149 = v201;
  LODWORD(v227) = *(unsigned __int8 *)(v110 + v201[14]);
  sub_21CA58218(v110, (uint64_t (*)(void))type metadata accessor for FMFFriend);
  uint64_t v150 = (uint64_t)v107;
  int v151 = v107[v149[14]];
  sub_21CA58218(v150, (uint64_t (*)(void))type metadata accessor for FMFFriend);
  char v112 = v221;
  if (v227 == 2)
  {
    char v111 = v213;
    if (v151 != 2) {
      goto LABEL_30;
    }
    sub_21CA57118((uint64_t)a1, (uint64_t)v213, (uint64_t (*)(void))type metadata accessor for FMFFriend);
    uint64_t v113 = v214;
    sub_21CA57118((uint64_t)a2, (uint64_t)v214, (uint64_t (*)(void))type metadata accessor for FMFFriend);
  }
  else
  {
    char v111 = v213;
    if (v151 == 2) {
      goto LABEL_30;
    }
    LODWORD(v227) = ((v227 & 1) == 0) ^ v151;
    sub_21CA57118((uint64_t)a1, (uint64_t)v213, (uint64_t (*)(void))type metadata accessor for FMFFriend);
    uint64_t v113 = v214;
    sub_21CA57118((uint64_t)a2, (uint64_t)v214, (uint64_t (*)(void))type metadata accessor for FMFFriend);
    if ((v227 & 1) == 0) {
      goto LABEL_31;
    }
  }
  uint64_t v152 = v201;
  uint64_t v227 = *(void *)&v111[v201[15]];
  sub_21CA58218((uint64_t)v111, (uint64_t (*)(void))type metadata accessor for FMFFriend);
  v226 = *(unsigned char **)&v113[v152[15]];
  sub_21CA58218((uint64_t)v113, (uint64_t (*)(void))type metadata accessor for FMFFriend);
  uint64_t v114 = v219;
  sub_21CA57118((uint64_t)a1, (uint64_t)v219, (uint64_t (*)(void))type metadata accessor for FMFFriend);
  uint64_t v115 = v218;
  sub_21CA57118((uint64_t)a2, (uint64_t)v218, (uint64_t (*)(void))type metadata accessor for FMFFriend);
  if ((unsigned char *)v227 != v226) {
    goto LABEL_32;
  }
  uint64_t v153 = v201[20];
  uint64_t v154 = (uint64_t)&v115[v153];
  uint64_t v155 = v194;
  uint64_t v156 = (uint64_t)&v194[*(int *)(v190 + 48)];
  sub_21CA24E80((uint64_t)&v114[v153], (uint64_t)v194, (uint64_t *)&unk_267C96EF0);
  sub_21CA24E80(v154, v156, (uint64_t *)&unk_267C96EF0);
  uint64_t v157 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v191 + 48);
  uint64_t v158 = v155;
  uint64_t v159 = v192;
  if (v157((uint64_t)v158, 1, v192) == 1)
  {
    sub_21CA58218((uint64_t)v218, (uint64_t (*)(void))type metadata accessor for FMFFriend);
    sub_21CA58218((uint64_t)v219, (uint64_t (*)(void))type metadata accessor for FMFFriend);
    if (v157(v156, 1, v159) == 1)
    {
      sub_21CA1B88C((uint64_t)v194, (uint64_t *)&unk_267C96EF0);
      int v116 = v217;
      sub_21CA57118((uint64_t)a1, (uint64_t)v217, (uint64_t (*)(void))type metadata accessor for FMFFriend);
      unsigned int v103 = v224;
      sub_21CA57118((uint64_t)a2, (uint64_t)v224, (uint64_t (*)(void))type metadata accessor for FMFFriend);
      goto LABEL_86;
    }
LABEL_84:
    sub_21CA1B88C((uint64_t)v194, &qword_267C95A98);
    uint64_t v98 = v220;
    char v112 = v221;
    uint64_t v101 = v222;
    uint64_t v99 = v223;
    unsigned int v103 = v224;
    goto LABEL_33;
  }
  sub_21CA24E80((uint64_t)v194, (uint64_t)v193, (uint64_t *)&unk_267C96EF0);
  if (v157(v156, 1, v159) == 1)
  {
    sub_21CA58218((uint64_t)v218, (uint64_t (*)(void))type metadata accessor for FMFFriend);
    sub_21CA58218((uint64_t)v219, (uint64_t (*)(void))type metadata accessor for FMFFriend);
    sub_21CA58218((uint64_t)v193, (uint64_t (*)(void))type metadata accessor for FMFLocation);
    goto LABEL_84;
  }
  uint64_t v160 = v189;
  sub_21CA58534(v156, (uint64_t)v189, (uint64_t (*)(void))type metadata accessor for FMFLocation);
  uint64_t v161 = v193;
  char v162 = static FMFLocation.== infix(_:_:)((uint64_t)v193);
  sub_21CA58218((uint64_t)v160, (uint64_t (*)(void))type metadata accessor for FMFLocation);
  sub_21CA58218((uint64_t)v218, (uint64_t (*)(void))type metadata accessor for FMFFriend);
  sub_21CA58218((uint64_t)v219, (uint64_t (*)(void))type metadata accessor for FMFFriend);
  sub_21CA58218((uint64_t)v161, (uint64_t (*)(void))type metadata accessor for FMFLocation);
  sub_21CA1B88C((uint64_t)v194, (uint64_t *)&unk_267C96EF0);
  int v116 = v217;
  sub_21CA57118((uint64_t)a1, (uint64_t)v217, (uint64_t (*)(void))type metadata accessor for FMFFriend);
  unsigned int v103 = v224;
  sub_21CA57118((uint64_t)a2, (uint64_t)v224, (uint64_t (*)(void))type metadata accessor for FMFFriend);
  uint64_t v98 = v220;
  char v112 = v221;
  uint64_t v101 = v222;
  uint64_t v99 = v223;
  if ((v162 & 1) == 0) {
    goto LABEL_34;
  }
LABEL_86:
  uint64_t v163 = v201[19];
  uint64_t v164 = *(void *)&v116[v163];
  uint64_t v165 = *(void *)&v116[v163 + 8];
  uint64_t v166 = *(void *)&v116[v163 + 24];
  v226 = *(unsigned char **)&v116[v163 + 16];
  uint64_t v227 = v164;
  v225 = *(unsigned char **)&v116[v163 + 32];
  uint64_t v167 = *(unsigned char **)&v116[v163 + 40];
  v168 = *(unsigned char **)&v116[v163 + 48];
  uint64_t v169 = (uint64_t *)&v103[v163];
  uint64_t v170 = *v169;
  uint64_t v171 = v169[1];
  v172 = (unsigned char *)v169[2];
  uint64_t v173 = v169[3];
  v218 = (unsigned char *)v169[4];
  v219 = v167;
  v174 = (unsigned char *)v169[5];
  v213 = (unsigned char *)v169[6];
  v214 = v174;
  if (!v165)
  {
    sub_21CA5859C(v170, v171);
    sub_21CA58218((uint64_t)v224, (uint64_t (*)(void))type metadata accessor for FMFFriend);
    sub_21CA58218((uint64_t)v217, (uint64_t (*)(void))type metadata accessor for FMFFriend);
    if (!v171)
    {
      sub_21CABD7FC(v227, 0);
      uint64_t v99 = v223;
      sub_21CA57118((uint64_t)a1, (uint64_t)v223, (uint64_t (*)(void))type metadata accessor for FMFFriend);
      uint64_t v101 = v222;
      sub_21CA57118((uint64_t)a2, (uint64_t)v222, (uint64_t (*)(void))type metadata accessor for FMFFriend);
      goto LABEL_106;
    }
LABEL_98:
    sub_21CABD7FC(v227, v165);
    sub_21CABD7FC(v170, v171);
    uint64_t v98 = v220;
    char v112 = v221;
    uint64_t v101 = v222;
    uint64_t v99 = v223;
    goto LABEL_35;
  }
  if (!v171)
  {
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    sub_21CA58218((uint64_t)v224, (uint64_t (*)(void))type metadata accessor for FMFFriend);
    sub_21CA58218((uint64_t)v217, (uint64_t (*)(void))type metadata accessor for FMFFriend);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_98;
  }
  if (v227 == v170 && v165 == v171 || (char v175 = 0, (sub_21CB88F50() & 1) != 0))
  {
    if (v226 == v172 && v166 == v173)
    {
      if ((v218 ^ v225))
      {
        char v175 = 0;
        goto LABEL_105;
      }
    }
    else
    {
      char v175 = 0;
      if (sub_21CB88F50() & 1) == 0 || ((v218 ^ v225)) {
        goto LABEL_105;
      }
    }
    if (v219 == v214 && v168 == v213) {
      char v175 = 1;
    }
    else {
      char v175 = sub_21CB88F50();
    }
  }
LABEL_105:
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  sub_21CA58218((uint64_t)v224, (uint64_t (*)(void))type metadata accessor for FMFFriend);
  sub_21CA58218((uint64_t)v217, (uint64_t (*)(void))type metadata accessor for FMFFriend);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_21CABD7FC(v227, v165);
  uint64_t v99 = v223;
  sub_21CA57118((uint64_t)a1, (uint64_t)v223, (uint64_t (*)(void))type metadata accessor for FMFFriend);
  uint64_t v101 = v222;
  sub_21CA57118((uint64_t)a2, (uint64_t)v222, (uint64_t (*)(void))type metadata accessor for FMFFriend);
  uint64_t v98 = v220;
  char v112 = v221;
  if ((v175 & 1) == 0) {
    goto LABEL_36;
  }
LABEL_106:
  uint64_t v176 = v201[16];
  uint64_t v177 = *(void *)&v101[v176];
  if (!*(void *)&v99[v176])
  {
    swift_bridgeObjectRetain();
    sub_21CA58218((uint64_t)v222, (uint64_t (*)(void))type metadata accessor for FMFFriend);
    sub_21CA58218((uint64_t)v223, (uint64_t (*)(void))type metadata accessor for FMFFriend);
    if (!v177)
    {
      char v112 = v221;
      sub_21CA57118((uint64_t)a1, (uint64_t)v221, (uint64_t (*)(void))type metadata accessor for FMFFriend);
      uint64_t v98 = v220;
      sub_21CA57118((uint64_t)a2, (uint64_t)v220, (uint64_t (*)(void))type metadata accessor for FMFFriend);
      goto LABEL_115;
    }
LABEL_113:
    swift_bridgeObjectRelease();
    uint64_t v98 = v220;
    char v112 = v221;
    goto LABEL_37;
  }
  if (!v177)
  {
    swift_bridgeObjectRetain();
    sub_21CA58218((uint64_t)v222, (uint64_t (*)(void))type metadata accessor for FMFFriend);
    sub_21CA58218((uint64_t)v223, (uint64_t (*)(void))type metadata accessor for FMFFriend);
    goto LABEL_113;
  }
  swift_bridgeObjectRetain();
  uint64_t v178 = swift_bridgeObjectRetain();
  char v179 = sub_21CA07990(v178, v177);
  swift_bridgeObjectRelease();
  sub_21CA58218((uint64_t)v222, (uint64_t (*)(void))type metadata accessor for FMFFriend);
  sub_21CA58218((uint64_t)v223, (uint64_t (*)(void))type metadata accessor for FMFFriend);
  swift_bridgeObjectRelease();
  char v112 = v221;
  sub_21CA57118((uint64_t)a1, (uint64_t)v221, (uint64_t (*)(void))type metadata accessor for FMFFriend);
  uint64_t v98 = v220;
  sub_21CA57118((uint64_t)a2, (uint64_t)v220, (uint64_t (*)(void))type metadata accessor for FMFFriend);
  uint64_t v117 = v216;
  if ((v179 & 1) == 0) {
    goto LABEL_38;
  }
LABEL_115:
  uint64_t v180 = v201[17];
  uint64_t v181 = *(void *)&v98[v180];
  if (!*(void *)&v112[v180])
  {
    swift_bridgeObjectRetain();
    sub_21CA58218((uint64_t)v220, (uint64_t (*)(void))type metadata accessor for FMFFriend);
    sub_21CA58218((uint64_t)v221, (uint64_t (*)(void))type metadata accessor for FMFFriend);
    if (!v181)
    {
      uint64_t v185 = (uint64_t)a1;
      uint64_t v119 = v215;
      sub_21CA57118(v185, (uint64_t)v215, (uint64_t (*)(void))type metadata accessor for FMFFriend);
      uint64_t v117 = v216;
      sub_21CA57118((uint64_t)a2, (uint64_t)v216, (uint64_t (*)(void))type metadata accessor for FMFFriend);
      goto LABEL_124;
    }
LABEL_122:
    swift_bridgeObjectRelease();
    uint64_t v117 = v216;
    goto LABEL_39;
  }
  if (!v181)
  {
    swift_bridgeObjectRetain();
    sub_21CA58218((uint64_t)v220, (uint64_t (*)(void))type metadata accessor for FMFFriend);
    sub_21CA58218((uint64_t)v221, (uint64_t (*)(void))type metadata accessor for FMFFriend);
    goto LABEL_122;
  }
  swift_bridgeObjectRetain();
  uint64_t v182 = swift_bridgeObjectRetain();
  char v183 = sub_21CA07990(v182, v181);
  swift_bridgeObjectRelease();
  sub_21CA58218((uint64_t)v220, (uint64_t (*)(void))type metadata accessor for FMFFriend);
  sub_21CA58218((uint64_t)v221, (uint64_t (*)(void))type metadata accessor for FMFFriend);
  swift_bridgeObjectRelease();
  uint64_t v184 = (uint64_t)a1;
  uint64_t v119 = v215;
  sub_21CA57118(v184, (uint64_t)v215, (uint64_t (*)(void))type metadata accessor for FMFFriend);
  uint64_t v117 = v216;
  sub_21CA57118((uint64_t)a2, (uint64_t)v216, (uint64_t (*)(void))type metadata accessor for FMFFriend);
  if ((v183 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_124:
  uint64_t v186 = *((void *)v117 + 5);
  if (*((void *)v119 + 5))
  {
    if (v186)
    {
      char v120 = sub_21CA4C01C(*((void **)v119 + 5), *((void **)v117 + 5));
      swift_bridgeObjectRetain();
      sub_21CA58218((uint64_t)v216, (uint64_t (*)(void))type metadata accessor for FMFFriend);
      sub_21CA58218((uint64_t)v215, (uint64_t (*)(void))type metadata accessor for FMFFriend);
      swift_bridgeObjectRelease();
      return v120 & 1;
    }
    swift_bridgeObjectRetain();
    sub_21CA58218((uint64_t)v216, (uint64_t (*)(void))type metadata accessor for FMFFriend);
    sub_21CA58218((uint64_t)v215, (uint64_t (*)(void))type metadata accessor for FMFFriend);
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_21CA58218((uint64_t)v216, (uint64_t (*)(void))type metadata accessor for FMFFriend);
    sub_21CA58218((uint64_t)v215, (uint64_t (*)(void))type metadata accessor for FMFFriend);
    if (!v186)
    {
      char v120 = 1;
      return v120 & 1;
    }
  }
  swift_bridgeObjectRelease();
LABEL_41:
  char v120 = 0;
  return v120 & 1;
}

unint64_t sub_21CABD7A8()
{
  unint64_t result = qword_267C95A08;
  if (!qword_267C95A08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C95A08);
  }
  return result;
}

uint64_t sub_21CABD7FC(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_21CABD84C()
{
  unint64_t result = qword_267C95A38;
  if (!qword_267C95A38)
  {
    sub_21CA5EEBC((uint64_t *)&unk_267C96EF0);
    sub_21CABFC98(&qword_267C95A40, (void (*)(uint64_t))type metadata accessor for FMFLocation);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C95A38);
  }
  return result;
}

unint64_t sub_21CABD8F0()
{
  unint64_t result = qword_267C95A50;
  if (!qword_267C95A50)
  {
    sub_21CA5EEBC(&qword_267C95A48);
    sub_21CABD99C((unint64_t *)&qword_267C95A58, (unint64_t *)&qword_267C95A60);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C95A50);
  }
  return result;
}

uint64_t sub_21CABD99C(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_21CA5EEBC(&qword_267C94F08);
    sub_21CABFC98(a2, (void (*)(uint64_t))type metadata accessor for FMFLocationAlert);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_21CABDA30()
{
  return sub_21CABFC98(&qword_267C95A68, (void (*)(uint64_t))type metadata accessor for FMFFriend);
}

void *initializeBufferWithCopyOfBuffer for FMFFriend(void *a1, void *a2, int *a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (void *)(v14 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    uint64_t v6 = a2[3];
    a1[2] = a2[2];
    a1[3] = v6;
    uint64_t v7 = a2[5];
    uint64_t v8 = a3[8];
    uint64_t v71 = (char *)a1 + v8;
    uint64_t v9 = (char *)a2 + v8;
    a1[4] = a2[4];
    a1[5] = v7;
    uint64_t v10 = sub_21CB87590();
    uint64_t v11 = *(void *)(v10 - 8);
    uint64_t v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v12(v9, 1, v10))
    {
      uint64_t v13 = sub_21CA57E34((uint64_t *)&unk_267C951B0);
      memcpy(v71, v9, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v71, v9, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v71, 0, 1, v10);
    }
    uint64_t v15 = a3;
    uint64_t v16 = a2;
    uint64_t v17 = a3[10];
    *(void *)((char *)v3 + a3[9]) = *(void *)((char *)a2 + a3[9]);
    *((unsigned char *)v3 + v17) = *((unsigned char *)a2 + v17);
    uint64_t v18 = a3[12];
    *((unsigned char *)v3 + a3[11]) = *((unsigned char *)a2 + a3[11]);
    *((unsigned char *)v3 + v18) = *((unsigned char *)a2 + v18);
    uint64_t v19 = a3[14];
    *((unsigned char *)v3 + a3[13]) = *((unsigned char *)a2 + a3[13]);
    *((unsigned char *)v3 + v19) = *((unsigned char *)a2 + v19);
    uint64_t v20 = a3[16];
    *(void *)((char *)v3 + a3[15]) = *(void *)((char *)a2 + a3[15]);
    *(void *)((char *)v3 + v20) = *(void *)((char *)a2 + v20);
    uint64_t v21 = a3[18];
    *(void *)((char *)v3 + a3[17]) = *(void *)((char *)a2 + a3[17]);
    *((unsigned char *)v3 + v21) = *((unsigned char *)a2 + v21);
    uint64_t v22 = a3[19];
    uint64_t v23 = (char *)v3 + v22;
    uint64_t v24 = (char *)a2 + v22;
    uint64_t v25 = *(void *)((char *)a2 + v22 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v25)
    {
      *(void *)uint64_t v23 = *(void *)v24;
      *((void *)v23 + 1) = v25;
      uint64_t v26 = *((void *)v24 + 3);
      *((void *)v23 + 2) = *((void *)v24 + 2);
      *((void *)v23 + 3) = v26;
      v23[32] = v24[32];
      uint64_t v27 = *((void *)v24 + 5);
      uint64_t v28 = *((void *)v24 + 6);
      *((void *)v23 + 5) = v27;
      *((void *)v23 + 6) = v28;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v29 = *((_OWORD *)v24 + 1);
      *(_OWORD *)uint64_t v23 = *(_OWORD *)v24;
      *((_OWORD *)v23 + 1) = v29;
      *((_OWORD *)v23 + 2) = *((_OWORD *)v24 + 2);
      *((void *)v23 + 6) = *((void *)v24 + 6);
    }
    uint64_t v30 = a3[20];
    uint64_t v31 = (void *)((char *)v3 + v30);
    uint64_t v32 = (void *)((char *)a2 + v30);
    uint64_t v33 = type metadata accessor for FMFLocation();
    uint64_t v34 = *(void *)(v33 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v34 + 48))(v32, 1, v33))
    {
      uint64_t v35 = sub_21CA57E34((uint64_t *)&unk_267C96EF0);
      memcpy(v31, v32, *(void *)(*(void *)(v35 - 8) + 64));
    }
    else
    {
      uint64_t v70 = v34;
      uint64_t v72 = (int *)v33;
      uint64_t v36 = v32[1];
      *uint64_t v31 = *v32;
      v31[1] = v36;
      *((unsigned char *)v31 + 16) = *((unsigned char *)v32 + 16);
      v31[3] = v32[3];
      *((_WORD *)v31 + 16) = *((_WORD *)v32 + 16);
      uint64_t v37 = *(int *)(v33 + 32);
      __dst = (char *)v31 + v37;
      uint64_t v38 = (char *)v32 + v37;
      uint64_t v39 = sub_21CB875D0();
      uint64_t v40 = *(void *)(v39 - 8);
      uint64_t v41 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48);
      swift_bridgeObjectRetain();
      if (v41(v38, 1, v39))
      {
        uint64_t v42 = sub_21CA57E34(&qword_267C96F00);
        memcpy(__dst, v38, *(void *)(*(void *)(v42 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v40 + 16))(__dst, v38, v39);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v40 + 56))(__dst, 0, 1, v39);
      }
      uint64_t v43 = v72;
      uint64_t v15 = a3;
      *((unsigned char *)v31 + v72[9]) = *((unsigned char *)v32 + v72[9]);
      *((unsigned char *)v31 + v72[10]) = *((unsigned char *)v32 + v72[10]);
      uint64_t v44 = v72[11];
      uint64_t v45 = (char *)v31 + v44;
      uint64_t v46 = (void *)((char *)v32 + v44);
      uint64_t v47 = (void *)v46[38];
      if (v47)
      {
        uint64_t v48 = v46[21];
        if (v48)
        {
          uint64_t v49 = v46[1];
          *(void *)uint64_t v45 = *v46;
          *((void *)v45 + 1) = v49;
          uint64_t v50 = v46[3];
          *((void *)v45 + 2) = v46[2];
          *((void *)v45 + 3) = v50;
          uint64_t v51 = v46[5];
          *((void *)v45 + 4) = v46[4];
          *((void *)v45 + 5) = v51;
          uint64_t v52 = v46[7];
          *((void *)v45 + 6) = v46[6];
          *((void *)v45 + 7) = v52;
          uint64_t v53 = v46[9];
          *((void *)v45 + 8) = v46[8];
          *((void *)v45 + 9) = v53;
          uint64_t v54 = v46[11];
          *((void *)v45 + 10) = v46[10];
          *((void *)v45 + 11) = v54;
          uint64_t v55 = v46[13];
          *((void *)v45 + 12) = v46[12];
          *((void *)v45 + 13) = v55;
          uint64_t v56 = v46[15];
          *((void *)v45 + 14) = v46[14];
          *((void *)v45 + 15) = v56;
          uint64_t v57 = v46[17];
          *((void *)v45 + 16) = v46[16];
          *((void *)v45 + 17) = v57;
          uint64_t v58 = v46[19];
          *((void *)v45 + 18) = v46[18];
          *((void *)v45 + 19) = v58;
          *((void *)v45 + 20) = v46[20];
          *((void *)v45 + 21) = v48;
          uint64_t v75 = v46[23];
          *((void *)v45 + 22) = v46[22];
          *((void *)v45 + 23) = v75;
          uint64_t v73 = v46[25];
          *((void *)v45 + 24) = v46[24];
          *((void *)v45 + 25) = v73;
          uint64_t v59 = v46[27];
          *((void *)v45 + 26) = v46[26];
          *((void *)v45 + 27) = v59;
          uint64_t v60 = v46[29];
          *((void *)v45 + 28) = v46[28];
          *((void *)v45 + 29) = v60;
          uint64_t v61 = v46[31];
          *((void *)v45 + 30) = v46[30];
          *((void *)v45 + 31) = v61;
          uint64_t v62 = v46[33];
          *((void *)v45 + 32) = v46[32];
          *((void *)v45 + 33) = v62;
          uint64_t v63 = v46[35];
          *((void *)v45 + 34) = v46[34];
          *((void *)v45 + 35) = v63;
          uint64_t v64 = v46[37];
          *((void *)v45 + 36) = v46[36];
          *((void *)v45 + 37) = v64;
          uint64_t v47 = (void *)v46[38];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          memcpy((char *)v31 + v44, v46, 0x130uLL);
        }
        *((void *)v45 + 38) = v47;
        v45[312] = *((unsigned char *)v46 + 312);
        uint64_t v65 = v46[41];
        *((void *)v45 + 40) = v46[40];
        *((void *)v45 + 41) = v65;
        *((_WORD *)v45 + 168) = *((_WORD *)v46 + 168);
        *((void *)v45 + 43) = v46[43];
        v45[352] = *((unsigned char *)v46 + 352);
        id v66 = v47;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        memcpy((char *)v31 + v44, v46, 0x161uLL);
      }
      (*(void (**)(void *, void, uint64_t, int *))(v70 + 56))(v31, 0, 1, v43);
    }
    *((unsigned char *)v3 + v15[21]) = *((unsigned char *)v16 + v15[21]);
  }
  return v3;
}

void *assignWithCopy for FMFFriend(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[8];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_21CB87590();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    uint64_t v14 = sub_21CA57E34((uint64_t *)&unk_267C951B0);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
LABEL_7:
  *(void *)((char *)a1 + a3[9]) = *(void *)((char *)a2 + a3[9]);
  *((unsigned char *)a1 + a3[10]) = *((unsigned char *)a2 + a3[10]);
  *((unsigned char *)a1 + a3[11]) = *((unsigned char *)a2 + a3[11]);
  *((unsigned char *)a1 + a3[12]) = *((unsigned char *)a2 + a3[12]);
  *((unsigned char *)a1 + a3[13]) = *((unsigned char *)a2 + a3[13]);
  *((unsigned char *)a1 + a3[14]) = *((unsigned char *)a2 + a3[14]);
  *(void *)((char *)a1 + a3[15]) = *(void *)((char *)a2 + a3[15]);
  *(void *)((char *)a1 + a3[16]) = *(void *)((char *)a2 + a3[16]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[17]) = *(void *)((char *)a2 + a3[17]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((unsigned char *)a1 + a3[18]) = *((unsigned char *)a2 + a3[18]);
  uint64_t v15 = a3[19];
  uint64_t v16 = (uint64_t)a1 + v15;
  uint64_t v17 = (char *)a2 + v15;
  uint64_t v18 = *(void *)((char *)a1 + v15 + 8);
  uint64_t v19 = *(void *)((char *)a2 + v15 + 8);
  if (v18)
  {
    if (v19)
    {
      *(void *)uint64_t v16 = *(void *)v17;
      *(void *)(v16 + 8) = *((void *)v17 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(v16 + 16) = *((void *)v17 + 2);
      *(void *)(v16 + 24) = *((void *)v17 + 3);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(v16 + 32) = v17[32];
      *(void *)(v16 + 40) = *((void *)v17 + 5);
      *(void *)(v16 + 48) = *((void *)v17 + 6);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_21CABF340(v16);
      long long v21 = *((_OWORD *)v17 + 1);
      long long v20 = *((_OWORD *)v17 + 2);
      long long v22 = *(_OWORD *)v17;
      *(void *)(v16 + 48) = *((void *)v17 + 6);
      *(_OWORD *)(v16 + 16) = v21;
      *(_OWORD *)(v16 + 32) = v20;
      *(_OWORD *)uint64_t v16 = v22;
    }
  }
  else if (v19)
  {
    *(void *)uint64_t v16 = *(void *)v17;
    *(void *)(v16 + 8) = *((void *)v17 + 1);
    *(void *)(v16 + 16) = *((void *)v17 + 2);
    *(void *)(v16 + 24) = *((void *)v17 + 3);
    *(unsigned char *)(v16 + 32) = v17[32];
    *(void *)(v16 + 40) = *((void *)v17 + 5);
    *(void *)(v16 + 48) = *((void *)v17 + 6);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v23 = *(_OWORD *)v17;
    long long v24 = *((_OWORD *)v17 + 1);
    long long v25 = *((_OWORD *)v17 + 2);
    *(void *)(v16 + 48) = *((void *)v17 + 6);
    *(_OWORD *)(v16 + 16) = v24;
    *(_OWORD *)(v16 + 32) = v25;
    *(_OWORD *)uint64_t v16 = v23;
  }
  uint64_t v26 = a3[20];
  uint64_t v27 = (uint64_t)a1 + v26;
  uint64_t v28 = (char *)a2 + v26;
  long long v29 = (int *)type metadata accessor for FMFLocation();
  uint64_t v30 = *((void *)v29 - 1);
  uint64_t v31 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v30 + 48);
  int v32 = v31(v27, 1, v29);
  int v33 = v31((uint64_t)v28, 1, v29);
  if (v32)
  {
    if (!v33)
    {
      uint64_t v71 = a3;
      *(void *)uint64_t v27 = *(void *)v28;
      *(void *)(v27 + 8) = *((void *)v28 + 1);
      *(unsigned char *)(v27 + 16) = v28[16];
      uint64_t v34 = *((void *)v28 + 3);
      *(unsigned char *)(v27 + 32) = v28[32];
      *(void *)(v27 + 24) = v34;
      *(unsigned char *)(v27 + 33) = v28[33];
      uint64_t v68 = v29;
      uint64_t v35 = v29[8];
      uint64_t v69 = (void *)(v27 + v35);
      uint64_t v36 = &v28[v35];
      uint64_t v37 = sub_21CB875D0();
      uint64_t v38 = *(void *)(v37 - 8);
      uint64_t v39 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48);
      swift_bridgeObjectRetain();
      if (v39(v36, 1, v37))
      {
        uint64_t v40 = sub_21CA57E34(&qword_267C96F00);
        memcpy(v69, v36, *(void *)(*(void *)(v40 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, char *, uint64_t))(v38 + 16))(v69, v36, v37);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v38 + 56))(v69, 0, 1, v37);
      }
      *(unsigned char *)(v27 + v68[9]) = v28[v68[9]];
      *(unsigned char *)(v27 + v68[10]) = v28[v68[10]];
      uint64_t v52 = v68[11];
      uint64_t v53 = (void *)(v27 + v52);
      uint64_t v54 = &v28[v52];
      a3 = v71;
      if (*((void *)v54 + 38))
      {
        if (*((void *)v54 + 21))
        {
          *uint64_t v53 = *(void *)v54;
          v53[1] = *((void *)v54 + 1);
          v53[2] = *((void *)v54 + 2);
          v53[3] = *((void *)v54 + 3);
          v53[4] = *((void *)v54 + 4);
          v53[5] = *((void *)v54 + 5);
          v53[6] = *((void *)v54 + 6);
          v53[7] = *((void *)v54 + 7);
          v53[8] = *((void *)v54 + 8);
          v53[9] = *((void *)v54 + 9);
          v53[10] = *((void *)v54 + 10);
          v53[11] = *((void *)v54 + 11);
          v53[12] = *((void *)v54 + 12);
          v53[13] = *((void *)v54 + 13);
          v53[14] = *((void *)v54 + 14);
          v53[15] = *((void *)v54 + 15);
          v53[16] = *((void *)v54 + 16);
          v53[17] = *((void *)v54 + 17);
          v53[18] = *((void *)v54 + 18);
          v53[19] = *((void *)v54 + 19);
          v53[20] = *((void *)v54 + 20);
          v53[21] = *((void *)v54 + 21);
          v53[22] = *((void *)v54 + 22);
          v53[23] = *((void *)v54 + 23);
          v53[24] = *((void *)v54 + 24);
          v53[25] = *((void *)v54 + 25);
          v53[26] = *((void *)v54 + 26);
          v53[27] = *((void *)v54 + 27);
          v53[28] = *((void *)v54 + 28);
          v53[29] = *((void *)v54 + 29);
          v53[30] = *((void *)v54 + 30);
          v53[31] = *((void *)v54 + 31);
          v53[32] = *((void *)v54 + 32);
          v53[33] = *((void *)v54 + 33);
          v53[34] = *((void *)v54 + 34);
          v53[35] = *((void *)v54 + 35);
          v53[36] = *((void *)v54 + 36);
          v53[37] = *((void *)v54 + 37);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          memcpy(v53, v54, 0x130uLL);
        }
        uint64_t v55 = (void *)*((void *)v54 + 38);
        v53[38] = v55;
        *((unsigned char *)v53 + 312) = v54[312];
        v53[40] = *((void *)v54 + 40);
        v53[41] = *((void *)v54 + 41);
        *((unsigned char *)v53 + 336) = v54[336];
        *((unsigned char *)v53 + 337) = v54[337];
        v53[43] = *((void *)v54 + 43);
        *((unsigned char *)v53 + 352) = v54[352];
        id v56 = v55;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        memcpy(v53, v54, 0x161uLL);
      }
      (*(void (**)(uint64_t, void, uint64_t, int *))(v30 + 56))(v27, 0, 1, v68);
      goto LABEL_34;
    }
    goto LABEL_21;
  }
  if (v33)
  {
    sub_21CA58218(v27, (uint64_t (*)(void))type metadata accessor for FMFLocation);
LABEL_21:
    size_t v41 = *(void *)(*(void *)(sub_21CA57E34((uint64_t *)&unk_267C96EF0) - 8) + 64);
    uint64_t v42 = (void *)v27;
    uint64_t v43 = v28;
LABEL_22:
    memcpy(v42, v43, v41);
    goto LABEL_34;
  }
  *(void *)uint64_t v27 = *(void *)v28;
  *(void *)(v27 + 8) = *((void *)v28 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v27 + 16) = v28[16];
  uint64_t v44 = *((void *)v28 + 3);
  *(unsigned char *)(v27 + 32) = v28[32];
  *(void *)(v27 + 24) = v44;
  *(unsigned char *)(v27 + 33) = v28[33];
  uint64_t v45 = v29[8];
  uint64_t v46 = (void *)(v27 + v45);
  uint64_t v73 = &v28[v45];
  uint64_t v47 = sub_21CB875D0();
  uint64_t v70 = *(void *)(v47 - 8);
  uint64_t v72 = v46;
  uint64_t v48 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v70 + 48);
  LODWORD(v46) = v48(v46, 1, v47);
  int v49 = v48(v73, 1, v47);
  if (v46)
  {
    if (v49)
    {
      size_t v50 = *(void *)(*(void *)(sub_21CA57E34(&qword_267C96F00) - 8) + 64);
      uint64_t v51 = v72;
LABEL_37:
      memcpy(v51, v73, v50);
      goto LABEL_40;
    }
    (*(void (**)(void *, char *, uint64_t))(v70 + 16))(v72, v73, v47);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v70 + 56))(v72, 0, 1, v47);
  }
  else
  {
    if (v49)
    {
      (*(void (**)(void *, uint64_t))(v70 + 8))(v72, v47);
      size_t v50 = *(void *)(*(void *)(sub_21CA57E34(&qword_267C96F00) - 8) + 64);
      uint64_t v51 = v72;
      goto LABEL_37;
    }
    (*(void (**)(void *, char *, uint64_t))(v70 + 24))(v72, v73, v47);
  }
LABEL_40:
  *(unsigned char *)(v27 + v29[9]) = v28[v29[9]];
  *(unsigned char *)(v27 + v29[10]) = v28[v29[10]];
  uint64_t v58 = v29[11];
  uint64_t v59 = v27 + v58;
  uint64_t v60 = &v28[v58];
  uint64_t v61 = *(void *)&v28[v58 + 304];
  if (*(void *)(v59 + 304))
  {
    if (v61)
    {
      uint64_t v62 = *((void *)v60 + 21);
      if (*(void *)(v59 + 168))
      {
        if (v62)
        {
          *(void *)uint64_t v59 = *(void *)v60;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(void *)(v59 + 8) = *((void *)v60 + 1);
          *(void *)(v59 + 16) = *((void *)v60 + 2);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(void *)(v59 + 24) = *((void *)v60 + 3);
          *(void *)(v59 + 32) = *((void *)v60 + 4);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(void *)(v59 + 40) = *((void *)v60 + 5);
          *(void *)(v59 + 48) = *((void *)v60 + 6);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(void *)(v59 + 56) = *((void *)v60 + 7);
          *(void *)(v59 + 64) = *((void *)v60 + 8);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(void *)(v59 + 72) = *((void *)v60 + 9);
          *(void *)(v59 + 80) = *((void *)v60 + 10);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(void *)(v59 + 88) = *((void *)v60 + 11);
          *(void *)(v59 + 96) = *((void *)v60 + 12);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(void *)(v59 + 104) = *((void *)v60 + 13);
          *(void *)(v59 + 112) = *((void *)v60 + 14);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(void *)(v59 + 120) = *((void *)v60 + 15);
          *(void *)(v59 + 128) = *((void *)v60 + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(void *)(v59 + 136) = *((void *)v60 + 17);
          *(void *)(v59 + 144) = *((void *)v60 + 18);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(void *)(v59 + 152) = *((void *)v60 + 19);
          *(void *)(v59 + 160) = *((void *)v60 + 20);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(void *)(v59 + 168) = *((void *)v60 + 21);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(void *)(v59 + 176) = *((void *)v60 + 22);
          *(void *)(v59 + 184) = *((void *)v60 + 23);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(void *)(v59 + 192) = *((void *)v60 + 24);
          *(void *)(v59 + 200) = *((void *)v60 + 25);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(void *)(v59 + 208) = *((void *)v60 + 26);
          *(void *)(v59 + 216) = *((void *)v60 + 27);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(void *)(v59 + 224) = *((void *)v60 + 28);
          *(void *)(v59 + 232) = *((void *)v60 + 29);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(void *)(v59 + 240) = *((void *)v60 + 30);
          *(void *)(v59 + 248) = *((void *)v60 + 31);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(void *)(v59 + 256) = *((void *)v60 + 32);
          *(void *)(v59 + 264) = *((void *)v60 + 33);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(void *)(v59 + 272) = *((void *)v60 + 34);
          *(void *)(v59 + 280) = *((void *)v60 + 35);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(void *)(v59 + 288) = *((void *)v60 + 36);
          *(void *)(v59 + 296) = *((void *)v60 + 37);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
LABEL_54:
          uint64_t v63 = (void *)*((void *)v60 + 38);
          uint64_t v64 = *(void **)(v59 + 304);
          *(void *)(v59 + 304) = v63;
          id v65 = v63;

          *(unsigned char *)(v59 + 312) = v60[312];
          *(void *)(v59 + 320) = *((void *)v60 + 40);
          *(void *)(v59 + 328) = *((void *)v60 + 41);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(unsigned char *)(v59 + 336) = v60[336];
          *(unsigned char *)(v59 + 337) = v60[337];
          *(void *)(v59 + 344) = *((void *)v60 + 43);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(unsigned char *)(v59 + 352) = v60[352];
          goto LABEL_34;
        }
        sub_21CA757AC(v59);
      }
      else if (v62)
      {
        *(void *)uint64_t v59 = *(void *)v60;
        *(void *)(v59 + 8) = *((void *)v60 + 1);
        *(void *)(v59 + 16) = *((void *)v60 + 2);
        *(void *)(v59 + 24) = *((void *)v60 + 3);
        *(void *)(v59 + 32) = *((void *)v60 + 4);
        *(void *)(v59 + 40) = *((void *)v60 + 5);
        *(void *)(v59 + 48) = *((void *)v60 + 6);
        *(void *)(v59 + 56) = *((void *)v60 + 7);
        *(void *)(v59 + 64) = *((void *)v60 + 8);
        *(void *)(v59 + 72) = *((void *)v60 + 9);
        *(void *)(v59 + 80) = *((void *)v60 + 10);
        *(void *)(v59 + 88) = *((void *)v60 + 11);
        *(void *)(v59 + 96) = *((void *)v60 + 12);
        *(void *)(v59 + 104) = *((void *)v60 + 13);
        *(void *)(v59 + 112) = *((void *)v60 + 14);
        *(void *)(v59 + 120) = *((void *)v60 + 15);
        *(void *)(v59 + 128) = *((void *)v60 + 16);
        *(void *)(v59 + 136) = *((void *)v60 + 17);
        *(void *)(v59 + 144) = *((void *)v60 + 18);
        *(void *)(v59 + 152) = *((void *)v60 + 19);
        *(void *)(v59 + 160) = *((void *)v60 + 20);
        *(void *)(v59 + 168) = *((void *)v60 + 21);
        *(void *)(v59 + 176) = *((void *)v60 + 22);
        *(void *)(v59 + 184) = *((void *)v60 + 23);
        *(void *)(v59 + 192) = *((void *)v60 + 24);
        *(void *)(v59 + 200) = *((void *)v60 + 25);
        *(void *)(v59 + 208) = *((void *)v60 + 26);
        *(void *)(v59 + 216) = *((void *)v60 + 27);
        *(void *)(v59 + 224) = *((void *)v60 + 28);
        *(void *)(v59 + 232) = *((void *)v60 + 29);
        *(void *)(v59 + 240) = *((void *)v60 + 30);
        *(void *)(v59 + 248) = *((void *)v60 + 31);
        *(void *)(v59 + 256) = *((void *)v60 + 32);
        *(void *)(v59 + 264) = *((void *)v60 + 33);
        *(void *)(v59 + 272) = *((void *)v60 + 34);
        *(void *)(v59 + 280) = *((void *)v60 + 35);
        *(void *)(v59 + 288) = *((void *)v60 + 36);
        *(void *)(v59 + 296) = *((void *)v60 + 37);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_54;
      }
      memcpy((void *)v59, v60, 0x130uLL);
      goto LABEL_54;
    }
    sub_21CA92D04(v59);
LABEL_49:
    uint64_t v42 = (void *)v59;
    uint64_t v43 = v60;
    size_t v41 = 353;
    goto LABEL_22;
  }
  if (!v61) {
    goto LABEL_49;
  }
  if (*((void *)v60 + 21))
  {
    *(void *)uint64_t v59 = *(void *)v60;
    *(void *)(v59 + 8) = *((void *)v60 + 1);
    *(void *)(v59 + 16) = *((void *)v60 + 2);
    *(void *)(v59 + 24) = *((void *)v60 + 3);
    *(void *)(v59 + 32) = *((void *)v60 + 4);
    *(void *)(v59 + 40) = *((void *)v60 + 5);
    *(void *)(v59 + 48) = *((void *)v60 + 6);
    *(void *)(v59 + 56) = *((void *)v60 + 7);
    *(void *)(v59 + 64) = *((void *)v60 + 8);
    *(void *)(v59 + 72) = *((void *)v60 + 9);
    *(void *)(v59 + 80) = *((void *)v60 + 10);
    *(void *)(v59 + 88) = *((void *)v60 + 11);
    *(void *)(v59 + 96) = *((void *)v60 + 12);
    *(void *)(v59 + 104) = *((void *)v60 + 13);
    *(void *)(v59 + 112) = *((void *)v60 + 14);
    *(void *)(v59 + 120) = *((void *)v60 + 15);
    *(void *)(v59 + 128) = *((void *)v60 + 16);
    *(void *)(v59 + 136) = *((void *)v60 + 17);
    *(void *)(v59 + 144) = *((void *)v60 + 18);
    *(void *)(v59 + 152) = *((void *)v60 + 19);
    *(void *)(v59 + 160) = *((void *)v60 + 20);
    *(void *)(v59 + 168) = *((void *)v60 + 21);
    *(void *)(v59 + 176) = *((void *)v60 + 22);
    *(void *)(v59 + 184) = *((void *)v60 + 23);
    *(void *)(v59 + 192) = *((void *)v60 + 24);
    *(void *)(v59 + 200) = *((void *)v60 + 25);
    *(void *)(v59 + 208) = *((void *)v60 + 26);
    *(void *)(v59 + 216) = *((void *)v60 + 27);
    *(void *)(v59 + 224) = *((void *)v60 + 28);
    *(void *)(v59 + 232) = *((void *)v60 + 29);
    *(void *)(v59 + 240) = *((void *)v60 + 30);
    *(void *)(v59 + 248) = *((void *)v60 + 31);
    *(void *)(v59 + 256) = *((void *)v60 + 32);
    *(void *)(v59 + 264) = *((void *)v60 + 33);
    *(void *)(v59 + 272) = *((void *)v60 + 34);
    *(void *)(v59 + 280) = *((void *)v60 + 35);
    *(void *)(v59 + 288) = *((void *)v60 + 36);
    *(void *)(v59 + 296) = *((void *)v60 + 37);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    memcpy((void *)v59, v60, 0x130uLL);
  }
  id v66 = (void *)*((void *)v60 + 38);
  *(void *)(v59 + 304) = v66;
  *(unsigned char *)(v59 + 312) = v60[312];
  *(void *)(v59 + 320) = *((void *)v60 + 40);
  *(void *)(v59 + 328) = *((void *)v60 + 41);
  *(unsigned char *)(v59 + 336) = v60[336];
  *(unsigned char *)(v59 + 337) = v60[337];
  *(void *)(v59 + 344) = *((void *)v60 + 43);
  *(unsigned char *)(v59 + 352) = v60[352];
  id v67 = v66;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
LABEL_34:
  *((unsigned char *)a1 + a3[21]) = *((unsigned char *)a2 + a3[21]);
  return a1;
}

uint64_t sub_21CABF340(uint64_t a1)
{
  return a1;
}

uint64_t initializeWithTake for FMFFriend(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  uint64_t v7 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v7;
  uint64_t v8 = a3[8];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (const void *)(a2 + v8);
  uint64_t v11 = sub_21CB87590();
  uint64_t v12 = *(void *)(v11 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
  {
    uint64_t v13 = sub_21CA57E34((uint64_t *)&unk_267C951B0);
    memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v12 + 32))(v9, v10, v11);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  uint64_t v14 = a3[10];
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  *(unsigned char *)(a1 + v14) = *(unsigned char *)(a2 + v14);
  uint64_t v15 = a3[12];
  *(unsigned char *)(a1 + a3[11]) = *(unsigned char *)(a2 + a3[11]);
  *(unsigned char *)(a1 + v15) = *(unsigned char *)(a2 + v15);
  uint64_t v16 = a3[14];
  *(unsigned char *)(a1 + a3[13]) = *(unsigned char *)(a2 + a3[13]);
  *(unsigned char *)(a1 + v16) = *(unsigned char *)(a2 + v16);
  uint64_t v17 = a3[16];
  *(void *)(a1 + a3[15]) = *(void *)(a2 + a3[15]);
  *(void *)(a1 + v17) = *(void *)(a2 + v17);
  uint64_t v18 = a3[18];
  *(void *)(a1 + a3[17]) = *(void *)(a2 + a3[17]);
  *(unsigned char *)(a1 + v18) = *(unsigned char *)(a2 + v18);
  uint64_t v19 = a3[19];
  uint64_t v20 = a3[20];
  uint64_t v21 = a1 + v19;
  uint64_t v22 = a2 + v19;
  long long v23 = *(_OWORD *)(v22 + 16);
  *(_OWORD *)uint64_t v21 = *(_OWORD *)v22;
  *(_OWORD *)(v21 + 16) = v23;
  long long v24 = *(_OWORD *)(v22 + 32);
  *(void *)(v21 + 48) = *(void *)(v22 + 48);
  *(_OWORD *)(v21 + 32) = v24;
  long long v25 = (_OWORD *)(a1 + v20);
  uint64_t v26 = (_OWORD *)(a2 + v20);
  uint64_t v27 = (int *)type metadata accessor for FMFLocation();
  uint64_t v28 = *((void *)v27 - 1);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v28 + 48))(v26, 1, v27))
  {
    uint64_t v29 = sub_21CA57E34((uint64_t *)&unk_267C96EF0);
    memcpy(v25, v26, *(void *)(*(void *)(v29 - 8) + 64));
  }
  else
  {
    _OWORD *v25 = *v26;
    *((unsigned char *)v25 + 16) = *((unsigned char *)v26 + 16);
    *((void *)v25 + 3) = *((void *)v26 + 3);
    *((_WORD *)v25 + 16) = *((_WORD *)v26 + 16);
    uint64_t v30 = v27[8];
    __dst = (char *)v25 + v30;
    uint64_t v31 = (char *)v26 + v30;
    uint64_t v32 = sub_21CB875D0();
    uint64_t v33 = *(void *)(v32 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v31, 1, v32))
    {
      uint64_t v34 = sub_21CA57E34(&qword_267C96F00);
      memcpy(__dst, v31, *(void *)(*(void *)(v34 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v33 + 32))(__dst, v31, v32);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v33 + 56))(__dst, 0, 1, v32);
    }
    *((unsigned char *)v25 + v27[9]) = *((unsigned char *)v26 + v27[9]);
    *((unsigned char *)v25 + v27[10]) = *((unsigned char *)v26 + v27[10]);
    memcpy((char *)v25 + v27[11], (char *)v26 + v27[11], 0x161uLL);
    (*(void (**)(_OWORD *, void, uint64_t, int *))(v28 + 56))(v25, 0, 1, v27);
  }
  *(unsigned char *)(a1 + a3[21]) = *(unsigned char *)(a2 + a3[21]);
  return a1;
}

uint64_t sub_21CABF740(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_21CA57E34((uint64_t *)&unk_267C951B0);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 32);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_21CA57E34((uint64_t *)&unk_267C96EF0);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 80);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t sub_21CABF874(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v8 = sub_21CA57E34((uint64_t *)&unk_267C951B0);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 32);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_21CA57E34((uint64_t *)&unk_267C96EF0);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 80);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

uint64_t getEnumTagSinglePayload for FMFFriend.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF0) {
    goto LABEL_17;
  }
  if (a2 + 16 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 16) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 16;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 16;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 16;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x11;
  int v8 = v6 - 17;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for FMFFriend.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 16 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 16) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF0) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xEF)
  {
    unsigned int v6 = ((a2 - 240) >> 8) + 1;
    *uint64_t result = a2 + 16;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x21CABFB04);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 16;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FMFFriend.CodingKeys()
{
  return &type metadata for FMFFriend.CodingKeys;
}

unint64_t sub_21CABFB40()
{
  unint64_t result = qword_267C95A80;
  if (!qword_267C95A80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C95A80);
  }
  return result;
}

unint64_t sub_21CABFB98()
{
  unint64_t result = qword_267C95A88;
  if (!qword_267C95A88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C95A88);
  }
  return result;
}

unint64_t sub_21CABFBF0()
{
  unint64_t result = qword_267C95A90;
  if (!qword_267C95A90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C95A90);
  }
  return result;
}

uint64_t sub_21CABFC44()
{
  unint64_t v0 = sub_21CB88F80();
  swift_bridgeObjectRelease();
  if (v0 >= 0x11) {
    return 17;
  }
  else {
    return v0;
  }
}

uint64_t sub_21CABFC98(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

FMFCore::FMFRelationshipType __swiftcall FMFRelationshipType.init(rawValue:)(FMFCore::FMFRelationshipType rawValue)
{
  v1->rawValue = rawValue.rawValue;
  return rawValue;
}

uint64_t FMFRelationshipType.rawValue.getter()
{
  return *(void *)v0;
}

void static FMFRelationshipType.none.getter(void *a1@<X8>)
{
  *a1 = 0;
}

unint64_t FMFRelationshipType.debugDescription.getter()
{
  return 0xD000000000000020;
}

unint64_t sub_21CABFDA0()
{
  unint64_t result = qword_267C95AA0;
  if (!qword_267C95AA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C95AA0);
  }
  return result;
}

unint64_t sub_21CABFDF8()
{
  unint64_t result = qword_267C95AA8;
  if (!qword_267C95AA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C95AA8);
  }
  return result;
}

uint64_t static FMFDemoError.== infix(_:_:)()
{
  return 1;
}

uint64_t FMFDemoError.hash(into:)()
{
  return sub_21CB89060();
}

uint64_t FMFDemoError.hashValue.getter()
{
  return sub_21CB89090();
}

unint64_t sub_21CABFEC8()
{
  unint64_t result = qword_267C95AC0;
  if (!qword_267C95AC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C95AC0);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for FMFDemoError(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x21CABFFB8);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for FMFDemoError()
{
  return &type metadata for FMFDemoError;
}

void *sub_21CABFFF0(uint64_t a1, uint64_t a2, long long *a3)
{
  uint64_t v15 = a2;
  uint64_t v16 = a3;
  uint64_t v14 = a1;
  uint64_t v13 = sub_21CB888F0();
  uint64_t v4 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  unsigned int v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_21CB888B0();
  MEMORY[0x270FA5388](v7);
  uint64_t v8 = sub_21CB88150();
  MEMORY[0x270FA5388](v8 - 8);
  v3[3] = 0;
  swift_unknownObjectWeakInit();
  v3[5] = 0;
  swift_unknownObjectWeakInit();
  sub_21CA182AC();
  sub_21CB88120();
  uint64_t v17 = MEMORY[0x263F8EE78];
  sub_21CA364F8((unint64_t *)&qword_267C96F60, MEMORY[0x263F8F0F8]);
  sub_21CA57E34((uint64_t *)&unk_267C96F90);
  sub_21CA3566C((unint64_t *)&qword_267C96F70, (uint64_t *)&unk_267C96F90);
  sub_21CB88A60();
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x263F8F130], v13);
  v3[6] = sub_21CB88930();
  uint64_t v9 = v14;
  uint64_t v10 = v16;
  v3[12] = v15;
  v3[13] = v9;
  sub_21CA6375C(v10, (uint64_t)(v3 + 7));
  return v3;
}

uint64_t sub_21CAC0270(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v19[0] = a4;
  uint64_t v8 = sub_21CB88100();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_21CB88150();
  uint64_t v12 = *(void *)(v20 - 8);
  MEMORY[0x270FA5388](v20);
  uint64_t v14 = (char *)v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19[1] = *(void *)(v4 + 48);
  uint64_t v15 = swift_allocObject();
  swift_weakInit();
  uint64_t v16 = (void *)swift_allocObject();
  v16[2] = v19[0];
  v16[3] = a1;
  v16[4] = a2;
  v16[5] = a3;
  v16[6] = v15;
  aBlock[4] = sub_21CAC1778;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_21CA1B084;
  aBlock[3] = &unk_26CD6B970;
  uint64_t v17 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_retain();
  sub_21CB88120();
  uint64_t v21 = MEMORY[0x263F8EE78];
  sub_21CA364F8((unint64_t *)&qword_267C96FC0, MEMORY[0x263F8F030]);
  sub_21CA57E34((uint64_t *)&unk_267C96DD0);
  sub_21CA3566C((unint64_t *)&qword_267C96FD0, (uint64_t *)&unk_267C96DD0);
  sub_21CB88A60();
  MEMORY[0x21D4B5A20](0, v14, v11, v17);
  _Block_release(v17);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v20);
  swift_release();
  return swift_release();
}

void sub_21CAC0574(uint64_t a1, void (*a2)(void, void), uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v49 = a5;
  uint64_t v9 = sub_21CB87590();
  uint64_t v47 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v46 = (char *)v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_267C94990 != -1) {
    swift_once();
  }
  uint64_t v11 = a4 + 16;
  uint64_t v12 = sub_21CB880A0();
  uint64_t v13 = sub_21CA4CC18(v12, (uint64_t)qword_267CA5368);
  swift_retain_n();
  uint64_t v14 = sub_21CB88070();
  os_log_type_t v15 = sub_21CB88880();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v16 = swift_slowAlloc();
    uint64_t v45 = a2;
    uint64_t v17 = (uint8_t *)v16;
    uint64_t v18 = swift_slowAlloc();
    uint64_t v48 = a4 + 16;
    uint64_t v19 = v18;
    v44[1] = v13;
    *(_DWORD *)uint64_t v17 = 136315138;
    v54[0] = v18;
    uint64_t v20 = sub_21CB89110();
    uint64_t v52 = sub_21CA4E450(v20, v21, v54);
    sub_21CB889C0();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_21CA00000, v14, v15, "FMFDemoInteractionController: Handling %s.", v17, 0xCu);
    swift_arrayDestroy();
    uint64_t v22 = v19;
    uint64_t v11 = v48;
    MEMORY[0x21D4B6B70](v22, -1, -1);
    long long v23 = v17;
    a2 = v45;
    MEMORY[0x21D4B6B70](v23, -1, -1);
  }
  else
  {

    swift_release_n();
  }
  long long v24 = (void *)swift_allocObject();
  v24[2] = v49;
  void v24[3] = a2;
  v24[4] = a3;
  v54[0] = a1;
  v54[1] = (uint64_t)sub_21CAC17C0;
  v54[2] = (uint64_t)v24;
  type metadata accessor for FMFBaseRequest();
  sub_21CB889A0();
  swift_retain_n();
  swift_retain_n();
  sub_21CA5EEBC(&qword_267C975A0);
  swift_getFunctionTypeMetadata2();
  swift_getTupleTypeMetadata2();
  sub_21CA57E34(&qword_267C95AC8);
  if (swift_dynamicCast())
  {
    long long v25 = v53;
    swift_beginAccess();
    uint64_t Strong = swift_weakLoadStrong();
    if (Strong)
    {
      uint64_t v27 = *(void **)(Strong + 104);
      uint64_t v28 = (uint64_t)v46;
      sub_21CB87580();
      sub_21CA844DC(v28);
      (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v28, v9);
      uint64_t v29 = v27[4];
      uint64_t v30 = v27[5];
      uint64_t v32 = v27[6];
      uint64_t v31 = v27[7];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v33 = sub_21CAC1844(v29, v30, v32, v31);
      uint64_t v50 = 0;
      uint64_t v51 = v33;
      swift_retain();
      v25(&v51, &v50);
      swift_release();
      type metadata accessor for FMFInitRefreshClientResponse();
      uint64_t v34 = swift_dynamicCastClass();
      if (v34)
      {
        uint64_t v35 = v34;
        swift_retain();
        sub_21CA23D70(v35);
        swift_release();
      }
      swift_release();
      swift_release();
      swift_release();
    }
    else
    {
      swift_release();
    }
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
  }
  else
  {
    swift_release();
    swift_release();
    swift_retain_n();
    uint64_t v36 = sub_21CB88070();
    os_log_type_t v37 = sub_21CB88880();
    if (os_log_type_enabled(v36, v37))
    {
      uint64_t v38 = swift_slowAlloc();
      uint64_t v48 = v11;
      uint64_t v39 = (uint8_t *)v38;
      uint64_t v40 = swift_slowAlloc();
      *(_DWORD *)uint64_t v39 = 136315138;
      v54[0] = v40;
      uint64_t v41 = sub_21CB89110();
      uint64_t v52 = sub_21CA4E450(v41, v42, v54);
      sub_21CB889C0();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_21CA00000, v36, v37, "FMFDemoInteractionController: Received %s, which is unsupported in demo mode.", v39, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x21D4B6B70](v40, -1, -1);
      MEMORY[0x21D4B6B70](v39, -1, -1);
    }
    else
    {

      swift_release_n();
    }
    swift_beginAccess();
    if (swift_weakLoadStrong())
    {
      sub_21CAC1108();
      swift_release();
    }
    sub_21CAC17F0();
    uint64_t v43 = (void *)swift_allocError();
    a2(0, v43);
    swift_release();
    swift_release();
  }
}

uint64_t sub_21CAC0C34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  if (qword_267C94990 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_21CB880A0();
  sub_21CA4CC18(v8, (uint64_t)qword_267CA5368);
  swift_retain_n();
  uint64_t v9 = sub_21CB88070();
  os_log_type_t v10 = sub_21CB88880();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    uint64_t v22 = a2;
    uint64_t v12 = swift_slowAlloc();
    *(_DWORD *)uint64_t v11 = 136315138;
    uint64_t v23 = v12;
    uint64_t v13 = sub_21CB89110();
    sub_21CA4E450(v13, v14, &v23);
    sub_21CB889C0();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_21CA00000, v9, v10, "FMFDemoInteractionController: Forwarding %s to real server interaction controller.", v11, 0xCu);
    swift_arrayDestroy();
    uint64_t v15 = v12;
    a2 = v22;
    MEMORY[0x21D4B6B70](v15, -1, -1);
    MEMORY[0x21D4B6B70](v11, -1, -1);
  }
  else
  {

    swift_release_n();
  }
  uint64_t v16 = v4 + 7;
  uint64_t v17 = v4[10];
  uint64_t v18 = v4[11];
  sub_21CA2B2CC(v16, v17);
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = a2;
  *(void *)(v19 + 24) = a3;
  uint64_t v20 = *(void (**)(uint64_t, uint64_t (*)(uint64_t, void *), uint64_t, uint64_t, uint64_t))(v18 + 72);
  swift_retain();
  v20(a1, sub_21CAC16F0, v19, v17, v18);
  return swift_release();
}

uint64_t sub_21CAC0E98(uint64_t a1, void *a2, uint64_t (*a3)(uint64_t, void *))
{
  if (qword_267C94990 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_21CB880A0();
  sub_21CA4CC18(v6, (uint64_t)qword_267CA5368);
  id v7 = a2;
  id v8 = a2;
  swift_retain();
  uint64_t v9 = sub_21CB88070();
  os_log_type_t v10 = sub_21CB88880();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    uint64_t v17 = v12;
    *(_DWORD *)uint64_t v11 = 136315394;
    sub_21CA4E450(0xD00000000000001FLL, 0x800000021CB957B0, &v17);
    sub_21CB889C0();
    swift_release();
    *(_WORD *)(v11 + 12) = 2080;
    if (a2)
    {
      swift_getErrorValue();
      uint64_t v13 = sub_21CB89000();
      unint64_t v15 = v14;
    }
    else
    {
      unint64_t v15 = 0xE400000000000000;
      uint64_t v13 = 1701736302;
    }
    sub_21CA4E450(v13, v15, &v17);
    sub_21CB889C0();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_21CA00000, v9, v10, "FMFDemoInteractionController: Received %s, (error: %s) from real server interaction controller.", (uint8_t *)v11, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x21D4B6B70](v12, -1, -1);
    MEMORY[0x21D4B6B70](v11, -1, -1);
  }
  else
  {
    swift_release();
  }
  return a3(a1, a2);
}

uint64_t sub_21CAC1108()
{
  uint64_t v0 = sub_21CA57E34(&qword_267C95190);
  uint64_t v1 = MEMORY[0x270FA5388](v0 - 8);
  int v3 = (char *)&v30 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v1);
  uint64_t v5 = (char *)&v30 - v4;
  type metadata accessor for FMLocalize();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v7 = self;
  id v8 = objc_msgSend(v7, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v9 = sub_21CB872B0();
  uint64_t v11 = v10;

  id v12 = objc_msgSend(v7, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v13 = sub_21CB872B0();
  uint64_t v15 = v14;

  uint64_t v16 = sub_21CB87480();
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v5, 1, 1, v16);
  v17(v3, 1, 1, v16);
  type metadata accessor for FMFAlert();
  uint64_t v18 = (void *)swift_allocObject();
  _OWORD v18[3] = 0;
  swift_unknownObjectWeakInit();
  v18[4] = 0xD00000000000001CLL;
  v18[5] = 0x800000021CB95740;
  v18[6] = v9;
  v18[7] = v11;
  uint64_t v19 = v30;
  v18[8] = 0;
  v18[9] = 0;
  v18[10] = v13;
  v18[11] = v15;
  v18[12] = 0;
  v18[13] = 0;
  sub_21CA26A4C((uint64_t)v5, (uint64_t)v18 + OBJC_IVAR____TtC7FMFCore8FMFAlert_okButtonURL, &qword_267C95190);
  sub_21CA26A4C((uint64_t)v3, (uint64_t)v18 + OBJC_IVAR____TtC7FMFCore8FMFAlert_cancelButtonURL, &qword_267C95190);
  *((unsigned char *)v18 + OBJC_IVAR____TtC7FMFCore8FMFAlert_alertType) = 5;
  uint64_t v20 = MEMORY[0x21D4B6C80](v19 + 16);
  if (!v20) {
    return swift_release();
  }
  uint64_t v21 = v20;
  uint64_t v22 = qword_267C94990;
  swift_retain();
  if (v22 != -1) {
    swift_once();
  }
  uint64_t v23 = sub_21CB880A0();
  sub_21CA4CC18(v23, (uint64_t)qword_267CA5368);
  long long v24 = sub_21CB88070();
  os_log_type_t v25 = sub_21CB88880();
  if (os_log_type_enabled(v24, v25))
  {
    uint64_t v26 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v26 = 0;
    _os_log_impl(&dword_21CA00000, v24, v25, "FMFManager: didReceive serverAlert", v26, 2u);
    MEMORY[0x21D4B6B70](v26, -1, -1);
  }

  swift_beginAccess();
  if (MEMORY[0x21D4B6C80](v21 + 32))
  {
    uint64_t v27 = *(void *)(v21 + 40);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, void *, uint64_t, uint64_t))(v27 + 104))(v21, v18, ObjectType, v27);
    swift_release();
    swift_release();
    swift_unknownObjectRelease();
  }
  else
  {
    swift_release();
    swift_release();
  }
  return swift_unknownObjectRelease();
}

uint64_t sub_21CAC1504()
{
  sub_21CA640FC(v0 + 16);
  sub_21CA640FC(v0 + 32);

  sub_21CA2B0D0(v0 + 56);
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for FMFDemoInteractionController()
{
  return self;
}

uint64_t sub_21CAC1588(uint64_t a1, uint64_t a2)
{
  *(void *)(*(void *)v2 + 24) = a2;
  swift_unknownObjectWeakAssign();

  return swift_unknownObjectRelease();
}

uint64_t sub_21CAC15D0(uint64_t a1, uint64_t a2)
{
  *(void *)(*(void *)v2 + 40) = a2;
  swift_unknownObjectWeakAssign();

  return swift_unknownObjectRelease();
}

uint64_t sub_21CAC1618()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 80);
  uint64_t v2 = *(void *)(*(void *)v0 + 88);
  sub_21CA2B2CC((void *)(*(void *)v0 + 56), v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 56))(v1, v2);
}

uint64_t sub_21CAC1670(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21CAC0270(a1, a2, a3, a4);
}

uint64_t sub_21CAC1694(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_21CAC0C34(a1, a2, a3);
}

uint64_t sub_21CAC16B8()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_21CAC16F0(uint64_t a1, void *a2)
{
  return sub_21CAC0E98(a1, a2, *(uint64_t (**)(uint64_t, void *))(v2 + 16));
}

uint64_t sub_21CAC16F8()
{
  swift_weakDestroy();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_21CAC1730()
{
  swift_release();
  swift_release();
  swift_release();

  return MEMORY[0x270FA0238](v0, 56, 7);
}

void sub_21CAC1778()
{
  sub_21CAC0574(*(void *)(v0 + 24), *(void (**)(void, void))(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 16));
}

uint64_t sub_21CAC1788()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t sub_21CAC17C0(void *a1, void *a2)
{
  return (*(uint64_t (**)(void, void))(v2 + 24))(*a1, *a2);
}

unint64_t sub_21CAC17F0()
{
  unint64_t result = qword_267C95AD0;
  if (!qword_267C95AD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C95AD0);
  }
  return result;
}

uint64_t sub_21CAC1844(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_21CA57E34(&qword_267C94E48);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = &v16[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = MEMORY[0x263F8EE78];
  unint64_t v12 = sub_21CB78C58(MEMORY[0x263F8EE78]);
  unint64_t v13 = sub_21CB78C58(v11);
  uint64_t v14 = type metadata accessor for FMFCommandResponseFragment();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v10, 1, 1, v14);
  memset(v20, 0, sizeof(v20));
  uint64_t v18 = 0;
  char v19 = 1;
  memset(v17, 0, 57);
  sub_21CA6E2F0((uint64_t)v21);
  sub_21CA26A4C((uint64_t)v21, (uint64_t)v16, (uint64_t *)&unk_267C96EE0);
  type metadata accessor for FMFInitRefreshClientResponse();
  swift_allocObject();
  return sub_21CA6DF00(v12, v13, (uint64_t)v10, 0, 200, 0, 0, 0, v20, &v18, v17, (uint64_t)v16, a3, a4, a2, a1, v11, v11, v11,
           v11,
           v11,
           v11,
           v11);
}

void sub_21CAC19FC()
{
}

unint64_t sub_21CAC1A2C(char a1)
{
  unint64_t result = 0x54746E6572727563;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x656D614E707061;
      break;
    case 2:
      unint64_t result = 0x6973726556707061;
      break;
    case 3:
      unint64_t result = 0x54746375646F7270;
      break;
    case 4:
      unint64_t result = 0x6F6973726556736FLL;
      break;
    case 5:
      unint64_t result = 0x646C697542736FLL;
      break;
    case 6:
      unint64_t result = 0x6C43656369766564;
      break;
    case 7:
      unint64_t result = 0x4455656369766564;
      break;
    case 8:
      unint64_t result = 0x7365527070417369;
      break;
    case 9:
      unint64_t result = 0xD000000000000011;
      break;
    case 10:
      unint64_t result = 0xD000000000000012;
      break;
    case 11:
      unint64_t result = 0x6E656B6F54737061;
      break;
    case 12:
      unint64_t result = 0x65646F4D68737570;
      break;
    case 13:
      unint64_t result = 0xD000000000000016;
      break;
    case 14:
      unint64_t result = 0x6956776F646E6977;
      break;
    case 15:
      unint64_t result = 0x736F4D746E6F7266;
      break;
    case 16:
      unint64_t result = 0x4B53656369766564;
      break;
    case 17:
      unint64_t result = 0x437972746E756F63;
      break;
    case 18:
      unint64_t result = 0x6F436E6F69676572;
      break;
    case 19:
      unint64_t result = 0xD000000000000010;
      break;
    case 20:
      unint64_t result = 0x656C61636F6CLL;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_21CAC1D00(char a1)
{
  unint64_t result = 0xD000000000000015;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000014;
      break;
    case 2:
      unint64_t result = 0xD000000000000012;
      break;
    case 3:
      unint64_t result = 0xD000000000000013;
      break;
    case 4:
      unint64_t result = 0xD000000000000018;
      break;
    case 5:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 6:
      unint64_t result = 0xD000000000000011;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_21CAC1DD4()
{
  uint64_t v0 = (void *)sub_21CB882C0();
  uint64_t v1 = (void *)MGGetStringAnswer();

  if (v1)
  {
    sub_21CB882E0();
  }
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_21CAC1E5C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + qword_267CA51F8;
  uint64_t v2 = sub_21CB87590();
  int v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(v1, v2);
}

uint64_t sub_21CAC1F18()
{
  uint64_t v0 = sub_21CB87730();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + qword_267CA51F8;
  uint64_t v2 = sub_21CB87590();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_21CAC2010()
{
  return type metadata accessor for FMFBaseRequest();
}

uint64_t sub_21CAC2018(uint64_t a1)
{
  int v3 = (void *)(*v1 + qword_267C95AF0);
  swift_beginAccess();
  *int v3 = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_21CAC2070())()
{
  return j__swift_endAccess;
}

uint64_t FMFAddUpdateLabelAction.__allocating_init(locationToLabel:label:)(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = swift_allocObject();
  sub_21CA2C9E8(a1, v6 + OBJC_IVAR____TtC7FMFCore23FMFAddUpdateLabelAction_locationToLabel);
  if (a3)
  {
    swift_bridgeObjectRetain();
    v7._countAndFlagsBits = a2;
    v7._object = a3;
    FMFDefaultLabel.init(rawValue:)(v7);
    if (v11 == 5) {
      __int16 v8 = 259;
    }
    else {
      __int16 v8 = 3;
    }
  }
  else
  {
    a2 = 0;
    __int16 v8 = 0;
  }
  swift_retain();
  sub_21CA2CA4C(a1);
  uint64_t v9 = v6 + OBJC_IVAR____TtC7FMFCore23FMFAddUpdateLabelAction_label;
  *(void *)uint64_t v9 = a2;
  *(void *)(v9 + 8) = a3;
  *(_WORD *)(v9 + 16) = v8;
  swift_release();
  *(unsigned char *)(v6 + 16) = 1;
  return v6;
}

uint64_t FMFAddUpdateLabelAction.init(locationToLabel:label:)(uint64_t a1, uint64_t a2, void *a3)
{
  sub_21CA2C9E8(a1, v3 + OBJC_IVAR____TtC7FMFCore23FMFAddUpdateLabelAction_locationToLabel);
  if (a3)
  {
    swift_retain();
    swift_bridgeObjectRetain();
    v7._countAndFlagsBits = a2;
    v7._object = a3;
    FMFDefaultLabel.init(rawValue:)(v7);
    if (v11 == 5) {
      __int16 v8 = 259;
    }
    else {
      __int16 v8 = 3;
    }
  }
  else
  {
    swift_retain();
    a2 = 0;
    __int16 v8 = 0;
  }
  sub_21CA2CA4C(a1);
  uint64_t v9 = v3 + OBJC_IVAR____TtC7FMFCore23FMFAddUpdateLabelAction_label;
  *(void *)uint64_t v9 = a2;
  *(void *)(v9 + 8) = a3;
  *(_WORD *)(v9 + 16) = v8;
  swift_release();
  *(unsigned char *)(v3 + 16) = 1;
  return v3;
}

uint64_t sub_21CAC2278()
{
  return 60;
}

void FMFAddUpdateLabelAction.__allocating_init(requiresRefresh:)()
{
}

void FMFAddUpdateLabelAction.init(requiresRefresh:)()
{
}

uint64_t sub_21CAC2534()
{
  sub_21CA2CA4C(v0 + OBJC_IVAR____TtC7FMFCore23FMFAddUpdateLabelAction_locationToLabel);

  return swift_bridgeObjectRelease();
}

uint64_t FMFAddUpdateLabelAction.deinit()
{
  sub_21CA2CA4C(v0 + OBJC_IVAR____TtC7FMFCore23FMFAddUpdateLabelAction_locationToLabel);
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t FMFAddUpdateLabelAction.__deallocating_deinit()
{
  sub_21CA2CA4C(v0 + OBJC_IVAR____TtC7FMFCore23FMFAddUpdateLabelAction_locationToLabel);
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_21CAC262C()
{
  return type metadata accessor for FMFAddUpdateLabelAction();
}

uint64_t type metadata accessor for FMFAddUpdateLabelAction()
{
  uint64_t result = qword_267C95B28;
  if (!qword_267C95B28) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_21CAC2680()
{
  uint64_t result = type metadata accessor for FMFLocation();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for FMFAddUpdateLabelAction(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for FMFAddUpdateLabelAction);
}

uint64_t dispatch thunk of FMFAddUpdateLabelAction.__allocating_init(locationToLabel:label:)()
{
  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t sub_21CAC2744()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for FMFDemoDataGenerator()
{
  return self;
}

void sub_21CAC2778(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
    swift_bridgeObjectRelease();
    return;
  }
  uint64_t v7 = *(void *)(a1 + 32);
  uint64_t v6 = *(void *)(a1 + 40);
  uint64_t v9 = *(void *)(a1 + 48);
  uint64_t v8 = *(void *)(a1 + 56);
  char v48 = *(unsigned char *)(a1 + 64);
  swift_bridgeObjectRetain();
  uint64_t v10 = *a3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v12 = sub_21CA5BCE0(v7, v6);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14)) {
    goto LABEL_23;
  }
  char v16 = v11;
  if (*(void *)(v10 + 24) >= v15)
  {
    if (a2)
    {
      if (v11) {
        goto LABEL_10;
      }
    }
    else
    {
      sub_21CB84E2C();
      if (v16) {
        goto LABEL_10;
      }
    }
LABEL_13:
    uint64_t v21 = a3;
    uint64_t v22 = (void *)*a3;
    *(void *)(*a3 + 8 * (v12 >> 6) + 64) |= 1 << v12;
    uint64_t v23 = (uint64_t *)(v22[6] + 16 * v12);
    *uint64_t v23 = v7;
    v23[1] = v6;
    uint64_t v24 = v22[7] + 24 * v12;
    *(void *)uint64_t v24 = v9;
    *(void *)(v24 + 8) = v8;
    *(unsigned char *)(v24 + 16) = v48;
    uint64_t v25 = v22[2];
    BOOL v26 = __OFADD__(v25, 1);
    uint64_t v27 = v25 + 1;
    if (v26)
    {
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    v22[2] = v27;
    uint64_t v28 = v3 - 1;
    if (v3 == 1)
    {
LABEL_22:
      swift_bridgeObjectRelease_n();
      return;
    }
    uint64_t v29 = (unsigned char *)(a1 + 104);
    while (1)
    {
      uint64_t v31 = *((void *)v29 - 4);
      uint64_t v30 = *((void *)v29 - 3);
      uint64_t v32 = *((void *)v29 - 2);
      uint64_t v33 = *((void *)v29 - 1);
      char v34 = *v29;
      uint64_t v35 = *v21;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      unint64_t v36 = sub_21CA5BCE0(v31, v30);
      uint64_t v38 = *(void *)(v35 + 16);
      BOOL v39 = (v37 & 1) == 0;
      BOOL v26 = __OFADD__(v38, v39);
      uint64_t v40 = v38 + v39;
      if (v26) {
        break;
      }
      char v41 = v37;
      if (*(void *)(v35 + 24) < v40)
      {
        sub_21CA3BDFC(v40, 1);
        unint64_t v36 = sub_21CA5BCE0(v31, v30);
        if ((v41 & 1) != (v42 & 1)) {
          goto LABEL_25;
        }
      }
      if (v41) {
        goto LABEL_10;
      }
      uint64_t v21 = a3;
      uint64_t v43 = (void *)*a3;
      *(void *)(*a3 + 8 * (v36 >> 6) + 64) |= 1 << v36;
      uint64_t v44 = (uint64_t *)(v43[6] + 16 * v36);
      *uint64_t v44 = v31;
      v44[1] = v30;
      uint64_t v45 = v43[7] + 24 * v36;
      *(void *)uint64_t v45 = v32;
      *(void *)(v45 + 8) = v33;
      *(unsigned char *)(v45 + 16) = v34;
      uint64_t v46 = v43[2];
      BOOL v26 = __OFADD__(v46, 1);
      uint64_t v47 = v46 + 1;
      if (v26) {
        goto LABEL_24;
      }
      v29 += 40;
      v43[2] = v47;
      if (!--v28) {
        goto LABEL_22;
      }
    }
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  sub_21CA3BDFC(v15, a2 & 1);
  unint64_t v17 = sub_21CA5BCE0(v7, v6);
  if ((v16 & 1) == (v18 & 1))
  {
    unint64_t v12 = v17;
    if ((v16 & 1) == 0) {
      goto LABEL_13;
    }
LABEL_10:
    char v19 = (void *)swift_allocError();
    swift_willThrow();
    id v20 = v19;
    sub_21CA57E34((uint64_t *)&unk_267C96F50);
    if ((swift_dynamicCast() & 1) == 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();

      return;
    }
    goto LABEL_26;
  }
LABEL_25:
  sub_21CB88FA0();
  __break(1u);
LABEL_26:
  sub_21CB88B70();
  sub_21CB883D0();
  sub_21CB88CA0();
  sub_21CB883D0();
  sub_21CB88D00();
  __break(1u);
}

uint64_t sub_21CAC2B38(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5)
{
  uint64_t v74 = a1;
  uint64_t v75 = a2;
  uint64_t v80 = sub_21CB87590();
  unint64_t v8 = *(void *)(v80 - 8);
  MEMORY[0x270FA5388](v80);
  uint64_t v79 = (char *)&v73 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = (int *)type metadata accessor for FMFLocation();
  uint64_t v93 = *((void *)v10 - 1);
  uint64_t v11 = MEMORY[0x270FA5388](v10);
  uint64_t v89 = (uint64_t)&v73 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v82 = (char *)&v73 - v14;
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  unint64_t v17 = (char *)&v73 - v16;
  int64_t v18 = a4[2];
  uint64_t v19 = MEMORY[0x263F8EE78];
  uint64_t v83 = (int *)v15;
  uint64_t v76 = a3;
  uint64_t v81 = a5;
  uint64_t v87 = (char *)&v73 - v16;
  if (v18)
  {
    unint64_t v92 = v8;
    v101[0] = MEMORY[0x263F8EE78];
    swift_bridgeObjectRetain();
    sub_21CA7C030(0, v18, 0);
    uint64_t v19 = v101[0];
    uint64_t v91 = a4;
    id v20 = a4 + 6;
    do
    {
      uint64_t v21 = *((void *)v20 - 2);
      uint64_t v22 = *((void *)v20 - 1);
      char v23 = *v20;
      v101[0] = v19;
      unint64_t v25 = *(void *)(v19 + 16);
      unint64_t v24 = *(void *)(v19 + 24);
      swift_bridgeObjectRetain_n();
      if (v25 >= v24 >> 1)
      {
        sub_21CA7C030(v24 > 1, v25 + 1, 1);
        uint64_t v19 = v101[0];
      }
      v20 += 24;
      *(void *)(v19 + 16) = v25 + 1;
      uint64_t v26 = v19 + 40 * v25;
      *(void *)(v26 + 32) = v21;
      *(void *)(v26 + 40) = v22;
      *(void *)(v26 + 48) = v21;
      *(void *)(v26 + 56) = v22;
      *(unsigned char *)(v26 + 64) = v23;
      --v18;
    }
    while (v18);
    swift_bridgeObjectRelease();
    a3 = v76;
    uint64_t v10 = v83;
    unint64_t v17 = v87;
    unint64_t v8 = v92;
  }
  if (*(void *)(v19 + 16))
  {
    sub_21CA57E34(&qword_267C95B38);
    uint64_t v27 = sub_21CB88D40();
  }
  else
  {
    uint64_t v27 = MEMORY[0x263F8EE80];
  }
  v101[0] = v27;
  uint64_t v28 = swift_bridgeObjectRetain();
  sub_21CAC2778(v28, 1, v101);
  swift_bridgeObjectRelease();
  uint64_t v29 = v101[0];
  uint64_t v30 = *(void *)(a3 + 16);
  if (!v30)
  {
    swift_release();
    goto LABEL_53;
  }
  unint64_t v78 = (*(unsigned __int8 *)(v93 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v93 + 80);
  uint64_t v93 = *(void *)(v93 + 72);
  uint64_t v77 = (void (**)(char *, uint64_t))(v8 + 8);
  uint64_t v31 = a3 + v78;
  swift_bridgeObjectRetain();
  uint64_t v32 = 0;
  uint64_t v91 = (void *)MEMORY[0x263F8EE78];
  unint64_t v92 = MEMORY[0x263F8EE78];
  uint64_t v85 = v31;
  uint64_t v86 = v30;
  do
  {
    sub_21CA2C9E8(v31 + v93 * v32, (uint64_t)v17);
    uint64_t v33 = *((void *)v17 + 1);
    if (!v33)
    {
      sub_21CA2CA4C((uint64_t)v17);
      goto LABEL_13;
    }
    uint64_t v34 = *(void *)v17;
    uint64_t v35 = v29;
    uint64_t v36 = *(void *)(v29 + 16);
    swift_bridgeObjectRetain();
    if (v36)
    {
      swift_bridgeObjectRetain();
      unint64_t v37 = sub_21CA5BCE0(v34, v33);
      if (v38)
      {
        uint64_t v39 = *(void *)(v35 + 56) + 24 * v37;
        uint64_t v40 = *(void *)(v39 + 8);
        uint64_t v88 = *(void *)v39;
        int v90 = *(unsigned __int8 *)(v39 + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        uint64_t v41 = (uint64_t)&v17[v10[11]];
        sub_21CA26A4C(v41, (uint64_t)v100, &qword_267C951F0);
        sub_21CA26A4C((uint64_t)v100, (uint64_t)v101, &qword_267C951F0);
        if (sub_21CA7CDBC((uint64_t)v101) == 1)
        {
          sub_21CA2CA4C((uint64_t)v17);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
LABEL_47:
          uint64_t v31 = v85;
          uint64_t v30 = v86;
          goto LABEL_48;
        }
        objc_msgSend((id)v101[38], sel_coordinate);
        double v43 = v42;
        double v45 = v44;
        sub_21CA26A4C((uint64_t)v100, (uint64_t)v99, &qword_267C951F0);
        int v46 = v17[16];
        if (v17[16]) {
          double v47 = 10.0;
        }
        else {
          double v47 = 120.0;
        }
        id v84 = v99[38];
        id v48 = objc_msgSend(v84, sel_timestamp);
        uint64_t v49 = v79;
        sub_21CB87560();

        sub_21CB87500();
        double v51 = v50;
        (*v77)(v49, v80);
        v98[0] = 0;
        MEMORY[0x21D4B6B90](v98, 8);
        for (uint64_t i = v98[0]; (unint64_t)(0x20000000000001 * v98[0]) < 0x1FFFFFFFFFF801; uint64_t i = v98[0])
        {
          v98[0] = 0;
          MEMORY[0x21D4B6B90](v98, 8);
        }
        uint64_t v53 = (uint64_t)v82;
        if ((double)(((unint64_t)i * (unsigned __int128)0x20000000000001uLL) >> 64) * 1.11022302e-16 + 0.0 <= pow(v51 / v47, 10.0))
        {
          int v54 = v46;
          if ((v46 & 1) == 0)
          {
LABEL_28:
            if ((v54 & 1) == 0)
            {
              swift_bridgeObjectRelease();
              sub_21CA26A4C(v41, (uint64_t)v98, &qword_267C951F0);
              *(void *)(v53 + 24) = 0;
              *(unsigned char *)(v53 + 32) = 1;
              uint64_t v10 = v83;
              uint64_t v55 = v53 + v83[8];
              uint64_t v56 = sub_21CB875D0();
              (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v56 - 8) + 56))(v55, 1, 1, v56);
              *(void *)uint64_t v53 = v34;
              *(void *)(v53 + 8) = v33;
              int v90 = 1;
              *(unsigned char *)(v53 + 16) = 1;
              sub_21CA26A4C((uint64_t)v98, v53 + v10[11], &qword_267C951F0);
              *(unsigned char *)(v53 + 33) = 0;
              *(unsigned char *)(v53 + v10[9]) = 0;
              *(unsigned char *)(v53 + v10[10]) = 0;
              swift_bridgeObjectRetain();
              sub_21CAC34E8((uint64_t)v98);
LABEL_37:
              uint64_t v40 = v33;
              goto LABEL_38;
            }
            goto LABEL_34;
          }
        }
        else
        {
          int v54 = v46 ^ 1;
          if ((v46 & 1) == 0) {
            goto LABEL_28;
          }
        }
        if (v54)
        {
          swift_bridgeObjectRelease();
          id v57 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F00A50]), sel_initWithLatitude_longitude_, v43, v45);
          sub_21CA26A4C(v41, (uint64_t)v97, &qword_267C951F0);
          sub_21CA26A4C((uint64_t)v97, (uint64_t)v98, &qword_267C951F0);
          if (sub_21CA7CDBC((uint64_t)v98) == 1)
          {
            sub_21CA76144(v95);
            sub_21CA26A4C((uint64_t)v95, (uint64_t)v96, &qword_267C951E0);
            uint64_t v58 = 0;
            uint64_t v59 = 0;
            __int16 v60 = 0;
          }
          else
          {
            sub_21CA26A4C((uint64_t)v97, (uint64_t)v95, &qword_267C951F0);
            uint64_t v58 = *(void *)&v95[320];
            uint64_t v59 = *(void *)&v95[328];
            __int16 v60 = *(_WORD *)&v95[336];
            sub_21CAB6AA4(v98);
            swift_bridgeObjectRetain();
            sub_21CA26A4C((uint64_t)v98, (uint64_t)v96, &qword_267C951E0);
          }
          sub_21CA26A4C((uint64_t)v96, (uint64_t)v94, &qword_267C951E0);
          v94[38] = v57;
          LOBYTE(v94[39]) = 0;
          v94[40] = v58;
          v94[41] = v59;
          LOWORD(v94[42]) = v60;
          v94[43] = 0;
          LOBYTE(v94[44]) = 0;
          memcpy(v95, v94, sizeof(v95));
          nullsub_1(v95, v61);
          uint64_t v53 = (uint64_t)v82;
          uint64_t v10 = v83;
          *((void *)v82 + 3) = 0;
          *(unsigned char *)(v53 + 32) = 1;
          uint64_t v62 = v53 + v10[8];
          uint64_t v63 = sub_21CB875D0();
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v63 - 8) + 56))(v62, 1, 1, v63);
          *(void *)uint64_t v53 = v34;
          *(void *)(v53 + 8) = v33;
          *(unsigned char *)(v53 + 16) = 0;
          sub_21CA26A4C((uint64_t)v95, v53 + v10[11], &qword_267C951F0);
          *(unsigned char *)(v53 + 33) = 0;
          *(unsigned char *)(v53 + v10[9]) = 0;
          *(unsigned char *)(v53 + v10[10]) = 0;
          swift_bridgeObjectRetain();
          int v90 = 0;
          goto LABEL_37;
        }
LABEL_34:
        swift_bridgeObjectRelease();
        sub_21CA2C9E8((uint64_t)v87, v53);
        uint64_t v34 = v88;
        uint64_t v10 = v83;
LABEL_38:
        sub_21CA2C9E8(v53, v89);
        if (swift_isUniquelyReferenced_nonNull_native()) {
          unint64_t v64 = v92;
        }
        else {
          unint64_t v64 = sub_21CA47FB4(0, *(void *)(v92 + 16) + 1, 1, v92);
        }
        unint64_t v66 = *(void *)(v64 + 16);
        unint64_t v65 = *(void *)(v64 + 24);
        if (v66 >= v65 >> 1) {
          unint64_t v64 = sub_21CA47FB4(v65 > 1, v66 + 1, 1, v64);
        }
        *(void *)(v64 + 16) = v66 + 1;
        unint64_t v92 = v64;
        sub_21CA7CFF8(v89, v64 + v78 + v66 * v93);
        if (swift_isUniquelyReferenced_nonNull_native()) {
          id v67 = v91;
        }
        else {
          id v67 = sub_21CA3F8C0(0, v91[2] + 1, 1, v91);
        }
        unint64_t v69 = v67[2];
        unint64_t v68 = v67[3];
        if (v69 >= v68 >> 1) {
          id v67 = sub_21CA3F8C0((void *)(v68 > 1), v69 + 1, 1, v67);
        }
        v67[2] = v69 + 1;
        uint64_t v91 = v67;
        uint64_t v70 = &v67[3 * v69];
        v70[4] = v34;
        v70[5] = v40;
        *((unsigned char *)v70 + 48) = v90;

        sub_21CA2CA4C(v53);
        unint64_t v17 = v87;
        sub_21CA2CA4C((uint64_t)v87);
        goto LABEL_47;
      }
      swift_bridgeObjectRelease();
    }
    sub_21CA2CA4C((uint64_t)v17);
    swift_bridgeObjectRelease();
LABEL_48:
    uint64_t v29 = v35;
LABEL_13:
    ++v32;
  }
  while (v32 != v30);
  swift_release();
  swift_bridgeObjectRelease();
LABEL_53:
  uint64_t v71 = v74;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return v71;
}

uint64_t sub_21CAC34E8(uint64_t a1)
{
  long long v5 = *(_OWORD *)(a1 + 272);
  long long v6 = *(_OWORD *)(a1 + 288);
  long long v3 = *(_OWORD *)(a1 + 240);
  long long v4 = *(_OWORD *)(a1 + 256);
  sub_21CA5C7D4(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
    *(void *)(a1 + 152),
    *(void *)(a1 + 160),
    *(void *)(a1 + 168),
    *(void *)(a1 + 176),
    *(void *)(a1 + 184),
    *(void *)(a1 + 192),
    *(void *)(a1 + 200),
    *(void *)(a1 + 208),
    *(void *)(a1 + 216),
    *(void *)(a1 + 224),
    *(void *)(a1 + 232),
    v3,
    *((uint64_t *)&v3 + 1),
    v4,
    *((uint64_t *)&v4 + 1),
    v5,
    *((uint64_t *)&v5 + 1),
    v6,
    *((uint64_t *)&v6 + 1),
    *(void **)(a1 + 304));
  return a1;
}

unint64_t sub_21CAC3584(char a1)
{
  unint64_t result = 0xD000000000000014;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6E6F697461636F6CLL;
      break;
    case 2:
    case 3:
      unint64_t result = 0xD000000000000021;
      break;
    case 4:
      unint64_t result = 0x6E657053656D6974;
      break;
    default:
      return result;
  }
  return result;
}

double FMFShallowLocationEvent.firstLocationLatency.getter()
{
  return *(double *)v0;
}

void FMFShallowLocationEvent.firstLocationLatency.setter(double a1)
{
  *unint64_t v1 = a1;
}

uint64_t (*FMFShallowLocationEvent.firstLocationLatency.modify())()
{
  return nullsub_1;
}

uint64_t FMFShallowLocationEvent.locationFound.getter()
{
  return *(unsigned __int8 *)(v0 + 8);
}

uint64_t FMFShallowLocationEvent.locationFound.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 8) = result;
  return result;
}

uint64_t (*FMFShallowLocationEvent.locationFound.modify())()
{
  return nullsub_1;
}

double FMFShallowLocationEvent.longestAgeDisplayedIncludingCache.getter()
{
  return *(double *)(v0 + 16);
}

void FMFShallowLocationEvent.longestAgeDisplayedIncludingCache.setter(double a1)
{
  *(double *)(v1 + 16) = a1;
}

uint64_t (*FMFShallowLocationEvent.longestAgeDisplayedIncludingCache.modify())()
{
  return nullsub_1;
}

double FMFShallowLocationEvent.longestAgeDisplayedExcludingCache.getter()
{
  return *(double *)(v0 + 24);
}

void FMFShallowLocationEvent.longestAgeDisplayedExcludingCache.setter(double a1)
{
  *(double *)(v1 + 24) = a1;
}

uint64_t (*FMFShallowLocationEvent.longestAgeDisplayedExcludingCache.modify())()
{
  return nullsub_1;
}

double FMFShallowLocationEvent.timeSpentInApp.getter()
{
  return *(double *)(v0 + 32);
}

void FMFShallowLocationEvent.timeSpentInApp.setter(double a1)
{
  *(double *)(v1 + 32) = a1;
}

uint64_t (*FMFShallowLocationEvent.timeSpentInApp.modify())()
{
  return nullsub_1;
}

void __swiftcall FMFShallowLocationEvent.init(firstLocationLatency:locationFound:longestAgeDisplayedIncludingCache:longestAgeDisplayedExcludingCache:timeSpentInApp:)(FMFCore::FMFShallowLocationEvent *__return_ptr retstr, Swift::Double firstLocationLatency, Swift::Bool locationFound, Swift::Double longestAgeDisplayedIncludingCache, Swift::Double longestAgeDisplayedExcludingCache, Swift::Double timeSpentInApp)
{
  retstr->firstLocationLatency = firstLocationLatency;
  retstr->locationFound = locationFound;
  retstr->longestAgeDisplayedIncludingCache = longestAgeDisplayedIncludingCache;
  retstr->longestAgeDisplayedExcludingCache = longestAgeDisplayedExcludingCache;
  retstr->timeSpentInApp = timeSpentInApp;
}

Swift::Void __swiftcall FMFManager.enqueue(event:)(FMFCore::FMFShallowLocationEvent *event)
{
  uint64_t v2 = (void *)sub_21CB882C0();
  uint64_t v3 = swift_allocObject();
  long long v4 = *(_OWORD *)&event->longestAgeDisplayedIncludingCache;
  *(_OWORD *)(v3 + 16) = *(_OWORD *)&event->firstLocationLatency;
  *(_OWORD *)(v3 + 32) = v4;
  *(Swift::Double *)(v3 + 48) = event->timeSpentInApp;
  v6[4] = sub_21CAC3B80;
  v6[5] = v3;
  v6[0] = MEMORY[0x263EF8330];
  v6[1] = 1107296256;
  v6[2] = sub_21CAC3B88;
  v6[3] = &unk_26CD6B9E8;
  long long v5 = _Block_copy(v6);
  swift_release();
  AnalyticsSendEventLazy();
  _Block_release(v5);
}

void static FMFAnalytics.sendShallowLocationEventAnalytics(event:)(uint64_t a1)
{
  uint64_t v2 = (void *)sub_21CB882C0();
  uint64_t v3 = swift_allocObject();
  long long v4 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v3 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v3 + 32) = v4;
  *(void *)(v3 + 48) = *(void *)(a1 + 32);
  v6[4] = sub_21CAC413C;
  v6[5] = v3;
  v6[0] = MEMORY[0x263EF8330];
  v6[1] = 1107296256;
  v6[2] = sub_21CAC3B88;
  v6[3] = &unk_26CD6BA38;
  long long v5 = _Block_copy(v6);
  swift_release();
  AnalyticsSendEventLazy();
  _Block_release(v5);
}

unint64_t sub_21CAC3930(uint64_t a1)
{
  unint64_t v2 = sub_21CB78D90(MEMORY[0x263F8EE78]);
  id v3 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithDouble_, *(double *)a1);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_21CB84148((uint64_t)v3, 0xD000000000000014, 0x800000021CB95D20, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease();
  id v5 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithBool_, *(unsigned __int8 *)(a1 + 8));
  char v6 = swift_isUniquelyReferenced_nonNull_native();
  sub_21CB84148((uint64_t)v5, 0x6E6F697461636F6CLL, 0xED0000646E756F46, v6);
  swift_bridgeObjectRelease();
  id v7 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithDouble_, *(double *)(a1 + 16));
  char v8 = swift_isUniquelyReferenced_nonNull_native();
  sub_21CB84148((uint64_t)v7, 0xD000000000000021, 0x800000021CB95D40, v8);
  swift_bridgeObjectRelease();
  id v9 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithDouble_, *(double *)(a1 + 24));
  char v10 = swift_isUniquelyReferenced_nonNull_native();
  sub_21CB84148((uint64_t)v9, 0xD000000000000021, 0x800000021CB95D70, v10);
  swift_bridgeObjectRelease();
  id v11 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithDouble_, *(double *)(a1 + 32));
  char v12 = swift_isUniquelyReferenced_nonNull_native();
  sub_21CB84148((uint64_t)v11, 0x6E657053656D6974, 0xEE007070416E4974, v12);
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_21CAC3B70()
{
  return MEMORY[0x270FA0238](v0, 56, 7);
}

unint64_t sub_21CAC3B80()
{
  return sub_21CAC3930(v0 + 16);
}

id sub_21CAC3B88(uint64_t a1)
{
  uint64_t v1 = *(uint64_t (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  uint64_t v3 = v1(v2);
  swift_release();
  if (v3)
  {
    sub_21CA76A54();
    long long v4 = (void *)sub_21CB881E0();
    swift_bridgeObjectRelease();
  }
  else
  {
    long long v4 = 0;
  }

  return v4;
}

uint64_t sub_21CAC3C14()
{
  return MEMORY[0x270FA0238](v0, 56, 7);
}

double FMFLiveLocationEvent.firstLiveLocationLatency.getter()
{
  return *(double *)v0;
}

void FMFLiveLocationEvent.firstLiveLocationLatency.setter(double a1)
{
  *uint64_t v1 = a1;
}

uint64_t (*FMFLiveLocationEvent.firstLiveLocationLatency.modify())()
{
  return nullsub_1;
}

uint64_t FMFLiveLocationEvent.liveSessionSuccessful.getter()
{
  return *(unsigned __int8 *)(v0 + 8);
}

uint64_t FMFLiveLocationEvent.liveSessionSuccessful.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 8) = result;
  return result;
}

uint64_t (*FMFLiveLocationEvent.liveSessionSuccessful.modify())()
{
  return nullsub_1;
}

Swift::Void __swiftcall FMFManager.enqueue(event:)(FMFCore::FMFLiveLocationEvent event)
{
  uint64_t v1 = **(void **)&event.liveSessionSuccessful;
  char v2 = *(unsigned char *)(*(void *)&event.liveSessionSuccessful + 8);
  uint64_t v3 = (void *)sub_21CB882C0();
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = v1;
  *(unsigned char *)(v4 + 24) = v2;
  v6[4] = sub_21CAC3F8C;
  v6[5] = v4;
  v6[0] = MEMORY[0x263EF8330];
  v6[1] = 1107296256;
  v6[2] = sub_21CAC3B88;
  v6[3] = &unk_26CD6BA88;
  id v5 = _Block_copy(v6);
  swift_release();
  AnalyticsSendEventLazy();
  _Block_release(v5);
}

void static FMFAnalytics.sendLiveLocationEventAnalytics(event:)(uint64_t *a1)
{
  uint64_t v1 = *a1;
  char v2 = *((unsigned char *)a1 + 8);
  uint64_t v3 = (void *)sub_21CB882C0();
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = v1;
  *(unsigned char *)(v4 + 24) = v2;
  v6[4] = sub_21CAC4128;
  v6[5] = v4;
  v6[0] = MEMORY[0x263EF8330];
  v6[1] = 1107296256;
  v6[2] = sub_21CAC3B88;
  v6[3] = &unk_26CD6BAD8;
  id v5 = _Block_copy(v6);
  swift_release();
  AnalyticsSendEventLazy();
  _Block_release(v5);
}

unint64_t sub_21CAC3E6C(char a1, double a2)
{
  unint64_t v4 = sub_21CB78D90(MEMORY[0x263F8EE78]);
  id v5 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithDouble_, a2);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_21CB84148((uint64_t)v5, 0xD000000000000018, 0x800000021CB95CE0, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease();
  id v7 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithBool_, a1 & 1);
  char v8 = swift_isUniquelyReferenced_nonNull_native();
  sub_21CB84148((uint64_t)v7, 0xD000000000000015, 0x800000021CB95D00, v8);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_21CAC3F7C()
{
  return MEMORY[0x270FA0238](v0, 25, 7);
}

unint64_t sub_21CAC3F8C()
{
  return sub_21CAC3E6C(*(unsigned char *)(v0 + 24), *(double *)(v0 + 16));
}

uint64_t sub_21CAC3F98()
{
  return MEMORY[0x270FA0238](v0, 25, 7);
}

__n128 initializeWithCopy for FMFShallowLocationEvent(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for FMFShallowLocationEvent(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 40)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for FMFShallowLocationEvent(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)__n128 result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 40) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FMFShallowLocationEvent()
{
  return &type metadata for FMFShallowLocationEvent;
}

uint64_t initializeBufferWithCopyOfBuffer for FMFLiveLocationEvent(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(unsigned char *)(result + 8) = *((unsigned char *)a2 + 8);
  *(void *)__n128 result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for FMFLiveLocationEvent(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for FMFLiveLocationEvent(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)__n128 result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FMFLiveLocationEvent()
{
  return &type metadata for FMFLiveLocationEvent;
}

uint64_t sub_21CAC4140()
{
  return sub_21CB89090();
}

uint64_t sub_21CAC4250()
{
  return sub_21CB89090();
}

uint64_t sub_21CAC4320()
{
  return sub_21CB89090();
}

uint64_t sub_21CAC444C()
{
  return sub_21CB89090();
}

uint64_t FMFFavoriteFriend.friendIdentifier.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FMFFavoriteFriend.order.getter()
{
  return *(void *)(v0 + 16);
}

uint64_t sub_21CAC4548(char *a1, char *a2)
{
  return sub_21CA7F810(*a1, *a2);
}

uint64_t sub_21CAC4554()
{
  return sub_21CB89090();
}

uint64_t sub_21CAC45C8()
{
  sub_21CB88380();

  return swift_bridgeObjectRelease();
}

uint64_t sub_21CAC4628()
{
  return sub_21CB89090();
}

uint64_t sub_21CAC4698@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_21CB88D70();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

void sub_21CAC46F8(uint64_t *a1@<X8>)
{
  uint64_t v2 = 25705;
  if (*v1) {
    uint64_t v2 = 0x726564726FLL;
  }
  unint64_t v3 = 0xE200000000000000;
  if (*v1) {
    unint64_t v3 = 0xE500000000000000;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_21CAC4728()
{
  if (*v0) {
    return 0x726564726FLL;
  }
  else {
    return 25705;
  }
}

uint64_t sub_21CAC4754@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_21CB88D70();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

uint64_t sub_21CAC47B8(uint64_t a1)
{
  unint64_t v2 = sub_21CAC49F8();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_21CAC47F4(uint64_t a1)
{
  unint64_t v2 = sub_21CAC49F8();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t FMFFavoriteFriend.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = sub_21CA57E34(&qword_267C95B40);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  char v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21CA2B2CC(a1, a1[3]);
  sub_21CAC49F8();
  sub_21CB890B0();
  if (!v2)
  {
    char v16 = 0;
    uint64_t v9 = sub_21CB88DE0();
    uint64_t v11 = v10;
    char v15 = 1;
    uint64_t v12 = sub_21CB88E10();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v9;
    a2[1] = v11;
    a2[2] = v12;
  }
  return sub_21CA2B0D0((uint64_t)a1);
}

unint64_t sub_21CAC49F8()
{
  unint64_t result = qword_267C95B48;
  if (!qword_267C95B48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C95B48);
  }
  return result;
}

uint64_t FMFFavoriteFriend.encode(to:)(void *a1)
{
  uint64_t v3 = sub_21CA57E34(&qword_267C95B50);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9[0] = *(void *)(v1 + 16);
  sub_21CA2B2CC(a1, a1[3]);
  sub_21CAC49F8();
  sub_21CB890C0();
  char v11 = 0;
  uint64_t v7 = v9[1];
  sub_21CB88E70();
  if (!v7)
  {
    char v10 = 1;
    sub_21CB88EA0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

BOOL static FMFFavoriteFriend.== infix(_:_:)(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  uint64_t v3 = a2[2];
  if (*a1 == *a2 && a1[1] == a2[1]) {
    return v2 == v3;
  }
  char v5 = sub_21CB88F50();
  BOOL result = 0;
  if (v5) {
    return v2 == v3;
  }
  return result;
}

unint64_t FMFFavoriteFriend.debugDescription.getter()
{
  return 0xD000000000000026;
}

uint64_t sub_21CAC4CF8@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return FMFFavoriteFriend.init(from:)(a1, a2);
}

uint64_t sub_21CAC4D10(void *a1)
{
  return FMFFavoriteFriend.encode(to:)(a1);
}

BOOL sub_21CAC4D28(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  uint64_t v3 = a2[2];
  if (*a1 == *a2 && a1[1] == a2[1]) {
    return v2 == v3;
  }
  char v5 = sub_21CB88F50();
  BOOL result = 0;
  if (v5) {
    return v2 == v3;
  }
  return result;
}

FMFCore::FMFGeofenceAlertsFrom_optional __swiftcall FMFGeofenceAlertsFrom.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  uint64_t v3 = sub_21CB88D70();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1) {
    char v5 = 1;
  }
  else {
    char v5 = 2;
  }
  if (!v3) {
    char v5 = 0;
  }
  *uint64_t v2 = v5;
  return result;
}

uint64_t FMFGeofenceAlertsFrom.rawValue.getter()
{
  if (*v0) {
    return 0x454E4F5952455645;
  }
  else {
    return 0x53444E45495246;
  }
}

uint64_t sub_21CAC4E28(char *a1, char *a2)
{
  return sub_21CA7FF20(*a1, *a2);
}

uint64_t sub_21CAC4E34()
{
  return sub_21CB89090();
}

uint64_t sub_21CAC4EB8()
{
  sub_21CB88380();

  return swift_bridgeObjectRelease();
}

uint64_t sub_21CAC4F28()
{
  return sub_21CB89090();
}

FMFCore::FMFGeofenceAlertsFrom_optional sub_21CAC4FA8(Swift::String *a1)
{
  return FMFGeofenceAlertsFrom.init(rawValue:)(*a1);
}

void sub_21CAC4FB4(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x53444E45495246;
  if (*v1) {
    uint64_t v2 = 0x454E4F5952455645;
  }
  unint64_t v3 = 0xE700000000000000;
  if (*v1) {
    unint64_t v3 = 0xE800000000000000;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t FMFPreferences.allowFriendRequests.getter()
{
  return *v0;
}

uint64_t FMFPreferences.shouldReceiveEmails.getter()
{
  return *(unsigned __int8 *)(v0 + 2);
}

void FMFPreferences.allowLocationAlertsFrom.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 3);
}

uint64_t FMFPreferences.primaryEmail.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FMFPreferences.favorites.getter()
{
  return swift_bridgeObjectRetain();
}

unint64_t sub_21CAC5048(char a1)
{
  unint64_t result = 0xD000000000000013;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000011;
      break;
    case 2:
      unint64_t result = 0x61636F4C65646968;
      break;
    case 4:
      unint64_t result = 0x457972616D697270;
      break;
    case 5:
      unint64_t result = 0x657469726F766166;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_21CAC5120(unsigned __int8 *a1, char *a2)
{
  return sub_21CA7FFC8(*a1, *a2);
}

uint64_t sub_21CAC512C()
{
  return sub_21CAC4320();
}

uint64_t sub_21CAC5134()
{
  return sub_21CAD498C();
}

uint64_t sub_21CAC513C()
{
  return sub_21CAD4DA0();
}

uint64_t sub_21CAC5144@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_21CAC5834();
  *a1 = result;
  return result;
}

unint64_t sub_21CAC5174@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_21CAC5048(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_21CAC51A0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_21CAC5834();
  *a1 = result;
  return result;
}

void sub_21CAC51C8(unsigned char *a1@<X8>)
{
  *a1 = 6;
}

uint64_t sub_21CAC51D4(uint64_t a1)
{
  unint64_t v2 = sub_21CA223B0();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_21CAC5210(uint64_t a1)
{
  unint64_t v2 = sub_21CA223B0();

  return MEMORY[0x270FA00B8](a1, v2);
}

__n128 FMFPreferences.init(prefs:hideLocation:)@<Q0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  char v3 = *(unsigned char *)(a1 + 2);
  char v4 = *(unsigned char *)(a1 + 3);
  __n128 result = *(__n128 *)(a1 + 8);
  uint64_t v6 = *(void *)(a1 + 24);
  *(unsigned char *)a3 = *(unsigned char *)a1;
  *(unsigned char *)(a3 + 1) = a2;
  *(unsigned char *)(a3 + 2) = v3;
  *(unsigned char *)(a3 + 3) = v4;
  *(__n128 *)(a3 + 8) = result;
  *(void *)(a3 + 24) = v6;
  return result;
}

__n128 FMFPreferences.init(prefs:allowFriendRequests:)@<Q0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  char v3 = *(unsigned char *)(a1 + 1);
  char v4 = *(unsigned char *)(a1 + 2);
  char v5 = *(unsigned char *)(a1 + 3);
  __n128 result = *(__n128 *)(a1 + 8);
  uint64_t v7 = *(void *)(a1 + 24);
  *(unsigned char *)a3 = a2;
  *(unsigned char *)(a3 + 1) = v3;
  *(unsigned char *)(a3 + 2) = v4;
  *(unsigned char *)(a3 + 3) = v5;
  *(__n128 *)(a3 + 8) = result;
  *(void *)(a3 + 24) = v7;
  return result;
}

__n128 FMFPreferences.init(prefs:allowLocationAlertsFrom:)@<Q0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X8>)
{
  char v3 = *(unsigned char *)(a1 + 1);
  char v4 = *(unsigned char *)(a1 + 2);
  __n128 result = *(__n128 *)(a1 + 8);
  uint64_t v6 = *(void *)(a1 + 24);
  char v7 = *a2;
  *(unsigned char *)a3 = *(unsigned char *)a1;
  *(unsigned char *)(a3 + 1) = v3;
  *(unsigned char *)(a3 + 2) = v4;
  *(unsigned char *)(a3 + 3) = v7;
  *(__n128 *)(a3 + 8) = result;
  *(void *)(a3 + 24) = v6;
  return result;
}

unint64_t sub_21CAC52F0()
{
  unint64_t result = qword_267C95BB0;
  if (!qword_267C95BB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C95BB0);
  }
  return result;
}

void *sub_21CAC5348(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for FMFFavoriteFriend(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  return a1;
}

__n128 initializeWithTake for FMFFavoriteFriend(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

void *assignWithTake for FMFFavoriteFriend(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  return a1;
}

uint64_t getEnumTagSinglePayload for FMFFavoriteFriend(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FMFFavoriteFriend(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t assignWithCopy for FMFPreferences(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  *(unsigned char *)(a1 + 2) = *(unsigned char *)(a2 + 2);
  *(unsigned char *)(a1 + 3) = *(unsigned char *)(a2 + 3);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for FMFPreferences(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  *(unsigned char *)(a1 + 2) = *(unsigned char *)(a2 + 2);
  *(unsigned char *)(a1 + 3) = *(unsigned char *)(a2 + 3);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

unsigned char *_s7FMFCore21FMFGeofenceAlertsFromOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x21CAC569CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FMFFavoriteFriend.CodingKeys()
{
  return &type metadata for FMFFavoriteFriend.CodingKeys;
}

unint64_t sub_21CAC56D8()
{
  unint64_t result = qword_267C95BB8;
  if (!qword_267C95BB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C95BB8);
  }
  return result;
}

unint64_t sub_21CAC5730()
{
  unint64_t result = qword_267C95BC0;
  if (!qword_267C95BC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C95BC0);
  }
  return result;
}

unint64_t sub_21CAC5788()
{
  unint64_t result = qword_267C95BD8;
  if (!qword_267C95BD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C95BD8);
  }
  return result;
}

unint64_t sub_21CAC57E0()
{
  unint64_t result = qword_267C95BE0;
  if (!qword_267C95BE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C95BE0);
  }
  return result;
}

uint64_t sub_21CAC5834()
{
  unint64_t v0 = sub_21CB88D70();
  swift_bridgeObjectRelease();
  if (v0 >= 6) {
    return 6;
  }
  else {
    return v0;
  }
}

uint64_t FMFMuteFencesAction.__allocating_init(friendId:endDate:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 24) = a1;
  *(void *)(v6 + 32) = a2;
  sub_21CA4A6E4(a3, v6 + OBJC_IVAR____TtC7FMFCore19FMFMuteFencesAction_muteEndDate);
  *(unsigned char *)(v6 + 16) = 0;
  return v6;
}

uint64_t FMFMuteFencesAction.init(friendId:endDate:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v3 + 24) = a1;
  *(void *)(v3 + 32) = a2;
  sub_21CA4A6E4(a3, v3 + OBJC_IVAR____TtC7FMFCore19FMFMuteFencesAction_muteEndDate);
  *(unsigned char *)(v3 + 16) = 0;
  return v3;
}

uint64_t sub_21CAC591C()
{
  uint64_t v1 = sub_21CA57E34((uint64_t *)&unk_267C951B0);
  MEMORY[0x270FA5388](v1);
  uint64_t v3 = (char *)v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11[0] = 60;
  v11[1] = 0xE100000000000000;
  sub_21CB89110();
  sub_21CB883D0();
  swift_bridgeObjectRelease();
  sub_21CB883D0();
  v10[0] = v0;
  sub_21CA2A060();
  sub_21CB88470();
  sub_21CB883D0();
  swift_bridgeObjectRelease();
  sub_21CB883D0();
  uint64_t v5 = v11[0];
  uint64_t v4 = v11[1];
  strcpy((char *)v11, "friendId: ");
  BYTE3(v11[1]) = 0;
  HIDWORD(v11[1]) = -369098752;
  uint64_t v6 = *(void *)(v0 + 32);
  v10[0] = *(void *)(v0 + 24);
  v10[1] = v6;
  swift_bridgeObjectRetain();
  sub_21CA57E34((uint64_t *)&unk_267C95220);
  sub_21CB88310();
  sub_21CB883D0();
  swift_bridgeObjectRelease();
  sub_21CB883D0();
  v11[0] = v5;
  v11[1] = v4;
  swift_bridgeObjectRetain();
  sub_21CB883D0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v8 = v11[0];
  uint64_t v7 = v11[1];
  strcpy((char *)v11, "muteEndDate: ");
  HIWORD(v11[1]) = -4864;
  sub_21CA4BFB4(v0 + OBJC_IVAR____TtC7FMFCore19FMFMuteFencesAction_muteEndDate, (uint64_t)v3);
  sub_21CB88310();
  sub_21CB883D0();
  swift_bridgeObjectRelease();
  v11[0] = v8;
  v11[1] = v7;
  swift_bridgeObjectRetain();
  sub_21CB883D0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v11[0];
}

void FMFMuteFencesAction.__allocating_init(requiresRefresh:)()
{
}

void FMFMuteFencesAction.init(requiresRefresh:)()
{
}

uint64_t sub_21CAC5BC0()
{
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtC7FMFCore19FMFMuteFencesAction_muteEndDate;

  return sub_21CAC5C28(v1);
}

uint64_t FMFMuteFencesAction.deinit()
{
  swift_bridgeObjectRelease();
  sub_21CAC5C28(v0 + OBJC_IVAR____TtC7FMFCore19FMFMuteFencesAction_muteEndDate);
  return v0;
}

uint64_t sub_21CAC5C28(uint64_t a1)
{
  uint64_t v2 = sub_21CA57E34((uint64_t *)&unk_267C951B0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t FMFMuteFencesAction.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  sub_21CAC5C28(v0 + OBJC_IVAR____TtC7FMFCore19FMFMuteFencesAction_muteEndDate);

  return swift_deallocClassInstance();
}

uint64_t sub_21CAC5CF4()
{
  return type metadata accessor for FMFMuteFencesAction();
}

uint64_t type metadata accessor for FMFMuteFencesAction()
{
  uint64_t result = qword_267C95BE8;
  if (!qword_267C95BE8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_21CAC5D48()
{
  sub_21CA66C38();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t method lookup function for FMFMuteFencesAction(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for FMFMuteFencesAction);
}

uint64_t dispatch thunk of FMFMuteFencesAction.__allocating_init(friendId:endDate:)()
{
  return (*(uint64_t (**)(void))(v0 + 144))();
}

FMFCore::FMFLabel_optional __swiftcall FMFLabel.init(value:labelSaveType:labelSourceType:)(Swift::String_optional value, FMFCore::FMFLabelSaveType_optional labelSaveType, FMFCore::FMFLabelSourceType_optional labelSourceType)
{
  uint64_t v4 = v3;
  if (value.value._object)
  {
    object = value.value._object;
    uint64_t countAndFlagsBits = value.value._countAndFlagsBits;
    int v7 = *(unsigned __int8 *)labelSaveType.value;
    __int16 v8 = *(unsigned __int8 *)labelSourceType.value;
    if (v7 == 2)
    {
      swift_bridgeObjectRetain();
      v9._uint64_t countAndFlagsBits = countAndFlagsBits;
      v9._object = object;
      LOBYTE(value.value._countAndFlagsBits) = FMFDefaultLabel.init(rawValue:)(v9);
      if (v11 != 5)
      {
        *(void *)uint64_t v4 = countAndFlagsBits;
        *(void *)(v4 + 8) = object;
        *(_WORD *)(v4 + 16) = v8;
        goto LABEL_9;
      }
      __int16 v10 = v8 | 0x100;
    }
    else
    {
      __int16 v10 = v8 | ((_WORD)v7 << 8);
    }
    *(void *)uint64_t v4 = countAndFlagsBits;
    *(void *)(v4 + 8) = object;
    *(_WORD *)(v4 + 16) = v10;
  }
  else
  {
    *(void *)uint64_t v3 = 0;
    *(void *)(v3 + 8) = 0;
    *(_WORD *)(v3 + 16) = 0;
  }
LABEL_9:
  result.value.value = value.value;
  result.value.labelSourceType.value = labelSaveType.value;
  return result;
}

uint64_t FMFLabel.localizedValue.getter()
{
  uint64_t v1 = *v0;
  v2._uint64_t countAndFlagsBits = sub_21CB88320();
  FMFDefaultLabel.init(rawValue:)(v2);
  if (v4 != 5) {
    return FMFDefaultLabel.localizedLabel.getter();
  }
  swift_bridgeObjectRetain();
  return v1;
}

FMFCore::FMFLabelSourceType_optional __swiftcall FMFLabelSourceType.init(rawValue:)(Swift::String rawValue)
{
  Swift::String v2 = v1;
  unint64_t v3 = sub_21CB88D70();
  result.value = swift_bridgeObjectRelease();
  char v5 = 3;
  if (v3 < 3) {
    char v5 = v3;
  }
  *Swift::String v2 = v5;
  return result;
}

uint64_t FMFLabelSourceType.rawValue.getter()
{
  uint64_t v1 = 0x646E65697266;
  if (*v0 != 1) {
    uint64_t v1 = 0x736573696D657270;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6C61636F6CLL;
  }
}

uint64_t sub_21CAC5FCC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_21CA7F354(*a1, *a2);
}

uint64_t sub_21CAC5FD8()
{
  return sub_21CB89090();
}

uint64_t sub_21CAC6074()
{
  sub_21CB88380();

  return swift_bridgeObjectRelease();
}

uint64_t sub_21CAC60FC()
{
  return sub_21CB89090();
}

FMFCore::FMFLabelSourceType_optional sub_21CAC6194(Swift::String *a1)
{
  return FMFLabelSourceType.init(rawValue:)(*a1);
}

void sub_21CAC61A0(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE500000000000000;
  unint64_t v4 = 0xE600000000000000;
  uint64_t v5 = 0x646E65697266;
  if (v2 != 1)
  {
    uint64_t v5 = 0x736573696D657270;
    unint64_t v4 = 0xE800000000000000;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x6C61636F6CLL;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

FMFCore::FMFLabelSaveType_optional __swiftcall FMFLabelSaveType.init(rawValue:)(Swift::String rawValue)
{
  int v2 = v1;
  uint64_t v3 = sub_21CB88D70();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1) {
    char v5 = 1;
  }
  else {
    char v5 = 2;
  }
  if (!v3) {
    char v5 = 0;
  }
  *int v2 = v5;
  return result;
}

uint64_t FMFLabelSaveType.rawValue.getter()
{
  if (*v0) {
    return 0x6D6F74737563;
  }
  else {
    return 0x746C7561666564;
  }
}

uint64_t sub_21CAC6294(char *a1, char *a2)
{
  return sub_21CA7FA54(*a1, *a2);
}

uint64_t sub_21CAC62A0()
{
  return sub_21CB89090();
}

uint64_t sub_21CAC6320()
{
  sub_21CB88380();

  return swift_bridgeObjectRelease();
}

uint64_t sub_21CAC638C()
{
  return sub_21CB89090();
}

FMFCore::FMFLabelSaveType_optional sub_21CAC6408(Swift::String *a1)
{
  return FMFLabelSaveType.init(rawValue:)(*a1);
}

void sub_21CAC6414(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x746C7561666564;
  if (*v1) {
    uint64_t v2 = 0x6D6F74737563;
  }
  unint64_t v3 = 0xE700000000000000;
  if (*v1) {
    unint64_t v3 = 0xE600000000000000;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t FMFDefaultLabel.localizedLabel.getter()
{
  type metadata accessor for FMLocalize();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v1 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v2 = sub_21CB872B0();

  return v2;
}

FMFCore::FMFDefaultLabel_optional __swiftcall FMFDefaultLabel.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_21CB88D70();
  result.value = swift_bridgeObjectRelease();
  char v5 = 5;
  if (v3 < 5) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

uint64_t FMFDefaultLabel.rawValue.getter()
{
  uint64_t result = 0x656D6F683C21245FLL;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6B726F773C21245FLL;
      break;
    case 2:
      uint64_t result = 0x6F6863733C21245FLL;
      break;
    case 3:
      uint64_t result = 0x3E6D79673C21245FLL;
      break;
    case 4:
      uint64_t result = 0x6568746F3C21245FLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_21CAC67C4(unsigned __int8 *a1, char *a2)
{
  return sub_21CA7FAF8(*a1, *a2);
}

uint64_t sub_21CAC67D0()
{
  return sub_21CB89090();
}

uint64_t sub_21CAC68EC()
{
  sub_21CB88380();

  return swift_bridgeObjectRelease();
}

uint64_t sub_21CAC69F0()
{
  return sub_21CB89090();
}

FMFCore::FMFDefaultLabel_optional sub_21CAC6B08(Swift::String *a1)
{
  return FMFDefaultLabel.init(rawValue:)(*a1);
}

void sub_21CAC6B14(uint64_t a1@<X8>)
{
  uint64_t v2 = 0x656D6F683C21245FLL;
  switch(*v1)
  {
    case 1:
      uint64_t v2 = 0x6B726F773C21245FLL;
      goto LABEL_3;
    case 2:
      strcpy((char *)a1, "_$!<school>!$_");
      *(unsigned char *)(a1 + 15) = -18;
      break;
    case 3:
      *(void *)a1 = 0x3E6D79673C21245FLL;
      *(void *)(a1 + 8) = 0xEB000000005F2421;
      break;
    case 4:
      strcpy((char *)a1, "_$!<other>!$_");
      *(_WORD *)(a1 + 14) = -4864;
      break;
    default:
LABEL_3:
      *(void *)a1 = v2;
      *(void *)(a1 + 8) = 0xEC0000005F24213ELL;
      break;
  }
}

uint64_t FMFLabel.value.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

void FMFLabel.labelSourceType.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 16);
}

void FMFLabel.labelSaveType.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 17);
}

FMFCore::FMFDefaultLabel_optional FMFLabel.defaultLabel.getter()
{
  uint64_t v0 = sub_21CB88320();

  return FMFDefaultLabel.init(rawValue:)(*(Swift::String *)&v0);
}

uint64_t sub_21CAC6C78(char *a1, char *a2)
{
  return sub_21CA7E534(*a1, *a2);
}

uint64_t sub_21CAC6C84()
{
  return sub_21CB89090();
}

uint64_t sub_21CAC6CFC()
{
  sub_21CB88380();

  return swift_bridgeObjectRelease();
}

uint64_t sub_21CAC6D60()
{
  return sub_21CB89090();
}

uint64_t sub_21CAC6DD4@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_21CB88D70();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

void sub_21CAC6E34(uint64_t *a1@<X8>)
{
  uint64_t v2 = 1701869940;
  if (!*v1) {
    uint64_t v2 = 0x65756C6176;
  }
  unint64_t v3 = 0xE500000000000000;
  if (*v1) {
    unint64_t v3 = 0xE400000000000000;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_21CAC6E68()
{
  if (*v0) {
    return 1701869940;
  }
  else {
    return 0x65756C6176;
  }
}

uint64_t sub_21CAC6E98@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_21CB88D70();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

uint64_t sub_21CAC6EFC(uint64_t a1)
{
  unint64_t v2 = sub_21CAC7154();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_21CAC6F38(uint64_t a1)
{
  unint64_t v2 = sub_21CAC7154();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t FMFLabel.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_21CA57E34(&qword_267C95BF8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  __int16 v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21CA2B2CC(a1, a1[3]);
  sub_21CAC7154();
  sub_21CB890B0();
  if (!v2)
  {
    char v18 = 0;
    uint64_t v9 = sub_21CB88DE0();
    uint64_t v11 = v10;
    char v17 = 1;
    v12._uint64_t countAndFlagsBits = sub_21CB88DE0();
    FMFLabelSourceType.init(rawValue:)(v12);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    char v13 = v16;
    *(void *)a2 = v9;
    *(void *)(a2 + 8) = v11;
    *(unsigned char *)(a2 + 16) = v13;
    *(unsigned char *)(a2 + 17) = 2;
  }
  return sub_21CA2B0D0((uint64_t)a1);
}

unint64_t sub_21CAC7154()
{
  unint64_t result = qword_267C95C00;
  if (!qword_267C95C00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C95C00);
  }
  return result;
}

uint64_t FMFLabel.encode(to:)(void *a1)
{
  uint64_t v2 = sub_21CA57E34(&qword_267C95C08);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = &v7[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_21CA2B2CC(a1, a1[3]);
  sub_21CAC7154();
  sub_21CB890C0();
  v7[31] = 0;
  sub_21CB88E70();
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t static FMFLabel.== infix(_:_:)(void *a1, void *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1]) {
    return 1;
  }
  else {
    return sub_21CB88F50();
  }
}

unint64_t FMFLabel.debugDescription.getter()
{
  return 0xD000000000000012;
}

void *static FMFLabel.defaultLabels(includingOther:)(char a1)
{
  if (a1) {
    uint64_t v1 = &unk_26CD68C80;
  }
  else {
    uint64_t v1 = (void *)MEMORY[0x263F8EE78];
  }
  sub_21CA7B850((uint64_t)v1);
  return &unk_26CD68C58;
}

uint64_t static FMFLabel.defaultLabelFor(localizedLabel:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  sub_21CA57E34(&qword_267C95C10);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_21CB8E120;
  *(_DWORD *)(inited + 32) = 50462976;
  uint64_t v7 = sub_21CAC79BC((char *)1, 5, 1, (char *)inited);
  *((void *)v7 + 2) = 5;
  v7[36] = 4;
  char v8 = v7[32];
  swift_bridgeObjectRetain();
  if (FMFDefaultLabel.localizedLabel.getter() == a1 && v9 == a2) {
    goto LABEL_3;
  }
  char v11 = sub_21CB88F50();
  swift_bridgeObjectRelease();
  if (v11) {
    goto LABEL_17;
  }
  char v8 = v7[33];
  if (FMFDefaultLabel.localizedLabel.getter() == a1 && v12 == a2) {
    goto LABEL_3;
  }
  char v13 = sub_21CB88F50();
  swift_bridgeObjectRelease();
  if (v13) {
    goto LABEL_17;
  }
  char v8 = v7[34];
  if (FMFDefaultLabel.localizedLabel.getter() == a1 && v14 == a2) {
    goto LABEL_3;
  }
  char v15 = sub_21CB88F50();
  swift_bridgeObjectRelease();
  if (v15) {
    goto LABEL_17;
  }
  char v8 = v7[35];
  if (FMFDefaultLabel.localizedLabel.getter() == a1 && v16 == a2) {
    goto LABEL_3;
  }
  char v17 = sub_21CB88F50();
  swift_bridgeObjectRelease();
  if (v17)
  {
LABEL_17:
    uint64_t result = swift_bridgeObjectRelease_n();
    goto LABEL_18;
  }
  char v8 = v7[36];
  if (FMFDefaultLabel.localizedLabel.getter() != a1 || v18 != a2)
  {
    char v19 = sub_21CB88F50();
    swift_bridgeObjectRelease();
    if ((v19 & 1) == 0)
    {
      uint64_t result = swift_bridgeObjectRelease_n();
      char v8 = 5;
      goto LABEL_18;
    }
    goto LABEL_17;
  }
LABEL_3:
  swift_bridgeObjectRelease_n();
  uint64_t result = swift_bridgeObjectRelease();
LABEL_18:
  *a3 = v8;
  return result;
}

uint64_t sub_21CAC7674@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FMFLabel.init(from:)(a1, a2);
}

uint64_t sub_21CAC768C(void *a1)
{
  uint64_t v2 = sub_21CA57E34(&qword_267C95C08);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = &v7[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_21CA2B2CC(a1, a1[3]);
  sub_21CAC7154();
  sub_21CB890C0();
  v7[31] = 0;
  sub_21CB88E70();
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v3 + 8))(v5, v2);
}

unint64_t sub_21CAC77D0()
{
  return 0xD000000000000012;
}

void *sub_21CAC7850(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_21CA03694(a1, a2, a3, a4, &qword_267C95C70, &qword_267C955B0);
}

void *sub_21CAC7864(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_21CA57E34((uint64_t *)&unk_267C96F20);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      void v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      char v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      char v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_21CAC82E4(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_21CAC7974(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_21CA4826C(a1, a2, a3, a4, &qword_267C952A0, (uint64_t (*)(void))type metadata accessor for FMFIntermediateFriend, (uint64_t (*)(void))type metadata accessor for FMFIntermediateFriend);
}

uint64_t sub_21CAC79A8(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_21CA2CC10(a1, a2, a3, a4, &qword_267C95C68, &qword_267C957E0);
}

char *sub_21CAC79BC(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    int64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = *((void *)a4 + 3);
  int64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      int64_t v7 = a2;
    }
LABEL_8:
    int64_t v8 = *((void *)a4 + 2);
    if (v7 <= v8) {
      int64_t v9 = *((void *)a4 + 2);
    }
    else {
      int64_t v9 = v7;
    }
    if (v9)
    {
      sub_21CA57E34(&qword_267C95C10);
      uint64_t v10 = (char *)swift_allocObject();
      size_t v11 = j__malloc_size(v10);
      *((void *)v10 + 2) = v8;
      *((void *)v10 + 3) = 2 * v11 - 64;
      uint64_t v12 = v10 + 32;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[v8 + 32]) {
          memmove(v12, a4 + 32, v8);
        }
        *((void *)a4 + 2) = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (char *)MEMORY[0x263F8EE78];
      uint64_t v12 = (char *)(MEMORY[0x263F8EE78] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_21CAC83D8(0, v8, v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

unint64_t sub_21CAC7ABC()
{
  unint64_t result = qword_267C95C18;
  if (!qword_267C95C18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C95C18);
  }
  return result;
}

unint64_t sub_21CAC7B14()
{
  unint64_t result = qword_267C95C20;
  if (!qword_267C95C20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C95C20);
  }
  return result;
}

unint64_t sub_21CAC7B6C()
{
  unint64_t result = qword_267C95C28;
  if (!qword_267C95C28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C95C28);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for FMFLabelSourceType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x21CAC7C8CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FMFLabelSourceType()
{
  return &type metadata for FMFLabelSourceType;
}

ValueMetadata *type metadata accessor for FMFLabelSaveType()
{
  return &type metadata for FMFLabelSaveType;
}

unsigned char *storeEnumTagSinglePayload for FMFDefaultLabel(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x21CAC7DA4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FMFDefaultLabel()
{
  return &type metadata for FMFDefaultLabel;
}

uint64_t sub_21CAC7DE0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for FMFLabel(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  return a1;
}

__n128 initializeWithTake for FMFLabel(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u16[0] = a2[1].n128_u16[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for FMFLabel(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for FMFLabel(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 18)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FMFLabel(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_WORD *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 18) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 18) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

unsigned char *_s7FMFCore16FMFLabelSaveTypeOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x21CAC8020);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FMFLabel.CodingKeys()
{
  return &type metadata for FMFLabel.CodingKeys;
}

unint64_t sub_21CAC805C()
{
  unint64_t result = qword_267C95C30;
  if (!qword_267C95C30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C95C30);
  }
  return result;
}

unint64_t sub_21CAC80B4()
{
  unint64_t result = qword_267C95C38;
  if (!qword_267C95C38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C95C38);
  }
  return result;
}

unint64_t sub_21CAC810C()
{
  unint64_t result = qword_267C95C40;
  if (!qword_267C95C40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C95C40);
  }
  return result;
}

uint64_t sub_21CAC8160(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_21CA4826C(a1, a2, a3, a4, &qword_267C95268, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
}

void *sub_21CAC8194(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_21CA3CD1C(a1, a2, a3, a4, &qword_267C95258);
}

void *sub_21CAC81A8(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_21CA57E34(&qword_267C952B0);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = j__malloc_size(v10);
      void v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[3 * v8 + 4]) {
          memmove(v12, a4 + 4, 24 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v12 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_21CAC84C0(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_21CAC82D0(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_21CA3CD1C(a1, a2, a3, a4, &qword_267C952B8);
}

uint64_t sub_21CAC82E4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_21CB88D50();
  __break(1u);
  return result;
}

char *sub_21CAC83D8(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  size_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + a1 + 32);
    unint64_t v6 = &__dst[v4];
    if (v5 >= &__dst[v4] || &v5[v4] <= __dst)
    {
      memcpy(__dst, v5, v4);
      return v6;
    }
  }
  uint64_t result = (char *)sub_21CB88D50();
  __break(1u);
  return result;
}

uint64_t sub_21CAC84C0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 24 * a1 + 32;
    unint64_t v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_21CB88D50();
  __break(1u);
  return result;
}

uint64_t assignWithCopy for FriendCacheData(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = (_OWORD *)(a1 + 72);
  unint64_t v5 = (_OWORD *)(a2 + 72);
  uint64_t v6 = *(void *)(a2 + 88);
  if (*(void *)(a1 + 88))
  {
    if (v6)
    {
      *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
      *(unsigned char *)(a1 + 73) = *(unsigned char *)(a2 + 73);
      *(unsigned char *)(a1 + 74) = *(unsigned char *)(a2 + 74);
      *(unsigned char *)(a1 + 75) = *(unsigned char *)(a2 + 75);
      *(void *)(a1 + 80) = *(void *)(a2 + 80);
      *(void *)(a1 + 88) = *(void *)(a2 + 88);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 96) = *(void *)(a2 + 96);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_21CAC89A8(a1 + 72);
      long long v7 = *(_OWORD *)(a2 + 88);
      *uint64_t v4 = *v5;
      *(_OWORD *)(a1 + 88) = v7;
    }
  }
  else if (v6)
  {
    *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
    *(unsigned char *)(a1 + 73) = *(unsigned char *)(a2 + 73);
    *(unsigned char *)(a1 + 74) = *(unsigned char *)(a2 + 74);
    *(unsigned char *)(a1 + 75) = *(unsigned char *)(a2 + 75);
    *(void *)(a1 + 80) = *(void *)(a2 + 80);
    *(void *)(a1 + 88) = *(void *)(a2 + 88);
    *(void *)(a1 + 96) = *(void *)(a2 + 96);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v8 = *(_OWORD *)(a2 + 88);
    *uint64_t v4 = *v5;
    *(_OWORD *)(a1 + 88) = v8;
  }
  uint64_t v9 = *(void *)(a2 + 104);
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  *(void *)(a1 + 104) = v9;
  long long v10 = *(_OWORD *)(a2 + 184);
  long long v11 = *(_OWORD *)(a2 + 200);
  long long v12 = *(_OWORD *)(a2 + 216);
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  *(_OWORD *)(a1 + 216) = v12;
  *(_OWORD *)(a1 + 200) = v11;
  *(_OWORD *)(a1 + 184) = v10;
  long long v13 = *(_OWORD *)(a2 + 248);
  long long v14 = *(_OWORD *)(a2 + 264);
  long long v15 = *(_OWORD *)(a2 + 280);
  *(_OWORD *)(a1 + 232) = *(_OWORD *)(a2 + 232);
  *(_OWORD *)(a1 + 264) = v14;
  *(_OWORD *)(a1 + 280) = v15;
  *(_OWORD *)(a1 + 248) = v13;
  long long v16 = *(_OWORD *)(a2 + 344);
  long long v18 = *(_OWORD *)(a2 + 296);
  long long v17 = *(_OWORD *)(a2 + 312);
  *(_OWORD *)(a1 + 328) = *(_OWORD *)(a2 + 328);
  *(_OWORD *)(a1 + 344) = v16;
  *(_OWORD *)(a1 + 296) = v18;
  *(_OWORD *)(a1 + 312) = v17;
  long long v19 = *(_OWORD *)(a2 + 120);
  long long v20 = *(_OWORD *)(a2 + 136);
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  *(_OWORD *)(a1 + 136) = v20;
  *(_OWORD *)(a1 + 120) = v19;
  uint64_t v21 = (_OWORD *)(a1 + 360);
  uint64_t v22 = (long long *)(a2 + 360);
  uint64_t v23 = *(void *)(a2 + 360);
  if (*(void *)(a1 + 360))
  {
    if (v23)
    {
      *(void *)(a1 + 360) = v23;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 368) = *(void *)(a2 + 368);
      *(void *)(a1 + 376) = *(void *)(a2 + 376);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 384) = *(void *)(a2 + 384);
      *(void *)(a1 + 392) = *(void *)(a2 + 392);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 400) = *(void *)(a2 + 400);
      *(void *)(a1 + 408) = *(void *)(a2 + 408);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 416) = *(unsigned char *)(a2 + 416);
    }
    else
    {
      sub_21CAC89FC(a1 + 360);
      long long v25 = *(_OWORD *)(a2 + 376);
      long long v24 = *(_OWORD *)(a2 + 392);
      long long v26 = *v22;
      *(_OWORD *)(a1 + 401) = *(_OWORD *)(a2 + 401);
      *(_OWORD *)(a1 + 376) = v25;
      *(_OWORD *)(a1 + 392) = v24;
      *uint64_t v21 = v26;
    }
  }
  else if (v23)
  {
    *(void *)(a1 + 360) = v23;
    *(void *)(a1 + 368) = *(void *)(a2 + 368);
    *(void *)(a1 + 376) = *(void *)(a2 + 376);
    *(void *)(a1 + 384) = *(void *)(a2 + 384);
    *(void *)(a1 + 392) = *(void *)(a2 + 392);
    *(void *)(a1 + 400) = *(void *)(a2 + 400);
    *(void *)(a1 + 408) = *(void *)(a2 + 408);
    *(unsigned char *)(a1 + 416) = *(unsigned char *)(a2 + 416);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v27 = *v22;
    long long v28 = *(_OWORD *)(a2 + 376);
    long long v29 = *(_OWORD *)(a2 + 392);
    *(_OWORD *)(a1 + 401) = *(_OWORD *)(a2 + 401);
    *(_OWORD *)(a1 + 376) = v28;
    *(_OWORD *)(a1 + 392) = v29;
    *uint64_t v21 = v27;
  }
  *(void *)(a1 + 424) = *(void *)(a2 + 424);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 432) = *(void *)(a2 + 432);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 440) = *(void *)(a2 + 440);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 448) = *(void *)(a2 + 448);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_21CAC89A8(uint64_t a1)
{
  return a1;
}

uint64_t sub_21CAC89FC(uint64_t a1)
{
  return a1;
}

uint64_t assignWithTake for FriendCacheData(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 88))
  {
    uint64_t v4 = *(void *)(a2 + 88);
    if (v4)
    {
      *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
      *(unsigned char *)(a1 + 73) = *(unsigned char *)(a2 + 73);
      *(unsigned char *)(a1 + 74) = *(unsigned char *)(a2 + 74);
      *(unsigned char *)(a1 + 75) = *(unsigned char *)(a2 + 75);
      *(void *)(a1 + 80) = *(void *)(a2 + 80);
      *(void *)(a1 + 88) = v4;
      swift_bridgeObjectRelease();
      *(void *)(a1 + 96) = *(void *)(a2 + 96);
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_21CAC89A8(a1 + 72);
  }
  long long v5 = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = v5;
LABEL_6:
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  *(_OWORD *)(a1 + 232) = *(_OWORD *)(a2 + 232);
  *(_OWORD *)(a1 + 248) = *(_OWORD *)(a2 + 248);
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
  *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
  *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  long long v6 = *(_OWORD *)(a2 + 312);
  *(_OWORD *)(a1 + 296) = *(_OWORD *)(a2 + 296);
  *(_OWORD *)(a1 + 312) = v6;
  long long v7 = *(_OWORD *)(a2 + 344);
  *(_OWORD *)(a1 + 328) = *(_OWORD *)(a2 + 328);
  *(_OWORD *)(a1 + 344) = v7;
  long long v8 = *(_OWORD *)(a2 + 280);
  *(_OWORD *)(a1 + 264) = *(_OWORD *)(a2 + 264);
  *(_OWORD *)(a1 + 280) = v8;
  if (!*(void *)(a1 + 360))
  {
LABEL_10:
    long long v13 = *(_OWORD *)(a2 + 376);
    *(_OWORD *)(a1 + 360) = *(_OWORD *)(a2 + 360);
    *(_OWORD *)(a1 + 376) = v13;
    *(_OWORD *)(a1 + 392) = *(_OWORD *)(a2 + 392);
    *(_OWORD *)(a1 + 401) = *(_OWORD *)(a2 + 401);
    goto LABEL_11;
  }
  uint64_t v9 = *(void *)(a2 + 360);
  if (!v9)
  {
    sub_21CAC89FC(a1 + 360);
    goto LABEL_10;
  }
  *(void *)(a1 + 360) = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(a2 + 376);
  *(void *)(a1 + 368) = *(void *)(a2 + 368);
  *(void *)(a1 + 376) = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void *)(a2 + 392);
  *(void *)(a1 + 384) = *(void *)(a2 + 384);
  *(void *)(a1 + 392) = v11;
  swift_bridgeObjectRelease();
  uint64_t v12 = *(void *)(a2 + 408);
  *(void *)(a1 + 400) = *(void *)(a2 + 400);
  *(void *)(a1 + 408) = v12;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 416) = *(unsigned char *)(a2 + 416);
LABEL_11:
  *(void *)(a1 + 424) = *(void *)(a2 + 424);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 432) = *(void *)(a2 + 432);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 440) = *(void *)(a2 + 440);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 448) = *(void *)(a2 + 448);
  swift_bridgeObjectRelease();
  return a1;
}

unint64_t sub_21CAC8CAC(char a1)
{
  unint64_t result = 0x6E69776F6C6C6F66;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x7265776F6C6C6F66;
      break;
    case 2:
      unint64_t result = 0xD000000000000010;
      break;
    case 3:
    case 4:
      unint64_t result = 0x6F46657275747566;
      break;
    case 5:
      unint64_t result = 0xD000000000000016;
      break;
    case 6:
    case 7:
      unint64_t result = 0xD00000000000001BLL;
      break;
    case 8:
      unint64_t result = 0xD000000000000020;
      break;
    case 9:
      unint64_t result = 0x6E65726566657270;
      break;
    case 10:
      unint64_t result = 0x7365727574616566;
      break;
    case 11:
      unint64_t result = 0x6769666E6F63;
      break;
    case 12:
      unint64_t result = 0x6F666E49796DLL;
      break;
    case 13:
      unint64_t result = 0x73656369766564;
      break;
    case 14:
      unint64_t result = 0x736C6562616CLL;
      break;
    case 15:
      unint64_t result = 0xD000000000000011;
      break;
    case 16:
      unint64_t result = 0x73746361746E6F63;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_21CAC8EF8(char *a1, char *a2)
{
  char v2 = *a2;
  unint64_t v3 = sub_21CAC8CAC(*a1);
  uint64_t v5 = v4;
  if (v3 == sub_21CAC8CAC(v2) && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = sub_21CB88F50();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_21CAC8F84()
{
  char v1 = *v0;
  sub_21CB89050();
  sub_21CAC8CAC(v1);
  sub_21CB88380();
  swift_bridgeObjectRelease();
  return sub_21CB89090();
}

uint64_t sub_21CAC8FE8()
{
  sub_21CAC8CAC(*v0);
  sub_21CB88380();

  return swift_bridgeObjectRelease();
}

uint64_t sub_21CAC903C()
{
  char v1 = *v0;
  sub_21CB89050();
  sub_21CAC8CAC(v1);
  sub_21CB88380();
  swift_bridgeObjectRelease();
  return sub_21CB89090();
}

uint64_t sub_21CAC909C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_21CAC99FC();
  *a1 = result;
  return result;
}

unint64_t sub_21CAC90CC@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_21CAC8CAC(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_21CAC90F8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_21CAC99FC();
  *a1 = result;
  return result;
}

uint64_t sub_21CAC9120(uint64_t a1)
{
  unint64_t v2 = sub_21CA5F16C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_21CAC915C(uint64_t a1)
{
  unint64_t v2 = sub_21CA5F16C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_21CAC9198(uint64_t a1, uint64_t a2)
{
  return sub_21CA2DEE4(a1, a2, (uint64_t (*)(void))type metadata accessor for FMFLabelledLocation, (uint64_t (*)(void))type metadata accessor for FMFLabelledLocation, (uint64_t (*)(char *, char *))_s7FMFCore19FMFLabelledLocationV2eeoiySbAC_ACtFZ_0);
}

uint64_t sub_21CAC91D8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v2 && a1 != a2)
  {
    unint64_t v3 = (uint64_t *)(a2 + 48);
    unint64_t v4 = (uint64_t *)(a1 + 48);
    do
    {
      uint64_t v5 = *v4;
      uint64_t v6 = *v3;
      if (*(v4 - 2) == *(v3 - 2) && *(v4 - 1) == *(v3 - 1))
      {
        if (v5 != v6) {
          return 0;
        }
      }
      else
      {
        char v8 = sub_21CB88F50();
        uint64_t result = 0;
        if ((v8 & 1) == 0 || v5 != v6) {
          return result;
        }
      }
      v3 += 3;
      v4 += 3;
      --v2;
    }
    while (v2);
  }
  return 1;
}

uint64_t sub_21CAC928C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  int v5 = *(unsigned __int8 *)(a1 + 48);
  int v6 = *(unsigned __int8 *)(a2 + 48);
  if (*(void *)(a1 + 32) == *(void *)(a2 + 32) && *(void *)(a1 + 40) == *(void *)(a2 + 40))
  {
    if (v5 == v6) {
      goto LABEL_13;
    }
    return 0;
  }
  char v8 = sub_21CB88F50();
  uint64_t result = 0;
  if ((v8 & 1) != 0 && ((v5 ^ v6) & 1) == 0)
  {
LABEL_13:
    uint64_t v10 = v2 - 1;
    if (v10)
    {
      uint64_t v11 = (unsigned __int8 *)(a2 + 72);
      for (uint64_t i = (unsigned __int8 *)(a1 + 72); ; i += 24)
      {
        int v13 = *i;
        int v14 = *v11;
        if (*((void *)i - 2) == *((void *)v11 - 2) && *((void *)i - 1) == *((void *)v11 - 1))
        {
          if (v13 != v14) {
            return 0;
          }
        }
        else
        {
          char v16 = sub_21CB88F50();
          uint64_t result = 0;
          if (v16 & 1) == 0 || ((v13 ^ v14)) {
            return result;
          }
        }
        v11 += 24;
        uint64_t result = 1;
        if (!--v10) {
          return result;
        }
      }
    }
    return 1;
  }
  return result;
}

uint64_t sub_21CAC93A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_21CA57E34((uint64_t *)&unk_267C96EE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void *sub_21CAC940C(void *a1)
{
  uint64_t v2 = a1[10];
  uint64_t v4 = a1[11];
  uint64_t v5 = a1[9];
  uint64_t v6 = a1[45];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_21CA59D84(v5, v2, v4);
  sub_21CA2D658(v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

unint64_t sub_21CAC955C(unint64_t result, char a2, uint64_t a3)
{
  if (a2)
  {
    if ((result & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (*(void *)(a3 + 16) > result)
    {
      return result;
    }
    __break(1u);
  }
  return result;
}

unint64_t sub_21CAC957C(char a1)
{
  char v1 = a1 & 1;
  sub_21CB89050();
  sub_21CB89060();
  uint64_t v2 = sub_21CB89090();

  return sub_21CAC9698(v1, v2);
}

unint64_t sub_21CAC95EC(uint64_t a1)
{
  uint64_t v2 = sub_21CB88AE0();

  return sub_21CAC9754(a1, v2);
}

unint64_t sub_21CAC9698(char a1, uint64_t a2)
{
  uint64_t v4 = v2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a2 & ~v5;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = *(void *)(v2 + 48);
    if (((((a1 & 1) == 0) ^ *(unsigned __int8 *)(v7 + result)) & 1) == 0)
    {
      uint64_t v8 = ~v5;
      for (unint64_t result = (result + 1) & v8;
            ((*(void *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v8)
      {
        if ((((a1 & 1) == 0) ^ *(unsigned char *)(v7 + result))) {
          break;
        }
      }
    }
  }
  return result;
}

unint64_t sub_21CAC9754(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v6 = ~v3;
    do
    {
      sub_21CA741DC(*(void *)(v2 + 48) + 40 * v4, (uint64_t)v9);
      char v7 = MEMORY[0x21D4B5BF0](v9, a1);
      sub_21CA74238((uint64_t)v9);
      if (v7) {
        break;
      }
      unint64_t v4 = (v4 + 1) & v6;
    }
    while (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

uint64_t *sub_21CAC981C(uint64_t *a1)
{
  uint64_t v2 = a1[8];
  sub_21CA2D658(*a1);
  sub_21CA2D658(v2);
  return a1;
}

unsigned char *storeEnumTagSinglePayload for FriendCacheData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 16 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 16) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF0) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xEF)
  {
    unsigned int v6 = ((a2 - 240) >> 8) + 1;
    *unint64_t result = a2 + 16;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x21CAC997CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 16;
        break;
    }
  }
  return result;
}

unint64_t sub_21CAC99A8()
{
  unint64_t result = qword_267C95D38;
  if (!qword_267C95D38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C95D38);
  }
  return result;
}

uint64_t sub_21CAC99FC()
{
  unint64_t v0 = sub_21CB88F80();
  swift_bridgeObjectRelease();
  if (v0 >= 0x11) {
    return 17;
  }
  else {
    return v0;
  }
}

void sub_21CAC9A50(uint64_t a1, uint64_t a2)
{
  uint64_t v41 = a1;
  uint64_t v42 = a2;
  uint64_t v40 = sub_21CB888F0();
  uint64_t v3 = *(void *)(v40 - 8);
  MEMORY[0x270FA5388](v40);
  uint64_t v5 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_21CB888B0();
  MEMORY[0x270FA5388](v6);
  uint64_t v7 = sub_21CB88150();
  MEMORY[0x270FA5388](v7 - 8);
  id v8 = objc_msgSend(self, sel_mainBundle);
  id v9 = objc_msgSend(v8, sel_bundleIdentifier);

  if (v9)
  {
    uint64_t v10 = sub_21CB882F0();
    uint64_t v12 = v11;

    v2[3] = v10;
    v2[4] = v12;
    uint64_t v39 = sub_21CA05908(0, (unint64_t *)&qword_267C96F80);
    sub_21CB88120();
    uint64_t v43 = MEMORY[0x263F8EE78];
    uint64_t v37 = sub_21CA364F8((unint64_t *)&qword_267C96F60, MEMORY[0x263F8F0F8]);
    uint64_t v13 = (uint64_t)v2;
    uint64_t v36 = sub_21CA57E34((uint64_t *)&unk_267C96F90);
    uint64_t v38 = sub_21CA356BC((unint64_t *)&qword_267C96F70, (uint64_t *)&unk_267C96F90);
    sub_21CB88A60();
    uint64_t v14 = *MEMORY[0x263F8F130];
    uint64_t v35 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 104);
    uint64_t v15 = v40;
    v35(v5, v14, v40);
    v2[5] = sub_21CB88930();
    sub_21CB88130();
    uint64_t v43 = MEMORY[0x263F8EE78];
    sub_21CB88A60();
    v35(v5, v14, v15);
    v2[6] = sub_21CB88930();
    v2[7] = objc_msgSend(objc_allocWithZone(MEMORY[0x263F66178]), sel_init);
    type metadata accessor for FMLocationShifter();
    swift_allocObject();
    uint64_t v16 = FMLocationShifter.init()();
    uint64_t v17 = MEMORY[0x263F8EE78];
    v2[9] = v16;
    v2[10] = v17;
    uint64_t v18 = v42;
    v2[2] = v41;
    v2[8] = v18;
    uint64_t v19 = qword_267C94990;
    swift_retain();
    swift_retain();
    if (v19 != -1) {
      swift_once();
    }
    uint64_t v20 = sub_21CB880A0();
    sub_21CA4CC18(v20, (uint64_t)qword_267CA5368);
    swift_retain_n();
    uint64_t v21 = sub_21CB88070();
    os_log_type_t v22 = sub_21CB88880();
    if (os_log_type_enabled(v21, v22))
    {
      uint64_t v23 = (uint8_t *)swift_slowAlloc();
      uint64_t v40 = swift_slowAlloc();
      uint64_t v45 = v40;
      *(_DWORD *)uint64_t v23 = 136315138;
      uint64_t v39 = (uint64_t)(v23 + 4);
      uint64_t v43 = v13;
      swift_retain();
      uint64_t v24 = sub_21CB890E0();
      unint64_t v26 = sub_21CA30E24(9uLL, v24, v25);
      uint64_t v28 = v27;
      uint64_t v30 = v29;
      uint64_t v32 = v31;
      swift_bridgeObjectRelease();
      MEMORY[0x21D4B5450](v26, v28, v30, v32);
      swift_bridgeObjectRelease();
      uint64_t v43 = 30768;
      unint64_t v44 = 0xE200000000000000;
      sub_21CB883D0();
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v43 = sub_21CA4E450(v43, v44, &v45);
      sub_21CB889C0();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_21CA00000, v21, v22, "👀 FMFProactiveLocationController<%s>: init", v23, 0xCu);
      uint64_t v33 = v40;
      swift_arrayDestroy();
      MEMORY[0x21D4B6B70](v33, -1, -1);
      MEMORY[0x21D4B6B70](v23, -1, -1);

      swift_release();
      swift_release();
    }
    else
    {

      swift_release();
      swift_release();
      swift_release_n();
    }
  }
  else
  {
    __break(1u);
  }
}

id *sub_21CACA054()
{
  if (qword_267C94990 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_21CB880A0();
  sub_21CA4CC18(v1, (uint64_t)qword_267CA5368);
  swift_retain_n();
  uint64_t v2 = sub_21CB88070();
  os_log_type_t v3 = sub_21CB88880();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v15 = swift_slowAlloc();
    uint64_t v16 = v15;
    *(_DWORD *)uint64_t v4 = 136315138;
    swift_retain();
    uint64_t v5 = sub_21CB890E0();
    unint64_t v7 = sub_21CA30E24(9uLL, v5, v6);
    uint64_t v9 = v8;
    uint64_t v11 = v10;
    uint64_t v13 = v12;
    swift_bridgeObjectRelease();
    MEMORY[0x21D4B5450](v7, v9, v11, v13);
    swift_bridgeObjectRelease();
    sub_21CB883D0();
    swift_release();
    swift_bridgeObjectRelease();
    sub_21CA4E450(30768, 0xE200000000000000, &v16);
    sub_21CB889C0();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_21CA00000, v2, v3, "👀 FMFProactiveLocationController<%s>: deinit", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x21D4B6B70](v15, -1, -1);
    MEMORY[0x21D4B6B70](v4, -1, -1);
  }
  else
  {

    swift_release_n();
  }
  swift_release();
  swift_bridgeObjectRelease();

  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_21CACA2EC()
{
  sub_21CACA054();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for FMFProactiveLocationController()
{
  return self;
}

void sub_21CACA344(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5 = *(void (**)(void *, void *))(a1 + 32);
  swift_retain();
  id v7 = a2;
  id v6 = a3;
  v5(a2, a3);
  swift_release();
}

uint64_t sub_21CACA3D0(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void, void), uint64_t a5)
{
  uint64_t v102 = a4;
  uint64_t v103 = a5;
  uint64_t v104 = a3;
  uint64_t v97 = a2;
  uint64_t v6 = sub_21CA57E34(&qword_267C95400);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v100 = (uint64_t)&v89 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_21CA57E34(&qword_267C95D60);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v101 = (uint64_t *)((char *)&v89 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = type metadata accessor for FMReverseGeocodingRequest();
  uint64_t v98 = *(void *)(v10 - 8);
  uint64_t v99 = v10;
  MEMORY[0x270FA5388](v10);
  uint64_t v89 = (uint64_t)&v89 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v110 = sub_21CA57E34(&qword_267C959C8);
  uint64_t v12 = *(void *)(v110 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v110);
  uint64_t v15 = (char *)&v89 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)&v89 - v16;
  uint64_t v92 = type metadata accessor for FMFLocation();
  uint64_t v111 = *(void *)(v92 - 8);
  uint64_t v18 = MEMORY[0x270FA5388](v92);
  uint64_t v96 = (uint64_t)&v89 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  os_log_type_t v22 = (char *)&v89 - v21;
  uint64_t v23 = MEMORY[0x270FA5388](v20);
  unint64_t v25 = (uint64_t *)((char *)&v89 - v24);
  uint64_t v26 = MEMORY[0x270FA5388](v23);
  uint64_t v94 = (uint64_t)&v89 - v27;
  uint64_t v28 = MEMORY[0x270FA5388](v26);
  uint64_t v93 = (uint64_t)&v89 - v29;
  uint64_t v30 = MEMORY[0x270FA5388](v28);
  uint64_t v91 = (uint64_t)&v89 - v31;
  uint64_t v32 = MEMORY[0x270FA5388](v30);
  uint64_t v108 = (char *)&v89 - v33;
  uint64_t v95 = v34;
  MEMORY[0x270FA5388](v32);
  uint64_t v36 = (char *)&v89 - v35;
  uint64_t v37 = sub_21CA57E34((uint64_t *)&unk_267C96EF0);
  uint64_t v38 = MEMORY[0x270FA5388](v37 - 8);
  uint64_t v90 = (uint64_t)&v89 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v38);
  uint64_t v107 = (uint64_t)&v89 - v40;
  uint64_t v41 = a1;
  int64_t v42 = *(void *)(a1 + 16);
  uint64_t v43 = MEMORY[0x263F8EE78];
  int v105 = v25;
  uint64_t v106 = v22;
  if (v42)
  {
    *(void *)&v113[0] = MEMORY[0x263F8EE78];
    sub_21CA3D644(0, v42, 0);
    uint64_t v44 = v41 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
    uint64_t v109 = *(void *)(v12 + 72);
    uint64_t v43 = *(void *)&v113[0];
    do
    {
      sub_21CA24E80(v44, (uint64_t)v17, &qword_267C959C8);
      uint64_t v45 = *(int *)(v110 + 48);
      uint64_t v46 = (uint64_t)&v15[v45];
      uint64_t v47 = (uint64_t)&v17[v45];
      sub_21CA570B0((uint64_t)v17, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for FMFLocation);
      sub_21CA24E80(v47, v46, (uint64_t *)&unk_267C96EF0);
      sub_21CA5913C((uint64_t)v15, (uint64_t)v36, (uint64_t (*)(void))type metadata accessor for FMFLocation);
      sub_21CA1B88C(v46, (uint64_t *)&unk_267C96EF0);
      sub_21CA1B88C((uint64_t)v17, &qword_267C959C8);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_21CA3D644(0, *(void *)(v43 + 16) + 1, 1);
        uint64_t v43 = *(void *)&v113[0];
      }
      unint64_t v49 = *(void *)(v43 + 16);
      unint64_t v48 = *(void *)(v43 + 24);
      if (v49 >= v48 >> 1)
      {
        sub_21CA3D644(v48 > 1, v49 + 1, 1);
        uint64_t v43 = *(void *)&v113[0];
      }
      *(void *)(v43 + 16) = v49 + 1;
      sub_21CA5913C((uint64_t)v36, v43+ ((*(unsigned __int8 *)(v111 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v111 + 80))+ *(void *)(v111 + 72) * v49, (uint64_t (*)(void))type metadata accessor for FMFLocation);
      v44 += v109;
      --v42;
    }
    while (v42);
    uint64_t v50 = v103;
    unint64_t v25 = v105;
    os_log_type_t v22 = v106;
  }
  else
  {
    uint64_t v50 = v103;
  }
  uint64_t v51 = v111;
  uint64_t v52 = v107;
  uint64_t v53 = (uint64_t)v108;
  uint64_t v54 = v97;
  if (*(void *)(v43 + 16))
  {
    sub_21CA570B0(v43 + ((*(unsigned __int8 *)(v111 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v111 + 80)), v107, (uint64_t (*)(void))type metadata accessor for FMFLocation);
    uint64_t v55 = 0;
  }
  else
  {
    uint64_t v55 = 1;
  }
  uint64_t v56 = v92;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v51 + 56))(v52, v55, 1, v92);
  swift_bridgeObjectRelease();
  uint64_t v57 = v90;
  sub_21CA24E80(v52, v90, (uint64_t *)&unk_267C96EF0);
  uint64_t v58 = v91;
  sub_21CA570B0(v54, v91, (uint64_t (*)(void))type metadata accessor for FMFLocation);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v51 + 48))(v57, 1, v56) == 1)
  {
    sub_21CA5913C(v58, v53, (uint64_t (*)(void))type metadata accessor for FMFLocation);
    sub_21CA1B88C(v57, (uint64_t *)&unk_267C96EF0);
  }
  else
  {
    sub_21CA58278(v58, (uint64_t (*)(void))type metadata accessor for FMFLocation);
    sub_21CA5913C(v57, v53, (uint64_t (*)(void))type metadata accessor for FMFLocation);
  }
  uint64_t v59 = v104;
  uint64_t v110 = *(void *)(v104 + 64);
  uint64_t v60 = v93;
  sub_21CA570B0(v53, v93, (uint64_t (*)(void))type metadata accessor for FMFLocation);
  uint64_t v61 = v94;
  sub_21CA570B0(v54, v94, (uint64_t (*)(void))type metadata accessor for FMFLocation);
  sub_21CA570B0(v60, (uint64_t)v25, (uint64_t (*)(void))type metadata accessor for FMFLocation);
  sub_21CA570B0(v61, (uint64_t)v22, (uint64_t (*)(void))type metadata accessor for FMFLocation);
  uint64_t v62 = *(unsigned __int8 *)(v111 + 80);
  uint64_t v63 = (v62 + 16) & ~v62;
  unint64_t v64 = (v95 + v63 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v65 = (v64 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v66 = v59;
  uint64_t v67 = (v62 + 16 + v65) & ~v62;
  uint64_t v68 = swift_allocObject();
  uint64_t v69 = v60;
  uint64_t v70 = v68;
  sub_21CA5913C(v69, v68 + v63, (uint64_t (*)(void))type metadata accessor for FMFLocation);
  *(void *)(v70 + v64) = v66;
  uint64_t v71 = (void *)(v70 + v65);
  uint64_t v72 = v102;
  *uint64_t v71 = v102;
  v71[1] = v50;
  uint64_t v73 = v70 + v67;
  uint64_t v74 = v66;
  uint64_t v75 = v50;
  uint64_t v76 = (uint64_t)v108;
  uint64_t v77 = v61;
  uint64_t v78 = v110;
  sub_21CA5913C(v77, v73, (uint64_t (*)(void))type metadata accessor for FMFLocation);
  uint64_t v79 = v96;
  sub_21CA570B0(v76, v96, (uint64_t (*)(void))type metadata accessor for FMFLocation);
  uint64_t v80 = v100;
  sub_21CA24E80(v78 + qword_267CA5298, v100, &qword_267C95400);
  swift_retain_n();
  swift_retain_n();
  uint64_t v81 = v101;
  sub_21CB1DC08(v79, v80, v101);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v98 + 48))(v81, 1, v99) == 1)
  {
    sub_21CA1B88C((uint64_t)v81, &qword_267C95D60);
    sub_21CA76144(v113);
    sub_21CA26A4C((uint64_t)v113, (uint64_t)v112, &qword_267C951E0);
    uint64_t v82 = v105;
    uint64_t v83 = (uint64_t)v106;
    sub_21CACAD3C((uint64_t)v112, v105, v74, v72, v75, (uint64_t)v106);
    swift_release();
    id v84 = v82;
  }
  else
  {
    uint64_t v85 = (uint64_t)v81;
    uint64_t v86 = v89;
    sub_21CA5913C(v85, v89, (uint64_t (*)(void))type metadata accessor for FMReverseGeocodingRequest);
    sub_21CB18850(v86, (uint64_t)sub_21CAD3744, v70);
    sub_21CA58278(v86, (uint64_t (*)(void))type metadata accessor for FMReverseGeocodingRequest);
    swift_release();
    id v84 = v105;
    uint64_t v83 = (uint64_t)v106;
  }
  uint64_t v87 = v107;
  sub_21CA58278((uint64_t)v84, (uint64_t (*)(void))type metadata accessor for FMFLocation);
  swift_release();
  swift_release();
  sub_21CA58278(v83, (uint64_t (*)(void))type metadata accessor for FMFLocation);
  sub_21CA58278(v76, (uint64_t (*)(void))type metadata accessor for FMFLocation);
  return sub_21CA1B88C(v87, (uint64_t *)&unk_267C96EF0);
}

uint64_t sub_21CACAD3C(uint64_t a1, uint64_t *a2, uint64_t a3, void (*a4)(void, void), uint64_t a5, uint64_t a6)
{
  uint64_t v44 = a6;
  uint64_t v45 = a5;
  uint64_t v10 = type metadata accessor for FMFLocation();
  uint64_t v11 = MEMORY[0x270FA5388](v10 - 8);
  uint64_t v13 = (char *)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x270FA5388](v11);
  uint64_t v16 = (uint64_t *)((char *)&v38 - v15);
  MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v38 - v17;
  sub_21CA26A4C(a1, (uint64_t)v49, &qword_267C951E0);
  unint64_t v19 = a2[1];
  if (v19)
  {
    uint64_t v42 = *a2;
    unint64_t v20 = v19;
  }
  else
  {
    unint64_t v20 = 0xE300000000000000;
    uint64_t v42 = 7104878;
  }
  sub_21CA570B0((uint64_t)a2, (uint64_t)v16, (uint64_t (*)(void))type metadata accessor for FMFLocation);
  sub_21CA570B0((uint64_t)a2, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for FMFLocation);
  sub_21CA26A4C((uint64_t)v49, (uint64_t)&v47, &qword_267C951E0);
  swift_bridgeObjectRetain();
  sub_21CAB6AA4(v49);
  uint64_t v43 = v18;
  FMFLocation.init(from:updatedLocation:address:)(v16, (uint64_t)v13, (uint64_t)&v47, (uint64_t)v18);
  if (qword_267C94990 != -1) {
    swift_once();
  }
  uint64_t v21 = sub_21CB880A0();
  sub_21CA4CC18(v21, (uint64_t)qword_267CA5368);
  swift_retain_n();
  swift_bridgeObjectRetain();
  os_log_type_t v22 = sub_21CB88070();
  os_log_type_t v23 = sub_21CB88880();
  int v24 = v23;
  if (os_log_type_enabled(v22, v23))
  {
    uint64_t v25 = swift_slowAlloc();
    uint64_t v40 = swift_slowAlloc();
    uint64_t v46 = v40;
    uint64_t v47 = a3;
    *(_DWORD *)uint64_t v25 = 136315394;
    uint64_t v38 = v25 + 4;
    swift_retain();
    int v39 = v24;
    uint64_t v26 = sub_21CB890E0();
    unint64_t v28 = sub_21CA30E24(9uLL, v26, v27);
    uint64_t v30 = v29;
    uint64_t v32 = v31;
    uint64_t v41 = a4;
    uint64_t v34 = v33;
    swift_bridgeObjectRelease();
    MEMORY[0x21D4B5450](v28, v30, v32, v34);
    swift_bridgeObjectRelease();
    uint64_t v47 = 30768;
    unint64_t v48 = 0xE200000000000000;
    sub_21CB883D0();
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v47 = sub_21CA4E450(v47, v48, &v46);
    a4 = v41;
    sub_21CB889C0();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v25 + 12) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v47 = sub_21CA4E450(v42, v20, &v46);
    sub_21CB889C0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_21CA00000, v22, (os_log_type_t)v39, "👀 FMFProactiveLocationController<%s>: did reverse geocode proactive location for %s", (uint8_t *)v25, 0x16u);
    uint64_t v35 = v40;
    swift_arrayDestroy();
    MEMORY[0x21D4B6B70](v35, -1, -1);
    MEMORY[0x21D4B6B70](v25, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_release_n();
  }
  uint64_t v36 = (uint64_t)v43;
  a4(v44, v43);
  return sub_21CA58278(v36, (uint64_t (*)(void))type metadata accessor for FMFLocation);
}

uint64_t sub_21CACB168(NSObject *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v87 = a3;
  uint64_t v86 = a2;
  uint64_t v6 = sub_21CB88100();
  uint64_t v90 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v79 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_21CB88150();
  uint64_t v89 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v88 = (char *)&v79 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v100 = MEMORY[0x263F8EE78];
  uint64_t v101 = MEMORY[0x263F8EE78];
  uint64_t v11 = *(NSObject **)(v3 + 40);
  uint64_t v12 = (void *)swift_allocObject();
  v12[2] = v3;
  v12[3] = a1;
  v12[4] = &v101;
  v12[5] = &v100;
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = sub_21CACC7E4;
  *(void *)(v13 + 24) = v12;
  uint64_t v98 = sub_21CA18880;
  uint64_t v99 = (void *)v13;
  uint64_t aBlock = MEMORY[0x263EF8330];
  unint64_t v95 = 1107296256;
  uint64_t v96 = sub_21CA18830;
  uint64_t v97 = &unk_26CD6C338;
  uint64_t v14 = _Block_copy(&aBlock);
  swift_retain();
  uint64_t v91 = a1;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  uint64_t v82 = (uint64_t)v11;
  dispatch_sync(v11, v14);
  _Block_release(v14);
  LOBYTE(v14) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v14)
  {
    __break(1u);
    goto LABEL_25;
  }
  uint64_t v15 = *(void *)(v100 + 16);
  id v84 = v12;
  uint64_t v83 = v6;
  uint64_t v85 = v8;
  if (v15 || *(void *)(v101 + 16))
  {
    if (qword_267C94990 == -1)
    {
LABEL_5:
      uint64_t v16 = sub_21CB880A0();
      sub_21CA4CC18(v16, (uint64_t)qword_267CA5368);
      swift_retain_n();
      uint64_t v17 = sub_21CB88070();
      os_log_type_t v18 = sub_21CB88880();
      BOOL v19 = os_log_type_enabled(v17, v18);
      uint64_t v81 = v9;
      if (v19)
      {
        uint64_t v20 = swift_slowAlloc();
        uint64_t v21 = swift_slowAlloc();
        v93[0] = v21;
        *(_DWORD *)uint64_t v20 = 136315650;
        uint64_t v80 = v20 + 4;
        uint64_t aBlock = v3;
        swift_retain();
        uint64_t v22 = sub_21CB890E0();
        unint64_t v24 = sub_21CA30E24(9uLL, v22, v23);
        uint64_t v26 = v25;
        uint64_t v28 = v27;
        uint64_t v30 = v29;
        swift_bridgeObjectRelease();
        MEMORY[0x21D4B5450](v24, v26, v28, v30);
        swift_bridgeObjectRelease();
        uint64_t aBlock = 30768;
        unint64_t v95 = 0xE200000000000000;
        sub_21CB883D0();
        swift_release();
        swift_bridgeObjectRelease();
        uint64_t aBlock = sub_21CA4E450(aBlock, v95, v93);
        sub_21CB889C0();
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v20 + 12) = 2048;
        swift_beginAccess();
        uint64_t aBlock = *(void *)(v100 + 16);
        sub_21CB889C0();
        *(_WORD *)(v20 + 22) = 2048;
        swift_beginAccess();
        uint64_t aBlock = *(void *)(v101 + 16);
        sub_21CB889C0();
        _os_log_impl(&dword_21CA00000, v17, v18, "👀 FMFProactiveLocationController<%s>: updated subscriptions: %ld added, %ld removed", (uint8_t *)v20, 0x20u);
        swift_arrayDestroy();
        MEMORY[0x21D4B6B70](v21, -1, -1);
        MEMORY[0x21D4B6B70](v20, -1, -1);
      }
      else
      {

        swift_release_n();
      }
      swift_beginAccess();
      uint64_t v31 = v101;
      uint64_t v32 = *(void *)(v101 + 16);
      if (v32)
      {
        swift_bridgeObjectRetain();
        uint64_t v33 = (unint64_t *)(v31 + 40);
        do
        {
          unint64_t v34 = *v33;
          uint64_t aBlock = *(v33 - 1);
          unint64_t v95 = v34;
          swift_bridgeObjectRetain();
          sub_21CACC8E0(&aBlock, v4);
          swift_bridgeObjectRelease();
          v33 += 2;
          --v32;
        }
        while (v32);
        swift_bridgeObjectRelease();
      }
      uint64_t v35 = swift_allocObject();
      uint64_t v36 = MEMORY[0x263F8EE78];
      *(void *)(v35 + 16) = MEMORY[0x263F8EE78];
      uint64_t v37 = swift_allocObject();
      *(void *)(v37 + 16) = v36;
      uint64_t v38 = swift_allocObject();
      *(void *)(v38 + 16) = v36;
      int v39 = dispatch_group_create();
      uint64_t v40 = dispatch_group_create();
      swift_beginAccess();
      uint64_t v41 = *(void *)(v100 + 16);
      if (v41)
      {
        uint64_t v80 = swift_bridgeObjectRetain();
        uint64_t v42 = (unint64_t *)(v80 + 40);
        do
        {
          unint64_t v43 = *v42;
          uint64_t aBlock = *(v42 - 1);
          unint64_t v95 = v43;
          swift_bridgeObjectRetain();
          sub_21CACD044(&aBlock, v39, v40, v4, v37, v38, v35);
          swift_bridgeObjectRelease();
          v42 += 2;
          --v41;
        }
        while (v41);
        swift_bridgeObjectRelease();
      }
      uint64_t v44 = (void *)swift_allocObject();
      void v44[2] = v35;
      v44[3] = v4;
      v44[4] = v37;
      v44[5] = v38;
      uint64_t v45 = v86;
      v44[6] = v40;
      v44[7] = v45;
      uint64_t v46 = v91;
      v44[8] = v87;
      v44[9] = v46;
      uint64_t v98 = sub_21CAD15F8;
      uint64_t v99 = v44;
      uint64_t aBlock = MEMORY[0x263EF8330];
      unint64_t v95 = 1107296256;
      uint64_t v96 = sub_21CA1B084;
      uint64_t v97 = &unk_26CD6C3D8;
      uint64_t v47 = _Block_copy(&aBlock);
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
      swift_retain();
      uint64_t v91 = v40;
      sub_21CAD160C(v45);
      unint64_t v48 = v88;
      sub_21CB88120();
      uint64_t v92 = MEMORY[0x263F8EE78];
      sub_21CA364F8((unint64_t *)&qword_267C96FC0, MEMORY[0x263F8F030]);
      sub_21CA57E34((uint64_t *)&unk_267C96DD0);
      sub_21CA356BC((unint64_t *)&qword_267C96FD0, (uint64_t *)&unk_267C96DD0);
      unint64_t v49 = v85;
      uint64_t v50 = v83;
      sub_21CB88A60();
      sub_21CB888A0();

      _Block_release(v47);
      (*(void (**)(char *, uint64_t))(v90 + 8))(v49, v50);
      (*(void (**)(char *, uint64_t))(v89 + 8))(v48, v81);
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      goto LABEL_17;
    }
LABEL_25:
    swift_once();
    goto LABEL_5;
  }
  uint64_t v52 = v91;
  uint64_t v53 = v9;
  uint64_t v54 = v6;
  if (qword_267C94990 != -1) {
    swift_once();
  }
  uint64_t v55 = sub_21CB880A0();
  sub_21CA4CC18(v55, (uint64_t)qword_267CA5368);
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v56 = sub_21CB88070();
  os_log_type_t v57 = sub_21CB88880();
  if (os_log_type_enabled(v56, v57))
  {
    uint64_t v58 = swift_slowAlloc();
    uint64_t v82 = swift_slowAlloc();
    v93[0] = v82;
    *(_DWORD *)uint64_t v58 = 136315394;
    uint64_t v80 = v58 + 4;
    uint64_t aBlock = v3;
    swift_retain();
    uint64_t v59 = sub_21CB890E0();
    unint64_t v61 = sub_21CA30E24(9uLL, v59, v60);
    uint64_t v63 = v62;
    uint64_t v65 = v64;
    uint64_t v67 = v66;
    swift_bridgeObjectRelease();
    uint64_t v68 = v65;
    uint64_t v53 = v9;
    MEMORY[0x21D4B5450](v61, v63, v68, v67);
    swift_bridgeObjectRelease();
    uint64_t aBlock = 30768;
    unint64_t v95 = 0xE200000000000000;
    sub_21CB883D0();
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t aBlock = sub_21CA4E450(aBlock, v95, v93);
    uint64_t v69 = v90;
    sub_21CB889C0();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v58 + 12) = 2048;
    uint64_t isa = (uint64_t)v91[2].isa;
    swift_bridgeObjectRelease();
    uint64_t aBlock = isa;
    sub_21CB889C0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_21CA00000, v56, v57, "👀 FMFProactiveLocationController<%s>: no subscriptions to update for %ld friends", (uint8_t *)v58, 0x16u);
    uint64_t v71 = v82;
    swift_arrayDestroy();
    uint64_t v54 = v83;
    MEMORY[0x21D4B6B70](v71, -1, -1);
    uint64_t v72 = v58;
    uint64_t v52 = v91;
    MEMORY[0x21D4B6B70](v72, -1, -1);
  }
  else
  {

    swift_release_n();
    swift_bridgeObjectRelease_n();
    uint64_t v69 = v90;
  }
  uint64_t v91 = *(NSObject **)(v4 + 48);
  uint64_t v73 = (void *)swift_allocObject();
  uint64_t v74 = v86;
  uint64_t v75 = v87;
  v73[2] = v86;
  v73[3] = v75;
  v73[4] = v4;
  v73[5] = v52;
  uint64_t v98 = sub_21CAD2F40;
  uint64_t v99 = v73;
  uint64_t aBlock = MEMORY[0x263EF8330];
  unint64_t v95 = 1107296256;
  uint64_t v96 = sub_21CA1B084;
  uint64_t v97 = &unk_26CD6C428;
  uint64_t v76 = _Block_copy(&aBlock);
  swift_retain();
  swift_bridgeObjectRetain();
  sub_21CAD160C(v74);
  uint64_t v77 = v88;
  sub_21CB88120();
  v93[0] = MEMORY[0x263F8EE78];
  sub_21CA364F8((unint64_t *)&qword_267C96FC0, MEMORY[0x263F8F030]);
  sub_21CA57E34((uint64_t *)&unk_267C96DD0);
  sub_21CA356BC((unint64_t *)&qword_267C96FD0, (uint64_t *)&unk_267C96DD0);
  uint64_t v78 = v85;
  sub_21CB88A60();
  MEMORY[0x21D4B5A20](0, v77, v78, v76);
  _Block_release(v76);
  (*(void (**)(char *, uint64_t))(v69 + 8))(v78, v54);
  (*(void (**)(char *, uint64_t))(v89 + 8))(v77, v53);
  swift_release();
  swift_bridgeObjectRelease();
LABEL_17:
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_21CACBF1C(uint64_t a1, void *a2, void **a3, void **a4)
{
  uint64_t v79 = a3;
  uint64_t v80 = a4;
  uint64_t v87 = sub_21CA57E34(&qword_267C95D68);
  uint64_t v6 = MEMORY[0x270FA5388](v87);
  uint64_t v86 = (uint64_t)&v72 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v85 = (uint64_t)&v72 - v8;
  uint64_t v74 = sub_21CA57E34(&qword_267C95D70);
  uint64_t v9 = MEMORY[0x270FA5388](v74);
  uint64_t v73 = (char *)&v72 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v72 - v11;
  uint64_t v13 = sub_21CA57E34(&qword_267C95D78);
  uint64_t v78 = *(void *)(v13 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v13);
  id v84 = (char *)&v72 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v77 = (char *)&v72 - v16;
  uint64_t v17 = type metadata accessor for FMFFriend();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  uint64_t v83 = (uint64_t *)((char *)&v72 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  uint64_t v82 = (uint64_t *)((char *)&v72 - v22);
  uint64_t v23 = MEMORY[0x270FA5388](v21);
  uint64_t v88 = (uint64_t)&v72 - v24;
  MEMORY[0x270FA5388](v23);
  uint64_t v26 = (char *)&v72 - v25;
  uint64_t v76 = a1;
  uint64_t v27 = *(void **)(a1 + 80);
  uint64_t v28 = (void *)MEMORY[0x263F8EE78];
  v89[0] = (void *)MEMORY[0x263F8EE78];
  uint64_t v29 = a2[2];
  uint64_t v72 = v27;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v29)
  {
    uint64_t v30 = *(unsigned __int8 *)(v18 + 80);
    uint64_t v31 = *(void *)(v18 + 72);
    uint64_t v75 = a2;
    uint64_t v81 = (void (*)(char *, char *, uint64_t))((v30 + 32) & ~v30);
    uint64_t v32 = (uint64_t)v81 + (void)a2;
    uint64_t v33 = (void *)MEMORY[0x263F8EE78];
    do
    {
      sub_21CA570B0(v32, (uint64_t)v26, (uint64_t (*)(void))type metadata accessor for FMFFriend);
      if (v26[*(int *)(v17 + 44)])
      {
        unint64_t v34 = v12;
        sub_21CA5913C((uint64_t)v26, v88, (uint64_t (*)(void))type metadata accessor for FMFFriend);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_21CA47FE8(0, v33[2] + 1, 1);
        }
        uint64_t v33 = v89[0];
        unint64_t v36 = v89[0][2];
        unint64_t v35 = v89[0][3];
        if (v36 >= v35 >> 1)
        {
          sub_21CA47FE8(v35 > 1, v36 + 1, 1);
          uint64_t v33 = v89[0];
        }
        v33[2] = v36 + 1;
        sub_21CA5913C(v88, (uint64_t)v81 + (void)v33 + v36 * v31, (uint64_t (*)(void))type metadata accessor for FMFFriend);
        uint64_t v12 = v34;
      }
      else
      {
        sub_21CA58278((uint64_t)v26, (uint64_t (*)(void))type metadata accessor for FMFFriend);
      }
      v32 += v31;
      --v29;
    }
    while (v29);
    uint64_t v28 = v89[0];
  }
  swift_bridgeObjectRelease();
  v89[0] = v28;
  swift_bridgeObjectRetain();
  sub_21CAD161C(v89);
  swift_release();
  uint64_t v75 = v89[0];
  v89[4] = v72;
  sub_21CA57E34(&qword_267C95D50);
  sub_21CA356BC(&qword_267C95D80, &qword_267C95D50);
  uint64_t v37 = v77;
  sub_21CB88280();
  swift_bridgeObjectRelease();
  uint64_t v38 = *(void (**)(char *, char *, uint64_t))(v78 + 16);
  uint64_t v39 = (uint64_t)v73;
  uint64_t v88 = v78 + 16;
  uint64_t v81 = v38;
  v38(v73, v37, v13);
  sub_21CA356BC(&qword_267C95D88, &qword_267C95D78);
  sub_21CB887B0();
  uint64_t v40 = v74;
  *(void **)(v39 + *(int *)(v74 + 36)) = v89[0];
  sub_21CA26A4C(v39, (uint64_t)v12, &qword_267C95D70);
  uint64_t v41 = &v12[*(int *)(v40 + 36)];
  uint64_t v42 = *(void **)v41;
  sub_21CB887D0();
  if (v42 != v89[0])
  {
    uint64_t v44 = (void (**)(char *, uint64_t))(v78 + 8);
    do
    {
      unint64_t v49 = (void (*)(void **, void))sub_21CB88800();
      uint64_t v50 = v85;
      sub_21CA24E80(v51, v85, &qword_267C95D68);
      v49(v89, 0);
      uint64_t v52 = v84;
      v81(v84, v12, v13);
      sub_21CB887E0();
      (*v44)(v52, v13);
      uint64_t v53 = v50;
      uint64_t v54 = v86;
      sub_21CA26A4C(v53, v86, &qword_267C95D68);
      LODWORD(v52) = swift_getEnumCaseMultiPayload();
      uint64_t v55 = v54 + *(int *)(sub_21CA57E34(&qword_267C95D90) + 48);
      if (v52 == 1)
      {
        uint64_t v56 = v82;
        sub_21CA5913C(v55, (uint64_t)v82, (uint64_t (*)(void))type metadata accessor for FMFFriend);
        uint64_t v57 = *v56;
        uint64_t v58 = v56[1];
        uint64_t v59 = v79;
        unint64_t v60 = *v79;
        swift_bridgeObjectRetain();
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *uint64_t v59 = v60;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          unint64_t v60 = sub_21CAC7864(0, v60[2] + 1, 1, v60);
          *uint64_t v79 = v60;
        }
        unint64_t v63 = v60[2];
        unint64_t v62 = v60[3];
        if (v63 >= v62 >> 1)
        {
          unint64_t v60 = sub_21CAC7864((void *)(v62 > 1), v63 + 1, 1, v60);
          *uint64_t v79 = v60;
        }
        v60[2] = v63 + 1;
        uint64_t v64 = &v60[2 * v63];
        v64[4] = v57;
        uint64_t v46 = v64 + 4;
        uint64_t v47 = (uint64_t)v82;
      }
      else
      {
        uint64_t v65 = v83;
        sub_21CA5913C(v55, (uint64_t)v83, (uint64_t (*)(void))type metadata accessor for FMFFriend);
        uint64_t v66 = *v65;
        uint64_t v58 = v65[1];
        uint64_t v67 = v80;
        uint64_t v68 = *v80;
        swift_bridgeObjectRetain();
        char v69 = swift_isUniquelyReferenced_nonNull_native();
        *uint64_t v67 = v68;
        if ((v69 & 1) == 0)
        {
          uint64_t v68 = sub_21CAC7864(0, v68[2] + 1, 1, v68);
          *uint64_t v80 = v68;
        }
        unint64_t v71 = v68[2];
        unint64_t v70 = v68[3];
        if (v71 >= v70 >> 1)
        {
          uint64_t v68 = sub_21CAC7864((void *)(v70 > 1), v71 + 1, 1, v68);
          *uint64_t v80 = v68;
        }
        v68[2] = v71 + 1;
        uint64_t v45 = &v68[2 * v71];
        v45[4] = v66;
        uint64_t v46 = v45 + 4;
        uint64_t v47 = (uint64_t)v83;
      }
      v46[1] = v58;
      sub_21CA58278(v47, (uint64_t (*)(void))type metadata accessor for FMFFriend);
      unint64_t v48 = *(void **)v41;
      sub_21CB887D0();
    }
    while (v48 != v89[0]);
  }
  sub_21CA1B88C((uint64_t)v12, &qword_267C95D70);
  (*(void (**)(char *, uint64_t))(v78 + 8))(v77, v13);
  *(void *)(v76 + 80) = v75;
  return swift_bridgeObjectRelease();
}

uint64_t sub_21CACC7A4()
{
  swift_release();
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_21CACC7E4()
{
  return sub_21CACBF1C(*(void *)(v0 + 16), *(void **)(v0 + 24), *(void ***)(v0 + 32), *(void ***)(v0 + 40));
}

uint64_t sub_21CACC7F0()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_21CACC800(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (result)
  {
    uint64_t v5 = (void (*)(uint64_t))result;
    sub_21CAD160C(result);
    swift_retain();
    sub_21CA57E34(&qword_267C95D50);
    sub_21CB88910();
    swift_release();
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_21CAD306C(v7, a4);
    swift_bridgeObjectRelease();
    v5(v6);
    swift_bridgeObjectRelease();
    return sub_21CAD2F4C((uint64_t)v5);
  }
  return result;
}

void sub_21CACC8E0(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = *a1;
  unint64_t v3 = a1[1];
  uint64_t v5 = qword_267C94990;
  swift_bridgeObjectRetain();
  if (v5 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_21CB880A0();
  sub_21CA4CC18(v6, (uint64_t)qword_267CA5368);
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  uint64_t v7 = sub_21CB88070();
  os_log_type_t v8 = sub_21CB88880();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = swift_slowAlloc();
    uint64_t v26 = swift_slowAlloc();
    uint64_t v34 = v26;
    *(_DWORD *)uint64_t v9 = 136315394;
    swift_retain();
    uint64_t v10 = sub_21CB890E0();
    os_log_type_t type = v8;
    unint64_t v12 = sub_21CA30E24(9uLL, v10, v11);
    uint64_t v14 = v13;
    uint64_t v16 = v15;
    uint64_t v27 = v4;
    uint64_t v18 = v17;
    swift_bridgeObjectRelease();
    MEMORY[0x21D4B5450](v12, v14, v16, v18);
    swift_bridgeObjectRelease();
    unint64_t v29 = 0xE200000000000000;
    sub_21CB883D0();
    swift_release();
    swift_bridgeObjectRelease();
    sub_21CA4E450(30768, 0xE200000000000000, &v34);
    uint64_t v4 = v27;
    sub_21CB889C0();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v9 + 12) = 2080;
    swift_bridgeObjectRetain();
    uint64_t aBlock = sub_21CA4E450(v27, v3, &v34);
    sub_21CB889C0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_21CA00000, v7, type, "👀 FMFProactiveLocationController<%s>: will unsubscribe for %s", (uint8_t *)v9, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x21D4B6B70](v26, -1, -1);
    MEMORY[0x21D4B6B70](v9, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_release_n();
  }
  uint64_t v19 = *(void **)(a2 + 56);
  uint64_t v20 = (void *)sub_21CB882C0();
  uint64_t v21 = (void *)sub_21CB882C0();
  uint64_t v22 = swift_allocObject();
  swift_weakInit();
  uint64_t v23 = (void *)swift_allocObject();
  v23[2] = v22;
  v23[3] = v4;
  v23[4] = v3;
  uint64_t v32 = sub_21CAD4558;
  uint64_t v33 = v23;
  uint64_t aBlock = MEMORY[0x263EF8330];
  unint64_t v29 = 1107296256;
  uint64_t v30 = sub_21CB4F760;
  uint64_t v31 = &unk_26CD6C798;
  uint64_t v24 = _Block_copy(&aBlock);
  swift_release();
  objc_msgSend(v19, sel_unsubscribeForId_clientApp_completion_, v20, v21, v24);
  _Block_release(v24);
}

void sub_21CACCCB4(void *a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    if (qword_267C94990 != -1) {
      swift_once();
    }
    uint64_t v7 = sub_21CB880A0();
    sub_21CA4CC18(v7, (uint64_t)qword_267CA5368);
    swift_retain();
    swift_bridgeObjectRetain();
    id v8 = a1;
    swift_retain();
    swift_bridgeObjectRetain();
    id v9 = a1;
    uint64_t v10 = sub_21CB88070();
    os_log_type_t v11 = sub_21CB88880();
    if (os_log_type_enabled(v10, v11))
    {
      os_log_type_t v25 = v11;
      uint64_t v26 = a3;
      uint64_t v12 = swift_slowAlloc();
      uint64_t v27 = swift_slowAlloc();
      uint64_t v28 = v27;
      *(_DWORD *)uint64_t v12 = 136315650;
      swift_retain();
      uint64_t v13 = sub_21CB890E0();
      unint64_t v15 = sub_21CA30E24(9uLL, v13, v14);
      uint64_t v17 = v16;
      uint64_t v19 = v18;
      uint64_t v21 = v20;
      swift_bridgeObjectRelease();
      MEMORY[0x21D4B5450](v15, v17, v19, v21);
      swift_bridgeObjectRelease();
      sub_21CB883D0();
      swift_release();
      swift_bridgeObjectRelease();
      sub_21CA4E450(30768, 0xE200000000000000, &v28);
      sub_21CB889C0();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v12 + 12) = 2080;
      swift_bridgeObjectRetain();
      sub_21CA4E450(v26, a4, &v28);
      sub_21CB889C0();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v12 + 22) = 2080;
      if (a1)
      {
        swift_getErrorValue();
        uint64_t v22 = sub_21CB89000();
        unint64_t v24 = v23;
      }
      else
      {
        uint64_t v22 = 0;
        unint64_t v24 = 0xE000000000000000;
      }
      sub_21CA4E450(v22, v24, &v28);
      sub_21CB889C0();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_21CA00000, v10, v25, "👀 FMFProactiveLocationController<%s>: did unsubscribe for %s (error=%s)", (uint8_t *)v12, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x21D4B6B70](v27, -1, -1);
      MEMORY[0x21D4B6B70](v12, -1, -1);
      swift_release();
    }
    else
    {
      swift_bridgeObjectRelease_n();
      swift_release_n();
    }
  }
}

void sub_21CACD044(uint64_t *a1, dispatch_group_t group, NSObject *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v9 = *a1;
  unint64_t v10 = a1[1];
  dispatch_group_enter(group);
  unint64_t v36 = a3;
  dispatch_group_enter(a3);
  uint64_t v11 = qword_267C94990;
  swift_bridgeObjectRetain();
  if (v11 != -1) {
    swift_once();
  }
  uint64_t v12 = sub_21CB880A0();
  sub_21CA4CC18(v12, (uint64_t)qword_267CA5368);
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  uint64_t v13 = sub_21CB88070();
  os_log_type_t v14 = sub_21CB88880();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = swift_slowAlloc();
    id v34 = (id)swift_slowAlloc();
    id v47 = v34;
    *(_DWORD *)uint64_t v15 = 136315394;
    swift_retain();
    uint64_t v16 = sub_21CB890E0();
    unint64_t v18 = sub_21CA30E24(9uLL, v16, v17);
    uint64_t v20 = v19;
    os_log_type_t type = v14;
    uint64_t v22 = v21;
    uint64_t v24 = v23;
    swift_bridgeObjectRelease();
    MEMORY[0x21D4B5450](v18, v20, v22, v24);
    swift_bridgeObjectRelease();
    unint64_t v42 = 0xE200000000000000;
    sub_21CB883D0();
    swift_release();
    swift_bridgeObjectRelease();
    sub_21CA4E450(30768, 0xE200000000000000, (uint64_t *)&v47);
    sub_21CB889C0();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v15 + 12) = 2080;
    swift_bridgeObjectRetain();
    uint64_t aBlock = sub_21CA4E450(v9, v10, (uint64_t *)&v47);
    sub_21CB889C0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_21CA00000, v13, type, "👀 FMFProactiveLocationController<%s>: cache-fetching for %s…", (uint8_t *)v15, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x21D4B6B70](v34, -1, -1);
    MEMORY[0x21D4B6B70](v15, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_release_n();
  }
  id v35 = *(id *)(a4 + 56);
  os_log_type_t v25 = (void *)sub_21CB882C0();
  uint64_t v26 = swift_allocObject();
  swift_weakInit();
  uint64_t v27 = *(void **)(a4 + 40);
  uint64_t v28 = (void *)swift_allocObject();
  v28[2] = v26;
  v28[3] = v9;
  v28[4] = v10;
  v28[5] = v27;
  v28[6] = a5;
  v28[7] = a6;
  v28[8] = group;
  v28[9] = v36;
  v28[10] = a7;
  uint64_t v45 = sub_21CAD3C98;
  uint64_t v46 = v28;
  uint64_t aBlock = MEMORY[0x263EF8330];
  unint64_t v42 = 1107296256;
  unint64_t v43 = sub_21CACA344;
  uint64_t v44 = &unk_26CD6C658;
  unint64_t v29 = _Block_copy(&aBlock);
  id v30 = v27;
  swift_retain();
  swift_retain();
  uint64_t v31 = group;
  uint64_t v32 = v36;
  swift_retain();
  swift_release();
  objc_msgSend(v35, sel_latestLocationFromCacheForId_completion_, v25, v29);
  _Block_release(v29);
}

uint64_t sub_21CACD464(void *a1, uint64_t a2, uint64_t a3, void *a4, unint64_t a5, void *a6, uint64_t a7, uint64_t a8, void *a9, void (**a10)(char *, uint64_t), uint64_t a11)
{
  uint64_t v81 = a7;
  uint64_t v82 = a8;
  id v87 = a4;
  unint64_t v88 = a5;
  uint64_t v14 = sub_21CB88100();
  uint64_t v86 = *(void (***)(char *, uint64_t))(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (char *)v75 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_21CB88150();
  uint64_t v18 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v20 = (char *)v75 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = type metadata accessor for FMFLocation();
  uint64_t v80 = *(void *)(v21 - 8);
  uint64_t v22 = *(void *)(v80 + 64);
  uint64_t v23 = MEMORY[0x270FA5388](v21 - 8);
  uint64_t v83 = (uint64_t)v75 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v23);
  uint64_t v84 = (uint64_t)v75 - v24;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v26 = result;
    uint64_t v85 = a6;
    uint64_t v27 = a9;
    if (!a1 || a2) {
      goto LABEL_4;
    }
    uint64_t v79 = a9;
    id v78 = a1;
    id v34 = objc_msgSend(v78, sel_findMyId);
    id v35 = (id)sub_21CB882F0();
    uint64_t v37 = v36;

    if (v35 == v87 && v37 == v88)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      char v38 = sub_21CB88F50();
      swift_bridgeObjectRelease();
      if ((v38 & 1) == 0)
      {

        uint64_t v27 = v79;
LABEL_4:
        uint64_t v28 = (void *)swift_allocObject();
        id v29 = v87;
        unint64_t v30 = v88;
        v28[2] = v26;
        v28[3] = v29;
        v28[4] = v30;
        v28[5] = a11;
        v28[6] = v27;
        uint64_t v94 = sub_21CAD3D24;
        unint64_t v95 = v28;
        uint64_t aBlock = MEMORY[0x263EF8330];
        unint64_t v91 = 1107296256;
        uint64_t v92 = sub_21CA1B084;
        uint64_t v93 = &unk_26CD6C6A8;
        uint64_t v31 = v27;
        uint64_t v32 = _Block_copy(&aBlock);
        swift_retain();
        swift_bridgeObjectRetain();
        id v33 = v31;
        swift_retain();
        sub_21CB88120();
        uint64_t v89 = MEMORY[0x263F8EE78];
        sub_21CA364F8((unint64_t *)&qword_267C96FC0, MEMORY[0x263F8F030]);
        sub_21CA57E34((uint64_t *)&unk_267C96DD0);
        sub_21CA356BC((unint64_t *)&qword_267C96FD0, (uint64_t *)&unk_267C96DD0);
        sub_21CB88A60();
        MEMORY[0x21D4B5A20](0, v20, v16, v32);
        _Block_release(v32);
        swift_release();
        v86[1](v16, v14);
        (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
        return swift_release();
      }
    }
    if (qword_267C94990 != -1) {
      swift_once();
    }
    uint64_t v39 = a10;
    uint64_t v40 = sub_21CB880A0();
    sub_21CA4CC18(v40, (uint64_t)qword_267CA5368);
    swift_retain_n();
    unint64_t v41 = v88;
    swift_bridgeObjectRetain_n();
    unint64_t v42 = sub_21CB88070();
    os_log_type_t v43 = sub_21CB88880();
    int v44 = v43;
    if (os_log_type_enabled(v42, v43))
    {
      uint64_t v45 = swift_slowAlloc();
      uint64_t v77 = swift_slowAlloc();
      uint64_t v89 = v77;
      uint64_t aBlock = v26;
      *(_DWORD *)uint64_t v45 = 136315394;
      v75[1] = v45 + 4;
      swift_retain();
      int v76 = v44;
      uint64_t v46 = sub_21CB890E0();
      unint64_t v48 = sub_21CA30E24(9uLL, v46, v47);
      uint64_t v50 = v49;
      uint64_t v52 = v51;
      uint64_t v86 = a10;
      uint64_t v54 = v53;
      swift_bridgeObjectRelease();
      MEMORY[0x21D4B5450](v48, v50, v52, v54);
      swift_bridgeObjectRelease();
      uint64_t aBlock = 30768;
      unint64_t v91 = 0xE200000000000000;
      sub_21CB883D0();
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t aBlock = sub_21CA4E450(aBlock, v91, &v89);
      uint64_t v39 = v86;
      sub_21CB889C0();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v45 + 12) = 2080;
      swift_bridgeObjectRetain();
      id v55 = v87;
      uint64_t aBlock = sub_21CA4E450((uint64_t)v87, v41, &v89);
      sub_21CB889C0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_21CA00000, v42, (os_log_type_t)v76, "👀 FMFProactiveLocationController<%s>: did cache-fetch for %s", (uint8_t *)v45, 0x16u);
      uint64_t v56 = v77;
      swift_arrayDestroy();
      MEMORY[0x21D4B6B70](v56, -1, -1);
      MEMORY[0x21D4B6B70](v45, -1, -1);

      uint64_t v57 = v85;
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_release_n();
      uint64_t v57 = v85;
      id v55 = v87;
    }
    uint64_t v58 = (uint64_t (*)(uint64_t, uint64_t))swift_allocObject();
    *((void *)v58 + 2) = v57;
    *((void *)v58 + 3) = v26;
    *((void *)v58 + 4) = v55;
    *((void *)v58 + 5) = v41;
    uint64_t v59 = v82;
    *((void *)v58 + 6) = v81;
    *((void *)v58 + 7) = v59;
    id v60 = v78;
    unint64_t v61 = v79;
    *((void *)v58 + 8) = v79;
    *((void *)v58 + 9) = v39;
    unint64_t v62 = v39;
    id v63 = v60;
    id v87 = v63;
    swift_retain();
    swift_bridgeObjectRetain();
    id v64 = v57;
    swift_retain();
    swift_retain();
    id v65 = v61;
    uint64_t v66 = v62;
    uint64_t v67 = v84;
    sub_21CA90D4C(v63, v84);
    sub_21CA57E34(&qword_267C95250);
    uint64_t v68 = *(unsigned __int8 *)(v80 + 80);
    uint64_t v69 = swift_allocObject();
    *(_OWORD *)(v69 + 16) = xmmword_21CB8B220;
    sub_21CA570B0(v67, v69 + ((v68 + 32) & ~v68), (uint64_t (*)(void))type metadata accessor for FMFLocation);
    uint64_t v70 = v83;
    sub_21CA570B0(v67, v83, (uint64_t (*)(void))type metadata accessor for FMFLocation);
    uint64_t v71 = (v68 + 16) & ~v68;
    unint64_t v72 = (v22 + v71 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v73 = swift_allocObject();
    sub_21CA5913C(v70, v73 + v71, (uint64_t (*)(void))type metadata accessor for FMFLocation);
    *(void *)(v73 + v72) = v26;
    uint64_t v74 = (uint64_t (**)(uint64_t, uint64_t))(v73 + ((v72 + 15) & 0xFFFFFFFFFFFFFFF8));
    *uint64_t v74 = sub_21CAD3D9C;
    v74[1] = v58;
    swift_retain();
    swift_retain();
    sub_21CA2B814(v69, (uint64_t)sub_21CAD33C8, v73);
    swift_bridgeObjectRelease();
    swift_release();
    sub_21CA58278(v67, (uint64_t (*)(void))type metadata accessor for FMFLocation);

    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_21CACDD2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, void *a10)
{
  uint64_t v42 = a5;
  uint64_t v43 = a7;
  v41[1] = a6;
  uint64_t v53 = a3;
  uint64_t v45 = a8;
  uint64_t v46 = a10;
  int v44 = a9;
  uint64_t v49 = sub_21CB88100();
  uint64_t v52 = *(void *)(v49 - 8);
  MEMORY[0x270FA5388](v49);
  unint64_t v48 = (char *)v41 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_21CB88150();
  uint64_t v50 = *(void *)(v15 - 8);
  uint64_t v51 = v15;
  MEMORY[0x270FA5388](v15);
  unint64_t v47 = (char *)v41 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for FMFLocation();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = *(void *)(v18 + 64);
  uint64_t v20 = MEMORY[0x270FA5388](v17 - 8);
  uint64_t v21 = (char *)v41 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  uint64_t v23 = (char *)v41 - v22;
  sub_21CA570B0(a1, (uint64_t)v41 - v22, (uint64_t (*)(void))type metadata accessor for FMFLocation);
  sub_21CA570B0(a2, (uint64_t)v21, (uint64_t (*)(void))type metadata accessor for FMFLocation);
  uint64_t v24 = *(unsigned __int8 *)(v18 + 80);
  uint64_t v25 = (v24 + 48) & ~v24;
  uint64_t v26 = v19 + 7;
  unint64_t v27 = (v19 + 7 + v25) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v28 = (v24 + v27 + 8) & ~v24;
  unint64_t v29 = (v26 + v28) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v30 = (void *)swift_allocObject();
  uint64_t v31 = v42;
  v30[2] = a4;
  v30[3] = v31;
  v30[4] = a6;
  v30[5] = v43;
  sub_21CA5913C((uint64_t)v23, (uint64_t)v30 + v25, (uint64_t (*)(void))type metadata accessor for FMFLocation);
  *(void *)((char *)v30 + v27) = v45;
  sub_21CA5913C((uint64_t)v21, (uint64_t)v30 + v28, (uint64_t (*)(void))type metadata accessor for FMFLocation);
  uint64_t v32 = v44;
  *(void *)((char *)v30 + v29) = v44;
  id v33 = v46;
  *(void *)((char *)v30 + ((v29 + 15) & 0xFFFFFFFFFFFFFFF8)) = v46;
  aBlock[4] = sub_21CAD445C;
  aBlock[5] = v30;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_21CA1B084;
  aBlock[3] = &unk_26CD6C748;
  id v34 = _Block_copy(aBlock);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  id v35 = v32;
  id v36 = v33;
  uint64_t v37 = v47;
  sub_21CB88120();
  uint64_t v54 = MEMORY[0x263F8EE78];
  sub_21CA364F8((unint64_t *)&qword_267C96FC0, MEMORY[0x263F8F030]);
  sub_21CA57E34((uint64_t *)&unk_267C96DD0);
  sub_21CA356BC((unint64_t *)&qword_267C96FD0, (uint64_t *)&unk_267C96DD0);
  uint64_t v39 = v48;
  uint64_t v38 = v49;
  sub_21CB88A60();
  MEMORY[0x21D4B5A20](0, v37, v39, v34);
  _Block_release(v34);
  (*(void (**)(char *, uint64_t))(v52 + 8))(v39, v38);
  (*(void (**)(char *, uint64_t))(v50 + 8))(v37, v51);
  return swift_release();
}

void sub_21CACE194(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, NSObject *a8, NSObject *a9)
{
  uint64_t v66 = a2;
  uint64_t v16 = type metadata accessor for FMFLocation();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = MEMORY[0x270FA5388](v16 - 8);
  uint64_t v20 = (char *)&v56 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  uint64_t v67 = (uint64_t)&v56 - v21;
  if (qword_267C94990 != -1) {
    swift_once();
  }
  uint64_t v22 = (unint64_t *)(a4 + 16);
  uint64_t v23 = sub_21CB880A0();
  sub_21CA4CC18(v23, (uint64_t)qword_267CA5368);
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v24 = sub_21CB88070();
  os_log_type_t v25 = sub_21CB88880();
  int v65 = v25;
  if (os_log_type_enabled(v24, v25))
  {
    uint64_t v26 = swift_slowAlloc();
    unint64_t v62 = v22;
    uint64_t v27 = v26;
    uint64_t v60 = swift_slowAlloc();
    uint64_t v68 = v60;
    uint64_t v69 = a1;
    *(_DWORD *)uint64_t v27 = 136315394;
    uint64_t v58 = v27 + 4;
    swift_retain();
    os_log_t v59 = v24;
    uint64_t v28 = sub_21CB890E0();
    unint64_t v30 = sub_21CA30E24(9uLL, v28, v29);
    uint64_t v61 = a5;
    unint64_t v31 = v30;
    uint64_t v63 = a6;
    uint64_t v64 = v17;
    uint64_t v33 = v32;
    uint64_t v35 = v34;
    unint64_t v57 = a3;
    uint64_t v36 = a7;
    uint64_t v37 = v20;
    uint64_t v38 = a8;
    uint64_t v40 = v39;
    swift_bridgeObjectRelease();
    MEMORY[0x21D4B5450](v31, v33, v35, v40);
    a8 = v38;
    uint64_t v20 = v37;
    a7 = v36;
    swift_bridgeObjectRelease();
    uint64_t v69 = 30768;
    unint64_t v70 = 0xE200000000000000;
    sub_21CB883D0();
    swift_release();
    a6 = v63;
    swift_bridgeObjectRelease();
    uint64_t v69 = sub_21CA4E450(v69, v70, &v68);
    uint64_t v17 = v64;
    sub_21CB889C0();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v27 + 12) = 2080;
    unint64_t v41 = v57;
    swift_bridgeObjectRetain();
    uint64_t v69 = sub_21CA4E450(v66, v41, &v68);
    a5 = v61;
    sub_21CB889C0();
    swift_bridgeObjectRelease_n();
    os_log_t v42 = v59;
    _os_log_impl(&dword_21CA00000, v59, (os_log_type_t)v65, "👀 FMFProactiveLocationController<%s>: did reverse-geo for %s", (uint8_t *)v27, 0x16u);
    uint64_t v43 = v60;
    swift_arrayDestroy();
    MEMORY[0x21D4B6B70](v43, -1, -1);
    uint64_t v44 = v27;
    uint64_t v22 = v62;
    MEMORY[0x21D4B6B70](v44, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_release_n();
  }
  sub_21CA570B0(a5, v67, (uint64_t (*)(void))type metadata accessor for FMFLocation);
  swift_beginAccess();
  unint64_t v45 = *v22;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v22 = v45;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    unint64_t v45 = sub_21CA47FB4(0, *(void *)(v45 + 16) + 1, 1, v45);
    *uint64_t v22 = v45;
  }
  unint64_t v47 = (unint64_t *)(a6 + 16);
  unint64_t v49 = *(void *)(v45 + 16);
  unint64_t v48 = *(void *)(v45 + 24);
  if (v49 >= v48 >> 1)
  {
    unint64_t v45 = sub_21CA47FB4(v48 > 1, v49 + 1, 1, v45);
    *uint64_t v22 = v45;
  }
  *(void *)(v45 + 16) = v49 + 1;
  unint64_t v50 = (*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  uint64_t v51 = *(void *)(v17 + 72);
  sub_21CA5913C(v67, v45 + v50 + v51 * v49, (uint64_t (*)(void))type metadata accessor for FMFLocation);
  swift_endAccess();
  sub_21CA570B0(a7, (uint64_t)v20, (uint64_t (*)(void))type metadata accessor for FMFLocation);
  swift_beginAccess();
  unint64_t v52 = *v47;
  char v53 = swift_isUniquelyReferenced_nonNull_native();
  *unint64_t v47 = v52;
  if ((v53 & 1) == 0)
  {
    unint64_t v52 = sub_21CA47FB4(0, *(void *)(v52 + 16) + 1, 1, v52);
    *unint64_t v47 = v52;
  }
  unint64_t v55 = *(void *)(v52 + 16);
  unint64_t v54 = *(void *)(v52 + 24);
  if (v55 >= v54 >> 1)
  {
    unint64_t v52 = sub_21CA47FB4(v54 > 1, v55 + 1, 1, v52);
    *unint64_t v47 = v52;
  }
  *(void *)(v52 + 16) = v55 + 1;
  sub_21CA5913C((uint64_t)v20, v52 + v50 + v55 * v51, (uint64_t (*)(void))type metadata accessor for FMFLocation);
  swift_endAccess();
  dispatch_group_leave(a8);
  dispatch_group_leave(a9);
}

void sub_21CACE704(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, NSObject *a5)
{
  if (qword_267C94990 != -1) {
    swift_once();
  }
  uint64_t v9 = (void **)(a4 + 16);
  uint64_t v10 = sub_21CB880A0();
  sub_21CA4CC18(v10, (uint64_t)qword_267CA5368);
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v11 = sub_21CB88070();
  os_log_type_t v12 = sub_21CB88880();
  if (os_log_type_enabled(v11, v12))
  {
    unint64_t v31 = v9;
    uint64_t v13 = swift_slowAlloc();
    uint64_t v30 = swift_slowAlloc();
    uint64_t v33 = v30;
    *(_DWORD *)uint64_t v13 = 136315394;
    swift_retain();
    uint64_t v14 = sub_21CB890E0();
    unint64_t v16 = sub_21CA30E24(9uLL, v14, v15);
    os_log_type_t type = v12;
    uint64_t v18 = v17;
    uint64_t v20 = v19;
    uint64_t v32 = a5;
    uint64_t v22 = v21;
    swift_bridgeObjectRelease();
    MEMORY[0x21D4B5450](v16, v18, v20, v22);
    swift_bridgeObjectRelease();
    uint64_t v34 = 30768;
    unint64_t v35 = 0xE200000000000000;
    sub_21CB883D0();
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v34 = sub_21CA4E450(30768, 0xE200000000000000, &v33);
    a5 = v32;
    sub_21CB889C0();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v13 + 12) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v34 = sub_21CA4E450(a2, a3, &v33);
    sub_21CB889C0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_21CA00000, v11, type, "👀 FMFProactiveLocationController<%s>: failed cache-fetch for %s", (uint8_t *)v13, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x21D4B6B70](v30, -1, -1);
    uint64_t v23 = v13;
    uint64_t v9 = v31;
    MEMORY[0x21D4B6B70](v23, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_release_n();
  }
  swift_beginAccess();
  uint64_t v24 = *v9;
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  NSObject *v9 = v24;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v24 = sub_21CAC7864(0, v24[2] + 1, 1, v24);
    NSObject *v9 = v24;
  }
  unint64_t v27 = v24[2];
  unint64_t v26 = v24[3];
  if (v27 >= v26 >> 1)
  {
    uint64_t v24 = sub_21CAC7864((void *)(v26 > 1), v27 + 1, 1, v24);
    NSObject *v9 = v24;
  }
  v24[2] = v27 + 1;
  uint64_t v28 = &v24[2 * v27];
  v28[4] = a2;
  v28[5] = a3;
  swift_endAccess();
  dispatch_group_leave(a5);
}

uint64_t sub_21CACEA80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v42 = a7;
  uint64_t v41 = a6;
  unint64_t v48 = a5;
  uint64_t v13 = sub_21CB88100();
  uint64_t v47 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v46 = (char *)&v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_21CB88150();
  uint64_t v44 = *(void *)(v15 - 8);
  uint64_t v45 = v15;
  MEMORY[0x270FA5388](v15);
  uint64_t v43 = (char *)&v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t v40 = a1;
  uint64_t v17 = *(void *)(a1 + 16);
  uint64_t v18 = *(void *)(v17 + 16);
  uint64_t v19 = (void *)&protocol conformance descriptor for FMFSchedule;
  if (v18)
  {
    uint64_t v38 = a8;
    uint64_t v39 = v13;
    swift_bridgeObjectRetain();
    uint64_t v20 = (uint64_t *)(v17 + 40);
    do
    {
      uint64_t v21 = *v20;
      uint64_t aBlock = *(v20 - 1);
      uint64_t v51 = v21;
      swift_bridgeObjectRetain();
      sub_21CACEF94(&aBlock);
      swift_bridgeObjectRelease();
      v20 += 2;
      --v18;
    }
    while (v18);
    swift_bridgeObjectRelease();
    id v37 = *(id *)(a2 + 56);
    swift_beginAccess();
    uint64_t v22 = v40;
    swift_bridgeObjectRetain();
    uint64_t v23 = (void *)sub_21CB884F0();
    swift_bridgeObjectRelease();
    uint64_t v24 = (void *)sub_21CB882C0();
    uint64_t v25 = swift_allocObject();
    swift_weakInit();
    unint64_t v26 = (void *)swift_allocObject();
    v26[2] = v25;
    v26[3] = v22;
    v26[4] = a3;
    v26[5] = a4;
    unint64_t v27 = v48;
    v26[6] = v48;
    unint64_t v54 = sub_21CAD2FEC;
    unint64_t v55 = v26;
    uint64_t aBlock = MEMORY[0x263EF8330];
    uint64_t v19 = &protocol conformance descriptor for FMFSchedule;
    uint64_t v51 = 1107296256;
    unint64_t v52 = sub_21CAD0D30;
    char v53 = &unk_26CD6C4A0;
    uint64_t v28 = _Block_copy(&aBlock);
    swift_retain();
    swift_retain();
    swift_retain();
    id v29 = v27;
    swift_release();
    objc_msgSend(v37, sel_subscribeAndFetchLocationForIds_clientApp_completion_, v23, v24, v28);
    _Block_release(v28);

    uint64_t v13 = v39;
    a8 = v38;
  }
  uint64_t v30 = (void *)swift_allocObject();
  v30[2] = a2;
  v30[3] = a4;
  uint64_t v31 = v41;
  v30[4] = a3;
  v30[5] = v31;
  v30[6] = v42;
  v30[7] = a8;
  unint64_t v54 = sub_21CAD305C;
  unint64_t v55 = v30;
  uint64_t aBlock = MEMORY[0x263EF8330];
  uint64_t v51 = v19[341];
  unint64_t v52 = sub_21CA1B084;
  char v53 = &unk_26CD6C4F0;
  uint64_t v32 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_retain();
  sub_21CAD160C(v31);
  swift_bridgeObjectRetain();
  uint64_t v33 = v43;
  sub_21CB88120();
  uint64_t v49 = MEMORY[0x263F8EE78];
  sub_21CA364F8((unint64_t *)&qword_267C96FC0, MEMORY[0x263F8F030]);
  sub_21CA57E34((uint64_t *)&unk_267C96DD0);
  sub_21CA356BC((unint64_t *)&qword_267C96FD0, (uint64_t *)&unk_267C96DD0);
  uint64_t v34 = v46;
  sub_21CB88A60();
  sub_21CB888A0();
  _Block_release(v32);
  (*(void (**)(char *, uint64_t))(v47 + 8))(v34, v13);
  (*(void (**)(char *, uint64_t))(v44 + 8))(v33, v45);
  return swift_release();
}

void sub_21CACEF94(uint64_t *a1)
{
  uint64_t v2 = *a1;
  unint64_t v1 = a1[1];
  if (qword_267C94990 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_21CB880A0();
  sub_21CA4CC18(v3, (uint64_t)qword_267CA5368);
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v4 = sub_21CB88070();
  os_log_type_t v5 = sub_21CB88880();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = swift_slowAlloc();
    uint64_t v17 = swift_slowAlloc();
    uint64_t v18 = v17;
    *(_DWORD *)uint64_t v6 = 136315394;
    swift_retain();
    uint64_t v7 = sub_21CB890E0();
    uint64_t v16 = v2;
    unint64_t v9 = sub_21CA30E24(9uLL, v7, v8);
    uint64_t v11 = v10;
    uint64_t v13 = v12;
    uint64_t v15 = v14;
    swift_bridgeObjectRelease();
    MEMORY[0x21D4B5450](v9, v11, v13, v15);
    swift_bridgeObjectRelease();
    sub_21CB883D0();
    swift_release();
    swift_bridgeObjectRelease();
    sub_21CA4E450(30768, 0xE200000000000000, &v18);
    sub_21CB889C0();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v6 + 12) = 2080;
    swift_bridgeObjectRetain();
    sub_21CA4E450(v16, v1, &v18);
    sub_21CB889C0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_21CA00000, v4, v5, "👀 FMFProactiveLocationController<%s>: subscribing for %s…", (uint8_t *)v6, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x21D4B6B70](v17, -1, -1);
    MEMORY[0x21D4B6B70](v6, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_release_n();
  }
}

uint64_t sub_21CACF264(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7)
{
  id v29 = a7;
  uint64_t v12 = sub_21CB88100();
  uint64_t v30 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_21CB88150();
  uint64_t v31 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (char *)&v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v19 = result;
    uint64_t v28 = *(void *)(result + 40);
    uint64_t v20 = (void *)swift_allocObject();
    long long v20[2] = a2;
    v20[3] = v19;
    v20[4] = a4;
    v20[5] = a1;
    v20[6] = a5;
    v20[7] = a6;
    uint64_t v26 = a1;
    uint64_t v21 = v29;
    v20[8] = v29;
    aBlock[4] = sub_21CAD3354;
    aBlock[5] = v20;
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_21CA1B084;
    aBlock[3] = &unk_26CD6C540;
    uint64_t v22 = _Block_copy(aBlock);
    uint64_t v27 = v15;
    uint64_t v23 = v22;
    id v24 = a2;
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    id v25 = v21;
    sub_21CB88120();
    uint64_t v32 = MEMORY[0x263F8EE78];
    sub_21CA364F8((unint64_t *)&qword_267C96FC0, MEMORY[0x263F8F030]);
    sub_21CA57E34((uint64_t *)&unk_267C96DD0);
    sub_21CA356BC((unint64_t *)&qword_267C96FD0, (uint64_t *)&unk_267C96DD0);
    sub_21CB88A60();
    MEMORY[0x21D4B5A20](0, v17, v14, v23);
    _Block_release(v23);
    (*(void (**)(char *, uint64_t))(v30 + 8))(v14, v12);
    (*(void (**)(char *, uint64_t))(v31 + 8))(v17, v27);
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_21CACF5B8(void *a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, NSObject *a7)
{
  uint64_t v46 = (uint64_t **)(a3 + 16);
  if (a1)
  {
    id v11 = a1;
    if (qword_267C94990 != -1) {
      swift_once();
    }
    uint64_t v12 = sub_21CB880A0();
    sub_21CA4CC18(v12, (uint64_t)qword_267CA5368);
    id v13 = a1;
    swift_retain();
    swift_retain();
    id v14 = a1;
    swift_retain();
    swift_retain();
    uint64_t v15 = sub_21CB88070();
    os_log_type_t v16 = sub_21CB88880();
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v17 = (_DWORD *)swift_slowAlloc();
      uint64_t v45 = swift_slowAlloc();
      v47[0] = v45;
      _DWORD *v17 = 136315650;
      uint64_t v42 = v17;
      swift_retain();
      uint64_t v18 = sub_21CB890E0();
      unint64_t v20 = sub_21CA30E24(9uLL, v18, v19);
      uint64_t v22 = v21;
      uint64_t v24 = v23;
      os_log_type_t type = v16;
      uint64_t v26 = v25;
      swift_bridgeObjectRelease();
      MEMORY[0x21D4B5450](v20, v22, v24, v26);
      swift_bridgeObjectRelease();
      v48[0] = (void *)30768;
      v48[1] = (void *)0xE200000000000000;
      uint64_t v43 = a1;
      sub_21CB883D0();
      swift_release();
      swift_bridgeObjectRelease();
      v48[0] = (void *)sub_21CA4E450(30768, 0xE200000000000000, v47);
      sub_21CB889C0();
      swift_release_n();
      swift_bridgeObjectRelease();
      *((_WORD *)v42 + 6) = 2048;
      swift_beginAccess();
      uint64_t v27 = *(void **)(*(void *)(a3 + 16) + 16);
      swift_release();
      v48[0] = v27;
      sub_21CB889C0();
      swift_release();
      *((_WORD *)v42 + 11) = 2080;
      swift_getErrorValue();
      uint64_t v28 = sub_21CB89000();
      v48[0] = (void *)sub_21CA4E450(v28, v29, v47);
      sub_21CB889C0();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_21CA00000, v15, type, "👀 FMFProactiveLocationController<%s>: failed subscribing for %ld ids (error=%s)", (uint8_t *)v42, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x21D4B6B70](v45, -1, -1);
      MEMORY[0x21D4B6B70](v42, -1, -1);
    }
    else
    {
      swift_release();

      swift_release();
      swift_release_n();
    }
    goto LABEL_17;
  }
  if (a4 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = sub_21CB88D10();
    uint64_t v33 = result;
    if (result) {
      goto LABEL_8;
    }
  }
  else
  {
    uint64_t v33 = *(void *)((a4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v33)
    {
LABEL_8:
      if (v33 < 1)
      {
        __break(1u);
        return result;
      }
      uint64_t v35 = 0;
      do
      {
        if ((a4 & 0xC000000000000001) != 0) {
          id v36 = (id)MEMORY[0x21D4B5CA0](v35, a4);
        }
        else {
          id v36 = *(id *)(a4 + 8 * v35 + 32);
        }
        id v37 = v36;
        ++v35;
        v48[0] = v36;
        sub_21CACFA7C(v48, v46, a2, a5, a6, a7);
      }
      while (v33 != v35);
    }
  }
  swift_bridgeObjectRelease();
LABEL_17:
  uint64_t result = swift_beginAccess();
  uint64_t v38 = *v46;
  uint64_t v39 = (*v46)[2];
  if (v39)
  {
    swift_bridgeObjectRetain();
    uint64_t v40 = v38 + 5;
    do
    {
      uint64_t v41 = *v40;
      v47[0] = *(v40 - 1);
      v47[1] = v41;
      swift_bridgeObjectRetain();
      sub_21CAD0A44(v47, a2, a7);
      swift_bridgeObjectRelease();
      v40 += 2;
      --v39;
    }
    while (v39);
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_21CACFA7C(void **a1, uint64_t **a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  uint64_t v84 = a4;
  uint64_t v85 = a5;
  uint64_t v11 = type metadata accessor for FMFLocation();
  uint64_t v86 = *(void *)(v11 - 8);
  uint64_t v12 = *(void *)(v86 + 64);
  uint64_t v13 = MEMORY[0x270FA5388](v11 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)&v76 - v14;
  os_log_type_t v16 = *a1;
  swift_beginAccess();
  uint64_t v17 = *a2;
  uint64_t v18 = (*a2)[2];
  if (v18)
  {
    uint64_t v77 = a2;
    id v78 = a6;
    uint64_t v79 = v12;
    uint64_t v80 = (uint64_t)&v76 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
    id v87 = v15;
    uint64_t v82 = v6;
    uint64_t v83 = a3;
    unint64_t v19 = v17;
    id v20 = v16;
    swift_bridgeObjectRetain();
    unint64_t v21 = 0;
    id v81 = v19;
    for (uint64_t i = v19 + 5; ; i += 2)
    {
      uint64_t v23 = *(i - 1);
      uint64_t v24 = *i;
      swift_bridgeObjectRetain();
      id v25 = objc_msgSend(v20, sel_findMyId);
      uint64_t v26 = sub_21CB882F0();
      uint64_t v28 = v27;

      if (v23 == v26 && v24 == v28)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        goto LABEL_12;
      }
      char v30 = sub_21CB88F50();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v30) {
        break;
      }
      if (v18 == ++v21)
      {

        swift_bridgeObjectRelease();
        return;
      }
    }
    swift_bridgeObjectRelease();
LABEL_12:
    swift_beginAccess();
    sub_21CAD0258(v21);
    swift_endAccess();
    swift_bridgeObjectRelease();
    uint64_t v31 = v83;
    if (qword_267C94990 != -1) {
      swift_once();
    }
    uint64_t v32 = sub_21CB880A0();
    sub_21CA4CC18(v32, (uint64_t)qword_267CA5368);
    id v33 = v20;
    swift_retain_n();
    id v34 = v33;
    uint64_t v35 = sub_21CB88070();
    int v36 = sub_21CB88880();
    if (os_log_type_enabled(v35, (os_log_type_t)v36))
    {
      LODWORD(v77) = v36;
      uint64_t v37 = swift_slowAlloc();
      id v81 = (id)swift_slowAlloc();
      id v90 = v81;
      *(_DWORD *)uint64_t v37 = 136316163;
      uint64_t v88 = v31;
      swift_retain();
      uint64_t v38 = sub_21CB890E0();
      unint64_t v40 = sub_21CA30E24(9uLL, v38, v39);
      uint64_t v42 = v41;
      uint64_t v44 = v43;
      uint64_t v46 = v45;
      swift_bridgeObjectRelease();
      MEMORY[0x21D4B5450](v40, v42, v44, v46);
      uint64_t v31 = v83;
      swift_bridgeObjectRelease();
      uint64_t v88 = 30768;
      unint64_t v89 = 0xE200000000000000;
      sub_21CB883D0();
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v88 = sub_21CA4E450(v88, v89, (uint64_t *)&v90);
      sub_21CB889C0();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v37 + 12) = 2080;
      id v47 = objc_msgSend(v34, sel_findMyId);
      uint64_t v48 = sub_21CB882F0();
      unint64_t v50 = v49;

      uint64_t v88 = sub_21CA4E450(v48, v50, (uint64_t *)&v90);
      sub_21CB889C0();

      swift_bridgeObjectRelease();
      *(_WORD *)(v37 + 22) = 2049;
      objc_msgSend(v34, sel_latitude);
      uint64_t v88 = v51;
      sub_21CB889C0();

      *(_WORD *)(v37 + 32) = 2049;
      objc_msgSend(v34, sel_longitude);
      uint64_t v88 = v52;
      sub_21CB889C0();

      *(_WORD *)(v37 + 42) = 2081;
      id v53 = objc_msgSend(v34, sel_locationLabel);
      if (v53)
      {
        unint64_t v54 = v53;
        uint64_t v55 = sub_21CB882F0();
        unint64_t v57 = v56;
      }
      else
      {
        unint64_t v57 = 0xE300000000000000;
        uint64_t v55 = 7104878;
      }
      os_log_type_t v58 = v77;
      uint64_t v88 = sub_21CA4E450(v55, v57, (uint64_t *)&v90);
      sub_21CB889C0();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_21CA00000, v35, v58, "👀 FMFProactiveLocationController<%s>: did subscribe and fetch for %s: {%{private}f,%{private}f}, label='%{private}s'", (uint8_t *)v37, 0x34u);
      id v59 = v81;
      swift_arrayDestroy();
      MEMORY[0x21D4B6B70](v59, -1, -1);
      MEMORY[0x21D4B6B70](v37, -1, -1);
    }
    else
    {

      swift_release_n();
    }
    uint64_t v60 = swift_allocObject();
    uint64_t v83 = v60;
    swift_weakInit();
    uint64_t v61 = (uint64_t (*)(uint64_t, uint64_t))swift_allocObject();
    uint64_t v63 = v84;
    uint64_t v62 = v85;
    *((void *)v61 + 2) = v60;
    *((void *)v61 + 3) = v63;
    uint64_t v64 = v78;
    *((void *)v61 + 4) = v62;
    *((void *)v61 + 5) = v64;
    id v65 = v34;
    id v81 = v65;
    swift_retain();
    swift_retain();
    swift_retain();
    id v66 = v64;
    uint64_t v67 = (uint64_t)v87;
    sub_21CA90D4C(v65, (uint64_t)v87);
    sub_21CA57E34(&qword_267C95250);
    uint64_t v68 = *(unsigned __int8 *)(v86 + 80);
    uint64_t v69 = swift_allocObject();
    *(_OWORD *)(v69 + 16) = xmmword_21CB8B220;
    sub_21CA570B0(v67, v69 + ((v68 + 32) & ~v68), (uint64_t (*)(void))type metadata accessor for FMFLocation);
    uint64_t v70 = v67;
    uint64_t v71 = v80;
    sub_21CA570B0(v70, v80, (uint64_t (*)(void))type metadata accessor for FMFLocation);
    uint64_t v72 = (v68 + 16) & ~v68;
    unint64_t v73 = (v79 + v72 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v74 = swift_allocObject();
    sub_21CA5913C(v71, v74 + v72, (uint64_t (*)(void))type metadata accessor for FMFLocation);
    *(void *)(v74 + v73) = v31;
    uint64_t v75 = (uint64_t (**)(uint64_t, uint64_t))(v74 + ((v73 + 15) & 0xFFFFFFFFFFFFFFF8));
    *uint64_t v75 = sub_21CAD33B8;
    v75[1] = v61;
    swift_retain();
    swift_retain();
    sub_21CA2B814(v69, (uint64_t)sub_21CAD33C8, v74);
    swift_bridgeObjectRelease();
    swift_release();
    sub_21CA58278((uint64_t)v87, (uint64_t (*)(void))type metadata accessor for FMFLocation);
    swift_release();
    swift_release();
  }
}

uint64_t sub_21CAD0258(unint64_t a1)
{
  uint64_t v3 = *v1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v3 = sub_21CB4C350(v3);
  }
  unint64_t v4 = v3[2];
  if (v4 <= a1)
  {
    __break(1u);
  }
  else
  {
    unint64_t v5 = v4 - 1;
    uint64_t v6 = v4 - 1 - a1;
    if (v6 >= 0)
    {
      uint64_t v7 = &v3[2 * a1];
      uint64_t v8 = v7[4];
      memmove(v7 + 4, v7 + 6, 16 * v6);
      v3[2] = v5;
      *unint64_t v1 = v3;
      return v8;
    }
  }
  uint64_t result = sub_21CB88D50();
  __break(1u);
  return result;
}

uint64_t sub_21CAD0338(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  uint64_t v39 = a5;
  unint64_t v40 = a6;
  uint64_t v37 = a2;
  uint64_t v38 = a4;
  uint64_t v7 = sub_21CB88100();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v42 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_21CB88150();
  uint64_t v41 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for FMFLocation();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(void *)(v14 + 64);
  uint64_t v16 = MEMORY[0x270FA5388](v13 - 8);
  uint64_t v17 = (char *)&v32 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  unint64_t v19 = (char *)&v32 - v18;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v34 = *(void *)(result + 40);
    uint64_t v35 = v10;
    uint64_t v36 = result;
    sub_21CA570B0(a1, (uint64_t)v19, (uint64_t (*)(void))type metadata accessor for FMFLocation);
    sub_21CA570B0(v37, (uint64_t)v17, (uint64_t (*)(void))type metadata accessor for FMFLocation);
    uint64_t v21 = *(unsigned __int8 *)(v14 + 80);
    uint64_t v22 = (v21 + 24) & ~v21;
    unint64_t v23 = (v15 + 7 + v22) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v24 = (v21 + v23 + 8) & ~v21;
    uint64_t v33 = v7;
    uint64_t v37 = v8;
    unint64_t v25 = (v15 + 7 + v24) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v26 = swift_allocObject();
    *(void *)(v26 + 16) = v38;
    sub_21CA5913C((uint64_t)v19, v26 + v22, (uint64_t (*)(void))type metadata accessor for FMFLocation);
    *(void *)(v26 + v23) = v39;
    sub_21CA5913C((uint64_t)v17, v26 + v24, (uint64_t (*)(void))type metadata accessor for FMFLocation);
    uint64_t v27 = v40;
    *(void *)(v26 + v25) = v40;
    aBlock[4] = sub_21CAD3B7C;
    aBlock[5] = v26;
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_21CA1B084;
    aBlock[3] = &unk_26CD6C608;
    uint64_t v28 = _Block_copy(aBlock);
    swift_retain();
    swift_retain();
    id v29 = v27;
    sub_21CB88120();
    uint64_t v43 = MEMORY[0x263F8EE78];
    sub_21CA364F8((unint64_t *)&qword_267C96FC0, MEMORY[0x263F8F030]);
    sub_21CA57E34((uint64_t *)&unk_267C96DD0);
    sub_21CA356BC((unint64_t *)&qword_267C96FD0, (uint64_t *)&unk_267C96DD0);
    char v30 = v42;
    uint64_t v31 = v33;
    sub_21CB88A60();
    MEMORY[0x21D4B5A20](0, v12, v30, v28);
    _Block_release(v28);
    (*(void (**)(char *, uint64_t))(v37 + 8))(v30, v31);
    (*(void (**)(char *, uint64_t))(v41 + 8))(v12, v35);
    swift_release();
    return swift_release();
  }
  return result;
}

void sub_21CAD079C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, NSObject *a5)
{
  uint64_t v10 = type metadata accessor for FMFLocation();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v10 - 8);
  uint64_t v14 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v30 - v15;
  uint64_t v17 = (unint64_t *)(a1 + 16);
  sub_21CA570B0(a2, (uint64_t)&v30 - v15, (uint64_t (*)(void))type metadata accessor for FMFLocation);
  swift_beginAccess();
  unint64_t v18 = *(void *)(a1 + 16);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(a1 + 16) = v18;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    unint64_t v18 = sub_21CA47FB4(0, *(void *)(v18 + 16) + 1, 1, v18);
    unint64_t *v17 = v18;
  }
  id v20 = (unint64_t *)(a3 + 16);
  unint64_t v22 = *(void *)(v18 + 16);
  unint64_t v21 = *(void *)(v18 + 24);
  if (v22 >= v21 >> 1)
  {
    unint64_t v18 = sub_21CA47FB4(v21 > 1, v22 + 1, 1, v18);
    unint64_t *v17 = v18;
  }
  *(void *)(v18 + 16) = v22 + 1;
  unint64_t v23 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  unint64_t v24 = v18 + v23;
  uint64_t v25 = *(void *)(v11 + 72);
  sub_21CA5913C((uint64_t)v16, v24 + v25 * v22, (uint64_t (*)(void))type metadata accessor for FMFLocation);
  swift_endAccess();
  sub_21CA570B0(a4, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for FMFLocation);
  swift_beginAccess();
  unint64_t v26 = *v20;
  char v27 = swift_isUniquelyReferenced_nonNull_native();
  *id v20 = v26;
  if ((v27 & 1) == 0)
  {
    unint64_t v26 = sub_21CA47FB4(0, *(void *)(v26 + 16) + 1, 1, v26);
    *id v20 = v26;
  }
  unint64_t v29 = *(void *)(v26 + 16);
  unint64_t v28 = *(void *)(v26 + 24);
  if (v29 >= v28 >> 1)
  {
    unint64_t v26 = sub_21CA47FB4(v28 > 1, v29 + 1, 1, v26);
    *id v20 = v26;
  }
  *(void *)(v26 + 16) = v29 + 1;
  sub_21CA5913C((uint64_t)v14, v26 + v23 + v29 * v25, (uint64_t (*)(void))type metadata accessor for FMFLocation);
  swift_endAccess();
  dispatch_group_leave(a5);
}

void sub_21CAD0A44(uint64_t *a1, uint64_t a2, NSObject *a3)
{
  uint64_t v5 = *a1;
  unint64_t v4 = a1[1];
  if (qword_267C94990 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_21CB880A0();
  sub_21CA4CC18(v6, (uint64_t)qword_267CA5368);
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v7 = sub_21CB88070();
  os_log_type_t v8 = sub_21CB88880();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = swift_slowAlloc();
    uint64_t v22 = swift_slowAlloc();
    uint64_t v23 = v22;
    *(_DWORD *)uint64_t v9 = 136315394;
    swift_retain();
    uint64_t v10 = sub_21CB890E0();
    os_log_type_t type = v8;
    unint64_t v12 = sub_21CA30E24(9uLL, v10, v11);
    uint64_t v20 = v5;
    uint64_t v13 = a3;
    uint64_t v15 = v14;
    uint64_t v17 = v16;
    uint64_t v19 = v18;
    swift_bridgeObjectRelease();
    MEMORY[0x21D4B5450](v12, v15, v17, v19);
    swift_bridgeObjectRelease();
    sub_21CB883D0();
    swift_release();
    a3 = v13;
    swift_bridgeObjectRelease();
    sub_21CA4E450(30768, 0xE200000000000000, &v23);
    sub_21CB889C0();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v9 + 12) = 2080;
    swift_bridgeObjectRetain();
    sub_21CA4E450(v20, v4, &v23);
    sub_21CB889C0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_21CA00000, v7, type, "👀 FMFProactiveLocationController<%s>: failed subscribe and fetch for %s: no location found", (uint8_t *)v9, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x21D4B6B70](v22, -1, -1);
    MEMORY[0x21D4B6B70](v9, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_release_n();
  }
  dispatch_group_leave(a3);
}

void sub_21CAD0D30(uint64_t a1, uint64_t a2, void *a3)
{
  unint64_t v4 = *(void (**)(uint64_t, void *))(a1 + 32);
  sub_21CA05908(0, &qword_267C95D58);
  uint64_t v5 = sub_21CB88510();
  swift_retain();
  id v6 = a3;
  v4(v5, a3);
  swift_release();
  swift_bridgeObjectRelease();
}

uint64_t sub_21CAD0DE0(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t), uint64_t a5, uint64_t a6)
{
  if (qword_267C94990 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_21CB880A0();
  sub_21CA4CC18(v8, (uint64_t)qword_267CA5368);
  swift_retain_n();
  swift_retain_n();
  uint64_t v9 = sub_21CB88070();
  os_log_type_t v10 = sub_21CB88880();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = swift_slowAlloc();
    uint64_t v26 = swift_slowAlloc();
    v29[0] = v26;
    *(_DWORD *)uint64_t v11 = 136315394;
    swift_retain();
    uint64_t v12 = sub_21CB890E0();
    unint64_t v14 = sub_21CA30E24(9uLL, v12, v13);
    uint64_t v16 = v15;
    uint64_t v18 = v17;
    uint64_t v20 = v19;
    swift_bridgeObjectRelease();
    MEMORY[0x21D4B5450](v14, v16, v18, v20);
    swift_bridgeObjectRelease();
    uint64_t v30 = 30768;
    unint64_t v31 = 0xE200000000000000;
    sub_21CB883D0();
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v30 = sub_21CA4E450(30768, 0xE200000000000000, v29);
    sub_21CB889C0();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v11 + 12) = 2048;
    swift_beginAccess();
    uint64_t v21 = *(void *)(*(void *)(a2 + 16) + 16);
    swift_release();
    uint64_t v30 = v21;
    sub_21CB889C0();
    swift_release();
    _os_log_impl(&dword_21CA00000, v9, v10, "👀 FMFProactiveLocationController<%s>: updating client subscribers with %ld resolved locations", (uint8_t *)v11, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x21D4B6B70](v26, -1, -1);
    MEMORY[0x21D4B6B70](v11, -1, -1);
  }
  else
  {

    swift_release_n();
    swift_release_n();
  }
  uint64_t v22 = swift_beginAccess();
  MEMORY[0x270FA5388](v22);
  swift_retain();
  swift_bridgeObjectRetain();
  sub_21CB88910();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v23 = swift_beginAccess();
  MEMORY[0x270FA5388](v23);
  swift_retain();
  swift_bridgeObjectRetain();
  sub_21CB88910();
  swift_release();
  uint64_t result = swift_bridgeObjectRelease();
  if (a4)
  {
    sub_21CAD160C((uint64_t)a4);
    swift_retain();
    sub_21CA57E34(&qword_267C95D50);
    sub_21CB88910();
    swift_release();
    swift_bridgeObjectRetain();
    uint64_t v25 = sub_21CAD306C(v28, a6);
    swift_bridgeObjectRelease();
    a4(v25);
    swift_bridgeObjectRelease();
    return sub_21CAD2F4C((uint64_t)a4);
  }
  return result;
}

uint64_t sub_21CAD12AC(void *a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for FMFFriend() - 8;
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (uint64_t *)((char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = *(void *)(a2 + 16);
  if (v9)
  {
    uint64_t v27 = a2;
    uint64_t v28 = a1;
    uint64_t v29 = v2;
    uint64_t v10 = a2 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
    uint64_t v11 = *(void *)(v6 + 72);
    swift_bridgeObjectRetain();
    uint64_t v12 = (void *)MEMORY[0x263F8EE78];
    do
    {
      sub_21CA570B0(v10, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FMFFriend);
      uint64_t v13 = *v8;
      uint64_t v14 = v8[1];
      swift_bridgeObjectRetain();
      sub_21CA58278((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FMFFriend);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v12 = sub_21CAC7864(0, v12[2] + 1, 1, v12);
      }
      unint64_t v16 = v12[2];
      unint64_t v15 = v12[3];
      if (v16 >= v15 >> 1) {
        uint64_t v12 = sub_21CAC7864((void *)(v15 > 1), v16 + 1, 1, v12);
      }
      v12[2] = v16 + 1;
      uint64_t v17 = &v12[2 * v16];
      long long v17[4] = v13;
      v17[5] = v14;
      v10 += v11;
      --v9;
    }
    while (v9);
    swift_bridgeObjectRelease();
    a1 = v28;
    uint64_t v18 = v12[2];
    if (!v18) {
      goto LABEL_27;
    }
  }
  else
  {
    uint64_t v12 = (void *)MEMORY[0x263F8EE78];
    uint64_t v18 = *(void *)(MEMORY[0x263F8EE78] + 16);
    if (!v18)
    {
LABEL_27:
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  uint64_t v20 = *a1;
  uint64_t v19 = a1[1];
  BOOL v21 = v12[4] == v20 && v12[5] == v19;
  if (v21 || (uint64_t result = sub_21CB88F50(), (result & 1) != 0))
  {
LABEL_16:
    swift_bridgeObjectRelease();
    return 1;
  }
  if (v18 == 1) {
    goto LABEL_27;
  }
  uint64_t v23 = v12 + 7;
  uint64_t v24 = 1;
  while (1)
  {
    uint64_t v25 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (*(v23 - 1) == v20 && *v23 == v19) {
      goto LABEL_16;
    }
    uint64_t result = sub_21CB88F50();
    if (result) {
      goto LABEL_16;
    }
    v23 += 2;
    ++v24;
    if (v25 == v18) {
      goto LABEL_27;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_21CAD1550()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_21CAD1588()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  if (*(void *)(v0 + 56)) {
    swift_release();
  }
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 80, 7);
}

uint64_t sub_21CAD15F8()
{
  return sub_21CACEA80(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void **)(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 64), *(void *)(v0 + 72));
}

uint64_t sub_21CAD160C(uint64_t result)
{
  if (result) {
    return swift_retain();
  }
  return result;
}

uint64_t sub_21CAD161C(void **a1)
{
  uint64_t v2 = *(void *)(type metadata accessor for FMFFriend() - 8);
  uint64_t v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v3 = (void *)sub_21CAD2EC8(v3);
  }
  uint64_t v4 = v3[2];
  v6[0] = (uint64_t)v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v6[1] = v4;
  uint64_t result = sub_21CAD16C4(v6);
  *a1 = v3;
  return result;
}

uint64_t sub_21CAD16C4(uint64_t *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for FMFFriend();
  uint64_t v146 = *(void *)(v4 - 8);
  uint64_t v147 = v4;
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v141 = (uint64_t)&v132 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v152 = (uint64_t)&v132 - v8;
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v132 - v10;
  uint64_t v12 = MEMORY[0x270FA5388](v9);
  uint64_t v14 = (char *)&v132 - v13;
  uint64_t v15 = MEMORY[0x270FA5388](v12);
  int v144 = (uint64_t *)((char *)&v132 - v16);
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  v143 = (uint64_t *)((char *)&v132 - v18);
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  uint64_t v138 = (uint64_t *)((char *)&v132 - v20);
  MEMORY[0x270FA5388](v19);
  uint64_t v137 = (uint64_t *)((char *)&v132 - v21);
  uint64_t v153 = a1;
  uint64_t v22 = a1[1];
  uint64_t result = sub_21CB88EE0();
  if (result >= v22)
  {
    if (v22 < 0) {
      goto LABEL_157;
    }
    if (v22) {
      return sub_21CAD2274(0, v22, 1, v153);
    }
    return result;
  }
  if (v22 >= 0) {
    uint64_t v24 = v22;
  }
  else {
    uint64_t v24 = v22 + 1;
  }
  if (v22 < -1) {
    goto LABEL_165;
  }
  uint64_t v148 = v11;
  uint64_t v135 = result;
  if (v22 < 2)
  {
    uint64_t v28 = (char *)MEMORY[0x263F8EE78];
    unint64_t v145 = MEMORY[0x263F8EE78]
         + ((*(unsigned __int8 *)(v146 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v146 + 80));
    uint64_t v134 = MEMORY[0x263F8EE78];
    if (v22 != 1)
    {
      unint64_t v30 = *(void *)(MEMORY[0x263F8EE78] + 16);
LABEL_123:
      if (v30 >= 2)
      {
        uint64_t v125 = *v153;
        do
        {
          unint64_t v126 = v30 - 2;
          if (v30 < 2) {
            goto LABEL_152;
          }
          if (!v125) {
            goto LABEL_164;
          }
          uint64_t v127 = v28;
          uint64_t v128 = *(void *)&v28[16 * v126 + 32];
          uint64_t v129 = *(void *)&v28[16 * v30 + 24];
          sub_21CAD2558(v125 + *(void *)(v146 + 72) * v128, v125 + *(void *)(v146 + 72) * *(void *)&v28[16 * v30 + 16], v125 + *(void *)(v146 + 72) * v129, v145);
          if (v2) {
            break;
          }
          if (v129 < v128) {
            goto LABEL_153;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v127 = sub_21CAD2EA0((uint64_t)v28);
          }
          if (v126 >= *((void *)v127 + 2)) {
            goto LABEL_154;
          }
          uint64_t v130 = &v127[16 * v126 + 32];
          *(void *)uint64_t v130 = v128;
          *((void *)v130 + 1) = v129;
          unint64_t v131 = *((void *)v127 + 2);
          if (v30 > v131) {
            goto LABEL_155;
          }
          memmove(&v127[16 * v30 + 16], &v127[16 * v30 + 32], 16 * (v131 - v30));
          *((void *)v127 + 2) = v131 - 1;
          unint64_t v30 = v131 - 1;
          uint64_t v28 = v127;
        }
        while (v131 > 2);
      }
LABEL_134:
      swift_bridgeObjectRelease();
      *(void *)(v134 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t v25 = v24 >> 1;
    uint64_t v26 = sub_21CB88580();
    *(void *)(v26 + 16) = v25;
    uint64_t v27 = *(unsigned __int8 *)(v146 + 80);
    uint64_t v134 = v26;
    unint64_t v145 = v26 + ((v27 + 32) & ~v27);
  }
  uint64_t v29 = 0;
  uint64_t v28 = (char *)MEMORY[0x263F8EE78];
  uint64_t v139 = v14;
  while (1)
  {
    uint64_t v31 = v29;
    uint64_t v32 = v29 + 1;
    if (v29 + 1 >= v22)
    {
      uint64_t v39 = v29 + 1;
      goto LABEL_75;
    }
    uint64_t v33 = *v153;
    uint64_t v34 = *(void *)(v146 + 72);
    uint64_t v35 = v137;
    sub_21CA570B0(*v153 + v34 * v32, (uint64_t)v137, (uint64_t (*)(void))type metadata accessor for FMFFriend);
    uint64_t v142 = v31;
    uint64_t v149 = v33;
    uint64_t v151 = v34;
    uint64_t v36 = v33 + v34 * v31;
    uint64_t v37 = v138;
    sub_21CA570B0(v36, (uint64_t)v138, (uint64_t (*)(void))type metadata accessor for FMFFriend);
    BOOL v38 = *v35 == *v37 && v35[1] == v37[1];
    LODWORD(v150) = v38 ? 0 : sub_21CB88F50();
    uint64_t v136 = v2;
    sub_21CA58278((uint64_t)v138, (uint64_t (*)(void))type metadata accessor for FMFFriend);
    sub_21CA58278((uint64_t)v137, (uint64_t (*)(void))type metadata accessor for FMFFriend);
    uint64_t v31 = v142;
    if (v142 + 2 >= v22)
    {
      uint64_t v42 = v142 + 2;
    }
    else
    {
      uint64_t v40 = v151 * v32;
      uint64_t v41 = v149;
      uint64_t v42 = v142 + 2;
      uint64_t v43 = v151 * (v142 + 2);
      while (1)
      {
        uint64_t v44 = v22;
        uint64_t v45 = v143;
        sub_21CA570B0(v41 + v43, (uint64_t)v143, (uint64_t (*)(void))type metadata accessor for FMFFriend);
        uint64_t v46 = v144;
        sub_21CA570B0(v41 + v40, (uint64_t)v144, (uint64_t (*)(void))type metadata accessor for FMFFriend);
        BOOL v47 = *v45 == *v46 && v45[1] == v46[1];
        int v48 = v47 ? 0 : sub_21CB88F50();
        sub_21CA58278((uint64_t)v144, (uint64_t (*)(void))type metadata accessor for FMFFriend);
        sub_21CA58278((uint64_t)v143, (uint64_t (*)(void))type metadata accessor for FMFFriend);
        uint64_t v22 = v44;
        if ((v150 ^ v48)) {
          break;
        }
        v41 += v151;
        if (v44 == ++v42)
        {
          uint64_t v42 = v44;
          break;
        }
      }
      uint64_t v31 = v142;
    }
    uint64_t v49 = (uint64_t)v139;
    if ((v150 & 1) == 0) {
      break;
    }
    if (v42 < v31) {
      goto LABEL_158;
    }
    uint64_t v39 = v42;
    if (v31 >= v42) {
      goto LABEL_50;
    }
    uint64_t v150 = v22;
    uint64_t v133 = v28;
    uint64_t v50 = 0;
    uint64_t v51 = v31;
    uint64_t v52 = v151 * (v42 - 1);
    uint64_t v53 = v42 * v151;
    uint64_t v54 = v51;
    uint64_t v55 = v51 * v151;
    uint64_t v56 = v149;
    do
    {
      if (v54 != v39 + v50 - 1)
      {
        if (!v56) {
          goto LABEL_163;
        }
        sub_21CA5913C(v56 + v55, v141, (uint64_t (*)(void))type metadata accessor for FMFFriend);
        if (v55 < v52 || v56 + v55 >= (unint64_t)(v56 + v53))
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (v55 != v52)
        {
          swift_arrayInitWithTakeBackToFront();
        }
        sub_21CA5913C(v141, v56 + v52, (uint64_t (*)(void))type metadata accessor for FMFFriend);
        uint64_t v49 = (uint64_t)v139;
        uint64_t v39 = v42;
      }
      ++v54;
      --v50;
      v52 -= v151;
      v53 -= v151;
      v55 += v151;
    }
    while (v54 < v39 + v50);
    uint64_t v28 = v133;
    uint64_t v2 = v136;
    uint64_t v31 = v142;
    uint64_t v22 = v150;
    if (v39 < v150) {
      goto LABEL_53;
    }
LABEL_75:
    if (v39 < v31) {
      goto LABEL_151;
    }
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v151 = v39;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      uint64_t v28 = sub_21CAD2AD8(0, *((void *)v28 + 2) + 1, 1, v28);
    }
    unint64_t v75 = *((void *)v28 + 2);
    unint64_t v74 = *((void *)v28 + 3);
    unint64_t v30 = v75 + 1;
    if (v75 >= v74 >> 1) {
      uint64_t v28 = sub_21CAD2AD8((char *)(v74 > 1), v75 + 1, 1, v28);
    }
    *((void *)v28 + 2) = v30;
    uint64_t v76 = v28 + 32;
    uint64_t v77 = &v28[16 * v75 + 32];
    uint64_t v78 = v151;
    *(void *)uint64_t v77 = v31;
    *((void *)v77 + 1) = v78;
    if (v75)
    {
      while (1)
      {
        unint64_t v79 = v30 - 1;
        if (v30 >= 4)
        {
          uint64_t v84 = &v76[16 * v30];
          uint64_t v85 = *((void *)v84 - 8);
          uint64_t v86 = *((void *)v84 - 7);
          BOOL v90 = __OFSUB__(v86, v85);
          uint64_t v87 = v86 - v85;
          if (v90) {
            goto LABEL_140;
          }
          uint64_t v89 = *((void *)v84 - 6);
          uint64_t v88 = *((void *)v84 - 5);
          BOOL v90 = __OFSUB__(v88, v89);
          uint64_t v82 = v88 - v89;
          char v83 = v90;
          if (v90) {
            goto LABEL_141;
          }
          unint64_t v91 = v30 - 2;
          uint64_t v92 = &v76[16 * v30 - 32];
          uint64_t v94 = *(void *)v92;
          uint64_t v93 = *((void *)v92 + 1);
          BOOL v90 = __OFSUB__(v93, v94);
          uint64_t v95 = v93 - v94;
          if (v90) {
            goto LABEL_143;
          }
          BOOL v90 = __OFADD__(v82, v95);
          uint64_t v96 = v82 + v95;
          if (v90) {
            goto LABEL_146;
          }
          if (v96 >= v87)
          {
            uint64_t v114 = &v76[16 * v79];
            uint64_t v116 = *(void *)v114;
            uint64_t v115 = *((void *)v114 + 1);
            BOOL v90 = __OFSUB__(v115, v116);
            uint64_t v117 = v115 - v116;
            if (v90) {
              goto LABEL_150;
            }
            BOOL v107 = v82 < v117;
            goto LABEL_112;
          }
        }
        else
        {
          if (v30 != 3)
          {
            uint64_t v108 = *((void *)v28 + 4);
            uint64_t v109 = *((void *)v28 + 5);
            BOOL v90 = __OFSUB__(v109, v108);
            uint64_t v101 = v109 - v108;
            char v102 = v90;
            goto LABEL_106;
          }
          uint64_t v81 = *((void *)v28 + 4);
          uint64_t v80 = *((void *)v28 + 5);
          BOOL v90 = __OFSUB__(v80, v81);
          uint64_t v82 = v80 - v81;
          char v83 = v90;
        }
        if (v83) {
          goto LABEL_142;
        }
        unint64_t v91 = v30 - 2;
        uint64_t v97 = &v76[16 * v30 - 32];
        uint64_t v99 = *(void *)v97;
        uint64_t v98 = *((void *)v97 + 1);
        BOOL v100 = __OFSUB__(v98, v99);
        uint64_t v101 = v98 - v99;
        char v102 = v100;
        if (v100) {
          goto LABEL_145;
        }
        uint64_t v103 = &v76[16 * v79];
        uint64_t v105 = *(void *)v103;
        uint64_t v104 = *((void *)v103 + 1);
        BOOL v90 = __OFSUB__(v104, v105);
        uint64_t v106 = v104 - v105;
        if (v90) {
          goto LABEL_148;
        }
        if (__OFADD__(v101, v106)) {
          goto LABEL_149;
        }
        if (v101 + v106 >= v82)
        {
          BOOL v107 = v82 < v106;
LABEL_112:
          if (v107) {
            unint64_t v79 = v91;
          }
          goto LABEL_114;
        }
LABEL_106:
        if (v102) {
          goto LABEL_144;
        }
        uint64_t v110 = &v76[16 * v79];
        uint64_t v112 = *(void *)v110;
        uint64_t v111 = *((void *)v110 + 1);
        BOOL v90 = __OFSUB__(v111, v112);
        uint64_t v113 = v111 - v112;
        if (v90) {
          goto LABEL_147;
        }
        if (v113 < v101) {
          goto LABEL_14;
        }
LABEL_114:
        unint64_t v118 = v79 - 1;
        if (v79 - 1 >= v30)
        {
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
LABEL_154:
          __break(1u);
LABEL_155:
          __break(1u);
LABEL_156:
          __break(1u);
LABEL_157:
          __break(1u);
LABEL_158:
          __break(1u);
LABEL_159:
          __break(1u);
          goto LABEL_160;
        }
        if (!*v153) {
          goto LABEL_162;
        }
        uint64_t v119 = v28;
        char v120 = &v76[16 * v118];
        uint64_t v121 = *(void *)v120;
        char v122 = &v76[16 * v79];
        uint64_t v123 = *((void *)v122 + 1);
        sub_21CAD2558(*v153 + *(void *)(v146 + 72) * *(void *)v120, *v153 + *(void *)(v146 + 72) * *(void *)v122, *v153 + *(void *)(v146 + 72) * v123, v145);
        if (v2) {
          goto LABEL_134;
        }
        if (v123 < v121) {
          goto LABEL_137;
        }
        if (v79 > *((void *)v119 + 2)) {
          goto LABEL_138;
        }
        *(void *)char v120 = v121;
        *(void *)&v76[16 * v118 + 8] = v123;
        unint64_t v124 = *((void *)v119 + 2);
        if (v79 >= v124) {
          goto LABEL_139;
        }
        uint64_t v28 = v119;
        unint64_t v30 = v124 - 1;
        memmove(&v76[16 * v79], v122 + 16, 16 * (v124 - 1 - v79));
        *((void *)v119 + 2) = v124 - 1;
        if (v124 <= 2) {
          goto LABEL_14;
        }
      }
    }
    unint64_t v30 = 1;
LABEL_14:
    uint64_t v22 = v153[1];
    uint64_t v29 = v151;
    if (v151 >= v22) {
      goto LABEL_123;
    }
  }
  uint64_t v39 = v42;
LABEL_50:
  uint64_t v2 = v136;
  if (v39 >= v22) {
    goto LABEL_75;
  }
LABEL_53:
  if (__OFSUB__(v39, v31)) {
    goto LABEL_156;
  }
  if (v39 - v31 >= v135) {
    goto LABEL_75;
  }
  if (__OFADD__(v31, v135)) {
    goto LABEL_159;
  }
  if (v31 + v135 >= v22) {
    uint64_t v57 = v22;
  }
  else {
    uint64_t v57 = v31 + v135;
  }
  if (v57 >= v31)
  {
    if (v39 != v57)
    {
      uint64_t v142 = v31;
      uint64_t v133 = v28;
      uint64_t v136 = v2;
      uint64_t v58 = *(void *)(v146 + 72);
      uint64_t v59 = v58 * (v39 - 1);
      uint64_t v149 = v58;
      uint64_t v60 = v39 * v58;
      uint64_t v140 = v57;
      do
      {
        uint64_t v62 = 0;
        uint64_t v63 = v142;
        uint64_t v150 = v60;
        uint64_t v151 = v39;
        while (1)
        {
          uint64_t v64 = *v153;
          sub_21CA570B0(v60 + v62 + *v153, v49, (uint64_t (*)(void))type metadata accessor for FMFFriend);
          uint64_t v65 = v59;
          uint64_t v66 = v59 + v62 + v64;
          uint64_t v67 = (void *)v49;
          uint64_t v68 = v148;
          sub_21CA570B0(v66, (uint64_t)v148, (uint64_t (*)(void))type metadata accessor for FMFFriend);
          if (*v67 == *v68 && v67[1] == v68[1]) {
            break;
          }
          char v70 = sub_21CB88F50();
          sub_21CA58278((uint64_t)v68, (uint64_t (*)(void))type metadata accessor for FMFFriend);
          sub_21CA58278((uint64_t)v67, (uint64_t (*)(void))type metadata accessor for FMFFriend);
          uint64_t v49 = (uint64_t)v67;
          if ((v70 & 1) == 0) {
            goto LABEL_63;
          }
          uint64_t v71 = *v153;
          if (!*v153) {
            goto LABEL_161;
          }
          uint64_t v59 = v65;
          uint64_t v60 = v150;
          uint64_t v72 = v71 + v59 + v62;
          sub_21CA5913C(v71 + v150 + v62, v152, (uint64_t (*)(void))type metadata accessor for FMFFriend);
          swift_arrayInitWithTakeFrontToBack();
          sub_21CA5913C(v152, v72, (uint64_t (*)(void))type metadata accessor for FMFFriend);
          v62 -= v149;
          ++v63;
          uint64_t v61 = v151;
          if (v151 == v63) {
            goto LABEL_64;
          }
        }
        sub_21CA58278((uint64_t)v68, (uint64_t (*)(void))type metadata accessor for FMFFriend);
        sub_21CA58278((uint64_t)v67, (uint64_t (*)(void))type metadata accessor for FMFFriend);
        uint64_t v49 = (uint64_t)v67;
LABEL_63:
        uint64_t v59 = v65;
        uint64_t v60 = v150;
        uint64_t v61 = v151;
LABEL_64:
        uint64_t v39 = v61 + 1;
        v59 += v149;
        v60 += v149;
      }
      while (v39 != v140);
      uint64_t v39 = v140;
      uint64_t v2 = v136;
      uint64_t v28 = v133;
      uint64_t v31 = v142;
    }
    goto LABEL_75;
  }
LABEL_160:
  __break(1u);
LABEL_161:
  __break(1u);
LABEL_162:
  __break(1u);
LABEL_163:
  __break(1u);
LABEL_164:
  __break(1u);
LABEL_165:
  uint64_t result = sub_21CB88CF0();
  __break(1u);
  return result;
}

uint64_t sub_21CAD2274(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v31 = a4;
  uint64_t v26 = a1;
  uint64_t v27 = type metadata accessor for FMFFriend();
  uint64_t v6 = MEMORY[0x270FA5388](v27);
  uint64_t v30 = (uint64_t)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v10 = (uint64_t *)((char *)&v24 - v9);
  uint64_t result = MEMORY[0x270FA5388](v8);
  uint64_t v14 = (uint64_t *)((char *)&v24 - v13);
  uint64_t v29 = a3;
  uint64_t v25 = a2;
  if (a3 != a2)
  {
    uint64_t v15 = *(void *)(v12 + 72);
    uint64_t v32 = v15 * (v29 - 1);
    uint64_t v28 = v15;
    uint64_t v16 = v15 * v29;
LABEL_6:
    uint64_t v17 = 0;
    uint64_t v18 = v26;
    while (1)
    {
      uint64_t v19 = *v31;
      sub_21CA570B0(v16 + v17 + *v31, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for FMFFriend);
      sub_21CA570B0(v32 + v17 + v19, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for FMFFriend);
      if (*v14 == *v10 && v14[1] == v10[1])
      {
        sub_21CA58278((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for FMFFriend);
        uint64_t result = sub_21CA58278((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for FMFFriend);
LABEL_5:
        v32 += v28;
        v16 += v28;
        if (++v29 == v25) {
          return result;
        }
        goto LABEL_6;
      }
      char v21 = sub_21CB88F50();
      sub_21CA58278((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for FMFFriend);
      uint64_t result = sub_21CA58278((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for FMFFriend);
      if ((v21 & 1) == 0) {
        goto LABEL_5;
      }
      uint64_t v22 = *v31;
      if (!*v31) {
        break;
      }
      uint64_t v23 = v22 + v32 + v17;
      sub_21CA5913C(v22 + v16 + v17, v30, (uint64_t (*)(void))type metadata accessor for FMFFriend);
      swift_arrayInitWithTakeFrontToBack();
      uint64_t result = sub_21CA5913C(v30, v23, (uint64_t (*)(void))type metadata accessor for FMFFriend);
      v17 -= v28;
      if (v29 == ++v18) {
        goto LABEL_5;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_21CAD2558(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v45 = type metadata accessor for FMFFriend();
  uint64_t v8 = MEMORY[0x270FA5388](v45);
  uint64_t v46 = (uint64_t *)((char *)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v12 = (uint64_t *)((char *)&v43 - v11);
  uint64_t v13 = MEMORY[0x270FA5388](v10);
  uint64_t v15 = (uint64_t *)((char *)&v43 - v14);
  MEMORY[0x270FA5388](v13);
  uint64_t v17 = (uint64_t *)((char *)&v43 - v16);
  uint64_t v19 = *(void *)(v18 + 72);
  if (!v19)
  {
    __break(1u);
LABEL_72:
    __break(1u);
LABEL_73:
    __break(1u);
    goto LABEL_74;
  }
  unint64_t v20 = a1;
  if (a2 - a1 == 0x8000000000000000 && v19 == -1) {
    goto LABEL_72;
  }
  int64_t v21 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v19 == -1) {
    goto LABEL_73;
  }
  uint64_t v22 = (uint64_t)(a2 - a1) / v19;
  unint64_t v49 = a1;
  unint64_t v48 = a4;
  uint64_t v23 = v21 / v19;
  if (v22 >= v21 / v19)
  {
    if ((v23 & 0x8000000000000000) == 0)
    {
      unint64_t v44 = a1;
      uint64_t v25 = v23 * v19;
      if (a4 < a2 || a2 + v25 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      unint64_t v33 = a4 + v25;
      unint64_t v47 = a4 + v25;
      unint64_t v49 = a2;
      if (v25 >= 1 && v44 < a2)
      {
        uint64_t v35 = -v19;
        do
        {
          sub_21CA570B0(v33 + v35, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for FMFFriend);
          unint64_t v36 = a2 + v35;
          uint64_t v37 = v46;
          sub_21CA570B0(a2 + v35, (uint64_t)v46, (uint64_t (*)(void))type metadata accessor for FMFFriend);
          if (*v12 == *v37 && v12[1] == v37[1]) {
            char v39 = 0;
          }
          else {
            char v39 = sub_21CB88F50();
          }
          unint64_t v40 = a3 + v35;
          sub_21CA58278((uint64_t)v46, (uint64_t (*)(void))type metadata accessor for FMFFriend);
          sub_21CA58278((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for FMFFriend);
          if (v39)
          {
            if (a3 < a2 || v40 >= a2)
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (a3 != a2)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            v49 += v35;
          }
          else
          {
            unint64_t v41 = v47;
            v47 += v35;
            if (a3 < v41 || v40 >= v41)
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (a3 != v41)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            unint64_t v36 = a2;
          }
          unint64_t v33 = v47;
          if (v47 <= a4) {
            break;
          }
          a2 = v36;
          a3 += v35;
        }
        while (v36 > v44);
      }
LABEL_70:
      sub_21CAD2C90(&v49, &v48, (uint64_t *)&v47);
      return 1;
    }
  }
  else if ((v22 & 0x8000000000000000) == 0)
  {
    uint64_t v24 = v22 * v19;
    if (a4 < v20 || v20 + v24 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != v20)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    unint64_t v26 = a4 + v24;
    unint64_t v47 = a4 + v24;
    if (v24 >= 1 && a2 < a3)
    {
      while (1)
      {
        sub_21CA570B0(a2, (uint64_t)v17, (uint64_t (*)(void))type metadata accessor for FMFFriend);
        sub_21CA570B0(a4, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for FMFFriend);
        if (*v17 == *v15 && v17[1] == v15[1]) {
          break;
        }
        char v29 = sub_21CB88F50();
        sub_21CA58278((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for FMFFriend);
        sub_21CA58278((uint64_t)v17, (uint64_t (*)(void))type metadata accessor for FMFFriend);
        if ((v29 & 1) == 0) {
          goto LABEL_32;
        }
        unint64_t v30 = v49;
        unint64_t v31 = a2 + v19;
        if (v49 < a2 || v49 >= v31)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (v49 == a2)
        {
          unint64_t v30 = a2;
        }
        else
        {
          swift_arrayInitWithTakeBackToFront();
        }
LABEL_38:
        unint64_t v49 = v30 + v19;
        a4 = v48;
        if (v48 < v26)
        {
          a2 = v31;
          if (v31 < a3) {
            continue;
          }
        }
        goto LABEL_70;
      }
      sub_21CA58278((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for FMFFriend);
      sub_21CA58278((uint64_t)v17, (uint64_t (*)(void))type metadata accessor for FMFFriend);
LABEL_32:
      unint64_t v30 = v49;
      unint64_t v32 = v48 + v19;
      if (v49 < v48 || v49 >= v32)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (v49 != v48)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      unint64_t v48 = v32;
      unint64_t v31 = a2;
      goto LABEL_38;
    }
    goto LABEL_70;
  }
LABEL_74:
  uint64_t result = sub_21CB88D50();
  __break(1u);
  return result;
}

char *sub_21CAD2AD8(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_21CA57E34(&qword_267C95D98);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_21CAD2BD4(void **a1, const void **a2, void *a3)
{
  uint64_t v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  uint64_t v5 = v4 + 15;
  if (v4 >= 0) {
    uint64_t v5 = *a3 - (void)v3;
  }
  if (v4 <= -16)
  {
    uint64_t result = (char *)sub_21CB88D50();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    uint64_t v7 = v5 >> 4;
    if (result != v3 || result >= &v3[16 * v7])
    {
      return (char *)memmove(result, v3, 16 * v7);
    }
  }
  return result;
}

uint64_t sub_21CAD2C90(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  unint64_t v3 = *a1;
  unint64_t v4 = *a2;
  uint64_t v5 = *a3;
  uint64_t result = type metadata accessor for FMFFriend();
  uint64_t v7 = *(void *)(*(void *)(result - 8) + 72);
  if (!v7)
  {
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v8 = v5 - v4;
  if (v5 - v4 == 0x8000000000000000 && v7 == -1) {
    goto LABEL_18;
  }
  if (v8 / v7 < 0)
  {
LABEL_19:
    uint64_t result = sub_21CB88D50();
    __break(1u);
    return result;
  }
  if (v3 < v4 || v3 >= v4 + v8 / v7 * v7)
  {
    return swift_arrayInitWithTakeFrontToBack();
  }
  else if (v3 != v4)
  {
    return swift_arrayInitWithTakeBackToFront();
  }
  return result;
}

char *sub_21CAD2DD0(void **a1, const void **a2, void *a3)
{
  unint64_t v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  if (v4 <= -24)
  {
    uint64_t result = (char *)sub_21CB88D50();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    uint64_t v6 = v4 / 24;
    if (result != v3 || result >= &v3[24 * v6])
    {
      return (char *)memmove(result, v3, 24 * v6);
    }
  }
  return result;
}

char *sub_21CAD2EA0(uint64_t a1)
{
  return sub_21CAD2AD8(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_21CAD2EB4(uint64_t a1)
{
  return sub_21CA45544(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_21CAD2EC8(void *a1)
{
  return sub_21CA7C148(0, a1[2], 0, a1);
}

uint64_t sub_21CAD2EDC(uint64_t a1)
{
  return sub_21CA7C48C(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_21CAD2EF0()
{
  if (*(void *)(v0 + 16)) {
    swift_release();
  }
  swift_release();
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_21CAD2F40()
{
  return sub_21CACC800(v0[2], v0[3], v0[4], v0[5]);
}

uint64_t sub_21CAD2F4C(uint64_t result)
{
  if (result) {
    return swift_release();
  }
  return result;
}

uint64_t sub_21CAD2F5C()
{
  swift_weakDestroy();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_21CAD2F94()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return MEMORY[0x270FA0238](v0, 56, 7);
}

uint64_t sub_21CAD2FEC(uint64_t a1, void *a2)
{
  return sub_21CACF264(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40), *(void **)(v2 + 48));
}

uint64_t sub_21CAD2FFC()
{
  swift_release();
  swift_release();
  swift_release();
  if (*(void *)(v0 + 40)) {
    swift_release();
  }
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 64, 7);
}

uint64_t sub_21CAD305C()
{
  return sub_21CAD0DE0(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void (**)(uint64_t))(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56));
}

uint64_t sub_21CAD306C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for FMFFriend();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v5 - 8);
  uint64_t v22 = (uint64_t)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = MEMORY[0x270FA5388](v7);
  int64_t v11 = (uint64_t *)((char *)&v19 - v10);
  uint64_t v12 = MEMORY[0x263F8EE78];
  uint64_t v23 = MEMORY[0x263F8EE78];
  uint64_t v21 = *(void *)(a1 + 16);
  if (v21)
  {
    unint64_t v13 = 0;
    uint64_t v19 = a2;
    uint64_t v20 = a1;
    while (v13 < *(void *)(a1 + 16))
    {
      unint64_t v14 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
      uint64_t v15 = *(void *)(v6 + 72);
      sub_21CA570B0(a1 + v14 + v15 * v13, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for FMFFriend);
      char v16 = sub_21CAD12AC(v11, a2);
      if (v2)
      {
        sub_21CA58278((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for FMFFriend);
        swift_release();
        swift_bridgeObjectRelease();
        return v12;
      }
      if (v16)
      {
        sub_21CA5913C((uint64_t)v11, v22, (uint64_t (*)(void))type metadata accessor for FMFFriend);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_21CA47FE8(0, *(void *)(v12 + 16) + 1, 1);
        }
        uint64_t v12 = v23;
        unint64_t v18 = *(void *)(v23 + 16);
        unint64_t v17 = *(void *)(v23 + 24);
        if (v18 >= v17 >> 1)
        {
          sub_21CA47FE8(v17 > 1, v18 + 1, 1);
          uint64_t v12 = v23;
        }
        *(void *)(v12 + 16) = v18 + 1;
        uint64_t result = sub_21CA5913C(v22, v12 + v14 + v18 * v15, (uint64_t (*)(void))type metadata accessor for FMFFriend);
        a2 = v19;
        a1 = v20;
      }
      else
      {
        uint64_t result = sub_21CA58278((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for FMFFriend);
      }
      if (v21 == ++v13)
      {
        uint64_t v12 = v23;
        goto LABEL_15;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_15:
    swift_bridgeObjectRelease();
    return v12;
  }
  return result;
}

uint64_t sub_21CAD32EC()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  return MEMORY[0x270FA0238](v0, 72, 7);
}

uint64_t sub_21CAD3354()
{
  return sub_21CACF5B8(*(void **)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56), *(NSObject **)(v0 + 64));
}

uint64_t sub_21CAD3368()
{
  swift_release();
  swift_release();
  swift_release();

  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_21CAD33B8(uint64_t a1, uint64_t a2)
{
  return sub_21CAD0338(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void **)(v2 + 40));
}

uint64_t sub_21CAD33CC()
{
  uint64_t v1 = type metadata accessor for FMFLocation();
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v17 = *(void *)(*(void *)(v1 - 8) + 64);
  unint64_t v4 = v2 + 16 + ((((v17 + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v5 = v0 + v3;
  swift_bridgeObjectRelease();
  uint64_t v6 = v5 + *(int *)(v1 + 32);
  uint64_t v7 = sub_21CB875D0();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  if (!v9(v6, 1, v7)) {
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  }
  unint64_t v10 = v4 & ~v2;
  uint64_t v11 = v5 + *(int *)(v1 + 44);
  uint64_t v12 = *(void **)(v11 + 304);
  if (v12)
  {
    if (*(void *)(v11 + 168))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v12 = *(void **)(v11 + 304);
    }

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  unint64_t v13 = v0 + v10 + *(int *)(v1 + 32);
  if (!v9(v13, 1, v7)) {
    (*(void (**)(unint64_t, uint64_t))(v8 + 8))(v13, v7);
  }
  unint64_t v14 = v0 + v10 + *(int *)(v1 + 44);
  uint64_t v15 = *(void **)(v14 + 304);
  if (v15)
  {
    if (*(void *)(v14 + 168))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v15 = *(void **)(v14 + 304);
    }

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

  return MEMORY[0x270FA0238](v0, v10 + v17, v2 | 7);
}

uint64_t sub_21CAD3744(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for FMFLocation() - 8);
  uint64_t v4 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = (v4 + 16) & ~v4;
  unint64_t v6 = (*(void *)(v3 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v8 = *(void *)(v1 + v6);
  uint64_t v9 = *(void (**)(void, void))(v1 + v7);
  uint64_t v10 = *(void *)(v1 + v7 + 8);

  return sub_21CACAD3C(a1, (uint64_t *)(v1 + v5), v8, v9, v10, v1 + ((v4 + 16 + v7) & ~v4));
}

uint64_t sub_21CAD37FC()
{
  uint64_t v1 = type metadata accessor for FMFLocation();
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v19 = *(void *)(*(void *)(v1 - 8) + 64) + 7;
  unint64_t v4 = v2 + ((v19 + v3) & 0xFFFFFFFFFFFFFFF8) + 8;
  swift_release();
  uint64_t v5 = v0 + v3;
  swift_bridgeObjectRelease();
  uint64_t v6 = v0 + v3 + *(int *)(v1 + 32);
  uint64_t v7 = sub_21CB875D0();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  if (!v9(v6, 1, v7)) {
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  }
  unint64_t v10 = v4 & ~v2;
  uint64_t v11 = v5 + *(int *)(v1 + 44);
  uint64_t v12 = *(void **)(v11 + 304);
  if (v12)
  {
    if (*(void *)(v11 + 168))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v12 = *(void **)(v11 + 304);
    }

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_release();
  swift_bridgeObjectRelease();
  unint64_t v13 = v0 + v10 + *(int *)(v1 + 32);
  if (!v9(v13, 1, v7)) {
    (*(void (**)(unint64_t, uint64_t))(v8 + 8))(v13, v7);
  }
  unint64_t v14 = v0 + v10 + *(int *)(v1 + 44);
  uint64_t v15 = *(void **)(v14 + 304);
  if (v15)
  {
    if (*(void *)(v14 + 168))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v15 = *(void **)(v14 + 304);
    }

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  unint64_t v16 = (v19 + v10) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v17 = v16 + 8;

  return MEMORY[0x270FA0238](v0, v17, v2 | 7);
}

void sub_21CAD3B7C()
{
  uint64_t v1 = *(void *)(type metadata accessor for FMFLocation() - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64) + 7;
  unint64_t v5 = (v4 + v3) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v6 = (v2 + v5 + 8) & ~v2;
  uint64_t v7 = *(void *)(v0 + 16);
  uint64_t v8 = *(void *)(v0 + v5);
  uint64_t v9 = *(NSObject **)(v0 + ((v4 + v6) & 0xFFFFFFFFFFFFFFF8));

  sub_21CAD079C(v7, v0 + v3, v8, v0 + v6, v9);
}

uint64_t sub_21CAD3C28()
{
  swift_release();
  swift_bridgeObjectRelease();

  swift_release();
  swift_release();

  swift_release();

  return MEMORY[0x270FA0238](v0, 88, 7);
}

uint64_t sub_21CAD3C98(void *a1, uint64_t a2)
{
  return sub_21CACD464(a1, a2, *(void *)(v2 + 16), *(void **)(v2 + 24), *(void *)(v2 + 32), *(void **)(v2 + 40), *(void *)(v2 + 48), *(void *)(v2 + 56), *(void **)(v2 + 64), *(void (***)(char *, uint64_t))(v2 + 72), *(void *)(v2 + 80));
}

uint64_t sub_21CAD3CD4()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();

  return MEMORY[0x270FA0238](v0, 56, 7);
}

void sub_21CAD3D24()
{
  sub_21CACE704(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(NSObject **)(v0 + 48));
}

uint64_t sub_21CAD3D34()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  return MEMORY[0x270FA0238](v0, 80, 7);
}

uint64_t sub_21CAD3D9C(uint64_t a1, uint64_t a2)
{
  return sub_21CACDD2C(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40), *(void *)(v2 + 48), *(void *)(v2 + 56), *(void **)(v2 + 64), *(void **)(v2 + 72));
}

uint64_t sub_21CAD3DD4()
{
  uint64_t v1 = type metadata accessor for FMFLocation();
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*(void *)(v1 - 8) + 64);
  swift_bridgeObjectRelease();
  uint64_t v5 = v0 + v3 + *(int *)(v1 + 32);
  uint64_t v6 = sub_21CB875D0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  }
  uint64_t v8 = v0 + v3 + *(int *)(v1 + 44);
  uint64_t v9 = *(void **)(v8 + 304);
  if (v9)
  {
    if (*(void *)(v8 + 168))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v9 = *(void **)(v8 + 304);
    }

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_release();
  swift_release();

  return MEMORY[0x270FA0238](v0, ((((v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16, v2 | 7);
}

uint64_t sub_21CAD4010(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for FMFLocation() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v6 = v1 + v4;
  uint64_t v7 = *(void *)(v1 + v5);
  uint64_t v8 = v1 + ((v5 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v9 = *(void (**)(void, void))v8;
  uint64_t v10 = *(void *)(v8 + 8);

  return sub_21CACA3D0(a1, v6, v7, v9, v10);
}

uint64_t sub_21CAD40BC()
{
  uint64_t v1 = type metadata accessor for FMFLocation();
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 48) & ~v2;
  uint64_t v19 = *(void *)(*(void *)(v1 - 8) + 64) + 7;
  unint64_t v4 = v2 + ((v19 + v3) & 0xFFFFFFFFFFFFFFF8) + 8;
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v5 = v0 + v3;
  swift_bridgeObjectRelease();
  uint64_t v6 = v0 + v3 + *(int *)(v1 + 32);
  uint64_t v7 = sub_21CB875D0();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  if (!v9(v6, 1, v7)) {
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  }
  unint64_t v10 = v4 & ~v2;
  uint64_t v11 = v5 + *(int *)(v1 + 44);
  uint64_t v12 = *(void **)(v11 + 304);
  if (v12)
  {
    if (*(void *)(v11 + 168))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v12 = *(void **)(v11 + 304);
    }

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_release();
  swift_bridgeObjectRelease();
  unint64_t v13 = v0 + v10 + *(int *)(v1 + 32);
  if (!v9(v13, 1, v7)) {
    (*(void (**)(unint64_t, uint64_t))(v8 + 8))(v13, v7);
  }
  unint64_t v14 = v0 + v10 + *(int *)(v1 + 44);
  uint64_t v15 = *(void **)(v14 + 304);
  if (v15)
  {
    if (*(void *)(v14 + 168))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v15 = *(void **)(v14 + 304);
    }

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  unint64_t v16 = (v19 + v10) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v17 = (v16 + 15) & 0xFFFFFFFFFFFFFFF8;

  return MEMORY[0x270FA0238](v0, v17 + 8, v2 | 7);
}

void sub_21CAD445C()
{
  uint64_t v1 = *(void *)(type metadata accessor for FMFLocation() - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 48) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64) + 7;
  unint64_t v5 = (v4 + v3) & 0xFFFFFFFFFFFFFFF8;
  sub_21CACE194(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), v0 + v3, *(void *)(v0 + v5), v0 + ((v2 + v5 + 8) & ~v2), *(NSObject **)(v0 + ((v4 + ((v2 + v5 + 8) & ~v2)) & 0xFFFFFFFFFFFFFFF8)), *(NSObject **)(v0 + ((((v4 + ((v2 + v5 + 8) & ~v2)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_21CAD4518()
{
  swift_release();
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 40, 7);
}

void sub_21CAD4558(void *a1)
{
  sub_21CACCCB4(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_21CAD45B0()
{
  sub_21CB88380();

  return swift_bridgeObjectRelease();
}

uint64_t sub_21CAD46F8()
{
  sub_21CB88380();

  return swift_bridgeObjectRelease();
}

uint64_t sub_21CAD485C()
{
  sub_21CB88380();

  return swift_bridgeObjectRelease();
}

uint64_t sub_21CAD498C()
{
  sub_21CB88380();

  return swift_bridgeObjectRelease();
}

uint64_t sub_21CAD4A98()
{
  return sub_21CB89090();
}

uint64_t sub_21CAD4B64()
{
  return sub_21CB89090();
}

uint64_t sub_21CAD4C94()
{
  return sub_21CB89090();
}

uint64_t sub_21CAD4DA0()
{
  return sub_21CB89090();
}

uint64_t sub_21CAD4EC8()
{
  return sub_21CB89090();
}

uint64_t sub_21CAD5008()
{
  return sub_21CB89090();
}

uint64_t sub_21CAD5120()
{
  return sub_21CB89090();
}

uint64_t sub_21CAD51C8()
{
  return sub_21CB89090();
}

uint64_t FMFLabelledLocation.identifier.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FMFLabelledLocation.label.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 24);
  __int16 v3 = *(_WORD *)(v1 + 32);
  *(void *)a1 = *(void *)(v1 + 16);
  *(void *)(a1 + 8) = v2;
  *(_WORD *)(a1 + 16) = v3;
  return swift_bridgeObjectRetain();
}

uint64_t FMFLabelledLocation.userId.getter()
{
  uint64_t v1 = *(void *)(v0 + 40);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FMFLabelledLocation.latitude.getter()
{
  return *(void *)(v0 + 56);
}

uint64_t FMFLabelledLocation.longitude.getter()
{
  return *(void *)(v0 + 72);
}

uint64_t FMFLabelledLocation.updatedAt.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for FMFLabelledLocation();
  return sub_21CA24E80(v1 + *(int *)(v3 + 36), a1, (uint64_t *)&unk_267C951B0);
}

uint64_t sub_21CAD53EC(char *a1, char *a2)
{
  return sub_21CA7F124(*a1, *a2);
}

uint64_t sub_21CAD53F8()
{
  return sub_21CAD5008();
}

uint64_t sub_21CAD5404()
{
  sub_21CB88380();

  return swift_bridgeObjectRelease();
}

uint64_t sub_21CAD5508()
{
  return sub_21CAD5008();
}

uint64_t sub_21CAD5510@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_21CAD8360();
  *a1 = result;
  return result;
}

void sub_21CAD5540(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE200000000000000;
  uint64_t v3 = 25705;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE500000000000000;
      uint64_t v3 = 0x6C6562616CLL;
      goto LABEL_3;
    case 2:
      uint64_t v4 = 0x7079546C6562616CLL;
      goto LABEL_8;
    case 3:
      *a1 = 0x644972657375;
      a1[1] = 0xE600000000000000;
      return;
    case 4:
      *a1 = 0x656475746974616CLL;
      a1[1] = 0xE800000000000000;
      return;
    case 5:
      uint64_t v4 = 0x64757469676E6F6CLL;
LABEL_8:
      *a1 = v4;
      a1[1] = 0xE900000000000065;
      break;
    case 6:
      *a1 = 0x7354657461647075;
      a1[1] = 0xE800000000000000;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

uint64_t sub_21CAD5624()
{
  uint64_t result = 25705;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6C6562616CLL;
      break;
    case 2:
      uint64_t result = 0x7079546C6562616CLL;
      break;
    case 3:
      uint64_t result = 0x644972657375;
      break;
    case 4:
      uint64_t result = 0x656475746974616CLL;
      break;
    case 5:
      uint64_t result = 0x64757469676E6F6CLL;
      break;
    case 6:
      uint64_t result = 0x7354657461647075;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_21CAD56F4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_21CAD8360();
  *a1 = result;
  return result;
}

uint64_t sub_21CAD571C(uint64_t a1)
{
  unint64_t v2 = sub_21CAD5D98();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_21CAD5758(uint64_t a1)
{
  unint64_t v2 = sub_21CAD5D98();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t FMFLabelledLocation.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v43 = a2;
  uint64_t v4 = sub_21CA57E34(&qword_267C95DA0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for FMFLabelledLocation();
  MEMORY[0x270FA5388](v8);
  unint64_t v10 = (char *)v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = a1[3];
  unint64_t v44 = a1;
  sub_21CA2B2CC(a1, v11);
  sub_21CAD5D98();
  sub_21CB890B0();
  if (!v2)
  {
    uint64_t v42 = v5;
    LOBYTE(v46) = 0;
    *(void *)unint64_t v10 = sub_21CB88DE0();
    *((void *)v10 + 1) = v12;
    LOBYTE(v46) = 3;
    *((void *)v10 + 5) = sub_21CB88DE0();
    *((void *)v10 + 6) = v13;
    LOBYTE(v46) = 4;
    sub_21CB88E00();
    *((void *)v10 + 7) = v14;
    v10[64] = 0;
    LOBYTE(v46) = 5;
    sub_21CB88E00();
    *((void *)v10 + 9) = v15;
    v10[80] = 0;
    LOBYTE(v46) = 6;
    uint64_t v16 = sub_21CB88E30();
    uint64_t v17 = v4;
    unint64_t v18 = &v10[*(int *)(v8 + 36)];
    id v19 = objc_msgSend(self, sel_fm_dateFromEpoch_, v16);
    sub_21CB87560();

    uint64_t v20 = sub_21CB87590();
    uint64_t v21 = v18;
    uint64_t v22 = v17;
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v21, 0, 1, v20);
    LOBYTE(v46) = 1;
    uint64_t v23 = sub_21CB88DE0();
    uint64_t v25 = v24;
    LOBYTE(v46) = 2;
    v26._uint64_t countAndFlagsBits = sub_21CB88DE0();
    FMFLabelSourceType.init(rawValue:)(v26);
    __int16 v27 = v46;
    swift_bridgeObjectRetain();
    v28._uint64_t countAndFlagsBits = v23;
    v28._object = v25;
    FMFDefaultLabel.init(rawValue:)(v28);
    if (v45 == 5)
    {
      *((void *)v10 + 2) = v23;
      *((void *)v10 + 3) = v25;
      *((_WORD *)v10 + 16) = v27 | 0x100;
    }
    else
    {
      *((void *)v10 + 2) = v23;
      *((void *)v10 + 3) = v25;
      *((_WORD *)v10 + 16) = v27;
    }
    uint64_t v29 = FMFLabelledLocation.debugDescription.getter();
    unint64_t v31 = v30;
    if (qword_267C94990 != -1) {
      swift_once();
    }
    uint64_t v32 = sub_21CB880A0();
    sub_21CA4CC18(v32, (uint64_t)qword_267CA5368);
    swift_bridgeObjectRetain();
    unint64_t v33 = sub_21CB88070();
    os_log_type_t v34 = sub_21CB88880();
    if (os_log_type_enabled(v33, v34))
    {
      uint64_t v35 = swift_slowAlloc();
      uint64_t v40 = v29;
      unint64_t v36 = (uint8_t *)v35;
      uint64_t v37 = swift_slowAlloc();
      uint64_t v46 = v37;
      uint64_t v41 = v22;
      *(_DWORD *)unint64_t v36 = 136315138;
      v39[1] = v36 + 4;
      swift_bridgeObjectRetain();
      uint64_t v45 = sub_21CA4E450(v40, v31, &v46);
      sub_21CB889C0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_21CA00000, v33, v34, "FMFLabelledLocation: initialized with coder %s", v36, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x21D4B6B70](v37, -1, -1);
      MEMORY[0x21D4B6B70](v36, -1, -1);

      (*(void (**)(char *, uint64_t))(v42 + 8))(v7, v41);
    }
    else
    {
      swift_bridgeObjectRelease_n();

      (*(void (**)(char *, uint64_t))(v42 + 8))(v7, v22);
    }
    sub_21CA76404((uint64_t)v10, v43);
  }
  return sub_21CA2B0D0((uint64_t)v44);
}

unint64_t sub_21CAD5D98()
{
  unint64_t result = qword_267C95DA8;
  if (!qword_267C95DA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C95DA8);
  }
  return result;
}

uint64_t FMFLabelledLocation.debugDescription.getter()
{
  uint64_t v1 = sub_21CA57E34((uint64_t *)&unk_267C951B0);
  MEMORY[0x270FA5388](v1);
  uint64_t v3 = (char *)&v16 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = 0;
  unint64_t v18 = 0xE000000000000000;
  sub_21CB88B70();
  swift_bridgeObjectRelease();
  unint64_t v20 = 0xD000000000000022;
  unint64_t v21 = 0x800000021CB96180;
  unint64_t v4 = *(void *)(v0 + 8);
  uint64_t v17 = *(void *)v0;
  unint64_t v18 = v4;
  swift_bridgeObjectRetain();
  sub_21CA57E34((uint64_t *)&unk_267C95220);
  sub_21CB88310();
  sub_21CB883D0();
  swift_bridgeObjectRelease();
  sub_21CB883D0();
  unint64_t v5 = *(void *)(v0 + 24);
  __int16 v6 = *(_WORD *)(v0 + 32);
  uint64_t v17 = *(void *)(v0 + 16);
  unint64_t v18 = v5;
  __int16 v19 = v6;
  swift_bridgeObjectRetain();
  sub_21CA57E34(&qword_267C95668);
  sub_21CB88310();
  sub_21CB883D0();
  swift_bridgeObjectRelease();
  sub_21CB883D0();
  unint64_t v7 = v20;
  unint64_t v8 = v21;
  uint64_t v17 = 0;
  unint64_t v18 = 0xE000000000000000;
  sub_21CB88B70();
  swift_bridgeObjectRelease();
  uint64_t v17 = 0x203A644972657375;
  unint64_t v18 = 0xE800000000000000;
  unint64_t v9 = *(void *)(v0 + 48);
  unint64_t v20 = *(void *)(v0 + 40);
  unint64_t v21 = v9;
  swift_bridgeObjectRetain();
  sub_21CB88310();
  sub_21CB883D0();
  swift_bridgeObjectRelease();
  sub_21CB883D0();
  char v10 = *(unsigned char *)(v0 + 64);
  unint64_t v20 = *(void *)(v0 + 56);
  LOBYTE(v21) = v10;
  sub_21CA57E34(&qword_267C95DB0);
  sub_21CB88310();
  sub_21CB883D0();
  swift_bridgeObjectRelease();
  sub_21CB883D0();
  uint64_t v17 = v7;
  unint64_t v18 = v8;
  swift_bridgeObjectRetain();
  sub_21CB883D0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v12 = v17;
  unint64_t v11 = v18;
  uint64_t v17 = 0;
  unint64_t v18 = 0xE000000000000000;
  sub_21CB88B70();
  swift_bridgeObjectRelease();
  uint64_t v17 = 0x64757469676E6F6CLL;
  unint64_t v18 = 0xEB00000000203A65;
  char v13 = *(unsigned char *)(v0 + 80);
  unint64_t v20 = *(void *)(v0 + 72);
  LOBYTE(v21) = v13;
  sub_21CB88310();
  sub_21CB883D0();
  swift_bridgeObjectRelease();
  sub_21CB883D0();
  uint64_t v14 = type metadata accessor for FMFLabelledLocation();
  sub_21CA24E80(v0 + *(int *)(v14 + 36), (uint64_t)v3, (uint64_t *)&unk_267C951B0);
  sub_21CB88310();
  sub_21CB883D0();
  swift_bridgeObjectRelease();
  sub_21CB883D0();
  uint64_t v17 = v12;
  unint64_t v18 = v11;
  swift_bridgeObjectRetain();
  sub_21CB883D0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v17;
}

uint64_t FMFLabelledLocation.init(labelledLocation:label:userId:latitude:longitude:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, int a6@<W5>, uint64_t a7@<X6>, int a8@<W7>, uint64_t a9@<X8>)
{
  int v71 = a8;
  uint64_t v65 = a7;
  uint64_t v66 = a3;
  int v68 = a6;
  uint64_t v63 = a5;
  uint64_t v72 = a4;
  uint64_t v12 = sub_21CA57E34(&qword_267C95078);
  uint64_t v13 = MEMORY[0x270FA5388](v12 - 8);
  uint64_t v64 = (uint64_t)&v60 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  char v70 = (char *)&v60 - v16;
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  uint64_t v62 = (uint64_t)&v60 - v18;
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  uint64_t v67 = (char *)&v60 - v20;
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  uint64_t v61 = (uint64_t)&v60 - v22;
  uint64_t v23 = MEMORY[0x270FA5388](v21);
  uint64_t v25 = (char *)&v60 - v24;
  MEMORY[0x270FA5388](v23);
  __int16 v27 = (char *)&v60 - v26;
  uint64_t v28 = type metadata accessor for FMFLabelledLocation();
  uint64_t v29 = *(void *)(v28 - 8);
  MEMORY[0x270FA5388](v28);
  unint64_t v31 = (uint64_t *)((char *)&v60 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v33 = *a2;
  uint64_t v32 = a2[1];
  __int16 v34 = *((_WORD *)a2 + 8);
  uint64_t v73 = a1;
  uint64_t v36 = v35;
  sub_21CA24E80(a1, (uint64_t)v27, &qword_267C95078);
  unint64_t v74 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48);
  uint64_t v75 = v36;
  uint64_t v69 = v29 + 48;
  if (v74(v27, 1, v36) == 1)
  {
    sub_21CA1B88C((uint64_t)v27, &qword_267C95078);
    uint64_t v37 = 0;
    uint64_t v38 = 0;
  }
  else
  {
    sub_21CA76404((uint64_t)v27, (uint64_t)v31);
    uint64_t v37 = *v31;
    uint64_t v38 = v31[1];
    swift_bridgeObjectRetain();
    sub_21CA76240((uint64_t)v31);
  }
  *(void *)a9 = v37;
  *(void *)(a9 + 8) = v38;
  *(void *)(a9 + 16) = v33;
  *(void *)(a9 + 24) = v32;
  *(_WORD *)(a9 + 32) = v34;
  uint64_t v39 = v73;
  sub_21CA24E80(v73, (uint64_t)v25, &qword_267C95078);
  uint64_t v40 = v72;
  if (v72)
  {
    sub_21CA1B88C((uint64_t)v25, &qword_267C95078);
    char v41 = v71;
    uint64_t v42 = (uint64_t)v70;
    char v43 = v68;
    uint64_t v45 = v66;
    uint64_t v44 = (uint64_t)v67;
  }
  else
  {
    uint64_t v46 = v61;
    sub_21CAD6CCC((uint64_t)v25, v61);
    unsigned int v47 = v74((char *)v46, 1, v75);
    char v41 = v71;
    uint64_t v42 = (uint64_t)v70;
    char v43 = v68;
    uint64_t v44 = (uint64_t)v67;
    if (v47 == 1)
    {
      sub_21CA1B88C(v46, &qword_267C95078);
      uint64_t v45 = 0;
      uint64_t v40 = 0;
    }
    else
    {
      uint64_t v45 = *(void *)(v46 + 40);
      uint64_t v40 = *(void *)(v46 + 48);
      swift_bridgeObjectRetain();
      sub_21CA76240(v46);
    }
  }
  *(void *)(a9 + 40) = v45;
  *(void *)(a9 + 48) = v40;
  sub_21CA24E80(v39, v44, &qword_267C95078);
  if (v43)
  {
    uint64_t v50 = v62;
    sub_21CAD6CCC(v44, v62);
    if (v74((char *)v50, 1, v75) == 1)
    {
      sub_21CA1B88C(v50, &qword_267C95078);
      uint64_t v49 = 0;
      char v48 = 1;
    }
    else
    {
      uint64_t v51 = *(void *)(v50 + 56);
      uint64_t v52 = v50;
      char v48 = *(unsigned char *)(v50 + 64);
      sub_21CA76240(v52);
      uint64_t v49 = v51;
    }
  }
  else
  {
    sub_21CA1B88C(v44, &qword_267C95078);
    char v48 = 0;
    uint64_t v49 = v63;
  }
  *(void *)(a9 + 56) = v49;
  *(unsigned char *)(a9 + 64) = v48;
  sub_21CAD6CCC(v39, v42);
  if (v41)
  {
    uint64_t v55 = v64;
    sub_21CAD6CCC(v42, v64);
    if (v74((char *)v55, 1, v75) == 1)
    {
      sub_21CA1B88C(v55, &qword_267C95078);
      uint64_t v54 = 0;
      char v53 = 1;
    }
    else
    {
      uint64_t v54 = *(void *)(v55 + 72);
      uint64_t v56 = v55;
      char v53 = *(unsigned char *)(v55 + 80);
      sub_21CA76240(v56);
    }
  }
  else
  {
    sub_21CA1B88C(v42, &qword_267C95078);
    char v53 = 0;
    uint64_t v54 = v65;
  }
  *(void *)(a9 + 72) = v54;
  *(unsigned char *)(a9 + 80) = v53;
  uint64_t v57 = a9 + *(int *)(v75 + 36);
  uint64_t v58 = sub_21CB87590();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v58 - 8) + 56))(v57, 1, 1, v58);
}

uint64_t FMFLabelledLocation.encode(to:)(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_21CA57E34((uint64_t *)&unk_267C951B0);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v41 = (uint64_t)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = type metadata accessor for FMFLabelledLocation();
  MEMORY[0x270FA5388](v40);
  unint64_t v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_21CA57E34(&qword_267C95DB8);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  unint64_t v11 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21CA2B2CC(a1, a1[3]);
  sub_21CAD5D98();
  sub_21CB890C0();
  long long v44 = *(_OWORD *)v2;
  char v43 = 0;
  sub_21CA57E34((uint64_t *)&unk_267C95220);
  sub_21CAD6D34((unint64_t *)&qword_267C94A70, (uint64_t *)&unk_267C95220);
  uint64_t v12 = v42;
  sub_21CB88EB0();
  if (v12) {
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  uint64_t v39 = v7;
  uint64_t v14 = *(void *)(v2 + 24);
  uint64_t v42 = v9;
  if (v14) {
    uint64_t v15 = *(void *)(v2 + 16);
  }
  else {
    uint64_t v15 = 0;
  }
  __int16 v16 = *(_WORD *)(v2 + 32);
  *(void *)&long long v44 = v15;
  *((void *)&v44 + 1) = v14;
  char v43 = 1;
  sub_21CB88EB0();
  uint64_t v37 = v2;
  uint64_t v38 = v8;
  if ((v16 & 0x100) != 0) {
    uint64_t v17 = 0x6D6F74737563;
  }
  else {
    uint64_t v17 = 0x746C7561666564;
  }
  if ((v16 & 0x100) != 0) {
    unint64_t v18 = 0xE600000000000000;
  }
  else {
    unint64_t v18 = 0xE700000000000000;
  }
  sub_21CA761DC(v2, (uint64_t)v39);
  if (!v14 || (v16 & 0xFF00) == 0x200)
  {
    uint64_t v17 = 0;
    uint64_t v20 = (uint64_t)v39;
    if (*((void *)v39 + 3))
    {
      __int16 v22 = *((_WORD *)v39 + 16);
      unint64_t v19 = 0;
      uint64_t v21 = v38;
      if (v22 != 3)
      {
        uint64_t v23 = 8 * (char)v22;
        uint64_t v17 = *(void *)&aLocal_1[v23];
        unint64_t v19 = *(void *)&aPremises_1[v23 + 8];
      }
    }
    else
    {
      unint64_t v19 = 0;
      uint64_t v21 = v38;
    }
  }
  else
  {
    unint64_t v19 = v18;
    uint64_t v21 = v38;
    uint64_t v20 = (uint64_t)v39;
  }
  sub_21CA76240(v20);
  *(void *)&long long v44 = v17;
  *((void *)&v44 + 1) = v19;
  char v43 = 2;
  sub_21CB88EB0();
  swift_bridgeObjectRelease();
  uint64_t v24 = v37;
  long long v44 = *(_OWORD *)(v37 + 40);
  char v43 = 3;
  sub_21CB88EB0();
  char v25 = *(unsigned char *)(v24 + 64);
  *(void *)&long long v44 = *(void *)(v24 + 56);
  BYTE8(v44) = v25;
  char v43 = 4;
  sub_21CA57E34(&qword_267C95DB0);
  sub_21CAD6D34(&qword_267C95DC0, &qword_267C95DB0);
  sub_21CB88EB0();
  char v26 = *(unsigned char *)(v24 + 80);
  *(void *)&long long v44 = *(void *)(v24 + 72);
  BYTE8(v44) = v26;
  char v43 = 5;
  sub_21CB88EB0();
  uint64_t v27 = v41;
  sub_21CA24E80(v24 + *(int *)(v40 + 36), v41, (uint64_t *)&unk_267C951B0);
  uint64_t v28 = sub_21CB87590();
  uint64_t v29 = *(void *)(v28 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28) == 1)
  {
    sub_21CA1B88C(v27, (uint64_t *)&unk_267C951B0);
    return (*(uint64_t (**)(char *, uint64_t))(v42 + 8))(v11, v21);
  }
  else
  {
    sub_21CB87550();
    double v31 = v30;
    (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v27, v28);
    double v32 = v31 * 1000.0;
    BOOL v33 = v31 * 1000.0 > -9.22337204e18;
    if (v31 * 1000.0 >= 9.22337204e18) {
      BOOL v33 = 0;
    }
    int v34 = v33 & (v32 == trunc(v32));
    if (v34) {
      uint64_t v35 = (uint64_t)v32;
    }
    else {
      uint64_t v35 = 0;
    }
    *(void *)&long long v44 = v35;
    BYTE8(v44) = (v34 & 1) == 0;
    char v43 = 6;
    sub_21CA57E34(&qword_267C95168);
    sub_21CAD6D34(&qword_267C95170, &qword_267C95168);
    sub_21CB88EB0();
    return (*(uint64_t (**)(char *, uint64_t))(v42 + 8))(v11, v21);
  }
}

uint64_t sub_21CAD6C94@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FMFLabelledLocation.init(from:)(a1, a2);
}

uint64_t sub_21CAD6CAC(void *a1)
{
  return FMFLabelledLocation.encode(to:)(a1);
}

uint64_t sub_21CAD6CCC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_21CA57E34(&qword_267C95078);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_21CAD6D34(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_21CA5EEBC(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t _s7FMFCore19FMFLabelledLocationV2eeoiySbAC_ACtFZ_0(void *a1, void *a2)
{
  uint64_t v4 = sub_21CB87590();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v76 = (char *)&v72 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_21CA57E34((uint64_t *)&unk_267C951B0);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v77 = (uint64_t)&v72 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v78 = sub_21CA57E34(&qword_267C95108);
  MEMORY[0x270FA5388](v78);
  uint64_t v79 = (uint64_t)&v72 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for FMFLabelledLocation();
  uint64_t v11 = MEMORY[0x270FA5388](v10);
  uint64_t v12 = MEMORY[0x270FA5388](v11);
  uint64_t v13 = MEMORY[0x270FA5388](v12);
  char v83 = (char *)&v72 - v14;
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v82 = (uint64_t)&v72 - v16;
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  unint64_t v19 = (double *)((char *)&v72 - v18);
  uint64_t v20 = MEMORY[0x270FA5388](v17);
  __int16 v22 = (double *)((char *)&v72 - v21);
  uint64_t v23 = MEMORY[0x270FA5388](v20);
  char v25 = (char *)&v72 - v24;
  uint64_t v26 = MEMORY[0x270FA5388](v23);
  uint64_t v28 = (char *)&v72 - v27;
  uint64_t v29 = MEMORY[0x270FA5388](v26);
  double v31 = (char *)&v72 - v30;
  MEMORY[0x270FA5388](v29);
  int v34 = (char *)&v72 - v32;
  uint64_t v35 = a1[1];
  uint64_t v36 = a2[1];
  uint64_t v80 = v38;
  uint64_t v81 = v37;
  if (!v35)
  {
    if (!v36)
    {
LABEL_10:
      uint64_t v74 = v33;
      uint64_t v75 = v5;
      sub_21CA761DC((uint64_t)a1, (uint64_t)&v72 - v32);
      sub_21CA761DC((uint64_t)a2, (uint64_t)v31);
      goto LABEL_11;
    }
LABEL_8:
    sub_21CA761DC((uint64_t)a1, (uint64_t)&v72 - v32);
    sub_21CA761DC((uint64_t)a2, (uint64_t)v31);
    goto LABEL_9;
  }
  if (!v36) {
    goto LABEL_8;
  }
  if (*a1 == *a2 && v35 == v36) {
    goto LABEL_10;
  }
  uint64_t v74 = v33;
  uint64_t v75 = v5;
  char v39 = sub_21CB88F50();
  sub_21CA761DC((uint64_t)a1, (uint64_t)v34);
  sub_21CA761DC((uint64_t)a2, (uint64_t)v31);
  if ((v39 & 1) == 0)
  {
LABEL_9:
    sub_21CA76240((uint64_t)v31);
    sub_21CA76240((uint64_t)v34);
LABEL_20:
    sub_21CA761DC((uint64_t)a1, (uint64_t)v28);
    sub_21CA761DC((uint64_t)a2, (uint64_t)v25);
    goto LABEL_21;
  }
LABEL_11:
  uint64_t v73 = v4;
  uint64_t v40 = *((void *)v34 + 3);
  uint64_t v41 = *((void *)v31 + 3);
  if (!v40)
  {
    swift_bridgeObjectRetain();
    sub_21CA76240((uint64_t)v31);
    sub_21CA76240((uint64_t)v34);
    if (!v41)
    {
      swift_bridgeObjectRelease();
      goto LABEL_34;
    }
    goto LABEL_19;
  }
  if (!v41)
  {
    swift_bridgeObjectRetain_n();
    sub_21CA76240((uint64_t)v31);
    sub_21CA76240((uint64_t)v34);
    swift_bridgeObjectRelease();
LABEL_19:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_20;
  }
  if (*((void *)v34 + 2) == *((void *)v31 + 2) && v40 == v41)
  {
    swift_bridgeObjectRetain_n();
    sub_21CA76240((uint64_t)v31);
    sub_21CA76240((uint64_t)v34);
    swift_bridgeObjectRelease_n();
LABEL_34:
    sub_21CA761DC((uint64_t)a1, (uint64_t)v28);
    sub_21CA761DC((uint64_t)a2, (uint64_t)v25);
    uint64_t v49 = v75;
    goto LABEL_35;
  }
  char v48 = sub_21CB88F50();
  swift_bridgeObjectRetain_n();
  sub_21CA76240((uint64_t)v31);
  sub_21CA76240((uint64_t)v34);
  swift_bridgeObjectRelease_n();
  sub_21CA761DC((uint64_t)a1, (uint64_t)v28);
  sub_21CA761DC((uint64_t)a2, (uint64_t)v25);
  uint64_t v49 = v75;
  if ((v48 & 1) == 0)
  {
LABEL_21:
    sub_21CA76240((uint64_t)v25);
    sub_21CA76240((uint64_t)v28);
LABEL_22:
    uint64_t v43 = v80;
    uint64_t v42 = v81;
LABEL_23:
    sub_21CA761DC((uint64_t)a1, (uint64_t)v22);
    sub_21CA761DC((uint64_t)a2, (uint64_t)v19);
    goto LABEL_24;
  }
LABEL_35:
  uint64_t v50 = *((void *)v28 + 6);
  uint64_t v51 = *((void *)v25 + 6);
  if (!v50)
  {
    swift_bridgeObjectRetain();
    sub_21CA76240((uint64_t)v25);
    sub_21CA76240((uint64_t)v28);
    uint64_t v43 = v80;
    uint64_t v42 = v81;
    if (!v51) {
      goto LABEL_42;
    }
    swift_bridgeObjectRelease();
    goto LABEL_23;
  }
  if (!v51)
  {
    swift_bridgeObjectRetain();
    sub_21CA76240((uint64_t)v25);
    sub_21CA76240((uint64_t)v28);
    swift_bridgeObjectRelease();
    goto LABEL_22;
  }
  if (*((void *)v28 + 5) == *((void *)v25 + 5) && v50 == v51)
  {
    swift_bridgeObjectRetain();
    sub_21CA76240((uint64_t)v25);
    sub_21CA76240((uint64_t)v28);
    swift_bridgeObjectRelease();
    uint64_t v43 = v80;
    uint64_t v42 = v81;
LABEL_42:
    sub_21CA761DC((uint64_t)a1, (uint64_t)v22);
    sub_21CA761DC((uint64_t)a2, (uint64_t)v19);
    goto LABEL_45;
  }
  char v52 = sub_21CB88F50();
  swift_bridgeObjectRetain();
  sub_21CA76240((uint64_t)v25);
  sub_21CA76240((uint64_t)v28);
  swift_bridgeObjectRelease();
  sub_21CA761DC((uint64_t)a1, (uint64_t)v22);
  sub_21CA761DC((uint64_t)a2, (uint64_t)v19);
  uint64_t v43 = v80;
  uint64_t v42 = v81;
  if ((v52 & 1) == 0)
  {
LABEL_24:
    sub_21CA76240((uint64_t)v19);
    sub_21CA76240((uint64_t)v22);
    uint64_t v45 = v82;
    uint64_t v44 = (uint64_t)v83;
    goto LABEL_25;
  }
LABEL_45:
  double v53 = v22[7];
  char v54 = *((unsigned char *)v22 + 64);
  sub_21CA76240((uint64_t)v22);
  double v55 = v19[7];
  char v56 = *((unsigned char *)v19 + 64);
  sub_21CA76240((uint64_t)v19);
  if (v54)
  {
    uint64_t v45 = v82;
    uint64_t v44 = (uint64_t)v83;
    if (v56)
    {
      sub_21CA761DC((uint64_t)a1, v82);
      sub_21CA761DC((uint64_t)a2, v44);
      goto LABEL_50;
    }
    goto LABEL_25;
  }
  uint64_t v45 = v82;
  uint64_t v44 = (uint64_t)v83;
  if (v56)
  {
LABEL_25:
    sub_21CA761DC((uint64_t)a1, v45);
    sub_21CA761DC((uint64_t)a2, v44);
LABEL_26:
    sub_21CA76240(v44);
    sub_21CA76240(v45);
    goto LABEL_27;
  }
  sub_21CA761DC((uint64_t)a1, v82);
  sub_21CA761DC((uint64_t)a2, v44);
  if (v53 != v55) {
    goto LABEL_26;
  }
LABEL_50:
  double v57 = *(double *)(v45 + 72);
  char v58 = *(unsigned char *)(v45 + 80);
  sub_21CA76240(v45);
  double v59 = *(double *)(v44 + 72);
  char v60 = *(unsigned char *)(v44 + 80);
  sub_21CA76240(v44);
  if ((v58 & 1) == 0)
  {
    uint64_t v61 = v73;
    if ((v60 & 1) == 0)
    {
      sub_21CA761DC((uint64_t)a1, v42);
      sub_21CA761DC((uint64_t)a2, v43);
      if (v57 == v59) {
        goto LABEL_55;
      }
LABEL_28:
      sub_21CA76240(v43);
      sub_21CA76240(v42);
      goto LABEL_29;
    }
LABEL_27:
    sub_21CA761DC((uint64_t)a1, v42);
    sub_21CA761DC((uint64_t)a2, v43);
    goto LABEL_28;
  }
  uint64_t v61 = v73;
  if ((v60 & 1) == 0) {
    goto LABEL_27;
  }
  sub_21CA761DC((uint64_t)a1, v42);
  sub_21CA761DC((uint64_t)a2, v43);
LABEL_55:
  uint64_t v62 = *(int *)(v74 + 36);
  uint64_t v63 = v43 + v62;
  uint64_t v64 = v79;
  uint64_t v65 = v79 + *(int *)(v78 + 48);
  sub_21CA24E80(v42 + v62, v79, (uint64_t *)&unk_267C951B0);
  sub_21CA24E80(v63, v65, (uint64_t *)&unk_267C951B0);
  uint64_t v66 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v49 + 48);
  if (v66(v64, 1, v61) == 1)
  {
    sub_21CA76240(v43);
    sub_21CA76240(v42);
    if (v66(v65, 1, v61) == 1)
    {
      sub_21CA1B88C(v64, (uint64_t *)&unk_267C951B0);
      char v46 = 1;
      return v46 & 1;
    }
  }
  else
  {
    uint64_t v67 = v77;
    sub_21CA24E80(v64, v77, (uint64_t *)&unk_267C951B0);
    unsigned int v68 = v66(v65, 1, v61);
    uint64_t v69 = v67;
    if (v68 != 1)
    {
      char v70 = v76;
      (*(void (**)(char *, uint64_t, uint64_t))(v49 + 32))(v76, v65, v61);
      sub_21CAD83AC();
      char v46 = sub_21CB882B0();
      int v71 = *(void (**)(char *, uint64_t))(v49 + 8);
      v71(v70, v61);
      sub_21CA76240(v43);
      sub_21CA76240(v42);
      v71((char *)v69, v61);
      sub_21CA1B88C(v64, (uint64_t *)&unk_267C951B0);
      return v46 & 1;
    }
    sub_21CA76240(v43);
    sub_21CA76240(v42);
    (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v67, v61);
  }
  sub_21CA1B88C(v64, &qword_267C95108);
LABEL_29:
  char v46 = 0;
  return v46 & 1;
}

void *initializeBufferWithCopyOfBuffer for FMFLabelledLocation(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = (void *)a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (void *)(v15 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v5;
    uint64_t v6 = a2[3];
    *(void *)(a1 + 16) = a2[2];
    *(void *)(a1 + 24) = v6;
    *(_WORD *)(a1 + 32) = *((_WORD *)a2 + 16);
    uint64_t v7 = a2[6];
    *(void *)(a1 + 40) = a2[5];
    *(void *)(a1 + 48) = v7;
    *(unsigned char *)(a1 + 64) = *((unsigned char *)a2 + 64);
    *(void *)(a1 + 56) = a2[7];
    *(unsigned char *)(a1 + 80) = *((unsigned char *)a2 + 80);
    uint64_t v8 = *(int *)(a3 + 36);
    uint64_t v9 = (char *)a2 + v8;
    uint64_t v10 = (void *)(a1 + v8);
    *(void *)(a1 + 72) = a2[9];
    uint64_t v11 = sub_21CB87590();
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v13(v9, 1, v11))
    {
      uint64_t v14 = sub_21CA57E34((uint64_t *)&unk_267C951B0);
      memcpy(v10, v9, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v12 + 16))(v10, v9, v11);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v10, 0, 1, v11);
    }
  }
  return v3;
}

uint64_t destroy for FMFLabelledLocation(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 36);
  uint64_t v5 = sub_21CB87590();
  uint64_t v8 = *(void *)(v5 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v4, 1, v5);
  if (!result)
  {
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(v8 + 8);
    return v7(v4, v5);
  }
  return result;
}

uint64_t initializeWithCopy for FMFLabelledLocation(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  uint64_t v6 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v6;
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  uint64_t v7 = *(int *)(a3 + 36);
  uint64_t v8 = (const void *)(a2 + v7);
  uint64_t v9 = (void *)(a1 + v7);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  uint64_t v10 = sub_21CB87590();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v12(v8, 1, v10))
  {
    uint64_t v13 = sub_21CA57E34((uint64_t *)&unk_267C951B0);
    memcpy(v9, v8, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(v9, v8, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v9, 0, 1, v10);
  }
  return a1;
}

uint64_t assignWithCopy for FMFLabelledLocation(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(unsigned char *)(a1 + 33) = *(unsigned char *)(a2 + 33);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(void *)(a1 + 56) = v6;
  uint64_t v7 = *(void *)(a2 + 72);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(void *)(a1 + 72) = v7;
  uint64_t v8 = *(int *)(a3 + 36);
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (void *)(a2 + v8);
  uint64_t v11 = sub_21CB87590();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v12 + 48);
  int v14 = v13(v9, 1, v11);
  int v15 = v13(v10, 1, v11);
  if (!v14)
  {
    if (!v15)
    {
      (*(void (**)(void *, void *, uint64_t))(v12 + 24))(v9, v10, v11);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v12 + 8))(v9, v11);
    goto LABEL_6;
  }
  if (v15)
  {
LABEL_6:
    uint64_t v16 = sub_21CA57E34((uint64_t *)&unk_267C951B0);
    memcpy(v9, v10, *(void *)(*(void *)(v16 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v12 + 16))(v9, v10, v11);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  return a1;
}

uint64_t initializeWithTake for FMFLabelledLocation(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  uint64_t v5 = *(int *)(a3 + 36);
  uint64_t v6 = (const void *)(a2 + v5);
  uint64_t v7 = (void *)(a1 + v5);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  uint64_t v8 = sub_21CB87590();
  uint64_t v9 = *(void *)(v8 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v8))
  {
    uint64_t v10 = sub_21CA57E34((uint64_t *)&unk_267C951B0);
    memcpy(v7, v6, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v9 + 32))(v7, v6, v8);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v9 + 56))(v7, 0, 1, v8);
  }
  return a1;
}

uint64_t assignWithTake for FMFLabelledLocation(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v8;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  uint64_t v9 = *(int *)(a3 + 36);
  uint64_t v10 = (void *)(a1 + v9);
  uint64_t v11 = (void *)(a2 + v9);
  uint64_t v12 = sub_21CB87590();
  uint64_t v13 = *(void *)(v12 - 8);
  int v14 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v13 + 48);
  int v15 = v14(v10, 1, v12);
  int v16 = v14(v11, 1, v12);
  if (!v15)
  {
    if (!v16)
    {
      (*(void (**)(void *, void *, uint64_t))(v13 + 40))(v10, v11, v12);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v13 + 8))(v10, v12);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    uint64_t v17 = sub_21CA57E34((uint64_t *)&unk_267C951B0);
    memcpy(v10, v11, *(void *)(*(void *)(v17 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v13 + 32))(v10, v11, v12);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  return a1;
}

uint64_t sub_21CAD7FE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 2147483646)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  else
  {
    uint64_t v9 = sub_21CA57E34((uint64_t *)&unk_267C951B0);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48);
    uint64_t v11 = v9;
    uint64_t v12 = a1 + *(int *)(a3 + 36);
    return v10(v12, a2, v11);
  }
}

uint64_t sub_21CAD80A8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 2147483646)
  {
    *(void *)(result + 8) = a2;
  }
  else
  {
    uint64_t v7 = sub_21CA57E34((uint64_t *)&unk_267C951B0);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 36);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for FMFLabelledLocation.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *uint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x21CAD8220);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FMFLabelledLocation.CodingKeys()
{
  return &type metadata for FMFLabelledLocation.CodingKeys;
}

unint64_t sub_21CAD825C()
{
  unint64_t result = qword_267C95DD8;
  if (!qword_267C95DD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C95DD8);
  }
  return result;
}

unint64_t sub_21CAD82B4()
{
  unint64_t result = qword_267C95DE0;
  if (!qword_267C95DE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C95DE0);
  }
  return result;
}

unint64_t sub_21CAD830C()
{
  unint64_t result = qword_267C95DE8;
  if (!qword_267C95DE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C95DE8);
  }
  return result;
}

uint64_t sub_21CAD8360()
{
  unint64_t v0 = sub_21CB88D70();
  swift_bridgeObjectRelease();
  if (v0 >= 7) {
    return 7;
  }
  else {
    return v0;
  }
}

unint64_t sub_21CAD83AC()
{
  unint64_t result = qword_267C95110;
  if (!qword_267C95110)
  {
    sub_21CB87590();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C95110);
  }
  return result;
}

uint64_t FMFRemoveLocationAlertAction.__allocating_init(locationAlert:)(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  uint64_t v3 = sub_21CAD8718(a1, v2);
  swift_release();
  return v3;
}

uint64_t FMFRemoveLocationAlertAction.init(locationAlert:)(uint64_t a1)
{
  uint64_t v2 = sub_21CAD8718(a1, v1);
  swift_release();
  return v2;
}

uint64_t sub_21CAD8488()
{
  return 60;
}

void FMFRemoveLocationAlertAction.__allocating_init(requiresRefresh:)()
{
}

void FMFRemoveLocationAlertAction.init(requiresRefresh:)()
{
}

uint64_t sub_21CAD867C()
{
  return sub_21CA7DF00(v0 + OBJC_IVAR____TtC7FMFCore28FMFRemoveLocationAlertAction_locationAlert);
}

uint64_t FMFRemoveLocationAlertAction.deinit()
{
  sub_21CA7DF00(v0 + OBJC_IVAR____TtC7FMFCore28FMFRemoveLocationAlertAction_locationAlert);
  return v0;
}

uint64_t FMFRemoveLocationAlertAction.__deallocating_deinit()
{
  sub_21CA7DF00(v0 + OBJC_IVAR____TtC7FMFCore28FMFRemoveLocationAlertAction_locationAlert);

  return swift_deallocClassInstance();
}

uint64_t sub_21CAD8718(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_21CA57E34((uint64_t *)&unk_267C951B0);
  MEMORY[0x270FA5388](v4 - 8);
  unsigned int v6 = &v19[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = sub_21CA57E34((uint64_t *)&unk_267C96ED0);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = &v19[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = type metadata accessor for FMFLocationAlert();
  uint64_t v11 = MEMORY[0x270FA5388](v10 - 8);
  uint64_t v13 = &v19[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v11);
  int v15 = &v19[-v14];
  sub_21CA7E0A0(a1, (uint64_t)v13);
  sub_21CA76144(v23);
  sub_21CA76174((uint64_t)v23, (uint64_t)v22);
  unsigned __int8 v21 = 4;
  uint64_t v16 = type metadata accessor for FMFSchedule();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v9, 1, 1, v16);
  unsigned __int8 v20 = 3;
  uint64_t v17 = sub_21CB87590();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v6, 1, 1, v17);
  swift_retain();
  FMFLocationAlert.init(locationAlert:location:radius:address:label:triggerType:isOn:repeating:schedule:phoneNumbers:emails:ckRecordName:ckRecordZoneOwnerName:acceptanceStatus:muteEndDate:)(v13, 0, 0, 1, (uint64_t)v22, 0, 0, &v21, (uint64_t)v15, 0, 2u, (uint64_t)v9, 0, 0, 0, 0, 0, 0, &v20,
    (uint64_t)v6);
  sub_21CA7DF00(a1);
  sub_21CA7E1CC((uint64_t)v15, a2 + OBJC_IVAR____TtC7FMFCore28FMFRemoveLocationAlertAction_locationAlert);
  *(unsigned char *)(a2 + 16) = 1;
  return a2;
}

uint64_t sub_21CAD898C()
{
  return type metadata accessor for FMFRemoveLocationAlertAction();
}

uint64_t type metadata accessor for FMFRemoveLocationAlertAction()
{
  uint64_t result = qword_267C95DF0;
  if (!qword_267C95DF0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t method lookup function for FMFRemoveLocationAlertAction(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for FMFRemoveLocationAlertAction);
}

uint64_t dispatch thunk of FMFRemoveLocationAlertAction.__allocating_init(locationAlert:)()
{
  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t FMFConfig.maxFollowers.getter()
{
  return *(void *)v0;
}

uint64_t FMFConfig.maxCharLimitForInviteText.getter()
{
  return *(void *)(v0 + 8);
}

uint64_t FMFConfig.sessionLifeSpan.getter()
{
  return *(void *)(v0 + 16);
}

double FMFConfig.distanceForNearbyInMeters.getter()
{
  return *(double *)(v0 + 24);
}

uint64_t FMFConfig.myLocationMaxIntervalMS.getter()
{
  return *(void *)(v0 + 32);
}

uint64_t FMFConfig.maxInvites.getter()
{
  return *(void *)(v0 + 40);
}

uint64_t FMFConfig.allowMigrationV2.getter()
{
  return *(unsigned __int8 *)(v0 + 48);
}

uint64_t FMFConfig.maxLabels.getter()
{
  return *(void *)(v0 + 56);
}

uint64_t FMFConfig.maxMyLabelledLocations.getter()
{
  return *(void *)(v0 + 64);
}

uint64_t FMFConfig.maxWaitTimeForRegisterMS.getter()
{
  return *(void *)(v0 + 72);
}

uint64_t FMFConfig.myLocationMinIntervalMS.getter()
{
  return *(void *)(v0 + 80);
}

uint64_t FMFConfig.locationShareExpiryDefaultInSec.getter()
{
  return *(void *)(v0 + 88);
}

uint64_t FMFConfig.barONOverride.getter()
{
  return *(unsigned __int8 *)(v0 + 96);
}

uint64_t FMFConfig.locationTTL.getter()
{
  return *(void *)(v0 + 104);
}

uint64_t FMFConfig.accuracyThresholdForLabeling.getter()
{
  return *(void *)(v0 + 112);
}

uint64_t FMFConfig.deepLocateMinGapMs.getter()
{
  return *(void *)(v0 + 120);
}

uint64_t FMFConfig.maxNotifyOtherFences.getter()
{
  return *(void *)(v0 + 128);
}

uint64_t FMFConfig.maxNotifyMeFences.getter()
{
  return *(void *)(v0 + 136);
}

uint64_t FMFConfig.userLocateWaitIntervalInMS.getter()
{
  return *(void *)(v0 + 144);
}

uint64_t FMFConfig.maxLocatingIntervalInMS.getter()
{
  return *(void *)(v0 + 152);
}

uint64_t FMFConfig.maxFriends.getter()
{
  return *(void *)(v0 + 160);
}

uint64_t FMFConfig.minAccuracyForMyLocation.getter()
{
  return *(void *)(v0 + 168);
}

uint64_t FMFConfig.maxCharLimitForLabelName.getter()
{
  return *(void *)(v0 + 176);
}

uint64_t FMFConfig.familyPhotoCheckIntervalInSecs.getter()
{
  return *(void *)(v0 + 184);
}

uint64_t FMFConfig.maxPeopleInNotifyOtherFence.getter()
{
  return *(void *)(v0 + 192);
}

uint64_t FMFConfig.barLocEnabled.getter()
{
  return *(unsigned __int8 *)(v0 + 200);
}

uint64_t FMFConfig.allowMigration.getter()
{
  return *(unsigned __int8 *)(v0 + 201);
}

uint64_t FMFConfig.maxFriendsLabelledLocations.getter()
{
  return *(void *)(v0 + 208);
}

uint64_t FMFConfig.maxTriesToRegisterDevice.getter()
{
  return *(void *)(v0 + 216);
}

uint64_t FMFConfig.maxPeopleInOfferLocation.getter()
{
  return *(void *)(v0 + 224);
}

uint64_t FMFConfig.notifyMeFenceStaleAfterMinutes.getter()
{
  return *(void *)(v0 + 232);
}

uint64_t sub_21CAD8B80(char *a1, char *a2)
{
  char v2 = *a2;
  unint64_t v3 = sub_21CA5F770(*a1);
  uint64_t v5 = v4;
  if (v3 == sub_21CA5F770(v2) && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = sub_21CB88F50();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_21CAD8C0C()
{
  char v1 = *v0;
  sub_21CB89050();
  sub_21CA5F770(v1);
  sub_21CB88380();
  swift_bridgeObjectRelease();
  return sub_21CB89090();
}

uint64_t sub_21CAD8C70()
{
  sub_21CA5F770(*v0);
  sub_21CB88380();

  return swift_bridgeObjectRelease();
}

uint64_t sub_21CAD8CC4()
{
  char v1 = *v0;
  sub_21CB89050();
  sub_21CA5F770(v1);
  sub_21CB88380();
  swift_bridgeObjectRelease();
  return sub_21CB89090();
}

uint64_t sub_21CAD8D24@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_21CAD9954();
  *a1 = result;
  return result;
}

unint64_t sub_21CAD8D54@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_21CA5F770(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_21CAD8D80@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_21CAD9954();
  *a1 = result;
  return result;
}

void sub_21CAD8DA8(unsigned char *a1@<X8>)
{
  *a1 = 31;
}

uint64_t sub_21CAD8DB4(uint64_t a1)
{
  unint64_t v2 = sub_21CA1DB34();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_21CAD8DF0(uint64_t a1)
{
  unint64_t v2 = sub_21CA1DB34();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t FMFConfig.debugDescription.getter()
{
  return 0;
}

uint64_t getEnumTagSinglePayload for FMFConfig.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xE2) {
    goto LABEL_17;
  }
  if (a2 + 30 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 30) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 30;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 30;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 30;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x1F;
  int v8 = v6 - 31;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unint64_t sub_21CAD9900()
{
  unint64_t result = qword_267C95E18;
  if (!qword_267C95E18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C95E18);
  }
  return result;
}

uint64_t sub_21CAD9954()
{
  unint64_t v0 = sub_21CB88F80();
  swift_bridgeObjectRelease();
  if (v0 >= 0x1F) {
    return 31;
  }
  else {
    return v0;
  }
}

uint64_t type metadata accessor for FMFNotNowRequest()
{
  uint64_t result = qword_267C95E30;
  if (!qword_267C95E30) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_21CAD99F4()
{
  return swift_initClassMetadata2();
}

uint64_t sub_21CAD9A40()
{
  uint64_t v1 = *(void *)(v0 + qword_267CA5230);
  uint64_t v2 = *(void *)(v0 + qword_267CA5230 + 8);
  v4[3] = MEMORY[0x263F8D310];
  v4[0] = v1;
  v4[1] = v2;
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_21CA3769C((uint64_t)v4, 25705, 0xE200000000000000);
  return swift_endAccess();
}

uint64_t sub_21CAD9AC8()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_21CAD9ADC()
{
  uint64_t v0 = sub_21CB87730();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + qword_267CA51F8;
  uint64_t v2 = sub_21CB87590();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_21CAD9BC4()
{
  sub_21CAD9ADC();

  return swift_deallocClassInstance();
}

uint64_t sub_21CAD9C18()
{
  return type metadata accessor for FMFNotNowRequest();
}

ValueMetadata *type metadata accessor for FMFAnalytics()
{
  return &type metadata for FMFAnalytics;
}

uint64_t FMFSetFavoriteAction.__allocating_init(friend:order:)(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v6 = swift_allocObject();
  sub_21CAD9D08(a1, v6 + OBJC_IVAR____TtC7FMFCore20FMFSetFavoriteAction_friend);
  uint64_t v7 = v6 + OBJC_IVAR____TtC7FMFCore20FMFSetFavoriteAction_order;
  *(void *)uint64_t v7 = a2;
  *(unsigned char *)(v7 + 8) = a3 & 1;
  *(unsigned char *)(v6 + 16) = 0;
  return v6;
}

uint64_t FMFSetFavoriteAction.init(friend:order:)(uint64_t a1, uint64_t a2, char a3)
{
  sub_21CAD9D08(a1, v3 + OBJC_IVAR____TtC7FMFCore20FMFSetFavoriteAction_friend);
  uint64_t v6 = v3 + OBJC_IVAR____TtC7FMFCore20FMFSetFavoriteAction_order;
  *(void *)uint64_t v6 = a2;
  *(unsigned char *)(v6 + 8) = a3 & 1;
  *(unsigned char *)(v3 + 16) = 0;
  return v3;
}

uint64_t sub_21CAD9D08(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FMFFriend();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_21CAD9D6C()
{
  return 60;
}

void FMFSetFavoriteAction.__allocating_init(requiresRefresh:)()
{
}

void FMFSetFavoriteAction.init(requiresRefresh:)()
{
}

uint64_t sub_21CAD9FE4()
{
  return sub_21CA4C4F4(v0 + OBJC_IVAR____TtC7FMFCore20FMFSetFavoriteAction_friend);
}

uint64_t FMFSetFavoriteAction.deinit()
{
  sub_21CA4C4F4(v0 + OBJC_IVAR____TtC7FMFCore20FMFSetFavoriteAction_friend);
  return v0;
}

uint64_t FMFSetFavoriteAction.__deallocating_deinit()
{
  sub_21CA4C4F4(v0 + OBJC_IVAR____TtC7FMFCore20FMFSetFavoriteAction_friend);

  return swift_deallocClassInstance();
}

uint64_t sub_21CADA080()
{
  return type metadata accessor for FMFSetFavoriteAction();
}

uint64_t type metadata accessor for FMFSetFavoriteAction()
{
  uint64_t result = qword_267C95E40;
  if (!qword_267C95E40) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_21CADA0D4()
{
  uint64_t result = type metadata accessor for FMFFriend();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for FMFSetFavoriteAction(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for FMFSetFavoriteAction);
}

uint64_t dispatch thunk of FMFSetFavoriteAction.__allocating_init(friend:order:)(uint64_t a1, uint64_t a2, char a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, void))(v3 + 144))(a1, a2, a3 & 1);
}

void *sub_21CADA1A0(unsigned __int8 *a1)
{
  uint64_t v2 = sub_21CA57E34(&qword_267C95190);
  uint64_t v3 = MEMORY[0x270FA5388](v2 - 8);
  uint64_t v5 = (char *)&v51 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v51 - v6;
  int v57 = *a1;
  type metadata accessor for FMLocalize();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  uint64_t v9 = self;
  id v10 = objc_msgSend(v9, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v60 = sub_21CB872B0();
  uint64_t v12 = v11;

  id v13 = objc_msgSend(v9, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v58 = sub_21CB872B0();
  uint64_t v59 = v14;

  id v15 = objc_msgSend(v9, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v16 = sub_21CB872B0();
  uint64_t v18 = v17;

  uint64_t v19 = sub_21CB87480();
  uint64_t v20 = *(void *)(v19 - 8);
  unsigned __int8 v21 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v20 + 56);
  double v55 = v7;
  uint64_t v56 = v20 + 56;
  v21(v7, 1, 1, v19);
  id v22 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F255D8]), sel_init);
  objc_msgSend(v22, sel_refresh);
  LODWORD(v7) = objc_msgSend(v22, sel_airplaneMode);

  if (v7)
  {
    char v54 = v21;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (qword_267C94990 != -1) {
      swift_once();
    }
    char v52 = v5;
    uint64_t v23 = sub_21CB880A0();
    sub_21CA4CC18(v23, (uint64_t)qword_267CA5368);
    uint64_t v24 = sub_21CB88070();
    os_log_type_t v25 = sub_21CB88880();
    if (os_log_type_enabled(v24, v25))
    {
      uint64_t v26 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v26 = 0;
      _os_log_impl(&dword_21CA00000, v24, v25, "FMNetworkUtil: Airplane mode is enabled", v26, 2u);
      MEMORY[0x21D4B6B70](v26, -1, -1);
    }

    uint64_t v60 = sub_21CB2EFBC();
    uint64_t v53 = v27;
    id v28 = objc_msgSend(v9, sel_bundleForClass_, ObjCClassFromMetadata);
    uint64_t v16 = sub_21CB872B0();
    uint64_t v18 = v29;

    id v30 = objc_msgSend(v9, sel_bundleForClass_, ObjCClassFromMetadata);
    uint64_t v31 = sub_21CB872B0();
    uint64_t v33 = v32;

    uint64_t v5 = v52;
  }
  else
  {
    if ((sub_21CA6CC40() & 1) != 0 || (int v34 = (void *)sub_21CB882C0(), v35 = MGGetBoolAnswer(), v34, !v35))
    {
      uint64_t v31 = 0;
      uint64_t v33 = 0;
      uint64_t v47 = (uint64_t)v55;
      v21(v5, 1, 1, v19);
      goto LABEL_16;
    }
    char v54 = v21;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (qword_267C94990 != -1) {
      swift_once();
    }
    uint64_t v36 = sub_21CB880A0();
    sub_21CA4CC18(v36, (uint64_t)qword_267CA5368);
    uint64_t v37 = sub_21CB88070();
    os_log_type_t v38 = sub_21CB88880();
    if (os_log_type_enabled(v37, v38))
    {
      char v39 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)char v39 = 0;
      _os_log_impl(&dword_21CA00000, v37, v38, "FMNetworkUtil: Cellular is disabled", v39, 2u);
      MEMORY[0x21D4B6B70](v39, -1, -1);
    }

    id v40 = objc_msgSend(v9, sel_bundleForClass_, ObjCClassFromMetadata);
    uint64_t v60 = sub_21CB872B0();
    uint64_t v53 = v41;

    uint64_t v58 = sub_21CB2EFBC();
    uint64_t v59 = v42;
    id v43 = objc_msgSend(v9, sel_bundleForClass_, ObjCClassFromMetadata);
    uint64_t v16 = sub_21CB872B0();
    uint64_t v18 = v44;

    id v45 = objc_msgSend(v9, sel_bundleForClass_, ObjCClassFromMetadata);
    uint64_t v31 = sub_21CB872B0();
    uint64_t v33 = v46;
  }
  sub_21CB87470();
  uint64_t v47 = (uint64_t)v55;
  sub_21CA07B00((uint64_t)v55);
  sub_21CA66D0C((uint64_t)v5, v47);
  uint64_t v12 = v53;
  v54(v5, 1, 1, v19);
LABEL_16:
  type metadata accessor for FMFAlert();
  char v48 = (void *)swift_allocObject();
  v48[3] = 0;
  swift_unknownObjectWeakInit();
  v48[4] = 0;
  v48[5] = 0;
  v48[6] = v60;
  v48[7] = v12;
  uint64_t v49 = v59;
  v48[8] = v58;
  v48[9] = v49;
  v48[10] = v16;
  v48[11] = v18;
  v48[12] = v31;
  v48[13] = v33;
  sub_21CA66D0C(v47, (uint64_t)v48 + OBJC_IVAR____TtC7FMFCore8FMFAlert_okButtonURL);
  sub_21CA66D0C((uint64_t)v5, (uint64_t)v48 + OBJC_IVAR____TtC7FMFCore8FMFAlert_cancelButtonURL);
  *((unsigned char *)v48 + OBJC_IVAR____TtC7FMFCore8FMFAlert_alertType) = v57;
  return v48;
}

uint64_t sub_21CADA95C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  uint64_t v60 = *(void *)(v1 - 8);
  uint64_t v2 = (void *)MEMORY[0x270FA5388](a1);
  uint64_t v59 = (char *)&v43 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = v2;
  uint64_t v4 = v2[2];
  uint64_t v6 = v2[5];
  uint64_t v5 = v2[6];
  uint64_t v64 = v2[3];
  uint64_t v65 = v5;
  uint64_t v7 = v2[7];
  uint64_t v68 = v4;
  uint64_t v69 = v64;
  uint64_t v70 = v1;
  uint64_t v71 = v6;
  uint64_t v62 = v6;
  uint64_t v63 = v7;
  uint64_t v72 = v5;
  uint64_t v73 = v7;
  type metadata accessor for AsyncChunksOfCountOrSignalSequence.Either();
  uint64_t v43 = v1;
  uint64_t v8 = sub_21CB88CB0();
  uint64_t v61 = *(void *)(v8 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v8);
  uint64_t v58 = (char *)&v43 - v10;
  uint64_t v11 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v9);
  id v13 = (char *)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_21CB88CB0();
  uint64_t v56 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v44 = (char *)&v43 - v15;
  uint64_t v49 = sub_21CB885E0();
  swift_getWitnessTable();
  uint64_t v16 = type metadata accessor for AsyncSyncSequence();
  uint64_t v48 = v16;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v47 = WitnessTable;
  uint64_t v46 = swift_getWitnessTable();
  uint64_t v68 = v14;
  uint64_t v69 = v16;
  uint64_t v70 = WitnessTable;
  uint64_t v71 = v46;
  uint64_t v18 = type metadata accessor for AsyncChain2Sequence();
  uint64_t v57 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  uint64_t v45 = (uint64_t)&v43 - v19;
  uint64_t v20 = swift_getWitnessTable();
  uint64_t v52 = v20;
  uint64_t v50 = v8;
  uint64_t v51 = swift_getWitnessTable();
  uint64_t v68 = v18;
  uint64_t v69 = v8;
  uint64_t v70 = v20;
  uint64_t v71 = v51;
  uint64_t v54 = type metadata accessor for AsyncMerge2Sequence();
  uint64_t v55 = *(void *)(v54 - 8);
  MEMORY[0x270FA5388](v54);
  id v22 = (char *)&v43 - v21;
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v66, v4);
  uint64_t v23 = (void *)swift_allocObject();
  uint64_t v24 = v64;
  v23[2] = v4;
  v23[3] = v24;
  v23[4] = v1;
  uint64_t v25 = v65;
  v23[5] = v62;
  v23[6] = v25;
  v23[7] = v63;
  uint64_t v26 = (uint64_t)v44;
  sub_21CB886F0();
  swift_release();
  sub_21CB88F10();
  swift_allocObject();
  uint64_t v27 = sub_21CB88540();
  uint64_t v29 = v28;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 56))(v29, 1, 2, AssociatedTypeWitness);
  sub_21CB885E0();
  uint64_t v67 = v27;
  sub_21CADB53C(v49, (uint64_t)&v68);
  swift_bridgeObjectRelease();
  uint64_t v67 = v68;
  uint64_t v31 = v45;
  sub_21CAE7D00(v26, (uint64_t)&v67, v14, v48, v47, v46, (uint64_t (*)(void, void *))type metadata accessor for AsyncChain2Sequence, v45);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v56 + 8))(v26, v14);
  uint64_t v32 = v53;
  uint64_t v33 = v66;
  uint64_t v34 = v43;
  (*(void (**)(char *, uint64_t, uint64_t))(v60 + 16))(v59, v66 + *((int *)v53 + 17), v43);
  int v35 = (void *)swift_allocObject();
  uint64_t v36 = v63;
  uint64_t v37 = v64;
  v35[2] = v4;
  v35[3] = v37;
  uint64_t v38 = v62;
  v35[4] = v34;
  v35[5] = v38;
  v35[6] = v65;
  v35[7] = v36;
  uint64_t v39 = (uint64_t)v58;
  sub_21CB886F0();
  swift_release();
  uint64_t v40 = v50;
  sub_21CAE7D00(v31, v39, v18, v50, v52, v51, (uint64_t (*)(void, void *))type metadata accessor for AsyncMerge2Sequence, (uint64_t)v22);
  (*(void (**)(uint64_t, uint64_t))(v61 + 8))(v39, v40);
  (*(void (**)(uint64_t, uint64_t))(v57 + 8))(v31, v18);
  uint64_t v41 = v54;
  sub_21CAE2824(v54);
  (*(void (**)(char *, uint64_t))(v55 + 8))(v22, v41);
  return *(void *)(v33 + *((int *)v32 + 18));
}

uint64_t sub_21CADB124(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t sub_21CADB14C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(a1 + 24);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](a1);
  uint64_t v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x270FA5388](v7);
  uint64_t v12 = (char *)&v18 - v11;
  MEMORY[0x270FA5388](v10);
  (*(void (**)(char *))(v14 + 16))((char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t result = sub_21CADB398(a1, (uint64_t)v12, a2);
  if (v2)
  {
    uint64_t v16 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
    v16(v9, v12, v5);
    if (sub_21CB88F20())
    {
      return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    }
    else
    {
      swift_allocError();
      return ((uint64_t (*)(uint64_t, char *, uint64_t))v16)(v17, v9, v5);
    }
  }
  return result;
}

uint64_t sub_21CADB354()
{
  return swift_initClassMetadata2();
}

uint64_t sub_21CADB398@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if (swift_getEnumCaseMultiPayload() != 1) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 32))(a3, v3);
  }
  (*(void (**)(uint64_t, uint64_t, void))(*(void *)(*(void *)(a1 + 24) - 8) + 32))(a2, v3, *(void *)(a1 + 24));
  return swift_willThrowTypedImpl();
}

void sub_21CADB468(void (*a1)(void), int a2, os_unfair_lock_t lock)
{
}

uint64_t sub_21CADB4D0()
{
  MEMORY[0x21D4B5CC0]();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ManagedCriticalState.LockedBuffer()
{
  return sub_21CA229E0();
}

uint64_t sub_21CADB53C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *(void *)(a1 - 8);
  MEMORY[0x270FA5388]();
  uint64_t v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v4 + 16))(v6);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v4 + 32))(a2, v6, a1);
}

uint64_t sub_21CADB614@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 32))(a3, a1, a2);
}

uint64_t sub_21CADB64C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56);
  v8(a2, 1, 1, AssociatedTypeWitness);
  uint64_t v6 = sub_21CB889A0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a2, v6);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32))(a2, a1, AssociatedTypeWitness);

  return ((uint64_t (*)(uint64_t, void, uint64_t, uint64_t))v8)(a2, 0, 1, AssociatedTypeWitness);
}

uint64_t sub_21CADB784(uint64_t a1, uint64_t a2)
{
  v3[2] = a1;
  v3[3] = v2;
  v3[4] = *(void *)(a2 + 24);
  v3[5] = *(void *)(a2 + 16);
  v3[6] = swift_getAssociatedTypeWitness();
  uint64_t v4 = sub_21CB889A0();
  v3[7] = v4;
  v3[8] = *(void *)(v4 - 8);
  v3[9] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_21CADB878, 0, 0);
}

uint64_t sub_21CADB878()
{
  if (sub_21CB88680()) {
    goto LABEL_6;
  }
  uint64_t v1 = v0[3];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  int v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 48))(v1, 1, AssociatedTypeWitness);
  uint64_t v4 = v0[9];
  uint64_t v5 = v0[6];
  if (v3)
  {
    (*(void (**)(void, uint64_t, uint64_t, void))(*(void *)(v5 - 8) + 56))(v0[9], 1, 1, v0[6]);
LABEL_5:
    (*(void (**)(void, void))(v0[8] + 8))(v0[9], v0[7]);
LABEL_6:
    uint64_t v7 = v0[6];
    uint64_t v8 = v0[3];
    uint64_t v9 = v0[2];
    uint64_t v10 = swift_getAssociatedTypeWitness();
    uint64_t v11 = sub_21CB889A0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v8, v11);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v8, 1, 1, v10);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v9, 1, 1, v7);
    goto LABEL_7;
  }
  swift_getAssociatedConformanceWitness();
  sub_21CB889B0();
  uint64_t v6 = *(void *)(v5 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1) {
    goto LABEL_5;
  }
  uint64_t v14 = v0[6];
  uint64_t v15 = v0[2];
  (*(void (**)(uint64_t, void, uint64_t))(v6 + 32))(v15, v0[9], v14);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v6 + 56))(v15, 0, 1, v14);
LABEL_7:
  swift_task_dealloc();
  uint64_t v12 = (uint64_t (*)(void))v0[1];
  return v12();
}

uint64_t sub_21CADBB54(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_21CA65250;
  return sub_21CADB784(a1, a2);
}

uint64_t sub_21CADBBFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v6 + 16) = v12;
  *uint64_t v12 = v6;
  v12[1] = sub_21CADBCC8;
  return MEMORY[0x270FA1E90](a1, a2, a3, a5, a6);
}

uint64_t sub_21CADBCC8()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_21CADBDC4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x270FA5388](AssociatedTypeWitness - 8);
  uint64_t v10 = (char *)&v12 - v9;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v2, v4);
  sub_21CB884A0();
  return sub_21CADB64C((uint64_t)v10, a2);
}

uint64_t sub_21CADBF10(uint64_t a1, uint64_t a2)
{
  return sub_21CA651EC(a1, a2, (void (*)(void))sub_21CADBDC4);
}

uint64_t sub_21CADBF28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v12 = sub_21CB889A0();
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  uint64_t v14 = a7 + *(int *)(TupleTypeMetadata3 + 48);
  uint64_t v15 = a7 + *(int *)(TupleTypeMetadata3 + 64);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a4 - 8) + 32))(a7, a1, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a5 - 8) + 32))(v14, a2, a5);
  uint64_t v16 = *(void *)(v12 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16))(v15, a3, v12);
  type metadata accessor for MergeStateMachine.State();
  swift_storeEnumTagMultiPayload();
  LODWORD(v14) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a6 - 8) + 48))(a3, 1, a6);
  (*(void (**)(uint64_t, uint64_t))(v16 + 8))(a3, v12);
  uint64_t result = type metadata accessor for MergeStateMachine();
  if (v14 == 1) {
    uint64_t v18 = 2;
  }
  else {
    uint64_t v18 = 3;
  }
  *(void *)(a7 + *(int *)(result + 68)) = v18;
  return result;
}

uint64_t sub_21CADC160(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(a1 + 24);
  uint64_t v18 = v3;
  uint64_t v19 = v4;
  long long v5 = *(_OWORD *)(a1 + 48);
  long long v17 = *(_OWORD *)(a1 + 32);
  long long v20 = v17;
  long long v21 = v5;
  uint64_t v6 = type metadata accessor for MergeStateMachine.State();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v17 - v8;
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))((char *)&v17 - v8, v2, v6);
  uint64_t v10 = 0;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v10 = *(void *)v9;
      uint64_t v14 = *((void *)v9 + 4);
      swift_release();
      if (v14) {
        goto LABEL_9;
      }
      (*(void (**)(char *, uint64_t))(v7 + 8))(v2, v6);
      swift_storeEnumTagMultiPayload();
      break;
    case 2u:
      uint64_t v15 = *(void (**)(char *, uint64_t))(v7 + 8);
      v15(v9, v6);
      v15(v2, v6);
      swift_storeEnumTagMultiPayload();
      goto LABEL_6;
    case 3u:
      return v10;
    case 4u:
      __break(1u);
LABEL_9:
      __break(1u);
      JUMPOUT(0x21CADC3ECLL);
    default:
      uint64_t v11 = sub_21CB889A0();
      TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
      uint64_t v13 = &v9[*(int *)(TupleTypeMetadata3 + 48)];
      (*(void (**)(char *, uint64_t))(*(void *)(v11 - 8) + 8))(&v9[*(int *)(TupleTypeMetadata3 + 64)], v11);
      (*(void (**)(char *, uint64_t))(*(void *)(v4 - 8) + 8))(v13, v4);
      (*(void (**)(char *, uint64_t))(*(void *)(v3 - 8) + 8))(v9, v3);
LABEL_6:
      uint64_t v10 = 0;
      break;
  }
  return v10;
}

uint64_t sub_21CADC400(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v28 = a1;
  uint64_t v4 = *(void *)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 24);
  uint64_t v6 = *(void *)(a2 + 32);
  uint64_t v7 = *(void *)(a2 + 56);
  uint64_t v30 = v4;
  uint64_t v31 = v5;
  uint64_t v32 = v6;
  long long v27 = *(_OWORD *)(a2 + 40);
  long long v33 = v27;
  uint64_t v34 = v7;
  uint64_t v8 = type metadata accessor for MergeStateMachine.State();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v12 = (uint64_t *)((char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v25 - v13;
  uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  uint64_t v29 = v3;
  v15((char *)&v25 - v13, v3, v8);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    switch(EnumCaseMultiPayload)
    {
      case 2:
        goto LABEL_6;
      case 3:
        goto LABEL_5;
      case 4:
        goto LABEL_7;
      default:
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
LABEL_5:
        __break(1u);
LABEL_6:
        uint64_t v24 = (void *)*((void *)v14 + 1);
        swift_release();

        __break(1u);
LABEL_7:
        __break(1u);
        JUMPOUT(0x21CADC6ECLL);
    }
  }
  uint64_t v17 = sub_21CB889A0();
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  uint64_t v26 = &v14[*(int *)(TupleTypeMetadata3 + 48)];
  uint64_t v19 = &v14[*(int *)(TupleTypeMetadata3 + 64)];
  swift_getAssociatedTypeWitness();
  uint64_t v20 = v28;
  swift_retain();
  uint64_t v21 = sub_21CB88050();
  *uint64_t v12 = v20;
  v12[1] = v21;
  uint64_t v22 = MEMORY[0x263F8EE78];
  v12[3] = 0;
  v12[4] = 0;
  v12[2] = v22;
  swift_storeEnumTagMultiPayload();
  (*(void (**)(uint64_t, void *, uint64_t))(v9 + 40))(v29, v12, v8);
  (*(void (**)(char *, uint64_t))(*(void *)(v17 - 8) + 8))(v19, v17);
  (*(void (**)(char *, uint64_t))(*(void *)(v5 - 8) + 8))(v26, v5);
  return (*(uint64_t (**)(char *, uint64_t))(*(void *)(v4 - 8) + 8))(v14, v4);
}

uint64_t sub_21CADC6FC(uint64_t a1, _OWORD *a2)
{
  long long v4 = a2[2];
  long long v20 = a2[1];
  long long v21 = v4;
  long long v22 = a2[3];
  uint64_t v5 = type metadata accessor for MergeStateMachine.State();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (uint64_t *)((char *)&v18 - v7);
  (*(void (**)(char *, void *, uint64_t))(v6 + 16))((char *)&v18 - v7, v2, v5);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v10 = *v8;
      uint64_t v9 = v8[1];
      uint64_t v11 = (void *)v8[2];
      if (v8[4])
      {
        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v19 = v8[3];
        uint64_t v14 = *(void (**)(void *, uint64_t))(v6 + 8);
        v14(v2, v5);
        swift_storeEnumTagMultiPayload();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v11 = sub_21CA037E4(0, v11[2] + 1, 1, v11);
        }
        unint64_t v16 = v11[2];
        unint64_t v15 = v11[3];
        if (v16 >= v15 >> 1) {
          uint64_t v11 = sub_21CA037E4((void *)(v15 > 1), v16 + 1, 1, v11);
        }
        void v11[2] = v16 + 1;
        v11[v16 + 4] = a1;
        v14(v2, v5);
        *uint64_t v2 = v10;
        v2[1] = v9;
        uint64_t v17 = v19;
        v2[2] = v11;
        v2[3] = v17;
        v2[4] = 0;
        swift_storeEnumTagMultiPayload();
        return 0;
      }
      return a1;
    case 2u:
      uint64_t v12 = (void *)v8[1];
      swift_release();

      goto LABEL_5;
    case 3u:
LABEL_5:
      sub_21CB88600();
      sub_21CAE95D0();
      swift_allocError();
      sub_21CB881C0();
      return a1;
    case 4u:
      break;
    default:
      __break(1u);
      break;
  }
  __break(1u);
  JUMPOUT(0x21CADC974);
}

uint64_t sub_21CADC988@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  long long v4 = v3;
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 56);
  long long v34 = *(_OWORD *)(a2 + 16);
  uint64_t v37 = v7;
  long long v35 = *(_OWORD *)(a2 + 40);
  long long v36 = v34;
  long long v38 = v35;
  uint64_t v39 = v8;
  uint64_t v9 = type metadata accessor for MergeStateMachine.State();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (uint64_t *)((char *)&v30 - v11);
  (*(void (**)(char *, void *, uint64_t))(v10 + 16))((char *)&v30 - v11, v4, v9);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v32 = a3;
      uint64_t v33 = a1;
      uint64_t v13 = *v12;
      uint64_t v14 = v12[1];
      uint64_t v15 = v12[2];
      uint64_t v16 = v12[3];
      uint64_t v17 = v12[4];
      if (v17)
      {
        uint64_t v31 = v12[3];
        *(void *)&long long v36 = v14;
        uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
        sub_21CB88060();
        swift_getWitnessTable();
        if ((sub_21CB887F0() & 1) == 0)
        {
          __break(1u);
LABEL_11:
          __break(1u);
LABEL_12:
          __break(1u);
          JUMPOUT(0x21CADCE3CLL);
        }
        (*(void (**)(void *, uint64_t))(v10 + 8))(v4, v9);
        *long long v4 = v13;
        v4[1] = v14;
        uint64_t v19 = v31;
        v4[2] = v15;
        v4[3] = v19;
        void v4[4] = 0;
        swift_storeEnumTagMultiPayload();
        sub_21CB889A0();
        sub_21CA5EEBC((uint64_t *)&unk_267C96F50);
        sub_21CB886A0();
        TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
        long long v22 = v32;
        uint64_t v21 = v33;
        uint64_t v23 = (char *)v32 + *(int *)(TupleTypeMetadata2 + 48);
        *uint64_t v32 = v17;
        (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16))(v23, v21, AssociatedTypeWitness);
        return (*(uint64_t (**)(void *, void, uint64_t, uint64_t))(*(void *)(TupleTypeMetadata2 - 8) + 56))(v22, 0, 1, TupleTypeMetadata2);
      }
      else
      {
        *(void *)&long long v36 = v12[1];
        uint64_t v28 = *(void (**)(void *, uint64_t))(v10 + 8);
        v28(v4, v9);
        swift_storeEnumTagMultiPayload();
        swift_getAssociatedTypeWitness();
        sub_21CB88060();
        sub_21CB88020();
        v28(v4, v9);
        uint64_t v29 = v36;
        *long long v4 = v13;
        v4[1] = v29;
        v4[2] = v15;
        v4[3] = v16;
        void v4[4] = 0;
        swift_storeEnumTagMultiPayload();
        sub_21CB889A0();
        sub_21CA5EEBC((uint64_t *)&unk_267C96F50);
        sub_21CB886A0();
        uint64_t v25 = swift_getTupleTypeMetadata2();
        uint64_t v26 = *(uint64_t (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56);
        long long v27 = v32;
        return v26(v27, 1, 1, v25);
      }
    case 2u:
      (*(void (**)(uint64_t *, uint64_t))(v10 + 8))(v12, v9);
      goto LABEL_6;
    case 3u:
LABEL_6:
      swift_getAssociatedTypeWitness();
      sub_21CB889A0();
      sub_21CA5EEBC((uint64_t *)&unk_267C96F50);
      sub_21CB886A0();
      uint64_t v25 = swift_getTupleTypeMetadata2();
      uint64_t v26 = *(uint64_t (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56);
      long long v27 = a3;
      return v26(v27, 1, 1, v25);
    case 4u:
      goto LABEL_12;
    default:
      goto LABEL_11;
  }
}

uint64_t sub_21CADCE50(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void *)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 56);
  long long v21 = *(_OWORD *)(a1 + 16);
  long long v22 = v21;
  uint64_t v23 = v4;
  long long v20 = *(_OWORD *)(a1 + 40);
  long long v24 = v20;
  uint64_t v25 = v5;
  uint64_t v6 = type metadata accessor for MergeStateMachine.State();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (uint64_t *)((char *)&v18 - v8);
  (*(void (**)(char *, void *, uint64_t))(v7 + 16))((char *)&v18 - v8, v2, v6);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t result = 0x8000000000000000;
  switch(EnumCaseMultiPayload)
  {
    case 1:
      uint64_t v12 = *v9;
      uint64_t v13 = v9[1];
      uint64_t v14 = v9[2];
      uint64_t v15 = v9[3];
      if (v9[4])
      {
        uint64_t v19 = v9[4];
        *(void *)&long long v22 = v13;
        swift_getAssociatedTypeWitness();
        sub_21CB88060();
        swift_getWitnessTable();
        if (sub_21CB887F0())
        {
          uint64_t v16 = v15 + 1;
          if (!__OFADD__(v15, 1))
          {
            if (v16 == *(void *)((char *)v2 + *(int *)(a1 + 68)))
            {
              swift_release();
              (*(void (**)(void *, uint64_t))(v7 + 8))(v2, v6);
              swift_storeEnumTagMultiPayload();
              return v19 | 0x4000000000000000;
            }
            (*(void (**)(void *, uint64_t))(v7 + 8))(v2, v6);
            *uint64_t v2 = v12;
            v2[1] = v13;
            v2[2] = v14;
            v2[3] = v16;
            v2[4] = v19;
            swift_storeEnumTagMultiPayload();
            return 0x8000000000000000;
          }
        }
        else
        {
          __break(1u);
        }
        __break(1u);
LABEL_16:
        __break(1u);
LABEL_17:
        __break(1u);
LABEL_18:
        __break(1u);
        JUMPOUT(0x21CADD154);
      }
      uint64_t v17 = v15 + 1;
      if (__OFADD__(v15, 1)) {
        goto LABEL_16;
      }
      (*(void (**)(void *, uint64_t))(v7 + 8))(v2, v6);
      *uint64_t v2 = v12;
      v2[1] = v13;
      v2[2] = v14;
      v2[3] = v17;
      v2[4] = 0;
      swift_storeEnumTagMultiPayload();
      if (v17 == *(void *)((char *)v2 + *(int *)(a1 + 68)))
      {
        swift_retain();
        swift_bridgeObjectRetain();
        return v12;
      }
      return 0x8000000000000000;
    case 2:
      (*(void (**)(uint64_t *, uint64_t))(v7 + 8))(v9, v6);
      return 0x8000000000000000;
    case 3:
      return result;
    case 4:
      goto LABEL_18;
    default:
      goto LABEL_17;
  }
}

uint64_t sub_21CADD168(void *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *(void *)(a2 + 32);
  uint64_t v6 = *(void *)(a2 + 56);
  long long v19 = *(_OWORD *)(a2 + 16);
  long long v20 = v19;
  uint64_t v21 = v5;
  long long v18 = *(_OWORD *)(a2 + 40);
  long long v22 = v18;
  uint64_t v23 = v6;
  uint64_t v7 = type metadata accessor for MergeStateMachine.State();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (uint64_t *)((char *)&v18 - v9);
  (*(void (**)(char *, void *, uint64_t))(v8 + 16))((char *)&v18 - v9, v2, v7);
  uint64_t v11 = 0;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v13 = *v10;
      uint64_t v12 = v10[1];
      uint64_t v11 = v10[4];
      if (v11)
      {
        *(void *)&long long v20 = v10[1];
        swift_getAssociatedTypeWitness();
        sub_21CB88060();
        swift_getWitnessTable();
        char v14 = sub_21CB887F0();
        swift_release();
        if ((v14 & 1) == 0)
        {
          __break(1u);
LABEL_9:
          __break(1u);
LABEL_10:
          __break(1u);
          JUMPOUT(0x21CADD3F4);
        }
        (*(void (**)(void *, uint64_t))(v8 + 8))(v3, v7);
        swift_storeEnumTagMultiPayload();
        id v15 = a1;
      }
      else
      {
        (*(void (**)(void *, uint64_t))(v8 + 8))(v2, v7);
        *uint64_t v2 = v12;
        v2[1] = a1;
        swift_storeEnumTagMultiPayload();
        id v16 = a1;
        return v13;
      }
      return v11;
    case 2u:
      (*(void (**)(uint64_t *, uint64_t))(v8 + 8))(v10, v7);
      return 0;
    case 3u:
      return v11;
    case 4u:
      goto LABEL_10;
    default:
      goto LABEL_9;
  }
}

uint64_t sub_21CADD408(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 24);
  uint64_t v18 = v2;
  uint64_t v19 = v3;
  long long v4 = *(_OWORD *)(a1 + 48);
  long long v17 = *(_OWORD *)(a1 + 32);
  long long v20 = v17;
  long long v21 = v4;
  uint64_t v5 = type metadata accessor for MergeStateMachine.State();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (uint64_t *)((char *)&v17 - v7);
  (*(void (**)(char *, uint64_t *, uint64_t))(v6 + 16))((char *)&v17 - v7, v1, v5);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v16 = *v8;
      uint64_t v14 = v8[4];
      swift_release();
      (*(void (**)(uint64_t *, uint64_t))(v6 + 8))(v1, v5);
      swift_storeEnumTagMultiPayload();
      if (!v14) {
        return v16 | 0x4000000000000000;
      }
      return v14;
    case 2u:
      uint64_t v13 = *(void (**)(uint64_t *, uint64_t))(v6 + 8);
      v13(v8, v5);
      v13(v1, v5);
      goto LABEL_5;
    case 3u:
      (*(void (**)(uint64_t *, uint64_t))(v6 + 8))(v1, v5);
LABEL_5:
      swift_storeEnumTagMultiPayload();
      break;
    case 4u:
      __break(1u);
      JUMPOUT(0x21CADD6E8);
    default:
      uint64_t v9 = sub_21CB889A0();
      TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
      uint64_t v11 = (char *)v8 + *(int *)(TupleTypeMetadata3 + 48);
      uint64_t v12 = (char *)v8 + *(int *)(TupleTypeMetadata3 + 64);
      (*(void (**)(uint64_t *, uint64_t))(v6 + 8))(v1, v5);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(char *, uint64_t))(*(void *)(v9 - 8) + 8))(v12, v9);
      (*(void (**)(char *, uint64_t))(*(void *)(v3 - 8) + 8))(v11, v3);
      (*(void (**)(uint64_t *, uint64_t))(*(void *)(v2 - 8) + 8))(v8, v2);
      break;
  }
  return 0x8000000000000000;
}

uint64_t sub_21CADD6FC@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v61 = a2;
  uint64_t v5 = a1[5];
  uint64_t v6 = a1[2];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = sub_21CB889A0();
  uint64_t v53 = *(void *)(v8 - 8);
  uint64_t v54 = v8;
  uint64_t v9 = MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v51 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x270FA5388](v9);
  uint64_t v14 = (char *)&v51 - v13;
  uint64_t v55 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v12);
  long long v17 = (char *)&v51 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)&v51 - v18;
  uint64_t v21 = a1[3];
  uint64_t v20 = a1[4];
  uint64_t v23 = a1[6];
  uint64_t v22 = a1[7];
  uint64_t v63 = v6;
  uint64_t v64 = v21;
  uint64_t v56 = v21;
  uint64_t v57 = v20;
  uint64_t v65 = v20;
  uint64_t v66 = v5;
  uint64_t v59 = v22;
  uint64_t v60 = v5;
  uint64_t v58 = v23;
  uint64_t v67 = v23;
  uint64_t v68 = v22;
  uint64_t v24 = type metadata accessor for MergeStateMachine.State();
  uint64_t v25 = *(void *)(v24 - 8);
  MEMORY[0x270FA5388](v24);
  long long v27 = (uint64_t *)((char *)&v51 - v26);
  (*(void (**)(char *, void *, uint64_t))(v25 + 16))((char *)&v51 - v26, v3, v24);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      if (v27[4]) {
        goto LABEL_14;
      }
      uint64_t v39 = v27[3];
      uint64_t v51 = v27[2];
      uint64_t v52 = v39;
      uint64_t v40 = *v27;
      uint64_t v62 = v27[1];
      uint64_t v41 = *(void (**)(void *, uint64_t))(v25 + 8);
      v41(v3, v24);
      swift_storeEnumTagMultiPayload();
      sub_21CB88060();
      sub_21CB88040();
      uint64_t v42 = v55;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v55 + 48))(v14, 1, AssociatedTypeWitness) == 1)
      {
        (*(void (**)(char *, uint64_t))(v53 + 8))(v14, v54);
        v41(v3, v24);
        uint64_t v43 = v62;
        *uint64_t v3 = v40;
        v3[1] = v43;
        uint64_t v44 = v52;
        v3[2] = v51;
        v3[3] = v44;
        v3[4] = 0;
        swift_storeEnumTagMultiPayload();
        uint64_t v63 = v6;
        uint64_t v64 = v56;
        uint64_t v65 = v57;
        uint64_t v66 = v60;
        uint64_t v67 = v58;
        uint64_t v68 = v59;
        type metadata accessor for MergeStateMachine.NextAction();
        return swift_storeEnumTagMultiPayload();
      }
      uint64_t v47 = *(void (**)(char *, char *, uint64_t))(v42 + 32);
      v47(v19, v14, AssociatedTypeWitness);
      v41(v3, v24);
      uint64_t v48 = v62;
      *uint64_t v3 = v40;
      v3[1] = v48;
      uint64_t v49 = v52;
      v3[2] = v51;
      v3[3] = v49;
      v3[4] = 0;
      swift_storeEnumTagMultiPayload();
      v47((char *)v61, v19, AssociatedTypeWitness);
      goto LABEL_11;
    case 2u:
      uint64_t v36 = v27[1];
      uint64_t v62 = *v27;
      uint64_t v37 = *(void (**)(void *, uint64_t))(v25 + 8);
      v37(v3, v24);
      swift_storeEnumTagMultiPayload();
      sub_21CB88060();
      sub_21CB88040();
      uint64_t v38 = v55;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v55 + 48))(v11, 1, AssociatedTypeWitness) == 1)
      {
        swift_release();
        (*(void (**)(char *, uint64_t))(v53 + 8))(v11, v54);
        v37(v3, v24);
        swift_storeEnumTagMultiPayload();
        *uint64_t v61 = v36;
        uint64_t v63 = v6;
        uint64_t v64 = v56;
        uint64_t v65 = v57;
        uint64_t v66 = v60;
        uint64_t v67 = v58;
        uint64_t v68 = v59;
        type metadata accessor for MergeStateMachine.NextAction();
      }
      else
      {
        uint64_t v54 = v36;
        uint64_t v45 = *(void (**)(char *, char *, uint64_t))(v38 + 32);
        v45(v17, v11, AssociatedTypeWitness);
        v37(v3, v24);
        uint64_t v46 = v54;
        *uint64_t v3 = v62;
        v3[1] = v46;
        swift_storeEnumTagMultiPayload();
        v45((char *)v61, v17, AssociatedTypeWitness);
LABEL_11:
        sub_21CA5EEBC((uint64_t *)&unk_267C96F50);
        sub_21CB890A0();
        swift_storeEnumTagMultiPayload();
        uint64_t v63 = v6;
        uint64_t v64 = v56;
        uint64_t v65 = v57;
        uint64_t v66 = v60;
        uint64_t v67 = v58;
        uint64_t v68 = v59;
        type metadata accessor for MergeStateMachine.NextAction();
      }
      return swift_storeEnumTagMultiPayload();
    case 3u:
      uint64_t v63 = v6;
      uint64_t v64 = v56;
      uint64_t v65 = v57;
      uint64_t v66 = v60;
      uint64_t v67 = v58;
      uint64_t v68 = v59;
      type metadata accessor for MergeStateMachine.NextAction();
      return swift_storeEnumTagMultiPayload();
    case 4u:
      __break(1u);
LABEL_14:
      __break(1u);
      JUMPOUT(0x21CADDE78);
    default:
      uint64_t v28 = v57;
      uint64_t v29 = sub_21CB889A0();
      uint64_t v30 = v56;
      TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
      uint64_t v32 = (char *)v27 + *(int *)(TupleTypeMetadata3 + 48);
      uint64_t v33 = (char *)v27 + *(int *)(TupleTypeMetadata3 + 64);
      long long v34 = (char *)v61;
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v6 - 8) + 32))(v61, v27, v6);
      uint64_t v35 = swift_getTupleTypeMetadata3();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 32))(&v34[*(int *)(v35 + 48)], v32, v30);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 32))(&v34[*(int *)(v35 + 64)], v33, v29);
      uint64_t v63 = v6;
      uint64_t v64 = v30;
      uint64_t v65 = v28;
      uint64_t v66 = v60;
      uint64_t v67 = v58;
      uint64_t v68 = v59;
      type metadata accessor for MergeStateMachine.NextAction();
      return swift_storeEnumTagMultiPayload();
  }
}

uint64_t sub_21CADDE8C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v23 = v5;
  uint64_t v24 = v6;
  long long v7 = *(_OWORD *)(a2 + 48);
  long long v22 = *(_OWORD *)(a2 + 32);
  long long v25 = v22;
  long long v26 = v7;
  uint64_t v8 = type metadata accessor for MergeStateMachine.State();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v22 - v10;
  (*(void (**)(char *, void *, uint64_t))(v9 + 16))((char *)&v22 - v10, v3, v8);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload != 1)
  {
    switch(EnumCaseMultiPayload)
    {
      case 1:
        goto LABEL_10;
      case 2:
        goto LABEL_8;
      case 3:
        goto LABEL_6;
      case 4:
        goto LABEL_7;
      default:
        uint64_t v18 = sub_21CB889A0();
        TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
        uint64_t v20 = &v11[*(int *)(TupleTypeMetadata3 + 48)];
        (*(void (**)(char *, uint64_t))(*(void *)(v18 - 8) + 8))(&v11[*(int *)(TupleTypeMetadata3 + 64)], v18);
        (*(void (**)(char *, uint64_t))(*(void *)(v6 - 8) + 8))(v20, v6);
        (*(void (**)(char *, uint64_t))(*(void *)(v5 - 8) + 8))(v11, v5);
LABEL_6:
        __break(1u);
LABEL_7:
        __break(1u);
LABEL_8:
        uint64_t v21 = (void *)*((void *)v11 + 1);
        swift_release();

        __break(1u);
        break;
    }
LABEL_9:
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
LABEL_10:
    __break(1u);
    JUMPOUT(0x21CADE110);
  }
  uint64_t v14 = *(void *)v11;
  uint64_t v13 = *((void *)v11 + 1);
  uint64_t v15 = *((void *)v11 + 2);
  if (*((void *)v11 + 4)) {
    goto LABEL_9;
  }
  uint64_t v16 = *((void *)v11 + 3);
  (*(void (**)(void *, uint64_t))(v9 + 8))(v3, v8);
  *uint64_t v3 = v14;
  v3[1] = v13;
  v3[2] = MEMORY[0x263F8EE78];
  v3[3] = v16;
  v3[4] = a1;
  swift_storeEnumTagMultiPayload();
  return v15;
}

uint64_t sub_21CADE124()
{
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 136);
  uint64_t v2 = type metadata accessor for MergeStateMachine();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t sub_21CADE1DC()
{
  sub_21CADE124();

  return swift_deallocClassInstance();
}

void sub_21CADE234()
{
  uint64_t v1 = *v0;
  uint64_t v2 = (os_unfair_lock_s *)v0[2];
  long long v3 = *(_OWORD *)(*v0 + 96);
  v9[0] = *(_OWORD *)(*v0 + 80);
  v9[1] = v3;
  void v9[2] = *(_OWORD *)(v1 + 112);
  type metadata accessor for MergeStateMachine.IteratorDeinitializedAction();
  os_unfair_lock_lock(v2);
  sub_21CAEB7F0((uint64_t *)v9);
  os_unfair_lock_unlock(v2);
  uint64_t v4 = *(void *)&v9[0];
  if (*(void *)&v9[0])
  {
    uint64_t v5 = *(void *)(*((void *)&v9[0] + 1) + 16);
    if (v5)
    {
      sub_21CB88600();
      sub_21CAE95D0();
      swift_retain();
      swift_bridgeObjectRetain();
      uint64_t v6 = 0;
      do
      {
        ++v6;
        uint64_t v7 = swift_allocError();
        sub_21CB881C0();
        sub_21CA57E34((uint64_t *)&unk_267C96F50);
        swift_allocError();
        *uint64_t v8 = v7;
        swift_continuation_throwingResumeWithError();
      }
      while (v5 != v6);
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_retain();
    }
    sub_21CB88670();
    sub_21CAEB824(v4);
    swift_release();
  }
}

uint64_t sub_21CADE3D0@<X0>(uint64_t *a1@<X8>)
{
  swift_beginAccess();
  uint64_t v2 = type metadata accessor for MergeStateMachine();
  uint64_t result = sub_21CADC160(v2);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_21CADE488(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_allocError();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a4 - 8) + 32))(v6, a1, a4);

  return swift_continuation_throwingResumeWithError();
}

uint64_t sub_21CADE51C(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  v2[4] = *v1;
  return MEMORY[0x270FA2498](sub_21CADE564, 0, 0);
}

uint64_t sub_21CADE564()
{
  uint64_t v1 = (void *)swift_task_alloc();
  v0[5] = v1;
  swift_getAssociatedTypeWitness();
  uint64_t v2 = sub_21CB889A0();
  *uint64_t v1 = v0;
  v1[1] = sub_21CADE664;
  uint64_t v3 = v0[2];
  uint64_t v4 = v0[3];
  return MEMORY[0x270FA2338](v3, &unk_267C96120, v4, sub_21CAE9594, v4, 0, 0, v2);
}

uint64_t sub_21CADE664()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 48) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x270FA2498](sub_21CADE798, 0, 0);
  }
  else
  {
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_21CADE798()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21CADE7B0(uint64_t a1, uint64_t a2)
{
  v2[20] = a1;
  v2[21] = a2;
  uint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void *)(*(void *)a2 + 104);
  v2[22] = v4;
  uint64_t v5 = v3[10];
  v2[23] = v5;
  v2[24] = swift_getAssociatedTypeWitness();
  sub_21CA5EEBC((uint64_t *)&unk_267C96F50);
  uint64_t v6 = sub_21CB890A0();
  v2[25] = v6;
  v2[26] = *(void *)(v6 - 8);
  v2[27] = swift_task_alloc();
  uint64_t v7 = v3[12];
  v2[28] = v7;
  uint64_t v8 = sub_21CB889A0();
  v2[29] = v8;
  v2[30] = *(void *)(v8 - 8);
  v2[31] = swift_task_alloc();
  uint64_t v9 = v3[11];
  v2[32] = v9;
  v2[33] = *(void *)(v9 - 8);
  v2[34] = swift_task_alloc();
  v2[35] = *(void *)(v5 - 8);
  v2[36] = swift_task_alloc();
  uint64_t v10 = v3[14];
  v2[37] = v10;
  uint64_t v11 = v3[15];
  v2[2] = v5;
  v2[38] = v11;
  v2[3] = v9;
  v2[4] = v7;
  v2[5] = v4;
  v2[6] = v10;
  v2[7] = v11;
  uint64_t Action = type metadata accessor for MergeStateMachine.NextAction();
  v2[39] = Action;
  v2[40] = *(void *)(Action - 8);
  v2[41] = swift_task_alloc();
  v2[42] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_21CADEAE4, 0, 0);
}

uint64_t sub_21CADEAE4()
{
  uint64_t v1 = *(uint64_t **)(v0 + 336);
  uint64_t v47 = *(void *)(v0 + 328);
  uint64_t v2 = *(void *)(v0 + 312);
  uint64_t v3 = *(void *)(v0 + 320);
  uint64_t v4 = *(void *)(v0 + 256);
  uint64_t v5 = *(void *)(v0 + 224);
  uint64_t v7 = *(void *)(v0 + 176);
  uint64_t v6 = *(void *)(v0 + 184);
  uint64_t v8 = *(void **)(v0 + 168);
  long long v45 = *(_OWORD *)(v0 + 296);
  lock = (os_unfair_lock_s *)v8[2];
  os_unfair_lock_lock(lock);
  uint64_t v9 = (char *)v8 + *(void *)(*v8 + 136);
  swift_beginAccess();
  *(void *)(v0 + 64) = v6;
  *(void *)(v0 + 72) = v4;
  *(void *)(v0 + 80) = v5;
  *(void *)(v0 + 88) = v7;
  *(_OWORD *)(v0 + 96) = v45;
  uint64_t v10 = (void *)type metadata accessor for MergeStateMachine();
  sub_21CADD6FC(v10, v1);
  swift_endAccess();
  (*(void (**)(uint64_t, uint64_t *, uint64_t))(v3 + 16))(v47, v1, v2);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v25 = *(void *)(v0 + 200);
      (*(void (**)(void, void, uint64_t))(*(void *)(v0 + 208) + 32))(*(void *)(v0 + 216), *(void *)(v0 + 328), v25);
      os_unfair_lock_unlock(lock);
      uint64_t WitnessTable = swift_getWitnessTable();
      (*(void (**)(uint64_t, uint64_t))(WitnessTable + 16))(v25, WitnessTable);
      uint64_t v35 = *(void *)(v0 + 336);
      uint64_t v36 = *(void *)(v0 + 312);
      uint64_t v37 = *(void *)(v0 + 320);
      uint64_t v38 = *(void *)(v0 + 192);
      uint64_t v39 = *(void *)(v0 + 160);
      (*(void (**)(void, void))(*(void *)(v0 + 208) + 8))(*(void *)(v0 + 216), *(void *)(v0 + 200));
      (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v35, v36);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v38 - 8) + 56))(v39, 0, 1, v38);
      goto LABEL_10;
    case 2u:
      os_unfair_lock_unlock(lock);
      swift_willThrow();
      (*(void (**)(void, void))(*(void *)(v0 + 320) + 8))(*(void *)(v0 + 336), *(void *)(v0 + 312));
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      long long v27 = *(uint64_t (**)(void))(v0 + 8);
      goto LABEL_11;
    case 3u:
      uint64_t v28 = *(void *)(v0 + 336);
      uint64_t v30 = *(void *)(v0 + 312);
      uint64_t v29 = *(void *)(v0 + 320);
      uint64_t v31 = *(void *)(v0 + 192);
      uint64_t v32 = *(void *)(v0 + 160);
      os_unfair_lock_unlock(lock);
      (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v28, v30);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v32, 1, 1, v31);
LABEL_10:
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      long long v27 = *(uint64_t (**)(void))(v0 + 8);
LABEL_11:
      return v27();
    case 4u:
      uint64_t v48 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_267C96128
                                                                                + dword_267C96128);
      uint64_t v33 = (void *)swift_task_alloc();
      *(void *)(v0 + 360) = v33;
      sub_21CB889A0();
      void *v33 = v0;
      v33[1] = sub_21CADF304;
      uint64_t v22 = *(void *)(v0 + 160);
      uint64_t v23 = *(void *)(v0 + 168);
      uint64_t v24 = v48;
      goto LABEL_7;
    default:
      uint64_t v11 = *(void *)(v0 + 328);
      uint64_t v12 = *(void *)(v0 + 280);
      uint64_t v13 = *(void *)(v0 + 288);
      uint64_t v14 = *(void *)(v0 + 264);
      uint64_t v15 = *(void *)(v0 + 256);
      uint64_t v42 = *(void *)(v0 + 272);
      uint64_t v43 = *(void *)(v0 + 248);
      uint64_t v16 = *(void *)(v0 + 240);
      uint64_t v41 = *(void *)(v0 + 232);
      uint64_t v17 = *(void *)(v0 + 184);
      TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
      uint64_t v19 = (uint64_t)v9;
      uint64_t v20 = v11 + *(int *)(TupleTypeMetadata3 + 48);
      uint64_t v40 = v11 + *(int *)(TupleTypeMetadata3 + 64);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 32))(v13, v11, v17);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 32))(v42, v20, v15);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 32))(v43, v40, v41);
      swift_beginAccess();
      sub_21CADF6D0(v19, v13, v42, v43);
      swift_endAccess();
      uint64_t v46 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_267C96128
                                                                                + dword_267C96128);
      uint64_t v21 = (void *)swift_task_alloc();
      *(void *)(v0 + 344) = v21;
      sub_21CB889A0();
      *uint64_t v21 = v0;
      v21[1] = sub_21CADF0C0;
      uint64_t v22 = *(void *)(v0 + 160);
      uint64_t v23 = *(void *)(v0 + 168);
      uint64_t v24 = v46;
LABEL_7:
      return v24(v22, 0, 0, (uint64_t)sub_21CAE9628, v23);
  }
}

uint64_t sub_21CADF0C0()
{
  *(void *)(*(void *)v1 + 352) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_21CADF4DC;
  }
  else {
    uint64_t v2 = sub_21CADF1D4;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_21CADF1D4()
{
  uint64_t v1 = v0[42];
  uint64_t v2 = v0[39];
  uint64_t v3 = v0[40];
  uint64_t v5 = v0[35];
  uint64_t v4 = v0[36];
  uint64_t v7 = v0[33];
  uint64_t v6 = v0[34];
  uint64_t v8 = v0[32];
  uint64_t v9 = v0[23];
  (*(void (**)(void, void))(v0[30] + 8))(v0[31], v0[29]);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v9);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

uint64_t sub_21CADF304()
{
  *(void *)(*(void *)v1 + 368) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_21CADF600;
  }
  else {
    uint64_t v2 = sub_21CADF418;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_21CADF418()
{
  (*(void (**)(void, void))(v0[40] + 8))(v0[42], v0[39]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_21CADF4DC()
{
  uint64_t v2 = v0[35];
  uint64_t v1 = v0[36];
  uint64_t v4 = v0[33];
  uint64_t v3 = v0[34];
  uint64_t v5 = v0[32];
  uint64_t v6 = v0[23];
  (*(void (**)(void, void))(v0[30] + 8))(v0[31], v0[29]);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v6);
  (*(void (**)(void, void))(v0[40] + 8))(v0[42], v0[39]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_21CADF600()
{
  (*(void (**)(void, void))(v0[40] + 8))(v0[42], v0[39]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_21CADF6D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v46 = a3;
  uint64_t v47 = a4;
  uint64_t v44 = a2;
  uint64_t v48 = a1;
  uint64_t v6 = *(void **)v4;
  uint64_t v53 = *(void *)(*(void *)v4 + 96);
  uint64_t v52 = sub_21CB889A0();
  uint64_t v50 = *(void *)(v52 - 8);
  uint64_t v45 = *(void *)(v50 + 64);
  uint64_t v7 = MEMORY[0x270FA5388](v52);
  uint64_t v51 = (char *)&v39 - v8;
  uint64_t v9 = v6[11];
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  uint64_t v12 = MEMORY[0x270FA5388](v7);
  uint64_t v14 = (char *)&v39 - v13;
  uint64_t v42 = (char *)&v39 - v13;
  uint64_t v49 = v6[10];
  uint64_t v15 = *(void *)(v49 - 8);
  uint64_t v16 = *(void *)(v15 + 64);
  MEMORY[0x270FA5388](v12);
  uint64_t v18 = (char *)&v39 - v17;
  uint64_t v41 = (char *)&v39 - v17;
  uint64_t v19 = sub_21CA57E34(&qword_267C95028);
  MEMORY[0x270FA5388](v19 - 8);
  uint64_t v21 = (char *)&v39 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = v21;
  uint64_t v22 = sub_21CB88640();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v21, 1, 1, v22);
  uint64_t v23 = v49;
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v18, v44, v49);
  uint64_t v24 = v10;
  uint64_t v40 = v10;
  uint64_t v25 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  uint64_t v26 = v9;
  v25(v14, v46, v9);
  uint64_t v27 = v50;
  (*(void (**)(char *, uint64_t, uint64_t))(v50 + 16))(v51, v47, v52);
  unint64_t v28 = (*(unsigned __int8 *)(v15 + 80) + 88) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  unint64_t v29 = (v16 + *(unsigned __int8 *)(v24 + 80) + v28) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
  unint64_t v30 = (v11 + *(unsigned __int8 *)(v27 + 80) + v29) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80);
  uint64_t v31 = (char *)swift_allocObject();
  *((void *)v31 + 2) = 0;
  *((void *)v31 + 3) = 0;
  uint64_t v32 = v23;
  *((void *)v31 + 4) = v23;
  *((void *)v31 + 5) = v26;
  *((void *)v31 + 6) = v53;
  uint64_t v33 = v6[13];
  *((void *)v31 + 7) = v33;
  uint64_t v34 = v6[14];
  *((void *)v31 + 8) = v34;
  uint64_t v35 = v6[15];
  *((void *)v31 + 9) = v35;
  *((void *)v31 + 10) = v5;
  (*(void (**)(char *, char *, uint64_t))(v15 + 32))(&v31[v28], v41, v32);
  (*(void (**)(char *, char *, uint64_t))(v40 + 32))(&v31[v29], v42, v26);
  (*(void (**)(char *, char *, uint64_t))(v50 + 32))(&v31[v30], v51, v52);
  swift_retain();
  uint64_t v36 = sub_21CB09F98((uint64_t)v43, (uint64_t)&unk_267C96138, (uint64_t)v31);
  uint64_t v54 = v49;
  uint64_t v55 = v26;
  uint64_t v56 = v53;
  uint64_t v57 = v33;
  uint64_t v58 = v34;
  uint64_t v59 = v35;
  uint64_t v37 = type metadata accessor for MergeStateMachine();
  sub_21CADC400(v36, v37);
  return swift_release();
}

uint64_t sub_21CADFB24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[11] = a4;
  v5[12] = a5;
  v5[10] = a1;
  if (a2)
  {
    swift_getObjectType();
    uint64_t v6 = sub_21CB885F0();
    uint64_t v8 = v7;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v8 = 0;
  }
  return MEMORY[0x270FA2498](sub_21CADFBB8, v6, v8);
}

uint64_t sub_21CADFBB8()
{
  uint64_t v1 = (void (*)(uint64_t))v0[11];
  uint64_t v2 = v0[10];
  v0[2] = v0;
  v0[7] = v2;
  v0[3] = sub_21CADFC60;
  uint64_t v3 = swift_continuation_init();
  v1(v3);
  return MEMORY[0x270FA23F0](v0 + 2);
}

uint64_t sub_21CADFC60()
{
  uint64_t v1 = *v0;
  if (*(void *)(*v0 + 48)) {
    swift_willThrow();
  }
  uint64_t v2 = *(uint64_t (**)(void))(v1 + 8);
  return v2();
}

uint64_t sub_21CADFD68(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t v4 = type metadata accessor for MergeStateMachine();
  uint64_t v5 = sub_21CADDE8C(a1, v4);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(a2 + 16));
  uint64_t v6 = *(void *)(v5 + 16);
  if (v6)
  {
    swift_bridgeObjectRetain();
    for (uint64_t i = 0; i != v6; ++i)
      swift_continuation_throwingResume();
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

void sub_21CADFE68(void *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *(void *)(*a1 + 104);
  unint64_t v4 = *(void *)(*a1 + 80);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v6 = sub_21CB889A0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v21 - v8;
  uint64_t v10 = (os_unfair_lock_s *)a1[2];
  unint64_t v26 = v4;
  long long v27 = *(_OWORD *)(v2 + 88);
  uint64_t v28 = v3;
  long long v29 = *(_OWORD *)(v2 + 112);
  type metadata accessor for MergeStateMachine.CancelledAction();
  os_unfair_lock_lock(v10);
  sub_21CAE959C((uint64_t *)&v26);
  os_unfair_lock_unlock(v10);
  unint64_t v11 = v26;
  if (v26 >> 62)
  {
    if (v26 >> 62 == 1)
    {
      uint64_t v12 = v26 & 0x3FFFFFFFFFFFFFFFLL;
      uint64_t v13 = *(void *)(v27 + 16);
      if (v13)
      {
        unint64_t v25 = v26;
        sub_21CB88600();
        sub_21CAE95D0();
        uint64_t v24 = v12;
        swift_retain();
        swift_bridgeObjectRetain();
        uint64_t v14 = 0;
        do
        {
          ++v14;
          uint64_t v15 = swift_allocError();
          sub_21CB881C0();
          sub_21CA57E34((uint64_t *)&unk_267C96F50);
          swift_allocError();
          *uint64_t v16 = v15;
          swift_continuation_throwingResumeWithError();
        }
        while (v13 != v14);
        swift_bridgeObjectRelease();
        unint64_t v11 = v25;
      }
      else
      {
        swift_retain();
      }
      sub_21CB88670();
      sub_21CAB5A54(v11);
      swift_release();
    }
  }
  else
  {
    uint64_t v17 = *(void *)(*((void *)&v27 + 1) + 16);
    if (v17)
    {
      uint64_t v21 = v9;
      uint64_t v22 = AssociatedTypeWitness;
      uint64_t v23 = v7;
      uint64_t v24 = v6;
      unint64_t v25 = v26;
      sub_21CB88600();
      sub_21CAE95D0();
      swift_retain();
      swift_bridgeObjectRetain();
      uint64_t v18 = 0;
      do
      {
        ++v18;
        uint64_t v19 = swift_allocError();
        sub_21CB881C0();
        sub_21CA57E34((uint64_t *)&unk_267C96F50);
        swift_allocError();
        *uint64_t v20 = v19;
        swift_continuation_throwingResumeWithError();
      }
      while (v17 != v18);
      swift_bridgeObjectRelease();
      uint64_t v6 = v24;
      unint64_t v11 = v25;
      uint64_t AssociatedTypeWitness = v22;
      uint64_t v7 = v23;
      uint64_t v9 = v21;
    }
    else
    {
      swift_retain();
    }
    sub_21CB88670();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 56))(v9, 1, 1, AssociatedTypeWitness);
    (*(void (**)(void, char *, uint64_t))(v7 + 32))(*(void *)(*(void *)(v11 + 64) + 40), v9, v6);
    swift_continuation_throwingResume();
    swift_release();
    sub_21CAB5A54(v11);
  }
}

uint64_t sub_21CAE0278@<X0>(uint64_t *a1@<X8>)
{
  swift_beginAccess();
  uint64_t v2 = type metadata accessor for MergeStateMachine();
  uint64_t result = sub_21CADD408(v2);
  *a1 = result;
  a1[1] = v4;
  a1[2] = v5;
  return result;
}

uint64_t sub_21CAE0334(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[5] = a6;
  v7[6] = a7;
  v7[3] = a4;
  v7[4] = a5;
  v7[2] = a1;
  return MEMORY[0x270FA2498](sub_21CAE035C, 0, 0);
}

uint64_t sub_21CAE035C()
{
  uint64_t v1 = swift_task_alloc();
  *(void *)(v0 + 56) = v1;
  long long v2 = *(_OWORD *)(v0 + 40);
  *(_OWORD *)(v1 + 16) = *(_OWORD *)(v0 + 24);
  *(_OWORD *)(v1 + 32) = v2;
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 64) = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_21CAAFFF8;
  uint64_t v4 = *(void *)(v0 + 16);
  uint64_t v5 = MEMORY[0x263F8EE60] + 8;
  uint64_t v6 = MEMORY[0x263F8EE60] + 8;
  uint64_t v7 = MEMORY[0x263F8EE60] + 8;
  return MEMORY[0x270FA22B8](v4, v5, v6, 0, 0, &unk_267C96148, v1, v7);
}

uint64_t sub_21CAE044C(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[16] = a5;
  v6[17] = a6;
  v6[14] = a3;
  v6[15] = a4;
  v6[13] = a2;
  uint64_t v7 = *a3;
  v6[18] = *a3;
  uint64_t v8 = *(void *)(v7 + 96);
  v6[19] = v8;
  uint64_t v9 = sub_21CB889A0();
  v6[20] = v9;
  v6[21] = *(void *)(v9 - 8);
  v6[22] = swift_task_alloc();
  v6[23] = *(void *)(v8 - 8);
  v6[24] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_21CAE05AC, 0, 0);
}

uint64_t sub_21CAE05AC()
{
  uint64_t v1 = v0[22];
  uint64_t v2 = v0[23];
  uint64_t v3 = v0[20];
  uint64_t v4 = v0[21];
  uint64_t v5 = (void *)v0[18];
  uint64_t v23 = v0[19];
  uint64_t v7 = v0[16];
  uint64_t v6 = v0[17];
  uint64_t v8 = v0[15];
  uint64_t v9 = v0[13];
  uint64_t v10 = v5[10];
  v0[25] = v10;
  uint64_t v11 = v5[13];
  v0[26] = v11;
  sub_21CAE0F08(v8, v9, v10, v11);
  uint64_t v12 = v5[11];
  v0[27] = v12;
  uint64_t v13 = v5[14];
  v0[28] = v13;
  sub_21CAE0F08(v7, v9, v12, v13);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v1, v6, v3);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v1, 1, v23) == 1)
  {
    (*(void (**)(void, void))(v0[21] + 8))(v0[22], v0[20]);
  }
  else
  {
    uint64_t v15 = v0[23];
    uint64_t v14 = v0[24];
    uint64_t v17 = v0[18];
    uint64_t v16 = v0[19];
    uint64_t v18 = v0[13];
    (*(void (**)(uint64_t, void, uint64_t))(v15 + 32))(v14, v0[22], v16);
    sub_21CAE0F08(v14, v18, v16, *(void *)(v17 + 120));
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v14, v16);
  }
  v0[29] = sub_21CA57E34((uint64_t *)&unk_267C96F50);
  if (sub_21CB886C0())
  {
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v19 = (uint64_t (*)(void))v0[1];
    return v19();
  }
  else
  {
    uint64_t v21 = (void *)swift_task_alloc();
    v0[30] = v21;
    uint64_t v22 = sub_21CA57E34(&qword_267C958D0);
    *uint64_t v21 = v0;
    v21[1] = sub_21CAE081C;
    return MEMORY[0x270FA2048](v0 + 32, 0, 0, v22);
  }
}

uint64_t sub_21CAE081C()
{
  *(void *)(*(void *)v1 + 248) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_21CAE0A64;
  }
  else {
    uint64_t v2 = sub_21CAE0930;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_21CAE0930()
{
  if (sub_21CB886C0())
  {
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
    return v1();
  }
  else
  {
    uint64_t v3 = (void *)swift_task_alloc();
    *(void *)(v0 + 240) = v3;
    uint64_t v4 = sub_21CA57E34(&qword_267C958D0);
    *uint64_t v3 = v0;
    v3[1] = sub_21CAE081C;
    return MEMORY[0x270FA2048](v0 + 256, 0, 0, v4);
  }
}

uint64_t sub_21CAE0A64()
{
  uint64_t v1 = v0[31];
  uint64_t v2 = v0[27];
  uint64_t v36 = v0[28];
  uint64_t v3 = v0[25];
  uint64_t v4 = v0[26];
  uint64_t v6 = v0[18];
  uint64_t v5 = v0[19];
  uint64_t v7 = v0[14];
  uint64_t v8 = *(os_unfair_lock_s **)(v7 + 16);
  uint64_t v9 = swift_task_alloc();
  *(void *)(v9 + 16) = v7;
  *(void *)(v9 + 24) = v1;
  v0[2] = v3;
  uint64_t v10 = v0 + 2;
  uint64_t v11 = *(void *)(v6 + 120);
  v0[3] = v2;
  v0[4] = v5;
  v0[5] = v4;
  v0[6] = v36;
  v0[7] = v11;
  type metadata accessor for MergeStateMachine.UpstreamThrewAction();
  os_unfair_lock_lock(v8);
  sub_21CAE9AE8(v0 + 8);
  os_unfair_lock_unlock(v8);
  swift_task_dealloc();
  uint64_t v12 = v0[8];
  uint64_t v13 = (void *)v0[9];
  unint64_t v14 = v0[10];
  uint64_t v37 = v13;
  if (v14 >> 62)
  {
    if (v14 >> 62 == 1)
    {
      unint64_t v35 = v0[10];
      uint64_t v15 = *(void *)(v0[11] + 16);
      if (v15)
      {
        uint64_t v33 = v0[8];
        uint64_t v16 = v13;
        sub_21CB88600();
        sub_21CAE95D0();
        swift_retain();
        swift_bridgeObjectRetain();
        uint64_t v17 = 0;
        do
        {
          ++v17;
          uint64_t v18 = swift_allocError();
          sub_21CB881C0();
          swift_allocError();
          *uint64_t v19 = v18;
          swift_continuation_throwingResumeWithError();
        }
        while (v15 != v17);
        swift_bridgeObjectRelease();
        uint64_t v12 = v33;
        uint64_t v20 = v13;
      }
      else
      {
        unint64_t v25 = v13;
        swift_retain();
        uint64_t v20 = v13;
      }
      uint64_t v26 = v0[29];
      sub_21CB88670();
      v0[12] = v20;
      swift_getAssociatedTypeWitness();
      uint64_t v27 = sub_21CB889A0();
      sub_21CADE488((uint64_t)(v0 + 12), v12, v27, v26);
      swift_release();
      uint64_t v13 = v20;
      unint64_t v14 = v35;
      uint64_t v10 = v0 + 2;
    }
  }
  else
  {
    uint64_t v21 = v13[2];
    if (v21)
    {
      sub_21CB88600();
      sub_21CAE95D0();
      int v34 = v12;
      swift_retain();
      swift_bridgeObjectRetain();
      uint64_t v22 = 0;
      do
      {
        ++v22;
        uint64_t v23 = swift_allocError();
        sub_21CB881C0();
        swift_allocError();
        uint64_t *v24 = v23;
        uint64_t v13 = v37;
        swift_continuation_throwingResumeWithError();
      }
      while (v21 != v22);
      swift_bridgeObjectRelease();
      LODWORD(v12) = v34;
    }
    else
    {
      swift_retain();
    }
    sub_21CB88670();
    swift_release();
    uint64_t v10 = v0 + 2;
  }
  uint64_t v28 = (void *)v0[31];
  sub_21CB886D0();
  sub_21CAB62E4(v12, v13, v14);

  if (sub_21CB886C0())
  {
    swift_task_dealloc();
    swift_task_dealloc();
    long long v29 = (uint64_t (*)(void))v0[1];
    return v29();
  }
  else
  {
    uint64_t v31 = (void *)swift_task_alloc();
    v0[30] = v31;
    uint64_t v32 = sub_21CA57E34(&qword_267C958D0);
    *uint64_t v31 = v0;
    v31[1] = sub_21CAE081C;
    return MEMORY[0x270FA2048](v10 + 30, 0, 0, v32);
  }
}

uint64_t sub_21CAE0F08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  v19[0] = a4;
  v19[1] = a2;
  uint64_t v8 = *v4;
  uint64_t v9 = *v4;
  uint64_t v10 = *(void *)(a3 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  MEMORY[0x270FA5388](a1);
  uint64_t v12 = sub_21CA57E34(&qword_267C95028);
  MEMORY[0x270FA5388](v12 - 8);
  unint64_t v14 = (char *)v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_21CB88640();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v14, 1, 1, v15);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), a1, a3);
  unint64_t v16 = (*(unsigned __int8 *)(v10 + 80) + 96) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = 0;
  *(void *)(v17 + 24) = 0;
  *(_OWORD *)(v17 + 32) = *(_OWORD *)(v9 + 80);
  *(void *)(v17 + 48) = *(void *)(v8 + 96);
  *(void *)(v17 + 56) = a3;
  *(_OWORD *)(v17 + 64) = *(_OWORD *)(v9 + 104);
  *(void *)(v17 + 80) = *(void *)(v8 + 120);
  *(void *)(v17 + 88) = v19[0];
  (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v17 + v16, (char *)v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), a3);
  *(void *)(v17 + ((v11 + v16 + 7) & 0xFFFFFFFFFFFFFFF8)) = v5;
  swift_retain();
  sub_21CAE2624((uint64_t)v14, (uint64_t)&unk_267C96158, v17);
  return sub_21CAE9D30((uint64_t)v14);
}

uint64_t sub_21CAE116C@<X0>(void *a1@<X1>, uint64_t *a2@<X8>)
{
  swift_beginAccess();
  uint64_t v4 = type metadata accessor for MergeStateMachine();
  uint64_t v5 = sub_21CADD168(a1, v4);
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  uint64_t v11 = v10;
  uint64_t result = swift_endAccess();
  *a2 = v5;
  a2[1] = v7;
  a2[2] = v9;
  a2[3] = v11;
  return result;
}

uint64_t sub_21CAE1254(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[27] = a6;
  v7[28] = a7;
  v7[25] = a4;
  v7[26] = a5;
  uint64_t v9 = *(void **)a5;
  uint64_t v10 = *(void *)(*(void *)a5 + 80);
  v7[29] = v10;
  uint64_t v11 = v9[11];
  v7[30] = v11;
  uint64_t v12 = v9[12];
  v7[31] = v12;
  uint64_t v13 = v9[13];
  unsigned char v7[32] = v13;
  uint64_t v14 = v9[14];
  v7[33] = v14;
  uint64_t v15 = v9[15];
  v7[10] = v10;
  v7[34] = v15;
  v7[11] = v11;
  v7[12] = v12;
  v7[13] = v13;
  v7[14] = v14;
  v7[15] = v15;
  uint64_t v16 = type metadata accessor for MergeStateMachine.ElementProducedAction();
  v7[35] = v16;
  v7[36] = *(void *)(v16 - 8);
  v7[37] = swift_task_alloc();
  v7[38] = swift_task_alloc();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v7[39] = AssociatedTypeWitness;
  uint64_t v18 = sub_21CB889A0();
  v7[40] = v18;
  uint64_t v19 = *(void *)(v18 - 8);
  v7[41] = v19;
  v7[42] = v19;
  v7[43] = swift_task_alloc();
  v7[44] = swift_task_alloc();
  v7[45] = *(void *)(AssociatedTypeWitness - 8);
  v7[46] = swift_task_alloc();
  v7[47] = swift_task_alloc();
  v7[48] = *(void *)(a6 - 8);
  v7[49] = swift_task_alloc();
  uint64_t v20 = swift_getAssociatedTypeWitness();
  v7[50] = v20;
  v7[51] = *(void *)(v20 - 8);
  v7[52] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_21CAE15A8, 0, 0);
}

uint64_t sub_21CAE15A8()
{
  (*(void (**)(void, void, void))(v0[48] + 16))(v0[49], v0[25], v0[27]);
  sub_21CB886E0();
  return MEMORY[0x270FA2498](sub_21CAE164C, 0, 0);
}

uint64_t sub_21CAE164C()
{
  uint64_t v1 = (void *)v0[26];
  v0[2] = v0;
  v0[3] = sub_21CAE16F8;
  uint64_t v2 = swift_continuation_init();
  sub_21CAE22AC(v2, v1);
  return MEMORY[0x270FA23F0](v0 + 2);
}

uint64_t sub_21CAE16F8()
{
  uint64_t v1 = *(void **)v0;
  uint64_t v2 = *(void **)v0;
  uint64_t v3 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 424) = v3;
  if (v3)
  {
    swift_willThrow();
    return MEMORY[0x270FA2498](sub_21CAE19C0, 0, 0);
  }
  else
  {
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    uint64_t v5 = (void *)swift_task_alloc();
    v1[54] = v5;
    *uint64_t v5 = v2;
    v5[1] = sub_21CAE18AC;
    uint64_t v6 = v1[50];
    uint64_t v7 = v1[44];
    return MEMORY[0x270FA1E80](v7, v6, AssociatedConformanceWitness);
  }
}

uint64_t sub_21CAE18AC()
{
  *(void *)(*(void *)v1 + 440) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_21CAE21C8;
  }
  else {
    uint64_t v2 = sub_21CAE1AA4;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_21CAE19C0()
{
  (*(void (**)(void, void))(v0[51] + 8))(v0[52], v0[50]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_21CAE1AA4()
{
  uint64_t v1 = *(char **)(v0 + 352);
  uint64_t v2 = *(void *)(v0 + 360);
  uint64_t v3 = *(void *)(v0 + 312);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v1, 1, v3) == 1)
  {
    uint64_t v4 = *(void *)(v0 + 208);
    long long v47 = *(_OWORD *)(v0 + 216);
    long long v50 = *(_OWORD *)(v0 + 232);
    long long v53 = *(_OWORD *)(v0 + 264);
    long long v56 = *(_OWORD *)(v0 + 248);
    (*(void (**)(char *, void))(*(void *)(v0 + 336) + 8))(v1, *(void *)(v0 + 320));
    uint64_t v5 = *(os_unfair_lock_s **)(v4 + 16);
    uint64_t v6 = swift_task_alloc();
    *(_OWORD *)(v6 + 16) = v47;
    *(void *)(v6 + 32) = v4;
    *(_OWORD *)(v0 + 128) = v50;
    *(_OWORD *)(v0 + 144) = v56;
    *(_OWORD *)(v0 + 160) = v53;
    type metadata accessor for MergeStateMachine.UpstreamFinishedAction();
    os_unfair_lock_lock(v5);
    sub_21CAE9DF8((uint64_t *)(v0 + 176));
    os_unfair_lock_unlock(v5);
    swift_task_dealloc();
    unint64_t v7 = *(void *)(v0 + 176);
    uint64_t v8 = *(void *)(v0 + 192);
    if (v7 >> 62)
    {
      if (v7 >> 62 != 1)
      {
LABEL_23:
        (*(void (**)(void, void))(*(void *)(v0 + 408) + 8))(*(void *)(v0 + 416), *(void *)(v0 + 400));
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        uint64_t v44 = *(uint64_t (**)(void))(v0 + 8);
        return v44();
      }
      uint64_t v9 = *(void *)(v8 + 16);
      if (v9)
      {
        sub_21CB88600();
        sub_21CAE95D0();
        swift_retain();
        swift_bridgeObjectRetain();
        uint64_t v10 = 0;
        do
        {
          ++v10;
          uint64_t v11 = v8;
          uint64_t v12 = swift_allocError();
          sub_21CB881C0();
          sub_21CA57E34((uint64_t *)&unk_267C96F50);
          swift_allocError();
          *uint64_t v13 = v12;
          uint64_t v8 = v11;
          swift_continuation_throwingResumeWithError();
        }
        while (v9 != v10);
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_retain();
      }
      uint64_t v39 = *(void *)(v0 + 360);
      uint64_t v40 = *(void *)(v0 + 344);
      uint64_t v42 = *(void *)(v0 + 320);
      uint64_t v41 = *(void *)(v0 + 328);
      uint64_t v43 = *(void *)(v0 + 312);
      sub_21CB88670();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v39 + 56))(v40, 1, 1, v43);
      (*(void (**)(void, uint64_t, uint64_t))(v41 + 32))(*(void *)(*(void *)((v7 & 0x3FFFFFFFFFFFFFFFLL) + 0x40) + 40), v40, v42);
      swift_continuation_throwingResume();
    }
    else
    {
      uint64_t v35 = *(void *)(*(void *)(v0 + 184) + 16);
      if (v35)
      {
        sub_21CB88600();
        sub_21CAE95D0();
        unint64_t v58 = v7;
        swift_retain();
        swift_bridgeObjectRetain();
        uint64_t v36 = 0;
        do
        {
          ++v36;
          uint64_t v37 = swift_allocError();
          sub_21CB881C0();
          sub_21CA57E34((uint64_t *)&unk_267C96F50);
          swift_allocError();
          *uint64_t v38 = v37;
          swift_continuation_throwingResumeWithError();
        }
        while (v35 != v36);
        swift_bridgeObjectRelease();
        unint64_t v7 = v58;
      }
      else
      {
        swift_retain();
      }
      sub_21CB88670();
    }
    swift_release();
    sub_21CAB65C0(v7);
    goto LABEL_23;
  }
  uint64_t v14 = *(void *)(v0 + 376);
  uint64_t v15 = *(void **)(v0 + 304);
  uint64_t v51 = *(void *)(v0 + 296);
  uint64_t v16 = *(void *)(v0 + 288);
  uint64_t v54 = *(void *)(v0 + 280);
  uint64_t v17 = *(void *)(v0 + 208);
  long long v48 = *(_OWORD *)(v0 + 216);
  uint64_t v46 = *(void (**)(uint64_t, char *, uint64_t))(v2 + 32);
  v46(v14, v1, v3);
  uint64_t v18 = *(os_unfair_lock_s **)(v17 + 16);
  uint64_t v19 = swift_task_alloc();
  *(_OWORD *)(v19 + 16) = v48;
  *(void *)(v19 + 32) = v17;
  *(void *)(v19 + 40) = v14;
  os_unfair_lock_lock(v18);
  sub_21CAE9E30(v15);
  os_unfair_lock_unlock(v18);
  swift_task_dealloc();
  (*(void (**)(uint64_t, void *, uint64_t))(v16 + 16))(v51, v15, v54);
  sub_21CA5EEBC((uint64_t *)&unk_267C96F50);
  sub_21CB886A0();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  int v21 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(TupleTypeMetadata2 - 8) + 48))(v51, 1, TupleTypeMetadata2);
  uint64_t v22 = *(void *)(v0 + 376);
  if (v21 == 1)
  {
    uint64_t v23 = *(void *)(v0 + 360);
    uint64_t v24 = *(void *)(v0 + 312);
    (*(void (**)(void, void))(*(void *)(v0 + 288) + 8))(*(void *)(v0 + 304), *(void *)(v0 + 280));
    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v22, v24);
  }
  else
  {
    uint64_t v57 = *(void *)(v0 + 376);
    uint64_t v26 = *(void *)(v0 + 360);
    uint64_t v25 = *(void *)(v0 + 368);
    uint64_t v27 = *(void *)(v0 + 344);
    uint64_t v28 = *(void *)(v0 + 320);
    uint64_t v49 = *(void *)(v0 + 328);
    uint64_t v29 = *(void *)(v0 + 312);
    uint64_t v55 = *(void *)(v0 + 304);
    uint64_t v31 = *(void *)(v0 + 288);
    unint64_t v30 = *(uint64_t **)(v0 + 296);
    uint64_t v52 = *(void *)(v0 + 280);
    uint64_t v32 = (char *)v30 + *(int *)(TupleTypeMetadata2 + 48);
    uint64_t v33 = *v30;
    v46(v25, v32, v29);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v26 + 16))(v27, v25, v29);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v26 + 56))(v27, 0, 1, v29);
    (*(void (**)(void, uint64_t, uint64_t))(v49 + 32))(*(void *)(*(void *)(v33 + 64) + 40), v27, v28);
    swift_continuation_throwingResume();
    int v34 = *(void (**)(uint64_t, uint64_t))(v26 + 8);
    v34(v25, v29);
    (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v55, v52);
    v34(v57, v29);
  }
  return MEMORY[0x270FA2498](sub_21CAE164C, 0, 0);
}

uint64_t sub_21CAE21C8()
{
  (*(void (**)(void, void))(v0[51] + 8))(v0[52], v0[50]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

void sub_21CAE22AC(uint64_t a1, void *a2)
{
  uint64_t v2 = *a2;
  uint64_t v3 = (os_unfair_lock_s *)a2[2];
  long long v4 = *(_OWORD *)(*a2 + 96);
  v7[0] = *(_OWORD *)(*a2 + 80);
  v7[1] = v4;
  v7[2] = *(_OWORD *)(v2 + 112);
  type metadata accessor for MergeStateMachine.ChildTaskSuspendedAction();
  os_unfair_lock_lock(v3);
  sub_21CAE9E50((uint64_t *)v7);
  os_unfair_lock_unlock(v3);
  if (*((void *)&v7[0] + 1) >> 62)
  {
    if (*((void *)&v7[0] + 1) >> 62 == 1)
    {
      uint64_t v5 = *((void *)&v7[0] + 1) & 0x3FFFFFFFFFFFFFFFLL;
      sub_21CA57E34((uint64_t *)&unk_267C96F50);
      swift_allocError();
      *uint64_t v6 = v5;
      swift_continuation_throwingResumeWithError();
    }
  }
  else
  {
    swift_continuation_throwingResume();
  }
}

uint64_t sub_21CAE239C@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  swift_beginAccess();
  long long v4 = (_OWORD *)type metadata accessor for MergeStateMachine();
  uint64_t v5 = sub_21CADC6FC(a1, v4);
  uint64_t v7 = v6;
  uint64_t result = swift_endAccess();
  *a2 = v5;
  a2[1] = v7;
  return result;
}

uint64_t sub_21CAE2478@<X0>(uint64_t a1@<X1>, void *a2@<X8>)
{
  swift_beginAccess();
  uint64_t v4 = type metadata accessor for MergeStateMachine();
  sub_21CADC988(a1, v4, a2);
  return swift_endAccess();
}

uint64_t sub_21CAE254C@<X0>(uint64_t *a1@<X8>)
{
  swift_beginAccess();
  uint64_t v2 = type metadata accessor for MergeStateMachine();
  uint64_t v3 = sub_21CADCE50(v2);
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t result = swift_endAccess();
  *a1 = v3;
  a1[1] = v5;
  a1[2] = v7;
  return result;
}

uint64_t sub_21CAE2624(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v7 = sub_21CA57E34(&qword_267C95028);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21CAE9D90(a1, (uint64_t)v9);
  uint64_t v10 = sub_21CB88640();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
    sub_21CAE9D30((uint64_t)v9);
    if (*(void *)(a3 + 16))
    {
LABEL_3:
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v12 = sub_21CB885F0();
      uint64_t v14 = v13;
      swift_unknownObjectRelease();
      goto LABEL_6;
    }
  }
  else
  {
    sub_21CB88630();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v9, v10);
    if (*(void *)(a3 + 16)) {
      goto LABEL_3;
    }
  }
  uint64_t v12 = 0;
  uint64_t v14 = 0;
LABEL_6:
  uint64_t v15 = *v4;
  uint64_t v16 = (void *)(v14 | v12);
  if (v14 | v12)
  {
    v19[0] = 0;
    v19[1] = 0;
    uint64_t v16 = v19;
    void v19[2] = v12;
    v19[3] = v14;
  }
  v18[1] = 1;
  v18[2] = v16;
  _OWORD v18[3] = v15;
  swift_task_create();
  return swift_release();
}

uint64_t sub_21CAE27F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  return sub_21CAE7D00(a1, a2, a3, a4, a5, a6, (uint64_t (*)(void, void *))type metadata accessor for AsyncMerge2Sequence, a7);
}

uint64_t sub_21CAE280C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  return sub_21CAE7EA4(a1, a2, a3, a4, a5, a6, (uint64_t (*)(void, void *))type metadata accessor for AsyncMerge2Sequence, a7);
}

uint64_t sub_21CAE2824(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = sub_21CB889A0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v12 - v6;
  uint64_t v8 = *(void *)(a1 + 24);
  v12[0] = v3;
  v12[1] = v8;
  v12[2] = v3;
  long long v13 = *(_OWORD *)(a1 + 32);
  uint64_t v14 = v13;
  type metadata accessor for MergeStorage();
  uint64_t v9 = v1 + *(int *)(a1 + 52);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v7, 1, 1, v3);
  swift_allocObject();
  uint64_t v10 = sub_21CAEB480(v1, v9, (uint64_t)v7);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return sub_21CAE2994((uint64_t)v10);
}

uint64_t sub_21CAE2994(uint64_t a1)
{
  type metadata accessor for AsyncMerge2Sequence.Iterator.InternalClass();
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = a1;
  return result;
}

uint64_t sub_21CAE2A08@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = sub_21CAE2824(a1);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(a1 - 8) + 8))(v2, a1);
  *a2 = v5;
  return result;
}

uint64_t sub_21CAE2A70(uint64_t a1)
{
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = a1;
  return result;
}

uint64_t sub_21CAE2AA4()
{
  sub_21CADE234();
  swift_release();
  return v0;
}

uint64_t sub_21CAE2AD8()
{
  sub_21CADE234();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t getEnumTagSinglePayload for Lock(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 != 1 && *(unsigned char *)(a1 + 8)) {
    return (*(_DWORD *)a1 + 2);
  }
  if (*(void *)a1) {
    int v3 = -1;
  }
  else {
    int v3 = 0;
  }
  return (v3 + 1);
}

uint64_t storeEnumTagSinglePayload for Lock(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 1)
  {
    *(void *)uint64_t result = a2 - 2;
    if (a3 >= 2) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 2) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2) {
      *(void *)uint64_t result = 0;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Lock()
{
  return &type metadata for Lock;
}

void *sub_21CAE2BB4(char *__dst, unsigned __int8 *__src, void *a3)
{
  int v3 = __src;
  uint64_t v4 = __dst;
  uint64_t v5 = *(void *)(a3[2] - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  uint64_t v7 = a3[3];
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(_DWORD *)(v8 + 80);
  uint64_t v10 = v6 + v9;
  uint64_t v11 = (v6 + v9) & ~v9;
  uint64_t v12 = *(void *)(v8 + 64);
  uint64_t v13 = a3[4] - 8;
  uint64_t v14 = *(void *)v13;
  int v15 = *(_DWORD *)(*(void *)v13 + 80);
  uint64_t v16 = v15;
  uint64_t v17 = (v12 + v16 + v11) & ~v16;
  if (*(_DWORD *)(*(void *)v13 + 84)) {
    size_t v18 = *(void *)(*(void *)v13 + 64);
  }
  else {
    size_t v18 = *(void *)(*(void *)v13 + 64) + 1;
  }
  if (v18 + v17 <= 0x28) {
    uint64_t v19 = 40;
  }
  else {
    uint64_t v19 = v18 + v17;
  }
  if (v19 > 3) {
    goto LABEL_11;
  }
  unsigned int v20 = ((1 << (8 * v19)) + 1) >> (8 * v19);
  uint64_t v21 = 2;
  if (v20 > 0xFFFC) {
    uint64_t v21 = 4;
  }
  if (v20 <= 0xFC) {
LABEL_11:
  }
    uint64_t v21 = 1;
  unint64_t v22 = ((v19 + v21 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  int v23 = *(_DWORD *)(v8 + 80) | *(_DWORD *)(v5 + 80) | v15;
  if (v22 <= 0x18 && (v23 & 0x1000F8) == 0)
  {
    if (v19 > 3) {
      goto LABEL_20;
    }
    unsigned int v26 = ((1 << (8 * v19)) + 1) >> (8 * v19);
    if (v26 > 0xFFFC)
    {
      unsigned int v27 = *(_DWORD *)&__src[v19];
      unsigned int v28 = v27 - 3;
      if (v27 < 3) {
        goto LABEL_38;
      }
      goto LABEL_25;
    }
    if (v26 > 0xFC)
    {
      unsigned int v27 = *(unsigned __int16 *)&__src[v19];
      unsigned int v28 = v27 - 3;
      if (v27 < 3) {
        goto LABEL_38;
      }
    }
    else
    {
LABEL_20:
      unsigned int v27 = __src[v19];
      unsigned int v28 = v27 - 3;
      if (v27 < 3) {
        goto LABEL_38;
      }
    }
LABEL_25:
    if (v19 <= 3) {
      uint64_t v29 = v19;
    }
    else {
      uint64_t v29 = 4;
    }
    switch(v29)
    {
      case 1:
        int v30 = *__src;
        if (v19 < 4) {
          goto LABEL_36;
        }
        goto LABEL_37;
      case 2:
        int v30 = *(unsigned __int16 *)__src;
        if (v19 >= 4) {
          goto LABEL_37;
        }
        goto LABEL_36;
      case 3:
        int v30 = *(unsigned __int16 *)__src | (__src[2] << 16);
        if (v19 >= 4) {
          goto LABEL_37;
        }
        goto LABEL_36;
      case 4:
        int v30 = *(_DWORD *)__src;
        if (v19 < 4) {
LABEL_36:
        }
          v30 |= v28 << (8 * v19);
LABEL_37:
        unsigned int v27 = v30 + 3;
        break;
      default:
        break;
    }
LABEL_38:
    if (v27 != 2)
    {
      if (v27 != 1)
      {
        if (v27)
        {
          if (v19 > 3) {
            goto LABEL_57;
          }
          unsigned int v42 = ((1 << (8 * v19)) + 1) >> (8 * v19);
          uint64_t v43 = 2;
          if (v42 > 0xFFFC) {
            uint64_t v43 = 4;
          }
          if (v42 <= 0xFC) {
LABEL_57:
          }
            uint64_t v43 = 1;
          memcpy(__dst, __src, v43 + v19);
          if (v19 <= 3)
          {
LABEL_63:
            unsigned int v44 = ((1 << (8 * v19)) + 1) >> (8 * v19);
            uint64_t v45 = 2;
            if (v44 > 0xFFFC) {
              uint64_t v45 = 4;
            }
            if (v44 > 0xFC) {
              goto LABEL_77;
            }
          }
LABEL_66:
          uint64_t v45 = 1;
LABEL_77:
          *(void *)(((unint64_t)v4 + v45 + v19 + 7) & 0xFFFFFFFFFFFFFFF8) = *(void *)((unint64_t)&v3[v45 + 7 + v19] & 0xFFFFFFFFFFFFFFF8);
          return v4;
        }
        uint64_t v49 = ~v9;
        uint64_t v50 = a3[4];
        (*(void (**)(char *, unsigned __int8 *))(v5 + 16))(__dst, __src);
        uint64_t v31 = (char *)v3;
        unint64_t v32 = ((unint64_t)v4 + v10) & v49;
        long long v48 = v31;
        unint64_t v33 = (unint64_t)&v31[v10] & v49;
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 16))(v32, v33, v7);
        int v34 = (void *)((v32 + v12 + v16) & ~v16);
        uint64_t v35 = (const void *)((v33 + v12 + v16) & ~v16);
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v14 + 48))(v35, 1, v50))
        {
          memcpy(v34, v35, v18);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v14 + 16))(v34, v35, v50);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(v34, 0, 1, v50);
        }
        int v3 = (unsigned __int8 *)v48;
        if (v19 > 3)
        {
LABEL_62:
          *((unsigned char *)v4 + v19) = 0;
          if (v19 <= 3) {
            goto LABEL_63;
          }
          goto LABEL_66;
        }
        unsigned int v38 = ((1 << (8 * v19)) + 1) >> (8 * v19);
        if (v38 > 0xFFFC)
        {
          *(_DWORD *)((char *)v4 + v19) = 0;
        }
        else
        {
          if (v38 <= 0xFC) {
            goto LABEL_62;
          }
          *(_WORD *)((char *)v4 + v19) = 0;
        }
LABEL_75:
        BOOL v46 = v38 > 0xFFFC;
        uint64_t v45 = 2;
        if (v46) {
          uint64_t v45 = 4;
        }
        goto LABEL_77;
      }
      uint64_t v40 = *((void *)__src + 1);
      *(void *)__dst = *(void *)__src;
      *((void *)__dst + 1) = v40;
      *((void *)__dst + 2) = *((void *)__src + 2);
      *(_OWORD *)(__dst + 24) = *(_OWORD *)(__src + 24);
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      if (v19 > 3) {
        goto LABEL_50;
      }
      int v41 = 1;
      unsigned int v38 = ((1 << (8 * v19)) + 1) >> (8 * v19);
      if (v38 <= 0xFFFC)
      {
        if (v38 <= 0xFC)
        {
LABEL_50:
          char v39 = 1;
LABEL_51:
          *((unsigned char *)v4 + v19) = v39;
          if (v19 <= 3) {
            goto LABEL_63;
          }
          goto LABEL_66;
        }
LABEL_74:
        *(_WORD *)((char *)v4 + v19) = v41;
        goto LABEL_75;
      }
LABEL_71:
      *(_DWORD *)((char *)v4 + v19) = v41;
      goto LABEL_75;
    }
    uint64_t v36 = (void *)*((void *)__src + 1);
    *(void *)__dst = *(void *)__src;
    swift_retain();
    id v37 = v36;
    v4[1] = v36;
    if (v19 <= 3)
    {
      unsigned int v38 = ((1 << (8 * v19)) + 1) >> (8 * v19);
      if (v38 > 0xFFFC)
      {
        int v41 = 2;
        goto LABEL_71;
      }
      if (v38 > 0xFC)
      {
        LOWORD(v41) = 2;
        goto LABEL_74;
      }
    }
    char v39 = 2;
    goto LABEL_51;
  }
  uint64_t v25 = *(void *)__src;
  *uint64_t v4 = *(void *)__src;
  uint64_t v4 = (void *)(v25 + (((v23 & 0xF8 | 7u) + 16) & ~(unint64_t)(v23 & 0xF8 | 7u)));
  swift_retain();
  return v4;
}

char *sub_21CAE3184(char *__dst, char *__src, void *a3)
{
  int v3 = __src;
  uint64_t v5 = a3[3];
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = *(void *)(*(void *)(a3[2] - 8) + 64) + v7;
  uint64_t v9 = a3[4] - 8;
  uint64_t v10 = *(void *)v9;
  uint64_t v11 = *(unsigned __int8 *)(*(void *)v9 + 80);
  uint64_t v12 = (*(void *)(v6 + 64) + v11 + (v8 & ~v7)) & ~v11;
  if (*(_DWORD *)(*(void *)v9 + 84)) {
    uint64_t v13 = *(void *)(*(void *)v9 + 64);
  }
  else {
    uint64_t v13 = *(void *)(*(void *)v9 + 64) + 1;
  }
  if ((unint64_t)(v13 + v12) <= 0x28) {
    uint64_t v14 = 40;
  }
  else {
    uint64_t v14 = v13 + v12;
  }
  if (v14 > 3) {
    goto LABEL_10;
  }
  unsigned int v15 = ((1 << (8 * v14)) + 1) >> (8 * v14);
  if (v15 > 0xFFFC)
  {
    unsigned int v16 = *(_DWORD *)&__src[v14];
    unsigned int v17 = v16 - 3;
    if (v16 < 3) {
      goto LABEL_28;
    }
    goto LABEL_15;
  }
  if (v15 > 0xFC)
  {
    unsigned int v16 = *(unsigned __int16 *)&__src[v14];
    unsigned int v17 = v16 - 3;
    if (v16 < 3) {
      goto LABEL_28;
    }
  }
  else
  {
LABEL_10:
    unsigned int v16 = __src[v14];
    unsigned int v17 = v16 - 3;
    if (v16 < 3) {
      goto LABEL_28;
    }
  }
LABEL_15:
  if (v14 <= 3) {
    uint64_t v18 = v14;
  }
  else {
    uint64_t v18 = 4;
  }
  switch(v18)
  {
    case 1:
      int v19 = *__src;
      if (v14 < 4) {
        goto LABEL_26;
      }
      goto LABEL_27;
    case 2:
      int v19 = *(unsigned __int16 *)__src;
      if (v14 >= 4) {
        goto LABEL_27;
      }
      goto LABEL_26;
    case 3:
      int v19 = *(unsigned __int16 *)__src | (__src[2] << 16);
      if (v14 >= 4) {
        goto LABEL_27;
      }
      goto LABEL_26;
    case 4:
      int v19 = *(_DWORD *)__src;
      if (v14 < 4) {
LABEL_26:
      }
        v19 |= v17 << (8 * v14);
LABEL_27:
      unsigned int v16 = v19 + 3;
      break;
    default:
      break;
  }
LABEL_28:
  switch(v16)
  {
    case 2u:
      unsigned int v26 = (void *)*((void *)__src + 1);
      *(void *)__dst = *(void *)__src;
      swift_retain();
      id v27 = v26;
      *((void *)__dst + 1) = v26;
      if (v14 <= 3)
      {
        unsigned int v28 = ((1 << (8 * v14)) + 1) >> (8 * v14);
        if (v28 > 0xFFFC)
        {
          int v31 = 2;
          goto LABEL_61;
        }
        if (v28 > 0xFC)
        {
          LOWORD(v31) = 2;
          goto LABEL_64;
        }
      }
      char v29 = 2;
      goto LABEL_41;
    case 1u:
      uint64_t v30 = *((void *)__src + 1);
      *(void *)__dst = *(void *)__src;
      *((void *)__dst + 1) = v30;
      *((void *)__dst + 2) = *((void *)__src + 2);
      *(_OWORD *)(__dst + 24) = *(_OWORD *)(__src + 24);
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      if (v14 > 3)
      {
LABEL_40:
        char v29 = 1;
LABEL_41:
        __dst[v14] = v29;
        if (v14 <= 3) {
          goto LABEL_53;
        }
        goto LABEL_56;
      }
      int v31 = 1;
      unsigned int v28 = ((1 << (8 * v14)) + 1) >> (8 * v14);
      if (v28 <= 0xFFFC)
      {
        if (v28 <= 0xFC) {
          goto LABEL_40;
        }
LABEL_64:
        *(_WORD *)&__dst[v14] = v31;
        goto LABEL_65;
      }
LABEL_61:
      *(_DWORD *)&__dst[v14] = v31;
      goto LABEL_65;
    case 0u:
      size_t __n = v13;
      uint64_t v20 = ~v7;
      uint64_t v40 = *(void *)(v6 + 64);
      uint64_t v41 = a3[4];
      (*(void (**)(char *, char *))(*(void *)(a3[2] - 8) + 16))(__dst, __src);
      uint64_t v21 = v3;
      unint64_t v22 = (unint64_t)&__dst[v8] & v20;
      char v39 = v21;
      unint64_t v23 = (unint64_t)&v21[v8] & v20;
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 16))(v22, v23, v5);
      uint64_t v24 = (void *)((v22 + v40 + v11) & ~v11);
      uint64_t v25 = (const void *)((v23 + v40 + v11) & ~v11);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v25, 1, v41))
      {
        memcpy(v24, v25, __n);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v10 + 16))(v24, v25, v41);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v24, 0, 1, v41);
      }
      int v3 = v39;
      if (v14 > 3)
      {
LABEL_52:
        __dst[v14] = 0;
        if (v14 <= 3) {
          goto LABEL_53;
        }
LABEL_56:
        uint64_t v35 = 1;
        goto LABEL_67;
      }
      unsigned int v28 = ((1 << (8 * v14)) + 1) >> (8 * v14);
      if (v28 > 0xFFFC)
      {
        *(_DWORD *)&__dst[v14] = 0;
      }
      else
      {
        if (v28 <= 0xFC) {
          goto LABEL_52;
        }
        *(_WORD *)&__dst[v14] = 0;
      }
LABEL_65:
      BOOL v36 = v28 > 0xFFFC;
      uint64_t v35 = 2;
      if (v36) {
        uint64_t v35 = 4;
      }
      goto LABEL_67;
  }
  if (v14 > 3) {
    goto LABEL_47;
  }
  unsigned int v32 = ((1 << (8 * v14)) + 1) >> (8 * v14);
  uint64_t v33 = 2;
  if (v32 > 0xFFFC) {
    uint64_t v33 = 4;
  }
  if (v32 <= 0xFC) {
LABEL_47:
  }
    uint64_t v33 = 1;
  memcpy(__dst, __src, v33 + v14);
  if (v14 > 3) {
    goto LABEL_56;
  }
LABEL_53:
  unsigned int v34 = ((1 << (8 * v14)) + 1) >> (8 * v14);
  uint64_t v35 = 2;
  if (v34 > 0xFFFC) {
    uint64_t v35 = 4;
  }
  if (v34 <= 0xFC) {
    goto LABEL_56;
  }
LABEL_67:
  *(void *)((unint64_t)&__dst[v35 + 7 + v14] & 0xFFFFFFFFFFFFFFF8) = *(void *)((unint64_t)&v3[v35 + 7 + v14] & 0xFFFFFFFFFFFFFFF8);
  return __dst;
}

id *sub_21CAE36C0(id *a1, unsigned __int8 *a2, void *a3)
{
  uint64_t v6 = a3[2];
  uint64_t v7 = *(void *)(v6 - 8);
  if (a1 == (id *)a2) {
    goto LABEL_91;
  }
  uint64_t v50 = *(void *)(a3[2] - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  uint64_t v53 = a3[3];
  uint64_t v52 = *(void *)(v53 - 8);
  uint64_t v9 = *(unsigned __int8 *)(v52 + 80);
  uint64_t v49 = v8 + v9;
  uint64_t v10 = a3[4] - 8;
  uint64_t v11 = *(void *)v10;
  uint64_t v12 = *(unsigned __int8 *)(*(void *)v10 + 80);
  uint64_t v51 = *(void *)(v52 + 64);
  uint64_t v13 = (v51 + v12 + ((v8 + v9) & ~v9)) & ~v12;
  if (*(_DWORD *)(*(void *)v10 + 84)) {
    uint64_t v14 = *(void *)(*(void *)v10 + 64);
  }
  else {
    uint64_t v14 = *(void *)(*(void *)v10 + 64) + 1;
  }
  if ((unint64_t)(v14 + v13) <= 0x28) {
    uint64_t v15 = 40;
  }
  else {
    uint64_t v15 = v14 + v13;
  }
  char v16 = 8 * v15;
  if (v15 > 3) {
    goto LABEL_11;
  }
  unsigned int v17 = ((1 << v16) + 1) >> v16;
  if (v17 > 0xFFFC)
  {
    unsigned int v18 = *(_DWORD *)((char *)a1 + v15);
    unsigned int v19 = v18 - 3;
    if (v18 < 3) {
      goto LABEL_29;
    }
    goto LABEL_16;
  }
  if (v17 > 0xFC)
  {
    unsigned int v18 = *(unsigned __int16 *)((char *)a1 + v15);
    unsigned int v19 = v18 - 3;
    if (v18 < 3) {
      goto LABEL_29;
    }
  }
  else
  {
LABEL_11:
    unsigned int v18 = *((unsigned __int8 *)a1 + v15);
    unsigned int v19 = v18 - 3;
    if (v18 < 3) {
      goto LABEL_29;
    }
  }
LABEL_16:
  if (v15 <= 3) {
    uint64_t v20 = v15;
  }
  else {
    uint64_t v20 = 4;
  }
  switch(v20)
  {
    case 1:
      int v21 = *(unsigned __int8 *)a1;
      if (v15 < 4) {
        goto LABEL_27;
      }
      goto LABEL_28;
    case 2:
      int v21 = *(unsigned __int16 *)a1;
      if (v15 >= 4) {
        goto LABEL_28;
      }
      goto LABEL_27;
    case 3:
      int v21 = *(unsigned __int16 *)a1 | (*((unsigned __int8 *)a1 + 2) << 16);
      if (v15 >= 4) {
        goto LABEL_28;
      }
      goto LABEL_27;
    case 4:
      int v21 = *(_DWORD *)a1;
      if (v15 < 4) {
LABEL_27:
      }
        v21 |= v19 << v16;
LABEL_28:
      unsigned int v18 = v21 + 3;
      break;
    default:
      break;
  }
LABEL_29:
  size_t __n = v14;
  uint64_t v47 = ~v9;
  uint64_t v48 = ~v12;
  uint64_t v54 = a3[4];
  switch(v18)
  {
    case 2u:
      swift_release();

      break;
    case 1u:
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      if (v15 > 3) {
        goto LABEL_41;
      }
      goto LABEL_39;
    case 0u:
      (*(void (**)(id *, uint64_t))(v50 + 8))(a1, v6);
      (*(void (**)(unint64_t, uint64_t))(v52 + 8))(((unint64_t)a1 + v49) & v47, v53);
      unint64_t v22 = ((((unint64_t)a1 + v49) & v47) + v51 + v12) & v48;
      if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v11 + 48))(v22, 1, v54))
      {
        (*(void (**)(unint64_t, uint64_t))(v11 + 8))(v22, v54);
        if (v15 > 3) {
          goto LABEL_41;
        }
        goto LABEL_39;
      }
      break;
  }
  if (v15 > 3)
  {
LABEL_41:
    unsigned int v24 = a2[v15];
    unsigned int v25 = v24 - 3;
    if (v24 < 3) {
      goto LABEL_59;
    }
    goto LABEL_46;
  }
LABEL_39:
  unsigned int v23 = ((1 << v16) + 1) >> v16;
  if (v23 > 0xFFFC)
  {
    unsigned int v24 = *(_DWORD *)&a2[v15];
    unsigned int v25 = v24 - 3;
    if (v24 < 3) {
      goto LABEL_59;
    }
    goto LABEL_46;
  }
  if (v23 <= 0xFC) {
    goto LABEL_41;
  }
  unsigned int v24 = *(unsigned __int16 *)&a2[v15];
  unsigned int v25 = v24 - 3;
  if (v24 < 3) {
    goto LABEL_59;
  }
LABEL_46:
  if (v15 <= 3) {
    uint64_t v26 = v15;
  }
  else {
    uint64_t v26 = 4;
  }
  switch(v26)
  {
    case 1:
      int v27 = *a2;
      if (v15 < 4) {
        goto LABEL_57;
      }
      goto LABEL_58;
    case 2:
      int v27 = *(unsigned __int16 *)a2;
      if (v15 >= 4) {
        goto LABEL_58;
      }
      goto LABEL_57;
    case 3:
      int v27 = *(unsigned __int16 *)a2 | (a2[2] << 16);
      if (v15 >= 4) {
        goto LABEL_58;
      }
      goto LABEL_57;
    case 4:
      int v27 = *(_DWORD *)a2;
      if (v15 < 4) {
LABEL_57:
      }
        v27 |= v25 << v16;
LABEL_58:
      unsigned int v24 = v27 + 3;
      break;
    default:
      break;
  }
LABEL_59:
  switch(v24)
  {
    case 2u:
      *a1 = *(id *)a2;
      uint64_t v30 = (void *)*((void *)a2 + 1);
      swift_retain();
      id v31 = v30;
      a1[1] = v30;
      if (v15 <= 3)
      {
        unsigned int v32 = ((1 << v16) + 1) >> v16;
        if (v32 > 0xFFFC)
        {
          int v34 = 2;
          goto LABEL_85;
        }
        if (v32 > 0xFC)
        {
          LOWORD(v34) = 2;
          goto LABEL_88;
        }
      }
      char v33 = 2;
LABEL_73:
      *((unsigned char *)a1 + v15) = v33;
LABEL_90:
      uint64_t v7 = v50;
      goto LABEL_91;
    case 1u:
      *a1 = *(id *)a2;
      a1[1] = (id)*((void *)a2 + 1);
      a1[2] = (id)*((void *)a2 + 2);
      a1[3] = (id)*((void *)a2 + 3);
      a1[4] = (id)*((void *)a2 + 4);
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      if (v15 > 3)
      {
LABEL_72:
        char v33 = 1;
        goto LABEL_73;
      }
      int v34 = 1;
      unsigned int v35 = ((1 << v16) + 1) >> v16;
      if (v35 <= 0xFFFC)
      {
        if (v35 <= 0xFC) {
          goto LABEL_72;
        }
LABEL_88:
        *(_WORD *)((char *)a1 + v15) = v34;
        goto LABEL_90;
      }
LABEL_85:
      *(_DWORD *)((char *)a1 + v15) = v34;
      goto LABEL_90;
    case 0u:
      (*(void (**)(id *, unsigned __int8 *, uint64_t))(v50 + 16))(a1, a2, v6);
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v52 + 16))(((unint64_t)a1 + v49) & v47, (unint64_t)&a2[v49] & v47, v53);
      unsigned int v28 = (void *)(((((unint64_t)a1 + v49) & v47) + v51 + v12) & v48);
      char v29 = (const void *)((((unint64_t)&a2[v49] & v47) + v51 + v12) & v48);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v29, 1, v54))
      {
        memcpy(v28, v29, __n);
        if (v15 > 3) {
          goto LABEL_83;
        }
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(v28, v29, v54);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v28, 0, 1, v54);
        if (v15 > 3)
        {
LABEL_83:
          *((unsigned char *)a1 + v15) = 0;
          goto LABEL_90;
        }
      }
      unsigned int v38 = ((1 << v16) + 1) >> v16;
      if (v38 > 0xFFFC)
      {
        *(_DWORD *)((char *)a1 + v15) = 0;
        goto LABEL_90;
      }
      if (v38 > 0xFC)
      {
        *(_WORD *)((char *)a1 + v15) = 0;
        goto LABEL_90;
      }
      goto LABEL_83;
  }
  if (v15 > 3) {
    goto LABEL_78;
  }
  unsigned int v36 = ((1 << v16) + 1) >> v16;
  uint64_t v37 = 2;
  if (v36 > 0xFFFC) {
    uint64_t v37 = 4;
  }
  if (v36 <= 0xFC) {
LABEL_78:
  }
    uint64_t v37 = 1;
  uint64_t v7 = v50;
  memcpy(a1, a2, v37 + v15);
LABEL_91:
  uint64_t v39 = *(void *)(a3[4] - 8);
  unint64_t v40 = (((*(void *)(v7 + 64) + *(unsigned __int8 *)(*(void *)(a3[3] - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(a3[3] - 8) + 80))
       + *(void *)(*(void *)(a3[3] - 8) + 64)
       + *(unsigned __int8 *)(v39 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80);
  uint64_t v41 = *(void *)(v39 + 64);
  if (!*(_DWORD *)(v39 + 84)) {
    ++v41;
  }
  unint64_t v42 = v41 + v40;
  if (v42 <= 0x28) {
    unint64_t v42 = 40;
  }
  if (v42 > 3) {
    goto LABEL_99;
  }
  unsigned int v43 = ((1 << (8 * v42)) + 1) >> (8 * v42);
  uint64_t v44 = 2;
  if (v43 > 0xFFFC) {
    uint64_t v44 = 4;
  }
  if (v43 <= 0xFC) {
LABEL_99:
  }
    uint64_t v44 = 1;
  *(void *)(((unint64_t)a1 + v44 + v42 + 7) & 0xFFFFFFFFFFFFFFF8) = *(void *)((unint64_t)&a2[v44 + 7 + v42] & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

_OWORD *sub_21CAE3EAC(_OWORD *__dst, _OWORD *__src, void *a3)
{
  int v3 = __src;
  uint64_t v6 = a3[3];
  uint64_t v5 = a3[4];
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = *(void *)(*(void *)(a3[2] - 8) + 64) + v8;
  uint64_t v10 = *(void *)(v5 - 8);
  uint64_t v11 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v12 = (*(void *)(v7 + 64) + v11 + (v9 & ~v8)) & ~v11;
  if (*(_DWORD *)(v10 + 84)) {
    uint64_t v13 = *(void *)(*(void *)(v5 - 8) + 64);
  }
  else {
    uint64_t v13 = *(void *)(*(void *)(v5 - 8) + 64) + 1;
  }
  if ((unint64_t)(v13 + v12) <= 0x28) {
    uint64_t v14 = 40;
  }
  else {
    uint64_t v14 = v13 + v12;
  }
  if (v14 > 3) {
    goto LABEL_10;
  }
  unsigned int v15 = ((1 << (8 * v14)) + 1) >> (8 * v14);
  if (v15 > 0xFFFC)
  {
    unsigned int v16 = *(_DWORD *)((char *)__src + v14);
    unsigned int v17 = v16 - 3;
    if (v16 < 3) {
      goto LABEL_28;
    }
    goto LABEL_15;
  }
  if (v15 > 0xFC)
  {
    unsigned int v16 = *(unsigned __int16 *)((char *)__src + v14);
    unsigned int v17 = v16 - 3;
    if (v16 < 3) {
      goto LABEL_28;
    }
  }
  else
  {
LABEL_10:
    unsigned int v16 = *((unsigned __int8 *)__src + v14);
    unsigned int v17 = v16 - 3;
    if (v16 < 3) {
      goto LABEL_28;
    }
  }
LABEL_15:
  if (v14 <= 3) {
    uint64_t v18 = v14;
  }
  else {
    uint64_t v18 = 4;
  }
  switch(v18)
  {
    case 1:
      int v19 = *(unsigned __int8 *)__src;
      if (v14 < 4) {
        goto LABEL_26;
      }
      goto LABEL_27;
    case 2:
      int v19 = *(unsigned __int16 *)__src;
      if (v14 >= 4) {
        goto LABEL_27;
      }
      goto LABEL_26;
    case 3:
      int v19 = *(unsigned __int16 *)__src | (*((unsigned __int8 *)__src + 2) << 16);
      if (v14 >= 4) {
        goto LABEL_27;
      }
      goto LABEL_26;
    case 4:
      int v19 = *(_DWORD *)__src;
      if (v14 < 4) {
LABEL_26:
      }
        v19 |= v17 << (8 * v14);
LABEL_27:
      unsigned int v16 = v19 + 3;
      break;
    default:
      break;
  }
LABEL_28:
  switch(v16)
  {
    case 2u:
      char *__dst = *__src;
      if (v14 <= 3)
      {
        unsigned int v26 = ((1 << (8 * v14)) + 1) >> (8 * v14);
        if (v26 > 0xFFFC)
        {
          int v29 = 2;
          goto LABEL_61;
        }
        if (v26 > 0xFC)
        {
          LOWORD(v29) = 2;
          goto LABEL_64;
        }
      }
      char v27 = 2;
      goto LABEL_41;
    case 1u:
      long long v28 = __src[1];
      char *__dst = *__src;
      __dst[1] = v28;
      *((void *)__dst + 4) = *((void *)__src + 4);
      if (v14 > 3)
      {
LABEL_40:
        char v27 = 1;
LABEL_41:
        *((unsigned char *)__dst + v14) = v27;
        if (v14 <= 3) {
          goto LABEL_53;
        }
        goto LABEL_56;
      }
      int v29 = 1;
      unsigned int v26 = ((1 << (8 * v14)) + 1) >> (8 * v14);
      if (v26 <= 0xFFFC)
      {
        if (v26 <= 0xFC) {
          goto LABEL_40;
        }
LABEL_64:
        *(_WORD *)((char *)__dst + v14) = v29;
        goto LABEL_65;
      }
LABEL_61:
      *(_DWORD *)((char *)__dst + v14) = v29;
      goto LABEL_65;
    case 0u:
      size_t __n = v13;
      uint64_t v20 = ~v8;
      uint64_t v38 = *(void *)(v7 + 64);
      uint64_t v39 = a3[4];
      (*(void (**)(_OWORD *, _OWORD *))(*(void *)(a3[2] - 8) + 32))(__dst, __src);
      int v21 = v3;
      unint64_t v22 = ((unint64_t)__dst + v9) & v20;
      uint64_t v37 = v21;
      unint64_t v23 = ((unint64_t)v21 + v9) & v20;
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v7 + 32))(v22, v23, v6);
      unsigned int v24 = (void *)((v22 + v38 + v11) & ~v11);
      unsigned int v25 = (const void *)((v23 + v38 + v11) & ~v11);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v25, 1, v39))
      {
        memcpy(v24, v25, __n);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v24, v25, v39);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v24, 0, 1, v39);
      }
      int v3 = v37;
      if (v14 > 3)
      {
LABEL_52:
        *((unsigned char *)__dst + v14) = 0;
        if (v14 <= 3) {
          goto LABEL_53;
        }
LABEL_56:
        uint64_t v33 = 1;
        goto LABEL_67;
      }
      unsigned int v26 = ((1 << (8 * v14)) + 1) >> (8 * v14);
      if (v26 > 0xFFFC)
      {
        *(_DWORD *)((char *)__dst + v14) = 0;
      }
      else
      {
        if (v26 <= 0xFC) {
          goto LABEL_52;
        }
        *(_WORD *)((char *)__dst + v14) = 0;
      }
LABEL_65:
      BOOL v34 = v26 > 0xFFFC;
      uint64_t v33 = 2;
      if (v34) {
        uint64_t v33 = 4;
      }
      goto LABEL_67;
  }
  if (v14 > 3) {
    goto LABEL_47;
  }
  unsigned int v30 = ((1 << (8 * v14)) + 1) >> (8 * v14);
  uint64_t v31 = 2;
  if (v30 > 0xFFFC) {
    uint64_t v31 = 4;
  }
  if (v30 <= 0xFC) {
LABEL_47:
  }
    uint64_t v31 = 1;
  memcpy(__dst, __src, v31 + v14);
  if (v14 > 3) {
    goto LABEL_56;
  }
LABEL_53:
  unsigned int v32 = ((1 << (8 * v14)) + 1) >> (8 * v14);
  uint64_t v33 = 2;
  if (v32 > 0xFFFC) {
    uint64_t v33 = 4;
  }
  if (v32 <= 0xFC) {
    goto LABEL_56;
  }
LABEL_67:
  *(void *)(((unint64_t)__dst + v33 + v14 + 7) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v3
                                                                                             + v33
                                                                                             + v14
                                                                                             + 7) & 0xFFFFFFFFFFFFFFF8);
  return __dst;
}

id *sub_21CAE43B8(id *a1, unsigned __int8 *a2, void *a3)
{
  uint64_t v6 = a3[2];
  uint64_t v7 = *(void *)(v6 - 8);
  if (a1 == (id *)a2) {
    goto LABEL_91;
  }
  uint64_t v49 = *(void *)(a3[2] - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  uint64_t v9 = a3[4];
  uint64_t v52 = a3[3];
  uint64_t v51 = *(void *)(v52 - 8);
  uint64_t v10 = *(unsigned __int8 *)(v51 + 80);
  uint64_t v48 = v8 + v10;
  uint64_t v11 = *(void *)(v9 - 8);
  uint64_t v12 = *(unsigned __int8 *)(v11 + 80);
  uint64_t v50 = *(void *)(v51 + 64);
  uint64_t v13 = (v50 + v12 + ((v8 + v10) & ~v10)) & ~v12;
  if (*(_DWORD *)(v11 + 84)) {
    uint64_t v14 = *(void *)(*(void *)(v9 - 8) + 64);
  }
  else {
    uint64_t v14 = *(void *)(*(void *)(v9 - 8) + 64) + 1;
  }
  if ((unint64_t)(v14 + v13) <= 0x28) {
    uint64_t v15 = 40;
  }
  else {
    uint64_t v15 = v14 + v13;
  }
  char v16 = 8 * v15;
  if (v15 > 3) {
    goto LABEL_11;
  }
  unsigned int v17 = ((1 << v16) + 1) >> v16;
  if (v17 > 0xFFFC)
  {
    unsigned int v18 = *(_DWORD *)((char *)a1 + v15);
    unsigned int v19 = v18 - 3;
    if (v18 < 3) {
      goto LABEL_29;
    }
    goto LABEL_16;
  }
  if (v17 > 0xFC)
  {
    unsigned int v18 = *(unsigned __int16 *)((char *)a1 + v15);
    unsigned int v19 = v18 - 3;
    if (v18 < 3) {
      goto LABEL_29;
    }
  }
  else
  {
LABEL_11:
    unsigned int v18 = *((unsigned __int8 *)a1 + v15);
    unsigned int v19 = v18 - 3;
    if (v18 < 3) {
      goto LABEL_29;
    }
  }
LABEL_16:
  if (v15 <= 3) {
    uint64_t v20 = v15;
  }
  else {
    uint64_t v20 = 4;
  }
  switch(v20)
  {
    case 1:
      int v21 = *(unsigned __int8 *)a1;
      if (v15 < 4) {
        goto LABEL_27;
      }
      goto LABEL_28;
    case 2:
      int v21 = *(unsigned __int16 *)a1;
      if (v15 >= 4) {
        goto LABEL_28;
      }
      goto LABEL_27;
    case 3:
      int v21 = *(unsigned __int16 *)a1 | (*((unsigned __int8 *)a1 + 2) << 16);
      if (v15 >= 4) {
        goto LABEL_28;
      }
      goto LABEL_27;
    case 4:
      int v21 = *(_DWORD *)a1;
      if (v15 < 4) {
LABEL_27:
      }
        v21 |= v19 << v16;
LABEL_28:
      unsigned int v18 = v21 + 3;
      break;
    default:
      break;
  }
LABEL_29:
  size_t __n = v14;
  uint64_t v46 = ~v10;
  uint64_t v47 = ~v12;
  uint64_t v53 = a3[4];
  switch(v18)
  {
    case 2u:
      swift_release();

      break;
    case 1u:
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      if (v15 > 3) {
        goto LABEL_41;
      }
      goto LABEL_39;
    case 0u:
      (*(void (**)(id *, uint64_t))(v49 + 8))(a1, v6);
      (*(void (**)(unint64_t, uint64_t))(v51 + 8))(((unint64_t)a1 + v48) & v46, v52);
      unint64_t v22 = ((((unint64_t)a1 + v48) & v46) + v50 + v12) & v47;
      if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v11 + 48))(v22, 1, v53))
      {
        (*(void (**)(unint64_t, uint64_t))(v11 + 8))(v22, v53);
        if (v15 > 3) {
          goto LABEL_41;
        }
        goto LABEL_39;
      }
      break;
  }
  if (v15 > 3)
  {
LABEL_41:
    unsigned int v24 = a2[v15];
    unsigned int v25 = v24 - 3;
    if (v24 < 3) {
      goto LABEL_59;
    }
    goto LABEL_46;
  }
LABEL_39:
  unsigned int v23 = ((1 << v16) + 1) >> v16;
  if (v23 > 0xFFFC)
  {
    unsigned int v24 = *(_DWORD *)&a2[v15];
    unsigned int v25 = v24 - 3;
    if (v24 < 3) {
      goto LABEL_59;
    }
    goto LABEL_46;
  }
  if (v23 <= 0xFC) {
    goto LABEL_41;
  }
  unsigned int v24 = *(unsigned __int16 *)&a2[v15];
  unsigned int v25 = v24 - 3;
  if (v24 < 3) {
    goto LABEL_59;
  }
LABEL_46:
  if (v15 <= 3) {
    uint64_t v26 = v15;
  }
  else {
    uint64_t v26 = 4;
  }
  switch(v26)
  {
    case 1:
      int v27 = *a2;
      if (v15 < 4) {
        goto LABEL_57;
      }
      goto LABEL_58;
    case 2:
      int v27 = *(unsigned __int16 *)a2;
      if (v15 >= 4) {
        goto LABEL_58;
      }
      goto LABEL_57;
    case 3:
      int v27 = *(unsigned __int16 *)a2 | (a2[2] << 16);
      if (v15 >= 4) {
        goto LABEL_58;
      }
      goto LABEL_57;
    case 4:
      int v27 = *(_DWORD *)a2;
      if (v15 < 4) {
LABEL_57:
      }
        v27 |= v25 << v16;
LABEL_58:
      unsigned int v24 = v27 + 3;
      break;
    default:
      break;
  }
LABEL_59:
  switch(v24)
  {
    case 2u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      if (v15 <= 3)
      {
        unsigned int v30 = ((1 << v16) + 1) >> v16;
        if (v30 > 0xFFFC)
        {
          int v33 = 2;
          goto LABEL_85;
        }
        if (v30 > 0xFC)
        {
          LOWORD(v33) = 2;
          goto LABEL_88;
        }
      }
      char v31 = 2;
LABEL_73:
      *((unsigned char *)a1 + v15) = v31;
LABEL_90:
      uint64_t v7 = v49;
      goto LABEL_91;
    case 1u:
      long long v32 = *((_OWORD *)a2 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *((_OWORD *)a1 + 1) = v32;
      a1[4] = (id)*((void *)a2 + 4);
      if (v15 > 3)
      {
LABEL_72:
        char v31 = 1;
        goto LABEL_73;
      }
      int v33 = 1;
      unsigned int v34 = ((1 << v16) + 1) >> v16;
      if (v34 <= 0xFFFC)
      {
        if (v34 <= 0xFC) {
          goto LABEL_72;
        }
LABEL_88:
        *(_WORD *)((char *)a1 + v15) = v33;
        goto LABEL_90;
      }
LABEL_85:
      *(_DWORD *)((char *)a1 + v15) = v33;
      goto LABEL_90;
    case 0u:
      (*(void (**)(id *, unsigned __int8 *, uint64_t))(v49 + 32))(a1, a2, v6);
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v51 + 32))(((unint64_t)a1 + v48) & v46, (unint64_t)&a2[v48] & v46, v52);
      long long v28 = (void *)(((((unint64_t)a1 + v48) & v46) + v50 + v12) & v47);
      int v29 = (const void *)((((unint64_t)&a2[v48] & v46) + v50 + v12) & v47);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v29, 1, v53))
      {
        memcpy(v28, v29, __n);
        if (v15 > 3) {
          goto LABEL_83;
        }
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v28, v29, v53);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v28, 0, 1, v53);
        if (v15 > 3)
        {
LABEL_83:
          *((unsigned char *)a1 + v15) = 0;
          goto LABEL_90;
        }
      }
      unsigned int v37 = ((1 << v16) + 1) >> v16;
      if (v37 > 0xFFFC)
      {
        *(_DWORD *)((char *)a1 + v15) = 0;
        goto LABEL_90;
      }
      if (v37 > 0xFC)
      {
        *(_WORD *)((char *)a1 + v15) = 0;
        goto LABEL_90;
      }
      goto LABEL_83;
  }
  if (v15 > 3) {
    goto LABEL_78;
  }
  unsigned int v35 = ((1 << v16) + 1) >> v16;
  uint64_t v36 = 2;
  if (v35 > 0xFFFC) {
    uint64_t v36 = 4;
  }
  if (v35 <= 0xFC) {
LABEL_78:
  }
    uint64_t v36 = 1;
  uint64_t v7 = v49;
  memcpy(a1, a2, v36 + v15);
LABEL_91:
  uint64_t v38 = *(void *)(a3[4] - 8);
  unint64_t v39 = (((*(void *)(v7 + 64) + *(unsigned __int8 *)(*(void *)(a3[3] - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(a3[3] - 8) + 80))
       + *(void *)(*(void *)(a3[3] - 8) + 64)
       + *(unsigned __int8 *)(v38 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80);
  uint64_t v40 = *(void *)(v38 + 64);
  if (!*(_DWORD *)(v38 + 84)) {
    ++v40;
  }
  unint64_t v41 = v40 + v39;
  if (v41 <= 0x28) {
    unint64_t v41 = 40;
  }
  if (v41 > 3) {
    goto LABEL_99;
  }
  unsigned int v42 = ((1 << (8 * v41)) + 1) >> (8 * v41);
  uint64_t v43 = 2;
  if (v42 > 0xFFFC) {
    uint64_t v43 = 4;
  }
  if (v42 <= 0xFC) {
LABEL_99:
  }
    uint64_t v43 = 1;
  *(void *)(((unint64_t)a1 + v43 + v41 + 7) & 0xFFFFFFFFFFFFFFF8) = *(void *)((unint64_t)&a2[v43 + 7 + v41] & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_21CAE4B64(unsigned __int16 *a1, unsigned int a2, void *a3)
{
  uint64_t v3 = *(void *)(a3[4] - 8);
  unint64_t v4 = (((*(void *)(*(void *)(a3[2] - 8) + 64) + *(unsigned __int8 *)(*(void *)(a3[3] - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(a3[3] - 8) + 80))
      + *(void *)(*(void *)(a3[3] - 8) + 64)
      + *(unsigned __int8 *)(v3 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(void *)(v3 + 64);
  if (!*(_DWORD *)(v3 + 84)) {
    ++v5;
  }
  unint64_t v6 = v5 + v4;
  if (v6 <= 0x28) {
    unint64_t v6 = 40;
  }
  char v7 = 8 * v6;
  if (v6 > 3)
  {
    int v8 = 4;
LABEL_7:
    char v9 = 8;
    goto LABEL_8;
  }
  unsigned int v11 = ((1 << v7) + 1) >> v7;
  if (v11 > 0xFFFC) {
    goto LABEL_14;
  }
  int v8 = v11 + 3;
  if (v11 <= 0xFC) {
    goto LABEL_7;
  }
  char v9 = 16;
LABEL_8:
  unsigned int v10 = (1 << v9) - v8;
  if ((v10 & 0x80000000) == 0)
  {
    if (v6 > 3) {
      goto LABEL_18;
    }
    goto LABEL_15;
  }
LABEL_14:
  unsigned int v10 = 0x7FFFFFFF;
  if (v6 > 3)
  {
LABEL_18:
    uint64_t v13 = 1;
    goto LABEL_19;
  }
LABEL_15:
  unsigned int v12 = ((1 << v7) + 1) >> v7;
  uint64_t v13 = 2;
  if (v12 > 0xFFFC) {
    uint64_t v13 = 4;
  }
  if (v12 <= 0xFC) {
    goto LABEL_18;
  }
LABEL_19:
  if (!a2) {
    return 0;
  }
  if (v10 < a2)
  {
    unint64_t v14 = ((v6 + v13 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
    uint64_t v15 = v14 & 0xFFFFFFF8;
    if ((v14 & 0xFFFFFFF8) != 0) {
      unsigned int v16 = 2;
    }
    else {
      unsigned int v16 = a2 - v10 + 1;
    }
    if (v16 >= 0x10000) {
      unsigned int v17 = 4;
    }
    else {
      unsigned int v17 = 2;
    }
    if (v16 < 0x100) {
      unsigned int v17 = 1;
    }
    if (v16 >= 2) {
      uint64_t v18 = v17;
    }
    else {
      uint64_t v18 = 0;
    }
    switch(v18)
    {
      case 1:
        int v19 = *((unsigned __int8 *)a1 + v14);
        if (!v19) {
          break;
        }
        goto LABEL_36;
      case 2:
        int v19 = *(unsigned __int16 *)((char *)a1 + v14);
        if (v19) {
          goto LABEL_36;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x21CAE5070);
      case 4:
        int v19 = *(_DWORD *)((char *)a1 + v14);
        if (!v19) {
          break;
        }
LABEL_36:
        int v20 = v19 - 1;
        if (v15)
        {
          int v20 = 0;
          int v21 = *(_DWORD *)a1;
        }
        else
        {
          int v21 = 0;
        }
        return v10 + (v21 | v20) + 1;
      default:
        break;
    }
  }
  if (!v10) {
    return 0;
  }
  if (v6 > 3)
  {
    int v22 = 4;
LABEL_42:
    char v23 = 8;
    goto LABEL_43;
  }
  unsigned int v28 = ((1 << v7) + 1) >> v7;
  if (v28 > 0xFFFC)
  {
LABEL_53:
    unsigned int v24 = 0x7FFFFFFF;
    if (v6 > 3) {
      goto LABEL_45;
    }
    goto LABEL_54;
  }
  int v22 = v28 + 3;
  if (v28 <= 0xFC) {
    goto LABEL_42;
  }
  char v23 = 16;
LABEL_43:
  unsigned int v24 = (1 << v23) - v22;
  if ((v24 & 0x80000000) != 0) {
    goto LABEL_53;
  }
  if (v6 > 3)
  {
LABEL_45:
    int v25 = 4;
LABEL_46:
    char v26 = 8;
    goto LABEL_47;
  }
LABEL_54:
  unsigned int v29 = ((1 << v7) + 1) >> v7;
  if (v29 > 0xFFFC)
  {
LABEL_57:
    if (v24 != 0x7FFFFFFF) {
      return 0;
    }
    goto LABEL_58;
  }
  int v25 = v29 + 3;
  if (v29 <= 0xFC) {
    goto LABEL_46;
  }
  char v26 = 16;
LABEL_47:
  int v27 = (1 << v26) - v25;
  if (v27 < 0) {
    goto LABEL_57;
  }
  if (v27 != v24) {
    return 0;
  }
LABEL_58:
  if (v6 > 3)
  {
    int v30 = 4;
LABEL_60:
    char v31 = 8;
    goto LABEL_61;
  }
  unsigned int v33 = ((1 << v7) + 1) >> v7;
  if (v33 > 0xFFFC) {
    goto LABEL_67;
  }
  int v30 = v33 + 3;
  if (v33 <= 0xFC) {
    goto LABEL_60;
  }
  char v31 = 16;
LABEL_61:
  unsigned int v32 = (1 << v31) - v30;
  if ((v32 & 0x80000000) == 0)
  {
    if (v6 > 3) {
      goto LABEL_71;
    }
    goto LABEL_68;
  }
LABEL_67:
  unsigned int v32 = 0x7FFFFFFF;
  if (v6 > 3)
  {
LABEL_71:
    uint64_t v35 = 1;
    goto LABEL_72;
  }
LABEL_68:
  unsigned int v34 = ((1 << v7) + 1) >> v7;
  uint64_t v35 = 2;
  if (v34 > 0xFFFC) {
    uint64_t v35 = 4;
  }
  if (v34 <= 0xFC) {
    goto LABEL_71;
  }
LABEL_72:
  if (!v24) {
    return 0;
  }
  unsigned int v36 = v24 - v32;
  if (v24 <= v32) {
    goto LABEL_93;
  }
  unint64_t v37 = v35 + v6;
  char v38 = 8 * (v35 + v6);
  if (v37 > 3)
  {
LABEL_75:
    int v39 = *((unsigned __int8 *)a1 + v37);
    goto LABEL_84;
  }
  unsigned int v41 = ((v36 + ~(-1 << v38)) >> v38) + 1;
  if (HIWORD(v41))
  {
    int v39 = *(_DWORD *)((char *)a1 + v37);
  }
  else
  {
    if (v41 <= 0xFF)
    {
      if (v41 < 2)
      {
LABEL_93:
        if (v32)
        {
          if (v6 <= 3)
          {
            unsigned int v51 = ((1 << v7) + 1) >> v7;
            if (v51 > 0xFFFC)
            {
              unsigned int v46 = *(_DWORD *)((char *)a1 + v6);
              unsigned int v47 = ~v46;
LABEL_103:
              unsigned int v50 = 0x7FFFFFFF;
LABEL_104:
              if (v50 > v47) {
                return -v46;
              }
              else {
                return 0;
              }
            }
            int v49 = v51 + 3;
            if (v51 > 0xFC)
            {
              int v53 = *(unsigned __int16 *)((char *)a1 + v6);
              unsigned int v46 = v53 | 0xFFFF0000;
              unsigned int v47 = v53 ^ 0xFFFF;
              char v48 = 16;
            }
            else
            {
              int v52 = *((unsigned __int8 *)a1 + v6);
              unsigned int v46 = v52 | 0xFFFFFF00;
              unsigned int v47 = v52 ^ 0xFF;
              char v48 = 8;
            }
          }
          else
          {
            int v45 = *((unsigned __int8 *)a1 + v6);
            unsigned int v46 = v45 | 0xFFFFFF00;
            unsigned int v47 = v45 ^ 0xFF;
            char v48 = 8;
            int v49 = 4;
          }
          unsigned int v50 = (1 << v48) - v49;
          if ((v50 & 0x80000000) == 0) {
            goto LABEL_104;
          }
          goto LABEL_103;
        }
        return 0;
      }
      goto LABEL_75;
    }
    int v39 = *(unsigned __int16 *)((char *)a1 + v37);
  }
LABEL_84:
  if (!v39) {
    goto LABEL_93;
  }
  int v42 = (v39 - 1) << v38;
  if (v37 > 3) {
    int v42 = 0;
  }
  if (v37)
  {
    if (v37 <= 3) {
      int v43 = v37;
    }
    else {
      int v43 = 4;
    }
    switch(v43)
    {
      case 2:
        int v44 = *a1;
        break;
      case 3:
        int v44 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        int v44 = *(_DWORD *)a1;
        break;
      default:
        int v44 = *(unsigned __int8 *)a1;
        break;
    }
  }
  else
  {
    int v44 = 0;
  }
  return v32 + (v44 | v42) + 1;
}

void sub_21CAE5094(char *a1, unsigned int a2, unsigned int a3, void *a4)
{
  uint64_t v5 = *(void *)(a4[4] - 8);
  unint64_t v6 = (((*(void *)(*(void *)(a4[2] - 8) + 64) + *(unsigned __int8 *)(*(void *)(a4[3] - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(a4[3] - 8) + 80))
      + *(void *)(*(void *)(a4[3] - 8) + 64)
      + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v5 + 64);
  if (!*(_DWORD *)(v5 + 84)) {
    ++v7;
  }
  unint64_t v8 = v7 + v6;
  if (v8 <= 0x28) {
    unint64_t v8 = 40;
  }
  char v9 = 8 * v8;
  if (v8 > 3)
  {
    int v10 = 4;
LABEL_7:
    char v11 = 8;
    goto LABEL_8;
  }
  unsigned int v13 = ((1 << v9) + 1) >> v9;
  if (v13 > 0xFFFC) {
    goto LABEL_14;
  }
  int v10 = v13 + 3;
  if (v13 <= 0xFC) {
    goto LABEL_7;
  }
  char v11 = 16;
LABEL_8:
  unsigned int v12 = (1 << v11) - v10;
  if ((v12 & 0x80000000) == 0)
  {
    if (v8 > 3) {
      goto LABEL_18;
    }
    goto LABEL_15;
  }
LABEL_14:
  unsigned int v12 = 0x7FFFFFFF;
  if (v8 > 3)
  {
LABEL_18:
    uint64_t v15 = 1;
    goto LABEL_19;
  }
LABEL_15:
  unsigned int v14 = ((1 << v9) + 1) >> v9;
  uint64_t v15 = 2;
  if (v14 > 0xFFFC) {
    uint64_t v15 = 4;
  }
  if (v14 <= 0xFC) {
    goto LABEL_18;
  }
LABEL_19:
  size_t v16 = ((v8 + v15 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v12 < a3)
  {
    if (((v8 + v15 + 7) & 0xFFFFFFF8) == 0xFFFFFFF8) {
      unsigned int v17 = a3 - v12 + 1;
    }
    else {
      unsigned int v17 = 2;
    }
    if (v17 >= 0x10000) {
      int v18 = 4;
    }
    else {
      int v18 = 2;
    }
    if (v17 < 0x100) {
      int v18 = 1;
    }
    if (v17 >= 2) {
      int v19 = v18;
    }
    else {
      int v19 = 0;
    }
    int v20 = a2 - v12;
    if (a2 <= v12) {
      goto LABEL_32;
    }
LABEL_36:
    if (v16) {
      int v21 = 1;
    }
    else {
      int v21 = v20;
    }
    if (v16)
    {
      int v22 = ~v12 + a2;
      bzero(a1, v16);
      *(_DWORD *)a1 = v22;
    }
    switch(v19)
    {
      case 1:
LABEL_42:
        a1[v16] = v21;
        break;
      case 2:
LABEL_113:
        *(_WORD *)&a1[v16] = v21;
        break;
      case 3:
LABEL_116:
        __break(1u);
        JUMPOUT(0x21CAE5664);
      case 4:
LABEL_114:
        *(_DWORD *)&a1[v16] = v21;
        break;
      default:
        return;
    }
    return;
  }
  int v19 = 0;
  int v20 = a2 - v12;
  if (a2 > v12) {
    goto LABEL_36;
  }
LABEL_32:
  switch(v19)
  {
    case 1:
      a1[v16] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_45;
    case 2:
      *(_WORD *)&a1[v16] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_45;
    case 3:
      goto LABEL_116;
    case 4:
      *(_DWORD *)&a1[v16] = 0;
      goto LABEL_44;
    default:
LABEL_44:
      if (!a2) {
        return;
      }
LABEL_45:
      if (v8 > 3)
      {
        int v23 = 4;
LABEL_47:
        char v24 = 8;
        goto LABEL_48;
      }
      unsigned int v32 = ((1 << v9) + 1) >> v9;
      if (v32 > 0xFFFC)
      {
LABEL_63:
        unsigned int v25 = 0x7FFFFFFF;
        if (v8 > 3) {
          goto LABEL_50;
        }
        goto LABEL_64;
      }
      int v23 = v32 + 3;
      if (v32 <= 0xFC) {
        goto LABEL_47;
      }
      char v24 = 16;
LABEL_48:
      unsigned int v25 = (1 << v24) - v23;
      if ((v25 & 0x80000000) != 0) {
        goto LABEL_63;
      }
      if (v8 > 3)
      {
LABEL_50:
        int v26 = 4;
LABEL_51:
        char v27 = 8;
        goto LABEL_52;
      }
LABEL_64:
      unsigned int v33 = ((1 << v9) + 1) >> v9;
      if (v33 > 0xFFFC) {
        goto LABEL_67;
      }
      int v26 = v33 + 3;
      if (v33 <= 0xFC) {
        goto LABEL_51;
      }
      char v27 = 16;
LABEL_52:
      int v28 = (1 << v27) - v26;
      if ((v28 & 0x80000000) == 0)
      {
        if (v28 == v25) {
          goto LABEL_54;
        }
        goto LABEL_68;
      }
LABEL_67:
      if (v25 == 0x7FFFFFFF)
      {
LABEL_54:
        if (v8 <= 3)
        {
          unsigned int v36 = ((1 << v9) + 1) >> v9;
          if (v36 > 0xFFFC) {
            goto LABEL_79;
          }
          int v29 = v36 + 3;
          if (v36 > 0xFC)
          {
            char v30 = 16;
LABEL_57:
            unsigned int v31 = (1 << v30) - v29;
            if ((v31 & 0x80000000) == 0)
            {
              if (v8 > 3) {
                goto LABEL_83;
              }
              goto LABEL_80;
            }
LABEL_79:
            unsigned int v31 = 0x7FFFFFFF;
            if (v8 > 3)
            {
LABEL_83:
              uint64_t v38 = 1;
LABEL_84:
              size_t v16 = v38 + v8;
              BOOL v39 = v25 >= v31;
              unsigned int v40 = v25 - v31;
              if (v40 != 0 && v39)
              {
                if (v16 <= 3)
                {
                  unsigned int v43 = ((v40 + ~(-1 << (8 * v16))) >> (8 * v16)) + 1;
                  if (HIWORD(v43))
                  {
                    int v41 = 4;
                  }
                  else if (v43 >= 0x100)
                  {
                    int v41 = 2;
                  }
                  else
                  {
                    int v41 = v43 > 1;
                  }
                }
                else
                {
                  int v41 = 1;
                }
              }
              else
              {
                int v41 = 0;
              }
              if (v31 < a2)
              {
                unsigned int v42 = ~v31 + a2;
                if (v16 < 4)
                {
                  int v21 = (v42 >> (8 * v16)) + 1;
                  if (v16)
                  {
                    int v44 = v42 & ~(-1 << (8 * v16));
                    bzero(a1, v16);
                    if (v16 == 3)
                    {
                      *(_WORD *)a1 = v44;
                      a1[2] = BYTE2(v44);
                    }
                    else if (v16 == 2)
                    {
                      *(_WORD *)a1 = v44;
                    }
                    else
                    {
                      *a1 = v44;
                    }
                  }
                }
                else
                {
                  bzero(a1, v16);
                  *(_DWORD *)a1 = v42;
                  int v21 = 1;
                }
                switch(v41)
                {
                  case 1:
                    goto LABEL_42;
                  case 2:
                    goto LABEL_113;
                  case 3:
                    goto LABEL_116;
                  case 4:
                    goto LABEL_114;
                  default:
                    return;
                }
              }
              switch(v41)
              {
                case 1:
                  a1[v16] = 0;
                  goto LABEL_103;
                case 2:
                  *(_WORD *)&a1[v16] = 0;
                  goto LABEL_103;
                case 3:
                  goto LABEL_116;
                case 4:
                  *(_DWORD *)&a1[v16] = 0;
                  goto LABEL_103;
                default:
LABEL_103:
                  int v45 = -a2;
                  if (v8 > 3) {
                    goto LABEL_106;
                  }
                  unsigned int v46 = ((1 << v9) + 1) >> v9;
                  if (v46 > 0xFFFC)
                  {
                    *(_DWORD *)&a1[v8] = v45;
                  }
                  else if (v46 > 0xFC)
                  {
                    *(_WORD *)&a1[v8] = v45;
                  }
                  else
                  {
LABEL_106:
                    a1[v8] = v45;
                  }
                  break;
              }
              return;
            }
LABEL_80:
            unsigned int v37 = ((1 << v9) + 1) >> v9;
            uint64_t v38 = 2;
            if (v37 > 0xFFFC) {
              uint64_t v38 = 4;
            }
            if (v37 > 0xFC) {
              goto LABEL_84;
            }
            goto LABEL_83;
          }
        }
        else
        {
          int v29 = 4;
        }
        char v30 = 8;
        goto LABEL_57;
      }
LABEL_68:
      if (v8 > 3) {
        goto LABEL_72;
      }
      unsigned int v34 = ((1 << v9) + 1) >> v9;
      uint64_t v35 = 2;
      if (v34 > 0xFFFC) {
        uint64_t v35 = 4;
      }
      if (v34 <= 0xFC) {
LABEL_72:
      }
        uint64_t v35 = 1;
      *(void *)((unint64_t)&a1[v8 + 7 + v35] & 0xFFFFFFFFFFFFFFF8) = a2 - 1;
      return;
  }
}

void *sub_21CAE56B4(char *__dst, char *__src, void *a3)
{
  unint64_t v4 = __dst;
  uint64_t v5 = *(void *)(a3[2] - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  uint64_t v7 = a3[3];
  uint64_t v8 = a3[4];
  uint64_t v9 = *(void *)(v7 - 8);
  uint64_t v10 = *(_DWORD *)(v9 + 80);
  uint64_t v11 = v6 + v10;
  uint64_t v12 = *(void *)(v9 + 64);
  uint64_t v13 = *(void *)(v8 - 8);
  uint64_t v14 = *(_DWORD *)(v13 + 80);
  uint64_t v15 = (v12 + v14 + ((v6 + v10) & ~v10)) & ~v14;
  if (*(_DWORD *)(v13 + 84)) {
    uint64_t v16 = *(void *)(*(void *)(v8 - 8) + 64);
  }
  else {
    uint64_t v16 = *(void *)(*(void *)(v8 - 8) + 64) + 1;
  }
  if ((unint64_t)(v16 + v15) <= 0x28) {
    uint64_t v17 = 40;
  }
  else {
    uint64_t v17 = v16 + v15;
  }
  if (v17 > 3) {
    goto LABEL_11;
  }
  unsigned int v18 = ((1 << (8 * v17)) + 1) >> (8 * v17);
  uint64_t v19 = 2;
  if (v18 > 0xFFFC) {
    uint64_t v19 = 4;
  }
  if (v18 <= 0xFC) {
LABEL_11:
  }
    uint64_t v19 = 1;
  unint64_t v20 = v19 + v17;
  int v21 = *(_DWORD *)(v9 + 80) | *(_DWORD *)(v5 + 80) | *(_DWORD *)(v13 + 80);
  if (v20 > 0x18 || (v21 & 0x1000F8) != 0)
  {
    uint64_t v23 = *(void *)__src;
    *unint64_t v4 = *(void *)__src;
    unint64_t v4 = (void *)(v23 + (((v21 & 0xF8 | 7u) + 16) & ~(unint64_t)(v21 & 0xF8 | 7u)));
    swift_retain();
    return v4;
  }
  if (v17 > 3) {
    goto LABEL_21;
  }
  unsigned int v25 = ((1 << (8 * v17)) + 1) >> (8 * v17);
  if (v25 > 0xFFFC)
  {
    unsigned int v26 = *(_DWORD *)&__src[v17];
    unsigned int v27 = v26 - 3;
    if (v26 < 3) {
      goto LABEL_39;
    }
    goto LABEL_26;
  }
  if (v25 > 0xFC)
  {
    unsigned int v26 = *(unsigned __int16 *)&__src[v17];
    unsigned int v27 = v26 - 3;
    if (v26 < 3) {
      goto LABEL_39;
    }
  }
  else
  {
LABEL_21:
    unsigned int v26 = __src[v17];
    unsigned int v27 = v26 - 3;
    if (v26 < 3) {
      goto LABEL_39;
    }
  }
LABEL_26:
  if (v17 <= 3) {
    uint64_t v28 = v17;
  }
  else {
    uint64_t v28 = 4;
  }
  switch(v28)
  {
    case 1:
      int v29 = *__src;
      if (v17 < 4) {
        goto LABEL_37;
      }
      goto LABEL_38;
    case 2:
      int v29 = *(unsigned __int16 *)__src;
      if (v17 >= 4) {
        goto LABEL_38;
      }
      goto LABEL_37;
    case 3:
      int v29 = *(unsigned __int16 *)__src | (__src[2] << 16);
      if (v17 >= 4) {
        goto LABEL_38;
      }
      goto LABEL_37;
    case 4:
      int v29 = *(_DWORD *)__src;
      if (v17 < 4) {
LABEL_37:
      }
        v29 |= v27 << (8 * v17);
LABEL_38:
      unsigned int v26 = v29 + 3;
      break;
    default:
      break;
  }
LABEL_39:
  switch(v26)
  {
    case 2u:
      unsigned int v34 = (void *)*((void *)__src + 1);
      *(void *)__dst = *(void *)__src;
      swift_retain();
      id v35 = v34;
      v4[1] = v34;
      if (v17 <= 3)
      {
        unsigned int v36 = ((1 << (8 * v17)) + 1) >> (8 * v17);
        if (v36 > 0xFFFC)
        {
          int v38 = 2;
          goto LABEL_64;
        }
        if (v36 > 0xFC)
        {
          LOWORD(v38) = 2;
          goto LABEL_67;
        }
      }
      *((unsigned char *)v4 + v17) = 2;
      return v4;
    case 1u:
      uint64_t v37 = *((void *)__src + 1);
      *(void *)__dst = *(void *)__src;
      *((void *)__dst + 1) = v37;
      *((void *)__dst + 2) = *((void *)__src + 2);
      *(_OWORD *)(__dst + 24) = *(_OWORD *)(__src + 24);
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      if (v17 > 3)
      {
LABEL_52:
        *((unsigned char *)v4 + v17) = 1;
        return v4;
      }
      int v38 = 1;
      unsigned int v39 = ((1 << (8 * v17)) + 1) >> (8 * v17);
      if (v39 <= 0xFFFC)
      {
        if (v39 <= 0xFC) {
          goto LABEL_52;
        }
LABEL_67:
        *(_WORD *)((char *)v4 + v17) = v38;
        return v4;
      }
LABEL_64:
      *(_DWORD *)((char *)v4 + v17) = v38;
      return v4;
    case 0u:
      size_t __n = v16;
      uint64_t v44 = ~v10;
      (*(void (**)(char *, char *))(v5 + 16))(__dst, __src);
      uint64_t v45 = v8;
      unint64_t v30 = ((unint64_t)v4 + v11) & v44;
      unint64_t v31 = (unint64_t)&__src[v11] & v44;
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v9 + 16))(v30, v31, v7);
      unsigned int v32 = (void *)((v30 + v12 + v14) & ~v14);
      unsigned int v33 = (const void *)((v31 + v12 + v14) & ~v14);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v13 + 48))(v33, 1, v45))
      {
        memcpy(v32, v33, __n);
        if (v17 > 3) {
          goto LABEL_62;
        }
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v13 + 16))(v32, v33, v45);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v32, 0, 1, v45);
        if (v17 > 3)
        {
LABEL_62:
          *((unsigned char *)v4 + v17) = 0;
          return v4;
        }
      }
      unsigned int v42 = ((1 << (8 * v17)) + 1) >> (8 * v17);
      if (v42 > 0xFFFC)
      {
        *(_DWORD *)((char *)v4 + v17) = 0;
        return v4;
      }
      if (v42 > 0xFC)
      {
        *(_WORD *)((char *)v4 + v17) = 0;
        return v4;
      }
      goto LABEL_62;
  }
  if (v17 > 3) {
    goto LABEL_57;
  }
  unsigned int v40 = ((1 << (8 * v17)) + 1) >> (8 * v17);
  uint64_t v41 = 2;
  if (v40 > 0xFFFC) {
    uint64_t v41 = 4;
  }
  if (v40 <= 0xFC) {
LABEL_57:
  }
    uint64_t v41 = 1;
  memcpy(__dst, __src, v41 + v17);
  return v4;
}

id *sub_21CAE5C24(id *a1, unsigned __int8 *a2, void *a3)
{
  if (a1 == (id *)a2) {
    return a1;
  }
  uint64_t v5 = a3[2];
  uint64_t v42 = *(void *)(v5 - 8);
  uint64_t v6 = *(void *)(v42 + 64);
  uint64_t v44 = a3[3];
  uint64_t v7 = *(void *)(v44 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = v6 + v8;
  uint64_t v10 = *(void *)(a3[4] - 8);
  uint64_t v11 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v43 = *(void *)(v7 + 64);
  uint64_t v12 = (v43 + v11 + ((v6 + v8) & ~v8)) & ~v11;
  if (*(_DWORD *)(v10 + 84)) {
    uint64_t v13 = *(void *)(v10 + 64);
  }
  else {
    uint64_t v13 = *(void *)(v10 + 64) + 1;
  }
  if ((unint64_t)(v13 + v12) <= 0x28) {
    uint64_t v14 = 40;
  }
  else {
    uint64_t v14 = v13 + v12;
  }
  char v15 = 8 * v14;
  if (v14 > 3) {
    goto LABEL_11;
  }
  unsigned int v16 = ((1 << v15) + 1) >> v15;
  if (v16 > 0xFFFC)
  {
    unsigned int v17 = *(_DWORD *)((char *)a1 + v14);
    unsigned int v18 = v17 - 3;
    if (v17 < 3) {
      goto LABEL_29;
    }
    goto LABEL_16;
  }
  if (v16 > 0xFC)
  {
    unsigned int v17 = *(unsigned __int16 *)((char *)a1 + v14);
    unsigned int v18 = v17 - 3;
    if (v17 < 3) {
      goto LABEL_29;
    }
  }
  else
  {
LABEL_11:
    unsigned int v17 = *((unsigned __int8 *)a1 + v14);
    unsigned int v18 = v17 - 3;
    if (v17 < 3) {
      goto LABEL_29;
    }
  }
LABEL_16:
  if (v14 <= 3) {
    uint64_t v19 = v14;
  }
  else {
    uint64_t v19 = 4;
  }
  switch(v19)
  {
    case 1:
      int v20 = *(unsigned __int8 *)a1;
      if (v14 < 4) {
        goto LABEL_27;
      }
      goto LABEL_28;
    case 2:
      int v20 = *(unsigned __int16 *)a1;
      if (v14 >= 4) {
        goto LABEL_28;
      }
      goto LABEL_27;
    case 3:
      int v20 = *(unsigned __int16 *)a1 | (*((unsigned __int8 *)a1 + 2) << 16);
      if (v14 >= 4) {
        goto LABEL_28;
      }
      goto LABEL_27;
    case 4:
      int v20 = *(_DWORD *)a1;
      if (v14 < 4) {
LABEL_27:
      }
        v20 |= v18 << v15;
LABEL_28:
      unsigned int v17 = v20 + 3;
      break;
    default:
      break;
  }
LABEL_29:
  size_t __n = v13;
  uint64_t v40 = ~v8;
  uint64_t v41 = ~v11;
  uint64_t v45 = a3[4];
  switch(v17)
  {
    case 2u:
      swift_release();

      break;
    case 1u:
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      if (v14 > 3) {
        goto LABEL_41;
      }
      goto LABEL_39;
    case 0u:
      (*(void (**)(id *, uint64_t))(v42 + 8))(a1, v5);
      (*(void (**)(unint64_t, uint64_t))(v7 + 8))(((unint64_t)a1 + v9) & v40, v44);
      unint64_t v21 = ((((unint64_t)a1 + v9) & v40) + v43 + v11) & v41;
      if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v10 + 48))(v21, 1, v45))
      {
        (*(void (**)(unint64_t, uint64_t))(v10 + 8))(v21, v45);
        if (v14 > 3) {
          goto LABEL_41;
        }
        goto LABEL_39;
      }
      break;
  }
  if (v14 > 3)
  {
LABEL_41:
    unsigned int v23 = a2[v14];
    unsigned int v24 = v23 - 3;
    if (v23 < 3) {
      goto LABEL_59;
    }
    goto LABEL_46;
  }
LABEL_39:
  unsigned int v22 = ((1 << v15) + 1) >> v15;
  if (v22 > 0xFFFC)
  {
    unsigned int v23 = *(_DWORD *)&a2[v14];
    unsigned int v24 = v23 - 3;
    if (v23 < 3) {
      goto LABEL_59;
    }
    goto LABEL_46;
  }
  if (v22 <= 0xFC) {
    goto LABEL_41;
  }
  unsigned int v23 = *(unsigned __int16 *)&a2[v14];
  unsigned int v24 = v23 - 3;
  if (v23 < 3) {
    goto LABEL_59;
  }
LABEL_46:
  if (v14 <= 3) {
    uint64_t v25 = v14;
  }
  else {
    uint64_t v25 = 4;
  }
  switch(v25)
  {
    case 1:
      int v26 = *a2;
      if (v14 < 4) {
        goto LABEL_57;
      }
      goto LABEL_58;
    case 2:
      int v26 = *(unsigned __int16 *)a2;
      if (v14 >= 4) {
        goto LABEL_58;
      }
      goto LABEL_57;
    case 3:
      int v26 = *(unsigned __int16 *)a2 | (a2[2] << 16);
      if (v14 >= 4) {
        goto LABEL_58;
      }
      goto LABEL_57;
    case 4:
      int v26 = *(_DWORD *)a2;
      if (v14 < 4) {
LABEL_57:
      }
        v26 |= v24 << v15;
LABEL_58:
      unsigned int v23 = v26 + 3;
      break;
    default:
      break;
  }
LABEL_59:
  switch(v23)
  {
    case 2u:
      *a1 = *(id *)a2;
      unint64_t v30 = (void *)*((void *)a2 + 1);
      swift_retain();
      id v31 = v30;
      a1[1] = v30;
      if (v14 <= 3)
      {
        unsigned int v32 = ((1 << v15) + 1) >> v15;
        if (v32 > 0xFFFC)
        {
          int v33 = 2;
          goto LABEL_84;
        }
        if (v32 > 0xFC)
        {
          LOWORD(v33) = 2;
          goto LABEL_87;
        }
      }
      *((unsigned char *)a1 + v14) = 2;
      return a1;
    case 1u:
      *a1 = *(id *)a2;
      a1[1] = (id)*((void *)a2 + 1);
      a1[2] = (id)*((void *)a2 + 2);
      a1[3] = (id)*((void *)a2 + 3);
      a1[4] = (id)*((void *)a2 + 4);
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      if (v14 > 3)
      {
LABEL_72:
        *((unsigned char *)a1 + v14) = 1;
        return a1;
      }
      int v33 = 1;
      unsigned int v34 = ((1 << v15) + 1) >> v15;
      if (v34 <= 0xFFFC)
      {
        if (v34 <= 0xFC) {
          goto LABEL_72;
        }
LABEL_87:
        *(_WORD *)((char *)a1 + v14) = v33;
        return a1;
      }
LABEL_84:
      *(_DWORD *)((char *)a1 + v14) = v33;
      return a1;
    case 0u:
      (*(void (**)(id *, unsigned __int8 *, uint64_t))(v42 + 16))(a1, a2, v5);
      unint64_t v27 = (unint64_t)&a2[v9] & v40;
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v7 + 16))(((unint64_t)a1 + v9) & v40, v27, v44);
      uint64_t v28 = (void *)(((((unint64_t)a1 + v9) & v40) + v43 + v11) & v41);
      int v29 = (const void *)((v27 + v43 + v11) & v41);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v29, 1, v45))
      {
        memcpy(v28, v29, __n);
        if (v14 > 3) {
          goto LABEL_82;
        }
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v10 + 16))(v28, v29, v45);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v28, 0, 1, v45);
        if (v14 > 3)
        {
LABEL_82:
          *((unsigned char *)a1 + v14) = 0;
          return a1;
        }
      }
      unsigned int v37 = ((1 << v15) + 1) >> v15;
      if (v37 > 0xFFFC)
      {
        *(_DWORD *)((char *)a1 + v14) = 0;
        return a1;
      }
      if (v37 > 0xFC)
      {
        *(_WORD *)((char *)a1 + v14) = 0;
        return a1;
      }
      goto LABEL_82;
  }
  if (v14 > 3) {
    goto LABEL_77;
  }
  unsigned int v35 = ((1 << v15) + 1) >> v15;
  uint64_t v36 = 2;
  if (v35 > 0xFFFC) {
    uint64_t v36 = 4;
  }
  if (v35 <= 0xFC) {
LABEL_77:
  }
    uint64_t v36 = 1;
  memcpy(a1, a2, v36 + v14);
  return a1;
}

char *sub_21CAE62D0(char *__dst, _OWORD *__src, void *a3)
{
  unint64_t v4 = __dst;
  uint64_t v6 = a3[3];
  uint64_t v5 = a3[4];
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = *(void *)(*(void *)(a3[2] - 8) + 64) + v8;
  uint64_t v10 = *(void *)(v5 - 8);
  uint64_t v11 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v12 = (*(void *)(v7 + 64) + v11 + (v9 & ~v8)) & ~v11;
  if (*(_DWORD *)(v10 + 84)) {
    uint64_t v13 = *(void *)(*(void *)(v5 - 8) + 64);
  }
  else {
    uint64_t v13 = *(void *)(*(void *)(v5 - 8) + 64) + 1;
  }
  if ((unint64_t)(v13 + v12) <= 0x28) {
    uint64_t v14 = 40;
  }
  else {
    uint64_t v14 = v13 + v12;
  }
  if (v14 > 3) {
    goto LABEL_10;
  }
  unsigned int v15 = ((1 << (8 * v14)) + 1) >> (8 * v14);
  if (v15 > 0xFFFC)
  {
    unsigned int v16 = *(_DWORD *)((char *)__src + v14);
    unsigned int v17 = v16 - 3;
    if (v16 < 3) {
      goto LABEL_25;
    }
    goto LABEL_15;
  }
  if (v15 > 0xFC)
  {
    unsigned int v16 = *(unsigned __int16 *)((char *)__src + v14);
    unsigned int v17 = v16 - 3;
    if (v16 < 3) {
      goto LABEL_25;
    }
  }
  else
  {
LABEL_10:
    unsigned int v16 = *((unsigned __int8 *)__src + v14);
    unsigned int v17 = v16 - 3;
    if (v16 < 3) {
      goto LABEL_25;
    }
  }
LABEL_15:
  if (v14 <= 3) {
    uint64_t v18 = v14;
  }
  else {
    uint64_t v18 = 4;
  }
  switch(v18)
  {
    case 1:
      int v19 = *(unsigned __int8 *)__src;
      goto LABEL_23;
    case 2:
      int v19 = *(unsigned __int16 *)__src;
      goto LABEL_23;
    case 3:
      int v19 = *(unsigned __int16 *)__src | (*((unsigned __int8 *)__src + 2) << 16);
      goto LABEL_23;
    case 4:
      int v19 = *(_DWORD *)__src;
LABEL_23:
      int v20 = (v19 | (v17 << (8 * v14))) + 3;
      unsigned int v16 = v19 + 3;
      if (v14 < 4) {
        unsigned int v16 = v20;
      }
      break;
    default:
      break;
  }
LABEL_25:
  if (v16 == 2)
  {
    *(_OWORD *)__dst = *__src;
    if (v14 <= 3)
    {
      unsigned int v26 = ((1 << (8 * v14)) + 1) >> (8 * v14);
      if (v26 > 0xFFFC)
      {
        int v28 = 2;
        goto LABEL_51;
      }
      if (v26 > 0xFC)
      {
        LOWORD(v28) = 2;
        goto LABEL_54;
      }
    }
    __dst[v14] = 2;
    return v4;
  }
  if (v16 == 1)
  {
    long long v27 = __src[1];
    *(_OWORD *)__dst = *__src;
    *((_OWORD *)__dst + 1) = v27;
    *((void *)__dst + 4) = *((void *)__src + 4);
    if (v14 > 3)
    {
LABEL_37:
      __dst[v14] = 1;
      return v4;
    }
    int v28 = 1;
    unsigned int v29 = ((1 << (8 * v14)) + 1) >> (8 * v14);
    if (v29 <= 0xFFFC)
    {
      if (v29 <= 0xFC) {
        goto LABEL_37;
      }
LABEL_54:
      *(_WORD *)&__dst[v14] = v28;
      return v4;
    }
LABEL_51:
    *(_DWORD *)&__dst[v14] = v28;
    return v4;
  }
  if (v16)
  {
    if (v14 > 3) {
      goto LABEL_42;
    }
    unsigned int v30 = ((1 << (8 * v14)) + 1) >> (8 * v14);
    uint64_t v31 = 2;
    if (v30 > 0xFFFC) {
      uint64_t v31 = 4;
    }
    if (v30 <= 0xFC) {
LABEL_42:
    }
      uint64_t v31 = 1;
    memcpy(__dst, __src, v31 + v14);
  }
  else
  {
    size_t __n = v13;
    uint64_t v36 = *(void *)(v7 + 64);
    uint64_t v37 = a3[4];
    uint64_t v21 = ~v8;
    (*(void (**)(char *, _OWORD *))(*(void *)(a3[2] - 8) + 32))(__dst, __src);
    unsigned int v35 = v4;
    unint64_t v22 = (unint64_t)&v4[v9] & v21;
    unint64_t v23 = ((unint64_t)__src + v9) & v21;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v7 + 32))(v22, v23, v6);
    unsigned int v24 = (void *)((v22 + v36 + v11) & ~v11);
    uint64_t v25 = (const void *)((v23 + v36 + v11) & ~v11);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v25, 1, v37))
    {
      memcpy(v24, v25, __n);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v24, v25, v37);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v24, 0, 1, v37);
    }
    unint64_t v4 = v35;
    if (v14 > 3) {
      goto LABEL_46;
    }
    unsigned int v32 = ((1 << (8 * v14)) + 1) >> (8 * v14);
    if (v32 > 0xFFFC)
    {
      *(_DWORD *)&v35[v14] = 0;
      return v4;
    }
    if (v32 <= 0xFC) {
LABEL_46:
    }
      v35[v14] = 0;
    else {
      *(_WORD *)&v35[v14] = 0;
    }
  }
  return v4;
}

id *sub_21CAE674C(id *a1, unsigned __int8 *a2, void *a3)
{
  if (a1 == (id *)a2) {
    return a1;
  }
  uint64_t v5 = a3[2];
  uint64_t v41 = *(void *)(v5 - 8);
  uint64_t v6 = *(void *)(v41 + 64);
  uint64_t v43 = a3[3];
  uint64_t v7 = *(void *)(v43 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = v6 + v8;
  uint64_t v10 = *(void *)(a3[4] - 8);
  uint64_t v11 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v42 = *(void *)(v7 + 64);
  uint64_t v12 = (v42 + v11 + ((v6 + v8) & ~v8)) & ~v11;
  if (*(_DWORD *)(v10 + 84)) {
    uint64_t v13 = *(void *)(v10 + 64);
  }
  else {
    uint64_t v13 = *(void *)(v10 + 64) + 1;
  }
  if ((unint64_t)(v13 + v12) <= 0x28) {
    uint64_t v14 = 40;
  }
  else {
    uint64_t v14 = v13 + v12;
  }
  char v15 = 8 * v14;
  if (v14 > 3) {
    goto LABEL_11;
  }
  unsigned int v16 = ((1 << v15) + 1) >> v15;
  if (v16 > 0xFFFC)
  {
    unsigned int v17 = *(_DWORD *)((char *)a1 + v14);
    unsigned int v18 = v17 - 3;
    if (v17 < 3) {
      goto LABEL_29;
    }
    goto LABEL_16;
  }
  if (v16 > 0xFC)
  {
    unsigned int v17 = *(unsigned __int16 *)((char *)a1 + v14);
    unsigned int v18 = v17 - 3;
    if (v17 < 3) {
      goto LABEL_29;
    }
  }
  else
  {
LABEL_11:
    unsigned int v17 = *((unsigned __int8 *)a1 + v14);
    unsigned int v18 = v17 - 3;
    if (v17 < 3) {
      goto LABEL_29;
    }
  }
LABEL_16:
  if (v14 <= 3) {
    uint64_t v19 = v14;
  }
  else {
    uint64_t v19 = 4;
  }
  switch(v19)
  {
    case 1:
      int v20 = *(unsigned __int8 *)a1;
      if (v14 < 4) {
        goto LABEL_27;
      }
      goto LABEL_28;
    case 2:
      int v20 = *(unsigned __int16 *)a1;
      if (v14 >= 4) {
        goto LABEL_28;
      }
      goto LABEL_27;
    case 3:
      int v20 = *(unsigned __int16 *)a1 | (*((unsigned __int8 *)a1 + 2) << 16);
      if (v14 >= 4) {
        goto LABEL_28;
      }
      goto LABEL_27;
    case 4:
      int v20 = *(_DWORD *)a1;
      if (v14 < 4) {
LABEL_27:
      }
        v20 |= v18 << v15;
LABEL_28:
      unsigned int v17 = v20 + 3;
      break;
    default:
      break;
  }
LABEL_29:
  size_t __n = v13;
  uint64_t v39 = ~v8;
  uint64_t v40 = ~v11;
  uint64_t v44 = a3[4];
  switch(v17)
  {
    case 2u:
      swift_release();

      break;
    case 1u:
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      if (v14 > 3) {
        goto LABEL_41;
      }
      goto LABEL_39;
    case 0u:
      (*(void (**)(id *, uint64_t))(v41 + 8))(a1, v5);
      (*(void (**)(unint64_t, uint64_t))(v7 + 8))(((unint64_t)a1 + v9) & v39, v43);
      unint64_t v21 = ((((unint64_t)a1 + v9) & v39) + v42 + v11) & v40;
      if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v10 + 48))(v21, 1, v44))
      {
        (*(void (**)(unint64_t, uint64_t))(v10 + 8))(v21, v44);
        if (v14 > 3) {
          goto LABEL_41;
        }
        goto LABEL_39;
      }
      break;
  }
  if (v14 > 3)
  {
LABEL_41:
    unsigned int v23 = a2[v14];
    unsigned int v24 = v23 - 3;
    if (v23 < 3) {
      goto LABEL_59;
    }
    goto LABEL_46;
  }
LABEL_39:
  unsigned int v22 = ((1 << v15) + 1) >> v15;
  if (v22 > 0xFFFC)
  {
    unsigned int v23 = *(_DWORD *)&a2[v14];
    unsigned int v24 = v23 - 3;
    if (v23 < 3) {
      goto LABEL_59;
    }
    goto LABEL_46;
  }
  if (v22 <= 0xFC) {
    goto LABEL_41;
  }
  unsigned int v23 = *(unsigned __int16 *)&a2[v14];
  unsigned int v24 = v23 - 3;
  if (v23 < 3) {
    goto LABEL_59;
  }
LABEL_46:
  if (v14 <= 3) {
    uint64_t v25 = v14;
  }
  else {
    uint64_t v25 = 4;
  }
  switch(v25)
  {
    case 1:
      int v26 = *a2;
      if (v14 < 4) {
        goto LABEL_57;
      }
      goto LABEL_58;
    case 2:
      int v26 = *(unsigned __int16 *)a2;
      if (v14 >= 4) {
        goto LABEL_58;
      }
      goto LABEL_57;
    case 3:
      int v26 = *(unsigned __int16 *)a2 | (a2[2] << 16);
      if (v14 >= 4) {
        goto LABEL_58;
      }
      goto LABEL_57;
    case 4:
      int v26 = *(_DWORD *)a2;
      if (v14 < 4) {
LABEL_57:
      }
        v26 |= v24 << v15;
LABEL_58:
      unsigned int v23 = v26 + 3;
      break;
    default:
      break;
  }
LABEL_59:
  switch(v23)
  {
    case 2u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      if (v14 <= 3)
      {
        unsigned int v30 = ((1 << v15) + 1) >> v15;
        if (v30 > 0xFFFC)
        {
          int v32 = 2;
          goto LABEL_84;
        }
        if (v30 > 0xFC)
        {
          LOWORD(v32) = 2;
          goto LABEL_87;
        }
      }
      *((unsigned char *)a1 + v14) = 2;
      return a1;
    case 1u:
      long long v31 = *((_OWORD *)a2 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *((_OWORD *)a1 + 1) = v31;
      a1[4] = (id)*((void *)a2 + 4);
      if (v14 > 3)
      {
LABEL_72:
        *((unsigned char *)a1 + v14) = 1;
        return a1;
      }
      int v32 = 1;
      unsigned int v33 = ((1 << v15) + 1) >> v15;
      if (v33 <= 0xFFFC)
      {
        if (v33 <= 0xFC) {
          goto LABEL_72;
        }
LABEL_87:
        *(_WORD *)((char *)a1 + v14) = v32;
        return a1;
      }
LABEL_84:
      *(_DWORD *)((char *)a1 + v14) = v32;
      return a1;
    case 0u:
      (*(void (**)(id *, unsigned __int8 *, uint64_t))(v41 + 32))(a1, a2, v5);
      unint64_t v27 = (unint64_t)&a2[v9] & v39;
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v7 + 32))(((unint64_t)a1 + v9) & v39, v27, v43);
      int v28 = (void *)(((((unint64_t)a1 + v9) & v39) + v42 + v11) & v40);
      unsigned int v29 = (const void *)((v27 + v42 + v11) & v40);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v29, 1, v44))
      {
        memcpy(v28, v29, __n);
        if (v14 > 3) {
          goto LABEL_82;
        }
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v28, v29, v44);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v28, 0, 1, v44);
        if (v14 > 3)
        {
LABEL_82:
          *((unsigned char *)a1 + v14) = 0;
          return a1;
        }
      }
      unsigned int v36 = ((1 << v15) + 1) >> v15;
      if (v36 > 0xFFFC)
      {
        *(_DWORD *)((char *)a1 + v14) = 0;
        return a1;
      }
      if (v36 > 0xFC)
      {
        *(_WORD *)((char *)a1 + v14) = 0;
        return a1;
      }
      goto LABEL_82;
  }
  if (v14 > 3) {
    goto LABEL_77;
  }
  unsigned int v34 = ((1 << v15) + 1) >> v15;
  uint64_t v35 = 2;
  if (v34 > 0xFFFC) {
    uint64_t v35 = 4;
  }
  if (v34 <= 0xFC) {
LABEL_77:
  }
    uint64_t v35 = 1;
  memcpy(a1, a2, v35 + v14);
  return a1;
}

uint64_t sub_21CAE6DB8(unsigned __int16 *a1, unsigned int a2, void *a3)
{
  uint64_t v3 = *(void *)(a3[4] - 8);
  unint64_t v4 = (((*(void *)(*(void *)(a3[2] - 8) + 64) + *(unsigned __int8 *)(*(void *)(a3[3] - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(a3[3] - 8) + 80))
      + *(void *)(*(void *)(a3[3] - 8) + 64)
      + *(unsigned __int8 *)(v3 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(void *)(v3 + 64);
  if (!*(_DWORD *)(v3 + 84)) {
    ++v5;
  }
  unint64_t v6 = v5 + v4;
  if (v6 <= 0x28) {
    unint64_t v6 = 40;
  }
  if (v6 > 3)
  {
    int v7 = 4;
LABEL_9:
    char v9 = 8;
    goto LABEL_10;
  }
  unsigned int v8 = ((1 << (8 * v6)) + 1) >> (8 * v6);
  if (v8 > 0xFFFC) {
    goto LABEL_13;
  }
  int v7 = v8 + 3;
  if (v8 <= 0xFC) {
    goto LABEL_9;
  }
  char v9 = 16;
LABEL_10:
  unsigned int v10 = (1 << v9) - v7;
  if ((v10 & 0x80000000) == 0)
  {
    if (v6 > 3) {
      goto LABEL_17;
    }
LABEL_14:
    unsigned int v11 = ((1 << (8 * v6)) + 1) >> (8 * v6);
    uint64_t v12 = 2;
    if (v11 > 0xFFFC) {
      uint64_t v12 = 4;
    }
    if (v11 > 0xFC) {
      goto LABEL_18;
    }
    goto LABEL_17;
  }
LABEL_13:
  unsigned int v10 = 0x7FFFFFFF;
  if (v6 <= 3) {
    goto LABEL_14;
  }
LABEL_17:
  uint64_t v12 = 1;
LABEL_18:
  if (!a2) {
    return 0;
  }
  if (a2 <= v10) {
    goto LABEL_37;
  }
  unint64_t v13 = v12 + v6;
  char v14 = 8 * v13;
  if (v13 <= 3)
  {
    unsigned int v16 = ((a2 - v10 + ~(-1 << v14)) >> v14) + 1;
    if (HIWORD(v16))
    {
      int v15 = *(_DWORD *)((char *)a1 + v13);
      if (!v15) {
        goto LABEL_37;
      }
      goto LABEL_29;
    }
    if (v16 > 0xFF)
    {
      int v15 = *(unsigned __int16 *)((char *)a1 + v13);
      if (!*(unsigned __int16 *)((char *)a1 + v13)) {
        goto LABEL_37;
      }
      goto LABEL_29;
    }
    if (v16 < 2)
    {
LABEL_37:
      if (v10)
      {
        if (v6 <= 3)
        {
          unsigned int v24 = ((1 << (8 * v6)) + 1) >> (8 * v6);
          if (v24 > 0xFFFC)
          {
            unsigned int v19 = *(_DWORD *)((char *)a1 + v6);
            unsigned int v20 = ~v19;
LABEL_47:
            unsigned int v27 = 0x7FFFFFFF;
LABEL_48:
            if (v27 > v20) {
              return -v19;
            }
            else {
              return 0;
            }
          }
          int v22 = v24 + 3;
          if (v24 > 0xFC)
          {
            int v26 = *(unsigned __int16 *)((char *)a1 + v6);
            unsigned int v19 = v26 | 0xFFFF0000;
            unsigned int v20 = v26 ^ 0xFFFF;
            char v21 = 16;
          }
          else
          {
            int v25 = *((unsigned __int8 *)a1 + v6);
            unsigned int v19 = v25 | 0xFFFFFF00;
            unsigned int v20 = v25 ^ 0xFF;
            char v21 = 8;
          }
        }
        else
        {
          int v18 = *((unsigned __int8 *)a1 + v6);
          unsigned int v19 = v18 | 0xFFFFFF00;
          unsigned int v20 = v18 ^ 0xFF;
          char v21 = 8;
          int v22 = 4;
        }
        unsigned int v27 = (1 << v21) - v22;
        if ((v27 & 0x80000000) == 0) {
          goto LABEL_48;
        }
        goto LABEL_47;
      }
      return 0;
    }
  }
  int v15 = *((unsigned __int8 *)a1 + v13);
  if (!*((unsigned char *)a1 + v13)) {
    goto LABEL_37;
  }
LABEL_29:
  int v17 = (v15 - 1) << v14;
  if (v13 > 3) {
    int v17 = 0;
  }
  if (v13)
  {
    if (v13 > 3) {
      LODWORD(v13) = 4;
    }
    switch((int)v13)
    {
      case 2:
        LODWORD(v13) = *a1;
        break;
      case 3:
        LODWORD(v13) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v13) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v13) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v10 + (v13 | v17) + 1;
}

void sub_21CAE70C8(char *a1, unsigned int a2, unsigned int a3, void *a4)
{
  uint64_t v5 = *(void *)(a4[4] - 8);
  unint64_t v6 = (((*(void *)(*(void *)(a4[2] - 8) + 64) + *(unsigned __int8 *)(*(void *)(a4[3] - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(a4[3] - 8) + 80))
      + *(void *)(*(void *)(a4[3] - 8) + 64)
      + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v5 + 64);
  if (!*(_DWORD *)(v5 + 84)) {
    ++v7;
  }
  unint64_t v8 = v7 + v6;
  if (v8 <= 0x28) {
    unint64_t v8 = 40;
  }
  char v9 = 8 * v8;
  if (v8 > 3)
  {
    int v10 = 4;
LABEL_7:
    char v11 = 8;
    goto LABEL_8;
  }
  unsigned int v13 = ((1 << v9) + 1) >> v9;
  if (v13 > 0xFFFC) {
    goto LABEL_14;
  }
  int v10 = v13 + 3;
  if (v13 <= 0xFC) {
    goto LABEL_7;
  }
  char v11 = 16;
LABEL_8:
  unsigned int v12 = (1 << v11) - v10;
  if ((v12 & 0x80000000) == 0)
  {
    if (v8 > 3) {
      goto LABEL_18;
    }
    goto LABEL_15;
  }
LABEL_14:
  unsigned int v12 = 0x7FFFFFFF;
  if (v8 > 3)
  {
LABEL_18:
    uint64_t v15 = 1;
    goto LABEL_19;
  }
LABEL_15:
  unsigned int v14 = ((1 << v9) + 1) >> v9;
  uint64_t v15 = 2;
  if (v14 > 0xFFFC) {
    uint64_t v15 = 4;
  }
  if (v14 <= 0xFC) {
    goto LABEL_18;
  }
LABEL_19:
  size_t v16 = v15 + v8;
  if (a3 <= v12)
  {
    int v17 = 0;
  }
  else if (v16 <= 3)
  {
    unsigned int v20 = ((a3 - v12 + ~(-1 << (8 * v16))) >> (8 * v16)) + 1;
    if (HIWORD(v20))
    {
      int v17 = 4;
    }
    else if (v20 >= 0x100)
    {
      int v17 = 2;
    }
    else
    {
      int v17 = v20 > 1;
    }
  }
  else
  {
    int v17 = 1;
  }
  if (v12 < a2)
  {
    unsigned int v18 = ~v12 + a2;
    if (v16 < 4)
    {
      int v19 = (v18 >> (8 * v16)) + 1;
      if (v16)
      {
        int v21 = v18 & ~(-1 << (8 * v16));
        bzero(a1, v16);
        if (v16 == 3)
        {
          *(_WORD *)a1 = v21;
          a1[2] = BYTE2(v21);
        }
        else if (v16 == 2)
        {
          *(_WORD *)a1 = v21;
        }
        else
        {
          *a1 = v21;
        }
      }
    }
    else
    {
      bzero(a1, v16);
      *(_DWORD *)a1 = v18;
      int v19 = 1;
    }
    switch(v17)
    {
      case 1:
        a1[v16] = v19;
        return;
      case 2:
        *(_WORD *)&a1[v16] = v19;
        return;
      case 3:
        goto LABEL_55;
      case 4:
        *(_DWORD *)&a1[v16] = v19;
        return;
      default:
        return;
    }
  }
  switch(v17)
  {
    case 1:
      a1[v16] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_39;
    case 2:
      *(_WORD *)&a1[v16] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_39;
    case 3:
LABEL_55:
      __break(1u);
      JUMPOUT(0x21CAE7414);
    case 4:
      *(_DWORD *)&a1[v16] = 0;
      goto LABEL_38;
    default:
LABEL_38:
      if (!a2) {
        return;
      }
LABEL_39:
      int v22 = -a2;
      if (v8 > 3) {
        goto LABEL_40;
      }
      unsigned int v23 = ((1 << v9) + 1) >> v9;
      if (v23 > 0xFFFC)
      {
        *(_DWORD *)&a1[v8] = v22;
      }
      else if (v23 <= 0xFC)
      {
LABEL_40:
        a1[v8] = v22;
      }
      else
      {
        *(_WORD *)&a1[v8] = v22;
      }
      return;
  }
}

uint64_t sub_21CAE743C(unsigned __int8 *a1, void *a2)
{
  uint64_t v2 = *(void *)(a2[4] - 8);
  unint64_t v3 = (((*(void *)(*(void *)(a2[2] - 8) + 64) + *(unsigned __int8 *)(*(void *)(a2[3] - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(a2[3] - 8) + 80))
      + *(void *)(*(void *)(a2[3] - 8) + 64)
      + *(unsigned __int8 *)(v2 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = *(void *)(v2 + 64);
  if (!*(_DWORD *)(v2 + 84)) {
    ++v4;
  }
  unint64_t v5 = v4 + v3;
  uint64_t v6 = 40;
  if (v5 > 0x28) {
    uint64_t v6 = v5;
  }
  if (v6 > 3) {
    goto LABEL_6;
  }
  unsigned int v8 = ((1 << (8 * v6)) + 1) >> (8 * v6);
  if (v8 > 0xFFFC)
  {
    uint64_t v7 = *(unsigned int *)&a1[v6];
  }
  else
  {
    if (v8 <= 0xFC)
    {
LABEL_6:
      uint64_t v7 = a1[v6];
      goto LABEL_11;
    }
    uint64_t v7 = *(unsigned __int16 *)&a1[v6];
  }
LABEL_11:
  int v9 = v7 - 3;
  if (v7 >= 3)
  {
    if (v6 <= 3) {
      uint64_t v10 = v6;
    }
    else {
      uint64_t v10 = 4;
    }
    switch(v10)
    {
      case 1:
        int v11 = *a1;
        goto LABEL_20;
      case 2:
        int v11 = *(unsigned __int16 *)a1;
        goto LABEL_20;
      case 3:
        int v11 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_20;
      case 4:
        int v11 = *(_DWORD *)a1;
LABEL_20:
        unsigned int v12 = (v11 | (v9 << (8 * v6))) + 3;
        LODWORD(v7) = v11 + 3;
        if (v6 >= 4) {
          uint64_t v7 = v7;
        }
        else {
          uint64_t v7 = v12;
        }
        break;
      default:
        return v7;
    }
  }
  return v7;
}

void sub_21CAE75E0(unsigned char *a1, unsigned int a2, void *a3)
{
  uint64_t v5 = *(void *)(a3[4] - 8);
  unint64_t v6 = (((*(void *)(*(void *)(a3[2] - 8) + 64) + *(unsigned __int8 *)(*(void *)(a3[3] - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(a3[3] - 8) + 80))
      + *(void *)(*(void *)(a3[3] - 8) + 64)
      + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v5 + 64);
  if (!*(_DWORD *)(v5 + 84)) {
    ++v7;
  }
  unint64_t v8 = v7 + v6;
  if (v8 <= 0x28) {
    size_t v9 = 40;
  }
  else {
    size_t v9 = v8;
  }
  if (a2 > 2)
  {
    unsigned int v10 = a2 - 3;
    if (v9 < 4)
    {
      int v12 = (v10 >> (8 * v9)) + 3;
      v10 &= ~(-1 << (8 * v9));
      unsigned int v13 = (int *)&a1[v9];
      unsigned int v14 = ((1 << (8 * v9)) + 1) >> (8 * v9);
      if (v14 > 0xFFFC)
      {
        *unsigned int v13 = v12;
      }
      else if (v14 > 0xFC)
      {
        *(_WORD *)unsigned int v13 = v12;
      }
      else
      {
        *(unsigned char *)unsigned int v13 = v12;
      }
    }
    else
    {
      a1[v9] = 3;
    }
    if (v9 >= 4) {
      int v15 = 4;
    }
    else {
      int v15 = v9;
    }
    bzero(a1, v9);
    switch(v15)
    {
      case 2:
        *(_WORD *)a1 = v10;
        break;
      case 3:
        *(_WORD *)a1 = v10;
        a1[2] = BYTE2(v10);
        break;
      case 4:
        *(_DWORD *)a1 = v10;
        break;
      default:
        *a1 = v10;
        break;
    }
  }
  else
  {
    if (v9 > 3)
    {
LABEL_8:
      a1[v9] = a2;
      return;
    }
    unsigned int v11 = ((1 << (8 * v9)) + 1) >> (8 * v9);
    if (v11 > 0xFFFC)
    {
      *(_DWORD *)&a1[v9] = a2;
    }
    else
    {
      if (v11 <= 0xFC) {
        goto LABEL_8;
      }
      *(_WORD *)&a1[v9] = a2;
    }
  }
}

uint64_t sub_21CAE7808()
{
  return swift_getWitnessTable();
}

uint64_t sub_21CAE7824(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return MEMORY[0x270FA2498](sub_21CAE7844, 0, 0);
}

uint64_t sub_21CAE7844()
{
  uint64_t v1 = *(void **)(v0[3] + 16);
  uint64_t v2 = (void *)swift_task_alloc();
  v0[4] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_21CAE7920;
  v2[2] = v0[2];
  v2[3] = v1;
  v2[4] = *v1;
  return MEMORY[0x270FA2498](sub_21CADE564, 0, 0);
}

uint64_t sub_21CAE7920()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_21CAE7A14(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return MEMORY[0x270FA2498](sub_21CAE7A34, 0, 0);
}

uint64_t sub_21CAE7A34()
{
  uint64_t v1 = **(void **)(v0 + 24);
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 32) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_21CAF6E84;
  v2[2] = *(void *)(v0 + 16);
  v2[3] = v1;
  return MEMORY[0x270FA2498](sub_21CAE7844, 0, 0);
}

uint64_t sub_21CAE7AE8(uint64_t a1)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[2] = a1;
  v4[3] = v1;
  v4[1] = sub_21CA65B10;
  return MEMORY[0x270FA2498](sub_21CAE7A34, 0, 0);
}

uint64_t sub_21CAE7B94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6[2] = a4;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v6[3] = AssociatedTypeWitness;
  v6[4] = *(void *)(AssociatedTypeWitness - 8);
  v6[5] = swift_task_alloc();
  unsigned int v13 = (void *)swift_task_alloc();
  void v6[6] = v13;
  *unsigned int v13 = v6;
  v13[1] = sub_21CAF6E8C;
  return MEMORY[0x270FA1E90](a1, a2, a3, a5, a6);
}

uint64_t sub_21CAE7CE8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  return sub_21CAE7D00(a1, a2, a3, a4, a5, a6, (uint64_t (*)(void, void *))type metadata accessor for AsyncChain2Sequence, a7);
}

uint64_t sub_21CAE7D00@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t (*a7)(void, void *)@<X6>, uint64_t a8@<X8>)
{
  uint64_t v15 = *(void *)(a4 - 8);
  uint64_t v16 = MEMORY[0x270FA5388](a1);
  unsigned int v18 = (char *)&v23 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  unsigned int v20 = (char *)&v23 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v21 + 16))(v20);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v18, a2, a4);
  return sub_21CAE7EA4((uint64_t)v20, (uint64_t)v18, a3, a4, a5, a6, a7, a8);
}

uint64_t sub_21CAE7E8C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  return sub_21CAE7EA4(a1, a2, a3, a4, a5, a6, (uint64_t (*)(void, void *))type metadata accessor for AsyncChain2Sequence, a7);
}

uint64_t sub_21CAE7EA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t (*a7)(void, void *)@<X6>, uint64_t a8@<X8>)
{
  (*(void (**)(uint64_t, uint64_t))(*(void *)(a3 - 8) + 32))(a8, a1);
  v17[0] = a3;
  v17[1] = a4;
  v17[2] = a5;
  v17[3] = a6;
  uint64_t v15 = a7(0, v17);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a4 - 8) + 32))(a8 + *(int *)(v15 + 52), a2, a4);
}

uint64_t sub_21CAE7F7C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56);
  v6(a3, 1, 1, AssociatedTypeWitness);
  uint64_t v7 = a3 + *(int *)(type metadata accessor for AsyncChain2Sequence.Iterator() + 52);
  uint64_t v8 = swift_getAssociatedTypeWitness();
  uint64_t v9 = *(void *)(v8 - 8);
  unsigned int v10 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
  v10(v7, 1, 1, v8);
  uint64_t v11 = sub_21CB889A0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(a3, v11);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32))(a3, a1, AssociatedTypeWitness);
  v6(a3, 0, 1, AssociatedTypeWitness);
  uint64_t v12 = sub_21CB889A0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v7, v12);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 32))(v7, a2, v8);
  return ((uint64_t (*)(uint64_t, void, uint64_t, uint64_t))v10)(v7, 0, 1, v8);
}

uint64_t sub_21CAE81C0(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  v3[5] = *(void *)(a2 + 32);
  v3[6] = *(void *)(a2 + 16);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v3[7] = AssociatedTypeWitness;
  uint64_t v5 = sub_21CB889A0();
  v3[8] = v5;
  v3[9] = *(void *)(v5 - 8);
  v3[10] = swift_task_alloc();
  v3[11] = *(void *)(AssociatedTypeWitness - 8);
  v3[12] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_21CAE830C, 0, 0);
}

uint64_t sub_21CAE830C()
{
  uint64_t v1 = v0[4];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v0[13] = AssociatedTypeWitness;
  uint64_t v3 = *(void *)(AssociatedTypeWitness - 8);
  v0[14] = v3;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, AssociatedTypeWitness))
  {
    (*(void (**)(void, uint64_t, uint64_t, void))(v0[11] + 56))(v0[10], 1, 1, v0[7]);
    uint64_t v4 = v0[13];
    uint64_t v5 = v0[14];
    uint64_t v7 = v0[3];
    uint64_t v6 = v0[4];
    (*(void (**)(void, void))(v0[9] + 8))(v0[10], v0[8]);
    uint64_t v8 = sub_21CB889A0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v6, v8);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56))(v6, 1, 1, v4);
    uint64_t v9 = v6 + *(int *)(v7 + 52);
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 48))(v9, 1, AssociatedTypeWitness))
    {
      (*(void (**)(void, uint64_t, uint64_t, void))(v0[11] + 56))(v0[2], 1, 1, v0[7]);
      swift_task_dealloc();
      swift_task_dealloc();
      unsigned int v10 = (uint64_t (*)(void))v0[1];
      return v10();
    }
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    uint64_t v15 = (void *)swift_task_alloc();
    v0[17] = v15;
    *uint64_t v15 = v0;
    v15[1] = sub_21CAE8A00;
    uint64_t v14 = v0[2];
  }
  else
  {
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    unsigned int v13 = (void *)swift_task_alloc();
    v0[15] = v13;
    *unsigned int v13 = v0;
    v13[1] = sub_21CAE8648;
    uint64_t v14 = v0[10];
  }
  return MEMORY[0x270FA1E80](v14, AssociatedTypeWitness, AssociatedConformanceWitness);
}

uint64_t sub_21CAE8648()
{
  *(void *)(*(void *)v1 + 128) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_21CAE8B4C;
  }
  else {
    uint64_t v2 = sub_21CAE875C;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_21CAE875C()
{
  uint64_t v1 = v0[10];
  uint64_t v2 = v0[11];
  uint64_t v3 = v0[7];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v1, 1, v3) == 1)
  {
    uint64_t v4 = v0[13];
    uint64_t v5 = v0[14];
    uint64_t v7 = v0[3];
    uint64_t v6 = v0[4];
    (*(void (**)(uint64_t, void))(v0[9] + 8))(v1, v0[8]);
    uint64_t v8 = sub_21CB889A0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v6, v8);
    uint64_t v9 = 1;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56))(v6, 1, 1, v4);
    uint64_t v10 = v6 + *(int *)(v7 + 52);
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 48))(v10, 1, AssociatedTypeWitness))
    {
      uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
      unsigned int v13 = (void *)swift_task_alloc();
      v0[17] = v13;
      *unsigned int v13 = v0;
      v13[1] = sub_21CAE8A00;
      uint64_t v14 = v0[2];
      return MEMORY[0x270FA1E80](v14, AssociatedTypeWitness, AssociatedConformanceWitness);
    }
  }
  else
  {
    uint64_t v15 = v0[12];
    uint64_t v16 = v0[2];
    uint64_t v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32);
    v17(v15, v1, v3);
    v17(v16, v15, v3);
    uint64_t v9 = 0;
  }
  (*(void (**)(void, uint64_t, uint64_t, void))(v0[11] + 56))(v0[2], v9, 1, v0[7]);
  swift_task_dealloc();
  swift_task_dealloc();
  unsigned int v18 = (uint64_t (*)(void))v0[1];
  return v18();
}

uint64_t sub_21CAE8A00()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 144) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x270FA2498](sub_21CAE8CE4, 0, 0);
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_21CAE8B4C()
{
  uint64_t v1 = v0[13];
  uint64_t v2 = v0[14];
  uint64_t v4 = v0[3];
  uint64_t v3 = v0[4];
  uint64_t v5 = sub_21CB889A0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v3, v5);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v2 + 56))(v3, 1, 1, v1);
  uint64_t v6 = v3 + *(int *)(v4 + 52);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = sub_21CB889A0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v6, v8);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 56))(v6, 1, 1, AssociatedTypeWitness);
  swift_willThrow();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

uint64_t sub_21CAE8CE4()
{
  uint64_t v1 = v0[13];
  uint64_t v2 = v0[14];
  uint64_t v4 = v0[3];
  uint64_t v3 = v0[4];
  uint64_t v5 = sub_21CB889A0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v3, v5);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v2 + 56))(v3, 1, 1, v1);
  uint64_t v6 = v3 + *(int *)(v4 + 52);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = sub_21CB889A0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v6, v8);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 56))(v6, 1, 1, AssociatedTypeWitness);
  swift_willThrow();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

uint64_t sub_21CAE8E7C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_21CA73F2C;
  return sub_21CAE81C0(a1, a2);
}

uint64_t sub_21CAE8F24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6[2] = a4;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v6[3] = AssociatedTypeWitness;
  v6[4] = *(void *)(AssociatedTypeWitness - 8);
  v6[5] = swift_task_alloc();
  unsigned int v13 = (void *)swift_task_alloc();
  void v6[6] = v13;
  *unsigned int v13 = v6;
  v13[1] = sub_21CAE9078;
  return MEMORY[0x270FA1E90](a1, a2, a3, a5, a6);
}

uint64_t sub_21CAE9078()
{
  uint64_t v2 = (void *)*v1;
  uint64_t v3 = (void *)*v1;
  swift_task_dealloc();
  if (v0) {
    (*(void (**)(void, void, void))(v2[4] + 32))(v2[2], v2[5], v2[3]);
  }
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v3[1];
  return v4();
}

uint64_t sub_21CAE91AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v23 = a2;
  uint64_t v5 = *(void *)(a1 + 24);
  uint64_t v22 = *(void *)(v5 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](a1);
  uint64_t v8 = (char *)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21[1] = *(void *)(v6 + 40);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v10 = MEMORY[0x270FA5388](AssociatedTypeWitness - 8);
  uint64_t v12 = (char *)v21 - v11;
  uint64_t v13 = *(void *)(a1 + 16);
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v16 = (char *)v21 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = swift_getAssociatedTypeWitness();
  MEMORY[0x270FA5388](v17 - 8);
  uint64_t v19 = (char *)v21 - v18;
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, v3, v13);
  sub_21CB886E0();
  (*(void (**)(char *, uint64_t, uint64_t))(v22 + 16))(v8, v3 + *(int *)(a1 + 52), v5);
  sub_21CB886E0();
  return sub_21CAE7F7C((uint64_t)v19, (uint64_t)v12, v23);
}

uint64_t sub_21CAE941C(uint64_t a1, uint64_t a2)
{
  return sub_21CA651EC(a1, a2, (void (*)(void))sub_21CAE91AC);
}

uint64_t sub_21CAE9438()
{
  return swift_getWitnessTable();
}

uint64_t sub_21CAE9454()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();

  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_21CAE94F8(uint64_t a1)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_21CA65B10;
  return sub_21CADE7B0(a1, v1);
}

void sub_21CAE9594()
{
  sub_21CADFE68(v0);
}

uint64_t sub_21CAE959C@<X0>(uint64_t *a1@<X8>)
{
  return sub_21CAE0278(a1);
}

uint64_t type metadata accessor for MergeStateMachine.CancelledAction()
{
  return swift_getGenericMetadata();
}

unint64_t sub_21CAE95D0()
{
  unint64_t result = qword_267C95840;
  if (!qword_267C95840)
  {
    sub_21CB88600();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C95840);
  }
  return result;
}

uint64_t sub_21CAE9628(uint64_t a1)
{
  return sub_21CADFD68(a1, v1);
}

uint64_t sub_21CAE9644()
{
  uint64_t v1 = *((void *)v0 + 4);
  uint64_t v14 = *((void *)v0 + 5);
  uint64_t v2 = *((void *)v0 + 6);
  uint64_t v3 = *(void *)(v1 - 8);
  uint64_t v16 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v4 = (v16 + 88) & ~v16;
  uint64_t v5 = *(void *)(v14 - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = (v4 + *(void *)(v3 + 64) + v6) & ~v6;
  uint64_t v8 = *(void *)(v5 + 64);
  uint64_t v9 = *(void *)(sub_21CB889A0() - 8);
  uint64_t v10 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v11 = (v7 + v8 + v10) & ~v10;
  uint64_t v15 = *(void *)(v9 + 64);
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(char *, uint64_t))(v3 + 8))(&v0[v4], v1);
  (*(void (**)(char *, uint64_t))(v5 + 8))(&v0[v7], v14);
  uint64_t v12 = *(void *)(v2 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(&v0[v11], 1, v2)) {
    (*(void (**)(char *, uint64_t))(v12 + 8))(&v0[v11], v2);
  }

  return MEMORY[0x270FA0238](v0, v11 + v15, v16 | v6 | v10 | 7);
}

uint64_t sub_21CAE9874(uint64_t a1)
{
  uint64_t v3 = v2;
  unint64_t v5 = (*(unsigned __int8 *)(*(void *)(v1[4] - 8) + 80) + 88) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1[4] - 8) + 80);
  uint64_t v6 = *(void *)(v1[5] - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  unint64_t v8 = (v5 + *(void *)(*(void *)(v1[4] - 8) + 64) + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v9 = *(unsigned __int8 *)(*(void *)(sub_21CB889A0() - 8) + 80);
  unint64_t v10 = v8 + v7 + v9;
  uint64_t v11 = v1[10];
  uint64_t v12 = (char *)v1 + v5;
  uint64_t v13 = (char *)v1 + v8;
  uint64_t v14 = (char *)v1 + (v10 & ~v9);
  uint64_t v15 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v15;
  *uint64_t v15 = v3;
  v15[5] = v13;
  v15[6] = v14;
  v15[3] = v11;
  void v15[4] = v12;
  v15[1] = sub_21CA73F2C;
  v15[2] = a1;
  return MEMORY[0x270FA2498](sub_21CAE035C, 0, 0);
}

uint64_t sub_21CAE9A20(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = (uint64_t *)v2[2];
  uint64_t v7 = v2[3];
  uint64_t v9 = v2[4];
  uint64_t v8 = v2[5];
  unint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v10;
  void *v10 = v3;
  v10[1] = sub_21CA65B10;
  return sub_21CAE044C(a1, a2, v6, v7, v9, v8);
}

uint64_t sub_21CAE9AE8@<X0>(uint64_t *a1@<X8>)
{
  return sub_21CAE116C(*(void **)(v1 + 24), a1);
}

uint64_t type metadata accessor for MergeStateMachine.UpstreamThrewAction()
{
  return swift_getGenericMetadata();
}

uint64_t sub_21CAE9B1C()
{
  uint64_t v1 = *(void *)(v0 + 56);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 96) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();

  return MEMORY[0x270FA0238](v0, v6, v5);
}

uint64_t sub_21CAE9BFC(uint64_t a1)
{
  uint64_t v4 = v1[7];
  uint64_t v5 = v1[11];
  unint64_t v6 = (*(unsigned __int8 *)(*(void *)(v4 - 8) + 80) + 96) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v4 - 8) + 80);
  uint64_t v7 = v1[2];
  uint64_t v8 = v1[3];
  uint64_t v9 = (uint64_t)v1 + v6;
  uint64_t v10 = *(void *)((char *)v1 + ((*(void *)(*(void *)(v4 - 8) + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v11;
  *uint64_t v11 = v2;
  v11[1] = sub_21CA73F2C;
  return sub_21CAE1254(a1, v7, v8, v9, v10, v4, v5);
}

uint64_t sub_21CAE9D30(uint64_t a1)
{
  uint64_t v2 = sub_21CA57E34(&qword_267C95028);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_21CAE9D90(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_21CA57E34(&qword_267C95028);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_21CAE9DF8@<X0>(uint64_t *a1@<X8>)
{
  return sub_21CAE254C(a1);
}

uint64_t type metadata accessor for MergeStateMachine.UpstreamFinishedAction()
{
  return swift_getGenericMetadata();
}

uint64_t sub_21CAE9E30@<X0>(void *a1@<X8>)
{
  return sub_21CAE2478(*(void *)(v1 + 40), a1);
}

uint64_t sub_21CAE9E50@<X0>(uint64_t *a1@<X8>)
{
  return sub_21CAE239C(*(void *)(v1 + 40), a1);
}

uint64_t type metadata accessor for MergeStateMachine.ChildTaskSuspendedAction()
{
  return swift_getGenericMetadata();
}

uint64_t sub_21CAE9E88()
{
  uint64_t v1 = (void *)v0[16];
  uint64_t v3 = v0[13];
  uint64_t v2 = v0[14];
  uint64_t v4 = v0[10];
  uint64_t v5 = v0[11];
  uint64_t v6 = v0[8];
  uint64_t v7 = v0[6];
  uint64_t v8 = v0[4];
  (*(void (**)(void, void))(v6 + 8))(v0[9], v0[7]);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v7);

  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v8, v4);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 56))(v8, 1, 1, v7);
  (*(void (**)(void, uint64_t, uint64_t, void))(v6 + 56))(v0[2], 1, 1, v0[7]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

uint64_t sub_21CAE9FC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v6 + 16) = v12;
  *uint64_t v12 = v6;
  v12[1] = sub_21CAF6E94;
  return MEMORY[0x270FA1E90](a1, a2, a3, a5, a6);
}

uint64_t sub_21CAEA090(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_21CAEA0B4(uint64_t a1, void *a2)
{
  v3[16] = a1;
  v3[17] = v2;
  uint64_t v5 = a2[3];
  v3[18] = v5;
  v3[19] = *(void *)(v5 - 8);
  v3[20] = swift_task_alloc();
  uint64_t v6 = a2[5];
  v3[21] = v6;
  uint64_t v7 = a2[2];
  v3[22] = v7;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v3[23] = AssociatedTypeWitness;
  v3[24] = *(void *)(AssociatedTypeWitness - 8);
  v3[25] = swift_task_alloc();
  v3[26] = swift_task_alloc();
  uint64_t v9 = a2[4];
  v3[27] = v9;
  uint64_t v10 = a2[6];
  v3[28] = v10;
  uint64_t v11 = a2[7];
  v3[2] = v7;
  v3[29] = v11;
  v3[3] = v5;
  v3[4] = v9;
  v3[5] = v6;
  v3[6] = v10;
  v3[7] = v11;
  uint64_t v12 = type metadata accessor for AsyncChunksOfCountOrSignalSequence.Either();
  v3[30] = v12;
  uint64_t v13 = sub_21CB889A0();
  v3[31] = v13;
  v3[32] = *(void *)(v13 - 8);
  v3[33] = swift_task_alloc();
  v3[34] = *(void *)(v12 - 8);
  v3[35] = swift_task_alloc();
  v3[36] = swift_task_alloc();
  uint64_t v14 = sub_21CB889A0();
  v3[37] = v14;
  v3[38] = *(void *)(v14 - 8);
  v3[39] = swift_task_alloc();
  v3[40] = swift_task_alloc();
  v3[41] = swift_task_alloc();
  v3[42] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_21CAEA3A0, 0, 0);
}

uint64_t sub_21CAEA3A0()
{
  uint64_t v1 = v0[19];
  char v2 = *(unsigned char *)(v0[17] + 24);
  uint64_t v3 = *(void (**)(void, uint64_t, uint64_t, void))(v1 + 56);
  v0[43] = v3;
  v0[44] = (v1 + 56) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
  if (v2)
  {
    v3(v0[16], 1, 1, v0[18]);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v4 = (uint64_t (*)(void))v0[1];
    return v4();
  }
  else
  {
    v3(v0[42], 1, 1, v0[18]);
    uint64_t v6 = v0[17];
    uint64_t v7 = (void *)swift_task_alloc();
    v0[45] = v7;
    uint64_t v8 = sub_21CB88CB0();
    sub_21CB885E0();
    swift_getWitnessTable();
    uint64_t v9 = type metadata accessor for AsyncSyncSequence();
    uint64_t WitnessTable = swift_getWitnessTable();
    uint64_t v11 = swift_getWitnessTable();
    v0[8] = v8;
    v0[9] = v9;
    v0[10] = WitnessTable;
    v0[11] = v11;
    uint64_t v12 = type metadata accessor for AsyncChain2Sequence();
    uint64_t v13 = sub_21CB88CB0();
    uint64_t v14 = swift_getWitnessTable();
    uint64_t v15 = swift_getWitnessTable();
    v0[12] = v12;
    v0[13] = v13;
    v0[14] = v14;
    v0[15] = v15;
    type metadata accessor for AsyncMerge2Sequence.Iterator();
    *uint64_t v7 = v0;
    v7[1] = sub_21CAEA694;
    v7[2] = v0[33];
    v7[3] = v6 + 16;
    return MEMORY[0x270FA2498](sub_21CAE7A34, 0, 0);
  }
}

uint64_t sub_21CAEA694()
{
  *(void *)(*(void *)v1 + 368) = v0;
  swift_task_dealloc();
  if (v0) {
    char v2 = sub_21CAEAF04;
  }
  else {
    char v2 = sub_21CAEA7A8;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_21CAEA7A8()
{
  uint64_t v1 = v0[33];
  uint64_t v2 = v0[34];
  uint64_t v3 = v0[30];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v1, 1, v3) != 1)
  {
    uint64_t v9 = v0[35];
    uint64_t v8 = v0[36];
    uint64_t v10 = v0[23];
    uint64_t v11 = v0[24];
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32))(v8, v1, v3);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v9, v8, v3);
    int v12 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v9, 2, v10);
    if (v12)
    {
      if (v12 == 1)
      {
        uint64_t v13 = v0[42];
        uint64_t v14 = v0[37];
        uint64_t v15 = v0[38];
        uint64_t v16 = v0[16];
        uint64_t v17 = v0[17];
        (*(void (**)(void, void))(v0[34] + 8))(v0[36], v0[30]);
        *(unsigned char *)(v17 + 24) = 1;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v16, v13, v14);
        (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v13, v14);
        goto LABEL_18;
      }
      uint64_t v42 = v0[42];
      uint64_t v44 = v0[38];
      uint64_t v43 = v0[39];
      uint64_t v45 = v0[37];
      uint64_t v46 = v0[18];
      uint64_t v47 = v0[19];
      (*(void (**)(void, void))(v0[34] + 8))(v0[36], v0[30]);
      char v48 = *(void (**)(uint64_t, uint64_t, uint64_t))(v44 + 16);
      v48(v43, v42, v45);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v47 + 48))(v43, 1, v46) != 1)
      {
        uint64_t v49 = v0[42];
        uint64_t v50 = v0[37];
        uint64_t v51 = v0[16];
        int v52 = *(void (**)(uint64_t, uint64_t))(v0[38] + 8);
        v52(v0[39], v50);
        v48(v51, v49, v50);
        v52(v49, v50);
        goto LABEL_18;
      }
      (*(void (**)(void, void))(v0[38] + 8))(v0[39], v0[37]);
      goto LABEL_21;
    }
    uint64_t v18 = v0[41];
    uint64_t v19 = v0[42];
    uint64_t v20 = v0[37];
    uint64_t v21 = v0[38];
    uint64_t v22 = v0[18];
    uint64_t v23 = v0[19];
    (*(void (**)(void, void, void))(v0[24] + 32))(v0[26], v0[35], v0[23]);
    uint64_t v79 = *(void (**)(uint64_t, uint64_t, uint64_t))(v21 + 16);
    v79(v18, v19, v20);
    unsigned int v24 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v23 + 48);
    LODWORD(v19) = v24(v18, 1, v22);
    uint64_t v78 = *(void (**)(uint64_t, uint64_t))(v21 + 8);
    v78(v18, v20);
    if (v19 == 1)
    {
      int v25 = (void (*)(uint64_t, void, uint64_t, uint64_t))v0[43];
      uint64_t v26 = v0[42];
      uint64_t v27 = v0[40];
      uint64_t v28 = v0[37];
      uint64_t v29 = v0[38];
      uint64_t v30 = v0[18];
      sub_21CB88820();
      v25(v27, 0, 1, v30);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v29 + 40))(v26, v27, v28);
    }
    uint64_t v31 = v0[42];
    uint64_t v32 = v0[18];
    (*(void (**)(void, void, void))(v0[24] + 16))(v0[25], v0[26], v0[23]);
    unsigned int v33 = (uint64_t (*)())v24(v31, 1, v32);
    if (v33 == 1)
    {
      __break(1u);
      return MEMORY[0x270FA2498](v33, v34, v35);
    }
    uint64_t v36 = v0[42];
    uint64_t v37 = v0[18];
    sub_21CB88810();
    if (v24(v36, 1, v37))
    {
      uint64_t v38 = v0[36];
      uint64_t v39 = v0[34];
      uint64_t v40 = v0[30];
      uint64_t v41 = v0[17];
      (*(void (**)(void, void))(v0[24] + 8))(v0[26], v0[23]);
      (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v38, v40);
      if ((*(unsigned char *)(v41 + 8) & 1) == 0) {
        goto LABEL_21;
      }
    }
    else
    {
      uint64_t v53 = v0[34];
      uint64_t v76 = v0[30];
      uint64_t v77 = v0[36];
      uint64_t v54 = v0[26];
      uint64_t v55 = v0[23];
      uint64_t v56 = v0[24];
      uint64_t v57 = v0[19];
      uint64_t v58 = v0[20];
      uint64_t v59 = v0[17];
      uint64_t v60 = v0[18];
      (*(void (**)(uint64_t, void, uint64_t))(v57 + 16))(v58, v0[42], v60);
      uint64_t v61 = sub_21CB887C0();
      (*(void (**)(uint64_t, uint64_t))(v57 + 8))(v58, v60);
      (*(void (**)(uint64_t, uint64_t))(v56 + 8))(v54, v55);
      (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v77, v76);
      if ((*(unsigned char *)(v59 + 8) & 1) != 0 || v61 != *(void *)v0[17])
      {
LABEL_21:
        uint64_t v66 = v0[17];
        uint64_t v67 = (void *)swift_task_alloc();
        v0[45] = v67;
        uint64_t v68 = sub_21CB88CB0();
        sub_21CB885E0();
        swift_getWitnessTable();
        uint64_t v69 = type metadata accessor for AsyncSyncSequence();
        uint64_t WitnessTable = swift_getWitnessTable();
        uint64_t v71 = swift_getWitnessTable();
        v0[8] = v68;
        v0[9] = v69;
        v0[10] = WitnessTable;
        v0[11] = v71;
        uint64_t v72 = type metadata accessor for AsyncChain2Sequence();
        uint64_t v73 = sub_21CB88CB0();
        uint64_t v74 = swift_getWitnessTable();
        uint64_t v75 = swift_getWitnessTable();
        v0[12] = v72;
        v0[13] = v73;
        v0[14] = v74;
        v0[15] = v75;
        type metadata accessor for AsyncMerge2Sequence.Iterator();
        *uint64_t v67 = v0;
        v67[1] = sub_21CAEA694;
        v67[2] = v0[33];
        v67[3] = v66 + 16;
        unsigned int v33 = sub_21CAE7A34;
        uint64_t v34 = 0;
        uint64_t v35 = 0;
        return MEMORY[0x270FA2498](v33, v34, v35);
      }
    }
    uint64_t v62 = v0[42];
    uint64_t v63 = v0[37];
    v79(v0[16], v62, v63);
    v78(v62, v63);
    goto LABEL_18;
  }
  uint64_t v4 = v0[42];
  uint64_t v5 = v0[37];
  uint64_t v6 = v0[38];
  uint64_t v7 = v0[16];
  (*(void (**)(uint64_t, void))(v0[32] + 8))(v1, v0[31]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(v7, v4, v5);
LABEL_18:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v64 = (uint64_t (*)(void))v0[1];
  return v64();
}

uint64_t sub_21CAEAF04()
{
  (*(void (**)(void, void))(v0[38] + 8))(v0[42], v0[37]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_21CAEB004(uint64_t a1, void *a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_21CA65B10;
  return sub_21CAEA0B4(a1, a2);
}

uint64_t sub_21CAEB0AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6[2] = a4;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v6[3] = AssociatedTypeWitness;
  v6[4] = *(void *)(AssociatedTypeWitness - 8);
  v6[5] = swift_task_alloc();
  uint64_t v13 = (void *)swift_task_alloc();
  void v6[6] = v13;
  *uint64_t v13 = v6;
  v13[1] = sub_21CAF6E8C;
  return MEMORY[0x270FA1E90](a1, a2, a3, a5, a6);
}

uint64_t sub_21CAEB200(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[4] = a3;
  v6[5] = a6;
  uint64_t v6[2] = a1;
  v6[3] = a2;
  return MEMORY[0x270FA2498](sub_21CAEB224, 0, 0);
}

uint64_t sub_21CAEB224()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = v0[3];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v4 = *(void *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v1, v2, AssociatedTypeWitness);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v4 + 56))(v1, 0, 2, AssociatedTypeWitness);
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_21CAEB314(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[3] = a3;
  v6[4] = a6;
  uint64_t v6[2] = a1;
  return MEMORY[0x270FA2498](sub_21CAEB338, 0, 0);
}

uint64_t sub_21CAEB338()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 56))(v1, 2, 2, AssociatedTypeWitness);
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_21CAEB3E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_21CADA95C(a1);
  char v7 = v6;
  uint64_t v9 = v8;
  char v11 = v10;
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(a1 - 8) + 8))(v2, a1);
  *(void *)a2 = v5;
  *(unsigned char *)(a2 + 8) = v7 & 1;
  *(void *)(a2 + 16) = v9;
  *(unsigned char *)(a2 + 24) = v11 & 1;
  return result;
}

char *sub_21CAEB480(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v32 = a2;
  uint64_t v33 = a3;
  uint64_t v30 = a1;
  uint64_t v4 = *(void **)v3;
  uint64_t v26 = *(void *)(*(void *)v3 + 96);
  uint64_t v5 = v26;
  uint64_t v31 = sub_21CB889A0();
  uint64_t v29 = *(void *)(v31 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v31);
  uint64_t v28 = (char *)&v24 - v7;
  uint64_t v8 = v4[11];
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v6);
  int v12 = (char *)&v24 - v11;
  uint64_t v13 = v4[10];
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v16 = (char *)&v24 - v15;
  uint64_t v25 = v4[13];
  uint64_t v24 = v4[14];
  uint64_t v17 = v4[15];
  uint64_t v34 = v13;
  uint64_t v35 = v8;
  uint64_t v36 = v5;
  uint64_t v37 = v25;
  uint64_t v38 = v24;
  uint64_t v39 = v17;
  uint64_t v27 = type metadata accessor for MergeStateMachine();
  uint64_t v18 = *(void *)(v27 - 8);
  MEMORY[0x270FA5388](v27);
  uint64_t v20 = (char *)&v24 - v19;
  uint64_t v21 = (_DWORD *)swift_slowAlloc();
  *uint64_t v21 = 0;
  *((void *)v3 + 2) = v21;
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, v30, v13);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v12, v32, v8);
  uint64_t v22 = (uint64_t)v28;
  (*(void (**)(char *, uint64_t, uint64_t))(v29 + 16))(v28, v33, v31);
  sub_21CADBF28((uint64_t)v16, (uint64_t)v12, v22, v13, v8, v26, (uint64_t)v20);
  (*(void (**)(char *, char *, uint64_t))(v18 + 32))(&v3[*(void *)(*(void *)v3 + 136)], v20, v27);
  return v3;
}

uint64_t sub_21CAEB7F0@<X0>(uint64_t *a1@<X8>)
{
  return sub_21CADE3D0(a1);
}

uint64_t type metadata accessor for MergeStateMachine.IteratorDeinitializedAction()
{
  return swift_getGenericMetadata();
}

uint64_t sub_21CAEB824(uint64_t result)
{
  if (result)
  {
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_21CAEB864()
{
  return MEMORY[0x270FA0238](v0, 64, 7);
}

uint64_t sub_21CAEB874(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *(void *)(v2 + 16);
  uint64_t v7 = *(void *)(v2 + 40);
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v8;
  *uint64_t v8 = v3;
  v8[4] = v6;
  v8[5] = v7;
  v8[2] = a1;
  v8[3] = a2;
  v8[1] = sub_21CA65B10;
  return MEMORY[0x270FA2498](sub_21CAEB224, 0, 0);
}

uint64_t sub_21CAEB938()
{
  return MEMORY[0x270FA0238](v0, 64, 7);
}

uint64_t sub_21CAEB948(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 40);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  *uint64_t v6 = v2;
  v6[3] = v4;
  v6[4] = v5;
  v6[1] = sub_21CA65B10;
  uint64_t v6[2] = a1;
  return MEMORY[0x270FA2498](sub_21CAEB338, 0, 0);
}

uint64_t *sub_21CAEBA04(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = *(_DWORD *)(v4 + 80);
  if (v5 <= 7
    && *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) <= 0x18uLL
    && (*(_DWORD *)(v4 + 80) & 0x100000) == 0)
  {
    (*(void (**)(uint64_t *))(v4 + 16))(a1);
  }
  else
  {
    uint64_t v8 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v8 + ((v5 + 16) & ~v5));
    swift_retain();
  }
  return v3;
}

uint64_t sub_21CAEBABC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1;
}

uint64_t sub_21CAEBB0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1;
}

uint64_t sub_21CAEBB5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1;
}

uint64_t sub_21CAEBBAC(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (!a2) {
    return 0;
  }
  unsigned int v7 = a2 - v5;
  if (a2 <= v5) {
    goto LABEL_19;
  }
  char v8 = 8 * v6;
  if (v6 <= 3)
  {
    unsigned int v10 = ((v7 + ~(-1 << v8)) >> v8) + 1;
    if (HIWORD(v10))
    {
      int v9 = *(_DWORD *)((char *)a1 + v6);
      if (!v9) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v10 > 0xFF)
    {
      int v9 = *(unsigned __int16 *)((char *)a1 + v6);
      if (!*(unsigned __int16 *)((char *)a1 + v6)) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v10 < 2)
    {
LABEL_19:
      if (v5) {
        return (*(uint64_t (**)(void))(v4 + 48))();
      }
      return 0;
    }
  }
  int v9 = *((unsigned __int8 *)a1 + v6);
  if (!*((unsigned char *)a1 + v6)) {
    goto LABEL_19;
  }
LABEL_11:
  int v11 = (v9 - 1) << v8;
  if (v6 > 3) {
    int v11 = 0;
  }
  if (v6)
  {
    if (v6 > 3) {
      LODWORD(v6) = 4;
    }
    switch((int)v6)
    {
      case 2:
        LODWORD(v6) = *a1;
        break;
      case 3:
        LODWORD(v6) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v6) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v6) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v5 + (v6 | v11) + 1;
}

void sub_21CAEBD08(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  size_t v8 = *(void *)(v6 + 64);
  BOOL v9 = a3 >= v7;
  unsigned int v10 = a3 - v7;
  if (v10 != 0 && v9)
  {
    if (v8 <= 3)
    {
      unsigned int v14 = ((v10 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
      if (HIWORD(v14))
      {
        int v11 = 4;
      }
      else if (v14 >= 0x100)
      {
        int v11 = 2;
      }
      else
      {
        int v11 = v14 > 1;
      }
    }
    else
    {
      int v11 = 1;
    }
  }
  else
  {
    int v11 = 0;
  }
  if (v7 < a2)
  {
    unsigned int v12 = ~v7 + a2;
    if (v8 < 4)
    {
      int v13 = (v12 >> (8 * v8)) + 1;
      if (v8)
      {
        int v15 = v12 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if (v8 == 3)
        {
          *(_WORD *)a1 = v15;
          a1[2] = BYTE2(v15);
        }
        else if (v8 == 2)
        {
          *(_WORD *)a1 = v15;
        }
        else
        {
          *a1 = v15;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v12;
      int v13 = 1;
    }
    switch(v11)
    {
      case 1:
        a1[v8] = v13;
        return;
      case 2:
        *(_WORD *)&a1[v8] = v13;
        return;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v8] = v13;
        return;
      default:
        return;
    }
  }
  switch(v11)
  {
    case 1:
      a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 2:
      *(_WORD *)&a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 3:
LABEL_34:
      __break(1u);
      JUMPOUT(0x21CAEBF20);
    case 4:
      *(_DWORD *)&a1[v8] = 0;
      goto LABEL_20;
    default:
LABEL_20:
      if (a2)
      {
LABEL_21:
        uint64_t v16 = *(void (**)(void))(v6 + 56);
        v16();
      }
      return;
  }
}

uint64_t *sub_21CAEBF48(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v9 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v10 = *(_DWORD *)(v9 + 80);
  uint64_t v11 = v7 + v10;
  uint64_t v12 = *(void *)(v9 + 64);
  uint64_t v13 = v12 + v10;
  uint64_t v14 = (v12 + v10 + ((v7 + v10) & ~v10)) & ~v10;
  if (*(_DWORD *)(v9 + 84)) {
    size_t v15 = *(void *)(v9 + 64);
  }
  else {
    size_t v15 = v12 + 1;
  }
  unint64_t v16 = v14 + v15;
  uint64_t v17 = (*(unsigned char *)(v6 + 80) | *(unsigned char *)(v9 + 80));
  if (v17 > 7 || ((*(_DWORD *)(v6 + 80) | *(_DWORD *)(v9 + 80)) & 0x100000) != 0 || v16 > 0x18)
  {
    uint64_t v20 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v20 + ((v17 + 16) & ~v17));
    swift_retain();
  }
  else
  {
    uint64_t v21 = AssociatedTypeWitness;
    uint64_t v22 = ~v10;
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16))(a1, a2, v5);
    unint64_t v23 = ((unint64_t)a1 + v11) & v22;
    unint64_t v24 = ((unint64_t)a2 + v11) & v22;
    uint64_t v25 = *(void (**)(unint64_t, unint64_t, uint64_t))(v9 + 16);
    v25(v23, v24, v21);
    __dst = (void *)((v13 + v23) & v22);
    if ((*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v9 + 48))((v13 + v24) & v22, 1, v21))
    {
      memcpy(__dst, (const void *)((v13 + v24) & v22), v15);
    }
    else
    {
      v25((unint64_t)__dst, (v13 + v24) & v22, v21);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v9 + 56))(__dst, 0, 1, v21);
    }
  }
  return a1;
}

uint64_t sub_21CAEC180(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(*(void *)(a2 + 16) - 8) + 8;
  (*(void (**)(uint64_t, void))v3)(a1, *(void *)(a2 + 16));
  uint64_t v4 = *(void *)(v3 + 56);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v6 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = (v4 + a1 + v7) & ~v7;
  uint64_t v11 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  v11(v8, AssociatedTypeWitness);
  uint64_t v9 = (*(void *)(v6 + 64) + v7 + v8) & ~v7;
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v9, 1, AssociatedTypeWitness);
  if (!result)
  {
    return ((uint64_t (*)(uint64_t, uint64_t))v11)(v9, AssociatedTypeWitness);
  }
  return result;
}

uint64_t sub_21CAEC2DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(uint64_t, uint64_t, void))v5)(a1, a2, *(void *)(a3 + 16));
  uint64_t v6 = *(void *)(v5 + 48);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = v6 + v9;
  uint64_t v17 = a1;
  uint64_t v11 = (v6 + v9 + a1) & ~v9;
  uint64_t v12 = (v10 + a2) & ~v9;
  uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16);
  v13(v11, v12, AssociatedTypeWitness);
  size_t v14 = *(void *)(v8 + 64);
  if ((*(unsigned int (**)(size_t, uint64_t, uint64_t))(v8 + 48))((v14 + v9 + v12) & ~v9, 1, AssociatedTypeWitness))
  {
    if (*(_DWORD *)(v8 + 84)) {
      size_t v15 = v14;
    }
    else {
      size_t v15 = v14 + 1;
    }
    memcpy((void *)((v14 + v9 + v11) & ~v9), (const void *)((v14 + v9 + v12) & ~v9), v15);
  }
  else
  {
    v13((v14 + v9 + v11) & ~v9, (v14 + v9 + v12) & ~v9, AssociatedTypeWitness);
    (*(void (**)(size_t, void, uint64_t, uint64_t))(v8 + 56))((v14 + v9 + v11) & ~v9, 0, 1, AssociatedTypeWitness);
  }
  return v17;
}

uint64_t sub_21CAEC494(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(uint64_t, uint64_t, void))v5)(a1, a2, *(void *)(a3 + 16));
  uint64_t v6 = *(void *)(v5 + 40);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v9 = v8;
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = v6 + v10;
  uint64_t v23 = a1;
  uint64_t v12 = (v6 + v10 + a1) & ~v10;
  uint64_t v13 = (v11 + a2) & ~v10;
  size_t v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 24);
  v14(v12, v13, AssociatedTypeWitness);
  size_t v15 = *(void *)(v8 + 64);
  unint64_t v16 = (void *)((v15 + v10 + v12) & ~v10);
  uint64_t v17 = (void *)((v15 + v10 + v13) & ~v10);
  uint64_t v18 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v9 + 48);
  LODWORD(v12) = v18(v16, 1, AssociatedTypeWitness);
  int v19 = v18(v17, 1, AssociatedTypeWitness);
  if (v12)
  {
    if (!v19)
    {
      (*(void (**)(void *, void *, uint64_t))(v9 + 16))(v16, v17, AssociatedTypeWitness);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v9 + 56))(v16, 0, 1, AssociatedTypeWitness);
      return v23;
    }
    int v20 = *(_DWORD *)(v9 + 84);
  }
  else
  {
    if (!v19)
    {
      v14((uint64_t)v16, (uint64_t)v17, AssociatedTypeWitness);
      return v23;
    }
    (*(void (**)(void *, uint64_t))(v9 + 8))(v16, AssociatedTypeWitness);
    int v20 = *(_DWORD *)(v9 + 84);
  }
  if (v20) {
    size_t v21 = v15;
  }
  else {
    size_t v21 = v15 + 1;
  }
  memcpy(v16, v17, v21);
  return v23;
}

uint64_t sub_21CAEC6B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(uint64_t, uint64_t, void))v5)(a1, a2, *(void *)(a3 + 16));
  uint64_t v6 = *(void *)(v5 + 32);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = v6 + v9;
  uint64_t v17 = a1;
  uint64_t v11 = (v6 + v9 + a1) & ~v9;
  uint64_t v12 = (v10 + a2) & ~v9;
  uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 32);
  v13(v11, v12, AssociatedTypeWitness);
  size_t v14 = *(void *)(v8 + 64);
  if ((*(unsigned int (**)(size_t, uint64_t, uint64_t))(v8 + 48))((v14 + v9 + v12) & ~v9, 1, AssociatedTypeWitness))
  {
    if (*(_DWORD *)(v8 + 84)) {
      size_t v15 = v14;
    }
    else {
      size_t v15 = v14 + 1;
    }
    memcpy((void *)((v14 + v9 + v11) & ~v9), (const void *)((v14 + v9 + v12) & ~v9), v15);
  }
  else
  {
    v13((v14 + v9 + v11) & ~v9, (v14 + v9 + v12) & ~v9, AssociatedTypeWitness);
    (*(void (**)(size_t, void, uint64_t, uint64_t))(v8 + 56))((v14 + v9 + v11) & ~v9, 0, 1, AssociatedTypeWitness);
  }
  return v17;
}

uint64_t sub_21CAEC86C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(uint64_t, uint64_t, void))v5)(a1, a2, *(void *)(a3 + 16));
  uint64_t v6 = *(void *)(v5 + 24);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v9 = v8;
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = v6 + v10;
  uint64_t v23 = a1;
  uint64_t v12 = (v6 + v10 + a1) & ~v10;
  uint64_t v13 = (v11 + a2) & ~v10;
  size_t v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 40);
  v14(v12, v13, AssociatedTypeWitness);
  size_t v15 = *(void *)(v8 + 64);
  unint64_t v16 = (void *)((v15 + v10 + v12) & ~v10);
  uint64_t v17 = (void *)((v15 + v10 + v13) & ~v10);
  uint64_t v18 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v9 + 48);
  LODWORD(v12) = v18(v16, 1, AssociatedTypeWitness);
  int v19 = v18(v17, 1, AssociatedTypeWitness);
  if (v12)
  {
    if (!v19)
    {
      (*(void (**)(void *, void *, uint64_t))(v9 + 32))(v16, v17, AssociatedTypeWitness);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v9 + 56))(v16, 0, 1, AssociatedTypeWitness);
      return v23;
    }
    int v20 = *(_DWORD *)(v9 + 84);
  }
  else
  {
    if (!v19)
    {
      v14((uint64_t)v16, (uint64_t)v17, AssociatedTypeWitness);
      return v23;
    }
    (*(void (**)(void *, uint64_t))(v9 + 8))(v16, AssociatedTypeWitness);
    int v20 = *(_DWORD *)(v9 + 84);
  }
  if (v20) {
    size_t v21 = v15;
  }
  else {
    size_t v21 = v15 + 1;
  }
  memcpy(v16, v17, v21);
  return v23;
}

uint64_t sub_21CAECA8C(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned int *)(v6 + 84);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v9 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v10 = *(unsigned int *)(v9 + 84);
  if (v10 <= v7) {
    unsigned int v11 = v7;
  }
  else {
    unsigned int v11 = *(_DWORD *)(v9 + 84);
  }
  unsigned int v12 = v10 - 1;
  if (!v10) {
    unsigned int v12 = 0;
  }
  if (v12 > v11) {
    unsigned int v11 = v12;
  }
  uint64_t v13 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v14 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
  if (v10) {
    uint64_t v15 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
  }
  else {
    uint64_t v15 = v14 + 1;
  }
  if (!a2) {
    return 0;
  }
  uint64_t v16 = AssociatedTypeWitness;
  uint64_t v17 = *(void *)(v6 + 64) + v13;
  uint64_t v18 = v14 + v13;
  if (a2 <= v11) {
    goto LABEL_31;
  }
  uint64_t v19 = v15 + ((v18 + (v17 & ~v13)) & ~v13);
  char v20 = 8 * v19;
  if (v19 <= 3)
  {
    unsigned int v22 = ((a2 - v11 + ~(-1 << v20)) >> v20) + 1;
    if (HIWORD(v22))
    {
      int v21 = *(_DWORD *)((char *)a1 + v19);
      if (!v21) {
        goto LABEL_31;
      }
      goto LABEL_21;
    }
    if (v22 > 0xFF)
    {
      int v21 = *(unsigned __int16 *)((char *)a1 + v19);
      if (!*(unsigned __int16 *)((char *)a1 + v19)) {
        goto LABEL_31;
      }
      goto LABEL_21;
    }
    if (v22 < 2)
    {
LABEL_31:
      if (v11)
      {
        if (v7 == v11)
        {
          uint64_t v26 = *(uint64_t (**)(unsigned __int16 *, uint64_t, uint64_t))(v6 + 48);
          return v26(a1, v7, v5);
        }
        else
        {
          uint64_t v28 = ~v13;
          unint64_t v29 = ((unint64_t)a1 + v17) & v28;
          if (v10 == v11)
          {
            uint64_t v30 = *(uint64_t (**)(unint64_t))(v9 + 48);
            return v30(v29);
          }
          else
          {
            unsigned int v31 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v9 + 48))((v18 + v29) & v28, v10, v16);
            if (v31 >= 2) {
              return v31 - 1;
            }
            else {
              return 0;
            }
          }
        }
      }
      return 0;
    }
  }
  int v21 = *((unsigned __int8 *)a1 + v19);
  if (!*((unsigned char *)a1 + v19)) {
    goto LABEL_31;
  }
LABEL_21:
  int v23 = (v21 - 1) << v20;
  if (v19 > 3) {
    int v23 = 0;
  }
  if (v19)
  {
    if (v19 <= 3) {
      int v24 = v19;
    }
    else {
      int v24 = 4;
    }
    switch(v24)
    {
      case 2:
        int v25 = *a1;
        break;
      case 3:
        int v25 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        int v25 = *(_DWORD *)a1;
        break;
      default:
        int v25 = *(unsigned __int8 *)a1;
        break;
    }
  }
  else
  {
    int v25 = 0;
  }
  return v11 + (v25 | v23) + 1;
}

void sub_21CAECD74(unsigned char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v7 = *(void *)(a4 + 16);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v36 = v8;
  uint64_t v9 = *(unsigned int *)(v8 + 84);
  int v10 = 0;
  uint64_t v11 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v12 = v11;
  unsigned int v13 = *(_DWORD *)(v11 + 84);
  if (v13 <= v9) {
    unsigned int v14 = v9;
  }
  else {
    unsigned int v14 = *(_DWORD *)(v11 + 84);
  }
  unsigned int v15 = v13 - 1;
  if (!v13) {
    unsigned int v15 = 0;
  }
  if (v15 > v14) {
    unsigned int v14 = v15;
  }
  uint64_t v16 = *(unsigned __int8 *)(v11 + 80);
  uint64_t v17 = *(void *)(v8 + 64) + v16;
  uint64_t v18 = *(void *)(v11 + 64);
  uint64_t v19 = v18 + v16;
  if (v13) {
    uint64_t v20 = v18;
  }
  else {
    uint64_t v20 = v18 + 1;
  }
  size_t v21 = v20 + ((v18 + v16 + (v17 & ~v16)) & ~v16);
  if (a3 <= v14) {
    goto LABEL_19;
  }
  if (v21 <= 3)
  {
    unsigned int v22 = ((a3 - v14 + ~(-1 << (8 * v21))) >> (8 * v21)) + 1;
    if (HIWORD(v22))
    {
      int v10 = 4;
      if (v14 >= a2) {
        goto LABEL_27;
      }
LABEL_20:
      unsigned int v23 = ~v14 + a2;
      if (v21 < 4)
      {
        int v24 = (v23 >> (8 * v21)) + 1;
        if (v21)
        {
          int v25 = v23 & ~(-1 << (8 * v21));
          bzero(a1, v21);
          if (v21 == 3)
          {
            *(_WORD *)a1 = v25;
            a1[2] = BYTE2(v25);
          }
          else if (v21 == 2)
          {
            *(_WORD *)a1 = v25;
          }
          else
          {
            *a1 = v25;
          }
        }
      }
      else
      {
        bzero(a1, v21);
        *(_DWORD *)a1 = v23;
        int v24 = 1;
      }
      switch(v10)
      {
        case 1:
          a1[v21] = v24;
          break;
        case 2:
          *(_WORD *)&a1[v21] = v24;
          break;
        case 3:
LABEL_67:
          __break(1u);
          JUMPOUT(0x21CAED168);
        case 4:
          *(_DWORD *)&a1[v21] = v24;
          break;
        default:
          return;
      }
      return;
    }
    if (v22 >= 0x100) {
      int v10 = 2;
    }
    else {
      int v10 = v22 > 1;
    }
LABEL_19:
    if (v14 >= a2) {
      goto LABEL_27;
    }
    goto LABEL_20;
  }
  int v10 = 1;
  if (v14 < a2) {
    goto LABEL_20;
  }
LABEL_27:
  uint64_t v26 = ~v16;
  switch(v10)
  {
    case 1:
      a1[v21] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_32;
    case 2:
      *(_WORD *)&a1[v21] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_32;
    case 3:
      goto LABEL_67;
    case 4:
      *(_DWORD *)&a1[v21] = 0;
      goto LABEL_31;
    default:
LABEL_31:
      if (!a2) {
        return;
      }
LABEL_32:
      if (v9 == v14)
      {
        uint64_t v27 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v36 + 56);
        v27(a1, a2, v9, v7);
        return;
      }
      unint64_t v28 = (unint64_t)&a1[v17] & v26;
      if (v13 == v14)
      {
        unint64_t v29 = *(void (**)(unint64_t, uint64_t))(v12 + 56);
        uint64_t v30 = a2;
LABEL_61:
        v29(v28, v30);
        return;
      }
      unint64_t v31 = (v19 + v28) & v26;
      if (v13) {
        size_t v32 = v18;
      }
      else {
        size_t v32 = (v18 + 1);
      }
      if (v15 >= a2)
      {
        uint64_t v30 = (a2 + 1);
        unint64_t v29 = *(void (**)(unint64_t, uint64_t))(v12 + 56);
        unint64_t v28 = (v19 + v28) & v26;
        goto LABEL_61;
      }
      if (v32 <= 3) {
        int v33 = ~(-1 << (8 * v32));
      }
      else {
        int v33 = -1;
      }
      if (v32)
      {
        int v34 = v33 & (~v15 + a2);
        if (v32 <= 3) {
          int v35 = v32;
        }
        else {
          int v35 = 4;
        }
        bzero((void *)((v19 + v28) & v26), v32);
        switch(v35)
        {
          case 2:
            *(_WORD *)unint64_t v31 = v34;
            break;
          case 3:
            *(_WORD *)unint64_t v31 = v34;
            *(unsigned char *)(v31 + 2) = BYTE2(v34);
            break;
          case 4:
            *(_DWORD *)unint64_t v31 = v34;
            break;
          default:
            *(unsigned char *)unint64_t v31 = v34;
            break;
        }
      }
      break;
  }
}

uint64_t *sub_21CAED1A0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  uint64_t v7 = *(void *)(a3 + 32);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(_DWORD *)(v8 + 80);
  uint64_t v10 = v6 + v9;
  uint64_t v11 = *(void *)(v8 + 64) + 7;
  unint64_t v12 = ((v11 + ((v6 + v9) & ~v9)) & 0xFFFFFFFFFFFFFFF8) + 9;
  unsigned int v13 = v9 | *(_DWORD *)(v5 + 80) & 0xF8;
  if (v13 > 7 || ((*(_DWORD *)(v5 + 80) | *(_DWORD *)(v8 + 80)) & 0x100000) != 0 || v12 > 0x18)
  {
    uint64_t v16 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v16 + (((v13 | 7) + 16) & ~(unint64_t)(v13 | 7)));
    swift_retain();
  }
  else
  {
    uint64_t v17 = ~v9;
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    unint64_t v18 = ((unint64_t)a2 + v10) & v17;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 16))(((unint64_t)v4 + v10) & v17, v18, v7);
    unint64_t v19 = (v11 + v18) & 0xFFFFFFFFFFFFFFF8;
    char v20 = *(unsigned char *)(v19 + 8);
    unint64_t v21 = (v11 + (((unint64_t)v4 + v10) & v17)) & 0xFFFFFFFFFFFFFFF8;
    *(void *)unint64_t v21 = *(void *)v19;
    *(unsigned char *)(v21 + 8) = v20;
  }
  return v4;
}

uint64_t sub_21CAED340(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(*(void *)(a2 + 16) - 8) + 8;
  (*(void (**)(void))v4)();
  uint64_t v5 = *(void *)(*(void *)(a2 + 32) - 8);
  uint64_t v6 = *(uint64_t (**)(unint64_t))(v5 + 8);
  unint64_t v7 = (*(void *)(v4 + 56) + a1 + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);

  return v6(v7);
}

uint64_t sub_21CAED3E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(v6 + 48);
  uint64_t v8 = *(void *)(*(void *)(a3 + 32) - 8);
  uint64_t v9 = v8 + 16;
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = v7 + v10;
  uint64_t v12 = (v11 + a1) & ~v10;
  uint64_t v13 = (v11 + a2) & ~v10;
  (*(void (**)(uint64_t, uint64_t))(v8 + 16))(v12, v13);
  uint64_t v14 = *(void *)(v9 + 48) + 7;
  unint64_t v15 = (v14 + v12) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v16 = (v14 + v13) & 0xFFFFFFFFFFFFFFF8;
  char v17 = *(unsigned char *)(v16 + 8);
  *(void *)unint64_t v15 = *(void *)v16;
  *(unsigned char *)(v15 + 8) = v17;
  return a1;
}

uint64_t sub_21CAED4BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(v6 + 40);
  uint64_t v8 = *(void *)(*(void *)(a3 + 32) - 8);
  uint64_t v9 = v8 + 24;
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = v7 + v10;
  uint64_t v12 = (v11 + a1) & ~v10;
  uint64_t v13 = (v11 + a2) & ~v10;
  (*(void (**)(uint64_t, uint64_t))(v8 + 24))(v12, v13);
  uint64_t v14 = *(void *)(v9 + 40) + 7;
  unint64_t v15 = (v14 + v12) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v16 = (v14 + v13) & 0xFFFFFFFFFFFFFFF8;
  char v17 = *(unsigned char *)(v16 + 8);
  *(void *)unint64_t v15 = *(void *)v16;
  *(unsigned char *)(v15 + 8) = v17;
  return a1;
}

uint64_t sub_21CAED594(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(v6 + 32);
  uint64_t v8 = *(void *)(*(void *)(a3 + 32) - 8);
  uint64_t v9 = v8 + 32;
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = v7 + v10;
  uint64_t v12 = (v11 + a1) & ~v10;
  uint64_t v13 = (v11 + a2) & ~v10;
  (*(void (**)(uint64_t, uint64_t))(v8 + 32))(v12, v13);
  uint64_t v14 = *(void *)(v9 + 32) + 7;
  unint64_t v15 = (v14 + v12) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v16 = (v14 + v13) & 0xFFFFFFFFFFFFFFF8;
  char v17 = *(unsigned char *)(v16 + 8);
  *(void *)unint64_t v15 = *(void *)v16;
  *(unsigned char *)(v15 + 8) = v17;
  return a1;
}

uint64_t sub_21CAED66C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(v6 + 24);
  uint64_t v8 = *(void *)(*(void *)(a3 + 32) - 8);
  uint64_t v9 = v8 + 40;
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = v7 + v10;
  uint64_t v12 = (v11 + a1) & ~v10;
  uint64_t v13 = (v11 + a2) & ~v10;
  (*(void (**)(uint64_t, uint64_t))(v8 + 40))(v12, v13);
  uint64_t v14 = *(void *)(v9 + 24) + 7;
  unint64_t v15 = (v14 + v12) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v16 = (v14 + v13) & 0xFFFFFFFFFFFFFFF8;
  char v17 = *(unsigned char *)(v16 + 8);
  *(void *)unint64_t v15 = *(void *)v16;
  *(unsigned char *)(v15 + 8) = v17;
  return a1;
}

uint64_t sub_21CAED744(unsigned __int8 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = *(void *)(a3 + 32);
  unsigned int v6 = *(_DWORD *)(v4 + 84);
  uint64_t v7 = *(void *)(v5 - 8);
  uint64_t v8 = *(unsigned int *)(v7 + 84);
  uint64_t v9 = *(unsigned __int8 *)(v7 + 80);
  if (v8 <= v6) {
    unsigned int v10 = *(_DWORD *)(v4 + 84);
  }
  else {
    unsigned int v10 = *(_DWORD *)(v7 + 84);
  }
  if (!a2) {
    return 0;
  }
  uint64_t v11 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) + v9;
  if (v10 < a2)
  {
    unint64_t v12 = ((*(void *)(*(void *)(v5 - 8) + 64) + (v11 & ~v9) + 7) & 0xFFFFFFFFFFFFFFF8) + 9;
    unsigned int v13 = (a2 - v10 + 255) >> (8 * v12);
    if (v12 < 4) {
      unsigned int v14 = v13 + 1;
    }
    else {
      unsigned int v14 = 2;
    }
    if (v14 >= 0x10000) {
      LODWORD(v15) = 4;
    }
    else {
      LODWORD(v15) = 2;
    }
    if (v14 < 0x100) {
      LODWORD(v15) = 1;
    }
    if (v14 >= 2) {
      uint64_t v15 = v15;
    }
    else {
      uint64_t v15 = 0;
    }
    switch(v15)
    {
      case 1:
        int v16 = a1[v12];
        if (!a1[v12]) {
          break;
        }
        goto LABEL_21;
      case 2:
        int v16 = *(unsigned __int16 *)&a1[v12];
        if (*(_WORD *)&a1[v12]) {
          goto LABEL_21;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x21CAED908);
      case 4:
        int v16 = *(_DWORD *)&a1[v12];
        if (!v16) {
          break;
        }
LABEL_21:
        int v17 = (v16 - 1) << (8 * v12);
        if (v12 >= 4) {
          int v17 = 0;
        }
        if (v12 == 1) {
          int v18 = *a1;
        }
        else {
          int v18 = *(_DWORD *)a1;
        }
        return v10 + (v18 | v17) + 1;
      default:
        break;
    }
  }
  if (!v10) {
    return 0;
  }
  if (v6 >= v8) {
    return (*(uint64_t (**)(void))(v4 + 48))();
  }
  return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v7 + 48))((unint64_t)&a1[v11] & ~v9, v8, v5);
}

void sub_21CAED91C(unsigned char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  uint64_t v8 = *(void *)(a4 + 32);
  uint64_t v9 = *(void *)(v8 - 8);
  unsigned int v10 = *(_DWORD *)(v9 + 84);
  uint64_t v11 = *(unsigned __int8 *)(v9 + 80);
  if (v10 <= v7) {
    unsigned int v12 = *(_DWORD *)(v6 + 84);
  }
  else {
    unsigned int v12 = *(_DWORD *)(v9 + 84);
  }
  uint64_t v13 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64) + v11;
  size_t v14 = ((*(void *)(*(void *)(v8 - 8) + 64) + (v13 & ~v11) + 7) & 0xFFFFFFFFFFFFFFF8) + 9;
  char v15 = 8 * v14;
  if (v12 >= a3)
  {
    int v19 = 0;
    if (v12 >= a2)
    {
LABEL_17:
      switch(v19)
      {
        case 1:
          a1[v14] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_34;
        case 2:
          *(_WORD *)&a1[v14] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_34;
        case 3:
          goto LABEL_45;
        case 4:
          *(_DWORD *)&a1[v14] = 0;
          goto LABEL_33;
        default:
LABEL_33:
          if (a2)
          {
LABEL_34:
            if (v7 >= v10)
            {
              int v24 = *(void (**)(void))(v6 + 56);
              v24();
            }
            else
            {
              unint64_t v22 = (unint64_t)&a1[v13] & ~v11;
              unsigned int v23 = *(void (**)(unint64_t))(v9 + 56);
              v23(v22);
            }
          }
          break;
      }
      return;
    }
  }
  else
  {
    unsigned int v16 = (a3 - v12 + 255) >> v15;
    if (v14 <= 3) {
      unsigned int v17 = v16 + 1;
    }
    else {
      unsigned int v17 = 2;
    }
    if (v17 >= 0x10000) {
      int v18 = 4;
    }
    else {
      int v18 = 2;
    }
    if (v17 < 0x100) {
      int v18 = 1;
    }
    if (v17 >= 2) {
      int v19 = v18;
    }
    else {
      int v19 = 0;
    }
    if (v12 >= a2) {
      goto LABEL_17;
    }
  }
  if (v14 < 4) {
    unsigned int v20 = ((~v12 + a2) >> v15) + 1;
  }
  else {
    unsigned int v20 = 1;
  }
  if (v14 >= 4) {
    unsigned int v21 = ~v12 + a2;
  }
  else {
    unsigned int v21 = (~(_BYTE)v12 + a2);
  }
  bzero(a1, v14);
  if (v14 == 1) {
    *a1 = v21;
  }
  else {
    *(_DWORD *)a1 = v21;
  }
  switch(v19)
  {
    case 1:
      a1[v14] = v20;
      break;
    case 2:
      *(_WORD *)&a1[v14] = v20;
      break;
    case 3:
LABEL_45:
      __break(1u);
      JUMPOUT(0x21CAEDBA4);
    case 4:
      *(_DWORD *)&a1[v14] = v20;
      break;
    default:
      return;
  }
}

uint64_t *sub_21CAEDBCC(uint64_t *a1, uint64_t *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  unsigned int v6 = *(_DWORD *)(v5 + 84);
  size_t v7 = *(void *)(v5 + 64);
  unint64_t v8 = v7;
  if (v6 <= 1)
  {
    if (v7 <= 3)
    {
      unsigned int v10 = (~(-1 << (8 * v7)) - v6 + 2) >> (8 * v7);
      if (v10 > 0xFFFE)
      {
        uint64_t v9 = 4;
      }
      else
      {
        BOOL v11 = v10 != 0;
        BOOL v12 = v10 >= 0xFF;
        uint64_t v9 = 2;
        if (!v12) {
          uint64_t v9 = v11;
        }
      }
    }
    else
    {
      uint64_t v9 = 1;
    }
    unint64_t v8 = v9 + v7;
  }
  uint64_t v13 = *(_DWORD *)(v5 + 80);
  if (v13 <= 7 && v8 <= 0x18 && (*(_DWORD *)(v5 + 80) & 0x100000) == 0)
  {
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v5 + 48))(a2, 2, AssociatedTypeWitness))
    {
      if (v6 <= 1)
      {
        if (v7 <= 3)
        {
          unsigned int v18 = (~(-1 << (8 * v7)) - v6 + 2) >> (8 * v7);
          if (v18 > 0xFFFE)
          {
            uint64_t v17 = 4;
          }
          else
          {
            BOOL v19 = v18 != 0;
            BOOL v12 = v18 >= 0xFF;
            uint64_t v17 = 2;
            if (!v12) {
              uint64_t v17 = v19;
            }
          }
        }
        else
        {
          uint64_t v17 = 1;
        }
        v7 += v17;
      }
      memcpy(a1, a2, v7);
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v5 + 56))(a1, 0, 2, AssociatedTypeWitness);
    }
  }
  else
  {
    uint64_t v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + ((v13 + 16) & ~v13));
    swift_retain();
  }
  return a1;
}

void *sub_21CAEDDE4(void *a1, void *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  unsigned int v6 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v5 + 48);
  int v7 = v6(a1, 2, AssociatedTypeWitness);
  int v8 = v6(a2, 2, AssociatedTypeWitness);
  if (v7)
  {
    if (v8)
    {
      unsigned int v9 = *(_DWORD *)(v5 + 84);
      size_t v10 = *(void *)(v5 + 64);
      if (v9 <= 1)
      {
        if (v10 > 3)
        {
LABEL_5:
          uint64_t v11 = 1;
LABEL_16:
          v10 += v11;
          goto LABEL_17;
        }
LABEL_9:
        unsigned int v14 = (~(-1 << (8 * v10)) - v9 + 2) >> (8 * v10);
        if (v14 > 0xFFFE)
        {
          uint64_t v11 = 4;
        }
        else
        {
          BOOL v15 = v14 != 0;
          BOOL v16 = v14 >= 0xFF;
          uint64_t v11 = 2;
          if (!v16) {
            uint64_t v11 = v15;
          }
        }
        goto LABEL_16;
      }
      goto LABEL_17;
    }
    (*(void (**)(void *, void *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v5 + 56))(a1, 0, 2, AssociatedTypeWitness);
  }
  else
  {
    if (v8)
    {
      uint64_t v13 = *(void (**)(void *, uint64_t))(v5 + 8);
      uint64_t v12 = v5 + 8;
      v13(a1, AssociatedTypeWitness);
      unsigned int v9 = *(_DWORD *)(v12 + 76);
      size_t v10 = *(void *)(v12 + 56);
      if (v9 <= 1)
      {
        if (v10 > 3) {
          goto LABEL_5;
        }
        goto LABEL_9;
      }
LABEL_17:
      memcpy(a1, a2, v10);
      return a1;
    }
    (*(void (**)(void *, void *, uint64_t))(v5 + 24))(a1, a2, AssociatedTypeWitness);
  }
  return a1;
}

void *sub_21CAEDFC4(void *a1, const void *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v5 + 48))(a2, 2, AssociatedTypeWitness))
  {
    unsigned int v6 = *(_DWORD *)(v5 + 84);
    size_t v7 = *(void *)(v5 + 64);
    if (v6 <= 1)
    {
      if (v7 <= 3)
      {
        unsigned int v9 = (~(-1 << (8 * v7)) - v6 + 2) >> (8 * v7);
        if (v9 > 0xFFFE)
        {
          uint64_t v8 = 4;
        }
        else
        {
          BOOL v10 = v9 != 0;
          BOOL v11 = v9 >= 0xFF;
          uint64_t v8 = 2;
          if (!v11) {
            uint64_t v8 = v10;
          }
        }
      }
      else
      {
        uint64_t v8 = 1;
      }
      v7 += v8;
    }
    memcpy(a1, a2, v7);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v5 + 32))(a1, a2, AssociatedTypeWitness);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v5 + 56))(a1, 0, 2, AssociatedTypeWitness);
  }
  return a1;
}

void *sub_21CAEE120(void *a1, void *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  unsigned int v6 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v5 + 48);
  int v7 = v6(a1, 2, AssociatedTypeWitness);
  int v8 = v6(a2, 2, AssociatedTypeWitness);
  if (v7)
  {
    if (v8)
    {
      unsigned int v9 = *(_DWORD *)(v5 + 84);
      size_t v10 = *(void *)(v5 + 64);
      if (v9 <= 1)
      {
        if (v10 > 3)
        {
LABEL_5:
          uint64_t v11 = 1;
LABEL_16:
          v10 += v11;
          goto LABEL_17;
        }
LABEL_9:
        unsigned int v14 = (~(-1 << (8 * v10)) - v9 + 2) >> (8 * v10);
        if (v14 > 0xFFFE)
        {
          uint64_t v11 = 4;
        }
        else
        {
          BOOL v15 = v14 != 0;
          BOOL v16 = v14 >= 0xFF;
          uint64_t v11 = 2;
          if (!v16) {
            uint64_t v11 = v15;
          }
        }
        goto LABEL_16;
      }
      goto LABEL_17;
    }
    (*(void (**)(void *, void *, uint64_t))(v5 + 32))(a1, a2, AssociatedTypeWitness);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v5 + 56))(a1, 0, 2, AssociatedTypeWitness);
  }
  else
  {
    if (v8)
    {
      uint64_t v13 = *(void (**)(void *, uint64_t))(v5 + 8);
      uint64_t v12 = v5 + 8;
      v13(a1, AssociatedTypeWitness);
      unsigned int v9 = *(_DWORD *)(v12 + 76);
      size_t v10 = *(void *)(v12 + 56);
      if (v9 <= 1)
      {
        if (v10 > 3) {
          goto LABEL_5;
        }
        goto LABEL_9;
      }
LABEL_17:
      memcpy(a1, a2, v10);
      return a1;
    }
    (*(void (**)(void *, void *, uint64_t))(v5 + 40))(a1, a2, AssociatedTypeWitness);
  }
  return a1;
}

uint64_t sub_21CAEE338(uint64_t a1)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 48);

  return v3(a1, 2, AssociatedTypeWitness);
}

uint64_t sub_21CAEE3BC(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 56);

  return v5(a1, a2, 2, AssociatedTypeWitness);
}

unint64_t sub_21CAEE448(unint64_t *a1)
{
  unint64_t result = *a1;
  if (result >= 0xFFFFFFFF)
  {
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_21CAEE49C(uint64_t a1, uint64_t a2)
{
  if (*(void *)a2 < 0xFFFFFFFFuLL)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    uint64_t v3 = *(void *)(a2 + 8);
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v3;
    swift_retain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

unint64_t *sub_21CAEE4F0(unint64_t *a1, unint64_t *a2)
{
  unint64_t v4 = *a1;
  unint64_t v5 = *a2;
  if (v4 < 0xFFFFFFFF)
  {
    if (v5 >= 0xFFFFFFFF)
    {
      *a1 = v5;
      a1[1] = a2[1];
      swift_retain();
      swift_bridgeObjectRetain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  if (v5 < 0xFFFFFFFF)
  {
    swift_release();
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  *a1 = v5;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for FMUserDefaults(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

void *sub_21CAEE5B8(void *a1, uint64_t a2)
{
  if (*a1 < 0xFFFFFFFFuLL) {
    goto LABEL_5;
  }
  if (*(void *)a2 < 0xFFFFFFFFuLL)
  {
    swift_release();
    swift_bridgeObjectRelease();
LABEL_5:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  *a1 = *(void *)a2;
  swift_release();
  a1[1] = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_21CAEE630(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 16)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  if ((v3 + 1) >= 2) {
    return v3;
  }
  else {
    return 0;
  }
}

uint64_t sub_21CAEE680(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)__n128 result = 0;
    *(void *)(result + 8) = 0;
    *(_DWORD *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)__n128 result = a2;
    }
  }
  return result;
}

uint64_t sub_21CAEE6D4(uint64_t *a1)
{
  uint64_t v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

void *sub_21CAEE6EC(void *result, int a2)
{
  if (a2 < 0)
  {
    uint64_t v2 = a2 ^ 0x80000000;
    result[1] = 0;
  }
  else
  {
    if (!a2) {
      return result;
    }
    uint64_t v2 = (a2 - 1);
  }
  *__n128 result = v2;
  return result;
}

uint64_t *sub_21CAEE70C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  unint64_t v4 = a2[1];
  sub_21CAEE74C(*a2, v4);
  *a1 = v3;
  a1[1] = v4;
  return a1;
}

id sub_21CAEE74C(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 == 1) {
    return (id)(a2 & 0x3FFFFFFFFFFFFFFFLL);
  }
  return result;
}

void sub_21CAEE764(uint64_t a1)
{
}

void sub_21CAEE770(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 == 1) {
}
  }

uint64_t *sub_21CAEE788(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  unint64_t v4 = a2[1];
  sub_21CAEE74C(*a2, v4);
  uint64_t v5 = *a1;
  unint64_t v6 = a1[1];
  *a1 = v3;
  a1[1] = v4;
  sub_21CAEE770(v5, v6);
  return a1;
}

uint64_t *sub_21CAEE7D0(uint64_t *a1, _OWORD *a2)
{
  uint64_t v3 = *a1;
  unint64_t v4 = a1[1];
  *(_OWORD *)a1 = *a2;
  sub_21CAEE770(v3, v4);
  return a1;
}

uint64_t sub_21CAEE80C(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFE && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 32766);
  }
  unsigned int v3 = (((*(void *)(a1 + 8) >> 49) >> 13) | (4
                                                           * ((*(void *)(a1 + 8) >> 49) & 0x1800 | ((*(void *)(a1 + 8) & 7) << 8) | HIBYTE(*(void *)a1) & 0xF0 | *(void *)a1 & 0xF))) ^ 0x7FFF;
  if (v3 >= 0x7FFD) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t sub_21CAEE884(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFD)
  {
    *(void *)id result = a2 - 32766;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7FFE) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFE) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2)
    {
      unint64_t v3 = (-a2 >> 2) & 0x1FFF | ((-a2 & 0x7FFF) << 13);
      *(void *)id result = (v3 | (v3 << 56)) & 0xF00000000000000FLL;
      *(void *)(result + 8) = ((v3 >> 8) | (v3 << 49)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t sub_21CAEE8F0(void *a1)
{
  uint64_t v1 = a1[1] >> 62;
  if (v1 <= 1) {
    return v1;
  }
  else {
    return (*a1 >> 4) + 2;
  }
}

uint64_t sub_21CAEE90C(uint64_t result)
{
  *(void *)(result + 8) &= 0x3FFFFFFFFFFFFFFFuLL;
  return result;
}

void *sub_21CAEE91C(void *result, uint64_t a2)
{
  if (a2 < 2)
  {
    uint64_t v2 = result[1] & 0xFFFFFFFFFFFFFF8 | (a2 << 62);
    *result &= 0xFFFFFFFFFFFFFF0uLL;
    result[1] = v2;
  }
  else
  {
    *id result = 16 * (a2 - 2);
    result[1] = 0x8000000000000000;
  }
  return result;
}

void *sub_21CAEE94C(void *a1, void *a2, uint64_t a3)
{
  return sub_21CAF2598(a1, a2, a3, (void (*)(void, uint64_t, uint64_t))sub_21CAEE964);
}

unint64_t sub_21CAEE964(unint64_t result)
{
  if ((result >> 62) <= 1)
  {
    swift_retain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

unint64_t sub_21CAEE9C4(unint64_t *a1)
{
  return sub_21CAB65C0(*a1);
}

unint64_t *sub_21CAEE9E8(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a2;
  unint64_t v4 = a2[1];
  unint64_t v5 = a2[2];
  sub_21CAEE964(*a2);
  unint64_t v6 = *a1;
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  sub_21CAB65C0(v6);
  return a1;
}

unint64_t *sub_21CAEEA40(unint64_t *a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 16);
  unint64_t v4 = *a1;
  *(_OWORD *)a1 = *(_OWORD *)a2;
  a1[2] = v3;
  sub_21CAB65C0(v4);
  return a1;
}

uint64_t *sub_21CAEEA90(uint64_t *a1, uint64_t *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v6 = *(_DWORD *)(v5 + 80);
  size_t v7 = ((v6 + 8) & ~v6) + *(void *)(v5 + 64);
  if (v6 <= 7 && (*(_DWORD *)(v5 + 80) & 0x100000) == 0 && v7 <= 0x18)
  {
    uint64_t v11 = AssociatedTypeWitness;
    uint64_t v12 = ~v6;
    if ((*(_DWORD *)(v5 + 84) & 0x80000000) != 0)
    {
      if ((*(unsigned int (**)(unint64_t))(v5 + 48))(((unint64_t)a2 + v6 + 8) & v12))
      {
LABEL_14:
        memcpy(a1, a2, v7);
        return a1;
      }
    }
    else
    {
      uint64_t v13 = *a2;
      if ((unint64_t)*a2 >= 0xFFFFFFFF) {
        LODWORD(v13) = -1;
      }
      if (v13 != -1) {
        goto LABEL_14;
      }
    }
    *a1 = *a2;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v5 + 16))(((unint64_t)a1 + v6 + 8) & v12, ((unint64_t)a2 + v6 + 8) & v12, v11);
    return a1;
  }
  uint64_t v10 = *a2;
  *a1 = *a2;
  a1 = (uint64_t *)(v10 + ((v6 & 0xF8 ^ 0x1F8) & (v6 + 16)));
  swift_retain();
  return a1;
}

void *sub_21CAEEC14(void *a1, void *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v6 = *(unsigned int *)(v5 + 84);
  uint64_t v7 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v8 = ~v7;
  size_t v9 = ((v7 + 8) & ~v7) + *(void *)(v5 + 64);
  if ((v6 & 0x80000000) != 0)
  {
    uint64_t v15 = ((v7 + 8) & ~v7) + *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
    uint64_t v12 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v5 + 48);
    int v13 = v12(((unint64_t)a1 + v7 + 8) & v8, v6, AssociatedTypeWitness);
    int v11 = v12(((unint64_t)a2 + v7 + 8) & v8, v6, AssociatedTypeWitness);
    size_t v9 = v15;
    if (!v13)
    {
LABEL_5:
      if (!v11)
      {
        *a1 = *a2;
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v5 + 24))(((unint64_t)a1 + v7 + 8) & v8, ((unint64_t)a2 + v7 + 8) & v8, AssociatedTypeWitness);
        return a1;
      }
      (*(void (**)(unint64_t, uint64_t))(v5 + 8))(((unint64_t)a1 + v7 + 8) & v8, AssociatedTypeWitness);
      goto LABEL_9;
    }
  }
  else
  {
    uint64_t v10 = *a2;
    if (*a2 >= 0xFFFFFFFFuLL) {
      LODWORD(v10) = -1;
    }
    int v11 = v10 + 1;
    if (*a1 > 0xFFFFFFFEuLL) {
      goto LABEL_5;
    }
  }
  if (!v11)
  {
    *a1 = *a2;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v5 + 16))(((unint64_t)a1 + v7 + 8) & v8, ((unint64_t)a2 + v7 + 8) & v8, AssociatedTypeWitness);
    return a1;
  }
LABEL_9:
  memcpy(a1, a2, v9);
  return a1;
}

uint64_t *sub_21CAEEE10(uint64_t *a1, uint64_t *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = ~v6;
  uint64_t v8 = *(void *)(v5 + 64);
  if ((*(_DWORD *)(v5 + 84) & 0x80000000) == 0)
  {
    uint64_t v9 = *a2;
    if ((unint64_t)*a2 >= 0xFFFFFFFF) {
      LODWORD(v9) = -1;
    }
    if (v9 != -1) {
      goto LABEL_5;
    }
LABEL_7:
    *a1 = *a2;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v5 + 32))(((unint64_t)a1 + v6 + 8) & v7, ((unint64_t)a2 + v6 + 8) & v7, AssociatedTypeWitness);
    return a1;
  }
  if (!(*(unsigned int (**)(unint64_t))(v5 + 48))(((unint64_t)a2 + v6 + 8) & v7)) {
    goto LABEL_7;
  }
LABEL_5:
  memcpy(a1, a2, ((v6 + 8) & ~v6) + v8);
  return a1;
}

void *sub_21CAEEF58(void *a1, void *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v6 = *(unsigned int *)(v5 + 84);
  uint64_t v7 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v8 = ~v7;
  size_t v9 = ((v7 + 8) & ~v7) + *(void *)(v5 + 64);
  if ((v6 & 0x80000000) != 0)
  {
    uint64_t v15 = ((v7 + 8) & ~v7) + *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
    uint64_t v12 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v5 + 48);
    int v13 = v12(((unint64_t)a1 + v7 + 8) & v8, v6, AssociatedTypeWitness);
    int v11 = v12(((unint64_t)a2 + v7 + 8) & v8, v6, AssociatedTypeWitness);
    size_t v9 = v15;
    if (!v13)
    {
LABEL_5:
      if (!v11)
      {
        *a1 = *a2;
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v5 + 40))(((unint64_t)a1 + v7 + 8) & v8, ((unint64_t)a2 + v7 + 8) & v8, AssociatedTypeWitness);
        return a1;
      }
      (*(void (**)(unint64_t, uint64_t))(v5 + 8))(((unint64_t)a1 + v7 + 8) & v8, AssociatedTypeWitness);
      goto LABEL_9;
    }
  }
  else
  {
    uint64_t v10 = *a2;
    if (*a2 >= 0xFFFFFFFFuLL) {
      LODWORD(v10) = -1;
    }
    int v11 = v10 + 1;
    if (*a1 > 0xFFFFFFFEuLL) {
      goto LABEL_5;
    }
  }
  if (!v11)
  {
    *a1 = *a2;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v5 + 32))(((unint64_t)a1 + v7 + 8) & v8, ((unint64_t)a2 + v7 + 8) & v8, AssociatedTypeWitness);
    return a1;
  }
LABEL_9:
  memcpy(a1, a2, v9);
  return a1;
}

uint64_t sub_21CAEF154(unsigned __int16 *a1, unsigned int a2)
{
  uint64_t v4 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v5 = v4;
  unsigned int v6 = *(_DWORD *)(v4 + 84);
  if (v6 <= 0x7FFFFFFF) {
    int v7 = 0x7FFFFFFF;
  }
  else {
    int v7 = *(_DWORD *)(v4 + 84);
  }
  uint64_t v8 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v9 = *(void *)(v4 + 64);
  if (!a2) {
    return 0;
  }
  if (v7 - 1 >= a2) {
    goto LABEL_23;
  }
  uint64_t v10 = ((v8 + 8) & ~v8) + v9;
  char v11 = 8 * v10;
  if (v10 > 3) {
    goto LABEL_7;
  }
  unsigned int v14 = (((1 << v11) + a2 - v7) >> v11) + 1;
  if (HIWORD(v14))
  {
    int v12 = *(_DWORD *)((char *)a1 + v10);
    if (v12) {
      goto LABEL_15;
    }
LABEL_23:
    if ((v6 & 0x80000000) != 0)
    {
      unsigned int v17 = (*(uint64_t (**)(unint64_t))(v5 + 48))(((unint64_t)a1 + v8 + 8) & ~v8);
    }
    else
    {
      uint64_t v16 = *(void *)a1;
      if (*(void *)a1 >= 0xFFFFFFFFuLL) {
        LODWORD(v16) = -1;
      }
      unsigned int v17 = v16 + 1;
    }
    if (v17 >= 2) {
      return v17 - 1;
    }
    else {
      return 0;
    }
  }
  if (v14 > 0xFF)
  {
    int v12 = *(unsigned __int16 *)((char *)a1 + v10);
    if (*(unsigned __int16 *)((char *)a1 + v10)) {
      goto LABEL_15;
    }
    goto LABEL_23;
  }
  if (v14 < 2) {
    goto LABEL_23;
  }
LABEL_7:
  int v12 = *((unsigned __int8 *)a1 + v10);
  if (!*((unsigned char *)a1 + v10)) {
    goto LABEL_23;
  }
LABEL_15:
  int v15 = (v12 - 1) << v11;
  if (v10 > 3) {
    int v15 = 0;
  }
  if (v10)
  {
    if (v10 > 3) {
      LODWORD(v10) = 4;
    }
    switch((int)v10)
    {
      case 2:
        LODWORD(v10) = *a1;
        break;
      case 3:
        LODWORD(v10) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v10) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v10) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return (v10 | v15) + v7;
}

void sub_21CAEF340(unsigned char *a1, unsigned int a2, unsigned int a3)
{
  uint64_t v6 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  uint64_t v8 = *(unsigned __int8 *)(v6 + 80);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v9 = 0x7FFFFFFF;
  }
  else {
    unsigned int v9 = *(_DWORD *)(v6 + 84);
  }
  unsigned int v10 = v9 - 1;
  size_t v11 = ((v8 + 8) & ~v8) + *(void *)(v6 + 64);
  if (v9 - 1 >= a3)
  {
    int v12 = 0;
LABEL_13:
    if (v10 >= a2) {
      goto LABEL_21;
    }
    goto LABEL_14;
  }
  int v12 = 1;
  if (v11 > 3) {
    goto LABEL_13;
  }
  unsigned int v13 = (((1 << (8 * v11)) + a3 - v9) >> (8 * v11)) + 1;
  if (HIWORD(v13))
  {
    int v12 = 4;
    if (v10 >= a2) {
      goto LABEL_21;
    }
  }
  else
  {
    if (v13 >= 0x100) {
      int v12 = 2;
    }
    else {
      int v12 = v13 > 1;
    }
    if (v10 >= a2)
    {
LABEL_21:
      switch(v12)
      {
        case 1:
          a1[v11] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_26;
        case 2:
          *(_WORD *)&a1[v11] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_26;
        case 3:
          goto LABEL_57;
        case 4:
          *(_DWORD *)&a1[v11] = 0;
          goto LABEL_25;
        default:
LABEL_25:
          if (a2)
          {
LABEL_26:
            if (a2 + 1 <= v9)
            {
              if (a2 != -1)
              {
                if ((v7 & 0x80000000) != 0)
                {
                  unsigned int v21 = *(void (**)(unint64_t))(v6 + 56);
                  v21((unint64_t)&a1[v8 + 8] & ~v8);
                }
                else
                {
                  if (((a2 + 1) & 0x80000000) != 0) {
                    uint64_t v20 = a2 - 0x7FFFFFFF;
                  }
                  else {
                    uint64_t v20 = a2;
                  }
                  *(void *)a1 = v20;
                }
              }
            }
            else
            {
              if (v11 <= 3) {
                int v17 = ~(-1 << (8 * v11));
              }
              else {
                int v17 = -1;
              }
              if (v11)
              {
                int v18 = v17 & (a2 - v9);
                if (v11 <= 3) {
                  int v19 = v11;
                }
                else {
                  int v19 = 4;
                }
                bzero(a1, v11);
                switch(v19)
                {
                  case 2:
                    *(_WORD *)a1 = v18;
                    break;
                  case 3:
                    *(_WORD *)a1 = v18;
                    a1[2] = BYTE2(v18);
                    break;
                  case 4:
                    *(_DWORD *)a1 = v18;
                    break;
                  default:
                    *a1 = v18;
                    break;
                }
              }
            }
          }
          break;
      }
      return;
    }
  }
LABEL_14:
  unsigned int v14 = a2 - v9;
  if (v11 < 4)
  {
    int v15 = (v14 >> (8 * v11)) + 1;
    if (v11)
    {
      int v16 = v14 & ~(-1 << (8 * v11));
      bzero(a1, v11);
      if (v11 == 3)
      {
        *(_WORD *)a1 = v16;
        a1[2] = BYTE2(v16);
      }
      else if (v11 == 2)
      {
        *(_WORD *)a1 = v16;
      }
      else
      {
        *a1 = v16;
      }
    }
  }
  else
  {
    bzero(a1, v11);
    *(_DWORD *)a1 = v14;
    int v15 = 1;
  }
  switch(v12)
  {
    case 1:
      a1[v11] = v15;
      break;
    case 2:
      *(_WORD *)&a1[v11] = v15;
      break;
    case 3:
LABEL_57:
      __break(1u);
      JUMPOUT(0x21CAEF65CLL);
    case 4:
      *(_DWORD *)&a1[v11] = v15;
      break;
    default:
      return;
  }
}

uint64_t sub_21CAEF694(uint64_t *a1)
{
  uint64_t v2 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  if ((*(_DWORD *)(v2 + 84) & 0x80000000) != 0)
  {
    uint64_t v5 = *(uint64_t (**)(unint64_t))(v2 + 48);
    unint64_t v6 = ((unint64_t)a1 + *(unsigned __int8 *)(v2 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
    return v5(v6);
  }
  else
  {
    uint64_t v3 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v3) = -1;
    }
    return (v3 + 1);
  }
}

void sub_21CAEF75C(unsigned char *a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0x7FFFFFFF) {
    unsigned int v6 = 0x7FFFFFFF;
  }
  else {
    unsigned int v6 = *(_DWORD *)(v4 + 84);
  }
  uint64_t v7 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v8 = ~v7;
  if (v6 >= a2)
  {
    if (a2)
    {
      if ((v5 & 0x80000000) != 0)
      {
        int v15 = *(void (**)(unint64_t, uint64_t))(v4 + 56);
        v15((unint64_t)&a1[v7 + 8] & v8, a2);
      }
      else
      {
        if ((a2 & 0x80000000) != 0) {
          uint64_t v14 = a2 ^ 0x80000000;
        }
        else {
          uint64_t v14 = (a2 - 1);
        }
        *(void *)a1 = v14;
      }
    }
  }
  else
  {
    size_t v9 = ((v7 + 8) & v8) + *(_DWORD *)(v4 + 64);
    int v10 = -1 << (8 * (((v7 + 8) & v8) + *(unsigned char *)(v4 + 64)));
    if (v9 <= 3) {
      int v11 = ~v10;
    }
    else {
      int v11 = -1;
    }
    if (v9)
    {
      int v12 = v11 & (~v6 + a2);
      if (v9 <= 3) {
        int v13 = v9;
      }
      else {
        int v13 = 4;
      }
      bzero(a1, v9);
      switch(v13)
      {
        case 2:
          *(_WORD *)a1 = v12;
          break;
        case 3:
          *(_WORD *)a1 = v12;
          a1[2] = BYTE2(v12);
          break;
        case 4:
          *(_DWORD *)a1 = v12;
          break;
        default:
          *a1 = v12;
          break;
      }
    }
  }
}

uint64_t sub_21CAEF8F4(int a1, id a2, unint64_t a3)
{
  if (a3 >> 62)
  {
    if (a3 >> 62 != 1) {
      return result;
    }
    id v3 = a2;
  }
  swift_retain();

  return swift_bridgeObjectRetain();
}

uint64_t sub_21CAEF964(uint64_t a1)
{
  return sub_21CAB62E4(*(void *)a1, *(id *)(a1 + 8), *(void *)(a1 + 16));
}

void *sub_21CAEF974(void *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = (void *)a2[1];
  unint64_t v5 = a2[2];
  uint64_t v6 = a2[3];
  sub_21CAEF8F4(*a2, v4, v5);
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  return a1;
}

uint64_t *sub_21CAEF9CC(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = (void *)a2[1];
  unint64_t v5 = a2[2];
  uint64_t v6 = a2[3];
  sub_21CAEF8F4(*a2, v4, v5);
  uint64_t v7 = *a1;
  uint64_t v8 = (void *)a1[1];
  unint64_t v9 = a1[2];
  *a1 = v3;
  a1[1] = (uint64_t)v4;
  a1[2] = v5;
  a1[3] = v6;
  sub_21CAB62E4(v7, v8, v9);
  return a1;
}

void *sub_21CAEFA30(void *a1, _OWORD *a2)
{
  uint64_t v3 = *a1;
  unint64_t v5 = (void *)a1[1];
  unint64_t v4 = a1[2];
  long long v6 = a2[1];
  *(_OWORD *)a1 = *a2;
  *((_OWORD *)a1 + 1) = v6;
  sub_21CAB62E4(v3, v5, v4);
  return a1;
}

uint64_t sub_21CAEFA70(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x3FFE && *(unsigned char *)(a1 + 32)) {
    return (*(_DWORD *)a1 + 16382);
  }
  unsigned int v3 = (((*(void *)(a1 + 16) >> 50) >> 12) | (4
                                                            * ((*(void *)(a1 + 16) >> 50) & 0xC00 | ((*(void *)(a1 + 16) & 7) << 7) | (*(void *)a1 >> 57) & 0x78 | *(void *)a1 & 7))) ^ 0x3FFF;
  if (v3 >= 0x3FFD) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t sub_21CAEFAEC(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x3FFD)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)uint64_t result = a2 - 16382;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x3FFE) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if (a3 >= 0x3FFE) {
      *(unsigned char *)(result + 32) = 0;
    }
    if (a2)
    {
      unint64_t v3 = (-a2 >> 2) & 0xFFF | ((-a2 & 0x3FFF) << 12);
      *(void *)uint64_t result = (v3 | (v3 << 57)) & 0xF000000000000007;
      *(void *)(result + 8) = 0;
      *(void *)(result + 16) = ((v3 >> 7) | (v3 << 50)) & 0xF000000000000007;
      *(void *)(result + 24) = 0;
    }
  }
  return result;
}

uint64_t sub_21CAEFB60(void *a1)
{
  uint64_t v1 = a1[2] >> 62;
  if (v1 <= 1) {
    return v1;
  }
  else {
    return (*a1 >> 3) + 2;
  }
}

uint64_t sub_21CAEFB80(uint64_t result)
{
  *(void *)(result + 16) &= 0x3FFFFFFFFFFFFFFFuLL;
  return result;
}

uint64_t sub_21CAEFB90(uint64_t result, uint64_t a2)
{
  if (a2 < 2)
  {
    uint64_t v2 = *(void *)(result + 16) & 0xFFFFFFFFFFFFFF8 | (a2 << 62);
    *(void *)result &= 0xFFFFFFFFFFFFFF8uLL;
    *(void *)(result + 16) = v2;
  }
  else
  {
    *(void *)uint64_t result = 8 * (a2 - 2);
    *(_OWORD *)(result + 8) = xmmword_21CB8EE30;
    *(void *)(result + 24) = 0;
  }
  return result;
}

char *sub_21CAEFBD4(char *a1, unsigned __int8 *a2, void *a3)
{
  uint64_t v4 = a3[2];
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v54 = a3[3];
  uint64_t v53 = *(void *)(v54 - 8);
  int v6 = *(_DWORD *)(v53 + 80);
  uint64_t v51 = *(void *)(v5 + 64) + v6;
  uint64_t v55 = a3[4];
  uint64_t v7 = *(void *)(v55 - 8);
  int v8 = *(_DWORD *)(v7 + 80);
  uint64_t v9 = v8;
  uint64_t v52 = *(void *)(v53 + 64);
  size_t v10 = *(void *)(v7 + 64);
  if (!*(_DWORD *)(v7 + 84)) {
    ++v10;
  }
  size_t __n = v10;
  unint64_t v11 = v10
      + ((v52 + v8 + (v51 & ~(unint64_t)v6)) & ~(unint64_t)v8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v13 = *(void *)(AssociatedTypeWitness - 8);
  if (*(void *)(v13 + 64) <= 8uLL) {
    uint64_t v14 = 8;
  }
  else {
    uint64_t v14 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
  }
  if (v14 + 1 > v11) {
    unint64_t v15 = v14 + 1;
  }
  else {
    unint64_t v15 = v11;
  }
  if (v15 <= 8) {
    uint64_t v16 = 8;
  }
  else {
    uint64_t v16 = v15;
  }
  if (v16 > 3) {
    goto LABEL_16;
  }
  unsigned int v17 = ((1 << (8 * v16)) + 1) >> (8 * v16);
  uint64_t v18 = 2;
  if (v17 > 0xFFFC) {
    uint64_t v18 = 4;
  }
  if (v17 <= 0xFC) {
LABEL_16:
  }
    uint64_t v18 = 1;
  unint64_t v19 = v18 + v16;
  int v20 = *(_DWORD *)(v5 + 80) | v6 | v8 | *(_DWORD *)(v13 + 80);
  if (v19 > 0x18 || (v20 & 0x1000F8) != 0)
  {
    unint64_t v22 = *(char **)a2;
    *(void *)a1 = *(void *)a2;
    unsigned int v23 = &v22[((v20 & 0xF8 | 7u) + 16) & ~(unint64_t)(v20 & 0xF8 | 7u)];
    swift_retain();
    return v23;
  }
  if (v16 <= 3)
  {
    unsigned int v24 = ((1 << (8 * v16)) + 1) >> (8 * v16);
    if (v24 > 0xFFFC)
    {
      unsigned int v25 = *(_DWORD *)&a2[v16];
      unsigned int v26 = v25 - 3;
      if (v25 < 3) {
        goto LABEL_33;
      }
    }
    else
    {
      if (v24 <= 0xFC) {
        goto LABEL_25;
      }
      unsigned int v25 = *(unsigned __int16 *)&a2[v16];
      unsigned int v26 = v25 - 3;
      if (v25 < 3) {
        goto LABEL_33;
      }
    }
LABEL_26:
    if (v16 <= 3) {
      uint64_t v27 = v16;
    }
    else {
      uint64_t v27 = 4;
    }
    unsigned int v23 = a1;
    switch(v27)
    {
      case 1:
        int v28 = *a2;
        if (v16 >= 4) {
          goto LABEL_56;
        }
        goto LABEL_55;
      case 2:
        int v28 = *(unsigned __int16 *)a2;
        if (v16 < 4) {
          goto LABEL_55;
        }
        goto LABEL_56;
      case 3:
        int v28 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        if (v16 >= 4) {
          goto LABEL_56;
        }
        goto LABEL_55;
      case 4:
        int v28 = *(_DWORD *)a2;
        if (v16 < 4) {
LABEL_55:
        }
          v28 |= v26 << (8 * v16);
LABEL_56:
        unsigned int v25 = v28 + 3;
        if (v25 == 2) {
          goto LABEL_57;
        }
        goto LABEL_35;
      default:
        goto LABEL_34;
    }
  }
LABEL_25:
  unsigned int v25 = a2[v16];
  unsigned int v26 = v25 - 3;
  if (v25 >= 3) {
    goto LABEL_26;
  }
LABEL_33:
  unsigned int v23 = a1;
LABEL_34:
  if (v25 == 2)
  {
LABEL_57:
    uint64_t v40 = *(void *)a2;
    id v41 = *(id *)a2;
    *(void *)unsigned int v23 = v40;
    if (v16 <= 3)
    {
      unsigned int v42 = ((1 << (8 * v16)) + 1) >> (8 * v16);
      if (v42 > 0xFFFC)
      {
        int v44 = 2;
        goto LABEL_87;
      }
      if (v42 > 0xFC)
      {
        *(_WORD *)&v23[v16] = 2;
        return v23;
      }
    }
    v23[v16] = 2;
    return v23;
  }
LABEL_35:
  if (v25 == 1)
  {
    unsigned int v34 = a2[v14];
    unsigned int v35 = v34 - 2;
    if (v34 >= 2)
    {
      if (v14 <= 3) {
        uint64_t v36 = v14;
      }
      else {
        uint64_t v36 = 4;
      }
      switch(v36)
      {
        case 1:
          int v37 = *a2;
          break;
        case 2:
          int v37 = *(unsigned __int16 *)a2;
          break;
        case 3:
          int v37 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          break;
        case 4:
          int v37 = *(_DWORD *)a2;
          break;
        default:
          goto LABEL_78;
      }
      if (v14 < 4)
      {
        if ((v37 | (v35 << (8 * v14))) == 0xFFFFFFFF) {
          goto LABEL_79;
        }
        goto LABEL_81;
      }
      unsigned int v34 = v37 + 2;
    }
LABEL_78:
    if (v34 == 1)
    {
LABEL_79:
      id v45 = *(id *)a2;
      id v46 = *(id *)a2;
      *(void *)unsigned int v23 = v45;
      char v47 = 1;
LABEL_82:
      v23[v14] = v47;
      if (v16 > 3)
      {
LABEL_83:
        v23[v16] = 1;
        return v23;
      }
      int v44 = 1;
      unsigned int v48 = ((1 << (8 * v16)) + 1) >> (8 * v16);
      if (v48 <= 0xFFFC)
      {
        if (v48 > 0xFC)
        {
          *(_WORD *)&v23[v16] = 1;
          return v23;
        }
        goto LABEL_83;
      }
LABEL_87:
      *(_DWORD *)&v23[v16] = v44;
      return v23;
    }
LABEL_81:
    (*(void (**)(char *, unsigned __int8 *, uint64_t))(v13 + 16))(v23, a2, AssociatedTypeWitness);
    char v47 = 0;
    goto LABEL_82;
  }
  if (!v25)
  {
    unint64_t v29 = ~(unint64_t)v6;
    uint64_t v30 = ~v9;
    (*(void (**)(char *, unsigned __int8 *, uint64_t))(v5 + 16))(v23, a2, v4);
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v53 + 16))((unint64_t)&v23[v51] & v29, (unint64_t)&a2[v51] & v29, v54);
    uint64_t v31 = v52 + v9;
    size_t v32 = (void *)((((unint64_t)&v23[v51] & v29) + v52 + v9) & ~v9);
    int v33 = (const void *)((((unint64_t)&a2[v51] & v29) + v31) & v30);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(v33, 1, v55))
    {
      memcpy(v32, v33, __n);
      if (v16 > 3) {
        goto LABEL_68;
      }
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v7 + 16))(v32, v33, v55);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(v32, 0, 1, v55);
      if (v16 > 3)
      {
LABEL_68:
        v23[v16] = 0;
        return v23;
      }
    }
    unsigned int v43 = ((1 << (8 * v16)) + 1) >> (8 * v16);
    if (v43 > 0xFFFC)
    {
      *(_DWORD *)&v23[v16] = 0;
      return v23;
    }
    if (v43 > 0xFC)
    {
      *(_WORD *)&v23[v16] = 0;
      return v23;
    }
    goto LABEL_68;
  }
  if (v16 > 3) {
    goto LABEL_50;
  }
  unsigned int v38 = ((1 << (8 * v16)) + 1) >> (8 * v16);
  uint64_t v39 = 2;
  if (v38 > 0xFFFC) {
    uint64_t v39 = 4;
  }
  if (v38 <= 0xFC) {
LABEL_50:
  }
    uint64_t v39 = 1;
  memcpy(v23, a2, v39 + v16);
  return v23;
}

unsigned __int8 *sub_21CAF02B0(unsigned __int8 *a1, unsigned __int8 *a2, void *a3)
{
  if (a1 == a2) {
    return a1;
  }
  uint64_t v5 = a3[2];
  uint64_t v60 = *(void *)(v5 - 8);
  uint64_t v6 = *(void *)(v60 + 64);
  uint64_t v62 = a3[3];
  uint64_t v7 = *(void *)(v62 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v59 = v6 + v8;
  uint64_t v63 = a3[4];
  uint64_t v9 = *(void *)(v63 - 8);
  uint64_t v10 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v61 = *(void *)(v7 + 64);
  uint64_t v11 = (v61 + v10 + ((v6 + v8) & ~v8)) & ~v10;
  size_t v12 = *(void *)(v9 + 64);
  if (!*(_DWORD *)(v9 + 84)) {
    ++v12;
  }
  size_t __n = v12;
  unint64_t v13 = v12 + v11;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v56 = AssociatedTypeWitness;
  uint64_t v57 = *(void *)(AssociatedTypeWitness - 8);
  if (*(void *)(v57 + 64) <= 8uLL) {
    uint64_t v15 = 8;
  }
  else {
    uint64_t v15 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
  }
  if (v15 + 1 > v13) {
    unint64_t v16 = v15 + 1;
  }
  else {
    unint64_t v16 = v13;
  }
  if (v16 <= 8) {
    uint64_t v17 = 8;
  }
  else {
    uint64_t v17 = v16;
  }
  if (v17 > 3) {
    goto LABEL_16;
  }
  unsigned int v18 = ((1 << (8 * v17)) + 1) >> (8 * v17);
  if (v18 > 0xFFFC)
  {
    unsigned int v19 = *(_DWORD *)&a1[v17];
    unsigned int v20 = v19 - 3;
    if (v19 < 3) {
      goto LABEL_30;
    }
    goto LABEL_21;
  }
  if (v18 > 0xFC)
  {
    unsigned int v19 = *(unsigned __int16 *)&a1[v17];
    unsigned int v20 = v19 - 3;
    if (v19 < 3) {
      goto LABEL_30;
    }
  }
  else
  {
LABEL_16:
    unsigned int v19 = a1[v17];
    unsigned int v20 = v19 - 3;
    if (v19 < 3) {
      goto LABEL_30;
    }
  }
LABEL_21:
  if (v17 <= 3) {
    uint64_t v21 = v17;
  }
  else {
    uint64_t v21 = 4;
  }
  switch(v21)
  {
    case 1:
      int v22 = *a1;
      if (v17 < 4) {
        goto LABEL_28;
      }
      goto LABEL_29;
    case 2:
      int v22 = *(unsigned __int16 *)a1;
      if (v17 < 4) {
        goto LABEL_28;
      }
      goto LABEL_29;
    case 3:
      int v22 = *(unsigned __int16 *)a1 | (a1[2] << 16);
      if (v17 >= 4) {
        goto LABEL_29;
      }
      goto LABEL_28;
    case 4:
      int v22 = *(_DWORD *)a1;
      if (v17 < 4) {
LABEL_28:
      }
        v22 |= v20 << (8 * v17);
LABEL_29:
      unsigned int v19 = v22 + 3;
      break;
    default:
      break;
  }
LABEL_30:
  uint64_t v23 = ~v8;
  uint64_t v58 = ~v10;
  switch(v19)
  {
    case 2u:
      goto LABEL_53;
    case 1u:
      unsigned int v25 = a1[v15];
      unsigned int v26 = v25 - 2;
      if (v25 >= 2)
      {
        if (v15 <= 3) {
          uint64_t v27 = v15;
        }
        else {
          uint64_t v27 = 4;
        }
        switch(v27)
        {
          case 1:
            int v28 = *a1;
            break;
          case 2:
            int v28 = *(unsigned __int16 *)a1;
            break;
          case 3:
            int v28 = *(unsigned __int16 *)a1 | (a1[2] << 16);
            break;
          case 4:
            int v28 = *(_DWORD *)a1;
            break;
          default:
            goto LABEL_52;
        }
        if (v15 < 4)
        {
          if ((v28 | (v26 << (8 * v15))) == 0xFFFFFFFF)
          {
LABEL_53:

            if (v17 > 3) {
              goto LABEL_60;
            }
            goto LABEL_58;
          }
LABEL_56:
          (*(void (**)(unsigned __int8 *, uint64_t))(v57 + 8))(a1, AssociatedTypeWitness);
LABEL_57:
          if (v17 > 3) {
            goto LABEL_60;
          }
          goto LABEL_58;
        }
        unsigned int v25 = v28 + 2;
      }
LABEL_52:
      if (v25 == 1) {
        goto LABEL_53;
      }
      goto LABEL_56;
    case 0u:
      (*(void (**)(unsigned __int8 *, uint64_t))(v60 + 8))(a1, v5);
      (*(void (**)(unint64_t, uint64_t))(v7 + 8))((unint64_t)&a1[v59] & v23, v62);
      unint64_t v24 = (((unint64_t)&a1[v59] & v23) + v61 + v10) & v58;
      if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v9 + 48))(v24, 1, v63))
      {
        (*(void (**)(unint64_t, uint64_t))(v9 + 8))(v24, v63);
        goto LABEL_57;
      }
      break;
  }
  if (v17 > 3) {
    goto LABEL_60;
  }
LABEL_58:
  unsigned int v29 = ((1 << (8 * v17)) + 1) >> (8 * v17);
  if (v29 > 0xFFFC)
  {
    unsigned int v30 = *(_DWORD *)&a2[v17];
    unsigned int v31 = v30 - 3;
    if (v30 < 3) {
      goto LABEL_74;
    }
    goto LABEL_65;
  }
  if (v29 > 0xFC)
  {
    unsigned int v30 = *(unsigned __int16 *)&a2[v17];
    unsigned int v31 = v30 - 3;
    if (v30 < 3) {
      goto LABEL_74;
    }
    goto LABEL_65;
  }
LABEL_60:
  unsigned int v30 = a2[v17];
  unsigned int v31 = v30 - 3;
  if (v30 < 3) {
    goto LABEL_74;
  }
LABEL_65:
  if (v17 <= 3) {
    uint64_t v32 = v17;
  }
  else {
    uint64_t v32 = 4;
  }
  switch(v32)
  {
    case 1:
      int v33 = *a2;
      if (v17 < 4) {
        goto LABEL_72;
      }
      goto LABEL_73;
    case 2:
      int v33 = *(unsigned __int16 *)a2;
      if (v17 < 4) {
        goto LABEL_72;
      }
      goto LABEL_73;
    case 3:
      int v33 = *(unsigned __int16 *)a2 | (a2[2] << 16);
      if (v17 >= 4) {
        goto LABEL_73;
      }
      goto LABEL_72;
    case 4:
      int v33 = *(_DWORD *)a2;
      if (v17 < 4) {
LABEL_72:
      }
        v33 |= v31 << (8 * v17);
LABEL_73:
      unsigned int v30 = v33 + 3;
      break;
    default:
      break;
  }
LABEL_74:
  switch(v30)
  {
    case 2u:
      unsigned int v43 = *(void **)a2;
      id v44 = v43;
      *(void *)a1 = v43;
      if (v17 <= 3)
      {
        unsigned int v45 = ((1 << (8 * v17)) + 1) >> (8 * v17);
        if (v45 > 0xFFFC)
        {
          int v49 = 2;
          goto LABEL_122;
        }
        if (v45 > 0xFC)
        {
          *(_WORD *)&a1[v17] = 2;
          return a1;
        }
      }
      a1[v17] = 2;
      return a1;
    case 1u:
      unsigned int v39 = a2[v15];
      unsigned int v40 = v39 - 2;
      if (v39 >= 2)
      {
        if (v15 <= 3) {
          uint64_t v41 = v15;
        }
        else {
          uint64_t v41 = 4;
        }
        switch(v41)
        {
          case 1:
            int v42 = *a2;
            break;
          case 2:
            int v42 = *(unsigned __int16 *)a2;
            break;
          case 3:
            int v42 = *(unsigned __int16 *)a2 | (a2[2] << 16);
            break;
          case 4:
            int v42 = *(_DWORD *)a2;
            break;
          default:
            goto LABEL_113;
        }
        if (v15 < 4)
        {
          if ((v42 | (v40 << (8 * v15))) == 0xFFFFFFFF) {
            goto LABEL_114;
          }
          goto LABEL_116;
        }
        unsigned int v39 = v42 + 2;
      }
LABEL_113:
      if (v39 == 1)
      {
LABEL_114:
        uint64_t v50 = *(void **)a2;
        id v51 = v50;
        *(void *)a1 = v50;
        char v52 = 1;
LABEL_117:
        a1[v15] = v52;
        if (v17 > 3)
        {
LABEL_118:
          a1[v17] = 1;
          return a1;
        }
        int v49 = 1;
        unsigned int v53 = ((1 << (8 * v17)) + 1) >> (8 * v17);
        if (v53 <= 0xFFFC)
        {
          if (v53 > 0xFC)
          {
            *(_WORD *)&a1[v17] = 1;
            return a1;
          }
          goto LABEL_118;
        }
LABEL_122:
        *(_DWORD *)&a1[v17] = v49;
        return a1;
      }
LABEL_116:
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v57 + 16))(a1, a2, v56);
      char v52 = 0;
      goto LABEL_117;
    case 0u:
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v60 + 16))(a1, a2, v5);
      uint64_t v34 = v23;
      unint64_t v35 = (unint64_t)&a1[v59] & v23;
      unint64_t v36 = (unint64_t)&a2[v59] & v34;
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v7 + 16))(v35, v36, v62);
      int v37 = (void *)((v35 + v61 + v10) & v58);
      unsigned int v38 = (const void *)((v36 + v61 + v10) & v58);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v9 + 48))(v38, 1, v63))
      {
        memcpy(v37, v38, __n);
        if (v17 > 3) {
          goto LABEL_103;
        }
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v9 + 16))(v37, v38, v63);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v9 + 56))(v37, 0, 1, v63);
        if (v17 > 3)
        {
LABEL_103:
          a1[v17] = 0;
          return a1;
        }
      }
      unsigned int v48 = ((1 << (8 * v17)) + 1) >> (8 * v17);
      if (v48 > 0xFFFC)
      {
        *(_DWORD *)&a1[v17] = 0;
        return a1;
      }
      if (v48 > 0xFC)
      {
        *(_WORD *)&a1[v17] = 0;
        return a1;
      }
      goto LABEL_103;
  }
  if (v17 > 3) {
    goto LABEL_94;
  }
  unsigned int v46 = ((1 << (8 * v17)) + 1) >> (8 * v17);
  uint64_t v47 = 2;
  if (v46 > 0xFFFC) {
    uint64_t v47 = 4;
  }
  if (v46 <= 0xFC) {
LABEL_94:
  }
    uint64_t v47 = 1;
  memcpy(a1, a2, v47 + v17);
  return a1;
}

void *sub_21CAF0B18(void *a1, unsigned __int8 *a2, void *a3)
{
  uint64_t v5 = a3[2];
  uint64_t v42 = *(void *)(v5 - 8);
  uint64_t v6 = *(void *)(v42 + 64);
  uint64_t v44 = a3[3];
  uint64_t v7 = *(void *)(v44 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = v6 + v8;
  uint64_t v45 = a3[4];
  uint64_t v10 = *(void *)(v45 - 8);
  uint64_t v11 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v43 = *(void *)(v7 + 64);
  uint64_t v12 = (v43 + v11 + ((v6 + v8) & ~v8)) & ~v11;
  size_t v13 = *(void *)(v10 + 64);
  if (!*(_DWORD *)(v10 + 84)) {
    ++v13;
  }
  size_t __n = v13;
  unint64_t v14 = v13 + v12;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  if (*(void *)(*(void *)(AssociatedTypeWitness - 8) + 64) <= 8uLL) {
    uint64_t v16 = 8;
  }
  else {
    uint64_t v16 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
  }
  if (v16 + 1 > v14) {
    unint64_t v17 = v16 + 1;
  }
  else {
    unint64_t v17 = v14;
  }
  if (v17 <= 8) {
    uint64_t v18 = 8;
  }
  else {
    uint64_t v18 = v17;
  }
  if (v18 > 3) {
    goto LABEL_15;
  }
  unsigned int v19 = ((1 << (8 * v18)) + 1) >> (8 * v18);
  if (v19 > 0xFFFC)
  {
    unsigned int v20 = *(_DWORD *)&a2[v18];
    unsigned int v21 = v20 - 3;
    if (v20 < 3) {
      goto LABEL_29;
    }
    goto LABEL_20;
  }
  if (v19 > 0xFC)
  {
    unsigned int v20 = *(unsigned __int16 *)&a2[v18];
    unsigned int v21 = v20 - 3;
    if (v20 < 3) {
      goto LABEL_29;
    }
  }
  else
  {
LABEL_15:
    unsigned int v20 = a2[v18];
    unsigned int v21 = v20 - 3;
    if (v20 < 3) {
      goto LABEL_29;
    }
  }
LABEL_20:
  if (v18 <= 3) {
    uint64_t v22 = v18;
  }
  else {
    uint64_t v22 = 4;
  }
  switch(v22)
  {
    case 1:
      int v23 = *a2;
      if (v18 < 4) {
        goto LABEL_27;
      }
      goto LABEL_28;
    case 2:
      int v23 = *(unsigned __int16 *)a2;
      if (v18 < 4) {
        goto LABEL_27;
      }
      goto LABEL_28;
    case 3:
      int v23 = *(unsigned __int16 *)a2 | (a2[2] << 16);
      if (v18 >= 4) {
        goto LABEL_28;
      }
      goto LABEL_27;
    case 4:
      int v23 = *(_DWORD *)a2;
      if (v18 < 4) {
LABEL_27:
      }
        v23 |= v21 << (8 * v18);
LABEL_28:
      unsigned int v20 = v23 + 3;
      break;
    default:
      break;
  }
LABEL_29:
  if (v20 == 2)
  {
    *a1 = *(void *)a2;
    if (v18 <= 3)
    {
      unsigned int v33 = ((1 << (8 * v18)) + 1) >> (8 * v18);
      if (v33 > 0xFFFC)
      {
        int v37 = 2;
        goto LABEL_78;
      }
      if (v33 > 0xFC)
      {
        *(_WORD *)((char *)a1 + v18) = 2;
        return a1;
      }
    }
    *((unsigned char *)a1 + v18) = 2;
    return a1;
  }
  if (v20 == 1)
  {
    unsigned int v29 = a2[v16];
    unsigned int v30 = v29 - 2;
    if (v29 >= 2)
    {
      if (v16 <= 3) {
        uint64_t v31 = v16;
      }
      else {
        uint64_t v31 = 4;
      }
      switch(v31)
      {
        case 1:
          int v32 = *a2;
          if (v16 >= 4) {
            goto LABEL_71;
          }
          goto LABEL_65;
        case 2:
          int v32 = *(unsigned __int16 *)a2;
          if (v16 < 4) {
            goto LABEL_65;
          }
          goto LABEL_71;
        case 3:
          int v32 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          if (v16 < 4) {
            goto LABEL_65;
          }
          goto LABEL_71;
        case 4:
          int v32 = *(_DWORD *)a2;
          if (v16 < 4)
          {
LABEL_65:
            unsigned int v29 = (v32 | (v30 << (8 * v16))) + 2;
            break;
          }
LABEL_71:
          if (v32 != -1) {
            goto LABEL_72;
          }
          goto LABEL_67;
        default:
          break;
      }
    }
    if (v29 == 1)
    {
LABEL_67:
      *a1 = *(void *)a2;
      char v38 = 1;
    }
    else
    {
LABEL_72:
      (*(void (**)(void *, unsigned __int8 *, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 32))(a1, a2, AssociatedTypeWitness);
      char v38 = 0;
    }
    *((unsigned char *)a1 + v16) = v38;
    if (v18 > 3)
    {
LABEL_74:
      *((unsigned char *)a1 + v18) = 1;
      return a1;
    }
    int v37 = 1;
    unsigned int v39 = ((1 << (8 * v18)) + 1) >> (8 * v18);
    if (v39 <= 0xFFFC)
    {
      if (v39 > 0xFC)
      {
        *(_WORD *)((char *)a1 + v18) = 1;
        return a1;
      }
      goto LABEL_74;
    }
LABEL_78:
    *(_DWORD *)((char *)a1 + v18) = v37;
    return a1;
  }
  if (v20)
  {
    if (v18 > 3) {
      goto LABEL_49;
    }
    unsigned int v34 = ((1 << (8 * v18)) + 1) >> (8 * v18);
    uint64_t v35 = 2;
    if (v34 > 0xFFFC) {
      uint64_t v35 = 4;
    }
    if (v34 <= 0xFC) {
LABEL_49:
    }
      uint64_t v35 = 1;
    memcpy(a1, a2, v35 + v18);
  }
  else
  {
    uint64_t v24 = ~v8;
    (*(void (**)(void *, unsigned __int8 *, uint64_t))(v42 + 32))(a1, a2, v5);
    unint64_t v25 = ((unint64_t)a1 + v9) & v24;
    unint64_t v26 = (unint64_t)&a2[v9] & v24;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v7 + 32))(v25, v26, v44);
    uint64_t v27 = (void *)((v25 + v43 + v11) & ~v11);
    int v28 = (const void *)((v26 + v43 + v11) & ~v11);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v28, 1, v45))
    {
      memcpy(v27, v28, __n);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v27, v28, v45);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v27, 0, 1, v45);
    }
    if (v18 <= 3)
    {
      unsigned int v36 = ((1 << (8 * v18)) + 1) >> (8 * v18);
      if (v36 > 0xFFFC)
      {
        *(_DWORD *)((char *)a1 + v18) = 0;
        return a1;
      }
      if (v36 > 0xFC)
      {
        *(_WORD *)((char *)a1 + v18) = 0;
        return a1;
      }
    }
    *((unsigned char *)a1 + v18) = 0;
  }
  return a1;
}

unsigned __int8 *sub_21CAF1104(unsigned __int8 *a1, unsigned __int8 *a2, void *a3)
{
  if (a1 == a2) {
    return a1;
  }
  uint64_t v5 = a3[2];
  uint64_t v56 = *(void *)(v5 - 8);
  uint64_t v6 = *(void *)(v56 + 64);
  uint64_t v58 = a3[3];
  uint64_t v7 = *(void *)(v58 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v55 = v6 + v8;
  uint64_t v59 = a3[4];
  uint64_t v9 = *(void *)(v59 - 8);
  uint64_t v10 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v57 = *(void *)(v7 + 64);
  uint64_t v11 = (v57 + v10 + ((v6 + v8) & ~v8)) & ~v10;
  size_t v12 = *(void *)(v9 + 64);
  if (!*(_DWORD *)(v9 + 84)) {
    ++v12;
  }
  size_t __n = v12;
  unint64_t v13 = v12 + v11;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v52 = AssociatedTypeWitness;
  uint64_t v53 = *(void *)(AssociatedTypeWitness - 8);
  if (*(void *)(v53 + 64) <= 8uLL) {
    uint64_t v15 = 8;
  }
  else {
    uint64_t v15 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
  }
  if (v15 + 1 > v13) {
    unint64_t v16 = v15 + 1;
  }
  else {
    unint64_t v16 = v13;
  }
  if (v16 <= 8) {
    uint64_t v17 = 8;
  }
  else {
    uint64_t v17 = v16;
  }
  if (v17 > 3) {
    goto LABEL_16;
  }
  unsigned int v18 = ((1 << (8 * v17)) + 1) >> (8 * v17);
  if (v18 > 0xFFFC)
  {
    unsigned int v19 = *(_DWORD *)&a1[v17];
    unsigned int v20 = v19 - 3;
    if (v19 < 3) {
      goto LABEL_30;
    }
    goto LABEL_21;
  }
  if (v18 > 0xFC)
  {
    unsigned int v19 = *(unsigned __int16 *)&a1[v17];
    unsigned int v20 = v19 - 3;
    if (v19 < 3) {
      goto LABEL_30;
    }
  }
  else
  {
LABEL_16:
    unsigned int v19 = a1[v17];
    unsigned int v20 = v19 - 3;
    if (v19 < 3) {
      goto LABEL_30;
    }
  }
LABEL_21:
  if (v17 <= 3) {
    uint64_t v21 = v17;
  }
  else {
    uint64_t v21 = 4;
  }
  switch(v21)
  {
    case 1:
      int v22 = *a1;
      if (v17 < 4) {
        goto LABEL_28;
      }
      goto LABEL_29;
    case 2:
      int v22 = *(unsigned __int16 *)a1;
      if (v17 < 4) {
        goto LABEL_28;
      }
      goto LABEL_29;
    case 3:
      int v22 = *(unsigned __int16 *)a1 | (a1[2] << 16);
      if (v17 >= 4) {
        goto LABEL_29;
      }
      goto LABEL_28;
    case 4:
      int v22 = *(_DWORD *)a1;
      if (v17 < 4) {
LABEL_28:
      }
        v22 |= v20 << (8 * v17);
LABEL_29:
      unsigned int v19 = v22 + 3;
      break;
    default:
      break;
  }
LABEL_30:
  uint64_t v23 = ~v8;
  uint64_t v54 = ~v10;
  switch(v19)
  {
    case 2u:
      goto LABEL_53;
    case 1u:
      unsigned int v25 = a1[v15];
      unsigned int v26 = v25 - 2;
      if (v25 >= 2)
      {
        if (v15 <= 3) {
          uint64_t v27 = v15;
        }
        else {
          uint64_t v27 = 4;
        }
        switch(v27)
        {
          case 1:
            int v28 = *a1;
            break;
          case 2:
            int v28 = *(unsigned __int16 *)a1;
            break;
          case 3:
            int v28 = *(unsigned __int16 *)a1 | (a1[2] << 16);
            break;
          case 4:
            int v28 = *(_DWORD *)a1;
            break;
          default:
            goto LABEL_52;
        }
        if (v15 < 4)
        {
          if ((v28 | (v26 << (8 * v15))) == 0xFFFFFFFF)
          {
LABEL_53:

            if (v17 > 3) {
              goto LABEL_60;
            }
            goto LABEL_58;
          }
LABEL_56:
          (*(void (**)(unsigned __int8 *, uint64_t))(v53 + 8))(a1, AssociatedTypeWitness);
LABEL_57:
          if (v17 > 3) {
            goto LABEL_60;
          }
          goto LABEL_58;
        }
        unsigned int v25 = v28 + 2;
      }
LABEL_52:
      if (v25 == 1) {
        goto LABEL_53;
      }
      goto LABEL_56;
    case 0u:
      (*(void (**)(unsigned __int8 *, uint64_t))(v56 + 8))(a1, v5);
      (*(void (**)(unint64_t, uint64_t))(v7 + 8))((unint64_t)&a1[v55] & v23, v58);
      unint64_t v24 = (((unint64_t)&a1[v55] & v23) + v57 + v10) & v54;
      if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v9 + 48))(v24, 1, v59))
      {
        (*(void (**)(unint64_t, uint64_t))(v9 + 8))(v24, v59);
        goto LABEL_57;
      }
      break;
  }
  if (v17 > 3) {
    goto LABEL_60;
  }
LABEL_58:
  unsigned int v29 = ((1 << (8 * v17)) + 1) >> (8 * v17);
  if (v29 > 0xFFFC)
  {
    unsigned int v30 = *(_DWORD *)&a2[v17];
    unsigned int v31 = v30 - 3;
    if (v30 < 3) {
      goto LABEL_74;
    }
    goto LABEL_65;
  }
  if (v29 > 0xFC)
  {
    unsigned int v30 = *(unsigned __int16 *)&a2[v17];
    unsigned int v31 = v30 - 3;
    if (v30 < 3) {
      goto LABEL_74;
    }
    goto LABEL_65;
  }
LABEL_60:
  unsigned int v30 = a2[v17];
  unsigned int v31 = v30 - 3;
  if (v30 < 3) {
    goto LABEL_74;
  }
LABEL_65:
  if (v17 <= 3) {
    uint64_t v32 = v17;
  }
  else {
    uint64_t v32 = 4;
  }
  switch(v32)
  {
    case 1:
      int v33 = *a2;
      if (v17 < 4) {
        goto LABEL_72;
      }
      goto LABEL_73;
    case 2:
      int v33 = *(unsigned __int16 *)a2;
      if (v17 < 4) {
        goto LABEL_72;
      }
      goto LABEL_73;
    case 3:
      int v33 = *(unsigned __int16 *)a2 | (a2[2] << 16);
      if (v17 >= 4) {
        goto LABEL_73;
      }
      goto LABEL_72;
    case 4:
      int v33 = *(_DWORD *)a2;
      if (v17 < 4) {
LABEL_72:
      }
        v33 |= v31 << (8 * v17);
LABEL_73:
      unsigned int v30 = v33 + 3;
      break;
    default:
      break;
  }
LABEL_74:
  switch(v30)
  {
    case 2u:
      *(void *)a1 = *(void *)a2;
      if (v17 <= 3)
      {
        unsigned int v43 = ((1 << (8 * v17)) + 1) >> (8 * v17);
        if (v43 > 0xFFFC)
        {
          int v47 = 2;
          goto LABEL_122;
        }
        if (v43 > 0xFC)
        {
          *(_WORD *)&a1[v17] = 2;
          return a1;
        }
      }
      a1[v17] = 2;
      return a1;
    case 1u:
      unsigned int v39 = a2[v15];
      unsigned int v40 = v39 - 2;
      if (v39 >= 2)
      {
        if (v15 <= 3) {
          uint64_t v41 = v15;
        }
        else {
          uint64_t v41 = 4;
        }
        switch(v41)
        {
          case 1:
            int v42 = *a2;
            break;
          case 2:
            int v42 = *(unsigned __int16 *)a2;
            break;
          case 3:
            int v42 = *(unsigned __int16 *)a2 | (a2[2] << 16);
            break;
          case 4:
            int v42 = *(_DWORD *)a2;
            break;
          default:
            goto LABEL_113;
        }
        if (v15 < 4)
        {
          if ((v42 | (v40 << (8 * v15))) == 0xFFFFFFFF) {
            goto LABEL_114;
          }
          goto LABEL_116;
        }
        unsigned int v39 = v42 + 2;
      }
LABEL_113:
      if (v39 == 1)
      {
LABEL_114:
        *(void *)a1 = *(void *)a2;
        char v48 = 1;
LABEL_117:
        a1[v15] = v48;
        if (v17 > 3)
        {
LABEL_118:
          a1[v17] = 1;
          return a1;
        }
        int v47 = 1;
        unsigned int v49 = ((1 << (8 * v17)) + 1) >> (8 * v17);
        if (v49 <= 0xFFFC)
        {
          if (v49 > 0xFC)
          {
            *(_WORD *)&a1[v17] = 1;
            return a1;
          }
          goto LABEL_118;
        }
LABEL_122:
        *(_DWORD *)&a1[v17] = v47;
        return a1;
      }
LABEL_116:
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v53 + 32))(a1, a2, v52);
      char v48 = 0;
      goto LABEL_117;
    case 0u:
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v56 + 32))(a1, a2, v5);
      uint64_t v34 = v23;
      unint64_t v35 = (unint64_t)&a1[v55] & v23;
      unint64_t v36 = (unint64_t)&a2[v55] & v34;
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v7 + 32))(v35, v36, v58);
      int v37 = (void *)((v35 + v57 + v10) & v54);
      char v38 = (const void *)((v36 + v57 + v10) & v54);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v9 + 48))(v38, 1, v59))
      {
        memcpy(v37, v38, __n);
        if (v17 > 3) {
          goto LABEL_103;
        }
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v9 + 32))(v37, v38, v59);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v9 + 56))(v37, 0, 1, v59);
        if (v17 > 3)
        {
LABEL_103:
          a1[v17] = 0;
          return a1;
        }
      }
      unsigned int v46 = ((1 << (8 * v17)) + 1) >> (8 * v17);
      if (v46 > 0xFFFC)
      {
        *(_DWORD *)&a1[v17] = 0;
        return a1;
      }
      if (v46 > 0xFC)
      {
        *(_WORD *)&a1[v17] = 0;
        return a1;
      }
      goto LABEL_103;
  }
  if (v17 > 3) {
    goto LABEL_94;
  }
  unsigned int v44 = ((1 << (8 * v17)) + 1) >> (8 * v17);
  uint64_t v45 = 2;
  if (v44 > 0xFFFC) {
    uint64_t v45 = 4;
  }
  if (v44 <= 0xFC) {
LABEL_94:
  }
    uint64_t v45 = 1;
  memcpy(a1, a2, v45 + v17);
  return a1;
}

uint64_t sub_21CAF195C(unsigned __int16 *a1, unsigned int a2, void *a3)
{
  uint64_t v5 = *(void *)(a3[4] - 8);
  unint64_t v6 = (((*(void *)(*(void *)(a3[2] - 8) + 64) + *(unsigned __int8 *)(*(void *)(a3[3] - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(a3[3] - 8) + 80))
      + *(void *)(*(void *)(a3[3] - 8) + 64)
      + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v5 + 64);
  if (!*(_DWORD *)(v5 + 84)) {
    ++v7;
  }
  unint64_t v8 = v7 + v6;
  unint64_t v9 = *(void *)(*(void *)(swift_getAssociatedTypeWitness() - 8) + 64);
  if (v9 <= 8) {
    unint64_t v9 = 8;
  }
  if (v9 + 1 > v8) {
    unint64_t v10 = v9 + 1;
  }
  else {
    unint64_t v10 = v8;
  }
  if (v10 <= 8) {
    unint64_t v10 = 8;
  }
  if (v10 > 3)
  {
    int v11 = 4;
LABEL_14:
    char v13 = 8;
    goto LABEL_15;
  }
  unsigned int v12 = ((1 << (8 * v10)) + 1) >> (8 * v10);
  if (v12 > 0xFFFC) {
    goto LABEL_18;
  }
  int v11 = v12 + 3;
  if (v12 <= 0xFC) {
    goto LABEL_14;
  }
  char v13 = 16;
LABEL_15:
  unsigned int v14 = (1 << v13) - v11;
  if ((v14 & 0x80000000) == 0)
  {
    if (v10 > 3) {
      goto LABEL_22;
    }
LABEL_19:
    unsigned int v15 = ((1 << (8 * v10)) + 1) >> (8 * v10);
    uint64_t v16 = 2;
    if (v15 > 0xFFFC) {
      uint64_t v16 = 4;
    }
    if (v15 > 0xFC) {
      goto LABEL_23;
    }
    goto LABEL_22;
  }
LABEL_18:
  unsigned int v14 = 0x7FFFFFFF;
  if (v10 <= 3) {
    goto LABEL_19;
  }
LABEL_22:
  uint64_t v16 = 1;
LABEL_23:
  if (!a2) {
    return 0;
  }
  if (a2 <= v14) {
    goto LABEL_42;
  }
  unint64_t v17 = v16 + v10;
  char v18 = 8 * v17;
  if (v17 <= 3)
  {
    unsigned int v20 = ((a2 - v14 + ~(-1 << v18)) >> v18) + 1;
    if (HIWORD(v20))
    {
      int v19 = *(_DWORD *)((char *)a1 + v17);
      if (!v19) {
        goto LABEL_42;
      }
      goto LABEL_34;
    }
    if (v20 > 0xFF)
    {
      int v19 = *(unsigned __int16 *)((char *)a1 + v17);
      if (!*(unsigned __int16 *)((char *)a1 + v17)) {
        goto LABEL_42;
      }
      goto LABEL_34;
    }
    if (v20 < 2)
    {
LABEL_42:
      if (v14)
      {
        if (v10 <= 3)
        {
          unsigned int v28 = ((1 << (8 * v10)) + 1) >> (8 * v10);
          if (v28 > 0xFFFC)
          {
            unsigned int v23 = *(_DWORD *)((char *)a1 + v10);
            unsigned int v24 = ~v23;
LABEL_52:
            unsigned int v31 = 0x7FFFFFFF;
LABEL_53:
            if (v31 > v24) {
              return -v23;
            }
            else {
              return 0;
            }
          }
          int v26 = v28 + 3;
          if (v28 > 0xFC)
          {
            int v30 = *(unsigned __int16 *)((char *)a1 + v10);
            unsigned int v23 = v30 | 0xFFFF0000;
            unsigned int v24 = v30 ^ 0xFFFF;
            char v25 = 16;
          }
          else
          {
            int v29 = *((unsigned __int8 *)a1 + v10);
            unsigned int v23 = v29 | 0xFFFFFF00;
            unsigned int v24 = v29 ^ 0xFF;
            char v25 = 8;
          }
        }
        else
        {
          int v22 = *((unsigned __int8 *)a1 + v10);
          unsigned int v23 = v22 | 0xFFFFFF00;
          unsigned int v24 = v22 ^ 0xFF;
          char v25 = 8;
          int v26 = 4;
        }
        unsigned int v31 = (1 << v25) - v26;
        if ((v31 & 0x80000000) == 0) {
          goto LABEL_53;
        }
        goto LABEL_52;
      }
      return 0;
    }
  }
  int v19 = *((unsigned __int8 *)a1 + v17);
  if (!*((unsigned char *)a1 + v17)) {
    goto LABEL_42;
  }
LABEL_34:
  int v21 = (v19 - 1) << v18;
  if (v17 > 3) {
    int v21 = 0;
  }
  if (v17)
  {
    if (v17 > 3) {
      LODWORD(v17) = 4;
    }
    switch((int)v17)
    {
      case 2:
        LODWORD(v17) = *a1;
        break;
      case 3:
        LODWORD(v17) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v17) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v17) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v14 + (v17 | v21) + 1;
}

void sub_21CAF1CDC(unsigned char *a1, unsigned int a2, unsigned int a3, void *a4)
{
  uint64_t v7 = *(void *)(a4[4] - 8);
  unint64_t v8 = (((*(void *)(*(void *)(a4[2] - 8) + 64) + *(unsigned __int8 *)(*(void *)(a4[3] - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(a4[3] - 8) + 80))
      + *(void *)(*(void *)(a4[3] - 8) + 64)
      + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = *(void *)(v7 + 64);
  if (!*(_DWORD *)(v7 + 84)) {
    ++v9;
  }
  unint64_t v10 = v9 + v8;
  unint64_t v11 = *(void *)(*(void *)(swift_getAssociatedTypeWitness() - 8) + 64);
  if (v11 <= 8) {
    unint64_t v11 = 8;
  }
  if (v11 + 1 > v10) {
    unint64_t v12 = v11 + 1;
  }
  else {
    unint64_t v12 = v10;
  }
  if (v12 <= 8) {
    unint64_t v12 = 8;
  }
  char v13 = 8 * v12;
  if (v12 > 3)
  {
    int v14 = 4;
LABEL_12:
    char v15 = 8;
    goto LABEL_13;
  }
  unsigned int v17 = ((1 << v13) + 1) >> v13;
  if (v17 > 0xFFFC) {
    goto LABEL_19;
  }
  int v14 = v17 + 3;
  if (v17 <= 0xFC) {
    goto LABEL_12;
  }
  char v15 = 16;
LABEL_13:
  unsigned int v16 = (1 << v15) - v14;
  if ((v16 & 0x80000000) == 0)
  {
    if (v12 > 3) {
      goto LABEL_23;
    }
    goto LABEL_20;
  }
LABEL_19:
  unsigned int v16 = 0x7FFFFFFF;
  if (v12 > 3)
  {
LABEL_23:
    uint64_t v19 = 1;
    goto LABEL_24;
  }
LABEL_20:
  unsigned int v18 = ((1 << v13) + 1) >> v13;
  uint64_t v19 = 2;
  if (v18 > 0xFFFC) {
    uint64_t v19 = 4;
  }
  if (v18 <= 0xFC) {
    goto LABEL_23;
  }
LABEL_24:
  size_t v20 = v19 + v12;
  if (a3 <= v16)
  {
    int v21 = 0;
  }
  else if (v20 <= 3)
  {
    unsigned int v24 = ((a3 - v16 + ~(-1 << (8 * v20))) >> (8 * v20)) + 1;
    if (HIWORD(v24))
    {
      int v21 = 4;
    }
    else if (v24 >= 0x100)
    {
      int v21 = 2;
    }
    else
    {
      int v21 = v24 > 1;
    }
  }
  else
  {
    int v21 = 1;
  }
  if (v16 < a2)
  {
    unsigned int v22 = ~v16 + a2;
    if (v20 < 4)
    {
      int v23 = (v22 >> (8 * v20)) + 1;
      if (v20)
      {
        int v25 = v22 & ~(-1 << (8 * v20));
        bzero(a1, v20);
        if (v20 == 3)
        {
          *(_WORD *)a1 = v25;
          a1[2] = BYTE2(v25);
        }
        else if (v20 == 2)
        {
          *(_WORD *)a1 = v25;
        }
        else
        {
          *a1 = v25;
        }
      }
    }
    else
    {
      bzero(a1, v20);
      *(_DWORD *)a1 = v22;
      int v23 = 1;
    }
    switch(v21)
    {
      case 1:
        a1[v20] = v23;
        return;
      case 2:
        *(_WORD *)&a1[v20] = v23;
        return;
      case 3:
        goto LABEL_60;
      case 4:
        *(_DWORD *)&a1[v20] = v23;
        return;
      default:
        return;
    }
  }
  switch(v21)
  {
    case 1:
      a1[v20] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_44;
    case 2:
      *(_WORD *)&a1[v20] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_44;
    case 3:
LABEL_60:
      __break(1u);
      JUMPOUT(0x21CAF2074);
    case 4:
      *(_DWORD *)&a1[v20] = 0;
      goto LABEL_43;
    default:
LABEL_43:
      if (!a2) {
        return;
      }
LABEL_44:
      int v26 = -a2;
      if (v12 > 3) {
        goto LABEL_45;
      }
      unsigned int v27 = ((1 << v13) + 1) >> v13;
      if (v27 > 0xFFFC)
      {
        *(_DWORD *)&a1[v12] = v26;
      }
      else if (v27 <= 0xFC)
      {
LABEL_45:
        a1[v12] = v26;
      }
      else
      {
        *(_WORD *)&a1[v12] = v26;
      }
      return;
  }
}

uint64_t sub_21CAF209C(unsigned __int8 *a1, void *a2)
{
  uint64_t v3 = *(void *)(a2[4] - 8);
  unint64_t v4 = (((*(void *)(*(void *)(a2[2] - 8) + 64) + *(unsigned __int8 *)(*(void *)(a2[3] - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(a2[3] - 8) + 80))
      + *(void *)(*(void *)(a2[3] - 8) + 64)
      + *(unsigned __int8 *)(v3 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(void *)(v3 + 64);
  if (!*(_DWORD *)(v3 + 84)) {
    ++v5;
  }
  unint64_t v6 = v5 + v4;
  unint64_t v7 = *(void *)(*(void *)(swift_getAssociatedTypeWitness() - 8) + 64);
  if (v7 <= 8) {
    unint64_t v7 = 8;
  }
  if (v7 + 1 > v6) {
    unint64_t v8 = v7 + 1;
  }
  else {
    unint64_t v8 = v6;
  }
  if (v8 <= 8) {
    unint64_t v8 = 8;
  }
  if (v8 > 3) {
    goto LABEL_11;
  }
  unsigned int v10 = ((1 << (8 * v8)) + 1) >> (8 * v8);
  if (v10 > 0xFFFC)
  {
    uint64_t result = *(unsigned int *)&a1[v8];
  }
  else
  {
    if (v10 <= 0xFC)
    {
LABEL_11:
      uint64_t result = a1[v8];
      goto LABEL_16;
    }
    uint64_t result = *(unsigned __int16 *)&a1[v8];
  }
LABEL_16:
  if (result >= 3)
  {
    if (v8 <= 3) {
      uint64_t v11 = v8;
    }
    else {
      uint64_t v11 = 4;
    }
    switch(v11)
    {
      case 1:
        int v12 = *a1;
        goto LABEL_25;
      case 2:
        int v12 = *(unsigned __int16 *)a1;
        goto LABEL_25;
      case 3:
        int v12 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_25;
      case 4:
        int v12 = *(_DWORD *)a1;
LABEL_25:
        unsigned int v13 = (v12 | ((result - 3) << (8 * v8))) + 3;
        unsigned int v14 = v12 + 3;
        if (v8 >= 4) {
          uint64_t result = v14;
        }
        else {
          uint64_t result = v13;
        }
        break;
      default:
        return result;
    }
  }
  return result;
}

void sub_21CAF229C(unsigned char *a1, unsigned int a2, void *a3)
{
  uint64_t v5 = *(void *)(a3[4] - 8);
  unint64_t v6 = (((*(void *)(*(void *)(a3[2] - 8) + 64) + *(unsigned __int8 *)(*(void *)(a3[3] - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(a3[3] - 8) + 80))
      + *(void *)(*(void *)(a3[3] - 8) + 64)
      + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v5 + 64);
  if (!*(_DWORD *)(v5 + 84)) {
    ++v7;
  }
  unint64_t v8 = v7 + v6;
  unint64_t v9 = *(void *)(*(void *)(swift_getAssociatedTypeWitness() - 8) + 64);
  if (v9 <= 8) {
    unint64_t v9 = 8;
  }
  if (v9 + 1 > v8) {
    unint64_t v10 = v9 + 1;
  }
  else {
    unint64_t v10 = v8;
  }
  if (v10 <= 8) {
    size_t v11 = 8;
  }
  else {
    size_t v11 = v10;
  }
  if (a2 > 2)
  {
    unsigned int v12 = a2 - 3;
    if (v11 < 4)
    {
      int v14 = (v12 >> (8 * v11)) + 3;
      v12 &= ~(-1 << (8 * v11));
      char v15 = (int *)&a1[v11];
      unsigned int v16 = ((1 << (8 * v11)) + 1) >> (8 * v11);
      if (v16 > 0xFFFC)
      {
        *char v15 = v14;
      }
      else if (v16 > 0xFC)
      {
        *(_WORD *)char v15 = v14;
      }
      else
      {
        *(unsigned char *)char v15 = v14;
      }
    }
    else
    {
      a1[v11] = 3;
    }
    if (v11 >= 4) {
      int v17 = 4;
    }
    else {
      int v17 = v11;
    }
    bzero(a1, v11);
    switch(v17)
    {
      case 2:
        *(_WORD *)a1 = v12;
        break;
      case 3:
        *(_WORD *)a1 = v12;
        a1[2] = BYTE2(v12);
        break;
      case 4:
        *(_DWORD *)a1 = v12;
        break;
      default:
        *a1 = v12;
        break;
    }
  }
  else
  {
    if (v11 > 3)
    {
LABEL_13:
      a1[v11] = a2;
      return;
    }
    unsigned int v13 = ((1 << (8 * v11)) + 1) >> (8 * v11);
    if (v13 > 0xFFFC)
    {
      *(_DWORD *)&a1[v11] = a2;
    }
    else
    {
      if (v13 <= 0xFC) {
        goto LABEL_13;
      }
      *(_WORD *)&a1[v11] = a2;
    }
  }
}

void *sub_21CAF250C(void *a1, void *a2, uint64_t a3)
{
  return sub_21CAF2598(a1, a2, a3, (void (*)(void, uint64_t, uint64_t))sub_21CAF2524);
}

unint64_t sub_21CAF2524(unint64_t result)
{
  if ((result >> 62) <= 1)
  {
    swift_retain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

unint64_t sub_21CAF2588(unint64_t *a1)
{
  return sub_21CAB5A54(*a1);
}

void *sub_21CAF2598(void *a1, void *a2, uint64_t a3, void (*a4)(void, uint64_t, uint64_t))
{
  uint64_t v5 = *a2;
  uint64_t v6 = a2[1];
  uint64_t v7 = a2[2];
  a4(*a2, v6, v7);
  *a1 = v5;
  a1[1] = v6;
  a1[2] = v7;
  return a1;
}

unint64_t *sub_21CAF25E8(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a2;
  unint64_t v4 = a2[1];
  unint64_t v5 = a2[2];
  sub_21CAF2524(*a2);
  unint64_t v6 = *a1;
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  sub_21CAB5A54(v6);
  return a1;
}

unint64_t *sub_21CAF2640(unint64_t *a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 16);
  unint64_t v4 = *a1;
  *(_OWORD *)a1 = *(_OWORD *)a2;
  a1[2] = v3;
  sub_21CAB5A54(v4);
  return a1;
}

uint64_t sub_21CAF2684(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7E && *(unsigned char *)(a1 + 24)) {
    return (*(_DWORD *)a1 + 126);
  }
  unsigned int v3 = (((*(void *)a1 >> 57) >> 5) | (4 * ((*(void *)a1 >> 57) & 0x18 | *(void *)a1 & 7))) ^ 0x7F;
  if (v3 >= 0x7D) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t sub_21CAF26E0(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7D)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)uint64_t result = a2 - 126;
    if (a3 >= 0x7E) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7E) {
      *(unsigned char *)(result + 24) = 0;
    }
    if (a2)
    {
      uint64_t v3 = (-a2 >> 2) & 0x1F | (32 * (-a2 & 0x7F));
      *(void *)(result + 8) = 0;
      *(void *)(result + 16) = 0;
      *(void *)uint64_t result = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t sub_21CAF2738(void *a1)
{
  uint64_t v1 = *a1 >> 62;
  if (v1 <= 1) {
    return v1;
  }
  else {
    return (*a1 >> 3) + 2;
  }
}

void *sub_21CAF2754(void *result)
{
  *result &= 0x3FFFFFFFFFFFFFFFuLL;
  return result;
}

void *sub_21CAF2764(void *result, uint64_t a2)
{
  if (a2 < 2)
  {
    *uint64_t result = *result & 0xFFFFFFFFFFFFFF8 | (a2 << 62);
  }
  else
  {
    result[1] = 0;
    result[2] = 0;
    *uint64_t result = (8 * (a2 - 2)) | 0x8000000000000000;
  }
  return result;
}

uint64_t *sub_21CAF27A4(uint64_t *a1, uint64_t *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  if (*(_DWORD *)(v5 + 84)) {
    size_t v6 = *(void *)(v5 + 64);
  }
  else {
    size_t v6 = *(void *)(v5 + 64) + 1;
  }
  uint64_t v7 = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(_DWORD *)(v8 + 80);
  size_t v10 = v6 + v9;
  if (*(_DWORD *)(v8 + 84)) {
    size_t v11 = *(void *)(v8 + 64);
  }
  else {
    size_t v11 = *(void *)(v8 + 64) + 1;
  }
  uint64_t v12 = (*(unsigned char *)(v5 + 80) | *(unsigned char *)(v8 + 80));
  if (v12 > 7
    || ((*(_DWORD *)(v5 + 80) | *(_DWORD *)(v8 + 80)) & 0x100000) != 0
    || ((v6 + v9) & ~v9) + v11 > 0x18)
  {
    uint64_t v15 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v15 + ((v12 + 16) & ~v12));
    swift_retain();
  }
  else
  {
    uint64_t v16 = v7;
    uint64_t v17 = ~v9;
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v5 + 48))(a2, 1, AssociatedTypeWitness))
    {
      memcpy(a1, a2, v6);
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, AssociatedTypeWitness);
    }
    unsigned int v18 = (const void *)(((unint64_t)a2 + v10) & v17);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48))(v18, 1, v16))
    {
      memcpy((void *)(((unint64_t)a1 + v10) & v17), v18, v11);
    }
    else
    {
      (*(void (**)(unint64_t, const void *, uint64_t))(v8 + 16))(((unint64_t)a1 + v10) & v17, v18, v16);
      (*(void (**)(unint64_t, void, uint64_t, uint64_t))(v8 + 56))(((unint64_t)a1 + v10) & v17, 0, 1, v16);
    }
  }
  return a1;
}

uint64_t sub_21CAF2A28(uint64_t a1)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v3 = *(void *)(AssociatedTypeWitness - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(a1, 1, AssociatedTypeWitness)) {
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, AssociatedTypeWitness);
  }
  int v4 = *(_DWORD *)(v3 + 84);
  uint64_t v5 = *(void *)(v3 + 64);
  uint64_t v6 = swift_getAssociatedTypeWitness();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = v5 + a1;
  if (!v4) {
    ++v8;
  }
  unint64_t v9 = (v8 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v12 = *(void *)(v6 - 8);
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v7 + 48))(v9, 1, v6);
  if (!result)
  {
    size_t v11 = *(uint64_t (**)(unint64_t, uint64_t))(v12 + 8);
    return v11(v9, v6);
  }
  return result;
}

void *sub_21CAF2BC0(void *a1, const void *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v5 + 48))(a2, 1, AssociatedTypeWitness))
  {
    int v6 = *(_DWORD *)(v5 + 84);
    size_t v7 = *(void *)(v5 + 64);
    if (v6) {
      size_t v8 = v7;
    }
    else {
      size_t v8 = v7 + 1;
    }
    memcpy(a1, a2, v8);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
    size_t v10 = *(void (**)(void *, void, uint64_t, uint64_t))(v5 + 56);
    uint64_t v9 = v5 + 56;
    v10(a1, 0, 1, AssociatedTypeWitness);
    int v6 = *(_DWORD *)(v9 + 28);
    size_t v7 = *(void *)(v9 + 8);
  }
  if (v6) {
    size_t v11 = v7;
  }
  else {
    size_t v11 = v7 + 1;
  }
  uint64_t v12 = swift_getAssociatedTypeWitness();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(unsigned __int8 *)(v13 + 80);
  uint64_t v15 = v11 + v14;
  uint64_t v16 = (void *)(((unint64_t)a1 + v11 + v14) & ~v14);
  uint64_t v17 = (const void *)(((unint64_t)a2 + v15) & ~v14);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v13 + 48))(v17, 1, v12))
  {
    if (*(_DWORD *)(v13 + 84)) {
      size_t v18 = *(void *)(v13 + 64);
    }
    else {
      size_t v18 = *(void *)(v13 + 64) + 1;
    }
    memcpy(v16, v17, v18);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v13 + 16))(v16, v17, v12);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v16, 0, 1, v12);
  }
  return a1;
}

void *sub_21CAF2DCC(void *a1, void *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  int v6 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v5 + 48);
  int v7 = v6(a1, 1, AssociatedTypeWitness);
  int v8 = v6(a2, 1, AssociatedTypeWitness);
  if (v7)
  {
    if (!v8)
    {
      (*(void (**)(void *, void *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, AssociatedTypeWitness);
      goto LABEL_12;
    }
    int v9 = *(_DWORD *)(v5 + 84);
    size_t v10 = *(void *)(v5 + 64);
  }
  else
  {
    if (!v8)
    {
      (*(void (**)(void *, void *, uint64_t))(v5 + 24))(a1, a2, AssociatedTypeWitness);
      goto LABEL_12;
    }
    (*(void (**)(void *, uint64_t))(v5 + 8))(a1, AssociatedTypeWitness);
    int v9 = *(_DWORD *)(v5 + 84);
    size_t v10 = *(void *)(v5 + 64);
  }
  if (v9) {
    size_t v11 = v10;
  }
  else {
    size_t v11 = v10 + 1;
  }
  memcpy(a1, a2, v11);
LABEL_12:
  if (*(_DWORD *)(v5 + 84)) {
    uint64_t v12 = *(void *)(v5 + 64);
  }
  else {
    uint64_t v12 = *(void *)(v5 + 64) + 1;
  }
  uint64_t v13 = swift_getAssociatedTypeWitness();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(unsigned __int8 *)(v14 + 80);
  uint64_t v16 = v12 + v15;
  uint64_t v17 = (void *)(((unint64_t)a1 + v12 + v15) & ~v15);
  size_t v18 = (void *)(((unint64_t)a2 + v16) & ~v15);
  uint64_t v19 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v14 + 48);
  int v20 = v19(v17, 1, v13);
  int v21 = v19(v18, 1, v13);
  if (v20)
  {
    if (!v21)
    {
      (*(void (**)(void *, void *, uint64_t))(v14 + 16))(v17, v18, v13);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(v17, 0, 1, v13);
      return a1;
    }
    int v22 = *(_DWORD *)(v14 + 84);
    size_t v23 = *(void *)(v14 + 64);
  }
  else
  {
    if (!v21)
    {
      (*(void (**)(void *, void *, uint64_t))(v14 + 24))(v17, v18, v13);
      return a1;
    }
    int v25 = *(void (**)(void *, uint64_t))(v14 + 8);
    uint64_t v24 = v14 + 8;
    v25(v17, v13);
    int v22 = *(_DWORD *)(v24 + 76);
    size_t v23 = *(void *)(v24 + 56);
  }
  if (v22) {
    size_t v26 = v23;
  }
  else {
    size_t v26 = v23 + 1;
  }
  memcpy(v17, v18, v26);
  return a1;
}

void *sub_21CAF30BC(void *a1, const void *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v5 + 48))(a2, 1, AssociatedTypeWitness))
  {
    int v6 = *(_DWORD *)(v5 + 84);
    size_t v7 = *(void *)(v5 + 64);
    if (v6) {
      size_t v8 = v7;
    }
    else {
      size_t v8 = v7 + 1;
    }
    memcpy(a1, a2, v8);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v5 + 32))(a1, a2, AssociatedTypeWitness);
    size_t v10 = *(void (**)(void *, void, uint64_t, uint64_t))(v5 + 56);
    uint64_t v9 = v5 + 56;
    v10(a1, 0, 1, AssociatedTypeWitness);
    int v6 = *(_DWORD *)(v9 + 28);
    size_t v7 = *(void *)(v9 + 8);
  }
  if (v6) {
    size_t v11 = v7;
  }
  else {
    size_t v11 = v7 + 1;
  }
  uint64_t v12 = swift_getAssociatedTypeWitness();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(unsigned __int8 *)(v13 + 80);
  uint64_t v15 = v11 + v14;
  uint64_t v16 = (void *)(((unint64_t)a1 + v11 + v14) & ~v14);
  uint64_t v17 = (const void *)(((unint64_t)a2 + v15) & ~v14);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v13 + 48))(v17, 1, v12))
  {
    if (*(_DWORD *)(v13 + 84)) {
      size_t v18 = *(void *)(v13 + 64);
    }
    else {
      size_t v18 = *(void *)(v13 + 64) + 1;
    }
    memcpy(v16, v17, v18);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v13 + 32))(v16, v17, v12);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v16, 0, 1, v12);
  }
  return a1;
}

void *sub_21CAF32C8(void *a1, void *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  int v6 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v5 + 48);
  int v7 = v6(a1, 1, AssociatedTypeWitness);
  int v8 = v6(a2, 1, AssociatedTypeWitness);
  if (v7)
  {
    if (!v8)
    {
      (*(void (**)(void *, void *, uint64_t))(v5 + 32))(a1, a2, AssociatedTypeWitness);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, AssociatedTypeWitness);
      goto LABEL_12;
    }
    int v9 = *(_DWORD *)(v5 + 84);
    size_t v10 = *(void *)(v5 + 64);
  }
  else
  {
    if (!v8)
    {
      (*(void (**)(void *, void *, uint64_t))(v5 + 40))(a1, a2, AssociatedTypeWitness);
      goto LABEL_12;
    }
    (*(void (**)(void *, uint64_t))(v5 + 8))(a1, AssociatedTypeWitness);
    int v9 = *(_DWORD *)(v5 + 84);
    size_t v10 = *(void *)(v5 + 64);
  }
  if (v9) {
    size_t v11 = v10;
  }
  else {
    size_t v11 = v10 + 1;
  }
  memcpy(a1, a2, v11);
LABEL_12:
  if (*(_DWORD *)(v5 + 84)) {
    uint64_t v12 = *(void *)(v5 + 64);
  }
  else {
    uint64_t v12 = *(void *)(v5 + 64) + 1;
  }
  uint64_t v13 = swift_getAssociatedTypeWitness();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(unsigned __int8 *)(v14 + 80);
  uint64_t v16 = v12 + v15;
  uint64_t v17 = (void *)(((unint64_t)a1 + v12 + v15) & ~v15);
  size_t v18 = (void *)(((unint64_t)a2 + v16) & ~v15);
  uint64_t v19 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v14 + 48);
  int v20 = v19(v17, 1, v13);
  int v21 = v19(v18, 1, v13);
  if (v20)
  {
    if (!v21)
    {
      (*(void (**)(void *, void *, uint64_t))(v14 + 32))(v17, v18, v13);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(v17, 0, 1, v13);
      return a1;
    }
    int v22 = *(_DWORD *)(v14 + 84);
    size_t v23 = *(void *)(v14 + 64);
  }
  else
  {
    if (!v21)
    {
      (*(void (**)(void *, void *, uint64_t))(v14 + 40))(v17, v18, v13);
      return a1;
    }
    int v25 = *(void (**)(void *, uint64_t))(v14 + 8);
    uint64_t v24 = v14 + 8;
    v25(v17, v13);
    int v22 = *(_DWORD *)(v24 + 76);
    size_t v23 = *(void *)(v24 + 56);
  }
  if (v22) {
    size_t v26 = v23;
  }
  else {
    size_t v26 = v23 + 1;
  }
  memcpy(v17, v18, v26);
  return a1;
}

uint64_t sub_21CAF35B8(unsigned __int16 *a1, unsigned int a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v4 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v5 = *(unsigned int *)(v4 + 84);
  if (v5) {
    unsigned int v6 = v5 - 1;
  }
  else {
    unsigned int v6 = 0;
  }
  uint64_t v7 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v8 = v7;
  int v9 = *(_DWORD *)(v7 + 84);
  if (v9) {
    unsigned int v10 = v9 - 1;
  }
  else {
    unsigned int v10 = 0;
  }
  if (v10 <= v6) {
    unsigned int v11 = v6;
  }
  else {
    unsigned int v11 = v10;
  }
  if (v5) {
    uint64_t v12 = *(void *)(v4 + 64);
  }
  else {
    uint64_t v12 = *(void *)(v4 + 64) + 1;
  }
  uint64_t v13 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v14 = *(void *)(v7 + 64);
  if (v9) {
    uint64_t v15 = v14;
  }
  else {
    uint64_t v15 = v14 + 1;
  }
  if (!a2) {
    return 0;
  }
  uint64_t v16 = v12 + v13;
  if (a2 <= v11) {
    goto LABEL_36;
  }
  uint64_t v17 = v15 + (v16 & ~v13);
  char v18 = 8 * v17;
  if (v17 <= 3)
  {
    unsigned int v20 = ((a2 - v11 + ~(-1 << v18)) >> v18) + 1;
    if (HIWORD(v20))
    {
      int v19 = *(_DWORD *)((char *)a1 + v17);
      if (!v19) {
        goto LABEL_36;
      }
      goto LABEL_26;
    }
    if (v20 > 0xFF)
    {
      int v19 = *(unsigned __int16 *)((char *)a1 + v17);
      if (!*(unsigned __int16 *)((char *)a1 + v17)) {
        goto LABEL_36;
      }
      goto LABEL_26;
    }
    if (v20 < 2)
    {
LABEL_36:
      if (v11)
      {
        if (v6 >= v10) {
          unsigned int v24 = (*(uint64_t (**)(unsigned __int16 *, uint64_t, uint64_t))(v4 + 48))(a1, v5, AssociatedTypeWitness);
        }
        else {
          unsigned int v24 = (*(uint64_t (**)(unint64_t))(v8 + 48))(((unint64_t)a1 + v16) & ~v13);
        }
        if (v24 >= 2) {
          return v24 - 1;
        }
        else {
          return 0;
        }
      }
      return 0;
    }
  }
  int v19 = *((unsigned __int8 *)a1 + v17);
  if (!*((unsigned char *)a1 + v17)) {
    goto LABEL_36;
  }
LABEL_26:
  int v21 = (v19 - 1) << v18;
  if (v17 > 3) {
    int v21 = 0;
  }
  if (v17)
  {
    if (v17 <= 3) {
      int v22 = v17;
    }
    else {
      int v22 = 4;
    }
    switch(v22)
    {
      case 2:
        int v23 = *a1;
        break;
      case 3:
        int v23 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        int v23 = *(_DWORD *)a1;
        break;
      default:
        int v23 = *(unsigned __int8 *)a1;
        break;
    }
  }
  else
  {
    int v23 = 0;
  }
  return v11 + (v23 | v21) + 1;
}

void sub_21CAF386C(unsigned char *a1, unsigned int a2, unsigned int a3)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v36 = AssociatedTypeWitness;
  uint64_t v8 = *(unsigned int *)(v7 + 84);
  if (v8) {
    unsigned int v9 = v8 - 1;
  }
  else {
    unsigned int v9 = 0;
  }
  int v10 = 0;
  uint64_t v11 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v12 = v11;
  int v13 = *(_DWORD *)(v11 + 84);
  unsigned int v14 = v13 - 1;
  if (!v13) {
    unsigned int v14 = 0;
  }
  if (v14 <= v9) {
    unsigned int v15 = v9;
  }
  else {
    unsigned int v15 = v14;
  }
  if (v8) {
    size_t v16 = *(void *)(v7 + 64);
  }
  else {
    size_t v16 = *(void *)(v7 + 64) + 1;
  }
  uint64_t v17 = *(unsigned __int8 *)(v11 + 80);
  size_t v18 = v16 + v17;
  size_t v19 = *(void *)(v11 + 64);
  if (!v13) {
    ++v19;
  }
  size_t v20 = ((v16 + v17) & ~v17) + v19;
  if (a3 <= v15) {
    goto LABEL_22;
  }
  if (v20 <= 3)
  {
    unsigned int v21 = ((a3 - v15 + ~(-1 << (8 * v20))) >> (8 * v20)) + 1;
    if (HIWORD(v21))
    {
      int v10 = 4;
      if (v15 >= a2) {
        goto LABEL_30;
      }
      goto LABEL_23;
    }
    if (v21 >= 0x100) {
      int v10 = 2;
    }
    else {
      int v10 = v21 > 1;
    }
LABEL_22:
    if (v15 >= a2) {
      goto LABEL_30;
    }
    goto LABEL_23;
  }
  int v10 = 1;
  if (v15 >= a2)
  {
LABEL_30:
    uint64_t v25 = ~v17;
    size_t v26 = a1;
    switch(v10)
    {
      case 1:
        a1[v20] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_35;
      case 2:
        *(_WORD *)&a1[v20] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_35;
      case 3:
        goto LABEL_77;
      case 4:
        *(_DWORD *)&a1[v20] = 0;
        goto LABEL_34;
      default:
LABEL_34:
        if (a2)
        {
LABEL_35:
          if (v9 >= v14)
          {
            if (v9 >= a2)
            {
              unint64_t v35 = *(void (**)(unsigned char *, void, uint64_t, uint64_t))(v7 + 56);
              v35(a1, a2 + 1, v8, v36);
            }
            else
            {
              if (v16 <= 3) {
                int v31 = ~(-1 << (8 * v16));
              }
              else {
                int v31 = -1;
              }
              if (v16)
              {
                int v32 = v31 & (~v9 + a2);
                if (v16 <= 3) {
                  int v33 = v16;
                }
                else {
                  int v33 = 4;
                }
                bzero(v26, v16);
                switch(v33)
                {
                  case 2:
                    *(_WORD *)size_t v26 = v32;
                    break;
                  case 3:
                    *(_WORD *)size_t v26 = v32;
                    v26[2] = BYTE2(v32);
                    break;
                  case 4:
                    *(_DWORD *)size_t v26 = v32;
                    break;
                  default:
                    *size_t v26 = v32;
                    break;
                }
              }
            }
          }
          else
          {
            unsigned int v27 = (unsigned char *)((unint64_t)&a1[v18] & v25);
            if (v14 >= a2)
            {
              uint64_t v34 = *(void (**)(unint64_t, void))(v12 + 56);
              v34((unint64_t)&v26[v18] & v25, a2 + 1);
            }
            else
            {
              if (v19 <= 3) {
                int v28 = ~(-1 << (8 * v19));
              }
              else {
                int v28 = -1;
              }
              if (v19)
              {
                int v29 = v28 & (~v14 + a2);
                if (v19 <= 3) {
                  int v30 = v19;
                }
                else {
                  int v30 = 4;
                }
                bzero(v27, v19);
                switch(v30)
                {
                  case 2:
                    *(_WORD *)unsigned int v27 = v29;
                    break;
                  case 3:
                    *(_WORD *)unsigned int v27 = v29;
                    v27[2] = BYTE2(v29);
                    break;
                  case 4:
                    *(_DWORD *)unsigned int v27 = v29;
                    break;
                  default:
                    unsigned char *v27 = v29;
                    break;
                }
              }
            }
          }
        }
        break;
    }
    return;
  }
LABEL_23:
  unsigned int v22 = ~v15 + a2;
  if (v20 < 4)
  {
    int v23 = (v22 >> (8 * v20)) + 1;
    if (v20)
    {
      int v24 = v22 & ~(-1 << (8 * v20));
      bzero(a1, v20);
      if (v20 == 3)
      {
        *(_WORD *)a1 = v24;
        a1[2] = BYTE2(v24);
      }
      else if (v20 == 2)
      {
        *(_WORD *)a1 = v24;
      }
      else
      {
        *a1 = v24;
      }
    }
  }
  else
  {
    bzero(a1, v20);
    *(_DWORD *)a1 = v22;
    int v23 = 1;
  }
  switch(v10)
  {
    case 1:
      a1[v20] = v23;
      break;
    case 2:
      *(_WORD *)&a1[v20] = v23;
      break;
    case 3:
LABEL_77:
      __break(1u);
      JUMPOUT(0x21CAF3CFCLL);
    case 4:
      *(_DWORD *)&a1[v20] = v23;
      break;
    default:
      return;
  }
}

uint64_t *sub_21CAF3D44(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  uint64_t v7 = *(void *)(a3 + 24);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(_DWORD *)(v8 + 80);
  uint64_t v10 = v6 + v9;
  unint64_t v11 = ((v6 + v9) & ~v9) + *(void *)(v8 + 64);
  uint64_t v12 = (*(unsigned char *)(v5 + 80) | *(unsigned char *)(v8 + 80));
  if (v12 > 7 || ((*(_DWORD *)(v5 + 80) | *(_DWORD *)(v8 + 80)) & 0x100000) != 0 || v11 > 0x18)
  {
    uint64_t v15 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v15 + ((v12 + 16) & ~v12));
    swift_retain();
  }
  else
  {
    uint64_t v16 = ~v9;
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 16))(((unint64_t)v4 + v10) & v16, ((unint64_t)a2 + v10) & v16, v7);
  }
  return v4;
}

uint64_t sub_21CAF3EA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(*(void *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 24))((*(void *)(v6 + 40) + *(unsigned __int8 *)(v7 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(void *)(v6 + 40) + *(unsigned __int8 *)(v7 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_21CAF3F48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(*(void *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 32))((*(void *)(v6 + 32) + *(unsigned __int8 *)(v7 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(void *)(v6 + 32) + *(unsigned __int8 *)(v7 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_21CAF3FF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(*(void *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 40))((*(void *)(v6 + 24) + *(unsigned __int8 *)(v7 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(void *)(v6 + 24) + *(unsigned __int8 *)(v7 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t type metadata accessor for AsyncMerge2Sequence.Iterator()
{
  return swift_getGenericMetadata();
}

uint64_t sub_21CAF40E8()
{
  return swift_getWitnessTable();
}

uint64_t sub_21CAF4104()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();

  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_21CAF41A8()
{
  return swift_getWitnessTable();
}

uint64_t sub_21CAF41C4()
{
  return MEMORY[0x263F8E658];
}

uint64_t *sub_21CAF41D0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(a3 + 16);
  uint64_t v4 = *(void *)(v3 - 8);
  if (*(_DWORD *)(v4 + 84)) {
    uint64_t v5 = *(void *)(v4 + 64);
  }
  else {
    uint64_t v5 = *(void *)(v4 + 64) + 1;
  }
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v6 = *(void *)(AssociatedTypeWitness - 8);
  int v7 = *(_DWORD *)(v6 + 80);
  size_t __n = v5;
  uint64_t v8 = v5 + v7;
  uint64_t v9 = *(void *)(v6 + 64);
  uint64_t v40 = v9 + v7;
  if (*(_DWORD *)(v6 + 84)) {
    size_t v10 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
  }
  else {
    size_t v10 = v9 + 1;
  }
  uint64_t v11 = swift_getAssociatedTypeWitness();
  uint64_t v12 = *(void *)(v11 - 8);
  int v13 = *(_DWORD *)(v12 + 80);
  uint64_t v14 = v13;
  if (*(_DWORD *)(v12 + 84)) {
    uint64_t v15 = *(void *)(v12 + 64);
  }
  else {
    uint64_t v15 = *(void *)(v12 + 64) + 1;
  }
  int v16 = v7 | *(_DWORD *)(v4 + 80) | v13;
  uint64_t v17 = (v7 | *(unsigned char *)(v4 + 80) | v13);
  int v18 = v16 & 0x100000;
  if (v17 <= 7
    && v15
     + ((v10 + v14 + ((v40 + (v8 & ~(unint64_t)v7)) & ~(unint64_t)v7)) & ~v14) <= 0x18
    && v18 == 0)
  {
    size_t v35 = v15;
    size_t v36 = v10;
    uint64_t v37 = *(void *)(v11 - 8);
    uint64_t v38 = v11;
    unsigned int v22 = a1;
    unint64_t v23 = ~(unint64_t)v7;
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v4 + 48))(a2, 1, v3))
    {
      memcpy(a1, a2, __n);
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v4 + 16))(a1, a2, v3);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v4 + 56))(a1, 0, 1, v3);
    }
    uint64_t v43 = ~v14;
    unint64_t v24 = ((unint64_t)a2 + v8) & v23;
    uint64_t v25 = *(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 16);
    v25(((unint64_t)v22 + v8) & v23, v24, AssociatedTypeWitness);
    size_t v26 = (void *)((v40 + (((unint64_t)v22 + v8) & v23)) & v23);
    unsigned int v27 = (char *)((v40 + v24) & v23);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v27, 1, AssociatedTypeWitness))
    {
      size_t v28 = v36;
      memcpy(v26, v27, v36);
      uint64_t v30 = v37;
      uint64_t v29 = v38;
    }
    else
    {
      v25((unint64_t)v26, (unint64_t)v27, AssociatedTypeWitness);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(v26, 0, 1, AssociatedTypeWitness);
      uint64_t v30 = v37;
      uint64_t v29 = v38;
      size_t v28 = v36;
    }
    int v31 = &v27[v28];
    int v32 = (void *)(((unint64_t)v26 + v28 + v14) & v43);
    int v33 = (const void *)((unint64_t)&v31[v14] & v43);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v30 + 48))(v33, 1, v29))
    {
      memcpy(v32, v33, v35);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v30 + 16))(v32, v33, v29);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v30 + 56))(v32, 0, 1, v29);
    }
  }
  else
  {
    uint64_t v21 = *a2;
    *a1 = *a2;
    unsigned int v22 = (uint64_t *)(v21 + ((v17 + 16) & ~v17));
    swift_retain();
  }
  return v22;
}

uint64_t sub_21CAF45C0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t v4 = *(void *)(v3 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(a1, 1, v3)) {
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
  }
  int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v9 = v8;
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = v6 + a1;
  if (!v5) {
    ++v11;
  }
  uint64_t v12 = (v11 + v10) & ~v10;
  int v13 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
  v13(v12, AssociatedTypeWitness);
  uint64_t v14 = *(void *)(v8 + 64);
  uint64_t v15 = (v14 + v10 + v12) & ~v10;
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v15, 1, AssociatedTypeWitness)) {
    v13(v15, AssociatedTypeWitness);
  }
  int v16 = *(_DWORD *)(v9 + 84);
  uint64_t v17 = swift_getAssociatedTypeWitness();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = v15 + v14;
  if (!v16) {
    ++v19;
  }
  unint64_t v20 = (v19 + *(unsigned __int8 *)(v18 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  uint64_t v23 = *(void *)(v17 - 8);
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v18 + 48))(v20, 1, v17);
  if (!result)
  {
    unsigned int v22 = *(uint64_t (**)(unint64_t, uint64_t))(v23 + 8);
    return v22(v20, v17);
  }
  return result;
}

void *sub_21CAF4854(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v6 + 48))(a2, 1, v5))
  {
    int v7 = *(_DWORD *)(v6 + 84);
    size_t v8 = *(void *)(v6 + 64);
    if (v7) {
      size_t v9 = v8;
    }
    else {
      size_t v9 = v8 + 1;
    }
    memcpy(a1, a2, v9);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v6 + 16))(a1, a2, v5);
    uint64_t v11 = *(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56);
    uint64_t v10 = v6 + 56;
    v11(a1, 0, 1, v5);
    int v7 = *(_DWORD *)(v10 + 28);
    size_t v8 = *(void *)(v10 + 8);
  }
  if (v7) {
    size_t v12 = v8;
  }
  else {
    size_t v12 = v8 + 1;
  }
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v14 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v15 = v14;
  uint64_t v16 = *(unsigned __int8 *)(v14 + 80);
  int v33 = a1;
  unint64_t v17 = ((unint64_t)a1 + v12 + v16) & ~v16;
  unint64_t v18 = ((unint64_t)a2 + v12 + v16) & ~v16;
  uint64_t v19 = *(void (**)(unint64_t, unint64_t, uint64_t))(v14 + 16);
  v19(v17, v18, AssociatedTypeWitness);
  size_t v20 = *(void *)(v14 + 64);
  size_t v21 = (v20 + v16 + v17) & ~v16;
  size_t v22 = (v20 + v16 + v18) & ~v16;
  if ((*(unsigned int (**)(size_t, uint64_t, uint64_t))(v15 + 48))(v22, 1, AssociatedTypeWitness))
  {
    int v23 = *(_DWORD *)(v15 + 84);
    if (v23) {
      size_t v24 = v20;
    }
    else {
      size_t v24 = v20 + 1;
    }
    memcpy((void *)((v20 + v16 + v17) & ~v16), (const void *)((v20 + v16 + v18) & ~v16), v24);
  }
  else
  {
    v19((v20 + v16 + v17) & ~v16, (v20 + v16 + v18) & ~v16, AssociatedTypeWitness);
    (*(void (**)(size_t, void, uint64_t, uint64_t))(v15 + 56))((v20 + v16 + v17) & ~v16, 0, 1, AssociatedTypeWitness);
    int v23 = *(_DWORD *)(v15 + 84);
  }
  if (v23) {
    size_t v25 = v20;
  }
  else {
    size_t v25 = v20 + 1;
  }
  uint64_t v26 = swift_getAssociatedTypeWitness();
  uint64_t v27 = *(void *)(v26 - 8);
  uint64_t v28 = *(unsigned __int8 *)(v27 + 80);
  uint64_t v29 = (void *)((v25 + v28 + v21) & ~v28);
  uint64_t v30 = (const void *)((v25 + v28 + v22) & ~v28);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v27 + 48))(v30, 1, v26))
  {
    if (*(_DWORD *)(v27 + 84)) {
      size_t v31 = *(void *)(v27 + 64);
    }
    else {
      size_t v31 = *(void *)(v27 + 64) + 1;
    }
    memcpy(v29, v30, v31);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v27 + 16))(v29, v30, v26);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v27 + 56))(v29, 0, 1, v26);
  }
  return v33;
}

void *sub_21CAF4BAC(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  int v7 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v6 + 48);
  int v8 = v7(a1, 1, v5);
  int v9 = v7(a2, 1, v5);
  if (v8)
  {
    if (!v9)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 16))(a1, a2, v5);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
      goto LABEL_12;
    }
    int v10 = *(_DWORD *)(v6 + 84);
    size_t v11 = *(void *)(v6 + 64);
  }
  else
  {
    if (!v9)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 24))(a1, a2, v5);
      goto LABEL_12;
    }
    (*(void (**)(void *, uint64_t))(v6 + 8))(a1, v5);
    int v10 = *(_DWORD *)(v6 + 84);
    size_t v11 = *(void *)(v6 + 64);
  }
  if (v10) {
    size_t v12 = v11;
  }
  else {
    size_t v12 = v11 + 1;
  }
  memcpy(a1, a2, v12);
LABEL_12:
  if (*(_DWORD *)(v6 + 84)) {
    uint64_t v13 = *(void *)(v6 + 64);
  }
  else {
    uint64_t v13 = *(void *)(v6 + 64) + 1;
  }
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v15 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v16 = v15;
  uint64_t v17 = *(unsigned __int8 *)(v15 + 80);
  uint64_t v43 = a1;
  unint64_t v18 = ((unint64_t)a1 + v13 + v17) & ~v17;
  unint64_t v19 = ((unint64_t)a2 + v13 + v17) & ~v17;
  size_t v20 = *(void (**)(unint64_t, unint64_t, uint64_t))(v15 + 24);
  v20(v18, v19, AssociatedTypeWitness);
  size_t v21 = *(void *)(v15 + 64);
  size_t v22 = (void *)((v21 + v17 + v18) & ~v17);
  int v23 = (void *)((v21 + v17 + v19) & ~v17);
  size_t v24 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v16 + 48);
  LODWORD(v18) = v24(v22, 1, AssociatedTypeWitness);
  int v25 = v24(v23, 1, AssociatedTypeWitness);
  if (v18)
  {
    if (!v25)
    {
      (*(void (**)(void *, void *, uint64_t))(v16 + 16))(v22, v23, AssociatedTypeWitness);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v22, 0, 1, AssociatedTypeWitness);
      goto LABEL_26;
    }
    int v26 = *(_DWORD *)(v16 + 84);
  }
  else
  {
    if (!v25)
    {
      v20((unint64_t)v22, (unint64_t)v23, AssociatedTypeWitness);
      goto LABEL_26;
    }
    (*(void (**)(void *, uint64_t))(v16 + 8))(v22, AssociatedTypeWitness);
    int v26 = *(_DWORD *)(v16 + 84);
  }
  if (v26) {
    size_t v27 = v21;
  }
  else {
    size_t v27 = v21 + 1;
  }
  memcpy(v22, v23, v27);
LABEL_26:
  if (*(_DWORD *)(v16 + 84)) {
    size_t v28 = v21;
  }
  else {
    size_t v28 = v21 + 1;
  }
  uint64_t v29 = swift_getAssociatedTypeWitness();
  uint64_t v30 = *(void *)(v29 - 8);
  uint64_t v31 = *(unsigned __int8 *)(v30 + 80);
  int v32 = (void *)(((unint64_t)v22 + v28 + v31) & ~v31);
  int v33 = (void *)(((unint64_t)v23 + v28 + v31) & ~v31);
  uint64_t v34 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v30 + 48);
  int v35 = v34(v32, 1, v29);
  int v36 = v34(v33, 1, v29);
  if (v35)
  {
    if (!v36)
    {
      (*(void (**)(void *, void *, uint64_t))(v30 + 16))(v32, v33, v29);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v30 + 56))(v32, 0, 1, v29);
      return v43;
    }
    int v37 = *(_DWORD *)(v30 + 84);
    size_t v38 = *(void *)(v30 + 64);
  }
  else
  {
    if (!v36)
    {
      (*(void (**)(void *, void *, uint64_t))(v30 + 24))(v32, v33, v29);
      return v43;
    }
    uint64_t v40 = *(void (**)(void *, uint64_t))(v30 + 8);
    uint64_t v39 = v30 + 8;
    v40(v32, v29);
    int v37 = *(_DWORD *)(v39 + 76);
    size_t v38 = *(void *)(v39 + 56);
  }
  if (v37) {
    size_t v41 = v38;
  }
  else {
    size_t v41 = v38 + 1;
  }
  memcpy(v32, v33, v41);
  return v43;
}

void *sub_21CAF504C(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v6 + 48))(a2, 1, v5))
  {
    int v7 = *(_DWORD *)(v6 + 84);
    size_t v8 = *(void *)(v6 + 64);
    if (v7) {
      size_t v9 = v8;
    }
    else {
      size_t v9 = v8 + 1;
    }
    memcpy(a1, a2, v9);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v6 + 32))(a1, a2, v5);
    size_t v11 = *(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56);
    uint64_t v10 = v6 + 56;
    v11(a1, 0, 1, v5);
    int v7 = *(_DWORD *)(v10 + 28);
    size_t v8 = *(void *)(v10 + 8);
  }
  if (v7) {
    size_t v12 = v8;
  }
  else {
    size_t v12 = v8 + 1;
  }
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v14 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v15 = v14;
  uint64_t v16 = *(unsigned __int8 *)(v14 + 80);
  int v33 = a1;
  unint64_t v17 = ((unint64_t)a1 + v12 + v16) & ~v16;
  unint64_t v18 = ((unint64_t)a2 + v12 + v16) & ~v16;
  unint64_t v19 = *(void (**)(unint64_t, unint64_t, uint64_t))(v14 + 32);
  v19(v17, v18, AssociatedTypeWitness);
  size_t v20 = *(void *)(v14 + 64);
  size_t v21 = (v20 + v16 + v17) & ~v16;
  size_t v22 = (v20 + v16 + v18) & ~v16;
  if ((*(unsigned int (**)(size_t, uint64_t, uint64_t))(v15 + 48))(v22, 1, AssociatedTypeWitness))
  {
    int v23 = *(_DWORD *)(v15 + 84);
    if (v23) {
      size_t v24 = v20;
    }
    else {
      size_t v24 = v20 + 1;
    }
    memcpy((void *)((v20 + v16 + v17) & ~v16), (const void *)((v20 + v16 + v18) & ~v16), v24);
  }
  else
  {
    v19((v20 + v16 + v17) & ~v16, (v20 + v16 + v18) & ~v16, AssociatedTypeWitness);
    (*(void (**)(size_t, void, uint64_t, uint64_t))(v15 + 56))((v20 + v16 + v17) & ~v16, 0, 1, AssociatedTypeWitness);
    int v23 = *(_DWORD *)(v15 + 84);
  }
  if (v23) {
    size_t v25 = v20;
  }
  else {
    size_t v25 = v20 + 1;
  }
  uint64_t v26 = swift_getAssociatedTypeWitness();
  uint64_t v27 = *(void *)(v26 - 8);
  uint64_t v28 = *(unsigned __int8 *)(v27 + 80);
  uint64_t v29 = (void *)((v25 + v28 + v21) & ~v28);
  uint64_t v30 = (const void *)((v25 + v28 + v22) & ~v28);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v27 + 48))(v30, 1, v26))
  {
    if (*(_DWORD *)(v27 + 84)) {
      size_t v31 = *(void *)(v27 + 64);
    }
    else {
      size_t v31 = *(void *)(v27 + 64) + 1;
    }
    memcpy(v29, v30, v31);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v27 + 32))(v29, v30, v26);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v27 + 56))(v29, 0, 1, v26);
  }
  return v33;
}

void *sub_21CAF53A4(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  int v7 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v6 + 48);
  int v8 = v7(a1, 1, v5);
  int v9 = v7(a2, 1, v5);
  if (v8)
  {
    if (!v9)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 32))(a1, a2, v5);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
      goto LABEL_12;
    }
    int v10 = *(_DWORD *)(v6 + 84);
    size_t v11 = *(void *)(v6 + 64);
  }
  else
  {
    if (!v9)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 40))(a1, a2, v5);
      goto LABEL_12;
    }
    (*(void (**)(void *, uint64_t))(v6 + 8))(a1, v5);
    int v10 = *(_DWORD *)(v6 + 84);
    size_t v11 = *(void *)(v6 + 64);
  }
  if (v10) {
    size_t v12 = v11;
  }
  else {
    size_t v12 = v11 + 1;
  }
  memcpy(a1, a2, v12);
LABEL_12:
  if (*(_DWORD *)(v6 + 84)) {
    uint64_t v13 = *(void *)(v6 + 64);
  }
  else {
    uint64_t v13 = *(void *)(v6 + 64) + 1;
  }
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v15 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v16 = v15;
  uint64_t v17 = *(unsigned __int8 *)(v15 + 80);
  uint64_t v43 = a1;
  unint64_t v18 = ((unint64_t)a1 + v13 + v17) & ~v17;
  unint64_t v19 = ((unint64_t)a2 + v13 + v17) & ~v17;
  size_t v20 = *(void (**)(unint64_t, unint64_t, uint64_t))(v15 + 40);
  v20(v18, v19, AssociatedTypeWitness);
  size_t v21 = *(void *)(v15 + 64);
  size_t v22 = (void *)((v21 + v17 + v18) & ~v17);
  int v23 = (void *)((v21 + v17 + v19) & ~v17);
  size_t v24 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v16 + 48);
  LODWORD(v18) = v24(v22, 1, AssociatedTypeWitness);
  int v25 = v24(v23, 1, AssociatedTypeWitness);
  if (v18)
  {
    if (!v25)
    {
      (*(void (**)(void *, void *, uint64_t))(v16 + 32))(v22, v23, AssociatedTypeWitness);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v22, 0, 1, AssociatedTypeWitness);
      goto LABEL_26;
    }
    int v26 = *(_DWORD *)(v16 + 84);
  }
  else
  {
    if (!v25)
    {
      v20((unint64_t)v22, (unint64_t)v23, AssociatedTypeWitness);
      goto LABEL_26;
    }
    (*(void (**)(void *, uint64_t))(v16 + 8))(v22, AssociatedTypeWitness);
    int v26 = *(_DWORD *)(v16 + 84);
  }
  if (v26) {
    size_t v27 = v21;
  }
  else {
    size_t v27 = v21 + 1;
  }
  memcpy(v22, v23, v27);
LABEL_26:
  if (*(_DWORD *)(v16 + 84)) {
    size_t v28 = v21;
  }
  else {
    size_t v28 = v21 + 1;
  }
  uint64_t v29 = swift_getAssociatedTypeWitness();
  uint64_t v30 = *(void *)(v29 - 8);
  uint64_t v31 = *(unsigned __int8 *)(v30 + 80);
  int v32 = (void *)(((unint64_t)v22 + v28 + v31) & ~v31);
  int v33 = (void *)(((unint64_t)v23 + v28 + v31) & ~v31);
  uint64_t v34 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v30 + 48);
  int v35 = v34(v32, 1, v29);
  int v36 = v34(v33, 1, v29);
  if (v35)
  {
    if (!v36)
    {
      (*(void (**)(void *, void *, uint64_t))(v30 + 32))(v32, v33, v29);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v30 + 56))(v32, 0, 1, v29);
      return v43;
    }
    int v37 = *(_DWORD *)(v30 + 84);
    size_t v38 = *(void *)(v30 + 64);
  }
  else
  {
    if (!v36)
    {
      (*(void (**)(void *, void *, uint64_t))(v30 + 40))(v32, v33, v29);
      return v43;
    }
    uint64_t v40 = *(void (**)(void *, uint64_t))(v30 + 8);
    uint64_t v39 = v30 + 8;
    v40(v32, v29);
    int v37 = *(_DWORD *)(v39 + 76);
    size_t v38 = *(void *)(v39 + 56);
  }
  if (v37) {
    size_t v41 = v38;
  }
  else {
    size_t v41 = v38 + 1;
  }
  memcpy(v32, v33, v41);
  return v43;
}

uint64_t sub_21CAF5844(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(a3 + 16);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(unsigned int *)(v4 + 84);
  if (v5) {
    unsigned int v6 = v5 - 1;
  }
  else {
    unsigned int v6 = 0;
  }
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v8 = *(unsigned int *)(v7 + 84);
  unsigned int v40 = v6;
  if (v8 <= v6) {
    unsigned int v9 = v6;
  }
  else {
    unsigned int v9 = *(_DWORD *)(v7 + 84);
  }
  unsigned int v10 = v8 - 1;
  if (!v8) {
    unsigned int v10 = 0;
  }
  unsigned int v38 = v10;
  if (v10 <= v9) {
    unsigned int v11 = v9;
  }
  else {
    unsigned int v11 = v10;
  }
  uint64_t v12 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v13 = v12;
  int v14 = *(_DWORD *)(v12 + 84);
  unsigned int v15 = v14 - 1;
  if (!v14) {
    unsigned int v15 = 0;
  }
  if (v15 <= v11) {
    unsigned int v15 = v11;
  }
  if (v5) {
    uint64_t v16 = *(void *)(v4 + 64);
  }
  else {
    uint64_t v16 = *(void *)(v4 + 64) + 1;
  }
  uint64_t v17 = *(void *)(v7 + 64);
  if (v8) {
    uint64_t v18 = *(void *)(v7 + 64);
  }
  else {
    uint64_t v18 = v17 + 1;
  }
  uint64_t v19 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v20 = *(unsigned __int8 *)(v12 + 80);
  uint64_t v21 = *(void *)(v12 + 64);
  if (v14) {
    uint64_t v22 = v21;
  }
  else {
    uint64_t v22 = v21 + 1;
  }
  if (!a2) {
    return 0;
  }
  uint64_t v23 = v16 + v19;
  uint64_t v24 = v17 + v19;
  if (a2 <= v15) {
    goto LABEL_45;
  }
  uint64_t v25 = v22 + ((v18 + v20 + ((v24 + (v23 & ~v19)) & ~v19)) & ~v20);
  char v26 = 8 * v25;
  if (v25 > 3) {
    goto LABEL_28;
  }
  unsigned int v28 = ((a2 - v15 + ~(-1 << v26)) >> v26) + 1;
  if (HIWORD(v28))
  {
    int v27 = *(_DWORD *)((char *)a1 + v25);
    if (!v27) {
      goto LABEL_45;
    }
    goto LABEL_35;
  }
  if (v28 > 0xFF)
  {
    int v27 = *(unsigned __int16 *)((char *)a1 + v25);
    if (!*(unsigned __int16 *)((char *)a1 + v25)) {
      goto LABEL_45;
    }
    goto LABEL_35;
  }
  if (v28 >= 2)
  {
LABEL_28:
    int v27 = *((unsigned __int8 *)a1 + v25);
    if (!*((unsigned char *)a1 + v25)) {
      goto LABEL_45;
    }
LABEL_35:
    int v29 = (v27 - 1) << v26;
    if (v25 > 3) {
      int v29 = 0;
    }
    if (v25)
    {
      if (v25 <= 3) {
        int v30 = v25;
      }
      else {
        int v30 = 4;
      }
      switch(v30)
      {
        case 2:
          int v31 = *a1;
          break;
        case 3:
          int v31 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
          break;
        case 4:
          int v31 = *(_DWORD *)a1;
          break;
        default:
          int v31 = *(unsigned __int8 *)a1;
          break;
      }
    }
    else
    {
      int v31 = 0;
    }
    return v15 + (v31 | v29) + 1;
  }
LABEL_45:
  if (!v15) {
    return 0;
  }
  if (v40 == v15)
  {
    unsigned int v32 = (*(uint64_t (**)(unsigned __int16 *, uint64_t, uint64_t))(v4 + 48))(a1, v5, v3);
LABEL_56:
    if (v32 >= 2) {
      return v32 - 1;
    }
    else {
      return 0;
    }
  }
  uint64_t v34 = ~v19;
  unint64_t v35 = ((unint64_t)a1 + v23) & v34;
  if (v8 != v15)
  {
    unint64_t v37 = (v24 + v35) & v34;
    if (v38 == v15) {
      unsigned int v32 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v7 + 48))(v37, v8, AssociatedTypeWitness);
    }
    else {
      unsigned int v32 = (*(uint64_t (**)(unint64_t))(v13 + 48))((v37 + v20 + v18) & ~v20);
    }
    goto LABEL_56;
  }
  int v36 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v7 + 48);

  return v36(v35, v8, AssociatedTypeWitness);
}

void sub_21CAF5C20(unsigned char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v4 = *(void *)(a4 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v49 = v5;
  uint64_t v6 = *(unsigned int *)(v5 + 84);
  if (v6) {
    unsigned int v7 = v6 - 1;
  }
  else {
    unsigned int v7 = 0;
  }
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v9 = *(unsigned int *)(v8 + 84);
  unsigned int v50 = v7;
  if (v9 <= v7) {
    unsigned int v10 = v7;
  }
  else {
    unsigned int v10 = *(_DWORD *)(v8 + 84);
  }
  unsigned int v11 = v9 - 1;
  if (!v9) {
    unsigned int v11 = 0;
  }
  unsigned int v47 = v11;
  if (v11 <= v10) {
    unsigned int v12 = v10;
  }
  else {
    unsigned int v12 = v11;
  }
  int v13 = 0;
  uint64_t v14 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v15 = v14;
  int v16 = *(_DWORD *)(v14 + 84);
  unsigned int v17 = v16 - 1;
  if (!v16) {
    unsigned int v17 = 0;
  }
  if (v17 <= v12) {
    unsigned int v18 = v12;
  }
  else {
    unsigned int v18 = v17;
  }
  if (v6) {
    uint64_t v19 = *(void *)(v5 + 64);
  }
  else {
    uint64_t v19 = *(void *)(v5 + 64) + 1;
  }
  uint64_t v20 = *(void *)(v8 + 64);
  if (v9) {
    uint64_t v21 = *(void *)(v8 + 64);
  }
  else {
    uint64_t v21 = v20 + 1;
  }
  uint64_t v22 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v23 = v19 + v22;
  uint64_t v24 = v20 + v22;
  uint64_t v25 = (v24 + ((v19 + v22) & ~v22)) & ~v22;
  uint64_t v26 = *(unsigned __int8 *)(v14 + 80);
  size_t v27 = *(void *)(v14 + 64);
  if (v16) {
    size_t v28 = v27;
  }
  else {
    size_t v28 = v27 + 1;
  }
  size_t v29 = ((v21 + v26 + v25) & ~v26) + v28;
  if (a3 > v18)
  {
    if (v29 <= 3)
    {
      unsigned int v30 = ((a3 - v18 + ~(-1 << (8 * v29))) >> (8 * v29)) + 1;
      if (HIWORD(v30))
      {
        int v13 = 4;
      }
      else if (v30 >= 0x100)
      {
        int v13 = 2;
      }
      else
      {
        int v13 = v30 > 1;
      }
    }
    else
    {
      int v13 = 1;
    }
  }
  if (v18 < a2)
  {
    unsigned int v31 = ~v18 + a2;
    if (v29 < 4)
    {
      int v32 = (v31 >> (8 * v29)) + 1;
      if (v29)
      {
        int v36 = v31 & ~(-1 << (8 * v29));
        bzero(a1, v29);
        if (v29 == 3)
        {
          *(_WORD *)a1 = v36;
          a1[2] = BYTE2(v36);
        }
        else if (v29 == 2)
        {
          *(_WORD *)a1 = v36;
        }
        else
        {
          *a1 = v36;
        }
      }
    }
    else
    {
      bzero(a1, v29);
      *(_DWORD *)a1 = v31;
      int v32 = 1;
    }
    switch(v13)
    {
      case 1:
        a1[v29] = v32;
        return;
      case 2:
        *(_WORD *)&a1[v29] = v32;
        return;
      case 3:
        goto LABEL_82;
      case 4:
        *(_DWORD *)&a1[v29] = v32;
        return;
      default:
        return;
    }
  }
  uint64_t v33 = ~v22;
  uint64_t v34 = ~v26;
  unint64_t v35 = a1;
  switch(v13)
  {
    case 1:
      a1[v29] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_46;
    case 2:
      *(_WORD *)&a1[v29] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_46;
    case 3:
LABEL_82:
      __break(1u);
      JUMPOUT(0x21CAF6130);
    case 4:
      *(_DWORD *)&a1[v29] = 0;
      goto LABEL_45;
    default:
LABEL_45:
      if (!a2) {
        return;
      }
LABEL_46:
      if (v50 == v18)
      {
        uint64_t v37 = a2 + 1;
        unsigned int v38 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v49 + 56);
        uint64_t v39 = v6;
        uint64_t v40 = v4;
LABEL_49:
        v38(v35, v37, v39, v40);
        return;
      }
      unint64_t v35 = (unsigned char *)((unint64_t)&a1[v23] & v33);
      if (v9 == v18)
      {
        unsigned int v38 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v8 + 56);
        uint64_t v37 = a2;
        goto LABEL_56;
      }
      unint64_t v35 = (unsigned char *)((unint64_t)&v35[v24] & v33);
      if (v47 == v18)
      {
        uint64_t v37 = a2 + 1;
        unsigned int v38 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v8 + 56);
LABEL_56:
        uint64_t v39 = v9;
        uint64_t v40 = AssociatedTypeWitness;
        goto LABEL_49;
      }
      size_t v41 = (unsigned char *)((unint64_t)&v35[v26 + v21] & v34);
      if (v17 >= a2)
      {
        uint64_t v45 = *(void (**)(unint64_t, void))(v15 + 56);
        unint64_t v46 = (unint64_t)&v35[v26 + v21] & v34;
        v45(v46, a2 + 1);
      }
      else
      {
        if (v28 <= 3) {
          int v42 = ~(-1 << (8 * v28));
        }
        else {
          int v42 = -1;
        }
        if (v28)
        {
          int v43 = v42 & (~v17 + a2);
          if (v28 <= 3) {
            int v44 = v28;
          }
          else {
            int v44 = 4;
          }
          bzero(v41, v28);
          switch(v44)
          {
            case 2:
              *(_WORD *)size_t v41 = v43;
              break;
            case 3:
              *(_WORD *)size_t v41 = v43;
              void v41[2] = BYTE2(v43);
              break;
            case 4:
              *(_DWORD *)size_t v41 = v43;
              break;
            default:
              unsigned char *v41 = v43;
              break;
          }
        }
      }
      return;
  }
}

uint64_t *sub_21CAF6168(uint64_t *a1, uint64_t *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  if (*(_DWORD *)(v5 + 84)) {
    size_t v6 = *(void *)(v5 + 64);
  }
  else {
    size_t v6 = *(void *)(v5 + 64) + 1;
  }
  uint64_t v7 = *(_DWORD *)(v5 + 80);
  if (v7 > 7 || (*(_DWORD *)(v5 + 80) & 0x100000) != 0 || v6 > 0x18)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v7 + 16) & ~v7));
    swift_retain();
  }
  else
  {
    uint64_t v11 = AssociatedTypeWitness;
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v5 + 48))(a2, 1, AssociatedTypeWitness))
    {
      memcpy(a1, a2, v6);
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v5 + 16))(a1, a2, v11);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v11);
    }
  }
  return a1;
}

uint64_t sub_21CAF62C0(uint64_t a1)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, AssociatedTypeWitness);
  if (!result)
  {
    uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8);
    return v4(a1, AssociatedTypeWitness);
  }
  return result;
}

void *sub_21CAF6394(void *a1, const void *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v5 + 48))(a2, 1, AssociatedTypeWitness))
  {
    if (*(_DWORD *)(v5 + 84)) {
      size_t v6 = *(void *)(v5 + 64);
    }
    else {
      size_t v6 = *(void *)(v5 + 64) + 1;
    }
    memcpy(a1, a2, v6);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, AssociatedTypeWitness);
  }
  return a1;
}

void *sub_21CAF6494(void *a1, void *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  size_t v6 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v5 + 48);
  int v7 = v6(a1, 1, AssociatedTypeWitness);
  int v8 = v6(a2, 1, AssociatedTypeWitness);
  if (v7)
  {
    if (!v8)
    {
      (*(void (**)(void *, void *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, AssociatedTypeWitness);
      return a1;
    }
    int v9 = *(_DWORD *)(v5 + 84);
    size_t v10 = *(void *)(v5 + 64);
  }
  else
  {
    if (!v8)
    {
      (*(void (**)(void *, void *, uint64_t))(v5 + 24))(a1, a2, AssociatedTypeWitness);
      return a1;
    }
    unsigned int v12 = *(void (**)(void *, uint64_t))(v5 + 8);
    uint64_t v11 = v5 + 8;
    v12(a1, AssociatedTypeWitness);
    int v9 = *(_DWORD *)(v11 + 76);
    size_t v10 = *(void *)(v11 + 56);
  }
  if (v9) {
    size_t v13 = v10;
  }
  else {
    size_t v13 = v10 + 1;
  }
  memcpy(a1, a2, v13);
  return a1;
}

void *sub_21CAF660C(void *a1, const void *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v5 + 48))(a2, 1, AssociatedTypeWitness))
  {
    if (*(_DWORD *)(v5 + 84)) {
      size_t v6 = *(void *)(v5 + 64);
    }
    else {
      size_t v6 = *(void *)(v5 + 64) + 1;
    }
    memcpy(a1, a2, v6);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v5 + 32))(a1, a2, AssociatedTypeWitness);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, AssociatedTypeWitness);
  }
  return a1;
}

void *sub_21CAF670C(void *a1, void *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  size_t v6 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v5 + 48);
  int v7 = v6(a1, 1, AssociatedTypeWitness);
  int v8 = v6(a2, 1, AssociatedTypeWitness);
  if (v7)
  {
    if (!v8)
    {
      (*(void (**)(void *, void *, uint64_t))(v5 + 32))(a1, a2, AssociatedTypeWitness);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, AssociatedTypeWitness);
      return a1;
    }
    int v9 = *(_DWORD *)(v5 + 84);
    size_t v10 = *(void *)(v5 + 64);
  }
  else
  {
    if (!v8)
    {
      (*(void (**)(void *, void *, uint64_t))(v5 + 40))(a1, a2, AssociatedTypeWitness);
      return a1;
    }
    unsigned int v12 = *(void (**)(void *, uint64_t))(v5 + 8);
    uint64_t v11 = v5 + 8;
    v12(a1, AssociatedTypeWitness);
    int v9 = *(_DWORD *)(v11 + 76);
    size_t v10 = *(void *)(v11 + 56);
  }
  if (v9) {
    size_t v13 = v10;
  }
  else {
    size_t v13 = v10 + 1;
  }
  memcpy(a1, a2, v13);
  return a1;
}

uint64_t sub_21CAF6884(unsigned __int16 *a1, unsigned int a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  unsigned int v6 = *(_DWORD *)(v5 + 84);
  unsigned int v7 = v6 - 1;
  if (!v6) {
    unsigned int v7 = 0;
  }
  uint64_t v8 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
  if (!v6) {
    ++v8;
  }
  if (!a2) {
    return 0;
  }
  if (a2 > v7)
  {
    char v9 = 8 * v8;
    if (v8 > 3) {
      goto LABEL_8;
    }
    unsigned int v11 = ((a2 - v7 + ~(-1 << v9)) >> v9) + 1;
    if (HIWORD(v11))
    {
      int v10 = *(_DWORD *)((char *)a1 + v8);
      if (v10) {
        goto LABEL_15;
      }
    }
    else
    {
      if (v11 <= 0xFF)
      {
        if (v11 < 2) {
          goto LABEL_23;
        }
LABEL_8:
        int v10 = *((unsigned __int8 *)a1 + v8);
        if (!*((unsigned char *)a1 + v8)) {
          goto LABEL_23;
        }
LABEL_15:
        int v12 = (v10 - 1) << v9;
        if (v8 > 3) {
          int v12 = 0;
        }
        if (v8)
        {
          if (v8 > 3) {
            LODWORD(v8) = 4;
          }
          switch((int)v8)
          {
            case 2:
              LODWORD(v8) = *a1;
              break;
            case 3:
              LODWORD(v8) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
              break;
            case 4:
              LODWORD(v8) = *(_DWORD *)a1;
              break;
            default:
              LODWORD(v8) = *(unsigned __int8 *)a1;
              break;
          }
        }
        return v7 + (v8 | v12) + 1;
      }
      int v10 = *(unsigned __int16 *)((char *)a1 + v8);
      if (*(unsigned __int16 *)((char *)a1 + v8)) {
        goto LABEL_15;
      }
    }
  }
LABEL_23:
  if (v6 < 2) {
    return 0;
  }
  unsigned int v14 = (*(uint64_t (**)(unsigned __int16 *))(v5 + 48))(a1);
  if (v14 >= 2) {
    return v14 - 1;
  }
  else {
    return 0;
  }
}

void sub_21CAF6A40(unsigned char *a1, unsigned int a2, unsigned int a3)
{
  int v6 = 0;
  uint64_t v7 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unsigned int v8 = *(_DWORD *)(v7 + 84);
  unsigned int v9 = v8 - 1;
  if (v8)
  {
    size_t v10 = *(void *)(v7 + 64);
  }
  else
  {
    unsigned int v9 = 0;
    size_t v10 = *(void *)(v7 + 64) + 1;
  }
  if (a3 <= v9) {
    goto LABEL_12;
  }
  if (v10 <= 3)
  {
    unsigned int v11 = ((a3 - v9 + ~(-1 << (8 * v10))) >> (8 * v10)) + 1;
    if (HIWORD(v11))
    {
      int v6 = 4;
      if (v9 >= a2) {
        goto LABEL_20;
      }
      goto LABEL_13;
    }
    if (v11 >= 0x100) {
      int v6 = 2;
    }
    else {
      int v6 = v11 > 1;
    }
LABEL_12:
    if (v9 >= a2) {
      goto LABEL_20;
    }
    goto LABEL_13;
  }
  int v6 = 1;
  if (v9 >= a2)
  {
LABEL_20:
    switch(v6)
    {
      case 1:
        a1[v10] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_25;
      case 2:
        *(_WORD *)&a1[v10] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_25;
      case 3:
        goto LABEL_38;
      case 4:
        *(_DWORD *)&a1[v10] = 0;
        goto LABEL_24;
      default:
LABEL_24:
        if (a2)
        {
LABEL_25:
          if (v8 >= 2)
          {
            uint64_t v15 = *(void (**)(unsigned char *, void))(v7 + 56);
            v15(a1, a2 + 1);
          }
        }
        break;
    }
    return;
  }
LABEL_13:
  unsigned int v12 = ~v9 + a2;
  if (v10 < 4)
  {
    int v13 = (v12 >> (8 * v10)) + 1;
    if (v10)
    {
      int v14 = v12 & ~(-1 << (8 * v10));
      bzero(a1, v10);
      if (v10 == 3)
      {
        *(_WORD *)a1 = v14;
        a1[2] = BYTE2(v14);
      }
      else if (v10 == 2)
      {
        *(_WORD *)a1 = v14;
      }
      else
      {
        *a1 = v14;
      }
    }
  }
  else
  {
    bzero(a1, v10);
    *(_DWORD *)a1 = v12;
    int v13 = 1;
  }
  switch(v6)
  {
    case 1:
      a1[v10] = v13;
      break;
    case 2:
      *(_WORD *)&a1[v10] = v13;
      break;
    case 3:
LABEL_38:
      __break(1u);
      JUMPOUT(0x21CAF6C9CLL);
    case 4:
      *(_DWORD *)&a1[v10] = v13;
      break;
    default:
      return;
  }
}

uint64_t sub_21CAF6CC4()
{
  return swift_release();
}

uint64_t sub_21CAF6CCC(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  swift_retain();
  return a1;
}

uint64_t sub_21CAF6D14(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
  *(void *)a1 = v4;
  *(void *)(a1 + 16) = a2[2];
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 24) = *((unsigned char *)a2 + 24);
  return a1;
}

__n128 sub_21CAF6D74(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t sub_21CAF6D88(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_release();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  return a1;
}

uint64_t sub_21CAF6DD8(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 25)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_21CAF6E20(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 25) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t type metadata accessor for AsyncChunksOfCountOrSignalSequence.Iterator()
{
  return swift_getGenericMetadata();
}

uint64_t sub_21CAF6E98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v60 = a3;
  uint64_t v61 = a1;
  uint64_t v5 = sub_21CA57E34(&qword_267C96AD0);
  uint64_t v6 = MEMORY[0x270FA5388](v5 - 8);
  unsigned int v8 = (char *)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  size_t v10 = (char *)&v49 - v9;
  uint64_t v11 = type metadata accessor for LiveRelabilityStats(0);
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  int v14 = (char *)&v49 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_21CB87590();
  uint64_t v16 = MEMORY[0x270FA5388](v15);
  uint64_t result = MEMORY[0x270FA5388](v16);
  uint64_t v21 = (char *)&v49 - v20;
  if (!a2) {
    return result;
  }
  uint64_t v54 = v19;
  uint64_t v58 = v14;
  uint64_t v59 = v18;
  swift_bridgeObjectRetain();
  uint64_t v22 = swift_bridgeObjectRetain();
  uint64_t v23 = sub_21CA456B0(v22);
  swift_bridgeObjectRelease();
  uint64_t v24 = v23[2];
  if (!v24) {
    goto LABEL_25;
  }
  uint64_t v55 = v12;
  uint64_t v56 = v15;
  uint64_t v57 = v21;
  if (v23[4] != v61 || v23[5] != a2)
  {
    uint64_t result = sub_21CB88F50();
    if ((result & 1) == 0)
    {
      if (v24 != 1)
      {
        uint64_t v45 = v23 + 7;
        uint64_t v46 = 1;
        while (1)
        {
          uint64_t v47 = v46 + 1;
          if (__OFADD__(v46, 1)) {
            break;
          }
          if (*(v45 - 1) == v61 && *v45 == a2) {
            goto LABEL_6;
          }
          uint64_t result = sub_21CB88F50();
          if (result) {
            goto LABEL_6;
          }
          v45 += 2;
          ++v46;
          if (v47 == v24) {
            goto LABEL_25;
          }
        }
        __break(1u);
        return result;
      }
LABEL_25:
      swift_bridgeObjectRelease();
      return swift_release();
    }
  }
LABEL_6:
  swift_release();
  uint64_t v25 = v57;
  sub_21CB87580();
  uint64_t v26 = v3 + 160;
  swift_beginAccess();
  uint64_t v27 = *(void *)(v3 + 160);
  uint64_t v28 = *(void *)(v27 + 16);
  uint64_t v53 = v26;
  if (!v28)
  {
    uint64_t v33 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v55 + 56);
    v33(v10, 1, 1, v11);
    uint64_t v30 = v56;
LABEL_12:
    sub_21CA1B88C((uint64_t)v10, &qword_267C96AD0);
    uint64_t v34 = v59;
    (*(void (**)(char *, char *, uint64_t))(v59 + 16))(&v8[*(int *)(v11 + 24)], v25, v30);
    *(void *)unsigned int v8 = 0xBFF0000000000000;
    v8[8] = 0;
    v33(v8, 0, 1, v11);
    swift_beginAccess();
    sub_21CB7FAB0((uint64_t)v8, v61, a2);
    swift_endAccess();
    return (*(uint64_t (**)(char *, uint64_t))(v34 + 8))(v25, v30);
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v29 = sub_21CA5BCE0(v61, a2);
  uint64_t v31 = v55;
  uint64_t v30 = v56;
  if (v32)
  {
    sub_21CAF79DC(*(void *)(v27 + 56) + *(void *)(v55 + 72) * v29, (uint64_t)v10, type metadata accessor for LiveRelabilityStats);
    uint64_t v33 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v31 + 56);
    v33(v10, 0, 1, v11);
  }
  else
  {
    uint64_t v33 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v55 + 56);
    v33(v10, 1, 1, v11);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v10, 1, v11) == 1) {
    goto LABEL_12;
  }
  uint64_t v35 = v59;
  int v36 = *(void (**)(uint64_t, uint64_t))(v59 + 8);
  uint64_t v51 = v59 + 8;
  uint64_t v52 = v36;
  v36((uint64_t)v25, v30);
  uint64_t v37 = (uint64_t)v10;
  uint64_t v38 = (uint64_t)v58;
  sub_21CAF7914(v37, (uint64_t)v58, type metadata accessor for LiveRelabilityStats);
  double v39 = *(double *)v38;
  char v40 = *(unsigned char *)(v38 + 8);
  uint64_t v41 = v38 + *(int *)(v11 + 24);
  unsigned int v50 = *(void (**)(char *, uint64_t, uint64_t))(v35 + 16);
  v50(v25, v41, v30);
  double v42 = -1.0;
  if (v39 == -1.0)
  {
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v35 + 48))(v60, 1, v30) != 1)
    {
      uint64_t v43 = v54;
      sub_21CB87580();
      sub_21CB87500();
      double v42 = v44;
      v52(v43, v30);
      char v40 = 1;
    }
  }
  else
  {
    double v42 = v39;
  }
  v50(&v8[*(int *)(v11 + 24)], (uint64_t)v25, v30);
  *(double *)unsigned int v8 = v42;
  v8[8] = v40;
  v33(v8, 0, 1, v11);
  swift_beginAccess();
  sub_21CB7FAB0((uint64_t)v8, v61, a2);
  swift_endAccess();
  sub_21CAF797C((uint64_t)v58, type metadata accessor for LiveRelabilityStats);
  return ((uint64_t (*)(char *, uint64_t))v52)(v25, v30);
}

uint64_t sub_21CAF74C8()
{
  uint64_t v1 = sub_21CA57E34((uint64_t *)&unk_267C951B0);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v34 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_21CA57E34(&qword_267C96AE0);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (uint64_t *)((char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (uint64_t *)((char *)&v34 - v8);
  swift_beginAccess();
  uint64_t v10 = *(void *)(v0 + 152);
  uint64_t v11 = *(void *)(v10 + 64);
  uint64_t v36 = v10 + 64;
  uint64_t v12 = 1 << *(unsigned char *)(v10 + 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & v11;
  int64_t v37 = (unint64_t)(v12 + 63) >> 6;
  uint64_t v38 = v10;
  int64_t v35 = v37 - 1;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v16 = 0;
  if (!v14) {
    goto LABEL_8;
  }
LABEL_6:
  unint64_t v22 = __clz(__rbit64(v14));
  v14 &= v14 - 1;
  unint64_t v23 = v22 | (v16 << 6);
  while (2)
  {
    uint64_t v24 = *(void *)(v38 + 56);
    uint64_t v25 = (void *)(*(void *)(v38 + 48) + 16 * v23);
    uint64_t v26 = v25[1];
    *uint64_t v6 = *v25;
    v6[1] = v26;
    uint64_t v27 = v24 + *(void *)(*(void *)(type metadata accessor for ShallowRelabilityStats(0) - 8) + 72) * v23;
    uint64_t v28 = sub_21CA57E34(&qword_267C96AE8);
    sub_21CAF79DC(v27, (uint64_t)v6 + *(int *)(v28 + 48), type metadata accessor for ShallowRelabilityStats);
    (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v6, 0, 1, v28);
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_21CAF7A44((uint64_t)v6, (uint64_t)v9);
      uint64_t v33 = sub_21CA57E34(&qword_267C96AE8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v33 - 8) + 48))(v9, 1, v33) == 1) {
        return swift_release();
      }
      uint64_t v17 = *v9;
      uint64_t v18 = v9[1];
      uint64_t v19 = (uint64_t)v9 + *(int *)(v33 + 48);
      uint64_t v20 = sub_21CB87590();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v3, 1, 1, v20);
      int v21 = *(unsigned __int8 *)(v19 + 8);
      sub_21CAF797C(v19, type metadata accessor for ShallowRelabilityStats);
      sub_21CA41274(v17, v18, (uint64_t)v3, v21);
      swift_bridgeObjectRelease();
      uint64_t result = sub_21CA1B88C((uint64_t)v3, (uint64_t *)&unk_267C951B0);
      if (v14) {
        goto LABEL_6;
      }
LABEL_8:
      int64_t v29 = v16 + 1;
      if (__OFADD__(v16, 1))
      {
        __break(1u);
        goto LABEL_29;
      }
      if (v29 < v37)
      {
        unint64_t v30 = *(void *)(v36 + 8 * v29);
        if (v30) {
          goto LABEL_11;
        }
        int64_t v31 = v16 + 2;
        ++v16;
        if (v29 + 1 < v37)
        {
          unint64_t v30 = *(void *)(v36 + 8 * v31);
          if (v30) {
            goto LABEL_14;
          }
          int64_t v16 = v29 + 1;
          if (v29 + 2 < v37)
          {
            unint64_t v30 = *(void *)(v36 + 8 * (v29 + 2));
            if (v30)
            {
              v29 += 2;
              goto LABEL_11;
            }
            int64_t v31 = v29 + 3;
            int64_t v16 = v29 + 2;
            if (v29 + 3 < v37) {
              break;
            }
          }
        }
      }
LABEL_25:
      uint64_t v32 = sub_21CA57E34(&qword_267C96AE8);
      (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v6, 1, 1, v32);
      unint64_t v14 = 0;
    }
    unint64_t v30 = *(void *)(v36 + 8 * v31);
    if (v30)
    {
LABEL_14:
      int64_t v29 = v31;
LABEL_11:
      unint64_t v14 = (v30 - 1) & v30;
      unint64_t v23 = __clz(__rbit64(v30)) + (v29 << 6);
      int64_t v16 = v29;
      continue;
    }
    break;
  }
  while (1)
  {
    int64_t v29 = v31 + 1;
    if (__OFADD__(v31, 1)) {
      break;
    }
    if (v29 >= v37)
    {
      int64_t v16 = v35;
      goto LABEL_25;
    }
    unint64_t v30 = *(void *)(v36 + 8 * v29);
    ++v31;
    if (v30) {
      goto LABEL_11;
    }
  }
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_21CAF7914(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_21CAF797C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_21CAF79DC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_21CAF7A44(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_21CA57E34(&qword_267C96AE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t destroy for FMDemoLocation()
{
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for FMDemoLocation(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  uint64_t v3 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for FMDemoLocation(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  uint64_t v3 = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 16) = v3;
  uint64_t v4 = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 32) = v4;
  uint64_t v5 = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 48) = v5;
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for FMDemoLocation(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(__n128 *)(a1 + 16) = result;
  *(_OWORD *)(a1 + 32) = v3;
  return result;
}

uint64_t assignWithTake for FMDemoLocation(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  uint64_t v3 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for FMDemoLocation(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 80)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 72);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for FMDemoLocation(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 80) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 80) = 0;
    }
    if (a2) {
      *(void *)(result + 72) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FMDemoLocation()
{
  return &type metadata for FMDemoLocation;
}

unint64_t sub_21CAF7CFC(char a1)
{
  unint64_t result = 0x656475746974616CLL;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x64757469676E6F6CLL;
      break;
    case 2:
      unint64_t result = 0x6564757469746C61;
      break;
    case 3:
      unint64_t result = 0xD000000000000012;
      break;
    case 4:
      unint64_t result = 0xD000000000000010;
      break;
    case 5:
      unint64_t result = 0x6C6562616CLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_21CAF7DC4(void *a1)
{
  uint64_t v3 = sub_21CA57E34(&qword_267C96AF0);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_21CA2B2CC(a1, a1[3]);
  sub_21CAF80DC();
  sub_21CB890C0();
  v8[15] = 0;
  sub_21CB88E90();
  if (!v1)
  {
    v8[14] = 1;
    sub_21CB88E90();
    v8[13] = 2;
    sub_21CB88E60();
    v8[12] = 3;
    sub_21CB88E60();
    v8[11] = 4;
    sub_21CB88E60();
    v8[10] = 5;
    sub_21CB88E50();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_21CAF7FD0()
{
  return sub_21CAF7CFC(*v0);
}

uint64_t sub_21CAF7FD8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_21CAF8130(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_21CAF8000(uint64_t a1)
{
  unint64_t v2 = sub_21CAF80DC();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_21CAF803C(uint64_t a1)
{
  unint64_t v2 = sub_21CAF80DC();

  return MEMORY[0x270FA00B8](a1, v2);
}

__n128 sub_21CAF8078@<Q0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_21CAF838C(a1, (uint64_t)v6);
  if (!v2)
  {
    long long v5 = v6[3];
    *(_OWORD *)(a2 + 32) = v6[2];
    *(_OWORD *)(a2 + 48) = v5;
    *(_OWORD *)(a2 + 64) = v6[4];
    __n128 result = (__n128)v6[1];
    *(_OWORD *)a2 = v6[0];
    *(__n128 *)(a2 + 16) = result;
  }
  return result;
}

uint64_t sub_21CAF80C4(void *a1)
{
  return sub_21CAF7DC4(a1);
}

unint64_t sub_21CAF80DC()
{
  unint64_t result = qword_267C96AF8;
  if (!qword_267C96AF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C96AF8);
  }
  return result;
}

uint64_t sub_21CAF8130(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x656475746974616CLL && a2 == 0xE800000000000000;
  if (v2 || (sub_21CB88F50() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x64757469676E6F6CLL && a2 == 0xE900000000000065 || (sub_21CB88F50() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6564757469746C61 && a2 == 0xE800000000000000 || (sub_21CB88F50() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x800000021CB92FF0 || (sub_21CB88F50() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000021CB967E0 || (sub_21CB88F50() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6C6562616CLL && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    char v6 = sub_21CB88F50();
    swift_bridgeObjectRelease();
    if (v6) {
      return 5;
    }
    else {
      return 6;
    }
  }
}

uint64_t sub_21CAF838C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_21CA57E34(&qword_267C96B00);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21CA2B2CC(a1, a1[3]);
  sub_21CAF80DC();
  sub_21CB890B0();
  if (v2) {
    return sub_21CA2B0D0((uint64_t)a1);
  }
  char v34 = 0;
  sub_21CB88E00();
  uint64_t v10 = v9;
  char v33 = 1;
  sub_21CB88E00();
  uint64_t v12 = v11;
  char v32 = 2;
  uint64_t v13 = sub_21CB88DB0();
  char v15 = v14;
  char v31 = 3;
  uint64_t v16 = sub_21CB88DB0();
  int v27 = v17;
  uint64_t v28 = v16;
  char v30 = 4;
  uint64_t v18 = sub_21CB88DB0();
  HIDWORD(v25) = v19;
  uint64_t v26 = v18;
  char v29 = 5;
  uint64_t v20 = sub_21CB88DA0();
  int v21 = v8;
  uint64_t v23 = v22;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v21, v5);
  uint64_t result = sub_21CA2B0D0((uint64_t)a1);
  *(void *)a2 = v10;
  *(void *)(a2 + 8) = v12;
  *(void *)(a2 + 16) = v13;
  *(unsigned char *)(a2 + 24) = v15 & 1;
  *(void *)(a2 + 32) = v28;
  *(unsigned char *)(a2 + 40) = v27 & 1;
  *(void *)(a2 + 48) = v26;
  *(unsigned char *)(a2 + 56) = BYTE4(v25) & 1;
  *(void *)(a2 + 64) = v20;
  *(void *)(a2 + 72) = v23;
  return result;
}

unsigned char *storeEnumTagSinglePayload for FMDemoLocation.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *uint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x21CAF86F0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FMDemoLocation.CodingKeys()
{
  return &type metadata for FMDemoLocation.CodingKeys;
}

unint64_t sub_21CAF872C()
{
  unint64_t result = qword_267C96B08;
  if (!qword_267C96B08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C96B08);
  }
  return result;
}

unint64_t sub_21CAF8784()
{
  unint64_t result = qword_267C96B10;
  if (!qword_267C96B10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C96B10);
  }
  return result;
}

unint64_t sub_21CAF87DC()
{
  unint64_t result = qword_267C96B18;
  if (!qword_267C96B18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C96B18);
  }
  return result;
}

uint64_t sub_21CAF8830(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_21CA7ED1C(*a1, *a2);
}

uint64_t sub_21CAF883C()
{
  return sub_21CB89090();
}

uint64_t sub_21CAF88D0()
{
  sub_21CB88380();

  return swift_bridgeObjectRelease();
}

uint64_t sub_21CAF8950()
{
  return sub_21CB89090();
}

uint64_t sub_21CAF89E0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_21CAF8EE0();
  *a1 = result;
  return result;
}

void sub_21CAF8A10(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE400000000000000;
  unint64_t v4 = 0xE700000000000000;
  uint64_t v5 = 0x776F6C6C616873;
  if (v2 != 1)
  {
    uint64_t v5 = 1885693284;
    unint64_t v4 = 0xE400000000000000;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 1701736302;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_21CAF8A60@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_21CB88D70();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

uint64_t sub_21CAF8AC0@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_21CB88D70();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

uint64_t sub_21CAF8B24(uint64_t a1)
{
  unint64_t v2 = sub_21CA277E8();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_21CAF8B60(uint64_t a1)
{
  unint64_t v2 = sub_21CA277E8();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_21CAF8B9C(void *a1, uint64_t a2, uint64_t a3, int a4)
{
  int v12 = a4;
  uint64_t v6 = sub_21CA57E34(&qword_267C96B30);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21CA2B2CC(a1, a1[3]);
  sub_21CA277E8();
  sub_21CB890C0();
  char v14 = 0;
  sub_21CB88E70();
  if (v4) {
    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  char v13 = 1;
  sub_21CB88E70();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return swift_bridgeObjectRelease();
}

uint64_t sub_21CAF8D78(void *a1)
{
  return sub_21CAF8B9C(a1, *(void *)v1, *(void *)(v1 + 8), *(unsigned __int8 *)(v1 + 16));
}

uint64_t sub_21CAF8D98(uint64_t a1, uint64_t a2)
{
  return sub_21CAF8DB4(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16), *(void *)a2, *(void *)(a2 + 8), *(unsigned char *)(a2 + 16));
}

uint64_t sub_21CAF8DB4(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  if (a1 == a4 && a2 == a5 || (char v8 = 0, (sub_21CB88F50() & 1) != 0))
  {
    if (a3)
    {
      if (a3 == 1) {
        uint64_t v9 = 0x776F6C6C616873;
      }
      else {
        uint64_t v9 = 1885693284;
      }
      if (a3 == 1) {
        unint64_t v10 = 0xE700000000000000;
      }
      else {
        unint64_t v10 = 0xE400000000000000;
      }
      int v11 = a6;
      if (a6)
      {
LABEL_12:
        if (v11 == 1) {
          uint64_t v12 = 0x776F6C6C616873;
        }
        else {
          uint64_t v12 = 1885693284;
        }
        if (v11 == 1) {
          unint64_t v13 = 0xE700000000000000;
        }
        else {
          unint64_t v13 = 0xE400000000000000;
        }
        if (v9 != v12) {
          goto LABEL_24;
        }
LABEL_22:
        if (v10 == v13)
        {
          char v8 = 1;
LABEL_25:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          return v8 & 1;
        }
LABEL_24:
        char v8 = sub_21CB88F50();
        goto LABEL_25;
      }
    }
    else
    {
      unint64_t v10 = 0xE400000000000000;
      uint64_t v9 = 1701736302;
      int v11 = a6;
      if (a6) {
        goto LABEL_12;
      }
    }
    unint64_t v13 = 0xE400000000000000;
    if (v9 != 1701736302) {
      goto LABEL_24;
    }
    goto LABEL_22;
  }
  return v8 & 1;
}

uint64_t sub_21CAF8EE0()
{
  unint64_t v0 = sub_21CB88D70();
  swift_bridgeObjectRelease();
  if (v0 >= 3) {
    return 3;
  }
  else {
    return v0;
  }
}

unsigned char *storeEnumTagSinglePayload for FMFLocateInProgressStatus(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x21CAF9020);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FMFLocateInProgressStatus()
{
  return &type metadata for FMFLocateInProgressStatus;
}

unint64_t sub_21CAF905C()
{
  unint64_t result = qword_267C96B38;
  if (!qword_267C96B38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C96B38);
  }
  return result;
}

unint64_t sub_21CAF90B4()
{
  unint64_t result = qword_267C96B40;
  if (!qword_267C96B40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C96B40);
  }
  return result;
}

uint64_t sub_21CAF9108(char *a1, unsigned __int8 *a2)
{
  return sub_21CA7EF88(*a1, *a2);
}

uint64_t sub_21CAF9114()
{
  return sub_21CAC444C();
}

uint64_t sub_21CAF911C()
{
  sub_21CB88380();

  return swift_bridgeObjectRelease();
}

uint64_t sub_21CAF91B4()
{
  return sub_21CAD5120();
}

uint64_t sub_21CAF91BC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_21CAF9380();
  *a1 = result;
  return result;
}

void sub_21CAF91EC(unint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE800000000000000;
  unint64_t v4 = 0x800000021CB939A0;
  if (v2 != 1) {
    unint64_t v4 = 0x800000021CB939C0;
  }
  BOOL v5 = v2 == 0;
  if (*v1) {
    unint64_t v6 = 0xD000000000000011;
  }
  else {
    unint64_t v6 = 0x6E6F697461636F6CLL;
  }
  if (!v5) {
    unint64_t v3 = v4;
  }
  *a1 = v6;
  a1[1] = v3;
}

uint64_t sub_21CAF9254@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_21CAF9380();
  *a1 = result;
  return result;
}

void sub_21CAF927C(unsigned char *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_21CAF9288(uint64_t a1)
{
  unint64_t v2 = sub_21CA63C7C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_21CAF92C4(uint64_t a1)
{
  unint64_t v2 = sub_21CA63C7C();

  return MEMORY[0x270FA00B8](a1, v2);
}

unint64_t sub_21CAF932C()
{
  unint64_t result = qword_267C96B68;
  if (!qword_267C96B68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C96B68);
  }
  return result;
}

uint64_t sub_21CAF9380()
{
  unint64_t v0 = sub_21CB88D70();
  swift_bridgeObjectRelease();
  if (v0 >= 3) {
    return 3;
  }
  else {
    return v0;
  }
}

uint64_t *sub_21CAF93CC(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *a1 = *a2;
    uint64_t v16 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a3[6];
    uint64_t v9 = (char *)a1 + v8;
    unint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_21CB87480();
    uint64_t v12 = *(void *)(v11 - 8);
    unint64_t v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      uint64_t v14 = sub_21CA57E34(&qword_267C95190);
      memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    uint64_t v17 = a3[7];
    uint64_t v18 = a3[8];
    int v19 = (uint64_t *)((char *)a1 + v17);
    uint64_t v20 = (uint64_t *)((char *)a2 + v17);
    uint64_t v21 = v20[1];
    *int v19 = *v20;
    v19[1] = v21;
    uint64_t v22 = (uint64_t *)((char *)a1 + v18);
    uint64_t v23 = (uint64_t *)((char *)a2 + v18);
    uint64_t v24 = v23[1];
    *uint64_t v22 = *v23;
    v22[1] = v24;
    uint64_t v25 = a3[9];
    uint64_t v26 = a3[10];
    int v27 = (uint64_t *)((char *)a1 + v25);
    uint64_t v28 = (uint64_t *)((char *)a2 + v25);
    uint64_t v29 = v28[1];
    void *v27 = *v28;
    v27[1] = v29;
    uint64_t v117 = (char *)a1 + v26;
    uint64_t v119 = a1;
    char v30 = (char *)a2 + v26;
    uint64_t v31 = sub_21CB87590();
    uint64_t v32 = *(void *)(v31 - 8);
    char v33 = *(unsigned int (**)(void, void, void))(v32 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v116 = (unsigned int (*)(char *, uint64_t, uint64_t))v33;
    uint64_t v115 = v32;
    if (v33(v30, 1, v31))
    {
      uint64_t v34 = sub_21CA57E34((uint64_t *)&unk_267C951B0);
      memcpy(v117, v30, *(void *)(*(void *)(v34 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v32 + 16))(v117, v30, v31);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v32 + 56))(v117, 0, 1, v31);
    }
    uint64_t v16 = v119;
    uint64_t v35 = a3[11];
    uint64_t v36 = a3[12];
    int64_t v37 = (uint64_t *)((char *)v119 + v35);
    uint64_t v38 = (uint64_t *)((char *)a2 + v35);
    uint64_t v39 = v38[1];
    *int64_t v37 = *v38;
    v37[1] = v39;
    char v40 = (uint64_t *)((char *)v119 + v36);
    uint64_t v41 = (uint64_t *)((char *)a2 + v36);
    double v42 = (int *)type metadata accessor for FMFLocationAlert();
    uint64_t v43 = *((void *)v42 - 1);
    double v44 = *(unsigned int (**)(void *, uint64_t, int *))(v43 + 48);
    swift_bridgeObjectRetain();
    if (v44(v41, 1, v42))
    {
      uint64_t v45 = sub_21CA57E34((uint64_t *)&unk_267C96EC0);
      memcpy(v40, v41, *(void *)(*(void *)(v45 - 8) + 64));
    }
    else
    {
      uint64_t v111 = v43;
      uint64_t v118 = v31;
      uint64_t v46 = v41[1];
      *char v40 = *v41;
      v40[1] = v46;
      *((_OWORD *)v40 + 1) = *((_OWORD *)v41 + 1);
      v40[4] = v41[4];
      *((unsigned char *)v40 + 40) = *((unsigned char *)v41 + 40);
      *((unsigned char *)v40 + 41) = *((unsigned char *)v41 + 41);
      *((_WORD *)v40 + 21) = *((_WORD *)v41 + 21);
      uint64_t v47 = v42[12];
      __dst = (_OWORD *)((char *)v40 + v47);
      char v48 = (_OWORD *)((char *)v41 + v47);
      uint64_t v49 = type metadata accessor for FMFSchedule();
      uint64_t v50 = *(void *)(v49 - 8);
      uint64_t v51 = *(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v50 + 48);
      swift_bridgeObjectRetain();
      if (v51(v48, 1, v49))
      {
        uint64_t v52 = sub_21CA57E34((uint64_t *)&unk_267C96ED0);
        memcpy(__dst, v48, *(void *)(*(void *)(v52 - 8) + 64));
      }
      else
      {
        uint64_t v112 = v50;
        long long v53 = v48[1];
        _OWORD *__dst = *v48;
        __dst[1] = v53;
        __dst[2] = v48[2];
        uint64_t v54 = *(int *)(v49 + 40);
        uint64_t v55 = (char *)__dst + v54;
        uint64_t v56 = (char *)v48 + v54;
        uint64_t v57 = sub_21CB876F0();
        uint64_t v58 = *(void *)(v57 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v58 + 48))(v56, 1, v57))
        {
          uint64_t v59 = sub_21CA57E34(&qword_267C94A48);
          memcpy(v55, v56, *(void *)(*(void *)(v59 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v58 + 16))(v55, v56, v57);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v58 + 56))(v55, 0, 1, v57);
        }
        (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v112 + 56))(__dst, 0, 1, v49);
      }
      uint64_t v60 = v42[13];
      uint64_t v61 = (void *)((char *)v40 + v60);
      uint64_t v62 = (void *)((char *)v41 + v60);
      uint64_t v63 = v62[1];
      *uint64_t v61 = *v62;
      v61[1] = v63;
      uint64_t v64 = v42[14];
      uint64_t v65 = (void *)((char *)v40 + v64);
      uint64_t v66 = (void *)((char *)v41 + v64);
      __dsta = (void *)v66[1];
      *uint64_t v65 = *v66;
      v65[1] = __dsta;
      *((unsigned char *)v40 + v42[15]) = *((unsigned char *)v41 + v42[15]);
      *(void *)((char *)v40 + v42[16]) = *(void *)((char *)v41 + v42[16]);
      *(void *)((char *)v40 + v42[17]) = *(void *)((char *)v41 + v42[17]);
      *(void *)((char *)v40 + v42[18]) = *(void *)((char *)v41 + v42[18]);
      uint64_t v67 = v42[19];
      uint64_t v68 = (void *)((char *)v40 + v67);
      uint64_t v69 = (void *)((char *)v41 + v67);
      uint64_t v70 = v69[1];
      *uint64_t v68 = *v69;
      v68[1] = v70;
      uint64_t v71 = v42[20];
      uint64_t v72 = (char *)v40 + v71;
      uint64_t v73 = (char *)v41 + v71;
      uint64_t v74 = *((void *)v73 + 1);
      *(void *)uint64_t v72 = *(void *)v73;
      *((void *)v72 + 1) = v74;
      v72[16] = v73[16];
      v72[17] = v73[17];
      *((unsigned char *)v40 + v42[21]) = *((unsigned char *)v41 + v42[21]);
      uint64_t v75 = v42[22];
      uint64_t v76 = (void *)((char *)v40 + v75);
      uint64_t v77 = (void *)((char *)v41 + v75);
      uint64_t v78 = v77[1];
      void *v76 = *v77;
      v76[1] = v78;
      uint64_t v79 = v42[23];
      uint64_t v80 = (void *)((char *)v40 + v79);
      uint64_t v81 = (void *)((char *)v41 + v79);
      uint64_t v82 = *(void *)((char *)v41 + v79 + 168);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v82)
      {
        uint64_t v83 = v81[1];
        *uint64_t v80 = *v81;
        v80[1] = v83;
        uint64_t v84 = v81[3];
        v80[2] = v81[2];
        v80[3] = v84;
        uint64_t v85 = v81[5];
        v80[4] = v81[4];
        v80[5] = v85;
        uint64_t v86 = v81[7];
        v80[6] = v81[6];
        v80[7] = v86;
        uint64_t v87 = v81[9];
        v80[8] = v81[8];
        v80[9] = v87;
        uint64_t v88 = v81[11];
        v80[10] = v81[10];
        v80[11] = v88;
        uint64_t v89 = v81[13];
        v80[12] = v81[12];
        v80[13] = v89;
        uint64_t v90 = v81[15];
        v80[14] = v81[14];
        v80[15] = v90;
        uint64_t v91 = v81[17];
        v80[16] = v81[16];
        v80[17] = v91;
        uint64_t v92 = v81[19];
        v80[18] = v81[18];
        v80[19] = v92;
        v80[20] = v81[20];
        v80[21] = v82;
        uint64_t v93 = v81[23];
        v80[22] = v81[22];
        v80[23] = v93;
        uint64_t v94 = v81[25];
        v80[24] = v81[24];
        v80[25] = v94;
        uint64_t v95 = v81[27];
        v80[26] = v81[26];
        v80[27] = v95;
        uint64_t v96 = v81[29];
        v80[28] = v81[28];
        v80[29] = v96;
        uint64_t v97 = v81[31];
        v80[30] = v81[30];
        v80[31] = v97;
        uint64_t v98 = v81[33];
        v80[32] = v81[32];
        v80[33] = v98;
        uint64_t v99 = v81[35];
        v80[34] = v81[34];
        v80[35] = v99;
        uint64_t v100 = v81[36];
        uint64_t v101 = v81[37];
        v80[36] = v100;
        v80[37] = v101;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        memcpy(v80, v81, 0x130uLL);
      }
      *((unsigned char *)v40 + v42[24]) = *((unsigned char *)v41 + v42[24]);
      *((unsigned char *)v40 + v42[25]) = *((unsigned char *)v41 + v42[25]);
      uint64_t v102 = v42[26];
      uint64_t v103 = (char *)v40 + v102;
      uint64_t v104 = (char *)v41 + v102;
      uint64_t v16 = v119;
      if (v116((char *)v41 + v102, 1, v118))
      {
        uint64_t v105 = sub_21CA57E34((uint64_t *)&unk_267C951B0);
        memcpy(v103, v104, *(void *)(*(void *)(v105 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v115 + 16))(v103, v104, v118);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v115 + 56))(v103, 0, 1, v118);
      }
      uint64_t v106 = v42[27];
      BOOL v107 = (char *)v40 + v106;
      uint64_t v108 = (char *)v41 + v106;
      if (v116(v108, 1, v118))
      {
        uint64_t v109 = sub_21CA57E34((uint64_t *)&unk_267C951B0);
        memcpy(v107, v108, *(void *)(*(void *)(v109 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v115 + 16))(v107, v108, v118);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v115 + 56))(v107, 0, 1, v118);
      }
      (*(void (**)(void *, void, uint64_t, int *))(v111 + 56))(v40, 0, 1, v42);
    }
  }
  return v16;
}

uint64_t sub_21CAF9D40(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[6];
  uint64_t v5 = sub_21CB87480();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v7 = a1 + a2[10];
  uint64_t v8 = sub_21CB87590();
  uint64_t v21 = *(void *)(v8 - 8);
  uint64_t v9 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v21 + 48);
  if (!v9(v7, 1, v8)) {
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v7, v8);
  }
  swift_bridgeObjectRelease();
  uint64_t v10 = a1 + a2[12];
  uint64_t v11 = (int *)type metadata accessor for FMFLocationAlert();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, int *))(*((void *)v11 - 1) + 48))(v10, 1, v11);
  if (!result)
  {
    swift_bridgeObjectRelease();
    uint64_t v13 = v10 + v11[12];
    uint64_t v14 = type metadata accessor for FMFSchedule();
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48))(v13, 1, v14))
    {
      uint64_t v15 = v13 + *(int *)(v14 + 40);
      uint64_t v16 = sub_21CB876F0();
      uint64_t v17 = *(void *)(v16 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16)) {
        (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v15, v16);
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(void *)(v10 + v11[23] + 168))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    uint64_t v18 = v10 + v11[26];
    if (!v9(v18, 1, v8)) {
      (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v18, v8);
    }
    uint64_t v19 = v10 + v11[27];
    uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v9)(v19, 1, v8);
    if (!result)
    {
      uint64_t v20 = *(uint64_t (**)(uint64_t, uint64_t))(v21 + 8);
      return v20(v19, v8);
    }
  }
  return result;
}

void *sub_21CAFA1C4(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[6];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_21CB87480();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v10))
  {
    uint64_t v13 = sub_21CA57E34(&qword_267C95190);
    memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v14 = a3[7];
  uint64_t v15 = a3[8];
  uint64_t v16 = (void *)((char *)a1 + v14);
  uint64_t v17 = (void *)((char *)a2 + v14);
  uint64_t v18 = v17[1];
  *uint64_t v16 = *v17;
  v16[1] = v18;
  uint64_t v19 = (void *)((char *)a1 + v15);
  uint64_t v20 = (void *)((char *)a2 + v15);
  uint64_t v21 = v20[1];
  *uint64_t v19 = *v20;
  v19[1] = v21;
  uint64_t v22 = a3[9];
  uint64_t v23 = a3[10];
  uint64_t v24 = (void *)((char *)a1 + v22);
  uint64_t v25 = (void *)((char *)a2 + v22);
  uint64_t v26 = v25[1];
  void *v24 = *v25;
  v24[1] = v26;
  uint64_t v114 = (char *)a1 + v23;
  uint64_t v116 = a1;
  int v27 = (char *)a2 + v23;
  uint64_t v28 = sub_21CB87590();
  uint64_t v29 = *(void *)(v28 - 8);
  char v30 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v113 = v30;
  uint64_t v111 = v29;
  uint64_t v112 = v28;
  if (v30(v27, 1, v28))
  {
    uint64_t v31 = sub_21CA57E34((uint64_t *)&unk_267C951B0);
    memcpy(v114, v27, *(void *)(*(void *)(v31 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v29 + 16))(v114, v27, v28);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v29 + 56))(v114, 0, 1, v28);
  }
  uint64_t v32 = v116;
  uint64_t v33 = a3[11];
  uint64_t v34 = a3[12];
  uint64_t v35 = (void *)((char *)v116 + v33);
  uint64_t v36 = (void *)((char *)a2 + v33);
  uint64_t v37 = v36[1];
  void *v35 = *v36;
  v35[1] = v37;
  uint64_t v38 = (void *)((char *)v116 + v34);
  uint64_t v39 = (void *)((char *)a2 + v34);
  char v40 = (int *)type metadata accessor for FMFLocationAlert();
  uint64_t v41 = *((void *)v40 - 1);
  double v42 = *(unsigned int (**)(void *, uint64_t, int *))(v41 + 48);
  swift_bridgeObjectRetain();
  if (v42(v39, 1, v40))
  {
    uint64_t v43 = sub_21CA57E34((uint64_t *)&unk_267C96EC0);
    memcpy(v38, v39, *(void *)(*(void *)(v43 - 8) + 64));
  }
  else
  {
    uint64_t v115 = v41;
    uint64_t v44 = v39[1];
    *uint64_t v38 = *v39;
    v38[1] = v44;
    *((_OWORD *)v38 + 1) = *((_OWORD *)v39 + 1);
    v38[4] = v39[4];
    *((unsigned char *)v38 + 40) = *((unsigned char *)v39 + 40);
    *((unsigned char *)v38 + 41) = *((unsigned char *)v39 + 41);
    *((_WORD *)v38 + 21) = *((_WORD *)v39 + 21);
    uint64_t v45 = v40[12];
    uint64_t v46 = (_OWORD *)((char *)v38 + v45);
    uint64_t v47 = (_OWORD *)((char *)v39 + v45);
    uint64_t v48 = type metadata accessor for FMFSchedule();
    uint64_t v49 = *(void *)(v48 - 8);
    uint64_t v50 = *(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v49 + 48);
    swift_bridgeObjectRetain();
    if (v50(v47, 1, v48))
    {
      uint64_t v51 = sub_21CA57E34((uint64_t *)&unk_267C96ED0);
      memcpy(v46, v47, *(void *)(*(void *)(v51 - 8) + 64));
    }
    else
    {
      long long v52 = v47[1];
      _OWORD *v46 = *v47;
      v46[1] = v52;
      v46[2] = v47[2];
      uint64_t v53 = *(int *)(v48 + 40);
      uint64_t v54 = (char *)v46 + v53;
      uint64_t v55 = (char *)v47 + v53;
      uint64_t v56 = sub_21CB876F0();
      uint64_t v57 = *(void *)(v56 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v57 + 48))(v55, 1, v56))
      {
        uint64_t v58 = sub_21CA57E34(&qword_267C94A48);
        memcpy(v54, v55, *(void *)(*(void *)(v58 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v57 + 16))(v54, v55, v56);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v57 + 56))(v54, 0, 1, v56);
      }
      (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v49 + 56))(v46, 0, 1, v48);
    }
    uint64_t v59 = v40[13];
    uint64_t v60 = (void *)((char *)v38 + v59);
    uint64_t v61 = (void *)((char *)v39 + v59);
    uint64_t v62 = v61[1];
    *uint64_t v60 = *v61;
    v60[1] = v62;
    uint64_t v63 = v40[14];
    uint64_t v64 = (void *)((char *)v38 + v63);
    uint64_t v65 = (void *)((char *)v39 + v63);
    uint64_t v110 = v65[1];
    *uint64_t v64 = *v65;
    v64[1] = v110;
    *((unsigned char *)v38 + v40[15]) = *((unsigned char *)v39 + v40[15]);
    *(void *)((char *)v38 + v40[16]) = *(void *)((char *)v39 + v40[16]);
    *(void *)((char *)v38 + v40[17]) = *(void *)((char *)v39 + v40[17]);
    *(void *)((char *)v38 + v40[18]) = *(void *)((char *)v39 + v40[18]);
    uint64_t v66 = v40[19];
    uint64_t v67 = (void *)((char *)v38 + v66);
    uint64_t v68 = (void *)((char *)v39 + v66);
    uint64_t v69 = v68[1];
    *uint64_t v67 = *v68;
    v67[1] = v69;
    uint64_t v70 = v40[20];
    uint64_t v71 = (char *)v38 + v70;
    uint64_t v72 = (char *)v39 + v70;
    uint64_t v73 = *((void *)v72 + 1);
    *(void *)uint64_t v71 = *(void *)v72;
    *((void *)v71 + 1) = v73;
    v71[16] = v72[16];
    v71[17] = v72[17];
    *((unsigned char *)v38 + v40[21]) = *((unsigned char *)v39 + v40[21]);
    uint64_t v74 = v40[22];
    uint64_t v75 = (void *)((char *)v38 + v74);
    uint64_t v76 = (void *)((char *)v39 + v74);
    uint64_t v77 = v76[1];
    *uint64_t v75 = *v76;
    v75[1] = v77;
    uint64_t v78 = v40[23];
    uint64_t v79 = (void *)((char *)v38 + v78);
    uint64_t v80 = (void *)((char *)v39 + v78);
    uint64_t v81 = *(void *)((char *)v39 + v78 + 168);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v81)
    {
      uint64_t v82 = v80[1];
      *uint64_t v79 = *v80;
      v79[1] = v82;
      uint64_t v83 = v80[3];
      v79[2] = v80[2];
      v79[3] = v83;
      uint64_t v84 = v80[5];
      v79[4] = v80[4];
      v79[5] = v84;
      uint64_t v85 = v80[7];
      v79[6] = v80[6];
      v79[7] = v85;
      uint64_t v86 = v80[9];
      v79[8] = v80[8];
      v79[9] = v86;
      uint64_t v87 = v80[11];
      v79[10] = v80[10];
      v79[11] = v87;
      uint64_t v88 = v80[13];
      v79[12] = v80[12];
      v79[13] = v88;
      uint64_t v89 = v80[15];
      v79[14] = v80[14];
      v79[15] = v89;
      uint64_t v90 = v80[17];
      v79[16] = v80[16];
      v79[17] = v90;
      uint64_t v91 = v80[19];
      v79[18] = v80[18];
      v79[19] = v91;
      v79[20] = v80[20];
      v79[21] = v81;
      uint64_t v92 = v80[23];
      v79[22] = v80[22];
      v79[23] = v92;
      uint64_t v93 = v80[25];
      v79[24] = v80[24];
      v79[25] = v93;
      uint64_t v94 = v80[27];
      v79[26] = v80[26];
      v79[27] = v94;
      uint64_t v95 = v80[29];
      v79[28] = v80[28];
      v79[29] = v95;
      uint64_t v96 = v80[31];
      v79[30] = v80[30];
      v79[31] = v96;
      uint64_t v97 = v80[33];
      v79[32] = v80[32];
      v79[33] = v97;
      uint64_t v98 = v80[35];
      v79[34] = v80[34];
      v79[35] = v98;
      uint64_t v99 = v80[36];
      uint64_t v100 = v80[37];
      v79[36] = v99;
      v79[37] = v100;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      memcpy(v79, v80, 0x130uLL);
    }
    uint64_t v32 = v116;
    *((unsigned char *)v38 + v40[24]) = *((unsigned char *)v39 + v40[24]);
    *((unsigned char *)v38 + v40[25]) = *((unsigned char *)v39 + v40[25]);
    uint64_t v101 = v40[26];
    uint64_t v102 = (char *)v38 + v101;
    uint64_t v103 = (char *)v39 + v101;
    if (v113((char *)v39 + v101, 1, v112))
    {
      uint64_t v104 = sub_21CA57E34((uint64_t *)&unk_267C951B0);
      memcpy(v102, v103, *(void *)(*(void *)(v104 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v111 + 16))(v102, v103, v112);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v111 + 56))(v102, 0, 1, v112);
    }
    uint64_t v105 = v40[27];
    uint64_t v106 = (char *)v38 + v105;
    BOOL v107 = (char *)v39 + v105;
    if (v113(v107, 1, v112))
    {
      uint64_t v108 = sub_21CA57E34((uint64_t *)&unk_267C951B0);
      memcpy(v106, v107, *(void *)(*(void *)(v108 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v111 + 16))(v106, v107, v112);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v111 + 56))(v106, 0, 1, v112);
    }
    (*(void (**)(void *, void, uint64_t, int *))(v115 + 56))(v38, 0, 1, v40);
  }
  return v32;
}

void *sub_21CAFAAD8(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[6];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_21CB87480();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    uint64_t v14 = sub_21CA57E34(&qword_267C95190);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
LABEL_7:
  uint64_t v15 = a3[7];
  uint64_t v16 = (void *)((char *)a1 + v15);
  uint64_t v17 = (void *)((char *)a2 + v15);
  *uint64_t v16 = *v17;
  v16[1] = v17[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v18 = a3[8];
  uint64_t v19 = (void *)((char *)a1 + v18);
  uint64_t v20 = (void *)((char *)a2 + v18);
  *uint64_t v19 = *v20;
  v19[1] = v20[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v21 = a3[9];
  uint64_t v22 = (void *)((char *)a1 + v21);
  uint64_t v23 = (void *)((char *)a2 + v21);
  *uint64_t v22 = *v23;
  v22[1] = v23[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v24 = a3[10];
  uint64_t v25 = (char *)a1 + v24;
  uint64_t v26 = (char *)a2 + v24;
  uint64_t v27 = sub_21CB87590();
  uint64_t v28 = *(void *)(v27 - 8);
  uint64_t v29 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48);
  unsigned int v30 = v29(v25, 1, v27);
  uint64_t v155 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v29;
  unsigned int v31 = v29(v26, 1, v27);
  if (v30)
  {
    if (!v31)
    {
      (*(void (**)(char *, char *, uint64_t))(v28 + 16))(v25, v26, v27);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v31)
  {
    (*(void (**)(char *, uint64_t))(v28 + 8))(v25, v27);
LABEL_12:
    uint64_t v32 = sub_21CA57E34((uint64_t *)&unk_267C951B0);
    memcpy(v25, v26, *(void *)(*(void *)(v32 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v28 + 24))(v25, v26, v27);
LABEL_13:
  uint64_t v33 = a3[11];
  uint64_t v34 = (void *)((char *)a1 + v33);
  uint64_t v35 = (void *)((char *)a2 + v33);
  void *v34 = *v35;
  v34[1] = v35[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v36 = a3[12];
  uint64_t v37 = (uint64_t)a1 + v36;
  uint64_t v38 = (char *)a2 + v36;
  uint64_t v39 = type metadata accessor for FMFLocationAlert();
  uint64_t v154 = *(void *)(v39 - 8);
  char v40 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v154 + 48);
  int v41 = v40(v37, 1, v39);
  int v42 = v40((uint64_t)v38, 1, v39);
  if (!v41)
  {
    if (v42)
    {
      sub_21CA8C5E8(v37, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
      goto LABEL_19;
    }
    uint64_t v151 = v28;
    *(void *)uint64_t v37 = *(void *)v38;
    *(void *)(v37 + 8) = *((void *)v38 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v37 + 16) = *((void *)v38 + 2);
    *(void *)(v37 + 24) = *((void *)v38 + 3);
    *(void *)(v37 + 32) = *((void *)v38 + 4);
    *(unsigned char *)(v37 + 40) = v38[40];
    *(unsigned char *)(v37 + 41) = v38[41];
    *(unsigned char *)(v37 + 42) = v38[42];
    *(unsigned char *)(v37 + 43) = v38[43];
    uint64_t v54 = *(int *)(v39 + 48);
    uint64_t v55 = v38;
    uint64_t v56 = (char *)(v37 + v54);
    uint64_t v157 = (int *)v39;
    uint64_t v159 = v55;
    uint64_t v57 = &v55[v54];
    uint64_t v58 = type metadata accessor for FMFSchedule();
    uint64_t v59 = *(void *)(v58 - 8);
    uint64_t v60 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v59 + 48);
    int v61 = v60(v56, 1, v58);
    int v62 = v60(v57, 1, v58);
    if (v61)
    {
      if (!v62)
      {
        uint64_t v152 = v37;
        uint64_t v63 = v27;
        *(void *)uint64_t v56 = *(void *)v57;
        *((void *)v56 + 1) = *((void *)v57 + 1);
        *((void *)v56 + 2) = *((void *)v57 + 2);
        *((void *)v56 + 3) = *((void *)v57 + 3);
        *((void *)v56 + 4) = *((void *)v57 + 4);
        *((void *)v56 + 5) = *((void *)v57 + 5);
        uint64_t v64 = *(int *)(v58 + 40);
        uint64_t v65 = &v56[v64];
        uint64_t v66 = &v57[v64];
        uint64_t v67 = sub_21CB876F0();
        uint64_t v68 = *(void *)(v67 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v68 + 48))(v66, 1, v67))
        {
          uint64_t v69 = sub_21CA57E34(&qword_267C94A48);
          memcpy(v65, v66, *(void *)(*(void *)(v69 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v68 + 16))(v65, v66, v67);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v68 + 56))(v65, 0, 1, v67);
        }
        uint64_t v27 = v63;
        (*(void (**)(char *, void, uint64_t, uint64_t))(v59 + 56))(v56, 0, 1, v58);
        uint64_t v37 = v152;
LABEL_51:
        uint64_t v115 = v155;
        uint64_t v116 = v157[13];
        uint64_t v117 = (void *)(v37 + v116);
        uint64_t v118 = &v159[v116];
        *uint64_t v117 = *(void *)v118;
        v117[1] = *((void *)v118 + 1);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        uint64_t v119 = v157[14];
        char v120 = (void *)(v37 + v119);
        uint64_t v121 = &v159[v119];
        *char v120 = *(void *)v121;
        v120[1] = *((void *)v121 + 1);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *(unsigned char *)(v37 + v157[15]) = v159[v157[15]];
        *(void *)(v37 + v157[16]) = *(void *)&v159[v157[16]];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *(void *)(v37 + v157[17]) = *(void *)&v159[v157[17]];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *(void *)(v37 + v157[18]) = *(void *)&v159[v157[18]];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        uint64_t v122 = v157[19];
        uint64_t v123 = (void *)(v37 + v122);
        unint64_t v124 = &v159[v122];
        *uint64_t v123 = *(void *)v124;
        v123[1] = *((void *)v124 + 1);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        uint64_t v125 = v157[20];
        uint64_t v126 = v37 + v125;
        uint64_t v127 = &v159[v125];
        *(void *)uint64_t v126 = *(void *)&v159[v125];
        *(void *)(v126 + 8) = *(void *)&v159[v125 + 8];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *(unsigned char *)(v126 + 16) = v127[16];
        *(unsigned char *)(v126 + 17) = v127[17];
        *(unsigned char *)(v37 + v157[21]) = v159[v157[21]];
        uint64_t v128 = v157[22];
        uint64_t v129 = (void *)(v37 + v128);
        uint64_t v130 = &v159[v128];
        *uint64_t v129 = *(void *)v130;
        v129[1] = *((void *)v130 + 1);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        uint64_t v131 = v157[23];
        uint64_t v132 = (void *)(v37 + v131);
        uint64_t v133 = &v159[v131];
        uint64_t v134 = *(void *)(v37 + v131 + 168);
        uint64_t v135 = *(void *)&v159[v131 + 168];
        if (v134)
        {
          if (v135)
          {
            *uint64_t v132 = *(void *)v133;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            v132[1] = *((void *)v133 + 1);
            v132[2] = *((void *)v133 + 2);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            v132[3] = *((void *)v133 + 3);
            v132[4] = *((void *)v133 + 4);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            v132[5] = *((void *)v133 + 5);
            v132[6] = *((void *)v133 + 6);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            v132[7] = *((void *)v133 + 7);
            v132[8] = *((void *)v133 + 8);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            v132[9] = *((void *)v133 + 9);
            v132[10] = *((void *)v133 + 10);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            v132[11] = *((void *)v133 + 11);
            v132[12] = *((void *)v133 + 12);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            v132[13] = *((void *)v133 + 13);
            v132[14] = *((void *)v133 + 14);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            v132[15] = *((void *)v133 + 15);
            v132[16] = *((void *)v133 + 16);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            v132[17] = *((void *)v133 + 17);
            v132[18] = *((void *)v133 + 18);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            v132[19] = *((void *)v133 + 19);
            v132[20] = *((void *)v133 + 20);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            v132[21] = *((void *)v133 + 21);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            v132[22] = *((void *)v133 + 22);
            v132[23] = *((void *)v133 + 23);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            v132[24] = *((void *)v133 + 24);
            v132[25] = *((void *)v133 + 25);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            v132[26] = *((void *)v133 + 26);
            v132[27] = *((void *)v133 + 27);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            v132[28] = *((void *)v133 + 28);
            v132[29] = *((void *)v133 + 29);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            v132[30] = *((void *)v133 + 30);
            v132[31] = *((void *)v133 + 31);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            v132[32] = *((void *)v133 + 32);
            v132[33] = *((void *)v133 + 33);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            v132[34] = *((void *)v133 + 34);
            v132[35] = *((void *)v133 + 35);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            v132[36] = *((void *)v133 + 36);
            v132[37] = *((void *)v133 + 37);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
LABEL_58:
            *(unsigned char *)(v37 + v157[24]) = v159[v157[24]];
            *(unsigned char *)(v37 + v157[25]) = v159[v157[25]];
            uint64_t v136 = v157[26];
            uint64_t v137 = (void *)(v37 + v136);
            uint64_t v138 = &v159[v136];
            int v139 = v115(v37 + v136, 1, v27);
            int v140 = v115((uint64_t)v138, 1, v27);
            if (v139)
            {
              if (v140)
              {
                uint64_t v141 = sub_21CA57E34((uint64_t *)&unk_267C951B0);
                memcpy(v137, v138, *(void *)(*(void *)(v141 - 8) + 64));
                uint64_t v142 = v151;
              }
              else
              {
                uint64_t v142 = v151;
                (*(void (**)(void *, char *, uint64_t))(v151 + 16))(v137, v138, v27);
                (*(void (**)(void *, void, uint64_t, uint64_t))(v151 + 56))(v137, 0, 1, v27);
              }
            }
            else
            {
              uint64_t v142 = v151;
              if (v140)
              {
                (*(void (**)(void *, uint64_t))(v151 + 8))(v137, v27);
                uint64_t v143 = sub_21CA57E34((uint64_t *)&unk_267C951B0);
                memcpy(v137, v138, *(void *)(*(void *)(v143 - 8) + 64));
              }
              else
              {
                (*(void (**)(void *, char *, uint64_t))(v151 + 24))(v137, v138, v27);
              }
            }
            uint64_t v144 = v157[27];
            unint64_t v145 = (void *)(v37 + v144);
            uint64_t v146 = &v159[v144];
            int v147 = v115((uint64_t)v145, 1, v27);
            int v148 = v115((uint64_t)v146, 1, v27);
            if (v147)
            {
              if (!v148)
              {
                (*(void (**)(void *, char *, uint64_t))(v142 + 16))(v145, v146, v27);
                (*(void (**)(void *, void, uint64_t, uint64_t))(v142 + 56))(v145, 0, 1, v27);
                return a1;
              }
            }
            else
            {
              if (!v148)
              {
                (*(void (**)(void *, char *, uint64_t))(v142 + 24))(v145, v146, v27);
                return a1;
              }
              (*(void (**)(void *, uint64_t))(v142 + 8))(v145, v27);
            }
            size_t v51 = *(void *)(*(void *)(sub_21CA57E34((uint64_t *)&unk_267C951B0) - 8) + 64);
            long long v52 = v145;
            uint64_t v53 = v146;
            goto LABEL_20;
          }
          sub_21CA757AC((uint64_t)v132);
        }
        else if (v135)
        {
          *uint64_t v132 = *(void *)v133;
          v132[1] = *((void *)v133 + 1);
          v132[2] = *((void *)v133 + 2);
          v132[3] = *((void *)v133 + 3);
          v132[4] = *((void *)v133 + 4);
          v132[5] = *((void *)v133 + 5);
          v132[6] = *((void *)v133 + 6);
          v132[7] = *((void *)v133 + 7);
          v132[8] = *((void *)v133 + 8);
          v132[9] = *((void *)v133 + 9);
          v132[10] = *((void *)v133 + 10);
          v132[11] = *((void *)v133 + 11);
          v132[12] = *((void *)v133 + 12);
          v132[13] = *((void *)v133 + 13);
          v132[14] = *((void *)v133 + 14);
          v132[15] = *((void *)v133 + 15);
          v132[16] = *((void *)v133 + 16);
          v132[17] = *((void *)v133 + 17);
          v132[18] = *((void *)v133 + 18);
          v132[19] = *((void *)v133 + 19);
          v132[20] = *((void *)v133 + 20);
          v132[21] = *((void *)v133 + 21);
          v132[22] = *((void *)v133 + 22);
          v132[23] = *((void *)v133 + 23);
          v132[24] = *((void *)v133 + 24);
          v132[25] = *((void *)v133 + 25);
          v132[26] = *((void *)v133 + 26);
          v132[27] = *((void *)v133 + 27);
          v132[28] = *((void *)v133 + 28);
          v132[29] = *((void *)v133 + 29);
          v132[30] = *((void *)v133 + 30);
          v132[31] = *((void *)v133 + 31);
          v132[32] = *((void *)v133 + 32);
          v132[33] = *((void *)v133 + 33);
          v132[34] = *((void *)v133 + 34);
          v132[35] = *((void *)v133 + 35);
          v132[36] = *((void *)v133 + 36);
          v132[37] = *((void *)v133 + 37);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v115 = v155;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_58;
        }
        memcpy(v132, v133, 0x130uLL);
        goto LABEL_58;
      }
    }
    else
    {
      if (!v62)
      {
        *(void *)uint64_t v56 = *(void *)v57;
        *((void *)v56 + 1) = *((void *)v57 + 1);
        *((void *)v56 + 2) = *((void *)v57 + 2);
        *((void *)v56 + 3) = *((void *)v57 + 3);
        *((void *)v56 + 4) = *((void *)v57 + 4);
        *((void *)v56 + 5) = *((void *)v57 + 5);
        uint64_t v107 = *(int *)(v58 + 40);
        uint64_t v108 = &v56[v107];
        uint64_t v109 = &v57[v107];
        uint64_t v110 = sub_21CB876F0();
        uint64_t v111 = *(void *)(v110 - 8);
        uint64_t v112 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v111 + 48);
        int v113 = v112(v108, 1, v110);
        int v114 = v112(v109, 1, v110);
        if (v113)
        {
          if (!v114)
          {
            (*(void (**)(char *, char *, uint64_t))(v111 + 16))(v108, v109, v110);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v111 + 56))(v108, 0, 1, v110);
            goto LABEL_51;
          }
        }
        else
        {
          if (!v114)
          {
            (*(void (**)(char *, char *, uint64_t))(v111 + 24))(v108, v109, v110);
            goto LABEL_51;
          }
          (*(void (**)(char *, uint64_t))(v111 + 8))(v108, v110);
        }
        size_t v76 = *(void *)(*(void *)(sub_21CA57E34(&qword_267C94A48) - 8) + 64);
        uint64_t v77 = v108;
        uint64_t v78 = v109;
LABEL_32:
        memcpy(v77, v78, v76);
        goto LABEL_51;
      }
      sub_21CA8C5E8((uint64_t)v56, (uint64_t (*)(void))type metadata accessor for FMFSchedule);
    }
    size_t v76 = *(void *)(*(void *)(sub_21CA57E34((uint64_t *)&unk_267C96ED0) - 8) + 64);
    uint64_t v77 = v56;
    uint64_t v78 = v57;
    goto LABEL_32;
  }
  if (v42)
  {
LABEL_19:
    size_t v51 = *(void *)(*(void *)(sub_21CA57E34((uint64_t *)&unk_267C96EC0) - 8) + 64);
    long long v52 = (void *)v37;
    uint64_t v53 = v38;
LABEL_20:
    memcpy(v52, v53, v51);
    return a1;
  }
  uint64_t v150 = v28;
  *(void *)uint64_t v37 = *(void *)v38;
  *(void *)(v37 + 8) = *((void *)v38 + 1);
  *(void *)(v37 + 16) = *((void *)v38 + 2);
  *(void *)(v37 + 24) = *((void *)v38 + 3);
  *(void *)(v37 + 32) = *((void *)v38 + 4);
  *(unsigned char *)(v37 + 40) = v38[40];
  *(unsigned char *)(v37 + 41) = v38[41];
  *(unsigned char *)(v37 + 42) = v38[42];
  *(unsigned char *)(v37 + 43) = v38[43];
  uint64_t v43 = *(int *)(v39 + 48);
  uint64_t v44 = v38;
  uint64_t v45 = (void *)(v37 + v43);
  uint64_t v156 = (int *)v39;
  uint64_t v158 = v44;
  uint64_t v46 = &v44[v43];
  uint64_t v47 = type metadata accessor for FMFSchedule();
  uint64_t v48 = *(void *)(v47 - 8);
  uint64_t v49 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v48 + 48);
  swift_bridgeObjectRetain();
  uint64_t v149 = v27;
  if (v49(v46, 1, v47))
  {
    uint64_t v50 = sub_21CA57E34((uint64_t *)&unk_267C96ED0);
    memcpy(v45, v46, *(void *)(*(void *)(v50 - 8) + 64));
  }
  else
  {
    void *v45 = *(void *)v46;
    v45[1] = *((void *)v46 + 1);
    v45[2] = *((void *)v46 + 2);
    v45[3] = *((void *)v46 + 3);
    v45[4] = *((void *)v46 + 4);
    v45[5] = *((void *)v46 + 5);
    uint64_t v70 = *(int *)(v47 + 40);
    uint64_t v71 = (char *)v45 + v70;
    uint64_t v72 = &v46[v70];
    uint64_t v73 = sub_21CB876F0();
    uint64_t v74 = *(void *)(v73 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v74 + 48))(v72, 1, v73))
    {
      uint64_t v75 = sub_21CA57E34(&qword_267C94A48);
      memcpy(v71, v72, *(void *)(*(void *)(v75 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v74 + 16))(v71, v72, v73);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v74 + 56))(v71, 0, 1, v73);
    }
    (*(void (**)(void *, void, uint64_t, uint64_t))(v48 + 56))(v45, 0, 1, v47);
  }
  uint64_t v79 = v156[13];
  uint64_t v80 = (void *)(v37 + v79);
  uint64_t v81 = &v158[v79];
  *uint64_t v80 = *(void *)v81;
  v80[1] = *((void *)v81 + 1);
  uint64_t v82 = v156[14];
  uint64_t v83 = (void *)(v37 + v82);
  uint64_t v84 = &v158[v82];
  void *v83 = *(void *)v84;
  v83[1] = *((void *)v84 + 1);
  *(unsigned char *)(v37 + v156[15]) = v158[v156[15]];
  *(void *)(v37 + v156[16]) = *(void *)&v158[v156[16]];
  *(void *)(v37 + v156[17]) = *(void *)&v158[v156[17]];
  *(void *)(v37 + v156[18]) = *(void *)&v158[v156[18]];
  uint64_t v85 = v156[19];
  uint64_t v86 = (void *)(v37 + v85);
  uint64_t v87 = &v158[v85];
  *uint64_t v86 = *(void *)v87;
  v86[1] = *((void *)v87 + 1);
  uint64_t v88 = v156[20];
  uint64_t v89 = v37 + v88;
  uint64_t v90 = &v158[v88];
  *(void *)uint64_t v89 = *(void *)v90;
  *(void *)(v89 + 8) = *((void *)v90 + 1);
  *(unsigned char *)(v89 + 16) = v90[16];
  *(unsigned char *)(v89 + 17) = v90[17];
  *(unsigned char *)(v37 + v156[21]) = v158[v156[21]];
  uint64_t v91 = v156[22];
  uint64_t v92 = (void *)(v37 + v91);
  uint64_t v93 = &v158[v91];
  void *v92 = *(void *)v93;
  v92[1] = *((void *)v93 + 1);
  uint64_t v94 = v156[23];
  uint64_t v153 = v37;
  uint64_t v95 = (void *)(v37 + v94);
  uint64_t v96 = &v158[v94];
  uint64_t v97 = *(void *)&v158[v94 + 168];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v97)
  {
    *uint64_t v95 = *(void *)v96;
    v95[1] = *((void *)v96 + 1);
    v95[2] = *((void *)v96 + 2);
    v95[3] = *((void *)v96 + 3);
    v95[4] = *((void *)v96 + 4);
    v95[5] = *((void *)v96 + 5);
    v95[6] = *((void *)v96 + 6);
    v95[7] = *((void *)v96 + 7);
    v95[8] = *((void *)v96 + 8);
    v95[9] = *((void *)v96 + 9);
    v95[10] = *((void *)v96 + 10);
    v95[11] = *((void *)v96 + 11);
    v95[12] = *((void *)v96 + 12);
    v95[13] = *((void *)v96 + 13);
    v95[14] = *((void *)v96 + 14);
    v95[15] = *((void *)v96 + 15);
    v95[16] = *((void *)v96 + 16);
    v95[17] = *((void *)v96 + 17);
    v95[18] = *((void *)v96 + 18);
    v95[19] = *((void *)v96 + 19);
    v95[20] = *((void *)v96 + 20);
    v95[21] = *((void *)v96 + 21);
    v95[22] = *((void *)v96 + 22);
    v95[23] = *((void *)v96 + 23);
    v95[24] = *((void *)v96 + 24);
    v95[25] = *((void *)v96 + 25);
    v95[26] = *((void *)v96 + 26);
    v95[27] = *((void *)v96 + 27);
    v95[28] = *((void *)v96 + 28);
    v95[29] = *((void *)v96 + 29);
    v95[30] = *((void *)v96 + 30);
    v95[31] = *((void *)v96 + 31);
    v95[32] = *((void *)v96 + 32);
    v95[33] = *((void *)v96 + 33);
    v95[34] = *((void *)v96 + 34);
    v95[35] = *((void *)v96 + 35);
    v95[36] = *((void *)v96 + 36);
    v95[37] = *((void *)v96 + 37);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    memcpy(v95, v96, 0x130uLL);
  }
  *(unsigned char *)(v153 + v156[24]) = v158[v156[24]];
  *(unsigned char *)(v153 + v156[25]) = v158[v156[25]];
  uint64_t v98 = v156[26];
  uint64_t v99 = (void *)(v153 + v98);
  uint64_t v100 = &v158[v98];
  if (v155((uint64_t)&v158[v98], 1, v149))
  {
    uint64_t v101 = sub_21CA57E34((uint64_t *)&unk_267C951B0);
    memcpy(v99, v100, *(void *)(*(void *)(v101 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v150 + 16))(v99, v100, v149);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v150 + 56))(v99, 0, 1, v149);
  }
  uint64_t v102 = v156[27];
  uint64_t v103 = (void *)(v153 + v102);
  uint64_t v104 = &v158[v102];
  if (v155((uint64_t)&v158[v102], 1, v149))
  {
    uint64_t v105 = sub_21CA57E34((uint64_t *)&unk_267C951B0);
    memcpy(v103, v104, *(void *)(*(void *)(v105 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v150 + 16))(v103, v104, v149);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v150 + 56))(v103, 0, 1, v149);
  }
  (*(void (**)(uint64_t, void, uint64_t, int *))(v154 + 56))(v153, 0, 1, v156);
  return a1;
}

void *sub_21CAFC28C(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[6];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_21CB87480();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    uint64_t v12 = sub_21CA57E34(&qword_267C95190);
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v13 = a3[8];
  *(_OWORD *)((char *)a1 + a3[7]) = *(_OWORD *)((char *)a2 + a3[7]);
  *(_OWORD *)((char *)a1 + v13) = *(_OWORD *)((char *)a2 + v13);
  uint64_t v14 = a3[10];
  *(_OWORD *)((char *)a1 + a3[9]) = *(_OWORD *)((char *)a2 + a3[9]);
  uint64_t v15 = (char *)a1 + v14;
  uint64_t v16 = (char *)a2 + v14;
  uint64_t v17 = sub_21CB87590();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48);
  if (v19(v16, 1, v17))
  {
    uint64_t v20 = sub_21CA57E34((uint64_t *)&unk_267C951B0);
    memcpy(v15, v16, *(void *)(*(void *)(v20 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v15, v16, v17);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
  }
  uint64_t v21 = a3[12];
  *(_OWORD *)((char *)a1 + a3[11]) = *(_OWORD *)((char *)a2 + a3[11]);
  uint64_t v22 = (_OWORD *)((char *)a1 + v21);
  uint64_t v23 = (_OWORD *)((char *)a2 + v21);
  uint64_t v24 = (int *)type metadata accessor for FMFLocationAlert();
  uint64_t v25 = *((void *)v24 - 1);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v25 + 48))(v23, 1, v24))
  {
    uint64_t v26 = sub_21CA57E34((uint64_t *)&unk_267C96EC0);
    memcpy(v22, v23, *(void *)(*(void *)(v26 - 8) + 64));
  }
  else
  {
    uint64_t v56 = v18;
    uint64_t v57 = v25;
    uint64_t v58 = v19;
    long long v27 = v23[1];
    *uint64_t v22 = *v23;
    v22[1] = v27;
    *((void *)v22 + 4) = *((void *)v23 + 4);
    *((unsigned char *)v22 + 40) = *((unsigned char *)v23 + 40);
    *((unsigned char *)v22 + 41) = *((unsigned char *)v23 + 41);
    *((_WORD *)v22 + 21) = *((_WORD *)v23 + 21);
    uint64_t v28 = v24[12];
    uint64_t v29 = (_OWORD *)((char *)v22 + v28);
    unsigned int v30 = (_OWORD *)((char *)v23 + v28);
    uint64_t v31 = type metadata accessor for FMFSchedule();
    uint64_t v32 = *(void *)(v31 - 8);
    if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v32 + 48))(v30, 1, v31))
    {
      uint64_t v33 = sub_21CA57E34((uint64_t *)&unk_267C96ED0);
      memcpy(v29, v30, *(void *)(*(void *)(v33 - 8) + 64));
      uint64_t v34 = v58;
      uint64_t v35 = v56;
    }
    else
    {
      long long v36 = v30[1];
      *uint64_t v29 = *v30;
      v29[1] = v36;
      v29[2] = v30[2];
      uint64_t v37 = *(int *)(v31 + 40);
      uint64_t v54 = v29;
      __dst = (char *)v29 + v37;
      uint64_t v38 = (char *)v30 + v37;
      uint64_t v39 = sub_21CB876F0();
      uint64_t v53 = *(void *)(v39 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v53 + 48))(v38, 1, v39))
      {
        uint64_t v40 = sub_21CA57E34(&qword_267C94A48);
        memcpy(__dst, v38, *(void *)(*(void *)(v40 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v53 + 32))(__dst, v38, v39);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v53 + 56))(__dst, 0, 1, v39);
      }
      uint64_t v34 = v58;
      uint64_t v35 = v56;
      (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v32 + 56))(v54, 0, 1, v31);
    }
    *(_OWORD *)((char *)v22 + v24[13]) = *(_OWORD *)((char *)v23 + v24[13]);
    *(_OWORD *)((char *)v22 + v24[14]) = *(_OWORD *)((char *)v23 + v24[14]);
    *((unsigned char *)v22 + v24[15]) = *((unsigned char *)v23 + v24[15]);
    *(void *)((char *)v22 + v24[16]) = *(void *)((char *)v23 + v24[16]);
    *(void *)((char *)v22 + v24[17]) = *(void *)((char *)v23 + v24[17]);
    *(void *)((char *)v22 + v24[18]) = *(void *)((char *)v23 + v24[18]);
    *(_OWORD *)((char *)v22 + v24[19]) = *(_OWORD *)((char *)v23 + v24[19]);
    uint64_t v41 = v24[20];
    int v42 = (char *)v22 + v41;
    uint64_t v43 = (char *)v23 + v41;
    *(_OWORD *)int v42 = *(_OWORD *)v43;
    *((_WORD *)v42 + 8) = *((_WORD *)v43 + 8);
    *((unsigned char *)v22 + v24[21]) = *((unsigned char *)v23 + v24[21]);
    *(_OWORD *)((char *)v22 + v24[22]) = *(_OWORD *)((char *)v23 + v24[22]);
    memcpy((char *)v22 + v24[23], (char *)v23 + v24[23], 0x130uLL);
    *((unsigned char *)v22 + v24[24]) = *((unsigned char *)v23 + v24[24]);
    *((unsigned char *)v22 + v24[25]) = *((unsigned char *)v23 + v24[25]);
    uint64_t v44 = v24[26];
    uint64_t v45 = (char *)v22 + v44;
    uint64_t v46 = (char *)v23 + v44;
    if (v34((char *)v23 + v44, 1, v17))
    {
      uint64_t v47 = sub_21CA57E34((uint64_t *)&unk_267C951B0);
      memcpy(v45, v46, *(void *)(*(void *)(v47 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v35 + 32))(v45, v46, v17);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v35 + 56))(v45, 0, 1, v17);
    }
    uint64_t v48 = v24[27];
    uint64_t v49 = (char *)v22 + v48;
    uint64_t v50 = (char *)v23 + v48;
    if (v34(v50, 1, v17))
    {
      uint64_t v51 = sub_21CA57E34((uint64_t *)&unk_267C951B0);
      memcpy(v49, v50, *(void *)(*(void *)(v51 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v35 + 32))(v49, v50, v17);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v35 + 56))(v49, 0, 1, v17);
    }
    (*(void (**)(_OWORD *, void, uint64_t, int *))(v57 + 56))(v22, 0, 1, v24);
  }
  return a1;
}

void *sub_21CAFC948(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[6];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_21CB87480();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
LABEL_6:
    uint64_t v15 = sub_21CA57E34(&qword_267C95190);
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v8, v9, v10);
LABEL_7:
  uint64_t v16 = a3[7];
  uint64_t v17 = (void *)((char *)a1 + v16);
  uint64_t v18 = (void *)((char *)a2 + v16);
  uint64_t v20 = *v18;
  uint64_t v19 = v18[1];
  void *v17 = v20;
  v17[1] = v19;
  swift_bridgeObjectRelease();
  uint64_t v21 = a3[8];
  uint64_t v22 = (void *)((char *)a1 + v21);
  uint64_t v23 = (void *)((char *)a2 + v21);
  uint64_t v25 = *v23;
  uint64_t v24 = v23[1];
  *uint64_t v22 = v25;
  v22[1] = v24;
  swift_bridgeObjectRelease();
  uint64_t v26 = a3[9];
  long long v27 = (void *)((char *)a1 + v26);
  uint64_t v28 = (void *)((char *)a2 + v26);
  uint64_t v30 = *v28;
  uint64_t v29 = v28[1];
  void *v27 = v30;
  v27[1] = v29;
  swift_bridgeObjectRelease();
  uint64_t v31 = a3[10];
  uint64_t v32 = (char *)a1 + v31;
  uint64_t v33 = (char *)a2 + v31;
  uint64_t v34 = sub_21CB87590();
  uint64_t v35 = *(void *)(v34 - 8);
  long long v36 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v35 + 48);
  int v37 = v36(v32, 1, v34);
  v174 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v36;
  int v38 = v36(v33, 1, v34);
  if (v37)
  {
    if (!v38)
    {
      (*(void (**)(char *, char *, uint64_t))(v35 + 32))(v32, v33, v34);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v35 + 56))(v32, 0, 1, v34);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v38)
  {
    (*(void (**)(char *, uint64_t))(v35 + 8))(v32, v34);
LABEL_12:
    uint64_t v39 = sub_21CA57E34((uint64_t *)&unk_267C951B0);
    memcpy(v32, v33, *(void *)(*(void *)(v39 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v35 + 40))(v32, v33, v34);
LABEL_13:
  uint64_t v40 = a3[11];
  uint64_t v41 = (void *)((char *)a1 + v40);
  int v42 = (void *)((char *)a2 + v40);
  uint64_t v44 = *v42;
  uint64_t v43 = v42[1];
  void *v41 = v44;
  v41[1] = v43;
  swift_bridgeObjectRelease();
  uint64_t v45 = a3[12];
  uint64_t v46 = (uint64_t)a1 + v45;
  uint64_t v47 = (char *)a2 + v45;
  uint64_t v48 = (int *)type metadata accessor for FMFLocationAlert();
  uint64_t v49 = *((void *)v48 - 1);
  uint64_t v50 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v49 + 48);
  int v51 = v50(v46, 1, v48);
  int v52 = v50((uint64_t)v47, 1, v48);
  if (!v51)
  {
    if (v52)
    {
      sub_21CA8C5E8(v46, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
      goto LABEL_19;
    }
    uint64_t v170 = v34;
    uint64_t v173 = v35;
    uint64_t v64 = *((void *)v47 + 1);
    *(void *)uint64_t v46 = *(void *)v47;
    *(void *)(v46 + 8) = v64;
    swift_bridgeObjectRelease();
    *(_OWORD *)(v46 + 16) = *((_OWORD *)v47 + 1);
    *(void *)(v46 + 32) = *((void *)v47 + 4);
    *(unsigned char *)(v46 + 40) = v47[40];
    *(unsigned char *)(v46 + 41) = v47[41];
    *(unsigned char *)(v46 + 42) = v47[42];
    *(unsigned char *)(v46 + 43) = v47[43];
    uint64_t v65 = v48[12];
    uint64_t v66 = (char *)(v46 + v65);
    uint64_t v67 = &v47[v65];
    uint64_t v68 = type metadata accessor for FMFSchedule();
    __src = *(void **)(v68 - 8);
    uint64_t v69 = (uint64_t (*)(char *, uint64_t, uint64_t))__src[6];
    int v70 = v69(v66, 1, v68);
    int v71 = v69(v67, 1, v68);
    if (v70)
    {
      if (!v71)
      {
        long long v72 = *((_OWORD *)v67 + 1);
        *(_OWORD *)uint64_t v66 = *(_OWORD *)v67;
        *((_OWORD *)v66 + 1) = v72;
        *((_OWORD *)v66 + 2) = *((_OWORD *)v67 + 2);
        uint64_t v73 = *(int *)(v68 + 40);
        __dst = &v66[v73];
        uint64_t v74 = &v67[v73];
        uint64_t v75 = sub_21CB876F0();
        uint64_t v76 = *(void *)(v75 - 8);
        uint64_t v77 = v170;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v76 + 48))(v74, 1, v75))
        {
          uint64_t v78 = sub_21CA57E34(&qword_267C94A48);
          memcpy(__dst, v74, *(void *)(*(void *)(v78 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v76 + 32))(__dst, v74, v75);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v76 + 56))(__dst, 0, 1, v75);
        }
        ((void (*)(char *, void, uint64_t, uint64_t))__src[7])(v66, 0, 1, v68);
LABEL_52:
        uint64_t v107 = v48[13];
        uint64_t v108 = (void *)(v46 + v107);
        uint64_t v109 = &v47[v107];
        uint64_t v111 = *(void *)v109;
        uint64_t v110 = *((void *)v109 + 1);
        *uint64_t v108 = v111;
        v108[1] = v110;
        swift_bridgeObjectRelease();
        uint64_t v112 = v48[14];
        int v113 = (void *)(v46 + v112);
        int v114 = &v47[v112];
        uint64_t v116 = *(void *)v114;
        uint64_t v115 = *((void *)v114 + 1);
        *int v113 = v116;
        v113[1] = v115;
        swift_bridgeObjectRelease();
        *(unsigned char *)(v46 + v48[15]) = v47[v48[15]];
        *(void *)(v46 + v48[16]) = *(void *)&v47[v48[16]];
        swift_bridgeObjectRelease();
        *(void *)(v46 + v48[17]) = *(void *)&v47[v48[17]];
        swift_bridgeObjectRelease();
        *(void *)(v46 + v48[18]) = *(void *)&v47[v48[18]];
        swift_bridgeObjectRelease();
        uint64_t v117 = v48[19];
        uint64_t v118 = (void *)(v46 + v117);
        uint64_t v119 = &v47[v117];
        uint64_t v121 = *(void *)v119;
        uint64_t v120 = *((void *)v119 + 1);
        *uint64_t v118 = v121;
        v118[1] = v120;
        swift_bridgeObjectRelease();
        uint64_t v122 = v48[20];
        uint64_t v123 = v46 + v122;
        unint64_t v124 = &v47[v122];
        uint64_t v125 = *(void *)&v47[v122 + 8];
        *(void *)uint64_t v123 = *(void *)&v47[v122];
        *(void *)(v123 + 8) = v125;
        swift_bridgeObjectRelease();
        *(_WORD *)(v123 + 16) = *((_WORD *)v124 + 8);
        *(unsigned char *)(v46 + v48[21]) = v47[v48[21]];
        uint64_t v126 = v48[22];
        uint64_t v127 = (void *)(v46 + v126);
        uint64_t v128 = &v47[v126];
        uint64_t v130 = *(void *)v128;
        uint64_t v129 = *((void *)v128 + 1);
        *uint64_t v127 = v130;
        v127[1] = v129;
        swift_bridgeObjectRelease();
        uint64_t v131 = v48[23];
        uint64_t v132 = (void *)(v46 + v131);
        uint64_t v133 = &v47[v131];
        if (*(void *)(v46 + v131 + 168))
        {
          if (*((void *)v133 + 21))
          {
            *uint64_t v132 = *(void *)v133;
            swift_bridgeObjectRelease();
            uint64_t v134 = *((void *)v133 + 2);
            v132[1] = *((void *)v133 + 1);
            v132[2] = v134;
            swift_bridgeObjectRelease();
            uint64_t v135 = *((void *)v133 + 4);
            v132[3] = *((void *)v133 + 3);
            v132[4] = v135;
            swift_bridgeObjectRelease();
            uint64_t v136 = *((void *)v133 + 6);
            v132[5] = *((void *)v133 + 5);
            v132[6] = v136;
            swift_bridgeObjectRelease();
            uint64_t v137 = *((void *)v133 + 8);
            v132[7] = *((void *)v133 + 7);
            v132[8] = v137;
            swift_bridgeObjectRelease();
            uint64_t v138 = *((void *)v133 + 10);
            v132[9] = *((void *)v133 + 9);
            v132[10] = v138;
            swift_bridgeObjectRelease();
            uint64_t v139 = *((void *)v133 + 12);
            v132[11] = *((void *)v133 + 11);
            v132[12] = v139;
            swift_bridgeObjectRelease();
            uint64_t v140 = *((void *)v133 + 14);
            v132[13] = *((void *)v133 + 13);
            v132[14] = v140;
            swift_bridgeObjectRelease();
            uint64_t v141 = *((void *)v133 + 16);
            v132[15] = *((void *)v133 + 15);
            v132[16] = v141;
            swift_bridgeObjectRelease();
            uint64_t v142 = *((void *)v133 + 18);
            v132[17] = *((void *)v133 + 17);
            v132[18] = v142;
            swift_bridgeObjectRelease();
            uint64_t v143 = *((void *)v133 + 20);
            v132[19] = *((void *)v133 + 19);
            v132[20] = v143;
            swift_bridgeObjectRelease();
            v132[21] = *((void *)v133 + 21);
            swift_bridgeObjectRelease();
            uint64_t v144 = *((void *)v133 + 23);
            v132[22] = *((void *)v133 + 22);
            v132[23] = v144;
            swift_bridgeObjectRelease();
            uint64_t v145 = *((void *)v133 + 25);
            v132[24] = *((void *)v133 + 24);
            v132[25] = v145;
            swift_bridgeObjectRelease();
            uint64_t v146 = *((void *)v133 + 27);
            v132[26] = *((void *)v133 + 26);
            v132[27] = v146;
            swift_bridgeObjectRelease();
            uint64_t v147 = *((void *)v133 + 29);
            v132[28] = *((void *)v133 + 28);
            v132[29] = v147;
            swift_bridgeObjectRelease();
            uint64_t v148 = *((void *)v133 + 31);
            v132[30] = *((void *)v133 + 30);
            v132[31] = v148;
            swift_bridgeObjectRelease();
            uint64_t v149 = *((void *)v133 + 33);
            v132[32] = *((void *)v133 + 32);
            v132[33] = v149;
            swift_bridgeObjectRelease();
            uint64_t v150 = *((void *)v133 + 35);
            v132[34] = *((void *)v133 + 34);
            v132[35] = v150;
            swift_bridgeObjectRelease();
            uint64_t v151 = *((void *)v133 + 37);
            v132[36] = *((void *)v133 + 36);
            v132[37] = v151;
            swift_bridgeObjectRelease();
LABEL_57:
            *(unsigned char *)(v46 + v48[24]) = v47[v48[24]];
            *(unsigned char *)(v46 + v48[25]) = v47[v48[25]];
            uint64_t v152 = v48[26];
            uint64_t v153 = (void *)(v46 + v152);
            uint64_t v154 = &v47[v152];
            int v155 = v174(v46 + v152, 1, v77);
            int v156 = v174((uint64_t)v154, 1, v77);
            if (v155)
            {
              if (v156)
              {
                uint64_t v157 = sub_21CA57E34((uint64_t *)&unk_267C951B0);
                memcpy(v153, v154, *(void *)(*(void *)(v157 - 8) + 64));
                uint64_t v158 = v173;
              }
              else
              {
                uint64_t v158 = v173;
                (*(void (**)(void *, char *, uint64_t))(v173 + 32))(v153, v154, v77);
                (*(void (**)(void *, void, uint64_t, uint64_t))(v173 + 56))(v153, 0, 1, v77);
              }
            }
            else
            {
              uint64_t v158 = v173;
              if (v156)
              {
                (*(void (**)(void *, uint64_t))(v173 + 8))(v153, v77);
                uint64_t v159 = sub_21CA57E34((uint64_t *)&unk_267C951B0);
                memcpy(v153, v154, *(void *)(*(void *)(v159 - 8) + 64));
              }
              else
              {
                (*(void (**)(void *, char *, uint64_t))(v173 + 40))(v153, v154, v77);
              }
            }
            uint64_t v160 = v48[27];
            uint64_t v161 = (void *)(v46 + v160);
            char v162 = &v47[v160];
            int v163 = v174((uint64_t)v161, 1, v77);
            int v164 = v174((uint64_t)v162, 1, v77);
            if (v163)
            {
              if (!v164)
              {
                (*(void (**)(void *, char *, uint64_t))(v158 + 32))(v161, v162, v77);
                (*(void (**)(void *, void, uint64_t, uint64_t))(v158 + 56))(v161, 0, 1, v77);
                return a1;
              }
            }
            else
            {
              if (!v164)
              {
                (*(void (**)(void *, char *, uint64_t))(v158 + 40))(v161, v162, v77);
                return a1;
              }
              (*(void (**)(void *, uint64_t))(v158 + 8))(v161, v77);
            }
            size_t v61 = *(void *)(*(void *)(sub_21CA57E34((uint64_t *)&unk_267C951B0) - 8) + 64);
            int v62 = v161;
            uint64_t v63 = v162;
            goto LABEL_20;
          }
          sub_21CA757AC((uint64_t)v132);
        }
        memcpy(v132, v133, 0x130uLL);
        goto LABEL_57;
      }
    }
    else
    {
      if (!v71)
      {
        long long v97 = *((_OWORD *)v67 + 1);
        *(_OWORD *)uint64_t v66 = *(_OWORD *)v67;
        *((_OWORD *)v66 + 1) = v97;
        *((_OWORD *)v66 + 2) = *((_OWORD *)v67 + 2);
        uint64_t v98 = *(int *)(v68 + 40);
        uint64_t v99 = &v66[v98];
        uint64_t v100 = &v67[v98];
        uint64_t v101 = sub_21CB876F0();
        uint64_t v102 = *(void *)(v101 - 8);
        uint64_t v103 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v102 + 48);
        __dsta = v99;
        LODWORD(v99) = v103(v99, 1, v101);
        int v104 = v103(v100, 1, v101);
        if (v99)
        {
          uint64_t v77 = v170;
          if (!v104)
          {
            (*(void (**)(void *, char *, uint64_t))(v102 + 32))(__dsta, v100, v101);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v102 + 56))(__dsta, 0, 1, v101);
            goto LABEL_52;
          }
          size_t v105 = *(void *)(*(void *)(sub_21CA57E34(&qword_267C94A48) - 8) + 64);
          uint64_t v106 = __dsta;
        }
        else
        {
          uint64_t v77 = v170;
          if (!v104)
          {
            (*(void (**)(void *, char *, uint64_t))(v102 + 40))(__dsta, v100, v101);
            goto LABEL_52;
          }
          (*(void (**)(void *, uint64_t))(v102 + 8))(__dsta, v101);
          size_t v105 = *(void *)(*(void *)(sub_21CA57E34(&qword_267C94A48) - 8) + 64);
          uint64_t v106 = __dsta;
        }
        memcpy(v106, v100, v105);
        goto LABEL_52;
      }
      sub_21CA8C5E8((uint64_t)v66, (uint64_t (*)(void))type metadata accessor for FMFSchedule);
    }
    uint64_t v84 = sub_21CA57E34((uint64_t *)&unk_267C96ED0);
    memcpy(v66, v67, *(void *)(*(void *)(v84 - 8) + 64));
    uint64_t v77 = v170;
    goto LABEL_52;
  }
  if (v52)
  {
LABEL_19:
    size_t v61 = *(void *)(*(void *)(sub_21CA57E34((uint64_t *)&unk_267C96EC0) - 8) + 64);
    int v62 = (void *)v46;
    uint64_t v63 = v47;
LABEL_20:
    memcpy(v62, v63, v61);
    return a1;
  }
  uint64_t v172 = v35;
  long long v53 = *((_OWORD *)v47 + 1);
  *(_OWORD *)uint64_t v46 = *(_OWORD *)v47;
  *(_OWORD *)(v46 + 16) = v53;
  *(void *)(v46 + 32) = *((void *)v47 + 4);
  *(unsigned char *)(v46 + 40) = v47[40];
  *(unsigned char *)(v46 + 41) = v47[41];
  *(_WORD *)(v46 + 42) = *((_WORD *)v47 + 21);
  uint64_t v54 = v48[12];
  uint64_t v55 = (_OWORD *)(v46 + v54);
  uint64_t v56 = &v47[v54];
  uint64_t v57 = type metadata accessor for FMFSchedule();
  uint64_t v58 = *(void *)(v57 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v58 + 48))(v56, 1, v57))
  {
    uint64_t v59 = sub_21CA57E34((uint64_t *)&unk_267C96ED0);
    memcpy(v55, v56, *(void *)(*(void *)(v59 - 8) + 64));
    uint64_t v60 = v172;
  }
  else
  {
    long long v79 = *((_OWORD *)v56 + 1);
    *uint64_t v55 = *(_OWORD *)v56;
    v55[1] = v79;
    v55[2] = *((_OWORD *)v56 + 2);
    uint64_t v80 = *(int *)(v57 + 40);
    __srca = (char *)v55 + v80;
    uint64_t v171 = v34;
    uint64_t v81 = &v56[v80];
    uint64_t v82 = sub_21CB876F0();
    uint64_t v165 = *(void *)(v82 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v165 + 48))(v81, 1, v82))
    {
      uint64_t v83 = sub_21CA57E34(&qword_267C94A48);
      memcpy(__srca, v81, *(void *)(*(void *)(v83 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v165 + 32))(__srca, v81, v82);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v165 + 56))(__srca, 0, 1, v82);
    }
    uint64_t v34 = v171;
    uint64_t v60 = v172;
    (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v58 + 56))(v55, 0, 1, v57);
  }
  *(_OWORD *)(v46 + v48[13]) = *(_OWORD *)&v47[v48[13]];
  *(_OWORD *)(v46 + v48[14]) = *(_OWORD *)&v47[v48[14]];
  *(unsigned char *)(v46 + v48[15]) = v47[v48[15]];
  *(void *)(v46 + v48[16]) = *(void *)&v47[v48[16]];
  *(void *)(v46 + v48[17]) = *(void *)&v47[v48[17]];
  *(void *)(v46 + v48[18]) = *(void *)&v47[v48[18]];
  *(_OWORD *)(v46 + v48[19]) = *(_OWORD *)&v47[v48[19]];
  uint64_t v85 = v48[20];
  uint64_t v86 = v46 + v85;
  uint64_t v87 = &v47[v85];
  *(_OWORD *)uint64_t v86 = *(_OWORD *)v87;
  *(_WORD *)(v86 + 16) = *((_WORD *)v87 + 8);
  *(unsigned char *)(v46 + v48[21]) = v47[v48[21]];
  *(_OWORD *)(v46 + v48[22]) = *(_OWORD *)&v47[v48[22]];
  memcpy((void *)(v46 + v48[23]), &v47[v48[23]], 0x130uLL);
  *(unsigned char *)(v46 + v48[24]) = v47[v48[24]];
  *(unsigned char *)(v46 + v48[25]) = v47[v48[25]];
  uint64_t v88 = v48[26];
  uint64_t v89 = (void *)(v46 + v88);
  uint64_t v90 = &v47[v88];
  if (v174((uint64_t)&v47[v88], 1, v34))
  {
    uint64_t v91 = sub_21CA57E34((uint64_t *)&unk_267C951B0);
    memcpy(v89, v90, *(void *)(*(void *)(v91 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v60 + 32))(v89, v90, v34);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v60 + 56))(v89, 0, 1, v34);
  }
  uint64_t v92 = v48[27];
  uint64_t v93 = (void *)(v46 + v92);
  uint64_t v94 = &v47[v92];
  if (v174((uint64_t)v94, 1, v34))
  {
    uint64_t v95 = sub_21CA57E34((uint64_t *)&unk_267C951B0);
    memcpy(v93, v94, *(void *)(*(void *)(v95 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v60 + 32))(v93, v94, v34);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v60 + 56))(v93, 0, 1, v34);
  }
  (*(void (**)(uint64_t, void, uint64_t, int *))(v49 + 56))(v46, 0, 1, v48);
  return a1;
}

uint64_t sub_21CAFD9B0(uint64_t a1, uint64_t a2, int *a3)
{
  if (a2 == 2147483646)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  uint64_t v9 = sub_21CA57E34(&qword_267C95190);
  if (*(_DWORD *)(*(void *)(v9 - 8) + 84) == a2)
  {
    uint64_t v10 = v9;
    uint64_t v11 = *(void *)(v9 - 8);
    uint64_t v12 = a3[6];
LABEL_11:
    int v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 48);
    return v14(a1 + v12, a2, v10);
  }
  uint64_t v13 = sub_21CA57E34((uint64_t *)&unk_267C951B0);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a2)
  {
    uint64_t v10 = v13;
    uint64_t v11 = *(void *)(v13 - 8);
    uint64_t v12 = a3[10];
    goto LABEL_11;
  }
  uint64_t v15 = sub_21CA57E34((uint64_t *)&unk_267C96EC0);
  uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48);
  uint64_t v17 = v15;
  uint64_t v18 = a1 + a3[12];

  return v16(v18, a2, v17);
}

uint64_t sub_21CAFDB40(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5 = result;
  if (a3 == 2147483646)
  {
    *(void *)(result + 8) = a2;
    return result;
  }
  uint64_t v8 = sub_21CA57E34(&qword_267C95190);
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a3)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a4[6];
LABEL_7:
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
    return v13(v5 + v11, a2, a2, v9);
  }
  uint64_t v12 = sub_21CA57E34((uint64_t *)&unk_267C951B0);
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a3)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a4[10];
    goto LABEL_7;
  }
  uint64_t v14 = sub_21CA57E34((uint64_t *)&unk_267C96EC0);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
  uint64_t v16 = v14;
  uint64_t v17 = v5 + a4[12];

  return v15(v17, a2, a2, v16);
}

unint64_t sub_21CAFDCC4(char a1)
{
  unint64_t result = 0x6F43737574617473;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x614D737574617473;
      break;
    case 2:
      unint64_t result = 7107189;
      break;
    case 3:
      unint64_t result = 0x6D614E7473726966;
      break;
    case 4:
      unint64_t result = 0x656D614E7473616CLL;
      break;
    case 5:
      unint64_t result = 0x6C69616D65;
      break;
    case 6:
      unint64_t result = 0xD000000000000010;
      break;
    case 7:
      unint64_t result = 0x55746E6572727563;
      break;
    case 8:
      unint64_t result = 0x65636E6566;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_21CAFDDF4(char a1)
{
  unint64_t result = 0x6F43737574617473;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x614D737574617473;
      break;
    case 2:
      unint64_t result = 7107189;
      break;
    case 3:
      unint64_t result = 0x6D614E7473726966;
      break;
    case 4:
      unint64_t result = 0x656D614E7473616CLL;
      break;
    case 5:
      unint64_t result = 0x6C69616D65;
      break;
    case 6:
      unint64_t result = 0xD000000000000010;
      break;
    case 7:
      unint64_t result = 0x55746E6572727563;
      break;
    case 8:
      unint64_t result = 0x65636E6566;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_21CAFDF24(unsigned __int8 *a1, char *a2)
{
  return sub_21CA7EA30(*a1, *a2);
}

uint64_t sub_21CAFDF30()
{
  return sub_21CB89090();
}

uint64_t sub_21CAFDF78()
{
  return sub_21CAD46F8();
}

uint64_t sub_21CAFDF80()
{
  return sub_21CB89090();
}

uint64_t sub_21CAFDFC4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_21CAFF3EC();
  *a1 = result;
  return result;
}

unint64_t sub_21CAFDFF4@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_21CAFDCC4(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_21CAFE020()
{
  return sub_21CAFDDF4(*v0);
}

uint64_t sub_21CAFE028@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_21CAFF3EC();
  *a1 = result;
  return result;
}

void sub_21CAFE050(unsigned char *a1@<X8>)
{
  *a1 = 9;
}

uint64_t sub_21CAFE05C(uint64_t a1)
{
  unint64_t v2 = sub_21CAFEE24();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_21CAFE098(uint64_t a1)
{
  unint64_t v2 = sub_21CAFEE24();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_21CAFE0D4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v76 = a2;
  uint64_t v3 = sub_21CA57E34((uint64_t *)&unk_267C951B0);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v74 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_21CA57E34((uint64_t *)&unk_267C96EC0);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v74 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_21CA57E34(&qword_267C96B90);
  uint64_t v77 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v74 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for FMFCommandResponseFragment();
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (uint64_t *)((char *)&v74 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v15 = a1[3];
  uint64_t v78 = a1;
  sub_21CA2B2CC(a1, v15);
  sub_21CAFEE24();
  uint64_t v16 = v79;
  sub_21CB890B0();
  if (v16)
  {
    if (qword_267C94990 != -1) {
      swift_once();
    }
    uint64_t v19 = sub_21CB880A0();
    sub_21CA4CC18(v19, (uint64_t)qword_267CA5368);
    id v20 = v16;
    id v21 = v16;
    uint64_t v22 = sub_21CB88070();
    os_log_type_t v23 = sub_21CB88860();
    if (os_log_type_enabled(v22, v23))
    {
      uint64_t v24 = (uint8_t *)swift_slowAlloc();
      uint64_t v25 = swift_slowAlloc();
      v80[0] = v25;
      *(_DWORD *)uint64_t v24 = 136315138;
      uint64_t v81 = (uint64_t)v16;
      id v26 = v16;
      sub_21CA57E34((uint64_t *)&unk_267C96F50);
      uint64_t v27 = sub_21CB88310();
      uint64_t v81 = sub_21CA4E450(v27, v28, v80);
      sub_21CB889C0();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_21CA00000, v22, v23, "Error decoding command response. Error - %s", v24, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x21D4B6B70](v25, -1, -1);
      MEMORY[0x21D4B6B70](v24, -1, -1);
    }
    else
    {
    }
    swift_willThrow();
    return sub_21CA2B0D0((uint64_t)v78);
  }
  uint64_t v75 = v8;
  long long v79 = v5;
  LOBYTE(v80[0]) = 0;
  uint64_t result = sub_21CB88DE0();
  uint64_t v29 = v18;
  uint64_t v30 = HIBYTE(v18) & 0xF;
  uint64_t v31 = result & 0xFFFFFFFFFFFFLL;
  if ((v29 & 0x2000000000000000) != 0) {
    uint64_t v32 = v30;
  }
  else {
    uint64_t v32 = result & 0xFFFFFFFFFFFFLL;
  }
  if (!v32)
  {
    swift_bridgeObjectRelease();
    uint64_t v33 = v14;
    uint64_t v34 = (int *)v12;
    uint64_t v35 = v11;
    goto LABEL_54;
  }
  uint64_t v33 = v14;
  uint64_t v34 = (int *)v12;
  if ((v29 & 0x1000000000000000) != 0)
  {
    uint64_t v37 = (uint64_t)sub_21CB79E50(result, v29, 10);
    char v73 = v72;
    swift_bridgeObjectRelease();
    uint64_t v35 = v11;
    if ((v73 & 1) == 0) {
      goto LABEL_55;
    }
    goto LABEL_54;
  }
  uint64_t v35 = v11;
  if ((v29 & 0x2000000000000000) == 0)
  {
    if ((result & 0x1000000000000000) != 0) {
      long long v36 = (unsigned __int8 *)((v29 & 0xFFFFFFFFFFFFFFFLL) + 32);
    }
    else {
      long long v36 = (unsigned __int8 *)sub_21CB88BD0();
    }
    uint64_t v37 = (uint64_t)sub_21CB79E38(v36, v31, 10);
    char v39 = v38 & 1;
LABEL_53:
    swift_bridgeObjectRelease();
    if ((v39 & 1) == 0)
    {
LABEL_55:
      uint64_t *v33 = v37;
      sub_21CA57E34(&qword_267C96BA0);
      LOBYTE(v81) = 1;
      sub_21CAFEE78();
      sub_21CB88E20();
      uint64_t v49 = (uint64_t)v75;
      v33[1] = v80[0];
      LOBYTE(v80[0]) = 3;
      uint64_t v50 = sub_21CB88DE0();
      int v51 = (uint64_t *)((char *)v33 + v34[7]);
      *int v51 = v50;
      v51[1] = v52;
      LOBYTE(v80[0]) = 4;
      uint64_t v53 = sub_21CB88DE0();
      uint64_t v54 = (uint64_t *)((char *)v33 + v34[8]);
      *uint64_t v54 = v53;
      v54[1] = v55;
      LOBYTE(v80[0]) = 5;
      uint64_t v56 = sub_21CB88DE0();
      uint64_t v57 = (uint64_t *)((char *)v33 + v34[9]);
      *uint64_t v57 = v56;
      v57[1] = v58;
      LOBYTE(v80[0]) = 7;
      uint64_t v59 = sub_21CB88DE0();
      uint64_t v60 = (uint64_t *)((char *)v33 + v34[11]);
      *uint64_t v60 = v59;
      v60[1] = v61;
      uint64_t v62 = type metadata accessor for FMFLocationAlert();
      LOBYTE(v80[0]) = 8;
      sub_21CAFEF18();
      sub_21CB88E20();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v62 - 8) + 56))(v49, 0, 1, v62);
      sub_21CA26A4C(v49, (uint64_t)v33 + v34[12], (uint64_t *)&unk_267C96EC0);
      LOBYTE(v80[0]) = 2;
      sub_21CB88DE0();
      sub_21CB87470();
      swift_bridgeObjectRelease();
      uint64_t v63 = v76;
      LOBYTE(v80[0]) = 6;
      uint64_t v64 = sub_21CB88E30();
      uint64_t v65 = v35;
      uint64_t v66 = (uint64_t)v79;
      id v67 = objc_msgSend(self, sel_fm_dateFromEpoch_, v64);
      sub_21CB87560();

      (*(void (**)(char *, uint64_t))(v77 + 8))(v65, v9);
      uint64_t v68 = sub_21CB87590();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v68 - 8) + 56))(v66, 0, 1, v68);
      sub_21CA26A4C(v66, (uint64_t)v33 + v34[10], (uint64_t *)&unk_267C951B0);
      sub_21CAFEF70((uint64_t)v33, v63);
      return sub_21CA2B0D0((uint64_t)v78);
    }
LABEL_54:
    uint64_t v37 = 500;
    goto LABEL_55;
  }
  v80[0] = result;
  v80[1] = v29 & 0xFFFFFFFFFFFFFFLL;
  if (result == 43)
  {
    if (!v30) {
      goto LABEL_67;
    }
    if (v30 == 1 || (BYTE1(result) - 48) > 9u) {
      goto LABEL_40;
    }
    uint64_t v37 = (BYTE1(result) - 48);
    if (v30 != 2)
    {
      if ((BYTE2(result) - 48) > 9u) {
        goto LABEL_40;
      }
      uint64_t v37 = 10 * (BYTE1(result) - 48) + (BYTE2(result) - 48);
      uint64_t v40 = v30 - 3;
      if (v40)
      {
        uint64_t v41 = (unsigned __int8 *)v80 + 3;
        while (1)
        {
          unsigned int v42 = *v41 - 48;
          if (v42 > 9) {
            goto LABEL_40;
          }
          uint64_t v43 = 10 * v37;
          if ((unsigned __int128)(v37 * (__int128)10) >> 64 != (10 * v37) >> 63) {
            goto LABEL_40;
          }
          uint64_t v37 = v43 + v42;
          if (__OFADD__(v43, v42)) {
            goto LABEL_40;
          }
          char v39 = 0;
          ++v41;
          if (!--v40) {
            goto LABEL_53;
          }
        }
      }
    }
LABEL_52:
    char v39 = 0;
    goto LABEL_53;
  }
  if (result != 45)
  {
    if (!v30 || (result - 48) > 9u) {
      goto LABEL_40;
    }
    uint64_t v37 = (result - 48);
    if (v30 != 1)
    {
      if ((BYTE1(result) - 48) > 9u) {
        goto LABEL_40;
      }
      uint64_t v37 = 10 * (result - 48) + (BYTE1(result) - 48);
      uint64_t v44 = v30 - 2;
      if (v44)
      {
        uint64_t v45 = (unsigned __int8 *)v80 + 2;
        while (1)
        {
          unsigned int v46 = *v45 - 48;
          if (v46 > 9) {
            goto LABEL_40;
          }
          uint64_t v47 = 10 * v37;
          if ((unsigned __int128)(v37 * (__int128)10) >> 64 != (10 * v37) >> 63) {
            goto LABEL_40;
          }
          uint64_t v37 = v47 + v46;
          if (__OFADD__(v47, v46)) {
            goto LABEL_40;
          }
          char v39 = 0;
          ++v45;
          if (!--v44) {
            goto LABEL_53;
          }
        }
      }
    }
    goto LABEL_52;
  }
  if (v30)
  {
    if (v30 != 1 && (BYTE1(result) - 48) <= 9u)
    {
      if (v30 == 2)
      {
        char v39 = 0;
        uint64_t v37 = -(uint64_t)(BYTE1(result) - 48);
        goto LABEL_53;
      }
      if ((BYTE2(result) - 48) <= 9u)
      {
        uint64_t v37 = -10 * (BYTE1(result) - 48) - (BYTE2(result) - 48);
        uint64_t v48 = v30 - 3;
        if (!v48) {
          goto LABEL_52;
        }
        uint64_t v69 = (unsigned __int8 *)v80 + 3;
        while (1)
        {
          unsigned int v70 = *v69 - 48;
          if (v70 > 9) {
            break;
          }
          uint64_t v71 = 10 * v37;
          if ((unsigned __int128)(v37 * (__int128)10) >> 64 != (10 * v37) >> 63) {
            break;
          }
          uint64_t v37 = v71 - v70;
          if (__OFSUB__(v71, v70)) {
            break;
          }
          char v39 = 0;
          ++v69;
          if (!--v48) {
            goto LABEL_53;
          }
        }
      }
    }
LABEL_40:
    uint64_t v37 = 0;
    char v39 = 1;
    goto LABEL_53;
  }
  __break(1u);
LABEL_67:
  __break(1u);
  return result;
}

uint64_t sub_21CAFEB60(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_21CA57E34(&qword_267C96BC0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_21CA2B2CC(a1, a1[3]);
  sub_21CAFEE24();
  sub_21CB890C0();
  char v12 = 0;
  sub_21CB88EA0();
  if (!v2)
  {
    uint64_t v11 = *(void *)(v3 + 8);
    v10[15] = 1;
    sub_21CA57E34(&qword_267C96BC8);
    sub_21CAFEFD4();
    sub_21CB88EB0();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_21CAFECE4()
{
  return 0xD000000000000029;
}

uint64_t sub_21CAFEDF0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_21CAFE0D4(a1, a2);
}

uint64_t sub_21CAFEE08(void *a1)
{
  return sub_21CAFEB60(a1);
}

unint64_t sub_21CAFEE24()
{
  unint64_t result = qword_267C96B98;
  if (!qword_267C96B98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C96B98);
  }
  return result;
}

unint64_t sub_21CAFEE78()
{
  unint64_t result = qword_267C96BA8;
  if (!qword_267C96BA8)
  {
    sub_21CA5EEBC(&qword_267C96BA0);
    sub_21CAFF0E8(&qword_267C96BB0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C96BA8);
  }
  return result;
}

unint64_t sub_21CAFEF18()
{
  unint64_t result = qword_267C94F18;
  if (!qword_267C94F18)
  {
    type metadata accessor for FMFLocationAlert();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C94F18);
  }
  return result;
}

uint64_t sub_21CAFEF70(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FMFCommandResponseFragment();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_21CAFEFD4()
{
  unint64_t result = qword_267C96BD0;
  if (!qword_267C96BD0)
  {
    sub_21CA5EEBC(&qword_267C96BC8);
    sub_21CAFF048();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C96BD0);
  }
  return result;
}

unint64_t sub_21CAFF048()
{
  unint64_t result = qword_267C96BD8;
  if (!qword_267C96BD8)
  {
    sub_21CA5EEBC(&qword_267C96BA0);
    sub_21CAFF0E8(&qword_267C96BE0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C96BD8);
  }
  return result;
}

uint64_t sub_21CAFF0E8(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_21CA5EEBC(&qword_267C96BB8);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for FMFCommandResponseFragment.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF8) {
    goto LABEL_17;
  }
  if (a2 + 8 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 8) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 8;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 8;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 8;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 9;
  int v8 = v6 - 9;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for FMFCommandResponseFragment.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    *uint64_t result = a2 + 8;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x21CAFF2ACLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 8;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FMFCommandResponseFragment.CodingKeys()
{
  return &type metadata for FMFCommandResponseFragment.CodingKeys;
}

unint64_t sub_21CAFF2E8()
{
  unint64_t result = qword_267C96BE8;
  if (!qword_267C96BE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C96BE8);
  }
  return result;
}

unint64_t sub_21CAFF340()
{
  unint64_t result = qword_267C96BF0;
  if (!qword_267C96BF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C96BF0);
  }
  return result;
}

unint64_t sub_21CAFF398()
{
  unint64_t result = qword_267C96BF8;
  if (!qword_267C96BF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C96BF8);
  }
  return result;
}

uint64_t sub_21CAFF3EC()
{
  unint64_t v0 = sub_21CB88D70();
  swift_bridgeObjectRelease();
  if (v0 >= 9) {
    return 9;
  }
  else {
    return v0;
  }
}

uint64_t FMFManagerSubsystem.rawValue.getter()
{
  return *(void *)v0;
}

FMFCore::FMFManagerSubsystem __swiftcall FMFManagerSubsystem.init(rawValue:)(FMFCore::FMFManagerSubsystem rawValue)
{
  v1->rawValue = rawValue.rawValue;
  return rawValue;
}

void static FMFManagerSubsystem.friends.getter(void *a1@<X8>)
{
  *a1 = 1;
}

void static FMFManagerSubsystem.myLocation.getter(void *a1@<X8>)
{
  *a1 = 2;
}

uint64_t static FMFManagerSubsystem.all.getter@<X0>(void *a1@<X8>)
{
  if (qword_267C94958 != -1) {
    uint64_t result = swift_once();
  }
  *a1 = qword_267C96C00;
  return result;
}

uint64_t FMFSnapshotHandlers.responseFilter.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  sub_21CAD160C(v1);
  return v1;
}

uint64_t FMFSnapshotHandlers.responseHandler.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  sub_21CAD160C(v1);
  return v1;
}

void *FMFSnapshotHandlers.__allocating_init(responseFilter:responseHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result = (void *)swift_allocObject();
  result[2] = a1;
  result[3] = a2;
  result[4] = a3;
  result[5] = a4;
  return result;
}

void *FMFSnapshotHandlers.init(responseFilter:responseHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[2] = a1;
  v4[3] = a2;
  void v4[4] = a3;
  v4[5] = a4;
  return v4;
}

uint64_t FMFSnapshotHandlers.deinit()
{
  sub_21CAD2F4C(*(void *)(v0 + 16));
  sub_21CAD2F4C(*(void *)(v0 + 32));
  return v0;
}

uint64_t FMFSnapshotHandlers.__deallocating_deinit()
{
  sub_21CAD2F4C(*(void *)(v0 + 16));
  sub_21CAD2F4C(*(void *)(v0 + 32));

  return swift_deallocClassInstance();
}

uint64_t FMFManagerConfiguration.preferredLocale.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC7FMFCore23FMFManagerConfiguration_preferredLocale;
  uint64_t v4 = sub_21CB87630();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t FMFManagerConfiguration.cacheDirectory.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC7FMFCore23FMFManagerConfiguration_cacheDirectory);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FMFManagerConfiguration.useCache.getter()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC7FMFCore23FMFManagerConfiguration_useCache);
}

void FMFManagerConfiguration.enabledSubsystems.getter(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + OBJC_IVAR____TtC7FMFCore23FMFManagerConfiguration_enabledSubsystems);
}

uint64_t FMFManagerConfiguration.snapshotHandlers.getter()
{
  return swift_retain();
}

uint64_t FMFManagerConfiguration.useOptimizedFetch.getter()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC7FMFCore23FMFManagerConfiguration_useOptimizedFetch);
}

uint64_t FMFManagerConfiguration.disableContactMatching.getter()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC7FMFCore23FMFManagerConfiguration_disableContactMatching);
}

uint64_t sub_21CAFF6F4()
{
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC7FMFCore23FMFManagerConfiguration_useCache) == 1) {
    return (*(unsigned __int8 *)(v0 + OBJC_IVAR____TtC7FMFCore23FMFManagerConfiguration_useOptimizedFetch) ^ 1) & 1;
  }
  else {
    return 0;
  }
}

uint64_t FMFManagerConfiguration.__allocating_init(enabledSubsystems:preferredLocale:cacheDirectory:useCache:snapshotHandlers:useOptimizedFetch:disableContactMatching:)(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, int a7, int a8)
{
  int v25 = a8;
  int v26 = a7;
  int v28 = a5;
  uint64_t v27 = a3;
  uint64_t v12 = sub_21CB87630();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = *a1;
  if (qword_267C94990 != -1) {
    swift_once();
  }
  uint64_t v17 = sub_21CB880A0();
  sub_21CA4CC18(v17, (uint64_t)qword_267CA5368);
  unint64_t v18 = sub_21CB88070();
  os_log_type_t v19 = sub_21CB88880();
  if (os_log_type_enabled(v18, v19))
  {
    id v20 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)id v20 = 67109120;
    int v29 = v28 & 1;
    sub_21CB889C0();
    _os_log_impl(&dword_21CA00000, v18, v19, "FMFManagerConfiguration: public useCache: %{BOOL}d", v20, 8u);
    MEMORY[0x21D4B6B70](v20, -1, -1);
  }

  uint64_t v30 = v16;
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, a2, v12);
  if (qword_267C94960 != -1) {
    swift_once();
  }
  uint64_t v21 = *(void *)(qword_267C96C08 + OBJC_IVAR____TtC7FMFCore23FMFManagerConfiguration_interactionControllerProvider);
  uint64_t v22 = *(void *)(qword_267C96C08 + OBJC_IVAR____TtC7FMFCore23FMFManagerConfiguration_interactionControllerProvider + 8);
  type metadata accessor for FMFManagerConfiguration();
  uint64_t v23 = swift_allocObject();
  swift_retain();
  sub_21CAFF9E0(&v30, (uint64_t)v15, v27, a4, v28 & 1, v21, v22, a6, v26 & 1, v25 & 1);
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(a2, v12);
  return v23;
}

uint64_t sub_21CAFF9E0(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9, char a10)
{
  uint64_t v11 = v10;
  uint64_t v19 = *a1;
  uint64_t v20 = v11 + OBJC_IVAR____TtC7FMFCore23FMFManagerConfiguration_preferredLocale;
  uint64_t v21 = sub_21CB87630();
  uint64_t v34 = *(void *)(v21 - 8);
  uint64_t v22 = v20;
  uint64_t v23 = a2;
  uint64_t v24 = a8;
  uint64_t v25 = v21;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v34 + 16))(v22, v23, v21);
  int v26 = (void *)(v11 + OBJC_IVAR____TtC7FMFCore23FMFManagerConfiguration_cacheDirectory);
  *int v26 = a3;
  v26[1] = a4;
  *(unsigned char *)(v11 + OBJC_IVAR____TtC7FMFCore23FMFManagerConfiguration_useCache) = a5;
  uint64_t v27 = (void *)(v11 + OBJC_IVAR____TtC7FMFCore23FMFManagerConfiguration_interactionControllerProvider);
  void *v27 = a6;
  v27[1] = a7;
  *(void *)(v11 + OBJC_IVAR____TtC7FMFCore23FMFManagerConfiguration_enabledSubsystems) = v19;
  *(void *)(v11 + OBJC_IVAR____TtC7FMFCore23FMFManagerConfiguration_snapshotHandlers) = v24;
  *(unsigned char *)(v11 + OBJC_IVAR____TtC7FMFCore23FMFManagerConfiguration_useOptimizedFetch) = a9;
  *(unsigned char *)(v11 + OBJC_IVAR____TtC7FMFCore23FMFManagerConfiguration_disableContactMatching) = a10;
  uint64_t v28 = qword_267C94990;
  swift_retain();
  swift_retain();
  if (v28 != -1) {
    swift_once();
  }
  uint64_t v29 = sub_21CB880A0();
  sub_21CA4CC18(v29, (uint64_t)qword_267CA5368);
  uint64_t v30 = sub_21CB88070();
  os_log_type_t v31 = sub_21CB88880();
  if (os_log_type_enabled(v30, v31))
  {
    uint64_t v32 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v32 = 67109120;
    sub_21CB889C0();
    _os_log_impl(&dword_21CA00000, v30, v31, "FMFManagerConfiguration: internal useCache: %{BOOL}d", v32, 8u);
    MEMORY[0x21D4B6B70](v32, -1, -1);
  }
  swift_release();
  swift_release();

  (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v23, v25);
  return v11;
}

uint64_t FMFManagerConfiguration.deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC7FMFCore23FMFManagerConfiguration_preferredLocale;
  uint64_t v2 = sub_21CB87630();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return v0;
}

uint64_t FMFManagerConfiguration.__deallocating_deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC7FMFCore23FMFManagerConfiguration_preferredLocale;
  uint64_t v2 = sub_21CB87630();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  return swift_deallocClassInstance();
}

void *sub_21CAFFDDC(void *__src, uint64_t a2, void *__dst, uint64_t a4)
{
  if (__src) {
    uint64_t v5 = a2 - (void)__src;
  }
  else {
    uint64_t v5 = 0;
  }
  if (!__dst)
  {
    if (v5 <= 0) {
      return __src;
    }
LABEL_12:
    __src = (void *)sub_21CB88D50();
    __break(1u);
    return __src;
  }
  if (a4 - (uint64_t)__dst < v5) {
    goto LABEL_12;
  }
  if (__src)
  {
    return memmove(__dst, __src, a2 - (void)__src);
  }
  return __src;
}

uint64_t sub_21CAFFE80(uint64_t (*a1)(void))
{
  return a1() & 1;
}

uint64_t sub_21CAFFEAC(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_21CAFFED4@<X0>(uint64_t (*a1)(void)@<X0>, _DWORD *a2@<X8>)
{
  uint64_t result = a1();
  *a2 = result;
  return result;
}

unint64_t sub_21CAFFF08()
{
  unint64_t result = qword_267C96C10;
  if (!qword_267C96C10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C96C10);
  }
  return result;
}

unint64_t sub_21CAFFF60()
{
  unint64_t result = qword_267C96C18;
  if (!qword_267C96C18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C96C18);
  }
  return result;
}

unint64_t sub_21CAFFFB8()
{
  unint64_t result = qword_267C96C20;
  if (!qword_267C96C20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C96C20);
  }
  return result;
}

unint64_t sub_21CB00010()
{
  unint64_t result = qword_267C96C28;
  if (!qword_267C96C28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C96C28);
  }
  return result;
}

ValueMetadata *type metadata accessor for FMFManagerSubsystem()
{
  return &type metadata for FMFManagerSubsystem;
}

uint64_t type metadata accessor for FMFSnapshotHandlers()
{
  return self;
}

uint64_t method lookup function for FMFSnapshotHandlers(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for FMFSnapshotHandlers);
}

uint64_t dispatch thunk of FMFSnapshotHandlers.__allocating_init(responseFilter:responseHandler:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t sub_21CB000C4()
{
  return type metadata accessor for FMFManagerConfiguration();
}

uint64_t method lookup function for FMFManagerConfiguration(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for FMFManagerConfiguration);
}

uint64_t dispatch thunk of FMFManagerConfiguration.shouldUseFileCache.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 144))();
}

double sub_21CB00108()
{
  return 30.0;
}

double sub_21CB00110()
{
  return 50.0;
}

uint64_t FMReverseGeocodingCache.__allocating_init(preferredLocale:)(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  FMReverseGeocodingCache.init(preferredLocale:)(a1);
  return v2;
}

uint64_t FMReverseGeocodingCache.init(preferredLocale:)(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v25 = a1;
  uint64_t v3 = sub_21CB888F0();
  uint64_t v23 = *(void *)(v3 - 8);
  uint64_t v24 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v22 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_21CB888B0();
  MEMORY[0x270FA5388](v5);
  uint64_t v21 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_21CB88150();
  MEMORY[0x270FA5388](v7 - 8);
  sub_21CB87570();
  uint64_t v8 = qword_267C96C50;
  type metadata accessor for FMReverseGeocodingCache.FMReverseGeocodingCacheContext();
  *(void *)(v1 + v8) = sub_21CB881B0();
  uint64_t v9 = qword_267C96C58;
  *(void *)(v1 + v9) = sub_21CB881B0();
  *(void *)(v1 + qword_267C96C60) = MEMORY[0x263F8EE80];
  *(void *)(v1 + qword_267C96C68) = 0;
  if (qword_267C94998 != -1) {
    swift_once();
  }
  uint64_t v10 = sub_21CB880A0();
  sub_21CA4CC18(v10, (uint64_t)qword_267CA5380);
  swift_retain_n();
  uint64_t v11 = sub_21CB88070();
  os_log_type_t v12 = sub_21CB88880();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = (uint8_t *)swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    *(_DWORD *)uint64_t v13 = 136315138;
    uint64_t v27 = v14;
    uint64_t v15 = sub_21CB89110();
    uint64_t v26 = sub_21CA4E450(v15, v16, &v27);
    sub_21CB889C0();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_21CA00000, v11, v12, "%s: initialized", v13, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x21D4B6B70](v14, -1, -1);
    MEMORY[0x21D4B6B70](v13, -1, -1);
  }
  else
  {

    swift_release_n();
  }
  id v17 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08A48]), sel_init);
  uint64_t v27 = 0;
  unint64_t v28 = 0xE000000000000000;
  sub_21CB88B70();
  sub_21CB883D0();
  sub_21CB89110();
  sub_21CB883D0();
  swift_bridgeObjectRelease();
  sub_21CB883D0();
  unint64_t v18 = (void *)sub_21CB882C0();
  swift_bridgeObjectRelease();
  objc_msgSend(v17, sel_setName_, v18);

  objc_msgSend(v17, sel_setMaxConcurrentOperationCount_, 10);
  sub_21CA182AC();
  uint64_t v27 = 0;
  unint64_t v28 = 0xE000000000000000;
  sub_21CB88B70();
  swift_bridgeObjectRelease();
  uint64_t v27 = 0xD000000000000022;
  unint64_t v28 = 0x800000021CB96A40;
  sub_21CB89110();
  sub_21CB883D0();
  swift_bridgeObjectRelease();
  sub_21CB883D0();
  sub_21CB88140();
  uint64_t v27 = MEMORY[0x263F8EE78];
  sub_21CA62370();
  sub_21CA57E34((uint64_t *)&unk_267C96F90);
  sub_21CA62410();
  sub_21CB88A60();
  (*(void (**)(char *, void, uint64_t))(v23 + 104))(v22, *MEMORY[0x263F8F130], v24);
  uint64_t v19 = sub_21CB88930();
  *(void *)(v2 + qword_267C96C70) = v17;
  sub_21CB00870(v25, v2 + qword_267CA5298);
  *(void *)(v2 + qword_267C96C78) = v19;
  return v2;
}

uint64_t type metadata accessor for FMReverseGeocodingCache.FMReverseGeocodingCacheContext()
{
  return sub_21CA229E0();
}

uint64_t FMReverseGeocodingCache.deinit()
{
  uint64_t v1 = v0 + qword_267C96C48;
  uint64_t v2 = sub_21CB87590();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_21CA82C08(v0 + qword_267CA5298);
  return v0;
}

uint64_t FMReverseGeocodingCache.__deallocating_deinit()
{
  FMReverseGeocodingCache.deinit();

  return swift_deallocClassInstance();
}

uint64_t sub_21CB00870(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_21CA57E34(&qword_267C95400);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_21CB008D8(void (*a1)(void))
{
  a1();

  return sub_21CB89110();
}

uint64_t dispatch thunk of FMAddressProtocol.init(mapItem:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t method lookup function for FMReverseGeocodingCache(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for FMReverseGeocodingCache);
}

uint64_t dispatch thunk of FMReverseGeocodingCache.__allocating_init(preferredLocale:)()
{
  return (*(uint64_t (**)(void))(v0 + 280))();
}

uint64_t sub_21CB00954()
{
  uint64_t result = sub_21CB87590();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_21CB00A44(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = sub_21CB87590();
  uint64_t v7 = *(void *)(v6 - 8);
  unint64_t v8 = *(_DWORD *)(v7 + 80);
  uint64_t v9 = *(void *)(v7 + 64);
  uint64_t v10 = *(void *)(a3 + 16);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(_DWORD *)(v11 + 80);
  uint64_t v13 = *(void *)(v11 + 64);
  if ((v12 | v8) > 7
    || ((*(_DWORD *)(v11 + 80) | *(_DWORD *)(v7 + 80)) & 0x100000) != 0
    || v13 + ((v9 + ((v8 + 40) & ~v8) + v12) & ~v12) + 1 > 0x18)
  {
    uint64_t v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + (((v12 | v8) & 0xF8 ^ 0x1F8) & ((v12 | v8) + 16)));
    swift_retain();
  }
  else
  {
    uint64_t v29 = v6;
    uint64_t v17 = a2[1];
    *a1 = *a2;
    a1[1] = v17;
    unint64_t v18 = (void *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v19 = (void *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
    void *v18 = *v19;
    v18[1] = v19[1];
    uint64_t v20 = (void *)(((unint64_t)v18 + 23) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v21 = (void **)(((unint64_t)v19 + 23) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v22 = *v21;
    *uint64_t v20 = *v21;
    uint64_t v23 = ((unint64_t)v20 + v8 + 8) & ~v8;
    uint64_t v24 = ((unint64_t)v21 + v8 + 8) & ~v8;
    uint64_t v25 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16);
    uint64_t v28 = v10;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v26 = v22;
    v25(v23, v24, v29);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))((v23 + v9 + v12) & ~v12, (v24 + v9 + v12) & ~v12, v28);
    *(unsigned char *)(((v23 + v9 + v12) & ~v12) + v13) = *(unsigned char *)(((v24 + v9 + v12) & ~v12) + v13);
  }
  return a1;
}

uint64_t sub_21CB00C70(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = (id *)((((a1 + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8);

  uint64_t v5 = sub_21CB87590();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = v6 + 8;
  unint64_t v8 = ((unint64_t)v4 + *(unsigned __int8 *)(v6 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v9 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v10 = *(uint64_t (**)(unint64_t))(v9 + 8);
  unint64_t v11 = (v8 + *(void *)(v7 + 56) + *(unsigned __int8 *)(v9 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);

  return v10(v11);
}

void *sub_21CB00D58(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  uint64_t v6 = (void *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v7 = (void *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v6 = *v7;
  v6[1] = v7[1];
  unint64_t v8 = (void *)(((unint64_t)v6 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v9 = (void **)(((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v10 = *v9;
  *unint64_t v8 = *v9;
  uint64_t v11 = sub_21CB87590();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16);
  uint64_t v14 = v12 + 16;
  uint64_t v15 = *(unsigned __int8 *)(v12 + 80);
  uint64_t v16 = ((unint64_t)v8 + v15 + 8) & ~v15;
  uint64_t v17 = ((unint64_t)v9 + v15 + 8) & ~v15;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v18 = v10;
  v13(v16, v17, v11);
  uint64_t v19 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v20 = v19 + 16;
  uint64_t v21 = *(unsigned __int8 *)(v19 + 80);
  uint64_t v22 = *(void *)(v14 + 48) + v21;
  uint64_t v23 = (v22 + v16) & ~v21;
  uint64_t v24 = (v22 + v17) & ~v21;
  (*(void (**)(uint64_t, uint64_t))(v19 + 16))(v23, v24);
  *(unsigned char *)(*(void *)(v20 + 48) + v23) = *(unsigned char *)(*(void *)(v20 + 48) + v24);
  return a1;
}

void *sub_21CB00EA8(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = (void *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v7 = (void *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v6 = *v7;
  v6[1] = v7[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  unint64_t v8 = (void **)(((unint64_t)v6 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v9 = (void **)(((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v10 = *v9;
  uint64_t v11 = *v8;
  *unint64_t v8 = *v9;
  id v12 = v10;

  uint64_t v13 = sub_21CB87590();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = v14 + 24;
  uint64_t v16 = *(unsigned __int8 *)(v14 + 80);
  uint64_t v17 = ((unint64_t)v8 + v16 + 8) & ~v16;
  uint64_t v18 = ((unint64_t)v9 + v16 + 8) & ~v16;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 24))(v17, v18, v13);
  uint64_t v19 = *(void *)(v15 + 40);
  uint64_t v20 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v21 = v20 + 24;
  uint64_t v22 = *(unsigned __int8 *)(v20 + 80);
  uint64_t v23 = v19 + v22;
  uint64_t v24 = (v23 + v17) & ~v22;
  uint64_t v25 = (v23 + v18) & ~v22;
  (*(void (**)(uint64_t, uint64_t))(v20 + 24))(v24, v25);
  *(unsigned char *)(*(void *)(v21 + 40) + v24) = *(unsigned char *)(*(void *)(v21 + 40) + v25);
  return a1;
}

_OWORD *sub_21CB01008(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v5 = (_OWORD *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v6 = (_OWORD *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v5 = *v6;
  uint64_t v7 = (void *)(((unint64_t)v5 + 23) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v8 = (void *)(((unint64_t)v6 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v7 = *v8;
  uint64_t v9 = sub_21CB87590();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = v10 + 32;
  uint64_t v12 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = ((unint64_t)v7 + v12 + 8) & ~v12;
  uint64_t v14 = ((unint64_t)v8 + v12 + 8) & ~v12;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 32))(v13, v14, v9);
  uint64_t v15 = *(void *)(v11 + 32);
  uint64_t v16 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v17 = v16 + 32;
  uint64_t v18 = *(unsigned __int8 *)(v16 + 80);
  uint64_t v19 = v15 + v18;
  uint64_t v20 = (v19 + v13) & ~v18;
  uint64_t v21 = (v19 + v14) & ~v18;
  (*(void (**)(uint64_t, uint64_t))(v16 + 32))(v20, v21);
  *(unsigned char *)(*(void *)(v17 + 32) + v20) = *(unsigned char *)(*(void *)(v17 + 32) + v21);
  return a1;
}

void *sub_21CB01124(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = (void *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v8 = (void *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v7 = *v8;
  v7[1] = v8[1];
  swift_bridgeObjectRelease();
  uint64_t v9 = (void **)(((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v10 = (void **)(((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v11 = *v9;
  char *v9 = *v10;

  uint64_t v12 = sub_21CB87590();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = v13 + 40;
  uint64_t v15 = *(unsigned __int8 *)(v13 + 80);
  uint64_t v16 = ((unint64_t)v9 + v15 + 8) & ~v15;
  uint64_t v17 = ((unint64_t)v10 + v15 + 8) & ~v15;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 40))(v16, v17, v12);
  uint64_t v18 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v19 = v18 + 40;
  uint64_t v20 = *(unsigned __int8 *)(v18 + 80);
  uint64_t v21 = *(void *)(v14 + 24) + v20;
  uint64_t v22 = (v21 + v16) & ~v20;
  uint64_t v23 = (v21 + v17) & ~v20;
  (*(void (**)(uint64_t, uint64_t))(v18 + 40))(v22, v23);
  *(unsigned char *)(*(void *)(v19 + 24) + v22) = *(unsigned char *)(*(void *)(v19 + 24) + v23);
  return a1;
}

uint64_t sub_21CB01268(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(sub_21CB87590() - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  uint64_t v8 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v9 = *(unsigned int *)(v8 + 84);
  uint64_t v10 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v11 = *(void *)(v6 + 64);
  uint64_t v12 = *(unsigned __int8 *)(v8 + 80);
  if (v7 <= v9) {
    unsigned int v13 = *(_DWORD *)(v8 + 84);
  }
  else {
    unsigned int v13 = *(_DWORD *)(v6 + 84);
  }
  if (v13 <= 0x7FFFFFFF) {
    unsigned int v14 = 0x7FFFFFFF;
  }
  else {
    unsigned int v14 = v13;
  }
  if (!a2) {
    return 0;
  }
  if (a2 <= v14) {
    goto LABEL_28;
  }
  uint64_t v15 = *(void *)(v8 + 64) + ((v11 + ((v10 + 40) & ~v10) + v12) & ~v12) + 1;
  char v16 = 8 * v15;
  if (v15 <= 3)
  {
    unsigned int v19 = ((a2 - v14 + ~(-1 << v16)) >> v16) + 1;
    if (HIWORD(v19))
    {
      int v17 = *(_DWORD *)((char *)a1 + v15);
      if (!v17) {
        goto LABEL_28;
      }
      goto LABEL_18;
    }
    if (v19 > 0xFF)
    {
      int v17 = *(unsigned __int16 *)((char *)a1 + v15);
      if (!*(unsigned __int16 *)((char *)a1 + v15)) {
        goto LABEL_28;
      }
      goto LABEL_18;
    }
    if (v19 < 2)
    {
LABEL_28:
      if ((v13 & 0x80000000) != 0)
      {
        unint64_t v24 = ((((((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + v10 + 8) & ~v10;
        if (v7 == v14)
        {
          uint64_t v25 = *(uint64_t (**)(unint64_t))(v6 + 48);
          return v25(v24);
        }
        else
        {
          unint64_t v26 = (v24 + v11 + v12) & ~v12;
          uint64_t v27 = *(uint64_t (**)(unint64_t, uint64_t))(v8 + 48);
          return v27(v26, v9);
        }
      }
      else
      {
        unint64_t v23 = *((void *)a1 + 1);
        if (v23 >= 0xFFFFFFFF) {
          LODWORD(v23) = -1;
        }
        return (v23 + 1);
      }
    }
  }
  int v17 = *((unsigned __int8 *)a1 + v15);
  if (!*((unsigned char *)a1 + v15)) {
    goto LABEL_28;
  }
LABEL_18:
  int v20 = (v17 - 1) << v16;
  if (v15 > 3) {
    int v20 = 0;
  }
  if (*(_DWORD *)(v8 + 64) + ((v11 + ((v10 + 40) & ~v10) + v12) & ~v12) == -1)
  {
    int v22 = 0;
  }
  else
  {
    if (v15 <= 3) {
      int v21 = *(_DWORD *)(v8 + 64) + ((v11 + ((v10 + 40) & ~v10) + v12) & ~v12) + 1;
    }
    else {
      int v21 = 4;
    }
    switch(v21)
    {
      case 2:
        int v22 = *a1;
        break;
      case 3:
        int v22 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        int v22 = *(_DWORD *)a1;
        break;
      default:
        int v22 = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v14 + (v22 | v20) + 1;
}

void sub_21CB01520(_WORD *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v8 = *(void *)(sub_21CB87590() - 8);
  unsigned int v9 = *(_DWORD *)(v8 + 84);
  uint64_t v10 = *(void *)(*(void *)(a4 + 16) - 8);
  uint64_t v11 = *(unsigned int *)(v10 + 84);
  uint64_t v12 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v13 = *(void *)(v8 + 64);
  uint64_t v14 = *(unsigned __int8 *)(v10 + 80);
  if (v9 <= v11) {
    unsigned int v15 = *(_DWORD *)(v10 + 84);
  }
  else {
    unsigned int v15 = *(_DWORD *)(v8 + 84);
  }
  if (v15 <= 0x7FFFFFFF) {
    unsigned int v16 = 0x7FFFFFFF;
  }
  else {
    unsigned int v16 = v15;
  }
  size_t v17 = *(void *)(v10 + 64) + ((v13 + ((v12 + 40) & ~v12) + v14) & ~v14) + 1;
  if (a3 <= v16)
  {
    int v18 = 0;
  }
  else if (v17 <= 3)
  {
    unsigned int v21 = ((a3 - v16 + ~(-1 << (8 * v17))) >> (8 * v17)) + 1;
    if (HIWORD(v21))
    {
      int v18 = 4;
    }
    else if (v21 >= 0x100)
    {
      int v18 = 2;
    }
    else
    {
      int v18 = v21 > 1;
    }
  }
  else
  {
    int v18 = 1;
  }
  if (v16 < a2)
  {
    unsigned int v19 = ~v16 + a2;
    if (v17 < 4)
    {
      int v20 = (v19 >> (8 * v17)) + 1;
      if (*(_DWORD *)(v10 + 64) + ((v13 + ((v12 + 40) & ~v12) + v14) & ~v14) != -1)
      {
        int v22 = v19 & ~(-1 << (8 * v17));
        bzero(a1, v17);
        if (v17 == 3)
        {
          *a1 = v22;
          *((unsigned char *)a1 + 2) = BYTE2(v22);
        }
        else if (v17 == 2)
        {
          *a1 = v22;
        }
        else
        {
          *(unsigned char *)a1 = v22;
        }
      }
    }
    else
    {
      bzero(a1, v17);
      *(_DWORD *)a1 = v19;
      int v20 = 1;
    }
    switch(v18)
    {
      case 1:
        *((unsigned char *)a1 + v17) = v20;
        return;
      case 2:
        *(_WORD *)((char *)a1 + v17) = v20;
        return;
      case 3:
        goto LABEL_48;
      case 4:
        *(_DWORD *)((char *)a1 + v17) = v20;
        return;
      default:
        return;
    }
  }
  switch(v18)
  {
    case 1:
      *((unsigned char *)a1 + v17) = 0;
      if (!a2) {
        return;
      }
      goto LABEL_27;
    case 2:
      *(_WORD *)((char *)a1 + v17) = 0;
      if (!a2) {
        return;
      }
      goto LABEL_27;
    case 3:
LABEL_48:
      __break(1u);
      JUMPOUT(0x21CB01860);
    case 4:
      *(_DWORD *)((char *)a1 + v17) = 0;
      goto LABEL_26;
    default:
LABEL_26:
      if (a2)
      {
LABEL_27:
        if ((v15 & 0x80000000) != 0)
        {
          unint64_t v23 = ((((((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + v12 + 8) & ~v12;
          if (v9 == v16)
          {
            unint64_t v24 = *(void (**)(unint64_t, uint64_t))(v8 + 56);
            v24(v23, a2);
          }
          else
          {
            unint64_t v25 = (v23 + v13 + v14) & ~v14;
            unint64_t v26 = *(void (**)(unint64_t, uint64_t, uint64_t))(v10 + 56);
            v26(v25, a2, v11);
          }
        }
        else if ((a2 & 0x80000000) != 0)
        {
          *(void *)a1 = a2 ^ 0x80000000;
          *((void *)a1 + 1) = 0;
        }
        else
        {
          *((void *)a1 + 1) = (a2 - 1);
        }
      }
      return;
  }
}

uint64_t type metadata accessor for FMFGetURLInfoRequest()
{
  uint64_t result = qword_267C96D88;
  if (!qword_267C96D88) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_21CB018D4()
{
  uint64_t result = sub_21CB87480();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_21CB0196C()
{
  uint64_t v0 = sub_21CB87410();
  v3[3] = MEMORY[0x263F8D310];
  v3[0] = v0;
  v3[1] = v1;
  swift_beginAccess();
  sub_21CA3769C((uint64_t)v3, 7107189, 0xE300000000000000);
  return swift_endAccess();
}

uint64_t sub_21CB019F4()
{
  uint64_t v1 = v0 + qword_267CA52A0;
  uint64_t v2 = sub_21CB87480();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(v1, v2);
}

uint64_t sub_21CB01A60()
{
  uint64_t v0 = sub_21CB87730();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + qword_267CA51F8;
  uint64_t v2 = sub_21CB87590();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0 + qword_267CA52A0;
  uint64_t v4 = sub_21CB87480();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);

  return swift_deallocClassInstance();
}

uint64_t sub_21CB01BB4()
{
  return type metadata accessor for FMFGetURLInfoRequest();
}

uint64_t sub_21CB01BE4()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC7FMFCore25FMFGenericResponseHandler_delegate;
  swift_beginAccess();
  return MEMORY[0x21D4B6C80](v1);
}

uint64_t sub_21CB01C34(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + OBJC_IVAR____TtC7FMFCore25FMFGenericResponseHandler_delegate;
  swift_beginAccess();
  *(void *)(v4 + 8) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

void (*sub_21CB01CA0(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC7FMFCore25FMFGenericResponseHandler_delegate;
  v3[5] = v1;
  v3[6] = v4;
  uint64_t v5 = v1 + v4;
  swift_beginAccess();
  uint64_t v6 = MEMORY[0x21D4B6C80](v5);
  uint64_t v7 = *(void *)(v5 + 8);
  v3[3] = v6;
  void v3[4] = v7;
  return sub_21CB01D28;
}

void sub_21CB01D28(uint64_t a1, char a2)
{
  uint64_t v3 = *(void **)a1;
  *(void *)(*(void *)(*(void *)a1 + 40) + *(void *)(*(void *)a1 + 48) + 8) = *(void *)(*(void *)a1 + 32);
  swift_unknownObjectWeakAssign();
  if (a2)
  {
    swift_unknownObjectRelease();
    swift_endAccess();
  }
  else
  {
    swift_endAccess();
    swift_unknownObjectRelease();
  }

  free(v3);
}

void sub_21CB01DB0()
{
  uint64_t v1 = sub_21CA57E34(&qword_267C95028);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)aBlock - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_21CB87190();
  unint64_t v25 = (void *)v4;
  uint64_t v5 = sub_21CB068B4((unint64_t *)&qword_267C94E20, MEMORY[0x263F3CA38]);
  unint64_t v26 = (uint64_t (*)(uint64_t, uint64_t))v5;
  uint64_t v6 = sub_21CA6D80C(aBlock);
  uint64_t v7 = *MEMORY[0x263F3CA28];
  uint64_t v8 = *(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v4 - 8) + 104);
  v8(v6, v7, v4);
  char v9 = MEMORY[0x21D4B4280](aBlock);
  sub_21CA2B0D0((uint64_t)aBlock);
  if (v9)
  {
    unint64_t v25 = (void *)v4;
    unint64_t v26 = (uint64_t (*)(uint64_t, uint64_t))v5;
    uint64_t v10 = sub_21CA6D80C(aBlock);
    v8(v10, v7, v4);
    char v11 = MEMORY[0x21D4B4280](aBlock);
    sub_21CA2B0D0((uint64_t)aBlock);
    if (v11)
    {
      uint64_t v12 = sub_21CB88640();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v3, 1, 1, v12);
      uint64_t v13 = swift_allocObject();
      swift_unknownObjectWeakInit();
      uint64_t v14 = (void *)swift_allocObject();
      v14[2] = 0;
      v14[3] = 0;
      v14[4] = v13;
      sub_21CB09F98((uint64_t)v3, (uint64_t)&unk_267C96F38, (uint64_t)v14);
      swift_release();
    }
  }
  else
  {
    id v15 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08A48]), sel_init);
    objc_msgSend(v15, sel_setUnderlyingQueue_, *(void *)&v0[OBJC_IVAR____TtC7FMFCore25FMFGenericResponseHandler_updateQueue]);
    id v16 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F3BA80]), sel_initWithDelegate_delegateQueue_, v0, v15);
    uint64_t v17 = OBJC_IVAR____TtC7FMFCore25FMFGenericResponseHandler_fmfSession;
    int v18 = *(void **)&v0[OBJC_IVAR____TtC7FMFCore25FMFGenericResponseHandler_fmfSession];
    *(void *)&v0[OBJC_IVAR____TtC7FMFCore25FMFGenericResponseHandler_fmfSession] = v16;

    unsigned int v19 = *(void **)&v0[v17];
    if (v19)
    {
      uint64_t v20 = swift_allocObject();
      *(void *)(v20 + 16) = v0;
      unint64_t v26 = sub_21CB0701C;
      uint64_t v27 = v20;
      aBlock[0] = MEMORY[0x263EF8330];
      aBlock[1] = 1107296256;
      aBlock[2] = (uint64_t)sub_21CA06F80;
      unint64_t v25 = &unk_26CD6DAD0;
      unsigned int v21 = _Block_copy(aBlock);
      id v22 = v19;
      unint64_t v23 = v0;
      swift_release();
      objc_msgSend(v22, sel_getFences_, v21);

      _Block_release(v21);
    }
    else
    {
    }
  }
}

uint64_t sub_21CB020EC(uint64_t a1, uint64_t a2, char *a3)
{
  uint64_t v5 = sub_21CB88100();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_21CB88150();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = *(void *)&a3[OBJC_IVAR____TtC7FMFCore25FMFGenericResponseHandler_updateQueue];
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = a3;
  *(void *)(v13 + 24) = a1;
  aBlock[4] = sub_21CB07154;
  aBlock[5] = v13;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_21CA1B084;
  uint64_t aBlock[3] = &unk_26CD6DB70;
  uint64_t v14 = _Block_copy(aBlock);
  id v15 = a3;
  swift_bridgeObjectRetain();
  sub_21CB88120();
  v17[1] = MEMORY[0x263F8EE78];
  sub_21CB068B4((unint64_t *)&qword_267C96FC0, MEMORY[0x263F8F030]);
  sub_21CA57E34((uint64_t *)&unk_267C96DD0);
  sub_21CA3566C((unint64_t *)&qword_267C96FD0, (uint64_t *)&unk_267C96DD0);
  sub_21CB88A60();
  MEMORY[0x21D4B5A20](0, v12, v8, v14);
  _Block_release(v14);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  return swift_release();
}

uint64_t sub_21CB023A8(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + OBJC_IVAR____TtC7FMFCore25FMFGenericResponseHandler_fences) = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return sub_21CA32354();
}

uint64_t sub_21CB023EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[12] = a4;
  uint64_t v5 = sub_21CB879F0();
  v4[13] = v5;
  v4[14] = *(void *)(v5 - 8);
  v4[15] = swift_task_alloc();
  sub_21CA57E34(&qword_267C96F40);
  v4[16] = swift_task_alloc();
  uint64_t v6 = sub_21CB879B0();
  v4[17] = v6;
  v4[18] = *(void *)(v6 - 8);
  v4[19] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_21CB02538, 0, 0);
}

uint64_t sub_21CB02538()
{
  uint64_t v1 = v0[12] + 16;
  swift_beginAccess();
  uint64_t v2 = MEMORY[0x21D4B6C80](v1);
  if (v2)
  {
    uint64_t v3 = (void *)v2;
    v0[20] = *(void *)(v2 + OBJC_IVAR____TtC7FMFCore25FMFGenericResponseHandler_fmlSession);
    swift_retain();

    uint64_t v4 = (void *)swift_task_alloc();
    v0[21] = v4;
    *uint64_t v4 = v0;
    v4[1] = sub_21CB02660;
    return MEMORY[0x270F29690]();
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v5 = (uint64_t (*)(void))v0[1];
    return v5();
  }
}

uint64_t sub_21CB02660(uint64_t a1)
{
  *(void *)(*(void *)v1 + 176) = a1;
  swift_task_dealloc();
  swift_release();
  return MEMORY[0x270FA2498](sub_21CB02780, 0, 0);
}

uint64_t sub_21CB02780()
{
  uint64_t v1 = v0[12] + 16;
  swift_beginAccess();
  uint64_t v2 = MEMORY[0x21D4B6C80](v1);
  if (v2)
  {
    uint64_t v3 = (void *)v2;
    *(void *)(v2 + OBJC_IVAR____TtC7FMFCore25FMFGenericResponseHandler_fenceUpdateStream) = v0[22];
    swift_retain();
    swift_release();
  }
  sub_21CB879C0();
  swift_beginAccess();
  uint64_t v4 = sub_21CB068B4(&qword_267C96F48, MEMORY[0x263F3CE58]);
  uint64_t v5 = (void *)swift_task_alloc();
  v0[23] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_21CB028DC;
  uint64_t v6 = v0[16];
  uint64_t v7 = v0[17];
  return MEMORY[0x270FA1E80](v6, v7, v4);
}

uint64_t sub_21CB028DC()
{
  *(void *)(*(void *)v1 + 192) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_21CB02C50;
  }
  else {
    uint64_t v2 = sub_21CB029F0;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_21CB029F0()
{
  uint64_t v1 = v0[16];
  uint64_t v2 = v0[13];
  uint64_t v3 = v0[14];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    (*(void (**)(void, void))(v0[18] + 8))(v0[19], v0[17]);
    swift_release();
LABEL_8:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v20 = (uint64_t (*)(void))v0[1];
    return v20();
  }
  uint64_t v4 = v0[12] + 16;
  (*(void (**)(void, uint64_t, uint64_t))(v3 + 32))(v0[15], v1, v2);
  uint64_t v5 = MEMORY[0x21D4B6C80](v4);
  if (!v5)
  {
    uint64_t v15 = v0[18];
    uint64_t v14 = v0[19];
    uint64_t v16 = v0[17];
    uint64_t v18 = v0[14];
    uint64_t v17 = v0[15];
    uint64_t v19 = v0[13];
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v19);
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v14, v16);
    goto LABEL_8;
  }
  uint64_t v6 = (void *)v5;
  uint64_t v8 = v0[14];
  uint64_t v7 = v0[15];
  uint64_t v9 = v0[13];
  *(void *)(v5 + OBJC_IVAR____TtC7FMFCore25FMFGenericResponseHandler_fmlFences) = sub_21CB879E0();
  swift_bridgeObjectRelease();
  sub_21CB03068();
  sub_21CA32354();

  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
  uint64_t v10 = sub_21CB068B4(&qword_267C96F48, MEMORY[0x263F3CE58]);
  uint64_t v11 = (void *)swift_task_alloc();
  v0[23] = v11;
  *uint64_t v11 = v0;
  v11[1] = sub_21CB028DC;
  uint64_t v12 = v0[16];
  uint64_t v13 = v0[17];
  return MEMORY[0x270FA1E80](v12, v13, v10);
}

uint64_t sub_21CB02C50()
{
  *(void *)(v0 + 88) = *(void *)(v0 + 192);
  sub_21CA57E34((uint64_t *)&unk_267C96F50);
  swift_dynamicCast();
  return swift_willThrowTypedImpl();
}

id FMFGenericResponseHandler.__deallocating_deinit()
{
  if (*(void *)&v0[OBJC_IVAR____TtC7FMFCore25FMFGenericResponseHandler_fenceUpdateStream])
  {
    swift_retain();
    sub_21CB879D0();
    swift_release();
  }
  if (qword_267C94990 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_21CB880A0();
  sub_21CA4CC18(v1, (uint64_t)qword_267CA5368);
  uint64_t v2 = v0;
  uint64_t v3 = sub_21CB88070();
  os_log_type_t v4 = sub_21CB88880();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v20 = swift_slowAlloc();
    uint64_t v21 = v20;
    *(_DWORD *)uint64_t v5 = 136315138;
    uint64_t v6 = *(void *)&v2[OBJC_IVAR____TtC7FMFCore25FMFGenericResponseHandler_identifier];
    unint64_t v7 = *(void *)&v2[OBJC_IVAR____TtC7FMFCore25FMFGenericResponseHandler_identifier + 8];
    swift_bridgeObjectRetain();
    unint64_t v8 = sub_21CA30E24(0xCuLL, v6, v7);
    uint64_t v10 = v9;
    uint64_t v12 = v11;
    uint64_t v14 = v13;
    swift_bridgeObjectRelease();
    uint64_t v15 = MEMORY[0x21D4B5450](v8, v10, v12, v14);
    unint64_t v17 = v16;
    swift_bridgeObjectRelease();
    sub_21CA4E450(v15, v17, &v21);
    sub_21CB889C0();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_21CA00000, v3, v4, "FMFGenericResponseHandler<%s>.deinit", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x21D4B6B70](v20, -1, -1);
    MEMORY[0x21D4B6B70](v5, -1, -1);
  }
  else
  {
  }
  uint64_t v18 = (objc_class *)type metadata accessor for FMFGenericResponseHandler();
  v22.receiver = v2;
  v22.super_class = v18;
  return objc_msgSendSuper2(&v22, sel_dealloc);
}

uint64_t sub_21CB03068()
{
  uint64_t v164 = sub_21CB87990();
  uint64_t v151 = *(void *)(v164 - 8);
  uint64_t v0 = MEMORY[0x270FA5388](v164);
  uint64_t v158 = (char *)&v132 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v0);
  int v163 = (char *)&v132 - v2;
  uint64_t v166 = sub_21CB87C50();
  uint64_t v3 = *(void *)(v166 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v166);
  uint64_t v137 = (char *)&v132 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v149 = (char *)&v132 - v7;
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  char v162 = (char *)&v132 - v9;
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v138 = (char *)&v132 - v11;
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v132 - v13;
  uint64_t v15 = MEMORY[0x270FA5388](v12);
  unint64_t v17 = (char *)&v132 - v16;
  uint64_t v18 = MEMORY[0x270FA5388](v15);
  uint64_t v20 = (char *)&v132 - v19;
  uint64_t v21 = MEMORY[0x270FA5388](v18);
  unint64_t v23 = (char *)&v132 - v22;
  uint64_t v24 = MEMORY[0x270FA5388](v21);
  unint64_t v26 = (void (**)(char *, uint64_t))((char *)&v132 - v25);
  uint64_t v27 = MEMORY[0x270FA5388](v24);
  uint64_t v29 = (char *)&v132 - v28;
  uint64_t v30 = MEMORY[0x270FA5388](v27);
  uint64_t v32 = (char *)&v132 - v31;
  MEMORY[0x270FA5388](v30);
  uint64_t v34 = (char *)&v132 - v33;
  uint64_t v35 = sub_21CB87190();
  v167[3] = v35;
  v167[4] = sub_21CB068B4((unint64_t *)&qword_267C94E20, MEMORY[0x263F3CA38]);
  long long v36 = sub_21CA6D80C(v167);
  (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v35 - 8) + 104))(v36, *MEMORY[0x263F3CA28], v35);
  LOBYTE(v35) = MEMORY[0x21D4B4280](v167);
  uint64_t result = sub_21CA2B0D0((uint64_t)v167);
  if ((v35 & 1) == 0) {
    return result;
  }
  unint64_t v155 = (unint64_t)v34;
  uint64_t v136 = v29;
  uint64_t v150 = v26;
  uint64_t v147 = (uint64_t)v23;
  uint64_t v135 = v20;
  char v38 = v158;
  uint64_t v154 = v17;
  uint64_t v140 = v14;
  uint64_t v132 = OBJC_IVAR____TtC7FMFCore25FMFGenericResponseHandler_fmlFences;
  uint64_t v39 = v133;
  uint64_t v40 = *(void (***)(char *, char *, uint64_t))(v133
                                                        + OBJC_IVAR____TtC7FMFCore25FMFGenericResponseHandler_fmlFences);
  uint64_t v41 = (void *)MEMORY[0x263F8EE78];
  v167[0] = MEMORY[0x263F8EE78];
  unsigned int v42 = (char *)v40[2];
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v165 = v3;
  uint64_t v148 = v42;
  if (!v42)
  {
    uint64_t v136 = v41;
    uint64_t v60 = v151;
    unsigned int v46 = v163;
    uint64_t v45 = v164;
LABEL_17:
    swift_bridgeObjectRelease();
    uint64_t v61 = *(void **)(v39 + v132);
    v167[0] = (uint64_t)v41;
    unint64_t v62 = v61[2];
    uint64_t result = swift_bridgeObjectRetain();
    uint64_t v63 = v150;
    unint64_t v153 = v62;
    if (v62)
    {
      unint64_t v64 = 0;
      uint64_t v152 = v3 + 16;
      LODWORD(v148) = *MEMORY[0x263F3CE48];
      uint64_t v146 = (void (**)(char *, char *, uint64_t))(v60 + 104);
      uint64_t v145 = (void (**)(char *, uint64_t))(v60 + 8);
      LODWORD(v141) = *MEMORY[0x263F3CE50];
      uint64_t v139 = (char **)(v3 + 32);
      uint64_t v144 = (void (**)(uint64_t, uint64_t))(v3 + 8);
      uint64_t v142 = (void (**)(char *, uint64_t))((v3 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000);
      uint64_t v143 = v61;
      while (1)
      {
        if (v64 >= v61[2]) {
          goto LABEL_67;
        }
        id v67 = *(void (**)(uint64_t, uint64_t))(v3 + 72);
        unint64_t v155 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
        unint64_t v159 = v64;
        int v156 = v67;
        unint64_t v68 = (unint64_t)v61 + v155 + (void)v67 * v64;
        uint64_t v161 = *(char **)(v3 + 16);
        uint64_t v69 = v166;
        ((void (*)(void (**)(char *, uint64_t), unint64_t, uint64_t))v161)(v63, v68, v166);
        sub_21CB87B10();
        uint64_t v157 = (uint64_t (*)(void))*v146;
        ((void (*)(char *, void, uint64_t))v157)(v38, v148, v45);
        LODWORD(v160) = sub_21CB87980();
        unsigned int v70 = *v145;
        (*v145)(v38, v45);
        v70(v46, v45);
        uint64_t v71 = v147;
        ((void (*)(uint64_t, void (**)(char *, uint64_t), uint64_t))v161)(v147, v63, v69);
        if (v160)
        {
          sub_21CB87C20();
          ((void (*)(char *, void, uint64_t))v157)(v38, v141, v45);
          char v72 = sub_21CB87980();
          v70(v38, v45);
          v70(v46, v45);
          uint64_t v65 = *v144;
          (*v144)(v71, v69);
          if (v72)
          {
            char v73 = *v139;
            uint64_t v63 = v150;
            ((void (*)(char *, void (**)(char *, uint64_t), uint64_t))*v139)(v135, v150, v166);
            uint64_t v74 = v167[0];
            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            uint64_t v161 = v73;
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            {
              sub_21CA7C08C(0, *(void *)(v74 + 16) + 1, 1);
              uint64_t v74 = v167[0];
            }
            unsigned int v46 = v163;
            uint64_t v45 = v164;
            char v38 = v158;
            unint64_t v66 = v159;
            uint64_t v61 = v143;
            unint64_t v76 = v155;
            uint64_t v77 = v156;
            unint64_t v79 = *(void *)(v74 + 16);
            unint64_t v78 = *(void *)(v74 + 24);
            if (v79 >= v78 >> 1)
            {
              sub_21CA7C08C(v78 > 1, v79 + 1, 1);
              uint64_t v77 = v156;
              uint64_t v74 = v167[0];
            }
            *(void *)(v74 + 16) = v79 + 1;
            uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v161)(v74 + v76 + v79 * (void)v77, v135, v166);
            v167[0] = v74;
            uint64_t v3 = v165;
            goto LABEL_21;
          }
          uint64_t v45 = v164;
          uint64_t v3 = v165;
          uint64_t v63 = v150;
          char v38 = v158;
          unsigned int v46 = v163;
        }
        else
        {
          uint64_t v65 = *v144;
          (*v144)(v71, v69);
          uint64_t v3 = v165;
          uint64_t v63 = v150;
        }
        uint64_t v61 = v143;
        unint64_t v66 = v159;
        uint64_t result = ((uint64_t (*)(void, uint64_t))v65)(v63, v166);
LABEL_21:
        unint64_t v64 = v66 + 1;
        if (v153 == v64)
        {
          uint64_t v142 = (void (**)(char *, uint64_t))v167[0];
          uint64_t v39 = v133;
          uint64_t v60 = v151;
          uint64_t v41 = (void *)MEMORY[0x263F8EE78];
          goto LABEL_33;
        }
      }
    }
    uint64_t v142 = (void (**)(char *, uint64_t))v41;
LABEL_33:
    uint64_t v80 = v154;
    swift_bridgeObjectRelease();
    uint64_t v81 = *(void (***)(char *, char *, uint64_t))(v39 + v132);
    v167[0] = (uint64_t)v41;
    unint64_t v82 = (unint64_t)v81[2];
    uint64_t result = swift_bridgeObjectRetain();
    unint64_t v155 = v82;
    if (v82)
    {
      unint64_t v83 = 0;
      unint64_t v153 = v3 + 16;
      LODWORD(v152) = *MEMORY[0x263F3CE50];
      uint64_t v84 = (unint64_t *)(v60 + 104);
      uint64_t v150 = (void (**)(char *, uint64_t))(v60 + 8);
      LODWORD(v144) = *MEMORY[0x263F3CE48];
      uint64_t v143 = (void *)(v3 + 32);
      uint64_t v148 = (char *)(v3 + 8);
      uint64_t v145 = (void (**)(char *, uint64_t))((v3 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000);
      uint64_t v146 = v81;
      uint64_t v147 = v60 + 104;
      while (1)
      {
        if (v83 >= (unint64_t)v81[2]) {
          goto LABEL_68;
        }
        unint64_t v87 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
        int v156 = *(void (**)(uint64_t, uint64_t))(v3 + 72);
        uint64_t v157 = (uint64_t (*)(void))v87;
        unint64_t v88 = (unint64_t)v81 + v87 + (void)v156 * v83;
        uint64_t v89 = *(char **)(v3 + 16);
        uint64_t v160 = (char *)v83;
        uint64_t v161 = v89;
        uint64_t v90 = v166;
        ((void (*)(char *, unint64_t, uint64_t))v89)(v80, v88, v166);
        sub_21CB87B10();
        unint64_t v159 = *v84;
        ((void (*)(char *, void, uint64_t))v159)(v38, v152, v45);
        char v91 = sub_21CB87980();
        uint64_t v92 = v80;
        uint64_t v93 = *v150;
        (*v150)(v38, v45);
        v93(v46, v45);
        uint64_t v94 = v140;
        uint64_t v95 = v92;
        uint64_t v96 = v90;
        ((void (*)(char *, char *, uint64_t))v161)(v140, v95, v90);
        if (v91)
        {
          sub_21CB87C20();
          uint64_t v84 = (unint64_t *)v147;
          ((void (*)(char *, void, uint64_t))v159)(v38, v144, v45);
          char v97 = sub_21CB87980();
          v93(v38, v45);
          v93(v46, v45);
          uint64_t v85 = *(uint64_t (**)(char *, uint64_t))v148;
          (*(void (**)(char *, uint64_t))v148)(v94, v96);
          if (v97)
          {
            uint64_t v98 = (char *)*v143;
            ((void (*)(char *, char *, uint64_t))*v143)(v138, v154, v96);
            uint64_t v99 = v167[0];
            char v100 = swift_isUniquelyReferenced_nonNull_native();
            uint64_t v161 = v98;
            if ((v100 & 1) == 0)
            {
              sub_21CA7C08C(0, *(void *)(v99 + 16) + 1, 1);
              uint64_t v99 = v167[0];
            }
            uint64_t v45 = v164;
            uint64_t v3 = v165;
            unsigned int v46 = v163;
            uint64_t v81 = v146;
            uint64_t v86 = v160;
            unint64_t v102 = *(void *)(v99 + 16);
            unint64_t v101 = *(void *)(v99 + 24);
            if (v102 >= v101 >> 1)
            {
              sub_21CA7C08C(v101 > 1, v102 + 1, 1);
              uint64_t v99 = v167[0];
            }
            *(void *)(v99 + 16) = v102 + 1;
            uint64_t result = ((uint64_t (*)(char *, char *, uint64_t))v161)((char *)v157 + v99 + v102 * (void)v156, v138, v166);
            v167[0] = v99;
            uint64_t v60 = v151;
            uint64_t v80 = v154;
            goto LABEL_37;
          }
          uint64_t v60 = v151;
          uint64_t v80 = v154;
        }
        else
        {
          uint64_t v85 = *(uint64_t (**)(char *, uint64_t))v148;
          (*(void (**)(char *, uint64_t))v148)(v94, v90);
          uint64_t v60 = v151;
          uint64_t v80 = v154;
          uint64_t v84 = (unint64_t *)v147;
        }
        uint64_t result = v85(v80, v96);
        uint64_t v45 = v164;
        uint64_t v3 = v165;
        unsigned int v46 = v163;
        uint64_t v81 = v146;
        uint64_t v86 = v160;
LABEL_37:
        unint64_t v83 = (unint64_t)(v86 + 1);
        if (v155 == v83)
        {
          uint64_t v145 = (void (**)(char *, uint64_t))v167[0];
          uint64_t v39 = v133;
          uint64_t v41 = (void *)MEMORY[0x263F8EE78];
          goto LABEL_49;
        }
      }
    }
    uint64_t v145 = (void (**)(char *, uint64_t))v41;
LABEL_49:
    uint64_t v103 = (unsigned int *)MEMORY[0x263F3CE50];
    swift_bridgeObjectRelease();
    uint64_t v104 = *(void *)(v39 + v132);
    v167[0] = (uint64_t)v41;
    unint64_t v105 = *(void *)(v104 + 16);
    uint64_t result = swift_bridgeObjectRetain();
    unint64_t v153 = v105;
    if (!v105)
    {
      uint64_t v125 = (uint64_t)v41;
LABEL_64:
      swift_bridgeObjectRelease();
      swift_retain();
      sub_21CA57E34(&qword_267C95D50);
      sub_21CB88910();
      swift_release();
      uint64_t v126 = v167[0];
      swift_bridgeObjectRetain();
      uint64_t v127 = sub_21CB066D0((uint64_t)v136, v126);
      swift_release();
      swift_bridgeObjectRelease();
      *(void *)(v39 + OBJC_IVAR____TtC7FMFCore25FMFGenericResponseHandler_locationAlertsOnMeByMe) = v127;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      uint64_t v128 = sub_21CB066D0((uint64_t)v142, v126);
      swift_release();
      swift_bridgeObjectRelease();
      *(void *)(v39 + OBJC_IVAR____TtC7FMFCore25FMFGenericResponseHandler_locationAlertsOnMeByFriends) = v128;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      uint64_t v129 = sub_21CB066D0((uint64_t)v145, v126);
      swift_release();
      swift_bridgeObjectRelease();
      *(void *)(v39 + OBJC_IVAR____TtC7FMFCore25FMFGenericResponseHandler_locationAlertsOnFriendsByMe) = v129;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      uint64_t v130 = v39;
      uint64_t v131 = sub_21CB066D0(v125, v126);
      swift_release();
      swift_bridgeObjectRelease_n();
      *(void *)(v130 + OBJC_IVAR____TtC7FMFCore25FMFGenericResponseHandler_locationAlertsOnFriendsByFriends) = v131;
      return swift_bridgeObjectRelease();
    }
    unint64_t v106 = 0;
    uint64_t v151 = v3 + 16;
    uint64_t v107 = *v103;
    uint64_t v108 = (void (**)(uint64_t, uint64_t))(v60 + 104);
    uint64_t v150 = (void (**)(char *, uint64_t))(v60 + 8);
    uint64_t v146 = (void (**)(char *, char *, uint64_t))(v3 + 32);
    uint64_t v148 = (char *)(v3 + 8);
    uint64_t v147 = (v3 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    LODWORD(v157) = v107;
    unint64_t v159 = v60 + 104;
    uint64_t v152 = v104;
    while (1)
    {
      if (v106 >= *(void *)(v104 + 16)) {
        goto LABEL_69;
      }
      uint64_t v110 = *(char **)(v3 + 72);
      unint64_t v155 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
      uint64_t v161 = (char *)v106;
      uint64_t v154 = v110;
      uint64_t v160 = *(char **)(v3 + 16);
      uint64_t v111 = v162;
      uint64_t v112 = v166;
      ((void (*)(char *, unint64_t, uint64_t))v160)(v162, v104 + v155 + (void)v110 * v106, v166);
      sub_21CB87B10();
      int v156 = *v108;
      ((void (*)(char *, uint64_t, uint64_t))v156)(v38, v107, v45);
      int v113 = v38;
      char v114 = sub_21CB87980();
      uint64_t v115 = *v150;
      (*v150)(v113, v45);
      v115(v46, v45);
      uint64_t v116 = v149;
      ((void (*)(char *, char *, uint64_t))v160)(v149, v111, v112);
      if (v114)
      {
        sub_21CB87C20();
        ((void (*)(char *, void, uint64_t))v156)(v113, v157, v45);
        char v117 = sub_21CB87980();
        v115(v113, v45);
        v115(v46, v45);
        uint64_t v109 = *(uint64_t (**)(char *, uint64_t))v148;
        uint64_t v118 = v116;
        uint64_t v119 = v166;
        (*(void (**)(char *, uint64_t))v148)(v118, v166);
        if (v117)
        {
          uint64_t v120 = *v146;
          (*v146)(v137, v162, v119);
          uint64_t v121 = v167[0];
          char v122 = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v104 = v152;
          if ((v122 & 1) == 0)
          {
            sub_21CA7C08C(0, *(void *)(v121 + 16) + 1, 1);
            uint64_t v121 = v167[0];
          }
          uint64_t v45 = v164;
          uint64_t v3 = v165;
          char v38 = v158;
          unsigned int v46 = v163;
          uint64_t v107 = v157;
          unint64_t v124 = *(void *)(v121 + 16);
          unint64_t v123 = *(void *)(v121 + 24);
          if (v124 >= v123 >> 1)
          {
            sub_21CA7C08C(v123 > 1, v124 + 1, 1);
            uint64_t v121 = v167[0];
          }
          *(void *)(v121 + 16) = v124 + 1;
          uint64_t result = ((uint64_t (*)(unint64_t))v120)(v121 + v155 + v124 * (void)v154);
          v167[0] = v121;
          goto LABEL_53;
        }
      }
      else
      {
        uint64_t v109 = *(uint64_t (**)(char *, uint64_t))v148;
        (*(void (**)(char *, uint64_t))v148)(v116, v166);
      }
      uint64_t v104 = v152;
      uint64_t result = v109(v162, v166);
      uint64_t v45 = v164;
      uint64_t v3 = v165;
      char v38 = v158;
      unsigned int v46 = v163;
      uint64_t v107 = v157;
LABEL_53:
      uint64_t v108 = (void (**)(uint64_t, uint64_t))v159;
      unint64_t v106 = (unint64_t)(v161 + 1);
      if ((char *)v153 == v161 + 1)
      {
        uint64_t v125 = v167[0];
        uint64_t v39 = v133;
        goto LABEL_64;
      }
    }
  }
  uint64_t v43 = 0;
  uint64_t v145 = (void (**)(char *, uint64_t))(v3 + 16);
  uint64_t v44 = *MEMORY[0x263F3CE48];
  uint64_t v144 = (void (**)(uint64_t, uint64_t))(v151 + 104);
  uint64_t v143 = (void *)(v151 + 8);
  uint64_t v134 = (void (**)(uint64_t, unint64_t, uint64_t))(v3 + 32);
  uint64_t v142 = (void (**)(char *, uint64_t))(v3 + 8);
  uint64_t v139 = (char **)((v3 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000);
  unsigned int v46 = v163;
  uint64_t v45 = v164;
  unint64_t v47 = v155;
  LODWORD(v157) = v44;
  uint64_t v146 = v40;
  uint64_t v141 = v32;
  while (v43 < (char *)v40[2])
  {
    uint64_t v49 = *(void *)(v3 + 72);
    unint64_t v153 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
    uint64_t v161 = v43;
    uint64_t v152 = v49;
    unint64_t v50 = (unint64_t)v40 + v153 + v49 * (void)v43;
    uint64_t v160 = *(char **)(v3 + 16);
    uint64_t v51 = v166;
    ((void (*)(unint64_t, unint64_t, uint64_t))v160)(v47, v50, v166);
    sub_21CB87B10();
    int v156 = *v144;
    ((void (*)(char *, uint64_t, uint64_t))v156)(v38, v44, v45);
    LODWORD(v159) = sub_21CB87980();
    uint64_t v52 = (void (*)(char *, uint64_t))*v143;
    ((void (*)(char *, uint64_t))*v143)(v38, v45);
    v52(v46, v45);
    ((void (*)(char *, unint64_t, uint64_t))v160)(v32, v47, v51);
    if (v159)
    {
      uint64_t v53 = v141;
      sub_21CB87C20();
      ((void (*)(char *, void, uint64_t))v156)(v38, v157, v45);
      char v54 = sub_21CB87980();
      v52(v38, v45);
      v52(v46, v45);
      uint64_t v48 = *v142;
      (*v142)(v53, v166);
      uint64_t v32 = v53;
      if (v54)
      {
        uint64_t v55 = *v134;
        (*v134)((uint64_t)v136, v155, v166);
        uint64_t v56 = v167[0];
        char v57 = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v3 = v165;
        if ((v57 & 1) == 0)
        {
          sub_21CA7C08C(0, *(void *)(v56 + 16) + 1, 1);
          uint64_t v56 = v167[0];
        }
        uint64_t v40 = v146;
        unint64_t v59 = *(void *)(v56 + 16);
        unint64_t v58 = *(void *)(v56 + 24);
        if (v59 >= v58 >> 1)
        {
          sub_21CA7C08C(v58 > 1, v59 + 1, 1);
          uint64_t v56 = v167[0];
        }
        *(void *)(v56 + 16) = v59 + 1;
        uint64_t result = ((uint64_t (*)(unint64_t))v55)(v56 + v153 + v59 * v152);
        v167[0] = v56;
        unint64_t v47 = v155;
        goto LABEL_6;
      }
    }
    else
    {
      uint64_t v48 = *v142;
      uint64_t v32 = v141;
      (*v142)(v141, v166);
    }
    uint64_t v3 = v165;
    unint64_t v47 = v155;
    uint64_t result = ((uint64_t (*)(unint64_t, uint64_t))v48)(v155, v166);
    uint64_t v40 = v146;
LABEL_6:
    uint64_t v43 = v161 + 1;
    uint64_t v44 = v157;
    if (v148 == v161 + 1)
    {
      uint64_t v136 = (void *)v167[0];
      uint64_t v39 = v133;
      uint64_t v60 = v151;
      uint64_t v41 = (void *)MEMORY[0x263F8EE78];
      goto LABEL_17;
    }
  }
  __break(1u);
LABEL_67:
  __break(1u);
LABEL_68:
  __break(1u);
LABEL_69:
  __break(1u);
  return result;
}

uint64_t sub_21CB044D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v277 = a1;
  uint64_t v275 = a2;
  uint64_t v3 = sub_21CA57E34((uint64_t *)&unk_267C951B0);
  MEMORY[0x270FA5388](v3 - 8);
  v274 = (char *)&v233 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_21CA57E34(&qword_267C96F00);
  MEMORY[0x270FA5388](v5 - 8);
  v273 = (char *)&v233 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_21CB875D0();
  uint64_t v271 = *(void *)(v7 - 8);
  uint64_t v272 = v7;
  MEMORY[0x270FA5388](v7);
  v270 = (char *)&v233 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_21CB87AC0();
  uint64_t v268 = *(void *)(v9 - 8);
  uint64_t v269 = v9;
  MEMORY[0x270FA5388](v9);
  v267 = (char *)&v233 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_21CB87A60();
  MEMORY[0x270FA5388](v11 - 8);
  v265 = (char *)&v233 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_21CB87C50();
  uint64_t v236 = *(void *)(v13 - 8);
  uint64_t v237 = v13;
  MEMORY[0x270FA5388](v13);
  v238 = (char *)&v233 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_21CB87BD0();
  uint64_t v242 = *(void *)(v15 - 8);
  uint64_t v243 = v15;
  uint64_t v16 = MEMORY[0x270FA5388](v15);
  v241 = (char *)&v233 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  v240 = (char *)&v233 - v18;
  uint64_t v19 = sub_21CB87B50();
  uint64_t v248 = *(void *)(v19 - 8);
  uint64_t v249 = v19;
  uint64_t v20 = MEMORY[0x270FA5388](v19);
  v247 = (char *)&v233 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  v261 = (char *)&v233 - v22;
  uint64_t v23 = sub_21CB87B60();
  uint64_t v262 = *(void *)(v23 - 8);
  uint64_t v263 = v23;
  uint64_t v24 = MEMORY[0x270FA5388](v23);
  v235 = (char *)&v233 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v24);
  v260 = (char *)&v233 - v26;
  uint64_t v276 = sub_21CA57E34((uint64_t *)&qword_267C96F08);
  MEMORY[0x270FA5388](v276);
  v264 = (char *)&v233 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = sub_21CA57E34((uint64_t *)&unk_267C96ED0);
  uint64_t v29 = MEMORY[0x270FA5388](v28 - 8);
  uint64_t v282 = (uint64_t)&v233 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v29);
  uint64_t v286 = (uint64_t)&v233 - v31;
  uint64_t v281 = sub_21CB87990();
  uint64_t v32 = *(void *)(v281 - 8);
  uint64_t v33 = MEMORY[0x270FA5388](v281);
  v280 = (char *)&v233 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v33);
  v279 = (char *)&v233 - v35;
  uint64_t v36 = sub_21CB87A00();
  MEMORY[0x270FA5388](v36 - 8);
  v259 = (char *)&v233 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = sub_21CB88000();
  MEMORY[0x270FA5388](v38 - 8);
  v258 = (char *)&v233 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = sub_21CB87590();
  uint64_t v256 = *(void *)(v40 - 8);
  uint64_t v257 = v40;
  MEMORY[0x270FA5388](v40);
  v255 = (char *)&v233 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = sub_21CB87A50();
  uint64_t v284 = *(void *)(v42 - 8);
  uint64_t v285 = v42;
  uint64_t v43 = MEMORY[0x270FA5388](v42);
  v266 = (char *)&v233 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = MEMORY[0x270FA5388](v43);
  unint64_t v47 = (char *)&v233 - v46;
  MEMORY[0x270FA5388](v45);
  v254 = (char *)&v233 - v48;
  uint64_t v49 = sub_21CB878D0();
  uint64_t v50 = *(void *)(v49 - 8);
  uint64_t v51 = MEMORY[0x270FA5388](v49);
  uint64_t v294 = (uint64_t)&v233 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = MEMORY[0x270FA5388](v51);
  v296 = (uint64_t *)((char *)&v233 - v54);
  MEMORY[0x270FA5388](v53);
  uint64_t v56 = (char *)&v233 - v55;
  uint64_t v57 = type metadata accessor for FMFFriend();
  uint64_t v58 = *(void *)(v57 - 8);
  MEMORY[0x270FA5388](v57);
  v297 = (char *)&v233 - ((v59 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = sub_21CA57E34(&qword_267C96F10);
  uint64_t v61 = MEMORY[0x270FA5388](v60 - 8);
  v252 = (uint64_t *)((char *)&v233 - ((v62 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v61);
  unint64_t v64 = (char *)&v233 - v63;
  uint64_t v65 = *(char **)(v277 + 16);
  uint64_t v291 = v2;
  uint64_t v292 = v50;
  v278 = (char *)&v233 - v63;
  uint64_t v295 = v49;
  uint64_t v253 = v58;
  v250 = v65;
  uint64_t v290 = v32;
  if (v65)
  {
    v244 = v47;
    unint64_t v66 = v277 + ((*(unsigned __int8 *)(v58 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v58 + 80));
    v287 = (void (*)(void, void))(v50 + 16);
    id v67 = (void (**)(char *, uint64_t))(v50 + 8);
    uint64_t v68 = *(void *)(v58 + 72);
    swift_bridgeObjectRetain();
    uint64_t v69 = 0;
    unsigned int v70 = v297;
    uint64_t v245 = v57;
    unint64_t v234 = v66;
    uint64_t v239 = v68;
    while (1)
    {
      v251 = v69;
      sub_21CA3D5DC(v66 + v68 * (void)v69, (uint64_t)v70, (uint64_t (*)(void))type metadata accessor for FMFFriend);
      uint64_t v71 = sub_21CB87B30();
      id v283 = *(id *)(v71 + 16);
      if (v283) {
        break;
      }
      swift_bridgeObjectRelease();
LABEL_23:
      uint64_t v90 = v251 + 1;
      sub_21CA56FF0((uint64_t)v70, (uint64_t (*)(void))type metadata accessor for FMFFriend);
      BOOL v86 = v90 == v250;
      uint64_t v69 = v90;
      uint64_t v68 = v239;
      if (v86)
      {
        swift_bridgeObjectRelease();
        uint64_t v231 = 1;
        unint64_t v64 = v278;
        unint64_t v47 = v244;
        goto LABEL_29;
      }
    }
    char v72 = 0;
    unint64_t v73 = (*(unsigned __int8 *)(v50 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v50 + 80);
    uint64_t v246 = v71;
    v293 = (char *)(v71 + v73);
    uint64_t v74 = *(void *)(v50 + 72);
    v288 = *(void (**)(void, void, void))(v50 + 16);
    uint64_t v289 = v74;
    v288(v56, v71 + v73, v49);
    while (1)
    {
      uint64_t v75 = *((void *)v70 + 4);
      uint64_t v76 = sub_21CB878B0();
      uint64_t v78 = v77;
      if (*(void *)(v75 + 16))
      {
        uint64_t v79 = v76;
        sub_21CB89050();
        sub_21CB88380();
        uint64_t v80 = sub_21CB89090();
        uint64_t v81 = -1 << *(unsigned char *)(v75 + 32);
        unint64_t v82 = v80 & ~v81;
        uint64_t v83 = v75 + 56;
        if ((*(void *)(v75 + 56 + ((v82 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v82))
        {
          uint64_t v84 = *(void *)(v75 + 48);
          uint64_t v85 = (void *)(v84 + 16 * v82);
          BOOL v86 = *v85 == v79 && v85[1] == v78;
          if (v86 || (sub_21CB88F50() & 1) != 0)
          {
LABEL_27:
            swift_bridgeObjectRelease();
            uint64_t v49 = v295;
            (*v67)(v56, v295);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            unint64_t v64 = v278;
            sub_21CA3DFAC((uint64_t)v297, (uint64_t)v278, (uint64_t (*)(void))type metadata accessor for FMFFriend);
            uint64_t v231 = 0;
            unint64_t v47 = v244;
            uint64_t v57 = v245;
            goto LABEL_29;
          }
          uint64_t v87 = ~v81;
          while (1)
          {
            unint64_t v82 = (v82 + 1) & v87;
            if (((*(void *)(v83 + ((v82 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v82) & 1) == 0) {
              break;
            }
            unint64_t v88 = (void *)(v84 + 16 * v82);
            BOOL v89 = *v88 == v79 && v88[1] == v78;
            if (v89 || (sub_21CB88F50() & 1) != 0) {
              goto LABEL_27;
            }
          }
        }
      }
      char v72 = (char *)v72 + 1;
      swift_bridgeObjectRelease();
      uint64_t v49 = v295;
      (*v67)(v56, v295);
      unsigned int v70 = v297;
      if (v72 == v283)
      {
        swift_bridgeObjectRelease();
        uint64_t v50 = v292;
        uint64_t v57 = v245;
        unint64_t v66 = v234;
        goto LABEL_23;
      }
      v288(v56, &v293[v289 * (void)v72], v49);
    }
  }
  uint64_t v231 = 1;
LABEL_29:
  uint64_t v91 = v253;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v253 + 56))(v64, v231, 1, v57);
  uint64_t v92 = v252;
  sub_21CA24E80((uint64_t)v64, (uint64_t)v252, &qword_267C96F10);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v91 + 48))(v92, 1, v57) == 1)
  {
    sub_21CA1B88C((uint64_t)v92, &qword_267C96F10);
    v288 = 0;
    uint64_t v289 = 0;
  }
  else
  {
    uint64_t v93 = v92[1];
    v288 = (void (*)(void, void, void))*v92;
    uint64_t v289 = v93;
    swift_bridgeObjectRetain();
    sub_21CA56FF0((uint64_t)v92, (uint64_t (*)(void))type metadata accessor for FMFFriend);
  }
  uint64_t v94 = v254;
  sub_21CB87B40();
  sub_21CB87A20();
  double v96 = v95;
  uint64_t v97 = v285;
  uint64_t v99 = v284 + 8;
  uint64_t v98 = *(void (**)(void, void))(v284 + 8);
  v98(v94, v285);
  sub_21CB87B40();
  sub_21CB87A20();
  double v101 = v100;
  v98(v47, v97);
  id v102 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F00A50]), sel_initWithLatitude_longitude_, v96, v101);
  objc_msgSend(v102, sel_coordinate);
  v297 = v103;
  double v105 = v104;
  objc_msgSend(v102, sel_altitude);
  double v107 = v106;
  objc_msgSend(v102, sel_horizontalAccuracy);
  double v109 = v108;
  objc_msgSend(v102, sel_verticalAccuracy);
  double v111 = v110;
  objc_msgSend(v102, sel_course);
  double v113 = v112;
  objc_msgSend(v102, sel_courseAccuracy);
  double v115 = v114;
  objc_msgSend(v102, sel_speed);
  double v117 = v116;
  objc_msgSend(v102, sel_speedAccuracy);
  uint64_t v119 = v118;
  uint64_t v120 = v255;
  sub_21CB87C40();
  id v121 = objc_allocWithZone(MEMORY[0x263F00A50]);
  char v122 = (void *)sub_21CB87510();
  id v123 = objc_msgSend(v121, sel_initWithCoordinate_altitude_horizontalAccuracy_verticalAccuracy_course_courseAccuracy_speed_speedAccuracy_timestamp_, v122, *(double *)&v297, v105, v107, v109, v111, v113, v115, v117, v119);

  (*(void (**)(char *, uint64_t))(v256 + 8))(v120, v257);
  id v283 = v123;
  uint64_t v124 = (uint64_t)v258;
  sub_21CB87C30();
  FMFAddress.init(from:)(v124, (uint64_t)v305);
  sub_21CB87B40();
  uint64_t v125 = (uint64_t)v259;
  sub_21CB87A40();
  uint64_t v284 = v99;
  v287 = v98;
  v98(v94, v285);
  sub_21CA9472C(v125, (char *)v304);
  LODWORD(v258) = LOBYTE(v304[0]);
  uint64_t v126 = sub_21CB87B00();
  uint64_t v128 = v127;
  swift_bridgeObjectRetain();
  v259 = (char *)v126;
  v129._uint64_t countAndFlagsBits = v126;
  uint64_t v277 = (uint64_t)v128;
  v129._object = v128;
  FMFDefaultLabel.init(rawValue:)(v129);
  if (LOBYTE(v304[0]) == 5) {
    int v130 = 259;
  }
  else {
    int v130 = 3;
  }
  LODWORD(v257) = v130;
  uint64_t v131 = v279;
  sub_21CB87C20();
  LODWORD(v297) = *MEMORY[0x263F3CE50];
  uint64_t v132 = v290;
  uint64_t v133 = (char *)(v290 + 104);
  uint64_t v134 = *(char **)(v290 + 104);
  uint64_t v136 = v280;
  uint64_t v135 = v281;
  ((void (*)(char *))v134)(v280);
  LODWORD(v254) = sub_21CB87980();
  uint64_t v137 = *(void **)(v132 + 8);
  ((void (*)(char *, uint64_t))v137)(v136, v135);
  ((void (*)(char *, uint64_t))v137)(v131, v135);
  sub_21CB87B20();
  v250 = v134;
  v251 = v133;
  ((void (*)(char *, void, uint64_t))v134)(v136, v297, v135);
  LODWORD(v253) = sub_21CB87980();
  ((void (*)(char *, uint64_t))v137)(v136, v135);
  v252 = v137;
  ((void (*)(char *, uint64_t))v137)(v131, v135);
  uint64_t v138 = v260;
  sub_21CB87B70();
  uint64_t v140 = v262;
  uint64_t v139 = v263;
  int v141 = (*(uint64_t (**)(char *, uint64_t))(v262 + 88))(v138, v263);
  LODWORD(v255) = *MEMORY[0x263F3CF00];
  uint64_t v290 = v132 + 8;
  LODWORD(v256) = v141;
  if (v141 == v255)
  {
    (*(void (**)(char *, uint64_t))(v140 + 96))(v138, v139);
    uint64_t v153 = v248;
    uint64_t v152 = v249;
    uint64_t v154 = v261;
    (*(void (**)(char *, char *, uint64_t))(v248 + 32))(v261, v138, v249);
    uint64_t v155 = v276;
    uint64_t v144 = v264;
    v297 = &v264[*(int *)(v276 + 48)];
    int v156 = v247;
    (*(void (**)(char *, char *, uint64_t))(v153 + 16))(v247, v154, v152);
    uint64_t v157 = (uint64_t)v156;
    uint64_t v150 = v155;
    sub_21CA94C48(v157, v144);
    (*(void (**)(char *, uint64_t))(v153 + 8))(v154, v152);
    uint64_t v158 = type metadata accessor for FMFSchedule();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v158 - 8) + 56))(v297, 1, 1, v158);
    uint64_t v142 = v292;
  }
  else
  {
    uint64_t v142 = v292;
    uint64_t v143 = v276;
    uint64_t v144 = v264;
    if (v141 == *MEMORY[0x263F3CF08])
    {
      (*(void (**)(char *, uint64_t))(v140 + 96))(v138, v139);
      uint64_t v146 = v248;
      uint64_t v145 = v249;
      (*(void (**)(char *, char *, uint64_t))(v248 + 32))(v261, v138, v249);
      v297 = &v144[*(int *)(v143 + 48)];
      uint64_t v147 = v247;
      uint64_t v148 = v261;
      (*(void (**)(char *, char *, uint64_t))(v146 + 16))(v247, v261, v145);
      uint64_t v149 = (uint64_t)v147;
      uint64_t v150 = v276;
      sub_21CA94C48(v149, v144);
      (*(void (**)(char *, uint64_t))(v146 + 8))(v148, v145);
      uint64_t v151 = type metadata accessor for FMFSchedule();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v151 - 8) + 56))(v297, 1, 1, v151);
    }
    else
    {
      if (v141 != *MEMORY[0x263F3CF10])
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t, uint64_t))(v236 + 16))(v238, v291, v237);
        v304[0] = 0;
        v304[1] = 0xE000000000000000;
        sub_21CB88B70();
        swift_bridgeObjectRelease();
        v304[0] = 0xD00000000000001BLL;
        v304[1] = 0x800000021CB96C80;
        v232 = v235;
        sub_21CB87B70();
        sub_21CB068B4((unint64_t *)&qword_267C96F18, MEMORY[0x263F3CF18]);
        sub_21CB88F00();
        sub_21CB883D0();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v140 + 8))(v232, v139);
        uint64_t result = sub_21CB88D00();
        __break(1u);
        return result;
      }
      (*(void (**)(char *, uint64_t))(v140 + 96))(v138, v139);
      uint64_t v160 = v242;
      uint64_t v159 = v243;
      uint64_t v161 = v240;
      (*(void (**)(char *, char *, uint64_t))(v242 + 32))(v240, v138, v243);
      char v162 = (uint64_t *)&v144[*(int *)(v143 + 48)];
      *uint64_t v144 = 3;
      uint64_t v150 = v143;
      uint64_t v163 = (uint64_t)v241;
      (*(void (**)(char *, char *, uint64_t))(v160 + 16))(v241, v161, v159);
      FMFSchedule.init(fmlSchedule:)(v163, v162);
      (*(void (**)(char *, uint64_t))(v160 + 8))(v161, v159);
      uint64_t v164 = type metadata accessor for FMFSchedule();
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v164 - 8) + 56))(v162, 0, 1, v164);
    }
  }
  LODWORD(v264) = *v144;
  sub_21CA26A4C((uint64_t)&v144[*(int *)(v150 + 48)], v286, (uint64_t *)&unk_267C96ED0);
  uint64_t v165 = (uint64_t)v265;
  sub_21CB87A70();
  sub_21CA95678(v165, (char *)v304);
  LODWORD(v276) = LOBYTE(v304[0]);
  uint64_t v166 = sub_21CB87B30();
  uint64_t v167 = *(void *)(v166 + 16);
  if (v167)
  {
    uint64_t v169 = *(char **)(v142 + 16);
    uint64_t v168 = v142 + 16;
    v293 = v169;
    uint64_t v170 = *(unsigned __int8 *)(v168 + 64);
    v265 = (char *)v166;
    uint64_t v171 = v166 + ((v170 + 32) & ~v170);
    uint64_t v172 = *(void *)(v168 + 56);
    v297 = (char *)MEMORY[0x263F8EE78];
    do
    {
      char v175 = v296;
      ((void (*)(void *, uint64_t, uint64_t))v293)(v296, v171, v49);
      uint64_t v176 = sub_21CB878C0();
      uint64_t v178 = v177;
      (*(void (**)(void *, uint64_t))(v168 - 8))(v175, v49);
      if (v178)
      {
        char v179 = v297;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          char v179 = (char *)sub_21CAC7864(0, *((void *)v179 + 2) + 1, 1, v179);
        }
        unint64_t v181 = *((void *)v179 + 2);
        unint64_t v180 = *((void *)v179 + 3);
        v297 = v179;
        if (v181 >= v180 >> 1) {
          v297 = (char *)sub_21CAC7864((void *)(v180 > 1), v181 + 1, 1, v297);
        }
        uint64_t v173 = v297;
        *((void *)v297 + 2) = v181 + 1;
        v174 = &v173[16 * v181];
        *((void *)v174 + 4) = v176;
        *((void *)v174 + 5) = v178;
        uint64_t v49 = v295;
      }
      v171 += v172;
      --v167;
    }
    while (v167);
    swift_bridgeObjectRelease();
    uint64_t v142 = v292;
  }
  else
  {
    swift_bridgeObjectRelease();
    v297 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v182 = sub_21CB87B30();
  uint64_t v183 = *(void *)(v182 + 16);
  if (v183)
  {
    uint64_t v185 = *(char **)(v142 + 16);
    uint64_t v184 = v142 + 16;
    v293 = v185;
    uint64_t v186 = *(unsigned __int8 *)(v184 + 64);
    v265 = (char *)v182;
    uint64_t v187 = v182 + ((v186 + 32) & ~v186);
    uint64_t v188 = *(void *)(v184 + 56);
    v189 = (void (**)(uint64_t, uint64_t))(v184 - 8);
    v296 = (void *)MEMORY[0x263F8EE78];
    uint64_t v292 = v184;
    uint64_t v190 = v294;
    ((void (*)(uint64_t, uint64_t, uint64_t))v185)(v294, v187, v49);
    while (1)
    {
      uint64_t v193 = sub_21CB87890();
      uint64_t v195 = v194;
      (*v189)(v190, v49);
      if (v195)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          v296 = sub_21CAC7864(0, v296[2] + 1, 1, v296);
        }
        unint64_t v197 = v296[2];
        unint64_t v196 = v296[3];
        if (v197 >= v196 >> 1) {
          v296 = sub_21CAC7864((void *)(v196 > 1), v197 + 1, 1, v296);
        }
        uint64_t v191 = v296;
        v296[2] = v197 + 1;
        uint64_t v192 = &v191[2 * v197];
        v192[4] = v193;
        v192[5] = v195;
        uint64_t v49 = v295;
      }
      v187 += v188;
      if (!--v183) {
        break;
      }
      ((void (*)(uint64_t, uint64_t, uint64_t))v293)(v190, v187, v49);
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    v296 = (void *)MEMORY[0x263F8EE78];
  }
  uint64_t v198 = v279;
  sub_21CB87B10();
  v200 = v280;
  uint64_t v199 = v281;
  ((void (*)(char *, void, uint64_t))v250)(v280, *MEMORY[0x263F3CE48], v281);
  char v201 = sub_21CB87980();
  v202 = (void (*)(void, void))v252;
  ((void (*)(char *, uint64_t))v252)(v200, v199);
  v202(v198, v199);
  uint64_t v203 = v297;
  if ((v201 & 1) == 0) {
    goto LABEL_68;
  }
  uint64_t v204 = v289;
  if (!v289)
  {
    v288 = 0;
    uint64_t v289 = 0;
LABEL_68:
    uint64_t v295 = 0;
    goto LABEL_69;
  }
  sub_21CA57E34((uint64_t *)&unk_267C96F20);
  uint64_t v205 = swift_allocObject();
  *(_OWORD *)(v205 + 16) = xmmword_21CB8B220;
  *(void *)(v205 + 32) = v288;
  *(void *)(v205 + 40) = v204;
  uint64_t v295 = v205;
  v288 = 0;
  uint64_t v289 = 0;
LABEL_69:
  char v206 = v276;
  char v207 = v253 ^ v254;
  if (!*((void *)v203 + 2))
  {
    swift_bridgeObjectRelease();
    v297 = (char *)swift_bridgeObjectRetain();
  }
  uint64_t v208 = v267;
  uint64_t v209 = sub_21CB87AE0();
  uint64_t v210 = v270;
  MEMORY[0x21D4B4BA0](v209);
  (*(void (**)(char *, uint64_t))(v268 + 8))(v208, v269);
  sub_21CB875B0();
  uint64_t v211 = v271;
  uint64_t v212 = *(void (**)(void, void))(v271 + 8);
  v213 = v210;
  uint64_t v214 = v272;
  v212(v213, v272);
  uint64_t v215 = sub_21CB88320();
  v293 = v216;
  uint64_t v294 = v215;
  swift_bridgeObjectRelease();
  memcpy(v304, v305, sizeof(v304));
  char v303 = (char)v258;
  v217 = v266;
  sub_21CB87B40();
  sub_21CB87A30();
  double v219 = v218;
  v287(v217, v285);
  v301[0] = (uint64_t)v259;
  v301[1] = v277;
  __int16 v302 = v257;
  unsigned __int8 v300 = v207 & 1;
  char v299 = (char)v264;
  sub_21CA24E80(v286, v282, (uint64_t *)&unk_267C96ED0);
  uint64_t v220 = (uint64_t)v273;
  sub_21CB87A80();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v211 + 48))(v220, 1, v214) == 1)
  {
    sub_21CA1B88C(v220, &qword_267C96F00);
    uint64_t v221 = 0;
    uint64_t v222 = 0;
  }
  else
  {
    sub_21CB875B0();
    v212(v220, v214);
    uint64_t v221 = sub_21CB88320();
    uint64_t v222 = v223;
    swift_bridgeObjectRelease();
  }
  char v224 = v256 != v255;
  uint64_t v225 = sub_21CB87A90();
  uint64_t v227 = v226;
  char v298 = v206;
  uint64_t v228 = (uint64_t)v274;
  sub_21CB879A0();
  v229 = v283;
  FMFLocationAlert.init(identifier:location:address:addressType:radius:label:locationAlertTarget:triggerType:repeating:schedule:phoneNumbers:emails:followerIds:friendId:ckRecordName:ckRecordZoneOwnerName:acceptanceStatus:muteEndDate:)(v304, v294, (uint64_t)v293, v283, &v303, v301, &v300, &v299, v275, v219, v224, v282, (uint64_t)v296, (uint64_t)v297, v295, (uint64_t)v288, v289, v221, v222,
    v225,
    v227,
    &v298,
    v228);

  sub_21CA1B88C(v286, (uint64_t *)&unk_267C96ED0);
  return sub_21CA1B88C((uint64_t)v278, &qword_267C96F10);
}

uint64_t sub_21CB05F5C@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  id v66 = a2;
  uint64_t v5 = type metadata accessor for FMFLocationAlert();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v65 = (unsigned __int8 *)&v57 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = sub_21CB87590();
  uint64_t v8 = *(void *)(v64 - 8);
  MEMORY[0x270FA5388](v64);
  uint64_t v10 = (char *)&v57 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_21CA57E34((uint64_t *)&unk_267C951B0);
  uint64_t v12 = MEMORY[0x270FA5388](v11 - 8);
  uint64_t v60 = (uint64_t)&v57 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v59 = (uint64_t)&v57 - v15;
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v57 - v17;
  MEMORY[0x270FA5388](v16);
  id v67 = (char *)&v57 - v19;
  uint64_t v20 = sub_21CA57E34((uint64_t *)&unk_267C96ED0);
  uint64_t v21 = MEMORY[0x270FA5388](v20 - 8);
  MEMORY[0x270FA5388](v21);
  uint64_t v25 = *(void *)(a1 + 8);
  if (!v25) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(a3, 1, 1, v5);
  }
  uint64_t v26 = (char *)&v57 - v22;
  uint64_t v57 = v23;
  uint64_t v58 = v24;
  uint64_t v61 = a3;
  uint64_t v62 = v6;
  uint64_t v63 = v5;
  uint64_t v27 = *v24;
  swift_bridgeObjectRetain();
  uint64_t v28 = swift_bridgeObjectRetain();
  uint64_t v29 = v27;
  uint64_t v30 = v68;
  sub_21CB06B4C(v28, v29, v25);
  uint64_t v32 = v31;
  uint64_t v68 = v30;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!v32) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v62 + 56))(v61, 1, 1, v63);
  }
  uint64_t v33 = (uint64_t)v26;
  FMFSchedule.init(from:)(objc_msgSend(v32, sel_schedule), (uint64_t)v26);
  id v34 = objc_msgSend(v32, sel_muteEndDate);
  if (v34)
  {
    uint64_t v35 = v34;
    sub_21CB87560();

    uint64_t v36 = v64;
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v18, v10, v64);
    uint64_t v37 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56);
    v37(v18, 0, 1, v36);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v18, 1, v36) != 1)
    {
      sub_21CA1B88C((uint64_t)v18, (uint64_t *)&unk_267C951B0);
      id v39 = objc_msgSend(v32, sel_muteEndDate);
      if (v39)
      {
        uint64_t v40 = v39;
        uint64_t v41 = v59;
        sub_21CB87560();

        uint64_t v42 = 0;
      }
      else
      {
        uint64_t v42 = 1;
        uint64_t v41 = v59;
      }
      v37((char *)v41, v42, 1, v36);
      sub_21CA26A4C(v41, (uint64_t)v67, (uint64_t *)&unk_267C951B0);
      goto LABEL_14;
    }
  }
  else
  {
    uint64_t v37 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56);
    uint64_t v36 = v64;
    v37(v18, 1, 1, v64);
  }
  sub_21CA1B88C((uint64_t)v18, (uint64_t *)&unk_267C951B0);
  v37(v67, 1, 1, v36);
LABEL_14:
  if (objc_msgSend(v32, sel_shouldUseCloudKitStore))
  {
    sub_21CA3D5DC((uint64_t)v58, (uint64_t)v65, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
    id v66 = objc_msgSend(v32, sel_location);
    id v43 = objc_msgSend(v32, sel_location);
    objc_msgSend(v43, sel_horizontalAccuracy);
    uint64_t v45 = v44;

    uint64_t v64 = v45;
    double v46 = FMFAddress.init(from:)(objc_msgSend(v32, sel_placemark), (uint64_t)v72);
    nullsub_1(v72, v46);
    sub_21CA26A4C((uint64_t)v72, (uint64_t)v71, &qword_267C951E0);
    id v47 = objc_msgSend(v32, sel_label);
    uint64_t v59 = sub_21CB882F0();
    uint64_t v49 = v48;

    unsigned __int8 v70 = 4;
    LOBYTE(v47) = objc_msgSend(v32, sel_isRecurring);
    uint64_t v50 = v57;
    sub_21CA24E80(v33, v57, (uint64_t *)&unk_267C96ED0);
    unsigned __int8 v69 = 3;
    uint64_t v51 = v33;
    uint64_t v52 = (uint64_t)v67;
    uint64_t v53 = v60;
    sub_21CA24E80((uint64_t)v67, v60, (uint64_t *)&unk_267C951B0);
    unsigned __int8 v56 = v47;
    uint64_t v54 = v61;
    FMFLocationAlert.init(locationAlert:location:radius:address:label:triggerType:isOn:repeating:schedule:phoneNumbers:emails:ckRecordName:ckRecordZoneOwnerName:acceptanceStatus:muteEndDate:)(v65, v66, v64, 0, (uint64_t)v71, v59, v49, &v70, v61, 1, v56, v50, 0, 0, 0, 0, 0, 0, &v69,
      v53);

    sub_21CA1B88C(v52, (uint64_t *)&unk_267C951B0);
    sub_21CA1B88C(v51, (uint64_t *)&unk_267C96ED0);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v62 + 56))(v54, 0, 1, v63);
  }
  else
  {

    sub_21CA1B88C((uint64_t)v67, (uint64_t *)&unk_267C951B0);
    sub_21CA1B88C(v33, (uint64_t *)&unk_267C96ED0);
    uint64_t v55 = v61;
    sub_21CA3D5DC((uint64_t)v58, v61, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v62 + 56))(v55, 0, 1, v63);
  }
}

id FMFGenericResponseHandler.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

void FMFGenericResponseHandler.init()()
{
}

uint64_t sub_21CB066D0(uint64_t a1, uint64_t a2)
{
  uint64_t v17 = a2;
  uint64_t v4 = type metadata accessor for FMFLocationAlert();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v8 = *(void *)(a1 + 16);
  uint64_t v9 = MEMORY[0x263F8EE78];
  if (v8)
  {
    uint64_t v16 = v2;
    uint64_t v18 = MEMORY[0x263F8EE78];
    sub_21CA7C050(0, v8, 0);
    uint64_t v9 = v18;
    uint64_t v10 = *(void *)(sub_21CB87C50() - 8);
    uint64_t v11 = a1 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
    uint64_t v12 = *(void *)(v10 + 72);
    do
    {
      sub_21CB044D4(v17, (uint64_t)v7);
      uint64_t v18 = v9;
      unint64_t v14 = *(void *)(v9 + 16);
      unint64_t v13 = *(void *)(v9 + 24);
      if (v14 >= v13 >> 1)
      {
        sub_21CA7C050(v13 > 1, v14 + 1, 1);
        uint64_t v9 = v18;
      }
      *(void *)(v9 + 16) = v14 + 1;
      sub_21CA3DFAC((uint64_t)v7, v9+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(void *)(v5 + 72) * v14, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
      v11 += v12;
      --v8;
    }
    while (v8);
  }
  return v9;
}

uint64_t sub_21CB068B4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_21CB068FC@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *a1 + OBJC_IVAR____TtC7FMFCore25FMFGenericResponseHandler_delegate;
  swift_beginAccess();
  uint64_t result = MEMORY[0x21D4B6C80](v3);
  uint64_t v5 = *(void *)(v3 + 8);
  *a2 = result;
  a2[1] = v5;
  return result;
}

uint64_t sub_21CB06958(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *a2 + OBJC_IVAR____TtC7FMFCore25FMFGenericResponseHandler_delegate;
  swift_beginAccess();
  *(void *)(v3 + 8) = v2;
  return swift_unknownObjectWeakAssign();
}

uint64_t dispatch thunk of FMFDataUpdateDelegate.didReceive(preferences:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of FMFDataUpdateDelegate.didReceive(features:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of FMFDataUpdateDelegate.didReceive(myInfo:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of FMFDataUpdateDelegate.didReceive(config:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of FMFDataUpdateDelegate.didReceive(devices:fromServer:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 40))();
}

uint64_t dispatch thunk of FMFDataUpdateDelegate.didReceive(labels:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t dispatch thunk of FMFDataUpdateDelegate.didReceive(friends:fromServer:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 56))();
}

uint64_t dispatch thunk of FMFDataUpdateDelegate.didReceive(locationAlerts:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 64))();
}

uint64_t dispatch thunk of FMFDataUpdateDelegate.didReceive(locations:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 72))();
}

uint64_t dispatch thunk of FMFDataUpdateDelegate.didReceive(labelledLocations:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 80))();
}

uint64_t dispatch thunk of FMFDataUpdateDelegate.willSaveCacheToDisk()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 88))();
}

uint64_t method lookup function for FMFGenericResponseHandler(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for FMFGenericResponseHandler);
}

uint64_t dispatch thunk of FMFGenericResponseHandler.delegate.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xD0))();
}

uint64_t dispatch thunk of FMFGenericResponseHandler.delegate.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xD8))();
}

uint64_t dispatch thunk of FMFGenericResponseHandler.delegate.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xE0))();
}

void sub_21CB06B4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_21CB88A90();
    sub_21CA05908(0, &qword_267C96EA8);
    sub_21CA622C0();
    sub_21CB88780();
    uint64_t v5 = v30;
    uint64_t v27 = v31;
    uint64_t v6 = v32;
    int64_t v7 = v33;
    unint64_t v8 = v34;
  }
  else
  {
    uint64_t v9 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v27 = a1 + 56;
    uint64_t v10 = ~v9;
    uint64_t v11 = -v9;
    if (v11 < 64) {
      uint64_t v12 = ~(-1 << v11);
    }
    else {
      uint64_t v12 = -1;
    }
    unint64_t v8 = v12 & *(void *)(a1 + 56);
    swift_bridgeObjectRetain();
    uint64_t v6 = v10;
    int64_t v7 = 0;
  }
  uint64_t v25 = v6;
  int64_t v26 = (unint64_t)(v6 + 64) >> 6;
  int64_t v28 = v7;
  unint64_t v29 = v8;
  if (v5 < 0) {
    goto LABEL_10;
  }
LABEL_8:
  if (v8)
  {
    unint64_t v13 = __clz(__rbit64(v8));
    v8 &= v8 - 1;
    unint64_t v14 = v13 | (v7 << 6);
    goto LABEL_29;
  }
  int64_t v16 = v7 + 1;
  if (!__OFADD__(v7, 1))
  {
    if (v16 < v26)
    {
      unint64_t v17 = *(void *)(v27 + 8 * v16);
      ++v7;
      if (v17) {
        goto LABEL_28;
      }
      int64_t v7 = v16 + 1;
      if (v16 + 1 >= v26) {
        goto LABEL_36;
      }
      unint64_t v17 = *(void *)(v27 + 8 * v7);
      if (v17) {
        goto LABEL_28;
      }
      int64_t v7 = v16 + 2;
      if (v16 + 2 >= v26) {
        goto LABEL_36;
      }
      unint64_t v17 = *(void *)(v27 + 8 * v7);
      if (v17) {
        goto LABEL_28;
      }
      int64_t v7 = v16 + 3;
      if (v16 + 3 >= v26) {
        goto LABEL_36;
      }
      unint64_t v17 = *(void *)(v27 + 8 * v7);
      if (v17)
      {
LABEL_28:
        unint64_t v8 = (v17 - 1) & v17;
        unint64_t v14 = __clz(__rbit64(v17)) + (v7 << 6);
LABEL_29:
        id v15 = *(id *)(*(void *)(v5 + 48) + 8 * v14);
        if (v15)
        {
          while (1)
          {
            uint64_t v19 = a3;
            id v20 = objc_msgSend(v15, sel_identifier, v25);
            uint64_t v21 = sub_21CB882F0();
            uint64_t v23 = v22;

            a3 = v19;
            if (v21 == a2 && v23 == v19) {
              break;
            }
            char v24 = sub_21CB88F50();
            swift_bridgeObjectRelease();
            if (v24) {
              goto LABEL_36;
            }

            int64_t v28 = v7;
            unint64_t v29 = v8;
            if ((v5 & 0x8000000000000000) == 0) {
              goto LABEL_8;
            }
LABEL_10:
            if (sub_21CB88AC0())
            {
              sub_21CA05908(0, &qword_267C96EA8);
              swift_unknownObjectRetain();
              swift_dynamicCast();
              id v15 = v35;
              swift_unknownObjectRelease();
              unint64_t v8 = v29;
              if (v35) {
                continue;
              }
            }
            goto LABEL_36;
          }
          swift_bridgeObjectRelease();
        }
        goto LABEL_36;
      }
      int64_t v7 = v16 + 4;
      if (v16 + 4 < v26)
      {
        unint64_t v17 = *(void *)(v27 + 8 * v7);
        if (!v17)
        {
          uint64_t v18 = v28 + 6;
          while (v26 != v18)
          {
            unint64_t v17 = *(void *)(v27 + 8 * v18++);
            if (v17)
            {
              int64_t v7 = v18 - 1;
              goto LABEL_28;
            }
          }
          goto LABEL_36;
        }
        goto LABEL_28;
      }
    }
LABEL_36:
    sub_21CA7CFF0();
    return;
  }
  __break(1u);
}

void sub_21CB06EC0(char *a1@<X8>)
{
  sub_21CB228B0(*(void *)(v1 + 16), *(void **)(v1 + 24), a1);
}

void sub_21CB06EDC(char *a1@<X8>)
{
  sub_21CB22804(*(void *)(v1 + 16), *(void **)(v1 + 24), a1);
}

uint64_t sub_21CB06EF8()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_21CB06F38()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_21CB06F48()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 40, 7);
}

void sub_21CB06F90(char *a1@<X8>)
{
  sub_21CB22764(*(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

void sub_21CB06FAC(char *a1@<X8>)
{
  sub_21CB226C4(*(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

void sub_21CB06FC8(char *a1@<X8>)
{
  sub_21CB22624(*(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

uint64_t sub_21CB06FE4()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_21CB0701C(uint64_t a1, uint64_t a2)
{
  return sub_21CB020EC(a1, a2, *(char **)(v2 + 16));
}

uint64_t sub_21CB07024()
{
  swift_unknownObjectWeakDestroy();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_21CB0705C()
{
  swift_unknownObjectRelease();
  swift_release();

  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t sub_21CB0709C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  int64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *int64_t v7 = v2;
  v7[1] = sub_21CA73F2C;
  return sub_21CB023EC(a1, v4, v5, v6);
}

uint64_t sub_21CB07154()
{
  return sub_21CB023A8(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t FMFContactsDataController.__allocating_init(isSnapshotMode:)(int a1)
{
  uint64_t v2 = swift_allocObject();
  FMFContactsDataController.init(isSnapshotMode:)(a1);
  return v2;
}

uint64_t FMFContactsDataController.deinit()
{
  uint64_t v1 = v0;
  if (qword_267C94990 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_21CB880A0();
  sub_21CA4CC18(v2, (uint64_t)qword_267CA5368);
  swift_retain_n();
  uint64_t v3 = sub_21CB88070();
  os_log_type_t v4 = sub_21CB88880();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = swift_slowAlloc();
    uint64_t v21 = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136446466;
    uint64_t v22 = v21;
    sub_21CA57E34((uint64_t *)&unk_267C96FB0);
    uint64_t v6 = sub_21CB88310();
    sub_21CA4E450(v6, v7, &v22);
    sub_21CB889C0();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v5 + 12) = 2080;
    uint64_t v8 = *(void *)(v1 + 16);
    unint64_t v9 = *(void *)(v1 + 24);
    swift_bridgeObjectRetain();
    unint64_t v10 = sub_21CA30E24(0xCuLL, v8, v9);
    uint64_t v12 = v11;
    uint64_t v14 = v13;
    uint64_t v16 = v15;
    swift_bridgeObjectRelease();
    uint64_t v17 = MEMORY[0x21D4B5450](v10, v12, v14, v16);
    unint64_t v19 = v18;
    swift_bridgeObjectRelease();
    sub_21CA4E450(v17, v19, &v22);
    sub_21CB889C0();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_21CA00000, v3, v4, "%{public}s<%s>.deinit", (uint8_t *)v5, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x21D4B6B70](v21, -1, -1);
    MEMORY[0x21D4B6B70](v5, -1, -1);
  }
  else
  {

    swift_release_n();
  }
  swift_bridgeObjectRelease();
  sub_21CA640FC(v1 + 40);

  sub_21CA1B88C(v1 + OBJC_IVAR____TtC7FMFCore25FMFContactsDataController_lastContactSearchDate, (uint64_t *)&unk_267C951B0);
  sub_21CA1B88C(v1 + OBJC_IVAR____TtC7FMFCore25FMFContactsDataController_lastContactUpdateDate, (uint64_t *)&unk_267C951B0);
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t FMFContactsDataController.__deallocating_deinit()
{
  FMFContactsDataController.deinit();

  return swift_deallocClassInstance();
}

uint64_t sub_21CB075AC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v36 = sub_21CB87370();
  uint64_t v35 = *(void *)(v36 - 8);
  MEMORY[0x270FA5388](v36);
  uint64_t v5 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21CB87360();
  if (objc_msgSend(a1, sel_isKeyAvailable_, *MEMORY[0x263EFE050]))
  {
    id v6 = objc_msgSend(a1, sel_nickname);
    sub_21CB882F0();

    sub_21CB87350();
    id v7 = objc_msgSend(a1, sel_nickname);
    uint64_t v8 = sub_21CB882F0();
    unint64_t v10 = v9;

    swift_bridgeObjectRelease();
    uint64_t v11 = HIBYTE(v10) & 0xF;
    if ((v10 & 0x2000000000000000) == 0) {
      uint64_t v11 = v8 & 0xFFFFFFFFFFFFLL;
    }
    if (v11) {
      uint64_t v12 = 1;
    }
    else {
      uint64_t v12 = 2;
    }
  }
  else
  {
    uint64_t v12 = 2;
  }
  if (objc_msgSend(a1, sel_isKeyAvailable_, *MEMORY[0x263EFDFC8]))
  {
    id v13 = objc_msgSend(a1, sel_givenName);
    sub_21CB882F0();

    sub_21CB87320();
  }
  if (objc_msgSend(a1, sel_isKeyAvailable_, *MEMORY[0x263EFDFB8]))
  {
    id v14 = objc_msgSend(a1, sel_familyName);
    sub_21CB882F0();

    sub_21CB87330();
  }
  uint64_t v15 = (void *)sub_21CB87340();
  uint64_t v16 = self;
  id v17 = objc_msgSend(v16, sel_localizedStringFromPersonNameComponents_style_options_, v15, v12, 0);

  uint64_t v18 = sub_21CB882F0();
  uint64_t v20 = v19;

  uint64_t v21 = (void *)sub_21CB87340();
  id v22 = objc_msgSend(v16, sel_localizedStringFromPersonNameComponents_style_options_, v21, 1, 0);

  uint64_t v23 = sub_21CB882F0();
  uint64_t v25 = v24;

  id v26 = objc_msgSend(a1, sel_identifier);
  uint64_t v27 = sub_21CB882F0();
  uint64_t v29 = v28;

  uint64_t v30 = sub_21CB08D88(a1);
  unint64_t v32 = v31;
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v35 + 8))(v5, v36);
  if (v32 >> 60 != 15) {
    uint64_t result = sub_21CA66C90(v30, v32);
  }
  *(void *)a2 = v27;
  *(void *)(a2 + 8) = v29;
  *(void *)(a2 + 16) = v18;
  *(void *)(a2 + 24) = v20;
  *(unsigned char *)(a2 + 32) = v32 >> 60 != 15;
  *(void *)(a2 + 40) = v23;
  *(void *)(a2 + 48) = v25;
  return result;
}

unint64_t sub_21CB0790C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v32[1] = *(id *)MEMORY[0x263EF8340];
  uint64_t v5 = self;
  id v6 = (void *)sub_21CB882C0();
  id v7 = objc_msgSend(v5, sel_predicateForContactsMatchingName_, v6);

  uint64_t v8 = *(void **)(v3 + 56);
  if (!a3) {
    sub_21CA4D690();
  }
  swift_bridgeObjectRetain();
  sub_21CA57E34(&qword_267C95320);
  unint64_t v9 = (void *)sub_21CB884F0();
  swift_bridgeObjectRelease();
  v32[0] = 0;
  id v10 = objc_msgSend(v8, sel_unifiedContactsMatchingPredicate_keysToFetch_error_, v7, v9, v32);

  id v11 = v32[0];
  if (!v10)
  {
    id v14 = v32[0];
    uint64_t v15 = (void *)sub_21CB87400();

    swift_willThrow();
    if (qword_267C94990 != -1) {
      swift_once();
    }
    uint64_t v16 = sub_21CB880A0();
    sub_21CA4CC18(v16, (uint64_t)qword_267CA5368);
    id v17 = v15;
    id v18 = v15;
    uint64_t v19 = sub_21CB88070();
    os_log_type_t v20 = sub_21CB88880();
    if (os_log_type_enabled(v19, v20))
    {
      uint64_t v21 = (uint8_t *)swift_slowAlloc();
      id v22 = (void *)swift_slowAlloc();
      v32[0] = v22;
      *(_DWORD *)uint64_t v21 = 136315138;
      id v23 = v15;
      sub_21CA57E34((uint64_t *)&unk_267C96F50);
      uint64_t v24 = sub_21CB88310();
      sub_21CA4E450(v24, v25, (uint64_t *)v32);
      sub_21CB889C0();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_21CA00000, v19, v20, "Error getting contact - %s", v21, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x21D4B6B70](v22, -1, -1);
      MEMORY[0x21D4B6B70](v21, -1, -1);
    }
    else
    {
    }
    return 0;
  }
  sub_21CA05908(0, &qword_267C96FD8);
  unint64_t v12 = sub_21CB88510();
  id v13 = v11;

  if (v12 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v26 = sub_21CB88D10();
    swift_bridgeObjectRelease();
    if (v26) {
      goto LABEL_6;
    }
    goto LABEL_13;
  }
  if (!*(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_13:
    swift_bridgeObjectRelease();
    if (qword_267C94990 != -1) {
      swift_once();
    }
    uint64_t v27 = sub_21CB880A0();
    sub_21CA4CC18(v27, (uint64_t)qword_267CA5368);
    uint64_t v28 = sub_21CB88070();
    os_log_type_t v29 = sub_21CB88880();
    if (os_log_type_enabled(v28, v29))
    {
      uint64_t v30 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v30 = 0;
      _os_log_impl(&dword_21CA00000, v28, v29, "No contact found in store", v30, 2u);
      MEMORY[0x21D4B6B70](v30, -1, -1);
    }

    return 0;
  }
LABEL_6:

  return v12;
}

unint64_t sub_21CB07D54(void *a1, void *a2, uint64_t a3)
{
  unint64_t v6 = sub_21CA4D690();
  swift_bridgeObjectRetain();
  sub_21CA7B99C(v6);
  unint64_t v7 = sub_21CB07DE0(a1, a2, a3);
  swift_bridgeObjectRelease();
  return v7;
}

unint64_t sub_21CB07DE0(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = v3;
  v37[2] = *(id *)MEMORY[0x263EF8340];
  v37[0] = a1;
  v37[1] = a2;
  sub_21CA4D63C();
  char v6 = sub_21CB88A30();
  unint64_t v7 = self;
  if (v6)
  {
    id v8 = (id)sub_21CB882C0();
    unint64_t v9 = &selRef_predicateForContactsMatchingEmailAddress_;
  }
  else
  {
    id v10 = objc_allocWithZone(MEMORY[0x263EFEB28]);
    swift_bridgeObjectRetain();
    id v11 = (void *)sub_21CB882C0();
    swift_bridgeObjectRelease();
    id v8 = objc_msgSend(v10, sel_initWithStringValue_, v11);

    unint64_t v9 = &selRef_predicateForContactsMatchingPhoneNumber_;
  }
  id v12 = objc_msgSend(v7, *v9, v8);

  id v13 = *(void **)(v4 + 56);
  if (!a3) {
    sub_21CA4D690();
  }
  swift_bridgeObjectRetain();
  sub_21CA57E34(&qword_267C95320);
  id v14 = (void *)sub_21CB884F0();
  swift_bridgeObjectRelease();
  v37[0] = 0;
  id v15 = objc_msgSend(v13, sel_unifiedContactsMatchingPredicate_keysToFetch_error_, v12, v14, v37);

  id v16 = v37[0];
  if (!v15)
  {
    id v19 = v37[0];
    os_log_type_t v20 = (void *)sub_21CB87400();

    swift_willThrow();
    if (qword_267C94990 != -1) {
      swift_once();
    }
    uint64_t v21 = sub_21CB880A0();
    sub_21CA4CC18(v21, (uint64_t)qword_267CA5368);
    id v22 = v20;
    id v23 = v20;
    uint64_t v24 = sub_21CB88070();
    os_log_type_t v25 = sub_21CB88880();
    if (os_log_type_enabled(v24, v25))
    {
      uint64_t v26 = (uint8_t *)swift_slowAlloc();
      uint64_t v27 = (void *)swift_slowAlloc();
      v37[0] = v27;
      *(_DWORD *)uint64_t v26 = 136315138;
      id v28 = v20;
      sub_21CA57E34((uint64_t *)&unk_267C96F50);
      uint64_t v29 = sub_21CB88310();
      sub_21CA4E450(v29, v30, (uint64_t *)v37);
      sub_21CB889C0();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_21CA00000, v24, v25, "Error getting contact - %s", v26, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x21D4B6B70](v27, -1, -1);
      MEMORY[0x21D4B6B70](v26, -1, -1);
    }
    else
    {
    }
    return 0;
  }
  sub_21CA05908(0, &qword_267C96FD8);
  unint64_t v17 = sub_21CB88510();
  id v18 = v16;

  if (v17 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v31 = sub_21CB88D10();
    swift_bridgeObjectRelease();
    if (v31) {
      goto LABEL_9;
    }
    goto LABEL_16;
  }
  if (!*(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_16:
    swift_bridgeObjectRelease();
    if (qword_267C94990 != -1) {
      swift_once();
    }
    uint64_t v32 = sub_21CB880A0();
    sub_21CA4CC18(v32, (uint64_t)qword_267CA5368);
    int64_t v33 = sub_21CB88070();
    os_log_type_t v34 = sub_21CB88880();
    if (os_log_type_enabled(v33, v34))
    {
      uint64_t v35 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v35 = 0;
      _os_log_impl(&dword_21CA00000, v33, v34, "No contact found in store", v35, 2u);
      MEMORY[0x21D4B6B70](v35, -1, -1);
    }

    return 0;
  }
LABEL_9:

  return v17;
}

id sub_21CB082C8(uint64_t a1, uint64_t a2)
{
  v37[1] = *(id *)MEMORY[0x263EF8340];
  uint64_t v4 = *(void **)(v2 + 56);
  if (!a2) {
    sub_21CA4D690();
  }
  swift_bridgeObjectRetain();
  sub_21CA57E34(&qword_267C95320);
  uint64_t v5 = (void *)sub_21CB884F0();
  swift_bridgeObjectRelease();
  v37[0] = 0;
  id v6 = objc_msgSend(v4, sel__crossPlatformUnifiedMeContactWithKeysToFetch_error_, v5, v37);

  if (!v6)
  {
    id v12 = v37[0];
    id v13 = (void *)sub_21CB87400();

    swift_willThrow();
    if (qword_267C94990 != -1) {
      swift_once();
    }
    uint64_t v14 = sub_21CB880A0();
    sub_21CA4CC18(v14, (uint64_t)qword_267CA5368);
    id v15 = v13;
    id v16 = v13;
    unint64_t v17 = sub_21CB88070();
    os_log_type_t v18 = sub_21CB88880();
    if (os_log_type_enabled(v17, v18))
    {
      id v19 = (uint8_t *)swift_slowAlloc();
      os_log_type_t v20 = (void *)swift_slowAlloc();
      v37[0] = v20;
      *(_DWORD *)id v19 = 136315138;
      id v21 = v13;
      sub_21CA57E34((uint64_t *)&unk_267C96F50);
      uint64_t v22 = sub_21CB88310();
      sub_21CA4E450(v22, v23, (uint64_t *)v37);
      sub_21CB889C0();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_21CA00000, v17, v18, "Error fetching me contact - %s", v19, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x21D4B6B70](v20, -1, -1);
      MEMORY[0x21D4B6B70](v19, -1, -1);

      return 0;
    }

LABEL_23:
    return 0;
  }
  uint64_t v7 = *MEMORY[0x263EFDFF8];
  id v8 = v37[0];
  if (objc_msgSend(v6, sel_isKeyAvailable_, v7))
  {
    id v9 = v6;
    id v10 = objc_msgSend(v9, sel_identifier);
    sub_21CB882F0();

    return v6;
  }
  if (qword_267C94990 != -1) {
    swift_once();
  }
  uint64_t v24 = sub_21CB880A0();
  sub_21CA4CC18(v24, (uint64_t)qword_267CA5368);
  os_log_type_t v25 = sub_21CB88070();
  os_log_type_t v26 = sub_21CB88880();
  if (os_log_type_enabled(v25, v26))
  {
    uint64_t v27 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v27 = 0;
    _os_log_impl(&dword_21CA00000, v25, v26, "Me contact found but no image data. Will try to search by handle", v27, 2u);
    MEMORY[0x21D4B6B70](v27, -1, -1);
  }

  if (!a1)
  {
    unint64_t v17 = sub_21CB88070();
    os_log_type_t v33 = sub_21CB88880();
    if (!os_log_type_enabled(v17, v33))
    {

      goto LABEL_26;
    }
    os_log_type_t v34 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)os_log_type_t v34 = 0;
    _os_log_impl(&dword_21CA00000, v17, v33, "FMFInfo does NOT have any email handles.", v34, 2u);
    MEMORY[0x21D4B6B70](v34, -1, -1);

    goto LABEL_23;
  }
  uint64_t v28 = *(void *)(a1 + 16);
  if (!v28)
  {
LABEL_26:

    return 0;
  }
  swift_bridgeObjectRetain();
  for (uint64_t i = (void **)(a1 + 40); ; i += 2)
  {
    uint64_t v31 = *(i - 1);
    unint64_t v30 = *i;
    swift_bridgeObjectRetain();
    unint64_t v32 = sub_21CB07DE0(v31, v30, 0);
    if (v32) {
      break;
    }
    swift_bridgeObjectRelease();
    if (!--v28)
    {

      swift_bridgeObjectRelease();
      return 0;
    }
  }
  unint64_t v35 = v32;
  swift_bridgeObjectRelease();
  id v11 = sub_21CB08E10(v35);
  swift_bridgeObjectRelease();

  return v11;
}

id sub_21CB087B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  v42[1] = *(id *)MEMORY[0x263EF8340];
  id v8 = self;
  sub_21CA57E34((uint64_t *)&unk_267C96F20);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_21CB8B220;
  *(void *)(v9 + 32) = a1;
  *(void *)(v9 + 40) = a2;
  swift_bridgeObjectRetain();
  id v10 = (void *)sub_21CB884F0();
  swift_bridgeObjectRelease();
  id v11 = objc_msgSend(v8, sel_predicateForContactsWithIdentifiers_, v10);

  id v12 = *(void **)(v4 + 56);
  if (!a3) {
    sub_21CA4D690();
  }
  swift_bridgeObjectRetain();
  sub_21CA57E34(&qword_267C95320);
  id v13 = (void *)sub_21CB884F0();
  swift_bridgeObjectRelease();
  v42[0] = 0;
  id v14 = objc_msgSend(v12, sel_unifiedContactsMatchingPredicate_keysToFetch_error_, v11, v13, v42);

  id v15 = v42[0];
  if (!v14)
  {
    id v24 = v42[0];
    os_log_type_t v25 = (void *)sub_21CB87400();

    swift_willThrow();
    if (qword_267C94990 != -1) {
      swift_once();
    }
    uint64_t v26 = sub_21CB880A0();
    sub_21CA4CC18(v26, (uint64_t)qword_267CA5368);
    id v27 = v25;
    id v28 = v25;
    uint64_t v29 = sub_21CB88070();
    os_log_type_t v30 = sub_21CB88880();
    if (os_log_type_enabled(v29, v30))
    {
      uint64_t v31 = (uint8_t *)swift_slowAlloc();
      unint64_t v32 = (void *)swift_slowAlloc();
      v42[0] = v32;
      *(_DWORD *)uint64_t v31 = 136315138;
      id v33 = v25;
      sub_21CA57E34((uint64_t *)&unk_267C96F50);
      uint64_t v34 = sub_21CB88310();
      sub_21CA4E450(v34, v35, (uint64_t *)v42);
      sub_21CB889C0();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_21CA00000, v29, v30, "Error getting contact - %s", v31, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x21D4B6B70](v32, -1, -1);
      MEMORY[0x21D4B6B70](v31, -1, -1);
    }
    else
    {
    }
    return 0;
  }
  sub_21CA05908(0, &qword_267C96FD8);
  unint64_t v16 = sub_21CB88510();
  id v17 = v15;

  if (qword_267C94990 != -1) {
    swift_once();
  }
  uint64_t v18 = sub_21CB880A0();
  sub_21CA4CC18(v18, (uint64_t)qword_267CA5368);
  swift_bridgeObjectRetain();
  id v19 = sub_21CB88070();
  os_log_type_t v20 = sub_21CB88880();
  if (os_log_type_enabled(v19, v20))
  {
    id v21 = (uint8_t *)swift_slowAlloc();
    uint64_t v22 = (void *)swift_slowAlloc();
    *(_DWORD *)id v21 = 138412290;
    unint64_t v23 = (void *)sub_21CB884F0();
    v42[0] = v23;
    sub_21CB889C0();
    *uint64_t v22 = v23;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_21CA00000, v19, v20, "Got contact - %@", v21, 0xCu);
    sub_21CA57E34(&qword_267C95020);
    swift_arrayDestroy();
    MEMORY[0x21D4B6B70](v22, -1, -1);
    MEMORY[0x21D4B6B70](v21, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease();
  }
  if (v16 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v37 = sub_21CB88D10();
    swift_bridgeObjectRelease();
    if (v37) {
      goto LABEL_15;
    }
    goto LABEL_18;
  }
  if (!*(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_18:
    swift_bridgeObjectRelease();
    uint64_t v38 = sub_21CB88070();
    os_log_type_t v39 = sub_21CB88880();
    if (os_log_type_enabled(v38, v39))
    {
      uint64_t v40 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v40 = 0;
      _os_log_impl(&dword_21CA00000, v38, v39, "No contact found in store", v40, 2u);
      MEMORY[0x21D4B6B70](v40, -1, -1);
    }

    return 0;
  }
LABEL_15:
  id v36 = sub_21CB08E10(v16);

  swift_bridgeObjectRelease();
  return v36;
}

uint64_t sub_21CB08D88(void *a1)
{
  if (*(unsigned char *)(v1 + 32) == 1) {
    id v2 = objc_msgSend(a1, sel_thumbnailImageData);
  }
  else {
    id v2 = objc_msgSend(a1, sel_imageData);
  }
  id v3 = v2;
  if (!v3) {
    return 0;
  }
  uint64_t v4 = sub_21CB874C0();

  return v4;
}

id sub_21CB08E10(unint64_t a1)
{
  if (a1 >> 62) {
    goto LABEL_16;
  }
  uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v3; uint64_t v3 = sub_21CB88D10())
  {
    int v4 = *(unsigned __int8 *)(v1 + 32);
    unint64_t v5 = a1 & 0xC000000000000001;
    uint64_t v6 = 4;
    while (1)
    {
      uint64_t v1 = v6 - 4;
      id v7 = v5 ? (id)MEMORY[0x21D4B5CA0](v6 - 4, a1) : *(id *)(a1 + 8 * v6);
      id v8 = v7;
      uint64_t v9 = v6 - 3;
      if (__OFADD__(v1, 1)) {
        break;
      }
      if (v4)
      {
        id v10 = objc_msgSend(v7, sel_thumbnailImageData);
        if (v10) {
          goto LABEL_14;
        }
      }
      else
      {
        id v10 = objc_msgSend(v7, sel_imageData);
        if (v10)
        {
LABEL_14:
          id v11 = v10;
          uint64_t v12 = sub_21CB874C0();
          unint64_t v14 = v13;

          sub_21CA36618(v12, v14);
          swift_bridgeObjectRelease();
          return v8;
        }
      }

      ++v6;
      if (v9 == v3)
      {
        swift_bridgeObjectRelease();
        goto LABEL_18;
      }
    }
    __break(1u);
LABEL_16:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  unint64_t v5 = a1 & 0xC000000000000001;
LABEL_18:
  if (v5)
  {
LABEL_27:
    JUMPOUT(0x21D4B5CA0);
  }
  if (!*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
    goto LABEL_27;
  }
  unint64_t v16 = *(void **)(a1 + 32);

  return v16;
}

uint64_t sub_21CB08FD8(uint64_t (*a1)(void *), uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v6 = HIBYTE(a4) & 0xF;
  v13[2] = a3;
  v13[3] = a4;
  if ((a4 & 0x2000000000000000) == 0) {
    uint64_t v6 = a3 & 0xFFFFFFFFFFFFLL;
  }
  v13[4] = 0;
  v13[5] = v6;
  swift_bridgeObjectRetain();
  uint64_t v7 = sub_21CB883F0();
  if (v8)
  {
    uint64_t v9 = v8;
    while (1)
    {
      v13[0] = v7;
      v13[1] = v9;
      char v10 = a1(v13);
      swift_bridgeObjectRelease();
      if (v4 || (v10 & 1) != 0) {
        break;
      }
      uint64_t v7 = sub_21CB883F0();
      uint64_t v9 = v11;
      if (!v11) {
        goto LABEL_8;
      }
    }
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
LABEL_8:
    swift_bridgeObjectRelease();
    return 0;
  }
}

uint64_t sub_21CB090A8(uint64_t result, uint64_t a2)
{
  *(void *)(result + 16) = a2;
  *(void *)(result + 24) = 2 * a2;
  return result;
}

uint64_t sub_21CB090B8()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t dispatch thunk of FMFContactsDataControllerDelegate.contactsDataMayHaveChanged()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of FMFContactsDataControllerDelegate.updated(contactMatching:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t sub_21CB09128()
{
  return type metadata accessor for FMFContactsDataController();
}

uint64_t method lookup function for FMFContactsDataController(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for FMFContactsDataController);
}

uint64_t dispatch thunk of FMFContactsDataController.__allocating_init(isSnapshotMode:)()
{
  return (*(uint64_t (**)(void))(v0 + 240))();
}

uint64_t dispatch thunk of FMFContactsDataController.matchContacts(for:currentMatching:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 256))();
}

uint64_t dispatch thunk of FMFContactsDataController.contact(for:keysToFetch:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 272))();
}

uint64_t dispatch thunk of FMFContactsDataController.searchInStore(name:keysToFetch:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 280))();
}

uint64_t dispatch thunk of FMFContactsDataController.searchInStore(handle:additionalKeysToFetch:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 288))();
}

uint64_t dispatch thunk of FMFContactsDataController.searchInStore(handle:keysToFetch:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 296))();
}

uint64_t dispatch thunk of FMFContactsDataController.fetchMeContact(handles:keysToFetch:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 304))();
}

uint64_t sub_21CB09264(uint64_t a1, void *a2)
{
  uint64_t v4 = sub_21CA57E34(&qword_267C95400);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v55 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(a1 + 32);
  swift_bridgeObjectRetain_n();
  uint64_t v8 = sub_21CA4D61C(v7);
  swift_bridgeObjectRelease();
  uint64_t v68 = v8;
  sub_21CA4CDF4((uint64_t *)&v68);
  swift_bridgeObjectRelease();
  uint64_t v9 = (uint64_t)v68;
  uint64_t v10 = v68[2];
  if (v10)
  {
    unint64_t v11 = 0;
    uint64_t v60 = (uint64_t)v68;
    uint64_t v61 = v68 + 4;
    uint64_t v57 = v6;
    uint64_t v58 = a2;
    uint64_t v56 = v10;
    while (v11 < *(void *)(v9 + 16))
    {
      uint64_t v12 = &v61[2 * v11];
      unint64_t v13 = v12[1];
      uint64_t v65 = *v12;
      uint64_t v68 = (void *)v65;
      unint64_t v69 = v13;
      uint64_t v72 = 64;
      unint64_t v73 = 0xE100000000000000;
      uint64_t v14 = sub_21CB87630();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v6, 1, 1, v14);
      unint64_t v15 = sub_21CA4D63C();
      unint64_t v66 = v13;
      swift_bridgeObjectRetain();
      uint64_t v53 = (void *)v15;
      unint64_t v54 = v15;
      sub_21CB88A20();
      LOBYTE(v15) = v16;
      sub_21CA1B88C((uint64_t)v6, &qword_267C95400);
      swift_bridgeObjectRelease();
      if (v15)
      {
        id v31 = objc_msgSend(a2, sel_phoneNumbers);
        sub_21CA57E34(&qword_267C97010);
        unint64_t v32 = sub_21CB88510();

        unint64_t v33 = v32;
        if (v32 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v34 = sub_21CB88D10();
          swift_bridgeObjectRelease();
          if (v34)
          {
LABEL_21:
            unint64_t v59 = v11;
            unint64_t v35 = 0;
            uint64_t v63 = v32 & 0xFFFFFFFFFFFFFF8;
            unint64_t v64 = v32 & 0xC000000000000001;
            unint64_t v62 = v32 + 32;
            while (1)
            {
              if (v64)
              {
                id v36 = (id)MEMORY[0x21D4B5CA0](v35, v33);
              }
              else
              {
                if (v35 >= *(void *)(v63 + 16)) {
                  goto LABEL_53;
                }
                id v36 = *(id *)(v62 + 8 * v35);
              }
              uint64_t v22 = v36;
              if (__OFADD__(v35++, 1)) {
                goto LABEL_52;
              }
              id v38 = objc_msgSend(v36, sel_value);
              id v39 = objc_msgSend(v38, sel_stringValue);

              uint64_t v40 = sub_21CB882F0();
              unint64_t v42 = v41;

              unint64_t v43 = 0xE000000000000000;
              uint64_t v72 = 0;
              unint64_t v73 = 0xE000000000000000;
              uint64_t v44 = HIBYTE(v42) & 0xF;
              if ((v42 & 0x2000000000000000) == 0) {
                uint64_t v44 = v40 & 0xFFFFFFFFFFFFLL;
              }
              uint64_t v68 = (void *)v40;
              unint64_t v69 = v42;
              uint64_t v70 = 0;
              uint64_t v71 = v44;
              uint64_t v45 = sub_21CB883F0();
              uint64_t v47 = v46;
              if (v46)
              {
                uint64_t v48 = v45;
                do
                {
                  v67[0] = v48;
                  v67[1] = v47;
                  MEMORY[0x270FA5388](v45);
                  uint64_t v53 = v67;
                  if ((sub_21CB08FD8(sub_21CB09880, (uint64_t)(&v55 - 4), 2336, 0xE200000000000000) & 1) == 0) {
                    MEMORY[0x21D4B54C0](v48, v47);
                  }
                  swift_bridgeObjectRelease();
                  uint64_t v45 = sub_21CB883F0();
                  uint64_t v48 = v45;
                  uint64_t v47 = v49;
                }
                while (v49);
                uint64_t v47 = v72;
                unint64_t v43 = v73;
              }
              swift_bridgeObjectRelease();
              uint64_t v68 = (void *)v47;
              unint64_t v69 = v43;
              if (sub_21CB88480() == v65 && v50 == v66) {
                break;
              }
              char v51 = sub_21CB88F50();
              swift_bridgeObjectRelease();

              if (v51)
              {
LABEL_49:
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                goto LABEL_50;
              }
              if (v35 == v34)
              {
                uint64_t v6 = v57;
                a2 = v58;
                uint64_t v10 = v56;
                unint64_t v11 = v59;
                goto LABEL_40;
              }
            }
LABEL_48:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease_n();

LABEL_50:
            swift_release();
            return 1;
          }
        }
        else
        {
          uint64_t v34 = *(void *)((v32 & 0xFFFFFFFFFFFFFF8) + 0x10);
          if (v34) {
            goto LABEL_21;
          }
        }
      }
      else
      {
        id v17 = objc_msgSend(a2, sel_emailAddresses);
        sub_21CA57E34(&qword_267C97010);
        unint64_t v18 = sub_21CB88510();

        if (v18 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v19 = sub_21CB88D10();
          swift_bridgeObjectRelease();
          if (v19)
          {
LABEL_7:
            unint64_t v59 = v11;
            unint64_t v64 = v18 & 0xC000000000000001;
            uint64_t v20 = 4;
            while (1)
            {
              id v21 = v64 ? (id)MEMORY[0x21D4B5CA0](v20 - 4, v18) : *(id *)(v18 + 8 * v20);
              uint64_t v22 = v21;
              uint64_t v23 = v20 - 3;
              if (__OFADD__(v20 - 4, 1)) {
                break;
              }
              unint64_t v24 = v18;
              id v25 = objc_msgSend(v21, sel_value);
              uint64_t v26 = sub_21CB882F0();
              uint64_t v28 = v27;

              if (v26 == v65 && v28 == v66) {
                goto LABEL_48;
              }
              char v30 = sub_21CB88F50();
              swift_bridgeObjectRelease();

              unint64_t v18 = v24;
              if (v30) {
                goto LABEL_49;
              }
              ++v20;
              if (v23 == v19)
              {
                unint64_t v11 = v59;
                uint64_t v9 = v60;
                uint64_t v6 = v57;
                a2 = v58;
                uint64_t v10 = v56;
                goto LABEL_41;
              }
            }
            __break(1u);
LABEL_52:
            __break(1u);
LABEL_53:
            __break(1u);
            break;
          }
        }
        else
        {
          uint64_t v19 = *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10);
          if (v19) {
            goto LABEL_7;
          }
        }
      }
LABEL_40:
      uint64_t v9 = v60;
LABEL_41:
      ++v11;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v11 == v10) {
        goto LABEL_47;
      }
    }
    __break(1u);
    uint64_t result = swift_release();
    __break(1u);
  }
  else
  {
LABEL_47:
    swift_release();
    return 0;
  }
  return result;
}

uint64_t sub_21CB09880(void *a1)
{
  id v2 = *(void **)(v1 + 16);
  if (*a1 == *v2 && a1[1] == v2[1]) {
    return 1;
  }
  else {
    return sub_21CB88F50() & 1;
  }
}

uint64_t FMFBaseAction.init(requiresRefresh:)(char a1)
{
  *(unsigned char *)(v1 + 16) = a1;
  return v1;
}

uint64_t FMFBaseAction.deinit()
{
  return v0;
}

uint64_t sub_21CB098EC()
{
  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t sub_21CB09920(char a1)
{
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v1 + 16) = a1;
  return result;
}

uint64_t (*sub_21CB09960())()
{
  return j__swift_endAccess;
}

uint64_t FMFBaseAction.__allocating_init(requiresRefresh:)(char a1)
{
  uint64_t result = swift_allocObject();
  *(unsigned char *)(result + 16) = a1;
  return result;
}

uint64_t sub_21CB099E8()
{
  return 60;
}

uint64_t FMFBaseAction.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_21CB09AD8()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 120))();
}

uint64_t sub_21CB09B1C@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t result = swift_beginAccess();
  *a2 = *(unsigned char *)(v3 + 16);
  return result;
}

uint64_t sub_21CB09B64(char *a1, uint64_t *a2)
{
  char v2 = *a1;
  uint64_t v3 = *a2;
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v3 + 16) = v2;
  return result;
}

uint64_t type metadata accessor for FMFBaseAction()
{
  return self;
}

uint64_t method lookup function for FMFBaseAction(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for FMFBaseAction);
}

uint64_t dispatch thunk of FMFBaseAction.requiresRefresh.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 88))();
}

uint64_t dispatch thunk of FMFBaseAction.requiresRefresh.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 96))();
}

uint64_t dispatch thunk of FMFBaseAction.requiresRefresh.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 104))();
}

uint64_t dispatch thunk of FMFBaseAction.__allocating_init(requiresRefresh:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t dispatch thunk of FMFBaseAction.debugDescription.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t sub_21CB09C88(uint64_t a1)
{
  uint64_t v30 = sub_21CA57E34(&qword_267C97100);
  uint64_t v3 = *(void *)(v30 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v30);
  uint64_t v27 = (uint64_t)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v28 = (char *)&v25 - v6;
  uint64_t v7 = type metadata accessor for FMFLocation();
  uint64_t v29 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v10 = *(void *)(a1 + 16);
  uint64_t v11 = MEMORY[0x263F8EE78];
  if (v10)
  {
    uint64_t v25 = v1;
    uint64_t v31 = MEMORY[0x263F8EE78];
    sub_21CA3D644(0, v10, 0);
    uint64_t v12 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    uint64_t v26 = *(void *)(v3 + 72);
    uint64_t v13 = (uint64_t)v28;
    do
    {
      uint64_t v14 = v9;
      uint64_t v15 = v30;
      uint64_t v16 = *(int *)(v30 + 48);
      uint64_t v17 = v13 + v16;
      uint64_t v18 = v12 + v16;
      sub_21CA57180(v12, v13, (uint64_t (*)(void))type metadata accessor for FMFLocation);
      sub_21CA24E80(v18, v17, (uint64_t *)&unk_267C96EF0);
      uint64_t v19 = *(int *)(v15 + 48);
      uint64_t v9 = v14;
      uint64_t v20 = v27;
      uint64_t v21 = v27 + v19;
      sub_21CA5913C(v13, v27, (uint64_t (*)(void))type metadata accessor for FMFLocation);
      sub_21CA26A4C(v17, v21, (uint64_t *)&unk_267C96EF0);
      sub_21CA57180(v20, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for FMFLocation);
      sub_21CA1B88C(v20, &qword_267C97100);
      uint64_t v11 = v31;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_21CA3D644(0, *(void *)(v11 + 16) + 1, 1);
        uint64_t v11 = v31;
      }
      unint64_t v23 = *(void *)(v11 + 16);
      unint64_t v22 = *(void *)(v11 + 24);
      if (v23 >= v22 >> 1)
      {
        sub_21CA3D644(v22 > 1, v23 + 1, 1);
        uint64_t v11 = v31;
      }
      *(void *)(v11 + 16) = v23 + 1;
      sub_21CA5913C((uint64_t)v9, v11+ ((*(unsigned __int8 *)(v29 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80))+ *(void *)(v29 + 72) * v23, (uint64_t (*)(void))type metadata accessor for FMFLocation);
      v12 += v26;
      --v10;
    }
    while (v10);
  }
  return v11;
}

uint64_t sub_21CB09F98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_21CB88640();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_21CB88630();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_21CA1B88C(a1, &qword_267C95028);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_21CB885F0();
    swift_unknownObjectRelease();
  }
LABEL_5:
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_21CB0A144(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_21CB88640();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_21CB88630();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_21CA1B88C(a1, &qword_267C95028);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_21CB885F0();
    swift_unknownObjectRelease();
  }
LABEL_5:
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  sub_21CA57E34(&qword_267C97148);
  return swift_task_create();
}

uint64_t sub_21CB0A2F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v21 = a2;
  uint64_t v23 = a3;
  uint64_t v4 = type metadata accessor for FMFLocation();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x270FA5388](v6);
  uint64_t v11 = (uint64_t *)((char *)&v20 - v10);
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v20 - v12;
  uint64_t v14 = sub_21CA57E34((uint64_t *)&unk_267C96EF0);
  MEMORY[0x270FA5388](v14 - 8);
  uint64_t v16 = (char *)&v20 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = v21;
  sub_21CA24E80(a1, (uint64_t)v16, (uint64_t *)&unk_267C96EF0);
  uint64_t v18 = 1;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v16, 1, v4) != 1)
  {
    sub_21CA5913C((uint64_t)v16, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for FMFLocation);
    sub_21CA57180((uint64_t)v13, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for FMFLocation);
    sub_21CA57180((uint64_t)v13, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FMFLocation);
    sub_21CA26A4C(v17, (uint64_t)v22, &qword_267C951E0);
    sub_21CA81C54(v17, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_21CA5E3D0);
    FMFLocation.init(from:updatedLocation:address:)(v11, (uint64_t)v8, (uint64_t)v22, v23);
    sub_21CA582D8((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for FMFLocation);
    uint64_t v18 = 0;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56))(v23, v18, 1, v4);
  return sub_21CA81C54(v17, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_21CA1358C);
}

uint64_t sub_21CB0A588(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_21CB88640();
  uint64_t v6 = *(void *)(v5 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, 1, v5) != 1)
  {
    sub_21CB88630();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
    if (!*(void *)(a3 + 16)) {
      return swift_task_create();
    }
    goto LABEL_3;
  }
  sub_21CA1B88C(a1, &qword_267C95028);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_21CB885F0();
    swift_unknownObjectRelease();
  }
  return swift_task_create();
}

uint64_t sub_21CB0A710(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_21CB88640();
  uint64_t v6 = *(void *)(v5 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, 1, v5) != 1)
  {
    sub_21CB88630();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_21CA1B88C(a1, &qword_267C95028);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_21CB885F0();
    swift_unknownObjectRelease();
  }
LABEL_5:
  sub_21CA57E34(&qword_267C97148);
  return swift_task_create();
}

unint64_t sub_21CB0A898(uint64_t a1)
{
  uint64_t v39 = sub_21CA57E34(&qword_267C97100);
  uint64_t v3 = *(void *)(v39 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v39);
  uint64_t v36 = (uint64_t)v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v31 - v6;
  uint64_t v8 = sub_21CA57E34((uint64_t *)&unk_267C96EF0);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = type metadata accessor for FMFLocation();
  uint64_t v11 = MEMORY[0x270FA5388](v38);
  uint64_t v37 = (uint64_t)v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v33 = (uint64_t)v31 - v14;
  uint64_t v15 = *(void *)(a1 + 16);
  if (!v15) {
    return MEMORY[0x263F8EE78];
  }
  v31[2] = v1;
  uint64_t v32 = v13;
  uint64_t v16 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  uint64_t v34 = *(void *)(v3 + 72);
  unint64_t v35 = (unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
  v31[1] = a1;
  swift_bridgeObjectRetain();
  unint64_t v17 = MEMORY[0x263F8EE78];
  do
  {
    uint64_t v18 = v39;
    uint64_t v19 = *(int *)(v39 + 48);
    uint64_t v20 = (uint64_t)&v7[v19];
    uint64_t v21 = v16 + v19;
    sub_21CA57180(v16, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for FMFLocation);
    sub_21CA24E80(v21, v20, (uint64_t *)&unk_267C96EF0);
    uint64_t v22 = *(int *)(v18 + 48);
    uint64_t v23 = v36;
    uint64_t v24 = v36 + v22;
    sub_21CA5913C((uint64_t)v7, v36, (uint64_t (*)(void))type metadata accessor for FMFLocation);
    sub_21CA26A4C(v20, v24, (uint64_t *)&unk_267C96EF0);
    sub_21CA24E80(v24, (uint64_t)v10, (uint64_t *)&unk_267C96EF0);
    sub_21CA1B88C(v23, &qword_267C97100);
    if ((*v35)(v10, 1, v38) == 1)
    {
      sub_21CA1B88C((uint64_t)v10, (uint64_t *)&unk_267C96EF0);
    }
    else
    {
      uint64_t v25 = v33;
      sub_21CA5913C((uint64_t)v10, v33, (uint64_t (*)(void))type metadata accessor for FMFLocation);
      sub_21CA5913C(v25, v37, (uint64_t (*)(void))type metadata accessor for FMFLocation);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v17 = sub_21CA47FB4(0, *(void *)(v17 + 16) + 1, 1, v17);
      }
      unint64_t v27 = *(void *)(v17 + 16);
      unint64_t v26 = *(void *)(v17 + 24);
      uint64_t v28 = v32;
      if (v27 >= v26 >> 1)
      {
        uint64_t v29 = sub_21CA47FB4(v26 > 1, v27 + 1, 1, v17);
        uint64_t v28 = v32;
        unint64_t v17 = v29;
      }
      *(void *)(v17 + 16) = v27 + 1;
      sub_21CA5913C(v37, v17+ ((*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80))+ *(void *)(v28 + 72) * v27, (uint64_t (*)(void))type metadata accessor for FMFLocation);
    }
    v16 += v34;
    --v15;
  }
  while (v15);
  swift_bridgeObjectRelease();
  return v17;
}

uint64_t sub_21CB0ACC4()
{
  return swift_bridgeObjectRetain();
}

unint64_t FMFCorePreferenceDomain.getter()
{
  return 0xD000000000000024;
}

uint64_t sub_21CB0ACEC()
{
  uint64_t v0 = sub_21CB14F70((uint64_t)&unk_26CD69478);
  uint64_t result = swift_arrayDestroy();
  qword_267C97030 = v0;
  return result;
}

uint64_t FMFBundleIdsAllowedToUseCache.getter()
{
  if (qword_267C94970 != -1) {
    swift_once();
  }

  return swift_bridgeObjectRetain();
}

uint64_t FMFManager.identifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_21CB0ADC4(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = (void *)*a2;
  swift_beginAccess();
  v3[5] = v2;
  swift_unknownObjectWeakAssign();
  uint64_t v4 = v3[9];
  uint64_t v5 = v3[10];
  v7[0] = v3[8];
  v7[1] = v4;
  v7[2] = v5;
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_21CA0C7DC(v7);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_21CB0AE80()
{
  swift_beginAccess();
  return MEMORY[0x21D4B6C80](v0 + 32);
}

void (*sub_21CB0AEC8(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[5] = v1;
  swift_beginAccess();
  uint64_t v4 = MEMORY[0x21D4B6C80](v1 + 32);
  uint64_t v5 = *(void *)(v1 + 40);
  v3[3] = v4;
  void v3[4] = v5;
  return sub_21CB0AF48;
}

void sub_21CB0AF48(uint64_t a1, char a2)
{
  uint64_t v3 = *(void **)a1;
  *(void *)(*(void *)(*(void *)a1 + 40) + 40) = *(void *)(*(void *)a1 + 32);
  swift_unknownObjectWeakAssign();
  if (a2)
  {
    swift_unknownObjectRelease();
    swift_endAccess();
  }
  else
  {
    uint64_t v4 = (void *)v3[5];
    swift_endAccess();
    swift_unknownObjectRelease();
    uint64_t v5 = v4[9];
    uint64_t v6 = v4[10];
    v7[0] = v4[8];
    v7[1] = v5;
    v7[2] = v6;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_21CA0C7DC(v7);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

  free(v3);
}

uint64_t sub_21CB0B028(uint64_t a1, void *a2)
{
  uint64_t v4 = sub_21CA57E34(&qword_267C96F10);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21CA24E80(a1, (uint64_t)v6, &qword_267C96F10);
  uint64_t v7 = *a2 + OBJC_IVAR____TtC7FMFCore10FMFManager_selectedFriend;
  swift_beginAccess();
  sub_21CA626D0((uint64_t)v6, v7);
  swift_endAccess();
  sub_21CA09D20();
  return sub_21CA1B88C((uint64_t)v6, &qword_267C96F10);
}

uint64_t sub_21CB0B100@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC7FMFCore10FMFManager_selectedFriend;
  swift_beginAccess();
  return sub_21CA24E80(v3, a1, &qword_267C96F10);
}

uint64_t (*sub_21CB0B15C(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_21CB0B1BC;
}

uint64_t sub_21CB0B1BC(uint64_t a1, char a2)
{
  uint64_t result = swift_endAccess();
  if ((a2 & 1) == 0) {
    return sub_21CA09D20();
  }
  return result;
}

uint64_t sub_21CB0B1F0()
{
  return sub_21CA0B570(&qword_267C94EC0);
}

uint64_t sub_21CB0B210@<X0>(uint64_t a1@<X8>)
{
  return sub_21CB0B228(&OBJC_IVAR____TtC7FMFCore23FMFMyLocationController_myLocation, a1);
}

uint64_t sub_21CB0B21C@<X0>(uint64_t a1@<X8>)
{
  return sub_21CB0B228(&OBJC_IVAR____TtC7FMFCore23FMFMyLocationController_myUnshiftedLocation, a1);
}

uint64_t sub_21CB0B228@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *(void *)(v2 + 184);
  if (v4)
  {
    uint64_t v5 = v4 + *a1;
    swift_beginAccess();
    return sub_21CA24E80(v5, a2, (uint64_t *)&unk_267C96EF0);
  }
  else
  {
    uint64_t v7 = type metadata accessor for FMFLocation();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    return v8(a2, 1, 1, v7);
  }
}

uint64_t sub_21CB0B2E4()
{
  swift_retain();
  sub_21CA57E34(&qword_267C95CC8);
  sub_21CB88910();

  return swift_release();
}

uint64_t sub_21CB0B36C()
{
  swift_retain();
  sub_21CA57E34(&qword_267C95CF0);
  sub_21CB88910();

  return swift_release();
}

uint64_t sub_21CB0B3F4()
{
  swift_retain();
  sub_21CA57E34((uint64_t *)&unk_267C96EE0);
  sub_21CB88910();

  return swift_release();
}

uint64_t sub_21CB0B47C()
{
  return sub_21CA0B570(&qword_267C94E88);
}

uint64_t sub_21CB0B49C()
{
  return sub_21CA0B570(&qword_267C95C98);
}

uint64_t sub_21CB0B4BC()
{
  return sub_21CA0B570(&qword_267C94E70);
}

uint64_t sub_21CB0B4DC()
{
  return swift_retain();
}

uint64_t sub_21CB0B4E8()
{
  return sub_21CA0B570(&qword_267C95D50);
}

uint64_t FMFManager.__allocating_init(configuration:tabInfo:)(uint64_t a1, long long *a2)
{
  uint64_t v4 = swift_allocObject();
  FMFManager.init(configuration:tabInfo:)(a1, a2);
  return v4;
}

uint64_t sub_21CB0B558(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 16) = a1;
  *(void *)(v4 + 24) = a4;
  return MEMORY[0x270FA2498](sub_21CB0B578, 0, 0);
}

uint64_t sub_21CB0B578()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 24) + 208);
  *(void *)(v0 + 32) = v1;
  if (v1)
  {
    swift_retain();
    return MEMORY[0x270FA2498](sub_21CB0B630, v1, 0);
  }
  else
  {
    **(unsigned char **)(v0 + 16) = 1;
    uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
    return v2();
  }
}

uint64_t sub_21CB0B630()
{
  *(void *)(*(void *)(v0 + 32) + OBJC_IVAR____TtC7FMFCore27FMFSecureLocationController_delegate + 8) = &off_26CD6DF28;
  swift_unknownObjectWeakAssign();
  swift_release();
  return MEMORY[0x270FA2498](sub_21CB0B6BC, 0, 0);
}

uint64_t sub_21CB0B6BC()
{
  **(unsigned char **)(v0 + 16) = *(void *)(v0 + 32) == 0;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t FMFManager.deinit()
{
  uint64_t v1 = v0;
  if (qword_267C94990 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_21CB880A0();
  sub_21CA4CC18(v2, (uint64_t)qword_267CA5368);
  swift_retain_n();
  uint64_t v3 = sub_21CB88070();
  os_log_type_t v4 = sub_21CB88880();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v19 = swift_slowAlloc();
    uint64_t v20 = v19;
    *(_DWORD *)uint64_t v5 = 136315138;
    uint64_t v6 = *(void *)(v1 + 16);
    unint64_t v7 = *(void *)(v1 + 24);
    swift_bridgeObjectRetain();
    unint64_t v8 = sub_21CA30E24(0xCuLL, v6, v7);
    uint64_t v10 = v9;
    uint64_t v12 = v11;
    uint64_t v14 = v13;
    swift_bridgeObjectRelease();
    uint64_t v15 = MEMORY[0x21D4B5450](v8, v10, v12, v14);
    unint64_t v17 = v16;
    swift_bridgeObjectRelease();
    sub_21CA4E450(v15, v17, &v20);
    sub_21CB889C0();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_21CA00000, v3, v4, "FMFManager<%s>.deinit", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x21D4B6B70](v19, -1, -1);
    MEMORY[0x21D4B6B70](v5, -1, -1);
  }
  else
  {

    swift_release_n();
  }
  swift_bridgeObjectRelease();
  sub_21CA640FC(v1 + 32);

  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  swift_release();
  swift_release();

  swift_release();
  sub_21CA2B0D0(v1 + 136);
  swift_release();

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_21CA1B88C(v1 + OBJC_IVAR____TtC7FMFCore10FMFManager_selectedFriend, &qword_267C96F10);
  return v1;
}

uint64_t FMFManager.__deallocating_deinit()
{
  FMFManager.deinit();

  return swift_deallocClassInstance();
}

uint64_t sub_21CB0BA08()
{
  v1[0] = MEMORY[0x263F8EE78];
  v1[1] = MEMORY[0x263F8EE78];
  v1[2] = MEMORY[0x263F8EE78];
  sub_21CA0C7DC(v1);
  return swift_bridgeObjectRelease_n();
}

uint64_t sub_21CB0BA50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 24) = a1;
  *(void *)(v4 + 32) = a4;
  return MEMORY[0x270FA2498](sub_21CB0BA70, 0, 0);
}

uint64_t sub_21CB0BA70()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 32) + 208);
  *(void *)(v0 + 40) = v1;
  if (v1)
  {
    swift_retain();
    swift_retain();
    sub_21CA57E34(&qword_267C95D50);
    sub_21CB88910();
    swift_release();
    uint64_t v2 = *(void *)(v0 + 16);
    *(void *)(v0 + 48) = v2;
    uint64_t v3 = (void *)swift_task_alloc();
    *(void *)(v0 + 56) = v3;
    *uint64_t v3 = v0;
    v3[1] = sub_21CB0BBCC;
    return sub_21CA0CF38(v2);
  }
  else
  {
    **(unsigned char **)(v0 + 24) = 1;
    uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
    return v5();
  }
}

uint64_t sub_21CB0BBCC()
{
  *(void *)(*(void *)v1 + 64) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_21CB0BD1C;
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v2 = sub_21CB0BCF0;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_21CB0BCF0()
{
  **(unsigned char **)(v0 + 24) = *(void *)(v0 + 40) == 0;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21CB0BD1C()
{
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_21CB0BD88()
{
  swift_beginAccess();
  sub_21CA219EC(v0 + 136, (uint64_t)v4);
  uint64_t v1 = v5;
  uint64_t v2 = v6;
  sub_21CA2B2CC(v4, v5);
  (*(void (**)(uint64_t, uint64_t))(v2 + 56))(v1, v2);
  return sub_21CA2B0D0((uint64_t)v4);
}

uint64_t sub_21CB0BE10()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_21CB88100();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_21CB88150();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t result = MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned char *)(v1 + 225) & 1) == 0)
  {
    v16[0] = v3;
    if (qword_267C94990 != -1) {
      swift_once();
    }
    uint64_t v11 = sub_21CB880A0();
    sub_21CA4CC18(v11, (uint64_t)qword_267CA5368);
    uint64_t v12 = sub_21CB88070();
    os_log_type_t v13 = sub_21CB88880();
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v14 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v14 = 0;
      _os_log_impl(&dword_21CA00000, v12, v13, "FMFManager: stop refreshing", v14, 2u);
      MEMORY[0x21D4B6B70](v14, -1, -1);
    }

    *(unsigned char *)(v1 + 224) = 0;
    aBlock[4] = sub_21CB1522C;
    aBlock[5] = v1;
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_21CA1B084;
    uint64_t aBlock[3] = &unk_26CD6DC88;
    uint64_t v15 = _Block_copy(aBlock);
    swift_retain();
    sub_21CB88120();
    v16[1] = MEMORY[0x263F8EE78];
    sub_21CA5DEAC((unint64_t *)&qword_267C96FC0, MEMORY[0x263F8F030]);
    sub_21CA57E34((uint64_t *)&unk_267C96DD0);
    sub_21CA356BC((unint64_t *)&qword_267C96FD0, (uint64_t *)&unk_267C96DD0);
    sub_21CB88A60();
    MEMORY[0x21D4B5A20](0, v10, v5, v15);
    _Block_release(v15);
    (*(void (**)(char *, uint64_t))(v16[0] + 8))(v5, v2);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    return swift_release();
  }
  return result;
}

uint64_t sub_21CB0C17C(uint64_t a1)
{
  uint64_t v2 = sub_21CA57E34(&qword_267C95028);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  sub_21CA6F86C();
  swift_release();
  swift_retain();
  sub_21CB249BC();
  swift_release();
  swift_retain();
  sub_21CB24BC8();
  swift_release();
  uint64_t result = sub_21CA33A7C();
  if (result)
  {
    uint64_t v6 = sub_21CB88640();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v4, 1, 1, v6);
    uint64_t v7 = (void *)swift_allocObject();
    v7[2] = 0;
    uint64_t v7[3] = 0;
    _OWORD v7[4] = a1;
    swift_retain();
    sub_21CB0A588((uint64_t)v4, (uint64_t)&unk_267C97130, (uint64_t)v7);
    return swift_release();
  }
  else if (*(void *)(a1 + 200))
  {
    swift_retain();
    sub_21CB41E30();
    return swift_release();
  }
  return result;
}

uint64_t sub_21CB0C30C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[23] = a4;
  v4[24] = *(void *)(type metadata accessor for LiveRelabilityStats(0) - 8);
  v4[25] = swift_task_alloc();
  v4[26] = *(void *)(type metadata accessor for ShallowRelabilityStats(0) - 8);
  v4[27] = swift_task_alloc();
  sub_21CA57E34((uint64_t *)&unk_267C951B0);
  v4[28] = swift_task_alloc();
  uint64_t v5 = sub_21CB87590();
  v4[29] = v5;
  v4[30] = *(void *)(v5 - 8);
  v4[31] = swift_task_alloc();
  v4[32] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_21CB0C4BC, 0, 0);
}

uint64_t sub_21CB0C4BC()
{
  uint64_t v1 = *(void *)(v0[23] + 208);
  v0[33] = v1;
  if (v1)
  {
    swift_retain();
    return MEMORY[0x270FA2498](sub_21CB0C5A8, v1, 0);
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v2 = (uint64_t (*)(void))v0[1];
    return v2();
  }
}

uint64_t sub_21CB0C5A8()
{
  sub_21CAF74C8();
  swift_release();
  return MEMORY[0x270FA2498](sub_21CB0C618, 0, 0);
}

uint64_t sub_21CB0C618()
{
  uint64_t v1 = *(void *)(v0[23] + 208);
  v0[34] = v1;
  if (v1)
  {
    swift_retain();
    return MEMORY[0x270FA2498](sub_21CB0C704, v1, 0);
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v2 = (uint64_t (*)(void))v0[1];
    return v2();
  }
}

uint64_t sub_21CB0C704()
{
  uint64_t v1 = *(void *)(v0 + 272);
  swift_beginAccess();
  *(void *)(v0 + 280) = *(void *)(v1 + 152);
  swift_bridgeObjectRetain();
  swift_release();
  return MEMORY[0x270FA2498](sub_21CB0C790, 0, 0);
}

uint64_t sub_21CB0C790()
{
  uint64_t v1 = *(void *)(v0[23] + 208);
  v0[36] = v1;
  if (v1)
  {
    uint64_t v2 = sub_21CB0C8D8;
LABEL_5:
    uint64_t v4 = v2;
    swift_retain();
    return MEMORY[0x270FA2498](v4, v1, 0);
  }
  (*(void (**)(void, uint64_t, uint64_t, void))(v0[30] + 56))(v0[28], 1, 1, v0[29]);
  uint64_t v3 = v0[28];
  swift_bridgeObjectRelease();
  sub_21CA1B88C(v3, (uint64_t *)&unk_267C951B0);
  uint64_t v1 = *(void *)(v0[23] + 208);
  v0[37] = v1;
  if (v1)
  {
    uint64_t v2 = sub_21CB0CE08;
    goto LABEL_5;
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_21CB0C8D8()
{
  uint64_t v1 = *(void *)(v0 + 224);
  uint64_t v2 = *(void *)(v0 + 288) + OBJC_IVAR____TtC7FMFCore27FMFSecureLocationController_startRefreshingTimestamp;
  swift_beginAccess();
  sub_21CA24E80(v2, v1, (uint64_t *)&unk_267C951B0);
  swift_release();
  return MEMORY[0x270FA2498](sub_21CB0C988, 0, 0);
}

uint64_t sub_21CB0C988()
{
  uint64_t v2 = v0[29];
  uint64_t v1 = v0[30];
  uint64_t v3 = v0[28];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v1 + 48))(v3, 1, v2) != 1)
  {
    uint64_t v4 = v0[31];
    uint64_t v5 = v0[27];
    uint64_t v36 = v0[26];
    uint64_t v37 = v0[35];
    (*(void (**)(void, uint64_t, uint64_t))(v1 + 32))(v0[32], v3, v2);
    sub_21CB87580();
    sub_21CB87500();
    uint64_t v7 = v6;
    uint64_t v33 = *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8);
    uint64_t v8 = (uint64_t (*)())v33(v4, v2);
    int64_t v11 = 0;
    uint64_t v34 = v37 + 64;
    uint64_t v12 = -1;
    uint64_t v13 = -1 << *(unsigned char *)(v37 + 32);
    if (-v13 < 64) {
      uint64_t v12 = ~(-1 << -(char)v13);
    }
    unint64_t v14 = v12 & *(void *)(v37 + 64);
    int64_t v35 = (unint64_t)(63 - v13) >> 6;
    while (1)
    {
      if (v14)
      {
        unint64_t v15 = __clz(__rbit64(v14));
        v14 &= v14 - 1;
        unint64_t v16 = v15 | (v11 << 6);
      }
      else
      {
        int64_t v25 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
          __break(1u);
          goto LABEL_34;
        }
        if (v25 >= v35) {
          goto LABEL_25;
        }
        unint64_t v26 = *(void *)(v34 + 8 * v25);
        ++v11;
        if (!v26)
        {
          int64_t v11 = v25 + 1;
          if (v25 + 1 >= v35) {
            goto LABEL_25;
          }
          unint64_t v26 = *(void *)(v34 + 8 * v11);
          if (!v26)
          {
            int64_t v11 = v25 + 2;
            if (v25 + 2 >= v35) {
              goto LABEL_25;
            }
            unint64_t v26 = *(void *)(v34 + 8 * v11);
            if (!v26)
            {
              int64_t v11 = v25 + 3;
              if (v25 + 3 >= v35) {
                goto LABEL_25;
              }
              unint64_t v26 = *(void *)(v34 + 8 * v11);
              if (!v26)
              {
                int64_t v27 = v25 + 4;
                if (v27 >= v35)
                {
LABEL_25:
                  uint64_t v28 = v0[32];
                  uint64_t v29 = v0[29];
                  swift_release();
                  v33(v28, v29);
                  goto LABEL_26;
                }
                unint64_t v26 = *(void *)(v34 + 8 * v27);
                if (!v26)
                {
                  while (1)
                  {
                    int64_t v11 = v27 + 1;
                    if (__OFADD__(v27, 1)) {
                      break;
                    }
                    if (v11 >= v35) {
                      goto LABEL_25;
                    }
                    unint64_t v26 = *(void *)(v34 + 8 * v11);
                    ++v27;
                    if (v26) {
                      goto LABEL_24;
                    }
                  }
LABEL_34:
                  __break(1u);
                  return MEMORY[0x270FA2498](v8, v9, v10);
                }
                int64_t v11 = v27;
              }
            }
          }
        }
LABEL_24:
        unint64_t v14 = (v26 - 1) & v26;
        unint64_t v16 = __clz(__rbit64(v26)) + (v11 << 6);
      }
      unint64_t v17 = (uint64_t *)v0[27];
      sub_21CA57180(*(void *)(v37 + 56) + *(void *)(v36 + 72) * v16, (uint64_t)v17, type metadata accessor for ShallowRelabilityStats);
      uint64_t v18 = *v17;
      char v19 = *(unsigned char *)(v5 + 8);
      uint64_t v20 = *(void *)(v5 + 16);
      uint64_t v21 = *(void *)(v5 + 24);
      sub_21CA582D8((uint64_t)v17, type metadata accessor for ShallowRelabilityStats);
      uint64_t v22 = (void *)sub_21CB882C0();
      uint64_t v23 = swift_allocObject();
      *(void *)(v23 + 16) = v18;
      *(unsigned char *)(v23 + 24) = v19;
      *(_DWORD *)(v23 + 25) = *((_DWORD *)v0 + 84);
      *(_DWORD *)(v23 + 28) = *(_DWORD *)((char *)v0 + 339);
      *(void *)(v23 + 32) = v20;
      *(void *)(v23 + 40) = v21;
      *(void *)(v23 + 48) = v7;
      v0[12] = sub_21CAC3B80;
      v0[13] = v23;
      v0[8] = MEMORY[0x263EF8330];
      v0[9] = 1107296256;
      v0[10] = sub_21CAC3B88;
      v0[11] = &unk_26CD6E1C0;
      uint64_t v24 = _Block_copy(v0 + 8);
      swift_release();
      AnalyticsSendEventLazy();
      _Block_release(v24);
    }
  }
  swift_bridgeObjectRelease();
  sub_21CA1B88C(v3, (uint64_t *)&unk_267C951B0);
LABEL_26:
  uint64_t v30 = *(void *)(v0[23] + 208);
  v0[37] = v30;
  if (v30)
  {
    swift_retain();
    uint64_t v8 = sub_21CB0CE08;
    uint64_t v9 = v30;
    uint64_t v10 = 0;
    return MEMORY[0x270FA2498](v8, v9, v10);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v31 = (uint64_t (*)(void))v0[1];
  return v31();
}

uint64_t sub_21CB0CE08()
{
  uint64_t v1 = *(void *)(v0 + 296);
  swift_beginAccess();
  *(void *)(v0 + 304) = *(void *)(v1 + 160);
  swift_bridgeObjectRetain();
  swift_release();
  return MEMORY[0x270FA2498](sub_21CB0CE94, 0, 0);
}

void sub_21CB0CE94()
{
  int64_t v1 = 0;
  uint64_t v2 = v0[38];
  uint64_t v3 = v0[24];
  uint64_t v24 = v0[25];
  uint64_t v22 = v2 + 64;
  uint64_t v4 = -1;
  uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
  if (-v5 < 64) {
    uint64_t v4 = ~(-1 << -(char)v5);
  }
  unint64_t v6 = v4 & *(void *)(v2 + 64);
  int64_t v23 = (unint64_t)(63 - v5) >> 6;
  while (1)
  {
    if (v6)
    {
      unint64_t v7 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v8 = v7 | (v1 << 6);
      goto LABEL_5;
    }
    int64_t v15 = v1 + 1;
    if (__OFADD__(v1, 1))
    {
      __break(1u);
LABEL_31:
      __break(1u);
      return;
    }
    if (v15 >= v23) {
      goto LABEL_23;
    }
    unint64_t v16 = *(void *)(v22 + 8 * v15);
    ++v1;
    if (!v16)
    {
      int64_t v1 = v15 + 1;
      if (v15 + 1 >= v23) {
        goto LABEL_23;
      }
      unint64_t v16 = *(void *)(v22 + 8 * v1);
      if (!v16)
      {
        int64_t v1 = v15 + 2;
        if (v15 + 2 >= v23) {
          goto LABEL_23;
        }
        unint64_t v16 = *(void *)(v22 + 8 * v1);
        if (!v16)
        {
          int64_t v1 = v15 + 3;
          if (v15 + 3 >= v23) {
            goto LABEL_23;
          }
          unint64_t v16 = *(void *)(v22 + 8 * v1);
          if (!v16) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v6 = (v16 - 1) & v16;
    unint64_t v8 = __clz(__rbit64(v16)) + (v1 << 6);
LABEL_5:
    uint64_t v9 = (uint64_t *)v0[25];
    sub_21CA57180(*(void *)(v2 + 56) + *(void *)(v3 + 72) * v8, (uint64_t)v9, type metadata accessor for LiveRelabilityStats);
    uint64_t v10 = *v9;
    char v11 = *(unsigned char *)(v24 + 8);
    sub_21CA582D8((uint64_t)v9, type metadata accessor for LiveRelabilityStats);
    uint64_t v12 = (void *)sub_21CB882C0();
    uint64_t v13 = swift_allocObject();
    *(void *)(v13 + 16) = v10;
    *(unsigned char *)(v13 + 24) = v11;
    v0[6] = sub_21CAC3F8C;
    v0[7] = v13;
    v0[2] = MEMORY[0x263EF8330];
    v0[3] = 1107296256;
    v0[4] = sub_21CAC3B88;
    v0[5] = &unk_26CD6E170;
    unint64_t v14 = _Block_copy(v0 + 2);
    swift_release();
    AnalyticsSendEventLazy();
    _Block_release(v14);
  }
  int64_t v17 = v15 + 4;
  if (v17 < v23)
  {
    unint64_t v16 = *(void *)(v22 + 8 * v17);
    if (!v16)
    {
      while (1)
      {
        int64_t v1 = v17 + 1;
        if (__OFADD__(v17, 1)) {
          goto LABEL_31;
        }
        if (v1 >= v23) {
          goto LABEL_23;
        }
        unint64_t v16 = *(void *)(v22 + 8 * v1);
        ++v17;
        if (v16) {
          goto LABEL_22;
        }
      }
    }
    int64_t v1 = v17;
    goto LABEL_22;
  }
LABEL_23:
  uint64_t v18 = v0[23];
  swift_release();
  uint64_t v19 = *(void *)(v18 + 208);
  v0[39] = v19;
  if (v19)
  {
    swift_retain();
    uint64_t v20 = (void *)swift_task_alloc();
    v0[40] = v20;
    *uint64_t v20 = v0;
    v20[1] = sub_21CB0D244;
    sub_21CAA0BB4();
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v21 = (void (*)(void))v0[1];
    v21();
  }
}

uint64_t sub_21CB0D244()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 328) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x270FA2498](sub_21CB0D3C0, 0, 0);
  }
  else
  {
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_21CB0D3C0()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  int64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_21CB0D468()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_21CB88100();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_21CB88150();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t result = MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned char *)(v1 + 225) & 1) == 0)
  {
    v16[0] = v3;
    if (qword_267C94990 != -1) {
      swift_once();
    }
    uint64_t v11 = sub_21CB880A0();
    sub_21CA4CC18(v11, (uint64_t)qword_267CA5368);
    uint64_t v12 = sub_21CB88070();
    os_log_type_t v13 = sub_21CB88880();
    if (os_log_type_enabled(v12, v13))
    {
      unint64_t v14 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v14 = 0;
      _os_log_impl(&dword_21CA00000, v12, v13, "FMFManager: forced refresh", v14, 2u);
      MEMORY[0x21D4B6B70](v14, -1, -1);
    }

    aBlock[4] = sub_21CB15234;
    aBlock[5] = v1;
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_21CA1B084;
    uint64_t aBlock[3] = &unk_26CD6DCB0;
    int64_t v15 = _Block_copy(aBlock);
    swift_retain();
    sub_21CB88120();
    v16[1] = MEMORY[0x263F8EE78];
    sub_21CA5DEAC((unint64_t *)&qword_267C96FC0, MEMORY[0x263F8F030]);
    sub_21CA57E34((uint64_t *)&unk_267C96DD0);
    sub_21CA356BC((unint64_t *)&qword_267C96FD0, (uint64_t *)&unk_267C96DD0);
    sub_21CB88A60();
    MEMORY[0x21D4B5A20](0, v10, v5, v15);
    _Block_release(v15);
    (*(void (**)(char *, uint64_t))(v16[0] + 8))(v5, v2);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    return swift_release();
  }
  return result;
}

uint64_t sub_21CB0D7D0()
{
  swift_retain();
  sub_21CA34FE0(0.0);

  return swift_release();
}

uint64_t sub_21CB0D814(NSObject *a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for FMFFriend();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  BOOL v89 = (uint64_t (*)(uint64_t, NSObject *, uint64_t))((char *)v83 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)v83 - v11;
  MEMORY[0x270FA5388](v10);
  unint64_t v14 = (char *)v83 - v13;
  uint64_t v15 = MEMORY[0x263F8EE78];
  uint64_t v91 = (void *)MEMORY[0x263F8EE78];
  uint64_t isa = (uint64_t)a1[2].isa;
  swift_bridgeObjectRetain();
  unint64_t v88 = a2;
  uint64_t v84 = v7;
  uint64_t v85 = isa;
  uint64_t v86 = v3;
  if (isa)
  {
    uint64_t v17 = isa;
    unint64_t v18 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    uint64_t v19 = a1;
    uint64_t v20 = *(void *)(v7 + 72);
    uint64_t v87 = v19;
    uint64_t v21 = (uint64_t)v19 + v18;
    uint64_t v22 = MEMORY[0x263F8EE78];
    uint64_t v23 = v17;
    do
    {
      sub_21CA57180(v21, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for FMFFriend);
      if (v14[*(int *)(v6 + 44)])
      {
        sub_21CA5913C((uint64_t)v14, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for FMFFriend);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_21CA47FE8(0, *(void *)(v22 + 16) + 1, 1);
        }
        uint64_t v22 = (uint64_t)v91;
        unint64_t v25 = v91[2];
        unint64_t v24 = v91[3];
        if (v25 >= v24 >> 1)
        {
          sub_21CA47FE8(v24 > 1, v25 + 1, 1);
          uint64_t v22 = (uint64_t)v91;
        }
        *(void *)(v22 + 16) = v25 + 1;
        sub_21CA5913C((uint64_t)v12, v22 + v18 + v25 * v20, (uint64_t (*)(void))type metadata accessor for FMFFriend);
      }
      else
      {
        sub_21CA582D8((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for FMFFriend);
      }
      v21 += v20;
      --v23;
    }
    while (v23);
    uint64_t v15 = (uint64_t)v91;
    uint64_t v3 = v86;
    a1 = v87;
    a2 = v88;
  }
  swift_bridgeObjectRelease();
  if (a2)
  {
    id v26 = a2;
    if (qword_267C94990 != -1) {
      swift_once();
    }
    uint64_t v27 = sub_21CB880A0();
    sub_21CA4CC18(v27, (uint64_t)qword_267CA5368);
    id v28 = a2;
    swift_bridgeObjectRetain();
    id v29 = a2;
    swift_retain();
    uint64_t v30 = sub_21CB88070();
    os_log_type_t v31 = sub_21CB88880();
    if (os_log_type_enabled(v30, v31))
    {
      uint64_t v32 = swift_slowAlloc();
      uint64_t v33 = swift_slowAlloc();
      *(_DWORD *)uint64_t v32 = 134218498;
      uint64_t v90 = *(void *)(v15 + 16);
      uint64_t v91 = (void *)v33;
      sub_21CB889C0();
      swift_release();
      *(_WORD *)(v32 + 12) = 2048;
      uint64_t v90 = v85;
      sub_21CB889C0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v32 + 22) = 2080;
      swift_getErrorValue();
      uint64_t v34 = sub_21CB89000();
      uint64_t v90 = sub_21CA4E450(v34, v35, (uint64_t *)&v91);
      a2 = v88;
      sub_21CB889C0();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_21CA00000, v30, v31, "FMFManager: received cached %ld proactive friends (out of %ld) (error=%s)", (uint8_t *)v32, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x21D4B6B70](v33, -1, -1);
      MEMORY[0x21D4B6B70](v32, -1, -1);
    }
    else
    {

      swift_release();
      swift_bridgeObjectRelease();
    }
  }
  uint64_t v36 = *(void *)(v3 + 56);
  uint64_t v37 = OBJC_IVAR____TtC7FMFCore23FMFManagerConfiguration_snapshotHandlers;
  uint64_t v38 = *(void *)(v36 + OBJC_IVAR____TtC7FMFCore23FMFManagerConfiguration_snapshotHandlers);
  if (!v38 || (uint64_t v39 = *(uint64_t (**)(uint64_t, NSObject *, uint64_t))(v38 + 16)) == 0)
  {
    if (qword_267C94990 != -1) {
      swift_once();
    }
    uint64_t v53 = sub_21CB880A0();
    sub_21CA4CC18(v53, (uint64_t)qword_267CA5368);
    swift_bridgeObjectRetain();
    swift_retain();
    unint64_t v54 = sub_21CB88070();
    os_log_type_t v55 = sub_21CB88880();
    if (os_log_type_enabled(v54, v55))
    {
      uint64_t v56 = swift_slowAlloc();
      *(_DWORD *)uint64_t v56 = 134218240;
      uint64_t v91 = *(void **)(v15 + 16);
      sub_21CB889C0();
      swift_release();
      *(_WORD *)(v56 + 12) = 2048;
      uint64_t v91 = (void *)v85;
      sub_21CB889C0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_21CA00000, v54, v55, "FMFManager: received %ld proactive friends (out of %ld)", (uint8_t *)v56, 0x16u);
      uint64_t v57 = v56;
      a2 = v88;
      MEMORY[0x21D4B6B70](v57, -1, -1);
    }
    else
    {
      swift_release();
      swift_bridgeObjectRelease();
    }

    uint64_t v58 = *(void *)(v36 + v37);
    if (v58)
    {
      unint64_t v59 = *(void (**)(uint64_t, NSObject *, uint64_t, uint64_t, void *))(v58 + 32);
      if (v59)
      {
        swift_retain();
        v59(v3, a1, v15, v15, a2);
        sub_21CAD2F4C((uint64_t)v59);
      }
    }
    return swift_release();
  }
  uint64_t v40 = *(void *)(v38 + 24);
  swift_retain();
  v83[1] = v40;
  uint64_t v41 = v39(v3, a1, v15);
  unint64_t v42 = v41;
  if (a2 || (uint64_t v43 = *(void *)(v41 + 16)) == 0)
  {
    if (qword_267C94990 != -1) {
      swift_once();
    }
    uint64_t v61 = sub_21CB880A0();
    sub_21CA4CC18(v61, (uint64_t)qword_267CA5368);
    swift_retain();
    unint64_t v62 = sub_21CB88070();
    os_log_type_t v63 = sub_21CB88880();
    if (os_log_type_enabled(v62, v63))
    {
      unint64_t v64 = (uint8_t *)swift_slowAlloc();
      BOOL v89 = v39;
      *(_DWORD *)unint64_t v64 = 134217984;
      uint64_t v87 = v42;
      uint64_t v65 = *(void *)(v15 + 16);
      swift_release();
      uint64_t v91 = (void *)v65;
      uint64_t v3 = v86;
      unint64_t v42 = v87;
      uint64_t v39 = v89;
      sub_21CB889C0();
      swift_release();
      _os_log_impl(&dword_21CA00000, v62, v63, "FMFManager: received %ld proactive friends but no proactive location asked", v64, 0xCu);
      MEMORY[0x21D4B6B70](v64, -1, -1);
    }
    else
    {
      swift_release_n();
    }

    uint64_t v76 = *(void *)(v36 + v37);
    uint64_t v77 = v88;
    if (v76 && (uint64_t v78 = *(void (**)(uint64_t, NSObject *, NSObject *, NSObject *, void *))(v76 + 32)) != 0)
    {
      swift_retain();
      v78(v3, a1, v42, v42, v77);
      sub_21CAD2F4C((uint64_t)v39);
      uint64_t v79 = (uint64_t)v78;
    }
    else
    {
      uint64_t v79 = (uint64_t)v39;
    }
  }
  else
  {
    uint64_t v87 = a1;
    swift_release();
    uint64_t v44 = (uint64_t)v42 + ((*(unsigned __int8 *)(v84 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v84 + 80));
    uint64_t v45 = *(void *)(v84 + 72);
    swift_bridgeObjectRetain();
    uint64_t v46 = (void *)MEMORY[0x263F8EE78];
    do
    {
      uint64_t v47 = (uint64_t *)v89;
      sub_21CA57180(v44, (uint64_t)v89, (uint64_t (*)(void))type metadata accessor for FMFFriend);
      uint64_t v49 = *v47;
      uint64_t v48 = v47[1];
      swift_bridgeObjectRetain();
      sub_21CA582D8((uint64_t)v47, (uint64_t (*)(void))type metadata accessor for FMFFriend);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v46 = sub_21CAC7864(0, v46[2] + 1, 1, v46);
      }
      unint64_t v51 = v46[2];
      unint64_t v50 = v46[3];
      if (v51 >= v50 >> 1) {
        uint64_t v46 = sub_21CAC7864((void *)(v50 > 1), v51 + 1, 1, v46);
      }
      v46[2] = v51 + 1;
      uint64_t v52 = &v46[2 * v51];
      v52[4] = v49;
      v52[5] = v48;
      v44 += v45;
      --v43;
    }
    while (v43);
    BOOL v89 = v39;
    swift_bridgeObjectRelease();
    uint64_t v91 = v46;
    sub_21CA57E34(&qword_267C94E60);
    sub_21CA356BC(&qword_267C97120, &qword_267C94E60);
    uint64_t v66 = sub_21CB88290();
    unint64_t v68 = v67;
    swift_bridgeObjectRelease();
    if (qword_267C94990 != -1) {
      swift_once();
    }
    uint64_t v69 = sub_21CB880A0();
    sub_21CA4CC18(v69, (uint64_t)qword_267CA5368);
    uint64_t v70 = v87;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    uint64_t v71 = sub_21CB88070();
    os_log_type_t v72 = sub_21CB88880();
    if (os_log_type_enabled(v71, v72))
    {
      uint64_t v73 = swift_slowAlloc();
      uint64_t v74 = swift_slowAlloc();
      uint64_t v91 = (void *)v74;
      *(_DWORD *)uint64_t v73 = 134218498;
      swift_bridgeObjectRelease();
      uint64_t v90 = v85;
      sub_21CB889C0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v73 + 12) = 2048;
      Class v75 = v42[2].isa;
      swift_bridgeObjectRelease();
      uint64_t v90 = (uint64_t)v75;
      sub_21CB889C0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v73 + 22) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v90 = sub_21CA4E450(v66, v68, (uint64_t *)&v91);
      sub_21CB889C0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_21CA00000, v71, v72, "FMFManager: received %ld friends incl. %ld proactive locations asked for %s…", (uint8_t *)v73, 0x20u);
      swift_arrayDestroy();
      uint64_t v70 = v87;
      MEMORY[0x21D4B6B70](v74, -1, -1);
      MEMORY[0x21D4B6B70](v73, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }

    uint64_t v80 = (uint64_t)v89;
    uint64_t v81 = v86;
    if (*(void *)(v86 + 192))
    {
      unint64_t v82 = (void *)swift_allocObject();
      v82[2] = v81;
      v82[3] = v70;
      v82[4] = v42;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
      sub_21CACB168(v42, (uint64_t)sub_21CB17DEC, (uint64_t)v82);
      sub_21CAD2F4C(v80);
      swift_bridgeObjectRelease();
      swift_release();
      return swift_release();
    }
    uint64_t v79 = (uint64_t)v89;
  }
  sub_21CAD2F4C(v79);
  return swift_bridgeObjectRelease();
}

void sub_21CB0E414(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v31 = a3;
  uint64_t v33 = a2;
  uint64_t v6 = type metadata accessor for FMFFriend() - 8;
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (uint64_t *)((char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = *(void *)(a1 + 16);
  uint64_t v32 = v10;
  if (v10)
  {
    uint64_t v30 = a4;
    uint64_t v11 = a1 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
    uint64_t v12 = *(void *)(v7 + 72);
    swift_bridgeObjectRetain();
    uint64_t v13 = (void *)MEMORY[0x263F8EE78];
    do
    {
      sub_21CA57180(v11, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for FMFFriend);
      uint64_t v14 = *v9;
      uint64_t v15 = v9[1];
      swift_bridgeObjectRetain();
      sub_21CA582D8((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for FMFFriend);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v13 = sub_21CAC7864(0, v13[2] + 1, 1, v13);
      }
      unint64_t v17 = v13[2];
      unint64_t v16 = v13[3];
      if (v17 >= v16 >> 1) {
        uint64_t v13 = sub_21CAC7864((void *)(v16 > 1), v17 + 1, 1, v13);
      }
      v13[2] = v17 + 1;
      unint64_t v18 = &v13[2 * v17];
      void v18[4] = v14;
      v18[5] = v15;
      v11 += v12;
      --v10;
    }
    while (v10);
    swift_bridgeObjectRelease();
    a4 = v30;
  }
  else
  {
    uint64_t v13 = (void *)MEMORY[0x263F8EE78];
  }
  unint64_t v35 = v13;
  sub_21CA57E34(&qword_267C94E60);
  sub_21CA356BC(&qword_267C97120, &qword_267C94E60);
  uint64_t v19 = sub_21CB88290();
  unint64_t v21 = v20;
  swift_bridgeObjectRelease();
  if (qword_267C94990 != -1) {
    swift_once();
  }
  uint64_t v22 = sub_21CB880A0();
  sub_21CA4CC18(v22, (uint64_t)qword_267CA5368);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  uint64_t v23 = sub_21CB88070();
  os_log_type_t v24 = sub_21CB88880();
  if (os_log_type_enabled(v23, v24))
  {
    uint64_t v25 = swift_slowAlloc();
    uint64_t v26 = swift_slowAlloc();
    unint64_t v35 = (void *)v26;
    *(_DWORD *)uint64_t v25 = 134218242;
    swift_bridgeObjectRelease();
    uint64_t v34 = v32;
    sub_21CB889C0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v25 + 12) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v34 = sub_21CA4E450(v19, v21, (uint64_t *)&v35);
    sub_21CB889C0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_21CA00000, v23, v24, "FMFManager: fetched proactive %ld locations for %s", (uint8_t *)v25, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x21D4B6B70](v26, -1, -1);
    MEMORY[0x21D4B6B70](v25, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  uint64_t v27 = v33;
  uint64_t v28 = *(void *)(*(void *)(v33 + 56) + OBJC_IVAR____TtC7FMFCore23FMFManagerConfiguration_snapshotHandlers);
  if (v28)
  {
    id v29 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, void))(v28 + 32);
    if (v29)
    {
      swift_retain();
      v29(v27, v31, a4, a1, 0);
      sub_21CAD2F4C((uint64_t)v29);
    }
  }
}

uint64_t sub_21CB0E848(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = sub_21CA57E34(&qword_267C95028);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for FMFFriend();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v11 - 8);
  uint64_t v39 = v14;
  uint64_t v40 = (uint64_t)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  unint64_t v16 = (char *)&v35 - v15;
  if (qword_267C94990 != -1) {
    swift_once();
  }
  uint64_t v17 = sub_21CB880A0();
  sub_21CA4CC18(v17, (uint64_t)qword_267CA5368);
  sub_21CA57180(a1, (uint64_t)v16, (uint64_t (*)(void))type metadata accessor for FMFFriend);
  unint64_t v18 = sub_21CB88070();
  os_log_type_t v19 = sub_21CB88880();
  if (os_log_type_enabled(v18, v19))
  {
    uint64_t v20 = swift_slowAlloc();
    uint64_t v38 = v3;
    unint64_t v21 = (uint8_t *)v20;
    uint64_t v22 = swift_slowAlloc();
    uint64_t v37 = a2;
    uint64_t v23 = v22;
    uint64_t v42 = v22;
    uint64_t v35 = a1;
    uint64_t v36 = v10;
    *(_DWORD *)unint64_t v21 = 136315138;
    uint64_t v24 = FMFFriend.debugDescription.getter();
    uint64_t v41 = sub_21CA4E450(v24, v25, &v42);
    a1 = v35;
    uint64_t v10 = v36;
    sub_21CB889C0();
    swift_bridgeObjectRelease();
    sub_21CA582D8((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for FMFFriend);
    _os_log_impl(&dword_21CA00000, v18, v19, "FMFManager: startLiveLocation %s", v21, 0xCu);
    swift_arrayDestroy();
    uint64_t v26 = v23;
    a2 = v37;
    MEMORY[0x21D4B6B70](v26, -1, -1);
    uint64_t v27 = v21;
    uint64_t v4 = v38;
    MEMORY[0x21D4B6B70](v27, -1, -1);
  }
  else
  {
    sub_21CA582D8((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for FMFFriend);
  }

  uint64_t result = sub_21CA33A7C();
  if (result)
  {
    uint64_t v29 = sub_21CB88640();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v10, 1, 1, v29);
    uint64_t v30 = v40;
    sub_21CA57180(a1, v40, (uint64_t (*)(void))type metadata accessor for FMFFriend);
    unint64_t v31 = (*(unsigned __int8 *)(v12 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
    uint64_t v32 = (void *)swift_allocObject();
    id v32[2] = 0;
    v32[3] = 0;
    v32[4] = v4;
    sub_21CA5913C(v30, (uint64_t)v32 + v31, (uint64_t (*)(void))type metadata accessor for FMFFriend);
    swift_retain();
    sub_21CB0A588((uint64_t)v10, (uint64_t)&unk_267C97050, (uint64_t)v32);
  }
  else
  {
    if (!*(void *)(v4 + 200)) {
      return result;
    }
    sub_21CA57E34(&qword_267C95260);
    unint64_t v33 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
    uint64_t v34 = swift_allocObject();
    *(_OWORD *)(v34 + 16) = xmmword_21CB8B220;
    sub_21CA57180(a1, v34 + v33, (uint64_t (*)(void))type metadata accessor for FMFFriend);
    swift_retain();
    sub_21CB3EAB8(v34, 1, a2, a3);
    swift_bridgeObjectRelease();
  }
  return swift_release();
}

uint64_t sub_21CB0ECAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[2] = a4;
  v5[3] = a5;
  uint64_t v6 = sub_21CB87840();
  v5[4] = v6;
  v5[5] = *(void *)(v6 - 8);
  v5[6] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_21CB0ED6C, 0, 0);
}

uint64_t sub_21CB0ED6C()
{
  uint64_t v1 = *(void *)(v0[2] + 208);
  v0[7] = v1;
  uint64_t v2 = v0[6];
  if (v1)
  {
    uint64_t v3 = v0[4];
    uint64_t v4 = v0[5];
    uint64_t v5 = v0[3];
    sub_21CA57E34(&qword_267C95260);
    uint64_t v6 = *(void *)(type metadata accessor for FMFFriend() - 8);
    unint64_t v7 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
    uint64_t v8 = swift_allocObject();
    v0[8] = v8;
    *(_OWORD *)(v8 + 16) = xmmword_21CB8B220;
    sub_21CA57180(v5, v8 + v7, (uint64_t (*)(void))type metadata accessor for FMFFriend);
    (*(void (**)(uint64_t, void, uint64_t))(v4 + 104))(v2, *MEMORY[0x263F3CCA0], v3);
    swift_retain();
    uint64_t v9 = (void *)swift_task_alloc();
    v0[9] = v9;
    void *v9 = v0;
    v9[1] = sub_21CB0EF50;
    uint64_t v10 = v0[6];
    return sub_21CAA75B0(v8, v10);
  }
  else
  {
    swift_task_dealloc();
    uint64_t v12 = (uint64_t (*)(void))v0[1];
    return v12();
  }
}

uint64_t sub_21CB0EF50()
{
  uint64_t v2 = *(void *)(*v1 + 48);
  uint64_t v3 = *(void *)(*v1 + 40);
  uint64_t v4 = *(void *)(*v1 + 32);
  uint64_t v5 = *v1;
  *(void *)(*v1 + 80) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  swift_bridgeObjectRelease();
  swift_release();
  if (v0)
  {
    return MEMORY[0x270FA2498](sub_21CB1835C, 0, 0);
  }
  else
  {
    swift_task_dealloc();
    uint64_t v6 = *(uint64_t (**)(void))(v5 + 8);
    return v6();
  }
}

uint64_t sub_21CB0F144(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_21CA57E34(&qword_267C95028);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for FMFFriend();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  uint64_t v10 = MEMORY[0x270FA5388](v7 - 8);
  uint64_t v11 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v31 - v12;
  if (qword_267C94990 != -1) {
    swift_once();
  }
  uint64_t v14 = sub_21CB880A0();
  sub_21CA4CC18(v14, (uint64_t)qword_267CA5368);
  sub_21CA57180(a1, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for FMFFriend);
  uint64_t v15 = sub_21CB88070();
  os_log_type_t v16 = sub_21CB88880();
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v17 = swift_slowAlloc();
    uint64_t v34 = v1;
    unint64_t v18 = (uint8_t *)v17;
    uint64_t v19 = swift_slowAlloc();
    uint64_t v33 = v8;
    uint64_t v20 = v19;
    uint64_t v36 = v19;
    uint64_t v31 = v9;
    uint64_t v32 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
    *(_DWORD *)unint64_t v18 = 136315138;
    uint64_t v21 = FMFFriend.debugDescription.getter();
    uint64_t v35 = sub_21CA4E450(v21, v22, &v36);
    uint64_t v11 = v32;
    sub_21CB889C0();
    swift_bridgeObjectRelease();
    sub_21CA582D8((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for FMFFriend);
    _os_log_impl(&dword_21CA00000, v15, v16, "FMFManager: stopLiveLocation %s", v18, 0xCu);
    swift_arrayDestroy();
    uint64_t v23 = v20;
    uint64_t v8 = v33;
    MEMORY[0x21D4B6B70](v23, -1, -1);
    uint64_t v24 = v18;
    uint64_t v2 = v34;
    MEMORY[0x21D4B6B70](v24, -1, -1);
  }
  else
  {
    sub_21CA582D8((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for FMFFriend);
  }

  uint64_t result = sub_21CA33A7C();
  if (result)
  {
    uint64_t v26 = sub_21CB88640();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v6, 1, 1, v26);
    sub_21CA57180(a1, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for FMFFriend);
    unint64_t v27 = (*(unsigned __int8 *)(v8 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    uint64_t v28 = (void *)swift_allocObject();
    v28[2] = 0;
    v28[3] = 0;
    v28[4] = v2;
    sub_21CA5913C((uint64_t)v11, (uint64_t)v28 + v27, (uint64_t (*)(void))type metadata accessor for FMFFriend);
    swift_retain();
    sub_21CB0A588((uint64_t)v6, (uint64_t)&unk_267C97060, (uint64_t)v28);
  }
  else
  {
    if (!*(void *)(v2 + 200)) {
      return result;
    }
    sub_21CA57E34(&qword_267C95260);
    unint64_t v29 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    uint64_t v30 = swift_allocObject();
    *(_OWORD *)(v30 + 16) = xmmword_21CB8B220;
    sub_21CA57180(a1, v30 + v29, (uint64_t (*)(void))type metadata accessor for FMFFriend);
    swift_retain();
    sub_21CB40594(v30, 1);
    swift_bridgeObjectRelease();
  }
  return swift_release();
}

uint64_t sub_21CB0F58C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[2] = a4;
  v5[3] = a5;
  uint64_t v6 = sub_21CB87840();
  v5[4] = v6;
  v5[5] = *(void *)(v6 - 8);
  v5[6] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_21CB0F64C, 0, 0);
}

uint64_t sub_21CB0F64C()
{
  uint64_t v1 = *(void *)(v0[2] + 208);
  v0[7] = v1;
  uint64_t v2 = v0[6];
  if (v1)
  {
    uint64_t v3 = v0[4];
    uint64_t v4 = v0[5];
    uint64_t v5 = v0[3];
    sub_21CA57E34(&qword_267C95260);
    uint64_t v6 = *(void *)(type metadata accessor for FMFFriend() - 8);
    unint64_t v7 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
    uint64_t v8 = swift_allocObject();
    v0[8] = v8;
    *(_OWORD *)(v8 + 16) = xmmword_21CB8B220;
    sub_21CA57180(v5, v8 + v7, (uint64_t (*)(void))type metadata accessor for FMFFriend);
    (*(void (**)(uint64_t, void, uint64_t))(v4 + 104))(v2, *MEMORY[0x263F3CCA0], v3);
    swift_retain();
    uint64_t v9 = (void *)swift_task_alloc();
    v0[9] = v9;
    void *v9 = v0;
    v9[1] = sub_21CB0F830;
    uint64_t v10 = v0[6];
    return sub_21CAA81D4(v8, v10);
  }
  else
  {
    swift_task_dealloc();
    uint64_t v12 = (uint64_t (*)(void))v0[1];
    return v12();
  }
}

uint64_t sub_21CB0F830()
{
  uint64_t v2 = *(void *)(*v1 + 48);
  uint64_t v3 = *(void *)(*v1 + 40);
  uint64_t v4 = *(void *)(*v1 + 32);
  uint64_t v5 = *v1;
  *(void *)(*v1 + 80) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  swift_bridgeObjectRelease();
  swift_release();
  if (v0)
  {
    return MEMORY[0x270FA2498](sub_21CB0FA24, 0, 0);
  }
  else
  {
    swift_task_dealloc();
    uint64_t v6 = *(uint64_t (**)(void))(v5 + 8);
    return v6();
  }
}

uint64_t sub_21CB0FA24()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_21CB0FA88()
{
  uint64_t v1 = *(void **)(v0 + 184);
  if (v1)
  {
    id v2 = v1;
    sub_21CB31400();
  }
}

uint64_t sub_21CB0FAE8(unsigned char *a1, uint64_t (*a2)(uint64_t *, void *), NSObject *a3)
{
  uint64_t v4 = v3;
  if (qword_267C94990 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_21CB880A0();
  sub_21CA4CC18(v8, (uint64_t)qword_267CA5368);
  swift_retain_n();
  uint64_t v9 = sub_21CB88070();
  os_log_type_t v10 = sub_21CB88880();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    *(_DWORD *)uint64_t v11 = 136315138;
    uint64_t v17 = v12;
    uint64_t v13 = (*(uint64_t (**)(void))(*(void *)a1 + 120))();
    sub_21CA4E450(v13, v14, &v17);
    sub_21CB889C0();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_21CA00000, v9, v10, "FMFManager: perform action %s", v11, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x21D4B6B70](v12, -1, -1);
    MEMORY[0x21D4B6B70](v11, -1, -1);
  }
  else
  {

    swift_release_n();
  }
  uint64_t v15 = *(unint64_t **)(v3 + 176);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_21CB6F1D8((uint64_t)a1, v15, a1, v4, a2, a3);
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_21CB0FD34(char *a1, void *a2, unsigned char *a3, uint64_t a4, uint64_t (*a5)(uint64_t *, void *), uint64_t a6)
{
  uint64_t v10 = *a1;
  if (qword_267C94990 != -1) {
    swift_once();
  }
  char v11 = v10;
  uint64_t v12 = sub_21CB880A0();
  sub_21CA4CC18(v12, (uint64_t)qword_267CA5368);
  id v13 = a2;
  id v14 = a2;
  uint64_t v15 = sub_21CB88070();
  os_log_type_t v16 = sub_21CB88880();
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v17 = swift_slowAlloc();
    uint64_t v33 = a3;
    uint64_t v18 = swift_slowAlloc();
    v36[0] = v18;
    *(_DWORD *)uint64_t v17 = 136315394;
    sub_21CA57E34(&qword_267C975A0);
    uint64_t v19 = sub_21CB88990();
    uint64_t v35 = sub_21CA4E450(v19, v20, v36);
    sub_21CB889C0();
    swift_bridgeObjectRelease();

    *(_WORD *)(v17 + 12) = 2048;
    uint64_t v35 = qword_21CB905D8[v10];
    sub_21CB889C0();
    _os_log_impl(&dword_21CA00000, v15, v16, "FMFManager: performed action with error?: %s status?: %ld", (uint8_t *)v17, 0x16u);
    swift_arrayDestroy();
    uint64_t v21 = v18;
    a3 = v33;
    MEMORY[0x21D4B6B70](v21, -1, -1);
    uint64_t v22 = v17;
    char v11 = v10;
    MEMORY[0x21D4B6B70](v22, -1, -1);
  }
  else
  {
  }
  swift_beginAccess();
  if (a3[16] == 1)
  {
    swift_retain_n();
    uint64_t v23 = sub_21CB88070();
    os_log_type_t v24 = sub_21CB88880();
    if (os_log_type_enabled(v23, v24))
    {
      unint64_t v25 = (uint8_t *)swift_slowAlloc();
      char v34 = v11;
      uint64_t v26 = swift_slowAlloc();
      *(_DWORD *)unint64_t v25 = 136315138;
      uint64_t v35 = v26;
      uint64_t v27 = (*(uint64_t (**)(void))(*(void *)a3 + 120))();
      sub_21CA4E450(v27, v28, &v35);
      sub_21CB889C0();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_21CA00000, v23, v24, "FMFManager: refreshing because action requires it %s", v25, 0xCu);
      swift_arrayDestroy();
      uint64_t v29 = v26;
      char v11 = v34;
      MEMORY[0x21D4B6B70](v29, -1, -1);
      MEMORY[0x21D4B6B70](v25, -1, -1);
    }
    else
    {

      swift_release_n();
    }
    uint64_t v31 = swift_allocObject();
    *(void *)(v31 + 16) = a3;
    *(void *)(v31 + 24) = a5;
    *(void *)(v31 + 32) = a6;
    *(unsigned char *)(v31 + 40) = v11;
    *(void *)(v31 + 48) = a2;
    id v32 = a2;
    swift_retain();
    swift_retain();
    swift_retain();
    sub_21CA6FC20((uint64_t)sub_21CB17E40, v31);
    swift_release();
    return swift_release();
  }
  else
  {
    LOBYTE(v35) = v11;
    return a5(&v35, a2);
  }
}

uint64_t sub_21CB10170(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t *, uint64_t), uint64_t a4, char a5, uint64_t a6)
{
  if (qword_267C94990 != -1) {
    swift_once();
  }
  uint64_t v10 = sub_21CB880A0();
  sub_21CA4CC18(v10, (uint64_t)qword_267CA5368);
  swift_retain_n();
  char v11 = sub_21CB88070();
  os_log_type_t v12 = sub_21CB88880();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v19 = a6;
    id v13 = (uint8_t *)swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    *(_DWORD *)id v13 = 136315138;
    uint64_t v20 = v14;
    uint64_t v15 = (*(uint64_t (**)(void))(*(void *)a2 + 120))();
    sub_21CA4E450(v15, v16, &v20);
    sub_21CB889C0();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_21CA00000, v11, v12, "FMFManager: completing action after refresh %s", v13, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x21D4B6B70](v14, -1, -1);
    uint64_t v17 = v13;
    a6 = v19;
    MEMORY[0x21D4B6B70](v17, -1, -1);
  }
  else
  {

    swift_release_n();
  }
  LOBYTE(v20) = a5;
  return a3(&v20, a6);
}

uint64_t sub_21CB10388(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v32 = a3;
  uint64_t v7 = sub_21CB87480();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_267C94990 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_21CB880A0();
  sub_21CA4CC18(v11, (uint64_t)qword_267CA5368);
  swift_retain_n();
  os_log_type_t v12 = sub_21CB88070();
  os_log_type_t v13 = sub_21CB88880();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = swift_slowAlloc();
    uint64_t v31 = a2;
    uint64_t v15 = v14;
    uint64_t v30 = swift_slowAlloc();
    v34[0] = v30;
    *(_DWORD *)uint64_t v15 = 136315394;
    uint64_t v29 = v15 + 4;
    uint64_t v33 = *v4;
    sub_21CA57E34(&qword_267C97068);
    uint64_t v16 = sub_21CB88310();
    uint64_t v33 = sub_21CA4E450(v16, v17, v34);
    sub_21CB889C0();
    swift_bridgeObjectRelease();
    swift_release_n();
    *(_WORD *)(v15 + 12) = 2080;
    uint64_t v33 = sub_21CA4E450(0xD00000000000001ELL, 0x800000021CB96E70, v34);
    sub_21CB889C0();
    _os_log_impl(&dword_21CA00000, v12, v13, "%s: %s", (uint8_t *)v15, 0x16u);
    uint64_t v18 = v30;
    swift_arrayDestroy();
    MEMORY[0x21D4B6B70](v18, -1, -1);
    uint64_t v19 = v15;
    a2 = v31;
    MEMORY[0x21D4B6B70](v19, -1, -1);
  }
  else
  {
    swift_release_n();
  }

  uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  v20(v10, a1, v7);
  type metadata accessor for FMFGetURLInfoRequest();
  uint64_t v21 = swift_allocObject();
  v20((char *)(v21 + qword_267CA52A0), (uint64_t)v10, v7);
  uint64_t v22 = sub_21CA36A84();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  swift_beginAccess();
  sub_21CA219EC((uint64_t)(v4 + 17), (uint64_t)v34);
  uint64_t v23 = v35;
  uint64_t v24 = v36;
  sub_21CA2B2CC(v34, v35);
  unint64_t v25 = (void *)swift_allocObject();
  v25[2] = v4;
  v25[3] = a2;
  v25[4] = v32;
  uint64_t v26 = *(void (**)(void *, uint64_t (*)(uint64_t, void *), void *, uint64_t, uint64_t, uint64_t))(v24 + 64);
  uint64_t v27 = type metadata accessor for FMFBaseResponse();
  swift_retain();
  swift_retain();
  v26(v22, sub_21CB157D0, v25, v27, v23, v24);
  swift_release();
  swift_release();
  return sub_21CA2B0D0((uint64_t)v34);
}

uint64_t sub_21CB107B0(uint64_t a1, void *a2, uint64_t a3, uint64_t (*a4)(void, void *))
{
  if (a2)
  {
    if (qword_267C94990 != -1) {
      swift_once();
    }
    uint64_t v5 = sub_21CB880A0();
    sub_21CA4CC18(v5, (uint64_t)qword_267CA5368);
    swift_retain();
    id v6 = a2;
    swift_retain();
    id v7 = a2;
    uint64_t v8 = sub_21CB88070();
    os_log_type_t v9 = sub_21CB88880();
    if (os_log_type_enabled(v8, v9))
    {
      uint64_t v10 = swift_slowAlloc();
      uint64_t v11 = swift_slowAlloc();
      *(_DWORD *)uint64_t v10 = 136315394;
      uint64_t v25 = v11;
      sub_21CA57E34(&qword_267C97068);
      uint64_t v12 = sub_21CB88310();
      sub_21CA4E450(v12, v13, &v25);
      sub_21CB889C0();
      swift_bridgeObjectRelease();
      swift_release_n();
      *(_WORD *)(v10 + 12) = 2080;
      sub_21CA57E34(&qword_267C975A0);
      uint64_t v14 = sub_21CB88990();
      sub_21CA4E450(v14, v15, &v25);
      sub_21CB889C0();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_21CA00000, v8, v9, "%s: error when getting info for URL: %s", (uint8_t *)v10, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x21D4B6B70](v11, -1, -1);
      MEMORY[0x21D4B6B70](v10, -1, -1);
    }
    else
    {
      swift_release_n();
    }
  }
  else
  {
    if (qword_267C94990 != -1) {
      swift_once();
    }
    uint64_t v16 = sub_21CB880A0();
    sub_21CA4CC18(v16, (uint64_t)qword_267CA5368);
    swift_retain_n();
    unint64_t v17 = sub_21CB88070();
    os_log_type_t v18 = sub_21CB88850();
    if (os_log_type_enabled(v17, v18))
    {
      uint64_t v19 = (uint8_t *)swift_slowAlloc();
      uint64_t v20 = swift_slowAlloc();
      *(_DWORD *)uint64_t v19 = 136315138;
      uint64_t v25 = v20;
      sub_21CA57E34(&qword_267C97068);
      uint64_t v21 = sub_21CB88310();
      sub_21CA4E450(v21, v22, &v25);
      sub_21CB889C0();
      swift_bridgeObjectRelease();
      swift_release_n();
      _os_log_impl(&dword_21CA00000, v17, v18, "%s: Got info for url.", v19, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x21D4B6B70](v20, -1, -1);
      MEMORY[0x21D4B6B70](v19, -1, -1);
    }
    else
    {
      swift_release_n();
    }
  }
  return a4(0, a2);
}

uint64_t sub_21CB10BD0(uint64_t a1, unint64_t a2, char a3)
{
  if (qword_267C94990 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_21CB880A0();
  sub_21CA4CC18(v6, (uint64_t)qword_267CA5368);
  swift_bridgeObjectRetain_n();
  id v7 = sub_21CB88070();
  os_log_type_t v8 = sub_21CB88880();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    uint64_t v12 = v10;
    *(_DWORD *)uint64_t v9 = 136315394;
    swift_bridgeObjectRetain();
    sub_21CA4E450(a1, a2, &v12);
    sub_21CB889C0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v9 + 12) = 1024;
    sub_21CB889C0();
    _os_log_impl(&dword_21CA00000, v7, v8, "FMFManager: appendLiveSessionInformation, friendId: %s, successfulLive: %{BOOL}d", (uint8_t *)v9, 0x12u);
    swift_arrayDestroy();
    MEMORY[0x21D4B6B70](v10, -1, -1);
    MEMORY[0x21D4B6B70](v9, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  swift_retain();
  sub_21CA7018C(a1, a2, a3 & 1);
  return swift_release();
}

uint64_t sub_21CB10DC8(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  if (qword_267C94990 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_21CB880A0();
  sub_21CA4CC18(v6, (uint64_t)qword_267CA5368);
  swift_bridgeObjectRetain_n();
  id v7 = sub_21CB88070();
  os_log_type_t v8 = sub_21CB88880();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    v19[0] = v10;
    *(_DWORD *)uint64_t v9 = 136315394;
    uint64_t v11 = swift_bridgeObjectRetain();
    uint64_t v12 = MEMORY[0x21D4B5620](v11, MEMORY[0x263F8D310]);
    unint64_t v14 = v13;
    swift_bridgeObjectRelease();
    sub_21CA4E450(v12, v14, v19);
    sub_21CB889C0();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v9 + 12) = 1024;
    sub_21CB889C0();
    _os_log_impl(&dword_21CA00000, v7, v8, "FMFManager: appendLegacyFallbackData, friendId: %s, didFallback: %{BOOL}d", (uint8_t *)v9, 0x12u);
    swift_arrayDestroy();
    MEMORY[0x21D4B6B70](v10, -1, -1);
    MEMORY[0x21D4B6B70](v9, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  swift_retain();
  uint64_t v15 = a2 & 1;
  sub_21CA706A0(a1, v15);
  swift_release();
  swift_beginAccess();
  uint64_t result = MEMORY[0x21D4B6C80](v3 + 32);
  if (result)
  {
    uint64_t v17 = *(void *)(v3 + 40);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v17 + 136))(v3, a1, v15, ObjectType, v17);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_21CB11040()
{
  return swift_release();
}

uint64_t sub_21CB110C0()
{
  swift_bridgeObjectRetain();
  sub_21CB88380();

  return swift_bridgeObjectRelease();
}

uint64_t static FMFManager.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 16) == *(void *)(a2 + 16) && *(void *)(a1 + 24) == *(void *)(a2 + 24)) {
    return 1;
  }
  else {
    return sub_21CB88F50();
  }
}

uint64_t sub_21CB11148(uint64_t a1, uint64_t a2)
{
  if (*(void *)(*(void *)a1 + 16) == *(void *)(*(void *)a2 + 16)
    && *(void *)(*(void *)a1 + 24) == *(void *)(*(void *)a2 + 24))
  {
    return 1;
  }
  else
  {
    return sub_21CB88F50();
  }
}

uint64_t sub_21CB11174(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a1 + 32;
  swift_beginAccess();
  uint64_t result = MEMORY[0x21D4B6C80](v4);
  if (result)
  {
    uint64_t v6 = *(void *)(a1 + 40);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 24))(a1, a2, ObjectType, v6);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t *FMFManager.didReceive(preferences:)(uint64_t *result)
{
  uint64_t v2 = result[2];
  if (v2)
  {
    uint64_t v3 = result[3];
    uint64_t v5 = *result;
    uint64_t v4 = result[1];
    swift_beginAccess();
    uint64_t result = (uint64_t *)MEMORY[0x21D4B6C80](v1 + 32);
    if (result)
    {
      uint64_t v6 = *(void *)(v1 + 40);
      uint64_t ObjectType = swift_getObjectType();
      __int16 v8 = v5 & 0x101;
      char v9 = BYTE2(v5) & 1;
      char v10 = BYTE3(v5);
      uint64_t v11 = v4;
      uint64_t v12 = v2;
      uint64_t v13 = v3;
      (*(void (**)(uint64_t, __int16 *, uint64_t, uint64_t))(v6 + 64))(v1, &v8, ObjectType, v6);
      return (uint64_t *)swift_unknownObjectRelease();
    }
  }
  return result;
}

Swift::Void __swiftcall FMFManager.didReceive(myInfo:)(FMFCore::FMFMyInfo_optional *myInfo)
{
  rawValue = myInfo->value.emails._rawValue;
  if (myInfo->value.emails._rawValue)
  {
    uint64_t countAndFlagsBits = myInfo->value.meDeviceId.value._countAndFlagsBits;
    object = myInfo->value.meDeviceId.value._object;
    Swift::Bool eligibleAutoMe = myInfo->value.eligibleAutoMe;
    uint64_t v7 = myInfo->value.deviceId._countAndFlagsBits;
    uint64_t v6 = myInfo->value.deviceId._object;
    uint64_t v9 = myInfo->value.firstName._countAndFlagsBits;
    __int16 v8 = myInfo->value.firstName._object;
    swift_beginAccess();
    if (MEMORY[0x21D4B6C80](v1 + 32))
    {
      unint64_t v14 = v6;
      char v10 = object;
      uint64_t v11 = countAndFlagsBits;
      uint64_t v12 = *(void *)(v1 + 40);
      uint64_t ObjectType = swift_getObjectType();
      v15[0] = rawValue;
      v15[1] = v9;
      v15[2] = v8;
      v15[3] = v11;
      void v15[4] = v10;
      v15[5] = v7;
      v15[6] = v14;
      Swift::Bool v16 = eligibleAutoMe;
      (*(void (**)(uint64_t, void *, uint64_t, uint64_t))(v12 + 72))(v1, v15, ObjectType, v12);
      swift_unknownObjectRelease();
    }
  }
}

Swift::Void __swiftcall FMFManager.didReceive(devices:fromServer:)(Swift::OpaquePointer_optional devices, Swift::Bool fromServer)
{
  if (devices.value._rawValue)
  {
    Swift::Bool is_nil = devices.is_nil;
    rawValue = devices.value._rawValue;
    swift_beginAccess();
    if (MEMORY[0x21D4B6C80](v2 + 32))
    {
      uint64_t v5 = *(void *)(v2 + 40);
      uint64_t ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t, void *, Swift::Bool, uint64_t, uint64_t))(v5 + 80))(v2, rawValue, is_nil, ObjectType, v5);
      swift_unknownObjectRelease();
    }
  }
}

uint64_t sub_21CB11464(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[3] = a4;
  v5[4] = a5;
  uint64_t v6 = sub_21CB87840();
  v5[5] = v6;
  v5[6] = *(void *)(v6 - 8);
  v5[7] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_21CB11524, 0, 0);
}

uint64_t sub_21CB11524()
{
  uint64_t v1 = *(void *)(v0[3] + 208);
  v0[8] = v1;
  uint64_t v2 = v0[7];
  if (v1)
  {
    uint64_t v3 = v0[5];
    uint64_t v4 = v0[6];
    uint64_t v5 = v0[4];
    sub_21CA57E34(&qword_267C95260);
    uint64_t v6 = *(void *)(type metadata accessor for FMFFriend() - 8);
    unint64_t v7 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
    uint64_t v8 = swift_allocObject();
    v0[9] = v8;
    *(_OWORD *)(v8 + 16) = xmmword_21CB8B220;
    sub_21CA57180(v5, v8 + v7, (uint64_t (*)(void))type metadata accessor for FMFFriend);
    (*(void (**)(uint64_t, void, uint64_t))(v4 + 104))(v2, *MEMORY[0x263F3CCA0], v3);
    swift_retain();
    uint64_t v9 = (void *)swift_task_alloc();
    v0[10] = v9;
    void *v9 = v0;
    v9[1] = sub_21CB11708;
    uint64_t v10 = v0[7];
    return sub_21CA101E8(v8, v10);
  }
  else
  {
    swift_task_dealloc();
    uint64_t v12 = (uint64_t (*)(void))v0[1];
    return v12();
  }
}

uint64_t sub_21CB11708()
{
  uint64_t v2 = *(void *)(*v1 + 56);
  uint64_t v3 = *(void *)(*v1 + 48);
  uint64_t v4 = *(void *)(*v1 + 40);
  uint64_t v5 = *v1;
  *(void *)(*v1 + 88) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  swift_bridgeObjectRelease();
  swift_release();
  if (v0)
  {
    return MEMORY[0x270FA2498](sub_21CB118FC, 0, 0);
  }
  else
  {
    swift_task_dealloc();
    uint64_t v6 = *(uint64_t (**)(void))(v5 + 8);
    return v6();
  }
}

uint64_t sub_21CB118FC()
{
  if (qword_267C94990 != -1) {
    swift_once();
  }
  uint64_t v1 = (void *)v0[11];
  uint64_t v2 = sub_21CB880A0();
  sub_21CA4CC18(v2, (uint64_t)qword_267CA5368);
  id v3 = v1;
  id v4 = v1;
  uint64_t v5 = sub_21CB88070();
  os_log_type_t v6 = sub_21CB88880();
  BOOL v7 = os_log_type_enabled(v5, v6);
  uint64_t v8 = (void *)v0[11];
  if (v7)
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    uint64_t v10 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v9 = 138412290;
    id v11 = v8;
    uint64_t v12 = _swift_stdlib_bridgeErrorToNSError();
    v0[2] = v12;
    sub_21CB889C0();
    void *v10 = v12;

    _os_log_impl(&dword_21CA00000, v5, v6, "FMFManager: Error while update locating %@", v9, 0xCu);
    sub_21CA57E34(&qword_267C95020);
    swift_arrayDestroy();
    MEMORY[0x21D4B6B70](v10, -1, -1);
    MEMORY[0x21D4B6B70](v9, -1, -1);
  }
  else
  {
  }
  swift_task_dealloc();
  uint64_t v13 = (uint64_t (*)(void))v0[1];
  return v13();
}

uint64_t sub_21CB11B08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[2] = a4;
  v5[3] = a5;
  uint64_t v6 = sub_21CB87840();
  v5[4] = v6;
  v5[5] = *(void *)(v6 - 8);
  v5[6] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_21CB11BC8, 0, 0);
}

uint64_t sub_21CB11BC8()
{
  uint64_t v1 = *(void *)(v0[2] + 208);
  v0[7] = v1;
  if (v1)
  {
    (*(void (**)(void, void, void))(v0[5] + 104))(v0[6], *MEMORY[0x263F3CCA8], v0[4]);
    swift_retain();
    uint64_t v2 = (void *)swift_task_alloc();
    v0[8] = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_21CB11CD4;
    uint64_t v3 = v0[6];
    uint64_t v4 = v0[3];
    return sub_21CA101E8(v4, v3);
  }
  else
  {
    swift_task_dealloc();
    uint64_t v6 = (uint64_t (*)(void))v0[1];
    return v6();
  }
}

uint64_t sub_21CB11CD4()
{
  uint64_t v2 = *(void *)(*v1 + 48);
  uint64_t v3 = *(void *)(*v1 + 40);
  uint64_t v4 = *(void *)(*v1 + 32);
  uint64_t v5 = *v1;
  *(void *)(v5 + 72) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  swift_release();
  if (v0)
  {
    return MEMORY[0x270FA2498](sub_21CB11E98, 0, 0);
  }
  else
  {
    swift_task_dealloc();
    uint64_t v6 = *(uint64_t (**)(void))(v5 + 8);
    return v6();
  }
}

uint64_t sub_21CB11E98()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

Swift::Void __swiftcall FMFManager.didReceive(locationAlerts:)(Swift::OpaquePointer locationAlerts)
{
  swift_beginAccess();
  if (MEMORY[0x21D4B6C80](v1 + 32))
  {
    uint64_t v3 = *(void *)(v1 + 40);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, void *, uint64_t, uint64_t))(v3 + 40))(v1, locationAlerts._rawValue, ObjectType, v3);
    swift_unknownObjectRelease();
  }
}

Swift::Void __swiftcall FMFManager.didReceive(labelledLocations:)(Swift::OpaquePointer_optional labelledLocations)
{
  uint64_t v2 = v1;
  if (labelledLocations.value._rawValue)
  {
    rawValue = labelledLocations.value._rawValue;
    swift_beginAccess();
    if (MEMORY[0x21D4B6C80](v2 + 32))
    {
      uint64_t v4 = *(void *)(v2 + 40);
      uint64_t ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t, void *, uint64_t, uint64_t))(v4 + 96))(v2, rawValue, ObjectType, v4);
      swift_unknownObjectRelease();
    }
  }
  uint64_t v6 = *(char **)(v2 + 184);
  if (v6)
  {
    uint64_t v7 = *(void **)&v6[OBJC_IVAR____TtC7FMFCore23FMFMyLocationController_currentMyLocation];
    if (v7)
    {
      uint64_t v8 = *(void **)&v6[OBJC_IVAR____TtC7FMFCore23FMFMyLocationController_unshiftedLocation];
      if (v8)
      {
        uint64_t v9 = v6;
        id v10 = v7;
        id v11 = v8;
        sub_21CB31514(v10, v11, 1);
      }
    }
  }
}

Swift::Void __swiftcall FMFManager.willSaveCacheToDisk()()
{
}

uint64_t sub_21CB120AC(uint64_t a1)
{
  swift_beginAccess();
  uint64_t result = MEMORY[0x21D4B6C80](v1 + 32);
  if (result)
  {
    uint64_t v4 = *(void *)(v1 + 40);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 40))(v1, a1, ObjectType, v4);
    return swift_unknownObjectRelease();
  }
  return result;
}

void sub_21CB12140()
{
}

uint64_t FMFManager.didReceive(myLocation:)(uint64_t a1)
{
  swift_beginAccess();
  uint64_t result = MEMORY[0x21D4B6C80](v1 + 32);
  if (result)
  {
    uint64_t v4 = *(void *)(v1 + 40);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 88))(v1, a1, ObjectType, v4);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_21CB121F4(unsigned char *a1)
{
  if (*a1) {
    return 0;
  }
  swift_retain();
  sub_21CA57E34(&qword_267C95CF0);
  sub_21CB88910();
  swift_release();
  if (v6 && (swift_bridgeObjectRetain(), sub_21CA2D658(v6), v7))
  {
    swift_bridgeObjectRelease();
    type metadata accessor for FMLocalize();
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    id v3 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  }
  else
  {
    type metadata accessor for FMLocalize();
    uint64_t v4 = swift_getObjCClassFromMetadata();
    id v3 = objc_msgSend(self, sel_bundleForClass_, v4);
  }
  uint64_t v1 = sub_21CB872B0();

  return v1;
}

uint64_t sub_21CB123C8(unsigned char *a1)
{
  if (!*a1)
  {
    uint64_t v2 = v1;
    swift_retain();
    sub_21CA57E34(&qword_267C95CF0);
    sub_21CB88910();
    swift_release();
    if (v18 && (uint64_t v3 = v19, v4 = v20, swift_bridgeObjectRetain(), sub_21CA2D658(v18), v20))
    {
      type metadata accessor for FMFSavePrefsRequest();
      uint64_t v5 = swift_allocObject();
      *(unsigned char *)(v5 + qword_267C95578) = 0;
      uint64_t v6 = (_OWORD *)(v5 + qword_267C95570);
      *uint64_t v6 = 0u;
      v6[1] = 0u;
      uint64_t v7 = (uint64_t *)(v5 + qword_267C95580);
      *uint64_t v7 = v3;
      v7[1] = v4;
      uint64_t v8 = sub_21CA36A84();
      swift_beginAccess();
      sub_21CA219EC(v2 + 136, (uint64_t)&v18);
      uint64_t v9 = v19;
      uint64_t v10 = v20;
      sub_21CA2B2CC(&v18, v19);
      id v11 = *(void (**)(void *, void (*)(uint64_t, void *), uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 64);
      uint64_t refreshed = type metadata accessor for FMFInitRefreshClientResponse();
      swift_retain();
      v11(v8, sub_21CB182A8, v2, refreshed, v9, v10);
      swift_release();
      swift_release();
      sub_21CA2B0D0((uint64_t)&v18);
    }
    else
    {
      if (qword_267C94990 != -1) {
        swift_once();
      }
      uint64_t v13 = sub_21CB880A0();
      sub_21CA4CC18(v13, (uint64_t)qword_267CA5368);
      unint64_t v14 = sub_21CB88070();
      os_log_type_t v15 = sub_21CB88860();
      if (os_log_type_enabled(v14, v15))
      {
        Swift::Bool v16 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)Swift::Bool v16 = 0;
        _os_log_impl(&dword_21CA00000, v14, v15, "Me device id not available. SAVEME alert cannot respond with savePrefs request", v16, 2u);
        MEMORY[0x21D4B6B70](v16, -1, -1);
      }
    }
  }
  return 1;
}

void sub_21CB12674(uint64_t a1, void *a2)
{
  if (a2)
  {
    if (qword_267C94990 != -1) {
      swift_once();
    }
    uint64_t v3 = sub_21CB880A0();
    sub_21CA4CC18(v3, (uint64_t)qword_267CA5368);
    swift_retain();
    id v4 = a2;
    swift_retain();
    id v5 = a2;
    osos_log_t log = sub_21CB88070();
    os_log_type_t v6 = sub_21CB88880();
    if (os_log_type_enabled(oslog, v6))
    {
      uint64_t v7 = swift_slowAlloc();
      uint64_t v8 = swift_slowAlloc();
      *(_DWORD *)uint64_t v7 = 136315394;
      uint64_t v21 = v8;
      sub_21CA57E34(&qword_267C97068);
      uint64_t v9 = sub_21CB88310();
      sub_21CA4E450(v9, v10, &v21);
      sub_21CB889C0();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v7 + 12) = 2080;
      sub_21CA57E34(&qword_267C975A0);
      uint64_t v11 = sub_21CB88990();
      sub_21CA4E450(v11, v12, &v21);
      sub_21CB889C0();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_21CA00000, oslog, v6, "%s: Error sending save me device - %s", (uint8_t *)v7, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x21D4B6B70](v8, -1, -1);
      MEMORY[0x21D4B6B70](v7, -1, -1);
    }
    else
    {
      swift_release_n();
    }
  }
  else
  {
    if (qword_267C94990 != -1) {
      swift_once();
    }
    uint64_t v13 = sub_21CB880A0();
    sub_21CA4CC18(v13, (uint64_t)qword_267CA5368);
    swift_retain_n();
    unint64_t v14 = sub_21CB88070();
    os_log_type_t v15 = sub_21CB88880();
    if (os_log_type_enabled(v14, v15))
    {
      Swift::Bool v16 = (uint8_t *)swift_slowAlloc();
      uint64_t v17 = swift_slowAlloc();
      *(_DWORD *)Swift::Bool v16 = 136315138;
      uint64_t v21 = v17;
      sub_21CA57E34(&qword_267C97068);
      uint64_t v18 = sub_21CB88310();
      sub_21CA4E450(v18, v19, &v21);
      sub_21CB889C0();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_21CA00000, v14, v15, "%s: Saved me device for SAVEME alert.", v16, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x21D4B6B70](v17, -1, -1);
      MEMORY[0x21D4B6B70](v16, -1, -1);
    }
    else
    {

      swift_release_n();
    }
  }
}

uint64_t sub_21CB12AA8()
{
  void (*v13)(long long *__return_ptr);
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  id v20;
  char *v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  id v25;
  void *v26;
  id v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(uint64_t, _UNKNOWN **, uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(uint64_t, _UNKNOWN **, uint64_t, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t result;
  uint64_t v39;
  unsigned char v40[24];
  long long v41[2];

  uint64_t v1 = v0;
  uint64_t v2 = sub_21CA57E34(&qword_267C95400);
  MEMORY[0x270FA5388](v2 - 8);
  id v4 = &v40[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = *(void *)(v0 + 56);
  uint64_t v6 = *(void *)(v0 + 216);
  int v7 = *(unsigned __int8 *)(v1 + 225);
  type metadata accessor for FMFDataManager();
  swift_allocObject();
  swift_retain();
  swift_retain();
  *(void *)(v1 + 88) = sub_21CA1C888(v5, 0, v6, v7);
  swift_release();
  int v8 = *(unsigned __int8 *)(v1 + 225);
  id v9 = objc_allocWithZone((Class)type metadata accessor for FMFGenericResponseHandler());
  uint64_t v10 = swift_retain();
  uint64_t v11 = sub_21CA1B8E8(v10, v8);
  unint64_t v12 = *(void **)(v1 + 120);
  *(void *)(v1 + 120) = v11;

  uint64_t v13 = *(void (**)(long long *__return_ptr))(v5
                                                      + OBJC_IVAR____TtC7FMFCore23FMFManagerConfiguration_interactionControllerProvider);
  unint64_t v14 = *(void **)(v1 + 120);
  os_log_type_t v15 = v5 + OBJC_IVAR____TtC7FMFCore23FMFManagerConfiguration_preferredLocale;
  Swift::Bool v16 = sub_21CB87630();
  uint64_t v17 = *(void *)(v16 - 8);
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v17 + 16))(v4, v15, v16);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v17 + 56))(v4, 0, 1, v16);
  swift_retain();
  uint64_t v18 = v14;
  v13(v41);
  swift_release();

  sub_21CA1B88C((uint64_t)v4, &qword_267C95400);
  swift_beginAccess();
  sub_21CA2B0D0(v1 + 136);
  sub_21CA6375C(v41, v1 + 136);
  swift_endAccess();
  unint64_t v19 = *(void *)(v1 + 88);
  sub_21CA219EC(v1 + 136, (uint64_t)v41);
  uint64_t v20 = objc_allocWithZone((Class)type metadata accessor for FMAPSConnectionHandler());
  swift_retain();
  uint64_t v21 = (char *)sub_21CA142FC(0xD000000000000017, 0x800000021CB96E50, 0xD000000000000024, 0x800000021CB95950, 0, 0);
  LODWORD(v18) = *(unsigned __int8 *)(v1 + 225);
  LODWORD(v16) = *(unsigned __int8 *)(v5 + OBJC_IVAR____TtC7FMFCore23FMFManagerConfiguration_useOptimizedFetch);
  type metadata accessor for FMFRefreshController();
  swift_allocObject();
  *(void *)(v1 + 128) = sub_21CA1A190(v19, (uint64_t)v41, v21, (int)v18, v16);
  swift_release();
  sub_21CA219EC(v1 + 136, (uint64_t)v41);
  unint64_t v22 = *(void *)(v1 + 88);
  uint64_t v23 = *(void **)(v1 + 96);
  uint64_t v24 = *(void *)(v1 + 112);
  type metadata accessor for FMFActionsController();
  swift_allocObject();
  swift_retain();
  uint64_t v25 = v23;
  swift_retain();
  *(void *)(v1 + 176) = sub_21CA14E38((uint64_t)v41, v22, v25, v24);
  swift_release();
  if ((*(unsigned char *)(v5 + OBJC_IVAR____TtC7FMFCore23FMFManagerConfiguration_enabledSubsystems) & 2) != 0)
  {
    sub_21CA219EC(v1 + 136, (uint64_t)v41);
    uint64_t v27 = objc_allocWithZone((Class)type metadata accessor for FMFMyLocationController());
    unint64_t v28 = sub_21CA12B64((uint64_t)v41);
    uint64_t v26 = *(void **)(v1 + 184);
    *(void *)(v1 + 184) = v28;
  }
  else
  {
    uint64_t v26 = *(void **)(v1 + 184);
    *(void *)(v1 + 184) = 0;
  }

  *(void *)(*(void *)(v1 + 88) + 40) = &protocol witness table for FMFManager;
  swift_unknownObjectWeakAssign();
  swift_beginAccess();
  uint64_t v29 = *(void *)(v1 + 160);
  uint64_t v30 = *(void *)(v1 + 168);
  sub_21CA21950(v1 + 136, v29);
  uint64_t v31 = *(void (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v30 + 16);
  uint64_t v32 = swift_unknownObjectRetain();
  v31(v32, &off_26CD6DE38, v29, v30);
  uint64_t v33 = *(void *)(v1 + 160);
  char v34 = *(void *)(v1 + 168);
  sub_21CA21950(v1 + 136, v33);
  uint64_t v35 = *(void (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v34 + 40);
  uint64_t v36 = swift_unknownObjectRetain();
  v35(v36, &off_26CD6DE58, v33, v34);
  swift_endAccess();
  uint64_t v37 = *(void *)(v1 + 120) + OBJC_IVAR____TtC7FMFCore25FMFGenericResponseHandler_delegate;
  swift_beginAccess();
  *(void *)(v37 + 8) = &protocol witness table for FMFManager;
  swift_unknownObjectWeakAssign();
  *(void *)(*(void *)(v1 + 128) + 48) = &off_26CD6DDA0;
  uint64_t result = swift_unknownObjectWeakAssign();
  uint64_t v39 = *(void *)(v1 + 184);
  if (v39)
  {
    *(void *)(v39 + OBJC_IVAR____TtC7FMFCore23FMFMyLocationController_delegate + 8) = &protocol witness table for FMFManager;
    return swift_unknownObjectWeakAssign();
  }
  return result;
}

uint64_t sub_21CB12F94(void *a1)
{
  uint64_t v2 = (char *)a1 + OBJC_IVAR____TtC7FMFCore10FMFManager_isInitialized;
  swift_beginAccess();
  char v3 = *v2;
  *uint64_t v2 = 0;
  sub_21CA13710(v3);
  swift_beginAccess();
  if (MEMORY[0x21D4B6C80](a1 + 4))
  {
    uint64_t v4 = a1[5];
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(void *, void, void, uint64_t, uint64_t))(v4 + 80))(a1, MEMORY[0x263F8EE78], 0, ObjectType, v4);
    swift_unknownObjectRelease();
  }
  if (MEMORY[0x21D4B6C80](a1 + 4))
  {
    uint64_t v6 = a1[5];
    uint64_t v7 = swift_getObjectType();
    (*(void (**)(void *, void, void, uint64_t, uint64_t))(v6 + 32))(a1, MEMORY[0x263F8EE78], 0, v7, v6);
    swift_unknownObjectRelease();
  }
  uint64_t v8 = a1[9];
  uint64_t v9 = a1[10];
  v11[0] = a1[8];
  v11[1] = v8;
  void v11[2] = v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_21CA0C7DC(v11);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_21CB130F8(void (*a1)(void), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v47 = a2;
  uint64_t v48 = a5;
  uint64_t v44 = a1;
  uint64_t v7 = sub_21CA57E34(&qword_267C95400);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v46 = (uint64_t)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_21CA57E34(&qword_267C95D60);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v42 = (uint64_t *)((char *)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v45 = type metadata accessor for FMReverseGeocodingRequest();
  uint64_t v43 = *(void *)(v45 - 8);
  MEMORY[0x270FA5388](v45);
  uint64_t v41 = (uint64_t)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for FMFLocation();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(void *)(v13 + 64);
  uint64_t v15 = MEMORY[0x270FA5388](v12 - 8);
  Swift::Bool v16 = (char *)&v41 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  unint64_t v19 = (uint64_t *)((char *)&v41 - v18);
  MEMORY[0x270FA5388](v17);
  uint64_t v21 = (char *)&v41 - v20;
  uint64_t v22 = *(void *)(a3 + 216);
  sub_21CA57180(a4, (uint64_t)&v41 - v20, (uint64_t (*)(void))type metadata accessor for FMFLocation);
  uint64_t v49 = v19;
  sub_21CA57180((uint64_t)v21, (uint64_t)v19, (uint64_t (*)(void))type metadata accessor for FMFLocation);
  unint64_t v23 = (*(unsigned __int8 *)(v13 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  unint64_t v24 = (v14 + v23 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v25 = swift_allocObject();
  uint64_t v26 = v25 + v23;
  uint64_t v27 = v44;
  uint64_t v28 = (uint64_t)v21;
  uint64_t v29 = v47;
  sub_21CA5913C(v28, v26, (uint64_t (*)(void))type metadata accessor for FMFLocation);
  uint64_t v30 = v48;
  *(void *)(v25 + v24) = v48;
  uint64_t v31 = (void *)(v25 + ((v24 + 15) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v32 = v30;
  *uint64_t v31 = v27;
  v31[1] = v29;
  sub_21CA57180(a4, (uint64_t)v16, (uint64_t (*)(void))type metadata accessor for FMFLocation);
  uint64_t v33 = v46;
  sub_21CA24E80(v22 + qword_267CA5298, v46, &qword_267C95400);
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  uint64_t v34 = (uint64_t)v16;
  uint64_t v35 = v42;
  sub_21CB1DC08(v34, v33, v42);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v43 + 48))(v35, 1, v45) == 1)
  {
    sub_21CA1B88C((uint64_t)v35, &qword_267C95D60);
    sub_21CA76144(v51);
    sub_21CA26A4C((uint64_t)v51, (uint64_t)v50, &qword_267C951E0);
    uint64_t v36 = v49;
    sub_21CB13540((uint64_t)v50, v49, v32, v27, v29);
    swift_release();
    uint64_t v37 = v36;
  }
  else
  {
    uint64_t v38 = (uint64_t)v35;
    uint64_t v39 = v41;
    sub_21CA5913C(v38, v41, (uint64_t (*)(void))type metadata accessor for FMReverseGeocodingRequest);
    sub_21CB18850(v39, (uint64_t)sub_21CB178A4, v25);
    sub_21CA582D8(v39, (uint64_t (*)(void))type metadata accessor for FMReverseGeocodingRequest);
    swift_release();
    uint64_t v37 = v49;
  }
  sub_21CA582D8((uint64_t)v37, (uint64_t (*)(void))type metadata accessor for FMFLocation);
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_21CB13540(uint64_t a1, void *a2, uint64_t a3, void (*a4)(void), uint64_t a5)
{
  uint64_t v71 = a3;
  uint64_t v76 = sub_21CA57E34(&qword_267C97108);
  MEMORY[0x270FA5388](v76);
  uint64_t v75 = (uint64_t)&v63 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_21CA57E34((uint64_t *)&unk_267C96EF0);
  uint64_t v11 = MEMORY[0x270FA5388](v10 - 8);
  uint64_t v74 = (uint64_t)&v63 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v68 = (uint64_t)&v63 - v13;
  uint64_t v69 = type metadata accessor for FMFLocation();
  uint64_t v77 = *(void *)(v69 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v69);
  Swift::Bool v16 = (uint64_t *)((char *)&v63 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v17 = MEMORY[0x270FA5388](v14);
  uint64_t v72 = (uint64_t)&v63 - v18;
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  uint64_t v70 = (uint64_t *)((char *)&v63 - v20);
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  uint64_t v73 = (uint64_t)&v63 - v22;
  uint64_t v23 = MEMORY[0x270FA5388](v21);
  uint64_t v25 = (char *)&v63 - v24;
  uint64_t v26 = MEMORY[0x270FA5388](v23);
  uint64_t v28 = (char *)&v63 - v27;
  MEMORY[0x270FA5388](v26);
  uint64_t v30 = (uint64_t *)((char *)&v63 - v29);
  sub_21CA26A4C(a1, (uint64_t)v84, &qword_267C951E0);
  if (qword_267C94990 != -1) {
    swift_once();
  }
  uint64_t v31 = sub_21CB880A0();
  sub_21CA4CC18(v31, (uint64_t)qword_267CA5368);
  sub_21CA57180((uint64_t)a2, (uint64_t)v30, (uint64_t (*)(void))type metadata accessor for FMFLocation);
  sub_21CA57180((uint64_t)a2, (uint64_t)v28, (uint64_t (*)(void))type metadata accessor for FMFLocation);
  sub_21CA57180((uint64_t)a2, (uint64_t)v25, (uint64_t (*)(void))type metadata accessor for FMFLocation);
  uint64_t v32 = sub_21CB88070();
  int v33 = sub_21CB88880();
  if (os_log_type_enabled(v32, (os_log_type_t)v33))
  {
    os_log_t v65 = v32;
    uint64_t v66 = a5;
    unint64_t v67 = a4;
    uint64_t v34 = swift_slowAlloc();
    uint64_t v35 = swift_slowAlloc();
    v83[0] = v35;
    *(_DWORD *)uint64_t v34 = 136315651;
    unint64_t v36 = v30[1];
    int v64 = v33;
    uint64_t v63 = v35;
    if (v36)
    {
      uint64_t v37 = *v30;
      unint64_t v38 = v36;
    }
    else
    {
      unint64_t v38 = 0xE300000000000000;
      uint64_t v37 = 7104878;
    }
    swift_bridgeObjectRetain();
    v82[0] = sub_21CA4E450(v37, v38, v83);
    sub_21CB889C0();
    swift_bridgeObjectRelease();
    sub_21CA582D8((uint64_t)v30, (uint64_t (*)(void))type metadata accessor for FMFLocation);
    *(_WORD *)(v34 + 12) = 2049;
    uint64_t v40 = v69;
    sub_21CA26A4C((uint64_t)&v28[*(int *)(v69 + 44)], (uint64_t)v81, &qword_267C951F0);
    sub_21CA26A4C((uint64_t)v81, (uint64_t)v82, &qword_267C951F0);
    if (sub_21CA7CDBC((uint64_t)v82) == 1) {
      uint64_t v42 = 0x7FF4000000000000;
    }
    else {
      objc_msgSend((id)v82[38], sel_coordinate);
    }
    v80[0] = v42;
    sub_21CB889C0();
    sub_21CA582D8((uint64_t)v28, (uint64_t (*)(void))type metadata accessor for FMFLocation);
    *(_WORD *)(v34 + 22) = 2049;
    sub_21CA26A4C((uint64_t)&v25[*(int *)(v40 + 44)], (uint64_t)v79, &qword_267C951F0);
    sub_21CA26A4C((uint64_t)v79, (uint64_t)v80, &qword_267C951F0);
    if (sub_21CA7CDBC((uint64_t)v80) == 1) {
      uint64_t v43 = 0x7FF4000000000000;
    }
    else {
      objc_msgSend((id)v80[38], sel_coordinate);
    }
    a4 = v67;
    uint64_t v39 = v71;
    os_log_type_t v44 = v64;
    uint64_t v78 = v43;
    sub_21CB889C0();
    sub_21CA582D8((uint64_t)v25, (uint64_t (*)(void))type metadata accessor for FMFLocation);
    os_log_type_t v45 = v44;
    os_log_t v46 = v65;
    _os_log_impl(&dword_21CA00000, v65, v45, "👀 FMFManager.FMFSecureLocationRefreshControllerDelegate: did reverse geocode shallow/live (shifted) location for %s: shifted: {%{private}f,%{private}f}", (uint8_t *)v34, 0x20u);
    uint64_t v47 = v63;
    swift_arrayDestroy();
    MEMORY[0x21D4B6B70](v47, -1, -1);
    MEMORY[0x21D4B6B70](v34, -1, -1);

    uint64_t v41 = *(void *)(v39 + 16);
    if (!v41) {
      goto LABEL_28;
    }
  }
  else
  {
    sub_21CA582D8((uint64_t)v30, (uint64_t (*)(void))type metadata accessor for FMFLocation);
    sub_21CA582D8((uint64_t)v28, (uint64_t (*)(void))type metadata accessor for FMFLocation);
    sub_21CA582D8((uint64_t)v25, (uint64_t (*)(void))type metadata accessor for FMFLocation);

    uint64_t v39 = v71;
    uint64_t v40 = v69;
    uint64_t v41 = *(void *)(v71 + 16);
    if (!v41) {
      goto LABEL_28;
    }
  }
  uint64_t v48 = v39 + ((*(unsigned __int8 *)(v77 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v77 + 80));
  uint64_t v49 = *(void *)(v77 + 72);
  swift_bridgeObjectRetain();
  do
  {
    sub_21CA57180(v48, (uint64_t)v16, (uint64_t (*)(void))type metadata accessor for FMFLocation);
    uint64_t v50 = v16[1];
    uint64_t v51 = a2[1];
    if (v50)
    {
      if (v51)
      {
        BOOL v52 = *v16 == *a2 && v50 == v51;
        if (v52 || (sub_21CB88F50() & 1) != 0)
        {
LABEL_26:
          swift_bridgeObjectRelease();
          uint64_t v53 = v68;
          sub_21CA5913C((uint64_t)v16, v68, (uint64_t (*)(void))type metadata accessor for FMFLocation);
          uint64_t v54 = 0;
          goto LABEL_29;
        }
      }
    }
    else if (!v51)
    {
      goto LABEL_26;
    }
    sub_21CA582D8((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for FMFLocation);
    v48 += v49;
    --v41;
  }
  while (v41);
  swift_bridgeObjectRelease();
LABEL_28:
  uint64_t v54 = 1;
  uint64_t v53 = v68;
LABEL_29:
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v77 + 56))(v53, v54, 1, v40);
  os_log_type_t v55 = v70;
  sub_21CA57180((uint64_t)a2, (uint64_t)v70, (uint64_t (*)(void))type metadata accessor for FMFLocation);
  uint64_t v56 = v72;
  sub_21CA57180((uint64_t)a2, v72, (uint64_t (*)(void))type metadata accessor for FMFLocation);
  sub_21CA26A4C((uint64_t)v84, (uint64_t)v82, &qword_267C951E0);
  sub_21CA81C54((uint64_t)v84, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_21CA5E3D0);
  uint64_t v57 = v73;
  FMFLocation.init(from:updatedLocation:address:)(v55, v56, (uint64_t)v82, v73);
  sub_21CA81C54((uint64_t)v84, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_21CA5E3D0);
  uint64_t v58 = v74;
  sub_21CB0A2F8(v53, (uint64_t)v84, v74);
  uint64_t v59 = sub_21CA57E34(&qword_267C97100);
  uint64_t v60 = v75;
  uint64_t v61 = v75 + *(int *)(v59 + 48);
  sub_21CA57180(v57, v75, (uint64_t (*)(void))type metadata accessor for FMFLocation);
  sub_21CA24E80(v58, v61, (uint64_t *)&unk_267C96EF0);
  swift_storeEnumTagMultiPayload();
  a4(v60);
  sub_21CA1B88C(v60, &qword_267C97108);
  sub_21CA1B88C(v58, (uint64_t *)&unk_267C96EF0);
  sub_21CA582D8(v57, (uint64_t (*)(void))type metadata accessor for FMFLocation);
  return sub_21CA1B88C(v53, (uint64_t *)&unk_267C96EF0);
}

uint64_t sub_21CB13D68(uint64_t *a1)
{
  uint64_t v1 = *a1;
  sub_21CB09C88(*a1);
  sub_21CB0A898(v1);
  swift_retain();
  sub_21CB88910();
  swift_release();
  swift_bridgeObjectRelease();
  swift_retain();
  sub_21CB88910();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_21CB13E64@<X0>(uint64_t a1@<X8>)
{
  return sub_21CB21A88(v1, a1);
}

uint64_t sub_21CB13E80@<X0>(uint64_t a1@<X8>)
{
  return sub_21CB21B00(v1, a1);
}

uint64_t sub_21CB13E9C@<X0>(uint64_t a1@<X8>)
{
  return sub_21CB21AA0(v1, a1);
}

uint64_t sub_21CB13EB8@<X0>(void *a1@<X8>)
{
  return sub_21CB21C0C(v1, a1);
}

uint64_t sub_21CB13ED4@<X0>(void *a1@<X8>)
{
  return sub_21CB21C4C(v1, a1);
}

uint64_t sub_21CB13EF0@<X0>(void *a1@<X8>)
{
  return sub_21CB21C2C(v1, a1);
}

uint64_t sub_21CB13F0C@<X0>(size_t *a1@<X8>)
{
  return sub_21CB21C6C(a1);
}

uint64_t sub_21CB13F28(uint64_t a1, int *a2)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_21CA65250;
  return v6(a1);
}

uint64_t sub_21CB14004(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_21CB1402C(uint64_t *a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  a4();
  uint64_t v5 = *a1 + 8;
  uint64_t result = sub_21CB889C0();
  *a1 = v5;
  return result;
}

uint64_t sub_21CB14084(uint64_t a1, int *a2)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v5 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  char v3 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v3;
  *char v3 = v2;
  v3[1] = sub_21CB14164;
  return v5(v2 + 32);
}

uint64_t sub_21CB14164()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(unsigned char **)(*v0 + 16);
  uint64_t v5 = *v0;
  swift_task_dealloc();
  *uint64_t v2 = *(unsigned char *)(v1 + 32);
  char v3 = *(uint64_t (**)(void))(v5 + 8);
  return v3();
}

uint64_t sub_21CB14278(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = type metadata accessor for FMFLocation();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v10 = (char *)v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x263F8EE78];
  if (v11)
  {
    v18[1] = v3;
    uint64_t v21 = MEMORY[0x263F8EE78];
    sub_21CB88C20();
    uint64_t v13 = *(unsigned __int8 *)(v8 + 80);
    uint64_t v14 = a1 + ((v13 + 32) & ~v13);
    uint64_t v15 = *(void *)(v8 + 72);
    uint64_t v19 = (v13 + 24) & ~v13;
    uint64_t v20 = v15;
    unint64_t v16 = (v9 + v19 + 7) & 0xFFFFFFFFFFFFFFF8;
    v18[2] = v16 + 8;
    _OWORD v18[3] = v13 | 7;
    do
    {
      sub_21CA57180(v14, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for FMFLocation);
      uint64_t v17 = swift_allocObject();
      *(void *)(v17 + 16) = a2;
      sub_21CA5913C((uint64_t)v10, v17 + v19, (uint64_t (*)(void))type metadata accessor for FMFLocation);
      *(void *)(v17 + v16) = a3;
      sub_21CA57E34(&qword_267C970C0);
      swift_allocObject();
      swift_retain();
      swift_bridgeObjectRetain();
      sub_21CB880C0();
      sub_21CB88C00();
      sub_21CB88C30();
      sub_21CB88C40();
      sub_21CB88C10();
      v14 += v20;
      --v11;
    }
    while (v11);
    return v21;
  }
  return result;
}

uint64_t sub_21CB1448C(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_21CB88100();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_21CB88150();
  uint64_t v34 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  int v33 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_267C94990 != -1) {
    swift_once();
  }
  uint64_t v10 = sub_21CB880A0();
  sub_21CA4CC18(v10, (uint64_t)qword_267CA5368);
  id v11 = a1;
  id v12 = a1;
  uint64_t v13 = sub_21CB88070();
  os_log_type_t v14 = sub_21CB88880();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = swift_slowAlloc();
    uint64_t v31 = v2;
    unint64_t v16 = (uint8_t *)v15;
    uint64_t v17 = swift_slowAlloc();
    uint64_t v32 = v7;
    uint64_t v18 = v17;
    aBlock[0] = v17;
    *(_DWORD *)unint64_t v16 = 136315138;
    uint64_t v30 = v16 + 4;
    uint64_t v37 = (uint64_t)a1;
    id v19 = a1;
    sub_21CA57E34(&qword_267C975A0);
    uint64_t v20 = sub_21CB88310();
    uint64_t v37 = sub_21CA4E450(v20, v21, (uint64_t *)aBlock);
    sub_21CB889C0();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_21CA00000, v13, v14, "FMFManager: initializationDidFail %s", v16, 0xCu);
    swift_arrayDestroy();
    uint64_t v22 = v18;
    uint64_t v7 = v32;
    MEMORY[0x21D4B6B70](v22, -1, -1);
    uint64_t v23 = v16;
    uint64_t v2 = v31;
    MEMORY[0x21D4B6B70](v23, -1, -1);

    if (!a1) {
      goto LABEL_10;
    }
  }
  else
  {

    if (!a1) {
      goto LABEL_10;
    }
  }
  if (*((unsigned char *)v2 + 225) == 1 && (*((unsigned char *)v2 + 226) & 1) == 0)
  {
    *((unsigned char *)v2 + 226) = 1;
    swift_retain();
    sub_21CA57E34(&qword_267C95D50);
    sub_21CB88910();
    swift_release();
    sub_21CB0D814(aBlock[0], a1);
    swift_bridgeObjectRelease();
  }
LABEL_10:
  uint64_t v24 = (char *)v2 + OBJC_IVAR____TtC7FMFCore10FMFManager_isInitialized;
  uint64_t result = swift_beginAccess();
  if ((*v24 & 1) == 0)
  {
    uint64_t v26 = swift_allocObject();
    v26[2].uint64_t isa = v2;
    v26[3].uint64_t isa = (Class)a1;
    aBlock[4] = sub_21CB17CAC;
    aBlock[5] = v26;
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_21CA1B084;
    uint64_t aBlock[3] = &unk_26CD6E080;
    uint64_t v27 = _Block_copy(aBlock);
    id v28 = a1;
    swift_retain();
    uint64_t v29 = v33;
    sub_21CB88120();
    uint64_t v35 = MEMORY[0x263F8EE78];
    sub_21CA5DEAC((unint64_t *)&qword_267C96FC0, MEMORY[0x263F8F030]);
    sub_21CA57E34((uint64_t *)&unk_267C96DD0);
    sub_21CA356BC((unint64_t *)&qword_267C96FD0, (uint64_t *)&unk_267C96DD0);
    sub_21CB88A60();
    MEMORY[0x21D4B5A20](0, v29, v7, v27);
    _Block_release(v27);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    (*(void (**)(char *, uint64_t))(v34 + 8))(v29, v8);
    return swift_release();
  }
  return result;
}

uint64_t sub_21CB149D0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for FMFLocation();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v40 = (uint64_t)&v36 - v6;
  uint64_t result = MEMORY[0x270FA5388](v5);
  uint64_t v10 = (char *)&v36 - v9;
  uint64_t v11 = *(void *)(a1 + 16);
  if (v11)
  {
    unint64_t v38 = v8;
    if (qword_267C94990 != -1) {
      swift_once();
    }
    uint64_t v12 = sub_21CB880A0();
    sub_21CA4CC18(v12, (uint64_t)qword_267CA5368);
    swift_bridgeObjectRetain();
    uint64_t v13 = sub_21CB88070();
    os_log_type_t v14 = sub_21CB88880();
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v15 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v15 = 134217984;
      v42[0] = v11;
      sub_21CB889C0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_21CA00000, v13, v14, "👀 FMFManager.FMFSecureLocationRefreshControllerDelegate:%ld shallow/live locations", v15, 0xCu);
      MEMORY[0x21D4B6B70](v15, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease();
    }
    uint64_t v16 = MEMORY[0x263F8EE78];
    uint64_t v43 = MEMORY[0x263F8EE78];
    uint64_t v17 = *(void *)(v3 + 72);
    unint64_t v39 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
    uint64_t v18 = a1 + v39;
    uint64_t v37 = a1;
    swift_bridgeObjectRetain();
    do
    {
      sub_21CA57180(v18, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for FMFLocation);
      sub_21CA26A4C((uint64_t)&v10[*(int *)(v2 + 44)], (uint64_t)v41, &qword_267C951F0);
      sub_21CA26A4C((uint64_t)v41, (uint64_t)v42, &qword_267C951F0);
      if (sub_21CA7CDBC((uint64_t)v42) == 1)
      {
        sub_21CA582D8((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for FMFLocation);
      }
      else
      {
        sub_21CA5913C((uint64_t)v10, v40, (uint64_t (*)(void))type metadata accessor for FMFLocation);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_21CA3D644(0, *(void *)(v16 + 16) + 1, 1);
        }
        uint64_t v16 = v43;
        unint64_t v20 = *(void *)(v43 + 16);
        unint64_t v19 = *(void *)(v43 + 24);
        if (v20 >= v19 >> 1)
        {
          sub_21CA3D644(v19 > 1, v20 + 1, 1);
          uint64_t v16 = v43;
        }
        *(void *)(v16 + 16) = v20 + 1;
        sub_21CA5913C(v40, v16 + v39 + v20 * v17, (uint64_t (*)(void))type metadata accessor for FMFLocation);
      }
      v18 += v17;
      --v11;
    }
    while (v11);
    swift_bridgeObjectRelease();
    uint64_t v40 = v43;
    uint64_t v21 = *(void *)(v43 + 16);
    if (v21)
    {
      uint64_t v22 = v40 + v39;
      swift_retain();
      uint64_t v23 = (void *)MEMORY[0x263F8EE78];
      uint64_t v24 = v38;
      do
      {
        sub_21CA57180(v22, (uint64_t)v24, (uint64_t (*)(void))type metadata accessor for FMFLocation);
        uint64_t v25 = v24[1];
        if (v25)
        {
          uint64_t v26 = *v24;
          swift_bridgeObjectRetain();
          sub_21CA582D8((uint64_t)v24, (uint64_t (*)(void))type metadata accessor for FMFLocation);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v23 = sub_21CA3A438(0, v23[2] + 1, 1, v23);
          }
          unint64_t v28 = v23[2];
          unint64_t v27 = v23[3];
          if (v28 >= v27 >> 1) {
            uint64_t v23 = sub_21CA3A438((void *)(v27 > 1), v28 + 1, 1, v23);
          }
          v23[2] = v28 + 1;
          uint64_t v29 = &v23[3 * v28];
          uint64_t v29[4] = v26;
          v29[5] = v25;
          *((unsigned char *)v29 + 48) = 0;
          uint64_t v24 = v38;
        }
        else
        {
          sub_21CA582D8((uint64_t)v24, (uint64_t (*)(void))type metadata accessor for FMFLocation);
        }
        v22 += v17;
        --v21;
      }
      while (v21);
      uint64_t v30 = swift_release_n();
    }
    else
    {
      uint64_t v30 = swift_release();
      uint64_t v23 = (void *)MEMORY[0x263F8EE78];
    }
    uint64_t v31 = v36;
    uint64_t v32 = *(void *)(v36 + 88);
    MEMORY[0x270FA5388](v30);
    *(&v36 - 2) = (uint64_t)v23;
    *(&v36 - 1) = v32;
    swift_retain();
    sub_21CB88910();
    swift_release();
    uint64_t v33 = swift_bridgeObjectRelease();
    uint64_t v34 = *(void *)(v31 + 88);
    MEMORY[0x270FA5388](v33);
    uint64_t v35 = v37;
    *(&v36 - 2) = v34;
    *(&v36 - 1) = v35;
    swift_retain();
    sub_21CB88910();
    return swift_release();
  }
  return result;
}

uint64_t sub_21CB14F70(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_21CA57E34(&qword_267C97160);
    uint64_t v3 = sub_21CB88B40();
    uint64_t v4 = 0;
    uint64_t v5 = v3 + 56;
    uint64_t v25 = a1 + 32;
    while (1)
    {
      uint64_t v6 = (uint64_t *)(v25 + 16 * v4);
      uint64_t v8 = *v6;
      uint64_t v7 = v6[1];
      sub_21CB89050();
      swift_bridgeObjectRetain();
      sub_21CB88380();
      uint64_t result = sub_21CB89090();
      uint64_t v10 = -1 << *(unsigned char *)(v3 + 32);
      unint64_t v11 = result & ~v10;
      unint64_t v12 = v11 >> 6;
      uint64_t v13 = *(void *)(v5 + 8 * (v11 >> 6));
      uint64_t v14 = 1 << v11;
      if (((1 << v11) & v13) != 0)
      {
        uint64_t v15 = *(void *)(v3 + 48);
        uint64_t v16 = (void *)(v15 + 16 * v11);
        BOOL v17 = *v16 == v8 && v16[1] == v7;
        if (v17 || (uint64_t result = sub_21CB88F50(), (result & 1) != 0))
        {
LABEL_3:
          swift_bridgeObjectRelease();
          goto LABEL_4;
        }
        uint64_t v18 = ~v10;
        while (1)
        {
          unint64_t v11 = (v11 + 1) & v18;
          unint64_t v12 = v11 >> 6;
          uint64_t v13 = *(void *)(v5 + 8 * (v11 >> 6));
          uint64_t v14 = 1 << v11;
          if ((v13 & (1 << v11)) == 0) {
            break;
          }
          unint64_t v19 = (void *)(v15 + 16 * v11);
          if (*v19 != v8 || v19[1] != v7)
          {
            uint64_t result = sub_21CB88F50();
            if ((result & 1) == 0) {
              continue;
            }
          }
          goto LABEL_3;
        }
      }
      *(void *)(v5 + 8 * v12) = v14 | v13;
      uint64_t v21 = (void *)(*(void *)(v3 + 48) + 16 * v11);
      *uint64_t v21 = v8;
      v21[1] = v7;
      uint64_t v22 = *(void *)(v3 + 16);
      BOOL v23 = __OFADD__(v22, 1);
      uint64_t v24 = v22 + 1;
      if (v23)
      {
        __break(1u);
        return result;
      }
      *(void *)(v3 + 16) = v24;
LABEL_4:
      if (++v4 == v1) {
        return v3;
      }
    }
  }
  return MEMORY[0x263F8EE88];
}

uint64_t sub_21CB15114()
{
  return sub_21CA0DB2C(MEMORY[0x263F8EEE8]);
}

uint64_t sub_21CB1512C(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 32);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[2] = a1;
  v5[3] = v4;
  v5[1] = sub_21CA65B10;
  return MEMORY[0x270FA2498](sub_21CB0B578, 0, 0);
}

uint64_t sub_21CB151DC()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_21CB1522C()
{
  return sub_21CB0C17C(v0);
}

uint64_t sub_21CB15234()
{
  return sub_21CB0D7D0();
}

uint64_t sub_21CB15240(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for FMFFriend() - 8);
  uint64_t v5 = v1[2];
  uint64_t v6 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v8 = (uint64_t)v1 + ((*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  void *v9 = v2;
  v9[1] = sub_21CA65B10;
  return sub_21CB0ECAC(a1, v5, v6, v7, v8);
}

uint64_t sub_21CB15340(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for FMFFriend() - 8);
  uint64_t v5 = v1[2];
  uint64_t v6 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v8 = (uint64_t)v1 + ((*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  void *v9 = v2;
  v9[1] = sub_21CA65B10;
  return sub_21CB0F58C(a1, v5, v6, v7, v8);
}

uint64_t sub_21CB1543C()
{
  uint64_t v1 = sub_21CB88100();
  uint64_t v16 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v3 = (char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_21CB88150();
  uint64_t v4 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_21CB88110();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21CB12AA8();
  sub_21CA182AC();
  (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, *MEMORY[0x263F8F080], v7);
  uint64_t v11 = (void *)sub_21CB88940();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  aBlock[4] = sub_21CB164E4;
  uint64_t v19 = v0;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_21CA1B084;
  uint64_t aBlock[3] = &unk_26CD6DF40;
  unint64_t v12 = _Block_copy(aBlock);
  swift_retain();
  sub_21CB88120();
  uint64_t v17 = MEMORY[0x263F8EE78];
  sub_21CA5DEAC((unint64_t *)&qword_267C96FC0, MEMORY[0x263F8F030]);
  sub_21CA57E34((uint64_t *)&unk_267C96DD0);
  sub_21CA356BC((unint64_t *)&qword_267C96FD0, (uint64_t *)&unk_267C96DD0);
  sub_21CB88A60();
  MEMORY[0x21D4B5A20](0, v6, v3, v12);
  _Block_release(v12);

  (*(void (**)(char *, uint64_t))(v16 + 8))(v3, v1);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v15);
  return swift_release();
}

uint64_t sub_21CB157B8()
{
  return sub_21CA0DB2C(MEMORY[0x263F8EED8]);
}

uint64_t sub_21CB157D0(uint64_t a1, void *a2)
{
  return sub_21CB107B0(a1, a2, *(void *)(v2 + 16), *(uint64_t (**)(void, void *))(v2 + 24));
}

uint64_t sub_21CB157DC@<X0>(uint64_t a1@<X8>)
{
  return sub_21CB22ED0(*(void *)(v1 + 16), *(void **)(v1 + 24), a1);
}

uint64_t sub_21CB157F8()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_21CB15840(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_21CA73F2C;
  return sub_21CB11B08(a1, v4, v5, v7, v6);
}

uint64_t sub_21CB15904()
{
  uint64_t v1 = (int *)type metadata accessor for FMFFriend();
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v3 = (v2 + 40) & ~v2;
  uint64_t v4 = *(void *)(*((void *)v1 - 1) + 64);
  swift_unknownObjectRelease();
  swift_release();
  uint64_t v5 = v0 + v3;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v6 = v0 + v3 + v1[8];
  uint64_t v7 = sub_21CB87590();
  uint64_t v8 = *(void *)(v7 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7)) {
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v5 + v1[19] + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v9 = v5 + v1[20];
  uint64_t v10 = type metadata accessor for FMFLocation();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48))(v9, 1, v10))
  {
    swift_bridgeObjectRelease();
    uint64_t v11 = v9 + *(int *)(v10 + 32);
    uint64_t v12 = sub_21CB875D0();
    uint64_t v13 = *(void *)(v12 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12)) {
      (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v11, v12);
    }
    uint64_t v14 = v9 + *(int *)(v10 + 44);
    uint64_t v15 = *(void **)(v14 + 304);
    if (v15)
    {
      if (*(void *)(v14 + 168))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v15 = *(void **)(v14 + 304);
      }

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }

  return MEMORY[0x270FA0238](v0, v3 + v4, v2 | 7);
}

uint64_t sub_21CB15C44(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for FMFFriend() - 8);
  uint64_t v5 = v1[2];
  uint64_t v6 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v8 = (uint64_t)v1 + ((*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  void *v9 = v2;
  v9[1] = sub_21CA73F2C;
  return sub_21CB11464(a1, v5, v6, v7, v8);
}

uint64_t sub_21CB15D40@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t v4 = *a1 + 32;
  swift_beginAccess();
  uint64_t result = MEMORY[0x21D4B6C80](v4);
  uint64_t v6 = *(void *)(v3 + 40);
  *a2 = result;
  a2[1] = v6;
  return result;
}

uint64_t sub_21CB15DA0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1 + OBJC_IVAR____TtC7FMFCore10FMFManager_selectedFriend;
  swift_beginAccess();
  return sub_21CA24E80(v3, a2, &qword_267C96F10);
}

uint64_t sub_21CB15E04@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = (unsigned char *)(*a1 + OBJC_IVAR____TtC7FMFCore10FMFManager_isInitialized);
  uint64_t result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

uint64_t sub_21CB15E58(char *a1, void *a2)
{
  char v2 = *a1;
  uint64_t v3 = (char *)(*a2 + OBJC_IVAR____TtC7FMFCore10FMFManager_isInitialized);
  swift_beginAccess();
  char v4 = *v3;
  *uint64_t v3 = v2;
  return sub_21CA13710(v4);
}

uint64_t dispatch thunk of FMFManagerDelegate.fmfManagerDidInitialize(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of FMFManagerDelegate.fmfManagerDidCompleteFirstFetch(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of FMFManagerDelegate.fmfManager(_:initializationDidFail:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

uint64_t dispatch thunk of FMFManagerDelegate.fmfManager(_:didReceive:fromServer:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 32))();
}

{
  return (*(uint64_t (**)(void))(a5 + 80))();
}

uint64_t dispatch thunk of FMFManagerDelegate.fmfManager(_:didReceive:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 40))();
}

{
  return (*(uint64_t (**)(void))(a4 + 48))();
}

{
  return (*(uint64_t (**)(void))(a4 + 64))();
}

{
  return (*(uint64_t (**)(void))(a4 + 72))();
}

{
  return (*(uint64_t (**)(void))(a4 + 88))();
}

{
  return (*(uint64_t (**)(void))(a4 + 96))();
}

{
  return (*(uint64_t (**)(void))(a4 + 104))();
}

uint64_t dispatch thunk of FMFManagerDelegate.fmfManager(_:meDeviceChanged:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 56))();
}

uint64_t dispatch thunk of FMFManagerDelegate.fmfManager(_:didReceive:for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 112))();
}

uint64_t dispatch thunk of FMFManagerDelegate.fmfManager(_:friendsOperationsRestrictionChanged:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 120))();
}

uint64_t dispatch thunk of FMFManagerDelegate.fmfManager(_:friendsToShallowLocate:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 128))();
}

uint64_t dispatch thunk of FMFManagerDelegate.fmfManager(_:legacyFallbackFriendIdentifiers:didFallback:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 136))();
}

uint64_t sub_21CB1600C()
{
  return type metadata accessor for FMFManager();
}

uint64_t method lookup function for FMFManager(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for FMFManager);
}

uint64_t dispatch thunk of FMFManager.delegate.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 264))();
}

uint64_t dispatch thunk of FMFManager.delegate.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 280))();
}

uint64_t dispatch thunk of FMFManager.selectedFriend.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 616))();
}

uint64_t dispatch thunk of FMFManager.selectedFriend.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 632))();
}

uint64_t dispatch thunk of FMFManager.locations.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 664))();
}

uint64_t dispatch thunk of FMFManager.myLocation.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 672))();
}

uint64_t dispatch thunk of FMFManager.myUnshiftedLocation.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 680))();
}

uint64_t dispatch thunk of FMFManager.features.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 688))();
}

uint64_t dispatch thunk of FMFManager.myInfo.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 704))();
}

uint64_t dispatch thunk of FMFManager.config.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 712))();
}

uint64_t dispatch thunk of FMFManager.devices.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 720))();
}

uint64_t dispatch thunk of FMFManager.labels.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 728))();
}

uint64_t dispatch thunk of FMFManager.labelledLocations.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 744))();
}

uint64_t dispatch thunk of FMFManager.contactsController.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 752))();
}

uint64_t dispatch thunk of FMFManager.pendingDeleteFriends.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 768))();
}

uint64_t dispatch thunk of FMFManager.__allocating_init(configuration:tabInfo:)()
{
  return (*(uint64_t (**)(void))(v0 + 784))();
}

uint64_t dispatch thunk of FMFManager.initialize()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 792))();
}

uint64_t dispatch thunk of FMFManager.initialize(tabInfo:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 800))();
}

uint64_t dispatch thunk of FMFManager.updateLastActiveTimestamp()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 816))();
}

uint64_t dispatch thunk of FMFManager.stopRefreshing()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 824))();
}

uint64_t dispatch thunk of FMFManager.refresh()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 832))();
}

uint64_t dispatch thunk of FMFManager.startLiveLocation(for:clientApp:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 848))();
}

uint64_t dispatch thunk of FMFManager.stopLiveLocation(for:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 856))();
}

uint64_t dispatch thunk of FMFManager.restartMonitoringLocation()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 864))();
}

uint64_t dispatch thunk of FMFManager.perform(action:completion:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 872))();
}

uint64_t dispatch thunk of FMFManager.getInfoForURL(url:completion:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 880))();
}

uint64_t dispatch thunk of FMFManager.unshiftedLocation(for:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 904))();
}

uint64_t dispatch thunk of FMFManager.hash(into:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 912))();
}

uint64_t sub_21CB164E4()
{
  return sub_21CB12F94(v0);
}

uint64_t sub_21CB164EC()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 25, 7);
}

uint64_t sub_21CB16524(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_21CA57E34(&qword_267C970A0);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v78 = (char *)&v64 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_21CB88110();
  uint64_t v67 = *(void *)(v6 - 8);
  uint64_t v68 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v66 = (char *)&v64 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v75 = sub_21CA57E34(&qword_267C970A8);
  uint64_t v73 = *(void *)(v75 - 8);
  MEMORY[0x270FA5388](v75);
  uint64_t v72 = (uint64_t *)((char *)&v64 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = sub_21CA57E34(&qword_267C970B0);
  uint64_t v70 = *(void *)(v9 - 8);
  uint64_t v71 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v69 = (char *)&v64 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_21CA57E34(&qword_267C970B8);
  uint64_t v76 = *(void *)(v11 - 8);
  uint64_t v77 = v11;
  MEMORY[0x270FA5388](v11);
  uint64_t v74 = (char *)&v64 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v83 = type metadata accessor for FMFLocation();
  uint64_t v13 = *(void *)(v83 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v83);
  uint64_t v16 = (uint64_t *)((char *)&v64 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v17 = MEMORY[0x270FA5388](v14);
  uint64_t v82 = (uint64_t)&v64 - v18;
  MEMORY[0x270FA5388](v17);
  unint64_t v20 = (char *)&v64 - v19;
  if (qword_267C94990 != -1) {
    swift_once();
  }
  uint64_t v21 = sub_21CB880A0();
  sub_21CA4CC18(v21, (uint64_t)qword_267CA5368);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v22 = sub_21CB88070();
  os_log_type_t v23 = sub_21CB88880();
  BOOL v24 = os_log_type_enabled(v22, v23);
  uint64_t v80 = a2;
  uint64_t v65 = a1;
  if (v24)
  {
    uint64_t v25 = swift_slowAlloc();
    *(_DWORD *)uint64_t v25 = 134218240;
    v85[0] = *(void *)(a1 + 16);
    sub_21CB889C0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v25 + 12) = 2048;
    v85[0] = *(void *)(v80 + 16);
    a2 = v80;
    sub_21CB889C0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_21CA00000, v22, v23, "👀 FMFManager.FMFSecureLocationRefreshControllerDelegate: received %ld unshifted and %ld shifted shallow/live locations", (uint8_t *)v25, 0x16u);
    MEMORY[0x21D4B6B70](v25, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v26 = MEMORY[0x263F8EE78];
  uint64_t v86 = MEMORY[0x263F8EE78];
  uint64_t v27 = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  if (v27)
  {
    uint64_t v28 = *(unsigned __int8 *)(v13 + 80);
    uint64_t v64 = v13;
    uint64_t v29 = *(void *)(v13 + 72);
    uint64_t v81 = (v28 + 32) & ~v28;
    uint64_t v30 = a2 + v81;
    do
    {
      sub_21CA57180(v30, (uint64_t)v20, (uint64_t (*)(void))type metadata accessor for FMFLocation);
      sub_21CA26A4C((uint64_t)&v20[*(int *)(v83 + 44)], (uint64_t)v84, &qword_267C951F0);
      sub_21CA26A4C((uint64_t)v84, (uint64_t)v85, &qword_267C951F0);
      if (sub_21CA7CDBC((uint64_t)v85) == 1)
      {
        sub_21CA582D8((uint64_t)v20, (uint64_t (*)(void))type metadata accessor for FMFLocation);
      }
      else
      {
        sub_21CA5913C((uint64_t)v20, v82, (uint64_t (*)(void))type metadata accessor for FMFLocation);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_21CA3D644(0, *(void *)(v26 + 16) + 1, 1);
        }
        uint64_t v26 = v86;
        unint64_t v32 = *(void *)(v86 + 16);
        unint64_t v31 = *(void *)(v86 + 24);
        if (v32 >= v31 >> 1)
        {
          sub_21CA3D644(v31 > 1, v32 + 1, 1);
          uint64_t v26 = v86;
        }
        *(void *)(v26 + 16) = v32 + 1;
        sub_21CA5913C(v82, v26 + v81 + v32 * v29, (uint64_t (*)(void))type metadata accessor for FMFLocation);
      }
      v30 += v29;
      --v27;
    }
    while (v27);
    uint64_t v26 = v86;
    a2 = v80;
    uint64_t v13 = v64;
  }
  swift_bridgeObjectRelease();
  uint64_t v33 = *(void *)(v26 + 16);
  if (v33)
  {
    uint64_t v34 = v26 + ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80));
    uint64_t v35 = *(void *)(v13 + 72);
    uint64_t v83 = v26;
    swift_retain();
    uint64_t v36 = (void *)MEMORY[0x263F8EE78];
    do
    {
      sub_21CA57180(v34, (uint64_t)v16, (uint64_t (*)(void))type metadata accessor for FMFLocation);
      uint64_t v37 = v16[1];
      if (v37)
      {
        uint64_t v38 = *v16;
        swift_bridgeObjectRetain();
        sub_21CA582D8((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for FMFLocation);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v36 = sub_21CA3A438(0, v36[2] + 1, 1, v36);
        }
        unint64_t v40 = v36[2];
        unint64_t v39 = v36[3];
        if (v40 >= v39 >> 1) {
          uint64_t v36 = sub_21CA3A438((void *)(v39 > 1), v40 + 1, 1, v36);
        }
        v36[2] = v40 + 1;
        uint64_t v41 = &v36[3 * v40];
        v41[4] = v38;
        v41[5] = v37;
        *((unsigned char *)v41 + 48) = 0;
      }
      else
      {
        sub_21CA582D8((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for FMFLocation);
      }
      v34 += v35;
      --v33;
    }
    while (v33);
    uint64_t v42 = swift_release_n();
    a2 = v80;
  }
  else
  {
    uint64_t v42 = swift_release();
    uint64_t v36 = (void *)MEMORY[0x263F8EE78];
  }
  uint64_t v43 = v79;
  uint64_t v44 = *(void *)(v79 + 88);
  MEMORY[0x270FA5388](v42);
  *(&v64 - 2) = (uint64_t)v36;
  *(&v64 - 1) = v44;
  swift_retain();
  sub_21CB88910();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v45 = v65;
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v46 = sub_21CB14278(a2, v43, v45);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v47 = swift_allocObject();
  *(void *)(v47 + 16) = 0;
  uint64_t v82 = v47;
  uint64_t v83 = v47 + 16;
  v85[0] = v46;
  sub_21CA57E34(&qword_267C970C0);
  sub_21CA57E34(&qword_267C970C8);
  sub_21CA356BC(&qword_267C970D0, &qword_267C970C0);
  sub_21CA356BC(&qword_267C970D8, &qword_267C970C8);
  uint64_t v48 = v69;
  sub_21CB880B0();
  sub_21CA57E34(&qword_267C970E0);
  uint64_t v49 = v72;
  sub_21CA182AC();
  uint64_t v51 = v66;
  uint64_t v50 = v67;
  uint64_t v52 = v68;
  (*(void (**)(char *, void, uint64_t))(v67 + 104))(v66, *MEMORY[0x263F8F090], v68);
  uint64_t v53 = sub_21CB88940();
  (*(void (**)(char *, uint64_t))(v50 + 8))(v51, v52);
  *uint64_t v49 = v53;
  sub_21CB888E0();
  uint64_t v54 = v73;
  uint64_t v55 = v75;
  (*(void (**)(uint64_t *, void, uint64_t))(v73 + 104))(v49, *MEMORY[0x263EFDB18], v75);
  uint64_t v56 = sub_21CB888D0();
  uint64_t v57 = (uint64_t)v78;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v56 - 8) + 56))(v78, 1, 1, v56);
  sub_21CA356BC(&qword_267C970E8, &qword_267C970B0);
  sub_21CA5DEAC(&qword_267C970F0, (void (*)(uint64_t))sub_21CA182AC);
  uint64_t v58 = v74;
  uint64_t v59 = v71;
  sub_21CB880E0();
  sub_21CA1B88C(v57, &qword_267C970A0);
  (*(void (**)(uint64_t *, uint64_t))(v54 + 8))(v49, v55);
  (*(void (**)(char *, uint64_t))(v70 + 8))(v48, v59);
  sub_21CA356BC(&qword_267C970F8, &qword_267C970B8);
  swift_retain();
  swift_retain();
  uint64_t v60 = v77;
  uint64_t v61 = sub_21CB880D0();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v76 + 8))(v58, v60);
  unint64_t v62 = (void *)v83;
  swift_beginAccess();
  *unint64_t v62 = v61;
  swift_release();
  return swift_release();
}

uint64_t sub_21CB170A0(uint64_t a1)
{
  return sub_21CB170E0(a1, (uint64_t)sub_21CB182FC, 1, 1);
}

uint64_t sub_21CB170C0(uint64_t a1)
{
  return sub_21CB170E0(a1, (uint64_t)sub_21CB17950, 0, 0);
}

uint64_t sub_21CB170E0(uint64_t a1, uint64_t a2, char a3, char a4)
{
  char v4 = a3;
  uint64_t v5 = a1;
  int64_t v6 = *(void *)(a1 + 16);
  if (v6)
  {
    uint64_t v17 = MEMORY[0x263F8EE78];
    sub_21CA7C0C8(0, v6, 0);
    uint64_t v15 = v5;
    uint64_t v8 = (uint64_t *)(v5 + 40);
    do
    {
      uint64_t v9 = *(v8 - 1);
      uint64_t v10 = *v8;
      unint64_t v12 = *(void *)(v17 + 16);
      unint64_t v11 = *(void *)(v17 + 24);
      a1 = swift_bridgeObjectRetain();
      if (v12 >= v11 >> 1) {
        a1 = sub_21CA7C0C8(v11 > 1, v12 + 1, 1);
      }
      v8 += 2;
      *(void *)(v17 + 16) = v12 + 1;
      uint64_t v13 = v17 + 24 * v12;
      *(void *)(v13 + 32) = v9;
      *(void *)(v13 + 40) = v10;
      *(unsigned char *)(v13 + 48) = a4;
      --v6;
    }
    while (v6);
    char v4 = a3;
    uint64_t v5 = v15;
  }
  MEMORY[0x270FA5388](a1);
  swift_retain();
  sub_21CB88910();
  swift_release();
  swift_bridgeObjectRelease();
  return sub_21CB10DC8(v5, v4 & 1);
}

uint64_t sub_21CB17260(uint64_t a1)
{
  return sub_21CB17990(a1, 1, "FMFManager: didBeginWaitingForShallowLocations, shallow locates %s");
}

uint64_t sub_21CB17284(uint64_t a1)
{
  return sub_21CB17990(a1, 0, "FMFManager: didEndWaitingForShallowLocations, shallow locates %s");
}

uint64_t sub_21CB172A8(uint64_t a1)
{
  return sub_21CB17990(a1, 1, "FMFManager: didBeginWaitingForLiveLocations, live locates %s");
}

uint64_t sub_21CB172CC(uint64_t a1)
{
  return sub_21CB17990(a1, 2, "FMFManager: didBeginPausingLiveLocations, live locates %s");
}

uint64_t sub_21CB172F0@<X0>(unsigned char *a1@<X8>)
{
  return sub_21CB23760(*(void *)(v1 + 16), *(void **)(v1 + 24), a1);
}

uint64_t sub_21CB1730C()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_21CB17344()
{
  swift_beginAccess();
  *(void *)(v0 + 16) = 0;
  return swift_release();
}

uint64_t sub_21CB17380(uint64_t *a1)
{
  return sub_21CB13D68(a1);
}

uint64_t sub_21CB17388()
{
  uint64_t v1 = type metadata accessor for FMFLocation();
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v4 = *(void *)(*(void *)(v1 - 8) + 64);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v5 = v0 + v3 + *(int *)(v1 + 32);
  uint64_t v6 = sub_21CB875D0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  }
  uint64_t v8 = v0 + v3 + *(int *)(v1 + 44);
  uint64_t v9 = *(void **)(v8 + 304);
  if (v9)
  {
    if (*(void *)(v8 + 168))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v9 = *(void **)(v8 + 304);
    }

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, ((v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 8, v2 | 7);
}

uint64_t sub_21CB175B8(void (*a1)(void), uint64_t a2)
{
  uint64_t v5 = *(void *)(type metadata accessor for FMFLocation() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v2 + 16);
  uint64_t v8 = *(void *)(v2 + ((*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8));

  return sub_21CB130F8(a1, a2, v7, v2 + v6, v8);
}

uint64_t sub_21CB17668()
{
  uint64_t v1 = type metadata accessor for FMFLocation();
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*(void *)(v1 - 8) + 64);
  swift_bridgeObjectRelease();
  uint64_t v5 = v0 + v3 + *(int *)(v1 + 32);
  uint64_t v6 = sub_21CB875D0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  }
  uint64_t v8 = v0 + v3 + *(int *)(v1 + 44);
  uint64_t v9 = *(void **)(v8 + 304);
  if (v9)
  {
    if (*(void *)(v8 + 168))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v9 = *(void **)(v8 + 304);
    }

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_release();

  return MEMORY[0x270FA0238](v0, ((((v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16, v2 | 7);
}

uint64_t sub_21CB178A4(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for FMFLocation() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v6 = (void *)(v1 + v4);
  uint64_t v7 = *(void *)(v1 + v5);
  uint64_t v8 = v1 + ((v5 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v9 = *(void (**)(void))v8;
  uint64_t v10 = *(void *)(v8 + 8);

  return sub_21CB13540(a1, v6, v7, v9, v10);
}

uint64_t sub_21CB17950@<X0>(unsigned char *a1@<X8>)
{
  return sub_21CB23EA8(*(void *)(v1 + 16), *(void **)(v1 + 24), a1);
}

uint64_t sub_21CB1796C(uint64_t a1)
{
  return sub_21CB17990(a1, 0, "FMFManager: didEndWaitingForLiveLocations, live locates %s");
}

uint64_t sub_21CB17990(uint64_t a1, char a2, const char *a3)
{
  int64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    uint64_t v25 = MEMORY[0x263F8EE78];
    sub_21CA16B10(0, v3, 0);
    uint64_t v6 = v25;
    uint64_t v7 = (uint64_t *)(a1 + 40);
    do
    {
      uint64_t v9 = *(v7 - 1);
      uint64_t v8 = *v7;
      uint64_t v25 = v6;
      unint64_t v11 = *(void *)(v6 + 16);
      unint64_t v10 = *(void *)(v6 + 24);
      swift_bridgeObjectRetain();
      if (v11 >= v10 >> 1)
      {
        sub_21CA16B10(v10 > 1, v11 + 1, 1);
        uint64_t v6 = v25;
      }
      v7 += 2;
      *(void *)(v6 + 16) = v11 + 1;
      uint64_t v12 = v6 + 24 * v11;
      *(void *)(v12 + 32) = v9;
      *(void *)(v12 + 40) = v8;
      *(unsigned char *)(v12 + 48) = a2;
      --v3;
    }
    while (v3);
  }
  if (qword_267C94990 != -1) {
    swift_once();
  }
  uint64_t v13 = sub_21CB880A0();
  sub_21CA4CC18(v13, (uint64_t)qword_267CA5368);
  swift_bridgeObjectRetain_n();
  uint64_t v14 = sub_21CB88070();
  os_log_type_t v15 = sub_21CB88880();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v16 = (uint8_t *)swift_slowAlloc();
    uint64_t v17 = swift_slowAlloc();
    uint64_t v25 = v17;
    *(_DWORD *)uint64_t v16 = 136315138;
    uint64_t v18 = swift_bridgeObjectRetain();
    uint64_t v19 = MEMORY[0x21D4B5620](v18, &type metadata for FMFSecureOrLiveLocateInProgress);
    unint64_t v21 = v20;
    swift_bridgeObjectRelease();
    sub_21CA4E450(v19, v21, &v25);
    sub_21CB889C0();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_21CA00000, v14, v15, a3, v16, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x21D4B6B70](v17, -1, -1);
    MEMORY[0x21D4B6B70](v16, -1, -1);
  }
  else
  {

    uint64_t v22 = swift_bridgeObjectRelease_n();
  }
  MEMORY[0x270FA5388](v22);
  swift_retain();
  sub_21CB88910();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_21CB17C6C()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_21CB17CAC()
{
  return sub_21CB11174(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_21CB17CB4()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_21CB17CEC(uint64_t a1)
{
  unint64_t v4 = *(int **)(v1 + 16);
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *unint64_t v5 = v2;
  v5[1] = sub_21CA65B10;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_267C97110 + dword_267C97110);
  return v6(a1, v4);
}

uint64_t sub_21CB17DA4()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 40, 7);
}

void sub_21CB17DEC(uint64_t a1)
{
  sub_21CB0E414(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_21CB17DF8()
{
  swift_release();
  swift_release();

  return MEMORY[0x270FA0238](v0, 56, 7);
}

uint64_t sub_21CB17E40(uint64_t a1)
{
  return sub_21CB10170(a1, *(void *)(v1 + 16), *(uint64_t (**)(uint64_t *, uint64_t))(v1 + 24), *(void *)(v1 + 32), *(unsigned char *)(v1 + 40), *(void *)(v1 + 48));
}

uint64_t sub_21CB17E54(uint64_t a1, unint64_t a2, char a3)
{
  if (qword_267C94990 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_21CB880A0();
  sub_21CA4CC18(v6, (uint64_t)qword_267CA5368);
  swift_bridgeObjectRetain_n();
  uint64_t v7 = sub_21CB88070();
  os_log_type_t v8 = sub_21CB88880();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    uint64_t v12 = v10;
    *(_DWORD *)uint64_t v9 = 136315394;
    swift_bridgeObjectRetain();
    sub_21CA4E450(a1, a2, &v12);
    sub_21CB889C0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v9 + 12) = 1024;
    sub_21CB889C0();
    _os_log_impl(&dword_21CA00000, v7, v8, "FMFManager: liveSessionDidEndForFriend: %s, successfullyEstablished?: %{BOOL}d", (uint8_t *)v9, 0x12u);
    swift_arrayDestroy();
    MEMORY[0x21D4B6B70](v10, -1, -1);
    MEMORY[0x21D4B6B70](v9, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  return sub_21CB10BD0(a1, a2, a3 & 1);
}

uint64_t sub_21CB1803C()
{
  return sub_21CA0DB2C(MEMORY[0x263F8EEE8]);
}

uint64_t sub_21CB18054(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_21CA65B10;
  return sub_21CB0C30C(a1, v4, v5, v6);
}

uint64_t sub_21CB18108()
{
  return MEMORY[0x270FA0238](v0, 25, 7);
}

uint64_t sub_21CB18118()
{
  return MEMORY[0x270FA0238](v0, 56, 7);
}

uint64_t sub_21CB18128()
{
  return sub_21CA0DB2C(MEMORY[0x263F8EEE8]);
}

uint64_t sub_21CB18140(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 32);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_21CA65B10;
  v5[3] = a1;
  v5[4] = v4;
  return MEMORY[0x270FA2498](sub_21CB0BA70, 0, 0);
}

uint64_t sub_21CB181F0(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_21CA65B10;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_267C97150 + dword_267C97150);
  return v6(a1, v4);
}

void sub_21CB182A8(uint64_t a1, void *a2)
{
}

uint64_t sub_21CB182FC@<X0>(unsigned char *a1@<X8>)
{
  return sub_21CB17950(a1);
}

uint64_t sub_21CB18314@<X0>(unsigned char *a1@<X8>)
{
  return sub_21CB172F0(a1);
}

uint64_t sub_21CB1832C@<X0>(unsigned char *a1@<X8>)
{
  return sub_21CA39598(a1);
}

uint64_t sub_21CB18344@<X0>(unsigned char *a1@<X8>)
{
  return sub_21CA05C78(a1);
}

uint64_t sub_21CB18360(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v40 = a3;
  uint64_t v43 = (const void *)a2;
  uint64_t v46 = (uint64_t *)a1;
  uint64_t v4 = sub_21CA57E34(&qword_267C97190);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v41 = (uint64_t)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = sub_21CB87590();
  uint64_t v6 = *(void *)(v42 - 8);
  MEMORY[0x270FA5388](v42);
  uint64_t v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = type metadata accessor for FMReverseGeocodingRequest();
  MEMORY[0x270FA5388](v39);
  uint64_t v10 = (uint64_t *)((char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v11 = (int *)sub_21CA57E34(&qword_267C97188);
  uint64_t v44 = *((void *)v11 - 1);
  uint64_t v12 = MEMORY[0x270FA5388](v11);
  uint64_t v14 = (uint64_t *)((char *)&v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v12);
  uint64_t v45 = (uint64_t)&v39 - v15;
  uint64_t v16 = sub_21CB88180();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v19 = (uint64_t *)((char *)&v39 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v47 = v3;
  unint64_t v20 = *(void **)(v3 + qword_267C96C78);
  *uint64_t v19 = v20;
  (*(void (**)(void *, void, uint64_t))(v17 + 104))(v19, *MEMORY[0x263F8F0E0], v16);
  id v21 = v20;
  LOBYTE(v20) = sub_21CB881A0();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v17 + 8))(v19, v16);
  if (v20)
  {
    os_log_type_t v23 = v46;
    sub_21CB1E1D4((uint64_t)v46, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for FMReverseGeocodingRequest);
    uint64_t v24 = v42;
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v40, v42);
    uint64_t v25 = v10[1];
    *uint64_t v14 = *v10;
    v14[1] = v25;
    uint64_t v26 = (void *)v10[2];
    uint64_t v27 = v43;
    sub_21CA76A94((uint64_t)v43);
    swift_bridgeObjectRetain();
    v14[2] = sub_21CB1FC60();
    v14[3] = v28;
    v14[4] = v26;
    LOBYTE(v25) = *((unsigned char *)v10 + *(int *)(v39 + 28));
    id v29 = v26;
    sub_21CB1EC18((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for FMReverseGeocodingRequest);
    *((unsigned char *)v14 + v11[13]) = v25;
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))((char *)v14 + v11[11], v8, v24);
    memcpy((char *)v14 + v11[12], v27, 0x130uLL);
    uint64_t v30 = (uint64_t)v14;
    uint64_t v31 = v45;
    sub_21CA26A4C(v30, v45, &qword_267C97188);
    uint64_t v32 = sub_21CB1FC60();
    uint64_t v34 = v33;
    uint64_t v35 = v41;
    sub_21CA24E80(v31, v41, &qword_267C97188);
    uint64_t v36 = *(void (**)(uint64_t, void, uint64_t, int *))(v44 + 56);
    v36(v35, 0, 1, v11);
    swift_beginAccess();
    sub_21CB7FC80(v35, v32, v34);
    swift_endAccess();
    uint64_t v37 = *v23;
    uint64_t v38 = v23[1];
    sub_21CA24E80(v31, v35, &qword_267C97188);
    v36(v35, 0, 1, v11);
    swift_beginAccess();
    swift_bridgeObjectRetain();
    sub_21CB7FC80(v35, v37, v38);
    swift_endAccess();
    return sub_21CA1B88C(v31, &qword_267C97188);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_21CB18850(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v24 = a2;
  uint64_t v7 = sub_21CB88100();
  uint64_t v26 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_21CB88150();
  uint64_t v10 = *(void *)(v25 - 8);
  MEMORY[0x270FA5388](v25);
  uint64_t v12 = (char *)v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for FMReverseGeocodingRequest();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(void *)(v14 + 64);
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v16 = (char *)v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23[1] = *(void *)(v4 + qword_267C96C78);
  sub_21CB1E1D4(a1, (uint64_t)v16, (uint64_t (*)(void))type metadata accessor for FMReverseGeocodingRequest);
  unint64_t v17 = (*(unsigned __int8 *)(v14 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  unint64_t v18 = (v15 + v17 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = v4;
  sub_21CB1EC78((uint64_t)v16, v19 + v17, (uint64_t (*)(void))type metadata accessor for FMReverseGeocodingRequest);
  unint64_t v20 = (void *)(v19 + v18);
  *unint64_t v20 = v24;
  v20[1] = a3;
  aBlock[4] = sub_21CB1E39C;
  void aBlock[5] = v19;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_21CA1B084;
  uint64_t aBlock[3] = &unk_26CD6E2A0;
  id v21 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  sub_21CB88120();
  uint64_t v27 = MEMORY[0x263F8EE78];
  sub_21CB1E3B4();
  sub_21CA57E34((uint64_t *)&unk_267C96DD0);
  sub_21CA6D91C();
  sub_21CB88A60();
  MEMORY[0x21D4B5A20](0, v12, v9, v21);
  _Block_release(v21);
  (*(void (**)(char *, uint64_t))(v26 + 8))(v9, v7);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v25);
  return swift_release();
}

void sub_21CB18BB4(uint64_t a1, uint64_t *a2, void (*a3)(unsigned char *), uint64_t a4)
{
  sub_21CB18D54(a2, v16);
  sub_21CA26A4C((uint64_t)v16, (uint64_t)v17, &qword_267C951E0);
  sub_21CA26A4C((uint64_t)v17, (uint64_t)v18, &qword_267C951E0);
  if (sub_21CA76890((uint64_t)v18) == 1)
  {
    uint64_t v8 = sub_21CB1FC60();
    uint64_t v10 = v9;
    uint64_t v11 = a1 + qword_267C96C60;
    swift_beginAccess();
    if (*(void *)(*(void *)v11 + 16))
    {
      swift_bridgeObjectRetain();
      sub_21CA5BCE0(v8, v10);
      char v13 = v12;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v13)
      {
        sub_21CB1BFC4((uint64_t)a2, (uint64_t)a3, a4);
        return;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    sub_21CB1A148((uint64_t)a2, 0, (uint64_t)a3, a4);
  }
  else
  {
    sub_21CA26A4C((uint64_t)v17, (uint64_t)v14, &qword_267C951E0);
    sub_21CA26A4C((uint64_t)v17, (uint64_t)v15, &qword_267C951E0);
    sub_21CA76A94((uint64_t)v15);
    a3(v14);
    sub_21CA76468((uint64_t)v17, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_21CA1358C);
    sub_21CA76468((uint64_t)v17, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_21CA1358C);
  }
}

uint64_t sub_21CB18D54@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v170 = a2;
  uint64_t v5 = sub_21CB87590();
  uint64_t v167 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v166 = (char *)&v153 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v164 = type metadata accessor for FMReverseGeocodingRequest();
  uint64_t v7 = MEMORY[0x270FA5388](v164);
  uint64_t v159 = (uint64_t *)((char *)&v153 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  char v162 = (uint64_t *)((char *)&v153 - v10);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v161 = (uint64_t)&v153 - v12;
  MEMORY[0x270FA5388](v11);
  uint64_t v160 = (uint64_t *)((char *)&v153 - v13);
  uint64_t v14 = sub_21CA57E34(&qword_267C97190);
  uint64_t v15 = MEMORY[0x270FA5388](v14 - 8);
  uint64_t v163 = (uint64_t)&v153 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  os_log_t v158 = (os_log_t)((char *)&v153 - v18);
  MEMORY[0x270FA5388](v17);
  unint64_t v20 = (char *)&v153 - v19;
  uint64_t v21 = sub_21CA57E34(&qword_267C97188);
  uint64_t v172 = *(void *)(v21 - 8);
  uint64_t v173 = (int *)v21;
  uint64_t v22 = MEMORY[0x270FA5388](v21);
  int v156 = (char *)&v153 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = MEMORY[0x270FA5388](v22);
  uint64_t v155 = (uint64_t *)((char *)&v153 - v25);
  uint64_t v26 = MEMORY[0x270FA5388](v24);
  uint64_t v154 = (uint64_t *)((char *)&v153 - v27);
  uint64_t v28 = MEMORY[0x270FA5388](v26);
  uint64_t v30 = (uint64_t *)((char *)&v153 - v29);
  uint64_t v31 = MEMORY[0x270FA5388](v28);
  uint64_t v157 = (uint64_t)&v153 - v32;
  uint64_t v33 = MEMORY[0x270FA5388](v31);
  uint64_t v168 = (uint64_t)&v153 - v34;
  MEMORY[0x270FA5388](v33);
  uint64_t v169 = (uint64_t)&v153 - v35;
  uint64_t v36 = sub_21CB88180();
  uint64_t v37 = *(void *)(v36 - 8);
  MEMORY[0x270FA5388](v36);
  uint64_t v39 = (uint64_t *)((char *)&v153 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v40 = *(void **)(v3 + qword_267C96C78);
  *uint64_t v39 = v40;
  (*(void (**)(void *, void, uint64_t))(v37 + 104))(v39, *MEMORY[0x263F8F0E0], v36);
  id v41 = v40;
  LOBYTE(v40) = sub_21CB881A0();
  uint64_t v43 = *(void (**)(void *, uint64_t))(v37 + 8);
  uint64_t v42 = v37 + 8;
  v43(v39, v36);
  if ((v40 & 1) == 0)
  {
    __break(1u);
    goto LABEL_47;
  }
  uint64_t v165 = v5;
  uint64_t v44 = sub_21CB1FC60();
  uint64_t v46 = v45;
  uint64_t v47 = (uint64_t *)(v3 + qword_267C96C50);
  swift_beginAccess();
  uint64_t v48 = *v47;
  uint64_t v49 = *(void *)(v48 + 16);
  uint64_t v171 = v3;
  uint64_t v50 = a1;
  if (v49)
  {
    swift_bridgeObjectRetain();
    unint64_t v51 = sub_21CA5BCE0(v44, v46);
    uint64_t v52 = v172;
    if (v53)
    {
      sub_21CA24E80(*(void *)(v48 + 56) + *(void *)(v172 + 72) * v51, (uint64_t)v20, &qword_267C97188);
      uint64_t v54 = *(void (**)(char *, uint64_t, uint64_t, int *))(v52 + 56);
      uint64_t v55 = v20;
      uint64_t v56 = 0;
    }
    else
    {
      uint64_t v54 = *(void (**)(char *, uint64_t, uint64_t, int *))(v172 + 56);
      uint64_t v55 = v20;
      uint64_t v56 = 1;
    }
    uint64_t v57 = (uint64_t)v173;
    v54(v55, v56, 1, v173);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v52 = v172;
    uint64_t v57 = (uint64_t)v173;
    uint64_t v54 = *(void (**)(char *, uint64_t, uint64_t, int *))(v172 + 56);
    v54(v20, 1, 1, v173);
  }
  swift_bridgeObjectRelease();
  uint64_t v58 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v52 + 48);
  if (v58(v20, 1, v57) != 1)
  {
    uint64_t v42 = v169;
    sub_21CA26A4C((uint64_t)v20, v169, &qword_267C97188);
    a1 = v50;
    if (qword_267C94998 == -1)
    {
LABEL_13:
      uint64_t v68 = sub_21CB880A0();
      sub_21CA4CC18(v68, (uint64_t)qword_267CA5380);
      uint64_t v69 = v160;
      sub_21CB1E1D4((uint64_t)a1, (uint64_t)v160, (uint64_t (*)(void))type metadata accessor for FMReverseGeocodingRequest);
      uint64_t v70 = v161;
      sub_21CB1E1D4((uint64_t)a1, v161, (uint64_t (*)(void))type metadata accessor for FMReverseGeocodingRequest);
      uint64_t v71 = v168;
      sub_21CA24E80(v42, v168, &qword_267C97188);
      swift_retain_n();
      uint64_t v72 = sub_21CB88070();
      os_log_type_t v73 = sub_21CB88880();
      int v74 = v73;
      if (os_log_type_enabled(v72, v73))
      {
        uint64_t v75 = swift_slowAlloc();
        os_log_t v158 = v72;
        uint64_t v76 = v75;
        uint64_t v159 = (uint64_t *)swift_slowAlloc();
        *(void *)&v176[0] = v159;
        *(_DWORD *)uint64_t v76 = 136315906;
        LODWORD(v157) = v74;
        uint64_t v77 = sub_21CB89110();
        v174[0] = sub_21CA4E450(v77, v78, (uint64_t *)v176);
        sub_21CB889C0();
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v76 + 12) = 2080;
        uint64_t v79 = (uint64_t)v69;
        uint64_t v80 = *v69;
        unint64_t v81 = v69[1];
        swift_bridgeObjectRetain();
        v174[0] = sub_21CA4E450(v80, v81, (uint64_t *)v176);
        sub_21CB889C0();
        swift_bridgeObjectRelease();
        sub_21CB1EC18(v79, (uint64_t (*)(void))type metadata accessor for FMReverseGeocodingRequest);
        *(_WORD *)(v76 + 22) = 2080;
        uint64_t v82 = sub_21CB1FC60();
        v174[0] = sub_21CA4E450(v82, v83, (uint64_t *)v176);
        sub_21CB889C0();
        swift_bridgeObjectRelease();
        sub_21CB1EC18(v70, (uint64_t (*)(void))type metadata accessor for FMReverseGeocodingRequest);
        *(_WORD *)(v76 + 32) = 2080;
        uint64_t v84 = v168;
        uint64_t v42 = v169;
        uint64_t v85 = v173;
        unint64_t v86 = FMFAddress.debugDescription.getter();
        v174[0] = sub_21CA4E450(v86, v87, (uint64_t *)v176);
        sub_21CB889C0();
        swift_bridgeObjectRelease();
        sub_21CA1B88C(v84, &qword_267C97188);
        os_log_t v88 = v158;
        _os_log_impl(&dword_21CA00000, v158, (os_log_type_t)v157, "%s: Using cached request %s based on geoHash %s -> %s.", (uint8_t *)v76, 0x2Au);
        BOOL v89 = v159;
        swift_arrayDestroy();
        MEMORY[0x21D4B6B70](v89, -1, -1);
        MEMORY[0x21D4B6B70](v76, -1, -1);
      }
      else
      {
        swift_release_n();
        sub_21CB1EC18((uint64_t)v69, (uint64_t (*)(void))type metadata accessor for FMReverseGeocodingRequest);
        sub_21CB1EC18(v70, (uint64_t (*)(void))type metadata accessor for FMReverseGeocodingRequest);
        sub_21CA1B88C(v71, &qword_267C97188);

        uint64_t v85 = v173;
      }
      uint64_t v90 = a1[1];
      uint64_t v173 = (int *)*a1;
      uint64_t v91 = v162;
      sub_21CB1E1D4((uint64_t)a1, (uint64_t)v162, (uint64_t (*)(void))type metadata accessor for FMReverseGeocodingRequest);
      uint64_t v92 = (const void *)(v42 + v85[12]);
      memcpy(v174, v92, sizeof(v174));
      uint64_t v93 = (void *)a1[2];
      swift_bridgeObjectRetain();
      sub_21CA76A94((uint64_t)v174);
      id v94 = objc_msgSend(v93, sel_timestamp);
      double v95 = v166;
      sub_21CB87560();

      uint64_t v96 = v91[1];
      *uint64_t v30 = *v91;
      v30[1] = v96;
      uint64_t v97 = (void *)v91[2];
      swift_bridgeObjectRetain();
      v30[2] = sub_21CB1FC60();
      v30[3] = v98;
      v30[4] = v97;
      uint64_t v99 = v42;
      char v100 = *((unsigned char *)v91 + *(int *)(v164 + 28));
      id v101 = v97;
      sub_21CB1EC18((uint64_t)v91, (uint64_t (*)(void))type metadata accessor for FMReverseGeocodingRequest);
      *((unsigned char *)v30 + v85[13]) = v100;
      (*(void (**)(char *, char *, uint64_t))(v167 + 32))((char *)v30 + v85[11], v95, v165);
      memcpy((char *)v30 + v85[12], v174, 0x130uLL);
      uint64_t v102 = v163;
      sub_21CA26A4C((uint64_t)v30, v163, &qword_267C97188);
      (*(void (**)(uint64_t, void, uint64_t, int *))(v172 + 56))(v102, 0, 1, v85);
      swift_beginAccess();
      sub_21CB7FC80(v102, (uint64_t)v173, v90);
      swift_endAccess();
      memcpy(v176, v92, sizeof(v176));
      uint64_t v103 = v170;
      memcpy(v170, v92, 0x130uLL);
      sub_21CA76A94((uint64_t)v176);
      sub_21CA1B88C(v99, &qword_267C97188);
      double v105 = v103;
      return nullsub_1(v105, v104);
    }
LABEL_47:
    swift_once();
    goto LABEL_13;
  }
  sub_21CA1B88C((uint64_t)v20, &qword_267C97190);
  uint64_t v60 = *v50;
  uint64_t v59 = v50[1];
  uint64_t v61 = (uint64_t *)(v171 + qword_267C96C58);
  swift_beginAccess();
  uint64_t v62 = *v61;
  if (!*(void *)(v62 + 16))
  {
    os_log_t v66 = v158;
    v54((char *)v158, 1, 1, v173);
    uint64_t v64 = v159;
LABEL_21:
    sub_21CA1B88C((uint64_t)v66, &qword_267C97190);
    if (qword_267C94998 != -1) {
      swift_once();
    }
    uint64_t v109 = sub_21CB880A0();
    sub_21CA4CC18(v109, (uint64_t)qword_267CA5380);
    sub_21CB1E1D4((uint64_t)v50, (uint64_t)v64, (uint64_t (*)(void))type metadata accessor for FMReverseGeocodingRequest);
    swift_retain_n();
    double v110 = sub_21CB88070();
    os_log_type_t v111 = sub_21CB88880();
    if (os_log_type_enabled(v110, v111))
    {
      uint64_t v112 = swift_slowAlloc();
      uint64_t v113 = swift_slowAlloc();
      *(void *)&v176[0] = v113;
      *(_DWORD *)uint64_t v112 = 136315394;
      uint64_t v114 = sub_21CB89110();
      uint64_t v175 = sub_21CA4E450(v114, v115, (uint64_t *)v176);
      sub_21CB889C0();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v112 + 12) = 2080;
      uint64_t v116 = *v64;
      unint64_t v117 = v64[1];
      swift_bridgeObjectRetain();
      uint64_t v175 = sub_21CA4E450(v116, v117, (uint64_t *)v176);
      sub_21CB889C0();
      swift_bridgeObjectRelease();
      sub_21CB1EC18((uint64_t)v64, (uint64_t (*)(void))type metadata accessor for FMReverseGeocodingRequest);
      _os_log_impl(&dword_21CA00000, v110, v111, "%s: No cached request for %s.", (uint8_t *)v112, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x21D4B6B70](v113, -1, -1);
      MEMORY[0x21D4B6B70](v112, -1, -1);
    }
    else
    {
      swift_release_n();
      sub_21CB1EC18((uint64_t)v64, (uint64_t (*)(void))type metadata accessor for FMReverseGeocodingRequest);
    }

    goto LABEL_43;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v63 = sub_21CA5BCE0(v60, v59);
  uint64_t v64 = v159;
  if (v65)
  {
    os_log_t v66 = v158;
    sub_21CA24E80(*(void *)(v62 + 56) + *(void *)(v172 + 72) * v63, (uint64_t)v158, &qword_267C97188);
    uint64_t v67 = 0;
  }
  else
  {
    uint64_t v67 = 1;
    os_log_t v66 = v158;
  }
  uint64_t v107 = (uint64_t)v173;
  v54((char *)v66, v67, 1, v173);
  uint64_t v108 = v107;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v58((char *)v66, 1, v107) == 1) {
    goto LABEL_21;
  }
  uint64_t v118 = v157;
  sub_21CA26A4C((uint64_t)v66, v157, &qword_267C97188);
  uint64_t v119 = v166;
  sub_21CB87570();
  sub_21CB87500();
  double v121 = v120;
  uint64_t v122 = (*(uint64_t (**)(char *, uint64_t))(v167 + 8))(v119, v165);
  uint64_t v123 = v171;
  if ((*(double (**)(uint64_t))(*(void *)v171 + 256))(v122) < v121)
  {
    if (qword_267C94998 != -1) {
      swift_once();
    }
    uint64_t v124 = sub_21CB880A0();
    sub_21CA4CC18(v124, (uint64_t)qword_267CA5380);
    uint64_t v125 = v154;
    sub_21CA24E80(v118, (uint64_t)v154, &qword_267C97188);
    swift_retain_n();
    uint64_t v126 = sub_21CB88070();
    os_log_type_t v127 = sub_21CB88880();
    if (os_log_type_enabled(v126, v127))
    {
      uint64_t v128 = swift_slowAlloc();
      uint64_t v129 = swift_slowAlloc();
      *(void *)&v176[0] = v129;
      *(_DWORD *)uint64_t v128 = 136315394;
      uint64_t v130 = sub_21CB89110();
      uint64_t v175 = sub_21CA4E450(v130, v131, (uint64_t *)v176);
      sub_21CB889C0();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v128 + 12) = 2080;
      uint64_t v132 = *v125;
      unint64_t v133 = v125[1];
      swift_bridgeObjectRetain();
      uint64_t v175 = sub_21CA4E450(v132, v133, (uint64_t *)v176);
      sub_21CB889C0();
      swift_bridgeObjectRelease();
      sub_21CA1B88C((uint64_t)v125, &qword_267C97188);
      _os_log_impl(&dword_21CA00000, v126, v127, "%s: Cached request for %s is older than the 30s.", (uint8_t *)v128, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x21D4B6B70](v129, -1, -1);
      MEMORY[0x21D4B6B70](v128, -1, -1);

      uint64_t v134 = v157;
    }
    else
    {

      sub_21CA1B88C((uint64_t)v125, &qword_267C97188);
      swift_release_n();
      uint64_t v134 = v118;
    }
    goto LABEL_42;
  }
  id v135 = objc_msgSend(*(id *)(v118 + 32), sel_distanceFromLocation_, v50[2]);
  double v137 = v136;
  if (*((unsigned char *)v50 + *(int *)(v164 + 28))) {
    double v138 = (*(double (**)(id))(*(void *)v123 + 264))(v135);
  }
  else {
    double v138 = 250.0;
  }
  uint64_t v140 = v155;
  uint64_t v139 = (uint64_t)v156;
  if (v137 < v138)
  {
    if (qword_267C94998 != -1) {
      swift_once();
    }
    uint64_t v141 = sub_21CB880A0();
    sub_21CA4CC18(v141, (uint64_t)qword_267CA5380);
    sub_21CA24E80(v118, (uint64_t)v140, &qword_267C97188);
    sub_21CA24E80(v118, v139, &qword_267C97188);
    uint64_t v142 = sub_21CB88070();
    os_log_type_t v143 = sub_21CB88880();
    if (os_log_type_enabled(v142, v143))
    {
      uint64_t v144 = swift_slowAlloc();
      uint64_t v145 = swift_slowAlloc();
      *(void *)&v176[0] = v145;
      *(_DWORD *)uint64_t v144 = 136315906;
      uint64_t v146 = *v140;
      unint64_t v147 = v140[1];
      swift_bridgeObjectRetain();
      uint64_t v175 = sub_21CA4E450(v146, v147, (uint64_t *)v176);
      sub_21CB889C0();
      swift_bridgeObjectRelease();
      sub_21CA1B88C((uint64_t)v140, &qword_267C97188);
      *(_WORD *)(v144 + 12) = 2048;
      uint64_t v175 = *(void *)&v137;
      sub_21CB889C0();
      *(_WORD *)(v144 + 22) = 2048;
      uint64_t v175 = *(void *)&v138;
      sub_21CB889C0();
      *(_WORD *)(v144 + 32) = 2080;
      uint64_t v148 = (uint64_t)v156;
      unint64_t v149 = FMFAddress.debugDescription.getter();
      uint64_t v175 = sub_21CA4E450(v149, v150, (uint64_t *)v176);
      uint64_t v108 = (uint64_t)v173;
      sub_21CB889C0();
      swift_bridgeObjectRelease();
      sub_21CA1B88C(v148, &qword_267C97188);
      _os_log_impl(&dword_21CA00000, v142, v143, "FMReverseGeocodingCache: Using cached request for %s due to location distance throttling - distance: %f, limit: %f -> %s.", (uint8_t *)v144, 0x2Au);
      swift_arrayDestroy();
      MEMORY[0x21D4B6B70](v145, -1, -1);
      MEMORY[0x21D4B6B70](v144, -1, -1);
    }
    else
    {
      sub_21CA1B88C((uint64_t)v140, &qword_267C97188);
      sub_21CA1B88C(v139, &qword_267C97188);
    }

    uint64_t v151 = (const void *)(v118 + *(int *)(v108 + 48));
    memcpy(v176, v151, sizeof(v176));
    uint64_t v152 = v170;
    memcpy(v170, v151, 0x130uLL);
    sub_21CA76A94((uint64_t)v176);
    sub_21CA1B88C(v118, &qword_267C97188);
    double v105 = v152;
    return nullsub_1(v105, v104);
  }
  uint64_t v134 = v118;
LABEL_42:
  sub_21CA1B88C(v134, &qword_267C97188);
LABEL_43:
  sub_21CA76144(v176);
  return sub_21CA26A4C((uint64_t)v176, (uint64_t)v170, &qword_267C951E0);
}

void sub_21CB1A148(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v82 = a3;
  uint64_t v83 = a4;
  uint64_t v8 = type metadata accessor for FMReverseGeocodingRequest();
  uint64_t v79 = *(void *)(v8 - 8);
  uint64_t v9 = *(void *)(v79 + 64);
  uint64_t v10 = MEMORY[0x270FA5388](v8 - 8);
  uint64_t v80 = (uint64_t)&v77 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x270FA5388](v10);
  uint64_t v81 = (uint64_t)&v77 - v12;
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  unint64_t v78 = (uint64_t *)((char *)&v77 - v14);
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)&v77 - v16;
  uint64_t v18 = MEMORY[0x270FA5388](v15);
  unint64_t v20 = (char *)&v77 - v19;
  MEMORY[0x270FA5388](v18);
  uint64_t v22 = (uint64_t *)((char *)&v77 - v21);
  uint64_t v84 = a1;
  uint64_t v23 = sub_21CB1FC60();
  uint64_t v25 = v24;
  uint64_t v85 = v5;
  uint64_t v26 = v5 + qword_267C96C60;
  swift_beginAccess();
  if (*(void *)(*(void *)v26 + 16))
  {
    swift_bridgeObjectRetain();
    sub_21CA5BCE0(v23, v25);
    char v28 = v27;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v28)
    {
      if (qword_267C94998 != -1) {
        swift_once();
      }
      uint64_t v29 = sub_21CB880A0();
      sub_21CA4CC18(v29, (uint64_t)qword_267CA5380);
      sub_21CB1E1D4(v84, (uint64_t)v20, (uint64_t (*)(void))type metadata accessor for FMReverseGeocodingRequest);
      swift_retain_n();
      uint64_t v30 = sub_21CB88070();
      os_log_type_t v31 = sub_21CB88880();
      if (os_log_type_enabled(v30, v31))
      {
        uint64_t v32 = swift_slowAlloc();
        uint64_t v33 = swift_slowAlloc();
        v90[0] = v33;
        *(_DWORD *)uint64_t v32 = 136315394;
        uint64_t v34 = sub_21CB89110();
        v89[0] = sub_21CA4E450(v34, v35, v90);
        sub_21CB889C0();
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v32 + 12) = 2080;
        uint64_t v36 = FMReverseGeocodingRequest.debugDescription.getter();
        v89[0] = sub_21CA4E450(v36, v37, v90);
        sub_21CB889C0();
        swift_bridgeObjectRelease();
        sub_21CB1EC18((uint64_t)v20, (uint64_t (*)(void))type metadata accessor for FMReverseGeocodingRequest);
        _os_log_impl(&dword_21CA00000, v30, v31, "%s: Loading declined, we are already processing similar location: %s", (uint8_t *)v32, 0x16u);
        swift_arrayDestroy();
        uint64_t v38 = v33;
LABEL_21:
        MEMORY[0x21D4B6B70](v38, -1, -1);
        MEMORY[0x21D4B6B70](v32, -1, -1);
LABEL_25:

        return;
      }
      swift_release_n();
      uint64_t v76 = (uint64_t)v20;
      goto LABEL_24;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  uint64_t v39 = v84;
  sub_21CB1E1D4(v84, (uint64_t)v22, (uint64_t (*)(void))type metadata accessor for FMReverseGeocodingRequest);
  if (a2)
  {
    sub_21CB1EC18((uint64_t)v22, (uint64_t (*)(void))type metadata accessor for FMReverseGeocodingRequest);
    uint64_t v40 = v85;
  }
  else
  {
    uint64_t v40 = v85;
    sub_21CB18D54(v22, v88);
    sub_21CB1EC18((uint64_t)v22, (uint64_t (*)(void))type metadata accessor for FMReverseGeocodingRequest);
    sub_21CA26A4C((uint64_t)v88, (uint64_t)v89, &qword_267C951E0);
    sub_21CA76468((uint64_t)v89, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_21CA1358C);
    sub_21CA26A4C((uint64_t)v89, (uint64_t)v90, &qword_267C951E0);
    if (sub_21CA76890((uint64_t)v90) != 1)
    {
      if (qword_267C94998 != -1) {
        swift_once();
      }
      uint64_t v68 = sub_21CB880A0();
      sub_21CA4CC18(v68, (uint64_t)qword_267CA5380);
      uint64_t v69 = (uint64_t)v78;
      sub_21CB1E1D4(v39, (uint64_t)v78, (uint64_t (*)(void))type metadata accessor for FMReverseGeocodingRequest);
      swift_retain_n();
      uint64_t v30 = sub_21CB88070();
      os_log_type_t v70 = sub_21CB88880();
      if (os_log_type_enabled(v30, v70))
      {
        uint64_t v32 = swift_slowAlloc();
        uint64_t v71 = swift_slowAlloc();
        v88[0] = v71;
        *(_DWORD *)uint64_t v32 = 136315394;
        uint64_t v72 = sub_21CB89110();
        uint64_t v87 = sub_21CA4E450(v72, v73, v88);
        sub_21CB889C0();
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v32 + 12) = 2080;
        uint64_t v74 = FMReverseGeocodingRequest.debugDescription.getter();
        uint64_t v87 = sub_21CA4E450(v74, v75, v88);
        sub_21CB889C0();
        swift_bridgeObjectRelease();
        sub_21CB1EC18(v69, (uint64_t (*)(void))type metadata accessor for FMReverseGeocodingRequest);
        _os_log_impl(&dword_21CA00000, v30, v70, "%s: Loading declined, we have already processed similar location: %s", (uint8_t *)v32, 0x16u);
        swift_arrayDestroy();
        uint64_t v38 = v71;
        goto LABEL_21;
      }
      swift_release_n();
      uint64_t v76 = v69;
LABEL_24:
      sub_21CB1EC18(v76, (uint64_t (*)(void))type metadata accessor for FMReverseGeocodingRequest);
      goto LABEL_25;
    }
  }
  if (qword_267C94998 != -1) {
    swift_once();
  }
  unint64_t v78 = (void *)v26;
  uint64_t v41 = sub_21CB880A0();
  sub_21CA4CC18(v41, (uint64_t)qword_267CA5380);
  sub_21CB1E1D4(v39, (uint64_t)v17, (uint64_t (*)(void))type metadata accessor for FMReverseGeocodingRequest);
  swift_retain_n();
  uint64_t v42 = sub_21CB88070();
  os_log_type_t v43 = sub_21CB88880();
  if (os_log_type_enabled(v42, v43))
  {
    uint64_t v44 = swift_slowAlloc();
    uint64_t v45 = swift_slowAlloc();
    v90[0] = v45;
    *(_DWORD *)uint64_t v44 = 136315394;
    uint64_t v46 = sub_21CB89110();
    v89[0] = sub_21CA4E450(v46, v47, v90);
    sub_21CB889C0();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v44 + 12) = 2080;
    uint64_t v48 = FMReverseGeocodingRequest.debugDescription.getter();
    v89[0] = sub_21CA4E450(v48, v49, v90);
    uint64_t v39 = v84;
    sub_21CB889C0();
    swift_bridgeObjectRelease();
    sub_21CB1EC18((uint64_t)v17, (uint64_t (*)(void))type metadata accessor for FMReverseGeocodingRequest);
    _os_log_impl(&dword_21CA00000, v42, v43, "%s: Loading new address for %s", (uint8_t *)v44, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x21D4B6B70](v45, -1, -1);
    uint64_t v50 = v85;
    MEMORY[0x21D4B6B70](v44, -1, -1);
  }
  else
  {
    swift_release_n();
    sub_21CB1EC18((uint64_t)v17, (uint64_t (*)(void))type metadata accessor for FMReverseGeocodingRequest);

    uint64_t v50 = v40;
  }
  uint64_t v51 = v81;
  sub_21CB1E1D4(v39, v81, (uint64_t (*)(void))type metadata accessor for FMReverseGeocodingRequest);
  uint64_t v52 = v80;
  sub_21CB1E1D4(v39, v80, (uint64_t (*)(void))type metadata accessor for FMReverseGeocodingRequest);
  unint64_t v53 = (*(unsigned __int8 *)(v79 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v79 + 80);
  uint64_t v54 = swift_allocObject();
  *(void *)(v54 + 16) = v50;
  sub_21CB1EC78(v52, v54 + v53, (uint64_t (*)(void))type metadata accessor for FMReverseGeocodingRequest);
  uint64_t v55 = (uint64_t *)(v54 + ((v9 + v53 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v56 = v82;
  uint64_t v57 = v83;
  *uint64_t v55 = v82;
  v55[1] = v57;
  uint64_t v58 = (objc_class *)type metadata accessor for FMReverseGeocodingOperation();
  uint64_t v59 = objc_allocWithZone(v58);
  v59[OBJC_IVAR____TtC7FMFCore27FMReverseGeocodingOperation__isFinished] = 0;
  sub_21CB1E1D4(v51, (uint64_t)&v59[OBJC_IVAR____TtC7FMFCore27FMReverseGeocodingOperation_request], (uint64_t (*)(void))type metadata accessor for FMReverseGeocodingRequest);
  uint64_t v60 = (uint64_t (**)(uint64_t, void *))&v59[OBJC_IVAR____TtC7FMFCore27FMReverseGeocodingOperation_completion];
  *uint64_t v60 = sub_21CB1E7C4;
  v60[1] = (uint64_t (*)(uint64_t, void *))v54;
  swift_retain();
  sub_21CAD160C(v56);
  v86.receiver = v59;
  v86.super_class = v58;
  id v61 = objc_msgSendSuper2(&v86, sel_init);
  sub_21CB1EC18(v51, (uint64_t (*)(void))type metadata accessor for FMReverseGeocodingRequest);
  objc_msgSend(*(id *)(v50 + qword_267C96C70), sel_addOperation_, v61);
  uint64_t v62 = sub_21CB1FC60();
  uint64_t v64 = v63;
  char v65 = v78;
  swift_beginAccess();
  id v66 = v61;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v89[0] = *v65;
  *char v65 = 0x8000000000000000;
  sub_21CB842BC((uint64_t)v66, v62, v64, isUniquelyReferenced_nonNull_native);
  *char v65 = v89[0];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_endAccess();
}

uint64_t sub_21CB1AC54(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v30 = a5;
  uint64_t v31 = a6;
  uint64_t v29 = a1;
  uint64_t v33 = sub_21CB88100();
  uint64_t v36 = *(void *)(v33 - 8);
  MEMORY[0x270FA5388](v33);
  uint64_t v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_21CB88150();
  uint64_t v34 = *(void *)(v11 - 8);
  uint64_t v35 = v11;
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for FMReverseGeocodingRequest();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(void *)(v15 + 64);
  MEMORY[0x270FA5388](v14 - 8);
  uint64_t v17 = (char *)&v28 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = *(void *)(a3 + qword_267C96C78);
  sub_21CB1E1D4(a4, (uint64_t)v17, (uint64_t (*)(void))type metadata accessor for FMReverseGeocodingRequest);
  unint64_t v18 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  unint64_t v19 = (v16 + v18 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = a3;
  *(void *)(v20 + 24) = a2;
  sub_21CB1EC78((uint64_t)v17, v20 + v18, (uint64_t (*)(void))type metadata accessor for FMReverseGeocodingRequest);
  uint64_t v21 = (uint64_t *)(v20 + v19);
  uint64_t v23 = v30;
  uint64_t v22 = v31;
  *uint64_t v21 = v30;
  v21[1] = v22;
  *(void *)(v20 + ((v19 + 23) & 0xFFFFFFFFFFFFFFF8)) = v29;
  aBlock[4] = sub_21CB1E9F0;
  void aBlock[5] = v20;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_21CA1B084;
  uint64_t aBlock[3] = &unk_26CD6E458;
  uint64_t v24 = _Block_copy(aBlock);
  swift_retain();
  id v25 = a2;
  sub_21CAD160C(v23);
  swift_unknownObjectRetain();
  sub_21CB88120();
  uint64_t v37 = MEMORY[0x263F8EE78];
  sub_21CB1E3B4();
  sub_21CA57E34((uint64_t *)&unk_267C96DD0);
  sub_21CA6D91C();
  uint64_t v26 = v33;
  sub_21CB88A60();
  MEMORY[0x21D4B5A20](0, v13, v10, v24);
  _Block_release(v24);
  (*(void (**)(char *, uint64_t))(v36 + 8))(v10, v26);
  (*(void (**)(char *, uint64_t))(v34 + 8))(v13, v35);
  return swift_release();
}

void sub_21CB1AFE0(uint64_t a1, void *a2, uint64_t a3, void (*a4)(double *), uint64_t a5, uint64_t a6)
{
  uint64_t v122 = a6;
  uint64_t v11 = sub_21CB88100();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v119 = (char *)&v105 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_21CB88150();
  uint64_t v118 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  unint64_t v117 = (char *)&v105 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_21CB88110();
  uint64_t v110 = *(void *)(v16 - 8);
  uint64_t v111 = v16;
  MEMORY[0x270FA5388](v16);
  uint64_t v116 = (char *)&v105 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_21CB87590();
  uint64_t v113 = *(void *)(v18 - 8);
  uint64_t v114 = v18;
  MEMORY[0x270FA5388](v18);
  uint64_t v112 = (char *)&v105 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = type metadata accessor for FMReverseGeocodingRequest();
  uint64_t v21 = MEMORY[0x270FA5388](v20 - 8);
  uint64_t v106 = (uint64_t)&v105 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = MEMORY[0x270FA5388](v21);
  uint64_t v115 = (uint64_t)&v105 - v24;
  MEMORY[0x270FA5388](v23);
  uint64_t v26 = qword_267C96C68;
  uint64_t v27 = *(void *)(a1 + qword_267C96C68);
  BOOL v28 = __OFADD__(v27, 1);
  uint64_t v29 = v27 + 1;
  if (v28)
  {
    __break(1u);
  }
  else
  {
    uint64_t v120 = (uint64_t)&v105 - v25;
    uint64_t v121 = a5;
    uint64_t v109 = v14;
    *(void *)(a1 + qword_267C96C68) = v29;
    if (qword_267C94998 == -1) {
      goto LABEL_3;
    }
  }
  swift_once();
LABEL_3:
  uint64_t v30 = sub_21CB880A0();
  uint64_t v31 = sub_21CA4CC18(v30, (uint64_t)qword_267CA5380);
  swift_retain_n();
  uint64_t v125 = v31;
  uint64_t v32 = sub_21CB88070();
  os_log_type_t v33 = sub_21CB88880();
  BOOL v34 = os_log_type_enabled(v32, v33);
  uint64_t v123 = a4;
  uint64_t v124 = a3;
  uint64_t v107 = v12;
  uint64_t v108 = v11;
  if (v34)
  {
    uint64_t v35 = swift_slowAlloc();
    uint64_t v36 = swift_slowAlloc();
    *(void *)&v131[0] = v36;
    *(_DWORD *)uint64_t v35 = 136315394;
    double v105 = a2;
    uint64_t v37 = sub_21CB89110();
    *(void *)&v130[0] = sub_21CA4E450(v37, v38, (uint64_t *)v131);
    sub_21CB889C0();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v35 + 12) = 2048;
    double v39 = *(double *)(a1 + v26);
    swift_release();
    v130[0] = v39;
    a2 = v105;
    sub_21CB889C0();
    swift_release();
    _os_log_impl(&dword_21CA00000, v32, v33, "%s: Total operations processed: %ld.", (uint8_t *)v35, 0x16u);
    swift_arrayDestroy();
    uint64_t v40 = v36;
    a3 = v124;
    MEMORY[0x21D4B6B70](v40, -1, -1);
    MEMORY[0x21D4B6B70](v35, -1, -1);
  }
  else
  {

    swift_release_n();
  }
  uint64_t v41 = *(void *)(a1 + v26);
  if (__ROR8__(0xCCCCCCCCCCCCCCCDLL * v41 + 0x1999999999999998, 1) <= 0x1999999999999998uLL)
  {
    sub_21CB87530();
    double v43 = v42;
    swift_retain_n();
    uint64_t v44 = sub_21CB88070();
    os_log_type_t v45 = sub_21CB88880();
    if (!os_log_type_enabled(v44, v45))
    {

      swift_release_n();
      if (a2) {
        goto LABEL_10;
      }
      goto LABEL_17;
    }
    uint64_t v46 = swift_slowAlloc();
    uint64_t v47 = swift_slowAlloc();
    *(void *)&v131[0] = v47;
    *(_DWORD *)uint64_t v46 = 136315394;
    uint64_t v48 = sub_21CB89110();
    *(void *)&v130[0] = sub_21CA4E450(v48, v49, (uint64_t *)v131);
    sub_21CB889C0();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v46 + 12) = 2048;
    v130[0] = (double)v41 / fabs(v43);
    sub_21CB889C0();
    _os_log_impl(&dword_21CA00000, v44, v45, "%s: Current throughput: %f requests per second.", (uint8_t *)v46, 0x16u);
    swift_arrayDestroy();
    uint64_t v50 = v47;
    a3 = v124;
    MEMORY[0x21D4B6B70](v50, -1, -1);
    MEMORY[0x21D4B6B70](v46, -1, -1);
  }
  if (a2)
  {
LABEL_10:
    uint64_t v51 = v120;
    sub_21CB1E1D4(a3, v120, (uint64_t (*)(void))type metadata accessor for FMReverseGeocodingRequest);
    id v52 = a2;
    id v53 = a2;
    uint64_t v54 = sub_21CB88070();
    os_log_type_t v55 = sub_21CB88880();
    if (os_log_type_enabled(v54, v55))
    {
      uint64_t v56 = swift_slowAlloc();
      uint64_t v125 = swift_slowAlloc();
      *(void *)&v131[0] = v125;
      *(_DWORD *)uint64_t v56 = 136315394;
      uint64_t v57 = FMReverseGeocodingRequest.debugDescription.getter();
      *(void *)&v130[0] = sub_21CA4E450(v57, v58, (uint64_t *)v131);
      sub_21CB889C0();
      swift_bridgeObjectRelease();
      sub_21CB1EC18(v51, (uint64_t (*)(void))type metadata accessor for FMReverseGeocodingRequest);
      *(_WORD *)(v56 + 12) = 2080;
      swift_getErrorValue();
      uint64_t v59 = sub_21CB89000();
      *(void *)&v130[0] = sub_21CA4E450(v59, v60, (uint64_t *)v131);
      sub_21CB889C0();
      swift_bridgeObjectRelease();

      id v61 = "FMReverseGeocodingCache: Geocoding error: %s for request: %s";
      uint64_t v62 = v54;
      os_log_type_t v63 = v55;
LABEL_12:
      _os_log_impl(&dword_21CA00000, v62, v63, v61, (uint8_t *)v56, 0x16u);
      uint64_t v64 = v125;
      swift_arrayDestroy();
      MEMORY[0x21D4B6B70](v64, -1, -1);
      MEMORY[0x21D4B6B70](v56, -1, -1);
      goto LABEL_14;
    }
    sub_21CB1EC18(v51, (uint64_t (*)(void))type metadata accessor for FMReverseGeocodingRequest);

    goto LABEL_14;
  }
LABEL_17:
  if (!v122)
  {
    uint64_t v87 = v106;
    sub_21CB1E1D4(a3, v106, (uint64_t (*)(void))type metadata accessor for FMReverseGeocodingRequest);
    swift_retain_n();
    uint64_t v54 = sub_21CB88070();
    os_log_type_t v88 = sub_21CB88880();
    if (os_log_type_enabled(v54, v88))
    {
      uint64_t v56 = swift_slowAlloc();
      uint64_t v125 = swift_slowAlloc();
      *(void *)&v131[0] = v125;
      *(_DWORD *)uint64_t v56 = 136315394;
      uint64_t v89 = sub_21CB89110();
      *(void *)&v130[0] = sub_21CA4E450(v89, v90, (uint64_t *)v131);
      sub_21CB889C0();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v56 + 12) = 2080;
      uint64_t v91 = FMReverseGeocodingRequest.debugDescription.getter();
      *(void *)&v130[0] = sub_21CA4E450(v91, v92, (uint64_t *)v131);
      sub_21CB889C0();
      swift_bridgeObjectRelease();
      sub_21CB1EC18(v87, (uint64_t (*)(void))type metadata accessor for FMReverseGeocodingRequest);
      id v61 = "%s: No map items received for request: %s";
      uint64_t v62 = v54;
      os_log_type_t v63 = v88;
      goto LABEL_12;
    }
    swift_release_n();
    sub_21CB1EC18(v87, (uint64_t (*)(void))type metadata accessor for FMReverseGeocodingRequest);
LABEL_14:

    char v65 = v123;
    uint64_t v66 = sub_21CB1FC60();
    uint64_t v68 = v67;
    swift_beginAccess();
    uint64_t v69 = (void *)sub_21CB80A10(v66, v68);
    swift_endAccess();
    swift_bridgeObjectRelease();

    if (v65)
    {
      sub_21CA76144(v131);
      sub_21CA26A4C((uint64_t)v131, (uint64_t)v130, &qword_267C951E0);
      v65(v130);
    }
    return;
  }
  os_log_type_t v70 = (void *)swift_unknownObjectRetain_n();
  FMFAddress.init(mapItem:)(v70, (uint64_t)v129);
  uint64_t v71 = sub_21CB1FC60();
  uint64_t v73 = v72;
  swift_beginAccess();
  uint64_t v74 = (void *)sub_21CB80A10(v71, v73);
  swift_endAccess();
  swift_bridgeObjectRelease();

  uint64_t v75 = (uint64_t)v112;
  sub_21CB87580();
  memcpy(v131, v129, sizeof(v131));
  sub_21CB18360(a3, (uint64_t)v131, v75);
  (*(void (**)(uint64_t, uint64_t))(v113 + 8))(v75, v114);
  uint64_t v76 = v115;
  sub_21CB1E1D4(a3, v115, (uint64_t (*)(void))type metadata accessor for FMReverseGeocodingRequest);
  memcpy(v130, v129, sizeof(v130));
  swift_retain();
  sub_21CA76A94((uint64_t)v130);
  swift_retain();
  sub_21CA76A94((uint64_t)v130);
  uint64_t v77 = sub_21CB88070();
  os_log_type_t v78 = sub_21CB88880();
  if (os_log_type_enabled(v77, v78))
  {
    uint64_t v79 = swift_slowAlloc();
    uint64_t v125 = swift_slowAlloc();
    v127[0] = v125;
    *(_DWORD *)uint64_t v79 = 136315650;
    uint64_t v80 = sub_21CB89110();
    v128[0] = sub_21CA4E450(v80, v81, v127);
    sub_21CB889C0();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v79 + 12) = 2080;
    uint64_t v82 = FMReverseGeocodingRequest.debugDescription.getter();
    v128[0] = sub_21CA4E450(v82, v83, v127);
    sub_21CB889C0();
    swift_bridgeObjectRelease();
    sub_21CB1EC18(v76, (uint64_t (*)(void))type metadata accessor for FMReverseGeocodingRequest);
    *(_WORD *)(v79 + 22) = 2080;
    memcpy(v128, v130, sizeof(v128));
    unint64_t v84 = FMFAddress.debugDescription.getter();
    v128[0] = sub_21CA4E450(v84, v85, v127);
    sub_21CB889C0();
    swift_bridgeObjectRelease();
    sub_21CA76BE0((uint64_t)v130);
    sub_21CA76BE0((uint64_t)v130);
    _os_log_impl(&dword_21CA00000, v77, v78, "%s: address received for request: %s - %s", (uint8_t *)v79, 0x20u);
    uint64_t v86 = v125;
    swift_arrayDestroy();
    MEMORY[0x21D4B6B70](v86, -1, -1);
    MEMORY[0x21D4B6B70](v79, -1, -1);
  }
  else
  {
    swift_release_n();
    sub_21CB1EC18(v76, (uint64_t (*)(void))type metadata accessor for FMReverseGeocodingRequest);
    sub_21CA76BE0((uint64_t)v130);
    sub_21CA76BE0((uint64_t)v130);
  }

  uint64_t v93 = (uint64_t)v123;
  uint64_t v95 = v107;
  uint64_t v94 = v108;
  uint64_t v97 = v110;
  uint64_t v96 = v111;
  sub_21CA182AC();
  uint64_t v98 = v116;
  (*(void (**)(char *, void, uint64_t))(v97 + 104))(v116, *MEMORY[0x263F8F080], v96);
  uint64_t v99 = (void *)sub_21CB88940();
  (*(void (**)(char *, uint64_t))(v97 + 8))(v98, v96);
  memcpy(v127, v129, sizeof(v127));
  char v100 = (void *)swift_allocObject();
  v100[2] = a1;
  memcpy(v100 + 3, v129, 0x130uLL);
  uint64_t v101 = v121;
  v100[41] = v93;
  v100[42] = v101;
  v126[4] = sub_21CB1EC08;
  v126[5] = v100;
  v126[0] = MEMORY[0x263EF8330];
  v126[1] = 1107296256;
  v126[2] = sub_21CA1B084;
  v126[3] = &unk_26CD6E4A8;
  uint64_t v102 = _Block_copy(v126);
  swift_retain();
  sub_21CA76A94((uint64_t)v127);
  sub_21CAD160C(v93);
  uint64_t v103 = v117;
  sub_21CB88120();
  v128[0] = MEMORY[0x263F8EE78];
  sub_21CB1E3B4();
  sub_21CA57E34((uint64_t *)&unk_267C96DD0);
  sub_21CA6D91C();
  double v104 = v119;
  sub_21CB88A60();
  MEMORY[0x21D4B5A20](0, v103, v104, v102);
  _Block_release(v102);
  swift_unknownObjectRelease();

  (*(void (**)(char *, uint64_t))(v95 + 8))(v104, v94);
  (*(void (**)(char *, uint64_t))(v118 + 8))(v103, v109);
  memcpy(v128, v129, sizeof(v128));
  sub_21CA76BE0((uint64_t)v128);
  swift_release();
}

uint64_t sub_21CB1BFC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v25 = a3;
  uint64_t v7 = sub_21CB88100();
  uint64_t v27 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = sub_21CB88150();
  uint64_t v10 = *(void *)(v26 - 8);
  MEMORY[0x270FA5388](v26);
  uint64_t v12 = (char *)v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for FMReverseGeocodingRequest();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(void *)(v14 + 64);
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v16 = (char *)v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24[1] = *(void *)(v4 + qword_267C96C78);
  sub_21CB1E1D4(a1, (uint64_t)v16, (uint64_t (*)(void))type metadata accessor for FMReverseGeocodingRequest);
  unint64_t v17 = (*(unsigned __int8 *)(v14 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  unint64_t v18 = (v15 + v17 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = v4;
  sub_21CB1EC78((uint64_t)v16, v19 + v17, (uint64_t (*)(void))type metadata accessor for FMReverseGeocodingRequest);
  uint64_t v20 = (uint64_t *)(v19 + v18);
  uint64_t v21 = v25;
  *uint64_t v20 = a2;
  v20[1] = v21;
  aBlock[4] = sub_21CB1E410;
  void aBlock[5] = v19;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_21CA1B084;
  uint64_t aBlock[3] = &unk_26CD6E2F0;
  uint64_t v22 = _Block_copy(aBlock);
  swift_retain();
  sub_21CAD160C(a2);
  sub_21CB88120();
  uint64_t v28 = MEMORY[0x263F8EE78];
  sub_21CB1E3B4();
  sub_21CA57E34((uint64_t *)&unk_267C96DD0);
  sub_21CA6D91C();
  sub_21CB88A60();
  MEMORY[0x21D4B5A20](0, v12, v9, v22);
  _Block_release(v22);
  (*(void (**)(char *, uint64_t))(v27 + 8))(v9, v7);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v26);
  return swift_release();
}

void sub_21CB1C32C(uint64_t a1, uint64_t *a2, void (*a3)(void *), uint64_t a4)
{
  id v52 = a3;
  uint64_t v7 = type metadata accessor for FMReverseGeocodingRequest();
  uint64_t v51 = *(void *)(v7 - 8);
  uint64_t v8 = *(void *)(v51 + 64);
  uint64_t v9 = MEMORY[0x270FA5388](v7 - 8);
  uint64_t v10 = (char *)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v45 - v11;
  uint64_t v13 = sub_21CB1FC60();
  uint64_t v15 = v14;
  uint64_t v16 = (uint64_t *)(a1 + qword_267C96C60);
  swift_beginAccess();
  uint64_t v17 = *v16;
  if (*(void *)(v17 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v18 = sub_21CA5BCE0(v13, v15);
    if (v19)
    {
      id v20 = *(id *)(*(void *)(v17 + 56) + 8 * v18);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (qword_267C94998 != -1) {
        swift_once();
      }
      uint64_t v50 = a4;
      uint64_t v21 = sub_21CB880A0();
      sub_21CA4CC18(v21, (uint64_t)qword_267CA5380);
      sub_21CB1E1D4((uint64_t)a2, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for FMReverseGeocodingRequest);
      id v22 = v20;
      swift_retain_n();
      id v23 = v22;
      uint64_t v24 = sub_21CB88070();
      os_log_type_t v25 = sub_21CB88880();
      int v26 = v25;
      if (os_log_type_enabled(v24, v25))
      {
        uint64_t v27 = swift_slowAlloc();
        int v48 = v26;
        uint64_t v28 = v27;
        uint64_t v49 = swift_slowAlloc();
        v54[0] = v49;
        *(_DWORD *)uint64_t v28 = 136315650;
        os_log_t v47 = v24;
        uint64_t v29 = sub_21CB89110();
        v53[0] = sub_21CA4E450(v29, v30, v54);
        uint64_t v46 = (char *)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
        sub_21CB889C0();
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v28 + 12) = 2080;
        uint64_t v31 = FMReverseGeocodingRequest.debugDescription.getter();
        v53[0] = sub_21CA4E450(v31, v32, v54);
        sub_21CB889C0();

        swift_bridgeObjectRelease();
        *(_WORD *)(v28 + 22) = 2080;
        uint64_t v33 = FMReverseGeocodingRequest.debugDescription.getter();
        v53[0] = sub_21CA4E450(v33, v34, v54);
        uint64_t v10 = v46;
        sub_21CB889C0();
        swift_bridgeObjectRelease();
        sub_21CB1EC18((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for FMReverseGeocodingRequest);
        uint64_t v24 = v47;
        _os_log_impl(&dword_21CA00000, v47, (os_log_type_t)v48, "%s: Attaching to an existing operation: %s, source: %s", (uint8_t *)v28, 0x20u);
        uint64_t v35 = v49;
        swift_arrayDestroy();
        MEMORY[0x21D4B6B70](v35, -1, -1);
        MEMORY[0x21D4B6B70](v28, -1, -1);
      }
      else
      {

        swift_release_n();
        sub_21CB1EC18((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for FMReverseGeocodingRequest);
      }

      sub_21CB1E1D4((uint64_t)a2, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for FMReverseGeocodingRequest);
      unint64_t v37 = (*(unsigned __int8 *)(v51 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v51 + 80);
      uint64_t v38 = swift_allocObject();
      *(void *)(v38 + 16) = a1;
      sub_21CB1EC78((uint64_t)v10, v38 + v37, (uint64_t (*)(void))type metadata accessor for FMReverseGeocodingRequest);
      double v39 = (void *)(v38 + ((v8 + v37 + 7) & 0xFFFFFFFFFFFFFFF8));
      uint64_t v40 = (uint64_t)v52;
      uint64_t v41 = v50;
      *double v39 = v52;
      v39[1] = v41;
      v54[4] = (uint64_t)sub_21CB1E42C;
      v54[5] = v38;
      v54[0] = MEMORY[0x263EF8330];
      v54[1] = 1107296256;
      v54[2] = (uint64_t)sub_21CA1B084;
      uint64_t v54[3] = (uint64_t)&unk_26CD6E340;
      double v42 = _Block_copy(v54);
      double v43 = self;
      swift_retain();
      sub_21CAD160C(v40);
      id v44 = objc_msgSend(v43, sel_blockOperationWithBlock_, v42);
      _Block_release(v42);
      swift_release();
      objc_msgSend(v44, sel_addDependency_, v23);
      objc_msgSend(*(id *)(a1 + qword_267C96C70), sel_addOperation_, v44);

      return;
    }
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  uint64_t v36 = v52;
  if (v52)
  {
    sub_21CB18D54(a2, v53);
    v36(v53);
    sub_21CA26A4C((uint64_t)v53, (uint64_t)v54, &qword_267C951E0);
    sub_21CA76468((uint64_t)v54, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_21CA1358C);
  }
}

uint64_t sub_21CB1C924(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v25 = a4;
  uint64_t v7 = sub_21CB88100();
  uint64_t v27 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = sub_21CB88150();
  uint64_t v10 = *(void *)(v26 - 8);
  MEMORY[0x270FA5388](v26);
  uint64_t v12 = (char *)v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for FMReverseGeocodingRequest();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(void *)(v14 + 64);
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v16 = (char *)v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24[1] = *(void *)(a1 + qword_267C96C78);
  sub_21CB1E1D4(a2, (uint64_t)v16, (uint64_t (*)(void))type metadata accessor for FMReverseGeocodingRequest);
  unint64_t v17 = (*(unsigned __int8 *)(v14 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  unint64_t v18 = (v15 + v17 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = a1;
  sub_21CB1EC78((uint64_t)v16, v19 + v17, (uint64_t (*)(void))type metadata accessor for FMReverseGeocodingRequest);
  id v20 = (uint64_t *)(v19 + v18);
  uint64_t v21 = v25;
  *id v20 = a3;
  v20[1] = v21;
  aBlock[4] = sub_21CB1E448;
  void aBlock[5] = v19;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_21CA1B084;
  uint64_t aBlock[3] = &unk_26CD6E390;
  id v22 = _Block_copy(aBlock);
  swift_retain();
  sub_21CAD160C(a3);
  sub_21CB88120();
  uint64_t v28 = MEMORY[0x263F8EE78];
  sub_21CB1E3B4();
  sub_21CA57E34((uint64_t *)&unk_267C96DD0);
  sub_21CA6D91C();
  sub_21CB88A60();
  MEMORY[0x21D4B5A20](0, v12, v9, v22);
  _Block_release(v22);
  (*(void (**)(char *, uint64_t))(v27 + 8))(v9, v7);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v26);
  return swift_release();
}

uint64_t sub_21CB1CC8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v66 = a3;
  uint64_t v67 = a4;
  uint64_t v6 = sub_21CB88100();
  uint64_t v72 = *(void *)(v6 - 8);
  uint64_t v73 = v6;
  MEMORY[0x270FA5388](v6);
  os_log_type_t v70 = (char *)&v59 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v71 = sub_21CB88150();
  uint64_t v69 = *(void *)(v71 - 8);
  MEMORY[0x270FA5388](v71);
  uint64_t v68 = (char *)&v59 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_21CB88110();
  uint64_t v64 = *(void *)(v9 - 8);
  uint64_t v65 = v9;
  MEMORY[0x270FA5388](v9);
  os_log_type_t v63 = (char *)&v59 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_21CB87590();
  uint64_t v61 = *(void *)(v11 - 8);
  uint64_t v62 = v11;
  MEMORY[0x270FA5388](v11);
  unint64_t v60 = (char *)&v59 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for FMReverseGeocodingRequest();
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v15 = (char *)&v59 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_21CA57E34(&qword_267C97188);
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)&v59 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_21CA57E34(&qword_267C97190);
  MEMORY[0x270FA5388](v20 - 8);
  id v22 = (char *)&v59 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v75 = a2;
  uint64_t v23 = sub_21CB1FC60();
  uint64_t v25 = v24;
  uint64_t v74 = a1;
  uint64_t v26 = (uint64_t *)(a1 + qword_267C96C50);
  swift_beginAccess();
  uint64_t v27 = *v26;
  if (*(void *)(v27 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v28 = sub_21CA5BCE0(v23, v25);
    if (v29)
    {
      sub_21CA24E80(*(void *)(v27 + 56) + *(void *)(v17 + 72) * v28, (uint64_t)v22, &qword_267C97188);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v22, 0, 1, v16);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56))(v22, 1, 1, v16);
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56))(v22, 1, 1, v16);
  }
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v22, 1, v16))
  {
    sub_21CA1B88C((uint64_t)v22, &qword_267C97190);
    sub_21CA76144(v81);
  }
  else
  {
    sub_21CA24E80((uint64_t)v22, (uint64_t)v19, &qword_267C97188);
    sub_21CA1B88C((uint64_t)v22, &qword_267C97190);
    memcpy(v79, &v19[*(int *)(v16 + 48)], sizeof(v79));
    sub_21CA76A94((uint64_t)v79);
    sub_21CA1B88C((uint64_t)v19, &qword_267C97188);
    memcpy(v81, v79, sizeof(v81));
    nullsub_1(v81, v30);
  }
  sub_21CA26A4C((uint64_t)v81, (uint64_t)v80, &qword_267C951E0);
  if (qword_267C94998 != -1) {
    swift_once();
  }
  uint64_t v31 = sub_21CB880A0();
  sub_21CA4CC18(v31, (uint64_t)qword_267CA5380);
  sub_21CB1E1D4(v75, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for FMReverseGeocodingRequest);
  swift_retain();
  sub_21CA76468((uint64_t)v80, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_21CA5E3D0);
  swift_retain();
  sub_21CA76468((uint64_t)v80, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_21CA5E3D0);
  unint64_t v32 = sub_21CB88070();
  os_log_type_t v33 = sub_21CB88880();
  if (os_log_type_enabled(v32, v33))
  {
    uint64_t v34 = swift_slowAlloc();
    uint64_t v35 = swift_slowAlloc();
    uint64_t v77 = v35;
    *(_DWORD *)uint64_t v34 = 136315650;
    uint64_t v36 = sub_21CB89110();
    *(void *)&v81[0] = sub_21CA4E450(v36, v37, &v77);
    sub_21CB889C0();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v34 + 12) = 2080;
    uint64_t v38 = FMReverseGeocodingRequest.debugDescription.getter();
    *(void *)&v81[0] = sub_21CA4E450(v38, v39, &v77);
    sub_21CB889C0();
    swift_bridgeObjectRelease();
    sub_21CB1EC18((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for FMReverseGeocodingRequest);
    *(_WORD *)(v34 + 22) = 2080;
    sub_21CA26A4C((uint64_t)v80, (uint64_t)v79, &qword_267C951E0);
    sub_21CA26A4C((uint64_t)v80, (uint64_t)v81, &qword_267C951E0);
    if (sub_21CA76890((uint64_t)v81) == 1)
    {
      unint64_t v40 = 0xE400000000000000;
      unint64_t v41 = 1701736302;
    }
    else
    {
      sub_21CA26A4C((uint64_t)v80, (uint64_t)v76, &qword_267C951E0);
      sub_21CA76A94((uint64_t)v76);
      unint64_t v41 = FMFAddress.debugDescription.getter();
      unint64_t v40 = v42;
      memcpy(v78, v79, sizeof(v78));
      sub_21CA76BE0((uint64_t)v78);
    }
    v79[0] = sub_21CA4E450(v41, v40, &v77);
    sub_21CB889C0();
    swift_bridgeObjectRelease();
    sub_21CA76468((uint64_t)v80, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_21CA1358C);
    sub_21CA76468((uint64_t)v80, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_21CA1358C);
    _os_log_impl(&dword_21CA00000, v32, v33, "%s: Existing operation completed, notifying the duplicate: %s - %s", (uint8_t *)v34, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x21D4B6B70](v35, -1, -1);
    MEMORY[0x21D4B6B70](v34, -1, -1);
  }
  else
  {
    swift_release_n();
    sub_21CB1EC18((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for FMReverseGeocodingRequest);
    sub_21CA76468((uint64_t)v80, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_21CA1358C);
    sub_21CA76468((uint64_t)v80, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_21CA1358C);
  }
  sub_21CA26A4C((uint64_t)v80, (uint64_t)v79, &qword_267C951E0);
  if (sub_21CA76890((uint64_t)v79) != 1)
  {
    sub_21CA26A4C((uint64_t)v80, (uint64_t)v78, &qword_267C951E0);
    memcpy(v81, v78, sizeof(v81));
    uint64_t v43 = v75;
    id v44 = *(void **)(v75 + 16);
    sub_21CA76A94((uint64_t)v78);
    id v45 = objc_msgSend(v44, sel_timestamp);
    uint64_t v46 = (uint64_t)v60;
    sub_21CB87560();

    sub_21CB18360(v43, (uint64_t)v81, v46);
    (*(void (**)(uint64_t, uint64_t))(v61 + 8))(v46, v62);
    sub_21CA76468((uint64_t)v80, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_21CA1358C);
  }
  sub_21CA182AC();
  int v48 = v63;
  uint64_t v47 = v64;
  uint64_t v49 = v65;
  (*(void (**)(char *, void, uint64_t))(v64 + 104))(v63, *MEMORY[0x263F8F080], v65);
  uint64_t v50 = (void *)sub_21CB88940();
  (*(void (**)(char *, uint64_t))(v47 + 8))(v48, v49);
  sub_21CA26A4C((uint64_t)v80, (uint64_t)v78, &qword_267C951E0);
  uint64_t v51 = swift_allocObject();
  uint64_t v53 = v66;
  uint64_t v52 = v67;
  *(void *)(v51 + 16) = v66;
  *(void *)(v51 + 24) = v52;
  sub_21CA26A4C((uint64_t)v78, v51 + 32, &qword_267C951E0);
  v76[4] = sub_21CB1E65C;
  v76[5] = v51;
  v76[0] = MEMORY[0x263EF8330];
  v76[1] = 1107296256;
  v76[2] = sub_21CA1B084;
  v76[3] = &unk_26CD6E3E0;
  uint64_t v54 = _Block_copy(v76);
  sub_21CA76468((uint64_t)v80, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_21CA5E3D0);
  sub_21CAD160C(v53);
  os_log_type_t v55 = v68;
  sub_21CB88120();
  uint64_t v77 = MEMORY[0x263F8EE78];
  sub_21CB1E3B4();
  sub_21CA57E34((uint64_t *)&unk_267C96DD0);
  sub_21CA6D91C();
  uint64_t v56 = v70;
  uint64_t v57 = v73;
  sub_21CB88A60();
  MEMORY[0x21D4B5A20](0, v55, v56, v54);
  _Block_release(v54);

  (*(void (**)(char *, uint64_t))(v72 + 8))(v56, v57);
  (*(void (**)(char *, uint64_t))(v69 + 8))(v55, v71);
  sub_21CA76468((uint64_t)v80, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_21CA1358C);
  return swift_release();
}

uint64_t FMFReverseGeocodingCache.__allocating_init(preferredLocale:)(uint64_t a1)
{
  uint64_t v2 = sub_21CA57E34(&qword_267C95400);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_allocObject();
  sub_21CA24E80(a1, (uint64_t)v4, &qword_267C95400);
  uint64_t v5 = sub_21CA19B34((uint64_t)v4);
  sub_21CA1B88C(a1, &qword_267C95400);
  return v5;
}

double sub_21CB1D880()
{
  return sub_21CB1D8BC((uint64_t)sub_21CAB6A4C);
}

double sub_21CB1D89C()
{
  return sub_21CB1D8BC((uint64_t)sub_21CA6548C);
}

double sub_21CB1D8BC(uint64_t a1)
{
  if (qword_267C949A0 != -1) {
    a1 = swift_once();
  }
  MEMORY[0x270FA5388](a1);
  sub_21CB88910();
  return v2;
}

uint64_t sub_21CB1D97C(uint64_t a1, uint64_t (*a2)(unsigned char *), uint64_t a3)
{
  uint64_t v20 = a2;
  uint64_t v21 = a3;
  uint64_t v5 = sub_21CA57E34(&qword_267C95400);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for FMFLocation();
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_21CA57E34(&qword_267C95D60);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v13 = (uint64_t *)((char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v14 = type metadata accessor for FMReverseGeocodingRequest();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v19 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21CB1E1D4(a1, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for FMFLocation);
  sub_21CA24E80(v3 + qword_267CA5298, (uint64_t)v7, &qword_267C95400);
  sub_21CB1DC08((uint64_t)v10, (uint64_t)v7, v13);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    sub_21CA1B88C((uint64_t)v13, &qword_267C95D60);
    sub_21CA76144(v23);
    sub_21CA26A4C((uint64_t)v23, (uint64_t)v22, &qword_267C951E0);
    return v20(v22);
  }
  else
  {
    sub_21CB1EC78((uint64_t)v13, (uint64_t)v17, (uint64_t (*)(void))type metadata accessor for FMReverseGeocodingRequest);
    sub_21CB18850((uint64_t)v17, (uint64_t)v20, v21);
    return sub_21CB1EC18((uint64_t)v17, (uint64_t (*)(void))type metadata accessor for FMReverseGeocodingRequest);
  }
}

uint64_t sub_21CB1DC08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v6 = type metadata accessor for FMFLocation();
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v9 = &v29[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  uint64_t v10 = MEMORY[0x270FA5388](v7);
  uint64_t v12 = &v29[-v11 - 8];
  uint64_t v13 = *(void *)(a1 + 8);
  if (!v13
    || (uint64_t v14 = *(void *)a1,
        sub_21CA26A4C(a1 + *(int *)(v10 + 44), (uint64_t)v29, &qword_267C951F0),
        sub_21CA26A4C((uint64_t)v29, (uint64_t)v30, &qword_267C951F0),
        sub_21CA7CDBC((uint64_t)v30) == 1))
  {
    sub_21CA1B88C(a2, &qword_267C95400);
    sub_21CB1EC18(a1, (uint64_t (*)(void))type metadata accessor for FMFLocation);
    uint64_t v15 = type metadata accessor for FMReverseGeocodingRequest();
    return (*(uint64_t (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(a3, 1, 1, v15);
  }
  uint64_t v17 = (void *)v30[38];
  int v18 = *(unsigned __int8 *)(a1 + 33);
  sub_21CB1EC78(a1, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for FMFLocation);
  if (v18 == 2)
  {
    if (v12[32])
    {
      sub_21CB1EC78((uint64_t)v12, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for FMFLocation);
      goto LABEL_11;
    }
    uint64_t v21 = *((void *)v12 + 3);
    sub_21CB1EC78((uint64_t)v12, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for FMFLocation);
    if (v21 != 1)
    {
LABEL_11:
      uint64_t v24 = *((void *)v9 + 3);
      char v25 = v9[32];
      swift_bridgeObjectRetain();
      id v26 = v17;
      sub_21CB1EC18((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for FMFLocation);
      BOOL v23 = (v25 & 1) != 0 || v24 != 2;
      goto LABEL_14;
    }
    swift_bridgeObjectRetain();
    id v22 = v17;
    uint64_t v20 = (uint64_t)v9;
  }
  else
  {
    swift_bridgeObjectRetain();
    id v19 = v17;
    uint64_t v20 = (uint64_t)v12;
  }
  sub_21CB1EC18(v20, (uint64_t (*)(void))type metadata accessor for FMFLocation);
  BOOL v23 = 0;
LABEL_14:
  *a3 = v14;
  a3[1] = v13;
  uint64_t v27 = (int *)type metadata accessor for FMReverseGeocodingRequest();
  *((unsigned char *)a3 + v27[8]) = v23;
  *((unsigned char *)a3 + v27[7]) = v18 == 2;
  a3[2] = v17;
  sub_21CA26A4C(a2, (uint64_t)a3 + v27[6], &qword_267C95400);
  return (*(uint64_t (**)(void *, void, uint64_t, int *))(*((void *)v27 - 1) + 56))(a3, 0, 1, v27);
}

uint64_t FMFReverseGeocodingCache.init(preferredLocale:)(uint64_t a1)
{
  uint64_t v2 = sub_21CA57E34(&qword_267C95400);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21CA24E80(a1, (uint64_t)v4, &qword_267C95400);
  uint64_t v5 = sub_21CA19B34((uint64_t)v4);
  sub_21CA1B88C(a1, &qword_267C95400);
  return v5;
}

uint64_t FMFReverseGeocodingCache.deinit()
{
  uint64_t v1 = v0 + qword_267C96C48;
  uint64_t v2 = sub_21CB87590();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_21CA1B88C(v0 + qword_267CA5298, &qword_267C95400);
  return v0;
}

uint64_t FMFReverseGeocodingCache.__deallocating_deinit()
{
  uint64_t v1 = v0 + qword_267C96C48;
  uint64_t v2 = sub_21CB87590();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_21CA1B88C(v0 + qword_267CA5298, &qword_267C95400);

  return swift_deallocClassInstance();
}

uint64_t method lookup function for FMFReverseGeocodingCache(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for FMFReverseGeocodingCache);
}

uint64_t dispatch thunk of FMFReverseGeocodingCache.address(for:completion:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 360))();
}

uint64_t sub_21CB1E1D4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_21CB1E23C()
{
  uint64_t v1 = (int *)(type metadata accessor for FMReverseGeocodingRequest() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v4 = *(void *)(*(void *)v1 + 64);
  swift_release();
  swift_bridgeObjectRelease();

  uint64_t v5 = v0 + v3 + v1[8];
  uint64_t v6 = sub_21CB87630();
  uint64_t v7 = *(void *)(v6 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  }
  swift_release();

  return MEMORY[0x270FA0238](v0, ((v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 16, v2 | 7);
}

uint64_t sub_21CB1E39C()
{
  return sub_21CB1E460((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_21CB18BB4);
}

unint64_t sub_21CB1E3B4()
{
  unint64_t result = qword_267C96FC0;
  if (!qword_267C96FC0)
  {
    sub_21CB88100();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C96FC0);
  }
  return result;
}

uint64_t sub_21CB1E410()
{
  return sub_21CB1E460((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_21CB1C32C);
}

uint64_t sub_21CB1E42C()
{
  return sub_21CB1E460(sub_21CB1C924);
}

uint64_t sub_21CB1E448()
{
  return sub_21CB1E460(sub_21CB1CC8C);
}

uint64_t sub_21CB1E460(uint64_t (*a1)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v2 = *(void *)(type metadata accessor for FMReverseGeocodingRequest() - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = v1 + v3;
  uint64_t v6 = (uint64_t *)(v1 + ((*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v7 = *v6;
  uint64_t v8 = v6[1];

  return a1(v4, v5, v7, v8);
}

uint64_t sub_21CB1E508(uint64_t (*a1)(unsigned char *), uint64_t a2, uint64_t a3)
{
  sub_21CA26A4C(a3, (uint64_t)v6, &qword_267C951E0);
  uint64_t result = sub_21CA26A4C((uint64_t)v6, (uint64_t)v5, &qword_267C951E0);
  if (a1) {
    return a1(v5);
  }
  return result;
}

uint64_t sub_21CB1E574()
{
  if (*(void *)(v0 + 16)) {
    swift_release();
  }
  if (*(void *)(v0 + 200))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

  return MEMORY[0x270FA0238](v0, 336, 7);
}

uint64_t sub_21CB1E65C()
{
  return sub_21CB1E508(*(uint64_t (**)(unsigned char *))(v0 + 16), *(void *)(v0 + 24), v0 + 32);
}

uint64_t sub_21CB1E66C()
{
  uint64_t v1 = (int *)(type metadata accessor for FMReverseGeocodingRequest() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  unint64_t v4 = (*(void *)(*(void *)v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  uint64_t v5 = v0 + v3;
  swift_bridgeObjectRelease();

  uint64_t v6 = v5 + v1[8];
  uint64_t v7 = sub_21CB87630();
  uint64_t v8 = *(void *)(v7 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7)) {
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  }
  if (*(void *)(v0 + v4)) {
    swift_release();
  }

  return MEMORY[0x270FA0238](v0, v4 + 16, v2 | 7);
}

uint64_t sub_21CB1E7C4(uint64_t a1, void *a2)
{
  uint64_t v5 = *(void *)(type metadata accessor for FMReverseGeocodingRequest() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v2 + 16);
  uint64_t v8 = v2 + v6;
  uint64_t v9 = (uint64_t *)(v2 + ((*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v10 = *v9;
  uint64_t v11 = v9[1];

  return sub_21CB1AC54(a1, a2, v7, v8, v10, v11);
}

uint64_t sub_21CB1E878()
{
  uint64_t v1 = (int *)(type metadata accessor for FMReverseGeocodingRequest() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 32) & ~v2;
  unint64_t v4 = (*(void *)(*(void *)v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release();

  uint64_t v5 = v0 + v3;
  swift_bridgeObjectRelease();

  uint64_t v6 = v5 + v1[8];
  uint64_t v7 = sub_21CB87630();
  uint64_t v8 = *(void *)(v7 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7)) {
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  }
  if (*(void *)(v0 + v4)) {
    swift_release();
  }
  swift_unknownObjectRelease();

  return MEMORY[0x270FA0238](v0, ((v4 + 23) & 0xFFFFFFFFFFFFFFF8) + 8, v2 | 7);
}

void sub_21CB1E9F0()
{
  uint64_t v1 = *(void *)(type metadata accessor for FMReverseGeocodingRequest() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v4 = *(void *)(v0 + 16);
  uint64_t v5 = *(void **)(v0 + 24);
  uint64_t v6 = *(void (**)(double *))(v0 + v3);
  uint64_t v7 = *(void *)(v0 + v3 + 8);
  uint64_t v8 = *(void *)(v0 + ((v3 + 23) & 0xFFFFFFFFFFFFFFF8));

  sub_21CB1AFE0(v4, v5, v0 + v2, v6, v7, v8);
}

void *sub_21CB1EA90(uint64_t a1, const void *a2, void (*a3)(unsigned char *))
{
  uint64_t result = memcpy(__dst, a2, sizeof(__dst));
  if (a3)
  {
    memcpy(v8, a2, sizeof(v8));
    nullsub_1(v8, v6);
    sub_21CA26A4C((uint64_t)v8, (uint64_t)v7, &qword_267C951E0);
    sub_21CA76A94((uint64_t)__dst);
    a3(v7);
    return (void *)sub_21CA76BE0((uint64_t)__dst);
  }
  return result;
}

uint64_t sub_21CB1EB20()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 328)) {
    swift_release();
  }

  return MEMORY[0x270FA0238](v0, 344, 7);
}

void *sub_21CB1EC08()
{
  return sub_21CB1EA90(*(void *)(v0 + 16), (const void *)(v0 + 24), *(void (**)(unsigned char *))(v0 + 328));
}

uint64_t sub_21CB1EC18(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_21CB1EC78(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t type metadata accessor for FMFAddUpdateLabelRequest()
{
  uint64_t result = qword_267C97198;
  if (!qword_267C97198) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_21CB1ED54()
{
  uint64_t result = type metadata accessor for FMFLabelledLocation();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_21CB1EDEC()
{
  uint64_t v15 = *MEMORY[0x263EF8340];
  sub_21CB87220();
  swift_allocObject();
  sub_21CB87210();
  type metadata accessor for FMFLabelledLocation();
  sub_21CB1F190();
  uint64_t v0 = sub_21CB87200();
  unint64_t v2 = v1;
  swift_release();
  uint64_t v3 = self;
  uint64_t v4 = (void *)sub_21CB874B0();
  v11[0] = 0;
  id v5 = objc_msgSend(v3, sel_JSONObjectWithData_options_error_, v4, 0, v11);

  id v6 = v11[0];
  if (v5)
  {
    sub_21CB88A40();
    swift_unknownObjectRelease();
    sub_21CA38B20(v12, v14);
    sub_21CA4E524((uint64_t)v14, (uint64_t)v12);
    uint64_t v7 = sub_21CA57E34(&qword_267C955B0);
    if (swift_dynamicCast())
    {
      uint64_t v13 = v7;
      v12[0] = v11[0];
      swift_beginAccess();
      sub_21CA3769C((uint64_t)v12, 0xD000000000000010, 0x800000021CB971A0);
      swift_endAccess();
    }
    sub_21CA36618(v0, v2);
    return sub_21CA2B0D0((uint64_t)v14);
  }
  else
  {
    uint64_t v9 = v6;
    uint64_t v10 = (void *)sub_21CB87400();

    swift_willThrow();
    return sub_21CA36618(v0, v2);
  }
}

uint64_t sub_21CB1F058()
{
  return sub_21CA76240(v0 + qword_267CA52D8);
}

uint64_t sub_21CB1F068()
{
  uint64_t v0 = sub_21CB87730();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + qword_267CA51F8;
  uint64_t v2 = sub_21CB87590();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  sub_21CA76240(v0 + qword_267CA52D8);

  return swift_deallocClassInstance();
}

uint64_t sub_21CB1F188()
{
  return type metadata accessor for FMFAddUpdateLabelRequest();
}

unint64_t sub_21CB1F190()
{
  unint64_t result = qword_267C950C8;
  if (!qword_267C950C8)
  {
    type metadata accessor for FMFLabelledLocation();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C950C8);
  }
  return result;
}

uint64_t type metadata accessor for FMFRespondToInviteRequest()
{
  uint64_t result = qword_267C971A8;
  if (!qword_267C971A8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_21CB1F234()
{
  return swift_initClassMetadata2();
}

uint64_t sub_21CB1F288()
{
  uint64_t v1 = *(void *)(v0 + qword_267CA52F0);
  uint64_t v2 = *(void *)(v0 + qword_267CA52F0 + 8);
  uint64_t v6 = MEMORY[0x263F8D310];
  v5[0] = v1;
  v5[1] = v2;
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_21CA3769C((uint64_t)v5, 25705, 0xE200000000000000);
  char v3 = *(unsigned char *)(v0 + qword_267CA52F8);
  uint64_t v6 = MEMORY[0x263F8D4F8];
  LOBYTE(v5[0]) = v3;
  sub_21CA3769C((uint64_t)v5, 0x6465747065636361, 0xE800000000000000);
  return swift_endAccess();
}

uint64_t sub_21CB1F354()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_21CB1F368()
{
  uint64_t v0 = sub_21CB87730();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + qword_267CA51F8;
  uint64_t v2 = sub_21CB87590();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_21CB1F450()
{
  sub_21CB1F368();

  return swift_deallocClassInstance();
}

uint64_t sub_21CB1F4A4()
{
  return type metadata accessor for FMFRespondToInviteRequest();
}

uint64_t type metadata accessor for FMFAskToFollowRequest()
{
  uint64_t result = qword_267C971B8;
  if (!qword_267C971B8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_21CB1F4F8()
{
  return swift_initClassMetadata2();
}

uint64_t sub_21CB1F548()
{
  uint64_t v1 = *(void *)(v0 + qword_267CA5310);
  uint64_t v2 = sub_21CA57E34(&qword_267C94E60);
  uint64_t v6 = v2;
  v5[0] = v1;
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_21CA3769C((uint64_t)v5, 7562345, 0xE300000000000000);
  uint64_t v3 = *(void *)(v0 + qword_267CA5318);
  uint64_t v6 = v2;
  v5[0] = v3;
  swift_bridgeObjectRetain();
  sub_21CA3769C((uint64_t)v5, 0x736C69616D65, 0xE600000000000000);
  return swift_endAccess();
}

uint64_t sub_21CB1F614()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_21CB1F654()
{
  uint64_t v0 = sub_21CB87730();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + qword_267CA51F8;
  uint64_t v2 = sub_21CB87590();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_21CB1F748()
{
  sub_21CB1F654();

  return swift_deallocClassInstance();
}

uint64_t sub_21CB1F79C()
{
  return type metadata accessor for FMFAskToFollowRequest();
}

uint64_t FMReverseGeocodingRequest.geoHash.getter()
{
  return sub_21CB1FC60();
}

uint64_t FMReverseGeocodingRequest.debugDescription.getter()
{
  sub_21CB88B70();
  sub_21CB883D0();
  sub_21CB883D0();
  sub_21CB883D0();
  swift_bridgeObjectRetain();
  sub_21CB883D0();
  swift_bridgeObjectRelease();
  sub_21CB883D0();
  uint64_t v1 = *(void **)(v0 + 16);
  sub_21CB1FC60();
  sub_21CB883D0();
  swift_bridgeObjectRelease();
  sub_21CB883D0();
  objc_msgSend(v1, sel_coordinate);
  sub_21CB88710();
  sub_21CB883D0();
  objc_msgSend(v1, sel_coordinate);
  sub_21CB88710();
  sub_21CB883D0();
  objc_msgSend(v1, sel_horizontalAccuracy);
  sub_21CB88710();
  sub_21CB883D0();
  objc_msgSend(v1, sel_horizontalAccuracy);
  sub_21CB88F00();
  sub_21CB883D0();
  swift_bridgeObjectRelease();
  sub_21CB883D0();
  type metadata accessor for FMReverseGeocodingRequest();
  sub_21CB883D0();
  swift_bridgeObjectRelease();
  sub_21CB883D0();
  sub_21CB883D0();
  swift_bridgeObjectRelease();
  sub_21CB883D0();
  objc_msgSend(v1, sel_referenceFrame);
  sub_21CB88F00();
  sub_21CB883D0();
  swift_bridgeObjectRelease();
  sub_21CB883D0();
  return 0;
}

uint64_t FMReverseGeocodingRequest.identifier.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

id FMReverseGeocodingRequest.location.getter()
{
  return *(id *)(v0 + 16);
}

uint64_t FMReverseGeocodingRequest.locale.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for FMReverseGeocodingRequest() + 24);

  return sub_21CA66BD0(v3, a1);
}

uint64_t FMReverseGeocodingRequest.isRealtimeLocation.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for FMReverseGeocodingRequest() + 28));
}

uint64_t FMReverseGeocodingRequest.isCoarseLocation.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for FMReverseGeocodingRequest() + 32));
}

uint64_t sub_21CB1FC60()
{
  objc_msgSend(v0, sel_coordinate);
  double v2 = round(v1 * 10000.0) / 10000.0;
  objc_msgSend(v0, sel_coordinate);
  double v4 = round(v3 * 10000.0) / 10000.0;
  sub_21CA57E34(&qword_267C97020);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_21CB8E120;
  uint64_t v6 = MEMORY[0x263F8D538];
  uint64_t v7 = MEMORY[0x263F8D5B8];
  *(void *)(v5 + 56) = MEMORY[0x263F8D538];
  *(void *)(v5 + 64) = v7;
  *(double *)(v5 + 32) = v2;
  *(void *)(v5 + 96) = v6;
  *(void *)(v5 + 104) = v7;
  *(double *)(v5 + 72) = v4;
  unsigned int v8 = objc_msgSend(v0, sel_referenceFrame);
  uint64_t v9 = MEMORY[0x263F8E960];
  *(void *)(v5 + 136) = MEMORY[0x263F8E8F8];
  *(void *)(v5 + 144) = v9;
  *(_DWORD *)(v5 + 112) = v8;
  objc_msgSend(v0, sel_horizontalAccuracy);
  if (v10 >= 5.0)
  {
    if (v10 >= 10.0)
    {
      if (v10 >= 25.0)
      {
        uint64_t v11 = 50;
        uint64_t v12 = 100;
        uint64_t v13 = 1000;
        if (v10 < 250.0) {
          uint64_t v13 = 250;
        }
        if (v10 >= 100.0) {
          uint64_t v12 = v13;
        }
        if (v10 >= 50.0) {
          uint64_t v11 = v12;
        }
      }
      else
      {
        uint64_t v11 = 25;
      }
    }
    else
    {
      uint64_t v11 = 10;
    }
  }
  else
  {
    uint64_t v11 = 5;
  }
  uint64_t v14 = MEMORY[0x263F8D750];
  *(void *)(v5 + 176) = MEMORY[0x263F8D6C8];
  *(void *)(v5 + 184) = v14;
  *(void *)(v5 + 152) = v11;

  return sub_21CB88300();
}

uint64_t type metadata accessor for FMReverseGeocodingRequest()
{
  uint64_t result = qword_267C971E0;
  if (!qword_267C971E0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t FMReverseGeocodingRequest.hash(into:)()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_21CB87630();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_21CA57E34(&qword_267C95400);
  MEMORY[0x270FA5388](v6 - 8);
  unsigned int v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  sub_21CB88380();
  swift_bridgeObjectRelease();
  id v9 = *(id *)(v0 + 16);
  sub_21CB88970();

  uint64_t v10 = type metadata accessor for FMReverseGeocodingRequest();
  sub_21CA66BD0(v1 + *(int *)(v10 + 24), (uint64_t)v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v2) == 1)
  {
    sub_21CB89070();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
    sub_21CB89070();
    sub_21CB211E4(&qword_267C971C8, MEMORY[0x263F07690]);
    sub_21CB88270();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  sub_21CB89070();
  return sub_21CB89070();
}

uint64_t FMReverseGeocodingRequest.hashValue.getter()
{
  return sub_21CB89090();
}

uint64_t sub_21CB200D4()
{
  return sub_21CB89090();
}

uint64_t sub_21CB20118()
{
  return sub_21CB89090();
}

uint64_t sub_21CB2015C()
{
  return sub_21CB89090();
}

uint64_t sub_21CB201A4()
{
  return sub_21CB89080();
}

uint64_t sub_21CB201D0()
{
  return sub_21CB89090();
}

uint64_t _s7FMFCore25FMReverseGeocodingRequestV2eeoiySbAC_ACtFZ_0(void *a1, void *a2)
{
  uint64_t v4 = sub_21CB87630();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = &v31[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = sub_21CA57E34(&qword_267C971F0);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = &v31[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = sub_21CA57E34(&qword_267C95400);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v13 = &v31[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = &v31[-v15];
  MEMORY[0x270FA5388](v17);
  id v19 = &v31[-v18];
  if (*a1 == *a2 && a1[1] == a2[1] || (char v20 = sub_21CB88F50(), v21 = 0, (v20 & 1) != 0))
  {
    uint64_t v36 = v13;
    sub_21CA76A54();
    if (sub_21CB88960())
    {
      uint64_t v34 = v7;
      uint64_t v22 = type metadata accessor for FMReverseGeocodingRequest();
      sub_21CA66BD0((uint64_t)a1 + *(int *)(v22 + 24), (uint64_t)v19);
      uint64_t v35 = v22;
      sub_21CA66BD0((uint64_t)a2 + *(int *)(v22 + 24), (uint64_t)v16);
      uint64_t v23 = (uint64_t)&v10[*(int *)(v8 + 48)];
      sub_21CA66BD0((uint64_t)v19, (uint64_t)v10);
      sub_21CA66BD0((uint64_t)v16, v23);
      uint64_t v24 = v5;
      char v25 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
      if (v25((uint64_t)v10, 1, v4) == 1)
      {
        sub_21CA1B88C((uint64_t)v16, &qword_267C95400);
        sub_21CA1B88C((uint64_t)v19, &qword_267C95400);
        if (v25(v23, 1, v4) == 1)
        {
          sub_21CA1B88C((uint64_t)v10, &qword_267C95400);
          goto LABEL_12;
        }
        goto LABEL_10;
      }
      uint64_t v33 = v24;
      uint64_t v26 = (uint64_t)v36;
      sub_21CA66BD0((uint64_t)v10, (uint64_t)v36);
      if (v25(v23, 1, v4) == 1)
      {
        sub_21CA1B88C((uint64_t)v16, &qword_267C95400);
        sub_21CA1B88C((uint64_t)v19, &qword_267C95400);
        (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v26, v4);
LABEL_10:
        sub_21CA1B88C((uint64_t)v10, &qword_267C971F0);
        goto LABEL_13;
      }
      uint64_t v27 = v33;
      unint64_t v28 = v34;
      (*(void (**)(unsigned char *, uint64_t, uint64_t))(v33 + 32))(v34, v23, v4);
      sub_21CB211E4(&qword_267C971F8, MEMORY[0x263F07690]);
      int v32 = sub_21CB882B0();
      char v29 = *(void (**)(unsigned char *, uint64_t))(v27 + 8);
      v29(v28, v4);
      sub_21CA1B88C((uint64_t)v16, &qword_267C95400);
      sub_21CA1B88C((uint64_t)v19, &qword_267C95400);
      v29(v36, v4);
      sub_21CA1B88C((uint64_t)v10, &qword_267C95400);
      if (v32)
      {
LABEL_12:
        if (*((unsigned __int8 *)a1 + *(int *)(v35 + 28)) == *((unsigned __int8 *)a2 + *(int *)(v35 + 28)))
        {
          char v21 = *((unsigned char *)a1 + *(int *)(v35 + 32)) ^ *((unsigned char *)a2 + *(int *)(v35 + 32)) ^ 1;
          return v21 & 1;
        }
      }
    }
LABEL_13:
    char v21 = 0;
  }
  return v21 & 1;
}

uint64_t sub_21CB2066C()
{
  return sub_21CB211E4(&qword_267C971D0, (void (*)(uint64_t))type metadata accessor for FMReverseGeocodingRequest);
}

uint64_t sub_21CB206B4()
{
  return sub_21CB211E4(&qword_267C971D8, type metadata accessor for CLClientLocationReferenceFrame);
}

void *initializeBufferWithCopyOfBuffer for FMReverseGeocodingRequest(void *a1, void *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = (void *)a2[2];
    a1[2] = v8;
    uint64_t v9 = a3[6];
    __dst = (char *)a1 + v9;
    uint64_t v10 = (char *)a2 + v9;
    uint64_t v11 = sub_21CB87630();
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    id v14 = v8;
    if (v13(v10, 1, v11))
    {
      uint64_t v15 = sub_21CA57E34(&qword_267C95400);
      memcpy(__dst, v10, *(void *)(*(void *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(__dst, v10, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(__dst, 0, 1, v11);
    }
    uint64_t v17 = a3[8];
    *((unsigned char *)v4 + a3[7]) = *((unsigned char *)a2 + a3[7]);
    *((unsigned char *)v4 + v17) = *((unsigned char *)a2 + v17);
  }
  return v4;
}

uint64_t destroy for FMReverseGeocodingRequest(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();

  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_21CB87630();
  uint64_t v8 = *(void *)(v5 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v4, 1, v5);
  if (!result)
  {
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(v8 + 8);
    return v7(v4, v5);
  }
  return result;
}

void *initializeWithCopy for FMReverseGeocodingRequest(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = (void *)a2[2];
  a1[2] = v7;
  uint64_t v8 = a3[6];
  __dst = (char *)a1 + v8;
  uint64_t v9 = (char *)a2 + v8;
  uint64_t v10 = sub_21CB87630();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  id v13 = v7;
  if (v12(v9, 1, v10))
  {
    uint64_t v14 = sub_21CA57E34(&qword_267C95400);
    memcpy(__dst, v9, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(__dst, v9, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(__dst, 0, 1, v10);
  }
  uint64_t v15 = a3[8];
  *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
  *((unsigned char *)a1 + v15) = *((unsigned char *)a2 + v15);
  return a1;
}

void *assignWithCopy for FMReverseGeocodingRequest(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = (void *)a2[2];
  uint64_t v7 = (void *)a1[2];
  a1[2] = v6;
  id v8 = v6;

  uint64_t v9 = a3[6];
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = sub_21CB87630();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  int v15 = v14(v10, 1, v12);
  int v16 = v14(v11, 1, v12);
  if (!v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v10, v11, v12);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v12);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    uint64_t v17 = sub_21CA57E34(&qword_267C95400);
    memcpy(v10, v11, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
LABEL_7:
  *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  return a1;
}

uint64_t initializeWithTake for FMReverseGeocodingRequest(uint64_t a1, uint64_t a2, int *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v6 = a3[6];
  uint64_t v7 = (void *)(a1 + v6);
  id v8 = (const void *)(a2 + v6);
  uint64_t v9 = sub_21CB87630();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    uint64_t v11 = sub_21CA57E34(&qword_267C95400);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v12 = a3[8];
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  *(unsigned char *)(a1 + v12) = *(unsigned char *)(a2 + v12);
  return a1;
}

void *assignWithTake for FMReverseGeocodingRequest(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = (void *)a1[2];
  a1[2] = a2[2];

  uint64_t v8 = a3[6];
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = sub_21CB87630();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48);
  int v14 = v13(v9, 1, v11);
  int v15 = v13(v10, 1, v11);
  if (!v14)
  {
    if (!v15)
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 40))(v9, v10, v11);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v9, v11);
    goto LABEL_6;
  }
  if (v15)
  {
LABEL_6:
    uint64_t v16 = sub_21CA57E34(&qword_267C95400);
    memcpy(v9, v10, *(void *)(*(void *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
LABEL_7:
  uint64_t v17 = a3[8];
  *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
  *((unsigned char *)a1 + v17) = *((unsigned char *)a2 + v17);
  return a1;
}

uint64_t getEnumTagSinglePayload for FMReverseGeocodingRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_21CB20FC0);
}

uint64_t sub_21CB20FC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_21CA57E34(&qword_267C95400);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for FMReverseGeocodingRequest(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_21CB21088);
}

uint64_t sub_21CB21088(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_21CA57E34(&qword_267C95400);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_21CB21134()
{
  sub_21CA056B0();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_21CB211E4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

BOOL sub_21CB2122C(uint64_t a1, uint64_t a2)
{
  return (a1 & ~a2) == 0;
}

uint64_t sub_21CB21238(uint64_t a1, uint64_t a2)
{
  *(void *)(swift_allocObject() + 16) = a2;
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v31 = v4;
  if (v4)
  {
    unint64_t v6 = 0;
    uint64_t v29 = a1 + 32;
    uint64_t v7 = a2 + 56;
    uint64_t v28 = MEMORY[0x263F8EE78];
    uint64_t v30 = a1;
    while (1)
    {
      unint64_t v8 = v6;
      while (1)
      {
        if (v8 >= *(void *)(a1 + 16))
        {
          __break(1u);
          return result;
        }
        unint64_t v6 = v8 + 1;
        if (*(void *)(a2 + 16)) {
          break;
        }
LABEL_5:
        unint64_t v8 = v6;
        if (v6 == v31) {
          goto LABEL_29;
        }
      }
      uint64_t v9 = (uint64_t *)(v29 + 16 * v8);
      uint64_t v11 = *v9;
      uint64_t v10 = v9[1];
      sub_21CB89050();
      swift_bridgeObjectRetain();
      sub_21CB88380();
      uint64_t v12 = sub_21CB89090();
      uint64_t v13 = -1 << *(unsigned char *)(a2 + 32);
      unint64_t v14 = v12 & ~v13;
      if (((*(void *)(v7 + ((v14 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v14) & 1) == 0) {
        goto LABEL_4;
      }
      uint64_t v15 = *(void *)(a2 + 48);
      uint64_t v16 = (void *)(v15 + 16 * v14);
      BOOL v17 = *v16 == v11 && v16[1] == v10;
      if (!v17 && (sub_21CB88F50() & 1) == 0) {
        break;
      }
LABEL_22:
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v23 = v28;
      if ((result & 1) == 0)
      {
        uint64_t result = sub_21CA45524(0, *(void *)(v28 + 16) + 1, 1);
        uint64_t v23 = v28;
      }
      a1 = v30;
      uint64_t v24 = v23;
      unint64_t v26 = *(void *)(v23 + 16);
      unint64_t v25 = *(void *)(v23 + 24);
      if (v26 >= v25 >> 1)
      {
        uint64_t result = sub_21CA45524(v25 > 1, v26 + 1, 1);
        uint64_t v24 = v28;
      }
      *(void *)(v24 + 16) = v26 + 1;
      uint64_t v28 = v24;
      uint64_t v27 = v24 + 16 * v26;
      *(void *)(v27 + 32) = v11;
      *(void *)(v27 + 40) = v10;
      if (v6 == v31) {
        goto LABEL_29;
      }
    }
    uint64_t v18 = ~v13;
    for (unint64_t i = v14 + 1; ; unint64_t i = v20 + 1)
    {
      uint64_t v20 = i & v18;
      if (((*(void *)(v7 + (((i & v18) >> 3) & 0xFFFFFFFFFFFFFF8)) >> (i & v18)) & 1) == 0) {
        break;
      }
      char v21 = (void *)(v15 + 16 * v20);
      BOOL v22 = *v21 == v11 && v21[1] == v10;
      if (v22 || (sub_21CB88F50() & 1) != 0) {
        goto LABEL_22;
      }
    }
LABEL_4:
    uint64_t result = swift_bridgeObjectRelease();
    a1 = v30;
    goto LABEL_5;
  }
  uint64_t v28 = MEMORY[0x263F8EE78];
LABEL_29:
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return v28;
}

uint64_t sub_21CB214A8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  *(void *)(swift_allocObject() + 16) = a2;
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v26 = v4;
  if (v4)
  {
    unint64_t v6 = 0;
    uint64_t v23 = (void *)(v2 + 56);
    uint64_t v24 = a1 + 32;
    uint64_t v7 = MEMORY[0x263F8EE78];
    uint64_t v25 = a1;
    while (1)
    {
      if (v6 >= *(void *)(a1 + 16))
      {
LABEL_30:
        __break(1u);
        return result;
      }
      uint64_t v9 = v6++;
      uint64_t v10 = v2;
      uint64_t v11 = *(void *)(v2 + 16);
      if (v11)
      {
        uint64_t v12 = (uint64_t *)(v24 + 16 * v9);
        uint64_t v13 = *v12;
        uint64_t v14 = v12[1];
        BOOL v15 = *(void *)(v10 + 32) == *v12 && *(void *)(v10 + 40) == v14;
        if (v15 || (uint64_t result = sub_21CB88F50(), (result & 1) != 0))
        {
LABEL_22:
          swift_bridgeObjectRetain();
          uint64_t result = swift_isUniquelyReferenced_nonNull_native();
          if ((result & 1) == 0) {
            uint64_t result = sub_21CA45524(0, *(void *)(v7 + 16) + 1, 1);
          }
          a1 = v25;
          unint64_t v21 = *(void *)(v7 + 16);
          unint64_t v20 = *(void *)(v7 + 24);
          if (v21 >= v20 >> 1) {
            uint64_t result = sub_21CA45524(v20 > 1, v21 + 1, 1);
          }
          *(void *)(v7 + 16) = v21 + 1;
          uint64_t v22 = v7 + 16 * v21;
          *(void *)(v22 + 32) = v13;
          *(void *)(v22 + 40) = v14;
          uint64_t v8 = v26;
          goto LABEL_4;
        }
        if (v11 != 1)
        {
          uint64_t v16 = v23;
          uint64_t v17 = 1;
          while (1)
          {
            uint64_t v18 = v17 + 1;
            if (__OFADD__(v17, 1)) {
              break;
            }
            if (*(v16 - 1) == v13 && *v16 == v14) {
              goto LABEL_22;
            }
            uint64_t result = sub_21CB88F50();
            if (result) {
              goto LABEL_22;
            }
            v16 += 2;
            ++v17;
            if (v18 == v11) {
              goto LABEL_3;
            }
          }
          __break(1u);
          goto LABEL_30;
        }
      }
LABEL_3:
      a1 = v25;
      uint64_t v8 = v26;
LABEL_4:
      uint64_t v2 = v10;
      if (v6 == v8) {
        goto LABEL_28;
      }
    }
  }
  uint64_t v7 = MEMORY[0x263F8EE78];
LABEL_28:
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t (*sub_21CB216A8())()
{
  return j__swift_endAccess;
}

uint64_t sub_21CB216FC()
{
  uint64_t v1 = v0;
  if (qword_267C94990 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_21CB880A0();
  sub_21CA4CC18(v2, (uint64_t)qword_267CA5368);
  swift_retain_n();
  uint64_t v3 = sub_21CB88070();
  os_log_type_t v4 = sub_21CB88880();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v19 = swift_slowAlloc();
    uint64_t v20 = v19;
    *(_DWORD *)uint64_t v5 = 136315138;
    uint64_t v6 = *(void *)(v1 + 16);
    unint64_t v7 = *(void *)(v1 + 24);
    swift_bridgeObjectRetain();
    unint64_t v8 = sub_21CA30E24(0xCuLL, v6, v7);
    uint64_t v10 = v9;
    uint64_t v12 = v11;
    uint64_t v14 = v13;
    swift_bridgeObjectRelease();
    uint64_t v15 = MEMORY[0x21D4B5450](v8, v10, v12, v14);
    unint64_t v17 = v16;
    swift_bridgeObjectRelease();
    sub_21CA4E450(v15, v17, &v20);
    sub_21CB889C0();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_21CA00000, v3, v4, "FMFDataManager<%s>.deinit", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x21D4B6B70](v19, -1, -1);
    MEMORY[0x21D4B6B70](v5, -1, -1);
  }
  else
  {

    swift_release_n();
  }
  swift_bridgeObjectRelease();
  sub_21CA640FC(v1 + 32);
  swift_release();

  sub_21CA1B88C(v1 + 72, &qword_267C97208);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  sub_21CA59D84(*(void *)(v1 + 744), *(void *)(v1 + 752), *(void *)(v1 + 760));
  sub_21CA2D658(*(void *)(v1 + 1032));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_21CB21A54()
{
  sub_21CB216FC();

  return swift_deallocClassInstance();
}

uint64_t sub_21CB21A88@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  char v2 = *(unsigned char *)(result + 784);
  *(void *)a2 = *(void *)(result + 776);
  *(unsigned char *)(a2 + 8) = v2;
  return result;
}

uint64_t sub_21CB21AA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_21CA26A4C(a1 + 792, (uint64_t)v4, (uint64_t *)&unk_267C96EE0);
  return sub_21CA26A4C((uint64_t)v4, a2, (uint64_t *)&unk_267C96EE0);
}

uint64_t sub_21CB21B00@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 536);
  uint64_t v4 = *(void *)(v3 + 72);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v3 + 80);
  uint64_t v7 = *(void *)(v3 + 88);
  uint64_t v8 = *(void *)(v3 + 96);
  uint64_t v9 = *(void *)(v3 + 104);
  uint64_t v10 = *(void *)(v3 + 112);
  uint64_t v11 = *(void *)(v3 + 120);
  char v12 = *(unsigned char *)(v3 + 128);
  if (!v4)
  {
    uint64_t v14 = *(void *)(a1 + 1032);
    uint64_t v6 = *(void *)(a1 + 1040);
    uint64_t v7 = *(void *)(a1 + 1048);
    uint64_t v8 = *(void *)(a1 + 1056);
    uint64_t v9 = *(void *)(a1 + 1064);
    uint64_t v10 = *(void *)(a1 + 1072);
    uint64_t v11 = *(void *)(a1 + 1080);
    char v12 = *(unsigned char *)(a1 + 1088);
    sub_21CA2D5F4(v14);
    uint64_t v5 = v14;
  }
  *(void *)a2 = v5;
  *(void *)(a2 + 8) = v6;
  *(void *)(a2 + 16) = v7;
  *(void *)(a2 + 24) = v8;
  *(void *)(a2 + 32) = v9;
  *(void *)(a2 + 40) = v10;
  *(void *)(a2 + 48) = v11;
  *(unsigned char *)(a2 + 56) = v12;
  return sub_21CA2D5F4(v4);
}

uint64_t sub_21CB21C0C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(a1 + 1096);
  return swift_bridgeObjectRetain();
}

uint64_t sub_21CB21C2C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(a1 + 1104);
  return swift_bridgeObjectRetain();
}

uint64_t sub_21CB21C4C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(a1 + 1112);
  return swift_bridgeObjectRetain();
}

uint64_t sub_21CB21C6C@<X0>(size_t *a1@<X8>)
{
  swift_beginAccess();
  uint64_t v2 = swift_bridgeObjectRetain();
  size_t v3 = sub_21CA27D10(v2);
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v3;
  return result;
}

uint64_t sub_21CB21CDC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_21CA57E34(&qword_267C96F10);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for FMFFriend();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v11 = (uint64_t *)((char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v21 - v12;
  sub_21CA57E34(&qword_267C95D50);
  sub_21CB88910();
  uint64_t v14 = *(void *)(v23 + 16);
  if (v14)
  {
    uint64_t v22 = v13;
    uint64_t v15 = v23 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    uint64_t v16 = *(void *)(v8 + 72);
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_21CA571E8(v15, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for FMFFriend);
      BOOL v17 = *v11 == a1 && v11[1] == a2;
      if (v17 || (sub_21CB88F50() & 1) != 0) {
        break;
      }
      sub_21CA57050((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for FMFFriend);
      v15 += v16;
      if (!--v14)
      {
        swift_bridgeObjectRelease();
        uint64_t v18 = 1;
        uint64_t v13 = v22;
        goto LABEL_12;
      }
    }
    swift_bridgeObjectRelease();
    sub_21CA591A4((uint64_t)v11, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FMFFriend);
    uint64_t v18 = 0;
    uint64_t v13 = v22;
  }
  else
  {
    uint64_t v18 = 1;
  }
LABEL_12:
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, v18, 1, v7);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_21CA1B88C((uint64_t)v6, &qword_267C96F10);
    return 0;
  }
  else
  {
    sub_21CA591A4((uint64_t)v6, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for FMFFriend);
    uint64_t v19 = *((void *)v13 + 5);
    swift_bridgeObjectRetain();
    sub_21CA57050((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for FMFFriend);
  }
  return v19;
}

void *sub_21CB21FD8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for FMFFriend();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v5 = (void *)((char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_21CA57E34(&qword_267C95D50);
  sub_21CB88910();
  uint64_t v6 = v23;
  int64_t v7 = *(void *)(v23 + 16);
  if (v7)
  {
    v22[1] = a1;
    uint64_t v23 = MEMORY[0x263F8EE78];
    sub_21CA45524(0, v7, 0);
    uint64_t v8 = v6 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    uint64_t v9 = *(void *)(v3 + 72);
    uint64_t v10 = v23;
    do
    {
      sub_21CA571E8(v8, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for FMFFriend);
      uint64_t v12 = *v5;
      uint64_t v11 = v5[1];
      swift_bridgeObjectRetain();
      sub_21CA57050((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for FMFFriend);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_21CA45524(0, *(void *)(v10 + 16) + 1, 1);
        uint64_t v10 = v23;
      }
      unint64_t v14 = *(void *)(v10 + 16);
      unint64_t v13 = *(void *)(v10 + 24);
      if (v14 >= v13 >> 1)
      {
        sub_21CA45524(v13 > 1, v14 + 1, 1);
        uint64_t v10 = v23;
      }
      *(void *)(v10 + 16) = v14 + 1;
      uint64_t v15 = v10 + 16 * v14;
      *(void *)(v15 + 32) = v12;
      *(void *)(v15 + 40) = v11;
      v8 += v9;
      --v7;
    }
    while (v7);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v10 = MEMORY[0x263F8EE78];
  }
  uint64_t v16 = sub_21CA5893C(v10);
  swift_bridgeObjectRelease();
  uint64_t v17 = swift_bridgeObjectRetain();
  uint64_t v18 = sub_21CA5893C(v17);
  swift_bridgeObjectRelease();
  uint64_t v19 = sub_21CB4C3A0(v16, v18);
  swift_bridgeObjectRelease();
  uint64_t v20 = sub_21CA4D61C(v19);
  swift_release();
  return v20;
}

BOOL sub_21CB2224C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_21CA57E34((uint64_t *)&unk_267C96EF0);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_21CA57E34(&qword_267C96F10);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for FMFFriend();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  unint64_t v14 = (char **)((char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v12);
  uint64_t v26 = (uint64_t)&v25 - v15;
  sub_21CA57E34(&qword_267C95D50);
  sub_21CB88910();
  uint64_t v16 = *(void *)(v27 + 16);
  if (v16)
  {
    uint64_t v25 = v6;
    uint64_t v17 = v27 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
    uint64_t v18 = *(void *)(v11 + 72);
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_21CA571E8(v17, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for FMFFriend);
      BOOL v19 = *v14 == a1 && v14[1] == a2;
      if (v19 || (sub_21CB88F50() & 1) != 0) {
        break;
      }
      sub_21CA57050((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for FMFFriend);
      v17 += v18;
      if (!--v16)
      {
        swift_bridgeObjectRelease();
        uint64_t v20 = 1;
        uint64_t v6 = v25;
        goto LABEL_12;
      }
    }
    swift_bridgeObjectRelease();
    sub_21CA591A4((uint64_t)v14, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for FMFFriend);
    uint64_t v20 = 0;
    uint64_t v6 = v25;
  }
  else
  {
    uint64_t v20 = 1;
  }
LABEL_12:
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v9, v20, 1, v10);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
    sub_21CA1B88C((uint64_t)v9, &qword_267C96F10);
    return 0;
  }
  else
  {
    uint64_t v22 = v26;
    sub_21CA591A4((uint64_t)v9, v26, (uint64_t (*)(void))type metadata accessor for FMFFriend);
    sub_21CA24E80(v22 + *(int *)(v10 + 80), (uint64_t)v6, (uint64_t *)&unk_267C96EF0);
    sub_21CA57050(v22, (uint64_t (*)(void))type metadata accessor for FMFFriend);
    uint64_t v23 = type metadata accessor for FMFLocation();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v23 - 8) + 48))(v6, 1, v23) == 1)
    {
      sub_21CA1B88C((uint64_t)v6, (uint64_t *)&unk_267C96EF0);
      return 1;
    }
    else
    {
      int v24 = v6[33];
      sub_21CA57050((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FMFLocation);
      return v24 != 3;
    }
  }
}

void sub_21CB22624(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v6 = *(void *)(a2 + 552);
  swift_bridgeObjectRetain();
  char v7 = sub_21CA6253C(a1, v6);
  swift_bridgeObjectRelease();
  if (v7)
  {
    char v8 = 0;
  }
  else
  {
    *(void *)(a2 + 576) = 0;
    swift_bridgeObjectRelease();
    *(void *)(a2 + 552) = a1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    sub_21CA2D15C();
    char v8 = 1;
  }
  *a3 = v8;
}

void sub_21CB226C4(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v6 = *(void *)(a2 + 560);
  swift_bridgeObjectRetain();
  char v7 = sub_21CA6253C(a1, v6);
  swift_bridgeObjectRelease();
  if (v7)
  {
    char v8 = 0;
  }
  else
  {
    *(void *)(a2 + 576) = 0;
    swift_bridgeObjectRelease();
    *(void *)(a2 + 560) = a1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    sub_21CA2D15C();
    char v8 = 1;
  }
  *a3 = v8;
}

void sub_21CB22764(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v6 = *(void *)(a2 + 568);
  swift_bridgeObjectRetain();
  char v7 = sub_21CA6253C(a1, v6);
  swift_bridgeObjectRelease();
  if (v7)
  {
    char v8 = 0;
  }
  else
  {
    *(void *)(a2 + 576) = 0;
    swift_bridgeObjectRelease();
    *(void *)(a2 + 568) = a1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    sub_21CA2D15C();
    char v8 = 1;
  }
  *a3 = v8;
}

void sub_21CB22804(uint64_t a1@<X0>, void *a2@<X1>, char *a3@<X8>)
{
  uint64_t v6 = a2[82];
  swift_bridgeObjectRetain();
  char v7 = sub_21CA07990(a1, v6);
  swift_bridgeObjectRelease();
  if (v7)
  {
    char v8 = 0;
  }
  else
  {
    a2[86] = 0;
    swift_bridgeObjectRelease();
    a2[72] = 0;
    swift_bridgeObjectRelease();
    a2[82] = a1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    sub_21CA2D15C();
    char v8 = 1;
  }
  *a3 = v8;
}

void sub_21CB228B0(uint64_t a1@<X0>, void *a2@<X1>, char *a3@<X8>)
{
  uint64_t v6 = a2[83];
  swift_bridgeObjectRetain();
  char v7 = sub_21CA07990(a1, v6);
  swift_bridgeObjectRelease();
  if (v7)
  {
    char v8 = 0;
  }
  else
  {
    a2[86] = 0;
    swift_bridgeObjectRelease();
    a2[72] = 0;
    swift_bridgeObjectRelease();
    a2[83] = a1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    sub_21CA2D15C();
    char v8 = 1;
  }
  *a3 = v8;
}

uint64_t sub_21CB2295C(uint64_t a1)
{
  sub_21CA57E34(&qword_267C95D50);
  sub_21CB88910();
  uint64_t v2 = v12;
  uint64_t v12 = 91;
  unint64_t v13 = 0xE100000000000000;
  char v11 = 1;
  if (a1 && (uint64_t v3 = *(void *)(a1 + 16)) != 0)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = (unint64_t *)(a1 + 40);
    do
    {
      unint64_t v5 = *v4;
      uint64_t v9 = *(v4 - 1);
      unint64_t v10 = v5;
      swift_bridgeObjectRetain();
      sub_21CB22A88(&v9, v2, (uint64_t)&v12, &v11);
      swift_bridgeObjectRelease();
      v4 += 2;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v6 = v12;
    unint64_t v7 = v13;
  }
  else
  {
    swift_bridgeObjectRelease();
    unint64_t v7 = 0xE100000000000000;
    uint64_t v6 = 91;
  }
  uint64_t v9 = v6;
  unint64_t v10 = v7;
  swift_bridgeObjectRetain();
  sub_21CB883D0();
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t sub_21CB22A88(uint64_t *a1, uint64_t a2, uint64_t a3, unsigned char *a4)
{
  uint64_t v43 = a4;
  uint64_t v8 = type metadata accessor for FMFFriend();
  uint64_t v9 = MEMORY[0x270FA5388](v8);
  char v11 = (void *)((char *)v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = MEMORY[0x270FA5388](v9);
  unint64_t v14 = (char *)v38 - v13;
  uint64_t result = MEMORY[0x270FA5388](v12);
  unint64_t v18 = a1[1];
  if (v18)
  {
    uint64_t v39 = (uint64_t)v38 - v17;
    uint64_t v40 = a3;
    uint64_t v19 = *a1;
    uint64_t v20 = *(void *)(a2 + 16);
    if (v20)
    {
      v38[1] = v4;
      uint64_t v21 = a2 + ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80));
      uint64_t v22 = *(void *)(v16 + 72);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      while (1)
      {
        sub_21CA571E8(v21, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for FMFFriend);
        BOOL v23 = v19 == *v11 && v18 == v11[1];
        if (v23 || (sub_21CB88F50() & 1) != 0) {
          break;
        }
        sub_21CA57050((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for FMFFriend);
        v21 += v22;
        if (!--v20)
        {
          swift_bridgeObjectRelease();
          goto LABEL_23;
        }
      }
      swift_bridgeObjectRelease();
      sub_21CA591A4((uint64_t)v11, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for FMFFriend);
      uint64_t v24 = (uint64_t)v14;
      uint64_t v25 = v39;
      sub_21CA591A4(v24, v39, (uint64_t (*)(void))type metadata accessor for FMFFriend);
      if (*v43) {
        uint64_t v26 = 0;
      }
      else {
        uint64_t v26 = 8236;
      }
      if (*v43) {
        unint64_t v27 = 0xE000000000000000;
      }
      else {
        unint64_t v27 = 0xE200000000000000;
      }
      uint64_t v41 = v19;
      unint64_t v42 = v18;
      uint64_t v28 = v25;
      sub_21CB88480();
      uint64_t v41 = v26;
      unint64_t v42 = v27;
      swift_bridgeObjectRetain();
      sub_21CB883D0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_21CB883D0();
      swift_bridgeObjectRelease();
      uint64_t v30 = v41;
      unint64_t v29 = v42;
      uint64_t v31 = (void *)(v25 + *(int *)(v8 + 76));
      if (v31[1])
      {
        uint64_t v32 = v31[5];
        unint64_t v33 = v31[6];
        uint64_t v34 = HIBYTE(v33) & 0xF;
        if ((v33 & 0x2000000000000000) == 0) {
          uint64_t v34 = v32 & 0xFFFFFFFFFFFFLL;
        }
        if (v34) {
          swift_bridgeObjectRetain();
        }
      }
      uint64_t v35 = v43;
      uint64_t v41 = v30;
      unint64_t v42 = v29;
      swift_bridgeObjectRetain();
      sub_21CB883D0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_21CB883D0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_21CB883D0();
      swift_bridgeObjectRelease();
      uint64_t result = sub_21CA57050(v28, (uint64_t (*)(void))type metadata accessor for FMFFriend);
    }
    else
    {
      swift_bridgeObjectRetain();
LABEL_23:
      uint64_t v35 = v43;
      if (*v43) {
        uint64_t v36 = 0;
      }
      else {
        uint64_t v36 = 8236;
      }
      if (*v43) {
        unint64_t v37 = 0xE000000000000000;
      }
      else {
        unint64_t v37 = 0xE200000000000000;
      }
      uint64_t v41 = v19;
      unint64_t v42 = v18;
      sub_21CB88480();
      uint64_t v41 = v36;
      unint64_t v42 = v37;
      swift_bridgeObjectRetain();
      sub_21CB883D0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_21CB883D0();
      uint64_t result = swift_bridgeObjectRelease();
    }
    unsigned char *v35 = 0;
  }
  return result;
}

uint64_t sub_21CB22ED0@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = type metadata accessor for FMFLocation();
  uint64_t v8 = *(void *)(v7 - 8);
  __n128 v9 = MEMORY[0x270FA5388](v7);
  char v11 = (uint64_t *)((char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v20 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v8 + 56);
  v20(a3, 1, 1, v7, v9);
  uint64_t result = swift_beginAccess();
  uint64_t v13 = *(void *)(a1 + 632);
  if (v13)
  {
    uint64_t v14 = *(void *)(v13 + 16);
    if (v14)
    {
      uint64_t v19 = v3;
      uint64_t v15 = v13 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
      uint64_t v16 = *(void *)(v8 + 72);
      swift_bridgeObjectRetain();
      do
      {
        sub_21CA571E8(v15, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for FMFLocation);
        uint64_t v17 = v11[1];
        if (v17)
        {
          BOOL v18 = *v11 == *a2 && v17 == a2[1];
          if (v18 || (sub_21CB88F50() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            sub_21CA1B88C(a3, (uint64_t *)&unk_267C96EF0);
            sub_21CA591A4((uint64_t)v11, a3, (uint64_t (*)(void))type metadata accessor for FMFLocation);
            return ((uint64_t (*)(uint64_t, void, uint64_t, uint64_t))v20)(a3, 0, 1, v7);
          }
        }
        sub_21CA57050((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for FMFLocation);
        v15 += v16;
        --v14;
      }
      while (v14);
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t sub_21CB230E8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_21CB88100();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  __n128 v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_21CB88150();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = *(void *)(v3 + 56);
  uint64_t v14 = (void *)swift_allocObject();
  _OWORD v14[2] = v3;
  v14[3] = a1;
  v14[4] = a2;
  aBlock[4] = sub_21CB2B5E4;
  void aBlock[5] = v14;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_21CA1B084;
  uint64_t aBlock[3] = &unk_26CD6EE10;
  uint64_t v15 = _Block_copy(aBlock);
  swift_retain();
  swift_bridgeObjectRetain();
  sub_21CB88120();
  v17[1] = MEMORY[0x263F8EE78];
  sub_21CA36540((unint64_t *)&qword_267C96FC0, MEMORY[0x263F8F030]);
  sub_21CA57E34((uint64_t *)&unk_267C96DD0);
  sub_21CA356BC((unint64_t *)&qword_267C96FD0, (uint64_t *)&unk_267C96DD0);
  sub_21CB88A60();
  MEMORY[0x21D4B5A20](0, v13, v9, v15);
  _Block_release(v15);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  return swift_release();
}

uint64_t sub_21CB233BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_21CB88100();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  __n128 v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_21CB88150();
  uint64_t v24 = *(void *)(v10 - 8);
  uint64_t v25 = v10;
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  uint64_t v13 = sub_21CB2B7D8((unint64_t *)(a1 + 616), a2, a3);
  uint64_t result = swift_bridgeObjectRelease();
  int64_t v15 = *(void *)(*(void *)(a1 + 616) + 16);
  if (v15 < v13)
  {
    __break(1u);
  }
  else
  {
    uint64_t v23 = v7;
    sub_21CB2B5F0(v13, v15);
    swift_endAccess();
    uint64_t v17 = sub_21CB216A8();
    if (!*v16)
    {
      ((void (*)(void *, void))v17)(aBlock, 0);
      goto LABEL_6;
    }
    BOOL v18 = v16;
    swift_bridgeObjectRetain();
    uint64_t v19 = sub_21CB2B7D8(v18, a2, a3);
    uint64_t result = swift_bridgeObjectRelease();
    int64_t v20 = *(void *)(*v18 + 16);
    if (v20 >= v19)
    {
      sub_21CB2B5F0(v19, v20);
      ((void (*)(void *, void))v17)(aBlock, 0);
LABEL_6:
      aBlock[4] = sub_21CB2A5C4;
      void aBlock[5] = a1;
      aBlock[0] = MEMORY[0x263EF8330];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_21CA1B084;
      uint64_t aBlock[3] = &unk_26CD6EE38;
      uint64_t v21 = _Block_copy(aBlock);
      swift_retain();
      sub_21CB88120();
      uint64_t v26 = MEMORY[0x263F8EE78];
      sub_21CA36540((unint64_t *)&qword_267C96FC0, MEMORY[0x263F8F030]);
      sub_21CA57E34((uint64_t *)&unk_267C96DD0);
      sub_21CA356BC((unint64_t *)&qword_267C96FD0, (uint64_t *)&unk_267C96DD0);
      sub_21CB88A60();
      MEMORY[0x21D4B5A20](0, v12, v9, v21);
      _Block_release(v21);
      (*(void (**)(char *, uint64_t))(v23 + 8))(v9, v6);
      (*(void (**)(char *, uint64_t))(v24 + 8))(v12, v25);
      return swift_release();
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_21CB23760@<X0>(uint64_t a1@<X0>, void *a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t v7 = sub_21CB88100();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v76 = (char *)&v67 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v77 = sub_21CB88150();
  uint64_t v75 = *(void *)(v77 - 8);
  MEMORY[0x270FA5388](v77);
  uint64_t v74 = (char *)&v67 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = a2[74];
  swift_bridgeObjectRetain();
  char v12 = sub_21CA3A47C(a1, v11);
  uint64_t result = swift_bridgeObjectRelease();
  if (v12)
  {
    *a3 = 0;
    return result;
  }
  uint64_t v69 = v7;
  os_log_type_t v70 = a3;
  uint64_t v71 = v3;
  a2[72] = 0;
  swift_bridgeObjectRelease();
  a2[78] = 0;
  swift_bridgeObjectRelease();
  uint64_t v14 = *(void *)(a1 + 16);
  uint64_t v72 = a2;
  uint64_t v73 = v8;
  if (v14)
  {
    swift_bridgeObjectRetain();
    uint64_t v68 = a1;
    int64_t v15 = (unsigned char *)(a1 + 48);
    uint64_t v16 = (void *)MEMORY[0x263F8EE80];
    while (1)
    {
      uint64_t v20 = *((void *)v15 - 2);
      uint64_t v19 = *((void *)v15 - 1);
      char v21 = *v15;
      swift_bridgeObjectRetain_n();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      aBlock[0] = v16;
      unint64_t v24 = sub_21CA5BCE0(v20, v19);
      uint64_t v25 = v16[2];
      BOOL v26 = (v23 & 1) == 0;
      uint64_t v27 = v25 + v26;
      if (__OFADD__(v25, v26))
      {
        __break(1u);
LABEL_43:
        __break(1u);
LABEL_44:
        uint64_t result = sub_21CB88FA0();
        __break(1u);
        return result;
      }
      char v28 = v23;
      if (v16[3] >= v27)
      {
        if (isUniquelyReferenced_nonNull_native)
        {
          uint64_t v16 = (void *)aBlock[0];
          if ((v23 & 1) == 0) {
            goto LABEL_14;
          }
        }
        else
        {
          sub_21CB85918();
          uint64_t v16 = (void *)aBlock[0];
          if ((v28 & 1) == 0) {
            goto LABEL_14;
          }
        }
      }
      else
      {
        sub_21CA3A42C(v27, isUniquelyReferenced_nonNull_native);
        unint64_t v29 = sub_21CA5BCE0(v20, v19);
        if ((v28 & 1) != (v30 & 1)) {
          goto LABEL_44;
        }
        unint64_t v24 = v29;
        uint64_t v16 = (void *)aBlock[0];
        if ((v28 & 1) == 0)
        {
LABEL_14:
          v16[(v24 >> 6) + 8] |= 1 << v24;
          uint64_t v31 = (uint64_t *)(v16[6] + 16 * v24);
          *uint64_t v31 = v20;
          v31[1] = v19;
          uint64_t v32 = v16[7] + 24 * v24;
          *(void *)uint64_t v32 = v20;
          *(void *)(v32 + 8) = v19;
          *(unsigned char *)(v32 + 16) = v21;
          uint64_t v33 = v16[2];
          BOOL v34 = __OFADD__(v33, 1);
          uint64_t v35 = v33 + 1;
          if (v34) {
            goto LABEL_43;
          }
          void v16[2] = v35;
          swift_bridgeObjectRetain();
          goto LABEL_6;
        }
      }
      uint64_t v17 = v16;
      uint64_t v18 = v16[7] + 24 * v24;
      swift_bridgeObjectRelease();
      *(void *)uint64_t v18 = v20;
      *(void *)(v18 + 8) = v19;
      *(unsigned char *)(v18 + 16) = v21;
      uint64_t v16 = v17;
LABEL_6:
      v15 += 24;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (!--v14)
      {
        swift_bridgeObjectRelease();
        uint64_t v36 = v72;
        uint64_t v8 = v73;
        goto LABEL_20;
      }
    }
  }
  uint64_t v36 = a2;
  uint64_t v16 = (void *)MEMORY[0x263F8EE80];
LABEL_20:
  uint64_t v37 = MEMORY[0x263F8EE78];
  uint64_t v80 = (void *)MEMORY[0x263F8EE78];
  uint64_t v38 = *(void *)(v36[74] + 16);
  if (!v38) {
    goto LABEL_41;
  }
  uint64_t v68 = swift_bridgeObjectRetain();
  uint64_t v39 = (unsigned char *)(v68 + 48);
  uint64_t v40 = (void *)MEMORY[0x263F8EE78];
  do
  {
    uint64_t v42 = *((void *)v39 - 2);
    uint64_t v41 = *((void *)v39 - 1);
    char v43 = *v39;
    uint64_t v44 = v16[2];
    swift_bridgeObjectRetain();
    if (v44)
    {
      swift_bridgeObjectRetain();
      unint64_t v45 = sub_21CA5BCE0(v42, v41);
      if (v46)
      {
        uint64_t v47 = v16;
        uint64_t v48 = v16[7] + 24 * v45;
        uint64_t v49 = *(void *)v48;
        uint64_t v50 = *(void *)(v48 + 8);
        char v51 = *(unsigned char *)(v48 + 16);
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRelease_n();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v40 = sub_21CA3A438(0, v40[2] + 1, 1, v40);
        }
        unint64_t v53 = v40[2];
        unint64_t v52 = v40[3];
        if (v53 >= v52 >> 1) {
          uint64_t v40 = sub_21CA3A438((void *)(v52 > 1), v53 + 1, 1, v40);
        }
        v40[2] = v53 + 1;
        uint64_t v54 = &v40[3 * v53];
        v54[4] = v49;
        v54[5] = v50;
        *((unsigned char *)v54 + 48) = v51;
        uint64_t v80 = v40;
        os_log_type_t v55 = v47;
        swift_bridgeObjectRetain();
        unint64_t v56 = sub_21CA5BCE0(v49, v50);
        char v58 = v57;
        swift_bridgeObjectRelease();
        if (v58)
        {
          char v59 = swift_isUniquelyReferenced_nonNull_native();
          aBlock[0] = v47;
          if ((v59 & 1) == 0)
          {
            sub_21CB85918();
            os_log_type_t v55 = (void *)aBlock[0];
          }
          swift_bridgeObjectRelease();
          uint64_t v47 = v55;
          sub_21CA3A428(v56, v55);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        swift_bridgeObjectRelease();
        goto LABEL_23;
      }
      swift_bridgeObjectRelease();
    }
    uint64_t v47 = v16;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v40 = sub_21CA3A438(0, v40[2] + 1, 1, v40);
    }
    unint64_t v61 = v40[2];
    unint64_t v60 = v40[3];
    if (v61 >= v60 >> 1) {
      uint64_t v40 = sub_21CA3A438((void *)(v60 > 1), v61 + 1, 1, v40);
    }
    v40[2] = v61 + 1;
    uint64_t v62 = &v40[3 * v61];
    v62[4] = v42;
    v62[5] = v41;
    *((unsigned char *)v62 + 48) = v43;
    uint64_t v80 = v40;
LABEL_23:
    v39 += 24;
    --v38;
    uint64_t v16 = v47;
  }
  while (v38);
  swift_bridgeObjectRelease();
  uint64_t v36 = v72;
  uint64_t v8 = v73;
  uint64_t v37 = MEMORY[0x263F8EE78];
LABEL_41:
  swift_bridgeObjectRetain();
  sub_21CA3A6E0((uint64_t)v16);
  v36[74] = v80;
  swift_bridgeObjectRelease();
  aBlock[4] = sub_21CB2A580;
  void aBlock[5] = v36;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_21CA1B084;
  uint64_t aBlock[3] = &unk_26CD6E708;
  os_log_type_t v63 = _Block_copy(aBlock);
  swift_retain();
  uint64_t v64 = v74;
  sub_21CB88120();
  uint64_t v78 = v37;
  sub_21CA36540((unint64_t *)&qword_267C96FC0, MEMORY[0x263F8F030]);
  sub_21CA57E34((uint64_t *)&unk_267C96DD0);
  sub_21CA356BC((unint64_t *)&qword_267C96FD0, (uint64_t *)&unk_267C96DD0);
  uint64_t v65 = v76;
  uint64_t v66 = v69;
  sub_21CB88A60();
  MEMORY[0x21D4B5A20](0, v64, v65, v63);
  _Block_release(v63);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v65, v66);
  (*(void (**)(char *, uint64_t))(v75 + 8))(v64, v77);
  swift_release();
  unsigned char *v70 = 1;
  return swift_bridgeObjectRelease();
}

uint64_t sub_21CB23EA8@<X0>(uint64_t a1@<X0>, void *a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t isUniquelyReferenced_nonNull_native = v3;
  uint64_t v8 = sub_21CB88100();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v80 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_21CB88150();
  uint64_t v88 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v80 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = a2[76];
  uint64_t v90 = a1;
  uint64_t result = sub_21CAC928C(a1, v15);
  if (result)
  {
    *a3 = 0;
    return result;
  }
  uint64_t v82 = v11;
  uint64_t v83 = v12;
  uint64_t v84 = v9;
  a2[72] = 0;
  swift_bridgeObjectRelease();
  uint64_t v89 = a2;
  a2[78] = 0;
  swift_bridgeObjectRelease();
  if (qword_267C94990 != -1) {
    goto LABEL_50;
  }
  while (1)
  {
    uint64_t v17 = sub_21CB880A0();
    uint64_t v18 = sub_21CA4CC18(v17, (uint64_t)qword_267CA5368);
    uint64_t v19 = v90;
    swift_bridgeObjectRetain();
    uint64_t v80 = v18;
    uint64_t v20 = sub_21CB88070();
    os_log_type_t v21 = sub_21CB88880();
    BOOL v22 = os_log_type_enabled(v20, v21);
    uint64_t v86 = a3;
    uint64_t v87 = isUniquelyReferenced_nonNull_native;
    uint64_t v85 = v8;
    unint64_t v81 = v14;
    if (v22)
    {
      char v23 = (uint8_t *)swift_slowAlloc();
      unint64_t v24 = (void *)swift_slowAlloc();
      *(_DWORD *)char v23 = 138412290;
      uint64_t v25 = sub_21CB884F0();
      aBlock[0] = v25;
      sub_21CB889C0();
      void *v24 = v25;
      uint64_t v19 = v90;
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_21CA00000, v20, v21, "FMFDataManager: fallbackToLegacy (in) %@", v23, 0xCu);
      sub_21CA57E34(&qword_267C95020);
      swift_arrayDestroy();
      MEMORY[0x21D4B6B70](v24, -1, -1);
      MEMORY[0x21D4B6B70](v23, -1, -1);

      uint64_t v14 = *(char **)(v19 + 16);
      if (!v14) {
        break;
      }
      goto LABEL_6;
    }

    swift_bridgeObjectRelease();
    uint64_t v14 = *(char **)(v19 + 16);
    if (!v14) {
      break;
    }
LABEL_6:
    swift_bridgeObjectRetain();
    a3 = (unsigned char *)(v19 + 48);
    BOOL v26 = (void *)MEMORY[0x263F8EE80];
    while (1)
    {
      uint64_t v8 = *((void *)a3 - 2);
      uint64_t v29 = *((void *)a3 - 1);
      char v30 = *a3;
      swift_bridgeObjectRetain_n();
      uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      aBlock[0] = v26;
      unint64_t v32 = sub_21CA5BCE0(v8, v29);
      uint64_t v33 = v26[2];
      BOOL v34 = (v31 & 1) == 0;
      uint64_t v35 = v33 + v34;
      if (__OFADD__(v33, v34)) {
        break;
      }
      char v36 = v31;
      if (v26[3] >= v35)
      {
        if (isUniquelyReferenced_nonNull_native)
        {
          BOOL v26 = (void *)aBlock[0];
          if (v31) {
            goto LABEL_7;
          }
        }
        else
        {
          sub_21CB85AE8();
          BOOL v26 = (void *)aBlock[0];
          if (v36) {
            goto LABEL_7;
          }
        }
      }
      else
      {
        sub_21CB81C00(v35, isUniquelyReferenced_nonNull_native);
        unint64_t v37 = sub_21CA5BCE0(v8, v29);
        if ((v36 & 1) != (v38 & 1))
        {
          uint64_t result = sub_21CB88FA0();
          __break(1u);
          return result;
        }
        unint64_t v32 = v37;
        BOOL v26 = (void *)aBlock[0];
        if (v36)
        {
LABEL_7:
          uint64_t v27 = v26;
          uint64_t v28 = v26[7] + 24 * v32;
          swift_bridgeObjectRelease();
          *(void *)uint64_t v28 = v8;
          *(void *)(v28 + 8) = v29;
          *(unsigned char *)(v28 + 16) = v30;
          BOOL v26 = v27;
          goto LABEL_8;
        }
      }
      v26[(v32 >> 6) + 8] |= 1 << v32;
      uint64_t v39 = (uint64_t *)(v26[6] + 16 * v32);
      *uint64_t v39 = v8;
      v39[1] = v29;
      uint64_t v40 = v26[7] + 24 * v32;
      *(void *)uint64_t v40 = v8;
      *(void *)(v40 + 8) = v29;
      *(unsigned char *)(v40 + 16) = v30;
      uint64_t v41 = v26[2];
      BOOL v42 = __OFADD__(v41, 1);
      uint64_t v43 = v41 + 1;
      if (v42) {
        goto LABEL_49;
      }
      v26[2] = v43;
      swift_bridgeObjectRetain();
LABEL_8:
      a3 += 24;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (!--v14)
      {
        swift_bridgeObjectRelease();
        goto LABEL_23;
      }
    }
    __break(1u);
LABEL_49:
    __break(1u);
LABEL_50:
    swift_once();
  }
  BOOL v26 = (void *)MEMORY[0x263F8EE80];
LABEL_23:
  uint64_t v93 = (void *)MEMORY[0x263F8EE78];
  uint64_t v44 = v89;
  uint64_t v45 = *(void *)(v89[76] + 16);
  if (!v45) {
    goto LABEL_44;
  }
  uint64_t v90 = swift_bridgeObjectRetain();
  char v46 = (unsigned char *)(v90 + 48);
  while (2)
  {
    uint64_t v47 = *((void *)v46 - 2);
    uint64_t v48 = *((void *)v46 - 1);
    char v49 = *v46;
    uint64_t v50 = v26[2];
    swift_bridgeObjectRetain();
    if (v50)
    {
      swift_bridgeObjectRetain();
      unint64_t v51 = sub_21CA5BCE0(v47, v48);
      if (v52)
      {
        unint64_t v53 = v26;
        uint64_t v54 = v26[7] + 24 * v51;
        uint64_t v56 = *(void *)v54;
        uint64_t v55 = *(void *)(v54 + 8);
        char v57 = *(unsigned char *)(v54 + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease_n();
        char v58 = v93;
        swift_bridgeObjectRetain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          char v58 = sub_21CAC8194(0, v58[2] + 1, 1, v58);
        }
        unint64_t v60 = v58[2];
        unint64_t v59 = v58[3];
        if (v60 >= v59 >> 1) {
          char v58 = sub_21CAC8194((void *)(v59 > 1), v60 + 1, 1, v58);
        }
        v58[2] = v60 + 1;
        unint64_t v61 = &v58[3 * v60];
        v61[4] = v56;
        v61[5] = v55;
        *((unsigned char *)v61 + 48) = v57;
        uint64_t v93 = v58;
        uint64_t v62 = v53;
        swift_bridgeObjectRetain();
        unint64_t v63 = sub_21CA5BCE0(v56, v55);
        char v65 = v64;
        swift_bridgeObjectRelease();
        if (v65)
        {
          char v66 = swift_isUniquelyReferenced_nonNull_native();
          aBlock[0] = v53;
          if ((v66 & 1) == 0)
          {
            sub_21CB85AE8();
            uint64_t v62 = (void *)aBlock[0];
          }
          swift_bridgeObjectRelease();
          unint64_t v53 = v62;
          sub_21CA3A428(v63, v62);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        swift_bridgeObjectRelease();
        goto LABEL_26;
      }
      swift_bridgeObjectRelease();
    }
    unint64_t v53 = v26;
    uint64_t v67 = v93;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v67 = sub_21CAC8194(0, v67[2] + 1, 1, v67);
    }
    unint64_t v69 = v67[2];
    unint64_t v68 = v67[3];
    if (v69 >= v68 >> 1) {
      uint64_t v67 = sub_21CAC8194((void *)(v68 > 1), v69 + 1, 1, v67);
    }
    void v67[2] = v69 + 1;
    os_log_type_t v70 = &v67[3 * v69];
    v70[4] = v47;
    v70[5] = v48;
    *((unsigned char *)v70 + 48) = v49;
    uint64_t v93 = v67;
LABEL_26:
    v46 += 24;
    --v45;
    BOOL v26 = v53;
    if (v45) {
      continue;
    }
    break;
  }
  swift_bridgeObjectRelease();
  uint64_t v44 = v89;
LABEL_44:
  uint64_t v90 = swift_bridgeObjectRetain();
  sub_21CA7BB68(v90);
  v44[76] = v93;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRelease();
  uint64_t v71 = sub_21CB88070();
  os_log_type_t v72 = sub_21CB88880();
  if (os_log_type_enabled(v71, v72))
  {
    uint64_t v73 = (uint8_t *)swift_slowAlloc();
    uint64_t v74 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v73 = 138412290;
    uint64_t v75 = sub_21CB884F0();
    aBlock[0] = v75;
    sub_21CB889C0();
    *uint64_t v74 = v75;
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_21CA00000, v71, v72, "FMFDataManager: fallbackToLegacy (out) %@", v73, 0xCu);
    sub_21CA57E34(&qword_267C95020);
    swift_arrayDestroy();
    MEMORY[0x21D4B6B70](v74, -1, -1);
    MEMORY[0x21D4B6B70](v73, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v76 = v85;
  aBlock[4] = sub_21CB2A5C4;
  void aBlock[5] = v89;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_21CA1B084;
  uint64_t aBlock[3] = &unk_26CD6E780;
  uint64_t v77 = _Block_copy(aBlock);
  swift_retain();
  uint64_t v78 = v81;
  sub_21CB88120();
  uint64_t v91 = MEMORY[0x263F8EE78];
  sub_21CA36540((unint64_t *)&qword_267C96FC0, MEMORY[0x263F8F030]);
  sub_21CA57E34((uint64_t *)&unk_267C96DD0);
  sub_21CA356BC((unint64_t *)&qword_267C96FD0, (uint64_t *)&unk_267C96DD0);
  uint64_t v79 = v82;
  sub_21CB88A60();
  MEMORY[0x21D4B5A20](0, v78, v79, v77);
  _Block_release(v77);
  (*(void (**)(char *, uint64_t))(v84 + 8))(v79, v76);
  (*(void (**)(char *, uint64_t))(v88 + 8))(v78, v83);
  swift_release();
  *uint64_t v86 = 1;
  return swift_bridgeObjectRelease();
}

uint64_t sub_21CB24870(uint64_t a1)
{
  uint64_t v2 = a1 + 32;
  if (MEMORY[0x21D4B6C80](a1 + 32))
  {
    uint64_t v3 = *(void *)(a1 + 40);
    uint64_t ObjectType = swift_getObjectType();
    sub_21CA57E34(&qword_267C94EC0);
    sub_21CB88910();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 72))(v8, ObjectType, v3);
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
  }
  uint64_t result = MEMORY[0x21D4B6C80](v2);
  if (result)
  {
    uint64_t v6 = *(void *)(a1 + 40);
    uint64_t v7 = swift_getObjectType();
    sub_21CA57E34(&qword_267C95D50);
    sub_21CB88910();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v6 + 56))(v8, 0, v7, v6);
    swift_bridgeObjectRelease();
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_21CB249BC()
{
  uint64_t v1 = v0;
  if (qword_267C94990 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_21CB880A0();
  sub_21CA4CC18(v2, (uint64_t)qword_267CA5368);
  uint64_t v3 = sub_21CB88070();
  os_log_type_t v4 = sub_21CB88880();
  if (os_log_type_enabled(v3, v4))
  {
    unint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v5 = 0;
    _os_log_impl(&dword_21CA00000, v3, v4, "FMFDataManager: reset falling back to legacy states", v5, 2u);
    MEMORY[0x21D4B6B70](v5, -1, -1);
  }

  uint64_t v7 = *(void *)(v1 + 608);
  uint64_t v8 = *(void *)(v7 + 16);
  if (v8)
  {
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_21CAC8194(0, 1, 1, MEMORY[0x263F8EE78]);
    uint64_t v10 = (uint64_t *)(v7 + 40);
    do
    {
      uint64_t v12 = *(v10 - 1);
      uint64_t v11 = *v10;
      unint64_t v14 = v9[2];
      unint64_t v13 = v9[3];
      swift_bridgeObjectRetain();
      if (v14 >= v13 >> 1) {
        uint64_t v9 = sub_21CAC8194((void *)(v13 > 1), v14 + 1, 1, v9);
      }
      v10 += 3;
      void v9[2] = v14 + 1;
      uint64_t v15 = &v9[3 * v14];
      void v15[4] = v12;
      v15[5] = v11;
      *((unsigned char *)v15 + 48) = 0;
      --v8;
    }
    while (v8);
    uint64_t v6 = swift_bridgeObjectRelease();
  }
  MEMORY[0x270FA5388](v6);
  sub_21CB88910();
  return swift_bridgeObjectRelease();
}

uint64_t sub_21CB24BC8()
{
  uint64_t v1 = v0;
  if (qword_267C94990 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_21CB880A0();
  sub_21CA4CC18(v2, (uint64_t)qword_267CA5368);
  uint64_t v3 = sub_21CB88070();
  os_log_type_t v4 = sub_21CB88880();
  if (os_log_type_enabled(v3, v4))
  {
    unint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v5 = 0;
    _os_log_impl(&dword_21CA00000, v3, v4, "FMFDataManager: reset shallowlocates in progress", v5, 2u);
    MEMORY[0x21D4B6B70](v5, -1, -1);
  }

  uint64_t v7 = *(void *)(v1 + 600);
  uint64_t v8 = *(void *)(v7 + 16);
  if (v8)
  {
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_21CA3A438(0, 1, 1, MEMORY[0x263F8EE78]);
    uint64_t v10 = (uint64_t *)(v7 + 40);
    do
    {
      uint64_t v12 = *(v10 - 1);
      uint64_t v11 = *v10;
      unint64_t v13 = v9[2];
      unint64_t v14 = v9[3];
      swift_bridgeObjectRetain();
      if (v13 >= v14 >> 1) {
        uint64_t v9 = sub_21CA3A438((void *)(v14 > 1), v13 + 1, 1, v9);
      }
      v10 += 3;
      void v9[2] = v13 + 1;
      uint64_t v15 = &v9[3 * v13];
      void v15[4] = v12;
      v15[5] = v11;
      *((unsigned char *)v15 + 48) = 1;
      --v8;
    }
    while (v8);
    uint64_t v6 = swift_bridgeObjectRelease();
  }
  MEMORY[0x270FA5388](v6);
  sub_21CB88910();
  return swift_bridgeObjectRelease();
}

uint64_t sub_21CB24DDC()
{
  uint64_t v1 = v0;
  unint64_t v2 = sub_21CB88100();
  unint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  unint64_t v68 = (char *)&v64 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v69 = sub_21CB88150();
  uint64_t v67 = *(void *)(v69 - 8);
  MEMORY[0x270FA5388](v69);
  char v66 = (char *)&v64 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_21CA57E34((uint64_t *)&unk_267C96EF0);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v64 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v84 = type metadata accessor for FMFLocation();
  uint64_t v88 = *(void *)(v84 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v84);
  uint64_t v79 = (uint64_t)&v64 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  unint64_t v13 = (unint64_t *)((char *)&v64 - v12);
  uint64_t v14 = MEMORY[0x270FA5388](v11);
  uint64_t v72 = (uint64_t)&v64 - v15;
  MEMORY[0x270FA5388](v14);
  uint64_t v71 = (char *)&v64 - v16;
  uint64_t v73 = type metadata accessor for FMFFriend();
  uint64_t v87 = *(void *)(v73 - 8);
  uint64_t v17 = MEMORY[0x270FA5388](v73);
  uint64_t v86 = (char *)&v64 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  uint64_t v20 = (uint64_t *)((char *)&v64 - v19);
  if (qword_267C94990 != -1) {
LABEL_45:
  }
    swift_once();
  uint64_t v21 = sub_21CB880A0();
  sub_21CA4CC18(v21, (uint64_t)qword_267CA5368);
  BOOL v22 = sub_21CB88070();
  os_log_type_t v23 = sub_21CB88880();
  BOOL v24 = os_log_type_enabled(v22, v23);
  uint64_t v78 = v1;
  if (v24)
  {
    uint64_t v25 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v25 = 0;
    _os_log_impl(&dword_21CA00000, v22, v23, "FMFDataManager: reset locating state for friends", v25, 2u);
    BOOL v26 = v25;
    uint64_t v1 = v78;
    MEMORY[0x21D4B6B70](v26, -1, -1);
  }

  uint64_t v27 = sub_21CA4ECF8();
  uint64_t v85 = *(void *)(v27 + 16);
  if (v85)
  {
    unint64_t v64 = v3;
    unint64_t v65 = v2;
    unint64_t v82 = v27 + ((*(unsigned __int8 *)(v87 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v87 + 80));
    uint64_t v83 = (char *)(v1 + 672);
    uint64_t v77 = v1 + 616;
    swift_beginAccess();
    unint64_t v3 = 0;
    uint64_t v75 = (unsigned int (**)(unint64_t, uint64_t, uint64_t))(v88 + 48);
    uint64_t v76 = (void (**)(unint64_t, uint64_t, uint64_t, uint64_t))(v88 + 56);
    unint64_t v28 = MEMORY[0x263F8EE78];
    uint64_t v80 = (void *)MEMORY[0x263F8EE78];
    uint64_t v81 = v27;
    uint64_t v74 = v8;
    uint64_t v8 = v86;
    while (1)
    {
      if (v3 >= *(void *)(v27 + 16))
      {
        __break(1u);
        goto LABEL_45;
      }
      sub_21CA571E8(v82 + *(void *)(v87 + 72) * v3, (uint64_t)v20, (uint64_t (*)(void))type metadata accessor for FMFFriend);
      char v29 = *v83;
      sub_21CA571E8((uint64_t)v20, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FMFFriend);
      if (v29)
      {
        sub_21CA57050((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FMFFriend);
      }
      else
      {
        char v30 = v8[*(int *)(v73 + 48)];
        sub_21CA57050((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FMFFriend);
        if ((v30 & 1) == 0)
        {
          unint64_t v31 = v28;
          uint64_t v33 = *v20;
          uint64_t v32 = v20[1];
          BOOL v34 = v71;
          *((void *)v71 + 3) = 0;
          v34[32] = 1;
          uint64_t v35 = (int *)v84;
          char v36 = &v34[*(int *)(v84 + 32)];
          uint64_t v37 = sub_21CB875D0();
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56))(v36, 1, 1, v37);
          uint64_t v70 = v33;
          *(void *)BOOL v34 = v33;
          *((void *)v34 + 1) = v32;
          sub_21CA8F350((uint64_t)v90);
          sub_21CA26A4C((uint64_t)v90, (uint64_t)&v34[v35[11]], &qword_267C951F0);
          v34[16] = 1;
          v34[33] = 0;
          v34[v35[9]] = 0;
          v34[v35[10]] = 0;
          uint64_t v38 = (uint64_t)v34;
          uint64_t v39 = v32;
          unint64_t v28 = v31;
          sub_21CA571E8(v38, v72, (uint64_t (*)(void))type metadata accessor for FMFLocation);
          swift_bridgeObjectRetain_n();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            unint64_t v28 = sub_21CA47FB4(0, *(void *)(v31 + 16) + 1, 1, v31);
          }
          unint64_t v41 = *(void *)(v28 + 16);
          unint64_t v40 = *(void *)(v28 + 24);
          if (v41 >= v40 >> 1) {
            unint64_t v28 = sub_21CA47FB4(v40 > 1, v41 + 1, 1, v28);
          }
          *(void *)(v28 + 16) = v41 + 1;
          sub_21CA591A4(v72, v28+ ((*(unsigned __int8 *)(v88 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v88 + 80))+ *(void *)(v88 + 72) * v41, (uint64_t (*)(void))type metadata accessor for FMFLocation);
          BOOL v42 = v80;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            BOOL v42 = sub_21CA3F8C0(0, v42[2] + 1, 1, v42);
          }
          unint64_t v2 = v42[2];
          unint64_t v43 = v42[3];
          uint64_t v80 = v42;
          if (v2 >= v43 >> 1) {
            uint64_t v80 = sub_21CA3F8C0((void *)(v43 > 1), v2 + 1, 1, v80);
          }
          uint64_t v44 = v80;
          uint64_t v80[2] = v2 + 1;
          uint64_t v45 = &v44[3 * v2];
          uint64_t v46 = (uint64_t)v71;
          v45[4] = v70;
          v45[5] = v39;
          *((unsigned char *)v45 + 48) = 1;
          sub_21CA57050(v46, (uint64_t (*)(void))type metadata accessor for FMFLocation);
          sub_21CA57050((uint64_t)v20, (uint64_t (*)(void))type metadata accessor for FMFFriend);
          uint64_t v1 = v78;
          goto LABEL_7;
        }
      }
      uint64_t v47 = *(void *)(*(void *)v77 + 16);
      if (v47)
      {
        uint64_t v48 = v88;
        uint64_t v49 = *(void *)v77
            + ((*(unsigned __int8 *)(v88 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v88 + 80));
        swift_bridgeObjectRetain();
        uint64_t v50 = *(void *)(v48 + 72);
        do
        {
          sub_21CA571E8(v49, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for FMFLocation);
          uint64_t v51 = v13[1];
          if (v51)
          {
            BOOL v52 = *v13 == *v20 && v51 == v20[1];
            if (v52 || (sub_21CB88F50() & 1) != 0)
            {
              unint64_t v2 = (unint64_t)v74;
              sub_21CA591A4((uint64_t)v13, (uint64_t)v74, (uint64_t (*)(void))type metadata accessor for FMFLocation);
              uint64_t v53 = 0;
              uint64_t v1 = v78;
              goto LABEL_35;
            }
          }
          sub_21CA57050((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for FMFLocation);
          v49 += v50;
          --v47;
        }
        while (v47);
        uint64_t v53 = 1;
        uint64_t v1 = v78;
      }
      else
      {
        swift_bridgeObjectRetain();
        uint64_t v53 = 1;
      }
      unint64_t v2 = (unint64_t)v74;
LABEL_35:
      uint64_t v54 = v84;
      (*v76)(v2, v53, 1, v84);
      swift_bridgeObjectRelease();
      if ((*v75)(v2, 1, v54) != 1)
      {
        sub_21CA591A4(v2, v79, (uint64_t (*)(void))type metadata accessor for FMFLocation);
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v8 = v86;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          unint64_t v28 = sub_21CA47FB4(0, *(void *)(v28 + 16) + 1, 1, v28);
        }
        unint64_t v2 = *(void *)(v28 + 16);
        unint64_t v56 = *(void *)(v28 + 24);
        if (v2 >= v56 >> 1) {
          unint64_t v28 = sub_21CA47FB4(v56 > 1, v2 + 1, 1, v28);
        }
        *(void *)(v28 + 16) = v2 + 1;
        sub_21CA591A4(v79, v28+ ((*(unsigned __int8 *)(v88 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v88 + 80))+ *(void *)(v88 + 72) * v2, (uint64_t (*)(void))type metadata accessor for FMFLocation);
        sub_21CA57050((uint64_t)v20, (uint64_t (*)(void))type metadata accessor for FMFFriend);
        goto LABEL_8;
      }
      sub_21CA57050((uint64_t)v20, (uint64_t (*)(void))type metadata accessor for FMFFriend);
      sub_21CA1B88C(v2, (uint64_t *)&unk_267C96EF0);
LABEL_7:
      uint64_t v8 = v86;
LABEL_8:
      uint64_t v27 = v81;
      if (++v3 == v85)
      {
        swift_bridgeObjectRelease();
        unint64_t v3 = v64;
        unint64_t v2 = v65;
        char v57 = v80;
        goto LABEL_43;
      }
    }
  }
  swift_bridgeObjectRelease();
  unint64_t v28 = MEMORY[0x263F8EE78];
  char v57 = (void *)MEMORY[0x263F8EE78];
LABEL_43:
  uint64_t v58 = MEMORY[0x263F8EE78];
  *(void *)(v1 + 584) = v57;
  swift_bridgeObjectRelease();
  swift_beginAccess();
  *(void *)(v1 + 616) = v28;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v59 = swift_allocObject();
  *(void *)(v59 + 16) = v1;
  *(void *)(v59 + 24) = v28;
  v90[4] = sub_21CB2B5D0;
  v90[5] = v59;
  v90[0] = MEMORY[0x263EF8330];
  v90[1] = 1107296256;
  v90[2] = sub_21CA1B084;
  v90[3] = &unk_26CD6ED48;
  unint64_t v60 = _Block_copy(v90);
  swift_retain();
  unint64_t v61 = v66;
  sub_21CB88120();
  uint64_t v89 = v58;
  sub_21CA36540((unint64_t *)&qword_267C96FC0, MEMORY[0x263F8F030]);
  sub_21CA57E34((uint64_t *)&unk_267C96DD0);
  sub_21CA356BC((unint64_t *)&qword_267C96FD0, (uint64_t *)&unk_267C96DD0);
  uint64_t v62 = v68;
  sub_21CB88A60();
  MEMORY[0x21D4B5A20](0, v61, v62, v60);
  _Block_release(v60);
  (*(void (**)(char *, unint64_t))(v3 + 8))(v62, v2);
  (*(void (**)(char *, uint64_t))(v67 + 8))(v61, v69);
  return swift_release();
}

uint64_t sub_21CB25950(uint64_t a1)
{
  uint64_t result = sub_21CB88910();
  if (v12 == 1)
  {
    if (qword_267C94990 != -1) {
      swift_once();
    }
    uint64_t v3 = sub_21CB880A0();
    sub_21CA4CC18(v3, (uint64_t)qword_267CA5368);
    swift_retain_n();
    uint64_t v4 = sub_21CB88070();
    os_log_type_t v5 = sub_21CB88880();
    if (os_log_type_enabled(v4, v5))
    {
      uint64_t v6 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v6 = 134217984;
      sub_21CA57E34(&qword_267C95D50);
      sub_21CB88910();
      uint64_t v7 = *(void *)(v12 + 16);
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v12 = v7;
      sub_21CB889C0();
      swift_release();
      _os_log_impl(&dword_21CA00000, v4, v5, "FMFDataManager: resetting locating in progress for (%ld friend", v6, 0xCu);
      MEMORY[0x21D4B6B70](v6, -1, -1);
    }
    else
    {

      swift_release_n();
    }
    if (MEMORY[0x21D4B6C80](a1 + 32))
    {
      uint64_t v8 = *(void *)(a1 + 40);
      uint64_t ObjectType = swift_getObjectType();
      sub_21CA57E34(&qword_267C94EC0);
      sub_21CB88910();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 72))(v12, ObjectType, v8);
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
    }
    uint64_t result = MEMORY[0x21D4B6C80](a1 + 32);
    if (result)
    {
      uint64_t v10 = *(void *)(a1 + 40);
      uint64_t v11 = swift_getObjectType();
      sub_21CA57E34(&qword_267C95D50);
      sub_21CB88910();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v10 + 56))(v12, 0, v11, v10);
      swift_bridgeObjectRelease();
      return swift_unknownObjectRelease();
    }
  }
  return result;
}

uint64_t sub_21CB25C4C()
{
  swift_beginAccess();
  type metadata accessor for FMFFriend();
  swift_bridgeObjectRetain();
  uint64_t v0 = sub_21CB881E0();
  swift_bridgeObjectRelease();
  return v0;
}

void sub_21CB25CC8(uint64_t a1, void *a2, void *a3)
{
  unint64_t v6 = sub_21CB07DE0(a2, a3, 0);
  if (!v6) {
    return;
  }
  unint64_t v7 = v6;
  uint64_t v8 = v6 & 0xFFFFFFFFFFFFFF8;
  if (v6 >> 62)
  {
    if (sub_21CB88D10()) {
      goto LABEL_4;
    }
LABEL_10:
    swift_bridgeObjectRelease();
    return;
  }
  if (!*(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_10;
  }
LABEL_4:
  if ((v7 & 0xC000000000000001) != 0)
  {
    id v9 = (id)MEMORY[0x21D4B5CA0](0, v7);
  }
  else
  {
    if (!*(void *)(v8 + 16))
    {
      __break(1u);
      return;
    }
    id v9 = *(id *)(v7 + 32);
  }
  uint64_t v10 = v9;
  swift_bridgeObjectRelease();
  sub_21CB075AC(v10, (uint64_t)v13);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v12 = *(void *)(a1 + 728);
  *(void *)(a1 + 728) = 0x8000000000000000;
  sub_21CB84450((uint64_t)v13, (uint64_t)a2, (uint64_t)a3, isUniquelyReferenced_nonNull_native);
  *(void *)(a1 + 728) = v12;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_endAccess();
}

uint64_t sub_21CB25E2C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_21CA5A5F4();
  *a1 = result;
  return result;
}

void sub_21CB25E68()
{
  uint64_t v1 = sub_21CB88100();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_21CB88150();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned char *)(*(void *)(v0 + 48) + OBJC_IVAR____TtC7FMFCore23FMFManagerConfiguration_disableContactMatching) & 1) == 0)
  {
    v10[0] = *(void *)(v0 + 56);
    aBlock[4] = sub_21CB2A19C;
    void aBlock[5] = v0;
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_21CA1B084;
    uint64_t aBlock[3] = &unk_26CD6E5F0;
    id v9 = _Block_copy(aBlock);
    swift_retain();
    sub_21CB88120();
    v10[1] = MEMORY[0x263F8EE78];
    sub_21CA36540((unint64_t *)&qword_267C96FC0, MEMORY[0x263F8F030]);
    sub_21CA57E34((uint64_t *)&unk_267C96DD0);
    sub_21CA356BC((unint64_t *)&qword_267C96FD0, (uint64_t *)&unk_267C96DD0);
    sub_21CB88A60();
    MEMORY[0x21D4B5A20](0, v8, v4, v9);
    _Block_release(v9);
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    swift_release();
  }
}

uint64_t sub_21CB26124(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 576);
  if (v1)
  {
    uint64_t v2 = *(void *)(result + 720);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_21CA5DBA0(v1, v2);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_21CB261A0(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_21CB88100();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_21CB88150();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15[0] = *(void *)(v2 + 56);
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = v2;
  *(void *)(v12 + 24) = a1;
  aBlock[4] = sub_21CB2A164;
  void aBlock[5] = v12;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_21CA1B084;
  uint64_t aBlock[3] = &unk_26CD6E5A0;
  unint64_t v13 = _Block_copy(aBlock);
  swift_retain();
  swift_bridgeObjectRetain();
  sub_21CB88120();
  v15[1] = MEMORY[0x263F8EE78];
  sub_21CA36540((unint64_t *)&qword_267C96FC0, MEMORY[0x263F8F030]);
  sub_21CA57E34((uint64_t *)&unk_267C96DD0);
  sub_21CA356BC((unint64_t *)&qword_267C96FD0, (uint64_t *)&unk_267C96DD0);
  sub_21CB88A60();
  MEMORY[0x21D4B5A20](0, v11, v7, v13);
  _Block_release(v13);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  return swift_release();
}

uint64_t sub_21CB2646C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_21CB88100();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13[0] = sub_21CB88150();
  uint64_t v8 = *(void *)(v13[0] - 8);
  MEMORY[0x270FA5388](v13[0]);
  uint64_t v10 = (char *)v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)(a1 + 720) = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 576) = 0;
  swift_bridgeObjectRelease();
  sub_21CA2D15C();
  aBlock[4] = sub_21CB2A16C;
  void aBlock[5] = a1;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_21CA1B084;
  uint64_t aBlock[3] = &unk_26CD6E5C8;
  uint64_t v11 = _Block_copy(aBlock);
  swift_retain();
  sub_21CB88120();
  v13[1] = MEMORY[0x263F8EE78];
  sub_21CA36540((unint64_t *)&qword_267C96FC0, MEMORY[0x263F8F030]);
  sub_21CA57E34((uint64_t *)&unk_267C96DD0);
  sub_21CA356BC((unint64_t *)&qword_267C96FD0, (uint64_t *)&unk_267C96DD0);
  sub_21CB88A60();
  MEMORY[0x21D4B5A20](0, v10, v7, v11);
  _Block_release(v11);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  (*(void (**)(char *, void))(v8 + 8))(v10, v13[0]);
  return swift_release();
}

uint64_t sub_21CB26744(uint64_t a1, unsigned char *a2)
{
  uint64_t v5 = sub_21CB88100();
  uint64_t v20 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_21CB88150();
  uint64_t v8 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  uint64_t v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for FMFFriend();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  MEMORY[0x270FA5388](v11 - 8);
  LOBYTE(a2) = *a2;
  uint64_t v18 = *(void *)(v2 + 56);
  sub_21CA571E8(a1, (uint64_t)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for FMFFriend);
  unint64_t v14 = (*(unsigned __int8 *)(v12 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = v2;
  sub_21CA591A4((uint64_t)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v15 + v14, (uint64_t (*)(void))type metadata accessor for FMFFriend);
  *(unsigned char *)(v15 + v14 + v13) = (_BYTE)a2;
  aBlock[4] = sub_21CB2A4F8;
  void aBlock[5] = v15;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_21CA1B084;
  uint64_t aBlock[3] = &unk_26CD6E6B8;
  uint64_t v16 = _Block_copy(aBlock);
  swift_retain();
  sub_21CB88120();
  uint64_t v21 = MEMORY[0x263F8EE78];
  sub_21CA36540((unint64_t *)&qword_267C96FC0, MEMORY[0x263F8F030]);
  sub_21CA57E34((uint64_t *)&unk_267C96DD0);
  sub_21CA356BC((unint64_t *)&qword_267C96FD0, (uint64_t *)&unk_267C96DD0);
  sub_21CB88A60();
  MEMORY[0x21D4B5A20](0, v10, v7, v16);
  _Block_release(v16);
  (*(void (**)(char *, uint64_t))(v20 + 8))(v7, v5);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v19);
  return swift_release();
}

uint64_t sub_21CB26AD8(uint64_t a1, uint64_t *a2, int a3)
{
  int v26 = a3;
  uint64_t v5 = sub_21CB88100();
  uint64_t v29 = *(void *)(v5 - 8);
  uint64_t v30 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = &v25[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = sub_21CB88150();
  uint64_t v27 = *(void *)(v8 - 8);
  uint64_t v28 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = &v25[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = sub_21CA57E34(&qword_267C96F10);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v13 = &v25[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v15 = *a2;
  uint64_t v14 = a2[1];
  sub_21CA571E8((uint64_t)a2, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for FMFFriend);
  uint64_t v16 = type metadata accessor for FMFFriend();
  uint64_t v17 = *(void *)(v16 - 8);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v17 + 56))(v13, 0, 1, v16);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_21CA585EC((uint64_t)v13, v15, v14);
  swift_endAccess();
  swift_bridgeObjectRetain();
  uint64_t v18 = sub_21CB29464();
  uint64_t v19 = sub_21CB26F2C(v32, v15, v14);
  uint64_t v21 = v20;
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))(v20, 1, v16)) {
    *(unsigned char *)(v21 + *(int *)(v16 + 84)) = v26;
  }
  ((void (*)(void *, void))v19)(v32, 0);
  swift_bridgeObjectRelease();
  ((void (*)(void *, void))v18)(aBlock, 0);
  *(void *)(a1 + 576) = 0;
  swift_bridgeObjectRelease();
  aBlock[4] = sub_21CA330D8;
  void aBlock[5] = a1;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_21CA1B084;
  uint64_t aBlock[3] = &unk_26CD6E6E0;
  BOOL v22 = _Block_copy(aBlock);
  swift_retain();
  sub_21CB88120();
  v32[0] = MEMORY[0x263F8EE78];
  sub_21CA36540((unint64_t *)&qword_267C96FC0, MEMORY[0x263F8F030]);
  sub_21CA57E34((uint64_t *)&unk_267C96DD0);
  sub_21CA356BC((unint64_t *)&qword_267C96FD0, (uint64_t *)&unk_267C96DD0);
  uint64_t v23 = v30;
  sub_21CB88A60();
  MEMORY[0x21D4B5A20](0, v10, v7, v22);
  _Block_release(v22);
  (*(void (**)(unsigned char *, uint64_t))(v29 + 8))(v7, v23);
  (*(void (**)(unsigned char *, uint64_t))(v27 + 8))(v10, v28);
  return swift_release();
}

void (*sub_21CB26F2C(void *a1, uint64_t a2, uint64_t a3))(void *a1)
{
  uint64_t v6 = malloc(0x30uLL);
  *a1 = v6;
  v6[4] = a3;
  swift_bridgeObjectRetain();
  _OWORD v6[5] = sub_21CB29664(v6, a2, a3);
  return sub_21CB26FAC;
}

void sub_21CB26FAC(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void, void))(*a1 + 40))(*a1, 0);
  swift_bridgeObjectRelease();

  free(v1);
}

uint64_t sub_21CB27000(uint64_t a1, uint64_t a2, char a3)
{
  return sub_21CB27BC4(a1, a2, a3, (uint64_t)&unk_26CD6E628, (uint64_t)sub_21CB2A1AC, (uint64_t)&unk_26CD6E640);
}

uint64_t sub_21CB27028(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  int v31 = a4;
  uint64_t v7 = sub_21CB88100();
  uint64_t v29 = *(void *)(v7 - 8);
  uint64_t v30 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v27 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = sub_21CB88150();
  uint64_t v26 = *(void *)(v28 - 8);
  MEMORY[0x270FA5388](v28);
  uint64_t v25 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_21CA57E34(&qword_267C96F10);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  uint64_t v13 = sub_21CB29464();
  uint64_t v14 = sub_21CB26F2C(v33, a2, a3);
  uint64_t v16 = v15;
  uint64_t v17 = type metadata accessor for FMFFriend();
  uint64_t v18 = *(void *)(v17 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17)) {
    *(unsigned char *)(v16 + *(int *)(v17 + 84)) = 7;
  }
  ((void (*)(void *, void))v14)(v33, 0);
  swift_bridgeObjectRelease();
  ((void (*)(void *, void))v13)(aBlock, 0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56))(v12, 1, 1, v17);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_21CA585EC((uint64_t)v12, a2, a3);
  uint64_t result = swift_endAccess();
  if (v31)
  {
    *(void *)(a1 + 576) = 0;
    swift_bridgeObjectRelease();
    aBlock[4] = sub_21CA330D8;
    void aBlock[5] = a1;
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_21CA1B084;
    uint64_t aBlock[3] = &unk_26CD6E668;
    uint64_t v20 = _Block_copy(aBlock);
    swift_retain();
    uint64_t v21 = v25;
    sub_21CB88120();
    v33[0] = MEMORY[0x263F8EE78];
    sub_21CA36540((unint64_t *)&qword_267C96FC0, MEMORY[0x263F8F030]);
    sub_21CA57E34((uint64_t *)&unk_267C96DD0);
    sub_21CA356BC((unint64_t *)&qword_267C96FD0, (uint64_t *)&unk_267C96DD0);
    BOOL v22 = v27;
    uint64_t v23 = v30;
    sub_21CB88A60();
    MEMORY[0x21D4B5A20](0, v21, v22, v20);
    _Block_release(v20);
    (*(void (**)(char *, uint64_t))(v29 + 8))(v22, v23);
    (*(void (**)(char *, uint64_t))(v26 + 8))(v21, v28);
    return swift_release();
  }
  return result;
}

uint64_t sub_21CB2747C(uint64_t a1)
{
  uint64_t v3 = sub_21CB88100();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_21CB88150();
  uint64_t v7 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  uint64_t v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for FMFFriend();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  MEMORY[0x270FA5388](v10 - 8);
  v17[1] = *(void *)(v1 + 56);
  sub_21CA571E8(a1, (uint64_t)v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for FMFFriend);
  unint64_t v13 = (*(unsigned __int8 *)(v11 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = v1;
  sub_21CA591A4((uint64_t)v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v14 + v13, (uint64_t (*)(void))type metadata accessor for FMFFriend);
  aBlock[4] = sub_21CB2C03C;
  void aBlock[5] = v14;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_21CA1B084;
  uint64_t aBlock[3] = &unk_26CD6F130;
  uint64_t v15 = _Block_copy(aBlock);
  swift_retain();
  sub_21CB88120();
  uint64_t v19 = MEMORY[0x263F8EE78];
  sub_21CA36540((unint64_t *)&qword_267C96FC0, MEMORY[0x263F8F030]);
  sub_21CA57E34((uint64_t *)&unk_267C96DD0);
  sub_21CA356BC((unint64_t *)&qword_267C96FD0, (uint64_t *)&unk_267C96DD0);
  sub_21CB88A60();
  MEMORY[0x21D4B5A20](0, v9, v6, v15);
  _Block_release(v15);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v18);
  return swift_release();
}

uint64_t sub_21CB277FC(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = sub_21CB88100();
  uint64_t v20 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_21CB88150();
  uint64_t v7 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  uint64_t v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_21CA57E34(&qword_267C96F10);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *a2;
  uint64_t v14 = a2[1];
  sub_21CA571E8((uint64_t)a2, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for FMFFriend);
  uint64_t v15 = type metadata accessor for FMFFriend();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v12, 0, 1, v15);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_21CA585EC((uint64_t)v12, v13, v14);
  swift_endAccess();
  *(void *)(a1 + 576) = 0;
  swift_bridgeObjectRelease();
  aBlock[4] = sub_21CA330D8;
  void aBlock[5] = a1;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_21CA1B084;
  uint64_t aBlock[3] = &unk_26CD6F158;
  uint64_t v16 = _Block_copy(aBlock);
  swift_retain();
  sub_21CB88120();
  uint64_t v21 = MEMORY[0x263F8EE78];
  sub_21CA36540((unint64_t *)&qword_267C96FC0, MEMORY[0x263F8F030]);
  sub_21CA57E34((uint64_t *)&unk_267C96DD0);
  sub_21CA356BC((unint64_t *)&qword_267C96FD0, (uint64_t *)&unk_267C96DD0);
  sub_21CB88A60();
  MEMORY[0x21D4B5A20](0, v9, v6, v16);
  _Block_release(v16);
  (*(void (**)(char *, uint64_t))(v20 + 8))(v6, v4);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v19);
  return swift_release();
}

uint64_t sub_21CB27B9C(uint64_t a1, uint64_t a2, char a3)
{
  return sub_21CB27BC4(a1, a2, a3, (uint64_t)&unk_26CD6F0A0, (uint64_t)sub_21CB2BCF4, (uint64_t)&unk_26CD6F0B8);
}

uint64_t sub_21CB27BC4(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v22 = a5;
  uint64_t v23 = a6;
  uint64_t v7 = v6;
  uint64_t v11 = sub_21CB88100();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_21CB88150();
  uint64_t v15 = *(void *)(v25 - 8);
  MEMORY[0x270FA5388](v25);
  uint64_t v17 = (char *)&v21 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = *(void *)(v7 + 56);
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = v7;
  *(void *)(v18 + 24) = a1;
  *(void *)(v18 + 32) = a2;
  *(unsigned char *)(v18 + 40) = a3;
  aBlock[4] = v22;
  void aBlock[5] = v18;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_21CA1B084;
  uint64_t aBlock[3] = v23;
  uint64_t v19 = _Block_copy(aBlock);
  swift_retain();
  swift_bridgeObjectRetain();
  sub_21CB88120();
  uint64_t v26 = MEMORY[0x263F8EE78];
  sub_21CA36540((unint64_t *)&qword_267C96FC0, MEMORY[0x263F8F030]);
  sub_21CA57E34((uint64_t *)&unk_267C96DD0);
  sub_21CA356BC((unint64_t *)&qword_267C96FD0, (uint64_t *)&unk_267C96DD0);
  sub_21CB88A60();
  MEMORY[0x21D4B5A20](0, v17, v14, v19);
  _Block_release(v19);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v25);
  return swift_release();
}

uint64_t sub_21CB27E94(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v8 = sub_21CB88100();
  uint64_t v22 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_21CB88150();
  uint64_t v20 = *(void *)(v11 - 8);
  uint64_t v21 = v11;
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_21CA57E34(&qword_267C96F10);
  MEMORY[0x270FA5388](v14 - 8);
  uint64_t v16 = (char *)&v20 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for FMFFriend();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v16, 1, 1, v17);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_21CA585EC((uint64_t)v16, a2, a3);
  uint64_t result = swift_endAccess();
  if (a4)
  {
    *(void *)(a1 + 576) = 0;
    swift_bridgeObjectRelease();
    aBlock[4] = sub_21CA330D8;
    void aBlock[5] = a1;
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_21CA1B084;
    uint64_t aBlock[3] = &unk_26CD6F0E0;
    uint64_t v19 = _Block_copy(aBlock);
    swift_retain();
    sub_21CB88120();
    uint64_t v23 = MEMORY[0x263F8EE78];
    sub_21CA36540((unint64_t *)&qword_267C96FC0, MEMORY[0x263F8F030]);
    sub_21CA57E34((uint64_t *)&unk_267C96DD0);
    sub_21CA356BC((unint64_t *)&qword_267C96FD0, (uint64_t *)&unk_267C96DD0);
    sub_21CB88A60();
    MEMORY[0x21D4B5A20](0, v13, v10, v19);
    _Block_release(v19);
    (*(void (**)(char *, uint64_t))(v22 + 8))(v10, v8);
    (*(void (**)(char *, uint64_t))(v20 + 8))(v13, v21);
    return swift_release();
  }
  return result;
}

uint64_t sub_21CB2821C(uint64_t *a1, char a2)
{
  uint64_t v5 = sub_21CB88100();
  uint64_t v20 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_21CB88150();
  uint64_t v8 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  uint64_t v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *a1;
  uint64_t v12 = a1[1];
  uint64_t v14 = a1[2];
  uint64_t v13 = a1[3];
  uint64_t v18 = *(void *)(v2 + 56);
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = v2;
  *(void *)(v15 + 24) = v11;
  *(void *)(v15 + 32) = v12;
  *(void *)(v15 + 40) = v14;
  *(void *)(v15 + 48) = v13;
  *(unsigned char *)(v15 + 56) = a2;
  aBlock[4] = sub_21CB2C100;
  void aBlock[5] = v15;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_21CA1B084;
  uint64_t aBlock[3] = &unk_26CD6F1A8;
  uint64_t v16 = _Block_copy(aBlock);
  swift_retain();
  sub_21CA1F33C(v11, v12, v14);
  sub_21CB88120();
  uint64_t v21 = MEMORY[0x263F8EE78];
  sub_21CA36540((unint64_t *)&qword_267C96FC0, MEMORY[0x263F8F030]);
  sub_21CA57E34((uint64_t *)&unk_267C96DD0);
  sub_21CA356BC((unint64_t *)&qword_267C96FD0, (uint64_t *)&unk_267C96DD0);
  sub_21CB88A60();
  MEMORY[0x21D4B5A20](0, v10, v7, v16);
  _Block_release(v16);
  (*(void (**)(char *, uint64_t))(v20 + 8))(v7, v5);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v19);
  return swift_release();
}

uint64_t sub_21CB2850C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  int v36 = a6;
  uint64_t v39 = a4;
  uint64_t v38 = sub_21CB88100();
  uint64_t v41 = *(void *)(v38 - 8);
  MEMORY[0x270FA5388](v38);
  uint64_t v11 = (char *)v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = sub_21CB88150();
  uint64_t v40 = *(void *)(v37 - 8);
  MEMORY[0x270FA5388](v37);
  uint64_t v13 = (char *)v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *(void **)(a1 + 536);
  uint64_t v15 = v14[5];
  uint64_t v16 = v14[6];
  uint64_t v17 = v14[7];
  v14[5] = a2;
  v14[6] = a3;
  uint64_t v18 = v39;
  v14[7] = v39;
  v14[8] = a5;
  sub_21CA1F33C(a2, a3, v18);
  sub_21CA59D84(v15, v16, v17);
  uint64_t v19 = *(void *)(a1 + 64);
  uint64_t v47 = sub_21CB2C114;
  uint64_t v48 = a1;
  uint64_t aBlock = MEMORY[0x263EF8330];
  uint64_t v44 = 1107296256;
  uint64_t v45 = sub_21CA1B084;
  uint64_t v46 = &unk_26CD6F1D0;
  uint64_t v20 = _Block_copy(&aBlock);
  uint64_t v35 = a1;
  uint64_t v21 = v13;
  swift_retain();
  sub_21CB88120();
  uint64_t v22 = MEMORY[0x263F8EE78];
  uint64_t v42 = MEMORY[0x263F8EE78];
  uint64_t v23 = sub_21CA36540((unint64_t *)&qword_267C96FC0, MEMORY[0x263F8F030]);
  sub_21CA57E34((uint64_t *)&unk_267C96DD0);
  sub_21CA356BC((unint64_t *)&qword_267C96FD0, (uint64_t *)&unk_267C96DD0);
  uint64_t v24 = v38;
  v34[0] = v23;
  sub_21CB88A60();
  v34[1] = v19;
  MEMORY[0x21D4B5A20](0, v21, v11, v20);
  _Block_release(v20);
  uint64_t v25 = *(void (**)(char *, uint64_t))(v41 + 8);
  uint64_t v26 = v11;
  v41 += 8;
  v25(v11, v24);
  uint64_t v27 = v37;
  uint64_t v28 = *(void (**)(char *, uint64_t))(v40 + 8);
  v40 += 8;
  v28(v21, v37);
  uint64_t result = swift_release();
  if (!v39 && (v36 & 1) != 0)
  {
    uint64_t v30 = v22;
    uint64_t v31 = v35;
    *(void *)(v35 + 576) = 0;
    swift_bridgeObjectRelease();
    uint64_t v47 = sub_21CA330D8;
    uint64_t v48 = v31;
    uint64_t aBlock = MEMORY[0x263EF8330];
    uint64_t v44 = 1107296256;
    uint64_t v45 = sub_21CA1B084;
    uint64_t v46 = &unk_26CD6F1F8;
    uint64_t v32 = _Block_copy(&aBlock);
    swift_retain();
    sub_21CB88120();
    uint64_t v42 = v30;
    uint64_t v33 = v38;
    sub_21CB88A60();
    MEMORY[0x21D4B5A20](0, v21, v26, v32);
    _Block_release(v32);
    v25(v26, v33);
    v28(v21, v27);
    return swift_release();
  }
  return result;
}

uint64_t sub_21CB2894C(uint64_t a1)
{
  uint64_t result = MEMORY[0x21D4B6C80](a1 + 32);
  if (result)
  {
    uint64_t v3 = *(void *)(a1 + 40);
    uint64_t ObjectType = swift_getObjectType();
    sub_21CA57E34(&qword_267C95598);
    sub_21CB88910();
    uint64_t v5 = v9;
    uint64_t v6 = v10;
    uint64_t v7 = v11;
    v8[0] = v9;
    v8[1] = v10;
    v8[2] = v11;
    v8[3] = v12;
    (*(void (**)(void *, uint64_t, uint64_t))(v3 + 8))(v8, ObjectType, v3);
    swift_unknownObjectRelease();
    return sub_21CA59D84(v5, v6, v7);
  }
  return result;
}

uint64_t sub_21CB28A30(uint64_t a1, char a2)
{
  uint64_t v5 = sub_21CB88100();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15[0] = sub_21CB88150();
  uint64_t v9 = *(void *)(v15[0] - 8);
  MEMORY[0x270FA5388](v15[0]);
  uint64_t v11 = (char *)v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21CA26A4C(a1, (uint64_t)v17, &qword_267C95CF0);
  uint64_t v12 = swift_allocObject();
  *(unsigned char *)(v12 + 16) = a2;
  *(void *)(v12 + 24) = v2;
  sub_21CA26A4C((uint64_t)v17, v12 + 32, &qword_267C95CF0);
  aBlock[4] = sub_21CB2C178;
  void aBlock[5] = v12;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_21CA1B084;
  uint64_t aBlock[3] = &unk_26CD6F248;
  uint64_t v13 = _Block_copy(aBlock);
  swift_retain();
  sub_21CA62580(v17);
  sub_21CB88120();
  v15[1] = MEMORY[0x263F8EE78];
  sub_21CA36540((unint64_t *)&qword_267C96FC0, MEMORY[0x263F8F030]);
  sub_21CA57E34((uint64_t *)&unk_267C96DD0);
  sub_21CA356BC((unint64_t *)&qword_267C96FD0, (uint64_t *)&unk_267C96DD0);
  sub_21CB88A60();
  MEMORY[0x21D4B5A20](0, v11, v8, v13);
  _Block_release(v13);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  (*(void (**)(char *, void))(v9 + 8))(v11, v15[0]);
  return swift_release();
}

void sub_21CB28D28(char a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v6 = sub_21CB88100();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_21CB88150();
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    uint64_t v22 = v14;
    uint64_t v23 = v9;
    uint64_t v15 = *(void *)(a2 + 536);
    uint64_t v16 = *(void *)(v15 + 72);
    uint64_t v26 = v7;
    uint64_t v27 = v11;
    uint64_t v24 = v6;
    uint64_t v25 = v12;
    sub_21CA26A4C((uint64_t)a3, v15 + 72, &qword_267C95CF0);
    sub_21CA62580(a3);
    sub_21CA2D658(v16);
    aBlock[4] = sub_21CB2C188;
    void aBlock[5] = a2;
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_21CA1B084;
    uint64_t aBlock[3] = &unk_26CD6F270;
    uint64_t v17 = _Block_copy(aBlock);
    swift_retain();
    uint64_t v18 = v22;
    sub_21CB88120();
    uint64_t v28 = MEMORY[0x263F8EE78];
    sub_21CA36540((unint64_t *)&qword_267C96FC0, MEMORY[0x263F8F030]);
    sub_21CA57E34((uint64_t *)&unk_267C96DD0);
    sub_21CA356BC((unint64_t *)&qword_267C96FD0, (uint64_t *)&unk_267C96DD0);
    uint64_t v19 = v23;
    uint64_t v20 = v24;
    sub_21CB88A60();
    MEMORY[0x21D4B5A20](0, v18, v19, v17);
    _Block_release(v17);
    (*(void (**)(char *, uint64_t))(v26 + 8))(v19, v20);
    (*(void (**)(char *, uint64_t))(v25 + 8))(v18, v27);
    swift_release();
  }
}

uint64_t sub_21CB29048(uint64_t a1)
{
  uint64_t result = MEMORY[0x21D4B6C80](a1 + 32);
  if (result)
  {
    uint64_t v4 = *(void *)(a1 + 40);
    uint64_t ObjectType = swift_getObjectType();
    sub_21CA57E34(&qword_267C95CF0);
    sub_21CB88910();
    uint64_t v3 = v8;
    v6[0] = v8;
    v6[1] = v9;
    uint64_t v6[2] = v10;
    v6[3] = v11;
    v6[4] = v12;
    _OWORD v6[5] = v13;
    void v6[6] = v14;
    char v7 = v15;
    (*(void (**)(void *, uint64_t))(v4 + 24))(v6, ObjectType);
    swift_unknownObjectRelease();
    return sub_21CA2D658(v3);
  }
  return result;
}

uint64_t FMFPendingUpdateReason.hash(into:)()
{
  switch(*v0)
  {
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      uint64_t result = sub_21CB89060();
      break;
    default:
      sub_21CB89060();
      uint64_t result = sub_21CB89070();
      break;
  }
  return result;
}

uint64_t FMFPendingUpdateReason.hashValue.getter()
{
  int v1 = *v0;
  sub_21CB89050();
  switch(v1)
  {
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      sub_21CB89060();
      break;
    default:
      sub_21CB89060();
      sub_21CB89070();
      break;
  }
  return sub_21CB89090();
}

uint64_t sub_21CB292E4()
{
  switch(*v0)
  {
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      uint64_t result = sub_21CB89060();
      break;
    default:
      sub_21CB89060();
      uint64_t result = sub_21CB89070();
      break;
  }
  return result;
}

uint64_t sub_21CB2938C()
{
  int v1 = *v0;
  sub_21CB89050();
  switch(v1)
  {
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      sub_21CB89060();
      break;
    default:
      sub_21CB89060();
      sub_21CB89070();
      break;
  }
  return sub_21CB89090();
}

uint64_t (*sub_21CB29464())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_21CB294B8()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_21CA59D84(v0[5], v0[6], v0[7]);
  sub_21CA2D658(v0[9]);

  return swift_deallocClassInstance();
}

uint64_t sub_21CB29524()
{
  return MEMORY[0x263F8EE78];
}

uint64_t sub_21CB29530()
{
  uint64_t v1 = *v0;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v0 = v1;
  if ((result & 1) == 0)
  {
    int64_t v3 = *(void *)(v1 + 16) + 1;
    return sub_21CA7C050(0, v3, 1);
  }
  return result;
}

uint64_t sub_21CB2958C(uint64_t result)
{
  unint64_t v2 = *(void *)(*(void *)v1 + 24);
  if (result + 1 > (uint64_t)(v2 >> 1)) {
    return sub_21CA7C050(v2 > 1, result + 1, 1);
  }
  return result;
}

uint64_t sub_21CB295B4(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  *(void *)(v5 + 16) = a1 + 1;
  uint64_t v6 = *(void *)(type metadata accessor for FMFLocationAlert() - 8);
  return sub_21CA591A4(a2, v5+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(void *)(v6 + 72) * a1, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
}

void (*sub_21CB29664(void *a1, uint64_t a2, uint64_t a3))(uint64_t a1)
{
  uint64_t v6 = malloc(0x58uLL);
  *a1 = v6;
  v6[8] = a3;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  swift_bridgeObjectRetain();
  v6[9] = sub_21CB29A1C(v6);
  v6[10] = sub_21CB29784(v6 + 4, a2, a3, isUniquelyReferenced_nonNull_native);
  return sub_21CB29710;
}

void sub_21CB29710(uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  unint64_t v2 = *(void (**)(void *, void))(*(void *)a1 + 72);
  (*(void (**)(void))(*(void *)a1 + 80))();
  swift_bridgeObjectRelease();
  v2(v1, 0);

  free(v1);
}

void (*sub_21CB29784(void *a1, uint64_t a2, uint64_t a3, char a4))(uint64_t **a1)
{
  uint64_t v5 = v4;
  uint64_t v10 = malloc(0x30uLL);
  *a1 = v10;
  v10[1] = a3;
  void v10[2] = v4;
  void *v10 = a2;
  uint64_t v11 = sub_21CA57E34(&qword_267C96F10);
  uint64_t v12 = malloc(*(void *)(*(void *)(v11 - 8) + 64));
  v10[3] = v12;
  uint64_t v13 = *v4;
  unint64_t v15 = sub_21CA5BCE0(a2, a3);
  *((unsigned char *)v10 + 40) = v14 & 1;
  uint64_t v16 = *(void *)(v13 + 16);
  BOOL v17 = (v14 & 1) == 0;
  uint64_t v18 = v16 + v17;
  if (__OFADD__(v16, v17))
  {
    __break(1u);
  }
  else
  {
    char v19 = v14;
    uint64_t v20 = *(void *)(v13 + 24);
    if (v20 >= v18 && (a4 & 1) != 0)
    {
LABEL_7:
      v10[4] = v15;
      if (v19)
      {
LABEL_8:
        uint64_t v21 = *(void *)(*v5 + 56);
        uint64_t v22 = type metadata accessor for FMFFriend();
        uint64_t v23 = *(void *)(v22 - 8);
        sub_21CA591A4(v21 + *(void *)(v23 + 72) * v15, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for FMFFriend);
        uint64_t v24 = 0;
LABEL_12:
        (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(v23 + 56))(v12, v24, 1, v22);
        return sub_21CB299B8;
      }
LABEL_11:
      uint64_t v22 = type metadata accessor for FMFFriend();
      uint64_t v23 = *(void *)(v22 - 8);
      uint64_t v24 = 1;
      goto LABEL_12;
    }
    if (v20 >= v18 && (a4 & 1) == 0)
    {
      sub_21CB858E4();
      goto LABEL_7;
    }
    sub_21CB81BCC(v18, a4 & 1);
    unint64_t v25 = sub_21CA5BCE0(a2, a3);
    if ((v19 & 1) == (v26 & 1))
    {
      unint64_t v15 = v25;
      v10[4] = v25;
      if (v19) {
        goto LABEL_8;
      }
      goto LABEL_11;
    }
  }
  uint64_t result = (void (*)(uint64_t **))sub_21CB88FA0();
  __break(1u);
  return result;
}

void sub_21CB299B8(uint64_t **a1)
{
  uint64_t v1 = *a1;
  unint64_t v2 = (void *)(*a1)[3];
  sub_21CB29A58((uint64_t)v2, *((unsigned char *)*a1 + 40), (uint64_t *)(*a1)[2], (*a1)[4], **a1, (*a1)[1]);
  sub_21CA1B88C((uint64_t)v2, &qword_267C96F10);
  free(v2);

  free(v1);
}

uint64_t (*sub_21CB29A1C(void *a1))(uint64_t result)
{
  *a1 = *v1;
  a1[1] = v1;
  *uint64_t v1 = 0x8000000000000000;
  return sub_21CB29A4C;
}

uint64_t sub_21CB29A4C(uint64_t result)
{
  **(void **)(result + 8) = *(void *)result;
  return result;
}

unint64_t sub_21CB29A58(uint64_t a1, char a2, uint64_t *a3, unint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v22 = a5;
  uint64_t v23 = a6;
  uint64_t v10 = sub_21CA57E34(&qword_267C96F10);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for FMFFriend();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  BOOL v17 = (char *)&v22 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  char v19 = (char *)&v22 - v18;
  sub_21CA24E80(a1, (uint64_t)v12, &qword_267C96F10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    unint64_t result = sub_21CA1B88C((uint64_t)v12, &qword_267C96F10);
    if (a2)
    {
      swift_arrayDestroy();
      return sub_21CB834F0(a4, *a3);
    }
  }
  else
  {
    sub_21CA591A4((uint64_t)v12, (uint64_t)v19, (uint64_t (*)(void))type metadata accessor for FMFFriend);
    uint64_t v21 = (void *)*a3;
    if (a2)
    {
      return sub_21CA591A4((uint64_t)v19, v21[7] + *(void *)(v14 + 72) * a4, (uint64_t (*)(void))type metadata accessor for FMFFriend);
    }
    else
    {
      sub_21CA591A4((uint64_t)v19, (uint64_t)v17, (uint64_t (*)(void))type metadata accessor for FMFFriend);
      sub_21CB849E8(a4, v22, v23, (uint64_t)v17, v21);
      return swift_bridgeObjectRetain();
    }
  }
  return result;
}

char *sub_21CB29CA0(uint64_t a1, int64_t a2, uint64_t a3, uint64_t a4)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v6 = *(void **)v4;
  int64_t v7 = *(void *)(*(void *)v4 + 16);
  if (v7 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v9 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v10 = 1 - v9;
  if (__OFSUB__(1, v9))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  int64_t v11 = v7 + v10;
  if (__OFADD__(v7, v10))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v11 > v6[3] >> 1)
  {
    if (v7 <= v11) {
      int64_t v15 = v7 + v10;
    }
    else {
      int64_t v15 = v7;
    }
    uint64_t v6 = sub_21CAC7864(isUniquelyReferenced_nonNull_native, v15, 1, v6);
  }
  uint64_t v16 = &v6[2 * a1 + 4];
  unint64_t result = (char *)swift_arrayDestroy();
  if (!v10) {
    goto LABEL_20;
  }
  uint64_t v18 = v6[2];
  BOOL v19 = __OFSUB__(v18, a2);
  uint64_t v20 = v18 - a2;
  if (v19) {
    goto LABEL_26;
  }
  if ((v20 & 0x8000000000000000) == 0)
  {
    unint64_t result = (char *)(v16 + 2);
    uint64_t v21 = &v6[2 * a2 + 4];
    if (v16 + 2 != v21 || result >= (char *)&v21[2 * v20]) {
      unint64_t result = (char *)memmove(result, v21, 16 * v20);
    }
    uint64_t v22 = v6[2];
    BOOL v19 = __OFADD__(v22, v10);
    uint64_t v23 = v22 + v10;
    if (!v19)
    {
      uint64_t v6[2] = v23;
LABEL_20:
      *uint64_t v16 = a3;
      v16[1] = a4;
      *(void *)uint64_t v4 = v6;
      return result;
    }
    goto LABEL_27;
  }
LABEL_28:
  unint64_t result = (char *)sub_21CB88D50();
  __break(1u);
  return result;
}

uint64_t _s7FMFCore22FMFPendingUpdateReasonO2eeoiySbAC_ACtFZ_0(unsigned char *a1, unsigned __int8 *a2)
{
  int v2 = *a2;
  switch(*a1)
  {
    case 2:
      if (v2 != 2) {
        goto LABEL_13;
      }
      goto LABEL_11;
    case 3:
      if (v2 != 3) {
        goto LABEL_13;
      }
      goto LABEL_11;
    case 4:
      if (v2 != 4) {
        goto LABEL_13;
      }
      goto LABEL_11;
    case 5:
      if (v2 != 5) {
        goto LABEL_13;
      }
      goto LABEL_11;
    case 6:
      if (v2 != 6) {
        goto LABEL_13;
      }
LABEL_11:
      uint64_t result = 1;
      break;
    default:
      if ((v2 - 2) >= 5) {
        uint64_t result = (((*a1 & 1) == 0) ^ v2) & 1;
      }
      else {
LABEL_13:
      }
        uint64_t result = 0;
      break;
  }
  return result;
}

unint64_t sub_21CB29EDC()
{
  unint64_t result = qword_267C97200;
  if (!qword_267C97200)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C97200);
  }
  return result;
}

uint64_t sub_21CB29F30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t sub_21CB29F44()
{
  if (MEMORY[0x263F8EEE0]) {
    return sub_21CA57E34(&qword_267C97208);
  }
  else {
    return MEMORY[0x263F8EE60] + 8;
  }
}

uint64_t getEnumTagSinglePayload for FMFPendingUpdateReason(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFA)
  {
    unsigned int v2 = a2 + 6;
    if (a2 + 6 >= 0xFFFF00) {
      unsigned int v3 = 4;
    }
    else {
      unsigned int v3 = 2;
    }
    if (v2 >> 8 < 0xFF) {
      unsigned int v3 = 1;
    }
    if (v2 >= 0x100) {
      uint64_t v4 = v3;
    }
    else {
      uint64_t v4 = 0;
    }
    switch(v4)
    {
      case 1:
        int v5 = a1[1];
        if (!a1[1]) {
          break;
        }
        return (*a1 | (v5 << 8)) - 6;
      case 2:
        int v5 = *(unsigned __int16 *)(a1 + 1);
        if (*(_WORD *)(a1 + 1)) {
          return (*a1 | (v5 << 8)) - 6;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x21CB2A01CLL);
      case 4:
        int v5 = *(_DWORD *)(a1 + 1);
        if (!v5) {
          break;
        }
        return (*a1 | (v5 << 8)) - 6;
      default:
        break;
    }
  }
  unsigned int v7 = *a1;
  if (v7 < 2) {
    return 0;
  }
  unsigned int v8 = (v7 + 2147483646) & 0x7FFFFFFF;
  uint64_t result = v8 - 4;
  if (v8 <= 4) {
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for FMFPendingUpdateReason(unsigned char *result, unsigned int a2, unsigned int a3)
{
  unsigned int v3 = a3 + 6;
  if (a3 + 6 >= 0xFFFF00) {
    int v4 = 4;
  }
  else {
    int v4 = 2;
  }
  if (v3 >> 8 < 0xFF) {
    int v4 = 1;
  }
  if (v3 >= 0x100) {
    unsigned int v5 = v4;
  }
  else {
    unsigned int v5 = 0;
  }
  if (a3 >= 0xFA) {
    uint64_t v6 = v5;
  }
  else {
    uint64_t v6 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v7 = ((a2 - 250) >> 8) + 1;
    *uint64_t result = a2 + 6;
    switch(v6)
    {
      case 1:
        result[1] = v7;
        break;
      case 2:
        *(_WORD *)(result + 1) = v7;
        break;
      case 3:
LABEL_25:
        __break(1u);
        JUMPOUT(0x21CB2A104);
      case 4:
        *(_DWORD *)(result + 1) = v7;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v6)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_19;
      case 3:
        goto LABEL_25;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      default:
LABEL_19:
        if (a2) {
LABEL_20:
        }
          *uint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

uint64_t sub_21CB2A12C(unsigned __int8 *a1)
{
  unsigned int v1 = *a1;
  BOOL v2 = v1 >= 2;
  int v3 = (v1 + 2147483646) & 0x7FFFFFFF;
  if (v2) {
    return (v3 + 1);
  }
  else {
    return 0;
  }
}

unsigned char *sub_21CB2A148(unsigned char *result, int a2)
{
  if (a2) {
    *uint64_t result = a2 + 1;
  }
  return result;
}

uint64_t sub_21CB2A164()
{
  return sub_21CB2646C(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_21CB2A16C()
{
  return sub_21CA33108(v0);
}

uint64_t sub_21CB2A19C()
{
  return sub_21CB26124(v0);
}

uint64_t sub_21CB2A1A4()
{
  return sub_21CB2BCA8(41);
}

uint64_t sub_21CB2A1AC()
{
  return sub_21CB27028(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(unsigned __int8 *)(v0 + 40));
}

uint64_t sub_21CB2A1BC()
{
  unsigned int v1 = (int *)type metadata accessor for FMFFriend();
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v4 = *(void *)(*((void *)v1 - 1) + 64);
  swift_release();
  uint64_t v5 = v0 + v3;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v6 = v0 + v3 + v1[8];
  uint64_t v7 = sub_21CB87590();
  uint64_t v8 = *(void *)(v7 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7)) {
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v5 + v1[19] + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v9 = v5 + v1[20];
  uint64_t v10 = type metadata accessor for FMFLocation();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48))(v9, 1, v10))
  {
    swift_bridgeObjectRelease();
    uint64_t v11 = v9 + *(int *)(v10 + 32);
    uint64_t v12 = sub_21CB875D0();
    uint64_t v13 = *(void *)(v12 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12)) {
      (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v11, v12);
    }
    uint64_t v14 = v9 + *(int *)(v10 + 44);
    int64_t v15 = *(void **)(v14 + 304);
    if (v15)
    {
      if (*(void *)(v14 + 168))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        int64_t v15 = *(void **)(v14 + 304);
      }

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }

  return MEMORY[0x270FA0238](v0, v4 + v3 + 1, v2 | 7);
}

uint64_t sub_21CB2A4F8()
{
  uint64_t v1 = *(void *)(type metadata accessor for FMFFriend() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(void *)(v0 + 16);
  int v4 = *(unsigned __int8 *)(v0 + v2 + *(void *)(v1 + 64));

  return sub_21CB26AD8(v3, (uint64_t *)(v0 + v2), v4);
}

uint64_t sub_21CB2A580()
{
  return sub_21CB24870(v0);
}

uint64_t sub_21CB2A5C4()
{
  return sub_21CB24870(v0);
}

uint64_t sub_21CB2A608(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_21CB2A664()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 112))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (*(void *)(v0 + 384))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 480, 7);
}

double sub_21CB2A73C(uint64_t a1)
{
  *(void *)(a1 + 448) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 416) = 0u;
  *(_OWORD *)(a1 + 432) = 0u;
  *(_OWORD *)(a1 + 384) = 0u;
  *(_OWORD *)(a1 + 400) = 0u;
  *(_OWORD *)(a1 + 352) = 0u;
  *(_OWORD *)(a1 + 368) = 0u;
  *(_OWORD *)(a1 + 320) = 0u;
  *(_OWORD *)(a1 + 336) = 0u;
  *(_OWORD *)(a1 + 288) = 0u;
  *(_OWORD *)(a1 + 304) = 0u;
  *(_OWORD *)(a1 + 256) = 0u;
  *(_OWORD *)(a1 + 272) = 0u;
  *(_OWORD *)(a1 + 224) = 0u;
  *(_OWORD *)(a1 + 240) = 0u;
  *(_OWORD *)(a1 + 192) = 0u;
  *(_OWORD *)(a1 + 208) = 0u;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 176) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return result;
}

uint64_t sub_21CB2A780()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_21CB2A7B8()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_21CB2A7C8(uint64_t a1)
{
  long long v10 = *(_OWORD *)(a1 + 352);
  long long v8 = *(_OWORD *)(a1 + 320);
  long long v9 = *(_OWORD *)(a1 + 336);
  long long v6 = *(_OWORD *)(a1 + 288);
  long long v7 = *(_OWORD *)(a1 + 304);
  long long v4 = *(_OWORD *)(a1 + 256);
  long long v5 = *(_OWORD *)(a1 + 272);
  long long v3 = *(_OWORD *)(a1 + 224);
  sub_21CA0D148(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
    *(void *)(a1 + 152),
    *(void *)(a1 + 160),
    *(void *)(a1 + 168),
    *(void *)(a1 + 176),
    *(void *)(a1 + 184),
    *(void *)(a1 + 192),
    *(void *)(a1 + 200),
    *(void *)(a1 + 208),
    *(void *)(a1 + 216),
    v3,
    *((uint64_t *)&v3 + 1),
    *(void *)(a1 + 240),
    *(void *)(a1 + 248),
    v4,
    *((uint64_t *)&v4 + 1),
    v5,
    *((uint64_t *)&v5 + 1),
    v6,
    *((uint64_t *)&v6 + 1),
    v7,
    *((uint64_t *)&v7 + 1),
    v8,
    *((uint64_t *)&v8 + 1),
    v9,
    *((uint64_t *)&v9 + 1),
    v10,
    *((uint64_t *)&v10 + 1));
  return a1;
}

uint64_t sub_21CB2A874()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_21CB2A8AC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v55 = a2;
  uint64_t v54 = sub_21CA57E34(&qword_267C97288);
  uint64_t v5 = MEMORY[0x270FA5388](v54);
  uint64_t v53 = (uint64_t)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  BOOL v52 = (uint64_t *)((char *)&v44 - v8);
  MEMORY[0x270FA5388](v7);
  uint64_t v51 = (char *)&v44 - v9;
  uint64_t v10 = type metadata accessor for FMFFriend();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v13 = (uint64_t *)((char *)&v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  int64_t v14 = *(void *)(a1 + 16);
  uint64_t v15 = MEMORY[0x263F8EE78];
  if (!v14) {
    return v15;
  }
  uint64_t v60 = MEMORY[0x263F8EE78];
  sub_21CA47FE8(0, v14, 0);
  uint64_t result = sub_21CA44D4C(a1);
  uint64_t v18 = result;
  uint64_t v19 = 0;
  uint64_t v20 = a1 + 64;
  char v21 = *(unsigned char *)(a1 + 32);
  uint64_t v44 = a1 + 80;
  int64_t v45 = v14;
  uint64_t v48 = v11;
  uint64_t v49 = a1;
  uint64_t v50 = v13;
  uint64_t v46 = v17;
  uint64_t v47 = a1 + 64;
  uint64_t v22 = v54;
  while ((v18 & 0x8000000000000000) == 0 && v18 < 1 << v21)
  {
    unint64_t v25 = (unint64_t)v18 >> 6;
    if ((*(void *)(v20 + 8 * ((unint64_t)v18 >> 6)) & (1 << v18)) == 0) {
      goto LABEL_27;
    }
    if (*(_DWORD *)(a1 + 36) != v17) {
      goto LABEL_28;
    }
    uint64_t v56 = v19;
    uint64_t v57 = 1 << v18;
    char v26 = v51;
    uint64_t v27 = (uint64_t)&v51[*(int *)(v22 + 48)];
    uint64_t v28 = *(void *)(a1 + 56);
    uint64_t v29 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v18);
    uint64_t v59 = v3;
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    uint64_t v58 = *(void *)(v11 + 72);
    sub_21CA571E8(v28 + v58 * v18, v27, (uint64_t (*)(void))type metadata accessor for FMFFriend);
    *char v26 = v31;
    v26[1] = v30;
    uint64_t v32 = (uint64_t)v52;
    *BOOL v52 = v31;
    *(void *)(v32 + 8) = v30;
    sub_21CA571E8(v27, v32 + *(int *)(v22 + 48), (uint64_t (*)(void))type metadata accessor for FMFFriend);
    uint64_t v33 = v53;
    sub_21CA26A4C(v32, v53, &qword_267C97288);
    swift_bridgeObjectRetain_n();
    uint64_t v34 = (uint64_t)v26;
    uint64_t v35 = v50;
    sub_21CA1B88C(v34, &qword_267C97288);
    uint64_t v36 = v59;
    sub_21CA44538(v33, v55, v35);
    uint64_t v3 = v36;
    sub_21CA1B88C(v33, &qword_267C97288);
    uint64_t v15 = v60;
    if (v36)
    {
      swift_release();
      return v15;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_21CA47FE8(0, *(void *)(v15 + 16) + 1, 1);
      uint64_t v15 = v60;
    }
    uint64_t v11 = v48;
    unint64_t v38 = *(void *)(v15 + 16);
    unint64_t v37 = *(void *)(v15 + 24);
    if (v38 >= v37 >> 1)
    {
      sub_21CA47FE8(v37 > 1, v38 + 1, 1);
      uint64_t v15 = v60;
    }
    *(void *)(v15 + 16) = v38 + 1;
    uint64_t result = sub_21CA591A4((uint64_t)v35, v15+ ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80))+ v38 * v58, (uint64_t (*)(void))type metadata accessor for FMFFriend);
    a1 = v49;
    char v21 = *(unsigned char *)(v49 + 32);
    unint64_t v23 = 1 << v21;
    if (v18 >= 1 << v21) {
      goto LABEL_29;
    }
    uint64_t v20 = v47;
    uint64_t v39 = *(void *)(v47 + 8 * v25);
    if ((v39 & v57) == 0) {
      goto LABEL_30;
    }
    LODWORD(v17) = v46;
    if (*(_DWORD *)(v49 + 36) != v46) {
      goto LABEL_31;
    }
    unint64_t v40 = v39 & (-2 << (v18 & 0x3F));
    if (v40)
    {
      unint64_t v23 = __clz(__rbit64(v40)) | v18 & 0xFFFFFFFFFFFFFFC0;
      int64_t v24 = v45;
    }
    else
    {
      unint64_t v41 = v25 + 1;
      unint64_t v42 = (v23 + 63) >> 6;
      int64_t v24 = v45;
      if (v25 + 1 < v42)
      {
        unint64_t v43 = *(void *)(v47 + 8 * v41);
        if (v43)
        {
LABEL_23:
          unint64_t v23 = __clz(__rbit64(v43)) + (v41 << 6);
        }
        else
        {
          while (v42 - 2 != v25)
          {
            unint64_t v43 = *(void *)(v44 + 8 * v25++);
            if (v43)
            {
              unint64_t v41 = v25 + 1;
              goto LABEL_23;
            }
          }
        }
      }
    }
    uint64_t v19 = v56 + 1;
    uint64_t v18 = v23;
    if (v56 + 1 == v24) {
      return v15;
    }
  }
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_21CB2ACF0()
{
  return sub_21CB25C4C();
}

uint64_t sub_21CB2AD0C()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

unsigned char **sub_21CB2AD1C(unsigned char **a1, uint64_t a2, uint64_t a3)
{
  return sub_21CA6A0D8(a1, a2, a3, *(unsigned char *)(v3 + 16));
}

uint64_t sub_21CB2AD24()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_21CB2AD34()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_21CB2AD6C()
{
  return sub_21CA73CB8(*(uint64_t (**)(void))(v0 + 16));
}

void sub_21CB2AD74(uint64_t *a1, void **a2, uint64_t a3)
{
  sub_21CB38A88(a1, a2, a3, *(uint64_t (**)(void))(v3 + 16));
}

uint64_t sub_21CB2AD7C()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_21CB2AD8C()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_21CB2AD9C(uint64_t a1, uint64_t *a2)
{
  uint64_t v39 = a2;
  uint64_t v4 = type metadata accessor for FMFLocationAlert();
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x270FA5388](v5);
  unint64_t v41 = (char *)&v36 - v9;
  MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v36 - v11;
  uint64_t result = MEMORY[0x263F8EE78];
  uint64_t v46 = MEMORY[0x263F8EE78];
  uint64_t v43 = *(void *)(a1 + 16);
  if (!v43) {
    return result;
  }
  uint64_t v40 = v2;
  uint64_t v14 = 0;
  uint64_t v15 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v44 = *(void *)(v10 + 72);
  uint64_t v37 = (v15 + 32) & ~v15;
  uint64_t v42 = a1 + v37;
  uint64_t v16 = MEMORY[0x263F8EE78];
  uint64_t v17 = (uint64_t)v41;
  unint64_t v38 = (char *)&v36 - v11;
  while (1)
  {
    sub_21CA571E8(v42 + v44 * v14, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
    uint64_t v18 = *(void **)&v12[*(int *)(v4 + 72)];
    uint64_t v45 = v16;
    if (v18)
    {
      uint64_t v19 = v18[2];
      if (v19)
      {
        uint64_t v20 = *v39;
        uint64_t v21 = v39[1];
        BOOL v22 = v18[4] == *v39 && v18[5] == v21;
        if (v22 || (uint64_t result = sub_21CB88F50(), (result & 1) != 0))
        {
LABEL_27:
          uint64_t v16 = v45;
          sub_21CA571E8((uint64_t)v12, v17, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
          sub_21CA57050(v17, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
LABEL_28:
          sub_21CA591A4((uint64_t)v12, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_21CA7C050(0, *(void *)(v16 + 16) + 1, 1);
            uint64_t v17 = (uint64_t)v41;
          }
          uint64_t v16 = v46;
          unint64_t v35 = *(void *)(v46 + 16);
          unint64_t v34 = *(void *)(v46 + 24);
          if (v35 >= v34 >> 1)
          {
            sub_21CA7C050(v34 > 1, v35 + 1, 1);
            uint64_t v17 = (uint64_t)v41;
            uint64_t v16 = v46;
          }
          *(void *)(v16 + 16) = v35 + 1;
          sub_21CA591A4((uint64_t)v7, v16 + v37 + v35 * v44, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
          goto LABEL_5;
        }
        if (v19 != 1) {
          break;
        }
      }
    }
LABEL_23:
    uint64_t v12 = v38;
    sub_21CA571E8((uint64_t)v38, v17, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
    if (*(void *)(v17 + *(int *)(v4 + 68)))
    {
      uint64_t v29 = v39[4];
      swift_bridgeObjectRetain();
      uint64_t v30 = swift_bridgeObjectRetain();
      uint64_t v31 = v40;
      uint64_t v32 = sub_21CB21238(v30, v29);
      uint64_t v40 = v31;
      uint64_t v33 = *(void *)(v32 + 16);
      swift_bridgeObjectRelease();
      sub_21CA57050(v17, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
      uint64_t v16 = v45;
      if (v33) {
        goto LABEL_28;
      }
    }
    else
    {
      sub_21CA57050(v17, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
      uint64_t v16 = v45;
    }
    sub_21CA57050((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for FMFLocationAlert);
LABEL_5:
    if (++v14 == v43) {
      return v46;
    }
  }
  unint64_t v23 = v18 + 7;
  uint64_t v24 = 1;
  while (1)
  {
    unint64_t v25 = v7;
    uint64_t v26 = v4;
    uint64_t v27 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    BOOL v28 = *(v23 - 1) == v20 && *v23 == v21;
    if (v28 || (uint64_t result = sub_21CB88F50(), (result & 1) != 0))
    {
      uint64_t v4 = v26;
      uint64_t v7 = v25;
      uint64_t v17 = (uint64_t)v41;
      uint64_t v12 = v38;
      goto LABEL_27;
    }
    v23 += 2;
    ++v24;
    BOOL v22 = v27 == v19;
    uint64_t v4 = v26;
    uint64_t v7 = v25;
    uint64_t v17 = (uint64_t)v41;
    if (v22) {
      goto LABEL_23;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_21CB2B1B0()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_21CB2B1C0()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_21CB2B1D0()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_21CB2B1E0()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_21CB2B1F0()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_21CB2B200()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_21CB2B210()
{
  uint64_t v1 = (int *)type metadata accessor for FMFFriend();
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*((void *)v1 - 1) + 64);
  uint64_t v5 = v0 + v3;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v6 = v0 + v3 + v1[8];
  uint64_t v7 = sub_21CB87590();
  uint64_t v8 = *(void *)(v7 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7)) {
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v5 + v1[19] + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v9 = v5 + v1[20];
  uint64_t v10 = type metadata accessor for FMFLocation();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48))(v9, 1, v10))
  {
    swift_bridgeObjectRelease();
    uint64_t v11 = v9 + *(int *)(v10 + 32);
    uint64_t v12 = sub_21CB875D0();
    uint64_t v13 = *(void *)(v12 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12)) {
      (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v11, v12);
    }
    uint64_t v14 = v9 + *(int *)(v10 + 44);
    uint64_t v15 = *(void **)(v14 + 304);
    if (v15)
    {
      if (*(void *)(v14 + 168))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v15 = *(void **)(v14 + 304);
      }

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }

  return MEMORY[0x270FA0238](v0, v3 + v4, v2 | 7);
}

unint64_t sub_21CB2B540()
{
  return FMFFriend.name.getter();
}

uint64_t sub_21CB2B59C()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_21CB2B5AC()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_21CB2B5BC()
{
  return sub_21CA6A038(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_21CB2B5C4(uint64_t *a1, uint64_t a2, uint64_t *a3)
{
  return sub_21CA6A060(a1, a2, a3, *(uint64_t (**)(void))(v3 + 16));
}

uint64_t sub_21CB2B5D0()
{
  return sub_21CB25950(*(void *)(v0 + 16));
}

uint64_t sub_21CB2B5DC()
{
  return sub_21CB2BCA8(40);
}

uint64_t sub_21CB2B5E4()
{
  return sub_21CB233BC(v0[2], v0[3], v0[4]);
}

uint64_t sub_21CB2B5F0(uint64_t a1, int64_t a2)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_27;
  }
  unint64_t v4 = *v2;
  int64_t v5 = *(void *)(*v2 + 16);
  if (v5 < a2)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  uint64_t v7 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  uint64_t v8 = a1 - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  int64_t v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v9 > *(void *)(v4 + 24) >> 1)
  {
    if (v5 <= v9) {
      int64_t v11 = v5 + v8;
    }
    else {
      int64_t v11 = v5;
    }
    unint64_t v4 = sub_21CA47FB4(isUniquelyReferenced_nonNull_native, v11, 1, v4);
  }
  uint64_t v12 = *(void *)(type metadata accessor for FMFLocation() - 8);
  unint64_t v13 = v4 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
  uint64_t v14 = *(void *)(v12 + 72);
  uint64_t v15 = v14 * a1;
  unint64_t v16 = v13 + v14 * a1;
  uint64_t result = swift_arrayDestroy();
  if (!v7) {
    goto LABEL_25;
  }
  uint64_t v18 = *(void *)(v4 + 16);
  uint64_t v19 = v18 - a2;
  if (__OFSUB__(v18, a2)) {
    goto LABEL_31;
  }
  if ((v19 & 0x8000000000000000) == 0)
  {
    if (v15 < v14 * a2 || v16 >= v13 + v14 * a2 + v19 * v14)
    {
      uint64_t result = swift_arrayInitWithTakeFrontToBack();
    }
    else if (v15 != v14 * a2)
    {
      uint64_t result = swift_arrayInitWithTakeBackToFront();
    }
    uint64_t v21 = *(void *)(v4 + 16);
    BOOL v22 = __OFADD__(v21, v8);
    uint64_t v23 = v21 - v7;
    if (!v22)
    {
      *(void *)(v4 + 16) = v23;
LABEL_25:
      *uint64_t v2 = v4;
      return result;
    }
    goto LABEL_32;
  }
LABEL_33:
  uint64_t result = sub_21CB88D50();
  __break(1u);
  return result;
}

uint64_t sub_21CB2B7D8(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v39 = a3;
  uint64_t v34 = a2;
  uint64_t v4 = type metadata accessor for FMFLocation() - 8;
  MEMORY[0x270FA5388](v4);
  uint64_t v33 = (uint64_t)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v32 = (uint64_t)&v29 - v7;
  MEMORY[0x270FA5388](v8);
  int64_t v11 = (uint64_t *)((char *)&v29 - v10);
  unint64_t v12 = *a1;
  uint64_t v13 = *(void *)(*a1 + 16);
  if (!v13) {
    return 0;
  }
  uint64_t v31 = a1;
  unint64_t v14 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v15 = *(void *)(v9 + 72);
  swift_bridgeObjectRetain();
  unint64_t v16 = 0;
  unint64_t v30 = v14;
  while (1)
  {
    uint64_t v17 = *(void *)(v12 + v14 + 8);
    if (v17)
    {
      uint64_t v37 = *(void *)(v12 + v14);
      uint64_t v38 = v17;
      uint64_t v35 = v34;
      uint64_t v36 = v39;
      sub_21CA4D63C();
      if (sub_21CB88A30()) {
        break;
      }
    }
    ++v16;
    v14 += v15;
    if (v13 == v16)
    {
      swift_bridgeObjectRelease();
      return *(void *)(v12 + 16);
    }
  }
  uint64_t result = swift_bridgeObjectRelease();
  if (__OFADD__(v16, 1)) {
    goto LABEL_38;
  }
  unint64_t v19 = *(void *)(v12 + 16);
  if (v16 + 1 == v19) {
    return v16;
  }
  uint64_t v20 = v15 + v14;
  unint64_t v21 = v16 + 1;
  BOOL v22 = v31;
  while (v21 < v19)
  {
    sub_21CA571E8(v12 + v20, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for FMFLocation);
    uint64_t v23 = v11[1];
    if (!v23)
    {
      uint64_t result = sub_21CA57050((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for FMFLocation);
      if (v21 == v16) {
        goto LABEL_23;
      }
LABEL_15:
      if ((v16 & 0x8000000000000000) != 0) {
        goto LABEL_33;
      }
      unint64_t v25 = *v22;
      unint64_t v26 = *(void *)(*v22 + 16);
      if (v16 >= v26) {
        goto LABEL_34;
      }
      uint64_t result = sub_21CA571E8(v25 + v30 + v16 * v15, v32, (uint64_t (*)(void))type metadata accessor for FMFLocation);
      if (v21 >= v26) {
        goto LABEL_35;
      }
      sub_21CA571E8(v25 + v20, v33, (uint64_t (*)(void))type metadata accessor for FMFLocation);
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      *uint64_t v31 = v25;
      if ((result & 1) == 0)
      {
        uint64_t result = sub_21CB4C378(v25);
        unint64_t v25 = result;
        *uint64_t v31 = result;
      }
      if (v16 >= *(void *)(v25 + 16)) {
        goto LABEL_36;
      }
      uint64_t result = sub_21CA5C95C(v33, v25 + v30 + v16 * v15, (uint64_t (*)(void))type metadata accessor for FMFLocation);
      BOOL v22 = v31;
      if (v21 >= *(void *)(*v31 + 16)) {
        goto LABEL_37;
      }
      uint64_t result = sub_21CA5C95C(v32, *v31 + v20, (uint64_t (*)(void))type metadata accessor for FMFLocation);
      goto LABEL_23;
    }
    uint64_t v37 = *v11;
    uint64_t v38 = v23;
    uint64_t v35 = v34;
    uint64_t v36 = v39;
    char v24 = sub_21CB88A30();
    uint64_t result = sub_21CA57050((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for FMFLocation);
    if (v24) {
      goto LABEL_24;
    }
    if (v21 != v16) {
      goto LABEL_15;
    }
LABEL_23:
    if (__OFADD__(v16++, 1)) {
      goto LABEL_32;
    }
LABEL_24:
    unint64_t v28 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      goto LABEL_31;
    }
    unint64_t v12 = *v22;
    unint64_t v19 = *(void *)(*v22 + 16);
    ++v21;
    v20 += v15;
    if (v28 == v19) {
      return v16;
    }
  }
  __break(1u);
LABEL_31:
  __break(1u);
LABEL_32:
  __break(1u);
LABEL_33:
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
  return result;
}

uint64_t sub_21CB2BBCC()
{
  swift_release();
  if (*(void *)(v0 + 24))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

  return MEMORY[0x270FA0238](v0, 81, 7);
}

uint64_t sub_21CB2BC28()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 264, 7);
}

uint64_t sub_21CB2BC60()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 33, 7);
}

uint64_t sub_21CB2BC98()
{
  return sub_21CB2C0A8(56);
}

uint64_t sub_21CB2BCA0()
{
  return sub_21CB2BCA8(41);
}

uint64_t sub_21CB2BCA8(uint64_t a1)
{
  swift_release();
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v1, a1, 7);
}

uint64_t sub_21CB2BCF4()
{
  return sub_21CB27E94(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(unsigned char *)(v0 + 40));
}

uint64_t sub_21CB2BD04()
{
  uint64_t v1 = (int *)type metadata accessor for FMFFriend();
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v4 = *(void *)(*((void *)v1 - 1) + 64);
  swift_release();
  uint64_t v5 = v0 + v3;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v6 = v0 + v3 + v1[8];
  uint64_t v7 = sub_21CB87590();
  uint64_t v8 = *(void *)(v7 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7)) {
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v5 + v1[19] + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v9 = v5 + v1[20];
  uint64_t v10 = type metadata accessor for FMFLocation();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48))(v9, 1, v10))
  {
    swift_bridgeObjectRelease();
    uint64_t v11 = v9 + *(int *)(v10 + 32);
    uint64_t v12 = sub_21CB875D0();
    uint64_t v13 = *(void *)(v12 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12)) {
      (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v11, v12);
    }
    uint64_t v14 = v9 + *(int *)(v10 + 44);
    uint64_t v15 = *(void **)(v14 + 304);
    if (v15)
    {
      if (*(void *)(v14 + 168))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v15 = *(void **)(v14 + 304);
      }

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }

  return MEMORY[0x270FA0238](v0, v3 + v4, v2 | 7);
}

uint64_t sub_21CB2C03C()
{
  uint64_t v1 = *(void *)(type metadata accessor for FMFFriend() - 8);
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = (uint64_t *)(v0 + ((*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80)));

  return sub_21CB277FC(v2, v3);
}

uint64_t sub_21CB2C0A0()
{
  return sub_21CB2C0A8(57);
}

uint64_t sub_21CB2C0A8(uint64_t a1)
{
  swift_release();
  if (*(void *)(v1 + 40))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

  return MEMORY[0x270FA0238](v1, a1, 7);
}

uint64_t sub_21CB2C100()
{
  return sub_21CB2850C(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(unsigned __int8 *)(v0 + 56));
}

uint64_t sub_21CB2C114()
{
  return sub_21CB2894C(v0);
}

uint64_t sub_21CB2C11C()
{
  swift_release();
  if (*(void *)(v0 + 32))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

  return MEMORY[0x270FA0238](v0, 89, 7);
}

void sub_21CB2C178()
{
  sub_21CB28D28(*(unsigned char *)(v0 + 16), *(void *)(v0 + 24), (uint64_t *)(v0 + 32));
}

uint64_t sub_21CB2C188()
{
  return sub_21CB29048(v0);
}

uint64_t sub_21CB2C190()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

unint64_t sub_21CB2C1A0()
{
  unint64_t result = qword_267C972A0;
  if (!qword_267C972A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C972A0);
  }
  return result;
}

uint64_t FMFStopSharingAction.__allocating_init(friend:)(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  sub_21CAD9D08(a1, v2 + OBJC_IVAR____TtC7FMFCore20FMFStopSharingAction_friend);
  *(unsigned char *)(v2 + 16) = 1;
  return v2;
}

uint64_t FMFStopSharingAction.init(friend:)(uint64_t a1)
{
  sub_21CAD9D08(a1, v1 + OBJC_IVAR____TtC7FMFCore20FMFStopSharingAction_friend);
  *(unsigned char *)(v1 + 16) = 1;
  return v1;
}

uint64_t sub_21CB2C3BC()
{
  return 0;
}

void FMFStopSharingAction.__allocating_init(requiresRefresh:)()
{
}

void FMFStopSharingAction.init(requiresRefresh:)()
{
}

uint64_t sub_21CB2C560()
{
  return sub_21CA4C4F4(v0 + OBJC_IVAR____TtC7FMFCore20FMFStopSharingAction_friend);
}

uint64_t FMFStopSharingAction.deinit()
{
  sub_21CA4C4F4(v0 + OBJC_IVAR____TtC7FMFCore20FMFStopSharingAction_friend);
  return v0;
}

uint64_t FMFStopSharingAction.__deallocating_deinit()
{
  sub_21CA4C4F4(v0 + OBJC_IVAR____TtC7FMFCore20FMFStopSharingAction_friend);

  return swift_deallocClassInstance();
}

uint64_t sub_21CB2C5FC()
{
  return type metadata accessor for FMFStopSharingAction();
}

uint64_t type metadata accessor for FMFStopSharingAction()
{
  uint64_t result = qword_267C972C0;
  if (!qword_267C972C0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_21CB2C650()
{
  uint64_t result = type metadata accessor for FMFFriend();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for FMFStopSharingAction(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for FMFStopSharingAction);
}

uint64_t dispatch thunk of FMFStopSharingAction.__allocating_init(friend:)()
{
  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t sub_21CB2C70C()
{
  type metadata accessor for FMFContactsDataController();
  swift_allocObject();
  uint64_t result = FMFContactsDataController.init(isSnapshotMode:)(0);
  qword_267C972D0 = result;
  return result;
}

id static FMFCoreHelper.contact(for:keysToFetch:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (qword_267C94980 != -1) {
    swift_once();
  }
  return sub_21CB087B8(a1, a2, a3);
}

uint64_t static FMFCoreHelper.displayName(for:)(void *a1)
{
  if (qword_267C94980 != -1) {
    swift_once();
  }
  sub_21CB075AC(a1, (uint64_t)v4);
  uint64_t v2 = v5;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2;
}

id FMFCoreHelper.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

id FMFCoreHelper.init()()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMFCoreHelper();
  return objc_msgSendSuper2(&v2, sel_init);
}

uint64_t type metadata accessor for FMFCoreHelper()
{
  return self;
}

id FMFCoreHelper.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMFCoreHelper();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t FMFStopFollowingAction.__allocating_init(friend:)(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  sub_21CAD9D08(a1, v2 + OBJC_IVAR____TtC7FMFCore22FMFStopFollowingAction_friend);
  *(unsigned char *)(v2 + 16) = 0;
  return v2;
}

uint64_t FMFStopFollowingAction.init(friend:)(uint64_t a1)
{
  sub_21CAD9D08(a1, v1 + OBJC_IVAR____TtC7FMFCore22FMFStopFollowingAction_friend);
  *(unsigned char *)(v1 + 16) = 0;
  return v1;
}

uint64_t sub_21CB2CAA8()
{
  return 0;
}

void FMFStopFollowingAction.__allocating_init(requiresRefresh:)()
{
}

void FMFStopFollowingAction.init(requiresRefresh:)()
{
}

uint64_t sub_21CB2CC4C()
{
  return sub_21CA4C4F4(v0 + OBJC_IVAR____TtC7FMFCore22FMFStopFollowingAction_friend);
}

uint64_t FMFStopFollowingAction.deinit()
{
  sub_21CA4C4F4(v0 + OBJC_IVAR____TtC7FMFCore22FMFStopFollowingAction_friend);
  return v0;
}

uint64_t FMFStopFollowingAction.__deallocating_deinit()
{
  sub_21CA4C4F4(v0 + OBJC_IVAR____TtC7FMFCore22FMFStopFollowingAction_friend);

  return swift_deallocClassInstance();
}

uint64_t sub_21CB2CCE8()
{
  return type metadata accessor for FMFStopFollowingAction();
}

uint64_t type metadata accessor for FMFStopFollowingAction()
{
  uint64_t result = qword_267C972D8;
  if (!qword_267C972D8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t method lookup function for FMFStopFollowingAction(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for FMFStopFollowingAction);
}

uint64_t dispatch thunk of FMFStopFollowingAction.__allocating_init(friend:)()
{
  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t FMFUpdateStewieLocationAction.__allocating_init(publishReason:)(uint64_t a1)
{
  uint64_t result = swift_allocObject();
  *(void *)(result + 24) = a1;
  *(unsigned char *)(result + 16) = 0;
  return result;
}

uint64_t FMFUpdateStewieLocationAction.init(publishReason:)(uint64_t a1)
{
  *(void *)(v1 + 24) = a1;
  *(unsigned char *)(v1 + 16) = 0;
  return v1;
}

void FMFUpdateStewieLocationAction.__allocating_init(requiresRefresh:)()
{
}

void FMFUpdateStewieLocationAction.init(requiresRefresh:)()
{
}

uint64_t FMFUpdateStewieLocationAction.deinit()
{
  return v0;
}

uint64_t FMFUpdateStewieLocationAction.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for FMFUpdateStewieLocationAction()
{
  return self;
}

uint64_t method lookup function for FMFUpdateStewieLocationAction(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for FMFUpdateStewieLocationAction);
}

uint64_t dispatch thunk of FMFUpdateStewieLocationAction.__allocating_init(publishReason:)()
{
  return (*(uint64_t (**)(void))(v0 + 136))();
}

FMFCore::FMWindowStatePrefKeys_optional __swiftcall FMWindowStatePrefKeys.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  uint64_t v3 = sub_21CB88D70();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1) {
    char v5 = 1;
  }
  else {
    char v5 = 2;
  }
  if (!v3) {
    char v5 = 0;
  }
  *uint64_t v2 = v5;
  return result;
}

uint64_t FMWindowStatePrefKeys.rawValue.getter()
{
  if (*v0) {
    return 0x6956776F646E6977;
  }
  else {
    return 0x736F4D746E6F7266;
  }
}

uint64_t sub_21CB2CF30(char *a1, char *a2)
{
  return sub_21CA7EEC8(*a1, *a2);
}

unint64_t sub_21CB2CF40()
{
  unint64_t result = qword_267C972E8;
  if (!qword_267C972E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C972E8);
  }
  return result;
}

uint64_t sub_21CB2CF94()
{
  return sub_21CB89090();
}

uint64_t sub_21CB2D030()
{
  sub_21CB88380();

  return swift_bridgeObjectRelease();
}

uint64_t sub_21CB2D0B8()
{
  return sub_21CB89090();
}

FMFCore::FMWindowStatePrefKeys_optional sub_21CB2D150(Swift::String *a1)
{
  return FMWindowStatePrefKeys.init(rawValue:)(*a1);
}

void sub_21CB2D15C(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x736F4D746E6F7266;
  if (*v1) {
    uint64_t v2 = 0x6956776F646E6977;
  }
  unint64_t v3 = 0xEF776F646E695774;
  if (*v1) {
    unint64_t v3 = 0xED0000656C626973;
  }
  *a1 = v2;
  a1[1] = v3;
}

unsigned char *storeEnumTagSinglePayload for FMWindowStatePrefKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x21CB2D280);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FMWindowStatePrefKeys()
{
  return &type metadata for FMWindowStatePrefKeys;
}

uint64_t sub_21CB2D2BC@<X0>(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    int v4 = 0;
    uint64_t v5 = (int *)(a1 + 32);
    do
    {
      int v7 = *v5++;
      int v6 = v7;
      if ((v7 & ~v4) == 0) {
        int v6 = 0;
      }
      v4 |= v6;
      --v3;
    }
    while (v3);
  }
  else
  {
    int v4 = 0;
  }
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v4;
  return result;
}

uint64_t sub_21CB2D314@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    uint64_t v4 = 0;
    uint64_t v5 = (uint64_t *)(a1 + 32);
    do
    {
      uint64_t v7 = *v5++;
      uint64_t v6 = v7;
      if ((v7 & ~v4) == 0) {
        uint64_t v6 = 0;
      }
      v4 |= v6;
      --v3;
    }
    while (v3);
  }
  else
  {
    uint64_t v4 = 0;
  }
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v4;
  return result;
}

uint64_t FMFFeatures.rawValue.getter()
{
  return *(void *)v0;
}

FMFCore::FMFFeatures __swiftcall FMFFeatures.init(rawValue:)(FMFCore::FMFFeatures rawValue)
{
  v1->rawValue = rawValue.rawValue;
  return rawValue;
}

void static FMFFeatures.viewFriends.getter(void *a1@<X8>)
{
  *a1 = 1;
}

void static FMFFeatures.viewFollowers.getter(void *a1@<X8>)
{
  *a1 = 2;
}

void static FMFFeatures.actOnRequest.getter(void *a1@<X8>)
{
  *a1 = 4;
}

void static FMFFeatures.offerLocation.getter(void *a1@<X8>)
{
  *a1 = 8;
}

void static FMFFeatures.changeMyLabel.getter(void *a1@<X8>)
{
  *a1 = 16;
}

void static FMFFeatures.changeMeDevice.getter(void *a1@<X8>)
{
  *a1 = 32;
}

void static FMFFeatures.changeHideLocation.getter(void *a1@<X8>)
{
  *a1 = 64;
}

void static FMFFeatures.changeAllowFriendRequests.getter(void *a1@<X8>)
{
  *a1 = 128;
}

void static FMFFeatures.changeGeoFenceAlerts.getter(void *a1@<X8>)
{
  *a1 = 256;
}

void static FMFFeatures.removeFriends.getter(void *a1@<X8>)
{
  *a1 = 512;
}

void static FMFFeatures.removeFollowers.getter(void *a1@<X8>)
{
  *a1 = 1024;
}

void static FMFFeatures.removeDevice.getter(void *a1@<X8>)
{
  *a1 = 2048;
}

void static FMFFeatures.notifyOthers.getter(void *a1@<X8>)
{
  *a1 = 4096;
}

void static FMFFeatures.notifyMe.getter(void *a1@<X8>)
{
  *a1 = 0x2000;
}

unint64_t sub_21CB2D424(char a1)
{
  unint64_t result = 0x6569724677656976;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6C6C6F4677656976;
      break;
    case 2:
      unint64_t result = 0x7165526E4F746361;
      break;
    case 3:
      unint64_t result = 0x636F4C726566666FLL;
      break;
    case 4:
      unint64_t result = 0x794D65676E616863;
      break;
    case 5:
      unint64_t result = 0x654D65676E616863;
      break;
    case 6:
      unint64_t result = 0xD000000000000012;
      break;
    case 7:
      unint64_t result = 0xD000000000000019;
      break;
    case 8:
      unint64_t result = 0xD000000000000017;
      break;
    case 9:
      unint64_t result = 0x724665766F6D6572;
      break;
    case 10:
      unint64_t result = 0x6F4665766F6D6572;
      break;
    case 11:
      unint64_t result = 0x654465766F6D6572;
      break;
    case 12:
      unint64_t result = 0x744F796669746F6ELL;
      break;
    case 13:
      unint64_t result = 0x654D796669746F6ELL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_21CB2D680(char *a1, char *a2)
{
  char v2 = *a2;
  unint64_t v3 = sub_21CB2D424(*a1);
  uint64_t v5 = v4;
  if (v3 == sub_21CB2D424(v2) && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = sub_21CB88F50();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_21CB2D70C()
{
  char v1 = *v0;
  sub_21CB89050();
  sub_21CB2D424(v1);
  sub_21CB88380();
  swift_bridgeObjectRelease();
  return sub_21CB89090();
}

uint64_t sub_21CB2D770()
{
  sub_21CB2D424(*v0);
  sub_21CB88380();

  return swift_bridgeObjectRelease();
}

uint64_t sub_21CB2D7C4()
{
  char v1 = *v0;
  sub_21CB89050();
  sub_21CB2D424(v1);
  sub_21CB88380();
  swift_bridgeObjectRelease();
  return sub_21CB89090();
}

uint64_t sub_21CB2D824@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_21CB2DBFC();
  *a1 = result;
  return result;
}

unint64_t sub_21CB2D854@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_21CB2D424(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_21CB2D880@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_21CB2DBFC();
  *a1 = result;
  return result;
}

uint64_t sub_21CB2D8A8(uint64_t a1)
{
  unint64_t v2 = sub_21CA1F97C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_21CB2D8E4(uint64_t a1)
{
  unint64_t v2 = sub_21CA1F97C();

  return MEMORY[0x270FA00B8](a1, v2);
}

BOOL static FMFFeatures.== infix(_:_:)(void *a1, void *a2)
{
  return *a1 == *a2;
}

uint64_t sub_21CB2D938@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_21CB2D314(a1, a2);
}

unint64_t sub_21CB2D954()
{
  unint64_t result = qword_267C97308;
  if (!qword_267C97308)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C97308);
  }
  return result;
}

unint64_t sub_21CB2D9AC()
{
  unint64_t result = qword_267C97310;
  if (!qword_267C97310)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C97310);
  }
  return result;
}

unint64_t sub_21CB2DA04()
{
  unint64_t result = qword_267C97318;
  if (!qword_267C97318)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C97318);
  }
  return result;
}

unint64_t sub_21CB2DA5C()
{
  unint64_t result = qword_267C97320;
  if (!qword_267C97320)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C97320);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for FMFFeatures.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 13 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 13) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF2)
  {
    unsigned int v6 = ((a2 - 243) >> 8) + 1;
    *unint64_t result = a2 + 13;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x21CB2DB7CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 13;
        break;
    }
  }
  return result;
}

unint64_t sub_21CB2DBA8()
{
  unint64_t result = qword_267C97328;
  if (!qword_267C97328)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C97328);
  }
  return result;
}

uint64_t sub_21CB2DBFC()
{
  unint64_t v0 = sub_21CB88D70();
  swift_bridgeObjectRelease();
  if (v0 >= 0xE) {
    return 14;
  }
  else {
    return v0;
  }
}

id sub_21CB2DC48()
{
  return objc_msgSend(v0, sel_shutdown);
}

uint64_t sub_21CB2DC58()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC7FMFCore22FMAPSConnectionHandler_delegate;
  swift_beginAccess();
  return MEMORY[0x21D4B6C80](v1);
}

uint64_t sub_21CB2DCA8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + OBJC_IVAR____TtC7FMFCore22FMAPSConnectionHandler_delegate;
  swift_beginAccess();
  *(void *)(v4 + 8) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

void (*sub_21CB2DD14(void *a1))(uint64_t a1, char a2)
{
  int v3 = malloc(0x38uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC7FMFCore22FMAPSConnectionHandler_delegate;
  v3[5] = v1;
  v3[6] = v4;
  uint64_t v5 = v1 + v4;
  swift_beginAccess();
  uint64_t v6 = MEMORY[0x21D4B6C80](v5);
  uint64_t v7 = *(void *)(v5 + 8);
  v3[3] = v6;
  void v3[4] = v7;
  return sub_21CB01D28;
}

uint64_t sub_21CB2DD9C()
{
  uint64_t v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC7FMFCore22FMAPSConnectionHandler_topicAPSToken);
  if (*(void *)(v0 + OBJC_IVAR____TtC7FMFCore22FMAPSConnectionHandler_topicAPSToken + 8))
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = (void *)sub_21CB882C0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v2 = 0;
  }
  int v3 = self;
  uint64_t v4 = (void *)sub_21CB882C0();
  uint64_t v5 = (void *)sub_21CB882C0();
  objc_msgSend(v3, sel_setString_forKey_inDomain_, v2, v4, v5);

  uint64_t v6 = v0 + OBJC_IVAR____TtC7FMFCore22FMAPSConnectionHandler_delegate;
  swift_beginAccess();
  uint64_t result = MEMORY[0x21D4B6C80](v6);
  if (result)
  {
    uint64_t v8 = *(void *)(v6 + 8);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v10 = *v1;
    uint64_t v11 = v1[1];
    uint64_t v12 = *(void *)(v0 + OBJC_IVAR____TtC7FMFCore22FMAPSConnectionHandler_publicAPSToken);
    uint64_t v13 = *(void *)(v0 + OBJC_IVAR____TtC7FMFCore22FMAPSConnectionHandler_publicAPSToken + 8);
    uint64_t v14 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v14(v0, v10, v11, v12, v13, ObjectType, v8);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_unknownObjectRelease();
  }
  return result;
}

id FMAPSConnectionHandler.__deallocating_deinit()
{
  uint64_t v1 = &v0[OBJC_IVAR____TtC7FMFCore22FMAPSConnectionHandler_connection];
  if (*(void *)&v0[OBJC_IVAR____TtC7FMFCore22FMAPSConnectionHandler_connection])
  {
    uint64_t v2 = *((void *)v1 + 1);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v4 = *(void (**)(void, uint64_t, uint64_t))(v2 + 16);
    swift_unknownObjectRetain();
    v4(0, ObjectType, v2);
    swift_unknownObjectRelease();
    if (*(void *)v1)
    {
      uint64_t v5 = *((void *)v1 + 1);
      uint64_t v6 = swift_getObjectType();
      uint64_t v7 = *(void (**)(uint64_t, uint64_t))(v5 + 40);
      swift_unknownObjectRetain();
      v7(v6, v5);
      swift_unknownObjectRelease();
    }
  }
  v9.receiver = v0;
  v9.super_class = (Class)type metadata accessor for FMAPSConnectionHandler();
  return objc_msgSendSuper2(&v9, sel_dealloc);
}

uint64_t sub_21CB2E108()
{
  return sub_21CA0AB30((uint64_t)&unk_26CD6F470, (uint64_t)sub_21CB2EC0C, (uint64_t)&unk_26CD6F488);
}

uint64_t sub_21CB2E130(uint64_t result)
{
  if (*(void *)(result + OBJC_IVAR____TtC7FMFCore22FMAPSConnectionHandler_connection))
  {
    uint64_t v1 = *(void *)(result + OBJC_IVAR____TtC7FMFCore22FMAPSConnectionHandler_connection + 8);
    uint64_t ObjectType = swift_getObjectType();
    int v3 = *(void (**)(void, uint64_t, uint64_t))(v1 + 32);
    swift_unknownObjectRetain();
    v3(0, ObjectType, v1);
    return swift_unknownObjectRelease();
  }
  return result;
}

id FMAPSConnectionHandler.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

void FMAPSConnectionHandler.init()()
{
}

void FMAPSConnectionHandler.connection(_:didReceivePublicToken:)(uint64_t a1, uint64_t a2, unint64_t a3)
{
}

void FMAPSConnectionHandler.connection(_:didReceiveToken:forTopic:identifier:)(uint64_t a1, uint64_t a2, unint64_t a3)
{
}

uint64_t FMAPSConnectionHandler.connection(_:didReceiveMessageForTopic:userInfo:)(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  return sub_21CA12F84(a2, a3, a4);
}

void sub_21CB2E3A0(uint64_t a1, unint64_t a2)
{
  int v3 = v2;
  uint64_t v5 = sub_21CB88100();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_21CB88150();
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2 >> 60 == 15)
  {
    if (qword_267C94990 != -1) {
      swift_once();
    }
    uint64_t v14 = sub_21CB880A0();
    sub_21CA4CC18(v14, (uint64_t)qword_267CA5368);
    uint64_t v48 = v3;
    uint64_t v15 = sub_21CB88070();
    os_log_type_t v16 = sub_21CB88880();
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v17 = (uint8_t *)swift_slowAlloc();
      uint64_t v18 = swift_slowAlloc();
      aBlock[0] = v18;
      *(_DWORD *)uint64_t v17 = 136315138;
      uint64_t v19 = *(void *)&v48[OBJC_IVAR____TtC7FMFCore22FMAPSConnectionHandler_topic];
      unint64_t v20 = *(void *)&v48[OBJC_IVAR____TtC7FMFCore22FMAPSConnectionHandler_topic + 8];
      swift_bridgeObjectRetain();
      uint64_t v50 = sub_21CA4E450(v19, v20, aBlock);
      sub_21CB889C0();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_21CA00000, v15, v16, "FMAPSConnectionHandler: Topic APS Token was nil for %s.", v17, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x21D4B6B70](v18, -1, -1);
      MEMORY[0x21D4B6B70](v17, -1, -1);
    }
    else
    {

      uint64_t v32 = v48;
    }
  }
  else
  {
    uint64_t v46 = v11;
    uint64_t v48 = v10;
    unint64_t v21 = (void *)sub_21CB874B0();
    if (qword_267C94990 != -1) {
      swift_once();
    }
    uint64_t v47 = v8;
    uint64_t v22 = sub_21CB880A0();
    sub_21CA4CC18(v22, (uint64_t)qword_267CA5368);
    id v23 = v21;
    char v24 = sub_21CB88070();
    os_log_type_t v25 = sub_21CB88880();
    if (os_log_type_enabled(v24, v25))
    {
      unint64_t v26 = (uint8_t *)swift_slowAlloc();
      uint64_t v27 = swift_slowAlloc();
      uint64_t v45 = v6;
      uint64_t v43 = (void *)v27;
      *(_DWORD *)unint64_t v26 = 138412290;
      aBlock[0] = (uint64_t)v23;
      id v28 = v23;
      uint64_t v44 = v13;
      uint64_t v29 = v3;
      id v30 = v28;
      sub_21CB889C0();
      uint64_t v31 = v43;
      *uint64_t v43 = v23;

      int v3 = v29;
      uint64_t v13 = v44;
      _os_log_impl(&dword_21CA00000, v24, v25, "FMAPSConnectionHandler: Topic APS Token received %@.", v26, 0xCu);
      sub_21CA57E34(&qword_267C95020);
      swift_arrayDestroy();
      uint64_t v6 = v45;
      MEMORY[0x21D4B6B70](v31, -1, -1);
      MEMORY[0x21D4B6B70](v26, -1, -1);
    }
    else
    {
    }
    uint64_t v33 = v23;
    id v34 = objc_msgSend(v23, sel_fm_hexString);
    uint64_t v35 = sub_21CB882F0();
    uint64_t v37 = v36;

    uint64_t v38 = (void *)swift_allocObject();
    void v38[2] = v3;
    v38[3] = v35;
    v38[4] = v37;
    aBlock[4] = (uint64_t)sub_21CB2EC18;
    void aBlock[5] = (uint64_t)v38;
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_21CA1B084;
    uint64_t aBlock[3] = (uint64_t)&unk_26CD6F528;
    uint64_t v39 = _Block_copy(aBlock);
    id v40 = v3;
    sub_21CB88120();
    uint64_t v50 = MEMORY[0x263F8EE78];
    sub_21CA364F8((unint64_t *)&qword_267C96FC0, MEMORY[0x263F8F030]);
    sub_21CA57E34((uint64_t *)&unk_267C96DD0);
    sub_21CA3566C((unint64_t *)&qword_267C96FD0, (uint64_t *)&unk_267C96DD0);
    unint64_t v41 = v47;
    sub_21CB88A60();
    MEMORY[0x21D4B5A20](0, v13, v41, v39);
    _Block_release(v39);

    (*(void (**)(char *, uint64_t))(v6 + 8))(v41, v5);
    (*(void (**)(char *, char *))(v46 + 8))(v13, v48);
    swift_release();
  }
}

uint64_t sub_21CB2E9D4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *a1 + OBJC_IVAR____TtC7FMFCore22FMAPSConnectionHandler_delegate;
  swift_beginAccess();
  uint64_t result = MEMORY[0x21D4B6C80](v3);
  uint64_t v5 = *(void *)(v3 + 8);
  *a2 = result;
  a2[1] = v5;
  return result;
}

uint64_t sub_21CB2EA30(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *a2 + OBJC_IVAR____TtC7FMFCore22FMAPSConnectionHandler_delegate;
  swift_beginAccess();
  *(void *)(v3 + 8) = v2;
  return swift_unknownObjectWeakAssign();
}

uint64_t dispatch thunk of FMAPSConnectionHandlerDelegate.connectionHandler(_:didReceive:publicToken:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 8))();
}

uint64_t dispatch thunk of FMAPSConnectionHandlerDelegate.connectionHandler(_:didReceive:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t sub_21CB2EABC(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_21CB2EAD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t sub_21CB2EAE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t sub_21CB2EAF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t sub_21CB2EB0C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t method lookup function for FMAPSConnectionHandler(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for FMAPSConnectionHandler);
}

uint64_t dispatch thunk of FMAPSConnectionHandler.delegate.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x88))();
}

uint64_t dispatch thunk of FMAPSConnectionHandler.delegate.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x90))();
}

uint64_t dispatch thunk of FMAPSConnectionHandler.delegate.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x98))();
}

uint64_t sub_21CB2EBD4()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_21CB2EC0C()
{
  return sub_21CB2E130(*(void *)(v0 + 16));
}

uint64_t sub_21CB2EC18()
{
  return sub_21CA0399C(v0[2], v0[3], v0[4], &OBJC_IVAR____TtC7FMFCore22FMAPSConnectionHandler_topicAPSToken, (uint64_t (*)(uint64_t))sub_21CB2DD9C);
}

void sub_21CB2EC68()
{
  uint64_t v0 = (void *)sub_21CB882C0();
  char v1 = MGGetBoolAnswer();

  byte_267C973D8 = v1;
}

uint64_t sub_21CB2ECAC()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for FMLocalize()
{
  return self;
}

uint64_t sub_21CB2ECE0(uint64_t a1, uint64_t a2)
{
  sub_21CB88340();
  unint64_t v4 = sub_21CA4D63C();
  uint64_t v5 = MEMORY[0x263F8D310];
  unint64_t v27 = v4;
  unint64_t v28 = v4;
  uint64_t v25 = MEMORY[0x263F8D310];
  unint64_t v26 = v4;
  uint64_t v6 = sub_21CB88A10();
  uint64_t v8 = v7;
  swift_bridgeObjectRelease();
  sub_21CA57E34(&qword_267C97020);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_21CB8AC70;
  *(void *)(v9 + 56) = v5;
  unint64_t v10 = sub_21CA4ECA4();
  uint64_t v29 = a1;
  *(void *)(v9 + 32) = a1;
  *(void *)(v9 + 40) = a2;
  *(void *)(v9 + 96) = v5;
  *(void *)(v9 + 104) = v10;
  *(void *)(v9 + 64) = v10;
  *(void *)(v9 + 72) = v6;
  *(void *)(v9 + 80) = v8;
  swift_bridgeObjectRetain();
  uint64_t v11 = sub_21CB88300();
  uint64_t v13 = v12;
  type metadata accessor for FMLocalize();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  uint64_t v15 = self;
  id v16 = objc_msgSend(v15, sel_bundleForClass_, ObjCClassFromMetadata, v25, v26, v27, v28);
  uint64_t v17 = sub_21CB872B0();
  unint64_t v19 = v18;

  if (v17 == v11 && v19 == v13)
  {
    swift_bridgeObjectRelease();
LABEL_8:
    uint64_t v22 = swift_allocObject();
    *(_OWORD *)(v22 + 16) = xmmword_21CB8B220;
    *(void *)(v22 + 56) = MEMORY[0x263F8D310];
    *(void *)(v22 + 64) = v10;
    *(void *)(v22 + 32) = v29;
    *(void *)(v22 + 40) = a2;
    swift_bridgeObjectRetain();
    sub_21CB88300();
    id v23 = objc_msgSend(v15, sel_bundleForClass_, ObjCClassFromMetadata, 0xE000000000000000);
    uint64_t v17 = sub_21CB872B0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    return v17;
  }
  char v20 = sub_21CB88F50();
  swift_bridgeObjectRelease();
  if (v20) {
    goto LABEL_8;
  }
  uint64_t v21 = HIBYTE(v19) & 0xF;
  if ((v19 & 0x2000000000000000) == 0) {
    uint64_t v21 = v17 & 0xFFFFFFFFFFFFLL;
  }
  if (!v21) {
    goto LABEL_8;
  }
  return v17;
}

uint64_t sub_21CB2EFBC()
{
  if (qword_267C94988 != -1) {
    swift_once();
  }
  swift_bridgeObjectRetain();
  sub_21CB883D0();
  swift_bridgeObjectRetain();
  sub_21CB883D0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  type metadata accessor for FMLocalize();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v1 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v2 = sub_21CB872B0();
  swift_bridgeObjectRelease();

  return v2;
}

uint64_t FMFDevice.identifier.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FMFDevice.name.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FMFDevice.autoMeCapable.getter()
{
  return *(unsigned __int8 *)(v0 + 32);
}

uint64_t sub_21CB2F174(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_21CA7E428(*a1, *a2);
}

uint64_t sub_21CB2F180()
{
  return sub_21CB89090();
}

uint64_t sub_21CB2F21C()
{
  sub_21CB88380();

  return swift_bridgeObjectRelease();
}

uint64_t sub_21CB2F2A4()
{
  return sub_21CB89090();
}

uint64_t sub_21CB2F33C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_21CB2F7B4();
  *a1 = result;
  return result;
}

void sub_21CB2F36C(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE200000000000000;
  unint64_t v4 = 0xE400000000000000;
  uint64_t v5 = 1701667182;
  if (v2 != 1)
  {
    uint64_t v5 = 0x6143654D6F747561;
    unint64_t v4 = 0xED0000656C626170;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 25705;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_21CB2F3C4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_21CB2F7B4();
  *a1 = result;
  return result;
}

uint64_t sub_21CB2F3EC(uint64_t a1)
{
  unint64_t v2 = sub_21CA2B310();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_21CB2F428(uint64_t a1)
{
  unint64_t v2 = sub_21CA2B310();

  return MEMORY[0x270FA00B8](a1, v2);
}

unint64_t FMFDevice.debugDescription.getter()
{
  return 0xD000000000000012;
}

uint64_t _s7FMFCore9FMFDeviceV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 24);
  int v4 = *(unsigned __int8 *)(a1 + 32);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  int v7 = *(unsigned __int8 *)(a2 + 32);
  BOOL v8 = *(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8);
  if (v8 || (char v9 = sub_21CB88F50(), result = 0, (v9 & 1) != 0))
  {
    if (v2 == v5 && v3 == v6) {
      return v4 ^ v7 ^ 1u;
    }
    char v12 = sub_21CB88F50();
    uint64_t result = 0;
    if (v12) {
      return v4 ^ v7 ^ 1u;
    }
  }
  return result;
}

uint64_t assignWithCopy for FMFDevice(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  return a1;
}

uint64_t assignWithTake for FMFDevice(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  return a1;
}

unint64_t sub_21CB2F760()
{
  unint64_t result = qword_267C973F8;
  if (!qword_267C973F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C973F8);
  }
  return result;
}

uint64_t sub_21CB2F7B4()
{
  unint64_t v0 = sub_21CB88D70();
  swift_bridgeObjectRelease();
  if (v0 >= 3) {
    return 3;
  }
  else {
    return v0;
  }
}

unint64_t sub_21CB2F800(char a1)
{
  unint64_t result = 0x6E6F697461636F6CLL;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x656475746974616CLL;
      break;
    case 2:
      unint64_t result = 0x64757469676E6F6CLL;
      break;
    case 3:
      unint64_t result = 0xD000000000000012;
      break;
    case 4:
      unint64_t result = 0xD000000000000010;
      break;
    default:
      return result;
  }
  return result;
}

void sub_21CB2F8BC()
{
}

uint64_t sub_21CB2F8CC()
{
  return type metadata accessor for FMFMyLocationRequest();
}

FMFCore::FMFConfigValue_optional __swiftcall FMFConfigValue.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_21CB88D70();
  result.value = swift_bridgeObjectRelease();
  char v5 = 13;
  if (v3 < 0xD) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

uint64_t sub_21CB2F964()
{
  return sub_21CA801D8();
}

uint64_t sub_21CB2F970()
{
  return sub_21CB89090();
}

uint64_t sub_21CB2F9D8()
{
  FMFConfigValue.rawValue.getter();
  sub_21CB88380();

  return swift_bridgeObjectRelease();
}

uint64_t sub_21CB2FA3C()
{
  return sub_21CB89090();
}

FMFCore::FMFConfigValue_optional sub_21CB2FAA0(Swift::String *a1)
{
  return FMFConfigValue.init(rawValue:)(*a1);
}

unint64_t sub_21CB2FAAC@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = FMFConfigValue.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

unint64_t FMFLocationNotificationsURL.getter()
{
  uint64_t v0 = (void *)sub_21CB882C0();
  int v1 = MGGetSInt32Answer();

  unint64_t v2 = 0xD00000000000005ELL;
  if (v1 == 9) {
    unint64_t v2 = 0xD000000000000056;
  }
  if (v1 == 3) {
    return 0xD00000000000005FLL;
  }
  else {
    return v2;
  }
}

uint64_t FMFGlobalConfigStore.getter()
{
  return sub_21CB2FE3C(&qword_267C949A8);
}

uint64_t FMFGlobalConfigStore.setter(uint64_t a1)
{
  return sub_21CB2FEBC(a1, &qword_267C949A8, &off_267C97428);
}

uint64_t (*FMFGlobalConfigStore.modify())()
{
  if (qword_267C949A8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j__swift_endAccess;
}

unint64_t sub_21CB2FC58()
{
  sub_21CA57E34((uint64_t *)&unk_267C974B0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_21CB8B3F0;
  *(unsigned char *)(inited + 32) = 8;
  uint64_t v1 = MEMORY[0x263F8D538];
  *(void *)(inited + 64) = MEMORY[0x263F8D538];
  *(void *)(inited + 40) = 0x4034000000000000;
  *(unsigned char *)(inited + 72) = 9;
  *(void *)(inited + 104) = v1;
  *(void *)(inited + 80) = 0x404E000000000000;
  *(unsigned char *)(inited + 112) = 10;
  *(void *)(inited + 144) = v1;
  *(void *)(inited + 120) = 0x405E000000000000;
  unint64_t result = sub_21CA345B8(inited);
  qword_267C97430 = result;
  return result;
}

uint64_t FMFWaldoGlobalConfigStore.getter()
{
  return sub_21CB2FE3C(&qword_267C949B0);
}

uint64_t FMFWaldoGlobalConfigStore.setter(uint64_t a1)
{
  return sub_21CB2FEBC(a1, &qword_267C949B0, &qword_267C97430);
}

uint64_t (*FMFWaldoGlobalConfigStore.modify())()
{
  if (qword_267C949B0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j_j__swift_endAccess;
}

unint64_t sub_21CB2FDB4()
{
  sub_21CA57E34((uint64_t *)&unk_267C974B0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_21CB8B220;
  *(unsigned char *)(inited + 32) = 12;
  *(void *)(inited + 64) = MEMORY[0x263F8D6C8];
  *(void *)(inited + 40) = 30;
  unint64_t result = sub_21CA345B8(inited);
  qword_267C97438 = result;
  return result;
}

uint64_t FMFDimplekeyGlobalConfigStore.getter()
{
  return sub_21CB2FE3C(&qword_267C949B8);
}

uint64_t sub_21CB2FE3C(void *a1)
{
  if (*a1 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t FMFDimplekeyGlobalConfigStore.setter(uint64_t a1)
{
  return sub_21CB2FEBC(a1, &qword_267C949B8, &qword_267C97438);
}

uint64_t sub_21CB2FEBC(uint64_t a1, void *a2, void *a3)
{
  if (*a2 != -1) {
    swift_once();
  }
  swift_beginAccess();
  *a3 = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FMFDimplekeyGlobalConfigStore.modify())()
{
  if (qword_267C949B8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t FMFWaldoGlobalConfig<A>(_:fallback:)(uint64_t a1)
{
  return sub_21CA0A718(a1);
}

uint64_t sub_21CB2FFC4@<X0>(uint64_t a1@<X8>)
{
  return sub_21CA346E8(*(unsigned char *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 16), &qword_267C949B0, &qword_267C97430, a1);
}

uint64_t FMFDimplekeyGlobalConfig<A>(_:fallback:)(uint64_t a1)
{
  return sub_21CA0A718(a1);
}

uint64_t sub_21CB30020@<X0>(uint64_t a1@<X8>)
{
  return sub_21CA346E8(*(unsigned char *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 16), &qword_267C949B8, &qword_267C97438, a1);
}

uint64_t getEnumTagSinglePayload for FMFConfigValue(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF4) {
    goto LABEL_17;
  }
  if (a2 + 12 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 12) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 12;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 12;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 12;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xD;
  int v8 = v6 - 13;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for FMFConfigValue(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 12 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 12) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF4) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF3)
  {
    unsigned int v6 = ((a2 - 244) >> 8) + 1;
    *unint64_t result = a2 + 12;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x21CB301C0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 12;
        break;
    }
  }
  return result;
}

void sub_21CB301E8()
{
  swift_bridgeObjectRelease();
  swift_unknownObjectWeakDestroy();
  swift_release();

  sub_21CA1B88C(v0 + qword_267C97468, &qword_267C95400);
  uint64_t v1 = v0 + qword_267CA5398;
  uint64_t v2 = sub_21CB87590();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  sub_21CA640FC(v0 + qword_267CA53A0);
  sub_21CA640FC(v0 + qword_267CA53A8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  int v3 = *(void **)(v0 + qword_267C97478);
}

uint64_t sub_21CB30300()
{
  uint64_t v1 = v0;
  if (qword_267C94990 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_21CB880A0();
  sub_21CA4CC18(v2, (uint64_t)qword_267CA5368);
  swift_retain_n();
  int v3 = sub_21CB88070();
  os_log_type_t v4 = sub_21CB88880();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v22 = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136315138;
    uint64_t v23 = v22;
    uint64_t v6 = *(void *)(v1 + qword_267C97448);
    unint64_t v7 = *(void *)(v1 + qword_267C97448 + 8);
    swift_bridgeObjectRetain();
    unint64_t v8 = sub_21CA30E24(0xCuLL, v6, v7);
    uint64_t v10 = v9;
    uint64_t v12 = v11;
    uint64_t v14 = v13;
    swift_bridgeObjectRelease();
    uint64_t v15 = MEMORY[0x21D4B5450](v8, v10, v12, v14);
    unint64_t v17 = v16;
    swift_bridgeObjectRelease();
    sub_21CA4E450(v15, v17, &v23);
    sub_21CB889C0();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_21CA00000, v3, v4, "FMFServerInteractionController<%s>.deinit", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x21D4B6B70](v22, -1, -1);
    MEMORY[0x21D4B6B70](v5, -1, -1);
  }
  else
  {

    swift_release_n();
  }
  uint64_t v18 = sub_21CB877A0();
  swift_bridgeObjectRelease();
  swift_unknownObjectWeakDestroy();
  swift_release();

  sub_21CA1B88C(v18 + qword_267C97468, &qword_267C95400);
  uint64_t v19 = v18 + qword_267CA5398;
  uint64_t v20 = sub_21CB87590();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v20 - 8) + 8))(v19, v20);
  sub_21CA640FC(v18 + qword_267CA53A0);
  sub_21CA640FC(v18 + qword_267CA53A8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return v18;
}

uint64_t sub_21CB30618()
{
  sub_21CB30300();

  return swift_deallocClassInstance();
}

void sub_21CB3068C(void *a1, uint64_t a2)
{
  uint64_t v4 = sub_21CA57E34(&qword_267C95190);
  uint64_t v5 = MEMORY[0x270FA5388](v4 - 8);
  uint64_t v90 = (char *)v81 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v88 = a1;
  uint64_t v89 = (char *)v81 - v7;
  uint64_t v8 = *a1;
  uint64_t refreshed = type metadata accessor for FMFInitRefreshClientRequest();
  type metadata accessor for FMLocalize();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  uint64_t v11 = self;
  id v12 = objc_msgSend(v11, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v91 = sub_21CB872B0();
  uint64_t v14 = v13;

  id v15 = objc_msgSend(v11, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v85 = sub_21CB872B0();
  uint64_t v17 = v16;

  id v84 = v11;
  uint64_t v86 = ObjCClassFromMetadata;
  id v18 = objc_msgSend(v11, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v19 = sub_21CB872B0();
  uint64_t v93 = v20;

  if (qword_267C94990 != -1) {
    swift_once();
  }
  uint64_t v21 = sub_21CB880A0();
  uint64_t v22 = sub_21CA4CC18(v21, (uint64_t)qword_267CA5368);
  swift_retain();
  uint64_t v92 = v22;
  uint64_t v23 = sub_21CB88070();
  os_log_type_t v24 = sub_21CB88880();
  BOOL v25 = os_log_type_enabled(v23, v24);
  uint64_t v83 = v19;
  if (v25)
  {
    uint64_t v26 = v94;
    uint64_t v27 = swift_slowAlloc();
    *(_DWORD *)uint64_t v27 = 67109376;
    LODWORD(v96[0]) = refreshed == v8;
    sub_21CB889C0();
    *(_WORD *)(v27 + 8) = 1024;
    LODWORD(v96[0]) = *(unsigned __int8 *)(v26 + qword_267C97470);
    sub_21CB889C0();
    swift_release();
    _os_log_impl(&dword_21CA00000, v23, v24, "FMFServerInteractionController: createNetworkAlertIfNeeded: %{BOOL}d %{BOOL}d", (uint8_t *)v27, 0xEu);
    MEMORY[0x21D4B6B70](v27, -1, -1);
  }
  else
  {

    swift_release();
  }
  if (refreshed == v8 && (*(unsigned char *)(v94 + qword_267C97470) & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    LOBYTE(v96[0]) = 4;
    uint64_t v36 = sub_21CADA1A0((unsigned __int8 *)v96);
    uint64_t v37 = MEMORY[0x21D4B6C80](v94 + qword_267CA53A0);
    if (v37)
    {
      uint64_t v38 = v37;
      swift_retain();
      uint64_t v39 = sub_21CB88070();
      os_log_type_t v40 = sub_21CB88880();
      if (os_log_type_enabled(v39, v40))
      {
        unint64_t v41 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)unint64_t v41 = 0;
        _os_log_impl(&dword_21CA00000, v39, v40, "FMFManager: didReceive serverAlert", v41, 2u);
        MEMORY[0x21D4B6B70](v41, -1, -1);
      }

      swift_beginAccess();
      if (MEMORY[0x21D4B6C80](v38 + 32))
      {
        uint64_t v42 = *(void *)(v38 + 40);
        uint64_t ObjectType = swift_getObjectType();
        (*(void (**)(uint64_t, void *, uint64_t, uint64_t))(v42 + 104))(v38, v36, ObjectType, v42);
        swift_release();
        swift_release();
        swift_unknownObjectRelease();
LABEL_25:
        swift_unknownObjectRelease();
        return;
      }
      swift_release();
      swift_release();
      swift_unknownObjectRelease();
    }
    else
    {
      swift_release();
    }
  }
  else
  {
    if (!a2) {
      goto LABEL_19;
    }
    uint64_t v87 = v17;
    unint64_t v28 = (void *)sub_21CB873F0();
    id v29 = objc_msgSend(v28, sel_domain);
    uint64_t v30 = sub_21CB882F0();
    uint64_t v32 = v31;

    if (v30 == sub_21CB882F0() && v32 == v33)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v34 = sub_21CB88F50();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v34 & 1) == 0)
      {
LABEL_18:

LABEL_19:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return;
      }
    }
    if (refreshed == v8) {
      goto LABEL_18;
    }
    uint64_t v35 = v14;
    if (objc_msgSend(v28, sel_code) == (id)-1001
      || objc_msgSend(v28, sel_code) == (id)-999
      || objc_msgSend(v28, sel_code) == (id)-1005)
    {
      goto LABEL_18;
    }
    id v44 = v28;
    uint64_t v45 = sub_21CB88070();
    os_log_type_t v46 = sub_21CB88880();
    if (os_log_type_enabled(v45, v46))
    {
      uint64_t v47 = (uint8_t *)swift_slowAlloc();
      id v82 = (id)swift_slowAlloc();
      v96[0] = (uint64_t)v82;
      *(_DWORD *)uint64_t v47 = 136315138;
      v81[1] = v47 + 4;
      id v48 = objc_msgSend(v44, sel_debugDescription);
      uint64_t v49 = sub_21CB882F0();
      unint64_t v51 = v50;

      uint64_t v35 = v14;
      uint64_t v95 = sub_21CA4E450(v49, v51, v96);
      sub_21CB889C0();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_21CA00000, v45, v46, "FMFServerInteractionController: error received: %s", v47, 0xCu);
      id v52 = v82;
      swift_arrayDestroy();
      MEMORY[0x21D4B6B70](v52, -1, -1);
      MEMORY[0x21D4B6B70](v47, -1, -1);
    }
    else
    {
    }
    id v82 = v44;
    swift_getErrorValue();
    if (sub_21CA83D20(v96[4]))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      id v53 = v84;
      uint64_t v54 = v86;
      id v55 = objc_msgSend(v84, sel_bundleForClass_, v86);
      uint64_t v91 = sub_21CB872B0();
      uint64_t v35 = v56;

      id v57 = objc_msgSend(v53, sel_bundleForClass_, v54);
      uint64_t v58 = sub_21CB872B0();
      uint64_t v60 = v59;

      id v61 = objc_msgSend(v53, sel_bundleForClass_, v54);
      uint64_t v62 = sub_21CB872B0();
      uint64_t v64 = v63;
    }
    else
    {
      uint64_t v60 = v87;
      uint64_t v64 = v93;
      uint64_t v58 = v85;
      uint64_t v62 = v83;
    }
    uint64_t v65 = sub_21CB87480();
    char v66 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v65 - 8) + 56);
    uint64_t v67 = (uint64_t)v89;
    v66(v89, 1, 1, v65);
    uint64_t v68 = (uint64_t)v90;
    uint64_t v69 = ((uint64_t (*)(char *, uint64_t, uint64_t, uint64_t))v66)(v90, 1, 1, v65);
    if ((*(uint64_t (**)(uint64_t))(qword_267CA5200 + *v88 + 192))(v69)) {
      char v70 = 2;
    }
    else {
      char v70 = 3;
    }
    type metadata accessor for FMFAlert();
    uint64_t v71 = (void *)swift_allocObject();
    v71[3] = 0;
    swift_unknownObjectWeakInit();
    v71[4] = 0;
    v71[5] = 0;
    v71[6] = v91;
    v71[7] = v35;
    v71[8] = v58;
    v71[9] = v60;
    v71[10] = v62;
    v71[11] = v64;
    v71[12] = 0;
    v71[13] = 0;
    sub_21CA66D0C(v67, (uint64_t)v71 + OBJC_IVAR____TtC7FMFCore8FMFAlert_okButtonURL);
    sub_21CA66D0C(v68, (uint64_t)v71 + OBJC_IVAR____TtC7FMFCore8FMFAlert_cancelButtonURL);
    *((unsigned char *)v71 + OBJC_IVAR____TtC7FMFCore8FMFAlert_alertType) = v70;
    uint64_t v72 = MEMORY[0x21D4B6C80](v94 + qword_267CA53A0);
    if (v72)
    {
      uint64_t v73 = v72;
      swift_retain();
      uint64_t v74 = sub_21CB88070();
      os_log_type_t v75 = sub_21CB88880();
      BOOL v76 = os_log_type_enabled(v74, v75);
      id v77 = v82;
      if (v76)
      {
        uint64_t v78 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v78 = 0;
        _os_log_impl(&dword_21CA00000, v74, v75, "FMFManager: didReceive serverAlert", v78, 2u);
        MEMORY[0x21D4B6B70](v78, -1, -1);
      }

      swift_beginAccess();
      if (MEMORY[0x21D4B6C80](v73 + 32))
      {
        uint64_t v79 = *(void *)(v73 + 40);
        uint64_t v80 = swift_getObjectType();
        (*(void (**)(uint64_t, void *, uint64_t, uint64_t))(v79 + 104))(v73, v71, v80, v79);
        swift_release();
        swift_release();
        swift_unknownObjectRelease();

        goto LABEL_25;
      }
      swift_release();
      swift_release();
      swift_unknownObjectRelease();
    }
    else
    {
      swift_release();
    }
  }
}

void sub_21CB3121C()
{
}

uint64_t sub_21CB3124C()
{
  return type metadata accessor for FMFServerInteractionController();
}

uint64_t sub_21CB31254()
{
  swift_release();
  swift_release();
  swift_release();

  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_21CB3129C()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 40, 7);
}

unint64_t sub_21CB312DC()
{
  unint64_t result = qword_267C97498;
  if (!qword_267C97498)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C97498);
  }
  return result;
}

uint64_t sub_21CB31330()
{
  swift_release();
  swift_release();
  swift_release();

  return MEMORY[0x270FA0238](v0, 56, 7);
}

uint64_t sub_21CB31378()
{
  swift_release();
  swift_release();
  swift_release();

  return MEMORY[0x270FA0238](v0, 64, 7);
}

uint64_t sub_21CB313C8()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

id sub_21CB31400()
{
  uint64_t v1 = v0;
  if (qword_267C94990 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_21CB880A0();
  sub_21CA4CC18(v2, (uint64_t)qword_267CA5368);
  int v3 = sub_21CB88070();
  os_log_type_t v4 = sub_21CB88880();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl(&dword_21CA00000, v3, v4, "FMFMyLocationController: Restarting to update my location", v5, 2u);
    MEMORY[0x21D4B6B70](v5, -1, -1);
  }

  uint64_t v6 = *(void **)(v1 + OBJC_IVAR____TtC7FMFCore23FMFMyLocationController_locationManager);
  objc_msgSend(v6, sel_stopUpdatingLocation);

  return objc_msgSend(v6, sel_startUpdatingLocation);
}

uint64_t sub_21CB31514(void *a1, void *a2, char a3)
{
  uint64_t v7 = sub_21CB88100();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_21CB88150();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21[0] = *(void *)&v3[OBJC_IVAR____TtC7FMFCore23FMFMyLocationController_myLocationUpdatingQueue];
  uint64_t v15 = swift_allocObject();
  *(unsigned char *)(v15 + 16) = a3;
  *(void *)(v15 + 24) = v3;
  *(void *)(v15 + 32) = a1;
  *(void *)(v15 + 40) = a2;
  aBlock[4] = sub_21CB33994;
  void aBlock[5] = v15;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_21CA1B084;
  uint64_t aBlock[3] = &unk_26CD6FA40;
  uint64_t v16 = _Block_copy(aBlock);
  uint64_t v17 = v3;
  id v18 = a1;
  id v19 = a2;
  sub_21CB88120();
  v21[1] = MEMORY[0x263F8EE78];
  sub_21CA364B0((unint64_t *)&qword_267C96FC0, MEMORY[0x263F8F030]);
  sub_21CA57E34((uint64_t *)&unk_267C96DD0);
  sub_21CA3566C((unint64_t *)&qword_267C96FD0, (uint64_t *)&unk_267C96DD0);
  sub_21CB88A60();
  MEMORY[0x21D4B5A20](0, v14, v10, v16);
  _Block_release(v16);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  return swift_release();
}

void sub_21CB317DC(char a1, unsigned char *a2, id a3, void *a4)
{
  if (a1) {
    goto LABEL_8;
  }
  if ((a2[OBJC_IVAR____TtC7FMFCore23FMFMyLocationController_accuracyThreshold + 8] & 1) == 0)
  {
    double v7 = *(double *)&a2[OBJC_IVAR____TtC7FMFCore23FMFMyLocationController_accuracyThreshold];
    objc_msgSend(a3, sel_horizontalAccuracy);
    if (v7 <= v8)
    {
      if (qword_267C94990 != -1) {
        swift_once();
      }
      uint64_t v26 = sub_21CB880A0();
      sub_21CA4CC18(v26, (uint64_t)qword_267CA5368);
      id v34 = a3;
      uint64_t v27 = sub_21CB88070();
      os_log_type_t v28 = sub_21CB88880();
      if (!os_log_type_enabled(v27, v28))
      {

        goto LABEL_9;
      }
      uint64_t v29 = swift_slowAlloc();
      *(_DWORD *)uint64_t v29 = 134349312;
      objc_msgSend(v34, sel_horizontalAccuracy);
      sub_21CB889C0();

      *(_WORD *)(v29 + 12) = 2050;
      sub_21CB889C0();
      _os_log_impl(&dword_21CA00000, v27, v28, "FMFMyLocationController: Can‘t publish location because accuracy (%{public}f) is worse than threshold (%{public}f)", (uint8_t *)v29, 0x16u);
      MEMORY[0x21D4B6B70](v29, -1, -1);
LABEL_21:

      return;
    }
  }
  uint64_t v9 = *(void **)&a2[OBJC_IVAR____TtC7FMFCore23FMFMyLocationController_currentMyLocation];
  if (!v9 || (a2[OBJC_IVAR____TtC7FMFCore23FMFMyLocationController_distanceThreshold + 8] & 1) != 0) {
    goto LABEL_8;
  }
  double v10 = *(double *)&a2[OBJC_IVAR____TtC7FMFCore23FMFMyLocationController_distanceThreshold];
  id v11 = v9;
  objc_msgSend(v11, sel_distanceFromLocation_, a3);
  if (v12 <= v10)
  {
    if (qword_267C94990 != -1) {
      swift_once();
    }
    uint64_t v30 = sub_21CB880A0();
    sub_21CA4CC18(v30, (uint64_t)qword_267CA5368);
    id v31 = a3;
    id v34 = v11;
    uint64_t v27 = sub_21CB88070();
    os_log_type_t v32 = sub_21CB88880();
    if (!os_log_type_enabled(v27, v32))
    {

      goto LABEL_9;
    }
    uint64_t v33 = swift_slowAlloc();
    *(_DWORD *)uint64_t v33 = 134349312;
    objc_msgSend(v34, sel_distanceFromLocation_, v31);
    sub_21CB889C0();

    *(_WORD *)(v33 + 12) = 2050;
    sub_21CB889C0();
    _os_log_impl(&dword_21CA00000, v27, v32, "FMFMyLocationController: Can‘t publish location because distance (%{public}f) less than threshold (%{public}f)", (uint8_t *)v33, 0x16u);
    MEMORY[0x21D4B6B70](v33, -1, -1);

    goto LABEL_21;
  }

LABEL_8:
  type metadata accessor for FMFMyLocationRequest();
  *(void *)(swift_allocObject() + qword_267CA5350) = a4;
  id v13 = a4;
  uint64_t v14 = sub_21CA36A84();
  id v15 = objc_allocWithZone(MEMORY[0x263F3BA18]);
  uint64_t v16 = (void *)sub_21CB882C0();
  id v17 = objc_msgSend(v15, sel_initWithDescription_andTimeout_, v16, 120.0);

  uint64_t v18 = *(void *)&a2[OBJC_IVAR____TtC7FMFCore23FMFMyLocationController_interactionController + 24];
  uint64_t v19 = *(void *)&a2[OBJC_IVAR____TtC7FMFCore23FMFMyLocationController_interactionController + 32];
  sub_21CA2B2CC(&a2[OBJC_IVAR____TtC7FMFCore23FMFMyLocationController_interactionController], v18);
  uint64_t v20 = (void *)swift_allocObject();
  long long v20[2] = a2;
  v20[3] = a3;
  v20[4] = v17;
  v20[5] = v13;
  id v21 = a3;
  uint64_t v22 = *(void (**)(void *, id (*)(uint64_t, void *), void *, uint64_t, uint64_t))(v19 + 72);
  id v23 = v21;
  id v24 = v13;
  BOOL v25 = a2;
  id v34 = v17;
  v22(v14, sub_21CB339F4, v20, v18, v19);
  swift_release();
  objc_msgSend(v34, sel_wait);
  swift_release();
LABEL_9:
}

id sub_21CB31CB4(uint64_t a1, void *a2, char *a3, void *a4, void *a5, void *a6)
{
  id v97 = a4;
  id v11 = (int *)type metadata accessor for FMFLocation();
  uint64_t v98 = *((void *)v11 - 1);
  MEMORY[0x270FA5388](v11);
  id v13 = (char *)&v91 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_21CB875D0();
  uint64_t v99 = *(void *)(v14 - 8);
  uint64_t v100 = v14;
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (char *)&v91 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_21CA57E34((uint64_t *)&unk_267C96EF0);
  uint64_t v18 = MEMORY[0x270FA5388](v17 - 8);
  MEMORY[0x270FA5388](v18);
  id v21 = (char *)&v91 - v20;
  if (a2)
  {
    uint64_t v93 = v13;
    uint64_t v94 = v19;
    if (qword_267C94990 != -1) {
      swift_once();
    }
    uint64_t v22 = sub_21CB880A0();
    uint64_t v23 = sub_21CA4CC18(v22, (uint64_t)qword_267CA5368);
    id v24 = a2;
    id v25 = a2;
    uint64_t v95 = v23;
    uint64_t v26 = sub_21CB88070();
    os_log_type_t v27 = sub_21CB88860();
    os_log_type_t v28 = a5;
    if (os_log_type_enabled(v26, v27))
    {
      uint64_t v29 = swift_slowAlloc();
      uint64_t v92 = a3;
      uint64_t v30 = (uint8_t *)v29;
      uint64_t v31 = swift_slowAlloc();
      uint64_t v96 = a5;
      uint64_t v32 = v31;
      v106[0] = v31;
      *(_DWORD *)uint64_t v30 = 136315138;
      uint64_t v91 = v21;
      v105[0] = a2;
      sub_21CA57E34(&qword_267C975A0);
      uint64_t v33 = sub_21CB88990();
      v105[0] = sub_21CA4E450(v33, v34, v106);
      id v21 = v91;
      sub_21CB889C0();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_21CA00000, v26, v27, "Error while getting my location details. Error - %s", v30, 0xCu);
      swift_arrayDestroy();
      os_log_type_t v28 = v96;
      MEMORY[0x21D4B6B70](v32, -1, -1);
      uint64_t v35 = v30;
      a3 = v92;
      MEMORY[0x21D4B6B70](v35, -1, -1);
    }
    else
    {
    }
    uint64_t v66 = sub_21CB87190();
    v106[3] = v66;
    v106[4] = sub_21CA364B0((unint64_t *)&qword_267C94E20, MEMORY[0x263F3CA38]);
    uint64_t v67 = sub_21CA6D80C(v106);
    (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v66 - 8) + 104))(v67, *MEMORY[0x263F3CA20], v66);
    LOBYTE(v66) = MEMORY[0x21D4B4280](v106);
    sub_21CA2B0D0((uint64_t)v106);
    if ((v66 & 1) == 0) {
      return objc_msgSend(v28, sel_signal);
    }
    double v68 = sub_21CA76144(v104);
    *((void *)v21 + 3) = 0;
    v21[32] = 1;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t, double))(v99 + 56))(&v21[v11[8]], 1, 1, v100, v68);
    *(void *)id v21 = 0;
    *((void *)v21 + 1) = 0;
    v21[16] = 0;
    sub_21CA26A4C((uint64_t)v104, (uint64_t)v105, &qword_267C951E0);
    uint64_t v69 = v97;
    v105[38] = v97;
    LOBYTE(v105[39]) = 0;
    v105[43] = 0;
    LOBYTE(v105[44]) = 0;
    memset(&v105[40], 0, 18);
    memcpy(v106, v105, 0x161uLL);
    nullsub_1(v106, v70);
    sub_21CA26A4C((uint64_t)v106, (uint64_t)&v21[v11[11]], &qword_267C951F0);
    v21[33] = 0;
    v21[v11[9]] = 0;
    v21[v11[10]] = 0;
    (*(void (**)(char *, void, uint64_t, int *))(v98 + 56))(v21, 0, 1, v11);
    uint64_t v71 = (uint64_t)&a3[OBJC_IVAR____TtC7FMFCore23FMFMyLocationController_myLocation];
    swift_beginAccess();
    id v72 = v69;
    sub_21CA05BA8((uint64_t)v21, v71);
    swift_endAccess();
    uint64_t v73 = a3;
    uint64_t v74 = sub_21CB88070();
    int v75 = sub_21CB88880();
    if (!os_log_type_enabled(v74, (os_log_type_t)v75))
    {

      goto LABEL_21;
    }
    LODWORD(v99) = v75;
    BOOL v76 = (uint8_t *)swift_slowAlloc();
    uint64_t v77 = swift_slowAlloc();
    uint64_t v103 = v77;
    *(_DWORD *)BOOL v76 = 136315138;
    uint64_t v78 = v94;
    sub_21CA192A0(v71, v94);
    int v79 = (*(uint64_t (**)(uint64_t, uint64_t, int *))(v98 + 48))(v78, 1, v11);
    uint64_t v96 = v28;
    uint64_t v100 = v77;
    if (v79)
    {
      uint64_t v80 = 7104878;
      sub_21CA19240(v78);
    }
    else
    {
      uint64_t v81 = (uint64_t)v93;
      sub_21CA2C9E8(v78, (uint64_t)v93);
      sub_21CA19240(v78);
      sub_21CA26A4C(v81 + v11[11], (uint64_t)v101, &qword_267C951F0);
      sub_21CA26A4C((uint64_t)v101, (uint64_t)v102, &qword_267C951F0);
      if (sub_21CA7CDBC((uint64_t)v102) != 1)
      {
        id v88 = (id)v102[38];
        sub_21CA2CA4C(v81);
        id v89 = objc_msgSend(v88, sel_description);

        uint64_t v80 = sub_21CB882F0();
        unint64_t v82 = v90;

        goto LABEL_20;
      }
      uint64_t v80 = 7104878;
      sub_21CA2CA4C(v81);
    }
    unint64_t v82 = 0xE300000000000000;
LABEL_20:
    os_log_type_t v83 = v99;
    v102[0] = sub_21CA4E450(v80, v82, &v103);
    sub_21CB889C0();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_21CA00000, v74, v83, "FMFMyLocationController: Updated non-server adjusted location to %s", v76, 0xCu);
    uint64_t v84 = v100;
    swift_arrayDestroy();
    MEMORY[0x21D4B6B70](v84, -1, -1);
    MEMORY[0x21D4B6B70](v76, -1, -1);

    os_log_type_t v28 = v96;
LABEL_21:
    uint64_t v85 = &v73[OBJC_IVAR____TtC7FMFCore23FMFMyLocationController_delegate];
    if (MEMORY[0x21D4B6C80](&v73[OBJC_IVAR____TtC7FMFCore23FMFMyLocationController_delegate]))
    {
      uint64_t v86 = *((void *)v85 + 1);
      uint64_t ObjectType = swift_getObjectType();
      sub_21CA192A0(v71, (uint64_t)v21);
      (*(void (**)(char *, uint64_t, uint64_t))(v86 + 8))(v21, ObjectType, v86);
      swift_unknownObjectRelease();
      sub_21CA19240((uint64_t)v21);
    }
    return objc_msgSend(v28, sel_signal);
  }
  if (a1)
  {
    uint64_t v36 = &a3[OBJC_IVAR____TtC7FMFCore23FMFMyLocationController_accuracyThreshold];
    *(void *)uint64_t v36 = *(void *)(a1 + 376);
    v36[8] = 0;
    uint64_t v37 = &a3[OBJC_IVAR____TtC7FMFCore23FMFMyLocationController_distanceThreshold];
    *(void *)uint64_t v37 = *(void *)(a1 + 384);
    v37[8] = 0;
    uint64_t v38 = a3;
    uint64_t v39 = *(void **)&a3[OBJC_IVAR____TtC7FMFCore23FMFMyLocationController_currentMyLocation];
    os_log_type_t v40 = v97;
    *(void *)&v38[OBJC_IVAR____TtC7FMFCore23FMFMyLocationController_currentMyLocation] = v97;
    swift_retain();
    id v97 = v40;

    unint64_t v41 = *(void **)&v38[OBJC_IVAR____TtC7FMFCore23FMFMyLocationController_unshiftedLocation];
    *(void *)&v38[OBJC_IVAR____TtC7FMFCore23FMFMyLocationController_unshiftedLocation] = a6;
    id v42 = a6;

    uint64_t v43 = *(void **)(a1 + 320);
    sub_21CA26A4C(a1 + 16, (uint64_t)v102, &qword_267C951E0);
    uint64_t v96 = a5;
    uint64_t v44 = *(void *)(a1 + 336);
    uint64_t v45 = *(void *)(a1 + 344);
    LODWORD(v95) = *(unsigned __int16 *)(a1 + 352);
    uint64_t v46 = *(void *)(a1 + 360);
    *((void *)v21 + 3) = 0;
    v21[32] = 1;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v99 + 56))(&v21[v11[8]], 1, 1, v100);
    *(void *)id v21 = 0;
    *((void *)v21 + 1) = 0;
    v21[16] = 0;
    sub_21CA26A4C((uint64_t)v102, (uint64_t)v105, &qword_267C951E0);
    v105[38] = v43;
    LOBYTE(v105[39]) = 0;
    v105[40] = v44;
    v105[41] = v45;
    LOWORD(v105[42]) = v95;
    v105[43] = v46;
    LOBYTE(v105[44]) = 0;
    memcpy(v106, v105, 0x161uLL);
    nullsub_1(v106, v47);
    sub_21CA26A4C((uint64_t)v106, (uint64_t)&v21[v11[11]], &qword_267C951F0);
    v21[33] = 0;
    v21[v11[9]] = 0;
    v21[v11[10]] = 0;
    (*(void (**)(char *, void, uint64_t, int *))(v98 + 56))(v21, 0, 1, v11);
    uint64_t v48 = (uint64_t)&v38[OBJC_IVAR____TtC7FMFCore23FMFMyLocationController_myUnshiftedLocation];
    swift_beginAccess();
    id v49 = v43;
    sub_21CAB6AA4(v102);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_21CA05BA8((uint64_t)v21, v48);
    swift_endAccess();
    unint64_t v50 = (void *)swift_allocObject();
    id v52 = v96;
    unint64_t v51 = v97;
    v50[2] = v38;
    v50[3] = v51;
    v50[4] = a1;
    v50[5] = v52;
    id v53 = v49;
    swift_retain();
    id v54 = v51;
    id v55 = v53;
    v38;
    id v56 = v52;
    sub_21CB875C0();
    uint64_t v57 = sub_21CB875B0();
    uint64_t v59 = v58;
    (*(void (**)(char *, uint64_t))(v99 + 8))(v16, v100);
    type metadata accessor for FMLocationShiftingRequest();
    uint64_t v60 = (void *)swift_allocObject();
    v60[2] = v55;
    v60[3] = v57;
    v60[4] = v59;
    sub_21CA57E34((uint64_t *)&unk_267C97590);
    uint64_t v61 = swift_allocObject();
    *(_OWORD *)(v61 + 16) = xmmword_21CB91560;
    *(void *)(v61 + 32) = v60;
    v101[0] = v61;
    sub_21CB88530();
    uint64_t v62 = v101[0];
    uint64_t v63 = (void *)swift_allocObject();
    v63[2] = v55;
    v63[3] = sub_21CB33A50;
    v63[4] = v50;
    id v64 = v55;
    swift_retain();
    swift_retain();
    sub_21CA5D8D4(v62, (uint64_t)sub_21CA638B4, (uint64_t)v63);
    swift_release();
    swift_release();

    swift_release();
    swift_bridgeObjectRelease();
    return (id)swift_release();
  }
  else
  {
    return objc_msgSend(a5, sel_signal);
  }
}

id sub_21CB327EC(void *a1, void *a2, void *a3, uint64_t a4, void *a5)
{
  id v55 = a5;
  id v53 = a2;
  double v8 = (int *)type metadata accessor for FMFLocation();
  uint64_t v52 = *((void *)v8 - 1);
  MEMORY[0x270FA5388](v8);
  uint64_t v50 = (uint64_t)&v50 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_21CA57E34((uint64_t *)&unk_267C96EF0);
  uint64_t v11 = MEMORY[0x270FA5388](v10 - 8);
  uint64_t v51 = (uint64_t)&v50 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  id v54 = (char *)&v50 - v14;
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v50 - v15;
  id v17 = a1;
  if (!a1) {
    id v17 = a3;
  }
  sub_21CA26A4C(a4 + 16, (uint64_t)v59, &qword_267C951E0);
  uint64_t v18 = *(void *)(a4 + 336);
  uint64_t v19 = *(void *)(a4 + 344);
  __int16 v20 = *(_WORD *)(a4 + 352);
  *((void *)v16 + 3) = 0;
  v16[32] = 1;
  id v21 = &v16[v8[8]];
  uint64_t v22 = sub_21CB875D0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v21, 1, 1, v22);
  *(void *)uint64_t v16 = 0;
  *((void *)v16 + 1) = 0;
  v16[16] = 0;
  sub_21CA26A4C((uint64_t)v59, (uint64_t)v60, &qword_267C951E0);
  v60[38] = v17;
  LOBYTE(v60[39]) = 0;
  v60[40] = v18;
  v60[41] = v19;
  LOWORD(v60[42]) = v20;
  v60[43] = 0;
  LOBYTE(v60[44]) = 0;
  memcpy(v61, v60, 0x161uLL);
  nullsub_1(v61, v23);
  sub_21CA26A4C((uint64_t)v61, (uint64_t)&v16[v8[11]], &qword_267C951F0);
  v16[33] = 0;
  v16[v8[9]] = 0;
  v16[v8[10]] = 0;
  uint64_t v24 = v52;
  (*(void (**)(char *, void, uint64_t, int *))(v52 + 56))(v16, 0, 1, v8);
  id v25 = v53;
  uint64_t v26 = (uint64_t)v53 + OBJC_IVAR____TtC7FMFCore23FMFMyLocationController_myLocation;
  swift_beginAccess();
  id v27 = a1;
  sub_21CAB6AA4(v59);
  swift_bridgeObjectRetain();
  sub_21CA05BA8((uint64_t)v16, v26);
  swift_endAccess();
  if (qword_267C94990 != -1) {
    swift_once();
  }
  uint64_t v28 = sub_21CB880A0();
  sub_21CA4CC18(v28, (uint64_t)qword_267CA5368);
  uint64_t v29 = v25;
  uint64_t v30 = sub_21CB88070();
  os_log_type_t v31 = sub_21CB88880();
  BOOL v32 = os_log_type_enabled(v30, v31);
  uint64_t v33 = (uint64_t)v54;
  if (!v32)
  {

    goto LABEL_13;
  }
  unint64_t v34 = (uint8_t *)swift_slowAlloc();
  uint64_t v35 = swift_slowAlloc();
  uint64_t v58 = v35;
  *(_DWORD *)unint64_t v34 = 136315138;
  sub_21CA192A0(v26, v33);
  if ((*(unsigned int (**)(uint64_t, uint64_t, int *))(v24 + 48))(v33, 1, v8))
  {
    uint64_t v36 = 7104878;
    sub_21CA19240(v33);
  }
  else
  {
    uint64_t v37 = v33;
    uint64_t v38 = v33;
    uint64_t v39 = v50;
    sub_21CA2C9E8(v37, v50);
    sub_21CA19240(v38);
    sub_21CA26A4C(v39 + v8[11], (uint64_t)v56, &qword_267C951F0);
    sub_21CA26A4C((uint64_t)v56, (uint64_t)v57, &qword_267C951F0);
    if (sub_21CA7CDBC((uint64_t)v57) != 1)
    {
      id v47 = (id)v57[38];
      sub_21CA2CA4C(v39);
      id v48 = objc_msgSend(v47, sel_description);

      uint64_t v36 = sub_21CB882F0();
      unint64_t v40 = v49;

      goto LABEL_12;
    }
    uint64_t v36 = 7104878;
    sub_21CA2CA4C(v39);
  }
  unint64_t v40 = 0xE300000000000000;
LABEL_12:
  v57[0] = sub_21CA4E450(v36, v40, &v58);
  sub_21CB889C0();

  swift_bridgeObjectRelease();
  _os_log_impl(&dword_21CA00000, v30, v31, "FMFMyLocationController: Updated server adjusted location to %s", v34, 0xCu);
  swift_arrayDestroy();
  MEMORY[0x21D4B6B70](v35, -1, -1);
  MEMORY[0x21D4B6B70](v34, -1, -1);

LABEL_13:
  unint64_t v41 = &v29[OBJC_IVAR____TtC7FMFCore23FMFMyLocationController_delegate];
  if (MEMORY[0x21D4B6C80](&v29[OBJC_IVAR____TtC7FMFCore23FMFMyLocationController_delegate]))
  {
    uint64_t v42 = *((void *)v41 + 1);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v44 = v26;
    uint64_t v45 = v51;
    sub_21CA192A0(v44, v51);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v42 + 8))(v45, ObjectType, v42);
    swift_unknownObjectRelease();
    sub_21CA19240(v45);
  }
  return objc_msgSend(v55, sel_signal);
}

uint64_t sub_21CB32D90()
{
  uint64_t v1 = sub_21CB88100();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  os_log_type_t v4 = (char *)v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_21CB88150();
  uint64_t v5 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  double v7 = (char *)v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11[1] = *(void *)(v0 + OBJC_IVAR____TtC7FMFCore23FMFMyLocationController_myLocationUpdatingQueue);
  uint64_t v8 = swift_allocObject();
  swift_unknownObjectWeakInit();
  aBlock[4] = sub_21CB338B8;
  void aBlock[5] = v8;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_21CA1B084;
  uint64_t aBlock[3] = &unk_26CD6F950;
  uint64_t v9 = _Block_copy(aBlock);
  swift_retain();
  sub_21CB88120();
  uint64_t v13 = MEMORY[0x263F8EE78];
  sub_21CA364B0((unint64_t *)&qword_267C96FC0, MEMORY[0x263F8F030]);
  sub_21CA57E34((uint64_t *)&unk_267C96DD0);
  sub_21CA3566C((unint64_t *)&qword_267C96FD0, (uint64_t *)&unk_267C96DD0);
  sub_21CB88A60();
  MEMORY[0x21D4B5A20](0, v7, v4, v9);
  _Block_release(v9);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v12);
  swift_release();
  return swift_release();
}

void sub_21CB33058(uint64_t a1)
{
  uint64_t v2 = sub_21CA57E34((uint64_t *)&unk_267C96EF0);
  MEMORY[0x270FA5388](v2 - 8);
  os_log_type_t v4 = &v31[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = a1 + 16;
  swift_beginAccess();
  uint64_t v6 = MEMORY[0x21D4B6C80](v5);
  if (v6)
  {
    double v7 = (void *)v6;
    uint64_t v8 = type metadata accessor for FMFLocation();
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v4, 1, 1, v8);
    uint64_t v9 = (uint64_t)v7 + OBJC_IVAR____TtC7FMFCore23FMFMyLocationController_myLocation;
    swift_beginAccess();
    sub_21CA05BA8((uint64_t)v4, v9);
    swift_endAccess();
  }
  swift_beginAccess();
  uint64_t v10 = MEMORY[0x21D4B6C80](v5);
  if (v10)
  {
    uint64_t v11 = (void *)v10;
    uint64_t v12 = type metadata accessor for FMFLocation();
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v4, 1, 1, v12);
    uint64_t v13 = (uint64_t)v11 + OBJC_IVAR____TtC7FMFCore23FMFMyLocationController_myUnshiftedLocation;
    swift_beginAccess();
    sub_21CA05BA8((uint64_t)v4, v13);
    swift_endAccess();
  }
  swift_beginAccess();
  uint64_t v14 = (char *)MEMORY[0x21D4B6C80](v5);
  if (v14)
  {
    uint64_t v15 = &v14[OBJC_IVAR____TtC7FMFCore23FMFMyLocationController_accuracyThreshold];
    *(void *)uint64_t v15 = 0;
    v15[8] = 1;
  }
  swift_beginAccess();
  uint64_t v16 = (char *)MEMORY[0x21D4B6C80](v5);
  if (v16)
  {
    id v17 = &v16[OBJC_IVAR____TtC7FMFCore23FMFMyLocationController_distanceThreshold];
    *(void *)id v17 = 0;
    uint64_t v17[8] = 1;
  }
  swift_beginAccess();
  uint64_t v18 = (char *)MEMORY[0x21D4B6C80](v5);
  if (v18)
  {
    uint64_t v19 = *(void **)&v18[OBJC_IVAR____TtC7FMFCore23FMFMyLocationController_currentMyLocation];
    *(void *)&v18[OBJC_IVAR____TtC7FMFCore23FMFMyLocationController_currentMyLocation] = 0;
  }
  swift_beginAccess();
  uint64_t v20 = MEMORY[0x21D4B6C80](v5);
  if (v20)
  {
    id v21 = (void *)v20;
    uint64_t v22 = v20 + OBJC_IVAR____TtC7FMFCore23FMFMyLocationController_delegate;
    uint64_t v23 = MEMORY[0x21D4B6C80](v20 + OBJC_IVAR____TtC7FMFCore23FMFMyLocationController_delegate);
    uint64_t v24 = *(void *)(v22 + 8);

    if (v23)
    {
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v26 = type metadata accessor for FMFLocation();
      (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v4, 1, 1, v26);
      (*(void (**)(unsigned char *, uint64_t, uint64_t))(v24 + 8))(v4, ObjectType, v24);
      swift_unknownObjectRelease();
      sub_21CA19240((uint64_t)v4);
    }
  }
  if (qword_267C94990 != -1) {
    swift_once();
  }
  uint64_t v27 = sub_21CB880A0();
  sub_21CA4CC18(v27, (uint64_t)qword_267CA5368);
  uint64_t v28 = sub_21CB88070();
  os_log_type_t v29 = sub_21CB88880();
  if (os_log_type_enabled(v28, v29))
  {
    uint64_t v30 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v30 = 0;
    _os_log_impl(&dword_21CA00000, v28, v29, "FMFMyLocationController: Invalidated cached location data", v30, 2u);
    MEMORY[0x21D4B6B70](v30, -1, -1);
  }
}

id FMFMyLocationController.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

void FMFMyLocationController.init()()
{
}

id FMFMyLocationController.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMFMyLocationController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void FMFMyLocationController.locationManager(_:didFailWithError:)(uint64_t a1, void *a2)
{
}

Swift::Void __swiftcall FMFMyLocationController.locationManager(_:didChangeAuthorization:)(CLLocationManager _, CLAuthorizationStatus didChangeAuthorization)
{
}

Swift::Void __swiftcall FMFMyLocationController.locationManager(_:didUpdateLocations:)(CLLocationManager _, Swift::OpaquePointer didUpdateLocations)
{
}

void sub_21CB33644(void *a1)
{
  if (qword_267C94990 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_21CB880A0();
  sub_21CA4CC18(v2, (uint64_t)qword_267CA5368);
  id v3 = a1;
  id v4 = a1;
  osos_log_t log = sub_21CB88070();
  os_log_type_t v5 = sub_21CB88860();
  if (os_log_type_enabled(oslog, v5))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    uint64_t v11 = v7;
    *(_DWORD *)uint64_t v6 = 136315138;
    swift_getErrorValue();
    uint64_t v8 = sub_21CB89000();
    sub_21CA4E450(v8, v9, &v11);
    sub_21CB889C0();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_21CA00000, oslog, v5, "FMFMyLocationController: location manager failed with error: %s", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x21D4B6B70](v7, -1, -1);
    MEMORY[0x21D4B6B70](v6, -1, -1);
  }
  else
  {
  }
}

uint64_t dispatch thunk of FMFMyLocationControllerDelegate.didReceive(myLocation:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t sub_21CB33860()
{
  return type metadata accessor for FMFMyLocationController();
}

uint64_t method lookup function for FMFMyLocationController(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for FMFMyLocationController);
}

uint64_t sub_21CB33880()
{
  swift_unknownObjectWeakDestroy();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

void sub_21CB338B8()
{
  sub_21CB33058(v0);
}

uint64_t sub_21CB338C0()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_21CB33904()
{
  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t sub_21CB3394C()
{
  return MEMORY[0x270FA0238](v0, 48, 7);
}

void sub_21CB33994()
{
  sub_21CB317DC(*(unsigned char *)(v0 + 16), *(unsigned char **)(v0 + 24), *(id *)(v0 + 32), *(void **)(v0 + 40));
}

uint64_t sub_21CB339A4()
{
  return MEMORY[0x270FA0238](v0, 48, 7);
}

id sub_21CB339F4(uint64_t a1, void *a2)
{
  return sub_21CB31CB4(a1, a2, *(char **)(v2 + 16), *(void **)(v2 + 24), *(void **)(v2 + 32), *(void **)(v2 + 40));
}

uint64_t sub_21CB33A00()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 48, 7);
}

id sub_21CB33A50(void *a1)
{
  return sub_21CB327EC(a1, *(void **)(v1 + 16), *(void **)(v1 + 24), *(void *)(v1 + 32), *(void **)(v1 + 40));
}

uint64_t FMFNotNowAction.__allocating_init(friend:)(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  sub_21CAD9D08(a1, v2 + OBJC_IVAR____TtC7FMFCore15FMFNotNowAction_friend);
  *(unsigned char *)(v2 + 16) = 0;
  return v2;
}

uint64_t FMFNotNowAction.init(friend:)(uint64_t a1)
{
  sub_21CAD9D08(a1, v1 + OBJC_IVAR____TtC7FMFCore15FMFNotNowAction_friend);
  *(unsigned char *)(v1 + 16) = 0;
  return v1;
}

uint64_t sub_21CB33ADC()
{
  return 0;
}

void FMFNotNowAction.__allocating_init(requiresRefresh:)()
{
}

void FMFNotNowAction.init(requiresRefresh:)()
{
}

uint64_t sub_21CB33C80()
{
  return sub_21CA4C4F4(v0 + OBJC_IVAR____TtC7FMFCore15FMFNotNowAction_friend);
}

uint64_t FMFNotNowAction.deinit()
{
  sub_21CA4C4F4(v0 + OBJC_IVAR____TtC7FMFCore15FMFNotNowAction_friend);
  return v0;
}

uint64_t FMFNotNowAction.__deallocating_deinit()
{
  sub_21CA4C4F4(v0 + OBJC_IVAR____TtC7FMFCore15FMFNotNowAction_friend);

  return swift_deallocClassInstance();
}

uint64_t sub_21CB33D1C()
{
  return type metadata accessor for FMFNotNowAction();
}

uint64_t type metadata accessor for FMFNotNowAction()
{
  uint64_t result = qword_267C975A8;
  if (!qword_267C975A8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t method lookup function for FMFNotNowAction(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for FMFNotNowAction);
}

uint64_t dispatch thunk of FMFNotNowAction.__allocating_init(friend:)()
{
  return (*(uint64_t (**)(void))(v0 + 136))();
}

id sub_21CB33DCC(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v5 = sub_21CB882F0();
  a4(v5);
  swift_bridgeObjectRelease();
  uint64_t v6 = (void *)sub_21CB882C0();
  swift_bridgeObjectRelease();

  return v6;
}

id FMPhoneNumberUtil.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

id FMPhoneNumberUtil.init()()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMPhoneNumberUtil();
  return objc_msgSendSuper2(&v2, sel_init);
}

uint64_t type metadata accessor for FMPhoneNumberUtil()
{
  return self;
}

id FMPhoneNumberUtil.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMPhoneNumberUtil();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_21CB34170()
{
  uint64_t result = CPPhoneNumberCopyHomeCountryCode();
  if (!result)
  {
    __break(1u);
    goto LABEL_27;
  }
  id v1 = (void *)result;
  uint64_t v2 = sub_21CB882F0();
  unint64_t v4 = v3;

  uint64_t v5 = v4 & 0x2000000000000000;
  uint64_t v6 = HIBYTE(v4) & 0xF;
  uint64_t v7 = v2 & 0xFFFFFFFFFFFFLL;
  if ((v4 & 0x2000000000000000) != 0) {
    uint64_t v8 = HIBYTE(v4) & 0xF;
  }
  else {
    uint64_t v8 = v2 & 0xFFFFFFFFFFFFLL;
  }
  if (!v8)
  {
    swift_bridgeObjectRelease();
    uint64_t result = CPPhoneNumberCopyActiveCountryCode();
    if (result)
    {
      unint64_t v9 = (void *)result;
      uint64_t v2 = sub_21CB882F0();
      unint64_t v11 = v10;

      uint64_t v5 = v11 & 0x2000000000000000;
      uint64_t v6 = HIBYTE(v11) & 0xF;
      uint64_t v7 = v2 & 0xFFFFFFFFFFFFLL;
      goto LABEL_8;
    }
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
LABEL_8:
  if (v5) {
    uint64_t v12 = v6;
  }
  else {
    uint64_t v12 = v7;
  }
  if (!v12)
  {
    swift_bridgeObjectRelease();
    uint64_t result = CPPhoneNumberCopyNetworkCountryCode();
    if (result)
    {
      uint64_t v13 = (void *)result;
      uint64_t v2 = sub_21CB882F0();
      unint64_t v15 = v14;

      uint64_t v5 = v15 & 0x2000000000000000;
      uint64_t v6 = HIBYTE(v15) & 0xF;
      uint64_t v7 = v2 & 0xFFFFFFFFFFFFLL;
      goto LABEL_14;
    }
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
LABEL_14:
  if (v5) {
    uint64_t v16 = v6;
  }
  else {
    uint64_t v16 = v7;
  }
  if (v16) {
    goto LABEL_20;
  }
  swift_bridgeObjectRelease();
  uint64_t result = CPPhoneNumberCopyLastKnownNetworkCountryCode();
  if (!result)
  {
LABEL_29:
    __break(1u);
    return result;
  }
  id v17 = (void *)result;
  uint64_t v2 = sub_21CB882F0();
  unint64_t v19 = v18;

  uint64_t v5 = v19 & 0x2000000000000000;
  uint64_t v6 = HIBYTE(v19) & 0xF;
  uint64_t v7 = v2 & 0xFFFFFFFFFFFFLL;
LABEL_20:
  if (v5) {
    uint64_t v20 = v6;
  }
  else {
    uint64_t v20 = v7;
  }
  if (!v20)
  {
    swift_bridgeObjectRelease();
    return 29557;
  }
  return v2;
}

uint64_t sub_21CB342A0(uint64_t a1)
{
  sub_21CB34170();
  uint64_t v2 = (void *)sub_21CB882C0();
  unint64_t v3 = (void *)sub_21CB882C0();
  swift_bridgeObjectRelease();
  unint64_t v4 = (void *)CFPhoneNumberCreate();

  if (!v4) {
    goto LABEL_5;
  }
  id v5 = v4;
  uint64_t String = CFPhoneNumberCreateString();
  if (!String)
  {

LABEL_5:
    swift_bridgeObjectRetain();
    return a1;
  }
  uint64_t v7 = (void *)String;
  a1 = sub_21CB882F0();

  return a1;
}

uint64_t sub_21CB34390(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v23 = a3;
  uint64_t v6 = sub_21CB87280();
  MEMORY[0x270FA5388](v6);
  unint64_t v9 = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = 0;
  unint64_t v27 = 0xE000000000000000;
  uint64_t v10 = HIBYTE(a2) & 0xF;
  uint64_t v28 = a1;
  uint64_t v20 = a1 & 0xFFFFFFFFFFFFLL;
  uint64_t v21 = v10;
  if ((a2 & 0x2000000000000000) == 0) {
    uint64_t v10 = a1 & 0xFFFFFFFFFFFFLL;
  }
  uint64_t v22 = v10;
  if (!v10) {
    return 0;
  }
  uint64_t v11 = 0;
  uint64_t v19 = a2 & 0xFFFFFFFFFFFFFFLL;
  v18[1] = v3;
  v18[2] = (a2 & 0xFFFFFFFFFFFFFFFLL) + 32;
  uint64_t v12 = (void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  uint64_t v13 = (void (**)(char *, uint64_t))(v7 + 8);
  do
  {
    if ((a2 & 0x1000000000000000) != 0)
    {
      sub_21CB88B60();
    }
    else
    {
      if ((a2 & 0x2000000000000000) != 0)
      {
        uint64_t v24 = v28;
        uint64_t v25 = v19;
      }
      else if ((v28 & 0x1000000000000000) == 0)
      {
        sub_21CB88BD0();
      }
      sub_21CB88BE0();
    }
    uint64_t v15 = v14;
    (*v12)(v9, v23, v6);
    char v16 = sub_21CB87270();
    (*v13)(v9, v6);
    if (v16) {
      sub_21CB88360();
    }
    v11 += v15;
  }
  while (v11 < v22);
  return v26;
}

uint64_t sub_21CB34584(uint64_t a1)
{
  if (qword_267C94968 != -1) {
    swift_once();
  }
  uint64_t v2 = qword_267CA52B8;
  uint64_t v3 = (void *)sub_21CB882C0();
  LOBYTE(v2) = objc_msgSend((id)v2, sel_evaluateWithObject_, v3);

  if (v2)
  {
    swift_bridgeObjectRetain();
  }
  else
  {
    a1 = sub_21CB342A0(a1);
    swift_bridgeObjectRetain();
    if ((sub_21CB88460() & 1) != 0 || sub_21CB883A0() <= 1)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_21CB883D0();
      swift_bridgeObjectRelease_n();
      return 43;
    }
  }
  return a1;
}

uint64_t sub_21CB346B4(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = sub_21CB87280();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0) {
    uint64_t v8 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v8)
  {
    sub_21CB87240();
    sub_21CB87260();
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_21CB34390(a1, a2, (uint64_t)v7);
    unint64_t v11 = v10;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    uint64_t v12 = HIBYTE(v11) & 0xF;
    if ((v11 & 0x2000000000000000) == 0) {
      uint64_t v12 = v9 & 0xFFFFFFFFFFFFLL;
    }
    if (!v12)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    if (v9 == a1 && v11 == a2)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      char v14 = sub_21CB88F50();
      swift_bridgeObjectRelease();
      if ((v14 & 1) == 0) {
        return 1;
      }
    }
  }
  return 0;
}

unint64_t FMDemoManager.DemoContext.assetFilename.getter()
{
  if (*v0) {
    return 0xD000000000000014;
  }
  else {
    return 0xD000000000000013;
  }
}

unint64_t FMDemoManager.DemoContext.userDefaultsKey.getter()
{
  if (*v0) {
    return 0xD00000000000001CLL;
  }
  else {
    return 0xD00000000000001BLL;
  }
}

BOOL static FMDemoManager.DemoContext.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t FMDemoManager.DemoContext.hash(into:)()
{
  return sub_21CB89060();
}

uint64_t FMDemoManager.DemoContext.hashValue.getter()
{
  return sub_21CB89090();
}

unint64_t static FMDemoManager.sharedPreferencesDomain.getter()
{
  return 0xD000000000000010;
}

id static FMDemoManager.hasDemoModeUserDefault(for:)()
{
  uint64_t v0 = self;
  id v1 = (void *)sub_21CB882C0();
  swift_bridgeObjectRelease();
  uint64_t v2 = (void *)sub_21CB882C0();
  id v3 = objc_msgSend(v0, sel_BOOLForKey_inDomain_, v1, v2);

  return v3;
}

void sub_21CB34A3C(uint64_t a1)
{
}

uint64_t static FMDemoManager.devicesDemoEnabled.getter()
{
  return sub_21CA65A98(&qword_267C949C8, byte_267C975B9);
}

uint64_t FMDemoManager.deinit()
{
  return v0;
}

uint64_t FMDemoManager.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

unint64_t sub_21CB34AA4()
{
  unint64_t result = qword_267C975E0;
  if (!qword_267C975E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C975E0);
  }
  return result;
}

uint64_t method lookup function for FMDemoManager(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for FMDemoManager);
}

unsigned char *storeEnumTagSinglePayload for FMDemoManager.DemoContext(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x21CB34BDCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FMDemoManager.DemoContext()
{
  return &type metadata for FMDemoManager.DemoContext;
}

unsigned char *storeEnumTagSinglePayload for FMDemoManager.Error(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x21CB34CB0);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for FMDemoManager.Error()
{
  return &type metadata for FMDemoManager.Error;
}

unint64_t sub_21CB34CEC()
{
  unint64_t result = qword_267C975E8;
  if (!qword_267C975E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C975E8);
  }
  return result;
}

uint64_t static FMDiskIO.getOrCreateCacheKey<A>(account:service:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v44 = a5;
  uint64_t v9 = sub_21CB871A0();
  uint64_t v40 = *(void *)(v9 - 8);
  uint64_t v41 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v36 = (char *)v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_21CB87810();
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v13 = (char *)v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_21CB877E0();
  MEMORY[0x270FA5388](v14 - 8);
  uint64_t v16 = (char *)v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = type metadata accessor for FMDiskIO.KeyPair();
  uint64_t v43 = *(void *)(v45 - 8);
  MEMORY[0x270FA5388](v45);
  uint64_t v42 = (char *)v35 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  uint64_t v20 = (char *)v35 - v19;
  v35[1] = a1;
  uint64_t v37 = a2;
  uint64_t v38 = a3;
  uint64_t v39 = a4;
  uint64_t v21 = sub_21CB871C0();
  unint64_t v23 = v22;
  if (v22 >> 60 == 15)
  {
    type metadata accessor for FMDiskIO.FMDiskIOError();
    swift_getWitnessTable();
    id v46 = (id)swift_allocError();
    swift_willThrow();
  }
  else
  {
    uint64_t v24 = v21;
    sub_21CB872E0();
    swift_allocObject();
    sub_21CB872D0();
    id v46 = 0;
    swift_getWitnessTable();
    id v25 = v46;
    sub_21CB872C0();
    if (!v25)
    {
      sub_21CA66C90(v24, v23);
      swift_release();
      uint64_t v33 = v44;
      uint64_t v26 = v45;
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v43 + 32))(v33, v20, v26);
    }
    id v46 = v25;
    sub_21CA66C90(v24, v23);
    swift_release();
  }
  sub_21CB877D0();
  sub_21CB87800();
  uint64_t v20 = v42;
  sub_21CB35974((uint64_t)v16, (uint64_t)v13, (uint64_t)v42);
  sub_21CB87310();
  swift_allocObject();
  sub_21CB87300();
  uint64_t v26 = v45;
  swift_getWitnessTable();
  uint64_t v27 = sub_21CB872F0();
  unint64_t v29 = v28;
  swift_release();
  uint64_t v47 = v27;
  unint64_t v48 = v29;
  uint64_t v31 = v40;
  uint64_t v30 = v41;
  BOOL v32 = v36;
  (*(void (**)(char *, void, uint64_t))(v40 + 104))(v36, *MEMORY[0x263F3CA40], v41);
  sub_21CB2C1A0();
  sub_21CB871B0();
  (*(void (**)(char *, uint64_t))(v31 + 8))(v32, v30);

  sub_21CA36618(v27, v29);
  uint64_t v33 = v44;
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v43 + 32))(v33, v20, v26);
}

uint64_t FMDiskIO.__allocating_init(root:fileName:keyPair:)(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5)
{
  uint64_t v10 = swift_allocObject();
  FMDiskIO.init(root:fileName:keyPair:)(a1, a2, a3, a4, a5);
  return v10;
}

BOOL sub_21CB35410(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

uint64_t sub_21CB35420()
{
  return sub_21CB89060();
}

uint64_t sub_21CB35448(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x4B65746176697270 && a2 == 0xEA00000000007965;
  if (v2 || (sub_21CB88F50() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x697274656D6D7973 && a2 == 0xEC00000079654B63)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_21CB88F50();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_21CB35560()
{
  return sub_21CB89090();
}

BOOL sub_21CB355A8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_21CB35410(*a1, *a2);
}

uint64_t sub_21CB355C0()
{
  return sub_21CB35560();
}

uint64_t sub_21CB355D4()
{
  return sub_21CB35420();
}

uint64_t sub_21CB355E8()
{
  return sub_21CB89090();
}

uint64_t sub_21CB35634@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_21CB35448(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_21CB35668@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_21CB39444();
  *a1 = result;
  return result;
}

uint64_t sub_21CB3569C(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x270FA00B0](a1, WitnessTable);
}

uint64_t sub_21CB356F0(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x270FA00B8](a1, WitnessTable);
}

uint64_t FMDiskIO.KeyPair.encode(to:)(void *a1)
{
  type metadata accessor for FMDiskIO.KeyPair.CodingKeys();
  swift_getWitnessTable();
  uint64_t v2 = sub_21CB88ED0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)v8 - v4;
  sub_21CA2B2CC(a1, a1[3]);
  sub_21CB890C0();
  char v10 = 0;
  sub_21CB877E0();
  sub_21CA22A10(&qword_267C975F0, MEMORY[0x263F3CBE8]);
  uint64_t v6 = v8[1];
  sub_21CB88EB0();
  if (!v6)
  {
    char v9 = 1;
    sub_21CB87810();
    sub_21CA22A10(&qword_267C975F8, MEMORY[0x263F3CC00]);
    sub_21CB88EB0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_21CB35974@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_21CB877E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a3, a1, v6);
  uint64_t v7 = a3 + *(int *)(type metadata accessor for FMDiskIO.KeyPair() + 44);
  uint64_t v8 = sub_21CB87810();
  char v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32);

  return v9(v7, a2, v8);
}

uint64_t sub_21CB35A58(void *a1)
{
  return FMDiskIO.KeyPair.encode(to:)(a1);
}

uint64_t sub_21CB35A70()
{
  uint64_t v2 = *(void *)(v0 + 24);
  swift_bridgeObjectRetain();
  sub_21CB883D0();
  return v2;
}

void *FMDiskIO.init(root:fileName:keyPair:)(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5;
  unint64_t v25 = a4;
  uint64_t v26 = a1;
  uint64_t v27 = a2;
  uint64_t v28 = a3;
  uint64_t v29 = *v5;
  uint64_t v30 = a5;
  uint64_t v7 = sub_21CB888F0();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  char v10 = (char *)v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_21CB888B0();
  MEMORY[0x270FA5388](v11);
  uint64_t v12 = sub_21CB88150();
  MEMORY[0x270FA5388](v12 - 8);
  v24[1] = sub_21CA182AC();
  sub_21CB88120();
  uint64_t v32 = MEMORY[0x263F8EE78];
  sub_21CA22A10((unint64_t *)&qword_267C96F60, MEMORY[0x263F8F0F8]);
  sub_21CA57E34((uint64_t *)&unk_267C96F90);
  sub_21CA3566C((unint64_t *)&qword_267C96F70, (uint64_t *)&unk_267C96F90);
  sub_21CB88A60();
  (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, *MEMORY[0x263F8F130], v7);
  v5[2] = sub_21CB88930();
  if (qword_267C94990 != -1) {
    swift_once();
  }
  uint64_t v13 = sub_21CB880A0();
  sub_21CA4CC18(v13, (uint64_t)qword_267CA5368);
  unint64_t v14 = v25;
  swift_bridgeObjectRetain_n();
  uint64_t v15 = sub_21CB88070();
  os_log_type_t v16 = sub_21CB88880();
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v17 = (uint8_t *)swift_slowAlloc();
    uint64_t v18 = swift_slowAlloc();
    uint64_t v32 = v18;
    *(_DWORD *)uint64_t v17 = 136315138;
    swift_bridgeObjectRetain();
    uint64_t v19 = v28;
    uint64_t v31 = sub_21CA4E450(v28, v14, &v32);
    sub_21CB889C0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_21CA00000, v15, v16, "FMDiskIO: init with file name: %s", v17, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x21D4B6B70](v18, -1, -1);
    MEMORY[0x21D4B6B70](v17, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    uint64_t v19 = v28;
  }
  uint64_t v20 = v27;
  v6[3] = v26;
  v6[4] = v20;
  _OWORD v6[5] = v19;
  void v6[6] = v14;
  uint64_t v21 = (char *)v6 + *(void *)(*v6 + 128);
  type metadata accessor for FMDiskIO.KeyPair();
  uint64_t v22 = sub_21CB889A0();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v22 - 8) + 32))(v21, v30, v22);
  return v6;
}

uint64_t sub_21CB35F20(uint64_t a1)
{
  uint64_t result = (uint64_t)sub_21CB3756C();
  if ((result & 1) == 0)
  {
    if (qword_267C94990 != -1) {
      swift_once();
    }
    uint64_t v3 = sub_21CB880A0();
    sub_21CA4CC18(v3, (uint64_t)qword_267CA5368);
    uint64_t v4 = sub_21CB88070();
    os_log_type_t v5 = sub_21CB88880();
    if (os_log_type_enabled(v4, v5))
    {
      uint64_t v6 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v6 = 0;
      _os_log_impl(&dword_21CA00000, v4, v5, "FMDiskIO: creating to disk", v6, 2u);
      MEMORY[0x21D4B6B70](v6, -1, -1);
    }

    return sub_21CB36038(a1);
  }
  return result;
}

uint64_t sub_21CB36038(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v1;
  uint64_t v32 = v4;
  uint64_t v5 = sub_21CB88100();
  uint64_t v35 = *(void *)(v5 - 8);
  uint64_t v36 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_21CB88150();
  uint64_t v33 = *(void *)(v8 - 8);
  uint64_t v34 = v8;
  MEMORY[0x270FA5388](v8);
  char v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void *)(v4 + 80);
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)&v30 - v14;
  if (qword_267C94990 != -1) {
    swift_once();
  }
  uint64_t v16 = sub_21CB880A0();
  sub_21CA4CC18(v16, (uint64_t)qword_267CA5368);
  uint64_t v17 = sub_21CB88070();
  os_log_type_t v18 = sub_21CB88880();
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v19 = (uint8_t *)swift_slowAlloc();
    uint64_t v31 = v10;
    uint64_t v20 = v7;
    uint64_t v21 = a1;
    uint64_t v22 = v19;
    *(_WORD *)uint64_t v19 = 0;
    _os_log_impl(&dword_21CA00000, v17, v18, "FMDiskIO: save to disk", v19, 2u);
    unint64_t v23 = v22;
    a1 = v21;
    uint64_t v7 = v20;
    char v10 = v31;
    MEMORY[0x21D4B6B70](v23, -1, -1);
  }

  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v15, a1, v11);
  unint64_t v24 = (*(unsigned __int8 *)(v12 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  unint64_t v25 = (char *)swift_allocObject();
  *((void *)v25 + 2) = v11;
  uint64_t v26 = v32;
  *((void *)v25 + 3) = *(void *)(v32 + 88);
  *((void *)v25 + 4) = *(void *)(v26 + 96);
  *((void *)v25 + 5) = v2;
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(&v25[v24], v15, v11);
  aBlock[4] = sub_21CB38B5C;
  void aBlock[5] = v25;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_21CA1B084;
  uint64_t aBlock[3] = &unk_26CD6FC28;
  uint64_t v27 = _Block_copy(aBlock);
  swift_retain();
  sub_21CB88120();
  uint64_t v37 = MEMORY[0x263F8EE78];
  sub_21CA22A10((unint64_t *)&qword_267C96FC0, MEMORY[0x263F8F030]);
  sub_21CA57E34((uint64_t *)&unk_267C96DD0);
  sub_21CA3566C((unint64_t *)&qword_267C96FD0, (uint64_t *)&unk_267C96DD0);
  uint64_t v28 = v36;
  sub_21CB88A60();
  MEMORY[0x21D4B5A20](0, v10, v7, v27);
  _Block_release(v27);
  (*(void (**)(char *, uint64_t))(v35 + 8))(v7, v28);
  (*(void (**)(char *, uint64_t))(v33 + 8))(v10, v34);
  return swift_release();
}

uint64_t sub_21CB364BC(uint64_t a1)
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 80);
  uint64_t v4 = *(void *)(v3 - 8);
  __n128 v5 = MEMORY[0x270FA5388](a1);
  uint64_t v7 = (char *)aBlock - v6;
  uint64_t v8 = v1[2];
  (*(void (**)(char *, __n128))(v4 + 16))((char *)aBlock - v6, v5);
  unint64_t v9 = (*(unsigned __int8 *)(v4 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  char v10 = (char *)swift_allocObject();
  *((void *)v10 + 2) = v3;
  *((void *)v10 + 3) = *(void *)(v2 + 88);
  *((void *)v10 + 4) = *(void *)(v2 + 96);
  *((void *)v10 + 5) = v1;
  (*(void (**)(char *, char *, uint64_t))(v4 + 32))(&v10[v9], v7, v3);
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = sub_21CB38B5C;
  *(void *)(v11 + 24) = v10;
  aBlock[4] = sub_21CA18880;
  void aBlock[5] = v11;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_21CA18830;
  uint64_t aBlock[3] = &unk_26CD6FCA0;
  uint64_t v12 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v8, v12);
  _Block_release(v12);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (isEscapingClosureAtFileLocation) {
    __break(1u);
  }
  return result;
}

void sub_21CB36710(uint64_t a1)
{
  uint64_t v3 = (void *)MEMORY[0x21D4B6380]();
  sub_21CB3676C(v1, a1);
}

void sub_21CB3676C(char *a1, uint64_t a2)
{
  uint64_t v101 = a2;
  v105[1] = *(id *)MEMORY[0x263EF8340];
  uint64_t v3 = *(void *)a1;
  uint64_t v90 = sub_21CB87830();
  uint64_t v89 = *(void *)(v90 - 8);
  MEMORY[0x270FA5388](v90);
  uint64_t v91 = (char *)&v87 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *(void *)(v3 + 80);
  uint64_t v99 = *(void *)(v3 + 96);
  uint64_t v100 = v5;
  uint64_t v6 = type metadata accessor for FMDiskIO.KeyPair();
  uint64_t v95 = sub_21CB889A0();
  uint64_t v94 = *(void *)(v95 - 8);
  MEMORY[0x270FA5388](v95);
  uint64_t v93 = (char *)&v87 - v7;
  uint64_t v96 = v6;
  uint64_t v97 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v92 = (char *)&v87 - v9;
  uint64_t v10 = sub_21CB87480();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v87 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v104 = 0;
  uint64_t v14 = self;
  id v15 = objc_msgSend(v14, sel_defaultManager);
  uint64_t v98 = a1;
  uint64_t v16 = (void *)sub_21CB882C0();
  unsigned __int8 v17 = objc_msgSend(v15, sel_fileExistsAtPath_isDirectory_, v16, &v104);

  if (v17) {
    goto LABEL_3;
  }
  id v18 = objc_msgSend(v14, sel_defaultManager);
  sub_21CB87420();
  uint64_t v19 = (void *)sub_21CB87430();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  v105[0] = 0;
  unsigned int v20 = objc_msgSend(v18, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v19, 1, 0, v105);

  id v21 = v105[0];
  if (v20)
  {
LABEL_3:
    id v88 = v14;
    sub_21CB87310();
    swift_allocObject();
    uint64_t v22 = sub_21CB87300();
    unint64_t v23 = v102;
    uint64_t v24 = sub_21CB872F0();
    unint64_t v102 = v25;
    if (v23)
    {
      swift_release();
      uint64_t v26 = (void *)v23;
LABEL_19:
      if (qword_267C94990 != -1) {
        swift_once();
      }
      uint64_t v69 = sub_21CB880A0();
      sub_21CA4CC18(v69, (uint64_t)qword_267CA5368);
      id v70 = v26;
      id v71 = v26;
      id v72 = sub_21CB88070();
      os_log_type_t v73 = sub_21CB88860();
      if (os_log_type_enabled(v72, v73))
      {
        uint64_t v74 = (uint8_t *)swift_slowAlloc();
        int v75 = (void *)swift_slowAlloc();
        v105[0] = v75;
        *(_DWORD *)uint64_t v74 = 136315138;
        swift_getErrorValue();
        uint64_t v76 = sub_21CB89000();
        uint64_t v103 = sub_21CA4E450(v76, v77, (uint64_t *)v105);
        sub_21CB889C0();
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_21CA00000, v72, v73, "FMDiskIO: Could not save objects to disk %s", v74, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x21D4B6B70](v75, -1, -1);
        MEMORY[0x21D4B6B70](v74, -1, -1);
      }
      else
      {
      }
      return;
    }
    uint64_t v27 = v24;
    uint64_t v28 = v94;
    uint64_t v29 = v93;
    uint64_t v30 = v95;
    (*(void (**)(char *, char *, uint64_t))(v94 + 16))(v93, &v98[*(void *)(*(void *)v98 + 128)], v95);
    uint64_t v31 = v97;
    uint64_t v32 = v96;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v97 + 48))(v29, 1, v96) == 1)
    {
      (*(void (**)(char *, uint64_t))(v28 + 8))(v29, v30);
      uint64_t v33 = v27;
      uint64_t v34 = (void *)sub_21CB874B0();
      sub_21CB35A70();
      uint64_t v35 = (void *)sub_21CB882C0();
      swift_bridgeObjectRelease();
      unsigned __int8 v36 = objc_msgSend(v34, sel_writeToFile_atomically_, v35, 1);

      if (v36)
      {
LABEL_7:
        id v37 = objc_msgSend(v88, sel_defaultManager);
        sub_21CA57E34(&qword_267C97248);
        uint64_t inited = swift_initStackObject();
        uint64_t v39 = (void **)MEMORY[0x263F080A8];
        *(_OWORD *)(inited + 16) = xmmword_21CB8B220;
        uint64_t v40 = *v39;
        *(void *)(inited + 32) = *v39;
        uint64_t v41 = (void *)*MEMORY[0x263F08098];
        type metadata accessor for FileProtectionType(0);
        *(void *)(inited + 64) = v42;
        *(void *)(inited + 40) = v41;
        id v43 = v40;
        id v44 = v41;
        sub_21CA366F4(inited);
        type metadata accessor for FileAttributeKey(0);
        sub_21CA22A10(&qword_267C94BC0, type metadata accessor for FileAttributeKey);
        uint64_t v45 = (void *)sub_21CB881E0();
        swift_bridgeObjectRelease();
        sub_21CB35A70();
        id v46 = (void *)sub_21CB882C0();
        swift_bridgeObjectRelease();
        v105[0] = 0;
        LODWORD(inited) = objc_msgSend(v37, sel_setAttributes_ofItemAtPath_error_, v45, v46, v105);

        if (!inited)
        {
          id v68 = v105[0];
          uint64_t v26 = (void *)sub_21CB87400();

          swift_willThrow();
          sub_21CA36618(v33, v102);
          swift_release();
          goto LABEL_19;
        }
        uint64_t v101 = v33;
        uint64_t v47 = qword_267C94990;
        id v48 = v105[0];
        if (v47 != -1) {
          swift_once();
        }
        uint64_t v49 = sub_21CB880A0();
        sub_21CA4CC18(v49, (uint64_t)qword_267CA5368);
        swift_retain_n();
        uint64_t v50 = sub_21CB88070();
        os_log_type_t v51 = sub_21CB88880();
        if (os_log_type_enabled(v50, v51))
        {
          uint64_t v52 = (uint8_t *)swift_slowAlloc();
          id v53 = (void *)swift_slowAlloc();
          uint64_t v100 = v22;
          id v54 = v53;
          v105[0] = v53;
          *(_DWORD *)uint64_t v52 = 136315138;
          uint64_t v55 = sub_21CB35A70();
          uint64_t v103 = sub_21CA4E450(v55, v56, (uint64_t *)v105);
          sub_21CB889C0();
          swift_release_n();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_21CA00000, v50, v51, "FMDiskIO: Successfully wrote object to disk @ %s", v52, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x21D4B6B70](v54, -1, -1);
          MEMORY[0x21D4B6B70](v52, -1, -1);
          sub_21CA36618(v101, v102);

LABEL_32:
          swift_release();
          return;
        }
        swift_release_n();
        uint64_t v78 = v101;
LABEL_31:
        sub_21CA36618(v78, v102);

        goto LABEL_32;
      }
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v31 + 32))(v92, v29, v32);
      uint64_t v66 = v91;
      sub_21CB877F0();
      uint64_t v33 = v27;
      sub_21CA22A10(&qword_267C97250, MEMORY[0x263F3CC18]);
      uint64_t v67 = v90;
      uint64_t v79 = sub_21CB872F0();
      unint64_t v81 = v80;
      unint64_t v82 = (void *)sub_21CB874B0();
      sub_21CA36618(v79, v81);
      sub_21CB35A70();
      os_log_type_t v83 = (void *)sub_21CB882C0();
      swift_bridgeObjectRelease();
      LODWORD(v79) = objc_msgSend(v82, sel_writeToFile_atomically_, v83, 1);

      (*(void (**)(char *, uint64_t))(v89 + 8))(v66, v67);
      (*(void (**)(char *, uint64_t))(v97 + 8))(v92, v96);
      if (v79) {
        goto LABEL_7;
      }
    }
    if (qword_267C94990 != -1) {
      swift_once();
    }
    uint64_t v84 = sub_21CB880A0();
    sub_21CA4CC18(v84, (uint64_t)qword_267CA5368);
    uint64_t v50 = sub_21CB88070();
    os_log_type_t v85 = sub_21CB88880();
    if (os_log_type_enabled(v50, v85))
    {
      uint64_t v86 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v86 = 0;
      _os_log_impl(&dword_21CA00000, v50, v85, "FMDiskIO: Could not save objects to disk", v86, 2u);
      MEMORY[0x21D4B6B70](v86, -1, -1);
    }
    uint64_t v78 = v33;
    goto LABEL_31;
  }
  uint64_t v57 = v21;
  uint64_t v58 = (void *)sub_21CB87400();

  swift_willThrow();
  if (qword_267C94990 != -1) {
    swift_once();
  }
  uint64_t v59 = sub_21CB880A0();
  sub_21CA4CC18(v59, (uint64_t)qword_267CA5368);
  swift_retain_n();
  uint64_t v60 = sub_21CB88070();
  os_log_type_t v61 = sub_21CB88880();
  if (os_log_type_enabled(v60, v61))
  {
    uint64_t v62 = (uint8_t *)swift_slowAlloc();
    uint64_t v63 = (void *)swift_slowAlloc();
    v105[0] = v63;
    *(_DWORD *)uint64_t v62 = 136315138;
    uint64_t v64 = sub_21CB35A70();
    uint64_t v103 = sub_21CA4E450(v64, v65, (uint64_t *)v105);
    sub_21CB889C0();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_21CA00000, v60, v61, "FMDiskIO: Could not create directory for content: %s", v62, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x21D4B6B70](v63, -1, -1);
    MEMORY[0x21D4B6B70](v62, -1, -1);
  }
  else
  {

    swift_release_n();
  }
}

id sub_21CB3756C()
{
  id v0 = objc_msgSend(self, sel_defaultManager);
  sub_21CB35A70();
  id v1 = (void *)sub_21CB882C0();
  swift_bridgeObjectRelease();
  id v2 = objc_msgSend(v0, sel_fileExistsAtPath_, v1);

  return v2;
}

uint64_t sub_21CB375F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(*(void *)v2 + 80);
  uint64_t v6 = sub_21CB889A0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v12 - v8;
  sub_21CB37774((uint64_t)&v12 - v8);
  uint64_t v10 = *(void *)(v5 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v9, 1, v5) != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v10 + 32))(a2, v9, v5);
  }
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  sub_21CB36038(a1);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(a2, a1, v5);
}

uint64_t sub_21CB37774@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void *)(*(void *)v1 + 80);
  uint64_t v5 = sub_21CB889A0();
  uint64_t v6 = *(void *)(v5 - 8);
  __n128 v7 = MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)aBlock - v8;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(*(void *)(v4 - 8) + 56))((char *)aBlock - v8, 1, 1, v4, v7);
  uint64_t v10 = *(NSObject **)(v2 + 16);
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = v2;
  *(void *)(v11 + 24) = v9;
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = sub_21CB38C0C;
  *(void *)(v12 + 24) = v11;
  aBlock[4] = sub_21CA6257C;
  void aBlock[5] = v12;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_21CA18830;
  uint64_t aBlock[3] = &unk_26CD6FD18;
  uint64_t v13 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v10, v13);
  _Block_release(v13);
  LOBYTE(v2) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (v2)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v6 + 32))(a1, v9, v5);
    return swift_release();
  }
  return result;
}

void sub_21CB379BC(uint64_t *a1, uint64_t a2)
{
  uint64_t v76 = a2;
  uint64_t v3 = *a1;
  uint64_t v72 = sub_21CB877B0();
  uint64_t v70 = *(void *)(v72 - 8);
  MEMORY[0x270FA5388](v72);
  os_log_type_t v73 = (char *)&v65 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v79 = sub_21CB87830();
  uint64_t v71 = *(void *)(v79 - 8);
  MEMORY[0x270FA5388](v79);
  uint64_t v78 = (char *)&v65 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void *)(v3 + 80);
  uint64_t v75 = sub_21CB889A0();
  uint64_t v74 = *(void *)(v75 - 8);
  MEMORY[0x270FA5388](v75);
  uint64_t v8 = (char *)&v65 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  unint64_t v77 = (char *)&v65 - v10;
  uint64_t v80 = *(void *)(v3 + 88);
  uint64_t v81 = v6;
  uint64_t v11 = type metadata accessor for FMDiskIO.KeyPair();
  uint64_t v12 = sub_21CB889A0();
  uint64_t v82 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  os_log_type_t v83 = (char *)&v65 - v13;
  uint64_t v84 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (char *)&v65 - v15;
  uint64_t v17 = sub_21CB87480();
  uint64_t v85 = *(void *)(v17 - 8);
  uint64_t v86 = (char *)v17;
  MEMORY[0x270FA5388](v17);
  uint64_t v19 = (char *)&v65 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_267C94990 != -1) {
    swift_once();
  }
  uint64_t v20 = sub_21CB880A0();
  sub_21CA4CC18(v20, (uint64_t)qword_267CA5368);
  id v21 = sub_21CB88070();
  os_log_type_t v22 = sub_21CB88880();
  if (os_log_type_enabled(v21, v22))
  {
    unint64_t v23 = v8;
    uint64_t v24 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v24 = 0;
    _os_log_impl(&dword_21CA00000, v21, v22, "FMDiskIO: read from disk", v24, 2u);
    unint64_t v25 = v24;
    uint64_t v8 = v23;
    MEMORY[0x21D4B6B70](v25, -1, -1);
  }

  if (sub_21CB3756C())
  {
    id v68 = v8;
    sub_21CB35A70();
    sub_21CB87420();
    swift_bridgeObjectRelease();
    uint64_t v32 = sub_21CB87490();
    unint64_t v34 = v33;
    (*(void (**)(char *, char *))(v85 + 8))(v19, v86);
    swift_retain();
    sub_21CA1E93C(v32, v34);
    swift_retain();
    sub_21CA1E93C(v32, v34);
    uint64_t v35 = sub_21CB88070();
    os_log_type_t v36 = sub_21CB88880();
    LODWORD(v86) = v36;
    BOOL v37 = os_log_type_enabled(v35, v36);
    unint64_t v69 = v34;
    uint64_t v67 = v32;
    if (v37)
    {
      uint64_t v38 = swift_slowAlloc();
      uint64_t v85 = v12;
      uint64_t v39 = v38;
      uint64_t v66 = swift_slowAlloc();
      uint64_t v88 = v66;
      *(_DWORD *)uint64_t v39 = 136315394;
      os_log_t v65 = v35;
      uint64_t v40 = sub_21CB35A70();
      uint64_t v87 = sub_21CA4E450(v40, v41, &v88);
      sub_21CB889C0();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v39 + 12) = 2080;
      uint64_t v42 = sub_21CB874A0();
      uint64_t v87 = sub_21CA4E450(v42, v43, &v88);
      sub_21CB889C0();
      unint64_t v44 = v69;
      swift_bridgeObjectRelease();
      sub_21CA36618(v32, v44);
      sub_21CA36618(v32, v44);
      uint64_t v35 = v65;
      _os_log_impl(&dword_21CA00000, v65, (os_log_type_t)v86, "FMDiskIO: file: %s data: %s", (uint8_t *)v39, 0x16u);
      uint64_t v45 = v66;
      swift_arrayDestroy();
      MEMORY[0x21D4B6B70](v45, -1, -1);
      uint64_t v46 = v39;
      uint64_t v12 = v85;
      MEMORY[0x21D4B6B70](v46, -1, -1);
    }
    else
    {
      swift_release_n();
      sub_21CA36618(v32, v34);
      sub_21CA36618(v32, v34);
    }

    uint64_t v47 = v84;
    uint64_t v48 = v82;
    sub_21CB872E0();
    swift_allocObject();
    sub_21CB872D0();
    uint64_t v49 = v83;
    (*(void (**)(char *, uint64_t, uint64_t))(v48 + 16))(v83, (uint64_t)a1 + *(void *)(*a1 + 128), v12);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v47 + 48))(v49, 1, v11) == 1)
    {
      (*(void (**)(char *, uint64_t))(v48 + 8))(v49, v12);
      uint64_t v50 = v77;
      uint64_t v51 = v81;
      uint64_t v52 = v67;
      unint64_t v53 = v69;
      sub_21CB872C0();
      sub_21CA36618(v52, v53);
      swift_release();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v51 - 8) + 56))(v50, 0, 1, v51);
      (*(void (**)(uint64_t, char *, uint64_t))(v74 + 40))(v76, v50, v75);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v47 + 32))(v16, v49, v11);
      sub_21CA22A10(&qword_267C97268, MEMORY[0x263F3CC18]);
      sub_21CB872C0();
      uint64_t v86 = &v16[*(int *)(v11 + 44)];
      id v54 = v73;
      sub_21CB877C0();
      uint64_t v55 = v54;
      uint64_t v56 = sub_21CB87820();
      uint64_t v86 = v16;
      uint64_t v57 = v55;
      unint64_t v59 = v58;
      (*(void (**)(char *, uint64_t))(v70 + 8))(v57, v72);
      uint64_t v60 = v81;
      unint64_t v61 = v59;
      sub_21CB872C0();
      uint64_t v62 = (void (**)(char *, uint64_t))(v71 + 8);
      uint64_t v63 = (void (**)(char *, uint64_t))(v84 + 8);
      sub_21CA36618(v56, v61);
      swift_release();
      sub_21CA36618(v67, v69);
      (*v62)(v78, v79);
      (*v63)(v86, v11);
      uint64_t v64 = v68;
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v60 - 8) + 56))(v68, 0, 1, v60);
      (*(void (**)(uint64_t, char *, uint64_t))(v74 + 40))(v76, v64, v75);
    }
  }
  else
  {
    swift_retain_n();
    uint64_t v26 = sub_21CB88070();
    os_log_type_t v27 = sub_21CB88860();
    if (os_log_type_enabled(v26, v27))
    {
      uint64_t v28 = (uint8_t *)swift_slowAlloc();
      uint64_t v29 = swift_slowAlloc();
      uint64_t v88 = v29;
      *(_DWORD *)uint64_t v28 = 136315138;
      uint64_t v30 = sub_21CB35A70();
      uint64_t v87 = sub_21CA4E450(v30, v31, &v88);
      sub_21CB889C0();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_21CA00000, v26, v27, "FMDiskIO: Disk archive does not exist at: %s", v28, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x21D4B6B70](v29, -1, -1);
      MEMORY[0x21D4B6B70](v28, -1, -1);
    }
    else
    {

      swift_release_n();
    }
  }
}

id *FMDiskIO.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v1 = (char *)v0 + *((void *)*v0 + 16);
  type metadata accessor for FMDiskIO.KeyPair();
  uint64_t v2 = sub_21CB889A0();
  (*(void (**)(char *, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t FMDiskIO.__deallocating_deinit()
{
  FMDiskIO.deinit();

  return swift_deallocClassInstance();
}

uint64_t sub_21CB38A50(void (*a1)(void))
{
  a1();

  return _swift_stdlib_bridgeErrorToNSError();
}

void sub_21CB38A88(uint64_t *a1, void **a2, uint64_t a3, uint64_t (*a4)(void))
{
  uint64_t v6 = (void *)a4();
  uint64_t v7 = *a1 + 8;
  sub_21CB889C0();
  *a1 = v7;
  uint64_t v8 = *a2;
  if (*a2)
  {
    *uint64_t v8 = v6;
    *a2 = v8 + 1;
  }
  else
  {
  }
}

uint64_t type metadata accessor for FMDiskIO.FMDiskIOError()
{
  return sub_21CA229E0();
}

void sub_21CB38B64()
{
  sub_21CB36710(v0+ ((*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 16) - 8) + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 16) - 8) + 80)));
}

uint64_t sub_21CB38BC4()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_21CB38BD4()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

void sub_21CB38C0C()
{
  sub_21CB379BC(*(uint64_t **)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_21CB38C14()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t method lookup function for FMDiskIO(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for FMDiskIO);
}

uint64_t dispatch thunk of FMDiskIO.__allocating_init(root:fileName:keyPair:)()
{
  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t dispatch thunk of FMDiskIO.createIfNeeded(content:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 152))();
}

uint64_t dispatch thunk of FMDiskIO.save(content:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 160))();
}

uint64_t dispatch thunk of FMDiskIO.saveSync(content:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 168))();
}

uint64_t dispatch thunk of FMDiskIO.diskCacheExists()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 184))();
}

uint64_t dispatch thunk of FMDiskIO.readOrCreate(with:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 192))();
}

uint64_t dispatch thunk of FMDiskIO.read()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 200))();
}

uint64_t *sub_21CB38D28(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_21CB877E0();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 44);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_21CB87810();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
  }
  return a1;
}

uint64_t sub_21CB38E30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_21CB877E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 44);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_21CB87810();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  return a1;
}

uint64_t sub_21CB38EE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_21CB877E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 44);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_21CB87810();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  return a1;
}

uint64_t sub_21CB38FA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_21CB877E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 44);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_21CB87810();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t sub_21CB39058(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_21CB877E0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = sub_21CB87810();
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 44);
    return v11(v13, a2, v12);
  }
}

uint64_t sub_21CB39150(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_21CB877E0();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    uint64_t v12 = sub_21CB87810();
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 44);
    return v13(v15, a2, a2, v14);
  }
}

unsigned char *sub_21CB39254(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x21CB39320);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

unsigned char *sub_21CB39348(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x21CB393E4);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_21CB3940C()
{
  return swift_getWitnessTable();
}

uint64_t sub_21CB39428()
{
  return swift_getWitnessTable();
}

uint64_t sub_21CB39444()
{
  return 2;
}

ValueMetadata *type metadata accessor for FMFFallbackToLegacyInProgress()
{
  return &type metadata for FMFFallbackToLegacyInProgress;
}

uint64_t sub_21CB39464@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_21CB88D70();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

uint64_t sub_21CB394C4@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_21CB88D70();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

uint64_t sub_21CB39528(uint64_t a1)
{
  unint64_t v2 = sub_21CB399B4();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_21CB39564(uint64_t a1)
{
  unint64_t v2 = sub_21CB399B4();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_21CB395A0(void *a1, uint64_t a2, uint64_t a3, int a4)
{
  int v12 = a4;
  uint64_t v6 = sub_21CA57E34(&qword_267C97820);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21CA2B2CC(a1, a1[3]);
  sub_21CB399B4();
  sub_21CB890C0();
  char v14 = 0;
  sub_21CB88E70();
  if (!v4)
  {
    char v13 = 1;
    sub_21CB88E80();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_21CB39714@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_21CB397C8(a1);
  if (!v2)
  {
    *(void *)a2 = result;
    *(void *)(a2 + 8) = v5;
    *(unsigned char *)(a2 + 16) = v6 & 1;
  }
  return result;
}

uint64_t sub_21CB39748(void *a1)
{
  return sub_21CB395A0(a1, *(void *)v1, *(void *)(v1 + 8), *(unsigned __int8 *)(v1 + 16));
}

uint64_t sub_21CB39768(uint64_t a1, uint64_t a2)
{
  int v2 = *(unsigned __int8 *)(a1 + 16);
  int v3 = *(unsigned __int8 *)(a2 + 16);
  if (*(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8)) {
    return v2 ^ v3 ^ 1u;
  }
  char v5 = sub_21CB88F50();
  uint64_t result = 0;
  if (v5) {
    return v2 ^ v3 ^ 1u;
  }
  return result;
}

uint64_t sub_21CB397C8(void *a1)
{
  uint64_t v3 = sub_21CA57E34(&qword_267C97810);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  char v6 = &v9[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = a1[4];
  sub_21CA2B2CC(a1, a1[3]);
  sub_21CB399B4();
  sub_21CB890B0();
  if (v1)
  {
    sub_21CA2B0D0((uint64_t)a1);
  }
  else
  {
    v9[15] = 0;
    uint64_t v7 = sub_21CB88DE0();
    v9[14] = 1;
    swift_bridgeObjectRetain();
    sub_21CB88DF0();
    (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
    sub_21CA2B0D0((uint64_t)a1);
    swift_bridgeObjectRelease();
  }
  return v7;
}

unint64_t sub_21CB399B4()
{
  unint64_t result = qword_267C97818;
  if (!qword_267C97818)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C97818);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for FMFFallbackToLegacyInProgress.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x21CB39AD4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FMFFallbackToLegacyInProgress.CodingKeys()
{
  return &type metadata for FMFFallbackToLegacyInProgress.CodingKeys;
}

unint64_t sub_21CB39B10()
{
  unint64_t result = qword_267C97828;
  if (!qword_267C97828)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C97828);
  }
  return result;
}

unint64_t sub_21CB39B68()
{
  unint64_t result = qword_267C97830;
  if (!qword_267C97830)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C97830);
  }
  return result;
}

unint64_t sub_21CB39BC0()
{
  unint64_t result = qword_267C97838;
  if (!qword_267C97838)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C97838);
  }
  return result;
}

uint64_t FMFAskToFollowAction.__allocating_init(friend:)(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  sub_21CAD9D08(a1, v2 + OBJC_IVAR____TtC7FMFCore20FMFAskToFollowAction_friend);
  *(unsigned char *)(v2 + 16) = 0;
  return v2;
}

uint64_t FMFAskToFollowAction.init(friend:)(uint64_t a1)
{
  sub_21CAD9D08(a1, v1 + OBJC_IVAR____TtC7FMFCore20FMFAskToFollowAction_friend);
  *(unsigned char *)(v1 + 16) = 0;
  return v1;
}

uint64_t sub_21CB39C90()
{
  return 0;
}

void FMFAskToFollowAction.__allocating_init(requiresRefresh:)()
{
}

void FMFAskToFollowAction.init(requiresRefresh:)()
{
}

uint64_t sub_21CB39E34()
{
  return sub_21CA4C4F4(v0 + OBJC_IVAR____TtC7FMFCore20FMFAskToFollowAction_friend);
}

uint64_t FMFAskToFollowAction.deinit()
{
  sub_21CA4C4F4(v0 + OBJC_IVAR____TtC7FMFCore20FMFAskToFollowAction_friend);
  return v0;
}

uint64_t FMFAskToFollowAction.__deallocating_deinit()
{
  sub_21CA4C4F4(v0 + OBJC_IVAR____TtC7FMFCore20FMFAskToFollowAction_friend);

  return swift_deallocClassInstance();
}

uint64_t sub_21CB39ED0()
{
  return type metadata accessor for FMFAskToFollowAction();
}

uint64_t type metadata accessor for FMFAskToFollowAction()
{
  uint64_t result = qword_267C97840;
  if (!qword_267C97840) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t method lookup function for FMFAskToFollowAction(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for FMFAskToFollowAction);
}

uint64_t dispatch thunk of FMFAskToFollowAction.__allocating_init(friend:)()
{
  return (*(uint64_t (**)(void))(v0 + 136))();
}

void sub_21CB39F50(void *a1)
{
  uint64_t v2 = sub_21CB87590();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  objc_msgSend(a1, sel_coordinate);
  double v7 = v6;
  objc_msgSend(a1, sel_coordinate);
  id v9 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithGEOCoordinate_, v7, v8);
  if (!v9)
  {
LABEL_14:

    return;
  }
  id v10 = v9;
  id v11 = objc_msgSend(a1, sel_timestamp);
  sub_21CB87560();

  sub_21CB87550();
  double v13 = v12;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  objc_msgSend(v10, sel_setTimestamp_, v13);
  objc_msgSend(a1, sel_horizontalAccuracy);
  objc_msgSend(v10, sel_setHorizontalAccuracy_);
  objc_msgSend(a1, sel_verticalAccuracy);
  objc_msgSend(v10, sel_setVerticalAccuracy_);
  objc_msgSend(a1, sel_course);
  objc_msgSend(v10, sel_setCourse_);
  objc_msgSend(a1, sel_courseAccuracy);
  objc_msgSend(v10, sel_setCourseAccuracy_);
  objc_msgSend(a1, sel_speed);
  objc_msgSend(v10, sel_setSpeed_);
  objc_msgSend(a1, sel_speedAccuracy);
  objc_msgSend(v10, sel_setSpeedAccuracy_);
  objc_msgSend(a1, sel_altitude);
  if ((~*(void *)&v14 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_16;
  }
  if (v14 <= -2147483650.0)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  if (v14 >= 2147483650.0)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  objc_msgSend(v10, sel_setAltitude_, (int)v14);
  id v15 = objc_msgSend(a1, sel_floor);
  if (!v15) {
    goto LABEL_9;
  }
  uint64_t v16 = v15;
  uint64_t v17 = (uint64_t)objc_msgSend(v15, sel_level);

  if (v17 >= (uint64_t)0xFFFFFFFF80000000)
  {
    if (v17 <= 0x7FFFFFFF)
    {
LABEL_10:
      objc_msgSend(v10, sel_setLevelOrdinal_, v17);
      unsigned int v18 = objc_msgSend(a1, sel_referenceFrame);
      if (v18 > 2) {
        uint64_t v19 = 0;
      }
      else {
        uint64_t v19 = dword_21CB91CD8[v18];
      }
      objc_msgSend(v10, sel_setReferenceFrame_, v19);

      goto LABEL_14;
    }
    __break(1u);
LABEL_9:
    uint64_t v17 = 0;
    goto LABEL_10;
  }
LABEL_18:
  __break(1u);
}

Swift::Bool __swiftcall CLLocation.fmifIsNearBy(_:inBTRangeDistanceInMeters:)(CLLocation _, Swift::Double inBTRangeDistanceInMeters)
{
  Class isa = _.super.isa;
  objc_msgSend(v2, sel_distanceFromLocation_, _.super.isa);
  double v6 = v5;
  objc_msgSend(v2, sel_horizontalAccuracy);
  double v8 = v7;
  [(objc_class *)isa horizontalAccuracy];
  return v6 / sqrt(inBTRangeDistanceInMeters * inBTRangeDistanceInMeters + v8 * v8 + v9 * v9) < 1.5;
}

uint64_t sub_21CB3A334(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x263F8EE78];
  if (!v1) {
    return v2;
  }
  uint64_t v19 = MEMORY[0x263F8EE78];
  sub_21CA7C118(0, v1, 0);
  uint64_t v2 = v19;
  uint64_t result = sub_21CA44CF4(a1);
  int64_t v5 = result;
  int v7 = v6;
  char v9 = v8 & 1;
  while ((v5 & 0x8000000000000000) == 0 && v5 < 1 << *(unsigned char *)(a1 + 32))
  {
    if (((*(void *)(a1 + 56 + (((unint64_t)v5 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v5) & 1) == 0) {
      goto LABEL_13;
    }
    if (*(_DWORD *)(a1 + 36) != v7) {
      goto LABEL_14;
    }
    char v18 = v9;
    id v10 = (uint64_t *)(*(void *)(a1 + 48) + 24 * v5);
    uint64_t v11 = *v10;
    uint64_t v12 = v10[1];
    unint64_t v14 = *(void *)(v19 + 16);
    unint64_t v13 = *(void *)(v19 + 24);
    swift_bridgeObjectRetain();
    if (v14 >= v13 >> 1) {
      sub_21CA7C118(v13 > 1, v14 + 1, 1);
    }
    *(void *)(v19 + 16) = v14 + 1;
    uint64_t v15 = v19 + 24 * v14;
    *(void *)(v15 + 32) = v11;
    *(void *)(v15 + 40) = v12;
    *(_WORD *)(v15 + 48) = 1;
    *(unsigned char *)(v15 + 50) = 0;
    uint64_t result = sub_21CA44500(v5, v7, v18 & 1, a1);
    int64_t v5 = result;
    int v7 = v16;
    char v9 = v17 & 1;
    if (!--v1)
    {
      sub_21CAB561C(result, v16, v9);
      return v2;
    }
  }
  __break(1u);
LABEL_13:
  __break(1u);
LABEL_14:
  __break(1u);
  return result;
}

uint64_t sub_21CB3A4C4(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x263F8EE78];
  if (!v1) {
    return v2;
  }
  uint64_t v19 = MEMORY[0x263F8EE78];
  sub_21CA45524(0, v1, 0);
  uint64_t v2 = v19;
  uint64_t result = sub_21CA44CF4(a1);
  int64_t v5 = result;
  int v7 = v6;
  char v9 = v8 & 1;
  while ((v5 & 0x8000000000000000) == 0 && v5 < 1 << *(unsigned char *)(a1 + 32))
  {
    if (((*(void *)(a1 + 56 + (((unint64_t)v5 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v5) & 1) == 0) {
      goto LABEL_13;
    }
    if (*(_DWORD *)(a1 + 36) != v7) {
      goto LABEL_14;
    }
    char v18 = v9;
    id v10 = (uint64_t *)(*(void *)(a1 + 48) + 24 * v5);
    uint64_t v11 = *v10;
    uint64_t v12 = v10[1];
    unint64_t v14 = *(void *)(v19 + 16);
    unint64_t v13 = *(void *)(v19 + 24);
    swift_bridgeObjectRetain();
    if (v14 >= v13 >> 1) {
      sub_21CA45524(v13 > 1, v14 + 1, 1);
    }
    *(void *)(v19 + 16) = v14 + 1;
    uint64_t v15 = v19 + 16 * v14;
    *(void *)(v15 + 32) = v11;
    *(void *)(v15 + 40) = v12;
    uint64_t result = sub_21CA44500(v5, v7, v18 & 1, a1);
    int64_t v5 = result;
    int v7 = v16;
    char v9 = v17 & 1;
    if (!--v1)
    {
      sub_21CAB561C(result, v16, v9);
      return v2;
    }
  }
  __break(1u);
LABEL_13:
  __break(1u);
LABEL_14:
  __break(1u);
  return result;
}

uint64_t sub_21CB3A640(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x263F8EE78];
  if (!v1) {
    return v2;
  }
  uint64_t v19 = MEMORY[0x263F8EE78];
  sub_21CA7C0F8(0, v1, 0);
  uint64_t v2 = v19;
  uint64_t result = sub_21CA44CF4(a1);
  int64_t v5 = result;
  int v7 = v6;
  char v9 = v8 & 1;
  while ((v5 & 0x8000000000000000) == 0 && v5 < 1 << *(unsigned char *)(a1 + 32))
  {
    if (((*(void *)(a1 + 56 + (((unint64_t)v5 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v5) & 1) == 0) {
      goto LABEL_13;
    }
    if (*(_DWORD *)(a1 + 36) != v7) {
      goto LABEL_14;
    }
    char v18 = v9;
    id v10 = (uint64_t *)(*(void *)(a1 + 48) + 24 * v5);
    uint64_t v11 = *v10;
    uint64_t v12 = v10[1];
    unint64_t v14 = *(void *)(v19 + 16);
    unint64_t v13 = *(void *)(v19 + 24);
    swift_bridgeObjectRetain();
    if (v14 >= v13 >> 1) {
      sub_21CA7C0F8(v13 > 1, v14 + 1, 1);
    }
    *(void *)(v19 + 16) = v14 + 1;
    uint64_t v15 = v19 + 16 * v14;
    *(void *)(v15 + 32) = v11;
    *(void *)(v15 + 40) = v12;
    uint64_t result = sub_21CA44500(v5, v7, v18 & 1, a1);
    int64_t v5 = result;
    int v7 = v16;
    char v9 = v17 & 1;
    if (!--v1)
    {
      sub_21CAB561C(result, v16, v9);
      return v2;
    }
  }
  __break(1u);
LABEL_13:
  __break(1u);
LABEL_14:
  __break(1u);
  return result;
}

uint64_t sub_21CB3A7BC(uint64_t a1)
{
  uint64_t v1 = a1 - 1;
  uint64_t result = 6515827;
  switch(v1)
  {
    case 0:
      return result;
    case 1:
      uint64_t result = 0x6174537469736976;
      break;
    case 2:
      uint64_t result = 0x6165627472616568;
      break;
    case 3:
      uint64_t result = 0x65646E6174737962;
      break;
    case 4:
      uint64_t result = 0x646E616D65446E6FLL;
      break;
    case 5:
      uint64_t result = 0x776F6C6C616873;
      break;
    case 6:
      uint64_t result = 1702259052;
      break;
    case 7:
      uint64_t result = 0x656977657473;
      break;
    default:
      uint64_t result = 0x6E776F6E6B6E75;
      break;
  }
  return result;
}

uint64_t sub_21CB3A900(uint64_t (*a1)(void *), uint64_t a2, uint64_t a3)
{
  uint64_t v21 = a3 + 56;
  uint64_t v4 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(a3 + 56);
  int64_t v22 = (unint64_t)(v4 + 63) >> 6;
  uint64_t v28 = a3;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v8 = 0;
  if (!v6) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v9 = __clz(__rbit64(v6));
  v6 &= v6 - 1;
  for (unint64_t i = v9 | (v8 << 6); ; unint64_t i = __clz(__rbit64(v12)) + (v8 << 6))
  {
    uint64_t v14 = *(void *)(v28 + 48) + 24 * i;
    uint64_t v16 = *(void *)v14;
    uint64_t v15 = *(void *)(v14 + 8);
    char v17 = *(unsigned char *)(v14 + 16);
    char v18 = *(unsigned char *)(v14 + 17);
    char v19 = *(unsigned char *)(v14 + 18);
    v24[0] = *(void *)v14;
    v24[1] = v15;
    char v25 = v17;
    char v26 = v18;
    char v27 = v19;
    swift_bridgeObjectRetain();
    char v20 = a1(v24);
    if (v3)
    {
      swift_release();
      swift_bridgeObjectRelease();
      return v16;
    }
    if (v20)
    {
      swift_release();
      return v16;
    }
    uint64_t result = swift_bridgeObjectRelease();
    if (v6) {
      goto LABEL_4;
    }
LABEL_5:
    if (__OFADD__(v8++, 1)) {
      break;
    }
    if (v8 >= v22) {
      goto LABEL_28;
    }
    unint64_t v12 = *(void *)(v21 + 8 * v8);
    if (!v12)
    {
      int64_t v13 = v8 + 1;
      if (v8 + 1 >= v22) {
        goto LABEL_28;
      }
      unint64_t v12 = *(void *)(v21 + 8 * v13);
      if (v12) {
        goto LABEL_16;
      }
      int64_t v13 = v8 + 2;
      if (v8 + 2 >= v22) {
        goto LABEL_28;
      }
      unint64_t v12 = *(void *)(v21 + 8 * v13);
      if (v12) {
        goto LABEL_16;
      }
      int64_t v13 = v8 + 3;
      if (v8 + 3 >= v22) {
        goto LABEL_28;
      }
      unint64_t v12 = *(void *)(v21 + 8 * v13);
      if (v12)
      {
LABEL_16:
        int64_t v8 = v13;
        goto LABEL_17;
      }
      int64_t v13 = v8 + 4;
      if (v8 + 4 < v22)
      {
        unint64_t v12 = *(void *)(v21 + 8 * v13);
        if (!v12)
        {
          while (1)
          {
            int64_t v8 = v13 + 1;
            if (__OFADD__(v13, 1)) {
              goto LABEL_31;
            }
            if (v8 >= v22) {
              goto LABEL_28;
            }
            unint64_t v12 = *(void *)(v21 + 8 * v8);
            ++v13;
            if (v12) {
              goto LABEL_17;
            }
          }
        }
        goto LABEL_16;
      }
LABEL_28:
      swift_release();
      return 0;
    }
LABEL_17:
    unint64_t v6 = (v12 - 1) & v12;
  }
  __break(1u);
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_21CB3AB50(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v3 = 0;
  uint64_t v29 = result + 56;
  uint64_t v4 = 1 << *(unsigned char *)(result + 32);
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  else {
    uint64_t v5 = -1;
  }
  unint64_t v6 = v5 & *(void *)(result + 56);
  int64_t v30 = (unint64_t)(v4 + 63) >> 6;
  uint64_t v7 = a2 + 56;
  while (1)
  {
    if (v6)
    {
      unint64_t v8 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      int64_t v31 = v3;
      unint64_t v9 = v8 | (v3 << 6);
      goto LABEL_26;
    }
    int64_t v10 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_45;
    }
    if (v10 >= v30) {
      return 1;
    }
    unint64_t v11 = *(void *)(v29 + 8 * v10);
    int64_t v12 = v3 + 1;
    if (!v11)
    {
      int64_t v12 = v3 + 2;
      if (v3 + 2 >= v30) {
        return 1;
      }
      unint64_t v11 = *(void *)(v29 + 8 * v12);
      if (!v11)
      {
        int64_t v12 = v3 + 3;
        if (v3 + 3 >= v30) {
          return 1;
        }
        unint64_t v11 = *(void *)(v29 + 8 * v12);
        if (!v11)
        {
          int64_t v12 = v3 + 4;
          if (v3 + 4 >= v30) {
            return 1;
          }
          unint64_t v11 = *(void *)(v29 + 8 * v12);
          if (!v11) {
            break;
          }
        }
      }
    }
LABEL_25:
    unint64_t v6 = (v11 - 1) & v11;
    int64_t v31 = v12;
    unint64_t v9 = __clz(__rbit64(v11)) + (v12 << 6);
LABEL_26:
    uint64_t v14 = result;
    uint64_t v15 = (uint64_t *)(*(void *)(result + 48) + 16 * v9);
    uint64_t v17 = *v15;
    uint64_t v16 = v15[1];
    sub_21CB89050();
    swift_bridgeObjectRetain();
    sub_21CB88380();
    uint64_t v18 = sub_21CB89090();
    uint64_t v19 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v20 = v18 & ~v19;
    if (((*(void *)(v7 + ((v20 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v20) & 1) == 0) {
      goto LABEL_41;
    }
    uint64_t v21 = *(void *)(a2 + 48);
    int64_t v22 = (void *)(v21 + 16 * v20);
    BOOL v23 = *v22 == v17 && v22[1] == v16;
    if (!v23 && (sub_21CB88F50() & 1) == 0)
    {
      uint64_t v24 = ~v19;
      for (unint64_t i = v20 + 1; ; unint64_t i = v26 + 1)
      {
        uint64_t v26 = i & v24;
        if (((*(void *)(v7 + (((i & v24) >> 3) & 0xFFFFFFFFFFFFFF8)) >> (i & v24)) & 1) == 0) {
          break;
        }
        char v27 = (void *)(v21 + 16 * v26);
        BOOL v28 = *v27 == v17 && v27[1] == v16;
        if (v28 || (sub_21CB88F50() & 1) != 0) {
          goto LABEL_7;
        }
      }
LABEL_41:
      swift_bridgeObjectRelease();
      return 0;
    }
LABEL_7:
    swift_bridgeObjectRelease();
    uint64_t result = v14;
    int64_t v3 = v31;
  }
  uint64_t v13 = v3 + 5;
  if (v3 + 5 >= v30) {
    return 1;
  }
  unint64_t v11 = *(void *)(v29 + 8 * v13);
  if (v11)
  {
    int64_t v12 = v3 + 5;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v12 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v12 >= v30) {
      return 1;
    }
    unint64_t v11 = *(void *)(v29 + 8 * v12);
    ++v13;
    if (v11) {
      goto LABEL_25;
    }
  }
LABEL_45:
  __break(1u);
  return result;
}

uint64_t sub_21CB3ADF4(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  uint64_t v2 = a2;
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v3 = 0;
  uint64_t v30 = result;
  uint64_t v31 = result + 56;
  uint64_t v4 = 1 << *(unsigned char *)(result + 32);
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  else {
    uint64_t v5 = -1;
  }
  unint64_t v6 = v5 & *(void *)(result + 56);
  int64_t v32 = (unint64_t)(v4 + 63) >> 6;
  uint64_t v37 = a2 + 56;
  if (v6) {
    goto LABEL_7;
  }
LABEL_8:
  int64_t v8 = v3 + 1;
  if (__OFADD__(v3, 1))
  {
    __break(1u);
    goto LABEL_40;
  }
  if (v8 >= v32) {
    return 1;
  }
  unint64_t v9 = *(void *)(v31 + 8 * v8);
  int64_t v10 = v3 + 1;
  if (!v9)
  {
    int64_t v10 = v8 + 1;
    if (v8 + 1 >= v32) {
      return 1;
    }
    unint64_t v9 = *(void *)(v31 + 8 * v10);
    if (!v9)
    {
      int64_t v10 = v8 + 2;
      if (v8 + 2 >= v32) {
        return 1;
      }
      unint64_t v9 = *(void *)(v31 + 8 * v10);
      if (!v9)
      {
        int64_t v10 = v8 + 3;
        if (v8 + 3 >= v32) {
          return 1;
        }
        unint64_t v9 = *(void *)(v31 + 8 * v10);
        if (!v9)
        {
          int64_t v11 = v8 + 4;
          if (v11 < v32)
          {
            unint64_t v9 = *(void *)(v31 + 8 * v11);
            if (v9)
            {
              int64_t v10 = v11;
              goto LABEL_23;
            }
            while (1)
            {
              int64_t v10 = v11 + 1;
              if (__OFADD__(v11, 1)) {
                break;
              }
              if (v10 >= v32) {
                return 1;
              }
              unint64_t v9 = *(void *)(v31 + 8 * v10);
              ++v11;
              if (v9) {
                goto LABEL_23;
              }
            }
LABEL_40:
            __break(1u);
            return result;
          }
          return 1;
        }
      }
    }
  }
LABEL_23:
  uint64_t v33 = (v9 - 1) & v9;
  int64_t v34 = v10;
  for (unint64_t i = __clz(__rbit64(v9)) + (v10 << 6); ; unint64_t i = __clz(__rbit64(v6)) | (v3 << 6))
  {
    uint64_t v12 = *(void *)(result + 48) + 24 * i;
    uint64_t v14 = *(void *)v12;
    uint64_t v13 = *(void *)(v12 + 8);
    int v15 = *(unsigned __int8 *)(v12 + 16);
    int v16 = *(unsigned __int8 *)(v12 + 17);
    int v17 = *(unsigned __int8 *)(v12 + 18);
    sub_21CB89050();
    swift_bridgeObjectRetain_n();
    sub_21CB88380();
    swift_bridgeObjectRelease();
    int v36 = v15;
    sub_21CB89070();
    int v18 = v16;
    sub_21CB89070();
    int v19 = v17;
    sub_21CB89070();
    uint64_t v20 = sub_21CB89090();
    uint64_t v21 = -1 << *(unsigned char *)(v2 + 32);
    unint64_t v22 = v20 & ~v21;
    if (((*(void *)(v37 + ((v22 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v22) & 1) == 0) {
      break;
    }
    uint64_t v23 = ~v21;
    uint64_t v24 = *(void *)(a2 + 48);
    while (1)
    {
      uint64_t v25 = v24 + 24 * v22;
      int v26 = *(unsigned __int8 *)(v25 + 16);
      int v27 = *(unsigned __int8 *)(v25 + 17);
      int v28 = v19 ^ *(unsigned __int8 *)(v25 + 18);
      if (*(void *)v25 == v14 && *(void *)(v25 + 8) == v13) {
        break;
      }
      if (!((v36 ^ v26) & 1 | ((sub_21CB88F50() & 1) == 0) | ((v18 ^ v27) | v28) & 1)) {
        goto LABEL_34;
      }
LABEL_27:
      unint64_t v22 = (v22 + 1) & v23;
      if (((*(void *)(v37 + ((v22 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v22) & 1) == 0) {
        goto LABEL_37;
      }
    }
    if ((v36 ^ v26 | v18 ^ v27 | v28)) {
      goto LABEL_27;
    }
LABEL_34:
    swift_bridgeObjectRelease();
    int64_t v3 = v34;
    uint64_t v2 = a2;
    uint64_t result = v30;
    unint64_t v6 = v33;
    if (!v33) {
      goto LABEL_8;
    }
LABEL_7:
    uint64_t v33 = (v6 - 1) & v6;
    int64_t v34 = v3;
  }
LABEL_37:
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_21CB3B114(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a3 + 16))
  {
    sub_21CB89050();
    sub_21CB88380();
    uint64_t v6 = sub_21CB89090();
    uint64_t v7 = -1 << *(unsigned char *)(a3 + 32);
    unint64_t v8 = v6 & ~v7;
    uint64_t v9 = a3 + 56;
    if ((*(void *)(a3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8))
    {
      uint64_t v10 = *(void *)(a3 + 48);
      int64_t v11 = (void *)(v10 + 16 * v8);
      BOOL v12 = *v11 == a1 && v11[1] == a2;
      if (v12 || (sub_21CB88F50() & 1) != 0) {
        return 1;
      }
      uint64_t v14 = ~v7;
      unint64_t v15 = (v8 + 1) & v14;
      if ((*(void *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15))
      {
        while (1)
        {
          int v16 = (void *)(v10 + 16 * v15);
          BOOL v17 = *v16 == a1 && v16[1] == a2;
          if (v17 || (sub_21CB88F50() & 1) != 0) {
            break;
          }
          uint64_t result = 0;
          unint64_t v15 = (v15 + 1) & v14;
          if (((*(void *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15) & 1) == 0) {
            return result;
          }
        }
        return 1;
      }
    }
  }
  return 0;
}

uint64_t sub_21CB3B24C()
{
  return sub_21CB89090();
}

uint64_t sub_21CB3B2DC()
{
  return sub_21CB3B24C();
}

uint64_t sub_21CB3B310()
{
  return sub_21CB89070();
}

uint64_t sub_21CB3B394()
{
  return sub_21CB89090();
}

uint64_t sub_21CB3B42C(uint64_t a1, uint64_t a2)
{
  int v2 = *(unsigned __int8 *)(a1 + 16);
  int v3 = *(unsigned __int8 *)(a1 + 17);
  int v4 = *(unsigned __int8 *)(a1 + 18);
  int v5 = *(unsigned __int8 *)(a2 + 16);
  int v6 = *(unsigned __int8 *)(a2 + 17);
  int v7 = *(unsigned __int8 *)(a2 + 18);
  if (*(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8))
  {
    uint64_t result = 0;
    if (v2 != v5) {
      return result;
    }
    goto LABEL_9;
  }
  char v9 = sub_21CB88F50();
  uint64_t result = 0;
  if ((v9 & 1) != 0 && ((v2 ^ v5) & 1) == 0)
  {
LABEL_9:
    if (((v3 ^ v6) & 1) == 0) {
      return v4 ^ v7 ^ 1u;
    }
  }
  return result;
}

uint64_t SPSecureLocationPublishReason.description.getter(uint64_t a1)
{
  uint64_t v1 = a1 - 1;
  uint64_t result = 6515827;
  switch(v1)
  {
    case 0:
      return result;
    case 1:
      uint64_t result = 0x6174537469736976;
      break;
    case 2:
      uint64_t result = 0x6165627472616568;
      break;
    case 3:
      uint64_t result = 0x65646E6174737962;
      break;
    case 4:
      uint64_t result = 0x646E616D65446E6FLL;
      break;
    case 5:
      uint64_t result = 0x776F6C6C616873;
      break;
    case 6:
      uint64_t result = 1702259052;
      break;
    case 7:
      uint64_t result = 0x656977657473;
      break;
    default:
      uint64_t result = 0x6E776F6E6B6E75;
      break;
  }
  return result;
}

uint64_t sub_21CB3B610()
{
  return SPSecureLocationPublishReason.description.getter(*v0);
}

uint64_t sub_21CB3B618(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t sub_21CB3B62C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 16))();
}

uint64_t sub_21CB3B640(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

uint64_t sub_21CB3B654(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 32))();
}

uint64_t sub_21CB3B668(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 40))();
}

uint64_t sub_21CB3B67C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 48))();
}

uint64_t sub_21CB3B690(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t sub_21CB3B6A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t sub_21CB3B6B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

uint64_t sub_21CB3B6CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 32))();
}

uint64_t sub_21CB3B6E0(uint64_t a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v37 = a1;
  uint64_t v38 = a2;
  uint64_t v36 = sub_21CB888F0();
  uint64_t v4 = *(void *)(v36 - 8);
  MEMORY[0x270FA5388](v36);
  int v6 = (char *)v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_21CB888B0();
  MEMORY[0x270FA5388](v7);
  uint64_t v8 = sub_21CB88150();
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v9 = MEMORY[0x263F8EE88];
  *(void *)(v2 + 32) = MEMORY[0x263F8EE88];
  *(void *)(v2 + 40) = 0;
  *(void *)(v2 + 48) = 0;
  *(void *)(v2 + 56) = v9;
  *(void *)(v2 + 64) = 0;
  *(void *)(v2 + 72) = 0;
  *(void *)(v2 + 80) = v9;
  *(void *)(v2 + 88) = v9;
  uint64_t v10 = MEMORY[0x263F8EE80];
  *(void *)(v2 + 96) = MEMORY[0x263F8EE80];
  *(void *)(v2 + 104) = v10;
  *(void *)(v2 + 112) = v10;
  *(void *)(v2 + 120) = 0;
  type metadata accessor for FMLocationShifter();
  swift_allocObject();
  *(void *)(v2 + 128) = FMLocationShifter.init()();
  v35[5] = sub_21CA05908(0, (unint64_t *)&qword_267C96F80);
  sub_21CB88120();
  double v39 = MEMORY[0x263F8EE78];
  v35[3] = sub_21CA365D0((unint64_t *)&qword_267C96F60, MEMORY[0x263F8F0F8]);
  void v35[2] = sub_21CA57E34((uint64_t *)&unk_267C96F90);
  v35[4] = sub_21CA3566C((unint64_t *)&qword_267C96F70, (uint64_t *)&unk_267C96F90);
  sub_21CB88A60();
  uint64_t v11 = *MEMORY[0x263F8F130];
  uint64_t v12 = v4 + 104;
  uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 104);
  v35[1] = v12;
  uint64_t v14 = v36;
  v13(v6, v11, v36);
  *(void *)(v2 + 136) = sub_21CB88930();
  sub_21CB88120();
  double v39 = MEMORY[0x263F8EE78];
  sub_21CB88A60();
  v13(v6, v11, v14);
  uint64_t v15 = v37;
  *(void *)(v2 + 144) = sub_21CB88930();
  *(void *)(v2 + 152) = MEMORY[0x263F8EE80];
  *(void *)(v2 + 160) = 0x402E000000000000;
  *(void *)(v2 + 176) = 0;
  swift_unknownObjectWeakInit();
  *(void *)(v2 + 192) = 0;
  swift_unknownObjectWeakInit();
  *(void *)(v2 + 200) = 0;
  *(unsigned char *)(v2 + 208) = 1;
  id v16 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08790]), sel_init);
  *(void *)(v3 + 216) = v16;
  BOOL v17 = v38;
  *(void *)(v3 + 16) = v15;
  *(void *)(v3 + 24) = v17;
  swift_retain();
  int v18 = v17;
  id v19 = v16;
  uint64_t v20 = (void *)sub_21CB882C0();
  objc_msgSend(v19, sel_setLocalizedDateFormatFromTemplate_, v20);

  if (qword_267C94990 != -1) {
    swift_once();
  }
  uint64_t v21 = sub_21CB880A0();
  sub_21CA4CC18(v21, (uint64_t)qword_267CA5368);
  unint64_t v22 = sub_21CB88070();
  os_log_type_t v23 = sub_21CB88880();
  if (os_log_type_enabled(v22, v23))
  {
    uint64_t v24 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v24 = 0;
    _os_log_impl(&dword_21CA00000, v22, v23, "FMFSecureLocCtrl: initialized", v24, 2u);
    MEMORY[0x21D4B6B70](v24, -1, -1);
  }

  id v25 = objc_msgSend(self, sel_sharedInstance);
  unsigned int v26 = objc_msgSend(v25, sel_isInternalBuild);

  if (v26
    && (id v27 = objc_msgSend(self, sel_standardUserDefaults),
        int v28 = (void *)sub_21CB882C0(),
        objc_msgSend(v27, sel_doubleForKey_, v28),
        double v30 = v29,
        v27,
        v28,
        v30 > 0.0))
  {
    *(double *)(v3 + 200) = v30;
    *(unsigned char *)(v3 + 208) = 0;
    uint64_t v31 = sub_21CB88070();
    os_log_type_t v32 = sub_21CB88880();
    if (os_log_type_enabled(v31, v32))
    {
      uint64_t v33 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v33 = 134217984;
      double v39 = v30;
      sub_21CB889C0();
      _os_log_impl(&dword_21CA00000, v31, v32, "FMFSecureLocCtrl: overriding liveAnimationTimeoutDuration %f", v33, 0xCu);
      MEMORY[0x21D4B6B70](v33, -1, -1);
    }
    swift_release();
  }
  else
  {
    swift_release();
    uint64_t v31 = v18;
  }

  return v3;
}