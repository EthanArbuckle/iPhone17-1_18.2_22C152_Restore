uint64_t sub_1000AEB9C()
{
  uint64_t v0;
  void *v1;
  void *v2;
  unint64_t v3;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v5;
  unint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v12 = v0;
  v1 = *(void **)(v0 + 248);
  v2 = *(void **)(v0 + 184);
  sub_10001644C(&qword_1005A5E50);
  static Dictionary._conditionallyBridgeFromObjectiveC(_:result:)();

  v3 = sub_1000AF3F4((uint64_t)&off_1005106B8, 0, 0);
  swift_arrayDestroy();
  *(void *)(v0 + 144) = 0xD000000000000013;
  *(void *)(v0 + 168) = &type metadata for String;
  *(void *)(v0 + 152) = 0x800000010044EA70;
  sub_10000C948((_OWORD *)(v0 + 144), (_OWORD *)(v0 + 184));
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_1000D2278((_OWORD *)(v0 + 184), 0x734E72657375, 0xE600000000000000, isUniquelyReferenced_nonNull_native);
  v5 = v3;
  swift_bridgeObjectRelease();
  v6 = sub_1000AF3F4((uint64_t)&off_1005106E8, 0, 1);
  swift_bridgeObjectRelease();
  swift_arrayDestroy();
  v7 = swift_isUniquelyReferenced_nonNull_native();
  v11 = v5;
  sub_1000899A8(v6, (uint64_t)sub_1000AFB04, 0, v7, &v11);
  v8 = v11;
  swift_bridgeObjectRelease();
  v9 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v9(v8);
}

uint64_t sub_1000AEDA8()
{
  uint64_t v11 = v0;
  v1 = *(void **)(v0 + 232);
  swift_willThrow();
  swift_errorRelease();

  unint64_t v2 = sub_1000AF3F4((uint64_t)&off_1005106B8, 0, 0);
  swift_arrayDestroy();
  *(void *)(v0 + 144) = 0xD000000000000013;
  *(void *)(v0 + 168) = &type metadata for String;
  *(void *)(v0 + 152) = 0x800000010044EA70;
  sub_10000C948((_OWORD *)(v0 + 144), (_OWORD *)(v0 + 184));
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_1000D2278((_OWORD *)(v0 + 184), 0x734E72657375, 0xE600000000000000, isUniquelyReferenced_nonNull_native);
  uint64_t v4 = v2;
  swift_bridgeObjectRelease();
  unint64_t v5 = sub_1000AF3F4((uint64_t)&off_1005106E8, 0, 1);
  swift_bridgeObjectRelease();
  swift_arrayDestroy();
  char v6 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v10 = v4;
  sub_1000899A8(v5, (uint64_t)sub_1000AFB04, 0, v6, &v10);
  uint64_t v7 = v10;
  swift_bridgeObjectRelease();
  v8 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v8(v7);
}

uint64_t sub_1000AEF80()
{
  uint64_t v11 = v0;
  v1 = *(void **)(v0 + 248);
  swift_willThrow();
  swift_errorRelease();

  unint64_t v2 = sub_1000AF3F4((uint64_t)&off_1005106B8, 0, 0);
  swift_arrayDestroy();
  *(void *)(v0 + 144) = 0xD000000000000013;
  *(void *)(v0 + 168) = &type metadata for String;
  *(void *)(v0 + 152) = 0x800000010044EA70;
  sub_10000C948((_OWORD *)(v0 + 144), (_OWORD *)(v0 + 184));
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_1000D2278((_OWORD *)(v0 + 184), 0x734E72657375, 0xE600000000000000, isUniquelyReferenced_nonNull_native);
  uint64_t v4 = v2;
  swift_bridgeObjectRelease();
  unint64_t v5 = sub_1000AF3F4((uint64_t)&off_1005106E8, 0, 1);
  swift_bridgeObjectRelease();
  swift_arrayDestroy();
  char v6 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v10 = v4;
  sub_1000899A8(v5, (uint64_t)sub_1000AFB04, 0, v6, &v10);
  uint64_t v7 = v10;
  swift_bridgeObjectRelease();
  v8 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v8(v7);
}

uint64_t sub_1000AF158(uint64_t a1, uint64_t a2)
{
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v8 = a2;
  sub_1000AFB58(a1, (uint64_t)sub_1000AFB04, 0, isUniquelyReferenced_nonNull_native, (uint64_t)&v8);
  uint64_t v6 = v8;
  swift_bridgeObjectRelease();
  if (v2) {
    swift_bridgeObjectRelease();
  }
  return v6;
}

uint64_t sub_1000AF34C(const void *a1, void *a2)
{
  v2[2] = a2;
  v2[3] = _Block_copy(a1);
  a2;
  uint64_t v4 = (void *)swift_task_alloc();
  v2[4] = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_100055EA0;
  return sub_1000AC458();
}

unint64_t sub_1000AF3F4(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = v3;
  uint64_t v6 = 0xD000000000000012;
  int v7 = a3 & 1;
  if (!a2)
  {
LABEL_22:
    char v18 = 0;
    if (v7) {
      v14 = _swiftEmptyArrayStorage;
    }
    else {
      v14 = &off_100510688;
    }
    if (v7) {
      unint64_t v15 = 0xD000000000000019;
    }
    else {
      unint64_t v15 = 0xD000000000000012;
    }
    if (v7) {
      unint64_t v16 = 0x800000010044EAE0;
    }
    else {
      unint64_t v16 = 0x800000010044EB00;
    }
    uint64_t v17 = 0x800000010044CE80;
    goto LABEL_32;
  }
  if (a3) {
    uint64_t v9 = 0x800000010044EB20;
  }
  else {
    uint64_t v9 = 0x800000010044EA70;
  }
  if (!*(void *)(a2 + 16)
    || ((a3 & 1) == 0 ? (uint64_t v10 = 0xD000000000000013) : (uint64_t v10 = 0xD00000000000001ALL),
        unint64_t v11 = sub_100049A4C(v10, v9),
        (v12 & 1) == 0))
  {
    swift_bridgeObjectRelease();
    goto LABEL_22;
  }
  uint64_t v13 = *(void *)(*(void *)(a2 + 56) + 8 * v11);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_1000B028C(v13, (uint64_t)&v31);
  if (v7) {
    v14 = _swiftEmptyArrayStorage;
  }
  else {
    v14 = &off_100510688;
  }
  if (v7) {
    unint64_t v15 = 0xD000000000000019;
  }
  else {
    unint64_t v15 = 0xD000000000000012;
  }
  if (v7) {
    unint64_t v16 = 0x800000010044EAE0;
  }
  else {
    unint64_t v16 = 0x800000010044EB00;
  }
  uint64_t v17 = 0x800000010044CE80;
  if (!v32)
  {
    char v18 = 0;
LABEL_32:
    uint64_t v19 = 0x416DA9C000000000;
    goto LABEL_33;
  }
  char v18 = v37 & 1;
  uint64_t v19 = v36;
  unint64_t v15 = v34;
  v29 = v33;
  unint64_t v30 = v35;
  uint64_t v6 = v31;
  uint64_t v20 = v32;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v17 = v20;
  v14 = v29;
  unint64_t v16 = v30;
LABEL_33:
  v38[0] = v6;
  v38[1] = v17;
  v38[2] = v14;
  v38[3] = v15;
  v38[4] = v16;
  v38[5] = v19;
  char v39 = v18;
  sub_100018D68(0, &qword_1005A5A00);
  v21 = *(void **)(v4 + OBJC_IVAR____TtC9appstored28PostPurchaseInstallSheetTask_account);
  id v22 = v21;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v23 = sub_1000AF734((uint64_t)v38, v7, v21);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1000AFEB0(a1, v6, v17, v14);
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  sub_100018D68(0, (unint64_t *)&qword_1005A5A08);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v25 = [v23 generateEventFieldsForKeys:isa];

  uint64_t v26 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v27 = sub_1000AC048(v26);

  swift_bridgeObjectRelease();
  return v27;
}

id sub_1000AF734(uint64_t a1, char a2, void *a3)
{
  id v6 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  [v6 setAccount:a3];
  NSString v7 = String._bridgeToObjectiveC()();
  [v6 setDomain:v7];

  if ((*(unsigned char *)(a1 + 48) & 1) == 0) {
    [v6 setResetInterval:*(double *)(a1 + 40)];
  }
  id v8 = objc_allocWithZone((Class)AMSProcessInfo);
  swift_bridgeObjectRetain();
  NSString v9 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v10 = [v8 initWithBundleIdentifier:v9];
  swift_bridgeObjectRelease();

  uint64_t v13 = *(void *)(a1 + 16);
  sub_10005AEFC((uint64_t)&v13);
  swift_bridgeObjectRelease();
  [v6 setClientInfo:v10];

  if ((a2 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_6:
    [v6 setIncludeAccountMatchStatus:1];
    goto LABEL_7;
  }
  char v11 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  if (v11) {
    goto LABEL_6;
  }
LABEL_7:

  return v6;
}

uint64_t type metadata accessor for PostPurchaseInstallSheetTask()
{
  return self;
}

uint64_t sub_1000AFA10()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000AFA50()
{
  uint64_t v2 = *(const void **)(v0 + 16);
  uint64_t v3 = *(void **)(v0 + 24);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_100005040;
  unint64_t v5 = (uint64_t (*)(const void *, void *))((char *)&dword_1005A59E0 + dword_1005A59E0);
  return v5(v2, v3);
}

uint64_t sub_1000AFB04@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  sub_100031C38((uint64_t)(a1 + 2), (uint64_t)(a2 + 2));
  *a2 = v4;
  a2[1] = v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1000AFB58(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v7 = -1 << *(unsigned char *)(a1 + 32);
  uint64_t v8 = ~v7;
  uint64_t v9 = *(void *)(a1 + 64);
  uint64_t v10 = -v7;
  uint64_t v50 = a1;
  uint64_t v51 = a1 + 64;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  else {
    uint64_t v11 = -1;
  }
  uint64_t v52 = v8;
  uint64_t v53 = 0;
  uint64_t v54 = v11 & v9;
  uint64_t v55 = a2;
  uint64_t v56 = a3;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1000BDDF8(&v48);
  uint64_t v12 = *((void *)&v48 + 1);
  if (!*((void *)&v48 + 1)) {
    goto LABEL_27;
  }
  uint64_t v13 = v48;
  sub_10000C948(v49, v47);
  v14 = *(void **)a5;
  unint64_t v16 = sub_100049A4C(v13, v12);
  uint64_t v17 = v14[2];
  BOOL v18 = (v15 & 1) == 0;
  uint64_t v19 = v17 + v18;
  if (__OFADD__(v17, v18))
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  char v20 = v15;
  if (v14[3] >= v19)
  {
    if (a4)
    {
      if (v15) {
        goto LABEL_12;
      }
    }
    else
    {
      sub_1000D33EC();
      if (v20) {
        goto LABEL_12;
      }
    }
LABEL_14:
    v24 = *(void **)a5;
    *(void *)(*(void *)a5 + 8 * (v16 >> 6) + 64) |= 1 << v16;
    id v25 = (uint64_t *)(v24[6] + 16 * v16);
    *id v25 = v13;
    v25[1] = v12;
    sub_10000C948(v47, (_OWORD *)(v24[7] + 32 * v16));
    uint64_t v26 = v24[2];
    BOOL v27 = __OFADD__(v26, 1);
    uint64_t v28 = v26 + 1;
    if (v27)
    {
LABEL_29:
      __break(1u);
      goto LABEL_30;
    }
    v24[2] = v28;
LABEL_16:
    sub_1000BDDF8(&v48);
    for (uint64_t i = *((void *)&v48 + 1); *((void *)&v48 + 1); uint64_t i = *((void *)&v48 + 1))
    {
      uint64_t v31 = v48;
      sub_10000C948(v49, v47);
      uint64_t v32 = *(void **)a5;
      unint64_t v34 = sub_100049A4C(v31, i);
      uint64_t v35 = v32[2];
      BOOL v36 = (v33 & 1) == 0;
      uint64_t v37 = v35 + v36;
      if (__OFADD__(v35, v36)) {
        goto LABEL_28;
      }
      char v38 = v33;
      if (v32[3] < v37)
      {
        sub_1000CFEAC(v37, 1);
        unint64_t v39 = sub_100049A4C(v31, i);
        if ((v38 & 1) != (v40 & 1)) {
          goto LABEL_30;
        }
        unint64_t v34 = v39;
      }
      if (v38)
      {
        sub_100031C38((uint64_t)v47, (uint64_t)v46);
        sub_10002E618((uint64_t)v47);
        swift_bridgeObjectRelease();
        unint64_t v30 = (_OWORD *)(*(void *)(*(void *)a5 + 56) + 32 * v34);
        sub_10002E618((uint64_t)v30);
        sub_10000C948(v46, v30);
      }
      else
      {
        v41 = *(void **)a5;
        *(void *)(*(void *)a5 + 8 * (v34 >> 6) + 64) |= 1 << v34;
        v42 = (uint64_t *)(v41[6] + 16 * v34);
        uint64_t *v42 = v31;
        v42[1] = i;
        sub_10000C948(v47, (_OWORD *)(v41[7] + 32 * v34));
        uint64_t v43 = v41[2];
        BOOL v27 = __OFADD__(v43, 1);
        uint64_t v44 = v43 + 1;
        if (v27) {
          goto LABEL_29;
        }
        v41[2] = v44;
      }
      sub_1000BDDF8(&v48);
    }
LABEL_27:
    swift_release();
    swift_bridgeObjectRelease();
    sub_100035EBC();
    return swift_release();
  }
  sub_1000CFEAC(v19, a4 & 1);
  unint64_t v21 = sub_100049A4C(v13, v12);
  if ((v20 & 1) == (v22 & 1))
  {
    unint64_t v16 = v21;
    if ((v20 & 1) == 0) {
      goto LABEL_14;
    }
LABEL_12:
    sub_100031C38((uint64_t)v47, (uint64_t)v46);
    sub_10002E618((uint64_t)v47);
    swift_bridgeObjectRelease();
    id v23 = (_OWORD *)(*(void *)(*(void *)a5 + 56) + 32 * v16);
    sub_10002E618((uint64_t)v23);
    sub_10000C948(v46, v23);
    goto LABEL_16;
  }
LABEL_30:
  uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

uint64_t sub_1000AFEB0(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t result = (uint64_t)_swiftEmptyArrayStorage;
  if (!v5) {
    return result;
  }
  specialized ContiguousArray.reserveCapacity(_:)();
  uint64_t v24 = a1 + 32;
  uint64_t v8 = self;
  uint64_t v9 = 0;
  uint64_t v10 = a4[2];
  id v22 = (id)v8;
  uint64_t v23 = v5;
  while (1)
  {
    uint64_t v13 = (uint64_t *)(v24 + 16 * v9);
    uint64_t v15 = *v13;
    uint64_t v14 = v13[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    NSString v16 = String._bridgeToObjectiveC()();
    if (v10) {
      break;
    }
    char v11 = 0;
LABEL_4:
    ++v9;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    id v12 = [v22 keyWithName:v16 crossDeviceSync:v11 & 1];
    swift_bridgeObjectRelease();

    specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
    specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
    specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized ContiguousArray._endMutation()();
    if (v9 == v23) {
      return (uint64_t)_swiftEmptyArrayStorage;
    }
  }
  if (a4[4] == v15 && a4[5] == v14)
  {
    char v11 = 1;
    goto LABEL_4;
  }
  uint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)();
  char v11 = result;
  if ((result & 1) != 0 || v10 == 1) {
    goto LABEL_4;
  }
  BOOL v18 = a4 + 7;
  uint64_t v19 = 1;
  while (1)
  {
    uint64_t v20 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    BOOL v21 = *(v18 - 1) == v15 && *v18 == v14;
    if (v21 || (uint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)(), (result & 1) != 0))
    {
      char v11 = 1;
      goto LABEL_4;
    }
    v18 += 2;
    ++v19;
    if (v20 == v10)
    {
      char v11 = 0;
      goto LABEL_4;
    }
  }
  __break(1u);
  return result;
}

id sub_1000B00C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, char a6)
{
  uint64_t v7 = v6;
  ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v15 = &v7[OBJC_IVAR____TtC9appstored28PostPurchaseInstallSheetTask_itemID];
  *(void *)uint64_t v15 = a1;
  *((void *)v15 + 1) = a2;
  NSString v16 = &v7[OBJC_IVAR____TtC9appstored28PostPurchaseInstallSheetTask_versionID];
  *(void *)NSString v16 = a3;
  *((void *)v16 + 1) = a4;
  uint64_t v17 = v7;
  id v18 = [a5 logKey];
  *(void *)&v17[OBJC_IVAR____TtC9appstored28PostPurchaseInstallSheetTask_logKey] = v18;
  unsigned __int8 v19 = [a5 isUserInitiated];
  v17[OBJC_IVAR____TtC9appstored28PostPurchaseInstallSheetTask_isUserInitiated] = v19;
  BOOL v20 = [a5 updateType] != 0;
  v17[OBJC_IVAR____TtC9appstored28PostPurchaseInstallSheetTask_isUpdate] = v20;
  unsigned __int8 v21 = [a5 didShowPaymentSheet];
  v17[OBJC_IVAR____TtC9appstored28PostPurchaseInstallSheetTask_shouldShowBiometrics] = v21 ^ 1;
  id v22 = [a5 qosMetricsFields];
  if (v22)
  {
    uint64_t v23 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

    id v22 = (id)sub_1000AC048(v23);
    swift_bridgeObjectRelease();
  }
  *(void *)&v17[OBJC_IVAR____TtC9appstored28PostPurchaseInstallSheetTask_qosMetricsFields] = v22;
  id v24 = [a5 account];
  *(void *)&v17[OBJC_IVAR____TtC9appstored28PostPurchaseInstallSheetTask_account] = v24;
  v17[OBJC_IVAR____TtC9appstored28PostPurchaseInstallSheetTask_isRedownload] = a6 & 1;

  v26.receiver = v17;
  v26.super_class = ObjectType;
  return objc_msgSendSuper2(&v26, "init");
}

uint64_t sub_1000B028C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if (!*(void *)(a1 + 16)
    || (unint64_t v4 = sub_100049A4C(0xD000000000000010, 0x800000010044EB40), (v5 & 1) == 0)
    || (sub_100031C38(*(void *)(a1 + 56) + 32 * v4, (uint64_t)&v25), (swift_dynamicCast() & 1) == 0))
  {
LABEL_18:
    uint64_t result = swift_bridgeObjectRelease();
    goto LABEL_19;
  }
  uint64_t v7 = v22;
  uint64_t v6 = v23;
  uint64_t v8 = *(void *)(a1 + 16);
  swift_bridgeObjectRetain();
  if (v8
    && (unint64_t v9 = sub_100049A4C(0x76654473736F7263, 0xEF7379654B656369), (v10 & 1) != 0)
    && (sub_100031C38(*(void *)(a1 + 56) + 32 * v9, (uint64_t)&v25),
        sub_10001644C(&qword_1005A4EE8),
        swift_dynamicCast()))
  {
    char v11 = v22;
  }
  else
  {
    char v11 = _swiftEmptyArrayStorage;
  }
  if (*(void *)(a1 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v12 = sub_100049A4C(0x6E69616D6F64, 0xE600000000000000);
    if (v13)
    {
      sub_100031C38(*(void *)(a1 + 56) + 32 * v12, (uint64_t)&v25);
      if (swift_dynamicCast())
      {
        uint64_t v15 = v22;
        uint64_t v14 = v23;
        if (*(void *)(a1 + 16))
        {
          swift_bridgeObjectRetain();
          unint64_t v16 = sub_100049A4C(0x746E497465736572, 0xED00006C61767265);
          if (v17)
          {
            sub_100031C38(*(void *)(a1 + 56) + 32 * v16, (uint64_t)&v25);
          }
          else
          {
            long long v25 = 0u;
            long long v26 = 0u;
          }
        }
        else
        {
          long long v25 = 0u;
          long long v26 = 0u;
          swift_bridgeObjectRetain();
        }
        swift_bridgeObjectRelease();
        sub_10005862C((uint64_t)&v25, (uint64_t)&v22);
        if (v24)
        {
          if (swift_dynamicCast())
          {
            char v19 = 0;
            double v20 = *(double *)&v21;
LABEL_32:
            sub_100031BD8((uint64_t)&v25);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t result = swift_bridgeObjectRelease();
            goto LABEL_20;
          }
        }
        else
        {
          sub_100031BD8((uint64_t)&v22);
        }
        sub_10005862C((uint64_t)&v25, (uint64_t)&v22);
        if (v24)
        {
          if (swift_dynamicCast())
          {
            char v19 = 0;
            double v20 = (double)v21;
            goto LABEL_32;
          }
        }
        else
        {
          sub_100031BD8((uint64_t)&v22);
        }
        char v19 = 1;
        double v20 = 0.0;
        goto LABEL_32;
      }
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      goto LABEL_18;
    }
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease_n();
LABEL_19:
  uint64_t v7 = 0;
  uint64_t v6 = 0;
  char v11 = 0;
  uint64_t v15 = 0;
  uint64_t v14 = 0;
  char v19 = 0;
  double v20 = 0.0;
LABEL_20:
  *(void *)a2 = v7;
  *(void *)(a2 + 8) = v6;
  *(void *)(a2 + 16) = v11;
  *(void *)(a2 + 24) = v15;
  *(void *)(a2 + 32) = v14;
  *(double *)(a2 + 40) = v20;
  *(unsigned char *)(a2 + 48) = v19;
  return result;
}

uint64_t sub_1000B05C4(uint64_t result, unint64_t a2)
{
  uint64_t v3 = HIBYTE(a2) & 0xF;
  uint64_t v4 = result & 0xFFFFFFFFFFFFLL;
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = result & 0xFFFFFFFFFFFFLL;
  }
  if (!v5)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  if ((a2 & 0x1000000000000000) == 0)
  {
    if ((a2 & 0x2000000000000000) == 0)
    {
      if ((result & 0x1000000000000000) != 0) {
        uint64_t v6 = (unsigned __int8 *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 32);
      }
      else {
        uint64_t v6 = (unsigned __int8 *)_StringObject.sharedUTF8.getter();
      }
      uint64_t v7 = (uint64_t)sub_1000B3B9C(v6, v4, 10);
      char v9 = v8 & 1;
      goto LABEL_37;
    }
    v23[0] = result;
    v23[1] = a2 & 0xFFFFFFFFFFFFFFLL;
    if (result == 43)
    {
      if (!v3) {
        goto LABEL_50;
      }
      if (v3 == 1 || (BYTE1(result) - 48) > 9u) {
        goto LABEL_34;
      }
      uint64_t v7 = (BYTE1(result) - 48);
      uint64_t v14 = v3 - 2;
      if (v14)
      {
        uint64_t v15 = (unsigned __int8 *)v23 + 2;
        while (1)
        {
          unsigned int v16 = *v15 - 48;
          if (v16 > 9) {
            goto LABEL_34;
          }
          uint64_t v17 = 10 * v7;
          if ((unsigned __int128)(v7 * (__int128)10) >> 64 != (10 * v7) >> 63) {
            goto LABEL_34;
          }
          uint64_t v7 = v17 + v16;
          if (__OFADD__(v17, v16)) {
            goto LABEL_34;
          }
          char v9 = 0;
          ++v15;
          if (!--v14) {
            goto LABEL_37;
          }
        }
      }
    }
    else
    {
      if (result == 45)
      {
        if (v3)
        {
          if (v3 != 1 && (BYTE1(result) - 48) <= 9u)
          {
            uint64_t v7 = -(uint64_t)(BYTE1(result) - 48);
            uint64_t v10 = v3 - 2;
            if (v10)
            {
              char v11 = (unsigned __int8 *)v23 + 2;
              while (1)
              {
                unsigned int v12 = *v11 - 48;
                if (v12 > 9) {
                  goto LABEL_34;
                }
                uint64_t v13 = 10 * v7;
                if ((unsigned __int128)(v7 * (__int128)10) >> 64 != (10 * v7) >> 63) {
                  goto LABEL_34;
                }
                uint64_t v7 = v13 - v12;
                if (__OFSUB__(v13, v12)) {
                  goto LABEL_34;
                }
                char v9 = 0;
                ++v11;
                if (!--v10) {
                  goto LABEL_37;
                }
              }
            }
            goto LABEL_36;
          }
LABEL_34:
          uint64_t v7 = 0;
          char v9 = 1;
          goto LABEL_37;
        }
        __break(1u);
LABEL_50:
        __break(1u);
        return result;
      }
      if (!v3 || (result - 48) > 9u) {
        goto LABEL_34;
      }
      uint64_t v7 = (result - 48);
      uint64_t v18 = v3 - 1;
      if (v18)
      {
        char v19 = (unsigned __int8 *)v23 + 1;
        while (1)
        {
          unsigned int v20 = *v19 - 48;
          if (v20 > 9) {
            goto LABEL_34;
          }
          uint64_t v21 = 10 * v7;
          if ((unsigned __int128)(v7 * (__int128)10) >> 64 != (10 * v7) >> 63) {
            goto LABEL_34;
          }
          uint64_t v7 = v21 + v20;
          if (__OFADD__(v21, v20)) {
            goto LABEL_34;
          }
          char v9 = 0;
          ++v19;
          if (!--v18) {
            goto LABEL_37;
          }
        }
      }
    }
LABEL_36:
    char v9 = 0;
    goto LABEL_37;
  }
  uint64_t v7 = sub_1000B28D4(result, a2, 10, (uint64_t (*)(void *, uint64_t, uint64_t))sub_1000B3B9C);
  char v9 = v22;
LABEL_37:
  swift_bridgeObjectRelease();
  if (v9) {
    return 0;
  }
  else {
    return v7;
  }
}

unint64_t sub_1000B0828(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = HIBYTE(a2) & 0xF;
  uint64_t v5 = a1 & 0xFFFFFFFFFFFFLL;
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v6 = v4;
  }
  else {
    uint64_t v6 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (!v6)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  if ((a2 & 0x1000000000000000) != 0)
  {
    unint64_t v8 = sub_1000B28D4(a1, a2, 10, (uint64_t (*)(void *, uint64_t, uint64_t))sub_1000B3E18);
    char v10 = v22;
    goto LABEL_39;
  }
  if ((a2 & 0x2000000000000000) == 0)
  {
    if ((a1 & 0x1000000000000000) != 0) {
      uint64_t v7 = (unsigned __int8 *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 32);
    }
    else {
      uint64_t v7 = (unsigned __int8 *)_StringObject.sharedUTF8.getter();
    }
    unint64_t v8 = (unint64_t)sub_1000B3E18(v7, v5, 10);
    char v10 = v9 & 1;
    goto LABEL_39;
  }
  v23[0] = a1;
  v23[1] = a2 & 0xFFFFFFFFFFFFFFLL;
  if (a1 == 43)
  {
    if (!v4) {
      goto LABEL_52;
    }
    if (v4 == 1 || (BYTE1(a1) - 48) > 9u) {
      goto LABEL_36;
    }
    unint64_t v8 = (BYTE1(a1) - 48);
    uint64_t v15 = v4 - 2;
    if (v15)
    {
      unsigned int v16 = (unsigned __int8 *)v23 + 2;
      while (1)
      {
        unsigned int v17 = *v16 - 48;
        if (v17 > 9) {
          goto LABEL_36;
        }
        if (!is_mul_ok(v8, 0xAuLL)) {
          goto LABEL_36;
        }
        BOOL v14 = __CFADD__(10 * v8, v17);
        unint64_t v8 = 10 * v8 + v17;
        if (v14) {
          goto LABEL_36;
        }
        char v10 = 0;
        ++v16;
        if (!--v15) {
          goto LABEL_39;
        }
      }
    }
LABEL_38:
    char v10 = 0;
    goto LABEL_39;
  }
  if (a1 != 45)
  {
    if (!v4 || (a1 - 48) > 9u) {
      goto LABEL_36;
    }
    unint64_t v8 = (a1 - 48);
    uint64_t v18 = v4 - 1;
    if (v18)
    {
      unsigned int v20 = (unsigned __int8 *)v23 + 1;
      while (1)
      {
        unsigned int v21 = *v20 - 48;
        if (v21 > 9) {
          goto LABEL_36;
        }
        if (!is_mul_ok(v8, 0xAuLL)) {
          goto LABEL_36;
        }
        BOOL v14 = __CFADD__(10 * v8, v21);
        unint64_t v8 = 10 * v8 + v21;
        if (v14) {
          goto LABEL_36;
        }
        char v10 = 0;
        ++v20;
        if (!--v18) {
          goto LABEL_39;
        }
      }
    }
    goto LABEL_38;
  }
  if (v4)
  {
    if (v4 != 1 && (BYTE1(a1) - 48) <= 9u)
    {
      unint64_t v2 = 0;
      unint64_t v8 = -(uint64_t)(BYTE1(a1) - 48);
      if (BYTE1(a1) == 48)
      {
        uint64_t v11 = v4 - 2;
        if (v11)
        {
          unsigned int v12 = (unsigned __int8 *)v23 + 2;
          while (1)
          {
            unsigned int v13 = *v12 - 48;
            if (v13 > 9) {
              goto LABEL_36;
            }
            if (!is_mul_ok(v8, 0xAuLL)) {
              goto LABEL_36;
            }
            BOOL v14 = 10 * v8 >= v13;
            unint64_t v8 = 10 * v8 - v13;
            if (!v14) {
              goto LABEL_36;
            }
            char v10 = 0;
            ++v12;
            if (!--v11) {
              goto LABEL_39;
            }
          }
        }
        goto LABEL_38;
      }
      goto LABEL_53;
    }
LABEL_36:
    unint64_t v8 = 0;
    char v10 = 1;
    goto LABEL_39;
  }
  __break(1u);
LABEL_52:
  __break(1u);
LABEL_53:
  char v10 = 1;
  unint64_t v8 = v2;
LABEL_39:
  swift_bridgeObjectRelease();
  if (v10) {
    return 0;
  }
  else {
    return v8;
  }
}

uint64_t sub_1000B0A9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a1 + 24))
  {
    sub_10000C948((_OWORD *)a1, v9);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v8 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_1000D2278(v9, a2, a3, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v8;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_100016714(a1, &qword_1005A5660);
    sub_1000B29CC(a2, a3, v9);
    swift_bridgeObjectRelease();
    return sub_100016714((uint64_t)v9, &qword_1005A5660);
  }
}

uint64_t sub_1000B0B74(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_10001644C((uint64_t *)&unk_1005A57C0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for PurchaseCandidate();
  uint64_t v10 = *(void *)(v9 - 8);
  double v11 = __chkstk_darwin(v9);
  unsigned int v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t, double))(v10 + 48))(a1, 1, v9, v11) == 1)
  {
    sub_100016714(a1, (uint64_t *)&unk_1005A57C0);
    unint64_t v14 = sub_100049AC4(a2);
    if (v15)
    {
      unint64_t v16 = v14;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v18 = *v3;
      uint64_t v22 = *v3;
      *uint64_t v3 = 0x8000000000000000;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_1000D43F8();
        uint64_t v18 = v22;
      }
      sub_1000AA4F4(*(void *)(v18 + 56) + *(void *)(v10 + 72) * v16, (uint64_t)v8);
      sub_1000B39CC(v16, v18);
      *uint64_t v3 = v18;
      swift_bridgeObjectRelease();
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v8, 0, 1, v9);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, 1, 1, v9);
    }
    return sub_100016714((uint64_t)v8, (uint64_t *)&unk_1005A57C0);
  }
  else
  {
    sub_1000AA4F4(a1, (uint64_t)v13);
    char v19 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v22 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_1000D2F0C((uint64_t)v13, a2, v19);
    *uint64_t v3 = v22;
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1000B0DAC(char a1)
{
  uint64_t result = 0x6569766552707061;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x79754270696C63;
      break;
    case 2:
      uint64_t result = 0x79754265726F7473;
      break;
    case 3:
      uint64_t result = 0x6F725065726F7473;
      break;
    case 4:
      uint64_t v3 = 0x5265726F7473;
      goto LABEL_22;
    case 5:
      uint64_t result = 0x64705565726F7473;
      break;
    case 6:
      uint64_t result = 0xD000000000000013;
      break;
    case 7:
      uint64_t result = 0x65755165726F7473;
      break;
    case 8:
      uint64_t result = 0x65725065726F7473;
      break;
    case 9:
      uint64_t result = 0x73655265726F7473;
      break;
    case 10:
      uint64_t result = 0x74736E4961746562;
      break;
    case 11:
      uint64_t result = 0x6164705561746562;
      break;
    case 12:
      uint64_t result = 0x6374615761746562;
      break;
    case 13:
      uint64_t result = 0xD000000000000014;
      break;
    case 14:
      uint64_t result = 0xD000000000000013;
      break;
    case 15:
      uint64_t result = 0xD000000000000012;
      break;
    case 16:
      uint64_t result = 0xD000000000000011;
      break;
    case 17:
      uint64_t result = 0x6469766F72507674;
      break;
    case 18:
    case 19:
      uint64_t result = 0xD000000000000010;
      break;
    case 20:
      uint64_t v3 = 0x526863746177;
LABEL_22:
      uint64_t result = v3 & 0xFFFFFFFFFFFFLL | 0x6465000000000000;
      break;
    case 21:
      uint64_t result = 0x6E496D6574737973;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1000B10A0(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4)
{
  return sub_1000B1918(a1, a2, a3, a4, (uint64_t (*)(uint64_t))sub_1000B0DAC);
}

Swift::Int sub_1000B10B8(uint64_t a1, uint64_t a2)
{
  return sub_1000B19C8(a1, a2, (void (*)(uint64_t))sub_1000B0DAC);
}

uint64_t sub_1000B10D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1000B1A4C(a1, a2, a3, (void (*)(void))sub_1000B0DAC);
}

Swift::Int sub_1000B10E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1000B1ABC(a1, a2, a3, (void (*)(uint64_t))sub_1000B0DAC);
}

uint64_t sub_1000B1100@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1000B52F4();
  *a1 = result;
  return result;
}

uint64_t sub_1000B1130@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1000B0DAC(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1000B115C()
{
  return RawRepresentable<>.init(from:)();
}

uint64_t sub_1000B11BC()
{
  return RawRepresentable<>.encode(to:)();
}

unint64_t sub_1000B120C(char a1)
{
  unint64_t result = 0x6369706F74;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x436C6C6174736E69;
      break;
    case 2:
      unint64_t result = 0x7364496D616461;
      break;
    case 3:
      unint64_t result = 0x646F43726F727265;
      break;
    case 4:
      unint64_t result = 0x6D6F44726F727265;
      break;
    case 5:
      unint64_t result = 0x707954746E657665;
      break;
    case 6:
      unint64_t result = 0x446C6C6174736E69;
      break;
    case 7:
      unint64_t result = 0xD000000000000014;
      break;
    case 8:
      unint64_t result = 0x6F724665726F7473;
      break;
    case 9:
      unint64_t result = 0xD000000000000019;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1000B1378(char a1)
{
  unint64_t result = 0x6369706F74;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x436C6C6174736E69;
      break;
    case 2:
      unint64_t result = 0x7364496D616461;
      break;
    case 3:
      unint64_t result = 0x646F43726F727265;
      break;
    case 4:
      unint64_t result = 0x6D6F44726F727265;
      break;
    case 5:
      unint64_t result = 0x707954746E657665;
      break;
    case 6:
      unint64_t result = 0x446C6C6174736E69;
      break;
    case 7:
      unint64_t result = 0xD000000000000014;
      break;
    case 8:
      unint64_t result = 0x6F724665726F7473;
      break;
    case 9:
      unint64_t result = 0xD000000000000019;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1000B14E4(unsigned __int8 *a1, char *a2)
{
  return sub_1000F0B48(*a1, *a2);
}

Swift::Int sub_1000B14F0()
{
  return Hasher._finalize()();
}

uint64_t sub_1000B15D4()
{
  String.hash(into:)();
  return swift_bridgeObjectRelease();
}

Swift::Int sub_1000B16A0()
{
  return Hasher._finalize()();
}

unint64_t sub_1000B1780@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_1000B545C(*a1);
  *a2 = result;
  return result;
}

void sub_1000B17B0(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xEA00000000006C6CLL;
  uint64_t v3 = 0x6174736E4977656ELL;
  switch(*v1)
  {
    case 1:
      unsigned int v4 = 1717987684;
      goto LABEL_6;
    case 2:
      unint64_t v2 = 0xEB0000000061746CLL;
      uint64_t v3 = 0x65446E7265646F6DLL;
      goto LABEL_4;
    case 3:
      unsigned int v4 = 1819047270;
LABEL_6:
      *a1 = v4 | 0x6164705500000000;
      a1[1] = 0xEA00000000006574;
      return;
    default:
LABEL_4:
      *a1 = v3;
      a1[1] = v2;
      return;
  }
}

uint64_t sub_1000B1850()
{
  return RawRepresentable<>.init(from:)();
}

uint64_t sub_1000B18B0()
{
  return RawRepresentable<>.encode(to:)();
}

uint64_t sub_1000B1900(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4)
{
  return sub_1000B1918(a1, a2, a3, a4, (uint64_t (*)(uint64_t))sub_1000B120C);
}

uint64_t sub_1000B1918(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t))
{
  uint64_t v6 = *a2;
  uint64_t v7 = a5(*a1);
  uint64_t v9 = v8;
  if (v7 == a5(v6) && v9 == v10) {
    char v12 = 1;
  }
  else {
    char v12 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v12 & 1;
}

Swift::Int sub_1000B19B0(uint64_t a1, uint64_t a2)
{
  return sub_1000B19C8(a1, a2, (void (*)(uint64_t))sub_1000B120C);
}

Swift::Int sub_1000B19C8(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t v5 = *v3;
  Hasher.init(_seed:)();
  a3(v5);
  String.hash(into:)();
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

uint64_t sub_1000B1A34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1000B1A4C(a1, a2, a3, (void (*)(void))sub_1000B120C);
}

uint64_t sub_1000B1A4C(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  a4(*v4);
  String.hash(into:)();
  return swift_bridgeObjectRelease();
}

Swift::Int sub_1000B1AA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1000B1ABC(a1, a2, a3, (void (*)(uint64_t))sub_1000B120C);
}

Swift::Int sub_1000B1ABC(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v6 = *v4;
  Hasher.init(_seed:)();
  a4(v6);
  String.hash(into:)();
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

unint64_t sub_1000B1B24@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_1000B56B8(*a1);
  *a2 = result;
  return result;
}

unint64_t sub_1000B1B54@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_1000B120C(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_1000B1B80()
{
  return sub_1000B1378(*v0);
}

unint64_t sub_1000B1B88@<X0>(Swift::String a1@<X1:X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_1000B56B8(a1);
  *a2 = result;
  return result;
}

uint64_t sub_1000B1BB0(uint64_t a1)
{
  unint64_t v2 = sub_1000B5550();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1000B1BEC(uint64_t a1)
{
  unint64_t v2 = sub_1000B5550();
  return CodingKey.debugDescription.getter(a1, v2);
}

id sub_1000B1DB8(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  v1(v2);
  swift_release();
  NSString v3 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  return v3;
}

id sub_1000B1EA0()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AppInstallationEvent();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for AppInstallationEvent()
{
  return self;
}

{
  return type metadata accessor for AppInstallationEvent();
}

uint64_t sub_1000B1FE4(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_10001644C(&qword_1005A5B08);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10002FD00(a1, a1[3]);
  sub_1000B5550();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  LOBYTE(v10) = 0;
  KeyedEncodingContainer.encode(_:forKey:)();
  if (!v2)
  {
    LOBYTE(v10) = *(unsigned char *)(v3 + OBJC_IVAR____TtC9appstored20AppInstallationEvent_context);
    char v11 = 1;
    sub_1000B55A4();
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    uint64_t v10 = *(void *)(v3 + OBJC_IVAR____TtC9appstored20AppInstallationEvent_adamIDs);
    char v11 = 2;
    sub_10001644C(&qword_1005A4EE8);
    sub_1000B55F8();
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    LOBYTE(v10) = 3;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v10) = 4;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v10) = 5;
    KeyedEncodingContainer.encode(_:forKey:)();
    LOBYTE(v10) = 6;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v10) = *(unsigned char *)(v3 + OBJC_IVAR____TtC9appstored20AppInstallationEvent_packageType);
    char v11 = 7;
    sub_1000B5664();
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
    LOBYTE(v10) = 8;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v10) = 9;
    KeyedEncodingContainer.encode(_:forKey:)();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unsigned char *storeEnumTagSinglePayload for AppInstallationEvent.PackageType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000B2418);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AppInstallationEvent.PackageType()
{
  return &type metadata for AppInstallationEvent.PackageType;
}

uint64_t getEnumTagSinglePayload for AppInstallationEvent.Context(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xEB) {
    goto LABEL_17;
  }
  if (a2 + 21 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 21) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 21;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 21;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 21;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x16;
  int v8 = v6 - 22;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for AppInstallationEvent.Context(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 21 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 21) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xEB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xEA)
  {
    unsigned int v6 = ((a2 - 235) >> 8) + 1;
    *unint64_t result = a2 + 21;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000B25ACLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 21;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AppInstallationEvent.Context()
{
  return &type metadata for AppInstallationEvent.Context;
}

unint64_t sub_1000B25E8()
{
  unint64_t result = qword_1005A5AE0;
  if (!qword_1005A5AE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1005A5AE0);
  }
  return result;
}

unint64_t sub_1000B2640()
{
  unint64_t result = qword_1005A5AE8;
  if (!qword_1005A5AE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1005A5AE8);
  }
  return result;
}

uint64_t sub_1000B2694()
{
  uint64_t v1 = *(void *)(*v0 + OBJC_IVAR____TtC9appstored20AppInstallationEvent_topic);
  swift_bridgeObjectRetain();
  return v1;
}

void *sub_1000B26D4()
{
  uint64_t v1 = *(void **)(*v0 + OBJC_IVAR____TtC9appstored20AppInstallationEvent_eventTimeOverride);
  id v2 = v1;
  return v1;
}

id sub_1000B2708()
{
  return *(id *)(*v0 + OBJC_IVAR____TtC9appstored20AppInstallationEvent_logKey);
}

uint64_t sub_1000B271C()
{
  return swift_bridgeObjectRetain();
}

double sub_1000B2730()
{
  return 86400.0;
}

uint64_t sub_1000B2740()
{
  return *(unsigned __int8 *)(*v0 + OBJC_IVAR____TtC9appstored20AppInstallationEvent_manateeDomain);
}

void *sub_1000B2754()
{
  uint64_t v1 = *(void **)(*v0 + OBJC_IVAR____TtC9appstored20AppInstallationEvent_identifierResetIntervalBagKey);
  id v2 = v1;
  return v1;
}

uint64_t sub_1000B2788()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1000B279C()
{
  uint64_t v1 = *(void *)(*v0 + OBJC_IVAR____TtC9appstored20AppInstallationEvent_diagnosticsSubmissionBugType);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1000B27DC()
{
  return *(unsigned __int8 *)(*v0 + OBJC_IVAR____TtC9appstored20AppInstallationEvent_preventSampling);
}

uint64_t sub_1000B27F0()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1000B2804(void *a1)
{
  return sub_1000B1FE4(a1);
}

unint64_t sub_1000B2828(uint64_t a1)
{
  unint64_t result = sub_1000B2850();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1000B2850()
{
  unint64_t result = qword_1005A5AF0;
  if (!qword_1005A5AF0)
  {
    type metadata accessor for AppInstallationEvent();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1005A5AF0);
  }
  return result;
}

unsigned __int8 *sub_1000B28A4(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  return sub_1000B3B9C(a1, a2, a3);
}

uint64_t sub_1000B28BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1000B28D4(a1, a2, a3, (uint64_t (*)(void *, uint64_t, uint64_t))sub_1000B3B9C);
}

uint64_t sub_1000B28D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void *, uint64_t, uint64_t))
{
  uint64_t v15 = a1;
  uint64_t v16 = a2;
  swift_bridgeObjectRetain();
  uint64_t v7 = String.init<A>(_:)();
  unint64_t v8 = v6;
  if ((v6 & 0x1000000000000000) == 0)
  {
    if ((v6 & 0x2000000000000000) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v10 = HIBYTE(v8) & 0xF;
    uint64_t v15 = v7;
    uint64_t v16 = v8 & 0xFFFFFFFFFFFFFFLL;
    uint64_t v9 = &v15;
    goto LABEL_7;
  }
  uint64_t v7 = sub_1000B4094();
  unint64_t v12 = v11;
  swift_bridgeObjectRelease();
  unint64_t v8 = v12;
  if ((v12 & 0x2000000000000000) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v7 & 0x1000000000000000) != 0)
  {
    uint64_t v9 = (void *)((v8 & 0xFFFFFFFFFFFFFFFLL) + 32);
    uint64_t v10 = v7 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    uint64_t v9 = (void *)_StringObject.sharedUTF8.getter();
  }
LABEL_7:
  uint64_t v13 = a4(v9, v10, a3);
  swift_bridgeObjectRelease();
  return v13;
}

double sub_1000B29CC@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  unsigned int v4 = v3;
  swift_bridgeObjectRetain();
  unint64_t v8 = sub_100049A4C(a1, a2);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if (a2)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v11 = *v4;
    uint64_t v13 = *v4;
    *unsigned int v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1000D33EC();
      uint64_t v11 = v13;
    }
    swift_bridgeObjectRelease();
    sub_10000C948((_OWORD *)(*(void *)(v11 + 56) + 32 * v8), a3);
    sub_1000B2ED4(v8, v11);
    *unsigned int v4 = v11;
    swift_bridgeObjectRelease();
  }
  else
  {
    double result = 0.0;
    *a3 = 0u;
    a3[1] = 0u;
  }
  return result;
}

uint64_t sub_1000B2AD0(uint64_t a1, uint64_t a2)
{
  int v3 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_100049A4C(a1, a2);
  LOBYTE(a2) = v7;
  swift_bridgeObjectRelease();
  if ((a2 & 1) == 0) {
    return 2;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v9 = *v3;
  uint64_t v12 = *v3;
  *int v3 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1000D37D0();
    uint64_t v9 = v12;
  }
  swift_bridgeObjectRelease();
  uint64_t v10 = *(unsigned __int8 *)(*(void *)(v9 + 56) + v6);
  sub_1000B329C(v6, v9);
  *int v3 = v9;
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_1000B2BA0(unint64_t a1)
{
  id v2 = v1;
  uint64_t v4 = *v1;
  if ((v4 & 0xC000000000000001) == 0)
  {
LABEL_8:
    swift_bridgeObjectRetain();
    a1 = sub_100049B08(a1);
    char v13 = v12;
    swift_bridgeObjectRelease();
    if (v13)
    {
      int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      Swift::Int v9 = *v2;
      Swift::Int v17 = *v2;
      *id v2 = 0x8000000000000000;
      if (!isUniquelyReferenced_nonNull_native)
      {
        sub_1000D3EAC();
        Swift::Int v9 = v17;
      }
      goto LABEL_11;
    }
    return 0;
  }
  if (v4 < 0) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = v4 & 0xFFFFFFFFFFFFFF8;
  }
  swift_bridgeObjectRetain();
  id v6 = (id)a1;
  uint64_t v7 = __CocoaDictionary.lookup(_:)();

  if (!v7)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  swift_unknownObjectRelease();
  uint64_t v8 = __CocoaDictionary.count.getter();
  Swift::Int v9 = sub_1000892F4(v5, v8);
  swift_retain();
  a1 = sub_100049B08((uint64_t)v6);
  char v11 = v10;
  swift_release();
  if ((v11 & 1) == 0)
  {
    __break(1u);
    goto LABEL_8;
  }
LABEL_11:

  uint64_t v15 = *(void *)(*(void *)(v9 + 56) + 8 * a1);
  sub_1000B3474(a1, v9);
  *id v2 = v9;
  swift_bridgeObjectRelease();
  return v15;
}

double sub_1000B2CF0@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  int v3 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_100049A08(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if (a1)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v9 = *v3;
    uint64_t v11 = *v3;
    *int v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1000D4054();
      uint64_t v9 = v11;
    }
    sub_10004C8A0(*(void *)(v9 + 48) + 40 * v6);
    sub_10000C948((_OWORD *)(*(void *)(v9 + 56) + 32 * v6), a2);
    sub_1000B3628(v6, v9);
    *int v3 = v9;
    swift_bridgeObjectRelease();
  }
  else
  {
    double result = 0.0;
    *a2 = 0u;
    a2[1] = 0u;
  }
  return result;
}

uint64_t sub_1000B2DEC(uint64_t a1, uint64_t a2)
{
  int v3 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_100049A4C(a1, a2);
  LOBYTE(a2) = v7;
  swift_bridgeObjectRelease();
  if ((a2 & 1) == 0) {
    return 0;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v9 = *v3;
  uint64_t v12 = *v3;
  *int v3 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1000D423C();
    uint64_t v9 = v12;
  }
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(*(void *)(v9 + 56) + 16 * v6);
  sub_1000B37F4(v6, v9);
  *int v3 = v9;
  swift_bridgeObjectRelease();
  return v10;
}

unint64_t sub_1000B2ED4(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    double result = _HashTable.previousHole(before:)();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        Hasher.init(_seed:)();
        swift_bridgeObjectRetain();
        String.hash(into:)();
        Swift::Int v10 = Hasher._finalize()();
        double result = swift_bridgeObjectRelease();
        unint64_t v11 = v10 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 < v8) {
            goto LABEL_5;
          }
        }
        else if (v11 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v11)
        {
LABEL_11:
          uint64_t v12 = *(void *)(a2 + 48);
          char v13 = (_OWORD *)(v12 + 16 * v3);
          unint64_t v14 = (_OWORD *)(v12 + 16 * v6);
          if (v3 != v6 || v13 >= v14 + 1) {
            *char v13 = *v14;
          }
          uint64_t v15 = *(void *)(a2 + 56);
          uint64_t v16 = (_OWORD *)(v15 + 32 * v3);
          Swift::Int v17 = (_OWORD *)(v15 + 32 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v16 >= v17 + 2))
          {
            long long v9 = v17[1];
            *uint64_t v16 = *v17;
            v16[1] = v9;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v18 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v19 = *v18;
    uint64_t v20 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v18 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v20 = *v18;
    uint64_t v19 = (-1 << result) - 1;
  }
  *uint64_t v18 = v20 & v19;
  uint64_t v21 = *(void *)(a2 + 16);
  BOOL v22 = __OFSUB__(v21, 1);
  uint64_t v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v23;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1000B30AC(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    double result = _HashTable.previousHole(before:)();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        Hasher.init(_seed:)();
        swift_bridgeObjectRetain();
        String.hash(into:)();
        Swift::Int v9 = Hasher._finalize()();
        double result = swift_bridgeObjectRelease();
        unint64_t v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8) {
            goto LABEL_5;
          }
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          uint64_t v11 = *(void *)(a2 + 48);
          uint64_t v12 = (_OWORD *)(v11 + 16 * v3);
          char v13 = (_OWORD *)(v11 + 16 * v6);
          if (v3 != v6 || v12 >= v13 + 1) {
            *uint64_t v12 = *v13;
          }
          uint64_t v14 = *(void *)(a2 + 56);
          double result = v14 + 320 * v3;
          uint64_t v15 = (const void *)(v14 + 320 * v6);
          if (320 * v3 < (uint64_t)(320 * v6)
            || result >= (unint64_t)v15 + 320
            || (v16 = v3 == v6, int64_t v3 = v6, !v16))
          {
            double result = (unint64_t)memmove((void *)result, v15, 0x140uLL);
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    Swift::Int v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v18 = *v17;
    uint64_t v19 = (-1 << v3) - 1;
  }
  else
  {
    Swift::Int v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v19 = *v17;
    uint64_t v18 = (-1 << result) - 1;
  }
  *Swift::Int v17 = v19 & v18;
  uint64_t v20 = *(void *)(a2 + 16);
  BOOL v21 = __OFSUB__(v20, 1);
  uint64_t v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1000B329C(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    double result = _HashTable.previousHole(before:)();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        Hasher.init(_seed:)();
        swift_bridgeObjectRetain();
        String.hash(into:)();
        Swift::Int v9 = Hasher._finalize()();
        double result = swift_bridgeObjectRelease();
        unint64_t v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8) {
            goto LABEL_5;
          }
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          uint64_t v11 = *(void *)(a2 + 48);
          uint64_t v12 = (_OWORD *)(v11 + 16 * v3);
          char v13 = (_OWORD *)(v11 + 16 * v6);
          if (v3 != v6 || v12 >= v13 + 1) {
            *uint64_t v12 = *v13;
          }
          uint64_t v14 = *(void *)(a2 + 56);
          uint64_t v15 = (unsigned char *)(v14 + v3);
          BOOL v16 = (unsigned char *)(v14 + v6);
          if (v3 != v6 || (int64_t v3 = v6, v15 >= v16 + 1))
          {
            *uint64_t v15 = *v16;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    Swift::Int v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v18 = *v17;
    uint64_t v19 = (-1 << v3) - 1;
  }
  else
  {
    Swift::Int v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v19 = *v17;
    uint64_t v18 = (-1 << result) - 1;
  }
  *Swift::Int v17 = v19 & v18;
  uint64_t v20 = *(void *)(a2 + 16);
  BOOL v21 = __OFSUB__(v20, 1);
  uint64_t v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

void sub_1000B3474(unint64_t a1, uint64_t a2)
{
  int64_t v3 = a1;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (a1 + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t v8 = _HashTable.previousHole(before:)();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        Swift::Int v10 = *(void *)(a2 + 40);
        id v11 = *(id *)(*(void *)(a2 + 48) + 8 * v6);
        Swift::Int v12 = NSObject._rawHashValue(seed:)(v10);

        Swift::Int v13 = v12 & v7;
        if (v3 >= (uint64_t)v9)
        {
          if (v13 >= v9 && v3 >= v13)
          {
LABEL_16:
            uint64_t v16 = *(void *)(a2 + 48);
            Swift::Int v17 = (void *)(v16 + 8 * v3);
            uint64_t v18 = (void *)(v16 + 8 * v6);
            if (v3 != v6 || v17 >= v18 + 1) {
              *Swift::Int v17 = *v18;
            }
            uint64_t v19 = *(void *)(a2 + 56);
            uint64_t v20 = (void *)(v19 + 8 * v3);
            BOOL v21 = (void *)(v19 + 8 * v6);
            if (v3 != v6 || (int64_t v3 = v6, v20 >= v21 + 1))
            {
              *uint64_t v20 = *v21;
              int64_t v3 = v6;
            }
          }
        }
        else if (v13 >= v9 || v3 >= v13)
        {
          goto LABEL_16;
        }
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v22 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v23 = *v22;
    uint64_t v24 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v22 = (uint64_t *)(v4 + 8 * (a1 >> 6));
    uint64_t v24 = *v22;
    uint64_t v23 = (-1 << a1) - 1;
  }
  *uint64_t v22 = v24 & v23;
  uint64_t v25 = *(void *)(a2 + 16);
  BOOL v26 = __OFSUB__(v25, 1);
  uint64_t v27 = v25 - 1;
  if (v26)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v27;
    ++*(_DWORD *)(a2 + 36);
  }
}

unint64_t sub_1000B3628(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    double result = _HashTable.previousHole(before:)();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_100035E00(*(void *)(a2 + 48) + 40 * v6, (uint64_t)v28);
        Swift::Int v10 = AnyHashable._rawHashValue(seed:)(*(void *)(a2 + 40));
        double result = sub_10004C8A0((uint64_t)v28);
        Swift::Int v11 = v10 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 >= v8 && v3 >= v11)
          {
LABEL_16:
            uint64_t v14 = *(void *)(a2 + 48);
            unint64_t v15 = v14 + 40 * v3;
            uint64_t v16 = (long long *)(v14 + 40 * v6);
            if (v3 != v6 || v15 >= (unint64_t)v16 + 40)
            {
              long long v17 = *v16;
              long long v18 = v16[1];
              *(void *)(v15 + 32) = *((void *)v16 + 4);
              *(_OWORD *)unint64_t v15 = v17;
              *(_OWORD *)(v15 + 16) = v18;
            }
            uint64_t v19 = *(void *)(a2 + 56);
            uint64_t v20 = (_OWORD *)(v19 + 32 * v3);
            BOOL v21 = (_OWORD *)(v19 + 32 * v6);
            if (v3 != v6 || (int64_t v3 = v6, v20 >= v21 + 2))
            {
              long long v9 = v21[1];
              *uint64_t v20 = *v21;
              v20[1] = v9;
              int64_t v3 = v6;
            }
          }
        }
        else if (v11 >= v8 || v3 >= v11)
        {
          goto LABEL_16;
        }
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v22 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v23 = *v22;
    uint64_t v24 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v22 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v24 = *v22;
    uint64_t v23 = (-1 << result) - 1;
  }
  *uint64_t v22 = v24 & v23;
  uint64_t v25 = *(void *)(a2 + 16);
  BOOL v26 = __OFSUB__(v25, 1);
  uint64_t v27 = v25 - 1;
  if (v26)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v27;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1000B37F4(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    double result = _HashTable.previousHole(before:)();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        Hasher.init(_seed:)();
        swift_bridgeObjectRetain();
        String.hash(into:)();
        Swift::Int v9 = Hasher._finalize()();
        double result = swift_bridgeObjectRelease();
        unint64_t v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8) {
            goto LABEL_5;
          }
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          uint64_t v11 = *(void *)(a2 + 48);
          Swift::Int v12 = (_OWORD *)(v11 + 16 * v3);
          Swift::Int v13 = (_OWORD *)(v11 + 16 * v6);
          if (v3 != v6 || v12 >= v13 + 1) {
            *Swift::Int v12 = *v13;
          }
          uint64_t v14 = *(void *)(a2 + 56);
          unint64_t v15 = (_OWORD *)(v14 + 16 * v3);
          uint64_t v16 = (_OWORD *)(v14 + 16 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v15 >= v16 + 1))
          {
            *unint64_t v15 = *v16;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    long long v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v18 = *v17;
    uint64_t v19 = (-1 << v3) - 1;
  }
  else
  {
    long long v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v19 = *v17;
    uint64_t v18 = (-1 << result) - 1;
  }
  *long long v17 = v19 & v18;
  uint64_t v20 = *(void *)(a2 + 16);
  BOOL v21 = __OFSUB__(v20, 1);
  uint64_t v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1000B39CC(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    double result = _HashTable.previousHole(before:)();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        uint64_t v9 = *(void *)(a2 + 48);
        unint64_t v10 = (void *)(v9 + 8 * v6);
        double result = static Hasher._hash(seed:_:)();
        unint64_t v11 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 < v8 || v3 < (uint64_t)v11) {
            goto LABEL_6;
          }
        }
        else if (v11 < v8 && v3 < (uint64_t)v11)
        {
          goto LABEL_6;
        }
        uint64_t v14 = (void *)(v9 + 8 * v3);
        if (v3 != v6 || v14 >= v10 + 1) {
          void *v14 = *v10;
        }
        uint64_t v15 = *(void *)(a2 + 56);
        uint64_t v16 = *(void *)(*(void *)(type metadata accessor for PurchaseCandidate() - 8) + 72);
        int64_t v17 = v16 * v3;
        double result = v15 + v16 * v3;
        int64_t v18 = v16 * v6;
        unint64_t v19 = v15 + v16 * v6 + v16;
        if (v17 < v18 || result >= v19)
        {
          double result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          int64_t v3 = v6;
          if (v17 == v18) {
            goto LABEL_6;
          }
          double result = swift_arrayInitWithTakeBackToFront();
        }
        int64_t v3 = v6;
LABEL_6:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    BOOL v21 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v22 = *v21;
    uint64_t v23 = (-1 << v3) - 1;
  }
  else
  {
    BOOL v21 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v23 = *v21;
    uint64_t v22 = (-1 << result) - 1;
  }
  uint64_t *v21 = v23 & v22;
  uint64_t v24 = *(void *)(a2 + 16);
  BOOL v25 = __OFSUB__(v24, 1);
  uint64_t v26 = v24 - 1;
  if (v25)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v26;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unsigned __int8 *sub_1000B3B9C(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a2;
  int v4 = *result;
  if (v4 != 43)
  {
    if (v4 == 45)
    {
      if (a2 >= 1)
      {
        uint64_t v5 = a2 - 1;
        if (a2 != 1)
        {
          unsigned __int8 v6 = a3 + 48;
          unsigned __int8 v7 = a3 + 55;
          unsigned __int8 v8 = a3 + 87;
          if (a3 > 10)
          {
            unsigned __int8 v6 = 58;
          }
          else
          {
            unsigned __int8 v8 = 97;
            unsigned __int8 v7 = 65;
          }
          if (result)
          {
            uint64_t v9 = 0;
            for (uint64_t i = result + 1; ; ++i)
            {
              unsigned int v11 = *i;
              if (v11 < 0x30 || v11 >= v6)
              {
                if (v11 < 0x41 || v11 >= v7)
                {
                  if (v11 < 0x61 || v11 >= v8) {
                    return 0;
                  }
                  char v12 = -87;
                }
                else
                {
                  char v12 = -55;
                }
              }
              else
              {
                char v12 = -48;
              }
              uint64_t v13 = v9 * a3;
              if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63) {
                return 0;
              }
              uint64_t v9 = v13 - (v11 + v12);
              if (__OFSUB__(v13, (v11 + v12))) {
                return 0;
              }
              if (!--v5) {
                return (unsigned __int8 *)v9;
              }
            }
          }
          return 0;
        }
        return 0;
      }
      __break(1u);
      goto LABEL_65;
    }
    if (a2)
    {
      unsigned __int8 v22 = a3 + 48;
      unsigned __int8 v23 = a3 + 55;
      unsigned __int8 v24 = a3 + 87;
      if (a3 > 10)
      {
        unsigned __int8 v22 = 58;
      }
      else
      {
        unsigned __int8 v24 = 97;
        unsigned __int8 v23 = 65;
      }
      if (result)
      {
        uint64_t v25 = 0;
        do
        {
          unsigned int v26 = *result;
          if (v26 < 0x30 || v26 >= v22)
          {
            if (v26 < 0x41 || v26 >= v23)
            {
              if (v26 < 0x61 || v26 >= v24) {
                return 0;
              }
              char v27 = -87;
            }
            else
            {
              char v27 = -55;
            }
          }
          else
          {
            char v27 = -48;
          }
          uint64_t v28 = v25 * a3;
          if ((unsigned __int128)(v25 * (__int128)a3) >> 64 != (v25 * a3) >> 63) {
            return 0;
          }
          uint64_t v25 = v28 + (v26 + v27);
          if (__OFADD__(v28, (v26 + v27))) {
            return 0;
          }
          ++result;
          --v3;
        }
        while (v3);
        return (unsigned __int8 *)(v28 + (v26 + v27));
      }
      return 0;
    }
    return 0;
  }
  if (a2 < 1)
  {
LABEL_65:
    __break(1u);
    return result;
  }
  uint64_t v14 = a2 - 1;
  if (a2 == 1) {
    return 0;
  }
  unsigned __int8 v15 = a3 + 48;
  unsigned __int8 v16 = a3 + 55;
  unsigned __int8 v17 = a3 + 87;
  if (a3 > 10)
  {
    unsigned __int8 v15 = 58;
  }
  else
  {
    unsigned __int8 v17 = 97;
    unsigned __int8 v16 = 65;
  }
  if (!result) {
    return 0;
  }
  uint64_t v9 = 0;
  int64_t v18 = result + 1;
  do
  {
    unsigned int v19 = *v18;
    if (v19 < 0x30 || v19 >= v15)
    {
      if (v19 < 0x41 || v19 >= v16)
      {
        if (v19 < 0x61 || v19 >= v17) {
          return 0;
        }
        char v20 = -87;
      }
      else
      {
        char v20 = -55;
      }
    }
    else
    {
      char v20 = -48;
    }
    uint64_t v21 = v9 * a3;
    if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63) {
      return 0;
    }
    uint64_t v9 = v21 + (v19 + v20);
    if (__OFADD__(v21, (v19 + v20))) {
      return 0;
    }
    ++v18;
    --v14;
  }
  while (v14);
  return (unsigned __int8 *)v9;
}

unsigned __int8 *sub_1000B3E18(unsigned __int8 *result, uint64_t a2, int64_t a3)
{
  uint64_t v3 = a2;
  int v4 = *result;
  if (v4 != 43)
  {
    if (v4 == 45)
    {
      if (a2 >= 1)
      {
        uint64_t v5 = a2 - 1;
        if (a2 != 1)
        {
          unsigned __int8 v6 = a3 + 48;
          unsigned __int8 v7 = a3 + 55;
          unsigned __int8 v8 = a3 + 87;
          if (a3 > 10)
          {
            unsigned __int8 v6 = 58;
          }
          else
          {
            unsigned __int8 v8 = 97;
            unsigned __int8 v7 = 65;
          }
          if (result)
          {
            unint64_t v9 = 0;
            for (uint64_t i = result + 1; ; ++i)
            {
              unsigned int v11 = *i;
              if (v11 < 0x30 || v11 >= v6)
              {
                if (v11 < 0x41 || v11 >= v7)
                {
                  if (v11 < 0x61 || v11 >= v8) {
                    return 0;
                  }
                  char v12 = -87;
                }
                else
                {
                  char v12 = -55;
                }
              }
              else
              {
                char v12 = -48;
              }
              if (!is_mul_ok(v9, a3)) {
                return 0;
              }
              unint64_t v13 = v9 * a3;
              unsigned __int8 v14 = v11 + v12;
              BOOL v15 = v13 >= v14;
              unint64_t v9 = v13 - v14;
              if (!v15) {
                return 0;
              }
              if (!--v5) {
                return (unsigned __int8 *)v9;
              }
            }
          }
          return 0;
        }
        return 0;
      }
      __break(1u);
      goto LABEL_66;
    }
    if (a2)
    {
      unsigned __int8 v25 = a3 + 48;
      unsigned __int8 v26 = a3 + 55;
      unsigned __int8 v27 = a3 + 87;
      if (a3 > 10)
      {
        unsigned __int8 v25 = 58;
      }
      else
      {
        unsigned __int8 v27 = 97;
        unsigned __int8 v26 = 65;
      }
      if (result)
      {
        unint64_t v28 = 0;
        do
        {
          unsigned int v29 = *result;
          if (v29 < 0x30 || v29 >= v25)
          {
            if (v29 < 0x41 || v29 >= v26)
            {
              if (v29 < 0x61 || v29 >= v27) {
                return 0;
              }
              char v30 = -87;
            }
            else
            {
              char v30 = -55;
            }
          }
          else
          {
            char v30 = -48;
          }
          if (!is_mul_ok(v28, a3)) {
            return 0;
          }
          unint64_t v31 = v28 * a3;
          unsigned __int8 v32 = v29 + v30;
          BOOL v15 = __CFADD__(v31, v32);
          unint64_t v28 = v31 + v32;
          if (v15) {
            return 0;
          }
          ++result;
          --v3;
        }
        while (v3);
        return (unsigned __int8 *)v28;
      }
      return 0;
    }
    return 0;
  }
  if (a2 < 1)
  {
LABEL_66:
    __break(1u);
    return result;
  }
  uint64_t v16 = a2 - 1;
  if (a2 == 1) {
    return 0;
  }
  unsigned __int8 v17 = a3 + 48;
  unsigned __int8 v18 = a3 + 55;
  unsigned __int8 v19 = a3 + 87;
  if (a3 > 10)
  {
    unsigned __int8 v17 = 58;
  }
  else
  {
    unsigned __int8 v19 = 97;
    unsigned __int8 v18 = 65;
  }
  if (!result) {
    return 0;
  }
  unint64_t v9 = 0;
  char v20 = result + 1;
  do
  {
    unsigned int v21 = *v20;
    if (v21 < 0x30 || v21 >= v17)
    {
      if (v21 < 0x41 || v21 >= v18)
      {
        if (v21 < 0x61 || v21 >= v19) {
          return 0;
        }
        char v22 = -87;
      }
      else
      {
        char v22 = -55;
      }
    }
    else
    {
      char v22 = -48;
    }
    if (!is_mul_ok(v9, a3)) {
      return 0;
    }
    unint64_t v23 = v9 * a3;
    unsigned __int8 v24 = v21 + v22;
    BOOL v15 = __CFADD__(v23, v24);
    unint64_t v9 = v23 + v24;
    if (v15) {
      return 0;
    }
    ++v20;
    --v16;
  }
  while (v16);
  return (unsigned __int8 *)v9;
}

uint64_t sub_1000B4094()
{
  unint64_t v0 = String.subscript.getter();
  uint64_t v4 = sub_1000B4114(v0, v1, v2, v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_1000B4114(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  if ((a4 & 0x1000000000000000) != 0)
  {
    uint64_t v9 = sub_1000B426C(a1, a2, a3, a4);
    if (!v9
      || (uint64_t v10 = v9,
          unsigned int v11 = sub_1000F7730(v9, 0),
          unint64_t v12 = sub_1000B436C((unint64_t)v14, (uint64_t)(v11 + 4), v10, a1, a2, a3, a4),
          swift_bridgeObjectRetain(),
          swift_bridgeObjectRelease(),
          v12 == v10))
    {
      uint64_t v13 = static String._uncheckedFromUTF8(_:)();
      swift_release();
      return v13;
    }
    __break(1u);
  }
  else
  {
    if ((a4 & 0x2000000000000000) != 0)
    {
      v14[0] = a3;
      v14[1] = a4 & 0xFFFFFFFFFFFFFFLL;
      return static String._uncheckedFromUTF8(_:)();
    }
    if ((a3 & 0x1000000000000000) != 0) {
      goto LABEL_4;
    }
  }
  _StringObject.sharedUTF8.getter();
LABEL_4:
  return static String._uncheckedFromUTF8(_:)();
}

uint64_t sub_1000B426C(uint64_t result, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v7 = result;
  uint64_t v8 = (a3 >> 59) & 1;
  if ((a4 & 0x1000000000000000) == 0) {
    LOBYTE(v8) = 1;
  }
  uint64_t v9 = 4 << v8;
  if ((result & 0xC) == 4 << v8)
  {
    double result = sub_1000F7798(result, a3, a4);
    unint64_t v7 = result;
  }
  if ((a2 & 0xC) == v9)
  {
    double result = sub_1000F7798(a2, a3, a4);
    a2 = result;
    if ((a4 & 0x1000000000000000) == 0) {
      return (a2 >> 16) - (v7 >> 16);
    }
  }
  else if ((a4 & 0x1000000000000000) == 0)
  {
    return (a2 >> 16) - (v7 >> 16);
  }
  unint64_t v10 = HIBYTE(a4) & 0xF;
  if ((a4 & 0x2000000000000000) == 0) {
    unint64_t v10 = a3 & 0xFFFFFFFFFFFFLL;
  }
  if (v10 < v7 >> 16)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v10 < a2 >> 16)
  {
LABEL_17:
    __break(1u);
    return result;
  }
  return String.UTF8View._foreignDistance(from:to:)();
}

unint64_t sub_1000B436C(unint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6, unint64_t a7)
{
  uint64_t v9 = (void *)result;
  if (!a2) {
    goto LABEL_5;
  }
  if (!a3)
  {
    unint64_t v12 = a4;
    uint64_t v11 = 0;
    goto LABEL_33;
  }
  if (a3 < 0) {
    goto LABEL_36;
  }
  unint64_t v10 = a5 >> 14;
  unint64_t v27 = a4 >> 14;
  if (a4 >> 14 == a5 >> 14)
  {
LABEL_5:
    uint64_t v11 = 0;
    unint64_t v12 = a4;
LABEL_33:
    *uint64_t v9 = a4;
    v9[1] = a5;
    _OWORD v9[2] = a6;
    v9[3] = a7;
    v9[4] = v12;
    return v11;
  }
  uint64_t v11 = 0;
  uint64_t v14 = (a6 >> 59) & 1;
  if ((a7 & 0x1000000000000000) == 0) {
    LOBYTE(v14) = 1;
  }
  uint64_t v15 = 4 << v14;
  uint64_t v21 = (a7 & 0xFFFFFFFFFFFFFFFLL) + 32;
  uint64_t v22 = a7 & 0xFFFFFFFFFFFFFFLL;
  uint64_t v16 = HIBYTE(a7) & 0xF;
  if ((a7 & 0x2000000000000000) == 0) {
    uint64_t v16 = a6 & 0xFFFFFFFFFFFFLL;
  }
  unint64_t v23 = v16;
  uint64_t v26 = a3 - 1;
  unint64_t v12 = a4;
  while (1)
  {
    unint64_t v17 = v12 & 0xC;
    double result = v12;
    if (v17 == v15) {
      double result = sub_1000F7798(v12, a6, a7);
    }
    if (result >> 14 < v27 || result >> 14 >= v10) {
      break;
    }
    if ((a7 & 0x1000000000000000) != 0)
    {
      double result = String.UTF8View._foreignSubscript(position:)();
      char v19 = result;
      if (v17 != v15) {
        goto LABEL_23;
      }
    }
    else
    {
      unint64_t v18 = result >> 16;
      if ((a7 & 0x2000000000000000) != 0)
      {
        v28[0] = a6;
        v28[1] = v22;
        char v19 = *((unsigned char *)v28 + v18);
        if (v17 != v15) {
          goto LABEL_23;
        }
      }
      else
      {
        double result = v21;
        if ((a6 & 0x1000000000000000) == 0) {
          double result = _StringObject.sharedUTF8.getter();
        }
        char v19 = *(unsigned char *)(result + v18);
        if (v17 != v15)
        {
LABEL_23:
          if ((a7 & 0x1000000000000000) == 0) {
            goto LABEL_24;
          }
          goto LABEL_27;
        }
      }
    }
    double result = sub_1000F7798(v12, a6, a7);
    unint64_t v12 = result;
    if ((a7 & 0x1000000000000000) == 0)
    {
LABEL_24:
      unint64_t v12 = (v12 & 0xFFFFFFFFFFFF0000) + 65540;
      goto LABEL_29;
    }
LABEL_27:
    if (v23 <= v12 >> 16) {
      goto LABEL_35;
    }
    unint64_t v12 = String.UTF8View._foreignIndex(after:)();
LABEL_29:
    *(unsigned char *)(a2 + v11) = v19;
    if (v26 == v11)
    {
      uint64_t v11 = a3;
      goto LABEL_33;
    }
    ++v11;
    if (v10 == v12 >> 14) {
      goto LABEL_33;
    }
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_1000B4580(void *a1, char a2)
{
  uint64_t v4 = type metadata accessor for Logger();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  unint64_t v7 = (char *)v142 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v10 = v9;
  if (v8 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v10 == v11)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_17;
  }
  char v13 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v13)
  {
LABEL_17:

    return 1;
  }
  uint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v16 = v15;
  if (v14 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v16 == v17) {
    goto LABEL_13;
  }
  char v19 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v19)
  {
LABEL_14:

    return 2;
  }
  uint64_t v20 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v22 = v21;
  if (v20 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v22 == v23) {
    goto LABEL_13;
  }
  char v25 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v25) {
    goto LABEL_14;
  }
  uint64_t v26 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v28 = v27;
  if (v26 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v28 == v29)
  {
LABEL_13:
    swift_bridgeObjectRelease_n();
    goto LABEL_14;
  }
  char v30 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v30) {
    goto LABEL_14;
  }
  uint64_t v31 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v33 = v32;
  if (v31 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v33 == v34)
  {
    swift_bridgeObjectRelease_n();
LABEL_27:

    return 7;
  }
  char v35 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v35) {
    goto LABEL_27;
  }
  uint64_t v36 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v38 = v37;
  if (v36 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v38 == v39)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_32;
  }
  char v40 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v40)
  {
LABEL_32:

    if (a2) {
      return 14;
    }
    else {
      return 13;
    }
  }
  uint64_t v41 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v43 = v42;
  if (v41 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v43 == v44)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_39;
  }
  char v45 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v45)
  {
LABEL_39:

    if (a2) {
      return 18;
    }
    else {
      return 17;
    }
  }
  uint64_t v46 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v48 = v47;
  if (v46 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v48 == v49) {
    goto LABEL_44;
  }
  char v50 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v50) {
    goto LABEL_46;
  }
  uint64_t v51 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v53 = v52;
  if (v51 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v53 == v54)
  {
LABEL_44:
    swift_bridgeObjectRelease_n();
    goto LABEL_46;
  }
  char v55 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v55)
  {
LABEL_46:

    if (a2) {
      return 16;
    }
    else {
      return 15;
    }
  }
  uint64_t v56 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v58 = v57;
  if (v56 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v58 == v59)
  {
    swift_bridgeObjectRelease_n();
LABEL_56:

    return 9;
  }
  char v60 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v60) {
    goto LABEL_56;
  }
  uint64_t v61 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v63 = v62;
  if (v61 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v63 == v64) {
    goto LABEL_59;
  }
  char v65 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v65) {
    goto LABEL_61;
  }
  uint64_t v66 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v68 = v67;
  if (v66 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v68 == v69)
  {
LABEL_59:
    swift_bridgeObjectRelease_n();
LABEL_61:

    return 3;
  }
  char v70 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v70) {
    goto LABEL_61;
  }
  uint64_t v71 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v73 = v72;
  if (v71 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v73 == v74)
  {
    swift_bridgeObjectRelease_n();
LABEL_69:

    return 19;
  }
  char v75 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v75) {
    goto LABEL_69;
  }
  uint64_t v76 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v78 = v77;
  if (v76 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v78 == v79)
  {
    swift_bridgeObjectRelease_n();
LABEL_74:

    return 21;
  }
  char v80 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v80) {
    goto LABEL_74;
  }
  uint64_t v81 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v83 = v82;
  if (v81 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v83 == v84)
  {
    swift_bridgeObjectRelease_n();
LABEL_79:

    return 0;
  }
  char v85 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v85) {
    goto LABEL_79;
  }
  uint64_t v86 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v88 = v87;
  if (v86 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v88 == v89) {
    goto LABEL_82;
  }
  char v90 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v90) {
    goto LABEL_87;
  }
  uint64_t v91 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v93 = v92;
  if (v91 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v93 == v94)
  {
LABEL_82:
    swift_bridgeObjectRelease_n();
LABEL_87:

    return 10;
  }
  char v95 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v95) {
    goto LABEL_87;
  }
  uint64_t v96 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v98 = v97;
  if (v96 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v98 == v99)
  {
    swift_bridgeObjectRelease_n();
LABEL_92:

    return 12;
  }
  char v100 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v100) {
    goto LABEL_92;
  }
  uint64_t v101 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v103 = v102;
  if (v101 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v103 == v104) {
    goto LABEL_95;
  }
  char v105 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v105) {
    goto LABEL_100;
  }
  uint64_t v106 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v108 = v107;
  if (v106 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v108 == v109) {
    goto LABEL_95;
  }
  char v110 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v110) {
    goto LABEL_100;
  }
  uint64_t v111 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v113 = v112;
  if (v111 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v113 == v114) {
    goto LABEL_95;
  }
  char v115 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v115) {
    goto LABEL_100;
  }
  uint64_t v116 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v118 = v117;
  if (v116 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v118 == v119) {
    goto LABEL_95;
  }
  char v120 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v120) {
    goto LABEL_100;
  }
  uint64_t v121 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v123 = v122;
  if (v121 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v123 == v124) {
    goto LABEL_95;
  }
  char v125 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v125) {
    goto LABEL_100;
  }
  uint64_t v126 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v128 = v127;
  if (v126 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v128 == v129)
  {
LABEL_95:
    swift_bridgeObjectRelease_n();
LABEL_100:

    return 5;
  }
  char v130 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v130) {
    goto LABEL_100;
  }
  uint64_t v131 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v133 = v132;
  if (v131 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v133 == v134)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v135 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v135 & 1) == 0)
    {
      static Logger.metrics.getter();
      id v136 = a1;
      v137 = Logger.logObject.getter();
      os_log_type_t v138 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v137, v138))
      {
        v139 = (uint8_t *)swift_slowAlloc();
        uint64_t v143 = swift_slowAlloc();
        *(_DWORD *)v139 = 136446210;
        v142[1] = v139 + 4;
        uint64_t v140 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        v142[2] = sub_1000F7290(v140, v141, &v143);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v137, v138, "No install context found for %{public}s", v139, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
      }
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      return 2;
    }
  }

  return 20;
}

uint64_t sub_1000B52F4()
{
  unint64_t v0 = _findStringSwitchCaseWithCache(cases:string:cache:)();
  swift_bridgeObjectRelease();
  if (v0 >= 0x16) {
    return 22;
  }
  else {
    return v0;
  }
}

uint64_t sub_1000B5348(void *a1, char a2)
{
  if (a2)
  {
    if (sub_10026E91C(a1, @"package_type") == (id)1)
    {
      id v3 = sub_10026E95C(a1, @"delta_algorithm");
      if (v3)
      {
        uint64_t v4 = v3;
        uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v7 = v6;

        if (v5 == 0x666669647862 && v7 == 0xE600000000000000)
        {
          swift_bridgeObjectRelease();

          return 2;
        }
        else
        {
          char v9 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();

          if (v9) {
            return 2;
          }
          else {
            return 1;
          }
        }
      }
      else
      {

        return 1;
      }
    }
    else
    {

      return 3;
    }
  }
  else
  {

    return 0;
  }
}

unint64_t sub_1000B545C(Swift::String string)
{
  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_100510948, v2);
  swift_bridgeObjectRelease();
  if (v3 >= 4) {
    return 4;
  }
  else {
    return v3;
  }
}

unint64_t sub_1000B54A8()
{
  unint64_t result = qword_1005A5AF8;
  if (!qword_1005A5AF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1005A5AF8);
  }
  return result;
}

unint64_t sub_1000B54FC()
{
  unint64_t result = qword_1005A5B00;
  if (!qword_1005A5B00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1005A5B00);
  }
  return result;
}

unint64_t sub_1000B5550()
{
  unint64_t result = qword_1005A5B10;
  if (!qword_1005A5B10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1005A5B10);
  }
  return result;
}

unint64_t sub_1000B55A4()
{
  unint64_t result = qword_1005A5B18;
  if (!qword_1005A5B18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1005A5B18);
  }
  return result;
}

unint64_t sub_1000B55F8()
{
  unint64_t result = qword_1005A5B20;
  if (!qword_1005A5B20)
  {
    sub_10002E5A8(&qword_1005A4EE8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1005A5B20);
  }
  return result;
}

unint64_t sub_1000B5664()
{
  unint64_t result = qword_1005A5B28;
  if (!qword_1005A5B28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1005A5B28);
  }
  return result;
}

unint64_t sub_1000B56B8(Swift::String string)
{
  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1005109C8, v2);
  swift_bridgeObjectRelease();
  if (v3 >= 0xA) {
    return 10;
  }
  else {
    return v3;
  }
}

uint64_t sub_1000B5704()
{
  NSString v0 = String._bridgeToObjectiveC()();
  id v1 = [objc_allocWithZone((Class)AMSMetricsIdentifierStore) init];
  NSString v2 = String._bridgeToObjectiveC()();
  [v1 setDomain:v2];

  self;
  id v3 = sub_10030B11C();
  double v4 = sub_10030D1FC(v3, v0, 0, 86400.0);

  [v1 setResetInterval:v4];
  id v5 = objc_allocWithZone((Class)AMSProcessInfo);
  NSString v6 = String._bridgeToObjectiveC()();
  id v7 = [v5 initWithBundleIdentifier:v6];

  [v1 setClientInfo:v7];
  sub_10001644C(&qword_1005A43D0);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_100488A80;
  NSString v9 = String._bridgeToObjectiveC()();
  id v10 = [self keyWithName:v9 crossDeviceSync:0];

  *(void *)(v8 + 32) = v10;
  v18[0] = v8;
  specialized Array._endMutation()();
  sub_100018D68(0, (unint64_t *)&qword_1005A5A08);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v12 = [v1 generateEventFieldsForKeys:isa];

  uint64_t v13 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)&long long v19 = 0x6449746E65696C63;
  *((void *)&v19 + 1) = 0xE800000000000000;
  AnyHashable.init<A>(_:)();
  if (*(void *)(v13 + 16) && (unint64_t v14 = sub_100049A08((uint64_t)v18), (v15 & 1) != 0))
  {
    sub_100031C38(*(void *)(v13 + 56) + 32 * v14, (uint64_t)&v19);
  }
  else
  {
    long long v19 = 0u;
    long long v20 = 0u;
  }

  swift_bridgeObjectRelease();
  sub_10004C8A0((uint64_t)v18);
  if (*((void *)&v20 + 1))
  {
    if (swift_dynamicCast()) {
      return v17;
    }
    else {
      return 0;
    }
  }
  else
  {
    sub_100016714((uint64_t)&v19, &qword_1005A5660);
    return 0;
  }
}

unint64_t sub_1000B5A44(void *a1)
{
  id v2 = sub_10026E95C(a1, @"log_code");
  if (!v2) {
    return sub_1000429D8((uint64_t)_swiftEmptyArrayStorage);
  }
  id v3 = v2;
  sub_10001644C(&qword_1005A5B30);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100489530;
  *(void *)(inited + 32) = @"UPP";
  *(void *)(inited + 40) = @"MNF";
  id v5 = @"UPP";
  NSString v6 = @"MNF";
  char v7 = sub_1000E4E6C((uint64_t)v3, inited);
  swift_setDeallocating();
  type metadata accessor for AppInstallLogCode(0);
  swift_arrayDestroy();
  if ((v7 & 1) == 0)
  {
    id v8 = sub_100424E64(a1);
    if (v8)
    {
      NSString v9 = v8;
      id v10 = [v8 longLongValue];

      if (v10)
      {
        sub_10001644C(&qword_1005A5858);
        uint64_t v11 = swift_allocObject();
        *(_OWORD *)(v11 + 16) = xmmword_100488070;
        *(void *)(v11 + 32) = v10;
        uint64_t v33 = (void *)sub_10001644C(&qword_1005A5688);
        *(void *)&long long v32 = v11;
        sub_10000C948(&v32, &v34);
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        sub_1000D2278(&v34, 0x7364496D616461, 0xE700000000000000, isUniquelyReferenced_nonNull_native);
        swift_bridgeObjectRelease();
        id v13 = v3;
        char v14 = sub_100424BE4(a1);
        char v15 = sub_1000B4580(v13, v14);
        uint64_t v16 = sub_1000B0DAC(v15);
        uint64_t v33 = &type metadata for String;
        *(void *)&long long v32 = v16;
        *((void *)&v32 + 1) = v17;
        sub_10000C948(&v32, &v34);
        char v18 = swift_isUniquelyReferenced_nonNull_native();
        *(void *)&v31[0] = _swiftEmptyDictionarySingleton;
        sub_1000D2278(&v34, 0x436C6C6174736E69, 0xEE00747865746E6FLL, v18);
        uint64_t v36 = _swiftEmptyDictionarySingleton;
        swift_bridgeObjectRelease();
        id v19 = sub_10026EAC4(a1, @"metrics_fields");
        if (v19)
        {
          long long v20 = v19;
          uint64_t v21 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

          *(void *)&long long v34 = 0x746E6F4365676170;
          *((void *)&v34 + 1) = 0xEB00000000747865;
          AnyHashable.init<A>(_:)();
          if (*(void *)(v21 + 16) && (unint64_t v22 = sub_100049A08((uint64_t)&v32), (v23 & 1) != 0))
          {
            sub_100031C38(*(void *)(v21 + 56) + 32 * v22, (uint64_t)&v34);
          }
          else
          {
            long long v34 = 0u;
            long long v35 = 0u;
          }
          swift_bridgeObjectRelease();
          sub_10004C8A0((uint64_t)&v32);
          if (!*((void *)&v35 + 1))
          {
            sub_100016714((uint64_t)&v34, &qword_1005A5660);
            sub_1000B29CC(0x746E6F4365676170, 0xEB00000000747865, v31);
            sub_100016714((uint64_t)v31, &qword_1005A5660);
            uint64_t v27 = sub_1000B5704();
            if (v28) {
              goto LABEL_17;
            }
            goto LABEL_19;
          }
          sub_10000C948(&v34, v31);
          char v26 = swift_isUniquelyReferenced_nonNull_native();
          sub_1000D2278(v31, 0x746E6F4365676170, 0xEB00000000747865, v26);
          uint64_t v36 = _swiftEmptyDictionarySingleton;
          swift_bridgeObjectRelease();
        }
        uint64_t v27 = sub_1000B5704();
        if (v28)
        {
LABEL_17:
          uint64_t v33 = &type metadata for String;
          *(void *)&long long v32 = v27;
          *((void *)&v32 + 1) = v28;
          sub_10000C948(&v32, &v34);
          uint64_t v29 = v36;
          char v30 = swift_isUniquelyReferenced_nonNull_native();
          *(void *)&v31[0] = v29;
          sub_1000D2278(&v34, 0x6449746E65696C63, 0xE800000000000000, v30);
          unint64_t v24 = *(void *)&v31[0];

          swift_bridgeObjectRelease();
          return v24;
        }
LABEL_19:

        return (unint64_t)v36;
      }
    }
    swift_bridgeObjectRelease();
  }
  unint64_t v24 = sub_1000429D8((uint64_t)_swiftEmptyArrayStorage);

  return v24;
}

unint64_t sub_1000B5E90(void *a1)
{
  sub_10001644C(&qword_1005A5B30);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100489530;
  *(void *)(inited + 32) = @"UPP";
  *(void *)(inited + 40) = @"MNF";
  id v3 = @"UPP";
  double v4 = @"MNF";
  id v5 = [a1 logCode];
  char v6 = sub_1000E4E6C((uint64_t)v5, inited);

  swift_setDeallocating();
  type metadata accessor for AppInstallLogCode(0);
  swift_arrayDestroy();
  if (v6) {
    return sub_1000429D8((uint64_t)_swiftEmptyArrayStorage);
  }
  id v8 = [a1 buyParams];
  NSString v9 = String._bridgeToObjectiveC()();
  id v10 = [v8 objectForKeyedSubscript:v9];

  if (v10)
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v31, 0, sizeof(v31));
  }
  sub_100030134((uint64_t)v31, (uint64_t)&v32, &qword_1005A5660);
  if (v33)
  {
    if (swift_dynamicCast())
    {
      uint64_t v33 = &type metadata for String;
      long long v32 = v29;
      sub_10000C948(&v32, v31);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *(void *)&long long v29 = _swiftEmptyDictionarySingleton;
      sub_1000D2278(v31, 0x746E6F4365676170, 0xEB00000000747865, isUniquelyReferenced_nonNull_native);
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    sub_100016714((uint64_t)&v32, &qword_1005A5660);
  }
  id v12 = objc_msgSend(a1, "itemID", (void)v29);
  id v13 = [v12 longLongValue];

  if (v13)
  {
    sub_10001644C(&qword_1005A4F70);
    uint64_t v14 = swift_allocObject();
    *(_OWORD *)(v14 + 16) = xmmword_100488070;
    id v15 = [a1 itemID];
    id v16 = [v15 stringValue];

    uint64_t v17 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v19 = v18;

    *(void *)(v14 + 32) = v17;
    *(void *)(v14 + 40) = v19;
    uint64_t v33 = (void *)sub_10001644C(&qword_1005A4EE8);
    *(void *)&long long v32 = v14;
    sub_10000C948(&v32, v31);
    char v20 = swift_isUniquelyReferenced_nonNull_native();
    char v30 = _swiftEmptyDictionarySingleton;
    sub_1000D2278(v31, 0x7364496D616461, 0xE700000000000000, v20);
    swift_bridgeObjectRelease();
  }
  char v21 = sub_1000B4580(objc_msgSend(a1, "logCode", v30), objc_msgSend(a1, "updateType") != 0);
  uint64_t v22 = sub_1000B0DAC(v21);
  uint64_t v33 = &type metadata for String;
  *(void *)&long long v32 = v22;
  *((void *)&v32 + 1) = v23;
  sub_10000C948(&v32, v31);
  char v24 = swift_isUniquelyReferenced_nonNull_native();
  sub_1000D2278(v31, 0x436C6C6174736E69, 0xEE00747865746E6FLL, v24);
  char v7 = _swiftEmptyDictionarySingleton;
  swift_bridgeObjectRelease();
  uint64_t v25 = sub_1000B5704();
  if (v26)
  {
    uint64_t v33 = &type metadata for String;
    *(void *)&long long v32 = v25;
    *((void *)&v32 + 1) = v26;
    sub_10000C948(&v32, v31);
    char v27 = swift_isUniquelyReferenced_nonNull_native();
    sub_1000D2278(v31, 0x6449746E65696C63, 0xE800000000000000, v27);
    swift_bridgeObjectRelease();
  }
  return (unint64_t)v7;
}

unint64_t sub_1000B62E0(unint64_t result)
{
  unint64_t v1 = result;
  if (result >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
    unint64_t result = swift_bridgeObjectRelease();
    if (v2)
    {
LABEL_3:
      if (v2 < 1)
      {
        __break(1u);
      }
      else
      {
        unint64_t v3 = v1 & 0xC000000000000001;
        swift_bridgeObjectRetain();
        uint64_t v4 = 0;
        id v5 = (char *)_swiftEmptyArrayStorage;
        do
        {
          if (v3) {
            id v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            id v7 = *(id *)(v1 + 8 * v4 + 32);
          }
          id v8 = v7;
          id v9 = sub_100424E64(v7);
          if (v9)
          {
            id v10 = v9;
            if ([v9 longLongValue])
            {
              id v11 = [v10 stringValue];
              uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
              uint64_t v14 = v13;

              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                id v5 = sub_1000E7C44(0, *((void *)v5 + 2) + 1, 1, v5);
              }
              unint64_t v16 = *((void *)v5 + 2);
              unint64_t v15 = *((void *)v5 + 3);
              if (v16 >= v15 >> 1) {
                id v5 = sub_1000E7C44((char *)(v15 > 1), v16 + 1, 1, v5);
              }
              *((void *)v5 + 2) = v16 + 1;
              char v6 = &v5[16 * v16];
              *((void *)v6 + 4) = v12;
              *((void *)v6 + 5) = v14;
              unint64_t v3 = v1 & 0xC000000000000001;
            }
          }
          ++v4;
        }
        while (v2 != v4);
        swift_bridgeObjectRelease();
        if (*((void *)v5 + 2))
        {
          uint64_t v28 = (void *)sub_10001644C(&qword_1005A4EE8);
          *(void *)&long long v27 = v5;
          sub_10000C948(&v27, v26);
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          sub_1000D2278(v26, 0x7364496D616461, 0xE700000000000000, isUniquelyReferenced_nonNull_native);
          unint64_t result = swift_bridgeObjectRelease();
          if (v3)
          {
LABEL_19:
            swift_bridgeObjectRetain();
            id v18 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
            swift_bridgeObjectRelease();
LABEL_23:
            id v19 = sub_10026E95C(v18, @"log_code");

            if (v19)
            {
              static String._unconditionallyBridgeFromObjectiveC(_:)();

              char v20 = String._bridgeToObjectiveC()();
              swift_bridgeObjectRelease();
            }
            else
            {
              sub_100018D68(0, &qword_1005A4168);
              char v20 = NSString.init(stringLiteral:)();
            }
            static String._unconditionallyBridgeFromObjectiveC(_:)();
            NSString v21 = String._bridgeToObjectiveC()();
            swift_bridgeObjectRelease();
            char v22 = sub_1000B4580(v21, 0);
            uint64_t v23 = sub_1000B0DAC(v22);
            uint64_t v28 = &type metadata for String;
            *(void *)&long long v27 = v23;
            *((void *)&v27 + 1) = v24;
            sub_10000C948(&v27, v26);
            char v25 = swift_isUniquelyReferenced_nonNull_native();
            sub_1000D2278(v26, 0x436C6C6174736E69, 0xEE00747865746E6FLL, v25);

            swift_bridgeObjectRelease();
            return (unint64_t)_swiftEmptyDictionarySingleton;
          }
        }
        else
        {
          unint64_t result = swift_bridgeObjectRelease();
          if (v3) {
            goto LABEL_19;
          }
        }
        if (*(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          id v18 = *(id *)(v1 + 32);
          goto LABEL_23;
        }
      }
      __break(1u);
      return result;
    }
  }
  else
  {
    uint64_t v2 = *(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v2) {
      goto LABEL_3;
    }
  }
  return sub_1000429D8((uint64_t)_swiftEmptyArrayStorage);
}

uint64_t sub_1000B66B0(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = type metadata accessor for Logger();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  id v7 = (char *)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  id v10 = (char *)&v46 - v9;
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v46 - v12;
  self;
  id v14 = sub_10030B11C();
  id v15 = sub_10030C018(v14, @"hideableSystemApps");

  id v49 = 0;
  id v16 = [v15 valueWithError:&v49];

  id v17 = v49;
  if (!v16)
  {
    id v30 = v49;
    uint64_t v31 = _convertNSErrorToError(_:)();

    swift_willThrow();
    static Logger.metrics.getter();
    swift_errorRetain();
    swift_errorRetain();
    long long v32 = Logger.logObject.getter();
    os_log_type_t v33 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v32, v33))
    {
      uint64_t v47 = v4;
      long long v34 = (uint8_t *)swift_slowAlloc();
      id v49 = (id)swift_slowAlloc();
      *(_DWORD *)long long v34 = 136446210;
      uint64_t v48 = v31;
      swift_errorRetain();
      sub_10001644C(&qword_1005A4E40);
      uint64_t v35 = String.init<A>(describing:)();
      uint64_t v48 = sub_1000F7290(v35, v36, (uint64_t *)&v49);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v32, v33, "Failed to fetch system apps from the bag: %{public}s", v34, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v47);
      return 0;
    }
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();

    char v40 = *(void (**)(char *, uint64_t))(v5 + 8);
    uint64_t v41 = v7;
LABEL_27:
    v40(v41, v4);
    return 0;
  }
  id v49 = 0;
  id v18 = v17;
  sub_10001644C(&qword_1005A3960);
  static Array._conditionallyBridgeFromObjectiveC(_:result:)();

  id v19 = v49;
  if (!v49)
  {
    static Logger.metrics.getter();
    uint64_t v37 = Logger.logObject.getter();
    os_log_type_t v38 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v37, v38))
    {
      uint64_t v39 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v39 = 0;
      _os_log_impl((void *)&_mh_execute_header, v37, v38, "System apps from the bag aren't in the expected format", v39, 2u);
      swift_slowDealloc();
    }

    char v40 = *(void (**)(char *, uint64_t))(v5 + 8);
    uint64_t v41 = v10;
    goto LABEL_27;
  }
  uint64_t v20 = *((void *)v49 + 2);
  if (!v20)
  {
LABEL_24:
    swift_bridgeObjectRelease();
    static Logger.metrics.getter();
    swift_bridgeObjectRetain_n();
    uint64_t v42 = Logger.logObject.getter();
    os_log_type_t v43 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v42, v43))
    {
      uint64_t v44 = (uint8_t *)swift_slowAlloc();
      id v49 = (id)swift_slowAlloc();
      uint64_t v47 = v4;
      *(_DWORD *)uint64_t v44 = 136446210;
      swift_bridgeObjectRetain();
      uint64_t v48 = sub_1000F7290(a1, a2, (uint64_t *)&v49);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v42, v43, "No system app found for %{public}s", v44, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v5 + 8))(v13, v47);
      return 0;
    }

    swift_bridgeObjectRelease_n();
    char v40 = *(void (**)(char *, uint64_t))(v5 + 8);
    uint64_t v41 = v13;
    goto LABEL_27;
  }
  swift_bridgeObjectRetain();
  uint64_t v21 = 0;
  while (1)
  {
    uint64_t v22 = v19[v21 + 4];
    if (!*(void *)(v22 + 16)) {
      goto LABEL_6;
    }
    swift_bridgeObjectRetain();
    unint64_t v23 = sub_100049A4C(0x692D656C646E7562, 0xE900000000000064);
    if (v24)
    {
      char v25 = (void *)(*(void *)(v22 + 56) + 16 * v23);
      BOOL v26 = *v25 == a1 && v25[1] == a2;
      if (v26 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
        break;
      }
    }
    swift_bridgeObjectRelease();
LABEL_6:
    if (v20 == ++v21)
    {
      swift_bridgeObjectRelease();
      goto LABEL_24;
    }
  }
  swift_bridgeObjectRelease_n();
  if (*(void *)(v22 + 16))
  {
    unint64_t v27 = sub_100049A4C(25705, 0xE200000000000000);
    if (v28)
    {
      uint64_t v29 = *(void *)(*(void *)(v22 + 56) + 16 * v27);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      return v29;
    }
  }
  swift_bridgeObjectRelease();
  return 0;
}

id sub_1000B6CEC(void *a1, void *a2)
{
  uint64_t v5 = type metadata accessor for Logger();
  uint64_t v199 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  v193 = (char *)&v184 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v197 = (char *)&v184 - v8;
  __chkstk_darwin(v9);
  v195 = (char *)&v184 - v10;
  uint64_t v11 = type metadata accessor for Date();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  id v14 = (char *)&v184 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v196 = (char *)&v184 - v16;
  __chkstk_darwin(v17);
  v189 = (char *)&v184 - v18;
  uint64_t v19 = sub_10001644C((uint64_t *)&unk_1005A4E20);
  __chkstk_darwin(v19 - 8);
  uint64_t v192 = (uint64_t)&v184 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v194 = (char *)&v184 - v22;
  __chkstk_darwin(v23);
  v198 = (char *)&v184 - v24;
  __chkstk_darwin(v25);
  v190 = (char *)&v184 - v26;
  __chkstk_darwin(v27);
  v191 = (char *)&v184 - v28;
  uint64_t v29 = &v2[OBJC_IVAR____TtC9appstored20AppInstallationEvent_topic];
  void *v29 = 0xD000000000000014;
  v29[1] = 0x800000010044ED10;
  id v207 = v29;
  v206 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))OBJC_IVAR____TtC9appstored20AppInstallationEvent_supplementalFields;
  *(void *)&v2[OBJC_IVAR____TtC9appstored20AppInstallationEvent_supplementalFields] = &off_100510AD8;
  *(void *)&v2[OBJC_IVAR____TtC9appstored20AppInstallationEvent_defaultIdentifierResetInterval] = 0x40F5180000000000;
  v2[OBJC_IVAR____TtC9appstored20AppInstallationEvent_manateeDomain] = 0;
  uint64_t v30 = OBJC_IVAR____TtC9appstored20AppInstallationEvent_identifierResetIntervalBagKey;
  uint64_t v31 = v2;
  NSString v32 = String._bridgeToObjectiveC()();
  uint64_t v205 = v30;
  *(void *)&v2[v30] = v32;
  v31[OBJC_IVAR____TtC9appstored20AppInstallationEvent_includeClientID] = 1;
  os_log_type_t v33 = &v31[OBJC_IVAR____TtC9appstored20AppInstallationEvent_diagnosticsSubmissionBugType];
  void *v33 = 0;
  v33[1] = 0;
  v31[OBJC_IVAR____TtC9appstored20AppInstallationEvent_preventSampling] = 2;
  uint64_t v203 = OBJC_IVAR____TtC9appstored20AppInstallationEvent_basePropertiesToRemove;
  *(void *)&v31[OBJC_IVAR____TtC9appstored20AppInstallationEvent_basePropertiesToRemove] = 0;
  v204 = (char *)OBJC_IVAR____TtC9appstored20AppInstallationEvent_eventTimeOverride;
  *(void *)&v31[OBJC_IVAR____TtC9appstored20AppInstallationEvent_eventTimeOverride] = 0;
  long long v34 = &v31[OBJC_IVAR____TtC9appstored20AppInstallationEvent_eventType];
  strcpy(&v31[OBJC_IVAR____TtC9appstored20AppInstallationEvent_eventType], "packageInstall");
  v34[15] = -18;
  uint64_t v35 = sub_10026E95C(a1, @"log_code");
  if (!v35)
  {

    goto LABEL_9;
  }
  id v200 = a2;
  v184 = v14;
  uint64_t v187 = v12;
  uint64_t v188 = v11;
  uint64_t v186 = v5;
  v201 = v31;
  v202 = a1;
  unint64_t v36 = v35;
  sub_10001644C(&qword_1005A5B30);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100489530;
  *(void *)(inited + 32) = @"UPP";
  *(void *)(inited + 40) = @"MNF";
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v38 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  uint64_t v39 = @"UPP";
  char v40 = @"MNF";
  char v41 = sub_1000E4E6C((uint64_t)v38, inited);

  swift_setDeallocating();
  type metadata accessor for AppInstallLogCode(0);
  swift_arrayDestroy();
  if (v41)
  {

    uint64_t v31 = v201;
LABEL_9:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    type metadata accessor for AppInstallationEvent();
    swift_deallocPartialClassInstance();
    return 0;
  }
  v185 = v36;
  BOOL v42 = sub_1000B97AC();
  os_log_type_t v43 = v202;
  uint64_t v31 = v201;
  if (!v42)
  {

    goto LABEL_9;
  }
  uint64_t v44 = sub_1002C1EE8(v202);
  *(void *)&v31[OBJC_IVAR____TtC9appstored20AppInstallationEvent_logKey] = v44;
  if (sub_10026E7EC(v43, @"redownload"))
  {
    char v45 = 4;
  }
  else
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    NSString v48 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    char v49 = sub_1002C1E88(v43);
    char v45 = sub_1000B4580(v48, v49);
  }
  id v50 = v200;
  v31[OBJC_IVAR____TtC9appstored20AppInstallationEvent_context] = v45;
  id v51 = sub_100367A80(v43, @"failure_error");
  if (!v51
    || (aBlock[0] = v51,
        sub_10001644C(&qword_1005A4E40),
        sub_100018D68(0, (unint64_t *)&qword_1005A4160),
        (swift_dynamicCast() & 1) == 0))
  {
    uint64_t v61 = &v31[OBJC_IVAR____TtC9appstored20AppInstallationEvent_errorCode];
    *(void *)uint64_t v61 = 0;
    v61[8] = 1;
    uint64_t v62 = &v31[OBJC_IVAR____TtC9appstored20AppInstallationEvent_errorDomain];
    *uint64_t v62 = 0;
    v62[1] = 0;
    goto LABEL_27;
  }
  uint64_t v52 = (void *)v214;
  id v53 = [(id)v214 code];
  uint64_t v54 = &v31[OBJC_IVAR____TtC9appstored20AppInstallationEvent_errorCode];
  *(void *)uint64_t v54 = v53;
  v54[8] = 0;
  id v55 = [v52 domain];
  uint64_t v56 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v58 = v57;

  uint64_t v59 = (uint64_t *)&v31[OBJC_IVAR____TtC9appstored20AppInstallationEvent_errorDomain];
  *uint64_t v59 = v56;
  v59[1] = v58;
  if (!sub_100042878()) {
    goto LABEL_25;
  }
  if (v56 != static String._unconditionallyBridgeFromObjectiveC(_:)() || v58 != v60)
  {
    char v63 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v63) {
      goto LABEL_20;
    }
LABEL_25:

    os_log_type_t v43 = v202;
    goto LABEL_27;
  }
  swift_bridgeObjectRelease();
LABEL_20:
  os_log_type_t v43 = v202;
  if ((v54[8] & 1) != 0 || (BOOL v64 = *(void *)v54 == 515, v65 = v188, v66 = v187, !v64))
  {

    goto LABEL_27;
  }
  CFStringRef v67 = (const __CFString *)String._bridgeToObjectiveC()();
  id v207 = self;
  uint64_t v68 = (__CFString *)v67;
  id v69 = sub_1003F1EF8((uint64_t)v207, v67);
  if (v69)
  {
    char v70 = v69;
    uint64_t v71 = (uint64_t)v190;
    static Date._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v72 = 0;
    uint64_t v73 = (uint64_t)v191;
  }
  else
  {
    uint64_t v72 = 1;
    uint64_t v73 = (uint64_t)v191;
    uint64_t v71 = (uint64_t)v190;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v66 + 56))(v71, v72, 1, v65);
  sub_100030134(v71, v73, (uint64_t *)&unk_1005A4E20);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v66 + 48))(v73, 1, v65) == 1)
  {
    sub_100016714(v73, (uint64_t *)&unk_1005A4E20);
LABEL_113:
    v170 = v189;
    Date.init()();
    Class isa = Date._bridgeToObjectiveC()().super.isa;
    (*(void (**)(char *, uint64_t))(v66 + 8))(v170, v65);
    sub_1003F2074((uint64_t)v207, isa, v68);

    id v172 = [self callStackSymbols];
    uint64_t v173 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    aBlock[0] = v173;
    sub_10001644C(&qword_1005A4EE8);
    sub_10008C644();
    uint64_t v174 = BidirectionalCollection<>.joined(separator:)();
    v175 = v52;
    uint64_t v177 = v176;
    swift_bridgeObjectRelease();
    v178 = (id *)objc_allocWithZone((Class)PresentTapToRadarRequestFlow);
    NSString v179 = String._bridgeToObjectiveC()();
    NSString v180 = String._bridgeToObjectiveC()();
    v181 = sub_1002F8BC0(v178, v179, v180);

    os_log_type_t v43 = v202;
    uint64_t v182 = swift_allocObject();
    *(void *)(v182 + 16) = v174;
    *(void *)(v182 + 24) = v177;
    uint64_t v31 = v201;
    id v50 = v200;
    v210 = sub_1000B8704;
    uint64_t v211 = v182;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1000B1DB8;
    v209 = &unk_100515858;
    v183 = (char *)_Block_copy(aBlock);
    swift_release();
    sub_1002F9278(v181, v183);
    _Block_release(v183);
    sub_1002F8C78((uint64_t)v181);

    goto LABEL_27;
  }
  Class v168 = Date._bridgeToObjectiveC()().super.isa;
  (*(void (**)(uint64_t, uint64_t))(v66 + 8))(v73, v65);
  unsigned int v169 = sub_10028269C(v168, 86400.0);

  if (v169) {
    goto LABEL_113;
  }

LABEL_27:
  id v74 = v50;
  char v75 = sub_1002C1E88(v43);
  id v207 = v74;
  v31[OBJC_IVAR____TtC9appstored20AppInstallationEvent_packageType] = sub_1000B5348(v74, v75);
  if ([v43 valueForProperty:@"metrics_fields"])
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v214 = 0u;
    long long v215 = 0u;
  }
  sub_100030134((uint64_t)&v214, (uint64_t)aBlock, &qword_1005A5660);
  if (v209)
  {
    sub_10001644C(&qword_1005A5100);
    if (swift_dynamicCast())
    {
      uint64_t v76 = v212;
      goto LABEL_35;
    }
  }
  else
  {
    sub_100016714((uint64_t)aBlock, &qword_1005A5660);
  }
  uint64_t v76 = _swiftEmptyDictionarySingleton;
LABEL_35:
  *(void *)&v31[OBJC_IVAR____TtC9appstored20AppInstallationEvent_additionalFields] = v76;
  if (qword_1005A3070 != -1) {
    swift_once();
  }
  self;
  id v77 = sub_10030B11C();
  NSString v78 = String._bridgeToObjectiveC()();
  double v79 = sub_10030D38C(v77, v78, 0.0);

  *(double *)&v31[OBJC_IVAR____TtC9appstored20AppInstallationEvent_sampleRate] = v79;
  id v80 = sub_10026E95C(v43, @"storefront");
  if (v80)
  {
    uint64_t v81 = v80;
    uint64_t v82 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v84 = v83;

    id v85 = (id)sub_1000B0828(v82, v84);
    if ((v86 & 1) == 0)
    {
      char v87 = 0;
      goto LABEL_60;
    }
  }
  else
  {
    id v85 = sub_1002C1FCC(v43);
    if (v85)
    {
      uint64_t v88 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v90 = v89;

      id v91 = objc_allocWithZone((Class)LSApplicationRecord);
      id v92 = sub_1000D718C(v88, v90, 0);
      uint64_t v99 = v92;
      if (v92)
      {
        id v167 = [v92 iTunesMetadata];
        id v85 = [v167 storeFront];

        if (v85)
        {
          id v98 = [v99 iTunesMetadata];
          id v85 = [v98 storeFront];
          char v87 = 0;
LABEL_57:

LABEL_59:
          uint64_t v31 = v201;
LABEL_60:
          uint64_t v108 = &v31[OBJC_IVAR____TtC9appstored20AppInstallationEvent_storeFrontID];
          *(void *)uint64_t v108 = v85;
          v108[8] = v87;
          id v109 = sub_1002C2264(v43);
          if (v109)
          {
            char v110 = v109;
            id v111 = [v109 stringValue];

            uint64_t v112 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            uint64_t v114 = v113;

LABEL_62:
            swift_bridgeObjectRetain();
            sub_10001644C(&qword_1005A4F70);
            char v115 = (void *)swift_allocObject();
            *((_OWORD *)v115 + 1) = xmmword_100488070;
            v115[4] = v112;
            v115[5] = v114;
            goto LABEL_73;
          }
          if (sub_1000B0DAC(v31[OBJC_IVAR____TtC9appstored20AppInstallationEvent_context]) == 0x6E496D6574737973
            && v116 == 0xED00006C6C617473)
          {
            swift_bridgeObjectRelease();
          }
          else
          {
            char v117 = _stringCompareWithSmolCheck(_:_:expecting:)();
            swift_bridgeObjectRelease();
            if ((v117 & 1) == 0) {
              goto LABEL_69;
            }
          }
          id v118 = sub_1002C1FCC(v43);
          if (v118)
          {
            uint64_t v119 = v118;
            uint64_t v120 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            unint64_t v122 = v121;

            uint64_t v112 = sub_1000B66B0(v120, v122);
            uint64_t v114 = v123;
            os_log_type_t v43 = v202;
            swift_bridgeObjectRelease();
            if (v114) {
              goto LABEL_62;
            }
          }
LABEL_69:
          static Logger.metrics.getter();
          uint64_t v124 = v43;
          char v125 = Logger.logObject.getter();
          os_log_type_t v126 = static os_log_type_t.fault.getter();
          if (os_log_type_enabled(v125, v126))
          {
            uint64_t v127 = (uint8_t *)swift_slowAlloc();
            uint64_t v128 = (void *)swift_slowAlloc();
            *(_DWORD *)uint64_t v127 = 138412290;
            uint64_t v129 = sub_1002C1EE8(v124);
            aBlock[0] = v129;
            os_log_type_t v43 = v202;
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            *uint64_t v128 = v129;

            _os_log_impl((void *)&_mh_execute_header, v125, v126, "Failed to find an item ID for install: %@", v127, 0xCu);
            sub_10001644C((uint64_t *)&unk_1005A3AA0);
            swift_arrayDestroy();
            swift_slowDealloc();
            uint64_t v31 = v201;
            swift_slowDealloc();
          }
          else
          {

            char v125 = v124;
          }

          (*(void (**)(char *, uint64_t))(v199 + 8))(v195, v186);
          char v115 = _swiftEmptyArrayStorage;
LABEL_73:
          uint64_t v130 = (uint64_t)v198;
          *(void *)&v31[OBJC_IVAR____TtC9appstored20AppInstallationEvent_adamIDs] = v115;
          if ([v43 valueForProperty:@"timestamp"])
          {
            _bridgeAnyObjectToAny(_:)();
            swift_unknownObjectRelease();
          }
          else
          {
            long long v214 = 0u;
            long long v215 = 0u;
          }
          sub_100030134((uint64_t)&v214, (uint64_t)aBlock, &qword_1005A5660);
          if (v209)
          {
            uint64_t v131 = v188;
            int v132 = swift_dynamicCast();
            uint64_t v133 = v187;
            uint64_t v134 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v187 + 56);
            v134(v130, v132 ^ 1u, 1, v131);
            v206 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v133 + 48);
            if (v206(v130, 1, v131) != 1)
            {
              char v135 = *(char **)(v133 + 32);
              uint64_t v205 = v133 + 32;
              v204 = v135;
              ((void (*)(char *, uint64_t, uint64_t))v135)(v196, v130, v131);
              if ([v43 valueForProperty:@"install_finished_timestamp"])
              {
                _bridgeAnyObjectToAny(_:)();
                swift_unknownObjectRelease();
              }
              else
              {
                long long v214 = 0u;
                long long v215 = 0u;
              }
              uint64_t v146 = (uint64_t)v194;
              sub_100030134((uint64_t)&v214, (uint64_t)aBlock, &qword_1005A5660);
              uint64_t v147 = v188;
              if (v209)
              {
                int v148 = swift_dynamicCast();
                v134(v146, v148 ^ 1u, 1, v147);
                v149 = v206;
                if (v206(v146, 1, v147) != 1)
                {
                  swift_bridgeObjectRelease();
                  goto LABEL_94;
                }
              }
              else
              {
                sub_100016714((uint64_t)aBlock, &qword_1005A5660);
                v134(v146, 1, 1, v147);
                v149 = v206;
              }
              v150 = v193;
              static Logger.metrics.getter();
              v151 = v43;
              v152 = Logger.logObject.getter();
              os_log_type_t v153 = static os_log_type_t.fault.getter();
              if (os_log_type_enabled(v152, v153))
              {
                v154 = (uint8_t *)swift_slowAlloc();
                v155 = (void *)swift_slowAlloc();
                *(_DWORD *)v154 = 138412290;
                v206 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(v154 + 4);
                v156 = sub_1002C1EE8(v151);
                aBlock[0] = v156;
                UnsafeMutableRawBufferPointer.copyMemory(from:)();
                void *v155 = v156;
                uint64_t v147 = v188;

                swift_bridgeObjectRelease();
                _os_log_impl((void *)&_mh_execute_header, v152, v153, "Failed to find install finished timestamp for install: %@", v154, 0xCu);
                sub_10001644C((uint64_t *)&unk_1005A3AA0);
                swift_arrayDestroy();
                swift_slowDealloc();
                os_log_type_t v43 = v202;
                swift_slowDealloc();

                (*(void (**)(char *, uint64_t))(v199 + 8))(v193, v186);
              }
              else
              {

                (*(void (**)(char *, uint64_t))(v199 + 8))(v150, v186);
                swift_bridgeObjectRelease();
              }
              uint64_t v31 = v201;
              uint64_t v146 = (uint64_t)v194;
LABEL_94:
              uint64_t v157 = v192;
              sub_10006FB78(v146, v192);
              int v158 = v149(v157, 1, v147);
              v159 = v184;
              if (v158 == 1)
              {
                Date.init()();
                sub_100016714(v157, (uint64_t *)&unk_1005A4E20);
              }
              else
              {
                ((void (*)(char *, uint64_t, uint64_t))v204)(v184, v157, v147);
              }
              v160 = v196;
              Date.timeIntervalSince(_:)();
              double v162 = v161;

              if (v162 * 1000.0 < 0.0) {
                double v163 = 0.0;
              }
              else {
                double v163 = v162 * 1000.0;
              }
              v164 = *(void (**)(char *, uint64_t))(v187 + 8);
              v164(v159, v147);
              id result = (id)((uint64_t (*)(char *, uint64_t))v164)(v160, v147);
              if ((~*(void *)&v163 & 0x7FF0000000000000) != 0)
              {
                if (v163 > -1.0)
                {
                  if (v163 < 1.84467441e19)
                  {
                    v165 = &v31[OBJC_IVAR____TtC9appstored20AppInstallationEvent_installDuration];
                    *(void *)v165 = (unint64_t)v163;
                    v165[8] = 0;

                    sub_100016714(v146, (uint64_t *)&unk_1005A4E20);
LABEL_104:
                    v166 = (objc_class *)type metadata accessor for AppInstallationEvent();
                    v213.receiver = v31;
                    v213.super_class = v166;
                    id v46 = objc_msgSendSuper2(&v213, "init");

                    return v46;
                  }
                  goto LABEL_117;
                }
              }
              else
              {
                __break(1u);
              }
              __break(1u);
LABEL_117:
              __break(1u);
              goto LABEL_118;
            }
          }
          else
          {
            sub_100016714((uint64_t)aBlock, &qword_1005A5660);
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v187 + 56))(v130, 1, 1, v188);
          }
          swift_bridgeObjectRelease();
          sub_100016714(v130, (uint64_t *)&unk_1005A4E20);
          id v136 = v197;
          static Logger.metrics.getter();
          v137 = v43;
          os_log_type_t v138 = Logger.logObject.getter();
          os_log_type_t v139 = static os_log_type_t.fault.getter();
          if (os_log_type_enabled(v138, v139))
          {
            uint64_t v140 = (uint8_t *)swift_slowAlloc();
            unint64_t v141 = (void *)swift_slowAlloc();
            *(_DWORD *)uint64_t v140 = 138412290;
            v142 = sub_1002C1EE8(v137);
            aBlock[0] = v142;
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            *unint64_t v141 = v142;

            _os_log_impl((void *)&_mh_execute_header, v138, v139, "Failed to find install start timestamp for install: %@", v140, 0xCu);
            sub_10001644C((uint64_t *)&unk_1005A3AA0);
            swift_arrayDestroy();
            swift_slowDealloc();
            os_log_type_t v43 = v202;
            swift_slowDealloc();
            v137 = v185;
          }
          else
          {

            os_log_type_t v138 = v185;
          }
          uint64_t v143 = v186;
          uint64_t v144 = v199;

          (*(void (**)(char *, uint64_t))(v144 + 8))(v136, v143);
          uint64_t v31 = v201;
          v145 = &v201[OBJC_IVAR____TtC9appstored20AppInstallationEvent_installDuration];
          *(void *)v145 = 0;
          v145[8] = 1;

          goto LABEL_104;
        }
      }
      else
      {
        id v85 = 0;
      }
    }
  }
  id v93 = sub_10026E82C(v43, @"account_id");
  if (v93)
  {
    uint64_t v94 = v93;
    id result = [self defaultStore];
    if (!result)
    {
LABEL_118:
      __break(1u);
      goto LABEL_119;
    }
    char v95 = result;
    NSString v96 = [v94 stringValue];
    if (!v96)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)();
      NSString v96 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
    }
    id v97 = [v95 accountWithIdentifier:v96];

    if (v97)
    {
      id v98 = v97;
      uint64_t v99 = v98;
LABEL_52:
      id v101 = objc_msgSend(v98, "ams_storefront");
      if (v101
        && (uint64_t v102 = v101,
            uint64_t v103 = static String._unconditionallyBridgeFromObjectiveC(_:)(),
            uint64_t v105 = v104,
            v102,
            (id v106 = sub_100090424(v103, v105)) != 0))
      {
        uint64_t v107 = v106;
        id v85 = [v106 unsignedLongLongValue];

        char v87 = 0;
      }
      else
      {
        char v87 = 1;
      }
      os_log_type_t v43 = v202;
      goto LABEL_57;
    }
  }
  id result = [self defaultStore];
  if (result)
  {
    char v100 = result;
    id v98 = objc_msgSend(result, "ams_activeiTunesAccount");

    if (!v98)
    {
      char v87 = 1;
      os_log_type_t v43 = v202;
      goto LABEL_59;
    }
    uint64_t v99 = 0;
    goto LABEL_52;
  }
LABEL_119:
  __break(1u);
  return result;
}

uint64_t sub_1000B86CC()
{
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000B8704()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

unsigned char *storeEnumTagSinglePayload for AppInstallationEvent.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 9 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 9) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF7) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF6)
  {
    unsigned int v6 = ((a2 - 247) >> 8) + 1;
    *id result = a2 + 9;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000B8800);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *id result = a2 + 9;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AppInstallationEvent.CodingKeys()
{
  return &type metadata for AppInstallationEvent.CodingKeys;
}

unint64_t sub_1000B883C()
{
  unint64_t result = qword_1005A5B40;
  if (!qword_1005A5B40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1005A5B40);
  }
  return result;
}

unint64_t sub_1000B8894()
{
  unint64_t result = qword_1005A5B48;
  if (!qword_1005A5B48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1005A5B48);
  }
  return result;
}

unint64_t sub_1000B88EC()
{
  unint64_t result = qword_1005A5B50;
  if (!qword_1005A5B50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1005A5B50);
  }
  return result;
}

uint64_t sub_1000B8940()
{
  uint64_t result = 0x746E756F636341;
  switch(*(void *)(v0 + OBJC_IVAR____TtC9appstored14UpdatesContext_reason))
  {
    case 0:
      uint64_t result = 0x6C61756E614DLL;
      break;
    case 1:
      uint64_t result = 0x756F72676B636142;
      break;
    case 2:
      uint64_t result = 0x6F6974617267694DLL;
      break;
    case 3:
      uint64_t result = 0x65726F74736552;
      break;
    case 4:
      uint64_t result = 0x6E6F7268636E7953;
      break;
    case 5:
      uint64_t result = 0x4120657461647055;
      break;
    case 6:
      return result;
    case 7:
      uint64_t result = 5063757;
      break;
    case 8:
      uint64_t result = 0x2068736572666552;
      break;
    default:
      type metadata accessor for LoadSoftwareUpdatesReason(0);
      _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)();
      __break(1u);
      JUMPOUT(0x1000B8AA4);
  }
  return result;
}

uint64_t sub_1000B8DB4(uint64_t a1, char a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  if ((a2 & 1) == 0) {
    return a3(a1, 0);
  }
  swift_errorRetain();
  a3(0, a1);
  return sub_1000B9608(a1, 1);
}

uint64_t sub_1000B9028(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = a2;
  uint64_t v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  if (a2)
  {
    sub_100018E30();
    uint64_t v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  }
  swift_retain();
  id v6 = a3;
  v5(v4, a3);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1000B90BC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  if (a1)
  {
    if (!a2) {
      return a3();
    }
  }
  else if (!a2)
  {
    type metadata accessor for ASDError(0);
    sub_1000CC958((uint64_t)_swiftEmptyArrayStorage);
    sub_100036BF0();
    _BridgedStoredNSError.init(_:userInfo:)();
    uint64_t v5 = v6;
    goto LABEL_6;
  }
  uint64_t v5 = a2;
LABEL_6:
  swift_errorRetain();
  ((void (*)(uint64_t, uint64_t))a3)(v5, 1);
  return swift_errorRelease();
}

uint64_t type metadata accessor for UpdatesContext()
{
  return self;
}

uint64_t sub_1000B9218()
{
  swift_release();
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000B9250(uint64_t a1, uint64_t a2)
{
  return sub_1000B90BC(a1, a2, *(uint64_t (**)(void))(v2 + 16));
}

id sub_1000B9258(uint64_t a1, void *a2, void *a3, uint64_t a4, uint64_t a5, char a6, char a7, char a8, uint64_t a9, char a10)
{
  ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v18 = (uint64_t *)&v10[OBJC_IVAR____TtC9appstored14UpdatesContext_callbackHandler];
  *uint64_t v18 = a4;
  v18[1] = a5;
  v10[OBJC_IVAR____TtC9appstored14UpdatesContext_includeMetrics] = a6;
  v10[OBJC_IVAR____TtC9appstored14UpdatesContext_isVPPLookup] = a7;
  if (!a3)
  {
    if (a2)
    {
      uint64_t v21 = v10;
      sub_1000196F0(a4);
      id v20 = sub_100416B80(a2, v22);
      if (v20) {
        goto LABEL_8;
      }
    }
    else
    {
      uint64_t v23 = v10;
      sub_1000196F0(a4);
    }
    id v20 = [objc_allocWithZone((Class)type metadata accessor for LogKey()) init];
    goto LABEL_8;
  }
  uint64_t v19 = v10;
  sub_1000196F0(a4);
  id v20 = a3;
LABEL_8:
  *(void *)&v10[OBJC_IVAR____TtC9appstored14UpdatesContext_logKey] = v20;
  *(void *)&v10[OBJC_IVAR____TtC9appstored14UpdatesContext_reason] = a1;
  *(void *)&v10[OBJC_IVAR____TtC9appstored14UpdatesContext_requestToken] = a2;
  v10[OBJC_IVAR____TtC9appstored14UpdatesContext_userInitiated] = a8 & 1;
  uint64_t v24 = &v10[OBJC_IVAR____TtC9appstored14UpdatesContext_targetedItemID];
  *(void *)uint64_t v24 = a9;
  v24[8] = a10 & 1;
  id v25 = a2;
  id v26 = a3;

  v30.receiver = v10;
  v30.super_class = ObjectType;
  return objc_msgSendSuper2(&v30, "init");
}

id sub_1000B93D8(uint64_t a1, void *a2, void *a3, uint64_t a4, uint64_t a5, char a6, char a7, char a8, void *a9)
{
  ObjectType = (objc_class *)swift_getObjectType();
  if (a4)
  {
    uint64_t v18 = swift_allocObject();
    *(void *)(v18 + 16) = a4;
    *(void *)(v18 + 24) = a5;
    uint64_t v19 = (uint64_t (**)(uint64_t, char))&v9[OBJC_IVAR____TtC9appstored14UpdatesContext_callbackHandler];
    *uint64_t v19 = sub_1000B95FC;
    v19[1] = (uint64_t (*)(uint64_t, char))v18;
  }
  else
  {
    id v20 = &v9[OBJC_IVAR____TtC9appstored14UpdatesContext_callbackHandler];
    *id v20 = 0;
    v20[1] = 0;
  }
  v9[OBJC_IVAR____TtC9appstored14UpdatesContext_includeMetrics] = a6 & 1;
  v9[OBJC_IVAR____TtC9appstored14UpdatesContext_isVPPLookup] = a7 & 1;
  if (a3)
  {
    uint64_t v21 = v9;
    sub_1000196F0(a4);
    id v22 = a3;
    goto LABEL_11;
  }
  if (a2)
  {
    uint64_t v23 = v9;
    sub_1000196F0(a4);
    id v22 = sub_100416B80(a2, v24);
    if (v22) {
      goto LABEL_11;
    }
  }
  else
  {
    id v25 = v9;
    sub_1000196F0(a4);
  }
  id v22 = [objc_allocWithZone((Class)type metadata accessor for LogKey()) init];
LABEL_11:
  *(void *)&v9[OBJC_IVAR____TtC9appstored14UpdatesContext_logKey] = v22;
  *(void *)&v9[OBJC_IVAR____TtC9appstored14UpdatesContext_reason] = a1;
  *(void *)&v9[OBJC_IVAR____TtC9appstored14UpdatesContext_requestToken] = a2;
  v9[OBJC_IVAR____TtC9appstored14UpdatesContext_userInitiated] = a8 & 1;
  id v26 = a2;
  id v27 = a3;
  if (a9) {
    id v28 = [a9 longLongValue];
  }
  else {
    id v28 = 0;
  }
  uint64_t v29 = &v9[OBJC_IVAR____TtC9appstored14UpdatesContext_targetedItemID];
  *(void *)uint64_t v29 = v28;
  v29[8] = a9 == 0;

  v32.receiver = v9;
  v32.super_class = ObjectType;
  return objc_msgSendSuper2(&v32, "init");
}

uint64_t sub_1000B95C4()
{
  _Block_release(*(const void **)(v0 + 16));
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000B95FC(uint64_t a1, char a2)
{
  return sub_1000B8DB4(a1, a2 & 1, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 16));
}

uint64_t sub_1000B9608(uint64_t a1, char a2)
{
  if (a2) {
    return swift_errorRelease();
  }
  else {
    return swift_bridgeObjectRelease();
  }
}

id sub_1000B9618()
{
  id result = [objc_allocWithZone((Class)type metadata accessor for QOSMetrics()) init];
  qword_1005A5BC0 = (uint64_t)result;
  return result;
}

id sub_1000B96A4()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for QOSMetrics();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for QOSMetrics()
{
  return self;
}

uint64_t sub_1000B9700(uint64_t result, double a2, double a3)
{
  if (a2 == a3)
  {
    __break(1u);
    goto LABEL_7;
  }
  double v5 = a3 - a2;
  if ((~COERCE__INT64(a3 - a2) & 0x7FF0000000000000) == 0)
  {
LABEL_7:
    __break(1u);
    return result;
  }
  uint64_t v6 = result;
  id result = swift_stdlib_random();
  if (v5 * ((double)0 * 1.11022302e-16) + a2 == a3) {
    return sub_1000B9700(v6, a2, a3);
  }
  return result;
}

BOOL sub_1000B97AC()
{
  if (qword_1005A3070 != -1) {
    swift_once();
  }
  if (qword_1005A2FB0 != -1) {
    swift_once();
  }
  uint64_t v0 = *(void *)(qword_1005B1450 + OBJC_IVAR____TtC9appstored17RestrictionsCache_lockedCachedValues);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v0 + 20));
  sub_1000342E8((unsigned char *)(v0 + 16), &v8);
  os_unfair_lock_unlock((os_unfair_lock_t)(v0 + 20));
  int v1 = v8;
  swift_release();
  if (v1 != 1) {
    return 0;
  }
  self;
  id v2 = sub_10030B11C();
  NSString v3 = String._bridgeToObjectiveC()();
  double v4 = sub_10030D38C(v2, v3, 0.0);

  if (v4 <= 0.0) {
    return 0;
  }
  sub_1000B9700(v5, 0.0, 1.0);
  return v6 < v4;
}

uint64_t sub_1000B9918(char *a1, char *a2)
{
  return sub_1000F0DBC(*a1, *a2);
}

Swift::Int sub_1000B9924()
{
  return Hasher._finalize()();
}

uint64_t sub_1000B9A2C()
{
  String.hash(into:)();
  return swift_bridgeObjectRelease();
}

Swift::Int sub_1000B9B1C()
{
  return Hasher._finalize()();
}

unint64_t sub_1000B9C20@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_1000C0334(*a1);
  *a2 = result;
  return result;
}

void sub_1000B9C50(uint64_t a1@<X8>)
{
  unint64_t v2 = 0xE200000000000000;
  uint64_t v3 = 29551;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xED00007265626D75;
      uint64_t v3 = 0x4E646C697542736FLL;
      goto LABEL_3;
    case 2:
      unint64_t v4 = 0xEE00796C696D6146;
      goto LABEL_6;
    case 3:
      unint64_t v4 = 0xED00006C65646F4DLL;
LABEL_6:
      *(void *)a1 = 0x6572617764726168;
      *(void *)(a1 + 8) = v4;
      break;
    case 4:
      strcpy((char *)a1, "storeFrontId");
      *(unsigned char *)(a1 + 13) = 0;
      *(_WORD *)(a1 + 14) = -5120;
      break;
    default:
LABEL_3:
      *(void *)a1 = v3;
      *(void *)(a1 + 8) = v2;
      break;
  }
}

Swift::Int sub_1000B9D18()
{
  return Hasher._finalize()();
}

uint64_t sub_1000B9D70()
{
  return String.hash(into:)();
}

Swift::Int sub_1000B9D8C()
{
  return Hasher._finalize()();
}

uint64_t sub_1000B9DE0@<X0>(Swift::String *a1@<X0>, BOOL *a2@<X8>)
{
  Swift::Int v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_100510B98, *a1);
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v3 != 0;
  return result;
}

void sub_1000B9E34(void *a1@<X8>)
{
  *a1 = 0xD000000000000026;
  a1[1] = 0x800000010044A900;
}

uint64_t sub_1000B9E54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[14] = a5;
  uint64_t v6 = type metadata accessor for Logger();
  v5[15] = v6;
  v5[16] = *(void *)(v6 - 8);
  v5[17] = swift_task_alloc();
  return _swift_task_switch(sub_1000B9F14, 0, 0);
}

uint64_t sub_1000B9F14()
{
  uint64_t v32 = v0;
  id v1 = sub_1000BFC6C(*(void **)(v0 + 112));
  *(void *)(v0 + 144) = v1;
  if (v1)
  {
    unint64_t v2 = v1;
    uint64_t v3 = *(void *)(v0 + 112);
    static Logger.metrics.getter();
    sub_100040170(v3, v0 + 16);
    sub_100040170(v3, v0 + 56);
    unint64_t v4 = Logger.logObject.getter();
    os_log_type_t v5 = static os_log_type_t.default.getter();
    BOOL v6 = os_log_type_enabled(v4, v5);
    uint64_t v7 = *(void *)(v0 + 128);
    uint64_t v8 = *(void *)(v0 + 136);
    uint64_t v9 = *(void *)(v0 + 120);
    if (v6)
    {
      uint64_t v29 = *(void *)(v0 + 120);
      uint64_t v10 = swift_slowAlloc();
      objc_super v30 = (void *)swift_slowAlloc();
      uint64_t v31 = swift_slowAlloc();
      *(_DWORD *)uint64_t v10 = 138412546;
      uint64_t v27 = v7;
      uint64_t v28 = v8;
      os_log_type_t type = v5;
      uint64_t v11 = *(void *)(v0 + 40);
      uint64_t v12 = *(void *)(v0 + 48);
      sub_10002FD00((void *)(v0 + 16), v11);
      log = v4;
      uint64_t v13 = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 32))(v11, v12);
      *(void *)(v0 + 96) = v13;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *objc_super v30 = v13;
      sub_10002E618(v0 + 16);
      *(_WORD *)(v10 + 12) = 2082;
      uint64_t v14 = *(void *)(v0 + 80);
      uint64_t v15 = *(void *)(v0 + 88);
      sub_10002FD00((void *)(v0 + 56), v14);
      uint64_t v16 = (*(uint64_t (**)(uint64_t, uint64_t))(v15 + 16))(v14, v15);
      *(void *)(v0 + 104) = sub_1000F7290(v16, v17, &v31);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_10002E618(v0 + 56);
      _os_log_impl((void *)&_mh_execute_header, log, type, "[%@] Enqueuing event for topic: %{public}s", (uint8_t *)v10, 0x16u);
      sub_10001644C((uint64_t *)&unk_1005A3AA0);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v28, v29);
    }
    else
    {
      sub_10002E618(v0 + 16);
      sub_10002E618(v0 + 56);

      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v8, v9);
    }
    id v20 = objc_allocWithZone((Class)type metadata accessor for ASEMetrics());
    *(void *)(v0 + 152) = sub_10005BAD0(0);
    sub_10001644C(&qword_1005A43D0);
    uint64_t v21 = swift_allocObject();
    *(_OWORD *)(v21 + 16) = xmmword_100488A80;
    *(void *)(v21 + 32) = v2;
    uint64_t v31 = v21;
    specialized Array._endMutation()();
    uint64_t v22 = v31;
    *(void *)(v0 + 160) = v31;
    id v23 = v2;
    uint64_t v24 = (void *)swift_task_alloc();
    *(void *)(v0 + 168) = v24;
    void *v24 = v0;
    v24[1] = sub_1000BA2F4;
    return sub_10005C1A0(v22, 1);
  }
  else
  {
    swift_task_dealloc();
    uint64_t v18 = *(uint64_t (**)(void))(v0 + 8);
    return v18();
  }
}

uint64_t sub_1000BA2F4()
{
  id v1 = *(void **)(*(void *)v0 + 152);
  swift_task_dealloc();
  swift_bridgeObjectRelease();

  return _swift_task_switch(sub_1000BA424, 0, 0);
}

uint64_t sub_1000BA424()
{
  swift_task_dealloc();
  id v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1000BA48C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[4] = a4;
  v5[5] = a5;
  uint64_t v6 = type metadata accessor for Logger();
  v5[6] = v6;
  v5[7] = *(void *)(v6 - 8);
  v5[8] = swift_task_alloc();
  v5[9] = swift_task_alloc();
  v5[10] = swift_task_alloc();
  return _swift_task_switch(sub_1000BA568, 0, 0);
}

uint64_t sub_1000BA568()
{
  static Logger.metrics.getter();
  swift_bridgeObjectRetain();
  id v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = v0[4];
    unint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)unint64_t v4 = 134349056;
    v0[3] = *(void *)(v3 + 16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Preparing to enqueue %{public}ld events", v4, 0xCu);
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease();
  }

  uint64_t v5 = v0[4];
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v0[7] + 8);
  v6(v0[10], v0[6]);
  uint64_t v7 = *(void *)(v5 + 16);
  if (v7)
  {
    uint64_t v8 = (void *)(v0[4] + 32);
    swift_bridgeObjectRetain();
    swift_retain();
    do
    {
      if (sub_1000BFC6C(v8))
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
      }
      v8 += 5;
      --v7;
    }
    while (v7);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_retain();
  }
  v0[11] = _swiftEmptyArrayStorage;
  swift_release();
  if ((unint64_t)_swiftEmptyArrayStorage >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v16 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v16) {
      goto LABEL_15;
    }
  }
  else if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_15:
    static Logger.metrics.getter();
    swift_bridgeObjectRetain_n();
    uint64_t v9 = Logger.logObject.getter();
    os_log_type_t v10 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v11 = 134349056;
      if ((unint64_t)_swiftEmptyArrayStorage >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v12 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v12 = *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      swift_bridgeObjectRelease();
      v0[2] = v12;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v9, v10, "Enqueueing %{public}ld events", v11, 0xCu);
      swift_slowDealloc();
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    v6(v0[9], v0[6]);
    id v13 = objc_allocWithZone((Class)type metadata accessor for ASEMetrics());
    v0[12] = sub_10005BAD0(0);
    uint64_t v14 = (void *)swift_task_alloc();
    v0[13] = v14;
    void *v14 = v0;
    v14[1] = sub_1000BAA34;
    return sub_10005C1A0((uint64_t)_swiftEmptyArrayStorage, 1);
  }
  swift_bridgeObjectRelease();
  static Logger.metrics.getter();
  unint64_t v17 = Logger.logObject.getter();
  os_log_type_t v18 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v19 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v19 = 0;
    _os_log_impl((void *)&_mh_execute_header, v17, v18, "No AMSMetricsEvents to enqueue", v19, 2u);
    swift_slowDealloc();
  }
  uint64_t v20 = v0[8];
  uint64_t v21 = v0[6];

  v6(v20, v21);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v22 = (uint64_t (*)(void))v0[1];
  return v22();
}

uint64_t sub_1000BAA34()
{
  id v1 = *(void **)(*v0 + 96);
  uint64_t v4 = *v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  os_log_type_t v2 = *(uint64_t (**)(void))(v4 + 8);
  return v2();
}

uint64_t sub_1000BABB8()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for Metrics()
{
  return self;
}

unsigned char *storeEnumTagSinglePayload for ManateeDomain(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1000BAC88);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for ManateeDomain()
{
  return &type metadata for ManateeDomain;
}

uint64_t getEnumTagSinglePayload for SupplementalField(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFC) {
    goto LABEL_17;
  }
  if (a2 + 4 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 4) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 4;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 5;
  int v8 = v6 - 5;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for SupplementalField(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000BAE1CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SupplementalField()
{
  return &type metadata for SupplementalField;
}

unint64_t sub_1000BAE58()
{
  unint64_t result = qword_1005A5CC8;
  if (!qword_1005A5CC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1005A5CC8);
  }
  return result;
}

unint64_t sub_1000BAEB0()
{
  unint64_t result = qword_1005A5CD0;
  if (!qword_1005A5CD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1005A5CD0);
  }
  return result;
}

double sub_1000BAF04()
{
  return 31536000.0;
}

uint64_t sub_1000BAF14()
{
  return 0;
}

uint64_t sub_1000BAF1C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000BB02C(a1, a2, a3, (void *)*v3);
  *int v3 = result;
  return result;
}

uint64_t sub_1000BAF3C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000BB5E8(a1, a2, a3, (void *)*v3, &qword_1005A5D38, &qword_1005A5100);
  *int v3 = result;
  return result;
}

uint64_t sub_1000BAF6C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000BB33C(a1, a2, a3, *v3, &qword_1005A5858);
  *int v3 = (char *)result;
  return result;
}

uint64_t sub_1000BAF94(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000BB1D0(a1, a2, a3, *v3);
  *int v3 = (char *)result;
  return result;
}

uint64_t sub_1000BAFB4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000BB33C(a1, a2, a3, *v3, &qword_1005A4E50);
  *int v3 = (char *)result;
  return result;
}

uint64_t sub_1000BAFDC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000BB498(a1, a2, a3, *v3);
  *int v3 = (char *)result;
  return result;
}

uint64_t sub_1000BAFFC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000BB5E8(a1, a2, a3, (void *)*v3, &qword_1005A5D10, &qword_1005A5E50);
  *int v3 = result;
  return result;
}

uint64_t sub_1000BB02C(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10001644C(&qword_1005A5D00);
    os_log_type_t v10 = (void *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    os_log_type_t v10 = _swiftEmptyArrayStorage;
  }
  unint64_t v12 = (unint64_t)(v10 + 4);
  unint64_t v13 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v12 >= v13 + 40 * v8) {
      memmove(v10 + 4, a4 + 4, 40 * v8);
    }
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 40 * v8 || v12 >= v13 + 40 * v8)
  {
    sub_10001644C(&qword_1005A5D08);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1000BB1D0(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10001644C(&qword_1005A4F70);
    os_log_type_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    os_log_type_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  unint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1000BB33C(char a1, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  if (a3)
  {
    unint64_t v7 = *((void *)a4 + 3);
    int64_t v8 = v7 >> 1;
    if ((uint64_t)(v7 >> 1) < a2)
    {
      if (v8 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v8 = a2;
      }
    }
  }
  else
  {
    int64_t v8 = a2;
  }
  uint64_t v9 = *((void *)a4 + 2);
  if (v8 <= v9) {
    uint64_t v10 = *((void *)a4 + 2);
  }
  else {
    uint64_t v10 = v8;
  }
  if (v10)
  {
    sub_10001644C(a5);
    int64_t v11 = (char *)swift_allocObject();
    int64_t v12 = j__malloc_size(v11);
    uint64_t v13 = v12 - 32;
    if (v12 < 32) {
      uint64_t v13 = v12 - 25;
    }
    *((void *)v11 + 2) = v9;
    *((void *)v11 + 3) = 2 * (v13 >> 3);
  }
  else
  {
    int64_t v11 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v14 = v11 + 32;
  uint64_t v15 = a4 + 32;
  if (a1)
  {
    if (v11 != a4 || v14 >= &v15[8 * v9]) {
      memmove(v14, v15, 8 * v9);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v15 >= &v14[8 * v9] || v14 >= &v15[8 * v9])
  {
    memcpy(v14, v15, 8 * v9);
LABEL_30:
    swift_release();
    return (uint64_t)v11;
  }
LABEL_32:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1000BB498(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    sub_10001644C(&qword_1005A5D28);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  int64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1000BB5E8(char a1, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t *a6)
{
  if (a3)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = a4[2];
  if (v10 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = v10;
  }
  if (v12)
  {
    sub_10001644C(a5);
    uint64_t v13 = (void *)swift_allocObject();
    int64_t v14 = j__malloc_size(v13);
    uint64_t v15 = v14 - 32;
    if (v14 < 32) {
      uint64_t v15 = v14 - 25;
    }
    v13[2] = v11;
    v13[3] = 2 * (v15 >> 3);
  }
  else
  {
    uint64_t v13 = _swiftEmptyArrayStorage;
  }
  unint64_t v16 = (unint64_t)(v13 + 4);
  unint64_t v17 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v13 != a4 || v16 >= v17 + 8 * v11) {
      memmove(v13 + 4, a4 + 4, 8 * v11);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v17 >= v16 + 8 * v11 || v16 >= v17 + 8 * v11)
  {
    sub_10001644C(a6);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_32:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1000BB778(uint64_t a1, char *a2)
{
  int v3 = v2;
  uint64_t v6 = type metadata accessor for Calendar.Component();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  unint64_t v9 = (char *)v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v2;
  sub_1000C0380(&qword_1005A5CD8);
  swift_bridgeObjectRetain();
  long long v34 = a2;
  uint64_t v11 = dispatch thunk of Hashable._rawHashValue(seed:)();
  uint64_t v12 = -1 << *(unsigned char *)(v10 + 32);
  unint64_t v13 = v11 & ~v12;
  uint64_t v33 = v10 + 56;
  if ((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
  {
    uint64_t v29 = v2;
    uint64_t v30 = a1;
    uint64_t v31 = ~v12;
    uint64_t v28 = v7;
    unint64_t v16 = *(void (**)(void, void, void))(v7 + 16);
    uint64_t v15 = v7 + 16;
    int64_t v14 = v16;
    uint64_t v32 = *(void *)(v15 + 56);
    unint64_t v17 = (void (**)(char *, uint64_t))(v15 - 8);
    v27[1] = v15 & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    while (1)
    {
      uint64_t v18 = v10;
      unint64_t v19 = v32 * v13;
      unint64_t v20 = *(void *)(v10 + 48) + v32 * v13;
      uint64_t v21 = v14;
      v14(v9, v20, v6);
      sub_1000C0380(&qword_1005A5CE0);
      char v22 = dispatch thunk of static Equatable.== infix(_:_:)();
      uint64_t v23 = *v17;
      (*v17)(v9, v6);
      if (v22) {
        break;
      }
      unint64_t v13 = (v13 + 1) & v31;
      int64_t v14 = v21;
      uint64_t v10 = v18;
      if (((*(void *)(v33 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        int v3 = v29;
        a1 = v30;
        uint64_t v7 = v28;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v23(v34, v6);
    v21(v30, *(void *)(*v29 + 48) + v19, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    int64_t v14 = *(void (**)(void, void, void))(v7 + 16);
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    id v25 = v34;
    v14(v9, v34, v6);
    uint64_t v35 = *v3;
    *int v3 = 0x8000000000000000;
    sub_1000BC66C((uint64_t)v9, v13, isUniquelyReferenced_nonNull_native);
    *int v3 = v35;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(a1, v25, v6);
    return 1;
  }
}

uint64_t sub_1000BBA74(Swift::Int *a1, Swift::Int a2, Swift::Int a3)
{
  uint64_t v7 = *v3;
  Hasher.init(_seed:)();
  swift_bridgeObjectRetain();
  String.hash(into:)();
  Swift::Int v8 = Hasher._finalize()();
  uint64_t v9 = -1 << *(unsigned char *)(v7 + 32);
  unint64_t v10 = v8 & ~v9;
  if ((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10))
  {
    uint64_t v11 = *(void *)(v7 + 48);
    uint64_t v12 = (void *)(v11 + 16 * v10);
    BOOL v13 = *v12 == a2 && v12[1] == a3;
    if (v13 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      int64_t v14 = (Swift::Int *)(*(void *)(*v3 + 48) + 16 * v10);
      Swift::Int v15 = v14[1];
      *a1 = *v14;
      a1[1] = v15;
      swift_bridgeObjectRetain();
      return 0;
    }
    uint64_t v17 = ~v9;
    while (1)
    {
      unint64_t v10 = (v10 + 1) & v17;
      if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
        break;
      }
      uint64_t v18 = (void *)(v11 + 16 * v10);
      BOOL v19 = *v18 == a2 && v18[1] == a3;
      if (v19 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
        goto LABEL_7;
      }
    }
  }
  swift_bridgeObjectRelease();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v21 = *v3;
  *int v3 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  sub_1000BC8E4(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  *int v3 = v21;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t sub_1000BBC24(uint64_t *a1, uint64_t a2)
{
  int v3 = v2;
  uint64_t v6 = *v2;
  uint64_t v7 = static Hasher._hash(seed:_:)();
  uint64_t v8 = -1 << *(unsigned char *)(v6 + 32);
  unint64_t v9 = v7 & ~v8;
  if (((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
  {
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v14 = *v3;
    *int v3 = 0x8000000000000000;
    sub_1000BCA80(a2, v9, isUniquelyReferenced_nonNull_native);
    *int v3 = v14;
    swift_bridgeObjectRelease();
    uint64_t result = 1;
    goto LABEL_8;
  }
  uint64_t v10 = *(void *)(v6 + 48);
  if (*(void *)(v10 + 8 * v9) != a2)
  {
    uint64_t v11 = ~v8;
    do
    {
      unint64_t v9 = (v9 + 1) & v11;
      if (((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
        goto LABEL_7;
      }
    }
    while (*(void *)(v10 + 8 * v9) != a2);
  }
  uint64_t result = 0;
LABEL_8:
  *a1 = a2;
  return result;
}

uint64_t sub_1000BBD20()
{
  id v1 = v0;
  uint64_t v42 = type metadata accessor for Calendar.Component();
  uint64_t v2 = *(void *)(v42 - 8);
  __chkstk_darwin(v42);
  char v41 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *v0;
  sub_10001644C(&qword_1005A5CE8);
  uint64_t v5 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v6 = v5;
  if (*(void *)(v4 + 16))
  {
    uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
    uint64_t v8 = *(void *)(v4 + 56);
    uint64_t v37 = (void *)(v4 + 56);
    if (v7 < 64) {
      uint64_t v9 = ~(-1 << v7);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & v8;
    uint64_t v35 = v0;
    int64_t v36 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v39 = v2;
    uint64_t v11 = v5 + 56;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    uint64_t v38 = v6;
    uint64_t v14 = v41;
    uint64_t v15 = v42;
    while (1)
    {
      if (v10)
      {
        unint64_t v17 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        int64_t v40 = v13;
        unint64_t v18 = v17 | (v13 << 6);
      }
      else
      {
        int64_t v19 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v19 >= v36) {
          goto LABEL_33;
        }
        unint64_t v20 = v37[v19];
        int64_t v21 = v13 + 1;
        if (!v20)
        {
          int64_t v21 = v13 + 2;
          if (v13 + 2 >= v36) {
            goto LABEL_33;
          }
          unint64_t v20 = v37[v21];
          if (!v20)
          {
            int64_t v21 = v13 + 3;
            if (v13 + 3 >= v36) {
              goto LABEL_33;
            }
            unint64_t v20 = v37[v21];
            if (!v20)
            {
              uint64_t v22 = v13 + 4;
              if (v13 + 4 >= v36)
              {
LABEL_33:
                swift_release();
                id v1 = v35;
                uint64_t v34 = 1 << *(unsigned char *)(v4 + 32);
                if (v34 > 63) {
                  bzero(v37, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v37 = -1 << v34;
                }
                *(void *)(v4 + 16) = 0;
                break;
              }
              unint64_t v20 = v37[v22];
              if (!v20)
              {
                while (1)
                {
                  int64_t v21 = v22 + 1;
                  if (__OFADD__(v22, 1)) {
                    goto LABEL_39;
                  }
                  if (v21 >= v36) {
                    goto LABEL_33;
                  }
                  unint64_t v20 = v37[v21];
                  ++v22;
                  if (v20) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v21 = v13 + 4;
            }
          }
        }
LABEL_23:
        unint64_t v10 = (v20 - 1) & v20;
        int64_t v40 = v21;
        unint64_t v18 = __clz(__rbit64(v20)) + (v21 << 6);
      }
      uint64_t v23 = v4;
      uint64_t v24 = *(void *)(v4 + 48);
      uint64_t v25 = *(void *)(v39 + 72);
      id v26 = *(void (**)(char *, unint64_t, uint64_t))(v39 + 32);
      v26(v14, v24 + v25 * v18, v15);
      uint64_t v6 = v38;
      sub_1000C0380(&qword_1005A5CD8);
      uint64_t result = dispatch thunk of Hashable._rawHashValue(seed:)();
      uint64_t v27 = -1 << *(unsigned char *)(v6 + 32);
      unint64_t v28 = result & ~v27;
      unint64_t v29 = v28 >> 6;
      if (((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v30 = 0;
        unint64_t v31 = (unint64_t)(63 - v27) >> 6;
        do
        {
          if (++v29 == v31 && (v30 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v32 = v29 == v31;
          if (v29 == v31) {
            unint64_t v29 = 0;
          }
          v30 |= v32;
          uint64_t v33 = *(void *)(v11 + 8 * v29);
        }
        while (v33 == -1);
        unint64_t v16 = __clz(__rbit64(~v33)) + (v29 << 6);
      }
      *(void *)(v11 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v26)(*(void *)(v6 + 48) + v16 * v25, v41, v42);
      ++*(void *)(v6 + 16);
      uint64_t v4 = v23;
      int64_t v13 = v40;
    }
  }
  uint64_t result = swift_release();
  uint64_t *v1 = v6;
  return result;
}

uint64_t sub_1000BC108()
{
  id v1 = v0;
  uint64_t v2 = *v0;
  sub_10001644C(&qword_1005A5D30);
  uint64_t v3 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    char v30 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v8 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v9 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v11 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v14 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v15 = v14 | (v11 << 6);
      }
      else
      {
        int64_t v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v8) {
          goto LABEL_33;
        }
        unint64_t v17 = v30[v16];
        ++v11;
        if (!v17)
        {
          int64_t v11 = v16 + 1;
          if (v16 + 1 >= v8) {
            goto LABEL_33;
          }
          unint64_t v17 = v30[v11];
          if (!v17)
          {
            int64_t v11 = v16 + 2;
            if (v16 + 2 >= v8) {
              goto LABEL_33;
            }
            unint64_t v17 = v30[v11];
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v8)
              {
LABEL_33:
                swift_release();
                id v1 = v0;
                uint64_t v29 = 1 << *(unsigned char *)(v2 + 32);
                if (v29 > 63) {
                  bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *char v30 = -1 << v29;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v17 = v30[v18];
              if (!v17)
              {
                while (1)
                {
                  int64_t v11 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_39;
                  }
                  if (v11 >= v8) {
                    goto LABEL_33;
                  }
                  unint64_t v17 = v30[v11];
                  ++v18;
                  if (v17) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v11 = v18;
            }
          }
        }
LABEL_23:
        unint64_t v7 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
      }
      int64_t v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
      uint64_t v20 = *v19;
      uint64_t v21 = v19[1];
      Hasher.init(_seed:)();
      String.hash(into:)();
      uint64_t result = Hasher._finalize()();
      uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v27 = v24 == v26;
          if (v24 == v26) {
            unint64_t v24 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v9 + 8 * v24);
        }
        while (v28 == -1);
        unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      int64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
      *int64_t v13 = v20;
      v13[1] = v21;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  uint64_t *v1 = v4;
  return result;
}

uint64_t sub_1000BC3E8()
{
  id v1 = v0;
  uint64_t v2 = *v0;
  sub_10001644C(&qword_1005A5D18);
  uint64_t result = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v4 = result;
  if (*(void *)(v2 + 16))
  {
    int64_t v5 = 0;
    uint64_t v6 = (uint64_t *)(v2 + 56);
    uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v26 = -1 << v7;
    BOOL v27 = v1;
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v9 = v8 & *(void *)(v2 + 56);
    uint64_t v28 = 1 << *(unsigned char *)(v2 + 32);
    int64_t v10 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v11 = result + 56;
    while (1)
    {
      if (v9)
      {
        unint64_t v13 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        unint64_t v14 = v13 | (v5 << 6);
      }
      else
      {
        int64_t v15 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v10) {
          goto LABEL_33;
        }
        unint64_t v16 = v6[v15];
        ++v5;
        if (!v16)
        {
          int64_t v5 = v15 + 1;
          if (v15 + 1 >= v10) {
            goto LABEL_33;
          }
          unint64_t v16 = v6[v5];
          if (!v16)
          {
            int64_t v5 = v15 + 2;
            if (v15 + 2 >= v10) {
              goto LABEL_33;
            }
            unint64_t v16 = v6[v5];
            if (!v16)
            {
              int64_t v17 = v15 + 3;
              if (v17 >= v10)
              {
LABEL_33:
                if (v28 >= 64) {
                  bzero((void *)(v2 + 56), 8 * v10);
                }
                else {
                  *uint64_t v6 = v26;
                }
                id v1 = v27;
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v16 = v6[v17];
              if (!v16)
              {
                while (1)
                {
                  int64_t v5 = v17 + 1;
                  if (__OFADD__(v17, 1)) {
                    goto LABEL_39;
                  }
                  if (v5 >= v10) {
                    goto LABEL_33;
                  }
                  unint64_t v16 = v6[v5];
                  ++v17;
                  if (v16) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v5 = v17;
            }
          }
        }
LABEL_23:
        unint64_t v9 = (v16 - 1) & v16;
        unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
      }
      uint64_t v18 = *(void *)(*(void *)(v2 + 48) + 8 * v14);
      uint64_t result = static Hasher._hash(seed:_:)();
      uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v20 = result & ~v19;
      unint64_t v21 = v20 >> 6;
      if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v22 = 0;
        unint64_t v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v24 = v21 == v23;
          if (v21 == v23) {
            unint64_t v21 = 0;
          }
          v22 |= v24;
          uint64_t v25 = *(void *)(v11 + 8 * v21);
        }
        while (v25 == -1);
        unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      *(void *)(*(void *)(v4 + 48) + 8 * v12) = v18;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  uint64_t *v1 = v4;
  return result;
}

uint64_t sub_1000BC66C(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v31 = a1;
  uint64_t v6 = type metadata accessor for Calendar.Component();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  unint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v10 = *(void *)(*v3 + 16);
  unint64_t v11 = *(void *)(*v3 + 24);
  uint64_t v28 = v3;
  uint64_t v29 = v7;
  if (v11 > v10 && (a3 & 1) != 0) {
    goto LABEL_12;
  }
  if (a3)
  {
    sub_1000BBD20();
  }
  else
  {
    if (v11 > v10)
    {
      sub_1000BCBA4();
      goto LABEL_12;
    }
    sub_1000BD194();
  }
  uint64_t v12 = *v3;
  sub_1000C0380(&qword_1005A5CD8);
  uint64_t v13 = dispatch thunk of Hashable._rawHashValue(seed:)();
  uint64_t v14 = -1 << *(unsigned char *)(v12 + 32);
  a2 = v13 & ~v14;
  uint64_t v30 = v12;
  uint64_t v15 = v12 + 56;
  if ((*(void *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v16 = ~v14;
    uint64_t v19 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    uint64_t v18 = v7 + 16;
    int64_t v17 = v19;
    uint64_t v20 = *(void *)(v18 + 56);
    do
    {
      v17(v9, *(void *)(v30 + 48) + v20 * a2, v6);
      sub_1000C0380(&qword_1005A5CE0);
      char v21 = dispatch thunk of static Equatable.== infix(_:_:)();
      (*(void (**)(char *, uint64_t))(v18 - 8))(v9, v6);
      if (v21) {
        goto LABEL_15;
      }
      a2 = (a2 + 1) & v16;
    }
    while (((*(void *)(v15 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  uint64_t v22 = v29;
  uint64_t v23 = *v28;
  *(void *)(v23 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v22 + 32))(*(void *)(v23 + 48) + *(void *)(v22 + 72) * a2, v31, v6);
  uint64_t v25 = *(void *)(v23 + 16);
  BOOL v26 = __OFADD__(v25, 1);
  uint64_t v27 = v25 + 1;
  if (!v26)
  {
    *(void *)(v23 + 16) = v27;
    return result;
  }
  __break(1u);
LABEL_15:
  uint64_t result = ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

Swift::Int sub_1000BC8E4(Swift::Int result, Swift::Int a2, unint64_t a3, char a4)
{
  int64_t v5 = v4;
  Swift::Int v8 = result;
  unint64_t v9 = *(void *)(*v4 + 16);
  unint64_t v10 = *(void *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0) {
    goto LABEL_22;
  }
  if (a4)
  {
    sub_1000BC108();
  }
  else
  {
    if (v10 > v9)
    {
      uint64_t result = (Swift::Int)sub_1000BCE48();
      goto LABEL_22;
    }
    sub_1000BD530();
  }
  uint64_t v11 = *v4;
  Hasher.init(_seed:)();
  String.hash(into:)();
  uint64_t result = Hasher._finalize()();
  uint64_t v12 = -1 << *(unsigned char *)(v11 + 32);
  a3 = result & ~v12;
  uint64_t v13 = v11 + 56;
  if ((*(void *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3))
  {
    uint64_t v14 = *(void *)(v11 + 48);
    uint64_t v15 = (void *)(v14 + 16 * a3);
    BOOL v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (uint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)(), (result & 1) != 0))
    {
LABEL_21:
      uint64_t result = ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
      __break(1u);
    }
    else
    {
      uint64_t v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(void *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3) & 1) == 0) {
          break;
        }
        uint64_t v18 = (void *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          uint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)();
          if ((result & 1) == 0) {
            continue;
          }
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  uint64_t v20 = *v5;
  *(void *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  char v21 = (Swift::Int *)(*(void *)(v20 + 48) + 16 * a3);
  Swift::Int *v21 = v8;
  v21[1] = a2;
  uint64_t v22 = *(void *)(v20 + 16);
  BOOL v23 = __OFADD__(v22, 1);
  uint64_t v24 = v22 + 1;
  if (v23) {
    __break(1u);
  }
  else {
    *(void *)(v20 + 16) = v24;
  }
  return result;
}

uint64_t sub_1000BCA80(uint64_t result, unint64_t a2, char a3)
{
  uint64_t v5 = result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  if (a3)
  {
    sub_1000BC3E8();
  }
  else
  {
    if (v7 > v6)
    {
      uint64_t result = (uint64_t)sub_1000BCFFC();
      goto LABEL_14;
    }
    sub_1000BD7E0();
  }
  uint64_t v8 = *v3;
  uint64_t result = static Hasher._hash(seed:_:)();
  uint64_t v9 = -1 << *(unsigned char *)(v8 + 32);
  a2 = result & ~v9;
  if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v10 = *(void *)(v8 + 48);
    if (*(void *)(v10 + 8 * a2) == v5)
    {
LABEL_13:
      uint64_t result = ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
      __break(1u);
    }
    else
    {
      uint64_t v11 = ~v9;
      while (1)
      {
        a2 = (a2 + 1) & v11;
        if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        if (*(void *)(v10 + 8 * a2) == v5) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v12 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v12 + 48) + 8 * a2) = v5;
  uint64_t v13 = *(void *)(v12 + 16);
  BOOL v14 = __OFADD__(v13, 1);
  uint64_t v15 = v13 + 1;
  if (v14) {
    __break(1u);
  }
  else {
    *(void *)(v12 + 16) = v15;
  }
  return result;
}

void *sub_1000BCBA4()
{
  id v1 = v0;
  uint64_t v2 = type metadata accessor for Calendar.Component();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001644C(&qword_1005A5CE8);
  uint64_t v6 = *v0;
  uint64_t v7 = static _SetStorage.copy(original:)();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = (void *)swift_release();
LABEL_27:
    uint64_t *v1 = v8;
    return result;
  }
  uint64_t v22 = v1;
  uint64_t result = (void *)(v7 + 56);
  unint64_t v10 = (unint64_t)((1 << *(unsigned char *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v6 + 56 + 8 * v10) {
    uint64_t result = memmove(result, (const void *)(v6 + 56), 8 * v10);
  }
  uint64_t v23 = v6 + 56;
  int64_t v11 = 0;
  *(void *)(v8 + 16) = *(void *)(v6 + 16);
  uint64_t v12 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & *(void *)(v6 + 56);
  int64_t v24 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      unint64_t v15 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v16 = v15 | (v11 << 6);
      goto LABEL_9;
    }
    int64_t v18 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    if (v18 >= v24) {
      goto LABEL_25;
    }
    unint64_t v19 = *(void *)(v23 + 8 * v18);
    ++v11;
    if (!v19)
    {
      int64_t v11 = v18 + 1;
      if (v18 + 1 >= v24) {
        goto LABEL_25;
      }
      unint64_t v19 = *(void *)(v23 + 8 * v11);
      if (!v19)
      {
        int64_t v11 = v18 + 2;
        if (v18 + 2 >= v24) {
          goto LABEL_25;
        }
        unint64_t v19 = *(void *)(v23 + 8 * v11);
        if (!v19) {
          break;
        }
      }
    }
LABEL_24:
    unint64_t v14 = (v19 - 1) & v19;
    unint64_t v16 = __clz(__rbit64(v19)) + (v11 << 6);
LABEL_9:
    unint64_t v17 = *(void *)(v3 + 72) * v16;
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v5, *(void *)(v6 + 48) + v17, v2);
    uint64_t result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(void *)(v8 + 48) + v17, v5, v2);
  }
  int64_t v20 = v18 + 3;
  if (v20 >= v24)
  {
LABEL_25:
    uint64_t result = (void *)swift_release();
    id v1 = v22;
    goto LABEL_27;
  }
  unint64_t v19 = *(void *)(v23 + 8 * v20);
  if (v19)
  {
    int64_t v11 = v20;
    goto LABEL_24;
  }
  while (1)
  {
    int64_t v11 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v11 >= v24) {
      goto LABEL_25;
    }
    unint64_t v19 = *(void *)(v23 + 8 * v11);
    ++v20;
    if (v19) {
      goto LABEL_24;
    }
  }
LABEL_29:
  __break(1u);
  return result;
}

void *sub_1000BCE48()
{
  id v1 = v0;
  sub_10001644C(&qword_1005A5D30);
  uint64_t v2 = *v0;
  uint64_t v3 = static _SetStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21)
      {
        int64_t v9 = v20 + 2;
        if (v20 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v21 = *(void *)(v6 + 8 * v9);
        if (!v21) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    unint64_t v17 = (void *)(*(void *)(v2 + 48) + v16);
    uint64_t v18 = v17[1];
    unint64_t v19 = (void *)(*(void *)(v4 + 48) + v16);
    *unint64_t v19 = *v17;
    v19[1] = v18;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v13) {
    goto LABEL_28;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1000BCFFC()
{
  id v1 = v0;
  sub_10001644C(&qword_1005A5D18);
  uint64_t v2 = *v0;
  uint64_t v3 = static _SetStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      int64_t v9 = v16 + 1;
      if (v16 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v9);
      if (!v17)
      {
        int64_t v9 = v16 + 2;
        if (v16 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v9);
        if (!v17) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(void *)(*(void *)(v4 + 48) + 8 * v15) = *(void *)(*(void *)(v2 + 48) + 8 * v15);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v13) {
    goto LABEL_28;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v9);
    ++v18;
    if (v17) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1000BD194()
{
  id v1 = v0;
  uint64_t v2 = type metadata accessor for Calendar.Component();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v0;
  sub_10001644C(&qword_1005A5CE8);
  uint64_t v7 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    uint64_t *v1 = v8;
    return result;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v10 = *(void *)(v6 + 56);
  uint64_t v34 = v0;
  uint64_t v35 = v6 + 56;
  if (v9 < 64) {
    uint64_t v11 = ~(-1 << v9);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & v10;
  int64_t v36 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v37 = v3 + 16;
  uint64_t v13 = v7 + 56;
  uint64_t v38 = v3;
  unint64_t v14 = (uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32);
  uint64_t result = swift_retain();
  int64_t v16 = 0;
  while (1)
  {
    if (v12)
    {
      unint64_t v18 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v19 = v18 | (v16 << 6);
      goto LABEL_24;
    }
    int64_t v20 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v20 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v20);
    ++v16;
    if (!v21)
    {
      int64_t v16 = v20 + 1;
      if (v20 + 1 >= v36) {
        goto LABEL_33;
      }
      unint64_t v21 = *(void *)(v35 + 8 * v16);
      if (!v21)
      {
        int64_t v16 = v20 + 2;
        if (v20 + 2 >= v36) {
          goto LABEL_33;
        }
        unint64_t v21 = *(void *)(v35 + 8 * v16);
        if (!v21) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v19 = __clz(__rbit64(v21)) + (v16 << 6);
LABEL_24:
    uint64_t v23 = v6;
    uint64_t v24 = *(void *)(v6 + 48);
    uint64_t v25 = *(void *)(v38 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v38 + 16))(v5, v24 + v25 * v19, v2);
    sub_1000C0380(&qword_1005A5CD8);
    uint64_t result = dispatch thunk of Hashable._rawHashValue(seed:)();
    uint64_t v26 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v27 = result & ~v26;
    unint64_t v28 = v27 >> 6;
    if (((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v29 = 0;
      unint64_t v30 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v31 = v28 == v30;
        if (v28 == v30) {
          unint64_t v28 = 0;
        }
        v29 |= v31;
        uint64_t v32 = *(void *)(v13 + 8 * v28);
      }
      while (v32 == -1);
      unint64_t v17 = __clz(__rbit64(~v32)) + (v28 << 6);
    }
    *(void *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t result = (*v14)(*(void *)(v8 + 48) + v17 * v25, v5, v2);
    ++*(void *)(v8 + 16);
    uint64_t v6 = v23;
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v36)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    id v1 = v34;
    goto LABEL_35;
  }
  unint64_t v21 = *(void *)(v35 + 8 * v22);
  if (v21)
  {
    int64_t v16 = v22;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v16 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v16 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v16);
    ++v22;
    if (v21) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1000BD530()
{
  id v1 = v0;
  uint64_t v2 = *v0;
  sub_10001644C(&qword_1005A5D30);
  uint64_t v3 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v29 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v9 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v11 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v15 = v14 | (v11 << 6);
      goto LABEL_24;
    }
    int64_t v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v11;
    if (!v17)
    {
      int64_t v11 = v16 + 1;
      if (v16 + 1 >= v29) {
        goto LABEL_33;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v11);
      if (!v17)
      {
        int64_t v11 = v16 + 2;
        if (v16 + 2 >= v29) {
          goto LABEL_33;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v11);
        if (!v17) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_24:
    unint64_t v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v20 = *v19;
    uint64_t v21 = v19[1];
    Hasher.init(_seed:)();
    swift_bridgeObjectRetain();
    String.hash(into:)();
    uint64_t result = Hasher._finalize()();
    uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v27 = v24 == v26;
        if (v24 == v26) {
          unint64_t v24 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v9 + 8 * v24);
      }
      while (v28 == -1);
      unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    uint64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
    *uint64_t v13 = v20;
    v13[1] = v21;
    ++*(void *)(v4 + 16);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v29)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    id v1 = v0;
    goto LABEL_35;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v11 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v11 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v11 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v11);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1000BD7E0()
{
  id v1 = v0;
  uint64_t v2 = *v0;
  sub_10001644C(&qword_1005A5D18);
  uint64_t result = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v4 = result;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    uint64_t *v1 = v4;
    return result;
  }
  unint64_t v26 = v1;
  int64_t v5 = 0;
  uint64_t v6 = v2 + 56;
  uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(v2 + 56);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      unint64_t v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v14 = v13 | (v5 << 6);
      goto LABEL_24;
    }
    int64_t v15 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v10) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v15);
    ++v5;
    if (!v16)
    {
      int64_t v5 = v15 + 1;
      if (v15 + 1 >= v10) {
        goto LABEL_33;
      }
      unint64_t v16 = *(void *)(v6 + 8 * v5);
      if (!v16)
      {
        int64_t v5 = v15 + 2;
        if (v15 + 2 >= v10) {
          goto LABEL_33;
        }
        unint64_t v16 = *(void *)(v6 + 8 * v5);
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v9 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_24:
    uint64_t v18 = *(void *)(*(void *)(v2 + 48) + 8 * v14);
    uint64_t result = static Hasher._hash(seed:_:)();
    uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v20 = result & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v22 = 0;
      unint64_t v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v24 = v21 == v23;
        if (v21 == v23) {
          unint64_t v21 = 0;
        }
        v22 |= v24;
        uint64_t v25 = *(void *)(v11 + 8 * v21);
      }
      while (v25 == -1);
      unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(void *)(*(void *)(v4 + 48) + 8 * v12) = v18;
    ++*(void *)(v4 + 16);
  }
  int64_t v17 = v15 + 3;
  if (v17 >= v10)
  {
LABEL_33:
    uint64_t result = swift_release();
    id v1 = v26;
    goto LABEL_35;
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16)
  {
    int64_t v5 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v5 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v5 >= v10) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v5);
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1000BDA44@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = a1 + 40;
  uint64_t v3 = a2 + 40;
  sub_100035E00(a1, a2);
  return sub_100031C38(v2, v3);
}

uint64_t sub_1000BDA88(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t *a5)
{
  uint64_t v7 = -1 << *(unsigned char *)(a1 + 32);
  uint64_t v8 = ~v7;
  uint64_t v9 = *(void *)(a1 + 64);
  uint64_t v10 = -v7;
  uint64_t v40 = a1;
  uint64_t v41 = a1 + 64;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  else {
    uint64_t v11 = -1;
  }
  uint64_t v42 = v8;
  uint64_t v43 = 0;
  uint64_t v44 = v11 & v9;
  uint64_t v45 = a2;
  uint64_t v46 = a3;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1000BDFE4((uint64_t)&v36);
  if (!*((void *)&v37 + 1))
  {
LABEL_19:
    swift_release();
    swift_bridgeObjectRelease();
    sub_100035EBC();
    return swift_release();
  }
  while (1)
  {
    long long v33 = v36;
    long long v34 = v37;
    uint64_t v35 = v38;
    sub_10000C948(&v39, v32);
    uint64_t v13 = *a5;
    unint64_t v15 = sub_100049A08((uint64_t)&v33);
    uint64_t v16 = *(void *)(v13 + 16);
    BOOL v17 = (v14 & 1) == 0;
    uint64_t v18 = v16 + v17;
    if (__OFADD__(v16, v17)) {
      break;
    }
    char v19 = v14;
    if (*(void *)(v13 + 24) >= v18)
    {
      if (a4)
      {
        if (v14) {
          goto LABEL_6;
        }
      }
      else
      {
        sub_1000D4054();
        if (v19) {
          goto LABEL_6;
        }
      }
    }
    else
    {
      sub_1000D17AC(v18, a4 & 1);
      unint64_t v20 = sub_100049A08((uint64_t)&v33);
      if ((v19 & 1) != (v21 & 1)) {
        goto LABEL_22;
      }
      unint64_t v15 = v20;
      if (v19)
      {
LABEL_6:
        sub_100031C38(*(void *)(*a5 + 56) + 32 * v15, (uint64_t)v30);
        sub_100031C38((uint64_t)v30, (uint64_t)v31);
        sub_10002E618((uint64_t)v30);
        sub_10002E618((uint64_t)v32);
        sub_10004C8A0((uint64_t)&v33);
        unint64_t v12 = (_OWORD *)(*(void *)(*a5 + 56) + 32 * v15);
        sub_10002E618((uint64_t)v12);
        sub_10000C948(v31, v12);
        goto LABEL_7;
      }
    }
    char v22 = (void *)*a5;
    *(void *)(*a5 + 8 * (v15 >> 6) + 64) |= 1 << v15;
    uint64_t v23 = v22[6] + 40 * v15;
    long long v24 = v33;
    long long v25 = v34;
    *(void *)(v23 + 32) = v35;
    *(_OWORD *)uint64_t v23 = v24;
    *(_OWORD *)(v23 + 16) = v25;
    sub_10000C948(v32, (_OWORD *)(v22[7] + 32 * v15));
    uint64_t v26 = v22[2];
    BOOL v27 = __OFADD__(v26, 1);
    uint64_t v28 = v26 + 1;
    if (v27) {
      goto LABEL_21;
    }
    v22[2] = v28;
LABEL_7:
    sub_1000BDFE4((uint64_t)&v36);
    a4 = 1;
    if (!*((void *)&v37 + 1)) {
      goto LABEL_19;
    }
  }
  __break(1u);
LABEL_21:
  __break(1u);
LABEL_22:
  uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

void sub_1000BDD04()
{
  void (*v6)(uint64_t *__return_ptr, id *);
  uint64_t v7;
  id v8;

  uint64_t v2 = *v0;
  unint64_t v1 = v0[1];
  if (!((unint64_t)*v0 >> 62))
  {
    if (v1 == *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      return;
    }
LABEL_5:
    if ((v2 & 0xC000000000000001) == 0)
    {
      if ((v1 & 0x8000000000000000) != 0)
      {
        __break(1u);
      }
      else if (v1 < *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        id v4 = *(id *)(v2 + 8 * v1 + 32);
        goto LABEL_9;
      }
      __break(1u);
LABEL_14:
      __break(1u);
      return;
    }
    id v4 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_9:
    int64_t v5 = v4;
    if (!__OFADD__(v1, 1))
    {
      v0[1] = v1 + 1;
      uint64_t v6 = (void (*)(uint64_t *__return_ptr, id *))v0[2];
      uint64_t v8 = v4;
      v6(&v7, &v8);

      return;
    }
    goto LABEL_14;
  }
  swift_bridgeObjectRetain();
  uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (v1 != v3) {
    goto LABEL_5;
  }
}

uint64_t sub_1000BDDF8@<X0>(_OWORD *a1@<X8>)
{
  uint64_t v3 = *v1;
  uint64_t v4 = v1[1];
  uint64_t v6 = v1[2];
  int64_t v5 = v1[3];
  int64_t v7 = v5;
  unint64_t v8 = v1[4];
  if (v8)
  {
    uint64_t v9 = (v8 - 1) & v8;
    unint64_t v10 = __clz(__rbit64(v8)) | (v5 << 6);
LABEL_3:
    uint64_t v11 = (uint64_t *)(*(void *)(v3 + 48) + 16 * v10);
    uint64_t v13 = *v11;
    uint64_t v12 = v11[1];
    sub_100031C38(*(void *)(v3 + 56) + 32 * v10, (uint64_t)v24);
    *(void *)&long long v23 = v13;
    *((void *)&v23 + 1) = v12;
    swift_bridgeObjectRetain();
    goto LABEL_23;
  }
  int64_t v14 = v5 + 1;
  if (__OFADD__(v5, 1))
  {
    __break(1u);
    return result;
  }
  int64_t v15 = (unint64_t)(v6 + 64) >> 6;
  if (v14 < v15)
  {
    unint64_t v16 = *(void *)(v4 + 8 * v14);
    if (v16)
    {
LABEL_7:
      uint64_t v9 = (v16 - 1) & v16;
      unint64_t v10 = __clz(__rbit64(v16)) + (v14 << 6);
      int64_t v7 = v14;
      goto LABEL_3;
    }
    int64_t v17 = v5 + 2;
    int64_t v7 = v5 + 1;
    if (v5 + 2 < v15)
    {
      unint64_t v16 = *(void *)(v4 + 8 * v17);
      if (v16)
      {
LABEL_10:
        int64_t v14 = v17;
        goto LABEL_7;
      }
      int64_t v7 = v5 + 2;
      if (v5 + 3 < v15)
      {
        unint64_t v16 = *(void *)(v4 + 8 * (v5 + 3));
        if (v16)
        {
          int64_t v14 = v5 + 3;
          goto LABEL_7;
        }
        int64_t v17 = v5 + 4;
        int64_t v7 = v5 + 3;
        if (v5 + 4 < v15)
        {
          unint64_t v16 = *(void *)(v4 + 8 * v17);
          if (v16) {
            goto LABEL_10;
          }
          int64_t v14 = v5 + 5;
          int64_t v7 = v5 + 4;
          if (v5 + 5 < v15)
          {
            unint64_t v16 = *(void *)(v4 + 8 * v14);
            if (v16) {
              goto LABEL_7;
            }
            int64_t v7 = v15 - 1;
            int64_t v18 = v5 + 6;
            while (v15 != v18)
            {
              unint64_t v16 = *(void *)(v4 + 8 * v18++);
              if (v16)
              {
                int64_t v14 = v18 - 1;
                goto LABEL_7;
              }
            }
          }
        }
      }
    }
  }
  uint64_t v9 = 0;
  memset(v24, 0, sizeof(v24));
  long long v23 = 0u;
LABEL_23:
  uint64_t *v1 = v3;
  v1[1] = v4;
  v1[2] = v6;
  v1[3] = v7;
  v1[4] = v9;
  char v19 = (void (*)(_OWORD *))v1[5];
  uint64_t result = sub_100030134((uint64_t)&v23, (uint64_t)v22, &qword_1005A5840);
  if (*((void *)&v22[0] + 1))
  {
    v21[0] = v22[0];
    v21[1] = v22[1];
    v21[2] = v22[2];
    v19(v21);
    return sub_100016714((uint64_t)v21, (uint64_t *)&unk_1005A5848);
  }
  else
  {
    a1[1] = 0u;
    a1[2] = 0u;
    *a1 = 0u;
  }
  return result;
}

uint64_t sub_1000BDFE4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1;
  uint64_t v4 = v1[1];
  uint64_t v6 = v1[2];
  int64_t v5 = v1[3];
  int64_t v7 = v5;
  unint64_t v8 = v1[4];
  if (v8)
  {
    uint64_t v9 = (v8 - 1) & v8;
    unint64_t v10 = __clz(__rbit64(v8)) | (v5 << 6);
LABEL_3:
    sub_100035E00(*(void *)(v3 + 48) + 40 * v10, (uint64_t)v25);
    sub_100031C38(*(void *)(v3 + 56) + 32 * v10, (uint64_t)&v25[2] + 8);
    goto LABEL_23;
  }
  int64_t v11 = v5 + 1;
  if (__OFADD__(v5, 1))
  {
    __break(1u);
    return result;
  }
  int64_t v12 = (unint64_t)(v6 + 64) >> 6;
  if (v11 < v12)
  {
    unint64_t v13 = *(void *)(v4 + 8 * v11);
    if (v13)
    {
LABEL_7:
      uint64_t v9 = (v13 - 1) & v13;
      unint64_t v10 = __clz(__rbit64(v13)) + (v11 << 6);
      int64_t v7 = v11;
      goto LABEL_3;
    }
    int64_t v14 = v5 + 2;
    int64_t v7 = v5 + 1;
    if (v5 + 2 < v12)
    {
      unint64_t v13 = *(void *)(v4 + 8 * v14);
      if (v13)
      {
LABEL_10:
        int64_t v11 = v14;
        goto LABEL_7;
      }
      int64_t v7 = v5 + 2;
      if (v5 + 3 < v12)
      {
        unint64_t v13 = *(void *)(v4 + 8 * (v5 + 3));
        if (v13)
        {
          int64_t v11 = v5 + 3;
          goto LABEL_7;
        }
        int64_t v14 = v5 + 4;
        int64_t v7 = v5 + 3;
        if (v5 + 4 < v12)
        {
          unint64_t v13 = *(void *)(v4 + 8 * v14);
          if (v13) {
            goto LABEL_10;
          }
          int64_t v11 = v5 + 5;
          int64_t v7 = v5 + 4;
          if (v5 + 5 < v12)
          {
            unint64_t v13 = *(void *)(v4 + 8 * v11);
            if (v13) {
              goto LABEL_7;
            }
            int64_t v7 = v12 - 1;
            int64_t v15 = v5 + 6;
            while (v12 != v15)
            {
              unint64_t v13 = *(void *)(v4 + 8 * v15++);
              if (v13)
              {
                int64_t v11 = v15 - 1;
                goto LABEL_7;
              }
            }
          }
        }
      }
    }
  }
  uint64_t v9 = 0;
  uint64_t v26 = 0;
  memset(v25, 0, sizeof(v25));
LABEL_23:
  uint64_t *v1 = v3;
  v1[1] = v4;
  v1[2] = v6;
  v1[3] = v7;
  v1[4] = v9;
  unint64_t v16 = (void (*)(_OWORD *))v1[5];
  uint64_t result = sub_100030134((uint64_t)v25, (uint64_t)&v20, &qword_1005A5CF8);
  if (*((void *)&v21 + 1))
  {
    v18[2] = v22;
    v18[3] = v23;
    uint64_t v19 = v24;
    v18[0] = v20;
    v18[1] = v21;
    v16(v18);
    return sub_100016714((uint64_t)v18, &qword_1005A3C18);
  }
  else
  {
    *(void *)(a1 + 64) = 0;
    *(_OWORD *)(a1 + 32) = 0u;
    *(_OWORD *)(a1 + 48) = 0u;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
  }
  return result;
}

uint64_t sub_1000BE1E8(uint64_t a1)
{
  v24[1] = a1;
  uint64_t v1 = type metadata accessor for Calendar.Component();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = __chkstk_darwin(v1);
  v24[0] = (char *)v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __chkstk_darwin(v3);
  int64_t v7 = (char *)v24 - v6;
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)v24 - v8;
  sub_10001644C(&qword_1005A3C98);
  uint64_t v10 = *(void *)(v2 + 72);
  unint64_t v11 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_100488B30;
  uint64_t v25 = v12;
  unint64_t v13 = v12 + v11;
  int64_t v14 = *(void (**)(unint64_t, void, uint64_t))(v2 + 104);
  v14(v12 + v11, enum case for Calendar.Component.year(_:), v1);
  v14(v13 + v10, enum case for Calendar.Component.month(_:), v1);
  v14(v13 + 2 * v10, enum case for Calendar.Component.day(_:), v1);
  v14(v13 + 3 * v10, enum case for Calendar.Component.hour(_:), v1);
  v14(v13 + 4 * v10, enum case for Calendar.Component.minute(_:), v1);
  v14(v13 + 5 * v10, enum case for Calendar.Component.second(_:), v1);
  uint64_t v15 = v10;
  uint64_t result = ((uint64_t (*)(unint64_t, void, uint64_t))v14)(v13 + 6 * v10, enum case for Calendar.Component.nanosecond(_:), v1);
  unint64_t v17 = 0;
  uint64_t v26 = &_swiftEmptySetSingleton;
  int64_t v18 = (void (**)(char *, unint64_t, uint64_t))(v2 + 16);
  uint64_t v19 = (void (**)(char *, uint64_t))(v2 + 8);
  while (v17 < *(void *)(v25 + 16))
  {
    long long v20 = *v18;
    (*v18)(v9, v13, v1);
    long long v21 = (char *)v24[0];
    v20((char *)v24[0], (unint64_t)v9, v1);
    sub_1000BB778((uint64_t)v7, v21);
    long long v22 = *v19;
    (*v19)(v7, v1);
    LOBYTE(v20) = static Calendar.Component.== infix(_:_:)();
    uint64_t result = ((uint64_t (*)(char *, uint64_t))v22)(v9, v1);
    if ((v20 & 1) == 0)
    {
      v13 += v15;
      if (v17++ != 6) {
        continue;
      }
    }
    swift_bridgeObjectRelease();
    return (uint64_t)v26;
  }
  __break(1u);
  return result;
}

id sub_1000BE50C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_10001644C((uint64_t *)&unk_1005A4E20);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  long long v22 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for Calendar();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = type metadata accessor for DateComponents();
  uint64_t v13 = *(void *)(v23 - 8);
  __chkstk_darwin(v23);
  uint64_t v15 = (char *)&v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Calendar.current.getter();
  sub_1000BE1E8(a2);
  Calendar.dateComponents(_:from:)();
  swift_bridgeObjectRelease();
  unint64_t v16 = *(void (**)(char *, uint64_t))(v10 + 8);
  v16(v12, v9);
  static Calendar.current.getter();
  Calendar.date(from:)();
  v16(v12, v9);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v23);
    sub_100016714((uint64_t)v5, (uint64_t *)&unk_1005A4E20);
    return 0;
  }
  else
  {
    int64_t v18 = v22;
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v22, v5, v6);
    uint64_t v19 = self;
    Class isa = Date._bridgeToObjectiveC()().super.isa;
    id v17 = [v19 serverTimeFromDate:isa];

    (*(void (**)(char *, uint64_t))(v7 + 8))(v18, v6);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v23);
  }
  return v17;
}

uint64_t sub_1000BE868(void *a1)
{
  uint64_t v2 = a1[3];
  uint64_t v3 = a1[4];
  sub_10002FD00(a1, v2);
  if ((*(uint64_t (**)(uint64_t, uint64_t))(v3 + 56))(v2, v3)) {
    return 0;
  }
  uint64_t v4 = a1[3];
  uint64_t v5 = a1[4];
  sub_10002FD00(a1, v4);
  uint64_t v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 80))(v4, v5);
  if (!v6) {
    return 0;
  }
  uint64_t v7 = (void *)v6;
  id v8 = [objc_allocWithZone((Class)AMSMetricsIdentifierStore) init];
  NSString v9 = String._bridgeToObjectiveC()();
  [v8 setDomain:v9];

  self;
  id v10 = sub_10030B11C();
  uint64_t v11 = a1[3];
  uint64_t v12 = a1[4];
  sub_10002FD00(a1, v11);
  double v13 = (*(double (**)(uint64_t, uint64_t))(v12 + 48))(v11, v12);
  double v14 = sub_10030D38C(v10, v7, v13);

  [v8 setResetInterval:v14];
  id v15 = objc_allocWithZone((Class)AMSProcessInfo);
  NSString v16 = String._bridgeToObjectiveC()();
  id v17 = [v15 initWithBundleIdentifier:v16];

  [v8 setClientInfo:v17];
  uint64_t v18 = a1[3];
  uint64_t v19 = a1[4];
  sub_10002FD00(a1, v18);
  if ((*(uint64_t (**)(uint64_t, uint64_t))(v19 + 64))(v18, v19))
  {
    NSString v20 = String._bridgeToObjectiveC()();
    id v21 = [self keyWithName:v20 crossDeviceSync:0];

    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
  }
  uint64_t v22 = a1[3];
  uint64_t v23 = a1[4];
  sub_10002FD00(a1, v22);
  if ((*(uint64_t (**)(uint64_t, uint64_t))(v23 + 72))(v22, v23))
  {
    NSString v24 = String._bridgeToObjectiveC()();
    id v25 = [self keyWithName:v24 crossDeviceSync:1];

    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
  }
  sub_1000C03C4();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v27 = [v8 generateEventFieldsForKeys:isa];

  uint64_t v28 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();
  return v28;
}

void *sub_1000BEC78(void *a1)
{
  uint64_t v77 = type metadata accessor for Locale();
  uint64_t v2 = *(void *)(v77 - 8);
  __chkstk_darwin(v77);
  uint64_t v76 = (char *)&v71 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v75 = sub_10001644C(&qword_1005A5280);
  uint64_t v4 = *(void *)(v75 - 8);
  __chkstk_darwin(v75);
  id v74 = (char *)&v71 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10001644C(&qword_1005A5288);
  __chkstk_darwin(v6 - 8);
  id v8 = (char *)&v71 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = a1[3];
  uint64_t v10 = a1[4];
  uint64_t v81 = a1;
  sub_10002FD00(a1, v9);
  uint64_t v11 = (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 88))(v9, v10);
  uint64_t v12 = v11;
  uint64_t v13 = *(void *)(v11 + 16);
  if (v13)
  {
    uint64_t v73 = v8;
    unint64_t v14 = 0;
    uint64_t v83 = v11 + 32;
    uint64_t v72 = (void (**)(char *, uint64_t))(v2 + 8);
    uint64_t v71 = (void (**)(char *, uint64_t))(v4 + 8);
    id v15 = &_swiftEmptyDictionarySingleton;
    unint64_t v79 = 0x800000010044DEC0;
    NSString v78 = (char *)&type metadata for Any + 8;
    uint64_t v80 = v11;
    uint64_t v82 = v13;
    while (1)
    {
      if (v14 >= *(void *)(v12 + 16))
      {
        __break(1u);
LABEL_64:
        __break(1u);
LABEL_65:
        __break(1u);
LABEL_66:
        __break(1u);
LABEL_67:
        __break(1u);
LABEL_68:
        KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
        __break(1u);
        swift_bridgeObjectRelease();
        __break(1u);
        JUMPOUT(0x1000BF704);
      }
      uint64_t v16 = *(unsigned __int8 *)(v83 + v14++);
      switch(v16)
      {
        case 1:
          id v17 = [self buildVersion];
          goto LABEL_24;
        case 2:
          id v24 = (id)MobileGestalt_get_current_device();
          if (!v24) {
            goto LABEL_67;
          }
          id v25 = v24;
          id v26 = (id)MobileGestalt_copy_productType_obj();

          if (!v26) {
            goto LABEL_25;
          }
          uint64_t v27 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          unint64_t v29 = v28;

          uint64_t v30 = HIBYTE(v29) & 0xF;
          if ((v29 & 0x2000000000000000) == 0) {
            uint64_t v30 = v27 & 0xFFFFFFFFFFFFLL;
          }
          if (v30)
          {
            uint64_t v31 = 4 * v30;
            do
            {
              swift_bridgeObjectRetain();
              String.subscript.getter();
              swift_bridgeObjectRelease();
              char v32 = Character.isNumber.getter();
              swift_bridgeObjectRelease();
            }
            while ((v32 & 1) == 0 && v31 != (unint64_t)String.index(after:)() >> 14);
          }
          String.subscript.getter();
          swift_bridgeObjectRelease();
          uint64_t v49 = static String._fromSubstring(_:)();
          uint64_t v51 = v50;
          swift_bridgeObjectRelease();
          *((void *)&v87 + 1) = &type metadata for String;
          *(void *)&long long v86 = v49;
          *((void *)&v86 + 1) = v51;
          uint64_t v12 = v80;
          uint64_t v13 = v82;
          goto LABEL_35;
        case 3:
          id v33 = (id)MobileGestalt_get_current_device();
          if (!v33) {
            goto LABEL_66;
          }
          long long v34 = v33;
          id v35 = (id)MobileGestalt_copy_productType_obj();

          if (v35)
          {
            uint64_t v36 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            uint64_t v38 = v37;

            *((void *)&v87 + 1) = &type metadata for String;
            *(void *)&long long v86 = v36;
            *((void *)&v86 + 1) = v38;
          }
          else
          {
LABEL_25:
            long long v86 = 0u;
            long long v87 = 0u;
          }
LABEL_35:
          sub_100030134((uint64_t)&v86, (uint64_t)&v89, &qword_1005A5660);
          goto LABEL_36;
        case 4:
          uint64_t v18 = v81[3];
          uint64_t v19 = v81[4];
          sub_10002FD00(v81, v18);
          uint64_t v20 = (*(uint64_t (**)(uint64_t, uint64_t))(v19 + 40))(v18, v19);
          if (!v20)
          {
            long long v90 = 0u;
            long long v89 = 0u;
            uint64_t v13 = v82;
LABEL_32:
            sub_100016714((uint64_t)&v89, &qword_1005A5660);
LABEL_33:
            long long v89 = 0u;
            long long v90 = 0u;
            goto LABEL_36;
          }
          uint64_t v21 = v20;
          *(void *)&v88[0] = 0xD000000000000010;
          *((void *)&v88[0] + 1) = v79;
          AnyHashable.init<A>(_:)();
          uint64_t v13 = v82;
          if (*(void *)(v21 + 16) && (unint64_t v22 = sub_100049A08((uint64_t)&v86), (v23 & 1) != 0))
          {
            sub_100031C38(*(void *)(v21 + 56) + 32 * v22, (uint64_t)&v89);
          }
          else
          {
            long long v90 = 0u;
            long long v89 = 0u;
          }
          swift_bridgeObjectRelease();
          sub_10004C8A0((uint64_t)&v86);
          if (!*((void *)&v90 + 1)) {
            goto LABEL_32;
          }
          if ((swift_dynamicCast() & 1) == 0) {
            goto LABEL_33;
          }
          uint64_t v43 = v76;
          static Locale.current.getter();
          uint64_t v44 = v74;
          static RegexComponent<>.localizedInteger(locale:)();
          (*v72)(v43, v77);
          sub_100090780();
          sub_1000907D4();
          uint64_t v45 = (uint64_t)v73;
          uint64_t v46 = v75;
          BidirectionalCollection<>.firstMatch<A, B>(of:)();
          (*v71)(v44, v46);
          swift_bridgeObjectRelease();
          uint64_t v47 = sub_10001644C(&qword_1005A52A0);
          uint64_t v48 = *(void *)(v47 - 8);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v48 + 48))(v45, 1, v47) == 1)
          {
            sub_100016714(v45, &qword_1005A5288);
            long long v86 = 0u;
            long long v87 = 0u;
          }
          else
          {
            *((void *)&v87 + 1) = &type metadata for Int;
            Regex.Match.output.getter();
            (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v45, v47);
          }
          uint64_t v13 = v82;
          sub_100030134((uint64_t)&v86, (uint64_t)&v89, &qword_1005A5660);
          uint64_t v12 = v80;
LABEL_36:
          sub_10005862C((uint64_t)&v89, (uint64_t)&v86);
          if (*((void *)&v87 + 1))
          {
            sub_10000C948(&v86, v88);
            unint64_t v52 = 0xE200000000000000;
            uint64_t v53 = 29551;
            switch((int)v16)
            {
              case 0:
                break;
              case 1:
                unint64_t v52 = 0xED00007265626D75;
                uint64_t v53 = 0x4E646C697542736FLL;
                break;
              case 2:
                unint64_t v52 = 0xEE00796C696D6146;
                goto LABEL_42;
              case 3:
                unint64_t v52 = 0xED00006C65646F4DLL;
LABEL_42:
                uint64_t v53 = 0x6572617764726168;
                break;
              case 4:
                unint64_t v52 = 0xEC0000006449746ELL;
                uint64_t v53 = 0x6F724665726F7473;
                break;
              default:
                JUMPOUT(0);
            }
            *(void *)&v85[0] = v53;
            *((void *)&v85[0] + 1) = v52;
            AnyHashable.init<A>(_:)();
            sub_100031C38((uint64_t)v88, (uint64_t)v85);
            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            unint64_t v84 = v15;
            unint64_t v56 = sub_100049A08((uint64_t)&v86);
            uint64_t v57 = v15[2];
            BOOL v58 = (v55 & 1) == 0;
            uint64_t v59 = v57 + v58;
            if (__OFADD__(v57, v58)) {
              goto LABEL_64;
            }
            char v60 = v55;
            if (v15[3] >= v59)
            {
              if (isUniquelyReferenced_nonNull_native)
              {
                id v15 = v84;
                if ((v55 & 1) == 0) {
                  goto LABEL_47;
                }
              }
              else
              {
                sub_1000D4054();
                id v15 = v84;
                if ((v60 & 1) == 0) {
                  goto LABEL_47;
                }
              }
            }
            else
            {
              sub_1000D17AC(v59, isUniquelyReferenced_nonNull_native);
              unint64_t v61 = sub_100049A08((uint64_t)&v86);
              if ((v60 & 1) != (v62 & 1)) {
                goto LABEL_68;
              }
              unint64_t v56 = v61;
              id v15 = v84;
              if ((v60 & 1) == 0)
              {
LABEL_47:
                v15[(v56 >> 6) + 8] |= 1 << v56;
                sub_100035E00((uint64_t)&v86, v15[6] + 40 * v56);
                sub_10000C948(v85, (_OWORD *)(v15[7] + 32 * v56));
                uint64_t v63 = v15[2];
                BOOL v64 = __OFADD__(v63, 1);
                uint64_t v65 = v63 + 1;
                if (v64) {
                  goto LABEL_65;
                }
                v15[2] = v65;
                goto LABEL_52;
              }
            }
            uint64_t v66 = (_OWORD *)(v15[7] + 32 * v56);
            sub_10002E618((uint64_t)v66);
            sub_10000C948(v85, v66);
LABEL_52:
            swift_bridgeObjectRelease();
            sub_10004C8A0((uint64_t)&v86);
            sub_10002E618((uint64_t)v88);
            sub_100016714((uint64_t)&v89, &qword_1005A5660);
            if (v14 == v13)
            {
LABEL_58:
              swift_bridgeObjectRelease();
              goto LABEL_60;
            }
          }
          else
          {
            sub_100016714((uint64_t)&v89, &qword_1005A5660);
            sub_100016714((uint64_t)&v86, &qword_1005A5660);
            if (v14 == v13) {
              goto LABEL_58;
            }
          }
          break;
        default:
          id v17 = [self operatingSystem];
LABEL_24:
          id v39 = v17;
          uint64_t v40 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v42 = v41;

          *((void *)&v90 + 1) = &type metadata for String;
          *(void *)&long long v89 = v40;
          *((void *)&v89 + 1) = v42;
          goto LABEL_36;
      }
    }
  }
  swift_bridgeObjectRelease();
  id v15 = &_swiftEmptyDictionarySingleton;
LABEL_60:
  uint64_t v67 = sub_1000BE868(v81);
  if (v67)
  {
    uint64_t v68 = v67;
    char v69 = swift_isUniquelyReferenced_nonNull_native();
    *(void *)&long long v86 = v15;
    sub_1000BDA88(v68, (uint64_t)sub_1000BDA44, 0, v69, (uint64_t *)&v86);
    id v15 = (void *)v86;
    swift_bridgeObjectRelease();
  }
  return v15;
}

uint64_t sub_1000BF72C(void *a1)
{
  uint64_t v2 = type metadata accessor for Logger();
  __chkstk_darwin(v2);
  sub_10002FD00(a1, a1[3]);
  type metadata accessor for DictionaryEncoder();
  uint64_t inited = swift_initStackObject();
  type metadata accessor for JSONEncoder();
  swift_allocObject();
  *(void *)(inited + 16) = JSONEncoder.init()();
  sub_1000372C4();
  swift_release();
  sub_10001644C(&qword_1005A5100);
  if (!swift_dynamicCast()) {
    return 0;
  }
  uint64_t v4 = sub_1000BEC78(a1);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v14[0] = v13;
  sub_1000BDA88((uint64_t)v4, (uint64_t)sub_1000BDA44, 0, isUniquelyReferenced_nonNull_native, v14);
  uint64_t v6 = v14[0];
  swift_bridgeObjectRelease();
  uint64_t v7 = a1[3];
  uint64_t v8 = a1[4];
  sub_10002FD00(a1, v7);
  uint64_t v9 = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 40))(v7, v8);
  if (v9)
  {
    uint64_t v10 = v9;
    char v11 = swift_isUniquelyReferenced_nonNull_native();
    v14[0] = v6;
    sub_1000BDA88(v10, (uint64_t)sub_1000BDA44, 0, v11, v14);
    uint64_t v6 = v14[0];
    swift_bridgeObjectRelease();
  }
  return v6;
}

id sub_1000BFC6C(void *a1)
{
  uint64_t v2 = type metadata accessor for Logger();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v49 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v6 = (id)sub_1000BF72C(a1);
  if (v6)
  {
    static Logger.metrics.getter();
    sub_100040170((uint64_t)a1, (uint64_t)v60);
    sub_100040170((uint64_t)a1, (uint64_t)v57);
    uint64_t v7 = Logger.logObject.getter();
    os_log_type_t v8 = static os_log_type_t.default.getter();
    int v9 = v8;
    if (os_log_type_enabled(v7, v8))
    {
      uint64_t v10 = swift_slowAlloc();
      uint64_t v52 = v3;
      uint64_t v11 = v10;
      uint64_t v12 = (void *)swift_slowAlloc();
      uint64_t v53 = swift_slowAlloc();
      uint64_t v56 = v53;
      *(_DWORD *)uint64_t v11 = 138412546;
      uint64_t v54 = v2;
      uint64_t v14 = v61;
      uint64_t v13 = v62;
      sub_10002FD00(v60, v61);
      id v15 = *(uint64_t (**)(uint64_t, uint64_t))(v13 + 32);
      os_log_t v51 = v7;
      uint64_t v16 = v15(v14, v13);
      uint64_t v55 = v16;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v12 = v16;
      sub_10002E618((uint64_t)v60);
      *(_WORD *)(v11 + 12) = 2082;
      int v50 = v9;
      uint64_t v18 = v58;
      uint64_t v17 = v59;
      sub_10002FD00(v57, v58);
      uint64_t v19 = (*(uint64_t (**)(uint64_t, uint64_t))(v17 + 16))(v18, v17);
      uint64_t v55 = sub_1000F7290(v19, v20, &v56);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_10002E618((uint64_t)v57);
      os_log_t v21 = v51;
      _os_log_impl((void *)&_mh_execute_header, v51, (os_log_type_t)v50, "[%@] Building AMSMetricsEvent for topic: %{public}s", (uint8_t *)v11, 0x16u);
      sub_10001644C((uint64_t *)&unk_1005A3AA0);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v52 + 8))(v5, v54);
    }
    else
    {
      sub_10002E618((uint64_t)v60);
      sub_10002E618((uint64_t)v57);

      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    }
    id v22 = objc_allocWithZone((Class)AMSMetricsEvent);
    Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    id v6 = [v22 initWithUnderlyingDictionary:isa];

    uint64_t v24 = a1[3];
    uint64_t v25 = a1[4];
    sub_10002FD00(a1, v24);
    uint64_t v26 = (*(uint64_t (**)(uint64_t, uint64_t))(v25 + 24))(v24, v25);
    if (v26)
    {
      uint64_t v27 = (void *)v26;
      [v6 setEventTime:v26];
    }
    uint64_t v28 = a1[3];
    uint64_t v29 = a1[4];
    sub_10002FD00(a1, v28);
    (*(void (**)(uint64_t, uint64_t))(v29 + 96))(v28, v29);
    if (v30)
    {
      NSString v31 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v6 setDiagnosticsSubmissionBugType:v31];
    }
    uint64_t v32 = a1[3];
    uint64_t v33 = a1[4];
    sub_10002FD00(a1, v32);
    char v34 = (*(uint64_t (**)(uint64_t, uint64_t))(v33 + 104))(v32, v33);
    if (v34 != 2) {
      [v6 setPreventSampling:v34 & 1];
    }
    [v6 setAnonymous:1];
    uint64_t v35 = a1[3];
    uint64_t v36 = a1[4];
    sub_10002FD00(a1, v35);
    uint64_t v37 = (*(uint64_t (**)(uint64_t, uint64_t))(v36 + 112))(v35, v36);
    if (v37)
    {
      uint64_t v38 = v37;
      int64_t v39 = *(void *)(v37 + 16);
      if (v39)
      {
        v60[0] = _swiftEmptyArrayStorage;
        sub_1000BAF94(0, v39, 0);
        uint64_t v40 = 0;
        uint64_t v41 = (void *)v60[0];
        do
        {
          unint64_t v42 = 0xE300000000000000;
          uint64_t v43 = 7368801;
          switch(*(unsigned char *)(v38 + v40 + 32))
          {
            case 1:
              unint64_t v42 = 0xEA00000000006E6FLL;
              uint64_t v43 = 0x6973726556707061;
              break;
            case 2:
              unint64_t v42 = 0xEB000000006E6F69;
              uint64_t v43 = 0x7372655665736162;
              break;
            case 3:
              unint64_t v42 = 0xEC0000006E6F6973;
              uint64_t v43 = 0x726556746E657665;
              break;
            case 4:
              unint64_t v42 = 0xEE006E6F69737265;
              uint64_t v43 = 0x56646C697542736FLL;
              break;
            case 5:
              unint64_t v42 = 0xE600000000000000;
              uint64_t v43 = 0x656D614E736FLL;
              break;
            case 6:
              unint64_t v42 = 0xE90000000000006ELL;
              uint64_t v43 = 0x6F6973726556736FLL;
              break;
            case 7:
              unint64_t v42 = 0xEE0074657366664FLL;
              uint64_t v43 = 0x656E6F7A656D6974;
              break;
            default:
              break;
          }
          v60[0] = v41;
          unint64_t v45 = v41[2];
          unint64_t v44 = v41[3];
          if (v45 >= v44 >> 1)
          {
            sub_1000BAF94(v44 > 1, v45 + 1, 1);
            uint64_t v41 = (void *)v60[0];
          }
          ++v40;
          v41[2] = v45 + 1;
          uint64_t v46 = &v41[2 * v45];
          v46[4] = v43;
          v46[5] = v42;
        }
        while (v39 != v40);
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
        uint64_t v41 = _swiftEmptyArrayStorage;
      }
      sub_10000C820((uint64_t)v41);
      swift_bridgeObjectRelease();
      Class v47 = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      [v6 removePropertiesForKeys:v47];
    }
  }
  return v6;
}

unint64_t sub_1000C0334(Swift::String string)
{
  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_100510B00, v2);
  swift_bridgeObjectRelease();
  if (v3 >= 5) {
    return 5;
  }
  else {
    return v3;
  }
}

uint64_t sub_1000C0380(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for Calendar.Component();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1000C03C4()
{
  unint64_t result = qword_1005A5A08;
  if (!qword_1005A5A08)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1005A5A08);
  }
  return result;
}

void *sub_1000C0404(uint64_t a1)
{
  return sub_1000C0444(a1, (void (*)(BOOL, uint64_t, uint64_t))sub_1000BAF6C);
}

void *sub_1000C0424(uint64_t a1)
{
  return sub_1000C0444(a1, (void (*)(BOOL, uint64_t, uint64_t))sub_1000BAFB4);
}

void *sub_1000C0444(uint64_t a1, void (*a2)(BOOL, uint64_t, uint64_t))
{
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v12 = _swiftEmptyArrayStorage;
  a2(0, v4, 0);
  uint64_t v5 = _swiftEmptyArrayStorage;
  if (v4)
  {
    for (uint64_t i = a1 + 32; ; i += 32)
    {
      sub_100031C38(i, (uint64_t)v11);
      if (!swift_dynamicCast()) {
        break;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        a2(0, v5[2] + 1, 1);
        uint64_t v5 = v12;
      }
      unint64_t v8 = v5[2];
      unint64_t v7 = v5[3];
      if (v8 >= v7 >> 1)
      {
        a2(v7 > 1, v8 + 1, 1);
        uint64_t v5 = v12;
      }
      v5[2] = v8 + 1;
      v5[v8 + 4] = v10;
      if (!--v4) {
        return v5;
      }
    }
    swift_release();
    return 0;
  }
  return v5;
}

void *sub_1000C0598(uint64_t a1)
{
  int64_t v2 = *(void *)(a1 + 16);
  uint64_t v10 = _swiftEmptyArrayStorage;
  sub_1000BAFFC(0, v2, 0);
  unint64_t v3 = _swiftEmptyArrayStorage;
  if (v2)
  {
    for (uint64_t i = a1 + 32; ; i += 32)
    {
      sub_100031C38(i, (uint64_t)v9);
      sub_10001644C(&qword_1005A5E50);
      if (!swift_dynamicCast()) {
        break;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1000BAFFC(0, v3[2] + 1, 1);
        unint64_t v3 = v10;
      }
      unint64_t v6 = v3[2];
      unint64_t v5 = v3[3];
      if (v6 >= v5 >> 1)
      {
        sub_1000BAFFC(v5 > 1, v6 + 1, 1);
        unint64_t v3 = v10;
      }
      v3[2] = v6 + 1;
      v3[v6 + 4] = v8;
      if (!--v2) {
        return v3;
      }
    }
    swift_release();
    swift_bridgeObjectRelease();
    return 0;
  }
  return v3;
}

id sub_1000C06E0()
{
  uint64_t v1 = &v0[OBJC_IVAR____TtC9appstored14MediaAPIUpdate____lazy_storage___updateState];
  if (v0[OBJC_IVAR____TtC9appstored14MediaAPIUpdate____lazy_storage___updateState + 8] != 1) {
    return *(id *)v1;
  }
  NSString v2 = String._bridgeToObjectiveC()();
  id v3 = sub_10026E91C(v0, (uint64_t)v2);

  *(void *)uint64_t v1 = v3;
  v1[8] = 0;
  return v3;
}

id sub_1000C0768()
{
  uint64_t v1 = &v0[OBJC_IVAR____TtC9appstored14MediaAPIUpdate____lazy_storage___itemID];
  if (v0[OBJC_IVAR____TtC9appstored14MediaAPIUpdate____lazy_storage___itemID + 8] != 1) {
    return *(id *)v1;
  }
  NSString v2 = String._bridgeToObjectiveC()();
  id v3 = sub_10026E82C(v0, (uint64_t)v2);

  if (v3)
  {
    id v4 = [v3 longLongValue];
  }
  else
  {
    id v4 = 0;
  }
  *(void *)uint64_t v1 = v4;
  v1[8] = 0;
  return v4;
}

uint64_t sub_1000C0814()
{
  uint64_t v1 = v0;
  NSString v2 = (uint64_t *)&v0[OBJC_IVAR____TtC9appstored14MediaAPIUpdate____lazy_storage___metadata];
  uint64_t v3 = *(void *)&v0[OBJC_IVAR____TtC9appstored14MediaAPIUpdate____lazy_storage___metadata];
  unint64_t v4 = *(void *)&v0[OBJC_IVAR____TtC9appstored14MediaAPIUpdate____lazy_storage___metadata + 8];
  uint64_t v5 = v3;
  if (v4 >> 60 == 11)
  {
    uint64_t v5 = sub_1000C2DC8(v1);
    uint64_t v6 = *v2;
    unint64_t v7 = v2[1];
    *NSString v2 = v5;
    v2[1] = v8;
    sub_100058694(v5, v8);
    sub_1000C4438(v6, v7);
  }
  sub_1000C444C(v3, v4);
  return v5;
}

objc_class *sub_1000C08A8()
{
  uint64_t v1 = OBJC_IVAR____TtC9appstored14MediaAPIUpdate____lazy_storage___evid;
  NSString v2 = *(void **)&v0[OBJC_IVAR____TtC9appstored14MediaAPIUpdate____lazy_storage___evid];
  if (v2)
  {
    uint64_t v3 = *(objc_class **)&v0[OBJC_IVAR____TtC9appstored14MediaAPIUpdate____lazy_storage___evid];
  }
  else
  {
    unint64_t v4 = v0;
    NSString v5 = String._bridgeToObjectiveC()();
    Class isa = (Class)sub_10026E82C(v0, (uint64_t)v5);

    if (!isa)
    {
      sub_100018D68(0, (unint64_t *)&qword_1005A3230);
      Class isa = NSNumber.init(integerLiteral:)(0).super.super.isa;
    }
    unint64_t v7 = *(void **)&v4[v1];
    *(void *)&v4[v1] = isa;
    uint64_t v3 = isa;

    NSString v2 = 0;
  }
  id v8 = v2;
  return v3;
}

uint64_t sub_1000C0970()
{
  uint64_t v1 = (uint64_t *)&v0[OBJC_IVAR____TtC9appstored14MediaAPIUpdate____lazy_storage___bundleID];
  if (*(void *)&v0[OBJC_IVAR____TtC9appstored14MediaAPIUpdate____lazy_storage___bundleID + 8])
  {
    uint64_t v2 = *v1;
  }
  else
  {
    NSString v3 = String._bridgeToObjectiveC()();
    id v4 = sub_10026E95C(v0, (uint64_t)v3);

    if (v4)
    {
      uint64_t v2 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v6 = v5;
    }
    else
    {
      uint64_t v2 = 0;
      unint64_t v6 = 0xE000000000000000;
    }
    uint64_t *v1 = v2;
    v1[1] = v6;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  return v2;
}

id sub_1000C0A3C(uint64_t a1)
{
  ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v1[OBJC_IVAR____TtC9appstored14MediaAPIUpdate____lazy_storage___metadataDictionary] = 1;
  *(void *)&v1[OBJC_IVAR____TtC9appstored14MediaAPIUpdate____lazy_storage___platformSpecificAttributesDictionary] = 1;
  v1[OBJC_IVAR____TtC9appstored14MediaAPIUpdate_isAppClip] = 0;
  id v4 = &v1[OBJC_IVAR____TtC9appstored14MediaAPIUpdate____lazy_storage___bundleID];
  *id v4 = 0;
  v4[1] = 0;
  *(_OWORD *)&v1[OBJC_IVAR____TtC9appstored14MediaAPIUpdate____lazy_storage___metadata] = xmmword_100489F20;
  *(void *)&v1[OBJC_IVAR____TtC9appstored14MediaAPIUpdate____lazy_storage___evid] = 0;
  unint64_t v5 = &v1[OBJC_IVAR____TtC9appstored14MediaAPIUpdate____lazy_storage___itemID];
  *(void *)unint64_t v5 = 0;
  v5[8] = 1;
  unint64_t v6 = &v1[OBJC_IVAR____TtC9appstored14MediaAPIUpdate____lazy_storage___updateState];
  *(void *)unint64_t v6 = 0;
  v6[8] = 1;
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  Class v8 = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v11.receiver = v1;
  v11.super_class = ObjectType;
  id v9 = objc_msgSendSuper2(&v11, "initWithDatabaseID:propertyValues:externalPropertyValues:", a1, isa, v8);

  return v9;
}

uint64_t sub_1000C0CE0()
{
  uint64_t v0 = sub_10001644C((uint64_t *)&unk_1005A4E20);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)v25 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = 0;
  unint64_t v27 = 0xE000000000000000;
  _StringGuts.grow(_:)(59);
  v3._countAndFlagsBits = 0x656C646E7562207BLL;
  v3._object = (void *)0xEC000000203A4449;
  String.append(_:)(v3);
  v4._countAndFlagsBits = sub_1000C0970();
  String.append(_:)(v4);
  swift_bridgeObjectRelease();
  v5._countAndFlagsBits = 0x3A44496D65746920;
  v5._object = (void *)0xE900000000000020;
  String.append(_:)(v5);
  v25[1] = sub_1000C0768();
  v6._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v6);
  swift_bridgeObjectRelease();
  v7._countAndFlagsBits = 0x203A6469766520;
  v7._object = (void *)0xE700000000000000;
  String.append(_:)(v7);
  Class v8 = sub_1000C08A8();
  id v9 = [(objc_class *)v8 description];
  uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v12 = v11;

  v13._countAndFlagsBits = v10;
  v13._object = v12;
  String.append(_:)(v13);

  swift_bridgeObjectRelease();
  v14._object = (void *)0x800000010044F3A0;
  v14._countAndFlagsBits = 0xD000000000000015;
  String.append(_:)(v14);
  sub_1000C0F98((uint64_t)v2);
  uint64_t v15 = type metadata accessor for Date();
  uint64_t v16 = *(void *)(v15 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v2, 1, v15) == 1)
  {
    sub_100016714((uint64_t)v2, (uint64_t *)&unk_1005A4E20);
LABEL_5:
    uint64_t v19 = 0;
    os_log_t v21 = (void *)0xE000000000000000;
    goto LABEL_6;
  }
  Class isa = Date._bridgeToObjectiveC()().super.isa;
  (*(void (**)(char *, uint64_t))(v16 + 8))(v2, v15);
  id v18 = sub_1002826D4(isa);

  if (!v18) {
    goto LABEL_5;
  }
  uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  os_log_t v21 = v20;

LABEL_6:
  v22._countAndFlagsBits = v19;
  v22._object = v21;
  String.append(_:)(v22);
  swift_bridgeObjectRelease();
  v23._countAndFlagsBits = 32032;
  v23._object = (void *)0xE200000000000000;
  String.append(_:)(v23);
  return v26;
}

uint64_t sub_1000C0F98@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_10001644C((uint64_t *)&unk_1005A4E20);
  __chkstk_darwin(v2 - 8);
  Swift::String v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10001644C(&qword_1005A3660);
  __chkstk_darwin(v5 - 8);
  Swift::String v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  Class v8 = sub_1000C14C0();
  if (v8)
  {
    id v9 = v8;
    NSString v10 = String._bridgeToObjectiveC()();
    id v11 = sub_100268A28(v9, v10);

    if (v11)
    {
      id v12 = [objc_allocWithZone((Class)NSDateFormatter) init];
      NSString v13 = String._bridgeToObjectiveC()();
      [v12 setDateFormat:v13];

      [v12 setLenient:1];
      TimeZone.init(secondsFromGMT:)();
      uint64_t v14 = type metadata accessor for TimeZone();
      uint64_t v15 = *(void *)(v14 - 8);
      Class isa = 0;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v7, 1, v14) != 1)
      {
        Class isa = TimeZone._bridgeToObjectiveC()().super.isa;
        (*(void (**)(char *, uint64_t))(v15 + 8))(v7, v14);
      }
      [v12 setTimeZone:isa];

      id v17 = [v12 dateFromString:v11];
      if (v17)
      {
        static Date._unconditionallyBridgeFromObjectiveC(_:)();

        uint64_t v18 = type metadata accessor for Date();
        (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v4, 0, 1, v18);
      }
      else
      {

        uint64_t v22 = type metadata accessor for Date();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v4, 1, 1, v22);
      }
      return sub_100030134((uint64_t)v4, a1, (uint64_t *)&unk_1005A4E20);
    }
  }
  uint64_t v19 = type metadata accessor for Date();
  unint64_t v20 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56);
  return v20(a1, 1, 1, v19);
}

void *sub_1000C1310()
{
  uint64_t v1 = OBJC_IVAR____TtC9appstored14MediaAPIUpdate____lazy_storage___metadataDictionary;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC9appstored14MediaAPIUpdate____lazy_storage___metadataDictionary);
  uint64_t v3 = v2;
  if (v2 == (void *)1)
  {
    uint64_t v4 = sub_1000C0814();
    if (v5 >> 60 != 15)
    {
      uint64_t v6 = v4;
      unint64_t v7 = v5;
      Class v8 = self;
      Class isa = Data._bridgeToObjectiveC()().super.isa;
      v17[0] = 0;
      id v10 = [v8 JSONObjectWithData:isa options:0 error:v17];

      if (v10)
      {
        id v11 = v17[0];
        _bridgeAnyObjectToAny(_:)();
        sub_100034BBC(v6, v7);
        swift_unknownObjectRelease();
        sub_100018D68(0, &qword_1005A5E48);
        if (swift_dynamicCast())
        {
          uint64_t v3 = v16;
LABEL_8:
          NSString v13 = *(void **)(v0 + v1);
          *(void *)(v0 + v1) = v3;
          id v14 = v3;
          sub_1000C4418(v13);
          goto LABEL_9;
        }
      }
      else
      {
        id v12 = v17[0];
        _convertNSErrorToError(_:)();

        swift_willThrow();
        sub_100034BBC(v6, v7);
        swift_errorRelease();
      }
    }
    uint64_t v3 = 0;
    goto LABEL_8;
  }
LABEL_9:
  sub_1000C4428(v2);
  return v3;
}

void *sub_1000C14C0()
{
  uint64_t v1 = OBJC_IVAR____TtC9appstored14MediaAPIUpdate____lazy_storage___platformSpecificAttributesDictionary;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC9appstored14MediaAPIUpdate____lazy_storage___platformSpecificAttributesDictionary);
  uint64_t v3 = v2;
  if (v2 == (void *)1)
  {
    uint64_t v3 = (void *)sub_1000C1530();
    uint64_t v4 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v3;
    id v5 = v3;
    sub_1000C4418(v4);
  }
  sub_1000C4428(v2);
  return v3;
}

uint64_t sub_1000C1530()
{
  uint64_t v0 = sub_1000C1310();
  if (v0)
  {
    uint64_t v1 = v0;
    static Dictionary._conditionallyBridgeFromObjectiveC(_:result:)();
  }
  return 0;
}

uint64_t sub_1000C15EC(uint64_t a1, uint64_t a2)
{
  v3[106] = v2;
  v3[105] = a2;
  v3[104] = a1;
  v3[107] = swift_getObjectType();
  uint64_t v4 = type metadata accessor for Logger();
  v3[108] = v4;
  v3[109] = *(void *)(v4 - 8);
  v3[110] = swift_task_alloc();
  return _swift_task_switch(sub_1000C16EC, 0, 0);
}

void sub_1000C16EC()
{
  uint64_t v86 = v0;
  uint64_t v1 = *(unsigned char **)(v0 + 848);
  uint64_t v2 = *(void *)(v0 + 832);
  uint64_t v3 = OBJC_IVAR____TtC9appstored14MediaAPIUpdate____lazy_storage___metadataDictionary;
  *(void *)(v0 + 888) = OBJC_IVAR____TtC9appstored14MediaAPIUpdate____lazy_storage___metadataDictionary;
  *(void *)&v1[v3] = 1;
  uint64_t v4 = OBJC_IVAR____TtC9appstored14MediaAPIUpdate____lazy_storage___platformSpecificAttributesDictionary;
  *(void *)(v0 + 896) = OBJC_IVAR____TtC9appstored14MediaAPIUpdate____lazy_storage___platformSpecificAttributesDictionary;
  *(void *)&v1[v4] = 1;
  uint64_t v5 = OBJC_IVAR____TtC9appstored14MediaAPIUpdate_isAppClip;
  *(void *)(v0 + 904) = OBJC_IVAR____TtC9appstored14MediaAPIUpdate_isAppClip;
  v1[v5] = 0;
  uint64_t v6 = OBJC_IVAR____TtC9appstored14MediaAPIUpdate____lazy_storage___bundleID;
  *(void *)(v0 + 912) = OBJC_IVAR____TtC9appstored14MediaAPIUpdate____lazy_storage___bundleID;
  unint64_t v7 = &v1[v6];
  *unint64_t v7 = 0;
  v7[1] = 0;
  uint64_t v8 = OBJC_IVAR____TtC9appstored14MediaAPIUpdate____lazy_storage___metadata;
  *(void *)(v0 + 920) = OBJC_IVAR____TtC9appstored14MediaAPIUpdate____lazy_storage___metadata;
  *(_OWORD *)&v1[v8] = xmmword_100489F20;
  uint64_t v9 = OBJC_IVAR____TtC9appstored14MediaAPIUpdate____lazy_storage___evid;
  *(void *)(v0 + 928) = OBJC_IVAR____TtC9appstored14MediaAPIUpdate____lazy_storage___evid;
  *(void *)&v1[v9] = 0;
  id v10 = &v1[OBJC_IVAR____TtC9appstored14MediaAPIUpdate____lazy_storage___itemID];
  *(void *)id v10 = 0;
  v10[8] = 1;
  id v11 = &v1[OBJC_IVAR____TtC9appstored14MediaAPIUpdate____lazy_storage___updateState];
  *(void *)id v11 = 0;
  v11[8] = 1;
  uint64_t v12 = *(void *)(v2 + 16);
  NSString v13 = v1;
  if (!v12
    || (unint64_t v14 = sub_100049A4C(25705, 0xE200000000000000), (v15 & 1) == 0)
    || (sub_100031C38(*(void *)(*(void *)(v0 + 832) + 56) + 32 * v14, v0 + 480), (swift_dynamicCast() & 1) == 0))
  {
    unint64_t v27 = *(void **)(v0 + 840);
    swift_bridgeObjectRelease();

    goto LABEL_13;
  }
  uint64_t v16 = sub_1000B05C0(*(void *)(v0 + 640), *(void *)(v0 + 648));
  *(void *)(v0 + 936) = v16;
  if ((v17 & 1) != 0 || (uint64_t v18 = v16, (v19 = sub_100035D08()) == 0))
  {

    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  unint64_t v20 = v19;
  if (!*(void *)(v19 + 16)
    || (unint64_t v21 = sub_100049A4C(0x6449656C646E7562, 0xE800000000000000), (v22 & 1) == 0)
    || (sub_100031C38(*(void *)(v20 + 56) + 32 * v21, v0 + 512), (swift_dynamicCast() & 1) == 0))
  {
    uint64_t v35 = *(void **)(v0 + 840);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    goto LABEL_13;
  }
  uint64_t v23 = *(void *)(v0 + 672);
  uint64_t v24 = *(void *)(v0 + 680);
  *(void *)(v0 + 720) = v23;
  *(void *)(v0 + 728) = v24;
  if (*(void *)(v20 + 16) && (unint64_t v25 = sub_100049A4C(0xD000000000000011, 0x800000010044DAE0), (v26 & 1) != 0))
  {
    sub_100031C38(*(void *)(v20 + 56) + 32 * v25, v0 + 544);
  }
  else
  {
    *(_OWORD *)(v0 + 544) = 0u;
    *(_OWORD *)(v0 + 560) = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*(void *)(v0 + 568))
  {
    Class v47 = *(void **)(v0 + 840);
    swift_bridgeObjectRelease();

    sub_100016714(v0 + 544, &qword_1005A5660);
LABEL_35:
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  char v36 = swift_dynamicCast();
  uint64_t v37 = *(void **)(v0 + 840);
  if ((v36 & 1) == 0)
  {
    swift_bridgeObjectRelease();

    goto LABEL_35;
  }
  *(void *)(v0 + 944) = *(void *)(v0 + 800);
  swift_bridgeObjectRetain();
  uint64_t v38 = (void *)sub_1000C4460(v18, v23, v24, v37);
  *(void *)(v0 + 952) = v38;
  swift_bridgeObjectRelease();
  if (v38)
  {
    id v39 = [v38 appClipMetadata];

    if (v39)
    {
      id v40 = [v38 bundleIdentifier];
      if (v40)
      {
        uint64_t v41 = v40;
        uint64_t v23 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v43 = v42;

        swift_bridgeObjectRelease();
        uint64_t v24 = v43;
      }
      *(void *)(v0 + 720) = v23;
      *(void *)(v0 + 728) = v24;
      v1[v5] = 1;
    }
    *(void *)(v0 + 968) = v23;
    *(void *)(v0 + 960) = v24;
    if (qword_1005A3030 != -1) {
      swift_once();
    }
    id v44 = [v38 iTunesMetadata];
    uint64_t v45 = (uint64_t)[v44 storeItemIdentifier];

    if (v45 < 0)
    {
      __break(1u);
    }
    else
    {
      uint64_t v46 = (void *)swift_task_alloc();
      *(void *)(v0 + 976) = v46;
      *uint64_t v46 = v0;
      v46[1] = sub_1000C22C4;
      sub_100075528(v45);
    }
    return;
  }
  uint64_t v48 = self;
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  *(void *)(v0 + 784) = 0;
  id v50 = [v48 dataWithJSONObject:isa options:0 error:v0 + 784];

  id v51 = *(id *)(v0 + 784);
  if (v50)
  {

    uint64_t v52 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v54 = v53;

    os_log_t log = *(os_log_t *)(v0 + 944);
    uint64_t v80 = *(void *)(v0 + 936);
    uint64_t v83 = *(void **)(v0 + 840);
    sub_10001644C(&qword_1005A46A8);
    long long v82 = *(_OWORD *)(v0 + 848);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_100489F30;
    *(void *)(v0 + 768) = 0xD000000000000015;
    *(void *)(v0 + 776) = 0x800000010044A680;
    unint64_t v56 = v54;
    sub_10001EC28(v52, v54);
    AnyHashable.init<A>(_:)();
    *(void *)(inited + 96) = &type metadata for Int;
    *(void *)(inited + 72) = 0;
    *(void *)(v0 + 752) = 0x695F656C646E7562;
    *(void *)(v0 + 760) = 0xE900000000000064;
    AnyHashable.init<A>(_:)();
    *(void *)(inited + 168) = &type metadata for String;
    *(void *)(inited + 144) = v23;
    *(void *)(inited + 152) = v24;
    *(void *)(v0 + 736) = 0xD000000000000019;
    *(void *)(v0 + 744) = 0x800000010044A6A0;
    swift_bridgeObjectRetain();
    AnyHashable.init<A>(_:)();
    *(void *)(inited + 240) = &type metadata for Int64;
    *(void *)(inited + 216) = log;
    *(void *)(v0 + 704) = 0x64695F6D657469;
    *(void *)(v0 + 712) = 0xE700000000000000;
    AnyHashable.init<A>(_:)();
    *(void *)(inited + 312) = &type metadata for Int64;
    *(void *)(inited + 288) = v80;
    *(void *)(v0 + 688) = 0x617461646174656DLL;
    *(void *)(v0 + 696) = 0xE800000000000000;
    AnyHashable.init<A>(_:)();
    *(void *)(inited + 384) = &type metadata for Data;
    *(void *)(inited + 360) = v52;
    *(void *)(inited + 368) = v54;
    strcpy((char *)(v0 + 656), "update_state");
    *(unsigned char *)(v0 + 669) = 0;
    *(_WORD *)(v0 + 670) = -5120;
    AnyHashable.init<A>(_:)();
    *(void *)(inited + 456) = &type metadata for Int;
    *(void *)(inited + 432) = 0;
    sub_100042894(inited);
    Class v57 = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    sub_100042894((uint64_t)_swiftEmptyArrayStorage);
    Class v58 = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    *(_OWORD *)(v0 + 624) = v82;
    id v33 = objc_msgSendSuper2((objc_super *)(v0 + 624), "initWithDatabaseID:propertyValues:externalPropertyValues:", 0, v57, v58);

    sub_10001EC80(v52, v56);
    swift_bridgeObjectRelease();
    goto LABEL_14;
  }
  uint64_t v59 = v51;
  char v60 = *(void **)(v0 + 840);
  _convertNSErrorToError(_:)();

  swift_willThrow();
  static Logger.updates.getter();
  id v61 = v60;
  swift_errorRetain();
  id v62 = v61;
  swift_errorRetain();
  uint64_t v63 = Logger.logObject.getter();
  os_log_type_t v64 = static os_log_type_t.error.getter();
  uint64_t v65 = v64;
  BOOL v66 = os_log_type_enabled(v63, v64);
  uint64_t v67 = *(void *)(v0 + 880);
  uint64_t v68 = *(void *)(v0 + 872);
  uint64_t v69 = *(void *)(v0 + 864);
  char v70 = *(void **)(v0 + 840);
  if (v66)
  {
    os_log_type_t type = v65;
    uint64_t v84 = *(void *)(v0 + 864);
    uint64_t v71 = swift_slowAlloc();
    uint64_t v77 = (void *)swift_slowAlloc();
    v85[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v71 = 138412802;
    loga = v63;
    *(void *)(v0 + 816) = v70;
    id v72 = v70;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v77 = v70;

    *(_WORD *)(v71 + 12) = 2082;
    swift_beginAccess();
    uint64_t v73 = *(void *)(v0 + 720);
    unint64_t v74 = *(void *)(v0 + 728);
    swift_bridgeObjectRetain();
    *(void *)(v0 + 808) = sub_1000F7290(v73, v74, v85);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v71 + 22) = 2082;
    swift_getErrorValue();
    uint64_t v75 = Error.localizedDescription.getter();
    *(void *)(v0 + 792) = sub_1000F7290(v75, v76, v85);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, loga, type, "[%@] Error serializing update metadata for %{public}s: %{public}s", (uint8_t *)v71, 0x20u);
    sub_10001644C((uint64_t *)&unk_1005A3AA0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
    (*(void (**)(uint64_t, uint64_t))(v68 + 8))(v67, v84);
  }
  else
  {
    swift_errorRelease();

    swift_errorRelease();
    swift_errorRelease();

    (*(void (**)(uint64_t, uint64_t))(v68 + 8))(v67, v69);
  }
  swift_bridgeObjectRelease();
LABEL_13:
  uint64_t v28 = *(void *)(v0 + 928);
  uint64_t v29 = *(void *)(v0 + 896);
  uint64_t v30 = *(char **)(v0 + 848);
  NSString v31 = &v30[*(void *)(v0 + 920)];
  sub_1000C4418(*(id *)&v30[*(void *)(v0 + 888)]);
  sub_1000C4418(*(id *)&v30[v29]);
  swift_bridgeObjectRelease();
  sub_1000C4438(*(void *)v31, *((void *)v31 + 1));
  uint64_t v32 = *(void **)&v30[v28];

  swift_deallocPartialClassInstance();
  id v33 = 0;
LABEL_14:
  swift_task_dealloc();
  char v34 = *(void (**)(id))(v0 + 8);
  v34(v33);
}

uint64_t sub_1000C22C4(char a1)
{
  *(unsigned char *)(*(void *)v1 + 984) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_1000C23F0, 0, 0);
}

uint64_t sub_1000C23F0()
{
  uint64_t v59 = v0;
  if ((*(unsigned char *)(*(void *)(v0 + 848) + *(void *)(v0 + 904)) & 1) != 0
    || ([*(id *)(v0 + 952) isPlaceholder] & 1) != 0)
  {
    unsigned int v1 = 0;
  }
  else
  {
    int v2 = *(unsigned __int8 *)(v0 + 984);
    unsigned int v1 = [*(id *)(v0 + 952) applicationHasMIDBasedSINF] & (v2 ^ 1);
  }
  if ([*(id *)(v0 + 952) isPlaceholder]) {
    BOOL v56 = [*(id *)(v0 + 952) placeholderFailureReason] == (id)4;
  }
  else {
    BOOL v56 = 0;
  }
  id v3 = sub_10042889C(*(void **)(v0 + 952));
  if (v3)
  {
    uint64_t v4 = v3;
    id v5 = [v3 DSPersonID];
    if (v5)
    {
      uint64_t v6 = v5;
      id v7 = objc_msgSend(self, "ams_sharedAccountStore");
      id v8 = objc_msgSend(v7, "ams_iTunesAccountWithDSID:", v6);

      if (v8)
      {
        unsigned int v53 = objc_msgSend(v8, "ams_isManagedAppleID");

        uint64_t v6 = v8;
      }
      else
      {
        unsigned int v53 = 0;
      }
    }
    else
    {
      unsigned int v53 = 0;
    }
  }
  else
  {
    unsigned int v53 = 0;
  }

  uint64_t v9 = *(void *)(v0 + 968);
  uint64_t v10 = *(void *)(v0 + 960);
  id v11 = self;
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  *(void *)(v0 + 784) = 0;
  id v13 = [v11 dataWithJSONObject:isa options:0 error:v0 + 784];

  id v14 = *(id *)(v0 + 784);
  if (!v13)
  {
    unint64_t v19 = v14;
    unint64_t v20 = *(void **)(v0 + 840);
    _convertNSErrorToError(_:)();

    swift_willThrow();
    static Logger.updates.getter();
    id v21 = v20;
    swift_errorRetain();
    id v22 = v21;
    swift_errorRetain();
    uint64_t v23 = Logger.logObject.getter();
    os_log_type_t v24 = static os_log_type_t.error.getter();
    BOOL v25 = os_log_type_enabled(v23, v24);
    uint64_t v26 = *(void *)(v0 + 880);
    uint64_t v27 = *(void *)(v0 + 872);
    uint64_t v28 = *(void *)(v0 + 864);
    uint64_t v29 = *(void **)(v0 + 840);
    if (v25)
    {
      uint64_t v54 = *(void *)(v0 + 864);
      uint64_t v30 = swift_slowAlloc();
      uint64_t v48 = (void *)swift_slowAlloc();
      v58[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v30 = 138412802;
      *(void *)(v0 + 816) = v29;
      os_log_t log = v23;
      id v31 = v29;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v48 = v29;

      *(_WORD *)(v30 + 12) = 2082;
      swift_beginAccess();
      uint64_t v32 = *(void *)(v0 + 720);
      unint64_t v33 = *(void *)(v0 + 728);
      swift_bridgeObjectRetain();
      *(void *)(v0 + 808) = sub_1000F7290(v32, v33, v58);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v30 + 22) = 2082;
      swift_getErrorValue();
      uint64_t v34 = Error.localizedDescription.getter();
      *(void *)(v0 + 792) = sub_1000F7290(v34, v35, v58);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, log, v24, "[%@] Error serializing update metadata for %{public}s: %{public}s", (uint8_t *)v30, 0x20u);
      sub_10001644C((uint64_t *)&unk_1005A3AA0);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
      (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v26, v54);
    }
    else
    {
      swift_errorRelease();

      swift_errorRelease();
      swift_errorRelease();

      (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v26, v28);
    }
    swift_bridgeObjectRelease();
    uint64_t v41 = *(void *)(v0 + 928);
    uint64_t v42 = *(void *)(v0 + 896);
    uint64_t v43 = *(char **)(v0 + 848);
    id v44 = &v43[*(void *)(v0 + 920)];
    sub_1000C4418(*(id *)&v43[*(void *)(v0 + 888)]);
    sub_1000C4418(*(id *)&v43[v42]);
    swift_bridgeObjectRelease();
    sub_1000C4438(*(void *)v44, *((void *)v44 + 1));
    uint64_t v45 = *(void **)&v43[v41];

    swift_deallocPartialClassInstance();
    id v40 = 0;
    goto LABEL_34;
  }
  uint64_t v51 = v9;

  uint64_t v15 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v17 = v16;

  uint64_t v52 = v10;
  if (v56)
  {
    if (v1) {
      uint64_t v18 = 12;
    }
    else {
      uint64_t v18 = 4;
    }
    if ((v53 & 1) == 0) {
      goto LABEL_31;
    }
  }
  else
  {
    if (v1) {
      uint64_t v18 = 8;
    }
    else {
      uint64_t v18 = 0;
    }
    if (!v53) {
      goto LABEL_31;
    }
  }
  v18 |= 0x10uLL;
LABEL_31:
  uint64_t v36 = *(void *)(v0 + 944);
  uint64_t v49 = *(void *)(v0 + 936);
  Class v57 = *(void **)(v0 + 840);
  sub_10001644C(&qword_1005A46A8);
  long long v55 = *(_OWORD *)(v0 + 848);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100489F30;
  *(void *)(v0 + 768) = 0xD000000000000015;
  *(void *)(v0 + 776) = 0x800000010044A680;
  sub_10001EC28(v15, v17);
  AnyHashable.init<A>(_:)();
  *(void *)(inited + 96) = &type metadata for Int;
  *(void *)(inited + 72) = v18;
  *(void *)(v0 + 752) = 0x695F656C646E7562;
  *(void *)(v0 + 760) = 0xE900000000000064;
  AnyHashable.init<A>(_:)();
  *(void *)(inited + 168) = &type metadata for String;
  *(void *)(inited + 144) = v51;
  *(void *)(inited + 152) = v52;
  *(void *)(v0 + 736) = 0xD000000000000019;
  *(void *)(v0 + 744) = 0x800000010044A6A0;
  swift_bridgeObjectRetain();
  AnyHashable.init<A>(_:)();
  *(void *)(inited + 240) = &type metadata for Int64;
  *(void *)(inited + 216) = v36;
  *(void *)(v0 + 704) = 0x64695F6D657469;
  *(void *)(v0 + 712) = 0xE700000000000000;
  AnyHashable.init<A>(_:)();
  *(void *)(inited + 312) = &type metadata for Int64;
  *(void *)(inited + 288) = v49;
  *(void *)(v0 + 688) = 0x617461646174656DLL;
  *(void *)(v0 + 696) = 0xE800000000000000;
  AnyHashable.init<A>(_:)();
  *(void *)(inited + 384) = &type metadata for Data;
  *(void *)(inited + 360) = v15;
  *(void *)(inited + 368) = v17;
  strcpy((char *)(v0 + 656), "update_state");
  *(unsigned char *)(v0 + 669) = 0;
  *(_WORD *)(v0 + 670) = -5120;
  AnyHashable.init<A>(_:)();
  *(void *)(inited + 456) = &type metadata for Int;
  *(void *)(inited + 432) = 0;
  sub_100042894(inited);
  Class v38 = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  sub_100042894((uint64_t)_swiftEmptyArrayStorage);
  Class v39 = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  *(_OWORD *)(v0 + 624) = v55;
  id v40 = objc_msgSendSuper2((objc_super *)(v0 + 624), "initWithDatabaseID:propertyValues:externalPropertyValues:", 0, v38, v39);

  sub_10001EC80(v15, v17);
  swift_bridgeObjectRelease();
LABEL_34:
  swift_task_dealloc();
  uint64_t v46 = *(uint64_t (**)(id))(v0 + 8);
  return v46(v40);
}

uint64_t sub_1000C2DC8(void *a1)
{
  NSString v2 = String._bridgeToObjectiveC()();
  id v3 = [a1 valueForProperty:v2];

  if (v3)
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v6, 0, sizeof(v6));
  }
  sub_100030134((uint64_t)v6, (uint64_t)v7, &qword_1005A5660);
  if (v8)
  {
    if (swift_dynamicCast()) {
      return v5;
    }
    else {
      return 0;
    }
  }
  else
  {
    sub_100016714((uint64_t)v7, &qword_1005A5660);
    return 0;
  }
}

uint64_t sub_1000C321C()
{
  uint64_t result = (uint64_t)sub_1000C14C0();
  if (result)
  {
    unsigned int v1 = (void *)result;
    NSString v2 = String._bridgeToObjectiveC()();
    id v3 = sub_100267F88(v1, v2);

    if (v3
      && (uint64_t v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)(),
          v3,
          uint64_t v5 = sub_1000C0598(v4),
          swift_bridgeObjectRelease(),
          v5))
    {
      uint64_t v6 = v5[2];
      if (v6)
      {
        swift_bridgeObjectRetain();
        for (uint64_t i = 0; i != v6; ++i)
        {
          uint64_t v9 = v5[i + 4];
          if (*(void *)(v9 + 16))
          {
            swift_bridgeObjectRetain();
            unint64_t v10 = sub_100049A4C(1701869940, 0xE400000000000000);
            if (v11)
            {
              sub_100031C38(*(void *)(v9 + 56) + 32 * v10, (uint64_t)&v16);
              if (swift_dynamicCast())
              {
                if (v14 == 0x657461647075 && v15 == 0xE600000000000000)
                {
                  swift_bridgeObjectRelease();
LABEL_19:
                  swift_bridgeObjectRelease();
                  goto LABEL_20;
                }
                char v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
                swift_bridgeObjectRelease();
                if (v8) {
                  goto LABEL_19;
                }
              }
            }
            swift_bridgeObjectRelease();
          }
        }
        uint64_t result = swift_bridgeObjectRelease();
        if (!v5[2])
        {
          __break(1u);
          return result;
        }
        uint64_t v9 = v5[4];
        swift_bridgeObjectRetain();
LABEL_20:
        swift_bridgeObjectRelease();
        if (*(void *)(v9 + 16) && (unint64_t v12 = sub_100049A4C(0x6D61726150797562, 0xE900000000000073), (v13 & 1) != 0))
        {
          sub_100031C38(*(void *)(v9 + 56) + 32 * v12, (uint64_t)&v16);
        }
        else
        {
          long long v16 = 0u;
          long long v17 = 0u;
        }
        swift_bridgeObjectRelease();

        if (*((void *)&v17 + 1))
        {
          if (swift_dynamicCast()) {
            return v14;
          }
          else {
            return 0;
          }
        }
      }
      else
      {

        swift_bridgeObjectRelease();
        long long v16 = 0u;
        long long v17 = 0u;
      }
      sub_100016714((uint64_t)&v16, &qword_1005A5660);
    }
    else
    {
    }
    return 0;
  }
  return result;
}

id sub_1000C36E4(int a1)
{
  NSString v2 = v1;
  LODWORD(v3) = a1;
  uint64_t v4 = type metadata accessor for Logger();
  uint64_t v71 = *(void *)(v4 - 8);
  uint64_t v72 = v4;
  __chkstk_darwin(v4);
  uint64_t v73 = &v68[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = &v68[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  id v10 = [objc_allocWithZone((Class)PurchaseInfo) init];
  sub_1000C0970();
  NSString v11 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v10 setBundleID:v11];

  id v12 = objc_allocWithZone((Class)AMSProcessInfo);
  NSString v13 = String._bridgeToObjectiveC()();
  id v14 = [v12 initWithBundleIdentifier:v13];

  [v10 setClientInfo:v14];
  UUID.init()();
  Class isa = UUID._bridgeToObjectiveC()().super.isa;
  (*(void (**)(unsigned char *, uint64_t))(v7 + 8))(v9, v6);
  [v10 setExternalID:isa];

  NSString v16 = String._bridgeToObjectiveC()();
  Class v17 = (Class)sub_10026E82C(v2, (uint64_t)v16);

  if (!v17)
  {
    sub_100018D68(0, (unint64_t *)&qword_1005A3230);
    Class v17 = NSNumber.init(integerLiteral:)(0).super.super.isa;
  }
  [v10 setItemID:v17];

  [v10 setDiscoveredUpdate:1];
  [v10 setDisableBoosting:1];
  if (v3)
  {
    [v10 setPriority:0];
    [v10 setUpdateType:2];
    [v10 setLogCode:@"UPD"];
    [v10 setPurchaseType:4];
    id v18 = [objc_allocWithZone((Class)NSNumber) initWithUnsignedChar:5];
    [v10 setMetricsType:v18];

    [v10 setSuppressEvaluatorDialogs:1];
  }
  else
  {
    [v10 setPriority:-2];
    [v10 setUpdateType:1];
    [v10 setDiscretionary:1];
    [v10 setSuppressDialogs:1];
    [v10 setSuppressEvaluatorDialogs:1];
    [v10 setLogCode:@"UPA"];
    id v19 = [objc_allocWithZone((Class)NSNumber) initWithUnsignedChar:12];
    [v10 setMetricsType:v19];

    [v10 setPurchaseType:1];
  }
  sub_1000C321C();
  if (v20)
  {
    id v21 = objc_allocWithZone((Class)AMSBuyParams);
    NSString v22 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v23 = [v21 initWithString:v22];

    os_log_type_t v24 = sub_1000C1310();
    if (v24)
    {
      NSString v25 = v24;
      NSString v26 = String._bridgeToObjectiveC()();
      id v27 = sub_100268A28(v25, v26);

      if (v27)
      {
        static String._unconditionallyBridgeFromObjectiveC(_:)();

        NSString v28 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        NSString v25 = String._bridgeToObjectiveC()();
        [v23 setParameter:v28 forKey:v25];
      }
    }
    if ((v3 & 1) == 0)
    {
      NSString v29 = String._bridgeToObjectiveC()();
      [v23 setParameter:v29 forKey:AMSBuyParamPropertyIsBackground];
    }
    [v10 setBuyParams:v23];
  }
  if ([self deviceIsAppleTV])
  {
    NSString v30 = String._bridgeToObjectiveC()();
    Class v31 = (Class)sub_10026E82C(v2, (uint64_t)v30);

    if (!v31)
    {
      sub_100018D68(0, (unint64_t *)&qword_1005A3230);
      Class v31 = NSNumber.init(integerLiteral:)(0).super.super.isa;
    }
    uint64_t v32 = self;
    id v33 = [(objc_class *)v31 longLongValue];

    unsigned int v34 = [v32 isTVProviderApp:v33];
  }
  else
  {
    unsigned int v34 = 0;
  }
  NSString v35 = String._bridgeToObjectiveC()();
  Class v36 = (Class)sub_10026E82C(v2, (uint64_t)v35);

  if (!v36)
  {
    sub_100018D68(0, (unint64_t *)&qword_1005A3230);
    Class v36 = NSNumber.init(integerLiteral:)(0).super.super.isa;
  }
  id v37 = [(objc_class *)v36 unsignedLongLongValue];

  id v38 = objc_allocWithZone((Class)LSApplicationRecord);
  v75[0] = 0;
  id v39 = [v38 initWithStoreItemIdentifier:v37 error:v75];
  if (!v39)
  {
    id v48 = (id)v75[0];
    _convertNSErrorToError(_:)();

    swift_willThrow();
    swift_errorRelease();
    id v70 = 0;
    Class v47 = v73;
    uint64_t v45 = &selRef_setAppAdamId_;
    if ((v34 & 1) == 0) {
      goto LABEL_40;
    }
    goto LABEL_33;
  }
  id v40 = (id)v75[0];
  id v41 = [v39 iTunesMetadata];
  id v42 = [v41 itemName];

  if (v42)
  {
    [v10 setItemName:v42];
  }
  id v43 = [v39 iTunesMetadata];
  id v44 = [v43 artistName];

  if (v44)
  {
    [v10 setVendorName:v44];
  }
  id v70 = [v39 applicationDSID];
  uint64_t v45 = &selRef_setAppAdamId_;
  if (!v34)
  {

    Class v47 = v73;
    goto LABEL_40;
  }
  unsigned __int8 v46 = [v39 isProfileValidated];
  Class v47 = v73;
  if (v46)
  {

    goto LABEL_40;
  }
  unsigned __int8 v49 = [v39 applicationHasMIDBasedSINF];

  if (v49)
  {
LABEL_33:
    objc_msgSend(v10, v45[234], @"PTV");
    [v10 setPurchaseType:2];
    if (!v39) {
      [v10 setUpdateType:0];
    }
    [v10 setMachineBased:1];
    id v50 = [v10 buyParams];
    id v51 = [v50 parameterForKey:AMSBuyParamPropertyAppExtVrsId];

    if (v51)
    {
      _bridgeAnyObjectToAny(_:)();
      swift_unknownObjectRelease();
      sub_10000C948(v74, v75);
      id v52 = [v10 buyParams];
      uint64_t v53 = AMSBuyParamPropertyExternalVersionId;
      id v54 = [v52 parameterForKey:AMSBuyParamPropertyExternalVersionId];

      if (v54)
      {
        _bridgeAnyObjectToAny(_:)();
        swift_unknownObjectRelease();
        sub_100016714((uint64_t)v74, &qword_1005A5660);
      }
      else
      {
        memset(v74, 0, sizeof(v74));
        sub_100016714((uint64_t)v74, &qword_1005A5660);
        id v55 = [v10 buyParams];
        sub_10002FD00(v75, v76);
        [v55 setParameter:_bridgeAnythingToObjectiveC<A>(_:)() forKey:v53];

        swift_unknownObjectRelease();
      }
      sub_10002E618((uint64_t)v75);
    }
  }
LABEL_40:
  [v10 setExpectedSoftwarePlatform:1];
  static Logger.updates.getter();
  id v56 = v2;
  Class v57 = Logger.logObject.getter();
  os_log_type_t v58 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v57, v58))
  {
    uint64_t v59 = swift_slowAlloc();
    int v69 = v3;
    uint64_t v3 = v59;
    v75[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v3 = 136446466;
    uint64_t v60 = sub_1000C0CE0();
    *(void *)&v74[0] = sub_1000F7290(v60, v61, v75);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v3 + 12) = 2050;

    *(void *)&v74[0] = 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    _os_log_impl((void *)&_mh_execute_header, v57, v58, "(UpdateMemoryEntity) %{public}s expectedSoftwarePlatform=%{public}ld", (uint8_t *)v3, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    LOBYTE(v3) = v69;
    swift_slowDealloc();

    (*(void (**)(unsigned char *, uint64_t))(v71 + 8))(v73, v72);
  }
  else
  {

    (*(void (**)(unsigned char *, uint64_t))(v71 + 8))(v47, v72);
  }
  id v62 = v70;
  if ([v10 expectedSoftwarePlatform] != (id)2)
  {
    [v10 setCoordinatorIntent:2];
    if (v3) {
      uint64_t v63 = 2;
    }
    else {
      uint64_t v63 = 1;
    }
    [v10 setCoordinatorImportance:v63];
  }
  [v10 updateGeneratedProperties];
  if (v62)
  {
    id v64 = objc_msgSend(self, "ams_sharedAccountStore");
    id v65 = [objc_allocWithZone((Class)NSNumber) initWithUnsignedLongLong:v62];
    id v66 = objc_msgSend(v64, "ams_iTunesAccountWithDSID:", v65);

    if (v66)
    {
      [v10 setAccount:v66];
    }
  }
  return v10;
}

_UNKNOWN **sub_1000C4400()
{
  return &off_1005A5E28;
}

_UNKNOWN **sub_1000C440C()
{
  return &off_1005A5E08;
}

void sub_1000C4418(id a1)
{
  if (a1 != (id)1) {
}
  }

id sub_1000C4428(id result)
{
  if (result != (id)1) {
    return result;
  }
  return result;
}

uint64_t sub_1000C4438(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 11) {
    return sub_100034BBC(a1, a2);
  }
  return a1;
}

uint64_t sub_1000C444C(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 11) {
    return sub_100058694(a1, a2);
  }
  return a1;
}

uint64_t sub_1000C4460(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v8 = type metadata accessor for Logger();
  uint64_t v46 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  id v10 = &v36[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v11);
  NSString v13 = &v36[-v12];
  if (a1 < 0)
  {
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    id v14 = objc_allocWithZone((Class)LSApplicationRecord);
    id v48 = 0;
    id v15 = [v14 initWithStoreItemIdentifier:a1 error:&v48];
    id v16 = v48;
    if (!v15)
    {
      Class v17 = v16;
      uint64_t v43 = a3;
      uint64_t v44 = a2;
      _convertNSErrorToError(_:)();

      swift_willThrow();
      static Logger.updates.getter();
      id v18 = a4;
      swift_errorRetain();
      id v19 = v18;
      swift_errorRetain();
      uint64_t v20 = Logger.logObject.getter();
      os_log_type_t v21 = static os_log_type_t.error.getter();
      int v22 = v21;
      if (os_log_type_enabled(v20, v21))
      {
        uint64_t v23 = swift_slowAlloc();
        id v41 = v10;
        uint64_t v24 = v23;
        NSString v25 = (void *)swift_slowAlloc();
        id v38 = v25;
        id v40 = (void *)swift_slowAlloc();
        id v48 = v40;
        *(_DWORD *)uint64_t v24 = 138412802;
        os_log_t v39 = v20;
        id v45 = v19;
        uint64_t v47 = (uint64_t)v19;
        uint64_t v42 = v8;
        id v26 = v19;
        int v37 = v22;
        id v27 = v26;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *NSString v25 = v45;

        uint64_t v28 = v46;
        *(_WORD *)(v24 + 12) = 2048;
        uint64_t v47 = a1;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v24 + 22) = 2082;
        swift_getErrorValue();
        uint64_t v29 = Error.localizedDescription.getter();
        uint64_t v47 = sub_1000F7290(v29, v30, (uint64_t *)&v48);
        uint64_t v8 = v42;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        swift_errorRelease();
        swift_errorRelease();
        os_log_t v31 = v39;
        _os_log_impl((void *)&_mh_execute_header, v39, (os_log_type_t)v37, "[%@] Error looking up record for %lld: %{public}s", (uint8_t *)v24, 0x20u);
        sub_10001644C((uint64_t *)&unk_1005A3AA0);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        uint64_t v32 = v28;
      }
      else
      {

        swift_errorRelease();
        swift_errorRelease();

        uint64_t v32 = v46;
      }
      (*(void (**)(unsigned char *, uint64_t))(v32 + 8))(v13, v8);
      id v33 = objc_allocWithZone((Class)LSApplicationRecord);
      uint64_t v34 = v43;
      swift_bridgeObjectRetain();
      id v15 = sub_1000D718C(v44, v34, 1);
      swift_errorRelease();
    }
    return (uint64_t)v15;
  }
  return result;
}

unsigned char *sub_1000C4B78(void *a1)
{
  ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v1[OBJC_IVAR____TtC9appstored14MediaAPIUpdate____lazy_storage___metadataDictionary] = 1;
  *(void *)&v1[OBJC_IVAR____TtC9appstored14MediaAPIUpdate____lazy_storage___platformSpecificAttributesDictionary] = 1;
  v1[OBJC_IVAR____TtC9appstored14MediaAPIUpdate_isAppClip] = 0;
  uint64_t v3 = &v1[OBJC_IVAR____TtC9appstored14MediaAPIUpdate____lazy_storage___bundleID];
  *uint64_t v3 = 0;
  v3[1] = 0;
  *(_OWORD *)&v1[OBJC_IVAR____TtC9appstored14MediaAPIUpdate____lazy_storage___metadata] = xmmword_100489F20;
  *(void *)&v1[OBJC_IVAR____TtC9appstored14MediaAPIUpdate____lazy_storage___evid] = 0;
  uint64_t v4 = &v1[OBJC_IVAR____TtC9appstored14MediaAPIUpdate____lazy_storage___itemID];
  *(void *)uint64_t v4 = 0;
  v4[8] = 1;
  uint64_t v5 = &v1[OBJC_IVAR____TtC9appstored14MediaAPIUpdate____lazy_storage___updateState];
  *(void *)uint64_t v5 = 0;
  v5[8] = 1;
  id v6 = [a1 databaseID];
  id v7 = [a1 propertyValues];
  uint64_t v8 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

  sub_1000C51E4(v8);
  swift_bridgeObjectRelease();
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v10 = [a1 externalPropertyValues];
  uint64_t v11 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

  sub_1000C51E4(v11);
  swift_bridgeObjectRelease();
  Class v12 = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v16.receiver = v1;
  v16.super_class = ObjectType;
  NSString v13 = objc_msgSendSuper2(&v16, "initWithDatabaseID:propertyValues:externalPropertyValues:", v6, isa, v12);

  v13[OBJC_IVAR____TtC9appstored14MediaAPIUpdate_isAppClip] = *((unsigned char *)a1
                                                              + OBJC_IVAR____TtC9appstored14MediaAPIUpdate_isAppClip);
  return v13;
}

const char *sub_1000C4E10()
{
  return "com.apple.appstored.SkannerSync";
}

uint64_t sub_1000C4E24()
{
  if (qword_1005A2FC0 != -1) {
    swift_once();
  }
  swift_bridgeObjectRetain();
  XPCDictionary.subscript.setter();
  swift_bridgeObjectRetain();
  XPCDictionary.subscript.setter();
  swift_bridgeObjectRetain();
  XPCDictionary.subscript.setter();
  sub_10006FABC();
  swift_bridgeObjectRetain();
  XPCDictionary.subscript.setter();
  swift_bridgeObjectRetain();
  XPCDictionary.subscript.setter();
  swift_bridgeObjectRetain();
  return XPCDictionary.subscript.setter();
}

uint64_t sub_1000C5028()
{
  return swift_bridgeObjectRelease();
}

uint64_t type metadata accessor for SkannerSyncActivity()
{
  return self;
}

uint64_t sub_1000C51E4(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    sub_10001644C(&qword_1005A4228);
    NSString v2 = (void *)static _DictionaryStorage.allocate(capacity:)();
  }
  else
  {
    NSString v2 = &_swiftEmptyDictionarySingleton;
  }
  uint64_t v28 = a1 + 64;
  uint64_t v3 = -1 << *(unsigned char *)(a1 + 32);
  if (-v3 < 64) {
    uint64_t v4 = ~(-1 << -(char)v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(a1 + 64);
  int64_t v27 = (unint64_t)(63 - v3) >> 6;
  id v6 = (char *)(v2 + 8);
  swift_bridgeObjectRetain();
  uint64_t result = swift_retain();
  int64_t v8 = 0;
  while (1)
  {
    if (v5)
    {
      unint64_t v11 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      unint64_t v12 = v11 | (v8 << 6);
      goto LABEL_28;
    }
    int64_t v13 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v13 >= v27) {
      goto LABEL_37;
    }
    unint64_t v14 = *(void *)(v28 + 8 * v13);
    int64_t v15 = v8 + 1;
    if (!v14)
    {
      int64_t v15 = v8 + 2;
      if (v8 + 2 >= v27) {
        goto LABEL_37;
      }
      unint64_t v14 = *(void *)(v28 + 8 * v15);
      if (!v14)
      {
        int64_t v15 = v8 + 3;
        if (v8 + 3 >= v27) {
          goto LABEL_37;
        }
        unint64_t v14 = *(void *)(v28 + 8 * v15);
        if (!v14)
        {
          int64_t v15 = v8 + 4;
          if (v8 + 4 >= v27) {
            goto LABEL_37;
          }
          unint64_t v14 = *(void *)(v28 + 8 * v15);
          if (!v14) {
            break;
          }
        }
      }
    }
LABEL_27:
    unint64_t v5 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v15 << 6);
    int64_t v8 = v15;
LABEL_28:
    Class v17 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v12);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    sub_100031C38(*(void *)(a1 + 56) + 32 * v12, (uint64_t)v40);
    *(void *)&long long v39 = v19;
    *((void *)&v39 + 1) = v18;
    v37[2] = v39;
    v38[0] = v40[0];
    v38[1] = v40[1];
    *(void *)&v37[0] = v19;
    *((void *)&v37[0] + 1) = v18;
    swift_bridgeObjectRetain();
    swift_dynamicCast();
    sub_10000C948(v38, v32);
    long long v33 = v29;
    long long v34 = v30;
    uint64_t v35 = v31;
    sub_10000C948(v32, v36);
    long long v29 = v33;
    long long v30 = v34;
    uint64_t v31 = v35;
    sub_10000C948(v36, v37);
    sub_10000C948(v37, &v33);
    uint64_t result = AnyHashable._rawHashValue(seed:)(v2[5]);
    uint64_t v20 = -1 << *((unsigned char *)v2 + 32);
    unint64_t v21 = result & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)&v6[8 * (v21 >> 6)]) != 0)
    {
      unint64_t v9 = __clz(__rbit64((-1 << v21) & ~*(void *)&v6[8 * (v21 >> 6)])) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v23 = 0;
      unint64_t v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v25 = v22 == v24;
        if (v22 == v24) {
          unint64_t v22 = 0;
        }
        v23 |= v25;
        uint64_t v26 = *(void *)&v6[8 * v22];
      }
      while (v26 == -1);
      unint64_t v9 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(void *)&v6[(v9 >> 3) & 0x1FFFFFFFFFFFFFF8] |= 1 << v9;
    uint64_t v10 = v2[6] + 40 * v9;
    *(_OWORD *)uint64_t v10 = v29;
    *(_OWORD *)(v10 + 16) = v30;
    *(void *)(v10 + 32) = v31;
    uint64_t result = (uint64_t)sub_10000C948(&v33, (_OWORD *)(v2[7] + 32 * v9));
    ++v2[2];
  }
  int64_t v16 = v8 + 5;
  if (v8 + 5 >= v27)
  {
LABEL_37:
    swift_release();
    sub_100035EBC();
    return (uint64_t)v2;
  }
  unint64_t v14 = *(void *)(v28 + 8 * v16);
  if (v14)
  {
    int64_t v15 = v8 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v15 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v15 >= v27) {
      goto LABEL_37;
    }
    unint64_t v14 = *(void *)(v28 + 8 * v15);
    ++v16;
    if (v14) {
      goto LABEL_27;
    }
  }
LABEL_39:
  __break(1u);
  return result;
}

NSString sub_1000C55AC()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_1005A5EA0 = (uint64_t)result;
  return result;
}

uint64_t sub_1000C55E4()
{
  *(void *)(v1 + 16) = v0;
  return _swift_task_switch(sub_1000C5604, 0, 0);
}

uint64_t sub_1000C5604()
{
  uint64_t v1 = self;
  if (qword_1005A3078 != -1) {
    swift_once();
  }
  id v2 = sub_1003F1FD8(v1, (const __CFString *)qword_1005A5EA0);

  if (!v2) {
    sub_1003F20E0(v1, 1, (void *)qword_1005A5EA0);
  }
  uint64_t v3 = v0[2];
  sub_1000C8248();
  uint64_t v4 = *(void **)(v3 + 24);
  v0[3] = v4;
  if (v4)
  {
    id v5 = v4;
    id v6 = objc_msgSend(objc_msgSend(v5, "notificationClient"), "supportedDialogHandlers");
    v0[4] = v6;
    swift_unknownObjectRelease();
    if (v6)
    {
      if ([v6 handlesViews])
      {
        id v7 = (void *)swift_task_alloc();
        v0[5] = v7;
        *id v7 = v0;
        v7[1] = sub_1000C581C;
        return sub_1000C5AF4((uint64_t)v5);
      }
    }
    else
    {
      id v6 = v5;
    }
  }
  unint64_t v9 = (void *)swift_task_alloc();
  v0[7] = v9;
  *unint64_t v9 = v0;
  v9[1] = sub_1000C5998;
  v9[14] = v0[2];
  return _swift_task_switch(sub_1000C6850, 0, 0);
}

uint64_t sub_1000C581C()
{
  *(void *)(*(void *)v1 + 48) = v0;
  swift_task_dealloc();
  if (v0) {
    id v2 = sub_1000C5A8C;
  }
  else {
    id v2 = sub_1000C5930;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1000C5930()
{
  uint64_t v1 = *(void **)(v0 + 24);

  id v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1000C5998()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_1000C5A8C()
{
  uint64_t v1 = *(void **)(v0 + 24);

  id v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1000C5AF4(uint64_t a1)
{
  v2[23] = a1;
  v2[24] = v1;
  uint64_t v3 = type metadata accessor for Logger();
  v2[25] = v3;
  v2[26] = *(void *)(v3 - 8);
  v2[27] = swift_task_alloc();
  return _swift_task_switch(sub_1000C5BB4, 0, 0);
}

uint64_t sub_1000C5BB4()
{
  uint64_t v1 = (void *)v0[23];
  id v2 = [objc_allocWithZone((Class)ASDViewPresentationRequest) initWithViewIdentifier:0];
  v0[28] = v2;
  id v3 = [v1 notificationClient];
  v0[29] = v3;
  v0[2] = v0;
  v0[7] = v0 + 21;
  v0[3] = sub_1000C5D04;
  uint64_t v4 = swift_continuation_init();
  v0[10] = _NSConcreteStackBlock;
  v0[11] = 0x40000000;
  v0[12] = sub_100028428;
  v0[13] = &unk_100515AD0;
  v0[14] = v4;
  [v3 deliverViewPresentationRequest:v2 resultHandler:v0 + 10];
  return _swift_continuation_await(v0 + 2);
}

uint64_t sub_1000C5D04()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 240) = v1;
  if (v1) {
    id v2 = sub_1000C63D4;
  }
  else {
    id v2 = sub_1000C5E14;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1000C5E14()
{
  unint64_t v24 = v0;
  uint64_t v1 = (void *)v0[21];
  swift_unknownObjectRelease();
  if ([v1 error])
  {
    swift_willThrow();

    _s3__C4CodeOMa_0(0);
    v0[18] = 1060;
    swift_errorRetain();
    sub_1000C84B0(&qword_1005A6020, _s3__C4CodeOMa_0);
    char v2 = static _ErrorCodeProtocol.~= infix(_:_:)();
    swift_errorRelease();
    if (v2)
    {
      swift_errorRelease();
      id v3 = (void *)swift_task_alloc();
      v0[31] = v3;
      *id v3 = v0;
      v3[1] = sub_1000C6254;
      v3[14] = v0[24];
      return _swift_task_switch(sub_1000C6850, 0, 0);
    }
    static Logger.appInstall.getter();
    swift_errorRetain();
    swift_retain();
    swift_errorRetain();
    swift_retain();
    uint64_t v6 = Logger.logObject.getter();
    os_log_type_t v7 = static os_log_type_t.error.getter();
    BOOL v8 = os_log_type_enabled(v6, v7);
    uint64_t v10 = v0[26];
    uint64_t v9 = v0[27];
    uint64_t v12 = v0[24];
    uint64_t v11 = v0[25];
    if (v8)
    {
      os_log_type_t type = v7;
      uint64_t v13 = swift_slowAlloc();
      unint64_t v14 = (void *)swift_slowAlloc();
      uint64_t v23 = swift_slowAlloc();
      *(_DWORD *)uint64_t v13 = 138412546;
      uint64_t v22 = v9;
      int64_t v15 = *(void **)(v12 + 16);
      v0[19] = v15;
      id v16 = v15;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      void *v14 = v15;
      swift_release_n();
      *(_WORD *)(v13 + 12) = 2082;
      swift_getErrorValue();
      uint64_t v17 = Error.localizedDescription.getter();
      v0[22] = sub_1000F7290(v17, v18, &v23);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v6, type, "[%@] Transparency sheet completed with error: %{public}s", (uint8_t *)v13, 0x16u);
      sub_10001644C((uint64_t *)&unk_1005A3AA0);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v22, v11);
    }
    else
    {
      swift_release_n();
      swift_errorRelease();
      swift_errorRelease();

      (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
    }
    uint64_t v19 = (void *)v0[28];
    swift_willThrow();

    swift_task_dealloc();
    uint64_t v5 = (uint64_t (*)(void))v0[1];
  }
  else
  {
    uint64_t v4 = (void *)v0[28];
    sub_1000C6E5C();

    swift_task_dealloc();
    uint64_t v5 = (uint64_t (*)(void))v0[1];
  }
  return v5();
}

uint64_t sub_1000C6254()
{
  *(void *)(*(void *)v1 + 256) = v0;
  swift_task_dealloc();
  if (v0) {
    char v2 = sub_1000C67C4;
  }
  else {
    char v2 = sub_1000C6368;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1000C6368()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1000C63D4()
{
  uint64_t v22 = v0;
  swift_willThrow();
  swift_unknownObjectRelease();
  _s3__C4CodeOMa_0(0);
  v0[18] = 1060;
  swift_errorRetain();
  sub_1000C84B0(&qword_1005A6020, _s3__C4CodeOMa_0);
  char v1 = static _ErrorCodeProtocol.~= infix(_:_:)();
  swift_errorRelease();
  if (v1)
  {
    swift_errorRelease();
    char v2 = (void *)swift_task_alloc();
    v0[31] = v2;
    *char v2 = v0;
    v2[1] = sub_1000C6254;
    v2[14] = v0[24];
    return _swift_task_switch(sub_1000C6850, 0, 0);
  }
  else
  {
    static Logger.appInstall.getter();
    swift_errorRetain();
    swift_retain();
    swift_errorRetain();
    swift_retain();
    uint64_t v3 = Logger.logObject.getter();
    os_log_type_t v4 = static os_log_type_t.error.getter();
    BOOL v5 = os_log_type_enabled(v3, v4);
    uint64_t v7 = v0[26];
    uint64_t v6 = v0[27];
    uint64_t v9 = v0[24];
    uint64_t v8 = v0[25];
    if (v5)
    {
      uint64_t v10 = swift_slowAlloc();
      os_log_type_t type = v4;
      uint64_t v11 = (void *)swift_slowAlloc();
      uint64_t v21 = swift_slowAlloc();
      *(_DWORD *)uint64_t v10 = 138412546;
      uint64_t v20 = v6;
      uint64_t v12 = *(void **)(v9 + 16);
      v0[19] = v12;
      id v13 = v12;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v11 = v12;
      swift_release_n();
      *(_WORD *)(v10 + 12) = 2082;
      swift_getErrorValue();
      uint64_t v14 = Error.localizedDescription.getter();
      v0[22] = sub_1000F7290(v14, v15, &v21);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v3, type, "[%@] Transparency sheet completed with error: %{public}s", (uint8_t *)v10, 0x16u);
      sub_10001644C((uint64_t *)&unk_1005A3AA0);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v20, v8);
    }
    else
    {
      swift_release_n();
      swift_errorRelease();
      swift_errorRelease();

      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
    }
    id v16 = (void *)v0[28];
    swift_willThrow();

    swift_task_dealloc();
    uint64_t v17 = (uint64_t (*)(void))v0[1];
    return v17();
  }
}

uint64_t sub_1000C67C4()
{
  swift_task_dealloc();
  char v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1000C6830()
{
  *(void *)(v1 + 112) = v0;
  return _swift_task_switch(sub_1000C6850, 0, 0);
}

uint64_t sub_1000C6850()
{
  uint64_t v1 = v0[14];
  id v2 = objc_allocWithZone((Class)SBSRemoteAlertDefinition);
  NSString v3 = String._bridgeToObjectiveC()();
  NSString v4 = String._bridgeToObjectiveC()();
  id v5 = [v2 initWithServiceName:v3 viewControllerClassName:v4];
  v0[15] = v5;

  id v6 = [objc_allocWithZone((Class)SBSRemoteAlertConfigurationContext) init];
  v0[16] = v6;
  v0[6] = sub_1000C846C;
  v0[7] = v1;
  v0[2] = _NSConcreteStackBlock;
  v0[3] = 1107296256;
  v0[4] = sub_100038D4C;
  v0[5] = &unk_100515AE8;
  uint64_t v7 = _Block_copy(v0 + 2);
  uint64_t v8 = self;
  swift_retain();
  id v9 = [v8 responderWithHandler:v7];
  v0[17] = v9;
  _Block_release(v7);
  swift_release();
  id v10 = [objc_allocWithZone((Class)BSAction) initWithInfo:0 responder:v9];
  v0[18] = v10;
  sub_10001644C(&qword_1005A43D0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100488A80;
  *(void *)(inited + 32) = v10;
  unint64_t v22 = inited;
  specialized Array._endMutation()();
  if (!(v22 >> 62))
  {
    uint64_t v12 = *(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10);
    id v13 = v10;
    if (!v12) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  id v14 = v10;
  swift_bridgeObjectRetain();
  uint64_t v15 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (v15) {
LABEL_3:
  }
    sub_1000CCF70(v22);
LABEL_5:
  uint64_t v16 = v0[14];
  swift_bridgeObjectRelease();
  sub_1000C8470();
  sub_1000C84B0(&qword_1005A6030, (void (*)(uint64_t))sub_1000C8470);
  Class isa = Set._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v6 setActions:isa];

  id v18 = [self newHandleWithDefinition:v5 configurationContext:v6];
  v0[19] = v18;
  v0[13] = 0;
  uint64_t v19 = (void *)swift_task_alloc();
  v0[20] = v19;
  v19[2] = v16;
  v19[3] = v0 + 13;
  v19[4] = v18;
  uint64_t v20 = (void *)swift_task_alloc();
  v0[21] = v20;
  *uint64_t v20 = v0;
  v20[1] = sub_1000C6C10;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v20, 0, 0, 0xD000000000000028, 0x800000010044F620, sub_1000C84F8, v19, (char *)&type metadata for () + 8);
}

uint64_t sub_1000C6C10()
{
  *(void *)(*(void *)v1 + 176) = v0;
  swift_task_dealloc();
  if (v0)
  {
    id v2 = sub_1000C6DC0;
  }
  else
  {
    swift_task_dealloc();
    id v2 = sub_1000C6D2C;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1000C6D2C()
{
  uint64_t v1 = *(void **)(v0 + 144);
  id v2 = *(void **)(v0 + 152);
  uint64_t v4 = *(void **)(v0 + 128);
  NSString v3 = *(void **)(v0 + 136);
  id v5 = *(void **)(v0 + 104);

  id v6 = *(uint64_t (**)(void))(v0 + 8);
  return v6();
}

uint64_t sub_1000C6DC0()
{
  uint64_t v1 = *(void **)(v0 + 152);
  id v2 = *(void **)(v0 + 144);
  uint64_t v4 = *(void **)(v0 + 120);
  NSString v3 = *(void **)(v0 + 128);

  swift_task_dealloc();
  id v5 = *(uint64_t (**)(void))(v0 + 8);
  return v5();
}

uint64_t sub_1000C6E5C()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Logger();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  id v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Logger.appInstall.getter();
  swift_retain_n();
  id v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = swift_slowAlloc();
    uint64_t v15 = v3;
    id v9 = (uint8_t *)v8;
    id v10 = (void *)swift_slowAlloc();
    *(_DWORD *)id v9 = 138412290;
    uint64_t v16 = v2;
    uint64_t v11 = *(void **)(v1 + 16);
    uint64_t v17 = v11;
    id v12 = v11;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *id v10 = v11;
    uint64_t v2 = v16;
    swift_release_n();
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "[%@] Transparency sheet confirmed", v9, 0xCu);
    sub_10001644C((uint64_t *)&unk_1005A3AA0);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v3 = v15;
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

void sub_1000C7060(uint64_t a1, uint64_t a2, void **a3, void *a4)
{
  uint64_t v8 = sub_10001644C(&qword_1005A3C08);
  uint64_t v9 = *(void *)(v8 - 8);
  double v10 = __chkstk_darwin(v8);
  id v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v13 = *(void (**)(char *, uint64_t, uint64_t, double))(v9 + 16);
  v13(v12, a1, v8, v10);
  uint64_t v14 = *(void **)(a2 + 16);
  uint64_t v15 = (objc_class *)type metadata accessor for BackgroundAssetTransparencySheetTaskHandleObserver();
  uint64_t v16 = (char *)objc_allocWithZone(v15);
  ((void (*)(char *, char *, uint64_t))v13)(&v16[OBJC_IVAR____TtC9appstoredP33_FD53C899C8A1CD94A26CE020D4F0482750BackgroundAssetTransparencySheetTaskHandleObserver_continuation], v12, v8);
  *(void *)&v16[OBJC_IVAR____TtC9appstoredP33_FD53C899C8A1CD94A26CE020D4F0482750BackgroundAssetTransparencySheetTaskHandleObserver_logKey] = v14;
  v22.receiver = v16;
  v22.super_class = v15;
  id v17 = v14;
  id v18 = objc_msgSendSuper2(&v22, "init");
  (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
  uint64_t v19 = *a3;
  *a3 = v18;
  id v20 = v18;

  [a4 registerObserver:v20];
  id v21 = [objc_allocWithZone((Class)SBSRemoteAlertActivationContext) init];
  [a4 activateWithContext:v21];
}

uint64_t sub_1000C7228()
{
  return _swift_task_switch(sub_1000C7244, 0, 0);
}

uint64_t sub_1000C7244()
{
  sub_10001644C((uint64_t *)&unk_1005A3620);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100488EC0;
  *(void *)(inited + 32) = 7368801;
  *(void *)(inited + 40) = 0xE300000000000000;
  *(void *)(inited + 48) = 0xD000000000000012;
  *(void *)(inited + 56) = 0x800000010044CE80;
  *(void *)(inited + 72) = &type metadata for String;
  *(void *)(inited + 80) = 0x707954746E657665;
  *(void *)(inited + 88) = 0xE900000000000065;
  *(void *)(inited + 96) = 1701273968;
  *(void *)(inited + 104) = 0xE400000000000000;
  *(void *)(inited + 120) = &type metadata for String;
  *(void *)(inited + 128) = 0x644965676170;
  *(void *)(inited + 136) = 0xE600000000000000;
  *(void *)(inited + 144) = 0xD000000000000019;
  *(void *)(inited + 152) = 0x800000010044F650;
  *(void *)(inited + 168) = &type metadata for String;
  *(void *)(inited + 176) = 0x6570795465676170;
  *(void *)(inited + 184) = 0xE800000000000000;
  *(void *)(inited + 192) = 0x6C61646F4DLL;
  *(void *)(inited + 200) = 0xE500000000000000;
  *(void *)(inited + 216) = &type metadata for String;
  *(void *)(inited + 224) = 1701273968;
  *(void *)(inited + 264) = &type metadata for String;
  *(void *)(inited + 232) = 0xE400000000000000;
  *(void *)(inited + 240) = 0xD00000000000001FLL;
  *(void *)(inited + 248) = 0x800000010044F670;
  unint64_t v2 = sub_1000429D8(inited);
  sub_1000C51E4(v2);
  swift_bridgeObjectRelease();
  id v3 = objc_allocWithZone((Class)AMSMetricsEvent);
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v5 = [v3 initWithUnderlyingDictionary:isa];
  v0[36] = v5;

  NSString v6 = String._bridgeToObjectiveC()();
  [v5 setTopic:v6];

  id v7 = objc_allocWithZone((Class)type metadata accessor for ASEMetrics());
  v0[37] = sub_10005BAD0(0);
  sub_10001644C(&qword_1005A43D0);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_100488A80;
  *(void *)(v8 + 32) = v5;
  uint64_t v12 = v8;
  specialized Array._endMutation()();
  v0[38] = v12;
  id v9 = v5;
  double v10 = (void *)swift_task_alloc();
  v0[39] = v10;
  *double v10 = v0;
  v10[1] = sub_1000C7518;
  return sub_10005C1A0(v12, 1);
}

uint64_t sub_1000C7518()
{
  uint64_t v1 = *(void **)(*(void *)v0 + 296);
  swift_task_dealloc();
  swift_bridgeObjectRelease();

  return _swift_task_switch(sub_1000C7648, 0, 0);
}

uint64_t sub_1000C7648()
{
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1000C76A8()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for BackgroundAssetTransparencySheetTask()
{
  return self;
}

id sub_1000C776C(void *a1)
{
  uint64_t v3 = type metadata accessor for Logger();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  NSString v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Logger.appInstall.getter();
  id v7 = v1;
  uint64_t v8 = Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v8, v9))
  {
    id v18 = a1;
    uint64_t v10 = swift_slowAlloc();
    uint64_t v17 = v4;
    uint64_t v11 = (uint8_t *)v10;
    uint64_t v16 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v11 = 138412290;
    uint64_t v12 = v3;
    uint64_t v13 = *(Class *)((char *)&v7->isa
                   + OBJC_IVAR____TtC9appstoredP33_FD53C899C8A1CD94A26CE020D4F0482750BackgroundAssetTransparencySheetTaskHandleObserver_logKey);
    uint64_t v19 = v13;
    id v14 = v13;
    a1 = v18;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v16 = v13;
    uint64_t v3 = v12;

    _os_log_impl((void *)&_mh_execute_header, v8, v9, "[%@] Sheet did deactivate", v11, 0xCu);
    sub_10001644C((uint64_t *)&unk_1005A3AA0);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v4 = v17;
    swift_slowDealloc();
  }
  else
  {

    uint64_t v8 = v7;
  }

  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return [a1 invalidate];
}

uint64_t sub_1000C79FC(void *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v43 = type metadata accessor for Logger();
  uint64_t v6 = *(void *)(v43 - 8);
  __chkstk_darwin(v43);
  uint64_t v8 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v10 = __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v40 - v11;
  objc_msgSend(a1, "unregisterObserver:", v3, v10);
  if (a2)
  {
    swift_errorRetain();
    static Logger.appInstall.getter();
    swift_errorRetain();
    id v13 = v3;
    swift_errorRetain();
    id v14 = (char *)v13;
    uint64_t v15 = Logger.logObject.getter();
    os_log_type_t v16 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v17 = swift_slowAlloc();
      id v18 = (void *)swift_slowAlloc();
      id v41 = (void *)swift_slowAlloc();
      id v45 = v41;
      *(_DWORD *)uint64_t v17 = 138412546;
      os_log_t v40 = v15;
      uint64_t v19 = *(void **)&v14[OBJC_IVAR____TtC9appstoredP33_FD53C899C8A1CD94A26CE020D4F0482750BackgroundAssetTransparencySheetTaskHandleObserver_logKey];
      uint64_t v42 = v6;
      uint64_t v44 = (uint64_t)v19;
      id v20 = v19;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *id v18 = v19;

      *(_WORD *)(v17 + 12) = 2082;
      swift_getErrorValue();
      uint64_t v21 = Error.localizedDescription.getter();
      uint64_t v44 = sub_1000F7290(v21, v22, (uint64_t *)&v45);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      os_log_t v23 = v40;
      _os_log_impl((void *)&_mh_execute_header, v40, v16, "[%@] Sheet did invalidate with error: %{public}s", (uint8_t *)v17, 0x16u);
      sub_10001644C((uint64_t *)&unk_1005A3AA0);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v42 + 8))(v12, v43);
    }
    else
    {

      swift_errorRelease();
      swift_errorRelease();

      (*(void (**)(char *, uint64_t))(v6 + 8))(v12, v43);
    }
    long long v30 = (void *)_convertErrorToNSError(_:)();
    id v31 = [v30 domain];

    uint64_t v32 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v34 = v33;

    if (v32 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v34 == v35)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v36 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v36 & 1) == 0) {
        goto LABEL_13;
      }
    }
    int v37 = (void *)_convertErrorToNSError(_:)();
    unint64_t v38 = (unint64_t)[v37 code];

    if (v38 <= 8 && ((1 << v38) & 0x1CF) == 0)
    {
      sub_10001644C(&qword_1005A3C08);
      CheckedContinuation.resume(returning:)();
      return swift_errorRelease();
    }
LABEL_13:
    id v45 = (void *)a2;
    swift_errorRetain();
    sub_10001644C(&qword_1005A3C08);
    CheckedContinuation.resume(throwing:)();
    return swift_errorRelease();
  }
  static Logger.appInstall.getter();
  unint64_t v24 = v3;
  uint64_t v25 = Logger.logObject.getter();
  os_log_type_t v26 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v25, v26))
  {
    int64_t v27 = (uint8_t *)swift_slowAlloc();
    id v41 = (void *)swift_slowAlloc();
    *(_DWORD *)int64_t v27 = 138412290;
    uint64_t v42 = v6;
    uint64_t v28 = *(Class *)((char *)&v24->isa
                   + OBJC_IVAR____TtC9appstoredP33_FD53C899C8A1CD94A26CE020D4F0482750BackgroundAssetTransparencySheetTaskHandleObserver_logKey);
    id v45 = v28;
    long long v29 = v28;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    uint64_t v6 = v42;
    void *v41 = v28;

    _os_log_impl((void *)&_mh_execute_header, v25, v26, "[%@] Sheet did invalidate", v27, 0xCu);
    sub_10001644C((uint64_t *)&unk_1005A3AA0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    uint64_t v25 = v24;
  }

  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v43);
  sub_10001644C(&qword_1005A3C08);
  return CheckedContinuation.resume(returning:)();
}

uint64_t sub_1000C80E8()
{
  return type metadata accessor for BackgroundAssetTransparencySheetTaskHandleObserver();
}

uint64_t type metadata accessor for BackgroundAssetTransparencySheetTaskHandleObserver()
{
  uint64_t result = qword_1005A5FE8;
  if (!qword_1005A5FE8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1000C813C()
{
  sub_1000C81D8();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_1000C81D8()
{
  if (!qword_1005A5FF8)
  {
    sub_10002E5A8(&qword_1005A4E40);
    unint64_t v0 = type metadata accessor for CheckedContinuation();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1005A5FF8);
    }
  }
}

uint64_t sub_1000C8248()
{
  uint64_t v0 = sub_10001644C(&qword_1005A4640);
  __chkstk_darwin(v0 - 8);
  unint64_t v2 = (char *)v11 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for TaskPriority();
  uint64_t v4 = *(void *)(v3 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v2, 1, 1, v3);
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = 0;
  *(void *)(v5 + 24) = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1)
  {
    sub_1000C85E0((uint64_t)v2);
    uint64_t v6 = 0;
    uint64_t v7 = 0;
  }
  else
  {
    TaskPriority.rawValue.getter();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v2, v3);
    if (*(void *)(v5 + 16))
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
      uint64_t v7 = v8;
      swift_unknownObjectRelease();
    }
    else
    {
      uint64_t v6 = 0;
      uint64_t v7 = 0;
    }
  }
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = &unk_1005A6040;
  *(void *)(v9 + 24) = v5;
  if (v7 | v6)
  {
    v11[0] = 0;
    v11[1] = 0;
    v11[2] = v6;
    v11[3] = v7;
  }
  swift_task_create();
  return swift_release();
}

unint64_t sub_1000C8470()
{
  unint64_t result = qword_1005A6028;
  if (!qword_1005A6028)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1005A6028);
  }
  return result;
}

uint64_t sub_1000C84B0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1000C84F8(uint64_t a1)
{
  sub_1000C7060(a1, *(void *)(v1 + 16), *(void ***)(v1 + 24), *(void **)(v1 + 32));
}

uint64_t sub_1000C8504()
{
  swift_unknownObjectRelease();
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000C853C()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = sub_100005040;
  return _swift_task_switch(sub_1000C7244, 0, 0);
}

uint64_t sub_1000C85E0(uint64_t a1)
{
  uint64_t v2 = sub_10001644C(&qword_1005A4640);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1000C8640()
{
  swift_release();
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000C8678()
{
  uint64_t v1 = type metadata accessor for Logger();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Logger.appInstall.getter();
  uint64_t v5 = v0;
  uint64_t v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = swift_slowAlloc();
    uint64_t v16 = v2;
    uint64_t v9 = (uint8_t *)v8;
    uint64_t v15 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v9 = 138412290;
    uint64_t v10 = v1;
    uint64_t v11 = *(Class *)((char *)&v5->isa
                   + OBJC_IVAR____TtC9appstoredP33_FD53C899C8A1CD94A26CE020D4F0482750BackgroundAssetTransparencySheetTaskHandleObserver_logKey);
    uint64_t v17 = v11;
    id v12 = v11;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v15 = v11;
    uint64_t v1 = v10;

    _os_log_impl((void *)&_mh_execute_header, v6, v7, "[%@] Sheet did activate", v9, 0xCu);
    sub_10001644C((uint64_t *)&unk_1005A3AA0);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v2 = v16;
    swift_slowDealloc();
  }
  else
  {

    uint64_t v6 = v5;
  }

  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
}

NSString sub_1000C8884()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_1005A6048 = (uint64_t)result;
  return result;
}

id sub_1000C88BC()
{
  id result = [objc_allocWithZone((Class)TaskQueue) init];
  qword_1005B1538 = (uint64_t)result;
  return result;
}

uint64_t sub_1000C8A04()
{
  v1[8] = v0;
  uint64_t v2 = type metadata accessor for Logger();
  v1[9] = v2;
  v1[10] = *(void *)(v2 - 8);
  v1[11] = swift_task_alloc();
  v1[12] = swift_task_alloc();
  v1[13] = swift_task_alloc();
  v1[14] = swift_task_alloc();
  v1[15] = swift_task_alloc();
  return _swift_task_switch(sub_1000C8AF8, 0, 0);
}

uint64_t sub_1000C8AF8()
{
  uint64_t v1 = v0;
  uint64_t v3 = (id *)(v0 + 64);
  uint64_t v2 = *(void **)(v0 + 64);
  static Logger.appInstall.getter();
  id v4 = v2;
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.default.getter();
  uint64_t v72 = (void *)(v0 + 32);
  if (os_log_type_enabled(v5, v6))
  {
    os_log_type_t v7 = *(char **)(v0 + 64);
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    uint64_t v71 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 138412290;
    uint64_t v9 = *(void **)&v7[OBJC_IVAR____TtC9appstored24BackgroundAssetRelayTask_logKey];
    *(void *)(v0 + 56) = v9;
    id v10 = v9;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v71 = v9;

    _os_log_impl((void *)&_mh_execute_header, v5, v6, "[%@] Starting background asset relay task", v8, 0xCu);
    sub_10001644C((uint64_t *)&unk_1005A3AA0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    id v11 = *v3;
  }
  uint64_t v12 = *(void *)(v1 + 64);
  id v13 = *(void (**)(void, void))(*(void *)(v1 + 80) + 8);
  v13(*(void *)(v1 + 120), *(void *)(v1 + 72));
  uint64_t v14 = *(void **)(v12 + OBJC_IVAR____TtC9appstored24BackgroundAssetRelayTask_install);
  if (sub_100424EF8(v14) && sub_100424EF8(v14) != (id)2)
  {
    uint64_t v16 = (void *)(v1 + 88);
    int64_t v27 = *(void **)(v1 + 64);
    static Logger.appInstall.getter();
    id v28 = v27;
    uint64_t v19 = Logger.logObject.getter();
    os_log_type_t v29 = static os_log_type_t.default.getter();
    BOOL v30 = os_log_type_enabled(v19, v29);
    unint64_t v22 = *(char **)(v1 + 64);
    if (v30)
    {
      id v70 = v13;
      uint64_t v31 = swift_slowAlloc();
      uint64_t v32 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v31 = 138412546;
      os_log_type_t typea = v29;
      uint64_t v33 = v19;
      uint64_t v34 = *(void **)&v22[OBJC_IVAR____TtC9appstored24BackgroundAssetRelayTask_logKey];
      *(v3 - 6) = v34;
      id v35 = v34;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v32 = v34;
      uint64_t v19 = v33;

      *(_WORD *)(v31 + 12) = 2050;
      id v36 = sub_100424EF8(v14);

      *(v3 - 5) = v36;
      id v13 = v70;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      _os_log_impl((void *)&_mh_execute_header, v33, typea, "[%@] Not proceeding, Invalid source %{public}ld", (uint8_t *)v31, 0x16u);
      sub_10001644C((uint64_t *)&unk_1005A3AA0);
      swift_arrayDestroy();
      swift_slowDealloc();
      uint64_t v16 = (void *)(v1 + 88);
      goto LABEL_11;
    }

LABEL_27:
    goto LABEL_28;
  }
  uint64_t v15 = v3 - 3;
  if (sub_10026E91C(v14, @"restore_type"))
  {
    uint64_t v16 = (void *)(v1 + 96);
    uint64_t v17 = *(void **)(v1 + 64);
    static Logger.appInstall.getter();
    id v18 = v17;
    uint64_t v19 = Logger.logObject.getter();
    os_log_type_t v20 = static os_log_type_t.default.getter();
    BOOL v21 = os_log_type_enabled(v19, v20);
    unint64_t v22 = *(char **)(v1 + 64);
    if (v21)
    {
      os_log_type_t type = v19;
      os_log_t v23 = (uint8_t *)swift_slowAlloc();
      unint64_t v24 = (void *)swift_slowAlloc();
      *(_DWORD *)os_log_t v23 = 138412290;
      uint64_t v25 = *(void **)&v22[OBJC_IVAR____TtC9appstored24BackgroundAssetRelayTask_logKey];
      *uint64_t v72 = v25;
      id v26 = v25;
      uint64_t v16 = (void *)(v1 + 96);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      void *v24 = v25;
      uint64_t v19 = type;

      _os_log_impl((void *)&_mh_execute_header, type, v20, "[%@] Not proceeding, Restores not supported", v23, 0xCu);
      sub_10001644C((uint64_t *)&unk_1005A3AA0);
      swift_arrayDestroy();
      swift_slowDealloc();
LABEL_11:
      swift_slowDealloc();
LABEL_28:

      v13(*v16, *(void *)(v1 + 72));
      sub_1000C9B88(*(void **)(v1 + 64));
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      id v51 = *(uint64_t (**)(void))(v1 + 8);
      return v51();
    }
    goto LABEL_27;
  }
  if (sub_100424B7C(v14) && !sub_100424BD0(v14))
  {
    uint64_t v16 = (void *)(v1 + 104);
    id v52 = *(void **)(v1 + 64);
    static Logger.appInstall.getter();
    id v53 = v52;
    uint64_t v19 = Logger.logObject.getter();
    os_log_type_t v54 = static os_log_type_t.default.getter();
    BOOL v55 = os_log_type_enabled(v19, v54);
    unint64_t v22 = *(char **)(v1 + 64);
    if (v55)
    {
      typec = v19;
      id v56 = (uint8_t *)swift_slowAlloc();
      uint64_t v73 = (void *)swift_slowAlloc();
      *(_DWORD *)id v56 = 138412290;
      Class v57 = *(void **)&v22[OBJC_IVAR____TtC9appstored24BackgroundAssetRelayTask_logKey];
      *(void *)(v1 + 48) = v57;
      id v58 = v57;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v73 = v57;
      uint64_t v19 = typec;

      _os_log_impl((void *)&_mh_execute_header, typec, v54, "[%@] Not proceeding, Automatic installs not supported", v56, 0xCu);
      sub_10001644C((uint64_t *)&unk_1005A3AA0);
      swift_arrayDestroy();
      swift_slowDealloc();
      uint64_t v16 = (void *)(v1 + 104);
      goto LABEL_11;
    }
    goto LABEL_27;
  }
  if ((*((unsigned char *)*v3 + OBJC_IVAR____TtC9appstored24BackgroundAssetRelayTask_shouldSkipTransparencySheet) & 1) != 0
    || sub_100424BD0(v14) == (id)1)
  {
    unsigned __int8 v49 = (void *)swift_task_alloc();
    *(void *)(v1 + 168) = v49;
    *unsigned __int8 v49 = v1;
    v49[1] = sub_1000C97C4;
    return sub_1000C9D8C();
  }
  else
  {
    uint64_t v37 = self;
    if (qword_1005A3080 != -1) {
      swift_once();
    }
    id v38 = sub_1003F1FD8(v37, (const __CFString *)qword_1005A6048);
    if (v38)
    {
      long long v39 = v38;
      static Bool._conditionallyBridgeFromObjectiveC(_:result:)();
    }
    if (sub_10026E7EC(v14, @"supress_dialogs"))
    {
      uint64_t v16 = (void *)(v1 + 112);
      os_log_t v40 = *(void **)(v1 + 64);
      static Logger.appInstall.getter();
      id v41 = v40;
      uint64_t v19 = Logger.logObject.getter();
      os_log_type_t v42 = static os_log_type_t.default.getter();
      BOOL v43 = os_log_type_enabled(v19, v42);
      unint64_t v22 = *(char **)(v1 + 64);
      if (v43)
      {
        typeb = v19;
        uint64_t v44 = (uint8_t *)swift_slowAlloc();
        id v45 = v15;
        uint64_t v46 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v44 = 138412290;
        uint64_t v47 = *(void **)&v22[OBJC_IVAR____TtC9appstored24BackgroundAssetRelayTask_logKey];
        *id v45 = v47;
        id v48 = v47;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *uint64_t v46 = v47;
        uint64_t v19 = typeb;

        _os_log_impl((void *)&_mh_execute_header, typeb, v42, "[%@] Not proceeding, Dialogs are suppressed", v44, 0xCu);
        sub_10001644C((uint64_t *)&unk_1005A3AA0);
        swift_arrayDestroy();
        swift_slowDealloc();
        goto LABEL_11;
      }
      goto LABEL_27;
    }
    uint64_t v59 = *(void *)(v1 + 64);
    uint64_t v60 = *(void **)(v59 + OBJC_IVAR____TtC9appstored24BackgroundAssetRelayTask_logKey);
    unint64_t v61 = *(void **)(v59 + OBJC_IVAR____TtC9appstored24BackgroundAssetRelayTask_requestToken);
    type metadata accessor for BackgroundAssetTransparencySheetTask();
    uint64_t v62 = swift_allocObject();
    *(void *)(v1 + 128) = v62;
    *(void *)(v62 + 16) = v60;
    *(void *)(v62 + 24) = v61;
    id v63 = v60;
    id v64 = v61;
    id v65 = (void *)swift_task_alloc();
    *(void *)(v1 + 136) = v65;
    *id v65 = v1;
    v65[1] = sub_1000C9494;
    return sub_1000C55E4();
  }
}

uint64_t sub_1000C9494()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 144) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return _swift_task_switch(sub_1000C9A28, 0, 0);
  }
  else
  {
    uint64_t v3 = (void *)swift_task_alloc();
    *(void *)(v2 + 152) = v3;
    *uint64_t v3 = v2;
    v3[1] = sub_1000C9600;
    return sub_1000C9D8C();
  }
}

uint64_t sub_1000C9600()
{
  *(void *)(*(void *)v1 + 160) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1000C9AD8;
  }
  else {
    uint64_t v2 = sub_1000C9714;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1000C9714()
{
  swift_release();
  sub_1000C9B88(*(void **)(v0 + 64));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1000C97C4()
{
  *(void *)(*(void *)v1 + 176) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1000C9980;
  }
  else {
    uint64_t v2 = sub_1000C98D8;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1000C98D8()
{
  sub_1000C9B88(*(void **)(v0 + 64));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1000C9980()
{
  sub_1000C9B88(*(void **)(v0 + 64));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1000C9A28()
{
  swift_release();
  sub_1000C9B88(*(void **)(v0 + 64));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1000C9AD8()
{
  swift_release();
  sub_1000C9B88(*(void **)(v0 + 64));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1000C9B88(void *a1)
{
  uint64_t v2 = type metadata accessor for Logger();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Logger.appInstall.getter();
  os_log_type_t v6 = a1;
  os_log_type_t v7 = Logger.logObject.getter();
  os_log_type_t v8 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = swift_slowAlloc();
    uint64_t v16 = v3;
    id v10 = (uint8_t *)v9;
    uint64_t v15 = (void *)swift_slowAlloc();
    *(_DWORD *)id v10 = 138412290;
    id v11 = *(Class *)((char *)&v6->isa + OBJC_IVAR____TtC9appstored24BackgroundAssetRelayTask_logKey);
    uint64_t v17 = v11;
    id v12 = v11;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v15 = v11;

    _os_log_impl((void *)&_mh_execute_header, v7, v8, "[%@] Finished background asset relay task", v10, 0xCu);
    sub_10001644C((uint64_t *)&unk_1005A3AA0);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v3 = v16;
    swift_slowDealloc();
  }
  else
  {

    os_log_type_t v7 = v6;
  }

  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_1000C9D8C()
{
  v1[15] = v0;
  uint64_t v2 = type metadata accessor for Logger();
  v1[16] = v2;
  v1[17] = *(void *)(v2 - 8);
  v1[18] = swift_task_alloc();
  v1[19] = swift_task_alloc();
  v1[20] = swift_task_alloc();
  return _swift_task_switch(sub_1000C9E68, 0, 0);
}

uint64_t sub_1000C9E68()
{
  uint64_t v1 = (void *)(v0 + 56);
  uint64_t v2 = *(void *)(*(void *)(v0 + 120) + OBJC_IVAR____TtC9appstored24BackgroundAssetRelayTask_metadata);
  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  if (!*(void *)(v2 + 16) || (unint64_t v5 = sub_100049A4C(v3, v4), (v6 & 1) == 0))
  {
    *(_OWORD *)(v0 + 16) = 0u;
    *(_OWORD *)(v0 + 32) = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  sub_100031C38(*(void *)(v2 + 56) + 32 * v5, v0 + 16);
  swift_bridgeObjectRelease();
  if (!*(void *)(v0 + 40))
  {
LABEL_10:
    sub_100016714(v0 + 16, &qword_1005A5660);
    goto LABEL_11;
  }
  uint64_t result = swift_dynamicCast();
  if ((result & 1) == 0)
  {
LABEL_11:
    BOOL v21 = (void *)(v0 + 144);
    unint64_t v22 = *(void **)(v0 + 120);
    static Logger.appInstall.getter();
    id v23 = v22;
    unint64_t v24 = Logger.logObject.getter();
    os_log_type_t v25 = static os_log_type_t.default.getter();
    BOOL v26 = os_log_type_enabled(v24, v25);
    int64_t v27 = *(char **)(v0 + 120);
    if (v26)
    {
      id v28 = (uint8_t *)swift_slowAlloc();
      os_log_type_t type = (void *)swift_slowAlloc();
      *(_DWORD *)id v28 = 138412290;
      os_log_type_t v29 = *(void **)&v27[OBJC_IVAR____TtC9appstored24BackgroundAssetRelayTask_logKey];
      *(void *)(v0 + 48) = v29;
      id v30 = v29;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *os_log_type_t type = v29;
      BOOL v21 = (void *)(v0 + 144);

      _os_log_impl((void *)&_mh_execute_header, v24, v25, "[%@] No essential max install size provided", v28, 0xCu);
      sub_10001644C((uint64_t *)&unk_1005A3AA0);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    uint64_t v31 = *(void (**)(void, void))(*(void *)(v0 + 136) + 8);
    goto LABEL_15;
  }
  uint64_t v8 = *(void *)(*(void *)(v0 + 120) + OBJC_IVAR____TtC9appstored24BackgroundAssetRelayTask_packageDiskUsage);
  uint64_t v9 = v8 + *v1;
  if (__OFADD__(v8, *v1))
  {
    __break(1u);
    return result;
  }
  uint64_t v10 = sub_1000CA918();
  if (v10 >= v9) {
    goto LABEL_16;
  }
  uint64_t v11 = v10;
  id v12 = *(void **)(v0 + 120);
  static Logger.appInstall.getter();
  id v13 = v12;
  uint64_t v14 = Logger.logObject.getter();
  os_log_type_t v15 = static os_log_type_t.error.getter();
  BOOL v16 = os_log_type_enabled(v14, v15);
  uint64_t v17 = *(char **)(v0 + 120);
  if (v16)
  {
    uint64_t v18 = swift_slowAlloc();
    uint64_t v46 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v18 = 138412802;
    uint64_t v19 = *(void **)&v17[OBJC_IVAR____TtC9appstored24BackgroundAssetRelayTask_logKey];
    *(void *)(v0 + 96) = v19;
    id v20 = v19;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v46 = v19;

    *(_WORD *)(v18 + 12) = 2050;
    *(void *)(v0 + 104) = v9;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v18 + 22) = 2050;
    *(void *)(v0 + 112) = v11;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v14, v15, "[%@] Insufficient space. %{public}lld needed, %{public}lld available", (uint8_t *)v18, 0x20u);
    sub_10001644C((uint64_t *)&unk_1005A3AA0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  uint64_t v33 = *(void *)(v0 + 120);
  uint64_t v31 = *(void (**)(void, void))(*(void *)(v0 + 136) + 8);
  v31(*(void *)(v0 + 160), *(void *)(v0 + 128));
  uint64_t v34 = *(void **)(v33 + OBJC_IVAR____TtC9appstored24BackgroundAssetRelayTask_install);
  if (sub_100424BD0(v34))
  {
    BOOL v21 = (void *)(v0 + 152);
    id v35 = *(void **)(v0 + 120);
    static Logger.appInstall.getter();
    id v36 = v35;
    uint64_t v37 = Logger.logObject.getter();
    os_log_type_t v38 = static os_log_type_t.error.getter();
    BOOL v39 = os_log_type_enabled(v37, v38);
    os_log_t v40 = *(char **)(v0 + 120);
    if (v39)
    {
      uint64_t v41 = swift_slowAlloc();
      unsigned __int8 v49 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v41 = 138412546;
      os_log_type_t typea = v37;
      os_log_type_t v42 = *(void **)&v40[OBJC_IVAR____TtC9appstored24BackgroundAssetRelayTask_logKey];
      *(void *)(v0 + 64) = v42;
      id v43 = v42;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *unsigned __int8 v49 = v42;

      *(_WORD *)(v41 + 12) = 2050;
      id v44 = sub_100424BD0(v34);

      *(void *)(v0 + 72) = v44;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      _os_log_impl((void *)&_mh_execute_header, typea, v38, "[%@] Not failing for insufficient space for update of type: %{public}ld", (uint8_t *)v41, 0x16u);
      sub_10001644C((uint64_t *)&unk_1005A3AA0);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
LABEL_15:
    v31(*v21, *(void *)(v0 + 128));
LABEL_16:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v32 = *(uint64_t (**)(void))(v0 + 8);
    return v32();
  }
  id v45 = (void *)swift_task_alloc();
  *(void *)(v0 + 168) = v45;
  *id v45 = v0;
  v45[1] = sub_1000CA4F4;
  return sub_1000CAF90(v9);
}

uint64_t sub_1000CA4F4()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_1000CA5F0, 0, 0);
}

uint64_t sub_1000CA5F0()
{
  type metadata accessor for ASDError(0);
  *(void *)(v0 + 88) = 1310;
  sub_1000CC958((uint64_t)_swiftEmptyArrayStorage);
  sub_1000CD910(&qword_1005A4450, type metadata accessor for ASDError);
  _BridgedStoredNSError.init(_:userInfo:)();
  swift_willThrow();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1000CA870(const void *a1, void *a2)
{
  v2[2] = a2;
  v2[3] = _Block_copy(a1);
  a2;
  uint64_t v4 = (void *)swift_task_alloc();
  v2[4] = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_100055EA0;
  return sub_1000C8A04();
}

uint64_t sub_1000CA918()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Logger();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v30 = v2;
  uint64_t v31 = v3;
  __chkstk_darwin(v2);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)v27 - v5;
  uint64_t v7 = type metadata accessor for URLResourceValues();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for URL();
  uint64_t v33 = *(void *)(v11 - 8);
  uint64_t v34 = v11;
  __chkstk_darwin(v11);
  id v13 = (char *)v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = NSHomeDirectory();
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  URL.init(fileURLWithPath:)();
  swift_bridgeObjectRelease();
  sub_10001644C(&qword_1005A60E8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100488070;
  *(void *)(inited + 32) = NSURLVolumeAvailableCapacityForImportantUsageKey;
  BOOL v16 = NSURLVolumeAvailableCapacityForImportantUsageKey;
  sub_1000CD580(inited);
  swift_setDeallocating();
  type metadata accessor for URLResourceKey(0);
  swift_arrayDestroy();
  uint64_t v32 = v13;
  URL.resourceValues(forKeys:)();
  swift_bridgeObjectRelease();
  uint64_t v17 = URLResourceValues.volumeAvailableCapacityForImportantUsage.getter();
  if (v18)
  {
    static Logger.appInstall.getter();
    id v20 = v1;
    BOOL v21 = Logger.logObject.getter();
    os_log_type_t v22 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v21, v22))
    {
      id v23 = (uint8_t *)swift_slowAlloc();
      id v28 = (void *)swift_slowAlloc();
      os_log_type_t v29 = v23;
      *(_DWORD *)id v23 = 138412290;
      v27[1] = v23 + 4;
      unint64_t v24 = *(void **)&v20[OBJC_IVAR____TtC9appstored24BackgroundAssetRelayTask_logKey];
      id v35 = v24;
      id v25 = v24;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *id v28 = v24;

      _os_log_impl((void *)&_mh_execute_header, v21, v22, "[%@] Failure to get available capacity", v29, 0xCu);
      sub_10001644C((uint64_t *)&unk_1005A3AA0);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    (*(void (**)(char *, uint64_t))(v31 + 8))(v6, v30);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    (*(void (**)(char *, uint64_t))(v33 + 8))(v32, v34);
    return 0;
  }
  else
  {
    uint64_t v19 = v17;
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    (*(void (**)(char *, uint64_t))(v33 + 8))(v32, v34);
  }
  return v19;
}

uint64_t sub_1000CAF90(uint64_t a1)
{
  v2[3] = a1;
  v2[4] = v1;
  type metadata accessor for String.LocalizationValue();
  v2[5] = swift_task_alloc();
  type metadata accessor for String.LocalizationValue.StringInterpolation();
  v2[6] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for Logger();
  v2[7] = v3;
  v2[8] = *(void *)(v3 - 8);
  v2[9] = swift_task_alloc();
  return _swift_task_switch(sub_1000CB0A8, 0, 0);
}

uint64_t sub_1000CB0A8()
{
  uint64_t v1 = (void *)v0[4];
  static Logger.appInstall.getter();
  id v2 = v1;
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (char *)v0[4];
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    os_log_type_t v29 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 138412290;
    uint64_t v7 = *(void **)&v5[OBJC_IVAR____TtC9appstored24BackgroundAssetRelayTask_logKey];
    v0[2] = v7;
    id v8 = v7;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    void *v29 = v7;

    _os_log_impl((void *)&_mh_execute_header, v3, v4, "[%@] Displaying insufficient space for essential assets dialog", v6, 0xCu);
    sub_10001644C((uint64_t *)&unk_1005A3AA0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    uint64_t v9 = (void *)v0[4];
  }
  uint64_t v10 = v0[4];
  uint64_t v11 = v0[3];
  (*(void (**)(void, void))(v0[8] + 8))(v0[9], v0[7]);
  String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v12._countAndFlagsBits = 0xD000000000000035;
  v12._object = (void *)0x800000010044F810;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v12);
  String.LocalizationValue.StringInterpolation.appendInterpolation(_:)(*(Swift::String *)(v10
                                                                                        + OBJC_IVAR____TtC9appstored24BackgroundAssetRelayTask_appName));
  v13._countAndFlagsBits = 0;
  v13._object = (void *)0xE000000000000000;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v13);
  String.LocalizationValue.init(stringInterpolation:)();
  uint64_t v14 = String.init(appStoreDaemonLocalized:comment:)();
  uint64_t v16 = v15;
  v0[10] = v15;
  sub_1000D5A90((double)v11);
  uint64_t v18 = v17;
  id v20 = v19;
  String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v21._object = (void *)0x800000010044F850;
  v21._countAndFlagsBits = 0xD000000000000034;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v21);
  v22._countAndFlagsBits = v18;
  v22._object = v20;
  String.LocalizationValue.StringInterpolation.appendInterpolation(_:)(v22);
  swift_bridgeObjectRelease();
  v23._countAndFlagsBits = 0;
  v23._object = (void *)0xE000000000000000;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v23);
  String.LocalizationValue.init(stringInterpolation:)();
  uint64_t v24 = String.init(appStoreDaemonLocalized:comment:)();
  uint64_t v26 = v25;
  v0[11] = v25;
  int64_t v27 = (void *)swift_task_alloc();
  v0[12] = v27;
  *int64_t v27 = v0;
  v27[1] = sub_1000CB3C0;
  return sub_1000CBFA0(v14, v16, v24, v26);
}

uint64_t sub_1000CB3C0()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

void sub_1000CB550(void *a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for Logger();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  id v8 = (char *)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v47 - v10;
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v47 - v13;
  if (a2)
  {
    swift_errorRetain();
    static Logger.appInstall.getter();
    swift_errorRetain();
    id v15 = v2;
    swift_errorRetain();
    uint64_t v16 = (char *)v15;
    uint64_t v17 = Logger.logObject.getter();
    os_log_type_t v18 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v17, v18))
    {
      uint64_t v19 = swift_slowAlloc();
      id v20 = (void *)swift_slowAlloc();
      id v48 = (void *)swift_slowAlloc();
      id v52 = v48;
      *(_DWORD *)uint64_t v19 = 138412546;
      os_log_t v47 = v17;
      id v49 = (id)v5;
      uint64_t v50 = v6;
      Swift::String v21 = *(void **)&v16[OBJC_IVAR____TtC9appstored24BackgroundAssetRelayTask_logKey];
      uint64_t v51 = (uint64_t)v21;
      id v22 = v21;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *id v20 = v21;

      *(_WORD *)(v19 + 12) = 2082;
      swift_getErrorValue();
      uint64_t v23 = Error.localizedDescription.getter();
      uint64_t v51 = sub_1000F7290(v23, v24, (uint64_t *)&v52);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      os_log_t v25 = v47;
      _os_log_impl((void *)&_mh_execute_header, v47, v18, "[%@] Failed to display insufficient space dialog: %{public}s", (uint8_t *)v19, 0x16u);
      sub_10001644C((uint64_t *)&unk_1005A3AA0);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
      (*(void (**)(char *, id))(v50 + 8))(v14, v49);
    }
    else
    {
      swift_errorRelease();

      swift_errorRelease();
      swift_errorRelease();

      (*(void (**)(char *, uint64_t))(v6 + 8))(v14, v5);
    }
    return;
  }
  if (!a1) {
    return;
  }
  uint64_t v50 = v6;
  id v26 = a1;
  id v27 = [v26 selectedActionIdentifier];
  uint64_t v28 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v30 = v29;

  if (v28 == 0xD000000000000019 && v30 == 0x800000010044F890)
  {
    swift_bridgeObjectRelease();
LABEL_11:
    static Logger.appInstall.getter();
    uint64_t v32 = v2;
    uint64_t v33 = Logger.logObject.getter();
    os_log_type_t v34 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v33, v34))
    {
      id v49 = (id)v5;
      id v35 = (uint8_t *)swift_slowAlloc();
      id v48 = (void *)swift_slowAlloc();
      *(_DWORD *)id v35 = 138412290;
      id v36 = v26;
      uint64_t v37 = *(Class *)((char *)&v32->isa + OBJC_IVAR____TtC9appstored24BackgroundAssetRelayTask_logKey);
      id v52 = v37;
      os_log_type_t v38 = v37;
      uint64_t v5 = (uint64_t)v49;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *id v48 = v37;
      id v26 = v36;

      _os_log_impl((void *)&_mh_execute_header, v33, v34, "[%@] Opening storage management", v35, 0xCu);
      sub_10001644C((uint64_t *)&unk_1005A3AA0);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      uint64_t v33 = v32;
    }
    uint64_t v39 = v50;

    (*(void (**)(char *, uint64_t))(v39 + 8))(v11, v5);
    sub_1000CBBD0();

    return;
  }
  char v31 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  if (v31) {
    goto LABEL_11;
  }
  static Logger.appInstall.getter();
  os_log_t v40 = v2;
  uint64_t v41 = Logger.logObject.getter();
  os_log_type_t v42 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v41, v42))
  {
    id v49 = v26;
    id v43 = (uint8_t *)swift_slowAlloc();
    id v48 = (void *)swift_slowAlloc();
    *(_DWORD *)id v43 = 138412290;
    id v44 = *(Class *)((char *)&v40->isa + OBJC_IVAR____TtC9appstored24BackgroundAssetRelayTask_logKey);
    id v52 = v44;
    id v45 = v44;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *id v48 = v44;
    id v26 = v49;

    _os_log_impl((void *)&_mh_execute_header, v41, v42, "[%@] Cancel selected on insufficient space dialog", v43, 0xCu);
    sub_10001644C((uint64_t *)&unk_1005A3AA0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    uint64_t v41 = v40;
  }
  uint64_t v46 = v50;

  (*(void (**)(char *, uint64_t))(v46 + 8))(v8, v5);
}

id sub_1000CBBD0()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Logger();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10001644C((uint64_t *)&unk_1005A5670);
  __chkstk_darwin(v6 - 8);
  id v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v27 - v10;
  URL.init(string:)();
  id result = [self defaultWorkspace];
  if (result)
  {
    uint64_t v13 = result;
    sub_100016588((uint64_t)v11, (uint64_t)v8, (uint64_t *)&unk_1005A5670);
    uint64_t v14 = type metadata accessor for URL();
    uint64_t v15 = *(void *)(v14 - 8);
    uint64_t v17 = 0;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v8, 1, v14) != 1)
    {
      URL._bridgeToObjectiveC()(v16);
      uint64_t v17 = v18;
      (*(void (**)(char *, uint64_t))(v15 + 8))(v8, v14);
    }
    sub_1000429D8((uint64_t)_swiftEmptyArrayStorage);
    Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    unsigned __int8 v20 = [v13 openSensitiveURL:v17 withOptions:isa];

    if ((v20 & 1) == 0)
    {
      static Logger.appInstall.getter();
      Swift::String v21 = v1;
      id v22 = Logger.logObject.getter();
      os_log_type_t v23 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v22, v23))
      {
        unint64_t v24 = (uint8_t *)swift_slowAlloc();
        id v27 = (void *)swift_slowAlloc();
        uint64_t v28 = v2;
        uint64_t v29 = v3;
        *(_DWORD *)unint64_t v24 = 138412290;
        os_log_t v25 = *(void **)&v21[OBJC_IVAR____TtC9appstored24BackgroundAssetRelayTask_logKey];
        uint64_t v30 = v25;
        id v26 = v25;
        uint64_t v3 = v29;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *id v27 = v25;
        uint64_t v2 = v28;

        _os_log_impl((void *)&_mh_execute_header, v22, v23, "[%@] Failed to open storage management", v24, 0xCu);
        sub_10001644C((uint64_t *)&unk_1005A3AA0);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
      }
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    }
    return (id)sub_100016714((uint64_t)v11, (uint64_t *)&unk_1005A5670);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1000CBFA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[5] = a4;
  v5[6] = v4;
  v5[3] = a2;
  v5[4] = a3;
  v5[2] = a1;
  type metadata accessor for String.LocalizationValue();
  v5[7] = swift_task_alloc();
  return _swift_task_switch(sub_1000CC038, 0, 0);
}

uint64_t sub_1000CC038()
{
  uint64_t v1 = v0[6];
  String.LocalizationValue.init(stringLiteral:)();
  String.init(appStoreDaemonLocalized:comment:)();
  id v2 = objc_allocWithZone((Class)AMSDialogRequest);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  NSString v3 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  NSString v4 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v5 = [v2 initWithTitle:v3 message:v4];
  v0[8] = v5;

  swift_bridgeObjectRetain();
  NSString v6 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v5 setLogKey:v6];

  NSString v7 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v8 = self;
  id v9 = [v8 actionWithTitle:v7];
  v0[9] = v9;

  String.LocalizationValue.init(stringLiteral:)();
  String.init(appStoreDaemonLocalized:comment:)();
  NSString v10 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  NSString v11 = String._bridgeToObjectiveC()();
  id v12 = [v8 actionWithTitle:v10 identifier:v11];
  v0[10] = v12;

  sub_10001644C(&qword_1005A43D0);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_100488EB0;
  *(void *)(v13 + 32) = v9;
  *(void *)(v13 + 40) = v12;
  specialized Array._endMutation()();
  sub_100018D68(0, (unint64_t *)&unk_1005A4520);
  id v14 = v9;
  id v15 = v12;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v5 setButtonActions:isa];

  uint64_t v17 = swift_task_alloc();
  v0[11] = v17;
  *(void *)(v17 + 16) = v5;
  *(void *)(v17 + 24) = v1;
  os_log_type_t v18 = (void *)swift_task_alloc();
  v0[12] = v18;
  *os_log_type_t v18 = v0;
  v18[1] = sub_1000CC3B4;
  return withCheckedContinuation<A>(isolation:function:_:)(v18, 0, 0, 0xD000000000000032, 0x800000010044F8B0, sub_1000CD7B0, v17, (char *)&type metadata for () + 8);
}

uint64_t sub_1000CC3B4()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return _swift_task_switch(sub_1000CC4CC, 0, 0);
}

uint64_t sub_1000CC4CC()
{
  uint64_t v1 = *(void **)(v0 + 80);
  id v2 = *(void **)(v0 + 64);

  swift_task_dealloc();
  NSString v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

void sub_1000CC548(uint64_t a1, void *a2, void *a3)
{
  uint64_t v6 = sub_10001644C(&qword_1005A5940);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  __chkstk_darwin(v6);
  uint64_t v9 = self;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v6);
  unint64_t v10 = (*(unsigned __int8 *)(v7 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a3;
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v11 + v10, (char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
  aBlock[4] = sub_1000CD888;
  aBlock[5] = v11;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000A7EC8;
  void aBlock[3] = &unk_100515C00;
  id v12 = _Block_copy(aBlock);
  id v13 = a3;
  swift_release();
  sub_10033CE18(v9, a2, v12);
  _Block_release(v12);
}

uint64_t sub_1000CC714(void *a1, uint64_t a2)
{
  return CheckedContinuation.resume(returning:)();
}

uint64_t type metadata accessor for BackgroundAssetRelayTask()
{
  return self;
}

uint64_t sub_1000CC86C()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000CC8AC()
{
  id v2 = *(const void **)(v0 + 16);
  NSString v3 = *(void **)(v0 + 24);
  NSString v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *NSString v4 = v1;
  v4[1] = sub_100005040;
  uint64_t v5 = (uint64_t (*)(const void *, void *))((char *)&dword_1005A60B8 + dword_1005A60B8);
  return v5(v2, v3);
}

unint64_t sub_1000CC958(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    NSString v3 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10001644C(&qword_1005A3C10);
  uint64_t v2 = static _DictionaryStorage.allocate(capacity:)();
  NSString v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_100016588(v6, (uint64_t)&v15, &qword_1005A4238);
    uint64_t v7 = v15;
    uint64_t v8 = v16;
    unint64_t result = sub_1000CCA90(v15, v16);
    if (v10) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v3[6] + 16 * result);
    *uint64_t v11 = v7;
    v11[1] = v8;
    unint64_t result = (unint64_t)sub_10000C948(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1000CCA90(uint64_t a1, uint64_t a2)
{
  Hasher.init(_seed:)();
  String.hash(into:)();
  Swift::Int v4 = Hasher._finalize()();
  return sub_1000CCB08(a1, a2, v4);
}

unint64_t sub_1000CCB08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t i = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    char v10 = (void *)(v9 + 16 * i);
    if ((*v10 != a1 || v10[1] != a2) && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      unint64_t i = (i + 1) & v12;
      if ((*(void *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
      {
        BOOL v13 = (void *)(v9 + 16 * i);
        if ((*v13 != a1 || v13[1] != a2) && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
        {
          for (unint64_t i = (i + 1) & v12; ((*(void *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i) & 1) != 0; unint64_t i = (i + 1) & v12)
          {
            uint64_t v15 = (void *)(v9 + 16 * i);
            if (*v15 == a1 && v15[1] == a2) {
              break;
            }
            if (_stringCompareWithSmolCheck(_:_:expecting:)()) {
              break;
            }
          }
        }
      }
    }
  }
  return i;
}

void *sub_1000CCC58(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Calendar.Component();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v37 = (char *)&v30 - v7;
  uint64_t v8 = *(void *)(a1 + 16);
  if (v8)
  {
    sub_10001644C(&qword_1005A5CE8);
    uint64_t v9 = static _SetStorage.allocate(capacity:)();
    uint64_t v10 = 0;
    uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v11 = v3 + 16;
    id v35 = v12;
    uint64_t v36 = v9 + 56;
    uint64_t v13 = *(unsigned __int8 *)(v11 + 64);
    uint64_t v32 = v8;
    uint64_t v33 = a1 + ((v13 + 32) & ~v13);
    uint64_t v14 = *(void *)(v11 + 56);
    uint64_t v15 = (void (**)(char *, uint64_t))(v11 - 8);
    char v31 = (uint64_t (**)(unint64_t, char *, uint64_t))(v11 + 16);
    while (1)
    {
      uint64_t v34 = v10;
      v35(v37, v33 + v14 * v10, v2);
      sub_1000CD910(&qword_1005A5CD8, (void (*)(uint64_t))&type metadata accessor for Calendar.Component);
      uint64_t v16 = dispatch thunk of Hashable._rawHashValue(seed:)();
      uint64_t v17 = ~(-1 << *(unsigned char *)(v9 + 32));
      unint64_t v18 = v16 & v17;
      unint64_t v19 = (v16 & (unint64_t)v17) >> 6;
      uint64_t v20 = *(void *)(v36 + 8 * v19);
      uint64_t v21 = 1 << (v16 & v17);
      if ((v21 & v20) != 0)
      {
        while (1)
        {
          uint64_t v22 = v11;
          v35(v6, *(void *)(v9 + 48) + v18 * v14, v2);
          sub_1000CD910(&qword_1005A5CE0, (void (*)(uint64_t))&type metadata accessor for Calendar.Component);
          char v23 = dispatch thunk of static Equatable.== infix(_:_:)();
          unint64_t v24 = *v15;
          (*v15)(v6, v2);
          if (v23) {
            break;
          }
          unint64_t v18 = (v18 + 1) & v17;
          unint64_t v19 = v18 >> 6;
          uint64_t v20 = *(void *)(v36 + 8 * (v18 >> 6));
          uint64_t v21 = 1 << v18;
          uint64_t v11 = v22;
          if ((v20 & (1 << v18)) == 0) {
            goto LABEL_8;
          }
        }
        v24(v37, v2);
        uint64_t v11 = v22;
      }
      else
      {
LABEL_8:
        os_log_t v25 = v37;
        *(void *)(v36 + 8 * v19) = v21 | v20;
        unint64_t result = (void *)(*v31)(*(void *)(v9 + 48) + v18 * v14, v25, v2);
        uint64_t v27 = *(void *)(v9 + 16);
        BOOL v28 = __OFADD__(v27, 1);
        uint64_t v29 = v27 + 1;
        if (v28)
        {
          __break(1u);
          return result;
        }
        *(void *)(v9 + 16) = v29;
      }
      uint64_t v10 = v34 + 1;
      if (v34 + 1 == v32) {
        return (void *)v9;
      }
    }
  }
  return &_swiftEmptySetSingleton;
}

void sub_1000CCF70(unint64_t a1)
{
  unint64_t v2 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v6)
    {
LABEL_3:
      sub_10001644C(&qword_1005A60F8);
      uint64_t v3 = (void *)static _SetStorage.allocate(capacity:)();
      uint64_t v4 = a1 & 0xFFFFFFFFFFFFFF8;
      if (!v2) {
        goto LABEL_4;
      }
LABEL_8:
      swift_bridgeObjectRetain();
      uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (!v5) {
        return;
      }
      goto LABEL_9;
    }
  }
  else if (*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_3;
  }
  uint64_t v3 = &_swiftEmptySetSingleton;
  uint64_t v4 = a1 & 0xFFFFFFFFFFFFFF8;
  if (v2) {
    goto LABEL_8;
  }
LABEL_4:
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5) {
    return;
  }
LABEL_9:
  uint64_t v7 = (char *)(v3 + 7);
  uint64_t v43 = v5;
  if ((a1 & 0xC000000000000001) != 0)
  {
    uint64_t v8 = 0;
    while (1)
    {
      while (1)
      {
        uint64_t v9 = specialized _ArrayBuffer._getElementSlowPath(_:)();
        BOOL v10 = __OFADD__(v8++, 1);
        if (v10)
        {
          __break(1u);
          goto LABEL_36;
        }
        uint64_t v11 = v9;
        Swift::Int v12 = NSObject._rawHashValue(seed:)(v3[5]);
        uint64_t v13 = -1 << *((unsigned char *)v3 + 32);
        unint64_t v14 = v12 & ~v13;
        unint64_t v15 = v14 >> 6;
        uint64_t v16 = *(void *)&v7[8 * (v14 >> 6)];
        uint64_t v17 = 1 << v14;
        if (((1 << v14) & v16) != 0) {
          break;
        }
LABEL_20:
        *(void *)&v7[8 * v15] = v17 | v16;
        *(void *)(v3[6] + 8 * v14) = v11;
        uint64_t v23 = v3[2];
        BOOL v10 = __OFADD__(v23, 1);
        uint64_t v24 = v23 + 1;
        if (v10) {
          goto LABEL_37;
        }
        v3[2] = v24;
        if (v8 == v5) {
          return;
        }
      }
      sub_100018D68(0, (unint64_t *)&qword_1005A6028);
      id v18 = *(id *)(v3[6] + 8 * v14);
      char v19 = static NSObject.== infix(_:_:)();

      if ((v19 & 1) == 0)
      {
        uint64_t v20 = ~v13;
        while (1)
        {
          unint64_t v14 = (v14 + 1) & v20;
          unint64_t v15 = v14 >> 6;
          uint64_t v16 = *(void *)&v7[8 * (v14 >> 6)];
          uint64_t v17 = 1 << v14;
          if ((v16 & (1 << v14)) == 0) {
            break;
          }
          id v21 = *(id *)(v3[6] + 8 * v14);
          char v22 = static NSObject.== infix(_:_:)();

          if (v22) {
            goto LABEL_11;
          }
        }
        uint64_t v5 = v43;
        goto LABEL_20;
      }
LABEL_11:
      swift_unknownObjectRelease();
      uint64_t v5 = v43;
      if (v8 == v43) {
        return;
      }
    }
  }
  uint64_t v25 = 0;
  unint64_t v41 = a1 + 32;
  uint64_t v42 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v25 != v42)
  {
    Swift::Int v26 = v3[5];
    id v27 = *(id *)(v41 + 8 * v25);
    Swift::Int v28 = NSObject._rawHashValue(seed:)(v26);
    uint64_t v29 = -1 << *((unsigned char *)v3 + 32);
    unint64_t v30 = v28 & ~v29;
    unint64_t v31 = v30 >> 6;
    uint64_t v32 = *(void *)&v7[8 * (v30 >> 6)];
    uint64_t v33 = 1 << v30;
    if (((1 << v30) & v32) != 0)
    {
      sub_100018D68(0, (unint64_t *)&qword_1005A6028);
      id v34 = *(id *)(v3[6] + 8 * v30);
      char v35 = static NSObject.== infix(_:_:)();

      if (v35)
      {
LABEL_24:

        goto LABEL_25;
      }
      uint64_t v36 = ~v29;
      while (1)
      {
        unint64_t v30 = (v30 + 1) & v36;
        unint64_t v31 = v30 >> 6;
        uint64_t v32 = *(void *)&v7[8 * (v30 >> 6)];
        uint64_t v33 = 1 << v30;
        if ((v32 & (1 << v30)) == 0) {
          break;
        }
        id v37 = *(id *)(v3[6] + 8 * v30);
        char v38 = static NSObject.== infix(_:_:)();

        if (v38) {
          goto LABEL_24;
        }
      }
    }
    *(void *)&v7[8 * v31] = v33 | v32;
    *(void *)(v3[6] + 8 * v30) = v27;
    uint64_t v39 = v3[2];
    BOOL v10 = __OFADD__(v39, 1);
    uint64_t v40 = v39 + 1;
    if (v10) {
      goto LABEL_38;
    }
    v3[2] = v40;
LABEL_25:
    if (++v25 == v43) {
      return;
    }
  }
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
}

id sub_1000CD2CC(void *a1, uint64_t a2, void *a3)
{
  uint64_t v4 = v3;
  ObjectType = (objc_class *)swift_getObjectType();
  v4[OBJC_IVAR____TtC9appstored24BackgroundAssetRelayTask_shouldSkipTransparencySheet] = 0;
  uint64_t v9 = v4;
  id v10 = sub_100424DBC(a1);
  if (v10)
  {
    uint64_t v11 = v10;
    uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v14 = v13;
  }
  else
  {
    uint64_t v12 = 0;
    unint64_t v14 = 0xE000000000000000;
  }
  unint64_t v15 = (uint64_t *)&v9[OBJC_IVAR____TtC9appstored24BackgroundAssetRelayTask_appName];
  *unint64_t v15 = v12;
  v15[1] = v14;
  id v16 = sub_100424D84(a1);
  if (v16)
  {
    uint64_t v17 = v16;
    uint64_t v18 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v20 = v19;
  }
  else
  {
    uint64_t v18 = 0;
    unint64_t v20 = 0xE000000000000000;
  }
  id v21 = (uint64_t *)&v9[OBJC_IVAR____TtC9appstored24BackgroundAssetRelayTask_bundleID];
  uint64_t *v21 = v18;
  v21[1] = v20;
  *(void *)&v9[OBJC_IVAR____TtC9appstored24BackgroundAssetRelayTask_install] = a1;
  char v22 = a1;
  uint64_t v23 = sub_100424C14(v22);
  id v24 = [v23 description];
  uint64_t v25 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v27 = v26;

  id v28 = objc_allocWithZone((Class)type metadata accessor for LogKey());
  uint64_t v29 = sub_1000FC1B4(0, 0xE000000000000000, (uint64_t)"/", 1, 2, 0, (void *)0xE000000000000000, v25, v27, 1414676802, 0xE400000000000000, 0);
  swift_bridgeObjectRelease();
  *(void *)&v9[OBJC_IVAR____TtC9appstored24BackgroundAssetRelayTask_logKey] = v29;
  *(void *)&v9[OBJC_IVAR____TtC9appstored24BackgroundAssetRelayTask_metadata] = a2;
  Class isa = (Class)sub_1004256AC(v22, v30);
  if (!isa)
  {
    sub_100018D68(0, &qword_1005A6100);
    static Array._unconditionallyBridgeFromObjectiveC(_:)();
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
  }
  id v32 = sub_100424F0C((uint64_t)v22, isa);

  if (v32)
  {
    id v33 = sub_10026E82C(v32, @"disk_usage");
    if (v33)
    {
      id v34 = v33;
      id v35 = [v33 longLongValue];

      id v32 = v34;
    }
    else
    {
      id v35 = 0;
    }
  }
  else
  {
    id v35 = 0;
  }
  *(void *)&v9[OBJC_IVAR____TtC9appstored24BackgroundAssetRelayTask_packageDiskUsage] = v35;
  *(void *)&v9[OBJC_IVAR____TtC9appstored24BackgroundAssetRelayTask_requestToken] = a3;
  id v36 = a3;

  v38.receiver = v9;
  v38.super_class = ObjectType;
  return objc_msgSendSuper2(&v38, "init");
}

void *sub_1000CD580(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_10001644C(&qword_1005A60F0);
    uint64_t v3 = static _SetStorage.allocate(capacity:)();
    uint64_t v4 = 0;
    uint64_t v5 = v3 + 56;
    uint64_t v31 = v1;
    uint64_t v32 = a1 + 32;
    while (1)
    {
      uint64_t v6 = *(void **)(v32 + 8 * v4);
      static String._unconditionallyBridgeFromObjectiveC(_:)();
      Hasher.init(_seed:)();
      id v7 = v6;
      String.hash(into:)();
      Swift::Int v8 = Hasher._finalize()();
      unint64_t result = (void *)swift_bridgeObjectRelease();
      uint64_t v10 = -1 << *(unsigned char *)(v3 + 32);
      unint64_t v11 = v8 & ~v10;
      unint64_t v12 = v11 >> 6;
      uint64_t v13 = *(void *)(v5 + 8 * (v11 >> 6));
      uint64_t v14 = 1 << v11;
      if (((1 << v11) & v13) != 0)
      {
        uint64_t v15 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v17 = v16;
        if (v15 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v17 == v18)
        {
LABEL_3:
          swift_bridgeObjectRelease_n();
LABEL_4:

          goto LABEL_5;
        }
        char v20 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        unint64_t result = (void *)swift_bridgeObjectRelease();
        if (v20) {
          goto LABEL_4;
        }
        uint64_t v21 = ~v10;
        while (1)
        {
          unint64_t v11 = (v11 + 1) & v21;
          unint64_t v12 = v11 >> 6;
          uint64_t v13 = *(void *)(v5 + 8 * (v11 >> 6));
          uint64_t v14 = 1 << v11;
          if ((v13 & (1 << v11)) == 0) {
            break;
          }
          uint64_t v22 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v24 = v23;
          if (v22 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v24 == v25) {
            goto LABEL_3;
          }
          char v27 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          unint64_t result = (void *)swift_bridgeObjectRelease();
          if (v27) {
            goto LABEL_4;
          }
        }
      }
      *(void *)(v5 + 8 * v12) = v14 | v13;
      *(void *)(*(void *)(v3 + 48) + 8 * v11) = v7;
      uint64_t v28 = *(void *)(v3 + 16);
      BOOL v29 = __OFADD__(v28, 1);
      uint64_t v30 = v28 + 1;
      if (v29)
      {
        __break(1u);
        return result;
      }
      *(void *)(v3 + 16) = v30;
LABEL_5:
      if (++v4 == v31) {
        return (void *)v3;
      }
    }
  }
  return &_swiftEmptySetSingleton;
}

void sub_1000CD7B0(uint64_t a1)
{
  sub_1000CC548(a1, *(void **)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_1000CD7B8()
{
  uint64_t v1 = sub_10001644C(&qword_1005A5940);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1000CD888(void *a1, uint64_t a2)
{
  sub_10001644C(&qword_1005A5940);
  return sub_1000CC714(a1, a2);
}

uint64_t sub_1000CD910(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

id sub_1000CD958(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v9 = type metadata accessor for Date();
  uint64_t v10 = *(void *)(v9 - 8);
  unint64_t v11 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
  Class isa = 0;
  if (v11(a1, 1, v9) != 1)
  {
    Class isa = Date._bridgeToObjectiveC()().super.isa;
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(a1, v9);
  }
  if (v11(a2, 1, v9) == 1)
  {
    Class v13 = 0;
  }
  else
  {
    Class v13 = Date._bridgeToObjectiveC()().super.isa;
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(a2, v9);
  }
  id v14 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) initWithStartDate:isa endDate:v13 maxEvents:a3 lastN:a4 reversed:a5 & 1];

  return v14;
}

void sub_1000CDADC(void (**a1)(uint64_t, uint64_t, uint64_t, uint64_t), void *a2)
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v4 = sub_10001644C((uint64_t *)&unk_1005A4E20);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  double v161 = (char *)v142 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v174 = (char *)v142 - v7;
  uint64_t v8 = type metadata accessor for Date();
  uint64_t v163 = *(void *)(v8 - 8);
  uint64_t v9 = __chkstk_darwin(v8);
  unsigned int v169 = (char *)v142 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v9);
  id v167 = (char *)v142 - v12;
  uint64_t v13 = __chkstk_darwin(v11);
  int v158 = (char *)v142 - v14;
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v176 = (char *)v142 - v16;
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)v142 - v17;
  uint64_t v19 = type metadata accessor for DateInterval();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v23 = ((char *)v142 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v21);
  uint64_t v25 = (char *)v142 - v24;
  uint64_t v168 = type metadata accessor for Logger();
  uint64_t v162 = *(void *)(v168 - 8);
  uint64_t v26 = __chkstk_darwin(v168);
  id v172 = (char *)v142 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = __chkstk_darwin(v26);
  v159 = (char *)v142 - v29;
  __chkstk_darwin(v28);
  uint64_t v31 = (char *)v142 - v30;
  static Logger.appUsage.getter();
  uint64_t v170 = v20;
  uint64_t v32 = *(void (**)(char *, void (**)(uint64_t, void, uint64_t, uint64_t), uint64_t))(v20 + 16);
  unint64_t v178 = (unint64_t)v25;
  v32(v25, a1, v19);
  v175 = v23;
  uint64_t v177 = a1;
  v32((char *)v23, a1, v19);
  id v33 = a2;
  id v34 = Logger.logObject.getter();
  os_log_type_t v35 = static os_log_type_t.default.getter();
  int v36 = v35;
  BOOL v37 = os_log_type_enabled(v34, v35);
  uint64_t v171 = v8;
  uint64_t v173 = v18;
  v166 = v33;
  if (v37)
  {
    uint64_t v38 = swift_slowAlloc();
    v165 = (void (*)(char *, uint64_t))swift_slowAlloc();
    v164 = (void (**)(char *, void, void))swift_slowAlloc();
    uint64_t v182 = v164;
    *(_DWORD *)uint64_t v38 = 136446978;
    os_log_t v160 = v34;
    uint64_t v39 = _typeName(_:qualified:)();
    os_log_t v180 = (os_log_t)sub_1000F7290(v39, v40, (uint64_t *)&v182);
    v154 = &v181;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v38 + 12) = 2112;
    os_log_t v180 = v33;
    unint64_t v41 = v33;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(void *)v165 = v33;

    *(_WORD *)(v38 + 22) = 2082;
    v152 = (void (**)(char *, char *, uint64_t))(v38 + 24);
    LODWORD(v155) = v36;
    DateInterval.start.getter();
    sub_1000D4914((unint64_t *)&qword_1005A4E30, (void (*)(uint64_t))&type metadata accessor for Date);
    uint64_t v42 = v171;
    uint64_t v43 = dispatch thunk of CustomStringConvertible.description.getter();
    unint64_t v45 = v44;
    *(void *)&long long v156 = v31;
    Class isa = *(Class *)(v163 + 8);
    ((void (*)(char *, uint64_t))isa)(v18, v42);
    os_log_t v180 = (os_log_t)sub_1000F7290(v43, v45, (uint64_t *)&v182);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    uint64_t v46 = *(void (**)(unint64_t, uint64_t))(v170 + 8);
    v46(v178, v19);
    *(_WORD *)(v38 + 32) = 2082;
    uint64_t v170 = v38 + 34;
    unint64_t v178 = v19;
    os_log_t v47 = v175;
    DateInterval.end.getter();
    uint64_t v48 = dispatch thunk of CustomStringConvertible.description.getter();
    unint64_t v50 = v49;
    ((void (*)(char *, uint64_t))isa)(v18, v42);
    os_log_t v180 = (os_log_t)sub_1000F7290(v48, v50, (uint64_t *)&v182);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    v46((unint64_t)v47, v178);
    os_log_t v51 = v160;
    _os_log_impl((void *)&_mh_execute_header, v160, (os_log_type_t)v155, "[%{public}s/%@] Looking for Siri Execution events from startDate: %{public}s to %{public}s", (uint8_t *)v38, 0x2Au);
    sub_10001644C((uint64_t *)&unk_1005A3AA0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    id v52 = *(void (**)(char *, uint64_t))(v162 + 8);
    id v53 = (char *)v156;
  }
  else
  {

    os_log_type_t v54 = *(void (**)(unint64_t, uint64_t))(v170 + 8);
    v54(v178, v19);
    v54((unint64_t)v175, v19);

    id v52 = *(void (**)(char *, uint64_t))(v162 + 8);
    id v53 = v31;
  }
  v165 = v52;
  v52(v53, v168);
  uint64_t v55 = swift_allocObject();
  *(void *)(v55 + 16) = _swiftEmptyArrayStorage;
  v154 = (char *)v55;
  sub_1000CF080((uint64_t)v177, v55);
  uint64_t v170 = 0;
  swift_beginAccess();
  unint64_t v57 = *(void *)(v55 + 16);
  if (v57 >> 62)
  {
LABEL_59:
    swift_bridgeObjectRetain_n();
    uint64_t v58 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v58 = *(void *)((v57 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
  }
  uint64_t v60 = "StoreKitExternalGateway";
  if (v58)
  {
    unint64_t v178 = v57 & 0xC000000000000001;
    os_log_t v160 = (os_log_t)(v163 + 32);
    v164 = (void (**)(char *, void, void))(v163 + 56);
    *(void *)&long long v156 = v163 + 48;
    v152 = (void (**)(char *, char *, uint64_t))(v163 + 16);
    v151 = (void (**)(char *, uint64_t))(v163 + 8);
    uint64_t v150 = v162 + 8;
    v155 = &v180;
    v175 = &_swiftEmptyDictionarySingleton;
    uint64_t v61 = 4;
    *(void *)&long long v59 = 136446978;
    long long v149 = v59;
    int v148 = (char *)&type metadata for Any + 8;
    uint64_t v177 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))v57;
    while (1)
    {
      if (v178) {
        uint64_t v62 = (void (*)(void, void, void, void))specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        uint64_t v62 = (void (*)(void, void, void, void))*(id *)(v57 + 8 * v61);
      }
      id v63 = v62;
      uint64_t v64 = v61 - 3;
      if (__OFADD__(v61 - 4, 1))
      {
        __break(1u);
        goto LABEL_59;
      }
      id v65 = [v62 eventBody];
      if (v65)
      {
        id v66 = v65;
        id v67 = [v65 appBundleID];
        if (v67)
        {
          uint64_t v68 = (uint64_t)v67;
          uint64_t v69 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          if (v69 != 1701736302 || v70 != 0xE400000000000000)
          {
            uint64_t v72 = v69;
            unint64_t v73 = v70;
            if ((_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
            {
              uint64_t v74 = HIBYTE(v73) & 0xF;
              if ((v73 & 0x2000000000000000) == 0) {
                uint64_t v74 = v72 & 0xFFFFFFFFFFFFLL;
              }
              if (v74)
              {
                id v75 = [v66 absoluteTimestamp];
                if (v75)
                {
                  uint64_t v76 = v75;
                  uint64_t v77 = v173;
                  static Date._unconditionallyBridgeFromObjectiveC(_:)();

                  uint64_t v78 = (uint64_t)v174;
                  unint64_t v79 = v77;
                  uint64_t v80 = v171;
                  Class isa = v160->isa;
                  ((void (*)(char *, char *, uint64_t))isa)(v174, v79, v171);
                  ((void (*)(uint64_t, void, uint64_t, uint64_t))*v164)(v78, 0, 1, v80);
                  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))v156)(v78, 1, v80) != 1)
                  {
                    ((void (*)(char *, uint64_t, uint64_t))isa)(v176, v78, v171);
                    id v81 = sub_1003AC668(objc_allocWithZone((Class)LaunchEvent), 8);
                    if (!v81) {
                      goto LABEL_62;
                    }
                    long long v82 = v81;
                    uint64_t v83 = (char *)Date._bridgeToObjectiveC()().super.isa;
                    sub_1003ACF00(v82, v83);

                    uint64_t v84 = (char *)Date._bridgeToObjectiveC()().super.isa;
                    sub_1003ACEE8(v82, v84);

                    sub_1003ACEB8(v82, (const char *)v68);
                    swift_bridgeObjectRetain();
                    id v85 = v82;
                    os_log_t v86 = v175;
                    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                    os_log_t v180 = v86;
                    Class isa = v85;
                    sub_1000D2808((uint64_t)v85, v72, v73, isUniquelyReferenced_nonNull_native);
                    v175 = v180;
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    static Logger.appUsage.getter();
                    uint64_t v88 = v158;
                    (*v152)(v158, v176, v171);
                    long long v89 = v166;
                    swift_bridgeObjectRetain();
                    long long v90 = Logger.logObject.getter();
                    os_log_type_t v91 = static os_log_type_t.debug.getter();
                    int v147 = v91;
                    if (os_log_type_enabled(v90, v91))
                    {
                      uint64_t v92 = swift_slowAlloc();
                      uint64_t v146 = (void *)swift_slowAlloc();
                      os_log_t v145 = (os_log_t)swift_slowAlloc();
                      os_log_t v180 = v145;
                      *(_DWORD *)uint64_t v92 = v149;
                      uint64_t v143 = (void (*)(char *, uint64_t))(v92 + 4);
                      uint64_t v93 = _typeName(_:qualified:)();
                      os_log_t v144 = v90;
                      uint64_t v179 = sub_1000F7290(v93, v94, (uint64_t *)&v180);
                      UnsafeMutableRawBufferPointer.copyMemory(from:)();
                      swift_bridgeObjectRelease();
                      *(_WORD *)(v92 + 12) = 2112;
                      uint64_t v143 = (void (*)(char *, uint64_t))(v92 + 14);
                      v142[1] = v92 + 22;
                      uint64_t v179 = (uint64_t)v89;
                      char v95 = v89;
                      UnsafeMutableRawBufferPointer.copyMemory(from:)();
                      *uint64_t v146 = v166;

                      *(_WORD *)(v92 + 22) = 2082;
                      swift_bridgeObjectRetain();
                      uint64_t v179 = sub_1000F7290(v72, v73, (uint64_t *)&v180);
                      UnsafeMutableRawBufferPointer.copyMemory(from:)();
                      swift_bridgeObjectRelease_n();
                      *(_WORD *)(v92 + 32) = 2080;
                      sub_1000D4914((unint64_t *)&qword_1005A4E30, (void (*)(uint64_t))&type metadata accessor for Date);
                      NSString v96 = v158;
                      uint64_t v97 = v171;
                      uint64_t v98 = dispatch thunk of CustomStringConvertible.description.getter();
                      uint64_t v179 = sub_1000F7290(v98, v99, (uint64_t *)&v180);
                      UnsafeMutableRawBufferPointer.copyMemory(from:)();
                      swift_bridgeObjectRelease();
                      uint64_t v143 = *v151;
                      v143(v96, v97);
                      os_log_t v100 = v144;
                      _os_log_impl((void *)&_mh_execute_header, v144, (os_log_type_t)v147, "[%{public}s/%@][%{public}s] Found siri execution with startDate: %s", (uint8_t *)v92, 0x2Au);
                      sub_10001644C((uint64_t *)&unk_1005A3AA0);
                      swift_arrayDestroy();
                      swift_slowDealloc();
                      swift_arrayDestroy();
                      swift_slowDealloc();
                      swift_slowDealloc();

                      v165(v159, v168);
                      v143(v176, v97);
                    }
                    else
                    {

                      id v101 = *v151;
                      uint64_t v102 = v88;
                      uint64_t v103 = v171;
                      (*v151)(v102, v171);

                      swift_bridgeObjectRelease_n();
                      v165(v159, v168);
                      v101(v176, v103);
                    }
                    goto LABEL_35;
                  }
                }
                else
                {
                  uint64_t v78 = (uint64_t)v174;
                  ((void (*)(char *, uint64_t, uint64_t, uint64_t))*v164)(v174, 1, 1, v171);
                }

                swift_bridgeObjectRelease();
                sub_1000214BC(v78);
              }
              else
              {

                swift_bridgeObjectRelease();
              }
LABEL_35:
              uint64_t v60 = "StoreKitExternalGateway";
              unint64_t v57 = (unint64_t)v177;
              goto LABEL_9;
            }
          }
          swift_bridgeObjectRelease();
          uint64_t v60 = "StoreKitExternalGateway";

          unint64_t v57 = (unint64_t)v177;
        }
        else
        {

          unint64_t v57 = (unint64_t)v177;
        }
      }
      else
      {
      }
LABEL_9:
      ++v61;
      if (v64 == v58) {
        goto LABEL_38;
      }
    }
  }
  v175 = &_swiftEmptyDictionarySingleton;
LABEL_38:
  swift_bridgeObjectRelease();
  uint64_t v104 = swift_bridgeObjectRetain();
  unint64_t v105 = (unint64_t)sub_100067EE8(v104);
  swift_bridgeObjectRelease_n();
  if (v105 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v68 = _CocoaArrayWrapper.endIndex.getter();
  }
  else
  {
    uint64_t v68 = *(void *)((v105 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
  }
  uint64_t v107 = v171;
  uint64_t v108 = v167;
  uint64_t v109 = (uint64_t)v161;
  if (v68)
  {
    if (v68 >= 1)
    {
      uint64_t v110 = 0;
      unint64_t v178 = v105 & 0xC000000000000001;
      v175 = (v163 + 32);
      uint64_t v177 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v163 + 56);
      uint64_t v170 = v163 + 48;
      v164 = (void (**)(char *, void, void))(v163 + 16);
      v163 += 8;
      v162 += 8;
      *(void *)&long long v106 = *((void *)v60 + 163);
      long long v156 = v106;
      v155 = (os_log_t *)((char *)&type metadata for Any + 8);
      uint64_t v174 = (char *)v105;
      uint64_t v176 = (char *)v68;
      while (1)
      {
        if (v178) {
          id v111 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v111 = *(id *)(v105 + 8 * v110 + 32);
        }
        uint64_t v112 = v111;
        id v113 = sub_1003AC978(v111);
        if (v113)
        {
          uint64_t v114 = v113;
          uint64_t v115 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          unint64_t v117 = v116;

          id v118 = sub_1003AC9B0(v112);
          if (v118)
          {
            uint64_t v119 = v118;
            uint64_t v120 = v109;
            unint64_t v121 = v173;
            static Date._unconditionallyBridgeFromObjectiveC(_:)();

            unint64_t v122 = (void (*)(char *, uint64_t, uint64_t))v175->isa;
            uint64_t v123 = v121;
            unint64_t v105 = (unint64_t)v174;
            ((void (*)(uint64_t, char *, uint64_t))v175->isa)(v109, v123, v107);
            (*v177)(v109, 0, 1, v107);
            if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))v170)(v109, 1, v107) != 1)
            {
              v122(v108, v109, v107);
              static Logger.appUsage.getter();
              uint64_t v124 = v169;
              (*v164)(v169, v108, v107);
              char v125 = v166;
              os_log_type_t v126 = v166;
              swift_bridgeObjectRetain();
              uint64_t v127 = Logger.logObject.getter();
              os_log_type_t v128 = static os_log_type_t.default.getter();
              int v129 = v128;
              if (os_log_type_enabled(v127, v128))
              {
                uint64_t v130 = swift_slowAlloc();
                uint64_t v131 = (char *)swift_slowAlloc();
                int v158 = v131;
                os_log_t v160 = (os_log_t)swift_slowAlloc();
                os_log_t v180 = v160;
                *(_DWORD *)uint64_t v130 = v156;
                uint64_t v132 = _typeName(_:qualified:)();
                LODWORD(v159) = v129;
                *(void *)(v130 + 4) = sub_1000F7290(v132, v133, (uint64_t *)&v180);
                swift_bridgeObjectRelease();
                *(_WORD *)(v130 + 12) = 2112;
                *(void *)(v130 + 14) = v126;
                *(void *)uint64_t v131 = v125;

                *(_WORD *)(v130 + 22) = 2080;
                swift_bridgeObjectRetain();
                *(void *)(v130 + 24) = sub_1000F7290(v115, v117, (uint64_t *)&v180);
                swift_bridgeObjectRelease_n();
                *(_WORD *)(v130 + 32) = 2080;
                sub_1000D4914((unint64_t *)&qword_1005A4E30, (void (*)(uint64_t))&type metadata accessor for Date);
                uint64_t v134 = v169;
                uint64_t v135 = v171;
                uint64_t v136 = dispatch thunk of CustomStringConvertible.description.getter();
                *(void *)(v130 + 34) = sub_1000F7290(v136, v137, (uint64_t *)&v180);
                swift_bridgeObjectRelease();
                os_log_type_t v138 = *(void (**)(char *, uint64_t))v163;
                (*(void (**)(char *, uint64_t))v163)(v134, v135);
                _os_log_impl((void *)&_mh_execute_header, v127, (os_log_type_t)v159, "[%{public}s/%@] [%s] Found siri execution usage with startDate: %s", (uint8_t *)v130, 0x2Au);
                sub_10001644C((uint64_t *)&unk_1005A3AA0);
                swift_arrayDestroy();
                swift_slowDealloc();
                swift_arrayDestroy();
                swift_slowDealloc();
                uint64_t v109 = (uint64_t)v161;
                swift_slowDealloc();

                v165(v172, v168);
                uint64_t v108 = v167;
                v138(v167, v135);
                uint64_t v107 = v135;
              }
              else
              {

                os_log_type_t v139 = *(void (**)(char *, uint64_t))v163;
                uint64_t v140 = v124;
                uint64_t v141 = v171;
                (*(void (**)(char *, uint64_t))v163)(v140, v171);

                swift_bridgeObjectRelease_n();
                v165(v172, v168);
                uint64_t v108 = v167;
                v139(v167, v141);
                uint64_t v107 = v141;
                uint64_t v109 = v120;
              }
              unint64_t v105 = (unint64_t)v174;
              uint64_t v68 = (uint64_t)v176;
              goto LABEL_44;
            }
          }
          else
          {
            (*v177)(v109, 1, 1, v107);
          }
          swift_bridgeObjectRelease();

          sub_1000214BC(v109);
          uint64_t v68 = (uint64_t)v176;
        }
        else
        {
        }
LABEL_44:
        if (v68 == ++v110) {
          goto LABEL_57;
        }
      }
    }
    __break(1u);
LABEL_62:

    __break(1u);
  }
  else
  {
LABEL_57:
    swift_release();
    swift_bridgeObjectRelease();
  }
}

void sub_1000CF080(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_10001644C((uint64_t *)&unk_1005A4E20);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  uint64_t v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v18 - v7;
  id v9 = (id)BiomeLibrary();
  sub_100018D68(0, (unint64_t *)&qword_1005A5248);
  DateInterval.start.getter();
  uint64_t v10 = type metadata accessor for Date();
  uint64_t v11 = *(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56);
  v11(v8, 0, 1, v10);
  DateInterval.end.getter();
  v11(v6, 0, 1, v10);
  id v12 = sub_1000CD958((uint64_t)v8, (uint64_t)v6, 10000, 0, 0);
  id v13 = objc_msgSend(objc_msgSend(v9, "Siri"), "Execution");
  swift_unknownObjectRelease();
  id v14 = [v13 publisherWithOptions:v12];
  uint64_t v23 = (uint64_t (*)(void *))nullsub_24;
  uint64_t v24 = 0;
  aBlock = _NSConcreteStackBlock;
  uint64_t v20 = 1107296256;
  uint64_t v21 = sub_1000CDAD8;
  uint64_t v22 = &unk_100515C50;
  uint64_t v15 = _Block_copy(&aBlock);
  uint64_t v23 = sub_1000D48A8;
  uint64_t v24 = a2;
  aBlock = _NSConcreteStackBlock;
  uint64_t v20 = 1107296256;
  uint64_t v21 = sub_1000CDAD8;
  uint64_t v22 = &unk_100515C78;
  uint64_t v16 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  id v17 = [v14 sinkWithCompletion:v15 receiveInput:v16];
  _Block_release(v16);
  _Block_release(v15);
  swift_unknownObjectRelease();
}

uint64_t sub_1000CF374(void *a1, uint64_t a2)
{
  swift_beginAccess();
  id v4 = a1;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((*(void *)(a2 + 16) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)(a2 + 16) & 0xFFFFFFFFFFFFFF8)
                                                                                     + 0x18) >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  return swift_endAccess();
}

id sub_1000CF5A8()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for Intents();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for Intents()
{
  return self;
}

uint64_t sub_1000CF600(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_10001644C(&qword_1005A6158);
  uint64_t v6 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  os_log_type_t v35 = v2;
  uint64_t v36 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    int64_t v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v11) {
      break;
    }
    uint64_t v23 = (void *)(v5 + 64);
    unint64_t v24 = *(void *)(v36 + 8 * v22);
    ++v14;
    if (!v24)
    {
      int64_t v14 = v22 + 1;
      if (v22 + 1 >= v11) {
        goto LABEL_33;
      }
      unint64_t v24 = *(void *)(v36 + 8 * v14);
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v11)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v35;
          if ((a2 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v24 = *(void *)(v36 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            int64_t v14 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_42;
            }
            if (v14 >= v11) {
              goto LABEL_33;
            }
            unint64_t v24 = *(void *)(v36 + 8 * v14);
            ++v25;
            if (v24) {
              goto LABEL_30;
            }
          }
        }
        int64_t v14 = v25;
      }
    }
LABEL_30:
    unint64_t v10 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    uint64_t v30 = 8 * v21;
    uint64_t v31 = *(void **)(*(void *)(v5 + 48) + v30);
    uint64_t v32 = *(void *)(*(void *)(v5 + 56) + v30);
    if ((a2 & 1) == 0)
    {
      id v33 = v31;
      swift_bridgeObjectRetain();
    }
    uint64_t result = NSObject._rawHashValue(seed:)(*(void *)(v7 + 40));
    uint64_t v15 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v16 = result & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v28 = v17 == v27;
        if (v17 == v27) {
          unint64_t v17 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      unint64_t v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    uint64_t v19 = 8 * v18;
    *(void *)(*(void *)(v7 + 48) + v19) = v31;
    *(void *)(*(void *)(v7 + 56) + v19) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v35;
  uint64_t v23 = (void *)(v5 + 64);
  if ((a2 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v34 = 1 << *(unsigned char *)(v5 + 32);
  if (v34 >= 64) {
    bzero(v23, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v23 = -1 << v34;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1000CF8D8(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_10001644C(&qword_1005A4280);
  uint64_t result = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    int64_t v8 = 0;
    uint64_t v34 = (uint64_t *)(v5 + 64);
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v31 = -1 << v9;
    uint64_t v32 = v9;
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v33 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        unint64_t v18 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v19 = v18 | (v8 << 6);
      }
      else
      {
        int64_t v20 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        uint64_t result = v5 + 64;
        if (v20 >= v33) {
          goto LABEL_33;
        }
        unint64_t v21 = v34[v20];
        ++v8;
        if (!v21)
        {
          int64_t v8 = v20 + 1;
          if (v20 + 1 >= v33) {
            goto LABEL_33;
          }
          unint64_t v21 = v34[v8];
          if (!v21)
          {
            int64_t v22 = v20 + 2;
            if (v22 >= v33)
            {
LABEL_33:
              if (a2)
              {
                if (v32 >= 64) {
                  bzero(v34, 8 * v33);
                }
                else {
                  *uint64_t v34 = v31;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v21 = v34[v22];
            if (!v21)
            {
              while (1)
              {
                int64_t v8 = v22 + 1;
                if (__OFADD__(v22, 1)) {
                  goto LABEL_41;
                }
                if (v8 >= v33) {
                  goto LABEL_33;
                }
                unint64_t v21 = v34[v8];
                ++v22;
                if (v21) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v8 = v22;
          }
        }
LABEL_30:
        unint64_t v11 = (v21 - 1) & v21;
        unint64_t v19 = __clz(__rbit64(v21)) + (v8 << 6);
      }
      uint64_t v27 = *(void *)(*(void *)(v5 + 48) + 8 * v19);
      BOOL v28 = (uint64_t *)(*(void *)(v5 + 56) + 16 * v19);
      uint64_t v29 = *v28;
      uint64_t v30 = v28[1];
      if ((a2 & 1) == 0) {
        swift_bridgeObjectRetain();
      }
      uint64_t result = static Hasher._hash(seed:_:)();
      uint64_t v13 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v14 = result & ~v13;
      unint64_t v15 = v14 >> 6;
      if (((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v23 = 0;
        unint64_t v24 = (unint64_t)(63 - v13) >> 6;
        do
        {
          if (++v15 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v25 = v15 == v24;
          if (v15 == v24) {
            unint64_t v15 = 0;
          }
          v23 |= v25;
          uint64_t v26 = *(void *)(v12 + 8 * v15);
        }
        while (v26 == -1);
        unint64_t v16 = __clz(__rbit64(~v26)) + (v15 << 6);
      }
      *(void *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      *(void *)(*(void *)(v7 + 48) + 8 * v16) = v27;
      unint64_t v17 = (void *)(*(void *)(v7 + 56) + 16 * v16);
      *unint64_t v17 = v29;
      v17[1] = v30;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1000CFB90(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_10001644C(&qword_1005A6150);
  uint64_t v6 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_43;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v37 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  os_log_type_t v35 = v2;
  int64_t v36 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v16 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v17 = v16 | (v13 << 6);
      goto LABEL_22;
    }
    int64_t v18 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
      return result;
    }
    if (v18 >= v36) {
      break;
    }
    unint64_t v19 = (void *)(v5 + 64);
    unint64_t v20 = *(void *)(v37 + 8 * v18);
    ++v13;
    if (!v20)
    {
      int64_t v13 = v18 + 1;
      if (v18 + 1 >= v36) {
        goto LABEL_36;
      }
      unint64_t v20 = *(void *)(v37 + 8 * v13);
      if (!v20)
      {
        int64_t v21 = v18 + 2;
        if (v21 >= v36)
        {
LABEL_36:
          swift_release();
          uint64_t v3 = v35;
          if ((a2 & 1) == 0) {
            goto LABEL_43;
          }
          goto LABEL_39;
        }
        unint64_t v20 = *(void *)(v37 + 8 * v21);
        if (!v20)
        {
          while (1)
          {
            int64_t v13 = v21 + 1;
            if (__OFADD__(v21, 1)) {
              goto LABEL_45;
            }
            if (v13 >= v36) {
              goto LABEL_36;
            }
            unint64_t v20 = *(void *)(v37 + 8 * v13);
            ++v21;
            if (v20) {
              goto LABEL_21;
            }
          }
        }
        int64_t v13 = v21;
      }
    }
LABEL_21:
    unint64_t v10 = (v20 - 1) & v20;
    unint64_t v17 = __clz(__rbit64(v20)) + (v13 << 6);
LABEL_22:
    uint64_t v22 = 8 * v17;
    char v23 = *(void **)(*(void *)(v5 + 48) + v22);
    uint64_t v24 = *(void *)(*(void *)(v5 + 56) + v22);
    if ((a2 & 1) == 0)
    {
      id v25 = v23;
      swift_bridgeObjectRetain();
    }
    Hasher.init(_seed:)();
    if (v23)
    {
      Hasher._combine(_:)(1u);
      id v26 = v23;
      NSObject.hash(into:)();
    }
    else
    {
      Hasher._combine(_:)(0);
    }
    uint64_t result = Hasher._finalize()();
    uint64_t v27 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v28 = result & ~v27;
    unint64_t v29 = v28 >> 6;
    if (((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6))) != 0)
    {
      unint64_t v14 = __clz(__rbit64((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v30 = 0;
      unint64_t v31 = (unint64_t)(63 - v27) >> 6;
      do
      {
        if (++v29 == v31 && (v30 & 1) != 0)
        {
          __break(1u);
          goto LABEL_44;
        }
        BOOL v32 = v29 == v31;
        if (v29 == v31) {
          unint64_t v29 = 0;
        }
        v30 |= v32;
        uint64_t v33 = *(void *)(v11 + 8 * v29);
      }
      while (v33 == -1);
      unint64_t v14 = __clz(__rbit64(~v33)) + (v29 << 6);
    }
    *(void *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    uint64_t v15 = 8 * v14;
    *(void *)(*(void *)(v7 + 48) + v15) = v23;
    *(void *)(*(void *)(v7 + 56) + v15) = v24;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v35;
  unint64_t v19 = (void *)(v5 + 64);
  if ((a2 & 1) == 0) {
    goto LABEL_43;
  }
LABEL_39:
  uint64_t v34 = 1 << *(unsigned char *)(v5 + 32);
  if (v34 >= 64) {
    bzero(v19, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v19 = -1 << v34;
  }
  *(void *)(v5 + 16) = 0;
LABEL_43:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1000CFEAC(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_10001644C(&qword_1005A3C10);
  uint64_t v6 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v34 = (void *)(v5 + 64);
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v33 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v11 = v6 + 64;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    while (1)
    {
      if (v10)
      {
        unint64_t v16 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v17 = v16 | (v13 << 6);
      }
      else
      {
        int64_t v18 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v18 >= v33) {
          goto LABEL_34;
        }
        unint64_t v19 = v34[v18];
        ++v13;
        if (!v19)
        {
          int64_t v13 = v18 + 1;
          if (v18 + 1 >= v33) {
            goto LABEL_34;
          }
          unint64_t v19 = v34[v13];
          if (!v19)
          {
            int64_t v20 = v18 + 2;
            if (v20 >= v33)
            {
LABEL_34:
              swift_release();
              uint64_t v3 = v2;
              if (a2)
              {
                uint64_t v32 = 1 << *(unsigned char *)(v5 + 32);
                if (v32 >= 64) {
                  bzero(v34, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v34 = -1 << v32;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v19 = v34[v20];
            if (!v19)
            {
              while (1)
              {
                int64_t v13 = v20 + 1;
                if (__OFADD__(v20, 1)) {
                  goto LABEL_41;
                }
                if (v13 >= v33) {
                  goto LABEL_34;
                }
                unint64_t v19 = v34[v13];
                ++v20;
                if (v19) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v13 = v20;
          }
        }
LABEL_21:
        unint64_t v10 = (v19 - 1) & v19;
        unint64_t v17 = __clz(__rbit64(v19)) + (v13 << 6);
      }
      int64_t v21 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v17);
      uint64_t v23 = *v21;
      uint64_t v22 = v21[1];
      uint64_t v24 = (_OWORD *)(*(void *)(v5 + 56) + 32 * v17);
      if (a2)
      {
        sub_10000C948(v24, v35);
      }
      else
      {
        sub_100031C38((uint64_t)v24, (uint64_t)v35);
        swift_bridgeObjectRetain();
      }
      Hasher.init(_seed:)();
      String.hash(into:)();
      uint64_t result = Hasher._finalize()();
      uint64_t v25 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v26 = result & ~v25;
      unint64_t v27 = v26 >> 6;
      if (((-1 << v26) & ~*(void *)(v11 + 8 * (v26 >> 6))) != 0)
      {
        unint64_t v14 = __clz(__rbit64((-1 << v26) & ~*(void *)(v11 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v28 = 0;
        unint64_t v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v30 = v27 == v29;
          if (v27 == v29) {
            unint64_t v27 = 0;
          }
          v28 |= v30;
          uint64_t v31 = *(void *)(v11 + 8 * v27);
        }
        while (v31 == -1);
        unint64_t v14 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(void *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      uint64_t v15 = (void *)(*(void *)(v7 + 48) + 16 * v14);
      *uint64_t v15 = v23;
      v15[1] = v22;
      uint64_t result = (uint64_t)sub_10000C948(v35, (_OWORD *)(*(void *)(v7 + 56) + 32 * v14));
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1000D01AC(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_10001644C(&qword_1005A4208);
  char v43 = a2;
  uint64_t v6 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  unint64_t v41 = (void *)(v5 + 64);
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  uint64_t v39 = v2;
  int64_t v40 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  for (i = v5; ; uint64_t v5 = i)
  {
    if (v10)
    {
      unint64_t v17 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v18 = v17 | (v13 << 6);
      if (v43) {
        goto LABEL_10;
      }
      goto LABEL_23;
    }
    int64_t v26 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v26 >= v40) {
      break;
    }
    unint64_t v27 = v41;
    unint64_t v28 = v41[v26];
    ++v13;
    if (!v28)
    {
      int64_t v13 = v26 + 1;
      if (v26 + 1 >= v40) {
        goto LABEL_33;
      }
      unint64_t v28 = v41[v13];
      if (!v28)
      {
        int64_t v29 = v26 + 2;
        if (v29 >= v40)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v39;
          if ((v43 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v28 = v41[v29];
        if (!v28)
        {
          while (1)
          {
            int64_t v13 = v29 + 1;
            if (__OFADD__(v29, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v40) {
              goto LABEL_33;
            }
            unint64_t v28 = v41[v13];
            ++v29;
            if (v28) {
              goto LABEL_22;
            }
          }
        }
        int64_t v13 = v29;
      }
    }
LABEL_22:
    unint64_t v10 = (v28 - 1) & v28;
    unint64_t v18 = __clz(__rbit64(v28)) + (v13 << 6);
    if (v43)
    {
LABEL_10:
      unint64_t v19 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v18);
      uint64_t v20 = *v19;
      uint64_t v21 = v19[1];
      uint64_t v22 = *(void *)(v5 + 56) + 320 * v18;
      uint64_t v57 = *(void *)(v22 + 16);
      char v47 = *(unsigned char *)(v22 + 8);
      char v48 = *(unsigned char *)(v22 + 24);
      uint64_t v58 = *(void *)(v22 + 32);
      uint64_t v55 = *(void *)v22;
      uint64_t v56 = *(void *)(v22 + 40);
      uint64_t v60 = *(void *)(v22 + 48);
      uint64_t v62 = *(void *)(v22 + 64);
      char v49 = *(unsigned char *)(v22 + 56);
      char v50 = *(unsigned char *)(v22 + 72);
      uint64_t v64 = *(void *)(v22 + 80);
      uint64_t v65 = *(void *)(v22 + 96);
      char v51 = *(unsigned char *)(v22 + 88);
      char v52 = *(unsigned char *)(v22 + 104);
      char v53 = *(unsigned char *)(v22 + 120);
      uint64_t v68 = *(void *)(v22 + 112);
      uint64_t v69 = *(void *)(v22 + 128);
      uint64_t v71 = *(void *)(v22 + 144);
      char v44 = *(unsigned char *)(v22 + 136);
      char v45 = *(unsigned char *)(v22 + 152);
      char v46 = *(unsigned char *)(v22 + 168);
      uint64_t v76 = *(void *)(v22 + 176);
      uint64_t v73 = *(void *)(v22 + 184);
      uint64_t v74 = *(void *)(v22 + 160);
      uint64_t v78 = *(void *)(v22 + 192);
      char v23 = *(unsigned char *)(v22 + 200);
      char v24 = *(unsigned char *)(v22 + 264);
      char v54 = *(unsigned char *)(v22 + 312);
      uint64_t v61 = *(void *)(v22 + 208);
      uint64_t v59 = *(void *)(v22 + 216);
      uint64_t v63 = *(void *)(v22 + 224);
      char v25 = *(unsigned char *)(v22 + 232);
      uint64_t v66 = *(void *)(v22 + 248);
      uint64_t v67 = *(void *)(v22 + 240);
      uint64_t v70 = *(void *)(v22 + 256);
      uint64_t v72 = *(void *)(v22 + 272);
      uint64_t v75 = *(void *)(v22 + 280);
      uint64_t v77 = *(void *)(v22 + 288);
      uint64_t v79 = *(void *)(v22 + 296);
      uint64_t v80 = *(void *)(v22 + 304);
      char v81 = *(unsigned char *)(v22 + 313);
      goto LABEL_24;
    }
LABEL_23:
    BOOL v30 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v18);
    uint64_t v20 = *v30;
    uint64_t v21 = v30[1];
    memcpy(__dst, (const void *)(*(void *)(v5 + 56) + 320 * v18), 0x13AuLL);
    char v81 = BYTE1(__dst[39]);
    char v54 = __dst[39];
    uint64_t v79 = __dst[37];
    uint64_t v80 = __dst[38];
    uint64_t v75 = __dst[35];
    uint64_t v72 = __dst[34];
    uint64_t v70 = __dst[32];
    char v24 = __dst[33];
    uint64_t v66 = __dst[31];
    uint64_t v67 = __dst[30];
    uint64_t v63 = __dst[28];
    char v25 = __dst[29];
    uint64_t v61 = __dst[26];
    uint64_t v59 = __dst[27];
    uint64_t v77 = __dst[36];
    uint64_t v78 = __dst[24];
    char v23 = __dst[25];
    uint64_t v76 = __dst[22];
    uint64_t v73 = __dst[23];
    uint64_t v74 = __dst[20];
    uint64_t v71 = __dst[18];
    char v45 = __dst[19];
    char v46 = __dst[21];
    char v44 = __dst[17];
    uint64_t v68 = __dst[14];
    uint64_t v69 = __dst[16];
    char v52 = __dst[13];
    char v53 = __dst[15];
    uint64_t v64 = __dst[10];
    uint64_t v65 = __dst[12];
    uint64_t v62 = __dst[8];
    char v50 = __dst[9];
    char v51 = __dst[11];
    uint64_t v60 = __dst[6];
    uint64_t v57 = __dst[2];
    uint64_t v58 = __dst[4];
    char v48 = __dst[3];
    char v49 = __dst[7];
    uint64_t v55 = __dst[0];
    uint64_t v56 = __dst[5];
    char v47 = __dst[1];
    swift_bridgeObjectRetain();
    sub_10004C464((uint64_t)__dst);
LABEL_24:
    Hasher.init(_seed:)();
    String.hash(into:)();
    uint64_t result = Hasher._finalize()();
    uint64_t v31 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v32 = result & ~v31;
    unint64_t v33 = v32 >> 6;
    if (((-1 << v32) & ~*(void *)(v11 + 8 * (v32 >> 6))) != 0)
    {
      unint64_t v14 = __clz(__rbit64((-1 << v32) & ~*(void *)(v11 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v34 = 0;
      unint64_t v35 = (unint64_t)(63 - v31) >> 6;
      do
      {
        if (++v33 == v35 && (v34 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v36 = v33 == v35;
        if (v33 == v35) {
          unint64_t v33 = 0;
        }
        v34 |= v36;
        uint64_t v37 = *(void *)(v11 + 8 * v33);
      }
      while (v37 == -1);
      unint64_t v14 = __clz(__rbit64(~v37)) + (v33 << 6);
    }
    LOBYTE(__dst[0]) = v47;
    *(void *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    uint64_t v15 = (void *)(*(void *)(v7 + 48) + 16 * v14);
    *uint64_t v15 = v20;
    v15[1] = v21;
    uint64_t v16 = *(void *)(v7 + 56) + 320 * v14;
    *(void *)uint64_t v16 = v55;
    *(unsigned char *)(v16 + 8) = __dst[0];
    *(void *)(v16 + 16) = v57;
    *(unsigned char *)(v16 + 24) = v48;
    *(void *)(v16 + 32) = v58;
    *(void *)(v16 + 40) = v56;
    *(void *)(v16 + 48) = v60;
    *(unsigned char *)(v16 + 56) = v49;
    *(void *)(v16 + 64) = v62;
    *(unsigned char *)(v16 + 72) = v50;
    *(void *)(v16 + 80) = v64;
    *(unsigned char *)(v16 + 88) = v51;
    *(void *)(v16 + 96) = v65;
    *(unsigned char *)(v16 + 104) = v52;
    *(void *)(v16 + 112) = v68;
    *(unsigned char *)(v16 + 120) = v53;
    *(void *)(v16 + 128) = v69;
    *(unsigned char *)(v16 + 136) = v44;
    *(void *)(v16 + 144) = v71;
    *(unsigned char *)(v16 + 152) = v45;
    *(void *)(v16 + 160) = v74;
    *(unsigned char *)(v16 + 168) = v46;
    *(void *)(v16 + 176) = v76;
    *(void *)(v16 + 184) = v73;
    *(void *)(v16 + 192) = v78;
    *(unsigned char *)(v16 + 200) = v23;
    *(void *)(v16 + 208) = v61;
    *(void *)(v16 + 216) = v59;
    *(void *)(v16 + 224) = v63;
    *(unsigned char *)(v16 + 232) = v25;
    *(void *)(v16 + 240) = v67;
    *(void *)(v16 + 248) = v66;
    *(void *)(v16 + 256) = v70;
    *(unsigned char *)(v16 + 264) = v24;
    *(void *)(v16 + 272) = v72;
    *(void *)(v16 + 280) = v75;
    *(void *)(v16 + 288) = v77;
    *(void *)(v16 + 296) = v79;
    *(void *)(v16 + 304) = v80;
    *(unsigned char *)(v16 + 312) = v54;
    *(unsigned char *)(v16 + 313) = v81;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v39;
  unint64_t v27 = v41;
  if ((v43 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v38 = 1 << *(unsigned char *)(v5 + 32);
  if (v38 >= 64) {
    bzero(v27, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v27 = -1 << v38;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1000D08B8(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_10001644C(&qword_1005A4240);
  char v37 = a2;
  uint64_t v6 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v36 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  char v34 = v2;
  int64_t v35 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v35) {
      break;
    }
    uint64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v36 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v35) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v36 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v35)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v34;
          if ((v37 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v36 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v35) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v36 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    int64_t v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    char v32 = *(unsigned char *)(*(void *)(v5 + 56) + v20);
    if ((v37 & 1) == 0) {
      swift_bridgeObjectRetain();
    }
    Hasher.init(_seed:)();
    String.hash(into:)();
    uint64_t result = Hasher._finalize()();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    unint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    *unint64_t v18 = v31;
    v18[1] = v30;
    *(unsigned char *)(*(void *)(v7 + 56) + v17) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v34;
  uint64_t v22 = (void *)(v5 + 64);
  if ((v37 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
  if (v33 >= 64) {
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v22 = -1 << v33;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1000D0BC4(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_10001644C(&qword_1005A4250);
  uint64_t v6 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_41;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v33 = v2;
  uint64_t v34 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v16 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v17 = v16 | (v14 << 6);
      goto LABEL_22;
    }
    int64_t v18 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v18 >= v11) {
      break;
    }
    unint64_t v19 = (void *)(v5 + 64);
    unint64_t v20 = *(void *)(v34 + 8 * v18);
    ++v14;
    if (!v20)
    {
      int64_t v14 = v18 + 1;
      if (v18 + 1 >= v11) {
        goto LABEL_34;
      }
      unint64_t v20 = *(void *)(v34 + 8 * v14);
      if (!v20)
      {
        int64_t v21 = v18 + 2;
        if (v21 >= v11)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v33;
          if ((a2 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v20 = *(void *)(v34 + 8 * v21);
        if (!v20)
        {
          while (1)
          {
            int64_t v14 = v21 + 1;
            if (__OFADD__(v21, 1)) {
              goto LABEL_43;
            }
            if (v14 >= v11) {
              goto LABEL_34;
            }
            unint64_t v20 = *(void *)(v34 + 8 * v14);
            ++v21;
            if (v20) {
              goto LABEL_21;
            }
          }
        }
        int64_t v14 = v21;
      }
    }
LABEL_21:
    unint64_t v10 = (v20 - 1) & v20;
    unint64_t v17 = __clz(__rbit64(v20)) + (v14 << 6);
LABEL_22:
    uint64_t v22 = *(void **)(*(void *)(v5 + 48) + 8 * v17);
    unint64_t v23 = (_OWORD *)(*(void *)(v5 + 56) + 32 * v17);
    if (a2)
    {
      sub_10000C948(v23, v35);
    }
    else
    {
      sub_100031C38((uint64_t)v23, (uint64_t)v35);
      id v24 = v22;
    }
    Hasher.init(_seed:)();
    type metadata accessor for CFString(0);
    sub_1000D4914(&qword_1005A4248, type metadata accessor for CFString);
    _CFObject.hash(into:)();
    uint64_t result = Hasher._finalize()();
    uint64_t v25 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v26 = result & ~v25;
    unint64_t v27 = v26 >> 6;
    if (((-1 << v26) & ~*(void *)(v12 + 8 * (v26 >> 6))) != 0)
    {
      unint64_t v15 = __clz(__rbit64((-1 << v26) & ~*(void *)(v12 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v28 = 0;
      unint64_t v29 = (unint64_t)(63 - v25) >> 6;
      do
      {
        if (++v27 == v29 && (v28 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v30 = v27 == v29;
        if (v27 == v29) {
          unint64_t v27 = 0;
        }
        v28 |= v30;
        uint64_t v31 = *(void *)(v12 + 8 * v27);
      }
      while (v31 == -1);
      unint64_t v15 = __clz(__rbit64(~v31)) + (v27 << 6);
    }
    *(void *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    *(void *)(*(void *)(v7 + 48) + 8 * v15) = v22;
    uint64_t result = (uint64_t)sub_10000C948(v35, (_OWORD *)(*(void *)(v7 + 56) + 32 * v15));
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v33;
  unint64_t v19 = (void *)(v5 + 64);
  if ((a2 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v32 = 1 << *(unsigned char *)(v5 + 32);
  if (v32 >= 64) {
    bzero(v19, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v19 = -1 << v32;
  }
  *(void *)(v5 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1000D0F00(uint64_t a1, char a2)
{
  return sub_1000D0F18(a1, a2, &qword_1005A6130);
}

uint64_t sub_1000D0F0C(uint64_t a1, char a2)
{
  return sub_1000D0F18(a1, a2, &qword_1005A6140);
}

uint64_t sub_1000D0F18(uint64_t a1, char a2, uint64_t *a3)
{
  id v4 = v3;
  uint64_t v6 = *v3;
  sub_10001644C(a3);
  char v39 = a2;
  uint64_t v7 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16)) {
    goto LABEL_40;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v38 = v6 + 64;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & *(void *)(v6 + 64);
  uint64_t v36 = v3;
  int64_t v37 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v12 = v7 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v11)
    {
      unint64_t v20 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    int64_t v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v37) {
      break;
    }
    unint64_t v23 = (void *)(v6 + 64);
    unint64_t v24 = *(void *)(v38 + 8 * v22);
    ++v14;
    if (!v24)
    {
      int64_t v14 = v22 + 1;
      if (v22 + 1 >= v37) {
        goto LABEL_33;
      }
      unint64_t v24 = *(void *)(v38 + 8 * v14);
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v37)
        {
LABEL_33:
          swift_release();
          id v4 = v36;
          if ((v39 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v24 = *(void *)(v38 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            int64_t v14 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_42;
            }
            if (v14 >= v37) {
              goto LABEL_33;
            }
            unint64_t v24 = *(void *)(v38 + 8 * v14);
            ++v25;
            if (v24) {
              goto LABEL_30;
            }
          }
        }
        int64_t v14 = v25;
      }
    }
LABEL_30:
    unint64_t v11 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    BOOL v30 = (uint64_t *)(*(void *)(v6 + 48) + 16 * v21);
    uint64_t v32 = *v30;
    uint64_t v31 = v30[1];
    uint64_t v33 = *(void **)(*(void *)(v6 + 56) + 8 * v21);
    if ((v39 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      id v34 = v33;
    }
    Hasher.init(_seed:)();
    String.hash(into:)();
    uint64_t result = Hasher._finalize()();
    uint64_t v15 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v16 = result & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v28 = v17 == v27;
        if (v17 == v27) {
          unint64_t v17 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      unint64_t v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    unint64_t v19 = (void *)(*(void *)(v8 + 48) + 16 * v18);
    *unint64_t v19 = v32;
    v19[1] = v31;
    *(void *)(*(void *)(v8 + 56) + 8 * v18) = v33;
    ++*(void *)(v8 + 16);
  }
  swift_release();
  id v4 = v36;
  unint64_t v23 = (void *)(v6 + 64);
  if ((v39 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v35 = 1 << *(unsigned char *)(v6 + 32);
  if (v35 >= 64) {
    bzero(v23, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v23 = -1 << v35;
  }
  *(void *)(v6 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *id v4 = v8;
  return result;
}

uint64_t sub_1000D1224(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_10001644C(&qword_1005A6148);
  uint64_t result = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    int64_t v8 = 0;
    uint64_t v9 = (uint64_t *)(v5 + 64);
    uint64_t v10 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v32 = -1 << v10;
    if (v10 < 64) {
      uint64_t v11 = ~(-1 << v10);
    }
    else {
      uint64_t v11 = -1;
    }
    unint64_t v12 = v11 & *(void *)(v5 + 64);
    uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
    id v34 = v3;
    int64_t v35 = (unint64_t)(v10 + 63) >> 6;
    uint64_t v13 = result + 64;
    while (1)
    {
      if (v12)
      {
        unint64_t v19 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        unint64_t v20 = v19 | (v8 << 6);
      }
      else
      {
        int64_t v21 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        if (v21 >= v35) {
          goto LABEL_33;
        }
        unint64_t v22 = v9[v21];
        ++v8;
        if (!v22)
        {
          int64_t v8 = v21 + 1;
          if (v21 + 1 >= v35) {
            goto LABEL_33;
          }
          unint64_t v22 = v9[v8];
          if (!v22)
          {
            int64_t v23 = v21 + 2;
            if (v23 >= v35)
            {
LABEL_33:
              if ((a2 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v34;
                goto LABEL_40;
              }
              if (v33 >= 64) {
                bzero((void *)(v5 + 64), 8 * v35);
              }
              else {
                *uint64_t v9 = v32;
              }
              uint64_t v3 = v34;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v22 = v9[v23];
            if (!v22)
            {
              while (1)
              {
                int64_t v8 = v23 + 1;
                if (__OFADD__(v23, 1)) {
                  goto LABEL_42;
                }
                if (v8 >= v35) {
                  goto LABEL_33;
                }
                unint64_t v22 = v9[v8];
                ++v23;
                if (v22) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v8 = v23;
          }
        }
LABEL_30:
        unint64_t v12 = (v22 - 1) & v22;
        unint64_t v20 = __clz(__rbit64(v22)) + (v8 << 6);
      }
      uint64_t v28 = 8 * v20;
      uint64_t v29 = *(void *)(*(void *)(v5 + 48) + v28);
      BOOL v30 = *(void **)(*(void *)(v5 + 56) + v28);
      if ((a2 & 1) == 0) {
        id v31 = v30;
      }
      uint64_t result = static Hasher._hash(seed:_:)();
      uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v15 = result & ~v14;
      unint64_t v16 = v15 >> 6;
      if (((-1 << v15) & ~*(void *)(v13 + 8 * (v15 >> 6))) != 0)
      {
        unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v13 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v24 = 0;
        unint64_t v25 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          BOOL v26 = v16 == v25;
          if (v16 == v25) {
            unint64_t v16 = 0;
          }
          v24 |= v26;
          uint64_t v27 = *(void *)(v13 + 8 * v16);
        }
        while (v27 == -1);
        unint64_t v17 = __clz(__rbit64(~v27)) + (v16 << 6);
      }
      *(void *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      uint64_t v18 = 8 * v17;
      *(void *)(*(void *)(v7 + 48) + v18) = v29;
      *(void *)(*(void *)(v7 + 56) + v18) = v30;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_40:
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1000D14D8(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_10001644C(&qword_1005A4E48);
  uint64_t v6 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v36 = v2;
  uint64_t v37 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    int64_t v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v11) {
      break;
    }
    int64_t v23 = (void *)(v5 + 64);
    unint64_t v24 = *(void *)(v37 + 8 * v22);
    ++v14;
    if (!v24)
    {
      int64_t v14 = v22 + 1;
      if (v22 + 1 >= v11) {
        goto LABEL_33;
      }
      unint64_t v24 = *(void *)(v37 + 8 * v14);
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v11)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v36;
          if ((a2 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v24 = *(void *)(v37 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            int64_t v14 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_42;
            }
            if (v14 >= v11) {
              goto LABEL_33;
            }
            unint64_t v24 = *(void *)(v37 + 8 * v14);
            ++v25;
            if (v24) {
              goto LABEL_30;
            }
          }
        }
        int64_t v14 = v25;
      }
    }
LABEL_30:
    unint64_t v10 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    uint64_t v30 = 8 * v21;
    id v31 = *(void **)(*(void *)(v5 + 48) + v30);
    uint64_t v32 = *(void **)(*(void *)(v5 + 56) + v30);
    if ((a2 & 1) == 0)
    {
      id v33 = v31;
      id v34 = v32;
    }
    uint64_t result = NSObject._rawHashValue(seed:)(*(void *)(v7 + 40));
    uint64_t v15 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v16 = result & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v28 = v17 == v27;
        if (v17 == v27) {
          unint64_t v17 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      unint64_t v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    uint64_t v19 = 8 * v18;
    *(void *)(*(void *)(v7 + 48) + v19) = v31;
    *(void *)(*(void *)(v7 + 56) + v19) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v36;
  int64_t v23 = (void *)(v5 + 64);
  if ((a2 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v35 = 1 << *(unsigned char *)(v5 + 32);
  if (v35 >= 64) {
    bzero(v23, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *int64_t v23 = -1 << v35;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1000D17AC(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_10001644C(&qword_1005A4228);
  uint64_t v6 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_41;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v36 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v14 << 6);
      goto LABEL_22;
    }
    int64_t v21 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v21 >= v11) {
      break;
    }
    int64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v36 + 8 * v21);
    ++v14;
    if (!v23)
    {
      int64_t v14 = v21 + 1;
      if (v21 + 1 >= v11) {
        goto LABEL_34;
      }
      unint64_t v23 = *(void *)(v36 + 8 * v14);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v11)
        {
LABEL_34:
          swift_release();
          if ((a2 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v23 = *(void *)(v36 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v14 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_43;
            }
            if (v14 >= v11) {
              goto LABEL_34;
            }
            unint64_t v23 = *(void *)(v36 + 8 * v14);
            ++v24;
            if (v23) {
              goto LABEL_21;
            }
          }
        }
        int64_t v14 = v24;
      }
    }
LABEL_21:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v14 << 6);
LABEL_22:
    uint64_t v25 = *(void *)(v5 + 48) + 40 * v20;
    if (a2)
    {
      long long v26 = *(_OWORD *)v25;
      long long v27 = *(_OWORD *)(v25 + 16);
      uint64_t v40 = *(void *)(v25 + 32);
      long long v38 = v26;
      long long v39 = v27;
      sub_10000C948((_OWORD *)(*(void *)(v5 + 56) + 32 * v20), v37);
    }
    else
    {
      sub_100035E00(v25, (uint64_t)&v38);
      sub_100031C38(*(void *)(v5 + 56) + 32 * v20, (uint64_t)v37);
    }
    uint64_t result = AnyHashable._rawHashValue(seed:)(*(void *)(v7 + 40));
    uint64_t v28 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v29 = result & ~v28;
    unint64_t v30 = v29 >> 6;
    if (((-1 << v29) & ~*(void *)(v12 + 8 * (v29 >> 6))) != 0)
    {
      unint64_t v15 = __clz(__rbit64((-1 << v29) & ~*(void *)(v12 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v31 = 0;
      unint64_t v32 = (unint64_t)(63 - v28) >> 6;
      do
      {
        if (++v30 == v32 && (v31 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v33 = v30 == v32;
        if (v30 == v32) {
          unint64_t v30 = 0;
        }
        v31 |= v33;
        uint64_t v34 = *(void *)(v12 + 8 * v30);
      }
      while (v34 == -1);
      unint64_t v15 = __clz(__rbit64(~v34)) + (v30 << 6);
    }
    *(void *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    uint64_t v16 = *(void *)(v7 + 48) + 40 * v15;
    long long v17 = v38;
    long long v18 = v39;
    *(void *)(v16 + 32) = v40;
    *(_OWORD *)uint64_t v16 = v17;
    *(_OWORD *)(v16 + 16) = v18;
    uint64_t result = (uint64_t)sub_10000C948(v37, (_OWORD *)(*(void *)(v7 + 56) + 32 * v15));
    ++*(void *)(v7 + 16);
  }
  swift_release();
  int64_t v22 = (void *)(v5 + 64);
  if ((a2 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v35 = 1 << *(unsigned char *)(v5 + 32);
  if (v35 >= 64) {
    bzero(v22, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *int64_t v22 = -1 << v35;
  }
  *(void *)(v5 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1000D1AC4(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_10001644C((uint64_t *)&unk_1005A4CD0);
  char v42 = a2;
  uint64_t v6 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v41 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  long long v39 = v2;
  int64_t v40 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v21 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v22 = v21 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v23 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v23 >= v40) {
      break;
    }
    int64_t v24 = (void *)(v5 + 64);
    unint64_t v25 = *(void *)(v41 + 8 * v23);
    ++v13;
    if (!v25)
    {
      int64_t v13 = v23 + 1;
      if (v23 + 1 >= v40) {
        goto LABEL_33;
      }
      unint64_t v25 = *(void *)(v41 + 8 * v13);
      if (!v25)
      {
        int64_t v26 = v23 + 2;
        if (v26 >= v40)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v39;
          if ((v42 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v25 = *(void *)(v41 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            int64_t v13 = v26 + 1;
            if (__OFADD__(v26, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v40) {
              goto LABEL_33;
            }
            unint64_t v25 = *(void *)(v41 + 8 * v13);
            ++v26;
            if (v25) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v26;
      }
    }
LABEL_30:
    unint64_t v10 = (v25 - 1) & v25;
    unint64_t v22 = __clz(__rbit64(v25)) + (v13 << 6);
LABEL_31:
    uint64_t v31 = 16 * v22;
    unint64_t v32 = (uint64_t *)(*(void *)(v5 + 48) + v31);
    uint64_t v34 = *v32;
    uint64_t v33 = v32[1];
    uint64_t v35 = (uint64_t *)(*(void *)(v5 + 56) + v31);
    uint64_t v36 = *v35;
    uint64_t v37 = v35[1];
    if ((v42 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    Hasher.init(_seed:)();
    String.hash(into:)();
    uint64_t result = Hasher._finalize()();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v27 = 0;
      unint64_t v28 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v29 = v16 == v28;
        if (v16 == v28) {
          unint64_t v16 = 0;
        }
        v27 |= v29;
        uint64_t v30 = *(void *)(v11 + 8 * v16);
      }
      while (v30 == -1);
      unint64_t v17 = __clz(__rbit64(~v30)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t v18 = 16 * v17;
    unint64_t v19 = (void *)(*(void *)(v7 + 48) + v18);
    *unint64_t v19 = v34;
    v19[1] = v33;
    unint64_t v20 = (void *)(*(void *)(v7 + 56) + v18);
    *unint64_t v20 = v36;
    v20[1] = v37;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v39;
  int64_t v24 = (void *)(v5 + 64);
  if ((v42 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v38 = 1 << *(unsigned char *)(v5 + 32);
  if (v38 >= 64) {
    bzero(v24, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v24 = -1 << v38;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1000D1DEC(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = type metadata accessor for PurchaseCandidate();
  uint64_t v38 = *(void *)(v5 - 8);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v2;
  sub_10001644C(&qword_1005A6138);
  char v9 = a2;
  uint64_t result = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v11 = result;
  if (*(void *)(v8 + 16))
  {
    uint64_t v35 = v3;
    int64_t v12 = 0;
    uint64_t v13 = *(void *)(v8 + 64);
    uint64_t v37 = (void *)(v8 + 64);
    uint64_t v14 = 1 << *(unsigned char *)(v8 + 32);
    if (v14 < 64) {
      uint64_t v15 = ~(-1 << v14);
    }
    else {
      uint64_t v15 = -1;
    }
    unint64_t v16 = v15 & v13;
    int64_t v36 = (unint64_t)(v14 + 63) >> 6;
    uint64_t v17 = result + 64;
    while (1)
    {
      if (v16)
      {
        unint64_t v19 = __clz(__rbit64(v16));
        v16 &= v16 - 1;
        unint64_t v20 = v19 | (v12 << 6);
      }
      else
      {
        int64_t v21 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
LABEL_42:
          __break(1u);
LABEL_43:
          __break(1u);
          return result;
        }
        uint64_t result = (uint64_t)v37;
        if (v21 >= v36) {
          goto LABEL_34;
        }
        unint64_t v22 = v37[v21];
        ++v12;
        if (!v22)
        {
          int64_t v12 = v21 + 1;
          if (v21 + 1 >= v36) {
            goto LABEL_34;
          }
          unint64_t v22 = v37[v12];
          if (!v22)
          {
            int64_t v23 = v21 + 2;
            if (v23 >= v36)
            {
LABEL_34:
              if ((v9 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v35;
                goto LABEL_41;
              }
              uint64_t v34 = 1 << *(unsigned char *)(v8 + 32);
              if (v34 >= 64) {
                bzero(v37, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *uint64_t v37 = -1 << v34;
              }
              uint64_t v3 = v35;
              *(void *)(v8 + 16) = 0;
              break;
            }
            unint64_t v22 = v37[v23];
            if (!v22)
            {
              while (1)
              {
                int64_t v12 = v23 + 1;
                if (__OFADD__(v23, 1)) {
                  goto LABEL_43;
                }
                if (v12 >= v36) {
                  goto LABEL_34;
                }
                unint64_t v22 = v37[v12];
                ++v23;
                if (v22) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v12 = v23;
          }
        }
LABEL_21:
        unint64_t v16 = (v22 - 1) & v22;
        unint64_t v20 = __clz(__rbit64(v22)) + (v12 << 6);
      }
      uint64_t v24 = *(void *)(*(void *)(v8 + 48) + 8 * v20);
      uint64_t v25 = *(void *)(v38 + 72);
      uint64_t v26 = *(void *)(v8 + 56) + v25 * v20;
      if (v9) {
        sub_1000AA4F4(v26, (uint64_t)v7);
      }
      else {
        sub_1000AA434(v26, (uint64_t)v7);
      }
      uint64_t result = static Hasher._hash(seed:_:)();
      uint64_t v27 = -1 << *(unsigned char *)(v11 + 32);
      unint64_t v28 = result & ~v27;
      unint64_t v29 = v28 >> 6;
      if (((-1 << v28) & ~*(void *)(v17 + 8 * (v28 >> 6))) != 0)
      {
        unint64_t v18 = __clz(__rbit64((-1 << v28) & ~*(void *)(v17 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v30 = 0;
        unint64_t v31 = (unint64_t)(63 - v27) >> 6;
        do
        {
          if (++v29 == v31 && (v30 & 1) != 0)
          {
            __break(1u);
            goto LABEL_42;
          }
          BOOL v32 = v29 == v31;
          if (v29 == v31) {
            unint64_t v29 = 0;
          }
          v30 |= v32;
          uint64_t v33 = *(void *)(v17 + 8 * v29);
        }
        while (v33 == -1);
        unint64_t v18 = __clz(__rbit64(~v33)) + (v29 << 6);
      }
      *(void *)(v17 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      *(void *)(*(void *)(v11 + 48) + 8 * v18) = v24;
      uint64_t result = sub_1000AA4F4((uint64_t)v7, *(void *)(v11 + 56) + v25 * v18);
      ++*(void *)(v11 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_41:
  *uint64_t v3 = v11;
  return result;
}

uint64_t sub_1000D2138(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_100049AC4(a3);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t result = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= result && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= result && (a4 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_1000D323C();
LABEL_7:
    unint64_t v18 = (void *)*v5;
    if (v16)
    {
LABEL_8:
      unint64_t v19 = (void *)(v18[7] + 16 * v12);
      uint64_t result = swift_bridgeObjectRelease();
      *unint64_t v19 = a1;
      v19[1] = a2;
      return result;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    *(void *)(v18[6] + 8 * v12) = a3;
    int64_t v21 = (void *)(v18[7] + 16 * v12);
    void *v21 = a1;
    v21[1] = a2;
    uint64_t v22 = v18[2];
    BOOL v23 = __OFADD__(v22, 1);
    uint64_t v24 = v22 + 1;
    if (!v23)
    {
      v18[2] = v24;
      return result;
    }
    goto LABEL_14;
  }
  sub_1000CF8D8(result, a4 & 1);
  uint64_t result = sub_100049AC4(a3);
  if ((v16 & 1) == (v20 & 1))
  {
    unint64_t v12 = result;
    unint64_t v18 = (void *)*v5;
    if (v16) {
      goto LABEL_8;
    }
    goto LABEL_11;
  }
LABEL_15:
  uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

_OWORD *sub_1000D2278(_OWORD *a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = (void **)v4;
  uint64_t v10 = (void *)*v4;
  unint64_t v12 = sub_100049A4C(a2, a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 < v15 || (a4 & 1) == 0)
  {
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_1000D33EC();
      goto LABEL_7;
    }
    sub_1000CFEAC(v15, a4 & 1);
    unint64_t v21 = sub_100049A4C(a2, a3);
    if ((v16 & 1) == (v22 & 1))
    {
      unint64_t v12 = v21;
      unint64_t v18 = *v5;
      if (v16) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    uint64_t result = (_OWORD *)KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return result;
  }
LABEL_7:
  unint64_t v18 = *v5;
  if (v16)
  {
LABEL_8:
    unint64_t v19 = (_OWORD *)(v18[7] + 32 * v12);
    sub_10002E618((uint64_t)v19);
    return sub_10000C948(a1, v19);
  }
LABEL_13:
  sub_1000D3058(v12, a2, a3, a1, v18);
  return (_OWORD *)swift_bridgeObjectRetain();
}

uint64_t sub_1000D23CC(const void *a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_100049A4C(a2, a3);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_18;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_1000D35D4();
LABEL_7:
    unint64_t v18 = (void *)*v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = v18[7] + 320 * v12;
      return sub_1000D495C((uint64_t)a1, v19);
    }
    goto LABEL_13;
  }
  sub_1000D01AC(v15, a4 & 1);
  unint64_t v21 = sub_100049A4C(a2, a3);
  if ((v16 & 1) != (v22 & 1))
  {
LABEL_19:
    uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return result;
  }
  unint64_t v12 = v21;
  unint64_t v18 = (void *)*v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_13:
  v18[(v12 >> 6) + 8] |= 1 << v12;
  BOOL v23 = (uint64_t *)(v18[6] + 16 * v12);
  *BOOL v23 = a2;
  v23[1] = a3;
  memcpy((void *)(v18[7] + 320 * v12), a1, 0x13AuLL);
  uint64_t v24 = v18[2];
  BOOL v25 = __OFADD__(v24, 1);
  uint64_t v26 = v24 + 1;
  if (v25)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v18[2] = v26;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1000D2558(char a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_100049A4C(a2, a3);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t result = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= result && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= result && (a4 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_1000D37D0();
LABEL_7:
    unint64_t v18 = (void *)*v5;
    if (v16)
    {
LABEL_8:
      *(unsigned char *)(v18[7] + v12) = a1 & 1;
      return result;
    }
    goto LABEL_11;
  }
  sub_1000D08B8(result, a4 & 1);
  uint64_t result = sub_100049A4C(a2, a3);
  if ((v16 & 1) != (v19 & 1))
  {
LABEL_17:
    uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return result;
  }
  unint64_t v12 = result;
  unint64_t v18 = (void *)*v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  v18[(v12 >> 6) + 8] |= 1 << v12;
  char v20 = (uint64_t *)(v18[6] + 16 * v12);
  *char v20 = a2;
  v20[1] = a3;
  *(unsigned char *)(v18[7] + v12) = a1 & 1;
  uint64_t v21 = v18[2];
  BOOL v22 = __OFADD__(v21, 1);
  uint64_t v23 = v21 + 1;
  if (v22)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v18[2] = v23;
  return swift_bridgeObjectRetain();
}

_OWORD *sub_1000D26C4(_OWORD *a1, void *a2, char a3)
{
  id v4 = (void **)v3;
  uint64_t v7 = (void *)*v3;
  unint64_t v9 = sub_100049BDC((uint64_t)a2);
  uint64_t v10 = v7[2];
  BOOL v11 = (v8 & 1) == 0;
  uint64_t v12 = v10 + v11;
  if (__OFADD__(v10, v11))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v13 = v8;
  uint64_t v14 = v7[3];
  if (v14 < v12 || (a3 & 1) == 0)
  {
    if (v14 >= v12 && (a3 & 1) == 0)
    {
      sub_1000D397C();
      goto LABEL_7;
    }
    sub_1000D0BC4(v12, a3 & 1);
    unint64_t v18 = sub_100049BDC((uint64_t)a2);
    if ((v13 & 1) == (v19 & 1))
    {
      unint64_t v9 = v18;
      uint64_t v15 = *v4;
      if (v13) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    type metadata accessor for CFString(0);
    uint64_t result = (_OWORD *)KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return result;
  }
LABEL_7:
  uint64_t v15 = *v4;
  if (v13)
  {
LABEL_8:
    char v16 = (_OWORD *)(v15[7] + 32 * v9);
    sub_10002E618((uint64_t)v16);
    return sub_10000C948(a1, v16);
  }
LABEL_13:
  sub_1000D30C4(v9, (uint64_t)a2, a1, v15);
  return a2;
}

void sub_1000D2808(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_100049A4C(a2, a3);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_1000D3B5C(&qword_1005A6130);
LABEL_7:
    unint64_t v18 = (void *)*v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = v18[7];

      *(void *)(v19 + 8 * v12) = a1;
      return;
    }
    goto LABEL_11;
  }
  sub_1000D0F18(v15, a4 & 1, &qword_1005A6130);
  unint64_t v20 = sub_100049A4C(a2, a3);
  if ((v16 & 1) != (v21 & 1))
  {
LABEL_17:
    KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return;
  }
  unint64_t v12 = v20;
  unint64_t v18 = (void *)*v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  v18[(v12 >> 6) + 8] |= 1 << v12;
  BOOL v22 = (uint64_t *)(v18[6] + 16 * v12);
  *BOOL v22 = a2;
  v22[1] = a3;
  *(void *)(v18[7] + 8 * v12) = a1;
  uint64_t v23 = v18[2];
  BOOL v24 = __OFADD__(v23, 1);
  uint64_t v25 = v23 + 1;
  if (v24)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v18[2] = v25;
  swift_bridgeObjectRetain();
}

void sub_1000D2988(uint64_t a1, uint64_t a2, char a3)
{
  id v4 = v3;
  uint64_t v8 = *v3;
  unint64_t v10 = sub_100049AC4(a2);
  uint64_t v11 = *(void *)(v8 + 16);
  BOOL v12 = (v9 & 1) == 0;
  uint64_t v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  char v14 = v9;
  uint64_t v15 = *(void *)(v8 + 24);
  if (v15 >= v13 && (a3 & 1) != 0) {
    goto LABEL_7;
  }
  if (v15 >= v13 && (a3 & 1) == 0)
  {
    sub_1000D3D08();
LABEL_7:
    char v16 = (void *)*v4;
    if (v14)
    {
LABEL_8:
      uint64_t v17 = v16[7];

      *(void *)(v17 + 8 * v10) = a1;
      return;
    }
LABEL_11:
    v16[(v10 >> 6) + 8] |= 1 << v10;
    uint64_t v20 = 8 * v10;
    *(void *)(v16[6] + v20) = a2;
    *(void *)(v16[7] + v20) = a1;
    uint64_t v21 = v16[2];
    BOOL v22 = __OFADD__(v21, 1);
    uint64_t v23 = v21 + 1;
    if (!v22)
    {
      v16[2] = v23;
      return;
    }
    goto LABEL_14;
  }
  sub_1000D1224(v13, a3 & 1);
  unint64_t v18 = sub_100049AC4(a2);
  if ((v14 & 1) == (v19 & 1))
  {
    unint64_t v10 = v18;
    char v16 = (void *)*v4;
    if (v14) {
      goto LABEL_8;
    }
    goto LABEL_11;
  }
LABEL_15:
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
}

void sub_1000D2AC4(uint64_t a1, void *a2, char a3)
{
  id v4 = v3;
  uint64_t v7 = *v3;
  unint64_t v9 = sub_100049B08((uint64_t)a2);
  uint64_t v10 = *(void *)(v7 + 16);
  BOOL v11 = (v8 & 1) == 0;
  uint64_t v12 = v10 + v11;
  if (__OFADD__(v10, v11))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v13 = v8;
  uint64_t v14 = *(void *)(v7 + 24);
  if (v14 >= v12 && (a3 & 1) != 0) {
    goto LABEL_7;
  }
  if (v14 >= v12 && (a3 & 1) == 0)
  {
    sub_1000D3EAC();
LABEL_7:
    uint64_t v15 = (void *)*v4;
    if (v13)
    {
LABEL_8:
      uint64_t v16 = v15[7];

      *(void *)(v16 + 8 * v9) = a1;
      return;
    }
    goto LABEL_11;
  }
  sub_1000D14D8(v12, a3 & 1);
  unint64_t v17 = sub_100049B08((uint64_t)a2);
  if ((v13 & 1) != (v18 & 1))
  {
LABEL_17:
    sub_100018D68(0, (unint64_t *)&qword_1005A3230);
    KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return;
  }
  unint64_t v9 = v17;
  uint64_t v15 = (void *)*v4;
  if (v13) {
    goto LABEL_8;
  }
LABEL_11:
  v15[(v9 >> 6) + 8] |= 1 << v9;
  uint64_t v19 = 8 * v9;
  *(void *)(v15[6] + v19) = a2;
  *(void *)(v15[7] + v19) = a1;
  uint64_t v20 = v15[2];
  BOOL v21 = __OFADD__(v20, 1);
  uint64_t v22 = v20 + 1;
  if (v21)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v15[2] = v22;
  id v23 = a2;
}

_OWORD *sub_1000D2C38(_OWORD *a1, uint64_t a2, char a3)
{
  id v4 = (void **)v3;
  char v8 = (void *)*v3;
  unint64_t v10 = sub_100049A08(a2);
  uint64_t v11 = v8[2];
  BOOL v12 = (v9 & 1) == 0;
  uint64_t v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v14 = v9;
  uint64_t v15 = v8[3];
  if (v15 < v13 || (a3 & 1) == 0)
  {
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_1000D4054();
      goto LABEL_7;
    }
    sub_1000D17AC(v13, a3 & 1);
    unint64_t v19 = sub_100049A08(a2);
    if ((v14 & 1) == (v20 & 1))
    {
      unint64_t v10 = v19;
      uint64_t v16 = *v4;
      if (v14) {
        goto LABEL_8;
      }
LABEL_13:
      sub_100035E00(a2, (uint64_t)v21);
      return sub_1000D312C(v10, (uint64_t)v21, a1, v16);
    }
LABEL_15:
    uint64_t result = (_OWORD *)KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return result;
  }
LABEL_7:
  uint64_t v16 = *v4;
  if ((v14 & 1) == 0) {
    goto LABEL_13;
  }
LABEL_8:
  unint64_t v17 = (_OWORD *)(v16[7] + 32 * v10);
  sub_10002E618((uint64_t)v17);
  return sub_10000C948(a1, v17);
}

uint64_t sub_1000D2D84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v6 = v5;
  uint64_t v12 = *v5;
  unint64_t v14 = sub_100049A4C(a3, a4);
  uint64_t v15 = *(void *)(v12 + 16);
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v18 = v13;
  uint64_t v19 = *(void *)(v12 + 24);
  if (v19 >= v17 && (a5 & 1) != 0) {
    goto LABEL_7;
  }
  if (v19 >= v17 && (a5 & 1) == 0)
  {
    sub_1000D423C();
LABEL_7:
    char v20 = (void *)*v6;
    if (v18)
    {
LABEL_8:
      BOOL v21 = (void *)(v20[7] + 16 * v14);
      uint64_t result = swift_bridgeObjectRelease();
      void *v21 = a1;
      v21[1] = a2;
      return result;
    }
    goto LABEL_11;
  }
  sub_1000D1AC4(v17, a5 & 1);
  unint64_t v23 = sub_100049A4C(a3, a4);
  if ((v18 & 1) != (v24 & 1))
  {
LABEL_17:
    uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return result;
  }
  unint64_t v14 = v23;
  char v20 = (void *)*v6;
  if (v18) {
    goto LABEL_8;
  }
LABEL_11:
  v20[(v14 >> 6) + 8] |= 1 << v14;
  uint64_t v25 = (uint64_t *)(v20[6] + 16 * v14);
  *uint64_t v25 = a3;
  v25[1] = a4;
  uint64_t v26 = (void *)(v20[7] + 16 * v14);
  *uint64_t v26 = a1;
  v26[1] = a2;
  uint64_t v27 = v20[2];
  BOOL v28 = __OFADD__(v27, 1);
  uint64_t v29 = v27 + 1;
  if (v28)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v20[2] = v29;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1000D2F0C(uint64_t a1, uint64_t a2, char a3)
{
  id v4 = (void **)v3;
  char v8 = (void *)*v3;
  unint64_t v10 = sub_100049AC4(a2);
  uint64_t v11 = v8[2];
  BOOL v12 = (v9 & 1) == 0;
  uint64_t v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v14 = v9;
  uint64_t v15 = v8[3];
  if (v15 < v13 || (a3 & 1) == 0)
  {
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_1000D43F8();
      goto LABEL_7;
    }
    sub_1000D1DEC(v13, a3 & 1);
    unint64_t v20 = sub_100049AC4(a2);
    if ((v14 & 1) == (v21 & 1))
    {
      unint64_t v10 = v20;
      BOOL v16 = *v4;
      if (v14) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return result;
  }
LABEL_7:
  BOOL v16 = *v4;
  if (v14)
  {
LABEL_8:
    uint64_t v17 = v16[7];
    uint64_t v18 = v17 + *(void *)(*(void *)(type metadata accessor for PurchaseCandidate() - 8) + 72) * v10;
    return sub_1000D48B0(a1, v18);
  }
LABEL_13:
  return sub_1000D31A8(v10, a2, a1, v16);
}

_OWORD *sub_1000D3058(unint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4, void *a5)
{
  a5[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v6 = (void *)(a5[6] + 16 * a1);
  *uint64_t v6 = a2;
  v6[1] = a3;
  uint64_t result = sub_10000C948(a4, (_OWORD *)(a5[7] + 32 * a1));
  uint64_t v8 = a5[2];
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (v9) {
    __break(1u);
  }
  else {
    a5[2] = v10;
  }
  return result;
}

_OWORD *sub_1000D30C4(unint64_t a1, uint64_t a2, _OWORD *a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(void *)(a4[6] + 8 * a1) = a2;
  uint64_t result = sub_10000C948(a3, (_OWORD *)(a4[7] + 32 * a1));
  uint64_t v6 = a4[2];
  BOOL v7 = __OFADD__(v6, 1);
  uint64_t v8 = v6 + 1;
  if (v7) {
    __break(1u);
  }
  else {
    a4[2] = v8;
  }
  return result;
}

_OWORD *sub_1000D312C(unint64_t a1, uint64_t a2, _OWORD *a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v5 = a4[6] + 40 * a1;
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)uint64_t v5 = *(_OWORD *)a2;
  *(_OWORD *)(v5 + 16) = v6;
  *(void *)(v5 + 32) = *(void *)(a2 + 32);
  uint64_t result = sub_10000C948(a3, (_OWORD *)(a4[7] + 32 * a1));
  uint64_t v8 = a4[2];
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (v9) {
    __break(1u);
  }
  else {
    a4[2] = v10;
  }
  return result;
}

uint64_t sub_1000D31A8(unint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(void *)(a4[6] + 8 * a1) = a2;
  uint64_t v7 = a4[7];
  uint64_t v8 = type metadata accessor for PurchaseCandidate();
  uint64_t result = sub_1000AA4F4(a3, v7 + *(void *)(*(void *)(v8 - 8) + 72) * a1);
  uint64_t v10 = a4[2];
  BOOL v11 = __OFADD__(v10, 1);
  uint64_t v12 = v10 + 1;
  if (v11) {
    __break(1u);
  }
  else {
    a4[2] = v12;
  }
  return result;
}

void *sub_1000D323C()
{
  uint64_t v1 = v0;
  sub_10001644C(&qword_1005A4280);
  uint64_t v2 = *v0;
  uint64_t v3 = static _DictionaryStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v23 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v13) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v23);
    ++v9;
    if (!v24)
    {
      int64_t v9 = v23 + 1;
      if (v23 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v24 = *(void *)(v6 + 8 * v9);
      if (!v24) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v24 - 1) & v24;
    unint64_t v15 = __clz(__rbit64(v24)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void *)(*(void *)(v2 + 48) + 8 * v15);
    uint64_t v18 = 16 * v15;
    uint64_t v19 = (uint64_t *)(*(void *)(v2 + 56) + v18);
    uint64_t v21 = *v19;
    uint64_t v20 = v19[1];
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    uint64_t v22 = (void *)(*(void *)(v4 + 56) + v18);
    *uint64_t v22 = v21;
    v22[1] = v20;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v25 = v23 + 2;
  if (v25 >= v13) {
    goto LABEL_26;
  }
  unint64_t v24 = *(void *)(v6 + 8 * v25);
  if (v24)
  {
    int64_t v9 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v9);
    ++v25;
    if (v24) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1000D33EC()
{
  uint64_t v1 = v0;
  sub_10001644C(&qword_1005A3C10);
  uint64_t v2 = *v0;
  uint64_t v3 = static _DictionaryStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = (void *)swift_release();
LABEL_28:
    uint64_t *v1 = v4;
    return result;
  }
  int64_t v25 = v1;
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = 32 * v15;
    sub_100031C38(*(void *)(v2 + 56) + 32 * v15, (uint64_t)v26);
    uint64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    void *v21 = v19;
    v21[1] = v18;
    sub_10000C948(v26, (_OWORD *)(*(void *)(v4 + 56) + v20));
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13)
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    uint64_t v1 = v25;
    goto LABEL_28;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1000D35D4()
{
  uint64_t v1 = v0;
  sub_10001644C(&qword_1005A4208);
  uint64_t v2 = *v0;
  uint64_t v3 = static _DictionaryStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = (void *)swift_release();
LABEL_28:
    uint64_t *v1 = v4;
    return result;
  }
  int64_t v25 = v1;
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = 320 * v15;
    memcpy(__dst, (const void *)(*(void *)(v2 + 56) + 320 * v15), 0x13AuLL);
    uint64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    void *v21 = v19;
    v21[1] = v18;
    memcpy((void *)(*(void *)(v4 + 56) + v20), __dst, 0x13AuLL);
    swift_bridgeObjectRetain();
    uint64_t result = (void *)sub_10004C464((uint64_t)__dst);
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13)
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    uint64_t v1 = v25;
    goto LABEL_28;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1000D37D0()
{
  uint64_t v1 = v0;
  sub_10001644C(&qword_1005A4240);
  uint64_t v2 = *v0;
  uint64_t v3 = static _DictionaryStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = *v16;
    uint64_t v17 = v16[1];
    LOBYTE(v16) = *(unsigned char *)(*(void *)(v2 + 56) + v15);
    uint64_t v19 = (void *)(*(void *)(v4 + 48) + 16 * v15);
    *uint64_t v19 = v18;
    v19[1] = v17;
    *(unsigned char *)(*(void *)(v4 + 56) + v15) = (_BYTE)v16;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v22 = v20 + 2;
  if (v22 >= v13) {
    goto LABEL_26;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1000D397C()
{
  uint64_t v1 = v0;
  sub_10001644C(&qword_1005A4250);
  uint64_t v2 = *v0;
  uint64_t v3 = static _DictionaryStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v19 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= v13) {
      goto LABEL_26;
    }
    unint64_t v20 = *(void *)(v6 + 8 * v19);
    ++v9;
    if (!v20)
    {
      int64_t v9 = v19 + 1;
      if (v19 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v20 = *(void *)(v6 + 8 * v9);
      if (!v20) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v20 - 1) & v20;
    unint64_t v15 = __clz(__rbit64(v20)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void **)(*(void *)(v2 + 48) + 8 * v15);
    uint64_t v18 = 32 * v15;
    sub_100031C38(*(void *)(v2 + 56) + 32 * v15, (uint64_t)v22);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    sub_10000C948(v22, (_OWORD *)(*(void *)(v4 + 56) + v18));
    id result = v17;
  }
  int64_t v21 = v19 + 2;
  if (v21 >= v13) {
    goto LABEL_26;
  }
  unint64_t v20 = *(void *)(v6 + 8 * v21);
  if (v20)
  {
    int64_t v9 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v20 = *(void *)(v6 + 8 * v9);
    ++v21;
    if (v20) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1000D3B44()
{
  return sub_1000D3B5C(&qword_1005A6130);
}

id sub_1000D3B50()
{
  return sub_1000D3B5C(&qword_1005A6140);
}

id sub_1000D3B5C(uint64_t *a1)
{
  uint64_t v2 = v1;
  sub_10001644C(a1);
  uint64_t v3 = *v1;
  uint64_t v4 = static _DictionaryStorage.copy(original:)();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *uint64_t v2 = v5;
    return result;
  }
  id result = (id)(v4 + 64);
  uint64_t v7 = v3 + 64;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8) {
    id result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    int64_t v23 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v14) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v7 + 8 * v23);
    ++v10;
    if (!v24)
    {
      int64_t v10 = v23 + 1;
      if (v23 + 1 >= v14) {
        goto LABEL_26;
      }
      unint64_t v24 = *(void *)(v7 + 8 * v10);
      if (!v24) {
        break;
      }
    }
LABEL_25:
    unint64_t v13 = (v24 - 1) & v24;
    unint64_t v16 = __clz(__rbit64(v24)) + (v10 << 6);
LABEL_12:
    uint64_t v17 = 16 * v16;
    uint64_t v18 = (void *)(*(void *)(v3 + 48) + 16 * v16);
    uint64_t v19 = v18[1];
    uint64_t v20 = 8 * v16;
    int64_t v21 = *(void **)(*(void *)(v3 + 56) + v20);
    int64_t v22 = (void *)(*(void *)(v5 + 48) + v17);
    *int64_t v22 = *v18;
    v22[1] = v19;
    *(void *)(*(void *)(v5 + 56) + v20) = v21;
    swift_bridgeObjectRetain();
    id result = v21;
  }
  int64_t v25 = v23 + 2;
  if (v25 >= v14) {
    goto LABEL_26;
  }
  unint64_t v24 = *(void *)(v7 + 8 * v25);
  if (v24)
  {
    int64_t v10 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v10 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v7 + 8 * v10);
    ++v25;
    if (v24) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1000D3D08()
{
  uint64_t v1 = v0;
  sub_10001644C(&qword_1005A6148);
  uint64_t v2 = *v0;
  uint64_t v3 = static _DictionaryStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      int64_t v9 = v18 + 1;
      if (v18 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v19 = *(void *)(v6 + 8 * v9);
      if (!v19) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void **)(*(void *)(v2 + 56) + v16);
    *(void *)(*(void *)(v4 + 48) + v16) = *(void *)(*(void *)(v2 + 48) + v16);
    *(void *)(*(void *)(v4 + 56) + v16) = v17;
    id result = v17;
  }
  int64_t v20 = v18 + 2;
  if (v20 >= v13) {
    goto LABEL_26;
  }
  unint64_t v19 = *(void *)(v6 + 8 * v20);
  if (v19)
  {
    int64_t v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v9);
    ++v20;
    if (v19) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1000D3EAC()
{
  uint64_t v1 = v0;
  sub_10001644C(&qword_1005A4E48);
  uint64_t v2 = *v0;
  uint64_t v3 = static _DictionaryStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void **)(*(void *)(v2 + 48) + v16);
    int64_t v18 = *(void **)(*(void *)(v2 + 56) + v16);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    *(void *)(*(void *)(v4 + 56) + v16) = v18;
    id v19 = v17;
    id result = v18;
  }
  int64_t v22 = v20 + 2;
  if (v22 >= v13) {
    goto LABEL_26;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1000D4054()
{
  uint64_t v1 = v0;
  sub_10001644C(&qword_1005A4228);
  uint64_t v2 = *v0;
  uint64_t v3 = static _DictionaryStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v21 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v21 >= v13) {
      goto LABEL_26;
    }
    unint64_t v22 = *(void *)(v6 + 8 * v21);
    ++v9;
    if (!v22)
    {
      int64_t v9 = v21 + 1;
      if (v21 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v22 = *(void *)(v6 + 8 * v9);
      if (!v22) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v22 - 1) & v22;
    unint64_t v15 = __clz(__rbit64(v22)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 40 * v15;
    sub_100035E00(*(void *)(v2 + 48) + 40 * v15, (uint64_t)v25);
    uint64_t v17 = 32 * v15;
    sub_100031C38(*(void *)(v2 + 56) + v17, (uint64_t)v24);
    uint64_t v18 = *(void *)(v4 + 48) + v16;
    long long v19 = v25[0];
    long long v20 = v25[1];
    *(void *)(v18 + 32) = v26;
    *(_OWORD *)uint64_t v18 = v19;
    *(_OWORD *)(v18 + 16) = v20;
    id result = sub_10000C948(v24, (_OWORD *)(*(void *)(v4 + 56) + v17));
  }
  int64_t v23 = v21 + 2;
  if (v23 >= v13) {
    goto LABEL_26;
  }
  unint64_t v22 = *(void *)(v6 + 8 * v23);
  if (v22)
  {
    int64_t v9 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v22 = *(void *)(v6 + 8 * v9);
    ++v23;
    if (v22) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1000D423C()
{
  uint64_t v1 = v0;
  sub_10001644C((uint64_t *)&unk_1005A4CD0);
  uint64_t v2 = *v0;
  uint64_t v3 = static _DictionaryStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v25 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v25 >= v13) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v6 + 8 * v25);
    ++v9;
    if (!v26)
    {
      int64_t v9 = v25 + 1;
      if (v25 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v26 = *(void *)(v6 + 8 * v9);
      if (!v26) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v26 - 1) & v26;
    unint64_t v15 = __clz(__rbit64(v26)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + v16);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    long long v20 = (uint64_t *)(*(void *)(v2 + 56) + v16);
    uint64_t v21 = *v20;
    uint64_t v22 = v20[1];
    int64_t v23 = (void *)(*(void *)(v4 + 48) + v16);
    *int64_t v23 = v19;
    v23[1] = v18;
    unint64_t v24 = (void *)(*(void *)(v4 + 56) + v16);
    void *v24 = v21;
    v24[1] = v22;
    swift_bridgeObjectRetain();
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v27 = v25 + 2;
  if (v27 >= v13) {
    goto LABEL_26;
  }
  unint64_t v26 = *(void *)(v6 + 8 * v27);
  if (v26)
  {
    int64_t v9 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v6 + 8 * v9);
    ++v27;
    if (v26) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1000D43F8()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for PurchaseCandidate();
  uint64_t v25 = *(void *)(v2 - 8);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001644C(&qword_1005A6138);
  uint64_t v5 = *v0;
  uint64_t v6 = static _DictionaryStorage.copy(original:)();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
    id result = (void *)swift_release();
LABEL_25:
    uint64_t *v1 = v7;
    return result;
  }
  unint64_t v24 = v1;
  id result = (void *)(v6 + 64);
  uint64_t v9 = v5 + 64;
  unint64_t v10 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v9 + 8 * v10) {
    id result = memmove(result, (const void *)(v5 + 64), 8 * v10);
  }
  int64_t v11 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v12 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & *(void *)(v5 + 64);
  int64_t v15 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      unint64_t v16 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v17 = v16 | (v11 << 6);
      goto LABEL_9;
    }
    int64_t v21 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v21 >= v15) {
      goto LABEL_23;
    }
    unint64_t v22 = *(void *)(v9 + 8 * v21);
    ++v11;
    if (!v22)
    {
      int64_t v11 = v21 + 1;
      if (v21 + 1 >= v15) {
        goto LABEL_23;
      }
      unint64_t v22 = *(void *)(v9 + 8 * v11);
      if (!v22) {
        break;
      }
    }
LABEL_22:
    unint64_t v14 = (v22 - 1) & v22;
    unint64_t v17 = __clz(__rbit64(v22)) + (v11 << 6);
LABEL_9:
    uint64_t v18 = 8 * v17;
    uint64_t v19 = *(void *)(*(void *)(v5 + 48) + 8 * v17);
    unint64_t v20 = *(void *)(v25 + 72) * v17;
    sub_1000AA434(*(void *)(v5 + 56) + v20, (uint64_t)v4);
    *(void *)(*(void *)(v7 + 48) + v18) = v19;
    id result = (void *)sub_1000AA4F4((uint64_t)v4, *(void *)(v7 + 56) + v20);
  }
  int64_t v23 = v21 + 2;
  if (v23 >= v15)
  {
LABEL_23:
    id result = (void *)swift_release();
    uint64_t v1 = v24;
    goto LABEL_25;
  }
  unint64_t v22 = *(void *)(v9 + 8 * v23);
  if (v22)
  {
    int64_t v11 = v23;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v11 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v11 >= v15) {
      goto LABEL_23;
    }
    unint64_t v22 = *(void *)(v9 + 8 * v11);
    ++v23;
    if (v22) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t (*sub_1000D464C(void (**a1)(id *a1), unint64_t a2, uint64_t a3))()
{
  uint64_t v6 = (void (*)(id *))malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_1000D4768(v6, a2, a3);
  return sub_1000D46B4;
}

uint64_t (*sub_1000D46B8(void (**a1)(id *), unint64_t a2, uint64_t a3))()
{
  uint64_t v6 = (void (*)(id *))malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_1000D47F0(v6, a2, a3);
  return sub_1000D46B4;
}

void sub_1000D4720(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void))(*a1 + 32))(*a1);
  free(v1);
}

void (*sub_1000D4768(void (*result)(id *a1), unint64_t a2, uint64_t a3))(id *a1)
{
  uint64_t v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    id v4 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    id v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(void *)uint64_t v3 = v4;
    return sub_1000D47E8;
  }
  __break(1u);
  return result;
}

void sub_1000D47E8(id *a1)
{
}

void (*sub_1000D47F0(void (*result)(id *), unint64_t a2, uint64_t a3))(id *)
{
  uint64_t v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    id v4 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    id v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(void *)uint64_t v3 = v4;
    return sub_1000D49C0;
  }
  __break(1u);
  return result;
}

uint64_t sub_1000D4870()
{
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000D48A8(void *a1)
{
  return sub_1000CF374(a1, v1);
}

uint64_t sub_1000D48B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PurchaseCandidate();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000D4914(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000D495C(uint64_t a1, uint64_t a2)
{
  return a2;
}

id sub_1000D4A50()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ODRPublicErrorMapping();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for ODRPublicErrorMapping()
{
  return self;
}

id sub_1000D4AA8(id a1)
{
  uint64_t v2 = type metadata accessor for Logger();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    id v6 = a1;
    id v7 = [v6 domain];
    uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v10 = v9;

    if (static String._unconditionallyBridgeFromObjectiveC(_:)() == v8 && v11 == v10) {
      goto LABEL_15;
    }
    uint64_t v52 = v3;
    char v13 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v13)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      return a1;
    }
    if (static String._unconditionallyBridgeFromObjectiveC(_:)() == v8 && v14 == v10) {
      goto LABEL_15;
    }
    char v16 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v16) {
      goto LABEL_7;
    }
    if (static String._unconditionallyBridgeFromObjectiveC(_:)() == v8 && v17 == v10) {
      goto LABEL_15;
    }
    char v19 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v19) {
      goto LABEL_7;
    }
    if (static String._unconditionallyBridgeFromObjectiveC(_:)() == v8 && v20 == v10)
    {
LABEL_15:
      swift_bridgeObjectRelease_n();
      return a1;
    }
    char v21 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v21) {
      goto LABEL_7;
    }
    if (static String._unconditionallyBridgeFromObjectiveC(_:)() == v8 && v22 == v10)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v23 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v23 & 1) == 0)
      {
        id v51 = self;
        sub_10001644C(&qword_1005A46A8);
        uint64_t inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_100488070;
        uint64_t v54 = 0x726F727265;
        unint64_t v55 = 0xE500000000000000;
        AnyHashable.init<A>(_:)();
        id v27 = [v6 domain];
        uint64_t v28 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v30 = v29;

        uint64_t v54 = v28;
        unint64_t v55 = v30;
        v31._countAndFlagsBits = 58;
        v31._object = (void *)0xE100000000000000;
        String.append(_:)(v31);
        id v53 = [v6 code];
        v32._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
        String.append(_:)(v32);
        swift_bridgeObjectRelease();
        uint64_t v33 = v54;
        unint64_t v34 = v55;
        *(void *)(inited + 96) = &type metadata for String;
        *(void *)(inited + 72) = v33;
        *(void *)(inited + 80) = v34;
        sub_100042894(inited);
        Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        sub_10040E9A0((uint64_t)v51, isa, 21);

        static Logger.odr.getter();
        id v36 = v6;
        uint64_t v37 = Logger.logObject.getter();
        os_log_type_t v38 = static os_log_type_t.error.getter();
        int v39 = v38;
        if (os_log_type_enabled(v37, v38))
        {
          int v50 = v39;
          int64_t v40 = (uint8_t *)swift_slowAlloc();
          uint64_t v49 = swift_slowAlloc();
          uint64_t v54 = v49;
          v48[2] = (char *)&type metadata for Any + 8;
          *(_DWORD *)int64_t v40 = 136446210;
          v48[1] = v40 + 4;
          id v41 = v36;
          id v51 = v36;
          id v42 = v41;
          id v43 = [v41 description];
          uint64_t v44 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          unint64_t v46 = v45;

          id v53 = (id)sub_1000F7290(v44, v46, &v54);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();

          id v36 = v51;
          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v37, (os_log_type_t)v50, "No error mapping for error: %{public}s", v40, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {
        }
        (*(void (**)(char *, uint64_t))(v52 + 8))(v5, v2);
        static String._unconditionallyBridgeFromObjectiveC(_:)();
        id v47 = objc_allocWithZone((Class)NSError);
        NSString v25 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        a1 = [v47 initWithDomain:v25 code:-1 userInfo:0];

        goto LABEL_30;
      }
    }
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    id v24 = objc_allocWithZone((Class)NSError);
    NSString v25 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    a1 = [v24 initWithDomain:v25 code:4994 userInfo:0];

LABEL_30:
  }
  return a1;
}

uint64_t sub_1000D50B8(uint64_t a1)
{
  v2[22] = a1;
  v2[23] = v1;
  uint64_t v3 = type metadata accessor for Logger();
  v2[24] = v3;
  v2[25] = *(void *)(v3 - 8);
  v2[26] = swift_task_alloc();
  return _swift_task_switch(sub_1000D5178, v1, 0);
}

uint64_t sub_1000D5178()
{
  uint64_t v1 = *(void *)(v0[23] + 120);
  v0[27] = v1;
  if (v1)
  {
    swift_bridgeObjectRetain();
    swift_task_dealloc();
    uint64_t v2 = (uint64_t (*)(uint64_t))v0[1];
    return v2(v1);
  }
  else
  {
    id v4 = [self sharedCenter];
    v0[28] = v4;
    v0[2] = v0;
    v0[7] = v0 + 20;
    v0[3] = sub_1000D52F4;
    uint64_t v5 = swift_continuation_init();
    v0[10] = _NSConcreteStackBlock;
    v0[11] = 0x40000000;
    v0[12] = sub_1000D57C0;
    v0[13] = &unk_100515CA0;
    v0[14] = v5;
    [v4 enqueueIdentityProviderAppsQueryWithCompletion:v0 + 10];
    return _swift_continuation_await(v0 + 2);
  }
}

uint64_t sub_1000D52F4()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 48);
  *(void *)(*v0 + 232) = v2;
  uint64_t v3 = *(void *)(v1 + 184);
  if (v2) {
    id v4 = sub_1000D54B0;
  }
  else {
    id v4 = sub_1000D5414;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_1000D5414()
{
  uint64_t v1 = *(void *)(v0 + 184);
  uint64_t v2 = *(void *)(v0 + 160);

  *(void *)(v1 + 120) = v2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v3(v2);
}

uint64_t sub_1000D54B0()
{
  id v27 = v0;
  uint64_t v1 = v0;
  uint64_t v3 = v0 + 22;
  uint64_t v2 = (void *)v0[22];
  id v4 = (void *)v3[6];
  swift_willThrow();

  static Logger.updates.getter();
  id v5 = v2;
  swift_errorRetain();
  id v6 = v5;
  swift_errorRetain();
  id v7 = Logger.logObject.getter();
  os_log_type_t v8 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v23 = v1[25];
    uint64_t v24 = v1[24];
    uint64_t v25 = v1[26];
    uint64_t v9 = (void *)v1[22];
    os_log_t log = v7;
    uint64_t v10 = swift_slowAlloc();
    os_log_type_t type = v8;
    uint64_t v11 = (void *)swift_slowAlloc();
    uint64_t v26 = swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 138412546;
    v1[18] = v9;
    id v12 = v9;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v11 = v9;

    *(_WORD *)(v10 + 12) = 2082;
    swift_getErrorValue();
    uint64_t v13 = Error.localizedDescription.getter();
    v1[21] = sub_1000F7290(v13, v14, &v26);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, log, type, "[%@] Error fetching identity provider apps: %{public}s", (uint8_t *)v10, 0x16u);
    sub_10001644C((uint64_t *)&unk_1005A3AA0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v25, v24);
  }
  else
  {
    uint64_t v15 = v1[25];
    uint64_t v16 = v1[26];
    uint64_t v17 = v1[24];
    uint64_t v18 = (void *)v1[22];

    swift_errorRelease();
    swift_errorRelease();

    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v16, v17);
  }
  swift_errorRelease();
  swift_bridgeObjectRetain();
  swift_task_dealloc();
  char v19 = (uint64_t (*)(void *))v1[1];
  return v19(_swiftEmptyArrayStorage);
}

uint64_t sub_1000D57C0(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = *(void *)(a1 + 32);
  if (a3)
  {
    sub_10001644C(&qword_1005A4E40);
    uint64_t v5 = swift_allocError();
    *id v6 = a3;
    id v7 = a3;
    return _swift_continuation_throwingResumeWithError(v3, v5);
  }
  else
  {
    **(void **)(*(void *)(v3 + 64) + 40) = static Array._unconditionallyBridgeFromObjectiveC(_:)();
    return _swift_continuation_throwingResume(v3);
  }
}

uint64_t sub_1000D5888()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();
  return _swift_defaultActor_deallocate(v0);
}

uint64_t type metadata accessor for TVProviderAndProvisionedApps()
{
  return self;
}

void sub_1000D58EC()
{
  off_1005A6288 = &off_100510BD0;
}

void sub_1000D5900()
{
  off_1005A6290 = &off_100510C10;
}

uint64_t type metadata accessor for AppStoreStyledFileSizeFormatter()
{
  return self;
}

uint64_t sub_1000D59C0(uint64_t a1, uint64_t a2)
{
  id v4 = [objc_allocWithZone((Class)NSNumberFormatter) init];
  [v4 setNumberStyle:1];
  [v4 setFormatterBehavior:1040];
  [v4 setMinimumFractionDigits:a2];
  id v5 = [v4 stringFromNumber:a1];
  if (v5)
  {
    id v6 = v5;
    uint64_t v7 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  }
  else
  {

    return 0;
  }
  return v7;
}

void sub_1000D5A90(double a1)
{
  if (qword_1005A3090 != -1) {
LABEL_17:
  }
    swift_once();
  unint64_t v2 = *((void *)off_1005A6288 + 2);
  if (!v2) {
    goto LABEL_9;
  }
  double v3 = *((double *)off_1005A6288 + 4);
  if (v3 <= a1)
  {
    unint64_t v5 = 0;
    goto LABEL_11;
  }
  if (v2 == 1)
  {
LABEL_9:
    id v7 = [objc_allocWithZone((Class)NSNumber) initWithDouble:a1];
    uint64_t v8 = sub_1000D59C0((uint64_t)v7, 0);
    uint64_t v10 = v9;

    NSString v11 = String._bridgeToObjectiveC()();
    NSString v12 = String._bridgeToObjectiveC()();
    id v13 = sub_1000D5D3C(v11, v12);
LABEL_15:
    id v17 = v13;

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    sub_10001644C(&qword_1005A62C0);
    uint64_t v18 = swift_allocObject();
    *(_OWORD *)(v18 + 16) = xmmword_100488070;
    *(void *)(v18 + 56) = &type metadata for String;
    *(void *)(v18 + 64) = sub_1000D5DA0();
    *(void *)(v18 + 32) = v8;
    *(void *)(v18 + 40) = v10;
    String.init(format:_:)();
    swift_bridgeObjectRelease();
    return;
  }
  uint64_t v4 = 5;
  while (1)
  {
    unint64_t v5 = v4 - 4;
    double v3 = *((double *)off_1005A6288 + v4);
    if (v3 <= a1) {
      break;
    }
    uint64_t v6 = v4 - 3;
    if (__OFADD__(v5, 1))
    {
      __break(1u);
      goto LABEL_17;
    }
    ++v4;
    if (v6 == v2) {
      goto LABEL_9;
    }
  }
LABEL_11:
  if (v5 >= v2)
  {
    __break(1u);
  }
  else if (qword_1005A3098 == -1)
  {
    goto LABEL_13;
  }
  swift_once();
LABEL_13:
  if (v5 < *((void *)off_1005A6290 + 2))
  {
    id v14 = objc_allocWithZone((Class)NSNumber);
    swift_bridgeObjectRetain();
    id v15 = [v14 initWithDouble:round(a1 / v3 * 10.0) / 10.0];
    uint64_t v8 = sub_1000D59C0((uint64_t)v15, 0);
    uint64_t v10 = v16;

    NSString v11 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    NSString v12 = String._bridgeToObjectiveC()();
    id v13 = sub_1000D5D3C(v11, v12);
    goto LABEL_15;
  }
  __break(1u);
}

id sub_1000D5D3C(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = a2;
  unint64_t v5 = ASDLocalizedString();

  return v5;
}

unint64_t sub_1000D5DA0()
{
  unint64_t result = qword_1005A62C8;
  if (!qword_1005A62C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1005A62C8);
  }
  return result;
}

id sub_1000D5DF4()
{
  id result = [objc_allocWithZone((Class)type metadata accessor for MadBridge()) init];
  qword_1005B1540 = (uint64_t)result;
  return result;
}

id sub_1000D5E80(uint64_t a1)
{
  URL._bridgeToObjectiveC()(__stack_chk_guard);
  id v3 = v2;
  id v12 = 0;
  id v4 = [(id)swift_getObjCClassFromMetadata() metadataFromPlistAtURL:v2 error:&v12];

  id v5 = v12;
  if (v4)
  {
    uint64_t v6 = type metadata accessor for URL();
    id v7 = *(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);
    id v8 = v5;
    v7(a1, v6);
  }
  else
  {
    id v9 = v12;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    uint64_t v10 = type metadata accessor for URL();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(a1, v10);
  }
  return v4;
}

uint64_t sub_1000D60C8()
{
  uint64_t v1 = type metadata accessor for Logger();
  v0[3] = v1;
  v0[4] = *(void *)(v1 - 8);
  v0[5] = swift_task_alloc();
  unint64_t v2 = (void *)swift_task_alloc();
  v0[6] = v2;
  *unint64_t v2 = v0;
  v2[1] = sub_1000D61B4;
  return static Restores.discover()();
}

uint64_t sub_1000D61B4()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 56) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return _swift_task_switch(sub_1000D62F0, 0, 0);
  }
  else
  {
    swift_task_dealloc();
    id v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_1000D62F0()
{
  static Logger.restore.getter();
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v1, v2))
  {
    id v3 = (uint8_t *)swift_slowAlloc();
    uint64_t v4 = (void *)swift_slowAlloc();
    *(_DWORD *)id v3 = 138543362;
    swift_errorRetain();
    uint64_t v5 = _swift_stdlib_bridgeErrorToNSError();
    v0[2] = v5;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v4 = v5;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Failed sending discover event with error: %{public}@", v3, 0xCu);
    sub_10001644C((uint64_t *)&unk_1005A3AA0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  (*(void (**)(void, void))(v0[4] + 8))(v0[5], v0[3]);
  swift_task_dealloc();
  uint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t sub_1000D652C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[4] = a4;
  v5[5] = a5;
  uint64_t v8 = type metadata accessor for Logger();
  v5[6] = v8;
  v5[7] = *(void *)(v8 - 8);
  v5[8] = swift_task_alloc();
  id v9 = (void *)swift_task_alloc();
  v5[9] = v9;
  *id v9 = v5;
  v9[1] = sub_1000D662C;
  return static Restores.prioritize(app:)(a4, a5);
}

uint64_t sub_1000D662C()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 80) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return _swift_task_switch(sub_1000D6768, 0, 0);
  }
  else
  {
    swift_task_dealloc();
    id v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_1000D6768()
{
  id v17 = v0;
  static Logger.restore.getter();
  swift_bridgeObjectRetain();
  swift_errorRetain();
  swift_bridgeObjectRetain();
  swift_errorRetain();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v13 = v0[7];
    unint64_t v3 = v0[5];
    uint64_t v14 = v0[6];
    uint64_t v15 = v0[8];
    uint64_t v4 = v0[4];
    uint64_t v5 = swift_slowAlloc();
    id v12 = (void *)swift_slowAlloc();
    uint64_t v16 = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136446466;
    swift_bridgeObjectRetain();
    v0[2] = sub_1000F7290(v4, v3, &v16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v5 + 12) = 2114;
    swift_errorRetain();
    uint64_t v6 = _swift_stdlib_bridgeErrorToNSError();
    v0[3] = v6;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *id v12 = v6;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "[%{public}s] Failed sending prioritize event with error: %{public}@", (uint8_t *)v5, 0x16u);
    sub_10001644C((uint64_t *)&unk_1005A3AA0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v15, v14);
  }
  else
  {
    uint64_t v8 = v0[7];
    uint64_t v7 = v0[8];
    uint64_t v9 = v0[6];
    swift_errorRelease();
    swift_bridgeObjectRelease_n();
    swift_errorRelease();
    swift_errorRelease();

    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
  }
  swift_task_dealloc();
  uint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

uint64_t sub_1000D6A70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[4] = a4;
  v5[5] = a5;
  uint64_t v6 = type metadata accessor for Logger();
  v5[6] = v6;
  v5[7] = *(void *)(v6 - 8);
  v5[8] = swift_task_alloc();
  return _swift_task_switch(sub_1000D6B30, 0, 0);
}

uint64_t sub_1000D6B30()
{
  uint64_t v2 = v0[4];
  uint64_t v1 = v0[5];
  sub_10001644C(&qword_1005A4F70);
  uint64_t v3 = swift_allocObject();
  v0[9] = v3;
  *(_OWORD *)(v3 + 16) = xmmword_100488070;
  *(void *)(v3 + 32) = v2;
  *(void *)(v3 + 40) = v1;
  swift_bridgeObjectRetain();
  uint64_t v4 = (void *)swift_task_alloc();
  v0[10] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_1000D6C0C;
  return static Restores.promote(apps:)(v3);
}

uint64_t sub_1000D6C0C()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 88) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return _swift_task_switch(sub_1000D6D50, 0, 0);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_1000D6D50()
{
  id v17 = v0;
  swift_bridgeObjectRelease();
  static Logger.restore.getter();
  swift_bridgeObjectRetain();
  swift_errorRetain();
  swift_bridgeObjectRetain();
  swift_errorRetain();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v13 = v0[7];
    unint64_t v3 = v0[5];
    uint64_t v14 = v0[6];
    uint64_t v15 = v0[8];
    uint64_t v4 = v0[4];
    uint64_t v5 = swift_slowAlloc();
    id v12 = (void *)swift_slowAlloc();
    uint64_t v16 = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136446466;
    swift_bridgeObjectRetain();
    v0[2] = sub_1000F7290(v4, v3, &v16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v5 + 12) = 2114;
    swift_errorRetain();
    uint64_t v6 = _swift_stdlib_bridgeErrorToNSError();
    v0[3] = v6;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *id v12 = v6;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "[%{public}s] Failed sending promotion event with error: %{public}@", (uint8_t *)v5, 0x16u);
    sub_10001644C((uint64_t *)&unk_1005A3AA0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v15, v14);
  }
  else
  {
    uint64_t v8 = v0[7];
    uint64_t v7 = v0[8];
    uint64_t v9 = v0[6];
    swift_errorRelease();
    swift_bridgeObjectRelease_n();
    swift_errorRelease();
    swift_errorRelease();

    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
  }
  swift_task_dealloc();
  uint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

uint64_t sub_1000D705C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v12 = v11;
  id v13 = a1;
  sub_1000D8450(v10, v12, a4, a5, a6);

  return swift_bridgeObjectRelease();
}

id sub_1000D7130()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MadBridge();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for MadBridge()
{
  return self;
}

id sub_1000D718C(uint64_t a1, uint64_t a2, char a3)
{
  NSString v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v10 = 0;
  id v6 = [v3 initWithBundleIdentifier:v5 allowPlaceholder:a3 & 1 error:&v10];

  if (v6)
  {
    id v7 = v10;
  }
  else
  {
    id v8 = v10;
    _convertNSErrorToError(_:)();

    swift_willThrow();
  }
  return v6;
}

BOOL sub_1000D7268(uint64_t a1, uint64_t a2)
{
  uint64_t v67 = a1;
  uint64_t v3 = type metadata accessor for Logger();
  uint64_t v64 = *(void *)(v3 - 8);
  uint64_t v65 = v3;
  __chkstk_darwin(v3);
  uint64_t v66 = (char *)&v55 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for URL.DirectoryHint();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v62 = v5;
  uint64_t v63 = v6;
  __chkstk_darwin(v5);
  id v8 = (char *)&v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10001644C((uint64_t *)&unk_1005A5670);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v55 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v55 - v13;
  __chkstk_darwin(v15);
  id v17 = (char *)&v55 - v16;
  uint64_t v18 = type metadata accessor for URL();
  uint64_t v19 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  char v21 = (char *)&v55 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  uint64_t v24 = (char *)&v55 - v23;
  id v25 = objc_allocWithZone((Class)LSApplicationRecord);
  swift_bridgeObjectRetain();
  id v26 = sub_1000D718C(v67, a2, 1);
  uint64_t v60 = v14;
  uint64_t v61 = v17;
  uint64_t v27 = v63;
  uint64_t v58 = v21;
  uint64_t v59 = v24;
  uint64_t v67 = v18;
  if (([v26 isPlaceholder] & 1) == 0)
  {

    return 0;
  }
  id v56 = v26;
  id v28 = [v26 bundleContainerURL];
  if (v28)
  {
    unint64_t v29 = v28;
    static URL._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v30 = v19;
    Swift::String v31 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v19 + 56);
    Swift::String v32 = v11;
    uint64_t v33 = 0;
  }
  else
  {
    uint64_t v30 = v19;
    Swift::String v31 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v19 + 56);
    Swift::String v32 = v11;
    uint64_t v33 = 1;
  }
  uint64_t v34 = v67;
  uint64_t v57 = v31;
  v31(v32, v33, 1, v67);
  uint64_t v35 = v27;
  uint64_t v36 = (uint64_t)v60;
  sub_1000D8A28((uint64_t)v11, (uint64_t)v60);
  uint64_t v37 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v30 + 48);
  int v38 = v37(v36, 1, v34);
  uint64_t v39 = v62;
  if (v38 == 1)
  {
    sub_100016714(v36, (uint64_t *)&unk_1005A5670);
    uint64_t v40 = (uint64_t)v61;
    v57(v61, 1, 1, v34);
LABEL_9:

    sub_100016714(v40, (uint64_t *)&unk_1005A5670);
    return 0;
  }
  unint64_t v68 = 0xD000000000000014;
  unint64_t v69 = 0x800000010044FAA0;
  (*(void (**)(char *, void, uint64_t))(v35 + 104))(v8, enum case for URL.DirectoryHint.inferFromPath(_:), v62);
  sub_1000164E0();
  uint64_t v41 = v36;
  uint64_t v42 = (uint64_t)v61;
  URL.appending<A>(component:directoryHint:)();
  uint64_t v43 = v67;
  uint64_t v44 = v39;
  uint64_t v40 = v42;
  (*(void (**)(char *, uint64_t))(v35 + 8))(v8, v44);
  swift_bridgeObjectRelease();
  unint64_t v45 = *(void (**)(uint64_t, uint64_t))(v30 + 8);
  v45(v41, v43);
  v57((char *)v40, 0, 1, v43);
  if (v37(v40, 1, v43) == 1) {
    goto LABEL_9;
  }
  char v48 = v59;
  (*(void (**)(char *, uint64_t, uint64_t))(v30 + 32))(v59, v40, v43);
  sub_100018D68(0, (unint64_t *)&unk_1005A6360);
  uint64_t v49 = (uint64_t)v58;
  (*(void (**)(char *, char *, uint64_t))(v30 + 16))(v58, v48, v43);
  id v50 = sub_1000D5E80(v49);
  id v51 = [v50 distributorInfo];
  if (!v51)
  {
    v45((uint64_t)v48, v67);
    goto LABEL_16;
  }
  uint64_t v52 = v51;
  if ([v51 distributorIsFirstPartyApple])
  {
    v45((uint64_t)v48, v67);

LABEL_16:
    return 0;
  }
  id v53 = [v52 distributorID];
  BOOL v46 = v53 != 0;
  if (v53)
  {
    uint64_t v54 = v53;
    static String._unconditionallyBridgeFromObjectiveC(_:)();
  }
  v45((uint64_t)v48, v67);
  swift_bridgeObjectRelease();
  return v46;
}

uint64_t sub_1000D7A04(unint64_t a1, void *a2)
{
  id v49 = a2;
  uint64_t v50 = type metadata accessor for Logger();
  uint64_t v3 = *(void (***)(char *, uint64_t))(v50 - 8);
  __chkstk_darwin(v50);
  uint64_t v5 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v8 = (char *)&v39 - v7;
  if (!(a1 >> 62))
  {
    uint64_t v9 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v9) {
      goto LABEL_3;
    }
LABEL_20:
    return swift_bridgeObjectRelease();
  }
LABEL_19:
  swift_bridgeObjectRetain();
  uint64_t v9 = _CocoaArrayWrapper.endIndex.getter();
  if (!v9) {
    goto LABEL_20;
  }
LABEL_3:
  uint64_t v40 = v5;
  unint64_t v48 = a1 & 0xC000000000000001;
  uint64_t v11 = v3 + 1;
  uint64_t v12 = 4;
  *(void *)&long long v10 = 138412546;
  long long v43 = v10;
  uint64_t v41 = v8;
  uint64_t v42 = (char *)&type metadata for Any + 8;
  uint64_t v44 = v3 + 1;
  uint64_t v47 = v9;
  while (1)
  {
    if (v48) {
      uint64_t v13 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      uint64_t v13 = (char *)*(id *)(a1 + 8 * v12);
    }
    uint64_t v3 = (void (**)(char *, uint64_t))v13;
    uint64_t v5 = (char *)(v12 - 3);
    if (__OFADD__(v12 - 4, 1))
    {
      __break(1u);
      goto LABEL_19;
    }
    id v52 = 0;
    if (![v13 setAppAssetPromiseResponsibleClient:28 error:&v52]) {
      break;
    }
    uint64_t v51 = v12 - 3;
    id v14 = v52;
    static Logger.restore.getter();
    uint64_t v15 = v3;
    id v16 = v49;
    id v17 = v49;
    uint64_t v18 = v8;
    uint64_t v19 = Logger.logObject.getter();
    os_log_type_t v20 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v19, v20))
    {
      uint64_t v21 = swift_slowAlloc();
      uint64_t v22 = (void *)swift_slowAlloc();
      unint64_t v45 = v22;
      BOOL v46 = (void *)swift_slowAlloc();
      id v52 = v46;
      *(_DWORD *)uint64_t v21 = v43;
      *(void *)(v21 + 4) = v17;
      *uint64_t v22 = v16;
      *(_WORD *)(v21 + 12) = 2082;
      id v23 = [v15 identity];
      unint64_t v24 = a1;
      id v25 = [v23 bundleID];

      uint64_t v26 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v28 = v27;

      a1 = v24;
      *(void *)(v21 + 14) = sub_1000F7290(v26, v28, (uint64_t *)&v52);

      uint64_t v29 = v50;
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v19, v20, "[%@] [%{public}s] Error transferring coordinator asset promise", (uint8_t *)v21, 0x16u);
      sub_10001644C((uint64_t *)&unk_1005A3AA0);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      uint64_t v11 = v44;
      swift_slowDealloc();

      id v8 = v41;
      (*v11)(v41, v29);
    }
    else
    {

      (*v11)(v18, v50);
      id v8 = v18;
    }
    ++v12;
    if (v51 == v47) {
      return swift_bridgeObjectRelease();
    }
  }
  id v30 = v52;
  swift_bridgeObjectRelease();
  _convertNSErrorToError(_:)();

  swift_willThrow();
  Swift::String v31 = v40;
  static Logger.restore.getter();
  swift_errorRetain();
  swift_errorRetain();
  Swift::String v32 = Logger.logObject.getter();
  os_log_type_t v33 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v32, v33))
  {
    uint64_t v34 = (uint8_t *)swift_slowAlloc();
    uint64_t v35 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v34 = 138543362;
    swift_errorRetain();
    uint64_t v36 = v11;
    uint64_t v37 = (void *)_swift_stdlib_bridgeErrorToNSError();
    id v52 = v37;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v35 = v37;
    uint64_t v11 = v36;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v32, v33, "Error transferring coordinator asset promise: %{public}@", v34, 0xCu);
    sub_10001644C((uint64_t *)&unk_1005A3AA0);
    swift_arrayDestroy();
    Swift::String v31 = v40;
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  return ((uint64_t (*)(char *, uint64_t))*v11)(v31, v50);
}

void sub_1000D8214(void *a1)
{
  uint64_t v2 = sub_10001644C((uint64_t *)&unk_1005A6330);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  UUID.init()();
  uint64_t v5 = type metadata accessor for UUID();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 0, 1, v5);
  id v6 = [a1 identity];
  id v7 = [v6 bundleID];

  uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v10 = v9;

  uint64_t v11 = sub_100071078(0, 0, (uint64_t)v4, v8, v10, 0, 1);
  self;
  uint64_t v12 = swift_dynamicCastObjCClass();
  if (v12)
  {
    uint64_t v13 = (void *)v12;
    id v14 = a1;
    if ([v13 conformsToProtocol:&OBJC_PROTOCOL___IXCoordinatorWithAppAssetPromise])
    {
      id v23 = 0;
      id v15 = [v13 appAssetPromiseResponsibleClientWithError:&v23];
      id v16 = v23;
      if (v15 == (id)1)
      {
        sub_10001644C(&qword_1005A43D0);
        uint64_t inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_100488A80;
        *(void *)(inited + 32) = v13;
        id v23 = (id)inited;
        id v18 = v16;
        specialized Array._endMutation()();
        unint64_t v19 = (unint64_t)v23;
        os_log_type_t v20 = v14;
        sub_1000D7A04(v19, v11);
        swift_bridgeObjectRelease();
        -[MadBridge sendDiscoverEvent]_0();
      }
      else
      {
        id v21 = v23;
      }
    }
  }
  else
  {
    id v14 = v11;
  }
}

uint64_t sub_1000D8450(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8 = sub_10001644C(&qword_1005A4640);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for TaskPriority();
  uint64_t v12 = *(void *)(v11 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v10, 1, 1, v11);
  uint64_t v13 = (void *)swift_allocObject();
  v13[2] = 0;
  v13[3] = 0;
  v13[4] = a1;
  v13[5] = a2;
  LODWORD(a1) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11);
  swift_bridgeObjectRetain();
  if (a1 == 1)
  {
    sub_100016714((uint64_t)v10, &qword_1005A4640);
    uint64_t v14 = 0;
    uint64_t v15 = 0;
  }
  else
  {
    TaskPriority.rawValue.getter();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v10, v11);
    if (v13[2])
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v14 = dispatch thunk of Actor.unownedExecutor.getter();
      uint64_t v15 = v16;
      swift_unknownObjectRelease();
    }
    else
    {
      uint64_t v14 = 0;
      uint64_t v15 = 0;
    }
  }
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = a5;
  *(void *)(v17 + 24) = v13;
  if (v15 | v14)
  {
    v19[0] = 0;
    v19[1] = 0;
    v19[2] = v14;
    v19[3] = v15;
  }
  swift_task_create();
  return swift_release();
}

uint64_t sub_1000D8690(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_1000184D8;
  return sub_1000D6A70(a1, v4, v5, v7, v6);
}

uint64_t sub_1000D8754()
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1000D8794(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_100005040;
  return sub_1000D652C(a1, v4, v5, v7, v6);
}

uint64_t sub_1000D8854()
{
  swift_release();
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000D888C(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_100005040;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_1005A6998 + dword_1005A6998);
  return v6(a1, v4);
}

uint64_t sub_1000D8944()
{
  swift_unknownObjectRelease();
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000D897C()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = sub_1000184D8;
  return sub_1000D60C8();
}

uint64_t sub_1000D8A28(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10001644C((uint64_t *)&unk_1005A5670);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000D8A98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t ObjectType = swift_getObjectType();
  v4[43] = a4;
  v4[44] = ObjectType;
  v4[41] = a2;
  v4[42] = a3;
  v4[40] = a1;
  uint64_t v10 = type metadata accessor for Logger();
  v4[45] = v10;
  v4[46] = *(void *)(v10 - 8);
  v4[47] = swift_task_alloc();
  v4[48] = swift_task_alloc();
  uint64_t v11 = type metadata accessor for ContinuousClock.Instant();
  v4[49] = v11;
  v4[50] = *(void *)(v11 - 8);
  v4[51] = swift_task_alloc();
  v4[52] = swift_task_alloc();
  uint64_t v12 = type metadata accessor for ContinuousClock();
  v4[53] = v12;
  v4[54] = *(void *)(v12 - 8);
  v4[55] = swift_task_alloc();
  return _swift_task_switch(sub_1000D8C60, 0, 0);
}

uint64_t sub_1000D8C60()
{
  uint64_t v83 = v0;
  id v1 = objc_msgSend(*(id *)(v0 + 320), "ams_accountID");
  *(void *)(v0 + 448) = v1;
  if (!v1)
  {
    unint64_t v28 = *(void **)(v0 + 328);
    static Logger.appUsage.getter();
    id v29 = v28;
    swift_bridgeObjectRetain_n();
    id v30 = v29;
    Swift::String v31 = Logger.logObject.getter();
    os_log_type_t v32 = static os_log_type_t.default.getter();
    BOOL v33 = os_log_type_enabled(v31, v32);
    uint64_t v34 = *(void *)(v0 + 368);
    if (v33)
    {
      unint64_t v35 = *(void *)(v0 + 344);
      id v77 = *(id *)(v0 + 336);
      uint64_t v36 = *(void **)(v0 + 328);
      aBlock = *(void **)(v0 + 376);
      uint64_t v79 = *(void *)(v0 + 360);
      uint64_t v37 = swift_slowAlloc();
      uint64_t v74 = (void *)swift_slowAlloc();
      uint64_t v82 = swift_slowAlloc();
      *(_DWORD *)uint64_t v37 = 136446722;
      uint64_t v38 = _typeName(_:qualified:)();
      *(void *)(v0 + 248) = sub_1000F7290(v38, v39, &v82);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v37 + 12) = 2112;
      *(void *)(v0 + 304) = v36;
      id v40 = v36;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v74 = v36;

      *(_WORD *)(v37 + 22) = 2082;
      swift_bridgeObjectRetain();
      *(void *)(v0 + 288) = sub_1000F7290((uint64_t)v77, v35, &v82);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v31, v32, "[%{public}s/%@][%{public}s] Skipping billingStorefront because the account identity could not be determined", (uint8_t *)v37, 0x20u);
      sub_10001644C((uint64_t *)&unk_1005A3AA0);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(void *, uint64_t))(v34 + 8))(aBlock, v79);
    }
    else
    {
      id v52 = *(void **)(v0 + 328);
      uint64_t v53 = *(void *)(v0 + 376);
      uint64_t v54 = *(void *)(v0 + 360);

      swift_bridgeObjectRelease_n();
      (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v53, v54);
    }
    uint64_t v55 = 0;
    uint64_t v56 = 0;
LABEL_17:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v66 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
    return v66(v55, v56);
  }
  id v2 = v1;
  uint64_t v4 = *(void *)(v0 + 344);
  uint64_t v3 = *(void *)(v0 + 352);
  uint64_t v5 = *(void **)(v0 + 328);
  uint64_t v6 = *(void *)(v0 + 336);
  uint64_t v7 = swift_allocObject();
  *(void *)(v0 + 456) = v7;
  *(void *)(v7 + 16) = 0;
  *(void *)(v7 + 24) = 0;
  id v76 = [self sharedInstance];
  *(void *)(v0 + 464) = v76;
  uint64_t v8 = swift_allocObject();
  *(void *)(v0 + 472) = v8;
  *(unsigned char *)(v8 + 16) = 0;
  uint64_t v9 = (void *)swift_allocObject();
  *(void *)(v0 + 480) = v9;
  _OWORD v9[2] = v5;
  v9[3] = v6;
  v9[4] = v4;
  v9[5] = v8;
  v9[6] = v7;
  v9[7] = v3;
  *(void *)(v0 + 96) = sub_1000DD7BC;
  *(void *)(v0 + 104) = v9;
  *(void *)(v0 + 64) = _NSConcreteStackBlock;
  *(void *)(v0 + 72) = 1107296256;
  *(void *)(v0 + 80) = sub_1000DB018;
  *(void *)(v0 + 88) = &unk_100515EC0;
  uint64_t v10 = _Block_copy((const void *)(v0 + 64));
  id v11 = v5;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_release();
  id v12 = [v76 stringForKey:5 accountID:v2 updateBlock:v10];
  *(void *)(v0 + 488) = v12;
  _Block_release(v10);
  *(void *)(v0 + 48) = sub_1000DD7BC;
  *(void *)(v0 + 56) = v9;
  *(void *)(v0 + 16) = _NSConcreteStackBlock;
  *(void *)(v0 + 24) = 1107296256;
  *(void *)(v0 + 32) = sub_1000DB018;
  *(void *)(v0 + 40) = &unk_100515EE8;
  uint64_t v13 = _Block_copy((const void *)(v0 + 16));
  swift_retain();
  swift_release();
  [v12 addFinishBlock:v13];
  _Block_release(v13);
  *(void *)(v0 + 272) = 0;
  swift_beginAccess();
  if (*(unsigned char *)(v8 + 16))
  {
    uint64_t v14 = *(void **)(v0 + 328);
    static Logger.appUsage.getter();
    id v15 = v14;
    swift_bridgeObjectRetain_n();
    swift_retain_n();
    id v16 = v15;
    uint64_t v17 = Logger.logObject.getter();
    os_log_type_t v18 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v17, v18))
    {
      os_log_type_t v68 = v18;
      uint64_t v71 = *(void *)(v0 + 456);
      unint64_t v19 = *(void *)(v0 + 344);
      os_log_type_t v20 = *(void **)(v0 + 328);
      uint64_t v69 = *(void *)(v0 + 336);
      uint64_t v21 = swift_slowAlloc();
      uint64_t v22 = (void *)swift_slowAlloc();
      uint64_t v82 = swift_slowAlloc();
      *(_DWORD *)uint64_t v21 = 136447234;
      uint64_t v23 = _typeName(_:qualified:)();
      *(void *)(v0 + 312) = sub_1000F7290(v23, v24, &v82);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v21 + 12) = 2112;
      *(void *)(v0 + 256) = v20;
      id v25 = v20;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v22 = v20;

      *(_WORD *)(v21 + 22) = 2082;
      swift_bridgeObjectRetain();
      *(void *)(v0 + 264) = sub_1000F7290(v69, v19, &v82);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v21 + 32) = 2080;
      swift_beginAccess();
      if (*(void *)(v71 + 24))
      {
        uint64_t v26 = *(void *)(*(void *)(v0 + 456) + 16);
        unint64_t v27 = *(void *)(v71 + 24);
      }
      else
      {
        uint64_t v26 = 0;
        unint64_t v27 = 0xE000000000000000;
      }
      uint64_t v75 = *(void **)(v0 + 488);
      uint64_t v70 = *(void **)(v0 + 448);
      uint64_t v80 = *(void *)(v0 + 384);
      uint64_t v64 = *(void *)(v0 + 368);
      uint64_t v72 = *(void **)(v0 + 464);
      uint64_t v73 = *(void *)(v0 + 360);
      swift_bridgeObjectRetain();
      *(void *)(v0 + 280) = sub_1000F7290(v26, v27, &v82);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v21 + 42) = 2048;
      swift_beginAccess();
      *(void *)(v0 + 296) = *(void *)(v0 + 272);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v17, v68, "[%{public}s/%@][%{public}s] Returning billingStorefront: %s sleepCount: %ld", (uint8_t *)v21, 0x34u);
      sub_10001644C((uint64_t *)&unk_1005A3AA0);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
      swift_release();

      (*(void (**)(uint64_t, uint64_t))(v64 + 8))(v80, v73);
    }
    else
    {
      uint64_t v57 = *(void **)(v0 + 488);
      uint64_t v58 = *(void **)(v0 + 464);
      uint64_t v59 = *(void **)(v0 + 448);
      uint64_t v81 = *(void *)(v0 + 384);
      uint64_t v60 = v17;
      uint64_t v62 = *(void *)(v0 + 360);
      uint64_t v61 = *(void *)(v0 + 368);
      uint64_t v63 = *(void **)(v0 + 328);

      swift_release_n();
      swift_bridgeObjectRelease_n();

      swift_release();
      (*(void (**)(uint64_t, uint64_t))(v61 + 8))(v81, v62);
    }
    uint64_t v65 = *(void *)(v0 + 456);
    swift_beginAccess();
    uint64_t v55 = *(void *)(v65 + 16);
    uint64_t v56 = *(void *)(v65 + 24);
    swift_bridgeObjectRetain();
    swift_release();
    swift_release();
    goto LABEL_17;
  }
  uint64_t v42 = *(void *)(v0 + 400);
  uint64_t v41 = *(void *)(v0 + 408);
  uint64_t v43 = *(void *)(v0 + 392);
  uint64_t v44 = static Duration.seconds(_:)();
  uint64_t v46 = v45;
  ContinuousClock.init()();
  *(void *)(v0 + 232) = v44;
  *(void *)(v0 + 240) = v46;
  *(void *)(v0 + 216) = 0;
  *(void *)(v0 + 208) = 0;
  *(unsigned char *)(v0 + 224) = 1;
  uint64_t v47 = sub_1000672F4(&qword_1005A48C0, (void (*)(uint64_t))&type metadata accessor for ContinuousClock);
  dispatch thunk of Clock.now.getter();
  sub_1000672F4(&qword_1005A4910, (void (*)(uint64_t))&type metadata accessor for ContinuousClock.Instant);
  dispatch thunk of InstantProtocol.advanced(by:)();
  unint64_t v48 = *(void (**)(uint64_t, uint64_t))(v42 + 8);
  *(void *)(v0 + 496) = v48;
  *(void *)(v0 + 504) = (v42 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v48(v41, v43);
  id v49 = (void *)swift_task_alloc();
  *(void *)(v0 + 512) = v49;
  *id v49 = v0;
  v49[1] = sub_1000D978C;
  uint64_t v51 = *(void *)(v0 + 416);
  uint64_t v50 = *(void *)(v0 + 424);
  return dispatch thunk of Clock.sleep(until:tolerance:)(v51, v0 + 208, v50, v47);
}

uint64_t sub_1000D978C()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 520) = v0;
  swift_task_dealloc();
  if (v0)
  {
    (*(void (**)(void, void))(v2 + 496))(*(void *)(v2 + 416), *(void *)(v2 + 392));
    uint64_t v3 = sub_1000D9F4C;
  }
  else
  {
    uint64_t v5 = *(void *)(v2 + 432);
    uint64_t v4 = *(void *)(v2 + 440);
    uint64_t v6 = *(void *)(v2 + 424);
    (*(void (**)(void, void))(v2 + 496))(*(void *)(v2 + 416), *(void *)(v2 + 392));
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
    uint64_t v3 = sub_1000D98E4;
  }
  return _swift_task_switch(v3, 0, 0);
}

uint64_t sub_1000D98E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v56 = v4;
  uint64_t v5 = *(void *)(v4 + 272);
  BOOL v6 = __OFADD__(v5, 1);
  uint64_t v7 = v5 + 1;
  if (v6)
  {
    __break(1u);
    return dispatch thunk of Clock.sleep(until:tolerance:)(a1, a2, a3, a4);
  }
  uint64_t v8 = *(void *)(v4 + 472);
  *(void *)(v4 + 272) = v7;
  if ((*(unsigned char *)(v8 + 16) & 1) == 0 && v7 < 10)
  {
    uint64_t v10 = *(void *)(v4 + 400);
    uint64_t v9 = *(void *)(v4 + 408);
    uint64_t v11 = *(void *)(v4 + 392);
    uint64_t v12 = static Duration.seconds(_:)();
    uint64_t v14 = v13;
    ContinuousClock.init()();
    *(void *)(v4 + 232) = v12;
    *(void *)(v4 + 240) = v14;
    *(void *)(v4 + 216) = 0;
    *(void *)(v4 + 208) = 0;
    *(unsigned char *)(v4 + 224) = 1;
    uint64_t v15 = sub_1000672F4(&qword_1005A48C0, (void (*)(uint64_t))&type metadata accessor for ContinuousClock);
    dispatch thunk of Clock.now.getter();
    sub_1000672F4(&qword_1005A4910, (void (*)(uint64_t))&type metadata accessor for ContinuousClock.Instant);
    dispatch thunk of InstantProtocol.advanced(by:)();
    id v16 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
    *(void *)(v4 + 496) = v16;
    *(void *)(v4 + 504) = (v10 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    v16(v9, v11);
    uint64_t v17 = (void *)swift_task_alloc();
    *(void *)(v4 + 512) = v17;
    *uint64_t v17 = v4;
    v17[1] = sub_1000D978C;
    a3 = *(void *)(v4 + 424);
    a1 = *(void *)(v4 + 416);
    a2 = v4 + 208;
    a4 = v15;
    return dispatch thunk of Clock.sleep(until:tolerance:)(a1, a2, a3, a4);
  }
  os_log_type_t v18 = *(void **)(v4 + 328);
  static Logger.appUsage.getter();
  id v19 = v18;
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  id v20 = v19;
  uint64_t v21 = Logger.logObject.getter();
  os_log_type_t v22 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v21, v22))
  {
    os_log_type_t v53 = v22;
    uint64_t v51 = v21;
    uint64_t v23 = *(void *)(v4 + 456);
    unint64_t v24 = *(void *)(v4 + 344);
    id v25 = *(void **)(v4 + 328);
    uint64_t v48 = *(void *)(v4 + 336);
    uint64_t v26 = swift_slowAlloc();
    unint64_t v27 = (void *)swift_slowAlloc();
    uint64_t v55 = swift_slowAlloc();
    *(_DWORD *)uint64_t v26 = 136447234;
    uint64_t v28 = _typeName(_:qualified:)();
    *(void *)(v4 + 312) = sub_1000F7290(v28, v29, &v55);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v26 + 12) = 2112;
    *(void *)(v4 + 256) = v25;
    id v30 = v25;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *unint64_t v27 = v25;

    *(_WORD *)(v26 + 22) = 2082;
    swift_bridgeObjectRetain();
    *(void *)(v4 + 264) = sub_1000F7290(v48, v24, &v55);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v26 + 32) = 2080;
    swift_beginAccess();
    if (*(void *)(v23 + 24))
    {
      uint64_t v31 = *(void *)(*(void *)(v4 + 456) + 16);
      unint64_t v32 = *(void *)(v23 + 24);
    }
    else
    {
      uint64_t v31 = 0;
      unint64_t v32 = 0xE000000000000000;
    }
    unint64_t v39 = v51;
    id v40 = *(void **)(v4 + 488);
    uint64_t v47 = *(void **)(v4 + 464);
    id v49 = *(void **)(v4 + 448);
    uint64_t v52 = *(void *)(v4 + 384);
    uint64_t v41 = *(void *)(v4 + 368);
    uint64_t v50 = *(void *)(v4 + 360);
    swift_bridgeObjectRetain();
    *(void *)(v4 + 280) = sub_1000F7290(v31, v32, &v55);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_release_n();
    *(_WORD *)(v26 + 42) = 2048;
    swift_beginAccess();
    *(void *)(v4 + 296) = *(void *)(v4 + 272);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v39, v53, "[%{public}s/%@][%{public}s] Returning billingStorefront: %s sleepCount: %ld", (uint8_t *)v26, 0x34u);
    sub_10001644C((uint64_t *)&unk_1005A3AA0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v52, v50);
  }
  else
  {
    BOOL v33 = *(void **)(v4 + 488);
    uint64_t v34 = *(void **)(v4 + 464);
    unint64_t v35 = *(void **)(v4 + 448);
    uint64_t v54 = *(void *)(v4 + 384);
    uint64_t v36 = *(void *)(v4 + 360);
    uint64_t v37 = *(void *)(v4 + 368);
    uint64_t v38 = *(void **)(v4 + 328);
    swift_release();

    swift_bridgeObjectRelease_n();
    swift_release_n();

    (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v54, v36);
  }
  uint64_t v42 = *(void *)(v4 + 456);
  swift_beginAccess();
  uint64_t v43 = *(void *)(v42 + 16);
  uint64_t v44 = *(void *)(v42 + 24);
  swift_bridgeObjectRetain();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v45 = *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8);
  return v45(v43, v44);
}

uint64_t sub_1000D9F4C()
{
  uint64_t v37 = v0;
  (*(void (**)(void, void))(v0[54] + 8))(v0[55], v0[53]);
  swift_errorRelease();
  id v1 = (void *)v0[41];
  static Logger.appUsage.getter();
  id v2 = v1;
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  id v3 = v2;
  uint64_t v4 = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v4, v5))
  {
    os_log_type_t v34 = v5;
    uint64_t v31 = v0[57];
    unint64_t v6 = v0[43];
    uint64_t v7 = (void *)v0[41];
    uint64_t v29 = v0[42];
    uint64_t v8 = swift_slowAlloc();
    uint64_t v9 = (void *)swift_slowAlloc();
    uint64_t v36 = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 136447234;
    uint64_t v10 = _typeName(_:qualified:)();
    v0[39] = sub_1000F7290(v10, v11, &v36);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v8 + 12) = 2112;
    v0[32] = v7;
    id v12 = v7;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v9 = v7;

    *(_WORD *)(v8 + 22) = 2082;
    swift_bridgeObjectRetain();
    v0[33] = sub_1000F7290(v29, v6, &v36);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v8 + 32) = 2080;
    swift_beginAccess();
    if (*(void *)(v31 + 24))
    {
      uint64_t v13 = *(void *)(v0[57] + 16);
      unint64_t v14 = *(void *)(v31 + 24);
    }
    else
    {
      uint64_t v13 = 0;
      unint64_t v14 = 0xE000000000000000;
    }
    uint64_t v21 = (void *)v0[61];
    uint64_t v28 = (void *)v0[58];
    id v30 = (void *)v0[56];
    uint64_t v22 = v0[46];
    uint64_t v32 = v0[45];
    uint64_t v33 = v0[48];
    swift_bridgeObjectRetain();
    v0[35] = sub_1000F7290(v13, v14, &v36);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_release_n();
    *(_WORD *)(v8 + 42) = 2048;
    swift_beginAccess();
    v0[37] = v0[34];
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v4, v34, "[%{public}s/%@][%{public}s] Returning billingStorefront: %s sleepCount: %ld", (uint8_t *)v8, 0x34u);
    sub_10001644C((uint64_t *)&unk_1005A3AA0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v33, v32);
  }
  else
  {
    uint64_t v15 = (void *)v0[61];
    id v16 = (void *)v0[58];
    uint64_t v17 = (void *)v0[56];
    uint64_t v35 = v0[48];
    uint64_t v18 = v0[45];
    uint64_t v19 = v0[46];
    id v20 = (void *)v0[41];
    swift_release();

    swift_bridgeObjectRelease_n();
    swift_release_n();

    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v35, v18);
  }
  uint64_t v23 = v0[57];
  swift_beginAccess();
  uint64_t v24 = *(void *)(v23 + 16);
  uint64_t v25 = *(void *)(v23 + 24);
  swift_bridgeObjectRetain();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v26 = (uint64_t (*)(uint64_t, uint64_t))v0[1];
  return v26(v24, v25);
}

uint64_t sub_1000DA428(void *a1, uint64_t a2, void *a3, uint64_t a4, unint64_t a5, uint64_t a6, uint64_t a7, NSObject *a8)
{
  uint64_t v95 = a7;
  os_log_t v96 = a8;
  uint64_t v97 = a4;
  uint64_t v13 = type metadata accessor for Date();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  id v16 = (char *)&v89 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_10001644C((uint64_t *)&unk_1005A4E20);
  __chkstk_darwin(v17 - 8);
  uint64_t v19 = (char *)&v89 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = type metadata accessor for Logger();
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v98 = v20;
  uint64_t v99 = v21;
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v23 = __chkstk_darwin(v22);
  __chkstk_darwin(v23);
  if (a2)
  {
    unint64_t v27 = (char *)&v89 - v25;
    swift_errorRetain();
    static Logger.appUsage.getter();
    swift_errorRetain();
    id v28 = a3;
    swift_bridgeObjectRetain();
    swift_errorRetain();
    id v29 = v28;
    swift_bridgeObjectRetain();
    id v30 = Logger.logObject.getter();
    os_log_type_t v31 = static os_log_type_t.error.getter();
    int v32 = v31;
    unint64_t v33 = a5;
    if (os_log_type_enabled(v30, v31))
    {
      uint64_t v34 = swift_slowAlloc();
      uint64_t v35 = (void *)swift_slowAlloc();
      uint64_t v95 = swift_slowAlloc();
      v100[0] = v95;
      *(_DWORD *)uint64_t v34 = 136446978;
      LODWORD(v94) = v32;
      uint64_t v36 = _typeName(_:qualified:)();
      v101[0] = sub_1000F7290(v36, v37, v100);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v34 + 12) = 2112;
      v101[0] = (uint64_t)v29;
      id v38 = v29;
      os_log_t v96 = v30;
      id v39 = v38;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v35 = v29;

      *(_WORD *)(v34 + 22) = 2082;
      swift_bridgeObjectRetain();
      v101[0] = sub_1000F7290(v97, v33, v100);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v34 + 32) = 2112;
      swift_errorRetain();
      uint64_t v40 = _swift_stdlib_bridgeErrorToNSError();
      v101[0] = v40;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      v35[1] = v40;
      swift_errorRelease();
      swift_errorRelease();
      os_log_t v41 = v96;
      _os_log_impl((void *)&_mh_execute_header, v96, (os_log_type_t)v94, "[%{public}s/%@][%{public}s] Encountered AMSAccountCachedServerData update service error: %@", (uint8_t *)v34, 0x2Au);
      sub_10001644C((uint64_t *)&unk_1005A3AA0);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();
      swift_bridgeObjectRelease_n();

      swift_errorRelease();
      swift_errorRelease();
    }
    return (*(uint64_t (**)(char *, uint64_t))(v99 + 8))(v27, v98);
  }
  if (!a1) {
    goto LABEL_14;
  }
  uint64_t v42 = v24;
  unint64_t v94 = v26;
  id v43 = [(id)swift_unknownObjectRetain() expiration];
  if (!v43)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56))(v19, 1, 1, v13);
    goto LABEL_13;
  }
  uint64_t v44 = v43;
  static Date._unconditionallyBridgeFromObjectiveC(_:)();

  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v19, v16, v13);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v19, 0, 1, v13);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v19, 1, v13) == 1)
  {
LABEL_13:
    swift_unknownObjectRelease();
    sub_1000214BC((uint64_t)v19);
    uint64_t v24 = v42;
LABEL_14:
    uint64_t v69 = v24;
    static Logger.appUsage.getter();
    id v70 = a3;
    swift_bridgeObjectRetain_n();
    id v71 = v70;
    uint64_t v72 = Logger.logObject.getter();
    os_log_type_t v73 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v72, v73))
    {
      uint64_t v74 = swift_slowAlloc();
      unint64_t v94 = (void *)swift_slowAlloc();
      uint64_t v95 = swift_slowAlloc();
      v100[0] = v95;
      *(_DWORD *)uint64_t v74 = 136446722;
      uint64_t v75 = _typeName(_:qualified:)();
      v101[0] = sub_1000F7290(v75, v76, v100);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v74 + 12) = 2112;
      v101[0] = (uint64_t)v71;
      id v77 = v71;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *unint64_t v94 = v71;

      *(_WORD *)(v74 + 22) = 2082;
      swift_bridgeObjectRetain();
      v101[0] = sub_1000F7290(v97, a5, v100);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v72, v73, "[%{public}s/%@][%{public}s] Updated with invalid value", (uint8_t *)v74, 0x20u);
      sub_10001644C((uint64_t *)&unk_1005A3AA0);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    return (*(uint64_t (**)(uint64_t, uint64_t))(v99 + 8))(v69, v98);
  }
  uint64_t v45 = v95;
  uint64_t v92 = v95 + 16;
  uint64_t v93 = (unsigned char *)(a6 + 16);
  sub_1000214BC((uint64_t)v19);
  uint64_t v46 = v94;
  static Logger.appUsage.getter();
  swift_unknownObjectRetain_n();
  id v47 = a3;
  unint64_t v48 = a5;
  swift_bridgeObjectRetain_n();
  id v49 = v47;
  uint64_t v50 = a1;
  uint64_t v51 = Logger.logObject.getter();
  int v52 = static os_log_type_t.default.getter();
  os_log_type_t v53 = &selRef_sinf;
  if (os_log_type_enabled(v51, (os_log_type_t)v52))
  {
    os_log_t v89 = v51;
    int v90 = v52;
    uint64_t v54 = swift_slowAlloc();
    uint64_t v55 = swift_slowAlloc();
    uint64_t v91 = swift_slowAlloc();
    v101[0] = v91;
    *(_DWORD *)uint64_t v54 = 136447490;
    uint64_t v56 = _typeName(_:qualified:)();
    v100[0] = sub_1000F7290(v56, v57, v101);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v54 + 12) = 2112;
    v100[0] = (uint64_t)v49;
    id v58 = v49;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    os_log_t v96 = v55;
    v55->Class isa = (Class)v49;

    *(_WORD *)(v54 + 22) = 2082;
    swift_bridgeObjectRetain();
    v100[0] = sub_1000F7290(v97, v48, v101);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v54 + 32) = 1024;
    unsigned int v59 = [v50 isStale];
    swift_unknownObjectRelease();
    LODWORD(v100[0]) = v59;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_unknownObjectRelease();
    *(_WORD *)(v54 + 38) = 2080;
    id v60 = [v50 token];
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
    uint64_t v61 = String.init<A>(describing:)();
    v100[0] = sub_1000F7290(v61, v62, v101);
    os_log_type_t v53 = &selRef_sinf;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v54 + 48) = 2080;
    id v63 = [v50 value];
    if (v63)
    {
      uint64_t v64 = v63;
      uint64_t v65 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v67 = v66;
    }
    else
    {
      uint64_t v65 = 0;
      uint64_t v67 = 0;
    }
    os_log_type_t v78 = v90;
    v100[0] = v65;
    v100[1] = v67;
    sub_10001644C(&qword_1005A4278);
    uint64_t v79 = String.init<A>(describing:)();
    v100[0] = sub_1000F7290(v79, v80, v101);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    os_log_type_t v81 = v78;
    os_log_t v82 = v89;
    _os_log_impl((void *)&_mh_execute_header, v89, v81, "[%{public}s/%@][%{public}s] Updated value isStale: %{BOOL}d token: %s value: %s", (uint8_t *)v54, 0x3Au);
    sub_10001644C((uint64_t *)&unk_1005A3AA0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(void *, uint64_t))(v99 + 8))(v94, v98);
    uint64_t v45 = v95;
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_unknownObjectRelease_n();
    (*(void (**)(void *, uint64_t))(v99 + 8))(v46, v98);
  }
  uint64_t v83 = v93;
  swift_beginAccess();
  *uint64_t v83 = 1;
  id v84 = [v50 v53[213]];
  if (v84)
  {
    id v85 = v84;
    uint64_t v86 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v88 = v87;

    swift_unknownObjectRelease();
  }
  else
  {
    swift_unknownObjectRelease();
    uint64_t v86 = 0;
    uint64_t v88 = 0;
  }
  swift_beginAccess();
  *(void *)(v45 + 16) = v86;
  *(void *)(v45 + 24) = v88;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1000DB01C(uint64_t a1, uint64_t a2)
{
  uint64_t ObjectType = swift_getObjectType();
  v2[39] = a2;
  v2[40] = ObjectType;
  v2[38] = a1;
  uint64_t v6 = type metadata accessor for Logger();
  v2[41] = v6;
  v2[42] = *(void *)(v6 - 8);
  v2[43] = swift_task_alloc();
  v2[44] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for ContinuousClock.Instant();
  v2[45] = v7;
  v2[46] = *(void *)(v7 - 8);
  v2[47] = swift_task_alloc();
  v2[48] = swift_task_alloc();
  uint64_t v8 = type metadata accessor for ContinuousClock();
  v2[49] = v8;
  v2[50] = *(void *)(v8 - 8);
  v2[51] = swift_task_alloc();
  return _swift_task_switch(sub_1000DB1D0, 0, 0);
}

uint64_t sub_1000DB1D0()
{
  uint64_t v77 = v0;
  id v1 = objc_msgSend(*(id *)(v0 + 304), "ams_accountID");
  *(void *)(v0 + 416) = v1;
  if (!v1)
  {
    uint64_t v26 = *(void **)(v0 + 312);
    static Logger.appUsage.getter();
    id v27 = v26;
    id v28 = Logger.logObject.getter();
    os_log_type_t v29 = static os_log_type_t.default.getter();
    BOOL v30 = os_log_type_enabled(v28, v29);
    uint64_t v31 = *(void *)(v0 + 336);
    uint64_t v32 = *(void *)(v0 + 344);
    if (v30)
    {
      unint64_t v33 = *(void **)(v0 + 312);
      uint64_t v75 = *(void *)(v0 + 328);
      aBlocka = *(void **)(v0 + 344);
      uint64_t v34 = swift_slowAlloc();
      uint64_t v35 = (void *)swift_slowAlloc();
      uint64_t v76 = swift_slowAlloc();
      *(_DWORD *)uint64_t v34 = 136446466;
      uint64_t v36 = _typeName(_:qualified:)();
      *(void *)(v0 + 256) = sub_1000F7290(v36, v37, &v76);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v34 + 12) = 2112;
      *(void *)(v0 + 288) = v33;
      id v38 = v33;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v35 = v33;

      _os_log_impl((void *)&_mh_execute_header, v28, v29, "[%{public}s/%@] Skipping oneAccountDSID because the account identity could not be determined", (uint8_t *)v34, 0x16u);
      sub_10001644C((uint64_t *)&unk_1005A3AA0);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(void *, uint64_t))(v31 + 8))(aBlocka, v75);
    }
    else
    {
      uint64_t v50 = *(void **)(v0 + 312);
      uint64_t v51 = *(void *)(v0 + 328);

      (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v32, v51);
    }
    int v52 = 0;
LABEL_17:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    id v63 = *(uint64_t (**)(void *))(v0 + 8);
    return v63(v52);
  }
  id v2 = v1;
  uint64_t v4 = *(void **)(v0 + 312);
  uint64_t v3 = *(void *)(v0 + 320);
  uint64_t v5 = swift_allocObject();
  *(void *)(v0 + 424) = v5;
  *(void *)(v5 + 16) = 0;
  id v70 = [self sharedInstance];
  *(void *)(v0 + 432) = v70;
  uint64_t v6 = swift_allocObject();
  *(void *)(v0 + 440) = v6;
  *(unsigned char *)(v6 + 16) = 0;
  uint64_t v7 = (void *)swift_allocObject();
  *(void *)(v0 + 448) = v7;
  v7[2] = v4;
  v7[3] = v6;
  v7[4] = v5;
  v7[5] = v3;
  *(void *)(v0 + 96) = sub_1000DD728;
  *(void *)(v0 + 104) = v7;
  *(void *)(v0 + 64) = _NSConcreteStackBlock;
  *(void *)(v0 + 72) = 1107296256;
  *(void *)(v0 + 80) = sub_1000DB018;
  *(void *)(v0 + 88) = &unk_100515E20;
  uint64_t v8 = _Block_copy((const void *)(v0 + 64));
  id v9 = v4;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_release();
  id v10 = [v70 intForKey:2 accountID:v2 updateBlock:v8];
  *(void *)(v0 + 456) = v10;
  _Block_release(v8);
  *(void *)(v0 + 48) = sub_1000DD728;
  *(void *)(v0 + 56) = v7;
  *(void *)(v0 + 16) = _NSConcreteStackBlock;
  *(void *)(v0 + 24) = 1107296256;
  *(void *)(v0 + 32) = sub_1000DB018;
  *(void *)(v0 + 40) = &unk_100515E48;
  unint64_t v11 = _Block_copy((const void *)(v0 + 16));
  swift_retain();
  swift_release();
  [v10 addFinishBlock:v11];
  _Block_release(v11);
  *(void *)(v0 + 272) = 0;
  swift_beginAccess();
  if (*(unsigned char *)(v6 + 16))
  {
    id v12 = *(void **)(v0 + 312);
    static Logger.appUsage.getter();
    id v13 = v12;
    swift_retain_n();
    id v14 = v13;
    uint64_t v15 = Logger.logObject.getter();
    os_log_type_t v16 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v15, v16))
    {
      os_log_type_t v71 = v16;
      aBlock = v15;
      uint64_t v17 = *(void *)(v0 + 424);
      uint64_t v18 = *(void **)(v0 + 312);
      uint64_t v19 = swift_slowAlloc();
      uint64_t v20 = (void *)swift_slowAlloc();
      uint64_t v76 = swift_slowAlloc();
      *(_DWORD *)uint64_t v19 = 136446978;
      uint64_t v21 = _typeName(_:qualified:)();
      *(void *)(v0 + 296) = sub_1000F7290(v21, v22, &v76);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v19 + 12) = 2112;
      *(void *)(v0 + 248) = v18;
      id v23 = v18;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v20 = v18;

      *(_WORD *)(v19 + 22) = 2112;
      swift_beginAccess();
      uint64_t v24 = *(void **)(v17 + 16);
      if (v24)
      {
        Class isa = *(Class *)(v17 + 16);
      }
      else
      {
        sub_10001BE10();
        Class isa = NSNumber.init(integerLiteral:)(-1).super.super.isa;
        uint64_t v24 = 0;
      }
      uint64_t v66 = *(void **)(v0 + 432);
      uint64_t v65 = *(void **)(v0 + 416);
      uint64_t v68 = *(void *)(v0 + 352);
      uint64_t v69 = *(void **)(v0 + 456);
      uint64_t v59 = *(void *)(v0 + 336);
      uint64_t v67 = *(void *)(v0 + 328);
      *(void *)(v0 + 264) = isa;
      id v60 = v24;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      v20[1] = isa;
      swift_release_n();
      *(_WORD *)(v19 + 32) = 2048;
      swift_beginAccess();
      *(void *)(v0 + 280) = *(void *)(v0 + 272);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, aBlock, v71, "[%{public}s/%@] Returning oneAccount DSID: %@ sleepCount: %ld", (uint8_t *)v19, 0x2Au);
      sub_10001644C((uint64_t *)&unk_1005A3AA0);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
      swift_release();

      (*(void (**)(uint64_t, uint64_t))(v59 + 8))(v68, v67);
    }
    else
    {
      os_log_type_t v53 = *(void **)(v0 + 456);
      uint64_t v54 = *(void **)(v0 + 432);
      uint64_t v55 = *(void **)(v0 + 416);
      aBlockb = *(void **)(v0 + 352);
      uint64_t v56 = *(void *)(v0 + 328);
      uint64_t v57 = *(void *)(v0 + 336);
      id v58 = *(void **)(v0 + 312);

      swift_release_n();
      swift_release();
      (*(void (**)(void *, uint64_t))(v57 + 8))(aBlockb, v56);
    }
    uint64_t v61 = *(void *)(v0 + 424);
    swift_beginAccess();
    int v52 = *(void **)(v61 + 16);
    id v62 = v52;
    swift_release();
    swift_release();
    goto LABEL_17;
  }
  uint64_t v40 = *(void *)(v0 + 368);
  uint64_t v39 = *(void *)(v0 + 376);
  uint64_t v41 = *(void *)(v0 + 360);
  uint64_t v42 = static Duration.seconds(_:)();
  uint64_t v44 = v43;
  ContinuousClock.init()();
  *(void *)(v0 + 232) = v42;
  *(void *)(v0 + 240) = v44;
  *(void *)(v0 + 216) = 0;
  *(void *)(v0 + 208) = 0;
  *(unsigned char *)(v0 + 224) = 1;
  uint64_t v45 = sub_1000672F4(&qword_1005A48C0, (void (*)(uint64_t))&type metadata accessor for ContinuousClock);
  dispatch thunk of Clock.now.getter();
  sub_1000672F4(&qword_1005A4910, (void (*)(uint64_t))&type metadata accessor for ContinuousClock.Instant);
  dispatch thunk of InstantProtocol.advanced(by:)();
  uint64_t v46 = *(void (**)(uint64_t, uint64_t))(v40 + 8);
  *(void *)(v0 + 464) = v46;
  *(void *)(v0 + 472) = (v40 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v46(v39, v41);
  id v47 = (void *)swift_task_alloc();
  *(void *)(v0 + 480) = v47;
  *id v47 = v0;
  v47[1] = sub_1000DBBBC;
  uint64_t v49 = *(void *)(v0 + 384);
  uint64_t v48 = *(void *)(v0 + 392);
  return dispatch thunk of Clock.sleep(until:tolerance:)(v49, v0 + 208, v48, v45);
}

uint64_t sub_1000DBBBC()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 488) = v0;
  swift_task_dealloc();
  if (v0)
  {
    (*(void (**)(void, void))(v2 + 464))(*(void *)(v2 + 384), *(void *)(v2 + 360));
    uint64_t v3 = sub_1000DC2F4;
  }
  else
  {
    uint64_t v5 = *(void *)(v2 + 400);
    uint64_t v4 = *(void *)(v2 + 408);
    uint64_t v6 = *(void *)(v2 + 392);
    (*(void (**)(void, void))(v2 + 464))(*(void *)(v2 + 384), *(void *)(v2 + 360));
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
    uint64_t v3 = sub_1000DBD14;
  }
  return _swift_task_switch(v3, 0, 0);
}

uint64_t sub_1000DBD14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v53 = v4;
  uint64_t v5 = *(void *)(v4 + 272);
  BOOL v6 = __OFADD__(v5, 1);
  uint64_t v7 = v5 + 1;
  if (v6)
  {
    __break(1u);
    return dispatch thunk of Clock.sleep(until:tolerance:)(a1, a2, a3, a4);
  }
  uint64_t v8 = *(void *)(v4 + 440);
  *(void *)(v4 + 272) = v7;
  if ((*(unsigned char *)(v8 + 16) & 1) == 0 && v7 < 10)
  {
    uint64_t v10 = *(void *)(v4 + 368);
    uint64_t v9 = *(void *)(v4 + 376);
    uint64_t v11 = *(void *)(v4 + 360);
    uint64_t v12 = static Duration.seconds(_:)();
    uint64_t v14 = v13;
    ContinuousClock.init()();
    *(void *)(v4 + 232) = v12;
    *(void *)(v4 + 240) = v14;
    *(void *)(v4 + 216) = 0;
    *(void *)(v4 + 208) = 0;
    *(unsigned char *)(v4 + 224) = 1;
    uint64_t v15 = sub_1000672F4(&qword_1005A48C0, (void (*)(uint64_t))&type metadata accessor for ContinuousClock);
    dispatch thunk of Clock.now.getter();
    sub_1000672F4(&qword_1005A4910, (void (*)(uint64_t))&type metadata accessor for ContinuousClock.Instant);
    dispatch thunk of InstantProtocol.advanced(by:)();
    os_log_type_t v16 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
    *(void *)(v4 + 464) = v16;
    *(void *)(v4 + 472) = (v10 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    v16(v9, v11);
    uint64_t v17 = (void *)swift_task_alloc();
    *(void *)(v4 + 480) = v17;
    *uint64_t v17 = v4;
    v17[1] = sub_1000DBBBC;
    a3 = *(void *)(v4 + 392);
    a1 = *(void *)(v4 + 384);
    a2 = v4 + 208;
    a4 = v15;
    return dispatch thunk of Clock.sleep(until:tolerance:)(a1, a2, a3, a4);
  }
  uint64_t v18 = *(void **)(v4 + 312);
  static Logger.appUsage.getter();
  id v19 = v18;
  swift_retain_n();
  id v20 = v19;
  uint64_t v21 = Logger.logObject.getter();
  os_log_type_t v22 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v21, v22))
  {
    os_log_type_t v51 = v22;
    uint64_t v23 = *(void *)(v4 + 424);
    uint64_t v24 = *(void **)(v4 + 312);
    uint64_t v25 = swift_slowAlloc();
    uint64_t v26 = (void *)swift_slowAlloc();
    uint64_t v52 = swift_slowAlloc();
    *(_DWORD *)uint64_t v25 = 136446978;
    uint64_t v27 = _typeName(_:qualified:)();
    *(void *)(v4 + 296) = sub_1000F7290(v27, v28, &v52);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v25 + 12) = 2112;
    *(void *)(v4 + 248) = v24;
    id v29 = v24;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v26 = v24;

    *(_WORD *)(v25 + 22) = 2112;
    swift_beginAccess();
    BOOL v30 = *(void **)(v23 + 16);
    if (v30)
    {
      Class isa = *(Class *)(v23 + 16);
    }
    else
    {
      sub_10001BE10();
      Class isa = NSNumber.init(integerLiteral:)(-1).super.super.isa;
      BOOL v30 = 0;
    }
    id v47 = *(void **)(v4 + 456);
    uint64_t v48 = *(void **)(v4 + 432);
    uint64_t v49 = *(void **)(v4 + 416);
    uint64_t v39 = *(void *)(v4 + 352);
    uint64_t v40 = *(void *)(v4 + 336);
    uint64_t v50 = *(void *)(v4 + 328);
    *(void *)(v4 + 264) = isa;
    id v41 = v30;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    v26[1] = isa;
    swift_release_n();
    *(_WORD *)(v25 + 32) = 2048;
    swift_beginAccess();
    *(void *)(v4 + 280) = *(void *)(v4 + 272);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v21, v51, "[%{public}s/%@] Returning oneAccount DSID: %@ sleepCount: %ld", (uint8_t *)v25, 0x2Au);
    sub_10001644C((uint64_t *)&unk_1005A3AA0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v39, v50);
  }
  else
  {
    uint64_t v32 = *(void **)(v4 + 456);
    unint64_t v33 = *(void **)(v4 + 432);
    uint64_t v34 = *(void **)(v4 + 416);
    uint64_t v35 = *(void *)(v4 + 352);
    uint64_t v36 = *(void *)(v4 + 328);
    uint64_t v37 = *(void *)(v4 + 336);
    id v38 = *(void **)(v4 + 312);
    swift_release();

    swift_release_n();
    (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v35, v36);
  }
  uint64_t v42 = *(void *)(v4 + 424);
  swift_beginAccess();
  uint64_t v43 = *(void **)(v42 + 16);
  id v44 = v43;
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v45 = *(uint64_t (**)(void *))(v4 + 8);
  return v45(v43);
}

uint64_t sub_1000DC2F4()
{
  uint64_t v37 = v0;
  (*(void (**)(void, void))(v0[50] + 8))(v0[51], v0[49]);
  swift_errorRelease();
  id v1 = (void *)v0[39];
  static Logger.appUsage.getter();
  id v2 = v1;
  swift_retain_n();
  id v3 = v2;
  uint64_t v4 = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v4, v5))
  {
    os_log_type_t v34 = v5;
    uint64_t v35 = v4;
    uint64_t v32 = v0[53];
    BOOL v6 = (void *)v0[39];
    uint64_t v7 = swift_slowAlloc();
    unint64_t v28 = (void *)swift_slowAlloc();
    uint64_t v36 = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 136446978;
    uint64_t v8 = _typeName(_:qualified:)();
    v0[37] = sub_1000F7290(v8, v9, &v36);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    v0[31] = v6;
    *(_WORD *)(v7 + 12) = 2112;
    id v10 = v6;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *unint64_t v28 = v6;

    *(_WORD *)(v7 + 22) = 2112;
    swift_beginAccess();
    uint64_t v11 = *(void **)(v32 + 16);
    if (v11)
    {
      Class isa = *(Class *)(v32 + 16);
    }
    else
    {
      sub_10001BE10();
      Class isa = NSNumber.init(integerLiteral:)(-1).super.super.isa;
      uint64_t v11 = 0;
    }
    id v20 = (void *)v0[57];
    id v29 = (void *)v0[54];
    BOOL v30 = (void *)v0[52];
    uint64_t v21 = v0[42];
    uint64_t v31 = v0[41];
    uint64_t v33 = v0[44];
    v0[33] = isa;
    id v22 = v11;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    v28[1] = isa;
    swift_release_n();
    *(_WORD *)(v7 + 32) = 2048;
    swift_beginAccess();
    v0[35] = v0[34];
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v35, v34, "[%{public}s/%@] Returning oneAccount DSID: %@ sleepCount: %ld", (uint8_t *)v7, 0x2Au);
    sub_10001644C((uint64_t *)&unk_1005A3AA0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v33, v31);
  }
  else
  {
    uint64_t v13 = (void *)v0[57];
    uint64_t v14 = (void *)v0[54];
    uint64_t v15 = (void *)v0[52];
    uint64_t v16 = v0[44];
    uint64_t v17 = v0[41];
    uint64_t v18 = v0[42];
    id v19 = (void *)v0[39];
    swift_release();

    swift_release_n();
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v16, v17);
  }
  uint64_t v23 = v0[53];
  swift_beginAccess();
  uint64_t v24 = *(void **)(v23 + 16);
  id v25 = v24;
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v26 = (uint64_t (*)(void *))v0[1];
  return v26(v24);
}

void sub_1000DC748(void *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, NSObject *a6)
{
  os_log_t v77 = a6;
  uint64_t v11 = type metadata accessor for Date();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v73 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_10001644C((uint64_t *)&unk_1005A4E20);
  __chkstk_darwin(v15 - 8);
  uint64_t v17 = (char *)&v73 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for Logger();
  __chkstk_darwin(v18);
  __chkstk_darwin(v19);
  __chkstk_darwin(v20);
  uint64_t v24 = (char *)&v73 - v23;
  uint64_t v78 = v25;
  uint64_t v79 = v26;
  if (a2)
  {
    swift_errorRetain();
    static Logger.appUsage.getter();
    swift_errorRetain();
    id v27 = a3;
    swift_errorRetain();
    id v28 = v27;
    id v29 = Logger.logObject.getter();
    os_log_type_t v30 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v29, v30))
    {
      uint64_t v31 = swift_slowAlloc();
      uint64_t v32 = (void *)swift_slowAlloc();
      uint64_t v76 = swift_slowAlloc();
      v80[0] = v76;
      *(_DWORD *)uint64_t v31 = 136446722;
      uint64_t v33 = _typeName(_:qualified:)();
      v81[0] = sub_1000F7290(v33, v34, v80);
      os_log_t v77 = v29;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v31 + 12) = 2112;
      v81[0] = (uint64_t)v28;
      id v35 = v28;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v32 = v28;

      *(_WORD *)(v31 + 22) = 2112;
      swift_errorRetain();
      uint64_t v36 = _swift_stdlib_bridgeErrorToNSError();
      v81[0] = v36;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      v32[1] = v36;
      swift_errorRelease();
      swift_errorRelease();
      os_log_t v37 = v77;
      _os_log_impl((void *)&_mh_execute_header, v77, v30, "[%{public}s/%@] Encountered AMSAccountCachedServerInt update service error: %@", (uint8_t *)v31, 0x20u);
      sub_10001644C((uint64_t *)&unk_1005A3AA0);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();

      swift_errorRelease();
      swift_errorRelease();
    }
    (*(void (**)(char *, uint64_t))(v79 + 8))(v24, v78);
    return;
  }
  if (!a1)
  {
LABEL_14:
    uint64_t v60 = v21;
    static Logger.appUsage.getter();
    id v61 = a3;
    id v62 = Logger.logObject.getter();
    os_log_type_t v63 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v62, v63))
    {
      uint64_t v64 = swift_slowAlloc();
      uint64_t v76 = v60;
      uint64_t v65 = v64;
      uint64_t v66 = (void *)swift_slowAlloc();
      v80[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v65 = 136446466;
      uint64_t v67 = _typeName(_:qualified:)();
      v81[0] = sub_1000F7290(v67, v68, v80);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v65 + 12) = 2112;
      v81[0] = (uint64_t)v61;
      id v69 = v61;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v66 = v61;

      _os_log_impl((void *)&_mh_execute_header, v62, v63, "[%{public}s/%@] Updated with invalid value", (uint8_t *)v65, 0x16u);
      sub_10001644C((uint64_t *)&unk_1005A3AA0);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(uint64_t, uint64_t))(v79 + 8))(v76, v78);
    }
    else
    {

      (*(void (**)(uint64_t, uint64_t))(v79 + 8))(v60, v78);
    }
    return;
  }
  uint64_t v38 = a1;
  uint64_t v39 = v21;
  uint64_t v76 = v22;
  id v40 = [(id)swift_unknownObjectRetain() expiration];
  if (!v40)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v17, 1, 1, v11);
    goto LABEL_13;
  }
  id v41 = v40;
  static Date._unconditionallyBridgeFromObjectiveC(_:)();

  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v17, v14, v11);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v17, 0, 1, v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v17, 1, v11) == 1)
  {
LABEL_13:
    swift_unknownObjectRelease();
    sub_1000214BC((uint64_t)v17);
    uint64_t v21 = v39;
    goto LABEL_14;
  }
  uint64_t v75 = (unsigned char *)(a4 + 16);
  uint64_t v42 = (void **)(a5 + 16);
  sub_1000214BC((uint64_t)v17);
  uint64_t v43 = v76;
  static Logger.appUsage.getter();
  swift_unknownObjectRetain_n();
  id v44 = a3;
  uint64_t v45 = v38;
  uint64_t v46 = Logger.logObject.getter();
  os_log_type_t v47 = static os_log_type_t.default.getter();
  int v48 = v47;
  if (os_log_type_enabled(v46, v47))
  {
    uint64_t v49 = swift_slowAlloc();
    uint64_t v50 = (void *)swift_slowAlloc();
    uint64_t v73 = swift_slowAlloc();
    v81[0] = v73;
    *(_DWORD *)uint64_t v49 = 136447234;
    uint64_t v74 = v42;
    uint64_t v51 = _typeName(_:qualified:)();
    v80[0] = sub_1000F7290(v51, v52, v81);
    LODWORD(v77) = v48;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v49 + 12) = 2112;
    v80[0] = (uint64_t)v44;
    id v53 = v44;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v50 = v44;

    *(_WORD *)(v49 + 22) = 1024;
    unsigned int v54 = [v45 isStale];
    swift_unknownObjectRelease();
    LODWORD(v80[0]) = v54;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_unknownObjectRelease();
    *(_WORD *)(v49 + 28) = 2080;
    id v55 = [v45 token];
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
    uint64_t v56 = String.init<A>(describing:)();
    v80[0] = sub_1000F7290(v56, v57, v81);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v49 + 38) = 2080;
    v80[0] = (uint64_t)[v45 value];
    sub_10001644C(&qword_1005A3810);
    uint64_t v58 = String.init<A>(describing:)();
    v80[0] = sub_1000F7290(v58, v59, v81);
    uint64_t v42 = v74;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v46, (os_log_type_t)v77, "[%{public}s/%@] Updated value isStale: %{BOOL}d token: %s value: %s", (uint8_t *)v49, 0x30u);
    sub_10001644C((uint64_t *)&unk_1005A3AA0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v79 + 8))(v76, v78);
  }
  else
  {

    swift_unknownObjectRelease_n();
    (*(void (**)(uint64_t, uint64_t))(v79 + 8))(v43, v78);
  }
  id v70 = v75;
  swift_beginAccess();
  *id v70 = 1;
  id v71 = [v45 value];
  swift_unknownObjectRelease();
  swift_beginAccess();
  uint64_t v72 = *v42;
  char *v42 = v71;
}

uint64_t sub_1000DD1A0(uint64_t a1, uint64_t a2, void *a3)
{
  os_log_type_t v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  swift_retain();
  swift_unknownObjectRetain();
  id v6 = a3;
  v5(a2, a3);
  swift_release();

  return swift_unknownObjectRelease();
}

uint64_t sub_1000DD3A4(void *a1, void *a2, void *aBlock, void *a4)
{
  v4[3] = a2;
  v4[4] = a4;
  v4[2] = a1;
  v4[5] = _Block_copy(aBlock);
  id v8 = a1;
  id v9 = a2;
  a4;
  id v10 = (void *)swift_task_alloc();
  v4[6] = v10;
  *id v10 = v4;
  v10[1] = sub_1000DD47C;
  return sub_1000DB01C((uint64_t)v8, (uint64_t)v9);
}

uint64_t sub_1000DD47C(void *a1)
{
  id v3 = *(void (***)(void, void))(*v1 + 40);
  uint64_t v4 = *(void **)(*v1 + 32);
  os_log_type_t v5 = *(void **)(*v1 + 24);
  id v6 = *(void **)(*v1 + 16);
  uint64_t v9 = *v1;
  swift_task_dealloc();

  ((void (**)(void, void *))v3)[2](v3, a1);
  _Block_release(v3);

  uint64_t v7 = *(uint64_t (**)(void))(v9 + 8);
  return v7();
}

id sub_1000DD640()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AccountCacheCoordinator();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for AccountCacheCoordinator()
{
  return self;
}

uint64_t sub_1000DD698()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000DD6D0()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1000DD6E0()
{
  swift_release();
  swift_release();
  return _swift_deallocObject(v0, 48, 7);
}

void sub_1000DD728(void *a1, uint64_t a2)
{
  sub_1000DC748(a1, a2, *(void **)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(NSObject **)(v2 + 40));
}

uint64_t sub_1000DD734()
{
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000DD76C()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return _swift_deallocObject(v0, 64, 7);
}

uint64_t sub_1000DD7BC(void *a1, uint64_t a2)
{
  return sub_1000DA428(a1, a2, *(void **)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40), *(void *)(v2 + 48), *(NSObject **)(v2 + 56));
}

uint64_t sub_1000DD7CC()
{
  _Block_release(*(const void **)(v0 + 32));
  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1000DD81C()
{
  uint64_t v2 = (void *)v0[2];
  id v3 = (void *)v0[3];
  os_log_type_t v5 = (void *)v0[4];
  uint64_t v4 = (void *)v0[5];
  id v6 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v6;
  *id v6 = v1;
  v6[1] = sub_100005040;
  uint64_t v7 = (uint64_t (*)(void *, void *, void *, void *))((char *)&dword_1005A63A8 + dword_1005A63A8);
  return v7(v2, v3, v5, v4);
}

uint64_t sub_1000DD8FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[9] = a4;
  v7[10] = a5;
  v7[7] = a2;
  v7[8] = a3;
  v7[5] = a7;
  v7[6] = a1;
  v7[4] = a6;
  return _swift_task_switch(sub_1000DD928, 0, 0);
}

uint64_t sub_1000DD928()
{
  uint64_t v1 = *(void *)(v0 + 80);
  long long v6 = *(_OWORD *)(v0 + 48);
  long long v7 = *(_OWORD *)(v0 + 64);
  uint64_t v2 = sub_10001644C(&qword_1005A4278);
  uint64_t v3 = swift_task_alloc();
  *(void *)(v0 + 88) = v3;
  *(_OWORD *)(v3 + 16) = v6;
  *(_OWORD *)(v3 + 32) = v7;
  *(void *)(v3 + 48) = v1;
  *(void *)(v3 + 56) = v0 + 32;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 96) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_1000DDA4C;
  return withThrowingTaskGroup<A, B>(of:returning:isolation:body:)(v0 + 16, v2, v2, 0, 0, &unk_1005A64D8, v3, v2);
}

uint64_t sub_1000DDA4C()
{
  *(void *)(*(void *)v1 + 104) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1000DDBD0;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_1000DDB68;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1000DDB68()
{
  swift_release();
  uint64_t v1 = v0[2];
  uint64_t v2 = v0[3];
  uint64_t v3 = (uint64_t (*)(uint64_t, uint64_t))v0[1];
  return v3(v1, v2);
}

uint64_t sub_1000DDBD0()
{
  swift_task_dealloc();
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1000DDC3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[9] = a4;
  v7[10] = a5;
  v7[7] = a2;
  v7[8] = a3;
  v7[6] = a1;
  v7[2] = a6;
  v7[3] = a7;
  return _swift_task_switch(sub_1000DDC68, 0, 0);
}

uint64_t sub_1000DDC68()
{
  uint64_t v1 = *(void *)(v0 + 80);
  long long v6 = *(_OWORD *)(v0 + 48);
  long long v7 = *(_OWORD *)(v0 + 64);
  uint64_t v2 = sub_10001644C(&qword_1005A6440);
  uint64_t v3 = swift_task_alloc();
  *(void *)(v0 + 88) = v3;
  *(_OWORD *)(v3 + 16) = v6;
  *(_OWORD *)(v3 + 32) = v7;
  *(void *)(v3 + 48) = v1;
  *(void *)(v3 + 56) = v0 + 16;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 96) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_1000DDD8C;
  return withThrowingTaskGroup<A, B>(of:returning:isolation:body:)(v0 + 32, v2, v2, 0, 0, &unk_1005A6450, v3, v2);
}

uint64_t sub_1000DDD8C()
{
  *(void *)(*(void *)v1 + 104) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1000DDF14;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_1000DDEA8;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1000DDEA8()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t v2 = *(unsigned __int8 *)(v0 + 40);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
  return v3(v1, v2);
}

uint64_t sub_1000DDF14()
{
  swift_task_dealloc();
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1000DDF80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[9] = a6;
  v7[10] = a7;
  v7[7] = a4;
  v7[8] = a5;
  v7[5] = a2;
  v7[6] = a3;
  v7[4] = a1;
  uint64_t v8 = type metadata accessor for ContinuousClock.Instant();
  v7[11] = v8;
  uint64_t v9 = *(void *)(v8 - 8);
  v7[12] = v9;
  v7[13] = *(void *)(v9 + 64);
  v7[14] = swift_task_alloc();
  v7[15] = swift_task_alloc();
  return _swift_task_switch(sub_1000DE064, 0, 0);
}

uint64_t sub_1000DE064()
{
  uint64_t v1 = v0;
  uint64_t v2 = v0[14];
  uint64_t v3 = v0[15];
  uint64_t v4 = v0[12];
  uint64_t v5 = (uint64_t *)v0[10];
  uint64_t v6 = v0[11];
  uint64_t v17 = v0[9];
  uint64_t v18 = v0 + 2;
  uint64_t v7 = v0[7];
  uint64_t v16 = v0[8];
  static ContinuousClock.now.getter();
  ContinuousClock.Instant.advanced(by:)();
  uint64_t v8 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  v0[16] = v8;
  v0[17] = (v4 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v8(v2, v6);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v2, v3, v6);
  unint64_t v9 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = 0;
  *(void *)(v10 + 24) = 0;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v4 + 32))(v10 + v9, v2, v6);
  sub_1000DE9F4(v7, v16, v17, (uint64_t)&unk_1005A64F0, v10, &qword_1005A4278);
  uint64_t v12 = *v5;
  uint64_t v11 = v5[1];
  swift_retain();
  sub_1000DE9F4(v7, v16, v17, v12, v11, &qword_1005A4278);
  uint64_t v13 = (void *)swift_task_alloc();
  v1[18] = v13;
  uint64_t v14 = sub_10001644C(&qword_1005A64F8);
  *uint64_t v13 = v1;
  v13[1] = sub_1000DE268;
  return ThrowingTaskGroup.next(isolation:)(v18, 0, 0, v14);
}

uint64_t sub_1000DE268()
{
  *(void *)(*(void *)v1 + 152) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1000DE478;
  }
  else {
    uint64_t v2 = sub_1000DE37C;
  }
  return _swift_task_switch(v2, 0, 0);
}

void sub_1000DE37C()
{
  uint64_t v1 = v0[3];
  if (v1 == 1)
  {
    __break(1u);
  }
  else
  {
    uint64_t v2 = (void (*)(uint64_t, uint64_t))v0[16];
    uint64_t v3 = v0[15];
    uint64_t v4 = v0[11];
    uint64_t v5 = v0[2];
    sub_10001644C(&qword_1005A4278);
    sub_10001644C(&qword_1005A4E40);
    ThrowingTaskGroup.cancelAll()();
    v2(v3, v4);
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v6 = (void (*)(uint64_t, uint64_t))v0[1];
    v6(v5, v1);
  }
}

uint64_t sub_1000DE478()
{
  (*(void (**)(void, void))(v0 + 128))(*(void *)(v0 + 120), *(void *)(v0 + 88));
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1000DE4F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[9] = a6;
  v7[10] = a7;
  v7[7] = a4;
  v7[8] = a5;
  v7[5] = a2;
  v7[6] = a3;
  v7[4] = a1;
  uint64_t v8 = type metadata accessor for ContinuousClock.Instant();
  v7[11] = v8;
  uint64_t v9 = *(void *)(v8 - 8);
  v7[12] = v9;
  v7[13] = *(void *)(v9 + 64);
  v7[14] = swift_task_alloc();
  v7[15] = swift_task_alloc();
  return _swift_task_switch(sub_1000DE5DC, 0, 0);
}

uint64_t sub_1000DE5DC()
{
  uint64_t v1 = v0;
  uint64_t v2 = v0[14];
  uint64_t v3 = v0[15];
  uint64_t v4 = v0[12];
  uint64_t v5 = (uint64_t *)v0[10];
  uint64_t v6 = v0[11];
  uint64_t v17 = v0[9];
  uint64_t v18 = v0 + 2;
  uint64_t v7 = v0[7];
  uint64_t v16 = v0[8];
  static ContinuousClock.now.getter();
  ContinuousClock.Instant.advanced(by:)();
  uint64_t v8 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  v0[16] = v8;
  v0[17] = (v4 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v8(v2, v6);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v2, v3, v6);
  unint64_t v9 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = 0;
  *(void *)(v10 + 24) = 0;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v4 + 32))(v10 + v9, v2, v6);
  sub_1000DE9F4(v7, v16, v17, (uint64_t)&unk_1005A6468, v10, &qword_1005A6440);
  uint64_t v12 = *v5;
  uint64_t v11 = v5[1];
  swift_retain();
  sub_1000DE9F4(v7, v16, v17, v12, v11, &qword_1005A6440);
  uint64_t v13 = (void *)swift_task_alloc();
  v1[18] = v13;
  uint64_t v14 = sub_10001644C(&qword_1005A6470);
  *uint64_t v13 = v1;
  v13[1] = sub_1000DE7E0;
  return ThrowingTaskGroup.next(isolation:)(v18, 0, 0, v14);
}

uint64_t sub_1000DE7E0()
{
  *(void *)(*(void *)v1 + 152) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1000DE478;
  }
  else {
    uint64_t v2 = sub_1000DE8F4;
  }
  return _swift_task_switch(v2, 0, 0);
}

void sub_1000DE8F4()
{
  if (*(unsigned char *)(v0 + 25))
  {
    __break(1u);
  }
  else
  {
    uint64_t v1 = *(void (**)(uint64_t, uint64_t))(v0 + 128);
    uint64_t v2 = *(void *)(v0 + 120);
    uint64_t v3 = *(void *)(v0 + 88);
    uint64_t v4 = *(void *)(v0 + 16);
    uint64_t v5 = *(unsigned char *)(v0 + 24) & 1;
    sub_10001644C(&qword_1005A6440);
    sub_10001644C(&qword_1005A4E40);
    ThrowingTaskGroup.cancelAll()();
    v1(v2, v3);
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v0 + 8);
    v6(v4, v5);
  }
}

uint64_t sub_1000DE9F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t *a6)
{
  uint64_t v8 = v6;
  uint64_t v13 = sub_10001644C(&qword_1005A4640);
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (char *)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v35 - v17;
  if (a1)
  {
    sub_100016588(a3, (uint64_t)&v35 - v17, &qword_1005A4640);
    uint64_t v19 = type metadata accessor for TaskPriority();
    uint64_t v20 = *(void *)(v19 - 8);
    int v21 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19);
    swift_unknownObjectRetain();
    uint64_t v36 = a2;
    uint64_t v37 = a5;
    if (v21 == 1)
    {
      sub_100016714((uint64_t)v18, &qword_1005A4640);
    }
    else
    {
      TaskPriority.rawValue.getter();
      (*(void (**)(char *, uint64_t))(v20 + 8))(v18, v19);
    }
    if (*(void *)(v37 + 16))
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v27 = dispatch thunk of Actor.unownedExecutor.getter();
      uint64_t v29 = v28;
      swift_unknownObjectRelease();
    }
    else
    {
      uint64_t v27 = 0;
      uint64_t v29 = 0;
    }
    uint64_t v30 = *v8;
    sub_10001644C(a6);
    uint64_t v31 = (void *)(v29 | v27);
    if (v29 | v27)
    {
      v43[0] = 0;
      v43[1] = 0;
      uint64_t v31 = v43;
      v43[2] = v27;
      v43[3] = v29;
    }
    v42[0] = 1;
    v42[1] = v31;
    v42[2] = v30;
    uint64_t v38 = 6;
    uint64_t v39 = v42;
    uint64_t v40 = a1;
    uint64_t v41 = v36;
    goto LABEL_19;
  }
  sub_100016588(a3, (uint64_t)v15, &qword_1005A4640);
  uint64_t v22 = type metadata accessor for TaskPriority();
  uint64_t v23 = *(void *)(v22 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v15, 1, v22) != 1)
  {
    TaskPriority.rawValue.getter();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v15, v22);
    if (*(void *)(a5 + 16)) {
      goto LABEL_6;
    }
LABEL_15:
    uint64_t v24 = 0;
    uint64_t v26 = 0;
    goto LABEL_16;
  }
  sub_100016714((uint64_t)v15, &qword_1005A4640);
  if (!*(void *)(a5 + 16)) {
    goto LABEL_15;
  }
LABEL_6:
  swift_getObjectType();
  swift_unknownObjectRetain();
  uint64_t v24 = dispatch thunk of Actor.unownedExecutor.getter();
  uint64_t v26 = v25;
  swift_unknownObjectRelease();
LABEL_16:
  uint64_t v32 = *v8;
  sub_10001644C(a6);
  uint64_t v33 = (void *)(v26 | v24);
  if (v26 | v24)
  {
    v44[0] = 0;
    v44[1] = 0;
    uint64_t v33 = v44;
    v44[2] = v24;
    v44[3] = v26;
  }
  v43[4] = 1;
  v43[5] = v33;
  v43[6] = v32;
LABEL_19:
  swift_task_create();
  return swift_release();
}

NSObject *sub_1000DED78(char a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for Logger();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  unint64_t v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10001644C(&qword_1005A6490);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v3, v10);
  if (a1)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
LABEL_6:
    AccountCachedServerData.CachedValue.value.getter();
    return v23;
  }
  char v14 = AccountCachedServerData.CachedValue.isStale.getter();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  if ((v14 & 1) == 0) {
    goto LABEL_6;
  }
  static Logger.appUsage.getter();
  uint64_t v15 = a2;
  uint64_t v16 = Logger.logObject.getter();
  os_log_type_t v17 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v18 = (uint8_t *)swift_slowAlloc();
    int v21 = (void *)swift_slowAlloc();
    uint64_t v22 = v18;
    uint64_t v23 = v15;
    *(_DWORD *)uint64_t v18 = 138412290;
    uint64_t v19 = v15;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    void *v21 = v15;

    _os_log_impl((void *)&_mh_execute_header, v16, v17, "[AccountCacheCoordinator/%@] Not using stale value)", v22, 0xCu);
    sub_10001644C((uint64_t *)&unk_1005A3AA0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
    uint64_t v15 = v16;
  }
  else
  {
  }
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return 0;
}

NSObject *sub_1000DF080(char a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for Logger();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  unint64_t v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10001644C(&qword_1005A63F8);
  uint64_t v11 = *(void *)(v10 - 8);
  double v12 = __chkstk_darwin(v10);
  char v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v11 + 16))(v14, v3, v10, v12);
  if (a1)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
LABEL_6:
    AccountCachedServerData.CachedValue.value.getter();
    return v25;
  }
  char v15 = AccountCachedServerData.CachedValue.isStale.getter();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
  if ((v15 & 1) == 0) {
    goto LABEL_6;
  }
  static Logger.appUsage.getter();
  uint64_t v16 = a2;
  os_log_type_t v17 = Logger.logObject.getter();
  os_log_type_t v18 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v19 = (uint8_t *)swift_slowAlloc();
    uint64_t v23 = (void *)swift_slowAlloc();
    uint64_t v24 = v19;
    *(_DWORD *)uint64_t v19 = 138412290;
    uint64_t v25 = v16;
    uint64_t v20 = v16;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v23 = v16;

    _os_log_impl((void *)&_mh_execute_header, v17, v18, "[AccountCacheCoordinator/%@] Not using stale value)", v24, 0xCu);
    sub_10001644C((uint64_t *)&unk_1005A3AA0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
    uint64_t v16 = v17;
  }
  else
  {
  }
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return 0;
}

uint64_t sub_1000DF39C()
{
  return AccountCachedServerData.stringSequence(forKey:accountID:)();
}

uint64_t sub_1000DF564(uint64_t a1, void *a2, void *a3, uint64_t a4, void *aBlock, void *a6)
{
  v6[3] = a3;
  v6[4] = a6;
  _OWORD v6[2] = a2;
  v6[5] = _Block_copy(aBlock);
  os_log_type_t v17 = (uint64_t (*)(uint64_t, id, id, uint64_t))((char *)&dword_1005A63E8 + dword_1005A63E8);
  id v12 = a2;
  id v13 = a3;
  id v14 = a6;
  char v15 = (void *)swift_task_alloc();
  v6[6] = v15;
  *char v15 = v6;
  v15[1] = sub_1000DF668;
  return v17(a1, v12, v13, a4);
}

uint64_t sub_1000DF668(uint64_t a1)
{
  uint64_t v3 = *(void (***)(void, void))(*v1 + 40);
  uint64_t v4 = *(void **)(*v1 + 32);
  uint64_t v5 = *(void **)(*v1 + 24);
  uint64_t v6 = *(void **)(*v1 + 16);
  uint64_t v9 = *v1;
  swift_task_dealloc();

  v3[2](v3, a1);
  _Block_release(v3);
  uint64_t v7 = *(uint64_t (**)(void))(v9 + 8);
  return v7();
}

uint64_t sub_1000DF7E8()
{
  _Block_release(*(const void **)(v0 + 48));
  return _swift_deallocObject(v0, 64, 7);
}

uint64_t sub_1000DF838()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = *(void **)(v0 + 24);
  uint64_t v4 = *(void **)(v0 + 32);
  uint64_t v5 = *(unsigned __int8 *)(v0 + 40);
  uint64_t v7 = *(void **)(v0 + 48);
  uint64_t v6 = *(void **)(v0 + 56);
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v8;
  *uint64_t v8 = v1;
  v8[1] = sub_1000184D8;
  uint64_t v9 = (uint64_t (*)(uint64_t, void *, void *, uint64_t, void *, void *))((char *)&dword_1005A63B8
                                                                                + dword_1005A63B8);
  return v9(v2, v3, v4, v5, v7, v6);
}

uint64_t sub_1000DF910(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = (uint64_t (*)(void))((char *)a3 + *a3);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v4;
  *uint64_t v4 = v3;
  v4[1] = sub_1000184D8;
  return v6();
}

uint64_t sub_1000DF9E0(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  uint64_t v7 = (uint64_t (*)(void))((char *)a4 + *a4);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v5;
  *uint64_t v5 = v4;
  v5[1] = sub_1000184D8;
  return v7();
}

uint64_t sub_1000DFAB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TaskPriority();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    TaskPriority.rawValue.getter();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_100016714(a1, &qword_1005A4640);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    dispatch thunk of Actor.unownedExecutor.getter();
    swift_unknownObjectRelease();
  }
LABEL_5:
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_1000DFC5C()
{
  swift_release();
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000DFC94(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1000184D8;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_1005A63D8 + dword_1005A63D8);
  return v6(a1, v4);
}

uint64_t sub_1000DFD4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6)
{
  *(void *)(v6 + 16) = a1;
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v6 + 24) = v10;
  *uint64_t v10 = v6;
  v10[1] = sub_1000DFDFC;
  return sub_1000E2B6C(a4, a5, a6);
}

uint64_t sub_1000DFDFC(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *v3;
  uint64_t v7 = *v3;
  swift_task_dealloc();
  if (!v2)
  {
    uint64_t v8 = *(void **)(v6 + 16);
    *uint64_t v8 = a1;
    v8[1] = a2;
  }
  uint64_t v9 = *(uint64_t (**)(void))(v7 + 8);
  return v9();
}

uint64_t sub_1000DFF18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v8 + 16) = a1;
  uint64_t v16 = (void *)swift_task_alloc();
  *(void *)(v8 + 24) = v16;
  *uint64_t v16 = v8;
  v16[1] = sub_1000E4CF0;
  return sub_1000DDF80(a2, a3, a4, a5, a6, a7, a8);
}

uint64_t sub_1000DFFF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 16) = a1;
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v4 + 24) = v6;
  *uint64_t v6 = v4;
  v6[1] = sub_1000E4CF0;
  return sub_1000E03DC(a4);
}

uint64_t sub_1000E0090(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6)
{
  *(void *)(v6 + 16) = a1;
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v6 + 24) = v10;
  *uint64_t v10 = v6;
  v10[1] = sub_1000E0140;
  return sub_1000E365C(a4, a5, a6);
}

uint64_t sub_1000E0140(uint64_t a1, char a2)
{
  uint64_t v6 = *v3;
  uint64_t v7 = *v3;
  swift_task_dealloc();
  if (!v2)
  {
    uint64_t v8 = *(void *)(v6 + 16);
    *(void *)uint64_t v8 = a1;
    *(unsigned char *)(v8 + 8) = a2 & 1;
  }
  uint64_t v9 = *(uint64_t (**)(void))(v7 + 8);
  return v9();
}

uint64_t sub_1000E0264(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v8 + 16) = a1;
  uint64_t v16 = (void *)swift_task_alloc();
  *(void *)(v8 + 24) = v16;
  *uint64_t v16 = v8;
  v16[1] = sub_1000E4CEC;
  return sub_1000DE4F8(a2, a3, a4, a5, a6, a7, a8);
}

uint64_t sub_1000E0344(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 16) = a1;
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v4 + 24) = v6;
  *uint64_t v6 = v4;
  v6[1] = sub_1000E4CEC;
  return sub_1000E03DC(a4);
}

uint64_t sub_1000E03DC(uint64_t a1)
{
  v1[5] = a1;
  uint64_t v2 = type metadata accessor for ContinuousClock();
  v1[6] = v2;
  v1[7] = *(void *)(v2 - 8);
  v1[8] = swift_task_alloc();
  return _swift_task_switch(sub_1000E049C, 0, 0);
}

uint64_t sub_1000E049C()
{
  *(void *)(v0 + 24) = 0;
  *(void *)(v0 + 16) = 0;
  *(unsigned char *)(v0 + 32) = 1;
  ContinuousClock.init()();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 72) = v1;
  uint64_t v2 = sub_1000E48B8(&qword_1005A48C0, (void (*)(uint64_t))&type metadata accessor for ContinuousClock);
  void *v1 = v0;
  v1[1] = sub_1000E0590;
  uint64_t v3 = *(void *)(v0 + 64);
  uint64_t v4 = *(void *)(v0 + 40);
  uint64_t v5 = *(void *)(v0 + 48);
  return static Task<>.sleep<A>(until:tolerance:clock:)(v4, v0 + 16, v3, v5, v2);
}

uint64_t sub_1000E0590()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 80) = v0;
  swift_task_dealloc();
  (*(void (**)(void, void))(v2[7] + 8))(v2[8], v2[6]);
  if (v0) {
    uint64_t v3 = sub_1000E07A4;
  }
  else {
    uint64_t v3 = sub_1000E06D4;
  }
  return _swift_task_switch(v3, 0, 0);
}

uint64_t sub_1000E06D4()
{
  type metadata accessor for CancellationError();
  sub_1000E48B8(&qword_1005A4080, (void (*)(uint64_t))&type metadata accessor for CancellationError);
  swift_allocError();
  CancellationError.init()();
  swift_willThrow();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1000E07A4()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1000E0808(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 64) = a3;
  *(void *)(v4 + 72) = a4;
  *(unsigned char *)(v4 + 304) = a2;
  *(void *)(v4 + 56) = a1;
  sub_10001644C(&qword_1005A4640);
  *(void *)(v4 + 80) = swift_task_alloc();
  uint64_t v5 = type metadata accessor for Logger();
  *(void *)(v4 + 88) = v5;
  *(void *)(v4 + 96) = *(void *)(v5 - 8);
  *(void *)(v4 + 104) = swift_task_alloc();
  *(void *)(v4 + 112) = swift_task_alloc();
  uint64_t v6 = sub_10001644C(&qword_1005A6490);
  *(void *)(v4 + 120) = v6;
  *(void *)(v4 + 128) = *(void *)(v6 - 8);
  *(void *)(v4 + 136) = swift_task_alloc();
  *(void *)(v4 + 144) = swift_task_alloc();
  sub_10001644C(&qword_1005A6498);
  *(void *)(v4 + 152) = swift_task_alloc();
  uint64_t v7 = sub_10001644C(&qword_1005A64A0);
  *(void *)(v4 + 160) = v7;
  *(void *)(v4 + 168) = *(void *)(v7 - 8);
  *(void *)(v4 + 176) = swift_task_alloc();
  *(void *)(v4 + 184) = swift_task_alloc();
  uint64_t v8 = sub_10001644C(&qword_1005A64A8);
  *(void *)(v4 + 192) = v8;
  *(void *)(v4 + 200) = *(void *)(v8 - 8);
  *(void *)(v4 + 208) = swift_task_alloc();
  uint64_t v9 = type metadata accessor for AccountCachedServerData.Error();
  *(void *)(v4 + 216) = v9;
  *(void *)(v4 + 224) = *(void *)(v9 - 8);
  *(void *)(v4 + 232) = swift_task_alloc();
  *(void *)(v4 + 240) = swift_task_alloc();
  *(void *)(v4 + 248) = swift_task_alloc();
  *(void *)(v4 + 256) = swift_task_alloc();
  return _swift_task_switch(sub_1000E0B04, 0, 0);
}

uint64_t sub_1000E0B04()
{
  uint64_t v2 = v0[25];
  uint64_t v1 = v0[26];
  uint64_t v3 = v0[24];
  uint64_t v4 = (void (*)(void))v0[8];
  uint64_t v5 = sub_10001644C(&qword_1005A64B0);
  v0[33] = swift_allocBox();
  v4();
  AsyncValueSequence.makeAsyncIterator()();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  uint64_t v6 = (void *)swift_task_alloc();
  v0[34] = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_1000E0C18;
  uint64_t v7 = v0[19];
  return AsyncValueSequence.Iterator.next()(v7, v5);
}

uint64_t sub_1000E0C18()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_1000E0D14, 0, 0);
}

uint64_t sub_1000E0D14()
{
  uint64_t v1 = *(void *)(v0 + 152);
  if ((*(unsigned int (**)(uint64_t, uint64_t, void))(*(void *)(v0 + 168) + 48))(v1, 1, *(void *)(v0 + 160)) == 1)
  {
    uint64_t v2 = *(void **)(v0 + 56);
    sub_100016714(v1, &qword_1005A6498);
    static Logger.appUsage.getter();
    id v3 = v2;
    uint64_t v4 = Logger.logObject.getter();
    os_log_type_t v5 = static os_log_type_t.error.getter();
    BOOL v6 = os_log_type_enabled(v4, v5);
    uint64_t v7 = *(void **)(v0 + 56);
    if (v6)
    {
      uint64_t v8 = (uint8_t *)swift_slowAlloc();
      uint64_t v9 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v8 = 138412290;
      *(void *)(v0 + 32) = v7;
      id v10 = v7;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v9 = v7;

      _os_log_impl((void *)&_mh_execute_header, v4, v5, "[AccountCacheCoordinator/%@] Sequence abruptly ended", v8, 0xCu);
      sub_10001644C((uint64_t *)&unk_1005A3AA0);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    (*(void (**)(void, void))(*(void *)(v0 + 96) + 8))(*(void *)(v0 + 104), *(void *)(v0 + 88));
    swift_release();
LABEL_15:
    unint64_t v57 = 0;
    os_log_t loga = 0;
LABEL_16:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v51 = *(uint64_t (**)(NSObject *, os_log_t))(v0 + 8);
    return v51(v57, loga);
  }
  uint64_t v12 = *(void *)(v0 + 176);
  uint64_t v11 = *(void *)(v0 + 184);
  sub_100030134(v1, v11, &qword_1005A64A0);
  sub_100016588(v11, v12, &qword_1005A64A0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v14 = *(void *)(v0 + 248);
    uint64_t v13 = *(void *)(v0 + 256);
    uint64_t v15 = *(void *)(v0 + 240);
    uint64_t v56 = *(void *)(v0 + 232);
    os_log_t logb = *(os_log_t *)(v0 + 56);
    uint64_t v17 = *(void *)(v0 + 216);
    uint64_t v16 = *(void *)(v0 + 224);
    uint64_t v18 = *(void *)(v0 + 184);
    uint64_t v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 32);
    v19(v14, *(void *)(v0 + 176), v17);
    sub_1000E48B8(&qword_1005A6420, (void (*)(uint64_t))&type metadata accessor for AccountCachedServerData.Error);
    swift_willThrowTypedImpl();
    sub_100016714(v18, &qword_1005A64A0);
    v19(v13, v14, v17);
    swift_release();
    v19(v15, v13, v17);
    static Logger.appUsage.getter();
    uint64_t v20 = *(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16);
    v20(v56, v15, v17);
    int v21 = logb;
    uint64_t v22 = Logger.logObject.getter();
    os_log_type_t v23 = static os_log_type_t.error.getter();
    BOOL v24 = os_log_type_enabled(v22, v23);
    uint64_t v25 = *(void *)(v0 + 224);
    uint64_t v26 = *(void *)(v0 + 232);
    uint64_t v27 = *(void *)(v0 + 216);
    uint64_t v28 = *(NSObject **)(v0 + 56);
    if (v24)
    {
      uint64_t v55 = *(void *)(v0 + 216);
      uint64_t v29 = swift_slowAlloc();
      id v53 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v29 = 138412546;
      *(void *)(v0 + 40) = v28;
      unsigned int v54 = v20;
      uint64_t v30 = v28;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *id v53 = v28;

      *(_WORD *)(v29 + 12) = 2112;
      swift_allocError();
      uint64_t v31 = v26;
      v54(v32, v26, v55);
      uint64_t v33 = _swift_stdlib_bridgeErrorToNSError();
      *(void *)(v0 + 48) = v33;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      v53[1] = v33;
      unint64_t v34 = *(void (**)(uint64_t, uint64_t))(v25 + 8);
      v34(v31, v55);
      uint64_t v28 = v22;
      _os_log_impl((void *)&_mh_execute_header, v22, v23, "[AccountCacheCoordinator/%@] Encountered AccountCachedServerData update service error: %@", (uint8_t *)v29, 0x16u);
      sub_10001644C((uint64_t *)&unk_1005A3AA0);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      unint64_t v34 = *(void (**)(uint64_t, uint64_t))(v25 + 8);
      v34(v26, v27);
    }
    uint64_t v49 = *(void *)(v0 + 240);
    uint64_t v50 = *(void *)(v0 + 216);
    (*(void (**)(void, void))(*(void *)(v0 + 96) + 8))(*(void *)(v0 + 112), *(void *)(v0 + 88));
    v34(v49, v50);
    goto LABEL_15;
  }
  char v35 = *(unsigned char *)(v0 + 304);
  uint64_t v36 = *(void **)(v0 + 56);
  (*(void (**)(void, void, void))(*(void *)(v0 + 128) + 32))(*(void *)(v0 + 144), *(void *)(v0 + 176), *(void *)(v0 + 120));
  uint64_t v37 = sub_1000DED78(v35, v36);
  uint64_t v39 = *(void *)(v0 + 264);
  if (v38 != 1)
  {
    uint64_t v52 = *(void *)(v0 + 184);
    unint64_t v57 = v37;
    os_log_t loga = v38;
    (*(void (**)(void, void))(*(void *)(v0 + 128) + 8))(*(void *)(v0 + 144), *(void *)(v0 + 120));
    sub_100016714(v52, &qword_1005A64A0);
    swift_release();
    goto LABEL_16;
  }
  uint64_t v40 = *(void *)(v0 + 80);
  char v41 = *(unsigned char *)(v0 + 304);
  uint64_t v42 = *(void **)(v0 + 56);
  uint64_t v43 = type metadata accessor for TaskPriority();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v43 - 8) + 56))(v40, 1, 1, v43);
  uint64_t v44 = swift_allocObject();
  *(void *)(v44 + 16) = 0;
  *(void *)(v44 + 24) = 0;
  *(void *)(v44 + 32) = v39;
  *(unsigned char *)(v44 + 40) = v41;
  *(void *)(v44 + 48) = v42;
  os_log_t log = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1005A64C8
                                                                                              + dword_1005A64C8);
  id v45 = v42;
  swift_retain();
  uint64_t v46 = (void *)swift_task_alloc();
  *(void *)(v0 + 280) = v46;
  *uint64_t v46 = v0;
  v46[1] = sub_1000E14BC;
  uint64_t v47 = *(void *)(v0 + 80);
  return log(0x40AAD21B3B700000, 3, 0, 0, v47, (uint64_t)&unk_1005A64C0, v44);
}

uint64_t sub_1000E14BC(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = *v3;
  uint64_t v6 = *v3;
  swift_task_dealloc();
  uint64_t v8 = *(void *)(v6 + 80);
  if (v2)
  {
    swift_errorRelease();
    sub_100016714(v8, &qword_1005A4640);
    uint64_t v9 = sub_1000E1810;
  }
  else
  {
    *(void *)(v7 + 288) = a2;
    *(void *)(v7 + 296) = a1;
    sub_100016714(v8, &qword_1005A4640);
    uint64_t v9 = sub_1000E1624;
  }
  return _swift_task_switch(v9, 0, 0);
}

uint64_t sub_1000E1624()
{
  uint64_t v2 = v0[36];
  uint64_t v1 = v0[37];
  (*(void (**)(void, void, void))(v0[16] + 16))(v0[17], v0[18], v0[15]);
  uint64_t v3 = v0[23];
  uint64_t v5 = v0[17];
  uint64_t v4 = v0[18];
  uint64_t v7 = v0[15];
  uint64_t v6 = v0[16];
  if (v2)
  {
    uint64_t v13 = v1;
    uint64_t v8 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
    v8(v5, v7);
    v8(v4, v7);
    sub_100016714(v3, &qword_1005A64A0);
    swift_release();
    uint64_t v12 = v2;
  }
  else
  {
    AccountCachedServerData.CachedValue.value.getter();
    uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
    v9(v5, v7);
    v9(v4, v7);
    sub_100016714(v3, &qword_1005A64A0);
    swift_release();
    uint64_t v12 = v0[3];
    uint64_t v13 = v0[2];
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v10 = (uint64_t (*)(uint64_t, uint64_t))v0[1];
  return v10(v13, v12);
}

uint64_t sub_1000E1810()
{
  (*(void (**)(void, void, void))(v0[16] + 16))(v0[17], v0[18], v0[15]);
  uint64_t v1 = v0[23];
  uint64_t v3 = v0[17];
  uint64_t v2 = v0[18];
  uint64_t v4 = v0[15];
  uint64_t v5 = v0[16];
  AccountCachedServerData.CachedValue.value.getter();
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v6(v3, v4);
  v6(v2, v4);
  sub_100016714(v1, &qword_1005A64A0);
  swift_release();
  uint64_t v9 = v0[3];
  uint64_t v10 = v0[2];
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))v0[1];
  return v7(v10, v9);
}

uint64_t sub_1000E19A8(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 64) = a3;
  *(void *)(v4 + 72) = a4;
  *(unsigned char *)(v4 + 25) = a2;
  *(void *)(v4 + 56) = a1;
  sub_10001644C(&qword_1005A4640);
  *(void *)(v4 + 80) = swift_task_alloc();
  uint64_t v5 = type metadata accessor for Logger();
  *(void *)(v4 + 88) = v5;
  *(void *)(v4 + 96) = *(void *)(v5 - 8);
  *(void *)(v4 + 104) = swift_task_alloc();
  *(void *)(v4 + 112) = swift_task_alloc();
  uint64_t v6 = sub_10001644C(&qword_1005A63F8);
  *(void *)(v4 + 120) = v6;
  *(void *)(v4 + 128) = *(void *)(v6 - 8);
  *(void *)(v4 + 136) = swift_task_alloc();
  *(void *)(v4 + 144) = swift_task_alloc();
  sub_10001644C(&qword_1005A6400);
  *(void *)(v4 + 152) = swift_task_alloc();
  uint64_t v7 = sub_10001644C(&qword_1005A6408);
  *(void *)(v4 + 160) = v7;
  *(void *)(v4 + 168) = *(void *)(v7 - 8);
  *(void *)(v4 + 176) = swift_task_alloc();
  *(void *)(v4 + 184) = swift_task_alloc();
  uint64_t v8 = sub_10001644C(&qword_1005A6410);
  *(void *)(v4 + 192) = v8;
  *(void *)(v4 + 200) = *(void *)(v8 - 8);
  *(void *)(v4 + 208) = swift_task_alloc();
  uint64_t v9 = type metadata accessor for AccountCachedServerData.Error();
  *(void *)(v4 + 216) = v9;
  *(void *)(v4 + 224) = *(void *)(v9 - 8);
  *(void *)(v4 + 232) = swift_task_alloc();
  *(void *)(v4 + 240) = swift_task_alloc();
  *(void *)(v4 + 248) = swift_task_alloc();
  *(void *)(v4 + 256) = swift_task_alloc();
  return _swift_task_switch(sub_1000E1CA4, 0, 0);
}

uint64_t sub_1000E1CA4()
{
  uint64_t v2 = v0[25];
  uint64_t v1 = v0[26];
  uint64_t v3 = v0[24];
  uint64_t v4 = (void (*)(void))v0[8];
  uint64_t v5 = sub_10001644C(&qword_1005A6418);
  v0[33] = swift_allocBox();
  v4();
  AsyncValueSequence.makeAsyncIterator()();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  uint64_t v6 = (void *)swift_task_alloc();
  v0[34] = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_1000E1DB8;
  uint64_t v7 = v0[19];
  return AsyncValueSequence.Iterator.next()(v7, v5);
}

uint64_t sub_1000E1DB8()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_1000E1EB4, 0, 0);
}

uint64_t sub_1000E1EB4()
{
  uint64_t v1 = *(void *)(v0 + 152);
  if ((*(unsigned int (**)(uint64_t, uint64_t, void))(*(void *)(v0 + 168) + 48))(v1, 1, *(void *)(v0 + 160)) == 1)
  {
    uint64_t v2 = *(void **)(v0 + 56);
    sub_100016714(v1, &qword_1005A6400);
    static Logger.appUsage.getter();
    id v3 = v2;
    uint64_t v4 = Logger.logObject.getter();
    os_log_type_t v5 = static os_log_type_t.error.getter();
    BOOL v6 = os_log_type_enabled(v4, v5);
    uint64_t v7 = *(void **)(v0 + 56);
    if (v6)
    {
      uint64_t v8 = (uint8_t *)swift_slowAlloc();
      uint64_t v9 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v8 = 138412290;
      *(void *)(v0 + 32) = v7;
      id v10 = v7;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v9 = v7;

      _os_log_impl((void *)&_mh_execute_header, v4, v5, "[AccountCacheCoordinator/%@] Sequence abruptly ended", v8, 0xCu);
      sub_10001644C((uint64_t *)&unk_1005A3AA0);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    (*(void (**)(void, void))(*(void *)(v0 + 96) + 8))(*(void *)(v0 + 104), *(void *)(v0 + 88));
    swift_release();
LABEL_13:
    os_log_t log = 0;
    int v42 = 1;
    goto LABEL_14;
  }
  uint64_t v12 = *(void *)(v0 + 176);
  uint64_t v11 = *(void *)(v0 + 184);
  sub_100030134(v1, v11, &qword_1005A6408);
  sub_100016588(v11, v12, &qword_1005A6408);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v14 = *(void *)(v0 + 248);
    uint64_t v13 = *(void *)(v0 + 256);
    uint64_t v15 = *(void *)(v0 + 240);
    uint64_t v58 = *(void *)(v0 + 232);
    os_log_t logb = *(os_log_t *)(v0 + 56);
    uint64_t v17 = *(void *)(v0 + 216);
    uint64_t v16 = *(void *)(v0 + 224);
    uint64_t v18 = *(void *)(v0 + 184);
    uint64_t v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 32);
    v19(v14, *(void *)(v0 + 176), v17);
    sub_1000E48B8(&qword_1005A6420, (void (*)(uint64_t))&type metadata accessor for AccountCachedServerData.Error);
    swift_willThrowTypedImpl();
    sub_100016714(v18, &qword_1005A6408);
    v19(v13, v14, v17);
    swift_release();
    v19(v15, v13, v17);
    static Logger.appUsage.getter();
    uint64_t v20 = *(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16);
    v20(v58, v15, v17);
    int v21 = logb;
    uint64_t v22 = Logger.logObject.getter();
    os_log_type_t v23 = static os_log_type_t.error.getter();
    BOOL v24 = os_log_type_enabled(v22, v23);
    uint64_t v25 = *(void *)(v0 + 224);
    uint64_t v26 = *(void *)(v0 + 232);
    uint64_t v27 = *(void *)(v0 + 216);
    uint64_t v28 = *(NSObject **)(v0 + 56);
    if (v24)
    {
      uint64_t v57 = *(void *)(v0 + 216);
      uint64_t v29 = swift_slowAlloc();
      uint64_t v55 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v29 = 138412546;
      *(void *)(v0 + 40) = v28;
      uint64_t v56 = v20;
      uint64_t v30 = v28;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v55 = v28;

      *(_WORD *)(v29 + 12) = 2112;
      swift_allocError();
      uint64_t v31 = v26;
      v56(v32, v26, v57);
      uint64_t v33 = _swift_stdlib_bridgeErrorToNSError();
      *(void *)(v0 + 48) = v33;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      v55[1] = v33;
      unint64_t v34 = *(void (**)(uint64_t, uint64_t))(v25 + 8);
      v34(v31, v57);
      uint64_t v28 = v22;
      _os_log_impl((void *)&_mh_execute_header, v22, v23, "[AccountCacheCoordinator/%@] Encountered AccountCachedServerData update service error: %@", (uint8_t *)v29, 0x16u);
      sub_10001644C((uint64_t *)&unk_1005A3AA0);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      unint64_t v34 = *(void (**)(uint64_t, uint64_t))(v25 + 8);
      v34(v26, v27);
    }
    uint64_t v43 = *(void *)(v0 + 240);
    uint64_t v44 = *(void *)(v0 + 216);
    (*(void (**)(void, void))(*(void *)(v0 + 96) + 8))(*(void *)(v0 + 112), *(void *)(v0 + 88));
    v34(v43, v44);
    goto LABEL_13;
  }
  char v35 = *(unsigned char *)(v0 + 25);
  uint64_t v36 = *(void **)(v0 + 56);
  (*(void (**)(void, void, void))(*(void *)(v0 + 128) + 32))(*(void *)(v0 + 144), *(void *)(v0 + 176), *(void *)(v0 + 120));
  uint64_t v37 = sub_1000DF080(v35, v36);
  uint64_t v39 = *(void *)(v0 + 264);
  if ((v38 & 0x100) == 0)
  {
    char v40 = v38;
    uint64_t v41 = *(void *)(v0 + 184);
    os_log_t log = v37;
    (*(void (**)(void, void))(*(void *)(v0 + 128) + 8))(*(void *)(v0 + 144), *(void *)(v0 + 120));
    sub_100016714(v41, &qword_1005A6408);
    swift_release();
    int v42 = v40 & 1;
LABEL_14:
    unsigned int v59 = v42;
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    id v45 = *(uint64_t (**)(os_log_t, void))(v0 + 8);
    return v45(log, v59);
  }
  uint64_t v47 = *(void *)(v0 + 80);
  char v48 = *(unsigned char *)(v0 + 25);
  uint64_t v49 = *(void **)(v0 + 56);
  uint64_t v50 = type metadata accessor for TaskPriority();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 56))(v47, 1, 1, v50);
  uint64_t v51 = swift_allocObject();
  *(void *)(v51 + 16) = 0;
  *(void *)(v51 + 24) = 0;
  *(void *)(v51 + 32) = v39;
  *(unsigned char *)(v51 + 40) = v48;
  *(void *)(v51 + 48) = v49;
  os_log_t loga = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1005A6438
                                                                                               + dword_1005A6438);
  id v52 = v49;
  swift_retain();
  id v53 = (void *)swift_task_alloc();
  *(void *)(v0 + 280) = v53;
  *id v53 = v0;
  v53[1] = sub_1000E2668;
  uint64_t v54 = *(void *)(v0 + 80);
  return loga(0x40AAD21B3B700000, 3, 0, 0, v54, (uint64_t)&unk_1005A6430, v51);
}

uint64_t sub_1000E2668(uint64_t a1, char a2)
{
  uint64_t v7 = *v3;
  uint64_t v6 = *v3;
  swift_task_dealloc();
  uint64_t v8 = *(void *)(v6 + 80);
  if (v2)
  {
    swift_errorRelease();
    sub_100016714(v8, &qword_1005A4640);
    uint64_t v9 = sub_1000E29CC;
  }
  else
  {
    *(unsigned char *)(v7 + 26) = a2;
    *(void *)(v7 + 288) = a1;
    sub_100016714(v8, &qword_1005A4640);
    uint64_t v9 = sub_1000E27D4;
  }
  return _swift_task_switch(v9, 0, 0);
}

uint64_t sub_1000E27D4()
{
  uint64_t v1 = *(void *)(v0 + 288);
  char v2 = *(unsigned char *)(v0 + 26);
  (*(void (**)(void, void, void))(*(void *)(v0 + 128) + 16))(*(void *)(v0 + 136), *(void *)(v0 + 144), *(void *)(v0 + 120));
  uint64_t v3 = *(void *)(v0 + 184);
  uint64_t v5 = *(void *)(v0 + 136);
  uint64_t v4 = *(void *)(v0 + 144);
  uint64_t v6 = *(void *)(v0 + 120);
  uint64_t v7 = *(void *)(v0 + 128);
  if (v2)
  {
    AccountCachedServerData.CachedValue.value.getter();
    uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
    v9(v5, v6);
    v9(v4, v6);
    sub_100016714(v3, &qword_1005A6408);
    swift_release();
    uint64_t v12 = *(void *)(v0 + 16);
    unsigned int v13 = *(unsigned __int8 *)(v0 + 24);
  }
  else
  {
    uint64_t v8 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
    v8(*(void *)(v0 + 136), *(void *)(v0 + 120));
    v8(v4, v6);
    sub_100016714(v3, &qword_1005A6408);
    swift_release();
    unsigned int v13 = 0;
    uint64_t v12 = v1;
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v10 = *(uint64_t (**)(uint64_t, void))(v0 + 8);
  return v10(v12, v13);
}

uint64_t sub_1000E29CC()
{
  (*(void (**)(void, void, void))(*(void *)(v0 + 128) + 16))(*(void *)(v0 + 136), *(void *)(v0 + 144), *(void *)(v0 + 120));
  uint64_t v1 = *(void *)(v0 + 184);
  uint64_t v3 = *(void *)(v0 + 136);
  uint64_t v2 = *(void *)(v0 + 144);
  uint64_t v4 = *(void *)(v0 + 120);
  uint64_t v5 = *(void *)(v0 + 128);
  AccountCachedServerData.CachedValue.value.getter();
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v6(v3, v4);
  v6(v2, v4);
  sub_100016714(v1, &qword_1005A6408);
  swift_release();
  uint64_t v10 = *(void *)(v0 + 16);
  unsigned int v9 = *(unsigned __int8 *)(v0 + 24);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = *(uint64_t (**)(uint64_t, void))(v0 + 8);
  return v7(v10, v9);
}

uint64_t sub_1000E2B6C(uint64_t a1, char a2, uint64_t a3)
{
  *(void *)(v3 + 64) = a3;
  *(unsigned char *)(v3 + 232) = a2;
  uint64_t v4 = type metadata accessor for Logger();
  *(void *)(v3 + 72) = v4;
  *(void *)(v3 + 80) = *(void *)(v4 - 8);
  *(void *)(v3 + 88) = swift_task_alloc();
  *(void *)(v3 + 96) = swift_task_alloc();
  uint64_t v5 = type metadata accessor for AccountCachedServerData.Error();
  *(void *)(v3 + 104) = v5;
  *(void *)(v3 + 112) = *(void *)(v5 - 8);
  *(void *)(v3 + 120) = swift_task_alloc();
  *(void *)(v3 + 128) = swift_task_alloc();
  uint64_t v6 = sub_10001644C(&qword_1005A6490);
  *(void *)(v3 + 136) = v6;
  *(void *)(v3 + 144) = *(void *)(v6 - 8);
  *(void *)(v3 + 152) = swift_task_alloc();
  *(void *)(v3 + 160) = swift_task_alloc();
  sub_10001644C(&qword_1005A6498);
  *(void *)(v3 + 168) = swift_task_alloc();
  uint64_t v7 = sub_10001644C(&qword_1005A64A0);
  *(void *)(v3 + 176) = v7;
  *(void *)(v3 + 184) = *(void *)(v7 - 8);
  *(void *)(v3 + 192) = swift_task_alloc();
  *(void *)(v3 + 200) = swift_task_alloc();
  *(void *)(v3 + 208) = sub_10001644C(&qword_1005A64B0);
  *(void *)(v3 + 216) = swift_projectBox();
  return _swift_task_switch(sub_1000E2DDC, 0, 0);
}

uint64_t sub_1000E2DDC()
{
  swift_beginAccess();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[28] = v1;
  void *v1 = v0;
  v1[1] = sub_1000E2E8C;
  uint64_t v2 = v0[26];
  uint64_t v3 = v0[21];
  return AsyncValueSequence.Iterator.next()(v3, v2);
}

uint64_t sub_1000E2E8C()
{
  swift_task_dealloc();
  swift_endAccess();
  return _swift_task_switch(sub_1000E2F94, 0, 0);
}

uint64_t sub_1000E2F94()
{
  uint64_t v1 = *(void *)(v0 + 168);
  if ((*(unsigned int (**)(uint64_t, uint64_t, void))(*(void *)(v0 + 184) + 48))(v1, 1, *(void *)(v0 + 176)) == 1)
  {
    uint64_t v2 = *(void **)(v0 + 64);
    sub_100016714(v1, &qword_1005A6498);
    static Logger.appUsage.getter();
    id v3 = v2;
    uint64_t v4 = Logger.logObject.getter();
    os_log_type_t v5 = static os_log_type_t.error.getter();
    BOOL v6 = os_log_type_enabled(v4, v5);
    uint64_t v7 = *(void **)(v0 + 64);
    if (v6)
    {
      uint64_t v8 = (uint8_t *)swift_slowAlloc();
      uint64_t v54 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v8 = 138412290;
      *(void *)(v0 + 56) = v7;
      id v9 = v7;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v54 = v7;

      _os_log_impl((void *)&_mh_execute_header, v4, v5, "[AccountCacheCoordinator/%@] Sequence abruptly ended", v8, 0xCu);
      sub_10001644C((uint64_t *)&unk_1005A3AA0);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      uint64_t v4 = *(NSObject **)(v0 + 64);
    }
    uint64_t v21 = *(void *)(v0 + 80);
    uint64_t v20 = *(void *)(v0 + 88);
    uint64_t v22 = *(void *)(v0 + 72);

    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v20, v22);
    uint64_t v55 = 0;
    uint64_t v23 = 0;
    goto LABEL_16;
  }
  uint64_t v11 = *(void *)(v0 + 192);
  uint64_t v10 = *(void *)(v0 + 200);
  sub_100030134(v1, v10, &qword_1005A64A0);
  sub_100016588(v10, v11, &qword_1005A64A0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v12 = *(void *)(v0 + 200);
    uint64_t v13 = *(void *)(v0 + 120);
    uint64_t v14 = *(void *)(v0 + 128);
    uint64_t v15 = *(void *)(v0 + 104);
    uint64_t v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 + 112) + 32);
    v16(v14, *(void *)(v0 + 192), v15);
    sub_1000E48B8(&qword_1005A6420, (void (*)(uint64_t))&type metadata accessor for AccountCachedServerData.Error);
    swift_willThrowTypedImpl();
    v16(v13, v14, v15);
    swift_allocError();
    v16(v17, v13, v15);
    sub_100016714(v12, &qword_1005A64A0);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v18 = *(uint64_t (**)(void))(v0 + 8);
    return v18();
  }
  uint64_t v24 = *(void *)(v0 + 152);
  uint64_t v25 = *(void *)(v0 + 160);
  uint64_t v26 = *(void *)(v0 + 136);
  uint64_t v27 = *(void *)(v0 + 144);
  int v28 = *(unsigned __int8 *)(v0 + 232);
  (*(void (**)(uint64_t, void, uint64_t))(v27 + 32))(v25, *(void *)(v0 + 192), v26);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v27 + 16))(v24, v25, v26);
  uint64_t v29 = *(void *)(v0 + 152);
  uint64_t v30 = *(void *)(v0 + 136);
  uint64_t v31 = (void (**)(uint64_t, uint64_t))(*(void *)(v0 + 144) + 8);
  if (v28 == 1)
  {
    uint64_t v32 = *v31;
    (*v31)(*(void *)(v0 + 152), *(void *)(v0 + 136));
LABEL_15:
    uint64_t v41 = *(void *)(v0 + 200);
    uint64_t v42 = *(void *)(v0 + 160);
    uint64_t v43 = *(void *)(v0 + 136);
    AccountCachedServerData.CachedValue.value.getter();
    uint64_t v23 = *(void *)(v0 + 48);
    uint64_t v55 = *(void *)(v0 + 40);
    v32(v42, v43);
    sub_100016714(v41, &qword_1005A64A0);
LABEL_16:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v44 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
    return v44(v55, v23);
  }
  char v33 = AccountCachedServerData.CachedValue.isStale.getter();
  uint64_t v32 = *v31;
  (*v31)(v29, v30);
  if ((v33 & 1) == 0) {
    goto LABEL_15;
  }
  unint64_t v34 = *(void **)(v0 + 64);
  static Logger.appUsage.getter();
  id v35 = v34;
  uint64_t v36 = Logger.logObject.getter();
  os_log_type_t v37 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v36, v37))
  {
    uint64_t v38 = *(void *)(v0 + 64);
    uint64_t v39 = swift_slowAlloc();
    char v40 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v39 = 138412290;
    *(void *)(v39 + 4) = v38;
    *char v40 = v38;
    _os_log_impl((void *)&_mh_execute_header, v36, v37, "[AccountCacheCoordinator/%@] Not using stale value)", (uint8_t *)v39, 0xCu);
    sub_10001644C((uint64_t *)&unk_1005A3AA0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    uint64_t v36 = *(NSObject **)(v0 + 64);
  }
  uint64_t v45 = *(void *)(v0 + 200);
  uint64_t v46 = *(void *)(v0 + 160);
  uint64_t v47 = *(void *)(v0 + 136);
  uint64_t v48 = *(void *)(v0 + 96);
  uint64_t v50 = *(void *)(v0 + 72);
  uint64_t v49 = *(void *)(v0 + 80);

  (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v48, v50);
  v32(v46, v47);
  sub_100016714(v45, &qword_1005A64A0);
  swift_beginAccess();
  uint64_t v51 = (void *)swift_task_alloc();
  *(void *)(v0 + 224) = v51;
  *uint64_t v51 = v0;
  v51[1] = sub_1000E2E8C;
  uint64_t v52 = *(void *)(v0 + 208);
  uint64_t v53 = *(void *)(v0 + 168);
  return AsyncValueSequence.Iterator.next()(v53, v52);
}

uint64_t sub_1000E365C(uint64_t a1, char a2, uint64_t a3)
{
  *(void *)(v3 + 64) = a3;
  *(unsigned char *)(v3 + 49) = a2;
  uint64_t v4 = type metadata accessor for Logger();
  *(void *)(v3 + 72) = v4;
  *(void *)(v3 + 80) = *(void *)(v4 - 8);
  *(void *)(v3 + 88) = swift_task_alloc();
  *(void *)(v3 + 96) = swift_task_alloc();
  uint64_t v5 = type metadata accessor for AccountCachedServerData.Error();
  *(void *)(v3 + 104) = v5;
  *(void *)(v3 + 112) = *(void *)(v5 - 8);
  *(void *)(v3 + 120) = swift_task_alloc();
  *(void *)(v3 + 128) = swift_task_alloc();
  uint64_t v6 = sub_10001644C(&qword_1005A63F8);
  *(void *)(v3 + 136) = v6;
  *(void *)(v3 + 144) = *(void *)(v6 - 8);
  *(void *)(v3 + 152) = swift_task_alloc();
  *(void *)(v3 + 160) = swift_task_alloc();
  sub_10001644C(&qword_1005A6400);
  *(void *)(v3 + 168) = swift_task_alloc();
  uint64_t v7 = sub_10001644C(&qword_1005A6408);
  *(void *)(v3 + 176) = v7;
  *(void *)(v3 + 184) = *(void *)(v7 - 8);
  *(void *)(v3 + 192) = swift_task_alloc();
  *(void *)(v3 + 200) = swift_task_alloc();
  *(void *)(v3 + 208) = sub_10001644C(&qword_1005A6418);
  *(void *)(v3 + 216) = swift_projectBox();
  return _swift_task_switch(sub_1000E38CC, 0, 0);
}

uint64_t sub_1000E38CC()
{
  swift_beginAccess();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[28] = v1;
  void *v1 = v0;
  v1[1] = sub_1000E397C;
  uint64_t v2 = v0[26];
  uint64_t v3 = v0[21];
  return AsyncValueSequence.Iterator.next()(v3, v2);
}

uint64_t sub_1000E397C()
{
  swift_task_dealloc();
  swift_endAccess();
  return _swift_task_switch(sub_1000E3A84, 0, 0);
}

uint64_t sub_1000E3A84()
{
  uint64_t v1 = *(void *)(v0 + 168);
  if ((*(unsigned int (**)(uint64_t, uint64_t, void))(*(void *)(v0 + 184) + 48))(v1, 1, *(void *)(v0 + 176)) == 1)
  {
    uint64_t v2 = *(void **)(v0 + 64);
    sub_100016714(v1, &qword_1005A6400);
    static Logger.appUsage.getter();
    id v3 = v2;
    uint64_t v4 = Logger.logObject.getter();
    os_log_type_t v5 = static os_log_type_t.error.getter();
    BOOL v6 = os_log_type_enabled(v4, v5);
    uint64_t v7 = *(void **)(v0 + 64);
    if (v6)
    {
      uint64_t v8 = (uint8_t *)swift_slowAlloc();
      uint64_t v54 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v8 = 138412290;
      *(void *)(v0 + 56) = v7;
      id v9 = v7;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v54 = v7;

      _os_log_impl((void *)&_mh_execute_header, v4, v5, "[AccountCacheCoordinator/%@] Sequence abruptly ended", v8, 0xCu);
      sub_10001644C((uint64_t *)&unk_1005A3AA0);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      uint64_t v4 = *(NSObject **)(v0 + 64);
    }
    uint64_t v21 = *(void *)(v0 + 80);
    uint64_t v20 = *(void *)(v0 + 88);
    uint64_t v22 = *(void *)(v0 + 72);

    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v20, v22);
    uint64_t v55 = 0;
    uint64_t v23 = 1;
    goto LABEL_16;
  }
  uint64_t v11 = *(void *)(v0 + 192);
  uint64_t v10 = *(void *)(v0 + 200);
  sub_100030134(v1, v10, &qword_1005A6408);
  sub_100016588(v10, v11, &qword_1005A6408);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v12 = *(void *)(v0 + 200);
    uint64_t v13 = *(void *)(v0 + 120);
    uint64_t v14 = *(void *)(v0 + 128);
    uint64_t v15 = *(void *)(v0 + 104);
    uint64_t v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 + 112) + 32);
    v16(v14, *(void *)(v0 + 192), v15);
    sub_1000E48B8(&qword_1005A6420, (void (*)(uint64_t))&type metadata accessor for AccountCachedServerData.Error);
    swift_willThrowTypedImpl();
    v16(v13, v14, v15);
    swift_allocError();
    v16(v17, v13, v15);
    sub_100016714(v12, &qword_1005A6408);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v18 = *(uint64_t (**)(void))(v0 + 8);
    return v18();
  }
  uint64_t v24 = *(void *)(v0 + 152);
  uint64_t v25 = *(void *)(v0 + 160);
  uint64_t v26 = *(void *)(v0 + 136);
  uint64_t v27 = *(void *)(v0 + 144);
  int v28 = *(unsigned __int8 *)(v0 + 49);
  (*(void (**)(uint64_t, void, uint64_t))(v27 + 32))(v25, *(void *)(v0 + 192), v26);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v27 + 16))(v24, v25, v26);
  uint64_t v29 = *(void *)(v0 + 152);
  uint64_t v30 = *(void *)(v0 + 136);
  uint64_t v31 = (void (**)(uint64_t, uint64_t))(*(void *)(v0 + 144) + 8);
  if (v28 == 1)
  {
    uint64_t v32 = *v31;
    (*v31)(*(void *)(v0 + 152), *(void *)(v0 + 136));
LABEL_15:
    uint64_t v41 = *(void *)(v0 + 200);
    uint64_t v42 = *(void *)(v0 + 160);
    uint64_t v43 = *(void *)(v0 + 136);
    AccountCachedServerData.CachedValue.value.getter();
    uint64_t v55 = *(void *)(v0 + 40);
    uint64_t v23 = *(unsigned __int8 *)(v0 + 48);
    v32(v42, v43);
    sub_100016714(v41, &qword_1005A6408);
LABEL_16:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v44 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
    return v44(v55, v23);
  }
  char v33 = AccountCachedServerData.CachedValue.isStale.getter();
  uint64_t v32 = *v31;
  (*v31)(v29, v30);
  if ((v33 & 1) == 0) {
    goto LABEL_15;
  }
  unint64_t v34 = *(void **)(v0 + 64);
  static Logger.appUsage.getter();
  id v35 = v34;
  uint64_t v36 = Logger.logObject.getter();
  os_log_type_t v37 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v36, v37))
  {
    uint64_t v38 = *(void *)(v0 + 64);
    uint64_t v39 = swift_slowAlloc();
    char v40 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v39 = 138412290;
    *(void *)(v39 + 4) = v38;
    *char v40 = v38;
    _os_log_impl((void *)&_mh_execute_header, v36, v37, "[AccountCacheCoordinator/%@] Not using stale value)", (uint8_t *)v39, 0xCu);
    sub_10001644C((uint64_t *)&unk_1005A3AA0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    uint64_t v36 = *(NSObject **)(v0 + 64);
  }
  uint64_t v45 = *(void *)(v0 + 200);
  uint64_t v46 = *(void *)(v0 + 160);
  uint64_t v47 = *(void *)(v0 + 136);
  uint64_t v48 = *(void *)(v0 + 96);
  uint64_t v50 = *(void *)(v0 + 72);
  uint64_t v49 = *(void *)(v0 + 80);

  (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v48, v50);
  v32(v46, v47);
  sub_100016714(v45, &qword_1005A6408);
  swift_beginAccess();
  uint64_t v51 = (void *)swift_task_alloc();
  *(void *)(v0 + 224) = v51;
  *uint64_t v51 = v0;
  v51[1] = sub_1000E397C;
  uint64_t v52 = *(void *)(v0 + 208);
  uint64_t v53 = *(void *)(v0 + 168);
  return AsyncValueSequence.Iterator.next()(v53, v52);
}

uint64_t sub_1000E4150(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  *(unsigned char *)(v4 + 104) = a4;
  *(void *)(v4 + 24) = a2;
  *(void *)(v4 + 32) = a3;
  *(void *)(v4 + 16) = a1;
  uint64_t v5 = type metadata accessor for AccountIdentity();
  *(void *)(v4 + 40) = v5;
  *(void *)(v4 + 48) = *(void *)(v5 - 8);
  *(void *)(v4 + 56) = swift_task_alloc();
  *(void *)(v4 + 64) = swift_task_alloc();
  return _swift_task_switch(sub_1000E4228, 0, 0);
}

uint64_t sub_1000E4228()
{
  if (objc_msgSend(*(id *)(v0 + 24), "ams_accountID"))
  {
    uint64_t v1 = *(void *)(v0 + 56);
    uint64_t v2 = *(void *)(v0 + 64);
    uint64_t v3 = *(void *)(v0 + 40);
    uint64_t v4 = *(void *)(v0 + 48);
    uint64_t v6 = *(void *)(v0 + 16);
    uint64_t v5 = *(void **)(v0 + 24);
    AccountIdentity.init(amsAccountID:)();

    (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32))(v2, v1, v3);
    type metadata accessor for AccountCachedServerData();
    uint64_t result = static AccountCachedServerData.shared.getter();
    *(void *)(v0 + 72) = result;
    if (v6 < 0)
    {
      __break(1u);
    }
    else
    {
      uint64_t v8 = result;
      uint64_t result = AccountCachedServerData.IntKey.init(rawValue:)();
      if ((v9 & 1) == 0)
      {
        uint64_t v10 = result;
        uint64_t v11 = *(void *)(v0 + 64);
        uint64_t v12 = (void *)swift_task_alloc();
        *(void *)(v0 + 80) = v12;
        v12[2] = v8;
        v12[3] = v10;
        v12[4] = v11;
        uint64_t v13 = (void *)swift_task_alloc();
        *(void *)(v0 + 88) = v13;
        *uint64_t v13 = v0;
        v13[1] = sub_1000E43E0;
        char v14 = *(unsigned char *)(v0 + 104);
        uint64_t v15 = *(void *)(v0 + 32);
        return sub_1000E19A8(v15, v14, (uint64_t)sub_1000E45B4, (uint64_t)v12);
      }
    }
    __break(1u);
    return result;
  }

  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v16 = *(uint64_t (**)(void))(v0 + 8);
  return v16(0);
}

uint64_t sub_1000E43E0(uint64_t a1, char a2)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 96) = a1;
  *(unsigned char *)(v3 + 105) = a2;
  swift_task_dealloc();
  swift_task_dealloc();
  return _swift_task_switch(sub_1000E4504, 0, 0);
}

uint64_t sub_1000E4504()
{
  char v1 = *(unsigned char *)(v0 + 105);
  uint64_t v2 = *(void *)(v0 + 96);
  uint64_t v3 = *(void *)(v0 + 64);
  uint64_t v4 = *(void *)(v0 + 40);
  uint64_t v5 = *(void *)(v0 + 48);

  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
  if (v1) {
    uint64_t v6 = 0;
  }
  else {
    uint64_t v6 = v2;
  }
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v7(v6);
}

uint64_t sub_1000E45B4()
{
  return AccountCachedServerData.intSequence(forKey:accountID:)();
}

uint64_t sub_1000E45E4(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = *(void *)(v1 + 32);
  char v7 = *(unsigned char *)(v1 + 40);
  uint64_t v8 = *(void *)(v1 + 48);
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_1000184D8;
  uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char, uint64_t))((char *)&dword_1005A6428
                                                                                  + dword_1005A6428);
  return v10(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_1000E46C4(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = v2[2];
  uint64_t v7 = v2[3];
  uint64_t v8 = v2[4];
  uint64_t v9 = v2[5];
  uint64_t v11 = v2[6];
  uint64_t v10 = v2[7];
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v12;
  *uint64_t v12 = v3;
  v12[1] = sub_1000184D8;
  uint64_t v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1005A6448 + dword_1005A6448);
  return v13(a1, a2, v6, v7, v8, v9, v11, v10);
}

uint64_t sub_1000E47B8(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for ContinuousClock.Instant() - 8);
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v6 = *(void *)(v1 + 24);
  uint64_t v7 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_1000184D8;
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1005A6460 + dword_1005A6460);
  return v9(a1, v5, v6, v7);
}

uint64_t sub_1000E48B8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000E4904()
{
  swift_unknownObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_1000E494C(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = *(void *)(v1 + 32);
  char v7 = *(unsigned char *)(v1 + 40);
  uint64_t v8 = *(void *)(v1 + 48);
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_100005040;
  uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char, uint64_t))((char *)&dword_1005A64B8
                                                                                  + dword_1005A64B8);
  return v10(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_1000E4A2C(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = v2[2];
  uint64_t v7 = v2[3];
  uint64_t v8 = v2[4];
  uint64_t v9 = v2[5];
  uint64_t v11 = v2[6];
  uint64_t v10 = v2[7];
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v12;
  *uint64_t v12 = v3;
  v12[1] = sub_1000184D8;
  uint64_t v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1005A64D0 + dword_1005A64D0);
  return v13(a1, a2, v6, v7, v8, v9, v11, v10);
}

uint64_t sub_1000E4B20()
{
  uint64_t v1 = type metadata accessor for ContinuousClock.Instant();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1000E4BEC(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for ContinuousClock.Instant() - 8);
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v6 = *(void *)(v1 + 24);
  uint64_t v7 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_1000184D8;
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1005A64E8 + dword_1005A64E8);
  return v9(a1, v5, v6, v7);
}

uint64_t sub_1000E4CF4(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0) {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2) {
    return String.subscript.getter();
  }
  else {
    return 0;
  }
}

uint64_t sub_1000E4D3C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = a3[2];
  if (!v3) {
    return 0;
  }
  if (a3[4] == a1 && a3[5] == a2) {
    return 1;
  }
  uint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)();
  if (result) {
    return 1;
  }
  if (v3 == 1) {
    return 0;
  }
  uint64_t v9 = a3 + 7;
  for (uint64_t i = 1; ; ++i)
  {
    uint64_t v11 = i + 1;
    if (__OFADD__(i, 1)) {
      break;
    }
    BOOL v12 = *(v9 - 1) == a1 && *v9 == a2;
    if (v12 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
      return 1;
    }
    uint64_t result = 0;
    v9 += 2;
    if (v11 == v3) {
      return result;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1000E4E08(uint64_t result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  if (!v2) {
    return 0;
  }
  if (*(void *)(a2 + 32) == result) {
    return 1;
  }
  if (v2 == 1) {
    return 0;
  }
  for (uint64_t i = 5; ; ++i)
  {
    uint64_t v4 = i - 3;
    if (__OFADD__(i - 4, 1)) {
      break;
    }
    BOOL v6 = *(void *)(a2 + 8 * i) == result;
    BOOL v5 = v6;
    BOOL v6 = v6 || v4 == v2;
    if (v6) {
      return v5;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1000E4E6C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  if (!v2) {
    return 0;
  }
  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v5 = v4;
  if (v3 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v5 == v6)
  {
LABEL_20:
    swift_bridgeObjectRelease_n();
    return 1;
  }
  char v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if (v8)
  {
LABEL_7:
    swift_bridgeObjectRelease();
    return 1;
  }
  if (v2 == 1)
  {
LABEL_17:
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v10 = 5;
  while (1)
  {
    uint64_t v11 = v10 - 3;
    if (__OFADD__(v10 - 4, 1)) {
      break;
    }
    uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v14 = v13;
    if (v12 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v14 == v15)
    {
      swift_bridgeObjectRelease();
      goto LABEL_20;
    }
    char v17 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    if (v17) {
      goto LABEL_7;
    }
    ++v10;
    if (v11 == v2) {
      goto LABEL_17;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1000E500C(void *a1)
{
  uint64_t v3 = sub_10001644C(&qword_1005A68B0);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10002FD00(a1, a1[3]);
  sub_1000EEE0C();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  v8[15] = 0;
  type metadata accessor for Date();
  sub_1000ECDD0(&qword_1005A68C0, (void (*)(uint64_t))&type metadata accessor for Date);
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  if (!v1)
  {
    type metadata accessor for QALogger.Asset(0);
    v8[14] = 1;
    KeyedEncodingContainer.encode(_:forKey:)();
    v8[13] = 2;
    KeyedEncodingContainer.encode(_:forKey:)();
    v8[12] = 3;
    KeyedEncodingContainer.encode(_:forKey:)();
    v8[11] = 4;
    KeyedEncodingContainer.encode(_:forKey:)();
    v8[10] = 5;
    type metadata accessor for URL();
    sub_1000ECDD0(&qword_1005A68C8, (void (*)(uint64_t))&type metadata accessor for URL);
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    v8[9] = 6;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1000E5300()
{
  uint64_t result = 0x6D617473656D6974;
  switch(*v0)
  {
    case 1:
      uint64_t result = 6775156;
      break;
    case 2:
      uint64_t result = 0x79654B676F6CLL;
      break;
    case 3:
      uint64_t result = 0x61746C65447369;
      break;
    case 4:
      uint64_t result = 0x6C6C617261507369;
      break;
    case 5:
      uint64_t result = 7107189;
      break;
    case 6:
      uint64_t result = 0x746E6169726176;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1000E53D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1000EB6B4(a1, a2);
  *a3 = result;
  return result;
}

void sub_1000E5400(unsigned char *a1@<X8>)
{
  *a1 = 7;
}

uint64_t sub_1000E540C(uint64_t a1)
{
  unint64_t v2 = sub_1000EEE0C();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1000E5448(uint64_t a1)
{
  unint64_t v2 = sub_1000EEE0C();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1000E5490(void *a1)
{
  return sub_1000E500C(a1);
}

uint64_t sub_1000E561C(char a1)
{
  uint64_t result = 0x6D617473656D6974;
  switch(a1)
  {
    case 1:
      uint64_t result = 6775156;
      break;
    case 2:
      uint64_t result = 0x79654B676F6CLL;
      break;
    case 3:
      uint64_t result = 0xD000000000000011;
      break;
    case 4:
      unsigned int v3 = 1416522093;
      goto LABEL_7;
    case 5:
      unsigned int v3 = 1417175405;
LABEL_7:
      uint64_t result = v3 | 0x756F726800000000;
      break;
    case 6:
      uint64_t result = 0x6E6F697461727564;
      break;
    case 7:
      uint64_t result = 0x6C6C617261507369;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1000E5720(void *a1)
{
  uint64_t v3 = sub_10001644C(&qword_1005A68D0);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10002FD00(a1, a1[3]);
  sub_1000EEE60();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  v8[15] = 0;
  type metadata accessor for Date();
  sub_1000ECDD0(&qword_1005A68C0, (void (*)(uint64_t))&type metadata accessor for Date);
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  if (!v1)
  {
    type metadata accessor for QALogger.LinearDownload(0);
    v8[14] = 1;
    KeyedEncodingContainer.encode(_:forKey:)();
    v8[13] = 2;
    KeyedEncodingContainer.encode(_:forKey:)();
    v8[12] = 3;
    KeyedEncodingContainer.encode(_:forKey:)();
    v8[11] = 4;
    KeyedEncodingContainer.encode(_:forKey:)();
    v8[10] = 5;
    KeyedEncodingContainer.encode(_:forKey:)();
    v8[9] = 6;
    KeyedEncodingContainer.encode(_:forKey:)();
    v8[8] = 7;
    KeyedEncodingContainer.encode(_:forKey:)();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1000E59E8()
{
  return sub_1000E561C(*v0);
}

uint64_t sub_1000E59F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1000EBCAC(a1, a2);
  *a3 = result;
  return result;
}

void sub_1000E5A18(unsigned char *a1@<X8>)
{
  *a1 = 8;
}

uint64_t sub_1000E5A24(uint64_t a1)
{
  unint64_t v2 = sub_1000EEE60();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1000E5A60(uint64_t a1)
{
  unint64_t v2 = sub_1000EEE60();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1000E5A9C(void *a1)
{
  return sub_1000E5720(a1);
}

uint64_t sub_1000E5B34(void *a1)
{
  uint64_t v3 = sub_10001644C(&qword_1005A68E0);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10002FD00(a1, a1[3]);
  sub_1000EEEB4();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  v8[15] = 0;
  type metadata accessor for Date();
  sub_1000ECDD0(&qword_1005A68C0, (void (*)(uint64_t))&type metadata accessor for Date);
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  if (!v1)
  {
    type metadata accessor for QALogger.Install(0);
    v8[14] = 1;
    KeyedEncodingContainer.encode(_:forKey:)();
    v8[13] = 2;
    KeyedEncodingContainer.encode(_:forKey:)();
    v8[12] = 3;
    KeyedEncodingContainer.encode(_:forKey:)();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1000E5D4C()
{
  uint64_t result = 0x6D617473656D6974;
  switch(*v0)
  {
    case 1:
      uint64_t result = 6775156;
      break;
    case 2:
      uint64_t result = 0x79654B676F6CLL;
      break;
    case 3:
      uint64_t result = 0x6E6F697461727564;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1000E5DD4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1000EC7F4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1000E5DFC(uint64_t a1)
{
  unint64_t v2 = sub_1000EEEB4();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1000E5E38(uint64_t a1)
{
  unint64_t v2 = sub_1000EEEB4();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1000E5E74(void *a1)
{
  return sub_1000E5B34(a1);
}

unint64_t sub_1000E6018(char a1)
{
  unint64_t result = 0x6D617473656D6974;
  switch(a1)
  {
    case 1:
      unint64_t result = 6775156;
      break;
    case 2:
      unint64_t result = 0x79654B676F6CLL;
      break;
    case 3:
    case 4:
    case 5:
      unint64_t result = 0xD000000000000011;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1000E60C8(void *a1)
{
  uint64_t v3 = sub_10001644C(&qword_1005A68F0);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10002FD00(a1, a1[3]);
  sub_1000EEF08();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  v8[15] = 0;
  type metadata accessor for Date();
  sub_1000ECDD0(&qword_1005A68C0, (void (*)(uint64_t))&type metadata accessor for Date);
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  if (!v1)
  {
    type metadata accessor for QALogger.DisplayedSpeed(0);
    v8[14] = 1;
    KeyedEncodingContainer.encode(_:forKey:)();
    v8[13] = 2;
    KeyedEncodingContainer.encode(_:forKey:)();
    v8[12] = 3;
    KeyedEncodingContainer.encode(_:forKey:)();
    v8[11] = 4;
    KeyedEncodingContainer.encode(_:forKey:)();
    v8[10] = 5;
    KeyedEncodingContainer.encode(_:forKey:)();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_1000E6338()
{
  return sub_1000E6018(*v0);
}

uint64_t sub_1000E6340@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1000EC9A4(a1, a2);
  *a3 = result;
  return result;
}

void sub_1000E6368(unsigned char *a1@<X8>)
{
  *a1 = 6;
}

uint64_t sub_1000E6374(uint64_t a1)
{
  unint64_t v2 = sub_1000EEF08();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1000E63B0(uint64_t a1)
{
  unint64_t v2 = sub_1000EEF08();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1000E63EC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for Date();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t sub_1000E6454(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1 + 20));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1000E648C(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1 + 24));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1000E64C4(void *a1)
{
  return sub_1000E60C8(a1);
}

id sub_1000E6538()
{
  if (sub_100042878()) {
    id result = [objc_allocWithZone((Class)type metadata accessor for QALogger(0)) init];
  }
  else {
    id result = 0;
  }
  qword_1005A6510 = (uint64_t)result;
  return result;
}

uint64_t sub_1000E657C(uint64_t a1, uint64_t a2)
{
  sub_100040170(a2, (uint64_t)v22);
  uint64_t v4 = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    uint64_t v21 = swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 136315138;
    uint64_t v7 = v23;
    uint64_t v8 = v24;
    sub_10002FD00(v22, v23);
    uint64_t v9 = sub_1000E6860(v7, v8);
    sub_1000F7290(v9, v10, &v21);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_10002E618((uint64_t)v22);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "\n%s", v6, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    sub_10002E618((uint64_t)v22);
  }
  uint64_t v11 = (uint64_t *)(a1 + OBJC_IVAR____TtC9appstored8QALogger_ledger);
  swift_beginAccess();
  uint64_t v12 = sub_1000E84C8(v11);
  uint64_t result = *v11;
  uint64_t v14 = *(void *)(*v11 + 24);
  if (v14 < v12)
  {
    __break(1u);
    goto LABEL_20;
  }
  if (v12 < 0)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    sub_1000E88B8();
  }
  sub_1000EA3A8((char *)v12, v14, (uint64_t *)(*v11 + 16), (char *)(*v11 + 40));
  swift_endAccess();
  uint64_t v15 = *(void *)(*v11 + 24);
  if (v15 >= 50)
  {
    uint64_t result = swift_beginAccess();
    if ((unint64_t)v15 > 0x33)
    {
LABEL_22:
      __break(1u);
      goto LABEL_23;
    }
    uint64_t v16 = 51 - v15;
    uint64_t result = *v11;
    if (*(void *)(*v11 + 24) < v16)
    {
LABEL_23:
      __break(1u);
      return result;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      sub_1000E88B8();
    }
    sub_1000E9034(v16, (uint64_t *)(*v11 + 16), *v11 + 40);
    swift_endAccess();
  }
  swift_beginAccess();
  uint64_t result = *v11;
  uint64_t v17 = *(void *)(*v11 + 24);
  Swift::Int v18 = v17 + 1;
  if (__OFADD__(v17, 1))
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v20 = *v11;
  if (*(void *)(*v11 + 16) < v18 || (isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    sub_1000E8954(v18, 0);
    uint64_t v20 = *v11;
  }
  sub_1000E8B48((void *)(v20 + 16), v20 + 40, a2);
  return swift_endAccess();
}

uint64_t sub_1000E6860(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v86 = type metadata accessor for Unicode.Scalar.Properties();
  uint64_t v6 = *(void *)(v86 - 8);
  __chkstk_darwin(v86);
  uint64_t v8 = (char *)v82 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v96 = a1;
  uint64_t v9 = sub_100071A1C((uint64_t *)&v94);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a1 - 8) + 16))(v9, v2, a1);
  sub_10002FD00(&v94, v96);
  DynamicType = (uint64_t *)swift_getDynamicType();
  sub_10002E618((uint64_t)&v94);
  if (*DynamicType != 512) {
    goto LABEL_108;
  }
  id v84 = DynamicType;
  uint64_t v11 = _typeName(_:qualified:)();
  unint64_t v13 = v12;
  sub_1000E4CF4(v11, v12);
  uint64_t v83 = a1;
  if (v14)
  {
    Swift::String v15 = Character.lowercased()();
    uint64_t countAndFlagsBits = v15._countAndFlagsBits;
    swift_bridgeObjectRelease();
    unint64_t v16 = String.index(after:)();
    unint64_t v17 = sub_100042274(v16, v11, v13);
    uint64_t v19 = v18;
    uint64_t v20 = a2;
    uint64_t v21 = v6;
    uint64_t v23 = v22;
    uint64_t v25 = v24;
    swift_bridgeObjectRelease();
    v89._uint64_t countAndFlagsBits = countAndFlagsBits;
    v89._object = v15._object;
    *(void *)&long long v94 = v17;
    *((void *)&v94 + 1) = v19;
    uint64_t v95 = v23;
    uint64_t v96 = v25;
    uint64_t v6 = v21;
    a2 = v20;
    sub_1000422C0();
    swift_bridgeObjectRetain();
    String.append<A>(contentsOf:)();
    a1 = v83;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  *(void *)&long long v94 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 32))(a1, a2);
  *((void *)&v94 + 1) = v26;
  v27._uint64_t countAndFlagsBits = 8992;
  v27._object = (void *)0xE200000000000000;
  String.append(_:)(v27);
  int v28 = *(uint64_t (**)(uint64_t, uint64_t))(a2 + 24);
  v82[2] = v3;
  v29._uint64_t countAndFlagsBits = v28(a1, a2);
  String.append(_:)(v29);
  swift_bridgeObjectRelease();
  unint64_t v30 = 0;
  long long v93 = v94;
  uint64_t v31 = (void (**)(char *, uint64_t))(v6 + 8);
  v82[1] = (char *)&type metadata for Any + 8;
  uint64_t v32 = v84;
  while (1)
  {
    uint64_t v33 = *v32;
    if ((unint64_t)*v32 > 0x7FF)
    {
LABEL_9:
      swift_getKeyPath();
      uint64_t v34 = dispatch thunk of AnyKeyPath._storedInlineOffset.getter();
      swift_release();
      id v35 = (unsigned int *)(*(uint64_t *)((char *)v32 + v34) + 36);
LABEL_10:
      uint64_t v36 = *v35;
LABEL_11:
      if (v30 == v36) {
        return v93;
      }
      goto LABEL_12;
    }
    if (v33 == 512)
    {
      swift_getKeyPath();
      uint64_t v45 = dispatch thunk of AnyKeyPath._storedInlineOffset.getter();
      swift_release();
      id v35 = (unsigned int *)(*(uint64_t *)((char *)v32 + v45) + 20);
      goto LABEL_10;
    }
    if (!v33) {
      goto LABEL_9;
    }
    unint64_t v46 = static Metadata.Kind.tuple.getter();
    if (v46 <= 0x7FF && v46 == v33)
    {
      TupleMetadata.init(_:)();
      uint64_t v36 = TupleMetadata.Elements.endIndex.getter();
      if (TupleMetadata.Elements.endIndex.getter() < 0) {
        goto LABEL_104;
      }
      uint64_t v47 = TupleMetadata.Elements.endIndex.getter();
      if (v36 < 0 || v47 < v36) {
        goto LABEL_105;
      }
      goto LABEL_11;
    }
    if (!v30) {
      return v93;
    }
LABEL_12:
    uint64_t v37 = *v32;
    if ((unint64_t)*v32 > 0x7FF) {
      goto LABEL_15;
    }
    if (v37 == 512)
    {
      swift_getKeyPath();
      uint64_t v48 = dispatch thunk of AnyKeyPath._storedInlineOffset.getter();
      swift_release();
      uint64_t v39 = (unsigned int *)(*(uint64_t *)((char *)v32 + v48) + 20);
      goto LABEL_16;
    }
    if (!v37)
    {
LABEL_15:
      swift_getKeyPath();
      uint64_t v38 = dispatch thunk of AnyKeyPath._storedInlineOffset.getter();
      swift_release();
      uint64_t v39 = (unsigned int *)(*(uint64_t *)((char *)v32 + v38) + 36);
LABEL_16:
      uint64_t v40 = *v39;
      goto LABEL_17;
    }
    unint64_t v49 = static Metadata.Kind.tuple.getter();
    uint64_t v40 = 0;
    if (v49 <= 0x7FF && v49 == v37)
    {
      TupleMetadata.init(_:)();
      uint64_t v40 = TupleMetadata.Elements.endIndex.getter();
      if (TupleMetadata.Elements.endIndex.getter() < 0) {
        goto LABEL_106;
      }
      uint64_t v50 = TupleMetadata.Elements.endIndex.getter();
      if (v40 < 0 || v50 < v40) {
        goto LABEL_107;
      }
    }
LABEL_17:
    if (v30 >= v40) {
      break;
    }
    unint64_t v41 = v30 + 1;
    uint64_t countAndFlagsBits = v30;
    uint64_t v43 = Field.name.getter();
    unint64_t v44 = v42;
    uint64_t v91 = v43;
    unint64_t v92 = v42;
    if (v43 == 0x79654B676F6CLL && v42 == 0xE600000000000000
      || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0
      || v43 == 6775156 && v44 == 0xE300000000000000
      || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0
      || *(void *)"timestamp" == v43 && *(void *)"p" == v44
      || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      unint64_t v30 = v41;
    }
    else
    {
      v82[0] = v41;
      swift_bridgeObjectRetain();
      swift_arrayDestroy();
      uint64_t v51 = HIBYTE(v44) & 0xF;
      if ((v44 & 0x2000000000000000) == 0) {
        uint64_t v51 = v43 & 0xFFFFFFFFFFFFLL;
      }
      if (v51)
      {
        while (1)
        {
          unint64_t v52 = String.index(before:)();
          uint64_t v54 = v91;
          unint64_t v53 = v92;
          swift_bridgeObjectRetain();
          unint64_t v55 = String.index(after:)();
          swift_bridgeObjectRelease();
          uint64_t v56 = HIBYTE(v53) & 0xF;
          if ((v53 & 0x2000000000000000) == 0) {
            uint64_t v56 = v54 & 0xFFFFFFFFFFFFLL;
          }
          if (v55 >> 14 >= 4 * v56) {
            goto LABEL_47;
          }
          swift_bridgeObjectRetain();
          unint64_t v57 = String.subscript.getter();
          unint64_t v59 = v58;
          swift_bridgeObjectRelease();
          if (Character._isSingleScalar.getter())
          {
            if ((sub_1000E91F8(v57, v59) & 0x100000000) != 0) {
              goto LABEL_109;
            }
            Unicode.Scalar.properties.getter();
            char v60 = Unicode.Scalar.Properties.isLowercase.getter();
            (*v31)(v8, v86);
            if (v60)
            {
LABEL_61:
              swift_bridgeObjectRelease();
              goto LABEL_62;
            }
          }
          if ((Character._isLowercased.getter() & 1) == 0) {
            break;
          }
          if (Character._isSingleScalar.getter())
          {
            if ((sub_1000E91F8(v57, v59) & 0x100000000) != 0) {
              goto LABEL_111;
            }
            Unicode.Scalar.properties.getter();
            char v61 = Unicode.Scalar.Properties.isCased.getter();
            (*v31)(v8, v86);
            if (v61) {
              goto LABEL_61;
            }
          }
          if ((Character._isUppercased.getter() & 1) == 0) {
            goto LABEL_61;
          }
          char v62 = Character._isLowercased.getter();
          swift_bridgeObjectRelease();
          if (v62) {
            goto LABEL_75;
          }
LABEL_62:
          swift_bridgeObjectRetain();
          unint64_t v63 = String.subscript.getter();
          unint64_t v65 = v64;
          swift_bridgeObjectRelease();
          if (Character._isSingleScalar.getter())
          {
            if ((sub_1000E91F8(v63, v65) & 0x100000000) != 0) {
              goto LABEL_110;
            }
            Unicode.Scalar.properties.getter();
            char v66 = Unicode.Scalar.Properties.isUppercase.getter();
            (*v31)(v8, v86);
            if (v66) {
              goto LABEL_72;
            }
          }
          if (Character._isUppercased.getter())
          {
            if (Character._isSingleScalar.getter())
            {
              if ((sub_1000E91F8(v63, v65) & 0x100000000) != 0) {
                goto LABEL_112;
              }
              Unicode.Scalar.properties.getter();
              char v67 = Unicode.Scalar.Properties.isCased.getter();
              (*v31)(v8, v86);
              if (v67) {
                goto LABEL_72;
              }
            }
            if ((Character._isUppercased.getter() & 1) == 0)
            {
LABEL_72:
              swift_bridgeObjectRelease();
LABEL_73:
              String.insert(_:at:)();
              goto LABEL_47;
            }
            char v68 = Character._isLowercased.getter();
            swift_bridgeObjectRelease();
            if ((v68 & 1) == 0) {
              goto LABEL_73;
            }
          }
          else
          {
            swift_bridgeObjectRelease();
          }
LABEL_47:
          if (v52 < 0x4000) {
            goto LABEL_79;
          }
        }
        swift_bridgeObjectRelease();
LABEL_75:
        swift_bridgeObjectRetain();
        String.subscript.getter();
        swift_bridgeObjectRelease();
        char v69 = Character.isNumber.getter();
        swift_bridgeObjectRelease();
        if ((v69 & 1) == 0) {
          goto LABEL_47;
        }
        goto LABEL_62;
      }
LABEL_79:
      swift_bridgeObjectRelease();
      uint64_t v32 = v84;
      sub_1000E92D8();
      swift_getAtAnyKeyPath();
      swift_release();
      if (!v90) {
        goto LABEL_113;
      }
      sub_10000C948(&v89, &v94);
      sub_100031C38((uint64_t)&v94, (uint64_t)&v89);
      sub_10002FD00(&v89, v90);
      id v70 = (uint64_t *)swift_getDynamicType();
      sub_10002E618((uint64_t)&v89);
      uint64_t v71 = *v70;
      if ((unint64_t)*v70 <= 0x7FF && (unint64_t)(v71 - 512) >= 3 && v71) {
        uint64_t v72 = 0;
      }
      else {
        uint64_t v72 = TypeMetadata.descriptor.getter();
      }
      unint64_t v73 = *(void *)sub_10001644C(&qword_1005A6598);
      if (v73 <= 0x7FF && v73 - 512 >= 3 && v73)
      {
        if (v72) {
          goto LABEL_95;
        }
      }
      else
      {
        uint64_t v74 = TypeMetadata.descriptor.getter();
        if (v72)
        {
          if (!v74 || v74 != v72)
          {
LABEL_95:
            v89._uint64_t countAndFlagsBits = 0;
            v89._object = (void *)0xE000000000000000;
            v79._uint64_t countAndFlagsBits = 10;
            v79._object = (void *)0xE100000000000000;
            String.append(_:)(v79);
            Swift::String v80 = String.lowercased()();
            String.append(_:)(v80);
            swift_bridgeObjectRelease();
            v81._uint64_t countAndFlagsBits = 2112800;
            v81._object = (void *)0xE300000000000000;
            String.append(_:)(v81);
            _print_unlocked<A, B>(_:_:)();
            String.append(_:)(v89);
            swift_bridgeObjectRelease();
            goto LABEL_96;
          }
        }
        else if (v74)
        {
          goto LABEL_95;
        }
      }
      sub_100031C38((uint64_t)&v94, (uint64_t)&v89);
      uint64_t result = (uint64_t)sub_1000ECE28(&v89);
      if (!result) {
        goto LABEL_114;
      }
      if ((Case.hasPayload.getter() & 1) == 0) {
        goto LABEL_96;
      }
      Case.get(from:)();
      if (v88)
      {
        sub_10000C948(&v87, &v89);
        v87._uint64_t countAndFlagsBits = 0;
        v87._object = (void *)0xE000000000000000;
        v76._uint64_t countAndFlagsBits = 10;
        v76._object = (void *)0xE100000000000000;
        String.append(_:)(v76);
        Swift::String v77 = String.lowercased()();
        String.append(_:)(v77);
        swift_bridgeObjectRelease();
        v78._uint64_t countAndFlagsBits = 2112800;
        v78._object = (void *)0xE300000000000000;
        String.append(_:)(v78);
        _print_unlocked<A, B>(_:_:)();
        String.append(_:)(v87);
        swift_bridgeObjectRelease();
        sub_10002E618((uint64_t)&v89);
LABEL_96:
        sub_10002E618((uint64_t)&v94);
        swift_bridgeObjectRelease();
        goto LABEL_97;
      }
      sub_10002E618((uint64_t)&v94);
      swift_bridgeObjectRelease();
      sub_100016714((uint64_t)&v87, &qword_1005A5660);
LABEL_97:
      unint64_t v30 = v82[0];
    }
  }
  __break(1u);
LABEL_104:
  __break(1u);
LABEL_105:
  __break(1u);
LABEL_106:
  __break(1u);
LABEL_107:
  __break(1u);
LABEL_108:
  __break(1u);
LABEL_109:
  __break(1u);
LABEL_110:
  __break(1u);
LABEL_111:
  __break(1u);
LABEL_112:
  __break(1u);
LABEL_113:
  uint64_t result = sub_100016714((uint64_t)&v89, &qword_1005A5660);
  __break(1u);
LABEL_114:
  __break(1u);
  return result;
}

id sub_1000E745C()
{
  uint64_t v15 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  uint64_t v1 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v3 = (char *)v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for OS_dispatch_queue_serial.Attributes();
  __chkstk_darwin(v4);
  uint64_t v5 = type metadata accessor for DispatchQoS();
  __chkstk_darwin(v5 - 8);
  uint64_t v6 = OBJC_IVAR____TtC9appstored8QALogger_ledger;
  sub_10001644C(&qword_1005A6568);
  uint64_t v7 = (void *)swift_allocObject();
  size_t v8 = j__malloc_size(v7);
  v7[3] = 0;
  v7[4] = 0;
  v7[2] = (uint64_t)(v8 - 40) / 40;
  *(void *)&v0[v6] = v7;
  unint64_t v13 = v0;
  uint64_t v14 = OBJC_IVAR____TtC9appstored8QALogger_queue;
  v12[1] = sub_100018D68(0, &qword_1005A6570);
  uint64_t v9 = v0;
  static DispatchQoS.unspecified.getter();
  unint64_t v17 = _swiftEmptyArrayStorage;
  sub_1000ECDD0(&qword_1005A6578, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue_serial.Attributes);
  sub_10001644C(&qword_1005A6580);
  sub_100052620(&qword_1005A6588, &qword_1005A6580);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for OS_dispatch_queue.AutoreleaseFrequency.workItem(_:), v15);
  *(void *)&v13[v14] = OS_dispatch_queue_serial.init(label:qos:attributes:autoreleaseFrequency:target:)();
  static Logger.qa.getter();

  unint64_t v10 = (objc_class *)type metadata accessor for QALogger(0);
  v16.receiver = v9;
  v16.super_class = v10;
  return objc_msgSendSuper2(&v16, "init");
}

id sub_1000E7764()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for QALogger(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_1000E782C()
{
  return type metadata accessor for QALogger(0);
}

uint64_t type metadata accessor for QALogger(uint64_t a1)
{
  return sub_100066FAC(a1, (uint64_t *)&unk_1005A6558);
}

uint64_t sub_1000E7854()
{
  uint64_t result = type metadata accessor for Logger();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1000E7900(void *a1, uint64_t a2)
{
  sub_10002FD00(a1, a1[3]);
  dispatch thunk of Encoder.unkeyedContainer()();
  uint64_t v4 = *(void *)(a2 + 16);
  if (v4)
  {
    uint64_t v5 = (void *)(a2 + 32);
    swift_bridgeObjectRetain();
    do
    {
      sub_10002FD00(v5, v5[3]);
      sub_100040120((uint64_t)v7, v8);
      dispatch thunk of UnkeyedEncodingContainer.encode<A>(_:)();
      if (v2) {
        break;
      }
      v5 += 5;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease();
  }
  return sub_10002E618((uint64_t)v7);
}

uint64_t sub_1000E79F0(void *a1)
{
  return sub_1000E7900(a1, *v1);
}

char *sub_1000E7A0C(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = *((void *)a4 + 3);
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = *((void *)a4 + 2);
    if (v7 <= v8) {
      uint64_t v9 = *((void *)a4 + 2);
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_10001644C(&qword_1005A3800);
      unint64_t v10 = (char *)swift_allocObject();
      size_t v11 = j__malloc_size(v10);
      *((void *)v10 + 2) = v8;
      *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 96);
      unint64_t v12 = v10 + 32;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[96 * v8 + 32]) {
          memmove(v12, a4 + 32, 96 * v8);
        }
        *((void *)a4 + 2) = 0;
        goto LABEL_22;
      }
    }
    else
    {
      unint64_t v10 = (char *)&_swiftEmptyArrayStorage;
      unint64_t v12 = (char *)&_swiftEmptyArrayStorage + 32;
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1000EA9FC(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1000E7B34(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_10001644C(&qword_1005A6600);
      unint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 1;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      unint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      unint64_t v10 = _swiftEmptyArrayStorage;
      unint64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4]) {
          memmove(v13, a4 + 4, 32 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1000EAAF4(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

char *sub_1000E7C44(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = *((void *)a4 + 3);
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = *((void *)a4 + 2);
    if (v7 <= v8) {
      uint64_t v9 = *((void *)a4 + 2);
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_10001644C(&qword_1005A4F70);
      unint64_t v10 = (char *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      *((void *)v10 + 2) = v8;
      *((void *)v10 + 3) = 2 * (v12 >> 4);
      unint64_t v13 = v10 + 32;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      unint64_t v10 = (char *)&_swiftEmptyArrayStorage;
      unint64_t v13 = (char *)&_swiftEmptyArrayStorage + 32;
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[16 * v8 + 32]) {
          memmove(v13, a4 + 32, 16 * v8);
        }
        *((void *)a4 + 2) = 0;
        goto LABEL_24;
      }
    }
    sub_1000EABE8(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1000E7D54(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_10001644C(&qword_1005A5D10);
      unint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 25;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      unint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      unint64_t v10 = _swiftEmptyArrayStorage;
      unint64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4]) {
          memmove(v13, a4 + 4, 8 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1000EACDC(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1000E7E64(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    int64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  int64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      int64_t v7 = a2;
    }
LABEL_8:
    int64_t v8 = a4[2];
    if (v7 <= v8) {
      int64_t v9 = a4[2];
    }
    else {
      int64_t v9 = v7;
    }
    if (v9)
    {
      sub_10001644C(&qword_1005A65F8);
      unint64_t v10 = (void *)swift_allocObject();
      size_t v11 = j__malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * v11 - 64;
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= (void *)((char *)a4 + v8 + 32)) {
          memmove(v12, a4 + 4, v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      unint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v12 = &_swiftEmptyArrayStorage[4];
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1000EADE8(0, v8, (char *)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1000E7F60(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_10001644C(&qword_1005A4098);
      unint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      unint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      unint64_t v10 = _swiftEmptyArrayStorage;
      unint64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1000EAED0(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1000E8070(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_10001644C(&qword_1005A65E0);
      unint64_t v10 = (void *)swift_allocObject();
      size_t v11 = j__malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 360);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[45 * v8 + 4]) {
          memmove(v12, a4 + 4, 360 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      unint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v12 = &_swiftEmptyArrayStorage[4];
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1000EAFDC(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1000E8198(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_10001644C(&qword_1005A65E8);
      unint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 1;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      unint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      unint64_t v10 = _swiftEmptyArrayStorage;
      unint64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4]) {
          memmove(v13, a4 + 4, 32 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1000EB0D0(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1000E82A8(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_10001644C(&qword_1005A5858);
      unint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 25;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      unint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      unint64_t v10 = _swiftEmptyArrayStorage;
      unint64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4]) {
          memmove(v13, a4 + 4, 8 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1000EB1C4(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1000E83B8(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_10001644C(&qword_1005A65B8);
      unint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 25;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      unint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      unint64_t v10 = _swiftEmptyArrayStorage;
      unint64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4]) {
          memmove(v13, a4 + 4, 8 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1000EB1C4(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1000E84C8(uint64_t *a1)
{
  uint64_t v47 = type metadata accessor for Date();
  __chkstk_darwin(v47);
  uint64_t v4 = (char *)&v44 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v44 - v7;
  uint64_t v45 = v1;
  unint64_t v46 = a1;
  uint64_t v9 = (void *)*a1;
  uint64_t v10 = *(void *)(*a1 + 24);
  if (v10)
  {
    int64_t v11 = (void (**)(char *, uint64_t))(v6 + 8);
    uint64_t result = swift_retain();
    uint64_t v13 = 0;
    while (1)
    {
      if (v13 >= v10)
      {
        __break(1u);
        goto LABEL_35;
      }
      uint64_t v14 = v9[4];
      uint64_t v15 = v13 + v14 >= v9[2] ? v9[2] : 0;
      sub_100040170((uint64_t)&v9[5 * v13 + 5 + 5 * (v14 - v15)], (uint64_t)v51);
      sub_100040108(v51, (uint64_t)v48);
      static Date.now.getter();
      uint64_t v17 = v49;
      uint64_t v16 = v50;
      sub_10002FD00(v48, v49);
      (*(void (**)(uint64_t, uint64_t))(v16 + 16))(v17, v16);
      Date.timeIntervalSince(_:)();
      double v19 = v18;
      uint64_t v20 = *v11;
      uint64_t v21 = v47;
      (*v11)(v4, v47);
      v20(v8, v21);
      uint64_t result = sub_10002E618((uint64_t)v48);
      if (v19 >= 3600.0) {
        break;
      }
      ++v13;
      uint64_t v10 = v9[3];
      if (v13 == v10)
      {
        swift_release();
        return *(void *)(*v46 + 24);
      }
    }
    uint64_t result = swift_release();
    uint64_t v22 = *v46;
    uint64_t v23 = *(void *)(*v46 + 24);
    if (v23 - 1 == v13) {
      return v13;
    }
    uint64_t v24 = v13 + 1;
    while (v24 < v23)
    {
      uint64_t v26 = *(void *)(v22 + 32);
      if (v24 + v26 >= *(void *)(v22 + 16)) {
        uint64_t v27 = *(void *)(v22 + 16);
      }
      else {
        uint64_t v27 = 0;
      }
      sub_100040170(v22 + 40 * (v24 + v26 - v27) + 40, (uint64_t)v51);
      sub_100040108(v51, (uint64_t)v48);
      static Date.now.getter();
      uint64_t v28 = v49;
      uint64_t v29 = v50;
      sub_10002FD00(v48, v49);
      (*(void (**)(uint64_t, uint64_t))(v29 + 16))(v28, v29);
      Date.timeIntervalSince(_:)();
      double v31 = v30;
      uint64_t v32 = v47;
      v20(v4, v47);
      v20(v8, v32);
      uint64_t result = sub_10002E618((uint64_t)v48);
      if (v31 >= 3600.0)
      {
        uint64_t v25 = v46;
      }
      else
      {
        uint64_t v25 = v46;
        if (v13 < 0) {
          goto LABEL_36;
        }
        uint64_t result = *v46;
        uint64_t v33 = *(void *)(*v46 + 24);
        if (v13 >= v33) {
          goto LABEL_37;
        }
        if (v24 >= v33) {
          goto LABEL_38;
        }
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        if ((result & 1) == 0) {
          uint64_t result = sub_1000E88B8();
        }
        uint64_t v34 = *(void *)(*v25 + 32);
        uint64_t v35 = *(void *)(*v25 + 16);
        if (v34 + v13 >= v35) {
          uint64_t v36 = *(void *)(*v25 + 16);
        }
        else {
          uint64_t v36 = 0;
        }
        uint64_t v37 = v34 + v13 - v36;
        if (v24 + v34 < v35) {
          uint64_t v35 = 0;
        }
        uint64_t v38 = v24 + v34 - v35;
        if (v38 != v37)
        {
          uint64_t v39 = *v25 + 40;
          uint64_t v40 = v39 + 40 * v37;
          uint64_t v41 = v39 + 40 * v38;
          sub_100040108((long long *)v40, (uint64_t)v51);
          uint64_t v42 = *(void *)(v41 + 32);
          long long v43 = *(_OWORD *)(v41 + 16);
          *(_OWORD *)uint64_t v40 = *(_OWORD *)v41;
          *(_OWORD *)(v40 + 16) = v43;
          *(void *)(v40 + 32) = v42;
          uint64_t result = sub_100040108(v51, v41);
        }
        ++v13;
      }
      ++v24;
      uint64_t v22 = *v25;
      uint64_t v23 = *(void *)(*v25 + 24);
      if (v24 == v23) {
        return v13;
      }
    }
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
LABEL_38:
    __break(1u);
  }
  else
  {
    return 0;
  }
  return result;
}

uint64_t sub_1000E88B8()
{
  uint64_t v1 = *v0;
  uint64_t v2 = (uint64_t *)(*v0 + 16);
  uint64_t v3 = *v2;
  sub_10001644C(&qword_1005A6568);
  uint64_t v4 = swift_allocObject();
  long long v5 = *(_OWORD *)(v1 + 24);
  *(void *)(v4 + 16) = v3;
  *(_OWORD *)(v4 + 24) = v5;
  if ((uint64_t)v5 >= 1) {
    sub_1000E8EA0(v4 + 16, v4 + 40, v2, v1 + 40);
  }
  uint64_t result = swift_release();
  *uint64_t v0 = v4;
  return result;
}

uint64_t sub_1000E8954(Swift::Int a1, char a2)
{
  uint64_t v3 = *v2;
  uint64_t v4 = (Swift::Int *)(*v2 + 16);
  Swift::Int v5 = *v4;
  if (*v4 >= a1)
  {
    sub_10001644C(&qword_1005A6568);
    uint64_t v11 = swift_allocObject();
    long long v12 = *(_OWORD *)(v3 + 24);
    *(void *)(v11 + 16) = v5;
    *(_OWORD *)(v11 + 24) = v12;
    if ((uint64_t)v12 >= 1) {
      sub_1000E8EA0(v11 + 16, v11 + 40, v4, v3 + 40);
    }
  }
  else
  {
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v9 = *v2;
    sub_10001644C(&qword_1005A65A0);
    Deque._Storage._growCapacity(to:linearly:)(a1, a2 & 1);
    if (isUniquelyReferenced_nonNull_native)
    {
      uint64_t v10 = *(void *)(v9 + 24);
      sub_10001644C(&qword_1005A6568);
      uint64_t v11 = swift_allocObject();
      *(void *)(v11 + 16) = (uint64_t)(j__malloc_size((const void *)v11) - 40) / 40;
      *(void *)(v11 + 24) = v10;
      *(void *)(v11 + 32) = 0;
      if (v10 >= 1)
      {
        swift_retain();
        sub_1000E8BD4(v11 + 16, (char *)(v11 + 40), (void *)(v9 + 16), (char *)(v9 + 40));
        *(void *)(v9 + 24) = 0;
        swift_release();
      }
    }
    else
    {
      sub_10001644C(&qword_1005A6568);
      uint64_t v11 = swift_allocObject();
      size_t v13 = j__malloc_size((const void *)v11);
      uint64_t v14 = *(void *)(v9 + 24);
      *(void *)(v11 + 16) = (uint64_t)(v13 - 40) / 40;
      *(void *)(v11 + 24) = v14;
      *(void *)(v11 + 32) = 0;
      if (v14 >= 1) {
        sub_1000E8D14(v11 + 16, v11 + 40, (void *)(v9 + 16), v9 + 40);
      }
    }
  }
  uint64_t result = swift_release();
  *uint64_t v2 = v11;
  return result;
}

void *sub_1000E8B48(void *result, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = result[1];
  uint64_t v3 = result[2];
  BOOL v7 = __OFADD__(v3, v4);
  uint64_t v5 = v3 + v4;
  if (!v7)
  {
    uint64_t v6 = result;
    if ((v4 & 0x8000000000000000) == 0)
    {
      BOOL v7 = __OFSUB__(v5, *result);
      if (v5 < *result || (v5 -= *result, !v7))
      {
LABEL_9:
        uint64_t result = (void *)sub_100040170(a3, a2 + 40 * v5);
        uint64_t v8 = v6[1];
        BOOL v7 = __OFADD__(v8, 1);
        uint64_t v9 = v8 + 1;
        if (!v7)
        {
          v6[1] = v9;
          return result;
        }
        goto LABEL_12;
      }
      __break(1u);
    }
    if (v5 < 0)
    {
      BOOL v7 = __OFADD__(v5, *result);
      v5 += *result;
      if (v7) {
        goto LABEL_13;
      }
    }
    goto LABEL_9;
  }
  __break(1u);
LABEL_12:
  __break(1u);
LABEL_13:
  __break(1u);
  return result;
}

void sub_1000E8BD4(int a1, char *__dst, void *a3, char *a4)
{
  uint64_t v4 = a3[2];
  uint64_t v5 = *a3 - v4;
  if (__OFSUB__(*a3, v4))
  {
    __break(1u);
    goto LABEL_32;
  }
  uint64_t v7 = a3[1];
  if (v5 < v7)
  {
    uint64_t v8 = v7 - v5;
    if (!__OFSUB__(v7, v5))
    {
      uint64_t v9 = *a3 - v4;
      uint64_t v10 = a4;
      goto LABEL_6;
    }
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  uint64_t v10 = 0;
  uint64_t v8 = 0;
  uint64_t v9 = a3[1];
LABEL_6:
  BOOL v11 = v5 < v7;
  BOOL v12 = v8 != 0;
  BOOL v13 = v11 && v12;
  if (v11 && v12) {
    uint64_t v14 = v10;
  }
  else {
    uint64_t v14 = 0;
  }
  if (v11 && v12) {
    uint64_t v15 = v8;
  }
  else {
    uint64_t v15 = 0;
  }
  if (v9 < 1)
  {
    uint64_t v9 = 0;
    goto LABEL_20;
  }
  if (!a4)
  {
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  uint64_t v16 = &a4[40 * v4];
  if (v16 != __dst || &v16[40 * v9] <= __dst) {
    memmove(__dst, v16, 40 * v9);
  }
LABEL_20:
  if (!v13 || v15 <= 0) {
    return;
  }
  if (!v14)
  {
LABEL_34:
    __break(1u);
    return;
  }
  double v18 = &__dst[40 * v9];
  if (v18 != v14 || v18 >= &v14[40 * v15])
  {
    memmove(v18, v14, 40 * v15);
  }
}

uint64_t sub_1000E8D14(uint64_t a1, unint64_t a2, void *a3, unint64_t a4)
{
  uint64_t v4 = a3[2];
  uint64_t v5 = *a3 - v4;
  if (__OFSUB__(*a3, v4))
  {
    __break(1u);
    goto LABEL_26;
  }
  uint64_t v7 = a3[1];
  if (v5 >= v7)
  {
    unint64_t v10 = 0;
    uint64_t v8 = 0;
    uint64_t v9 = a3[1];
    if (v7 < 1) {
      goto LABEL_5;
    }
    goto LABEL_7;
  }
  uint64_t v8 = v7 - v5;
  if (__OFSUB__(v7, v5))
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  uint64_t v9 = *a3 - v4;
  unint64_t v10 = a4;
  if (v5 < 1)
  {
LABEL_5:
    uint64_t v9 = 0;
    goto LABEL_13;
  }
LABEL_7:
  if (!a4)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  unint64_t v11 = a4 + 40 * v4;
  if (v11 < a2 + 40 * v9 && v11 + 40 * v9 > a2) {
    goto LABEL_29;
  }
  sub_10001644C(&qword_1005A65A0);
  uint64_t result = swift_arrayInitWithCopy();
LABEL_13:
  if (v5 >= v7 || v8 < 1) {
    return result;
  }
  if (!v10)
  {
LABEL_28:
    __break(1u);
LABEL_29:
    uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
    return result;
  }
  unint64_t v15 = a2 + 40 * v9;
  if (v15 + 40 * v8 > v10 && v15 < v10 + 40 * v8) {
    goto LABEL_29;
  }
  sub_10001644C(&qword_1005A65A0);
  return swift_arrayInitWithCopy();
}

uint64_t sub_1000E8EA0(uint64_t a1, unint64_t a2, void *a3, unint64_t a4)
{
  uint64_t v4 = a3[2];
  uint64_t v5 = *a3 - v4;
  if (__OFSUB__(*a3, v4))
  {
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v7 = a3[1];
  if (v5 >= v7)
  {
    unint64_t v10 = 0;
    uint64_t v8 = 0;
    uint64_t v9 = a3[1];
    if (v7 < 1) {
      goto LABEL_14;
    }
    goto LABEL_7;
  }
  uint64_t v8 = v7 - v5;
  if (__OFSUB__(v7, v5))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  uint64_t v9 = *a3 - v4;
  unint64_t v10 = a4;
  if (v5 < 1) {
    goto LABEL_14;
  }
LABEL_7:
  if (!a4)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  unint64_t v11 = a4 + 40 * v4;
  unint64_t v12 = a2 + 40 * v4;
  if (v11 < v12 + 40 * v9 && v12 < v11 + 40 * v9) {
    goto LABEL_27;
  }
  sub_10001644C(&qword_1005A65A0);
  uint64_t result = swift_arrayInitWithCopy();
LABEL_14:
  if (v5 < v7 && v8 >= 1)
  {
    if (v10)
    {
      if (a2 + 40 * v8 <= v10 || v10 + 40 * v8 <= a2)
      {
        sub_10001644C(&qword_1005A65A0);
        return swift_arrayInitWithCopy();
      }
LABEL_27:
      uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
      __break(1u);
      return result;
    }
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  return result;
}

uint64_t sub_1000E9034(uint64_t result, uint64_t *a2, uint64_t a3)
{
  if (result >= 1)
  {
    uint64_t v4 = result;
    sub_1000E917C(0, result, a2, a3, (uint64_t)&v12);
    char v5 = v15 | (v14 == 0);
    if (v15 & 1 | (v14 == 0)) {
      uint64_t v6 = 0;
    }
    else {
      uint64_t v6 = v13;
    }
    long long v16 = v12;
    sub_100030134((uint64_t)&v16, (uint64_t)v17, &qword_1005A65A8);
    uint64_t result = sub_100030134((uint64_t)v17, (uint64_t)&v18, &qword_1005A65A8);
    if (v18)
    {
      sub_10001644C(&qword_1005A65A0);
      uint64_t result = swift_arrayDestroy();
    }
    if (!(v5 & 1 | (v6 == 0)))
    {
      sub_10001644C(&qword_1005A65A0);
      uint64_t result = swift_arrayDestroy();
    }
    uint64_t v7 = a2[2];
    BOOL v9 = __OFADD__(v7, v4);
    uint64_t v8 = v7 + v4;
    if (v9)
    {
      __break(1u);
    }
    else
    {
      BOOL v9 = __OFSUB__(v8, *a2);
      if (v8 >= *a2)
      {
        v8 -= *a2;
        if (v9) {
          goto LABEL_17;
        }
      }
      a2[2] = v8;
      uint64_t v10 = a2[1];
      BOOL v9 = __OFSUB__(v10, v4);
      uint64_t v11 = v10 - v4;
      if (!v9)
      {
        a2[1] = v11;
        return result;
      }
    }
    __break(1u);
LABEL_17:
    __break(1u);
  }
  return result;
}

uint64_t sub_1000E917C@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5 = a3[2];
  uint64_t v6 = v5 + result;
  uint64_t v7 = *a3;
  if (v5 + result >= *a3) {
    uint64_t v8 = *a3;
  }
  else {
    uint64_t v8 = 0;
  }
  uint64_t v9 = v5 + a2;
  if (v5 + a2 >= v7) {
    uint64_t v10 = *a3;
  }
  else {
    uint64_t v10 = 0;
  }
  uint64_t v11 = a2 - result;
  if (__OFSUB__(a2, result))
  {
    __break(1u);
  }
  else
  {
    uint64_t v12 = v6 - v8;
    uint64_t v13 = v9 - v10;
    if (v11) {
      BOOL v14 = v12 < v13;
    }
    else {
      BOOL v14 = 1;
    }
    int v15 = v14;
    if (v15 == 1)
    {
      uint64_t v16 = 0;
      uint64_t v13 = 0;
LABEL_18:
      *(void *)a5 = a4 + 40 * v12;
      *(void *)(a5 + 8) = v11;
      *(void *)(a5 + 16) = v16;
      *(void *)(a5 + 24) = v13;
      *(unsigned char *)(a5 + 32) = v15;
      return result;
    }
    uint64_t v11 = v7 - v12;
    if (!__OFSUB__(v7, v12))
    {
      uint64_t v16 = a4;
      goto LABEL_18;
    }
  }
  __break(1u);
  return result;
}

unint64_t sub_1000E91F8(unint64_t a1, unint64_t a2)
{
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2)
  {
    sub_1000E9338(0xFuLL, a1, a2);
    if ((a2 & 0x1000000000000000) != 0)
    {
      unsigned int v5 = _StringGuts.foreignErrorCorrectedScalar(startingAt:)();
    }
    else
    {
      if ((a2 & 0x2000000000000000) == 0 && (a1 & 0x1000000000000000) == 0) {
        _StringObject.sharedUTF8.getter();
      }
      unsigned int v5 = _decodeScalar(_:startingAt:)();
    }
  }
  else
  {
    unsigned int v5 = 0;
  }
  return v5 | ((unint64_t)(v2 == 0) << 32);
}

uint64_t sub_1000E92D8()
{
  return static KeyPath.create(for:)();
}

unint64_t sub_1000E9338(unint64_t result, unint64_t a2, unint64_t a3)
{
  uint64_t v5 = (a2 >> 59) & 1;
  if ((a3 & 0x1000000000000000) == 0) {
    LOBYTE(v5) = 1;
  }
  if ((result & 1) == 0 || (result & 0xC) == 4 << v5) {
    goto LABEL_9;
  }
  unint64_t v6 = HIBYTE(a3) & 0xF;
  if ((a3 & 0x2000000000000000) == 0) {
    unint64_t v6 = a2 & 0xFFFFFFFFFFFFLL;
  }
  if (v6 <= result >> 16)
  {
    __break(1u);
LABEL_9:
    uint64_t result = sub_1000E93D8(result, a2, a3);
    if ((result & 1) == 0) {
      return result & 0xC | sub_1000E9448(result, a2, a3) & 0xFFFFFFFFFFFFFFF3 | 1;
    }
  }
  return result;
}

unint64_t sub_1000E93D8(unint64_t result, unint64_t a2, unint64_t a3)
{
  uint64_t v5 = (a2 >> 59) & 1;
  if ((a3 & 0x1000000000000000) == 0) {
    LOBYTE(v5) = 1;
  }
  if ((result & 0xC) == 4 << v5) {
    uint64_t result = sub_1000F7798(result, a2, a3);
  }
  unint64_t v6 = HIBYTE(a3) & 0xF;
  if ((a3 & 0x2000000000000000) == 0) {
    unint64_t v6 = a2 & 0xFFFFFFFFFFFFLL;
  }
  if (v6 <= result >> 16) {
    __break(1u);
  }
  return result;
}

unint64_t sub_1000E9448(unint64_t result, uint64_t a2, unint64_t a3)
{
  if ((result & 0xC000) != 0 || result < 0x10000)
  {
    result &= 0xFFFFFFFFFFFF0000;
  }
  else
  {
    unint64_t v5 = result >> 16;
    if ((a3 & 0x1000000000000000) == 0)
    {
      v13[2] = v3;
      v13[3] = v4;
      if ((a3 & 0x2000000000000000) != 0)
      {
        v13[0] = a2;
        v13[1] = a3 & 0xFFFFFFFFFFFFFFLL;
        if (v5 != (HIBYTE(a3) & 0xF) && (*((unsigned char *)v13 + v5) & 0xC0) == 0x80)
        {
          do
          {
            unint64_t v7 = v5 - 1;
            int v11 = *((unsigned char *)&v12 + v5-- + 7) & 0xC0;
          }
          while (v11 == 128);
          return v7 << 16;
        }
        goto LABEL_14;
      }
      if ((a2 & 0x1000000000000000) != 0)
      {
        uint64_t v6 = (a3 & 0xFFFFFFFFFFFFFFFLL) + 32;
        if (v5 == (a2 & 0xFFFFFFFFFFFFLL)) {
          goto LABEL_14;
        }
      }
      else
      {
        unint64_t v12 = result >> 16;
        uint64_t v6 = _StringObject.sharedUTF8.getter();
        unint64_t v5 = v12;
        if (v12 == v10) {
          goto LABEL_14;
        }
      }
      if ((*(unsigned char *)(v6 + v5) & 0xC0) == 0x80)
      {
        do
        {
          unint64_t v7 = v5 - 1;
          int v8 = *(unsigned char *)(v6 - 1 + v5--) & 0xC0;
        }
        while (v8 == 128);
        return v7 << 16;
      }
LABEL_14:
      unint64_t v7 = v5;
      return v7 << 16;
    }
    uint64_t v9 = HIBYTE(a3) & 0xF;
    if ((a3 & 0x2000000000000000) == 0) {
      uint64_t v9 = a2 & 0xFFFFFFFFFFFFLL;
    }
    if (v5 != v9)
    {
      return _StringGuts.foreignScalarAlign(_:)();
    }
  }
  return result;
}

uint64_t sub_1000E956C(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a5) {
    unint64_t v6 = a5 + 40 * a3;
  }
  else {
    unint64_t v6 = 0;
  }
  if (a1)
  {
    uint64_t v7 = a2;
    if (a2)
    {
      if (a4 - a3 < a2)
      {
LABEL_18:
        __break(1u);
LABEL_19:
        uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
        __break(1u);
        return result;
      }
      if (v6)
      {
        if (a2 < 0) {
          goto LABEL_19;
        }
        if (v6 + 40 * a2 > a1 && a1 + 40 * a2 > v6) {
          goto LABEL_19;
        }
        sub_10001644C(&qword_1005A65A0);
        swift_arrayInitWithCopy();
      }
    }
  }
  else
  {
    uint64_t v7 = 0;
  }
  uint64_t result = a3 + v7;
  if (__OFADD__(a3, v7))
  {
    __break(1u);
    goto LABEL_18;
  }
  return result;
}

uint64_t sub_1000E96A8(uint64_t a1, void *a2)
{
  uint64_t v4 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16[0] = type metadata accessor for DispatchQoS();
  uint64_t v8 = *(void *)(v16[0] - 8);
  __chkstk_darwin(v16[0]);
  uint64_t v10 = (char *)v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19[3] = type metadata accessor for QALogger.Asset(0);
  void v19[4] = sub_1000ECDD0(&qword_1005A65C8, (void (*)(uint64_t))type metadata accessor for QALogger.Asset);
  int v11 = sub_100071A1C(v19);
  sub_1000ECFBC(a1, (uint64_t)v11, type metadata accessor for QALogger.Asset);
  sub_100040170((uint64_t)v19, (uint64_t)v18);
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a2;
  sub_100040108(v18, v12 + 24);
  aBlock[4] = sub_1000EF8C8;
  aBlock[5] = v12;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000AB758;
  void aBlock[3] = &unk_1005161E0;
  uint64_t v13 = _Block_copy(aBlock);
  id v14 = a2;
  static DispatchQoS.unspecified.getter();
  v16[1] = _swiftEmptyArrayStorage;
  sub_1000ECDD0(&qword_1005A4470, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10001644C(&qword_1005A4478);
  sub_100052620(&qword_1005A4480, &qword_1005A4478);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v13);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  (*(void (**)(char *, void))(v8 + 8))(v10, v16[0]);
  swift_release();
  return sub_10002E618((uint64_t)v19);
}

uint64_t sub_1000E99E8(uint64_t a1, void *a2)
{
  uint64_t v4 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16[0] = type metadata accessor for DispatchQoS();
  uint64_t v8 = *(void *)(v16[0] - 8);
  __chkstk_darwin(v16[0]);
  uint64_t v10 = (char *)v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19[3] = type metadata accessor for QALogger.LinearDownload(0);
  void v19[4] = sub_1000ECDD0(&qword_1005A65C0, (void (*)(uint64_t))type metadata accessor for QALogger.LinearDownload);
  int v11 = sub_100071A1C(v19);
  sub_1000ECFBC(a1, (uint64_t)v11, type metadata accessor for QALogger.LinearDownload);
  sub_100040170((uint64_t)v19, (uint64_t)v18);
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a2;
  sub_100040108(v18, v12 + 24);
  aBlock[4] = sub_1000EF8C8;
  aBlock[5] = v12;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000AB758;
  void aBlock[3] = &unk_100516190;
  uint64_t v13 = _Block_copy(aBlock);
  id v14 = a2;
  static DispatchQoS.unspecified.getter();
  v16[1] = _swiftEmptyArrayStorage;
  sub_1000ECDD0(&qword_1005A4470, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10001644C(&qword_1005A4478);
  sub_100052620(&qword_1005A4480, &qword_1005A4478);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v13);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  (*(void (**)(char *, void))(v8 + 8))(v10, v16[0]);
  swift_release();
  return sub_10002E618((uint64_t)v19);
}

uint64_t sub_1000E9D28(uint64_t a1, void *a2)
{
  uint64_t v4 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16[0] = type metadata accessor for DispatchQoS();
  uint64_t v8 = *(void *)(v16[0] - 8);
  __chkstk_darwin(v16[0]);
  uint64_t v10 = (char *)v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19[3] = type metadata accessor for QALogger.Install(0);
  void v19[4] = sub_1000ECDD0(&qword_1005A65B0, (void (*)(uint64_t))type metadata accessor for QALogger.Install);
  int v11 = sub_100071A1C(v19);
  sub_1000ECFBC(a1, (uint64_t)v11, type metadata accessor for QALogger.Install);
  sub_100040170((uint64_t)v19, (uint64_t)v18);
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a2;
  sub_100040108(v18, v12 + 24);
  aBlock[4] = sub_1000EF8C8;
  aBlock[5] = v12;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000AB758;
  void aBlock[3] = &unk_100516140;
  uint64_t v13 = _Block_copy(aBlock);
  id v14 = a2;
  static DispatchQoS.unspecified.getter();
  v16[1] = _swiftEmptyArrayStorage;
  sub_1000ECDD0(&qword_1005A4470, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10001644C(&qword_1005A4478);
  sub_100052620(&qword_1005A4480, &qword_1005A4478);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v13);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  (*(void (**)(char *, void))(v8 + 8))(v10, v16[0]);
  swift_release();
  return sub_10002E618((uint64_t)v19);
}

uint64_t sub_1000EA068(uint64_t a1, void *a2)
{
  uint64_t v4 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16[0] = type metadata accessor for DispatchQoS();
  uint64_t v8 = *(void *)(v16[0] - 8);
  __chkstk_darwin(v16[0]);
  uint64_t v10 = (char *)v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19[3] = type metadata accessor for QALogger.DisplayedSpeed(0);
  void v19[4] = sub_1000ECDD0(&qword_1005A6590, (void (*)(uint64_t))type metadata accessor for QALogger.DisplayedSpeed);
  int v11 = sub_100071A1C(v19);
  sub_1000ECFBC(a1, (uint64_t)v11, type metadata accessor for QALogger.DisplayedSpeed);
  sub_100040170((uint64_t)v19, (uint64_t)v18);
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a2;
  sub_100040108(v18, v12 + 24);
  aBlock[4] = sub_1000ECE1C;
  aBlock[5] = v12;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000AB758;
  void aBlock[3] = &unk_1005160F0;
  uint64_t v13 = _Block_copy(aBlock);
  id v14 = a2;
  static DispatchQoS.unspecified.getter();
  v16[1] = _swiftEmptyArrayStorage;
  sub_1000ECDD0(&qword_1005A4470, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10001644C(&qword_1005A4478);
  sub_100052620(&qword_1005A4480, &qword_1005A4478);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v13);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  (*(void (**)(char *, void))(v8 + 8))(v10, v16[0]);
  swift_release();
  return sub_10002E618((uint64_t)v19);
}

char *sub_1000EA3A8(char *a1, uint64_t a2, uint64_t *a3, char *a4)
{
  sub_1000E917C((uint64_t)a1, a2, a3, (uint64_t)a4, (uint64_t)&v11);
  char v8 = v14 | (v13 == 0);
  if (v14 & 1 | (v13 == 0)) {
    uint64_t v9 = 0;
  }
  else {
    uint64_t v9 = v12;
  }
  long long v15 = v11;
  sub_100030134((uint64_t)&v15, (uint64_t)v16, &qword_1005A65A8);
  sub_100030134((uint64_t)v16, (uint64_t)&v17, &qword_1005A65A8);
  if (v17)
  {
    sub_10001644C(&qword_1005A65A0);
    swift_arrayDestroy();
  }
  if (!(v8 & 1 | (v9 == 0)))
  {
    sub_10001644C(&qword_1005A65A0);
    swift_arrayDestroy();
  }
  return sub_1000EA4BC(a1, a2, a3, a4);
}

char *sub_1000EA4BC(char *result, uint64_t a2, uint64_t *a3, char *__src)
{
  uint64_t v5 = a2 - (void)result;
  if (__OFSUB__(a2, result))
  {
    __break(1u);
LABEL_146:
    __break(1u);
    goto LABEL_147;
  }
  if (v5 < 1) {
    return result;
  }
  uint64_t v7 = (uint64_t)result;
  uint64_t v9 = a3[1];
  int64_t v8 = a3[2];
  uint64_t v10 = &result[v8];
  uint64_t v11 = *a3;
  if ((uint64_t)&result[v8] >= *a3) {
    uint64_t v12 = *a3;
  }
  else {
    uint64_t v12 = 0;
  }
  uint64_t v13 = v8 + a2;
  if (v8 + a2 >= v11) {
    uint64_t v14 = *a3;
  }
  else {
    uint64_t v14 = 0;
  }
  uint64_t v15 = v9 - a2;
  if (__OFSUB__(v9, a2)) {
    goto LABEL_146;
  }
  uint64_t v17 = (uint64_t)&v10[-v12];
  uint64_t v18 = v13 - v14;
  if (v15 <= (uint64_t)result) {
    goto LABEL_33;
  }
  uint64_t v15 = v8 + v5;
  if (__OFADD__(v8, v5))
  {
LABEL_147:
    __break(1u);
    goto LABEL_148;
  }
  BOOL v19 = __OFSUB__(v15, v11);
  if (v15 >= v11)
  {
    v15 -= v11;
    if (v19) {
      goto LABEL_151;
    }
  }
  if (!result) {
    goto LABEL_120;
  }
  if (v18 <= 0) {
    uint64_t v9 = *a3;
  }
  else {
    uint64_t v9 = v13 - v14;
  }
  if (v17 <= 0) {
    int64_t v20 = *a3;
  }
  else {
    int64_t v20 = (int64_t)&v10[-v12];
  }
  if (v8 < v20)
  {
    if (v9 >= v15)
    {
      if ((uint64_t)result <= 0) {
        goto LABEL_120;
      }
      uint64_t result = &__src[40 * v15];
      uint64_t v42 = &__src[40 * v8];
      if (v15 >= v8 && result < &v42[40 * v7] && v15 == v8) {
        goto LABEL_120;
      }
      uint64_t v43 = 5 * v7;
      goto LABEL_119;
    }
    if (v18 > 0)
    {
      uint64_t v9 = v11 - v5;
      uint64_t v21 = &__src[40 * (v11 - v5)];
      if (v11 - v5 > 0
        || ((int64_t v8 = (int64_t)&v21[40 * v18], v8 > (unint64_t)__src) ? (v22 = v11 == v5) : (v22 = 0), !v22))
      {
        uint64_t result = (char *)memmove(__src, v21, 40 * v18);
      }
    }
    uint64_t v11 = v7 - v18;
    if (!__OFSUB__(v7, v18)) {
      goto LABEL_114;
    }
    __break(1u);
LABEL_33:
    uint64_t v4 = v8 + v9;
    if (!__OFADD__(v8, v9))
    {
      if ((v9 & 0x8000000000000000) == 0)
      {
        BOOL v23 = __OFSUB__(v4, v11);
        if (v4 < v11) {
          goto LABEL_41;
        }
        v4 -= v11;
        if (!v23) {
          goto LABEL_41;
        }
        __break(1u);
      }
      if (v4 < 0)
      {
        BOOL v19 = __OFADD__(v4, v11);
        v4 += v11;
        if (v19) {
          goto LABEL_158;
        }
      }
LABEL_41:
      BOOL v19 = __OFSUB__(v9, v5);
      uint64_t v24 = v9 - v5;
      if (!v19)
      {
        uint64_t v25 = v24 + v8;
        if (v25 >= v11) {
          uint64_t v26 = v11;
        }
        else {
          uint64_t v26 = 0;
        }
        if (!v15) {
          goto LABEL_142;
        }
        uint64_t v7 = v25 - v26;
        if (v25 - v26 <= 0) {
          uint64_t v27 = v11;
        }
        else {
          uint64_t v27 = v25 - v26;
        }
        if (v4 <= 0) {
          uint64_t v28 = v11;
        }
        else {
          uint64_t v28 = v4;
        }
        if (v18 < v28)
        {
          if (v27 >= v17) {
            goto LABEL_123;
          }
          uint64_t v29 = v11 - v17;
          if (__OFSUB__(v11, v17))
          {
LABEL_152:
            __break(1u);
LABEL_153:
            __break(1u);
            goto LABEL_154;
          }
          if (v29 > 0)
          {
            uint64_t result = &__src[40 * v17];
            double v30 = &__src[40 * v18];
            if (v17 != v18 || result >= &v30[40 * v29]) {
              uint64_t result = (char *)memmove(result, v30, 40 * v29);
            }
            BOOL v19 = __OFADD__(v18, v29);
            v18 += v29;
            if (v19) {
              goto LABEL_159;
            }
            BOOL v31 = __OFSUB__(v18, *a3);
            if (v18 >= *a3)
            {
              v18 -= *a3;
              if (v31) {
                goto LABEL_163;
              }
            }
          }
          uint64_t v32 = v15 - v29;
          if (__OFSUB__(v15, v29)) {
            goto LABEL_153;
          }
          if (v32 < 1) {
            goto LABEL_142;
          }
          uint64_t v33 = &__src[40 * v18];
          if (v18 <= 0 && &v33[40 * v32] > __src && !v18) {
            goto LABEL_142;
          }
          uint64_t v34 = 5 * v32;
LABEL_101:
          size_t v41 = 8 * v34;
          uint64_t result = __src;
LABEL_141:
          uint64_t result = (char *)memmove(result, v33, v41);
          goto LABEL_142;
        }
LABEL_78:
        uint64_t v36 = v11 - v18;
        BOOL v37 = __OFSUB__(v11, v18);
        if (v27 >= v17)
        {
          if (v37)
          {
LABEL_157:
            __break(1u);
LABEL_158:
            __break(1u);
LABEL_159:
            __break(1u);
LABEL_160:
            __break(1u);
LABEL_161:
            __break(1u);
LABEL_162:
            __break(1u);
LABEL_163:
            __break(1u);
LABEL_164:
            __break(1u);
LABEL_165:
            __break(1u);
            return result;
          }
          if (v36 > 0)
          {
            uint64_t result = &__src[40 * v17];
            uint64_t v48 = &__src[40 * v18];
            if (v17 != v18 || result >= &v48[40 * v36]) {
              uint64_t result = (char *)memmove(result, v48, 40 * v36);
            }
            BOOL v19 = __OFADD__(v17, v36);
            v17 += v36;
            if (v19) {
              goto LABEL_161;
            }
            BOOL v49 = __OFSUB__(v17, *a3);
            if (v17 >= *a3)
            {
              v17 -= *a3;
              if (v49) {
                goto LABEL_165;
              }
            }
          }
          if (v4 >= 1)
          {
            uint64_t result = &__src[40 * v17];
            if (v17 < 0 || v17 >= v4 || v17)
            {
              size_t v41 = 40 * v4;
              uint64_t v33 = __src;
              goto LABEL_141;
            }
          }
          goto LABEL_142;
        }
        if (v37)
        {
LABEL_154:
          __break(1u);
          goto LABEL_155;
        }
        if (v36 > 0)
        {
          uint64_t result = &__src[40 * v17];
          uint64_t v38 = &__src[40 * v18];
          if (v17 != v18 || result >= &v38[40 * v36]) {
            uint64_t result = (char *)memmove(result, v38, 40 * v36);
          }
          BOOL v19 = __OFADD__(v17, v36);
          v17 += v36;
          if (v19) {
            goto LABEL_160;
          }
          BOOL v39 = __OFSUB__(v17, *a3);
          if (v17 >= *a3)
          {
            v17 -= *a3;
            if (v39) {
              goto LABEL_164;
            }
          }
        }
        uint64_t result = &__src[40 * v17];
        if (v17 < 0 || v17 >= v5 || v17) {
          uint64_t result = (char *)memmove(result, __src, 40 * v5);
        }
        uint64_t v40 = v5;
        if (v5 >= *a3)
        {
          uint64_t v40 = v5 - *a3;
          if (__OFSUB__(v5, *a3)) {
            goto LABEL_162;
          }
        }
        if (v7 < 1) {
          goto LABEL_142;
        }
        uint64_t v33 = &__src[40 * v40];
        if (v40 <= 0 && &v33[40 * v7] > __src && !v40) {
          goto LABEL_142;
        }
        uint64_t v34 = 5 * v7;
        goto LABEL_101;
      }
LABEL_149:
      __break(1u);
      goto LABEL_150;
    }
LABEL_148:
    __break(1u);
    goto LABEL_149;
  }
  if (v9 >= v15)
  {
    if (__OFSUB__(0, v17))
    {
LABEL_155:
      __break(1u);
LABEL_156:
      __break(1u);
      goto LABEL_157;
    }
    if (v17 > 0)
    {
      uint64_t v44 = v18 - v17;
      uint64_t result = &__src[40 * (v18 - v17)];
      if (v18 - v17 < 0 || v44 >= v17 || v44) {
        uint64_t result = (char *)memmove(result, __src, 40 * v17);
      }
    }
    uint64_t v11 = v7 - v17;
    if (__OFSUB__(v7, v17)) {
      goto LABEL_156;
    }
    goto LABEL_114;
  }
  if (v17 > 0) {
    uint64_t result = (char *)memmove(&__src[40 * v5], __src, 40 * v17);
  }
  uint64_t v27 = *a3;
  uint64_t v35 = *a3 - v5;
  if (*a3 < 1 || v35 > 0 || v27 != v5) {
    uint64_t result = (char *)memmove(__src, &__src[40 * v35], 40 * v5);
  }
  uint64_t v11 = v7 - v18;
  if (__OFSUB__(v7, v18))
  {
    __break(1u);
    goto LABEL_78;
  }
LABEL_114:
  if (v11 < 1) {
    goto LABEL_120;
  }
  uint64_t v45 = a3[2];
  uint64_t result = &__src[40 * v15];
  uint64_t v42 = &__src[40 * v45];
  if (v15 >= v45 && result < &v42[40 * v11] && v15 == v45) {
    goto LABEL_120;
  }
  uint64_t v43 = 5 * v11;
LABEL_119:
  uint64_t result = (char *)memmove(result, v42, 8 * v43);
LABEL_120:
  a3[2] = v15;
  uint64_t v46 = a3[1];
  BOOL v19 = __OFSUB__(v46, v5);
  uint64_t v47 = v46 - v5;
  if (!v19) {
    goto LABEL_143;
  }
  __break(1u);
LABEL_123:
  if (v15 > 0)
  {
    uint64_t result = &__src[40 * v17];
    uint64_t v33 = &__src[40 * v18];
    if (v17 < v18 || result >= &v33[40 * v15] || v17 != v18)
    {
      size_t v41 = 40 * v15;
      goto LABEL_141;
    }
  }
LABEL_142:
  uint64_t v50 = a3[1];
  BOOL v19 = __OFSUB__(v50, v5);
  uint64_t v47 = v50 - v5;
  if (v19)
  {
LABEL_150:
    __break(1u);
LABEL_151:
    __break(1u);
    goto LABEL_152;
  }
LABEL_143:
  a3[1] = v47;
  return result;
}

uint64_t sub_1000EA9FC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 96 * a1 + 32;
    unint64_t v6 = a3 + 96 * v4;
    if (v5 >= v6 || v5 + 96 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1000EAAF4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 32 * a1 + 32;
    unint64_t v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1000EABE8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1000EACDC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 8 * a1 + 32;
    unint64_t v6 = a3 + 8 * v4;
    if (v5 >= v6 || v5 + 8 * v4 <= a3)
    {
      sub_10001644C(&qword_1005A5E50);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

char *sub_1000EADE8(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  size_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + a1 + 32);
    unint64_t v6 = &__dst[v4];
    if (v5 >= &__dst[v4] || &v5[v4] <= __dst)
    {
      memcpy(__dst, v5, v4);
      return v6;
    }
  }
  uint64_t result = (char *)_fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1000EAED0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      sub_10001644C(&qword_1005A65F0);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1000EAFDC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 360 * a1 + 32;
    unint64_t v6 = a3 + 360 * v4;
    if (v5 >= v6 || v5 + 360 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1000EB0D0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 32 * a1 + 32;
    unint64_t v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

char *sub_1000EB1C4(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + 8 * a1 + 32);
    size_t v6 = 8 * v4;
    uint64_t v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  uint64_t result = (char *)_fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1000EB2B0()
{
  uint64_t v0 = type metadata accessor for String.Encoding();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = type metadata accessor for JSONEncoder.KeyEncodingStrategy();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1005A30A8 != -1) {
    swift_once();
  }
  unint64_t v5 = (void *)qword_1005A6510;
  if (!qword_1005A6510) {
    return 0;
  }
  type metadata accessor for JSONEncoder();
  swift_allocObject();
  size_t v6 = v5;
  JSONEncoder.init()();
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, enum case for JSONEncoder.KeyEncodingStrategy.convertToSnakeCase(_:), v1);
  dispatch thunk of JSONEncoder.keyEncodingStrategy.setter();
  uint64_t v7 = &v6[OBJC_IVAR____TtC9appstored8QALogger_ledger];
  swift_beginAccess();
  int64_t v8 = *(void **)v7;
  uint64_t v9 = v8[3];
  if ((v9 & 0x8000000000000000) == 0)
  {
    swift_retain();
    if (v9)
    {
      sub_10001644C(&qword_1005A65A0);
      uint64_t v10 = (void *)static Array._allocateBufferUninitialized(minimumCapacity:)();
      v10[2] = v9;
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
    }
    uint64_t v12 = v8[2];
    uint64_t v13 = v8[4];
    uint64_t v14 = v12 - v13;
    if (__OFSUB__(v12, v13))
    {
      __break(1u);
    }
    else
    {
      uint64_t v15 = v8 + 5;
      uint64_t v16 = v8[3];
      if (v14 < v16)
      {
        uint64_t v18 = v16 - v14;
        if (__OFSUB__(v16, v14))
        {
LABEL_26:
          __break(1u);
          goto LABEL_27;
        }
        uint64_t v19 = v14;
        uint64_t v17 = v8 + 5;
      }
      else
      {
        uint64_t v17 = 0;
        uint64_t v18 = 0;
        uint64_t v19 = v8[3];
      }
      v27[5] = &v15[5 * v13];
      v27[6] = v19;
      v28[0] = v17;
      v28[1] = v18;
      BOOL v29 = v14 >= v16;
      if ((v19 & 0x8000000000000000) == 0)
      {
        sub_1000E956C((unint64_t)&v15[5 * v13], v19, 0, v19, (uint64_t)(v10 + 4));
        sub_100030134((uint64_t)v28, (uint64_t)v30, &qword_1005A65D0);
        sub_100030134((uint64_t)v30, (uint64_t)&v31, &qword_1005A65D0);
        if ((v33 & 1) == 0)
        {
          uint64_t v20 = v19 + v32;
          if (__OFADD__(v19, v32))
          {
LABEL_27:
            __break(1u);
            goto LABEL_28;
          }
          if (v20 < v19)
          {
LABEL_28:
            __break(1u);
LABEL_29:
            __break(1u);
            goto LABEL_30;
          }
          sub_1000E956C(v31, v32, v19, v19 + v32, (uint64_t)(v10 + 4));
          uint64_t v19 = v20;
        }
        if (v9 >= v19)
        {
          v10[2] = v19;
          swift_release();
          v27[1] = v10;
          sub_1000ED0B0();
          uint64_t v21 = dispatch thunk of JSONEncoder.encode<A>(_:)();
          unint64_t v23 = v22;
          swift_bridgeObjectRelease();
          static String.Encoding.utf8.getter();
          uint64_t v24 = String.init(data:encoding:)();
          if (v25)
          {
            uint64_t v11 = v24;
            sub_10001EC80(v21, v23);

            swift_release();
            return v11;
          }
          goto LABEL_29;
        }
        goto LABEL_25;
      }
    }
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
LABEL_30:
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1000EB6B4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6D617473656D6974 && a2 == 0xE900000000000070;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 6775156 && a2 == 0xE300000000000000 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x79654B676F6CLL && a2 == 0xE600000000000000 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x61746C65447369 && a2 == 0xE700000000000000 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6C6C617261507369 && a2 == 0xEA00000000006C65 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 7107189 && a2 == 0xE300000000000000 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x746E6169726176 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 6;
    }
    else {
      return 7;
    }
  }
}

void sub_1000EB98C(uint64_t a1, uint64_t a2, uint64_t a3, int a4, int a5, void *a6)
{
  int v29 = a4;
  int v30 = a5;
  uint64_t v10 = (int *)type metadata accessor for QALogger.Asset(0);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_10001644C((uint64_t *)&unk_1005A5670);
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for URL();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v28 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a6)
  {
    sub_1000AA678(a1, (uint64_t)v15);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
    {
      sub_100016714((uint64_t)v15, (uint64_t *)&unk_1005A5670);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v19, v15, v16);
      uint64_t v20 = qword_1005A30A8;
      uint64_t v21 = a6;
      if (v20 != -1) {
        swift_once();
      }
      unint64_t v22 = (void *)qword_1005A6510;
      if (qword_1005A6510)
      {
        uint64_t v28 = a2;
        uint64_t v23 = *(void *)&v21[OBJC_IVAR____TtC9appstored6LogKey_value];
        uint64_t v24 = *(void *)&v21[OBJC_IVAR____TtC9appstored6LogKey_value + 8];
        (*(void (**)(char *, char *, uint64_t))(v17 + 16))(&v12[v10[9]], v19, v16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        static Date.now.getter();
        uint64_t v25 = &v12[v10[5]];
        *(void *)uint64_t v25 = 0x7465737361;
        *((void *)v25 + 1) = 0xE500000000000000;
        uint64_t v26 = &v12[v10[6]];
        *(void *)uint64_t v26 = v23;
        *((void *)v26 + 1) = v24;
        v12[v10[7]] = v29 & 1;
        v12[v10[8]] = v30 & 1;
        uint64_t v27 = &v12[v10[10]];
        *(void *)uint64_t v27 = v28;
        *((void *)v27 + 1) = a3;
        sub_1000E96A8((uint64_t)v12, v22);

        (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
        sub_1000ECF5C((uint64_t)v12, type metadata accessor for QALogger.Asset);
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
      }
    }
  }
}

uint64_t sub_1000EBCAC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6D617473656D6974 && a2 == 0xE900000000000070;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 6775156 && a2 == 0xE300000000000000 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x79654B676F6CLL && a2 == 0xE600000000000000 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x800000010044FCA0 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x756F7268546E696DLL && a2 == 0xED00007475706867 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x756F72685478616DLL && a2 == 0xED00007475706867 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x6E6F697461727564 && a2 == 0xE800000000000000 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x6C6C617261507369 && a2 == 0xEA00000000006C65)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 7;
    }
    else {
      return 8;
    }
  }
}

void sub_1000EC030(void *a1, void *a2, double a3, double a4)
{
  int64_t v8 = (int *)type metadata accessor for QALogger.LinearDownload(0);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v70 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10001644C((uint64_t *)&unk_1005A4E20);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v70 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v70 - v15;
  uint64_t v17 = type metadata accessor for Date();
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v20 = (char *)&v70 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  uint64_t v83 = (char *)&v70 - v22;
  __chkstk_darwin(v23);
  Swift::String v80 = (char *)&v70 - v24;
  if (qword_1005A30A8 != -1) {
    swift_once();
  }
  if (!qword_1005A6510 || !a1 || !a2) {
    return;
  }
  uint64_t v75 = v20;
  Swift::String v79 = v13;
  id v25 = (id)qword_1005A6510;
  uint64_t v26 = a1;
  id v74 = a2;
  id v27 = [v74 transactionMetrics];
  sub_100018D68(0, (unint64_t *)&qword_1005A4158);
  unint64_t v28 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v28 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v29 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v29) {
      goto LABEL_8;
    }
LABEL_32:
    swift_bridgeObjectRelease();
    unint64_t v57 = _swiftEmptyArrayStorage;
    double v31 = 0.0;
LABEL_33:
    uint64_t v59 = *(void *)&v26[OBJC_IVAR____TtC9appstored6LogKey_value];
    uint64_t v58 = *(void *)&v26[OBJC_IVAR____TtC9appstored6LogKey_value + 8];
    uint64_t v60 = v57[2];
    if (v60)
    {
      if (v60 == 1)
      {
        uint64_t v61 = 0;
        double v62 = 0.0;
      }
      else
      {
        uint64_t v61 = v60 & 0x7FFFFFFFFFFFFFFELL;
        unint64_t v63 = (double *)(v57 + 5);
        double v62 = 0.0;
        uint64_t v64 = v60 & 0x7FFFFFFFFFFFFFFELL;
        do
        {
          double v62 = v62 + *(v63 - 1) + *v63;
          v63 += 2;
          v64 -= 2;
        }
        while (v64);
        if (v60 == v61) {
          goto LABEL_42;
        }
      }
      uint64_t v65 = v60 - v61;
      char v66 = (double *)&v57[v61 + 4];
      do
      {
        double v67 = *v66++;
        double v62 = v62 + v67;
        --v65;
      }
      while (v65);
    }
    else
    {
      double v62 = 0.0;
    }
LABEL_42:
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    static Date.now.getter();
    char v68 = &v10[v8[5]];
    strcpy(v68, "linearDownload");
    v68[15] = -18;
    char v69 = &v10[v8[6]];
    *(void *)char v69 = v59;
    *((void *)v69 + 1) = v58;
    *(double *)&v10[v8[7]] = v62 / (double)v60;
    *(double *)&v10[v8[8]] = a3;
    *(double *)&v10[v8[9]] = a4;
    *(double *)&v10[v8[10]] = v31;
    v10[v8[11]] = 0;
    sub_1000E99E8((uint64_t)v10, v25);

    sub_1000ECF5C((uint64_t)v10, type metadata accessor for QALogger.LinearDownload);
    return;
  }
  uint64_t v29 = *(void *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v29) {
    goto LABEL_32;
  }
LABEL_8:
  id v70 = v25;
  uint64_t v71 = v26;
  uint64_t v72 = v8;
  unint64_t v73 = v10;
  if (v29 >= 1)
  {
    uint64_t v30 = 0;
    unint64_t v84 = v28 & 0xC000000000000001;
    uint64_t v86 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56);
    Swift::String v81 = (void (**)(char *, char *, uint64_t))(v18 + 32);
    os_log_t v82 = (unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48);
    Swift::String v77 = (void (**)(char *, uint64_t))(v18 + 8);
    Swift::String v76 = _swiftEmptyArrayStorage;
    double v31 = 0.0;
    uint64_t v32 = v80;
    uint64_t v85 = v29;
    Swift::String v78 = v16;
    while (1)
    {
      id v33 = v84 ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)() : *(id *)(v28 + 8 * v30 + 32);
      uint64_t v34 = v33;
      unint64_t v35 = v28;
      id v36 = objc_msgSend(v33, "responseStartDate", v70, v71, v72, v73);
      if (!v36) {
        break;
      }
      BOOL v37 = v36;
      uint64_t v38 = v83;
      static Date._unconditionallyBridgeFromObjectiveC(_:)();

      BOOL v39 = *v81;
      (*v81)(v16, v38, v17);
      uint64_t v40 = *v86;
      (*v86)(v16, 0, 1, v17);
      size_t v41 = *v82;
      if ((*v82)(v16, 1, v17) == 1) {
        goto LABEL_11;
      }
      v39(v32, v16, v17);
      id v42 = [v34 responseEndDate];
      if (v42)
      {
        uint64_t v43 = v42;
        uint64_t v44 = v83;
        static Date._unconditionallyBridgeFromObjectiveC(_:)();

        uint64_t v45 = (uint64_t)v79;
        uint64_t v46 = v44;
        uint64_t v32 = v80;
        v39(v79, v46, v17);
        v40((char *)v45, 0, 1, v17);
        unsigned int v47 = v41((char *)v45, 1, v17);
        unint64_t v28 = v35;
        if (v47 != 1)
        {
          uint64_t v48 = v75;
          v39(v75, (char *)v45, v17);
          char v49 = static Date.< infix(_:_:)();
          uint64_t v16 = v78;
          if (v49)
          {
            Date.timeIntervalSince(_:)();
            double v51 = v50;
            id v52 = [v34 countOfResponseBodyBytesReceived];
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              Swift::String v76 = sub_1000E83B8(0, v76[2] + 1, 1, v76);
            }
            unint64_t v54 = v76[2];
            unint64_t v53 = v76[3];
            if (v54 >= v53 >> 1) {
              Swift::String v76 = sub_1000E83B8((void *)(v53 > 1), v54 + 1, 1, v76);
            }
            double v31 = v31 + v51;
            unint64_t v55 = v76;
            v76[2] = v54 + 1;
            *(double *)&v55[v54 + 4] = (double)(uint64_t)v52 / v51;

            uint64_t v56 = *v77;
            (*v77)(v75, v17);
          }
          else
          {

            uint64_t v56 = *v77;
            (*v77)(v48, v17);
          }
          v56(v32, v17);
          goto LABEL_12;
        }
      }
      else
      {
        uint64_t v45 = (uint64_t)v79;
        v40(v79, 1, 1, v17);
        unint64_t v28 = v35;
      }

      (*v77)(v32, v17);
      sub_100016714(v45, (uint64_t *)&unk_1005A4E20);
      uint64_t v16 = v78;
LABEL_12:
      if (v85 == ++v30)
      {
        swift_bridgeObjectRelease();
        int64_t v8 = v72;
        uint64_t v10 = v73;
        id v25 = v70;
        uint64_t v26 = v71;
        unint64_t v57 = v76;
        goto LABEL_33;
      }
    }
    (*v86)(v16, 1, 1, v17);
LABEL_11:

    sub_100016714((uint64_t)v16, (uint64_t *)&unk_1005A4E20);
    unint64_t v28 = v35;
    goto LABEL_12;
  }
  __break(1u);
}

uint64_t sub_1000EC7F4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6D617473656D6974 && a2 == 0xE900000000000070;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 6775156 && a2 == 0xE300000000000000 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x79654B676F6CLL && a2 == 0xE600000000000000 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6E6F697461727564 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_1000EC9A4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6D617473656D6974 && a2 == 0xE900000000000070;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 6775156 && a2 == 0xE300000000000000 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x79654B676F6CLL && a2 == 0xE600000000000000 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x800000010044FCA0 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x800000010044FCC0 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x800000010044FCE0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 5;
    }
    else {
      return 6;
    }
  }
}

void sub_1000ECC00(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (int *)type metadata accessor for QALogger.DisplayedSpeed(0);
  __chkstk_darwin(v4);
  char v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(unsigned char *)(a1 + OBJC_IVAR____TtC9appstored10Throughput_isValid) == 1)
  {
    if (qword_1005A30A8 != -1) {
      swift_once();
    }
    uint64_t v7 = (void *)qword_1005A6510;
    if (qword_1005A6510)
    {
      uint64_t v8 = *(void *)(a1 + OBJC_IVAR____TtC9appstored10Throughput_avgValue);
      uint64_t v9 = *(void *)(a1 + OBJC_IVAR____TtC9appstored10Throughput_maxValue);
      uint64_t v11 = *(void *)(a2 + OBJC_IVAR____TtC9appstored6LogKey_value);
      uint64_t v10 = *(void *)(a2 + OBJC_IVAR____TtC9appstored6LogKey_value + 8);
      uint64_t v12 = *(void *)(a1 + OBJC_IVAR____TtC9appstored10Throughput_minValue);
      swift_bridgeObjectRetain();
      static Date.now.getter();
      uint64_t v13 = &v6[v4[5]];
      strcpy(v13, "displayedSpeed");
      v13[15] = -18;
      uint64_t v14 = &v6[v4[6]];
      *(void *)uint64_t v14 = v11;
      *((void *)v14 + 1) = v10;
      *(void *)&v6[v4[7]] = v8;
      *(void *)&v6[v4[8]] = v9;
      *(void *)&v6[v4[9]] = v12;
      sub_1000EA068((uint64_t)v6, v7);
      sub_1000ECF5C((uint64_t)v6, type metadata accessor for QALogger.DisplayedSpeed);
    }
  }
}

uint64_t type metadata accessor for QALogger.DisplayedSpeed(uint64_t a1)
{
  return sub_100066FAC(a1, qword_1005A6848);
}

uint64_t sub_1000ECDD0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000ECE1C()
{
  return sub_1000E657C(*(void *)(v0 + 16), v0 + 24);
}

void *sub_1000ECE28(void *a1)
{
  sub_10002FD00(a1, a1[3]);
  DynamicType = (void *)swift_getDynamicType();
  if ((unint64_t)(*DynamicType - 513) >= 2)
  {
    sub_10002E618((uint64_t)a1);
    return 0;
  }
  else
  {
    uint64_t v3 = DynamicType;
    EnumValueWitnessTable.getEnumTag(_:)();
    sub_10002E618((uint64_t)a1);
  }
  return v3;
}

uint64_t type metadata accessor for QALogger.Install(uint64_t a1)
{
  return sub_100066FAC(a1, qword_1005A67B0);
}

uint64_t sub_1000ECF5C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1000ECFBC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1000ED028()
{
  sub_10002E618(v0 + 24);
  return _swift_deallocObject(v0, 64, 7);
}

uint64_t type metadata accessor for QALogger.LinearDownload(uint64_t a1)
{
  return sub_100066FAC(a1, qword_1005A6708);
}

uint64_t type metadata accessor for QALogger.Asset(uint64_t a1)
{
  return sub_100066FAC(a1, qword_1005A6660);
}

unint64_t sub_1000ED0B0()
{
  unint64_t result = qword_1005A65D8;
  if (!qword_1005A65D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1005A65D8);
  }
  return result;
}

ValueMetadata *type metadata accessor for QALedgerWrapper()
{
  return &type metadata for QALedgerWrapper;
}

void *sub_1000ED114(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v26 = *a2;
    *a1 = *a2;
    a1 = (void *)(v26 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for Date();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    uint64_t v10 = (void *)((char *)a1 + v8);
    uint64_t v11 = (void *)((char *)a2 + v8);
    uint64_t v12 = v11[1];
    *uint64_t v10 = *v11;
    v10[1] = v12;
    uint64_t v13 = (void *)((char *)a1 + v9);
    uint64_t v14 = (void *)((char *)a2 + v9);
    uint64_t v15 = v14[1];
    *uint64_t v13 = *v14;
    v13[1] = v15;
    uint64_t v16 = a3[8];
    *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
    *((unsigned char *)a1 + v16) = *((unsigned char *)a2 + v16);
    uint64_t v17 = a3[9];
    uint64_t v18 = (char *)a1 + v17;
    uint64_t v19 = (char *)a2 + v17;
    uint64_t v20 = type metadata accessor for URL();
    uint64_t v21 = *(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v21(v18, v19, v20);
    uint64_t v22 = a3[10];
    uint64_t v23 = (void *)((char *)a1 + v22);
    uint64_t v24 = (void *)((char *)a2 + v22);
    uint64_t v25 = v24[1];
    *uint64_t v23 = *v24;
    v23[1] = v25;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_1000ED298(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v5 = a1 + *(int *)(a2 + 36);
  uint64_t v6 = type metadata accessor for URL();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1000ED378(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = (void *)(a1 + v7);
  uint64_t v10 = (void *)(a2 + v7);
  uint64_t v11 = v10[1];
  *uint64_t v9 = *v10;
  v9[1] = v11;
  uint64_t v12 = (void *)(a1 + v8);
  uint64_t v13 = (void *)(a2 + v8);
  uint64_t v14 = v13[1];
  *uint64_t v12 = *v13;
  v12[1] = v14;
  uint64_t v15 = a3[8];
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  *(unsigned char *)(a1 + v15) = *(unsigned char *)(a2 + v15);
  uint64_t v16 = a3[9];
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  uint64_t v19 = type metadata accessor for URL();
  uint64_t v20 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v20(v17, v18, v19);
  uint64_t v21 = a3[10];
  uint64_t v22 = (void *)(a1 + v21);
  uint64_t v23 = (void *)(a2 + v21);
  uint64_t v24 = v23[1];
  *uint64_t v22 = *v23;
  v22[1] = v24;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1000ED4AC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v10 = a3[6];
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (void *)(a2 + v10);
  *uint64_t v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  uint64_t v13 = a3[9];
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  uint64_t v16 = type metadata accessor for URL();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 24))(v14, v15, v16);
  uint64_t v17 = a3[10];
  uint64_t v18 = (void *)(a1 + v17);
  uint64_t v19 = (void *)(a2 + v17);
  *uint64_t v18 = *v19;
  v18[1] = v19[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1000ED608(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  uint64_t v8 = a3[8];
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  *(unsigned char *)(a1 + v8) = *(unsigned char *)(a2 + v8);
  uint64_t v9 = a3[9];
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  uint64_t v12 = type metadata accessor for URL();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 32))(v10, v11, v12);
  *(_OWORD *)(a1 + a3[10]) = *(_OWORD *)(a2 + a3[10]);
  return a1;
}

uint64_t sub_1000ED6FC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  *uint64_t v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  uint64_t v12 = a3[6];
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (uint64_t *)(a2 + v12);
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  *uint64_t v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  uint64_t v17 = a3[8];
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  *(unsigned char *)(a1 + v17) = *(unsigned char *)(a2 + v17);
  uint64_t v18 = a3[9];
  uint64_t v19 = a1 + v18;
  uint64_t v20 = a2 + v18;
  uint64_t v21 = type metadata accessor for URL();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 40))(v19, v20, v21);
  uint64_t v22 = a3[10];
  uint64_t v23 = (void *)(a1 + v22);
  uint64_t v24 = (uint64_t *)(a2 + v22);
  uint64_t v26 = *v24;
  uint64_t v25 = v24[1];
  *uint64_t v23 = v26;
  v23[1] = v25;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1000ED824(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000ED838);
}

uint64_t sub_1000ED838(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else if (a2 == 0x7FFFFFFF)
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
  else
  {
    uint64_t v11 = type metadata accessor for URL();
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a3 + 36);
    return v12(v14, a2, v13);
  }
}

uint64_t sub_1000ED968(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000ED97C);
}

uint64_t sub_1000ED97C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for Date();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v11 = type metadata accessor for URL();
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a4 + 36);
    return v12(v14, a2, a2, v13);
  }
  return result;
}

uint64_t sub_1000EDAAC()
{
  uint64_t result = type metadata accessor for Date();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for URL();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

void *sub_1000EDB94(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v18 = *a2;
    *a1 = *a2;
    a1 = (void *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for Date();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    unint64_t v10 = (void *)((char *)a1 + v8);
    uint64_t v11 = (void *)((char *)a2 + v8);
    uint64_t v12 = v11[1];
    *unint64_t v10 = *v11;
    v10[1] = v12;
    uint64_t v13 = (void *)((char *)a1 + v9);
    uint64_t v14 = (void *)((char *)a2 + v9);
    uint64_t v15 = v14[1];
    *uint64_t v13 = *v14;
    v13[1] = v15;
    uint64_t v16 = a3[8];
    *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
    *(void *)((char *)a1 + v16) = *(void *)((char *)a2 + v16);
    uint64_t v17 = a3[10];
    *(void *)((char *)a1 + a3[9]) = *(void *)((char *)a2 + a3[9]);
    *(void *)((char *)a1 + v17) = *(void *)((char *)a2 + v17);
    *((unsigned char *)a1 + a3[11]) = *((unsigned char *)a2 + a3[11]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_1000EDCBC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = (void *)(a1 + v7);
  unint64_t v10 = (void *)(a2 + v7);
  uint64_t v11 = v10[1];
  *uint64_t v9 = *v10;
  v9[1] = v11;
  uint64_t v12 = (void *)(a1 + v8);
  uint64_t v13 = (void *)(a2 + v8);
  uint64_t v14 = v13[1];
  *uint64_t v12 = *v13;
  v12[1] = v14;
  uint64_t v15 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  *(void *)(a1 + v15) = *(void *)(a2 + v15);
  uint64_t v16 = a3[10];
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  *(void *)(a1 + v16) = *(void *)(a2 + v16);
  *(unsigned char *)(a1 + a3[11]) = *(unsigned char *)(a2 + a3[11]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1000EDD90(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v10 = a3[6];
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (void *)(a2 + v10);
  *uint64_t v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  *(void *)(a1 + a3[10]) = *(void *)(a2 + a3[10]);
  *(unsigned char *)(a1 + a3[11]) = *(unsigned char *)(a2 + a3[11]);
  return a1;
}

uint64_t sub_1000EDE94(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  uint64_t v8 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  *(void *)(a1 + v8) = *(void *)(a2 + v8);
  uint64_t v9 = a3[10];
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  *(void *)(a1 + v9) = *(void *)(a2 + v9);
  *(unsigned char *)(a1 + a3[11]) = *(unsigned char *)(a2 + a3[11]);
  return a1;
}

uint64_t sub_1000EDF4C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  *uint64_t v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  uint64_t v12 = a3[6];
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (uint64_t *)(a2 + v12);
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  *uint64_t v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  uint64_t v17 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  *(void *)(a1 + v17) = *(void *)(a2 + v17);
  uint64_t v18 = a3[10];
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  *(void *)(a1 + v18) = *(void *)(a2 + v18);
  *(unsigned char *)(a1 + a3[11]) = *(unsigned char *)(a2 + a3[11]);
  return a1;
}

uint64_t sub_1000EE028(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000EE03C);
}

uint64_t sub_1000EE040(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000EE054);
}

uint64_t sub_1000EE058()
{
  uint64_t result = type metadata accessor for Date();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1000EE10C(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for Date();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    uint64_t v10 = (uint64_t *)((char *)a1 + v8);
    uint64_t v11 = (uint64_t *)((char *)a2 + v8);
    uint64_t v12 = v11[1];
    *uint64_t v10 = *v11;
    v10[1] = v12;
    uint64_t v13 = (uint64_t *)((char *)a1 + v9);
    uint64_t v14 = (uint64_t *)((char *)a2 + v9);
    uint64_t v15 = v14[1];
    *uint64_t v13 = *v14;
    v13[1] = v15;
    *(uint64_t *)((char *)a1 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_1000EE208(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = (void *)(a1 + v7);
  uint64_t v10 = (void *)(a2 + v7);
  uint64_t v11 = v10[1];
  *uint64_t v9 = *v10;
  v9[1] = v11;
  uint64_t v12 = (void *)(a1 + v8);
  uint64_t v13 = (void *)(a2 + v8);
  uint64_t v14 = v13[1];
  *uint64_t v12 = *v13;
  v12[1] = v14;
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1000EE2B4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v10 = a3[6];
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (void *)(a2 + v10);
  *uint64_t v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_1000EE388(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_1000EE418(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  *uint64_t v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  uint64_t v12 = a3[6];
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (uint64_t *)(a2 + v12);
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  *uint64_t v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_1000EE4CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000EE4E0);
}

uint64_t sub_1000EE4E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000EE4F8);
}

uint64_t sub_1000EE4FC()
{
  uint64_t result = type metadata accessor for Date();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1000EE5A0(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v17 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for Date();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    uint64_t v10 = (uint64_t *)((char *)a1 + v8);
    uint64_t v11 = (uint64_t *)((char *)a2 + v8);
    uint64_t v12 = v11[1];
    *uint64_t v10 = *v11;
    v10[1] = v12;
    uint64_t v13 = (uint64_t *)((char *)a1 + v9);
    uint64_t v14 = (uint64_t *)((char *)a2 + v9);
    uint64_t v15 = v14[1];
    *uint64_t v13 = *v14;
    v13[1] = v15;
    uint64_t v16 = a3[8];
    *(uint64_t *)((char *)a1 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
    *(uint64_t *)((char *)a1 + v16) = *(uint64_t *)((char *)a2 + v16);
    *(uint64_t *)((char *)a1 + a3[9]) = *(uint64_t *)((char *)a2 + a3[9]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_1000EE6B0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1000EE738(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = (void *)(a1 + v7);
  uint64_t v10 = (void *)(a2 + v7);
  uint64_t v11 = v10[1];
  *uint64_t v9 = *v10;
  v9[1] = v11;
  uint64_t v12 = (void *)(a1 + v8);
  uint64_t v13 = (void *)(a2 + v8);
  uint64_t v14 = v13[1];
  *uint64_t v12 = *v13;
  v12[1] = v14;
  uint64_t v15 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  *(void *)(a1 + v15) = *(void *)(a2 + v15);
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1000EE7F8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v10 = a3[6];
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (void *)(a2 + v10);
  *uint64_t v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  return a1;
}

uint64_t sub_1000EE8E4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  uint64_t v8 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  *(void *)(a1 + v8) = *(void *)(a2 + v8);
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  return a1;
}

uint64_t sub_1000EE988(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  *uint64_t v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  uint64_t v12 = a3[6];
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (uint64_t *)(a2 + v12);
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  *uint64_t v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  uint64_t v17 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  *(void *)(a1 + v17) = *(void *)(a2 + v17);
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  return a1;
}

uint64_t sub_1000EEA50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000EEA64);
}

uint64_t sub_1000EEA68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_1000EEB2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000EEB40);
}

uint64_t sub_1000EEB44(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for Date();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
  return result;
}

uint64_t sub_1000EEC04()
{
  uint64_t result = type metadata accessor for Date();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1000EECAC(uint64_t a1)
{
  uint64_t result = sub_1000ECDD0(&qword_1005A6890, (void (*)(uint64_t))type metadata accessor for QALogger.Asset);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1000EED04(uint64_t a1)
{
  uint64_t result = sub_1000ECDD0(&qword_1005A6898, (void (*)(uint64_t))type metadata accessor for QALogger.LinearDownload);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1000EED5C(uint64_t a1)
{
  uint64_t result = sub_1000ECDD0(&qword_1005A68A0, (void (*)(uint64_t))type metadata accessor for QALogger.Install);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1000EEDB4(uint64_t a1)
{
  uint64_t result = sub_1000ECDD0(&qword_1005A68A8, (void (*)(uint64_t))type metadata accessor for QALogger.DisplayedSpeed);
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1000EEE0C()
{
  unint64_t result = qword_1005A68B8;
  if (!qword_1005A68B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1005A68B8);
  }
  return result;
}

unint64_t sub_1000EEE60()
{
  unint64_t result = qword_1005A68D8;
  if (!qword_1005A68D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1005A68D8);
  }
  return result;
}

unint64_t sub_1000EEEB4()
{
  unint64_t result = qword_1005A68E8;
  if (!qword_1005A68E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1005A68E8);
  }
  return result;
}

unint64_t sub_1000EEF08()
{
  unint64_t result = qword_1005A68F8;
  if (!qword_1005A68F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1005A68F8);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for QALogger.DisplayedSpeed.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFB) {
    goto LABEL_17;
  }
  if (a2 + 5 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 5) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 5;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 6;
  int v8 = v6 - 6;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for QALogger.DisplayedSpeed.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000EF0B8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for QALogger.DisplayedSpeed.CodingKeys()
{
  return &type metadata for QALogger.DisplayedSpeed.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for QALogger.Install.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000EF1BCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for QALogger.Install.CodingKeys()
{
  return &type metadata for QALogger.Install.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for QALogger.LinearDownload.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *unint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000EF2C0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for QALogger.LinearDownload.CodingKeys()
{
  return &type metadata for QALogger.LinearDownload.CodingKeys;
}

uint64_t getEnumTagSinglePayload for QALogger.Asset.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFA) {
    goto LABEL_17;
  }
  if (a2 + 6 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 6) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 6;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 7;
  int v8 = v6 - 7;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for QALogger.Asset.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *unint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000EF454);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for QALogger.Asset.CodingKeys()
{
  return &type metadata for QALogger.Asset.CodingKeys;
}

unint64_t sub_1000EF490()
{
  unint64_t result = qword_1005A6900;
  if (!qword_1005A6900)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1005A6900);
  }
  return result;
}

unint64_t sub_1000EF4E8()
{
  unint64_t result = qword_1005A6908;
  if (!qword_1005A6908)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1005A6908);
  }
  return result;
}

unint64_t sub_1000EF540()
{
  unint64_t result = qword_1005A6910;
  if (!qword_1005A6910)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1005A6910);
  }
  return result;
}

unint64_t sub_1000EF598()
{
  unint64_t result = qword_1005A6918;
  if (!qword_1005A6918)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1005A6918);
  }
  return result;
}

unint64_t sub_1000EF5F0()
{
  unint64_t result = qword_1005A6920;
  if (!qword_1005A6920)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1005A6920);
  }
  return result;
}

unint64_t sub_1000EF648()
{
  unint64_t result = qword_1005A6928;
  if (!qword_1005A6928)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1005A6928);
  }
  return result;
}

unint64_t sub_1000EF6A0()
{
  unint64_t result = qword_1005A6930;
  if (!qword_1005A6930)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1005A6930);
  }
  return result;
}

unint64_t sub_1000EF6F8()
{
  unint64_t result = qword_1005A6938;
  if (!qword_1005A6938)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1005A6938);
  }
  return result;
}

unint64_t sub_1000EF750()
{
  unint64_t result = qword_1005A6940;
  if (!qword_1005A6940)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1005A6940);
  }
  return result;
}

unint64_t sub_1000EF7A8()
{
  unint64_t result = qword_1005A6948;
  if (!qword_1005A6948)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1005A6948);
  }
  return result;
}

unint64_t sub_1000EF800()
{
  unint64_t result = qword_1005A6950;
  if (!qword_1005A6950)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1005A6950);
  }
  return result;
}

unint64_t sub_1000EF858()
{
  unint64_t result = qword_1005A6958;
  if (!qword_1005A6958)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1005A6958);
  }
  return result;
}

uint64_t sub_1000EF8D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1000056F0(a1, a2, a3);
}

uint64_t sub_1000EF8F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[6] = a6;
  v7[7] = a7;
  v7[4] = a4;
  v7[5] = a5;
  sub_10001644C(&qword_1005A69A0);
  v7[8] = swift_task_alloc();
  uint64_t v8 = type metadata accessor for Logger();
  v7[9] = v8;
  v7[10] = *(void *)(v8 - 8);
  v7[11] = swift_task_alloc();
  v7[12] = swift_task_alloc();
  v7[13] = swift_task_alloc();
  return _swift_task_switch(sub_1000EFA08, 0, 0);
}

uint64_t sub_1000EFA08()
{
  uint64_t v48 = v0;
  static Logger.skAdNetwork.getter();
  unint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v1, v2))
  {
    int v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)int v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Initiating token handoff", v3, 2u);
    swift_slowDealloc();
  }
  uint64_t v4 = v0[4];
  uint64_t v5 = v0[13];
  uint64_t v6 = v0[9];
  uint64_t v7 = v0[10];

  uint64_t v8 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
  v0[14] = v8;
  v0[15] = (v7 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v8(v5, v6);
  if (!v4) {
    goto LABEL_21;
  }
  uint64_t v9 = (void *)v0[4];
  uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v12 = v11;
  if (v10 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v12 == v13)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_13;
  }
  char v15 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v15)
  {
LABEL_13:
    uint64_t v20 = v0[8];
    uint64_t v21 = (unsigned int *)&enum case for TokenHandoff.SKAdNetworkEnvironment.development(_:);
LABEL_14:
    uint64_t v22 = *v21;
    uint64_t v23 = type metadata accessor for TokenHandoff.SKAdNetworkEnvironment();
    uint64_t v24 = *(void *)(v23 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 104))(v20, v22, v23);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v24 + 56))(v20, 0, 1, v23);
    goto LABEL_22;
  }
  uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v18 = v17;
  if (v16 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v18 == v19)
  {
    swift_bridgeObjectRelease_n();
LABEL_16:
    uint64_t v20 = v0[8];
    uint64_t v21 = (unsigned int *)&enum case for TokenHandoff.SKAdNetworkEnvironment.production(_:);
    goto LABEL_14;
  }
  char v25 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v25) {
    goto LABEL_16;
  }
  id v26 = v9;
  static Logger.skAdNetwork.getter();
  id v27 = v26;
  unint64_t v28 = Logger.logObject.getter();
  os_log_type_t v29 = static os_log_type_t.error.getter();
  BOOL v30 = os_log_type_enabled(v28, v29);
  uint64_t v31 = v0[12];
  uint64_t v32 = v0[9];
  if (v30)
  {
    uint64_t v46 = v0[9];
    id v33 = (uint8_t *)swift_slowAlloc();
    uint64_t v47 = swift_slowAlloc();
    *(_DWORD *)id v33 = 136315138;
    uint64_t v34 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    v0[3] = sub_1000F7290(v34, v35, &v47);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();

    _os_log_impl((void *)&_mh_execute_header, v28, v29, "Unknown skan environment: %s", v33, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v36 = v31;
    uint64_t v37 = v46;
  }
  else
  {

    uint64_t v36 = v31;
    uint64_t v37 = v32;
  }
  v8(v36, v37);
LABEL_21:
  uint64_t v38 = v0[8];
  uint64_t v39 = type metadata accessor for TokenHandoff.SKAdNetworkEnvironment();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56))(v38, 1, 1, v39);
LABEL_22:
  uint64_t v40 = (void *)swift_task_alloc();
  v0[16] = v40;
  *uint64_t v40 = v0;
  v40[1] = sub_1000EFEC8;
  uint64_t v41 = v0[7];
  uint64_t v42 = v0[8];
  uint64_t v44 = v0[5];
  uint64_t v43 = v0[6];
  return static TokenHandoff.handoffUTToken(tokenData:advertisedItemID:skanEnvironment:)(v44, v43, v41, v42);
}

uint64_t sub_1000EFEC8()
{
  *(void *)(*(void *)v1 + 136) = v0;
  swift_task_dealloc();
  if (v0) {
    os_log_type_t v2 = sub_1000F0078;
  }
  else {
    os_log_type_t v2 = sub_1000EFFDC;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1000EFFDC()
{
  sub_100016714(*(void *)(v0 + 64), &qword_1005A69A0);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1000F0078()
{
  static Logger.skAdNetwork.getter();
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    uint64_t v4 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v3 = 138412290;
    swift_errorRetain();
    uint64_t v5 = _swift_stdlib_bridgeErrorToNSError();
    v0[2] = v5;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v4 = v5;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Couldn't hand token off %@", v3, 0xCu);
    sub_10001644C((uint64_t *)&unk_1005A3AA0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_errorRelease();
    swift_errorRelease();
  }
  uint64_t v6 = (void (*)(uint64_t, uint64_t))v0[14];
  uint64_t v7 = v0[11];
  uint64_t v8 = v0[9];
  swift_errorRelease();
  v6(v7, v8);
  sub_100016714(v0[8], &qword_1005A69A0);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

id sub_1000F0448()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SKANTokenHandoff();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for SKANTokenHandoff()
{
  return self;
}

uint64_t sub_1000F04A0()
{
  swift_unknownObjectRelease();

  sub_10001EC80(*(void *)(v0 + 40), *(void *)(v0 + 48));
  return _swift_deallocObject(v0, 64, 7);
}

uint64_t sub_1000F04E8(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v9 = v1[6];
  uint64_t v8 = v1[7];
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *uint64_t v10 = v2;
  v10[1] = sub_100005040;
  return sub_1000EF8F8(a1, v4, v5, v6, v7, v9, v8);
}

uint64_t sub_1000F05BC()
{
  swift_release();
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000F05F8(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 7368801;
  unint64_t v3 = 0xE300000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 7368801;
  switch(v4)
  {
    case 1:
      uint64_t v5 = 0x6973726556707061;
      unint64_t v3 = 0xEA00000000006E6FLL;
      break;
    case 2:
      uint64_t v5 = 0x7372655665736162;
      unint64_t v3 = 0xEB000000006E6F69;
      break;
    case 3:
      uint64_t v5 = 0x726556746E657665;
      unint64_t v3 = 0xEC0000006E6F6973;
      break;
    case 4:
      uint64_t v5 = 0x56646C697542736FLL;
      uint64_t v6 = 0x6E6F69737265;
      goto LABEL_9;
    case 5:
      unint64_t v3 = 0xE600000000000000;
      uint64_t v5 = 0x656D614E736FLL;
      break;
    case 6:
      uint64_t v5 = 0x6F6973726556736FLL;
      unint64_t v3 = 0xE90000000000006ELL;
      break;
    case 7:
      uint64_t v5 = 0x656E6F7A656D6974;
      uint64_t v6 = 0x74657366664FLL;
LABEL_9:
      unint64_t v3 = v6 & 0xFFFFFFFFFFFFLL | 0xEE00000000000000;
      break;
    default:
      break;
  }
  unint64_t v7 = 0xE300000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v7 = 0xEA00000000006E6FLL;
      if (v5 == 0x6973726556707061) {
        goto LABEL_25;
      }
      goto LABEL_27;
    case 2:
      unint64_t v7 = 0xEB000000006E6F69;
      if (v5 != 0x7372655665736162) {
        goto LABEL_27;
      }
      goto LABEL_25;
    case 3:
      unint64_t v7 = 0xEC0000006E6F6973;
      if (v5 != 0x726556746E657665) {
        goto LABEL_27;
      }
      goto LABEL_25;
    case 4:
      uint64_t v8 = 0x56646C697542736FLL;
      uint64_t v9 = 0x6E6F69737265;
      goto LABEL_24;
    case 5:
      unint64_t v7 = 0xE600000000000000;
      if (v5 != 0x656D614E736FLL) {
        goto LABEL_27;
      }
      goto LABEL_25;
    case 6:
      uint64_t v2 = 0x6F6973726556736FLL;
      unint64_t v7 = 0xE90000000000006ELL;
      goto LABEL_21;
    case 7:
      uint64_t v8 = 0x656E6F7A656D6974;
      uint64_t v9 = 0x74657366664FLL;
LABEL_24:
      unint64_t v7 = v9 & 0xFFFFFFFFFFFFLL | 0xEE00000000000000;
      if (v5 == v8) {
        goto LABEL_25;
      }
      goto LABEL_27;
    default:
LABEL_21:
      if (v5 != v2) {
        goto LABEL_27;
      }
LABEL_25:
      if (v3 == v7) {
        char v10 = 1;
      }
      else {
LABEL_27:
      }
        char v10 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v10 & 1;
  }
}

uint64_t sub_1000F08C0(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xEE006E656B6F5465;
  unint64_t v3 = 0x7669746341736168;
  uint64_t v4 = a1;
  unint64_t v5 = 0x7669746341736168;
  unint64_t v6 = 0xEE006E656B6F5465;
  switch(v4)
  {
    case 1:
      unint64_t v5 = 0x6D61466E656B6F74;
      unint64_t v6 = 0xED00006449796C69;
      break;
    case 2:
      unint64_t v6 = 0x800000010044A650;
      unint64_t v5 = 0xD000000000000013;
      break;
    case 3:
      unint64_t v5 = 0x746E456E656B6F74;
      unint64_t v6 = 0xEC00000073656972;
      break;
    default:
      break;
  }
  switch(a2)
  {
    case 1:
      unint64_t v2 = 0xED00006449796C69;
      if (v5 == 0x6D61466E656B6F74) {
        goto LABEL_12;
      }
      goto LABEL_14;
    case 2:
      unint64_t v2 = 0x800000010044A650;
      unint64_t v3 = 0xD000000000000013;
      goto LABEL_9;
    case 3:
      unint64_t v2 = 0xEC00000073656972;
      if (v5 == 0x746E456E656B6F74) {
        goto LABEL_12;
      }
      goto LABEL_14;
    default:
LABEL_9:
      if (v5 != v3) {
        goto LABEL_14;
      }
LABEL_12:
      if (v6 == v2) {
        char v7 = 1;
      }
      else {
LABEL_14:
      }
        char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_1000F0A98(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    unint64_t v3 = 0x7079546E656B6F74;
  }
  else {
    unint64_t v3 = 0xD000000000000015;
  }
  if (v2) {
    unint64_t v4 = 0x800000010044A610;
  }
  else {
    unint64_t v4 = 0xE900000000000065;
  }
  if (a2) {
    unint64_t v5 = 0x7079546E656B6F74;
  }
  else {
    unint64_t v5 = 0xD000000000000015;
  }
  if (a2) {
    unint64_t v6 = 0xE900000000000065;
  }
  else {
    unint64_t v6 = 0x800000010044A610;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1000F0B48(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x6174736E4977656ELL;
  unint64_t v3 = 0xEA00000000006C6CLL;
  uint64_t v4 = a1;
  uint64_t v5 = 0x6174736E4977656ELL;
  switch(v4)
  {
    case 1:
      unsigned int v6 = 1717987684;
      goto LABEL_5;
    case 2:
      uint64_t v5 = 0x65446E7265646F6DLL;
      unint64_t v3 = 0xEB0000000061746CLL;
      break;
    case 3:
      unsigned int v6 = 1819047270;
LABEL_5:
      uint64_t v5 = v6 | 0x6164705500000000;
      unint64_t v3 = 0xEA00000000006574;
      break;
    default:
      break;
  }
  unint64_t v7 = 0xEA00000000006C6CLL;
  switch(a2)
  {
    case 1:
      unsigned int v8 = 1717987684;
      goto LABEL_12;
    case 2:
      uint64_t v2 = 0x65446E7265646F6DLL;
      unint64_t v7 = 0xEB0000000061746CLL;
      goto LABEL_9;
    case 3:
      unsigned int v8 = 1819047270;
LABEL_12:
      unint64_t v7 = 0xEA00000000006574;
      if (v5 == (v8 | 0x6164705500000000)) {
        goto LABEL_13;
      }
      goto LABEL_15;
    default:
LABEL_9:
      if (v5 != v2) {
        goto LABEL_15;
      }
LABEL_13:
      if (v3 == v7) {
        char v9 = 1;
      }
      else {
LABEL_15:
      }
        char v9 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v9 & 1;
  }
}

uint64_t sub_1000F0CD8(char a1, unsigned __int8 a2)
{
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v2 = 1635018093;
    }
    else {
      uint64_t v2 = 1701869940;
    }
    unint64_t v3 = 0xE400000000000000;
    int v4 = a2;
    if (a2)
    {
LABEL_6:
      if (v4 == 1) {
        uint64_t v5 = 1635018093;
      }
      else {
        uint64_t v5 = 1701869940;
      }
      unint64_t v6 = 0xE400000000000000;
      if (v2 != v5) {
        goto LABEL_15;
      }
      goto LABEL_13;
    }
  }
  else
  {
    unint64_t v3 = 0xE200000000000000;
    uint64_t v2 = 25705;
    int v4 = a2;
    if (a2) {
      goto LABEL_6;
    }
  }
  unint64_t v6 = 0xE200000000000000;
  if (v2 != 25705)
  {
LABEL_15:
    char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
    goto LABEL_16;
  }
LABEL_13:
  if (v3 != v6) {
    goto LABEL_15;
  }
  char v7 = 1;
LABEL_16:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1000F0DBC(char a1, char a2)
{
  unint64_t v3 = 0xE200000000000000;
  uint64_t v4 = 29551;
  switch(a1)
  {
    case 1:
      uint64_t v4 = 0x4E646C697542736FLL;
      unint64_t v3 = 0xED00007265626D75;
      break;
    case 2:
      uint64_t v4 = 0x6572617764726168;
      unint64_t v3 = 0xEE00796C696D6146;
      break;
    case 3:
      uint64_t v4 = 0x6572617764726168;
      unint64_t v3 = 0xED00006C65646F4DLL;
      break;
    case 4:
      uint64_t v4 = 0x6F724665726F7473;
      unint64_t v3 = 0xEC0000006449746ELL;
      break;
    default:
      break;
  }
  unint64_t v5 = 0xE200000000000000;
  uint64_t v6 = 29551;
  switch(a2)
  {
    case 1:
      unint64_t v5 = 0xED00007265626D75;
      if (v4 == 0x4E646C697542736FLL) {
        goto LABEL_13;
      }
      goto LABEL_16;
    case 2:
      unint64_t v5 = 0xEE00796C696D6146;
      if (v4 != 0x6572617764726168) {
        goto LABEL_16;
      }
      goto LABEL_13;
    case 3:
      uint64_t v6 = 0x6572617764726168;
      unint64_t v5 = 0xED00006C65646F4DLL;
      goto LABEL_12;
    case 4:
      unint64_t v5 = 0xEC0000006449746ELL;
      if (v4 != 0x6F724665726F7473) {
        goto LABEL_16;
      }
      goto LABEL_13;
    default:
LABEL_12:
      if (v4 != v6) {
        goto LABEL_16;
      }
LABEL_13:
      if (v3 == v5) {
        char v7 = 1;
      }
      else {
LABEL_16:
      }
        char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_1000F0FCC(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 7368801;
  unint64_t v3 = 0xE300000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 7368801;
  switch(v4)
  {
    case 1:
      uint64_t v5 = 6448503;
      break;
    case 2:
      uint64_t v5 = 0x6F72685477656976;
      unint64_t v3 = 0xEB00000000686775;
      break;
    case 3:
      uint64_t v5 = 0x7268546B63696C63;
      unint64_t v3 = 0xEC0000006867756FLL;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE300000000000000;
  switch(a2)
  {
    case 1:
      if (v5 == 6448503) {
        goto LABEL_12;
      }
      goto LABEL_14;
    case 2:
      uint64_t v2 = 0x6F72685477656976;
      unint64_t v6 = 0xEB00000000686775;
      goto LABEL_9;
    case 3:
      unint64_t v6 = 0xEC0000006867756FLL;
      if (v5 == 0x7268546B63696C63) {
        goto LABEL_12;
      }
      goto LABEL_14;
    default:
LABEL_9:
      if (v5 != v2) {
        goto LABEL_14;
      }
LABEL_12:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_14:
      }
        char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_1000F1154(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v3 = 0x657372616F63;
    }
    else {
      uint64_t v3 = 1701734758;
    }
    if (v2 == 1) {
      unint64_t v4 = 0xE600000000000000;
    }
    else {
      unint64_t v4 = 0xE400000000000000;
    }
    int v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1) {
        uint64_t v6 = 0x657372616F63;
      }
      else {
        uint64_t v6 = 1701734758;
      }
      if (v5 == 1) {
        unint64_t v7 = 0xE600000000000000;
      }
      else {
        unint64_t v7 = 0xE400000000000000;
      }
      if (v3 != v6) {
        goto LABEL_21;
      }
      goto LABEL_19;
    }
  }
  else
  {
    uint64_t v3 = 1701736302;
    unint64_t v4 = 0xE400000000000000;
    int v5 = a2;
    if (a2) {
      goto LABEL_9;
    }
  }
  unint64_t v7 = 0xE400000000000000;
  if (v3 != 1701736302)
  {
LABEL_21:
    char v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7) {
    goto LABEL_21;
  }
  char v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1000F123C(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x6B63696C63;
  }
  else {
    uint64_t v3 = 2003134838;
  }
  if (v2) {
    unint64_t v4 = 0xE400000000000000;
  }
  else {
    unint64_t v4 = 0xE500000000000000;
  }
  if (a2) {
    uint64_t v5 = 0x6B63696C63;
  }
  else {
    uint64_t v5 = 2003134838;
  }
  if (a2) {
    unint64_t v6 = 0xE500000000000000;
  }
  else {
    unint64_t v6 = 0xE400000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1000F12D8(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x64657A696C616572;
  }
  else {
    uint64_t v3 = 0x676E69646E6570;
  }
  if (v2) {
    unint64_t v4 = 0xE700000000000000;
  }
  else {
    unint64_t v4 = 0xE800000000000000;
  }
  if (a2) {
    uint64_t v5 = 0x64657A696C616572;
  }
  else {
    uint64_t v5 = 0x676E69646E6570;
  }
  if (a2) {
    unint64_t v6 = 0xE800000000000000;
  }
  else {
    unint64_t v6 = 0xE700000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1000F1380(unsigned __int8 a1, unsigned __int8 a2)
{
  unint64_t v2 = 0xE90000000000006BLL;
  uint64_t v3 = 0x726F7774654E6461;
  int v4 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v5 = 0x656372656D6D6F63;
    }
    else {
      uint64_t v5 = 0x65706F6C65766564;
    }
    if (v4 == 1) {
      unint64_t v6 = 0xE800000000000000;
    }
    else {
      unint64_t v6 = 0xE900000000000072;
    }
    int v7 = a2;
    if (!a2) {
      goto LABEL_15;
    }
    goto LABEL_9;
  }
  uint64_t v5 = 0x726F7774654E6461;
  unint64_t v6 = 0xE90000000000006BLL;
  int v7 = a2;
  if (a2)
  {
LABEL_9:
    if (v7 == 1) {
      uint64_t v3 = 0x656372656D6D6F63;
    }
    else {
      uint64_t v3 = 0x65706F6C65766564;
    }
    if (v7 == 1) {
      unint64_t v2 = 0xE800000000000000;
    }
    else {
      unint64_t v2 = 0xE900000000000072;
    }
  }
LABEL_15:
  if (v5 == v3 && v6 == v2) {
    char v8 = 1;
  }
  else {
    char v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1000F149C(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xE900000000000064;
  uint64_t v3 = 0x657A696C616E6966;
  uint64_t v4 = a1;
  uint64_t v5 = 0x657A696C616E6966;
  unint64_t v6 = 0xE900000000000064;
  switch(v4)
  {
    case 1:
      unint64_t v6 = 0xE800000000000000;
      uint64_t v5 = 0x7265747369676572;
      break;
    case 2:
      unint64_t v6 = 0xE600000000000000;
      uint64_t v5 = 0x657461647075;
      break;
    case 3:
      uint64_t v5 = 0x73696D736E617274;
      unint64_t v6 = 0xEC0000006E6F6973;
      break;
    case 4:
      unint64_t v6 = 0xE700000000000000;
      uint64_t v5 = 0x74706965636572;
      break;
    case 5:
      uint64_t v5 = 0x6365526E656B6F74;
      unint64_t v6 = 0xED00006465766965;
      break;
    case 6:
      uint64_t v5 = 0x52646579616C6564;
      unint64_t v6 = 0xEE00747069656365;
      break;
    case 7:
      unint64_t v6 = 0xE700000000000000;
      uint64_t v5 = 0x6572756C696166;
      break;
    case 8:
      unint64_t v6 = 0xE800000000000000;
      uint64_t v5 = 0x64657463656A6572;
      break;
    default:
      break;
  }
  switch(a2)
  {
    case 1:
      unint64_t v2 = 0xE800000000000000;
      if (v5 == 0x7265747369676572) {
        goto LABEL_25;
      }
      goto LABEL_28;
    case 2:
      unint64_t v2 = 0xE600000000000000;
      if (v5 != 0x657461647075) {
        goto LABEL_28;
      }
      goto LABEL_25;
    case 3:
      unint64_t v2 = 0xEC0000006E6F6973;
      if (v5 != 0x73696D736E617274) {
        goto LABEL_28;
      }
      goto LABEL_25;
    case 4:
      unint64_t v2 = 0xE700000000000000;
      if (v5 != 0x74706965636572) {
        goto LABEL_28;
      }
      goto LABEL_25;
    case 5:
      unint64_t v2 = 0xED00006465766965;
      if (v5 != 0x6365526E656B6F74) {
        goto LABEL_28;
      }
      goto LABEL_25;
    case 6:
      unint64_t v2 = 0xEE00747069656365;
      if (v5 != 0x52646579616C6564) {
        goto LABEL_28;
      }
      goto LABEL_25;
    case 7:
      unint64_t v2 = 0xE700000000000000;
      uint64_t v3 = 0x6572756C696166;
      goto LABEL_24;
    case 8:
      unint64_t v2 = 0xE800000000000000;
      if (v5 != 0x64657463656A6572) {
        goto LABEL_28;
      }
      goto LABEL_25;
    default:
LABEL_24:
      if (v5 != v3) {
        goto LABEL_28;
      }
LABEL_25:
      if (v6 == v2) {
        char v7 = 1;
      }
      else {
LABEL_28:
      }
        char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_1000F17A8(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xEC0000006E6F6973;
  uint64_t v3 = 0x736572706D496461;
  uint64_t v4 = a1;
  uint64_t v5 = 0x736572706D496461;
  unint64_t v6 = 0xEC0000006E6F6973;
  switch(v4)
  {
    case 1:
      uint64_t v5 = 0x7265766E6F436461;
      break;
    case 2:
      unint64_t v6 = 0xE700000000000000;
      uint64_t v5 = 0x74736575716572;
      break;
    case 3:
      uint64_t v5 = 0x6D6F4379726F7473;
      unint64_t v6 = 0xED00006574656C70;
      break;
    default:
      break;
  }
  switch(a2)
  {
    case 1:
      if (v5 == 0x7265766E6F436461) {
        goto LABEL_12;
      }
      goto LABEL_14;
    case 2:
      unint64_t v2 = 0xE700000000000000;
      uint64_t v3 = 0x74736575716572;
      goto LABEL_9;
    case 3:
      unint64_t v2 = 0xED00006574656C70;
      if (v5 == 0x6D6F4379726F7473) {
        goto LABEL_12;
      }
      goto LABEL_14;
    default:
LABEL_9:
      if (v5 != v3) {
        goto LABEL_14;
      }
LABEL_12:
      if (v6 == v2) {
        char v7 = 1;
      }
      else {
LABEL_14:
      }
        char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_1000F1958()
{
  String.hash(into:)();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1000F1AB4()
{
  String.hash(into:)();
  return swift_bridgeObjectRelease();
}

double sub_1000F1C28@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if (*(void *)(v3 + OBJC_IVAR____TtC9appstored12SkannerEvent_buildVersion + 8))
  {
    uint64_t v64 = *(void *)(v3 + OBJC_IVAR____TtC9appstored12SkannerEvent_buildVersion + 8);
    uint64_t v65 = *(void *)(v3 + OBJC_IVAR____TtC9appstored12SkannerEvent_buildVersion);
  }
  else
  {
    id v6 = [self buildVersion];
    uint64_t v7 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v64 = v8;
    uint64_t v65 = v7;
  }
  swift_bridgeObjectRetain();
  v63.super.super.Class isa = Int._bridgeToObjectiveC()().super.super.isa;
  uint64_t v9 = 0x736572706D496461;
  unint64_t v10 = 0xEC0000006E6F6973;
  switch(*(unsigned char *)(v3 + OBJC_IVAR____TtC9appstored12SkannerEvent_eventType))
  {
    case 1:
      uint64_t v9 = 0x7265766E6F436461;
      break;
    case 2:
      unint64_t v10 = 0xE700000000000000;
      uint64_t v9 = 0x74736575716572;
      break;
    case 3:
      unint64_t v10 = 0xED00006574656C70;
      uint64_t v9 = 0x6D6F4379726F7473;
      break;
    default:
      break;
  }
  unint64_t v61 = v10;
  uint64_t v62 = v9;
  unint64_t v11 = 0xE900000000000064;
  uint64_t v12 = 0x657A696C616E6966;
  uint64_t v13 = 0;
  unint64_t v14 = 0;
  switch(*(unsigned char *)(v3 + OBJC_IVAR____TtC9appstored12SkannerEvent_resultType))
  {
    case 1:
      unint64_t v11 = 0xE800000000000000;
      uint64_t v12 = 0x7265747369676572;
      goto LABEL_17;
    case 2:
      unint64_t v11 = 0xE600000000000000;
      uint64_t v12 = 0x657461647075;
      goto LABEL_17;
    case 3:
      uint64_t v12 = 0x73696D736E617274;
      unint64_t v11 = 0xEC0000006E6F6973;
      goto LABEL_17;
    case 4:
      unint64_t v11 = 0xE700000000000000;
      uint64_t v12 = 0x74706965636572;
      goto LABEL_17;
    case 5:
      unint64_t v11 = 0xED00006465766965;
      uint64_t v12 = 0x6365526E656B6F74;
      goto LABEL_17;
    case 6:
      unint64_t v11 = 0xEE00747069656365;
      uint64_t v12 = 0x52646579616C6564;
      goto LABEL_17;
    case 7:
      unint64_t v11 = 0xE700000000000000;
      uint64_t v12 = 0x6572756C696166;
      goto LABEL_17;
    case 8:
      unint64_t v11 = 0xE800000000000000;
      uint64_t v12 = 0x64657463656A6572;
      goto LABEL_17;
    case 9:
      goto LABEL_18;
    default:
LABEL_17:
      uint64_t v13 = v12;
      unint64_t v14 = v11;
LABEL_18:
      uint64_t v60 = v13;
      uint64_t v15 = *(void *)(v3 + OBJC_IVAR____TtC9appstored12SkannerEvent_errorDomain + 8);
      uint64_t v57 = *(void *)(v3 + OBJC_IVAR____TtC9appstored12SkannerEvent_errorCode);
      uint64_t v58 = *(void *)(v3 + OBJC_IVAR____TtC9appstored12SkannerEvent_errorDomain);
      char v52 = *(unsigned char *)(v3 + OBJC_IVAR____TtC9appstored12SkannerEvent_errorCode + 8);
      uint64_t v16 = *(void *)(v3 + OBJC_IVAR____TtC9appstored12SkannerEvent_adNetworkID + 8);
      uint64_t v56 = *(void *)(v3 + OBJC_IVAR____TtC9appstored12SkannerEvent_adNetworkID);
      uint64_t v17 = *(void *)(v3 + OBJC_IVAR____TtC9appstored12SkannerEvent_adNetworkRegistrableDomain + 8);
      uint64_t v18 = *(void *)(v3 + OBJC_IVAR____TtC9appstored12SkannerEvent_skanVersion + 8);
      uint64_t v53 = *(void *)(v3 + OBJC_IVAR____TtC9appstored12SkannerEvent_skanVersion);
      uint64_t v54 = *(void *)(v3 + OBJC_IVAR____TtC9appstored12SkannerEvent_adNetworkRegistrableDomain);
      unint64_t v19 = 0xE300000000000000;
      uint64_t v20 = 7368801;
      uint64_t v21 = 0;
      unint64_t v22 = 0;
      switch(*(unsigned char *)(v3 + OBJC_IVAR____TtC9appstored12SkannerEvent_adType))
      {
        case 1:
          uint64_t v20 = 6448503;
          goto LABEL_22;
        case 2:
          unint64_t v19 = 0xEB00000000686775;
          uint64_t v20 = 0x6F72685477656976;
          goto LABEL_22;
        case 3:
          unint64_t v19 = 0xEC0000006867756FLL;
          uint64_t v20 = 0x7268546B63696C63;
          goto LABEL_22;
        case 4:
          goto LABEL_23;
        default:
LABEL_22:
          uint64_t v21 = v20;
          unint64_t v22 = v19;
LABEL_23:
          unint64_t v23 = 0xE90000000000006BLL;
          uint64_t v24 = 0x726F7774654E6461;
          uint64_t v25 = 0;
          unint64_t v26 = 0;
          switch(*(unsigned char *)(v3 + OBJC_IVAR____TtC9appstored12SkannerEvent_destination))
          {
            case 1:
              unint64_t v23 = 0xE800000000000000;
              uint64_t v24 = 0x656372656D6D6F63;
              goto LABEL_26;
            case 2:
              unint64_t v23 = 0xE900000000000072;
              uint64_t v24 = 0x65706F6C65766564;
              goto LABEL_26;
            case 3:
              goto LABEL_27;
            default:
LABEL_26:
              uint64_t v25 = v24;
              unint64_t v26 = v23;
LABEL_27:
              uint64_t v48 = *(void *)(v3 + OBJC_IVAR____TtC9appstored12SkannerEvent_httpStatusCode);
              unint64_t v49 = v26;
              char v43 = *(unsigned char *)(v3 + OBJC_IVAR____TtC9appstored12SkannerEvent_httpStatusCode + 8);
              uint64_t v27 = 1701736302;
              unint64_t v28 = 0xE400000000000000;
              uint64_t v29 = 0;
              uint64_t v50 = v25;
              unint64_t v51 = v22;
              uint64_t v55 = v21;
              unint64_t v59 = v14;
              unint64_t v30 = 0;
              switch(*(unsigned char *)(v3 + OBJC_IVAR____TtC9appstored12SkannerEvent_conversionValueGranularity))
              {
                case 1:
                  unint64_t v28 = 0xE600000000000000;
                  uint64_t v27 = 0x657372616F63;
                  goto LABEL_30;
                case 2:
                  uint64_t v27 = 1701734758;
                  goto LABEL_30;
                case 3:
                  goto LABEL_31;
                default:
LABEL_30:
                  uint64_t v29 = v27;
                  unint64_t v30 = v28;
LABEL_31:
                  uint64_t v41 = v29;
                  unint64_t v46 = v30;
                  uint64_t v47 = *(void *)(v3 + OBJC_IVAR____TtC9appstored12SkannerEvent_sourceIdentifierGranularity);
                  char v31 = *(unsigned char *)(v3 + OBJC_IVAR____TtC9appstored12SkannerEvent_sourceIdentifierGranularity + 8);
                  int v32 = *(unsigned __int8 *)(v3 + OBJC_IVAR____TtC9appstored12SkannerEvent_postbackType);
                  uint64_t v33 = 0x64657A696C616572;
                  if ((v32 & 1) == 0) {
                    uint64_t v33 = 0x676E69646E6570;
                  }
                  unint64_t v34 = 0xE800000000000000;
                  if ((v32 & 1) == 0) {
                    unint64_t v34 = 0xE700000000000000;
                  }
                  if (v32 == 2) {
                    uint64_t v35 = 0;
                  }
                  else {
                    uint64_t v35 = v33;
                  }
                  if (v32 == 2) {
                    unint64_t v36 = 0;
                  }
                  else {
                    unint64_t v36 = v34;
                  }
                  unint64_t v44 = v36;
                  uint64_t v45 = v35;
                  uint64_t v42 = *(void *)(v3 + OBJC_IVAR____TtC9appstored12SkannerEvent_postbackSequenceIndex);
                  char v37 = *(unsigned char *)(v3 + OBJC_IVAR____TtC9appstored12SkannerEvent_postbackSequenceIndex + 8);
                  id v38 = objc_allocWithZone((Class)type metadata accessor for LogKey());
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  id v39 = [v38 init];
                  *(void *)&double result = 3617586;
                  *(void *)(a3 + 24) = &off_100510160;
                  *(void *)(a3 + 32) = 0xD000000000000010;
                  *(void *)(a3 + 40) = 0x8000000100450260;
                  *(NSNumber *)(a3 + 48) = v63;
                  *(_OWORD *)a3 = xmmword_10048A7B0;
                  *(unsigned char *)(a3 + 16) = 1;
                  *(void *)(a3 + 56) = v39;
                  *(void *)(a3 + 64) = 0;
                  *(unsigned char *)(a3 + 72) = 1;
                  *(void *)(a3 + 80) = _swiftEmptyArrayStorage;
                  *(void *)(a3 + 88) = a1;
                  *(void *)(a3 + 96) = a2;
                  *(void *)(a3 + 104) = 0x7774654E64414B53;
                  *(void *)(a3 + 112) = 0xEB000000006B726FLL;
                  *(void *)(a3 + 120) = v62;
                  *(void *)(a3 + 128) = v61;
                  *(void *)(a3 + 136) = v65;
                  *(void *)(a3 + 144) = v64;
                  *(void *)(a3 + 152) = v60;
                  *(void *)(a3 + 160) = v59;
                  *(void *)(a3 + 168) = v58;
                  *(void *)(a3 + 176) = v15;
                  *(void *)(a3 + 184) = v57;
                  *(unsigned char *)(a3 + 192) = v52;
                  *(void *)(a3 + 200) = v56;
                  *(void *)(a3 + 208) = v16;
                  *(void *)(a3 + 216) = v54;
                  *(void *)(a3 + 224) = v17;
                  *(void *)(a3 + 232) = v53;
                  *(void *)(a3 + 240) = v18;
                  *(void *)(a3 + 248) = v55;
                  *(void *)(a3 + 256) = v51;
                  *(void *)(a3 + 264) = v50;
                  *(void *)(a3 + 272) = v49;
                  *(void *)(a3 + 280) = v48;
                  *(unsigned char *)(a3 + 288) = v43;
                  *(void *)(a3 + 296) = v41;
                  *(void *)(a3 + 304) = v46;
                  *(void *)(a3 + 312) = v47;
                  *(unsigned char *)(a3 + 320) = v31;
                  *(void *)(a3 + 328) = v45;
                  *(void *)(a3 + 336) = v44;
                  *(void *)(a3 + 344) = v42;
                  *(unsigned char *)(a3 + 352) = v37;
                  return result;
              }
          }
      }
  }
}

id sub_1000F2348(char a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned __int8 a9, unsigned __int8 a10, unsigned __int8 a11, uint64_t a12, unsigned __int8 a13, unsigned __int8 a14, uint64_t a15, unsigned __int8 a16, unsigned __int8 a17, uint64_t a18, unsigned __int8 a19, uint64_t a20,uint64_t a21,uint64_t a22,unsigned __int8 a23)
{
  uint64_t v24 = v23;
  uint64_t v65 = a7;
  uint64_t v66 = a8;
  uint64_t v61 = a5;
  uint64_t v62 = a6;
  uint64_t v59 = a4;
  uint64_t v57 = a3;
  int v55 = a2;
  int v77 = a23;
  uint64_t v75 = a21;
  uint64_t v76 = a22;
  uint64_t v74 = a20;
  int v72 = a19;
  uint64_t v71 = a18;
  int v69 = a16;
  int v70 = a17;
  uint64_t v68 = a15;
  int v67 = a14;
  int v64 = a13;
  uint64_t v63 = a12;
  int v60 = a11;
  int v58 = a10;
  int v56 = a9;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v26 = type metadata accessor for Calendar.Component();
  uint64_t v27 = *(void *)(v26 - 8);
  __chkstk_darwin(v26);
  uint64_t v29 = (char *)&v55 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = type metadata accessor for Date();
  uint64_t v31 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v33 = (char *)&v55 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v34 = &v24[OBJC_IVAR____TtC9appstored12SkannerEvent_errorDomain];
  *unint64_t v34 = 0;
  v34[1] = 0;
  uint64_t v35 = &v24[OBJC_IVAR____TtC9appstored12SkannerEvent_errorCode];
  *(void *)uint64_t v35 = 0;
  v35[8] = 1;
  v24[OBJC_IVAR____TtC9appstored12SkannerEvent_eventType] = a1;
  unint64_t v36 = v24;
  Date.init()();
  (*(void (**)(char *, void, uint64_t))(v27 + 104))(v29, enum case for Calendar.Component.hour(_:), v26);
  id v37 = sub_1000BE50C((uint64_t)v33, (uint64_t)v29);
  (*(void (**)(char *, uint64_t))(v27 + 8))(v29, v26);
  (*(void (**)(char *, uint64_t))(v31 + 8))(v33, v30);
  if (v37)
  {
    id v38 = [v37 integerValue];
  }
  else
  {
    id v38 = 0;
  }
  *(void *)&v36[OBJC_IVAR____TtC9appstored12SkannerEvent_eventTime] = v38;
  id v39 = [self buildVersion];
  uint64_t v40 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v42 = v41;

  char v43 = (uint64_t *)&v36[OBJC_IVAR____TtC9appstored12SkannerEvent_buildVersion];
  *char v43 = v40;
  v43[1] = v42;
  v36[OBJC_IVAR____TtC9appstored12SkannerEvent_resultType] = v55;
  unint64_t v44 = &v36[OBJC_IVAR____TtC9appstored12SkannerEvent_adNetworkID];
  uint64_t v45 = v59;
  *unint64_t v44 = v57;
  v44[1] = v45;
  unint64_t v46 = &v36[OBJC_IVAR____TtC9appstored12SkannerEvent_adNetworkRegistrableDomain];
  uint64_t v47 = v62;
  *unint64_t v46 = v61;
  v46[1] = v47;
  uint64_t v48 = &v36[OBJC_IVAR____TtC9appstored12SkannerEvent_skanVersion];
  uint64_t v49 = v66;
  *uint64_t v48 = v65;
  v48[1] = v49;
  v36[OBJC_IVAR____TtC9appstored12SkannerEvent_adType] = v56;
  v36[OBJC_IVAR____TtC9appstored12SkannerEvent_interactionType] = v58;
  v36[OBJC_IVAR____TtC9appstored12SkannerEvent_destination] = v60;
  uint64_t v50 = &v36[OBJC_IVAR____TtC9appstored12SkannerEvent_httpStatusCode];
  *(void *)uint64_t v50 = v63;
  v50[8] = v64 & 1;
  v36[OBJC_IVAR____TtC9appstored12SkannerEvent_conversionValueGranularity] = v67;
  unint64_t v51 = &v36[OBJC_IVAR____TtC9appstored12SkannerEvent_sourceIdentifierGranularity];
  *(void *)unint64_t v51 = v68;
  v51[8] = v69 & 1;
  v36[OBJC_IVAR____TtC9appstored12SkannerEvent_postbackType] = v70;
  char v52 = &v36[OBJC_IVAR____TtC9appstored12SkannerEvent_postbackSequenceIndex];
  *(void *)char v52 = v71;
  v52[8] = v72 & 1;
  uint64_t v53 = v75;
  *unint64_t v34 = v74;
  v34[1] = v53;
  swift_bridgeObjectRelease();
  *(void *)uint64_t v35 = v76;
  v35[8] = v77 & 1;

  v78.receiver = v36;
  v78.super_class = ObjectType;
  return objc_msgSendSuper2(&v78, "init");
}

id sub_1000F2798(unsigned char *a1)
{
  unint64_t v2 = v1;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v4 = type metadata accessor for Calendar.Component();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for Date();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  unint64_t v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = &v2[OBJC_IVAR____TtC9appstored12SkannerEvent_errorDomain];
  *uint64_t v12 = 0;
  v12[1] = 0;
  uint64_t v13 = (uint64_t)&v2[OBJC_IVAR____TtC9appstored12SkannerEvent_errorCode];
  *(void *)uint64_t v13 = 0;
  uint64_t v27 = v13;
  *(unsigned char *)(v13 + 8) = 1;
  v2[OBJC_IVAR____TtC9appstored12SkannerEvent_eventType] = *a1;
  unint64_t v14 = v2;
  Date.init()();
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, enum case for Calendar.Component.hour(_:), v4);
  id v15 = sub_1000BE50C((uint64_t)v11, (uint64_t)v7);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  if (v15)
  {
    id v16 = [v15 integerValue];
  }
  else
  {
    id v16 = 0;
  }
  *(void *)&v14[OBJC_IVAR____TtC9appstored12SkannerEvent_eventTime] = v16;
  id v17 = [self buildVersion];
  uint64_t v18 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v20 = v19;

  uint64_t v21 = (uint64_t *)&v14[OBJC_IVAR____TtC9appstored12SkannerEvent_buildVersion];
  uint64_t *v21 = v18;
  v21[1] = v20;
  sub_100030134((uint64_t)(a1 + 1), (uint64_t)&v38, &qword_1005A3898);
  sub_100030134((uint64_t)&v38, (uint64_t)&v14[OBJC_IVAR____TtC9appstored12SkannerEvent_resultType], &qword_1005A3898);
  sub_100030134((uint64_t)(a1 + 8), (uint64_t)v37, &qword_1005A4278);
  sub_100030134((uint64_t)v37, (uint64_t)&v14[OBJC_IVAR____TtC9appstored12SkannerEvent_adNetworkID], &qword_1005A4278);
  unint64_t v22 = &v14[OBJC_IVAR____TtC9appstored12SkannerEvent_adNetworkRegistrableDomain];
  *unint64_t v22 = 0;
  v22[1] = 0;
  unint64_t v23 = &v14[OBJC_IVAR____TtC9appstored12SkannerEvent_skanVersion];
  *unint64_t v23 = 0;
  v23[1] = 0;
  sub_100030134((uint64_t)(a1 + 24), (uint64_t)&v36, &qword_1005A38A8);
  sub_100030134((uint64_t)&v36, (uint64_t)&v14[OBJC_IVAR____TtC9appstored12SkannerEvent_adType], &qword_1005A38A8);
  sub_100030134((uint64_t)(a1 + 25), (uint64_t)&v35, &qword_1005A38B8);
  sub_100030134((uint64_t)&v35, (uint64_t)&v14[OBJC_IVAR____TtC9appstored12SkannerEvent_interactionType], &qword_1005A38B8);
  sub_100030134((uint64_t)(a1 + 26), (uint64_t)&v34, &qword_1005A38C8);
  sub_100030134((uint64_t)&v34, (uint64_t)&v14[OBJC_IVAR____TtC9appstored12SkannerEvent_destination], &qword_1005A38C8);
  sub_100030134((uint64_t)(a1 + 32), (uint64_t)v33, &qword_1005A6AF8);
  sub_100030134((uint64_t)v33, (uint64_t)&v14[OBJC_IVAR____TtC9appstored12SkannerEvent_httpStatusCode], &qword_1005A6AF8);
  v14[OBJC_IVAR____TtC9appstored12SkannerEvent_conversionValueGranularity] = 3;
  uint64_t v24 = &v14[OBJC_IVAR____TtC9appstored12SkannerEvent_sourceIdentifierGranularity];
  *(void *)uint64_t v24 = 0;
  v24[8] = 1;
  sub_100030134((uint64_t)(a1 + 41), (uint64_t)&v32, &qword_1005A38D8);
  sub_100030134((uint64_t)&v32, (uint64_t)&v14[OBJC_IVAR____TtC9appstored12SkannerEvent_postbackType], &qword_1005A38D8);
  uint64_t v25 = &v14[OBJC_IVAR____TtC9appstored12SkannerEvent_postbackSequenceIndex];
  *(void *)uint64_t v25 = 0;
  v25[8] = 1;
  sub_100030134((uint64_t)(a1 + 48), (uint64_t)v31, &qword_1005A4278);
  sub_100030134((uint64_t)v31, (uint64_t)v12, &qword_1005A4278);
  sub_1000F8EE4((uint64_t)v37);
  sub_1000F8EE4((uint64_t)v31);
  swift_bridgeObjectRelease();
  sub_1000F8F10((uint64_t)a1);
  sub_100030134((uint64_t)(a1 + 64), (uint64_t)v30, &qword_1005A6AF8);
  sub_100030134((uint64_t)v30, v27, &qword_1005A6AF8);

  v29.receiver = v14;
  v29.super_class = ObjectType;
  return objc_msgSendSuper2(&v29, "init");
}

void sub_1000F2C34(uint64_t a1)
{
  if (a1 && (swift_errorRetain(), sub_10001644C(&qword_1005A4E40), sub_1000F8EA4(), (swift_dynamicCast() & 1) != 0))
  {
    unint64_t v2 = v10;
    id v3 = [v10 domain];
    uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v6 = v5;
  }
  else
  {
    uint64_t v4 = 0;
    uint64_t v6 = 0;
    unint64_t v2 = 0;
  }
  uint64_t v7 = (uint64_t *)(v1 + OBJC_IVAR____TtC9appstored12SkannerEvent_errorDomain);
  *uint64_t v7 = v4;
  v7[1] = v6;
  swift_bridgeObjectRelease();
  if (v2)
  {
    id v8 = [v2 code];
  }
  else
  {
    id v8 = 0;
  }
  uint64_t v9 = v1 + OBJC_IVAR____TtC9appstored12SkannerEvent_errorCode;
  *(void *)uint64_t v9 = v8;
  *(unsigned char *)(v9 + 8) = v2 == 0;
}

uint64_t sub_1000F2D98(char a1)
{
  uint64_t result = 0x657A696C616E6966;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x7265747369676572;
      break;
    case 2:
      uint64_t result = 0x657461647075;
      break;
    case 3:
      uint64_t result = 0x73696D736E617274;
      break;
    case 4:
      uint64_t result = 0x74706965636572;
      break;
    case 5:
      uint64_t result = 0x6365526E656B6F74;
      break;
    case 6:
      uint64_t result = 0x52646579616C6564;
      break;
    case 7:
      uint64_t result = 0x6572756C696166;
      break;
    case 8:
      uint64_t result = 0x64657463656A6572;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1000F2ED8(unsigned __int8 *a1, char *a2)
{
  return sub_1000F17A8(*a1, *a2);
}

Swift::Int sub_1000F2EE4()
{
  return Hasher._finalize()();
}

uint64_t sub_1000F2FD0()
{
  String.hash(into:)();
  return swift_bridgeObjectRelease();
}

Swift::Int sub_1000F30A4()
{
  return Hasher._finalize()();
}

unint64_t sub_1000F318C@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  v3._rawValue = &off_100510CC0;
  unint64_t result = sub_1000F7B08(*a1, v3);
  *a2 = result;
  return result;
}

void sub_1000F31C4(uint64_t a1@<X8>)
{
  uint64_t v2 = 0x736572706D496461;
  switch(*v1)
  {
    case 1:
      uint64_t v2 = 0x7265766E6F436461;
      goto LABEL_3;
    case 2:
      *(void *)a1 = 0x74736575716572;
      *(void *)(a1 + 8) = 0xE700000000000000;
      break;
    case 3:
      strcpy((char *)a1, "storyComplete");
      *(_WORD *)(a1 + 14) = -4864;
      break;
    default:
LABEL_3:
      *(void *)a1 = v2;
      *(void *)(a1 + 8) = 0xEC0000006E6F6973;
      break;
  }
}

uint64_t sub_1000F3270()
{
  return RawRepresentable<>.init(from:)();
}

uint64_t sub_1000F32D0()
{
  return RawRepresentable<>.encode(to:)();
}

uint64_t sub_1000F3320(unsigned __int8 *a1, char *a2)
{
  return sub_1000F149C(*a1, *a2);
}

Swift::Int sub_1000F332C()
{
  return Hasher._finalize()();
}

uint64_t sub_1000F3374()
{
  return sub_1000F1AB4();
}

Swift::Int sub_1000F337C()
{
  return Hasher._finalize()();
}

unint64_t sub_1000F33C0@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_1000F7964(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_1000F33F0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1000F2D98(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1000F341C()
{
  return RawRepresentable<>.init(from:)();
}

uint64_t sub_1000F347C()
{
  return RawRepresentable<>.encode(to:)();
}

uint64_t sub_1000F34CC(unsigned __int8 *a1, char *a2)
{
  return sub_1000F0FCC(*a1, *a2);
}

Swift::Int sub_1000F34D8()
{
  return Hasher._finalize()();
}

uint64_t sub_1000F35B0()
{
  String.hash(into:)();
  return swift_bridgeObjectRelease();
}

Swift::Int sub_1000F3670()
{
  return Hasher._finalize()();
}

unint64_t sub_1000F3744@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  v3._rawValue = &off_100510D40;
  unint64_t result = sub_1000F7B08(*a1, v3);
  *a2 = result;
  return result;
}

void sub_1000F377C(uint64_t a1@<X8>)
{
  uint64_t v2 = 7368801;
  switch(*v1)
  {
    case 1:
      uint64_t v2 = 6448503;
      goto LABEL_3;
    case 2:
      *(void *)a1 = 0x6F72685477656976;
      *(void *)(a1 + 8) = 0xEB00000000686775;
      break;
    case 3:
      strcpy((char *)a1, "clickThrough");
      *(unsigned char *)(a1 + 13) = 0;
      *(_WORD *)(a1 + 14) = -5120;
      break;
    default:
LABEL_3:
      *(void *)a1 = v2;
      *(void *)(a1 + 8) = 0xE300000000000000;
      break;
  }
}

uint64_t sub_1000F3814()
{
  return RawRepresentable<>.init(from:)();
}

uint64_t sub_1000F3874()
{
  return RawRepresentable<>.encode(to:)();
}

uint64_t sub_1000F38C4(char *a1, char *a2)
{
  return sub_1000F123C(*a1, *a2);
}

Swift::Int sub_1000F38D0()
{
  return Hasher._finalize()();
}

uint64_t sub_1000F3948()
{
  String.hash(into:)();
  return swift_bridgeObjectRelease();
}

Swift::Int sub_1000F39AC()
{
  return Hasher._finalize()();
}

uint64_t sub_1000F3A20@<X0>(Swift::String *a1@<X0>, char *a2@<X8>)
{
  v2._rawValue = &off_100510DC0;
  return sub_1000F42AC(v2, a1, a2);
}

void sub_1000F3A2C(uint64_t *a1@<X8>)
{
  uint64_t v2 = 2003134838;
  if (*v1) {
    uint64_t v2 = 0x6B63696C63;
  }
  unint64_t v3 = 0xE400000000000000;
  if (*v1) {
    unint64_t v3 = 0xE500000000000000;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1000F3A60()
{
  return RawRepresentable<>.init(from:)();
}

uint64_t sub_1000F3AC0()
{
  return RawRepresentable<>.encode(to:)();
}

uint64_t sub_1000F3B10(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1000F1380(*a1, *a2);
}

Swift::Int sub_1000F3B1C()
{
  return Hasher._finalize()();
}

uint64_t sub_1000F3BC4()
{
  String.hash(into:)();
  return swift_bridgeObjectRelease();
}

Swift::Int sub_1000F3C58()
{
  return Hasher._finalize()();
}

unint64_t sub_1000F3CFC@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  v3._rawValue = &off_100510E10;
  unint64_t result = sub_1000F7B50(*a1, v3);
  *a2 = result;
  return result;
}

void sub_1000F3D34(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE90000000000006BLL;
  int v3 = *v1;
  unint64_t v4 = 0xE800000000000000;
  uint64_t v5 = 0x656372656D6D6F63;
  if (v3 != 1)
  {
    uint64_t v5 = 0x65706F6C65766564;
    unint64_t v4 = 0xE900000000000072;
  }
  BOOL v6 = v3 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x726F7774654E6461;
  }
  if (!v6) {
    unint64_t v2 = v4;
  }
  *a1 = v7;
  a1[1] = v2;
}

uint64_t sub_1000F3D98()
{
  return RawRepresentable<>.init(from:)();
}

uint64_t sub_1000F3DF8()
{
  return RawRepresentable<>.encode(to:)();
}

uint64_t sub_1000F3E48(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1000F1154(*a1, *a2);
}

Swift::Int sub_1000F3E54()
{
  return Hasher._finalize()();
}

uint64_t sub_1000F3EE4()
{
  String.hash(into:)();
  return swift_bridgeObjectRelease();
}

Swift::Int sub_1000F3F60()
{
  return Hasher._finalize()();
}

unint64_t sub_1000F3FEC@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  v3._rawValue = &off_100510E78;
  unint64_t result = sub_1000F7B50(*a1, v3);
  *a2 = result;
  return result;
}

void sub_1000F4024(uint64_t *a1@<X8>)
{
  uint64_t v2 = 1701734758;
  unint64_t v3 = 0xE600000000000000;
  if (*v1 == 1) {
    uint64_t v2 = 0x657372616F63;
  }
  else {
    unint64_t v3 = 0xE400000000000000;
  }
  if (*v1)
  {
    unint64_t v4 = v3;
  }
  else
  {
    uint64_t v2 = 1701736302;
    unint64_t v4 = 0xE400000000000000;
  }
  *a1 = v2;
  a1[1] = v4;
}

uint64_t sub_1000F4070()
{
  return RawRepresentable<>.init(from:)();
}

uint64_t sub_1000F40D0()
{
  return RawRepresentable<>.encode(to:)();
}

uint64_t sub_1000F4120(char *a1, char *a2)
{
  return sub_1000F12D8(*a1, *a2);
}

Swift::Int sub_1000F412C()
{
  return Hasher._finalize()();
}

uint64_t sub_1000F41B0()
{
  String.hash(into:)();
  return swift_bridgeObjectRelease();
}

Swift::Int sub_1000F4220()
{
  return Hasher._finalize()();
}

uint64_t sub_1000F42A0@<X0>(Swift::String *a1@<X0>, char *a2@<X8>)
{
  v2._rawValue = &off_100510EE0;
  return sub_1000F42AC(v2, a1, a2);
}

uint64_t sub_1000F42AC@<X0>(Swift::OpaquePointer cases@<0:X3>, Swift::String *a2@<X0>, char *a3@<X8>)
{
  Swift::Int v4 = _findStringSwitchCase(cases:string:)(cases, *a2);
  uint64_t result = swift_bridgeObjectRelease();
  if (v4 == 1) {
    char v6 = 1;
  }
  else {
    char v6 = 2;
  }
  if (!v4) {
    char v6 = 0;
  }
  *a3 = v6;
  return result;
}

void sub_1000F4308(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x676E69646E6570;
  if (*v1) {
    uint64_t v2 = 0x64657A696C616572;
  }
  unint64_t v3 = 0xE700000000000000;
  if (*v1) {
    unint64_t v3 = 0xE800000000000000;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1000F4348()
{
  return RawRepresentable<>.init(from:)();
}

uint64_t sub_1000F43A8()
{
  return RawRepresentable<>.encode(to:)();
}

unint64_t sub_1000F4428(char a1)
{
  unint64_t result = 0x707954746E657665;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6D6954746E657665;
      break;
    case 2:
      unint64_t result = 0x726556646C697562;
      break;
    case 3:
      unint64_t result = 0x7954746C75736572;
      break;
    case 4:
      unint64_t result = 0x726F7774654E6461;
      break;
    case 5:
    case 11:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 6:
      unint64_t result = 0x737265566E616B73;
      break;
    case 7:
      unint64_t result = 0x657079546461;
      break;
    case 8:
      unint64_t result = 0x7463617265746E69;
      break;
    case 9:
      unint64_t result = 0x74616E6974736564;
      break;
    case 10:
      unint64_t result = 0x7461745370747468;
      break;
    case 12:
      unint64_t result = 0xD00000000000001BLL;
      break;
    case 13:
      unint64_t result = 0x6B63616274736F70;
      break;
    case 14:
      unint64_t result = 0xD000000000000015;
      break;
    case 15:
      unint64_t result = 0x6D6F44726F727265;
      break;
    case 16:
      unint64_t result = 0x646F43726F727265;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1000F4664()
{
  return sub_1000F4428(*v0);
}

uint64_t sub_1000F466C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1000F7D90(a1, a2);
  *a3 = result;
  return result;
}

void sub_1000F4694(unsigned char *a1@<X8>)
{
  *a1 = 17;
}

uint64_t sub_1000F46A0(uint64_t a1)
{
  unint64_t v2 = sub_1000F64F8();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1000F46DC(uint64_t a1)
{
  unint64_t v2 = sub_1000F64F8();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t type metadata accessor for SkannerEvent()
{
  return self;
}

uint64_t sub_1000F47CC(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_10001644C(&qword_1005A6AA8);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  id v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10002FD00(a1, a1[3]);
  sub_1000F64F8();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  char v12 = *(unsigned char *)(v3 + OBJC_IVAR____TtC9appstored12SkannerEvent_eventType);
  char v11 = 0;
  sub_10002FF90();
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  if (!v2)
  {
    char v12 = 1;
    KeyedEncodingContainer.encode(_:forKey:)();
    char v12 = 2;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    char v12 = *(unsigned char *)(v3 + OBJC_IVAR____TtC9appstored12SkannerEvent_resultType);
    char v11 = 3;
    sub_10002FFE4();
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
    char v12 = 4;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    char v12 = 5;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    char v12 = 6;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    char v12 = *(unsigned char *)(v3 + OBJC_IVAR____TtC9appstored12SkannerEvent_adType);
    char v11 = 7;
    sub_100030038();
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
    char v12 = *(unsigned char *)(v3 + OBJC_IVAR____TtC9appstored12SkannerEvent_interactionType);
    char v11 = 8;
    sub_10003008C();
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
    char v12 = *(unsigned char *)(v3 + OBJC_IVAR____TtC9appstored12SkannerEvent_destination);
    char v11 = 9;
    sub_1000300E0();
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
    char v12 = 10;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    char v12 = *(unsigned char *)(v3 + OBJC_IVAR____TtC9appstored12SkannerEvent_conversionValueGranularity);
    char v11 = 11;
    sub_1000F65A0();
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
    char v12 = 12;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    char v12 = *(unsigned char *)(v3 + OBJC_IVAR____TtC9appstored12SkannerEvent_postbackType);
    char v11 = 13;
    sub_100030198();
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
    char v12 = 14;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    char v12 = 15;
    swift_bridgeObjectRetain();
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    swift_bridgeObjectRelease();
    char v12 = 16;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

id sub_1000F4D28(void *a1)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v42 = sub_10001644C(&qword_1005A6A90);
  uint64_t v4 = *(void *)(v42 - 8);
  __chkstk_darwin(v42);
  uint64_t v6 = (char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = (uint64_t *)&v1[OBJC_IVAR____TtC9appstored12SkannerEvent_errorDomain];
  *uint64_t v7 = 0;
  v7[1] = 0;
  uint64_t v45 = v7;
  id v8 = &v1[OBJC_IVAR____TtC9appstored12SkannerEvent_errorCode];
  *(void *)id v8 = 0;
  v8[8] = 1;
  uint64_t v9 = a1[3];
  char v43 = a1;
  sub_10002FD00(a1, v9);
  sub_1000F64F8();
  unint64_t v46 = v1;
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2)
  {
    char v11 = v46;
    sub_10002E618((uint64_t)v43);
    id v40 = (id)v45[1];

    swift_bridgeObjectRelease();
    swift_deallocPartialClassInstance();
  }
  else
  {
    uint64_t v10 = v8;
    char v48 = 0;
    sub_10002FD98();
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    uint64_t v13 = v46;
    v46[OBJC_IVAR____TtC9appstored12SkannerEvent_eventType] = v49;
    char v49 = 1;
    *(void *)&v13[OBJC_IVAR____TtC9appstored12SkannerEvent_eventTime] = KeyedDecodingContainer.decode(_:forKey:)();
    char v49 = 2;
    uint64_t v14 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
    id v15 = (uint64_t *)&v13[OBJC_IVAR____TtC9appstored12SkannerEvent_buildVersion];
    *id v15 = v14;
    v15[1] = v16;
    char v48 = 3;
    sub_10002FDEC();
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    v13[OBJC_IVAR____TtC9appstored12SkannerEvent_resultType] = v49;
    char v49 = 4;
    uint64_t v17 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
    uint64_t v18 = (uint64_t *)&v13[OBJC_IVAR____TtC9appstored12SkannerEvent_adNetworkID];
    *uint64_t v18 = v17;
    v18[1] = v19;
    char v49 = 5;
    uint64_t v20 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
    uint64_t v21 = (uint64_t *)&v13[OBJC_IVAR____TtC9appstored12SkannerEvent_adNetworkRegistrableDomain];
    uint64_t *v21 = v20;
    v21[1] = v22;
    char v49 = 6;
    uint64_t v23 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
    uint64_t v24 = (uint64_t *)&v13[OBJC_IVAR____TtC9appstored12SkannerEvent_skanVersion];
    uint64_t *v24 = v23;
    v24[1] = v25;
    char v48 = 7;
    sub_10002FE40();
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    v13[OBJC_IVAR____TtC9appstored12SkannerEvent_adType] = v49;
    char v48 = 8;
    sub_10002FE94();
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    v13[OBJC_IVAR____TtC9appstored12SkannerEvent_interactionType] = v49;
    char v48 = 9;
    sub_10002FEE8();
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    v46[OBJC_IVAR____TtC9appstored12SkannerEvent_destination] = v49;
    char v49 = 10;
    uint64_t v26 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
    uint64_t v27 = &v46[OBJC_IVAR____TtC9appstored12SkannerEvent_httpStatusCode];
    *(void *)uint64_t v27 = v26;
    v27[8] = v28 & 1;
    char v48 = 11;
    sub_1000F654C();
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    v46[OBJC_IVAR____TtC9appstored12SkannerEvent_conversionValueGranularity] = v49;
    char v49 = 12;
    uint64_t v29 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
    uint64_t v30 = &v46[OBJC_IVAR____TtC9appstored12SkannerEvent_sourceIdentifierGranularity];
    *(void *)uint64_t v30 = v29;
    v30[8] = v31 & 1;
    char v48 = 13;
    sub_10002FF3C();
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    v46[OBJC_IVAR____TtC9appstored12SkannerEvent_postbackType] = v49;
    char v49 = 14;
    uint64_t v32 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
    uint64_t v33 = &v46[OBJC_IVAR____TtC9appstored12SkannerEvent_postbackSequenceIndex];
    *(void *)uint64_t v33 = v32;
    v33[8] = v34 & 1;
    char v49 = 15;
    uint64_t v35 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
    char v36 = v45;
    *uint64_t v45 = v35;
    v36[1] = v37;
    swift_bridgeObjectRelease();
    char v49 = 16;
    *(void *)uint64_t v10 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
    v10[8] = v38 & 1;
    id v39 = v46;

    v47.receiver = v39;
    v47.super_class = ObjectType;
    id v40 = objc_msgSendSuper2(&v47, "init");
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v42);
    sub_10002E618((uint64_t)v43);
  }
  return v40;
}

id sub_1000F5514@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  id v6 = objc_allocWithZone(v2);
  id result = sub_1000F4D28(a1);
  if (!v3) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1000F5564(void *a1)
{
  return sub_1000F47CC(a1);
}

ValueMetadata *type metadata accessor for SkannerEvent.PostbackType()
{
  return &type metadata for SkannerEvent.PostbackType;
}

ValueMetadata *type metadata accessor for SkannerEvent.ConversionValueGranularity()
{
  return &type metadata for SkannerEvent.ConversionValueGranularity;
}

unsigned char *_s9appstored12SkannerEventC11DestinationOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *id result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000F5EA4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *id result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SkannerEvent.Destination()
{
  return &type metadata for SkannerEvent.Destination;
}

unsigned char *_s9appstored12SkannerEventC15InteractionTypeOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *id result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000F5FA8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *id result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SkannerEvent.InteractionType()
{
  return &type metadata for SkannerEvent.InteractionType;
}

ValueMetadata *type metadata accessor for SkannerEvent.AdType()
{
  return &type metadata for SkannerEvent.AdType;
}

uint64_t getEnumTagSinglePayload for SkannerEvent.ResultType(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF8) {
    goto LABEL_17;
  }
  if (a2 + 8 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 8) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 8;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 8;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 8;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 9;
  int v8 = v6 - 9;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for SkannerEvent.ResultType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    *id result = a2 + 8;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000F6154);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *id result = a2 + 8;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SkannerEvent.ResultType()
{
  return &type metadata for SkannerEvent.ResultType;
}

unsigned char *_s9appstored12SkannerEventC6AdTypeOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *id result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000F6258);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *id result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SkannerEvent.EventType()
{
  return &type metadata for SkannerEvent.EventType;
}

unint64_t sub_1000F6294()
{
  unint64_t result = qword_1005A6A58;
  if (!qword_1005A6A58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1005A6A58);
  }
  return result;
}

unint64_t sub_1000F62EC()
{
  unint64_t result = qword_1005A6A60;
  if (!qword_1005A6A60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1005A6A60);
  }
  return result;
}

unint64_t sub_1000F6344()
{
  unint64_t result = qword_1005A6A68;
  if (!qword_1005A6A68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1005A6A68);
  }
  return result;
}

unint64_t sub_1000F639C()
{
  unint64_t result = qword_1005A6A70;
  if (!qword_1005A6A70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1005A6A70);
  }
  return result;
}

unint64_t sub_1000F63F4()
{
  unint64_t result = qword_1005A6A78;
  if (!qword_1005A6A78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1005A6A78);
  }
  return result;
}

unint64_t sub_1000F644C()
{
  unint64_t result = qword_1005A6A80;
  if (!qword_1005A6A80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1005A6A80);
  }
  return result;
}

unint64_t sub_1000F64A4()
{
  unint64_t result = qword_1005A6A88;
  if (!qword_1005A6A88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1005A6A88);
  }
  return result;
}

unint64_t sub_1000F64F8()
{
  unint64_t result = qword_1005A6A98;
  if (!qword_1005A6A98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1005A6A98);
  }
  return result;
}

unint64_t sub_1000F654C()
{
  unint64_t result = qword_1005A6AA0;
  if (!qword_1005A6AA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1005A6AA0);
  }
  return result;
}

unint64_t sub_1000F65A0()
{
  unint64_t result = qword_1005A6AB0;
  if (!qword_1005A6AB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1005A6AB0);
  }
  return result;
}

unint64_t sub_1000F65F4()
{
  unint64_t result = qword_1005A6AB8;
  if (!qword_1005A6AB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1005A6AB8);
  }
  return result;
}

unint64_t sub_1000F6648(char a1)
{
  unint64_t result = 0x6369706F74;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000014;
      break;
    case 2:
      unint64_t result = 6910049;
      break;
    case 3:
      unint64_t result = 0x707954746E657665;
      break;
    case 4:
      unint64_t result = 0x4E646C697542736FLL;
      break;
    case 5:
      unint64_t result = 0x7954746C75736572;
      break;
    case 6:
      unint64_t result = 0x446572756C696166;
      break;
    case 7:
      unint64_t result = 0x546572756C696166;
      break;
    case 8:
      unint64_t result = 0x726F7774654E6461;
      break;
    case 9:
    case 14:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 10:
      unint64_t result = 0x6973726556697061;
      break;
    case 11:
      unint64_t result = 0x657079546461;
      break;
    case 12:
      unint64_t result = 0x74616E6974736564;
      break;
    case 13:
      unint64_t result = 0x65736E6F70736572;
      break;
    case 15:
      unint64_t result = 0xD00000000000001BLL;
      break;
    case 16:
      unint64_t result = 0x6B63616274736F70;
      break;
    case 17:
      unint64_t result = 0x65636E6575716573;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1000F68B0(char a1)
{
  unint64_t result = 0x6369706F74;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000014;
      break;
    case 2:
      unint64_t result = 6910049;
      break;
    case 3:
      unint64_t result = 0x707954746E657665;
      break;
    case 4:
      unint64_t result = 0x4E646C697542736FLL;
      break;
    case 5:
      unint64_t result = 0x7954746C75736572;
      break;
    case 6:
      unint64_t result = 0x446572756C696166;
      break;
    case 7:
      unint64_t result = 0x546572756C696166;
      break;
    case 8:
      unint64_t result = 0x726F7774654E6461;
      break;
    case 9:
    case 14:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 10:
      unint64_t result = 0x6973726556697061;
      break;
    case 11:
      unint64_t result = 0x657079546461;
      break;
    case 12:
      unint64_t result = 0x74616E6974736564;
      break;
    case 13:
      unint64_t result = 0x65736E6F70736572;
      break;
    case 15:
      unint64_t result = 0xD00000000000001BLL;
      break;
    case 16:
      unint64_t result = 0x6B63616274736F70;
      break;
    case 17:
      unint64_t result = 0x65636E6575716573;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1000F6B18(void *a1)
{
  uint64_t v3 = sub_10001644C(&qword_1005A6B20);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  unsigned int v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10002FD00(a1, a1[3]);
  sub_1000F9A9C();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  char v9 = 0;
  KeyedEncodingContainer.encode(_:forKey:)();
  if (!v1)
  {
    char v9 = 1;
    KeyedEncodingContainer.encode(_:forKey:)();
    char v9 = 2;
    KeyedEncodingContainer.encode(_:forKey:)();
    char v9 = 3;
    KeyedEncodingContainer.encode(_:forKey:)();
    char v9 = 4;
    KeyedEncodingContainer.encode(_:forKey:)();
    char v9 = 5;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    char v9 = 6;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    char v9 = 7;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    char v9 = 8;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    char v9 = 9;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    char v9 = 10;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    char v9 = 11;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    char v9 = 12;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    char v9 = 13;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    char v9 = 14;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    char v9 = 15;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    char v9 = 16;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    char v9 = 17;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1000F6F0C(char *a1, char *a2)
{
  char v2 = *a2;
  unint64_t v3 = sub_1000F6648(*a1);
  uint64_t v5 = v4;
  if (v3 == sub_1000F6648(v2) && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

Swift::Int sub_1000F6F98()
{
  char v1 = *v0;
  Hasher.init(_seed:)();
  sub_1000F6648(v1);
  String.hash(into:)();
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

uint64_t sub_1000F6FFC()
{
  sub_1000F6648(*v0);
  String.hash(into:)();
  return swift_bridgeObjectRelease();
}

Swift::Int sub_1000F7050()
{
  char v1 = *v0;
  Hasher.init(_seed:)();
  sub_1000F6648(v1);
  String.hash(into:)();
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

uint64_t sub_1000F70B0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1000F9D8C();
  *a1 = result;
  return result;
}

unint64_t sub_1000F70E0@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_1000F6648(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_1000F710C()
{
  return sub_1000F68B0(*v0);
}

uint64_t sub_1000F7114@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1000F9D8C();
  *a1 = result;
  return result;
}

void sub_1000F713C(unsigned char *a1@<X8>)
{
  *a1 = 18;
}

uint64_t sub_1000F7148(uint64_t a1)
{
  unint64_t v2 = sub_1000F9A9C();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1000F7184(uint64_t a1)
{
  unint64_t v2 = sub_1000F9A9C();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1000F71C0()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

void *sub_1000F71F0()
{
  uint64_t v1 = *(void **)(v0 + 48);
  id v2 = v1;
  return v1;
}

id sub_1000F7218()
{
  return *(id *)(v0 + 56);
}

uint64_t sub_1000F7220()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1000F7228()
{
  return *(unsigned __int8 *)(v0 + 72);
}

uint64_t sub_1000F7230()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1000F7238()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1000F7268()
{
  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t sub_1000F7270()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1000F7278(void *a1)
{
  return sub_1000F6B18(a1);
}

uint64_t sub_1000F7290(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6 = sub_1000F7364(v12, 0, 0, 1, a1, a2);
  uint64_t v7 = v12[0];
  if (v6)
  {
    uint64_t v8 = v6;
    uint64_t ObjectType = (void *)swift_getObjectType();
    v12[0] = v8;
    uint64_t v9 = *a3;
    if (*a3)
    {
      sub_100031C38((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    uint64_t ObjectType = &type metadata for _StringGuts;
    v12[0] = a1;
    v12[1] = a2;
    uint64_t v10 = *a3;
    if (*a3)
    {
      sub_100031C38((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  sub_10002E618((uint64_t)v12);
  return v7;
}

uint64_t sub_1000F7364(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        uint64_t v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (void *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            UnsafeMutableRawBufferPointer.subscript.setter();
            uint64_t result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    uint64_t result = sub_1000F7520(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0) {
    goto LABEL_13;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    uint64_t v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  uint64_t v8 = _StringObject.sharedUTF8.getter();
  if (!v8)
  {
    _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
LABEL_17:
    uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0) {
    return 0;
  }
  else {
    return swift_unknownObjectRetain();
  }
}

uint64_t sub_1000F7520(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = (uint64_t)sub_1000F75B8(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_1000F7814(0, *(void *)(v2 + 16) + 1, 1, (char *)v2);
  }
  unint64_t v4 = *(void *)(v2 + 16);
  unint64_t v3 = *(void *)(v2 + 24);
  if (v4 >= v3 >> 1) {
    uint64_t v2 = sub_1000F7814(v3 > 1, v4 + 1, 1, (char *)v2);
  }
  *(void *)(v2 + 16) = v4 + 1;
  *(unsigned char *)(v2 + 32 + v4) = 0;
  return v2;
}

void *sub_1000F75B8(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0) {
    goto LABEL_10;
  }
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2)
  {
    while (1)
    {
      unint64_t v3 = sub_1000F7730(v2, 0);
      if (v2 < 0) {
        break;
      }
      unint64_t v4 = v3;
      uint64_t v5 = _StringGuts.copyUTF8(into:)();
      if (v6) {
        goto LABEL_14;
      }
      if (v5 == v2) {
        return v4;
      }
      _assertionFailure(_:_:file:line:flags:)();
      __break(1u);
LABEL_10:
      uint64_t v2 = String.UTF8View._foreignCount()();
      if (!v2) {
        return _swiftEmptyArrayStorage;
      }
    }
    _fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
LABEL_14:
    uint64_t result = (void *)_assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    return _swiftEmptyArrayStorage;
  }
  return result;
}

void *sub_1000F7730(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return _swiftEmptyArrayStorage;
  }
  sub_10001644C(&qword_1005A6AF0);
  unint64_t v4 = (void *)swift_allocObject();
  size_t v5 = j__malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_1000F7798(unsigned __int16 a1, uint64_t a2, uint64_t a3)
{
  char v3 = a1;
  uint64_t v4 = a1 >> 14;
  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    uint64_t v10 = String.UTF16View.index(_:offsetBy:)();
    uint64_t v11 = v10 + (v4 << 16);
    unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    unint64_t v13 = v11 & 0xFFFFFFFFFFFF0000;
    if (!v4) {
      unint64_t v13 = v12;
    }
    return v13 | 4;
  }
  else
  {
    uint64_t v5 = String.UTF8View._foreignIndex(_:offsetBy:)();
    uint64_t v6 = v5 + (v4 << 16);
    unint64_t v7 = v5 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    unint64_t v8 = v6 & 0xFFFFFFFFFFFF0000;
    if (!v4) {
      unint64_t v8 = v7;
    }
    return v8 | 8;
  }
}

uint64_t sub_1000F7814(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    sub_10001644C(&qword_1005A6AF0);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  unint64_t v12 = v10 + 32;
  unint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

unint64_t sub_1000F7964(Swift::String string)
{
  object = string._object;
  v2._uint64_t countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_10050FF58, v2);
  swift_bridgeObjectRelease();
  if (v3 >= 9) {
    return 9;
  }
  else {
    return v3;
  }
}

id sub_1000F79B0(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7)
{
  swift_bridgeObjectRetain();
  v22._uint64_t countAndFlagsBits = a1;
  v22._object = a2;
  int v14 = sub_1000F7964(v22);
  if (a7)
  {
    id v15 = [a7 domain];
    uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v18 = v17;

    id v19 = [a7 code];
  }
  else
  {
    id v19 = 0;
    uint64_t v16 = 0;
    uint64_t v18 = 0;
  }
  id v20 = objc_allocWithZone((Class)type metadata accessor for SkannerEvent());
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return sub_1000F2348(0, v14, 0, 0, a3, a4, a5, a6, 1u, 1u, 3u, 0, 1u, 3u, 0, 1u, 2u, 0, 1u,
           v16,
           v18,
           (uint64_t)v19,
           a7 == 0);
}

unint64_t sub_1000F7B08(Swift::String string, Swift::OpaquePointer cases)
{
  object = string._object;
  v3._uint64_t countAndFlagsBits = string._countAndFlagsBits;
  v3._object = object;
  unint64_t v5 = _findStringSwitchCase(cases:string:)(cases, v3);
  swift_bridgeObjectRelease();
  if (v5 >= 4) {
    return 4;
  }
  else {
    return v5;
  }
}

unint64_t sub_1000F7B50(Swift::String string, Swift::OpaquePointer cases)
{
  object = string._object;
  v3._uint64_t countAndFlagsBits = string._countAndFlagsBits;
  v3._object = object;
  unint64_t v5 = _findStringSwitchCase(cases:string:)(cases, v3);
  swift_bridgeObjectRelease();
  if (v5 >= 3) {
    return 3;
  }
  else {
    return v5;
  }
}

unint64_t sub_1000F7B98()
{
  unint64_t result = qword_1005A6AC0;
  if (!qword_1005A6AC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1005A6AC0);
  }
  return result;
}

unint64_t sub_1000F7BEC()
{
  unint64_t result = qword_1005A6AC8;
  if (!qword_1005A6AC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1005A6AC8);
  }
  return result;
}

unint64_t sub_1000F7C40()
{
  unint64_t result = qword_1005A6AD0;
  if (!qword_1005A6AD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1005A6AD0);
  }
  return result;
}

unint64_t sub_1000F7C94()
{
  unint64_t result = qword_1005A6AD8;
  if (!qword_1005A6AD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1005A6AD8);
  }
  return result;
}

unint64_t sub_1000F7CE8()
{
  unint64_t result = qword_1005A6AE0;
  if (!qword_1005A6AE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1005A6AE0);
  }
  return result;
}

unint64_t sub_1000F7D3C()
{
  unint64_t result = qword_1005A6AE8;
  if (!qword_1005A6AE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1005A6AE8);
  }
  return result;
}

uint64_t sub_1000F7D90(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x707954746E657665 && a2 == 0xE900000000000065;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6D6954746E657665 && a2 == 0xE900000000000065 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x726556646C697562 && a2 == 0xEC0000006E6F6973 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x7954746C75736572 && a2 == 0xEA00000000006570 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x726F7774654E6461 && a2 == 0xEB0000000044496BLL {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x800000010044AA90 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x737265566E616B73 && a2 == 0xEB000000006E6F69 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x657079546461 && a2 == 0xE600000000000000 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x7463617265746E69 && a2 == 0xEF657079546E6F69 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x74616E6974736564 && a2 == 0xEB000000006E6F69 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x7461745370747468 && a2 == 0xEE0065646F437375 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x800000010044AAE0 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0xD00000000000001BLL && a2 == 0x800000010044AB00 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0x6B63616274736F70 && a2 == 0xEC00000065707954 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x800000010044FE00 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else if (a1 == 0x6D6F44726F727265 && a2 == 0xEB000000006E6961 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 15;
  }
  else if (a1 == 0x646F43726F727265 && a2 == 0xE900000000000065)
  {
    swift_bridgeObjectRelease();
    return 16;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 16;
    }
    else {
      return 17;
    }
  }
}

id sub_1000F8518(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7, void *a8, uint64_t a9, uint64_t a10, void *a11)
{
  swift_bridgeObjectRetain();
  v35._uint64_t countAndFlagsBits = a1;
  v35._object = a2;
  int v33 = sub_1000F7964(v35);
  if (a6)
  {
    uint64_t v18 = a6;
  }
  else
  {
    a5 = 0;
    uint64_t v18 = (void *)0xE000000000000000;
  }
  swift_bridgeObjectRetain();
  v19._rawValue = &off_100510D40;
  v36._uint64_t countAndFlagsBits = a5;
  v36._object = v18;
  unsigned __int8 v20 = sub_1000F7B08(v36, v19);
  if (a8)
  {
    uint64_t v21 = a8;
  }
  else
  {
    a7 = 0;
    uint64_t v21 = (void *)0xE000000000000000;
  }
  swift_bridgeObjectRetain();
  v22._uint64_t countAndFlagsBits = a7;
  v22._object = v21;
  Swift::Int v23 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_100510DC0, v22);
  swift_bridgeObjectRelease();
  if (a11)
  {
    id v24 = [a11 domain];
    uint64_t v25 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v27 = v26;

    id v28 = [a11 code];
  }
  else
  {
    id v28 = 0;
    uint64_t v25 = 0;
    uint64_t v27 = 0;
  }
  if (v23 == 1) {
    char v29 = 1;
  }
  else {
    char v29 = 2;
  }
  if (v23) {
    unsigned __int8 v30 = v29;
  }
  else {
    unsigned __int8 v30 = 0;
  }
  id v31 = objc_allocWithZone((Class)type metadata accessor for SkannerEvent());
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return sub_1000F2348(0, v33, a3, a4, 0, 0, a9, a10, v20, v30, 3u, 0, 1u, 3u, 0, 1u, 2u, 0, 1u,
           v25,
           v27,
           (uint64_t)v28,
           a11 == 0);
}

id sub_1000F86F4(uint64_t a1, void *a2, uint64_t a3, void *a4, void *a5, void *a6)
{
  if (a4)
  {
    swift_bridgeObjectRetain();
    v12._uint64_t countAndFlagsBits = a3;
    v12._object = a4;
    Swift::Int v13 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_100510EE0, v12);
    swift_bridgeObjectRelease();
    if (v13 == 1) {
      char v14 = 1;
    }
    else {
      char v14 = 2;
    }
    if (v13) {
      unsigned __int8 v15 = v14;
    }
    else {
      unsigned __int8 v15 = 0;
    }
    if (a5) {
      goto LABEL_9;
    }
  }
  else
  {
    unsigned __int8 v15 = 2;
    if (a5)
    {
LABEL_9:
      id v16 = [a5 integerValue];
      goto LABEL_12;
    }
  }
  id v16 = 0;
LABEL_12:
  swift_bridgeObjectRetain();
  v25._uint64_t countAndFlagsBits = a1;
  v25._object = a2;
  int v17 = sub_1000F7964(v25);
  if (a6)
  {
    id v18 = [a6 domain];
    uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v21 = v20;

    id v22 = [a6 code];
  }
  else
  {
    id v22 = 0;
    uint64_t v19 = 0;
    uint64_t v21 = 0;
  }
  id v23 = objc_allocWithZone((Class)type metadata accessor for SkannerEvent());
  return sub_1000F2348(1, v17, 0, 0, 0, 0, 0, 0, 4u, 2u, 3u, 0, 1u, 3u, 0, 1u, v15, (uint64_t)v16, a5 == 0,
           v19,
           v21,
           (uint64_t)v22,
           a6 == 0);
}

id sub_1000F88A4(uint64_t a1, void *a2, uint64_t a3, void *a4, void *a5, void *a6, void *a7)
{
  uint64_t v74 = a7;
  uint64_t v13 = type metadata accessor for Logger();
  uint64_t v14 = *(void *)(v13 - 8);
  double v15 = __chkstk_darwin(v13);
  int v17 = (char *)&v63 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a5)
  {
    id v73 = objc_msgSend(a5, "integerValue", v15);
    if (a6) {
      goto LABEL_3;
    }
LABEL_6:
    int v68 = 4;
    LODWORD(v65) = 3;
    os_log_t v66 = 0;
    uint64_t v67 = 1;
    goto LABEL_23;
  }
  id v73 = 0;
  if (!a6) {
    goto LABEL_6;
  }
LABEL_3:
  uint64_t v72 = v14;
  id v18 = a6;
  id v19 = (id)sub_10027C7DC((uint64_t)v18);
  uint64_t v64 = a3;
  if (v19)
  {

    int v20 = 1;
  }
  else
  {
    id v21 = (id)sub_10026FE34((uint64_t)v18);
    BOOL v22 = v21 == 0;

    int v20 = 4 * v22;
  }
  int v68 = v20;
  NSString v23 = (id)sub_10027BE30((uint64_t)v18);
  if (!v23)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    NSString v23 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  uint64_t v24 = ASDInstallAttributionVersionCreateFromString();

  if (v24 <= 299)
  {
    if ((unint64_t)(v24 - 200) >= 3 && v24 != 100) {
      goto LABEL_13;
    }
LABEL_17:
    BOOL v38 = sub_10027CCE0((BOOL)v18);

    os_log_t v66 = 0;
    if (v38) {
      int v39 = 2;
    }
    else {
      int v39 = 0;
    }
    goto LABEL_20;
  }
  if (v24 == 400)
  {
    if (sub_10027BF74((BOOL)v18)) {
      LODWORD(v65) = 2;
    }
    else {
      LODWORD(v65) = sub_10027BF88((BOOL)v18);
    }
    id v61 = (id)sub_10027C7D0((uint64_t)v18);
    if (v61)
    {
      uint64_t v62 = v61;
      static String._unconditionallyBridgeFromObjectiveC(_:)();

      os_log_t v66 = (os_log_t)String.count.getter();
      swift_bridgeObjectRelease();

      uint64_t v67 = 0;
      goto LABEL_22;
    }

    os_log_t v66 = 0;
    goto LABEL_21;
  }
  if (v24 == 300) {
    goto LABEL_17;
  }
LABEL_13:
  static Logger.skanner.getter();
  id v25 = v18;
  uint64_t v26 = Logger.logObject.getter();
  os_log_type_t v27 = static os_log_type_t.error.getter();
  int v28 = v27;
  if (!os_log_type_enabled(v26, v27))
  {

    (*(void (**)(char *, uint64_t))(v72 + 8))(v17, v13);
    os_log_t v66 = 0;
    int v39 = 3;
LABEL_20:
    LODWORD(v65) = v39;
LABEL_21:
    uint64_t v67 = 1;
    goto LABEL_22;
  }
  uint64_t v29 = swift_slowAlloc();
  LODWORD(v69) = v28;
  unsigned __int8 v30 = (uint8_t *)v29;
  uint64_t v70 = swift_slowAlloc();
  uint64_t v76 = v70;
  uint64_t v65 = v30;
  os_log_t v66 = v26;
  *(_DWORD *)unsigned __int8 v30 = 136315138;
  uint64_t v67 = (uint64_t)(v30 + 4);
  id v31 = (id)sub_10027BE30((uint64_t)v25);
  id v71 = v25;
  uint64_t v32 = a5;
  id v33 = v31;
  uint64_t v63 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v35 = v34;

  a5 = v32;
  uint64_t v75 = sub_1000F7290(v63, v35, &v76);
  UnsafeMutableRawBufferPointer.copyMemory(from:)();
  id v36 = v71;

  swift_bridgeObjectRelease();
  os_log_t v37 = v66;
  _os_log_impl((void *)&_mh_execute_header, v66, (os_log_type_t)v69, "Unknown postback version found when building SkannerEvent: %s", v65, 0xCu);
  uint64_t v67 = 1;
  swift_arrayDestroy();
  swift_slowDealloc();
  swift_slowDealloc();

  (*(void (**)(char *, uint64_t))(v72 + 8))(v17, v13);
  os_log_t v66 = 0;
  LODWORD(v65) = 3;
LABEL_22:
  a3 = v64;
LABEL_23:
  swift_bridgeObjectRetain();
  v77._uint64_t countAndFlagsBits = a1;
  v77._object = a2;
  LODWORD(v72) = sub_1000F7964(v77);
  if (a6)
  {
    id v40 = (id)sub_1002305D0((uint64_t)a6);
    uint64_t v41 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v70 = v42;
    id v71 = v41;

    id v43 = (id)sub_10027BE30((uint64_t)a6);
    uint64_t v69 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v45 = v44;
  }
  else
  {
    uint64_t v69 = 0;
    uint64_t v70 = 0;
    uint64_t v45 = 0;
    id v71 = 0;
  }
  unint64_t v46 = v74;
  swift_bridgeObjectRetain();
  v47._uint64_t countAndFlagsBits = a3;
  v47._object = a4;
  unint64_t v48 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_100510E10, v47);
  swift_bridgeObjectRelease();
  if (a6)
  {
    uint64_t v49 = sub_10027C418((uint64_t)a6);
    if (v46)
    {
LABEL_28:
      id v50 = [v46 domain];
      uint64_t v51 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v53 = v52;

      id v54 = [v46 code];
      goto LABEL_31;
    }
  }
  else
  {
    uint64_t v49 = 0;
    if (v46) {
      goto LABEL_28;
    }
  }
  id v54 = 0;
  uint64_t v51 = 0;
  uint64_t v53 = 0;
LABEL_31:
  unsigned __int8 v55 = v46 == 0;
  unsigned __int8 v56 = a6 == 0;
  unsigned __int8 v57 = a5 == 0;
  if (v48 >= 3) {
    unsigned __int8 v58 = 3;
  }
  else {
    unsigned __int8 v58 = v48;
  }
  id v59 = objc_allocWithZone((Class)type metadata accessor for SkannerEvent());
  return sub_1000F2348(2, v72, (uint64_t)v71, v70, 0, 0, v69, v45, v68, 2u, v58, (uint64_t)v73, v57, v65, (uint64_t)v66, v67, 2u, v49, v56,
           v51,
           v53,
           (uint64_t)v54,
           v55);
}

unint64_t sub_1000F8EA4()
{
  unint64_t result = qword_1005A4160;
  if (!qword_1005A4160)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1005A4160);
  }
  return result;
}

uint64_t sub_1000F8EE4(uint64_t a1)
{
  return a1;
}

uint64_t sub_1000F8F10(uint64_t a1)
{
  return a1;
}

uint64_t destroy for SkannerEvent.Payload(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for SkannerEvent.Payload(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  unint64_t v5 = *(void **)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  os_log_type_t v27 = v5;
  int v28 = *(void **)(a2 + 56);
  uint64_t v6 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = v28;
  *(void *)(a1 + 64) = v6;
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  uint64_t v7 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v7;
  uint64_t v8 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v8;
  uint64_t v9 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v9;
  uint64_t v10 = *(void *)(a2 + 136);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = v10;
  uint64_t v11 = *(void *)(a2 + 152);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = v11;
  uint64_t v12 = *(void *)(a2 + 168);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = v12;
  *(unsigned char *)(a1 + 192) = *(unsigned char *)(a2 + 192);
  uint64_t v13 = *(void *)(a2 + 184);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(void *)(a1 + 184) = v13;
  uint64_t v14 = *(void *)(a2 + 208);
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  *(void *)(a1 + 208) = v14;
  uint64_t v15 = *(void *)(a2 + 224);
  *(void *)(a1 + 216) = *(void *)(a2 + 216);
  *(void *)(a1 + 224) = v15;
  uint64_t v16 = *(void *)(a2 + 240);
  *(void *)(a1 + 232) = *(void *)(a2 + 232);
  *(void *)(a1 + 240) = v16;
  uint64_t v17 = *(void *)(a2 + 256);
  *(void *)(a1 + 248) = *(void *)(a2 + 248);
  *(void *)(a1 + 256) = v17;
  uint64_t v18 = *(void *)(a2 + 272);
  *(void *)(a1 + 264) = *(void *)(a2 + 264);
  *(void *)(a1 + 272) = v18;
  uint64_t v19 = *(void *)(a2 + 280);
  *(unsigned char *)(a1 + 288) = *(unsigned char *)(a2 + 288);
  *(void *)(a1 + 280) = v19;
  uint64_t v20 = *(void *)(a2 + 304);
  *(void *)(a1 + 296) = *(void *)(a2 + 296);
  *(void *)(a1 + 304) = v20;
  uint64_t v21 = *(void *)(a2 + 312);
  *(unsigned char *)(a1 + 320) = *(unsigned char *)(a2 + 320);
  *(void *)(a1 + 312) = v21;
  uint64_t v22 = *(void *)(a2 + 336);
  *(void *)(a1 + 328) = *(void *)(a2 + 328);
  *(void *)(a1 + 336) = v22;
  uint64_t v23 = *(void *)(a2 + 344);
  *(unsigned char *)(a1 + 352) = *(unsigned char *)(a2 + 352);
  *(void *)(a1 + 344) = v23;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v24 = v27;
  id v25 = v28;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SkannerEvent.Payload(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void **)(a1 + 48);
  unint64_t v5 = *(void **)(a2 + 48);
  *(void *)(a1 + 48) = v5;
  id v6 = v5;

  uint64_t v7 = *(void **)(a2 + 56);
  uint64_t v8 = *(void **)(a1 + 56);
  *(void *)(a1 + 56) = v7;
  id v9 = v7;

  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(a2 + 184);
  *(unsigned char *)(a1 + 192) = *(unsigned char *)(a2 + 192);
  *(void *)(a1 + 184) = v10;
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 216) = *(void *)(a2 + 216);
  *(void *)(a1 + 224) = *(void *)(a2 + 224);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 232) = *(void *)(a2 + 232);
  *(void *)(a1 + 240) = *(void *)(a2 + 240);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 248) = *(void *)(a2 + 248);
  *(void *)(a1 + 256) = *(void *)(a2 + 256);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 264) = *(void *)(a2 + 264);
  *(void *)(a1 + 272) = *(void *)(a2 + 272);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void *)(a2 + 280);
  *(unsigned char *)(a1 + 288) = *(unsigned char *)(a2 + 288);
  *(void *)(a1 + 280) = v11;
  *(void *)(a1 + 296) = *(void *)(a2 + 296);
  *(void *)(a1 + 304) = *(void *)(a2 + 304);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v12 = *(void *)(a2 + 312);
  *(unsigned char *)(a1 + 320) = *(unsigned char *)(a2 + 320);
  *(void *)(a1 + 312) = v12;
  *(void *)(a1 + 328) = *(void *)(a2 + 328);
  *(void *)(a1 + 336) = *(void *)(a2 + 336);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v13 = *(void *)(a2 + 344);
  *(unsigned char *)(a1 + 352) = *(unsigned char *)(a2 + 352);
  *(void *)(a1 + 344) = v13;
  return a1;
}

void *initializeWithTake for SkannerEvent.Payload(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x161uLL);
}

uint64_t assignWithTake for SkannerEvent.Payload(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  swift_bridgeObjectRelease();
  id v6 = *(void **)(a1 + 48);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);

  uint64_t v7 = *(void **)(a1 + 56);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);

  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(a2 + 128);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void *)(a2 + 144);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = v11;
  swift_bridgeObjectRelease();
  uint64_t v12 = *(void *)(a2 + 160);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = v12;
  swift_bridgeObjectRelease();
  uint64_t v13 = *(void *)(a2 + 176);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(void *)(a1 + 176) = v13;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(unsigned char *)(a1 + 192) = *(unsigned char *)(a2 + 192);
  uint64_t v14 = *(void *)(a2 + 208);
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  *(void *)(a1 + 208) = v14;
  swift_bridgeObjectRelease();
  uint64_t v15 = *(void *)(a2 + 224);
  *(void *)(a1 + 216) = *(void *)(a2 + 216);
  *(void *)(a1 + 224) = v15;
  swift_bridgeObjectRelease();
  uint64_t v16 = *(void *)(a2 + 240);
  *(void *)(a1 + 232) = *(void *)(a2 + 232);
  *(void *)(a1 + 240) = v16;
  swift_bridgeObjectRelease();
  uint64_t v17 = *(void *)(a2 + 256);
  *(void *)(a1 + 248) = *(void *)(a2 + 248);
  *(void *)(a1 + 256) = v17;
  swift_bridgeObjectRelease();
  uint64_t v18 = *(void *)(a2 + 272);
  *(void *)(a1 + 264) = *(void *)(a2 + 264);
  *(void *)(a1 + 272) = v18;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 280) = *(void *)(a2 + 280);
  *(unsigned char *)(a1 + 288) = *(unsigned char *)(a2 + 288);
  uint64_t v19 = *(void *)(a2 + 304);
  *(void *)(a1 + 296) = *(void *)(a2 + 296);
  *(void *)(a1 + 304) = v19;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 312) = *(void *)(a2 + 312);
  *(unsigned char *)(a1 + 320) = *(unsigned char *)(a2 + 320);
  uint64_t v20 = *(void *)(a2 + 336);
  *(void *)(a1 + 328) = *(void *)(a2 + 328);
  *(void *)(a1 + 336) = v20;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 344) = *(void *)(a2 + 344);
  *(unsigned char *)(a1 + 352) = *(unsigned char *)(a2 + 352);
  return a1;
}

uint64_t getEnumTagSinglePayload for SkannerEvent.Payload(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 353)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 40);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SkannerEvent.Payload(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 344) = 0;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(unsigned char *)(result + 352) = 0;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 353) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 40) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 353) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SkannerEvent.Payload()
{
  return &type metadata for SkannerEvent.Payload;
}

uint64_t getEnumTagSinglePayload for SkannerEvent.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF0) {
    goto LABEL_17;
  }
  if (a2 + 16 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 16) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 16;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 16;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 16;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x11;
  int v8 = v6 - 17;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for SkannerEvent.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 16 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 16) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF0) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xEF)
  {
    unsigned int v6 = ((a2 - 240) >> 8) + 1;
    *unint64_t result = a2 + 16;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000F98E0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 16;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SkannerEvent.CodingKeys()
{
  return &type metadata for SkannerEvent.CodingKeys;
}

unint64_t sub_1000F991C()
{
  unint64_t result = qword_1005A6B00;
  if (!qword_1005A6B00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1005A6B00);
  }
  return result;
}

unint64_t sub_1000F9970(uint64_t a1)
{
  unint64_t result = sub_1000F9998();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1000F9998()
{
  unint64_t result = qword_1005A6B08;
  if (!qword_1005A6B08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1005A6B08);
  }
  return result;
}

unint64_t sub_1000F99F0()
{
  unint64_t result = qword_1005A6B10;
  if (!qword_1005A6B10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1005A6B10);
  }
  return result;
}

unint64_t sub_1000F9A48()
{
  unint64_t result = qword_1005A6B18;
  if (!qword_1005A6B18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1005A6B18);
  }
  return result;
}

unint64_t sub_1000F9A9C()
{
  unint64_t result = qword_1005A6B28;
  if (!qword_1005A6B28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1005A6B28);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for SkannerEvent.Payload.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xEF) {
    goto LABEL_17;
  }
  if (a2 + 17 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 17) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 17;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 17;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 17;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x12;
  int v8 = v6 - 18;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for SkannerEvent.Payload.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 17 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 17) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xEF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xEE)
  {
    unsigned int v6 = ((a2 - 239) >> 8) + 1;
    *unint64_t result = a2 + 17;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000F9C4CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 17;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SkannerEvent.Payload.CodingKeys()
{
  return &type metadata for SkannerEvent.Payload.CodingKeys;
}

unint64_t sub_1000F9C88()
{
  unint64_t result = qword_1005A6B30;
  if (!qword_1005A6B30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1005A6B30);
  }
  return result;
}

unint64_t sub_1000F9CE0()
{
  unint64_t result = qword_1005A6B38;
  if (!qword_1005A6B38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1005A6B38);
  }
  return result;
}

unint64_t sub_1000F9D38()
{
  unint64_t result = qword_1005A6B40;
  if (!qword_1005A6B40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1005A6B40);
  }
  return result;
}

uint64_t sub_1000F9D8C()
{
  unint64_t v0 = _findStringSwitchCaseWithCache(cases:string:cache:)();
  swift_bridgeObjectRelease();
  if (v0 >= 0x12) {
    return 18;
  }
  else {
    return v0;
  }
}

uint64_t sub_1000F9DE4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 16))();
}

uint64_t sub_1000F9EDC()
{
  XPCDictionary.init()();
  if (qword_1005A2FC0 != -1) {
    swift_once();
  }
  swift_bridgeObjectRetain();
  XPCDictionary.subscript.setter();
  swift_bridgeObjectRetain();
  uint64_t result = XPCDictionary.subscript.setter();
  if (XPC_ACTIVITY_INTERVAL_1_MIN + 0x4000000000000000 < 0)
  {
    __break(1u);
  }
  else
  {
    sub_10006FABC();
    swift_bridgeObjectRetain();
    uint64_t result = XPCDictionary.subscript.setter();
    if ((unint64_t)(XPC_ACTIVITY_INTERVAL_1_MIN - 0x1000000000000000) >> 61 == 7)
    {
      swift_bridgeObjectRetain();
      XPCDictionary.subscript.setter();
      swift_bridgeObjectRetain();
      return XPCDictionary.subscript.setter();
    }
  }
  __break(1u);
  return result;
}

const char *sub_1000FA0D0()
{
  return "com.apple.appstored.activities.DeviceSecurity";
}

uint64_t sub_1000FA16C()
{
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t type metadata accessor for DeviceSecurityActivity()
{
  return self;
}

uint64_t sub_1000FA22C()
{
  _Block_release(*(const void **)(v0 + 16));
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000FA264()
{
  return (*(uint64_t (**)(void))(*(void *)(v0 + 16) + 16))();
}

char *sub_1000FA274(uint64_t a1, uint64_t a2)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  if (a2)
  {
    sub_1000FC118(8);
    swift_bridgeObjectRelease();
    Swift::String v4 = Substring.uppercased()();
    uint64_t countAndFlagsBits = v4._countAndFlagsBits;
    object = v4._object;
    swift_bridgeObjectRelease();
  }
  else
  {
    object = (void *)0xE800000000000000;
    uint64_t countAndFlagsBits = 0x3F3F3F3F3F3F3F3FLL;
  }
  id v7 = objc_allocWithZone(ObjectType);
  int v8 = sub_100016180(0, 0xE000000000000000, (uint64_t)"/", 1, 2, 0, (void *)0xE000000000000000, countAndFlagsBits, object, 0);
  swift_bridgeObjectRelease();
  swift_getObjectType();
  swift_deallocPartialClassInstance();
  uint64_t v9 = v8;
  sub_1000165EC();

  return v9;
}

id sub_1000FA3B4()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  if (*(void *)&v0[OBJC_IVAR____TtC9appstored6LogKey_activity])
  {
    int v2 = (os_activity_scope_state_s *)&v0[OBJC_IVAR____TtC9appstored6LogKey_activityState];
    swift_beginAccess();
    os_activity_scope_leave(v2);
    swift_endAccess();
  }
  v4.receiver = v0;
  v4.super_class = ObjectType;
  return objc_msgSendSuper2(&v4, "dealloc");
}

uint64_t sub_1000FA4D4(uint64_t a1)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  sub_100016588(a1, (uint64_t)v19, &qword_1005A5660);
  uint64_t v4 = v20;
  if (v20)
  {
    uint64_t v5 = sub_10002FD00(v19, v20);
    uint64_t v6 = *(void *)(v4 - 8);
    double v7 = __chkstk_darwin(v5);
    uint64_t v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, double))(v6 + 16))(v9, v7);
    uint64_t v10 = _bridgeAnythingToObjectiveC<A>(_:)();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v4);
    sub_10002E618((uint64_t)v19);
  }
  else
  {
    uint64_t v10 = 0;
  }
  v18.receiver = v1;
  v18.super_class = ObjectType;
  unsigned __int8 v11 = objc_msgSendSuper2(&v18, "isEqual:", v10);
  swift_unknownObjectRelease();
  if (v11)
  {
    char v12 = 1;
    return v12 & 1;
  }
  sub_100016588(a1, (uint64_t)v19, &qword_1005A5660);
  if (!v20)
  {
    sub_100016714((uint64_t)v19, &qword_1005A5660);
    goto LABEL_14;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_14:
    char v12 = 0;
    return v12 & 1;
  }
  id v13 = v17;
  if (*(void *)&v1[OBJC_IVAR____TtC9appstored6LogKey_value] == *(void *)&v17[OBJC_IVAR____TtC9appstored6LogKey_value]
    && *(void *)&v1[OBJC_IVAR____TtC9appstored6LogKey_value + 8] == *(void *)&v17[OBJC_IVAR____TtC9appstored6LogKey_value
                                                                                    + 8])
  {

    char v12 = 1;
  }
  else
  {
    char v12 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  return v12 & 1;
}

uint64_t type metadata accessor for LogKey()
{
  return self;
}

void sub_1000FA794(void *a1)
{
  uint64_t v2 = type metadata accessor for String.Encoding();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  static String.Encoding.utf8.getter();
  uint64_t v6 = String.data(using:allowLossyConversion:)();
  unint64_t v8 = v7;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  Class isa = 0;
  if (v8 >> 60 != 15)
  {
    Class isa = Data._bridgeToObjectiveC()().super.isa;
    sub_100034BBC(v6, v8);
  }
  NSString v10 = String._bridgeToObjectiveC()();
  [a1 encodeObject:isa forKey:v10];
  swift_unknownObjectRelease();
}

uint64_t sub_1000FA960(void *a1)
{
  uint64_t v2 = v1;
  swift_getObjectType();
  uint64_t v4 = type metadata accessor for String.Encoding();
  __chkstk_darwin(v4 - 8);
  sub_1000FC488();
  id v5 = v2;
  uint64_t v6 = NSCoder.decodeObject<A>(of:forKey:)();
  if (v6)
  {
    unint64_t v7 = (void *)v6;
    static Data._conditionallyBridgeFromObjectiveC(_:result:)();
  }
  swift_getObjectType();
  swift_deallocPartialClassInstance();
  return 0;
}

char *sub_1000FAF54(uint64_t a1, void *a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  if (!a2)
  {
    a1 = 0;
    a2 = (void *)0xE000000000000000;
  }
  if (!a4)
  {
    a3 = 0;
    a4 = (void *)0xE000000000000000;
  }
  id v13 = objc_allocWithZone(ObjectType);
  if (a6)
  {
    uint64_t v14 = sub_1000FC1B4(0, 0xE000000000000000, (uint64_t)"/", 1, 2, a1, a2, a3, a4, a5, a6, 0);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v14 = sub_100016180(0, 0xE000000000000000, (uint64_t)"/", 1, 2, a1, a2, a3, a4, 0);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_getObjectType();
  swift_deallocPartialClassInstance();
  return v14;
}

char *sub_1000FB140(uint64_t a1, uint64_t a2)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  if (a2) {
    uint64_t v5 = a1;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2) {
    uint64_t v6 = a2;
  }
  else {
    uint64_t v6 = 0xE000000000000000;
  }
  swift_bridgeObjectRetain();
  swift_stdlib_random();
  sub_100016534();
  uint64_t v7 = String.init<A>(_:radix:uppercase:)();
  uint64_t v9 = v8;
  id v10 = objc_allocWithZone(ObjectType);
  uint64_t v11 = sub_100016180(v5, v6, (uint64_t)"/", 1, 2, 0, (void *)0xE000000000000000, v7, v9, 0);
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  swift_getObjectType();
  swift_deallocPartialClassInstance();
  return v11;
}

char *sub_1000FB270(uint64_t a1, void *a2)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  if (a2) {
    uint64_t v5 = a1;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2) {
    uint64_t v6 = a2;
  }
  else {
    uint64_t v6 = (void *)0xE000000000000000;
  }
  swift_bridgeObjectRetain();
  swift_stdlib_random();
  sub_100016534();
  uint64_t v7 = String.init<A>(_:radix:uppercase:)();
  uint64_t v9 = v8;
  id v10 = objc_allocWithZone(ObjectType);
  uint64_t v11 = sub_100016180(0, 0xE000000000000000, (uint64_t)"/", 1, 2, v5, v6, v7, v9, 0);
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  swift_getObjectType();
  swift_deallocPartialClassInstance();
  return v11;
}

uint64_t sub_1000FB3A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t))
{
  if (a3)
  {
    uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  }
  else
  {
    uint64_t v5 = 0;
    uint64_t v6 = 0;
  }
  return a4(v5, v6);
}

char *sub_1000FB3E4(uint64_t a1, void *a2, void *a3)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  if (a2) {
    uint64_t v7 = a1;
  }
  else {
    uint64_t v7 = 0;
  }
  if (a2) {
    unint64_t v8 = a2;
  }
  else {
    unint64_t v8 = (void *)0xE000000000000000;
  }
  if (a3) {
    uint64_t v9 = a3;
  }
  else {
    uint64_t v9 = _swiftEmptyArrayStorage;
  }
  swift_stdlib_random();
  sub_100016534();
  uint64_t v10 = String.init<A>(_:radix:uppercase:)();
  char v12 = v11;
  id v13 = objc_allocWithZone(ObjectType);
  uint64_t v14 = sub_1000FBB48(0, 0xE000000000000000, (uint64_t)"/", 1, 2, v7, v8, v10, v12, (uint64_t)v9, 0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_getObjectType();
  swift_deallocPartialClassInstance();
  return v14;
}

char *sub_1000FB590(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v34 = a1;
  Class ObjectType = (Class)swift_getObjectType();
  uint64_t v5 = sub_10001644C((uint64_t *)&unk_1005A6330);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for UUID();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)v33 - v13;
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)v33 - v16;
  uint64_t v36 = a3;
  sub_100016588(a3, (uint64_t)v7, (uint64_t *)&unk_1005A6330);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    sub_100016714((uint64_t)v7, (uint64_t *)&unk_1005A6330);
    if (a2) {
      uint64_t v18 = v34;
    }
    else {
      uint64_t v18 = 0;
    }
    if (a2) {
      uint64_t v19 = a2;
    }
    else {
      uint64_t v19 = 0xE000000000000000;
    }
    id v20 = objc_allocWithZone(ObjectType);
    uint64_t v21 = sub_100016180(v18, v19, (uint64_t)"/", 1, 2, 0, (void *)0xE000000000000000, 0x3F3F3F3F3F3F3F3FLL, (void *)0xE800000000000000, 0);
    swift_bridgeObjectRelease();
    sub_100016714(v36, (uint64_t *)&unk_1005A6330);
    swift_getObjectType();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v17, v7, v8);
    uint64_t v22 = swift_getObjectType();
    uint64_t v23 = v34;
    if (!a2) {
      uint64_t v23 = 0;
    }
    v33[1] = v22;
    uint64_t v34 = v23;
    if (a2) {
      uint64_t v24 = a2;
    }
    else {
      uint64_t v24 = 0xE000000000000000;
    }
    id v25 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
    v25(v14, v17, v8);
    v25(v11, v14, v8);
    swift_bridgeObjectRetain();
    unsigned int v37 = bswap32(UUID.uuid.getter());
    sub_100016534();
    uint64_t v26 = String.init<A>(_:radix:uppercase:)();
    int v28 = v27;
    id v29 = objc_allocWithZone(ObjectType);
    swift_bridgeObjectRetain();
    unsigned __int8 v30 = sub_100016180(v34, v24, (uint64_t)"/", 1, 2, 0, (void *)0xE000000000000000, v26, v28, 0);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v21 = v30;
    sub_1000165EC();

    id v31 = *(void (**)(char *, uint64_t))(v9 + 8);
    v31(v11, v8);
    swift_bridgeObjectRelease();
    v31(v14, v8);
    swift_bridgeObjectRelease();
    sub_100016714(v36, (uint64_t *)&unk_1005A6330);
    v31(v17, v8);
  }
  swift_deallocPartialClassInstance();
  return v21;
}

uint64_t sub_1000FBA8C()
{
  qword_1005A6B90 = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "_os_activity_current");
  return swift_unknownObjectRetain();
}

BOOL sub_1000FBACC(uint64_t a1)
{
  return *(void *)(a1 + 8) != 0;
}

uint64_t sub_1000FBAE0@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t result = a1[1];
  if (result)
  {
    *a2 = *a1;
    a2[1] = result;
    return swift_bridgeObjectRetain();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1000FBAFC@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = *a1;
  unint64_t v3 = a1[1];
  uint64_t v5 = HIBYTE(v3) & 0xF;
  if ((v3 & 0x2000000000000000) == 0) {
    uint64_t v5 = v4 & 0xFFFFFFFFFFFFLL;
  }
  if (v5)
  {
    uint64_t result = swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v4 = 0;
    uint64_t result = 0;
  }
  *a2 = v4;
  a2[1] = result;
  return result;
}

char *sub_1000FBB48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7, uint64_t a8, void *a9, uint64_t a10, uint64_t a11)
{
  Class ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v11[OBJC_IVAR____TtC9appstored6LogKey_activity] = 0;
  uint64_t v15 = &v11[OBJC_IVAR____TtC9appstored6LogKey_activityState];
  *(void *)uint64_t v15 = 0;
  *((void *)v15 + 1) = 0;
  uint64_t v40 = 0;
  uint64_t v41 = sub_1000FBACC;
  uint64_t v42 = 0;
  id v43 = sub_1000FBADC;
  uint64_t v44 = 0;
  uint64_t v16 = v11;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_10001644C(&qword_1005A6D18);
  sub_100016490(&qword_1005A6D20, &qword_1005A6D18);
  sub_1000164E0();
  uint64_t v17 = Sequence<>.joined(separator:)();
  unint64_t v19 = v18;
  uint64_t v38 = a1;
  uint64_t v39 = a2;
  v20._uint64_t countAndFlagsBits = StaticString.description.getter();
  String.append(_:)(v20);
  swift_bridgeObjectRelease();
  v21._uint64_t countAndFlagsBits = a6;
  v21._object = a7;
  String.append(_:)(v21);
  swift_bridgeObjectRelease();
  v22._uint64_t countAndFlagsBits = a8;
  v22._object = a9;
  String.append(_:)(v22);
  swift_bridgeObjectRelease();
  uint64_t v23 = HIBYTE(v19) & 0xF;
  if ((v19 & 0x2000000000000000) == 0) {
    uint64_t v23 = v17 & 0xFFFFFFFFFFFFLL;
  }
  if (v23) {
    uint64_t v24 = 47;
  }
  else {
    uint64_t v24 = 0;
  }
  if (v23) {
    unint64_t v25 = 0xE100000000000000;
  }
  else {
    unint64_t v25 = 0xE000000000000000;
  }
  unint64_t v26 = v25;
  String.append(_:)(*(Swift::String *)&v24);
  swift_bridgeObjectRelease();
  v27._uint64_t countAndFlagsBits = v17;
  v27._object = (void *)v19;
  String.append(_:)(v27);
  swift_bridgeObjectRelease();
  uint64_t v28 = v39;
  id v29 = &v16[OBJC_IVAR____TtC9appstored6LogKey_value];
  *(void *)id v29 = v38;
  *((void *)v29 + 1) = v28;
  *(void *)&v16[OBJC_IVAR____TtC9appstored6LogKey_parentActivity] = a11;
  swift_unknownObjectRetain();

  v37.receiver = v16;
  v37.super_class = ObjectType;
  unsigned __int8 v30 = (char *)objc_msgSendSuper2(&v37, "init");
  id v31 = v30;
  if (*(void *)&v30[OBJC_IVAR____TtC9appstored6LogKey_parentActivity])
  {
    uint64_t v32 = v30;
    sub_1000165EC();
  }
  return v31;
}

char *sub_1000FBE18(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7, void *a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t ObjectType = swift_getObjectType();
  *(void *)&v11[OBJC_IVAR____TtC9appstored6LogKey_activity] = 0;
  uint64_t v17 = &v11[OBJC_IVAR____TtC9appstored6LogKey_activityState];
  *(void *)uint64_t v17 = 0;
  *((void *)v17 + 1) = 0;
  unint64_t v18 = v11;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v19 = [a8 description];
  v44._uint64_t countAndFlagsBits = static String._unconditionallyBridgeFromObjectiveC(_:)();
  Swift::String v21 = v20;

  unint64_t v48 = sub_1000FBAC8;
  uint64_t v49 = 0;
  id v50 = sub_1000FC4C8;
  uint64_t v51 = 0;
  uint64_t v52 = sub_1000FBADC;
  uint64_t v53 = 0;
  swift_bridgeObjectRetain();
  sub_10001644C(&qword_1005A6D28);
  sub_100016490(&qword_1005A6D30, &qword_1005A6D28);
  sub_1000164E0();
  uint64_t v22 = Sequence<>.joined(separator:)();
  unint64_t v24 = v23;
  swift_bridgeObjectRelease();
  uint64_t v46 = a1;
  unint64_t v47 = a2;
  uint64_t v25 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0) {
    uint64_t v25 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v25)
  {
    uint64_t v26 = HIBYTE(a7) & 0xF;
    if ((a7 & 0x2000000000000000) == 0) {
      uint64_t v26 = a6 & 0xFFFFFFFFFFFFLL;
    }
    if (v26)
    {
      uint64_t v28 = a11;
      uint64_t v27 = ObjectType;
    }
    else
    {
      uint64_t v27 = ObjectType;
      uint64_t v28 = a11;
    }
  }
  else
  {
    uint64_t v28 = a11;
    uint64_t v27 = ObjectType;
  }
  v29._uint64_t countAndFlagsBits = StaticString.description.getter();
  String.append(_:)(v29);
  swift_bridgeObjectRelease();
  v30._uint64_t countAndFlagsBits = a6;
  v30._object = (void *)a7;
  String.append(_:)(v30);
  swift_bridgeObjectRelease();
  v31._uint64_t countAndFlagsBits = v44._countAndFlagsBits;
  v31._object = v21;
  String.append(_:)(v31);
  swift_bridgeObjectRelease();
  uint64_t v32 = HIBYTE(v24) & 0xF;
  if ((v24 & 0x2000000000000000) == 0) {
    uint64_t v32 = v22 & 0xFFFFFFFFFFFFLL;
  }
  if (v32) {
    uint64_t v33 = 47;
  }
  else {
    uint64_t v33 = 0;
  }
  if (v32) {
    unint64_t v34 = 0xE100000000000000;
  }
  else {
    unint64_t v34 = 0xE000000000000000;
  }
  unint64_t v35 = v34;
  String.append(_:)(*(Swift::String *)&v33);
  swift_bridgeObjectRelease();
  v36._uint64_t countAndFlagsBits = v22;
  v36._object = (void *)v24;
  String.append(_:)(v36);
  swift_bridgeObjectRelease();
  unint64_t v37 = v47;
  uint64_t v38 = &v18[OBJC_IVAR____TtC9appstored6LogKey_value];
  *(void *)uint64_t v38 = v46;
  *((void *)v38 + 1) = v37;
  *(void *)&v18[OBJC_IVAR____TtC9appstored6LogKey_parentActivity] = v28;
  swift_unknownObjectRetain();

  v44._object = v18;
  uint64_t v45 = v27;
  uint64_t v39 = (char *)objc_msgSendSuper2((objc_super *)&v44._object, "init");
  uint64_t v40 = v39;
  if (*(void *)&v39[OBJC_IVAR____TtC9appstored6LogKey_parentActivity])
  {
    uint64_t v41 = v39;
    sub_1000165EC();
  }
  return v40;
}

uint64_t sub_1000FC118(uint64_t result)
{
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    String.index(_:offsetBy:limitedBy:)();
    return String.subscript.getter();
  }
  return result;
}

char *sub_1000FC1B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7, uint64_t a8, void *a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v12[OBJC_IVAR____TtC9appstored6LogKey_activity] = 0;
  uint64_t v16 = &v12[OBJC_IVAR____TtC9appstored6LogKey_activityState];
  *(void *)uint64_t v16 = 0;
  *((void *)v16 + 1) = 0;
  uint64_t v41 = sub_1000FBAC8;
  uint64_t v42 = 0;
  id v43 = sub_1000FC4C8;
  uint64_t v44 = 0;
  uint64_t v45 = sub_1000FBADC;
  uint64_t v46 = 0;
  uint64_t v17 = v12;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_10001644C(&qword_1005A6D28);
  sub_100016490(&qword_1005A6D30, &qword_1005A6D28);
  sub_1000164E0();
  uint64_t v18 = Sequence<>.joined(separator:)();
  unint64_t v20 = v19;
  uint64_t v39 = a1;
  uint64_t v40 = a2;
  v21._uint64_t countAndFlagsBits = StaticString.description.getter();
  String.append(_:)(v21);
  swift_bridgeObjectRelease();
  v22._uint64_t countAndFlagsBits = a6;
  v22._object = a7;
  String.append(_:)(v22);
  swift_bridgeObjectRelease();
  v23._uint64_t countAndFlagsBits = a8;
  v23._object = a9;
  String.append(_:)(v23);
  swift_bridgeObjectRelease();
  uint64_t v24 = HIBYTE(v20) & 0xF;
  if ((v20 & 0x2000000000000000) == 0) {
    uint64_t v24 = v18 & 0xFFFFFFFFFFFFLL;
  }
  if (v24) {
    uint64_t v25 = 47;
  }
  else {
    uint64_t v25 = 0;
  }
  if (v24) {
    unint64_t v26 = 0xE100000000000000;
  }
  else {
    unint64_t v26 = 0xE000000000000000;
  }
  unint64_t v27 = v26;
  String.append(_:)(*(Swift::String *)&v25);
  swift_bridgeObjectRelease();
  v28._uint64_t countAndFlagsBits = v18;
  v28._object = (void *)v20;
  String.append(_:)(v28);
  swift_bridgeObjectRelease();
  uint64_t v29 = v40;
  Swift::String v30 = &v17[OBJC_IVAR____TtC9appstored6LogKey_value];
  *(void *)Swift::String v30 = v39;
  *((void *)v30 + 1) = v29;
  *(void *)&v17[OBJC_IVAR____TtC9appstored6LogKey_parentActivity] = a12;
  swift_unknownObjectRetain();

  v38.receiver = v17;
  v38.super_class = ObjectType;
  Swift::String v31 = (char *)objc_msgSendSuper2(&v38, "init");
  uint64_t v32 = v31;
  if (*(void *)&v31[OBJC_IVAR____TtC9appstored6LogKey_parentActivity])
  {
    uint64_t v33 = v31;
    sub_1000165EC();
  }
  return v32;
}

unint64_t sub_1000FC488()
{
  unint64_t result = qword_1005A6D38;
  if (!qword_1005A6D38)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1005A6D38);
  }
  return result;
}

void *sub_1000FC4CC(void *result)
{
  *unint64_t result = ++qword_1005B0A80;
  return result;
}

uint64_t sub_1000FC4E8(mach_port_t a1, int a2, int *a3, uint64_t a4, int a5, _OWORD *a6, void *a7, _DWORD *a8, _DWORD *a9, _DWORD *a10, _DWORD *a11, _DWORD *a12)
{
  int v30 = 1;
  uint64_t v31 = a4;
  int v32 = 16777472;
  int v33 = a5;
  NDR_record_t v34 = NDR_record;
  int v17 = *a3;
  int v35 = a2;
  int v36 = v17;
  int v37 = a5;
  mach_port_t reply_port = mig_get_reply_port();
  msg.msgh_remote_port = a1;
  msg.msgh_local_port = reply_port;
  msg.msgh_bits = -2147478253;
  *(void *)&msg.msgh_voucher_port = 0x4B000000000;
  if (&_voucher_mach_msg_set)
  {
    voucher_mach_msg_set(&msg);
    mach_port_t reply_port = msg.msgh_local_port;
  }
  uint64_t v19 = mach_msg(&msg, 3, 0x40u, 0xDCu, reply_port, 0, 0);
  uint64_t v20 = v19;
  if ((v19 - 268435458) <= 0xE && ((1 << (v19 - 2)) & 0x4003) != 0)
  {
    mig_put_reply_port(msg.msgh_local_port);
  }
  else
  {
    if (!v19)
    {
      if (msg.msgh_id == 71)
      {
        uint64_t v20 = 4294966988;
      }
      else if (msg.msgh_id == 1300)
      {
        if ((msg.msgh_bits & 0x80000000) != 0)
        {
          uint64_t v20 = 4294966996;
          if (v30 == 2
            && msg.msgh_size == 212
            && !msg.msgh_remote_port
            && HIBYTE(v32) == 1
            && HIWORD(v35) << 16 == 1114112)
          {
            int v21 = v33;
            if (v33 == v47)
            {
              uint64_t v20 = 0;
              int v22 = *(_DWORD *)&v34.mig_vers;
              *a3 = v38;
              long long v23 = v46;
              a6[6] = v45;
              a6[7] = v23;
              long long v24 = v44;
              a6[4] = v43;
              a6[5] = v24;
              long long v25 = v40;
              *a6 = v39;
              a6[1] = v25;
              long long v26 = v42;
              a6[2] = v41;
              a6[3] = v26;
              *a7 = v31;
              *a8 = v21;
              int v27 = v49;
              *a9 = v48;
              *a10 = v27;
              *a11 = v50;
              *a12 = v22;
              return v20;
            }
          }
        }
        else if (msg.msgh_size == 36)
        {
          uint64_t v20 = 4294966996;
          if (HIDWORD(v31))
          {
            if (msg.msgh_remote_port) {
              uint64_t v20 = 4294966996;
            }
            else {
              uint64_t v20 = HIDWORD(v31);
            }
          }
        }
        else
        {
          uint64_t v20 = 4294966996;
        }
      }
      else
      {
        uint64_t v20 = 4294966995;
      }
      mach_msg_destroy(&msg);
      return v20;
    }
    mig_dealloc_reply_port(msg.msgh_local_port);
  }
  return v20;
}

uint64_t sub_1000FC744(mach_port_t a1, unsigned int a2, long long *a3)
{
  long long v4 = a3[5];
  long long v19 = a3[4];
  long long v20 = v4;
  long long v5 = a3[7];
  long long v21 = a3[6];
  long long v22 = v5;
  long long v6 = a3[1];
  long long v15 = *a3;
  long long v16 = v6;
  long long v7 = a3[3];
  long long v17 = a3[2];
  NDR_record_t v13 = NDR_record;
  unsigned int v14 = a2;
  long long v18 = v7;
  mach_port_t reply_port = mig_get_reply_port();
  msg.msgh_remote_port = a1;
  msg.msgh_local_port = reply_port;
  msg.msgh_bits = 5395;
  *(void *)&msg.msgh_voucher_port = 0x4B100000000;
  if (&_voucher_mach_msg_set)
  {
    voucher_mach_msg_set(&msg);
    mach_port_t reply_port = msg.msgh_local_port;
  }
  uint64_t v9 = mach_msg(&msg, 3, 0xA4u, 0x2Cu, reply_port, 0, 0);
  uint64_t v10 = v9;
  if ((v9 - 268435458) <= 0xE && ((1 << (v9 - 2)) & 0x4003) != 0)
  {
    mig_put_reply_port(msg.msgh_local_port);
    return v10;
  }
  if (v9)
  {
    mig_dealloc_reply_port(msg.msgh_local_port);
    return v10;
  }
  if (msg.msgh_id == 71)
  {
    uint64_t v10 = 4294966988;
LABEL_17:
    mach_msg_destroy(&msg);
    return v10;
  }
  if (msg.msgh_id != 1301)
  {
    uint64_t v10 = 4294966995;
    goto LABEL_17;
  }
  uint64_t v10 = 4294966996;
  if ((msg.msgh_bits & 0x80000000) != 0) {
    goto LABEL_17;
  }
  if (msg.msgh_size != 36) {
    goto LABEL_17;
  }
  if (msg.msgh_remote_port) {
    goto LABEL_17;
  }
  uint64_t v10 = v14;
  if (v14) {
    goto LABEL_17;
  }
  return v10;
}

uint64_t sub_1000FC8D4(mach_port_t a1, int a2, int a3, int a4, _OWORD *a5, uint64_t a6, int a7, _OWORD *a8, void *a9, _DWORD *a10)
{
  int v18 = 1;
  uint64_t v19 = a6;
  int v20 = 16777472;
  int v21 = a7;
  NDR_record_t v22 = NDR_record;
  *(_DWORD *)long long v23 = a2;
  *(_DWORD *)&v23[4] = a3;
  *(_DWORD *)&v23[8] = a4;
  *(_OWORD *)&v23[12] = *a5;
  int v24 = a7;
  mach_port_t reply_port = mig_get_reply_port();
  msg.msgh_remote_port = a1;
  msg.msgh_local_port = reply_port;
  msg.msgh_bits = -2147478253;
  *(void *)&msg.msgh_voucher_port = 0x4B200000000;
  if (&_voucher_mach_msg_set)
  {
    voucher_mach_msg_set(&msg);
    mach_port_t reply_port = msg.msgh_local_port;
  }
  uint64_t v13 = mach_msg(&msg, 3, 0x54u, 0x50u, reply_port, 0, 0);
  uint64_t v14 = v13;
  if ((v13 - 268435458) <= 0xE && ((1 << (v13 - 2)) & 0x4003) != 0)
  {
    mig_put_reply_port(msg.msgh_local_port);
  }
  else
  {
    if (!v13)
    {
      if (msg.msgh_id == 71)
      {
        uint64_t v14 = 4294966988;
      }
      else if (msg.msgh_id == 1302)
      {
        if ((msg.msgh_bits & 0x80000000) != 0)
        {
          uint64_t v14 = 4294966996;
          if (v18 == 1 && msg.msgh_size == 72 && !msg.msgh_remote_port && HIBYTE(v20) == 1)
          {
            int v15 = v21;
            if (v21 == *(_DWORD *)&v23[16])
            {
              uint64_t v14 = 0;
              *a8 = *(_OWORD *)v23;
              *a9 = v19;
              *a10 = v15;
              return v14;
            }
          }
        }
        else if (msg.msgh_size == 36)
        {
          uint64_t v14 = 4294966996;
          if (HIDWORD(v19))
          {
            if (msg.msgh_remote_port) {
              uint64_t v14 = 4294966996;
            }
            else {
              uint64_t v14 = HIDWORD(v19);
            }
          }
        }
        else
        {
          uint64_t v14 = 4294966996;
        }
      }
      else
      {
        uint64_t v14 = 4294966995;
      }
      mach_msg_destroy(&msg);
      return v14;
    }
    mig_dealloc_reply_port(msg.msgh_local_port);
  }
  return v14;
}

uint64_t sub_1000FCAC4(mach_port_t a1, _DWORD *a2, _DWORD *a3, _DWORD *a4, _DWORD *a5)
{
  mach_port_t reply_port = mig_get_reply_port();
  msg.msgh_remote_port = a1;
  msg.msgh_local_port = reply_port;
  msg.msgh_bits = 5395;
  *(void *)&msg.msgh_voucher_port = 0x4B300000000;
  if (&_voucher_mach_msg_set)
  {
    voucher_mach_msg_set(&msg);
    mach_port_t reply_port = msg.msgh_local_port;
  }
  uint64_t v11 = mach_msg(&msg, 3, 0x18u, 0x3Cu, reply_port, 0, 0);
  uint64_t v12 = v11;
  if ((v11 - 268435458) > 0xE || ((1 << (v11 - 2)) & 0x4003) == 0)
  {
    if (v11)
    {
      mig_dealloc_reply_port(msg.msgh_local_port);
      return v12;
    }
    if (msg.msgh_id == 71)
    {
      uint64_t v12 = 4294966988;
    }
    else if (msg.msgh_id == 1303)
    {
      if ((msg.msgh_bits & 0x80000000) == 0)
      {
        if (msg.msgh_size == 52)
        {
          if (!msg.msgh_remote_port)
          {
            uint64_t v12 = v18;
            if (!v18)
            {
              int v15 = v20;
              *a2 = v19;
              *a3 = v15;
              int v16 = v22;
              *a4 = v21;
              *a5 = v16;
              return v12;
            }
            goto LABEL_23;
          }
        }
        else if (msg.msgh_size == 36)
        {
          if (msg.msgh_remote_port) {
            BOOL v13 = 1;
          }
          else {
            BOOL v13 = v18 == 0;
          }
          if (v13) {
            uint64_t v12 = 4294966996;
          }
          else {
            uint64_t v12 = v18;
          }
          goto LABEL_23;
        }
      }
      uint64_t v12 = 4294966996;
    }
    else
    {
      uint64_t v12 = 4294966995;
    }
LABEL_23:
    mach_msg_destroy(&msg);
    return v12;
  }
  mig_put_reply_port(msg.msgh_local_port);
  return v12;
}

uint64_t sub_1000FCC40(uint64_t a1)
{
  uint64_t v1 = *(&off_100520A90
       + ((75 * ((qword_1005A6FB0 - dword_1005A7058) ^ 0x7E)) ^ byte_100491800[byte_1004A0860[(75 * ((qword_1005A6FB0 - dword_1005A7058) ^ 0x7E))] ^ 0xF7])
       + 45);
  unsigned __int8 v2 = 75 * (*v1 ^ qword_1005A6FB0 ^ 0x7E);
  uint64_t v3 = (uint64_t)*(&off_100520A90
                + (byte_100495F28[(byte_100491A04[v2 - 4] ^ 0xB4) - 8] ^ v2)
                + 186);
  uint64_t v4 = (*(void *)(v3 - 4) ^ *v1) - (void)&v6;
  void *v1 = 544792907 * v4 + 0x5547F155C74775EALL;
  *(void *)(v3 - 4) = 544792907 * (v4 ^ 0xE12C07DFCC70D97ELL);
  uint64_t v8 = a1;
  v7[0] = 1911
        - 1697562443 * ((1698161583 - (v7 | 0x6537E3AF) + (v7 | 0x9AC81C50)) ^ 0x4D5824D4);
  LOBYTE(v3) = 75 * ((*(_DWORD *)(v3 - 4) - *(_DWORD *)v1) ^ 0x7E);
  (*((void (**)(_DWORD *))*(&off_100520A90
                                     + ((75 * ((qword_1005A6FB0 + dword_1005A7058) ^ 0x7E)) ^ byte_10049B320[byte_100495E20[(75 * ((qword_1005A6FB0 + dword_1005A7058) ^ 0x7E))] ^ 0x98])
                                     - 38)
   + (byte_100495D2C[(byte_10049170C[v3 - 12] ^ 0x3D) - 12] ^ v3)
   + 4491))(v7);
  return v7[1];
}

uint64_t sub_1000FCE50()
{
  return 4294925265;
}

uint64_t sub_1000FCE58(uint64_t a1)
{
  uint64_t v1 = *(&off_100520A90
       + ((75 * ((qword_1005A6FB0 + dword_1005A7078) ^ 0x7E)) ^ byte_100491600[byte_1004A0760[(75 * ((qword_1005A6FB0 + dword_1005A7078) ^ 0x7E))] ^ 0xB3])
       + 198);
  uint64_t v2 = (uint64_t)*(&off_100520A90
                + (byte_100495F20[byte_100491A00[(75
                                                                                                * ((qword_1005A6FB0 - *v1) ^ 0x7E))] ^ 0x18] ^ (75 * ((qword_1005A6FB0 - *v1) ^ 0x7E)))
                + 30);
  unint64_t v3 = (*(void *)(v2 - 4) + *v1) ^ (unint64_t)&v5;
  void *v1 = 544792907 * v3 + 0x1ED3F820338F2682;
  *(void *)(v2 - 4) = 544792907 * (v3 ^ 0xE12C07DFCC70D97ELL);
  uint64_t v6 = a1;
  unsigned int v7 = 1484 - 1437274309 * ((((2 * &v6) | 0x6B25F1A) - &v6 - 56176525) ^ 0x215752B8);
  LOBYTE(v2) = 75 * ((*(_DWORD *)(v2 - 4) + *(_DWORD *)v1) ^ 0x7E);
  return (*((uint64_t (**)(uint64_t *))*(&off_100520A90
                                                + ((75 * ((qword_1005A6FB0 - dword_1005A7078) ^ 0x7E)) ^ byte_10049B320[byte_100495E20[(75 * ((qword_1005A6FB0 - dword_1005A7078) ^ 0x7E))] ^ 0x14])
                                                - 144)
          + (v2 ^ byte_100495F20[byte_100491A00[v2] ^ 0xB4])
          + 4657))(&v6);
}

uint64_t sub_1000FD04C(char a1, unsigned int a2)
{
  return byte_100491608[(byte_1004A0764[a2 - 4] ^ a1) - 8] ^ a2;
}

uint64_t sub_1000FD078(char a1, unsigned int a2)
{
  return byte_100495D2C[(byte_10049170C[a2 - 12] ^ a1) - 12] ^ a2;
}

uint64_t sub_1000FD0A4(unsigned int a1)
{
  return byte_10049B328[(byte_100495E28[a1 - 8] ^ 0x98) - 8] ^ a1;
}

uint64_t sub_1000FD0D4(char a1, unsigned int a2)
{
  return byte_100491904[(byte_1004A0964[a2 - 4] ^ a1) - 4] ^ a2;
}

uint64_t sub_1000FD100(unsigned int a1)
{
  return byte_100495F28[(byte_100491A04[a1 - 4] ^ 0x54) - 8] ^ a1;
}

uint64_t sub_1000FD130(unsigned int a1)
{
  return byte_10049B328[(byte_100495E28[a1 - 8] ^ 0x14) - 8] ^ a1;
}

uint64_t sub_1000FD160(unsigned int a1)
{
  return byte_100491800[byte_1004A086C[a1 - 12] ^ 0xB9] ^ a1;
}

uint64_t sub_1000FD18C(unsigned int a1)
{
  return byte_100491800[byte_1004A086C[a1 - 12] ^ 0x5D] ^ a1;
}

uint64_t sub_1000FD1B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = *(&off_100520A90
       + ((75 * (dword_1005A7000 ^ 0x7E ^ qword_1005A6FB0)) ^ byte_100491800[byte_1004A0860[(75 * (dword_1005A7000 ^ 0x7E ^ qword_1005A6FB0))] ^ 0xF7])
       + 18);
  unsigned __int8 v5 = 75 * (*v4 ^ qword_1005A6FB0 ^ 0x7E);
  uint64_t v6 = (uint64_t)*(&off_100520A90
                + (byte_100491800[byte_1004A086C[v5 - 12] ^ 0x79] ^ v5)
                + 217);
  unint64_t v7 = (unint64_t)&v9[*v4 + *(void *)(v6 - 4)];
  *uint64_t v4 = 544792907 * v7 + 0x1ED3F820338F2682;
  *(void *)(v6 - 4) = 544792907 * (v7 ^ 0xE12C07DFCC70D97ELL);
  v10[0] = a3;
  v10[1] = a1;
  uint64_t v14 = a2;
  int v13 = (1697562443 * ((v10 + 2111032075 - 2 * ((unint64_t)v10 & 0x7DD3CB0B)) ^ 0xAA43F38F)) ^ 0x6BD;
  uint64_t v12 = a4;
  LODWORD(v6) = 544792907 * ((*(_DWORD *)(v6 - 4) + *(_DWORD *)v4) ^ 0xCC70D97E);
  (*((void (**)(void *))*(&off_100520A90
                                     + ((75 * (dword_1005A7000 ^ 0x7E ^ qword_1005A6FB0)) ^ byte_100491800[byte_1004A0860[(75 * (dword_1005A7000 ^ 0x7E ^ qword_1005A6FB0))] ^ 0x5D])
                                     + 6)
   + (byte_100495F28[(byte_100491A04[v6 - 4] ^ 0x54) - 8] ^ v6)
   + 4496))(v10);
  return (v11 - 847203058);
}

uint64_t sub_1000FD3C0(uint64_t a1)
{
  uint64_t v1 = (unint64_t *)*(&off_100520A90
                           + ((75 * ((qword_1005A6FB0 - dword_1005A6DC8) ^ 0x7E)) ^ byte_100491800[byte_1004A0860[(75 * ((qword_1005A6FB0 - dword_1005A6DC8) ^ 0x7E))] ^ 0xF7])
                           - 131);
  unsigned __int8 v2 = 75 * ((qword_1005A6FB0 + *v1) ^ 0x7E);
  uint64_t v3 = (uint64_t)*(&off_100520A90
                + (byte_100491904[(byte_1004A0964[v2 - 4] ^ 0xB4) - 4] ^ v2)
                + 242);
  unint64_t v4 = 544792907 * (*v1 ^ (unint64_t)&v6 ^ 0xE12C07DFCC70D97ELL ^ *(void *)(v3 - 4));
  unint64_t *v1 = v4;
  *(void *)(v3 - 4) = v4;
  unsigned int v9 = 1419
     - 673918253
     * (((&v7 ^ 0x821DC7DC | 0x5FF916F2) - ((&v7 ^ 0x821DC7DC) & 0x5FF916F2)) ^ 0x47ACCA86);
  uint64_t v7 = a1;
  LOBYTE(v3) = 75 * ((*(_DWORD *)(v3 - 4) + *(_DWORD *)v1) ^ 0x7E);
  (*((void (**)(uint64_t *))*(&off_100520A90
                                      + ((75 * ((qword_1005A6FB0 + dword_1005A6DC8) ^ 0x7E)) ^ byte_100491600[byte_1004A0760[(75 * ((qword_1005A6FB0 + dword_1005A6DC8) ^ 0x7E))] ^ 0xB3])
                                      - 19)
   + (byte_100495F28[(byte_100491A04[v3 - 4] ^ 0x54) - 8] ^ v3)
   + 4460))(&v7);
  return (v8 - 847203058);
}

uint64_t sub_1000FD5D4(unsigned int a1)
{
  return byte_100495D2C[(byte_10049170C[a1 - 12] ^ 0x38) - 12] ^ a1;
}

uint64_t sub_1000FD600(char a1, unsigned int a2)
{
  return byte_100491800[(byte_1004A086C[a2 - 12] ^ a1)] ^ a2;
}

uint64_t sub_1000FD62C(unsigned int a1)
{
  return byte_100491904[(byte_1004A0964[a1 - 4] ^ 0xB4) - 4] ^ a1;
}

uint64_t sub_1000FD65C(unsigned int a1)
{
  return byte_100491608[(byte_1004A0764[a1 - 4] ^ 0xEC) - 8] ^ a1;
}

uint64_t sub_1000FD68C(unsigned int a1)
{
  return byte_100495F28[(byte_100491A04[a1 - 4] ^ 0xDE) - 8] ^ a1;
}

uint64_t sub_1000FD6BC(unsigned int a1)
{
  return byte_100495F28[(byte_100491A04[a1 - 4] ^ 0xB4) - 8] ^ a1;
}

uint64_t sub_1000FD6EC(unsigned int a1)
{
  return byte_100495D2C[(byte_10049170C[a1 - 12] ^ 0x3D) - 12] ^ a1;
}

uint64_t sub_1000FD71C()
{
  return 2;
}

uint64_t sub_1000FD724()
{
  return 16777984;
}

uint64_t sub_1000FD730()
{
  return 2;
}

uint64_t sub_1000FD738(uint64_t a1)
{
  uint64_t v1 = *(&off_100520A90
       + ((75 * ((qword_1005A6FB0 + dword_1005A7050) ^ 0x7E)) ^ byte_100491800[byte_1004A0860[(75 * ((qword_1005A6FB0 + dword_1005A7050) ^ 0x7E))] ^ 0x5D])
       + 92);
  uint64_t v2 = (uint64_t)*(&off_100520A90
                + (byte_100491800[byte_1004A0860[(75
                                                                                                * ((qword_1005A6FB0 + *v1) ^ 0x7E))] ^ 0x5D] ^ (75 * ((qword_1005A6FB0 + *v1) ^ 0x7E)))
                + 236);
  uint64_t v3 = (*(void *)(v2 - 4) ^ *v1) - (void)&v5;
  void *v1 = 544792907 * v3 - 0x1ED3F820338F2682;
  *(void *)(v2 - 4) = 544792907 * (v3 ^ 0xE12C07DFCC70D97ELL);
  unsigned int v6 = 2361
     - 1697562443 * ((453851132 - (&v6 | 0x1B0D37FC) + (&v6 | 0xE4F2C803)) ^ 0x3362F087);
  uint64_t v7 = a1;
  LOBYTE(v2) = 75 * ((*(_DWORD *)(v2 - 4) - *(_DWORD *)v1) ^ 0x7E);
  return (*((uint64_t (**)(unsigned int *))*(&off_100520A90
                                                     + ((75
                                                                        * ((qword_1005A6FB0 - dword_1005A7050) ^ 0x7E)) ^ byte_100491800[byte_1004A0860[(75 * ((qword_1005A6FB0 - dword_1005A7050) ^ 0x7E))] ^ 0xB9])
                                                     - 69)
          + (v2 ^ byte_100491800[byte_1004A0860[v2] ^ 0xB9])
          + 4584))(&v6);
}

uint64_t sub_1000FD91C(int a1)
{
  uint64_t v1 = *(&off_100520A90
       + (byte_100495F28[(byte_100491A04[(75
                                                                          * ((qword_1005A6FB0 + dword_1005A6FB8) ^ 0x7E))
                                                        - 4] ^ 0xDE)
                                        - 8] ^ (75 * ((qword_1005A6FB0 + dword_1005A6FB8) ^ 0x7E)))
       - 128);
  uint64_t v2 = (uint64_t)*(&off_100520A90
                + ((75 * ((qword_1005A6FB0 - *v1) ^ 0x7E)) ^ byte_100491600[byte_1004A0760[(75 * ((qword_1005A6FB0 - *v1) ^ 0x7E))] ^ 4])
                + 142);
  uint64_t v3 = *(void *)(v2 - 4) - *v1 - (void)&v6;
  void *v1 = 544792907 * v3 - 0x1ED3F820338F2682;
  *(void *)(v2 - 4) = 544792907 * (v3 ^ 0xE12C07DFCC70D97ELL);
  unsigned int v4 = 375636451 * (((v7 | 0xCFB98B3) - (v7 & 0xCFB98B3)) ^ 0x5FC5C23F);
  _DWORD v7[2] = v4 ^ (516446171 * a1 + 578085537);
  v7[0] = v4 + 2787;
  LOBYTE(v2) = 75 * (*(_DWORD *)v1 ^ 0x7E ^ *(_DWORD *)(v2 - 4));
  (*((void (**)(_DWORD *))*(&off_100520A90
                                     + ((75 * ((qword_1005A6FB0 - dword_1005A6FB8) ^ 0x7E)) ^ byte_100491800[byte_1004A0860[(75 * ((qword_1005A6FB0 - dword_1005A6FB8) ^ 0x7E))] ^ 0x79])
                                     - 13)
   + (byte_100491800[byte_1004A086C[v2 - 12] ^ 0x79] ^ v2)
   + 4700))(v7);
  return (v7[1] - 847203058);
}

uint64_t sub_1000FDB34(unsigned int a1)
{
  return byte_100491608[(byte_1004A0764[a1 - 4] ^ 4) - 8] ^ a1;
}

uint64_t sub_1000FDB60(char a1, unsigned int a2)
{
  return byte_10049B328[(byte_100495E28[a2 - 8] ^ a1) - 8] ^ a2;
}

uint64_t sub_1000FDB8C(unsigned int a1)
{
  return byte_100491800[byte_1004A086C[a1 - 12] ^ 0x79] ^ a1;
}

uint64_t sub_1000FDBB8(char a1, unsigned int a2)
{
  return byte_100495F28[(byte_100491A04[a2 - 4] ^ a1) - 8] ^ a2;
}

uint64_t sub_1000FDBE4(unsigned int a1)
{
  return byte_100491800[byte_1004A086C[a1 - 12] ^ 0xF7] ^ a1;
}

uint64_t sub_1000FDC10(unsigned int a1)
{
  return byte_100491904[(byte_1004A0964[a1 - 4] ^ 0xD4) - 4] ^ a1;
}

uint64_t sub_1000FDC40(unsigned int a1)
{
  return byte_100491608[(byte_1004A0764[a1 - 4] ^ 0xB3) - 8] ^ a1;
}

uint64_t sub_1000FDC70(unsigned int a1)
{
  return byte_100495F28[(byte_100491A04[a1 - 4] ^ 0x18) - 8] ^ a1;
}

void sub_1000FDC9C(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16) - 366490169 * (((a1 | 0x4671CE0E) - a1 + (a1 & 0xB98E31F1)) ^ 0x50DF984A);
  __asm { BRAA            X10, X17 }
}

uint64_t sub_1000FDD8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50)
{
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))STACK[0x930])(a1, a2, a3, a4, a5, a50, 1043, 1253);
}

void sub_1000FDDC0(uint64_t a1)
{
  __asm { BRAA            X8, X17 }
}

uint64_t sub_1000FDE48(uint64_t a1)
{
  *(_DWORD *)a1 = 2094040877;
  *(_DWORD *)(a1 + 4) = 861414661;
  *(_DWORD *)(a1 + 72) = 189260953;
  *(_DWORD *)(a1 + 76) = 189260953;
  *(_WORD *)(a1 + 80) = 22841;
  memset((void *)(a1 + 8), 91, 64);
  unint64_t v2 = STACK[0x808];
  qmemcpy((void *)(STACK[0x808] + 84), "KM$:[[[[[[[[[[[[[[[[", 20);
  *(_DWORD *)(v2 + 104) = 1075108717;
  *(unsigned char *)(v2 + 108) = 0;
  unint64_t *v1 = v2;
  return ((uint64_t (*)(void))STACK[0x428])();
}

uint64_t sub_1000FDED8(uint64_t a1)
{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  unint64_t v5 = v2 ^ 0xE19B3C29;
  STACK[0xA00] = v5;
  LODWORD(v5) = ((((((v1 + 1603) ^ 0x80) - 2242) ^ 0x102) + v5) ^ 0xBF7FAFEB)
              + 2147481472
              + ((2 * (((((v1 + 1603) ^ 0x80) - 2242) ^ 0x102) + v5)) & 0x7EFF5FD6);
  *(_DWORD *)(a1 + 16) = v5;
  uint64_t v6 = (*(uint64_t (**)(void))(v3 + 8 * (v1 + 3893)))((v5 - 1065330539));
  unint64_t v7 = STACK[0x258];
  *(void *)(a1 + 24) = v6;
  return (*(uint64_t (**)(void))(v7 + 8 * ((7 * (v6 == 0)) ^ (v1 + 1603))))();
}

uint64_t sub_1000FDF7C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)(a1 - 7 + v4 + v3 + 1073569472 - v5 + (((v6 - 435) | 0x880) ^ (v7 + 2172))) = *(void *)(a2 - 7 + v4 + v3 + 1073569472 - v5 + (((v6 - 435) | 0x880) ^ (v7 + 2172)));
  return (*(uint64_t (**)(void))(v8 + 8 * ((4350 * (v5 - (v2 & 0xFFFFFFF8) == -8)) ^ v6)))();
}

uint64_t sub_1000FDFE8@<X0>(int a1@<W8>)
{
  int v4 = (*(uint64_t (**)(void))(v3 + 8 * (v1 ^ 0x343)))(a1 ^ (v2 - 347) ^ (v1 - 3385) ^ ((v1 - 4291) | 0x641u)) == 0;
  return (*(uint64_t (**)(void))(v3 + 8 * (((v4 << 6) | (v4 << 7)) ^ v1)))();
}

uint64_t sub_1000FE048(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unint64_t *a13, int a14, unsigned int a15)
{
  a15 = 3687 - (&a13 ^ 0xC7816049) * v16;
  a13 = &STACK[0x75464D914B72487F];
  uint64_t v18 = (*(uint64_t (**)(unint64_t **))(v15 + 37680))(&a13);
  return (*(uint64_t (**)(uint64_t))(v15 + 8 * ((310 * (a14 == 847203058)) ^ v17)))(v18);
}

uint64_t sub_1000FE0C0()
{
  (*(void (**)(void))(v1 + 8 * (v0 ^ 0x1BE4)))();
  return (*(uint64_t (**)(void))(v1 + 8 * ((15 * (STACK[0x438] != 0)) | (v0 + 2107))))();
}

uint64_t sub_1000FE0FC()
{
  v5[1] = v4;
  unsigned int v6 = v1
     + 366490169 * (((v5 | 0x152B7BD7) - v5 + (v5 & 0xEAD48428)) ^ 0x3852D93)
     + 3628;
  (*(void (**)(void *))(v0 + 8 * (v1 + 3796)))(v5);
  return (v2 - 847203058);
}

uint64_t sub_1000FE108@<X0>(int a1@<W0>, int a2@<W3>, int a3@<W8>)
{
  *(unsigned char *)(v7 + (a1 - v3 - 3297 + v5 + a2)) = *(unsigned char *)(v4 + (a1 - v3 - 3297 + v5 + a2));
  return (*(uint64_t (**)(void))(v8 + 8 * ((1001 * (a2 - 1 != a3)) ^ (v6 + a1 + 1445))))();
}

uint64_t sub_1000FE14C@<X0>(char a1@<W0>, int a2@<W8>)
{
  BOOL v6 = v3 + a1 != 0xFF && a2 == (((v2 ^ 0x242E6A83) - 607020693) ^ 0x1C386643);
  return (*(uint64_t (**)(uint64_t))(v4 + 8 * ((4941 * v6) ^ v2)))(4294925278);
}

uint64_t sub_1000FE1AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,int a30,int a31)
{
  uint64_t v34 = (*(uint64_t (**)(void))(v33 + 8 * (v31 ^ 0x1DAA)))(LODWORD(STACK[0x4E4]) ^ ((v31 - 1486) | 2) ^ 0xE19B35E3);
  unint64_t v35 = STACK[0x258];
  STACK[0xA18] = v34 + 0x6BBE7547D3B34F0FLL;
  if (v34) {
    a31 = v32;
  }
  LODWORD(STACK[0xA24]) = a31;
  return (*(uint64_t (**)(void))(v35 + 8 * (((v34 == 0) * (v31 ^ 0xF9B)) ^ v31)))();
}

uint64_t sub_1000FE230(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(void))(v8
                              + 8
                              * ((204 * ((((a7 ^ 0xAF5) + 22) ^ (a2 - 2524) ^ (16 * (a7 ^ 0xAF5u))) + v7 < v7 + a2)) ^ a7)))();
}

uint64_t sub_1000FE278(uint64_t a1, uint64_t a2, unsigned int a3, uint64_t a4, int a5, int a6, int a7, int a8)
{
  LODWORD(STACK[0x6F0]) = a8;
  LODWORD(STACK[0x6F4]) = a8 + 24;
  int v17 = 7 * (v10 ^ 0x7B81D5A9);
  unsigned int v18 = a8 + 4280 + v17 - ((((a8 + 4280 + v17) * (unint64_t)a3) >> 32) >> 9) * a5;
  int v19 = (v10 ^ 0x7B81D5A9) + (v18 & 0x33A) + (v18 & 0x33A ^ 0x33A);
  int v20 = ((*(unsigned __int8 *)(v13 + v18) ^ 0x86) << 24) | ((*(unsigned __int8 *)(v13
                                                                                + 7 * v19
                                                                                + 7
                                                                                - ((((7 * v19 + 7)
                                                                                                 * (unint64_t)a3) >> 32) >> 9)
                                                                                * a5) ^ 0x86) << 16) | ((*(unsigned __int8 *)(v13 + v17 + 5796 - ((((v17 + 5796) * (unint64_t)a3) >> 32) >> 9) * a5) ^ 0x86) << 8) | *(unsigned __int8 *)(v13 + v17 + 5803 - ((((v17 + 5803) * (unint64_t)a3) >> 32) >> 9) * a5) ^ 0x13;
  int v21 = v20 - ((2 * v20) & 0x2B2784) - 2146069566;
  *((_DWORD *)&STACK[0x850]
  + 199 * v8
  % (((v21 & 0x2D8FA949 ^ 0x58140) + (v21 & 0x2D8FA949 ^ 0x2D8A2809)) ^ ((v10 & 0x2D8FA85D ^ 0x40E2854)
                                                                       + (v10 & 0x2D8FA85D ^ 0x29818009u)))) = v21 ^ v14 ^ 0x36E07600;
  int v22 = *(unsigned __int8 *)(v13 + (v17 + 6244) % 0x3C0u);
  int v23 = (~(2 * v10) & 2) + (v10 ^ 0x7B81D5A8);
  int v24 = 7 * v23;
  int v25 = *(unsigned __int8 *)(v13 + (v17 + 6258) % 0x3C0u);
  int v26 = *(unsigned __int8 *)(v13 + (7 * v23 + 6258) % 0x3C0u);
  int v27 = *(unsigned __int8 *)(v13 + (v17 + 6251) % 0x3C0u) ^ 0x13;
  __int16 v28 = 199 * a6;
  LOWORD(v17) = a6;
  LODWORD(STACK[0x6EC]) = a6;
  int v29 = a7 ^ 0x1F3DB2D;
  int v30 = v12;
  uint64_t v31 = (unsigned __int16)(199 * a6 + 29798) % 0x114u;
  int v32 = v16 ^ 0xB1415BB ^ v21;
  unsigned __int8 v33 = v25 ^ 0x13;
  LODWORD(STACK[0x6C8]) = v32 - 108724958 - ((2 * v32) & 0xF309FA44);
  unsigned int v34 = v25 ^ 0xCCCCCCCC;
  int v35 = v9 - 1513229332 + (v21 ^ v14 ^ 0x2FD952B6);
  unsigned int v36 = v15 ^ 0xF8472380;
  unsigned int v37 = a7 ^ 0xF9B4F8AD;
  __int16 v38 = v28;
  unsigned __int16 v39 = v28 - 21211;
  LODWORD(STACK[0x700]) = v11;
  int v40 = v25 ^ 0x33333333;
  unsigned int v41 = v9 + LODWORD(STACK[0x710]) + (v16 ^ 0x8B018679) - 1557909354;
  LODWORD(STACK[0x708]) = v30;
  unsigned int v42 = v11 + v30 + (a7 ^ 0x64B0752) - 1263985444 - ((2 * (v11 + v30 + (a7 ^ 0x64B0752) + 1534633413)) & 0xB260EE2E);
  int v43 = v9 - ((2 * v9 + 353107344) & 0x2CADF5D0) - 1596130896;
  LODWORD(STACK[0x6D8]) = v43;
  int v44 = (v34 | v40) & 0x95;
  unsigned int v45 = ((2 * (v30 + 2088763005)) & 0x3DFF37FA) + ((v30 + 2088763005) ^ 0x9EFF9BFD);
  int v46 = v44 ^ v32;
  unsigned int v47 = (v15 ^ 0x7B8DC7F ^ (v45 + 1627415555))
      - ((2 * (v15 ^ 0x7B8DC7F ^ (v45 + 1627415555))) & 0xF10CAA86)
      + 2022069571;
  int v48 = v43 ^ v14;
  __int16 v49 = v38;
  int v50 = ((v22 ^ 0x13) << 24) | (v27 << 16) | (v33 << 8);
  uint64_t v51 = (unsigned __int16)(v38 - 7281) % 0x114u;
  int v52 = v50 | v26 ^ 0x13;
  int v53 = v52 ^ v15;
  unsigned int v54 = v36 + v52;
  int v55 = v29 ^ v53;
  int v56 = *(unsigned __int8 *)(STACK[0x718] + (7 * v23 + 5803) % 0x3C0u) ^ 0x86;
  v53 ^= 0xFE3C215D;
  int v57 = *(unsigned __int8 *)(STACK[0x718] + (7 * v23 + 5810) % 0x3C0u) ^ 0x86;
  int v58 = *(unsigned __int8 *)(STACK[0x718] + (7 * v23 + 5817) % 0x3C0u);
  *((_DWORD *)&STACK[0x850] + v31) = v53;
  unsigned int v59 = v37 + v55;
  int v60 = (v56 << 24) | (v57 << 16) | ((v58 ^ 0x86) << 8) | *(unsigned __int8 *)(STACK[0x718] + (7 * v23 + 5824) % 0x3C0u) ^ 0x13;
  unsigned int v61 = v41;
  LODWORD(STACK[0x6D0]) = v41;
  int v62 = v60 ^ v41;
  *((_DWORD *)&STACK[0x850] + v39 % 0x114u) = v35 + 986542149 - ((2 * v35 - 2104433082) & 0xF309FA44);
  uint64_t v63 = (unsigned __int16)(((((v48 ^ 0xCE) + 119) & 0xC7) + (((v48 ^ 0x31) - 119) & 0xC7))
                         * (v17 - 12761))
      % 0x114u;
  int v64 = *(unsigned __int8 *)(STACK[0x718]
                           + (((2147482752 - v23) ^ (v23 + 895)) & 0x7165310F ^ 0x71653108u) * (v23 + 895) % 0x3C0) ^ 0x13;
  int v65 = (LODWORD(STACK[0x6C8]) ^ v53 ^ 0x95) - v46;
  unsigned int v66 = (v64 << 24) + 1449183905 - ((v64 << 25) & 0xAC000000);
  int v67 = v23;
  LODWORD(STACK[0x6E0]) = v23;
  int v68 = *(unsigned __int8 *)(STACK[0x718] + (7 * v23 + 6279) % 0x3C0u) ^ 0x13;
  int v69 = *(unsigned __int8 *)(STACK[0x718] + (7 * v23 + 6286) % 0x3C0u);
  int v70 = v47 & 0x95 ^ 1 | v47 & 0x95 ^ 0x94;
  unsigned int v71 = ((v59 + 1) ^ (v54 + 1) ^ v65)
      - LODWORD(STACK[0x708])
      - ((2 * (((v59 + 1) ^ (v54 + 1) ^ v65) - LODWORD(STACK[0x708])) - 27075224) & 0xF309FA44);
  unsigned int v72 = (((v62 & 0x5EAFEAA3 ^ 0x1E272283) + (v62 & 0x5EAFEAA3 ^ 0x4088C820)) ^ 0xE28E482E)
      * (v23 + 896)
      * (((v66 & 0x3C000000 ^ 0x14000000) + (v66 & 0x3C000000 ^ 0x2867D9EB)) & 0x3C4791E3);
  LODWORD(STACK[0x6C4]) = (v70 - ((2 * v70) & 0x66666666) + 1746486097) ^ v62;
  unsigned int v73 = v47 ^ 0xA3D34AC3 ^ v62;
  unsigned int v74 = v47 ^ 0x83E64F7B;
  int v75 = v42 ^ 0x59307782 ^ v62;
  *((_DWORD *)&STACK[0x850] + v51) = v71 + 2025221078;
  LODWORD(v51) = v61 ^ 0x2035052D;
  *((_DWORD *)&STACK[0x850] + v63) = v62 ^ 0x390C210E;
  LOWORD(v53) = (unsigned __int16)(v49 - 21012) % 0x114u;
  int v76 = LODWORD(STACK[0x700]) + 137593361;
  unsigned int v77 = (v42 ^ 0x7905723A) + v76 - ((2 * ((v42 ^ 0x7905723A) + v76)) & 0xA8C55690) + 1415752520;
  unsigned int v78 = v45 + 1627415555 + (v77 ^ 0xAB9D54B7);
  LODWORD(v63) = *(unsigned __int8 *)(STACK[0x718] + v72 % 0x3C0);
  LODWORD(STACK[0x708]) = -1627415555 - v45 + (((v53 & 0x54 ^ 0x17F96255) + (v53 & 0x54)) & 0x16F962DD);
  LOWORD(v45) = v49;
  STACK[0x6C8] = (unsigned __int16)(v49 - 7082) % 0x114u;
  unsigned int v79 = ((v63 ^ 0x13) << 16) | (v68 << 8);
  int v80 = (v48 ^ 0x42FA2131) - v51;
  int v81 = v79 | v69 ^ 0x13;
  unsigned int v82 = 7 * (v67 + (((((v24 + 5838) % 0x3C0u) & 0x300 ^ 0x8B06FF00) + (((v24 + 5838) % 0x3C0u) & 0x300)) ^ 0x8B06FC39))
      + 70;
  int v83 = STACK[0x710];
  unsigned int v84 = (((unsigned __int16)LODWORD(STACK[0x710]) + 151) & 0x3C0)
      + ((872 - (unsigned __int16)LODWORD(STACK[0x710])) & 0x3C0);
  int v85 = ((*(unsigned __int8 *)(STACK[0x718] + (v24 + 5831) % 0x3C0u) ^ 0x86) << 24) | ((*(unsigned __int8 *)(STACK[0x718] + (v24 + 5838) % 0x3C0u) ^ 0x86) << 16) | ((*(unsigned __int8 *)(STACK[0x718] + v82 % 0x3C0) ^ 0x86) << 8) | *(unsigned __int8 *)(STACK[0x718] + (v24 + 5852) % 0x3C0u) ^ 0x13;
  unsigned int v86 = (v81 + (v66 ^ 0x5660CAA1) + 1496348439 - ((2 * (v81 + (v66 ^ 0x5660CAA1))) & 0xB260EE2E)) ^ v42;
  STACK[0x700] = (unsigned __int16)(v49 + 16664) % 0x114u;
  *((_DWORD *)&STACK[0x850] + (unsigned __int16)(v49 + 29997) % 0x114u) = v86 ^ 0xD9B1F80F;
  int v87 = LODWORD(STACK[0x6D8]) ^ 0x1656FAE8;
  LODWORD(v63) = ((*(unsigned __int8 *)(STACK[0x718] + (v24 + 6293) % v84) ^ 0x13) << 24) | ((*(unsigned __int8 *)(STACK[0x718] + (v24 + 6300) % 0x3C0u) ^ 0x13) << 16) | ((*(unsigned __int8 *)(STACK[0x718] + (v24 + 6307) % 0x3C0u) ^ 0x13) << 8);
  int v88 = v51 + v83 + 1104743575;
  int v89 = v87 - v88;
  *((_DWORD *)&STACK[0x850] + (unsigned __int16)v53) = (v86 ^ 0x2035052D)
                                                     + v87
                                                     + 986542149
                                                     - ((2 * ((v86 ^ 0x2035052D) + v87) - 2104433082) & 0xF309FA44);
  ++v78;
  LODWORD(v51) = v85 ^ (v87 - v88);
  int v90 = (v80 - 2020206458 - ((2 * v80) & 0xF2C310C)) ^ v88 ^ 0x83FEB30A ^ v51;
  int v91 = (v63 | *(unsigned __int8 *)(STACK[0x718] + (v24 + 6314) % 0x3C0u) ^ 0x13) ^ v78;
  LODWORD(v63) = (v75 - (v42 ^ 0x7905723A)) ^ (v73 - v74);
  LODWORD(v31) = ((2 * v89) & 0xFDFD7FFE ^ 0xB4D44F44) + (v89 ^ 0x2495D85D);
  int v92 = ((v83 + 1104743575) ^ 0xD321E511)
      - 16859137
      - v31
      + 1017348474
      - ((2 * (((v83 + 1104743575) ^ 0xD321E511) - 16859137 - v31)) & 0x794702F4);
  unsigned int v93 = ((2 * v78) & 0xAF63C73C ^ 0xA442C704) + (v78 ^ 0xDDA843C);
  unsigned int v94 = v76 + v74 + (v77 ^ 0xAB9D54B7) + 1 - ((2 * (v76 + v74 + (v77 ^ 0xAB9D54B7) + 1)) & 0x29AC0960) - 1797913424;
  unsigned int v95 = LODWORD(STACK[0x6D0]) ^ 0xF909123D ^ ((v48 ^ 0x62CF241C ^ v86)
                                            - ((2 * (v48 ^ 0x62CF241C ^ v86)) & 0xB2782E20)
                                            - 650373360);
  unsigned int v96 = (v76 ^ 0xD321E511) - v93 + 2023117429 - ((2 * ((v76 ^ 0xD321E511) - v93 - 676207714)) & 0x41C8DDAE);
  int v97 = v31 + 16842753 + (v51 ^ 0xDA6B6737);
  unsigned int v98 = v92 ^ ((v88 ^ 0x83FEB30A) + 1017348474 - 2 * ((v88 ^ 0x83FEB30A) & 0x3CA3817E ^ v88 & 4));
  unsigned int v99 = v77 ^ 0xD79C1842;
  int v100 = v63 ^ ((LODWORD(STACK[0x6C4]) ^ 0x482C467C ^ v95) - v95);
  LOWORD(v46) = v45;
  *((_DWORD *)&STACK[0x850] + (unsigned __int16)STACK[0x6C8]) = LODWORD(STACK[0x708])
                                                              + v100
                                                              - 108724958
                                                              - ((2 * (LODWORD(STACK[0x708]) + v100)) & 0xF309FA44);
  unsigned int v101 = (((v77 ^ 0xDF77FE0 ^ v91) - (v77 ^ 0xD79C1842)) ^ ((v94 ^ 0x6B29FB4F) + (v94 ^ 0x4EBD6312 ^ v91) + 1) ^ ((v90 ^ 0xA202804E) + (((v90 ^ 0x87961886) - 420935095 - ((2 * (v90 ^ 0x87961886)) & 0xCDD215B8) + 147) ^ v91 ^ 0xE6E90A49) + 1))
       - v93;
  int v102 = v96 ^ v94;
  unsigned int v103 = (v92 ^ 0x3CA3817A) - ((2 * (v92 ^ 0x3CA3817A) - 635626156) & 0xF99999DE) - 371500135;
  int v104 = v96 ^ (v99 - 1595642153 - ((2 * v99) & 0x41C8DDAE));
  int v105 = v92 ^ (v80 + 1017348474 - ((2 * v80) & 0x794702F4)) ^ v103;
  int v106 = ((*(unsigned __int8 *)(STACK[0x718] + (v24 + 5859) % 0x3C0u) ^ 0x86) << 24) | ((*(unsigned __int8 *)(STACK[0x718] + (v24 + 5866) % 0x3C0u) ^ 0x86) << 16) | ((*(unsigned __int8 *)(STACK[0x718] + (v24 + 5873) % 0x3C0u) ^ 0x86) << 8) | *(unsigned __int8 *)(STACK[0x718] + (v24 + 5880) % 0x3C0u) ^ 0x13;
  *((_DWORD *)&STACK[0x850] + (unsigned __int16)STACK[0x700]) = v51 ^ 0xC3524381;
  int v107 = v103 ^ (v31 - ((2 * v31 + 1854420550) & 0xF99999DE) + 873523218);
  uint64_t v108 = (unsigned __int16)(v45 - 20813) % 0x114u;
  *((_DWORD *)&STACK[0x850] + (unsigned __int16)(v45 + 30196) % 0x114u) = v91 ^ 0x23EF9A80;
  LODWORD(v31) = (v96 ^ 0xA0E46ED7) - ((2 * (v96 ^ 0xA0E46ED7) - 635626156) & 0xB5ED8D66) - 939174563;
  unsigned int v109 = v104 - ((2 * v104 + 1815728682) & 0xF11FC7A4) - 1364407065;
  unint64_t v110 = STACK[0x718];
  int v111 = v31 ^ (v93 - ((2 * v93 - 1121849592) & 0xB5ED8D66) + 965197367);
  int v112 = v102 ^ v31;
  int v113 = v106 ^ v103;
  LODWORD(v51) = *(unsigned __int8 *)(STACK[0x718] + (v24 + 6321) % 0x3C0u);
  int v114 = *(unsigned __int8 *)(STACK[0x718] + (v24 + 6328) % 0x3C0u) ^ 0x13;
  int v115 = *(unsigned __int8 *)(STACK[0x718] + (v24 + 6335) % 0x3C0u) ^ 0x13;
  *((_DWORD *)&STACK[0x850] + v108) = v101 - ((2 * v101 + 838118786) & 0xF309FA44) + 310334435;
  int v116 = *(unsigned __int8 *)(v110 + (v24 + 6342) % 0x3C0u);
  LODWORD(v108) = (v116 ^ 0x13) + 2039083773 - ((2 * (v116 ^ 0x13)) & 0xFFFFFFFB);
  unsigned int v117 = v97 + 276733815 - ((2 * (v97 + 0x4000) + 770884778) & 0xF309FA44);
  int v118 = (v108 ^ 0x7989F2FD | ((v51 ^ 0x13) << 24) | (v114 << 16) | (v115 << 8)) ^ v31;
  int v119 = STACK[0x6EC];
  int v120 = LODWORD(STACK[0x6EC]) + 52845;
  *((_DWORD *)&STACK[0x850] + (unsigned __int16)(v46 - 6883) % 0x114u) = v117;
  LODWORD(v31) = (v98 - 1239619307) ^ v105 ^ 0x263A0A5C ^ v118;
  *((_DWORD *)&STACK[0x850] + (unsigned __int16)(v46 + 16863) % 0x114u) = v113 ^ 0x65F5E8CC;
  int v121 = (v107 - 614722942) ^ 0x5A9F3FB1;
  unsigned int v122 = v121 + ((v98 - ((2 * (v98 - 1239619307)) & 0xFB31DAAA) + 867554922) ^ 0x15421BA ^ v105);
  int v123 = (((v109 ^ 0x7701C2D) + (v109 ^ v113 ^ 0x84432FA8) + 1) ^ ((v112 ^ 0x913B532B) + (v112 ^ v113 ^ 0x120860AE) + 1) ^ ((v113 ^ 0xCA3212EC ^ (v31 - ((2 * v31) & 0x6DFDBD2C) - 1224810858)) - v31))
       - v111;
  *((_DWORD *)&STACK[0x850] + (unsigned __int16)((v116 & 0xFFC7 ^ 0xC4 | v116 & 0xFFC7 ^ 3) * v120) % 0x114u) = v118 ^ 0xA3723B91;
  *((_DWORD *)&STACK[0x850] + (unsigned __int16)(v46 - 20614) % 0x114u) = v123
                                                                        + 986542149
                                                                        - ((2 * v123 - 2104433082) & 0xF309FA44);
  unsigned int v124 = v121
       - ((v105 ^ 0xDDF36CCD)
        + 1492057882)
       - 105848557
       - ((2 * (v121 - ((v105 ^ 0xDDF36CCD) + 1492057882))) & 0xF361C226);
  int v125 = LODWORD(STACK[0x6F0]) + 632;
  int v126 = ((1239619306 - v104) & 0x86F6821B)
       + (v103 ^ 0x7CCCCCEF)
       + ((v122 + 825782987 - ((2 * v122) & 0x6270E596)) ^ 0xCEC78D34)
       + (v109 & 0x86F6821B ^ 0x80868212)
       - (((v108 ^ 0x7989F2B0) + (v108 & 0x7989F3B2 ^ 0x86760D4F) + 1) | v116 & 0x4D ^ 1)
       + 584614049;
  unint64_t v127 = STACK[0x6F8];
  *((_DWORD *)&STACK[0x850] + (unsigned __int16)(v46 - 6684) % 0x114u) = (v118 ^ 0x5AF6C6B3)
                                                                       + v107
                                                                       + 276717431
                                                                       - ((2 * ((v118 ^ 0x5AF6C6B3) + v107) + 770884778) & 0xF309FA44);
  LODWORD(STACK[0x710]) = (((v124 ^ 0x64F1EEC) + v126 + 1) ^ 0xA7B9C37F)
                        + 1525678039
                        + ((2 * ((v124 ^ 0x64F1EEC) + v126 + 1)) & 0x4F7386FE);
  return (*(uint64_t (**)(void))(v127
                              + 8
                              * ((((v119 + 29937194) < 0x10) | (8
                                                                            * ((v119 + 29937194) < 0x10))) ^ v125)))();
}

uint64_t sub_1000FF9A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v9 + 8 * (((v5 + v8 + v6 + ((v8 - 1126218431) & 0x4320B56F) + 278) * (v7 == a5)) ^ v8)))();
}

uint64_t sub_1000FF9EC()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((((v2 ^ 0xDEC54B0B) >= (((v0 - 261) | 0x105) ^ 0xB84u))
                                * (38 * ((v0 - 891) ^ 0x623) - 1530)) ^ (v0 - 891))))();
}

uint64_t sub_1000FFA4C(uint64_t a1, int a2, int a3, uint64_t a4, uint64_t a5, int a6)
{
  *(void *)(a1 - 7 + (v9 + v8 + a2 - a3)) = *(void *)(v6 - 7 + (v9 + v8 + a2 - a3));
  return (*(uint64_t (**)(void))(v10 + 8 * (((a3 - (v7 & 0xFFFFFFF8) == -8) * ((a6 - 2166) ^ 0xED)) ^ a6)))();
}

uint64_t sub_1000FFAA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42)
{
  int v42 = BYTE4(a34) ^ 0x22;
  if (v42 == 1)
  {
    BYTE4(a29) = ((8 * a31) ^ 0xD8) - ((2 * ((8 * a31) ^ 0xD8)) & 0xC0) + 96;
    BYTE5(a29) = ((a31 >> 5) ^ 0xDC)
               - 2 * (((a31 >> 5) ^ 0xDC) & 0xE1 ^ ((a31 & 0x20) != 0))
               + 96;
    BYTE6(a29) = ((a31 >> 13) ^ 0xEC)
               - 2 * (((a31 >> 13) ^ 0xEC) & 0x62 ^ (a31 >> 13) & 2)
               + 96;
    HIBYTE(a29) = ((a31 >> 21) ^ 0x5A)
                - 2 * (((a31 >> 21) ^ 0x5A) & 0xE1 ^ ((a31 & 0x200000) != 0))
                + 96;
    HIDWORD(v45) = HIDWORD(a30) ^ 3;
    LODWORD(v45) = a31;
    LOBYTE(a30) = (v45 >> 29) - ((2 * (v45 >> 29)) & 0xC0) + 96;
    BYTE1(a30) = ((HIDWORD(a30) >> 5) ^ 0xF4) + (~(2 * ((HIDWORD(a30) >> 5) ^ 0xF4)) | 0x3F) + 97;
    BYTE2(a30) = ((HIDWORD(a30) >> 13) ^ 0x6D) - ((2 * ((HIDWORD(a30) >> 13) ^ 0x6D)) & 0xC0) + 96;
    unsigned int v44 = (HIDWORD(a30) >> 21) ^ 0xFFFFFFD3;
    goto LABEL_5;
  }
  if (v42 == 2)
  {
    BYTE4(a29) = ((HIDWORD(a30) >> 21) ^ 0xD3) - ((2 * ((HIDWORD(a30) >> 21) ^ 0xD3)) & 0xC0) + 96;
    BYTE5(a29) = ((HIDWORD(a30) >> 13) ^ 0x6D) + (~(2 * ((HIDWORD(a30) >> 13) ^ 0x6D)) | 0x3F) + 97;
    BYTE6(a29) = ((HIDWORD(a30) >> 5) ^ 0xF4) - ((2 * ((HIDWORD(a30) >> 5) ^ 0xF4)) & 0xC0) + 96;
    HIDWORD(v43) = HIDWORD(a30) ^ 3;
    LODWORD(v43) = a31;
    HIBYTE(a29) = (v43 >> 29) - ((2 * (v43 >> 29)) & 0xC0) + 96;
    LOBYTE(a30) = ((a31 >> 21) ^ 0x5A) - ((2 * ((a31 >> 21) ^ 0x5A)) & 0xC0) + 96;
    BYTE1(a30) = ((a31 >> 13) ^ 0xEC)
               - 2 * (((a31 >> 13) ^ 0xEC) & 0x62 ^ (a31 >> 13) & 2)
               + 96;
    BYTE2(a30) = ((a31 >> 5) ^ 0xDC) - ((2 * ((a31 >> 5) ^ 0xDC)) & 0xC0) + 96;
    LOBYTE(v44) = (8 * a31) ^ 0xD8;
LABEL_5:
    BYTE3(a30) = v44 + 96 - ((2 * v44) & 0xC0);
  }
  return sub_100190690(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42);
}

uint64_t sub_1000FFCD0(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(void))(v8
                              + 8 * ((((((a6 + 1074312453) | 0x6901840) ^ (v6 + 3439)) + a6 + 624) * (v7 == a3)) ^ a6)))();
}

uint64_t sub_1000FFD14()
{
  return (*(uint64_t (**)(void))(v2 + 8 * (((*v0 == 0) * ((v1 - 1627) ^ 0x7BA)) | v1)))();
}

uint64_t sub_1000FFD84@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,int a43)
{
  unint64_t v44 = STACK[0x990] + (a1 ^ v43) - 0x6F981077AF1E8BB0;
  BOOL v45 = v44 < 0xC95E2DC2;
  BOOL v46 = v44 > STACK[0x988] + 3378392514u;
  if (STACK[0x988] > 0xFFFFFFFF36A1D23DLL != v45) {
    BOOL v46 = v45;
  }
  return (*(uint64_t (**)(void))(STACK[0x258] + 8 * ((150 * v46) ^ (a43 - 1395))))();
}

uint64_t sub_1000FFE1C@<X0>(int a1@<W3>, uint64_t a2@<X7>, int a3@<W8>)
{
  *(unsigned char *)(v4 + (431 * a1 + 1252329731) % 0x3BDu) = a1 - 2 * ((a3 - 119 + a1 + 11) & 0x3D ^ a1 & 1) - 26;
  return (*(uint64_t (**)(void))(a2 + 8 * ((1942 * (a1 + 1 == v3 + 16)) ^ a3)))();
}

void sub_1000FFEA0()
{
  uint64_t v0 = (uint64_t)*(&off_100520A90
                + ((75 * (dword_1005A6DD8 ^ 0x7E ^ qword_1005A6FB0)) ^ byte_100491800[byte_1004A0860[(75 * (dword_1005A6DD8 ^ 0x7E ^ qword_1005A6FB0))] ^ 0xB9])
                - 10);
  uint64_t v1 = *(void *)(v0 - 4);
  uint64_t v2 = (uint64_t)*(&off_100520A90
                + (byte_100491800[byte_1004A086C[(75
                                                                                                * (v1 ^ qword_1005A6FB0 ^ 0x7E))
                                                                              - 12] ^ 0x5D] ^ (75
                                                                                             * (v1 ^ qword_1005A6FB0 ^ 0x7E)))
                + 236);
  uint64_t v3 = v1 - (void)&v5 + *(void *)(v2 - 4);
  *(void *)(v0 - 4) = 544792907 * v3 + 0x5547F155C74775EALL;
  *(void *)(v2 - 4) = 544792907 * (v3 ^ 0xE12C07DFCC70D97ELL);
  v6[1] = 31090337 * (((v6 | 0x69A0C507) - (v6 & 0x69A0C507)) ^ 0xAE21A54E) + 1655392376;
  LOBYTE(v2) = 75 * (*(_DWORD *)(v0 - 4) ^ 0x7E ^ *(_DWORD *)(v2 - 4));
  uint64_t v4 = (char *)*(&off_100520A90
               + ((75 * ((qword_1005A6FB0 + dword_1005A6DD8) ^ 0x7E)) ^ byte_100491900[byte_1004A0960[(75 * ((qword_1005A6FB0 + dword_1005A6DD8) ^ 0x7E))] ^ 0xB4])
               + 12)
     - 8;
  (*(void (**)(_DWORD *))&v4[8
                                      * (byte_100491904[(byte_1004A0964[v2 - 4] ^ 0xD4)
                                                                       - 4] ^ v2)
                                      + 36720])(v6);
  __asm { BRAA            X8, X17 }
}

uint64_t sub_1001000D8@<X0>(int a1@<W8>)
{
  unsigned int v6 = (v3 + 489886716) & 0xE2CCEBF5;
  *(_DWORD *)(*(void *)(v5 - 0x49230D716B37ADFCLL) + 4 * (int)((v6 ^ 0x986DC9A8) + a1 + v1)) = *(_DWORD *)(*(void *)(v5 - 0x49230D716B37ADFCLL) + 4 * (v2 + v1 + 2287));
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4
                                                     + 8
                                                     * (int)((14
                                                            * (v2 + v1 + 2286 < ((v6 + 57527005) & 0xFC922DFD ^ 0x7FFFFE43))) | v6)))(4237438461, 2147483203);
}

uint64_t sub_100100174()
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((((v2 - 1434604632) & 0x5582456A ^ (v2 - 3846)) * (v0 != v1)) ^ v2)))();
}

uint64_t sub_1001001B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,int a24,char a25)
{
  *(void *)(&a25 + (v27 + 16) + (unint64_t)v25 - 987) = 0x6060606060606060;
  return (*(uint64_t (**)(void))(v28 + 8 * ((5774 * ((v26 & 0x38) == 8)) ^ (v27 + 707))))();
}

void sub_100100204()
{
  *(_DWORD *)(v0 + 8) = 847161030;
}

uint64_t sub_100100210@<X0>(uint64_t a1@<X0>, int a2@<W8>, uint64_t a3, void *a4, _DWORD *a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, int a10)
{
  *a4 = a1;
  *a5 = a2;
  return (*(uint64_t (**)(void))(v12 + 8 * (((a10 == ((v10 - 1104) ^ (v11 + 1090))) * ((v10 + 2281) ^ 0x1136)) | v10)))();
}

uint64_t sub_100100258(int a1, int a2)
{
  BOOL v4 = a2 + a1 + (v2 ^ 0x1301u) - 1962917880 - 611 < (((v2 - 4055) | 0x820) ^ 0x9A6u);
  return (*(uint64_t (**)(void))(v3 + 8 * ((v4 | (8 * v4)) ^ v2)))();
}

uint64_t sub_1001002E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, char a11, uint64_t a12, uint64_t a13, int a14, unsigned int a15, uint64_t a16, char *a17)
{
  a16 = a12;
  a17 = &a11;
  a15 = (v17 + 1138) ^ (((&a14 & 0x6BE570BB | ~(&a14 | 0x6BE570BB)) ^ 0x2513098A) * v18);
  (*(void (**)(int *))(v20 + 8 * (v17 + 3496)))(&a14);
  LODWORD(a17) = v17
               - 476588053
               * ((((&a14 | 0x5C32F2DE) ^ 0xFFFFFFFE) - (~&a14 | 0xA3CD0D21)) ^ 0x1E300962)
               + 1481;
  a16 = a12;
  uint64_t v21 = (*(uint64_t (**)(int *))(v20 + 8 * (v17 + 3529)))(&a14);
  return (*(uint64_t (**)(uint64_t))(v20 + 8 * ((30 * (a14 == v19 + 9 * (v17 ^ 0x40B) - 1197)) ^ v17)))(v21);
}

uint64_t sub_1001003D4()
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((1830 * (v0 == ((v1 - 562436397) & 0x218617F6 ^ (v2 - 590)))) ^ v1)))();
}

uint64_t sub_100100428()
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((3900 * (v0 - 1532039989 < (((v2 + 288) | 0x1049) ^ 0x11D1u))) ^ (v2 + 734))))();
}

uint64_t sub_100100480(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, char *a16, unint64_t *a17, char *a18, char *a19, uint64_t a20,unint64_t *a21)
{
  a17 = &STACK[0x5C6E4E9DBA245391];
  LODWORD(a18) = (a9 + 3462) ^ (1401278017
                              * (((&a17 | 0x48F35E08)
                                - &a17
                                + (&a17 & 0xB70CA1F0)) ^ 0x4CD028EF));
  a21 = &STACK[0x72B1F83D1B5D1C85];
  a19 = a16;
  (*(void (**)(unint64_t **))(v22 + 8 * ((a9 + 871) ^ 0x1690u)))(&a17);
  a18 = a16;
  a19 = &a15;
  HIDWORD(a17) = (a9 + 1987) ^ ((&a17 ^ 0xB10986CE) * v21);
  (*(void (**)(unint64_t **))(v22 + 8 * (a9 + 4345)))(&a17);
  LODWORD(a19) = a9 + 871 - 476588053 * (&a17 ^ 0xBDFD0443) + 1459;
  a18 = a16;
  uint64_t v23 = (*(uint64_t (**)(unint64_t **))(v22 + 8 * ((a9 + 871) ^ 0x16F3u)))(&a17);
  return (*(uint64_t (**)(uint64_t))(v22
                                            + 8 * (((a17 == 847203058) * ((a9 + 82) ^ 0x1ED)) ^ (a9 + 871))))(v23);
}

uint64_t sub_1001005D8@<X0>(int a1@<W8>)
{
  unsigned int v3 = a1 + 133;
  int v4 = (a1 - 1107446157) & 0x301573BF;
  *(_DWORD *)(v2 - 128) = a1
                        + 133
                        + 673918253
                        * ((((v2 - 136) ^ 0x82D59B41 | 0x6D2A04A6) + ((v2 - 136) ^ 0x600804A0 | 0x92D5FB59)) ^ 0x78958448)
                        - 851;
  *(void *)(v2 - 136) = &STACK[0x3E8923C4CCFEA0B2];
  uint64_t v5 = (*(uint64_t (**)(uint64_t))(v1 + 8 * ((a1 + 133) ^ 0x1B81u)))(v2 - 136);
  return (*(uint64_t (**)(uint64_t))(v1 + 8 * ((1595 * (*(_DWORD *)(v2 - 124) == (v4 ^ 0x26A784F))) ^ v3)))(v5);
}

uint64_t sub_1001006B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, unint64_t *a19, int a20,unsigned int a21)
{
  a21 = v22 - (((&a19 | 0x9684C745) - (&a19 & 0x9684C745)) ^ 0x5105A70C) * v21 + 344;
  a19 = &STACK[0x75464D914B7248C7];
  uint64_t v25 = (*(uint64_t (**)(unint64_t **))(v24 + 8 * (v22 + 1367)))(&a19);
  return (*(uint64_t (**)(uint64_t))(v24
                                            + 8
                                            * (int)(((a20 != 847203058)
                                                   * (((v22 + 1985404790) & 0xCFBFBFFF) + v23 + ((v22 - 824) | 0x20))) ^ v22)))(v25);
}

uint64_t sub_100100770(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,int a50)
{
  return (*(uint64_t (**)(void))(v51 + 8 * ((67 * ((v50 ^ (a50 + 53)) & 1)) ^ (a50 + 1473))))();
}

uint64_t sub_1001007B0()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((((((v1 - 1853) | 0x243) + 1749) ^ 0x96C) * ((v0 ^ 0x24u) < 8)) ^ v1)))();
}

uint64_t sub_1001007F0(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(void))(v7
                              + 8
                              * ((((v6 & 0x18) == ((a4 - 646) ^ (a6 + 179) ^ (a6 + 1040)))
                                * (13 * ((a4 - 646) ^ 0x5B6) - 217)) ^ (a4 - 646))))();
}

uint64_t sub_10010083C(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((1484
                                * ((((v5 ^ a4) - 1997285367) & (2 * (*(unsigned __int8 *)(a2 + 7) - 100)))
                                 + ((*(unsigned __int8 *)(a2 + 7) - 100) ^ v6) == v6)) ^ v5)))();
}

uint64_t sub_100100884(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8 * ((4225 * (a4 + 1 == v10 + 48)) ^ a7)))(v7, v8);
}

uint64_t sub_100100958@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,unint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,int a43,unint64_t a44)
{
  unint64_t v45 = (a1 ^ v44) + STACK[0x280];
  STACK[0x918] = v45 + 10;
  v45 -= 0x7936EE11427F3323;
  BOOL v46 = v45 < 0x78EB4418;
  BOOL v47 = v45 > a32;
  if (a44 > 0xFFFFFFFF8714BBE7 != v46) {
    BOOL v48 = v46;
  }
  else {
    BOOL v48 = v47;
  }
  return (*(uint64_t (**)(void))(STACK[0x258] + 8 * ((a43 - 418) ^ (27 * v48))))();
}

void sub_1001009F4(uint64_t a1)
{
  int v1 = 1401278017 * (((a1 | 0x7E048411) - a1 + (a1 & 0x81FB7BEE)) ^ 0x7A27F2F6);
  __asm { BRAA            X11, X17 }
}

uint64_t sub_100100AB4()
{
  (*(void (**)(unint64_t))(v2 + 8 * (v1 ^ 0x1AE0)))(STACK[0x3B0]);
  *int v0 = 0x46197683F7D18950;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t))STACK[0x3E8])(2498, 0x46197683F7D18950, 2547, 1024463738, 3270503873, 0xB9E6897C082E76B0);
}

uint64_t sub_100100B44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, char a11, uint64_t a12, uint64_t a13, int a14, unsigned int a15, uint64_t a16, char *a17)
{
  a16 = a9;
  a17 = &a11;
  a15 = (v20 + 528) ^ ((((&a14 | 0x9E3E4AA8) - (&a14 & 0x9E3E4AA8)) ^ 0x2F37CC66) * v17);
  (*(void (**)(int *))(v18 + 8 * ((v20 + 1945) ^ 0x1CBF)))(&a14);
  LODWORD(a17) = v20 + 1945 - 476588053 * (&a14 ^ 0xBDFD0443) - 1074;
  a16 = a9;
  uint64_t v21 = (*(uint64_t (**)(int *))(v18 + 8 * ((v20 + 1945) ^ 0x1CDE)))(&a14);
  return (*(uint64_t (**)(uint64_t))(v18
                                            + 8 * (((a14 == v19) * (((v20 + 280) | 0x70) ^ 0x940)) ^ (v20 + 1945))))(v21);
}

uint64_t sub_100100C18()
{
  return (*(uint64_t (**)(void))(v2
                              + 8 * (int)(((v1 == 0) * ((v0 + 832) ^ 0x181D ^ (v0 + 1568557898) & 0xA281AF7B)) ^ v0)))();
}

uint64_t sub_100100C5C@<X0>(uint64_t a1@<X8>)
{
  *(void *)(STACK[0x770] - 0x46197683F7D18948) = a1;
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((*(void *)(STACK[0x608] + 24) == 0) * (((6 * (v1 ^ 0x3F6)) ^ 0xED) - 2714)) ^ (6 * (v1 ^ 0x3F6)))))();
}

void sub_100100CB8(uint64_t a1)
{
  uint64_t v2 = (uint64_t)*(&off_100520A90
                + ((75 * ((qword_1005A6FB0 + dword_1005A6FF8) ^ 0x7E)) ^ byte_10049B320[byte_100495E20[(75 * ((qword_1005A6FB0 + dword_1005A6FF8) ^ 0x7E))] ^ 0x98])
                + 100);
  uint64_t v3 = *(void *)(v2 - 4);
  uint64_t v4 = (uint64_t)*(&off_100520A90
                + (byte_100491800[byte_1004A0860[(75
                                                                                                * ((qword_1005A6FB0 + v3) ^ 0x7E))] ^ 0xB9] ^ (75 * ((qword_1005A6FB0 + v3) ^ 0x7E)))
                + 161);
  uint64_t v5 = (*(void *)(v4 - 4) ^ v3) - (void)&v9;
  uint64_t v6 = 544792907 * v5 - 0x1ED3F820338F2682;
  unint64_t v7 = 544792907 * (v5 ^ 0xE12C07DFCC70D97ELL);
  *(void *)(v2 - 4) = v6;
  *(void *)(v4 - 4) = v7;
  LODWORD(v4) = ((75 * ((v7 - *(_DWORD *)(v2 - 4)) ^ 0x7E)) ^ byte_100491800[byte_1004A0860[(75 * ((v7 - *(_DWORD *)(v2 - 4)) ^ 0x7E))] ^ 0x79]);
  uint64_t v8 = (char *)*(&off_100520A90
               + ((75 * ((qword_1005A6FB0 + dword_1005A6FF8) ^ 0x7E)) ^ byte_10049B320[byte_100495E20[(75 * ((qword_1005A6FB0 + dword_1005A6FF8) ^ 0x7E))] ^ 0x98])
               - 38)
     - 8;
  (*(void (**)(void, uint64_t (*)()))&v8[8 * (v4 + 4748)])(*(&off_100520A90 + (v4 + 106)), sub_10018F59C);
  __asm { BRAA            X10, X17 }
}

uint64_t sub_100100E5C@<X0>(uint64_t a1@<X8>, uint64_t a2, char a3)
{
  int v8 = (v5 - 4245) | 0xE00;
  (*(void (**)(void, void, void))(v6 + 8 * (v5 + 157)))(**(unsigned int **)(a1 + 8 * (v5 - 4473)), *v4, *(_DWORD *)(v7 - 0x69166E42B329956BLL) + (v8 ^ (v3 + 1777)));
  unint64_t v9 = ((unint64_t)&a3 ^ 0x3FDEF5ADFF3DDBF0) - 0x475A0812080F0 + ((2 * (void)&a3) & 0x7FBDEB5BFE7BB7E0);
  *(unsigned char *)(v7 - 0x69166E42B3299554) = ((((v8 - 17) | 0x5C) + 92) ^ v9) * (v9 + 17);
  return (*(uint64_t (**)(uint64_t))(v6 + 8 * v8))(v7 - 0x69166E42B3299573);
}

uint64_t sub_100100F64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unsigned char *a13, uint64_t a14, uint64_t a15, int a16, int a17, int a18, char a19)
{
  *a13 = a19;
  return (*(uint64_t (**)(void))(v20 + 8 * ((22 * (a16 != ((v19 - 2049) | 0x5C4) - 557497017)) ^ v19)))();
}

uint64_t sub_100100FBC()
{
  return ((uint64_t (*)(void))STACK[0x4E8])();
}

uint64_t sub_100100FC8()
{
  int v1 = *(unsigned __int8 *)(v0 - 156) ^ 0x22;
  if (v1 == 1)
  {
    unsigned int v6 = *(_DWORD *)(v0 - 188);
    unsigned int v5 = *(_DWORD *)(v0 - 184);
    *(unsigned char *)(v0 - 196) = ((8 * v5) ^ 0xD8) - ((2 * ((8 * v5) ^ 0xD8)) & 0xC0) + 96;
    *(unsigned char *)(v0 - 195) = ((v5 >> 5) ^ 0xDC) - ((2 * ((v5 >> 5) ^ 0xDC)) & 0xC0) + 96;
    *(unsigned char *)(v0 - 194) = ((v5 >> 13) ^ 0xEC) - 2 * (((v5 >> 13) ^ 0xEC) & 0xE1 ^ ((v5 & 0x2000) != 0)) + 96;
    *(unsigned char *)(v0 - 193) = ((v5 >> 21) ^ 0x5A) - ((2 * ((v5 >> 21) ^ 0x5A)) & 0xC0) + 96;
    HIDWORD(v7) = v6 ^ 3;
    LODWORD(v7) = v5;
    *(unsigned char *)(v0 - 192) = (v7 >> 29) - ((2 * (v7 >> 29)) & 0xC0) + 96;
    *(unsigned char *)(v0 - 191) = ((v6 >> 5) ^ 0xF4) - ((2 * ((v6 >> 5) ^ 0xF4)) & 0xC0) + 96;
    *(unsigned char *)(v0 - 190) = ((v6 >> 13) ^ 0x6D) - ((2 * ((v6 >> 13) ^ 0x6D)) & 0xC0) + 96;
    unsigned int v4 = (v6 >> 21) ^ 0xFFFFFFD3;
    goto LABEL_5;
  }
  if (v1 == 2)
  {
    unsigned int v4 = *(_DWORD *)(v0 - 188);
    unsigned int v2 = *(_DWORD *)(v0 - 184);
    *(unsigned char *)(v0 - 196) = ((v4 >> 21) ^ 0xD3) + ~(2 * (((v4 >> 21) ^ 0xD3) & 0x68 ^ (v4 >> 21) & 8)) + 97;
    *(unsigned char *)(v0 - 195) = ((v4 >> 13) ^ 0x6D) - 2 * (((v4 >> 13) ^ 0x6D) & 0x62 ^ (v4 >> 13) & 2) + 96;
    *(unsigned char *)(v0 - 194) = ((v4 >> 5) ^ 0xF4) - 2 * (((v4 >> 5) ^ 0xF4) & 0x62 ^ (v4 >> 5) & 2) + 96;
    HIDWORD(v3) = v4 ^ 3;
    LODWORD(v3) = v2;
    *(unsigned char *)(v0 - 193) = (v3 >> 29) - ((2 * (v3 >> 29)) & 0xC0) + 96;
    *(unsigned char *)(v0 - 192) = ((v2 >> 21) ^ 0x5A) + (~(2 * ((v2 >> 21) ^ 0x5A)) | 0x3F) + 97;
    *(unsigned char *)(v0 - 191) = ((v2 >> 13) ^ 0xEC) - ((2 * ((v2 >> 13) ^ 0xEC)) & 0xC0) + 96;
    *(unsigned char *)(v0 - 190) = ((v2 >> 5) ^ 0xDC) - ((2 * ((v2 >> 5) ^ 0xDC)) & 0xC0) + 96;
    LOBYTE(v4) = (8 * v2) ^ 0xD8;
LABEL_5:
    *(unsigned char *)(v0 - 189) = v4 - ((2 * v4) & 0xC0) + 96;
  }
  v8.n128_u64[0] = 0x6060606060606060;
  v8.n128_u64[1] = 0x6060606060606060;
  v9.n128_u64[0] = 0xC0C0C0C0C0C0C0C0;
  v9.n128_u64[1] = 0xC0C0C0C0C0C0C0C0;
  return sub_10012B3E4(v8, (__n128)vdupq_n_s32(0x5EC54B1Fu), (__n128)vdupq_n_s32(0xDEC54B0B), v9, (__n128)vdupq_n_s32(0x5EC54B1Bu));
}

void sub_10010124C()
{
  uint64_t v0 = __chkstk_darwin();
  int v1 = 1697562443 * ((((2 * v0) | 0x8DDECFB0) - v0 - 1190094808) ^ 0x917F5F5C);
  int v2 = *(_DWORD *)(v0 + 40) ^ v1;
  uint64_t v3 = *(void *)v0;
  int v4 = *(_DWORD *)(v0 + 20) + v1;
  unsigned int v5 = (char *)*(&off_100520A90 + (v2 ^ 0x5CE)) - 8;
  (*(void (**)(unsigned char *, void, uint64_t))&v5[8 * v2 + 25432])(v9, 0, 296);
  if (v3)
  {
    int v6 = v4 - ((2 * v4 + 489106174) & 0x1F0E4CA2) - 31802416;
    BOOL v7 = ((2 * v6) & 0xFE36F76E ^ 0x1E064422) + (v6 ^ 0x709C5DE6) == 2132507607;
  }
  else
  {
    BOOL v7 = 1;
  }
  int v8 = v7;
  __asm { BRAA            X9, X17 }
}

uint64_t sub_1001013DC@<X0>(int a1@<W8>)
{
  int v3 = ((_BYTE)a1 + 13) & 0xF;
  LODWORD(STACK[0x534]) = 150214115 - v3;
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((((16 - v3)
                                 + (unint64_t)(a1 - 1217389244 + ((v1 + 1023167684) & 0xC303BAFF)) < 0xFFFFFFF6)
                                * (v1 + 4211)) ^ v1)))();
}

uint64_t sub_100101464@<X0>(char a1@<W4>, uint64_t a2@<X5>, int a3@<W8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17, char a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,int a30)
{
  int v34 = *((_DWORD *)&a18 + ((v32 + a3) >> (a1 + ((v31 + 91) & 0xDE) - 88)) + 18);
  *(unsigned char *)(a2 + (v32 + a3 + 2)) = (BYTE1(v34) ^ 0xB7) - ((2 * (BYTE1(v34) ^ 0xB7)) & 0xC0) + 96;
  *(unsigned char *)(a2 + (v32 + a3)) = (HIBYTE(v34) ^ 0x4A)
                                            - 2 * ((HIBYTE(v34) ^ 0x4A) & 0xE1 ^ HIBYTE(v34) & 1)
                                            + 96;
  *(unsigned char *)(a2 + (v32 + a3 + 1)) = (BYTE2(v34) ^ 0xA3)
                                                - 2 * ((BYTE2(v34) ^ 0xA3) & 0x68 ^ BYTE2(v34) & 8)
                                                + 96;
  *(unsigned char *)(a2 + (v32 + a3 + 3)) = v34 ^ 0x58;
  BOOL v35 = v32 - 1895494671 < (a30 - 631933497);
  if (v32 - 1895494671 < v30 != a30 - 631933497 < v30) {
    BOOL v35 = a30 - 631933497 < v30;
  }
  return (*(uint64_t (**)(void))(v33 + 8 * ((240 * v35) ^ v31)))();
}

uint64_t sub_100101574@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v2 + 8 * (((((a1 + 3184) ^ 0x953) - 598) * (v1 != 0)) ^ a1)))();
}

void sub_1001015A0(_DWORD *a1@<X8>)
{
  unint64_t v3 = *(void *)(v1 + 8)
     + v2
     - ((2 * (*(void *)(v1 + 8) + v2) + 0x7047BFE2CB2E66EELL) & 0x895A682A9C211ADCLL)
     - 0x32EEBF94C583F1BLL;
  *int v4 = (HIBYTE(v3) ^ 0x44) - ((2 * (HIBYTE(v3) ^ 0x44)) & 0xC0) + 96;
  v4[1] = (BYTE6(v3) ^ 0xAD) - ((2 * (BYTE6(v3) ^ 0xAD)) & 0xC0) + 96;
  v4[2] = (BYTE5(v3) ^ 0x34) + (~(2 * (BYTE5(v3) ^ 0x34)) | 0x3F) + 97;
  v4[3] = (BYTE4(v3) ^ 0x15) + (~(2 * BYTE4(v3)) | 0x3F) + 97;
  v4[4] = (BYTE3(v3) ^ 0x4E) + (~(2 * (BYTE3(v3) ^ 0x4E)) | 0x3F) + 97;
  v4[5] = (BYTE2(v3) ^ 0x10) - ((2 * BYTE2(v3)) & 0xC0) + 96;
  v4[6] = (BYTE1(v3) ^ 0x8D) - ((2 * BYTE1(v3)) & 0xC0) + 96;
  v4[7] = v3 ^ 0xE;
  *(_DWORD *)uint64_t v1 = *a1;
}

uint64_t sub_100101704@<X0>(__int16 a1@<W8>)
{
  LOWORD(STACK[0x96A]) = a1;
  return sub_1001B8258();
}

uint64_t sub_100101718(int8x8_t a1, uint64_t a2, int a3, int a4, uint64_t a5, int a6, int a7, uint64_t a8)
{
  *(int8x8_t *)(a8 + (v8 + a4)) = veor_s8(*(int8x8_t *)(v9 + (v8 + a4)), a1);
  return (*(uint64_t (**)(void))(v10 + 8 * (((a7 + a4 != 8) * a3) ^ a6)))();
}

uint64_t sub_10010174C@<X0>(uint64_t a1@<X6>, int a2@<W8>)
{
  *unint64_t v3 = 0;
  return (*(uint64_t (**)(void))(v4 + 8 * ((v2 + a2 - 939) ^ (6099 * (a1 != 0)))))();
}

uint64_t sub_100101778()
{
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * (((32 * ((v2 + v1 + 100668426) >= 8)) | (((v2 + v1 + 100668426) >= 8) << 6)) ^ 0xB39u)))();
}

uint64_t sub_1001017D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,int a38,char a39)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char *))(v42 + 8 * (int)((((v41 + 460857117) & 0xE487DDBD ^ 0xB4D) * (v39 == v40)) ^ v41)))(a1, a2, 116, 3767154520, a5, a6, a7, &a39);
}

uint64_t sub_100101834()
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((7 * (v0 != 0)) | 0x4F8u)))();
}

uint64_t sub_100101878(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,int a40)
{
  *(_DWORD *)&v44[16] = a40;
  *(void *)&v44[8] = a39;
  *(void *)unsigned int v44 = a38;
  *(_OWORD *)(a5 + ((((a1 - 156) | a6) ^ 0xFFFFFC2DLL) & (v40 + a2))) = *(_OWORD *)&v44[4];
  return (*(uint64_t (**)(void))(v42 + 8 * ((38 * (((v41 + 1) & 0x1FFFFFFF0) != 16)) | (a1 - 38))))();
}

uint64_t sub_1001018E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,int a42,char a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,int a59,int a60,uint64_t a61)
{
  int v64 = v62 + 549;
  if (LOBYTE(STACK[0x523])) {
    int v65 = 4;
  }
  else {
    int v65 = 6;
  }
  int v66 = v65 + 940263052;
  if ((a43 & 0x40) == v62 - 2437) {
    int v67 = v66;
  }
  else {
    int v67 = STACK[0x3C0];
  }
  LODWORD(STACK[0x544]) = v67;
  int v68 = 142545853 * ((((v63 - 192) | 0x4464C22E) - ((v63 - 192) & 0x4464C22E)) ^ 0x6E9B6D41);
  *(_DWORD *)(v63 - 172) = ((v62 ^ 0x31C440A) * a60 + 984149816) ^ v68;
  *(void *)(v63 - 192) = &STACK[0x1870];
  *(void *)(v63 - 168) = &STACK[0x79411A163AB7F930];
  *(void *)(v63 - 160) = a61;
  *(void *)(v63 - 152) = &STACK[0x6038FCF4A92703D5];
  *(_DWORD *)(v63 - 184) = v67 - v68 - (((v67 << (((v62 + 127) | 0x81) + 124)) + 266957548) & 0x7CEA8506) + 107609081;
  *(_DWORD *)(v63 - 176) = v64 - v68 - 1456;
  *(void *)(v63 - 144) = &STACK[0x6209C59847B5E51A];
  uint64_t v69 = (*(uint64_t (**)(uint64_t))(v61 + 8 * (v62 + 2289)))(v63 - 192);
  int v70 = *(_DWORD *)(v63 - 180);
  LODWORD(STACK[0x4A4]) = v70;
  return (*(uint64_t (**)(uint64_t))(v61 + 8 * ((6952 * (v70 == 847203058)) ^ v64)))(v69);
}

uint64_t sub_100101A84@<X0>(int a1@<W8>)
{
  unint64_t v3 = *(uint64_t (**)(uint64_t))(v2 + 8 * (a1 + 3139));
  return v3(v1);
}

uint64_t sub_100101AB4()
{
  (*(void (**)(void))(v2 + 8 * (v1 ^ 0x18B4)))(v5);
  uint64_t v6 = *v3;
  unsigned int v7 = v1 - 1437274309 * ((((2 * &v6) | 0x71606C84) - &v6 - 951072322) ^ 0x1ABE4B77) - 1093;
  uint64_t result = (*(uint64_t (**)(uint64_t *))(v2 + 8 * (v1 + 2141)))(&v6);
  *int v0 = 847160648;
  return result;
}

uint64_t sub_100101ACC(int a1)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((((*(unsigned char *)(v4 + v2 * (uint64_t)a1 + 40) & 8) == 0) * ((v1 ^ 0x1894) - 1591)) ^ (v1 - 1477))))();
}

uint64_t sub_100101B04()
{
  return sub_10018A7E0();
}

uint64_t sub_100101B18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, unint64_t *a15, int a16, unsigned int a17)
{
  a15 = &STACK[0x75464D914B724897];
  a17 = 3687
      - ((-2082486797 - (&a15 | 0x83DFC5F3) + (&a15 | 0x7C203A0C)) ^ 0xBBA15A45) * v19;
  uint64_t v20 = (*(uint64_t (**)(unint64_t **))(v18 + 37680))(&a15);
  return (*(uint64_t (**)(uint64_t))(v18 + 8 * ((6324 * (a16 == ((v17 + 821) ^ 0x4D5))) ^ 0x9BFu)))(v20);
}

uint64_t sub_100101BC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, void))(v10
                                                             + 8
                                                             * ((1591
                                                               * (((v7 + ((a7 - 1861) | 0x103) + 847205796 + 17) & v8) == 0)) ^ (a7 - 1173))))(a1, a2, (v9 - a2));
}

uint64_t sub_100101C10@<X0>(unsigned int a1@<W8>)
{
  uint64_t v4 = a1;
  unint64_t v5 = a1 - 415131221;
  if (v5 <= 0x38) {
    unint64_t v5 = 56;
  }
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((v5 - v4 + 415131222 < (unint64_t)(v1 ^ 0x2B7u) - 2053)
                                * (((v1 + 259414) | 0x242A68C0) ^ (v3 - 58))) ^ v1)))();
}

uint64_t sub_100101C84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(void))(v8
                              + 8
                              * ((((((v14 + v12) & v13) ^ ((*(_DWORD *)(*v11 + 4 * v15) ^ (((v14 + v12) & v13) + 331 + v9)) > (*(_DWORD *)(*v10 + 4 * v15) ^ (v9 + 2814)))) & 1)
                                * a8) ^ (v14 + v12) & v13)))();
}

uint64_t sub_100101CDC@<X0>(unsigned int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,int a43)
{
  int v45 = *(_DWORD *)(v43 + 40 * a1 + 28);
  switch(v45)
  {
    case 1:
      unint64_t v47 = STACK[0x590];
      STACK[0x830] = *(void *)(v44 + 8 * (a43 - 2332));
      return (*(uint64_t (**)(void))(v44
                                  + 8
                                  * (((v47 != 0x46197683F7D18950)
                                    * ((7 * (a43 ^ 0x907)) ^ 0x50F ^ (7 * (a43 ^ 0x907) - 1253))) ^ (7 * (a43 ^ 0x907)))))();
    case 3:
      return (*(uint64_t (**)(void))(v44
                                  + 8
                                  * (((((*(void *)(v43 + 40 * a1 + 16) == 0) ^ a43 ^ 0x1B) & 1)
                                    * ((a43 ^ 0x1937) - 4127)) ^ (a43 + 1668))))();
    case 2:
      return (*(uint64_t (**)(void))(v44
                                  + 8
                                  * (((STACK[0x590] == 0x46197683F7D18950) * ((a43 ^ 0x963) - 129)) | (a43 + 1741))))();
    default:
      return ((uint64_t (*)(void))STACK[0x890])();
  }
}

uint64_t sub_100101E24()
{
  return (*(uint64_t (**)(void))(v2 + 8
                                   * (((*(void *)(v0 + 8) != 0x46197683F7D18950) * ((v1 ^ 0x455) - 3452)) ^ v1)))();
}

uint64_t sub_100101E60()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((1011 * ((v0 ^ 0x24u) < ((v1 + 1074) ^ 0xE25u))) ^ v1)))();
}

uint64_t sub_100101E98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, int a20,uint64_t a21,unsigned int a22)
{
  a21 = a14;
  a22 = v22 - 476588053 * (((&a20 | 0xB4434973) - (&a20 & 0xB4434973)) ^ 0x9BE4D30) + 1380;
  uint64_t v24 = (*(uint64_t (**)(int *))(v23 + 8 * (v22 + 3428)))(&a20);
  return (*(uint64_t (**)(uint64_t))(v23 + 8 * ((2399 * (a20 == v22 + 847201791)) ^ v22)))(v24);
}

uint64_t sub_100101F2C()
{
  return sub_10018EABC(v0 + 1611);
}

uint64_t sub_100101F44()
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((2240 * (v0 == (((v1 + 792) | 0x1C8) ^ (v2 - 2189) ^ (v1 - 1994464651) & 0x76E119FD))) ^ v1)))();
}

uint64_t sub_100101FA0@<X0>(void *a1@<X8>)
{
  *(void *)(STACK[0x640] - 0x46197683F7D18950) = a1;
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (int)(((*a1 == 0) * ((((v1 - 234619857) & 0xDFC0EFF) + 456380399) & 0xE4CC31EF ^ 0xEE1)) ^ (v1 - 234619857) & 0xDFC0EFF)))();
}

uint64_t sub_100102010(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5
                                                     + 8
                                                     * ((2605
                                                       * (((v3 - 1200) ^ (v4 - 282)) + v6 < (v3 ^ 0xBBD ^ v2))) ^ v3)))(a1, a2);
}

uint64_t sub_100102050(int a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * ((988
                                * (((v3 + ((a1 + 52) ^ 0x609) - 1026) & (2 * (*(unsigned __int8 *)(v4 + 6) - 1)))
                                 + ((*(unsigned __int8 *)(v4 + 6) - 1) ^ a3) != a3)) ^ a1)))();
}

uint64_t sub_10010209C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  unint64_t v72 = STACK[0x220];
  *(void *)(v72 + 1560) = *(void *)STACK[0x420];
  *(_DWORD *)(v72 + 1552) = *(_DWORD *)STACK[0x4E0];
  unint64_t v73 = STACK[0x218];
  *(void *)(*(void *)(STACK[0x218] + 96) + 488) = *(void *)(STACK[0x218] + 8);
  *(_DWORD *)(*(void *)(v73 + 96) + 480) = *(_DWORD *)((char *)&STACK[0x5C0] + a71);
  *(unsigned char *)(a68 + a71) = ((STACK[0x210] + ((a65 - 101) ^ 0xDB)) ^ 0xBA) * a67;
  return (*(uint64_t (**)(void))(v71 + 8 * a65))();
}

uint64_t sub_10010213C()
{
  STACK[0x560] = STACK[0x570];
  LODWORD(STACK[0x744]) = STACK[0x624];
  LODWORD(STACK[0x500]) = 847203058;
  STACK[0x3E8] = *(void *)(v1 + 8 * (((v0 + 925) | 0x1C2) - 2360));
  return sub_10012A880(2498, 0x46197683F7D18950, 2547, 1024463738, 3270503873, 0xB9E6897C082E76B0);
}

uint64_t sub_100102180@<X0>(uint64_t a1@<X5>, int a2@<W8>)
{
  return (*(uint64_t (**)(void))(v2 + 8 * (((a2 + 895) * (a1 != 0)) ^ a2)))();
}

void sub_1001021AC()
{
  *(_DWORD *)(v1 + 16) = v0;
}

uint64_t sub_1001021F0@<X0>(int a1@<W1>, unsigned int a2@<W3>, uint64_t a3@<X4>, uint64_t a4@<X5>, int a5@<W6>, int a6@<W8>, int8x16_t a7@<Q0>, int8x16_t a8@<Q1>, int8x16_t a9@<Q4>, int8x16_t a10@<Q5>, int32x4_t a11@<Q6>, int8x16_t a12@<Q7>)
{
  uint64_t v16 = v12 + 4;
  uint64_t v17 = (a6 + a1) & a2;
  a8.i32[0] = v13->i32[1];
  a8.i32[1] = *(_DWORD *)(v15 + 4 * (v16 + (v17 ^ a3)));
  a8.i32[2] = v13->i32[3];
  int8x16_t v18 = vextq_s8(a7, a8, 0xCuLL);
  int8x16_t v19 = a8;
  v19.i32[3] = v13[1].i32[0];
  int32x4_t v20 = (int32x4_t)veorq_s8((int8x16_t)vshrq_n_u32((uint32x4_t)vorrq_s8(vandq_s8(v19, a9), vandq_s8(v18, a12)), 1uLL), *(int8x16_t *)((char *)v13 - 908));
  v18.i32[0] = *(_DWORD *)(a4 + 4 * (v13->i32[1] & 1));
  v18.i32[1] = *(_DWORD *)(a4 + 4 * (*(_DWORD *)(v15 + 4 * (v16 + (v17 ^ a3))) & 1));
  v18.i32[2] = *(_DWORD *)(a4 + 4 * (v13->i32[3] & 1));
  v18.i32[3] = *(_DWORD *)(a4 + 4 * (v19.i8[12] & 1));
  *unsigned int v13 = veorq_s8((int8x16_t)vaddq_s32(vsubq_s32(v20, (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v20, v20), a10)), a11), v18);
  return (*(uint64_t (**)(void))(v14 + 8 * (((v16 == 392) * a5) ^ a6)))();
}

uint64_t sub_1001021FC(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  int v10 = (a4 - 597) | 0x241;
  *(void *)(a1 - 7 + (v7 + v5 - v8)) = *(void *)(v4 - 7 + (v7 + v5 - v8));
  BOOL v11 = (v10 ^ 0x2C1) + v8 != ((v10 ^ 0xFFFFFD31) & v6);
  return (*(uint64_t (**)(void))(v9 + 8 * (((4 * v11) | (16 * v11)) ^ v10)))();
}

uint64_t sub_100102264(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,int a33,int a34,uint64_t a35,uint64_t a36,int a37,int a38)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v39 + 8 * (int)((((a5 + a38 + 187) < 0xFFFFFFFB) * ((v38 + 1689) ^ 0x720 ^ a34 & 0xAB39A5DC)) ^ (v38 + 3064))))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28);
}

uint64_t sub_1001022C0@<X0>(uint64_t a1@<X8>)
{
  LODWORD(STACK[0x2C0]) = v2;
  unint64_t v5 = (((v1 + 232) | 0x210u) ^ 0xBAAEC9714EEAB261) + 0x4551368EB115474ELL;
  BOOL v6 = *(unsigned __int8 *)(a1 + 236 + v5) == *(unsigned __int8 *)(v3 + 32 + v5);
  return (*(uint64_t (**)(void))(v4 + 8 * (((4 * v6) | (8 * v6)) ^ (v1 - 1350))))();
}

uint64_t sub_10010232C()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((v0 + 1404) | 0x428) ^ (7550
                                                        * ((LODWORD(STACK[0x268]) + v1) < 0xA2495F6C)))))();
}

uint64_t sub_1001023DC(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v9 = v5 - 8 + (((a4 + 1352) | 7) ^ (v4 + 2597));
  *(void *)(a3 + v9) = *(void *)(v7 + v9);
  return (*(uint64_t (**)(void))(v8 + 8 * ((1023 * (v6 == -8)) ^ a4)))();
}

uint64_t sub_1001023E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int v72 = (v70 - 1303430276) & 0x4DB0CDFD;
  unint64_t v73 = STACK[0x2E8];
  unint64_t v74 = STACK[0x370];
  STACK[0x2D0] = (unint64_t)&STACK[0x5C0] + a70;
  STACK[0x2B8] = (unint64_t)&STACK[0x5C0] + STACK[0x270] - 110;
  LODWORD(STACK[0x2C8]) = (LODWORD(STACK[0x2E4]) + 1843876071) & 0x9218ADD7;
  if (v73) {
    BOOL v75 = v74 == 0;
  }
  else {
    BOOL v75 = 1;
  }
  int v76 = v75;
  return (*(uint64_t (**)(uint64_t, uint64_t))(v71 + 8 * ((v76 * (v72 ^ 0x873)) ^ (v72 + 362))))(a1, 0x4551368EB115474ELL);
}

uint64_t sub_1001024CC@<X0>(int a1@<W8>)
{
  *(unsigned char *)(v1 + (v6 + v2)) = *(unsigned char *)(v7 + (v6 + v2))
                                           - (((17 * v4) ^ 0x1E) & (2 * *(unsigned char *)(v7 + (v6 + v2))))
                                           + 96;
  return (*(uint64_t (**)(void))(v8 + 8 * (((v6 - 1 != a1) * v5) ^ v3)))();
}

uint64_t sub_1001024D4(int a1)
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((((a1 + 1353) ^ 0x120 ^ (1813 * (a1 ^ 0x9CD))) * (v1 == v2)) ^ a1)))();
}

void sub_100102510(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int a5)
{
  int v9 = 439 * (v7 ^ 0x4CE);
  a5 = v7 + 476588053 * ((((2 * &a3) | 0x993E7AA8) - &a3 - 1285504340) ^ 0xF1623917) - 108;
  a3 = v6;
  a4 = v5;
  (*(void (**)(uint64_t *))(a1 + 8 * (v7 ^ 0x16A1)))(&a3);
  *uint64_t v8 = (v9 ^ 0x275A70C2) - *v8;
  sub_1001275AC();
}

uint64_t sub_100102598()
{
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * (int)(((((v2 - 4084) | 0x68C) + ((v2 - 2187) ^ 0xFFFFFE16))
                                     * ((v1 + v3 + 47) < 0x2E)) ^ v2)))();
}

uint64_t sub_1001025E0(int a1)
{
  return (*(uint64_t (**)(void))(v4
                                           + 8
                                           * ((((v1 & 0x18) == (((((a1 - 1715) | 0x180) ^ 0xB) + 940) ^ 0x597))
                                             * (3 * (((a1 - 1715) | 0x180) ^ 0xB) + 1097)) | (a1 - 1715) | 0x180)))((v2 - v3));
}

uint64_t sub_100102628@<X0>(int a1@<W2>, int a2@<W3>, uint64_t a3@<X8>)
{
  uint64_t v8 = v6 - 32 + ((v4 + 930) ^ (a2 + 805));
  long long v9 = *(_OWORD *)(v3 + v8 - 15);
  long long v10 = *(_OWORD *)(v3 + v8 - 31);
  uint64_t v11 = a3 + v8;
  *(_OWORD *)(v11 - 15) = v9;
  *(_OWORD *)(v11 - 31) = v10;
  return (*(uint64_t (**)(void))(v7 + 8 * (((v5 == 32) * a1) ^ (v4 - 829))))();
}

uint64_t sub_100102634(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  unint64_t v20 = a1 + v9 + ((v12 + v17 - 815 - 1846) ^ 0x3044B3F6u);
  *(_DWORD *)(v18 + 4 * v19) = v20 + v12 - ((v11 + 1987) & (2 * v20));
  return (*(uint64_t (**)(void))(v8
                              + 8
                              * ((254
                                * (((v20 >> ((v17 ^ a8) ^ v13)) ^ v14)
                                 + v16
                                 + (v15 & (2 * (v20 >> ((v17 ^ a8) ^ v13)))) == v10)) ^ v17)))();
}

uint64_t sub_1001026A8()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((((((v0 - 3268) ^ 0x1245) - 1437) ^ ((v0 - 3268) | 0x8A1))
                                * (((2 * v1) & 0xFEF7DBD2 ^ 0xCA6349D0) + (v1 ^ 0x1A4E5913) + 334379575 == 325724192)) ^ v0)))();
}

uint64_t sub_10010271C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  return (*(uint64_t (**)(uint64_t))(v8
                                            + 8
                                            * ((27
                                              * (v7 == (((v6 - 72) | 0x41) + (v6 ^ (a6 - 56) ^ 0x3A)))) ^ v6)))(4294925278);
}

uint64_t sub_100102760(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  return (*(uint64_t (**)(void))(v20
                              + 8
                              * ((3320
                                * (*(_DWORD *)(a16 + 4 * (v18 + v19)) == v16
                                                                                       + ((v17 - 359123897) & 0x1567CDFA)
                                                                                       - 1450)) ^ (v17 + 207))))();
}

uint64_t sub_1001027B4()
{
  int v2 = STACK[0x500];
  STACK[0x7F0] -= 80;
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((4 * (v2 == (v0 ^ 0x1A) + 847202919)) | ((v2 == (v0 ^ 0x1A) + 847202919) << 11) | v0)))();
}

uint64_t sub_100102800(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, void))(v8
                                                             + 8
                                                             * ((1009 * (v7 < ((a7 - 852710193) & 0x32D34F4B ^ 0xA2Bu))) ^ a7)))(a1, a2, 0);
}

uint64_t sub_100102850()
{
  return sub_10018BD08();
}

uint64_t sub_10010287C()
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((2073
                                * (((v0 + (v2 ^ 0x30) - 523) & (2 * (*(unsigned __int8 *)(v1 + 6) - 1)))
                                 + ((*(unsigned __int8 *)(v1 + 6) - 1) ^ 0xFBDFFFFF) == -69206017)) ^ v2)))();
}

uint64_t sub_1001028CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,int a40,unsigned int a41,uint64_t a42,uint64_t a43)
{
  unsigned int v47 = (v46 + 1776139583) & 0x96223F76;
  BOOL v48 = (char *)*(&off_100520A90 + (v46 ^ 0x579)) - 8;
  int v49 = v48[*(unsigned __int8 *)(v44 - 0x6209C59847B5CC99) ^ 0x85];
  HIDWORD(v50) = v47 ^ 0x37 ^ v49;
  LODWORD(v50) = v49 << 24;
  int v51 = ((v50 >> 30) ^ 0x9F) << 16;
  uint64_t v52 = (uint64_t)*(&off_100520A90 + (v46 ^ 0x5D9));
  int v53 = *(unsigned __int8 *)(v52 + (*(unsigned __int8 *)(v44 - 0x6209C59847B5CC8FLL) ^ 0xBFLL));
  HIDWORD(v50) = v53 ^ 0xA;
  LODWORD(v50) = (v53 ^ 0x80) << 24;
  LOBYTE(v53) = v50 >> 28;
  int v54 = v48[*(unsigned __int8 *)(v44 - 0x6209C59847B5CC95) ^ 0x6FLL];
  HIDWORD(v50) = v54 ^ 0x13;
  LODWORD(v50) = v54 << 24;
  int v55 = ((v50 >> 30) ^ 0x68) << 16;
  int v56 = (char *)*(&off_100520A90 + v46 - 1275) - 4;
  int v57 = (char *)*(&off_100520A90 + v46 - 1219) - 8;
  char v58 = v57[*(unsigned __int8 *)(v44 - 0x6209C59847B5CC8ELL) ^ 0xD8];
  int v59 = *(unsigned __int8 *)(v52 + (*(unsigned __int8 *)(v44 - 0x6209C59847B5CC8BLL) ^ 0xBCLL));
  HIDWORD(v50) = v59 ^ 0xA;
  LODWORD(v50) = (v59 ^ 0x80) << 24;
  unsigned __int8 v60 = v50 >> 28;
  int v61 = v55 | ((v56[*(unsigned __int8 *)(v44 - 0x6209C59847B5CC94) ^ 0xDFLL] ^ 0x54) << 8);
  int v62 = *(unsigned __int8 *)(v52 + (*(unsigned __int8 *)(v44 - 0x6209C59847B5CC93) ^ 0x98));
  HIDWORD(v50) = v62 ^ 0xA;
  LODWORD(v50) = (v62 ^ 0x80) << 24;
  LOBYTE(v62) = v50 >> 28;
  int v63 = v61 | ((v57[*(unsigned __int8 *)(v44 - 0x6209C59847B5CC96) ^ 0xAFLL] ^ 0xD) << 24);
  int v64 = v51 | ((v56[*(unsigned __int8 *)(v44 - 0x6209C59847B5CC98) ^ 0x49] ^ 0xDE) << 8) | ((v57[*v43 ^ 0xFELL] ^ 0xD4) << 24);
  LODWORD(v52) = *(unsigned __int8 *)(v52 + (*(unsigned __int8 *)(v44 - 0x6209C59847B5CC97) ^ 0xD0));
  HIDWORD(v50) = v52 ^ 0xA;
  LODWORD(v50) = (v52 ^ 0x80) << 24;
  int v65 = v48[*(unsigned __int8 *)(v44 - 0x6209C59847B5CC8DLL) ^ 0xB6];
  LOBYTE(v52) = (v50 >> 28) ^ 0x3C;
  HIDWORD(v50) = v65 ^ 0x13;
  LODWORD(v50) = v65 << 24;
  unsigned int v66 = v64 & 0xFFFFFF00 | v52;
  uint64_t v67 = (v50 >> 30) ^ 0x21;
  unint64_t v68 = ((v56[*(unsigned __int8 *)(v44 - 0x6209C59847B5CC8CLL) ^ 0xC7] ^ 0x95) << 8) & 0xFFFFFFFF00FFFFFFLL | ((unint64_t)(v58 ^ 0xDDu) << 24) | (v67 << 16);
  LODWORD(v48) = v48[*(unsigned __int8 *)(v44 - 0x6209C59847B5CC91) ^ 0xC8];
  HIDWORD(v50) = v48 ^ 0x13;
  LODWORD(v50) = v48 << 24;
  LODWORD(v48) = v57[*(unsigned __int8 *)(v44 - 0x6209C59847B5CC92) ^ 0x18];
  unsigned int v69 = (((v56[*(unsigned __int8 *)(v44 - 0x6209C59847B5CC8CLL) ^ 0xC7] ^ 0x95) << 8) & 0xFFFF00 | ((v58 ^ 0xDD) << 24) | (v67 << 16) | v60 ^ 0x68) ^ 0xEA3547E1;
  int v70 = (char *)*(&off_100520A90 + v46 - 1272) - 4;
  int v71 = *(_DWORD *)&v70[4 * (v58 ^ 0xC2)];
  unsigned int v72 = v53 | ((v56[*(unsigned __int8 *)(v44 - 0x6209C59847B5CC90) ^ 0xB7] ^ 0x75) << 8) & 0xFF00FFFF | (((v50 >> 30) ^ 0x37) << 16) | ((v48 ^ 0x92) << 24);
  HIDWORD(v50) = v71 ^ 2;
  LODWORD(v50) = v71 ^ 0x29C6444;
  uint64_t v73 = (uint64_t)*(&off_100520A90 + (v46 ^ 0x5A5));
  LODWORD(v68) = ((BYTE1(v68) ^ 0x9E) - ((2 * ((v68 >> 8) ^ 0x75F49E)) & 0x138) + 962391452) ^ *(_DWORD *)(v73 + 4 * (BYTE1(v68) ^ 0x6BLL));
  unint64_t v74 = (char *)*(&off_100520A90 + (int)(v46 & 0xD7CE201B)) - 12;
  LODWORD(v68) = (v50 >> 2) ^ *(_DWORD *)&v74[4 * (v67 ^ 0xDD)] ^ (v68
                                                                               - ((2 * v68) & 0xF1119B56)
                                                                               - 125252181);
  int v75 = v68 - ((2 * v68) & 0x6B4A71D6);
  int v76 = (char *)*(&off_100520A90 + v46 - 1296) - 4;
  int v77 = v66 ^ *(_DWORD *)&v76[4 * (v60 ^ 0xD9)] ^ 0x668447AB ^ (v75 - 1247463189);
  unsigned int v271 = v66;
  unsigned int v272 = v63 & 0xFFFFFF00 | v62;
  int v78 = v272 - 2 * ((v63 & 0x66844700 | v62 & 0xBB) ^ v62 & 0x10) + 1719945131;
  unsigned int v269 = v72;
  unsigned int v270 = v69;
  int v267 = v78 ^ 0x2789BBD4 ^ v77;
  unsigned int v79 = v72 ^ 0xA3032DE2 ^ v267;
  unsigned int v80 = v79 ^ v69;
  int v81 = *(_DWORD *)&v70[4 * (((v79 ^ v69) >> 24) ^ 0x1D)];
  HIDWORD(v50) = v81 ^ 2;
  LODWORD(v50) = v81 ^ 0x29C6444;
  int v82 = ((v50 >> 2) - ((2 * (v50 >> 2)) & 0x6B4A71D6) - 1247463189) ^ *(_DWORD *)&v76[4
                                                                                    * ((v79 ^ v69) ^ 0xCF)];
  unsigned int v83 = *(_DWORD *)(v73 + 4 * (BYTE1(v80) ^ 0xEAu)) ^ *(_DWORD *)&v74[4 * (BYTE2(v80) ^ 0x4D)] ^ ((BYTE1(v80) ^ 0x1F)
                                                                                                  - ((2 * ((v80 >> 8) ^ 0x77641F)) & 0x138)
                                                                                                  + 962391452) ^ (v82 - ((2 * v82) & 0xF1119B56) - 125252181);
  unsigned int v84 = v83 - ((2 * v83) & 0xCD088F56) + 1719945131;
  unsigned int v85 = v78 ^ 0xC7490E10 ^ v84;
  int v265 = v79 ^ v69 ^ 0x307BD24;
  unsigned int v266 = v79;
  int v86 = v85 ^ v79;
  int v87 = *(_DWORD *)&v70[4 * (((v86 ^ v265) >> 24) ^ 0x8F)];
  HIDWORD(v50) = v87 ^ 2;
  LODWORD(v50) = v87 ^ 0x29C6444;
  int v88 = *(_DWORD *)(v73 + 4 * (((unsigned __int16)(v86 ^ v265 ^ 0xB205) >> 8) ^ 0xF5u)) ^ *(_DWORD *)&v74[4 * (((v86 ^ v265) >> 16) ^ 4)] ^ (((unsigned __int16)(v86 ^ v265 ^ 0xB205) >> 8) - (((v86 ^ v265 ^ 0xE52DB205) >> 7) & 0x138) + 962391452) ^ ((v50 >> 2) - ((2 * (v50 >> 2)) & 0xF1119B56) - 125252181);
  int v268 = v77;
  int v263 = v84 ^ v77;
  int v89 = v84 ^ v77 ^ *(_DWORD *)&v76[4 * ((v86 ^ v265) ^ 0x40)] ^ (v88
                                                                                 - ((2 * v88) & 0x6B4A71D6)
                                                                                 - 1247463189);
  unsigned int v264 = v85;
  HIDWORD(v261) = ((v89 ^ 0x516EF336) - ((2 * (v89 ^ 0x516EF336)) & 0x635C8DE4) - 1313978638) ^ v85;
  unsigned int v90 = HIDWORD(v261) ^ 0x8EDEEA78 ^ v86;
  unsigned int v91 = v90 ^ v86 ^ v265 ^ 0xE52DB205;
  int v92 = *(_DWORD *)&v70[4 * (HIBYTE(v91) ^ 0x75)];
  HIDWORD(v50) = v92 ^ 2;
  LODWORD(v50) = v92 ^ 0x29C6444;
  int v93 = (v50 >> 2) ^ *(_DWORD *)(v73 + 4 * (BYTE1(v91) ^ 0xFCu)) ^ ((BYTE1(v91) ^ 9)
                                                                    - ((2 * ((v91 >> 8) ^ 0x1F2609)) & 0x138)
                                                                    + 962391452);
  int v94 = (v93 - ((2 * v93) & 0x6B4A71D6) - 1247463189) ^ *(_DWORD *)&v76[4
                                                                      * ((v90 ^ v86 ^ v265 ^ 5) ^ 0x17)];
  int v262 = v89;
  unsigned int v95 = v89 ^ *(_DWORD *)&v74[4 * (BYTE2(v91) ^ 0xF)] ^ (v94 - ((2 * v94) & 0xF1119B56) - 125252181);
  LODWORD(v260) = v95 ^ 0x71A906D4;
  HIDWORD(v260) = v91;
  LODWORD(v261) = v90;
  int v96 = v90 ^ 0x4C5CD1C1;
  HIDWORD(v259) = v95 ^ 0x71A906D4 ^ ((HIDWORD(v261) ^ 0x8EDEEA78)
                                    - ((2 * (HIDWORD(v261) ^ 0x8EDEEA78)) & 0x418FEBC4)
                                    + 549975522);
  LODWORD(v259) = HIDWORD(v259) ^ 0x307C325C ^ v90 ^ 0x4C5CD1C1;
  unsigned int v97 = v259 ^ v91;
  unsigned int v98 = (v259 ^ v91) ^ 0xEE;
  int v99 = *(_DWORD *)&v70[4 * (((v259 ^ v91) >> 24) ^ 0xB6)];
  HIDWORD(v50) = v99 ^ 2;
  LODWORD(v50) = v99 ^ 0x29C6444;
  int v100 = ((v50 >> 2) - ((2 * (v50 >> 2)) & 0x6B4A71D6) - 1247463189) ^ *(_DWORD *)&v76[4 * v98];
  unsigned int v101 = *(_DWORD *)(v73 + 4 * (((unsigned __int16)(v97 ^ 0x10AB) >> 8) ^ 0xF5u)) ^ *(_DWORD *)&v74[4 * (BYTE2(v97) ^ 0x67)] ^ v95 ^ (((unsigned __int16)(v97 ^ 0x10AB) >> 8) - (((v97 ^ 0xDC4E10AB) >> 7) & 0x138) + 962391452) ^ (v100 - ((2 * v100) & 0xF1119B56) - 125252181);
  unsigned int v102 = v101 ^ 0xBA7A9889;
  int v103 = v101 ^ v96;
  unsigned int v104 = v101 ^ v96 ^ v97 ^ 0xDC4E10AB;
  int v105 = *(_DWORD *)&v70[4 * (HIBYTE(v104) ^ 0x21)];
  HIDWORD(v50) = v105 ^ 2;
  LODWORD(v50) = v105 ^ 0x29C6444;
  int v106 = ((v50 >> 2) - ((2 * (v50 >> 2)) & 0xF1119B56) - 125252181) ^ *(_DWORD *)&v74[4 * (BYTE2(v104) ^ 0xCE)];
  int v107 = (v106 - ((2 * v106) & 0x6B4A71D6) - 1247463189) ^ *(_DWORD *)&v76[4 * (v104 ^ 0xA7)];
  int v108 = ((unsigned __int16)(v104 ^ 0x48E2) >> 8);
  int v109 = (v107 - ((2 * v107) & 0x72B9DB38) + 962391452) ^ *(_DWORD *)(v73 + 4 * (v108 ^ 0xF5u));
  unsigned int v110 = v102 ^ v108 ^ (v109 - ((2 * v109) & 0xD628D77E) - 350983233);
  unint64_t v258 = __PAIR64__(v97, v102);
  unsigned int v111 = v102 ^ ((HIDWORD(v259) ^ 0x307C325C) - ((2 * (HIDWORD(v259) ^ 0x307C325C)) & 0xD628D77E) - 350983233);
  HIDWORD(v256) = v111;
  unint64_t v257 = __PAIR64__(v103, v104);
  LODWORD(v256) = v110 ^ 0x7AC98B1A;
  unsigned int v112 = v110 ^ 0x7AC98B1A ^ (v111 - ((2 * v111) & 0xF5931634) + 2060028698);
  unsigned int v113 = v112 ^ 0xE6F58988 ^ v103;
  unsigned int v114 = v113 ^ v104 ^ 0x4BE748E2;
  LODWORD(v56) = *(_DWORD *)&v70[4 * (HIBYTE(v114) ^ 0x12)];
  HIDWORD(v50) = v56 ^ 2;
  LODWORD(v50) = v56 ^ 0x29C6444;
  LODWORD(v56) = *(_DWORD *)(v73 + 4 * (((unsigned __int16)(v114 ^ 0x8988) >> 8) ^ 0xF5u)) ^ *(_DWORD *)&v74[4 * (BYTE2(v114) ^ 0xDC)] ^ (((unsigned __int16)(v114 ^ 0x8988) >> 8) - (((v114 ^ 0x78F58988) >> 7) & 0x138) + 962391452) ^ ((v50 >> 2) - ((2 * (v50 >> 2)) & 0xF1119B56) - 125252181);
  unsigned int v115 = *(_DWORD *)&v76[4 * ((v113 ^ v104 ^ 0xE2) ^ 0xCD)] ^ v110 ^ 0x48E8229 ^ (v56
                                                                                                 - ((2 * v56) & 0x6B4A71D6)
                                                                                                 - 1247463189);
  LODWORD(v255) = v113 ^ 0x90BB67B0;
  HIDWORD(v255) = v112;
  HIDWORD(v253) = v115 ^ ((v112 ^ 0xE6F58988) - 2 * ((v112 ^ 0xE6F58988) & 0x48E823B ^ v112 & 0x12) + 76448297);
  unsigned int v116 = ((HIDWORD(v253) ^ 0x5BF36347) - ((2 * (HIDWORD(v253) ^ 0x5BF36347)) & 0x83AB290C) - 1042967418) ^ v113 ^ 0x90BB67B0;
  unsigned int v117 = v116 ^ v114 ^ 0x78F58988;
  int v118 = ((BYTE1(v117) ^ 0xBB) - ((2 * ((v117 >> 8) ^ 0x1A89BB)) & 0x138) + 962391452) ^ *(_DWORD *)(v73 + 4 * (BYTE1(v117) ^ 0x4Eu));
  int v119 = (v118 - ((2 * v118) & 0x6B4A71D6) - 1247463189) ^ *(_DWORD *)&v76[4
                                                                         * ((v116 ^ v114 ^ 0x88) ^ 0x91)];
  LODWORD(v56) = *(_DWORD *)&v70[4 * (HIBYTE(v117) ^ 0x70)];
  HIDWORD(v50) = v56 ^ 2;
  LODWORD(v50) = v56 ^ 0x29C6444;
  int v120 = (v50 >> 2) ^ *(_DWORD *)&v74[4 * (BYTE2(v117) ^ 0xA0)] ^ (v119 - ((2 * v119) & 0xF1119B56) - 125252181);
  unint64_t v254 = __PAIR64__(v114, v115);
  LODWORD(v252) = (v120 - ((2 * v120) & 0x91D0452) + 76448297) ^ v115;
  HIDWORD(v252) = v117;
  int v121 = v252 ^ 0x930000ED ^ HIDWORD(v253) ^ 0x5BF36347;
  HIDWORD(v251) = v121;
  LODWORD(v251) = v116 ^ 0x8E942EA5 ^ ((v121 ^ 0x8D06EA22)
                                     - 2 * ((v121 ^ 0x8D06EA22) & 0x29D1FE5E ^ v121 & 4)
                                     - 1445855654);
  unsigned int v122 = v251 ^ v117;
  int v123 = *(_DWORD *)&v70[4 * (HIBYTE(v122) ^ 0x23)];
  HIDWORD(v50) = v123 ^ 2;
  LODWORD(v50) = v123 ^ 0x29C6444;
  int v124 = ((unsigned __int16)(v122 ^ 0x1195) >> 8);
  int v125 = *(_DWORD *)&v76[4 * (v122 ^ 0xD0)] ^ *(_DWORD *)(v73 + 4 * (v124 ^ 0xF5u)) ^ 0x8CF9D577 ^ (v50 >> 2);
  HIDWORD(v250) = v122;
  int v126 = (v125 - ((2 * v125) & 0xF1119B56) - 125252181) ^ *(_DWORD *)&v74[4 * (BYTE2(v122) ^ 0x7E)] ^ v252 ^ 0x930000ED ^ v124;
  LODWORD(v56) = (v121 ^ 0x8D06EA22) - ((2 * (v121 ^ 0x8D06EA22)) & 0xB7557926);
  LODWORD(v253) = v116;
  unsigned int v127 = v126 ^ v116 ^ v122 ^ 0x49571195;
  LODWORD(v70) = *(_DWORD *)&v70[4 * (HIBYTE(v127) ^ 0x63)];
  unsigned int v128 = v127 ^ 0x2745D0FF;
  LODWORD(v250) = v127 ^ 0xB7EC63;
  HIDWORD(v50) = v70 ^ 2;
  LODWORD(v50) = v70 ^ 0x29C6444;
  int v129 = *(_DWORD *)(v73 + 4 * (BYTE1(v128) ^ 0xFDu)) ^ *(_DWORD *)&v76[4 * (~(_BYTE)v127 ^ 0xC4)] ^ ((BYTE1(v128) ^ 8) - 2 * (((v128 >> 8) ^ 0x2E3F08) & 0x9F ^ (v128 >> 8) & 3) + 962391452) ^ ((v50 >> 2) - ((2 * (v50 >> 2)) & 0x6B4A71D6) - 1247463189);
  unsigned int v130 = (v129 - ((2 * v129) & 0xF1119B56) - 125252181) ^ *(_DWORD *)&v74[4
                                                                        * (((v127 ^ 0x2745D0FF) >> 16) ^ 0x16)];
  unsigned int v131 = v130 - ((2 * v130) & 0xB7557926);
  uint64_t v132 = (char *)*(&off_100520A90 + v46 - 1434) - 12;
  unint64_t v133 = (char *)*(&off_100520A90 + v46 - 1323) - 8;
  uint64_t v134 = (char *)*(&off_100520A90 + v46 - 1378) - 12;
  LODWORD(v48) = v134[*(unsigned __int8 *)(v45 - 109) ^ 0xA5];
  HIDWORD(v50) = v48 ^ 0x11;
  LODWORD(v50) = ~v48 << 24;
  uint64_t v135 = (char *)*(&off_100520A90 + (v46 ^ 0x514)) - 8;
  v247 = v134;
  v249 = v132;
  v246 = v135;
  v248 = v133;
  int v136 = (((((v50 >> 30) ^ 0xDB) >> 2) | (((v50 >> 30) ^ 0xDB) << 6)) | ((v133[*(unsigned __int8 *)(v45 - 111) ^ 0x7ALL] ^ 0x83) << 16) | ((v135[*(unsigned __int8 *)(v45 - 112) ^ 0x78] ^ 0x34) << 24) | (((v132[*(unsigned __int8 *)(v45 - 110) ^ 0x5DLL] + (*(unsigned char *)(v45 - 110) ^ 0x52) + 89) ^ 0x5D) << 8)) ^ 0x2D977532;
  LODWORD(v48) = ((v134[*(unsigned __int8 *)(v45 - 101) ^ 0x60] ^ 0x1A) & 0xFFFF00FF | ((v133[*(unsigned __int8 *)(v45 - 103) ^ 5] ^ 0xD2) << 16) | (((v132[*(unsigned __int8 *)(v45 - 102) ^ 4] + (*(unsigned char *)(v45 - 102) ^ 0xB) + 89) ^ 0x33) << 8) | ((v135[*(unsigned __int8 *)(v45 - 104) ^ 0x1CLL] ^ 0xFFFFFFC1) << 24)) ^ 0x1E9C9774;
  unsigned int v137 = ((v134[*(unsigned __int8 *)(v45 - 105) ^ 0x28] ^ 0xDB) & 0xFFFF00FF | ((((*(unsigned char *)(v45 - 106) ^ 0xAC) + v132[*(unsigned __int8 *)(v45 - 106) ^ 0xA3] + 89) ^ 0xF6) << 8) | ((v135[*(unsigned __int8 *)(v45 - 108) ^ 0xB2] ^ 0x36) << 24) | ((v133[*(unsigned __int8 *)(v45 - 107) ^ 0x27] ^ 0xB6) << 16)) ^ 0x310A9F41;
  unsigned int v138 = ((v134[*(unsigned __int8 *)(v45 - 97) ^ 0x7BLL] ^ 0xAE) & 0xFFFF00FF | ((((*(unsigned char *)(v45 - 98) ^ 0xD0) + v132[*(unsigned __int8 *)(v45 - 98) ^ 0xDFLL] + 89) ^ 0xE4) << 8) | ((v133[*(unsigned __int8 *)(v45 - 99) ^ 0xAALL] ^ 0xE0) << 16) | ((v135[*(unsigned __int8 *)(v45 - 100) ^ 0x45] ^ 0xE) << 24)) ^ 0xA099A32F;
  HIDWORD(v244) = v47 ^ 0x218;
  LODWORD(v244) = v47 ^ 0x2AC;
  HIDWORD(v243) = v47 ^ 0x20E;
  LODWORD(v243) = v126 ^ 0x5BAABC93 ^ (v56 + 1537916051);
  HIDWORD(v245) = v126 ^ 0x5BAABC93;
  LODWORD(v242) = (v131 + 1537916051) ^ v126 ^ 0x5BAABC93;
  HIDWORD(v242) = v47 ^ 0x2A1;
  *(_DWORD *)(v45 - 128) = v47;
  HIDWORD(v241) = v47 ^ 0x2EC;
  HIDWORD(a21) = v126 ^ v116 ^ 0x452FF2BF;
  LODWORD(v245) = (v56 + 1537916051) ^ 0x3DC8BA5D ^ (v131 + 1537916051);
  LODWORD(v241) = v245 ^ HIDWORD(a21);
  os_log_type_t v139 = *(unsigned __int8 **)(v45 - 120);
  int v140 = *(_DWORD *)(v45 - 128);
  *(void *)(v45 - 208) = 7;
  LOBYTE(v116) = v139[7];
  *(void *)(v45 - 176) = 12;
  int v141 = v134[(v116 ^ (((v140 - 96) | 0x21) + 28))];
  uint64_t v142 = v139[12] ^ 0x60;
  *(void *)(v45 - 168) = 8;
  *(void *)(v45 - 136) = 1;
  LODWORD(v142) = v135[v142] ^ 0xB5;
  LODWORD(v56) = v135[v139[8] ^ 0xC1] ^ 1;
  LODWORD(v132) = v133[v139[1] ^ 0x66] ^ 0x6F;
  *(void *)(v45 - 144) = 15;
  int v143 = v132 << 16;
  uint64_t v144 = v139[15] ^ 0xE9;
  *(void *)(v45 - 160) = 11;
  LODWORD(v144) = v134[v144] ^ 0xC;
  int v145 = v134[v139[11] ^ 0xC3];
  *(void *)(v45 - 184) = 0;
  LODWORD(v133) = v144 | (v142 << 24);
  int v146 = v143 | ((v135[*v139 ^ 0x30] ^ 0x85) << 24);
  *(void *)(v45 - 152) = 2;
  LOBYTE(v142) = (v249[v139[2] ^ 0xC0] + (v139[2] ^ 0xCF) + 89) ^ 0xF9;
  *(void *)(v45 - 216) = 4;
  unsigned int v147 = v146 & 0xFFFF00FF | (v142 << 8);
  LODWORD(v142) = v135[v139[4] ^ 0xFCLL] ^ 0x3B;
  v141 ^= 0xDCu;
  *(void *)(v45 - 240) = 9;
  *(void *)(v45 - 232) = 5;
  LODWORD(v76) = (v248[v139[9] ^ 0x5DLL] ^ 0xBC) << 16;
  *(void *)(v45 - 200) = 10;
  LODWORD(v76) = v76 & 0xFFFF00FF | (((v249[v139[10] ^ 0xD5] + (v139[10] ^ 0xDA) + 89) ^ 0xCF) << 8);
  *(void *)(v45 - 192) = 14;
  LODWORD(v76) = v76 | v145 ^ 0xC6 | (v56 << 24);
  LODWORD(v56) = v248[v139[5] ^ 0xA9] ^ 0x52;
  LODWORD(v133) = v133 & 0xFFFF00FF | ((v249[v139[14] ^ 0xE4] + (v139[14] ^ 0xEB) - 39) << 8);
  *(void *)(v45 - 224) = 3;
  int v148 = v134[v139[3] ^ 0xDCLL] ^ 0x18 | v147;
  *(void *)(v45 - 248) = 13;
  int v149 = v248[v139[13] ^ 0x92] ^ 0x81;
  *(void *)(v45 - 256) = 6;
  int v150 = (v56 << 16) | (((v249[v139[6] ^ 0x4FLL] + (v139[6] ^ 0x40) + 89) ^ 0xB7) << 8) | v141 | (v142 << 24);
  int v151 = v150 - 2 * (v150 & 0x8B326FA ^ v141 & 2) - 2001525000;
  unsigned int v152 = v136 ^ v271 ^ (v148 - ((2 * v148) & 0x285D9816) - 1808872437);
  unsigned int v153 = v137 ^ v272 ^ v151;
  unsigned int v154 = ((v133 | (v149 << 16)) - ((2 * (v133 | (v149 << 16))) & 0x3240352C) + 421534358) ^ v138;
  unsigned int v155 = (v154 - ((2 * v154) & 0x3F83B22A) - 1614685931) ^ v270;
  LODWORD(v144) = v48 ^ v269 ^ (v76
                                            - 2 * (v76 & 0x27252EDF ^ (v145 ^ 0xC6) & 0x12)
                                            - 1490735411);
  uint64_t v156 = (uint64_t)*(&off_100520A90 + (int)v244);
  HIDWORD(v50) = *(_DWORD *)(v156 + 4 * (BYTE3(v144) ^ 0x3F));
  LODWORD(v50) = HIDWORD(v50) ^ 0x1867A844;
  uint64_t v157 = (uint64_t)*(&off_100520A90 + SHIDWORD(v244));
  LODWORD(v133) = (v50 >> 1) ^ ((BYTE2(v155) ^ 0x68)
                              + 1744895299
                              - 2 * ((HIWORD(v155) ^ 0xB768) & 0x53 ^ HIWORD(v155) & 0x10)) ^ *(_DWORD *)(v157 + 4 * (BYTE2(v155) ^ 0x34u));
  uint64_t v158 = (uint64_t)*(&off_100520A90 + v140 - 416);
  LODWORD(v48) = *(_DWORD *)(v158 + 4 * (v144 ^ 0xC6u)) ^ ((BYTE2(v152) ^ 0xD5)
                                                                            + 1744895299
                                                                            - ((2 * (HIWORD(v152) ^ 0x6CD5)) & 0x86)) ^ *(_DWORD *)(v157 + 4 * (BYTE2(v152) ^ 0x89u)) ^ ((v144 ^ 0xAB) - 1482631806 + ((2 * (v144 ^ 0xAB) + 254) & 0x204 ^ 0xEFFBFBFF));
  unsigned int v159 = *(_DWORD *)(v157 + 4 * (BYTE2(v153) ^ 0x8Cu)) ^ *(_DWORD *)(v158 + 4 * (v155 ^ 0xB6u)) ^ ((v155 ^ 0xDB) - 1482631806 + ((2 * (v155 ^ 0xDB) + 254) & 0x204 ^ 0xEFFBFBFF)) ^ ((BYTE2(v153) ^ 0xD0) + 1744895299 - 2 * ((HIWORD(v153) ^ 0xC8D0) & 0x4F ^ HIWORD(v153) & 0xC));
  HIDWORD(v50) = *(_DWORD *)(v156 + 4 * (HIBYTE(v153) ^ 0xC8));
  LODWORD(v50) = HIDWORD(v50) ^ 0x1867A844;
  LODWORD(v56) = v48 - 432032903 - ((2 * v48) & 0xCC7F66F2);
  os_log_t v160 = (char *)*(&off_100520A90 + SHIDWORD(v243)) - 8;
  LODWORD(v56) = v56 ^ *(_DWORD *)&v160[4 * (BYTE1(v153) ^ 0x2F)];
  LODWORD(v142) = ((BYTE2(v144) ^ 0xAD) + 1744895299 - ((2 * (WORD1(v144) ^ 0x3FAD)) & 0x86)) ^ *(_DWORD *)(v158 + 4 * (v152 ^ 0x1Cu)) ^ ((v152 ^ 0x71) - 1482631806 + ((2 * (v152 ^ 0x71) + 254) & 0x204 ^ 0xEFFBFBFF)) ^ (v50 >> 1);
  HIDWORD(v50) = *(_DWORD *)(v156 + 4 * (HIBYTE(v152) ^ 0x6C));
  LODWORD(v50) = HIDWORD(v50) ^ 0x1867A844;
  LODWORD(v142) = v142 ^ *(_DWORD *)(v157 + 4 * (BYTE2(v144) ^ 0xF1u));
  int v161 = (v50 >> 1) ^ *(_DWORD *)&v160[4 * (BYTE1(v144) ^ 0x29)] ^ (v159 - 432032903 - ((2 * v159) & 0xCC7F66F2));
  unsigned int v162 = *(_DWORD *)(v158 + 4 * (v153 ^ 0x7Du)) ^ *(_DWORD *)&v160[4 * (BYTE1(v152) ^ 0xDE)] ^ ((v153 ^ 0x10) - 1482631806 + ((2 * (v153 ^ 0x10) + 254) & 0x204 ^ 0xEFFBFBFF)) ^ (v133 - 432032903 - ((2 * v133) & 0xCC7F66F2));
  HIDWORD(v50) = *(_DWORD *)(v156 + 4 * (HIBYTE(v155) ^ 0xB7));
  LODWORD(v50) = HIDWORD(v50) ^ 0x1867A844;
  LODWORD(v133) = v162 - 1560072956 - ((2 * v162) & 0x46065A08);
  LOWORD(v153) = (v162 + 11524 - ((2 * v162) & 0x5A08)) ^ v266;
  LODWORD(v144) = (v56 ^ (v50 >> 1)) - ((2 * (v56 ^ (v50 >> 1))) & 0xE8C7455C);
  unsigned int v163 = *(_DWORD *)&v160[4 * (BYTE1(v155) ^ 0x66)] ^ v267 ^ (v142 - 432032903 - ((2 * v142) & 0xCC7F66F2));
  LODWORD(v134) = (v133 ^ v266) >> 16;
  HIDWORD(v50) = *(_DWORD *)(v156 + 4 * ((v133 ^ ~v266) >> 24));
  LODWORD(v50) = HIDWORD(v50) ^ 0x1867A844;
  LODWORD(v76) = v50 >> 1;
  LODWORD(v142) = (v161 + 1719945131 - ((2 * v161) & 0xCD088F56)) ^ v268;
  HIDWORD(v50) = *(_DWORD *)(v156 + 4 * (BYTE3(v142) ^ 0x91));
  LODWORD(v50) = HIDWORD(v50) ^ 0x1867A844;
  int v164 = v50 >> 1;
  HIDWORD(v50) = *(_DWORD *)(v156 + 4 * (HIBYTE(v163) ^ 0xA3));
  LODWORD(v50) = HIDWORD(v50) ^ 0x1867A844;
  LODWORD(v74) = v164 ^ *(_DWORD *)(v157 + 4 * (BYTE2(v163) ^ 0xF0u)) ^ ((BYTE2(v163) ^ 0xAC)
                                                                         + 1744895299
                                                                         - ((v163 >> 15) & 0x86));
  int v165 = (v50 >> 1) ^ *(_DWORD *)(v158 + 4 * (v142 ^ 0x7Bu)) ^ ((v134 ^ 0x49)
                                                                                 + 1744895299
                                                                                 - 2
                                                                                 * ((v134 ^ 0xFF49) & 0x57 ^ v134 & 0x14)) ^ ((v142 ^ 0x16) - 1482631806 + ((2 * (v142 ^ 0x16) + 254) & 0x204 ^ 0xEFFBFBFF)) ^ *(_DWORD *)(v157 + 4 * (v134 ^ 0x15u));
  LODWORD(v144) = (v144 + 1952686766) ^ v265;
  unsigned int v166 = (v165 - 432032903 - ((2 * v165) & 0xCC7F66F2)) ^ *(_DWORD *)&v160[4 * (BYTE1(v144) ^ 0x70)];
  LODWORD(v74) = (v74 - 432032903 - ((2 * v74) & 0xCC7F66F2)) ^ *(_DWORD *)&v160[4
                                                                                               * (BYTE1(v153) ^ 0x2C)];
  unsigned int v167 = v76 ^ *(_DWORD *)(v158 + 4 * (v163 ^ 3u)) ^ *(_DWORD *)(v157
                                                                                                + 4
                                                                                                * (BYTE2(v144) ^ 0xC3u)) ^ ((v163 ^ 0x6E) - 1482631806 + ((2 * (v163 ^ 0x6E) + 254) & 0x204 ^ 0xEFFBFBFF)) ^ ((BYTE2(v144) ^ 0x9F) + 1744895299 - ((2 * (WORD1(v144) ^ 0x259F)) & 0x86));
  LODWORD(v133) = ((BYTE2(v142) ^ 0x72) + 1744895299 - 2 * ((WORD1(v142) ^ 0x9172) & 0x47 ^ WORD1(v142) & 4)) ^ *(_DWORD *)(v157 + 4 * (BYTE2(v142) ^ 0x2Eu));
  HIDWORD(v50) = *(_DWORD *)(v156 + 4 * (BYTE3(v144) ^ 0x25));
  LODWORD(v50) = HIDWORD(v50) ^ 0x1867A844;
  int v168 = ((v153 ^ 0xFC) - 1482631806 + ((2 * (v153 ^ 0xFC) + 254) & 0x204 ^ 0xEFFBFBFF)) ^ *(_DWORD *)&v160[4 * (BYTE1(v163) ^ 0xBD)] ^ *(_DWORD *)(v158 + 4 * (v153 ^ 0x91u)) ^ (v50 >> 1) ^ (v133 - 432032903 - ((2 * v133) & 0xCC7F66F2));
  unsigned int v169 = ((v144 ^ 0xD6) - 1726037377) ^ v263 ^ *(_DWORD *)(v158 + 4 * (v144 ^ 0xBBu)) ^ (v74 + 243405570 - ((2 * v74) & 0x1D042604));
  LODWORD(v144) = *(_DWORD *)&v160[4 * (BYTE1(v142) ^ 0x57)] ^ v86 ^ (v167 - 432032903 - ((2 * v167) & 0xCC7F66F2));
  unsigned int v170 = (v168 - ((2 * v168) & 0xCD9D92B0) + 1724827992) ^ v86 ^ v265;
  LODWORD(v76) = (v166 - 1313978638 - ((2 * v166) & 0x635C8DE4)) ^ v264;
  HIDWORD(v50) = *(_DWORD *)(v156 + 4 * (HIBYTE(v170) ^ 0xA6));
  LODWORD(v50) = HIDWORD(v50) ^ 0x1867A844;
  LODWORD(v142) = ((v166 - 14 - ((2 * v166) & 0xE4)) ^ v264);
  LODWORD(v142) = ((v142 ^ 0xA1) - 1482631806 + ((2 * (v142 ^ 0xA1) + 254) & 0x204 ^ 0xEFFBFBFF)) ^ *(_DWORD *)(v158 + 4 * (v142 ^ 0xCC));
  LODWORD(v74) = *(_DWORD *)(v157 + 4 * (BYTE2(v169) ^ 0xDBu)) ^ ((BYTE2(v169) ^ 0x87)
                                                                  + 1744895299
                                                                  - ((2 * (HIWORD(v169) ^ 0x3A87)) & 0x86)) ^ (v50 >> 1);
  int v171 = (v142 - 432032903 - ((2 * v142) & 0xCC7F66F2)) ^ *(_DWORD *)&v160[4 * (BYTE1(v169) ^ 0xDE)];
  LODWORD(v142) = ((v169 ^ 0x9E)
                 - 1482631806
                 + ((2 * (v169 ^ 0x9E) + 254) & 0x204 ^ 0xEFFBFBFF)) ^ *(_DWORD *)(v158
                                                                                                  + 4 * (v169 ^ 0xF3u));
  LODWORD(v74) = (v74 - 432032903 - ((2 * v74) & 0xCC7F66F2)) ^ *(_DWORD *)&v160[4
                                                                                               * (((unsigned __int16)((v166 + 18162 - ((2 * v166) & 0x8DE4)) ^ v264) >> 8) ^ 0x57)];
  HIDWORD(v50) = *(_DWORD *)(v156 + 4 * (BYTE3(v144) ^ 0x25));
  LODWORD(v50) = HIDWORD(v50) ^ 0x1867A844;
  int v172 = *(_DWORD *)(v157 + 4 * (BYTE2(v170) ^ 0x20u)) ^ BYTE2(v170) ^ (v50 >> 1) ^ (v171
                                                                                     + 1744895299
                                                                                     - ((2 * v171) & 0xD001FA86));
  HIDWORD(v50) = *(_DWORD *)(v156 + 4 * (HIBYTE(v169) ^ 0x3A));
  LODWORD(v50) = HIDWORD(v50) ^ 0x1867A844;
  int v173 = *(_DWORD *)&v160[4 * (BYTE1(v144) ^ 0xD7)] ^ BYTE2(v76) ^ *(_DWORD *)(v157 + 4 * (BYTE2(v76) ^ 0xF6u)) ^ 0x8E3F4E90 ^ (v50 >> 1);
  unsigned int v174 = ((v170 ^ 0x8B) - 1726037377) ^ v262 ^ *(_DWORD *)(v158 + 4 * (v170 ^ 0xE6u)) ^ (v173 + 243405570 - ((2 * v173) & 0x1D042604));
  LODWORD(v56) = *(_DWORD *)&v160[4 * (BYTE1(v170) ^ 0xB)];
  int v175 = *(_DWORD *)(v158 + 4 * (v144 ^ 0xA1u)) ^ ((v144 ^ 0xCC) - 1726037377) ^ (v74 + 243405570 - ((2 * v74) & 0x1D042604));
  unsigned int v176 = (v175 - ((2 * v175) & 0xBF6A693A) + 1605711005) ^ HIDWORD(v260);
  HIDWORD(v50) = *(_DWORD *)(v156 + 4 * ((v76 >> 24) ^ 0x7C));
  LODWORD(v50) = HIDWORD(v50) ^ 0x1867A844;
  LODWORD(v76) = ((v172 ^ 0x7C) - ((2 * (v172 ^ 0x7C)) & 0x3AC5EEDA) + 493025133) ^ v261;
  LODWORD(v144) = v56 ^ HIDWORD(v261) ^ ((BYTE2(v144) ^ 0xA1)
                                                     + 1744895299
                                                     - ((2 * (WORD1(v144) ^ 0x66A1)) & 0x86)) ^ *(_DWORD *)(v157 + 4 * (BYTE2(v144) ^ 0xFDu)) ^ (v50 >> 1) ^ (v142 - 432032903 - ((2 * v142) & 0xCC7F66F2));
  int v177 = (((v172 ^ 0x7C) - ((2 * (v172 ^ 0x7C)) & 0xDA) + 109) ^ v261);
  unsigned int v178 = ((v177 ^ 0x58) - 1482631806 + ((2 * (v177 ^ 0x58) + 254) & 0x204 ^ 0xEFFBFBFF)) ^ *(_DWORD *)(v158 + 4 * (v177 ^ 0x35u));
  unsigned int v179 = v178 - 432032903 - ((2 * v178) & 0xCC7F66F2);
  HIDWORD(v50) = *(_DWORD *)(v156 + 4 * (HIBYTE(v174) ^ 0x2D));
  LODWORD(v50) = HIDWORD(v50) ^ 0x1867A844;
  LODWORD(v74) = (v50 >> 1) ^ *(_DWORD *)(v158 + 4 * (v176 ^ 0x74u)) ^ ((v176 ^ 0x19)
                                                                                         - 1482631806
                                                                                         + ((2
                                                                                           * (v176 ^ 0x19)
                                                                                           + 254) & 0x204 ^ 0xEFFBFBFF));
  HIDWORD(v50) = *(_DWORD *)(v156 + 4 * (HIBYTE(v176) ^ 0x65));
  LODWORD(v50) = HIDWORD(v50) ^ 0x1867A844;
  int v180 = v50 >> 1;
  HIDWORD(v50) = *(_DWORD *)(v156 + 4 * ((v76 >> 24) ^ 0xB6));
  LODWORD(v50) = HIDWORD(v50) ^ 0x1867A844;
  int v181 = v50 >> 1;
  HIDWORD(v50) = *(_DWORD *)(v156 + 4 * (BYTE3(v144) ^ 0xB4));
  LODWORD(v50) = HIDWORD(v50) ^ 0x1867A844;
  unsigned int v182 = v181 ^ *(_DWORD *)(v158 + 4 * (v144 ^ 0x8Bu)) ^ ((v144 ^ 0xE6)
                                                                           - 1482631806
                                                                           + ((2 * (v144 ^ 0xE6) + 254) & 0x204 ^ 0xEFFBFBFF));
  LODWORD(v74) = ((BYTE2(v144) ^ 0x59) + 1744895299 - ((2 * (WORD1(v144) ^ 0xB459)) & 0x86)) ^ *(_DWORD *)(v157 + 4 * (BYTE2(v144) ^ 5u)) ^ *(_DWORD *)&v160[4 * (BYTE1(v76) ^ 0x39)] ^ (v74 - 432032903 - ((2 * v74) & 0xCC7F66F2));
  LODWORD(v133) = BYTE2(v174) ^ 0x72;
  LODWORD(v142) = v133 + 1744895299 - ((2 * (HIWORD(v174) ^ 0x2D72)) & 0x86);
  int v183 = v174;
  LODWORD(v56) = (v174 ^ 0x16)
               - 1482631806
               + ((2 * (v174 ^ 0x16) + 254) & 0x204 ^ 0xEFFBFBFF);
  unsigned int v184 = ((BYTE2(v176) ^ 0xC) + 1744895299 - ((v176 >> 15) & 0x86)) ^ v259 ^ *(_DWORD *)&v160[4 * (BYTE1(v174) ^ 0x57)] ^ *(_DWORD *)(v157 + 4 * (BYTE2(v176) ^ 0x50u)) ^ (v182 - 432032903 - ((2 * v182) & 0xCC7F66F2));
  LODWORD(v134) = *(_DWORD *)&v160[4 * (BYTE1(v176) ^ 0x4D)] ^ HIDWORD(v259) ^ ((v50 >> 1)
                                                                              - 432032903
                                                                              - ((2 * (v50 >> 1)) & 0xCC7F66F2)) ^ *(_DWORD *)(v158 + 4 * (v183 ^ 0x7Bu)) ^ v56;
  unsigned int v185 = (v74 + 549975522 - ((2 * v74) & 0x418FEBC4)) ^ v260;
  LODWORD(v76) = v134 ^ *(_DWORD *)(v157 + 4 * (BYTE2(v76) ^ 0xF7u)) ^ ((BYTE2(v76) ^ 0xAB)
                                                                                      + 1744895299
                                                                                      - ((2
                                                                                        * ((v76 >> 16) ^ 0xF5AB)) & 0x86));
  LODWORD(v144) = *(_DWORD *)&v160[4 * (BYTE1(v144) ^ 0x34)] ^ HIDWORD(v258) ^ *(_DWORD *)(v157
                                                                                         + 4
                                                                                         * (v133 ^ 0x5C)) ^ v142 ^ v179 ^ v180;
  HIDWORD(v50) = *(_DWORD *)(v156 + 4 * (BYTE3(v144) ^ 0xF9));
  LODWORD(v50) = HIDWORD(v50) ^ 0x1867A844;
  int v186 = (v50 >> 1) - 432032903 - ((2 * (v50 >> 1)) & 0xCC7F66F2);
  LODWORD(v74) = ((BYTE2(v76) ^ 0x81)
                + 1744895299
                - 2 * (((v76 >> 16) ^ 0x1481) & 0x5B ^ (v76 >> 16) & 0x18)) ^ *(_DWORD *)(v157 + 4 * (BYTE2(v76) ^ 0xDDu));
  LODWORD(v133) = ((v76 ^ 0x51)
                 - 1482631806
                 + ((2 * (v76 ^ 0x51) + 254) & 0x204 ^ 0xEFFBFBFF)) ^ *(_DWORD *)(v158
                                                                                                 + 4
                                                                                                 * (v76 ^ 0x3Cu));
  LODWORD(v134) = *(_DWORD *)(v157 + 4 * (BYTE2(v184) ^ 0xDBu)) ^ ((BYTE2(v184) ^ 0x87)
                                                                   + 1744895299
                                                                   - ((2 * (HIWORD(v184) ^ 0x7787)) & 0x86));
  LODWORD(v135) = ((v144 ^ 0xBAD1827D) >> 16) ^ *(_DWORD *)(v157
                                                                                         + 4
                                                                                         * (((v144 ^ 0xBAD1827D) >> 16) ^ 0x5Cu)) ^ (v133 + 1744895299 - ((2 * v133) & 0xD001FA86));
  HIDWORD(v50) = *(_DWORD *)(v156 + 4 * ((v76 >> 24) ^ 0x14));
  LODWORD(v50) = HIDWORD(v50) ^ 0x1867A844;
  LODWORD(v133) = v50 >> 1;
  HIDWORD(v50) = *(_DWORD *)(v156 + 4 * (HIBYTE(v185) ^ 0x9A));
  LODWORD(v50) = HIDWORD(v50) ^ 0x1867A844;
  LODWORD(v74) = *(_DWORD *)(v158 + 4 * (v144 ^ 0x10u)) ^ *(_DWORD *)&v160[4 * (BYTE1(v184) ^ 0xDE)] ^ (v74 - 432032903 - ((2 * v74) & 0xCC7F66F2)) ^ ((v144 ^ 0x7D) - 1482631806 + ((2 * (v144 ^ 0x7D) + 254) & 0x204 ^ 0xEFFBFBFF)) ^ (v50 >> 1);
  HIDWORD(v50) = *(_DWORD *)(v156 + 4 * (HIBYTE(v184) ^ 0x77));
  LODWORD(v50) = HIDWORD(v50) ^ 0x1867A844;
  LODWORD(v135) = (v50 >> 1) ^ *(_DWORD *)&v160[4 * (BYTE1(v185) ^ 0x2D)] ^ (v135
                                                                           - 432032903
                                                                           - ((2 * v135) & 0xCC7F66F2));
  unsigned int v187 = *(_DWORD *)&v160[4 * (BYTE1(v76) ^ 0x34)] ^ v257 ^ v186 ^ ((v184 ^ 0x9E)
                                                                  - 1482631807
                                                                  - ((2 * (v184 ^ 0x9E) + 306021630) & 0x10040604)) ^ *(_DWORD *)(v157 + 4 * (BYTE2(v185) ^ 0xB5u)) ^ ((BYTE2(v185) ^ 0xE9) + 1744895299 - ((2 * (HIWORD(v185) ^ 0x9AE9)) & 0x86)) ^ *(_DWORD *)(v158 + 4 * (v184 ^ 0xF3u));
  LODWORD(v144) = *(_DWORD *)&v160[4 * (BYTE1(v144) ^ 0x60)] ^ HIDWORD(v256) ^ ((v185 ^ 0xA8)
                                                                              - 1482631806
                                                                              + ((2 * (v185 ^ 0xA8)
                                                                                + 254) & 0x204 ^ 0xEFFBFBFF)) ^ v133 ^ (v134 - 432032903 - ((2 * v134) & 0xCC7F66F2)) ^ *(_DWORD *)(v158 + 4 * (v185 ^ 0xC5u));
  unsigned int v188 = (v74 - 350983233 - ((2 * v74) & 0xD628D77E)) ^ v258;
  HIDWORD(v50) = *(_DWORD *)(v156 + 4 * (BYTE3(v144) ^ 0x6D));
  LODWORD(v50) = HIDWORD(v50) ^ 0x1867A844;
  LODWORD(v76) = v50 >> 1;
  LODWORD(v142) = *(_DWORD *)(v156 + 4 * (HIBYTE(v188) ^ 0xFD));
  LODWORD(v74) = *(_DWORD *)(v157 + 4 * (BYTE2(v144) ^ 0x52u)) ^ (v142 << 31) ^ (v142 >> 1) ^ ((BYTE2(v144) ^ 0xE) + 1744895299 - ((2 * (WORD1(v144) ^ 0x2E0E)) & 0x86));
  unsigned int v189 = ((v144 ^ 0x4A) - 1482631806 + ((2 * (v144 ^ 0x4A) + 254) & 0x204 ^ 0xEFFBFBFF)) ^ *(_DWORD *)(v158 + 4 * (v144 ^ 0x27u));
  LODWORD(v135) = (v135 - ((2 * v135) & 0x1C931B90) + 239701448) ^ v103;
  HIDWORD(v50) = *(_DWORD *)(v156 + 4 * ((v135 >> 24) ^ 0xF1));
  LODWORD(v50) = HIDWORD(v50) ^ 0x1867A844;
  int v190 = (v50 >> 1) ^ *(_DWORD *)&v160[4 * (BYTE1(v188) ^ 0xA4)] ^ (v189 - 432032903 - ((2 * v189) & 0xCC7F66F2));
  LODWORD(v142) = *(_DWORD *)(v157 + 4 * (BYTE2(v187) ^ 0x24u)) ^ BYTE2(v187) ^ (v190
                                                                                 + 1744895299
                                                                                 - ((2 * v190) & 0xD001FA86));
  unsigned int v191 = *(_DWORD *)(v157 + 4 * (BYTE2(v135) ^ 0x1Du)) ^ v76 ^ *(_DWORD *)(v158
                                                                                         + 4
                                                                                         * (v188 ^ 0x4Du)) ^ ((v188 ^ 0x20) - 1482631806 + ((2 * (v188 ^ 0x20) + 254) & 0x204 ^ 0xEFFBFBFF)) ^ ((BYTE2(v135) ^ 0x41) + 1744895299 - ((2 * ((v135 >> 16) ^ 0xF141)) & 0x86));
  LODWORD(v133) = v191 - 432032903 - ((2 * v191) & 0xCC7F66F2);
  unsigned int v192 = ((v187 ^ 0x34) - 1482631806 + ((2 * (v187 ^ 0x34) + 254) & 0x204 ^ 0xEFFBFBFF)) ^ *(_DWORD *)(v158 + 4 * (v187 ^ 0x59u)) ^ *(_DWORD *)&v160[4 * (BYTE1(v135) ^ 2)];
  LODWORD(v135) = v135;
  LODWORD(v74) = v192 ^ ((v74 ^ 0xC33D422)
                       - 432032903
                       - 2 * ((v74 ^ 0xC33D422) & 0x663FB37D ^ v74 & 4));
  unsigned int v193 = ((v135 ^ 0x4D) - ((2 * (v135 ^ 0x4D) + 4031742) & 0x3D06F2) + 2136897016) ^ *(_DWORD *)&v160[4 * (BYTE1(v144) ^ 0x65)];
  LODWORD(v135) = (v193 + 243405570 - ((2 * v193) & 0x1D042604)) ^ *(_DWORD *)(v158
                                                                             + 4 * (v135 ^ 0x20u));
  int v194 = *(_DWORD *)(v157 + 4 * (BYTE2(v188) ^ 0x40u)) ^ ((BYTE2(v188) ^ 0x1C) + 1744895299 - ((v188 >> 15) & 0x86));
  unsigned int v195 = v194 ^ 0x87C003F7 ^ (v135 - 992138460 - ((2 * v135) & 0x89BA5648));
  LODWORD(v135) = v135 ^ 0x6500C283;
  int v196 = (v135 + v195 + 1) ^ ((v194 ^ 0x261DEA50) + 1);
  HIDWORD(v50) = *(_DWORD *)(v156 + 4 * (HIBYTE(v187) ^ 0x6E));
  LODWORD(v50) = HIDWORD(v50) ^ 0x1867A844;
  LODWORD(v134) = *(_DWORD *)&v160[4 * (BYTE1(v187) ^ 0x38)];
  LODWORD(v76) = ((v142 ^ 0x78) - 1042967418 - ((2 * v142) & 0x83AB290C)) ^ v255;
  int v197 = ((v194 ^ 0x1D3F3E8B ^ (v196 - 992138460 - ((2 * v196) & 0x89BA5648))) + v135) ^ (v50 >> 1);
  int v198 = v197 - ((2 * v197) & 0x72C99DF8);
  unsigned int v199 = v134 ^ HIDWORD(v255) ^ v133;
  LODWORD(v144) = (v74 + 2060028698 - ((2 * v74) & 0xF5931634)) ^ v256;
  LODWORD(v74) = ((BYTE2(v144) ^ 0xE9) + 1744895299 - 2 * ((WORD1(v144) ^ 0xB8E9) & 0x47 ^ WORD1(v144) & 4)) ^ *(_DWORD *)(v157 + 4 * (BYTE2(v144) ^ 0xB5u));
  unsigned int v200 = v74 - 432032903 - ((2 * v74) & 0xCC7F66F2);
  HIDWORD(v50) = *(_DWORD *)(v156 + 4 * ((v76 >> 24) ^ 0x9D));
  LODWORD(v50) = HIDWORD(v50) ^ 0x1867A844;
  LODWORD(v134) = v50 >> 1;
  HIDWORD(v50) = *(_DWORD *)(v156 + 4 * (HIBYTE(v199) ^ 0x61));
  LODWORD(v50) = HIDWORD(v50) ^ 0x1867A844;
  LODWORD(v74) = *(_DWORD *)(v158 + 4 * (v144 ^ 0xC5u)) ^ *(_DWORD *)(v157
                                                                                       + 4 * (BYTE2(v76) ^ 0x28u)) ^ (v50 >> 1) ^ ((v144 ^ 0xA8) - 1482631806 + ((2 * (v144 ^ 0xA8) + 254) & 0x204 ^ 0xEFFBFBFF)) ^ ((BYTE2(v76) ^ 0x74) + 1744895299 - ((2 * ((v76 >> 16) ^ 0x9D74)) & 0x86));
  unsigned int v201 = (v198 - 1184575748) ^ HIDWORD(v254);
  LODWORD(v135) = v134 ^ ((BYTE2(v201) ^ 0xEC)
                                      + 1744895299
                                      - 2 * ((HIWORD(v201) ^ 0x58EC) & 0x53 ^ HIWORD(v201) & 0x10)) ^ *(_DWORD *)(v157 + 4 * (BYTE2(v201) ^ 0xB0u));
  HIDWORD(v50) = *(_DWORD *)(v156 + 4 * (BYTE3(v144) ^ 0xB8));
  LODWORD(v50) = HIDWORD(v50) ^ 0x1867A844;
  int v202 = v199;
  int v203 = (v199 ^ 0x85) - 1482631807 - ((2 * (v199 ^ 0x85) + 306021630) & 0x10040604);
  int v204 = *(_DWORD *)(v158 + 4 * (((v198 - 4) ^ BYTE4(v254)) ^ 0xE3u)) ^ *(_DWORD *)(v157 + 4 * (BYTE2(v199) ^ 0x54u)) ^ ((BYTE2(v199) ^ 8) + 1744895299 - ((v199 >> 15) & 0x86)) ^ (v50 >> 1) ^ ((((v198 - 4) ^ BYTE4(v254)) ^ 0x8E) - 1482631806 + ((2 * (((v198 - 4) ^ BYTE4(v254)) ^ 0x8E) + 254) & 0x204 ^ 0xEFFBFBFF));
  unsigned int v205 = *(_DWORD *)&v160[4 * (BYTE1(v201) ^ 0xE0)] ^ HIDWORD(v253) ^ (v74
                                                                     - 432032903
                                                                     - ((2 * v74) & 0xCC7F66F2));
  unsigned int v206 = (v204 - 432032903 - ((2 * v204) & 0xCC7F66F2)) ^ *(_DWORD *)&v160[4 * (BYTE1(v76) ^ 0xBD)];
  HIDWORD(v50) = *(_DWORD *)(v156 + 4 * (HIBYTE(v201) ^ 0x58));
  LODWORD(v50) = HIDWORD(v50) ^ 0x1867A844;
  unsigned int v207 = *(_DWORD *)(v158 + 4 * ((((v142 ^ 0x78) - 122 - ((2 * v142) & 0xC)) ^ v255) ^ 0xB4u)) ^ *(_DWORD *)&v160[4 * (BYTE1(v199) ^ 0x8F)] ^ ((v76 ^ 0xD9) - 1482631806 + ((2 * (v76 ^ 0xD9) + 254) & 0x204 ^ 0xEFFBFBFF));
  int v208 = *(_DWORD *)&v160[4 * (BYTE1(v144) ^ 0x2D)];
  unsigned int v209 = (v206 + 76448297 - ((2 * v206) & 0x91D0452)) ^ v254;
  LODWORD(v144) = ((v207 ^ v200 ^ (v50 >> 1)) - ((2 * (v207 ^ v200 ^ (v50 >> 1))) & 0x32C11410) + 425757192) ^ HIDWORD(v252);
  LODWORD(v76) = v208 ^ v253 ^ v203 ^ *(_DWORD *)(v158 + 4 * (v202 ^ 0xE8u)) ^ (v135
                                                                                - 432032903
                                                                                - ((2 * v135) & 0xCC7F66F2));
  LODWORD(v74) = ((BYTE2(v76) ^ 0x66)
                + 1744895299
                - 2 * (((v76 >> 16) ^ 0xAE66) & 0x5B ^ (v76 >> 16) & 0x18)) ^ *(_DWORD *)(v157 + 4 * (BYTE2(v76) ^ 0x3Au));
  HIDWORD(v50) = *(_DWORD *)(v156 + 4 * (BYTE3(v144) ^ 0x26));
  LODWORD(v50) = HIDWORD(v50) ^ 0x1867A844;
  int v210 = ((v50 >> 1) + 1744895299 - ((2 * (v50 >> 1)) & 0xD001FA86)) ^ *(_DWORD *)(v157 + 4 * (BYTE2(v209) ^ 0x40u));
  HIDWORD(v50) = *(_DWORD *)(v156 + 4 * (HIBYTE(v209) ^ 0xEF));
  LODWORD(v50) = HIDWORD(v50) ^ 0x1867A844;
  LODWORD(v135) = (v50 >> 1) ^ *(_DWORD *)(v158 + 4 * (v144 ^ 0x67u)) ^ ((v144 ^ 0xA)
                                                                                          - 1482631806
                                                                                          + ((2
                                                                                            * (v144 ^ 0xA)
                                                                                            + 254) & 0x204 ^ 0xEFFBFBFF));
  unsigned int v211 = *(_DWORD *)(v158 + 4 * (v205 ^ 0x27u)) ^ ((v205 ^ 0x4A)
                                                                    - 1482631806
                                                                    + ((2 * (v205 ^ 0x4A) + 254) & 0x204 ^ 0xEFFBFBFF));
  HIDWORD(v50) = *(_DWORD *)(v156 + 4 * ((v76 >> 24) ^ 0xAE));
  LODWORD(v50) = HIDWORD(v50) ^ 0x1867A844;
  int v212 = (v50 >> 1) ^ *(_DWORD *)(v157 + 4 * (BYTE2(v144) ^ 0x2Au)) ^ (v211 + 1744895299 - ((2 * v211) & 0xD001FA86));
  HIDWORD(v50) = *(_DWORD *)(v156 + 4 * (HIBYTE(v205) ^ 0xDC));
  LODWORD(v50) = HIDWORD(v50) ^ 0x1867A844;
  unsigned int v213 = v210 - 432032903 - ((2 * v210) & 0xCC7F66F2);
  unsigned int v214 = ((BYTE2(v205) ^ 0xE) + 1744895299 - ((2 * (HIWORD(v205) ^ 0xDC0E)) & 0x86)) ^ v252 ^ *(_DWORD *)(v157 + 4 * (BYTE2(v205) ^ 0x52u)) ^ *(_DWORD *)&v160[4 * (BYTE1(v76) ^ 0x7C)] ^ (v135 - 432032903 - ((2 * v135) & 0xCC7F66F2));
  LODWORD(v133) = v76;
  LODWORD(v134) = (v76 ^ 0xB3)
                - 1482631806
                + ((2 * (v76 ^ 0xB3) + 254) & 0x204 ^ 0xEFFBFBFF);
  LODWORD(v76) = *(_DWORD *)&v160[4 * (BYTE1(v144) ^ 0x41)] ^ HIDWORD(v251) ^ *(_DWORD *)(v158
                                                                                        + 4
                                                                                        * (v209 ^ 0x4Du)) ^ (v50 >> 1) ^ ((v209 ^ 0x20) - 1482631806 + ((2 * (v209 ^ 0x20) + 254) & 0x204 ^ 0xEFFBFBFF)) ^ (v74 - 432032903 - ((2 * v74) & 0xCC7F66F2));
  LODWORD(v74) = WORD1(v144);
  LODWORD(v144) = v213 ^ HIDWORD(v250) ^ *(_DWORD *)&v160[4 * (BYTE1(v205) ^ 0x65)] ^ *(_DWORD *)(v158
                                                                                                + 4
                                                                                                * (v133 ^ 0xDE)) ^ v134;
  unsigned int v215 = *(_DWORD *)&v160[4 * (BYTE1(v209) ^ 0xA4)] ^ v251 ^ (v212 - 432032903 - ((2 * v212) & 0xCC7F66F2));
  LODWORD(v74) = (v160[4 * (BYTE1(v209) ^ 0xA4)] ^ v251 ^ (v212 + 121 - ((2 * v212) & 0xF2)) ^ v74);
  HIDWORD(v50) = *(_DWORD *)(v156 + 4 * (BYTE3(v144) ^ 0x6C));
  LODWORD(v50) = HIDWORD(v50) ^ 0x1867A844;
  LODWORD(v135) = v50 >> 1;
  HIDWORD(v50) = *(_DWORD *)(v156 + 4 * (HIBYTE(v214) ^ 0xF7));
  LODWORD(v50) = HIDWORD(v50) ^ 0x1867A844;
  LODWORD(v134) = v50 >> 1;
  LODWORD(v142) = ((BYTE2(v144) ^ 0xC8) + 1744895299 - ((2 * (WORD1(v144) ^ 0x6CC8)) & 0x86)) ^ *(_DWORD *)(v157 + 4 * (BYTE2(v144) ^ 0x94u));
  HIDWORD(v50) = *(_DWORD *)(v156 + 4 * (HIBYTE(v215) ^ 0xE7));
  LODWORD(v50) = HIDWORD(v50) ^ 0x1867A844;
  int v216 = v50 >> 1;
  LODWORD(v74) = v135 ^ *(_DWORD *)(v158 + 4 * (v74 ^ 0x3D)) ^ *(_DWORD *)(v157 + 4 * (BYTE2(v214) ^ 0xB5u)) ^ ((BYTE2(v214) ^ 0xE9) + 1744895299 - ((2 * (HIWORD(v214) ^ 0xF7E9)) & 0x86)) ^ ((v74 ^ 0x50) - 1482631806 + ((2 * (v74 ^ 0x50) + 254) & 0x204 ^ 0xEFFBFBFF));
  LODWORD(v74) = (v74 - 432032903 - ((2 * v74) & 0xCC7F66F2)) ^ *(_DWORD *)&v160[4 * (BYTE1(v76) ^ 0xEC)];
  unsigned int v217 = v134 ^ *(_DWORD *)(v157 + 4 * (BYTE2(v76) ^ 0xA7u)) ^ *(_DWORD *)(v158
                                                                                         + 4
                                                                                         * ((v144 ^ BYTE2(v209)) ^ 0x32u)) ^ (((v144 ^ BYTE2(v209)) ^ 0x5F) - 1482631806 + ((2 * ((v144 ^ BYTE2(v209)) ^ 0x5F) + 254) & 0x204 ^ 0xEFFBFBFF)) ^ ((BYTE2(v76) ^ 0xFB) + 1744895299 - ((2 * ((v76 >> 16) ^ 0x57FB)) & 0x86));
  HIDWORD(v50) = *(_DWORD *)(v156 + 4 * ((v76 >> 24) ^ 0x57));
  LODWORD(v50) = HIDWORD(v50) ^ 0x1867A844;
  unsigned int v218 = (v217 - 432032903 - ((2 * v217) & 0xCC7F66F2)) ^ *(_DWORD *)&v160[4 * (BYTE1(v215) ^ 0x6D)];
  LODWORD(v133) = *(_DWORD *)&v160[4 * (BYTE1(v214) ^ 0x2D)];
  int v219 = ((BYTE2(v215) ^ 0x31) + 1744895299 - ((2 * (HIWORD(v215) ^ 0xE731)) & 0x86)) ^ *(_DWORD *)(v158
                                                                                                  + 4 * (v214 ^ 0xC5u)) ^ ((v214 ^ 0xA8) - 1482631806 + ((2 * (v214 ^ 0xA8) + 254) & 0x204 ^ 0xEFFBFBFF)) ^ *(_DWORD *)(v157 + 4 * (BYTE2(v215) ^ 0x6Du)) ^ (v50 >> 1);
  uint64_t v220 = *(void *)(v45 - 120);
  LODWORD(v144) = v243 ^ *(_DWORD *)&v160[4 * (BYTE1(v144) ^ 0x61)] ^ (v219 - 432032903 - ((2 * v219) & 0xCC7F66F2));
  int v221 = v144 ^ 0xADE748E2;
  LODWORD(v160) = (v218 + 1537916051 - ((2 * v218) & 0xB7557926)) ^ HIDWORD(v245);
  unsigned int v222 = (v74 + 164443165 - ((2 * v74) & 0x139A683A)) ^ v127 ^ 0xB7EC63;
  LODWORD(v158) = v133 ^ HIDWORD(a21) ^ v216 ^ *(_DWORD *)(v158 + 4 * (v76 ^ 0x42u)) ^ ((v76 ^ 0x2F) - 1482631806 + ((2 * (v76 ^ 0x2F) + 254) & 0x204 ^ 0xEFFBFBFF)) ^ (v142 - 432032903 - ((2 * v142) & 0xCC7F66F2));
  v223 = (char *)*(&off_100520A90 + SHIDWORD(v242)) - 8;
  int v224 = *(_DWORD *)(v45 - 128);
  v225 = (char *)*(&off_100520A90 + v224 - 496) - 4;
  LODWORD(v133) = *(_DWORD *)&v223[4 * (v160 ^ 0xA2)];
  v226 = (char *)*(&off_100520A90 + v224 - 359) - 8;
  LODWORD(v74) = (*(_DWORD *)&v226[4 * (BYTE2(v160) ^ 0x9E)] - 554352298) ^ (*(_DWORD *)&v223[4
                                                                                            * (v158 ^ 0xC9)]
                                                                           + 1768770673);
  LODWORD(v134) = *(_DWORD *)&v223[4 * (v144 ^ 0xC8)];
  uint64_t v227 = v134 - ((2 * v134 - 757425950) & 0xCAA4CC96);
  uint64_t v228 = (*(_DWORD *)&v226[4 * (BYTE2(v158) ^ 0x38)] - 554352298) ^ (*(_DWORD *)&v225[4 * (BYTE3(v144) ^ 0x89)]
                                                                                 - 748464846);
  LODWORD(v144) = *(_DWORD *)&v223[4 * (v222 ^ 0xB9)];
  uint64_t v229 = *(unsigned int *)&v225[4 * ((v160 >> 24) ^ 0xE7)];
  v230 = (char *)*(&off_100520A90 + v224 - 552) - 4;
  LODWORD(v56) = *(_DWORD *)&v230[4 * (BYTE1(v160) ^ 0xA0)];
  uint64_t v231 = *(unsigned int *)&v230[4 * (BYTE1(v158) ^ 0xE9)];
  int v232 = *(_DWORD *)&v226[4 * (BYTE2(v221) ^ 0x6B)];
  LODWORD(v74) = (v74 - 447584693 - ((2 * v74) & 0xCAA4CC96)) ^ *(_DWORD *)&v230[4
                                                                                               * (BYTE1(v221) ^ 0x29)] ^ (*(_DWORD *)&v225[4 * (HIBYTE(v222) ^ 0x65)] - 748464846);
  unsigned int v233 = *(_DWORD *)&v230[4 * (BYTE1(v222) ^ 0x74)] ^ v245 ^ ((v228 ^ (v133 + 1768770673))
                                                            - 447584693
                                                            - ((2 * (v228 ^ (v133 + 1768770673))) & 0xCAA4CC96));
  LODWORD(v160) = v245 ^ HIDWORD(a21) ^ v127 ^ 0xB7EC63 ^ (v74 + 164443165 - ((2 * v74) & 0x139A683A));
  LODWORD(v156) = v56 ^ v245 ^ HIDWORD(a21) ^ (v227 + 1321185980) ^ (*(_DWORD *)&v225[4 * (BYTE3(v158) ^ 0xB8)]
                                                                                 - 748464846) ^ (*(_DWORD *)&v226[4 * (BYTE2(v222) ^ 0x1D)]
                                                                                               - 554352298);
  v234 = (char *)*(&off_100520A90 + SHIDWORD(v241)) - 4;
  *(unsigned char *)(v220 + *(void *)(v45 - 256)) = v234[((unsigned __int16)(*(_WORD *)&v230[4 * (BYTE1(v222) ^ 0x74)] ^ v245 ^ ((v228 ^ ((_WORD)v133 + 19569)) + 26187 - ((2 * (v228 ^ ((_WORD)v133 + 19569))) & 0xCC96))) >> 8) ^ 0x99] ^ 0xCD;
  uint64_t v235 = (uint64_t)*(&off_100520A90 + v224 - 424);
  *(unsigned char *)(v220 + *(void *)(v45 - 248)) = (*(unsigned char *)(v235 + (BYTE2(v160) ^ 0xADLL)) - 13) ^ 0xC5;
  uint64_t v236 = (uint64_t)*(&off_100520A90 + v224 - 472);
  *(unsigned char *)(v220 + *(void *)(v45 - 208)) = *(unsigned char *)(v236 + (v233 ^ 0xFCLL)) ^ 0xFD;
  *(unsigned char *)(v220 + *(void *)(v45 - 240)) = (*(unsigned char *)(v235 + (BYTE2(v156) ^ 0x8CLL)) - 13) ^ 0x47;
  v237 = (char *)*(&off_100520A90 + v224 - 441) - 8;
  *(unsigned char *)(v220 + *(void *)(v45 - 216)) = (v237[HIBYTE(v233) ^ 0xDELL] - 6) ^ 0x1B;
  *(unsigned char *)(v220 + *(void *)(v45 - 232)) = ((*(unsigned char *)(v235 + (BYTE2(v233) ^ 0x15))
                                              + ((*(unsigned char *)(v235 + (BYTE2(v233) ^ 0x15)) - 13) ^ 0xDA)
                                              - 12) ^ 0xFE)
                                            + *(unsigned char *)(v235 + (BYTE2(v233) ^ 0x15))
                                            - 13;
  uint64_t v238 = v242 ^ v231 ^ (v232 - 554352298) ^ (v144 + 1768770673) ^ (v229 - ((2 * v229 - 1496929692) & 0xCAA4CC96) - 1196049539);
  *(unsigned char *)(v220 + *(void *)(v45 - 224)) = *(unsigned char *)(v236 + (v238 ^ 5)) ^ 0xF;
  uint64_t v239 = *(void *)(v45 - 184);
  *(unsigned char *)(v220 + *(void *)(v45 - 176)) = (v237[(v160 >> 24) ^ 0x4ELL] - 6) ^ 0xE6;
  *(unsigned char *)(v220 + *(void *)(v45 - 168)) = (v237[BYTE3(v156) ^ 0x9CLL] - 6) ^ 0xB8;
  *(unsigned char *)(v220 + v239) = (v237[BYTE3(v238) ^ 0x67] - 6) ^ 0x91;
  *(unsigned char *)(v220 + *(void *)(v45 - 160)) = *(unsigned char *)(v236 + (v156 ^ 0xF2)) ^ 5;
  *(unsigned char *)(v220 + *(void *)(v45 - 200)) = v234[BYTE1(v156) ^ 0x1ELL] ^ 0x6E;
  *(unsigned char *)(v220 + *(void *)(v45 - 152)) = v234[BYTE1(v238) ^ 0x33] ^ 0x77;
  *(unsigned char *)(v220 + *(void *)(v45 - 192)) = v234[BYTE1(v160) ^ 0xBCLL] ^ 0xB9;
  *(unsigned char *)(v220 + *(void *)(v45 - 144)) = *(unsigned char *)(v236 + (v160 ^ 0x9FLL)) ^ 0xFD;
  *(unsigned char *)(v220 + *(void *)(v45 - 136)) = (*(unsigned char *)(v235 + (BYTE2(v238) ^ 0xDLL)) - 13) ^ 0x8E;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char *, char *, char *, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, unint64_t, unint64_t, uint64_t, uint64_t, uint64_t))(a43 + 8 * ((30 * (((v239 - 2105325624 - ((2 * v239 + 32) & 0x5068F90) + 16) ^ 0x828347C8) < a41)) ^ (v224 + 3434))))(v236, v238, v239, v227, v226, v229, v228, v231, a9, a10, a11, v241, v242, v243, v244, v245, v246, v247, v248,
           v249,
           a21,
           v250,
           v251,
           v252,
           v253,
           v254,
           v255,
           v256,
           v257,
           v258,
           v259,
           v260,
           v261);
}

uint64_t sub_100105B00(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  *(_DWORD *)(a16 + 4 * v19) = ((v18 - 1229148694) ^ 0xB6BCB663)
                               + v16
                               - ((2 * ((v18 - 1229148694) ^ 0xB6BCB663)) & 0x608967EC);
  BOOL v21 = a7 + 515644271 > ((v18 - 1734) ^ 0x986) + 383562910 || a7 + 515644271 < a4;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v17 + 8 * ((1388 * v21) ^ (v18 - 1734))))(a1, a2, a13);
}

uint64_t sub_100105B18@<X0>(uint64_t a1@<X8>)
{
  STACK[0x6C8] = 0;
  STACK[0x678] = 0x79503A3CC44F2EC3;
  return (*(uint64_t (**)(void))(v3 + 8
                                   * ((((((v2 - 4400) ^ (a1 == v1)) & 1) == 0) * (((v2 - 4464) | 0x44) - 74)) | v2)))();
}

uint64_t sub_100105B88()
{
  return sub_10018BD08();
}

uint64_t sub_100105BA8()
{
  BOOL v4 = (*(uint64_t (**)(void))(v3 + 8 * (v2 ^ 0x19EF)))(v0 ^ v1) == 0;
  return (*(uint64_t (**)(void))(v3 + 8 * ((v4 * ((v2 - 1679389708) & 0x64196F7F ^ 0x74D)) ^ v2)))();
}

uint64_t sub_100105C04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, unint64_t *a19, int a20,uint64_t a21,unsigned int a22,int a23,int a24)
{
  unsigned int v28 = 1314530549 * ((2 * (&a19 & 0x713A91B0) - &a19 + 247819848) ^ 0xBFCCE886);
  a21 = a14;
  a24 = v28 ^ 0x4EA001FD;
  a22 = 864341482 - v28;
  a19 = &STACK[0x70766EB78D2F3F48];
  a20 = (v25 + 1780979362) ^ v28;
  uint64_t v29 = (*(uint64_t (**)(unint64_t **))(v26 + 8 * (v25 + 2975)))(&a19);
  return (*(uint64_t (**)(uint64_t))(v26
                                            + 8
                                            * ((13
                                              * (((v27 + (v25 ^ 0xAA) - 31) ^ (a23 == v24 + 26 * (v25 ^ 0x6AA) - 806)) & 1)) ^ v25)))(v29);
}

uint64_t sub_100105CF8(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,int a23,char a24,int a25,int a26)
{
  int v29 = (a26 ^ v28) - ((2 * (a26 ^ v28)) & 0xAD52B76) + 90871227;
  return (*(uint64_t (**)(void))(v26
                              + 8
                              * ((v27 + 979) ^ (7971
                                              * (((v29 << (a24 ^ ((v27 - 113) | 0x48) ^ 0x8F)) & 0xFC7C7BB4 ^ 0x8542B34)
                                               + (v29 ^ 0xFB54A861)
                                               + 1204812672 == a2)))))();
}

uint64_t sub_100105DB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v11 = (v8 + v6);
  long long v12 = *(_OWORD *)(v5 + v11 - 15);
  long long v13 = *(_OWORD *)(v5 + v11 - 31);
  uint64_t v14 = v9 + v11;
  *(_OWORD *)(v14 - 15) = v12;
  *(_OWORD *)(v14 - 31) = v13;
  return (*(uint64_t (**)(void))(v10
                              + 8
                              * ((150 * (((a5 - 345284377) & 0x149499CF ^ 0x9EF) == (v7 & 0xFFFFFFE0))) ^ (a5 - 1986))))();
}

uint64_t sub_100105E20(uint64_t a1, int a2, uint64_t a3, uint64_t a4, int a5, int a6)
{
  *(void *)(a3 + (a5 + v6)) = *(void *)(v7 + (a5 + v6));
  return (*(uint64_t (**)(void))(v9 + 8 * (((a6 == 0) * v8) ^ a2)))();
}

uint64_t sub_100105E50()
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((127 * (((v0 ^ 0xF29 ^ (v1 == v2)) & 1) == 0)) ^ v0)))();
}

uint64_t sub_100105E84()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (((LODWORD(STACK[0x8EC]) != -509920247) * ((v0 + 1511) ^ (v0 + 1044) ^ 0x217)) ^ v0)))();
}

uint64_t sub_100105EC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,int a22,char a23)
{
  *(void *)(&a23 + v25 + a2) = 0x6060606060606060;
  return (*(uint64_t (**)(void))(v26
                              + 8
                              * (((((((v24 ^ 0xDA8u) - 3) ^ 0xFFFFFFFFFFFFF6F9) & v23) != 8) * ((v24 ^ 0xDA8) - 2303)) ^ ((v24 ^ 0xDA8) - 3))))();
}

void sub_100105F28(uint64_t a1@<X8>)
{
  *(_DWORD *)(a1 - 0x49230D716B37AE00) = (((v2 + v1) * (v3 - 1015681393)) ^ 0x5FEDF8F6)
                                         - 1279313924
                                         + ((2 * (v2 + v1) * (v3 - 1015681393)) & 0xBFDBF1EC);
}

void sub_100105FB4()
{
  *(unsigned char *)(v0 + 24) = 17;
  *(void *)(v0 + 40) = 0;
  JUMPOUT(0x100185730);
}

uint64_t sub_100105FD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  int v9 = a6 + 1203;
  int v10 = a6 - 2465;
  int v11 = a6 - 358;
  unint64_t v12 = STACK[0x6D0];
  unint64_t v13 = STACK[0xAA8];
  int v14 = 366490169 * ((-1882573102 - ((v7 - 224) | 0x8FCA36D2) + ((v7 - 224) | 0x7035C92D)) ^ 0x669B9F69);
  *(void *)(v7 - 224) = STACK[0x7B0];
  *(void *)(v7 - 200) = v12;
  *(void *)(v7 - 192) = v13;
  *(_DWORD *)(v7 - 212) = (a6 + 160) ^ v14;
  *(_DWORD *)(v7 - 208) = 232514998 - v14;
  *(_DWORD *)(v7 - 216) = v14 + 62870437;
  uint64_t v15 = (*(uint64_t (**)(uint64_t))(v8 + 8 * (a6 ^ 0x1B48)))(v7 - 224);
  unint64_t v16 = STACK[0x258];
  int v17 = *(_DWORD *)(v7 - 204);
  LODWORD(STACK[0x93C]) = v17;
  return (*(uint64_t (**)(uint64_t))(v16 + 8 * ((945 * (v17 == ((v6 + v10 - 1676) ^ v9))) ^ v11)))(v15);
}

uint64_t sub_1001060B8()
{
  int v4 = v1 + v0 + ((v2 - 992302659) & 0x3B255F9B);
  if (v4 >= 0) {
    unsigned int v5 = v1 + v0 + ((v2 - 992302659) & 0x3B255F9B);
  }
  else {
    unsigned int v5 = -v4;
  }
  return (*(uint64_t (**)(void))(v3 + 8 * (((v5 > 0x82) * (v2 - 959)) ^ v2)))();
}

uint64_t sub_1001060FC()
{
  int v3 = v0 ^ 0xC5;
  int v4 = (v0 ^ 0xC5) - 1819;
  unint64_t v5 = (v4 ^ 0xC08058A0) + v1;
  STACK[0x9C8] = v5;
  unint64_t v6 = STACK[0x738];
  STACK[0x9D0] = STACK[0x738];
  return (*(uint64_t (**)(void))(v2 + 8 * (((0x2CBDB0E44E133204 - v6 + v5 > 9) * (v4 ^ 0x16F6)) ^ v3)))();
}

uint64_t sub_100106178(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, _DWORD *a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  int v16 = 142545853 * (((v15 - 128) & 0x618A89D5 | ~((v15 - 128) | 0x618A89D5)) ^ 0xB48AD945);
  *(void *)(v15 - 120) = a13;
  *(_DWORD *)(v15 - 112) = (v13 - 651) ^ v16;
  *(_DWORD *)(v15 - 128) = (((a6 << 6) & 0xE9F7BC00) - 1960903682 + ((((v13 - 2197) | 0x900) + 1962661148) ^ (32 * a6))) ^ v16;
  uint64_t v17 = (*(uint64_t (**)(uint64_t))(v14 + 8 * (v13 + 2558)))(v15 - 128);
  return (*(uint64_t (**)(uint64_t))(v14 + 8
                                                  * ((695 * ((*a10 - 330117363) < 0x7FFFFFFF)) ^ v13)))(v17);
}

uint64_t sub_100106250()
{
  uint64_t v7 = v4;
  unsigned int v8 = v0 + 366490169 * ((2 * (&v6 & 0x5A616778) - &v6 + 631150727) ^ 0x3330CEC3) + 3426;
  (*(void (**)(uint64_t *))(v1 + 8 * (v0 ^ 0x1616)))(&v6);
  uint64_t v7 = v5;
  unsigned int v8 = v0
     + 877
     + 366490169 * ((1570847616 - (&v6 | 0x5DA13B80) + (&v6 | 0xA25EC47F)) ^ 0xB4F0923B)
     + 2549;
  (*(void (**)(uint64_t *))(v1 + 8 * ((v0 + 877) ^ 0x15E3)))(&v6);
  return (v2 - 847203058);
}

uint64_t sub_10010636C@<X0>(__int16 a1@<W8>)
{
  LOWORD(STACK[0x942]) = a1;
  return sub_1001B8258();
}

uint64_t sub_100106380()
{
  *(void *)(v5 - 136) = v3;
  *(_DWORD *)(v5 - 128) = (v2 + 770) ^ (1697562443
                                      * ((((2 * (v5 - 136)) | 0xC83680A4) - (v5 - 136) - 1679507538) ^ 0xB38B78D6));
  *(void *)(v5 - 120) = v0;
  uint64_t v6 = (*(uint64_t (**)(uint64_t))(v1 + 8 * (v2 ^ 0x1C55)))(v5 - 136);
  return (*(uint64_t (**)(uint64_t))(v1
                                            + 8
                                            * (int)((((v2 + 1302532361) & 0xB25CE9F2 ^ ((v2 ^ 0x704) + 3370))
                                                   * (v4 == 163480551)) ^ v2)))(v6);
}

uint64_t sub_10010643C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, unint64_t *a15, int a16, uint64_t a17, unsigned int a18, int a19, int a20)
{
  unsigned int v22 = 1314530549
      * (((&a15 | 0x9617885) - &a15 + (&a15 & 0xF69E8778)) ^ 0xB868FE4B);
  a15 = &STACK[0x70766EB78D2F3F08];
  a16 = (v21 + 1780979963) ^ v22;
  a18 = 934190171 - v22;
  a20 = v22 ^ 0x4EA001FB;
  a17 = a14;
  uint64_t v23 = (*(uint64_t (**)(unint64_t **))(v20 + 8 * (v21 ^ 0x1608u)))(&a15);
  return (*(uint64_t (**)(uint64_t))(v20
                                            + 8
                                            * (((a19 == 245 * (v21 ^ 0x45E) + 847202568) * ((v21 ^ 0xE6A) - 29)) ^ v21)))(v23);
}

uint64_t sub_100106534(uint64_t a1)
{
  BOOL v4 = *(_DWORD *)(v2 - 0x69166E42B3299567) - 874765251 != ((v3 - 1052) ^ 0xAF7);
  return (*(uint64_t (**)(uint64_t, void))(v1 + 8 * ((v4 | (2 * v4)) ^ (v3 - 834))))(a1, *(void *)(v2 - 0x69166E42B3299573));
}

uint64_t sub_10010659C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,int a50)
{
  if (v50 == 847203058)
  {
    int v53 = (void *)STACK[0x670];
    uint64_t v54 = *(void *)(STACK[0x670] + 8);
    int v55 = (void *)STACK[0x468];
    v55[1] = v54;
    *int v55 = *v53;
    return (*(uint64_t (**)(void))(v51
                                + 8
                                * (((((v54 == 0) ^ (a50 - 37)) & 1) * ((a50 ^ 0x4A4) - 3414)) ^ (a50 + 91))))();
  }
  else if (v50 == 847161006)
  {
    return (*(uint64_t (**)(void))(v51
                                + 8
                                * (((*(void *)(STACK[0x640] - 0x46197683F7D18948) == 0)
                                  * ((28 * (a50 ^ 0x9C2)) ^ (a50 - 2360))) ^ (a50 - 1171))))();
  }
  else
  {
    return (*(uint64_t (**)(void))(v51
                                + 8
                                * (int)(((*(void *)(STACK[0x468] + 24) == 0)
                                       * ((a50 + 827267606) ^ 0x314F22AD ^ (a50 + 827267606) & 0xCEB0DCFF ^ 0x235)) ^ (a50 - 2045))))();
  }
}

uint64_t sub_1001066D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, _DWORD *a9)
{
  *int v10 = a1;
  *a9 = v9;
  return sub_100120AF0();
}

uint64_t sub_1001066DC(int a1)
{
  return (*(uint64_t (**)(void))(v2 + 8 * (((((a1 + 2266) | 0x444) ^ 0x59F) * ((v1 & 0x18) == 0)) ^ (a1 + 1773))))();
}

uint64_t sub_100106718()
{
  unsigned int v9 = v3 + ((((2 * &v7) | 0x24F4A9F0) - &v7 - 310007032) ^ 0x4D402BC) * v1 + 3748;
  uint64_t v8 = v5;
  (*(void (**)(uint64_t *))(v0 + 8 * (v3 + 3916)))(&v7);
  uint64_t v8 = v6;
  unsigned int v9 = ((v3 + 2305853) & 0xFFDCCFFE) + (&v7 ^ 0x16AE5644) * v1 + 3944;
  (*(void (**)(uint64_t *))(v0 + 8 * (int)((v3 + 2305853) & 0xFFDCCFEE | 0x1010)))(&v7);
  return (v2 - 847203058);
}

uint64_t sub_100106800(int a1, uint64_t a2, int a3)
{
  unsigned int v7 = *(unsigned __int8 *)(v4 + 3) + (a1 ^ 0xFFFFFD71);
  return (*(uint64_t (**)(void))(v6 + 8 * ((2193 * ((v3 & (2 * v7)) + (v7 ^ a3) == a3)) ^ v5)))();
}

uint64_t sub_10010684C()
{
  return sub_1001CBC6C();
}

uint64_t sub_10010685C@<X0>(int a1@<W8>)
{
  (*(void (**)(uint64_t))(v2 + 8 * (a1 ^ 0x11B0)))(v1 - 0x6BBE7547D3B34F0FLL);
  STACK[0x7D0] = 0x6BBE7547D3B34F0FLL;
  return sub_1001C4E60();
}

uint64_t sub_1001068A4()
{
  int v6 = 142545853 * ((v5 - 144) ^ 0x2AFFAF6F);
  *(_DWORD *)(v5 - 136) = v6 ^ 0x7B7C7201;
  *(_DWORD *)(v5 - 132) = v6 + v3 + 699;
  *(void *)(v5 - 144) = v10;
  uint64_t v7 = v0;
  (*(void (**)(uint64_t))(v2 + 8 * (v3 ^ 0x1D17)))(v5 - 144);
  *(_DWORD *)(v5 - 136) = (v3 + 152) ^ (366490169
                                      * ((((v5 - 144) | 0x380977F5) - ((v5 - 144) & 0x380977F5)) ^ 0x2EA721B1));
  *(void *)(v5 - 144) = v10;
  *(void *)(v5 - 112) = v1;
  *(void *)(v5 - 104) = v4;
  *(void *)(v5 - 128) = v7;
  *(void *)(v5 - 120) = v7;
  (*(void (**)(uint64_t))(v2 + 8 * (v3 + 771)))(v5 - 144);
  *(_DWORD *)(v5 - 128) = v3 - 857 + 476588053 * ((v5 + 55115162 - 2 * ((v5 - 144) & 0x348FE2A)) ^ 0xBEB5FA69) - 1971;
  *(void *)(v5 - 144) = v9;
  *(void *)(v5 - 136) = v7;
  return (*(uint64_t (**)(uint64_t))(v2 + 8 * ((v3 - 857) ^ 0x1E6E)))(v5 - 144);
}

uint64_t sub_100106A00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(void))(v7 + 8 * ((476 * (v6 < ((a6 - 3193) | 0x530u) - 1368)) ^ a6)))();
}

uint64_t sub_100106A34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29)
{
  return sub_10012DCC8(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29);
}

uint64_t sub_100106A5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,int a30,int a31)
{
  int v34 = v31 ^ 0xF99;
  int v35 = ((v31 ^ 0xF99) - 1153031234) & 0x44B9D9FA;
  uint64_t v36 = (*(uint64_t (**)(void))(v33 + 8 * (v31 ^ 0x11B4u)))(((v31 ^ 0xF99) - 2181) ^ LODWORD(STACK[0x7E0]) ^ 0xE19B3FA5);
  unint64_t v37 = STACK[0x258];
  STACK[0xA78] = v36 + 0x6BBE7547D3B34F0FLL;
  if (v36) {
    a31 = v32;
  }
  LODWORD(STACK[0xA84]) = a31;
  return (*(uint64_t (**)(void))(v37 + 8 * (((v36 == 0) * (v35 ^ 0x99D)) ^ v34)))();
}

uint64_t sub_100106AFC(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  *(_DWORD *)(result + 16) = a5;
  return result;
}

uint64_t sub_100106B04(uint64_t a1, uint64_t a2, int a3)
{
  *(unsigned char *)(a1 + (v5 + v4)) = *(unsigned char *)(v3 + (v5 + v4));
  return (*(uint64_t (**)(void))(v8 + 8 * ((289 * (v5 - 1 == (((a3 + v7) | 0x8D5) ^ (v6 - 2637)))) ^ (a3 + v7 + 1180))))();
}

uint64_t sub_100106B4C@<X0>(uint64_t a1@<X1>, unsigned int a2@<W8>)
{
  uint64_t v4 = a2;
  unint64_t v5 = ((1657 * (v2 ^ 0x4AEu)) ^ (unint64_t)(a1 + 975)) + a2;
  if (v5 <= 0x38) {
    unint64_t v5 = 56;
  }
  return (*(uint64_t (**)(void))(v3 + 8 * ((88 * (v5 - v4 + 1120029286 > 7)) ^ v2)))();
}

uint64_t sub_100106BAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, unint64_t *a19, int a20,unsigned int a21)
{
  a21 = v21 - (((&a19 | 0x14E2447B) + (~&a19 | 0xEB1DBB84)) ^ 0xD3632433) * v23 + 3093;
  a19 = &STACK[0x75464D914B7248A7];
  uint64_t v26 = (*(uint64_t (**)(unint64_t **))(v22 + 8 * (v21 + 4116)))(&a19);
  return (*(uint64_t (**)(uint64_t))(v22 + 8 * (((a20 == v25) * (v21 ^ (v24 - 434) ^ (v24 + 11))) | v21)))(v26);
}

uint64_t sub_100106C48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  return (*(uint64_t (**)(void))(v14
                              + 8 * (((((a13 == 0) ^ (11 * (v13 ^ 0x38))) & 1) * (v13 - 3821)) ^ v13)))();
}

uint64_t sub_100106C8C(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 16);
  __int16 v2 = *(_DWORD *)(result + 4) ^ (11565 * (result ^ 0x1BA8));
  unsigned int v3 = ((v2 & 0x1FF ^ 0xFFFFFF6C) - 539186110 + ((2 * (v2 & 0x1FF)) | 0x4046A77E)) ^ 0x2178712F;
  *(_DWORD *)(v1 - 0x560E26B5DF241DC4) = (((2 * v3) | 0x75D06D4) - v3 - 61768554) ^ 0x494E2748;
  *(void *)(v1 - 0x560E26B5DF241DE4) = 0xB5D9B9B1A6DBE83;
  *(_DWORD *)(v1 - 0x560E26B5DF241DC8) = 666007420;
  int v4 = v2 ^ 3;
  if (v4 == 1)
  {
    int v5 = 666007436;
    goto LABEL_5;
  }
  if (v4 == 2)
  {
    *(_DWORD *)(v1 - 0x560E26B5DF241DCCLL) = -1989060920;
    int v5 = 666007440;
LABEL_5:
    *(void *)(v1 - 0x560E26B5DF241DDCLL) = 0xA56E1CB12DE69439;
    *(void *)(v1 - 0x560E26B5DF241DD4) = 0x5A91E34ED2196BC6;
    *(_DWORD *)(v1 - 0x560E26B5DF241DC8) = v5;
  }
  *(_DWORD *)uint64_t result = 419559555;
  return result;
}

uint64_t sub_100106E00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,int a37,int a38,int a39,int a40,int a41,int a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,int a48,int a49,int a50,int a51,int a52,int a53,int a54,int a55,int a56,int a57,int a58,int a59,int a60,int a61,char a62,int a63)
{
  int v103 = LODWORD(STACK[0x274]) | (LODWORD(STACK[0x270]) << 7);
  int v104 = a51 ^ LODWORD(STACK[0x38C]);
  LODWORD(STACK[0x634]) = v104;
  LODWORD(STACK[0x640]) = a57 ^ a56;
  int v105 = LODWORD(STACK[0x250]) ^ LODWORD(STACK[0x414]);
  int v106 = LODWORD(STACK[0x214]) ^ a100;
  LODWORD(STACK[0x62C]) = a58 ^ a59;
  LODWORD(STACK[0x6C4]) = a70 ^ a71;
  LODWORD(STACK[0x610]) = a49 - LODWORD(STACK[0x5DC]);
  int v107 = a52 ^ (LODWORD(STACK[0x494]) >> 20) ^ (LODWORD(STACK[0x480]) >> 1);
  int v108 = ((v107 ^ 0x6A7AE8A5) + 529321637 - 2 * ((v107 ^ 0x6A7AE8A5) & 0x1F8CCEBF ^ v107 & 0x1A)) ^ LODWORD(STACK[0x450]);
  unsigned int v109 = (v108 - 154269092 - ((2 * v108) & 0xED9C14B8)) ^ LODWORD(STACK[0x448]);
  unsigned int v110 = (v109 + 1721825895 - ((2 * v109) & 0xCD41F4CE)) ^ LODWORD(STACK[0x460]);
  int v111 = (v110 - 1159271086 - ((2 * v110) & 0x75CDDAA4)) ^ LODWORD(STACK[0x458]);
  int v112 = (v111 - 1972708357 - ((2 * v111) & 0x14D5B7F6)) ^ LODWORD(STACK[0x44C]);
  unsigned int v113 = (v112 + 1111596090 - ((2 * v112) & 0x84833874)) ^ a54;
  unsigned int v114 = (v113 - 559461437 - ((2 * v113) & 0xBD4E9786)) ^ a53;
  unsigned int v115 = (v114 - 1015101147 - ((2 * v114) & 0x86FD924A)) ^ LODWORD(STACK[0x444]);
  unsigned int v116 = (v115 - 286983159 - ((2 * v115) & 0xDDC9F812)) ^ a55;
  int v117 = (v116 + 3678097 - ((2 * v116) & 0x703F22)) ^ a50;
  unsigned int v118 = (((LODWORD(STACK[0x22C]) >> 26) ^ (SLODWORD(STACK[0x22C]) >= 0))
        - 1707179615
        - 2
        * (((LODWORD(STACK[0x22C]) >> 26) ^ (SLODWORD(STACK[0x22C]) >= 0)) & 0xFFFFFFE7 ^ (LODWORD(STACK[0x22C]) >> 26) & 6)) ^ a102;
  int v119 = (v118 + 1172222702 - ((2 * v118) & 0xBBD65DC)) ^ a97;
  int v120 = (v119 + 1884390729 - ((2 * v119) & 0x60A30A92)) ^ LODWORD(STACK[0x204]);
  int v121 = (v120 + 297407094 - ((2 * v120) & 0x237424EC)) ^ a98;
  int v122 = (v121 - 1258905123 - ((2 * v121) & 0x69ED43BA)) ^ LODWORD(STACK[0x200]);
  int v123 = (v122 + 1662645054 - ((2 * v122) & 0x4633E67C)) ^ a101;
  int v124 = (v123 - 925585231 - ((2 * v123) & 0x11A96162)) ^ a96;
  int v125 = (v124 - 946635153 - ((2 * v124) & 0xF26FCDE)) ^ a103;
  int v126 = (v125 + 1922700219 - ((2 * v125) & 0x65342776)) ^ a94;
  int v127 = a87 ^ a82 ^ (v126 + 1059760205 - ((2 * v126) & 0x7E55509A));
  unsigned int v128 = a95 & 0x17448E2 ^ (LODWORD(STACK[0x22C]) >> 3) ^ 0xC8CD0E ^ (v127 & 0xE68BB71D ^ a95 & 0x8BB71D | v127 & 0x197448E2);
  unsigned int v129 = a86 ^ a85 ^ (v128 - 600090336 - ((2 * v128) & 0xB876B240));
  int v130 = (v129 >> 21) ^ (v129 >> 27);
  int v131 = (2 * LODWORD(STACK[0x22C])) ^ (LODWORD(STACK[0x22C]) << 6) ^ (LODWORD(STACK[0x22C]) << 29) ^ (4 * v129) ^ (v129 << 11) ^ (32 * v129) ^ (4 * v130) ^ (32 * v130) ^ (v130 << 11) ^ 0x4FB9F61C;
  unsigned int v132 = (v131 + 1133738770 - ((2 * v131) & 0x8726F624)) ^ a93;
  int v133 = (v132 + 180164814 - ((2 * v132) & 0x157A319C)) ^ LODWORD(STACK[0x210]);
  int v134 = (v133 - 1620876658 - ((2 * v133) & 0x3EC6C51C)) ^ LODWORD(STACK[0x20C]);
  int v135 = (v134 + 405313023 - ((2 * v134) & 0x30512BFE)) ^ LODWORD(STACK[0x3E0]);
  unsigned int v136 = (v135 - 587868569 - ((2 * v135) & 0xB9EBACCE)) ^ LODWORD(STACK[0x3D8]);
  unsigned int v137 = (v136 - 620410310 - ((2 * v136) & 0xB60A9474)) ^ LODWORD(STACK[0x3D0]);
  unsigned int v138 = (v137 - 95864222 - ((2 * v137) & 0xF49274C4)) ^ LODWORD(STACK[0x3DC]);
  unsigned int v139 = (v138 - 173393929 - ((2 * v138) & 0xEB546FEE)) ^ LODWORD(STACK[0x564]);
  unsigned int v140 = (v139 + 1655271596 - ((2 * v139) & 0xC552E158)) ^ LODWORD(STACK[0x208]);
  int v141 = (v140 - 1151663805 - ((2 * v140) & 0x76B60286)) ^ LODWORD(STACK[0x3CC]);
  unsigned int v142 = (v141 - 228132766 - ((2 * v141) & 0xE4CDF0C4)) ^ LODWORD(STACK[0x3D4]);
  int v143 = (v142 + 696230121 - ((2 * v142) & 0x52FF41D2)) ^ LODWORD(STACK[0x3C4]);
  int v144 = (v143 + 417262884 - ((2 * v143) & 0x31BDDA48)) ^ LODWORD(STACK[0x3C8]);
  int v145 = (v144 - 1481671822 - ((2 * v144) & 0x4F5EF6E4)) ^ LODWORD(STACK[0x560]);
  int v146 = (v145 + 850277926 - ((2 * v145) & 0x655C6C4C)) ^ LODWORD(STACK[0x55C]);
  unsigned int v147 = (v146 - ((2 * v146) & 0xF3E56346) + 2045948323) ^ v129;
  int v148 = a68 ^ (a72 >> 21);
  int v149 = v130 ^ (32 * a83) ^ (16 * a83) ^ (a73 << 30) ^ a84 ^ ((v147 ^ 0x7993CB5C)
                                                             - 2 * ((v147 ^ 0x7993CB5C) & 0x4B860687 ^ v147 & 1)
                                                             - 880408954) ^ (4 * a72) ^ (32 * a72) ^ (a72 << 11) ^ (4 * v148) ^ (32 * v148) ^ (v148 << 11) ^ 0x798E7285;
  int v150 = (v149 + 860205347 - ((2 * v149) & 0x668B6246)) ^ LODWORD(STACK[0x558]);
  int v151 = (v150 - 1132863995 - ((2 * v150) & 0x78F3BC0A)) ^ LODWORD(STACK[0x3A0]);
  int v152 = (v151 + 276375543 - ((2 * v151) & 0x20F24FEE)) ^ LODWORD(STACK[0x550]);
  int v153 = (v152 - 1373621246 - ((2 * v152) & 0x5C406804)) ^ LODWORD(STACK[0x554]);
  unsigned int v154 = (v153 - 427527619 - ((2 * v153) & 0xCD08E47A)) ^ LODWORD(STACK[0x3C0]);
  int v155 = (v154 - 2071525455 - ((2 * v154) & 0x90E0F62)) ^ LODWORD(STACK[0x3B4]);
  int v156 = (v155 - 2071288988 - ((2 * v155) & 0x91546C8)) ^ a77;
  int v157 = (v156 + 195985022 - ((2 * v156) & 0x175CFCFC)) ^ LODWORD(STACK[0x3B0]);
  int v158 = (v157 - 1124479146 - ((2 * v157) & 0x79F39EAC)) ^ LODWORD(STACK[0x3A8]);
  int v159 = (v158 - 1669593928 - ((2 * v158) & 0x38F80970)) ^ LODWORD(STACK[0x3A4]);
  int v160 = (v159 - 1124456693 - ((2 * v159) & 0x79F44E16)) ^ LODWORD(STACK[0x54C]);
  int v161 = (v160 + 674666948 - ((2 * v160) & 0x506D3388)) ^ LODWORD(STACK[0x3AC]);
  unsigned int v162 = (v161 + 1907200932 - ((2 * v161) & 0xE35B2748)) ^ LODWORD(STACK[0x3B8]);
  unsigned int v163 = a72 ^ (v162 - ((2 * v162) & 0xC4FFFC4A) - 494928347) ^ 0xEB21C38C;
  int v164 = v148 ^ (v163 - ((2 * v163) & 0xB1020954) - 662633302) ^ (LODWORD(STACK[0x398]) << 13) ^ (LODWORD(STACK[0x398]) << 12) ^ (~LODWORD(STACK[0x398]) << 31) ^ ((unint64_t)(LODWORD(STACK[0x398]) ^ 0x8DFC95FF) << (((STACK[0x488] & 0xD0 ^ 0xC0 | STACK[0x488] & 0xD0 ^ 0x13) + 63) & 0xFE));
  BOOL v165 = SLODWORD(STACK[0x494]) >= 0;
  LODWORD(STACK[0x630]) = v165;
  unsigned int v166 = v104 ^ (v117 - 54126780 - ((2 * v117) & 0xF98C2E88));
  int v167 = v165 ^ (v166 >> 21) ^ (v166 >> 27);
  int v168 = v164 ^ (4 * v166) ^ (32 * v166) ^ (v166 << 11) ^ (4 * v167) ^ (32 * v167) ^ (v167 << 11) ^ 0x6550B265;
  int v169 = (v168 + 553202206 - ((2 * v168) & 0x41F2643C)) ^ LODWORD(STACK[0x43C]);
  unsigned int v170 = (v169 + 1159377918 - ((2 * v169) & 0x8A3567FC)) ^ LODWORD(STACK[0x58C]);
  int v171 = (v170 + 456852359 - ((2 * v170) & 0x3676070E)) ^ LODWORD(STACK[0x580]);
  unsigned int v172 = (v171 - 651553974 - ((2 * v171) & 0xB2542694)) ^ a61;
  int v173 = (v172 + 283893092 - ((2 * v172) & 0x21D7BAC8)) ^ LODWORD(STACK[0x454]);
  int v174 = (v173 - 1077921990 - ((2 * v173) & 0x7F806E74)) ^ LODWORD(STACK[0x574]);
  unsigned int v175 = (v174 - 620657496 - ((2 * v174) & 0xB6030950)) ^ a60;
  int v176 = (v175 - 1895618757 - ((2 * v175) & 0x1E064E76)) ^ LODWORD(STACK[0x578]);
  int v177 = (v176 - 1297350255 - ((2 * v176) & 0x65580322)) ^ LODWORD(STACK[0x570]);
  unsigned int v178 = (v177 + 2022063456 - ((2 * v177) & 0xF10C7AC0)) ^ LODWORD(STACK[0x394]);
  int v179 = (v178 - 2048376989 - ((2 * v178) & 0xBD07EC6)) ^ LODWORD(STACK[0x390]);
  int v180 = (v179 - 1500687077 - ((2 * v179) & 0x4D1AAA36)) ^ LODWORD(STACK[0x47C]);
  unsigned int v181 = v166 ^ 0xDE14F5DD ^ (v180 - ((2 * v180) & 0xA6B752BE) - 748967585);
  LODWORD(STACK[0x6C8]) = (v181 - ((2 * v181) & 0xABF99536) + 1442630299) ^ v167;
  unsigned int v182 = STACK[0x4B4];
  unsigned int v183 = (LODWORD(STACK[0x4B4]) ^ 0x595D88F0u) >> ((a62 & 0xE ^ 4) + (a62 & 0xE ^ 0xA));
  unsigned int v184 = v183 + 524889249 - ((2 * v183) & 0x3E925942);
  int v185 = HIBYTE(LODWORD(STACK[0x4B8])) ^ (LODWORD(STACK[0x4B8]) >> 17) ^ 0x219;
  int v186 = v185 + 524889249 - ((2 * v185) & 0x5942);
  int v187 = (v184 >> 27) ^ (v184 >> 30);
  int v188 = ((v184 ^ v186) - ((2 * (v184 ^ v186)) & 0x16E96D5A) + 192198317) ^ a57 ^ a56;
  unsigned int v189 = (v188 - 268876769 - ((2 * v188) & 0xDFF2883E)) ^ a65;
  int v190 = (v189 - 1159803385 - ((2 * v189) & 0x75BD9C0E)) ^ a64;
  int v191 = (v190 + 62492704 - ((2 * v190) & 0x7732040)) ^ LODWORD(STACK[0x590]);
  int v192 = (v191 + 899659121 - ((2 * v191) & 0x6B3F6AE2)) ^ LODWORD(STACK[0x490]);
  int v193 = (v192 + 423498404 - ((2 * v192) & 0x327C2548)) ^ a63;
  unsigned int v194 = (v193 - 54608121 - ((2 * v193) & 0xF97D7E0E)) ^ LODWORD(STACK[0x39C]);
  unsigned int v195 = (v194 + 1899054932 - ((2 * v194) & 0xE2628EA8)) ^ LODWORD(STACK[0x48C]);
  unsigned int v196 = (v195 - 991643417 - ((2 * v195) & 0x89C971CE)) ^ LODWORD(STACK[0x4A8]);
  int v197 = (LODWORD(STACK[0x4B4]) >> 9) ^ 0x33289882;
  LODWORD(STACK[0x63C]) = v197;
  int v198 = (v196 + 855914054 - ((2 * v196) & 0x66086C8C)) ^ v197;
  int v199 = (v198 - 1539813646 - ((2 * v198) & 0x48709DE4)) ^ a67;
  unsigned int v200 = (v199 - 63008688 - ((2 * v199) & 0xF87D20A0)) ^ a66;
  int v201 = STACK[0x5B8];
  int v202 = (LODWORD(STACK[0x5B8]) >> 20) ^ (LODWORD(STACK[0x5B8]) >> 1) ^ 0x43A113CD;
  unsigned int v203 = (v202 + 1497968267 - ((2 * v202) & 0xB2925D16)) ^ LODWORD(STACK[0x4C4]);
  unsigned int v204 = (v203 + 1783296369 - ((2 * v203) & 0xD495E2E2)) ^ LODWORD(STACK[0x4C8]);
  unsigned int v205 = (v204 - 718504231 - ((2 * v204) & 0xAA58FDB2)) ^ a92;
  unsigned int v206 = (v205 - 315644501 - ((2 * v205) & 0xDA5F4B56)) ^ LODWORD(STACK[0x4D8]);
  unsigned int v207 = (v206 - 939000836 - ((2 * v206) & 0x900FF7F8)) ^ LODWORD(STACK[0x4CC]);
  unsigned int v208 = (v207 - 1003298429 - ((2 * v207) & 0x8865C306)) ^ LODWORD(STACK[0x4C0]);
  unsigned int v209 = (v208 - 315860220 - ((2 * v208) & 0xDA58B608)) ^ a90;
  int v210 = (v209 + 1036197180 - ((2 * v209) & 0x7B863A78)) ^ a89;
  int v211 = (v210 + 527759126 - ((2 * v210) & 0x3EE9EE2C)) ^ LODWORD(STACK[0x4BC]);
  int v212 = (v211 + 670779244 - ((2 * v211) & 0x4FF68ED8)) ^ a91;
  unsigned int v213 = (v212 - 838232821 - ((2 * v212) & 0x9C132A16)) ^ a88;
  int v214 = LODWORD(STACK[0x27C]) ^ (LODWORD(STACK[0x2C0]) >> 26) ^ 0x39;
  int v215 = (v214 + 734049224 - ((2 * v214) & 0x16) + 3) ^ LODWORD(STACK[0x2B8]);
  int v216 = v215 + 1733877355 - ((2 * v215) & 0x4EB1BCD8) + 1;
  int v217 = ((v216 ^ LODWORD(STACK[0x2A8])) - 1088418481 - 2 * ((v216 ^ LODWORD(STACK[0x2A8])) & 0x3F200D5F ^ v216 & 0x10)) ^ LODWORD(STACK[0x290]);
  int v218 = (v217 + 1426223790 - ((2 * v217) & 0x2A04E55C)) ^ LODWORD(STACK[0x568]);
  int v219 = (v218 + 1422745406 - ((2 * v218) & 0x299ABE7C)) ^ LODWORD(STACK[0x28C]);
  int v220 = (v219 - 1524110087 - ((2 * v219) & 0x4A4FD9F2)) ^ LODWORD(STACK[0x438]);
  int v221 = (v220 + 1974227707 - ((2 * v220) & 0x6B58A5F6)) ^ LODWORD(STACK[0x288]);
  unsigned int v222 = (v221 + 1822947326 - ((2 * v221) & 0xD94FEFFC)) ^ LODWORD(STACK[0x2B4]);
  unsigned int v223 = (v222 + 1239745180 - ((2 * v222) & 0x93CA0538)) ^ LODWORD(STACK[0x284]);
  int v224 = (v223 - 1816698421 - ((2 * v223) & 0x276EC396)) ^ LODWORD(STACK[0x428]);
  int v225 = (v224 + 746750902 - ((2 * v224) & 0x5905076C)) ^ LODWORD(STACK[0x278]);
  int v226 = v105 ^ (v225 + 905121586 - ((2 * v225) & 0x6BE61E64));
  HIDWORD(v227) = v226 ^ 0x19D575F;
  LODWORD(v227) = v226 ^ 0x2000000;
  int v228 = (v227 >> 25) ^ v103;
  HIDWORD(v227) = v228 ^ 0x15;
  LODWORD(v227) = v228 ^ 0x86EF3A80;
  unsigned int v229 = a99 ^ LODWORD(STACK[0x4D0]) ^ (v213 + 1725725859 - ((2 * v213) & 0xCDB8F946));
  unsigned int v230 = ((v227 >> 7) - 480502734 - ((2 * (v227 >> 7)) & 0xC6B83862) - 1) ^ (((LODWORD(STACK[0x2C0]) >> 3) ^ 0x1CEABAFC)
                                                                           - 480502734
                                                                           + (~(2
                                                                              * ((LODWORD(STACK[0x2C0]) >> 3) ^ 0x1CEABAFC)) | 0xF947C79D));
  int v231 = 2 * LODWORD(STACK[0x2C0]);
  int v232 = LODWORD(STACK[0x294]) ^ (LODWORD(STACK[0x2C0]) << 6) ^ v231 ^ (v230 << 11) ^ (32 * v230) ^ (4 * v230) ^ 0x65346384;
  int v233 = (v232 - 413804572 - 2 * (v232 & 0x6755D7E6 ^ v231 & 2)) ^ LODWORD(STACK[0x2C0]);
  unsigned int v234 = (v233 + 1784705111 - ((2 * v233) & 0xD4C0E0AE)) ^ LODWORD(STACK[0x2BC]);
  unsigned int v235 = (v234 - 891714273 - ((2 * v234) & 0x95B30A3E)) ^ LODWORD(STACK[0x2B0]);
  int v236 = (v235 + 882177096 - ((2 * v235) & 0x6929E890)) ^ LODWORD(STACK[0x420]);
  unsigned int v237 = (v236 + 1094166120 - ((2 * v236) & 0x826F4CD0)) ^ LODWORD(STACK[0x430]);
  int v238 = (v237 + 908803902 - ((2 * v237) & 0x6C567E7C)) ^ LODWORD(STACK[0x298]);
  int v239 = (v238 - 1302529583 - ((2 * v238) & 0x64B9F3A2)) ^ LODWORD(STACK[0x2A0]);
  int v240 = (v239 + 664790047 - ((2 * v239) & 0x4F3FC83E)) ^ LODWORD(STACK[0x434]);
  int v241 = (v240 + 163176775 - ((2 * v240) & 0x1373C28E)) ^ LODWORD(STACK[0x2AC]);
  unsigned int v242 = (v241 + 1609538699 - ((2 * v241) & 0xBFDF3916)) ^ LODWORD(STACK[0x418]);
  unsigned int v243 = (v242 + 1190218770 - ((2 * v242) & 0x8DE29824)) ^ LODWORD(STACK[0x424]);
  int v244 = (v243 - 1419727764 - ((2 * v243) & 0x56C158D8)) ^ LODWORD(STACK[0x41C]);
  unsigned int v245 = (v244 - 284365264 - ((2 * v244) & 0xDE19DC60)) ^ LODWORD(STACK[0x42C]);
  int v246 = (v245 + 344900683 + ~(2 * (v245 & 0x148EC44B ^ v242 & 1))) ^ LODWORD(STACK[0x29C]);
  int v247 = (v246 + 816044499 - ((2 * v246) & 0x6147B3A6)) ^ LODWORD(STACK[0x2A4]);
  unsigned int v248 = (v230 >> 27) ^ ((((2 * (v227 >> 7)) & 0xC6B83862) - ((v227 >> 7) - 480502734)) >> 30) ^ (v230 >> 21);
  unsigned int v249 = v230 ^ 0xCFDC229E ^ (v247 - ((2 * v247) & 0xD549432A) - 358309483);
  unsigned int v250 = (LODWORD(STACK[0x26C]) << 30) ^ (32 * LODWORD(STACK[0x268])) ^ (16 * LODWORD(STACK[0x268])) ^ 0xD7A86950;
  int v251 = (v250 + 112677449 - ((2 * v250) & 0xD6EA480)) ^ LODWORD(STACK[0x3F0]);
  int v252 = (v251 - 1593207216 - ((2 * v251) & 0x42132CA0)) ^ LODWORD(STACK[0x3F4]);
  unsigned int v253 = (v252 + 1822475441 - ((2 * v252) & 0xD9418962)) ^ LODWORD(STACK[0x40C]);
  int v254 = (v253 + 705040282 - ((2 * v253) & 0x540C1F34)) ^ LODWORD(STACK[0x410]);
  unsigned int v255 = (v254 - 541107490 - ((2 * v254) & 0xBF7EB5BC)) ^ LODWORD(STACK[0x260]);
  unsigned int v256 = (v255 + 1940648513 - ((2 * v255) & 0xE757E482)) ^ LODWORD(STACK[0x3E8]);
  unsigned int v257 = (v256 - 655151574 - ((2 * v256) & 0xB1E65C54)) ^ LODWORD(STACK[0x23C]);
  unsigned int v258 = (v257 + 2146719144 - ((2 * v257) & 0xFFE8AB50)) ^ LODWORD(STACK[0x240]);
  int v259 = (v258 - 1870594411 - ((2 * v258) & 0x2101FD2A)) ^ LODWORD(STACK[0x408]);
  unsigned int v260 = (v259 + 1371823468 - ((2 * v259) & 0xA388BAD8)) ^ LODWORD(STACK[0x3E4]);
  int v261 = (v260 + 949934875 - ((2 * v260) & 0x713DB636)) ^ LODWORD(STACK[0x404]);
  unsigned int v262 = (v261 - 1031285201 - ((2 * v261) & 0x850FAC5E)) ^ LODWORD(STACK[0x3EC]);
  int v263 = (((LODWORD(STACK[0x26C]) >> 2) ^ 0xE755D7)
        - 2057061940
        - ((2 * ((LODWORD(STACK[0x26C]) >> 2) ^ 0xE755D7)) & 0xAC77398)) ^ LODWORD(STACK[0x258]);
  int v264 = (v263 - 1149203176 - ((2 * v263) & 0x77011A30)) ^ LODWORD(STACK[0x254]);
  unsigned int v265 = (v264 + 1855696375 - ((2 * v264) & 0xDD375BEE)) ^ LODWORD(STACK[0x248]);
  unsigned int v266 = (LODWORD(STACK[0x280]) >> 27) ^ (LODWORD(STACK[0x280]) >> 28) ^ LODWORD(STACK[0x3F8]) ^ 0x317BAAEE ^ (v265 - ((2 * v265) & 0x970D992A) + 1267125397);
  unsigned int v267 = (v266 + 1971817152 - ((2 * v266) & 0xEB0F1580)) ^ LODWORD(STACK[0x264]);
  int v268 = (v267 + 961832436 - ((2 * v267) & 0x72A8CBE8)) ^ LODWORD(STACK[0x244]);
  int v269 = (v268 - 1173035828 - ((2 * v268) & 0x7429C998)) ^ LODWORD(STACK[0x238]);
  int v270 = (v269 + 744613622 - ((2 * v269) & 0x58C3CDEC)) ^ LODWORD(STACK[0x234]);
  int v271 = (v270 + 553112729 - ((2 * v270) & 0x41EFA932)) ^ LODWORD(STACK[0x25C]);
  unsigned int v272 = LODWORD(STACK[0x230]) ^ (v271 - ((2 * v271) & 0x975C090C) + 1269695622) ^ 0x4BB59047;
  int v273 = (v272 - 1271187565 - ((2 * v272) & 0x68766F26)) ^ LODWORD(STACK[0x400]);
  unsigned int v274 = v106 ^ (v273 - ((2 * v273) & 0xF6C488C4) - 77446046);
  int v275 = (v274 >> 27) ^ (v274 >> 21);
  unsigned int v276 = v248 ^ (32 * v248) ^ (4 * v248) ^ (v248 << 11) ^ LODWORD(STACK[0x24C]) ^ (v249
                                                                                 - ((2 * v249) & 0xA36E5D3A)
                                                                                 + 1370959517) ^ (32 * v274) ^ (v274 << 11) ^ (32 * v275) ^ (v275 << 11) ^ (v262 + 86244755 - ((2 * v262) & 0xA47FB26)) ^ (4 * (v275 ^ v274));
  unsigned int v277 = v274 ^ 0x6FEDD6BB ^ ((v276 ^ 0xCE96F87E)
                            - 1773910290
                            + ((2 * ((v276 ^ 0xCE96F87E) & 0x164446FD ^ v276 & 0x10)) ^ 0xFFFFFFDF));
  unsigned int v278 = (v182 << 8) ^ (v182 << 15) ^ a78 ^ a74 ^ 0xE100F000;
  unsigned int v279 = (v278 + 2009317160 - ((2 * v278) & 0xEF877E00)) ^ a80;
  unsigned int v280 = (v279 + 818754411 + (~(2 * v279) | 0x9E659929) + 1) ^ a58 ^ a59;
  unsigned int v281 = (v280 + 1198116858 - ((2 * v280) & 0x8ED39FF4)) ^ a81;
  unsigned int v282 = (a69 ^ 0xEC478000) + 78235345 - ((2 * (a69 ^ 0xEC478000)) & 0x9538000);
  LODWORD(STACK[0x624]) = v282;
  int v283 = (v281 + 78235345 - ((2 * v281) & 0x9538DA2)) ^ v282;
  unsigned int v284 = (v283 + 1179883826 - ((2 * v283) & 0x8CA73264)) ^ LODWORD(STACK[0x4AC]);
  unsigned int v285 = (v284 + 1458572557 - ((2 * v284) & 0xADE01A1A)) ^ LODWORD(STACK[0x4A4]);
  int v286 = (v285 - 1851297230 - ((2 * v285) & 0x234EE464)) ^ a79;
  unsigned int v287 = (v286 - 170632104 - ((2 * v286) & 0xEBA8B8B0)) ^ LODWORD(STACK[0x4A0]);
  int v288 = ((v182 << 23) ^ 0x78000000) + 972017860 - ((2 * ((v182 << 23) ^ 0x78000000)) & 0x73000000);
  LODWORD(STACK[0x628]) = v288;
  unsigned int v289 = (v287 - 799317137 - ((2 * v287) & 0xA0B6C6DE)) ^ LODWORD(STACK[0x598]);
  int v290 = (v289 + 972017860 - ((2 * v289) & 0x73DFA188)) ^ v288;
  unsigned int v291 = (v290 + 1123399325 - ((2 * v290) & 0x85EB6D3A)) ^ LODWORD(STACK[0x3BC]);
  unsigned int v292 = (v291 - 1030295686 - ((2 * v291) & 0x852DDEF4)) ^ LODWORD(STACK[0x498]);
  int v293 = v292 + 618130082 - 2 * (v292 & 0x24D7EAA3 ^ v291 & 1);
  int v294 = (v275 | (LODWORD(STACK[0x218]) << 31)) ^ (v201 << 12) ^ (v277 - ((2 * v277) & 0x2840B36E) - 1809819209);
  BOOL v295 = SLODWORD(STACK[0x5C4]) >= 0;
  LODWORD(STACK[0x618]) = v295;
  int v296 = v295 ^ (v229 >> 21) ^ (v229 >> 27);
  int v297 = (v182 << 27) - (a75 & 0x40000000) - 1529353566;
  LODWORD(STACK[0x620]) = v297;
  int v298 = a76 ^ (v182 >> 5);
  LODWORD(STACK[0x614]) = v298;
  unsigned int v299 = v298 ^ (v200 + 760419377 - ((2 * v200) & 0x5AA62862));
  int v300 = v187 ^ (v299 >> 21);
  LODWORD(STACK[0x638]) = v300;
  int v301 = v294 ^ (32 * v229) ^ (4 * v229) ^ (v229 << 11) ^ (4 * v296) ^ (32 * v296) ^ (v296 << 11) ^ v297 ^ v293 ^ (4 * v299) ^ (32 * v299) ^ (v299 << 11) ^ (4 * v300) ^ (32 * v300) ^ (v300 << 11) ^ 0x3C0E8719;
  int v302 = (v301 - 1710955569 - ((2 * v301) & 0x3409C79E)) ^ LODWORD(STACK[0x5A4]);
  int v303 = (v302 + 933416112 - ((2 * v302) & 0x6F459960)) ^ LODWORD(STACK[0x5BC]);
  unsigned int v304 = (v303 + 1362296504 - ((2 * v303) & 0xA265FD70)) ^ LODWORD(STACK[0x440]);
  int v305 = (v304 + 965007590 - ((2 * v304) & 0x7309B1CC)) ^ LODWORD(STACK[0x5B4]);
  unsigned int v306 = (v305 - 199925685 - ((2 * v305) & 0xE82AC096)) ^ LODWORD(STACK[0x21C]);
  unsigned int v307 = (v306 + 1555159915 - ((2 * v306) & 0xB963B6D6)) ^ LODWORD(STACK[0x5C0]);
  unsigned int v308 = (v307 + 1278548561 - ((2 * v307) & 0x986A34A2)) ^ LODWORD(STACK[0x4E8]);
  int v309 = (v308 - 1627216652 - ((2 * v308) & 0x3E0549E8)) ^ LODWORD(STACK[0x5AC]);
  int v310 = (v309 - 1110910389 - ((2 * v309) & 0x7B91B496)) ^ LODWORD(STACK[0x224]);
  unsigned int v311 = (v310 + 1704981336 - ((2 * v310) & 0xCB3FE6B0)) ^ LODWORD(STACK[0x220]);
  unsigned int v312 = (v311 - 1027996434 - ((2 * v311) & 0x857409DC)) ^ LODWORD(STACK[0x5B0]);
  int v313 = (v312 + 453317453 - ((2 * v312) & 0x360A269A)) ^ LODWORD(STACK[0x228]);
  int v314 = (v313 + 959967829 - ((2 * v313) & 0x726FE4AA)) ^ LODWORD(STACK[0x5A0]);
  int v315 = (v314 + 729530802 - ((2 * v314) & 0x56F78364)) ^ LODWORD(STACK[0x5A8]);
  unsigned int v316 = v229 ^ 0xE97EEC3D ^ (v315 - ((2 * v315) & 0xC2159E94) - 519385270);
  unsigned int v317 = v299 ^ v296 ^ (v316 - ((2 * v316) & 0x5F99C350) + 801956264);
  LODWORD(STACK[0x5EC]) = v317 >> 29;
  int v318 = ((v317 >> 29) ^ HIBYTE(v317) ^ 0x7B) - 659010957 - ((2 * ((v317 >> 29) ^ HIBYTE(v317) ^ 0x7B)) & 0xE6);
  unsigned int v319 = v317;
  unsigned int v320 = (v317 >> 30) ^ 0xD8B84A72;
  LODWORD(STACK[0x5E8]) = v320;
  LODWORD(STACK[0x5FC]) = v319 >> 25;
  LODWORD(STACK[0x5D4]) = v319;
  int v321 = v320 ^ (v319 >> 25) ^ v318;
  LODWORD(STACK[0x604]) = v321;
  int v322 = v321 & 0x10 ^ 0x5AD76BBF;
  v319 >>= 22;
  LODWORD(STACK[0x5F0]) = v319;
  LODWORD(STACK[0x600]) = v319 ^ 0x1E2;
  BOOL v323 = ((v322 + 81) & (v319 ^ 0x1E2)) == 0;
  int v324 = v322 + 65405;
  int v325 = 55003 - v322;
  if (v323) {
    int v325 = v324;
  }
  LODWORD(STACK[0x608]) = v325;
  unsigned int v326 = STACK[0x5D8];
  LODWORD(STACK[0x6A0]) = ((4 * LODWORD(STACK[0x5D8])) ^ 0xE1D81460)
                        - 655586782
                        - 2
                        * (((4 * LODWORD(STACK[0x5D8])) ^ 0xE1D81460) & 0x58EC8A2C ^ (4 * LODWORD(STACK[0x5D8])) & 0xC);
  LODWORD(STACK[0x690]) = ((8 * v326) ^ 0xC3B028C0) - 813570084 - ((2 * ((8 * v326) ^ 0xC3B028C0)) & 0x9F03CFB0);
  LODWORD(STACK[0x6F0]) = ((v326 << 10) ^ 0xD8146000) - 1309487830 - ((2 * ((v326 << 10) ^ 0xD8146000)) & 0x63E59800);
  LODWORD(STACK[0x6AC]) = ((v326 << 22) ^ 0x46000000) - 1433467135 - ((2 * ((v326 << 22) ^ 0x46000000)) & 0x55555555);
  LODWORD(STACK[0x6EC]) = ((v326 << 7) ^ 0x3B028C00) + 147982279 - ((2 * ((v326 << 7) ^ 0x3B028C00)) & 0x11A40F00);
  LODWORD(STACK[0x708]) = ((v326 << 13) ^ 0xC0A30000) - 1000411417 - ((2 * ((v326 << 13) ^ 0xC0A30000)) & 0x88BDC000);
  LODWORD(STACK[0x6E0]) = ((v326 << 16) ^ 0x5180000) + 208285711 - ((2 * ((v326 << 16) ^ 0x5180000)) & 0x18D40000);
  LODWORD(STACK[0x710]) = ((v326 << 20) ^ 0x51800000) - 862990252 - ((2 * ((v326 << 20) ^ 0x51800000)) & 0x99000000);
  LODWORD(STACK[0x6B8]) = ((v326 << 14) ^ 0x81460000) + 1846780249 - ((2 * ((v326 << 14) ^ 0x81460000)) & 0xDC270000);
  LODWORD(STACK[0x68C]) = ((v326 << 24) ^ 0x18000000) - 1066748937 + ((v326 << 25) & 0x80000000);
  LODWORD(STACK[0x6D0]) = ((v326 << 25) ^ 0x30000000) + 523825198 - ((2 * ((v326 << 25) ^ 0x30000000)) & 0x3C000000);
  LODWORD(STACK[0x644]) = ((v326 << 11) ^ 0xB028C000) - 1344141703 - ((2 * ((v326 << 11) ^ 0xB028C000)) & 0x5FC40000);
  int v327 = *(unsigned __int8 *)(STACK[0x718] + 202);
  LODWORD(STACK[0x40C]) = v327;
  LODWORD(STACK[0x55C]) = v326 << 18;
  int v328 = ((v326 << 18) ^ 0x14600000) - 1920167898 - ((2 * ((v326 << 18) ^ 0x14600000)) & 0x1B180000);
  LODWORD(STACK[0x664]) = v328;
  LODWORD(STACK[0x6D8]) = ((v326 << 21) ^ 0xA3000000) - 621968527 - ((2 * ((v326 << 21) ^ 0xA3000000)) & 0xB5C00000);
  LODWORD(STACK[0x6B0]) = ((v326 << 19) ^ 0x28C00000) + 819779363 - ((2 * ((v326 << 19) ^ 0x28C00000)) & 0x61B00000);
  unsigned int v329 = ((v326 << 23) ^ 0x8C000000) + 1004962692 - ((2 * ((v326 << 23) ^ 0x8C000000)) & 0x77000000);
  LODWORD(STACK[0x564]) = v329;
  LODWORD(STACK[0x560]) = v326 << 29;
  LODWORD(STACK[0x65C]) = (v326 << 28) - ((v326 << 29) & 0x60000000);
  unsigned int v330 = ((v326 << 27) ^ 0xC0000000) - 1945866443 - ((v326 << 28) & 0x10000000);
  LODWORD(STACK[0x5DC]) = v330;
  unint64_t v331 = v326 ^ 0x38760518;
  STACK[0x3F8] = v331;
  unsigned int v332 = STACK[0x594];
  int v333 = LODWORD(STACK[0x594]) >> 11;
  unsigned int v334 = v326 >> 10;
  unsigned int v335 = v326;
  int v336 = (LODWORD(STACK[0x594]) >> 27) ^ (LODWORD(STACK[0x594]) >> 28) ^ v333 ^ (v335 >> 2) ^ (v335 >> 10) ^ (unsigned __int16)(v331 >> (v327 & 0x15 ^ 0x11 | v327 & 0x15 ^ 4));
  LODWORD(STACK[0x698]) = v335 ^ 0x8DA148C8;
  unsigned int v337 = ((v335 ^ 0x8DA148C8) >> 30) | 0x4E50EC50;
  LODWORD(STACK[0x434]) = v337;
  int v338 = (v332 >> 29) | 0x3DDFDDB8;
  LODWORD(STACK[0x550]) = v338;
  int v339 = v337 ^ v338;
  int v340 = ((v336 ^ 0xE149203) + 1938764267 - 2 * ((v336 ^ 0xE149203) & 0x738F31FB ^ v336 & 0x10)) ^ v337 ^ v338;
  unsigned int v341 = (v332 >> 19) ^ 0xCCF9B32E;
  unsigned int v342 = (v340 - 856050656 - ((2 * v340) & 0x99F36840)) ^ v341;
  unsigned int v343 = v332 >> 18;
  unsigned int v344 = (v332 >> 18) ^ 0xC71DC17F;
  LODWORD(STACK[0x438]) = v344;
  unsigned int v345 = (v342 - 954347678 - ((2 * v342) & 0x8E3B9EC4)) ^ v344;
  int v346 = (v332 >> 15) ^ 0x1D1824C0;
  LODWORD(STACK[0x54C]) = v346;
  int v347 = (v345 + 488133676 - ((2 * v345) & 0x3A30A858)) ^ v346;
  unsigned int v348 = v332 >> 14;
  unsigned int v349 = (v332 >> 14) ^ 0xABFB2EB6;
  int v350 = (v347 - 1409560722 - ((2 * v347) & 0x57F79EDC)) ^ v349;
  unsigned int v351 = (v332 >> 13) ^ 0xFCDE79CD;
  unsigned int v352 = v332;
  unsigned int v353 = (v350 - 52446595 - ((2 * v350) & 0xF9BF74FA)) ^ v351;
  unsigned int v354 = v335;
  unsigned int v355 = v335 >> 6;
  unsigned int v356 = (v335 >> 6) ^ 0xB0074DAE;
  int v357 = (v353 - 1327065670 - ((2 * v353) & 0x61CD2B74)) ^ v356;
  int v358 = (v354 >> 9) ^ 0x2FBF74C5;
  int v359 = (v357 + 799231943 - ((2 * v357) & 0x5F469F8E)) ^ v358;
  LODWORD(STACK[0x688]) = v356 ^ (v354 >> 4);
  unsigned int v360 = (v354 >> 4) ^ (v354 >> 5) ^ 0x4D031586 ^ (v359 - ((2 * v359) & 0x99814B5C) + 1287693742);
  LODWORD(STACK[0x568]) = v360;
  v360 >>= 21;
  LODWORD(STACK[0x558]) = v360;
  LODWORD(STACK[0x428]) = HIWORD(v352);
  int v361 = v343 ^ (v352 >> 20) ^ HIWORD(v352) ^ (v354 >> 1) ^ (unsigned __int16)(v331 >> ((v360 & 0x16 ^ 2)
                                                                                      + (v360 & 0x16 ^ 0x14)));
  int v362 = (v361 ^ 0x1C3B3760) - 1423486062 - 2 * ((v361 ^ 0x1C3B3760) & 0x2B27539A ^ v361 & 8);
  unsigned int v363 = (v352 >> 21) ^ 0xAB275251;
  int v364 = (v352 >> 25) ^ 0x64DE3FAD;
  unsigned int v365 = ((v362 ^ v363) + 1692286897 - ((2 * (v362 ^ v363)) & 0xC9BC7F62)) ^ v364;
  LODWORD(STACK[0x41C]) = v364;
  LODWORD(STACK[0x554]) = v341;
  unsigned int v366 = (v365 - 856050656 - ((2 * v365) & 0x99F36840)) ^ v341;
  int v367 = (v366 - 1409560722 - ((2 * v366) & 0x57F79EDC)) ^ v349;
  int v368 = (v352 >> 12) ^ 0x200B9E9C;
  int v369 = (v367 + 537401852 - ((2 * v367) & 0x401033F8)) ^ v368;
  LODWORD(STACK[0x414]) = v368;
  unsigned int v370 = (v369 - 52446595 - ((2 * v369) & 0xF9BF74FA)) ^ v351;
  int v371 = v333 ^ 0xF0149FE;
  int v372 = (v370 + 252069694 - ((2 * v370) & 0x1E0C8E7C)) ^ v333 ^ 0xF0149FE;
  unsigned int v373 = (v354 >> 7) ^ 0xE8938DD8;
  LODWORD(STACK[0x410]) = v373;
  unsigned int v374 = (v372 - 387751470 - ((2 * v372) & 0xD1C6C3A4)) ^ v373;
  LODWORD(STACK[0x650]) = v374 - 1327065670 - ((2 * v374) & 0x61CD2B74);
  LODWORD(STACK[0x408]) = v352 >> 22;
  LODWORD(v331) = HIBYTE(v352) ^ (v352 >> 17) ^ (v352 >> 22) ^ v368 ^ ((v348 ^ HIWORD(v352) ^ 0xD9AE)
                                                                     + 537401852
                                                                     - ((2 * (v348 ^ HIWORD(v352) ^ 0xD9AE)) & 0x33F8));
  LODWORD(v331) = ((v331 ^ 0x1CE2) + 1692286897 - 2 * ((v331 ^ 0x1CE2) & 0x64DE3FBD ^ v331 & 0xC)) ^ v364;
  int v375 = (v331 + 1938764267 - ((2 * v331) & 0x671E63D6)) ^ v339;
  int v376 = (v375 - 1423486062 - ((2 * v375) & 0x564EA724)) ^ v363;
  int v377 = (v376 - 856050656 - ((2 * v376) & 0x19F36840)) ^ v341;
  int v378 = (v377 + 252069694 - ((2 * v377) & 0x1E0C8E7C)) ^ v371;
  LODWORD(STACK[0x404]) = v334 ^ 0xC10F2196;
  unsigned int v379 = (v378 - 1056883689 - ((2 * v378) & 0x8202782E)) ^ v334 ^ 0xC10F2196;
  int v380 = (v379 + 799231943 - ((2 * v379) & 0x5F469F8E)) ^ v358;
  unsigned int v381 = (v354 >> 8) ^ 0xEA5B6E08;
  LODWORD(STACK[0x400]) = v381;
  unsigned int v382 = v381 ^ (v354 >> 7) ^ (v380 - 362604531 - ((2 * v380) & 0xD4C6301A));
  unsigned int v383 = (v354 >> 5) ^ v355 ^ v382;
  int v384 = ((unint64_t)(v383 ^ 0x1528436) >> (((v382 & 0x7F ^ 0x75)
                                                                                    + (v382 & 0x7F ^ 0xA)) & ((v382 & 0x9B ^ 0x91) + (v382 & 0x9B ^ 0xA)))) ^ (v383 >> 21);
  unsigned int v385 = LODWORD(STACK[0x6C8]) ^ (v354 << 8) ^ (v354 << 15) ^ ((v330 ^ 0x933C9F1B ^ LODWORD(STACK[0x6D0]))
                                                             - ((2 * (v330 ^ 0x933C9F1B ^ LODWORD(STACK[0x6D0]))) & 0xC6A1C2D4)
                                                             - 481238678) ^ (4 * v383) ^ (32 * v383) ^ (v383 << 11) ^ (4 * v384) ^ (32 * v384) ^ (v384 << 11) ^ 0xA433CF61;
  int v386 = (v385 + 147982279 - ((2 * v385) & 0x11A40F8E)) ^ LODWORD(STACK[0x6EC]);
  unsigned int v387 = (v386 - 655586782 - ((2 * v386) & 0xB1D91444)) ^ LODWORD(STACK[0x6A0]);
  unsigned int v388 = (v387 - 813570084 - ((2 * v387) & 0x9F03CFB8)) ^ LODWORD(STACK[0x690]);
  int v389 = (v388 - 1309487830 - ((2 * v388) & 0x63E59A54)) ^ LODWORD(STACK[0x6F0]);
  int v390 = STACK[0x644];
  int v391 = (v389 - 1344141703 - ((2 * v389) & 0x5FC40CF2)) ^ LODWORD(STACK[0x644]);
  unsigned int v392 = (v391 - 1000411417 - ((2 * v391) & 0x88BDDDCE)) ^ LODWORD(STACK[0x708]);
  int v393 = (v392 + 208285711 - ((2 * v392) & 0x18D4601E)) ^ LODWORD(STACK[0x6E0]);
  int v394 = (v393 - 1920167898 - ((2 * v393) & 0x1B19204C)) ^ v328;
  unsigned int v395 = (v394 - 862990252 - ((2 * v394) & 0x991FA0A8)) ^ LODWORD(STACK[0x710]);
  unsigned int v396 = (v395 - 621968527 - ((2 * v395) & 0xB5DB06E2)) ^ LODWORD(STACK[0x6D8]);
  int v397 = (v396 - 1433467135 - ((2 * v396) & 0x551E0E02)) ^ LODWORD(STACK[0x6AC]);
  int v398 = (v397 + 1004962692 - ((2 * v397) & 0x77CD0708)) ^ v329;
  unsigned int v399 = (v398 - 1066748937 - ((2 * v398) & 0x80D567EE)) ^ LODWORD(STACK[0x68C]);
  int v400 = ((v354 << 26) ^ 0x60000000) - 2128740904;
  LODWORD(STACK[0x660]) = v400;
  int v401 = v383 ^ v400 ^ (v399 - 2128740904 - ((2 * v399) & 0x23BFBB0));
  LODWORD(STACK[0x670]) = v401;
  unsigned int v402 = v401 ^ v384;
  int v403 = v401 ^ v384 ^ 0x5F84BBB0;
  int v404 = ((4 * v403) ^ 0x7B58FE30) - 1188897475 - ((2 * ((4 * v403) ^ 0x7B58FE30)) & 0x7245BA78);
  LODWORD(STACK[0x430]) = v404;
  unsigned int v405 = ((8 * v403) ^ 0xF6B1FC60) - 1194358331 - 2 * (((8 * v403) ^ 0xF6B1FC60) & 0x38CF89C8 ^ (8 * v403) & 8);
  LODWORD(STACK[0x42C]) = v405;
  unsigned int v406 = ((v403 << 11) ^ 0xB1FC6000) - 1615195507 - ((2 * ((v403 << 11) ^ 0xB1FC6000)) & 0x3F742000);
  LODWORD(STACK[0x684]) = v406;
  unsigned int v407 = ((v403 << 18) ^ 0xFE300000) + 76110623 - ((2 * ((v403 << 18) ^ 0xFE300000)) & 0x9100000);
  LODWORD(STACK[0x680]) = v407;
  unsigned int v408 = ((v403 << 21) ^ 0xF1800000) - 758313411 - ((2 * ((v403 << 21) ^ 0xF1800000)) & 0xA5800000);
  LODWORD(STACK[0x67C]) = v408;
  unsigned int v409 = ((v403 << 27) ^ 0x60000000) + 1208710851 - ((2 * ((v403 << 27) ^ 0x60000000)) & 0x90000000);
  LODWORD(STACK[0x424]) = v409;
  LODWORD(v331) = ((v403 << 22) ^ 0xE3000000) - 1307705299 - ((2 * ((v403 << 22) ^ 0xE3000000)) & 0x64000000);
  LODWORD(STACK[0x420]) = v331;
  unsigned int v410 = ((v403 << 23) ^ 0xC6000000) + 2051843745 - ((2 * ((v403 << 23) ^ 0xC6000000)) & 0xF4000000);
  LODWORD(STACK[0x418]) = v410;
  unsigned int v411 = ((v403 << 26) ^ 0x30000000) - 31735370 + ((v403 << 27) ^ 0x9FFFFFFF);
  unsigned int v412 = ((v403 << 7) ^ 0x6B1FC600) + 2039416500 - ((2 * ((v403 << 7) ^ 0x6B1FC600)) & 0xF31E0D00);
  LODWORD(STACK[0x3F4]) = v412;
  unsigned int v413 = ((v403 << 10) ^ 0x58FE3000) + 1861523863 - ((2 * ((v403 << 10) ^ 0x58FE3000)) & 0xDDE93000);
  LODWORD(STACK[0x3F0]) = v413;
  unsigned int v414 = ((v403 << 13) ^ 0xC7F18000) + 1741878678 - ((2 * ((v403 << 13) ^ 0xC7F18000)) & 0xCFA5C000);
  LODWORD(STACK[0x3EC]) = v414;
  unsigned int v415 = ((v403 << 16) ^ 0x3F8C0000) + 1681661840 - ((2 * ((v403 << 16) ^ 0x3F8C0000)) & 0xC8780000);
  LODWORD(STACK[0x3E8]) = v415;
  unsigned int v416 = ((v403 << 20) ^ 0xF8C00000) + 1886906603 - ((2 * ((v403 << 20) ^ 0xF8C00000)) & 0xE0FFFFFF);
  LODWORD(STACK[0x3E4]) = v416;
  int v417 = ((v403 << 25) ^ 0x18000000) - 1660222421 - ((2 * ((v403 << 25) ^ 0x18000000)) & 0x38000000);
  LODWORD(STACK[0x3E0]) = v417;
  unsigned int v418 = v403;
  LODWORD(STACK[0x66C]) = v403;
  unsigned int v419 = (v402 << 24) ^ (v403 << 15) ^ (v403 << 8) ^ 0xF5F98C00;
  int v420 = (v419 - 1194358331 - ((2 * v419) & 0x719F1200)) ^ v405;
  int v421 = (v420 - 1188897475 - ((2 * v420) & 0x7245BA7A)) ^ v404;
  unsigned int v422 = (v421 + 2039416500 - ((2 * v421) & 0xF31E0D68)) ^ v412;
  unsigned int v423 = (v422 + 1861523863 - ((2 * v422) & 0xDDE9332E)) ^ v413;
  unsigned int v424 = (v423 + 1741878678 - ((2 * v423) & 0xCFA5EB2C)) ^ v414;
  int v425 = (v424 - 1615195507 - ((2 * v424) & 0x3F74251A)) ^ v406;
  unsigned int v426 = (v425 + 1681661840 - ((2 * v425) & 0xC8783F20)) ^ v415;
  int v427 = (v426 + 76110623 - ((2 * v426) & 0x912B63E)) ^ v407;
  unsigned int v428 = (v427 + 1886906603 - ((2 * v427) & 0xE0EFD1D6)) ^ v416;
  unsigned int v429 = (v428 - 758313411 - ((2 * v428) & 0xA59A1C7A)) ^ v408;
  int v430 = (v429 - 1307705299 - ((2 * v429) & 0x641C005A)) ^ v331;
  unsigned int v431 = STACK[0x670];
  int v432 = HIBYTE(LODWORD(STACK[0x670])) ^ 0x1522C ^ (LODWORD(STACK[0x670]) >> 17) ^ (v402 >> 8);
  unsigned int v433 = ((LODWORD(STACK[0x670]) >> 29) | 0xF04B430) ^ (LODWORD(STACK[0x670]) >> 30) ^ 0xAE4A5452;
  LODWORD(STACK[0x3A4]) = v433;
  int v434 = (v432 - 1588666270 - ((2 * v432) & 0x9DC0C4)) ^ v433;
  int v435 = (v431 >> 25) ^ 0x2C201450;
  LODWORD(STACK[0x3CC]) = v435;
  int v436 = (v434 + 740299856 - ((2 * v434) & 0x584028A0)) ^ v435;
  int v437 = (v431 >> 21) ^ 0x4BC646F3;
  LODWORD(STACK[0x3C8]) = v437;
  int v438 = (v436 + 1271285497 - ((2 * v436) & 0x178C8DF2)) ^ v437;
  int v439 = (v431 >> 22) ^ 0x5D3A4CA8;
  LODWORD(STACK[0x3B8]) = v439;
  unsigned int v440 = (v438 + 1564101800 + ~((2 * v438) & 0xBA74995A) + 6) ^ v439;
  LODWORD(STACK[0x394]) = v431 >> 19;
  int v441 = (v431 >> 19) ^ 0x47FDF97E;
  LODWORD(STACK[0x3C4]) = v441;
  unsigned int v442 = (v440 + 1207826772 - ((2 * v440) & 0x8FFBF2A8)) ^ v441;
  int v443 = HIWORD(v431) ^ 0x84B7C1;
  LODWORD(STACK[0x3C0]) = v443;
  int v444 = (v442 + 8697491 - ((2 * v442) & 0x1096D26)) ^ v443;
  unsigned int v445 = (v431 >> 14) ^ 0xD2E2332B;
  LODWORD(STACK[0x3BC]) = v445;
  unsigned int v446 = (v444 - 756926879 - ((2 * v444) & 0xA5C46CC2)) ^ v445;
  int v447 = (v431 >> 11) ^ 0x49A24C86;
  LODWORD(STACK[0x3B0]) = v447;
  unsigned int v448 = (v446 + 1235379926 - ((2 * v446) & 0x9344CDAC)) ^ v447;
  int v449 = (v431 >> 12) ^ 0xDE1F571;
  LODWORD(STACK[0x3B4]) = v449;
  int v450 = (v448 + 232906841 - ((2 * v448) & 0x1BC3C0B2)) ^ v449;
  LODWORD(STACK[0x6F4]) = v402;
  int v451 = (v402 >> 10) ^ 0x7C723519;
  LODWORD(STACK[0x390]) = v451;
  unsigned int v452 = (v450 + 2087870904 - ((2 * v450) & 0xF8E4C370)) ^ v451;
  unsigned int v453 = (v430 + 2051843745 - ((2 * v430) & 0xF4994D42)) ^ v410;
  int v454 = (v402 >> 9) ^ 0x1F9A6093;
  LODWORD(STACK[0x38C]) = v454;
  int v455 = (v452 + 530237905 - ((2 * v452) & 0x3F3593A2)) ^ v454;
  unsigned int v456 = (v402 >> 7) ^ 0x8B2BCBDC;
  LODWORD(STACK[0x398]) = v456;
  int v457 = (v455 - 1960218924 - ((2 * v455) & 0x1652DDA8)) ^ v456;
  int v458 = (v453 - 1660222421 - ((2 * v453) & 0x3A160856)) ^ v417;
  unsigned int v459 = v458 - 31735370 - ((2 * v458) & 0xFC37836C);
  LODWORD(STACK[0x2C0]) = v418 >> 5;
  unsigned int v460 = (v402 >> 6) ^ 0x848E77B4;
  LODWORD(STACK[0x3A8]) = v460;
  unsigned int v461 = (v418 >> 5) ^ v460 ^ (v457 - 2071249500 - ((2 * v457) & 0x9167B48));
  LODWORD(STACK[0x668]) = v411 + 1;
  unsigned int v462 = LODWORD(STACK[0x688]) ^ LODWORD(STACK[0x650]);
  int v463 = (LODWORD(STACK[0x594]) >> 31) ^ (v462 >> 21) ^ (v462 >> 27);
  unsigned int v464 = ((LODWORD(STACK[0x5D8]) << 31) | 0x16C12FB0) ^ (LODWORD(STACK[0x5D8]) << 12) ^ v409 ^ (4 * v461) ^ (32 * v461) ^ (v461 << 11) ^ (v461 >> 21) ^ (32 * (v461 >> 21)) ^ (v461 >> 21 << 11) ^ (((4 * (v461 >> 21)) ^ 0x5C) - ((v461 >> 18) & 0x1B40) - 740233821) ^ ((v459 ^ (v411 + 1)) + 1208710851 - ((2 * (v459 ^ (v411 + 1))) & 0x9016ED86)) ^ (4 * v462) ^ (32 * v462) ^ (v462 << 11) ^ (4 * v463) ^ (32 * v463) ^ (v463 << 11);
  unsigned int v465 = (v464 + 1846780249 - ((2 * v464) & 0xDC2742B2)) ^ LODWORD(STACK[0x6B8]);
  int v466 = (v465 + 208285711 - ((2 * v465) & 0x18D4601E)) ^ LODWORD(STACK[0x6E0]);
  int v467 = (v466 + 819779363 - ((2 * v466) & 0x61B9AE46)) ^ LODWORD(STACK[0x6B0]);
  int v468 = (v467 + 147982279 - ((2 * v467) & 0x11A40F8E)) ^ LODWORD(STACK[0x6EC]);
  int v469 = (v468 - 1244181040 - ((2 * v468) & 0x6BAE9BA0)) ^ LODWORD(STACK[0x698]);
  int v470 = (v469 - 1309487830 - ((2 * v469) & 0x63E59A54)) ^ LODWORD(STACK[0x6F0]);
  int v471 = (v470 - 1344141703 - ((2 * v470) & 0x5FC40CF2)) ^ v390;
  unsigned int v472 = (v471 - 1000411417 - ((2 * v471) & 0x88BDDDCE)) ^ LODWORD(STACK[0x708]);
  int v473 = (v472 - 1920167898 - ((2 * v472) & 0x1B19204C)) ^ LODWORD(STACK[0x664]);
  unsigned int v474 = (v473 - 862990252 - ((2 * v473) & 0x991FA0A8)) ^ LODWORD(STACK[0x710]);
  unsigned int v475 = (v474 - 621968527 - ((2 * v474) & 0xB5DB06E2)) ^ LODWORD(STACK[0x6D8]);
  int v476 = (v475 + 523825198 - ((2 * v475) & 0x3E71E05C)) ^ LODWORD(STACK[0x6D0]);
  int v477 = (v476 - 2128740904 - ((2 * v476) & 0x23BFBB0)) ^ LODWORD(STACK[0x660]);
  int v478 = LODWORD(STACK[0x65C]) + 821297847;
  LODWORD(STACK[0x2A0]) = v478;
  int v479 = (v477 - 1326185801 - ((2 * v477) & 0x61E8056E)) ^ v478;
  int v480 = STACK[0x49C];
  unsigned int v481 = LODWORD(STACK[0x49C]) ^ (v479 - ((2 * v479) & 0x1B0A3EBA) + 226828125) ^ 0xC0E8F68E;
  int v482 = (v481 - ((2 * v481) & 0x5C7FC76A) + 775938997) ^ v462;
  int v483 = ((v482 ^ 0x2DB883E4) + 1073905164 - 2 * ((v482 ^ 0x2DB883E4) & 0x40027E1C ^ v482 & 0x10)) ^ v461;
  LODWORD(STACK[0x3DC]) = v483;
  int v484 = v483 ^ v463;
  int v485 = ((8 * (v483 ^ v463)) ^ 0x17A67F60)
       + 871112777
       - 2 * (((8 * (v483 ^ v463)) ^ 0x17A67F60) & 0x33EC2058 ^ (8 * (v483 ^ v463)) & 0x10);
  LODWORD(STACK[0x3D4]) = v485;
  int v486 = ((4 * (v483 ^ v463)) ^ 0xBD33FB0)
       - 247835422
       - 2 * (((4 * (v483 ^ v463)) ^ 0xBD33FB0) & 0x713A54E4 ^ (4 * (v483 ^ v463)) & 4);
  LODWORD(STACK[0x3D0]) = v486;
  int v487 = (((v483 ^ v463) << 7) ^ 0x7A67F600) + 865832934 - ((2 * (((v483 ^ v463) << 7) ^ 0x7A67F600)) & 0x67371F00);
  LODWORD(STACK[0x65C]) = v487;
  unsigned int v488 = (((v483 ^ v463) << 10) ^ 0xD33FB000) - 1046365581 - ((2 * (((v483 ^ v463) << 10) ^ 0xD33FB000)) & 0x83437000);
  LODWORD(STACK[0x650]) = v488;
  int v489 = (((v483 ^ v463) << 14) ^ 0x33FB0000) - 1145993403 - ((2 * (((v483 ^ v463) << 14) ^ 0x33FB0000)) & 0x77630000);
  LODWORD(STACK[0x2B4]) = v489;
  unsigned int v490 = (((v483 ^ v463) << 13) ^ 0x99FD8000) - 341378490 + (~(2 * (((v483 ^ v463) << 13) ^ 0x99FD8000)) | 0x28B23FFF);
  unsigned int v491 = (((v483 ^ v463) << 20) ^ 0xFEC00000) - 93610490 - ((2 * (((v483 ^ v463) << 20) ^ 0xFEC00000)) & 0xF4C00000);
  LODWORD(STACK[0x3AC]) = v491;
  unsigned int v492 = (((v483 ^ v463) << 16) ^ 0xCFEC0000) - 1220807824 - ((2 * (((v483 ^ v463) << 16) ^ 0xCFEC0000)) & 0x6E760000);
  LODWORD(STACK[0x3A0]) = v492;
  unsigned int v493 = (((v483 ^ v463) << 22) ^ 0xFB000000) - 1230024337 - ((2 * (((v483 ^ v463) << 22) ^ 0xFB000000)) & 0x6D000000);
  LODWORD(STACK[0x39C]) = v493;
  unsigned int v494 = (2 * (v483 ^ v463)) ^ ((v483 ^ v463) << 6) ^ ((v483 ^ v463) << 17) ^ 0xA70264D8;
  LODWORD(STACK[0x2B0]) = v484 ^ 0x4E63A47;
  unsigned int v495 = (v494 + 1175647659 - ((2 * v494) & 0x8C25EB54)) ^ v484 ^ 0x4E63A47;
  unsigned int v496 = (v495 - 247835422 - ((2 * v495) & 0xE274A9C4)) ^ v486;
  int v497 = (v496 + 871112777 - ((2 * v496) & 0x67D84092)) ^ v485;
  int v498 = (v497 + 865832934 - ((2 * v497) & 0x67371FCC)) ^ v487;
  unsigned int v499 = (v498 - 1046365581 - ((2 * v498) & 0x834374E6)) ^ v488;
  LODWORD(STACK[0x2B8]) = v490 + 1;
  unsigned int v500 = (((v499 - 341378490 - ((2 * v499) & 0xD74DF48C)) ^ (v490 + 1))
        - 1145993403
        - 2
        * (((v499 - 341378490 - ((2 * v499) & 0xD74DF48C)) ^ (v490 + 1)) & 0x3BB1874D ^ (v499
                                                                                       - 341378490
                                                                                       - ((2 * v499) & 0xD74DF48C)) & 8)) ^ v489;
  unsigned int v501 = ((v484 << 24) ^ 0xEC000000) - 1036582761 - ((2 * ((v484 << 24) ^ 0xEC000000)) & 0x84000000);
  LODWORD(STACK[0x2BC]) = v501;
  int v502 = (v500 - 1220807824 - ((2 * v500) & 0x6E77E6E0)) ^ v492;
  unsigned int v503 = (v502 - 93610490 - ((2 * v502) & 0xF4D73C0C)) ^ v491;
  LODWORD(STACK[0x3D8]) = v484;
  LODWORD(STACK[0x2AC]) = v484 << 26;
  unsigned int v504 = ((v484 << 25) ^ 0xD8000000) + 74754679 - ((v484 << 26) & 0x8000000);
  LODWORD(STACK[0x648]) = v504;
  int v505 = v501 ^ v493 ^ (v503 - 1230024337 - ((2 * v503) & 0x6D5EA2DE));
  LODWORD(STACK[0x2A8]) = v505;
  int v506 = (v504 & 0x8000000 ^ 0x7CAEFFBD) + 2 * (v504 & 0x8000000);
  LODWORD(STACK[0x2A4]) = v506;
  BOOL v323 = ((v505 ^ 0xC0000000) & (v506 - 2091843517)) == 0;
  int v507 = LODWORD(STACK[0x630]) ^ (LODWORD(STACK[0x494]) >> 26) ^ (LODWORD(STACK[0x480]) >> 3) ^ LODWORD(STACK[0x31C]) ^ LODWORD(STACK[0x320]) ^ 0x1BE3A77E;
  int v508 = (v507 + 718184797 - ((v507 << (LODWORD(STACK[0x700]) ^ 0x67)) & 0x159D42BA)) ^ LODWORD(STACK[0x328]);
  int v509 = (v508 - 1927917408 - ((2 * v508) & 0x1A2CA140)) ^ LODWORD(STACK[0x330]);
  int v510 = (v509 + 529321637 - 2 * (v509 & 0x1F8CCEB5 ^ v508 & 0x10)) ^ LODWORD(STACK[0x450]);
  unsigned int v511 = (v510 - 154269092 - ((2 * v510) & 0xED9C14B8)) ^ LODWORD(STACK[0x448]);
  unsigned int v512 = (v511 + 1721825895 - ((2 * v511) & 0xCD41F4CE)) ^ LODWORD(STACK[0x460]);
  int v513 = (v512 - 1159271086 - ((2 * v512) & 0x75CDDAA4)) ^ LODWORD(STACK[0x458]);
  int v514 = (v513 - 1972708357 - ((2 * v513) & 0x14D5B7F6)) ^ LODWORD(STACK[0x44C]);
  int v515 = (v514 - 1229746146 - ((2 * v514) & 0x6D67203C)) ^ LODWORD(STACK[0x32C]);
  unsigned int v516 = (v515 - 1015101147 - ((2 * v515) & 0x86FD924A)) ^ LODWORD(STACK[0x444]);
  unsigned int v517 = (v516 + 1989965297 - ((2 * v516) & 0xED38EBE2)) ^ LODWORD(STACK[0x324]);
  unsigned int v518 = LODWORD(STACK[0x634]) ^ (v517 - 54126780 - ((2 * v517) & 0xF98C2E88));
  int v519 = (v518 >> 21) ^ (v518 >> 27);
  int v520 = (2 * LODWORD(STACK[0x480])) ^ (LODWORD(STACK[0x480]) << 6) ^ (LODWORD(STACK[0x480]) << 29) ^ LODWORD(STACK[0x334]) ^ LODWORD(STACK[0x470]) ^ LODWORD(STACK[0x46C]) ^ (4 * v518) ^ (32 * v518) ^ (v518 << 11) ^ v519 ^ (4 * v519) ^ (32 * v519) ^ (v519 << 11) ^ 0x4ACBC64F;
  int v521 = (v520 + 553202206 - ((2 * v520) & 0x41F2643C)) ^ LODWORD(STACK[0x43C]);
  int v522 = (v521 + 2083732198 + (~(2 * v521) | 0x7998A33) + 1) ^ LODWORD(STACK[0x488]);
  int v523 = (v522 - 2098349310 - ((2 * v522) & 0x5DB7604)) ^ LODWORD(STACK[0x33C]);
  unsigned int v524 = (v523 + 1159377918 - ((2 * v523) & 0x8A3567FC)) ^ LODWORD(STACK[0x58C]);
  int v525 = (v524 + 456852359 - ((2 * v524) & 0x3676070E)) ^ LODWORD(STACK[0x580]);
  unsigned int v526 = (v525 + 2077485557 - ((2 * v525) & 0xF7A7D3EA)) ^ LODWORD(STACK[0x484]);
  int v527 = (v526 + 283893092 - ((2 * v526) & 0x21D7BAC8)) ^ LODWORD(STACK[0x454]);
  int v528 = (v527 - 1077921990 - ((2 * v527) & 0x7F806E74)) ^ LODWORD(STACK[0x574]);
  int v529 = (v528 - 1554416580 - ((2 * v528) & 0x46B2F878)) ^ LODWORD(STACK[0x338]);
  int v530 = (v529 - 1895618757 - ((2 * v529) & 0x1E064E76)) ^ LODWORD(STACK[0x578]);
  int v531 = (v530 - 1297350255 - ((2 * v530) & 0x65580322)) ^ LODWORD(STACK[0x570]);
  int v532 = (v531 - 1500687077 - ((2 * v531) & 0x4D1AAA36)) ^ LODWORD(STACK[0x47C]);
  int v533 = (v532 - ((2 * v532) & 0xEAC316C) - 2024400714) ^ v518;
  LODWORD(STACK[0x43C]) = v533;
  LODWORD(STACK[0x58C]) = (LODWORD(STACK[0x310]) ^ (-1673081951 * LODWORD(STACK[0x2D0])
                                                  + 1633178148
                                                  - ((948803394 * LODWORD(STACK[0x2D0]) + 968328188) & 0x88F9204C)))
                        + LODWORD(STACK[0x2E0]);
  int v534 = -1673081951 * LODWORD(STACK[0x2C4])
       - 1367762723
       - ((948803394 * LODWORD(STACK[0x2C4]) + 968328188) & 0x233BADBE);
  int v535 = -1673081951 * LODWORD(STACK[0x2CC])
       - 101859492
       - 2
       * ((-1673081951 * LODWORD(STACK[0x2CC]) + 484164094) & 0x5D11FD5F ^ (-1673081951 * LODWORD(STACK[0x2CC])) & 1);
  int v536 = -1673081951 * LODWORD(STACK[0x2D4])
       - 1367762723
       - ((948803394 * LODWORD(STACK[0x2D4]) + 968328188) & 0x233BADBE);
  unsigned int v537 = -1673081951 * LODWORD(STACK[0x2D8])
       - 101859492
       - ((948803394 * LODWORD(STACK[0x2D8]) + 968328188) & 0xBA23FABC);
  int v538 = -1673081951 * LODWORD(STACK[0x2DC])
       - 1367762723
       - ((948803394 * LODWORD(STACK[0x2DC]) + 968328188) & 0x233BADBE);
  int v539 = -1673081951 * LODWORD(STACK[0x2E8])
       - 1367762723
       - ((948803394 * LODWORD(STACK[0x2E8]) + 968328188) & 0x233BADBE);
  int v540 = -1673081951 * LODWORD(STACK[0x2E4])
       - 101859492
       - 2
       * ((-1673081951 * LODWORD(STACK[0x2E4]) + 484164094) & 0x5D11FD5F ^ (-1673081951 * LODWORD(STACK[0x2E4])) & 1);
  int v541 = -1673081951 * LODWORD(STACK[0x2EC])
       - 1367762723
       - ((948803394 * LODWORD(STACK[0x2EC]) + 968328188) & 0x233BADBE);
  LODWORD(v331) = -1673081951 * LODWORD(STACK[0x2F0])
                - 101859492
                - ((948803394 * LODWORD(STACK[0x2F0]) + 968328188) & 0xBA23FABC);
  int v542 = -1673081951 * LODWORD(STACK[0x2F4])
       - 1367762723
       - ((948803394 * LODWORD(STACK[0x2F4]) + 968328188) & 0x233BADBE);
  unsigned int v543 = -1673081951 * LODWORD(STACK[0x2F8])
       - 101859492
       - ((948803394 * LODWORD(STACK[0x2F8]) + 968328188) & 0xBA23FABC);
  unsigned int v544 = -1673081951 * LODWORD(STACK[0x2FC])
       - 101859492
       - ((948803394 * LODWORD(STACK[0x2FC]) + 968328188) & 0xBA23FABC);
  int v545 = -1673081951 * LODWORD(STACK[0x300])
       - 1367762723
       - ((948803394 * LODWORD(STACK[0x300]) + 968328188) & 0x233BADBE);
  int v546 = -1673081951 * LODWORD(STACK[0x304])
       - 101859492
       - 2
       * ((-1673081951 * LODWORD(STACK[0x304]) + 484164094) & 0x5D11FD5F ^ (-1673081951 * LODWORD(STACK[0x304])) & 1);
  int v547 = STACK[0x30C];
  LODWORD(STACK[0x580]) = LODWORD(STACK[0x30C]) ^ (-1673081951 * LODWORD(STACK[0x2C8])
                                                 - 101859492
                                                 - ((948803394 * LODWORD(STACK[0x2C8]) + 968328188) & 0xBA23FABC));
  LODWORD(STACK[0x574]) = v547 ^ v535;
  LODWORD(STACK[0x570]) = v547 ^ v537;
  LODWORD(STACK[0x484]) = v547 ^ v540;
  LODWORD(STACK[0x480]) = v547 ^ v331;
  LODWORD(STACK[0x46C]) = v547 ^ v543;
  LODWORD(STACK[0x454]) = v547 ^ v544;
  LODWORD(STACK[0x460]) = v547 ^ v546;
  int v548 = -1673081951 * LODWORD(STACK[0x308])
       - 1367762723
       - ((948803394 * LODWORD(STACK[0x308]) + 968328188) & 0x233BADBE);
  int v549 = STACK[0x318];
  LODWORD(STACK[0x578]) = LODWORD(STACK[0x318]) ^ v534;
  LODWORD(STACK[0x494]) = v549 ^ v536;
  LODWORD(STACK[0x488]) = v549 ^ v538;
  LODWORD(STACK[0x458]) = v549 ^ v539;
  LODWORD(STACK[0x47C]) = v549 ^ v541;
  LODWORD(STACK[0x470]) = v549 ^ v542;
  LODWORD(STACK[0x450]) = v549 ^ v545;
  LODWORD(STACK[0x44C]) = v549 ^ v548;
  unsigned int v550 = (LODWORD(STACK[0x4B8]) >> 28) ^ (LODWORD(STACK[0x4B8]) >> 27) ^ (LODWORD(STACK[0x4B4]) >> 2) ^ LODWORD(STACK[0x34C]);
  int v551 = ((LODWORD(STACK[0x640]) ^ 0x18B60C1E ^ v550)
        + 899659121
        - ((2 * (LODWORD(STACK[0x640]) ^ 0x18B60C1E ^ v550)) & 0x6B3F6AE2)) ^ LODWORD(STACK[0x490]);
  int v552 = (v551 + 62492704 - ((2 * v551) & 0x7732040)) ^ LODWORD(STACK[0x590]);
  int v553 = (v552 + 953064581 - ((2 * v552) & 0x719D390A)) ^ LODWORD(STACK[0x348]);
  int v554 = (v553 - 1533252672 - ((2 * v553) & 0x4938D780)) ^ LODWORD(STACK[0x354]);
  unsigned int v555 = (v554 - 273141708 - ((2 * v554) & 0xDF706068)) ^ LODWORD(STACK[0x340]);
  unsigned int v556 = (v555 + 2103319839 + ~((2 * v555) & 0xFABC57CA) + 3783) ^ LODWORD(STACK[0x344]);
  unsigned int v557 = (v556 + 1899054932 - ((2 * v556) & 0xE2628EA8)) ^ LODWORD(STACK[0x48C]);
  unsigned int v558 = (v557 - 991643417 - ((2 * v557) & 0x89C971CE)) ^ LODWORD(STACK[0x4A8]);
  int v559 = (v558 + 855914054 - ((2 * v558) & 0x66086C8C)) ^ LODWORD(STACK[0x63C]);
  unsigned int v560 = LODWORD(STACK[0x614]) ^ (v559 + 760419377 - ((2 * v559) & 0x5AA62862));
  int v561 = (v560 >> 21) ^ (v550 >> 27);
  unsigned int v562 = ((LODWORD(STACK[0x618]) ^ (LODWORD(STACK[0x5B8]) >> 26) ^ 0x21)
        - 1962966251
        - 2
        * ((LODWORD(STACK[0x618]) ^ (LODWORD(STACK[0x5B8]) >> 26) ^ 0x21) & 0xDDDDDDDD ^ (LODWORD(STACK[0x5B8]) >> 26) & 8)) ^ LODWORD(STACK[0x368]);
  int v563 = (v562 - 1137705847 - ((2 * v562) & 0x785FF912)) ^ LODWORD(STACK[0x36C]);
  int v564 = (v563 + 1497968267 - ((2 * v563) & 0x32925D16)) ^ LODWORD(STACK[0x4C4]);
  int v565 = (v564 + 1783296369 - ((2 * v564) & 0x5495E2E2)) ^ LODWORD(STACK[0x4C8]);
  int v566 = (v565 - 315644501 - ((2 * v565) & 0x5A5F4B56)) ^ LODWORD(STACK[0x4D8]);
  unsigned int v567 = (v566 - 939000836 + (~(2 * v566) | 0xEFF00807) + 1) ^ LODWORD(STACK[0x4CC]);
  int v568 = (v567 - 1003298429 - ((2 * v567) & 0x865C306)) ^ LODWORD(STACK[0x4C0]);
  int v569 = (v568 + 527759126 - ((2 * v568) & 0x3EE9EE2C)) ^ LODWORD(STACK[0x4BC]);
  int v570 = (v569 + 185784055 - ((2 * v569) & 0x1625ADEE)) ^ LODWORD(STACK[0x370]);
  int v571 = (v570 + 490078828 - ((2 * v570) & 0x3A6C04D8)) ^ LODWORD(STACK[0x364]);
  int v572 = LODWORD(STACK[0x6C4]) ^ 0x10E846E ^ (v571 - 1088754824 - ((2 * v571) & 0x7E35D6F0));
  unsigned int v573 = v572
       + (LODWORD(STACK[0x360]) ^ 0x21D08DD)
       - 2 * (v572 & (LODWORD(STACK[0x360]) ^ 0x21D08DD))
       + 1971344670
       - 2
       * ((v572 + (LODWORD(STACK[0x360]) ^ 0x21D08DD) - 2 * (v572 & (LODWORD(STACK[0x360]) ^ 0x21D08DD))) & 0x7580551F ^ (v572 + (LODWORD(STACK[0x360]) ^ 0x21D08DD)) & 1);
  unsigned int v574 = (((LODWORD(STACK[0x5B8]) >> 3) ^ 0x10E846EE)
        + 1971344670
        - 2 * (((LODWORD(STACK[0x5B8]) >> 3) ^ 0x10E846EE) & 0x1580551F ^ (LODWORD(STACK[0x5B8]) >> 3) & 1)) ^ LODWORD(STACK[0x4D0]) ^ v573;
  int v575 = 16 * LODWORD(STACK[0x4B4]);
  unsigned int v576 = (32 * LODWORD(STACK[0x4B4])) ^ (LODWORD(STACK[0x4B4]) << 30) ^ v575 ^ 0xBE699100;
  int v577 = (v576 + 818754411 - 2 * (v576 & 0x30CD3370 ^ v575 & 0x10)) ^ LODWORD(STACK[0x62C]);
  int v578 = (v577 + 78235345 - ((2 * v577) & 0x9538DA2)) ^ LODWORD(STACK[0x624]);
  unsigned int v579 = (v578 + 1179883826 - ((2 * v578) & 0x8CA73264)) ^ LODWORD(STACK[0x4AC]);
  int v580 = (v579 - 1414139173 - ((2 * v579) & 0x576BE5B6)) ^ LODWORD(STACK[0x35C]);
  unsigned int v581 = (v580 + 2027681761 - ((2 * v580) & 0xF1B7EFC2)) ^ LODWORD(STACK[0x358]);
  unsigned int v582 = (v581 + 1458572557 - ((2 * v581) & 0xADE01A1A)) ^ LODWORD(STACK[0x4A4]);
  int v583 = (v582 - 1216850948 - ((2 * v582) & 0x6EF0A7F8)) ^ LODWORD(STACK[0x350]);
  unsigned int v584 = (v583 - 170632104 - ((2 * v583) & 0xEBA8B8B0)) ^ LODWORD(STACK[0x4A0]);
  unsigned int v585 = (v584 - 799317137 - ((2 * v584) & 0xA0B6C6DE)) ^ LODWORD(STACK[0x598]);
  int v586 = (v585 + 972017860 - ((2 * v585) & 0x73DFA188)) ^ LODWORD(STACK[0x628]);
  unsigned int v587 = (v586 - 1030295686 - ((2 * v586) & 0x852DDEF4)) ^ LODWORD(STACK[0x498]);
  int v588 = (v574 >> 27) ^ (v573 >> 30) ^ (v574 >> 21);
  int v589 = (LODWORD(STACK[0x5C4]) << 29) ^ (LODWORD(STACK[0x5B8]) << 6) ^ (2 * LODWORD(STACK[0x5B8])) ^ (4 * v574) ^ (32 * v574) ^ (v574 << 11) ^ (4 * v588) ^ (32 * v588) ^ (v588 << 11) ^ LODWORD(STACK[0x4B0]) ^ (4 * v560) ^ (32 * v560) ^ (v560 << 11) ^ (4 * v561) ^ (32 * v561) ^ (v561 << 11) ^ (((v587 + 618130082 - ((2 * v587) & 0x49AFD544)) ^ LODWORD(STACK[0x620])) - 1806674821 - 2 * (((v587 + 618130082 - ((2 * v587) & 0x49AFD544)) ^ LODWORD(STACK[0x620])) & 0x1450547F ^ (v587 + 618130082 - ((2 * v587) & 0x49AFD544)) & 4)) ^ 0x35505B5A;
  unsigned int v590 = (v589 + 1362296504 - ((2 * v589) & 0xA265FD70)) ^ LODWORD(STACK[0x440]);
  int v591 = (v590 - 1264789834 - ((2 * v590) & 0x6939AD6C)) ^ LODWORD(STACK[0x37C]);
  unsigned int v592 = (v591 - 853511766 - ((2 * v591) & 0x9A40E354)) ^ LODWORD(STACK[0x374]);
  int v593 = (v592 + 933416112 - ((2 * v592) & 0x6F459960)) ^ LODWORD(STACK[0x5BC]);
  int v594 = (v593 + 965007590 - ((2 * v593) & 0x7309B1CC)) ^ LODWORD(STACK[0x5B4]);
  unsigned int v595 = (v594 + 1555159915 - ((2 * v594) & 0xB963B6D6)) ^ LODWORD(STACK[0x5C0]);
  unsigned int v596 = (v595 + 1278548561 - ((2 * v595) & 0x986A34A2)) ^ LODWORD(STACK[0x4E8]);
  int v597 = (v596 - 1627216652 - ((2 * v596) & 0x3E0549E8)) ^ LODWORD(STACK[0x5AC]);
  int v598 = (v597 + 638939765 - ((2 * v597) & 0x4C2AE4EA)) ^ LODWORD(STACK[0x378]);
  unsigned int v599 = (v598 - 1027996434 - ((2 * v598) & 0x857409DC)) ^ LODWORD(STACK[0x5B0]);
  int v600 = (v599 + 533049254 - ((2 * v599) & 0x3F8B5F4C)) ^ LODWORD(STACK[0x4F4]);
  int v601 = (v600 + 195581571 - ((2 * v600) & 0x1750AD06)) ^ LODWORD(STACK[0x4E4]);
  int v602 = (v601 + 959967829 - ((2 * v601) & 0x726FE4AA)) ^ LODWORD(STACK[0x5A0]);
  int v603 = (v602 + 729530802 - ((2 * v602) & 0x56F78364)) ^ LODWORD(STACK[0x5A8]);
  int v604 = (v603 - 1710955569 - ((2 * v603) & 0x3409C79E)) ^ LODWORD(STACK[0x5A4]);
  unsigned int v605 = v574 ^ 0x9F0E05CF ^ (v604 - ((2 * v604) & 0x2EF44D70) - 1753602376);
  unsigned int v606 = v588 ^ 0xABAD46C9 ^ (v605 - 1414707574 - ((2 * v605) & 0x575A8D14));
  unsigned int v607 = (v606 - 118132068 - ((2 * v606) & 0xF1EAE83E) + 387) ^ v560;
  unsigned int v608 = ((v607 ^ 0xFA3F9858) + 849264857 - 2 * ((v607 ^ 0xFA3F9858) & 0x329EC0F9 ^ v607 & 0x20)) ^ v561;
  LODWORD(STACK[0x448]) = v608;
  v609 = (unsigned __int8 *)STACK[0x718];
  LODWORD(STACK[0x498]) = ((*(unsigned __int8 *)(STACK[0x718] + 956) ^ 0xD3) << 16) | ((*(unsigned __int8 *)(STACK[0x718] + 653) ^ 0x85) << 8) | *(unsigned __int8 *)(STACK[0x718] + 350) ^ 0x85;
  int v610 = v609[170] ^ 0xD3 | ((v609[473] ^ 0xD3) << 8);
  int v611 = v610 - ((2 * v610) & 0x967A) - 2037167299;
  unsigned int v612 = (v611 & 0x8496FFFF ^ 0xC79B4B3D)
       + 1459883161
       + ((2 * (v611 & 0x8496FFFF ^ 0xC79B4B3D)) & 0x8081930 ^ 0x79FFFFFF);
  unsigned int v613 = ((v612 << 8) ^ 0x40C9800) - ((2 * ((v612 << 8) ^ 0x40C9800)) & 0x8AC0E200) - 983535147;
  LODWORD(STACK[0x4B0]) = v613 ^ 0x6071D5 | v609[832] ^ 0xD3;
  LOWORD(v612) = ((LODWORD(STACK[0x5C8]) + 29675) | 0x4CC2)
               - ((LODWORD(STACK[0x5C8]) + 29675) & 0xB33D)
               + (v613 & 0xB400 ^ 0x841F)
               + (v613 & 0xB400 ^ 0x3000);
  LODWORD(STACK[0x4B8]) = ((v609[709] ^ 0xD3 ^ (((((unsigned __int16)v611 ^ 0x4B3D)
                                                + 3225
                                                + ~((2 * ((unsigned __int16)v611 ^ 0x4B3D)) & 0x1930)) & 0x7A56 ^ 0x810)
                                              + (v611 & 0x7A56 ^ 0x3042))) << 16) | ((v609[406] ^ 0xD3) << 8) | v609[103] ^ 0xD3;
  LODWORD(STACK[0x4C4]) = v609[585] ^ 0xD3 | ((v609[888] ^ 0xD3) << 8) | ((v609[(unsigned __int16)(v612 + 1)] ^ 0xD3) << 16);
  LODWORD(STACK[0x4AC]) = ((v609[159] ^ 0xD3) << 8) | ((v609[462] ^ 0xD3) << 16) | v609[821] ^ 0xD3;
  LODWORD(STACK[0x490]) = ((v609[641] ^ 0xD3) << 8) | ((v609[944] ^ 0xD3) << 16) | v609[338] ^ 0xD3;
  LODWORD(STACK[0x4C8]) = ((v609[877] ^ 0xD3) << 8) | ((v609[215] ^ 0xD3) << 16) | v609[574] ^ 0xD3;
  LODWORD(STACK[0x4A8]) = ((v609[394] ^ 0xD3) << 8) | ((v609[697] ^ 0xD3) << 16) | v609[91] ^ 0xD3;
  LODWORD(STACK[0x4D0]) = ((v609[933] ^ 0xD3) << 16) | ((v609[630] ^ 0xD3) << 8) | v609[327] ^ 0xD3;
  LODWORD(STACK[0x4CC]) = v609[506] ^ 0xD3 | ((v609[809] ^ 0xD3 | ((v609[450] ^ 0xD3) << 16) | ((v609[147] ^ 0xD3) << 8)) << 8);
  int v614 = ((v609[203] ^ 0xD3) << 16) | ((v609[865] ^ 0xD3) << 8) | v609[562] ^ 0xD3;
  LODWORD(STACK[0x5A0]) = v609[742] ^ 0xD3 | ((((v609[686] ^ 0xD3) << 16) | ((v609[383] ^ 0xD3) << 8) | v609[80] ^ 0xD3) << 8);
  int v615 = (((v609[136] ^ 0xD3) << 8) + 12436911 - (((v609[136] ^ 0xD3) << 9) & 0x18A00)) ^ 0xBDC5AF | ((v609[439] ^ 0xD3) << 16);
  LODWORD(STACK[0x598]) = ((v609[921] ^ 0xD3) << 16) | ((v609[618] ^ 0xD3) << 8) | v609[315] ^ 0xD3;
  LODWORD(STACK[0x4BC]) = (v609[798] ^ 0xD3) + v615;
  LODWORD(STACK[0x4A0]) = v609[259] ^ 0xD3 | (v614 << 8);
  int v616 = v609[248];
  LODWORD(STACK[0x5BC]) = v616 ^ 0xD3 | ((v609[551] ^ 0xD3 | ((v609[854] ^ 0xD3) << 8) | ((v609[192] ^ 0xD3) << 16)) << 8);
  LODWORD(STACK[0x48C]) = ((v609[371] ^ 0xD3) << 8) | ((v609[((v616 & 0x1C ^ 0xCLL) + (v616 & 0x1C ^ 0x10)) ^ 0x2BE] ^ 0xD3) << 16) | v609[68] ^ 0xD3;
  LODWORD(STACK[0x5AC]) = ((v609[910] ^ 0xD3) << 24) | ((v609[607] ^ 0x85) << 16) | ((v609[304] ^ 0xD3) << 8);
  LODWORD(STACK[0x4A4]) = ((v609[124] ^ 0xD3) << 8) | ((v609[427] ^ 0xD3) << 16) | v609[786] ^ 0xD3;
  LODWORD(STACK[0x4B4]) = v609[57] ^ 0xD3 | ((v609[663] ^ 0xD3) << 16) | ((v609[360] ^ 0xD3) << 8);
  LODWORD(STACK[0x4C0]) = ((v609[180] ^ 0xD3) << 16) | ((v609[842] ^ 0xD3) << 8) | v609[539] ^ 0xD3;
  LODWORD(STACK[0x4F4]) = ((v609[416] ^ 0xD3) << 16) | ((v609[113] ^ 0xD3) << 8) | v609[775] ^ 0x85;
  LODWORD(STACK[0x5B8]) = ((v609[595] ^ 0xD3) << 8) | ((v609[898] ^ 0xD3) << 16) | v609[292] ^ 0xD3;
  LODWORD(STACK[0x4E4]) = v609[528] ^ 0xD3 | ((v609[831] ^ 0xD3) << 8) | ((v609[169] ^ 0xD3) << 16);
  LODWORD(STACK[0x4E8]) = v609[45] ^ 0xD3 | ((v609[348] ^ 0xD3) << 8) | ((v609[651] ^ 0xD3) << 16);
  LODWORD(STACK[0x5B4]) = v609[281] ^ 0xD3 | ((v609[584] ^ 0xD3) << 8) | ((v609[887] ^ 0xD3) << 16);
  LODWORD(STACK[0x590]) = ((v609[404] ^ 0xD3) << 16) | ((v609[101] ^ 0xD3) << 8) | v609[763] ^ 0xD3;
  LODWORD(STACK[0x5A8]) = ((v609[640] ^ 0xD3) << 16) | ((v609[337] ^ 0xD3) << 8) | v609[34] ^ 0xD3;
  LODWORD(STACK[0x5C0]) = ((v609[157] ^ 0xD3) << 16) | ((v609[819] ^ 0xD3) << 8) | v609[516] ^ 0xD3;
  LODWORD(STACK[0x5A4]) = ((v609[393] ^ 0xD3) << 16) | ((v609[90] ^ 0xD3) << 8) | v609[752] ^ 0xD3;
  LODWORD(STACK[0x4D8]) = ((v609[875] ^ 0xD3) << 16) | ((v609[572] ^ 0xD3) << 8) | v609[269] ^ 0xD3;
  int v617 = v609[505] ^ 0xD3 | ((v609[808] ^ 0xD3) << 8) | ((v609[146] ^ 0xD3) << 16);
  LODWORD(STACK[0x5C4]) = v609[22] ^ 0xD3 | ((v609[325] ^ 0xD3) << 8) | ((v609[628] ^ 0xD3) << 16);
  int v618 = STACK[0x40C];
  int v619 = (LODWORD(STACK[0x40C]) ^ 0xD3) + 842433194 - ((2 * (LODWORD(STACK[0x40C]) ^ 0xD3)) & 0x55555555);
  LODWORD(STACK[0x440]) = v619;
  LODWORD(STACK[0x830]) = -2009212831 * (LODWORD(STACK[0x56C]) ^ 0xE216619C) - 75026750;
  LODWORD(STACK[0x834]) = -2009212831 * (v608 ^ 0x54448374) - 75026750;
  LODWORD(STACK[0x838]) = -2009212831 * (LODWORD(STACK[0x5D0]) ^ 0x31D5F1AF) - 75026750;
  unsigned int v620 = STACK[0x5D4];
  unsigned int v621 = LODWORD(STACK[0x5D4]) ^ LODWORD(STACK[0x638]);
  uint64_t v622 = v621 ^ 0x78A2DC84;
  LODWORD(STACK[0x83C]) = -2009212831 * v622 - 75026750;
  LODWORD(STACK[0x844]) = -2009212831 * (v480 ^ 0xCD6DE9D3) - 75026750;
  LODWORD(STACK[0x848]) = -2009212831 * (LODWORD(STACK[0x6C8]) ^ 0x88D1417B) - 75026750;
  LODWORD(STACK[0x840]) = -2009212831 * (v533 ^ 0x97CC58CF) - 75026750;
  LOBYTE(v543) = (v619 ^ 0xAA) - 2 * ((v619 ^ 0xAA) & 0xAB ^ (v619 ^ 0xAA) & 2) - 87;
  LODWORD(STACK[0x5B0]) = (v619 ^ 0x323682AA | (v617 << 8))
                        - 2 * ((v619 ^ 0x323682AA | (v617 << 8)) & 0x33BF63AB ^ (v619 ^ 0x323682AA) & 2)
                        - 1279302743;
  LODWORD(STACK[0x6C4]) = (((v621 ^ 0xD75AAA3) << 11) ^ 0xBBB13800)
                        + 627893842
                        - ((2 * (((v621 ^ 0xD75AAA3) << 11) ^ 0xBBB13800)) & 0x4AD9C000);
  LODWORD(STACK[0x84C]) = -2009212831 * STACK[0x3F8] - 75026750;
  LODWORD(STACK[0x618]) = ((8 * (v621 ^ 0xD75AAA3)) ^ 0xAEBBB138)
                        - 1899885269
                        + ~((2 * ((8 * (v621 ^ 0xD75AAA3)) ^ 0xAEBBB138)) & 0x1D841A50);
  int v623 = v609[12];
  LODWORD(STACK[0x49C]) = v623;
  LOBYTE(v575) = (v623 & 0xD ^ 1) + (v623 & 0xD ^ 0xC);
  LODWORD(STACK[0x63C]) = (((v621 ^ 0xD75AAA3) << 14) ^ 0xDD89C000)
                        - 1164799692
                        - ((2 * (((v621 ^ 0xD75AAA3) << 14) ^ 0xDD89C000)) & 0x75250000);
  unsigned int v624 = v620;
  int v625 = (v620 >> 28) ^ (v620 >> 27) ^ LODWORD(STACK[0x5EC]) ^ 0xB;
  LODWORD(STACK[0x6C8]) = (((v621 ^ 0xD75AAA3) << 26) ^ 0x9C000000)
                        - 940627031
                        - ((2 * (((v621 ^ 0xD75AAA3) << 26) ^ 0x9C000000)) & 0x88000000);
  unsigned int v626 = (((v621 ^ 0xD75AAA3) << 18) ^ 0xD89C0000)
       - 839422508
       - ((2 * (((v621 ^ 0xD75AAA3) << 18) ^ 0xD89C0000)) & 0x9BE80000);
  LODWORD(STACK[0x638]) = v626;
  unsigned int v627 = (((v621 ^ 0xD75AAA3) << 19) ^ 0xB1380000)
       - 768473302
       - ((2 * (((v621 ^ 0xD75AAA3) << 19) ^ 0xB1380000)) & 0xA4600000);
  LODWORD(STACK[0x5EC]) = v627;
  LODWORD(STACK[0x614]) = (((v621 ^ 0xD75AAA3) << 22) ^ 0x89C00000)
                        - 721564755
                        - ((2 * (((v621 ^ 0xD75AAA3) << 22) ^ 0x89C00000)) & 0xA9800000);
  int v628 = v609[449];
  LODWORD(STACK[0x640]) = v628;
  unsigned int v629 = (((v621 ^ 0xD75AAA3) << 23) ^ 0x13800000)
       - 827367775
       - ((2 * (((v621 ^ 0xD75AAA3) << 23) ^ 0x13800000)) & 0x9D000000);
  LODWORD(STACK[0x370]) = v629;
  int v630 = v622 << ((~(_BYTE)v543 & 2) + (~(_BYTE)v618 & 2));
  int v631 = v622 << v575;
  uint64_t v632 = v622 << ((v628 & 0x75 ^ 0x51 | v628 & 0x75 ^ 0x24) ^ 0x60u);
  LODWORD(v622) = v622 >> ((((v543 ^ 0x56) - 2 * ((v543 ^ 0x56) & 3) + 3) ^ v618) & 0xB);
  unsigned int v633 = v622 + 668137570 - ((2 * v622) & 0x4FA5F0C4);
  int v634 = (((v621 ^ 0xD75AAA3) << 27) ^ 0x38000000)
       - 1385275551
       - ((2 * (((v621 ^ 0xD75AAA3) << 27) ^ 0x38000000)) & 0x55555555);
  LODWORD(STACK[0x374]) = v634;
  int v635 = (((v621 ^ 0xD75AAA3) << 28) ^ 0x70000000)
       + 556462035
       - ((2 * (((v621 ^ 0xD75AAA3) << 28) ^ 0x70000000)) & 0x40000000);
  LODWORD(STACK[0x444]) = v635;
  unsigned int v636 = LODWORD(STACK[0x5E8]) ^ (v624 >> 15) ^ ((v621 ^ 0xD75AAA3) >> 2) ^ (v625 - 659010957 - ((2 * v625) & 0xFFFFFFE7));
  int v637 = v633 ^ ((v636 ^ 0x1D752CCC) + 668137570 - 2 * ((v636 ^ 0x1D752CCC) & 0x27D2F872 ^ v636 & 0x10));
  int v638 = v637 - 1243315048 - ((2 * v637) & 0x6BC90930);
  unsigned int v639 = (v624 >> 21) ^ 0xB5E4875D;
  int v640 = (v624 >> 19) ^ 0x657B5867;
  unsigned int v641 = ((v638 ^ v639) + 1702582131 - ((2 * (v638 ^ v639)) & 0xCAF6AEE6)) ^ v640;
  unsigned int v642 = (v624 >> 18) ^ 0xBA929F23;
  int v643 = (v641 - 1164803829 - ((2 * v641) & 0x75250216)) ^ v642;
  int v644 = (v624 >> 14) ^ 0x57F17D1F;
  unsigned int v645 = (v643 + 1475387284 - ((2 * v643) & 0xAFE13F28)) ^ v644;
  int v646 = (v624 >> 13) ^ 0x55E2B10A;
  unsigned int v647 = (v645 + 1440838684 - ((2 * v645) & 0xABC2E838)) ^ v646;
  LODWORD(v622) = (v621 >> 10) ^ 0x27D4FA92;
  LODWORD(STACK[0x3F8]) = v622;
  int v648 = (v647 + 667603493 - ((2 * v647) & 0x4F95A44A)) ^ v622;
  LODWORD(v622) = (v621 >> 9) ^ 0xE8BA62E4;
  LODWORD(STACK[0x37C]) = v622;
  int v649 = (v648 - 393858166 - ((2 * v648) & 0xD10C6714)) ^ v622;
  int v650 = v649 + 560884566 - ((2 * v649) & 0x42DCD6AC);
  int v651 = (v621 >> 6) ^ 0x208CE024;
  unsigned int v652 = (v621 ^ 0xD75AAA3) >> 4;
  LODWORD(v622) = (v621 ^ 0xD75AAA3) >> 5;
  LODWORD(STACK[0x378]) = v622;
  int v653 = v622 ^ v652 ^ ((v650 ^ v651) - ((2 * (v650 ^ v651)) & 0x54114F72) + 705210297);
  LODWORD(STACK[0x634]) = (((v621 ^ 0xD75AAA3) << 13) ^ 0xEEC4E000)
                        - 633618699
                        - ((2 * (((v621 ^ 0xD75AAA3) << 13) ^ 0xEEC4E000)) & 0xB4774000);
  int v654 = (32 * (v621 ^ 0xD75AAA3)) ^ (v621 << 30) ^ (16 * (v621 ^ 0xD75AAA3)) ^ ((v621 ^ 0xD75AAA3) << 17) ^ v631 ^ v632 ^ v630;
  unsigned int v655 = ((v653 ^ 0x29A61C08u) >> 27) ^ (v633 >> 30) ^ ((v653 ^ 0x29A61C08u) >> 21);
  int v656 = v654 ^ (4 * (v653 ^ 0x29A61C08)) ^ (32 * (v653 ^ 0x29A61C08)) ^ ((v653 ^ 0x29A61C08) << 11) ^ (32 * v655) ^ (4 * v655);
  int v657 = (~(2 * ((v656 ^ (v655 << 11) ^ 0x16B650F0) & 0xEC20D2E ^ v656 & 4))
        + (v656 ^ (v655 << 11) ^ 0x16B650F0)
        - 1899885269) ^ LODWORD(STACK[0x618]);
  int v658 = (v657 + 627893842 - ((2 * v657) & 0x4AD9CCA4)) ^ LODWORD(STACK[0x6C4]);
  int v659 = (v658 - 1164799692 - ((2 * v658) & 0x75252268)) ^ LODWORD(STACK[0x63C]);
  unsigned int v660 = (v659 - 839422508 - ((2 * v659) & 0x9BEEDBA8)) ^ v626;
  unsigned int v661 = (v660 - 768473302 - ((2 * v660) & 0xA4640E54)) ^ v627;
  unsigned int v662 = (v661 - 721564755 - ((2 * v661) & 0xA9FB975A)) ^ LODWORD(STACK[0x614]);
  unsigned int v663 = (v662 - 827367775 - ((2 * v662) & 0x9D5EBD42)) ^ v629;
  unsigned int v664 = (v663 - 940627031 - ((2 * v663) & 0x8FDE5752)) ^ LODWORD(STACK[0x6C8]);
  int v665 = (v664 + 556462035 - ((2 * v664) & 0x4255DFA6)) ^ v635;
  int v666 = (v665 - 1385275551 - ((2 * v665) & 0x5ADCBEC2)) ^ v634;
  int v667 = (v666 - ((2 * v666) & 0x2A91156E) + 357075639) ^ LODWORD(STACK[0x56C]);
  unsigned int v668 = v653 ^ 0x7051D931 ^ ((v667 ^ 0xF75EEB2B) + 1588245083 - 2 * ((v667 ^ 0xF75EEB2B) & 0x5EAAB25F ^ v667 & 4));
  LODWORD(STACK[0x40C]) = v655 ^ 0x2D1AF099 ^ (v668 + 756740249 - ((2 * v668) & 0x5A35E146) + 10);
  LODWORD(STACK[0x620]) = (((v621 ^ 0xD75AAA3) << 7) ^ 0xEBBB1380)
                        - 1970591332
                        - ((2 * (((v621 ^ 0xD75AAA3) << 7) ^ 0xEBBB1380)) & 0x15165300);
  LODWORD(STACK[0x624]) = (((v621 ^ 0xD75AAA3) << 10) ^ 0x5DD89C00)
                        - 887431072
                        - ((2 * (((v621 ^ 0xD75AAA3) << 10) ^ 0x5DD89C00)) & 0x9635C000);
  unsigned int v669 = (((v621 ^ 0xD75AAA3) << 16) ^ 0x76270000)
       - 388824164
       - ((2 * (((v621 ^ 0xD75AAA3) << 16) ^ 0x76270000)) & 0xD1A60000);
  LODWORD(STACK[0x5E8]) = v669;
  LODWORD(STACK[0x62C]) = (((v621 ^ 0xD75AAA3) << 20) ^ 0x62700000)
                        - 743499446
                        - ((2 * (((v621 ^ 0xD75AAA3) << 20) ^ 0x62700000)) & 0xA7400000);
  LODWORD(STACK[0x630]) = (((v621 ^ 0xD75AAA3) << 25) ^ 0x4E000000)
                        - 381679387
                        - ((2 * (((v621 ^ 0xD75AAA3) << 25) ^ 0x4E000000)) & 0xD0000000);
  LODWORD(STACK[0x628]) = (((v621 ^ 0xD75AAA3) << 21) ^ 0xC4E00000)
                        - 1577686544
                        - ((2 * (((v621 ^ 0xD75AAA3) << 21) ^ 0xC4E00000)) & 0x43C00000);
  unsigned int v670 = (v624 >> 20) ^ ((v621 ^ 0xD75AAA3) >> 1) ^ 0x3AEBBC99;
  unsigned int v671 = HIWORD(v624) ^ 0xA5B68B69;
  int v672 = (v670 - 1514736693 - ((2 * v670) & 0x4B6DE796)) ^ v671;
  int v673 = (v672 - 1164803829 - ((2 * v672) & 0x75250216)) ^ v642;
  unsigned int v674 = LODWORD(STACK[0x5FC]) ^ 0xA7AA4AF0 ^ (v673 - 1482011956 - ((2 * v673) & 0x4F549598));
  unsigned int v675 = LODWORD(STACK[0x5F0]) ^ 0xDDE4B7F9 ^ (v674 - 572213733 - ((2 * v674) & 0xBBC96C36));
  int v676 = (v675 - 1243315048 - ((2 * v675) & 0x6BC90930)) ^ v639;
  unsigned int v677 = (v676 + 1702582131 - ((2 * v676) & 0xCAF6AEE6)) ^ v640;
  unsigned int v678 = (v677 + 1475387284 - ((2 * v677) & 0xAFE13F28)) ^ v644;
  unsigned int v679 = (v678 + 1440838684 - ((2 * v678) & 0xABC2E838)) ^ v646;
  unsigned int v680 = (v624 >> 12) ^ 0xCAA9505F;
  unsigned int v681 = (v679 - 894510478 - ((2 * v679) & 0x955DB4E4)) ^ v680;
  unsigned int v682 = (v624 >> 11) ^ 0xAB072E6D;
  int v683 = (v681 - 1425524170 - ((2 * v681) & 0x5610746C)) ^ v682;
  LODWORD(v632) = (v621 >> 7) ^ 0x7B5E7965;
  int v684 = (v683 + 2075081948 - ((2 * v683) & 0xF75E79B8)) ^ v632;
  unsigned int v685 = v652 ^ v651 ^ (v684 + 560884566 - ((2 * v684) & 0x42DCD6AC));
  LODWORD(STACK[0x5FC]) = v685;
  int v686 = (v685 >> 21) ^ (v624 >> 31) ^ (v685 >> 27);
  LODWORD(STACK[0x5F0]) = v686;
  LODWORD(STACK[0x56C]) = ((4 * v686) ^ 0xE8) - ((2 * ((4 * v686) ^ 0xE8)) & 0x8E8);
  int v687 = (v624 >> 17) ^ (v621 >> 8) ^ STACK[0x604] & 0xEF ^ 0x789EA1 ^ (unsigned __int16)(LODWORD(STACK[0x600])
                                                                                        - 27436
                                                                                        + LODWORD(STACK[0x608]));
  int v688 = (v687 - 1243315048 - ((2 * v687) & 0x1C90930)) ^ v639;
  unsigned int v689 = (v688 + 1702582131 + (~(2 * v688) | 0xB5095119) + 1) ^ v640;
  int v690 = (v689 - 1514736693 - ((2 * v689) & 0x4B6DE796)) ^ v671;
  int v691 = (v690 + 1475387284 - ((2 * v690) & 0x2FE13F28)) ^ v644;
  unsigned int v692 = (v691 - 894510478 - ((2 * v691) & 0x955DB4E4)) ^ v680;
  int v693 = (v692 - 1425524170 - ((2 * v692) & 0x5610746C)) ^ v682;
  int v694 = (v693 + 667603493 - ((2 * v693) & 0x4F95A44A)) ^ LODWORD(STACK[0x3F8]);
  unsigned int v695 = (v694 - 393858166 - ((2 * v694) & 0xD10C6714)) ^ LODWORD(STACK[0x37C]);
  int v696 = (v695 + 2075081948 - ((2 * v695) & 0xF75E79B8)) ^ v632;
  unsigned int v697 = LODWORD(STACK[0x378]) ^ v651 ^ (v696 + 560884566 - ((2 * v696) & 0x42DCD6AC));
  unsigned int v698 = (4 * v621) ^ (v621 << 8) ^ (v621 << 15) ^ (v621 << 24) ^ (4 * v697) ^ 0xA4AF18D4;
  int v699 = v698 - 1899885269 + ~((2 * v698) & 0x1D841A54);
  int v700 = ((v699 ^ LODWORD(STACK[0x618])) - 1970591332 - 2 * ((v699 ^ LODWORD(STACK[0x618])) & 0xA8B299D ^ v699 & 1)) ^ LODWORD(STACK[0x620]);
  unsigned int v701 = (v700 - 887431072 - ((2 * v700) & 0x9635C0C0)) ^ LODWORD(STACK[0x624]);
  unsigned int v702 = (v701 - 388824164 - ((2 * v701) & 0xD1A60738)) ^ v669;
  unsigned int v703 = (v702 - 633618699 - ((2 * v702) & 0xB4777DEA)) ^ LODWORD(STACK[0x634]);
  int v704 = (v703 + 627893842 - ((2 * v703) & 0x4AD9CCA4)) ^ LODWORD(STACK[0x6C4]);
  unsigned int v705 = (v704 - 839422508 - ((2 * v704) & 0x9BEEDBA8)) ^ LODWORD(STACK[0x638]);
  unsigned int v706 = (v705 - 743499446 - ((2 * v705) & 0xA75E3294)) ^ LODWORD(STACK[0x62C]);
  int v707 = (v706 - 1577686544 - ((2 * v706) & 0x43ECD3E0)) ^ LODWORD(STACK[0x628]);
  unsigned int v708 = (v707 - 721564755 - ((2 * v707) & 0xA9FB975A)) ^ LODWORD(STACK[0x614]);
  unsigned int v709 = (v708 - 827367775 - ((2 * v708) & 0x9D5EBD42)) ^ LODWORD(STACK[0x370]);
  unsigned int v710 = (v709 - 381679387 - ((2 * v709) & 0xD28011CA)) ^ LODWORD(STACK[0x630]);
  unsigned int v711 = (v710 - 940627031 - ((2 * v710) & 0x8FDE5752)) ^ LODWORD(STACK[0x6C8]);
  int v712 = (v711 - 1385275551 - ((2 * v711) & 0x5ADCBEC2)) ^ LODWORD(STACK[0x374]);
  unsigned int v713 = v697 ^ LODWORD(STACK[0x5D0]) ^ (v712 - ((2 * v712) & 0xD641F828) - 350159852);
  int v714 = (v697 ^ 0x3AEBBB1) << ((v713 & 5 ^ 5) + (v713 & 5));
  unsigned int v715 = v697 >> 21;
  int v716 = (4 * (v697 >> 21)) ^ (v697 << 11) ^ (32 * (v697 >> 21)) ^ (v697 >> 21 << 11) ^ v713;
  int v717 = STACK[0x5D8];
  LODWORD(v622) = ((LODWORD(STACK[0x5D8]) << 17) ^ 0xA300000) - 720749613 - (STACK[0x55C] & 0xAA140000);
  int v718 = LODWORD(STACK[0x408]) ^ (LODWORD(STACK[0x594]) >> 26) ^ ((LODWORD(STACK[0x594]) >> 31) | 0x70EC04C) ^ (LODWORD(STACK[0x5D8]) >> 3);
  int v719 = (v718 + 1313926224 - ((2 * v718) & 0x1CA1D8A4) + 2) ^ LODWORD(STACK[0x434]);
  int v720 = (v719 + 1038081464 - ((2 * v719) & 0x7BBFBB72) + 1) ^ LODWORD(STACK[0x550]);
  unsigned int v721 = (v720 + 1692286897 - ((2 * v720) & 0xC9BC7F62)) ^ LODWORD(STACK[0x41C]);
  unsigned int v722 = (v721 - 856050656 - ((2 * v721) & 0x99F36840)) ^ LODWORD(STACK[0x554]);
  unsigned int v723 = (v722 - 954347678 - ((2 * v722) & 0x8E3B9EC4)) ^ LODWORD(STACK[0x438]);
  unsigned int v724 = LODWORD(STACK[0x428]) ^ 0xBEE22057 ^ (v723 - 1092478943 - ((2 * v723) & 0x7DC43042));
  int v725 = (v724 + 488133676 - ((2 * v724) & 0x3A30A858)) ^ LODWORD(STACK[0x54C]);
  int v726 = (v725 + 537401852 - ((2 * v725) & 0x401033F8)) ^ LODWORD(STACK[0x414]);
  unsigned int v727 = (v726 - 1056883689 - ((2 * v726) & 0x8202782E)) ^ LODWORD(STACK[0x404]);
  unsigned int v728 = (v727 - 362604531 - ((2 * v727) & 0xD4C6301A)) ^ LODWORD(STACK[0x400]);
  unsigned int v729 = (v728 - 387751470 - ((2 * v728) & 0xD1C6C3A4)) ^ LODWORD(STACK[0x410]);
  unsigned int v730 = LODWORD(STACK[0x688]) ^ (v729 - 1327065670 - ((2 * v729) & 0x61CD2B74));
  int v731 = (2 * LODWORD(STACK[0x5D8])) ^ (LODWORD(STACK[0x5D8]) << 6) ^ LODWORD(STACK[0x560]);
  int v732 = (v730 >> 27) ^ (v730 >> 21);
  LODWORD(STACK[0x688]) = v732;
  int v733 = v731 ^ (4 * v730) ^ (v730 << 11) ^ (32 * v730) ^ (4 * v732) ^ (32 * v732) ^ (v732 << 11) ^ 0x289EACA4;
  int v734 = (v733 - 1244181040 - ((2 * v733) & 0x6BAE9BA0)) ^ LODWORD(STACK[0x698]);
  int v735 = STACK[0x6A0];
  unsigned int v736 = (v734 - 655586782 - ((2 * v734) & 0xB1D91444)) ^ LODWORD(STACK[0x6A0]);
  int v737 = STACK[0x690];
  unsigned int v738 = (v736 - 813570084 - ((2 * v736) & 0x9F03CFB8)) ^ LODWORD(STACK[0x690]);
  int v739 = (v738 + 147982279 - ((2 * v738) & 0x11A40F8E)) ^ LODWORD(STACK[0x6EC]);
  int v740 = (v739 - 1309487830 - ((2 * v739) & 0x63E59A54)) ^ LODWORD(STACK[0x6F0]);
  int v741 = STACK[0x708];
  unsigned int v742 = (v740 - 1000411417 - ((2 * v740) & 0x88BDDDCE)) ^ LODWORD(STACK[0x708]);
  int v743 = STACK[0x6B8];
  unsigned int v744 = (v742 + 1846780249 - ((2 * v742) & 0xDC2742B2)) ^ LODWORD(STACK[0x6B8]);
  int v745 = (v744 + 208285711 - ((2 * v744) & 0x18D4601E)) ^ LODWORD(STACK[0x6E0]);
  int v746 = (v745 - 720749613 - ((2 * v745) & 0xAA1477A6)) ^ v622;
  unsigned int v747 = (v746 - 862990252 - ((2 * v746) & 0x991FA0A8)) ^ LODWORD(STACK[0x710]);
  LODWORD(v331) = STACK[0x6AC];
  int v748 = (v747 - 1433467135 - ((2 * v747) & 0x551E0E02)) ^ LODWORD(STACK[0x6AC]);
  unsigned int v749 = (v748 - 1066748937 - ((2 * v748) & 0x80D567EE)) ^ LODWORD(STACK[0x68C]);
  int v750 = (v749 + 523825198 - ((2 * v749) & 0x3E71E05C)) ^ LODWORD(STACK[0x6D0]);
  int v751 = STACK[0x660];
  int v752 = (v750 - 2128740904 - ((2 * v750) & 0x23BFBB0)) ^ LODWORD(STACK[0x660]);
  int v753 = STACK[0x2A0];
  int v754 = (v752 - 1326185801 - ((2 * v752) & 0x61E8056E)) ^ LODWORD(STACK[0x2A0]);
  unsigned int v755 = v730 ^ 0xCC3684EE ^ (v754 - ((2 * v754) & 0x9F63C97E) - 810425153);
  LODWORD(STACK[0x6F0]) = v755 - ((2 * v755) & 0x943739FC);
  int v756 = STACK[0x568];
  int v757 = LODWORD(STACK[0x558]) ^ (LODWORD(STACK[0x568]) >> 27);
  int v758 = (16 * v717) ^ (32 * v717) ^ (v717 << 30) ^ (4 * LODWORD(STACK[0x568])) ^ (32 * LODWORD(STACK[0x568])) ^ ((LODWORD(STACK[0x568]) ^ v757) << 11);
  LODWORD(STACK[0x6EC]) = v757;
  unsigned int v759 = v758 ^ (32 * v757) ^ (4 * v757) ^ 0xCC531214;
  unsigned int v760 = (v759 - 813570084 - ((2 * v759) & 0x9F03CFBC)) ^ v737;
  unsigned int v761 = (v760 - 655586782 - ((2 * v760) & 0xB1D91444)) ^ v735;
  int v762 = (v761 - 1344141703 - ((2 * v761) & 0x5FC40CF2)) ^ LODWORD(STACK[0x644]);
  unsigned int v763 = (v762 - 1000411417 - ((2 * v762) & 0x88BDDDCE)) ^ v741;
  unsigned int v764 = (v763 + 1846780249 - ((2 * v763) & 0xDC2742B2)) ^ v743;
  int v765 = (v764 - 720749613 - ((2 * v764) & 0xAA1477A6)) ^ v622;
  int v766 = (v765 - 1920167898 - ((2 * v765) & 0x1B19204C)) ^ LODWORD(STACK[0x664]);
  int v767 = (v766 + 819779363 - ((2 * v766) & 0x61B9AE46)) ^ LODWORD(STACK[0x6B0]);
  unsigned int v768 = (v767 - 621968527 - ((2 * v767) & 0xB5DB06E2)) ^ LODWORD(STACK[0x6D8]);
  int v769 = (v768 - 1433467135 - ((2 * v768) & 0x551E0E02)) ^ v331;
  int v770 = (v769 + 1004962692 - ((2 * v769) & 0x77CD0708)) ^ LODWORD(STACK[0x564]);
  int v771 = (v770 - 2128740904 - ((2 * v770) & 0x23BFBB0)) ^ v751;
  int v772 = (v771 - 1326185801 - ((2 * v771) & 0x61E8056E)) ^ v753;
  int v773 = (v772 - 1945866443 - ((2 * v772) & 0x1808DE6A)) ^ LODWORD(STACK[0x5DC]);
  int v774 = (v773 - ((2 * v773) & 0x4DF944F8) - 1493392772) ^ LODWORD(STACK[0x43C]);
  int v775 = ((v774 ^ 0x3130FAB3) + 1128975127 - 2 * ((v774 ^ 0x3130FAB3) & 0x434ACB1F ^ v774 & 8)) ^ v756;
  LODWORD(STACK[0x6E0]) = (v775 ^ 0x40CDAB46) - 2 * ((v775 ^ 0x40CDAB46) & 0x352B352E ^ v775 & 0x20);
  unsigned int v776 = v716 ^ v714;
  unsigned int v777 = v716 ^ v714 ^ 0xC624B04C;
  unsigned int v778 = v777 ^ v715;
  unsigned int v779 = ((4 * (v777 ^ v715)) ^ 0xAA89963C) + 1189105814 - ((2 * ((4 * (v777 ^ v715)) ^ 0xAA89963C)) & 0x8DC0A128);
  LODWORD(STACK[0x710]) = v779;
  unsigned int v780 = v716 ^ ~v714;
  LODWORD(v331) = (((v777 ^ v715) << 16) ^ 0x658F0000)
                - 1372672652
                - ((2 * (((v777 ^ v715) << 16) ^ 0x658F0000)) & 0x5C5C0000);
  LODWORD(STACK[0x660]) = v331;
  int v781 = ((8 * (v777 ^ v715)) ^ 0x55132C78) + 376817305 - ((2 * ((8 * (v777 ^ v715)) ^ 0x55132C78)) & 0x2CEB8D30);
  LODWORD(STACK[0x6D8]) = v781;
  unsigned int v782 = (((v777 ^ v715) << 10) ^ 0x89963C00) - 761061477 - ((2 * (((v777 ^ v715) << 10) ^ 0x89963C00)) & 0xA5463800);
  LODWORD(STACK[0x68C]) = v782;
  unsigned int v783 = (((v777 ^ v715) << 7) ^ 0x5132C780) + 1158880763 - ((2 * (((v777 ^ v715) << 7) ^ 0x5132C780)) & 0x8A263B00);
  LODWORD(STACK[0x664]) = v783;
  unsigned int v784 = (((v777 ^ v715) << 14) ^ 0x9963C000) + 946841568 + (~(2 * (((v777 ^ v715) << 14) ^ 0x9963C000)) | 0x8F20FFFF);
  LODWORD(v609) = (((v777 ^ v715) << 13) ^ 0x4CB1E000)
                + 1492206348
                - ((2 * (((v777 ^ v715) << 13) ^ 0x4CB1E000)) & 0xB1E28000);
  unsigned int v785 = (((v777 ^ v715) << 20) ^ 0x58F00000) + 1154905255 - ((2 * (((v777 ^ v715) << 20) ^ 0x58F00000)) & 0x89A00000);
  LODWORD(STACK[0x644]) = v785;
  unsigned int v786 = (((v777 ^ v715) << 25) ^ 0x1E000000) - 737265925 - ((2 * (((v777 ^ v715) << 25) ^ 0x1E000000)) & 0xA8000000);
  LODWORD(STACK[0x618]) = v786;
  int v787 = (((v777 ^ v715) << 22) ^ 0x63C00000) + 583102547 - ((2 * (((v777 ^ v715) << 22) ^ 0x63C00000)) & 0x45800000);
  LODWORD(STACK[0x708]) = v787;
  unsigned int v788 = (((v777 ^ v715) << 24) ^ 0x8F000000) + 2145764930 - 2 * (((v777 ^ v715) << 24) ^ 0x8F000000);
  LODWORD(STACK[0x6B8]) = v788;
  int v789 = (((v777 ^ v715) << 26) ^ 0x3C000000) - 1438246644 - ((2 * (((v777 ^ v715) << 26) ^ 0x3C000000)) & 0x55555555);
  LODWORD(STACK[0x600]) = v789;
  int v790 = v777 ^ ~v715;
  unsigned int v791 = v777 ^ v715 ^ 0x6AA2658F;
  unsigned int v792 = (2 * v778) ^ (v778 << 6) ^ (v778 << 17) ^ (v790 << 29) ^ (v791 << (STACK[0x440] & 0x1C ^ 0x14 | STACK[0x440] & 0x1C ^ 8)) ^ 0xB6C3A8DE;
  LODWORD(STACK[0x698]) = v778 ^ 0x82BD2C69;
  unsigned int v793 = (v792 - 400602650 - ((2 * v792) & 0xD03E93CC)) ^ v778 ^ 0x82BD2C69;
  unsigned int v794 = (v793 + 1189105814 - ((2 * v793) & 0x8DC0A12C)) ^ v779;
  int v795 = (v794 + 376817305 - ((2 * v794) & 0x2CEB8D32)) ^ v781;
  unsigned int v796 = (v795 + 1158880763 - ((2 * v795) & 0x8A263BF6)) ^ v783;
  unsigned int v797 = (v796 - 761061477 - ((2 * v796) & 0xA5463F36)) ^ v782;
  unsigned int v798 = (v797 + 1492206348 - ((2 * v797) & 0xB1E28618)) ^ v609;
  unsigned int v799 = v784 + 1;
  int v800 = (v798 + 946841568 - ((2 * v798) & 0x70DF4FC0)) ^ (v784 + 1);
  int v801 = (v800 - 1372672652 - ((2 * v800) & 0x5C5D5AE8)) ^ v331;
  unsigned int v802 = (v801 + 1154905255 - ((2 * v801) & 0x89ACE94E)) ^ v785;
  int v803 = (v802 + 583102547 - ((2 * v802) & 0x4582E0A6)) ^ v787;
  unsigned int v804 = (v803 + 2145764930 - ((2 * v803) & 0xFFCB8C84)) ^ v788;
  unsigned int v805 = (v804 - 737265925 - ((2 * v804) & 0xA81C6DF6)) ^ v786;
  unsigned int v806 = v780 >> 31;
  int v807 = (v776 >> 15) ^ (v776 >> 26) ^ (v780 >> 31) ^ (v778 >> 3) ^ 0xD551597;
  int v808 = (v777 >> 30) | 0x341CD268;
  LODWORD(STACK[0x6A0]) = v808;
  int v809 = (v807 + 874304104 - ((2 * v807) & 0x2839A4D2) + 1) ^ v808;
  unsigned int v810 = (v776 >> 29) ^ 0xFE691E82 ^ (v809 - 26665342 - ((2 * v809) & 0xFCD23D0E) + 5);
  unsigned int v811 = (v776 >> 25) ^ 0xE2C52CED;
  unsigned int v812 = (v810 - 490394437 - ((2 * v810) & 0xC58A5976)) ^ v811;
  int v813 = (v776 >> 22) ^ 0x5CDF611A;
  unsigned int v814 = (v812 + 1558143912 - ((2 * v812) & 0xB9BEC750)) ^ v813;
  LODWORD(v632) = (v776 >> 18) ^ 0x81A7073D;
  int v815 = (v814 - 2119750628 - ((2 * v814) & 0x34E5838)) ^ v632;
  unsigned int v816 = (v776 >> 19) ^ 0x96F3CBC0;
  LODWORD(STACK[0x6B0]) = v816;
  int v817 = (v815 - 1762402736 - ((2 * v815) & 0x2DE7BCA0)) ^ v816;
  int v818 = HIWORD(v776) ^ 0x262E2058;
  int v819 = (v817 + 640584926 - ((2 * v817) & 0x4C5D19BC)) ^ v818;
  unsigned int v820 = (v776 >> 12) ^ 0xEF95EAF8;
  LODWORD(v331) = (v819 - 274783595 - ((2 * v819) & 0xDF3E452A)) ^ v820;
  int v821 = a42 ^ (v778 >> 10);
  LODWORD(STACK[0x614]) = v821;
  LODWORD(v331) = (v331 + 1359725072 - ((2 * v331) & 0xA2178420)) ^ v821;
  unsigned int v822 = (v778 >> 8) ^ 0xD233DAA0;
  LODWORD(STACK[0x608]) = v822;
  LODWORD(v331) = (v331 - 765888315 - ((2 * v331) & 0xA4B2F18A)) ^ v822;
  LODWORD(STACK[0x690]) = v778 >> 7;
  LODWORD(v622) = (v778 >> 7) ^ 0xBB270045;
  LODWORD(v331) = (v331 - 1141750642 - ((2 * v331) & 0x77E4891C)) ^ v622;
  int v823 = (v805 - 1438246644 - ((2 * v805) & 0x548C3218)) ^ v789;
  LODWORD(STACK[0x5DC]) = ((v778 << 11) ^ 0x132C7800) - 566460101 - ((2 * ((v778 << 11) ^ 0x132C7800)) & 0xBC790000);
  int v824 = (v778 >> 6) ^ 0x7CFAC299;
  int v825 = v824 ^ (v778 >> 4);
  unsigned int v826 = v825 ^ (v331 + 2102414095 - ((2 * v331) & 0xFAA0961E));
  int v827 = (v826 >> 27) ^ (v826 >> 21);
  LODWORD(STACK[0x6AC]) = v827;
  int v828 = v826 ^ (32 * v826) ^ (v826 << 11) ^ (4 * (v826 ^ v827)) ^ (32 * v827) ^ (v827 << 11) ^ (v823
                                                                                               - (a41 & (2 * v823))
                                                                                               - 813305017) ^ 0x57F0E90B;
  LODWORD(STACK[0x6D0]) = v828 - ((2 * v828) & 0x3038C9EA);
  int v829 = v799 ^ (v778 << 12);
  unsigned int v830 = v609 ^ 0xB939EB13 ^ v829;
  v829 ^= 0x1E3757E0u;
  unsigned int v831 = (v830 + v829 + 1) ^ ((v609 ^ 0xA70EBCF3) + 1);
  unsigned int v832 = v791 >> ((v776 >> 25) & 0x13 ^ 1 | (v776 >> 25) & 0x13 ^ 0x12);
  unsigned int v833 = ((v831 + 1492206348 - ((2 * v831) & 0xB1E28618)) ^ v609) + v829;
  unsigned int v834 = ((v778 << 18) ^ 0x963C0000) + 1309963167 - ((2 * ((v778 << 18) ^ 0x963C0000)) & 0x9C280000);
  unsigned int v835 = ((v778 << 21) ^ 0xB1E00000) + 476222594 - ((2 * ((v778 << 21) ^ 0xB1E00000)) & 0x38C00000);
  LODWORD(STACK[0x604]) = v835;
  int v836 = (v776 >> 13) ^ (v776 >> 20) ^ (v778 >> 1) ^ (unsigned __int16)v832;
  int v837 = ((v836 ^ 0x35545C39) - 490394437 - 2 * ((v836 ^ 0x35545C39) & 0x62C52CBF ^ v836 & 4)) ^ v811;
  unsigned int v838 = (v837 + 1558143912 - ((2 * v837) & 0xB9BEC750)) ^ v813;
  int v839 = (v776 >> 21) ^ 0x438AAC2;
  int v840 = (v838 + 70823846 - ((2 * v838) & 0x8715F4C)) ^ v839;
  int v841 = (v840 - 2119750628 - ((2 * v840) & 0x34E5838)) ^ v632;
  int v842 = (v841 + 640584926 - ((2 * v841) & 0x4C5D19BC)) ^ v818;
  unsigned int v843 = (v776 >> 14) ^ 0xDC6879A6;
  LODWORD(v632) = (v842 - 596980803 - ((2 * v842) & 0xB8D5977A)) ^ v843;
  LODWORD(v632) = (v632 - 274783595 - ((2 * v632) & 0xDF3E452A)) ^ v820;
  int v844 = v632 - 1884952125 - ((2 * v632) & 0x1F4BD386);
  LODWORD(v632) = (v776 >> 11) ^ 0x8FB07919;
  int v845 = ((v844 ^ v632) - 1141750642 - ((2 * (v844 ^ v632)) & 0x77E4891C)) ^ v622;
  unsigned int v846 = v825 ^ (v845 + 2102414095 - ((2 * v845) & 0xFAA0961E));
  int v847 = (v790 << 28) ^ (v778 << 19) ^ (v790 << 31) ^ v833 ^ (LODWORD(STACK[0x40C])
                                                            - ((2 * LODWORD(STACK[0x40C])) & 0x2D04BE5C)
                                                            - 1769840850) ^ v846;
  unsigned int v848 = ((v847 ^ 0xBC507976) - 400602650 + ((2 * ((v847 ^ 0xBC507976) & 0x681F49F6 ^ v847 & 0x10)) ^ 0xFFFFFFDF) + 1) ^ LODWORD(STACK[0x698]);
  LODWORD(v331) = STACK[0x664];
  unsigned int v849 = (v848 + 1158880763 - ((2 * v848) & 0x8A263BF6)) ^ LODWORD(STACK[0x664]);
  int v850 = STACK[0x68C];
  unsigned int v851 = (v849 - 761061477 - ((2 * v849) & 0xA5463F36)) ^ LODWORD(STACK[0x68C]);
  int v852 = STACK[0x5DC];
  unsigned int v853 = (v851 - 566460101 - ((2 * v851) & 0xBC790276)) ^ LODWORD(STACK[0x5DC]);
  int v854 = STACK[0x660];
  int v855 = (v853 - 1372672652 - ((2 * v853) & 0x5C5D5AE8)) ^ LODWORD(STACK[0x660]);
  int v856 = STACK[0x644];
  unsigned int v857 = (v855 + 1154905255 - ((2 * v855) & 0x89ACE94E)) ^ LODWORD(STACK[0x644]);
  int v858 = (v857 + 476222594 - ((2 * v857) & 0x38C52904)) ^ v835;
  unsigned int v859 = (v858 + 1309963167 - ((2 * v858) & 0x9C28E73E)) ^ v834;
  int v860 = STACK[0x618];
  int v861 = STACK[0x600];
  unsigned int v862 = LODWORD(STACK[0x600]) ^ LODWORD(STACK[0x618]) ^ (v859 - 737265925 - ((2 * v859) & 0xA81C6DF6));
  LODWORD(v622) = ((4 * v846) ^ 0xC55FB65D) + 537448643 + ((8 * v846) & 0xBFEE5E78 ^ 0x35401240);
  int v863 = v806 ^ (v846 >> 21) ^ (v846 >> 27);
  LODWORD(STACK[0x698]) = v863;
  unsigned int v864 = (((v776 >> 29) & 3 ^ 1) + 874304104 + ((v776 >> 28) | 0xFFFFFFFD) + 2) ^ LODWORD(STACK[0x6A0]) | ~(v776 >> 29) & 4;
  int v865 = (32 * v846) ^ (v846 << 11) ^ (4 * v863) ^ (32 * v863) ^ ((unint64_t)(v863 ^ 0x35u) << (38 - (v863 & 0x1B ^ 0x11 | v863 & 0x1B ^ 0xAu))) ^ 0x84760D74 ^ ((v862 ^ 0xAA46190C) + v622 - 2 * ((v862 ^ 0x2A46190C) & v622));
  LODWORD(STACK[0x6A0]) = v865 - ((2 * v865) & 0x6183EA76);
  int v866 = (v776 >> 17) ^ HIBYTE(v776) ^ (v778 >> 9) ^ (v778 >> 5) ^ v864 ^ 0x36014F1;
  int v867 = (v866 + 2102414095 - ((2 * v866) & 0x7AA0961E)) ^ v824;
  unsigned int v868 = (v867 - 490394437 - ((2 * v867) & 0xC58A5976)) ^ v811;
  unsigned int v869 = (v868 + 1558143912 - ((2 * v868) & 0xB9BEC750)) ^ v813;
  int v870 = (v869 + 70823846 - ((2 * v869) & 0x8715F4C)) ^ v839;
  int v871 = (v870 - 1762402736 - ((2 * v870) & 0x2DE7BCA0)) ^ LODWORD(STACK[0x6B0]);
  int v872 = (v871 + 640584926 - ((2 * v871) & 0x4C5D19BC)) ^ v818;
  unsigned int v873 = (v872 - 596980803 - ((2 * v872) & 0xB8D5977A)) ^ v843;
  unsigned int v874 = (v873 - 274783595 - ((2 * v873) & 0xDF3E452A)) ^ v820;
  int v875 = (v874 - 1884952125 - ((2 * v874) & 0x1F4BD386)) ^ v632;
  unsigned int v876 = (v875 + 1359725072 - ((2 * v875) & 0xA2178420)) ^ LODWORD(STACK[0x614]);
  unsigned int v877 = LODWORD(STACK[0x608]) ^ LODWORD(STACK[0x690]) ^ (v876 - 765888315 - ((2 * v876) & 0xA4B2F18A));
  unsigned int v878 = (v778 << 15) ^ (v778 << 8) ^ (v778 << 27) ^ (((v778 << 23) ^ 0xC7800000)
                                                    + 2145764930
                                                    - 2 * ((v778 << 23) ^ 0xC7800000)) ^ LODWORD(STACK[0x6B8]) ^ 0xE8A20F00;
  int v879 = (v878 - 1372672652 - ((2 * v878) & 0x5C5D5AE8)) ^ v854;
  int v880 = (v879 + 376817305 - ((2 * v879) & 0x2CEB8D32)) ^ LODWORD(STACK[0x6D8]);
  unsigned int v881 = (v880 + 1189105814 - ((2 * v880) & 0x8DC0A12C)) ^ LODWORD(STACK[0x710]);
  int v882 = (v881 + 1158880763 - ((2 * v881) & 0x8A263BF6)) ^ v331;
  unsigned int v883 = (v882 - 761061477 - ((2 * v882) & 0xA5463F36)) ^ v850;
  unsigned int v884 = (v883 - 566460101 - ((2 * v883) & 0xBC790276)) ^ v852;
  unsigned int v885 = (v884 + 1492206348 - ((2 * v884) & 0xB1E28618)) ^ v609;
  unsigned int v886 = (v885 + 1309963167 - ((2 * v885) & 0x9C28E73E)) ^ v834;
  unsigned int v887 = (v886 + 1154905255 - ((2 * v886) & 0x89ACE94E)) ^ v856;
  int v888 = (v887 + 476222594 - ((2 * v887) & 0x38C52904)) ^ LODWORD(STACK[0x604]);
  int v889 = (v888 + 583102547 - ((2 * v888) & 0x4582E0A6)) ^ LODWORD(STACK[0x708]);
  unsigned int v890 = (v889 - 737265925 - ((2 * v889) & 0xA81C6DF6)) ^ v860;
  int v891 = ((v621 << 31) | 0x285DC053) ^ ((v621 ^ 0xD75AAA3) << 12) ^ (4 * LODWORD(STACK[0x5FC])) ^ (32
                                                                                                 * LODWORD(STACK[0x5FC])) ^ (LODWORD(STACK[0x5FC]) << 11) ^ LODWORD(STACK[0x5F0]) ^ (32 * LODWORD(STACK[0x5F0])) ^ (LODWORD(STACK[0x5F0]) << 11) ^ (LODWORD(STACK[0x56C]) - 242899851) ^ v861 ^ (4 * v877) ^ (32 * v877) ^ (v877 << 11) ^ (4 * (v877 >> 21)) ^ (32 * (v877 >> 21)) ^ (v877 >> 21 << 11) ^ (v890 - 1438246644 - ((2 * v890) & 0x548C3218));
  int v892 = (v891 - 1970591332 - ((2 * v891) & 0x15165338)) ^ LODWORD(STACK[0x620]);
  unsigned int v893 = v621 ^ 0xCD733066 ^ (v892 - ((2 * v892) & 0x6BA3D9C4) - 1244533534);
  unsigned int v894 = (v893 - 887431072 - ((2 * v893) & 0x9635C0C0)) ^ LODWORD(STACK[0x624]);
  int v895 = (v894 + 627893842 - ((2 * v894) & 0x4AD9CCA4)) ^ LODWORD(STACK[0x6C4]);
  unsigned int v896 = (v895 - 633618699 - ((2 * v895) & 0xB4777DEA)) ^ LODWORD(STACK[0x634]);
  int v897 = (v896 - 1164799692 - ((2 * v896) & 0x75252268)) ^ LODWORD(STACK[0x63C]);
  unsigned int v898 = (v897 - 388824164 - ((2 * v897) & 0xD1A60738)) ^ LODWORD(STACK[0x5E8]);
  unsigned int v899 = (v898 - 839422508 - ((2 * v898) & 0x9BEEDBA8)) ^ LODWORD(STACK[0x638]);
  unsigned int v900 = (v899 - 768473302 - ((2 * v899) & 0xA4640E54)) ^ LODWORD(STACK[0x5EC]);
  unsigned int v901 = (v900 - 743499446 - ((2 * v900) & 0xA75E3294)) ^ LODWORD(STACK[0x62C]);
  int v902 = (v901 - 1577686544 - ((2 * v901) & 0x43ECD3E0)) ^ LODWORD(STACK[0x628]);
  unsigned int v903 = (v902 - 381679387 - ((2 * v902) & 0xD28011CA)) ^ LODWORD(STACK[0x630]);
  unsigned int v904 = (v903 - 940627031 - ((2 * v903) & 0x8FDE5752)) ^ LODWORD(STACK[0x6C8]);
  int v905 = (v904 + 556462035 - ((2 * v904) & 0x4255DFA6)) ^ LODWORD(STACK[0x444]);
  unsigned int v906 = LODWORD(STACK[0x5FC]) ^ 0x4C5F1041 ^ (v905 - ((2 * v905) & 0x9604CE46) + 1258448675);
  unsigned int v907 = v877 ^ LODWORD(STACK[0x448]) ^ (v906 - ((2 * v906) & 0x9D66B036) - 827107301);
  unsigned int v908 = v907 ^ (v877 >> 21);
  int v909 = STACK[0x6F4];
  LODWORD(STACK[0x6B8]) = (LODWORD(STACK[0x6F4]) ^ 0x152843C) << ((v908 ^ 0xEA) & 0xD ^ 8) << ((v908 ^ 0xEA) & 0xD ^ 5);
  unsigned int v910 = STACK[0x66C];
  LODWORD(STACK[0x708]) = ((LODWORD(STACK[0x66C]) << 19) ^ 0xFC600000)
                        - 553603112
                        - ((2 * ((LODWORD(STACK[0x66C]) << 19) ^ 0xFC600000)) & 0xBE000000);
  unsigned int v911 = ((v910 << 14) ^ 0x8FE30000) - 1971920457 - ((2 * ((v910 << 14) ^ 0x8FE30000)) & 0x14ED8000);
  LODWORD(STACK[0x6D8]) = v911;
  LODWORD(STACK[0x710]) = ((v909 << 28) ^ 0xC0000000) + 772009851 - ((v909 << 29) & 0x40000000);
  unsigned int v912 = STACK[0x670];
  unsigned int v913 = v910;
  int v914 = (LODWORD(STACK[0x670]) >> 28) ^ (LODWORD(STACK[0x670]) >> 27) ^ (LODWORD(STACK[0x670]) >> 15) ^ LODWORD(STACK[0x394]) ^ (v910 >> 2) ^ 0x17B58D6C;
  int v915 = (v914 - 1588666270 - ((2 * v914) & 0x429DC0C4)) ^ LODWORD(STACK[0x3A4]);
  LODWORD(v632) = STACK[0x3C8];
  unsigned int v916 = (v915 + 1271285497 - ((2 * v915) & 0x978C8DF2)) ^ LODWORD(STACK[0x3C8]);
  int v917 = (LODWORD(STACK[0x670]) >> 18) ^ 0x7345DF37;
  unsigned int v918 = (v916 + 1933959011 - ((2 * v916) & 0xE68BBEC6)) ^ v917;
  int v919 = STACK[0x3BC];
  unsigned int v920 = (v918 - 756926879 - ((2 * v918) & 0xA5C46CC2)) ^ LODWORD(STACK[0x3BC]);
  int v921 = (LODWORD(STACK[0x670]) >> 13) ^ 0x21784C5C;
  int v922 = (v920 + 561530568 - ((2 * v920) & 0x42F08D90)) ^ v921;
  int v923 = STACK[0x3B0];
  unsigned int v924 = (v922 + 1235379926 - ((2 * v922) & 0x9344CDAC)) ^ LODWORD(STACK[0x3B0]);
  unsigned int v925 = (v924 + 2087870904 - ((2 * v924) & 0xF8E4C370)) ^ LODWORD(STACK[0x390]);
  int v926 = (v925 + 530237905 - ((2 * v925) & 0x3F3593A2)) ^ LODWORD(STACK[0x38C]);
  int v927 = STACK[0x3A8];
  int v928 = (v926 - 2071249500 - ((2 * v926) & 0x9167B48)) ^ LODWORD(STACK[0x3A8]);
  unsigned int v929 = (v913 >> 4) ^ LODWORD(STACK[0x2C0]) ^ (v928 - ((2 * v928) & 0xE19CC7A0) + 1892574160);
  LODWORD(STACK[0x6C4]) = v929;
  unsigned int v930 = v929 ^ 0x7238D22C;
  unsigned int v931 = ((v930 >> 27) ^ 0xC76FBF7E) + 4 * (v930 >> 28);
  unsigned int v932 = ((v930 >> 20) & 0x7FE ^ 0x5E) + ((v930 >> 21) ^ 0xCFFB9BD0);
  int v933 = v931 + v932 - 2 * ((v932 + 805594113) & (v931 + 948977794)) + 1754571907;
  LODWORD(STACK[0x6B0]) = (v933 ^ 0x7EFDFDFF) + ((2 * v933) & 0xFDFBFBFE);
  unsigned int v934 = (((v912 >> 20) ^ (v913 >> 1) ^ 0x2F6B1FD3)
        + 1235379926
        - ((2 * ((v912 >> 20) ^ (v913 >> 1) ^ 0x2F6B1FD3)) & 0x9344CDAC)) ^ v923;
  int v935 = (v934 - 1960218924 - ((2 * v934) & 0x1652DDA8)) ^ LODWORD(STACK[0x398]);
  unsigned int v936 = (v935 + 1564101800 - ((2 * v935) & 0xBA74995A) + 5) ^ LODWORD(STACK[0x3B8]);
  int v937 = (v936 + 1271285497 - ((2 * v936) & 0x978C8DF2)) ^ v632;
  int v938 = (v937 + 740299856 - ((2 * v937) & 0x584028A0)) ^ LODWORD(STACK[0x3CC]);
  unsigned int v939 = (v938 + 1207826772 - ((2 * v938) & 0x8FFBF2A8)) ^ LODWORD(STACK[0x3C4]);
  unsigned int v940 = (v939 + 1933959011 - ((2 * v939) & 0xE68BBEC6)) ^ v917;
  int v941 = (v940 + 8697491 - ((2 * v940) & 0x1096D26)) ^ LODWORD(STACK[0x3C0]);
  unsigned int v942 = (v941 - 756926879 - ((2 * v941) & 0xA5C46CC2)) ^ v919;
  int v943 = (v942 + 561530568 - ((2 * v942) & 0x42F08D90)) ^ v921;
  int v944 = (v943 + 232906841 - ((2 * v943) & 0x1BC3C0B2)) ^ LODWORD(STACK[0x3B4]);
  unsigned int v945 = (v913 >> 4) ^ v927 ^ (v944 - 2071249500 - ((2 * v944) & 0x9167B48));
  int v946 = (v945 >> 27) ^ (v912 >> 31) ^ (v945 >> 21);
  int v947 = ((LODWORD(STACK[0x6F4]) << 31) | 0x17D4B8AE) ^ (v913 << 12) ^ (4 * v945) ^ (v945 << 11) ^ (32 * v945) ^ (4 * v946) ^ (v946 << 11) ^ (32 * v946) ^ LODWORD(STACK[0x6EC]) ^ (LODWORD(STACK[0x6E0]) - 1255459570);
  unsigned int v948 = LODWORD(STACK[0x6F4]) ^ 0x885F456C ^ (v947 - ((2 * v947) & 0x121B82A0) - 1995587248);
  unsigned int v949 = (v948 + 2039416500 - ((2 * v948) & 0xF31E0D68)) ^ LODWORD(STACK[0x3F4]);
  unsigned int v950 = (v949 + 1861523863 - ((2 * v949) & 0xDDE9332E)) ^ LODWORD(STACK[0x3F0]);
  int v951 = (v950 - 1615195507 - ((2 * v950) & 0x3F74251A)) ^ LODWORD(STACK[0x684]);
  unsigned int v952 = (v951 + 1741878678 - ((2 * v951) & 0xCFA5EB2C)) ^ LODWORD(STACK[0x3EC]);
  int v953 = (v952 - 1971920457 - ((2 * v952) & 0x14EDC36E)) ^ v911;
  unsigned int v954 = (v953 + 1681661840 - ((2 * v953) & 0xC8783F20)) ^ LODWORD(STACK[0x3E8]);
  int v955 = (v954 + 76110623 - ((2 * v954) & 0x912B63E)) ^ LODWORD(STACK[0x680]);
  unsigned int v956 = (v955 - 553603112 - ((2 * v955) & 0xBE015FB0)) ^ LODWORD(STACK[0x708]);
  unsigned int v957 = (v956 + 1886906603 - ((2 * v956) & 0xE0EFD1D6)) ^ LODWORD(STACK[0x3E4]);
  unsigned int v958 = (v957 - 758313411 - ((2 * v957) & 0xA59A1C7A)) ^ LODWORD(STACK[0x67C]);
  int v959 = (v958 - 1660222421 - ((2 * v958) & 0x3A160856)) ^ LODWORD(STACK[0x3E0]);
  unsigned int v960 = (v959 - 31735370 - ((2 * v959) & 0xFC37836C)) ^ LODWORD(STACK[0x668]);
  int v961 = (v960 + 772009851 - ((2 * v960) & 0x5C07DEF6)) ^ LODWORD(STACK[0x710]);
  LODWORD(STACK[0x6C8]) = v946 ^ v945 ^ (v961 - ((2 * v961) & 0x55F9632) - 2102408423);
  unsigned int v962 = (((v908 ^ 0x969749EA) << 13) ^ 0xBAC90000)
       + 631348713
       - ((2 * (((v908 ^ 0x969749EA) << 13) ^ 0xBAC90000)) & 0x4B430000);
  unsigned int v963 = (((v908 ^ 0x969749EA) << 11) ^ 0xAEB24000)
       + 343725082
       - ((2 * (((v908 ^ 0x969749EA) << 11) ^ 0xAEB24000)) & 0x28F9A000);
  unsigned int v964 = (((v908 ^ 0x969749EA) << 18) ^ 0x59200000)
       - 1243945862
       - ((2 * (((v908 ^ 0x969749EA) << 18) ^ 0x59200000)) & 0x6BB00000);
  LODWORD(STACK[0x6E0]) = (((v908 ^ 0x969749EA) << 27) ^ 0x40000000)
                        - 714955310
                        - ((2 * (((v908 ^ 0x969749EA) << 27) ^ 0x40000000)) & 0xA0000000);
  uint64_t v965 = v908 ^ 0x9A229FA2;
  unsigned int v966 = v965 >> (STACK[0x5D8] & 0xF ^ 8) >> (STACK[0x5D8] & 0xF ^ 7);
  unsigned int v967 = v966 + 50773327 - ((2 * v966) & 0x60D7A9E);
  unsigned int v968 = (((v908 ^ 0x969749EA) << 23) ^ 0x24000000)
       - 2049638018
       - ((2 * (((v908 ^ 0x969749EA) << 23) ^ 0x24000000)) & 0xB000000);
  int v969 = (v907 >> 28) ^ (v907 >> 27) ^ (v907 >> 18) ^ 0x2692;
  unsigned int v970 = (v908 ^ 0x969749EA) << 22;
  unsigned int v971 = (((v908 ^ 0x969749EA) << 21) ^ 0xC9000000) - 1606607233 - (v970 & 0x40404040);
  unsigned int v972 = (((v908 ^ 0x969749EA) << 26) ^ 0x20000000)
       + 816476438
       - ((2 * (((v908 ^ 0x969749EA) << 26) ^ 0x20000000)) & 0x60000000);
  unsigned int v973 = (v970 ^ 0x92000000) - 892558151 - ((2 * (v970 ^ 0x92000000)) & 0x95800000);
  unsigned int v974 = ((v908 ^ 0x969749EA) >> 4) ^ (v907 >> 13) ^ v967 ^ (v969 + 50773327 - ((2 * v969) & 0x7A9E));
  LODWORD(v331) = (v974 ^ 0xCF8C70) - 668312719 - 2 * ((v974 ^ 0xCF8C70) & 0x582A5B7D ^ v974 & 0xC);
  unsigned int v975 = (v907 >> 29) ^ 0xD82A5B77 ^ (v907 >> 30);
  unsigned int v976 = (v907 >> 21) ^ 0xA2F7E5E8;
  LODWORD(v331) = ((v331 ^ v975) - 1560813255 - ((2 * (v331 ^ v975)) & 0x45EFC272)) ^ v976;
  int v977 = (v907 >> 19) ^ 0x1FFDB12E;
  LODWORD(v331) = (v331 + 536715882 - ((2 * v331) & 0x3FFB44D4)) ^ v977;
  LODWORD(v632) = (v907 >> 14) ^ 0x79194800;
  LODWORD(v331) = (v331 + 2031820938 - ((2 * v331) & 0xF2364114)) ^ v632;
  int v978 = (v907 >> 11) ^ 0x17224080;
  LODWORD(v331) = (v331 + 389088467 - ((2 * v331) & 0x2E6209A6)) ^ v978;
  LODWORD(v609) = (v908 >> 10) ^ 0x2E53650D;
  LODWORD(v331) = (v331 + 779480490 - ((2 * v331) & 0x5CEBDB54)) ^ v609;
  unsigned int v979 = (v908 >> 9) ^ 0x9CACCF40;
  LODWORD(v331) = (v331 - 1662919153 - ((2 * v331) & 0x39C3BC1E)) ^ v979;
  unsigned int v980 = (v908 >> 6) ^ ((v908 ^ 0x969749EA) >> 5) ^ 0x8A1BED0F;
  int v981 = v980 ^ (v331 - 2005702799 - ((2 * v331) & 0x10E6CEE2));
  unsigned int v982 = v981 ^ ((v908 ^ 0x969749EA) >> 2);
  int v983 = (v982 >> 27) ^ (v967 >> 30) ^ (v982 >> 21);
  unsigned int v984 = LODWORD(STACK[0x6AC]) ^ (16 * (v908 ^ 0x969749EA)) ^ (32 * (v908 ^ 0x969749EA)) ^ ((v908 ^ 0x969749EA) << 14) ^ ((v908 ^ 0x969749EA) << 17) ^ ((v908 ^ 0x969749EA) << 19) ^ ((v908 ^ 0x969749EA) << 28) ^ ((v908 ^ 0x969749EA) << 30) ^ (4 * v982) ^ (32 * v982) ^ (v983 | (v982 << 11)) ^ (4 * v983) ^ (32 * v983) ^ (v983 << 11) ^ (LODWORD(STACK[0x6D0]) + 404514037) ^ 0x8C5812F2;
  LODWORD(v331) = (4 * (v908 ^ 0x969749EA)) ^ (8 * (v908 ^ 0x969749EA)) ^ 0x8B8E85D9;
  int v985 = (v984 - 587764039 - ((2 * v984) & 0xB9EEDD72)) ^ v331;
  int v986 = (v985 + 343725082 - ((2 * v985) & 0x28F9A834)) ^ v963;
  int v987 = (v986 + 631348713 - ((2 * v986) & 0x4B433BD2)) ^ v962;
  int v988 = (v987 - 1243945862 - ((2 * v987) & 0x6BB5C8F4)) ^ v964;
  int v989 = (v988 - 1606607233 - ((2 * v988) & 0x407A3CFE)) ^ v971;
  unsigned int v990 = (v989 - 892558151 - ((2 * v989) & 0x95994972)) ^ v973;
  int v991 = (v990 - 2049638018 - ((2 * v990) & 0xBAA02FC)) ^ v968;
  int v992 = (v991 + 816476438 - ((2 * v991) & 0x6154E22C)) ^ v972;
  int v993 = STACK[0x6E0];
  LODWORD(STACK[0x6EC]) = v982 ^ LODWORD(STACK[0x6E0]) ^ (v992 - 714955310 - ((2 * v992) & 0xAAC54BA4));
  int v994 = (v907 >> 22) ^ HIBYTE(v907) ^ (v907 >> 25) ^ (v907 >> 17) ^ HIWORD(v907) ^ (v907 >> 12) ^ (v908 >> 7) ^ (v908 >> 8) ^ 0x1A71005;
  int v995 = (v994 - 1560813255 - ((2 * v994) & 0x45EFC272)) ^ v976;
  int v996 = (((v995 - 668312719 - ((2 * v995) & 0x3054B6E2)) ^ v975)
        + 536715882
        - ((2 * ((v995 - 668312719 - ((2 * v995) & 0x3054B6E2)) ^ v975)) & 0x3FFB44D4)) ^ v977;
  int v997 = (v996 + 2031820938 - ((2 * v996) & 0xF2364114)) ^ v632;
  int v998 = (v997 + 389088467 - ((2 * v997) & 0x2E6209A6)) ^ v978;
  unsigned int v999 = (v998 + 779480490 - ((2 * v998) & 0x5CEBDB54)) ^ v609;
  int v1000 = (v999 - 1662919153 - ((2 * v999) & 0x39C3BC1E)) ^ v979;
  unsigned int v1001 = v980 ^ (v1000 - 2005702799 - ((2 * v1000) & 0x10E6CEE2));
  LODWORD(v622) = (LODWORD(STACK[0x698]) | (v908 << 24)) ^ (v908 << 25) ^ ((v908 ^ 0x969749EA) << 8) ^ ((v908 ^ 0x969749EA) << 7) ^ ((v908 ^ 0x969749EA) << 10) ^ ((v908 ^ 0x969749EA) << 16) ^ ((v908 ^ 0x969749EA) << 20);
  int v1002 = ((32 * v1001) ^ 0xCB5D640) + 974731836 - ((2 * ((32 * v1001) ^ 0xCB5D640)) & 0x74327440);
  LOBYTE(v995) = (((32 * v1001) ^ 0x40) + 60 - ((2 * ((32 * v1001) ^ 0x40)) & 0x40)) & 0x80;
  int v1003 = (4 * v1001) ^ (32 * (v1001 >> 21)) ^ __ROR4__(v1001, 21) ^ (v1001 >> 21 << 11) ^ 0x2CE332AB ^ ((unint64_t)((v1001 >> 21) ^ 3) << ((119 * ((v995 ^ 0x8E) + v995)) & 0xFE));
  unsigned int v1004 = v1001 ^ 0x5729C17F ^ (v1003 - ((2 * v1003) & 0xAE98DF9A) + 1464627149);
  int v1005 = v622 ^ v331 ^ (v965 << ((85 * ((v981 & 0xD3 ^ 0x92) + (v981 & 0xD3 ^ 0x41))) | 6u)) ^ (LODWORD(STACK[0x6A0])
                                                                                               - 1329466053) ^ (v1004 - 587764039 - ((2 * v1004) & 0xB9EEDD72));
  LODWORD(STACK[0x6AC]) = v1005;
  unsigned int v1006 = ((v1005 ^ v963 ^ 0xC8116D14) + 631348713 - 2 * ((v1005 ^ v963 ^ 0xC8116D14) & 0x25A19DEB ^ (v1005 ^ v963) & 2)) ^ v962;
  int v1007 = (((v1006 - 1243945862 - ((2 * v1006) & 0x6BB5C8F4)) ^ v964)
         - 1606607233
         - ((2 * ((v1006 - 1243945862 - ((2 * v1006) & 0x6BB5C8F4)) ^ v964)) & 0x407A3CFE)) ^ v971;
  unsigned int v1008 = (v1007 - 892558151 - ((2 * v1007) & 0x95994972)) ^ v973;
  int v1009 = (v1008 - 2049638018 - ((2 * v1008) & 0xBAA02FC)) ^ v968;
  int v1010 = (v1009 + 816476438 - ((2 * v1009) & 0x6154E22C)) ^ v972;
  unsigned int v1011 = v1002 ^ v993 ^ (v1010 - 714955310 - ((2 * v1010) & 0xAAC54BA4));
  int v1012 = LODWORD(STACK[0x2A4]) - 671619473;
  if (!v323) {
    int v1012 = -782899735 - LODWORD(STACK[0x2A4]);
  }
  unsigned int v1013 = (LODWORD(STACK[0x2A8]) ^ 0xC2370097) - 1420224044 + v1012;
  unsigned int v1014 = (LODWORD(STACK[0x2AC]) ^ 0xB0000000) + 1141233441;
  unsigned int v1015 = STACK[0x3D8];
  int v1016 = LODWORD(STACK[0x3D8]) << 27;
  LODWORD(STACK[0x6A0]) = v1016;
  unsigned int v1017 = v1014 - (v1016 & 0x88000000);
  int v1018 = STACK[0x648];
  unsigned int v1019 = (STACK[0x648] & 0xF6000000 ^ v1013 ^ 0x4000000)
        + 1141233441
        - 2 * ((STACK[0x648] & 0xF6000000 ^ v1013 ^ 0x4000000) & 0x4405D723 ^ v1013 & 2);
  unsigned int v1020 = STACK[0x3DC];
  int v1021 = (LODWORD(STACK[0x3DC]) >> 29) ^ (LODWORD(STACK[0x3DC]) >> 31) ^ (LODWORD(STACK[0x3DC]) >> 26) ^ (LODWORD(STACK[0x3DC]) >> 15) ^ (v1015 >> 3);
  unsigned int v1022 = (LODWORD(STACK[0x3DC]) >> 30) ^ 0xF5AF44E7;
  LODWORD(STACK[0x660]) = v1022;
  int v1023 = ((v1021 ^ 0x85E1C06) - 173062938 - 2 * ((v1021 ^ 0x85E1C06) & 0x15AF44EF ^ v1021 & 9)) ^ v1022;
  int v1024 = (v1020 >> 25) ^ 0x2AC6F401;
  int v1025 = (v1023 + 717681696 - ((2 * v1023) & 0x558DE840)) ^ v1024;
  int v1026 = (v1020 >> 22) ^ 0x47318396;
  unsigned int v1027 = (v1025 + 1194427037 - ((2 * v1025) & 0x8E63053A)) ^ v1026;
  unsigned int v1028 = (v1020 >> 19) ^ 0xB47CDF4C;
  int v1029 = (v1027 - 1266886894 - ((2 * v1027) & 0x68F9AE24)) ^ v1028;
  unsigned int v1030 = (v1020 >> 18) ^ 0x6FEC7532 ^ (v1029 + 1877763471 - ((2 * v1029) & 0xDFD8CB1E));
  LODWORD(STACK[0x68C]) = HIWORD(v1020);
  int v1031 = HIWORD(v1020) ^ 0x2711A279;
  int v1032 = (v1030 + 655483021 - ((2 * v1030) & 0x4E23C11A)) ^ v1031;
  unsigned int v1033 = (v1020 >> 12) ^ 0xD626F043;
  unsigned int v1034 = (v1032 - 702357745 - ((2 * v1032) & 0xAC45BE1E)) ^ v1033;
  int v1035 = (v1015 >> 10) ^ 0x5693C6A3;
  LODWORD(STACK[0x644]) = v1035;
  unsigned int v1036 = (v1034 + 1451457424 - ((2 * v1034) & 0xAD06F720)) ^ v1035;
  int v1037 = (v1015 >> 8) ^ 0x23D9BEC2;
  LODWORD(STACK[0x698]) = v1037;
  int v1038 = (v1036 + 597379597 - ((2 * v1036) & 0x4736941A)) ^ v1037;
  unsigned int v1039 = (v1015 >> 7) ^ 0x9F3D86D4;
  int v1040 = (v1038 - 1615302837 - ((2 * v1038) & 0x3F70DE96)) ^ v1039;
  unsigned int v1041 = v1040 + 1681346518 - ((2 * v1040) & 0xC86E9FAC);
  unsigned int v1042 = ((v1015 << 28) ^ 0xC0000000) + 669950951 - ((v1015 << 29) & 0x40000000);
  unsigned int v1043 = ((v1015 << 11) ^ 0xA67F6000) + 1112120503 - ((2 * ((v1015 << 11) ^ 0xA67F6000)) & 0x84933000);
  LODWORD(STACK[0x664]) = v1043;
  int v1044 = (((v1020 >> 20) ^ 0x42F) + 1194427037 - ((2 * ((v1020 >> 20) ^ 0x42F)) & 0x53A)) ^ v1026;
  int v1045 = (v1044 + 717681696 - ((2 * v1044) & 0x558DE840)) ^ v1024;
  int v1046 = v1045 + 892553536 - ((2 * v1045) & 0x6A669280);
  int v1047 = (v1015 >> 6) ^ (v1015 >> 4) ^ 0x653C9CE9;
  unsigned int v1048 = (((v1047 ^ v1041) >> 27) | 0xFCE96C60) ^ ((v1047 ^ v1041) >> 21);
  LODWORD(STACK[0x6E0]) = v1048;
  unsigned int v1049 = v1017;
  LODWORD(STACK[0x690]) = v1017;
  int v1050 = (v1015 << 29) ^ v1017 ^ (32 * (v1047 ^ v1041)) ^ (4 * (v1047 ^ v1041)) ^ ((v1047 ^ v1041) << 11) ^ (4 * v1048) ^ (32 * v1048) ^ (v1048 << 11) ^ v1019 ^ 0x4AD96D1C;
  int v1051 = (v1050 + 669950951 - ((2 * v1050) & 0x4FDD47CE)) ^ v1042;
  int v1052 = v1047 ^ v1041 ^ 0x3BE628F9 ^ (v1051 - ((2 * v1051) & 0x7F92C80E) + 1070162951);
  LODWORD(STACK[0x6D0]) = v1052 - ((2 * v1052) & 0xF6608F1E);
  int v1053 = (v1020 >> 21) ^ 0x35334B57;
  int v1054 = v1028 ^ (v1020 >> 18) ^ ((v1046 ^ v1053) - 1266886894 - ((2 * (v1046 ^ v1053)) & 0x68F9AE24));
  unsigned int v1055 = ((v1015 << 18) ^ 0x3FB00000) - 231855715 - ((2 * ((v1015 << 18) ^ 0x3FB00000)) & 0xE4580000);
  LODWORD(STACK[0x670]) = v1055;
  unsigned int v1056 = ((v1015 << 21) ^ 0xFD800000) + 1560739669 - ((2 * ((v1015 << 21) ^ 0xFD800000)) & 0xBA000000);
  unint64_t v1057 = v1015 ^ 0x42F4CFEC;
  int v1058 = (v1020 >> 13) ^ (v1015 >> 1) ^ 0x21787050 ^ (v1057 >> ((LODWORD(STACK[0x640]) | 0x6E)
                                                               - (STACK[0x640] & 0x91)
                                                               - 99));
  unsigned int v1059 = (v1058 + 655483021 - ((2 * v1058) & 0x4E23C11A)) ^ v1031 ^ v1054;
  int v1060 = ((v1059 ^ (v1020 >> 14) ^ 0x11B6E)
         - 702357745
         - 2 * ((v1059 ^ (v1020 >> 14) ^ 0x11B6E) & 0x5622DF1F ^ (v1059 ^ (v1020 >> 14)) & 0x10)) ^ v1033;
  int v1061 = (v1060 - 1615302837 - ((2 * v1060) & 0x3F70DE96)) ^ v1039;
  unsigned int v1062 = v1047 ^ (v1061 + 1681346518 - ((2 * v1061) & 0xC86E9FAC));
  int v1063 = v1057 << (v1054 & 0x1F ^ 0x1D | v1054 & 0x1F ^ 2);
  int v1064 = (v1015 << 12) ^ (v1015 << 19) ^ 0x339EC000 ^ v1063;
  int v1065 = (v1064 + 865832934 - 2 * (v1064 & 0x339B8FEE ^ v1063 & 8)) ^ LODWORD(STACK[0x65C]);
  unsigned int v1066 = (v1065 + 1175647659 - ((2 * v1065) & 0x8C25EB56)) ^ LODWORD(STACK[0x2B0]);
  unsigned int v1067 = (v1066 - 1046365581 - ((2 * v1066) & 0x834374E6)) ^ LODWORD(STACK[0x650]);
  unsigned int v1068 = (v1067 + 1112120503 - ((2 * v1067) & 0x8493396E)) ^ v1043;
  int v1069 = STACK[0x2B8];
  unsigned int v1070 = (v1068 - 341378490 - ((2 * v1068) & 0xD74DF48C)) ^ LODWORD(STACK[0x2B8]);
  int v1071 = (v1070 - 1145993403 - ((2 * v1070) & 0x77630E8A)) ^ LODWORD(STACK[0x2B4]);
  int v1072 = STACK[0x3A0];
  int v1073 = (v1071 - 1220807824 - ((2 * v1071) & 0x6E77E6E0)) ^ LODWORD(STACK[0x3A0]);
  unsigned int v1074 = (v1073 - 231855715 - ((2 * v1073) & 0xE45C533A)) ^ v1055;
  int v1075 = STACK[0x3AC];
  unsigned int v1076 = (v1074 - 93610490 - ((2 * v1074) & 0xF4D73C0C)) ^ LODWORD(STACK[0x3AC]);
  unsigned int v1077 = (v1076 + 1560739669 - ((2 * v1076) & 0xBA0DFEAA)) ^ v1056;
  int v1078 = (v1077 + 74754679 - ((2 * v1077) & 0x8E954EE)) ^ v1018;
  unsigned int v1079 = (v1078 + 1141233441 - ((2 * v1078) & 0x880BAE42)) ^ v1049;
  int v1080 = STACK[0x6C8];
  LOBYTE(v1064) = STACK[0x6C8] & 0x1D ^ 0xC | STACK[0x6C8] & 0x1D ^ 0x11;
  int v1081 = (unsigned __int16)(LOWORD(STACK[0x6B0]) + 513);
  int v1082 = v1081 - ((2 * (LODWORD(STACK[0x6B0]) + 513)) & 0x4DE2) + 1975854833;
  int v1083 = (v1062 >> 27) ^ (v1059 >> 30) ^ (v1062 >> 21);
  int v1084 = (LODWORD(STACK[0x688]) | (LODWORD(STACK[0x6F4]) << 30)) ^ (16 * LODWORD(STACK[0x66C])) ^ (32
                                                                                                  * LODWORD(STACK[0x66C])) ^ (LODWORD(STACK[0x66C]) << 17) ^ (LODWORD(STACK[0x6F0]) - 904160002) ^ LODWORD(STACK[0x6B8]) ^ (4 * v930) ^ (32 * v930) ^ (v930 << 11) ^ v1081 ^ (4 * v1082) ^ (32 * v1082) ^ (v1082 << 11) ^ v1042 ^ (4 * v1062) ^ (32 * v1062) ^ (v1062 << 11) ^ (4 * v1083);
  LODWORD(STACK[0x6F0]) = v1083;
  unsigned int v1085 = v1084 ^ 0xEA15341A ^ (v1079 + 669950951 - ((2 * v1079) & 0x4FDD47CE));
  int v1086 = (v1085 - 1194358331 - ((2 * v1085) & 0x719F138A)) ^ LODWORD(STACK[0x42C]);
  int v1087 = (v1086 - 1615195507 - ((2 * v1086) & 0x3F74251A)) ^ LODWORD(STACK[0x684]);
  int v1088 = (v1087 - 1188897475 - ((2 * v1087) & 0x7245BA7A)) ^ LODWORD(STACK[0x430]);
  int v1089 = (v1088 - 1971920457 - ((2 * v1088) & 0x14EDC36E)) ^ LODWORD(STACK[0x6D8]);
  int v1090 = (v1089 + 76110623 - ((2 * v1089) & 0x912B63E)) ^ LODWORD(STACK[0x680]);
  unsigned int v1091 = (v1090 - 553603112 - ((2 * v1090) & 0xBE015FB0)) ^ LODWORD(STACK[0x708]);
  unsigned int v1092 = (v1091 - 758313411 - ((2 * v1091) & 0xA59A1C7A)) ^ LODWORD(STACK[0x67C]);
  int v1093 = (v1092 - 1307705299 - ((2 * v1092) & 0x641C005A)) ^ LODWORD(STACK[0x420]);
  unsigned int v1094 = (v1093 + 2051843745 - ((2 * v1093) & 0xF4994D42)) ^ LODWORD(STACK[0x418]);
  unsigned int v1095 = (((v1094 - 31735370 - ((2 * v1094) & 0xFC37836C)) ^ LODWORD(STACK[0x668]))
         + 1208710851
         - 2
         * (((v1094 - 31735370 - ((2 * v1094) & 0xFC37836C)) ^ LODWORD(STACK[0x668])) & 0x480B76CB ^ (v1094 - 31735370 - ((2 * v1094) & 0xFC37836C)) & 8)) ^ LODWORD(STACK[0x424]);
  int v1096 = (v1095 + 772009851 - ((2 * v1095) & 0x5C07DEF6)) ^ LODWORD(STACK[0x710]);
  unsigned int v1097 = LODWORD(STACK[0x6C4]) ^ 0x2534B08C ^ (v1096 - ((2 * v1096) & 0xA5C202B0) + 1390477656);
  LODWORD(STACK[0x708]) = v1083 ^ v1062 ^ (v1097 - ((2 * v1097) & 0xF086E87E) - 129797057);
  int v1098 = STACK[0x6AC];
  unsigned int v1099 = v1057 >> v1064;
  LODWORD(v1057) = v1057 >> (STACK[0x6AC] & 9 ^ 1 | STACK[0x6AC] & 9 ^ 8);
  int v1100 = (v1020 >> 17) ^ HIBYTE(v1020) ^ (v1020 >> 11) ^ LODWORD(STACK[0x68C]) ^ (((v1015 >> 5) ^ 0x217A67F)
                                                                                 - (a40 & (2 * ((v1015 >> 5) ^ 0x217A67F)))
                                                                                 + 1429150128) ^ v1099 ^ 0x552724E5 ^ v1057;
  unsigned int v1101 = (v1100 - 173062938 - ((2 * v1100) & 0xEB5E89CC)) ^ LODWORD(STACK[0x660]);
  int v1102 = (v1101 + 717681696 - ((2 * v1101) & 0x558DE840)) ^ v1024;
  unsigned int v1103 = (v1102 + 1194427037 - ((2 * v1102) & 0x8E63053A)) ^ v1026;
  int v1104 = (v1103 + 892553536 - ((2 * v1103) & 0x6A669280)) ^ v1053;
  int v1105 = (v1104 - 1266886894 - ((2 * v1104) & 0x68F9AE24)) ^ v1028;
  unsigned int v1106 = (v1020 >> 14) ^ 0xFE061D72 ^ (v1105 - ((2 * v1105) & 0xFC0E2D42) - 33089887);
  unsigned int v1107 = (v1106 - 702357745 - ((2 * v1106) & 0xAC45BE1E)) ^ v1033;
  unsigned int v1108 = (v1107 + 1451457424 - ((2 * v1107) & 0xAD06F720)) ^ LODWORD(STACK[0x644]);
  int v1109 = (v1108 + 597379597 - ((2 * v1108) & 0x4736941A)) ^ LODWORD(STACK[0x698]);
  unsigned int v1110 = v1039 ^ (v1015 >> 6) ^ (v1109 - 1615302837 - ((2 * v1109) & 0x3F70DE96));
  int v1111 = ((v1110 >> 20) & 0xF1E ^ 0x10) + ((v1110 >> 21) ^ 0x5E799F87);
  LODWORD(v1057) = ((v1057 >> 30) ^ (v1057 >> 27))
                 + v1111
                 - 2 * ((v1111 + 17) & ((v1057 >> 30) ^ (v1057 >> 27)))
                 - 1585029007;
  LODWORD(STACK[0x6F4]) = ((v1011 << 10) ^ 0x64E8F000) - 882459817 - ((2 * ((v1011 << 10) ^ 0x64E8F000)) & 0x96CD7000);
  LODWORD(v1057) = (v1057 ^ 0x7AFDFDDB) + ((2 * v1057) & 0xF5FBFBB6) + 549;
  LODWORD(v1057) = (v1015 << 15) ^ (v1015 << 8) ^ (v1015 << 23) ^ LODWORD(STACK[0x6A0]) ^ (4 * v1110) ^ (32 * v1110) ^ (v1110 << 11) ^ (unsigned __int16)v1057 ^ (4 * ((unsigned __int16)v1057 - ((2 * v1057) & 0x13BA2) - 502161967)) ^ (32 * ((unsigned __int16)v1057 - ((2 * v1057) & 0x13BA2) - 502161967)) ^ (((unsigned __int16)v1057 - ((2 * v1057) & 0x13BA2) - 502161967) << 11) ^ 0x386E7A78;
  LODWORD(v1057) = (v1057 + 1112120503 - ((2 * v1057) & 0x8493396E)) ^ LODWORD(STACK[0x664]);
  int v1112 = (v1057 - 341378490 - ((2 * v1057) & 0xD74DF48C)) ^ v1069;
  LODWORD(v1057) = (v1112 - 247835422 - 2 * (v1112 & 0x713A54E3 ^ v1057 & 1)) ^ LODWORD(STACK[0x3D0]);
  LODWORD(v1057) = (v1057 + 871112777 - ((2 * v1057) & 0x67D84092)) ^ LODWORD(STACK[0x3D4]);
  LODWORD(v1057) = (v1057 + 865832934 - ((2 * v1057) & 0x67371FCC)) ^ LODWORD(STACK[0x65C]);
  LODWORD(v1057) = (v1057 - 1046365581 - ((2 * v1057) & 0x834374E6)) ^ LODWORD(STACK[0x650]);
  LODWORD(v1057) = (v1057 - 1220807824 - ((2 * v1057) & 0x6E77E6E0)) ^ v1072;
  LODWORD(v1057) = (v1057 - 231855715 - ((2 * v1057) & 0xE45C533A)) ^ LODWORD(STACK[0x670]);
  LODWORD(v1057) = (v1057 - 93610490 - ((2 * v1057) & 0xF4D73C0C)) ^ v1075;
  LODWORD(v1057) = (v1057 + 1560739669 - ((2 * v1057) & 0xBA0DFEAA)) ^ v1056;
  LODWORD(v1057) = (v1057 - 1230024337 - ((2 * v1057) & 0x6D5EA2DE)) ^ LODWORD(STACK[0x39C]);
  LODWORD(v1057) = (v1057 - 1036582761 - ((2 * v1057) & 0x846E012E)) ^ LODWORD(STACK[0x2BC]);
  LODWORD(v1057) = (v1057 + 74754679 - ((2 * v1057) & 0x8E954EE)) ^ LODWORD(STACK[0x648]);
  LODWORD(v1057) = (v1057 + 1141233441 - ((2 * v1057) & 0x880BAE42)) ^ LODWORD(STACK[0x690]);
  unsigned int v1113 = v1110 ^ v1080 ^ (v1057 - ((2 * v1057) & 0xEADB9B1A) - 177353331);
  int v1114 = ((v1011 << 14) ^ 0x4E8F0000) + 928986583 - ((2 * ((v1011 << 14) ^ 0x4E8F0000)) & 0x6EBE0000);
  int v1115 = ((v1011 << 13) ^ 0x27478000) + 933547407 - ((2 * ((v1011 << 13) ^ 0x27478000)) & 0x6F498000);
  unsigned int v1116 = (v1011 >> 19) ^ 0xCFDA72F3;
  LODWORD(v1057) = (((v1011 >> 18) ^ 0xE86) - 807766608 - ((2 * ((v1011 >> 18) ^ 0xE86)) & 0x6B60)) ^ v1116;
  LODWORD(v1057) = (v1011 >> 22) ^ 0xAB7AEE9F ^ (v1057 - 1418006921 - ((2 * v1057) & 0x56F5DCEE));
  unsigned int v1117 = ((v1011 << 20) ^ 0xA3C00000) + 336342894 - ((v1011 << 21) & 0x28000000);
  unsigned int v1118 = ((v1011 << 26) ^ 0xF0000000) - 1385153441 - ((2 * ((v1011 << 26) ^ 0xF0000000)) & 0x58000000);
  unsigned int v1119 = HIWORD(v1011) ^ 0xA89384E4;
  LODWORD(v1057) = a39 ^ (v1011 >> 31) ^ (v1011 >> 30) ^ (v1011 >> 29) ^ (v1011 >> 26) ^ (v1011 >> 15) ^ (v1011 >> 10) ^ (v1011 >> 12) ^ (v1011 >> 25) ^ v1119 ^ (v1057 - 1466712323 - ((2 * v1057) & 0x51277DFA));
  unsigned int v1120 = ((v1011 << 25) ^ 0x78000000) - 151142457 - ((2 * ((v1011 << 25) ^ 0x78000000)) & 0xEC000000);
  LODWORD(v1057) = ((v1011 ^ 0x3A193A3C) >> (STACK[0x708] & 7) >> (STACK[0x708] & 7 ^ 7)) ^ (v1057
                                                                                           + ((v1011 >> 8) ^ 0x3A193A)
                                                                                           - 2
                                                                                           * (v1057 & ((v1011 >> 8) ^ 0x3A193A)));
  unsigned int v1121 = ((v1098 << 28) ^ 0xE0000000) - 1588303964 - ((2 * ((v1098 << 28) ^ 0xE0000000)) & 0x40000000);
  int v1122 = (((v1011 >> 3) ^ 0x7432747) - 1537193961 - ((2 * ((v1011 >> 3) ^ 0x7432747)) & 0x8C0902E)) ^ 0xA4604817 ^ v1057;
  int v1123 = (v1011 >> 6) ^ (v1011 >> 4) ^ 0x2640ACF4;
  unsigned int v1124 = v1123 ^ (v1122 + 648595484 - ((2 * v1122) & 0x4D519038));
  LODWORD(v1057) = (v1124 >> 27) ^ (v1057 >> 30) ^ (v1124 >> 21);
  int v1125 = (v1098 << 29) ^ (v1011 << 24) ^ (v1011 << 22) ^ (v1011 << 17) ^ (v1011 << 6) ^ (8 * v1011) ^ (4 * v1011) ^ (2 * v1011) ^ (32 * v1124) ^ (4 * v1124);
  int v1126 = v1057 ^ v1124;
  LODWORD(v1057) = v1125 ^ (v1126 << 11) ^ (32 * v1057) ^ (4 * v1057) ^ 0xBB800B50;
  LODWORD(v1057) = (v1057 + 16691736 - 2 * (v1057 & 0xFEB21A ^ (2 * v1011) & 2)) ^ v1011 ^ 0x3AE78824;
  unsigned int v1127 = ((v1011 << 7) ^ 0xC9D1E00) + 1861307301 - ((2 * ((v1011 << 7) ^ 0xC9D1E00)) & 0xDDE29700);
  LODWORD(v1057) = (v1057 + 1861307301 - ((2 * v1057) & 0xDDE2974A)) ^ v1127;
  int v1128 = STACK[0x6F4];
  LODWORD(v1057) = (v1057 - 882459817 - ((2 * v1057) & 0x96CD76AE)) ^ LODWORD(STACK[0x6F4]);
  LODWORD(v1057) = (v1057 + 928986583 - ((2 * v1057) & 0x6EBE6BAE)) ^ v1114;
  LODWORD(v1057) = (v1057 + 933547407 - ((2 * v1057) & 0x6F499B1E)) ^ v1115;
  LODWORD(v1057) = (v1057 - 1864909348 - ((2 * v1057) & 0x21AF7BB8)) ^ (((v1011 << 16) ^ 0x3A3C0000)
                                                                      - 1864909348
                                                                      - ((2 * ((v1011 << 16) ^ 0x3A3C0000)) & 0x21AE0000));
  LODWORD(v1057) = (v1057 + 336342894 - ((2 * v1057) & 0x28185EDC)) ^ v1117;
  LODWORD(v1057) = (v1057 - 151142457 - ((2 * v1057) & 0xEDFB7F8E)) ^ v1120;
  LODWORD(v1057) = (v1057 - 1385153441 - ((2 * v1057) & 0x5AE078BE)) ^ v1118;
  LODWORD(v1057) = (v1057 - 1588303964 - ((2 * v1057) & 0x42A8CF48)) ^ v1121;
  LODWORD(STACK[0x710]) = v1126 ^ (v1057 - ((2 * v1057) & 0x5E451176) - 1356691269);
  unsigned int v1129 = (v1011 >> 21) ^ (v1011 >> 20) ^ (v1011 >> 14) ^ (v1011 >> 11) ^ (v1011 >> 13) ^ (v1011 >> 7) ^ (v1011 >> 1);
  int v1130 = (v1011 >> 18) ^ (v1011 >> 12) ^ (v1011 >> 22) ^ 0x1D7D796C ^ v1129;
  unsigned int v1131 = (v1011 >> 25) ^ 0xE770DF8F ^ (v1130 - 412033137 - ((2 * v1130) & 0xCEE1BF24) + 3);
  unsigned int v1132 = (v1131 - 807766608 - ((2 * v1131) & 0x9FB4EB60)) ^ v1116;
  int v1133 = (v1132 - 1466712323 - ((2 * v1132) & 0x51277DFA)) ^ v1119;
  unsigned int v1134 = v1123 ^ (v1133 + 648595484 - ((2 * v1133) & 0x4D519038));
  int v1135 = ((v1098 << 31) | 0x24E22000) ^ (v1011 << 11) ^ (v1011 << 12) ^ (v1011 << 18) ^ (v1011 << 19) ^ (v1011 << 21);
  int v1136 = (v1135 + 933547407 - ((2 * v1135) & 0x6F499B3E)) ^ v1115;
  unsigned int v1137 = (v1136 + 1861307301 - ((2 * v1136) & 0xDDE2974A)) ^ v1127;
  int v1138 = (v1137 + 16691736 - ((2 * v1137) & 0x1FD6430)) ^ v1011 ^ 0x3AE78824;
  unsigned int v1139 = (v1138 - 882459817 - ((2 * v1138) & 0x96CD76AE)) ^ v1128;
  int v1140 = (v1139 + 928986583 - ((2 * v1139) & 0x6EBE6BAE)) ^ v1114;
  int v1141 = (v1140 - 1864909348 - ((2 * v1140) & 0x21AF7BB8)) ^ (((v1011 << 16) ^ 0x3A3C0000)
                                                             - 1864909348
                                                             - ((2 * ((v1011 << 16) ^ 0x3A3C0000)) & 0x21AE0000));
  int v1142 = (v1141 + 336342894 - ((2 * v1141) & 0x28185EDC)) ^ v1117;
  unsigned int v1143 = (v1142 - 151142457 - ((2 * v1142) & 0xEDFB7F8E)) ^ v1120;
  int v1144 = v1118 ^ v1121 ^ (v1143 - 1385153441 - ((2 * v1143) & 0x5AE078BE));
  int v1145 = LODWORD(STACK[0x6EC]) ^ 0x5DE3437B ^ v1144;
  v1144 ^= 0xA15467A4;
  unsigned int v1146 = (v1145 + v1144 + 1) ^ ((LODWORD(STACK[0x6EC]) ^ 0xFCB724DF) + 1);
  int v1147 = (v1134 >> 27) ^ (v1129 >> 30) ^ (v1134 >> 21);
  LODWORD(STACK[0x6F4]) = v1134 ^ (v1134 << 11) ^ (4 * v1134) ^ v1147 ^ (32 * v1147) ^ (v1147 << 11) ^ (((32 * v1134) ^ 0x74327414 ^ (4 * v1147)) - ((2 * ((32 * v1134) ^ 0x74327414 ^ (4 * v1147))) & 0x2BEFC1B0) + 368566489) ^ ((LODWORD(STACK[0x6EC]) ^ 0xAF365217 ^ (v1146 - ((2 * v1146) & 0x58FD126E) - 1400993481)) + v1144);
  int v1148 = ((v1113 << 11) ^ 0x25B3E000) - 1094051288 - ((2 * ((v1113 << 11) ^ 0x25B3E000)) & 0x7D943000);
  unsigned int v1149 = ((v1113 << 18) ^ 0xD9F00000) + 1819803390 - ((2 * ((v1113 << 18) ^ 0xD9F00000)) & 0xD8E80000);
  unsigned int v1150 = ((v1113 << 21) ^ 0xCF800000) - 423305437 - ((2 * ((v1113 << 21) ^ 0xCF800000)) & 0xCD800000);
  unsigned int v1151 = ((v1113 << 22) ^ 0x9F000000) - 119970905 - ((2 * ((v1113 << 22) ^ 0x9F000000)) & 0xF1800000);
  unsigned int v1152 = ((v1113 << 26) ^ 0xF0000000) - 1811828674 - ((2 * ((v1113 << 26) ^ 0xF0000000)) & 0x28000000);
  unsigned int v1153 = ((v1113 << 27) ^ 0xE0000000) + 1130843624 + (((v1113 << 27) ^ 0xE0000000) >> 30 << 31);
  LODWORD(v1057) = (v1113 >> 14) ^ 0x700AACB6;
  LODWORD(STACK[0x6EC]) = v1057;
  unsigned int v1154 = (v1113 >> 4) ^ (v1113 >> 2) ^ (v1113 >> 27) ^ (v1113 >> 28) ^ (v1113 >> 13) ^ v1057 ^ (((v1113 >> 15) ^ (v1113 >> 18) ^ 0xFA80)
                                                                                               + 1879793700
                                                                                               - ((2
                                                                                                 * ((v1113 >> 15) ^ (v1113 >> 18) ^ 0xFA80)) & 0x2C048));
  unsigned int v1155 = v1113 >> 30;
  unsigned int v1156 = (v1113 >> 29) ^ 0xB76E9F67;
  int v1157 = (((v1113 >> 30) ^ 0x1BF8FFD5 ^ v1154) - 1217487004 - ((2 * ((v1113 >> 30) ^ 0x1BF8FFD5 ^ v1154)) & 0x6EDD3EC8)) ^ v1156;
  unsigned int v1158 = (v1113 >> 21) ^ 0xC43D7DD2;
  unsigned int v1159 = (v1157 - 1002602933 - ((2 * v1157) & 0x887AFC96)) ^ v1158;
  int v1160 = (v1113 >> 19) ^ 0xC72BA8D;
  int v1161 = (v1159 + 208844009 - ((2 * v1159) & 0x18E569D2)) ^ v1160;
  int v1162 = v1161 + 241204138 - ((2 * v1161) & 0x1CC0F754);
  int v1163 = (v1113 >> 11) ^ 0xE6E1F3C;
  unsigned int v1164 = (v1162 ^ v1163) - 110632265 - ((2 * (v1162 ^ v1163)) & 0xF2CFC56E);
  unsigned int v1165 = (v1113 >> 10) ^ 0xF97B2B9A;
  int v1166 = (v1113 >> 9) ^ 0x471A13F9;
  unsigned int v1167 = ((v1164 ^ v1165) + 1193509282 - ((2 * (v1164 ^ v1165)) & 0x8E470344)) ^ v1166;
  unsigned int v1168 = (v1113 >> 6) ^ (v1113 >> 5) ^ 0xD5B53287;
  unsigned int v1169 = v1168 ^ (v1167 - 730226594 - ((2 * v1167) & 0xA8F340BC));
  int v1170 = (v1169 >> 21) ^ (v1154 >> 27);
  int v1171 = LODWORD(STACK[0x6E0]) ^ (LODWORD(STACK[0x6D0]) + 2066761615) ^ (16 * v1113) ^ (32 * v1113) ^ (v1113 << 14) ^ (v1113 << 17) ^ (v1113 << 19) ^ (v1113 << 28) ^ (v1113 << 30) ^ (4 * v1169) ^ (32 * v1169) ^ (v1169 << 11) ^ (4 * v1170) ^ (32 * v1170) ^ (v1170 << 11) ^ 0x57EEC0BE;
  int v1172 = (8 * v1113) ^ (4 * v1113) ^ 0x32F397C8;
  unsigned int v1173 = (v1171 + 1732574680 - ((2 * v1171) & 0xCE89FBB0)) ^ v1172;
  int v1174 = (v1173 - 1094051288 - ((2 * v1173) & 0x7D943450)) ^ v1148;
  int v1175 = (v1174 + 473178689 - ((2 * v1174) & 0x38684482)) ^ ((a38 ^ (v1113 << 13))
                                                            + 473178689
                                                            - ((2 * (a38 ^ (v1113 << 13))) & 0x38684000));
  unsigned int v1176 = (v1175 + 1819803390 - ((2 * v1175) & 0xD8EFFDFC)) ^ v1149;
  unsigned int v1177 = (v1176 - 423305437 - ((2 * v1176) & 0xCD89BE46)) ^ v1150;
  unsigned int v1178 = (v1177 - 119970905 - ((2 * v1177) & 0xF1B2C74E)) ^ v1151;
  unsigned int v1179 = (v1178 + 1303802545 - ((2 * v1178) & 0x9B6CE562)) ^ (((v1113 << 23) ^ 0x3E000000)
                                                             + 1303802545
                                                             - ((2 * ((v1113 << 23) ^ 0x3E000000)) & 0x9B000000));
  unsigned int v1180 = ((v1113 << 23) ^ 0x3E000000) + 1303802545 - ((2 * ((v1113 << 23) ^ 0x3E000000)) & 0x9B000000);
  int v1181 = (v1179 - 1811828674 - ((2 * v1179) & 0x2803607C)) ^ v1152;
  unsigned int v1182 = (v1181 + 1130843624 - ((2 * v1181) & 0x86CE9BD0)) ^ v1153;
  int v1183 = v1170 ^ v1169 ^ (v1182 - ((2 * v1182) & 0x32133FC2) + 420061153);
  unsigned int v1184 = (v1113 << 7) ^ (v1113 << 8) ^ (v1113 << 10) ^ (v1113 << 15) ^ (v1113 << 16) ^ (v1113 << 20) ^ (v1113 << 24) ^ (v1113 << 25) ^ v1153 ^ v1152 ^ 0xFDD04FD6;
  unsigned int v1185 = (v1184 + 1732574680 - ((2 * v1184) & 0xCE89FBB0)) ^ v1172;
  int v1186 = (v1185 - 1094051288 - ((2 * v1185) & 0x7D943450)) ^ v1148;
  int v1187 = (v1186 + 473178689 - ((2 * v1186) & 0x38684482)) ^ ((a38 ^ (v1113 << 13))
                                                            + 473178689
                                                            - ((2 * (a38 ^ (v1113 << 13))) & 0x38684000));
  unsigned int v1188 = (v1187 + 1819803390 - ((2 * v1187) & 0xD8EFFDFC)) ^ v1149;
  unsigned int v1189 = (v1188 - 423305437 - ((2 * v1188) & 0xCD89BE46)) ^ v1150;
  unsigned int v1190 = (v1189 - 119970905 - ((2 * v1189) & 0xF1B2C74E)) ^ v1151;
  int v1191 = (v1113 >> 8) ^ (v1113 >> 7) ^ (v1113 >> 22) ^ HIBYTE(v1113) ^ (v1113 >> 25) ^ (v1113 >> 17) ^ HIWORD(v1113) ^ (v1113 >> 12);
  int v1192 = ((v1191 ^ 0x9214A1) - 1002602933 - 2 * ((v1191 ^ 0x9214A1) & 0x443D7E5B ^ v1191 & 0x10)) ^ v1158;
  int v1193 = (v1192 - 1217487004 - ((2 * v1192) & 0x6EDD3EC8)) ^ v1156;
  int v1194 = v1155 ^ 0x7CCE51CB ^ (v1193 + 2093896138 - ((2 * v1193) & 0x799CA394));
  int v1195 = (v1194 + 208844009 - ((2 * v1194) & 0x18E569D2)) ^ v1160;
  unsigned int v1196 = (v1195 + 1879793700 - ((2 * v1195) & 0xE016C048)) ^ LODWORD(STACK[0x6EC]);
  int v1197 = (v1196 + 241204138 - ((2 * v1196) & 0x1CC0F754)) ^ v1163;
  unsigned int v1198 = (v1197 - 110632265 - ((2 * v1197) & 0xF2CFC56E)) ^ v1165;
  unsigned int v1199 = (v1198 + 1193509282 - ((2 * v1198) & 0x8E470344)) ^ v1166;
  unsigned int v1200 = v1168 ^ (v1199 - 730226594 - ((2 * v1199) & 0xA8F340BC));
  unsigned int v1201 = (32 * LODWORD(STACK[0x6F0])) ^ (LODWORD(STACK[0x6F0]) << 11) ^ v1180 ^ (v1190
                                                                                + 1303802545
                                                                                - ((2 * v1190) & 0x9B6CE562)) ^ (4 * v1200) ^ (32 * v1200) ^ (v1200 << 11) ^ (4 * (v1200 >> 21)) ^ (32 * (v1200 >> 21)) ^ (v1200 >> 21 << 11) ^ 0xB46C577C;
  unsigned int v1202 = LODWORD(STACK[0x708]) ^ 0xC65DF826 ^ (v1201 - ((2 * v1201) & 0x7463818C) + 976339142);
  unsigned int v1203 = (v1200 >> 21) ^ v1200 ^ (v1202 - 1962775842 + (~(2 * v1202) | 0xE9FB2A45));
  unsigned int v1204 = LODWORD(STACK[0x44C]) - 5220136 - ((2 * LODWORD(STACK[0x44C])) & 0xFF60B1B0);
  unsigned int v1205 = LODWORD(STACK[0x450]) - 5220136 - ((2 * LODWORD(STACK[0x450])) & 0xFF60B1B0);
  int v1206 = LODWORD(STACK[0x454]) + 483905654 - ((2 * LODWORD(STACK[0x454])) & 0x39AFA0EC);
  int v1207 = LODWORD(STACK[0x710]) ^ 0x20AB8C66;
  int v1208 = -2009212831
        * (v1207 ^ (LODWORD(STACK[0x52C]) - ((2 * LODWORD(STACK[0x52C]) + 148162052) & 0x18512EC6) + 278067813))
        - 75026750;
  LODWORD(STACK[0x728]) = -2009212831
                        * (v1207 ^ (LODWORD(STACK[0x5C8])
                                  - ((2 * LODWORD(STACK[0x5C8]) + 472964400) & 0x18512EC6)
                                  + 708904443))
                        - 75026750;
  LODWORD(STACK[0x72C]) = v1208;
  int v1209 = LODWORD(STACK[0x520]) - ((2 * LODWORD(STACK[0x520]) + 61666746) & 0x18512EC6);
  unsigned int v1210 = LODWORD(STACK[0x458]) - 5220136 - ((2 * LODWORD(STACK[0x458])) & 0xFF60B1B0);
  int v1211 = LODWORD(STACK[0x460]) ^ v1203;
  LODWORD(STACK[0x788]) = -2009212831 * (v1211 ^ 0x889B4F72) - 75026750;
  LODWORD(STACK[0x78C]) = -2009212831 * (v1203 ^ 0x944C9F04 ^ v1206) - 75026750;
  int v1212 = LODWORD(STACK[0x46C]) + 483905654 - ((2 * LODWORD(STACK[0x46C])) & 0x39AFA0EC);
  unsigned int v1213 = LODWORD(STACK[0x6F4]) ^ 0xEBFD9693;
  LODWORD(STACK[0x768]) = -2009212831 * (v1213 ^ v1204) - 75026750;
  LODWORD(STACK[0x76C]) = -2009212831 * (v1213 ^ v1205) - 75026750;
  int v1214 = LODWORD(STACK[0x500]) - ((2 * LODWORD(STACK[0x500]) + 255759382) & 0x18512EC6);
  int v1215 = -2009212831 * (v1183 ^ 0x1A90BA4D ^ (LODWORD(STACK[0x504]) - 1860504193)) - 75026750;
  LODWORD(STACK[0x748]) = -2009212831 * (v1183 ^ 0x1A90BA4D ^ (LODWORD(STACK[0x53C]) - 914564212)) - 75026750;
  LODWORD(STACK[0x74C]) = v1215;
  unsigned int v1216 = LODWORD(STACK[0x470]) - 5220136 - ((2 * LODWORD(STACK[0x470])) & 0xFF60B1B0);
  int v1217 = LODWORD(STACK[0x59C]) - ((2 * LODWORD(STACK[0x59C]) + 51057590) & 0x18512EC6);
  int v1218 = LODWORD(STACK[0x480]) + 483905654 - ((2 * LODWORD(STACK[0x480])) & 0x39AFA0EC);
  unsigned int v1219 = LODWORD(STACK[0x47C]) - 5220136 - ((2 * LODWORD(STACK[0x47C])) & 0xFF60B1B0);
  int v1220 = LODWORD(STACK[0x484]) + 483905654 - ((2 * LODWORD(STACK[0x484])) & 0x39AFA0EC);
  LODWORD(STACK[0x730]) = -75026750 - 2009212831 * (v1207 ^ (v1209 - 1644228032));
  LODWORD(STACK[0x734]) = -75026750 - 2009212831 * (v1207 ^ (v1214 + 1674043758));
  LODWORD(STACK[0x790]) = -75026750 - 2009212831 * (v1203 ^ 0x944C9F04 ^ v1212);
  LODWORD(STACK[0x794]) = -75026750 - 2009212831 * (v1203 ^ 0x944C9F04 ^ v1218);
  LODWORD(STACK[0x770]) = -75026750 - 2009212831 * (v1213 ^ v1210);
  LODWORD(STACK[0x774]) = -75026750 - 2009212831 * (v1213 ^ v1216);
  int v1221 = -75026750 - 2009212831 * (v1183 ^ 0x1A90BA4D ^ (LODWORD(STACK[0x510]) - 854318884));
  LODWORD(STACK[0x750]) = -75026750 - 2009212831 * (v1183 ^ 0x1A90BA4D ^ (LODWORD(STACK[0x4FC]) - 1413920139));
  LODWORD(STACK[0x754]) = v1221;
  unsigned int v1222 = LODWORD(STACK[0x488]) - 5220136 - ((2 * LODWORD(STACK[0x488])) & 0xFF60B1B0);
  int v1223 = LODWORD(STACK[0x530]) - ((2 * LODWORD(STACK[0x530]) + 140913692) & 0x18512EC6);
  int v1224 = LODWORD(STACK[0x570]) + 483905654 - ((2 * LODWORD(STACK[0x570])) & 0x39AFA0EC);
  unsigned int v1225 = LODWORD(STACK[0x494]) - 5220136 - ((2 * LODWORD(STACK[0x494])) & 0xFF60B1B0);
  int v1226 = -75026750
        - 2009212831
        * (v1207 ^ (LODWORD(STACK[0x538]) - ((2 * LODWORD(STACK[0x538]) + 152213364) & 0x18512EC6) + 1890706205));
  LODWORD(STACK[0x738]) = -75026750 - 2009212831 * (v1207 ^ (v1217 - 1649532610));
  LODWORD(STACK[0x73C]) = v1226;
  LODWORD(STACK[0x798]) = -75026750 - 2009212831 * (v1203 ^ 0x944C9F04 ^ v1220);
  LODWORD(STACK[0x79C]) = -75026750 - 2009212831 * (v1203 ^ 0x944C9F04 ^ v1224);
  int v1227 = -75026750 - 2009212831 * (v1183 ^ 0x1A90BA4D ^ (LODWORD(STACK[0x50C]) - 428185709));
  LODWORD(STACK[0x75C]) = -75026750 - 2009212831 * (v1183 ^ 0x1A90BA4D ^ (LODWORD(STACK[0x51C]) - 1311771137));
  LODWORD(STACK[0x758]) = v1227;
  int v1228 = LODWORD(STACK[0x574]) + 483905654 - ((2 * LODWORD(STACK[0x574])) & 0x39AFA0EC);
  LODWORD(STACK[0x778]) = -75026750 - 2009212831 * (v1213 ^ v1219);
  LODWORD(STACK[0x77C]) = -75026750 - 2009212831 * (v1213 ^ v1222);
  int v1229 = LODWORD(STACK[0x4F8]) - ((2 * LODWORD(STACK[0x4F8]) + 525958974) & 0x18512EC6);
  int v1230 = v1183 ^ 0x1A90BA4D ^ (LODWORD(STACK[0x508]) - 609556220);
  LODWORD(STACK[0x6F0]) = v1183 ^ 0x1A90BA4D ^ (LODWORD(STACK[0x540]) - 1171275847);
  LODWORD(STACK[0x708]) = (v1230 + 1663319554)
                        * (v1211 & 0x883DD061 ^ 0x88194060 ^ ((v1211 & 0x883DD861 ^ 0x249001) + (~v1211 & 0x800)));
  v1231 = (unsigned __int8 *)STACK[0x718];
  int v1232 = *(unsigned __int8 *)(STACK[0x718] + 47) ^ 0xD3;
  int v1233 = (v1232 | (LODWORD(STACK[0x498]) << 8))
        - 5220136
        - 2 * ((v1232 | (LODWORD(STACK[0x498]) << 8)) & 0x7FB058D9 ^ v1232 & 1);
  unsigned int v1234 = LODWORD(STACK[0x578]) - 5220136 - ((2 * LODWORD(STACK[0x578])) & 0xFF60B1B0);
  int v1235 = LODWORD(STACK[0x580]) + 483905654 - ((2 * LODWORD(STACK[0x580])) & 0x39AFA0EC);
  LODWORD(STACK[0x740]) = -75026750 - 2009212831 * (v1207 ^ (v1223 - 1336169103));
  LODWORD(STACK[0x744]) = -75026750 - 2009212831 * (v1207 ^ (v1229 + 735401730));
  unsigned int v1236 = LODWORD(STACK[0x610]) - ((2 * LODWORD(STACK[0x610]) - 420564468) & 0xED988058);
  int v1237 = LODWORD(STACK[0x58C]) - 1943496861 - ((2 * LODWORD(STACK[0x58C])) & 0x18512EC6);
  LODWORD(STACK[0x780]) = -75026750 - 2009212831 * (v1213 ^ v1225);
  LODWORD(STACK[0x784]) = -75026750 - 2009212831 * (v1213 ^ v1234);
  LODWORD(STACK[0x828]) = -75026750 - 2009212831 * (v1207 ^ v1237);
  int v1238 = v1231[529] ^ 0xD3;
  int v1239 = v1238 | (LODWORD(STACK[0x4B0]) << 8);
  LODWORD(STACK[0x6EC]) = 483905662;
  LODWORD(STACK[0x7A0]) = -75026750 - 2009212831 * (v1203 ^ 0x944C9F04 ^ v1228);
  LODWORD(STACK[0x7A4]) = -75026750 - 2009212831 * (v1203 ^ 0x944C9F04 ^ v1235);
  int v1240 = (v1231[35] ^ 0xD3 | (LODWORD(STACK[0x490]) << 8))
        + 483905654
        - 2 * ((v1231[35] ^ 0xD3 | (LODWORD(STACK[0x490]) << 8)) & 0x1CD7D077 ^ (v1231[35] ^ 0xD3) & 1);
  int v1241 = (v1231[765] ^ 0xD3 | (LODWORD(STACK[0x4B8]) << 8))
        - 1943496861
        - 2 * ((v1231[765] ^ 0xD3 | (LODWORD(STACK[0x4B8]) << 8)) & 0xC289777 ^ (v1231[765] ^ 0xD3) & 0x14);
  int v1242 = (v1231[518] ^ 0xD3 | (LODWORD(STACK[0x4AC]) << 8))
        - 5220136
        - 2 * ((v1231[518] ^ 0xD3 | (LODWORD(STACK[0x4AC]) << 8)) & 0x7FB058DF ^ (v1231[518] ^ 0xD3) & 7);
  int v1243 = (v1231[282] ^ 0xD3 | (LODWORD(STACK[0x4C4]) << 8))
        + 1993097260
        - 2 * ((v1231[282] ^ 0xD3 | (LODWORD(STACK[0x4C4]) << 8)) & 0x76CC403E ^ (v1231[282] ^ 0xD3) & 0x12);
  int v1244 = (v1231[753] ^ 0xD3 | (LODWORD(STACK[0x4A8]) << 8))
        + 1993097260
        - 2 * ((v1231[753] ^ 0xD3 | (LODWORD(STACK[0x4A8]) << 8)) & 0x76CC402D ^ (v1231[753] ^ 0xD3) & 1);
  int v1245 = v1183 ^ 0x6C5CFA61;
  LODWORD(STACK[0x82C]) = -75026750 - 2009212831 * (v1183 ^ 0x6C5CFA61 ^ (v1236 + 1782815026));
  int v1246 = v1241 ^ 0x565656 ^ v1207;
  int v1247 = (v1231[271] ^ 0xD3 | (LODWORD(STACK[0x4C8]) << 8))
        - 1943496861
        - 2 * ((v1231[271] ^ 0xD3 | (LODWORD(STACK[0x4C8]) << 8)) & 0xC289767 ^ (v1231[271] ^ 0xD3) & 4);
  int v1248 = (v1231[730] ^ 0xD3 | (LODWORD(STACK[0x48C]) << 8))
        + 1993097260
        - 2 * ((v1231[730] ^ 0xD3 | (LODWORD(STACK[0x48C]) << 8)) & 0x76CC402F ^ (v1231[730] ^ 0xD3) & 3);
  unsigned int v1249 = LODWORD(STACK[0x4A0]) + 1993097260 - ((2 * LODWORD(STACK[0x4A0])) & 0xED988058);
  int v1250 = LODWORD(STACK[0x4CC]) + 483905654 - ((2 * LODWORD(STACK[0x4CC])) & 0x39AFA0EC);
  int v1251 = ((v1231[24] ^ 0xD3 | (LODWORD(STACK[0x4D0]) << 8)) ^ 0x56560000)
        - 5220136
        - 2 * (((v1231[24] ^ 0xD3 | (LODWORD(STACK[0x4D0]) << 8)) ^ 0x56560000) & 0x7FB058DF ^ (v1231[24] ^ 0xD3) & 7);
  LODWORD(STACK[0x7A8]) = -75026750 - 2009212831 * (v1233 ^ 0x56000056 ^ v1213);
  LODWORD(STACK[0x7AC]) = -75026750 - 2009212831 * v1246;
  int v1252 = STACK[0x6F4];
  unsigned int v1253 = LODWORD(STACK[0x6F4]) ^ 0xBDABC0C5;
  LODWORD(STACK[0x6E0]) = v1253;
  int v1254 = STACK[0x710];
  int v1255 = LODWORD(STACK[0x710]) ^ 0x76FDDA30;
  LODWORD(STACK[0x7B0]) = -75026750 - 2009212831 * (v1253 ^ v1242);
  LODWORD(STACK[0x7B4]) = -75026750 - 2009212831 * (v1255 ^ v1247);
  unsigned int v1256 = v1252 ^ 0xEBFDC0C5 ^ (((v1231[495] ^ 0xD3 | (LODWORD(STACK[0x4BC]) << 8)) ^ 0x56560000)
                              - 5220136
                              - 2
                              * (((v1231[495] ^ 0xD3 | (LODWORD(STACK[0x4BC]) << 8)) ^ 0x56560000) & 0x7FB058DE ^ (v1231[495] ^ 0xD3) & 6));
  LODWORD(STACK[0x7E8]) = -75026750
                        - 2009212831 * (v1203 ^ 0x944C9F04 ^ (v1239 + 483905654 - 2 * (v1239 & 0x1CD7D07E ^ v1238 & 8)));
  LODWORD(STACK[0x7EC]) = -75026750 - 2009212831 * (v1245 ^ v1243);
  int v1257 = LODWORD(STACK[0x5A0]) - 1943496861 - ((2 * LODWORD(STACK[0x5A0])) & 0x18512EC6);
  int v1258 = (v1231[483] ^ 0xD3 | (LODWORD(STACK[0x4A4]) << 8))
        + 483905654
        - 2 * ((v1231[483] ^ 0xD3 | (LODWORD(STACK[0x4A4]) << 8)) & 0x1CD7D077 ^ (v1231[483] ^ 0xD3) & 1);
  LODWORD(STACK[0x7F4]) = -75026750 - 2009212831 * (v1245 ^ v1244);
  LODWORD(STACK[0x7F0]) = -75026750 - 2009212831 * (v1203 ^ 0x944C9F04 ^ v1240);
  int v1259 = (LODWORD(STACK[0x49C]) ^ 0xD3 | (LODWORD(STACK[0x598]) << 8))
        + 483905654
        - 2
        * ((LODWORD(STACK[0x49C]) ^ 0xD3 | (LODWORD(STACK[0x598]) << 8)) & 0x1CD7D077 ^ (LODWORD(STACK[0x49C]) ^ 0xD3) & 1);
  int v1260 = (v1231[719] ^ 0xD3 | (LODWORD(STACK[0x4B4]) << 8))
        - 1943496861
        - 2 * ((v1231[719] ^ 0xD3 | (LODWORD(STACK[0x4B4]) << 8)) & 0xC28977F ^ (v1231[719] ^ 0xD3) & 0x1C);
  LODWORD(STACK[0x7B8]) = -75026750 - 2009212831 * (v1252 ^ 0xEBFDC0C5 ^ v1251);
  LODWORD(STACK[0x7BC]) = -75026750 - 2009212831 * (v1255 ^ v1257);
  int v1261 = (v1231[236] ^ 0xD3 | (LODWORD(STACK[0x4C0]) << 8))
        + 1993097260
        - 2 * ((v1231[236] ^ 0xD3 | (LODWORD(STACK[0x4C0]) << 8)) & 0x76CC403D ^ (v1231[236] ^ 0xD3) & 0x11111111);
  LODWORD(STACK[0x7F8]) = -75026750 - 2009212831 * (v1203 ^ 0x944C9F04 ^ v1250);
  LODWORD(STACK[0x7FC]) = -75026750 - 2009212831 * (v1245 ^ v1249);
  int v1262 = (LODWORD(STACK[0x5AC]) | v1231[1] ^ 0xD3)
        - 5220136
        - 2 * ((LODWORD(STACK[0x5AC]) | v1231[1] ^ 0xD3) & 0x7FB058D9 ^ (v1231[1] ^ 0xD3) & 1);
  unsigned int v1263 = -2009212831
        * (((2 * (v1254 ^ LODWORD(STACK[0x5BC]))) & 0xC6487C04 ^ 0xC4081804)
         + (v1254 ^ LODWORD(STACK[0x5BC]) ^ 0x99F17351));
  LODWORD(STACK[0x7C0]) = -75026750 - 2009212831 * v1256;
  LODWORD(STACK[0x7C4]) = v1263;
  int v1264 = v1262 ^ 0x56005656 ^ v1213;
  int v1265 = ((v1231[472] ^ 0xD3 | (LODWORD(STACK[0x4F4]) << 8))
         - 5220136
         - 2 * ((v1231[472] ^ 0xD3 | (LODWORD(STACK[0x4F4]) << 8)) & 0x7FB058DF ^ (v1231[472] ^ 0xD3) & 7)) ^ 0x56560056 ^ v1213;
  int v1266 = (v1231[225] ^ 0xD3 | (LODWORD(STACK[0x4E4]) << 8))
        - 1943496861
        - 2 * ((v1231[225] ^ 0xD3 | (LODWORD(STACK[0x4E4]) << 8)) & 0xC289777 ^ (v1231[225] ^ 0xD3) & 0x14);
  int v1267 = (v1231[707] ^ 0xD3 | (LODWORD(STACK[0x4E8]) << 8))
        + 1993097260
        - 2 * ((v1231[707] ^ 0xD3 | (LODWORD(STACK[0x4E8]) << 8)) & 0x76CC403D ^ (v1231[707] ^ 0xD3) & 0x11111111);
  int v1268 = LODWORD(STACK[0x700]) ^ 0xECD;
  LODWORD(STACK[0x800]) = -75026750 - 2009212831 * (v1203 ^ 0x944C9F04 ^ v1259);
  int v1269 = v1231[954] ^ 0xD3;
  int v1270 = v1269 | (LODWORD(STACK[0x5B8]) << 8);
  LODWORD(STACK[0x804]) = -75026750 - 2009212831 * (v1245 ^ v1248);
  int v1271 = v1231[460] ^ 0xD3;
  int v1272 = v1271 | (LODWORD(STACK[0x590]) << 8);
  LODWORD(STACK[0x808]) = -75026750 - 2009212831 * (v1203 ^ 0x944C9F04 ^ v1258);
  int v1273 = v1231[943] ^ 0xD3;
  int v1274 = v1273 | (LODWORD(STACK[0x5B4]) << 8);
  LODWORD(STACK[0x80C]) = -75026750 - 2009212831 * (v1245 ^ v1261);
  int v1275 = v1231[696] ^ 0xD3;
  int v1276 = v1275 | (LODWORD(STACK[0x5A8]) << 8);
  int v1277 = v1274 - 5220136 - 2 * (v1274 & 0x7FB058DD ^ v1273 & 5);
  int v1278 = v1231[213] ^ 0xD3;
  int v1279 = -75026750 - 2009212831 * LODWORD(STACK[0x6F0]);
  LODWORD(STACK[0x760]) = STACK[0x708];
  int v1280 = v1231[931] ^ 0xD3;
  int v1281 = v1280 | (LODWORD(STACK[0x4D8]) << 8);
  int v1282 = LODWORD(STACK[0x640]) ^ 0xD3;
  int v1283 = v1282 | (LODWORD(STACK[0x5A4]) << 8);
  LODWORD(v1231) = v1231[684] ^ 0xD3;
  LODWORD(STACK[0x764]) = v1279;
  int v1284 = -75026750 - 2009212831 * v1265;
  LODWORD(STACK[0x7CC]) = -75026750 - 2009212831 * (v1255 ^ v1260);
  LODWORD(STACK[0x7C8]) = -75026750 - 2009212831 * v1264;
  unsigned int v1285 = ((v1279 & 0x883DD861 ^ 0x883DD861) + (v1279 & 0x883DD861))
        * ((v1203 ^ 0x944C9F04 ^ (v1270 + 483905654 - 2 * (v1270 & 0x1CD7D077 ^ v1269 & 1))) + 1663319554);
  unsigned int v1286 = v1203 ^ 0x944C9F04 ^ (v1272 + 483905654 - 2 * (v1272 & STACK[0x6EC] ^ v1271 & 8));
  int v1287 = v1276 & 0xC28976B ^ v1275 & 8;
  unsigned int v1288 = v1203 ^ 0x944C9F04 ^ (v1281 + 483905654 - 2 * (v1281 & STACK[0x6EC] ^ v1280 & 8));
  int v1289 = STACK[0x6E0];
  int v1290 = v1278 | (LODWORD(STACK[0x5C0]) << 8);
  LODWORD(STACK[0x810]) = v1285;
  LODWORD(STACK[0x814]) = -75026750 - 2009212831 * (v1245 ^ v1267);
  LODWORD(STACK[0x7D0]) = v1284;
  LODWORD(STACK[0x7D4]) = -75026750 - 2009212831 * (v1255 ^ v1266);
  unint64_t v1291 = STACK[0x6F8];
  LODWORD(STACK[0x818]) = -75026750 - 2009212831 * v1286;
  LODWORD(STACK[0x81C]) = -75026750
                        - 2009212831 * (v1245 ^ (v1290 + 1993097260 - 2 * (v1290 & 0x76CC403D ^ v1278 & 0x11111111)));
  LODWORD(v1057) = LODWORD(STACK[0x5B0]) ^ 0x496A2EFA ^ LODWORD(STACK[0x710]);
  LODWORD(STACK[0x7D8]) = -75026750 - 2009212831 * (v1289 ^ v1277);
  LODWORD(STACK[0x7DC]) = -75026750 - 2009212831 * (v1255 ^ (v1276 - 1943496861 - 2 * v1287));
  unsigned int v1292 = v1231 | (LODWORD(STACK[0x5C4]) << 8);
  LODWORD(STACK[0x7E4]) = -75026750 - 2009212831 * v1057;
  LODWORD(STACK[0x7E0]) = -75026750 - 2009212831 * (v1289 ^ (v1283 - 5220136 - 2 * (v1283 & 0x7FB058DB ^ v1282 & 3)));
  LODWORD(STACK[0x820]) = -75026750 - 2009212831 * v1288;
  LODWORD(STACK[0x824]) = -75026750 - 2009212831 * (v1245 ^ (v1292 + 1993097260 - ((2 * v1292) & 0xED988058)));
  STACK[0x720] -= 2112;
  return (*(uint64_t (**)(void))(v1291
                              + 8
                              * (((((751 * (v1268 ^ 0xCA9) - 1326) | 0x14A) ^ 0x1D97) * (*(void *)STACK[0x380] == 0)) ^ v1268)))();
}

uint64_t sub_100111BD4@<X0>(int a1@<W8>)
{
  LODWORD(STACK[0x5E4]) = -947918198;
  LODWORD(STACK[0x5E0]) = 1080060554;
  return sub_10018EC98((uint64_t)&off_100520A90, 0xE19B3C29, STACK[0x6F8], a1 ^ 0xD51u);
}

uint64_t sub_100111DEC()
{
  BOOL v4 = (*(uint64_t (**)(void))(v3 + 8 * (v2 ^ 0x1E25)))((v0
                                                                     - v1
                                                                     - ((((v0 - v1) << (((v2 - 30) & 0x1F) - 26))
                                                                       + ((v2 - 1604427294) & 0x5FA19BCE ^ 0xF814868C)) & 0xC3367852)
                                                                     - 576355380) ^ 0xE19B3C29) == 0;
  return (*(uint64_t (**)(void))(STACK[0x258] + 8 * (v2 ^ (2 * v4))))();
}

void sub_100111E98(uint64_t a1)
{
  int v1 = 31090337 * ((((2 * a1) | 0xACB21054) - a1 - 1448675370) ^ 0x91D86863);
  int v2 = *(_DWORD *)(a1 + 16) ^ v1;
  __asm { BRAA            X13, X17 }
}

uint64_t sub_100111F54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, int a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, _DWORD *a19, uint64_t a20)
{
  int v24 = 375636451
      * (((((v23 - 144) ^ 0x41B64212 | 0xA6409DE4) ^ 0xFFFFFFFE) - ((v23 - 144) ^ 0x22000480 | 0x59BF621B)) ^ 0xCF77E3E1);
  *(void *)(v23 - 144) = v21;
  *(void *)(v23 - 120) = a20;
  *(_DWORD *)(v23 - 132) = v24 + v22 - 1938;
  *(_DWORD *)(v23 - 128) = (v20 + 751 * (v22 ^ 0xFFA) - 1242348791) ^ v24;
  return sub_10015D8C8(v22 + 580, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19);
}

uint64_t sub_100111FE8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((955 * (a1 + 1 == v3 + 16)) ^ v1)))();
}

uint64_t sub_1001120C4@<X0>(uint64_t a1@<X8>)
{
  STACK[0x8E0] = *(void *)(v1 + 8 * a1);
  return sub_100162654();
}

uint64_t sub_1001120E8()
{
  unint64_t v2 = STACK[0x810];
  STACK[0x850] = *(void *)(v1 + 8 * (v0 - 2488));
  return sub_10013A090(v2);
}

void sub_10011210C()
{
  uint64_t v3 = __chkstk_darwin();
  int v0 = *(_DWORD *)(v3 + 4) ^ (1314530549 * ((-504253033 - (v3 | 0xE1F1B597) + (v3 | 0x1E0E4A68)) ^ 0xAF07CCA6));
  uint64_t v1 = (char *)*(&off_100520A90 + v0 - 2490) - 8;
  (*(void (**)(unsigned char *, void, uint64_t))&v1[8 * (v0 ^ 0x1B83)])(v4, 0, 4097);
  uint64_t v2 = *(void *)&v1[8
                    * ((((*(uint64_t (**)(uint64_t))&v1[8 * (v0 ^ 0x1BF6)])(8) != 0)
                      * ((v0 - 267291115) & 0xFEE8FBF ^ 0xFA9)) ^ v0)];
  __asm { BRAA            X8, X17 }
}

uint64_t sub_100112344@<X0>(uint64_t a1@<X0>, int a2@<W4>, unsigned int *a3@<X8>)
{
  int v5 = (a2 - 1389) ^ 0xB2C;
  *uint64_t v8 = a1;
  *a3 = (a2 - 1389) ^ 0xDEC54D15 ^ v10;
  int v6 = 2 * ((a2 - 1389) ^ 0x6E0);
  uint64_t v13 = v9;
  unsigned int v14 = v5 + 366490169 * (((&v12 | 0xABD690AE) - (&v12 & 0xABD690AE)) ^ 0xBD78C6EA) + 1142;
  (*(void (**)(uint64_t *))(v3 + 8 * (v5 + 1310)))(&v12);
  unsigned int v14 = v6
      + 366490169 * ((((2 * &v12) | 0x9E1C320A) - &v12 + 821159675) ^ 0xD9A04F41)
      + 4012;
  uint64_t v13 = v11;
  (*(void (**)(uint64_t *))(v3 + 8 * (v6 ^ 0x13AC)))(&v12);
  return (v4 - 847203058);
}

uint64_t sub_100112488(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unsigned int a13, uint64_t a14, unsigned int a15, uint64_t a16, int a17)
{
  unsigned int v23 = 366490169
      * (((&a13 | 0x59448AA) - &a13 + (&a13 & 0xFA6BB750)) ^ 0x133A1EEE);
  a15 = v23 + 3254;
  a13 = (v19 ^ 0x379FC797) + ((2 * v19) & 0x6F3F8F2E) - 587334790 + v23;
  a14 = a11;
  (*(void (**)(unsigned int *))(v20 + 37576))(&a13);
  unsigned int v24 = ((2 * (&a13 & 0x2930F0) - &a13 - 2699508) ^ 0x3857AF45) * v22;
  a15 = v24 + 4063;
  a16 = a11;
  a17 = (v18 ^ 0x3736EFE9) - v24 + ((2 * v18) & 0x6E6DDFD2) - 352456065;
  a14 = v17;
  uint64_t v25 = (*(uint64_t (**)(unsigned int *))(v20 + 37760))(&a13);
  return (*(uint64_t (**)(uint64_t))(v20 + 8 * ((402 * (a13 == v21)) ^ 0x878u)))(v25);
}

uint64_t sub_1001125E4@<X0>(char a1@<W0>, unsigned __int8 a2@<W1>, int a3@<W2>, int a4@<W3>, int a5@<W8>, int8x16_t a6@<Q0>, int8x8_t a7@<D1>, int8x8_t a8@<D2>, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42)
{
  int v54 = a4 - 8;
  uint64_t v55 = (a3 + v54 + 8);
  v57.val[0].i64[0] = ((_BYTE)a3 + (_BYTE)v54 + 8) & 0xF;
  v57.val[0].i64[1] = (v52 + (_BYTE)v54 + 8) & 0xF;
  v57.val[1].i64[0] = (v45 + (_BYTE)v54 + (a2 ^ 0xFD) + 8) & 0xF;
  v57.val[1].i64[1] = (v51 + (_BYTE)v54 + 8) & 0xF;
  v57.val[2].i64[0] = (v50 + (_BYTE)v54 + 8) & 0xF;
  v57.val[2].i64[1] = (v49 + (_BYTE)v54 + 8) & 0xF;
  v57.val[3].i64[0] = (a1 + (_BYTE)v54 + 8) & 0xF;
  v57.val[3].i64[1] = (v46 + (_BYTE)v54 + 8) & 0xF;
  *(int8x8_t *)(*(void *)(v53 - 136) + v55) = vrev64_s8(veor_s8(veor_s8(vrev64_s8(veor_s8(veor_s8(*(int8x8_t *)(v47 + v55), *(int8x8_t *)(v43 + (v55 & 0xF) - 7)), veor_s8(*(int8x8_t *)(v42 + (v55 & 0xF) - 7), *(int8x8_t *)(v44 + (v55 & 0xF) - 7)))), a8), vmul_s8((int8x8_t)*(_OWORD *)&vqtbl4q_s8(v57, a6), a7)));
  return (*(uint64_t (**)(void))(a42 + 8 * ((1896 * (v48 == v54)) ^ a5)))();
}

uint64_t sub_1001125EC(unsigned int a1)
{
  LODWORD(STACK[0x310]) = v2;
  return (*(uint64_t (**)(void))(v3 + 8 * ((78 * (a1 > 3)) ^ v1)))();
}

uint64_t sub_100112624@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, unsigned int a4, uint64_t a5, int a6, uint64_t a7, unsigned int a8)
{
  unsigned int v11 = 1401278017 * ((((2 * &a4) | 0x8C0C47DC) - &a4 - 1174807534) ^ 0x42255509);
  a7 = v8;
  a5 = a1;
  a4 = 1694416713 - v11;
  a8 = v11 + 96669482;
  a6 = (v10 - 2628) ^ v11;
  uint64_t v12 = (*(uint64_t (**)(unsigned int *))(v9 + 8 * (v10 ^ 0x1D8D)))(&a4);
  return (*(uint64_t (**)(uint64_t))(v9
                                            + 8
                                            * (((*(_DWORD *)(v8 - 0x69166E42B329955BLL) == 847203058)
                                              * ((17 * (((v10 - 2800) | 0x181) ^ 0x572)) ^ 0x100F)) ^ v10)))(v12);
}

uint64_t sub_100112704(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, void))(v10
                                                                               + 8
                                                                               * (((((((a8 - 2804) | 0x200) - 572) & v9) == 0)
                                                                                 * ((1021 * (a8 ^ 0xB3A)) ^ 0x4F)) ^ a8)))(a1, a2, a3, a4, (v8 - a4));
}

uint64_t sub_100112748(uint64_t a1, uint64_t a2, unsigned int a3, uint64_t a4, int a5)
{
  int v10 = v7 + 1;
  unsigned int v11 = STACK[0x58C];
  unsigned int v12 = -1302629152 - v10 + 8 * v10;
  uint64_t v13 = v12 + 462 - ((((v12 + 462) * (unint64_t)a3) >> 32) >> 9) * a5;
  uint64_t v14 = v12 - (((v12 * (unint64_t)a3) >> 32) >> 9) * a5;
  BOOL v15 = LODWORD(STACK[0x58C]) < LODWORD(STACK[0x574]);
  *(unsigned char *)(v9 + v14) ^= *(unsigned char *)(STACK[0x580] + (v5 + v10));
  int v16 = 135 * (((_BYTE)v10 + 6) & 0xF ^ 0xE) + 3780;
  LOBYTE(v16) = *(unsigned char *)(STACK[0x578]
                         + (unsigned __int16)(v16 - 944 * ((unsigned __int16)((8887 * v16) >> 16) >> 7)));
  *(unsigned char *)(v9 + v13) ^= 0xFA ^ (119 * (v16 ^ 0xC0) - ((46 * v16) & 0x26) + 19);
  BOOL v17 = v10 - 1617079444 < v11;
  if (v15 != (v10 - 1617079444) < 0xF3D96A85) {
    BOOL v17 = v15;
  }
  return (*(uint64_t (**)(void))(v8 + 8 * ((1726 * v17) ^ (v6 + 873))))();
}

uint64_t sub_100112750()
{
  return (*(uint64_t (**)(void))(v4 + 8 * ((3687 * (*(_DWORD *)(v1 + 4 * v2) == v3)) ^ v0)))();
}

uint64_t sub_100112780(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  unsigned int v11 = v7 - 1909442540;
  if (v11 <= 0x40) {
    unsigned int v11 = 64;
  }
  return (*(uint64_t (**)(void))(v10 + 8 * ((127 * (a7 - v8 - v9 + v11 < 0xF)) ^ 0x10B3u)))();
}

uint64_t sub_100112800()
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * (v1 ^ (((v0 & (2 * (*(unsigned __int8 *)(v2 + 3) - 134)))
                                      + (v1 ^ 0x64A ^ v3 ^ (*(unsigned __int8 *)(v2 + 3) - 134)) == v4) << 8))))();
}

uint64_t sub_100112838(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, uint64_t a11, uint64_t a12, int a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  uint64_t v29 = a25;
  *(_DWORD *)(v28 - 132) = (a10 + 953) ^ (1314530549
                                        * ((((2 * (v28 - 136)) | 0xDEEB98B0) - (v28 - 136) + 277492648) ^ 0x5E7C4A96));
  *(void *)(v25 + 8) = v29;
  *(void *)(v25 + 16) = &a14;
  (*(void (**)(uint64_t))(v27 + 8 * ((a10 + 13) ^ 0x1762)))(v28 - 136);
  uint64_t v30 = a25;
  *(_DWORD *)(v28 - 120) = a10
                         + 13
                         - 476588053 * ((2 * ((v28 - 136) & 0x46AC5A18) - (v28 - 136) - 1185700379) ^ 0x4AEA1A6)
                         + 1283;
  *(void *)(v25 + 8) = v30;
  uint64_t v31 = (*(uint64_t (**)(uint64_t))(v27 + 8 * ((a10 + 13) ^ 0x1703)))(v28 - 136);
  return (*(uint64_t (**)(uint64_t))(v27
                                            + 8
                                            * (int)(((*(_DWORD *)(v28 - 136) == v26)
                                                   * (((a10 + 1046328758) & 0xF1B777BF) - 806692732)) ^ (a10 + 13))))(v31);
}

uint64_t sub_100112954(uint64_t a1)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((30 * (v1 - a1 < (unint64_t)((v2 - 52441504) & 0x6FB56EFB) - 1821721771)) ^ (v2 - 12))))();
}

uint64_t sub_1001129E4@<X0>(uint64_t a1@<X1>, int a2@<W8>)
{
  int v4 = a2 + 1584;
  (*(void (**)(void, uint64_t, void))(v2 + 8 * (a2 + 3824)))(*v7, a1, v8);
  *(_DWORD *)(v3 - 192) = 1805051420
                        - 1697562443 * ((2 * ((v3 - 192) & 0x88A3A30) - (v3 - 192) - 143276599) ^ 0x20E5FD4D)
                        + v4;
  (*(void (**)(uint64_t))(v2 + 8 * (v4 ^ 0x1B03)))(v3 - 192);
  uint64_t result = v6;
  *(_DWORD *)(v6 + 28) = v9;
  return result;
}

uint64_t sub_100112AB8()
{
  BOOL v5 = v3 + v2 - 2 < ((v1 - 2233) ^ (v0 + 2883));
  return (*(uint64_t (**)(void))(v4 + 8 * ((4 * v5) | (16 * v5) | v1)))();
}

_DWORD *sub_100112AF0@<X0>(_DWORD *result@<X0>, _DWORD *a2@<X8>)
{
  *a2 = v2;
  *uint64_t result = 847160871;
  return result;
}

uint64_t sub_1001177AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(void))(v8 + 8 * ((35 * (((v7 < 0x20) ^ (a7 - 33)) & 1)) ^ a7)))();
}

uint64_t sub_1001177E8@<X0>(uint64_t a1@<X1>, uint64_t a2@<X6>, int a3@<W8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,int a38,int a39,int a40)
{
  unsigned int v50 = v44
      + (((v43 & 0xF ^ 0x3080109) + (v43 & 7 ^ 0xC437216) - ((v43 & 0xF ^ 0x3080109) & 0x1000007)) ^ 0xE4B7314) * v46;
  uint64_t v51 = v50 - (((v50 * (unint64_t)v45) >> 32) >> 4) * v47;
  char v52 = v49[473];
  v49[473] = v49[v51];
  v49[v51] = v52;
  unsigned int v53 = v44
      + (((v41 - 849462029) % 0xFu + 784048278 - ((2 * ((v41 - 849462029) % 0xFu)) & 0xC)) ^ 0x2EBBA096) * v46
      + 662;
  uint64_t v54 = v53 - (((v53 * (unint64_t)v45) >> 32) >> 4) * v47;
  char v55 = v49[170];
  unsigned int v56 = ((2 * ((a3 ^ 0xED980945) + (v43 ^ 0x9FCCC53A) + 1)) & 0x7DEFDF42)
      + (((a3 ^ 0xED980945) + (v43 ^ 0x9FCCC53A) + 1) ^ 0xBEF7EFA1);
  v49[170] = v49[v54];
  v49[v54] = v55;
  LODWORD(v51) = v44
               + (((v40 - 1135508359) % 0xEu + 1829603723 + (~(2 * ((v40 - 1135508359) % 0xEu)) | 0xFFFFFFE9) + 1) ^ 0x6D0D898B)
               * v46
               + 1324;
  uint64_t v57 = v51 - (((v51 * (unint64_t)v45) >> 32) >> 4) * v47;
  char v58 = v49[832];
  v49[832] = v49[v57];
  v49[v57] = v58;
  LODWORD(v54) = v40 - ((2 * v40 + 52740186) & 0x9D4ADDAA) - 801648894;
  unsigned int v59 = ((((a3 ^ 0x1267F6BAu) % 0xD) ^ 0x96FFE19F) + 2 * ((a3 ^ 0x1267F6BAu) % 0xD)) * v46 - 2041276764;
  uint64_t v60 = v59 - (((v59 * (unint64_t)v45) >> 32) >> 4) * v47;
  char v61 = v49[529];
  LODWORD(v57) = v56 + 1091047519;
  int v62 = v56 + 1091047519 + (v54 ^ 0x4EA56ED5) - 413270396 - ((2 * (v56 + 1091047519 + (v54 ^ 0x4EA56ED5))) & 0xCEBBFD08);
  int v63 = v54 ^ a3;
  LODWORD(v54) = v56 + v41;
  unsigned int v64 = ((2 * v63) & 0x2FED9FFA ^ 0x2F211B28) + (v63 ^ 0xA06E4269);
  v49[529] = v49[v60];
  v49[v60] = v61;
  LODWORD(v60) = (((2 * ((v56 - v64 + 1493098588) % 0xC)) & 0x1A) + (((v56 - v64 + 1493098588) % 0xC) ^ 0xEFFDFD7D))
               * v46
               + 1698203942;
  uint64_t v65 = v60 - (((v60 * (unint64_t)v45) >> 32) >> 4) * v47;
  char v66 = v49[226];
  v49[226] = v49[v65];
  unsigned int v67 = v63 ^ 0xEB5A15FB ^ (v54 - ((2 * v54 + 483170980) & 0xB98530DE) + 1797842369);
  v49[v65] = v66;
  uint64_t v68 = (v44
                     + v67 % 0xB * v46
                     + 3310
                     - (((v44 + v67 % 0xB * v46 + 3310) * (unint64_t)v48) >> 32) * v47);
  char v69 = v49[888];
  v49[888] = v49[v68];
  v49[v68] = v69;
  LODWORD(v68) = v44 + 662 * ((v62 ^ 0xE75DFE84) % 0xA) + 3972;
  uint64_t v70 = (v68 - 965 * ((4450744 * (unint64_t)v68) >> 32));
  char v71 = v49[585];
  unsigned int v72 = ((2 * (v67 + (v62 ^ 0xE75DFE84))) & 0x3F5FFFF6) + ((v67 + (v62 ^ 0xE75DFE84)) ^ 0x1FAFFFFB);
  v49[585] = v49[v70];
  v49[v70] = v71;
  unsigned int v73 = v56 - ((2 * v56 - 777589862) & 0x900B6F26) + 819539328;
  uint64_t v74 = (662 * ((v64 - 402051069) % 9)
                     + 397862
                     - 965 * ((4450744 * (unint64_t)(662 * ((v64 - 402051069) % 9) + 397862)) >> 32));
  LOBYTE(v65) = v49[282];
  v49[282] = v49[v74];
  int v75 = ((v64 - v72 + 129576958) ^ v57) - 1582596642 - ((2 * ((v64 - v72 + 129576958) ^ v57)) & 0x4356FBBC);
  v49[v74] = v65;
  LODWORD(v57) = ((2 * v73) & 0xA ^ 2) + (v73 & 7 ^ 0x3BDFD65E);
  char v76 = v49[944];
  LODWORD(v74) = (v57 - 1004524216) * (v57 - 1004524216) - 109561 + (1004524547 - v57) * (v57 - 1004524547);
  LOBYTE(v65) = v49[v74 - 965 * (((v74 * (unint64_t)v45) >> 32) >> 4)];
  LODWORD(v74) = v75 ^ 0x5E548221;
  LODWORD(v70) = (v75 ^ 0x5E548221) + v72;
  int v77 = (2 * v70 + 1084227596) & 0x43A42780;
  LODWORD(v70) = v70 - 2111695930;
  unsigned int v78 = 662 * v57 + 724680766;
  v49[944] = v65;
  LODWORD(v57) = (v70 - v77) ^ 0xA1D213C0;
  LODWORD(v65) = v57 % 7 + 638262149 - ((2 * (v57 % 7)) & 0xA);
  v49[v78 - 965 * (((v78 * (unint64_t)v45) >> 32) >> 4)] = v76;
  unsigned int v79 = ((2 * ((v75 ^ 0xA1AB7DDE) + (v62 ^ 0xB21ED25F))) & 0x8FBFFE7A)
      + (((v75 ^ 0xA1AB7DDE) + (v62 ^ 0xB21ED25F)) ^ 0x47DFFF3D);
  char v80 = v49[641];
  LODWORD(v65) = v44 + 662 * ((~(2 * v65) & 2) + (v65 ^ 0x260B1B8C));
  uint64_t v81 = v65 - 965 * (((v65 * (unint64_t)v45) >> 32) >> 4);
  v49[641] = v49[v81];
  v49[v81] = v80;
  LOBYTE(v81) = v49[338];
  uint64_t v82 = (662 * ((v79 - 1205862205) % 6)
                     + 399848
                     - 965 * ((4450744 * (unint64_t)(662 * ((v79 - 1205862205) % 6) + 399848)) >> 32));
  v49[338] = v49[v82];
  v49[v82] = v81;
  LODWORD(v81) = ((v75 ^ 0xA1AB7DDE) % 5 - 1937268449 - 2 * ((v75 ^ 0xA1AB7DDE) % 5)) ^ 0x8C87A11F;
  int v83 = 662 * v81;
  LODWORD(v81) = ((662 * v81) ^ 0x3DB97EEF) + ((1324 * v81) & 0x2FDDC);
  LOBYTE(v82) = v49[35];
  v49[35] = v49[v83 + 400510 - 965 * ((((v83 + 400510) * (unint64_t)v45) >> 32) >> 4)];
  v49[((int)v81 - 1035166321)
    % ((((v81 + 302479) & a40) + ((1035166319 - v81) & 0xDD78DF12)) ^ 0xDD7CDCD7)] = v82;
  LOBYTE(v75) = (v79 - 105) ^ v75;
  unsigned int v84 = 662 * (((v75 ^ 1) - (v70 ^ v73)) & 3) + 401172;
  uint64_t v85 = (v84 - 965 * ((4450744 * (unint64_t)v84) >> 32));
  int v86 = v74 + 1205862205 - v79;
  LOBYTE(v74) = v49[697];
  v49[697] = v49[v85];
  v49[v85] = v74;
  LOBYTE(v74) = v49[394];
  LODWORD(v85) = v44 + 662 * ((v85 & 0xD) + (v86 + (int)v57 + 1) % 3u + (v85 & 0xD ^ 0xD));
  uint64_t v87 = (v85 - 965 * ((4450744 * (unint64_t)v85) >> 32));
  v49[394] = v49[v87];
  int v88 = ((v75 & 1 ^ 0x361B513) + 2 * (v75 & 1) + 1486671075) ^ a39;
  v49[v87] = v74;
  LODWORD(v87) = 662 * ((-1948456130 - (v88 | 0x8BDCEB3E) + (v88 | 0x742314C1)) ^ 0x22660EE1) + 402496;
  uint64_t v89 = v87 - 965 * (((v87 * (unint64_t)v45) >> 32) >> 4);
  LOBYTE(v75) = v49[91];
  v49[91] = v49[v89];
  v49[v89] = v75;
  LODWORD(v89) = v42 & 0xAF37BFFF;
  LODWORD(v74) = 662 * (((((v42 & 0xAF37BFFF) + 7) ^ 0xE9) + 1994624181) >> 4) + 439568;
  LOBYTE(v74) = (16 * v49[(v74 - 965 * ((4450744 * (unint64_t)v74) >> 32))]) ^ 0x30;
  unsigned int v90 = 673 * (v49[493] ^ 0x5F ^ (v74 - ((2 * v74) & 0xA0) - 45)) + 359382;
  unsigned int v91 = v44
      + 662
      * (*(unsigned __int8 *)(*(void *)(a1 + 8 * (int)(v89 ^ 0x312))
                            + (v90 - 1184 * ((3627507 * (unint64_t)v90) >> 32))) ^ 0x17);
  v49[466048 - 965 * (((466048 * (unint64_t)v45) >> 32) >> 4)] = v49[(v91 - 965 * ((4450744 * (unint64_t)v91) >> 32))];
  return (*(uint64_t (**)(uint64_t))(a2 + 8 * (int)v89))(1408);
}

uint64_t sub_100118108@<X0>(uint64_t a1@<X8>)
{
  *(unsigned char *)(a1 + (v6 + v4)) = *(unsigned char *)(v3 + (v6 + v4));
  return (*(uint64_t (**)(void))(v1 + 8 * (((v6 - 1 == v2) * v5) ^ v7)))(0);
}

uint64_t sub_100118138(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(void))(v10 + 8 * (((v8 == a8 + v9 + 672214730 - 1327) * ((v9 + 2687) ^ 0xA4F)) ^ (v9 + 2775))))();
}

uint64_t sub_100118184(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, void))(v5
                                                                               + 8
                                                                               * (((v4 + 3021)
                                                                                 * (*(_DWORD *)(v6 - 136) == *(_DWORD *)(v6 - 144))) ^ v4)))(a1, a2, a3, a4, (v4 - 79));
}

uint64_t sub_1001181B4(uint64_t a1, uint64_t a2, int a3, unsigned int a4)
{
  return (*(uint64_t (**)(uint64_t, void))(v4 + 8 * ((164 * (*(_DWORD *)(*v6 + 4 * a4) != v5)) ^ a3)))(a1, (a3 - 793));
}

uint64_t sub_1001181E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6, int a7)
{
  return (*(uint64_t (**)(void))(v8 + 8 * ((((((v7 - 2734) | a5) ^ a6) + v9 == 32) * ((v7 - 2734) ^ a7)) ^ v7)))();
}

uint64_t sub_100118218()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (int)(((((((v1 ^ 2) + 1196844190) & 0xB8A99BE9) + 867) ^ 0x646) * (v0 == 0)) | v1 ^ 2)))();
}

uint64_t sub_100118264()
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((((17 * (v2 ^ 0x11D9)) ^ 0xFA1) * (v0 != v1)) ^ v2)))();
}

uint64_t sub_100118294(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(void))(v7 + 8
                                   * ((89 * ((((((a6 + 65) | 0x218) + 2051) ^ (v6 == a4)) & 1) == 0)) ^ (a6 + 529))))();
}

uint64_t sub_1001182D4@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((((42 * (a1 ^ 0x283)) ^ 0x1018) * (a3 == 0)) ^ a1)))();
}

uint64_t sub_10011833C@<X0>(uint64_t a1@<X4>, int a2@<W8>)
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((v2 + a2 - 1464) ^ (507 * (a1 != 0)))))();
}

uint64_t sub_100118364(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  int v9 = (v7 - 1932004840) & 0x73280FFF;
  int v10 = a7 - LODWORD(STACK[0x508]) + v8;
  LODWORD(STACK[0x6EC]) = v9;
  unsigned int v11 = *(uint64_t (**)(void))(a1 + 8 * (((2 * (v10 == v9 - 637431767)) | (16 * (v10 == v9 - 637431767))) ^ v7));
  LODWORD(STACK[0x708]) = a2;
  return v11();
}

uint64_t sub_1001183FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,void *a22,unint64_t a23,uint64_t a24,_DWORD *a25)
{
  *a25 = 0;
  unsigned int v27 = (((v25 >> (a12 ^ 0x35)) ^ v25) << 7) & 0x9D2C5680 ^ (v25 >> (a12 ^ 0x35)) ^ v25;
  *(_DWORD *)(*a22 + a23) ^= (v27 << 15) & 0xEFC60000 ^ v27 ^ (((v27 << 15) & 0xEFC60000 ^ v27) >> 18);
  return (*(uint64_t (**)(void))(v26 + 8 * ((55 * (a23 < 0x1FC)) ^ 0xA13)))();
}

uint64_t sub_100118404@<X0>(uint64_t a1@<X0>, int a2@<W3>, int a3@<W4>, int a4@<W8>)
{
  uint64_t v8 = a2 + v6 + ((a3 + v4) | 0x680u);
  *(unsigned char *)(a1 + v8) = *(unsigned char *)(v5 + v8) ^ 0x60;
  return (*(uint64_t (**)(void))(v7 + 8 * ((61 * (a2 - 1 == a4)) ^ (a3 - 1657769895))))();
}

uint64_t sub_100118458()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((((v0 - 535200876) & 0x1FE67F7B ^ 0xDF0) * ((v3 + v1) > 0x7FFFFFFD)) ^ v0)))();
}

uint64_t sub_1001184AC(int a1, int a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  int v24 = 7 * (((_BYTE)a3 + 8) & 0xF) + v8;
  int v25 = 7 * ((v9 - 710) & ((unsigned __int16)((a3 + 2744) & 0xFFF0) >> 4)) + v8;
  LOBYTE(v25) = (16
               * *(unsigned char *)(v17
                          + (unsigned __int16)(v25 - ((unsigned __int16)((v25 * v18) >> 16) >> 9) * v19))) ^ 0x30;
  unsigned int v26 = (*(unsigned __int8 *)(v17
                            + (unsigned __int16)(v24 - ((unsigned __int16)((v24 * v21) >> 16) >> 7) * v19)) ^ v11 ^ (v25 + (v10 | ~(2 * v25)) + 20))
      * v12
      + 80595;
  LOBYTE(v26) = *((unsigned char *)*(&off_100520A90 + a1) + (v26 - ((v26 * (unint64_t)v13) >> 32) * v14));
  int v27 = 7
      * (v26 ^ v15 ^ (((v26 ^ a8) & 0x80 | ((v26 ^ a8) >> 3) ^ ((v26 ^ a8) >> 1))
                                     - 64))
      + v16;
  *(unsigned char *)(v17
           + (unsigned __int16)(7 * a3
                              + v22
                              - ((unsigned __int16)(((unsigned __int16)(7 * a3 + v22) * v18) >> 16) >> 9)
                              * v19)) = *(unsigned char *)(v17
                                                 + (unsigned __int16)(v27
                                                                    - ((unsigned __int16)((v27 * v21) >> 16) >> 7)
                                                                    * v19));
  return (*(uint64_t (**)(void))(STACK[0x6F8] + 8 * (((a3 != 1409074759) * a2) ^ v20)))();
}

uint64_t sub_1001184BC()
{
  return 4294925278;
}

uint64_t sub_1001184C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, unint64_t *a17, int a18, uint64_t a19, unsigned int a20,int a21,int a22)
{
  unsigned int v24 = 1314530549 * ((((2 * &a17) | 0x64768DA) - &a17 - 52671597) ^ 0xB22A32A3);
  a17 = &STACK[0x70766EB78D2F3F20];
  a19 = a12;
  a22 = v24 ^ 0x4EA001FB;
  a20 = 1959011336 - v24;
  a18 = (v22 + 1780980179) ^ v24;
  uint64_t v25 = (*(uint64_t (**)(unint64_t **))(v23 + 8 * (v22 ^ 0x11D0)))(&a17);
  return (*(uint64_t (**)(uint64_t))(v23
                                            + 8
                                            * (((a21 == ((v22 + 29715065) & 0x75F) + 847201685)
                                              * (((v22 + 1679445099) & 0x17FD) + 744)) ^ v22)))(v25);
}

uint64_t sub_1001185C8(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, _DWORD *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17, int a18)
{
  *a4 = 0;
  *a5 = 0;
  a18 = 31090337 * ((&a17 - 2016193444 - 2 * ((unint64_t)&a17 & 0x87D3545C)) ^ 0x40523415)
      + 1655392376;
  uint64_t v19 = (*(uint64_t (**)(int *))(v18 + 37600))(&a17);
  return (*(uint64_t (**)(uint64_t))(v18 + 8 * ((2980 * (a17 == 847203058)) ^ 0x5D5u)))(v19);
}

uint64_t sub_10011866C()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((((1153509791 - v0) ^ 0x762) * (v1 >= 0xF4DDD0A2)) ^ 0x762)))();
}

uint64_t sub_1001186C4(int a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * (((*(_DWORD *)(v8 + (v7 + a4) * (uint64_t)a1) == 1615475421) * (((v4 - 2540) | v5) - 671)) ^ v4)))();
}

uint64_t sub_100118704()
{
  uint64_t result = (*(uint64_t (**)(void, uint64_t, void))(v1 + 8 * (v4 ^ 0x1454)))(**(unsigned int **)(v2 + 8 * (v4 - 1506)), v7, v6);
  *(_DWORD *)(v0 + 12) = v3;
  return result;
}

uint64_t sub_100118734(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(uint64_t, void))(v6 + 8 * (((832 * (v5 ^ 0x8E0) + 3236) * (v4 == a4)) ^ v5)))(a1, v5 ^ 0xC42u);
}

uint64_t sub_10011876C@<X0>(uint64_t a1@<X0>, int a2@<W1>, int a3@<W2>, int a4@<W8>)
{
  *(unsigned char *)(a1 + (a2 + v5)) = *(unsigned char *)(v4 + (a2 + v5));
  return (*(uint64_t (**)(void))(v6 + 8 * ((4396 * ((a3 ^ 0x65D) + a2 - 1706 == a4)) ^ a3)))();
}

uint64_t sub_1001187A8(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, unsigned int a6, uint64_t a7, int a8)
{
  *(void *)(a3 + (v9 + a4 + v8)) = *(void *)(a2 + (v9 + a4 + v8));
  return (*(uint64_t (**)(void))(v10 + 8 * ((480 * (a8 + a4 != 8)) ^ a6)))();
}

uint64_t sub_1001187E0()
{
  BOOL v4 = v2 - 408467505 < (int)(v3 + 1007832678 + ((19 * (v0 ^ 0x585) - 885) | 0x4E0));
  if (v3 > 0x43EDA9B9 != v2 - 408467505 < -1139648954) {
    BOOL v4 = v3 > 0x43EDA9B9;
  }
  return (*(uint64_t (**)(void))(v1 + 8 * ((14 * v4) ^ v0)))();
}

uint64_t sub_100118864(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, int a6)
{
  HIDWORD(v11) = a6;
  LODWORD(v11) = a6 ^ v6;
  return (*(uint64_t (**)(void))(v8 + 8 * ((189 * (v10 + 1 == v9 + 40)) ^ a4)))((v11 >> 2)
                                                                                            + v6 - (v7 & (2 * (v11 >> 2))));
}

uint64_t sub_10011891C@<X0>(uint64_t a1@<X1>, unsigned int a2@<W3>, int a3@<W4>, int a4@<W8>)
{
  unsigned int v9 = (v4 + 41911837) & 0xFD807DFC;
  int v10 = a4 ^ 0x6A362D32;
  uint64_t v11 = v10 * a3
      + 170796
      - 965 * ((((v10 * a3 + 170796) * (unint64_t)a2) >> 32) >> 4);
  unint64_t v12 = STACK[0x710] + (v5 + 1 + v10);
  *(unsigned char *)(v8 + v11) ^= *(unsigned char *)v12;
  LODWORD(STACK[0x6F4]) = v9;
  uint64_t v13 = v10 * a3
      + (v9 ^ 0x609F4)
      - 965 * ((((v10 * a3 + (v9 ^ 0x609F4)) * (unint64_t)a2) >> 32) >> 4);
  LODWORD(v12) = v12 * v7 - ((v12 * v6) & 0x7E881C82) + 1061424705;
  LODWORD(v12) = v12 ^ WORD1(v12) ^ 0x3F443105;
  unsigned int v14 = v12 * v7 - ((-1185014910 * v12) & 0xC8B31740) - 463893600;
  LODWORD(v11) = ((v14 ^ (230752256 * v12)) & 0xD293094 ^ 0x4090080 | (v14 ^ (230752256 * v12)) & 0xD293094 ^ 0x9203014) ^ ((v13 & 0x235 ^ 0xD293235) + (v13 & 0x235));
  LOBYTE(v12) = ((v14 ^ 0xA0) - ((2 * v14) & 0xA6) - 45) ^ *(unsigned char *)(v8 + v13);
  *(unsigned char *)(v8 + v13) = *(unsigned char *)(a1 + v11 * (HIBYTE(v14) ^ 0x1C) % 0x4A0) ^ (v12
                                                                                            - ((2 * v12) & 0x12)
                                                                                            + 9) ^ 0x3A;
  char v15 = *(uint64_t (**)(void))(STACK[0x6F8]
                            + 8
                            * ((118 * (((v10 + 1781935410 - ((2 * v10 + 2) & 0xD46C5A64) + 1) ^ 0x6A362D00) > 0x3F)) ^ (v4 - 1068)));
  LODWORD(STACK[0x5DC]) = 1725372005;
  return v15();
}

uint64_t sub_100118B1C@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * (int)(((*(_DWORD *)(*(void *)(a1 - 0x49230D716B37ADFCLL)
                                                  + 4 * (v2 + v5 - 1)) == v3)
                                     * ((680 * (v1 ^ 0x40B) + 1714037575) & 0x99D5D3FF ^ 0x1BA4)) ^ (680 * (v1 ^ 0x40B)))))();
}

uint64_t sub_100118B8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, int a14)
{
  return (*(uint64_t (**)(void))(v15 + 8 * ((947 * (a14 == 0)) ^ v14)))();
}

void sub_100118BE4()
{
}

uint64_t sub_100118C10@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  *(unsigned char *)(a1 + (v5 + v3)) = *(unsigned char *)(v2 + (v5 + v3));
  return (*(uint64_t (**)(void))(v7
                              + 8 * (((v5 - 1 == a2) * ((v6 + 1797006304) & 0x284E9F7F ^ 0x1C03)) ^ (v4 + v6 + 1168))))();
}

uint64_t sub_100118C64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, int a16, char a17, int a18, char a19, uint64_t a20,int a21,unsigned int a22,uint64_t a23,char *a24)
{
  a23 = a15;
  a24 = &a19;
  a22 = (v25 + 255) ^ (((1572178451 - (&a21 | 0x5DB58A13) + (&a21 | 0xA24A75EC)) ^ 0x1343F322)
                     * v24);
  (*(void (**)(int *))(v27 + 8 * (v25 + 2613)))(&a21);
  a22 = (v25 + 255) ^ (((&a21 & 0xE90363A | ~(&a21 | 0xE90363A)) ^ 0x40664F0B) * v24);
  a23 = a15;
  a24 = &a17;
  (*(void (**)(int *))(v27 + 8 * (v25 + 2613)))(&a21);
  LODWORD(a24) = v25 - 476588053 * (&a21 ^ 0xBDFD0443) + 598;
  a23 = a15;
  uint64_t v28 = (*(uint64_t (**)(int *))(v27 + 8 * (v25 + 2646)))(&a21);
  return (*(uint64_t (**)(uint64_t))(v27
                                            + 8 * ((1400 * (a21 == (((v25 - 1785) | 0x890) ^ (v26 - 1928)))) ^ v25)))(v28);
}

uint64_t sub_100118D94@<X0>(uint64_t a1@<X3>, unsigned int a2@<W7>, unsigned int a3@<W8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  BOOL v35 = a3 > v30;
  unint64_t v36 = (*(_DWORD *)(a26 + v31) ^ (((v33 - 3058) | a2) + 809807835)) + HIDWORD(v34);
  *(_DWORD *)(a26 + 4 * a1) = v36 + v27 - (v28 & (2 * v36));
  *(_DWORD *)(a26 + v31) = HIDWORD(v36) | v33 ^ 0x57B ^ (v27 + 1403);
  if (v35 == v26 + 589888972 < -754874505) {
    BOOL v35 = v26 + 589888972 < v29;
  }
  return (*(uint64_t (**)(void))(v32 + 8 * ((v33 - 1410) | v35)))();
}

uint64_t sub_100118E3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, void))(v9
                                                             + 8
                                                             * ((142
                                                               * ((((((a6 - 674) | 0x81) ^ (v6 + 18))
                                                                  + ((a6 - 1493207709) & 0xFBDFEFAF)) & v7) == 0)) ^ a6)))(a1, a2, (v8 - a2));
}

uint64_t sub_100118E90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, unint64_t *a19, int a20,unsigned int a21)
{
  a21 = v24 - (&a19 ^ 0xC7816049) * v21 + 1019;
  a19 = &STACK[0x75464D914B7248C7];
  uint64_t v25 = (*(uint64_t (**)(unint64_t **))(v23 + 8 * (v24 + 2042)))(&a19);
  return (*(uint64_t (**)(uint64_t))(v23
                                            + 8
                                            * (((a20 == ((v24 - 2664) | 0x448) + 847201958)
                                              * (v22 + ((v24 - 2664) ^ 0x67CC5AFC) - 1047)) ^ v24)))(v25);
}

void sub_100118F38()
{
}

uint64_t sub_100118F64()
{
  int v3 = ((v2 + 1935) ^ 0xA196EB7) + v1 - ((((2 * (v2 ^ 0x21)) ^ 0x3B962BD2) + 2 * v1) & 0x589C87A0);
  BOOL v4 = ((2 * v3) & 0xFCFBDFFE ^ 0x589887A0) + (v3 ^ 0x5233AC2F) - 978946438 == 1143236217;
  return (*(uint64_t (**)(void))(v0 + 8 * (v4 | (2 * v4) | v2)))();
}

uint64_t sub_100118FF8(uint64_t a1, int a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v11 = (a2 + v6);
  long long v12 = *(_OWORD *)(v5 + v11 - 15);
  long long v13 = *(_OWORD *)(v5 + v11 - 31);
  uint64_t v14 = a1 + v11;
  *(_OWORD *)(v14 - 15) = v12;
  *(_OWORD *)(v14 - 31) = v13;
  return (*(uint64_t (**)(void))(v10
                              + 8
                              * ((618 * (((((a5 + 269091241) | 0x4045D000) - v8 - 1007) ^ 0x562) == (v9 & 0xFFFFFFE0))) ^ (v7 + ((a5 + 269091241) | 0x4045D000) + 3027))))();
}

uint64_t sub_100119074(uint64_t a1, uint64_t a2, uint64_t a3, int a4, int a5)
{
  return (*(uint64_t (**)(void))(v6 + 8 * (((a5 - 2981 + ((a5 - 1216) | 0x812)) * (v5 == a4)) ^ a5)))();
}

uint64_t sub_1001190AC@<X0>(int a1@<W2>, int a2@<W4>, int a3@<W7>, int a4@<W8>)
{
  LODWORD(STACK[0x52C]) = a1;
  LODWORD(STACK[0x54C]) = v8;
  LODWORD(STACK[0x530]) = v9;
  LODWORD(STACK[0x538]) = v10;
  unsigned int v12 = ((v4 - 1341789993) ^ 0x77CBF0C3) - 1074352128 + ((2 * (v4 - 1341789993)) & 0xEF97E186);
  LODWORD(STACK[0x53C]) = LODWORD(STACK[0x53C]) - 2146413773 + LODWORD(STACK[0x6D8]);
  LODWORD(STACK[0x520]) += 177245185 + LODWORD(STACK[0x6EC]);
  LODWORD(STACK[0x550]) += 306220819 + LODWORD(STACK[0x6C8]);
  int v13 = a4 + 1700629384;
  int v14 = LODWORD(STACK[0x700]) - 67389073;
  int v15 = LODWORD(STACK[0x708]) - 798798100;
  int v16 = v6 + 2147450872;
  LODWORD(STACK[0x540]) = LODWORD(STACK[0x6D0]) - 2100873211;
  LODWORD(STACK[0x51C]) = v7 + 453230009;
  LODWORD(STACK[0x510]) = LODWORD(STACK[0x6A0]) - 737398792;
  int v17 = (2 * v5) ^ 0x1716;
  LODWORD(STACK[0x500]) = LODWORD(STACK[0x500]) + v17 - 1690;
  LODWORD(STACK[0x504]) += 64;
  int v18 = 46 * (v17 ^ 0x6CF);
  int v19 = v15 - (v6 + 2147450872);
  char v20 = v17;
  LODWORD(STACK[0x708]) = v17;
  int v21 = a2 + 1005860524 - v14;
  int v22 = v18 + 799008515 + v12 + v14;
  unsigned int v23 = v13
      + ((v14 - 703826222) ^ 0xE50522EE)
      - 580418489
      - ((((v13 + ((v14 - 703826222) ^ 0xE50522EE) - 580418489) << (v20 + 39)) - 1095962450) & 0x95B7E8AE)
      - 1439535954;
  int v24 = -661755096 - v13 - ((1770609042 - 2 * v13) & 0x47937CBE);
  int v25 = ((v21 - ((2 * v21 + 1543415048) & 0x47937CBE) + 298389731) ^ v24) + (v22 ^ 0x7EB63DDC);
  unsigned int v26 = ((2 * v25) & 0xE5F7FDFE) + (v25 ^ 0x72FBFEFF);
  unsigned int v27 = (v24 ^ 0x23C9BE5F)
      + (v23 ^ 0xB5240BA8)
      + 248913895
      + (~(2 * ((v24 ^ 0x23C9BE5F) + (v23 ^ 0xB5240BA8) + 1)) | 0xE253C035);
  int v28 = v27 ^ v23;
  unsigned int v29 = (a3 ^ 0xCA99C4CD) + 2040727257 - ((2 * (a3 ^ 0xCA99C4CD) + 2) & 0xF3460DB2) + 1;
  unsigned int v30 = ((v16 - 1465606519) ^ 0xE50522EE)
      + (a3 ^ 0x35663B32)
      - ((2 * (((v16 - 1465606519) ^ 0xE50522EE) + (a3 ^ 0x35663B32)) + 50680526) & 0x144B6BB4)
      + 2074632001;
  unsigned int v31 = (v19 - ((2 * v19 - 1106103508) & 0xF3460DB2) + 1487675503) ^ v29;
  int v32 = (v29 ^ 0x79A306D9)
      + (v30 ^ 0x75DA4A25)
      + 1
      - ((2 * ((v29 ^ 0x79A306D9) + (v30 ^ 0x75DA4A25) + 1)) & 0x7D8A8744)
      - 1094368350;
  int v33 = (((v26 + 218366209) & 0x7EB63DDC ^ 0x7EB63DDC) + ((v26 + 218366209) & 0x7EB63DDC)) ^ (v16 + v11 + 2047665180);
  int v34 = v32 ^ v30;
  unsigned int v35 = ((2 * ((v28 ^ 0xBBF2144D) + v26 - 1929117438)) & 0xCF3FDC9C)
      + (((v28 ^ 0xBBF2144D) + v26 - 1929117438) ^ 0xE79FEE4E);
  int v36 = v34 ^ 0x34E0F678 ^ v33;
  unsigned int v37 = ((2 * (v31 + v33 + (v34 ^ 0xCB1F0987) + 1)) & 0xF476FDEC) + ((v31 + v33 + (v34 ^ 0xCB1F0987) + 1) ^ 0x7A3B7EF6);
  unsigned int v38 = (v22 ^ 0x3ABBD66E ^ v28) + 408949170 + v35;
  int v39 = ((2 * ((v28 ^ 0x440DEBB2) - v35 + 375426142)) & 0x7B6CB9B2)
      + (((v28 ^ 0x440DEBB2) - v35 + 375426142) ^ 0x3DB65CD9);
  unsigned int v40 = (v27 ^ 0x8BFA9E5F) + 1035361497 + (v38 ^ 0xF4B0E) - v39 + 1;
  int v41 = v40 - 1404907472 - ((2 * v40) & 0x5885A060);
  unsigned int v42 = v36 - 2050719478 + v37;
  unsigned int v43 = v37 - ((2 * v37 - 1375222284) & 0xFC4EA208) + 1428894718;
  int v44 = (v39 - 1035361497) ^ (v35 - 375426142);
  unsigned int v45 = ((2 * ((v34 ^ 0x34E0F678) + (v43 ^ 0x1D8AEFB) + 1)) & 0xEBFDDFD6)
      + (((v34 ^ 0x34E0F678) + (v43 ^ 0x1D8AEFB) + 1) ^ 0xF5FEEFEB);
  int v46 = v39 - ((2 * v39 + 161503204) & 0x9FBBA8E) + 1640892729;
  unsigned int v47 = ((2 * ((v46 ^ 0x4FDDD47) + v44)) & 0xFFBF7B26) + (((v46 ^ 0x4FDDD47) + v44) ^ 0xFFDFBD93);
  int v48 = v45 - 2 * ((v45 + 612866272) & 0x52745FBF ^ v45 & 0x17) - 151259000;
  unsigned int v49 = (v38 ^ 0xFB0D69B6 ^ v46) + (v41 & 0x4FFA1729 ^ 0xF3BDEFDF) + (v41 & 0x4FFA1729 ^ 0xBC47F8F6) + 2114159 + v47;
  unsigned int v50 = (STACK[0x48C] & (2 * (v49 + 1341789993 + (v38 ^ 0xFFF0B4F1))))
      + ((v49 + 1341789993 + (v38 ^ 0xFFF0B4F1)) ^ LODWORD(STACK[0x490]));
  int v51 = v50 + 370558704 + (~(2 * v50 + 1180210342) | 0x1A2C06C7);
  int v52 = (v32 ^ 0x3BE9C218) - 167841813 + (v42 ^ 0xF4B0E) - v45 + 1;
  unsigned int v53 = ((2 * ((v48 ^ 0x52745FA8) + (v43 ^ 0xFE275104 ^ (v45 + 167841813)))) & 0x8F78F7BA)
      + (((v48 ^ 0x52745FA8) + (v43 ^ 0xFE275104 ^ (v45 + 167841813))) ^ 0x47BC7BDD);
  unsigned int v54 = v53 + (v42 ^ 0xAD84EB59 ^ v48);
  unsigned int v55 = v54 - 1203534813 + (v42 ^ 0xFFF0B4F1) - 668057458 - ((2 * (v54 - 1203534813 + (v42 ^ 0xFFF0B4F1))) & 0xB05C811C);
  unsigned int v56 = (v55 ^ 0xD82E408E) - ((2 * (v55 ^ 0xD82E408E) + 1147340778) & 0x8D68D7E8) + 1759899625;
  unsigned int v57 = (v54 - 1203534813) ^ (v52 - 668057458 - ((2 * v52) & 0xB05C811C)) ^ v55;
  int v58 = v57 - ((2 * v57) & 0x9FDCDF2) - 2063669511;
  unsigned int v59 = ((2 * v51) & 0xDBA79DE0 ^ 0xC1839920) + (v51 ^ 0x1F3A326C);
  v50 += 858889528;
  int v60 = (v49 + 1341789993) ^ v41 ^ (v59 - 1404907472 - 2 * (v59 & 0x2C42D037 ^ (v51 ^ 0x1F3A326C) & 7));
  unsigned int v61 = v60 - ((2 * v60) & 0xF9AC02AA) + 2094399829;
  unsigned int v62 = v54 + v53;
  unsigned int v63 = (v58 ^ 0x7B011906) + v53;
  int v64 = v50 ^ (v47 - 1090145022 + v49);
  unsigned int v65 = (v61 ^ 0x8329FEAA) + v47;
  unsigned int v66 = ((2 * v58) & 0x7EA7EF7E ^ 0x50A54E10) + (v58 ^ 0xD7A150F7);
  unsigned int v67 = ((2 * v61) & 0xBF5FFDFE ^ 0x211481C8) + (v61 ^ 0xCF75BE1B);
  unsigned int v68 = v64 - v67 + 1417772420 - ((2 * (v64 - v67 + 1605369599)) & 0xE9A2FD0A);
  unsigned int v69 = (v56 ^ (v62 - ((2 * v62 - 1092303004) & 0x8D68D7E8) + 640077734)) - v66 - 1085016129;
  unsigned int v70 = v69 + 1987432176 - ((2 * v69) & 0xECEB9DE0);
  unsigned int v71 = (v63 + v66 - 565135678 + ~((2 * (v63 + v66) - 810168414) & 0xECEB9DE0)) ^ v70;
  unsigned int v72 = (v68 ^ 0xF4D17E85) - ((2 * (v68 ^ 0xF4D17E85) + 1198319156) & 0xDA46CC78) + 282712406;
  int v73 = (v70 ^ 0x7675CEF0) - ((2 * (v70 ^ 0x7675CEF0) + 1198319156) & 0x6F5B8DEA) + 1533295119;
  int v74 = v73 ^ v56;
  unsigned int v75 = ((2 * (v72 ^ v50)) & 0xF8EFDFBE ^ 0xD846CC38) + (v72 ^ v50 ^ 0x115489E3);
  unsigned int v76 = (v65 + v67 - ((2 * (v65 + v67) + 515325366) & 0xE9A2FD0A) + 70065504) ^ v68;
  int v77 = v72 ^ 0x715A0650;
  int v78 = (v72 ^ 0x715A0650) - v75 + 403440772;
  v73 ^= 0xABD4A699;
  unsigned int v79 = ((2 * (v73 + (v74 ^ 0x8EE652FE) + 1)) & 0xDF7F77F6) + ((v73 + (v74 ^ 0x8EE652FE) + 1) ^ 0xEFBFBBFB);
  unsigned int v80 = ((v67 + 1264225919) ^ 0xDC17DA72) - 93528135 + v78;
  unsigned int v81 = v76 + 1244535993 + v80;
  unsigned int v82 = v80 + v78 - ((2 * (v80 + v78) - 1663701510) & 0xD5609B94) + 958088391;
  unsigned int v83 = v79 + ((v66 - 340355649) ^ 0xDC17DA72);
  unsigned int v84 = v71 - 1927466683 + v83 - ((2 * (v71 - 1927466683 + v83) - 962312274) & 0xA61BCC60) - 1235219961;
  unsigned int v85 = v77
      - 1375625316
      + ((701402915 * ((v84 & 0x4D76519F ^ 0xC72118F) + (v84 & 0x4D76519F ^ 0x41044010))) ^ 0xBE65374D);
  int v86 = v85 ^ v82;
  unsigned int v87 = v75 + 1476216835 + (~(2 * v75 + 1821102886) | 0xBC914321);
  unsigned int v88 = ((2 * (v85 ^ v82 ^ v87)) & 0xC7BDEBFC ^ 0x860C2348) + (v85 ^ v82 ^ v87 ^ 0xA8D9E65B);
  int v89 = v83 + v79 - 460741276 + (~(2 * (v83 + v79) + 1090588692) | 0x77EDC54D);
  int v90 = v85 ^ v81;
  unsigned int v91 = v73 - ((2 * v73 + 933944600) & 0x8270180E) - 586319213;
  int v92 = v91 ^ 0x1235EA37 ^ v84;
  int v93 = v89 ^ v91;
  unsigned int v94 = (v74 ^ 0x7119AD01) - ((2 * (v74 ^ 0x7119AD01) + 1702605540) & 0xD76A13C2) + 510845779;
  int v95 = v94 ^ 0x6BB509E1;
  int v96 = v88 + v90 - ((2 * (v88 + v90) + 157074768) & 0x14CDC3E2) - 1625996135;
  unsigned int v97 = ((2 * (v93 ^ v94)) & 0xB7FBF1FE ^ 0x9508317E) + (v93 ^ v94 ^ 0x3579E040);
  int v98 = v88 - ((2 * v88 + 309385254) & 0x75742E14) + 66224925;
  unsigned int v99 = ((2 * ((v86 ^ 0x6AB04DCA) + (v96 ^ 0x75991E0E) + 1)) & 0xE5EEEBFE)
      + (((v86 ^ 0x6AB04DCA) + (v96 ^ 0x75991E0E) + 1) ^ 0x72F775FF);
  int v100 = v98 ^ 0x30DCF6FB ^ v96;
  unsigned int v101 = (v87 ^ 0xA1B75E6F) + (v82 ^ 0x6AB04DCA) + v88 - 1675556350 + (v98 ^ 0xBABA170A);
  int v102 = ((2 * v101) & 0x7DDEFD1E) + (v101 ^ 0x3EEF7E8F);
  unsigned int v103 = v99 - ((2 * v99 + 1803604130) & 0xE45D8F36) + 669986796;
  unsigned int v104 = v97 - ((2 * v97 - 1573727708) & 0x8DBED1F0) - 1745300982;
  unsigned int v105 = v97 + v92 - ((2 * (v97 + v92) + 958316366) & 0xB2335CD2) - 173470192;
  unsigned int v106 = ((2 * ((v93 ^ 0x531115E) - 1464345007 + (v105 ^ 0x26E65196))) & 0xF76B2E1E)
       + (((v93 ^ 0x531115E) - 1464345007 + (v105 ^ 0x26E65196)) ^ 0x7BB5970F);
  unsigned int v107 = v103 ^ (v88 + 996619183 + ~((2 * v88 - 1838098394) & 0xE45D8F36));
  int v108 = v104 ^ 0x46DF68F8;
  unsigned int v109 = v104 ^ 0x9FC6C691 ^ v105;
  unsigned int v110 = 669134722 - v102 - ((-1330965546 - 2 * v102) & 0x9F194B2E);
  unsigned int v111 = ((2 * ((v106 - 2075498255) ^ v104)) & 0xD67FFB2E ^ 0x843ED120) + ((v106 - 2075498255) ^ v104 ^ 0x2DE0956F);
  unsigned int v112 = v95 + (v89 ^ 0xC4091D59) + v97 + v108 + 952240490 + v111;
  int v113 = v100 + v99 - ((v103 ^ 0x180 | (2070446 - v99)) & 0x100180) + 901802065;
  unsigned int v114 = v113 - ((2 * v113 + 14813112) & 0xD0C31E02) - 388853027;
  unsigned int v115 = v112 + v106;
  unsigned int v116 = v109 + 78342989 + v106;
  int v117 = v114 ^ v110;
  unsigned int v118 = ((2 * ((v114 ^ 0xEEFB5B3) + 2095818877)) & 0xFEFE3B5C) + (((v114 ^ 0xEEFB5B3) + 2095818877) ^ 0x7F7F1DAE);
  int v119 = (v111 - v112 - 1373237819) ^ v116;
  unsigned int v120 = (v117 & 0x800000 ^ 0xFDF7EF7F) + 2 * (v117 & 0x800000);
  unsigned int v121 = v120 + 505222399;
  int v122 = (v116 ^ 0x668E3AB2) - ((2 * (v116 ^ 0x668E3AB2) + 970412282) & 0x25EF82FE) + 266562044;
  unsigned int v123 = ((v110 ^ 0xCF8CA597) & (1697975320 - v99)) + (v110 ^ 0xCF8CA597 | (1697975320 - v99)) + v118 - 2139037102;
  int v124 = v123 - ((2 * v123) & 0x575A4338) - 1414717028;
  unsigned int v125 = v120 + 34082945;
  unsigned int v126 = 437056509 - v120;
  if (((v118 - 2139037102) & v125) == 0) {
    unsigned int v126 = v121;
  }
  unsigned int v127 = v118 + 1684790740 + v126;
  unsigned int v128 = v111
       + (v122 ^ 0x92F7C17F)
       - v115
       - 992929475
       - ((2 * (v111 + (v122 ^ 0x92F7C17F) - v115 - 992929475)) & 0xB104E022)
       - 662540271;
  unsigned int v129 = v115 + (v116 ^ 0x9971C54D) + (v128 ^ 0x277D8FEE);
  unsigned int v130 = v99 + v102 + v107 + (v114 ^ 0xF1104A4C) + (v124 ^ 0x5452DE63);
  int v131 = (v130 - ((2 * v130 + 516580268) & 0x575A4338) - 1156426894) ^ v124;
  unsigned int v132 = v117 & 0xFF7FFFFF ^ 0xC1631024 ^ v127;
  unsigned int v133 = ((2 * ((v117 ^ 0xC1631024) + 982816712 + v132)) & 0xAF5F7E76)
       + (((v117 ^ 0xC1631024) + 982816712 + v132) ^ 0x57AFBF3B);
  unsigned int v134 = v122 ^ 0xF479FBCD ^ v119;
  int v135 = ((2 * v124) & 0x3FCDF374 ^ 0xA4CF034) + (v124 ^ 0x3AC181E1);
  int v136 = v131 ^ 0x64703079;
  int v137 = v134 + (v119 ^ 0x668E3AB2) - ((2 * (v134 + (v119 ^ 0x668E3AB2)) + 1843907412) & 0x4EBC4486) - 565049363;
  int v138 = v131 ^ (v135 + 131778660);
  int v139 = (v129 - ((2 * v129 + 968712714) & 0x7EA6141A) - 600720622) ^ v128;
  int v140 = v137 ^ 0x275E2243;
  v128 ^= 0xD60829D6;
  unsigned int v141 = v139 ^ 0xE95B23DB ^ (v128 - 1480474082);
  unsigned int v142 = (STACK[0x488] & (2 * ((v138 ^ 0x9B8FCF86) + 1125757100))) + (((v138 ^ 0x9B8FCF86) + 1125757100) ^ 0x5ADFFFFC);
  int v143 = (v138 ^ 0x64703079) + (v131 ^ 0x122FDCFB ^ (v133 - ((2 * v133 + 157228366) & 0x134026FA) - 1370512860)) + 1;
  unsigned int v144 = v142 - v135;
  unsigned int v145 = (v137 ^ 0xB25BB402 ^ v139 ^ 0xE95B23DB) + (v141 ^ 0x6AFA69BE);
  unsigned int v146 = ((2 * (v128 + 230013239)) & 0xBEFF6FFE) + ((v128 + 230013239) ^ 0x5F7FB7FF);
  unsigned int v147 = ((v142 - v135 + 928071815) ^ 0xB5A8BC6D)
       + 172520104
       - ((2 * ((v142 - v135 + 928071815) ^ 0xB5A8BC6D)) & 0x1490E550);
  unsigned int v148 = ((2 * ((v141 ^ 0x95059641) + 1125757100)) & 0xC6ED75DE) + (((v141 ^ 0x95059641) + 1125757100) ^ 0xE376BAEF);
  int v149 = v142 - v135 + 660023646;
  int v150 = v148 - v146 - 2 * ((v148 - v146 + 1007222032) & 0x2B7FDF3F ^ (v148 - v146) & 1) + 663280718;
  int v151 = v132 + v135 + v133 + v136 + v142 + 1139264775 + (v147 ^ 0xA4872A8);
  int v152 = v135 - (v142 - v135) - 1768312876 + (v147 ^ 0xA4872A8);
  int v153 = v152 + 603584486 - ((2 * v152) & 0x47F3EFCC);
  unsigned int v154 = (v134 + v128 + v140 + (v139 ^ 0x83A14A65) + v148 + 914914599 + (v150 ^ 0x1ED76353)) ^ v150;
  int v155 = v146 + 10254560 + (v150 ^ 0x548020C1) + (v150 ^ 0x1ED76353);
  unsigned int v156 = v155 + 1528436364 - ((2 * v155) & 0xB6342D18);
  int v157 = v153 & 0xC0329 ^ 0x80320;
  int v158 = v147 ^ 0xA4872A8 ^ v151;
  unsigned int v159 = ((v143 + 603584486 - ((2 * v143) & 0x47F3EFCC)) ^ 0xB5A8BC6D ^ v153) + v158;
  int v160 = v153 & 0xC0329 ^ 0x40009;
  unsigned int v161 = (v145 + 1528436365 - ((2 * (v145 + 1)) & 0xB6342D18)) ^ 0xB5A8BC6D ^ v156;
  unsigned int v162 = ((2 * ((v153 ^ 0x23F9F7E6) + 449420430)) & 0xE6FF59FE) + (((v153 ^ 0x23F9F7E6) + 449420430) ^ 0xF37FACFF);
  unsigned int v163 = v159 - 18168240 * ((v157 + v160) | (((413718177 - v144) & 0x20148135) + (v149 & 0x20148135)));
  unsigned int v164 = ((2 * ((v156 ^ 0x5B1A168C) + 449420430)) & 0xF3DF53FC) + (((v156 ^ 0x5B1A168C) + 449420430) ^ 0x79EFA9FE);
  unsigned int v165 = v154 & 0xB005E8D7 ^ 0x10056053 | v154 & 0xB005E8D7 ^ 0xA0008884;
  v154 ^= 0x1ED76353u;
  unsigned int v166 = ((2 * (v161 + v154)) & 0xFD1F7EE6) + ((v161 + v154) ^ 0x7E8FBF73);
  unsigned int v167 = (v147 ^ 0x7A1E235E ^ (v163 - ((2 * v163 + 463969760) & 0x1490E550) + 2015117720)) + v165;
  int v168 = (v167 + 1341789993) ^ (v158 - 361895129);
  unsigned int v169 = v163 + v162;
  unsigned int v170 = v162 + v167;
  unsigned int v171 = v170 + 1752971354;
  int v172 = (v166 - 2123349875) ^ v150;
  int v173 = v172 ^ (v154 - 361895129);
  unsigned int v174 = v166 + v164;
  unsigned int v175 = (unsigned char *)STACK[0x710];
  v175[186] = v170 - 86;
  unsigned int v176 = (v168 ^ (v162 + 209736449)) - 978760153 - ((2 * (v168 ^ (v162 + 209736449))) & 0x8B529C4E);
  v164 -= 2045749758;
  unsigned int v177 = ((2 * ((v172 ^ 0x64C9400D) + v164)) & 0xF9AFEAFA) + (((v172 ^ 0x64C9400D) + v164) ^ 0x7CD7F57D);
  v175[448] = v174 - ((2 * v174 + 30) & 0x78) - 53;
  int v178 = v173 ^ 0x64C9400D;
  unsigned int v179 = (v173 ^ 0x64C9400D ^ v164) + 2102555227 - ((2 * (v173 ^ 0x64C9400D ^ v164)) & 0xFAA4E4B6);
  v175[712] = v169 + 113;
  int v180 = v169 - ((2 * (v169 + 2099248910) + 152936) & 0x29DF6E) + 1190533497;
  unsigned int v181 = ((2 * ((v176 ^ 0xC5A94E27) + v168)) & 0xBE3F5DFE) + (((v176 ^ 0xC5A94E27) + v168) ^ 0xDF1FAEFF);
  v175[((((((_BYTE)v170 + 42) & 0xD0 ^ 0x40) + (((_BYTE)v170 - 86) & 0xD0 ^ 0x10)) & 0xF0) - 208) & 0xFFFFFC90 | 0x36FLL] = v177 - ((2 * v177 + 6) & 0x78) - 65;
  v175[784] = v179 ^ 0x67;
  unsigned int v182 = ((2 * v180) ^ 0xFFD62091)
       + v168
       + 1090747997
       - 2 * ((((2 * v180) ^ 0xFFD62091) + v168 + 1) & 0x41037E5D ^ v168 & 1);
  v175[353] = v173 ^ 0x31;
  v175[617] = v168 ^ 0x80;
  unsigned int v183 = ((2 * v180) & 0xF97BDFFC ^ 0x910BDCE4) + (v180 ^ 0xB43A118D);
  unsigned int v184 = ((2 * ((v179 ^ 0x7D52725B) + v178)) & 0xEAFFFEFC) + (((v179 ^ 0x7D52725B) + v178) ^ 0xF57FFF7E);
  unsigned int v185 = v177 - 2 * v184;
  v175[91] = v176 ^ 0xA7;
  int v186 = v174 - 2 * ((v174 + 1410178656) & 0x4BC17A5F ^ v174 & 0x10) - 1613817681;
  unsigned int v187 = ((2 * ((v186 ^ 0x4BC17A4F) + 176160898 + v184)) & 0xFFEBFFFE)
       + (((v186 ^ 0x4BC17A4F) + 176160898 + v184) ^ 0xFFF5FFFF);
  unsigned int v188 = ((2 * (v171 - 2 * v181 - 1304588338)) & 0xFDFD61FE) + ((v171 - 2 * v181 - 1304588338) ^ 0x7EFEB0FF);
  unsigned int v189 = v178 + ((2 * v186) ^ 0x687D0B61) - 86718563 - ((2 * (v178 + ((2 * v186) ^ 0x687D0B61) + 1)) & 0xF5A98F38);
  unsigned int v190 = ((2 * ((v180 ^ 0x8014EFB7) + 551571713 + v181)) & 0xEFEE9FFA)
       + (((v180 ^ 0x8014EFB7) + 551571713 + v181) ^ 0x77F74FFD);
  v175[522] = v180 ^ 0xF3;
  v175[258] = v186 ^ 0xB7;
  v175[689] = v185 - ((2 * v185 + 126) & 0x78) - 69;
  v175[427] = v182 ^ 0xDC;
  unsigned int v191 = v187 + v185;
  v175[953] = v188 - 127;
  v175[163] = v189 ^ 0xA0;
  v175[594] = v187 - ((2 * v187 + 2) & 0x78) + 61;
  unsigned int v192 = v188 + v190;
  v175[858] = v190 - 125;
  unsigned int v193 = ((2 * ((v186 ^ 0x3526B8B) - 1491885971)) & 0xDEBCFFBA) + (((v186 ^ 0x3526B8B) - 1491885971) ^ 0x6F5E7FDD);
  unsigned int v194 = v192 - ((2 * v192 + 1167091908) & 0xE156F114) - 1821135636;
  unsigned int v195 = ((v183 - ((2 * v183 + 1420517598) & 0x8206FCB8) + 1801006795) ^ v182) + (v194 ^ 0x8F548775) + 1;
  int v196 = ((2 * v195) & 0x7DFEF7FC) + (v195 ^ 0x3EFF7BFE);
  int v197 = v191 - ((2 * v191 + 266370492) & 0x4BEB4344) + 770039936;
  unsigned int v198 = v185 + v193;
  unsigned int v199 = -147073713 - v198 - ((40692924 - 2 * v198) & 0xEC0ABDE2);
  unsigned int v200 = v196 + v183;
  v175[404] = v199 ^ 0xCD;
  LOBYTE(v178) = v192 - 30;
  unsigned int v201 = (v189 ^ (v193 - 1868464093) ^ 0xFAD4C79C) + (v197 ^ 0x5A0A5E5D) + 1;
  unsigned int v202 = ((2 * v201) & 0xF5FF15F6) + (v201 ^ 0xFAFF8AFB);
  unsigned int v203 = v202 + v193 - ((2 * (v202 + v193) + 725871184) & 0xA027E742) - 441063223;
  int v204 = v190
       - v183
       - v192
       - 2 * ((v190 - v183 - v192 + 346620048) & 0x3E29CFCF ^ (v190 - v183 - v192) & 1)
       - 1831677858;
  LOBYTE(v192) = v196 - 126;
  v175[763] = v178;
  unsigned int v205 = (v204 ^ 0x3E29CFCE)
       - 1056930814
       + v196
       - ((2 * ((v204 ^ 0x3E29CFCE) - 1056930814 + v196)) & 0xCB630F9C)
       + 1706133454;
  v175[237] = v192;
  v175[68] = v203 ^ 0x9D;
  int v206 = v204 ^ v194;
  v175[499] = v197 ^ 0x9E;
  v175[930] = v202 - ((2 * v202 + 10) & 0x78) + 65;
  int v207 = v197 ^ v199;
  int v208 = (v200 - 346672015) ^ v204 ^ v194;
  v175[332] = v200 - 15;
  unsigned int v209 = ((2 * v208) & 0xFFECFE16 ^ 0x19C86004) + (v208 ^ 0x73134F4D);
  int v210 = v202 - v198 + 104262499;
  unsigned int v211 = (v204 ^ 0x3E29CFCE) - v209;
  unsigned int v212 = ((2 * ((v206 ^ 0x4E82B744) - v211 - 78542658)) & 0xD52FFCFE)
       + (((v206 ^ 0x4E82B744) - v211 - 78542658) ^ 0x6A97FE7F);
  v175[142] = v208 ^ 0xC6;
  v175[668] = v204 ^ 0x4E;
  v175[740] = v210 ^ 0x8A;
  unsigned int v213 = ((2 * (v203 ^ v207)) & 0xFFBFBF6A ^ LODWORD(STACK[0x484])) + (v203 ^ v207 ^ 0x3E5B5445);
  unsigned int v214 = v213 + v198;
  unsigned int v215 = ((2 * ((v207 ^ 0x53F0FF53) - 97406538 + v214)) & 0xF9BEEDFE)
       + (((v207 ^ 0x53F0FF53) - 97406538 + v214) ^ 0xFCDF76FF);
  v175[573] = v212 + 1;
  unsigned int v216 = ((2 * ((v210 ^ 0x6DB147B6) - 52463873 - v215)) & 0xEFBB7EA6)
       + (((v210 ^ 0x6DB147B6) - 52463873 - v215) ^ 0x77DDBF53);
  v175[47] = v205 ^ 0xF8;
  unsigned int v217 = (v205 ^ 0x800C078) - v212;
  v175[835] = v213 - ((2 * v213 + 22) & 0x78) - 121;
  v175[309] = v215 - ((2 * v215 + 2) & 0x78) + 61;
  v175[214] = -122 - v214 - ((20 - 2 * v214) & 0x78);
  unsigned int v218 = v209 - v217;
  int v219 = v217 - ((2 * v217 + 797004028) & 0x443F3EB0) - 102742058;
  v175[478] = v211 - 62;
  unsigned int v220 = v211 - v209 - (v209 - v217) - ((2 * (v211 - v209 - (v209 - v217)) + 1770915550) & 0xF983F756) + 831061786;
  unsigned int v221 = v213 - v216;
  unsigned int v222 = ((2 * (v212 + 1929881972 + (v220 ^ 0xFCC1FBAB))) & 0xB3DFF1DE)
       + ((v212 + 1929881972 + (v220 ^ 0xFCC1FBAB)) ^ 0x59EFF8EF);
  v175[909] = v209 - v217 + 94;
  int v223 = 678368455
       - (v213
        + v214
        - 1299550127
        + v213
        - v216)
       - ((194813076 - 2 * (v213 + v214 - 1299550127 + v213 - v216)) & 0x45418CFA);
  v175[24] = (-57 - (v213 + v214 + 81 + v213 - v216) - ((-108 - 2 * (v213 + v214 + 81 + v213 - v216)) & 0xFA)) ^ 0x41;
  v175[383] = v212 - 12;
  v175[119] = v215 - 2 * ((v215 + 52) & 0x3E ^ v215 & 2) + 48;
  unsigned int v224 = v216 - ((2 * v216 - 359279272) & 0x8BD2A984) + 993279854;
  LOBYTE(v213) = v218 + v222;
  int v225 = v218 + v222 - 318543666;
  v175[550] = (v216 - ((2 * v216 + 88) & 0x84) + 110) ^ 0xFE;
  v175[288] = v220 ^ 0x2B;
  v175[814] = v219 ^ 0xD8;
  int v226 = v215
       - 524275468
       + (v223 ^ 0x22A0C67D)
       - 2118456048
       - ((2 * (v215 - 524275468 + (v223 ^ 0x22A0C67D))) & 0x375DA20);
  v175[645] = v221 - ((2 * v221 + 12) & 0x78) + 66;
  int v227 = ((v223 & 0x6DD3CEF0 ^ 0x2080C670 | v223 & 0x6DD3CEF0 ^ 0x4D530880) + 454476337 + v225) ^ v220;
  unsigned int v228 = ((2 * (v221 - 1301655546 + (v226 ^ 0x81BAED10))) & 0x97FDDFE0)
       + ((v221 - 1301655546 + (v226 ^ 0x81BAED10)) ^ 0xCBFEEFF0);
  unsigned int v229 = (((v222 - 1508899055) ^ 0xFCC1FBAB ^ v227)
        - ((2 * ((v222 - 1508899055) ^ 0xFCC1FBAB ^ v227)) & 0x9CDABACE)
        + 1315790183) ^ 0xA0A1B6DD;
  int v230 = (v228 + 872484880) ^ v223;
  v175[791] = v230 ^ 0xFB;
  int v231 = v230 ^ v226;
  v175[886] = v231 ^ 0xEB;
  unsigned int v232 = (v219 ^ 0x83C9A00E) - ((2 * (v219 ^ 0x83C9A00E) - 1770759500) & 0x9AB622A0) - 1735049558;
  v175[193] = (((v222 + 17) ^ 0xAB ^ v227) - ((2 * ((v222 + 17) ^ 0xAB ^ v227)) & 0xCE) + 103) ^ 0x5D;
  unsigned int v233 = (v224 ^ 0xE43F6B94) - ((2 * (v224 ^ 0xE43F6B94) + 376724148) & 0x3FA9403A) - 351351433;
  v175[719] = v225 - 127;
  v175[455] = v228 - 2 * ((v228 + 48) & 0x3E ^ v228 & 2) + 44;
  v175[360] = ((v224 ^ 0x94) - ((2 * (v224 ^ 0x94) - 76) & 0x3A) + 119) ^ 0x21;
  int v234 = v227 ^ 0x120D1011;
  v175[98] = v227 ^ 0x91;
  unsigned int v235 = v230 ^ 0xCC6C2DC7;
  int v236 = (((v231 ^ 0x9D01104) & 0x2BF75F24 ^ 0x65100) + ((v231 ^ 0x9D01104) & 0x2BF75F24 ^ 0x2BF10E24) - 699841308) | 0x705CD6FA;
  int v237 = v234 - ((2 * v234 + 1207141678) & 0x5406DB04) - 1912786919;
  int v238 = v236 - v225 + 515466425 + v229 - 1055839382 + (~(2 * (v236 - v225 + 515466425 + v229)) | 0x7DDDA92B) + 1;
  v175[624] = v232 ^ 0xD0;
  unsigned int v239 = (v232 ^ 0xB298A606)
       - 1857256418
       + v225
       - ((2 * ((v232 ^ 0xB298A606) - 1857256418 + v225)) & 0xAF911160)
       + 1472759984;
  unsigned int v240 = ((2 * ((v238 ^ 0xC1112B6A) - 1341789993)) & 0x4E6AEEFA) + (((v238 ^ 0xC1112B6A) - 1341789993) ^ 0x2735777D);
  unsigned int v241 = (v231 ^ 0x4DD6C0D7) - v228 - ((2 * ((v231 ^ 0x4DD6C0D7) - v228) - 872433272) & 0x85CCCD14) - 1461304498;
  v175[434] = v239 ^ 0x30;
  v175[265] = v228 - ((2 * v228 + 26) & 0x78) + 73;
  unsigned int v242 = v235 + 862574254 - ((2 * v235 - 940341970) & 0x9EE0282E);
  unsigned int v243 = ((2 * (v238 ^ v237)) & 0xBB67BFA6 ^ 0x92248D80) + (v238 ^ v237 ^ 0x36A1993B);
  v175[601] = (v235 - 82 - ((2 * v235 + 46) & 0x2E)) ^ 0x2B;
  v175[170] = ((v233 ^ 0x4B) + 13 + v228 - ((2 * ((v233 ^ 0x4B) + 13 + v228)) & 0x12) + 9) ^ 0x35;
  int v244 = v241 ^ ((v233 ^ 0x6017174B)
               + 1013121805
               + v228
               - ((2 * ((v233 ^ 0x6017174B) + 1013121805 + v228)) & 0x5E093812)
               - 1358652407);
  unsigned int v245 = v243 - ((2 * v243 + 120878320) & 0xD9C44F58) + 1887199780;
  v175[3] = v238 ^ 0xEA;
  int v246 = v238 ^ v239;
  v175[696] = v241 ^ 0xB6;
  v175[529] = v225 - 98;
  unsigned int v247 = v228 - ((2 * v228 + 848263726) & 0xE8ED3370) - 1916905777;
  unsigned int v248 = ((2 * (v241 ^ v242)) & 0x7BDFFD9C ^ 0x1B0CE518) + (v241 ^ v242 ^ 0xB0798C53);
  unsigned int v249 = (v241 ^ 0xC2E6668A) + (v244 ^ 0x921D057C);
  int v250 = ((1013302663 - v243) & 0x39AB6EF9) + v240 - 657815420 + (v245 & 0x39AB6EF9 ^ 0x28A226A8);
  unsigned int v251 = ((2 * (v250 + (v246 ^ 0x69265C25))) & 0xFBFFFBDE) + ((v250 + (v246 ^ 0x69265C25)) ^ LODWORD(STACK[0x480]));
  int v252 = v245 ^ 0x6CE227AC;
  int v253 = -996515102 - (((v238 ^ 0x3EEED495) + 1341789993) & 0x56C693F2) - ((v240 + 1489668227) & 0x56C693F2);
  int v254 = v248 - ((2 * v248 + 112998138) & 0x2D6E8B3C) - 1173004005;
  int v255 = (v220 & 0x2E ^ 0x28 | v220 & 0x2E ^ 6) ^ 0x2E ^ v253;
  v175[865] = v237 ^ 2;
  v175[75] = v247 ^ 0x84;
  unsigned int v256 = (v254 ^ 0x96B7459E)
       + (v244 ^ 0x6DE2FA83)
       + 968904759
       - ((2 * ((v254 ^ 0x96B7459E) + (v244 ^ 0x6DE2FA83))) & 0x7380A06E);
  unsigned int v257 = (v245 ^ 0x6CE227AC)
       + (v246 ^ 0x96D9A3DA)
       - ((2 * ((v245 ^ 0x6CE227AC) + (v246 ^ 0x96D9A3DA))) & 0x5F703DB8)
       - 1346887972;
  LOBYTE(v213) = ((((v248 - ((2 * v248 - 6) & 0x3C) + 27) & 0xBC ^ 0x9C) + ((-126 - v248) & 0xBC)) | 0x20) ^ (v213 - 10);
  v175[244] = v257 ^ 0x5C;
  LOBYTE(v237) = v251 - ((2 * v251 + 34) & 0x78) - 51;
  v175[770] = v237 - ((2 * v237) & 0x78) + 60;
  unsigned int v258 = v249 + 1;
  v175[339] = v213 - ((2 * v213) & 0x78) + 60;
  v175[411] = (v248 - ((2 * v248 - 6) & 0x3C) + 27) ^ 0xA2;
  v175[937] = v256 ^ 0xB;
  int v259 = v254 ^ v247;
  v175[506] = v249 + 1 - 2 * ((v249 + 17) & 0x3E ^ (v249 + 1) & 2) + 12;
  v175[675] = (v243 - ((2 * v243 - 16) & 0x58) + 36) ^ 0x2C;
  int v260 = v256 ^ 0x39C05037;
  int v261 = v259 ^ v256;
  unsigned int v262 = ((2 * (v248 - 783448791 + (v256 ^ 0x67A89B24))) & 0xE93A9EE4)
       + ((v248 - 783448791 + (v256 ^ 0x67A89B24)) ^ 0xF49D4F72);
  unsigned int v263 = (v225 - 2141360328 + v255 + 1826760620 - ((2 * (v225 - 2141360328 + v255)) & 0xD9C44F58)) ^ v245 ^ v257;
  unsigned int v264 = (v257 ^ 0xF1D0D5CF) + v243;
  int v265 = v248 - 391090082 + ~((2 * v248 + 402218036) & 0x39678486);
  int v266 = v243 - ((2 * v243 + 410098218) & 0x3315D90E) - 977028708;
  unsigned int v267 = ((2 * (v250 + (v266 ^ 0xE6751378) + v252)) & 0xFE7FFDBE) + ((v250 + (v266 ^ 0xE6751378) + v252) ^ 0xFF3FFEDF);
  unsigned int v268 = ((2 * (v258 + (v265 ^ 0xE34C3DBC) - 374253615 + v260)) & 0xFBE4E79E)
       + ((v258 + (v265 ^ 0xE34C3DBC) - 374253615 + v260) ^ 0x7DF273CF);
  v175[149] = v263 ^ 0x4F;
  v175[842] = v261 ^ 0x3E;
  unsigned int v269 = (v263 ^ 0xF1D0D5CF) - v264;
  unsigned int v270 = ((2 * ((v261 ^ 0x5694702) - 191017102 - v262)) & 0xE9FF37DC)
       + (((v261 ^ 0x5694702) - 191017102 - v262) ^ 0x74FF9BEE);
  v175[580] = v267 - 95;
  v175[316] = v268 + (~(2 * v268 + 98) | 0x87) + 110;
  v175[221] = (v248 + 94 + ~((2 * v248 + 52) & 0x86)) ^ 0x7F;
  v175[54] = v264 - 92;
  unsigned int v271 = ((2 * (v264 - 1316379612)) & 0x3DF1F7F6 ^ 0x19409054) + ((v264 - 1316379612) ^ 0xF35CB7D5);
  unsigned int v272 = (((1354175528 - v248 - ((671523786 - 2 * v248) & 0x39678486)) ^ v265) & 0x4FFA1729)
       + v267
       + v264
       + 1649380892
       + v271;
  int v273 = v266 ^ LODWORD(STACK[0x47C]);
  int v274 = v271 - 2 * ((v271 + 1713339546) & 0x5E361037 ^ ((v264 + 36) ^ 0xD5) & 1) - 1001026352;
  v175[747] = v262 - ((2 * v262 + 28) & 0x78) - 54;
  unsigned int v275 = v269 + v273;
  v175[485] = v266 ^ 7;
  unsigned int v276 = v269 - v271;
  int v277 = (((v262 + 191017102) ^ 0x6DA44C2E) + 442598089 - ((2 * ((v262 + 191017102) ^ 0x6DA44C2E)) & 0x34C30592)) ^ 0x1A6182C9;
  unsigned int v278 = ((2 * (v262 + v268 - 1922024257 + v277)) & 0xF7FCCD36) + ((v262 + v268 - 1922024257 + v277) ^ 0xFBFE669B);
  unsigned int v279 = ((2 * (v277 - 2061993835)) & 0xFFFDFAFE) + ((v277 - 2061993835) ^ 0xFFFEFD7F);
  v175[557] = v279 - ((2 * v279 + 2) & 0x78) - 67;
  unsigned int v280 = v270 + (v265 ^ 0x5D3C4C4);
  LOBYTE(v271) = v276 - 62;
  unsigned int v281 = v276 + v275;
  unsigned int v282 = v281 - 1732952097;
  v175[916] = v271;
  v175[390] = v272 - 123;
  v175[126] = v278 - ((2 * v278 + 74) & 0x78) - 95;
  unsigned int v283 = ((2 * (v275 + 1316379612 + (v274 ^ 0xDE361036))) & 0xEB7F7AFC)
       + ((v275 + 1316379612 + (v274 ^ 0xDE361036)) ^ 0x75BFBD7E);
  unsigned int v284 = v283 + (v274 ^ 0xF130C899);
  unsigned int v285 = v281 + v284 + 105732265;
  unsigned int v286 = v270 - v279;
  v175[652] = v286 - ((2 * v286 + 34) & 0x78) - 51;
  v175[31] = v280 + (~(2 * v280 + 36) | 0x87) + 79;
  unsigned int v287 = v280 + 1495823313 + v286;
  LOBYTE(v286) = v274 ^ 0xB6;
  unsigned int v288 = v278 - 1059525833 + v287;
  unsigned int v289 = v285 - 241262063;
  v175[295] = v275 + 92;
  v175[821] = v286;
  unsigned int v290 = v280 + 668084876 + v279;
  unsigned int v291 = v284 + 105732265 + v282;
  int v292 = ((v285 + 985670903) ^ (v272 + 2132737860 + v282))
       + 1059718141
       - ((2 * ((v285 + 985670903) ^ (v272 + 2132737860 + v282))) & 0x7E5407FA);
  int v293 = v290 - 814688662 + ((v279 + 66177) ^ 0x2F06D8AF);
  unsigned int v294 = v293 + v287;
  v175[726] = v284 - 87 + v282 - 104;
  v175[462] = v290
            + 106
            + ((v279 - 127) ^ 0xAF)
            + v287
            + (~(2 * (v290 + 106 + ((v279 - 127) ^ 0xAF) + v287) + 94) | 0x87)
            - 84;
  v175[((v292 & 0xC8 ^ 0x88) + (v292 & 0xC8 ^ 0x40)) & 0xF8] = v292 ^ 0x7D;
  unsigned int v295 = ((v294 + 1351989103) ^ v288) + 181488540 + (~(2 * ((v294 + 1351989103) ^ v288)) | 0xEA5D68C7) + 1;
  v175[367] = v290 + 106 + ((v279 - 127) ^ 0xAF) - ((2 * (v290 + 106 + ((v279 - 127) ^ 0xAF)) + 58) & 0x78) - 39;
  int v296 = v289 + v284 - ((2 * (v289 + v284) + 650349264) & 0x4850AB7E) - 141944025;
  int v297 = ((2 * v296) & 0x53FADEFC ^ 0x2AA50BC) + (v296 ^ 0x28A857A1);
  v175[893] = v295 ^ 0xA0;
  v175[798] = v290 - ((2 * v290 + 66) & 0x78) - 99;
  LOBYTE(v282) = ((((v284 - 87 + v282 + 40) & 0x9F ^ 0x9F) + ((v284 - 87 + v282 + 40) & 0x9F)) ^ 0x3C)
               + (((v283 - ((2 * v283 - 72) & 0xC6) - 1) ^ 1 | (3 - v283)) & 0x19);
  unsigned int v298 = v289 + ((v283 - ((2 * v283 + 36167608) & 0x5C6F6C6) - 738759873) ^ 0x2E37B63) - 1308751188 + v297;
  unsigned int v299 = (v292 ^ 0x3F2A03FD) - v291 - ((2 * ((v292 ^ 0x3F2A03FD) - v291) + 1797904220) & 0x86EACFDE) + 2030719901;
  LOBYTE(v282) = (v282 - ((2 * v282) & 0xC6) + 99) ^ (v283 - ((2 * v283 - 72) & 0xC6) + 63);
  v175[631] = v284 + 2;
  unsigned int v300 = v293 - 464249588 + v294;
  v175[105] = v282 - ((2 * v282) & 0x78) + 60;
  unsigned int v301 = v291 - 1418446166 + v298;
  v175[10] = v299 ^ 0x6F;
  unsigned int v302 = ((2 * v300) & 0xBD9DFEDE ^ 0x898DAC0) + (v300 ^ 0xFBB3920F);
  unsigned int v303 = v290 + v294 + v302;
  LOBYTE(v283) = v296 ^ 0x5F;
  int v304 = v294 + 2079114399 + v303 + 438460793;
  v175[441] = v283;
  v175[177] = v302 - ((2 * v302 + 34) & 0x78) - 51;
  v175[272] = v294 - 97 + v303 + 121 - ((2 * (v294 - 97 + v303 + 121) + 70) & 0x78) - 97;
  int v305 = (v295 ^ 0xAD14B9C) - v294 - ((2 * ((v295 ^ 0xAD14B9C) - v294) + 236204718) & 0x31CC38A4) + 535836073;
  v175[608] = v303 + 121 - 2 * ((v303 - 95) & 0x3F ^ (v303 + 121) & 3) + 36;
  unsigned int v306 = -1752707902 - v291 - ((853416058 - 2 * v291) & 0xFC31810A);
  unsigned int v307 = ((2 * ((v306 ^ 0x1E73F7A) - 1072573427 + v297)) & 0xA95E4F7E)
       + (((v306 ^ 0x1E73F7A) - 1072573427 + v297) ^ 0x54AF27BF);
  v175[536] = v301 + 85;
  unsigned int v308 = -850488811 - v294 - ((-708283444 - 2 * v294) & 0xC4D4B05E);
  unsigned int v309 = v304 + v302;
  v175[703] = v305 ^ 0x6E;
  v175[872] = v298 + 60;
  unsigned int v310 = v297 + 2133589502 + v301;
  int v311 = ((2 * (v302 + (v308 ^ 0x1D95A7D0) + 188761116)) & 0x7CFEF1FC)
       + ((v302 + (v308 ^ 0x1D95A7D0) + 188761116) ^ 0x3E7F78FE);
  v175[346] = v297 - 2 + v301 - 92;
  v175[944] = v311 - 2 * ((v311 + 2) & 0x3D ^ v311 & 1) + 62;
  unsigned int v312 = v307 + (v299 ^ 0x1AC0C72A);
  unsigned int v313 = ((2 * v306) & 0xDEFCFFEE ^ 0x521012C6) + (v306 ^ 0x56F7F694);
  unsigned int v314 = v310 - v313;
  unsigned int v315 = v311 + 249275625 + (v305 ^ 0xC153BC97);
  v175[513] = v315 - ((2 * v315 + 50) & 0x78) + 85;
  unsigned int v316 = ((2 * v308) & 0xF7EFBBBE ^ 0x43E62392) + (v308 ^ 0xDE0CCC16);
  unsigned int v317 = v315 - v316;
  v175[251] = ((2 * ((v306 ^ 0x7A) + 13 + v297)) & 0x7E) + (((v306 ^ 0x7A) + 13 + v297) ^ 0xBF) - 63;
  v175[418] = v316 - ((2 * v316 + 66) & 0x78) + 93;
  v175[82] = v309 - ((2 * v309 + 126) & 0x78) - 5;
  v175[682] = v306 ^ 0xE3;
  unsigned int v318 = v309 - v316 - ((2 * (v309 - v316) - 817237700) & 0xFDDF9D84) + 1721026400;
  int v319 = ((v314 + 507358491) ^ (v313 + 1003640906 + v307))
       - 1815950607
       - ((2 * ((v314 + 507358491) ^ (v313 + 1003640906 + v307))) & 0x278595E2);
  unsigned int v320 = v312 - v313;
  int v321 = v318 ^ (v316 - 980899549 + v311);
  int v322 = v319 ^ (v313 + 1363589942);
  v175[777] = v312 - 63;
  int v323 = v321 ^ (v316 - 993174194);
  unsigned int v324 = ((2 * (v314 + 507358491 + (v322 ^ 0x6C3D350E) + 1)) & 0xFEFFFFFA)
       + ((v314 + 507358491 + (v322 ^ 0x6C3D350E) + 1) ^ 0x7F7FFFFD);
  unsigned int v325 = ((2 * ((v318 ^ 0x7EEFCEC2) + (v323 ^ 0x8110313D) + 1)) & 0xD6F3FDDC)
       + (((v318 ^ 0x7EEFCEC2) + (v323 ^ 0x8110313D) + 1) ^ 0x6B79FEEE);
  unsigned int v326 = v317 - ((2 * v317 - 115392186) & 0xBEC7E4A4) - 604794123;
  v175[(-775285296 * (((v314 + 6938155) & 0xE0CBAF5) + ((261497300 - v314) & 0xE0CBAF5))) | 0x8CLL] = v324 - 125;
  v175[754] = v321 ^ 0xFE;
  v175[849] = v325 + ~(2 * ((v325 + 18) & 0x3D ^ v325 & 1)) + 79;
  v175[61] = v319 ^ 0x71;
  v175[323] = v326 ^ 0x6E;
  v175[228] = v323 ^ 0xFE;
  unsigned int v327 = ((2 * (v322 ^ (v320 - 389924637))) & 0xBF76A9FA ^ 0x270481E2) + (v322 ^ (v320 - 389924637) ^ 0xCC799E0C);
  v175[587] = v320 + 99;
  unsigned int v328 = v324 - v327;
  v175[492] = v322 ^ 0x71;
  unsigned int v329 = ((2 * (v326 ^ v323)) & 0xFB6FF3FE ^ 0x43087120) + (v326 ^ v323 ^ 0x5C3BC56F);
  unsigned int v330 = v325 - v329;
  unsigned int v331 = ((2 * ((v328 - 532982528) ^ v319)) & 0xFFFFAFDA ^ 0x278585C2) + ((v328 - 532982528) ^ v319 ^ 0xEC3D1D1C);
  unsigned int v332 = v328 - ((2 * v328 - 609183602) & 0xD2EFD418) + 1464874579;
  unsigned int v333 = ((2 * ((v330 + 306051857) ^ v321)) & 0xFBEDFE6E ^ 0xF9CD9C04) + ((v330 + 306051857) ^ v321 ^ 0x831931F5);
  int v334 = v329 - v333 - ((2 * (v329 - v333) + 8260208) & 0x2EA1A8A0) - 1752180344;
  unsigned int v335 = v333 - v330;
  unsigned int v336 = v327 - v331;
  int v337 = v336 - ((2 * v336 + 1082721760) & 0x7D7C40D2) + 1594008409;
  unsigned int v338 = v331 - v328;
  v175[923] = v328 - 57;
  int v339 = v330 - 2 * ((v330 + 534442584) & 0x6942F45A ^ v330 & 2) + 152954544;
  v175[133] = v334 ^ 0x6C;
  unsigned int v340 = (v322 ^ 0x93C2CAF1) + 2147473390 + (v332 ^ 0x968815F3) - v331;
  unsigned int v341 = ((2 * v340) & 0xD7DFCF6E) + (v340 ^ 0xEBEFE7B7);
  v175[828] = v338 - 109;
  int v342 = (v323 ^ 0x7EEFCEC2) - v333 + (v339 ^ 0x16BD0BA7) - 34144456;
  int v343 = ((2 * v342) & 0x45F7DD2E) + (v342 ^ 0x22FBEE97);
  v175[659] = v339 ^ 0x64;
  int v344 = v337 ^ v332 ^ 0x57C9CA65;
  unsigned int v345 = v341 + v344;
  unsigned int v346 = (v337 ^ 0x3EBE2069)
       + v338
       - 1595238051
       + 1767539139
       - ((2 * ((v337 ^ 0x3EBE2069) + v338 - 1595238051)) & 0xD2B50386);
  v175[564] = v335 + ~(2 * ((v335 + 56) & 0x3E ^ v335 & 2)) - 11;
  unsigned int v347 = (v344 ^ (v338 - 1595238051)) - ((2 * (v344 ^ (v338 - 1595238051))) & 0xCC18A456) - 435400149;
  v175[38] = v343 - ((2 * v343 + 82) & 0x78) - 91;
  unsigned int v348 = ((2 * (v345 + 336599113 + (v346 ^ 0x695A81C3))) & 0xF3F7FFF6)
       + ((v345 + 336599113 + (v346 ^ 0x695A81C3)) ^ 0x79FBFFFB);
  v175[397] = v336 + 112;
  int v349 = v334 ^ v339;
  int v350 = v347 ^ v346;
  v175[302] = v341 - 55;
  unsigned int v351 = v343 + (v349 ^ 0xFE122008);
  unsigned int v352 = (v334 ^ 0x1750D450)
       + v335
       - 252654590
       - 764855438
       - ((2 * ((v334 ^ 0x1750D450) + v335 - 252654590)) & 0xA4D276E4);
  unsigned int v353 = (v349 ^ (v335 - 252654590) ^ 0xFE122008)
       - 2 * ((v349 ^ (v335 - 252654590) ^ 0xFE122008) & 0x72E73F64 ^ (v349 ^ (v335 - 252654590)) & 4)
       - 219725984;
  unsigned int v354 = ((2 * (v351 - 586935959 + (v352 ^ 0xD2693B72))) & 0xD7F7FDC4)
       + ((v351 - 586935959 + (v352 ^ 0xD2693B72)) ^ 0xEBFBFEE2);
  unsigned int v355 = v335 - v354 - ((2 * (v335 - v354) - 1176922680) & 0xFC7D019A) - 617919567;
  int v356 = v353 ^ v352;
  v175[900] = v356 ^ 0x2E;
  v175[733] = v347 ^ 0xAB;
  v175[374] = v355 ^ 0xF1;
  unsigned int v357 = v347 ^ 0x97FC0679 ^ (v338 - v348 - ((2 * (v338 - v348) + 902640304) & 0xE3E0A8A4) - 1932071510);
  unsigned int v358 = ((2 * (v357 + (v350 ^ 0x8F56D3E8))) & 0xDEFDFEEE) + ((v357 + (v350 ^ 0x8F56D3E8)) ^ 0x6F7EFF77);
  v175[469] = v353 ^ 0x5C;
  unsigned int v359 = ((2 * (v355 ^ v353)) & 0xFAFFEABE ^ 0x18B36A1A) + (v355 ^ v353 ^ 0x71A64AF2);
  unsigned int v360 = ((2 * ((v356 ^ 0x208E0412) - 2105537887 + v359)) & 0xFFE0D5F2)
       + (((v356 ^ 0x208E0412) - 2105537887 + v359) ^ 0x7FF06AF9);
  v175[638] = (v338 - v348 - ((2 * (v338 - v348) - 80) & 0xA4) - 86) ^ 0xD2;
  v175[805] = v354 - 2 * ((v354 + 30) & 0x3D ^ v354 & 1) + 90;
  int v361 = v358 + v348 - 2 * ((v358 + v348 + 377815182) & 0x3DA6557F ^ (v358 + v348) & 1) + 1412126220;
  v175[112] = v348 - 123;
  unsigned int v362 = v360 + v354 - ((2 * (v360 + v354) + 673655882) & 0xED92FDE8) + 182261017;
  v175[207] = v350 ^ 0x68;
  unsigned int v363 = (((v362 ^ 0x76C97EF4) - 1113796401) ^ 0xFF7F65FF)
       + 1474034552
       + ((2 * ((v362 ^ 0x76C97EF4) - 1113796401)) & 0xFEFECBFE);
  unsigned int v364 = ((2 * ((v361 ^ 0x3DA6557E) - 1113796401)) & 0xD3F77FDE) + (((v361 ^ 0x3DA6557E) - 1113796401) ^ 0x69FBBFEF);
  LODWORD(STACK[0x6F0]) = ((v357 - 1778106351 + v364) ^ 0xFFF5FEFE)
                        + 1006516140
                        + ((2 * (v357 - 1778106351 + v364)) & 0xFFEBFDFC);
  int v365 = (2 * ((STACK[0x50C] & 1) == 0)) & 0xFB | (4 * ((STACK[0x50C] & 1) == 0));
  LODWORD(STACK[0x700]) = v359 - 1552486133 + v363;
  return (*(uint64_t (**)(void))(STACK[0x6F8] + 8 * (LODWORD(STACK[0x708]) ^ v365)))();
}

uint64_t sub_10011C904(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  int v6 = (a4 - 1867) | 0x110;
  *int v9 = a1;
  *int v10 = (v4 + v6 - 496) ^ v11;
  int v7 = v6 + 1898;
  uint64_t v15 = v13;
  unsigned int v16 = v6
      + 544
      + 366490169 * ((((2 * &v14) | 0x2A88D43A) - &v14 + 1790678499) ^ 0x83EA3C59)
      + 3480;
  (*(void (**)(uint64_t *))(v5 + 8 * (v6 + 4192)))(&v14);
  unsigned int v16 = v7 + 366490169 * ((&v14 & 0x97BE5D10 | ~(&v14 | 0x97BE5D10)) ^ 0x7EEFF4AB) + 2126;
  uint64_t v15 = v12;
  (*(void (**)(uint64_t *))(v5 + 8 * (v7 + 2294)))(&v14);
  return 0;
}

uint64_t sub_10011CA38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  *(_DWORD *)(v26 - 108) = (v22 + 645) ^ (((670209680 - ((v26 - 120) | 0x27F29690) + ((v26 - 120) | 0xD80D696F)) ^ 0xCEA33F2B)
                                        * v25);
  *(void *)(v26 - 120) = v21;
  *(void *)(v26 - 104) = a21;
  uint64_t v27 = (*(uint64_t (**)(uint64_t))(v24 + 8 * (v22 + 4238)))(v26 - 120);
  return (*(uint64_t (**)(uint64_t))(v24
                                            + 8
                                            * ((3907 * (*(_DWORD *)(v26 - 112) == v23 + (v22 ^ 0x403) + 573)) ^ v22)))(v27);
}

uint64_t sub_10011CAE0(uint64_t a1, int a2)
{
  if (a1) {
    BOOL v3 = a2 == 0;
  }
  else {
    BOOL v3 = 0;
  }
  int v4 = v3;
  return (*(uint64_t (**)(void))(v2 + 8 * ((8 * v4) | 0xF22u)))();
}

uint64_t sub_10011CB08(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(v7 + 8 * (((8 * (a7 + 1 == v8 + 48)) | (16 * (a7 + 1 == v8 + 48))) ^ a1)))();
}

uint64_t sub_10011CBFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32)
{
  return sub_100131D84(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32);
}

uint64_t sub_10011CC38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33)
{
  BOOL v36 = HIDWORD(a11) == 2128470945 || ((BYTE4(a11) - 1) & 0xF) != (((v33 ^ 0x11A5) + 1395) ^ 0x5AE);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v34 + 8 * ((39 * (((31 * (v33 ^ 0xA5)) ^ v36) & 1)) ^ v33)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33);
}

uint64_t sub_10011CCA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,int a38,char a39)
{
  return sub_10011CCE4(a1, a2, a3, 3410623136, a5, a6, &a39, a34);
}

uint64_t sub_10011CCE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t *))(v5 + 8 * ((383 * (((2 * LODWORD(STACK[0x308])) & 0x76 ^ 0x36) + (STACK[0x308] & 0x3F ^ 0x71F3DDA0u) - 1911807479 < 0xFFFFFFC0)) ^ (v4 + 2030))))(a1, a2, 2404165213, a4, 3410623008, &STACK[0x2C4]);
}

uint64_t sub_10011CE28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,int a30,int a31)
{
  unsigned int v33 = ((v31 + 1911512546) & 0x8E109FFE ^ 0x12AAA253) + a31;
  unsigned int v34 = a5 + ((v31 - 2002) ^ 0x881801F0);
  int v35 = (v33 < 0xA45064CA) ^ (v34 < 0xA45064CA);
  BOOL v36 = v33 < v34;
  if (v35) {
    BOOL v36 = v34 < 0xA45064CA;
  }
  return (*(uint64_t (**)(void))(v32 + 8 * ((30 * !v36) ^ (v31 - 1467))))();
}

uint64_t sub_10011CE3C@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v2 + 8 * (v1 + 2 * (a1 + ((v1 + 2133) | 0x480u) - 2045 - 1567556227 > 0x7FFFFFFE))))();
}

uint64_t sub_10011CE84(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v7 + 8 * ((((((a4 - 621) ^ 0xBA5) & v4) == 0) * (a4 ^ 0x11D9)) ^ a4)))((v5 - v6));
}

uint64_t sub_10011CEC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(void))(v10 + 8 * (((v9 + ((v7 + 418) ^ (a7 + 3606)) + 1433) * (v8 == a5)) ^ v7)))();
}

uint64_t sub_10011CEF0()
{
  return (*(uint64_t (**)(void))(v3 + 8 * (((*(_DWORD *)(v2 + 1424) == 2137972780) * ((v0 - 2316) ^ v1)) ^ v0)))();
}

uint64_t sub_10011CF20(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v6 + 8 * (((175 * (((a4 - 2907) | 0x808) ^ 0xB48) - 3296) * (v4 == v5)) ^ a4)))();
}

uint64_t sub_10011CF5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, int a14, unsigned int a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, unsigned int a20,int a21,int a22,unsigned int a23,unsigned int a24)
{
  unsigned int v28 = (((&a20 ^ 0x27485AE5) & 0xE1CED1EE | ~(&a20 ^ 0x27485AE5 | 0xE1CED1EE)) ^ 0x1B7709C1)
      * v27;
  a20 = ((a15 >> 15) & 0x1F4) - v28 + 1603256184 + ((((v24 - 50) ^ 0xB27) - 2213) & HIWORD(a15) ^ 0xEBF659FA);
  a21 = (v24 + 500) ^ v28;
  a24 = a14 - v28 - ((2 * a14) & 0xC10CC04A) - 528064475;
  a22 = (HIBYTE(a15) ^ 0x4DBEEFEB) - v28 + ((a15 >> 23) & 0x1D6) - 1226318859;
  a23 = (((a15 >> 7) & 0x1EE) - 537011713 + ((((v24 + 1950320954) & 0x8BC07DF6) - 2279) & (a15 >> 8) ^ 0x3DFBF7F7)) ^ v28;
  uint64_t v29 = (*(uint64_t (**)(unsigned int *))(v25 + 8 * (v24 + 4117)))(&a20);
  *uint64_t v26 = 14;
  return (*(uint64_t (**)(uint64_t))(v25 + 8 * ((27 * ((v26[20] & 0x80) == 0)) ^ (v24 - 50))))(v29);
}

uint64_t sub_10011D0C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v7
                              + 8 * ((((15 * (a5 ^ 0xDC6) - 3018) ^ (a5 - 799682365) & 0x2FAA23DF) * (v5 == v6)) ^ a5)))();
}

uint64_t sub_10011D110(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int *a4)
{
  uint64_t v8 = *a4;
  unint64_t v9 = ((v7 - 0x62BDA5CC38E6D65DLL - 2 * ((v7 - 144) & 0x9D425A33C7192A33)) ^ 0xD32B76F65D51319BLL) * v6;
  *(_DWORD *)(v7 - 120) = v4 + 1749179850 + v9;
  *(_DWORD *)(v7 - 112) = v9 ^ (v4 + 1749179850) ^ 0x12B;
  *(_DWORD *)(v7 - 108) = v9 + v4 + 1661715029;
  *(_DWORD *)(v7 - 144) = ((v4 + 1749179850) ^ 0x18) - v9;
  *(_DWORD *)(v7 - 140) = -(int)v9;
  *(void *)(v7 - 136) = v8 - v9;
  *(void *)(v7 - 128) = v9;
  uint64_t v10 = (*(uint64_t (**)(uint64_t))(v5 + 8 * (v4 - 1153507577)))(v7 - 144);
  return (*(uint64_t (**)(uint64_t))(v5 + 8 * *(int *)(v7 - 116)))(v10);
}

uint64_t sub_10011D1F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, unsigned int a12)
{
  BOOL v14 = (*(uint64_t (**)(void))(v12 + 8 * (v13 ^ 0x170D)))(a12) == (v13 ^ 0x458) - 457;
  return (*(uint64_t (**)(void))(v12 + 8 * ((v14 * ((3 * (v13 ^ 0x6CA)) ^ 0xA29)) ^ v13)))();
}

uint64_t sub_10011D24C@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, int a11)
{
  BOOL v15 = a11 - v13 != 1970101070 || a1 == ((v11 + 2011937830) & 0xBC77E7FF) - 676089842;
  return (*(uint64_t (**)(void))(v12 + 8 * ((193 * v15) ^ v11)))();
}

uint64_t sub_10011D2B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char *a12, int a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, unint64_t *a18, char *a19, char *a20,uint64_t a21,unint64_t *a22)
{
  a18 = &STACK[0x5C6E4E9DBA245391];
  a22 = &STACK[0x72B1F83D1B5D1C8D];
  a20 = a12;
  LODWORD(a19) = (v25 + 2980) ^ (1401278017
                               * ((2 * (&a18 & 0x2A59D3B0) - &a18 - 710529972) ^ 0xD1855AAB));
  (*(void (**)(unint64_t **))(v22 + 8 * (v25 ^ 0x112B)))(&a18);
  HIDWORD(a18) = (v25 + 1505) ^ ((((&a18 | 0x92E552A5)
                                 - &a18
                                 + (&a18 & 0x6D1AAD58)) ^ 0x23ECD46B)
                               * v23);
  a19 = a12;
  a20 = &a14;
  (*(void (**)(unint64_t **))(v22 + 8 * (v25 ^ 0x1129)))(&a18);
  LODWORD(a20) = v25
               - 476588053
               * (((&a18 | 0x9DC783A7) - &a18 + (&a18 & 0x62387C58)) ^ 0x203A87E4)
               + 1848;
  a19 = a12;
  uint64_t v26 = (*(uint64_t (**)(unint64_t **))(v22 + 8 * (v25 ^ 0x1148)))(&a18);
  return (*(uint64_t (**)(uint64_t))(v22
                                            + 8 * ((1408 * (a18 == v24 + 173 * (v25 ^ 0x319) - 1038)) ^ v25)))(v26);
}

uint64_t sub_10011D44C()
{
  uint64_t v11 = v2 - 1;
  int v12 = *v3 - (((v1 + 96) | v7) ^ v6 ^ *v0);
  BOOL v14 = (v12 ^ v4) + v9 + (v10 & (2 * v12)) == v8 && v11 != 0;
  return (*(uint64_t (**)(void))(v5 + 8 * (((2 * v14) | (16 * v14)) ^ v1)))();
}

uint64_t sub_10011D454(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  *(void *)(a1 - 7 + (v7 + v6 - v9)) = *(void *)(v5 - 7 + (v7 + v6 - v9));
  return (*(uint64_t (**)(void))(v10
                              + 8 * ((11 * (((a5 + 1692606903) & 0x9B1CDFFF ^ 0xAF3) + v9 == (v8 & 0xFFFFFFF8))) ^ a5)))();
}

uint64_t sub_10011D4B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(uint64_t))(v11 + 8 * (((a8 + (v8 ^ (v12 + 574)) + 3338) * (v10 == v9)) ^ v8)))(2965703954);
}

uint64_t sub_10011D4EC@<X0>(unsigned int a1@<W0>, int a2@<W2>, int a3@<W8>)
{
  unsigned int v6 = a2 - 165989163;
  int v7 = v5 - v4;
  int v8 = a3 + v5 + 235;
  BOOL v9 = v6 > 0x14DDA6F1;
  if (v6 < a1 != a1 > 0x14DDA6F1) {
    BOOL v9 = v6 < a1;
  }
  return (*(uint64_t (**)(void))(v3 + 8 * ((v9 * (v7 + 19)) ^ v8)))();
}

uint64_t sub_10011D5BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,int a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,char a43)
{
  *((_DWORD *)&a43 + v46) ^= a27;
  return (*(uint64_t (**)(void))(v44
                              + 8
                              * (v45 ^ (v45 + 1278) ^ (8
                                                     * (((((v45 ^ (v45 + 1278)) + 71304996) | 0x40812188) ^ 0xBB3ECC51)
                                                      + v43 == 708269053)))))();
}

uint64_t sub_10011D628@<X0>(uint64_t a1@<X4>, int a2@<W8>)
{
  *(unsigned char *)(a1 + v3 + v4) = v5;
  return (*(uint64_t (**)(void))(v7 + 8 * (((v3 + 1 + v4 < (v2 ^ 0xFFuLL)) * v6) ^ a2)))();
}

uint64_t sub_10011D65C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 8 * ((5862 * (*(_DWORD *)(a8 + 72) == ((v8 - 159) | 0x708) - 50542873 + ((v8 - 159) | 0x708) - a7 + 1422)) ^ ((v8 - 159) | 0x708))))(a1, a2, a3, a4, a5, a6, a7, a8);
}

uint64_t sub_10011D6C0@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((99 * (((v2 == 0) ^ (a1 + 71)) & 1)) ^ a1)))();
}

uint64_t sub_10011D6F4()
{
  STACK[0x310] = v1;
  LODWORD(STACK[0x3B0]) = v2;
  LODWORD(STACK[0x710]) = v0;
  STACK[0x6F8] = v3;
  char v5 = *(uint64_t (**)(uint64_t))(v3
                                         + 8
                                         * (int)((((((v2 ^ 0xC07) - 1242124780) & 0x4A094A77)
                                                 + (((v2 ^ 0xC07) - 1019) ^ 0xFFFFF87F))
                                                * (v0 == v4)) ^ v2 ^ 0xC07));
  LODWORD(STACK[0x718]) = -346690451;
  return v5(359666762);
}

uint64_t sub_10011D7AC@<X0>(int a1@<W0>, int a2@<W1>, int a3@<W2>, int a4@<W3>, int a5@<W4>, int a6@<W5>, int a7@<W7>, int a8@<W8>, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,int a45)
{
  LODWORD(STACK[0x67C]) = LODWORD(STACK[0x5EC]) + LODWORD(STACK[0x500]);
  LODWORD(STACK[0x680]) = LODWORD(STACK[0x5E8]) + LODWORD(STACK[0x504]);
  LODWORD(STACK[0x6A0]) = LODWORD(STACK[0x5F0]) + LODWORD(STACK[0x4FC]);
  LODWORD(STACK[0x688]) = LODWORD(STACK[0x508]) + LODWORD(STACK[0x5FC]);
  LODWORD(STACK[0x6D8]) = LODWORD(STACK[0x50C]) + v48;
  LODWORD(STACK[0x5DC]) += 64;
  LODWORD(STACK[0x6E0]) = LODWORD(STACK[0x4F8]) + LODWORD(STACK[0x6AC]);
  int v54 = (LODWORD(STACK[0x614]) - 124794161) & 0x77032EF;
  int v55 = (v51 ^ a7) - ((((998 * (LODWORD(STACK[0x614]) ^ 0x4A5)) ^ 0x2BA42662) + 2 * (v51 ^ a7)) & 0x290F0B4A);
  LODWORD(STACK[0x700]) = v54;
  int v56 = v45 - ((2 * a5 + 587178746) & 0x30513710);
  unsigned int v57 = ((2 * (v55 + 710514300)) & 0xD45BDE52 ^ 0xB0A42) + ((v55 + 710514300) ^ 0xFEAA6A8C);
  unsigned int v58 = v57 - ((2 * v57) & 0xE5986106);
  int v59 = v50 - (((a3 << (v54 - 101)) + 996039830) & 0x35900030) + 830942090;
  unsigned int v60 = a8 + 1603977771 + (v59 ^ 0x9AC80018) + 1528739216 - ((2 * (a8 + 1603977771 + (v59 ^ 0x9AC80018))) & 0xB63D6B20);
  v56 -= 1360541958;
  LODWORD(STACK[0x6AC]) = a2 ^ 0xAC60E013;
  unsigned int v61 = (v56 ^ 0x18289B88)
      + (a2 ^ 0xAC60E013)
      - 567687166
      - ((2 * ((v56 ^ 0x18289B88) + (a2 ^ 0xAC60E013))) & 0xBC539004);
  int v62 = ((2 * (v58 - 221499261)) & 0x2FD7F208 ^ 0x951A200) + ((v58 - 221499261) ^ 0x5B472CDD);
  unsigned int v63 = (v49 ^ 0x42E85C9A)
      - 1511535791
      + (v60 ^ 0x5B1EB590)
      + 99606954
      + (~(2 * ((v49 ^ 0x42E85C9A) - 1511535791 + (v60 ^ 0x5B1EB590))) | 0xF4203CAB);
  unsigned int v64 = ((2 * ((v61 ^ 0xDE29C802) + (v53 ^ 0x745326C3))) & 0xDB3EF57E)
      + (((v61 ^ 0xDE29C802) + (v53 ^ 0x745326C3)) ^ 0xED9F7ABF);
  LODWORD(STACK[0x65C]) = v62;
  unsigned int v65 = v62 - ((2 * v62 - 732176814) & 0xE14E3BDA) + 1523911958;
  int v66 = v65 ^ v61;
  LODWORD(STACK[0x66C]) = v65 ^ v61;
  unsigned int v67 = (v56 ^ 0xC601538A ^ v61) + (v65 ^ v61 ^ 0x51712A10) + 1;
  unsigned int v68 = v59 ^ 0xC1D6B588 ^ v60;
  unsigned int v69 = (a6 ^ 0x71CC4CB6) - ((2 * (a6 ^ 0x71CC4CB6) + 70504538) & 0xFC13736E) - 2145148444;
  int v70 = v60 ^ v69;
  LODWORD(STACK[0x650]) = v69;
  unsigned int v71 = (v70 ^ 0xDAE8F3D8) + 1;
  LODWORD(STACK[0x670]) = v71;
  unsigned int v72 = v63 + 1;
  int v73 = v71 + v68 - ((2 * (v71 + v68)) & 0x6569E266) - 1296764621;
  unsigned int v74 = ((a6 ^ 0x71CC4CB6) - ((2 * (a6 ^ 0x71CC4CB6) + 70504538) & 0xFC13736E) - 2145148444) ^ 0xCCBD4884 ^ v73;
  unsigned int v75 = v72;
  LODWORD(STACK[0x630]) = v72;
  int v76 = v73 ^ v72 ^ v70;
  int v77 = v72 ^ v70;
  LODWORD(STACK[0x664]) = v72 ^ v70;
  unsigned int v78 = v74 + (v76 ^ 0x6DB3E341) + 1 - ((2 * (v74 + (v76 ^ 0x6DB3E341) + 1)) & 0xCF6B4A40);
  int v79 = v67 - ((2 * v67) & 0xF83AC6A) - 2017339851;
  unsigned int v80 = v65 ^ 0xF766CBD8 ^ v79;
  LODWORD(STACK[0x644]) = v64;
  LODWORD(STACK[0x63C]) = v64 - 1203220334;
  int v81 = v66 ^ (v64 - 1203220334);
  int v82 = v79 ^ v81;
  int v83 = 2 * v64 + 936915458;
  LODWORD(STACK[0x648]) = v83;
  int v84 = v64 + 1515859069 - (v83 & 0x7CDC3F30);
  unsigned int v85 = v80 + (v82 ^ 0xD6B0FC25) + 1 - ((2 * (v80 + (v82 ^ 0xD6B0FC25) + 1)) & 0x30C440E6) - 1738399629;
  LODWORD(STACK[0x640]) = v85;
  int v86 = v84 + 3100;
  int v87 = v81 ^ 0x58072537;
  LODWORD(STACK[0x668]) = v81 ^ 0x58072537;
  int v88 = v85 ^ (v84 + 3100);
  unsigned int v89 = ((2 * (v87 + (v88 ^ 0xD9F3C014) + 1)) & 0x2EFBF7FE) + ((v87 + (v88 ^ 0xD9F3C014) + 1) ^ 0x177DFBFF);
  unsigned int v90 = ((2 * ((v86 ^ 0xBE6E1F98) + 394132479 - v89)) & 0xF53CF75E)
      + (((v86 ^ 0xBE6E1F98) + 394132479 - v89) ^ 0xFA9E7BAF);
  LODWORD(STACK[0x624]) = v90;
  unsigned int v91 = (v75 ^ 0x5EFE1AA) - ((2 * (v75 ^ 0x5EFE1AA) - 951611170) & 0xE7529C86) + 1464669874;
  LODWORD(STACK[0x634]) = v91;
  LODWORD(STACK[0x638]) = v78 + 1739957536;
  int v92 = (v78 + 1739957536) ^ v91;
  unsigned int v93 = (v77 ^ 0xD6711D55) + (v92 ^ 0xEBE3149C) + 1;
  int v94 = ((2 * v93) & 0x79B7CFFC) + (v93 ^ 0x3CDBE7FE);
  unsigned int v95 = (v92 ^ 0x141CEB63 ^ (v94 - 1021044734))
      - 425880033
      - ((2 * (v92 ^ 0x141CEB63 ^ (v94 - 1021044734))) & 0xCD3B2C3E);
  unsigned int v96 = (v88 ^ 0x260C3FEB ^ (v89 - 394132479))
      + 1115512055
      - ((2 * (v88 ^ 0x260C3FEB ^ (v89 - 394132479))) & 0x84FAB9EE);
  int v97 = (v75 ^ 0x5EFE1AA) - v94 - ((2 * ((v75 ^ 0x5EFE1AA) - v94) + 953116252) & 0x5EA97A56);
  unsigned int v98 = v94 - 2 * ((v94 + 233126332) & 0xC49F37B ^ v93 & 1);
  LODWORD(STACK[0x604]) = v96;
  unsigned int v99 = ((2 * (v90 + 90276945 + (v96 ^ 0x427D5CF7))) & 0x8FE9C7CA)
      + ((v90 + 90276945 + (v96 ^ 0x427D5CF7)) ^ 0x47F4E3E5);
  LODWORD(STACK[0x620]) = v97 - 876842919;
  LODWORD(STACK[0x600]) = v95;
  unsigned int v100 = ((v97 - 876842919) ^ 0xAF54BD2B)
       + (v95 ^ 0xE69D961F)
       + 1745644956
       - ((2 * (((v97 - 876842919) ^ 0xAF54BD2B) + (v95 ^ 0xE69D961F))) & 0xD018DB38);
  int v101 = v96 ^ v82;
  int v102 = ((v96 ^ 0x427D5CF7) - ((2 * (v96 ^ 0x427D5CF7) + 166307116) & 0x2A98BC02) + 440479895) ^ v101;
  LODWORD(STACK[0x5FC]) = v102;
  unsigned int v103 = v99;
  LODWORD(STACK[0x508]) = v99;
  int v104 = (v99 - 1275912484) ^ v101;
  int v105 = v95 ^ v76;
  unsigned int v106 = ((v95 ^ 0xE69D961F) - 2064330090) ^ v105;
  LODWORD(STACK[0x5E8]) = v106;
  int v107 = v100 ^ v105;
  int v108 = v89 - ((2 * v89 + 109464438) & 0x6C560A00) + 2037263035;
  int v109 = v108;
  LODWORD(STACK[0x628]) = v108;
  int v110 = v108 ^ 0x3593DF5D;
  LODWORD(STACK[0x500]) = v108 ^ 0x3593DF5D;
  unsigned int v111 = ((2 * ((v108 ^ 0x3593DF5D) + (v102 ^ 0xF15AEB5D) + 1)) & 0xC5FDFB7E)
       + (((v108 ^ 0x3593DF5D) + (v102 ^ 0xF15AEB5D) + 1) ^ 0xE2FEFDBF);
  unsigned int v112 = v98 + 707734838;
  int v113 = (v106 ^ 0x7BF560D0) + 1;
  LODWORD(STACK[0x5F0]) = v113;
  int v114 = (v98 + 707734838) ^ 0xFF12927;
  unsigned int v115 = v112;
  unsigned int v116 = ((2 * (v113 + v114)) & 0xEFF26DF4) + ((v113 + v114) ^ 0xF7F936FA);
  int v322 = v51;
  unsigned int v117 = (v109 ^ 0xCA6C20A2) + 1;
  unsigned int v118 = ((2 * ((v104 ^ 0x548F8B13) + v117)) & 0xAB3FBFBA) + (((v104 ^ 0x548F8B13) + v117) ^ 0xD59FDFDD);
  LODWORD(STACK[0x62C]) = v111;
  unsigned int v119 = v111 + 1992145911 + (v109 ^ 0xCA6C20A2 ^ (v111 + 1992145911));
  int v120 = v109 ^ 0x1AA6803F;
  unsigned int v121 = v104 ^ v109 ^ 0x1AA6803F ^ (((v103 + 208357753) ^ 0xF0DB158E)
                                   + 792026978
                                   - ((2 * ((v103 + 208357753) ^ 0xF0DB158E)) & 0x5E6ABEC4));
  LODWORD(STACK[0x504]) = v121;
  int v122 = (((v119 + 1) ^ v117) + 792026978 - ((2 * ((v119 + 1) ^ v117)) & 0x5E6ABEC4)) ^ v120;
  unsigned int v320 = v112;
  unsigned int v123 = ((2 * ((v320 ^ 0xF00ED6D8) + (v107 ^ 0x23603303) + 1)) & 0xDF7FFFBE)
       + (((v320 ^ 0xF00ED6D8) + (v107 ^ 0x23603303) + 1) ^ 0xEFBFFFDF);
  unsigned int v124 = ((2 * (v114 - 1074086811)) & 0xECD468FC) + ((v114 - 1074086811) ^ 0xF66A347E);
  unsigned int v317 = v124;
  int v125 = v122 + v111 + 1992145911;
  unsigned int v126 = v122 + v111;
  LODWORD(STACK[0x5EC]) = v126;
  int v127 = (v125 ^ v121 ^ 0x6B325F2D) - 44704203 - 2 * ((v125 ^ v121 ^ 0x6B325F2D) & 0x7D55DE37 ^ (v125 ^ v121) & 2);
  unsigned int v128 = v127 ^ 0xFD55DE35;
  unsigned int v129 = ((2 * ((v127 ^ 0xFD55DE35) - 434367386)) & 0xFFF7FF5E) + (((v127 ^ 0xFD55DE35) - 434367386) ^ 0x7FFBFFAF);
  LODWORD(STACK[0x4FC]) = v129;
  unsigned int v130 = v110 - v118;
  unsigned int v321 = v110 - v118;
  unsigned int v131 = v126 - (v110 - v118) + (v127 & 0xEA2DEF29 ^ 0x17FA31DE) + (v127 & 0xEA2DEF29 ^ 0xFDD7DEF7) + 968028374;
  unsigned int v132 = ((2 * v131) & 0xEEFAFAEE) + (v131 ^ 0xF77D7D77);
  unsigned int v324 = (v100 ^ 0x680C6D9C) - ((2 * (v100 ^ 0x680C6D9C) - 1326426822) & 0xF1A8486C) - 783528237;
  int v133 = v107 ^ 0x2A0C147A ^ v324;
  int v323 = v133;
  LODWORD(STACK[0x50C]) = v116;
  unsigned int v134 = v116 - ((2 * v116 - 1014561416) & 0xCF1AFF96) - 917437817;
  unsigned int v135 = v134 ^ v133 ^ 0xD953BD34;
  unsigned int v318 = ((2 * (v135 - 434367386)) & 0xFD300FFE) + ((v135 - 434367386) ^ 0xFE9807FF);
  LODWORD(STACK[0x4F8]) = v132;
  int v136 = v118 + v128 + v129 + 1355817896;
  unsigned int v137 = v132 - 1115574037 - v136;
  int v138 = v129 - 1823575363 - (-v136 - 1420532828);
  unsigned int v139 = v130 + v137 - 1420532828;
  int v140 = v139 + v137 - 2073334488 - ((2 * (v139 + v137 - 2073334488) + 991539966) & 0x3D78A7BE);
  unsigned int v315 = v115 ^ 0xC6C7E573;
  unsigned int v319 = v134 ^ v115 ^ 0xC6C7E573;
  unsigned int v141 = (v319 ^ 0xAEBBB39F) - (v124 - v123);
  unsigned int v316 = v124 - v123;
  LODWORD(STACK[0x660]) = v141;
  int v142 = v123 + v135 + v318 - 1675782962;
  unsigned int v143 = v141 - (v142 + 662310306);
  int v144 = v318 - 1675782962 - (1421051724 - v142);
  v52[473] = v144 - ((2 * v144 + 26) & 0xA6) + 96;
  v52[170] = (v319 ^ 0x9F) - (v142 - 94) - 4 + (~(2 * ((v319 ^ 0x9F) - (v142 - 94) - 4) + 90) | 0x59) - 127;
  v52[956] = (v138 - 66) ^ 0x85;
  v52[47] = (v136 + 83) ^ 0x85;
  v52[529] = v142 - 94 + (~(2 * (v142 - 94) + 114) | 0x59) + 13;
  int v145 = ((v137 - 244525870) ^ 0xCBAB92E) + 720297040 - ((2 * ((v137 - 244525870) ^ 0xCBAB92E)) & 0x55DDB8A0);
  v52[653] = (v139 - 43) ^ 0x85;
  v52[832] = v141 - (v142 - 94) - 18 - ((2 * (v141 - (v142 - 94) - 18) - 22) & 0xA6) - 56;
  int v146 = v124 - v123 + 1220768526 + v143 + 2083362030 + v143 + 2083362030;
  int v147 = v146 - ((2 * v146 + 906897732) & 0x405FD3FA);
  v140 += 1011428702;
  unsigned int v148 = ((2 * ((v145 ^ 0xD51123AF) + (v140 ^ 0x9EBC53DF) + 1)) & 0x83FFF7FA)
       + (((v145 ^ 0xD51123AF) + (v140 ^ 0x9EBC53DF) + 1) ^ 0xC1FFFBFD);
  int v149 = v140 ^ (v138 - 286877124);
  v52[709] = v149 ^ 0x5A;
  int v150 = ((2 * ((v145 ^ 0x2AEEDC50) + 357086072)) & 0x3FF5B7BE) + (((v145 ^ 0x2AEEDC50) + 357086072) ^ 0x1FFADBDF);
  int v151 = v144 + 751893003;
  int v152 = v147 + 2067201695;
  int v153 = (v147 + 2067201695) ^ v151;
  v52[226] = v153 ^ 0x2E;
  unsigned int v154 = ((v143 + 654033123) ^ 0xCBAB92E) - 360500765 - ((2 * ((v143 + 654033123) ^ 0xCBAB92E)) & 0xD50663C6);
  unsigned int v155 = ((2 * ((v154 ^ 0x157CCE1C) + (v152 ^ 0x202FE9FD) + 1)) & 0xCED3B38A)
       + (((v154 ^ 0x157CCE1C) + (v152 ^ 0x202FE9FD) + 1) ^ 0x6769D9C5);
  unsigned int v156 = ((2 * ((v154 ^ 0xEA8331E3) + 357086072)) & 0xFF7E7DEE) + (((v154 ^ 0xEA8331E3) + 357086072) ^ 0xFFBF3EF7);
  v52[103] = (v150 + 33) ^ 0x85;
  int v157 = v153 ^ (v142 + 867842498);
  v52[282] = v157 ^ 0x2E;
  v52[350] = (v137 - 46) ^ 0x85;
  int v158 = v149 ^ (v136 + 398709562);
  unsigned int v159 = v158 ^ 0x9EBC53DF;
  unsigned int v160 = ((2 * ((v158 ^ 0x9EBC53DF) + v150 - 536533983)) & 0xAAB9DBD4)
       + (((v158 ^ 0x9EBC53DF) + v150 - 536533983) ^ 0x555CEDEA);
  v52[585] = v156 - ((2 * v156 + 18) & 0xA6) - 36;
  unsigned int v161 = ((2 * ((v153 ^ 0x202FE9FD) + 212972025)) & 0x7FDCFBFE) + (((v153 ^ 0x202FE9FD) + 212972025) ^ 0xBFEE7DFF);
  v157 ^= 0x202FE9FDu;
  unsigned int v162 = ((2 * (v157 + v156 + 4243721)) & 0x8B7F85FE) + ((v157 + v156 + 4243721) ^ 0x45BFC2FF);
  v52[888] = v155 - ((2 * v155 + 118) & 0xA6) + 14;
  int v163 = ((v148 - 391965159 + v160) ^ (v160 - 1432153578))
       + 9874427
       - ((2 * ((v148 - 391965159 + v160) ^ (v160 - 1432153578))) & 0x12D57F6);
  v52[765] = v158 ^ 0x5A;
  unsigned int v164 = v161 - v162;
  v52[944] = v161 - v162 + (~(2 * (v161 - v162)) | 0x59) - 44;
  int v165 = ((v162 - 1170195199) ^ (v155 + 1389781820 + v162))
       + 599481328
       - ((2 * ((v162 - 1170195199) ^ (v155 + 1389781820 + v162))) & 0x4776B7E0);
  unsigned int v166 = (v149 ^ 0x9EBC53DF) - v160;
  v52[462] = (v166 - 29) ^ 0x85;
  v52[406] = (v148 + 3) ^ 0x85;
  int v167 = (v149 ^ 0x6143AC20) + 1432153578 + v159 + v166 + 1;
  int v168 = v167 - ((2 * v167) & 0x48567B6A);
  v52[159] = v163 ^ 0x7E;
  v52[641] = v165 ^ 0x23;
  int v169 = v157 + 1170195199 - v162 - ((2 * (v157 + 1170195199 - v162)) & 0x236C4304) - 1850334846;
  v52[35] = v169 ^ 0x51;
  int v170 = v163 ^ 0x96ABFB;
  int v171 = ((2 * (v166 + 1645125603 + (v163 ^ 0x96ABFB))) & 0x7DBFEFDC)
       + ((v166 + 1645125603 + (v163 ^ 0x96ABFB)) ^ 0x3EDFF7EE);
  int v172 = v165 ^ 0x23BB5BF0;
  unsigned int v173 = ((2 * (v164 - 2049882880 + (v165 ^ 0x23BB5BF0))) & 0xDFDB7F6E)
       + ((v164 - 2049882880 + (v165 ^ 0x23BB5BF0)) ^ 0x6FEDBFB7);
  int v174 = v165 ^ v169;
  v168 += 606813621;
  int v175 = v163 ^ v168;
  unsigned int v176 = (v163 ^ v168 ^ 0xDB4269B1)
       + v160
       + 77592809
       - ((2 * ((v163 ^ v168 ^ 0xDB4269B1) + v160) + 212981282) & 0x3C8E1D7C);
  v52[338] = v162 - ((2 * v162 - 10) & 0xA6) - 50;
  v52[518] = v168 ^ 0x30;
  int v177 = (v175 ^ 0x24BD964E)
       - 1054865390
       + v171
       + 213681222
       - ((2 * ((v175 ^ 0x24BD964E) - 1054865390 + v171)) & 0x1979088C);
  unsigned int v178 = (v174 ^ 0x4DF2858D) + v162 - ((2 * ((v174 ^ 0x4DF2858D) + v162) - 336843784) & 0x8133BF76);
  unsigned int v179 = (v174 ^ 0xB20D7A72)
       - 1877852087
       + v173
       + 1686626622
       - ((2 * ((v174 ^ 0xB20D7A72) - 1877852087 + v173)) & 0xC90FC27C);
  v52[821] = (v160 + 16) ^ 0x85;
  v52[697] = (v173 - ((2 * v173 + 76) & 0xC2) - 121) ^ 0xB2;
  int v180 = v179 ^ (v172 + 1470844795);
  v52[394] = v180 ^ 0xED;
  int v181 = v177 ^ (v170 + 1470844795);
  v52[877] = v181 ^ 0xC3;
  v178 -= 1232079433;
  unsigned int v182 = (v173 - ((2 * v173 + 2093688396) & 0xB79AC2C2) + 439547015) ^ v178;
  v52[91] = v182 ^ 9;
  v52[753] = v179 ^ 0xED;
  int v183 = (v176 + 230) ^ (v171 - 277652753);
  v52[574] = (v176 - 26) ^ (v171 - 17) ^ 0x3B;
  int v184 = (v176 + 230) ^ 0x12FB8AF8 ^ v181;
  int v185 = v181 ^ v183;
  unsigned int v186 = ((2 * ((v181 ^ v183 ^ 0x12FB8AF8) + (v177 ^ 0xCBC8446))) & 0x5FFEAFDE)
       + (((v181 ^ v183 ^ 0x12FB8AF8) + (v177 ^ 0xCBC8446)) ^ 0xAFFF57EF);
  unsigned int v187 = v178 ^ 0xA41E3E85 ^ v180;
  int v188 = v180 ^ v182;
  unsigned int v189 = ((2 * ((v188 ^ 0xFFD35FE4) + (v179 ^ 0x6487E13E))) & 0xCBE7DB66)
       + (((v188 ^ 0xFFD35FE4) + (v179 ^ 0x6487E13E)) ^ 0x65F3EDB3);
  unsigned int v190 = v184 - 1342220305 - v186 + 1532265226 - ((2 * (v184 - 1342220305 - v186)) & 0xB6A90614);
  v52[271] = v177 ^ 0xC3;
  unsigned int v191 = (v179 ^ 0xFFD35FE4 ^ v182 ^ (v189 - 1710484915))
       - 648132726
       - ((2 * (v179 ^ 0xFFD35FE4 ^ v182 ^ (v189 - 1710484915))) & 0xB2BC8F14);
  v52[215] = (v171 - 17) ^ 0x85;
  unsigned int v192 = v187 + 1710484915 - v189 + 1380917742 - ((2 * (v187 + 1710484915 - v189)) & 0xA49E43DC);
  unsigned int v193 = (v183 ^ v177 ^ 0x12FB8AF8 ^ (v186 + 1342220305))
       - 634406348
       - ((2 * (v183 ^ v177 ^ 0x12FB8AF8 ^ (v186 + 1342220305))) & 0xB45F7468);
  v52[933] = v190 ^ 0x8F;
  v52[809] = v191 ^ 0x59;
  int v194 = v192 ^ v188;
  v52[147] = v194 ^ 0xD9;
  unsigned int v195 = ((2 * ((v190 ^ v185 ^ 0x49AF09F2) + (v190 ^ 0x5B54830A))) & 0xFDFFDC3E)
       + (((v190 ^ v185 ^ 0x49AF09F2) + (v190 ^ 0x5B54830A)) ^ 0x7EFFEE1F);
  unsigned int v196 = ((2 * ((v190 ^ 0x5B54830A) - v186 - 1342220305)) & 0xFC6EF7BE)
       + (((v190 ^ 0x5B54830A) - v186 - 1342220305) ^ 0xFE377BDF);
  v52[450] = (v187 - 77 - v189 - 18 - ((2 * (v187 - 77 - v189)) & 0xDC)) ^ 0x3D;
  v52[630] = v190 ^ v185 ^ 0x77;
  v52[327] = v193 ^ 0xB1;
  int v197 = v192 ^ 0x524F21EE;
  unsigned int v198 = ((2 * ((v194 ^ 0xAD9C7E0A) + (v192 ^ 0x524F21EE))) & 0x2F4D3C16)
       + (((v194 ^ 0xAD9C7E0A) + (v192 ^ 0x524F21EE)) ^ 0x97A69E0B);
  v52[506] = v189 - ((2 * v189 + 70) & 0xA6) - 10;
  unsigned int v199 = ((v193 ^ 0xDA2FBA34) + 2130701855 - v195) ^ (v186 + 1485652748);
  unsigned int v200 = v199 + 1499172568 - ((2 * v199) & 0xB2B71DB0);
  unsigned int v201 = ((2 * (v197 - v189 + 1212889053)) & 0xBD5F9E76) + ((v197 - v189 + 1212889053) ^ 0xDEAFCF3B);
  v52[24] = (v186 - 25) ^ 0x85;
  int v202 = v189 - 2 * ((v189 + 43560264) & 0x29F4D0D ^ v189 & 5) - 1523058096;
  unsigned int v203 = ((v191 ^ 0xD95E478A) - 1750688245 - v198) ^ v202;
  v52[562] = v203 ^ 0xDB;
  unsigned int v204 = ((2 * ((v202 ^ 0xFD60B2F7) + 1750688246 + v198)) & 0x3FE7FFFE)
       + (((v202 ^ 0xFD60B2F7) + 1750688246 + v198) ^ 0x1FF3FFFF);
  v52[259] = v189 - ((2 * v189 + 46) & 0xA6) + 106;
  v52[203] = v201 - ((2 * v201 - 92) & 0xA6) + 37;
  int v205 = v203 ^ 0x29F4D08;
  unsigned int v206 = ((2 * ((v203 ^ 0x29F4D08) - 520242382)) & 0xFF5F56CE) + (((v203 ^ 0x29F4D08) - 520242382) ^ 0x7FAFAB67);
  v52[865] = v204 - ((2 * v204 + 2) & 0xA6) - 44;
  v52[686] = (v196 - 40) ^ 0x85;
  int v207 = v200 ^ 0x595B8ED8;
  unsigned int v208 = ((2 * ((v200 ^ 0x595B8ED8) - 520242382)) & 0xAEDF7F3A) + (((v200 ^ 0x595B8ED8) - 520242382) ^ 0x576FBF9D);
  v52[80] = v200 ^ 0x5D;
  v52[742] = (v186 + 91) ^ 0x85;
  unsigned int v209 = v195 - v186;
  v52[383] = (v195 - v186 - 43) ^ 0x85;
  unsigned int v210 = v189 - v204 - 1682058348 + v206;
  v52[12] = v210 - ((2 * v210 + 54) & 0xA6) + 110;
  v52[439] = (v195 - v186 - 78) ^ 0x85;
  v52[315] = v206 - ((2 * v206 + 50) & 0xA6) + 108;
  unsigned int v211 = v195 - v186 - v196;
  v52[136] = (((2 * (v211 - ((2 * v211 + 86) & 0xE2) + 28)) & 0x52 ^ 0x42)
            + ((v211 - ((2 * v211 + 86) & 0xE2) + 28) ^ 0x58)) ^ 0x85;
  v52[798] = (v208 + 99) ^ 0x85;
  unsigned int v212 = v204 - v201;
  v52[618] = v204 - v201 - ((2 * (v204 - v201) + 12) & 0xA6) + 89;
  unsigned int v213 = v210 + v206 - ((2 * (v210 + v206) - 849505176) & 0xBE15DD3E);
  v52[921] = v204 - 2 * ((v204 + 6) & 4 ^ (v204 + 94) & 0x57) - 79;
  unsigned int v214 = v208 + v186 - v209;
  v52[495] = (v214 - 23) ^ 0x85;
  unsigned int v215 = v211 + v209 - ((2 * (v211 + v209) - 856103668) & 0xD67103D8);
  unsigned int v216 = v212 + v204 - ((2 * (v212 + v204) + 821880008) & 0x92029DFA);
  unsigned int v217 = v208 + v211;
  unsigned int v218 = v206 + v212 - ((2 * (v206 + v212) + 1267768880) & 0x9695665C) + 1897071174;
  v52[371] = v218 ^ 0xFD;
  unsigned int v219 = v214 + v208 - ((2 * (v214 + v208) - 2131461992) & 0xCBC7375E) - 1503799301;
  int v220 = v219 ^ (v207 - 756629542);
  int v221 = (v213 + 1169799379) ^ (v205 - 756629542);
  unsigned int v222 = ((v213 + 1169799379) ^ 0xDF0AEE9F)
       - ((2 * ((v213 + 1169799379) ^ 0xDF0AEE9F) + 935423942) & 0x31ADFDA2)
       + 1421326004;
  v52[730] = (((v213 - 45) ^ 0x9F) - ((2 * ((v213 - 45) ^ 0x9F) - 58) & 0xA2) - 76) ^ 2;
  v52[854] = (v217 + 48) ^ 0x85;
  int v223 = v222 ^ v218;
  unsigned int v224 = v221 ^ 0xDF0AEE9F;
  int v225 = (v224 + (v223 ^ 0x2C63B200) + 1 - ((2 * (v224 + (v223 ^ 0x2C63B200) + 1)) & 0x31ADFDA2) + 416743121) ^ v222;
  unsigned int v226 = (v219 ^ 0xE5E39BAF) - ((2 * (v219 ^ 0xE5E39BAF) + 2009165766) & 0xCDF87BC8) + 584906183;
  int v227 = v226 ^ (v217 + 1402956848);
  unsigned int v228 = v220 ^ 0xE5E39BAF;
  unsigned int v229 = ((v220 ^ 0xE5E39BAF) + (v227 ^ 0x1903C21B) + 1) ^ v226;
  v52[248] = v226 ^ 0x61;
  unsigned int v230 = v215 - 776670094;
  LOBYTE(v215) = (v215 + 114) ^ 0x69;
  v52[192] = v215;
  v52[910] = v215;
  unsigned int v231 = v216 + 1635762529;
  LOBYTE(v216) = (v216 + 97) ^ 0x2E;
  v52[674] = v216;
  v52[427] = v216;
  v52[124] = -27 - v223 - ((36 - 2 * v223) & 0xA6);
  v52[607] = ((v226 ^ (v217 + 48) ^ 0xE4) + 19) ^ 0x85;
  v52[551] = v220 ^ 0x2A;
  v52[304] = v220 ^ 0x2A;
  uint64_t v232 = (v228 - ((2 * v228) & 0x26) + 19) & 0x1E3;
  v52[68] = v221 ^ 0x4C;
  v52[786] = v221 ^ 0x4C;
  v52[1] = ((v220 ^ 0xAF) + (v226 ^ (v217 + 48) ^ 0x1B) + 1) ^ v226 ^ 0x48;
  v52[(v232 ^ 0x1E0) + (v232 ^ 3)] = v225 ^ 0xFA;
  unsigned int v233 = LODWORD(STACK[0x5D4]) + 676028209;
  BOOL v234 = v233 < 0xBEADB10;
  BOOL v235 = a45 - 1207603741 >= v233;
  unsigned int v236 = ((2 * (v228 - 1911768441)) & 0x67FD79EC) + ((v228 - 1911768441) ^ 0xB3FEBCF6);
  unsigned int v237 = ((2 * (v224 - 1911768441)) & 0xE67FF8BC) + ((v224 - 1911768441) ^ 0xF33FFC5E);
  int v238 = (v229 ^ 0x4BE435CD) + (v230 ^ 0x4A084A6D);
  unsigned int v239 = ((2 * ((v231 ^ 0xE831857C) + (v225 ^ 0xAD180829) + 1)) & 0xE9FFEBF4)
       + (((v231 ^ 0xE831857C) + (v225 ^ 0xAD180829) + 1) ^ 0xF4FFF5FA);
  v52[663] = v230 ^ 0xF1;
  v52[236] = v239 - ((2 * v239 - 12) & 0xA6) - 51;
  unsigned int v240 = (v227 ^ 0xE6FC3DE4) - ((2 * (v227 ^ 0xE6FC3DE4) - 1694596302) & 0x80DCC9A0) - 1913805207;
  int v241 = ((2 * v240) & 0x2BA421AE ^ 0xB8421A8) + (v240 ^ 0x1A19C72B);
  v52[539] = v237 - v239 - 2 * ((v237 - v239 + 40) & 0x57 ^ (v237 - v239) & 4) + 123;
  v52[180] = v231 ^ 0xB6;
  v52[360] = (v241 + 41) ^ 0x85;
  int v242 = v241 + v236 - ((2 * (v241 + v236) + 744383590) & 0x21A2E230);
  unsigned int v243 = ((2 * ((v223 ^ 0xD39C4DFF) - 847298151)) & 0xCEE7FF58 ^ 0x8E436658)
       + (((v223 ^ 0xD39C4DFF) - 847298151) ^ 0x28D64C80);
  v52[842] = ((2 * (-(char)v223 - 104)) & 0x58 ^ 0x58)
           + ((-(char)v223 - 104) ^ 0x80)
           - ((2 * (((2 * (-(char)v223 - 104)) & 0x58 ^ 0x58) + ((-(char)v223 - 104) ^ 0x80)) - 88) & 0xA6)
           + 39;
  int v244 = 1407308385 - v241 - ((732176814 - 2 * v241) & 0x7C1F8314);
  v52[719] = (v238 - 11) ^ 0x85;
  unsigned int v245 = ((v238 + 2010182115) ^ 0x3E0FC18A ^ v244)
       - ((2 * ((v238 + 2010182115) ^ 0x3E0FC18A ^ v244)) & 0xD74268DE)
       - 341756817;
  unsigned int v246 = ((2 * ((v230 ^ 0xBCF35E74) - 1128502665 + (v245 ^ 0x145ECB90))) & 0xDFE7FA5C)
       + (((v230 ^ 0xBCF35E74) - 1128502665 + (v245 ^ 0x145ECB90)) ^ 0xEFF3FD2E);
  v52[57] = (v236 - v238 + 21) ^ 0x85;
  int v247 = -1772701983 - v243 - ((1323827032 - 2 * v243) & 0x5DC56E6A);
  v52[292] = v247 ^ 0xE6;
  v52[416] = (v246 - 46) ^ 0x85;
  unsigned int v248 = (v247 ^ 0xAEE2B735 ^ (v239 - 2100233240))
       - 753794830
       - ((2 * (v247 ^ 0xAEE2B735 ^ (v239 - 2100233240))) & 0xA62401E4);
  v52[113] = (v242 + 75) ^ 0x2A;
  unsigned int v249 = v237 + 625738742 + v243;
  v52[595] = v249 ^ 0x64;
  v52[775] = v244 ^ 0xF;
  v52[898] = 2 * ((v231 ^ 0x65) + 119 + (v248 ^ 0xD))
           + ~((v231 ^ 0x65) + 119 + (v248 ^ 0xD))
           + (~(2 * (2 * ((v231 ^ 0x65) + 119 + (v248 ^ 0xD)) + ~((v231 ^ 0x65) + 119 + (v248 ^ 0xD))) + 2) | 0x59)
           - 43;
  uint64_t v250 = ((v248 ^ 0xD31200F2) - ((2 * (v248 ^ 0xD31200F2)) & 0x1A6) + 723) & 0x3BALL;
  v52[472] = (((v238 - 29) ^ 0x8A ^ v244) - ((2 * ((v238 - 29) ^ 0x8A ^ v244)) & 0xDE) + 111) ^ 0xEA;
  v52[v250 ^ 0x128 | v250 ^ 0x292] = v248 ^ 0x21;
  unsigned int v251 = ((2 * ((v244 ^ 0xC1F03E75) + 269222611 + v246)) & 0xD6BFFEFE)
       + (((v244 ^ 0xC1F03E75) + 269222611 + v246) ^ 0x6B5FFF7F);
  unsigned int v252 = ((2 * ((v231 ^ 0x1ECA9165) - 1128502665 + (v248 ^ 0x2CEDFF0D))) & 0x6F7DFFFE)
       + (((v231 ^ 0x1ECA9165) - 1128502665 + (v248 ^ 0x2CEDFF0D)) ^ 0xB7BEFFFF)
       + v243;
  LODWORD(v250) = (v244 ^ 0xDDD4B54E) + v238;
  int v253 = v251 + v238 - ((2 * (v251 + v238) + 323188658) & 0x643D7FA4);
  unsigned int v254 = v239 + (v247 ^ 0x4D39C3F1);
  unsigned int v255 = v252 + v239 + 1326430486 + (~(2 * (v252 + v239) + 1100843876) | 0xA37E1939);
  v52[707] = v255 ^ 0xB0;
  v52[45] = v254 - 2 * ((v254 + 104) & 0x57 ^ v254 & 4) - 69;
  int v256 = ((v242 - 956259509) ^ 0x8B43E0AF)
       - v250
       - v251
       - 208728676
       - ((2 * (((v242 - 956259509) ^ 0x8B43E0AF) - v250 - v251 - 208728676)) & 0xA32C9882)
       - 778679231;
  v52[831] = (((v242 + 75) ^ 0xAF) - v250 - v251 - 100 - ((2 * (((v242 + 75) ^ 0xAF) - v250 - v251 - 100)) & 0x82) + 65) ^ 0xC4;
  v52[169] = (v251 - 10) ^ 0x85;
  v52[651] = v252 - ((2 * v252 - 108) & 0xA6) - 99;
  int v257 = v254 - v252 + 1391223322 + (~(2 * (v254 - v252) - 911842244) | 0x23CDA009);
  unsigned int v258 = (v249 ^ 0x1B9291B7)
       - v254
       - v252
       + 476185539
       - ((2 * ((v249 ^ 0x1B9291B7) - v254 - v252 + 476185539)) & 0x9AE19068)
       - 848246732;
  v52[348] = v258 ^ 0xE7;
  v253 += 2076212139;
  v52[225] = v253 ^ 0x57;
  v52[528] = (v250 - 29) ^ 0x85;
  int v259 = v255 ^ v257;
  int v260 = v250 - v251 - ((2 * (v250 - v251) + 1275088858) & 0xFE7278DC) + 624518235;
  int v261 = v253 ^ v260;
  unsigned int v262 = v251 - 860829830 + (v253 ^ v260 ^ 0xF2A600A7);
  unsigned int v263 = ((2 * v262) & 0xFEBFE7FC) + (v262 ^ 0xFF5FF3FE);
  unsigned int v264 = v252
       + 2074050711
       + (v259 ^ 0xFFD85F83)
       - ((2 * (v252 + 2074050711 + (v259 ^ 0xFFD85F83))) & 0xE861BB66)
       + 1949359539;
  LOWORD(v252) = (v252 - 32617 + (v259 ^ 0x5F83) - ((2 * (v252 - 32617 + (v259 ^ 0x5F83))) & 0xBB66) - 8781) & 0x3D5B;
  int v265 = v261 ^ v256;
  v52[584] = v261 ^ v256 ^ 0x78;
  v52[887] = (((2 * v262) & 0xFC) + (v262 ^ 0xFE) + 75) ^ 0x85;
  v52[404] = v264 ^ 0x60;
  int v266 = v259 ^ v258;
  v52[(unsigned __int16)(25919 * ((v252 ^ 0x1D13) + (v252 ^ 0x2048)))] = v259 ^ v258 ^ 0x7F;
  unsigned int v267 = ((a6 ^ 0x30535613) + (a6 ^ v47 ^ 0x4FCA6D51) + 1) ^ ((v49 ^ 0xBD17A365) + (v49 ^ v47 ^ 0xC28E9827) + 1) ^ ((v53 ^ v322 ^ v46 ^ 0x16750C96) + (v47 ^ 0x69EC37D4 ^ v53 ^ v322 ^ v46) + 1);
  int v268 = LODWORD(STACK[0x63C]) ^ LODWORD(STACK[0x6F0]) ^ (LODWORD(STACK[0x65C]) - 366088407);
  unsigned int v269 = ((LODWORD(STACK[0x630]) ^ 0xFA101E55) + (LODWORD(STACK[0x6F4]) ^ 0x8666F33D ^ LODWORD(STACK[0x630])) + 1) ^ ((LODWORD(STACK[0x650]) ^ 0x81F64648) + (LODWORD(STACK[0x6F4]) ^ 0xFD80AB20 ^ LODWORD(STACK[0x650])) + 1) ^ ((v268 ^ 0x7F993B42) + (LODWORD(STACK[0x6F4]) ^ 0x3EFD62A ^ v268) + 1);
  int v270 = (LODWORD(STACK[0x644]) - (STACK[0x648] & 0x23EB983C) + 769778975) ^ LODWORD(STACK[0x68C]) ^ LODWORD(STACK[0x640]);
  unsigned int v271 = ((LODWORD(STACK[0x638]) ^ 0x984A5ADF) + (LODWORD(STACK[0x6D0]) ^ 0xE7D3619D ^ LODWORD(STACK[0x638])) + 1) ^ ((LODWORD(STACK[0x634]) ^ 0x8C56B1BC) + (LODWORD(STACK[0x6D0]) ^ 0xF3CF8AFE ^ LODWORD(STACK[0x634])) + 1) ^ ((v270 ^ 0x679DDF8C) + (LODWORD(STACK[0x6D0]) ^ 0x1804E4CE ^ v270) + 1);
  int v272 = LODWORD(STACK[0x604]) ^ LODWORD(STACK[0x6EC]) ^ (LODWORD(STACK[0x624])
                                                        - 1824566479
                                                        + ~((2 * LODWORD(STACK[0x624]) + 43191844) & 0x23EB983C));
  unsigned int v273 = ((LODWORD(STACK[0x600]) ^ 0x196269E0) + (LODWORD(STACK[0x6B8]) ^ 0x66FB52A2 ^ LODWORD(STACK[0x600])) + 1) ^ ((LODWORD(STACK[0x620]) ^ 0x50AB42D4) + (LODWORD(STACK[0x6B8]) ^ 0x2F327996 ^ LODWORD(STACK[0x620])) + 1) ^ ((v272 ^ 0xBD82A308) + (LODWORD(STACK[0x6B8]) ^ 0xC21B984A ^ v272) + 1);
  unsigned int v274 = LODWORD(STACK[0x5FC]) ^ (LODWORD(STACK[0x508])
                                - ((2 * LODWORD(STACK[0x508]) + 416715506) & 0xFFA2426E)
                                + 205286064) ^ a4;
  unsigned int v275 = ((v324 ^ 0x872BDBC9) + (LODWORD(STACK[0x684]) ^ 0x3CDD9FD4 ^ v324) + 1) ^ (LODWORD(STACK[0x5F0])
                                                                                  + (LODWORD(STACK[0x684]) ^ 0xC00324CD ^ LODWORD(STACK[0x5E8]))) ^ ((v274 ^ 0xF15AEB5D) + (LODWORD(STACK[0x684]) ^ 0x4AACAF40 ^ v274) + 1);
  int v276 = (LODWORD(STACK[0x500]) - ((2 * LODWORD(STACK[0x500]) + 536180938) & 0x1E2AEBCE) - 821022132) ^ LODWORD(STACK[0x690]) ^ LODWORD(STACK[0x504]);
  unsigned int v277 = ((v323 ^ v315 ^ 0x8817F154) + (LODWORD(STACK[0x6C8]) ^ 0x88392F9C ^ v323 ^ v315) + 1) ^ (-160811906
                                                                                                - v317
                                                                                                + (LODWORD(STACK[0x608]) ^ (v317 + 160811906))) ^ ((v276 ^ 0x94CDA0D2) + (LODWORD(STACK[0x6C8]) ^ 0x94E37E1A ^ v276) + 1);
  unsigned int v278 = v316 - ((2 * v316 - 1542244226) & 0xF1661B28) + 1253878227;
  int v279 = (v321 + 1850633504) ^ LODWORD(STACK[0x698]) ^ (LODWORD(STACK[0x4FC]) - 2147221423);
  unsigned int v280 = (-23590913 - v318 + (LODWORD(STACK[0x6C4]) ^ 0xF1575E7 ^ (v318 + 23590913))) ^ ((v278 ^ 0x874CF26B)
                                                                                       + (LODWORD(STACK[0x6C4]) ^ 0x77A67873 ^ v278)
                                                                                       + 1) ^ ((v279 ^ 0x2EDEC8)
                                                                                             + (LODWORD(STACK[0x6C4]) ^ 0xF0C454D0 ^ v279)
                                                                                             + 1);
  LODWORD(STACK[0x52C]) += LODWORD(STACK[0x670]) + v269;
  LODWORD(STACK[0x500]) = LODWORD(STACK[0x67C]) + (LODWORD(STACK[0x628]) ^ 0x362B0500);
  LODWORD(STACK[0x5C8]) = LODWORD(STACK[0x5C8]) - a8 - 1603977771 + v267;
  unsigned int v281 = LODWORD(STACK[0x510]) + (v320 ^ 0xF3B60C85) + v273;
  unsigned int v282 = LODWORD(STACK[0x51C]) + (v319 ^ 0x51444C60) + v277;
  LODWORD(STACK[0x504]) = LODWORD(STACK[0x680]) + (LODWORD(STACK[0x66C]) ^ 0xAE8ED5EF);
  int v283 = !v235;
  if (v234 != (a45 - 1207603741) < 0xBEADB10) {
    int v284 = v234;
  }
  else {
    int v284 = v283;
  }
  LODWORD(STACK[0x53C]) += LODWORD(STACK[0x6AC]) + (a1 ^ 0x1CFA0123);
  LODWORD(STACK[0x538]) += 1992145911 + LODWORD(STACK[0x610]) + LODWORD(STACK[0x5EC]);
  LODWORD(STACK[0x59C]) = LODWORD(STACK[0x59C]) - 134662406 - LODWORD(STACK[0x50C]) + v275;
  LODWORD(STACK[0x540]) = LODWORD(STACK[0x540]) - 1171275847 + LODWORD(STACK[0x6B0]);
  unsigned int v285 = LODWORD(STACK[0x520]) + (LODWORD(STACK[0x664]) ^ 0x298EE2AA) + v271;
  LODWORD(STACK[0x4FC]) = LODWORD(STACK[0x6A0]) + LODWORD(STACK[0x668]);
  LODWORD(STACK[0x508]) = LODWORD(STACK[0x688]) + 142770825 + LODWORD(STACK[0x4F8]);
  LODWORD(STACK[0x50C]) = LODWORD(STACK[0x6D8]) + LODWORD(STACK[0x62C]) + 486605377;
  unsigned int v286 = (v260 ^ 0x7F393C6E) - ((2 * (v260 ^ 0x7F393C6E) - 2087866778) & 0xC64C140E) - 1527979718;
  unsigned int v287 = ((2 * (v286 ^ v261)) & 0x7E2DF3D6 ^ HIDWORD(a13)) + (v286 ^ v261 ^ 0xAE96F34B);
  unsigned int v288 = (v257 ^ 0x6E192FFB) - ((2 * (v257 ^ 0x6E192FFB) - 2087866778) & 0xEF45ACB8) + 963227023;
  v52[763] = ((v257 ^ 0xFB) - ((2 * (v257 ^ 0xFB) + 102) & 0xB8) - 113) ^ 0x8F;
  v52[460] = v259 ^ 0x50;
  unsigned int v289 = v265 ^ 0x9CB1CFFD ^ (v263 - 480131765);
  unsigned int v290 = ((2 * (v289 + (v286 ^ 0xE3260A07))) & 0xF97EEB7E) + ((v289 + (v286 ^ 0xE3260A07)) ^ 0xFCBF75BF);
  unsigned int v291 = ((2 * (v288 ^ v259)) & 0xCFDBD6FE ^ 0xD112BE) + (v288 ^ v259 ^ 0xEF9762A0);
  unsigned int v292 = ((2 * ((v265 ^ 0x9CB1CFFD) + 54561345 + v290)) & 0xFFBE3CF6)
       + (((v265 ^ 0x9CB1CFFD) + 54561345 + v290) ^ 0x7FDF1E7B);
  v52[943] = v261 ^ 0x22;
  int v293 = ((2 * (v264 ^ v266)) & 0x36F7FFDA ^ 0x3233921A) + (v264 ^ v266 ^ 0x626236F2);
  v52[281] = v286 ^ 0x82;
  unsigned int v294 = ((2 * (v289 - 2145328763 + v292)) & 0xF566E9D6) + ((v289 - 2145328763 + v292) ^ 0x7AB374EB);
  unsigned int v295 = ((2 * ((v288 ^ 0x77A2D65C) + 1686372371 + v293)) & 0xFC6D4D3E)
       + (((v288 ^ 0x77A2D65C) + 1686372371 + v293) ^ 0xFE36A69F);
  int v296 = v292 - v287 - 2 * ((v292 - v287 + 1060625264) & 0x7336881F ^ (v292 - v287) & 8);
  unsigned int v297 = ((2 * ((v266 ^ 0x8D2914AC) + 29972833 + v295)) & 0xED7FC9BA)
       + (((v266 ^ 0x8D2914AC) + 29972833 + v295) ^ 0x76BFE4DD);
  unsigned int v298 = v297 + v293;
  v52[157] = v298 - 80 - ((2 * (v298 - 80) + 12) & 0xA6) + 89;
  v296 += 846095239;
  int v299 = v297 - v291 - ((2 * (v297 - v291) + 1650199876) & 0x4232C22C) + 306669496;
  unsigned int v300 = v294 + v290 - ((2 * (v294 + v290) + 286927532) & 0xD1563E84) + 1899508888;
  int v301 = v291 - v298 - ((2 * (v291 - v298) + 1419506326) & 0x63495A94) + 1542629013;
  int v302 = v287 - v294 - 2 * ((v287 - v294 + 1000110848) & 0x68FEADBF ^ (v287 - v294) & 2) + 614148285;
  v52[213] = v301 ^ 0x99;
  v52[819] = v299 ^ 0xC5;
  v52[640] = (v294 + 21) ^ 0x85;
  int v303 = v302 ^ v296;
  v52[337] = v296 ^ 0x92;
  v52[696] = v302 ^ 0x38;
  unsigned int v304 = ((2 * (v302 ^ v296)) ^ 0xC86FB4AB)
       + v294
       - ((2 * (((2 * (v302 ^ v296)) ^ 0xC86FB4AB) + v294) + 177804844) & 0xD9C712E2);
  unsigned int v305 = ((2 * ((v303 ^ 0x9BC825AA) + 1553631958)) & 0xCBEF7FDA) + (((v303 ^ 0x9BC825AA) + 1553631958) ^ 0x65F7BFED);
  int v306 = v301 ^ v299;
  uint64_t v307 = ((2 * v306) ^ 0xDE846747)
       + v298
       - ((2 * (((2 * v306) ^ 0xDE846747) + v298) - 611830162) & 0xA830C53E)
       - 1042514474;
  v52[875] = (((2 * v306) ^ 0x47) + v298 - ((2 * (((2 * v306) ^ 0x47) + v298) + 110) & 0x3E) - 42) ^ 0x4C;
  v304 -= 231730041;
  v52[393] = v304 ^ 0xF4;
  LOBYTE(v306) = ((2 * ((v306 ^ 0x5C) - 42)) & 0xF6) + (((v306 ^ 0x5C) - 42) ^ 0xFB);
  v52[572] = v306 - ((2 * v306 + 10) & 0xA6) - 40;
  uint64_t v308 = v298 + 1081488560 + v295 - ((2 * (v298 + 1081488560 + v295) + 1580105678) & 0x85512B86) + 1908397482;
  LOBYTE(v295) = (v301 ^ 0xBE ^ v308) - 5 - v306 - ((2 * ((v301 ^ 0xBE ^ v308) - 5 - v306)) & 0x48) - 92;
  v52[269] = v295 ^ 0x77;
  v52[90] = ((v303 ^ 0xAA) - 42) ^ 0x85;
  v52[516] = v308 ^ 0x10;
  v52[931] = v308 ^ 0x10;
  unsigned int v309 = (v304 ^ 0x6CE38971) - ((2 * (v304 ^ 0x6CE38971) + 105646466) & 0xCFB0285A);
  unsigned int v310 = (v300 ^ 0x47D6E3C8 ^ v302)
       + 1710735341
       - v305
       - ((2 * ((v300 ^ 0x47D6E3C8 ^ v302) + 1710735341 - v305)) & 0xB3C0E10E)
       + 1507881095;
  v52[752] = v310 ^ 2;
  uint64_t v311 = v310 ^ v304;
  int v312 = (v310 ^ 0xA61F8F78)
       + v305
       + (v311 ^ 0xA9796F35)
       - ((2 * ((v310 ^ 0xA61F8F78) + v305 + (v311 ^ 0xA9796F35)) + 873496618) & 0x47D2ECAC);
  LODWORD(STACK[0x510]) = v281 + 1;
  LODWORD(STACK[0x51C]) = v282 + 1;
  LODWORD(STACK[0x520]) = v285 + 1;
  v52[34] = v300 ^ 0xC7;
  uint64_t v313 = v309 + 1795037422;
  v52[449] = v300 ^ 0xC7;
  v52[146] = v313 ^ 0xA3;
  v52[22] = v295 ^ v307 ^ 0xD4;
  v52[808] = (v312 + 107) ^ 0xD3;
  v52[505] = v311 ^ 0x4F;
  v52[628] = ((v307 ^ 0x9F) - 63) ^ 0xD8;
  v52[325] = ((v295 ^ 0x5B)
            + v306
            + (v295 ^ v307 ^ 0xF8)
            - ((2 * ((v295 ^ 0x5B) + v306 + (v295 ^ v307 ^ 0xF8)) + 14) & 0x5C)
            + 53) ^ 0xFD;
  v52[684] = ((v308 ^ 0xC3) + 126) ^ 0x83;
  v52[202] = ((v300 ^ 0x42) - ((2 * (v300 ^ 0x42) - 4) & 0x4C) + 36) ^ 0x73;
  LODWORD(STACK[0x530]) = LODWORD(STACK[0x530]) - LODWORD(STACK[0x660]) - 1963726485 + v280;
  LODWORD(STACK[0x4F8]) = LODWORD(STACK[0x6E0]) + 1925615411;
  return (*(uint64_t (**)(void, uint64_t, uint64_t, void, unsigned char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(STACK[0x6F8] + 8 * (LODWORD(STACK[0x614]) ^ ((4 * v284) | (16 * v284)))))((v312 - 1108232597), v313, v311, (v300 ^ 0xE8AB1F42) - ((2 * (v300 ^ 0xE8AB1F42) + 893022972) & 0x89728F4C), v52, v307, v308, 2305986380, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27);
}

uint64_t sub_1001205E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, unint64_t *a17, int a18, unsigned int a19)
{
  a17 = &STACK[0x75464D914B72489F];
  a19 = 3687
      - ((((2 * (&a17 ^ 0x2D208B2F)) | 0xFCAEDB04) - (&a17 ^ 0x2D208B2F) + 27824766) ^ 0x14F686E4)
      * v22;
  uint64_t v23 = (*(uint64_t (**)(unint64_t **))(v20 + 37680))(&a17);
  return (*(uint64_t (**)(uint64_t))(v20 + 8 * ((3272 * (a18 == v21)) ^ v19)))(v23);
}

uint64_t sub_100120678(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  *(void *)(a4 + v4) = *(void *)(v5 + v4);
  return (*(uint64_t (**)(void))(v7 + 8 * ((60 * (v6 == 0)) ^ a3)))();
}

uint64_t sub_1001206B0(int a1)
{
  return (*(uint64_t (**)(void))(v3 + 8 * (((((a1 - 2254) ^ 0x10CD) + ((a1 - 2254) | 0x250) - 4894) * (v1 != v2)) | a1)))();
}

uint64_t sub_1001206EC@<X0>(int a1@<W4>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (((a2 == ((v2 - 1117544426) & 0x76FFFFFF ^ 0x3463A775))
                                * (a1 + (v2 ^ (v4 - 1867)) - 493)) ^ v2)))();
}

uint64_t sub_100120738(int a1)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((3604
                                * ((v1 & (2 * (*(unsigned __int8 *)(v3 + 4) - 247)))
                                 + ((*(unsigned __int8 *)(v3 + 4) - 247) ^ a1) == (v2 ^ 0x609) - 69207043)) ^ v2)))();
}

uint64_t sub_100120784(double a1)
{
  *int v2 = a1;
  return (*(uint64_t (**)(void))(v5 + 8 * (((v4 == 0) * v3) ^ v1)))();
}

uint64_t sub_1001207A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  LODWORD(STACK[0x5DC]) = 1725372005;
  int v7 = LODWORD(STACK[0x700]) ^ 0x7B8;
  int v8 = LODWORD(STACK[0x700]) - 311;
  unsigned int v9 = ((2 * (v5 ^ 0x97D6AD71)) & 0xF2F775EC ^ 0xD2855424) + (v5 ^ 0x856FB994);
  unsigned int v10 = v6 + ((LODWORD(STACK[0x700]) - 1357) | 0x200) - 541391352 + v9;
  LODWORD(STACK[0x700]) = v7;
  BOOL v11 = v10 < v7 - 1126810360;
  BOOL v12 = v9 - 1017478024 < v10;
  if (v11 != v9 - 1017478024 < 0xBCD63F6E) {
    BOOL v12 = v11;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a5 + 8 * ((580 * v12) ^ v8)))(14891, 706225908, 2500596602);
}

uint64_t sub_100120834(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, char a12, uint64_t a13, int a14, unsigned int a15, uint64_t a16, char *a17)
{
  a15 = (v17 + 808) ^ ((&a14 ^ 0xB10986CE) * v18);
  a16 = a10;
  a17 = &a12;
  (*(void (**)(int *))(v19 + 8 * (v17 ^ 0x17EE)))(&a14);
  LODWORD(a17) = v17
               - 476588053 * (((&a14 | 0x1A84F599) + (~&a14 | 0xE57B0A66)) ^ 0xA779F1DB)
               + 1151;
  a16 = a10;
  uint64_t v21 = (*(uint64_t (**)(int *))(v19 + 8 * (v17 + 3199)))(&a14);
  return (*(uint64_t (**)(uint64_t))(v19
                                            + 8
                                            * (((a14 != 847203058) * (((v17 ^ (v20 + 1629)) - v20 + 575) ^ 0x5D8)) ^ v17)))(v21);
}

uint64_t sub_100120910(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t (*a61)(void))
{
  STACK[0x408] = v61;
  STACK[0x340] = STACK[0x2D8];
  return a61();
}

uint64_t sub_100120928(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int32x4_t a13, int8x16_t a14, int8x16_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,char a39)
{
  int v43 = v39 - v40 - 301;
  *(_DWORD *)uint64_t v42 = 0x80000000;
  (*(void (**)(uint64_t))(v41 + 8 * (v39 ^ 0x134D)))(a25);
  unsigned int v44 = (v43 - 1099823551) & 0xFCCCCF3B;
  int8x16_t v45 = (int8x16_t)vld1q_dup_f32((const float *)v42);
  v46.i64[0] = 0x8000000080000000;
  v46.i64[1] = 0x8000000080000000;
  v47.i64[0] = *(void *)(v42 + 4);
  v47.i32[2] = *(_DWORD *)(v42 + 12);
  int8x16_t v48 = vextq_s8(v45, v47, 0xCuLL);
  int8x16_t v49 = v47;
  v49.i32[3] = *(_DWORD *)(v42 + 16);
  int32x4_t v50 = (int32x4_t)veorq_s8((int8x16_t)vshrq_n_u32((uint32x4_t)vorrq_s8(vandq_s8(v49, a15), vandq_s8(v48, v46)), 1uLL), *(int8x16_t *)(v42 + 1588));
  v48.i32[0] = *((_DWORD *)&a39 + (*(_DWORD *)(v42 + 4) & 1));
  v48.i32[1] = *((_DWORD *)&a39 + (*(_DWORD *)(v42 + 8) & (563 * (v44 ^ 0x929) - 1125)));
  v48.i32[2] = *((_DWORD *)&a39 + (*(_DWORD *)(v42 + 12) & 1));
  v48.i32[3] = *((_DWORD *)&a39 + (v49.i8[12] & 1));
  *(int8x16_t *)uint64_t v42 = veorq_s8((int8x16_t)vaddq_s32(vsubq_s32(v50, (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v50, v50), a14)), a13), v48);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char *, uint64_t, uint64_t))(v41 + 8 * (int)(v44 ^ 0x60)))(a22, 4000026327, 3705085358, 2345, 563, &a39, 770689937, 3524280155);
}

void sub_100120AB0()
{
}

uint64_t sub_100120AF0()
{
  unsigned int v4 = (v0 + 1271122459) & 0xB43C3BBE;
  uint64_t v9 = v6;
  unsigned int v10 = v0 + ((&v8 & 0xDA420BB4 | ~(&v8 | 0xDA420BB4)) ^ 0x3313A20F) * v3 + 3404;
  (*(void (**)(uint64_t *))(v1 + 8 * (v0 + 3572)))(&v8);
  unsigned int v10 = v4
      + ((-404309962 - (&v8 | 0xE7E6B836) + (&v8 | 0x181947C9)) ^ 0xEB7118D) * v3
      + 1906;
  uint64_t v9 = v7;
  (*(void (**)(uint64_t *))(v1 + 8 * (int)(v4 + 2074)))(&v8);
  return (v2 - 847203058);
}

uint64_t sub_100120C04()
{
  *unsigned int v4 = v4[623];
  return (*(uint64_t (**)(void))(v2 + 8 * (((((v0 - 1956) | 0x12C) ^ 0x16D) * (v3 - 1 != v1)) | (v0 - 22))))();
}

uint64_t sub_100120C54@<X0>(int a1@<W4>, int a2@<W6>, uint64_t a3@<X8>)
{
  uint64_t v8 = (a1 - 1418306525);
  *(unsigned char *)(a3 + v8) ^= *(unsigned char *)(v5 + (v8 & 0xF)) ^ *(unsigned char *)(v6 + (v8 & 0xF)) ^ *(unsigned char *)(v4 + (v8 & 0xF)) ^ (5 * (v8 & 0xF)) ^ 0x60;
  return (*(uint64_t (**)(void))(v7 + 8 * ((3766 * (a1 - 1 == v3)) ^ (a2 + 1282))))();
}

uint64_t sub_100120CB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18, int a19, uint64_t a20,int a21)
{
  uint64_t v29 = &a21 + 6 * v22;
  v29[2] = v28;
  v29[3] = v27;
  *((void *)v29 + 2) = v23;
  v29[6] = a19;
  a21 = v21 + 1;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v25 + 8 * (int)(((*(_DWORD *)(v24 + 48 * v26 + 32) + 801075806 < ((a9 + 2087451751) & 0xB7F7A77F ^ 0xB463A771)) * ((a9 + 317787249) & 0xED0EF2DE ^ 0xB1F)) ^ a9)))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11);
}

uint64_t sub_100120D5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, int a12, uint64_t a13, char a14, unsigned int a15, uint64_t a16, int *a17)
{
  a16 = a10;
  a17 = &a12;
  a15 = (v17 + 23) ^ (1314530549
                    * (((&a14 ^ 0xF6947A65 | 0xC17643A1)
                      - (&a14 ^ 0xF6947A65)
                      + ((&a14 ^ 0xF6947A65) & 0x3E89BC5C)) ^ 0x86EBBF0A));
  uint64_t v19 = (*(uint64_t (**)(char *))(v18 + 8 * (v17 + 2381)))(&a14);
  return (*(uint64_t (**)(uint64_t))(v18 + 8 * ((1236 * (a12 == 0)) ^ v17)))(v19);
}

uint64_t sub_100120DF8@<X0>(int a1@<W1>, uint64_t a2@<X8>)
{
  *(unsigned char *)(a2 + (v5 + v4)) = *(unsigned char *)(v2 + (v5 + v4));
  return (*(uint64_t (**)(void))(v6 + 8 * ((1515 * (v5 - 4168 + 3 * (a1 ^ 0x7B7) == v3)) ^ (a1 + 1772))))();
}

uint64_t sub_100120E44()
{
  (*(void (**)(void))(v1 + 8 * (v0 + 2268)))();
  return (*(uint64_t (**)(void))(v1 + 8 * ((71 * (STACK[0x480] == 0)) ^ (v0 + 773))))();
}

uint64_t sub_100120E7C@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,_DWORD *a22,void *a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,char a34)
{
  int v37 = (a1 - 246848344) & 0xEB699FE;
  uint64_t v38 = 4 * (v36 - 157231881);
  unsigned int v39 = ((*(_DWORD *)(*a23 + (*a22 & 0x25E1C4F4)) ^ (a26 + v38)) & 0x7FFFFFFF) * (v37 + 1554973703);
  int v40 = v39 ^ HIWORD(v39);
  unsigned int v41 = 1554976193 * v40;
  *(_DWORD *)(&a34 + v38) ^= *(_DWORD *)(a26 + v38) ^ *((_DWORD *)*(&off_100520A90 + (a1 ^ 0xBB1)) + HIBYTE(v41) - 1) ^ *((_DWORD *)*(&off_100520A90 + (a1 ^ 0xB7B)) + HIBYTE(v41) + 3) ^ *((_DWORD *)*(&off_100520A90 + a1 - 2804) + HIBYTE(v41) - 1) ^ (230752256 * v40) ^ v41 ^ (-285530965 * HIBYTE(v41));
  return (*(uint64_t (**)(void))(v35
                              + 8
                              * (((v34 - 1 == (((v37 ^ 0xD04) + 2428) ^ 0x64F9A7E9)) * (3 * (v37 ^ 0xD04) - 3534)) ^ v37)))();
}

uint64_t sub_100120FCC(int a1, int8x16_t a2, int8x16_t a3)
{
  unsigned int v9 = v5 - 32;
  uint64_t v10 = v7 + v9;
  int8x16_t v11 = vrev64q_s8(*(int8x16_t *)(v10 - 15));
  int8x16_t v12 = vextq_s8(v11, v11, 8uLL);
  int8x16_t v13 = vrev64q_s8(*(int8x16_t *)(v10 - 31));
  int8x16_t v14 = vextq_s8(v13, v13, 8uLL);
  uint64_t v15 = v3 + v9;
  int8x16_t v16 = vrev64q_s8(vaddq_s8(vsubq_s8(v12, vandq_s8(vaddq_s8(v12, v12), a2)), a3));
  *(int8x16_t *)(v15 - 15) = vextq_s8(v16, v16, 8uLL);
  int8x16_t v17 = vrev64q_s8(vaddq_s8(vsubq_s8(v14, vandq_s8(vaddq_s8(v14, v14), a2)), a3));
  *(int8x16_t *)(v15 - 31) = vextq_s8(v17, v17, 8uLL);
  return (*(uint64_t (**)(void))(v8 + 8 * (((v6 == 32) * (v4 + 3685)) ^ a1)))();
}

uint64_t sub_100120FD8@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (((a1 + 672212043 + ((a1 - 1198181028) & 0x6F7BEEEE) - 1344429299) * (v2 == v1)) ^ a1)))();
}

uint64_t sub_10012102C(uint64_t a1)
{
  v8.i64[0] = 0x6060606060606060;
  v8.i64[1] = 0x6060606060606060;
  uint64_t v9 = (v5 + v3);
  int8x16_t v10 = *(int8x16_t *)(v1 + v9 - 15);
  int8x16_t v11 = *(int8x16_t *)(v1 + v9 - 31);
  uint64_t v12 = a1 + v9;
  *(int8x16_t *)(v12 - 15) = veorq_s8(v10, v8);
  *(int8x16_t *)(v12 - 31) = veorq_s8(v11, v8);
  return (*(uint64_t (**)(void))(v7
                              + 8
                              * ((19 * (((v6 - 452443963) & 0xE4A3D77) - 2087 == (v4 & 0xFFFFFFE0))) ^ (v2 + v6 + 3015))))();
}

uint64_t sub_1001210A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  *uint64_t v7 = a1;
  *int8x16_t v8 = v6;
  int v11 = (a6 - 1551309660) & 0x5C771DF1;
  unsigned int v17 = a6
      + 1001
      + 366490169 * ((2 * (&v15 & 0x7C692250) - &v15 - 2087264853) ^ 0x95388BEF)
      + 2916;
  uint64_t v16 = v13;
  (*(void (**)(uint64_t *))(v9 + 8 * (a6 + 4085)))(&v15);
  unsigned int v17 = v11 + 366490169 * (&v15 ^ 0x16AE5644) + 3255;
  uint64_t v16 = v14;
  (*(void (**)(uint64_t *))(v9 + 8 * (v11 + 3423)))(&v15);
  return (v10 - 847203058);
}

uint64_t sub_1001211B4(uint64_t a1, uint64_t a2, uint64_t a3, int a4, int a5)
{
  return (*(uint64_t (**)(void))(v6 + 8 * (((((v5 == a4) ^ (a5 + 21)) & 1) * (a5 - 1330)) ^ a5)))();
}

uint64_t sub_1001211E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(void))(v11
                              + 8
                              * ((((((v10 - a8 - 2034) ^ (v8 == ((12 * (v10 ^ 0x93F)) ^ 0x3F3))) & 1) == 0) * v9) ^ v10)))();
}

uint64_t sub_100121230@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13)
{
  int v18 = 2 * (a1 ^ 0xFDD);
  int v19 = ((2 * ((v17 - 144) & 0x2AFCBD98) - (v17 - 144) - 721206681) ^ 0xFFFCED08) * v14;
  *(void *)(v17 - 144) = &a13 + v13;
  *(_DWORD *)(v17 - 136) = v19 ^ 0x7B7D7201;
  *(_DWORD *)(v17 - 132) = v19 + v18 + 315;
  uint64_t v20 = (*(uint64_t (**)(uint64_t))(v15 + 8 * (v18 ^ 0x297)))(v17 - 144);
  return (*(uint64_t (**)(uint64_t))(v15
                                            + 8
                                            * ((28 * (((v16 == 0) ^ (v18 + 91)) & 1)) ^ (v18 - 1627))))(v20);
}

uint64_t sub_1001212FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v10
                                                     + 8
                                                     * (((v8 < ((a5 - 1434780172) & 0x5584F3DE ^ 0x33Eu))
                                                       * (a8 + a5 + v9 - 502)) ^ a5)))(a1, 100663998);
}

uint64_t sub_100121350(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v8 + 8 * (int)(((a5 + ((1657 * (v7 ^ 0x4AE)) ^ 0xF5747A66) + 2750) * (v5 == v6)) ^ v7)))();
}

uint64_t sub_100121390(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, unint64_t *a17, int a18, unsigned int a19)
{
  a17 = &STACK[0x75464D914B724897];
  a19 = 3687
      - (((&a17 | 0xBA07ACFC) - &a17 + (&a17 & 0x45F85300)) ^ 0x7D86CCB5)
      * v20;
  uint64_t v21 = (*(uint64_t (**)(unint64_t **))(v19 + 37680))(&a17);
  return (*(uint64_t (**)(uint64_t))(v19 + 8 * ((7 * (a18 != 847203058)) ^ 0x29Au)))(v21);
}

uint64_t sub_10012144C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unsigned int a13, uint64_t a14, int a15)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v15
                                                                       + 8
                                                                       * ((21 * (a15 - 1710069001 < a13)) ^ (v16 + 3170))))(a1, a2, a3, a4);
}

uint64_t sub_100121458(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v8
                                                                                                  + 8 * ((28 * (((v9 == 0) ^ (v7 + 91)) & 1)) ^ (v7 - 1627))))(a1, a2, a3, a4, a5, a6, a7);
}

uint64_t sub_1001214A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,int a21)
{
  return (*(uint64_t (**)(void))(v21 + 8 * ((1830 * (a21 == -2126317980)) ^ 0x151u)))();
}

uint64_t sub_100121500(uint64_t a1, int a2)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((44
                                * ((((a2 ^ 0x41) - v3 - 1) ^ (v2 < (((a2 ^ 0x941) - 1715230162) & 0x663C4E7F ^ 0x64Eu))) & 1)) ^ a2 ^ 0x941)))();
}

uint64_t sub_10012155C(int a1)
{
  return (*(uint64_t (**)(void))(v1 + 8 * (((((v2 - 1824) ^ 0x411) + v2 - 2740) * (a1 == 0)) ^ (v2 + 1292))))();
}

uint64_t sub_100121590(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t))(v8
                                                                                                 + 8
                                                                                                 * ((((((a5 + a8 + 563) < 0xFFFFFFF0) ^ (a6 + 39)) & 1) * (a6 - 1581)) ^ (a6 + 2611))))(a1, a2, a3, a4, a5, (a6 - 1996313049), a4);
}

uint64_t sub_1001215DC(uint64_t a1, uint64_t a2, uint64_t a3, int a4, int a5)
{
  LODWORD(STACK[0x67C]) = v7;
  LODWORD(STACK[0x6E0]) = v6;
  LODWORD(STACK[0x708]) = a5 - 396975459;
  int v8 = (a4 ^ 0x86A5D570) - 242650706 + a5;
  LODWORD(STACK[0x670]) = 2 * v8;
  LODWORD(STACK[0x66C]) = (v8 ^ 0x77CD6B6F) - 604332544;
  LODWORD(STACK[0x6F4]) = -379458906;
  LODWORD(STACK[0x700]) = -333399159;
  LODWORD(STACK[0x6F0]) = v5 ^ 0x3DA;
  unsigned int v9 = ((-1673081951 * LODWORD(STACK[0x728]) + 1317987245) * (LODWORD(STACK[0x6F0]) ^ 0xF2270E00) - 403473328) ^ 0x99C91727;
  unsigned int v10 = LODWORD(STACK[0x700])
      - 1620461369
      + ((1099242528
        - 1587129527 * (((v9 + 1099242528 - ((2 * v9) & 0x830A3840)) ^ 0x41851C20) % 0x6AD)
        - ((1120708242 * (((v9 + 1099242528 - ((2 * v9) & 0x830A3840)) ^ 0x41851C20) % 0x6AD)) & 0x830A3840)) ^ (v9 + 1099242528 - ((2 * v9) & 0x830A3840)));
  unsigned int v11 = (v10 + 1121937038 - ((2 * v10) & 0x85BECD1C)) ^ LODWORD(STACK[0x6F4]);
  unsigned int v12 = v11 - ((2 * v11 + 93326872) & 0xD9620D94) - 277279274;
  int v13 = v12 ^ LODWORD(STACK[0x6F4]);
  unsigned int v14 = ((LODWORD(STACK[0x700]) - 1150697384) ^ 0x6CB106CA ^ v12)
      + 569926292
      + (~(2 * ((LODWORD(STACK[0x700]) - 1150697384) ^ 0x6CB106CA ^ v12)) | 0xBC0F3AD9);
  unsigned int v15 = ((2 * ((v12 ^ 0x6CB106CA) - 469763985)) & 0xF6F776DE) + (((v12 ^ 0x6CB106CA) - 469763985) ^ 0x7B7BBB6F);
  HIDWORD(v16) = v12 ^ 0xCB106CA;
  LODWORD(v16) = v12 ^ 0x60000000;
  int v17 = (v16 >> 28) + 2071706479 - v15 + (v14 ^ 0xDE079D6C) + 1;
  int v18 = (v17 + 778985540 - ((2 * v17) & 0x5CDCC088)) ^ v13;
  int v19 = v18 - ((2 * v18 + 1932676522) & 0x6584F55E) + 744202628;
  int v20 = v19 ^ v14;
  int v21 = (v13 ^ 0x2E6E6044)
      + (v19 ^ 0x4D3D8550)
      + 1
      - ((2 * ((v13 ^ 0x2E6E6044) + (v19 ^ 0x4D3D8550) + 1)) & 0x371EB2A8)
      - 1685104300;
  unsigned int v22 = ((2 * (v15 - 2071706478 + (v19 ^ 0x4D3D8550))) & 0xB8BF2C9A)
      + ((v15 - 2071706478 + (v19 ^ 0x4D3D8550)) ^ 0xDC5F964D);
  HIDWORD(v16) = v19 ^ 0x2C27AAF;
  LODWORD(v16) = v19 ^ 0xB0000000;
  int v23 = (v21 ^ 0x6470A6AB)
      + (((v16 >> 28) + 597715379 + v22 - 1824909252 - ((2 * ((v16 >> 28) + 597715379 + v22)) & 0x26743078)) ^ v20)
      + 1;
  int v24 = v23 - ((2 * v23 + 113892998) & 0xE7EFF6A) + 1386508024;
  unsigned int v25 = (v24 ^ 0xF8C0804A) + v22 - ((2 * ((v24 ^ 0xF8C0804A) + v22) + 1195430760) & 0xCB54B7FC) - 1991588430;
  int v26 = v24 ^ v21;
  unsigned int v27 = ((2 * ((v20 ^ 0x933A183C) + (v24 ^ 0xF8C0804A) + 1)) & 0x22FFEDDA)
      + (((v20 ^ 0x933A183C) + (v24 ^ 0xF8C0804A) + 1) ^ 0x117FF6ED);
  HIDWORD(v16) = v24 ^ 0x73F7FB5;
  LODWORD(v16) = v24;
  int v28 = ((v16 >> 29) + v27 - 293598956 + (v25 ^ 0x9A55A401)) ^ v26;
  unsigned int v29 = ((2 * v28) & 0x9DBA53FE ^ 0x192041C2) + (v28 ^ 0x526D0F1E);
  LODWORD(STACK[0x700]) = v27 - v29 - 1567273971;
  LODWORD(STACK[0x6EC]) = v29;
  LODWORD(STACK[0x6C8]) = ((2 * ((v29 - 1870594898) ^ v25)) & 0x7F94B9EE ^ 0x4B14B1EC)
                        + ((v29 - 1870594898) ^ v25 ^ 0xDA600709);
  LODWORD(STACK[0x6F4]) = v29
                        - 1870594898
                        + (v26 ^ 0x9CB026E1)
                        + 1121937038
                        - ((2 * (v29 - 1870594898 + (v26 ^ 0x9CB026E1))) & 0x85BECD1C);
  return (*(uint64_t (**)(uint64_t))(STACK[0x6F8] + 8 * v5))(2470058044);
}

uint64_t sub_100121AC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, unsigned int a20,uint64_t a21,int a22,int a23)
{
  unsigned int v26 = 366490169 * (((&a20 | 0x63AD39BF) - (&a20 & 0x63AD39BF)) ^ 0x75036FFB);
  a20 = (v24 ^ 0x7DDFEFB3) + ((v23 - 71312608) & (2 * v24)) - 1765944482 + v26;
  a21 = a16;
  a22 = v26 + v23 + 2160;
  uint64_t v27 = (*(uint64_t (**)(unsigned int *))(v25 + 8 * (v23 ^ 0x161F)))(&a20);
  return (*(uint64_t (**)(uint64_t))(v25 + 8 * ((914 * (a23 == ((v23 + 877) ^ 0x327F4D41))) ^ v23)))(v27);
}

uint64_t sub_100121B94(uint64_t a1, int a2, uint64_t a3, int a4, int a5, int a6, uint64_t a7, int a8)
{
  int v16 = v8 + 989;
  int v17 = a4 - v9;
  int v18 = a5 - (a8 - v11) + 1490993804;
  int v19 = a2 + a4 - v9 - v10;
  int v20 = a2 + a4 - v10 - 79320076;
  unsigned int v21 = (v16 ^ 0xC9767E88) + v20;
  int v22 = v10 - v20;
  int v23 = v17 - v20 + 8281539;
  int v24 = a6 - (a5 - a8 + 1490993804) - 219683743;
  int v25 = -v11 - (a6 - (a5 + 1490993804) - 219683743) + 554066485;
  int v26 = a6 - v18 - 304741683;
  int v27 = v18 - 1100680181 + v25;
  int v28 = v19 - 765278430;
  char v29 = (v10 + 44) ^ 0x27;
  unsigned int v30 = a5 ^ 0xF2E174DB;
  LODWORD(STACK[0x554]) = v22 + 1898386554;
  LODWORD(STACK[0x550]) = a6 - v18 + 169290167;
  int v31 = v22 + 1519653813 - (v19 - 765278430) - 2043073288;
  LODWORD(STACK[0x670]) = 437272390 - v21 - ((134352118 - 2 * v21) & 0xC1E7196);
  LODWORD(STACK[0x54C]) = v23 - 221916631;
  LODWORD(STACK[0x560]) = 1893275007 - v19;
  LODWORD(STACK[0x66C]) = 1951537285 - v25 - ((414571970 - 2 * v25) & 0xCFEE5348);
  unsigned int v32 = (v25 - 2002205279) & 0xA0B4F6CB;
  LODWORD(STACK[0x570]) = a6 - (a5 - a8 + 1490993804) + 1682748345;
  int v33 = v28 - v21;
  LODWORD(STACK[0x668]) = -1894905075 - v27 - ((531574054 - 2 * v27) & 0x7E6CE8F4);
  int v34 = v27 + v25 + 1391236919;
  int v35 = v27 + 545309103 - v26;
  v31 ^= 0x24AF81B7u;
  unsigned int v36 = v16 + 203 + v32 + (v32 ^ 0xA0B4F6CB) + 1108388565 + v23 + v22 + 1519653813;
  unsigned int v37 = v36 - ((2 * v36) & 0xE2AC3612) + 1901468425;
  unsigned int v38 = ((2 * v37) & 0xBFFFDC74 ^ 0x26250870) + (v37 ^ 0x6CED7B42);
  LODWORD(STACK[0x558]) = v21 + 1862217849;
  LODWORD(STACK[0x568]) = -1427221760 - (a6 - (a5 - a8 + 1490993804));
  int v39 = ((2 * v34) & 0x5DDDF97E ^ 0x4891862) + (v34 ^ 0x6CAA72CE);
  LODWORD(STACK[0x564]) = -321980235 - v31 - ((464470338 - 2 * v31) & v13);
  int v40 = v33 - v38 - 1137147211;
  int v41 = v26 - v24;
  v35 ^= 0x24AF81B7u;
  LODWORD(STACK[0x680]) = -479154087 - v41 - ((1407194832 - 2 * v41) & 0x730149E2);
  LODWORD(STACK[0x55C]) = v35 - 525299794;
  int v42 = v31 - 1772880928 + v40;
  LODWORD(STACK[0x56C]) = v39 + 1275700357;
  LODWORD(STACK[0x540]) = v33 - 1077926452;
  int v43 = v39 + v24;
  unsigned int v44 = v38 + v21;
  LODWORD(STACK[0x3A4]) = v39;
  int v45 = v41 - v39 + 324873975;
  unsigned int v46 = (v37 ^ 0x8AF715B4) + ((2 * v37) & 0xBE96126A ^ 0xAA101003) - v44 + 1;
  int v47 = v46 - ((2 * v46 + 1219007506) & 0x769EC182) + 530819786;
  unsigned int v48 = (v34 ^ 0xA4EA0788) - v43 - 1317214431 + v15 - ((2 * ((v34 ^ 0xA4EA0788) - v43 - 1317214431)) & 0xBA2AC0C0);
  LODWORD(STACK[0x67C]) = 1835252895 - v38 - ((724510226 - 2 * v38) & 0x2F98532C);
  LODWORD(STACK[0x710]) = v43 - ((2 * v43 + 1799478546) & 0xDC7D3FB2) + 601853538;
  unsigned int v49 = v44 - ((2 * v44 + 1190986964) & 0xFC6A28E0) - 1582065958;
  unsigned int v50 = v40 ^ 0xD1212853 ^ v47;
  unsigned int v51 = v45 ^ 0x8525A6E2 ^ v48;
  int v52 = v45 + v35 - 2 * ((v45 + v35 + 364821632) & (v12 + 8) ^ (v45 + v35) & 8) + 1322444499;
  LODWORD(STACK[0x53C]) = 1347728480;
  LODWORD(STACK[0x3D0]) = 1787608647;
  LODWORD(STACK[0x700]) = v16 + 203;
  LODWORD(STACK[0x6F0]) = 751 * ((v16 + 203) ^ 0x940);
  LODWORD(STACK[0x708]) = (v16 - 1734193817) & 0x675DAFFF;
  unsigned int v53 = v30 ^ v52 ^ 0xCBF55E4C;
  LOBYTE(v38) = (v42 - 2 * ((v16 + 103 + v42 - 62) & 0xDF ^ v42 & 0xA) + 117) ^ v29;
  LOBYTE(STACK[0xCB6]) = (-17 * ((v16 - 53) ^ 0x40)) ^ 0x58 ^ v38;
  unsigned int v54 = (v50 ^ 0xEA6E4892) + (v47 ^ 0x3B4F60C1);
  LOBYTE(v38) = (v38 - 63 - ((2 * v38) & 0x82)) ^ (v46 - ((2 * v46 + 18) & 0x82) - 54);
  LOBYTE(STACK[0xE84]) = v53 - ((2 * (v30 ^ v52)) & 0x26) + 19;
  int v55 = (v53 + v15 - 2 * (v53 & 0x5D156071 ^ (v30 ^ v52) & 0x11)) ^ v48;
  LOBYTE(STACK[0xE8B]) = v55 - ((2 * v55) & 0x26) + 19;
  int v56 = v51 ^ 0x5830C682;
  int v57 = (v51 ^ 0x5830C682) + (v48 ^ v15);
  unsigned int v58 = (v55 + 1479591554 - ((2 * v55) & 0xB0618D04)) ^ v51;
  LOBYTE(v40) = (v38 - 110 - ((2 * v38) & 0x24)) ^ v50;
  unsigned int v59 = v54 + (v50 ^ 0xEA6E4892) - 1687051671 - ((2 * (v54 + (v50 ^ 0xEA6E4892))) & 0x36E344D2);
  LOBYTE(STACK[0xCC4]) = v40 ^ 0x86;
  LOBYTE(STACK[0xCBD]) = v38 ^ 0x86;
  unsigned int v60 = (v49 ^ 0xFE351470) - v54 + (v59 ^ 0x648E5D96);
  LOBYTE(STACK[0xE92]) = v58 + (~(2 * v58) | 0xD9) + 20;
  unsigned int v61 = v51;
  int v62 = STACK[0x710];
  unsigned int v63 = (v58 - 297885735 - ((2 * v58) & 0xDC7D3FB2)) ^ LODWORD(STACK[0x710]);
  unsigned int v64 = (v52 ^ v12) + (v61 ^ 0xA7CF397D) + 1196511587;
  LOBYTE(STACK[0xE99]) = v63 - ((2 * v63) & 0x26) + 19;
  int v65 = v57 + v56 - 1094447401 - ((2 * (v57 + v56)) & 0x7D881DAE);
  int v66 = v63 ^ v64;
  LOBYTE(STACK[0xEA0]) = v66 - ((2 * v66) & 0x26) + 19;
  int v67 = (v66 - 1094447401 - ((2 * v66) & 0x7D881DAE)) ^ v65;
  int v68 = (v50 ^ 0x1591B76D) + v42 - 960753149;
  LOBYTE(STACK[0xCCB]) = (v40 + 112 - ((2 * v40) & 0xE0)) ^ v49 ^ 0x86;
  LOBYTE(v48) = (v40 + 112 - ((2 * v40) & 0xE0)) ^ v49 ^ v68;
  LOBYTE(STACK[0xEA7]) = v67 - ((2 * v67) & 0x26) + 19;
  unsigned int v69 = ((2 * (v59 ^ v50)) & 0xF7AFEEE6 ^ 0xE22FC4E6) + (v59 ^ v50 ^ 0xAC81D88);
  BOOL v70 = LODWORD(STACK[0x58C]) == -203855227;
  ++v60;
  unsigned int v71 = (v67 + 1479591554 - ((2 * v67) & 0xB0618D04)) ^ v61;
  LOBYTE(v40) = (v48 + 105 - ((2 * v48) & 0xD2)) ^ v59;
  unsigned int v72 = (v65 ^ 0x413BF128) - v57 + (v62 ^ 0xEE3E9FD9) + 1;
  LOBYTE(v59) = (v40 - 110 - ((2 * v40) & 0x24)) ^ v50;
  LOBYTE(STACK[0xEAE]) = v71 - ((2 * v71) & 0x26) + 19;
  LOBYTE(v62) = v59 ^ v60;
  int v73 = (v50 ^ 0x1591B76D) + v60 + 1;
  LOBYTE(STACK[0xCD2]) = v48 ^ 0x86;
  LOBYTE(STACK[0xCD9]) = v40 ^ 0x86;
  int v74 = v68 - v73;
  int v75 = v71 ^ v72;
  unsigned int v76 = (v61 ^ 0xA7CF397D) + v72 + 1;
  unsigned int v77 = v64 - v76;
  LOBYTE(STACK[0xCE0]) = v59 ^ 0x86;
  unsigned int v78 = v73 - (v68 - v73) - 187743658 - ((2 * (v73 - (v68 - v73))) & 0xE99E84AC);
  unsigned int v79 = v61 ^ 0xE6F4C855 ^ v65;
  int v80 = v76 - v77 + 798565745 - ((2 * (v76 - v77)) & 0x5F324AE2);
  unsigned int v81 = v78 ^ 0xF4CF4256;
  LOBYTE(STACK[0xEB5]) = v75 - ((2 * v75) & 0x26) + 19;
  unsigned int v82 = (v50 ^ 0xEA6E4892)
      - 2068978999
      + (v78 ^ 0xF4CF4256)
      - 189211566
      - ((2 * ((v50 ^ 0xEA6E4892) - 2068978999 + (v78 ^ 0xF4CF4256))) & 0xE971B8A4);
  LOBYTE(v68) = (v62 ^ (v74 + 14)) & 8 | 0x95;
  int v83 = v75 ^ (v77 - 1620707570);
  LOBYTE(v49) = (v62 ^ (v74 + 14)) & 0xF7;
  LOBYTE(STACK[0xCE7]) = v62 ^ 0x86;
  LOBYTE(STACK[0xEBC]) = v83 - ((2 * v83) & 0x26) + 19;
  LOBYTE(v48) = (v69 - ((2 * v69 + 116) & 0x50) + 98) ^ v62 ^ (v74 + 14);
  int v84 = v83 ^ (v79 - 2080828115);
  LOBYTE(STACK[0xEC3]) = v84 - ((2 * v84) & 0x26) + 19;
  int v85 = v80 ^ 0x2F992571;
  int v86 = v56 - 2068978999 + (v80 ^ 0x2F992571);
  LOBYTE(v68) = (v68 ^ v49) + (~(2 * (v68 ^ v49)) | 0xD9) + 20;
  LOBYTE(v59) = ((v48 ^ 0xA8) + 82 - ((2 * (v48 ^ 0xA8)) & 0xA4)) ^ ((v50 ^ 0x92)
                                                                   - 55
                                                                   + (v78 ^ 0x56)
                                                                   + 82
                                                                   - ((2 * ((v50 ^ 0x92) - 55 + (v78 ^ 0x56))) & 0xA4));
  int v87 = v82 ^ 0x10A24AC5;
  LOBYTE(STACK[0xCEE]) = v68;
  int v88 = v84 ^ v86;
  LOBYTE(STACK[0xCF5]) = v48 ^ 0x2E;
  unsigned int v89 = (v74 - ((2 * (v74 - 1620707570)) & 0xE99E84AC) - 1808451228) ^ v78;
  LOBYTE(STACK[0xECA]) = v88 + (~(2 * v88) | 0xD9) + 20;
  int v90 = v69 - (v82 ^ 0x10A24AC5) - 2012067757 - ((2 * (v69 - (v82 ^ 0x10A24AC5) + 1629123530)) & 0x4DEFA912);
  LOBYTE(v78) = (v59 + 86 - ((2 * v59) & 0xAC)) ^ v78;
  int v91 = (v88 + 798565745 - ((2 * v88) & 0x5F324AE2)) ^ v80;
  unsigned int v92 = (v89 - 189211566 - ((2 * v89) & 0xE971B8A4)) ^ 0xE41A9697 ^ v82;
  LOBYTE(STACK[0xD03]) = v78 ^ 0x86;
  int v93 = (v77 - ((2 * (v77 - 1620707570)) & 0x5F324AE2) - 822141825) ^ v80 ^ v86;
  LOBYTE(STACK[0xCFC]) = v59 ^ 0x86;
  LOBYTE(STACK[0xED1]) = v91 - ((2 * v91) & 0x26) + 19;
  unsigned int v94 = (v86 ^ 0x1BE56968) + v79 - ((2 * ((v86 ^ 0x1BE56968) + v79) - 1176185220) & 0xC18117CC) - 1112344796;
  unsigned int v95 = (v91 + 786940884 - ((2 * v91) & 0x5DCF87A8)) ^ v93 ^ 0xCAFD5543;
  LOBYTE(v78) = v78 ^ v92;
  LOBYTE(STACK[0xED8]) = v95 - ((2 * v95) & 0x26) + 19;
  unsigned int v96 = v94 ^ 0xE0C08BE6;
  unsigned int v97 = v85 + 222383983 + (v94 ^ 0xE0C08BE6);
  int v98 = v90 ^ 0x26F7D489;
  int v99 = v81 + 222383983 + (v90 ^ 0x26F7D489);
  LOBYTE(STACK[0xD11]) = (v78 - 119 - ((2 * v78) & 0x12)) ^ v90 ^ 0x86;
  LOBYTE(v48) = (v78 - 119 - ((2 * v78) & 0x12)) ^ v90 ^ (v87 - 101) ^ v99;
  LOBYTE(STACK[0xD18]) = (v78 - 119 - ((2 * v78) & 0x12)) ^ v90 ^ (v87 - 101) ^ 0x86;
  unsigned int v100 = (v95 - 524252186 - ((2 * v95) & 0xC18117CC)) ^ v94;
  int v101 = v99 ^ v90;
  LOBYTE(STACK[0xD0A]) = v78 ^ 0x86;
  v86 ^= 0xE41A9697;
  LOBYTE(STACK[0xEDF]) = v100 - ((2 * v100) & 0x26) + 19;
  int v102 = v100 ^ (v86 + 1965514907);
  LOBYTE(STACK[0xEE6]) = v102 - ((2 * v102) & 0x26) + 19;
  int v103 = v101 & 0x209260CA;
  int v104 = v101 & 0x209260CA ^ 0x20924088;
  int v105 = v102 ^ v97;
  unsigned int v106 = ((2 * (v97 ^ v94)) & 0xEEBFFF56 ^ 0xC0811744) + (v97 ^ v94 ^ 0x979F744D);
  v101 ^= 0x26F7D489u;
  LOBYTE(STACK[0xD1F]) = v48 ^ 0x86;
  unsigned int v107 = v106 + v86;
  unsigned int v108 = v92 - 369504901 * (v93 & 0x21074043 ^ 0x1054040 | v93 & 0x21074043 ^ 0x20020003 | (v104 + (v103 ^ 0x2042)));
  LOBYTE(v48) = v48 ^ (v108 + 119);
  LOBYTE(STACK[0xEED]) = v105 - ((2 * v105) & 0x26) + 19;
  v106 -= 2002780075;
  int v109 = v101 + v98;
  unsigned int v110 = (v105 + 786940884 - ((2 * v105) & 0x5DCF87A8)) ^ v93 ^ 0xCAFD5543;
  unsigned int v111 = v93 ^ 0xE41A9697;
  unsigned int v112 = v93 ^ 0xE41A9697 ^ (v107 - 37265168);
  unsigned int v113 = v106 + v96 - ((2 * (v106 + v96) - 614083518) & 0xC7B7C48C) - 779170713;
  int v114 = (v108 - 1152454793) ^ (v101 + v87 + 1965514907);
  LOBYTE(v104) = v48 ^ (v109 + 33);
  LOBYTE(STACK[0xEF4]) = v110 - ((2 * v110) & 0x26) + 19;
  unsigned int v115 = (v110 - 472128954 - ((2 * v110) & 0xC7B7C48C)) ^ v113;
  LOBYTE(STACK[0xD26]) = v48 ^ 0x86;
  LOBYTE(v48) = (v104 - 126 - ((2 * v104) & 4)) ^ (v108 + 119) ^ (v101 + v87 - 101) ^ 0x82;
  int v116 = v114 + v101;
  int v117 = (v108 - ((2 * v108 + 379444974) & 0x17285904) - 958194695) ^ v114 ^ 0xB942C82;
  LOBYTE(STACK[0xEFB]) = v115 - ((2 * v115) & 0x26) + 19;
  int v118 = v115 ^ v112;
  LOBYTE(v68) = v48 ^ 0x86;
  LOBYTE(v48) = v48 ^ v116;
  LOBYTE(v96) = v48 ^ 0xBE;
  LOBYTE(STACK[0xD2D]) = v104 ^ 0x86;
  LOBYTE(STACK[0xF02]) = v118 + (~(2 * v118) | 0xD9) + 20;
  LOBYTE(STACK[0xD34]) = v68;
  unsigned int v119 = (v113 ^ 0xE3DBE246) - v107;
  int v120 = v118 ^ (v112 + v106);
  LOBYTE(STACK[0xD3B]) = v48 ^ 0x86;
  int v121 = v111 - ((2 * v111 + 68836958) & 0x15056650) + 210756183;
  int v122 = (v93 ^ 0x1BE56968) - v107 + 564736470 + v112 + v106;
  LOBYTE(STACK[0xF09]) = v120 ^ 0x13;
  LOBYTE(STACK[0xF10]) = (v120 ^ v121 ^ 0x28) - ((2 * (v120 ^ v121)) & 0x26) + 19;
  int v123 = 2 * v119 + 74530336;
  unsigned int v124 = v119 - (v123 & 0x15056650);
  unsigned int v125 = (v119 - (v123 & 0x29F24FE0) - 1758345472) ^ 0x94F927F0 ^ v120;
  LOBYTE(STACK[0xF17]) = v125 - ((2 * v125) & 0x26) + 19;
  int v126 = v109 - 307041759 - v117;
  LOBYTE(STACK[0xD42]) = v96 ^ (v108 - 2 * ((v108 - 90) & 0x3F ^ v108 & 1) + 100) ^ 0x86;
  unsigned int v127 = (v125 - 472128954 - ((2 * v125) & 0xC7B7C48C)) ^ v113;
  unsigned int v128 = ((2 * ((v113 ^ 0xE3DBE246) + (v121 ^ 0x8A82B328))) & 0xD2D7F338)
       + (((v113 ^ 0xE3DBE246) + (v121 ^ 0x8A82B328)) ^ 0xE96BF99C);
  LOBYTE(STACK[0xF1E]) = v127 - ((2 * v127) & 0x26) + 19;
  LOBYTE(v93) = v96 ^ (v109 + 33 - v117 - 66 - ((2 * (v109 + 33 - v117)) & 0x7C)) ^ (v109 + 33);
  int v129 = v116 - v108 - v117 + 1679926094;
  int v130 = v127 ^ v122;
  unsigned int v131 = v108 + v109;
  LOBYTE(STACK[0xF25]) = v130 - ((2 * v130) & 0x26) + 19;
  LOBYTE(STACK[0xD50]) = v93 ^ 0x86;
  LOBYTE(v123) = v93 ^ v129;
  unsigned int v132 = (v126 ^ (v108 + 1029447334)) - v131;
  LOBYTE(v113) = v96 ^ (v126 - 66 - ((2 * v126) & 0x7C)) ^ 0x86;
  int v133 = v129 - v131 + v132 + 1077961518;
  unsigned int v134 = ((v124 - 1933880776) ^ v121) - v128;
  unsigned int v135 = ((2 * ((v131 + 722405575) ^ (v108 + 2059837235))) & 0x8C768EFE)
       + ((v131 + 722405575) ^ (v108 + 2059837235) ^ 0x463B477F);
  LOBYTE(STACK[0xD49]) = v113;
  unsigned int v136 = v134 + v122 - v128;
  LOBYTE(v113) = v123 ^ (v108 - 56 + v133 - 6) ^ (v132 - 124);
  unsigned int v137 = ((2 * ((v128 + 378799716) ^ (v111 - 1082675268))) & 0xFA689FD6)
       + ((v128 + 378799716) ^ (v111 - 1082675268) ^ 0x7D344FEB);
  unsigned int v138 = v111 - 1508016577 + v136;
  int v139 = v130 ^ v138;
  LOBYTE(STACK[0xF2C]) = v139 - ((2 * v139) & 0x26) + 19;
  LOBYTE(v111) = v113 ^ 0x86;
  LOBYTE(STACK[0xD57]) = v123 ^ 0x86;
  LOBYTE(v113) = v113 ^ (2 * ((v131 - 57) ^ (v108 + 51)) + ((v131 - 57) ^ (v108 + 51) ^ 0x7F) - 127);
  int v140 = v139 ^ (v134 - 46541593);
  LOBYTE(STACK[0xD65]) = v111;
  LOBYTE(STACK[0xD5E]) = v123 ^ (v108 - 56 + v133 - 6) ^ 0x86;
  LOBYTE(STACK[0xF33]) = v140 - ((2 * v140) & 0x26) + 19;
  int v141 = v140 ^ (v137 - 2100580331);
  LOBYTE(STACK[0xF3A]) = v141 - ((2 * v141) & 0x26) + 19;
  int v142 = v141 ^ (v136 - 425341309);
  int v143 = (1178290047 - v135 + v108 + 1497409992 + v133 - 1628087302) ^ (v132 - 447118999);
  LOBYTE(STACK[0xF41]) = v142 - ((2 * v142) & 0x26) + 19;
  int v144 = (2100580331 - v137 + v138) ^ (v134 - 103513140);
  LOBYTE(v131) = v113 ^ 0x86;
  LOBYTE(v113) = v113 ^ (v133 - 113);
  int v145 = v135 + 1016884700 + v132 + 1077961518;
  LOBYTE(STACK[0xD6C]) = v131;
  int v146 = v142 ^ v144;
  LOBYTE(STACK[0xD73]) = v113 ^ 0x86;
  LOBYTE(v113) = v113 ^ (127 - v135 + v108 - 56 + v133 - 6) ^ (v132 + 105);
  int v147 = v133 - 1628087302 - v135 - 823471139;
  LOBYTE(v121) = v113 ^ 0x86;
  LOBYTE(v113) = v113 ^ v145;
  LOBYTE(STACK[0xD7A]) = v121;
  char v148 = v113 ^ (v135 - 115);
  char v149 = v148 ^ v147;
  int v150 = v134 - 103513140 + v137 + 1619674933;
  LOBYTE(STACK[0xF48]) = v146 - ((2 * v146) & 0x26) + 19;
  LOBYTE(STACK[0xD81]) = v113 ^ 0x86;
  int v151 = v146 ^ v150;
  unsigned int v152 = v143 + v135;
  LOBYTE(STACK[0xF4F]) = v151 - ((2 * v151) & 0x26) + 19;
  int v153 = v151 ^ (v137 - 1782844383);
  LOBYTE(STACK[0xF56]) = v153 + (~(2 * v153) | 0xD9) + 20;
  int v154 = v144 + v137 - ((2 * (v144 + v137) + 1028195082) & 0x2EA8497A);
  unsigned int v155 = v147 + v135 - 860554099;
  unsigned int v156 = v143 + v135 + 1436387825 + v155 + 1467043979 - ((2 * (v143 + v135 + 1436387825 + v155)) & 0xAEE2A116);
  LOBYTE(STACK[0xD8F]) = v149 ^ 0x86;
  int v158 = v70;
  LODWORD(STACK[0x6F4]) = v158;
  int v159 = v136 - v137 + 235905079;
  int v160 = v154 + 905487938;
  int v161 = v153 ^ v159;
  LOBYTE(STACK[0xD88]) = v148 ^ 0x86;
  unsigned int v162 = v159 + v137 - 1782844383;
  int v163 = v162 ^ v150;
  LOBYTE(STACK[0xF5D]) = v161 - ((2 * v161) & 0x26) + 19;
  int v164 = (v161 + 391390397 - ((2 * v161) & 0x2EA8497A)) ^ v160;
  unsigned int v165 = (v160 ^ 0x175424BD) + v162;
  unsigned int v166 = v137 + 536809209 + v163;
  int v167 = v135 + 1459099493 + (v155 ^ v145);
  char v168 = v149 ^ (v143 + v135 - 15);
  LOBYTE(v163) = v168 ^ v167;
  LOBYTE(STACK[0xF64]) = v164 - ((2 * v164) & 0x26) + 19;
  LOBYTE(STACK[0xD96]) = v168 ^ 0x86;
  LOBYTE(v159) = v168 ^ v167 ^ 0x68 | v168 ^ v167 ^ 0x95;
  int v169 = v164 ^ v166;
  char v170 = v168 ^ v167 ^ (v135 - 62);
  *(unsigned char *)(v14 + (v159 & 0xFD)) = v163 ^ 0x86;
  LOBYTE(v159) = (v170 - 117 - ((2 * v170) & 0x16)) ^ (v143
                                                     + v135
                                                     - 15
                                                     + v155
                                                     - 117
                                                     - ((2 * (v143 + v135 - 15 + v155)) & 0x16));
  LOBYTE(STACK[0xF6B]) = v169 - ((2 * v169) & 0x26) + 19;
  int v171 = v169 ^ (v137 - 1550836138);
  LOBYTE(STACK[0xF72]) = v171 - ((2 * v171) & 0x26) + 19;
  LOBYTE(STACK[0xDA4]) = v170 ^ 0x86;
  LOBYTE(STACK[0xDAB]) = v159 ^ 0x86;
  int v172 = v171 ^ v165;
  LOBYTE(STACK[0xF79]) = v172 - ((2 * v172) & 0x26) + 19;
  unsigned int v173 = v167 + v152;
  unsigned int v174 = (v160 ^ 0x175424BD) + v166;
  int v157 = (v156 & 0x107238A4 ^ 0x10701080) + (v156 & 0x107238A4 ^ 0x22824);
  unsigned int v175 = (v152
        + 280026855 * (v157 ^ 0xEC6D1055)
        - 239080699
        - ((2 * (v152 + 280026855 * (v157 ^ 0xEC6D1055) - 1706124678)) & 0xAEE2A116)) ^ v156;
  unsigned int v176 = v143 + v173;
  unsigned int v177 = v137 - 1237843642;
  unsigned int v178 = v176 + 1751941183;
  unsigned int v179 = v173 + v135;
  unsigned int v180 = v174 + (v160 ^ 0x175424BD) - v177;
  int v181 = v172 ^ v180;
  LOBYTE(STACK[0xF80]) = v181 - ((2 * v181) & 0x26) + 19;
  int v182 = v175 - (v176 + 1751941183) - ((2 * (v175 - (v176 + 1751941183)) + 1422191646) & 0x438195AA) - 870104860;
  v174 -= 2146437509;
  unsigned int v183 = v174 + v177;
  LOBYTE(v159) = v159 ^ (v176 + 48);
  int v184 = v181 ^ v174;
  LOBYTE(STACK[0xF87]) = v184 - ((2 * v184) & 0x26) + 19;
  LOBYTE(STACK[0xDB9]) = v159 ^ (v173 + 108) ^ 0x86;
  char v185 = v159 ^ (v173 + 108) ^ (v173 + v135 + 30);
  LOBYTE(v163) = v185 ^ v182;
  int v186 = v184 ^ v183;
  unsigned int v187 = ((v165 + 391390397 - ((2 * v165) & 0x2EA8497A)) ^ v160) - v180;
  int v188 = v182 ^ (v173 - ((2 * v173 + 1669482778) & 0x438195AA) - 746459294);
  unsigned int v189 = v188 ^ 0xDA3795F9;
  int v190 = ((2 * v182) & 0x2FFFB67E ^ 0x27EEB658) + (v182 ^ 0x6C088413);
  LOBYTE(STACK[0xDB2]) = v159 ^ 0x86;
  unsigned int v191 = v183 - v180;
  LOBYTE(STACK[0xF8E]) = v186 - ((2 * v186) & 0x26) + 19;
  unsigned int v192 = v176 + 1624511074;
  LOBYTE(v176) = v185 ^ 0x86;
  int v193 = v186 ^ v187;
  LOBYTE(STACK[0xF95]) = v193 ^ 0x13;
  LOBYTE(STACK[0xDC7]) = v185 ^ v182 ^ 0x53;
  char v194 = v179 - v178;
  int v195 = v188 ^ v192;
  LOBYTE(STACK[0xDC0]) = v176;
  v180 -= 1563817934;
  unsigned int v196 = ((362836899 - v190) & 0xDC13A421) + v174 + ((v190 - 362836900) & 0xDC13A421);
  unsigned int v197 = v187 ^ 0xA267D69E ^ (v196 - ((2 * v196) & 0xF0A086CE) + 2018526055);
  int v198 = v197 ^ v180;
  LOBYTE(v174) = (v188 ^ v192 ^ v163 ^ 0x2C) - ((2 * (v188 ^ v192 ^ v163 ^ 0x2C)) & 0x2A);
  int v199 = v179 - v178 + 1832976429;
  int v200 = (v190 - 362836900) ^ v199;
  unsigned int v201 = v187 ^ 0xDA3795F9;
  LOBYTE(STACK[0xF9C]) = (v193 ^ v197 ^ v180) - ((2 * (v193 ^ v197 ^ v180)) & 0x26) + 19;
  char v202 = v163 ^ v192;
  char v203 = v163 ^ v192 ^ 0x9F;
  unsigned int v204 = ((v187 ^ 0xDA3795F9) - 2107676773) ^ v191;
  int v205 = v193 ^ v180;
  int v206 = v205 ^ 0x10D053C9;
  LOBYTE(STACK[0xFA3]) = v205 ^ 0x13;
  LOBYTE(STACK[0xDCE]) = v174 - 107 - ((2 * (v174 - 107)) & 0x26) + 19;
  int v207 = 2 * v200;
  if ((v202 & 0x10) != 0) {
    char v208 = 16;
  }
  else {
    char v208 = -16;
  }
  char v209 = v208 + (v202 ^ 0xD5);
  char v210 = v203 ^ (v194 - ((2 * v199) & 0x94) + 119);
  LOBYTE(STACK[0xDDC]) = v203 ^ 0x86 ^ (((v190 + 92) ^ v199) - (v207 & 0x94) + 74);
  LOBYTE(STACK[0xDD5]) = v209 ^ 0x96;
  int v211 = v190 - ((2 * v190 + 918455874) & 0x2375B4EA) + 219815318;
  LOBYTE(STACK[0xFAA]) = (v206 ^ (v204 - ((2 * v204) & 0x92) - 55))
                       - ((2 * (v206 ^ (v204 - ((2 * v204) & 0x92) - 55))) & 0x26)
                       + 19;
  unsigned int v212 = v189 + (v195 ^ 0xDA3795F9) + (v211 ^ 0x6E45258A) + 1;
  unsigned int v213 = v212 + 1981862264 - ((2 * v212) & 0xEC41A2F0);
  int v214 = v206 ^ (v191 + 282088393 - ((2 * v191) & 0x21A0A792));
  LOBYTE(STACK[0xDE3]) = v210 ^ 0x86;
  unsigned int v215 = ((v195 ^ 0xDC21E020) - 1850025355 - 2 * ((v195 ^ 0xDC21E020) & 0x11BADA77 ^ v195 & 2)) ^ 0x38266952 ^ v211;
  LOBYTE(STACK[0xFB1]) = v214 - ((2 * v214) & 0x26) + 19;
  int v216 = v201 - ((2 * v201 + 46021824) & 0x27E47CC) - 1801567674;
  char v217 = v210 ^ ((v195 ^ 0x20) + 117 - 2 * ((v195 ^ 0x20) & 0x77 ^ v195 & 2)) ^ 0x52 ^ (v190
                                                                                      - ((2 * v190 + 66) & 0xEA)
                                                                                      - 106);
  int v218 = v216 ^ v204 ^ v198 ^ 0x61675D9;
  int v219 = v211 ^ v195 ^ (v200 - 1850025355 - (v207 & 0x2375B4EA));
  int v220 = (v216 ^ 0x7EC0DC19) + v197 + v198 - 1539100428 - ((2 * ((v216 ^ 0x7EC0DC19) + v197 + v198 + 1)) & 0x488661E6);
  LOBYTE(STACK[0xDEA]) = v217 ^ 0x86;
  unsigned int v221 = ((v198 ^ 0x61675D9) + 75291418 - ((2 * (v198 ^ 0x61675D9)) & 0x8F9B634)) ^ v216 ^ 0xBD6591AE;
  char v222 = (v217 + 120 - ((2 * v217) & 0xF0)) ^ v213;
  int v223 = v214 ^ v221;
  LOBYTE(STACK[0xDF1]) = v222 ^ 0x86;
  unsigned int v224 = v219 ^ 0xDC21E020;
  LOBYTE(STACK[0xFB8]) = v223 - ((2 * v223) & 0x26) + 19;
  int v225 = (v223 - 1539100429 - ((2 * v223) & 0x488661E6)) ^ v220;
  LOBYTE(STACK[0xFBF]) = v225 - ((2 * v225) & 0x26) + 19;
  char v226 = v219 ^ (v222 - ((2 * v222) & 0xAE) + 87);
  v211 ^= 0xA99CB327;
  char v227 = v226 ^ v211;
  unsigned int v228 = v218 ^ 0xEB7C07B1 ^ (v225 - ((2 * v225) & 0xD48648AE) + 1782785111);
  LOBYTE(STACK[0xFC6]) = v228 - ((2 * v228) & 0x26) + 19;
  unsigned int v229 = (v219 ^ 0xAA013158 ^ v213) - ((2 * (v219 ^ 0xAA013158 ^ v213) + 1433858588) & 0xB6882A4A) - 2046849485;
  unsigned int v230 = (v228 + 75291418 - ((2 * v228) & 0x8F9B634)) ^ v216 ^ 0xBD6591AE;
  int v231 = v215 + v224 + (v229 ^ 0x24BBEADA) + 1;
  LOBYTE(v224) = v226 ^ v211 ^ v231;
  unsigned int v232 = (v218 ^ 0x257C1315 ^ v220) - ((2 * (v218 ^ 0x257C1315 ^ v220) + 1433858588) & 0xDDE03B74) + 430675656;
  unsigned int v233 = v211 - 616295131 - ((2 * v211) & 0xB6882A4A);
  LOBYTE(STACK[0xFCD]) = v230 - ((2 * v230) & 0x26) + 19;
  unsigned int v234 = (v218 ^ 0x813F23E6) + v221 + (v232 ^ 0x910FE245) + 1;
  int v235 = v216 ^ 0x1D5A7A47 ^ v220;
  LOBYTE(STACK[0xDF8]) = v226 ^ 0xF1;
  LOBYTE(STACK[0xDFF]) = v227 ^ 0xF1;
  int v236 = v230 ^ v234;
  int v237 = v229 ^ v213 ^ v233;
  LOBYTE(STACK[0xE06]) = v224 ^ 0xF1;
  LOBYTE(STACK[0xFD4]) = v236 - ((2 * v236) & 0x26) + 19;
  LOBYTE(v224) = v213 ^ ((v224 ^ 0x77) - ((2 * (v224 ^ 0x77)) & 0x88) - 60);
  int v238 = v236 ^ v220;
  LOBYTE(STACK[0xFDB]) = v238 ^ 0x4B;
  char v239 = (v224 ^ 0x17) + 37 - ((2 * (v224 ^ 0x17)) & 0x4A);
  LOBYTE(v218) = v239 ^ v229;
  LOBYTE(v229) = v239 ^ v229 ^ (((v213 ^ 0x2C) - 53) ^ ((v213 ^ 0xD3) + 53)) & 0x95;
  LOBYTE(STACK[0xE14]) = v229 - ((2 * v229) & 0x26) + 19;
  int v240 = v232 ^ v235;
  LOBYTE(STACK[0xFE2]) = (v238 ^ v232 ^ 0xE2) - 2 * ((v238 ^ v232 ^ 0xE2) & 0x17 ^ (v238 ^ v232) & 4) + 19;
  int v241 = v238 ^ v235;
  LOBYTE(STACK[0xFE9]) = v238 ^ v235 ^ 0x4B;
  unsigned int v242 = ((2 * (v231 + (v237 ^ 0x89DF2E87) + 1)) & 0x89622112) + ((v231 + (v237 ^ 0x89DF2E87) + 1) ^ 0x44B11089);
  unsigned int v243 = (v232 ^ v235 ^ 0x910FE245) + v234 + 1;
  LOBYTE(v234) = v239 ^ v213 ^ v233;
  LOBYTE(STACK[0xE0D]) = v224 ^ 0x91;
  HIDWORD(v244) = v240 ^ 0x101DBA;
  LODWORD(v244) = v240 ^ 0x6EE00000;
  unsigned int v245 = v242
       - 1152454793
       + (v213 ^ 0x8625A9D3)
       - 1905386399
       - ((2 * (v242 - 1152454793 + (v213 ^ 0x8625A9D3))) & 0x1CDC38C2);
  LOBYTE(STACK[0xE1B]) = v234 ^ 0xFE;
  HIDWORD(v244) = (v244 >> 21) ^ 0xFF0A9E8F;
  LODWORD(v244) = HIDWORD(v244);
  int v246 = v244 >> 11;
  int v247 = (v246 - ((2 * v246) & 0xC0327B6) + 100766683) ^ v220;
  int v248 = v243 + (v220 ^ 0x54464858) + 996106895 - ((2 * (v243 + (v220 ^ 0x54464858))) & 0x76BEC51E);
  int v249 = v246 ^ v243;
  unsigned int v250 = (v248 ^ 0x3B5F628F)
       + (v246 ^ 0xC7FC9DD4)
       + 15443856
       + ~((2 * ((v248 ^ 0x3B5F628F) + (v246 ^ 0xC7FC9DD4))) & 0x1D74F1E);
  LOBYTE(v246) = (v241 ^ v246 ^ v243 ^ 0x8C) - ((2 * (v241 ^ v246 ^ v243)) & 0x26);
  unsigned int v251 = v249 ^ 0xFCA3FF5B ^ v248;
  LOBYTE(STACK[0xFF0]) = v246 + 19;
  int v252 = v248 ^ 0x6F192AD7 ^ v241;
  unsigned int v253 = (v245 ^ 0x8E6E1C61)
       + (v237 ^ 0x6023ADFF)
       - 179637936
       - ((2 * ((v245 ^ 0x8E6E1C61) + (v237 ^ 0x6023ADFF))) & 0xEA95E2A0);
  int v254 = v242 - ((2 * (v242 - 1152454793)) & 0x4AFE68F0) + 1624122351;
  int v255 = v254 ^ v237;
  LOBYTE(v234) = v245 ^ v234;
  v233 ^= 0x3D421109u;
  unsigned int v256 = v232 ^ 0xC7FC9DD4 ^ ((v247 ^ 0x5247DB83) + 1861230011 + ~(2 * ((v247 ^ 0x5247DB83) & 0x6EF01DBE ^ v247 & 4)));
  LOBYTE(STACK[0xFF7]) = v252 - ((2 * v252) & 0x26) + 19;
  int v257 = v252 ^ v256;
  LOBYTE(STACK[0xE22]) = v218 ^ v254 ^ 0x79;
  LOBYTE(STACK[0xFFE]) = v257 - ((2 * v257) & 0x26) + 19;
  int v258 = v255 ^ v245 ^ 0x4B3285E6;
  unsigned int v259 = (v255 ^ 0xC55C9987) - v258;
  LOBYTE(v245) = ((v234 ^ v233 ^ 0x19) + 80 - ((2 * (v234 ^ v233 ^ 0x19)) & 0xA0)) ^ v253;
  unsigned int v260 = (v249 ^ 0xC7FC9DD4) - v251;
  int v261 = (v257 + 15443856 + ~((2 * v257) & 0x1D74F1E)) ^ v250;
  LOBYTE(STACK[0xE29]) = v234 ^ 0x9F;
  int v262 = v256 + v260 - 1655914826 - ((2 * (v256 + v260)) & 0x3A997D6C);
  LOBYTE(STACK[0xE30]) = v234 ^ v233 ^ 0x9F;
  int v263 = v259 + v233 + 549270033 - ((2 * (v259 + v233)) & 0x417A6422);
  LOBYTE(STACK[0xE37]) = v245 ^ 0x86;
  int v264 = v262 ^ v260;
  int v265 = v263 ^ v259;
  unsigned int v266 = v262 ^ (v251 + (v250 ^ 0xFF145870) - 1655914825 - ((2 * (v251 + (v250 ^ 0xFF145870) + 1)) & 0x3A997D6C));
  LOBYTE(STACK[0x1005]) = v261 - ((2 * v261) & 0x26) + 19;
  unsigned int v267 = v264 ^ 0x891CFD03 ^ (v261 - ((2 * v261) & 0x28A0876A) + 340804533);
  int v268 = (v258 + (v253 ^ 0xAB50EAF) + 549270034 - ((2 * (v258 + (v253 ^ 0xAB50EAF) + 1)) & 0x417A6422)) ^ v263;
  LOBYTE(v251) = v263 ^ v259 ^ (v245 - ((2 * v245) & 0xE6) - 13);
  LOBYTE(v249) = v251 ^ v268;
  unsigned int v269 = (v262 ^ 0x9D4CBEB6) - 1256310069;
  int v270 = (v263 ^ 0x20BD3211) - 1256310069;
  LOBYTE(STACK[0x100C]) = v267 - ((2 * v267) & 0x26) + 19;
  int v271 = v267 ^ v266;
  LOBYTE(STACK[0x1013]) = v271 + (~(2 * v271) | 0xD9) + 20;
  int v272 = v271 ^ v269;
  LOBYTE(STACK[0x101A]) = v272 + (~(2 * v272) | 0xD9) + 20;
  LOBYTE(v245) = v251 ^ v268 ^ v270;
  LOBYTE(STACK[0xE3E]) = v251 ^ 0x64;
  int v273 = (v264 ^ 0x62B34149) + v269 + 1;
  int v274 = (v272 + 15443855 - ((2 * v272) & 0x1D74F1E)) ^ v250;
  LOBYTE(STACK[0xE45]) = v249 ^ 0x64;
  char v275 = ((v245 ^ 0xE2) + 80 - ((2 * (v245 ^ 0xE2)) & 0xA0)) ^ v253;
  int v276 = (v250 ^ 0xEBA78F) - 613696715;
  unsigned int v277 = (v265 ^ 0xDF42CDEE) + v270 + 1;
  unsigned int v278 = v268 - v277;
  unsigned int v279 = (v264 ^ 0x9D4CBEB6) - ((2 * (v264 ^ 0x9D4CBEB6) - 1184990) & 0xFFB1E826) - 3151452;
  unsigned int v280 = (v253 ^ 0xF54AF150) - 613696715;
  LOBYTE(STACK[0x1021]) = v274 - ((2 * v274) & 0x26) + 19;
  unsigned int v281 = (v274 + 2144924691 - ((2 * v274) & 0xFFB1E826)) ^ v279;
  int v282 = (v265 ^ 0x20BD3211) - ((2 * (v265 ^ 0x20BD3211) + 2146298658) & 0x57C589EE) - 1411794296;
  LOBYTE(STACK[0x1028]) = v281 - ((2 * v281) & 0x26) + 19;
  LOBYTE(STACK[0xE53]) = v275 ^ 0x86;
  int v283 = (v266 - v273) ^ 0x3861EC4E ^ (v281 - ((2 * v281) & 0x6B9F6890) + 902804552);
  int v284 = (v277 + 736281847 - ((2 * v277) & 0x57C589EE)) ^ v282;
  LOBYTE(STACK[0x102F]) = v283 - ((2 * v283) & 0x26) + 19;
  unsigned int v285 = (v273 + 2144924691 - ((2 * v273) & 0xFFB1E826)) ^ v279;
  LOBYTE(v273) = v278 ^ (((v275 - 9 - ((2 * v275) & 0xEE)) ^ v282)
                       - ((2 * ((v275 - 9 - ((2 * v275) & 0xEE)) ^ v282)) & 0xF2)
                       + 121);
  LOBYTE(v277) = v273 ^ (v277 - 9 - ((2 * v277) & 0xEE)) ^ v282;
  int v286 = v283 ^ v285;
  LOBYTE(STACK[0xE5A]) = (v275 - 9 - ((2 * v275) & 0xEE)) ^ v282 ^ 0x86;
  LOBYTE(STACK[0xE61]) = v273 ^ 0xF9;
  LOBYTE(STACK[0x1036]) = v286 - ((2 * v286) & 0x26) + 19;
  int v287 = v277 ^ 0x7F ^ v280;
  LOBYTE(STACK[0xE4C]) = v245 ^ 0x64;
  unsigned int v288 = (((v278 ^ 0xF251A7F9) + v284 + 1) ^ 0x77FFFBDF)
       - 2013265920
       + ((2 * ((v278 ^ 0xF251A7F9) + v284 + 1)) & 0xEFFFF7BE);
  unsigned int v289 = v288 + 1057 + v280;
  LOBYTE(STACK[0xE68]) = v277 ^ 0xF9;
  LODWORD(STACK[0x3C8]) = v286 ^ v276;
  unsigned int v290 = (v282 ^ 0x2BE2C4F7 ^ (v288 + 1057))
       - v289
       - 1345535519
       + (~(2 * ((v282 ^ 0x2BE2C4F7 ^ (v288 + 1057)) - v289)) | 0xA0667C3D)
       + 1;
  LOBYTE(STACK[0x103D]) = (v286 ^ v276) + (~(2 * (v286 ^ v276)) | 0xD9) + 20;
  unsigned int v291 = ((2 * (v288 + (v290 ^ 0x50333E1E) + 1058)) & 0xF77659EC) + ((v288 + (v290 ^ 0x50333E1E) + 1058) ^ 0xFBBB2CF6);
  LODWORD(STACK[0x3CC]) = v287 ^ 0x81178AD5;
  LOBYTE(STACK[0xE6F]) = v287 ^ 0x86;
  LODWORD(STACK[0x710]) = ((v291 + 71619338) ^ v289 ^ 0xE7FFCFDE)
                        + 447345528
                        + ((2 * ((v291 + 71619338) ^ v289)) & 0xCFFF9FBC);
  return (*(uint64_t (**)(void))(STACK[0x6F8]
                              + 8 * (LODWORD(STACK[0x700]) ^ (LODWORD(STACK[0x6F4]) | (4 * LODWORD(STACK[0x6F4]))))))();
}

uint64_t sub_100123FE4(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(uint64_t, void))(v5 + 8 * (((7 * (a3 ^ 0x820) - 707) * (v3 == v4)) ^ a3)))(a1, a3 ^ 0x69Cu);
}

uint64_t sub_10012401C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18, uint64_t a19, uint64_t a20,char *a21,unsigned int a22,uint64_t a23,int a24,char *a25)
{
  a22 = ((v28 | 0x82) + 2512) ^ (((-1636272638 - (&a21 | 0x9E787602) + (&a21 | 0x618789FD)) ^ 0x65A4FF1A)
                               * v26);
  a21 = &a14 + v25;
  a23 = a15;
  a25 = &a18 + v27;
  uint64_t v30 = (*(uint64_t (**)(char **))(v29 + 8 * ((v28 | 0x82) + 3393)))(&a21);
  return (*(uint64_t (**)(uint64_t))(v29
                                            + 8
                                            * (((a24 == (v28 | 0x82) + 847201791) * (((v28 | 0x82) - 173) ^ 0x95C)) ^ (v28 | 0x82))))(v30);
}

uint64_t sub_1001240E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,long long a40,int a41,char a42)
{
  uint64_t v45 = *(void *)(a20 + 8);
  memset((char *)&a40 + 4, 96, sizeof(__int128));
  int v46 = 1761959447 * ((v44 - 168) ^ 0xA1A7C1C4);
  int v47 = (void *)(v44 - 168);
  v47[4] = &a42;
  v47[5] = v45;
  v47[1] = v44 - 184;
  _OWORD v47[2] = (char *)&a40 + 4;
  *(_DWORD *)(v44 - 140) = v43 - v46 + 351;
  *(_DWORD *)(v44 - 168) = v46 + 2128470961;
  uint64_t v48 = (*(uint64_t (**)(uint64_t))(v42 + 8 * (v43 + 4433)))(v44 - 168);
  return (*(uint64_t (**)(uint64_t))(v42
                                            + 8
                                            * ((846 * (*(_DWORD *)(v44 - 144) == ((v43 - 261) | 0x80) + 847202930)) ^ v43)))(v48);
}

uint64_t sub_1001241C4@<X0>(int a1@<W2>, __int16 a2@<W3>, int a3@<W4>, __int16 a4@<W5>, unsigned int a5@<W6>, int a6@<W8>)
{
  unsigned int v13 = (((_BYTE)v10 + 8) & 0xF) * v7 + 279719;
  unsigned int v14 = ((v10 + 1256) >> 4) * v7 + 279719;
  LOBYTE(v14) = *(unsigned char *)(v6 + (v14 - ((v14 * (unint64_t)v9) >> 32) * a1));
  LOWORD(v14) = (*(unsigned __int8 *)(v6 + (v13 - ((v13 * (unint64_t)v9) >> 32) * a1)) ^ 0x2A ^ (((16 * v14) ^ 0xC0) - 32 * (v14 & 3) + 60) & 0xFC)
              * a2
              - 24481;
  unsigned int v15 = v12
      + (*(unsigned __int8 *)(v8
                            + (unsigned __int16)(v14
                                               - ((unsigned __int16)(((unsigned __int16)v14 * a3) >> 16) >> 8)
                                               * a4)) ^ 0x68)
      * v7;
  *(unsigned char *)(v6
           + v10 * v7
           - 894523760
           - (((((v10 * v7 - 894523760) * (unint64_t)a5) >> 32)
                           + ((v10 * v7
                                           - 894523760
                                           - (((v10 * v7 - 894523760) * (unint64_t)a5) >> 32)) >> 1)) >> 9)
           * a1) = *(unsigned char *)(v6 + (v15 - ((v15 * (unint64_t)v9) >> 32) * a1));
  return (*(uint64_t (**)(void))(v11 + 8 * ((110 * (v10 != 560122903)) ^ a6)))();
}

uint64_t sub_1001242BC@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7)
{
  return (*(uint64_t (**)(void))(v7 + 8 * ((117 * (a7 == (((a1 - 3426) | 0x10) ^ (v8 + 1100)))) ^ a1)))();
}

uint64_t sub_1001242F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(void))(v10 + 8 * (a7 | (2 * (v9 < ((v8 + a7 + v7 + 501) | 0x984u) - 2964)))))();
}

void sub_10012432C()
{
}

uint64_t sub_1001243D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,char a43)
{
  *(_DWORD *)(v46 + 4 * (v47 + 1 + v44)) = *((_DWORD *)&a43 + v45)
                                                         + v45
                                                         + ((1664525
                                                           * (*(_DWORD *)(v46 + 4 * (v47 + v44)) ^ (*(_DWORD *)(v46 + 4 * (v47 + v44)) >> 30))) ^ *(_DWORD *)(v46 + 4 * (v47 + 1 + v44)));
  uint64_t v49 = 1314530549
      * ((~((v48 - 144) | 0x49B95820D357A437) + ((v48 - 144) & 0x49B95820D357A437)) ^ 0x116327429DA1DD06);
  *(void *)(v48 - 104) = (v47 + 2122342399) ^ (unint64_t)v49;
  *(_DWORD *)(v48 - 124) = ((v43 + 79189892) | 0xD) - v49;
  *(_DWORD *)(v48 - 120) = (v43 + 79189633) ^ v49;
  *(_DWORD *)(v48 - 116) = (v43 + 79189892) ^ v49;
  *(_DWORD *)(v48 - 112) = v49 + 1;
  *(_DWORD *)(v48 - 144) = v49 + v43 - 2002525279;
  *(void *)(v48 - 136) = v49 + 4090358025;
  uint64_t v50 = (*(uint64_t (**)(uint64_t))(a35 + 8 * (v43 ^ 0x44C121D5)))(v48 - 144);
  return (*(uint64_t (**)(uint64_t))(a35 + 8 * *(int *)(v48 - 128)))(v50);
}

uint64_t sub_1001243E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, int *a11, uint64_t a12, int a13, int a14, uint64_t a15, int a16, int a17)
{
  *a10 = a1;
  *a11 = (v18 + v17 + 903 - 2198) ^ a14;
  return (*(uint64_t (**)(void))(v19
                              + 8 * (((a17 == ((v17 - 201) ^ (v18 + 1090))) * ((v17 + 3184) ^ 0x1136)) | (v17 + 903))))();
}

void sub_100124444()
{
}

uint64_t sub_1001244A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, int a14)
{
  unsigned int v17 = v15
      - 427940609
      + (a14 ^ (v14 + (v15 ^ 0x244) - 1870))
      - ((2 * (a14 ^ (v14 + (v15 ^ 0x244) - 1870))) & 0xCCFC5412);
  BOOL v18 = ((2 * v17) & 0xF3FFD7EC ^ 0xC0FC5400) + (v17 ^ 0x1F81C1FF) + 1073569472 == 972901046;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v16
                                                                                         + 8 * (v18 | (4 * v18) | v15)))(a1, a2, a3, a4, a5, 847203058);
}

uint64_t sub_100124574()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((1186 * (v0 + 1 == v3 + 4)) ^ v1)))();
}

uint64_t sub_100124640(uint64_t a1, int a2)
{
  return (*(uint64_t (**)(void))(STACK[0x6F8]
                              + 8 * (((((((2 * a2) ^ 0x250E) - 724) | 0x1D8) - 1498) * (v2 != 637430210)) ^ a2)))();
}

void sub_100124698(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, uint64_t a4, unsigned int a5, uint64_t a6, uint64_t a7, int a8)
{
  *(_DWORD *)(*(void *)(a1 + 96) + 800) = 1336608946;
  *(_DWORD *)(*(void *)(a1 + 96) + 804) = 330117362;
  *(void *)(*(void *)(a1 + 96) + 808) = *(void *)(a1 + 96) + 816;
  uint64_t v9 = *(void *)(a1 + 96) + 0x49230D716B37B124;
  uint64_t v10 = *(void *)(a2 + 8) + (*(_DWORD *)(a2 + 4) - v8);
  unsigned int v11 = 1761959447 * ((((2 * &a5) | 0x4357CDEA) - &a5 + 1582569739) ^ 0xC2731);
  a8 = v8 - v11 + 129906298;
  a5 = 3583 - v11;
  a6 = v10;
  a7 = v9;
  (*(void (**)(unsigned int *))(a3 + 38144))(&a5);
  JUMPOUT(0x1001DBFD4);
}

uint64_t sub_1001246A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, unint64_t a14, int a15, uint64_t a16)
{
  uint64_t v20 = 366490169 * (v19 ^ 0x2A9EB51416AE5644);
  a15 = 894 - v20;
  a16 = a11;
  a14 = (v16 ^ 0xDFDF265FBE6CEE9FLL) - v20 + ((2 * v16) & 0xBFBE4CBF7CD9DD3ELL) + 0x67FCF9AEDBFBDDEALL;
  uint64_t v21 = (*(uint64_t (**)(int *))(v18 + 37920))(&a13);
  return (*(uint64_t (**)(uint64_t))(v18 + 8 * ((1300 * (a13 == v17)) ^ 0x304u)))(v21);
}

uint64_t sub_100124768@<X0>(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  *(void *)(*(void *)(a1 + 32) - 0x28CA3575C94E241CLL) = 0;
  return (*(uint64_t (**)(void))(v2 + 8 * (((*a2 == v3 + 269 * (v4 ^ 0x1039)) * ((v4 - 1) ^ 0x1172)) ^ v4)))();
}

uint64_t sub_1001247C0@<X0>(uint64_t a1@<X0>, int a2@<W1>, int a3@<W3>, int a4@<W8>)
{
  *(unsigned char *)(a1 + (a2 + v6)) = *(unsigned char *)(v5 + (a2 + v6));
  return (*(uint64_t (**)(void))(v7 + 8 * (((a2 - 1 == a4) * (v4 + a3 - 11)) ^ (v4 + a3 + 3469))))();
}

uint64_t sub_1001247FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13, uint64_t a14, unsigned int a15)
{
  int v18 = (v15 - 2365) | 0x141;
  a15 = v18 + (((&a13 | 0xB4B84557) + (~&a13 | 0x4B47BAA8)) ^ 0xA2161312) * v17 + 4145;
  a14 = a10;
  uint64_t v19 = (*(uint64_t (**)(char *))(v16 + 8 * (v18 ^ 0x1327)))(&a13);
  return sub_1001C4FB4(v19);
}

uint64_t sub_10012480C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  BOOL v8 = v5 == ((v6 + 547188919) & 0xDF628DBA) - 2200;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 8
                                                                                     * (((4 * v8) | (8 * v8)) ^ v6)))(a1, a2, a3, a4, a5);
}

uint64_t sub_100124850(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,int a38,unsigned int a39)
{
  unsigned int v44 = v43[396] ^ ((*v43 & ((v40 + v39 + 1285) ^ 0x3B3ECC50) | v43[623] & 0x80000000) >> 1);
  v43[623] = ((v39 ^ (v42 + 2898)) + v44 - (a3 & (2 * v44)) - 1448453335) ^ *(_DWORD *)(a6 + 4 * (*v43 & 1));
  return (*(uint64_t (**)(void))(v41 + 8 * ((102 * (a39 > 0x26F)) ^ v39)))();
}

uint64_t sub_1001248D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  STACK[0x578] = v8;
  int v9 = v7 + 2189;
  BOOL v10 = LODWORD(STACK[0x710]) == 638660913;
  LODWORD(STACK[0x700]) = 1397143370;
  int v11 = 87 * (v9 ^ 0x11C8);
  LODWORD(STACK[0x6F4]) = v11;
  int v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a7
                                                                                       + 8
                                                                                       * (((((v11 ^ v10) & 1) == 0)
                                                                                         * (v9 - 3600)) ^ v9));
  LODWORD(STACK[0x6E0]) = 863943936;
  LODWORD(STACK[0x6EC]) = -609202818;
  LODWORD(STACK[0x708]) = -1239889312;
  return v12(a1, a2, a3, a4, a5, 2768918344);
}

uint64_t sub_100124978@<X0>(int a1@<W5>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, int a16, char a17)
{
  *(&a17 + 23 * (v19 ^ 0x283u) + a2 + v17) = *(unsigned char *)(v18 + v20 - 877117692)
                                           - ((2 * *(unsigned char *)(v18 + v20 - 877117692)) & 0xC0)
                                           + 96;
  return (*(uint64_t (**)(void))(v21 + 8 * ((50 * ((a1 + a2 + 1) > 0x3F)) ^ v19)))();
}

uint64_t sub_1001249EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19, int a20)
{
  return (*(uint64_t (**)(void))(v21
                              + 8
                              * (((a20 - *(_DWORD *)(a2 + 4) == 1970101070) * (((v20 - 447) ^ 0x6E3) + 1162)) ^ v20)))();
}

void sub_100124A34()
{
}

uint64_t sub_100124A40@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(unsigned char *)(a1 + (v2 + v5)) = *(unsigned char *)(a2 + (v2 + v5));
  return (*(uint64_t (**)(void))(v8 + 8 * ((57 * (v2 - 1 == v6 + v3 - v4 - 2275 - 770)) ^ (v7 + v3 + 3274))))();
}

uint64_t sub_100124A88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13, uint64_t a14, unsigned int a15)
{
  return sub_1001F34E4(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15);
}

uint64_t sub_100124ADC@<X0>(int a1@<W8>)
{
  unint64_t v4 = 31090337
     * ((((v3 - 168) | 0x83B8FD7652E43537) - (v3 - 168) + ((v3 - 168) & 0x7C470289AD1BCAC8)) ^ 0x241AD6889565557ELL);
  *(_DWORD *)(v3 - 136) = a1 - v4 + 347301013;
  uint64_t v5 = v3 - 168;
  *(void *)(v5 + 16) = v4 + v1;
  *(void *)(v5 + 24) = v4 + 1244551583;
  *(_DWORD *)(v3 - 168) = v4;
  *(_DWORD *)(v3 - 164) = a1 + 954815405 - v4;
  *(_DWORD *)(v3 - 160) = v4 + a1 + 954815405 + 251;
  *(_DWORD *)(v3 - 128) = a1 + 954815405 - v4 - 10;
  uint64_t v6 = (*(uint64_t (**)(uint64_t))(v2 + 8 * (a1 ^ 0x1215)))(v3 - 168);
  return (*(uint64_t (**)(uint64_t))(v2 + 8 * *(int *)(v3 - 132)))(v6);
}

uint64_t sub_100124BBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  unsigned int v17 = (v12 - 1076103017) & 0xFEFDC7FF;
  *(_DWORD *)(v16 - 136) = v17
                         - ((((v16 - 136) | 0xE83C9187) - (v16 - 136) + ((v16 - 136) & 0x17C36E78)) ^ 0xFE92C7C3) * v15
                         + 1740194534;
  *(void *)(v14 + 8) = a12;
  (*(void (**)(uint64_t))(v13 + 8 * (int)(v17 ^ 0xBED9D5B4)))(v16 - 136);
  return sub_10012C9B8();
}

uint64_t sub_100124C90@<X0>(char a1@<W0>, int a2@<W8>)
{
  return sub_10013294C(a1, v2 + 4, a2);
}

uint64_t sub_100124CA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11)
{
  return (*(uint64_t (**)(void))(v12 + 8 * (((a11 == 0) * (v11 + 4000)) ^ v11)))();
}

uint64_t sub_100124CFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, int a10)
{
  return (*(uint64_t (**)(void))(v11
                              + 8
                              * (((a10 == v10) * (((v12 ^ 0xB60) - 2131565703) & 0x7F0D1FFF ^ 0x7E1)) ^ v12 ^ 0xB60)))();
}

uint64_t sub_100124D60@<X0>(uint64_t a1@<X6>, int a2@<W7>, int a3@<W8>)
{
  unsigned int v12 = a3 - 1;
  uint64_t v13 = v12 & 0xF;
  *(unsigned char *)(v4 + v12) = *(unsigned char *)(a1 + v12) ^ (v13 * v7) ^ *(unsigned char *)(*(void *)(v11 + 8 * v5) + v13 - 8) ^ *(unsigned char *)(v3 + v13 + *(void *)(v11 + 8 * v6) - 1326) ^ *(unsigned char *)(*(void *)(v11 + 8 * v8) + v13 - 5) ^ 0x60;
  return (*(uint64_t (**)(void))(v10 + 8 * (((v12 == 0) * v9) ^ a2)))();
}

uint64_t sub_100124E00(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4)
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * ((242
                                * (v4 - a1 >= (((a4 ^ 0x3AD) - 1474235248) | 0x4488568C) + (a4 ^ 0xFFFFFFFF1356A749))) ^ a4 ^ 0x3AD)))();
}

uint64_t sub_100124E60(int8x8_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  *(int8x8_t *)(a4 + (v5 - 8)) = veor_s8(*(int8x8_t *)(v6 + (v5 - 8)), a1);
  return (*(uint64_t (**)(void))(v9 + 8 * (((v7 == -8) * v8) ^ a5)))();
}

uint64_t sub_100124E6C()
{
  int v6 = (v0 & (2 * (*(unsigned __int8 *)(v3 + 4) - 247))) + ((*(unsigned __int8 *)(v3 + 4) - 247) ^ (v1 + v4)) == -69206017;
  return (*(uint64_t (**)(void))(v5 + 8 * ((32 * v6) | (v6 << 9) | v2)))();
}

uint64_t sub_100124EA8(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((2087 * (**(unsigned char **)(a2 + 8) == 0)) ^ 0x150u)))();
}

uint64_t sub_100124ED8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, unsigned int a19, uint64_t a20,unsigned int a21,uint64_t a22,int a23)
{
  unsigned int v29 = 366490169 * ((&a19 - 2021358216 - 2 * (&a19 & 0x87848578)) ^ 0x912AD33C);
  a21 = v29 + 3254;
  a19 = (v25 ^ 0xBFFFCF95) + ((2 * v25) & 0x7FFF9F2A) + 1419637628 + v29;
  a20 = a14;
  (*(void (**)(unsigned int *))(v26 + 37576))(&a19);
  unsigned int v30 = ((2 * ((&a19 ^ 0xE880E41) & 0x46052830) - (&a19 ^ 0xE880E41) - 1174743093) ^ 0x70F3B9C3)
      * v28;
  a20 = v23;
  a22 = a14;
  a21 = v30 + 4063;
  a23 = (v24 ^ 0x3F7FE2FA) + ((2 * v24) & 0x7EFFC5F4) - v30 - 491454610;
  uint64_t v31 = (*(uint64_t (**)(unsigned int *))(v26 + 37760))(&a19);
  return (*(uint64_t (**)(uint64_t))(v26 + 8 * ((5192 * (a19 == v27)) ^ 0x410u)))(v31);
}

uint64_t sub_100125034(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  unsigned int v13 = *(_DWORD *)(v12 - 252 + ((v10 + v8) & 0xFFFFFFFC) + 72);
  *(unsigned char *)(a7 + (v10 + v8 + 2)) = (BYTE1(v13) ^ 0xB7) - ((2 * (BYTE1(v13) ^ 0xB7)) & 0xC0) + 96;
  *(unsigned char *)(a7 + (v10 + v8)) = (HIBYTE(v13) ^ 0x4A)
                                            - (((HIBYTE(v13) ^ 0x4A) & 0x61 ^ HIBYTE(v13) & 1) << ((v9 ^ 0xC6) + 55))
                                            + 96;
  *(unsigned char *)(a7 + (v10 + v8 + 1)) = (BYTE2(v13) ^ 0xA3)
                                                - 2 * ((BYTE2(v13) ^ 0xA3) & 0x68 ^ BYTE2(v13) & 8)
                                                + 96;
  *(unsigned char *)(a7 + (v10 + v8 + 3)) = v13 ^ 0x58;
  unsigned int v14 = *(_DWORD *)(v12 - 160) - 1666768203;
  BOOL v15 = v14 < v7;
  BOOL v16 = v10 + 2028080094 < v14;
  if (v10 + 2028080094 < v7 != v15) {
    BOOL v16 = v15;
  }
  return (*(uint64_t (**)(void))(v11 + 8 * ((46 * !v16) ^ v9)))();
}

uint64_t sub_100125144()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((((v2 + 1318) ^ 0x16FF) * ((v0 - 940263052) < 0xFFFFFFFE)) ^ (v2 + 2801))))();
}

uint64_t sub_100125180@<X0>(uint64_t a1@<X0>, int a2@<W2>, int a3@<W8>)
{
  *(unsigned char *)(a1 + (v6 + v5)) = *(unsigned char *)(v3 + (v6 + v5)) ^ (v4 + a2 - 45) ^ 0xBB;
  return (*(uint64_t (**)(void))(v7 + 8 * ((317 * (v6 - 1 == a3)) ^ (a2 - 212695321))))();
}

uint64_t sub_1001251D0()
{
  return (*(uint64_t (**)(void))(v2
                              + 8 * (v1 | (16 * (v0 - STACK[0x508] < (unint64_t)(12 * (v1 ^ 0x110Eu)) - 3868)))))();
}

uint64_t sub_100125214(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v12
                                                                                         + 8
                                                                                         * (((v10
                                                                                            + 1696
                                                                                            + ((v10 - 1932959936) & 0x73369E7B)
                                                                                            + 145)
                                                                                           * (a10 != 0)) ^ v10)))(a1, a2, a3, a4, a5, v11);
}

uint64_t sub_10012525C(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(void))(v9
                              + 8
                              * (int)(((a1 + v7 + 63 >= ((v8 + 1213027484) ^ 0xBD392C03 ^ a7) + v7)
                                     * (((v8 + 1213027484) & 0xB7B2AF7A) - 2476)) ^ (v8 + 2732))))();
}

uint64_t sub_1001252B8()
{
  int v4 = v0 ^ (v2 - 183);
  uint64_t v14 = v10;
  unsigned int v15 = -2126730128
      - 476588053
      * (((&v13 | 0xB324143E) - &v13 + (&v13 & 0x4CDBEBC0)) ^ 0xED9107D)
      + v0
      + 1499;
  (*(void (**)(int *))(v1 + 8 * (v0 ^ (v2 - 1674))))(&v13);
  if (v13 == v3 + v4 - 2082) {
    int v5 = -218117382;
  }
  else {
    int v5 = -1166057478;
  }
  if (v13 == v3 + v4 - 2082) {
    int v6 = -436234764;
  }
  else {
    int v6 = 1962852340;
  }
  if (v13 == v3 + v4 - 2082) {
    int v7 = 1065320440;
  }
  else {
    int v7 = 2013260536;
  }
  int v8 = (v5 ^ v11) + v7 + (v6 & (2 * v11));
  uint64_t v14 = v10;
  unsigned int v15 = 366490169 * ((2 * (&v13 & 0x5A461AB0) - &v13 + 632939851) ^ 0x3317B30F)
      - 2126730128
      + v0
      + 3372;
  (*(void (**)(int *))(v1 + 8 * (v0 ^ (v2 - 1673))))(&v13);
  unsigned int v15 = v4 + 366490169 * ((2 * (&v13 & 0x5E7DA650) - &v13 - 1585292884) ^ 0xB72C0FE8) + 2438;
  uint64_t v14 = v12;
  (*(void (**)(int *))(v1 + 8 * (v4 ^ 0x1A72)))(&v13);
  return (v8 - 847203058);
}

uint64_t sub_1001254A0(uint64_t a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va1, a3);
  va_start(va, a3);
  va_arg(va1, void);
  uint64_t v15 = va_arg(va1, void);
  uint64_t v13 = 4;
  uint64_t v6 = (*(uint64_t (**)(void, uint64_t, void, void, char *, uint64_t *))(v4 + 8 * (v3 ^ 0x10BA)))(*v5, 22, 0, 0, va1, (uint64_t *)va);
  BOOL v11 = (((v3 ^ 0xA72) - 50408108) & (2 * v6)) + (v6 ^ 0xFE7F6EFF) != -25202945 || v13 != 4;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 8 * ((42 * v11) ^ v3)))(v6, v7, v8, v9);
}

uint64_t sub_100125530()
{
  return (*(uint64_t (**)(void))(v1 + 8 * (int)((((v0 + 1765954123) & 0x96BDACF7 ^ 0x3B) * (v2 != 1)) ^ (v0 + 1904))))();
}

uint64_t sub_100125574(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, void, void))(v6
                                                                     + 8
                                                                     * ((1198
                                                                       * ((v7 & 0x18) == ((((a6 - 3418) | 0x809) - 2097) | 0xC87)
                                                                                       - 3263)) ^ ((a6 - 3418) | 0x809))))(a1, a2, (v8 - v9), ((((a6 - 3418) | 0x809) - 2097) | 0xC87u) + 544);
}

uint64_t sub_1001255BC(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v6 + 8 * ((((758 * (a4 ^ 0xC7C)) ^ (19 * (a4 ^ 0xC6F)) ^ 0x447) * (v4 == v5)) ^ a4)))();
}

uint64_t sub_100125614(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  int v29 = v25 - 2147;
  int v30 = 17 * ((v25 - 2147) ^ 0x3C9);
  *(_DWORD *)(v28 - 112) = v29
                         + 2531
                         + 1697562443
                         * ((-1016255051 - ((v28 - 144) | 0xC36D2DB5) + ((v28 - 144) | 0x3C92D24A)) ^ 0xEB02EACE);
  *(void *)(v28 - 144) = a22;
  *(void *)(v28 - 136) = a23;
  *(void *)(v28 - 128) = a24;
  *(void *)(v28 - 120) = a24;
  (*(void (**)(uint64_t))(v26 + 8 * (v29 ^ 0x11F5)))(v28 - 144);
  *(void *)(v28 - 144) = a22;
  *(void *)(v28 - 136) = a23;
  *(_DWORD *)(v28 - 112) = v29
                         + 2531
                         + 1697562443
                         * ((-518335500 - ((v28 - 144) | 0xE11AD3F4) + ((v28 - 144) | 0x1EE52C0B)) ^ 0xC975148F);
  *(void *)(v28 - 128) = a24;
  *(void *)(v28 - 120) = a24;
  (*(void (**)(uint64_t))(v26 + 8 * (v29 ^ 0x11F5)))(v28 - 144);
  int v31 = 476588053 * ((((v28 - 144) | 0xABB4A4F8) - (v28 - 144) + ((v28 - 144) & 0x544B5B00)) ^ 0x1649A0BB);
  *(void *)(v28 - 144) = a25;
  *(_DWORD *)(v28 - 136) = v27 - 723002738 + v31 + v30 + 3275;
  *(_DWORD *)(v28 - 132) = (v29 - 491) ^ v31;
  uint64_t v32 = (*(uint64_t (**)(uint64_t))(v26 + 8 * (v29 ^ 0x11C1)))(v28 - 144);
  return (*(uint64_t (**)(uint64_t))(v26
                                            + 8 * (((*(_DWORD *)(v28 - 128) == -1683312732) * (v30 ^ 0x674)) | v29)))(v32);
}

uint64_t sub_1001257B0(unsigned int a1, int a2)
{
  *uint64_t v10 = ((v3 ^ v19) >> 24) ^ 0x91;
  v10[4] = ((v16 ^ v17) >> 24) ^ 0xE0;
  v10[8] = ((v20 ^ v15) >> 24) ^ 0x21;
  v10[12] = ((v14 ^ v13) >> 24) ^ 0x14;
  v10[16] = ((v4 ^ v18) >> 24) ^ 0x42;
  v10[20] = ((v11 ^ v12) >> 24) ^ 0xEA;
  int v6 = a2 ^ a1;
  v10[24] = ((a2 ^ a1) >> 24) ^ 0xE6;
  int v7 = v2 ^ v5;
  v10[28] = HIBYTE(v7) ^ 0x94;
  v10[5] = ((v16 ^ v17) >> 16) ^ 0x41;
  v10[21] = ((v11 ^ v12) >> 16) ^ 0x1F;
  v10[9] = ((v20 ^ v15) >> 16) ^ 0x7C;
  v10[1] = ((v3 ^ v19) >> 16) ^ 0x4F;
  v10[17] = ((v4 ^ v18) >> 16) ^ 0xF;
  v10[13] = ((v14 ^ v13) >> 16) ^ 0xF3;
  v10[29] = BYTE2(v7) ^ 0x11;
  uint64_t result = 37;
  v10[25] = BYTE2(v6) ^ 0x7B;
  v10[6] = ((unsigned __int16)(v16 ^ v17) >> 8) ^ 0xC4;
  v10[14] = ((unsigned __int16)(v14 ^ v13) >> 8) ^ 0x36;
  v10[18] = ((unsigned __int16)(v4 ^ v18) >> 8) ^ 0xB3;
  void v10[2] = ((unsigned __int16)(v3 ^ v19) >> 8) ^ 0x25;
  v10[10] = ((unsigned __int16)(v20 ^ v15) >> 8) ^ 0x42;
  v10[22] = ((unsigned __int16)(v11 ^ v12) >> 8) ^ 0xFE;
  v10[26] = BYTE1(v6) ^ 0x46;
  v10[30] = BYTE1(v7) ^ 0x66;
  v10[3] = v3 ^ v19 ^ 0x6F;
  v10[7] = v16 ^ v17 ^ 0x2A;
  v10[15] = v14 ^ v13 ^ 4;
  v10[11] = v20 ^ v15 ^ 0xA2;
  v10[19] = v4 ^ v18 ^ 0x65;
  v10[23] = v11 ^ v12 ^ 0x43;
  v10[27] = v6 ^ 0x49;
  v10[31] = v7 ^ 0x8B;
  *(_DWORD *)(v9 + 8) = 847203058;
  return result;
}

uint64_t sub_1001259C4()
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(STACK[0x6F8] + 8 * (v0 ^ 0x3A)))(151595232, 2019817770, 4208934810);
}

uint64_t sub_100125E7C@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(a1 + 8 * ((4 * (v1 == 473457775)) | (8 * (v1 == 473457775)) | 0x830u)))();
}

uint64_t sub_100125EAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, void))(v7
                                                             + 8
                                                             * ((22 * (v6 < (((a6 ^ 0x1CCA) + 226) ^ 0xEA6u))) ^ a6 ^ 0x1CCA)))(a1, a2, 0);
}

uint64_t sub_100125EF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v8 = (v6 + v4 + v3 + 100666800 - v5 + 2);
  *(void *)(a1 - 7 + v8) = *(void *)(a2 - 7 + v8);
  return (*(uint64_t (**)(void))(v7 + 8 * ((3020 * (v5 - (v2 & 0xFFFFFFF8) == -8)) ^ v6)))();
}

uint64_t sub_100125F58@<X0>(int a1@<W8>)
{
  unsigned int v3 = a1 ^ 0xAFB6AA2C;
  *int v5 = v8;
  v5[1] = v6;
  void v5[2] = v7;
  v5[3] = v9;
  uint64_t v13 = v10;
  unsigned int v14 = v2
      + (a1 ^ 0xAFB6AA2C)
      + 366490169 * (((&v12 | 0x9A5FE37F) - (&v12 & 0x9A5FE37F)) ^ 0x8CF1B53B);
  (*(void (**)(uint64_t *))(v1 + 8 * (int)(v2 + (a1 ^ 0xAFB6AA2C) + 168)))(&v12);
  uint64_t v13 = v11;
  unsigned int v14 = v2
      + 366490169 * ((1393568576 - (&v12 | 0x53102B40) + (&v12 | 0xACEFD4BF)) ^ 0xBA4182FB)
      + v3;
  (*(void (**)(uint64_t *))(v1 + 8 * (int)(v3 ^ 0xAFB6B90E)))(&v12);
  return 0;
}

void sub_100126098(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_DWORD *)(a3 + v3) = 330117362;
  sub_1001D424C();
}

uint64_t sub_1001260A8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v11 = v8 ^ 0xB30;
  int v12 = v8 + 1130;
  if (v9) {
    BOOL v13 = *a1 == 0;
  }
  else {
    BOOL v13 = 1;
  }
  int v14 = v13;
  return (*(uint64_t (**)(void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 8 * ((v14 * (v11 + 133)) ^ v12)))(a1, a2, a3, a4, a5, a6, a7, a8);
}

uint64_t sub_1001260E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, int a14)
{
  a14 = 31090337 * ((&a13 + 364954621 - 2 * ((unint64_t)&a13 & 0x15C0C3FD)) ^ 0xD241A3B4)
      + 1655392376;
  uint64_t v15 = (*(uint64_t (**)(int *))(v14 + 37600))(&a13);
  return (*(uint64_t (**)(uint64_t))(v14 + 8 * ((3406 * (a13 == 847203058)) ^ 0x3A5u)))(v15);
}

uint64_t sub_100126184(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, unint64_t *a15, int a16, unsigned int a17)
{
  a15 = &STACK[0x75464D914B7248A7];
  a17 = v19 - ((&a15 & 0xF57BF18F | ~(&a15 | 0xF57BF18F)) ^ 0xCD056E39) * v20 + 1962;
  uint64_t v21 = (*(uint64_t (**)(unint64_t **))(v17 + 8 * (v19 + 2985)))(&a15);
  return (*(uint64_t (**)(uint64_t))(v17
                                            + 8 * ((2734 * (a16 == (((v19 - 1437) | 0x82) ^ (v18 + 1819)))) ^ v19)))(v21);
}

uint64_t sub_100126224(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, char a11, uint64_t a12, uint64_t a13, int a14, unsigned int a15, uint64_t a16, char *a17)
{
  a15 = (v17 + 50) ^ (((2 * (&a14 & 0x265C1AB8) - &a14 - 643570368) ^ 0x68AA638E) * v21);
  a16 = a13;
  a17 = &a11;
  (*(void (**)(int *))(v18 + 8 * (v17 ^ 0x1AF8)))(&a14);
  LODWORD(a17) = v17
               - 476588053 * (((&a14 | 0x3CA720C3) - (&a14 & 0x3CA720C3)) ^ 0x815A2480)
               + 393;
  a16 = a13;
  uint64_t v22 = (*(uint64_t (**)(int *))(v18 + 8 * (v17 ^ 0x1A99)))(&a14);
  return (*(uint64_t (**)(uint64_t))(v18 + 8 * ((860 * (a14 == (v17 ^ (v19 + 1402)) + v20)) ^ v17)))(v22);
}

uint64_t sub_100126314(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, _DWORD *a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19, unsigned int a20)
{
  *a6 = 0;
  *a7 = 0;
  a20 = 31090337 * (&a19 ^ 0xC7816049) + 1655392376;
  uint64_t v22 = (*(uint64_t (**)(int *))(v21 + 37600))(&a19);
  return (*(uint64_t (**)(uint64_t))(v21 + 8 * ((1639 * (a19 == 847203058)) ^ v20)))(v22);
}

uint64_t sub_1001263A0(int a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * ((((*(_DWORD *)(v7 + (v6 + a4) * (uint64_t)a1 + 40) & 8) == (v4 ^ 0xA45) - 2437)
                                * (v4 ^ 0xE58)) ^ v4)))();
}

uint64_t sub_1001263E4@<X0>(uint64_t a1@<X8>, double a2@<D0>)
{
  *(double *)(v6 + (a1 ^ v3)) = a2;
  return (*(uint64_t (**)(void))(v7 + 8 * (((v5 == 0) * v4) ^ v2)))();
}

uint64_t sub_100126410(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7
                                                                       + 8
                                                                       * (((v6 + v4 + 100668426 >= (v5 ^ 0xEFFu))
                                                                         * (((v5 - 810082264) & 0x3048D3EB) - 768)) ^ v5)))(v3, a2, a3, 3322066249);
}

void sub_100126478()
{
}

uint64_t sub_1001264FC@<X0>(uint64_t a1@<X0>, void *a2@<X1>, int a3@<W2>, int a4@<W5>, int a5@<W8>)
{
  return sub_10014AE10(a1, a4 ^ 0x1D4u, 158, *(_DWORD *)(*a2 + 4 * (int)((a4 ^ 0xBCEEBD70) + a3)), a5);
}

uint64_t sub_100126530@<X0>(int a1@<W8>)
{
  BOOL v4 = *(unsigned __int8 *)(v1 + (v3 - 473457776)) == 96;
  return (*(uint64_t (**)(void))(v2 + 8 * ((v4 | (4 * v4)) ^ a1)))();
}

uint64_t sub_100126584()
{
  STACK[0x298] = STACK[0x260];
  return sub_10018B530();
}

uint64_t sub_1001265A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, char a14, uint64_t a15, int a16, unsigned int a17, uint64_t a18, int *a19)
{
  a13 = 0;
  a17 = (v19 - 992) ^ (((-565861991 - (&a16 | 0xDE45A199) + (&a16 | 0x21BA5E66)) ^ 0x90B3D8A8)
                     * v20);
  a18 = a11;
  a19 = &a13;
  (*(void (**)(int *))(v22 + 8 * (v19 + 1366)))(&a16);
  a17 = (v19 - 992) ^ (((((2 * &a16) | 0x5B1DF13E) - &a16 + 1383139169) ^ 0x1C877E51) * v20);
  a18 = a11;
  a19 = (int *)&a14;
  (*(void (**)(int *))(v22 + 8 * (v19 + 1366)))(&a16);
  LODWORD(a19) = v19
               - 476588053 * ((&a16 & 0x91619597 | ~(&a16 | 0x91619597)) ^ 0xD3636E2B)
               - 649;
  a18 = a11;
  uint64_t v23 = (*(uint64_t (**)(int *))(v22 + 8 * (v19 ^ 0x1EB7)))(&a16);
  return (*(uint64_t (**)(uint64_t))(v22 + 8 * ((21 * (a16 == ((499 * (v19 ^ 0xCE5)) ^ (v21 - 1957)))) ^ v19)))(v23);
}

uint64_t sub_1001266F8()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * (((((((v2 ^ 0x16) - 1553366430) & 0x5C967EFF) - 319) ^ ((v2 ^ 0x16) + 10))
                                * (v3 + v1 - 3406 != v0 + 64)) ^ v2 ^ 0x16)))();
}

uint64_t sub_100126750@<X0>(int a1@<W0>, int a2@<W1>, int a3@<W2>, int a4@<W4>, uint64_t a5@<X8>, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54)
{
  int v59 = 3 * (a4 ^ 0x17E);
  v67.val[1].i64[0] = ((_BYTE)v57 + 1) & 0xF;
  v67.val[1].i64[1] = v57 & 0xF;
  v67.val[2].i64[0] = ((_BYTE)v57 - 1) & 0xF;
  v67.val[2].i64[1] = ((_BYTE)v57 + 14) & 0xF;
  v67.val[3].i64[0] = ((_BYTE)v57 + 13) & 0xF;
  v67.val[3].i64[1] = ((v59 ^ 1) + (_BYTE)v57) & 0xF;
  v68.val[0].i64[0] = ((_BYTE)v57 + 11) & 0xF;
  v68.val[0].i64[1] = ((_BYTE)v57 + 10) & 0xF;
  unsigned int v60 = a2 + a1 + a3;
  v68.val[1].i64[0] = ((_BYTE)v57 + 9) & 0xF;
  v68.val[1].i64[1] = ((_BYTE)v57 + 8) & 0xF;
  v68.val[2].i64[0] = (v57 + 7) & 0xF;
  v68.val[2].i64[1] = (v57 + 6) & 0xF;
  v68.val[3].i64[0] = ((_BYTE)v57 + 5) & 0xF;
  v68.val[3].i64[1] = (v57 + 4) & 0xF;
  v61.i64[0] = 0x505050505050505;
  v61.i64[1] = 0x505050505050505;
  v62.i64[0] = 0x6060606060606060;
  v62.i64[1] = 0x6060606060606060;
  v67.val[0].i64[0] = ((_BYTE)a2 + (_BYTE)a1 + (_BYTE)a3) & 0xF;
  v67.val[0].i64[1] = ((_BYTE)v57 + 2) & 0xF;
  v63.i64[0] = vqtbl4q_s8(v67, (int8x16_t)xmmword_1004A0AA0).u64[0];
  v63.i64[1] = vqtbl4q_s8(v68, (int8x16_t)xmmword_1004A0AA0).u64[0];
  int8x16_t v64 = vrev64q_s8(veorq_s8(veorq_s8(*(int8x16_t *)(a5 - 15 + v60), *(int8x16_t *)(v55 + v67.val[0].i64[0] - 15)), veorq_s8(*(int8x16_t *)(v56 + v67.val[0].i64[0] - 15), *(int8x16_t *)(v54 + v67.val[0].i64[0] - 15))));
  int8x16_t v65 = vrev64q_s8(veorq_s8(veorq_s8(vextq_s8(v64, v64, 8uLL), v62), vmulq_s8(v63, v61)));
  *(int8x16_t *)(a5 - 15 + v60) = vextq_s8(v65, v65, 8uLL);
  return (*(uint64_t (**)(void))(a54 + 8 * ((((v58 & 0xFFFFFFF0) != 16) * ((v59 ^ 0xED4) - 3789)) ^ v59)))();
}

uint64_t sub_1001268C4@<X0>(int a1@<W0>, unsigned int a2@<W1>, int a3@<W2>, int a4@<W3>, int a5@<W4>, int a6@<W7>, unsigned int a7@<W8>)
{
  int v21 = v10 + 1;
  LODWORD(STACK[0x6F4]) = a5 + 1108;
  unsigned int v22 = *(unsigned __int8 *)(STACK[0x580] + ((a5 + 1108) ^ 0xBFBDC3AE) + v21) + ((a5 + 1108) ^ 0xBFBDC3AE) + v21;
  unsigned int v23 = v13 ^ a1 ^ 0x6B1EF64F ^ ((~(75946810 * v22 - 1577837358) | 0x5BFAAB21) - 2109510243 * v22 + 586987737);
  unsigned int v24 = (LODWORD(STACK[0x700]) ^ 0x22EA9F9F) + (a6 ^ 0xA7CF397D) + ((v23 % 0x101) ^ v23) + 2;
  unsigned int v25 = (v24 - 297885735 - ((2 * v24) & 0xDC7D3FB2)) ^ v11;
  int v26 = v25 - 2 * ((v25 + 1822732848) & (a4 + 1) ^ v25 & 1) - 1277122722;
  unsigned int v27 = LODWORD(STACK[0x700]) ^ 0x9A2E954E ^ v26;
  int v28 = (v26 ^ v15) + 1;
  unsigned int v29 = v28 + (v11 ^ 0xEE3E9FD9);
  HIDWORD(v30) = v26 ^ a4;
  LODWORD(v30) = v26;
  int v31 = v28 + (a6 ^ v14);
  int v32 = (((v30 >> 31) + v27) ^ v31) + v29;
  unsigned int v33 = (v32 ^ 0xA6E151A8) + v27;
  int v34 = (v31 - (v16 & (2 * v31)) + v17) ^ v32 ^ v18;
  unsigned int v35 = (v32 ^ 0xA6E151A8) + v29;
  HIDWORD(v30) = v32 ^ 0x26E151A8;
  LODWORD(v30) = ~v32;
  int v36 = (((v30 >> 31) - v33) ^ v34) - v35;
  int v37 = v36 ^ v33;
  HIDWORD(v30) = v36 ^ a3;
  LODWORD(v30) = v36;
  int v38 = (v34 + (v36 ^ v19) + 2 + (v30 >> 31) + (v37 ^ a3) + (v20 ^ (2 * v37))) ^ ((v36 ^ v19) + v35 + 1);
  int v39 = v38 - ((2 * v38 + 1499927864) & v8) + v7;
  if (a7 < a2 != v21 + v9 < a2) {
    BOOL v40 = a7 < a2;
  }
  else {
    BOOL v40 = v21 + v9 < a7;
  }
  LODWORD(STACK[0x700]) = v37 ^ v12 ^ v39;
  return (*(uint64_t (**)(void))(STACK[0x6F8] + 8 * ((v40 | (4 * v40)) ^ (a5 + 1843))))();
}

uint64_t sub_1001268D0(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  *(unsigned char *)(v14
           + v8 * v10
           - 464907868
           - ((((v8 * v10 - 464907868) * (unint64_t)v9) >> 32) >> 4) * v12) = v8 + (a3 | ~(((_BYTE)v8 << ((v7 + 53) ^ 0x9A)) - 56)) - 72;
  return (*(uint64_t (**)(void))(a7 + 8 * (((v8 + 1 == v13 + 16) * v11) ^ v7)))();
}

uint64_t sub_100126938(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  *(_DWORD *)(v30 - 108) = (v29 - 463) ^ (((~((v30 - 120) | v25) + ((v30 - 120) & v25)) ^ 0xC23D740) * v24);
  *(void *)(v30 - 104) = a24;
  *(void *)(v30 - 120) = v28;
  uint64_t v31 = (*(uint64_t (**)(uint64_t))(v26 + 8 * (v29 ^ 0x145A)))(v30 - 120);
  return (*(uint64_t (**)(uint64_t))(v26
                                            + 8
                                            * (((*(_DWORD *)(v30 - 112) > v27)
                                              * ((769 * (v29 ^ 0x616) + 3961) ^ (v29 - 330135061) & 0x13AD73E3)) ^ v29)))(v31);
}

uint64_t sub_1001269F4@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((1277
                                * (*(_DWORD *)(a1 + 532) - 330117363 < (((LODWORD(STACK[0x2C8]) + 61) | 0x104) ^ 0x7FFFF67Au))) ^ LODWORD(STACK[0x2C8]))))();
}

uint64_t sub_100126A4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unint64_t *a13, int a14, unsigned int a15)
{
  a15 = 3687 - ((((2 * &a13) | 0x58668226) - &a13 + 1405927149) ^ 0x6BB2215A) * v16;
  a13 = &STACK[0x75464D914B72488F];
  uint64_t v18 = (*(uint64_t (**)(unint64_t **))(v15 + 37680))(&a13);
  return (*(uint64_t (**)(uint64_t))(v15 + 8 * ((6140 * (a14 == v17)) ^ 0x698u)))(v18);
}

uint64_t sub_100126ADC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  *(void *)(v29 - 120) = v25;
  *(void *)(v29 - 104) = a25;
  *(_DWORD *)(v29 - 112) = (v27 + 2852) ^ (1697562443
                                         * (((((v29 - 120) | 0x9C2066BE) ^ 0xFFFFFFFE) - (~(v29 - 120) | 0x63DF9941)) ^ 0xB44FA1C5));
  uint64_t v30 = (*(uint64_t (**)(uint64_t))(v26 + 8 * (v27 + 3183)))(v29 - 120);
  return (*(uint64_t (**)(uint64_t))(v26 + 8 * (((v28 != ((v27 - 543) ^ 0x2A43E2E7)) * (v27 - 1516)) ^ v27)))(v30);
}

void sub_100126B84()
{
}

uint64_t sub_100126B98@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, int a6@<W8>, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,int a36,char a37)
{
  return sub_100174284(a1, a2, a3, a4, a5, &a37 + (a6 + v37 + v38 + 2570));
}

uint64_t sub_100126BB0@<X0>(int a1@<W8>)
{
  int v10 = v5 + 1;
  BOOL v11 = v1 < v2;
  *(_DWORD *)(*v4 + 4 * (v10 + v6)) = *(_DWORD *)(*v4 + 4 * (a1 + v10));
  if (v11 == v10 + v7 < v2) {
    BOOL v11 = v10 + v7 < v1;
  }
  return (*(uint64_t (**)(void))(v9 + 8 * ((v11 * v8) ^ v3)))();
}

void sub_100126BB8()
{
}

uint64_t sub_100126BC0@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  *(unsigned char *)(*(void *)(a2 + 96) + 468) = *(unsigned char *)(*(void *)(a1 + 8) + 12);
  return (*(uint64_t (**)(void))(v2 + 15152))(0);
}

uint64_t sub_100126C18()
{
  STACK[0x300] = *(void *)(v1 + 8 * v0);
  return sub_1001E5910();
}

void sub_100126C24(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 8) ^ (1697562443 * ((a1 + 245435999 - 2 * (a1 & 0xEA10E5F)) ^ 0xD93136DB));
  __asm { BRAA            X13, X17 }
}

uint64_t sub_100126CDC()
{
  return 0;
}

uint64_t sub_100126D1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  return sub_100126D40(a1, a2, a3, a4, a5, a13);
}

uint64_t sub_100126D40@<X0>(uint64_t a1@<X5>, unsigned int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v16 = (v15 + v12);
  char v17 = *(unsigned char *)(v10 + v16);
  uint64_t v18 = (a2 ^ v11) + v16 + v9 - 2496;
  unint64_t v19 = 1554976193 * ((1554976193 * v18) ^ ((1554976193 * v18) >> 16));
  *(unsigned char *)uint64_t v18 = *(unsigned char *)(a9 + (v19 >> 24)) ^ v17 ^ *(unsigned char *)((v19 >> 24) + a8 + 3) ^ *(unsigned char *)(a1 + (v19 >> 24)) ^ v19 ^ (((1554976193 * ((1554976193 * v18) ^ ((1554976193 * v18) >> 16))) >> 24) * v13);
  return (*(uint64_t (**)(void))(STACK[0x258] + 8 * (((v15 == 1950892908) * v14) ^ a2)))();
}

uint64_t sub_100126DCC()
{
  return sub_1001DDC58();
}

uint64_t sub_100126DF8()
{
  return ((uint64_t (*)(void))STACK[0x830])();
}

uint64_t sub_100126E08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27)
{
  int v32 = STACK[0x4D4];
  if (LODWORD(STACK[0x4D4]) == 1771736811)
  {
    int v34 = LODWORD(STACK[0x2E4]) + 1761027674;
    uint64_t v35 = (LODWORD(STACK[0x2E4]) - 1954);
    int v36 = LODWORD(STACK[0x2E4]) - 1096;
    STACK[0x518] = (unint64_t)&STACK[0x5C0] + v28;
    LODWORD(STACK[0x514]) = 1320169808;
    STACK[0x418] = v29 + v35 - 675;
    STACK[0x4C0] = 0;
    int v37 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v27 + 8 * ((119 * ((((unint64_t *)((char *)&STACK[0x5C0] + v28) == (unint64_t *)-248) ^ v34) & 1)) ^ v36));
    LODWORD(STACK[0x380]) = 473457775;
    STACK[0x2A8] = STACK[0x388];
    STACK[0x2C0] = (unint64_t)&STACK[0x5C0] + v28 + 228;
    STACK[0x2C8] = (unint64_t)&STACK[0x5C0] + v28;
    return v37(a1, a2, a3, a4, a5, a6, a7, a8, a9);
  }
  else if (v32 == 2040172270)
  {
    LODWORD(STACK[0x308]) = v31 - 161;
    return (*(uint64_t (**)(void))(v27
                                + 8
                                * (((STACK[0x4F0] == 0)
                                  * ((LODWORD(STACK[0x2E4]) + 366) ^ 0x6AE ^ ((LODWORD(STACK[0x2E4]) - 389) | 0x45A))) ^ (LODWORD(STACK[0x2E4]) + 813))))();
  }
  else
  {
    int v38 = STACK[0x2E4];
    int v39 = 142545853 * (((((v30 - 192) | 0x6A34E964) ^ 0xFFFFFFFE) - (~(v30 - 192) | 0x95CB169B)) ^ 0xBF34B9F4);
    *(_DWORD *)(v30 - 192) = v32 - v39 - 924533753;
    *(void *)(v30 - 184) = a27;
    *(_DWORD *)(v30 - 176) = (v38 + 1398) ^ v39;
    uint64_t v40 = (*(uint64_t (**)(uint64_t))(v27 + 8 * (v38 + 2222)))(v30 - 192);
    return (*(uint64_t (**)(uint64_t))(v27
                                              + 8
                                              * (((STACK[0x4F0] == 0) * ((v38 + 366) ^ 0x6AE ^ ((v38 - 389) | 0x45A))) ^ (v38 + 813))))(v40);
  }
}

uint64_t sub_100127018()
{
  (*(void (**)(unint64_t *, uint64_t))(v1 + 8 * ((int)v0 + 4550)))(&STACK[0xC7F], 4096);
  STACK[0x8E0] = *(void *)(STACK[0x258] + 8 * v0);
  return sub_100162654();
}

uint64_t sub_100127088@<X0>(uint64_t a1@<X6>, uint64_t a2@<X8>)
{
  *(unsigned char *)(v3 + v4 + 6) = BYTE6(a2) ^ 0x43 ^ (v2 - 73);
  return (*(uint64_t (**)(void))(a1 + 8 * ((((v2 - 1572274432) & 0x5DB6F7E7 ^ 0x2FA) * (v4 == 25)) ^ v2)))();
}

uint64_t sub_1001270E0@<X0>(uint64_t a1@<X8>)
{
  *(_DWORD *)(a1 + 16) = *(_DWORD *)v1;
  *(_DWORD *)(a1 + 88) = *(_DWORD *)(v1 + 72);
  *(_DWORD *)(a1 + 92) = *(_DWORD *)(v1 + 76);
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(v1 + 80);
  *(unsigned char *)(a1 + 97) = *(unsigned char *)(v1 + 81);
  *(_DWORD *)(a1 + 120) = *(_DWORD *)(v1 + 104);
  *(_DWORD *)(a1 + 100) = *(_DWORD *)(v1 + 84);
  *(unsigned char *)(a1 + 124) = (*(unsigned char *)(v1 + 108) ^ 0xF7) & 0x5F ^ (v2 + 30) ^ (((*(unsigned char *)(v1 + 108) ^ 0xF7) & 0x5E)
                                                                           - (((*(unsigned char *)(v1 + 108) ^ 0xF7) & 0x1C)
                                                                            + (*(unsigned char *)(v1 + 108) ^ 0xF7 | 0xE3)));
  *(unsigned char *)(a1 + 55) = *((unsigned char *)*(&off_100520A90 + ((v2 - 38) ^ 0xB7E)) + 7) ^ 0xF5 ^ *((unsigned char *)*(&off_100520A90 + (int)((v2 - 38) & 0xD5CA04B4))
                                                                                         + 6) ^ (*(unsigned char *)(v1 + 39)
                                                                                               + (*(unsigned char *)(v1 + 39) | 0x6E)
                                                                                               + ((v2 - 38) ^ 0x89 | ~*(unsigned char *)(v1 + 39))
                                                                                               + 56) ^ *((unsigned char *)*(&off_100520A90 + v2 - 2935) + 15);
  return (*(uint64_t (**)(void))(v3 + 8 * ((v2 - 38) ^ 0x7EA)))();
}

uint64_t sub_100127214()
{
  int v3 = v0 - 1190;
  STACK[0x720] = 0;
  int v4 = STACK[0x7FC];
  STACK[0x748] = STACK[0x720];
  STACK[0x7F0] -= 32;
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((v4 == ((((v3 - 1031) | 0x40) + 1783) ^ (v1 - 2124)))
                                * ((((v3 - 1031) | 0x40) ^ 0x1F6) + 3283)) ^ ((v3 - 1031) | 0x40))))();
}

uint64_t sub_100127270()
{
  return (*(uint64_t (**)(void))(v1 + 8 * (2 * (v0 > 0xB782AC26) + 1660)))();
}

uint64_t sub_1001272CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48)
{
  *(_DWORD *)(v50 - 192) = 1805051420
                         - 1697562443
                         * ((((v50 - 192) ^ 0x2ED37319 | 0xE0151CEF)
                           - ((v50 - 192) ^ 0x2ED37319)
                           + (((v50 - 192) ^ 0x2ED37319) & 0x1FEAE310)) ^ 0x19565772)
                         + v48
                         + 2140;
  (*(void (**)(uint64_t))(v49 + 8 * (v48 ^ 0x13AFu)))(v50 - 192);
  *(_DWORD *)(v50 - 164) = 673918253 * ((v50 - 192 - 2 * ((v50 - 192) & 0x4DEA78E0) + 1307212000) ^ 0xD7A26348)
                         + v48
                         + 3854;
  *(void *)(v50 - 192) = a48;
  *(void *)(v50 - 176) = a26;
  LOBYTE(STACK[0x18E8]) = (45 * ((v50 + 64 - 2 * ((v50 + 64) & 0xE0) - 32) ^ 0x48)) ^ 0x34;
  (*(void (**)(uint64_t))(v49 + 8 * (v48 ^ 0x1350u)))(v50 - 192);
  return sub_10014D210();
}

uint64_t sub_1001273CC(uint64_t a1, uint64_t a2, int a3, int a4)
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * ((((((a3 - 448) | 0x196) + 108) ^ (19 * ((a3 + 1577) ^ 0xBFD))) * (v4 == a4)) ^ (a3 + 1577))))();
}

uint64_t sub_100127410(int a1, int a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v17 = a1 + 1;
  uint64_t v18 = 4 * (((v8 + 2849) | a2) + v17 + a3);
  unint64_t v19 = (a5 ^ HIDWORD(v16)) + (a6 & (v16 >> 31)) + a7 + a4 + (*(_DWORD *)(*v12 + v18) ^ v11);
  *(_DWORD *)(*v12 + v18) = v19 + v13 - (v15 & (2 * v19));
  BOOL v20 = v17 + a8 < v10;
  if (v10 < v9 != v17 + a8 < v9) {
    BOOL v20 = v10 < v9;
  }
  return (*(uint64_t (**)(void))(v14 + 8 * ((14 * v20) ^ (v8 + 1200))))();
}

uint64_t sub_100127428()
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((204
                                * (((v2 + v1 + 100668426 < ((v0 + 1864) ^ 0xFBFu)) ^ (-65 * (v0 ^ 0x6D) + 1)) & 1)) ^ v0)))();
}

uint64_t sub_100127498(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, int a15, unsigned int a16, unsigned int a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,int a32,int a33)
{
  if (a17 < a16 != a33 - 1846755491 < ((a15 - 371466149) ^ (14 * a15))) {
    BOOL v35 = a33 - 1846755491 < ((a15 - 371466149) ^ (14 * a15));
  }
  else {
    BOOL v35 = a33 - 1846755491 > a17;
  }
  return (*(uint64_t (**)(void))(v34 + 8 * ((14 * v35) ^ (v33 + 1879))))();
}

uint64_t sub_10012751C(int a1, unsigned int a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  int v11 = a1 - 3431;
  int v12 = a1 - 379;
  int v13 = v8 + v7;
  unsigned int v14 = v13 + v9 + ((v11 - 204) | 8);
  if (v14 <= 0x40) {
    unsigned int v14 = a2;
  }
  return (*(uint64_t (**)(void))(v10 + 8 * (v11 | (2 * (a7 - v13 + v12 - 3896 < a3 + v14)))))();
}

uint64_t sub_100127568@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int a5, uint64_t a6)
{
  a5 = (v8 - 733) ^ (673918253 * (&a3 ^ 0x9A481BA8));
  a6 = v7;
  a3 = v6;
  a4 = v7;
  uint64_t v9 = (*(uint64_t (**)(uint64_t *))(a1 + 8 * (v8 + 3564)))(&a3);
  return sub_1001275AC(v9);
}

uint64_t sub_1001275D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, char a12, uint64_t a13, unsigned int a14)
{
  int v16 = v14 ^ 0x621;
  BOOL v17 = (*(unsigned int (**)(void, uint64_t, char *))(v15 + 8 * (v16 ^ 0x1EB8u)))(a14, a1, &a12) == ((v16 + 1433402317) & 0xAA8FFD93 ^ 0x591);
  return (*(uint64_t (**)(void))(v15 + 8 * ((125 * ((v16 ^ 0xB9 ^ v17) & 1)) ^ v16)))();
}

uint64_t sub_100127650()
{
  int v3 = (v1 - 1093) | 0x21D;
  LOBYTE(STACK[0x18E8]) = (45 * ((((2 * (v2 + 64)) | 0xD4) - (v2 + 64) + 22) ^ 0x42)) ^ 0x33;
  *(_DWORD *)(v2 - 164) = 673918253 * ((((2 * (v2 - 192)) | 0x10EE21D4) - (v2 - 192) + 2005462806) ^ 0x123F0B42)
                        + v3
                        + 2266;
  *(void *)(v2 - 176) = &STACK[0x5C7E77A7904FA53F];
  *(void *)(v2 - 192) = &STACK[0x1B850BF289D55BBF];
  uint64_t v4 = (*(uint64_t (**)(uint64_t))(v0 + 8 * (v3 ^ 0x1524)))(v2 - 192);
  int v5 = *(_DWORD *)(v2 - 168);
  LODWORD(STACK[0x4A4]) = v5;
  return (*(uint64_t (**)(uint64_t))(v0 + 8 * ((2864 * (v5 == ((v3 + 847199130) ^ v3 ^ 0xF58))) ^ v3)))(v4);
}

uint64_t sub_100127820(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, int a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, int a20)
{
  return (*(uint64_t (**)(void))(v20 + 8
                                    * (int)((((a11 + 1252534597) & 0xB557D6B7 ^ 0x709) * (a20 == 847203058)) ^ a11)))();
}

uint64_t sub_100127894(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(v7
                              + 8
                              * (int)((((((v6 - 2310) | 0x280) ^ 0xFFFFFC40) + ((v6 - 585553243) & 0x22E6CDC5))
                                     * ((unint64_t)(a6 - a1) < 0x20)) ^ v6)))();
}

uint64_t sub_1001278E8(uint64_t a1, int a2, int a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(void))(v6 + 8 * ((241 * (a3 + a2 + ((a6 - 1556) | 0x204u) - 998211515 > 7)) ^ a6)))();
}

uint64_t sub_10012792C@<X0>(int a1@<W8>)
{
  LODWORD(STACK[0x75C]) = a1;
  return sub_1001DCF40();
}

void sub_100127940()
{
}

uint64_t sub_10012794C@<X0>(int a1@<W6>, int a2@<W7>, int a3@<W8>)
{
  *(unsigned char *)(v5 + v4) = *(unsigned char *)(v8 + (v3 + v6))
                      - ((2 * *(unsigned char *)(v8 + (v3 + v6))) & 0xC0)
                      + 96;
  return (*(uint64_t (**)(void))(v7 + 8 * (((v4 == 63) * a1) ^ (a2 + a3 + 70))))();
}

uint64_t sub_100127998()
{
  return (*(uint64_t (**)(void))(v1 + 8 * (((*(void *)(STACK[0x5D0] + 24) != 0) * ((2 * v0) ^ 0x1A3D)) ^ v0)))();
}

uint64_t sub_1001279D0@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,int a43)
{
  return (*(uint64_t (**)(void))(STACK[0x258]
                              + 8
                              * (((((503 * (a43 ^ 0x9C9)) ^ 0x44F) - 148) * (a1 == LODWORD(STACK[0xAE4]))) ^ (a43 + 1775))))();
}

uint64_t sub_100127A2C()
{
  STACK[0x3E8] = *(void *)(v1 + 8 * (v0 & 0x4E2F8D7B));
  return sub_10012A880(2498, 0x46197683F7D18950, 2547, 1024463738, 3270503873, 0xB9E6897C082E76B0);
}

uint64_t sub_100127A4C@<X0>(__int16 a1@<W8>)
{
  LOWORD(STACK[0x984]) = a1;
  return sub_1001B8258();
}

uint64_t sub_100127A60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v7
                                                     + 8
                                                     * ((28 * (v5 != a5 + ((v6 + 1163927323) | 0xB0145014) - 539)) ^ v6)))(a1, -1120029286);
}

uint64_t sub_100127AB0()
{
  *(_DWORD *)(v3 + 4 * (v0 - 816837588)) = 816837588
                                                         - v0
                                                         + ((1566083941
                                                           * (*(_DWORD *)(v3 + 4 * (v0 - 816837589)) ^ (*(_DWORD *)(v3 + 4 * (v0 - 816837589)) >> 30))) ^ *(_DWORD *)(v3 + 4 * (v0 - 816837588)));
  uint64_t v5 = 366490169 * ((2 * ((v4 - 144) & 0x7205BA15FDBC2220) - (v4 - 144) + 0xDFA45EA0243DDD9) ^ 0x2764F0FE14ED8B9DLL);
  *(_DWORD *)(v4 - 136) = -366490169 * ((2 * ((v4 - 144) & 0xFDBC2220) - (v4 - 144) + 38002137) ^ 0x14ED8B9D);
  *(_DWORD *)(v4 - 132) = ((v2 - 416300677) ^ 6) - v5;
  int v6 = v2 - 416300677 - v5;
  *(_DWORD *)(v4 - 144) = v6 - 285;
  *(_DWORD *)(v4 - 140) = 682612568 - v5 + v2;
  *(_DWORD *)(v4 - 128) = v6;
  *(void *)(v4 - 120) = (v0 - 2033011228) - v5;
  *(void *)(v4 - 112) = v5 + 3078793655;
  uint64_t v7 = (*(uint64_t (**)(uint64_t))(v1 + 8 * (v2 ^ 0x44C121FB)))(v4 - 144);
  return (*(uint64_t (**)(uint64_t))(v1 + 8 * *(int *)(v4 - 124)))(v7);
}

void sub_100127BD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if (a10) {
    BOOL v11 = a11 == 0;
  }
  else {
    BOOL v11 = 1;
  }
  int v12 = !v11;
  __asm { BRAA            X9, X17 }
}

uint64_t sub_100127C68@<X0>(uint64_t a1@<X0>, int a2@<W1>, int a3@<W2>, int a4@<W3>, uint64_t a5@<X8>)
{
  uint64_t v9 = a4 - 32 + (((v6 + 2688) | a2) ^ (v7 + 2413));
  long long v10 = *(_OWORD *)(a5 + v9 - 15);
  long long v11 = *(_OWORD *)(a5 + v9 - 31);
  uint64_t v12 = a1 + v9;
  *(_OWORD *)(v12 - 15) = v10;
  *(_OWORD *)(v12 - 31) = v11;
  return (*(uint64_t (**)(void))(v8 + 8 * (((v5 == 32) * a3) ^ (v6 + 3736))))();
}

uint64_t sub_100127C74@<X0>(void *a1@<X8>)
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((((((v1 + 773779897) & 0xD1E10D6F ^ (*a1 == 0)) & 1) == 0)
                                * (((v1 - 509) | 0x22D) - 3615)) ^ v1)))();
}

void sub_100127CCC()
{
  int v1 = (const float *)(v0 + 908);
  vld1q_dup_f32(v1);
  JUMPOUT(0x100127CF4);
}

uint64_t sub_100127DA8@<X0>(int a1@<W8>)
{
  unint64_t v2 = STACK[0x4D8] - 0x23CF9C93D6577EE0;
  BOOL v4 = v2 > 0xB3E79074 && v2 < (unint64_t)(LODWORD(STACK[0x844]) ^ 0xE19B3C29) + 3018297461u;
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (((((-69 * ((a1 + 31) & 0xE4 ^ 0xE6) + 1) ^ v4) & 1)
                                * (((a1 - 731846625) & 0x2B9F0BE4 ^ 0x3E6) + 11)) ^ (a1 - 731846625) & 0x2B9F0BE4)))();
}

void sub_100127E38(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned int a6)
{
  a4 = v7;
  a5 = v6;
  a6 = v8
     - 3276
     + 366490169
     * (((&a3 ^ 0x397FEE21) & 0xB0F4A250 | ~(&a3 ^ 0x397FEE21 | 0xB0F4A250)) ^ 0x60DAE5CA)
     + 1397;
  a3 = v7;
  (*(void (**)(uint64_t *))(a1 + 8 * ((v8 - 3276) ^ 0x16BB)))(&a3);
  sub_1001275AC();
}

uint64_t sub_100127EAC(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, char a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,int a50)
{
  unsigned int v51 = *(uint64_t (**)(void))(STACK[0x258] + 8 * (a50 - 2270));
  uint64_t v52 = *a3 + 6;
  unint64_t v53 = 1554976193 * ((1554976193 * v52) ^ ((1554976193 * v52) >> 16));
  *(unsigned char *)uint64_t v52 = *(unsigned char *)(a48 + (v53 >> 24)) ^ 0x24 ^ *(unsigned char *)(a47 + (v53 >> 24)) ^ *(unsigned char *)((v53 >> 24) + a49 + 1) ^ v53 ^ (17 * ((1554976193 * ((1554976193 * v52) ^ ((1554976193 * v52) >> 16))) >> 24)) ^ a7;
  unint64_t v54 = 1554976193 * ((1554976193 * (v52 + 1)) ^ ((1554976193 * (v52 + 1)) >> 16));
  *(unsigned char *)(v52 + 1) = *(unsigned char *)(a48 + (v54 >> 24)) ^ 0x5B ^ *(unsigned char *)(a47 + (v54 >> 24)) ^ *(unsigned char *)((v54 >> 24) + a49 + 1) ^ v54 ^ (17 * ((1554976193 * ((1554976193 * (v52 + 1)) ^ ((1554976193 * (v52 + 1)) >> 16))) >> 24)) ^ a8;
  unint64_t v55 = 1554976193 * ((1554976193 * (v52 + 2)) ^ ((1554976193 * (v52 + 2)) >> 16));
  *(unsigned char *)(v52 + 2) = (-63 * ((-63 * (v52 + 2)) ^ ((1554976193 * (v52 + 2)) >> 16))) ^ 0x1E ^ *(unsigned char *)(a48 + (v55 >> 24)) ^ *(unsigned char *)(a47 + (v55 >> 24)) ^ (17 * ((1554976193 * ((1554976193 * (v52 + 2)) ^ ((1554976193 * (v52 + 2)) >> 16))) >> 24)) ^ *(unsigned char *)((v55 >> 24) + a49 + 1) ^ 0x1E;
  unint64_t v56 = 1554976193 * ((1554976193 * (v52 + 3)) ^ ((1554976193 * (v52 + 3)) >> 16));
  *(unsigned char *)(v52 + 3) = (-63 * ((-63 * (v52 + 3)) ^ ((1554976193 * (v52 + 3)) >> 16))) ^ 0x6B ^ (17 * ((1554976193 * ((1554976193 * (v52 + 3)) ^ ((1554976193 * (v52 + 3)) >> 16))) >> 24)) ^ *(unsigned char *)(a48 + (v56 >> 24)) ^ *(unsigned char *)(a47 + (v56 >> 24)) ^ *(unsigned char *)((v56 >> 24) + a49 + 1) ^ v50;
  return v51();
}

uint64_t sub_100128024@<X0>(int a1@<W0>, int a2@<W1>, int a3@<W2>, uint64_t a4@<X4>, int a5@<W5>, int a6@<W6>, int a7@<W7>, unsigned int a8@<W8>)
{
  int v22 = (v9 - 650) | v19;
  int v23 = v10 + v22 + 1070063943;
  LODWORD(STACK[0x700]) = v22 - 577;
  int v24 = ((v22 - 577) ^ 0xF0) * v23;
  uint64_t v25 = v24 + v13 - (v24 + v13) / 0x3C5u * v17;
  unint64_t v26 = STACK[0x718];
  unint64_t v27 = STACK[0x710] + (v11 + 1817357541 + v22 + 1070063943);
  *(unsigned char *)(v26 + v25) = *(unsigned char *)v27 ^ *(unsigned char *)(STACK[0x718] + v25);
  uint64_t v28 = v24 + v14 - (v24 + v14) / 0x3C5u * v17;
  LODWORD(v25) = v18 + v27 * v20 + (v15 | ~(v27 * v12)) + 1;
  LODWORD(v25) = ((WORD1(v25) ^ v16) + v18 - 2 * ((WORD1(v25) ^ v16) & a1 ^ WORD1(v25) & 0xA)) ^ v25;
  LODWORD(v25) = v25 * v20 - ((v25 * v12) & a2) + a3;
  *(unsigned char *)(v26 + v28) ^= v25 ^ 0x9A ^ *(unsigned char *)(STACK[0x618]
                                                 + (673 * (a5 ^ BYTE3(v25))
                                                                - ((3627507 * (unint64_t)(673 * (a5 ^ BYTE3(v25)))) >> 32)
                                                                * v19));
  BOOL v29 = v23 + a6 < a8;
  if (a8 < v8 != v23 + a6 < v21) {
    BOOL v29 = a8 < v8;
  }
  return (*(uint64_t (**)(void))(a4 + 8 * ((v29 * a7) ^ v22)))();
}

uint64_t sub_10012816C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, unint64_t *a19, int a20,uint64_t a21,unsigned int a22,int a23,int a24)
{
  unsigned int v27 = 1314530549 * (&a19 ^ 0xB10986CE);
  a22 = 1024384003 - v27;
  a24 = v27 ^ 0x4EA001FB;
  a20 = ((v24 ^ 0x48) + 1780979961) ^ v27;
  a21 = a16;
  a19 = &STACK[0x70766EB78D2F3F30];
  uint64_t v28 = (*(uint64_t (**)(unint64_t **))(v25 + 8 * ((v24 ^ 0x48u) + 3574)))(&a19);
  return (*(uint64_t (**)(uint64_t))(v25
                                            + 8
                                            * (((a23 == v26) * ((((v24 ^ 0x48) - 1490118848) & 0x663) + 3402)) ^ v24 ^ 0x48u)))(v28);
}

void sub_100128238()
{
  *(_DWORD *)(v0 + 16) = v1 + 164;
}

uint64_t sub_100128240(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  BOOL v10 = LODWORD(STACK[0x4D0]) - v7 != ((v5 - 1248276078) & 0x4A672E77 ^ 0x756D5D49)
     || v6 == a5 + ((v5 - 1248276078) ^ 0xB598D000) - 1935;
  return (*(uint64_t (**)(void))(v8 + 8 * ((1018 * v10) ^ v5)))();
}

uint64_t sub_1001282A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, unint64_t *a19, int a20,uint64_t a21,unsigned int a22,int a23,int a24)
{
  unsigned int v27 = 1314530549 * (&a19 ^ 0xB10986CE);
  a19 = &STACK[0x70766EB78D2F3F48];
  a20 = (v24 + 1780980002) ^ v27;
  a24 = v27 ^ 0x4EA001FB;
  a22 = -1549349066 - v27;
  a21 = a14;
  uint64_t v28 = (*(uint64_t (**)(unint64_t **))(v26 + 8 * (v24 + 3615)))(&a19);
  return (*(uint64_t (**)(uint64_t))(v26 + 8 * (((a23 == v25) * ((v24 - 200) ^ 0xB08)) ^ v24)))(v28);
}

uint64_t sub_100128360@<X0>(int a1@<W0>, int a2@<W8>)
{
  return (*(uint64_t (**)(void))(v3 + 8 * (((v2 == 30) * a1) ^ a2)))();
}

void sub_10012836C()
{
  int v0 = STACK[0x9F0];
  LODWORD(STACK[0x370]) = LODWORD(STACK[0x9F4]) ^ 0xC5C02252;
  LODWORD(STACK[0x360]) = LODWORD(STACK[0xAC4]) ^ 0xC5C02252;
  LODWORD(STACK[0x3B0]) = v0 ^ 0xC5C02252;
  JUMPOUT(0x100127ED8);
}

uint64_t sub_100128410@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X4>, uint64_t a5@<X5>, int a6@<W8>)
{
  BOOL v10 = (unsigned __int8 *)(a5 + a4 + v8);
  int v11 = ((*v10 ^ 0x60) << (a6 + 101)) | ((v10[1] ^ 0x60) << 16) | ((v10[2] ^ 0x60) << 8);
  *(_DWORD *)(v6 + ((a4 + v8) & 0xFFFFFFFFFFFFFFFCLL)) = (v11 | v10[3] ^ 0x60)
                                                       + v9
                                                       - 2
                                                       * ((v11 | v10[3] ^ 0x60) & 0x5EC54B1F ^ (v10[3] ^ 0x60) & 0x14);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, void))(v7
                                                                      + 8
                                                                      * ((5039 * ((unint64_t)(a4 + 4 + v8) < 0x40)) ^ a6)))(a1, a2, a3, (a6 - 756));
}

uint64_t sub_1001284A8@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v1 + 8 * a1))();
}

uint64_t sub_10012855C(uint64_t a1, uint64_t a2, int a3, uint64_t a4, unsigned int a5)
{
  return (*(uint64_t (**)(uint64_t, void))(v5
                                                    + 8
                                                    * (int)((1062 * ((int)(v6 - 1 + (((a3 ^ a5) - 193) | 0x65)) >= 0)) | a3 ^ a5)))(a1, (a3 ^ a5) - 885);
}

uint64_t sub_1001285A0@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (int)((a1 + 238441212) & 0xF1C9AE3F ^ (110
                                                                     * (v1 > ((a1 + 238441212) & 0xF1C9AE3F ^ 0xA3F))))))();
}

uint64_t sub_1001286AC()
{
  uint64_t v2 = (*(uint64_t (**)(uint64_t))(v1 + 8 * (v0 + 2111)))(32);
  unint64_t v3 = STACK[0x258];
  STACK[0x468] = v2;
  return (*(uint64_t (**)(void))(v3 + 8 * (((1253 * (((v0 - 2557) | 0x492) ^ 0x490) - 1553) * (v2 == 0)) ^ v0)))();
}

uint64_t sub_100128704(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,int a30,int a31)
{
  LODWORD(STACK[0x878]) = a31;
  STACK[0x480] = v31;
  STACK[0x7C0] = *(void *)(v33 + 8 * (v32 - 2348));
  return sub_10018E158(&STACK[0x480]);
}

uint64_t sub_100128710(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, int a14)
{
  int v16 = (v14 - 1993103092) & 0x76CC56F0;
  BOOL v17 = (*(uint64_t (**)(void))(v15 + 8 * (v16 ^ 0x16CCu)))(a14 ^ 0xDEC54B0B) == 0;
  return (*(uint64_t (**)(void))(v15
                              + 8
                              * ((v17 * (((v16 - 202811281) ^ 0xC16A7A6) + ((v16 - 202811281) & 0xC16A7AA))) | v16)))();
}

uint64_t sub_10012879C(int a1, int a2, unsigned int a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  int v11 = v8 + v7;
  unsigned int v12 = v11 + 1708765301 + ((v9 - 189797939) & 0x2F7E6CFF);
  if (v12 <= 0x40) {
    unsigned int v12 = a3;
  }
  return (*(uint64_t (**)(void))(v10 + 8 * (((a7 - v11 < a1 + a7 + a2 + v12) * (v9 ^ 0x120A)) ^ v9)))();
}

uint64_t sub_100128804@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,int a43)
{
  unint64_t v47 = v44 + 10;
  int v48 = LOWORD(STACK[0x94A]);
  if (v48 == 11735) {
    goto LABEL_4;
  }
  if (v48 == 60027)
  {
    unint64_t v50 = STACK[0x820];
    STACK[0x5C8] = v47;
    STACK[0x3C8] = v50 + v43 - 0x2A7465AB426C886ELL;
    return (*(uint64_t (**)(void))(v46 + 8 * ((((a43 + 1512) ^ 0x200) * (a1 == -509920199)) ^ (a43 - 552))))();
  }
  int v49 = a43;
  if (v48 == 15909)
  {
LABEL_4:
    STACK[0x5C8] = v47;
    int v45 = 847160697;
    int v49 = a43;
  }
  LODWORD(STACK[0x7FC]) = v45;
  STACK[0x760] = STACK[0x720];
  STACK[0x7C0] = *(void *)(v46 + 8 * (v49 ^ 0x952));
  return sub_10018E158(&STACK[0x760]);
}

uint64_t sub_100128A9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,int a30,int a31)
{
  STACK[0x7F0] = (v31 ^ 0xFFFFFFFFFFFFFEC5) + v32;
  return (*(uint64_t (**)(void))(v34 + 8 * (int)(((a31 != v33) * (v31 - 323)) | v31)))();
}

uint64_t sub_100128ADC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13, uint64_t a14, unsigned int a15)
{
  return sub_100188AAC(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15);
}

uint64_t sub_100128B30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int *a7)
{
  int v12 = (v7 - 518) | 0x298;
  void *v14 = a1;
  *a7 = (v9 + v7 + 2375 - 3949) ^ v16;
  uint64_t v19 = v17;
  unsigned int v20 = v12
      + (((&v18 ^ 0xAA6908D4 | 0x148F0CA7) - ((&v18 ^ 0xAA6908D4) & 0x148F0CA7)) ^ 0xA8485237)
      * v11
      + 2800;
  (*(void (**)(uint64_t *))(v10 + 8 * (v12 + 2968)))(&v18);
  uint64_t v19 = v15;
  unsigned int v20 = v12 - v8 - 1348446028 + (&v18 ^ 0x16AE5644) * v11 - 177;
  (*(void (**)(uint64_t *))(v10 + 8 * (v12 - v8 - 1348446037)))(&v18);
  return 0;
}

uint64_t sub_100128C58(int a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v4 + 8 * ((954 * ((a4 + 1 + v5) > 0x3F)) ^ a1)))();
}

uint64_t sub_100128D38()
{
  STACK[0x798] = *(void *)(v1 + 8 * v0);
  return sub_10013B2F8();
}

uint64_t sub_100128D54(uint64_t result)
{
  *(_DWORD *)(result + 16) = 788884880;
  return result;
}

uint64_t sub_100128D60()
{
  return (*(uint64_t (**)(void))(v1 + 8 * (((519 * (((v2 + 233) | 0xC1) ^ 0x4CB) - 1030) * (v0 == 0)) ^ (v2 + 3845))))();
}

uint64_t sub_100128DA8@<X0>(int a1@<W8>)
{
  int v5 = (a1 - 821132176) & 0x30F17DED;
  int *v1 = (v2 + v5 - 3369) ^ v7;
  uint64_t v11 = v9;
  unsigned int v12 = v5 + ((2 * (&v10 & 0x505DF068) - &v10 - 1348333674) ^ 0xB90C59D2) * v4 + 1151;
  (*(void (**)(uint64_t *))(v3 + 8 * (v5 + 1319)))(&v10);
  unsigned int v12 = v5
      - 568
      + ((&v10 - 1054672924 - 2 * ((unint64_t)&v10 & 0xC122F7E4)) ^ 0xD78CA1A0) * v4
      + 1719;
  uint64_t v11 = v8;
  (*(void (**)(uint64_t *))(v3 + 8 * (v5 + 1319)))(&v10);
  return 0;
}

uint64_t sub_100128ED4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, int a11)
{
  return (*(uint64_t (**)(void))(v12
                              + 8
                              * (((2 * ((((v11 - 2855) ^ (a11 == (v11 ^ 0xEB3) - 660)) & 1) == 0)) & 0xBF | ((((v11 - 39) ^ ~(a11 == (v11 ^ 0xEB3) - 660)) & 1) << 6)) ^ v11)))();
}

uint64_t sub_100128F18()
{
  return sub_1001CB994();
}

uint64_t sub_100128F58()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((46 * (v0 == ((v1 + 1843) ^ 0x1D3A02F ^ (759 * (v1 ^ 0x789))))) ^ v1)))();
}

uint64_t sub_100128FA4(uint64_t a1)
{
  int v4 = v1 - 218;
  *int v7 = a1;
  int v5 = (v1 - 218) ^ 0x4A2;
  unsigned int v12 = v4
      + 366490169
      * (((&v10 | 0xC6DDD9E3) - &v10 + (&v10 & 0x39222618)) ^ 0xD0738FA7)
      + 3528;
  uint64_t v11 = v9;
  (*(void (**)(uint64_t *))(v2 + 8 * (v4 + 3696)))(&v10);
  uint64_t v11 = v8;
  unsigned int v12 = v5
      + 366490169 * ((276362688 - (&v10 | 0x1078F5C0) + (&v10 | 0xEF870A3F)) ^ 0xF9295C7B)
      + 2662;
  (*(void (**)(uint64_t *))(v2 + 8 * (v5 + 2830)))(&v10);
  return (v3 - 847203058);
}

uint64_t sub_1001290C0()
{
  uint64_t v6 = *(void *)(v9 + 40);
  int v7 = 142545853 * ((1996363302 - ((v5 - 144) | 0x76FE1626) + ((v5 - 144) | 0x8901E9D9)) ^ 0xA3FE46B6);
  *(void *)(v5 - 144) = v10;
  *(_DWORD *)(v5 - 136) = v7 ^ 0x7B7C7201;
  *(_DWORD *)(v5 - 132) = v7 + v0 + 4033;
  (*(void (**)(uint64_t))(v4 + 8 * (v0 ^ 0x102D)))(v5 - 144);
  *(_DWORD *)(v5 - 136) = (v0 + 3486) ^ (366490169
                                       * ((((2 * (v5 - 144)) | 0x96658BC6) - (v5 - 144) - 1261618659) ^ 0x5D9C93A7));
  *(void *)(v5 - 112) = v1;
  *(void *)(v5 - 104) = v3;
  *(void *)(v5 - 128) = v2;
  *(void *)(v5 - 120) = v2;
  *(void *)(v5 - 144) = v10;
  (*(void (**)(uint64_t))(v4 + 8 * (v0 + 4105)))(v5 - 144);
  *(_DWORD *)(v5 - 128) = v0
                        + 476588053 * (((~(v5 - 144) & 0xDEB8B7CC) - (~(v5 - 144) | 0xDEB8B7CD)) ^ 0x6345B38E)
                        + 506;
  *(void *)(v5 - 144) = v6;
  *(void *)(v5 - 136) = v2;
  return (*(uint64_t (**)(uint64_t))(v4 + 8 * (v0 ^ 0x103B)))(v5 - 144);
}

void sub_100129238(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  LODWORD(STACK[0x4FC]) = v7;
  LODWORD(STACK[0x500]) = a7;
  JUMPOUT(0x1001191F8);
}

uint64_t sub_10012926C(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v13 = v7 + 1204812672 + v6 - v8 + ((146 * (a3 ^ 0xC11)) ^ v9);
  int8x8_t v14 = vrev64_s8(*(int8x8_t *)(v4 - 7 + v13));
  *(int8x8_t *)(v3 - 7 + v13) = vrev64_s8(vadd_s8(vsub_s8(v14, vand_s8(vadd_s8(v14, v14), v11)), v12));
  return (*(uint64_t (**)(void))(v10 + 8 * ((44 * (v8 - (v5 & 0xFFFFFFF8) == -8)) ^ a3)))();
}

uint64_t sub_1001292F0@<X0>(int a1@<W7>, int a2@<W8>)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((((v4 - 214) ^ 0x28112CED ^ (v4 - 214 - a1 + 34))
                                * ((a2 ^ 0x8142F660) == v2 - 551016248)) ^ (v4 - 214))))();
}

uint64_t sub_10012934C@<X0>(unsigned int a1@<W0>, int a2@<W1>, uint64_t a3@<X8>)
{
  BOOL v11 = v9 > 0xC65FCA09;
  *(unsigned char *)(a3 + (a2 - 1834628707)) = *(unsigned char *)(v4 + ((a2 - 1834628707) & 0xFLL)) ^ *(unsigned char *)(v3 + (a2 - 1834628707)) ^ *(unsigned char *)(v6 + ((a2 - 1834628707) & 0xFLL)) ^ *(unsigned char *)(((a2 - 1834628707) & 0xFLL) + v5 + 1) ^ (23 * ((a2 - 99) & 0xF));
  if (v11 == a2 - 867827820 < (v8 ^ 0x96B ^ (v7 + 1707))) {
    BOOL v11 = a2 - 867827820 < a1;
  }
  return (*(uint64_t (**)(void))(v10 + 8 * ((124 * v11) ^ v8)))();
}

uint64_t sub_1001293F0@<X0>(int a1@<W2>, int a2@<W8>)
{
  LODWORD(STACK[0x4A4]) = v3;
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((LODWORD(STACK[0x4A4]) != a1) * ((((a2 ^ 0x2A4) - 2741) | 8) ^ 0x110)) ^ a2 ^ 0x2A4)))();
}

uint64_t sub_100129434(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, _DWORD *a9, uint64_t a10, void *a11)
{
  *a11 = a1;
  *a9 = v11;
  return sub_1001B603C();
}

uint64_t sub_10012943C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  *(_DWORD *)(v16 - 120) = v15
                         + 476588053 * ((2 * ((v16 - 136) & 0x7862F2E0) - (v16 - 136) + 127733017) ^ 0xBA60095A)
                         - 1730;
  *(void *)(v16 - 136) = v14;
  *(void *)(v16 - 128) = a12;
  (*(void (**)(uint64_t))(v13 + 8 * (v15 ^ 0x197F)))(v16 - 136);
  int v17 = 31090337 * ((((v16 - 136) | 0x8292371E) - (v16 - 136) + ((v16 - 136) & 0x7D6DC8E0)) ^ 0x45135757);
  *(_DWORD *)(v16 - 136) = v17 + 1875376251;
  *(_DWORD *)(v16 - 120) = (v15 - 1817) ^ v17;
  *(void *)(v16 - 128) = v12;
  (*(void (**)(uint64_t))(v13 + 8 * (v15 + 1847)))(v16 - 136);
  *(void *)(v16 - 136) = v12;
  *(_DWORD *)(v16 - 124) = (v15 - 1749) ^ (366490169
                                         * ((((v16 - 136) ^ 0x683E1D39 | 0xC6F4C7F7)
                                           - ((v16 - 136) ^ 0x683E1D39)
                                           + (((v16 - 136) ^ 0x683E1D39) & 0x390B3808)) ^ 0xB8648C8A));
  *(void *)(v16 - 120) = a12;
  uint64_t v18 = (*(uint64_t (**)(uint64_t))(v13 + 8 * (v15 ^ 0x1954)))(v16 - 136);
  return (*(uint64_t (**)(uint64_t))(v13
                                            + 8
                                            * (((*(_DWORD *)(v16 - 128) > 0x2FB2CDA1u) * ((v15 ^ 0x1B9F) - 4213)) | (v15 - 1873))))(v18);
}

uint64_t sub_1001295DC(int a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v5 + 8
                                   * ((((v3 ^ (*v4 == a2)) & 1) * (((v3 - 3735) | a1) ^ a3)) ^ v3)))();
}

uint64_t sub_100129610()
{
  return (*(uint64_t (**)(void))(v2 + 8 * (v0 ^ (4 * (v1 != 0xE535B4FA)))))();
}

uint64_t sub_10012966C()
{
  unint64_t v3 = STACK[0x838];
  int v4 = STACK[0x864];
  int v5 = 1761959447 * (((((v1 - 224) | 0xBF9F8AC2) ^ 0xFFFFFFFE) - (~(v1 - 224) | 0x4060753D)) ^ 0xE1C7B4F9);
  *(_DWORD *)(v1 - 204) = v5 + v0 + 3537;
  *(_DWORD *)(v1 - 224) = (v4 ^ 0xC86423FC)
                        - v5
                        + ((((2 * v0) ^ 0x2A8) + 1409171332) & (2 * v4) ^ 0x43363802)
                        - 12587264;
  *(void *)(v1 - 216) = v3;
  uint64_t v6 = (*(uint64_t (**)(uint64_t))(v2 + 8 * (v0 + 4433)))(v1 - 224);
  return (*(uint64_t (**)(uint64_t))(STACK[0x258]
                                            + 8
                                            * ((4408 * (*(_DWORD *)(v1 - 208) == ((v0 + 970) | 0xA8E) + 847199059)) ^ v0)))(v6);
}

uint64_t sub_10012975C()
{
  STACK[0x418] = STACK[0x270];
  return ((uint64_t (*)(void))STACK[0x2B8])();
}

uint64_t sub_100129774(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  *(void *)(a1 - 7 + (v7 + v5 - v8)) = *(void *)(v4 - 7 + (v7 + v5 - v8));
  return (*(uint64_t (**)(void))(v9 + 8 * ((1596 * (((a4 + 729) ^ 0x3D8) + v8 == (v6 & 0xFFFFFFF8))) ^ a4)))();
}

uint64_t sub_1001297C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unint64_t *a13, int a14, uint64_t a15, unsigned int a16, int a17, int a18)
{
  unsigned int v21 = 1314530549 * ((&a13 & 0xB7E6BE20 | ~(&a13 | 0xB7E6BE20)) ^ 0xF910C711);
  a13 = &STACK[0x70766EB78D2F3F18];
  a14 = (v20 + 1780979327) ^ v21;
  a18 = v21 ^ 0x4EA001FB;
  a16 = 826420451 - v21;
  a15 = a11;
  uint64_t v22 = (*(uint64_t (**)(unint64_t **))(v18 + 8 * (v20 + 2940)))(&a13);
  return (*(uint64_t (**)(uint64_t))(v18
                                            + 8
                                            * ((60
                                              * (((v20 - 53) ^ (a17 == ((v20 + 1166226727) & 0xBA7CCC4F ^ (v19 - 2101)))) & 1)) ^ v20)))(v22);
}

uint64_t sub_1001298C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, int a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,int a41,int a42,int a43,int a44)
{
  return (*(uint64_t (**)(void))(v44
                              + 8
                              * (a44 ^ (95
                                      * (((2 * (a12 - ((2 * a42) & 0x4C89F4F0) - 1486416169)) & 0xE9FF7FEE ^ 0x488974E0)
                                       + ((a12 - ((2 * a42) & 0x4C89F4F0) - 1486416169) ^ 0x52BB458F)
                                       - 1409493286 != 553424593)))))();
}

uint64_t sub_1001299A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, void))(v10
                                                                      + 8
                                                                      * ((230
                                                                        * (((v7 + ((a7 - 268435850) & 0xBA8DD4B6) + 327) & v8) == (a7 ^ 0xB78) - 2571)) ^ a7)))(a1, a2, a3, (v9 - a3));
}

uint64_t sub_1001299F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  LOBYTE(STACK[0xCB6]) = 19;
  return (*(uint64_t (**)(uint64_t, void, uint64_t))(STACK[0x6F8] + 8 * a8))(a1, 106 * (a8 ^ 0x278u), 2587075413);
}

void sub_100129A94(_DWORD *a1)
{
  unsigned int v1 = *a1 - 1314530549 * ((((2 * a1) | 0xFD93C9D4) - a1 - 2127160554) ^ 0xCFC06224);
  __asm { BRAA            X15, X17 }
}

uint64_t sub_100129BE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,int a50)
{
  *(_DWORD *)STACK[0x8D0] = STACK[0x47C];
  return sub_10013E104(a50, a2);
}

uint64_t sub_100129C08@<X0>(void *a1@<X8>)
{
  *uint64_t v2 = v1;
  *(void *)(v1 + 8) = *a1;
  *a1 = v1;
  return sub_1001A7FF8();
}

uint64_t sub_100129C20(unsigned int a1, int a2, int a3)
{
  unsigned int v12 = (((v6 + 1446) ^ 0xFFFFEE21 ^ (a3 ^ v4 | a3 ^ 0xFA2B8021) | (((97 - v11) & 0x41) + (a3 & 0x41 ^ 1)) | 0x142)
       + (*(unsigned __int8 *)(v7 + (a3 ^ (v4 + 250)) * v8 - (a3 ^ (v4 + 250)) * v8 / 0x3A0 * v9) ^ 0x7D))
      * v5;
  *(unsigned char *)(v3
           + v11 * v5
           + 144544809
           - (((((v11 * v5 + 144544809) * (unint64_t)a1) >> 32)
                           + ((v11 * v5
                                           + 144544809
                                           - (((v11 * v5 + 144544809) * (unint64_t)a1) >> 32)) >> 1)) >> 9)
           * a2) = *(unsigned char *)(v3
                            + v12
                            - ((((v12 * (unint64_t)a1) >> 32)
                                            + ((v12 - ((v12 * (unint64_t)a1) >> 32)) >> 1)) >> 9)
                            * a2);
  return (*(uint64_t (**)(void))(v10 + 8 * ((112 * (v11 != -687928079)) ^ v6)))();
}

uint64_t sub_100129D40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, int a16, int a17)
{
  unsigned int v20 = ((((v17 - 3478) | 0x1210) + v18) ^ a17)
      - (((v17 - 1554) ^ 0xCCFC53BF) & (2 * ((((v17 - 3478) | 0x1210) + v18) ^ a17)))
      - 427939319;
  return (*(uint64_t (**)(void))(v19
                              + 8
                              * ((87
                                * (((2 * v20) & 0xF3FFD7EC ^ 0xC0FC5400) + (v20 ^ 0x1F81C1FF) + 1073569472 != 972901046)) ^ (v17 + 376))))();
}

uint64_t sub_100129E08(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  *(unsigned char *)(a6 + v6 + v10) = v9;
  return (*(uint64_t (**)(void))(v11
                              + 8
                              * (((v8 & ~((7 * (v7 ^ 0x78) - 3869) ^ ((unint64_t)(v6 + 1 + v10) < 0x40))) * a1) ^ (7 * (v7 ^ 0x78)))))();
}

uint64_t sub_100129E4C@<X0>(int a1@<W8>)
{
  unsigned int v5 = 1437274309 * (((&v7 | 0xDC684BB5) - (&v7 & 0xDC684BB5)) ^ 0xFE663680);
  uint64_t v8 = v3;
  int v7 = v5 + a1 + 1144;
  unsigned int v9 = v2 + v5 - ((((a1 - 1126476791) & 0x4324ADDB ^ 0x20700B0D) + v4) & 0xB7E0A520) - 332899818;
  return (*(uint64_t (**)(int *))(v1 + 8 * (a1 ^ 0x1070)))(&v7);
}

uint64_t sub_100129EFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unint64_t *a13, int a14, uint64_t a15, unsigned int a16, int a17, int a18)
{
  unsigned int v20 = 1314530549 * ((&a13 & 0xB8C14392 | ~(&a13 | 0xB8C14392)) ^ 0xF6373AA3);
  a15 = a9;
  a13 = &STACK[0x70766EB78D2F3F10];
  a18 = v20 ^ 0x4EA001FB;
  a16 = 1460866893 - v20;
  a14 = (v19 + 1780979946) ^ v20;
  uint64_t v21 = (*(uint64_t (**)(unint64_t **))(v18 + 8 * (v19 + 3559)))(&a13);
  return (*(uint64_t (**)(uint64_t))(v18
                                            + 8 * ((672 * (a17 == ((v19 - 2128204618) ^ (v19 - 1285982364)))) ^ v19)))(v21);
}

uint64_t sub_100129FF4@<X0>(uint64_t a1@<X6>, int a2@<W8>)
{
  *(unsigned char *)(v5 + (((v2 + 2203) | 0x200u) ^ (unint64_t)(v3 + 3362)) + v4) = HIBYTE(a2) ^ 0x2F;
  return (*(uint64_t (**)(void))(a1 + 8 * (v2 ^ (102 * (v4 == 28)))))();
}

uint64_t sub_10012A038()
{
  STACK[0x430] = *(void *)(v1 + 8 * v0);
  return sub_1001B7944();
}

void sub_10012A050(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 12) ^ (1314530549 * (((a1 | 0xBE23F257) - a1 + (a1 & 0x41DC0DA8)) ^ 0xF2A7499));
  uint64_t v4 = *(void *)a1;
  unsigned int v3 = v1 + 1697562443 * (&v3 ^ 0xD7903884) - 1360;
  int v2 = (char *)*(&off_100520A90 + v1 - 3263) - 8;
  (*(void (**)(unsigned int *))&v2[8 * (v1 ^ 0x1E6E)])(&v3);
  __asm { BRAA            X8, X17 }
}

uint64_t sub_10012A194(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,unsigned int a21,uint64_t a22,int a23,int a24,uint64_t a25,unsigned int a26)
{
  unsigned int v33 = 366490169 * (((&a21 | 0x39002E31) + (~&a21 | 0xC6FFD1CE)) ^ 0x2FAE7874);
  a22 = a14;
  a21 = (v31 ^ 0x77BFD391) + ((2 * v31) & 0xEF7FA722) - 1663176832 + v33;
  a23 = v26 + 2314 + v33;
  (*(void (**)(unsigned int *))(v32 + 8 * (v26 ^ 0x11F5)))(&a21);
  unsigned int v34 = ((2 * (&a21 & 0xA4F57C0) - &a21 - 172971976) ^ 0x3231C871) * v27;
  a22 = v29;
  a25 = a14;
  a26 = (v30 ^ 0x663FF2E9) - v34 + ((v30 << ((v26 ^ 0x98) - 51)) & 0xCC7FE5D2) - 1141575809;
  a23 = v34 + v26 + 3123;
  (*(void (**)(unsigned int *))(v32 + 8 * (v26 ^ 0x11DC)))(&a21);
  unsigned int v35 = 366490169 * ((414880961 - (&a21 | 0x18BA94C1) + (&a21 | 0xE7456B3E)) ^ 0xF1EB3D7A);
  a22 = a14;
  a23 = v26 + 2314 + v35;
  a21 = (v28 ^ 0x7E9FDF1F) + ((2 * v28) & 0xFD3FBE3E) - 1778523150 + v35;
  uint64_t v36 = (*(uint64_t (**)(unsigned int *))(v32 + 8 * (v26 ^ 0x11F5)))(&a21);
  return (*(uint64_t (**)(uint64_t))(v32 + 8 * ((3110 * (a24 == 847203058)) ^ v26)))(v36);
}

uint64_t sub_10012A394@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((((((a1 - 4529) ^ (v1 == 70667843)) & 1) == 0) * (((a1 - 4153) | 0x42) ^ 0x1F3)) ^ a1)))();
}

uint64_t sub_10012A3E4(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  *(void *)(v5 - 7 + (v9 + v7 - v10)) = *(void *)(v6 - 7 + (v9 + v7 - v10));
  return (*(uint64_t (**)(uint64_t, uint64_t, void))(v4
                                                             + 8
                                                             * ((7986 * ((a4 ^ 0xA53) + v10 - 1156 == (v8 & 0xFFFFFFF8))) ^ a4)))(a1, a2, v9 - (v8 & 0xFFFFFFF8));
}

uint64_t sub_10012A434()
{
  *(_DWORD *)(v4 - 216) = 1314530549 * (((~(v4 - 224) & 0x15D31212) - (~(v4 - 224) | 0x15D31213)) ^ 0xA4DA94DD)
                        - 1318647951
                        + v3
                        - 355;
  uint64_t v6 = (*(uint64_t (**)(uint64_t))(v5 + 8 * (v3 ^ 0x1495)))(v4 - 224);
  unint64_t v7 = STACK[0x258];
  uint64_t v8 = *(void *)(v4 - 224);
  uint64_t v9 = v2 + v1 - 1173229740;
  *(unsigned char *)(v9 + (v3 - 1188) + 1301) = v8 ^ 0xD0;
  *(unsigned char *)(v9 + 1675) = BYTE1(v8) ^ 0x32;
  return (*(uint64_t (**)(uint64_t))(v7
                                            + 8
                                            * ((92 * (((v2 == v0 + 14) ^ (3 * (v3 ^ 0x56))) & 1)) ^ v3)))(v6);
}

uint64_t sub_10012A508()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((((74 * (v1 ^ 0x108F) - 1840195038) & 0x6DAF2FDE ^ 0xFE5) * (v0 == 0)) ^ v1)))();
}

uint64_t sub_10012A554(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  *a5 = 0;
  return (*(uint64_t (**)(void))(v7 + 8 * ((v5 - 1175890473) ^ (v6 == 0))))();
}

uint64_t sub_10012A580(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  return sub_1001EEF0C(a1, a2, a3, a8, v8);
}

void sub_10012A5AC()
{
  uint64_t v0 = *(&off_100520A90
       + ((75 * ((qword_1005A6FB0 + dword_1005A6DD0) ^ 0x7E)) ^ byte_10049B320[byte_100495E20[(75 * ((qword_1005A6FB0 + dword_1005A6DD0) ^ 0x7E))] ^ 0x14])
       + 48);
  unsigned __int8 v1 = 75 * ((qword_1005A6FB0 - *v0) ^ 0x7E);
  uint64_t v2 = (uint64_t)*(&off_100520A90
                + (byte_10049B328[(byte_100495E28[v1 - 8] ^ 0x14) - 8] ^ v1)
                + 86);
  uint64_t v3 = *(void *)(v2 - 4) - *v0 - (void)&v5;
  *uint64_t v0 = 544792907 * (v3 + 0x1ED3F820338F2682);
  *(void *)(v2 - 4) = 544792907 * (v3 ^ 0xE12C07DFCC70D97ELL);
  v6[1] = 31090337 * ((2 * (v6 & 0x6D53F600) - v6 - 1834219012) ^ 0x552D69B5) + 1655392376;
  LOBYTE(v2) = 75 * (*(_DWORD *)v0 ^ 0x7E ^ *(_DWORD *)(v2 - 4));
  uint64_t v4 = (char *)*(&off_100520A90
               + ((75 * ((qword_1005A6FB0 - dword_1005A6DD0) ^ 0x7E)) ^ byte_100491800[byte_1004A0860[(75 * ((qword_1005A6FB0 - dword_1005A6DD0) ^ 0x7E))] ^ 0x5D])
               + 6)
     - 8;
  (*(void (**)(_DWORD *))&v4[8
                                      * (byte_100491608[(byte_1004A0764[v2 - 4] ^ 0xEC)
                                                                       - 8] ^ v2)
                                      + 35920])(v6);
  __asm { BRAA            X8, X17 }
}

uint64_t sub_10012A7EC()
{
  STACK[0x8E0] = *(void *)(v1 + 8 * v0);
  return sub_100162654();
}

uint64_t sub_10012A880()
{
  return (*(uint64_t (**)(void))(v5 + 8 * (((v2 & ~((v0 + 1) ^ (v4 == 0))) * (((v0 - 2026) | v1) ^ v3)) ^ v0)))();
}

uint64_t sub_10012A8B4(uint64_t a1, int a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v11 = (v9 + v8 + v7 - 1 - a2);
  *(void *)(a1 - 7 + v11) = *(void *)(v5 - 7 + v11);
  return (*(uint64_t (**)(void))(v10
                              + 8
                              * ((86 * (((a5 - 88) ^ (((a5 - 2131) & v6) - a2 == 8)) & 1)) ^ (a5 - 46))))();
}

void sub_10012A91C(uint64_t a1, int a2, uint64_t a3, int a4, char a5, char a6, char a7, int a8)
{
  unint64_t v21 = ((v14 ^ v11) + 438391921) * (v14 ^ v11) + 757067451;
  unint64_t v22 = v21 % 0xC95119CF - ((2 * (v21 % 0xC95119CF)) & 0x14D27996) + ((a8 + v9) ^ 0x56501257B07FD07BLL);
  unint64_t v23 = (v22 ^ v15) * v16 + (a2 ^ v11) * (unint64_t)(a2 ^ v11) + v17;
  unint64_t v24 = v23 - ((unint64_t)((v23 * (unsigned __int128)v18) >> 64) >> 31) * v19;
  uint64_t v25 = (a4 - 852437829);
  unint64_t v26 = v24 * (v22 ^ v15) - (v20 & (2 * v24 * (v22 ^ v15))) + v13;
  *(unsigned char *)(v10 + v25) = *(unsigned char *)(v8 + v25) ^ (v26 >> 15) ^ v12;
  *(unsigned char *)(v10 + (a4 - 852437828)) = *(unsigned char *)(v8 + (a4 - 852437828)) ^ (v26 >> 23) ^ a6;
  *(unsigned char *)(v10 + (a4 - 852437827)) = *(unsigned char *)(v8 + (a4 - 852437827)) ^ a5 ^ (v26 >> 31);
  *(unsigned char *)(v10 + (v25 | 3)) = *(unsigned char *)(v8 + (v25 | 3)) ^ a7 ^ (v26 >> 39);
  JUMPOUT(0x10011D568);
}

uint64_t sub_10012AA3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15, int a16)
{
  unsigned int v18 = (a16 ^ 0xDEC54B0B) - ((2 * (a16 ^ 0xDEC54B0B)) & 0xCCFC5412) - 427939319;
  return (*(uint64_t (**)(void))(v17
                              + 8
                              * (v16 ^ (32
                                      * (((v18 << ((-109 * (v16 ^ 0x46)) ^ 0x31)) & 0xF3FFD7EC ^ 0xC0FC5400)
                                       + (v18 ^ (((v16 + 1118604953) & 0xBD5374B4) + 528596315))
                                       + 1073569472 == 972901046)))))();
}

uint64_t sub_10012AAF8(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((((v5 & (2 * (*(unsigned __int8 *)(a2 + 3) - 137)))
                                 + ((*(unsigned __int8 *)(a2 + 3) - 137) ^ v4) == v4)
                                * (v3 ^ 0x1083)) ^ v3)))();
}

uint64_t sub_10012AB34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * ((11 * (((v5 ^ (v8 - 525) ^ 0xFFFFFFFFFFFFDE2) & v7) - 1 < 2)) ^ (a5 + v5 + 1983))))();
}

void sub_10012AB78(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 4) - 1314530549 * ((-1114348438 - (a1 | 0xBD94646A) + (a1 | 0x426B9B95)) ^ 0xF3621D5B);
  __asm { BRAA            X8, X17 }
}

uint64_t sub_10012AC64@<X0>(int a1@<W8>)
{
  LODWORD(STACK[0x87C]) = 1262577557;
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((63 * ((((a1 ^ 0x841) - 2108626318) & 0x7DAF15D7 ^ 0x4B416640) != 1262577557)) ^ a1 ^ 0x841)))();
}

uint64_t sub_10012ACC0()
{
  return sub_1001E7F0C();
}

uint64_t sub_10012ACE4(int a1, int8x16_t a2, double a3, double a4, int8x16_t a5, uint64_t a6, uint64_t a7, int8x16_t *a8, uint64_t a9, uint64_t a10, int a11, int a12)
{
  *a8 = vaddq_s8(vsubq_s8(*(int8x16_t *)(v15 + (v13 + a1)), vandq_s8(vaddq_s8(*(int8x16_t *)(v15 + (v13 + a1)), *(int8x16_t *)(v15 + (v13 + a1))), a5)), a2);
  return (*(uint64_t (**)(void))(v14 + 8 * (a11 ^ (a12 + v12 + 2969))))();
}

uint64_t sub_10012AD38()
{
  unint64_t v2 = (v1 - 1065330539);
  STACK[0xAF0] = v2;
  unint64_t v3 = STACK[0x800];
  STACK[0xAF8] = STACK[0x800];
  return (*(uint64_t (**)(void))(STACK[0x258]
                              + 8
                              * ((642 * (v2 + 0x7936EE11BB6A7745 - v3 > (unint64_t)((v0 + 168) ^ 0x988) - 57)) ^ v0)))();
}

uint64_t sub_10012ADA8(int a1, uint64_t a2, int a3, int a4, unsigned int a5, int a6, uint64_t a7, int a8)
{
  int v22 = v12 - 1082147840;
  unsigned int v23 = ((a1 + v10 + 7343869) ^ 0xA1778E79) - ((2 * ((a1 + v10 + 7343869) ^ 0xA1778E79)) & 0xA44F108A) - 769161147;
  int v24 = ((v11 + 408475625) ^ 0x2BE6CFFF) - 543166068 + ((2 * (v11 + 408475625)) & 0x57CD9FFE);
  unsigned int v25 = v8 + 1;
  unsigned int v26 = v25 + *(unsigned __int8 *)(STACK[0x710] + v25);
  int v27 = v24 - ((v10 + 2 * v24 + 943769484) & 0x2701DB44) + 1872843822;
  int v28 = -1443551489 * v26 - (((((v10 - 1274) | 0xD64) ^ 0x5FBC0DC) + v26 * v15) & 0x14558F5C) - 1926713789;
  unsigned int v29 = v18
      + v21
      + v22
      + (v27 ^ 0x19AA2A0C ^ v28)
      + 2 * ((v28 ^ 0xA2AC7AE) & (v27 ^ 0x1380EDA2))
      + (v27 ^ 0x19AA2A0C ^ v28)
      + 2 * ((v28 ^ 0xA2AC7AE) & (v27 ^ 0x1380EDA2))
      - 257
      * (((((v27 ^ 0x19AA2A0C ^ v28) + 2 * ((v28 ^ 0xA2AC7AE) & (v27 ^ 0x1380EDA2u)))
                       * (unint64_t)a5) >> 32) >> 8)
      + 1460;
  int v30 = v29 - ((2 * v29) & 0x1ACB356) + 14047659;
  unsigned int v31 = ((a3 - 1842) & (2 * (v30 ^ v23)) ^ 0x95902846) + (v30 ^ v23 ^ 0xB037E8DC);
  unsigned int v32 = v31 - ((a4 + 2 * v31 + 830) & 0xF2B5F1EE) + 2033908244;
  unsigned int v33 = v22 - v31 - ((2 * (v22 - v31) - 1213423402) & 0xCB795A06) + 1100152174;
  int v34 = v31 + v21 - ((2 * (v31 + v21) + 820547734) & v17) + 1307711568;
  HIDWORD(v35) = a8 + v31 + 3158;
  LODWORD(v35) = (v13 & (2 * v32) ^ a6) + (v32 ^ 0x7C7AFA8B);
  int v36 = (v33 ^ 0x9A4352FC) + (v35 >> 28) + 1;
  unsigned int v37 = (v30 ^ 0xC667ED78) + ((v36 + v19 - (v17 & (2 * v36))) ^ v34) + 1;
  unsigned int v38 = (v37 ^ 0xCE89E1A6) + (v34 ^ v19) - ((2 * ((v37 ^ 0xCE89E1A6) + (v34 ^ v19))) & 0x1266FA6A) + 154369333;
  unsigned int v39 = (v37 ^ 0xCE89E1A6) + (v30 ^ 0x39981287) + v14 - (v16 & (2 * ((v37 ^ 0xCE89E1A6) + (v30 ^ 0x39981287))));
  HIDWORD(v35) = v37 ^ 0xE89E1A6;
  LODWORD(v35) = v37 ^ 0xC0000000;
  unsigned int v40 = v33 ^ 0xAB354CA5 ^ v37;
  int v41 = v40 + (v35 >> 29) + (v38 ^ 0xF6CC82CA) + 1;
  int v42 = (v41 + v14 - (v16 & (2 * v41))) ^ v39;
  unsigned int v43 = v42 - ((2 * v42 + 2040722882) & 0x81578016) + 2105359084;
  HIDWORD(v35) = v43 ^ 0xABC00B;
  LODWORD(v35) = v43 ^ 0x40000000;
  int v44 = (v35 >> 29)
      + (((v43 ^ 0x40ABC00B) + v40 - ((2 * ((v43 ^ 0x40ABC00B) + v40)) & 0xF4A04698) + 2052072268) ^ 0x85AFDCB3)
      + 1;
  int v45 = v43 ^ v39;
  unsigned int v46 = (v45 ^ 0xAD7A1220) + ((v44 - ((2 * v44) & 0x93317A7C) + 1234746686) ^ v43 ^ v38) + 1;
  unsigned int v47 = v20 + v25 + 1;
  int v48 = (v9 < v20) ^ (v47 < v20);
  BOOL v49 = v47 < v9;
  if (v48) {
    BOOL v50 = v9 < v20;
  }
  else {
    BOOL v50 = v49;
  }
  return (*(uint64_t (**)(void))(a7 + 8 * ((231 * !v50) ^ (v10 + 1000))))(((2 * ((v46 ^ 0x6D21757E) + (v45 ^ 0x5285EDDF))) & 0xFF1FD6EE)+ (((v46 ^ 0x6D21757E) + (v45 ^ 0x5285EDDF)) ^ 0xFF8FEB77));
}

uint64_t sub_10012AE2C()
{
  return ((uint64_t (*)(void))STACK[0x430])();
}

uint64_t sub_10012AE40@<X0>(int a1@<W8>)
{
  unint64_t v2 = STACK[0x658];
  STACK[0x830] = *(void *)(v1 + 8 * a1);
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (((v2 != 0x46197683F7D18950)
                                * ((287 * (a1 ^ 0xE4)) ^ 0x50F ^ (287 * (a1 ^ 0xE4) - 1253))) ^ (287 * (a1 ^ 0xE4)))))();
}

uint64_t sub_10012AE74(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, void))(v6
                                                             + 8
                                                             * (((v5 < ((1828 * (a4 ^ (v4 + 2611)) + 1611592834) ^ (v4 + 2645)))
                                                               * (1828 * (a4 ^ (v4 + 2611)) - 3445)) ^ (1828 * (a4 ^ (v4 + 2611))))))(a1, a2, 0);
}

uint64_t sub_10012AEC4()
{
  int v2 = (v0 - 988660954) & 0x3AEDD3FB;
  uint64_t v3 = (*(uint64_t (**)(uint64_t))(v1 + 8 * (v2 ^ 0x29E)))(1576);
  STACK[0x2E8] = v3;
  return (*(uint64_t (**)(void))(v1 + 8 * (((v3 == 0) * ((v2 - 484) ^ 0xEB1)) ^ v2)))();
}

uint64_t sub_10012AF1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,int a27,char a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32)
{
  HIDWORD(v38) = v34 + 4248;
  LODWORD(v38) = v34 + 4292;
  return (*(uint64_t (**)(uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t *, unint64_t, uint64_t, uint64_t, unint64_t, uint64_t))(v35 + 8 * (int)(((v34 ^ 0x504) + 2125580503) & 0x814E33FC)))(a1, v32 - 0x682CC6D4ECD1402ALL, (unsigned __int16)(v33 - 8702), 414, 329, 1254, 6, 80, a9, a10, v38, &a32, (unint64_t)&a28 % (((v34 ^ 0x504) + 2125580503) & 0x814E33FC ^ 0x151uLL) + 16, a14, (v36 - 152) | 0x3249A29D493317FBLL, 673918253* ((((v36 - 152) | 0x4D76C98BF5069B27) - (v36 - 152) + ((v36 - 152) & 0xB28936740AF964D8)) ^ 0x31FE54E6F4E808FLL), v32 - 0x682CC6D4ECD1402ALL);
}

uint64_t sub_10012B15C()
{
  BOOL v4 = v1 + v0 + ((v2 - 910170240) & 0x36401F1Bu) + 202273665 < ((v2 + 564) | 0x41u) - 2257;
  return (*(uint64_t (**)(void))(v3 + 8 * ((2 * v4) | (8 * v4) | (v2 + 253))))();
}

uint64_t sub_10012B1C4@<X0>(int a1@<W3>, int a2@<W6>, int a3@<W8>)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((42 * ((((a1 + a2 + 35) ^ (a3 == v4)) + 2 * (a3 == v4)) != 107)) ^ (a1 + a2))))();
}

uint64_t sub_10012B204(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v5
                                                                                + 8
                                                                                * ((54
                                                                                  * (v4 == (((((v6 + 1554) | 9) ^ 0xA4A)
                                                                                           + 1620) ^ 0x57ECEB17 ^ ((((v6 + 1554) | 9) ^ 0xA4A) << 6)))) ^ ((v6 + 1554) | 9))))(a1, a2, a3, a4, 1907721286);
}

uint64_t sub_10012B258(double a1)
{
  *(double *)(v2 + v5) = a1;
  return (*(uint64_t (**)(void))(v6 + 8 * (((v3 != v5) * v4) ^ v1)))();
}

uint64_t sub_10012B27C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v6 + 8 * ((((1058 * (v5 ^ 0x3F7)) ^ 0x84C) * (a5 == 1500630190)) | v5)))();
}

uint64_t sub_10012B2E0(int a1, uint64_t a2, uint64_t a3, int a4)
{
  *(void *)(v4 - 7 + (v7 + v6 + v8 - a1)) = *(void *)(a2 - 7 + (v7 + v6 + v8 - a1));
  return (*(uint64_t (**)(void))(v9 + 8 * (((a1 - (v5 & 0xFFFFFFF8) == -8) * ((a4 + 199) ^ 0xC3F)) | a4)))(a1 - (v5 & 0xFFFFFFF8) + 16);
}

uint64_t sub_10012B338(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t))(v71 + 8 * ((((v72 ^ 0x656C24BC) != 1701588297) * a1) ^ (v72 + 249))))(a71, a70, a50, 2593379014, STACK[0x2C0], a6, a7, 115);
}

uint64_t sub_10012B3B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, int a20,int a21,int a22)
{
  uint64_t v28 = **(unsigned int **)(v25 + 8 * (v24 ^ (v24 + 20)));
  uint64_t v29 = ((v27 + 0x7AC4EBB31E747018 - 2 * ((v27 - 144) & 0x7AC4EBB31E7470A8)) ^ 0x34ADC776843C6B00) * v26;
  *(_DWORD *)(v27 - 144) = a22 - v29 - 302;
  *(_DWORD *)(v27 - 140) = -(int)v29;
  *(void *)(v27 - 136) = -v29;
  *(void *)(v27 - 128) = v28 ^ v29;
  *(_DWORD *)(v27 - 120) = a22 + v29;
  *(_DWORD *)(v27 - 112) = a20 ^ v29;
  *(_DWORD *)(v27 - 108) = v29 + v24 + 1661715029;
  uint64_t v30 = (*(uint64_t (**)(uint64_t))(v23 + 8 * (v24 ^ (v22 - 224))))(v27 - 144);
  return (*(uint64_t (**)(uint64_t))(v23 + 8 * *(int *)(v27 - 116)))(v30);
}

uint64_t sub_10012B3C8@<X0>(__int16 a1@<W8>)
{
  LOWORD(STACK[0x926]) = a1;
  return sub_1001B8258();
}

uint64_t sub_10012B3DC(__n128 a1, __n128 a2, __n128 a3, __n128 a4, __n128 a5)
{
  return sub_10012B3E4(a1, a2, a3, a4, a5);
}

uint64_t sub_10012B3E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int8x16_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37)
{
  int v48 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v42 + 8 * v37);
  unsigned int v50 = *(_DWORD *)(v46 - 180);
  uint64_t v49 = *(unsigned int *)(v46 - 176);
  int v51 = *(_DWORD *)(v46 - 176);
  unsigned int v53 = *(_DWORD *)(v46 - 172);
  unsigned int v52 = *(_DWORD *)(v46 - 168);
  LODWORD(a22) = *(unsigned __int8 *)(v46 - 156) ^ 0x22;
  int v54 = *(unsigned char *)(v46 - 156) ^ 0x22;
  if (v54 == 2)
  {
    unint64_t v76 = __PAIR64__(v52, v53);
    uint64_t v77 = *(void *)(v42 + 8 * v37);
    int8x16x4_t v79 = vld4q_s8(v38);
    LODWORD(a21) = *(_DWORD *)(v46 - 164);
    uint8x16_t v64 = (uint8x16_t)veorq_s8(v79.val[1], a6);
    _Q22 = vmovl_u8(*(uint8x8_t *)v64.i8);
    _Q21 = vmovl_high_u8(v64);
    __asm
    {
      SHLL2           V23.4S, V21.8H, #0x10
      SHLL2           V24.4S, V22.8H, #0x10
    }
    unsigned int v69 = (_DWORD *)(v43 + 4 * (v40 + 342002069));
    int v70 = *(v69 - 8) ^ *(v69 - 3);
    int v71 = v70 + v44 - ((v70 << a28) & v47);
    int v72 = *(v69 - 16) ^ *(v69 - 14);
    uint64_t v73 = v72 ^ 0x5EC54B0B ^ v71;
    HIDWORD(v74) = v72 ^ 0x5EC54B0B ^ v71;
    LODWORD(v74) = v72 ^ ~v71;
    *unsigned int v69 = (v74 >> 31) + v44 - (v47 & (2 * (v74 >> 31)));
    int v75 = *(uint64_t (**)(uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v42 + 8 * ((2129 * (v39 == 342002006)) ^ 0x4B4u));
    return v75(1204, a2, v75, v73, a5, 44283704, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
             a21,
             a22,
             a23,
             __PAIR64__(v49, v50),
             v76,
             v77,
             a27,
             a28,
             a29,
             a30,
             a31,
             a32,
             a33,
             a34,
             a35,
             a36,
             a37);
  }
  else if (v54 == 1)
  {
    int8x16x4_t v78 = vld4q_s8(v38);
    uint8x16_t v55 = (uint8x16_t)veorq_s8(v78.val[2], a6);
    _Q26 = vmovl_high_u8(v55);
    _Q25 = vmovl_u8(*(uint8x8_t *)v55.i8);
    __asm
    {
      SHLL2           V25.4S, V25.8H, #0x10
      SHLL2           V26.4S, V26.8H, #0x10
    }
    uint64_t v62 = (uint64_t)*(&off_100520A90 + (int)a5 - 1203);
    return (*(uint64_t (**)(void, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, _UNKNOWN **, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, unint64_t, uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t), uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v42 + 8 * (int)(((2 * (a29 + 1 != v39)) | ((a29 + 1 != v39) << 6)) ^ a5)))(*(unsigned int *)(v62 + 4 * (a29 + v40)), a2, v62, *(&off_100520A90 + (int)a27), a5, 3093736771, a8, &off_100520A90, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
             a21,
             a22,
             a23,
             __PAIR64__(v49, v50),
             __PAIR64__(v52, v53),
             v48,
             a27,
             a28,
             a29,
             a30,
             a31,
             a32,
             a33,
             a34,
             a35,
             a36,
             a37);
  }
  else
  {
    *(_DWORD *)(v46 - 180) = 2 * (*(_DWORD *)(v46 - 180) ^ v45) + v45 - (v41 & (4 * (*(_DWORD *)(v46 - 180) ^ v45)));
    *(_DWORD *)(v46 - 176) = (v51 ^ v45) + (v49 ^ v45) + v45 - (v41 & (2 * ((v51 ^ v45) + (v49 ^ v45))));
    *(_DWORD *)(v46 - 172) = 2 * (v53 ^ v45) + v45 - (v41 & (4 * (v53 ^ v45)));
    *(_DWORD *)(v46 - 168) = 2 * (v52 ^ v45) + v45 - (v41 & (4 * (v52 ^ v45)));
    return v48(a1, a2, a3, a4, a5, v49, a8, a9, a10, a11, a12, a13);
  }
}

void sub_10012B810(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13)
{
  *(_DWORD *)(v16 - 164) = (a1 ^ v15) + (a13 ^ v15) + v15 - ((((a1 ^ v15) + (a13 ^ v15)) << (v13 - 78)) & v14);
  JUMPOUT(0x10012B85CLL);
}

uint64_t sub_10012B8E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unint64_t *a13, int a14, uint64_t a15, unsigned int a16, int a17, int a18)
{
  unsigned int v21 = 1314530549 * ((-896288998 - (&a13 | 0xCA93B71A) + (&a13 | 0x356C48E5)) ^ 0x8465CE2B);
  a14 = (v20 + 1780978840) ^ v21;
  a13 = &STACK[0x70766EB78D2F3F00];
  a16 = -906424547 - v21;
  a18 = v21 ^ 0x4EA001FB;
  a15 = a11;
  uint64_t v22 = (*(uint64_t (**)(unint64_t **))(v19 + 8 * (v20 ^ 0x1AEB)))(&a13);
  return (*(uint64_t (**)(uint64_t))(v19 + 8 * (((a17 == v18) * (((v20 - 1144) ^ 0x2B1) + 5016)) ^ v20)))(v22);
}

void sub_10012B9C8()
{
}

uint64_t sub_10012B9E0()
{
  STACK[0x3D0] = 0;
  uint64_t v2 = *(void *)(STACK[0x538] + 8);
  STACK[0x6F0] = 0x3415BE982BE930ALL;
  LODWORD(STACK[0x534]) = 150214099;
  LODWORD(STACK[0x6C4]) = -509920215;
  return (*(uint64_t (**)(void))(v1 + 8 * (((v2 != 0x46197683F7D18950) * (((v0 - 1147) | 0x82) - 1197)) ^ v0)))();
}

uint64_t sub_10012BA60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, unsigned int a14)
{
  a14 = 31090337 * ((-197109261 - (&a13 | 0xF44059F3) + (&a13 | 0xBBFA60C)) ^ 0xCC3EC645)
      + 1655392376;
  uint64_t v15 = (*(uint64_t (**)(int *))(v14 + 37600))(&a13);
  return (*(uint64_t (**)(uint64_t))(v14 + 8 * ((3419 * (a13 == 847203058)) ^ 0x2BDu)))(v15);
}

uint64_t sub_10012BAF8@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50)
{
  int v55 = 274 * (a1 ^ 0x82D);
  unsigned int v56 = (LODWORD(STACK[0x53C]) ^ 0xDEEAFBFD) + 1071085087 + ((v55 - 1110051918) & (2 * LODWORD(STACK[0x53C])));
  int v57 = (((v54 - 192) & 0xEFEE10CD | ~((v54 - 192) | 0xEFEE10CD)) ^ 0xB1B62EF6) * v50;
  *(void *)(v54 - 144) = STACK[0x458];
  *(_DWORD *)(v54 - 168) = a1 - v57 - 1172904825;
  *(_DWORD *)(v54 - 192) = v52 - v57 - 649597086;
  *(_DWORD *)(v54 - 188) = v56 ^ v57;
  *(void *)(v54 - 176) = a49;
  *(void *)(v54 - 160) = v51;
  *(void *)(v54 - 152) = a50;
  uint64_t v58 = (*(uint64_t (**)(uint64_t))(v53 + 8 * (a1 + 2647)))(v54 - 192);
  int v59 = *(_DWORD *)(v54 - 184);
  LODWORD(STACK[0x4A4]) = v59;
  LODWORD(STACK[0x2C8]) = 908711156;
  return (*(uint64_t (**)(uint64_t))(v53
                                            + 8
                                            * (int)(((((v59 == 847203058) ^ (v55 + 23)) & 1)
                                                   * ((v55 + 707459374) & 0xD5D50BFB ^ 0x965)) | v55)))(v58);
}

uint64_t sub_10012BC2C(__n128 a1)
{
  int v7 = (__n128 *)(v5 + v3);
  v7[73] = a1;
  v7[74] = a1;
  return (*(uint64_t (**)(void))(v6 + 8 * (((v3 + 32 == v1 - 281) * v4) ^ v2)))();
}

void sub_10012BC60()
{
}

uint64_t sub_10012BC6C()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (int)(((*(void *)(v1 + 24) == 0x127BB0B447B9E1FALL)
                                     * ((((v0 - 1911) | 0x104) ^ 0xFFFFF4EA) + ((v0 - 3573) | 0x88))) ^ (v0 - 1659))))();
}

uint64_t sub_10012BCCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  int v12 = v7 == ((v8 - 796) | 0x3C0) + 847202098 && v10 != a7;
  return (*(uint64_t (**)(void))(v9 + 8 * (((8 * v12) | (v12 << 11)) ^ v8)))();
}

void sub_10012BD18()
{
  uint64_t v0 = (uint64_t)*(&off_100520A90
                + ((75 * ((qword_1005A6FB0 + dword_1005A6DE8) ^ 0x7E)) ^ byte_100491800[byte_1004A0860[(75 * ((qword_1005A6FB0 + dword_1005A6DE8) ^ 0x7E))] ^ 0x5D])
                + 233);
  uint64_t v1 = *(void *)(v0 - 4);
  uint64_t v2 = (uint64_t)*(&off_100520A90
                + (byte_100495F28[(byte_100491A04[(75
                                                                                                 * (v1 ^ qword_1005A6FB0 ^ 0x7E))
                                                                               - 4] ^ 0xB4)
                                                               - 8] ^ (75 * (v1 ^ qword_1005A6FB0 ^ 0x7E)))
                + 186);
  unint64_t v3 = v1 ^ (unint64_t)&v5 ^ *(void *)(v2 - 4);
  *(void *)(v0 - 4) = (544792907 * v3) ^ 0xE12C07DFCC70D97ELL;
  *(void *)(v2 - 4) = 544792907 * (v3 ^ 0xE12C07DFCC70D97ELL);
  v6[1] = 31090337 * ((((2 * v6) | 0x2EC31D12) - v6 - 392269449) ^ 0xD0E0EEC0) + 1655392376;
  LOBYTE(v2) = 75 * ((*(_DWORD *)(v2 - 4) + *(_DWORD *)(v0 - 4)) ^ 0x7E);
  int v4 = (char *)*(&off_100520A90
               + ((75 * ((qword_1005A6FB0 - dword_1005A6DE8) ^ 0x7E)) ^ byte_100491800[byte_1004A0860[(75 * ((qword_1005A6FB0 - dword_1005A6DE8) ^ 0x7E))] ^ 0xB9])
               - 69)
     - 8;
  (*(void (**)(_DWORD *))&v4[8
                                      * (byte_10049B328[(byte_100495E28[v2 - 8] ^ 0x14)
                                                                       - 8] ^ v2)
                                      + 36320])(v6);
  __asm { BRAA            X8, X17 }
}

uint64_t sub_10012BF34(uint64_t a1, int a2)
{
  unsigned int v9 = v6 + v5 + v7;
  v10.i64[0] = 0x6060606060606060;
  v10.i64[1] = 0x6060606060606060;
  uint64_t v11 = v2 + v9;
  uint64_t v12 = a1 + v9;
  int8x16_t v13 = veorq_s8(*(int8x16_t *)(v11 - 31), v10);
  *(int8x16_t *)(v12 - 15) = veorq_s8(*(int8x16_t *)(v11 - 15), v10);
  *(int8x16_t *)(v12 - 31) = v13;
  return (*(uint64_t (**)(void))(v8
                              + 8
                              * (int)((((v4 & 0xFFFFFFE0) == 32) * ((a2 + 1580564455) & 0xA1CA7DFA ^ 0xB38)) ^ (v3 + a2 + 538800546 - 2496))))();
}

void sub_10012BFBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, __int16 a10, char a11, char a12, char a13, char a14, char a15, char a16, char a17, char a18, char a19, char a20,char a21,char a22,char a23,char a24,char a25,char a26,char a27,char a28,char a29,char a30,char a31,char a32,char a33,char a34,char a35,char a36,char a37,char a38,char a39,char a40,char a41,char a42,char a43,char a44,char a45,char a46,char a47,char a48,char a49,char a50,char a51,char a52,char a53,char a54,char a55,char a56,char a57,char a58,char a59,char a60)
{
  int8x16x4_t v67 = *(unsigned int **)(v64 + 8 * ((v66 + 3709) ^ 0x1096));
  uint64_t v68 = *v67;
  unsigned int v69 = *(void **)(v64 + 8 * (v66 - 258));
  int v70 = (unsigned char *)*v69;
  a11 = *(unsigned char *)*v69 - 117;
  a12 = v70[1] - 117;
  a13 = v70[2] - 117;
  a14 = v70[3] - 117;
  a15 = v70[4] - 117;
  a16 = v70[5] - 117;
  a17 = v70[6] - 117;
  a18 = v70[7] - 117;
  a19 = v70[8] - 117;
  a20 = v70[9] - 117;
  a21 = v70[10] - 117;
  a22 = v70[11] - 117;
  a23 = v70[12] - 117;
  a24 = v70[13] - 117;
  a25 = v70[14] - 117;
  a26 = v70[15] - 117;
  a27 = v70[16] - 117;
  a28 = v70[17] - 117;
  a29 = v70[18] - 117;
  a30 = v70[19] - 117;
  a31 = v70[20] - 117;
  a32 = v70[21] - 117;
  int v71 = (unsigned char *)*v69;
  a33 = v71[22] - 117;
  a34 = v71[23] - 117;
  a35 = v71[24] - 117;
  a36 = v71[25] - 117;
  a37 = v71[26] - 117;
  a38 = v71[27] - 117;
  a39 = v71[28] - 117;
  a40 = v71[29] - 117;
  uint64_t v72 = (*(uint64_t (**)(uint64_t, char *, unsigned int *))(v62 + 8 * ((v66 + 3709) ^ 0x230)))(v68, &a11, v60);
  int v79 = ((2 * v72) & 0x4F67EFBE) + (v72 ^ 0xA7B3F7DF);
  if (v79 == -1481377825)
  {
    *(_DWORD *)(v65 + 344) |= (v63 ^ 0x11E7) - 454;
    *(_DWORD *)(v65 + 44) = 1796785560;
    (*(void (**)(void, uint64_t, uint64_t, uint64_t, uint64_t))(v62 + 8 * (v63 ^ 0x1D0)))(*v60, v65 + 332, v65 + 336, v65 + 340, v61);
    sub_10014CB9C();
  }
  else
  {
    if (v79 == -1481376723)
    {
      uint64_t v80 = *v67;
      unsigned int v81 = *(unsigned char **)(*(void *)(v64 + 8 * (v63 - 4137)) - 4);
      a41 = *v81 - 2;
      a42 = v81[1] - 2;
      a43 = v81[2] - 2;
      a44 = v81[3] - 2;
      a45 = v81[4] - 2;
      a46 = v81[5] - 2;
      a47 = v81[6] - 2;
      a48 = v81[7] - 2;
      a49 = v81[8] - 2;
      a50 = v81[9] - 2;
      a51 = v81[10] - 2;
      a52 = v81[11] - 2;
      a53 = v81[12] - 2;
      a54 = v81[13] - 2;
      a55 = v81[14] - 2;
      a56 = v81[15] - 2;
      a57 = v81[16] - 2;
      a58 = v81[17] - 2;
      a59 = v81[18] - 2;
      a60 = v81[19] - 2;
      uint64_t v72 = (*(uint64_t (**)(uint64_t, char *, unsigned int *))(v62 + 8 * (v63 + 464)))(v80, &a41, v60);
      int v82 = (2 * v72) & 0x5FF7D72E;
      int v79 = (v72 ^ 0x2FFBEB97) - 147352066;
    }
    else
    {
      int v82 = 2139064758;
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v62
                                                                                          + 8
                                                                                          * ((106
                                                                                            * ((((v63 - 3879) ^ (v79 + v82 == 657686933)) & 1) == 0)) ^ (v63 - 3709))))(v72, v73, v74, v75, v76, v77, v78);
  }
}

uint64_t sub_10012C37C()
{
  return sub_10018BD08();
}

uint64_t sub_10012C3A4(uint64_t a1)
{
  int v1 = *(_DWORD *)a1 + 366490169 * (a1 ^ 0x16AE5644);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *(void *)(v2 - 0x3E8923C4CCFEA03ALL);
  int v4 = v1 - 647166077;
  unsigned int v9 = v1 - 647166077 + 366490169 * ((&v7 & 0xC566F051 | ~(&v7 | 0xC566F051)) ^ 0x2C3759EA);
  uint64_t v8 = v3;
  int v5 = (void (**)(uint64_t *))((char *)*(&off_100520A90 + v1 - 647170581) + 8 * (v1 ^ 0x26931875));
  (*(v5 - 1))(&v7);
  uint64_t v8 = *(void *)(v2 - 0x3E8923C4CCFEA042);
  unsigned int v9 = v4 + 366490169 * (&v7 ^ 0x16AE5644);
  return ((uint64_t (*)(uint64_t *))*(v5 - 1))(&v7);
}

void sub_10012C4E8()
{
  uint64_t v0 = *(&off_100520A90
       + ((75 * ((qword_1005A6FB0 - dword_1005A7068) ^ 0x7E)) ^ byte_100495F20[byte_100491A00[(75 * ((qword_1005A6FB0 - dword_1005A7068) ^ 0x7E))] ^ 0x54])
       - 137);
  unsigned __int8 v1 = 75 * ((qword_1005A6FB0 + *v0) ^ 0x7E);
  uint64_t v2 = (uint64_t)*(&off_100520A90
                + (byte_100495F28[(byte_100491A04[v1 - 4] ^ 0x54) - 8] ^ v1)
                + 11);
  unint64_t v3 = (unint64_t)&v5[*(void *)(v2 - 4) - *v0];
  *uint64_t v0 = 544792907 * v3 - 0x1ED3F820338F2682;
  *(void *)(v2 - 4) = 544792907 * (v3 ^ 0xE12C07DFCC70D97ELL);
  v6[1] = 31090337
        * (((v6 | 0xC5458E17) - v6 + (v6 & 0x3ABA71E8)) ^ 0x2C4EE5E)
        + 1655392376;
  LOBYTE(v2) = 75 * (*(_DWORD *)v0 ^ 0x7E ^ *(_DWORD *)(v2 - 4));
  int v4 = (char *)*(&off_100520A90
               + ((75 * (dword_1005A7068 ^ 0x7E ^ qword_1005A6FB0)) ^ byte_100495D20[byte_100491700[(75 * (dword_1005A7068 ^ 0x7E ^ qword_1005A6FB0))] ^ 0x3D])
               - 225)
     - 8;
  (*(void (**)(_DWORD *))&v4[8
                                      * (byte_100495D2C[(byte_10049170C[v2 - 12] ^ 0x3D)
                                                                       - 12] ^ v2)
                                      + 35672])(v6);
  __asm { BRAA            X8, X17 }
}

void sub_10012C6FC(uint64_t a1@<X8>)
{
  *(void *)(*(void *)(v1 + 56) - 0x70766EB78D2F3F00) = a1;
  JUMPOUT(0x10012C714);
}

uint64_t sub_10012C720()
{
  uint64_t v8 = v5;
  unsigned int v9 = v3 + ((&v7 & 0xEFA7A0B3 | ~(&v7 | 0xEFA7A0B3)) ^ 0x6F60908) * v1 + 2281;
  (*(void (**)(uint64_t *))(v0 + 8 * (v3 + 2449)))(&v7);
  unsigned int v9 = v3 - 1144 + (((&v7 | 0x7D51D157) - (&v7 & 0x7D51D157)) ^ 0x6BFF8713) * v1 + 3425;
  uint64_t v8 = v6;
  (*(void (**)(uint64_t *))(v0 + 8 * (v3 + 2449)))(&v7);
  return (v2 - 847203058);
}

uint64_t sub_10012C814@<X0>(uint64_t a1@<X0>, int a2@<W4>, uint64_t a3@<X5>, int a4@<W8>)
{
  uint64_t v7 = v4 + (((v5 - 389) | 0x260) ^ (a2 + 27));
  long long v8 = *(_OWORD *)(a3 + v7 - 15);
  long long v9 = *(_OWORD *)(a3 + v7 - 31);
  uint64_t v10 = a1 + v7;
  *(_OWORD *)(v10 - 15) = v8;
  *(_OWORD *)(v10 - 31) = v9;
  return (*(uint64_t (**)(void))(v6 + 8 * ((7007 * ((a4 & 0xFFFFFFE0) == 32)) ^ (v5 + 394))))();
}

uint64_t sub_10012C874()
{
  unsigned int v3 = v0 - ((2 * v0) & 0xE270C5DE) + ((v1 - 370) ^ 0x71386B25);
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((87
                                * ((v3 ^ 0x8EC63F62) + 1051700992 + ((2 * v3) & 0xFFFCBB1A ^ 0xE270811A) != 1051593869)) ^ v1)))();
}

uint64_t sub_10012C8F4(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5
                                                     + 8
                                                     * (int)(((((v4 - 1208818409) & 0xEDDD5C5F) + 1513075663)
                                                            * ((v2 + v1 + 100668426) < 8)) ^ (v4 - 1260))))(a1, v3);
}

uint64_t sub_10012C968@<X0>(uint64_t a1@<X4>, uint64_t a2@<X6>, uint64_t a3@<X8>)
{
  *(unsigned char *)(v5 + (((v3 - 848) ^ (unint64_t)(a1 + 421)) & (v4 + a2))) = *(unsigned char *)(v6 + a3 + v8);
  return (*(uint64_t (**)(void))(v7 + 8 * ((((a2 + v4 + 1) > 0x3F) * v9) ^ v3)))();
}

uint64_t sub_10012C9B8()
{
  return (*(uint64_t (**)(void))(v4
                              + 8 * ((((v3 - 123332416) & 0x48802F5D ^ 0xEC9) * (v1 + 32 < v2)) ^ (v0 + v3 + 2036))))();
}

uint64_t sub_10012CA00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19, int a20)
{
  unsigned int v24 = v20 + 8394755;
  if (v24 <= 0x40) {
    unsigned int v24 = 64;
  }
  return (*(uint64_t (**)(void))(v23
                              + 8
                              * (((-v21 - v22 + (((a20 - 836) | 0x211) ^ 0xFF7FE562) + v24 > 0xE)
                                * ((a20 ^ 0x631) - 1449)) ^ a20)))();
}

uint64_t sub_10012CA90@<X0>(int a1@<W8>)
{
  int v3 = a1 - 1184;
  int v4 = 14 * ((a1 - 1184) ^ 0xDF0);
  int v5 = a1 - 4514;
  uint64_t v6 = *v1;
  STACK[0x888] = 0;
  STACK[0x880] = 0x5B0812A82F0B9717;
  return (*(uint64_t (**)(void))(v2 + 8 * (((v6 != 0x46197683F7D18950) * (v5 + v4 - 2566)) ^ v3)))();
}

uint64_t sub_10012CB00()
{
  STACK[0x798] = *(void *)(v1 + 8 * v0);
  return sub_10013B2F8();
}

uint64_t sub_10012CB18@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, int a4, uint64_t a5, int a6, uint64_t a7, unsigned int a8)
{
  unsigned int v12 = 1401278017 * (((&a4 | 0xDCA9203A) - (&a4 & 0xDCA9203A)) ^ 0xD88A56DD);
  a6 = (v11 - 907) ^ v12;
  a8 = v12 + 633540394;
  a7 = v8;
  a4 = v10 - v12 + 1120525525;
  a5 = a1;
  uint64_t v13 = (*(uint64_t (**)(int *))(v9 + 8 * (v11 + 2606)))(&a4);
  return (*(uint64_t (**)(uint64_t))(v9
                                            + 8
                                            * (((*(_DWORD *)(v8 - 0x69166E42B329955BLL) == 847203058)
                                              * ((v11 - 3) ^ 0xB8D)) ^ v11)))(v13);
}

uint64_t sub_10012CBE0(uint64_t a1)
{
  int v3 = (*(uint64_t (**)(void))(v1 + 38608))();
  if (v3 == 16) {
    unsigned int v4 = -42029;
  }
  else {
    unsigned int v4 = -42030;
  }
  (*(void (**)(uint64_t))(v1 + 37640))(a1);
  if (v3) {
    return v4;
  }
  else {
    return 0;
  }
}

uint64_t sub_10012CC30(int a1, int a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v4 + 8 * ((21 * (a1 + a2 + 470091409 < (((a4 ^ 0x1303) + 256) ^ 0x36Cu))) ^ a4)))();
}

void sub_10012CC7C(uint64_t a1)
{
  int v1 = *(_DWORD *)a1 - 1437274309 * (((a1 | 0x71DC8019) - (a1 & 0x71DC8019)) ^ 0x53D2FD2C);
  uint64_t v2 = *(void *)(a1 + 8);
  int v3 = *(_DWORD *)(v2 - 0x49230D716B37AE00);
  unsigned int v6 = v1
     - 142545853
     * (((&v5 | 0xB691B60A) - &v5 + (&v5 & 0x496E49F0)) ^ 0x9C6E1965)
     - 1344;
  uint64_t v5 = v2;
  uint64_t v4 = (char *)*(&off_100520A90 + (int)(v1 & 0x9648F150)) - 8;
  (*(void (**)(uint64_t *))&v4[8 * v1 + 24696])(&v5);
  __asm { BRAA            X8, X17 }
}

uint64_t sub_10012CDC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15, int a16)
{
  return (*(uint64_t (**)(void))(v17
                              + 8
                              * ((19 * (((a16 == -557495541) ^ (v16 + 67 + (v16 ^ 0x17) + 1)) & 1)) ^ v16)))();
}

uint64_t sub_10012CE18@<X0>(int a1@<W8>)
{
  *uint64_t v2 = a1 ^ 0x62E ^ v8 ^ 0xDEC54F47;
  int v5 = a1 ^ 0x80E;
  uint64_t v11 = v7;
  unsigned int v12 = (a1 ^ 0x62E)
      + ((&v10 + 246591029 - 2 * ((unint64_t)&v10 & 0xEB2AE35)) ^ 0x181CF871) * v3
      + 3420;
  (*(void (**)(uint64_t *))(v4 + 8 * ((a1 ^ 0x62E) + 3588)))(&v10);
  unsigned int v12 = v5 + ((((2 * &v10) | 0x717F576E) - &v10 + 1195398217) ^ 0xAE11FDF3) * v3 + 1852;
  uint64_t v11 = v9;
  (*(void (**)(uint64_t *))(v4 + 8 * (v5 + 2020)))(&v10);
  return (v1 - 847203058);
}

uint64_t sub_10012CF34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,int a50)
{
  STACK[0x7D8] = 0;
  STACK[0x8D8] = 0;
  return (*(uint64_t (**)(void))(v50 + 8 * ((((a50 - 1638476299) & 0x61A92FDF) - 2705) ^ a50)))();
}

uint64_t sub_10012CF84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  int v32 = v29 - 955;
  int v33 = 366490169 * ((-1748028931 - (v30 | 0x97CF31FD) + (v30 | 0x6830CE02)) ^ 0x7E9E9846);
  *(void *)(v31 - 128) = a23;
  *(_DWORD *)(v31 - 136) = (v26 ^ 0x56DFD3D9) + ((2 * v26) & 0xADBFA7B2) - 1111625928 + v33;
  *(_DWORD *)(v31 - 120) = v32 + 1890 + v33;
  (*(void (**)(uint64_t))(v28 + 8 * (v32 + 3333)))(v31 - 136);
  uint64_t v34 = 366490169 * (v30 ^ 0x2A9EB51416AE5644);
  *(_DWORD *)(v31 - 120) = v32 - 470 - v34;
  *(void *)(v31 - 112) = a23;
  *(void *)(v31 - 128) = (v25 ^ 0x67DD372F9BE8EEDDLL)
                         + ((2 * v25) & 0xCFBA6E5F37D1DDBALL)
                         - v34
                         - 0x200117210180279BLL
                         + ((v32 + 268442829) | 0x2015109Cu)
                         - 806694262;
  (*(void (**)(uint64_t))(v28 + 8 * (v32 ^ 0x17D0)))(v31 - 136);
  int v35 = 366490169 * ((v30 & 0x542F09CC | ~(v30 | 0x542F09CC)) ^ 0xBD7EA077);
  *(_DWORD *)(v31 - 120) = v32 + 1890 + v35;
  *(_DWORD *)(v31 - 136) = (v24 ^ 0x7FDFD333) + ((2 * v24) & 0xFFBFA666) - 1799491618 + v35;
  *(void *)(v31 - 128) = a23;
  (*(void (**)(uint64_t))(v28 + 8 * (v32 ^ 0x170D)))(v31 - 136);
  *(_DWORD *)(v31 - 120) = v32 - 470 - 366490169 * (((v30 | 0xA3DD0DEE) - (v30 | 0x5C22F211) + 1545794065) ^ 0xB5735BAA);
  *(void *)(v31 - 128) = (v23 ^ 0x4FDEFE6EFFEECEBDLL)
                         + ((2 * v23) & 0x9FBDFCDDFFDD9D7ALL)
                         - 366490169
                         * (((v30 | 0x6B808619A3DD0DEELL) - (v30 | 0x947F79E65C22F211) - 0x6B808619A3DD0DEFLL) ^ 0x411E330DB5735BAALL)
                         - 0x802DE6065860234;
  *(void *)(v31 - 112) = a23;
  (*(void (**)(uint64_t))(v28 + 8 * (v32 + 3376)))(v31 - 136);
  int v36 = 366490169 * (((v30 | 0x3FD29D1F) - v30 + (v30 & 0xC02D62E0)) ^ 0x297CCB5B);
  *(void *)(v31 - 128) = a23;
  *(_DWORD *)(v31 - 120) = v32 + 1890 + v36;
  *(_DWORD *)(v31 - 136) = v36 + 345883409;
  uint64_t v37 = (*(uint64_t (**)(uint64_t))(v28 + 8 * (v32 ^ 0x170D)))(v31 - 136);
  return (*(uint64_t (**)(uint64_t))(v28 + 8 * ((3505 * (*(_DWORD *)(v31 - 116) == v27)) ^ v32)))(v37);
}

uint64_t sub_10012D2D0(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v1 + 16 * (v3 ^ 0x9A2)))(a1, v2 - 0x49230D716B37ADFCLL, 2824649125, 1619617772);
}

uint64_t sub_10012D330(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(void))(v8 + 8 * (((((a6 - 127811743) & 0x79E3FE6) - 1127) * (v6 != v7)) ^ a6)))();
}

uint64_t sub_10012D368(uint64_t a1, uint64_t a2, uint64_t a3, int a4, unint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, _DWORD *a19, int a20,void *a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,_DWORD *a31)
{
  uint64_t v38 = v32 + 2408;
  uint64_t v39 = (v36 - 1472218333) & 0x57C04FA9 ^ v38 ^ *(_DWORD *)(*a21 + 4 * (v31 - 802720172));
  uint64_t v40 = (((*a31 ^ v32) + a20 * v39 + a4 - (v37 & (2 * ((*a31 ^ v32) + a20 * v39)))) ^ a5)
      * (*a19 - 1514729486);
  uint64_t v41 = (v40 ^ 0x2FF8FD1DEE3FE9F5) - 0x2FF8FD1DEE3FE9F5 + ((2 * v40) & 0x1DC7FD3EALL);
  return (*(uint64_t (**)(uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v35 + 8 * (v36 ^ (2000 * (v33 < 2)))))(v38, v39, (((*a31 ^ v32) + a20 * v39 + a4 - (v37 & (2 * ((*a31 ^ v32) + a20 * v39)))) ^ a5)+ v41 * (**v34 ^ v32), 1619617772, a15, 0x30F6F95FA742B501, v41, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18);
}

uint64_t sub_10012D37C(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((LODWORD(STACK[0x250]) * (v4 == a3)) ^ (v5 - 2423))))();
}

uint64_t sub_10012D3A0()
{
  int v5 = *(unsigned __int8 *)(v1 + v3 - 0x301AB76C077771ALL)
     - (*(unsigned char *)(v2 + v3 - 0x301AB76C077771ALL) - 51);
  return (*(uint64_t (**)(uint64_t))(v4
                                            + 8
                                            * ((3824
                                              * (((2 * v5) & 0x7F9ECF3E) + (v5 ^ (((2 * v0) ^ 0xE05) - 1076928998)) == -1076926561)) ^ v0)))(48);
}

uint64_t sub_10012D3A8@<X0>(uint64_t a1@<X0>, int a2@<W1>, int a3@<W8>)
{
  *(unsigned char *)(a1 + (v5 + v4)) = *(unsigned char *)(v3 + (v5 + v4));
  return (*(uint64_t (**)(void))(v6 + 8 * ((45 * (((a2 - 43) ^ 0xB75) + v5 - 1575 != a3)) ^ (a2 - 43))))();
}

uint64_t sub_10012D3E8@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(v3 + 8 * (((*(unsigned char *)(v2 + a1 - 1060367103) == 94) * (v1 ^ 0xD5D)) | v1)))();
}

void sub_10012D420(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  __asm { BRAA            X8, X17 }
}

uint64_t sub_10012D494()
{
  return v0();
}

uint64_t sub_10012D4A4()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((((LODWORD(STACK[0x7E0]) ^ 0xE19B3C20) > ((v0 - 1064285090) & 0x3F6FB2EF ^ 0xB4u))
                                * (v0 + 1028)) ^ v0)))();
}

uint64_t sub_10012D500(unint64_t a1)
{
  STACK[0x4C0] = a1;
  LODWORD(STACK[0x380]) = v2;
  int v4 = 122 * (v1 ^ 0xA68);
  unint64_t v5 = STACK[0x2F0];
  unint64_t v6 = ((unint64_t)&STACK[0x360] ^ 0x6BFFDAFEE3F4FBBFLL)
     - 0x4AA400688304079ELL
     + (((void)&STACK[0x360] << (122 * (v1 ^ 0x68u) - 109)) & 0xD7FFB5FDC7E9F770);
  STACK[0x360] = 335;
  *(unsigned char *)(v5 + 335) = ((v6 - 33) ^ 0xBA) * (v4 - 126 + v6);
  return (*(uint64_t (**)(void))(v3 + 8 * ((1071 * (STACK[0x360] == 0)) ^ v4)))();
}

uint64_t sub_10012D5C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, unint64_t *a15, int a16, unsigned int a17)
{
  a17 = 3687 - 31090337 * (&a15 ^ 0xC7816049);
  a15 = &STACK[0x75464D914B72488F];
  uint64_t v18 = (*(uint64_t (**)(unint64_t **))(v17 + 37680))(&a15);
  return (*(uint64_t (**)(uint64_t))(v17
                                            + 8
                                            * (((16 * (((a16 == 847203058) ^ 0x3D) & 1)) & 0xBF | ((((a16 == 847203058) ^ 0x3D) & 1) << 6)) ^ 0x631u)))(v18);
}

uint64_t sub_10012D664(uint64_t a1, uint64_t a2)
{
  if (**(unsigned char **)(a2 + 8)) {
    char v2 = -41;
  }
  else {
    char v2 = -43;
  }
  *(unsigned char *)(a1 + 88) = ((**(unsigned char **)(a2 + 8) != 0) ^ 0x7B) + v2;
  return 0;
}

uint64_t sub_10012D6A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unint64_t *a13, int a14, uint64_t a15, unsigned int a16, int a17, int a18)
{
  unsigned int v21 = 1314530549 * (&a13 ^ 0xB10986CE);
  a13 = &STACK[0x70766EB78D2F3F00];
  a14 = v21 ^ 0x6A279D57;
  a15 = a11;
  a18 = v21 ^ 0x4EA001FB;
  a16 = 434223374 - v21;
  uint64_t v22 = (*(uint64_t (**)(unint64_t **))(v18 + 37536))(&a13);
  return (*(uint64_t (**)(uint64_t))(v18 + 8 * ((2554 * (a17 == ((v19 + 461) ^ v20))) ^ 0x1F4u)))(v22);
}

uint64_t sub_10012D758@<X0>(int a1@<W8>)
{
  *(void *)(v2 - 0x31F869904A03A4D8) = (a1 + *v3 + 1224)
                                         + *(void *)(v4 - 0x69166E42B3299573)
                                         + 8;
  return (*(uint64_t (**)(void))(v6 + 8 * ((5179 * (*v5 == ((18 * (v1 ^ 0x54F)) ^ 0x327F4E3A))) ^ v1)))();
}

uint64_t sub_10012D7D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 8 * ((204 * (a4 != 0)) ^ 0xF68u)))(a1, a2, a3, a4);
}

uint64_t sub_10012D81C()
{
  unint64_t v3 = (v0 ^ 0xC08056FD ^ (v0 + 552)) + v1;
  STACK[0x9B8] = v3;
  unint64_t v4 = STACK[0x5C8];
  STACK[0x9C0] = STACK[0x5C8];
  return (*(uint64_t (**)(void))(v2 + 8 * ((3889 * (0x2A7465AB426C8878 - v4 + v3 > 9)) ^ v0)))();
}

uint64_t sub_10012D890@<X0>(int a1@<W8>)
{
  BOOL v4 = (*(uint64_t (**)(void))(v3 + 8 * (v2 + 7)))(a1 ^ v1) == 0;
  return (*(uint64_t (**)(void))(v3 + 8 * ((v4 * ((v2 ^ 0x1F46) - 3433)) ^ v2)))();
}

uint64_t sub_10012D8D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,int a50)
{
  return (*(uint64_t (**)(void))(v50 + 8 * ((25 * (STACK[0x518] != 0)) ^ (a50 + 1687))))();
}

uint64_t sub_10012D900(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50)
{
  unint64_t v54 = STACK[0x710];
  unint64_t v55 = STACK[0x710] + 0x6DE124DAD0440C20;
  *(int64x2_t *)&STACK[0x330] = vdupq_n_s64(0x6FE85CFE81157FAuLL);
  *(int64x2_t *)&STACK[0x340] = vdupq_n_s64(0xF8FFFFFFFFFFFFFFLL);
  *(int64x2_t *)&STACK[0x320] = vdupq_n_s64(0xC6021FDCF749D63ALL);
  int64x2_t v56 = vdupq_n_s64(0x39FDE02308B629C5uLL);
  *(int64x2_t *)&STACK[0x3B0] = vdupq_n_s64(0x6A0B2EFB705EBC16uLL);
  *(int64x2_t *)&STACK[0x300] = vdupq_n_s64(0x3505977DB82F5E0BuLL);
  *(int64x2_t *)&STACK[0x310] = vdupq_n_s64(0x971D16400FFE16DCLL);
  *(int64x2_t *)&STACK[0x2B0] = vdupq_n_s64(0x447DEB9C4CFE7110uLL);
  *(int64x2_t *)&STACK[0x2C0] = vdupq_n_s64(0xFAD546E1D48F2D06);
  int64x2_t v58 = vdupq_n_s64(0x82955C8F15B8697CLL);
  int64x2_t v61 = vdupq_n_s64(0x1B98E234EDFD6F68uLL);
  int64x2_t v59 = vdupq_n_s64(0x98F20280DADD9E96);
  int64x2_t v60 = vdupq_n_s64(0x76F71298F370D9A8uLL);
  *(int64x2_t *)&STACK[0x360] = vdupq_n_s64(0x9CD6F7D662BBBAFBLL);
  *(int64x2_t *)&STACK[0x370] = vdupq_n_s64(0xE3ADA31E94309DCFLL);
  *(int64x2_t *)&STACK[0x2E0] = vdupq_n_s64(0xFFFFFFFFFFFFFFFELL);
  *(int64x2_t *)&STACK[0x2F0] = vdupq_n_s64(0x632908299D444504uLL);
  *(int64x2_t *)&STACK[0x2D0] = vdupq_n_s64(0x24867CD5D11DB86FuLL);
  *(int64x2_t *)&STACK[0x350] = vdupq_n_s64(0xD4961C00475DE491);
  int64x2_t v57 = vdupq_n_s64(0x767154173E425684uLL);
  *(_OWORD *)&STACK[0x2A0] = xmmword_1004A0AA0;
  LODWORD(a33) = a50 - 2328;
  int64x2_t v50 = vdupq_n_s64(0xA611B55DEC9EB602);
  int64x2_t v52 = vdupq_n_s64(0x2B69E3FFB8A21B6EuLL);
  int64x2_t v51 = vdupq_n_s64(0x1C525CE16BCF6230uLL);
  return sub_10012DCC8(0x24867CD5D11DB86FLL, 0x767154173E425684, 0x19AD884DE8C40FADLL, 0x1B98E234EDFD6F68, STACK[0x258], 0x447DEB9C4CFE7110, 0x39FDE02308B629C5, 0x2B69E3FFB8A21B6ELL, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           v54,
           a28,
           a29,
           a30,
           STACK[0x458],
           a32,
           a33,
           a34,
           v55,
           a36,
           a37,
           a38,
           v52.i64[0],
           v52.i64[1],
           v51.i64[0],
           v51.i64[1],
           v56.i64[0],
           v56.i64[1],
           v57.i64[0],
           v57.i64[1],
           a47,
           a48,
           a49,
           a50,
           v58.i64[0],
           v58.i64[1],
           v50.i64[0],
           v50.i64[1],
           v59.i64[0],
           v59.i64[1],
           v60.i64[0],
           v60.i64[1],
           v61.i64[0],
           v61.i64[1],
           vdupq_n_s64(0x4C7901406D6ECF4BuLL).u64[0]);
}

uint64_t sub_10012DCC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29)
{
  return (*(uint64_t (**)(uint64_t, void, void, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a5 + 8 * ((83 * ((v30 ^ 0x38F6FF71) - 408292353 + (v30 << ((v29 ^ 7) + 52)) == v31)) ^ (v29 - 2226))))(263, v29 ^ 0x107u, v30 ^ 0x38F6FF71u, (v30 << ((v29 ^ 7) + 52)), a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29);
}

uint64_t sub_10012DD28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17, uint64_t a18, char a19, int a20,uint64_t a21,int *a22)
{
  a20 = (v23 + 1427) ^ (((&a19 - 1015558018 - 2 * ((unint64_t)&a19 & 0xC377D07E)) ^ 0x727E56B0)
                      * v22);
  a21 = a18;
  a22 = &a17;
  uint64_t v25 = (*(uint64_t (**)(char *))(v24 + 8 * (v23 ^ 0x115B)))(&a19);
  return (*(uint64_t (**)(uint64_t))(v24
                                            + 8
                                            * (int)(((a17 == 0) * ((v23 + 2041651248) & 0x864EDDE3 ^ 0x194)) ^ v23)))(v25);
}

uint64_t sub_10012DDCC()
{
  return (*(uint64_t (**)(uint64_t))(v2 + 8 * ((107 * (v3 + 1 == v4 + 48)) ^ v1)))(v0);
}

void sub_10012DEA0(_DWORD *a1@<X8>)
{
  int v4 = *v1 - v2 - ((2 * (*v1 - v2) + 1455716830) & (2 * (v3 ^ 0x1F8) + 2103140618)) + 705688527;
  *unint64_t v5 = (HIBYTE(v4) ^ 0x3E) - 2 * ((HIBYTE(v4) ^ 0x3E) & 0xE1 ^ HIBYTE(v4) & 1) + 96;
  v5[1] = (BYTE2(v4) ^ 0xAD) - ((2 * (BYTE2(v4) ^ 0xAD)) & 0xC0) + 96;
  void v5[2] = (BYTE1(v4) ^ 0xB6) - ((2 * (BYTE1(v4) ^ 0xB6)) & 0xC0) + 96;
  v5[3] = v4 ^ 0x80;
  v1[5] = *a1;
}

uint64_t sub_10012DF78@<X0>(int a1@<W8>)
{
  int v4 = a1 - 2037;
  BOOL v5 = (*(uint64_t (**)(void))(v2 + 8 * (a1 + 142)))(v1 ^ v3) != 0;
  return (*(uint64_t (**)(void))(v2 + 8 * ((v5 * (((v4 ^ 0xDE5) + 3013) ^ 0x104A)) ^ v4)))();
}

uint64_t sub_10012DFC8@<X0>(int a1@<W4>, int a2@<W6>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(void))(a3 + 8 * ((15 * (a2 + 8 == v3 + 32)) ^ (v4 | a1))))();
}

uint64_t sub_10012DFD8(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v7
                              + 8
                              * ((((v4 + ((v5 + 1611173582) | 0x18504210) + 606) ^ (v5 + 1167313992) & 0x3A6C2FFF)
                                * (v6 == a4)) ^ v5)))();
}

uint64_t sub_10012E030@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,int a43)
{
  unint64_t v47 = v44 + 10;
  int v48 = LOWORD(STACK[0x942]);
  if (v48 == 11735) {
    goto LABEL_4;
  }
  if (v48 == 60027)
  {
    unint64_t v50 = STACK[0x668] + v43 - 0x39BC429B23ADDEEELL;
    STACK[0x588] = v47;
    LODWORD(STACK[0x5F4]) = a1;
    STACK[0x790] = v50;
    int v49 = a43;
    int v45 = 847203058;
    return (*(uint64_t (**)(void))(v46 + 8 * ((3806 * (v45 == v49 + 847200552)) ^ (v49 - 634))))();
  }
  int v49 = a43;
  if (v48 == 15909)
  {
LABEL_4:
    STACK[0x588] = v47;
    LODWORD(STACK[0x5F4]) = a1;
    int v45 = 847160697;
    int v49 = a43;
  }
  return (*(uint64_t (**)(void))(v46 + 8 * ((3806 * (v45 == v49 + 847200552)) ^ (v49 - 634))))();
}

uint64_t sub_10012E0F0@<X0>(int a1@<W0>, unsigned int a2@<W1>, uint64_t a3@<X2>, int a4@<W5>, int a5@<W6>, char a6@<W8>, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,int a37,int a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,int a44,uint64_t a45,uint64_t a46,unsigned int a47,int a48,unsigned int a49,int a50,unsigned int a51,int a52,unsigned int a53,uint64_t a54,uint64_t a55)
{
  HIDWORD(a42) = a1 + 16;
  HIDWORD(v60) = a25 ^ a31 ^ 0x7D2 ^ a5;
  LODWORD(v60) = a24 ^ a4;
  LODWORD(a16) = a16 ^ 0x1D;
  LODWORD(a15) = a15 ^ 0x3E;
  LODWORD(a17) = a17 ^ 0xFFFFFFBD;
  HIDWORD(a14) = a26 ^ 0x14;
  LODWORD(a18) = a18 ^ 0xFFFFFFAA;
  LODWORD(a20) = a20 ^ 0x42;
  LODWORD(a21) = a21 ^ 0x6F;
  HIDWORD(v58) = a22 ^ 0x72;
  LODWORD(a24) = a27 ^ 0x79;
  HIDWORD(v59) = a29 ^ 0x42;
  LODWORD(v58) = a28 ^ 0x4C;
  LODWORD(v59) = a30 ^ 0x17;
  LODWORD(a22) = a19 ^ 0xFFFFFFD0;
  LODWORD(a23) = a23 ^ 0xFFFFFFA0;
  LODWORD(a40) = 1;
  return sub_100191A0C(a2, a3, a31 ^ 0x7D2, a6, a7, a8, a9, v58, v59, v60, a13, a14, a15, a16, a17, a18, a19, a20, a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           v55,
           a38,
           v56,
           a40,
           a3 + 16,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55);
}

uint64_t sub_10012E228(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41)
{
  LODWORD(STACK[0x3FC]) = 175063628;
  LODWORD(STACK[0x49C]) = 128;
  unint64_t v44 = STACK[0x4B0] + 0x49230D716B37B014;
  unint64_t v45 = STACK[0x4B0] + 0x49230D716B37B124;
  unint64_t v46 = STACK[0x3D8];
  unint64_t v47 = STACK[0x450];
  int v48 = 476588053 * ((~((v43 - 192) | 0x1D45A803) + ((v43 - 192) & 0x1D45A803)) ^ 0x5F4753BF);
  *(_DWORD *)(v43 - 152) = 1958355884 - v48;
  *(_DWORD *)(v43 - 128) = (v41 + 55) ^ v48;
  *(void *)(v43 - 168) = 0;
  *(void *)(v43 - 160) = v46;
  *(void *)(v43 - 144) = v45;
  *(void *)(v43 - 136) = a41;
  *(void *)(v43 - 184) = 0;
  *(void *)(v43 - 176) = v44;
  *(void *)(v43 - 192) = v47;
  uint64_t v49 = (*(uint64_t (**)(uint64_t))(v42 + 8 * (v41 ^ 0x2C7)))(v43 - 192);
  return (*(uint64_t (**)(uint64_t))(v42
                                            + 8
                                            * (((*(_DWORD *)(v43 - 148) == ((v41 - 98) ^ 0x327F5AB9))
                                              * ((v41 - 1457988310) & 0x56E71BAD ^ 0x995)) ^ v41)))(v49);
}

void sub_10012E350()
{
}

uint64_t sub_10012E3AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,int a34)
{
  return (*(uint64_t (**)(void))(v35 + 8 * ((((a34 - 2246) ^ 0x57E) * (v34 > 0x4F0E6A9E)) ^ (a34 - 2246))))();
}

void sub_10012E3EC(uint64_t a1)
{
  int v1 = 366490169 * (((a1 | 0x57189164) - (a1 & 0x57189164)) ^ 0x41B6C720);
  int v2 = *(_DWORD *)(a1 + 4) + v1;
  int v3 = *(_DWORD *)a1 - v1;
  int v4 = *(_DWORD *)(*(void *)(a1 + 16) - 0x49230D716B37AE00);
  int v6 = v4 - 330117362;
  BOOL v5 = v4 - 330117362 < 0;
  int v7 = 330117362 - v4;
  if (!v5) {
    int v7 = v6;
  }
  __asm { BRAA            X13, X17 }
}

void sub_10012E4B0()
{
}

uint64_t sub_10012E584(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, unint64_t *a15, int a16, unsigned int a17)
{
  a17 = v19
      - 51
      - ((((&a15 | 0x4B31C194) ^ 0xFFFFFFFE) - (~&a15 | 0xB4CE3E6B)) ^ 0x734F5E22) * v18
      + 1145;
  a15 = &STACK[0x75464D914B72489F];
  uint64_t v21 = (*(uint64_t (**)(unint64_t **))(v17 + 8 * ((v19 - 51) ^ 0x1B88)))(&a15);
  return (*(uint64_t (**)(uint64_t))(v17
                                            + 8
                                            * ((975
                                              * ((((v19 - 1346985667) ^ (v20 + 3255) ^ (a16 == 847203058)) & 1) == 0)) ^ (v19 - 51))))(v21);
}

uint64_t sub_10012E648@<X0>(int a1@<W2>, uint64_t a2@<X5>, uint64_t a3@<X6>, uint64_t a4@<X7>, int a5@<W8>)
{
  *(unsigned char *)(a2 + (a5 + a1)) = *(unsigned char *)(a4 + a3 - 884344160);
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * ((((a1 + a5 + 1) < 0x40)
                                * ((((v5 - 638) | 0x250) - 266780023) & 0xFE6B7CF ^ 0x168)) ^ ((v5 - 638) | 0x250))))();
}

uint64_t sub_10012E6B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  *(void *)(v16 - 120) = a10;
  *(_DWORD *)(v16 - 112) = v15
                         - 1110
                         - 142545853
                         * ((((2 * ((v16 - 120) ^ 0x5EB4ED56)) | 0xB372B858) - ((v16 - 120) ^ 0x5EB4ED56) + 642163668) ^ 0xADF21E15);
  (*(void (**)(uint64_t))(v14 + 8 * (v15 + 3321)))(v16 - 120);
  *(void *)(v16 - 120) = a11;
  *(_DWORD *)(v16 - 112) = v15 - 1110 - 142545853 * ((v16 - 120) ^ 0x2AFFAF6F);
  (*(void (**)(uint64_t))(v14 + 8 * (v15 ^ 0x1709)))(v16 - 120);
  *(void *)(v16 - 120) = a11;
  *(void *)(v16 - 112) = a14;
  *(_DWORD *)(v16 - 104) = v15 + 476588053 * (((v16 - 120) & 0x45194F0 | ~((v16 - 120) | 0x45194F0)) ^ 0x46536F4C) - 338;
  uint64_t v17 = (*(uint64_t (**)(uint64_t))(v14 + 8 * (v15 ^ 0x17CF)))(v16 - 120);
  return sub_10012E7EC(v17);
}

uint64_t sub_10012E828()
{
  return sub_10018BD08();
}

uint64_t sub_10012E840(int a1, uint64_t a2, uint64_t a3, int a4)
{
  *(void *)(v10 - 7 + (v7 + v6 + v9 - a1)) = *(void *)(v4 - 7 + (v7 + v6 + v9 - a1));
  return (*(uint64_t (**)(void, void))(v11 + 8 * (((a1 - (v5 & 0xFFFFFFF8) == -8) * (a4 - 504)) ^ a4)))(a1 - (v5 & 0xFFFFFFF8) + 16, v8 - (v5 & 0xFFFFFFF8));
}

uint64_t sub_10012E894(int8x8_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, int a6)
{
  *(int8x8_t *)(a3 + (v6 - 8)) = veor_s8(*(int8x8_t *)(v8 + (v6 - 8)), a1);
  return (*(uint64_t (**)(void))(v10 + 8 * (((v7 == -8) * (((a4 + 2101) | v9) ^ a6)) ^ a4)))();
}

void sub_10012E8A0(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 8) - 1697562443 * ((((2 * a1) | 0xCFAD2984) - a1 - 1742116034) ^ 0xB046AC46);
  __asm { BRAA            X8, X17 }
}

uint64_t sub_10012E968()
{
  return (*(uint64_t (**)(void))(v3 + 8 * (int)(((v2 != v1) * (((v0 ^ 0x1A) - 176917125) ^ 0xF57476FE)) ^ v0)))();
}

uint64_t sub_10012E9A8@<X0>(unsigned int a1@<W3>, int a2@<W8>)
{
  uint64_t v6 = v3 + 16;
  int v7 = LODWORD(STACK[0x700]) ^ 0x83C;
  int v8 = STACK[0x700];
  int v9 = v6 * v2;
  LODWORD(STACK[0x6F4]) = v7;
  unint64_t v10 = STACK[0x710];
  unint64_t v11 = STACK[0x710] + (LODWORD(STACK[0x6E0]) + v6);
  *(unsigned char *)(v5 + ((int)v6 * v2 - 353124614) % (v7 - 1587)) ^= *(unsigned char *)v11;
  unsigned int v12 = v11 * v4 - 1657721032 - ((v11 * a2) & 0x3A625E70);
  uint64_t v13 = v6 * v2
      - 352902182
      - 965 * ((((v6 * v2 - 352902182) * (unint64_t)a1) >> 32) >> 4);
  int v14 = ((HIWORD(v12) ^ 0x9D31) - 1657721032 - ((2 * (HIWORD(v12) ^ 0x9D31)) & 0x5E70)) ^ v12;
  unsigned int v15 = 1554976193 * v14 - ((-1185014910 * v14) & 0xB8858402) - 599604735;
  uint64_t v16 = (LODWORD(STACK[0x6F0]) - 1550811803 + v8 + v6);
  unint64_t v17 = STACK[0x618];
  char v18 = ((v15 ^ 1) - ((2 * (v15 ^ 1)) & 0x12) + 9) ^ *(unsigned char *)(STACK[0x618]
                                                              + (673 * (HIBYTE(v15) ^ 0x24)
                                                                             - 1184
                                                                             * ((3627507
                                                                               * (unint64_t)(673
                                                                                                  * (HIBYTE(v15) ^ 0x24))) >> 32)));
  *(unsigned char *)(STACK[0x718] + v13) ^= 0x3A ^ (v18 + (~(2 * v18) | 0x59) - 44);
  int v19 = (unsigned char *)(v10 + v16);
  *(unsigned char *)(STACK[0x718] + ((int)v6 * v2 - 353123952) % 0x3C5u) ^= *v19;
  LODWORD(v19) = 1554976193 * v19 - 1116242463 - ((962468738 * v19) & 0x7AEEFBC2);
  LODWORD(v19) = (((v19 >> 16) ^ 0xBD77)
                - 1116242463
                - ((2 * ((v19 >> 16) ^ 0xBD77)) & 0xFBC2)) ^ v19;
  LODWORD(v19) = 1554976193 * v19 - ((425597826 * v19) & 0x19A47D54) + 215105194;
  uint64_t v20 = ((int)v6 * v2 - 352901520) % 0x3C5u;
  unsigned int v21 = (v19 >> 24) ^ 0xF4;
  LOBYTE(v19) = ((v19 ^ 0xAA) - ((2 * (v19 ^ 0xAA)) & 0xA6) - 45) ^ *(unsigned char *)(STACK[0x718] + v20);
  *(unsigned char *)(STACK[0x718] + v20) = *(unsigned char *)(v17
                                            + (673 * v21
                                                           - 1184 * ((3627507 * (unint64_t)(673 * v21)) >> 32))) ^ ((_BYTE)v19 - ((2 * (_BYTE)v19) & 0x12) + 9) ^ 0x3A;
  int v22 = (unsigned char *)(v10 + (LODWORD(STACK[0x6D8]) + v6));
  *(unsigned char *)(STACK[0x718] + ((int)v6 * v2 - 353123290) % 0x3C5u) ^= *v22;
  LODWORD(v19) = 1554976193 * v22 + 439896841 - ((962468738 * v22) & 0x34709612);
  LODWORD(v19) = (((v19 >> 16) ^ 0x1A38)
                + 439896841
                - ((2 * ((v19 >> 16) ^ 0x1A38)) & 0x9612)) ^ v19;
  LODWORD(v19) = 1554976193 * v19 - ((-1185014910 * v19) & 0xA82B0DEC) + 1410696950;
  LOBYTE(v19) = ((v19 ^ 0xF6) - ((2 * (_BYTE)v19) & 0x12) + 9) ^ *(unsigned char *)(v17
                                                                                           + (673 * ((v19 >> 24) ^ 0xAC) - 1184 * ((3627507 * (unint64_t)(673 * ((v19 >> 24) ^ 0xAC))) >> 32)));
  *(unsigned char *)(STACK[0x718] + ((int)v6 * v2 - 352900858) % 0x3C5u) ^= 0x3A ^ ((_BYTE)v19
                                                                                           - ((2 * (_BYTE)v19) & 0xA6)
                                                                                           - 45);
  int v23 = (unsigned char *)(v10 + (LODWORD(STACK[0x6D0]) + v6));
  *(unsigned char *)(STACK[0x718] + ((int)v6 * v2 - 353122628) % 0x3C5u) ^= *v23;
  LODWORD(v23) = 1554976193 * v23 + 1182018928 - ((-1185014910 * v23) & 0x8CE85AE0);
  LODWORD(v23) = (((v23 >> 16) ^ 0x4674)
                + 1182018928
                - ((2 * ((v23 >> 16) ^ 0x4674)) & 0x5AE0)) ^ v23;
  LODWORD(v23) = 1554976193 * v23 - ((962468738 * v23) & 0x7EA53CE0) - 1085104528;
  LODWORD(v22) = v6 - ((2 * v6 + 1860950194) & 0x5CF38A84) - 1511018085;
  LOBYTE(v23) = *(unsigned char *)(v17
                         + (673 * ((v23 >> 24) ^ 0x47)
                                        - 1184
                                        * ((3627507 * (unint64_t)(673 * ((v23 >> 24) ^ 0x47))) >> 32))) ^ ((v23 ^ 0x70) - ((2 * (_BYTE)v23) & 0x12) + 9);
  *(unsigned char *)(STACK[0x718] + ((int)v6 * v2 - 352900196) % 0x3C5u) ^= 0x3A ^ ((_BYTE)v23
                                                                                           + (~(2 * (_BYTE)v23) | 0x59)
                                                                                           - 44);
  LODWORD(v23) = (v22 ^ 0x2E79C542) & STACK[0x6C8];
  LODWORD(v20) = LODWORD(STACK[0x67C]) ^ 0xAE79C542 ^ v22;
  *(unsigned char *)(STACK[0x718] + ((int)v6 * v2 - 353121966) % 0x3C5u) ^= *(unsigned char *)(v10
                                                                             + (v22 ^ 0xAE79C542)
                                                                             + LODWORD(STACK[0x67C]));
  LODWORD(v23) = 1554976193 * (v10 + v20 + 2 * v23)
               + 1138909412
               - ((-1185014910 * (v10 + v20 + 2 * v23)) & 0x87C4C1C8);
  LODWORD(v23) = (((v23 >> 16) ^ 0x43E2)
                + 1138909412
                - ((2 * ((v23 >> 16) ^ 0x43E2)) & 0xC1C8)) ^ v23;
  LODWORD(v23) = 1554976193 * v23 - ((-1185014910 * v23) & 0xDA5D4E40) - 315709664;
  uint64_t v24 = (LODWORD(STACK[0x6C4]) + v6);
  LOBYTE(v23) = *(unsigned char *)(v17
                         + (673 * ((v23 >> 24) ^ 0x15)
                                        - 1184
                                        * ((3627507 * (unint64_t)(673 * ((v23 >> 24) ^ 0x15))) >> 32))) ^ ((v23 ^ 0x20) - ((2 * (_BYTE)v23) & 0x12) + 9);
  *(unsigned char *)(STACK[0x718] + ((int)v6 * v2 - 352899534) % 0x3C5u) ^= 0x3A ^ ((_BYTE)v23
                                                                                           + (~(2 * (_BYTE)v23) | 0x59)
                                                                                           - 44);
  *(unsigned char *)(STACK[0x718] + ((int)v6 * v2 - 353121304) % 0x3C5u) ^= *(unsigned char *)(v10 + v24);
  LODWORD(v20) = 1554976193 * (v10 + v24) + 1300037148 - ((-1185014910 * (v10 + v24)) & 0x9AF9FC38);
  LODWORD(v20) = ((WORD1(v20) ^ 0x4D7C) + 1300037148 - 2 * ((WORD1(v20) ^ 0x4D7C) & 0xFE1E ^ WORD1(v20) & 2)) ^ v20;
  LODWORD(v20) = 1554976193 * v20 - ((962468738 * v20) & 0x5E49BAA6) + 790945107;
  uint64_t v25 = (LODWORD(STACK[0x6B8]) + v6);
  *(unsigned char *)(STACK[0x718] + ((int)v6 * v2 - 352898872) % 0x3C5u) ^= v20 ^ 0xB3 ^ *(unsigned char *)(v17
                                                                                          + (673 * (BYTE3(v20) ^ 0xD7) - 1184 * ((3627507 * (unint64_t)(673 * (BYTE3(v20) ^ 0xD7))) >> 32)));
  *(unsigned char *)(STACK[0x718] + ((int)v6 * v2 - 353121607) % 0x3C5u) = *(unsigned char *)(v10 + v25) ^ *(unsigned char *)(STACK[0x718] + ((int)v6 * v2 - 353120642) % 0x3C5u);
  LODWORD(v23) = 1554976193 * (v10 + v25) - 531300029 - ((-1185014910 * (v10 + v25)) & 0xC0AA0286);
  LODWORD(v23) = (((v23 >> 16) ^ 0xE055) - 531300029 - ((2 * ((v23 >> 16) ^ 0xE055)) & 0x286)) ^ v23;
  LODWORD(v23) = 1554976193 * v23 - ((-1185014910 * v23) & 0xC95D55D8) - 458315028;
  LOBYTE(v23) = *(unsigned char *)(v17
                         + (673 * ((v23 >> 24) ^ 0x1C)
                                        - 1184
                                        * ((3627507 * (unint64_t)(673 * ((v23 >> 24) ^ 0x1C))) >> 32))) ^ ((v23 ^ 0xEC) + (~(2 * (v23 ^ 0xEC)) | 0xED) + 10);
  *(unsigned char *)(STACK[0x718] + ((int)v6 * v2 - 352898210) % 0x3C5u) ^= 0x3A ^ ((_BYTE)v23
                                                                                           - ((2 * (_BYTE)v23) & 0xA6)
                                                                                           - 45);
  unsigned int v26 = v6 * v2 - 353119980;
  int v27 = (unsigned char *)(v10 + (LODWORD(STACK[0x6B0]) + v6));
  *(unsigned char *)(STACK[0x718] + v26 % 0x3C5) ^= *v27;
  LODWORD(v23) = 1554976193 * v27 - 478406510 - ((-1185014910 * v27) & 0xC6F83124);
  LODWORD(v23) = (((v23 >> 16) ^ 0xE37C)
                - 478406510
                - ((2 * ((v23 >> 16) ^ 0xE37C)) & 0x3124)) ^ v23;
  LODWORD(v23) = 1554976193 * v23 - ((-1185014910 * v23) & 0xDB29A3F0) - 309014024;
  LOBYTE(v23) = *(unsigned char *)(v17
                         + (673 * ((v23 >> 24) ^ 0x15)
                                        - 1184
                                        * ((3627507 * (unint64_t)(673 * ((v23 >> 24) ^ 0x15))) >> 32))) ^ ((v23 ^ 0xF8) - 2 * ((v23 ^ 0xF8) & 0xD ^ v23 & 4) + 9);
  *(unsigned char *)(STACK[0x718] + ((int)v6 * v2 - 352897548) % 0x3C5u) ^= 0x3A ^ ((_BYTE)v23
                                                                                           - ((2 * (_BYTE)v23) & 0xA6)
                                                                                           - 45);
  uint64_t v28 = (unsigned char *)(v10 + (LODWORD(STACK[0x6AC]) + v6));
  *(unsigned char *)(STACK[0x718] + ((int)v6 * v2 - 353119318) % 0x3C5u) ^= *v28;
  LODWORD(v28) = 1554976193 * v28 - 1536424625 - ((962468738 * v28) & 0x48D80A9E);
  uint64_t v29 = ((int)v6 * v2 - 352896886) % 0x3C5u;
  LODWORD(v28) = (((v28 >> 16) ^ 0xA46C)
                - 1536424625
                - ((2 * ((v28 >> 16) ^ 0xA46C)) & 0xA9E)) ^ v28;
  LODWORD(v28) = 1554976193 * v28 - ((-1185014910 * v28) & 0xF7C17F4A) - 69156955;
  LODWORD(v22) = v28 >> 24;
  LOBYTE(v28) = *(unsigned char *)(STACK[0x718] + v29) ^ ((v28 ^ 0xA5)
                                                - ((2 * (v28 ^ 0xA5)) & 0xA6)
                                                - 45);
  uint64_t v30 = (LODWORD(STACK[0x6A0]) + v6);
  LODWORD(v22) = (v22 ^ 3)
               * (((((int)v6 * v2 - 352896886) % 0x3C5u) & 0x2A1 ^ 0x2A1)
                + ((((int)v6 * v2 - 352896886) % 0x3C5u) & 0x2A1));
  *(unsigned char *)(STACK[0x718] + v29) = *(unsigned char *)(v17
                                            + (v22
                                                           - 1184
                                                           * ((3627507 * (unint64_t)v22) >> 32))) ^ ((_BYTE)v28 - ((2 * (_BYTE)v28) & 0x12) + 9) ^ 0x3A;
  *(unsigned char *)(STACK[0x718] + ((int)v6 * v2 - 353118656) % 0x3C5u) ^= *(unsigned char *)(v10 + v30);
  LODWORD(v28) = 1554976193 * (v10 + v30) + 153589702 - ((425597826 * (v10 + v30)) & 0x124F2F8C);
  LODWORD(v28) = (((v28 >> 16) ^ 0x927) + 153589702 - ((2 * ((v28 >> 16) ^ 0x927)) & 0x12F8C)) ^ v28;
  LODWORD(v28) = 1554976193 * v28 - ((-1185014910 * v28) & 0xEDCFBD4E) - 152576345;
  LOBYTE(v28) = *(unsigned char *)(v17
                         + (673 * ((v28 >> 24) ^ 0xE)
                                        - 1184
                                        * ((3627507 * (unint64_t)(673 * ((v28 >> 24) ^ 0xE))) >> 32))) ^ ((v28 ^ 0xA7) - ((2 * (v28 ^ 0xA7)) & 0x12) + 9);
  *(unsigned char *)(STACK[0x718] + (v9 - 352896224) % 0x3C5u) ^= 0x3A ^ ((_BYTE)v28
                                                                                 - ((2 * (_BYTE)v28) & 0xA6)
                                                                                 - 45);
  int v31 = (unsigned char *)(v10 + (LODWORD(STACK[0x698]) + v6));
  *(unsigned char *)(STACK[0x718] + (v26 + 1986) % 0x3C5) ^= *v31;
  LODWORD(v31) = 1554976193 * v31 + 2138206935 - ((-1185014910 * v31) & 0xFEE4E5AE);
  LODWORD(v31) = (((v31 >> 16) ^ 0x7F72)
                + 2138206935
                - 2 * (((v31 >> 16) ^ 0x7F72) & 0x72DF ^ (v31 >> 16) & 8)) ^ v31;
  LODWORD(v31) = 1554976193 * v31 - ((425597826 * v31) & 0x1D3BB66C) - 1902257354;
  LOBYTE(v31) = *(unsigned char *)(v17
                         + (673 * ((v31 >> 24) ^ 0x76)
                                        - 1184
                                        * ((3627507 * (unint64_t)(673 * ((v31 >> 24) ^ 0x76))) >> 32))) ^ ((v31 ^ 0x36) - ((2 * (_BYTE)v31) & 0x12) + 9);
  uint64_t v32 = (LODWORD(STACK[0x690]) + v6);
  *(unsigned char *)(STACK[0x718] + (v9 - 352895562) % 0x3C5u) ^= 0x3A ^ ((_BYTE)v31
                                                                                 - ((2 * (_BYTE)v31) & 0xA6)
                                                                                 - 45);
  *(unsigned char *)(STACK[0x718] + (v26 + 2648) % 0x3C5) ^= *(unsigned char *)(v10 + v32);
  LODWORD(v31) = 1554976193 * (v10 + v32) - 1721599949 - ((962468738 * (v10 + v32)) & 0x32C4F066);
  LODWORD(v31) = (((v31 >> 16) ^ 0x9962)
                - 1721599949
                - 2 * (((v31 >> 16) ^ 0x9962) & 0x7837 ^ (v31 >> 16) & 4)) ^ v31;
  LODWORD(v31) = 1554976193 * v31 - ((-1185014910 * v31) & 0x9E95827A) - 817184451;
  unint64_t v33 = STACK[0x718];
  LOBYTE(v31) = *(unsigned char *)(v17
                         + (673 * ((v31 >> 24) ^ 0x37)
                                        - 1184
                                        * ((3627507 * (unint64_t)(673 * ((v31 >> 24) ^ 0x37))) >> 32))) ^ ((v31 ^ 0x3D) - ((2 * (v31 ^ 0x3D)) & 0x12) + 9);
  *(unsigned char *)(STACK[0x718]
           + (((int)v6 - 143265795) * ((int)v6 - 143265795) - 109561 + (143266126 - (int)v6) * ((int)v6 - 143266126))
           % 0x3C5u) = *(unsigned char *)(STACK[0x718] + ((int)v6 * v2 - 352894900) % 0x3C5u) ^ 0x3A ^ ((_BYTE)v31
                                                                                              - ((2 * (_BYTE)v31) & 0xA6)
                                                                                              - 45);
  unsigned int v34 = (unsigned char *)(v10 + (LODWORD(STACK[0x68C]) + v6));
  *(unsigned char *)(v33 + (v26 + 3310) % 0x3C5) ^= *v34;
  LODWORD(v34) = 1554976193 * v34 + 2130359472 - ((-1185014910 * v34) & 0xFDF56960);
  LODWORD(v34) = (((v34 >> 16) ^ 0x7EFA)
                + 2130359472
                - ((2 * ((v34 >> 16) ^ 0x7EFA)) & 0x16960)) ^ v34;
  LODWORD(v34) = 1554976193 * v34 - ((-1185014910 * v34) & 0xB65E8ACA) - 617659035;
  uint64_t v35 = (LODWORD(STACK[0x684]) + v6);
  *(unsigned char *)(v33 + (v9 - 352894238) % 0x3C5u) ^= v34 ^ 0x85 ^ *(unsigned char *)(v17
                                                                                        + (673 * ((v34 >> 24) ^ 0x23) - 1184 * ((3627507 * (unint64_t)(673 * ((v34 >> 24) ^ 0x23))) >> 32)));
  *(unsigned char *)(v33 + ((int)v6 * v2 - 353116008) % 0x3C5u) ^= *(unsigned char *)(v10 + v35);
  int v36 = v10 + v35 + 1598140719 - ((2 * (v10 + v35)) & 0xBE83625E);
  LODWORD(v34) = 1554976193 * (v36 ^ 0x5F41B12F) + 796093881 - ((962468738 * (v36 ^ 0x5F41B12F)) & 0x5EE6DB72);
  LODWORD(v34) = (((v34 >> 16) ^ 0x2F73)
                + 796093881
                - 2 * (((v34 >> 16) ^ 0x2F73) & 0x6DBD ^ (v34 >> 16) & 4)) ^ v34;
  LODWORD(v34) = 1554976193 * v34 - ((-1185014910 * v34) & 0x97D3D95C) - 873861970;
  LOBYTE(v34) = *(unsigned char *)(v17
                         + (673 * ((v34 >> 24) ^ 0x33)
                                        - 1184
                                        * ((3627507 * (unint64_t)(673 * ((v34 >> 24) ^ 0x33))) >> 32))) ^ ((v34 ^ 0xAE) - ((2 * (v34 ^ 0xAE)) & 0x12) + 9);
  *(unsigned char *)(v33 + (v9 - 352893576) % 0x3C5u) ^= 0x3A ^ ((_BYTE)v34 - ((2 * (_BYTE)v34) & 0xA6) - 45);
  int v37 = (unsigned char *)(v10 + (LODWORD(STACK[0x688]) + v6));
  *(unsigned char *)(v33 + (v9 - 353115346) % 0x3C5u) = *v37 ^ *(unsigned char *)(v33
                                                                + (((v36 & 0x8A407982 ^ 0xA403102 | v36 & 0x8A407982 ^ 0x80004880)
                                                                  + 362394741) ^ 0x9FDA2F61)
                                                                * (v6 - 143266459)
                                                                % 0x3C5);
  uint64_t v38 = ((int)v6 * v2 - 352892914) % 0x3C5u;
  LODWORD(v37) = 1554976193 * v37 - 1772057213 - ((962468738 * v37) & 0x2CC11B06);
  LODWORD(v37) = (((v37 >> 16) ^ 0x9660)
                - 1772057213
                - 2 * (((v37 >> 16) ^ 0x9660) & 0x8D87 ^ (v37 >> 16) & 4)) ^ v37;
  LODWORD(v37) = 1554976193 * v37 - ((962468738 * v37) & 0x4A2CC56E) - 1525259593;
  unsigned int v39 = 673 * ((v37 >> 24) ^ 0x5D)
      - 1184 * ((3627507 * (unint64_t)(673 * ((v37 >> 24) ^ 0x5D))) >> 32);
  LOBYTE(v37) = *(unsigned char *)(v33 + v38) ^ ((v37 ^ 0xB7)
                                       - ((2 * (v37 ^ 0xB7)) & 0xA6)
                                       - 45);
  *(unsigned char *)(v33 + v38) = *(unsigned char *)(v17 + v39) ^ ((_BYTE)v37 + (~(2 * (_BYTE)v37) | 0xED) + 10) ^ 0x3A;
  uint64_t v40 = (unsigned char *)(v10 + (LODWORD(STACK[0x680]) + v6));
  *(unsigned char *)(v33 + ((int)v6 * v2 - 353114684) % 0x3C5u) ^= *v40;
  LODWORD(v34) = 1554976193 * v40 + 26713730 - ((22944642 * v40) & 0x32F3D04);
  LODWORD(v34) = (((v34 >> 16) ^ 0x197) + 26713730 - ((2 * ((v34 >> 16) ^ 0x197)) & 0x13D04)) ^ v34;
  LODWORD(v34) = 1554976193 * v34 - ((-1185014910 * v34) & 0x91479150) - 928790360;
  LOBYTE(v34) = *(unsigned char *)(v17
                         + (673 * ((v34 >> 24) ^ 0x30)
                                        - 1184
                                        * ((3627507 * (unint64_t)(673 * ((v34 >> 24) ^ 0x30))) >> 32))) ^ ((v34 ^ 0xA8) - ((2 * (v34 ^ 0xA8)) & 0x12) + 9);
  *(unsigned char *)(v33 + ((int)v6 * v2 - 352892252) % 0x3C5u) ^= 0x3A ^ ((_BYTE)v34
                                                                                  - ((2 * (_BYTE)v34) & 0xA6)
                                                                                  - 45);
  return (*(uint64_t (**)(void))(STACK[0x6F8]
                              + 8 * ((4055 * ((unint64_t)(v6 - 143266715) < 0x40)) ^ LODWORD(STACK[0x700]))))();
}

uint64_t sub_10012E9B0()
{
  uint64_t v3 = *(void *)(v1 + 8);
  STACK[0x830] = *(void *)(v2 + 8 * v0);
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (int)(((v3 != 0x46197683F7D18950)
                                     * (((v0 + 187) | 0x401) ^ 0x50F ^ (((v0 + 187) | 0x401) - 1253))) ^ ((v0 + 187) | 0x401))))();
}

uint64_t sub_10012E9D4@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v2 + 8 * (((((v1 == 0) ^ (a1 + 40)) & 1) * (a1 - 4402)) ^ a1)))();
}

void sub_10012EA34()
{
}

uint64_t sub_10012EC80()
{
  return (*(uint64_t (**)(void))(v3 + 8 * (((v2 == v1 + 1694414258) * (v0 ^ 0x515)) ^ v1)))();
}

uint64_t sub_10012ECB0()
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((170 * (v0 + 1 != v2 + 4)) ^ v1)))();
}

uint64_t sub_10012ED6C()
{
  unint64_t v2 = *(void *)(STACK[0x648] + 24);
  STACK[0x820] = v2;
  return (*(uint64_t (**)(void))(v1 + 8 * (((v2 != 0) * ((v0 + 634) ^ 0xEAF ^ (977 * (v0 ^ 0x752)))) ^ v0)))();
}

uint64_t sub_10012EDC0@<X0>(void *a1@<X8>)
{
  void *v1 = a1;
  return (*(uint64_t (**)(void))(v3 + 8 * (int)((*a1 == 0) ^ ((v2 & 0xE8B6FA7F) + 841))))();
}

uint64_t sub_10012EDFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, int a16)
{
  unsigned int v19 = (a16 ^ v16) - ((2 * (a16 ^ v16)) & 0xCCFC5412) - 427939319;
  BOOL v20 = ((v19 << (((v17 + 54) ^ 0xE7) + ((v17 + 54) | 2) + 8)) & 0xF3FFD7EC ^ 0xC0FC5400)
      + (v19 ^ 0x1F81C1FF)
      + 1073569472 != 972901046;
  return (*(uint64_t (**)(void))(v18 + 8 * (((2 * v20) | (4 * v20)) ^ (v17 - 464))))();
}

void sub_10012EEA4()
{
}

uint64_t sub_10012EECC()
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((106 * (v1 + v0 + 202276993 >= (((v2 - 3120) | 0x1102) ^ 0x1166u))) ^ v2)))();
}

uint64_t sub_10012EF34(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v8 = (*(uint64_t (**)(void, void, void))(v5 + 8 * (((a4 - 1453) | 0x842) + 2539)))(*v6, *v7, ((((a4 - 1453) | 0x842) - 2117) | 0x4A2u) + *(_DWORD *)(v4 - 0x69166E42B329956BLL) - 874766458);
  return sub_10012EF88(v8);
}

void sub_10012EF88()
{
  *uint64_t v4 = v3;
  *(_DWORD *)(v0 - 0x69166E42B329956BLL) = v2;
  _DWORD *v1 = v2;
}

void sub_10012EFC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  if (a4) {
    BOOL v7 = a5 == 0;
  }
  else {
    BOOL v7 = 1;
  }
  int v10 = v7 || a6 == 0 || a7 == 0;
  __asm { BRAA            X8, X17 }
}

uint64_t sub_10012F048()
{
  return sub_1001BFB50();
}

uint64_t sub_10012F084(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v4 + 8 * (a3 ^ (2 * (v3 >= (((a3 ^ 0x615) + 1276056487) ^ 0x4C0F1780u))))))();
}

uint64_t sub_10012F0C0@<X0>(void *a1@<X8>)
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((35 * (*a1 == 0)) ^ (v1 - 1089))))();
}

uint64_t sub_10012F11C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,int a30,int a31)
{
  uint64_t v34 = (*(uint64_t (**)(void))(v33 + 8 * (v31 + 3340)))(LODWORD(STACK[0x7E0]) ^ 0xE19B3C29);
  unint64_t v35 = STACK[0x258];
  STACK[0xA58] = v34 + 0x6BBE7547D3B34F0FLL;
  if (v34) {
    a31 = v32;
  }
  LODWORD(STACK[0xA64]) = a31;
  return (*(uint64_t (**)(void))(v35 + 8 * (((v34 != 0) * (((v31 - 417) ^ 0xA45) - 2501)) | v31)))();
}

uint64_t sub_10012F194@<X0>(void *a1@<X1>, int a2@<W2>, unsigned int a3@<W8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  unint64_t v39 = (*(_DWORD *)(a26 + 4 * (v35 + 1 + v29)) ^ v26)
      + HIDWORD(v36)
      + v27 * (unint64_t)(*(_DWORD *)(*a1 + 4 * (v35 + 1 + v29)) ^ v26);
  *(_DWORD *)(a26 + 4 * (v35 + v29)) = v39 + ((v37 - 288) ^ v38) - (v28 & (2 * v39));
  if (a3 > v30 != v35 + v31 < v33) {
    BOOL v40 = a3 > v30;
  }
  else {
    BOOL v40 = v35 + v31 < a2;
  }
  return (*(uint64_t (**)(void))(v32 + 8 * ((v40 * v34) ^ v37)))();
}

void sub_10012F218()
{
}

uint64_t sub_10012F358()
{
  return sub_10018BD08();
}

void sub_10012F378()
{
}

uint64_t sub_10012F388(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, unsigned int a15, uint64_t a16, unsigned int a17, int a18)
{
  unsigned int v24 = 366490169
      * (((&a15 | 0x6BE26AB4) - &a15 + (&a15 & 0x941D9548)) ^ 0x7D4C3CF0);
  a17 = v22 + 1870 + v24;
  a16 = a13;
  a15 = (v20 ^ 0xBEFDD3BD) + ((2 * v20) & 0x7DFBA77A) + 1436544852 + v24;
  (*(void (**)(unsigned int *))(v21 + 8 * (v22 ^ 0x1731)))(&a15);
  unsigned int v25 = 366490169
      * (((&a15 | 0x447AEA1A) - &a15 + (&a15 & 0xBB8515E0)) ^ 0x52D4BC5E);
  a15 = ((2 * HIDWORD(v19)) & 0xE93FFEB2) + v25 + (HIDWORD(v19) ^ 0x5B295407 ^ (v22 - 2441) & (v23 + 3583)) + 536724408;
  a16 = a13;
  a17 = v22 + 1870 + v25;
  (*(void (**)(unsigned int *))(v21 + 8 * (v22 + 3313)))(&a15);
  unsigned int v26 = 366490169 * ((&a15 & 0x76122DF4 | ~(&a15 | 0x76122DF4)) ^ 0x9F43844F);
  a15 = (v19 ^ 0xDE9DEB95) + ((2 * v19) & 0xBD3BD72A) + 905959292 + v26;
  a17 = v22 + 1870 + v26;
  a16 = a13;
  (*(void (**)(unsigned int *))(v21 + 8 * (v22 ^ 0x1731)))(&a15);
  unsigned int v27 = 366490169 * ((((2 * &a15) | 0xEB11DC1E) - &a15 + 175575537) ^ 0xE326B84B);
  a17 = v22 + 1870 + v27;
  a15 = (HIDWORD(v18) ^ 0x77FDFB39) + ((2 * HIDWORD(v18)) & 0xEFFBF672) - 1667250216 + v27;
  a16 = a13;
  (*(void (**)(unsigned int *))(v21 + 8 * (v22 ^ 0x1731)))(&a15);
  unsigned int v28 = 366490169 * ((&a15 - 829222525 - 2 * (&a15 & 0xCE931183)) ^ 0xD83D47C7);
  a17 = v22 + 1870 + v28;
  a16 = a13;
  a15 = (v18 ^ 0x969DFF9D) + ((2 * v18) & 0x2D3BFF3A) + 2113913716 + v28;
  uint64_t v29 = (*(uint64_t (**)(unsigned int *))(v21 + 8 * (v22 + 3313)))(&a15);
  return (*(uint64_t (**)(uint64_t))(v21 + 8 * (((4 * (a18 == 847203058)) | (16 * (a18 == 847203058))) ^ v22)))(v29);
}

uint64_t sub_10012F678@<X0>(uint64_t a1@<X8>)
{
  STACK[0x8E0] = *(void *)(v1 + 8 * a1);
  return sub_100162654();
}

uint64_t sub_10012F6A0@<X0>(int a1@<W8>)
{
  *(unsigned char *)(v2 + (v4 + v6)) = *(unsigned char *)(v3 + (v4 + v6));
  return (*(uint64_t (**)(void))(v1 + 8 * (((v6 - 1 != a1) | (32 * (v6 - 1 != a1))) ^ v5)))();
}

uint64_t sub_10012F6CC(uint64_t a1, int a2, int a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  if ((v9 + v8 + 1094911010) <= 0x40) {
    int v11 = 64;
  }
  else {
    int v11 = v9 + v8 + 1094911010;
  }
  BOOL v12 = __CFADD__(v9 + v8 + 1094911009, a8 + a3 + a4 + v11 + 2795);
  return (*(uint64_t (**)(void))(v10 + 8 * ((((a2 ^ 0x482) + ((a2 - 2009) | 0x40) - 4056) * v12) ^ a2)))();
}

uint64_t sub_10012F73C()
{
  *uint64_t v0 = 330117362;
  return sub_1001D3FF8();
}

uint64_t sub_10012F748(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, int a7)
{
  *(void *)(a6 + v9 - 8 + (v8 ^ (v7 + 13))) = *(void *)(a2 + v9 - 8 + (v8 ^ (v7 + 13)));
  return (*(uint64_t (**)(void))(v11 + 8 * (((v10 == -8) * a4) ^ a7)))();
}

uint64_t sub_10012F754@<X0>(int a1@<W4>, uint64_t a2@<X8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57)
{
  if (!a2) {
    return (*(uint64_t (**)(void))(v58 + 8 * ((924 * ((a13 - 202856323) > 0xF)) ^ (a1 + v60 - 148))))();
  }
  if (a2 != 3) {
    return (*(uint64_t (**)(void))(v58
  }
                                + 8
                                * ((198
                                  * ((*(_DWORD *)(v57 + 48 * v59 + 36) + 801075806 + a1 + 878946539 - 910) < 0x80000004)) ^ (a1 + 878946165))))();
  int v61 = v60 + a1;
  uint64_t v62 = (*(uint64_t (**)(uint64_t, uint64_t))(v57 + 48 * v59 + 8))(a5, a4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v58 + 8 * ((4782 * ((v62 ^ 0x7BFFCFFB) - 1233159433 + ((2 * v62) & 0xF7FF9FF6) == 847203058)) ^ v61)))(v62, v63, v64, v65, 3416021667, 3152076800, 2948559454, 1346407841, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13,
           a14,
           a15,
           a16,
           a17,
           a18,
           a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57);
}

void sub_10012F8EC()
{
}

uint64_t sub_10012F99C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,int a50)
{
  return (*(uint64_t (**)(void))(v51
                              + 8 * ((827 * (v50 == ((a50 + 1980607541) & 0x89F24BBB ^ 0x327F4B49))) ^ (a50 - 66))))();
}

uint64_t sub_10012F9EC@<X0>(char a1@<W0>, int a2@<W1>, int a3@<W3>, uint64_t a4@<X8>)
{
  unsigned int v10 = v8 + v7 + v9;
  uint64_t v11 = v5 + v10;
  long long v12 = *(_OWORD *)(v11 - 31);
  uint64_t v13 = a4 + v10;
  *(_OWORD *)(v13 - 15) = *(_OWORD *)(v11 - 15);
  *(_OWORD *)(v13 - 31) = v12;
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((92 * (((a1 - 79) ^ ((v6 & 0xFFFFFFE0) == 32)) & 1)) ^ (a2 + a3 + 2357))))();
}

void sub_10012FA4C(uint64_t a1)
{
  int v1 = *(_DWORD *)a1 - 142545853 * (a1 ^ 0x2AFFAF6F);
  uint64_t v2 = *(void *)(a1 + 32);
  uint64_t v3 = *(unint64_t **)(a1 + 8);
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = *(void *)(v2 - 0x6126FB94F213A29ELL);
  int v8 = *(unint64_t **)(a1 + 24);
  LODWORD(v9) = (366490169
               * (((&v8 | 0xE252B36D) - &v8 + (&v8 & 0x1DAD4C90)) ^ 0xF4FCE529)) ^ (v1 + 3486);
  uint64_t v12 = v2;
  uint64_t v13 = v4;
  uint64_t v10 = v5;
  uint64_t v11 = &STACK[0x49230D716B37AE14];
  int v6 = (char *)*(&off_100520A90 + (int)(v1 & 0xA719C4B0)) - 8;
  (*(void (**)(unint64_t **))&v6[8 * (v1 ^ 0x1039)])(&v8);
  uint64_t v7 = *(void *)(v2 - 0x6126FB94F213A2A6);
  int v8 = &STACK[0x49230D716B37AE24];
  uint64_t v9 = v7;
  LODWORD(v10) = v1 + 476588053 * (&v8 ^ 0xBDFD0443) + 506;
  (*(void (**)(unint64_t **))&v6[8 * (v1 ^ 0x103B)])(&v8);
  int v8 = v3;
  LODWORD(v9) = v1
              - 1437274309 * ((&v8 + 1476363640 - 2 * (&v8 & 0x57FF8578)) ^ 0x75F1F84D)
              + 1801;
  (*(void (**)(unint64_t **))&v6[8 * v1 + 32944])(&v8);
  __asm { BRAA            X8, X17 }
}

uint64_t sub_10012FC6C(uint64_t a1, int a2, int a3, int a4, uint64_t a5)
{
  *(void *)(a5 + (v6 + a2)) = *(void *)(v7 + (v6 + a2));
  return (*(uint64_t (**)(uint64_t, void))(v9 + 8 * ((((v5 ^ (a4 + a2 == 8)) & 1) * v8) ^ a3)))(a1, (a2 - 8));
}

uint64_t sub_10012FCA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, int a16, int a17)
{
  unsigned int v19 = (a17 ^ 0xDEC54B0B) - ((2 * (a17 ^ 0xDEC54B0B)) & 0xCCFC5412) - 427939319;
  return (*(uint64_t (**)(void))(v18
                              + 8
                              * ((125
                                * (((2 * v19) & 0xF3FFD7EC ^ 0xC0FC5400)
                                 + 1073569472
                                 + (v19 ^ (9 * ((v17 - 1836285289) & 0x6D736FB3 ^ 0xE6) + 528594272)) == 972901046)) ^ v17)))();
}

uint64_t sub_10012FD58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, unint64_t *a17, int a18, uint64_t a19, unsigned int a20,int a21,int a22)
{
  unsigned int v25 = 1314530549 * ((((2 * &a17) | 0x5AACE98) - &a17 + 2099943604) ^ 0x33DCE182);
  a18 = (v24 + 1780979301) ^ v25;
  a19 = a12;
  a17 = &STACK[0x70766EB78D2F3F28];
  a22 = v25 ^ 0x4EA001FB;
  a20 = -253718920 - v25;
  uint64_t v26 = (*(uint64_t (**)(unint64_t **))(v23 + 8 * (v24 + 2914)))(&a17);
  return (*(uint64_t (**)(uint64_t))(v23 + 8 * (((a21 == v22 + v24 + 810 - 2588) * (v24 - 1300)) ^ v24)))(v26);
}

void sub_10012FE2C()
{
}

void sub_10012FE34(uint64_t a1, uint64_t a2)
{
  __asm { BRAA            X11, X17 }
}

uint64_t sub_10012FE80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, int a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, unsigned int a20,uint64_t a21,unsigned int a22,int a23,uint64_t a24,unsigned int a25)
{
  BOOL v31 = v25 != 0;
  unsigned int v32 = 366490169 * ((2 * (&a20 & 0x66EA15D0) - &a20 + 420866604) ^ 0xFBBBC68);
  a21 = a19;
  a20 = (v28 ^ 0x559FF3FB) + ((v28 << (v30 - 75)) & 0xAB3FE7F6) - 1090662634 + v32;
  a22 = v30 + 2154 + v32;
  (*(void (**)(unsigned int *))(v29 + 8 * (v30 + 3597)))(&a20);
  unsigned int v33 = ((2 * (&a20 & 0x7FB4A010) - &a20 - 2142543896) ^ 0x47CA3FA1) * v26;
  a21 = a11;
  a25 = (v27 ^ 0xB2F7FB7F) + ((2 * v27) & 0x65EFF6FE) - v33 + 1866262249;
  a22 = v30 + 2963 + v33;
  a24 = a19;
  (*(void (**)(unsigned int *))(v29 + 8 * (v30 ^ 0x163C)))(&a20);
  unsigned int v34 = ((&a20 - 496005971 - 2 * (&a20 & 0xE26F8CAD)) ^ 0x25EEECE4) * v26;
  a24 = a19;
  a25 = (a13 ^ 0xA2BCFF6D) + ((2 * a13) & 0x4579FEDA) - v34 + 2138563323;
  a22 = v30 + 2963 + v34;
  a21 = a14;
  (*(void (**)(unsigned int *))(v29 + 8 * (v30 ^ 0x163C)))(&a20);
  unsigned int v35 = 366490169 * (&a20 ^ 0x16AE5644);
  a20 = ((v31 | (2 * v31)) ^ 0x95DDCFDD) + 2126508852 + v35;
  a22 = v30 + 2154 + v35;
  a21 = a19;
  (*(void (**)(unsigned int *))(v29 + 8 * (v30 ^ 0x1615)))(&a20);
  if (a15) {
    int v36 = 2109729628;
  }
  else {
    int v36 = 2109729626;
  }
  unsigned int v37 = ((a15 != 0) ^ 0x96DDD7B7) + v36;
  unsigned int v38 = 366490169 * (((&a20 | 0x2A4B65AB) - (&a20 & 0x2A4B65AB)) ^ 0x3CE533EF);
  a22 = v30 + 2154 + v38;
  a20 = v37 + v38;
  a21 = a19;
  uint64_t v39 = (*(uint64_t (**)(unsigned int *))(v29 + 8 * (v30 + 3597)))(&a20);
  return (*(uint64_t (**)(uint64_t))(v29 + 8 * ((2890 * (a23 == 847203058)) ^ v30)))(v39);
}

uint64_t sub_10013015C(uint64_t a1, int a2, int a3, int a4, uint64_t a5, int a6)
{
  unsigned int v9 = (((((a6 + 499213882) & 0xE23E9C7E) + 290) ^ 0xFEDF42EA) & (2 * (a4 + v7 + (a2 ^ a3) + 923)))
     + ((a4 + v7 + (a2 ^ a3) + 923) ^ 0x7F6FA3DE)
     - 705459788;
  unsigned int v10 = v8 + 557797839;
  int v11 = (v10 < 0x55632D92) ^ (v9 < 0x55632D92);
  BOOL v12 = v9 > v10;
  if (v11) {
    BOOL v12 = v9 < 0x55632D92;
  }
  return (*(uint64_t (**)(void))(v6 + 8 * ((233 * !v12) ^ a6)))();
}

uint64_t sub_100130208(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  int v18 = (v12 - 2079) | 0x2C8;
  int v19 = 31090337
      * ((-2 - (((v17 - 136) ^ 0x40092306 | 0xAEB6D4F9) + ((v17 - 136) ^ 0x2A48030 | 0x51492B06))) ^ 0x7AD33C80);
  *(void *)(v17 - 128) = v16;
  *(_DWORD *)(v17 - 136) = v15 + (v18 ^ 0x6609775D) + v19;
  *(_DWORD *)(v17 - 120) = (v12 - 1311) ^ v19;
  (*(void (**)(uint64_t))(v14 + 8 * (v12 + 2353)))(v17 - 136);
  *(void *)(v17 - 136) = v13;
  *(_DWORD *)(v17 - 124) = (v18 + 124) ^ (366490169
                                        * ((2 * ((v17 - 136) & 0x351252B0) - (v17 - 136) + 1257090380) ^ 0x5C43FB08));
  *(void *)(v17 - 120) = a12;
  uint64_t v20 = (*(uint64_t (**)(uint64_t))(v14 + 8 * (v18 + 3717)))(v17 - 136);
  return (*(uint64_t (**)(uint64_t))(v14
                                            + 8
                                            * (((*(_DWORD *)(v17 - 128) > 0x2FB2CDA1u)
                                              * ((((v18 + 87) | 0xA04) + 609) ^ 0x1095)) | v18)))(v20);
}

uint64_t sub_100130358(uint64_t a1, unint64_t a2, uint64_t a3, unsigned int a4)
{
  STACK[0x618] = a2;
  LODWORD(STACK[0x65C]) = (LODWORD(STACK[0x6F4]) - 2066693689) & 0x7B2F3EE7;
  LODWORD(STACK[0x700]) = 173444;
  LODWORD(STACK[0x6F4]) = 174106;
  LODWORD(STACK[0x6F0]) = 174768;
  LODWORD(STACK[0x6EC]) = 175430;
  LODWORD(STACK[0x6E0]) = 176092;
  LODWORD(STACK[0x6D8]) = 177416;
  LODWORD(STACK[0x6D0]) = 178078;
  LODWORD(STACK[0x6C8]) = 178740;
  LODWORD(STACK[0x6C4]) = 179402;
  LODWORD(STACK[0x650]) = 180064;
  LODWORD(STACK[0x6B8]) = 180726;
  LODWORD(STACK[0x6B0]) = 395876;
  LODWORD(STACK[0x6AC]) = 396538;
  LODWORD(STACK[0x6A0]) = 397200;
  LODWORD(STACK[0x698]) = 398524;
  LODWORD(STACK[0x690]) = 399186;
  LODWORD(STACK[0x68C]) = 399848;
  LODWORD(STACK[0x688]) = 400510;
  LODWORD(STACK[0x684]) = 401172;
  LODWORD(STACK[0x680]) = 401834;
  LODWORD(STACK[0x67C]) = 402496;
  LODWORD(STACK[0x670]) = 393228;
  LODWORD(STACK[0x66C]) = 397862;
  LODWORD(STACK[0x668]) = 176754;
  int v7 = STACK[0x648];
  int v8 = STACK[0x640];
  int v9 = STACK[0x644];
  int v10 = STACK[0x63C];
  int v11 = STACK[0x660];
  int v12 = STACK[0x664];
  LODWORD(STACK[0x660]) = STACK[0x660];
  LODWORD(STACK[0x648]) = 1514892500;
  LODWORD(STACK[0x62C]) = 403158;
  LODWORD(STACK[0x640]) = 171458;
  int v13 = LODWORD(STACK[0x65C]) - 1225;
  LODWORD(STACK[0x664]) = v13;
  LODWORD(STACK[0x624]) = 12174212;
  int v14 = ((v6[(v13 ^ 0xFF48D276)
           - 965 * (((((v13 ^ 0xFF48D276) + 12174212) * (unint64_t)a4) >> 32) >> 4)
           + 12174212] ^ 0x85) << 24) | ((v6[171458 - 965 * (((171458 * (unint64_t)a4) >> 32) >> 4)] ^ 0x85) << 16);
  LODWORD(STACK[0x628]) = 172120;
  int v15 = v14 | ((v6[172120 - 965 * (((172120 * (unint64_t)a4) >> 32) >> 4)] ^ 0x85) << 8);
  LODWORD(STACK[0x644]) = 404709 - 965 * (((403158 * (unint64_t)a4) >> 32) >> 4);
  LODWORD(STACK[0x630]) = 395214;
  LODWORD(STACK[0x63C]) = 172782;
  int v16 = v6[47] ^ 0xD3;
  LODWORD(STACK[0x634]) = 394552;
  int v17 = (v15 | v16) + 1438851876 - 2 * ((v15 | v16) & 0x55C3237F ^ v16 & 0xD) + 78;
  int v18 = v17 ^ (v10 - 1677358159);
  int v19 = (int *)STACK[0x708];
  *(_DWORD *)(STACK[0x708] + 392) = v18 ^ 0xABCECBC9;
  LODWORD(STACK[0x638]) = 393890;
  int v20 = v17 ^ (v4 - 2 * ((v4 + 354805694) & 0x55C32373 ^ v4 & 1) - 353826000);
  int v21 = v6[395214 - 965 * (((395214 * (unint64_t)a4) >> 32) >> 4)] ^ 0xD3;
  int v22 = ((v6[393228 - 965 * (LODWORD(STACK[0x670]) / 0x3C5)] ^ 0xD3) << 24) | ((v6[832] ^ 0xD3) << 8) | ((v6[170] ^ 0xD3) << 16) | v21;
  int v23 = v22 - 3823695 - 2 * (v22 & 0x7FC5A7BF ^ v21 & 0xE);
  int v24 = v11 - 430303458 + (v18 ^ 0x55C32324);
  *int v19 = v23 ^ v5 ^ 0x3EA7AB5;
  unsigned int v25 = 397862 - 965 * (LODWORD(STACK[0x66C]) / 0x3C5);
  unsigned int v26 = 393228 - 965 * (LODWORD(STACK[0x6A0]) / 0x3C5);
  int v27 = (((v7 ^ 0x2ED22F) + (v7 ^ 0x28BDF2EC ^ v23 ^ v5) + 1) ^ ((v5 ^ 0xD7568772) + (v23 ^ 0xFFC5A7B1) + 1) ^ ((v20 ^ 0xFFFFFFA9) + (v20 ^ v23 ^ v5 ^ 0xD76CDF6A) + 1))
      - v12;
  unsigned int v28 = v24 - 1907595110 - ((2 * v24 + 1938523682) & 0xA90D4B12);
  unsigned int v29 = 172120 - 965 * (LODWORD(STACK[0x6EC]) / 0x3C5);
  v19[260] = v27 - ((2 * v27 - 1154295476) & 0xA90D4B12) + 840962607;
  unsigned int v30 = 172120 - 965 * (LODWORD(STACK[0x6F0]) / 0x3C5);
  v19[254] = v28;
  int v31 = v10 + v9 - ((2 * (v10 + v9) + 1900187854) & 0x7057FA76) + 818759074;
  unsigned int v32 = ((2 * (v31 ^ (v4 - 1792677954))) & 0xC74749DA ^ 0x40474852) + (v31 ^ (v4 - 1792677954) ^ 0xDB8859D6);
  int v33 = ((v6[173444 - 965 * (LODWORD(STACK[0x700]) / 0x3C5)] ^ 0x85) << 24) | ((v6[174106
                                                                                 - 965 * (LODWORD(STACK[0x6F4]) / 0x3C5)] ^ 0x85) << 16) | ((v6[v30 + 2648] ^ 0x85) << 8);
  int v34 = v6[v29 + 3310] ^ 0xD3;
  int v35 = (v33 | v34) + 1908483328 - 2 * ((v33 | v34) & 0x71C1250D ^ v34 & 0xD);
  int v36 = v35 ^ (v32 - 912558696);
  v19[23] = v36 ^ 0x8FCCCDBB;
  unsigned int v37 = v8 - 887696484 + (v5 ^ 0x28A9788D) - 963186047 - ((2 * (v8 - 887696484 + (v5 ^ 0x28A9788D))) & 0x8D2DE502);
  int v38 = v37 ^ v7 ^ 0x3947DF51;
  int v39 = ((v32 - 1671668973) ^ (v9 - 593773386))
      - v32
      - ((2 * (((v32 - 1671668973) ^ (v9 - 593773386)) - v32) + 122112474) & 0x2E43739E)
      - 87728452;
  unsigned int v40 = v37 ^ v7 ^ 0xC6B820AE;
  int v41 = v40 + (v38 ^ (v8 - 887696484)) + 1 - ((2 * (v40 + (v38 ^ (v8 - 887696484)) + 1)) & 0x2C5BC4BE) - 1775377825;
  unsigned int v42 = (v31 ^ 0xB82BFD3B)
      + (v39 ^ 0x68DE4630)
      - 988119646
      - ((2 * ((v31 ^ 0xB82BFD3B) + (v39 ^ 0x68DE4630) + 1)) & 0x8A34FB42);
  unsigned int v43 = (v37 ^ 0xC696F281)
      + (v41 ^ 0x69D21DA0)
      + 1720076444
      - ((2 * ((v37 ^ 0xC696F281) + (v41 ^ 0x69D21DA0) + 1)) & 0xCD0C9136);
  int v44 = v38 - ((2 * v38 + 41825546) & 0x71C5FE4) - 1328723337;
  int v45 = *(unsigned __int8 *)(STACK[0x718] + v25) ^ 0xD3;
  int v46 = ((*(unsigned __int8 *)(STACK[0x718] + 395876 - 965 * (LODWORD(STACK[0x6B0]) / 0x3C5)) ^ 0xD3) << 24) | ((*(unsigned __int8 *)(STACK[0x718] + 396538 - 965 * (LODWORD(STACK[0x6AC]) / 0x3C5)) ^ 0xD3) << 16) | ((*(unsigned __int8 *)(STACK[0x718] + v26 + 3972) ^ 0xD3) << 8) | v45;
  int v47 = v46 - 1265280726 - 2 * (v46 & 0x3495592B ^ v45 & 1);
  v19[208] = v47 ^ v44 ^ 0xE39DD351;
  unsigned int v48 = 397862 - 965 * (LODWORD(STACK[0x688]) / 0x3C5);
  int v49 = v39 ^ (LODWORD(STACK[0x660]) - v32 + 1241365515);
  unsigned int v50 = 397862 - 965 * (LODWORD(STACK[0x68C]) / 0x3C5);
  int v51 = v41 ^ (v12 - 521313344 + v40 + 1);
  unsigned int v52 = (v51 ^ 0x69D21DA0)
      + (((v43 ^ 0x9979B764) + (v43 ^ 0x519D3E43 ^ v47 ^ v44) + 1) ^ ((v44 ^ 0x7C71D00D) + (v47 ^ 0xB495592A) + 1) ^ ((v35 ^ v42 ^ 0x4B24A708) + (v35 ^ v42 ^ v47 ^ v44 ^ 0x83C02E2F) + 1));
  unsigned int v53 = (v36 ^ 0x71C12556)
      + (v49 ^ 0x9721B9CF)
      + 319649263
      - ((2 * ((v36 ^ 0x71C12556) + (v49 ^ 0x9721B9CF)) + 2098045132) & 0xA90D4B12);
  unsigned int v54 = 397862 - 965 * (LODWORD(STACK[0x690]) / 0x3C5);
  v19[185] = v53;
  unsigned int v55 = 176754 - 965 * (LODWORD(STACK[0x6D0]) / 0x3C5);
  v19[179] = v52 - 1907595109 - ((2 * (v52 + 1) + 1938523682) & 0xA90D4B12);
  unsigned int v56 = v41 ^ 0xF0ABAAC4 ^ v43;
  int v57 = v43 ^ v51;
  unsigned int v58 = ((2 * ((v43 ^ 0x6686489B) + 1507285244)) & 0x9E73265E) + (((v43 ^ 0x6686489B) + 1507285244) ^ 0x4F39932F);
  int v59 = v56 + 1329173295 - v58 + 1330403503 + (~(2 * (v56 + 1329173295 - v58)) | 0x61674EA3);
  unsigned int v60 = (v44 ^ 0x838E2FF2) + 1329173295 - v58 - ((2 * ((v44 ^ 0x838E2FF2) + 1329173295 - v58)) & 0x3FFD716E);
  int v61 = v42 ^ v49;
  int v62 = v39 ^ 0x523BC46E ^ v42;
  unsigned int v63 = v42 ^ 0xC51A7DA1;
  int v64 = (((*(unsigned __int8 *)(STACK[0x718] + 176092 - 965 * (LODWORD(STACK[0x6E0]) / 0x3C5)) ^ 0x85) << 24) | ((*(unsigned __int8 *)(STACK[0x718] + 176754 - 965 * (LODWORD(STACK[0x668]) / 0x3C5)) ^ 0x85) << 16) | ((*(unsigned __int8 *)(STACK[0x718] + 177416 - 965 * (LODWORD(STACK[0x6D8]) / 0x3C5)) ^ 0x85) << 8) | *(unsigned __int8 *)(STACK[0x718] + v55 + 1324) ^ 0xD3) ^ v61;
  v19[231] = v64 ^ 0x6BA5A481;
  unsigned int v65 = ((2 * ((v42 ^ 0xC51A7DA1) + 1507285244)) & 0x7737BBFE) + (((v42 ^ 0xC51A7DA1) + 1507285244) ^ 0x3B9BDDFF);
  unsigned int v66 = v62 + 1000070655 - v65 - ((2 * (v62 + 1000070655 - v65)) & 0xF90F285C);
  unsigned int v67 = v60 + 536787127;
  unsigned int v68 = v32 - v65 - ((2 * (v32 - v65) + 175023918) & 0xC7476B76) - 388298414;
  unsigned int v69 = ((2 * (v58 - 1329173294 + ((v60 + 536787127) ^ 0xE0014748))) & 0xFDFDCFA0)
      + ((v58 - 1329173294 + ((v60 + 536787127) ^ 0xE0014748)) ^ 0x7EFEE7D0);
  int v70 = v68 ^ v61;
  int v71 = ((*(unsigned __int8 *)(STACK[0x718] + 398524 - 965 * (LODWORD(STACK[0x698]) / 0x3C5)) ^ 0xD3) << 24) | ((*(unsigned __int8 *)(STACK[0x718] + v54 + 1324) ^ 0xD3) << 16);
  int v72 = v67 ^ v57;
  int v73 = (v68 ^ 0x1C5C4A44) + v63 - ((2 * ((v68 ^ 0x1C5C4A44) + v63) + 867086842) & 0x26E37692) - 313977786;
  int v74 = (v71 | ((*(unsigned __int8 *)(STACK[0x718] + v50 + 1986) ^ 0xD3) << 8) | *(unsigned __int8 *)(STACK[0x718] + v48 + 2648) ^ 0xD3) ^ v57;
  v19[133] = v74 ^ 0xE3BE8719;
  unsigned int v75 = (v73 ^ v68 ^ v61 ^ v74 ^ 0xEA2E17F3) + (v64 ^ 0x8079A460 ^ v73 ^ v68 ^ v61 ^ v74);
  unsigned int v76 = (v74 ^ 0x37382290)
      + (v61 ^ 0x95A84C3A)
      + 319649263
      - ((2 * ((v74 ^ 0x37382290) + (v61 ^ 0x95A84C3A)) + 2098045132) & 0xA90D4B12);
  unsigned int v77 = 404709 - 965 * (LODWORD(STACK[0x67C]) / 0x3C5);
  unsigned int v78 = 397862 - 965 * (LODWORD(STACK[0x680]) / 0x3C5);
  unsigned int v79 = (v57 ^ 0xC8C7DD6F)
      + (((v67 ^ v57 ^ 0x10AAED8C) + (v67 ^ v57 ^ v64 ^ 0x7AFD5E1F) + 1) ^ (2130634704
                                                                          - v69
                                                                          + ((v69 - 2130634704) ^ v64 ^ 0x95A84C6C)) ^ (v75 + 1));
  unsigned int v80 = 397862 - 965 * (LODWORD(STACK[0x684]) / 0x3C5);
  v19[110] = v76;
  unsigned int v81 = 176754 - 965 * (LODWORD(STACK[0x6B8]) / 0x3C5);
  unsigned int v82 = v66 - 58223570;
  unsigned int v83 = v70 ^ 0xB19871D5;
  v19[104] = v79 - 1907595109 - ((2 * (v79 + 1) + 1938523682) & 0xA90D4B12);
  unsigned int v84 = (((v66 - 58223570) ^ 0x3786BD1) + (v70 ^ 0xB19871D5) + 1) ^ v68;
  int v85 = (STACK[0x5E4] & (2 * v84) ^ LODWORD(STACK[0x5E0])) + (v84 ^ 0x478FC8AA);
  unsigned int v86 = ((2 * ((v68 ^ 0x24303DEF) - 1196423713)) & 0xFD50AFFE) + (((v68 ^ 0x24303DEF) - 1196423713) ^ 0x7EA857FF);
  v72 ^= 0xEF551273;
  unsigned int v87 = v69 - 2130634704 + v72;
  unsigned int v88 = ((2 * (((v59 ^ 0xB0B3A751) + v72 + 1) ^ v67)) & 0xDDFFBEB2 ^ 0x90DA2082)
      + (((v59 ^ 0xB0B3A751) + v72 + 1) ^ v67 ^ 0x3692EFBA);
  unsigned int v89 = (v73 ^ 0x9371BB49) + v83;
  unsigned int v90 = (v82 ^ 0xFD2F3BBA) - v85;
  unsigned int v91 = (v59 ^ 0x4EE4F73A) - v88;
  unint64_t v92 = STACK[0x718];
  int v93 = (((*(unsigned __int8 *)(STACK[0x718] + 178740 - 965 * (LODWORD(STACK[0x6C8]) / 0x3C5)) ^ 0x85) << 24) | ((*(unsigned __int8 *)(STACK[0x718] + 179402 - 965 * (LODWORD(STACK[0x6C4]) / 0x3C5)) ^ 0x85) << 16) | ((*(unsigned __int8 *)(STACK[0x718] + 180064 - 965 * (LODWORD(STACK[0x650]) / 0x3C5)) ^ 0x85) << 8) | *(unsigned __int8 *)(STACK[0x718] + v81 + 3972) ^ 0xD3) ^ (v90 + 1673524549);
  int v94 = v93 - 1521576935 - ((2 * v93) & 0x4A9D289E) + 54;
  v19[156] = v94 ^ 0x5B437CF4;
  unsigned int v95 = v86 - 2124961791 + (v94 ^ 0xA54E9419);
  int v96 = (((*(unsigned __int8 *)(v92 + v80 + 3310) ^ 0xD3) << 24) | ((*(unsigned __int8 *)(v92 + v78 + 3972) ^ 0xD3) << 16) | ((*(unsigned __int8 *)(v92 + v77 - 2213) ^ 0xD3) << 8) | *(unsigned __int8 *)(v92 + (LODWORD(STACK[0x644]) - 1551)) ^ 0xD3) ^ (v91 - 285221031);
  unsigned int v97 = v96 - 729373303 - ((2 * v96) & 0xA90D4B12);
  int v98 = (v89 - v90 - 1673524549) ^ (v85 - 1673524549) ^ v94;
  unsigned int v99 = ((-285221031 - (v87 - v91) + ((v87 - v91 + 285221031) ^ 0xD486A589 ^ v97)) ^ (-285221031
                                                                                    - v88
                                                                                    + ((v88 + 285221031) ^ 0xD486A589 ^ v97)) ^ ((v98 ^ 0x5AB16BE6) + (v98 ^ v97 ^ 0x71C83190) + 1))
      - (((2 * ((v67 ^ 0xD86D30E3) - 1196423713)) & 0x75DFFFFC)
       + (((v67 ^ 0xD86D30E3) - 1196423713) ^ 0xBAEFFFFE));
  v19[58] = v97;
  v19[35] = v99 - ((2 * v99 - 219307832) & 0xA90D4B12) - 839027219;
  int v100 = STACK[0x648];
  v19[29] = v95 - 1907595110 - ((2 * v95 + 1938523682) & 0xA90D4B12);
  return (*(uint64_t (**)(void))(STACK[0x6F8]
                              + 8 * (LODWORD(STACK[0x65C]) ^ (16 * ((v100 & 0x7FFFFFF0) != 1514892496)))))();
}

uint64_t sub_100131850(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,int a50)
{
  return (*(uint64_t (**)(void))(v51 + 8 * ((1725 * (v50 == a50 + 847200552)) ^ (a50 - 2361))))();
}

uint64_t sub_10013188C()
{
  STACK[0x408] = v2 + (v3 ^ 0x1C07u) - 4101 + 898;
  STACK[0x7F0] = v1 + 80;
  STACK[0x810] = v0;
  STACK[0x3C8] = 0;
  STACK[0x4A8] = 0;
  STACK[0x790] = 0;
  LODWORD(STACK[0x5F4]) = v5;
  LODWORD(STACK[0x694]) = 0;
  STACK[0x568] = 0;
  STACK[0x508] = 0;
  LODWORD(STACK[0x8EC]) = v5;
  uint64_t v7 = (*(uint64_t (**)(void))(v6 + 8 * (v3 ^ 0x1F2C)))();
  return (*(uint64_t (**)(uint64_t))(STACK[0x258] + 8 * (v3 ^ ((4 * (v4 == v5)) | (16 * (v4 == v5))))))(v7);
}

uint64_t sub_10013191C()
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((5348
                                * (*(unsigned __int8 *)((v2 | ((unint64_t)(v2 < v1) << 32)) + v4 - 1635646276) == ((118 * (v0 ^ 0x60) - 116) & 0xFE))) ^ v0)))();
}

uint64_t sub_10013197C(int a1, uint64_t a2)
{
  *(_DWORD *)(*(void *)(v4 + 96) + 1428) = 1500630210;
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((4193 * (*(_DWORD *)(a2 + 4) == ((39 * (a1 ^ 0x21F)) ^ (v2 + 2239)) + (a1 ^ 0x64A))) ^ a1)))();
}

uint64_t sub_1001319E0()
{
  BOOL v4 = (*(uint64_t (**)(void))(v3 + 8 * (v2 ^ 0x176B)))(v0 ^ v1) == 0;
  return (*(uint64_t (**)(void))(v3 + 8 * ((v4 * ((((v2 - 1359) | 0xE33) - 2533) ^ (26 * (v2 ^ 0x57C)))) ^ v2)))();
}

uint64_t sub_100131A40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18)
{
  return (*(uint64_t (**)(void))(v19 + 8 * ((1080 * (a18 == v18 - 4983 + ((v18 + 2349) | 0x90))) | (v18 - 346))))();
}

void sub_100131AAC(uint64_t a1)
{
  int v1 = 476588053 * ((-2 - ((a1 | 0x197F8855) + (~a1 | 0xE68077AA))) ^ 0x5B7D73E9);
  int v2 = *(_DWORD *)(a1 + 64) ^ v1;
  BOOL v4 = *(_OWORD *)(a1 + 24) == 0 || *(_DWORD *)(a1 + 40) + v1 == 1958355756;
  __asm { BRAA            X8, X17 }
}

uint64_t sub_100131C18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, int a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,int a33,unsigned int a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,int a42,char a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,int a52)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, char *, uint64_t, void, uint64_t))(v52 + 8 * (((a14 + ((2 * a52) & 0x3C ^ 0x34) + (a52 & 0x3F ^ 0xDFD16F45) < 0xFFFFFFC0) * (((v53 - 187) | 0x998) + 290)) ^ (v53 + 1135))))(a1, 3749199718, 3480993412, 3141441976, &a43, a37, a34, 11004);
}

uint64_t sub_100131CC8(uint64_t a1, uint64_t a2, int a3)
{
  unsigned int v12 = v7 + v6 + v9 - v10;
  int8x8_t v13 = vrev64_s8(*(int8x8_t *)(v4 - 7 + v12));
  *(int8x8_t *)(v3 - 7 + v12) = vrev64_s8(vadd_s8(vsub_s8(v13, vand_s8(vadd_s8(v13, v13), (int8x8_t)0xC0C0C0C0C0C0C0C0)), (int8x8_t)0x6060606060606060));
  return (*(uint64_t (**)(void))(v11 + 8 * (((v10 - (v5 & 0xFFFFFFF8) == -8) * (a3 - 1470)) ^ a3)))(v8 - (v5 & 0xFFFFFFF8));
}

void sub_100131D38()
{
}

uint64_t sub_100131D84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,char a39)
{
  int v43 = *(_DWORD *)a25 + a14;
  uint64_t v44 = *(void *)(*(void *)(a25 + 16) - 0x3E8923C4CCFEA042);
  int v45 = 142545853 * ((((v42 - 168) | 0x6A831735) - ((v42 - 168) & 0x6A831735)) ^ 0x407CB85A);
  int v46 = (void *)(v42 - 208);
  v46[5] = &a39;
  *(_DWORD *)(v42 - 1memset((void *)(STACK[0x7D8] + 8), 91, 48) = (52186511 * v43 - 2092565693) ^ v45;
  *(_DWORD *)(v42 - 160) = v40
                         - v45
                         - (((((3 * (v39 ^ 0x4C0) - 2584) | 0xA18) ^ 0x76CDB5EE) + 2 * v40) & 0x7CEA8506)
                         - 103014291;
  *(_DWORD *)(v42 - 152) = v39 - v45 + 1404;
  v46[10] = &STACK[0x6038FCF4A9270045];
  v46[11] = v42 + 0x6209C59847B5CBCALL;
  v46[8] = &STACK[0x79411A163AB7F6B8];
  v46[9] = v44;
  uint64_t v47 = (*(uint64_t (**)(uint64_t))(v41 + 8 * (v39 + 4600)))(v42 - 168);
  return (*(uint64_t (**)(uint64_t))(v41 + 8 * ((2996 * (*(_DWORD *)(v42 - 156) == 847203058)) ^ v39)))(v47);
}

uint64_t sub_100131EFC()
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((7036 * (v0 < (((v2 ^ 0xCCD) + 892800344) & 0xCAC8F4CF ^ (v1 + 2331)))) ^ ((v2 ^ 0xCCD) + 2233))))();
}

uint64_t sub_100131F5C@<X0>(uint64_t a1@<X0>, int a2@<W4>, _DWORD *a3@<X8>)
{
  uint64_t v7 = a2 ^ 0x156Bu;
  *(void *)(*(void *)(a1 + 32) - 0x28CA3575C94E241CLL) = v6 + v5 - 4149 + v7;
  return (*(uint64_t (**)(void))(v3 + 8 * (int)(((*a3 == v4 + 269 * (a2 ^ 0x552)) * ((v7 - 1) ^ 0x1172)) ^ v7)))();
}

uint64_t sub_100131FD4@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  *(unsigned char *)(a2 + v4 + a1) = v3;
  return (*(uint64_t (**)(void))(v6 + 8 * ((((unint64_t)(v4 + 1 + a1) < 0x40) * v5) ^ v2)))();
}

uint64_t sub_100132000(uint64_t a1)
{
  int v1 = 476588053 * ((a1 & 0x9AF34757 | ~(a1 | 0x9AF34757)) ^ 0xD8F1BCEB);
  int v2 = *(_DWORD *)(a1 + 12) ^ v1;
  int v3 = *(_DWORD *)(a1 + 8) - v1;
  if (v3 < 0) {
    int v3 = -v3;
  }
  int v4 = *(_DWORD *)(*(void *)a1 - 0x49230D716B37AE00);
  unsigned int v6 = v4 - 330117362;
  BOOL v5 = v4 - 330117362 < 0;
  unsigned int v7 = 330117362 - v4;
  if (!v5) {
    unsigned int v7 = v6;
  }
  return (*((uint64_t (**)(void))*(&off_100520A90 + (int)(v2 & 0xC8AA3C10))
          + (((v3 >> 5 >= v7) * ((v2 ^ 0x6F) - 355)) ^ v2)
          - 1))();
}

uint64_t sub_1001320C0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (((*(unsigned __int8 *)(v2 + a1) == ((v1 - 2068690269) & 0xB5 ^ 0x65))
                                * ((v1 ^ 0xF1F) + 828)) ^ v1)))();
}

uint64_t sub_100132114(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55)
{
  int v58 = 1761959447 * ((((v57 - 192) | 0xACB59A4B) - (v57 - 192) + ((v57 - 192) & 0x534A65B0)) ^ 0xD125B8F);
  *(void *)(v57 - 192) = 0x24987FFE453361BCLL;
  *(void *)(v57 - 184) = a54;
  *(_DWORD *)(v57 - 160) = 1807697499 - v58;
  *(_DWORD *)(v57 - 156) = v58 + v55 + 268;
  *(void *)(v57 - 168) = a55;
  uint64_t v59 = (*(uint64_t (**)(uint64_t))(v56 + 8 * (v55 + 4289)))(v57 - 192);
  BOOL v60 = *(_DWORD *)(v57 - 176) != (((v55 - 421) | 6) ^ 0x327F4ADD);
  return (*(uint64_t (**)(uint64_t))(v56 + 8 * (((2 * v60) | (16 * v60)) ^ v55)))(v59);
}

uint64_t sub_100132214(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(unsigned char *)(a5 + v5 + v7) = v8;
  return (*(uint64_t (**)(void))(v10
                              + 8
                              * (((v5 + 1 + v7 < (((3 * (v6 ^ 0xF36) - 673) | 0xFu) ^ 0xFFuLL)) * v9) ^ (3 * (v6 ^ 0xF36)))))();
}

void sub_100132258()
{
}

uint64_t sub_100132264@<X0>(uint64_t a1@<X0>, uint64_t a2@<X6>, uint64_t a3@<X7>, uint64_t a4@<X8>)
{
  unsigned int v10 = v7 + v6 + 1074020832;
  uint64_t v11 = (char *)(*(void *)(a4 + 24) + v10);
  char v12 = *v11;
  unint64_t v13 = ((1554976193 * v11) ^ ((1554976193 * v11) >> 16)) * (v4 + 1554974444);
  *(unsigned char *)(a1
           + ((v5 - 272459386) ^ 0x3FF577F9FFFFFBABLL)
           - 0x3FF577F9FFFFFBABLL
           + ((2 * (v5 - 272459386)) & 0x1FFFFF756)
           + v10) = *(unsigned char *)(v8 + (v13 >> 24)) ^ v12 ^ *(unsigned char *)((v13 >> 24) + a2 + 3) ^ *(unsigned char *)(a3 + (v13 >> 24)) ^ v13 ^ (-61 * BYTE3(v13));
  return (*(uint64_t (**)(void))(v9 + 8 * ((3241 * (v10 == 0)) ^ v4)))();
}

uint64_t sub_100132338(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char *a15, char a16, __int16 a17, char a18, uint64_t a19, char *a20,char *a21,uint64_t a22,uint64_t a23)
{
  HIDWORD(a19) = (v24 - 1394) ^ (((2 * (&a19 & 0x50D4BE28) - &a19 - 1356119598) ^ 0x1E22C71C)
                               * v23);
  a20 = a15;
  a21 = &a18;
  uint64_t v26 = (*(uint64_t (**)(uint64_t *))(v25 + 8 * (v24 + 964)))(&a19);
  return sub_1001BFE88(v26, v27, v28, v29, v30, v31, v32, v33, a9, a10, a11, a12, a13, a14, a15, a16, a19, a20, a21,
           a22,
           a23);
}

uint64_t sub_1001323A0(uint64_t a1)
{
  int v1 = 142545853 * ((((2 * (a1 ^ 0x8D5EE424)) | 0x8943A33E) - (a1 ^ 0x8D5EE424) - 1151455647) ^ 0xE3009AD4);
  int v2 = *(_DWORD *)(a1 + 12) - v1;
  int v3 = *(_DWORD *)(a1 + 8) ^ v1;
  unsigned int v5 = v3 - 2071753216;
  BOOL v4 = v3 - 2071753216 < 0;
  LODWORD(v6) = 2071753216 - v3;
  if (v4) {
    uint64_t v6 = v6;
  }
  else {
    uint64_t v6 = v5;
  }
  return (*((uint64_t (**)(void))*(&off_100520A90 + (v2 & 0x20A3E1F0))
          + (((v6 != ((2 * v6) & 0xB9C15A8C)) * (v2 ^ 0x1226)) ^ v2)
          - 1))();
}

uint64_t sub_100132464(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,unsigned int *a63)
{
  int v67 = 67 * (v63 ^ 0x90E);
  int v68 = v67 + 1298;
  (*(void (**)(void, unint64_t, void))(v65 + 8 * (v67 + 3538)))(*a63, STACK[0x460], LODWORD(STACK[0x3C4]));
  uint64_t v69 = LODWORD(STACK[0x4A4]);
  unint64_t v70 = 673918253
      * (((v64 ^ 0x10811040200C0400 | 0x6756EFBFD573DB97) + (v64 ^ 0x754480DD1314205 | 0x98A910402A8C2468)) ^ 0x59BC74886B755DACLL);
  *(_DWORD *)(v66 - 160) = v70 ^ 0x127 ^ (v68 - 656074277);
  *(_DWORD *)(v66 - 156) = v70 + v68 - 1479742338;
  *(_DWORD *)(v66 - 192) = ((v68 - 656074277) ^ 0xE) - v70;
  *(_DWORD *)(v66 - 188) = -673918253
                         * (((v64 ^ 0x200C0400 | 0xD573DB97) + (v64 ^ 0xD1314205 | 0x2A8C2468)) ^ 0x6B755DAC);
  *(void *)(v66 - 184) = v69 - v70;
  *(void *)(v66 - 176) = v70 ^ 0x327EA6CC;
  *(_DWORD *)(v66 - 168) = v68 - 656074277 + v70;
  uint64_t v71 = (*(uint64_t (**)(uint64_t))(v65 + 8 * (v68 + 2352)))(v66 - 192);
  return (*(uint64_t (**)(uint64_t))(v65 + 8 * *(int *)(v66 - 164)))(v71);
}

uint64_t sub_10013258C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19, unsigned int a20)
{
  _DWORD *v21 = 0;
  int v24 = (v22 + v20 + 3722) | 0x80E;
  int v25 = v20 - 1175887652;
  a20 = v20
      + 31090337 * ((2 * (&a19 & 0x640C49A0) - &a19 - 1678526886) ^ 0x5C72D613)
      + 479501299;
  uint64_t v26 = (*(uint64_t (**)(int *))(v23 + 8 * (v20 - 1175886377)))(&a19);
  return (*(uint64_t (**)(uint64_t))(v23 + 8 * (((a19 == 847203058) * (v24 ^ 0xDB5)) ^ v25)))(v26);
}

uint64_t sub_100132640(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, int a6)
{
  *(void *)(a1 - 7 + v11 + v10 + v8 - a3 + (((a6 - 306) | 0x49) ^ (v7 + 573))) = *(void *)(v6 - 7 + v11 + v10 + v8 - a3 + (((a6 - 306) | 0x49) ^ (v7 + 573)));
  return (*(uint64_t (**)(void))(v12 + 8 * ((2918 * (a3 - (v9 & 0xFFFFFFF8) == -8)) ^ a6)))();
}

uint64_t sub_1001326A4(uint64_t a1, uint64_t a2)
{
  STACK[0x290] = (unint64_t)&STACK[0x2D38AEF1714F9D51];
  STACK[0x288] = (unint64_t)&STACK[0xAF9FC6E884DCCAD];
  STACK[0x280] = (unint64_t)&STACK[0xBCAA1B950D46CEA];
  STACK[0x278] = (unint64_t)&STACK[0x4C7FAEDEB1F756E5];
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 8 * ((v2 + 775) ^ (27 * ((v5 & 8) == 0))));
  uint64_t v7 = (uint64_t)*(&off_100520A90 + v2 - 2330);
  LODWORD(STACK[0x2E4]) = v4;
  STACK[0x208] = v7 - 12;
  return v6(a1, a2, 847203058);
}

uint64_t sub_100132894(uint64_t a1, uint64_t a2)
{
  if (v2 == -1774961291 || v2 == 803783422 || v2 == -1658334551) {
    return sub_10013294C(190, 1696185511, -1696185511);
  }
  else {
    return sub_1001326A4(a1, a2);
  }
}

uint64_t sub_10013294C@<X0>(char a1@<W0>, int a2@<W3>, int a3@<W8>)
{
  int v14 = *(uint64_t (**)(void))(v13 + 8 * v9);
  uint64_t v15 = (a2 + a3);
  *(unsigned char *)(v4 + v15) = *(unsigned char *)(v12 + (v15 & 0xC)) ^ HIBYTE(v7) ^ *(unsigned char *)(v11 + (v15 & 0xC) + 1) ^ (((a2 + a3) & 0xC) * v3) ^ *(unsigned char *)(v10 + (v15 & 0xC)) ^ 0xEE;
  *(unsigned char *)(v4 + (v15 + 1)) = (((v15 + 1) & v5) * v3) ^ BYTE2(v7) ^ *(unsigned char *)(v12
                                                                                            + ((v15 + 1) & v5)) ^ *(unsigned char *)(((v15 + 1) & v5) + v11 + 1) ^ *(unsigned char *)(v10 + ((v15 + 1) & v5)) ^ v6;
  *(unsigned char *)(v4 + (v15 + 2)) = (((v15 + 2) & 0xE) * v8) ^ BYTE1(v7) ^ *(unsigned char *)(v12
                                                                                             + (((int)v15 + 2) & 0xELL)) ^ *(unsigned char *)(v11 + (((int)v15 + 2) & 0xELL) + 1) ^ *(unsigned char *)(v10 + (((int)v15 + 2) & 0xELL)) ^ a1;
  *(unsigned char *)(v4 + (v15 + 3)) = v7 ^ ((v15 + 3) * v3) ^ *(unsigned char *)(v12 + (v15 + 3)) ^ *(unsigned char *)((v15 + 3) + v11 + 1) ^ *(unsigned char *)(v10 + (v15 + 3)) ^ 0xC3;
  return v14();
}

void sub_100132A24(uint64_t a1)
{
  int v1 = 1314530549 * (((a1 | 0x3860236) - (a1 & 0x3860236)) ^ 0xB28F84F8);
  int v2 = *(_DWORD *)(a1 + 24) - v1;
  uint64_t v3 = *(void *)(a1 + 48);
  uint64_t v4 = *(void *)(a1 + 32);
  unsigned int v5 = 1761959447 * ((v9 - 779490397 - 2 * (v9 & 0xD189EBA3)) ^ 0x702E2A67);
  unsigned int v6 = (*(_DWORD *)(a1 + 16) ^ v1) - v5;
  int v7 = (*(_DWORD *)(a1 + 40) ^ v1) - 1117025187;
  uint64_t v10 = *(void *)(a1 + 8);
  int v11 = v2 - v5 - 1172903482;
  uint64_t v13 = v3;
  uint64_t v14 = v4;
  uint64_t v12 = v4;
  v9[0] = v6 + 5833136;
  v9[1] = v7 ^ v5;
  char v8 = (char *)*(&off_100520A90 + (v2 ^ 0x2FA)) - 8;
  (*(void (**)(_DWORD *))&v8[8 * (v2 ^ 0x106A)])(v9);
  __asm { BRAA            X8, X17 }
}

uint64_t sub_100132B90(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(uint64_t))(v6 + 8 * ((19 * (v3 - v5 >= (((a3 ^ 0x7A3u) - 621) ^ 0xB9DuLL))) ^ a3)))(v4);
}

uint64_t sub_100132BCC(double a1, int8x16_t a2)
{
  int8x16_t v6 = (int8x16_t)vld1q_dup_f32((const float *)v5);
  v7.i64[0] = 0x8000000080000000;
  v7.i64[1] = 0x8000000080000000;
  a2.i64[0] = *(void *)(v5 + 4);
  a2.i32[2] = *(_DWORD *)(v5 + 12);
  int8x16_t v8 = vextq_s8(v6, a2, 0xCuLL);
  int8x16_t v9 = a2;
  v9.i32[3] = *(_DWORD *)(v5 + 16);
  int32x4_t v10 = (int32x4_t)veorq_s8((int8x16_t)vshrq_n_u32((uint32x4_t)vorrq_s8(vandq_s8(v9, *(int8x16_t *)&STACK[0x240]), vandq_s8(v8, v7)), 1uLL), *(int8x16_t *)(v5 + 1588));
  v8.i32[0] = *(_DWORD *)(v3 + 4 * (*(_DWORD *)(v5 + 4) & 1));
  v8.i32[1] = *(_DWORD *)(v3 + 4 * (*(_DWORD *)(v5 + 8) & 1));
  v8.i32[2] = *(_DWORD *)(v3 + 4 * (*(unsigned int *)(v5 + 12) & ((v4 + 876361033) & 0xCBC3C7FF ^ 0x6CFLL)));
  v8.i32[3] = *(_DWORD *)(v3 + 4 * (v9.i8[12] & 1));
  *(int8x16_t *)uint64_t v5 = veorq_s8((int8x16_t)vaddq_s32(vsubq_s32(v10, (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v10, v10), *(int8x16_t *)&STACK[0x230])), *(int32x4_t *)&STACK[0x220]), v8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v2 + 8 * (v4 - 760)))(2561467711, 827968126, 37, 876361793, 3418605567, 1743);
}

uint64_t sub_100132BD4(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v4 + 8 * (a3 ^ (108 * ((unint64_t)(v3 - a1) < 0x20)))))();
}

uint64_t sub_100132C14@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57)
{
  LODWORD(STACK[0x318]) = a1;
  uint64_t v60 = (*(uint64_t (**)(uint64_t, void))(v59 + 8 * (v58 ^ 0x2EC)))(a57, 0);
  uint64_t v61 = *(void *)(v57 + 16);
  *(_DWORD *)(v57 + 4) = *(_DWORD *)(v57 + 24);
  *(_DWORD *)(v57 + 8) = v61;
  *(_DWORD *)(v57 + 12) = (*(uint64_t (**)(uint64_t))(v59 + 8 * (v58 + 502)))(v60);
  *(_DWORD *)uint64_t v57 = (*(uint64_t (**)(void))(v59 + 8 * (v58 + 502)))();
  return sub_100132CA4();
}

uint64_t sub_100132CA4()
{
  *(_DWORD *)(v6 + 4 * (v1 - 2110422519)) = *(_DWORD *)(v3 + 4 * (v4 - 826979246))
                                                          + v4
                                                          - 826979246
                                                          + ((1664525
                                                            * (*(_DWORD *)(v6 + 4 * (v1 - 2110422520)) ^ (*(_DWORD *)(v6 + 4 * (v1 - 2110422520)) >> 30))) ^ *(_DWORD *)(v6 + 4 * (v1 - 2110422519)));
  unint64_t v8 = 1314530549 * ((v7 + 0x47822D71FF1C504 - 2 * ((v7 - 192) & 0x47822D71FF1C5C4)) ^ 0xA35DA24AAEF8430ALL);
  *(_DWORD *)(v7 - 192) = v8 + v2 - 849015350;
  *(void *)(v7 - 184) = v8 + v0;
  *(_DWORD *)(v7 - 164) = (v2 - 743929213) ^ v8;
  *(_DWORD *)(v7 - 160) = v8 + 1;
  *(_DWORD *)(v7 - 172) = ((v2 - 743929213) ^ 0x2F) - v8;
  *(_DWORD *)(v7 - 168) = ((v2 - 743929213) | 0x120) ^ v8;
  *(void *)(v7 - 152) = (v1 + 91979140) ^ v8;
  uint64_t v9 = (*(uint64_t (**)(uint64_t))(v5 + 8 * (v2 + 2294)))(v7 - 192);
  return (*(uint64_t (**)(uint64_t))(v5 + 8 * *(int *)(v7 - 176)))(v9);
}

uint64_t sub_100132DC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, int a16, int a17)
{
  return (*(uint64_t (**)(void))(v18
                              + 8
                              * (int)(((a17 != 0) * ((v17 ^ 0x755) - 5177 + ((v17 + 1963293385) & 0x8AFA90E9))) ^ v17)))();
}

uint64_t sub_100132E38@<X0>(unint64_t a1@<X8>)
{
  int v3 = v2;
  int v4 = v2 - 721;
  unint64_t v5 = STACK[0x3C8];
  STACK[0x528] = *(void *)(v1 + 8 * (v3 - 2391));
  STACK[0x588] = v5;
  LODWORD(STACK[0x594]) = 1398910436;
  STACK[0x4B8] = a1;
  int v6 = ((*(_DWORD *)(v5 - 0x560E26B5DF241DE0) << (v4 + 77)) & 0x3E ^ 0x36)
     + (*(_DWORD *)(v5 - 0x560E26B5DF241DE0) & 0x3F ^ 0xBEBCFBC4)
     + 1094910959 >= v4 - 1780;
  return (*(uint64_t (**)(void))(v1 + 8 * (v6 | (v6 << 6) | v4)))();
}

uint64_t sub_100132E48@<X0>(uint64_t a1@<X8>)
{
  int v6 = STACK[0x2D8];
  int v7 = *(unsigned __int8 *)(v1 + (v2 + v5)) ^ 0x60;
  int v8 = ((*(unsigned __int8 *)(v1 + (LODWORD(STACK[0x2D8]) ^ 0xD62 ^ (v5 - 1915)) + v2) ^ 0x60) << 16) | ((*(unsigned __int8 *)(v1 + (v2 + v5 + 3)) ^ 0x60) << 24) | v7 | ((*(unsigned __int8 *)(v1 + (v2 + v5 + 1)) ^ 0x60) << 8);
  *(_DWORD *)(a1 + ((v2 + v5) & 0xFFFFFFFC)) = v8 + v3 - 2 * (v8 & 0x5EC54B1B ^ v7 & 0x10);
  return (*(uint64_t (**)(void))(v4 + 8 * ((5241 * ((v2 + 4 + v5) < 0x40)) ^ v6)))();
}

uint64_t sub_100132EF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unint64_t *a13, int a14, char a15, unint64_t *a16, unint64_t *a17, unint64_t *a18, unsigned int a19)
{
  a19 = v19
      + 1761959447 * ((1052982622 - (&a16 | 0x3EC33D5E) + (&a16 | 0xC13CC2A1)) ^ 0x609B0365)
      + 166305656;
  a17 = &STACK[0x132CF3C980285A37];
  a18 = &STACK[0x28CA3575C94E2434];
  a16 = a13;
  (*(void (**)(unint64_t **))(v20 + 8 * (v19 ^ 0x1865)))(&a16);
  HIDWORD(a16) = (v19 - 459) ^ (((1923298840 - (&a16 | 0x72A33618) + (&a16 | 0x8D5CC9E7)) ^ 0x3C554F29)
                              * v22);
  a17 = a13;
  a18 = (unint64_t *)&a15;
  (*(void (**)(unint64_t **))(v20 + 8 * (v19 + 1899)))(&a16);
  LODWORD(a18) = v19
               - 476588053
               * ((2 * ((&a16 ^ 0x39282E8A) & 0x45E9EDAA) - (&a16 ^ 0x39282E8A) + 974525008) ^ 0xBEC33899)
               - 116;
  a17 = a13;
  uint64_t v23 = (*(uint64_t (**)(unint64_t **))(v20 + 8 * (v19 + 1932)))(&a16);
  return (*(uint64_t (**)(uint64_t))(v20
                                            + 8 * (((a16 == v21) * (((v19 - 1699) | 0x901) ^ 0x1781)) ^ v19)))(v23);
}

uint64_t sub_10013309C()
{
  BOOL v4 = v1 + v0 + 6 * (v2 ^ 0x1319u) + 100666800 < ((v2 - 2310) | 0x22u) - 2346;
  return (*(uint64_t (**)(void))(v3 + 8 * (((2 * v4) | (8 * v4)) ^ v2)))();
}

uint64_t sub_1001330F8(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(void))(v9
                              + 8 * ((916 * ((v8 & 0x18) == a8 + 1976 + a3 + ((a8 - 318931427) & 0xFFABD7FF))) ^ a8)))();
}

uint64_t sub_100133144(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, void))(v11
                                                                      + 8
                                                                      * ((((((a8 + 212) ^ 0xE9E) & v8) == 0)
                                                                        * ((a8 - 3169727) & 0x62FFF0FC ^ (v10 + 614))) ^ a8)))(a1, a2, a3, (v9 - a3));
}

uint64_t sub_10013318C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,int a32,unsigned int a33)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v34 + 8 * (((a2 == 847203058) * ((61 * (v33 ^ 0x7A2) + 672214303) ^ 0x28112DA4)) ^ (61 * (v33 ^ 0x7A2)))))(a1, a2, a3, a4, a33, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22);
}

uint64_t sub_1001331F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, unint64_t *a15, int a16, uint64_t a17, int a18, int a19, int a20)
{
  int v23 = 1314530549 * ((&a15 + 571040682 - 2 * ((unint64_t)&a15 & 0x220963AA)) ^ 0x9300E564);
  a17 = a14;
  a15 = &STACK[0x70766EB78D2F3F18];
  a16 = (v22 + 1780980661) ^ v23;
  a20 = v23 ^ 0x4EA001FB;
  a18 = 1533133339 - v23;
  uint64_t v24 = (*(uint64_t (**)(unint64_t **))(v20 + 8 * (v22 ^ 0x13F6)))(&a15);
  return (*(uint64_t (**)(uint64_t))(v20
                                            + 8 * ((1207 * (a19 == v21 + ((v22 - 1019228643) & 0x3CC036FD))) ^ v22)))(v24);
}

uint64_t sub_1001332E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)(a1 - 7 + (v3 + v2 - v5)) = *(void *)(a2 - 7 + (v3 + v2 - v5));
  return (*(uint64_t (**)(void))(v8
                              + 8
                              * ((563 * (((v6 - 2095710650) & (v7 + 2953) ^ 0x33D) + v5 == (v4 & 0xFFFFFFF8))) ^ v6)))();
}

uint64_t sub_100133340()
{
  unsigned int v3 = v0 - ((2 * v0) & 0xCCFC5400) + (v2 ^ 0xEB9) - 427939321;
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((7
                                * ((((797 * (v2 ^ 0xEB9)) ^ 0xF3FFD1DA) & (2 * v3) ^ 0xC0FC5400)
                                 + (v3 ^ 0x1F81C1FF)
                                 + 1073569472 != 972901046)) ^ v2)))();
}

uint64_t sub_100133408(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  int v19 = a6 - 2476;
  int v20 = a6 ^ 0xD6B;
  int v21 = a6 - 483;
  unint64_t v22 = STACK[0x8B0];
  int v23 = 366490169 * ((2 * ((v17 - 224) & 0x38A68390) - (v17 - 224) + 1197046895) ^ 0x51F72A2B);
  *(void *)(v17 - 224) = STACK[0x7A0];
  *(_DWORD *)(v17 - 208) = 232514966 - v23;
  *(void *)(v17 - 200) = v22;
  *(void *)(v17 - 192) = a16;
  *(_DWORD *)(v17 - 216) = v23 + 62870437;
  *(_DWORD *)(v17 - 212) = (a6 + 160) ^ v23;
  uint64_t v24 = (*(uint64_t (**)(uint64_t))(v18 + 8 * (a6 ^ 0x1B48)))(v17 - 224);
  unint64_t v25 = STACK[0x258];
  int v26 = *(_DWORD *)(v17 - 204);
  LODWORD(STACK[0x944]) = v26;
  return (*(uint64_t (**)(uint64_t))(v25 + 8 * (((v26 == (v20 ^ (v16 + 865))) * (v19 ^ 0xFF0)) ^ v21)))(v24);
}

uint64_t sub_1001334DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, unsigned int a20,int a21,uint64_t a22)
{
  a19 = 116 - -11 * ((~&a19 & 0x79 | &a19 & 0x86) ^ 0xB7);
  a20 = (v22 + 38) ^ (1314530549 * ((~&a19 & 0x16BB6379 | &a19 & 0xE9449C86) ^ 0xA7B2E5B7));
  a22 = v25;
  uint64_t v26 = (*(uint64_t (**)(char *))(v23 + 8 * (v22 + 2353)))(&a19);
  return (*(uint64_t (**)(uint64_t))(v23 + 8 * (((a21 == (v22 ^ 0x42 ^ (v24 - 2014))) * (v22 ^ 0x9E6)) | v22)))(v26);
}

uint64_t sub_100133588@<X0>(uint64_t a1@<X7>, uint64_t a2@<X8>)
{
  uint64_t v8 = (v3 + v5);
  int v9 = (unsigned char *)(v2 + v8);
  uint64_t v10 = a2 + v8;
  unint64_t v11 = ((unint64_t)(v2 + v8) >> ((17 * (v4 ^ 0xAD)) ^ 0xDFu)) | ((unint64_t)(v2 + v8) >> 3 << 59);
  unint64_t v12 = -2
      - (((0x43E6EC4BB22236C0 - v11) | 0xB71CF6FFCD1271E0)
       + ((v11 - 0x43E6EC4BB22236C1) | 0x48E3090032ED8E1FLL));
  unint64_t v13 = v12 ^ 0xD1D3ECB31EA50F22;
  v12 ^= 0x311B7111704B46DFuLL;
  uint64_t v14 = __ROR8__(v13, 8);
  uint64_t v15 = (((2 * (v14 + v12)) | 0x637437079B386776) - (v14 + v12) + 0x4E45E47C3263CC45) ^ 0x1315023A18299EEALL;
  uint64_t v16 = v15 ^ __ROR8__(v12, 61);
  uint64_t v17 = __ROR8__(v15, 8);
  uint64_t v18 = (((2 * (v17 + v16)) | 0x362B1E45ADE98900) - (v17 + v16) + 0x64EA70DD290B3B80) ^ 0x6B2EB369CFA415A0;
  uint64_t v19 = v18 ^ __ROR8__(v16, 61);
  uint64_t v20 = __ROR8__(v18, 8);
  uint64_t v21 = (v20 + v19 - ((2 * (v20 + v19)) & 0x1BA33F065997E4CALL) + 0xDD19F832CCBF265) ^ 0x1228FDE77948B5BBLL;
  uint64_t v22 = v21 ^ __ROR8__(v19, 61);
  uint64_t v23 = __ROR8__(v21, 8) + v22;
  uint64_t v24 = __ROR8__(v10, 8);
  unint64_t v25 = (v24 & 0xF8FFFFFFFFFFFFFFLL)
      - ((2 * (v24 & 0xF8FFFFFFFFFFFFFFLL) + 0xDFD0B9FD022AFF4) & 0xD8985EBA3B690D6ALL)
      - 0xCB54AD2FA3A2151;
  unint64_t v26 = (((2 * v23) | 0x8DC2617F2695273ELL) - v23 + 0x391ECF406CB56C61) ^ 0xC0BDA179AD72E0C0;
  uint64_t v27 = __ROR8__(v25 ^ 0x8AA708BEA589F983, 8);
  unint64_t v28 = v26 ^ __ROR8__(v22, 61);
  v25 ^= 0xBD5326C1E5034653;
  unint64_t v29 = (v27 + v25 - ((2 * (v27 + v25)) & 0x4A92D5B868A41F46) - 0x5AB69523CBADF05DLL) ^ 0x89E175EC64B95E05;
  unint64_t v30 = v29 ^ __ROR8__(v25, 61);
  uint64_t v31 = __ROR8__(v29, 8);
  unint64_t v32 = (__ROR8__(v26, 8) + v28) ^ 0x84B2A778D3090F50;
  unint64_t v33 = v32 ^ __ROR8__(v28, 61);
  unint64_t v34 = (((2 * (v31 + v30)) | 0x86699B2FBAAC49B0) - (v31 + v30) + 0x3CCB326822A9DB28) ^ 0xE7B024452470FBA6;
  unint64_t v35 = v34 ^ __ROR8__(v30, 61);
  uint64_t v36 = (__ROR8__(v34, 8) + v35) ^ 0x57E1E3748093A023;
  uint64_t v37 = v36 ^ __ROR8__(v35, 61);
  uint64_t v38 = __ROR8__(v36, 8) + v37;
  uint64_t v39 = (__ROR8__(v32, 8) + v33) ^ 0x8FDC6648463A364;
  unint64_t v40 = (-2 - ((~v38 | 0x1F66CB9469B26B0ELL) + (v38 | 0xE099346B964D94F1))) ^ 0x8A3C7A120EF22F69;
  unint64_t v41 = v40 ^ __ROR8__(v37, 61);
  uint64_t v42 = __ROR8__(v40, 8);
  uint64_t v43 = __ROR8__(v39, 8) + (v39 ^ __ROR8__(v33, 61));
  uint64_t v44 = (((2 * ((v42 + v41) ^ 0x2430823F6277E2B4)) | 0x2882EBB9B685C46CLL)
       - ((v42 + v41) ^ 0x2430823F6277E2B4)
       + 0x6BBE8A2324BD1DCALL) ^ 0x8217CE00A930216;
  uint64_t v45 = v44 ^ __ROR8__(v41, 61);
  uint64_t v46 = __ROR8__(v44, 8);
  *(unsigned char *)(v10 - 0x114F96AE92DAEAC2) = (((__ROR8__((-2- ((~(v46 + v45) | 0x5D69728CA8D67D40)+ ((v46 + v45) | 0xA2968D73572982BFLL))) ^ 0xFF8E3A9BD1C9CF55, 8)+ ((-2- ((~(v46 + v45) | 0x5D69728CA8D67D40)+ ((v46 + v45) | 0xA2968D73572982BFLL))) ^ 0xFF8E3A9BD1C9CF55 ^ __ROR8__(v45, 61))) ^ a1) >> (8 * (v10 & 7u))) ^ *v9 ^ (((-2 - ((~v43 | 0x1ACB2B46DB6CFD25) + (v43 | 0xE534D4B9249302DALL))) ^ 0xB40E3700DE0E293ELL) >> (8 * (v9 & 7u)));
  return (*(uint64_t (**)(void))(v7 + 8 * ((v3 - 1 != v6) ^ (v4 - 184))))();
}

uint64_t sub_100133A7C@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,int a43)
{
  unint64_t v44 = STACK[0xA70] + (a1 ^ v43) - 0x79503A3BEBD437F6;
  BOOL v45 = v44 < 0xD87AF6C3;
  BOOL v46 = v44 > STACK[0xA68] + 3631937219u;
  if (STACK[0xA68] > 0xFFFFFFFF2785093CLL != v45) {
    BOOL v46 = v45;
  }
  return (*(uint64_t (**)(void))(STACK[0x258] + 8 * ((104 * !v46) ^ (a43 - 657))))();
}

uint64_t sub_100133B1C()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((101
                                * ((((((v1 ^ 0xFD3) + 1665813511) & 0x9CB5B7F7 ^ 0x25B93ABB) + (v1 ^ 0xFD3) + 944) ^ v0)
                                 + 2145226454
                                 + ((2 * v0) & 0xC7F5F2DE ^ 0x84858216) == 1675135045)) ^ v1 ^ 0xFD3)))();
}

uint64_t sub_100133BA4@<X0>(uint64_t a1@<X8>)
{
  (*(void (**)(uint64_t))(v2 + 8 * (v1 + 3006)))(a1);
  *(void *)(STACK[0x670] + 24) = 0;
  return sub_100133BC8();
}

uint64_t sub_100133BC8()
{
  uint64_t v3 = (*(uint64_t (**)(void))(v2 + 8 * (v0 + 4481)))();
  unint64_t v4 = STACK[0x258];
  STACK[0x670] = 0;
  return (*(uint64_t (**)(uint64_t))(v4
                                            + 8
                                            * (((v1 + ((v0 + 3184) ^ 0x8E1) == 847204515)
                                              * (179 * ((v0 + 3184) ^ 0xD5E) - 1917)) ^ (v0 + 3184))))(v3);
}

uint64_t sub_100133C30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, int a16, int a17)
{
  if (a11) {
    BOOL v19 = a17 == (v17 ^ 0xCFE) - 557496136;
  }
  else {
    BOOL v19 = 1;
  }
  int v21 = v19 || a12 == 0;
  return (*(uint64_t (**)(void))(v18 + 8 * ((v21 * ((5 * (v17 ^ 0xCFE)) ^ 0xB86)) ^ v17)))();
}

uint64_t sub_100133C90(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, void))(v5
                                                             + 8
                                                             * ((((v3 - 432515576) & 0x19C7AFFF ^ (v3 + 118))
                                                               * (v2 == v4)) ^ v3)))(a1, a2, (v3 + 1758132104));
}

uint64_t sub_100133CD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unsigned int a13, uint64_t a14, unsigned int a15, int a16)
{
  unsigned int v20 = 366490169 * (((&a13 | 0xA6EDCB56) - (&a13 & 0xA6EDCB56)) ^ 0xB0439D12);
  a13 = (v18 ^ 0xF6FFF3B9) + ((2 * v18) & 0xEDFFE772) + 496881496 + v20;
  a14 = a11;
  a15 = v20 + 3254;
  (*(void (**)(unsigned int *))(v19 + 37576))(&a13);
  unsigned int v21 = 366490169 * ((&a13 - 1858959415 - 2 * (&a13 & 0x913287C9)) ^ 0x879CD18D);
  a13 = (HIDWORD(v17) ^ 0x1DBFF317) + ((2 * HIDWORD(v17)) & 0x3B7FE62E) - 153235462 + v21;
  a15 = v21 + 3254;
  a14 = a11;
  (*(void (**)(unsigned int *))(v19 + 37576))(&a13);
  unsigned int v22 = 366490169
      * ((((2 * (&a13 ^ 0x8F2F4516)) | 0xD4887536) - (&a13 ^ 0x8F2F4516) + 364627301) ^ 0x73C529C9);
  a13 = (v17 ^ 0x15DFC711) + ((2 * v17) & 0x2BBF8E22) - 21103616 + v22;
  a15 = v22 + 3254;
  a14 = a11;
  (*(void (**)(unsigned int *))(v19 + 37576))(&a13);
  unsigned int v23 = 366490169 * ((2 * (&a13 & 0x739C5560) - &a13 - 1939625319) ^ 0x9ACDFCDD);
  a13 = (v16 ^ 0x94FDFB33) + ((2 * v16) & 0x29FBF666) + 2141177822 + v23;
  a15 = v23 + 3254;
  a14 = a11;
  (*(void (**)(unsigned int *))(v19 + 37576))(&a13);
  unsigned int v24 = 366490169
      * ((((&a13 | 0x1D219444) ^ 0xFFFFFFFE) - (~&a13 | 0xE2DE6BBB)) ^ 0xF4703DFF);
  a14 = a11;
  a15 = v24 + 3254;
  a13 = v24 + 345883409;
  uint64_t v25 = (*(uint64_t (**)(unsigned int *))(v19 + 37576))(&a13);
  return (*(uint64_t (**)(uint64_t))(v19 + 8 * ((69 * (a16 != 847203058)) ^ 0xD36u)))(v25);
}

uint64_t sub_100133FC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v7
                              + 8 * ((208 * (v6 - a1 < 63 * (a5 ^ 0x1053u) + (a5 ^ v5 ^ 0xFFFFFFFFB9672627))) ^ a5)))();
}

uint64_t sub_100134010@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, char a4, uint64_t a5, unint64_t *a6, int a7, unsigned int a8, unint64_t *a9)
{
  unsigned int v12 = (((&a4 | 0xC51BBFB2) - &a4 + (&a4 & 0x3AE44048)) ^ 0x5F53A41A) * a1;
  a5 = v11;
  a6 = &STACK[0x132CF3C980285A37];
  a7 = v12 + v10 + 2910;
  a8 = v12 + 383197636;
  a9 = &STACK[0x28CA3575C94E241C];
  uint64_t v13 = (*(uint64_t (**)(char *))(v9 + 8 * (v10 + 3452)))(&a4);
  return (*(uint64_t (**)(uint64_t))(v9
                                            + 8
                                            * ((32 * (*(_DWORD *)(v11 - 0x69166E42B329955BLL) == 847203058)) | ((*(_DWORD *)(v11 - 0x69166E42B329955BLL) == 847203058) << 11) | v10)))(v13);
}

uint64_t sub_1001340E8@<X0>(unsigned int a1@<W8>)
{
  uint64_t v3 = a1;
  uint64_t v4 = a1 - 346915912;
  if ((unint64_t)(v4 + 1) > 0x38) {
    uint64_t v5 = v4 + 1;
  }
  else {
    uint64_t v5 = 56;
  }
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((((((v1 + 671155257) | 0x102002) - 672214448) ^ 0x10D)
                                * ((unint64_t)(v5 - v3 + 346915912) < 8)) ^ v1)))();
}

void sub_10013416C(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 8) ^ (366490169 * (a1 ^ 0x16AE5644));
  __asm { BRAA            X15, X17 }
}

void sub_10013429C(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, unsigned int a19, uint64_t a20,int a21)
{
  unsigned int v23 = 142545853 * (((&a19 | 0x214C1260) - (&a19 & 0x214C1260)) ^ 0xBB3BD0F);
  a20 = a10;
  a21 = (v21 + 1650) ^ v23;
  a19 = ((2 * a1) & 0x76FE97E6) - v23 + (a1 ^ (v21 + 1573942832) & 0xA22F8B57 ^ 0x3B7F41E2) - 150995201;
  (*(void (**)(unsigned int *))(v22 + 8 * (v21 + 2474)))(&a19);
  JUMPOUT(0x100134350);
}

uint64_t sub_1001343E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char *a15, uint64_t a16, int a17, char a18, uint64_t a19, unint64_t *a20,char *a21,char *a22,uint64_t a23,unint64_t *a24)
{
  LODWORD(a21) = (v24 + 3265) ^ (1401278017
                               * (((&a20 | 0xF6C4DAE2)
                                 - &a20
                                 + (&a20 & 0x93B2518)) ^ 0xF2E7AC05));
  a22 = a15;
  a24 = &STACK[0x72B1F83D1B5D1C8D];
  a20 = &STACK[0x5C6E4E9DBA245381];
  (*(void (**)(unint64_t **))(v26 + 8 * (v24 ^ 0x1036u)))(&a20);
  a21 = a15;
  a22 = &a18;
  HIDWORD(a20) = (v24 + 1790) ^ (((-1404848974 - (&a20 | 0xAC43B4B2) + (&a20 | 0x53BC4B4D)) ^ 0xE2B5CD83)
                               * v25);
  (*(void (**)(unint64_t **))(v26 + 8 * (v24 ^ 0x1034u)))(&a20);
  LODWORD(a22) = v24
               - 476588053 * (((&a20 | 0x743A68C7) + (~&a20 | 0x8BC59738)) ^ 0xC9C76C85)
               + 2133;
  a21 = a15;
  uint64_t v28 = (*(uint64_t (**)(unint64_t **))(v26 + 8 * (v24 | 0x1055u)))(&a20);
  return (*(uint64_t (**)(uint64_t))(v26
                                            + 8
                                            * (((a20 == (v24 ^ 0x65C ^ (v27 + 954)))
                                              * (((v24 - 511) | 0x55C) ^ 0x191)) ^ v24)))(v28);
}

uint64_t sub_100134590(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,unsigned int a60)
{
  unint64_t v61 = STACK[0x4B0];
  STACK[0x358] = STACK[0x4B0];
  STACK[0x438] = 0;
  LODWORD(STACK[0x3EC]) = 473457775;
  STACK[0x398] = 0;
  LODWORD(STACK[0x44C]) = 473457775;
  STACK[0x2E8] = 0;
  return (*(uint64_t (**)(void))(v60
                              + 8
                              * (((((v61 == 0) ^ (a60 - 12)) & 1)
                                * ((a60 - 1141909818) & 0x44102FAD ^ 0x9B7)) ^ a60)))();
}

uint64_t sub_100134608@<X0>(uint64_t a1@<X5>, int a2@<W8>)
{
  int v7 = *(_DWORD *)((char *)&STACK[0x2C4] + ((v5 + a2) & 0xFFFFFFFC) + 72);
  *(unsigned char *)(a1 + (v5 + a2 + 2)) = (BYTE1(v7) ^ 0xB7) - ((2 * (BYTE1(v7) ^ 0xB7)) & 0xC0) + 96;
  *(unsigned char *)(a1 + (v5 + a2)) = (HIBYTE(v7) ^ 0x4A)
                                           - 2 * ((HIBYTE(v7) ^ 0x4A) & ((v3 + 112) ^ 0xE1) ^ HIBYTE(v7) & 1)
                                           + 96;
  *(unsigned char *)(a1 + (v5 + a2 + 1)) = (BYTE2(v7) ^ 0xA3)
                                               - 2 * ((BYTE2(v7) ^ 0xA3) & 0x68 ^ BYTE2(v7) & 8)
                                               + 96;
  *(unsigned char *)(a1 + (v5 + a2 + 3)) = v7 ^ 0x58;
  unsigned int v8 = LODWORD(STACK[0x320]) + 1482440251;
  BOOL v9 = v8 < v2;
  BOOL v10 = v5 + 1245081917 < v8;
  if (v5 + 1245081917 < v2 != v9) {
    BOOL v10 = v9;
  }
  return (*(uint64_t (**)(void))(v6 + 8 * ((v10 * v4) ^ v3)))();
}

uint64_t sub_100134700(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,int a50)
{
  return (*(uint64_t (**)(void))(v52 + 8 * (((a50 ^ 0x1592) * (v50 == v51)) ^ (a50 + 902))))();
}

uint64_t sub_10013472C(unsigned int *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,_DWORD *a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,int a38,int a39)
{
  *a24 = a39 + 1;
  uint64_t v43 = *a1;
  unint64_t v44 = 1314530549 * ((v42 - 0x426085F067DB087 - 2 * ((v42 - 144) & 0xFBD9F7A0F9825009)) ^ 0x5CFC773D488BD6C7);
  int v45 = (v39 - 1079042721) ^ v44;
  *(void *)(v42 - 104) = v44 ^ 0x13FF;
  *(_DWORD *)(v42 - 144) = v44 + v39 - 2002525279;
  *(_DWORD *)(v42 - 116) = v45;
  *(_DWORD *)(v42 - 112) = v44 + 1;
  *(_DWORD *)(v42 - 124) = ((v39 - 1079042721) ^ 6) - v44;
  *(_DWORD *)(v42 - 120) = v45 ^ 0x128;
  *(void *)(v42 - 136) = v43 + v44;
  uint64_t v46 = (*(uint64_t (**)(uint64_t))(v40 + 8 * (v39 + v41)))(v42 - 144);
  return (*(uint64_t (**)(uint64_t))(v40 + 8 * *(int *)(v42 - 128)))(v46);
}

uint64_t sub_100134804(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, unint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, unsigned int a19, unint64_t a20,unsigned int a21,unint64_t a22)
{
  unsigned int v26 = 366490169
      * (((&a19 | 0xEF596E11) - &a19 + (&a19 & 0x10A691E8)) ^ 0xF9F73855);
  a20 = a14;
  a19 = (v24 ^ 0x76FFC7BF) + ((2 * v24) & 0xEDFF8F7E) - 1650590894 + v26;
  a21 = v26 + 3254;
  (*(void (**)(unsigned int *))(v25 + 37576))(&a19);
  unsigned int v27 = 366490169 * (&a19 ^ 0x16AE5644);
  a20 = a14;
  a21 = v27 + 3254;
  a19 = ((2 * v23) & 0x39BFB6AA) + (v23 ^ 0x9CDFDB55) + 2008934332 + v27;
  (*(void (**)(unsigned int *))(v25 + 37576))(&a19);
  uint64_t v28 = 366490169
      * ((((2 * (void)&a19) | 0x1EA760D0E49605D6) - (void)&a19 - 0xF53B068724B02EBLL) ^ 0x25CD057C64E554AFLL);
  a20 = (v22 ^ 0xEFDF678E9B7AECEDLL) + ((2 * v22) & 0xDFBECF1D36F5D9DALL) - v28 + 0x57FCB87FFEEDDF9CLL;
  a21 = 894 - v28;
  a22 = a14;
  (*(void (**)(unsigned int *))(v25 + 37920))(&a19);
  unint64_t v29 = 366490169
      * (((~(unint64_t)&a19 | 0xD738EE5FFBD38DF4) + ((unint64_t)&a19 | 0x28C711A0042C720BLL)) ^ 0x259A4B41282244ELL);
  a22 = a14;
  a21 = 894 - v29;
  a20 = (a12 ^ 0x47FDA07F9E6CDCCFLL) + ((2 * a12) & 0x8FFB40FF3CD9B99ELL) - v29 - 0x21807104041046;
  uint64_t v30 = (*(uint64_t (**)(unsigned int *))(v25 + 37920))(&a19);
  return (*(uint64_t (**)(uint64_t))(v25 + 8 * ((1785 * (a19 == 847203058)) ^ 0x1C3u)))(v30);
}

uint64_t sub_100134AC4(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, int a7)
{
  uint64_t v12 = v8 - 8 + (((a7 + 2256) | a4) ^ (v7 + 3386));
  *(void *)(a6 + v12) = *(void *)(a3 + v12);
  return (*(uint64_t (**)(void))(v11 + 8 * (((v9 == -8) * v10) ^ a7)))();
}

uint64_t sub_100134AD0(__n128 a1, __n128 a2, __n128 a3, __n128 a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, unsigned int a18, unsigned int a19, uint64_t a20,uint64_t a21,uint64_t a22,int a23,int a24,uint64_t a25,uint64_t a26,unsigned int a27)
{
  v28.n128_u64[0] = 0xC0C0C0C0C0C0C0C0;
  v28.n128_u64[1] = 0xC0C0C0C0C0C0C0C0;
  v29.n128_u64[0] = 0x6060606060606060;
  v29.n128_u64[1] = 0x6060606060606060;
  return (*(uint64_t (**)(uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, __n128, __n128, __n128, __n128, __n128, __n128))(v27 + 8 * (((((a24 + 2419) | 0x221) ^ ((a24 + 2545) | 0x1A3) ^ 0x9E4) * (a19 < a18)) ^ a24)))(1697324316, 1175337306, a27, a8, 3296787513, 3650327327, 1051571936, 3787055824, a1, a2, a3, a4, v28, v29);
}

uint64_t sub_100134B70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, unsigned int a14, uint64_t a15, int a16)
{
  a15 = v16;
  a14 = 1697562443 * (&a13 ^ 0xD7903884) + 699;
  a13 = a11;
  uint64_t v19 = (*(uint64_t (**)(uint64_t *))(v17 + 38336))(&a13);
  return (*(uint64_t (**)(uint64_t))(v17 + 8 * ((8 * (((a16 == v18) ^ 0x15) & 1)) ^ 0x816u)))(v19);
}

uint64_t sub_100134C08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, int a16)
{
  return (*(uint64_t (**)(void))(v16 + 8 * ((615 * (a16 == 0)) ^ v17)))();
}

uint64_t sub_100134C74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(void))(v7
                              + 8
                              * (((*(_DWORD *)(a4 + 48 * a6 + 36) + 962926070 < ((v6 + 706608600) & 0xFDF32ECA)
                                                                                + 1475268921)
                                * ((v6 ^ 0x38C) + 1408)) ^ v6)))();
}

uint64_t sub_100134CE8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  *(unsigned char *)(a1 + (v3 - 1651939598) + 4) = (**(unsigned char **)(a2 + 8) ^ 0x7F) + 2 * **(unsigned char **)(a2 + 8) - 96;
  unsigned int v4 = *(_DWORD *)(a2 + 4) - 1377523872;
  BOOL v5 = v4 > 0xCA1D0BD0;
  if (v4 < 0xCA1D0BCF) {
    BOOL v5 = 1;
  }
  return (*(uint64_t (**)(void))(a3 + 8 * ((1065 * v5) ^ 0x83C)))();
}

uint64_t sub_100134DA8()
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((30 * ((((v2 + v1 - 2011160557) < 8) ^ (v0 - 32)) & 1)) ^ v0)))();
}

void sub_100134E10(uint64_t a1@<X8>)
{
  int v7 = v3 + 330;
  unint64_t v8 = STACK[0x4A8];
  int v9 = 476588053 * ((((v5 - 224) ^ 0x156BE18D | 0x3E3C86D) - (((v5 - 224) ^ 0x156BE18D) & 0x3E3C86D)) ^ 0xAB752DA3);
  *(_DWORD *)(v5 - 172) = v9 + v7 - 794292616;
  *(_DWORD *)(v5 - 224) = (v2 ^ 0x8B072A11) - v9;
  *(_DWORD *)(v5 - 200) = (((2 * v4) & 0xFB5FF572) - 556388368 + ((v7 + 2108683031) ^ v4)) ^ v9;
  *(void *)(v5 - 216) = v1;
  *(void *)(v5 - 208) = v8;
  *(void *)(v5 - 192) = a1;
  *(void *)(v5 - 184) = a1;
  (*(void (**)(uint64_t))(v6 + 8 * (v7 + 2818)))(v5 - 224);
  JUMPOUT(0x100128A5CLL);
}

uint64_t sub_100134EEC@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  int v19 = a1 + 1555;
  int v20 = ((v18 + 1335042884 - 2 * ((v18 - 144) & 0x4F9323D4)) ^ 0x593D7590) * v12;
  *(_DWORD *)(v18 - 124) = v13 - v20 + ((a1 + 1555) ^ 0xAA5CDA0E);
  *(_DWORD *)(v18 - 144) = (a1 - 1244) ^ v20;
  *(void *)(v18 - 120) = v16;
  *(void *)(v18 - 136) = v17;
  (*(void (**)(uint64_t))(v14 + 8 * (a1 ^ 0x186Du)))(v18 - 144);
  *(void *)(v18 - 128) = a9;
  *(void *)(v18 - 144) = v15;
  *(_DWORD *)(v18 - 136) = (v19 - 1316) ^ (1401278017
                                         * (((v18 - 144) & 0xAA475026 | ~((v18 - 144) | 0xAA475026)) ^ 0x519BD93E));
  (*(void (**)(uint64_t))(v14 + 8 * (v19 ^ 0x2B9u)))(v18 - 144);
  *(void *)(v18 - 112) = a9;
  *(void *)(v18 - 104) = a10;
  *(void *)(v18 - 128) = v15;
  *(void *)(v18 - 120) = v16;
  *(void *)(v18 - 136) = a8;
  *(_DWORD *)(v18 - 144) = v19 + 142545853 * ((v18 - 144) ^ 0x2AFFAF6F) - 3552;
  uint64_t v21 = (*(uint64_t (**)(uint64_t))(v14 + 8 * (v19 + 597)))(v18 - 144);
  return (*(uint64_t (**)(uint64_t))(v14 + 8 * ((((v19 ^ 0x1FC0) - 4020) * (a12 != 0)) ^ v19)))(v21);
}

uint64_t sub_100135054()
{
  return sub_1001DC45C();
}

uint64_t sub_100135160()
{
  BOOL v2 = *(void *)(STACK[0x670] + 24) == 0;
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (((2 * ((v2 ^ ((v0 + 19) ^ (v0 - 42))) & 1)) & 0xEF | (16 * ((v2 ^ (v0 - 4077) ^ (v0 - 2602)) & 1))) ^ v0)))();
}

uint64_t sub_10013519C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  *(_OWORD *)(a6 + (v8 + v11)) = *(_OWORD *)(a7 + v11);
  return (*(uint64_t (**)(void))(v12 + 8 * (((v9 != v11) * v10) ^ v7)))();
}

uint64_t sub_1001351C8()
{
  unsigned int v4 = v2 + 1458499612;
  BOOL v5 = v4 < 0x834A455E;
  BOOL v6 = (((v1 ^ 0x381) + 1739) ^ 0x834A4A72) + v3 < v4;
  if (v3 > 0x7CB5BAA1 != v5) {
    BOOL v6 = v5;
  }
  return (*(uint64_t (**)(void))(v0 + 8 * ((v6 | (2 * v6)) ^ v1)))();
}

uint64_t sub_10013523C()
{
  unint64_t v3 = *(void *)(v1 + 8);
  STACK[0x640] = v3;
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((498 * (((v3 == 0x46197683F7D18950) ^ ((v0 + 0x80) ^ (v0 + 77))) & 1)) ^ v0)))();
}

uint64_t sub_1001352D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v7 + 8 * (((((v6 - 1146) | 0x312) ^ 0xBF0) * (v5 == a5)) ^ v6)))();
}

uint64_t sub_100135304()
{
  return (*(uint64_t (**)(void))(v1
                              + 8 * (((STACK[0x4F0] == 0) * ((v0 + 366) ^ 0x6AE ^ ((v0 - 389) | 0x45A))) ^ (v0 + 813))))();
}

uint64_t sub_100135344@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  int v18 = 1761959447 * ((-584405927 - ((v17 - 144) | 0xDD2AAC59) + ((v17 - 144) | 0x22D553A6)) ^ 0x83729262);
  *(_DWORD *)(v17 - 120) = v15 - v18 + ((v14 + 1178) ^ 0xD5466C9E);
  *(_DWORD *)(v17 - 144) = v14 - v18 + 3090;
  *(void *)(v17 - 136) = a2;
  *(void *)(v17 - 128) = a1;
  uint64_t v19 = (*(uint64_t (**)(uint64_t))(v16 + 8 * (v14 + 4275)))(v17 - 144);
  return sub_10018C9D0(v19, v20, v21, v22, v23, v24, v25, v26, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14);
}

uint64_t sub_1001353D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * (int)((((((a5 + 855592721) & 0xFF7FFFCF) - 847205367) ^ 0xB47)
                                     * ((unint64_t)(v5 - a1) < 0x20)) ^ a5)))();
}

uint64_t sub_10013542C(uint64_t result)
{
  unint64_t v1 = 673918253 * (((result | 0xF0C24170EE78F065) - result + (result & 0xF3DBE8F11870F9ALL)) ^ 0xBEAB6DB57430EBCDLL);
  unint64_t v2 = *(void *)(result + 8) + v1;
  int v3 = *(_DWORD *)(result + 32) ^ v1;
  int v4 = *(_DWORD *)result + v1;
  unint64_t v5 = *(void *)(result + 16) ^ v1;
  int v6 = *(_DWORD *)(result + 24) - v1;
  int v7 = *(_DWORD *)(result + 4) + v1;
  BOOL v8 = v2 > v5;
  BOOL v9 = v2 == v5;
  int v10 = v8;
  if (v7) {
    int v11 = v10;
  }
  else {
    int v11 = v9;
  }
  if (v11) {
    int v12 = v6;
  }
  else {
    int v12 = v4;
  }
  *(_DWORD *)(result + 28) = v3 ^ v12;
  return result;
}

void sub_1001354CC(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16) ^ (673918253 * ((a1 + 1608852281 - 2 * (a1 & 0x5FE52339)) ^ 0xC5AD3891));
  uint64_t v2 = *(void *)(a1 + 24);
  if (*(_DWORD *)(v2 - 0x49230D716B37AE00) - 330117362 >= 0) {
    unsigned int v4 = *(_DWORD *)(v2 - 0x49230D716B37AE00) - 330117362;
  }
  else {
    unsigned int v4 = 330117362 - *(_DWORD *)(v2 - 0x49230D716B37AE00);
  }
  uint64_t v3 = *(void *)a1;
  if (*(_DWORD *)(*(void *)a1 - 0x49230D716B37AE00) - 330117362 >= 0) {
    unsigned int v5 = *(_DWORD *)(v3 - 0x49230D716B37AE00) - 330117362;
  }
  else {
    unsigned int v5 = 330117362 - *(_DWORD *)(v3 - 0x49230D716B37AE00);
  }
  unsigned int v9 = v1
     - 142545853
     * (((&v8 | 0x3169318F) - &v8 + (&v8 & 0xCE96CE70)) ^ 0x1B969EE0)
     - 147;
  uint64_t v8 = v2;
  int v6 = (char *)*(&off_100520A90 + v1 - 471) - 8;
  (*(void (**)(uint64_t *))&v6[8 * (v1 ^ 0x1344)])(&v8);
  if (v4 >= v5) {
    unsigned int v7 = v5;
  }
  else {
    unsigned int v7 = v4;
  }
  __asm { BRAA            X14, X17 }
}

uint64_t sub_10013568C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,int a50)
{
  return (*(uint64_t (**)(void))(v51
                              + 8 * ((371 * (v50 == ((a50 - 2131375596) & 0x7F0A2CFF) + 847202836)) ^ (a50 - 1375))))();
}

uint64_t sub_1001356E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, unsigned int a19, uint64_t a20)
{
  uint64_t v24 = **(void **)(v21 + 8 * (v20 - 1980));
  a19 = v20 - 1697562443 * (((&a19 | 0xBBB2B3D1) + (~&a19 | 0x444D4C2E)) ^ 0x6C228B54) + 176;
  a20 = v24;
  uint64_t v25 = (*(uint64_t (**)(unsigned int *))(v22 + 8 * (v20 + 2485)))(&a19);
  return (*(uint64_t (**)(uint64_t))(v22
                                            + 8 * ((1123 * (*v23 == (((v20 - 121) | 1) - 4))) ^ v20)))(v25);
}

uint64_t sub_100135780()
{
  int v4 = v2 ^ 0x522;
  BOOL v5 = v0 < 0x4CCC708F;
  unint64_t v6 = v1 - 0x301AB7673AB0A4BLL + (v4 + 286);
  int v7 = v5 ^ (v6 < 0x4CCC708F);
  BOOL v8 = v6 < v0;
  if (!v7) {
    BOOL v5 = v8;
  }
  return (*(uint64_t (**)(void))(v3 + 8 * ((22 * !v5) ^ v4)))();
}

uint64_t sub_1001357EC(uint64_t a1, int a2)
{
  return (*(uint64_t (**)(uint64_t, void))(v6
                                                    + 8
                                                    * ((1004
                                                      * (((((v2 + (a2 ^ 0x201D8C40) - 2925) & v3) == 0) ^ ((a2 ^ 0x18) - 1)) & 1)) ^ a2 ^ 0x818)))(a1, (v4 - v5));
}

uint64_t sub_100135840(int a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, char a7)
{
  LODWORD(STACK[0x50C]) = 0;
  LODWORD(STACK[0x688]) = v9;
  LODWORD(STACK[0x708]) = v9 + v7;
  int v19 = LODWORD(STACK[0x560]) ^ 0xEF3;
  LODWORD(STACK[0x6F0]) = v19;
  unsigned int v20 = (((v19 - 114) & (-1 - v12) | v12 & 0x3800) ^ 0x844631D5) + ((v9 + v7 - 936419641) ^ (v18 - 870833148));
  LODWORD(STACK[0x6F4]) = v20 + 1121937038 - ((2 * v20) & 0x85BECD1C);
  int v21 = LODWORD(STACK[0x700]) + v13;
  LODWORD(STACK[0x6D0]) = (v21 + 167205682) & 0x559F5FCF ^ v21 & 1;
  int v22 = v7 - v18;
  LODWORD(STACK[0x680]) = (v21 + 1567112301) ^ (v14 + 1544041473);
  LODWORD(STACK[0x684]) = v13 - v14;
  int v23 = STACK[0x68C];
  int v24 = STACK[0x6D8];
  v17[2064] = HIBYTE(LODWORD(STACK[0x6D8])) ^ 0x30;
  int v25 = STACK[0x6B8];
  v17[2068] = HIBYTE(LODWORD(STACK[0x6B8])) ^ 0x83;
  LODWORD(STACK[0x67C]) = v10;
  int v26 = STACK[0x6E0];
  v17[2072] = HIBYTE(LODWORD(STACK[0x6E0])) ^ 0x4A;
  int v28 = STACK[0x698];
  v17[2076] = HIBYTE(LODWORD(STACK[0x698])) ^ 0xFC;
  int v29 = STACK[0x690];
  v17[2084] = HIBYTE(LODWORD(STACK[0x690])) ^ 0x6F;
  v17[2088] = HIBYTE(a2) ^ 0xC6;
  LODWORD(STACK[0x6A0]) = a6;
  int v30 = STACK[0x6AC];
  char v31 = (HIBYTE(LODWORD(STACK[0x6AC])) ^ 0x44)
      + ~(2 * ((HIBYTE(LODWORD(STACK[0x6AC])) ^ 0x44) & 0x3D ^ HIBYTE(LODWORD(STACK[0x6AC])) & 1));
  v17[2080] = HIBYTE(v15) ^ 0xF1;
  v17[2092] = HIBYTE(v16) ^ 0xE6;
  v17[2144] = (HIBYTE(v11) ^ 0xD) - ((2 * (HIBYTE(v11) ^ 0xD)) & 0x78) + 60;
  unsigned int v32 = STACK[0x6C4];
  v17[2148] = (HIBYTE(LODWORD(STACK[0x6C4])) ^ 0xCF) + (~(2 * (HIBYTE(LODWORD(STACK[0x6C4])) ^ 0xCF)) | 0x87) + 61;
  unsigned int v33 = STACK[0x6B0];
  v17[2152] = (HIBYTE(LODWORD(STACK[0x6B0])) ^ 0xC7) - ((2 * (HIBYTE(LODWORD(STACK[0x6B0])) ^ 0xC7)) & 0x78) + 60;
  v17[2172] = (HIBYTE(v8) ^ 0xDE) - 2 * ((HIBYTE(v8) ^ 0xDE) & 0x3D ^ HIBYTE(v8) & 1) + 60;
  v17[2164] = (HIBYTE(v23) ^ 0x29) + ~(2 * ((HIBYTE(v23) ^ 0x29) & 0x3E ^ HIBYTE(v23) & 2)) + 61;
  v17[2156] = v31 + 61;
  v17[2168] = (HIBYTE(a1) ^ 0x8C) - 2 * ((HIBYTE(a1) ^ 0x8C) & 0x3E ^ HIBYTE(a1) & 2) + 60;
  int v34 = STACK[0x6C8];
  unsigned int v35 = (LODWORD(STACK[0x6C8]) ^ 0x1F743454u) >> ((8 * (v12 & 0x62 ^ 0x61 | v12 & 0x60)) & 0x18);
  v17[2160] = v35 - ((2 * v35) & 0x78) + 60;
  v17[2065] = BYTE2(v24) ^ 0xCA;
  v17[2081] = BYTE2(v15) ^ 0xD7;
  v17[2069] = BYTE2(v25) ^ 0x1F;
  v17[2085] = BYTE2(v29) ^ 0x64;
  v17[2073] = BYTE2(v26) ^ 0x90;
  v17[2089] = BYTE2(a2) ^ 0xC;
  v17[2093] = BYTE2(v16) ^ 0x90;
  v17[2077] = BYTE2(v28) ^ 0xC1;
  v17[2149] = (BYTE2(v32) ^ 0xF2) - ((2 * (BYTE2(v32) ^ 0xF2)) & 0x78) + 60;
  v17[2145] = (BYTE2(v11) ^ 0x29) - 2 * ((BYTE2(v11) ^ 0x29) & 0x3E ^ BYTE2(v11) & 2) + 60;
  v17[2157] = (BYTE2(v30) ^ 0x9E) - ((2 * (BYTE2(v30) ^ 0x9E)) & 0x78) + 60;
  v17[2169] = (BYTE2(a1) ^ 0xDB) - ((2 * (BYTE2(a1) ^ 0xDB)) & 0x78) + 60;
  v17[2173] = (BYTE2(v8) ^ 0x2D) - ((2 * (BYTE2(v8) ^ 0x2D)) & 0x78) + 60;
  v17[2161] = (BYTE2(v34) ^ 0x74) - ((2 * (BYTE2(v34) ^ 0x74)) & 0x78) + 60;
  v17[2153] = (BYTE2(v33) ^ 0x40) - ((v33 >> 15) & 0x78) + 60;
  v17[2165] = (BYTE2(v23) ^ 0xD7) - ((2 * (BYTE2(v23) ^ 0xD7)) & 0x78) + 60;
  *(unsigned char *)(STACK[0x4D8] + (((a7 & 0x10 ^ 0x14) + (a7 & 0x10)) | 0x12)) = BYTE1(v29) ^ 0xBE;
  v17[2066] = BYTE1(v24) ^ 0x32;
  v17[2074] = BYTE1(v26) ^ 0xB9;
  v17[2070] = BYTE1(v25) ^ 0xA3;
  v17[2082] = BYTE1(v15) ^ 0x2B;
  v17[2078] = BYTE1(v28) ^ 6;
  v17[2090] = BYTE1(a2) ^ 0x5B;
  v17[2094] = ((v16 ^ 0x4A3C9399u) >> ((v24 & 8 ^ 8) + (v24 & 8))) ^ 0xAC;
  v17[2154] = (BYTE1(v33) ^ 0x57) - ((2 * (BYTE1(v33) ^ 0x57)) & 0x78) + 60;
  v17[2166] = (BYTE1(v23) ^ 0xEC) - 2 * ((BYTE1(v23) ^ 0xEC) & 0x3F ^ BYTE1(v23) & 3) + 60;
  v17[2162] = (BYTE1(v34) ^ 0x34) + ~(2 * ((BYTE1(v34) ^ 0x34) & 0x3E ^ BYTE1(v34) & 2)) + 61;
  v17[2150] = BYTE1(v32) ^ 0xF7;
  v17[2146] = (BYTE1(v11) ^ 0xBB) - ((2 * (BYTE1(v11) ^ 0xBB)) & 0x78) + 60;
  v17[2158] = (BYTE1(v30) ^ 0x9C) - 2 * ((BYTE1(v30) ^ 0x9C) & 0x3F ^ BYTE1(v30) & 3) + 60;
  v17[2174] = (BYTE1(v8) ^ 0xF5) - 2 * ((BYTE1(v8) ^ 0xF5) & 0x3E ^ BYTE1(v8) & 2) + 60;
  v17[2071] = v25 ^ 6;
  v17[2067] = v24 ^ 0x51;
  int v36 = -LODWORD(STACK[0x688]);
  v17[2075] = v26 ^ 6;
  int v37 = STACK[0x708];
  LODWORD(STACK[0x6E0]) = v21 - 2 * LODWORD(STACK[0x6D0]) + 1603713792;
  LODWORD(STACK[0x6D0]) = v22 - v37 - 795580351;
  LODWORD(STACK[0x6EC]) = LODWORD(STACK[0x680]) - 670153916;
  LODWORD(STACK[0x708]) = LODWORD(STACK[0x684]) - v21 + 1052559597;
  unsigned int v38 = LODWORD(STACK[0x67C]) ^ 0xDE2DF512;
  v17[2083] = v15 ^ 0x9D;
  v17[2079] = v28 ^ 0x1A;
  v17[2091] = a2 ^ 0x9D;
  v17[2087] = v29 ^ 0x4F;
  v17[2095] = v16 ^ 0x35;
  *(unsigned char *)(STACK[0x4D0] + ((v32 >> 8) & 0x1A ^ 0x10 | (v32 >> 8) & 0x1A ^ 0xA)) = (BYTE1(a1) ^ 0xB1)
                                                                                  - ((2 * (BYTE1(a1) ^ 0xB1)) & 0x78)
                                                                                  + 60;
  v17[2147] = v11 ^ 0xAE;
  v17[2155] = v33 ^ 0x34;
  v17[2159] = v30 ^ 0x8E;
  LODWORD(STACK[0x6D8]) = v36 + v22 - 175423015 + v38;
  v17[2151] = v32 ^ 0xBC;
  v17[2171] = a1 ^ 0x44;
  v17[2163] = v34 ^ 0x68;
  v17[2175] = v8 ^ 0x2E;
  v17[2167] = v23 ^ 0x9C;
  LODWORD(STACK[0x554]) = 1;
  return sub_10019CE6C();
}

uint64_t sub_100135F7C@<X0>(int a1@<W8>)
{
  *int v2 = STACK[0x4CC];
  v2[85] = STACK[0x3FC];
  v2[86] = STACK[0x47C];
  v2[87] = STACK[0x30C];
  v2[88] = STACK[0x3F8];
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (((STACK[0x4F0] == 0) * ((a1 + 2290) ^ 0x6AE ^ ((a1 + 1535) | 0x45A))) ^ (a1 + 2737))))();
}

uint64_t sub_100135FE8()
{
  return (*(uint64_t (**)(void))(v3 + 8 * (((((v2 - 1865) | 0x80) ^ 0x1736) * (v1 == v0)) ^ v2)))();
}

uint64_t sub_100136024()
{
  LODWORD(STACK[0x57C]) = v0;
  return sub_1001CB994();
}

uint64_t sub_10013604C@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,int a43)
{
  return (*(uint64_t (**)(void))(v43 + 8 * (((a43 ^ 0x18FF) * a1) ^ (a43 - 2471))))();
}

uint64_t sub_10013607C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, char a14, unint64_t *a15, uint64_t a16, uint64_t a17, unint64_t *a18, unint64_t *a19, unint64_t *a20,unsigned int a21)
{
  a21 = v24 - 579 + 1761959447 * (&a18 ^ 0xA1A7C1C4) + 166307220;
  a19 = &STACK[0x132CF3C980285A5F];
  a20 = &STACK[0x28CA3575C94E2454];
  a18 = a15;
  (*(void (**)(unint64_t **))(v23 + 8 * (v24 + 3004)))(&a18);
  a19 = a15;
  a20 = (unint64_t *)&a14;
  HIDWORD(a18) = (v24 + 526) ^ ((&a18 ^ 0xB10986CE) * v21);
  (*(void (**)(unint64_t **))(v23 + 8 * ((v24 - 579) ^ 0x1699)))(&a18);
  LODWORD(a20) = v24
               - 579
               - 476588053 * ((&a18 + 1638264228 - 2 * (&a18 & 0x61A5EDA4)) ^ 0xDC58E9E7)
               + 1448;
  a19 = a15;
  uint64_t v25 = (*(uint64_t (**)(unint64_t **))(v23 + 8 * (v24 + 2917)))(&a18);
  return (*(uint64_t (**)(uint64_t))(v23
                                            + 8
                                            * (((a18 == v22) * (7 * ((v24 - 579) ^ 0x451) + 2210)) ^ (v24 - 579))))(v25);
}

uint64_t sub_1001361C8()
{
  uint64_t v2 = (*(uint64_t (**)(uint64_t))(v1 + 8 * ((v0 ^ 0x1398) + 3694)))(32);
  unint64_t v3 = STACK[0x258];
  STACK[0x7A0] = v2;
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (int)(((v2 != 0) * ((((v0 ^ 0x1398) + 376564783) & 0xE98E1DC7) - 1505)) ^ v0 ^ 0x1398)))();
}

void sub_100136228()
{
}

uint64_t sub_100136234()
{
  return sub_10018BD08();
}

uint64_t sub_100136250(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(void))(v7
                              + 8
                              * (int)(((STACK[0x6D0] == 0)
                                     * (((((a7 ^ 0x1AE) - 1160530407) & 0x452C4FFF) + 832) ^ 0x181D ^ ((((a7 ^ 0x1AE) - 1160530407) & 0x452C4FFF) + 1568557898) & 0xA281AF7B)) ^ ((a7 ^ 0x1AE) - 1160530407) & 0x452C4FFF)))();
}

uint64_t sub_100136260(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,int a50)
{
  return (*(uint64_t (**)(void))(v52 + 8 * ((a50 - 36) ^ (7076 * (v50 == v51)))))();
}

uint64_t sub_10013628C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, unsigned int a14)
{
  *(unsigned char *)(*v17 + ((v15 - 2457) ^ (a8 + 769)) + v14) = -32;
  if (a14 > 0x7B20FE67 != (v14 + 1721296905) < 0x84DF0198) {
    BOOL v18 = a14 > 0x7B20FE67;
  }
  else {
    BOOL v18 = v14 + 1721296905 < a14 - 2065759848;
  }
  return (*(uint64_t (**)(void))(v16 + 8 * (v15 ^ (159 * v18))))();
}

uint64_t sub_100136308(int a1)
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * ((1960
                                * ((v1 & (2 * (*(unsigned __int8 *)(v2 + 7) - 1)))
                                 + ((*(unsigned __int8 *)(v2 + 7) - 1) ^ (v3
                                                                        + v4
                                                                        - 354
                                                                        + ((v4 + 819261732) & 0xCF2B0F33)
                                                                        - 1026)) != a1)) ^ v4)))();
}

uint64_t sub_100136364(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(unsigned char *)(a5 + v6 + v10) = a1;
  return (*(uint64_t (**)(void))(v11 + 8 * (((v6 + 1 + v10 < (v5 ^ v9 ^ v8)) * v7) ^ v5)))();
}

uint64_t sub_10013636C@<X0>(uint64_t a1@<X0>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v14 = (v10 - 1051593870);
  unint64_t v15 = 1554976193 * ((1554976193 * (v11 + v14)) ^ ((1554976193 * (v11 + v14)) >> 16));
  *(unsigned char *)(a1 + v14) = *(unsigned char *)(a9 + (v15 >> 24)) ^ *(unsigned char *)(v11 + v14) ^ *(unsigned char *)((v15 >> 24) + a8 + 3) ^ *(unsigned char *)(a7 + (v15 >> 24)) ^ v15 ^ (((1554976193 * ((1554976193 * (v11 + v14)) ^ ((1554976193 * (v11 + v14)) >> 16))) >> 24) * ((v12 - 82) & 0xDF ^ 9));
  return (*(uint64_t (**)(void))(v13 + 8 * (((v10 - 1 != a2) * v9) ^ v12)))();
}

uint64_t sub_10013640C@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((3959 * (((a1 - 1821) & v1) == ((16 * a1) ^ 0x34B674F0))) ^ a1)))();
}

uint64_t sub_100136460@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v2
                              + 8 * ((3737 * (((((a1 - 658) | 0x219) - 1324) ^ 0xE5u) + v1 - 1173228066 < 0x10)) ^ a1)))();
}

uint64_t sub_1001364AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, unint64_t *a15, char a16, uint64_t a17, uint64_t a18, unint64_t *a19, unint64_t *a20,unint64_t *a21,unsigned int a22)
{
  a22 = v24
      - 490
      + 1761959447 * (((&a19 | 0xB7F1C771) + (~&a19 | 0x480E388E)) ^ 0x165606B4)
      + 166307809;
  a20 = &STACK[0x132CF3C980285A67];
  a21 = &STACK[0x28CA3575C94E245C];
  a19 = a15;
  (*(void (**)(unint64_t **))(v23 + 8 * (v24 + 3682)))(&a19);
  HIDWORD(a19) = (v24 + 1204) ^ ((((&a19 ^ 0xEA70D2C4 | 0x69ADEC17)
                                 - (&a19 ^ 0xEA70D2C4)
                                 + ((&a19 ^ 0xEA70D2C4) & 0x965213E8)) ^ 0x32D4B81D)
                               * v22);
  a20 = a15;
  a21 = (unint64_t *)&a16;
  (*(void (**)(unint64_t **))(v23 + 8 * (v24 + 3562)))(&a19);
  a20 = a15;
  LODWORD(a21) = v24
               - 490
               - 476588053 * ((2 * (&a19 & 0x66F241A8) - &a19 + 420331091) ^ 0xA4F0BA10)
               + 2037;
  uint64_t v25 = (*(uint64_t (**)(unint64_t **))(v23 + 8 * ((v24 - 490) ^ 0x1035)))(&a19);
  return (*(uint64_t (**)(uint64_t))(v23
                                            + 8
                                            * ((a19 == ((v24 - 490) ^ 0x327F4890)) | ((a19 == ((v24 - 490) ^ 0x327F4890)) << 7) | (v24 - 490))))(v25);
}

uint64_t sub_10013664C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, int a10)
{
  return (*(uint64_t (**)(void))(v11 + 8 * ((196 * (((v12 - 1329) ^ v10 ^ a10 ^ (91 * (v12 ^ 0xC56u))) > 0x14)) ^ v12)))();
}

void sub_100136690(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48)
{
  *(_DWORD *)(v51 - 192) = 1805051420 - 1697562443 * ((v51 - 192) ^ 0xD7903884) + v48 + 1318;
  (*(void (**)(uint64_t))(v49 + 8 * (v48 ^ 0x16D9)))(v51 - 192);
  LOBYTE(STACK[0x18E8]) = (45 * ((-2 - ((~(v51 + 64) | 0xD5) + ((v51 + 64) | 0x2A))) ^ 0x7D)) ^ 0x34;
  *(void *)(v51 - 192) = a48;
  *(void *)(v51 - 176) = a26;
  *(_DWORD *)(v51 - 164) = 673918253 * ((-2 - ((~(v51 - 192) | 0xBBB030D5) + ((v51 - 192) | 0x444FCF2A))) ^ 0x21F82B7D)
                         + v48
                         + 3032;
  (*(void (**)(uint64_t))(v49 + 8 * (v48 ^ 0x1626)))(v51 - 192);
  LODWORD(STACK[0x4A4]) = *(_DWORD *)(v51 - 168);
  LODWORD(STACK[0x2C0]) = v50 + (v48 ^ 0xD2D) - 2417;
  uint64_t v52 = (char *)&STACK[0x5C0] + STACK[0x2D8];
  STACK[0x2A8] = (unint64_t)(v52 + 2048);
  STACK[0x2B0] = (unint64_t)(v52 + 2176);
  STACK[0x2D0] = (unint64_t)v52;
  STACK[0x2B8] = (unint64_t)(v52 + 2304);
  JUMPOUT(0x100129404);
}

uint64_t sub_100136788(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49)
{
  uint64_t v52 = *(uint64_t (**)(void))(STACK[0x258] + 8 * (v50 - 2329));
  uint64_t v53 = *a3;
  unint64_t v54 = (((*a3 + 4) * v51) ^ (((*a3 + 4) * v51) >> 16)) * v51;
  *(unsigned char *)(v53 + 4) = *(unsigned char *)(a48 + (v54 >> 24)) ^ 0xE2 ^ *(unsigned char *)(a47 + (v54 >> 24)) ^ *(unsigned char *)((v54 >> 24) + a49 + 1) ^ v54 ^ (17 * BYTE3(v54)) ^ v49;
  unint64_t v55 = (((v53 + 5) * v51) ^ (((v53 + 5) * v51) >> 16)) * v51;
  *(unsigned char *)(v53 + 5) = ~*(unsigned char *)(a48 + (v55 >> 24)) ^ *(unsigned char *)(a47 + (v55 >> 24)) ^ *(unsigned char *)((v55 >> 24) + a49 + 1) ^ ((((v53 + 5) * v51) ^ (((v53 + 5) * v51) >> 16)) * v51) ^ (17 * (((((v53 + 5) * v51) ^ (((v53 + 5) * v51) >> 16)) * v51) >> 24)) ^ a7;
  return v52();
}

uint64_t sub_10013679C()
{
  *(void *)(v6 - 120) = v5;
  *(_DWORD *)(v6 - 124) = (v4 - 2527) ^ (((v6 - 136) ^ 0x16AE5644) * v0);
  *(void *)(v6 - 136) = v2;
  uint64_t v7 = (*(uint64_t (**)(uint64_t))(v3 + 8 * (v4 ^ 0x1C6A)))(v6 - 136);
  return (*(uint64_t (**)(uint64_t))(v3
                                            + 8
                                            * (((*(_DWORD *)(v6 - 128) > v1) * (((v4 - 3364) | 0x820) ^ 0x931)) ^ v4)))(v7);
}

uint64_t sub_10013681C@<X0>(uint64_t a1@<X8>)
{
  *(_DWORD *)(a1 + 20) = 861414662;
  return v1();
}

void sub_100136834()
{
  STACK[0x618] = v0;
  JUMPOUT(0x1001368D4);
}

uint64_t sub_100136CE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, __int16 a11, char a12, __int16 a13, char a14, __int16 a15, char a16, uint64_t a17, uint64_t a18, int a19, char a20,int a21,unsigned int a22,uint64_t a23,char *a24)
{
  a22 = (v24 + 1395) ^ ((&a21 ^ 0xB10986CE) * v26);
  a23 = a18;
  a24 = &a12;
  (*(void (**)(int *))(v25 + 8 * (v24 ^ 0x11BB)))(&a21);
  a22 = (v24 + 1395) ^ (((&a21 + 36004664 - 2 * (&a21 & 0x2256338)) ^ 0xB32CE5F6) * v26);
  a23 = a18;
  a24 = &a16;
  (*(void (**)(int *))(v25 + 8 * (v24 + 3753)))(&a21);
  a22 = (v24 + 1395) ^ ((((&a21 | 0xB2B190E2) - &a21 + (&a21 & 0x4D4E6F18)) ^ 0x3B8162C)
                      * v26);
  a23 = a18;
  a24 = &a20;
  (*(void (**)(int *))(v25 + 8 * (v24 + 3753)))(&a21);
  a23 = a18;
  a24 = &a10;
  a22 = (v24 + 1395) ^ ((((&a21 | 0x2957C899) - &a21 + (&a21 & 0xD6A83760)) ^ 0x985E4E57)
                      * v26);
  (*(void (**)(int *))(v25 + 8 * (v24 + 3753)))(&a21);
  a23 = a18;
  a24 = &a14;
  a22 = (v24 + 1395) ^ (((((2 * &a21) | 0xE7B05CFE) - &a21 - 1943547519) ^ 0xC2D1A8B1) * v26);
  (*(void (**)(int *))(v25 + 8 * (v24 + 3753)))(&a21);
  a23 = a18;
  LODWORD(a24) = v24
               - 476588053 * ((&a21 & 0xF525F9FF | ~(&a21 | 0xF525F9FF)) ^ 0xB7270243)
               + 1738;
  uint64_t v27 = (*(uint64_t (**)(int *))(v25 + 8 * (v24 + 3786)))(&a21);
  return (*(uint64_t (**)(uint64_t))(v25
                                            + 8
                                            * (int)(((a21 != ((v24 - 2100740054) & 0x7D36BFFD) + 847202109)
                                                   * ((v24 - 779566342) ^ 0xD188C6BF)) ^ v24)))(v27);
}

uint64_t sub_100136F3C(uint64_t a1, int a2, int a3)
{
  return (*(uint64_t (**)(void))(v4 + 8 * (((a3 + 3839) * (v3 == a2)) ^ a3)))();
}

uint64_t sub_100136F68(int a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int a5)
{
  return (*(uint64_t (**)(void))(v6 + 8 * ((59 * (a1 + v5 + 63 < v5 - 1936284606 + v7 + (a5 ^ 0xC7C) - 489)) ^ a5)))();
}

uint64_t sub_10013702C(uint64_t a1)
{
  *(void *)(a1 - 7 + (v3 + v2 - v5)) = *(void *)(v1 - 7 + (v3 + v2 - v5));
  return (*(uint64_t (**)(void))(v7
                              + 8 * ((991 * (v5 + ((v6 + 1141845484) & 0xBBF0D1FD) - 480 == (v4 & 0xFFFFFFF8))) ^ v6)))();
}

uint64_t sub_10013708C(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4, uint64_t a5, uint64_t a6, uint64_t a7, int8x16_t *a8)
{
  *(int8x16_t *)(a6 + v8 + 16 + ((v10 + 1616) | a4)) = vaddq_s8(vsubq_s8(*a8, vandq_s8(vaddq_s8(*a8, *a8), v13)), v12);
  return (*(uint64_t (**)(void))(v11 + 8 * ((2683 * (v9 == 16)) ^ v10)))();
}

uint64_t sub_100137098(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(uint64_t, void))(v9
                                                    + 8 * (a5 ^ (4 * (((v10 + (a5 ^ (v8 - 105)) + 332) & v5) != 0)))))(a1, (v6 - v7));
}

uint64_t sub_1001370C8(uint64_t a1, uint64_t a2, unsigned int a3, int a4, char a5, uint64_t a6, uint64_t a7, char a8)
{
  int v16 = v12 + 4;
  unsigned int v17 = *(_DWORD *)(v11 + ((v16 + a4) & 0xFFFFFFFC));
  *(unsigned char *)(v10 + (v16 + a4)) = ((v17 >> ((v9 + 93) ^ a5)) ^ a8)
                                             - 2
                                             * (((v17 >> ((v9 + 93) ^ a5)) ^ a8) & 0xE1 ^ (v17 >> ((v9 + 93) ^ a5)) & 1)
                                             + 96;
  *(unsigned char *)(v10 + (v16 + a4 + 1)) = (BYTE2(v17) ^ v13)
                                                 - 2 * ((BYTE2(v17) ^ v13) & v14 ^ BYTE2(v17) & 8)
                                                 + 96;
  *(unsigned char *)(v10 + (v16 + a4 + 2)) = (BYTE1(v17) ^ 0xB7) - ((2 * (BYTE1(v17) ^ 0xB7)) & 0xC0) + 96;
  *(unsigned char *)(v10 + (v16 + a4 + 3)) = v17 ^ 0x58;
  unsigned int v18 = *v8 - 1810537641;
  BOOL v19 = v18 < a3;
  BOOL v20 = v16 + 1308660077 < v18;
  if (v16 + 1308660077 < a3 != v19) {
    BOOL v20 = v19;
  }
  return (*(uint64_t (**)(void))(v15 + 8 * ((23 * !v20) ^ v9)))();
}

uint64_t sub_1001370D0(uint64_t a1, uint64_t a2, int a3, uint64_t a4, int a5)
{
  uint64_t v12 = (v11 + v9);
  long long v13 = *(_OWORD *)(v8 + v12 - 15);
  long long v14 = *(_OWORD *)(v8 + v12 - 31);
  uint64_t v15 = v7 + v12;
  *(_OWORD *)(v15 - 15) = v13;
  *(_OWORD *)(v15 - 31) = v14;
  return (*(uint64_t (**)(void))(v6 + 8 * ((31 * (((a5 - v5) ^ 0xD9A) != (v10 & 0xFFFFFFE0))) ^ (a3 + a5 + 2604))))();
}

uint64_t sub_100137130@<X0>(int a1@<W8>)
{
  STACK[0x7F0] = v1;
  return (*(uint64_t (**)(void))(v3 + 8 * (((v2 == 847161035) * (((a1 + 2133) | 0x603) - 724)) ^ a1)))();
}

uint64_t sub_100137178(uint64_t a1, uint64_t a2, int a3, uint64_t a4, int a5)
{
  *(void *)(a1 - 7 + (v8 + v7 + v9 - a3)) = *(void *)(v5 - 7 + (v8 + v7 + v9 - a3));
  return (*(uint64_t (**)(void))(v10 + 8 * (((a3 - (v6 & 0xFFFFFFF8) == -8) * (a5 + 1027)) ^ a5)))();
}

uint64_t sub_1001371CC()
{
  uint64_t v2 = (*(uint64_t (**)(uint64_t))(v1 + 8 * (v0 ^ 0x1806)))(64);
  unint64_t v3 = STACK[0x258];
  STACK[0x6D0] = v2;
  return (*(uint64_t (**)(void))(v3 + 8 * (((v2 == 0) * (((v0 ^ 0xA89) + 2293) ^ (14 * (v0 ^ 0xA89)))) ^ v0)))();
}

void sub_100137230(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 8) + 142545853 * ((2043643383 - (a1 | 0x79CF85F7) + (a1 | 0x86307A08)) ^ 0xACCFD567);
  uint64_t v2 = *(void *)a1;
  unsigned int v4 = v1 + 1697562443 * ((&v4 & 0xE2A9D160 | ~(&v4 | 0xE2A9D160)) ^ 0xCAC6161B) + 1579;
  uint64_t v5 = v2;
  unint64_t v3 = (char *)*(&off_100520A90 + v1 - 324) - 8;
  (*(void (**)(unsigned int *))&v3[8 * (v1 ^ 0x13F5)])(&v4);
  __asm { BRAA            X8, X17 }
}

uint64_t sub_10013734C()
{
  return sub_10015EFB4(1045868472);
}

uint64_t sub_100137368@<X0>(int a1@<W8>)
{
  unsigned int v5 = 69
     * ((((431 * v4 + 1185800074) % ((136 * (a1 ^ 0xC92)) ^ 0xF85u)) & 0x11A ^ 0x11A)
      + (((431 * v4 + 1185800074) % ((136 * (a1 ^ 0xC92)) ^ 0xF85u)) & 0x11A)
      + (*(unsigned __int8 *)(v1 + (431 * v4 + 1185800074) % ((136 * (a1 ^ 0xC92)) ^ 0xF85u)) ^ 0x33));
  *(unsigned char *)(v1 + (431 * v4 + 1185925064) % 0x3BDu) = *(unsigned char *)(v2
                                                               + (v5
                                                                              - 928
                                                                              * ((4628198 * (unint64_t)v5) >> 32))) ^ 0xCE;
  return (*(uint64_t (**)(void))(v3 + 8 * ((122 * (v4 == -1268321022)) ^ a1)))();
}

void sub_100137450()
{
  int v0 = *(&off_100520A90
       + ((75 * ((qword_1005A6FB0 + dword_1005A6DB8) ^ 0x7E)) ^ byte_100491600[byte_1004A0760[(75 * ((qword_1005A6FB0 + dword_1005A6DB8) ^ 0x7E))] ^ 4])
       - 39);
  unsigned __int8 v1 = 75 * (*v0 ^ qword_1005A6FB0 ^ 0x7E);
  uint64_t v2 = (uint64_t)*(&off_100520A90
                + (byte_10049B328[(byte_100495E28[v1 - 8] ^ 0x14) - 8] ^ v1)
                + 86);
  uint64_t v3 = *(void *)(v2 - 4) - *v0 - (void)&v5;
  *int v0 = 544792907 * v3 + 0x5547F155C74775EALL;
  *(void *)(v2 - 4) = 544792907 * (v3 ^ 0xE12C07DFCC70D97ELL);
  v6[1] = 31090337 * ((2 * (v6 & 0x6D1BFE80) - v6 - 1830551173) ^ 0x55656132) + 1655392376;
  LODWORD(v2) = 544792907 * (*(_DWORD *)v0 ^ 0xCC70D97E ^ *(_DWORD *)(v2 - 4));
  int v4 = (char *)*(&off_100520A90
               + ((75 * (dword_1005A6DB8 ^ 0x7E ^ qword_1005A6FB0)) ^ byte_100491600[byte_1004A0760[(75 * (dword_1005A6DB8 ^ 0x7E ^ qword_1005A6FB0))] ^ 0xB3])
               - 19)
     - 8;
  (*(void (**)(_DWORD *))&v4[8
                                      * (byte_100491608[(byte_1004A0764[v2 - 4] ^ 0xB3)
                                                                       - 8] ^ v2)
                                      + 37320])(v6);
  __asm { BRAA            X8, X17 }
}

uint64_t sub_100137664(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  int v14 = STACK[0x664];
  LODWORD(STACK[0x700]) = 0;
  unint64_t v16 = STACK[0x708];
  unsigned int v17 = *(_DWORD *)(STACK[0x708] + 92);
  LODWORD(STACK[0x690]) = 208;
  unsigned int v18 = *(_DWORD *)(v16 + 832);
  HIDWORD(v20) = v17 ^ (v14 - 1439175921);
  LODWORD(v20) = v17 ^ 0xFE0DE880;
  int v19 = v20 >> 7;
  HIDWORD(v20) = v17 ^ 0x1E8ED;
  LODWORD(v20) = v17 ^ 0xFE0C0000;
  LODWORD(STACK[0x698]) = 2912;
  int v21 = v19 ^ (v17 >> 3) ^ (v20 >> 18);
  HIDWORD(v20) = v18 ^ 9;
  LODWORD(v20) = v18 ^ 0xD486A580;
  int v22 = (v20 >> 7) ^ (v18 >> 3);
  HIDWORD(v20) = v18 ^ 0x2A589;
  LODWORD(v20) = v18 ^ 0xD4840000;
  int v23 = v22 ^ (v20 >> 18);
  unsigned int v24 = *(_DWORD *)(v16 + 720);
  HIDWORD(v20) = v24 ^ 0x1E8ED;
  LODWORD(v20) = v24 ^ 0xFE0C0000;
  int v25 = (v20 >> 17) - ((2 * (v20 >> 17)) & 0xE9008016) - 192921589;
  HIDWORD(v20) = v24 ^ 0x5E8ED;
  LODWORD(v20) = v24 ^ 0xFE080000;
  unsigned int v26 = *(_DWORD *)(v16 + 328);
  unsigned int v27 = (v26 ^ 0xD486A589) << ((v25 & 0xF ^ 0xB) + (v25 & 0xF ^ 4));
  int v28 = (v20 >> 19) ^ (v24 >> 10) ^ v25;
  HIDWORD(v20) = v26 ^ 0x6A589;
  LODWORD(v20) = v26 ^ 0xD4800000;
  int v29 = v20 >> 19;
  int v30 = v11 - ((2 * v11 + 940250978) & 0x77F0B610) - 671226183;
  HIDWORD(v20) = v10 ^ v23 ^ 0x541F961;
  LODWORD(v20) = v10 ^ v23 ^ 0xE0000000;
  int v31 = v20 >> 28;
  HIDWORD(v20) = v31 ^ 0x55555555;
  LODWORD(v20) = v31 ^ 0x937D6320;
  int v32 = (v7 - ((2 * v7 + 709611388) & 0x77F0B610) - 786545978) ^ v30 ^ v21;
  int v33 = (v26 >> 10) ^ (v26 >> 17) ^ v29 ^ v27;
  int v34 = v21 ^ 0x1FC1BD1D;
  int v35 = ((v32 ^ 0xE03E42E2) + (v32 ^ v23 ^ 0x55169AC) + 1) ^ ((v8 ^ 0xD7568772) + (v8 ^ 0x3239AC3C ^ v23) + 1) ^ ((v10 ^ 0x2ED22F) + ((v20 >> 4) ^ 0x5937D632) + 1);
  int v36 = v7 - ((2 * v7 + 172740476) & 0x106A315A) + 492503147;
  unsigned int v37 = ((2 * (v13 + 2024566872 + (v36 ^ 0x77CAE752))) & 0xFFCEF3FE)
      + ((v13 + 2024566872 + (v36 ^ 0x77CAE752)) ^ 0x7FE779FF);
  unsigned int v38 = ((v12 - 430303458) ^ 0x883518AD ^ v36)
      - ((2 * ((v12 - 430303458) ^ 0x883518AD ^ v36) + 1891836984) & 0x564D2F24)
      + 596126126;
  int v39 = v36 ^ v30;
  unsigned int v40 = ((2 * ((v10 ^ 0x2ED22F) + v9 + 1730643774)) & 0x93BFFFDE) + (((v10 ^ 0x2ED22F) + v9 + 1730643774) ^ 0xC9DFFFEF);
  unsigned int v41 = (v10 ^ 0xFFD12DD0) + (v8 ^ v10 ^ 0x2887AAA2) + 1;
  unsigned int v42 = ((a7 - 521313344) ^ v10 ^ 0xFFD12DD0)
      - 2 * ((((a7 - 521313344) ^ v10 ^ 0xFFD12DD0) + 2019660316) & 0x435864C7 ^ ((a7 - 521313344) ^ v10) & 3)
      - 1145440544;
  int v43 = v42 ^ v8 ^ v10;
  LODWORD(STACK[0x6F4]) = v42;
  LODWORD(STACK[0x6D8]) = v38;
  LODWORD(STACK[0x6EC]) = v38 ^ v39;
  unsigned int v44 = v41 - ((2 * v41 - 170301582) & 0xC89AF06A) - 549835794;
  int v45 = (v39 ^ 0x4C32BC5A)
      + v7
      - 2 * (((v39 ^ 0x4C32BC5A) + v7 + 269654904) & 0x30236E3D ^ ((v39 ^ 0x4C32BC5A) + v7) & 4)
      - 1070200399;
  LODWORD(STACK[0x6C4]) = v45;
  LODWORD(STACK[0x6F0]) = v43;
  LODWORD(STACK[0x6E0]) = v44;
  unsigned int v46 = ((v43 ^ 0x6BDFCE66) + (v43 ^ 0x94157A73 ^ v33) + 1) ^ ((v44 ^ 0x9BB287CA) + (v44 ^ 0x647833DF ^ v33) + 1) ^ ((v38 ^ v39 ^ v45 ^ v28 ^ 0xA3888680) + (v33 ^ v38 ^ v39 ^ v45 ^ v28 ^ 0x5C423295) + 1);
  LODWORD(STACK[0x6D0]) = v37;
  unsigned int v47 = v37 - ((2 * v37 + 63337820) & 0xBA6573F2) + 1595274407;
  unsigned int v48 = v42 ^ 0xBCA79B3B;
  unsigned int v49 = ((2 * (v47 ^ v45)) & 0xF2FFF3AE ^ 0xD223A380) + (v47 ^ v45 ^ 0x946E2E17);
  LODWORD(STACK[0x6C8]) = v40;
  int v50 = v40 - ((2 * v40 + 1876257148) & 0x5A7BEADA) + 1697163819;
  unsigned int v51 = ((2 * (v50 ^ v44)) & 0xC9EDFFFE ^ 0x80E11AB0) + (v50 ^ v44 ^ 0x2D8672A7);
  unsigned int v52 = ((2 * ((v47 ^ 0xDD32B9F9) - 109053481 - v49)) & 0x7BFCFFEA)
      + (((v47 ^ 0xDD32B9F9) - 109053481 - v49) ^ 0xBDFE7FF5);
  LODWORD(STACK[0x6B0]) = v52;
  unsigned int v53 = ((2 * ((v50 ^ 0x2D3DF56D) - v51 + 1693908991)) & 0xF57AD3FA)
      + (((v50 ^ 0x2D3DF56D) - v51 + 1693908991) ^ 0x7ABD69FD);
  LODWORD(STACK[0x6B8]) = v53;
  int v54 = v12;
  int v55 = *(_DWORD *)(v16 + 1040);
  int v56 = *(_DWORD *)(v16 + 604);
  LODWORD(STACK[0x6AC]) = (v51 + 206227888) & 0x876721B ^ v51 & 8;
  unsigned int v57 = v48 - a7 + (v55 ^ 0xD486A589) + (v56 ^ 0xD486A589) + v35 - 1576731787 + v46;
  unsigned int v58 = v57 + v52 + 1107394571 - ((2 * (v57 + v52 + 1107394571)) & 0x318BD2C8) + 415623524;
  *(_DWORD *)(v16 + 768) = v57 + 319649263 - ((2 * v57 + 2098045132) & 0xA90D4B12);
  int v59 = *(_DWORD *)(v16 + 1016);
  LODWORD(STACK[0x6A0]) = 0;
  unsigned int v60 = *(_DWORD *)(v16 + 580) ^ 0xD486A589;
  unsigned int v61 = v54 + (v59 ^ 0xD486A589) + (v38 ^ 0xAB269792) + v34 + 747918349 + (v28 ^ 0xF4BFC371);
  unsigned int v62 = ((2 * v61) & 0xBF7AFF3E) + (v61 ^ 0xDFBD7F9F);
  *(_DWORD *)(v16 + 744) = v60 + 541229153 + v62 - 729373303 - ((2 * (v60 + 541229153 + v62)) & 0xA90D4B12);
  int v63 = v62 + v60 - v53 + 1857447311 - ((2 * (v62 + v60 - v53) + 41176730) & 0x1AF87C48);
  unsigned int v64 = v63 - 30;
  unsigned int v65 = 662 * (HIBYTE(v58) & 0xF ^ 8) + 439568;
  unsigned int v66 = 662 * ((v58 >> 20) & 0xF ^ 0xC) + 439568;
  unsigned int v67 = 662 * (HIWORD(v58) & 0xF ^ 5) + 439568;
  unsigned int v68 = 662 * (((unsigned __int16)(v57 + v52 - 32757 - ((2 * (v57 + v52 - 32757)) & 0xD2C8) - 5788) >> 12) ^ 0xE)
      + 439568;
  LODWORD(v16) = ((*(unsigned __int8 *)(STACK[0x718]
                                      + (v65 - 965 * ((4450744 * (unint64_t)v65) >> 32))) ^ 0xD3) << 8) ^ ((*(unsigned __int8 *)(STACK[0x718] + (662 * ((v58 >> 28) ^ 1) + 439568 - 965 * ((4450744 * (unint64_t)(662 * ((v58 >> 28) ^ 1) + 439568)) >> 32))) ^ 0xD3) << 12) | *(unsigned __int8 *)(STACK[0x718] + (v67 - 965 * ((4450744 * (unint64_t)v67) >> 32))) ^ 0xD3;
  int v69 = *(unsigned __int8 *)(STACK[0x718] + (v68 - 965 * ((4450744 * (unint64_t)v68) >> 32))) ^ 0xD3;
  unsigned int v70 = 662 * ((v58 >> 8) & 0xF ^ 9) + 439568;
  unsigned int v71 = 662 * ((v58 >> 4) ^ 6) + 439568;
  LODWORD(v16) = ((v16 << 8) ^ ((*(unsigned __int8 *)(STACK[0x718]
                                                            + (v66
                                                                           - 965
                                                                           * ((4450744 * (unint64_t)v66) >> 32))) ^ 0xD3) << 12) | *(unsigned __int8 *)(STACK[0x718] + (v70 - 965 * ((4450744 * (unint64_t)v70) >> 32))) ^ 0xD3) ^ (16 * v69);
  LODWORD(v16) = (v16 << 8) - 584969714 - ((v16 << 9) & 0xBA442400);
  unsigned int v72 = 662 * (((v63 - 30) >> 24) & 0xF ^ 0xD) + 439568;
  int v73 = *(unsigned __int8 *)(STACK[0x718] + (v72 - 965 * ((4450744 * (unint64_t)v72) >> 32))) ^ 0xD3;
  int v74 = *(unsigned __int8 *)(STACK[0x718]
                           + (662 * (v58 & 0xF ^ 4)
                                          + 439568
                                          - 965 * ((4450744 * (unint64_t)(662 * (v58 & 0xF ^ 4) + 439568)) >> 32))) ^ 0xD3;
  int v75 = v74 + 2101961311 - ((2 * v74) & 0xBE);
  unsigned int v76 = 662 * (((v63 - 30) >> 20) & 0xF ^ 7) + 439568;
  unsigned int v77 = (v16 ^ 0xDD22120E | v75 ^ 0x7D49625F) ^ (16
                                               * (*(unsigned __int8 *)(STACK[0x718]
                                                                     + (v71
                                                                                    - 965
                                                                                    * ((4450744 * (unint64_t)v71) >> 32))) ^ 0xD3));
  int v78 = (v73 << 8) ^ ((*(unsigned __int8 *)(STACK[0x718]
                                          + (662 * ((v63 + 2147483618) >> 28)
                                                         + 439568
                                                         - 965
                                                         * ((4450744
                                                           * (unint64_t)(662
                                                                              * ((v63 + 2147483618) >> 28)
                                                                              + 439568)) >> 32))) ^ 0xD3) << 12);
  unsigned int v79 = 662 * (HIWORD(v64) & 0xF ^ 0xC) + 439568;
  int v80 = *(unsigned __int8 *)(STACK[0x718] + (v76 - 965 * ((4450744 * (unint64_t)v76) >> 32))) ^ 0xD3;
  unsigned int v81 = 662 * (((unsigned __int16)v64 >> 12) ^ 3) + 439568;
  int v82 = v78 | *(unsigned __int8 *)(STACK[0x718] + (v79 - 965 * ((4450744 * (unint64_t)v79) >> 32))) ^ 0xD3;
  int v83 = v64 & 0xF ^ 4;
  unsigned int v84 = 662 * ((v64 >> 8) & 0xF ^ 0xE) + 439568;
  int v85 = (v82 << 8) ^ (v80 << 12);
  unsigned int v86 = 662 * ((v64 >> 4) ^ 2) + 439568;
  int v87 = *(unsigned __int8 *)(STACK[0x718] + (v84 - 965 * ((4450744 * (unint64_t)v84) >> 32))) ^ 0xD3;
  unsigned int v88 = ((v85 | v87) << 8) - 608173090 - (((v85 | v87) << 9) & 0xB7800600);
  unsigned int v89 = v88 ^ ((*(unsigned __int8 *)(STACK[0x718] + (v81 - 965 * ((4450744 * (unint64_t)v81) >> 32))) ^ 0xD3) << 12);
  int v90 = *(unsigned __int8 *)(STACK[0x718]
                           + (662 * v83
                                          + 439568
                                          - 965
                                          * ((4450744 * (unint64_t)(662 * v83 + 439568)) >> 32))) ^ 0xD3;
  unsigned int v91 = (v89 ^ 0xDBC003DE | (v90 - 1408067232 - ((2 * v90) & 0xC0)) ^ 0xAC129960) ^ (16
                                                                                   * (*(unsigned __int8 *)(STACK[0x718] + (v86 - 965 * ((4450744 * (unint64_t)v86) >> 32))) ^ 0xD3));
  unsigned int v92 = ((v75 & 0xF ^ 1) - ((2 * (v75 & 0xF ^ 1)) & 0xAAAAAAAA) + 69) ^ 0x4B;
  unsigned int v93 = 662
      * ((((16 * (v90 & 0xF)) | v92) + 892921210 - 2 * (((16 * (v90 & 0xF)) | v92) & 0x100007B ^ v92 & 1)) ^ 0x3538E57A);
  unsigned int v94 = 662
      * (*(unsigned __int8 *)(STACK[0x718] + (v93 + 466048) % 0x3C5) ^ (16
                                                                      * (*(unsigned __int8 *)(STACK[0x718] + 493) ^ 0xD3)) ^ 0xD3);
  LOBYTE(v50) = *(unsigned char *)(STACK[0x718] + (v94 + 466048) % 0x3C5);
  LOBYTE(v94) = (*(unsigned char *)(STACK[0x718] + (v94 - 965 * ((4450744 * (unint64_t)v94) >> 32))) >> 4) ^ 0xD;
  unsigned int v95 = 662 * ((v94 - 2 * (v94 & 3) - 45) ^ *(unsigned __int8 *)(STACK[0x718] + v93 % 0x3C5)) + 466048;
  int v96 = (((v77 >> 4) & 8) + 261993047 - ((v77 >> 4) & 7)) ^ 0xF9DB257;
  unsigned int v97 = 662 * (((v91 & 0xF0 | v96) - 841930301 - ((2 * (v91 & 0xF0 | v96)) & 0x801386)) ^ 0xCDD129C3);
  int v98 = *(unsigned __int8 *)(STACK[0x718] + v97 % 0x3C5);
  unsigned int v99 = 662
      * (*(unsigned __int8 *)(STACK[0x718] + (v97 + 466048) % 0x3C5) ^ (16
                                                                      * (*(unsigned __int8 *)(STACK[0x718]
                                                                                            + (v95 - 965 * ((4450744 * (unint64_t)v95) >> 32))) ^ 0xD3)) ^ 0xD3);
  unsigned int v100 = v99 + 466048 - 965 * (((8901487 * (unint64_t)(v99 + 466048)) >> 32) >> 1);
  LOBYTE(v99) = (*(unsigned char *)(STACK[0x718] + (v99 - 965 * ((4450744 * (unint64_t)v99) >> 32))) >> 4) ^ 0xD;
  int v101 = (v99 - 2 * (v99 & 3) - 45) ^ v98;
  LOBYTE(v98) = (v50 ^ 0xD3) - ((2 * (v50 ^ 0xD3)) & 0x28);
  int v102 = (v91 >> 4) & 0xF0 | (v77 >> 8) & 0xF;
  unsigned int v103 = 662 * ((v102 - 1318368267 - ((2 * v102) & 0x1EA)) ^ 0xB16B4BF5);
  unsigned int v104 = 662
       * (*(unsigned __int8 *)(STACK[0x718] + (v103 + 466048) % 0x3C5) ^ (16
                                                                        * (*(unsigned __int8 *)(STACK[0x718]
                                                                                              + ((2 * (v101 & 0x3F)
                                                                                                + (v101 ^ 0x7EF7DA3F)
                                                                                                - 2130171444)
                                                                                               * (2 * (v101 & 0x3F)
                                                                                                + (v101 ^ 0x7EF7DA3F)
                                                                                                - 2130171444)
                                                                                               - 109561
                                                                                               + (2130171775
                                                                                                - (2 * (v101 & 0x3F)
                                                                                                 + (v101 ^ 0x7EF7DA3F)))
                                                                                               * (2 * (v101 & 0x3F)
                                                                                                + (v101 ^ 0x7EF7DA3Fu)
                                                                                                - 2130171775))
                                                                                              % 0x3C5) ^ 0xD3)) ^ 0xD3);
  int v105 = *(unsigned __int8 *)(STACK[0x718]
                            + v104
                            + 466048
                            - 965 * (((8901487 * (unint64_t)(v104 + 466048)) >> 32) >> 1)) ^ 0xD3;
  unsigned int v106 = (*(unsigned __int8 *)(STACK[0x718] + (v104 - 965 * ((4450744 * (unint64_t)v104) >> 32))) ^ 0xD3u) >> ((v50 & 4 ^ 4) + (v50 & 4));
  int v107 = (v89 >> 8) & 0xF0 | ((unsigned __int16)v16 >> 12);
  unsigned int v108 = 662 * ((v106 - ((2 * v106) & 0xA6) - 45) ^ *(unsigned __int8 *)(STACK[0x718] + v103 % 0x3C5))
       + 466048;
  unsigned int v109 = 662 * (((v107 ^ 1) + 650990510 - ((2 * v107) & 0x15C)) ^ 0x26CD53AE);
  unsigned int v110 = 662
       * (*(unsigned __int8 *)(STACK[0x718] + (v109 + 466048) % 0x3C5) ^ (16
                                                                        * (*(unsigned __int8 *)(STACK[0x718]
                                                                                              + (v108 - 965 * ((4450744 * (unint64_t)v108) >> 32))) ^ 0xD3)) ^ 0xD3);
  int v111 = *(unsigned __int8 *)(STACK[0x718]
                            + v110
                            + 466048
                            - 965 * (((8901487 * (unint64_t)(v110 + 466048)) >> 32) >> 1));
  LOBYTE(v110) = (*(unsigned char *)(STACK[0x718] + (v110 - 965 * ((4450744 * (unint64_t)v110) >> 32))) >> 4) ^ 0xD;
  int v112 = (v110 - 2 * (v110 & 3) - 45) ^ *(unsigned __int8 *)(STACK[0x718] + v109 % 0x3C5);
  unsigned int v113 = ((v111 ^ 0xD3) << 12) ^ (v105 << 8);
  unsigned int v114 = 662
       * (((((v89 >> 12) & 0xF0 | WORD1(v16) & 0xF) ^ 2)
         + 1107048469
         - 2 * (((v89 >> 12) & 0x10 | WORD1(v16) & 0xD) ^ WORD1(v16) & 8)) ^ 0x41FC3815);
  unsigned int v115 = 662
       * (*(unsigned __int8 *)(STACK[0x718] + (v114 + 466048) % 0x3C5) ^ (16
                                                                        * (*(unsigned __int8 *)(STACK[0x718]
                                                                                              + ((((2 * v112) & 0xFFFFFFEF)
                                                                                                + (v112 ^ 0xFF77E6F7)
                                                                                                + 8920340)
                                                                                               * (((2 * v112) & 0xFFFFFFEF)
                                                                                                + (v112 ^ 0xFF77E6F7)
                                                                                                + 8920340)
                                                                                               - 109561
                                                                                               + (-8920009
                                                                                                - (((2 * v112) & 0xFFFFFFEF)
                                                                                                 + (v112 ^ 0xFF77E6F7)))
                                                                                               * (((2 * v112) & 0xFFFFFFEF)
                                                                                                + (v112 ^ 0xFF77E6F7)
                                                                                                + 8920009))
                                                                                              % 0x3C5) ^ 0xD3)) ^ 0xD3);
  unsigned int v116 = v115 + 466048 - 965 * (((8901487 * (unint64_t)(v115 + 466048)) >> 32) >> 1);
  LOBYTE(v115) = (*(unsigned char *)(STACK[0x718] + (v115 - 965 * ((4450744 * (unint64_t)v115) >> 32))) >> 4) ^ 0xD;
  int v117 = (v115 - 2 * (v115 & 3) - 45) ^ *(unsigned __int8 *)(STACK[0x718] + v114 % 0x3C5);
  unsigned int v118 = (HIWORD(v88) & 0xF0 | (v16 >> 20) & 0xF) ^ 0xC2;
  unsigned int v119 = 662 * ((v118 + 1358258763 - 2 * (v118 & 0x4F ^ (v16 >> 20) & 4)) ^ 0x50F5624B);
  unsigned int v120 = 662
       * (*(unsigned __int8 *)(STACK[0x718] + (v119 + 466048) % 0x3C5) ^ (16
                                                                        * (*(unsigned __int8 *)(STACK[0x718]
                                                                                              + (662 * v117 + 466048 - 965 * ((4450744 * (unint64_t)(662 * v117 + 466048)) >> 32))) ^ 0xD3)) ^ 0xD3);
  unsigned int v121 = ((v88 >> 20) & 0xF0 | BYTE3(v16) & 0xF) ^ 0xBD;
  int v122 = (v121 + 351237719 - ((2 * v121) & 0xAE)) ^ 0x14EF7657;
  unsigned int v123 = 662 * v122;
  unsigned int v124 = ((662 * v122) ^ 0x4EBF7FDB) + ((1324 * v122) & 0x9D7EFFB4);
  unsigned int v125 = *(unsigned __int8 *)(STACK[0x718] + (v120 - 965 * ((4450744 * (unint64_t)v120) >> 32)));
  unint64_t v126 = STACK[0x718];
  unsigned int v127 = 662
       * ((((v125 >> 4) ^ 0xD) - 2 * (((v125 >> 4) ^ 0xD) & 3) - 45) ^ *(unsigned __int8 *)(STACK[0x718] + v119 % 0x3C5))
       + 466048;
  unsigned int v128 = ((*(unsigned __int8 *)(STACK[0x718]
                              + v120
                              + 466048
                              - 965 * (((8901487 * (unint64_t)(v120 + 466048)) >> 32) >> 1)) ^ 0xD3) << 20) ^ ((*(unsigned __int8 *)(STACK[0x718] + v116) ^ 0xD3) << 16);
  int v129 = *(unsigned __int8 *)(STACK[0x718] + (v127 - 965 * ((4450744 * (unint64_t)v127) >> 32))) ^ 0xD3;
  int v130 = *(unsigned __int8 *)(STACK[0x718]
                            + (v124 - 1320706907)
                            % (-1032533004 - ((v124 + 498853) & 0x4C82E | (1320706906 - v124) & 0xC274C82F)));
  unsigned int v131 = v123 % 0x3C5;
  unsigned int v132 = 662 * (v130 ^ (16 * v129) ^ 0xD3);
  int v133 = (16 * (((_BYTE)v98 - 108) & 0xF)) ^ 0x40 | v92;
  unsigned int v134 = v132 + 466048 - 965 * (((8901487 * (unint64_t)(v132 + 466048)) >> 32) >> 1);
  int v135 = (*(unsigned __int8 *)(STACK[0x718] + (v132 - 965 * ((4450744 * (unint64_t)v132) >> 32))) >> 4) ^ 0xD;
  int v136 = *(unsigned __int8 *)(STACK[0x718] + v100);
  unsigned int v137 = 662 * ((v135 + (~(2 * v135) | 0xF9) - 44) ^ *(unsigned __int8 *)(STACK[0x718] + v131))
       + 466048;
  unsigned int v138 = 662 * ((HIBYTE(v88) & 0xF0 | (v16 >> 28)) ^ 0xDD) + 466048;
  unsigned int v139 = 662
       * (*(unsigned __int8 *)(STACK[0x718] + (v138 - 965 * ((4450744 * (unint64_t)v138) >> 32))) ^ (16 * (*(unsigned __int8 *)(STACK[0x718] + (v137 - 965 * ((4450744 * (unint64_t)v137) >> 32))) ^ 0xD3)) ^ 0xD3)
       + 466048;
  int v140 = 16 * (v136 ^ 0xD3) - 260034428;
  unsigned int v141 = v113 ^ (v140 - ((32 * v136) & 0x100));
  int v142 = (v140 ^ (v98 - 108)) & 0xF0 | v96;
  unsigned int v143 = v141 ^ 0x2CD315D0 ^ v128;
  unsigned int v144 = v143 ^ ((*(unsigned __int8 *)(STACK[0x718] + v134) ^ 0xD3) << 24);
  int v145 = *(unsigned __int8 *)(STACK[0x718]
                            + ((((2 * v133) & 0x282207E) + (v133 ^ 0x3BF77D3F) - 1006074538)
                             * (((2 * v133) & 0x282207E) + (v133 ^ 0x3BF77D3F) - 1006074538)
                             - 109561
                             + (1006074869 - (((2 * v133) & 0x282207E) + (v133 ^ 0x3BF77D3F)))
                             * (((2 * v133) & 0x282207E) + (v133 ^ 0x3BF77D3Fu) - 1006074869))
                            % 0x3C5);
  unsigned int v146 = 662 * (v142 ^ 0x10) + 218460;
  int v147 = (v141 >> 4) & 0xF0 | (v77 >> 8) & 0xF;
  int v148 = v145 ^ (16 * (*(unsigned __int8 *)(STACK[0x718] + v146 % 0x3C5) ^ 0xD3));
  int v149 = (v143 >> 12) & 0xF0;
  unsigned int v150 = v148 ^ ((*(unsigned __int8 *)(STACK[0x718]
                                     + (662 * v147
                                                    + 218460
                                                    - 965
                                                    * ((4450744 * (unint64_t)(662 * v147 + 218460)) >> 32))) ^ 0xD3) << 8);
  unsigned int v151 = 662 * (((v113 >> 8) & 0xF0 | ((unsigned __int16)v16 >> 12)) ^ 1) + 218460;
  int v152 = v150 ^ ((*(unsigned __int8 *)(STACK[0x718]
                                     + (v151 - 965 * ((4450744 * (unint64_t)v151) >> 32))) ^ 0xD3) << 12);
  unsigned int v153 = 662 * ((v149 & 0xFFFFFFF0 | WORD1(v16) & 0xF) ^ 0x32) + 218460;
  unsigned int v154 = v152 ^ ((*(unsigned __int8 *)(STACK[0x718]
                                     + (v153 - 965 * ((4450744 * (unint64_t)v153) >> 32))) ^ 0xD3) << 16);
  unsigned int v155 = 662 * ((HIWORD(v128) & 0xF0 | (v16 >> 20) & 0xF) ^ 2) + 218460;
  unsigned int v156 = v154 ^ ((*(unsigned __int8 *)(STACK[0x718]
                                     + (v155 - 965 * ((4450744 * (unint64_t)v155) >> 32))) ^ 0xD3) << 20);
  unsigned int v157 = ((v144 ^ ((*(unsigned __int8 *)(STACK[0x718]
                                       + v139
                                       - 965 * (((8901487 * (unint64_t)v139) >> 32) >> 1)) ^ 3) << 28)) >> 24) & 0xF0 | (v16 >> 28);
  int v158 = ((2 * v157) & 0x1A6 ^ 0x1A2) + (v157 ^ 0x7DBBFC0E);
  unsigned int v159 = 662 * (((v144 >> 20) & 0xF0 | BYTE3(v16) & 0xF) ^ 0xCD) + 218460;
  int v160 = ((*(unsigned __int8 *)(STACK[0x718]
                              + ((v158 - 2109471294) * (v158 - 2109471294)
                               - 109561
                               + (2109471625 - v158) * (v158 - 2109471625))
                              % 0x3C5u) ^ 3) << 28) ^ ((*(unsigned __int8 *)(STACK[0x718]
                                                                           + (v159
                                                                                          - 965
                                                                                          * ((4450744
                                                                                            * (unint64_t)v159) >> 32))) ^ 0xD3) << 24);
  unsigned int v161 = (((v160 - ((2 * v160) & 0x34000000) + 440791902) ^ v156) >> 24) ^ 0x1A;
  LODWORD(v16) = v161 - ((2 * v161) & 0xFFFFFFC7);
  int v162 = STACK[0x6A0];
  unsigned int v163 = (v49 - ((2 * v49 + 260284336) & 0x318BD2C8) - 1064847044) ^ 0xFE0DE8ED ^ v58;
  unint64_t v164 = STACK[0x708];
  *(_DWORD *)(STACK[0x708] + 4 * (unsigned __int16)(v162 - 18528 - 283 * ((((_WORD)v162 - 18528) & 0xFFF0u) / 0x11B))) = v163;
  unsigned int v165 = 662 * ((v16 + 1064649443) & 0xF ^ 3) + 454132;
  int v166 = ((((((*(unsigned __int8 *)(v126 + (v165 - 965 * ((4450744 * (unint64_t)v165) >> 32))) ^ 0xD3) << 8) ^ ((*(unsigned __int8 *)(v126 + (662 * (((v16 + 1064649443) >> 4) ^ 0x3F7542E) + 454132) % 0x3C5) ^ 0xD3) << 12) | *(unsigned __int8 *)(v126 + (662 * (HIWORD(v154) & 0xF) + 454132 - 965 * ((4450744 * (unint64_t)(662 * (HIWORD(v154) & 0xF) + 454132)) >> 32))) ^ 0xD3) << 8) ^ ((*(unsigned __int8 *)(v126 + (662 * ((v156 >> 20) & 0xF) + 454132 - 965 * ((4450744 * (unint64_t)(662 * ((v156 >> 20) & 0xF) + 454132)) >> 32))) ^ 0xD3) << 12) | *(unsigned __int8 *)(v126 + (662 * ((v150 >> 8) & 0xF) + 454132 - 965 * ((4450744 * (unint64_t)(662 * ((v150 >> 8) & 0xF) + 454132)) >> 32))) ^ 0xD3) << 8) ^ ((*(unsigned __int8 *)(v126 + (662 * ((unsigned __int16)v152 >> 12) + 454132 - 965 * ((4450744 * (unint64_t)(662 * ((unsigned __int16)v152 >> 12) + 454132)) >> 32))) ^ 0xD3) << 12);
  int v167 = ((v148 >> 4) ^ 0xD) - 104996719 - 2 * ((v148 >> 4) ^ 0xD) + 430;
  int v168 = STACK[0x664];
  *(_DWORD *)(v164 + 4 * (unsigned __int16)(v162 + 3328 - 283 * ((((_WORD)v162 + 3328) & 0xFFF0u) / 0x11B))) = (v51 - 2 * LODWORD(STACK[0x6AC]) + 1153514435) ^ (16 * (*(unsigned __int8 *)(v126 + 662 * (((2 * v167) & 0x15C ^ 0x5C) + (v167 ^ 0xF9BDE091)) % 0x3C5) ^ 0xD3)) ^ 0xDCF0D79A ^ (v166 | *(unsigned __int8 *)(v126 + (662 * (v145 & 0xF ^ 3) + 454132 - 965 * ((4450744 * (unint64_t)(662 * (v145 & 0xF ^ 3u) + 454132)) >> 32))) ^ 0xD3);
  return (*(uint64_t (**)(void))(STACK[0x6F8] + 8 * ((2014 * (LODWORD(STACK[0x700]) != 47)) ^ (v168 - 519))))();
}

uint64_t sub_100138F1C@<X0>(unint64_t a1@<X2>, int a2@<W3>, unint64_t a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X6>, int a6@<W7>, unsigned int a7@<W8>, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30)
{
  BOOL v42 = a7 > v32;
  int v43 = v34 + a6;
  int v44 = v34 + 1;
  uint64_t v45 = 4 * (v44 + a6);
  unint64_t v46 = (*(_DWORD *)(a30 + v45) ^ v31) + (a4 ^ HIDWORD(v41));
  unint64_t v47 = (*(_DWORD *)(*v36 + v45) ^ v31) * a5
      + HIDWORD(a1)
      + ((a2 + ((v30 - 628) | v38) + v46 - (v40 & (2 * v46)) - 3388) ^ a3);
  *(_DWORD *)(a30 + 4 * v43) = v47 + v31 - (v33 & (2 * v47));
  if (v42 == v44 + 45033380 < -939067627) {
    BOOL v42 = v44 + 45033380 < v37;
  }
  return (*(uint64_t (**)(void))(v39 + 8 * ((v42 * v35) ^ v30)))();
}

uint64_t sub_100138FD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, unsigned int a14)
{
  a14 = 31090337 * (&a13 ^ 0xC7816049) + 1655392376;
  uint64_t v16 = (*(uint64_t (**)(int *))(v14 + 37600))(&a13);
  return (*(uint64_t (**)(uint64_t))(v14 + 8
                                                  * (((4 * (a13 == 847203058)) | ((a13 == 847203058) << 10)) ^ v15)))(v16);
}

void sub_100139050(int a1@<W8>)
{
  int v3 = a1 + 2080300029;
  if (*v2 + 1817366286 < 0) {
    int v3 = 1093 * (v1 ^ 0xCE7) - a1 + 2013185956;
  }
  *uint64_t v2 = *v2 - 2046744632 + v3;
  JUMPOUT(0x1001390F8);
}

uint64_t sub_100139148(uint64_t a1, int a2)
{
  return (*(uint64_t (**)(void))(v3 + 8 * (a2 ^ (114 * ((unint64_t)(v2 - a1) > 0x1F)))))();
}

uint64_t sub_100139188()
{
  return (*(uint64_t (**)(void))(v4 + 8 * ((((((v3 ^ 0xEC6) - 2413) & v1) == 0) * (v3 - 1806)) ^ v3)))((v0 - v2));
}

void sub_1001391BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  if (a5) {
    BOOL v6 = a6 == 0;
  }
  else {
    BOOL v6 = 1;
  }
  int v7 = v6;
  __asm { BRAA            X9, X17 }
}

uint64_t sub_100139234(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, void))(v11
                                                                               + 8
                                                                               * ((((((a8 - v8 - 2865) ^ (v9 + 2377)) & v10) == 0)
                                                                                 * ((a8 ^ 0x147) + 4186)) ^ a8)))(a1, a2, a3, a4, (a2 - a4));
}

uint64_t sub_100139274(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,unsigned int *a63)
{
  (*(void (**)(void, unint64_t *, uint64_t))(v63 + 8 * (v64 ^ 0x1937)))(*a63, &STACK[0x330], 2048);
  int v66 = (*(uint64_t (**)(void, unint64_t *, void, uint64_t))(v63 + 8 * (int)(v64 + 1831)))(*a63, &STACK[0x440], v65 + LODWORD(STACK[0x31C]) + v64 - 493 - 2437, 1);
  BOOL v67 = ((2 * v66) & 0xFBDFD4BC) + (v66 ^ ((v64 ^ 0x3C9) + 2112872867)) != 2112875102;
  return (*(uint64_t (**)(void))(v63 + 8 * (((2 * v67) | (4 * v67)) ^ v64)))();
}

uint64_t sub_100139338()
{
  uint64_t v4 = (*(uint64_t (**)(void))(v1 + 8 * (v0 ^ 0x1BE4)))();
  LODWORD(STACK[0x308]) = v2;
  return (*(uint64_t (**)(uint64_t))(v1 + 8 * (((((v0 ^ 0xF7) + 1155) ^ 0xDE3) * v3) ^ (v0 - 1624))))(v4);
}

uint64_t sub_10013938C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(v7
                              + 8
                              * ((47 * (((((v6 + 1603310580) & 0x785E42AF) + 0xFFFFFFFFFFFFDD8) & a6) == 0)) ^ (v6 - 672209398))))();
}

uint64_t sub_1001393E8()
{
  unsigned int v9 = v0 + (((&v7 | 0x30C1BCD4) - (&v7 & 0x30C1BCD4)) ^ 0x266FEA90) * v2 + 3323;
  uint64_t v8 = v6;
  (*(void (**)(uint64_t *))(v1 + 8 * (v0 ^ 0x16FD)))(&v7);
  uint64_t v8 = v5;
  unsigned int v9 = v0 + 531 + (((&v7 | 0x4E6C35CB) + (~&v7 | 0xB193CA34)) ^ 0x58C2638E) * v2 + 2792;
  (*(void (**)(uint64_t *))(v1 + 8 * ((v0 + 531) ^ 0x1490)))(&v7);
  return (v3 - 847203058);
}

uint64_t sub_1001394E4(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(STACK[0x418] + 24);
  STACK[0x5A8] = v3;
  return (*(uint64_t (**)(void))(a2 + 8 * (((v3 == 0) * (v2 - 4511 + 179 * (v2 ^ 0x830))) ^ v2)))();
}

uint64_t sub_100139538()
{
  uint64_t v4 = *(uint64_t (**)(void))(v2
                           + 8
                           * ((((*(uint64_t (**)(void))(v2 + 8 * (v3 ^ 0x3ADu)))(v0 ^ v1) == 0)
                             * (((109 * (v3 ^ 0x118E)) ^ 0x1A) - 3364)) ^ v3));
  return v4();
}

uint64_t sub_100139590()
{
  unint64_t v2 = STACK[0x550];
  unint64_t v3 = *(void *)STACK[0x8F8];
  STACK[0x890] = *(void *)(v1 + 8 * v0);
  STACK[0x590] = v3;
  LODWORD(STACK[0x4CC]) = 1147330569;
  STACK[0x700] = v2;
  return (*(uint64_t (**)(void))(v1
                              + 8 * (((v2 == 0) * (((v0 + 1951) | 0x18A) ^ 0x835)) ^ (((v0 + 1951) | 0x18A) + 1843))))();
}

uint64_t sub_1001395F0(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  *(void *)(a3 + (a4 - v5 + 2160)) = *(void *)(a2 + (a4 - v5 + 2160));
  return (*(uint64_t (**)(void))(v8 + 8 * (((2 * (v4 + v5 - 1968 != v7)) | (8 * (v4 + v5 - 1968 != v7))) ^ v6)))();
}

uint64_t sub_100139628(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6, int a7)
{
  unsigned int v9 = a5 - 32;
  uint64_t v10 = v7 + v9;
  long long v11 = *(_OWORD *)(v10 - 31);
  uint64_t v12 = a1 + v9;
  *(_OWORD *)(v12 - 15) = *(_OWORD *)(v10 - 15);
  *(_OWORD *)(v12 - 31) = v11;
  return (*(uint64_t (**)(void))(v8 + 8 * (((a6 != 32) * (((a7 + 1872) | 0x40) - 2343)) ^ (a7 + 1365))))();
}

uint64_t sub_100139634(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v6 + 8 * ((((v5 ^ 0xE23) + 381) * (v4 == a4)) ^ v5)))();
}

uint64_t sub_10013966C()
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (int)(((((v0 == v1) ^ (89 * (v2 ^ 0xE0))) & 1)
                                     * ((v2 + 1495166828) & 0xA6E18796 ^ 0x4F9)) ^ v2)))();
}

uint64_t sub_1001396C0()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((27 * (v0 == 1)) ^ v1)))();
}

uint64_t sub_1001396CC(uint64_t a1)
{
  unint64_t v3 = STACK[0x460];
  unint64_t v4 = LODWORD(STACK[0x3C4]);
  STACK[0x3D0] = v4;
  return (*(uint64_t (**)(uint64_t, unint64_t))(v2
                                                              + 8
                                                              * ((250
                                                                * (v4 == (v1 ^ 0x241) + (v1 ^ 0xE27) - 3208)) ^ v1)))(a1, v3);
}

uint64_t sub_100139710()
{
  int v6 = v0 + v4;
  *(_DWORD *)(*v3 + 4 * (v6 - 1)) = v1;
  return (*(uint64_t (**)(void))(v5 + 8 * ((2042 * (v6 - 2 >= 0)) ^ v2)))();
}

uint64_t sub_100139750(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19, unsigned int a20,uint64_t a21,char *a22)
{
  int v26 = v23 + 3445;
  a21 = a17;
  a22 = &a15;
  a20 = (v26 - 1479) ^ ((((&a19 | 0x6116CA9) + (~&a19 | 0xF9EE9356)) ^ 0xB718EA66) * v22);
  (*(void (**)(int *))(v24 + 8 * (v26 + 879)))(&a19);
  a21 = a17;
  LODWORD(a22) = v26 - 476588053 * (&a19 ^ 0xBDFD0443) - 1136;
  uint64_t v27 = (*(uint64_t (**)(int *))(v24 + 8 * (v26 + 912)))(&a19);
  return (*(uint64_t (**)(uint64_t))(v24
                                            + 8
                                            * (((a19 == v25 + (v26 ^ 0xA79) - 1214) * ((v26 ^ 0xAA6) + 6680)) ^ v26)))(v27);
}

uint64_t sub_100139758(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,int a28,unsigned __int8 a29,int a30,int a31,int a32,unsigned __int8 a33,int a34,char a35,int a36,int a37,unsigned __int8 a38,int a39,int a40,int a41)
{
  LODWORD(STACK[0x2B0]) = (a29 | ((a37 ^ 0xC) << 24) | (unsigned __int16)((a35 ^ a41 ^ 0xA1) << 8) | ((a38 ^ 0x23) << 16)) ^ 0x618C24DF;
  LODWORD(STACK[0x2A0]) = a36 ^ 0x8A2C440D;
  LODWORD(STACK[0x2B8]) = ((a40 << 8) | (a32 << 24) | (a30 << 16) | a34) ^ 0xC8B65E73;
  LODWORD(STACK[0x2D0]) = (((a31 ^ 0x1A) << 24) | (a39 << 16) | a33 | ((LODWORD(STACK[0x2D8]) ^ a4) << 8)) ^ 0x6501BCC2;
  int v44 = a41 + 768;
  unint64_t v45 = v41 & 0xFFFFFFF1 ^ 0xA177261F;
  STACK[0x270] = v45;
  LODWORD(v45) = *(unsigned __int8 *)(a22 + (*(unsigned __int8 *)(a20 + v45) ^ 0xD9));
  unint64_t v46 = ((a41 + 178) | 0x34) ^ 0xA177256D ^ ((a41 - 6) | 6) ^ v41 & 0xFFFFFFFB;
  STACK[0x230] = v46;
  uint64_t v47 = *(unsigned __int8 *)(a20 + v46);
  LODWORD(STACK[0x2D8]) = (((16 * v45) ^ 0x40) + (((16 * v45) ^ 0x40u) >> 6 << 7) + 68) ^ v45;
  LOBYTE(v45) = v47 ^ 0xB7;
  char v48 = *(unsigned char *)(a23 + (v47 ^ 0xE6));
  unint64_t v49 = v41 & 0xFFFFFFF0 ^ 0xA177261F;
  STACK[0x298] = v49;
  int v50 = *(unsigned __int8 *)(a20 + v49);
  unsigned __int8 v51 = (v48 + v45 - 98) ^ 0xE5;
  if ((v50 & 0x20) != 0) {
    int v52 = -32;
  }
  else {
    int v52 = 32;
  }
  v301[0] = *(unsigned char *)(a24 + ((v52 + v50) ^ 0xDDLL)) + ((v52 + v50) ^ 0x31);
  unint64_t v53 = v41 & 0xFFFFFFF9 ^ 0xA1772617;
  STACK[0x268] = v53;
  LODWORD(v53) = *(unsigned __int8 *)(a22 + (*(unsigned __int8 *)(a20 + v53) ^ 0x51));
  unint64_t v54 = v41 & 0xFFFFFFF3 ^ 0xA177261F;
  STACK[0x240] = v54;
  unint64_t v55 = v41 ^ 0xA1772617;
  STACK[0x218] = v55;
  HIDWORD(v56) = v53 ^ (((16 * v53) ^ 0x40) + (((16 * v53) ^ 0x40u) >> 6 << 7) + 68) ^ 0x3F;
  LODWORD(v56) = BYTE4(v56) & 0xF8;
  unint64_t v57 = ((v56 >> 3) | ((unint64_t)v51 << 13)) ^ 0x58F620A6;
  unsigned int v294 = (v57 >> 21) | (v57 << 11);
  char v299 = *(unsigned char *)(a23
                  + (*(unsigned __int8 *)(a20 + v54) ^ 0xF7)
                  - 2 * ((*(unsigned __int8 *)(a20 + v54) ^ 0xFFFFFFE7) & 0xAE)
                  + 174)
       + (*(unsigned char *)(a20 + v54) ^ 8);
  uint64_t v58 = *(unsigned __int8 *)(a20 + v55);
  unint64_t v59 = v41 & 0xFFFFFFFC ^ 0xA1772617;
  STACK[0x250] = v59;
  uint64_t v60 = *(unsigned __int8 *)(a20 + v59);
  char v61 = *(unsigned char *)(a23 + (v58 ^ 0xD8)) + (v58 ^ 0x76) - 2 * (v58 ^ 0x76);
  unint64_t v62 = v41 & 0xFFFFFFF7 ^ 0xA177261F;
  STACK[0x260] = v62;
  char v297 = (v60 ^ 0xBB) + *(unsigned char *)(a24 + (v60 ^ 0x57));
  LOBYTE(v58) = (*(unsigned char *)(a20 + v62) ^ 0xA7) + *(unsigned char *)(a23 + (*(unsigned __int8 *)(a20 + v62) ^ 0xF6));
  char v296 = v58 - ((2 * v58 + 60) & 0x4E);
  unint64_t v63 = v41 & 0xFFFFFFF8 ^ 0xA1772617;
  STACK[0x220] = v63;
  LOBYTE(v63) = (*(unsigned char *)(a20 + v63) ^ 0xE9) + *(unsigned char *)(a24 + (*(unsigned __int8 *)(a20 + v63) ^ 5));
  unint64_t v64 = v41 & 0xFFFFFFF2 ^ 0xA177261F;
  STACK[0x210] = v64;
  LODWORD(v64) = *(unsigned __int8 *)(a21 + (*(unsigned __int8 *)(a20 + v64) ^ 0x12));
  LODWORD(v60) = (((v64 >> 3) ^ 6) & 0xFFFFFFFB ^ v64 & 0x5A | ((v64 >> 3) ^ 6) & 4 ^ v64 & 0xA4) >> 1;
  uint64_t v304 = v41 & 0xFFFFFFFA ^ 0xA1772617;
  unsigned __int8 v65 = v64 ^ 0x3A ^ ((v60 ^ 0x1A) - 2 * ((v60 ^ 0x1A) & 0x54 ^ v60 & 4) - 48);
  LOBYTE(v54) = *(unsigned char *)(a21 + (*(unsigned __int8 *)(a20 + v304) ^ 0x9CLL));
  LODWORD(v60) = ((v54 ^ 0x34) >> 4) ^ ((v54 ^ 0x34) >> 1);
  int v66 = (v63 - 12) | ((v54 ^ 0xE6 ^ (v60 - ((2 * v60) & 0xEF) + 119)) << 16);
  uint64_t v309 = v41 & 0xFFFFFFF6 ^ 0xA177261F;
  unsigned int v67 = *(unsigned __int8 *)(a21 + (*(unsigned __int8 *)(a20 + v309) ^ 0x76));
  char v68 = v67 & 8 | 0x54;
  if (((v67 >> 3) & v67 & 8) != 0) {
    char v68 = -88 - v68;
  }
  uint64_t v308 = v41 & 0xFFFFFFF5 ^ 0xA177261F;
  char v69 = ((((v67 >> 3) ^ 6) + v68 - 84) ^ v67 & 0xF7) >> 1;
  unsigned __int8 v292 = v67 ^ 0xDA ^ ((v69 ^ 0x1A) - 2 * ((v69 ^ 0x1A) & 0xEF ^ v69 & 4) - 21);
  v307[0] = v41;
  uint64_t v305 = v41 & 0xFFFFFFF4 ^ 0xA177261F;
  uint64_t v306 = v41 & 0xFFFFFFFE ^ 0xA1772617;
  char v70 = *(unsigned char *)(a21 + (*(unsigned __int8 *)(a20 + v306) ^ 0xCFLL));
  unsigned __int8 v71 = ((v70 | 0xBF) + 68) ^ v70 & 0xBF;
  int v72 = (v71 >> 4) ^ (v71 >> 1);
  char v73 = *(unsigned char *)(a22 + (*(unsigned __int8 *)(a20 + v308) ^ 0xFBLL));
  uint64_t v74 = *(void *)(v43 + 8 * (v44 ^ 0xCA4));
  int v75 = *(_DWORD *)(v74 + 4 * ((v73 ^ (16 * v73)) ^ 0x32u));
  unsigned __int8 v76 = ((v72 ^ 0x18) - ((2 * v72) & 0xC) - 122) ^ v71;
  HIDWORD(v77) = v75 ^ 0xD6FA;
  LODWORD(v77) = v75 ^ 0x3AD20000;
  int v78 = v65;
  uint64_t v79 = *(void *)(v43 + 8 * (a41 - 2347));
  int v80 = *(_DWORD *)(v79 + 4 * ((v61 - 99) ^ 0xF9u));
  int v302 = a41 + 768;
  uint64_t v81 = *(void *)(v43 + 8 * (v44 ^ 0xCFF)) - 8;
  int v82 = *(_DWORD *)(v81 + 4 * (v78 ^ 0xABu));
  int v83 = (v77 >> 16) ^ v80 ^ (16 * (v82 ^ 0x264DAAB2) + 2025015490 - ((32 * (v82 ^ 0x264DAAB2)) & 0xF1669180));
  unsigned __int8 v84 = BYTE2(v66) ^ BYTE2(v294);
  uint64_t v85 = *(void *)(v43 + 8 * (v44 ^ 0xC6A)) - 12;
  int v86 = *(_DWORD *)(v85 + 4 * ((v66 ^ v294) ^ 0x78u)) ^ v82;
  int v87 = *(_DWORD *)(v74 + 4 * (LODWORD(STACK[0x2D8]) ^ 0x71u));
  HIDWORD(v77) = v87 ^ 0xD6FA;
  LODWORD(v77) = v87 ^ 0x3AD20000;
  unsigned int v88 = v86 ^ (v83 + 1125534984 - ((2 * v83) & 0x862C9A10));
  int v89 = *(_DWORD *)(v81 + 4 * (v76 ^ 0xEu)) ^ 0x264DAAB2;
  int v90 = (v77 >> 16) ^ (16 * v89 + 2025015490 - ((32 * v89) & 0xF1669180)) ^ *(_DWORD *)(v79 + 4
                                                                                            * (HIBYTE(v294) ^ 0xDD));
  uint64_t v303 = v41 & 0xFFFFFFFD ^ 0xA1772617;
  char v91 = *(unsigned char *)(a22 + (*(unsigned __int8 *)(a20 + v303) ^ 0x26)) ^ 0xFC;
  int v92 = *(_DWORD *)(v74 + 4 * ((v91 ^ (16 * v91)) ^ 0xFBu));
  unsigned int v93 = *(_DWORD *)(v85
                  + 4
                  * ((*(unsigned char *)(a24 + (*(unsigned __int8 *)(a20 + v305) ^ 0x12))
                                     + (*(unsigned char *)(a20 + v305) ^ 0xFE)
                                     - 12) ^ 0xB9u)) ^ v89 ^ (v90 + 1125534984 - ((2 * v90) & 0x862C9A10));
  HIDWORD(v77) = v92 ^ 0xD6FA;
  LODWORD(v77) = v92 ^ 0x3AD20000;
  int v94 = *(_DWORD *)(v81 + 4 * (v84 ^ 3u)) ^ 0x264DAAB2;
  int v95 = (v77 >> 16) ^ *(_DWORD *)(v79 + 4 * ((v296 - 59) ^ 0x40u)) ^ (16 * v94
                                                                                       + 2025015490
                                                                                       - ((32 * v94) & 0xF1669180));
  unsigned int v96 = *(_DWORD *)(v85 + 4 * ((v301[0] - 12) ^ 0xEBu)) ^ v94 ^ (v95
                                                                                  + 1125534984
                                                                                  - ((2 * v95) & 0x862C9A10));
  int v97 = *(_DWORD *)(v81 + 4 * (v292 ^ 0x79u));
  int v98 = *(_DWORD *)(v74 + 4 * (BYTE1(v294) ^ 0x31u));
  HIDWORD(v77) = v98 ^ 0xD6FA;
  LODWORD(v77) = v98 ^ 0x3AD20000;
  int v99 = (v77 >> 16) ^ *(_DWORD *)(v79 + 4 * ((v299 - 98) ^ 0xF7u)) ^ (16 * (v97 ^ 0x264DAAB2)
                                                                                       + 2025015490
                                                                                       - ((32 * (v97 ^ 0x264DAAB2)) & 0xF1669180));
  int v100 = *(_DWORD *)(v74 + 4 * (BYTE1(v96) ^ 0xF4u));
  unsigned int v101 = *(_DWORD *)(v85 + 4 * ((v297 - 12) ^ 0x33u)) ^ v97 ^ (v99
                                                                                + 1125534984
                                                                                - ((2 * v99) & 0x862C9A10));
  HIDWORD(v77) = v100 ^ 0xD6FA;
  LODWORD(v77) = v100 ^ 0x3AD20000;
  int v102 = *(_DWORD *)(v81 + 4 * (BYTE2(v101) ^ 0xF6u)) ^ 0x264DAAB2;
  unsigned int v103 = v102 ^ *(_DWORD *)(v79 + 4 * (HIBYTE(v88) ^ 0x71)) ^ *(_DWORD *)(v85 + 4 * (v93 ^ 0xDBu)) ^ (16 * v102 + 2025015490 - ((32 * v102) & 0xF1669180)) ^ (v77 >> 16);
  int v104 = *(_DWORD *)(v81 + 4 * (BYTE2(v88) ^ 0xA1u));
  int v105 = *(_DWORD *)(v74 + 4 * ((unsigned __int16)(v101 ^ 0xA89C) >> 8));
  HIDWORD(v77) = v105 ^ 0xD6FA;
  LODWORD(v77) = v105 ^ 0x3AD20000;
  int v106 = (16 * (v104 ^ 0x264DAAB2) + 2025015490 - ((32 * (v104 ^ 0x264DAAB2)) & 0xF1669180)) ^ *(_DWORD *)(v79 + 4 * (HIBYTE(v93) ^ 0xF)) ^ (v77 >> 16);
  unsigned int v107 = *(_DWORD *)(v85 + 4 * (v96 ^ 0x80u)) ^ v104 ^ (v106 + 1125534984 - ((2 * v106) & 0x862C9A10));
  int v108 = *(_DWORD *)(v81 + 4 * (BYTE2(v93) ^ 0xD6u)) ^ 0x264DAAB2;
  unsigned int v109 = (16 * v108 + 2025015490 - ((32 * v108) & 0xF1669180)) ^ *(_DWORD *)(v79 + 4 * (HIBYTE(v96) ^ 0x19));
  int v110 = *(_DWORD *)(v74 + 4 * (BYTE1(v88) ^ 0x4Cu));
  HIDWORD(v77) = v110 ^ 0xD6FA;
  LODWORD(v77) = v110 ^ 0x3AD20000;
  unsigned int v111 = *(_DWORD *)(v85 + 4 * (v101 ^ 0x9Cu)) ^ v108 ^ (v77 >> 16) ^ (v109
                                                                                        + 1125534984
                                                                                        - ((2 * v109) & 0x862C9A10));
  int v112 = *(_DWORD *)(v74 + 4 * (BYTE1(v93) ^ 0xADu));
  HIDWORD(v77) = v112 ^ 0xD6FA;
  LODWORD(v77) = v112 ^ 0x3AD20000;
  int v113 = *(_DWORD *)(v81 + 4 * (BYTE2(v96) ^ 0x32u));
  int v114 = (v77 >> 16) ^ *(_DWORD *)(v79 + 4 * (HIBYTE(v101) ^ 0x9B)) ^ (16 * (v113 ^ 0x264DAAB2)
                                                                       + 2025015490
                                                                       - ((32 * (v113 ^ 0x264DAAB2)) & 0xF1669180));
  unsigned int v115 = v113 ^ *(_DWORD *)(v85 + 4 * (v88 ^ 0x12u)) ^ 0x57847C76 ^ (v114
                                                                                      + 1125534984
                                                                                      - ((2 * v114) & 0x862C9A10));
  unsigned int v116 = v115
       + 797718011
       - ((2 * v115) & 0x5F186BF6)
       + 1235395806
       - 2 * ((v115 + 797718011 - ((2 * v115) & 0x5F186BF6)) & 0x49A2A4DF ^ (v115 + 797718011) & 1);
  int v117 = *(_DWORD *)(v81 + 4 * (BYTE2(v116) ^ 0x61u));
  int v118 = *(_DWORD *)(v74 + 4 * (BYTE1(v111) ^ 0xDFu));
  unsigned int v119 = (16 * (v117 ^ 0x264DAAB2) + 2025015490 - ((32 * (v117 ^ 0x264DAAB2)) & 0xF1669180)) ^ *(_DWORD *)(v79 + 4 * (HIBYTE(v103) ^ 0xD5)) ^ (((v118 ^ 0x3AD2D6FAu) >> (v103 & 0x10) >> (v103 & 0x10 ^ 0x10)) + ((v118 << 16) ^ 0xD6FA0000));
  unsigned int v120 = *(_DWORD *)(v85 + 4 * (v107 ^ 0x6Bu)) ^ v117 ^ (v119 + 1125534984 - ((2 * v119) & 0x862C9A10));
  LOWORD(v119) = v103 ^ 0x9BCC;
  int v121 = *(_DWORD *)(v81 + 4 * (((v103 ^ 0x32DF9BCC) >> 16) ^ 0x93u)) ^ 0x264DAAB2;
  int v122 = *(_DWORD *)(v74 + 4 * (BYTE1(v116) ^ 0x37u));
  HIDWORD(v77) = v122 ^ 0xD6FA;
  LODWORD(v77) = v122 ^ 0x3AD20000;
  int v123 = (16 * v121 + 2025015490 - ((32 * v121) & 0xF1669180)) ^ *(_DWORD *)(v79 + 4 * (HIBYTE(v107) ^ 0x6D)) ^ (v77 >> 16);
  unsigned int v124 = *(_DWORD *)(v85 + 4 * (v111 ^ 0xF9u)) ^ v121 ^ (v123 + 1125534984 - ((2 * v123) & 0x862C9A10));
  int v125 = *(_DWORD *)(v79 + 4 * (HIBYTE(v111) ^ 5));
  HIDWORD(v77) = v125 ^ 0xC2;
  LODWORD(v77) = v125 ^ 0x78B34800;
  int v126 = v77 >> 10;
  int v127 = *(_DWORD *)(v74 + 4 * (BYTE1(v119) ^ 2u));
  HIDWORD(v77) = v127 ^ 0xD6FA;
  LODWORD(v77) = v127 ^ 0x3AD20000;
  int v128 = *(_DWORD *)(v81 + 4 * (BYTE2(v107) ^ 0x78u)) ^ 0x264DAAB2;
  unint64_t v129 = (unint64_t)(v126 ^ 0x25EB099Cu) << 10;
  int v130 = *(_DWORD *)(v85 + 4 * (v116 ^ 0xEDu)) ^ v128 ^ (v77 >> 16);
  int v131 = *(_DWORD *)(v74 + 4 * (BYTE1(v107) ^ 0x67u));
  HIDWORD(v77) = v131 ^ 0xD6FA;
  LODWORD(v77) = v131 ^ 0x3AD20000;
  unsigned int v132 = v130 ^ ((v129 ^ (16 * v128) ^ HIDWORD(v129))
               + 1125534984
               - 2 * ((v129 ^ (16 * v128) ^ HIDWORD(v129)) & 0x43164D0C ^ BYTE4(v129) & 4));
  int v133 = *(_DWORD *)(v81 + 4 * (BYTE2(v111) ^ 0xEBu));
  int v134 = (v77 >> 16) ^ (16 * (v133 ^ 0x264DAAB2) + 2025015490 - ((32 * (v133 ^ 0x264DAAB2)) & 0xF1669180)) ^ *(_DWORD *)(v79 + 4 * (HIBYTE(v116) ^ 0xA0));
  unsigned int v135 = *(_DWORD *)(v85 + 4 * (v119 ^ 0xD7u)) ^ v133 ^ (v134 + 1125534984 - ((2 * v134) & 0x862C9A10));
  int v136 = *(_DWORD *)(v81 + 4 * (BYTE2(v135) ^ 0x2Fu)) ^ 0x264DAAB2;
  int v137 = *(_DWORD *)(v74 + 4 * (BYTE1(v132) ^ 0xE4u));
  HIDWORD(v77) = v137 ^ 0xD6FA;
  LODWORD(v77) = v137 ^ 0x3AD20000;
  unsigned int v138 = (16 * v136 + 2025015490 - ((32 * v136) & 0xF1669180)) ^ *(_DWORD *)(v79 + 4 * (HIBYTE(v120) ^ 0xFB));
  unsigned int v139 = *(_DWORD *)(v85 + 4 * (v124 ^ 0x68u)) ^ v136 ^ (v77 >> 16) ^ (v138
                                                                                        + 1125534984
                                                                                        - ((2 * v138) & 0x862C9A10));
  int v140 = *(_DWORD *)(v81 + 4 * (BYTE2(v120) ^ 0x16u));
  int v141 = *(_DWORD *)(v74 + 4 * ((unsigned __int16)(v135 ^ 0x83E5) >> 8));
  HIDWORD(v77) = v141 ^ 0xD6FA;
  LODWORD(v77) = v141 ^ 0x3AD20000;
  int v142 = (16 * (v140 ^ 0x264DAAB2) + 2025015490 - ((32 * (v140 ^ 0x264DAAB2)) & 0xF1669180)) ^ *(_DWORD *)(v79 + 4 * (HIBYTE(v124) ^ 0xCE)) ^ (v77 >> 16);
  unsigned int v143 = *(_DWORD *)(v85 + 4 * (v132 ^ 0x15u)) ^ v140 ^ (v142 + 1125534984 - ((2 * v142) & 0x862C9A10));
  int v144 = *(_DWORD *)(v81 + 4 * (BYTE2(v124) ^ 0x60u)) ^ 0x264DAAB2;
  int v145 = *(_DWORD *)(v74 + 4 * (BYTE1(v120) ^ 0x31u));
  HIDWORD(v77) = v145 ^ 0xD6FA;
  LODWORD(v77) = v145 ^ 0x3AD20000;
  int v146 = (16 * v144 + 2025015490 - ((32 * v144) & 0xF1669180)) ^ *(_DWORD *)(v79 + 4 * (HIBYTE(v132) ^ 0xF1)) ^ (v77 >> 16);
  unsigned int v147 = *(_DWORD *)(v85 + 4 * (v135 ^ 0xE5u)) ^ v144 ^ (v146 + 1125534984 - ((2 * v146) & 0x862C9A10));
  int v148 = *(_DWORD *)(v81 + 4 * (BYTE2(v132) ^ 0xF7u));
  BOOL v149 = (v124 & 0x1000) == 0;
  int v150 = BYTE1(v124) ^ 0xC;
  if (v149) {
    int v151 = 16;
  }
  else {
    int v151 = -16;
  }
  int v152 = v148 ^ 0x264DAAB2;
  unsigned int v153 = *(_DWORD *)(v74 + 4 * ((v150 + v151) ^ 0x83u));
  unsigned int v154 = *(_DWORD *)(v79 + 4 * (HIBYTE(v135) ^ 0x87)) ^ HIWORD(v153) ^ (v153 << 16) ^ (16 * v152
                                                                                       + 2025015490
                                                                                       - ((32 * v152) & 0xF1669180)) ^ 0xD6FA3AD2;
  unsigned int v155 = *(_DWORD *)(v85 + 4 * (v120 ^ 0xD1u)) ^ v152 ^ (v154 + 1125534984 - ((2 * v154) & 0x862C9A10));
  int v156 = *(_DWORD *)(v74 + 4 * (BYTE1(v147) ^ 0x8Du));
  HIDWORD(v157) = v156 ^ 0xD6FA;
  LODWORD(v157) = v156 ^ 0x3AD20000;
  int v158 = *(_DWORD *)(v81 + 4 * (BYTE2(v155) ^ 0xBCu));
  int v159 = (v157 >> 16) ^ *(_DWORD *)(v79 + 4 * (HIBYTE(v139) ^ 0xCC)) ^ (16 * (v158 ^ 0x264DAAB2)
                                                                        + 2025015490
                                                                        - ((32 * (v158 ^ 0x264DAAB2)) & 0xF1669180));
  unsigned int v160 = *(_DWORD *)(v85 + 4 * (v143 ^ 0x1Bu)) ^ v158 ^ (v159 + 1125534984 - ((2 * v159) & 0x862C9A10));
  int v161 = *(_DWORD *)(v74 + 4 * (BYTE1(v155) ^ 0x3Bu));
  HIDWORD(v157) = v161 ^ 0xD6FA;
  LODWORD(v157) = v161 ^ 0x3AD20000;
  int v162 = *(_DWORD *)(v81 + 4 * (BYTE2(v139) ^ 0x9Cu));
  int v163 = (v157 >> 16) ^ *(_DWORD *)(v79 + 4 * (HIBYTE(v143) ^ 0x26)) ^ (16 * (v162 ^ 0x264DAAB2)
                                                                        + 2025015490
                                                                        - ((32 * (v162 ^ 0x264DAAB2)) & 0xF1669180));
  unsigned int v164 = *(_DWORD *)(v85 + 4 * (v147 ^ 0x48u)) ^ v162 ^ (v163
                                                                          + 1125534985
                                                                          + ~((2 * v163) & 0x862C9A10));
  int v165 = *(_DWORD *)(v81 + 4 * ((v143 ^ 0xCF79BB1B) >> 16)) ^ 0x264DAAB2;
  int v166 = *(_DWORD *)(v74 + 4 * (BYTE1(v139) ^ 0xD5u));
  HIDWORD(v157) = v166 ^ 0xD6FA;
  LODWORD(v157) = v166 ^ 0x3AD20000;
  int v167 = (16 * v165 + 2025015490 - ((32 * v165) & 0xF1669180)) ^ *(_DWORD *)(v79 + 4 * (HIBYTE(v147) ^ 0x80)) ^ (v157 >> 16);
  unsigned int v168 = *(_DWORD *)(v85 + 4 * (v155 ^ 0x77u)) ^ v165 ^ (v167 + 1125534984 - ((2 * v167) & 0x862C9A10));
  int v169 = *(_DWORD *)(v81 + 4 * (BYTE2(v147) ^ 0xBEu));
  int v170 = *(_DWORD *)(v74 + 4 * (BYTE1(v143) ^ 0x28u));
  HIDWORD(v157) = v170 ^ 0xD6FA;
  LODWORD(v157) = v170 ^ 0x3AD20000;
  int v171 = (v157 >> 16) ^ *(_DWORD *)(v79 + 4 * (HIBYTE(v155) ^ 0xEF)) ^ (16 * (v169 ^ 0x264DAAB2)
                                                                        + 2025015490
                                                                        - ((32 * (v169 ^ 0x264DAAB2)) & 0xF1669180));
  unsigned int v172 = *(_DWORD *)(v85 + 4 * (v139 ^ 0x83u)) ^ v169 ^ (v171 + 1125534984 - ((2 * v171) & 0x862C9A10));
  int v173 = *(_DWORD *)(v81 + 4 * ((v172 ^ 0xB340092F) >> 16)) ^ 0x264DAAB2;
  int v174 = *(_DWORD *)(v74 + 4 * (BYTE1(v168) ^ 0x89u));
  HIDWORD(v157) = v174 ^ 0xD6FA;
  LODWORD(v157) = v174 ^ 0x3AD20000;
  unsigned int v175 = (16 * v173 + 2025015490 - ((32 * v173) & 0xF1669180)) ^ *(_DWORD *)(v79 + 4 * ((v160 ^ 0x371FB178) >> 24));
  BYTE1(v162) = BYTE1(v164) ^ 0x7B;
  int v176 = v173 ^ *(_DWORD *)(v85 + 4 * (v164 ^ 0x3Au)) ^ (v157 >> 16) ^ (v175
                                                                                         + 1125534984
                                                                                         - 2
                                                                                         * (v175 & 0x43164D09 ^ *(_DWORD *)(v79 + 4 * ((v160 ^ 0x371FB178) >> 24)) & 1));
  int v177 = *(_DWORD *)(v81 + 4 * ((v160 ^ 0x371FB178) >> 16));
  int v178 = *(_DWORD *)(v74 + 4 * (BYTE1(v172) ^ 0x9Au));
  HIDWORD(v157) = v178 ^ 0xD6FA;
  LODWORD(v157) = v178 ^ 0x3AD20000;
  int v179 = (v176 ^ 0x71C9D6C4) - 2 * ((v176 ^ 0x71C9D6C4) & 0x53DDC3EB ^ v176 & 8);
  int v180 = (16 * (v177 ^ 0x264DAAB2) + 2025015490 - ((32 * (v177 ^ 0x264DAAB2)) & 0xF1669180)) ^ *(_DWORD *)(v79 + 4 * (HIBYTE(v164) ^ 0xF9)) ^ (v157 >> 16);
  unsigned int v181 = *(_DWORD *)(v85 + 4 * (v168 ^ 0x43u)) ^ v177 ^ (v180 + 1125534984 - ((2 * v180) & 0x862C9A10));
  unsigned int v182 = ((HIBYTE(v168) ^ 0xFFFFFF6C) + 234) ^ ((HIBYTE(v168) ^ 0xFFFFFF85) + 1);
  int v183 = *(_DWORD *)(v74 + 4 * (BYTE1(v160) ^ 0x22u));
  HIDWORD(v157) = v183 ^ 0xD6FA;
  LODWORD(v157) = v183 ^ 0x3AD20000;
  int v184 = *(_DWORD *)(v81 + 4 * (BYTE2(v164) ^ 0xEAu)) ^ 0x264DAAB2;
  int v185 = (16 * v184 + 2025015490 - ((32 * v184) & 0xF1669180)) ^ (v157 >> 16) ^ *(_DWORD *)(v79
                                                                                          + 4
                                                                                          * ((HIBYTE(v168) ^ 0xE216ADA1 ^ (v182 - 501830239 - ((2 * v182) & 0xC42D5BB6) + 58))
                                                                                           + 233));
  unsigned int v186 = *(_DWORD *)(v85 + 4 * (v172 ^ 0x2Fu)) ^ v184 ^ (v185 + 1125534984 - ((2 * v185) & 0x862C9A10));
  int v187 = *(_DWORD *)(v81 + 4 * (BYTE2(v168) ^ 0x85u));
  int v188 = *(_DWORD *)(v74 + 4 * BYTE1(v162));
  HIDWORD(v157) = v188 ^ 0xD6FA;
  LODWORD(v157) = v188 ^ 0x3AD20000;
  int v189 = (v157 >> 16) ^ *(_DWORD *)(v79 + 4 * (HIBYTE(v172) ^ 0x5A)) ^ (16 * (v187 ^ 0x264DAAB2)
                                                                        + 2025015490
                                                                        - ((32 * (v187 ^ 0x264DAAB2)) & 0xF1669180));
  unsigned int v190 = *(_DWORD *)(v85 + 4 * (v160 ^ 0x4Bu)) ^ v187 ^ (v189 + 1125534984 - ((2 * v189) & 0x862C9A10));
  int v191 = *(_DWORD *)(v74 + 4 * (BYTE1(v186) ^ 0xDEu));
  HIDWORD(v157) = v191 ^ 0xD6FA;
  LODWORD(v157) = v191 ^ 0x3AD20000;
  int v192 = v179 - 740441117;
  int v193 = *(_DWORD *)(v79 + 4 * (((v179 - 740441117) >> 24) ^ 0xBA));
  int v194 = *(_DWORD *)(v81 + 4 * (BYTE2(v190) ^ 0xCAu));
  int v195 = (v157 >> 16) ^ v193 ^ (16 * (v194 ^ 0x264DAAB2) + 2025015490 - ((32 * (v194 ^ 0x264DAAB2)) & 0xF1669180));
  unsigned int v196 = *(_DWORD *)(v85 + 4 * (v181 ^ 0x61u)) ^ v194 ^ (v195 + 1125534984 - ((2 * v195) & 0x862C9A10));
  int v197 = *(_DWORD *)(v74 + 4 * (BYTE1(v190) ^ 0x95u));
  HIDWORD(v157) = v197 ^ 0xD6FA;
  LODWORD(v157) = v197 ^ 0x3AD20000;
  int v198 = *(_DWORD *)(v81 + 4 * (BYTE2(v192) ^ 0xB7u)) ^ 0x264DAAB2;
  unsigned int v199 = v198 ^ *(_DWORD *)(v79 + 4 * (HIBYTE(v181) ^ 0xFB)) ^ *(_DWORD *)(v85 + 4 * (v186 ^ 0x69u)) ^ ((v157 >> 16) + 1125534984 - ((2 * (v157 >> 16)) & 0x862C9A10)) ^ (16 * v198 + 2025015490 - ((32 * v198) & 0xF1669180));
  int v200 = *(_DWORD *)(v81 + 4 * (BYTE2(v181) ^ 0xB7u));
  int v201 = *(_DWORD *)(v74 + 4 * (BYTE1(v192) ^ 0xA8u));
  HIDWORD(v157) = v201 ^ 0xD6FA;
  LODWORD(v157) = v201 ^ 0x3AD20000;
  int v202 = (16 * (v200 ^ 0x264DAAB2) + 2025015490 - ((32 * (v200 ^ 0x264DAAB2)) & 0xF1669180)) ^ *(_DWORD *)(v79 + 4 * (HIBYTE(v186) ^ 0x5F)) ^ (v157 >> 16);
  LOBYTE(v185) = (HIBYTE(v190) ^ 0x33) & 0x90 ^ 0x86 ^ (~(2 * (HIBYTE(v190) ^ 0x33 | 0x90))
                                                      + (HIBYTE(v190) ^ 0x33 | 0x90));
  unsigned int v203 = *(_DWORD *)(v85
                   + 4
                   * ((((v190 ^ 0xFD) + (v190 ^ 0xFFFFFF31) + 1) ^ 0xFFFFFFFE)
                    + (v190 ^ 0xFD))) ^ v200 ^ (v202 + 1125534984 - ((2 * v202) & 0x862C9A10));
  int v204 = *(_DWORD *)(v81 + 4 * (BYTE2(v186) ^ 0x2Du));
  int v205 = *(_DWORD *)(v74 + 4 * (BYTE1(v181) ^ 0x75u));
  HIDWORD(v157) = v205 ^ 0xD6FA;
  LODWORD(v157) = v205 ^ 0x3AD20000;
  int v206 = (v157 >> 16) ^ *(_DWORD *)(v79 + 4 * v185) ^ (16 * (v204 ^ 0x264DAAB2)
                                                                        + 2025015490
                                                                        - ((32 * (v204 ^ 0x264DAAB2)) & 0xF1669180));
  unsigned int v207 = *(_DWORD *)(v85 + 4 * (v192 ^ 0xB8u)) ^ v204 ^ (v206 + 1125534984 - ((2 * v206) & 0x862C9A10));
  int v208 = *(_DWORD *)(v81 + 4 * ((v207 ^ 0x7FE85E05) >> 16));
  int v209 = *(_DWORD *)(v74 + 4 * ((unsigned __int16)(v203 ^ 0x2D99) >> 8));
  HIDWORD(v157) = v209 ^ 0xD6FA;
  LODWORD(v157) = v209 ^ 0x3AD20000;
  int v210 = (16 * (v208 ^ 0x264DAAB2) + 2025015490 - ((32 * (v208 ^ 0x264DAAB2)) & 0xF1669180)) ^ *(_DWORD *)(v79 + 4 * (HIBYTE(v196) ^ 0xF4)) ^ (v157 >> 16);
  unsigned int v211 = *(_DWORD *)(v85 + 4 * (v199 ^ 0xEEu)) ^ v208 ^ (v210 + 1125534984 - ((2 * v210) & 0x862C9A10));
  int v212 = *(_DWORD *)(v81 + 4 * (BYTE2(v196) ^ 0x68u)) ^ 0x264DAAB2;
  int v213 = *(_DWORD *)(v74 + 4 * (BYTE1(v207) ^ 0xCDu));
  HIDWORD(v157) = v213 ^ 0xD6FA;
  LODWORD(v157) = v213 ^ 0x3AD20000;
  unsigned int v214 = v212 ^ *(_DWORD *)(v79 + 4 * (HIBYTE(v199) ^ 0xD6)) ^ *(_DWORD *)(v85 + 4 * (v203 ^ 0xAAu)) ^ (16 * v212 + 2025015490 - ((32 * v212) & 0xF1669180)) ^ ((v157 >> 16) + 1125534984 - ((2 * (v157 >> 16)) & 0x862C9A10));
  int v215 = *(_DWORD *)(v81 + 4 * (BYTE2(v199) ^ 0x56u)) ^ 0x264DAAB2;
  int v216 = *(_DWORD *)(v74 + 4 * (BYTE1(v196) ^ 0x11u));
  HIDWORD(v157) = v216 ^ 0xD6FA;
  LODWORD(v157) = v216 ^ 0x3AD20000;
  int v217 = v157 >> 16;
  HIDWORD(v157) = *(_DWORD *)(v85 + 4 * (v207 ^ 5u)) ^ 0x5F9EE9B2;
  LODWORD(v157) = HIDWORD(v157);
  LODWORD(v157) = (v157 >> 21) ^ __ROR4__(*(_DWORD *)(v79 + 4 * ((v203 ^ 0xB7562D99) >> 24)) ^ v215 ^ 0x6D41727E ^ (16 * v215 + 2025015490 - ((32 * v215) & 0xF1669180)) ^ v217, 21) ^ 0x549BF9D9;
  HIDWORD(v157) = v157;
  int v218 = (v157 >> 11) - ((2 * (v157 >> 11)) & 0x403C51A8);
  int v219 = *(_DWORD *)(v81 + 4 * (BYTE2(v203) ^ 0x95u)) ^ 0x264DAAB2;
  int v220 = *(_DWORD *)(v74 + 4 * (BYTE1(v199) ^ 0xE4u));
  HIDWORD(v157) = v220 ^ 0xD6FA;
  LODWORD(v157) = v220 ^ 0x3AD20000;
  int v221 = (v157 >> 16) ^ *(_DWORD *)(v79 + 4 * (HIBYTE(v207) ^ 0x96)) ^ (16 * v219
                                                                        + 2025015490
                                                                        - ((32 * v219) & 0xF1669180));
  unsigned int v222 = *(_DWORD *)(v85 + 4 * (v196 ^ 0x14u)) ^ v219 ^ (v221 + 1125534984 - ((2 * v221) & 0x862C9A10));
  int v223 = v218 + 538847444;
  int v224 = *(_DWORD *)(v74 + 4 * (((unsigned __int16)(v218 + 10452) >> 8) ^ 0x88u));
  HIDWORD(v157) = v224 ^ 0xD6FA;
  LODWORD(v157) = v224 ^ 0x3AD20000;
  int v225 = v157 >> 16;
  int v226 = *(_DWORD *)(v81 + 4 * (BYTE2(v211) ^ 0x39u)) ^ 0x264DAAB2;
  int v227 = *(_DWORD *)(v74 + 4 * (BYTE1(v222) ^ 0x66u));
  HIDWORD(v157) = v227 ^ 0xD6FA;
  LODWORD(v157) = v227 ^ 0x3AD20000;
  int v228 = *(_DWORD *)(v79 + 4 * (HIBYTE(v214) ^ 0x17)) ^ 0x6D41727E ^ v226 ^ (16 * v226
                                                                             + 2025015490
                                                                             - ((32 * v226) & 0xF1669180)) ^ (v157 >> 16);
  unsigned int v229 = (v228 & 0x200 ^ 0xDD6FAEFE) + 2 * (v228 & 0x200);
  int v230 = *(_DWORD *)(v85 + 4 * (v223 ^ 0x3Bu));
  BOOL v149 = ((v229 + 579883266) & (v230 ^ 0x43164D08)) == 0;
  int v231 = *(_DWORD *)(v81 + 4 * (BYTE2(v222) ^ 0x72u));
  unsigned int v232 = v225 ^ *(_DWORD *)(v79 + 4 * ((v211 ^ 0xF2FA97F5) >> 24)) ^ (16 * (v231 ^ 0x264DAAB2)
                                                                      + 2025015490
                                                                      - ((32 * (v231 ^ 0x264DAAB2)) & 0xF1669180));
  unsigned int v233 = *(_DWORD *)(v85 + 4 * (v214 ^ 0xEAu)) ^ v231 ^ (v232 + 1125534984 - ((2 * v232) & 0x862C9A10));
  unsigned int v234 = v229 + 1857551198;
  unsigned int v235 = 697784666 - v229;
  if (!v149) {
    unsigned int v234 = v235;
  }
  unsigned int v236 = ((v230 ^ 0x5F9EE9B2) - 1277667932 + v234) ^ v228 & 0xFFFFFDFF;
  int v237 = *(_DWORD *)(v81 + 4 * (BYTE2(v214) ^ 0x7Cu));
  unsigned int v238 = (16 * (v237 ^ 0x264DAAB2) + 2025015490 - ((32 * (v237 ^ 0x264DAAB2)) & 0xF1669180)) ^ *(_DWORD *)(v79 + 4 * ((v223 ^ 0x3EBF1B3Bu) >> 24));
  int v239 = *(_DWORD *)(v74 + 4 * (BYTE1(v211) ^ 4u));
  HIDWORD(v240) = v239 ^ 0xD6FA;
  LODWORD(v240) = v239 ^ 0x3AD20000;
  int v241 = *(_DWORD *)(v81 + 4 * (BYTE2(v223) ^ 0x7Cu));
  unsigned int v242 = *(_DWORD *)(v85 + 4 * (v222 ^ 0xDu)) ^ v237 ^ (v240 >> 16) ^ (v238
                                                                                        + 1125534985
                                                                                        + ~((2 * v238) & 0x862C9A10));
  int v243 = *(_DWORD *)(v74 + 4 * (BYTE1(v214) ^ 0xD9u));
  HIDWORD(v240) = v243 ^ 0xD6FA;
  LODWORD(v240) = v243 ^ 0x3AD20000;
  int v244 = (16 * (v241 ^ 0x264DAAB2) + 2025015490 - ((32 * (v241 ^ 0x264DAAB2)) & 0xF1669180)) ^ *(_DWORD *)(v79 + 4 * (HIBYTE(v222) ^ 0x32)) ^ (v240 >> 16);
  unsigned int v245 = *(_DWORD *)(v85 + 4 * (v211 ^ 0xC6u)) ^ v241 ^ (v244 + 1125534984 - ((2 * v244) & 0x862C9A10));
  uint64_t v246 = (uint64_t)*(&off_100520A90 + a41 - 2320);
  uint64_t v247 = (uint64_t)*(&off_100520A90 + a41 - 2337);
  uint64_t v248 = (uint64_t)*(&off_100520A90 + (v44 ^ 0xC33));
  unsigned int v249 = *(_DWORD *)(v247 + 4 * (BYTE2(v233) ^ 0xD4u));
  unsigned int v250 = (v249 >> 4) ^ (v249 >> 2) ^ ((HIBYTE(v236) ^ 0x9FD529D8)
                                    - 291149988
                                    + *(_DWORD *)(v246 + 4 * (HIBYTE(v236) ^ 0x45)));
  int v251 = *(_DWORD *)(v248 + 4 * (BYTE1(v245) ^ 0xD6u)) ^ 0x596BFEE8;
  int v288 = *(_DWORD *)(v246 + 4 * (HIBYTE(v233) ^ 0xF5));
  int v295 = *(_DWORD *)(v246 + 4 * (HIBYTE(v242) ^ 0x92));
  int v300 = *(_DWORD *)(v246 + 4 * (HIBYTE(v245) ^ 0xB7));
  unsigned int v252 = *(_DWORD *)(v247 + 4 * (BYTE2(v245) ^ 0x48u));
  unsigned int v253 = *(_DWORD *)(v247 + 4 * (BYTE2(v236) ^ 0x37u));
  unsigned int v298 = *(_DWORD *)(v247 + 4 * (BYTE2(v242) ^ 0x46u));
  int v254 = *(_DWORD *)(v248 + 4 * (BYTE1(v242) ^ 0x69u));
  int v289 = *(_DWORD *)(v248 + 4 * (BYTE1(v233) ^ 0x1Cu));
  int v293 = *(_DWORD *)(v248 + 4 * (BYTE1(v236) ^ 0x5Eu));
  int v255 = v236;
  unsigned int v256 = (char *)*(&off_100520A90 + a41 - 2137) - 8;
  int v257 = *(_DWORD *)&v256[4 * (v255 ^ 0x9D)];
  int v258 = *(_DWORD *)&v256[4 * (v245 ^ 0x2C)];
  int v290 = v233;
  int v291 = *(_DWORD *)&v256[4 * (v233 ^ 0x16)];
  unsigned int v259 = v249 ^ LODWORD(STACK[0x2A0]) ^ ((v242 ^ 0xC9)
                                       - 1881137175
                                       + ((2
                                         * (((v242 ^ 0xC9) + 112) & 0xFFFFFF7F ^ (v242 ^ 0xC9 | 0x7FFFFFF8))) ^ 0x21C1000F)) ^ *(_DWORD *)&v256[4 * (v242 ^ 0xCB)] ^ v251 ^ ((v250 ^ 0x1203FF48 ^ (1515496080 * v251)) - 2 * ((v250 ^ 0x1203FF48 ^ (1515496080 * v251)) & 0x2A30F34D ^ v250 & 1) - 1439632564);
  LODWORD(STACK[0x2A0]) = v259;
  unsigned int v260 = (char *)*(&off_100520A90 + (v302 ^ 0xC30)) - 8;
  *(unsigned char *)(a19 + v304) = v260[((v259 ^ 0x2A2A340E) >> 16) ^ 0x5ELL] ^ ((v259 ^ 0x2A2A340E) >> 16) ^ 0x8A ^ ((((v259 ^ 0x2A2A340E) >> 16) ^ 0x8A) - ((2 * (((v259 ^ 0x2A2A340E) >> 16) ^ 0x8A) - 18) & 0xC7) + 90) ^ 0xB9;
  LODWORD(v246) = ((HIBYTE(v233) ^ 0x9FD52968) - 291149988 + v288) ^ 0x1203FF48 ^ (v252 >> 2) ^ (v252 >> 4) ^ (1515496080 * (v254 ^ 0x596BFEE8));
  unsigned int v261 = v252 ^ LODWORD(STACK[0x2B0]) ^ v254 ^ 0x596BFEE8 ^ v257 ^ ((v255 ^ 0x9F)
                                                                  - 1881137175
                                                                  + ((2
                                                                    * (((v255 ^ 0x9F) + 112) & 0x17A ^ (v255 ^ 0x9F | 0x7FFFFFFD))) ^ 0x21C10005)) ^ (v246 - ((2 * v246) & 0xF5E2B9F6) + 2062638331);
  unsigned int v262 = v261 ^ 0xFEA7A89D;
  uint64_t v263 = (BYTE1(v262) | 0x88) ^ (v262 >> 8) & 0x88;
  uint64_t v264 = (uint64_t)*(&off_100520A90 + (v302 ^ 0xCB2));
  *(unsigned char *)(a19 + v303) = (((unsigned __int16)(v261 ^ 0xA89D) >> 8) | 0x88) ^ ((unsigned __int16)(v261 ^ 0xA89D) >> 8) & 0x88 ^ 0x35 ^ ((*(unsigned char *)(v264 + (v263 ^ 0x14)) ^ 0x52) + ((2 * *(unsigned char *)(v264 + (v263 ^ 0x14))) | 0xDF) - 111);
  LODWORD(v263) = ((HIBYTE(v242) ^ 0x9FD5290F) - 291149988 + v295) ^ (v253 >> 2) ^ (v253 >> 4);
  int v265 = ((v263 ^ 0x1203FF48) + 1308533677 - 2 * ((v263 ^ 0x1203FF48) & 0x4DFEA3BD ^ v263 & 0x10)) ^ v253;
  unsigned int v266 = (v265 & 0x1000000 ^ 0xFF7EF7FC) + 2 * (v265 & 0x1000000);
  unsigned int v267 = (char *)*(&off_100520A90 + (v302 ^ 0xC56)) - 4;
  int v268 = v267[HIBYTE(v259) ^ 0x97];
  BOOL v149 = ((v266 + 8456196) & (v258 ^ 0x12000000)) == 0;
  HIDWORD(v240) = v268 ^ 0x17;
  LODWORD(v240) = ~v268 << 24;
  *(unsigned char *)(a19 + STACK[0x230]) = (v240 >> 29) ^ 0x83;
  unsigned int v269 = v266 + 1610480040;
  unsigned int v270 = 1593567648 - v266;
  if (v149) {
    unsigned int v270 = v269;
  }
  unsigned int v271 = v265 & 0xFEFFFFFF ^ (1515496080 * (v289 ^ 0x596BFEE8)) ^ ((((v245 ^ 0x2E)
                                                                   - 1881137175
                                                                   + ((2
                                                                     * (((v245 ^ 0x2E) + 112) & 0x17A ^ (v245 ^ 0x2E | 0x7FFFFFFD))) ^ 0x21C10005)) ^ v258)
                                                                 - 1602023844
                                                                 + v270);
  unsigned int v272 = v289 ^ LODWORD(STACK[0x2B8]) ^ ((v271 ^ 0x120D92D2)
                                       - 513248118
                                       - 2 * ((v271 ^ 0x120D92D2) & 0x616874CD ^ v271 & 1)
                                       + 66);
  uint64_t v273 = (uint64_t)*(&off_100520A90 + a41 - 2157);
  *(unsigned char *)(a19 + v305) = *(unsigned char *)(v273
                                    + ((v289 ^ LOBYTE(STACK[0x2B8]) ^ ((v271 ^ 0xD2)
                                                                                      - 118
                                                                                      - 2
                                                                                      * ((v271 ^ 0xD2) & 0xCD ^ v271 & 1)
                                                                                      + 66)) ^ 0xC0)) ^ 0xC6;
  int v274 = v267[HIBYTE(v261) ^ 0x25];
  HIDWORD(v275) = v274 ^ 0x17;
  LODWORD(v275) = ~v274 << 24;
  unint64_t v276 = STACK[0x218];
  *(unsigned char *)(a19 + STACK[0x218]) = (v275 >> 29) ^ 0xFB;
  *(unsigned char *)(a19 + v306) = BYTE2(v262) ^ 0x61 ^ ((BYTE2(v262) ^ 0x61) - ((2 * (BYTE2(v262) ^ 0x61) - 18) & 0xC6) + 90) ^ 0xB8 ^ v260[BYTE2(v262) ^ 0xB5];
  int v277 = (HIBYTE(v245) ^ 0x9FD5292A) - 291149988 + v300;
  int v278 = (((v298 >> 4) ^ (v298 >> 2) ^ 0x1203FF48)
        - 2 * (((v298 >> 4) ^ (v298 >> 2) ^ 0x1203FF48) & 0x9805E95 ^ ((v298 >> 4) ^ (v298 >> 2)) & 1)
        + 1233149588) ^ v298;
  int v279 = v278 & 0x80000 | 0x1291E118;
  if ((v278 & 0x80000 & v277) != 0) {
    int v279 = 623100464 - v279;
  }
  unsigned int v280 = (1515496080 * (v293 ^ 0x596BFEE8)) ^ v278 & 0xFFF7FFFF ^ 0x16736FEB ^ (v277 - 311550232 + v279);
  int v281 = v291 ^ ((v290 ^ 0x14) + 2096205936) ^ (v280 - ((2 * v280) & 0x25DD1EF0) + 317624184);
  unsigned int v282 = v293 ^ LODWORD(STACK[0x2D0]) ^ (v281 + 1989154131 - ((2 * v281) & 0xED202AA6));
  *(unsigned char *)(a19 + STACK[0x210]) = v260[(BYTE2(v282) ^ 0xF0) + 213 + ((v282 >> 15) & 0x1A8 ^ 0xFFFFFE5F)] ^ BYTE2(v282) ^ ((BYTE2(v282) ^ 0xF0) + (~(2 * (BYTE2(v282) ^ 0xF0) - 18) | 0x39) + 91) ^ 0x76;
  int v283 = v267[HIBYTE(v282) ^ 0xA3];
  HIDWORD(v284) = v283 ^ 0x17;
  LODWORD(v284) = ~v283 << 24;
  *(unsigned char *)(a19 + STACK[0x240]) = (v284 >> 29) ^ 0x50;
  *(unsigned char *)(a19 + v309) = v260[((v272 ^ 0x96B6278F) >> 16) ^ 0x40] ^ ((v272 ^ 0x96B6278F) >> 16) ^ 0x94 ^ ((((v272 ^ 0x96B6278F) >> 16) ^ 0x94) - ((2 * (((v272 ^ 0x96B6278F) >> 16) ^ 0x94) - 18) & 0xC7) + 90) ^ 0xC;
  unsigned int v285 = (((v282 ^ 0x65E6CC7) >> 4) & 0xF0 | ((unsigned __int16)(v282 ^ 0x6CC7) >> 12)) ^ 0xE6;
  *(unsigned char *)(a19 + STACK[0x270]) = *(unsigned char *)(v264 + (((v285 >> 4) & 0xFFFFFF0F | (16 * (v285 & 0xF))) ^ 0xAELL)) ^ (((v285 >> 4) & 0xF | (16 * (v285 & 0xF))) - ((2 * ((v285 >> 4) & 0xF | (16 * (v285 & 0xF)))) & 0xA4) + 82) ^ 0x2B;
  *(unsigned char *)(a19 + v308) = *(unsigned char *)(v264 + (((unsigned __int16)(v272 ^ 0x278F) >> 8) ^ 0xA0)) ^ (((unsigned __int16)(v272 ^ 0x278F) >> 8) - (((v272 ^ 0x96B6278F) >> 7) & 0xA4) + 82) ^ 0xDB;
  *(unsigned char *)(a19 + STACK[0x268]) = (((unsigned __int16)(v259 ^ 0x340E) >> 8) - (((v259 ^ 0x2A2A340E) >> 7) & 0xA4) + 82) ^ *(unsigned char *)(v264 + (((unsigned __int16)(v259 ^ 0x340E) >> 8) ^ 0x75)) ^ 0x80;
  *(unsigned char *)(a19 + STACK[0x250]) = *(unsigned char *)(v273 + (v261 ^ 0xAELL)) ^ 0x6B;
  *(unsigned char *)(a19 + STACK[0x220]) = *(unsigned char *)(v273 + (LODWORD(STACK[0x2A0]) ^ 0xC2)) ^ 0xFA;
  *(unsigned char *)(a19 + STACK[0x298]) = *(unsigned char *)(v273 + (v282 ^ 0x68)) ^ 0x55;
  int v286 = v267[HIBYTE(v272) ^ 0x10];
  HIDWORD(v284) = v286 ^ 0x17;
  LODWORD(v284) = ~v286 << 24;
  *(unsigned char *)(a19 + STACK[0x260]) = (v284 >> 29) ^ 0x2E;
  return (*(uint64_t (**)(uint64_t))(v42
                                            + 8
                                            * ((29
                                              * (((v276
                                                 - 1586026985
                                                 + ~(2 * ((v276 + 16) & 0x2177261F ^ v307[0] & 8))
                                                 + 17) ^ 0xA1772610) > 0x14F)) ^ (a41 + 768))))(1515496080);
}

uint64_t sub_100139830(uint64_t a1, void *a2, _DWORD *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15, unsigned int a16)
{
  *a2 = 0;
  *a3 = 0;
  a16 = 31090337 * ((((2 * &a15) | 0xB0F9668A) - &a15 + 662916283) ^ 0x1FFDD30C)
      + 1655392376;
  uint64_t v17 = (*(uint64_t (**)(int *))(v16 + 37600))(&a15);
  return (*(uint64_t (**)(uint64_t))(v16 + 8 * ((92 * (a15 != 847203058)) ^ 0x8A7u)))(v17);
}

uint64_t sub_1001398CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, char a16, char *a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,unint64_t *a22,char *a23,char *a24,uint64_t a25,unint64_t *a26)
{
  a24 = a17;
  a26 = &STACK[0x72B1F83D1B5D1CC5];
  a22 = &STACK[0x5C6E4E9DBA2453A9];
  LODWORD(a23) = (v26 + 1814) ^ (1401278017
                               * ((2 * (&a22 & 0x623B310) - &a22 - 103002897) ^ 0xFDFF3A08));
  (*(void (**)(unint64_t **))(a10 + 8 * (v26 ^ 0x1599)))(&a22);
  a26 = &STACK[0x72B1F83D1B5D1CBD];
  a24 = a17;
  LODWORD(a23) = (v26 + 1814) ^ (1401278017
                               * ((331369863 - (&a22 | 0x13C04D87) + (&a22 | 0xEC3FB278)) ^ 0xE81CC49F));
  a22 = &STACK[0x5C6E4E9DBA245399];
  (*(void (**)(unint64_t **))(a10 + 8 * (v26 + 2695)))(&a22);
  HIDWORD(a22) = (v26 + 339) ^ (((((2 * &a22) | 0x521FC9E6) - &a22 + 1458576141) ^ 0x1806623D)
                              * v27);
  a23 = a17;
  a24 = &a16;
  (*(void (**)(unint64_t **))(a10 + 8 * (v26 + 2697)))(&a22);
  a23 = a17;
  LODWORD(a24) = v26
               - 476588053
               * ((-779372109 - (&a22 | 0xD18BB9B3) + (&a22 | 0x2E74464C)) ^ 0x9389420F)
               + 682;
  uint64_t v28 = (*(uint64_t (**)(unint64_t **))(a10 + 8 * (v26 ^ 0x15FA)))(&a22);
  return (*(uint64_t (**)(uint64_t))(a10
                                            + 8
                                            * (((a22 == 847203058)
                                              * ((v26 + 1413) ^ 0x343 ^ (v26 - 686315982) & 0x57FB)) ^ v26)))(v28);
}

uint64_t sub_100139AF4@<X0>(int a1@<W0>, unsigned int a2@<W1>, int a3@<W2>, int a4@<W8>, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18, char a19)
{
  BOOL v25 = v20 < a2;
  char v26 = *(unsigned char *)(v23 + ((27 * (v21 ^ 0x5F3)) ^ (a1 + 216)) + v19);
  *(&a19 + (a4 - 1909375501)) = v26 - ((2 * v26) & 0xC0) + 96;
  unsigned int v27 = v19 + 1 + a3;
  int v28 = v25 ^ (v27 < a2);
  BOOL v29 = v27 < v20;
  if (!v28) {
    BOOL v25 = v29;
  }
  return (*(uint64_t (**)(void))(v24 + 8 * ((v25 * v22) ^ v21)))();
}

uint64_t sub_100139B7C@<X0>(int a1@<W8>)
{
  *unint64_t v3 = v9;
  unsigned int v13 = a1 + (((~&v11 & 0xF72E7238) - (~&v11 | 0xF72E7239)) ^ 0xE180247D) * v5 + 2795;
  uint64_t v12 = v8;
  (*(void (**)(uint64_t *))(v2 + 8 * (a1 + 2963)))(&v11);
  unsigned int v13 = a1
      + ((1581059808 - (&v11 | 0x5E3D0EE0) + (&v11 | 0xA1C2F11F)) ^ 0xB76CA75B) * v5
      + 2795;
  uint64_t v12 = v10;
  uint64_t result = (*(uint64_t (**)(uint64_t *))(v2 + 8 * (a1 ^ 0x14ED)))(&v11);
  *(_DWORD *)(v1 + 16) = v4 + 1725;
  return result;
}

uint64_t sub_100139C84@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v5
                              + 8 * ((((((a1 - 1257) | 0x1211) - 1218) ^ 0xCBA) * (a5 != -557495541)) ^ (a1 + 999))))();
}

uint64_t sub_100139CD0(uint64_t a1, int a2, int a3)
{
  unsigned int v8 = a3 + v6 + 100668425;
  uint64_t v9 = v3 + v8;
  long long v10 = *(_OWORD *)(v9 - 31);
  uint64_t v11 = a1 + v8;
  *(_OWORD *)(v11 - 15) = *(_OWORD *)(v9 - 15);
  *(_OWORD *)(v11 - 31) = v10;
  return (*(uint64_t (**)(void))(v7 + 8 * ((((v5 & 0xFFFFFFE0) == 32) * (1121 * (a2 ^ 0x4698D843) - 2559)) ^ (a2 + v4))))();
}

uint64_t sub_100139D40@<X0>(uint64_t a1@<X4>, uint64_t a2@<X8>)
{
  *(void *)(a1 + a2 + v4) = v6;
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * ((3354 * (((v2 + 464) ^ 0x49CLL) == (v3 & 0xFFFFFFFFFFFFFFF8))) | v2)))();
}

void sub_100139D88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if (a10) {
    BOOL v11 = a11 == 0;
  }
  else {
    BOOL v11 = 1;
  }
  int v12 = v11;
  __asm { BRAA            X9, X17 }
}

uint64_t sub_100139E10()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (((((STACK[0x8C8] == 0x6BBE7547D3B34F0FLL) ^ (v0 + 7)) & 1)
                                * ((v0 ^ 0x443) - 3458)) ^ (v0 + 959))))();
}

void sub_100139E64()
{
}

uint64_t sub_100139E8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11)
{
  return (*(uint64_t (**)(void))(v11
                              + 8
                              * (int)((((a11 ^ 0xFDEEDD67)
                                      + 2130656191
                                      + ((a11 << ((v12 + 90) & 0x3A ^ 0x1B)) & 0xFBDDBACE)
                                      - 2095978792 < 0x7FFFFFFE)
                                     * (((v12 + 736173514) & 0xD41EDFF9) - 3583)) | v12)))();
}

uint64_t sub_100139F2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, unsigned int a11, unint64_t *a12, int a13, uint64_t a14, unsigned int a15)
{
  unsigned int v18 = 1401278017 * ((((2 * &a11) | 0xC7DA6C68) - &a11 + 470993356) ^ 0xE7CE40D3);
  a12 = &STACK[0x31F869904A03A4E0];
  a14 = v16;
  a13 = (v15 + 330) ^ v18;
  a11 = 1694416709 - v18;
  a15 = v18 + 627562234;
  uint64_t v19 = (*(uint64_t (**)(unsigned int *))(v17 + 8 * (v15 ^ 0x11FF)))(&a11);
  return (*(uint64_t (**)(uint64_t))(v17
                                            + 8
                                            * ((4415 * (*(_DWORD *)(v16 - 0x69166E42B329955BLL) == 847203058)) ^ v15)))(v19);
}

uint64_t sub_10013A008()
{
  uint64_t result = (*(uint64_t (**)(void))(v1 + 8 * (v0 + 3851)))();
  *(_DWORD *)(v3 + 8) = v4;
  return result;
}

uint64_t sub_10013A074()
{
  STACK[0x850] = *(void *)(v1 + 8 * v0);
  return sub_10013A090();
}

uint64_t sub_10013A090@<X0>(unint64_t a1@<X8>)
{
  STACK[0x8C0] = v1;
  LODWORD(STACK[0x844]) = v3;
  STACK[0x8B8] = a1;
  STACK[0x4D8] = 0x23CF9C948A3F0F55;
  LODWORD(STACK[0x540]) = v4;
  STACK[0x8A0] = 0xB125BF535303EFFFLL;
  STACK[0x870] = 0;
  uint64_t v6 = (*(uint64_t (**)(uint64_t))(v5 + 8 * (v2 + 1818)))(16);
  unint64_t v7 = STACK[0x258];
  STACK[0x858] = v6 + 0x46197683F7D18950;
  return (*(uint64_t (**)(void))(v7
                              + 8 * (((v6 == 0) * ((508 * ((v2 - 1017469736) & 0x3CA559CF ^ 0x9C2)) ^ 0xFE6)) ^ v2)))();
}

uint64_t sub_10013A148@<X0>(int a1@<W3>, int a2@<W4>, uint64_t a3@<X8>)
{
  *(unsigned char *)(a3 + (a1 - 972901047)) = *(unsigned char *)(v4 + (a1 - 972901047));
  return (*(uint64_t (**)(void))(v3
                                           + 8
                                           * ((1011 * (a1 - 1 == (((a2 - 1676276176) | 0x2C08238) ^ 0xA72BDC89))) ^ a2)))(0);
}

uint64_t sub_10013A1A8@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, char a4, uint64_t a5, unint64_t *a6, int a7, int a8, unint64_t *a9)
{
  int v11 = a1 ^ 0xC46;
  int v12 = 673918253 * ((&a4 + 887845320 - 2 * ((unint64_t)&a4 & 0x34EB71C8)) ^ 0xAEA36A60);
  a7 = v12 + (a1 ^ 0xC46) + 2806;
  a8 = v12 + 383197636;
  a9 = &STACK[0x28CA3575C94E2424];
  a5 = v10;
  a6 = &STACK[0x132CF3C980285A2F];
  uint64_t v13 = (*(uint64_t (**)(char *))(v9 + 8 * ((a1 ^ 0xC46) + 3348)))(&a4);
  return (*(uint64_t (**)(uint64_t))(v9
                                            + 8
                                            * (((*(_DWORD *)(v10 - 0x69166E42B329955BLL) != ((v11 + 954) ^ 0x327F43F2))
                                              * ((v11 + 3205) ^ 0x1115)) ^ v11)))(v13);
}

uint64_t sub_10013A29C(uint64_t a1, uint64_t a2, int a3, uint64_t a4, int a5, uint64_t a6)
{
  uint64_t v9 = (((v7 - 387) | 0x269) ^ (a5 + 18)) + v6;
  *(unsigned char *)(a1 + v9) = *(unsigned char *)(a6 + v9);
  return (*(uint64_t (**)(void))(v8 + 8 * ((3377 * (v6 - 1 == a3)) ^ (v7 - 1255))))();
}

void sub_10013A2EC()
{
}

uint64_t sub_10013A2F8(int a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,int a22,unsigned int a23,int a24,unsigned int a25,uint64_t a26,uint64_t a27,int a28,int a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34)
{
  BOOL v38 = a25 > a23;
  unint64_t v39 = (a6 ^ HIDWORD(v37)) + HIDWORD(a3) + (*(_DWORD *)(a34 + a16) ^ v34);
  *(_DWORD *)(a34 + 4 * a18) = v39 + (((a1 - 2539) | 0x8A) ^ 0x3044B02D) - ((v35 + a1 - 706 - 2682) & (2 * v39));
  *(_DWORD *)(a34 + a16) = HIDWORD(v39) + v34 - (v35 & (2 * HIDWORD(v39)));
  if (v38 == a29 - 677965948 < -2022729425) {
    BOOL v38 = a29 - 677965948 < a24;
  }
  return (*(uint64_t (**)(void))(v36 + 8 * (a1 ^ (7542 * v38))))();
}

void sub_10013A3D0()
{
}

uint64_t sub_10013A3D8()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((74 * ((LODWORD(STACK[0x544]) - 940263050 + v0 + 729 - 1120) < 2)) ^ v0)))();
}

uint64_t sub_10013A418(uint64_t a1, uint64_t a2, int a3)
{
  STACK[0x270] = v6;
  return (*(uint64_t (**)(uint64_t, unint64_t))(v3
                                                              + 8
                                                              * (((((v5 - 1157) | 0xE) + 831) * (v4 == a3)) ^ (v5 - 2390))))(3147804671, 0xC49FA922FA30774CLL);
}

uint64_t sub_10013A488()
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (v2 ^ (16
                                     * (v1 + v0 + ((v2 - 1985856091) ^ 0x85AC4803) + ((v2 + 967486595) & 0xC6555BBF) < 8)))))();
}

uint64_t sub_10013A4F0@<X0>(int a1@<W2>, uint64_t a2@<X8>)
{
  *(_DWORD *)(a2 - 3 + (v4 + v3)) = *(_DWORD *)(v2 - 3 + (v4 + v3));
  return (*(uint64_t (**)(void))(v6 + 8 * (((v5 == 4) * (a1 ^ 0xD2D)) ^ (a1 - 352))))(a1 ^ 0xB82u);
}

uint64_t sub_10013A540(int a1, int a2, int a3, int a4)
{
  uint64_t v10 = (a1 + a2 + a3);
  uint64_t v11 = v10 + v4;
  uint64_t v12 = v10 + *(void *)(v9 - 120);
  unint64_t v13 = v11 - v12;
  uint64_t v14 = (a1 + a2) & 0xF;
  unint64_t v15 = v14 + v6 - v12;
  unint64_t v16 = (v14 | v5) - v12;
  unint64_t v17 = (v14 | v7) - v12;
  BOOL v21 = v15 > 0xF && v13 >= (((a4 ^ 0xE0Cu) + 2209) ^ 0xB15uLL) && v16 > 0xF && v17 > 0xF;
  return (*(uint64_t (**)(void))(v8 + 8 * ((239 * v21) ^ a4)))();
}

uint64_t sub_10013A5BC@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,char a34)
{
  int v36 = a1 - 1271;
  int v37 = (v36 - 287083893) & 0x55DDBFEF;
  *(_DWORD *)uint64_t v35 = 0x80000000;
  (*(void (**)(uint64_t))(v34 + 8 * (v36 + 4398)))(a26);
  int8x16_t v38 = (int8x16_t)vld1q_dup_f32((const float *)v35);
  v39.i64[0] = 0x8000000080000000;
  v39.i64[1] = 0x8000000080000000;
  v40.i64[0] = *(void *)(v35 + 4);
  v40.i32[2] = *(_DWORD *)(v35 + 12);
  int8x16_t v41 = vextq_s8(v38, v40, 0xCuLL);
  int8x16_t v42 = v40;
  v42.i32[3] = *(_DWORD *)(v35 + 4 * (v37 - 1153510347) - 8060);
  int32x4_t v43 = (int32x4_t)veorq_s8((int8x16_t)vshrq_n_u32((uint32x4_t)vorrq_s8(vandq_s8(v42, (int8x16_t)vdupq_n_s32(0x7FFFFFFEu)), vandq_s8(v41, v39)), 1uLL), *(int8x16_t *)(v35 + 1588));
  v41.i32[0] = *((_DWORD *)&a34 + (*(_DWORD *)(v35 + 4) & 1));
  v41.i32[1] = *((_DWORD *)&a34 + (*(_DWORD *)(v35 + 8) & 1));
  v41.i32[2] = *((_DWORD *)&a34 + (*(_DWORD *)(v35 + 12) & 1));
  v41.i32[3] = *((_DWORD *)&a34 + (v42.i8[12] & 1));
  *(int8x16_t *)uint64_t v35 = veorq_s8((int8x16_t)vaddq_s32(vsubq_s32(v43, (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v43, v43), (int8x16_t)vdupq_n_s32(0xB779204u))), vdupq_n_s32(0x5BBC902u)), v41);
  return (*(uint64_t (**)(void))(v34 + 8 * (v37 - 1153511901)))();
}

uint64_t sub_10013A73C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, int a20,int a21,void *a22,int *a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  uint64_t v34 = (v31 + 2656) | 0x281;
  uint64_t v35 = (int *)(a27 + 4 * v33);
  int v36 = *v35;
  LODWORD(v35) = 1554976193
               * ((*(_DWORD *)(*a22 + (*a23 & (v34 ^ 0xFFFFFFFFC09BB16DLL))) ^ v35) & 0x7FFFFFFF);
  LODWORD(v35) = v35 ^ (v35 >> 16);
  unsigned int v37 = 1554976193 * v35;
  *((_DWORD *)&a30 + v33) ^= v36 ^ *((_DWORD *)*(&off_100520A90 + a21) + HIBYTE(v37)) ^ *((_DWORD *)*(&off_100520A90 + a20)
                                                                                        + HIBYTE(v37)
                                                                                        - 3) ^ *((_DWORD *)*(&off_100520A90 + v31 - 231)
                                                                                               + HIBYTE(v37)
                                                                                               - 2) ^ (230752256 * v35) ^ v37 ^ (1886867027 * HIBYTE(v37));
  return (*(uint64_t (**)(void))(v32
                              + 8
                              * (int)((13
                                     * (v30 - 1 != ((v34 + 1999351593) & 0x88D443F5 ^ (v34 + 1953311583) & 0x8B92C7BF))) ^ v34)))();
}

uint64_t sub_10013A868(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  return sub_100174280(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);
}

void sub_10013A878()
{
  int v3 = v0 ^ 0x54E;
  (*(void (**)(void))(v2 + 8 * (v0 ^ 0x132C)))();
  unint64_t v4 = STACK[0x258];
  *(void *)(v1 + 24) = 0;
  (*(void (**)(uint64_t))(v4 + 8 * (v3 + 3678)))(v1);
  JUMPOUT(0x100133BF0);
}

uint64_t sub_10013A8BC()
{
  unint64_t v2 = *(void *)(STACK[0x3F0] + 24);
  STACK[0x668] = v2;
  return (*(uint64_t (**)(void))(v1 + 8 * ((((14 * (v0 ^ 0x817) + 1508) ^ (1253 * (v0 ^ 0x85E))) * (v2 == 0)) ^ v0)))();
}

void sub_10013A918()
{
}

uint64_t sub_10013A920@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(uint64_t))(v4
                                            + 8
                                            * (int)(((((v3 + 709975007) & 0xD5AEA9E5) + 80)
                                                   * ((a1 ^ 0x4D4A7438) + v1 - v2 == 157902129)) ^ v3)))(48);
}

uint64_t sub_10013A984(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,int a50)
{
  return (*(uint64_t (**)(void))(v52 + 8 * (((a50 ^ 0x38A) * (v50 == v51)) ^ (a50 - 552))))();
}

uint64_t sub_10013A9B0()
{
  int v6 = v3 - 1979180732;
  if ((v6 + 1) > 0x40) {
    int v7 = v6 + 1;
  }
  else {
    int v7 = 64;
  }
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((26
                                * (-v1
                                 - v2
                                 + v7
                                 + 1979176120
                                 + 1537 * (v0 ^ 0xF65 ^ (v5 + 548) ^ (v5 + 3)) < 0xF)) ^ v0 ^ 0xF65)))();
}

uint64_t sub_10013AA44@<X0>(int a1@<W8>)
{
  BOOL v6 = (unint64_t)(v1 - 0x5DB68B110D24FF8) <= 0x1F909F8E
    || v1 - 0x5DB68B110D24FF8 >= (unint64_t)(v2 ^ (v3 + 971) ^ ((a1 - 3627) | 0x210u)) + 529571727;
  return (*(uint64_t (**)(void))(v4 + 8 * (a1 | (2 * v6))))();
}

uint64_t sub_10013AA9C()
{
  STACK[0x3B0] = (unint64_t)(v0 + 80);
  *(_DWORD *)(v3 - 216) = v1
                        - 1318647951
                        + 1314530549
                        * ((((2 * ((v3 - 224) ^ 0x2C4EED01)) | 0x834A46E4) - ((v3 - 224) ^ 0x2C4EED01) + 1046142094) ^ 0x5CE248BD);
  (*(void (**)(uint64_t))(v4 + 8 * (v1 ^ 0x163Au)))(v3 - 224);
  unint64_t v5 = *(void *)(v3 - 224);
  *int v0 = v5 ^ 0xD0;
  STACK[0x370] = v2;
  v0[1] = (v5 >> ((v1 ^ 0xFu) + 79)) ^ 0x32;
  v0[2] = BYTE2(v5) ^ 0x6C;
  v0[3] = BYTE3(v5) ^ 0x2F;
  v0[4] = BYTE4(v5) ^ 0xAD;
  v0[5] = ~BYTE5(v5);
  v0[6] = BYTE6(v5) ^ 0x75;
  v0[7] = HIBYTE(v5) ^ 0xB7;
  *(_DWORD *)(v3 - 216) = v1
                        - 1318647951
                        + 1314530549
                        * ((((2 * ((v3 - 224) ^ 0x6443D7E9)) | 0xDD6F3316) - ((v3 - 224) ^ 0x6443D7E9) - 1857526155) ^ 0xBBFDC8AC);
  (*(void (**)(uint64_t))(STACK[0x258] + 8 * (v1 + 3542)))(v3 - 224);
  uint64_t v6 = STACK[0x258];
  unint64_t v7 = *(void *)(v3 - 224);
  v0[8] = v7 ^ 0xD0;
  v0[9] = BYTE1(v7) ^ 0x32;
  v0[10] = BYTE2(v7) ^ 0x6C;
  v0[11] = BYTE3(v7) ^ 0x2F;
  v0[12] = BYTE4(v7) ^ 0xAD;
  v0[13] = ~BYTE5(v7);
  v0[14] = BYTE6(v7) ^ 0x75;
  v0[15] = HIBYTE(v7) ^ 0xB7;
  v0[47] = (HIBYTE(v7) ^ 0x9C) + ((2 * (HIBYTE(v7) ^ 0xB7)) & 0x56) - 9;
  v0[46] = (BYTE6(v7) ^ 0x5E) + ((2 * (BYTE6(v7) ^ 0x75)) & 0x56) - 9;
  v0[45] = (BYTE5(v7) ^ 0xD4) + ((2 * ~BYTE5(v7)) & 0x56) - 9;
  v0[44] = (BYTE4(v7) ^ 0x86) + ((2 * (BYTE4(v7) ^ 0xAD)) & 0x56) - 9;
  v0[43] = (BYTE3(v7) ^ 4) + ((2 * (BYTE3(v7) ^ 0x2F)) & 0x56) - 9;
  v0[42] = (BYTE2(v7) ^ 0x47) + ((2 * (BYTE2(v7) ^ 0x6C)) & 0x56) - 9;
  v0[41] = (BYTE1(v7) ^ 0x19) + ((2 * (BYTE1(v7) ^ 0x32)) & 0x56) - 9;
  v0[40] = (v7 ^ 0xFB) + ((2 * v7) & 0x56) - 9;
  v0[39] = (v0[7] ^ 0x2B) + ((2 * v0[7]) & 0x56) - 9;
  v0[38] = (v0[6] ^ 0x2B) + ((2 * v0[6]) & 0x56) - 9;
  v0[37] = (v0[5] ^ 0x2B) + ((2 * v0[5]) & 0x56) - 9;
  v0[36] = (v0[4] ^ 0x2B) + ((2 * v0[4]) & 0x56) - 9;
  v0[35] = (v0[3] ^ 0x2B) + ((2 * v0[3]) & 0x56) - 9;
  v0[34] = (v0[2] ^ 0x2B) + ((2 * v0[2]) & 0x56) - 9;
  v0[33] = (v0[1] ^ 0x2B) + ((2 * v0[1]) & 0x56) - 9;
  v0[32] = (*v0 ^ 0x2B) + ((2 * *v0) & 0x56) - 9;
  return sub_100161EF0(134, (2 * ~(v7 >> 40)) & 0x56, 212, (2 * (HIWORD(v7) ^ 0x75)) & 0x56, 94, HIBYTE(v7) ^ 0x9C, v6);
}

uint64_t sub_10013AE1C()
{
  int v5 = *(unsigned __int8 *)(v1 + v3 - 0x5EB694F14A5F5D76)
     - (*(unsigned __int8 *)(v2 + v3 - 0x5EB694F14A5F5D76) ^ 0x60);
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((2073
                                * (((2 * v5) & 0xF7BFFFFE) + (v5 ^ 0xFBDFFFFF) == (v0 ^ 0xCFBC5B04 ^ (v0 + 1072950255) & 0xF46FB7F7))) ^ v0)))();
}

uint64_t sub_10013AEB0(uint64_t a1, uint64_t a2, int a3)
{
  LODWORD(STACK[0x308]) = a3;
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((478 * (*(_DWORD *)(STACK[0x208] + 360) - 940263052 < ((v3 - 1386) ^ 0xFFFFF67B))) ^ v3)))();
}

void sub_10013AEFC()
{
  if (v0 == ((v2 + 2367) ^ (v3 + 1852))) {
    uint64_t v5 = 0;
  }
  else {
    uint64_t v5 = v4;
  }
  *(void *)(v1 - 0x33AB409025E8109CLL) = v5;
  JUMPOUT(0x10013AF28);
}

uint64_t sub_10013AF68()
{
  unint64_t v1 = STACK[0x258];
  uint64_t v2 = (*(uint64_t (**)(uint64_t))(STACK[0x258] + 8 * (v0 ^ 0x113B)))(32);
  STACK[0x400] = v2;
  return (*(uint64_t (**)(void))(v1 + 8 * (((v2 == 0) * (((v0 - 645) | 0x948) - 2463)) ^ v0)))();
}

uint64_t sub_10013AFBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unint64_t *a13, int a14, uint64_t a15, unsigned int a16, int a17, int a18)
{
  unsigned int v21 = 1314530549 * ((&a13 & 0xAD6166C | ~(&a13 | 0xAD6166C)) ^ 0x44206F5D);
  a13 = &STACK[0x70766EB78D2F3F10];
  a15 = a9;
  a16 = 480721734 - v21;
  a18 = v21 ^ 0x4EA001FB;
  a14 = (v20 + 1780979153) ^ v21;
  uint64_t v22 = (*(uint64_t (**)(unint64_t **))(v19 + 8 * (v20 ^ 0x15D2)))(&a13);
  return (*(uint64_t (**)(uint64_t))(v19 + 8 * ((3803 * (a17 == ((v20 - 1926) | 0x339) + 1911 + v18)) ^ v20)))(v22);
}

uint64_t sub_10013B09C@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int a5)
{
  BOOL v7 = a5 < 0x16781488;
  if (v7 == (a1 - 1098321312) < 0x16781488) {
    BOOL v7 = a1 - 1098321312 < a5;
  }
  return (*(uint64_t (**)(uint64_t))(v6 + 8 * (v7 ^ v5 ^ 1)))(2819677656);
}

uint64_t sub_10013B114(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  unsigned int v12 = v7 - 1908402060;
  if (v12 <= 0x40) {
    unsigned int v12 = 64;
  }
  BOOL v13 = a7 - v8 - v9 + v12 < 0xF;
  return (*(uint64_t (**)(void))(v10 + 8 * (v11 ^ 0xD4E | (2 * v13) | (4 * v13))))();
}

void sub_10013B19C(void *a1)
{
  *a1 = 0;
  a1[1] = 0;
  *(void *)(v1 + 8) = a1 + 0x8C32ED07EFA312ALL;
  LODWORD(STACK[0x7FC]) = v2;
  sub_10016F7AC();
}

void sub_10013B1C4()
{
}

uint64_t sub_10013B244()
{
  unint64_t v2 = STACK[0x748];
  STACK[0x718] = STACK[0x748];
  return (*(uint64_t (**)(void))(v1 + 8
                                   * (((((v2 == 0) ^ (v0 - 89)) & 1) * ((v0 - 623) ^ 0x9A0)) ^ v0)))();
}

uint64_t sub_10013B294()
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((206 * (qword_1005B1568 == 0)) ^ v0)))();
}

uint64_t sub_10013B2D0()
{
  STACK[0x798] = *(void *)(STACK[0x258] + 8 * v0);
  return sub_10013B2F8();
}

uint64_t sub_10013B2F8@<X0>(uint64_t a1@<X8>)
{
  LODWORD(STACK[0xAE4]) = v2;
  STACK[0xAE8] = v3;
  return (*(uint64_t (**)(void))(v4 + 8 * (((a1 != 0x46197683F7D18950) * ((v1 - 510) ^ 0x9CE)) ^ v1)))();
}

uint64_t sub_10013B338(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v6
                                                                                + 8
                                                                                * (v5 ^ (2971
                                                                                       * ((LODWORD(STACK[0x2C0]) + 1360568379 - (LODWORD(STACK[0x268]) + v4) + 3373) > 2)))))(a1, a2, a3, a4, v4);
}

uint64_t sub_10013B3C4()
{
  uint64_t v10 = v1 + 1;
  int v11 = (*(unsigned __int8 *)(v2 + v10) ^ 0x60) - *(unsigned __int8 *)(v3 + v10);
  BOOL v13 = (v11 ^ v4) + v9 + ((v0 + v7) & (2 * v11)) != v8 || v10 == 19;
  return (*(uint64_t (**)(void))(v5 + 8 * ((v13 * v6) ^ v0)))();
}

uint64_t sub_10013B3CC()
{
  unint64_t v1 = *(void *)(STACK[0x788] + 24);
  STACK[0x4B0] = v1;
  return (*(uint64_t (**)(void))(STACK[0x258] + 8 * (((v1 != 0) * (v0 - 1551)) ^ v0)))((v0 + 927));
}

uint64_t sub_10013B404(uint64_t a1, uint64_t a2, int a3, int a4, uint64_t a5, int a6)
{
  *(void *)(v8 + (a3 + v6)) = *(void *)(a2 + (a3 + v6));
  return (*(uint64_t (**)(void))(v9 + 8 * (((a4 == 0) * v7) ^ a6)))();
}

void sub_10013B434()
{
}

uint64_t sub_10013B43C()
{
  int v2 = *(_DWORD *)(STACK[0x208] + 56);
  *(_DWORD *)(STACK[0x208] + 56) = v2 + 1;
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * ((3717 * (((v1 - 726586392) & 0x2B4ECBBB ^ 0x94E73B4A) + v2 < 0xFFFFFFFA)) ^ (v1 - 2140))))();
}

uint64_t sub_10013B498(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,int a50)
{
  unsigned int v50 = LODWORD(STACK[0x534])
      - ((2 * LODWORD(STACK[0x534]) - 300428198) & ((a50 + 1492460501) & 0xA70ADB75 ^ 0xB314FBAF))
      + 1352033162;
  return (*(uint64_t (**)(void))(STACK[0x258]
                              + 8
                              * ((14
                                * ((v50 ^ 0x6F59A76B) - 268551698 + ((2 * v50) & 0x6DA7BC6C ^ 0x2104B028) == 651302948)) ^ (a50 - 103))))();
}

uint64_t sub_10013B564(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 8 * (((*v14 == 0) * ((v15 ^ 0x33B) + (v15 ^ 0x447) - 5977)) ^ v15)))(a1, a2, a3, a4, a5, a6, a14, a13);
}

uint64_t sub_10013B5B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, int a10)
{
  *(void *)(v14 - 136) = v10;
  *(void *)(v14 - 128) = v12;
  *(_DWORD *)(v14 - 120) = v13
                         + 476588053 * (((v14 - 136) & 0x6EF99269 | ~((v14 - 136) | 0x6EF99269)) ^ 0x2CFB69D5)
                         - 1865;
  uint64_t v15 = (*(uint64_t (**)(uint64_t))(v11 + 8 * (v13 ^ 0x19C4)))(v14 - 136);
  return (*(uint64_t (**)(uint64_t))(v11 + 8
                                                  * ((113 * ((a10 ^ 0x74CB87C4 ^ (58 * (v13 ^ 0xB90))) < 1)) ^ v13)))(v15);
}

uint64_t sub_10013B668()
{
  unsigned int v3 = *(_DWORD *)(v2 - 0x69166E42B3299563) - 2036875848;
  unsigned int v4 = *(_DWORD *)(v2 - 0x69166E42B3299567) + 2074281153;
  BOOL v5 = v3 < 0xAFC6E084;
  BOOL v6 = v3 > v4;
  if (v5 != v4 < 0xAFC6E084) {
    BOOL v6 = v5;
  }
  return (*(uint64_t (**)(void))(v0 + 8 * ((7 * (((v1 + 77) ^ v6) & 1)) ^ (v1 - 1197))))();
}

uint64_t sub_10013B708@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X7>, char a6@<W8>)
{
  uint64_t v23 = (v11 + v15);
  unint64_t v24 = (v13 + ((unint64_t)(v7 + v23) >> 8) + ((((v10 - 2506) | v6) + v9) & ((v7 + v23) << 56))) & 0xF9FFFFFFFFFFFFFFLL;
  unint64_t v25 = v24 ^ v20;
  unint64_t v26 = v24 ^ v17;
  uint64_t v27 = __ROR8__(v25, 8);
  unint64_t v28 = (a2 - ((v19 | ~(v27 + v26)) + ((v27 + v26) | v18))) ^ v21;
  unint64_t v29 = v28 ^ __ROR8__(v26, 61);
  uint64_t v30 = __ROR8__(v28, 8);
  unint64_t v31 = (a2 - ((~(v30 + v29) | 0xBF144DBB14C10720) + ((v30 + v29) | a1))) ^ 0xC54C3FADF4AE0176;
  unint64_t v32 = v31 ^ __ROR8__(v29, 61);
  uint64_t v33 = __ROR8__(v31, 8);
  unint64_t v34 = (((2 * (v33 + v32)) | 0x31620500CB338FEELL) - (v33 + v32) - 0x18B102806599C7F7) ^ 0xC42AC2AF46E6B8DCLL;
  unint64_t v35 = v34 ^ __ROR8__(v32, 61);
  uint64_t v36 = __ROR8__(v34, 8);
  uint64_t v37 = (((2 * (v36 + v35)) | 0x74AAD184F6796790) - (v36 + v35) + 0x45AA973D84C34C38) ^ 0x2A2171C4DB58CCEDLL;
  uint64_t v38 = v37 ^ __ROR8__(v35, 61);
  uint64_t v39 = __ROR8__(v37, 8);
  unint64_t v40 = (a2 - ((~(v39 + v38) | 0xCA59E7CBCA4BCEBDLL) + ((v39 + v38) | 0x35A6183435B43142))) ^ 0x4211ECE1E948293ELL;
  unint64_t v41 = v40 ^ __ROR8__(v38, 61);
  unint64_t v42 = (__ROR8__(v40, 8) + v41) ^ v12;
  unint64_t v43 = v42 ^ __ROR8__(v41, 61);
  uint64_t v44 = __ROR8__(v42, 8);
  *(unsigned char *)(v14 + v23) = *(unsigned char *)(a5 + (v23 & 0xF)) ^ *(unsigned char *)(v7 + v23 + a4) ^ *(unsigned char *)(a3 + (v23 & 0xF)) ^ *(unsigned char *)(v8 + (v23 & 0xF)) ^ ((v23 & 0xF) * a6) ^ (((((2 * (v44 + v43)) | 0x51AD75581D8424F6) - (v44 + v43) + 0x57294553F13DED85) ^ 0x190111FE98669001) >> (8 * ((v7 + v11 + v15) & 7)));
  return (*(uint64_t (**)(void))(v22 + 8 * ((4801 * (v11 - 1 == v16)) ^ (v10 - 1580))))();
}

uint64_t sub_10013B938(uint64_t result)
{
  unint64_t v1 = 1314530549 * (((result | 0x7B0834BC1D5378BFLL) - (result & 0x7B0834BC1D5378BFLL)) ^ 0xDC2DB421AC5AFE71);
  int v2 = *(_DWORD *)(result + 20) + v1;
  int v3 = *(_DWORD *)(result + 32) - v1;
  unint64_t v4 = *(void *)(result + 40) ^ v1;
  int v5 = *(_DWORD *)(result + 24) ^ v1;
  int v6 = *(_DWORD *)(result + 28) ^ v1;
  unint64_t v7 = *(void *)(result + 8) - v1;
  BOOL v8 = v7 == v4;
  BOOL v9 = v7 > v4;
  int v10 = v8;
  if ((v3 & 1) == 0) {
    BOOL v9 = v10;
  }
  if (v9) {
    int v11 = v6;
  }
  else {
    int v11 = v2;
  }
  *(_DWORD *)(result + 16) = v5 ^ v11;
  return result;
}

void sub_10013B9C8()
{
  uint64_t v0 = *(&off_100520A90
       + ((75 * (dword_1005A6DF0 ^ 0x7E ^ qword_1005A6FB0)) ^ byte_100495D20[byte_100491700[(75 * (dword_1005A6DF0 ^ 0x7E ^ qword_1005A6FB0))] ^ 0x38])
       + 165);
  unsigned __int8 v1 = 75 * ((qword_1005A6FB0 - *v0) ^ 0x7E);
  uint64_t v2 = (uint64_t)*(&off_100520A90
                + (byte_10049B328[(byte_100495E28[v1 - 8] ^ 0x14) - 8] ^ v1)
                + 86);
  uint64_t v3 = *(void *)(v2 - 4) - *v0 - (void)&v5;
  *uint64_t v0 = 544792907 * v3 + 0x1ED3F820338F2682;
  *(void *)(v2 - 4) = 544792907 * (v3 ^ 0xE12C07DFCC70D97ELL);
  v6[1] = 31090337 * ((-1499171947 - (v6 | 0xA6A47395) + (v6 | 0x595B8C6A)) ^ 0x9EDAEC23)
        + 1655392376;
  LOBYTE(v2) = 75 * (*(_DWORD *)v0 ^ 0x7E ^ *(_DWORD *)(v2 - 4));
  unint64_t v4 = (char *)*(&off_100520A90
               + ((75 * ((qword_1005A6FB0 + dword_1005A6DF0) ^ 0x7E)) ^ byte_100495F20[byte_100491A00[(75 * ((qword_1005A6FB0 + dword_1005A6DF0) ^ 0x7E))] ^ 0xDE])
               - 119)
     - 8;
  (*(void (**)(_DWORD *))&v4[8
                                      * (byte_100491608[(byte_1004A0764[v2 - 4] ^ 4)
                                                                       - 8] ^ v2)
                                      + 36768])(v6);
  __asm { BRAA            X8, X17 }
}

uint64_t sub_10013BBF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v17 = *(unsigned __int8 *)(v16
                           + v8 * v12
                           - 316259996
                           - ((((v8 * v12 - 316259996) * (unint64_t)v11) >> 32) >> 4)
                           * v14);
  *(unsigned char *)(v16
           + v8 * v12
           - 316245432
           - ((((v8 * v12 - 316245432) * (unint64_t)v11) >> 32) >> 4) * v14) = v17 ^ 0x39 ^ *(unsigned char *)(v15 + ((v17 ^ 0xD0) * v9 + 734243 - ((((v17 ^ 0xD0u) * v9 + 734243) * (unint64_t)v10) >> 32) * v13));
  return (*(uint64_t (**)(void))(a7 + 8 * (((16 * (v8 != -142254639)) | ((v8 != -142254639) << 6)) ^ v7)))();
}

uint64_t sub_10013BCA0@<X0>(int a1@<W8>)
{
  uint64_t v5 = 4 * (v2 - 826979245);
  int v6 = (int *)(STACK[0x2D8] + v5);
  int v7 = *v6;
  LODWORD(v6) = 1554976193
              * ((*(_DWORD *)(*(void *)STACK[0x2C0] + (*(_DWORD *)STACK[0x2B8] & (a1 + 1064435279))) ^ v6) & 0x7FFFFFFF);
  LODWORD(v6) = v6 ^ (v6 >> 16);
  uint64_t v8 = 4 * (((1554976193 * v6) >> 24) + 4);
  *(_DWORD *)(v1 + v5) ^= v7 ^ *((_DWORD *)*(&off_100520A90 + a1 - 4107)
                               + ((1554976193 * v6) >> 24)
                               - 2) ^ *(_DWORD *)((char *)*(&off_100520A90 + a1 - 4024) + v8) ^ *(_DWORD *)((char *)*(&off_100520A90 + (a1 ^ 0x107A)) + v8 - 8) ^ (230752256 * v6) ^ (1554976193 * v6) ^ (-158081675 * ((1554976193 * v6) >> 24));
  LODWORD(v5) = v4 + ((a1 - 1757) ^ 5) + ((a1 - 1757) | 5) - 4875 == 1980774255;
  return (*(uint64_t (**)(void))(v3 + 8 * (int)((v5 | (4 * v5)) ^ (a1 + 21))))();
}

void sub_10013BDE0()
{
  STACK[0x1878] = 0xCB7D947307D8B17CLL;
  STACK[0x1870] = 0x20C3B1A56B45E200;
  JUMPOUT(0x1001018E8);
}

uint64_t sub_10013BE68()
{
  unint64_t v2 = STACK[0x748];
  STACK[0x680] = STACK[0x710] + 108;
  STACK[0x520] = v2;
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (((v2 == 0) ^ (((v0 - 109) ^ 0x3A) - 27)) & 1 | (2
                                                                                                * (((v2 == 0) ^ (((v0 - 109) ^ 0x3A) - 27)) & 1)) | (v0 + 3731))))();
}

uint64_t sub_10013BEB0(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * (((v5 < ((13 * ((a4 + 2120) ^ 0xFB8)) ^ 0xD7u))
                                * (v4 + ((a4 + 546650279) | 0x4C0004C1) + 65)) ^ (a4 + 2120))))();
}

void sub_10013BF0C()
{
  STACK[0x2D0] = v0;
  *(_DWORD *)(STACK[0x5A8] + ((LODWORD(STACK[0x298]) + LODWORD(STACK[0x478])) & 0xFFFFFFFC)) = v1;
  JUMPOUT(0x1001E5A4CLL);
}

uint64_t sub_10013BF40@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,int64x2_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,int8x16_t a59,uint64_t a60,uint64_t a61,int64x2_t a62,int8x16_t a63)
{
  v79.i64[0] = a5 + a3;
  v79.i64[1] = a5 + (a3 | 1);
  v80.i64[0] = a5 + (a3 | 0xC);
  v80.i64[1] = a5 + (a3 | v69);
  unint64_t v81 = STACK[0x258];
  v82.i64[0] = a5 + (a3 | 8);
  v82.i64[1] = a5 + (a3 | v66);
  v83.i64[0] = a5 + (a3 | v67);
  v83.i64[1] = a5 + (a3 | v68);
  v84.i64[0] = a5 + (a3 | 6);
  v84.i64[1] = a5 + (a3 | 7);
  v85.i64[0] = a5 + (a3 | 4);
  v85.i64[1] = a5 + (a3 | v65);
  v86.i64[0] = a5 + (a3 | 2);
  v86.i64[1] = a5 + (((v70 + 1154) | v71) ^ v64 | a3);
  *(int64x2_t *)&STACK[0x2A0] = v86;
  int8x16_t v87 = vorrq_s8((int8x16_t)vshlq_n_s64(v86, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v86, 8uLL));
  int8x16_t v88 = *(int8x16_t *)&STACK[0x230];
  int64x2_t v89 = (int64x2_t)vandq_s8(vorrq_s8((int8x16_t)vshlq_n_s64(v85, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v85, 8uLL)), *(int8x16_t *)&STACK[0x230]);
  int64x2_t v90 = (int64x2_t)vandq_s8(vorrq_s8((int8x16_t)vshlq_n_s64(v79, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v79, 8uLL)), *(int8x16_t *)&STACK[0x230]);
  *(int64x2_t *)&STACK[0x2C0] = v82;
  *(int64x2_t *)&STACK[0x2D0] = v83;
  int64x2_t v91 = (int64x2_t)vandq_s8(vorrq_s8((int8x16_t)vshlq_n_s64(v84, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v84, 8uLL)), v88);
  *(int8x16_t *)&STACK[0x270] = vorrq_s8((int8x16_t)vshlq_n_s64(v83, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v83, 8uLL));
  *(int8x16_t *)&STACK[0x280] = vorrq_s8((int8x16_t)vshlq_n_s64(v82, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v82, 8uLL));
  *(int64x2_t *)&STACK[0x2B0] = v80;
  int64x2_t v92 = (int64x2_t)vandq_s8(v87, v88);
  *(int8x16_t *)&STACK[0x290] = vorrq_s8((int8x16_t)vshlq_n_s64(v80, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v80, 8uLL));
  int64x2_t v93 = vaddq_s64(v90, *(int64x2_t *)&STACK[0x370]);
  int64x2_t v94 = vaddq_s64(v91, *(int64x2_t *)&STACK[0x370]);
  int64x2_t v95 = vaddq_s64(v89, *(int64x2_t *)&STACK[0x370]);
  int8x16_t v97 = *(int8x16_t *)&STACK[0x210];
  int8x16_t v96 = *(int8x16_t *)&STACK[0x220];
  int8x16_t v98 = (int8x16_t)vsubq_s64(vaddq_s64((int64x2_t)vandq_s8((int8x16_t)vsubq_s64(*(int64x2_t *)&STACK[0x360], v90), *(int8x16_t *)&STACK[0x350]), v93), (int64x2_t)vandq_s8((int8x16_t)v93, *(int8x16_t *)&STACK[0x220]));
  int64x2_t v99 = vaddq_s64(v92, *(int64x2_t *)&STACK[0x370]);
  int8x16_t v100 = (int8x16_t)vsubq_s64(vaddq_s64((int64x2_t)vandq_s8((int8x16_t)vsubq_s64(*(int64x2_t *)&STACK[0x360], v91), *(int8x16_t *)&STACK[0x350]), v94), (int64x2_t)vandq_s8((int8x16_t)v94, *(int8x16_t *)&STACK[0x220]));
  int8x16_t v101 = (int8x16_t)vsubq_s64(vaddq_s64((int64x2_t)vandq_s8((int8x16_t)vsubq_s64(*(int64x2_t *)&STACK[0x360], v89), *(int8x16_t *)&STACK[0x350]), v95), (int64x2_t)vandq_s8((int8x16_t)v95, *(int8x16_t *)&STACK[0x220]));
  *(int64x2_t *)&STACK[0x260] = vsubq_s64(vaddq_s64((int64x2_t)vandq_s8((int8x16_t)vsubq_s64(*(int64x2_t *)&STACK[0x360], v92), *(int8x16_t *)&STACK[0x350]), v99), (int64x2_t)vandq_s8((int8x16_t)v99, *(int8x16_t *)&STACK[0x220]));
  int64x2_t v102 = (int64x2_t)veorq_s8(v100, v97);
  int64x2_t v103 = (int64x2_t)veorq_s8(v98, v97);
  int64x2_t v104 = (int64x2_t)veorq_s8(v98, *(int8x16_t *)&STACK[0x200]);
  int64x2_t v105 = (int64x2_t)veorq_s8(v100, *(int8x16_t *)&STACK[0x200]);
  int64x2_t v106 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v103, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v103, 8uLL)), v104), a64);
  int64x2_t v107 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v102, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v102, 8uLL)), v105), a64);
  int64x2_t v108 = (int64x2_t)veorq_s8((int8x16_t)v107, vorrq_s8((int8x16_t)vshlq_n_s64(v105, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v105, 0x3DuLL)));
  int64x2_t v109 = (int64x2_t)veorq_s8((int8x16_t)v106, vorrq_s8((int8x16_t)vshlq_n_s64(v104, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v104, 0x3DuLL)));
  int64x2_t v110 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v106, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v106, 8uLL)), v109);
  int64x2_t v111 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v107, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v107, 8uLL)), v108);
  int64x2_t v112 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v110, v110), a63), v110), a62), *(int8x16_t *)&STACK[0x3B0]);
  int64x2_t v113 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v111, v111), a63), v111), a62), *(int8x16_t *)&STACK[0x3B0]);
  int64x2_t v114 = (int64x2_t)veorq_s8((int8x16_t)v112, vorrq_s8((int8x16_t)vshlq_n_s64(v109, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v109, 0x3DuLL)));
  int64x2_t v115 = (int64x2_t)veorq_s8((int8x16_t)v113, vorrq_s8((int8x16_t)vshlq_n_s64(v108, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v108, 0x3DuLL)));
  int8x16_t v116 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v113, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v113, 8uLL)), v115);
  int8x16_t v117 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v112, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v112, 8uLL)), v114);
  int64x2_t v118 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v117, a59), (int64x2_t)vorrq_s8(v117, (int8x16_t)v77)), v77), *(int8x16_t *)&STACK[0x340]);
  int8x16_t v119 = vorrq_s8((int8x16_t)vshlq_n_s64(v115, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v115, 0x3DuLL));
  int64x2_t v120 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v116, a59), (int64x2_t)vorrq_s8(v116, (int8x16_t)v77)), v77), *(int8x16_t *)&STACK[0x340]);
  int64x2_t v121 = (int64x2_t)veorq_s8((int8x16_t)v118, vorrq_s8((int8x16_t)vshlq_n_s64(v114, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v114, 0x3DuLL)));
  int64x2_t v122 = (int64x2_t)veorq_s8((int8x16_t)v120, v119);
  int64x2_t v123 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v120, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v120, 8uLL)), v122);
  int64x2_t v124 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v118, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v118, 8uLL)), v121);
  int64x2_t v125 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8((int8x16_t)vaddq_s64(v124, v124), v73), v124), *(int64x2_t *)&STACK[0x330]), *(int8x16_t *)&STACK[0x320]);
  int64x2_t v126 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8((int8x16_t)vaddq_s64(v123, v123), v73), v123), *(int64x2_t *)&STACK[0x330]), *(int8x16_t *)&STACK[0x320]);
  int64x2_t v127 = (int64x2_t)veorq_s8((int8x16_t)v126, vorrq_s8((int8x16_t)vshlq_n_s64(v122, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v122, 0x3DuLL)));
  int64x2_t v128 = (int64x2_t)veorq_s8((int8x16_t)v125, vorrq_s8((int8x16_t)vshlq_n_s64(v121, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v121, 0x3DuLL)));
  int8x16_t v129 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v125, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v125, 8uLL)), v128);
  int8x16_t v130 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v126, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v126, 8uLL)), v127);
  int64x2_t v131 = (int64x2_t)veorq_s8((int8x16_t)vsubq_s64(a48, vaddq_s64((int64x2_t)vornq_s8(*(int8x16_t *)&STACK[0x300], v129), (int64x2_t)vorrq_s8(v129, *(int8x16_t *)&STACK[0x310]))), *(int8x16_t *)&STACK[0x2F0]);
  int64x2_t v132 = (int64x2_t)veorq_s8((int8x16_t)vsubq_s64(a48, vaddq_s64((int64x2_t)vornq_s8(*(int8x16_t *)&STACK[0x300], v130), (int64x2_t)vorrq_s8(v130, *(int8x16_t *)&STACK[0x310]))), *(int8x16_t *)&STACK[0x2F0]);
  int64x2_t v133 = (int64x2_t)veorq_s8((int8x16_t)v132, vorrq_s8((int8x16_t)vshlq_n_s64(v127, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v127, 0x3DuLL)));
  int64x2_t v134 = (int64x2_t)veorq_s8((int8x16_t)v131, vorrq_s8((int8x16_t)vshlq_n_s64(v128, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v128, 0x3DuLL)));
  int8x16_t v135 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v131, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v131, 8uLL)), v134);
  int8x16_t v136 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v132, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v132, 8uLL)), v133);
  int64x2_t v137 = (int64x2_t)veorq_s8((int8x16_t)vsubq_s64(a48, vaddq_s64((int64x2_t)vornq_s8(v76, v135), (int64x2_t)vorrq_s8(v135, v78))), v74);
  int64x2_t v138 = (int64x2_t)veorq_s8((int8x16_t)vsubq_s64(a48, vaddq_s64((int64x2_t)vornq_s8(v76, v136), (int64x2_t)vorrq_s8(v136, v78))), v74);
  uint64x2_t v139 = (uint64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v138, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v138, 8uLL)), (int64x2_t)veorq_s8((int8x16_t)v138, vorrq_s8((int8x16_t)vshlq_n_s64(v133, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v133, 0x3DuLL)))), v75);
  v230.val[0] = (int8x16_t)vshlq_u64((uint64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v137, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v137, 8uLL)), (int64x2_t)veorq_s8((int8x16_t)v137, vorrq_s8((int8x16_t)vshlq_n_s64(v134, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v134, 0x3DuLL)))), v75), (uint64x2_t)vnegq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(v79, 3uLL), v72)));
  v230.val[3] = (int8x16_t)vshlq_u64(v139, (uint64x2_t)vnegq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(v84, 3uLL), v72)));
  int8x16_t v140 = v101;
  int64x2_t v141 = (int64x2_t)veorq_s8(v101, v97);
  int8x16_t v142 = *(int8x16_t *)&STACK[0x200];
  int64x2_t v143 = (int64x2_t)veorq_s8(v140, *(int8x16_t *)&STACK[0x200]);
  int64x2_t v144 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v141, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v141, 8uLL)), v143), a64);
  int64x2_t v145 = (int64x2_t)veorq_s8((int8x16_t)v144, vorrq_s8((int8x16_t)vshlq_n_s64(v143, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v143, 0x3DuLL)));
  int64x2_t v146 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v144, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v144, 8uLL)), v145);
  int64x2_t v147 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v146, v146), a63), v146), a62), *(int8x16_t *)&STACK[0x3B0]);
  int64x2_t v148 = (int64x2_t)veorq_s8((int8x16_t)v147, vorrq_s8((int8x16_t)vshlq_n_s64(v145, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v145, 0x3DuLL)));
  int8x16_t v149 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v147, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v147, 8uLL)), v148);
  int64x2_t v150 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v149, a59), (int64x2_t)vorrq_s8(v149, (int8x16_t)v77)), v77), *(int8x16_t *)&STACK[0x340]);
  int64x2_t v151 = (int64x2_t)veorq_s8((int8x16_t)v150, vorrq_s8((int8x16_t)vshlq_n_s64(v148, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v148, 0x3DuLL)));
  int64x2_t v152 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v150, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v150, 8uLL)), v151);
  int64x2_t v153 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8((int8x16_t)vaddq_s64(v152, v152), v73), v152), *(int64x2_t *)&STACK[0x330]), *(int8x16_t *)&STACK[0x320]);
  int64x2_t v154 = (int64x2_t)veorq_s8((int8x16_t)v153, vorrq_s8((int8x16_t)vshlq_n_s64(v151, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v151, 0x3DuLL)));
  int8x16_t v155 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v153, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v153, 8uLL)), v154);
  int64x2_t v156 = (int64x2_t)veorq_s8((int8x16_t)vsubq_s64(a48, vaddq_s64((int64x2_t)vornq_s8(*(int8x16_t *)&STACK[0x300], v155), (int64x2_t)vorrq_s8(v155, *(int8x16_t *)&STACK[0x310]))), *(int8x16_t *)&STACK[0x2F0]);
  int64x2_t v157 = (int64x2_t)veorq_s8((int8x16_t)v156, vorrq_s8((int8x16_t)vshlq_n_s64(v154, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v154, 0x3DuLL)));
  int8x16_t v158 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v156, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v156, 8uLL)), v157);
  int64x2_t v159 = (int64x2_t)veorq_s8((int8x16_t)vsubq_s64(a48, vaddq_s64((int64x2_t)vornq_s8(v76, v158), (int64x2_t)vorrq_s8(v158, v78))), v74);
  v230.val[2] = (int8x16_t)vshlq_u64((uint64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v159, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v159, 8uLL)), (int64x2_t)veorq_s8((int8x16_t)v159, vorrq_s8((int8x16_t)vshlq_n_s64(v157, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v157, 0x3DuLL)))), v75), (uint64x2_t)vnegq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(v85, 3uLL), v72)));
  int64x2_t v160 = (int64x2_t)veorq_s8(*(int8x16_t *)&STACK[0x260], v97);
  int64x2_t v161 = (int64x2_t)veorq_s8(*(int8x16_t *)&STACK[0x260], *(int8x16_t *)&STACK[0x200]);
  int64x2_t v162 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v160, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v160, 8uLL)), v161), a64);
  int64x2_t v163 = (int64x2_t)veorq_s8((int8x16_t)v162, vorrq_s8((int8x16_t)vshlq_n_s64(v161, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v161, 0x3DuLL)));
  int64x2_t v164 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v162, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v162, 8uLL)), v163);
  int64x2_t v165 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v164, v164), a63), v164), a62), *(int8x16_t *)&STACK[0x3B0]);
  int64x2_t v166 = (int64x2_t)veorq_s8((int8x16_t)v165, vorrq_s8((int8x16_t)vshlq_n_s64(v163, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v163, 0x3DuLL)));
  int8x16_t v167 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v165, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v165, 8uLL)), v166);
  int64x2_t v168 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v167, a59), (int64x2_t)vorrq_s8(v167, (int8x16_t)v77)), v77), *(int8x16_t *)&STACK[0x340]);
  int64x2_t v169 = (int64x2_t)veorq_s8((int8x16_t)v168, vorrq_s8((int8x16_t)vshlq_n_s64(v166, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v166, 0x3DuLL)));
  int64x2_t v170 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v168, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v168, 8uLL)), v169);
  int64x2_t v171 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8((int8x16_t)vaddq_s64(v170, v170), v73), v170), *(int64x2_t *)&STACK[0x330]), *(int8x16_t *)&STACK[0x320]);
  int64x2_t v172 = (int64x2_t)veorq_s8((int8x16_t)v171, vorrq_s8((int8x16_t)vshlq_n_s64(v169, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v169, 0x3DuLL)));
  int8x16_t v173 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v171, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v171, 8uLL)), v172);
  int64x2_t v174 = (int64x2_t)veorq_s8((int8x16_t)vsubq_s64(a48, vaddq_s64((int64x2_t)vornq_s8(*(int8x16_t *)&STACK[0x300], v173), (int64x2_t)vorrq_s8(v173, *(int8x16_t *)&STACK[0x310]))), *(int8x16_t *)&STACK[0x2F0]);
  int64x2_t v175 = (int64x2_t)veorq_s8((int8x16_t)v174, vorrq_s8((int8x16_t)vshlq_n_s64(v172, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v172, 0x3DuLL)));
  int8x16_t v176 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v174, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v174, 8uLL)), v175);
  int64x2_t v177 = (int64x2_t)veorq_s8((int8x16_t)vsubq_s64(a48, vaddq_s64((int64x2_t)vornq_s8(v76, v176), (int64x2_t)vorrq_s8(v176, v78))), v74);
  v79.i64[0] = a5 + (a3 | 0xE);
  v79.i64[1] = a5 + (a3 | 0xF);
  int8x16_t v178 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v177, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v177, 8uLL)), (int64x2_t)veorq_s8((int8x16_t)v177, vorrq_s8((int8x16_t)vshlq_n_s64(v175, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v175, 0x3DuLL))));
  int64x2_t v179 = (int64x2_t)vandq_s8(*(int8x16_t *)&STACK[0x270], v88);
  int64x2_t v180 = (int64x2_t)vandq_s8(*(int8x16_t *)&STACK[0x280], v88);
  v230.val[1] = (int8x16_t)vshlq_u64((uint64x2_t)veorq_s8(v178, v75), (uint64x2_t)vnegq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(*(int64x2_t *)&STACK[0x2A0], 3uLL), v72)));
  int64x2_t v181 = (int64x2_t)vandq_s8(*(int8x16_t *)&STACK[0x290], v88);
  int64x2_t v182 = (int64x2_t)vandq_s8(vorrq_s8((int8x16_t)vshlq_n_s64(v79, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v79, 8uLL)), v88);
  int64x2_t v183 = vaddq_s64(v182, *(int64x2_t *)&STACK[0x370]);
  int8x16_t v184 = (int8x16_t)vsubq_s64(vaddq_s64((int64x2_t)vandq_s8((int8x16_t)vsubq_s64(*(int64x2_t *)&STACK[0x360], v182), *(int8x16_t *)&STACK[0x350]), v183), (int64x2_t)vandq_s8((int8x16_t)v183, v96));
  int64x2_t v185 = vaddq_s64(v181, *(int64x2_t *)&STACK[0x370]);
  int8x16_t v186 = (int8x16_t)vsubq_s64(vaddq_s64((int64x2_t)vandq_s8((int8x16_t)vsubq_s64(*(int64x2_t *)&STACK[0x360], v181), *(int8x16_t *)&STACK[0x350]), v185), (int64x2_t)vandq_s8((int8x16_t)v185, v96));
  int64x2_t v187 = vaddq_s64(v180, *(int64x2_t *)&STACK[0x370]);
  int8x16_t v188 = (int8x16_t)vsubq_s64(vaddq_s64((int64x2_t)vandq_s8((int8x16_t)vsubq_s64(*(int64x2_t *)&STACK[0x360], v180), *(int8x16_t *)&STACK[0x350]), v187), (int64x2_t)vandq_s8((int8x16_t)v187, v96));
  int64x2_t v189 = vaddq_s64(v179, *(int64x2_t *)&STACK[0x370]);
  int8x16_t v190 = (int8x16_t)vsubq_s64(vaddq_s64((int64x2_t)vandq_s8((int8x16_t)vsubq_s64(*(int64x2_t *)&STACK[0x360], v179), *(int8x16_t *)&STACK[0x350]), v189), (int64x2_t)vandq_s8((int8x16_t)v189, v96));
  *(int8x16_t *)&STACK[0x2A0] = vqtbl4q_s8(v230, *(int8x16_t *)&STACK[0x2E0]);
  v230.val[0] = veorq_s8(v186, v97);
  v230.val[1] = veorq_s8(v184, v97);
  v230.val[2] = veorq_s8(v184, v142);
  v230.val[3] = veorq_s8(v186, v142);
  v230.val[1] = veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v230.val[1], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v230.val[1], 8uLL)), (int64x2_t)v230.val[2]), a64);
  v230.val[0] = veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v230.val[0], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v230.val[0], 8uLL)), (int64x2_t)v230.val[3]), a64);
  v230.val[3] = veorq_s8(v230.val[0], vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v230.val[3], 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v230.val[3], 0x3DuLL)));
  v230.val[2] = veorq_s8(v230.val[1], vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v230.val[2], 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v230.val[2], 0x3DuLL)));
  v230.val[1] = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v230.val[1], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v230.val[1], 8uLL)), (int64x2_t)v230.val[2]);
  v230.val[0] = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v230.val[0], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v230.val[0], 8uLL)), (int64x2_t)v230.val[3]);
  v230.val[0] = veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vaddq_s64((int64x2_t)v230.val[0], (int64x2_t)v230.val[0]), a63), (int64x2_t)v230.val[0]), a62), *(int8x16_t *)&STACK[0x3B0]);
  v230.val[1] = veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vaddq_s64((int64x2_t)v230.val[1], (int64x2_t)v230.val[1]), a63), (int64x2_t)v230.val[1]), a62), *(int8x16_t *)&STACK[0x3B0]);
  v230.val[2] = veorq_s8(v230.val[1], vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v230.val[2], 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v230.val[2], 0x3DuLL)));
  v230.val[3] = veorq_s8(v230.val[0], vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v230.val[3], 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v230.val[3], 0x3DuLL)));
  v230.val[0] = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v230.val[0], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v230.val[0], 8uLL)), (int64x2_t)v230.val[3]);
  v230.val[1] = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v230.val[1], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v230.val[1], 8uLL)), (int64x2_t)v230.val[2]);
  v230.val[0] = veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v230.val[0], a59), (int64x2_t)vorrq_s8(v230.val[0], (int8x16_t)v77)), v77), *(int8x16_t *)&STACK[0x340]);
  v230.val[1] = veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v230.val[1], a59), (int64x2_t)vorrq_s8(v230.val[1], (int8x16_t)v77)), v77), *(int8x16_t *)&STACK[0x340]);
  v230.val[2] = veorq_s8(v230.val[1], vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v230.val[2], 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v230.val[2], 0x3DuLL)));
  v230.val[3] = veorq_s8(v230.val[0], vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v230.val[3], 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v230.val[3], 0x3DuLL)));
  v230.val[0] = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v230.val[0], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v230.val[0], 8uLL)), (int64x2_t)v230.val[3]);
  v230.val[1] = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v230.val[1], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v230.val[1], 8uLL)), (int64x2_t)v230.val[2]);
  v230.val[1] = veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8((int8x16_t)vaddq_s64((int64x2_t)v230.val[1], (int64x2_t)v230.val[1]), v73), (int64x2_t)v230.val[1]), *(int64x2_t *)&STACK[0x330]), *(int8x16_t *)&STACK[0x320]);
  v230.val[0] = veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8((int8x16_t)vaddq_s64((int64x2_t)v230.val[0], (int64x2_t)v230.val[0]), v73), (int64x2_t)v230.val[0]), *(int64x2_t *)&STACK[0x330]), *(int8x16_t *)&STACK[0x320]);
  v230.val[3] = veorq_s8(v230.val[0], vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v230.val[3], 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v230.val[3], 0x3DuLL)));
  v230.val[2] = veorq_s8(v230.val[1], vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v230.val[2], 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v230.val[2], 0x3DuLL)));
  v230.val[1] = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v230.val[1], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v230.val[1], 8uLL)), (int64x2_t)v230.val[2]);
  v230.val[0] = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v230.val[0], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v230.val[0], 8uLL)), (int64x2_t)v230.val[3]);
  v230.val[1] = veorq_s8((int8x16_t)vsubq_s64(a48, vaddq_s64((int64x2_t)vornq_s8(*(int8x16_t *)&STACK[0x300], v230.val[1]), (int64x2_t)vorrq_s8(v230.val[1], *(int8x16_t *)&STACK[0x310]))), *(int8x16_t *)&STACK[0x2F0]);
  v230.val[0] = veorq_s8((int8x16_t)vsubq_s64(a48, vaddq_s64((int64x2_t)vornq_s8(*(int8x16_t *)&STACK[0x300], v230.val[0]), (int64x2_t)vorrq_s8(v230.val[0], *(int8x16_t *)&STACK[0x310]))), *(int8x16_t *)&STACK[0x2F0]);
  v230.val[3] = veorq_s8(v230.val[0], vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v230.val[3], 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v230.val[3], 0x3DuLL)));
  v230.val[2] = veorq_s8(v230.val[1], vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v230.val[2], 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v230.val[2], 0x3DuLL)));
  v230.val[1] = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v230.val[1], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v230.val[1], 8uLL)), (int64x2_t)v230.val[2]);
  v230.val[0] = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v230.val[0], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v230.val[0], 8uLL)), (int64x2_t)v230.val[3]);
  v230.val[1] = veorq_s8((int8x16_t)vsubq_s64(a48, vaddq_s64((int64x2_t)vornq_s8(v76, v230.val[1]), (int64x2_t)vorrq_s8(v230.val[1], v78))), v74);
  v230.val[0] = veorq_s8((int8x16_t)vsubq_s64(a48, vaddq_s64((int64x2_t)vornq_s8(v76, v230.val[0]), (int64x2_t)vorrq_s8(v230.val[0], v78))), v74);
  uint64x2_t v191 = (uint64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v230.val[0], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v230.val[0], 8uLL)), (int64x2_t)veorq_s8(v230.val[0], vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v230.val[3], 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v230.val[3], 0x3DuLL)))), v75);
  v230.val[3] = (int8x16_t)vshlq_u64((uint64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v230.val[1], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v230.val[1], 8uLL)), (int64x2_t)veorq_s8(v230.val[1], vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v230.val[2], 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v230.val[2], 0x3DuLL)))), v75),
                             (uint64x2_t)vnegq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(v79, 3uLL), v72)));
  v230.val[2] = (int8x16_t)vshlq_u64(v191, (uint64x2_t)vnegq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(*(int64x2_t *)&STACK[0x2B0], 3uLL), v72)));
  int64x2_t v192 = (int64x2_t)veorq_s8(v188, v97);
  int64x2_t v193 = (int64x2_t)veorq_s8(v188, v142);
  int64x2_t v194 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v192, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v192, 8uLL)), v193), a64);
  int64x2_t v195 = (int64x2_t)veorq_s8((int8x16_t)v194, vorrq_s8((int8x16_t)vshlq_n_s64(v193, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v193, 0x3DuLL)));
  int64x2_t v196 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v194, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v194, 8uLL)), v195);
  int64x2_t v197 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v196, v196), a63), v196), a62), *(int8x16_t *)&STACK[0x3B0]);
  int64x2_t v198 = (int64x2_t)veorq_s8((int8x16_t)v197, vorrq_s8((int8x16_t)vshlq_n_s64(v195, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v195, 0x3DuLL)));
  int8x16_t v199 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v197, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v197, 8uLL)), v198);
  int64x2_t v200 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v199, a59), (int64x2_t)vorrq_s8(v199, (int8x16_t)v77)), v77), *(int8x16_t *)&STACK[0x340]);
  int64x2_t v201 = (int64x2_t)veorq_s8((int8x16_t)v200, vorrq_s8((int8x16_t)vshlq_n_s64(v198, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v198, 0x3DuLL)));
  int64x2_t v202 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v200, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v200, 8uLL)), v201);
  int64x2_t v203 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8((int8x16_t)vaddq_s64(v202, v202), v73), v202), *(int64x2_t *)&STACK[0x330]), *(int8x16_t *)&STACK[0x320]);
  int64x2_t v204 = (int64x2_t)veorq_s8((int8x16_t)v203, vorrq_s8((int8x16_t)vshlq_n_s64(v201, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v201, 0x3DuLL)));
  int8x16_t v205 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v203, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v203, 8uLL)), v204);
  int64x2_t v206 = (int64x2_t)veorq_s8((int8x16_t)vsubq_s64(a48, vaddq_s64((int64x2_t)vornq_s8(*(int8x16_t *)&STACK[0x300], v205), (int64x2_t)vorrq_s8(v205, *(int8x16_t *)&STACK[0x310]))), *(int8x16_t *)&STACK[0x2F0]);
  int64x2_t v207 = (int64x2_t)veorq_s8((int8x16_t)v206, vorrq_s8((int8x16_t)vshlq_n_s64(v204, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v204, 0x3DuLL)));
  int8x16_t v208 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v206, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v206, 8uLL)), v207);
  int64x2_t v209 = (int64x2_t)veorq_s8((int8x16_t)vsubq_s64(a48, vaddq_s64((int64x2_t)vornq_s8(v76, v208), (int64x2_t)vorrq_s8(v208, v78))), v74);
  v230.val[0] = (int8x16_t)vshlq_u64((uint64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v209, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v209, 8uLL)), (int64x2_t)veorq_s8((int8x16_t)v209, vorrq_s8((int8x16_t)vshlq_n_s64(v207, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v207, 0x3DuLL)))), v75), (uint64x2_t)vnegq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(*(int64x2_t *)&STACK[0x2C0], 3uLL), v72)));
  int64x2_t v210 = (int64x2_t)veorq_s8(v190, v97);
  int64x2_t v211 = (int64x2_t)veorq_s8(v190, v142);
  int64x2_t v212 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v210, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v210, 8uLL)), v211), a64);
  int64x2_t v213 = (int64x2_t)veorq_s8((int8x16_t)v212, vorrq_s8((int8x16_t)vshlq_n_s64(v211, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v211, 0x3DuLL)));
  int64x2_t v214 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v212, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v212, 8uLL)), v213);
  int64x2_t v215 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v214, v214), a63), v214), a62), *(int8x16_t *)&STACK[0x3B0]);
  int64x2_t v216 = (int64x2_t)veorq_s8((int8x16_t)v215, vorrq_s8((int8x16_t)vshlq_n_s64(v213, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v213, 0x3DuLL)));
  int8x16_t v217 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v215, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v215, 8uLL)), v216);
  int64x2_t v218 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v217, a59), (int64x2_t)vorrq_s8(v217, (int8x16_t)v77)), v77), *(int8x16_t *)&STACK[0x340]);
  int64x2_t v219 = (int64x2_t)veorq_s8((int8x16_t)v218, vorrq_s8((int8x16_t)vshlq_n_s64(v216, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v216, 0x3DuLL)));
  int64x2_t v220 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v218, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v218, 8uLL)), v219);
  int64x2_t v221 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8((int8x16_t)vaddq_s64(v220, v220), v73), v220), *(int64x2_t *)&STACK[0x330]), *(int8x16_t *)&STACK[0x320]);
  int64x2_t v222 = (int64x2_t)veorq_s8((int8x16_t)v221, vorrq_s8((int8x16_t)vshlq_n_s64(v219, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v219, 0x3DuLL)));
  int8x16_t v223 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v221, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v221, 8uLL)), v222);
  int64x2_t v224 = (int64x2_t)veorq_s8((int8x16_t)vsubq_s64(a48, vaddq_s64((int64x2_t)vornq_s8(*(int8x16_t *)&STACK[0x300], v223), (int64x2_t)vorrq_s8(v223, *(int8x16_t *)&STACK[0x310]))), *(int8x16_t *)&STACK[0x2F0]);
  int64x2_t v225 = (int64x2_t)veorq_s8((int8x16_t)v224, vorrq_s8((int8x16_t)vshlq_n_s64(v222, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v222, 0x3DuLL)));
  int8x16_t v226 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v224, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v224, 8uLL)), v225);
  int64x2_t v227 = (int64x2_t)veorq_s8((int8x16_t)vsubq_s64(a48, vaddq_s64((int64x2_t)vornq_s8(v76, v226), (int64x2_t)vorrq_s8(v226, v78))), v74);
  v230.val[1] = (int8x16_t)vshlq_u64((uint64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v227, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v227, 8uLL)), (int64x2_t)veorq_s8((int8x16_t)v227, vorrq_s8((int8x16_t)vshlq_n_s64(v225, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v225, 0x3DuLL)))), v75), (uint64x2_t)vnegq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(*(int64x2_t *)&STACK[0x2D0], 3uLL), v72)));
  long long v228 = *(_OWORD *)&STACK[0x2A0];
  *((void *)&v228 + 1) = vqtbl4q_s8(v230, *(int8x16_t *)&STACK[0x2E0]).u64[0];
  *(_OWORD *)(a5 + a3 + a1) = v228;
  return (*(uint64_t (**)(void))(v81 + 8 * (((a3 + 16 == a4) * a2) ^ v70)))();
}

uint64_t sub_10013CCEC(int a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((964 * ((((a1 - 2540) ^ ((unint64_t)(a2 - v5 - a4) < 0x20)) & 1) == 0)) ^ a1)))();
}

uint64_t sub_10013CD34@<X0>(int a1@<W8>)
{
  uint64_t v3 = *(uint64_t (**)(uint64_t))(v2 + 8 * (a1 + 3289));
  return v3(v1);
}

uint64_t sub_10013CD64(uint64_t a1, uint64_t a2)
{
  unint64_t v2 = (qword_1005A6FB0 + qword_1005A70E0) ^ (unint64_t)&v8;
  qword_1005A70E0 = 544792907 * v2 - 0x1ED3F820338F2682;
  qword_1005A6FB0 = 544792907 * (v2 ^ 0xE12C07DFCC70D97ELL);
  int v3 = *(_DWORD *)(a2 + 4);
  unsigned __int8 v4 = 75 * ((75 * v2 + 126) ^ 0x7E ^ qword_1005A6FB0);
  uint64_t v5 = (char *)*(&off_100520A90 + (v4 ^ byte_100491900[byte_1004A0960[v4] ^ 0xD4]) - 94) - 8;
  if (v3 == 473457778) {
    __asm { BRAA            X1, X17 }
  }
  if (v3 == 473457785)
  {
    int v6 = **(unsigned __int8 **)(a2 + 8) - 9;
    __asm { BRAA            X4, X17 }
  }
  return 4294925278;
}

uint64_t sub_10013CF38(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(void))(v7 + 8 * (((a2 != (a7 ^ 0x188A) - 557499698) * ((4 * a7) ^ 0x2298)) ^ a7)))();
}

void sub_10013CF74()
{
  int v3 = (char)(v1 - 31) - (char)(v2 - 31);
  LODWORD(STACK[0x2D8]) = (v3 ^ 0xDFFA9FA5) + ((v0 - 2195) | 0x188) + ((2 * v3) & 0xBFF53F4A) + 2063563031;
  JUMPOUT(0x10014F7C8);
}

uint64_t sub_10013CFC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return (*(uint64_t (**)(void))(v9 + 8 * (((a9 == 0) * ((v10 - 5777330) & 0x97A23FEF ^ 0x97A21E09)) | v10)))();
}

uint64_t sub_10013D034@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,int64x2_t a54,uint64_t a55,uint64_t a56,int8x16_t a57,uint64_t a58,uint64_t a59,int8x16_t a60)
{
  uint64_t v71 = (v62 - 439561737 + v61);
  unint64_t v72 = STACK[0x300];
  uint64_t v73 = STACK[0x300] + v71;
  v74.i64[0] = v73;
  v74.i64[1] = STACK[0x300] + (v62 - 439558145);
  v75.i64[0] = STACK[0x300] + (v62 - 439558146);
  v75.i64[1] = STACK[0x300] + (v62 - 439558147);
  v76.i64[0] = STACK[0x300] + (v62 - 439558148);
  v76.i64[1] = STACK[0x300] + (v62 - 439558149);
  v77.i64[0] = STACK[0x300] + (v62 - 439558150);
  v77.i64[1] = STACK[0x300] + (v62 - 439558151);
  v78.i64[0] = STACK[0x300] + (v62 - 439558154);
  v78.i64[1] = STACK[0x300] + (v62 - 439558155);
  v79.i64[0] = STACK[0x300] + (v62 - 439558156);
  v79.i64[1] = STACK[0x300] + (v62 - 439558157);
  v80.i64[0] = STACK[0x300] + (v62 - 439558158);
  v80.i64[1] = STACK[0x300] + (v62 - 439558159);
  int8x16_t v81 = *(int8x16_t *)&STACK[0x2E0];
  int64x2_t v82 = (int64x2_t)vandq_s8((int8x16_t)vshrq_n_u64(v77, 7uLL), *(int8x16_t *)&STACK[0x2E0]);
  int64x2_t v83 = (int64x2_t)vandq_s8((int8x16_t)vshrq_n_u64(v76, 7uLL), *(int8x16_t *)&STACK[0x2E0]);
  *(int64x2_t *)&STACK[0x310] = v80;
  *(int64x2_t *)&STACK[0x320] = v78;
  *(int64x2_t *)&STACK[0x330] = v79;
  *(int8x16_t *)&STACK[0x360] = vorrq_s8((int8x16_t)vshlq_n_s64(v79, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v79, 8uLL));
  *(int8x16_t *)&STACK[0x370] = vorrq_s8((int8x16_t)vshlq_n_s64(v80, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v80, 8uLL));
  *(int8x16_t *)&STACK[0x350] = vorrq_s8((int8x16_t)vshlq_n_s64(v78, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v78, 8uLL));
  int64x2_t v84 = *(int64x2_t *)&STACK[0x2D0];
  int8x16_t v85 = *(int8x16_t *)&STACK[0x280];
  int8x16_t v86 = *(int8x16_t *)&STACK[0x3B0];
  *(int64x2_t *)&STACK[0x340] = vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vaddq_s64((int64x2_t)vandq_s8((int8x16_t)vshrq_n_u64(v74, 7uLL), v81), *(int64x2_t *)&STACK[0x2D0]), *(int8x16_t *)&STACK[0x280]), (int64x2_t)vandq_s8(vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v74, 0x38uLL), (int8x16_t)vshrq_n_u64(v74, 8uLL)), *(int8x16_t *)&STACK[0x3B0]));
  int8x16_t v87 = (int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v83, v84), v85), (int64x2_t)vandq_s8(vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v76, 0x38uLL), (int8x16_t)vshrq_n_u64(v76, 8uLL)), v86)), *(int64x2_t *)&STACK[0x2C0]);
  int8x16_t v88 = (int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v82, v84), v85), (int64x2_t)vandq_s8(vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v77, 0x38uLL), (int8x16_t)vshrq_n_u64(v77, 8uLL)), v86)), *(int64x2_t *)&STACK[0x2C0]);
  int64x2_t v89 = (int64x2_t)veorq_s8(v88, *(int8x16_t *)&STACK[0x2B0]);
  int64x2_t v90 = (int64x2_t)veorq_s8(v87, *(int8x16_t *)&STACK[0x2B0]);
  int64x2_t v91 = (int64x2_t)veorq_s8(v87, v64);
  int64x2_t v92 = (int64x2_t)veorq_s8(v88, v64);
  int8x16_t v93 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v89, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v89, 8uLL)), v92);
  int8x16_t v94 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v90, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v90, 8uLL)), v91);
  int8x16_t v95 = *(int8x16_t *)&STACK[0x270];
  int64x2_t v96 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v93, *(int8x16_t *)&STACK[0x290]), (int64x2_t)vorrq_s8(v93, (int8x16_t)v69)), v69), *(int8x16_t *)&STACK[0x270]);
  int64x2_t v97 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v94, *(int8x16_t *)&STACK[0x290]), (int64x2_t)vorrq_s8(v94, (int8x16_t)v69)), v69), *(int8x16_t *)&STACK[0x270]);
  int64x2_t v98 = (int64x2_t)veorq_s8((int8x16_t)v97, vorrq_s8((int8x16_t)vshlq_n_s64(v91, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v91, 0x3DuLL)));
  int64x2_t v99 = (int64x2_t)veorq_s8((int8x16_t)v96, vorrq_s8((int8x16_t)vshlq_n_s64(v92, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v92, 0x3DuLL)));
  int64x2_t v100 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v97, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v97, 8uLL)), v98), *(int8x16_t *)&STACK[0x260]);
  int64x2_t v101 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v96, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v96, 8uLL)), v99), *(int8x16_t *)&STACK[0x260]);
  int64x2_t v102 = (int64x2_t)veorq_s8((int8x16_t)v101, vorrq_s8((int8x16_t)vshlq_n_s64(v99, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v99, 0x3DuLL)));
  int64x2_t v103 = (int64x2_t)veorq_s8((int8x16_t)v100, vorrq_s8((int8x16_t)vshlq_n_s64(v98, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v98, 0x3DuLL)));
  int64x2_t v104 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v101, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v101, 8uLL)), v102), *(int8x16_t *)&STACK[0x240]);
  int64x2_t v105 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v100, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v100, 8uLL)), v103), *(int8x16_t *)&STACK[0x240]);
  int8x16_t v106 = vorrq_s8((int8x16_t)vshlq_n_s64(v102, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v102, 0x3DuLL));
  int64x2_t v107 = (int64x2_t)veorq_s8((int8x16_t)v105, vorrq_s8((int8x16_t)vshlq_n_s64(v103, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v103, 0x3DuLL)));
  int64x2_t v108 = (int64x2_t)veorq_s8((int8x16_t)v104, v106);
  int64x2_t v109 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v104, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v104, 8uLL)), v108);
  int64x2_t v110 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v105, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v105, 8uLL)), v107);
  int64x2_t v111 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8((int8x16_t)vaddq_s64(v110, v110), v65), v110), v66), v67);
  int64x2_t v112 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8((int8x16_t)vaddq_s64(v109, v109), v65), v109), v66), v67);
  int64x2_t v113 = (int64x2_t)veorq_s8((int8x16_t)v112, vorrq_s8((int8x16_t)vshlq_n_s64(v108, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v108, 0x3DuLL)));
  int64x2_t v114 = (int64x2_t)veorq_s8((int8x16_t)v111, vorrq_s8((int8x16_t)vshlq_n_s64(v107, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v107, 0x3DuLL)));
  int64x2_t v115 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v112, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v112, 8uLL)), v113), v68);
  int64x2_t v116 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v111, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v111, 8uLL)), v114), v68);
  int64x2_t v117 = (int64x2_t)veorq_s8((int8x16_t)v116, vorrq_s8((int8x16_t)vshlq_n_s64(v114, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v114, 0x3DuLL)));
  int64x2_t v118 = (int64x2_t)veorq_s8((int8x16_t)v115, vorrq_s8((int8x16_t)vshlq_n_s64(v113, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v113, 0x3DuLL)));
  int64x2_t v119 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v116, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v116, 8uLL)), v117), v70);
  int64x2_t v120 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v115, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v115, 8uLL)), v118), v70);
  int8x16_t v121 = (int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vaddq_s64((int64x2_t)vandq_s8((int8x16_t)vshrq_n_u64(v75, 7uLL), v81), v84), v85), (int64x2_t)vandq_s8(vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v75, 0x38uLL), (int8x16_t)vshrq_n_u64(v75, 8uLL)), v86)), *(int64x2_t *)&STACK[0x2C0]);
  int8x16_t v122 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v119, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v119, 8uLL)), (int64x2_t)veorq_s8((int8x16_t)v119, vorrq_s8((int8x16_t)vshlq_n_s64(v117, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v117, 0x3DuLL))));
  int8x16_t v123 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v120, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v120, 8uLL)), (int64x2_t)veorq_s8((int8x16_t)v120, vorrq_s8((int8x16_t)vshlq_n_s64(v118, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v118, 0x3DuLL))));
  int8x16_t v124 = (int8x16_t)vshlq_n_s64((int64x2_t)v76, 3uLL);
  int8x16_t v125 = *(int8x16_t *)&STACK[0x2F0];
  v207.val[3] = (int8x16_t)vshlq_u64((uint64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v123, a60), (int64x2_t)vorrq_s8(v123, (int8x16_t)a54)), a54), v63), (uint64x2_t)vnegq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v77, 3uLL), *(int8x16_t *)&STACK[0x2F0])));
  v207.val[2] = (int8x16_t)vshlq_u64((uint64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v122, a60), (int64x2_t)vorrq_s8(v122, (int8x16_t)a54)), a54), v63), (uint64x2_t)vnegq_s64((int64x2_t)vandq_s8(v124, *(int8x16_t *)&STACK[0x2F0])));
  int64x2_t v126 = (int64x2_t)veorq_s8(v121, *(int8x16_t *)&STACK[0x2B0]);
  int64x2_t v127 = (int64x2_t)veorq_s8(v121, v64);
  int8x16_t v128 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v126, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v126, 8uLL)), v127);
  int64x2_t v129 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v128, *(int8x16_t *)&STACK[0x290]), (int64x2_t)vorrq_s8(v128, (int8x16_t)v69)), v69), *(int8x16_t *)&STACK[0x270]);
  int64x2_t v130 = (int64x2_t)veorq_s8((int8x16_t)v129, vorrq_s8((int8x16_t)vshlq_n_s64(v127, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v127, 0x3DuLL)));
  int64x2_t v131 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v129, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v129, 8uLL)), v130), *(int8x16_t *)&STACK[0x260]);
  int64x2_t v132 = (int64x2_t)veorq_s8((int8x16_t)v131, vorrq_s8((int8x16_t)vshlq_n_s64(v130, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v130, 0x3DuLL)));
  int64x2_t v133 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v131, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v131, 8uLL)), v132), *(int8x16_t *)&STACK[0x240]);
  int64x2_t v134 = (int64x2_t)veorq_s8((int8x16_t)v133, vorrq_s8((int8x16_t)vshlq_n_s64(v132, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v132, 0x3DuLL)));
  int64x2_t v135 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v133, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v133, 8uLL)), v134);
  int64x2_t v136 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8((int8x16_t)vaddq_s64(v135, v135), v65), v135), v66), v67);
  int64x2_t v137 = (int64x2_t)veorq_s8((int8x16_t)v136, vorrq_s8((int8x16_t)vshlq_n_s64(v134, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v134, 0x3DuLL)));
  int64x2_t v138 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v136, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v136, 8uLL)), v137), v68);
  int64x2_t v139 = (int64x2_t)veorq_s8((int8x16_t)v138, vorrq_s8((int8x16_t)vshlq_n_s64(v137, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v137, 0x3DuLL)));
  int64x2_t v140 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v138, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v138, 8uLL)), v139), v70);
  int8x16_t v141 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v140, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v140, 8uLL)), (int64x2_t)veorq_s8((int8x16_t)v140, vorrq_s8((int8x16_t)vshlq_n_s64(v139, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v139, 0x3DuLL))));
  int8x16_t v142 = (int8x16_t)vaddq_s64(*(int64x2_t *)&STACK[0x340], *(int64x2_t *)&STACK[0x2C0]);
  int64x2_t v143 = *(int64x2_t *)&STACK[0x2C0];
  v207.val[1] = (int8x16_t)vshlq_u64((uint64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v141, a60), (int64x2_t)vorrq_s8(v141, (int8x16_t)a54)), a54), v63), (uint64x2_t)vnegq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v75, 3uLL), *(int8x16_t *)&STACK[0x2F0])));
  int64x2_t v144 = (int64x2_t)veorq_s8(v142, *(int8x16_t *)&STACK[0x2B0]);
  int8x16_t v145 = *(int8x16_t *)&STACK[0x2B0];
  int64x2_t v146 = (int64x2_t)veorq_s8(v142, v64);
  int8x16_t v147 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v144, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v144, 8uLL)), v146);
  int8x16_t v148 = *(int8x16_t *)&STACK[0x290];
  int64x2_t v149 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v147, *(int8x16_t *)&STACK[0x290]), (int64x2_t)vorrq_s8(v147, (int8x16_t)v69)), v69), *(int8x16_t *)&STACK[0x270]);
  int64x2_t v150 = (int64x2_t)veorq_s8((int8x16_t)v149, vorrq_s8((int8x16_t)vshlq_n_s64(v146, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v146, 0x3DuLL)));
  int64x2_t v151 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v149, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v149, 8uLL)), v150), *(int8x16_t *)&STACK[0x260]);
  int8x16_t v152 = *(int8x16_t *)&STACK[0x260];
  int64x2_t v153 = (int64x2_t)veorq_s8((int8x16_t)v151, vorrq_s8((int8x16_t)vshlq_n_s64(v150, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v150, 0x3DuLL)));
  int64x2_t v154 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v151, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v151, 8uLL)), v153), *(int8x16_t *)&STACK[0x240]);
  int8x16_t v155 = *(int8x16_t *)&STACK[0x240];
  int64x2_t v156 = (int64x2_t)veorq_s8((int8x16_t)v154, vorrq_s8((int8x16_t)vshlq_n_s64(v153, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v153, 0x3DuLL)));
  int64x2_t v157 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v154, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v154, 8uLL)), v156);
  int64x2_t v158 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8((int8x16_t)vaddq_s64(v157, v157), v65), v157), v66), v67);
  int64x2_t v159 = (int64x2_t)veorq_s8((int8x16_t)v158, vorrq_s8((int8x16_t)vshlq_n_s64(v156, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v156, 0x3DuLL)));
  int64x2_t v160 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v158, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v158, 8uLL)), v159), v68);
  int64x2_t v161 = (int64x2_t)veorq_s8((int8x16_t)v160, vorrq_s8((int8x16_t)vshlq_n_s64(v159, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v159, 0x3DuLL)));
  int64x2_t v162 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v160, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v160, 8uLL)), v161), v70);
  int64x2_t v163 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v162, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v162, 8uLL)), (int64x2_t)veorq_s8((int8x16_t)v162, vorrq_s8((int8x16_t)vshlq_n_s64(v161, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v161, 0x3DuLL))));
  int64x2_t v164 = vsubq_s64((int64x2_t)vorrq_s8((int8x16_t)v163, a60), (int64x2_t)vorrq_s8((int8x16_t)v163, (int8x16_t)a54));
  v163.i64[0] = v72 + (v62 - 439558152);
  v163.i64[1] = v72 + (v62 - 439558153);
  v207.val[0] = (int8x16_t)vshlq_u64((uint64x2_t)veorq_s8((int8x16_t)vaddq_s64(v164, a54), v63), (uint64x2_t)vnegq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v74, 3uLL), *(int8x16_t *)&STACK[0x2F0])));
  int8x16_t v165 = *(int8x16_t *)&STACK[0x3B0];
  *(int64x2_t *)&STACK[0x340] = vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vaddq_s64((int64x2_t)vandq_s8((int8x16_t)vshrq_n_u64((uint64x2_t)v163, 7uLL), v81), v84), v85), (int64x2_t)vandq_s8(vorrq_s8((int8x16_t)vshlq_n_s64(v163, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v163, 8uLL)), *(int8x16_t *)&STACK[0x3B0]));
  int64x2_t v166 = vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vaddq_s64((int64x2_t)vandq_s8((int8x16_t)vshrq_n_u64(*(uint64x2_t *)&STACK[0x320], 7uLL), v81), v84), v85), (int64x2_t)vandq_s8(*(int8x16_t *)&STACK[0x350], v165));
  int8x16_t v167 = (int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vaddq_s64((int64x2_t)vandq_s8((int8x16_t)vshrq_n_u64(*(uint64x2_t *)&STACK[0x330], 7uLL), v81), v84), v85), (int64x2_t)vandq_s8(*(int8x16_t *)&STACK[0x360], v165)), v143);
  int8x16_t v168 = (int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vaddq_s64((int64x2_t)vandq_s8((int8x16_t)vshrq_n_u64(*(uint64x2_t *)&STACK[0x310], 7uLL), v81), v84), v85), (int64x2_t)vandq_s8(*(int8x16_t *)&STACK[0x370], v165)), v143);
  v164.i64[0] = vqtbl4q_s8(v207, a57).u64[0];
  v207.val[0] = veorq_s8(v168, v145);
  v207.val[1] = veorq_s8(v167, v145);
  int8x16_t v169 = v145;
  v207.val[2] = veorq_s8(v167, v64);
  v207.val[3] = veorq_s8(v168, v64);
  v207.val[0] = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v207.val[0], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v207.val[0], 8uLL)), (int64x2_t)v207.val[3]);
  v207.val[1] = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v207.val[1], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v207.val[1], 8uLL)), (int64x2_t)v207.val[2]);
  int8x16_t v170 = v148;
  v207.val[0] = veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v207.val[0], v148), (int64x2_t)vorrq_s8(v207.val[0], (int8x16_t)v69)), v69), v95);
  v207.val[1] = veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v207.val[1], v148), (int64x2_t)vorrq_s8(v207.val[1], (int8x16_t)v69)), v69), v95);
  int8x16_t v171 = v95;
  v207.val[2] = veorq_s8(v207.val[1], vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v207.val[2], 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v207.val[2], 0x3DuLL)));
  v207.val[3] = veorq_s8(v207.val[0], vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v207.val[3], 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v207.val[3], 0x3DuLL)));
  v207.val[1] = veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v207.val[1], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v207.val[1], 8uLL)), (int64x2_t)v207.val[2]), v152);
  v207.val[0] = veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v207.val[0], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v207.val[0], 8uLL)), (int64x2_t)v207.val[3]), v152);
  v207.val[3] = veorq_s8(v207.val[0], vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v207.val[3], 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v207.val[3], 0x3DuLL)));
  v207.val[2] = veorq_s8(v207.val[1], vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v207.val[2], 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v207.val[2], 0x3DuLL)));
  v207.val[0] = veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v207.val[0], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v207.val[0], 8uLL)), (int64x2_t)v207.val[3]), v155);
  v207.val[1] = veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v207.val[1], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v207.val[1], 8uLL)), (int64x2_t)v207.val[2]), v155);
  v207.val[2] = veorq_s8(v207.val[1], vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v207.val[2], 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v207.val[2], 0x3DuLL)));
  v207.val[3] = veorq_s8(v207.val[0], vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v207.val[3], 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v207.val[3], 0x3DuLL)));
  v207.val[0] = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v207.val[0], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v207.val[0], 8uLL)), (int64x2_t)v207.val[3]);
  v207.val[1] = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v207.val[1], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v207.val[1], 8uLL)), (int64x2_t)v207.val[2]);
  v207.val[1] = veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8((int8x16_t)vaddq_s64((int64x2_t)v207.val[1], (int64x2_t)v207.val[1]), v65), (int64x2_t)v207.val[1]), v66), v67);
  v207.val[0] = veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8((int8x16_t)vaddq_s64((int64x2_t)v207.val[0], (int64x2_t)v207.val[0]), v65), (int64x2_t)v207.val[0]), v66), v67);
  v207.val[3] = veorq_s8(v207.val[0], vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v207.val[3], 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v207.val[3], 0x3DuLL)));
  v207.val[2] = veorq_s8(v207.val[1], vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v207.val[2], 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v207.val[2], 0x3DuLL)));
  v207.val[0] = veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v207.val[0], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v207.val[0], 8uLL)), (int64x2_t)v207.val[3]), v68);
  v207.val[1] = veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v207.val[1], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v207.val[1], 8uLL)), (int64x2_t)v207.val[2]), v68);
  v207.val[2] = veorq_s8(v207.val[1], vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v207.val[2], 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v207.val[2], 0x3DuLL)));
  v207.val[3] = veorq_s8(v207.val[0], vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v207.val[3], 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v207.val[3], 0x3DuLL)));
  v207.val[1] = veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v207.val[1], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v207.val[1], 8uLL)), (int64x2_t)v207.val[2]), v70);
  v207.val[0] = veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v207.val[0], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v207.val[0], 8uLL)), (int64x2_t)v207.val[3]), v70);
  int8x16_t v172 = (int8x16_t)vaddq_s64(v166, v143);
  v207.val[1] = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v207.val[1], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v207.val[1], 8uLL)), (int64x2_t)veorq_s8(v207.val[1], vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v207.val[2], 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v207.val[2], 0x3DuLL))));
  v207.val[0] = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v207.val[0], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v207.val[0], 8uLL)), (int64x2_t)veorq_s8(v207.val[0], vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v207.val[3], 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v207.val[3], 0x3DuLL))));
  v207.val[3] = (int8x16_t)vshlq_u64((uint64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v207.val[0], a60), (int64x2_t)vorrq_s8(v207.val[0], (int8x16_t)a54)), a54), v63), (uint64x2_t)vnegq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(*(int64x2_t *)&STACK[0x310], 3uLL), v125)));
  v207.val[2] = (int8x16_t)vshlq_u64((uint64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v207.val[1], a60), (int64x2_t)vorrq_s8(v207.val[1], (int8x16_t)a54)), a54), v63), (uint64x2_t)vnegq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(*(int64x2_t *)&STACK[0x330], 3uLL), v125)));
  int64x2_t v173 = (int64x2_t)veorq_s8(v172, v169);
  int64x2_t v174 = (int64x2_t)veorq_s8(v172, v64);
  int8x16_t v175 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v173, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v173, 8uLL)), v174);
  int64x2_t v176 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v175, v170), (int64x2_t)vorrq_s8(v175, (int8x16_t)v69)), v69), v171);
  int64x2_t v177 = (int64x2_t)veorq_s8((int8x16_t)v176, vorrq_s8((int8x16_t)vshlq_n_s64(v174, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v174, 0x3DuLL)));
  int64x2_t v178 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v176, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v176, 8uLL)), v177), v152);
  int64x2_t v179 = (int64x2_t)veorq_s8((int8x16_t)v178, vorrq_s8((int8x16_t)vshlq_n_s64(v177, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v177, 0x3DuLL)));
  int64x2_t v180 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v178, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v178, 8uLL)), v179), v155);
  int64x2_t v181 = (int64x2_t)veorq_s8((int8x16_t)v180, vorrq_s8((int8x16_t)vshlq_n_s64(v179, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v179, 0x3DuLL)));
  int64x2_t v182 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v180, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v180, 8uLL)), v181);
  int64x2_t v183 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8((int8x16_t)vaddq_s64(v182, v182), v65), v182), v66), v67);
  int64x2_t v184 = (int64x2_t)veorq_s8((int8x16_t)v183, vorrq_s8((int8x16_t)vshlq_n_s64(v181, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v181, 0x3DuLL)));
  int64x2_t v185 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v183, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v183, 8uLL)), v184), v68);
  int64x2_t v186 = (int64x2_t)veorq_s8((int8x16_t)v185, vorrq_s8((int8x16_t)vshlq_n_s64(v184, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v184, 0x3DuLL)));
  int64x2_t v187 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v185, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v185, 8uLL)), v186), v70);
  int8x16_t v188 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v187, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v187, 8uLL)), (int64x2_t)veorq_s8((int8x16_t)v187, vorrq_s8((int8x16_t)vshlq_n_s64(v186, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v186, 0x3DuLL))));
  int8x16_t v189 = (int8x16_t)vaddq_s64(*(int64x2_t *)&STACK[0x340], v143);
  v207.val[1] = (int8x16_t)vshlq_u64((uint64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v188, a60), (int64x2_t)vorrq_s8(v188, (int8x16_t)a54)), a54), v63), (uint64x2_t)vnegq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(*(int64x2_t *)&STACK[0x320], 3uLL), v125)));
  int64x2_t v190 = (int64x2_t)veorq_s8(v189, v169);
  int64x2_t v191 = (int64x2_t)veorq_s8(v189, v64);
  int8x16_t v192 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v190, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v190, 8uLL)), v191);
  int64x2_t v193 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v192, v170), (int64x2_t)vorrq_s8(v192, (int8x16_t)v69)), v69), v171);
  int64x2_t v194 = (int64x2_t)veorq_s8((int8x16_t)v193, vorrq_s8((int8x16_t)vshlq_n_s64(v191, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v191, 0x3DuLL)));
  int64x2_t v195 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v193, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v193, 8uLL)), v194), v152);
  int64x2_t v196 = (int64x2_t)veorq_s8((int8x16_t)v195, vorrq_s8((int8x16_t)vshlq_n_s64(v194, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v194, 0x3DuLL)));
  int64x2_t v197 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v195, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v195, 8uLL)), v196), v155);
  int64x2_t v198 = (int64x2_t)veorq_s8((int8x16_t)v197, vorrq_s8((int8x16_t)vshlq_n_s64(v196, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v196, 0x3DuLL)));
  int64x2_t v199 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v197, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v197, 8uLL)), v198);
  int64x2_t v200 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8((int8x16_t)vaddq_s64(v199, v199), v65), v199), v66), v67);
  int64x2_t v201 = (int64x2_t)veorq_s8((int8x16_t)v200, vorrq_s8((int8x16_t)vshlq_n_s64(v198, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v198, 0x3DuLL)));
  int64x2_t v202 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v200, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v200, 8uLL)), v201), v68);
  int64x2_t v203 = (int64x2_t)veorq_s8((int8x16_t)v202, vorrq_s8((int8x16_t)vshlq_n_s64(v201, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v201, 0x3DuLL)));
  int64x2_t v204 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v202, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v202, 8uLL)), v203), v70);
  int8x16_t v205 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v204, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v204, 8uLL)), (int64x2_t)veorq_s8((int8x16_t)v204, vorrq_s8((int8x16_t)vshlq_n_s64(v203, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v203, 0x3DuLL))));
  v207.val[0] = (int8x16_t)vshlq_u64((uint64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v205, a60), (int64x2_t)vorrq_s8(v205, (int8x16_t)a54)), a54), v63), (uint64x2_t)vnegq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(v163, 3uLL), v125)));
  v164.i64[1] = vqtbl4q_s8(v207, a57).u64[0];
  v207.val[1].i64[0] = 0xDEDEDEDEDEDEDEDELL;
  v207.val[1].i64[1] = 0xDEDEDEDEDEDEDEDELL;
  v207.val[0] = vaddq_s8(*(int8x16_t *)(a1 - 15 + v71), v207.val[1]);
  v207.val[1] = vrev64q_s8((int8x16_t)v164);
  *(int8x16_t *)(v73 - 0x6BBE7547D3B34F1ELL) = veorq_s8(vextq_s8(v207.val[1], v207.val[1], 8uLL), v207.val[0]);
  return (*(uint64_t (**)(void))(STACK[0x258] + 8 * ((463 * (v60 == 16)) ^ v61)))();
}

uint64_t sub_10013DD04()
{
  if (v1) {
    BOOL v4 = v2 == 0;
  }
  else {
    BOOL v4 = 1;
  }
  int v6 = !v4 && v0 != 0;
  return (*(uint64_t (**)(void))(v3 + 8 * ((39 * v6) ^ 0x90Fu)))();
}

uint64_t sub_10013DD38()
{
  uint64_t v4 = (*(uint64_t (**)(void))(v3 + 8 * (v0 + 2199)))();
  return (*(uint64_t (**)(uint64_t))(STACK[0x258] + 8 * ((973 * (v1 == v2 + v0 - 2281 - 225)) ^ (v0 - 1375))))(v4);
}

uint64_t sub_10013DD80()
{
  return (*(uint64_t (**)(void))(v1 + 8 * (((LODWORD(STACK[0x694]) == v0 - 1618) * (v0 - 1408)) ^ v0)))();
}

uint64_t sub_10013DDB4@<X0>(uint64_t a1@<X1>, int a2@<W8>)
{
  int v4 = a2 - 1061;
  int v5 = ((a2 - 1061) ^ 0x530) + 2432;
  uint64_t v6 = *(void *)(v2 + 8);
  STACK[0x6A0] = v3;
  STACK[0x788] = 0;
  LODWORD(STACK[0x8AC]) = -509920215;
  STACK[0x580] = 0xEA2CB564011A6A5;
  return (*(uint64_t (**)(void))(a1 + 8 * (((v6 == 0x46197683F7D18950) * (v5 ^ 0x91B)) ^ v4)))();
}

uint64_t sub_10013DE28(int a1)
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((a1 + 1374) | (4 * (((v1 == v2) ^ (a1 + 94)) & 1)))))();
}

uint64_t sub_10013DE4C()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((*v0 == 0) | (2 * (*v0 == 0)) | v1)))();
}

uint64_t sub_10013DEA0(uint64_t a1)
{
  int v5 = 3 * (v1 ^ 0xCD0);
  *uint64_t v9 = a1;
  *char v8 = (v2 + (v1 ^ 0x9BF) - 1236) ^ v11;
  int v6 = (v5 - 523880130) & 0x1F39C7F1;
  unsigned int v15 = v5 + 366490169 * ((&v13 & 0xF9AF5D7 | ~(&v13 | 0xF9AF5D7)) ^ 0xE6CB5C6C) + 3191;
  uint64_t v14 = v12;
  (*(void (**)(uint64_t *))(v3 + 8 * (v5 + 3359)))(&v13);
  unsigned int v15 = v6
      + 366490169 * ((((2 * &v13) | 0x137E0EF4) - &v13 + 1983969414) ^ 0x9F11513E)
      + 2887;
  uint64_t v14 = v10;
  (*(void (**)(uint64_t *))(v3 + 8 * (v6 + 3055)))(&v13);
  return (v4 - 847203058);
}

uint64_t sub_10013DFEC()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((((LODWORD(STACK[0x2E4]) - 1648) ^ 0x379) * (v2 < v0)) ^ (LODWORD(STACK[0x2E4]) - 1648))))();
}

uint64_t sub_10013E020(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v6 + 8 * (((((a4 - 955) | 8) + ((a4 - 144) | 0x41) - 5534) * (v4 == v5)) ^ a4)))();
}

uint64_t sub_10013E064()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * (int)(((*(_DWORD *)(v0 + 4 * (v2 + v5 - 1)) == v3)
                                     * ((v1 + 1714037575) & 0x99D5D3FF ^ 0x1BA4)) ^ v1)))();
}

uint64_t sub_10013E0B0@<X0>(uint64_t a1@<X0>, int a2@<W4>, char a3@<W5>, int a4@<W6>, int a5@<W7>, int a6@<W8>)
{
  *(unsigned char *)(*(void *)(a1 + 8) + (a5 + a6)) = (a4 ^ v8) >> (a2 + 0x80 + a3 + 84);
  return (*(uint64_t (**)(void))(v6 + 8 * (((a2 - 1625) * (a5 - 1 == v7)) ^ a2)))();
}

uint64_t sub_10013E104(int a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2
                              + 8
                              * ((103 * (((a1 + 109) ^ (v2 == v3 + (a1 ^ 0x961) - 171)) & 1)) ^ (a1 - 2192))))();
}

uint64_t sub_10013E148(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5
                                                     + 8
                                                     * ((23
                                                       * (v2 + v1 + ((v4 + 538800497) ^ 0x2C13013Bu) < ((v4 + 46149556) & 0xFD3FCB1F) - 2837)) ^ (v4 - 351))))(a1, v3);
}

uint64_t sub_10013E1B4(void *a1)
{
  *a1 = 0;
  a1[1] = 0;
  STACK[0x638] = (unint64_t)(a1 + 0x8C32ED07EFA312ALL);
  STACK[0x830] = *(void *)(v2 + 8 * v1);
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((a1 + 0x8C32ED07EFA312ALL != (void *)0x46197683F7D18950)
                                * (((v1 + 1273) | 0x1A) ^ 0x50F ^ (((v1 + 1273) | 0x1A) - 1253))) ^ ((v1 + 1273) | 0x1A))))();
}

void sub_10013E1F8()
{
}

uint64_t sub_10013E304@<X0>(char a1@<W1>, char a2@<W2>, char a3@<W8>, int a4, char a5, __int16 a6, char a7, __int16 a8, char a9, __int16 a10, char a11, __int16 a12, char a13, int a14, int a15, char a16)
{
  LODWORD(STACK[0x6F4]) = v21 - 1312;
  int v24 = v21 + 824926652 + v18 + v19;
  int v25 = v22 + v18 - v20;
  LODWORD(STACK[0x700]) = v21 - 3029;
  unsigned int v26 = v20 - ((2 * v20 - 784907754) & ((v21 - 3029) ^ 0xEF43DC30)) - 532836862;
  char v27 = a3 - a2 + (v17 ^ a1) - 4 - 67 - ((2 * (a3 - a2 + (v17 ^ a1) - 4)) & 0x7A);
  int v28 = v22 + 2 * v20 + 221291357 + (v26 ^ 0x85E1308);
  unsigned int v29 = ((2 * v28) & 0x4F16FFDE) + (v28 ^ 0xA78B7FEF);
  unsigned int v30 = (v24 ^ 0xFF602B1C) + 1484029969 + v29 - ((2 * ((v24 ^ 0xFF602B1C) + 1484029969 + v29)) & 0xC74E946C) - 475575754;
  unsigned int v31 = (v26 ^ 0xEBF9593E ^ v30) + v25 - ((2 * ((v26 ^ 0xEBF9593E ^ v30) + v25) + 1653235370) & 0xD5D4DD80) - 1674600939;
  char v32 = a2 - ((2 * a2 - 30) & 0xC4) + 83;
  int v33 = v31 ^ v26;
  unsigned int v34 = ((2 * (v29 + 14683681 + (v33 ^ 0x9D4B8237))) & 0x75B2FE46)
      + ((v29 + 14683681 + (v33 ^ 0x9D4B8237)) ^ 0x3AD97F23);
  char v35 = a3 + 2 * a2 + (v32 ^ 0x9D) + 117;
  char v36 = ((2 * v35) & 0xE2) + (v35 ^ 0x71);
  int v37 = ((v34 - 987332387) ^ (v25 + 826617684))
      - 2033444816
      - ((2 * ((v34 - 987332387) ^ (v25 + 826617684))) & 0xD983060);
  char v38 = v36
      + ((v16 - 33 + (v17 ^ a1)) ^ 0x1C)
      - 113
      + 39
      - ((2 * (v36 + ((v16 - 33 + (v17 ^ a1)) ^ 0x1C) - 113)) & 0xCE)
      - 64;
  unsigned int v39 = ((2 * ((v37 ^ 0x86CC1830) + (v30 ^ 0x894D24F6 ^ v31))) & 0xBF73EF3E)
      + (((v37 ^ 0x86CC1830) + (v30 ^ 0x894D24F6 ^ v31)) ^ 0xDFB9F79F);
  v27 ^= 0xBDu;
  LOBYTE(v31) = v27 + (v32 ^ 0x7A ^ v38) + 1 - ((2 * (v27 + (v32 ^ 0x7A ^ v38) + 1)) & 0x72) + 57;
  char v40 = v31 ^ v32;
  char v41 = ((2 * (v36 - 97 + (v40 ^ 0x5B))) & 0xE8) + ((v36 - 97 + (v40 ^ 0x5B)) ^ 0xF4);
  char v42 = (v27 ^ (v41 + 12)) - 74 - ((2 * (v27 ^ (v41 + 12))) & 0x6C);
  char v43 = (v42 ^ 0xB6) + (v38 ^ 0xDE ^ v31) - ((2 * ((v42 ^ 0xB6) + (v38 ^ 0xDE ^ v31)) + 102) & 0x7C) + 113;
  int v44 = (v39 + 506256532) ^ (v34 - 1441064036);
  char v45 = v43 ^ 0x3E;
  int v46 = v33 ^ 0x24948669 ^ (v34 - 2 * ((v34 + 146339952) & 0x1D4B823F ^ v34 & 8) - 972784985);
  char v47 = v43 ^ (v41 - 53);
  unsigned int v48 = ((2 * ((v37 ^ 0x8C9001B2) + v39 + 541460577 + v44)) & 0xD7777FDA)
      + (((v37 ^ 0x8C9001B2) + v39 + 541460577 + v44) ^ 0xEBBBBFED);
  v34 -= 815880869;
  int v49 = (v48 - 2086556774) ^ v34;
  char v50 = (v42 ^ 0x34) + v45 + (v47 ^ 0x3E) + 84;
  char v51 = v50 + (v47 ^ 0x1A);
  char v52 = v50 + (v40 ^ 0x69 ^ (v41 - 5 + (~(2 * v41 + 62) | 0x49)));
  v34 ^= 0x770390Eu;
  int v53 = ((2 * (v34 + 623525687)) & 0x7FB9B7FE) + ((v34 + 623525687) ^ 0x3FDCDBFF);
  unsigned int v54 = (v49 ^ 0xE761E4A7 ^ (v48 - 2086556774 + v46 - ((2 * (v48 - 2086556774 + v46)) & 0xC023BB52) - 535700055)) + v53;
  char v55 = (v41 - 118) ^ 0xE;
  char v56 = (v55 ^ v50) - 122 - ((2 * (v55 ^ v50)) & 0xC);
  char v57 = (a16 & (2 * (v55 + 55))) + ((v55 + 55) ^ 0xBF);
  char v58 = ((v52 - 122 - ((2 * v52) & 0xC)) ^ v56) + v57;
  char v59 = v51 + v58 + 106 - 2 * (v58 + 106);
  int v60 = (a15 & (2 * (v34 + 1071438847 - v54))) + ((v34 + 1071438847 - v54) ^ 0x7FFBEFDF);
  int v61 = v53 + ((v53 - 1071438847) ^ 0x770390E ^ v49) - v60 + 360378193;
  int v62 = v61 + 491974324 - ((2 * v61) & 0x3AA5DD68);
  char v63 = v55 - v58;
  int v64 = v62 ^ ((v44 ^ 0x45BE4024)
             + v48
             - v54
             + 1193449797
             - ((2 * ((v44 ^ 0x45BE4024) + v48 - v54 + 701475473)) & 0x3AA5DD68));
  char v65 = v57 + ((v57 + 65) ^ 0x86 ^ v56) - v63 - 13;
  char v66 = v65 + 95 - ((2 * v65) & 0xBE);
  char v67 = (v59 - ((2 * v59 + 66) & 0xBE) + 0x80) ^ v66;
  unsigned int v68 = v60 - ((2 * v60 - 2017185850) & 0xA44634EC) + 369439321;
  int v69 = (v62 ^ 0x1D52EEB4) - ((2 * (v62 ^ 0x1D52EEB4) + 1039932470) & 0x33BBC420) - 119803861;
  unsigned int v70 = (v54 - 1779110231 + (v64 ^ 0x814EF8AC)) ^ v68;
  int v71 = (v64 ^ 0x7EB10753) - v60 + 1431817041 + (v70 ^ 0x2DDCE589);
  unsigned int v72 = ((2 * v71) & 0x97F7F7B2) + (v71 ^ 0xCBFBFBD9);
  char v73 = v63 - ((2 * v63 + 2) & 0x5C) - 81;
  char v74 = (v58 - 23 + (v67 ^ 0xAC)) ^ v73;
  char v75 = (v66 ^ 0x5F) - ((2 * (v66 ^ 0x5F) + 54) & 0x92) - 28;
  char v76 = (v67 ^ 0x53) - v63 - 77 + (v74 ^ 0xD1);
  LOBYTE(v53) = 2 * v76 + ~v76;
  int v77 = (v70 ^ 0x4BFEF866 ^ v69)
      + 872678439
      + v72
      - 1473607098
      - ((2 * ((v70 ^ 0x4BFEF866 ^ v69) + 872678439 + v72)) & 0x5055148C);
  LOBYTE(v60) = ((2 * ((v73 ^ 0x2E) + (v75 ^ 0x36) + 1)) & 0x7E) + (((v73 ^ 0x2E) + (v75 ^ 0x36) + 1) ^ 0xBF);
  unsigned int v78 = ((2 * (v77 ^ v70)) & 0xBFA536DE ^ 0xB4012040) + (v77 ^ v70 ^ 0x25DB0B5F);
  unsigned int v79 = v77 ^ 0xA82A8A46;
  LOBYTE(v77) = (v75 ^ 0xE7 ^ v74) + 1 + v53 - 87 - ((2 * ((v75 ^ 0xE7 ^ v74) + 1 + v53)) & 0x52);
  unsigned int v80 = (v68 ^ 0xD2231A76) + (v69 ^ 0x66221DEF) - 1607637870 + v78;
  unsigned int v81 = ((2 * v80) & 0xA6F3BBFC) + (v80 ^ 0xD379DDFE);
  LOBYTE(v69) = ((2 * (v77 ^ v74)) ^ 0xE) + (v77 ^ v74 ^ 0x78);
  int v82 = v72 - v81 + v78 - ((2 * (v72 - v81 + v78) + 30500384) & 0x83D1194) - 586728486;
  char v83 = v77 ^ 0xA9;
  LOBYTE(v77) = v69 + v60;
  LOBYTE(v60) = v53 - v60 - ((2 * (v53 - v60) + 52) & 0x2C) - 80;
  unsigned int v84 = v79 + v78 - v81 - 1678799741 + (v82 ^ 0x841E88CA);
  unsigned int v85 = v84 - 570037149 - ((2 * v84) & 0xBC0BD8C6);
  int v86 = v85 ^ (v78 - 1934488026);
  int v87 = v82 ^ 0x5A1B64A9 ^ v86;
  unsigned int v88 = (((v86 ^ 0xDE05EC63) + 1611192199) ^ 0xB1FDC77E)
      + 2126249404
      + ((2 * ((v86 ^ 0xDE05EC63) + 1611192199)) & 0x63FB8EFC);
  char v89 = v83 + (v60 ^ 0x96) + v69 - v77 + 51;
  unsigned int v90 = v87 - 436545167 + v88;
  unsigned int v91 = v81 + 335984585 + v88;
  LOBYTE(v69) = v89 ^ (v69 - 106);
  LOBYTE(v60) = v60 ^ 0x16 ^ v69;
  LOBYTE(v69) = (((v69 ^ 0x80) - 121) ^ 0xFE) - 64 + ((2 * ((v69 ^ 0x80) - 121)) & 0xFC);
  LOBYTE(v60) = v60 + v69;
  LOBYTE(v69) = v77 - 19 + v69;
  char v92 = (v89 ^ 0x80) - v69;
  LOBYTE(v60) = v92 + 36 - v60;
  unsigned int v93 = (v85 ^ 0xDE05EC63) - v90 - v91;
  unsigned int v94 = v93 + v90;
  int v95 = v93 + v90 - 470029269;
  LOBYTE(v90) = v69 - (v92 + 36) - ((2 * (v69 - (v92 + 36)) - 66) & 0xDC) + 77;
  LOBYTE(v69) = v92 - 109;
  int v96 = v91 - v94 - 2126817886 + ~(2 * ((v91 - v94 + 1828597899) & 0x143D251E ^ (v91 - v94 + 1642092891) & 8));
  unsigned int v97 = (v96 ^ 0x6BC2DAE9) - v81 + (v96 ^ 0x943D2516 ^ (v93 - 438051899)) + 1867541115;
  unsigned int v98 = v97 - ((2 * v97) & 0x9DEFA16E) + 1324863671;
  unsigned int v99 = ((2 * ((v95 ^ 0xDAE5085A) + (v98 ^ 0xB1082F48) + 1)) & 0x5BF7BC72)
      + (((v95 ^ 0xDAE5085A) + (v98 ^ 0xB1082F48) + 1) ^ 0x2DFBDE39);
  int v100 = (v98 ^ 0x65E04359)
       - v81
       + 1096059970
       + v99
       + 181832123
       - ((2 * ((v98 ^ 0x65E04359) - v81 + 1096059970 + v99)) & 0x15AD1376);
  LOBYTE(v60) = (v90 ^ 0x91) - v77 + ((v60 + 28) ^ 0x6E ^ v90) + 59;
  LOBYTE(v60) = v60 - ((2 * v60) & 0x24) + 18;
  LOBYTE(v69) = ((2 * ((v69 ^ 0x5A) + (v60 ^ 0xED) + 1)) & 0xE6) + (((v69 ^ 0x5A) + (v60 ^ 0xED) + 1) ^ 0xF3);
  unsigned int v101 = (v98 ^ 0x9A1FBCA6) + (v96 ^ 0x943D2516);
  int v102 = v100 ^ v96;
  int v103 = v102 ^ (v99 - 2066944749);
  LOBYTE(v77) = v69 - v77 + (v60 ^ 0xFC) - ((2 * (v69 - v77 + (v60 ^ 0xFC)) - 112) & 0x6E) + 127;
  LOBYTE(v60) = (v60 ^ 3) + (v90 ^ 0x6E);
  LOBYTE(v90) = v77 ^ v90;
  v102 ^= 0x9EEBACAD;
  unsigned int v104 = ((2 * (v101 + v102)) & 0xEF666DF6) + ((v101 + v102) ^ 0x77B336FB);
  int v105 = (v100 ^ 0xAD689BB) + (v103 ^ 0x61145352) + 1;
  LOBYTE(v69) = v90 ^ (v69 + 89);
  unsigned int v106 = ((2 * ((v100 ^ 0xF5297644) + v102 + 1)) & 0xEF39F5F8) + (((v100 ^ 0xF5297644) + v102 + 1) ^ 0xF79CFAFC);
  LOBYTE(v90) = v90 ^ 0x59;
  LOBYTE(v102) = (v60 ^ 0xFA) + ((2 * v60) & 0xF4) + 6 + v90;
  LOBYTE(v102) = ((2 * v102) & 0x2E) + (v102 ^ 0x97);
  LOBYTE(v90) = 2 * ((v77 ^ 0xC8) + v90 + 1) + ~((v77 ^ 0xC8) + v90 + 1);
  LOBYTE(v77) = (v77 ^ 0x37) + (v69 ^ 0xA6) + 1 - ((2 * ((v77 ^ 0x37) + (v69 ^ 0xA6) + 1)) & 0xDE) - 17;
  LOBYTE(v60) = v102 + v90;
  unsigned int v107 = v106 + v104;
  unsigned int v108 = (v103 ^ 0x9EEBACAD) + v104 - 2008233722 + ((2 * (v105 ^ 0x404BD274)) ^ 0xA2B41B6D);
  unsigned int v109 = v108 - 247869974 - ((2 * v108) & 0xE2739BD4);
  unsigned int v110 = (v105 ^ 0x404BD274) + 586392409 + v106;
  LOBYTE(v106) = (v69 ^ 0x59) + v102 + 106 + ((2 * v77) ^ 0x5B);
  LOBYTE(v106) = v106 - 94 - ((2 * v106) & 0x44);
  unsigned int v111 = ((2 * ((v105 ^ 0xEEEE203D) - 1421841314 + v107)) & 0xF3DFFBFC)
       + (((v105 ^ 0xEEEE203D) - 1421841314 + v107) ^ 0xF9EFFDFE);
  unsigned int v112 = ((2 * ((v110 ^ 0xA760D25F) + 101712386 + v111 + 1)) & 0xC4EE6F6E)
       + (((v110 ^ 0xA760D25F) + 101712386 + v111 + 1) ^ 0x627737B7);
  LOBYTE(v99) = ((2 * (v60 - 65 + (v77 ^ 0xD2))) & 0xF6) + ((v60 - 65 + (v77 ^ 0xD2)) ^ 0x7B);
  LOBYTE(v77) = ((2 * (v90 + 86 + (v77 ^ 0x9B))) & 0xF6 ^ 0x40) + ((v90 + 86 + (v77 ^ 0x9B)) ^ 0x5B);
  int v113 = (v110 ^ 0x589F2DA0) - v107 - ((2 * ((v110 ^ 0x589F2DA0) - v107) + 696198980) & 0x608327CE) - 2063521911;
  LOBYTE(v110) = v99 - v77;
  unsigned int v114 = v109 ^ 0xC1785E0D ^ v113;
  LOBYTE(v60) = v77 - v60 - 2 * ((v77 - v60 + 70) & 0x37 ^ (v77 - v60) & 1) + 124;
  unsigned int v115 = ((2 * ((v113 ^ 0x304193E7) - 1651980215 + v112)) & 0x95FCF78C)
       + (((v113 ^ 0x304193E7) - 1651980215 + v112) ^ 0xCAFE7BC6);
  unsigned int v116 = ((2 * (v111 + 101712386 + (v109 ^ 0xF139CDEA))) & 0xF7FBAE9A)
       + ((v111 + 101712386 + (v109 ^ 0xF139CDEA)) ^ 0x7BFDD74D);
  unsigned int v117 = v114 - v115;
  unsigned int v118 = v114 - v115 + v112;
  LOBYTE(v112) = v106 ^ 0x94 ^ v60;
  LOBYTE(v110) = v110 + 0x80;
  LOBYTE(v60) = ((2 * ((v60 ^ 0x36) + v110)) & 0x1E) + (((v60 ^ 0x36) + v110) ^ 0x8F);
  LOBYTE(v106) = ((2 * (v99 - 123 + (v106 ^ 0xA2))) & 0xC) + ((v99 - 123 + (v106 ^ 0xA2)) ^ 0x86);
  v23[956] = (v117 - 58) ^ 0x85;
  LOBYTE(v112) = v112 - 113 - v60 + 1 - ((2 * (v112 - 113 - v60)) & 2);
  unsigned int v119 = v118 + 1125334869 - ((2 * (v118 + 1125334869) + 1256720756) & 0xE4C0CD08) - 1747686594;
  v23[473] = v112 ^ 0xD2;
  LOBYTE(v110) = (v112 ^ 1) + v110 + 36 - ((2 * ((v112 ^ 1) + v110)) & 0x48);
  v23[529] = v60 - ((2 * v60 - 30) & 0xA6) + 68;
  LOBYTE(v112) = ((2 * (v110 ^ v112)) & 0xDE ^ 0x4A) + (v110 ^ v112 ^ 0xCA);
  LOBYTE(v60) = (v110 ^ 0xDB) + v60;
  unsigned int v120 = ((2 * (v119 ^ (v117 - 889291834))) & 0xD7BFDFFE ^ 0xC480CD08) + (v119 ^ (v117 - 889291834) ^ 0x99BF897B);
  v23[653] = (v118 + 15) ^ 0x85;
  v23[832] = v106 - ((2 * v106 - 12) & 0xA6) + 77;
  v23[47] = (v115 + 58) ^ 0x85;
  v23[350] = (v116 - 77) ^ 0x85;
  v23[170] = v110 ^ 0xF7;
  int v121 = v120
       + v116
       - (v118
        - 50824426)
       - ((2 * (v120 + v116 - (v118 - 50824426)) + 791796904) & 0x232D1494)
       - 919635810;
  unsigned int v122 = (v119 ^ 0x8D9F997B) + v115 + v120;
  LOBYTE(v110) = ((2 * ((v110 ^ 0x24) + 103)) & 0x7E) + (((v110 ^ 0x24) + 103) ^ 0xBF);
  LOBYTE(v111) = v60 + v112;
  int v123 = (a14 & (2 * ((v122 + 1226937404) ^ (v120 + 615142042))))
       + ((v122 + 1226937404) ^ (v120 + 615142042) ^ 0x5BFFFEBE);
  LOBYTE(v106) = v112 + v106 - v110 - ((2 * (v112 + v106 - v110) - 108) & 0x74) - 124;
  LOBYTE(v95) = v110 - v111;
  LOBYTE(v110) = v112 - ((2 * v112 + 84) & 0x1C) - 72;
  v23[709] = (v120 - 102) ^ 0x85;
  v23[406] = (v118 + 22 - v122 + 36) ^ 0x85;
  v23[585] = v106 ^ 0xE9;
  v23[226] = v110 ^ 0xDD;
  v23[103] = v121 ^ 0xCF;
  unsigned int v124 = ((2 * (v123 - 1629490209 + (v121 ^ 0xF16D3461) + 2791)) & 0xFE1FEBF6)
       + ((v123 - 1629490209 + (v121 ^ 0xF16D3461) + 2791) ^ 0xFF0FF5FB);
  LOBYTE(v119) = v118
               + 22
               - v122
               - ((a14 & (2 * ((v122 + 60) ^ (v120 - 102))))
                + ((v122 + 60) ^ (v120 - 102) ^ 0xBE))
               + 107;
  v23[765] = (v122 + 60) ^ 0x85;
  *(unsigned char *)(STACK[0x718] + 888) = v95 + (~(2 * v95 + 124) | 0x59) - 110;
  LOBYTE(v123) = ((v111 - 125) ^ 0xE ^ v110) + 6 - (a13 & (2 * ((v111 - 125) ^ 0xE ^ v110)));
  LOBYTE(v110) = ((2 * ((v121 ^ 0x9E) + 120 + v119)) & 0xBE) + (((v121 ^ 0x9E) + 120 + v119) ^ 0xDF);
  LOBYTE(v118) = ((2 * (v95 - 65 + (v123 ^ 0xF9))) & 0x7C) + ((v95 - 65 + (v123 ^ 0xF9)) ^ 0xBE);
  LOBYTE(v95) = ((2 * ((v123 ^ 6) + (v106 ^ 0x11))) & 0x7E) + (((v123 ^ 6) + (v106 ^ 0x11)) ^ 0xBF);
  *(unsigned char *)(STACK[0x718] + 282) = v111 - ((2 * v111 + 6) & 0xA6) + 86;
  LOBYTE(v111) = v111 - v118 + 65;
  int v125 = v121 ^ 0x62C16866;
  LOBYTE(v123) = ((2 * ((v106 ^ 0xEE) + 67 + v118)) & 0x56) + (((v106 ^ 0xEE) + 67 + v118) ^ a11);
  *(unsigned char *)(STACK[0x718] + 944) = v95 - ((2 * v95 - 126) & 0xA6) + 20;
  *(unsigned char *)(STACK[0x718] + 159) = (v110 + 33) ^ 0x85;
  LOBYTE(v119) = v122 - v119 - ((2 * (v122 - v119) - 118) & 0x78) + 1;
  unsigned int v126 = v124 - ((2 * v124 - 447574186) & 0xE7E97DF0) - 425851229;
  *(unsigned char *)(STACK[0x718] + 462) = (v124 - 127) ^ 0x85;
  *(unsigned char *)(STACK[0x718] + 821) = v121 ^ 0xE3;
  *(unsigned char *)(STACK[0x718] + 518) = v119 ^ 0xA9;
  *(unsigned char *)(STACK[0x718] + 338) = v106 ^ 0xC5;
  *(unsigned char *)(STACK[0x718] + 35) = v111 ^ 0xC3;
  LOBYTE(v121) = v95 - ((2 * v95 - 42) & 0x70) - 93;
  LOBYTE(v124) = v110 + v125;
  LOBYTE(v110) = v111 ^ 0x10;
  unsigned int v127 = ((2 * v126) & 0xB77E83CC ^ 0x33203C4) + (v126 ^ 0x5E66F804);
  *(unsigned char *)(STACK[0x718] + 641) = v123 - ((2 * v123 - 86) & 0xA6) + 40;
  unsigned int v128 = v127 + 2030400058 - ((2 * v127 + 1044477756) & 0xB3C9822C) + 2682;
  LOBYTE(v106) = (v106 ^ 0x16) - ((2 * (v106 ^ 0x16) - 42) & 0x72) + 36;
  LOBYTE(v124) = v124 + v127;
  LOBYTE(v118) = v124 + (v119 ^ 0x2C) + (v126 ^ 7);
  unsigned int v129 = (((2 * v128) & 0xA4004F8 ^ 0x2400028) + (v128 ^ 0xDCC4C36A)) ^ (v125 - 304105621);
  uint64_t v130 = (((v129 - 440993701 - ((2 * v129) & 0xCB6DF0B6)) ^ 0xE5B6F85B)
        - ((2 * ((v129 - 440993701 - ((2 * v129) & 0xCB6DF0B6)) ^ 0xE5B6F85B)) & 0x1A8)
        + 212) & 0x2B9;
  *(unsigned char *)(STACK[0x718] + 215) = v126 ^ 0x67;
  *(unsigned char *)(STACK[0x718] + (v130 ^ 0x229 | v130 ^ 0x90)) = v121 ^ 0xF1;
  LOBYTE(v123) = (v106 ^ 0xB9) + 85 + v123 + (v121 ^ 0x22);
  LOBYTE(v123) = ((2 * v123) & 0xDE) + (v123 ^ 0x6F);
  LOBYTE(v130) = v121 ^ v106;
  LOBYTE(v106) = 2 * (v124 - 90 + (v128 ^ 0x16)) + ((v124 - 90 + (v128 ^ 0x16)) ^ a9);
  *(unsigned char *)(STACK[0x718] + 877) = (v124 - 90) ^ 0x85;
  *(unsigned char *)(STACK[0x718] + 91) = v130 ^ 0x48;
  *(unsigned char *)(STACK[0x718] + 394) = v123 + (~(2 * v123 + 34) | 0x59) + 101;
  LOBYTE(v110) = v110 + (v121 ^ 0xC7) + v123 + 1;
  *(unsigned char *)(STACK[0x718] + 753) = v110 - ((2 * v110 + 34) & 0xA6) + 100;
  *(unsigned char *)(STACK[0x718] + 574) = (v129 + 91 - ((2 * v129) & 0xB6)) ^ 0xDE;
  LOBYTE(v119) = (v121 ^ 0x22) - 111;
  LOBYTE(v110) = v110 + v119 - 5 - ((2 * (v110 + v119)) & 0xF6);
  LOBYTE(v123) = v123 + v119 + 71 - ((2 * (v123 + v119)) & 0x8E);
  *(unsigned char *)(STACK[0x718] + 271) = (v118 - 89) ^ 0x85;
  LOBYTE(v119) = v118 + v127 + 90 - ((2 * (v118 + v127 + 90) - 50) & 0x90) - 81;
  LOBYTE(v118) = (v110 ^ 0xFB) + (v130 ^ 0x9B) - ((2 * ((v110 ^ 0xFB) + (v130 ^ 0x9B)) - 58) & 0x34) - 3;
  LOBYTE(v129) = (v119 ^ 0x48)
               - 29
               + ((v129 + 91 - ((2 * v129) & 0xB6)) ^ 0x5B)
               - ((2 * ((v119 ^ 0x48) - 29 + ((v129 + 91 - ((2 * v129) & 0xB6)) ^ 0x5B))) & 0x78)
               - 68;
  LOBYTE(v119) = v119 ^ v126;
  LOBYTE(v121) = ~(_BYTE)v121;
  LOBYTE(v110) = v110 ^ v121;
  LOBYTE(v95) = v123 ^ v121;
  *(unsigned char *)(STACK[0x718] + 450) = v123 ^ v121 ^ 0x55;
  *(unsigned char *)(STACK[0x718] + 147) = (v123 ^ 0x47) + (~(2 * (v123 ^ 0x47) - 6) | 0x59) + 81;
  LOBYTE(v127) = (v127 + 42 + v124 - 106) ^ v126;
  *(unsigned char *)(STACK[0x718] + 933) = v127 ^ 0x7B;
  *(unsigned char *)(STACK[0x718] + 630) = (v106 - 6) ^ 0x85;
  LOBYTE(v126) = v123 ^ 0x47;
  *(unsigned char *)(STACK[0x718] + 506) = v110 ^ 0xE9;
  *(unsigned char *)(STACK[0x718] + 327) = v129 ^ 0x39;
  *(unsigned char *)(STACK[0x718] + 809) = v118 ^ 0xC9;
  *(unsigned char *)(STACK[0x718] + 24) = v119 ^ 0x33;
  LOBYTE(v123) = ((2 * ((v110 ^ 0x3A) + 83)) & 0x7A) + (((v110 ^ 0x3A) + 83) ^ 0xBD);
  LOBYTE(v124) = v118 ^ 0x25;
  LOBYTE(v110) = v129 ^ 0x83;
  LOBYTE(v129) = (a7 & (2 * ((v119 ^ 0xB6) + 83))) + ~((v119 ^ 0xB6) + 83);
  LOBYTE(v118) = (v118 ^ 0x25) - v123;
  LOBYTE(v121) = v106 - (v110 - v129);
  LOBYTE(v106) = v126 - v118 + 120;
  LOBYTE(v126) = v123 - v106;
  *(unsigned char *)(STACK[0x718] + 865) = v106 - ((2 * v106 + 18) & 0xA6) - 36;
  LOBYTE(v130) = v129 - (v121 + 122);
  LOBYTE(v95) = (v95 ^ 0x49) - 67 + v118 - ((2 * ((v95 ^ 0x49) - 67 + v118)) & 2) + 1;
  LOBYTE(v129) = ((2 * v127) ^ 0x62) + (v127 ^ 0xCE) + v110 - v129;
  *(unsigned char *)(STACK[0x718] + 686) = v129 ^ 0x85;
  *(unsigned char *)(STACK[0x718] + 203) = v95 ^ 0xD2;
  LOBYTE(v127) = v110 - (v121 + 122) - 25;
  *(unsigned char *)(STACK[0x718] + 562) = v118 - ((2 * v118 + 122) & 0xA6) - 112;
  *(unsigned char *)(STACK[0x718] + 259) = v123 - v106 - ((2 * (v123 - v106) + 116) & 0xA6) + 13;
  LOBYTE(v128) = v121 + 122 - v130;
  *(unsigned char *)(STACK[0x718] + 742) = (v130 - 65) ^ 0x85;
  *(unsigned char *)(STACK[0x718] + 80) = (v110 - ((a7 & (2 * ((v119 ^ 0xB6) + 83))) + ~((v119 ^ 0xB6) + 83)) - 1) ^ 0x85;
  LOBYTE(v119) = v130 - ((2 * v130 + 28) & 0x3E);
  LOBYTE(v118) = v95 ^ 0xB9;
  LOBYTE(v95) = v124 - v106 - 119;
  LOBYTE(v124) = v95 - ((2 * v95 - 100) & 0x50) + 118;
  *(unsigned char *)(STACK[0x718] + 136) = (v128 + 57) ^ 0x85;
  *(unsigned char *)(STACK[0x718] + 315) = v124 ^ 0xFB;
  LOBYTE(v130) = v127 - ((2 * v127 + 110) & 0x44) - 39;
  *(unsigned char *)(STACK[0x718] + 383) = (v121 - 68) ^ 0x85;
  char v131 = v119 - 83;
  LOBYTE(v121) = (v129 ^ 0xB8) - 93;
  LOBYTE(v118) = v118 - ((2 * v118 + 70) & 0xF6) + 30;
  *(unsigned char *)(STACK[0x718] + 439) = v121 ^ 0x85;
  LOBYTE(v106) = v106 - v126 - ((2 * (v106 - v126) + 10) & 0xD4) + 111;
  char v132 = v126 - ((2 * v126 + 18) & 2) + 10;
  *(unsigned char *)(STACK[0x718] + 12) = v132 ^ 0x52;
  *(unsigned char *)(STACK[0x718] + 921) = v118 ^ 0xA8;
  *(unsigned char *)(STACK[0x718] + 618) = v106 ^ 0x39;
  *(unsigned char *)(STACK[0x718] + 495) = (v119 - 83) ^ 0x1A;
  LOBYTE(v129) = v127 - ((2 * v127 - 72) & 0x9E) - 85;
  LOBYTE(v123) = (v128 + 57) ^ v121;
  LOBYTE(v128) = (v121 ^ 0x93) + (v129 ^ 0x30) + 100 - ((2 * ((v121 ^ 0x93) + (v129 ^ 0x30) + 1)) & 0xC6);
  LOBYTE(v119) = v118 ^ v106;
  LOBYTE(v126) = v95 - ((2 * v95 - 26) & 0x70) - 85;
  LOBYTE(v106) = v131 ^ 0xBD ^ v130;
  *(unsigned char *)(STACK[0x718] + 798) = v130 ^ 0xA7;
  LOBYTE(v95) = (v126 ^ 0xC7) + (v118 ^ 0xE8) + 86 - ((2 * ((v126 ^ 0xC7) + (v118 ^ 0xE8) + 1)) & 0xAA);
  *(unsigned char *)(STACK[0x718] + 674) = v95 ^ 0x86;
  LOBYTE(v130) = v106 - ((2 * v106 + 42) & 0x64) + 71;
  *(unsigned char *)(STACK[0x718] + 854) = ((v129 ^ 0x1D) + (v123 ^ 0x93)) ^ 0x85;
  *(unsigned char *)(STACK[0x718] + 371) = (v119 ^ 2) + (v126 ^ 0xEA) - ((2 * ((v119 ^ 2) + (v126 ^ 0xEA))) & 0xA6) - 45;
  LOBYTE(v127) = v132 ^ 0xA9 ^ v124;
  *(unsigned char *)(STACK[0x718] + 730) = (v127 - ((2 * v127 + 42) & 0xB8) + 113) ^ 0xF;
  *(unsigned char *)(STACK[0x718] + 192) = v128 ^ 0xE6;
  *(unsigned char *)(STACK[0x718] + 551) = v129 ^ 0x98;
  *(unsigned char *)(STACK[0x718] + 68) = v126 ^ 0x39;
  LOBYTE(v129) = ((2 * ((v128 ^ 0x63) + (v129 ^ 0x1D))) & 0xFC) + (((v128 ^ 0x63) + (v129 ^ 0x1D)) ^ 0x7E);
  *(unsigned char *)(STACK[0x718] + 2memset((void *)(STACK[0x7D8] + 8), 91, 48) = v130 ^ 0x37;
  LOBYTE(v118) = (v130 ^ v128 ^ 0xD1) + 83 + v129 + v106 - 81 - ((2 * ((v130 ^ v128 ^ 0xD1) + 83 + v129 + v106)) & 0x5E);
  LOBYTE(v130) = ((2 * ((v95 ^ 0x55) + (v126 ^ 0xEA))) & 0xF4) + (((v95 ^ 0x55) + (v126 ^ 0xEA)) ^ 0xFA);
  LOBYTE(v126) = v130 + v127;
  LOBYTE(v95) = v130 + v127 + ((v127 - ((2 * v127 + 42) & 0xB8) + 113) ^ 0x89 ^ v95);
  *(unsigned char *)(STACK[0x718] + 910) = v118 ^ 0x2A;
  LOBYTE(v119) = 2 * ((v119 ^ 2) + 60) + ~((v119 ^ 2) + 60);
  *(unsigned char *)(STACK[0x718] + 427) = v95 - ((2 * v95 - 82) & 0xA6) - 86;
  LOBYTE(v123) = v123 ^ 0x93;
  *(unsigned char *)(STACK[0x718] + 607) = (v123 + 60) ^ 0x85;
  *(unsigned char *)(STACK[0x718] + 304) = (v129 - 27) ^ 0x85;
  *(unsigned char *)(STACK[0x718] + 786) = v130 - ((2 * v130 - 46) & 0xA6) + 60;
  char v133 = (v118 ^ 0x50) + v123;
  *(unsigned char *)(STACK[0x718] + 483) = v130 + v127 - ((2 * (v130 + v127) - 82) & 0xA6) - 86;
  LOBYTE(v123) = v133 - v106;
  *(unsigned char *)(STACK[0x718] + 1) = (v129 + v106 + 83) ^ 0x85;
  LOBYTE(v106) = -12 - v106 - ((-106 - 2 * v106) & 0x52);
  *(unsigned char *)(STACK[0x718] + 124) = v119 - ((2 * v119 + 2) & 0xA6) - 44;
  LOBYTE(v118) = (-(((v130 + 105) | (-106 - v130)) & 0xD6) - 91 + v123) ^ v118;
  LOBYTE(v110) = v119 - v127 - v95;
  LOBYTE(v119) = (v110 - 68) ^ (v95 - 41);
  *(unsigned char *)(STACK[0x718] + 360) = (v123 - 49) ^ 0x85;
  LOBYTE(v127) = 105 - v127 - ((-106 - 2 * v127) & 0x3C);
  *(unsigned char *)(STACK[0x718] + 539) = v127 ^ 0xCD;
  *(unsigned char *)(STACK[0x718] + 842) = v110 + 7 - ((2 * (v110 + 7) + 106) & 0xA6) - 120;
  LOBYTE(v128) = v123 - ((2 * v123 + 44) & 0x32) + 47;
  LOBYTE(v121) = ((2 * ((v118 ^ 4) - 123 + (v128 ^ 0x66))) & 0x6E) + (((v118 ^ 4) - 123 + (v128 ^ 0x66)) ^ 0xB7);
  *(unsigned char *)(STACK[0x718] + 236) = (v110 + 7 + v126 - ((2 * (v110 + 7 + v126) - 122) & 0x18) - 49) ^ 0x5F;
  *(unsigned char *)(STACK[0x718] + 57) = v106 ^ 0x2C;
  LOBYTE(v124) = v133 + v129 - ((2 * (v133 + v129) - 78) & 0xE) - 32;
  *(unsigned char *)(STACK[0x718] + 663) = v118 ^ 0x81;
  LOBYTE(v95) = (v110 + 7 + v126 - ((2 * (v110 + 7 + v126) - 122) & 0x18) - 49) ^ v127;
  LOBYTE(v127) = (v124 ^ 7) - v123 - 10 + v121 + 32 - ((2 * ((v124 ^ 7) - v123 - 10 + v121)) & 0x40);
  *(unsigned char *)(STACK[0x718] + 180) = v119 ^ 0x78;
  LOBYTE(v106) = v124 ^ v106 ^ (v121 - ((2 * v121 - 74) & 0x52) - 124);
  LOBYTE(v129) = v110 - ((2 * (v110 + 7) - 8) & 0xB2) + 92;
  LOBYTE(v123) = ((2 * ((v119 ^ 0xAB) + (v129 ^ 0x26) + 1)) & 0xFC) + (((v119 ^ 0xAB) + (v129 ^ 0x26) + 1) ^ 0x7E);
  LOBYTE(v126) = v123 + v126 - ((2 * (v123 + v126) + 32) & 0xDA) - 3;
  LOBYTE(v119) = v106 ^ v127;
  *(unsigned char *)(STACK[0x718] + 898) = (v123 - 2 * ((v123 - 104) & 0x8F ^ v123 & 4) + 35) ^ 0x58;
  LOBYTE(v129) = v126 ^ v129;
  *(unsigned char *)(STACK[0x718] + 595) = v129 ^ 0xE7;
  *(unsigned char *)(STACK[0x718] + 719) = v124 ^ 0x82;
  *(unsigned char *)(STACK[0x718] + 416) = (v121 - 37) ^ 0x85;
  *(unsigned char *)(STACK[0x718] + 775) = v106 ^ 0x82;
  *(unsigned char *)(STACK[0x718] + 292) = v95 ^ (v123 - 2 * ((v123 - 104) & 0x8F ^ v123 & 4) + 35) ^ 0xCA;
  LOBYTE(v106) = (v127 ^ v128 ^ 0x31) + (v106 ^ v127 ^ 0xD8) + 1;
  LOBYTE(v106) = ((2 * v106) & 0x6E) + (v106 ^ 0xB7);
  LOBYTE(v124) = ((2 * ((v119 ^ 0x27) + 102)) & 0x6E) + (((v119 ^ 0x27) + 102) ^ 0xB7);
  *(unsigned char *)(STACK[0x718] + 113) = v127 ^ v128 ^ 0x3C;
  *(unsigned char *)(STACK[0x718] + 954) = v126 ^ 0x3E;
  LOBYTE(v110) = v95 ^ (v123 - 2 * ((v123 - 104) & 0x8F ^ v123 & 4) + 35) ^ v126;
  LOBYTE(v119) = v124 + v121;
  LOBYTE(v121) = 2 * ((v129 ^ 0xBC) + (v110 ^ 0xB) + 1) + ~((v129 ^ 0xBC) + (v110 ^ 0xB) + 1);
  LOBYTE(v129) = (v127 ^ 0x20) - ((2 * (v127 ^ 0x20) + 124) & 0x46) - 31;
  *(unsigned char *)(STACK[0x718] + 3memset((void *)(STACK[0x7D8] + 8), 91, 48) = v121 + (~(2 * v121 + 2) | 0x59) - 43;
  LOBYTE(v118) = ((2 * ((v110 ^ 0xF4) + 102)) & 0xBC) + (((v110 ^ 0xF4) + 102) ^ 0x5E);
  LOBYTE(v123) = v118 + v123 - ((2 * (v118 + v123) + 50) & 0x70) + 81;
  LOBYTE(v110) = v119 + 3;
  *(unsigned char *)(STACK[0x718] + 651) = v123 ^ 0xEB;
  *(unsigned char *)(STACK[0x718] + 472) = v127 ^ 0xA5;
  LOBYTE(v127) = (v126 ^ 0xED) - 2 * (((v126 ^ 0xED) + 62) & 0xDB ^ (v126 ^ 0xED) & 1) + 24;
  *(unsigned char *)(STACK[0x718] + 169) = (v119 + 3) ^ 0x85;
  *(unsigned char *)(STACK[0x718] + 707) = v127 ^ 9;
  *(unsigned char *)(STACK[0x718] + 45) = v118 - ((2 * v118 + 68) & 0xA6) + 117;
  LOBYTE(v119) = ((2 * (v123 ^ v127)) & 0xE4 ^ 0xC4) + (v123 ^ v127 ^ 0x10);
  *(unsigned char *)(STACK[0x718] + 831) = (v106 + 73) ^ 0x85;
  *(unsigned char *)(STACK[0x718] + 528) = (v124 + 73) ^ 0x85;
  LOBYTE(v123) = v129 ^ 0xA3;
  LOBYTE(v126) = v129 ^ 0xA3 ^ v110;
  LOBYTE(v110) = ((2 * (v124 + 73 + v126)) & 0x2A) + ((v124 + 73 + v126) ^ 0x95);
  LOBYTE(v126) = (a5 & (2 * (v126 - v106 + 73))) + ((v126 - v106 + 73) ^ 0xEF);
  LOBYTE(v118) = v119 + v118;
  LOBYTE(v128) = (v129 ^ 0xA3) - v110;
  *(unsigned char *)(STACK[0x718] + 225) = v129 ^ 0x26;
  LOBYTE(v129) = (v127 ^ 0xDA) + 80;
  LOBYTE(v119) = v119 - v121 - ((2 * (v119 - v121) + 62) & 0x66) + 82;
  LOBYTE(v127) = v106 - v110;
  *(unsigned char *)(STACK[0x718] + 404) = v119 ^ 0x60;
  int64x2_t v134 = (unsigned char *)STACK[0x718];
  LOBYTE(v106) = v106 - v110 + 48;
  LOBYTE(v121) = v121 - v118;
  LOBYTE(v124) = ((v123 + 110) & 0x7C) + ((v123 + 110) & 0x7C ^ 0x7C) + v110 + v126;
  v134[460] = v129 - v118 + (~(2 * (v129 - v118) - 120) | 0x59) + 24;
  v134[584] = (v127 + 34) ^ 0x85;
  v134[101] = v121 - ((2 * v121 + 42) & 0xA6) + 104;
  v134[887] = (v126 + 17) ^ 0x85;
  v134[943] = (v128 - 39) ^ 0x85;
  v134[763] = v118 - ((2 * v118 - 76) & 0xA6) - 83;
  LOBYTE(v95) = ((2 * v119) & 0x3A ^ 0x22) + (v119 ^ 0x2E);
  LOBYTE(v118) = v118 - 38 + v95;
  v134[281] = (v110 - 107) ^ 0x85;
  LOBYTE(v123) = v123 + 68 + v124 + 50 - ((2 * (v123 + 68 + v124 + 50) + 20) & 0x4E) - 79;
  LOBYTE(v110) = v118 + v129 - ((2 * (v118 + v129) - 46) & 0x2C) - 1;
  v134[516] = v118 - ((2 * v118 - 106) & 0xA6) - 98;
  LOBYTE(v121) = v121 + 39 + (v119 ^ 0x4C);
  LOBYTE(v129) = v121 + v95;
  v134[157] = v95 - ((2 * v95 - 42) & 0xA6) - 66;
  v134[640] = (v126 - 103) ^ 0x85;
  LOBYTE(v119) = v118 - (v121 + v95);
  LOBYTE(v121) = v118 - v121 - 114;
  LOBYTE(v118) = v124 + 50 - v106;
  v134[213] = v110 ^ 0xC5;
  LOBYTE(v110) = ((2 * v110) & 0x66 ^ 4) + (v110 ^ 0xB9);
  v134[337] = (v127 - 86) ^ 0x85;
  LOBYTE(v127) = v119 - v110 - ((2 * (v119 - v110) + 72) & 0xA) + 41;
  LOBYTE(v110) = v110 + v121 - ((2 * (v110 + v121) + 54) & 0x1A) + 40;
  v134[819] = v129 - ((2 * v129 - 76) & 0xA6) + 45;
  v134[34] = (v124 - 110) ^ 0x85;
  LOBYTE(v126) = v118 + v126;
  v134[696] = v123 ^ 0xA2;
  LOBYTE(v119) = (v123 ^ 0x44) + v118 - ((2 * ((v123 ^ 0x44) + v118) - 50) & 0x36) - 126;
  LOBYTE(v123) = v126 + 127 + (v123 ^ 0xBB) + 44 - ((2 * (v126 + 127 + (v123 ^ 0xBB))) & 0x58);
  LOBYTE(v118) = (v123 ^ 0x2C) + v106 - ((2 * ((v123 ^ 0x2C) + v106) - 116) & 0x92) + 15;
  LOBYTE(v128) = v129 + 38 + (v110 ^ 0x8D) - ((2 * (v129 + 38 + (v110 ^ 0x8D))) & 0xFC) - 2;
  v134[393] = (v126 - 20) ^ 0x85;
  v134[875] = v121 - ((2 * v121 + 118) & 0xA6) + 14;
  LOBYTE(v129) = v126 - 20 + (v119 ^ 0x9B) + 105 - ((2 * (v126 - 20 + (v119 ^ 0x9B))) & 0xD2);
  v134[269] = v127 ^ 0x56;
  v134[90] = v118 ^ 0x4C;
  v134[931] = v110 ^ 0x5E;
  LOBYTE(v95) = v110 ^ 0x73 ^ v128;
  v134[752] = v119 ^ 0x1E;
  LOBYTE(v126) = ((2 * v119) & 0x52 ^ 0x12) + (v119 ^ 0x66);
  LOBYTE(v110) = v121 + 59 + (v127 ^ 0x85) - 29 - ((2 * (v121 + 59 + (v127 ^ 0x85))) & 0xC6);
  v134[449] = v123 ^ 0xA9;
  LOBYTE(v106) = (v123 ^ 0xE5 ^ v118) - v126;
  v134[572] = v128 ^ 0x2D;
  v134[146] = (((2 * ((v129 ^ 0x69) - v126 + 41)) & 0xCE) + (((v129 ^ 0x69) - v126 + 41) ^ 0xE7) + 25) ^ 0x85;
  LOBYTE(v121) = ((2 * v127) & 0xFA ^ 0xA2) + (v127 ^ 0x2C);
  v134[325] = v128 ^ v110 ^ 0x33;
  LOBYTE(v110) = 2 * ((v110 ^ 0xE3) - v121 + 125) + ~((v110 ^ 0xE3) - v121 + 125);
  v134[628] = v110 - ((2 * v110 + 2) & 0xA6) - 44;
  v134[684] = v95 - v121 - 2 * ((v95 - v121 + 125) & 0x57 ^ (v95 - v121 + 5) & 4) + 80;
  v134[808] = v129 ^ v118 ^ 0xD8;
  unsigned int v135 = LODWORD(STACK[0x6F0]) - 1056257623;
  unsigned int v136 = LODWORD(STACK[0x5D4]) + 827374263;
  BOOL v137 = v135 < 0x14F03696;
  BOOL v138 = v135 > v136;
  v134[22] = v121 - ((2 * v121 + 90) & 0xA6);
  v134[505] = (v126 - 127) ^ 0x85;
  int v139 = (v136 < 0x14F03696) ^ v137;
  v134[202] = (v106 + 41) ^ 0x85;
  uint64_t v140 = v138;
  if (v139) {
    int v141 = v137;
  }
  else {
    int v141 = v140;
  }
  return (*(uint64_t (**)(uint64_t))(STACK[0x6F8] + 8 * (v21 ^ (8 * (v141 ^ 1)))))(v140);
}

uint64_t sub_100141290(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v7 + 8 * (((v6 + ((v5 + 1074334718) | 0xC060680) + 277) * (v4 == a4)) ^ v5)))();
}

void sub_1001412D0()
{
}

void sub_100141358(uint64_t a1)
{
  int v1 = 1761959447 * (((a1 | 0x8DD98CF7) - a1 + (a1 & 0x72267308)) ^ 0x2C7E4D33);
  __asm { BRAA            X9, X17 }
}

uint64_t sub_1001413F0()
{
  return sub_10014140C();
}

uint64_t sub_10014140C(uint64_t a1)
{
  *int v4 = a1;
  *uint64_t v3 = v2;
  int v7 = (v1 + 2150) ^ 0xBEB;
  uint64_t v12 = v9;
  int v13 = v1
      + 2150
      + ((&v11 - 1746837395 - 2 * ((unint64_t)&v11 & 0x97E1606D)) ^ 0x814F3629) * v6
      + 1077;
  (*(void (**)(uint64_t *))(v5 + 8 * ((v1 + 2150) ^ 0x1F23)))(&v11);
  uint64_t v12 = v10;
  int v13 = v7 + ((&v11 + 368902924 - 2 * ((unint64_t)&v11 & 0x15FD030C)) ^ 0x3535548) * v6 + 2832;
  (*(void (**)(uint64_t *))(v5 + 8 * (v7 + 3000)))(&v11);
  return 0;
}

uint64_t sub_10014151C@<X0>(unsigned int a1@<W8>)
{
  *(unsigned char *)(*v1 + (v2 + v6)) = *(unsigned char *)(*v1 + a1 + v6 + v3);
  return (*(uint64_t (**)(void))(v7 + 8 * (((v6 - 1 == v4) * v5) ^ a1)))();
}

uint64_t sub_100141554(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36)
{
  HIDWORD(v39) = HIDWORD(a17) - 1712968342;
  LODWORD(v39) = -1239510566;
  v36.i64[0] = 0x6060606060606060;
  v36.i64[1] = 0x6060606060606060;
  LODWORD(a27) = 1;
  HIDWORD(a21) = -1387020433;
  LODWORD(a26) = 66;
  HIDWORD(a20) = 3281;
  return sub_10012B3E4(3281, 1207959552, 3055454020, 3093736771, 1330, v36, a6, 5545, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18,
           a6,
           a20,
           a21,
           v39,
           a23,
           a24,
           a25,
           a26,
           a27,
           v38 - 16,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36);
}

uint64_t sub_10014156C@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,int a43)
{
  unint64_t v44 = STACK[0x9B0] + (a1 ^ v43) - 0x39BC429AFD07A868;
  BOOL v45 = v44 < 0x26A63686;
  BOOL v46 = v44 > STACK[0x9A8] + 648427142;
  if (STACK[0x9A8] > 0xFFFFFFFFD959C979 != v45) {
    BOOL v46 = v45;
  }
  return (*(uint64_t (**)(void))(STACK[0x258] + 8 * ((241 * v46) ^ (a43 + 1953))))();
}

uint64_t sub_100141600(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v7 = v4 - 1874;
  int v8 = v5 - ((2 * v5 - 946915550) & (((v7 - 760764806) & 0x2D585EF7) - 855882469)) - 901397094;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v6
                                                                                + 8
                                                                                * ((50
                                                                                  * (((2 * v8) & 0xF3FFD7EC ^ 0xC0FC5400)
                                                                                   + (v8 ^ 0x1F81C1FF)
                                                                                   + 1073569472 != 972901046)) ^ (v7 + 1811))))(a1, a2, a3, a4, 972901046);
}

uint64_t sub_1001416C0()
{
  return (*(uint64_t (**)(void))(v2 + 8
                                   * ((((3 * (v1 ^ 0x79F) - 1063075228) & 0x3F5D3CBF ^ 0x8CA) * (*v0 == 0)) ^ v1)))();
}

uint64_t sub_10014171C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, _DWORD *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, unsigned int a14)
{
  *a4 = 0;
  *a5 = 0;
  a14 = 31090337
      * (((&a13 | 0xDA10686D) - &a13 + (&a13 & 0x25EF9790)) ^ 0x1D910824)
      + 1655392376;
  uint64_t v16 = (*(uint64_t (**)(int *))(v14 + 37600))(&a13);
  return (*(uint64_t (**)(uint64_t))(v14 + 8 * ((3434 * (a13 == 847203058)) ^ v15)))(v16);
}

uint64_t sub_1001417C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,int a50)
{
  return (*(uint64_t (**)(void))(v51 + 8 * ((97 * (v50 == ((a50 + 1694) | 0x95) + 847198709)) ^ (a50 - 2070))))();
}

uint64_t sub_100141804(int a1, uint64_t a2, unsigned int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19, uint64_t a20,int a21,int a22,unsigned int a23,unsigned int a24)
{
  if (a24 < a23 != a19 + 1801732517 < (a22 & 0x52AC42DD ^ a3) + a1) {
    int v25 = a19 + 1801732517 < (a22 & 0x52AC42DD ^ a3) + a1;
  }
  else {
    int v25 = a19 + 1801732517 > a24;
  }
  return (*(uint64_t (**)(void))(v24 + 8 * (((16 * v25) | (v25 << 6)) ^ 0x897)))();
}

uint64_t sub_100141810@<X0>(int a1@<W8>)
{
  int v4 = *(uint64_t (**)(void))(v3
                           + 8
                           * ((((((*(uint64_t (**)(void))(v3 + 8 * (a1 ^ 0x38E)))(v1 ^ v2) == 0) ^ (17 * (a1 ^ 0xC9))) & 1)
                             * (((a1 ^ 0x1FC8) - 2666) ^ 0x4E8)) ^ a1 ^ 0x1FC8));
  return v4();
}

uint64_t sub_100141874@<X0>(int a1@<W2>, uint64_t a2@<X8>, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v15 = (v7 - 805) | 0x96;
  uint64_t v16 = 4 * (v10 + v8);
  int v17 = v11 + v13 + (*(_DWORD *)(*(void *)(a5 - 0x49230D716B37ADFCLL) + v16) ^ v12) + 725;
  *(_DWORD *)(*(void *)(a2 - 0x49230D716B37ADFCLL) + v16) = v17 + v12 - ((v9 + v15 - 93 - 1946) & (2 * v17));
  int v18 = v10 + 1 + v5;
  BOOL v20 = v18 > a1 + 2694 || v18 < v6;
  return (*(uint64_t (**)(void))(v14 + 8 * ((3441 * v20) ^ v15)))();
}

uint64_t sub_100141948(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v7 + 8 * ((5492 * (v5 + 1 == v6 + 16)) ^ a5)))();
}

uint64_t sub_100141A20()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((52 * (v1 + 1 == v3 + 44)) | v0)))();
}

uint64_t sub_100141AF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, int a15)
{
  return (*(uint64_t (**)(void))(v16 + 8 * ((1457 * (a15 == 0)) ^ v15)))();
}

uint64_t sub_100141B5C@<X0>(char a1@<W0>, char a2@<W1>, int a3@<W2>, int a4@<W3>, uint64_t a5@<X4>, int a6@<W6>, int a7@<W8>, int8x16_t a8@<Q0>, int8x8_t a9@<D1>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43)
{
  int v53 = a4 - 8;
  uint64_t v54 = (a3 + v53 + 8);
  v56.val[0].i64[0] = ((_BYTE)a3 + (_BYTE)v53 + 8) & 0xF;
  v56.val[0].i64[1] = (v51 + (_BYTE)v53 + 8) & 0xF;
  v56.val[1].i64[0] = (v50 + (_BYTE)v53 + 8) & 0xF;
  v56.val[1].i64[1] = (v45 + (_BYTE)v53 + (v52 ^ 8) + 8) & 0xF;
  v56.val[2].i64[0] = (v49 + (_BYTE)v53 + 8) & 0xF;
  v56.val[2].i64[1] = (a2 + (_BYTE)v53 + 8) & 0xF;
  v56.val[3].i64[0] = (a1 + (_BYTE)v53 + 8) & 0xF;
  v56.val[3].i64[1] = (v47 + (_BYTE)v53 + 8) & 0xF;
  *(int8x8_t *)(a5 + v54) = veor_s8(veor_s8(veor_s8(*(int8x8_t *)(v44 + (v54 & 0xF) - 7), *(int8x8_t *)(a5 + v54)), veor_s8(*(int8x8_t *)((v54 & 0xF) + v43 - 5), *(int8x8_t *)((v54 & 0xF) + v46 - 3))), vrev64_s8(vmul_s8((int8x8_t)*(_OWORD *)&vqtbl4q_s8(v56, a8), a9)));
  return (*(uint64_t (**)(void))(a43 + 8 * (((v48 == v53) * a7) ^ a6)))();
}

uint64_t sub_100141D54(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  return (*(uint64_t (**)(unint64_t))(v11
                                                     + 8
                                                     * (((*(_DWORD *)(*(void *)(a10 - 0x49230D716B37ADFCLL)
                                                                    + 4
                                                                    * (int)(((((a3 - 1198) | 0x804) + 1878474182) & 0x9008BBB7 ^ 0x87DF5F29)
                                                                          + 2015404390)) == v10)
                                                       * ((((a3 - 1198) | 0x804) + 2401) ^ 0x11DA)) ^ ((a3 - 1198) | 0x804))))(0xB6BCB663E274354BLL);
}

uint64_t sub_100141E5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v7
                              + 8
                              * (((v5 >= v6 + (a5 & 0x35797BD1u) - 1606567797 - 453)
                                * ((a5 & 0x35797BD1 ^ 0x1546) - 1172)) ^ a5 & 0x35797BD1)))();
}

uint64_t sub_100141EA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,int a50)
{
  return (*(uint64_t (**)(void))(v50 + 8 * (((((a50 - 446) | 0x302) - 2816) * (a1 == 0)) ^ (a50 + 825))))();
}

uint64_t sub_100141EDC()
{
  int v7 = v0 - 1226;
  int v8 = ((((v6 - 144) | 0xC6A71819) - ((v6 - 144) & 0xC6A71819)) ^ 0x7B5A1C5A) * v4;
  *(void *)(v6 - 144) = v5;
  *(_DWORD *)(v6 - 136) = v3 + v1 + v8;
  *(_DWORD *)(v6 - 132) = (v7 - 2638) ^ v8;
  uint64_t v9 = (*(uint64_t (**)(uint64_t))(v2 + 8 * (v7 + 1630)))(v6 - 144);
  return (*(uint64_t (**)(uint64_t))(v2
                                            + 8
                                            * ((120 * (*(_DWORD *)(v6 - 128) == ((2 * (v7 ^ 0xF53)) ^ 0x9BAAA914))) ^ (v7 - 597))))(v9);
}

uint64_t sub_100141EE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  uint64_t v16 = *(void *)(STACK[0x630] + 24);
  unsigned int v17 = 1554976193 * v16 - 670485527;
  unint64_t v18 = STACK[0x258];
  *(unsigned char *)(v16 + 41) = *(unsigned char *)(((unint64_t)(1554976193 * (v17 ^ HIWORD(v17))) >> 24) + a14 + 3) ^ *(unsigned char *)(a15 + ((unint64_t)(1554976193 * (v17 ^ HIWORD(v17))) >> 24)) ^ (*(unsigned char *)(STACK[0x828] - 0x469B4FB993658CBDLL) + 3 * ~(v15 + 26) - 115) ^ *(unsigned char *)(a13 + ((unint64_t)(1554976193 * (v17 ^ HIWORD(v17))) >> 24)) ^ (-63 * (v17 ^ BYTE2(v17))) ^ (-61 * ((1554976193 * (v17 ^ HIWORD(v17))) >> 24));
  return (*(uint64_t (**)(void))(v18 + 8 * ((v15 + 1306) | 1)))();
}

uint64_t sub_100141FA8()
{
  return (*(uint64_t (**)(void))(v1 + 8 * (((((v3 >> v0) & 1) == 0) * v4) ^ v2)))();
}

uint64_t sub_100141FCC@<X0>(uint64_t a1@<X8>)
{
  STACK[0x798] = *(void *)(v2 + 8 * (v1 - 3945));
  return sub_10013B2F8(a1);
}

uint64_t sub_100141FF4()
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((59 * (v1 + v0 + ((v2 + 100666226) ^ (v2 - 152)) < 8)) ^ v2)))();
}

uint64_t sub_10014204C(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, int a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,int a23,char a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,char a33)
{
  int v41 = a4 + 1677;
  int v35 = a4 - 176917060;
  int v36 = 375636451 * ((-1619824366 - ((v34 - 128) | 0x9F737112) + ((v34 - 128) | 0x608C8EED)) ^ 0x33B2D461);
  *(void *)(v34 - 120) = a10;
  *(_DWORD *)(v34 - 128) = v36 + a4 + 1326;
  *(_DWORD *)(v34 - 124) = v36 + a13 + 742193356;
  uint64_t v37 = (*(uint64_t (**)(uint64_t))(v33 + 8 * (a4 ^ 0x1248)))(v34 - 128);
  uint64_t v38 = a33 & 0x3F;
  *(&a24 + (v38 ^ 0x1B)) = -32;
  return (*(uint64_t (**)(uint64_t))(v33
                                            + 8
                                            * ((((v38 ^ 0x1B) > v35 + 176916899) * (v41 ^ 0x683)) ^ a4)))(v37);
}

uint64_t sub_10014216C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,int a39)
{
  STACK[0x930] = *(void *)(v43 + 8 * (a6 - 2456));
  return (*(uint64_t (**)(void))(v43
                              + 8
                              * ((((v42 | 0x40) + (v41 ^ 0x20) != v39)
                                * ((((((a39 & 0xD5FCF63) - 917503473) & 0x36AFF5BF ^ a7) * a8) ^ v40) - 318)) | ((a39 & 0xD5FCF63) - 917503473) & 0x36AFF5BF)))();
}

uint64_t sub_1001421F0@<X0>(uint64_t a1@<X6>, unint64_t a2@<X8>)
{
  *(unsigned char *)(v3 + 5) = ~(a2 >> (((v2 - 119) | 0x11u) - 87));
  return (*(uint64_t (**)(void))(a1
                              + 8 * ((4038 * (v4 + 420588583 != ((v2 - 668792815) & 0x27DCF33F ^ 0x1911AF77))) ^ v2)))();
}

uint64_t sub_100142258@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X6>, int a7@<W7>, uint64_t a8@<X8>)
{
  uint64_t v24 = (v21 - 439558144);
  uint64_t v25 = ((2 * ((unint64_t)(a2 + v24) >> 8) + 0x4CBF4DF0C6D61BALL) & v16)
      - (__ROR8__(a2 + v24, 8) & 0xF8FFFFFFFFFFFFFFLL)
      + v17;
  uint64_t v26 = v25 ^ v18;
  uint64_t v27 = v25 ^ v14;
  uint64_t v28 = __ROR8__(v26, 8);
  uint64_t v29 = (a3 - ((v28 + v27) | a3) + ((v28 + v27) | v19)) ^ v15;
  uint64_t v30 = v29 ^ __ROR8__(v27, 61);
  uint64_t v31 = (__ROR8__(v29, 8) + v30) ^ v20;
  uint64_t v32 = v31 ^ __ROR8__(v30, 61);
  uint64_t v33 = (__ROR8__(v31, 8) + v32) ^ a6;
  uint64_t v34 = v33 ^ __ROR8__(v32, 61);
  uint64_t v35 = __ROR8__(v33, 8);
  uint64_t v36 = ((v22 | (2 * (v35 + v34))) - (v35 + v34) + v23) ^ a1;
  uint64_t v37 = v36 ^ __ROR8__(v34, 61);
  uint64_t v38 = (__ROR8__(v36, 8) + v37) ^ a4;
  uint64_t v39 = v38 ^ __ROR8__(v37, 61);
  uint64_t v40 = (__ROR8__(v38, 8) + v39) ^ 0x7513AABC5A3B3BB8;
  uint64_t v41 = v40 ^ __ROR8__(v39, 61);
  uint64_t v42 = __ROR8__(v40, 8);
  *(unsigned char *)(a2 + v24 + a5) = (((v13 - ((v42 + v41) | v13) + ((v42 + v41) | v9)) ^ v10) >> (8 * ((a2 + v21) & 7))) ^ (*(unsigned char *)(a8 + v24) - 34);
  return (*(uint64_t (**)(void))(v11 + 8 * (((v21 - 1 != a7) * v8) | (v12 - 1290))))();
}

uint64_t sub_100142388(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, int a16, int a17, unsigned int a18, unsigned int a19)
{
  if (a19 < a18 != v20 - 1343841952 < (a16 - 14582151)) {
    BOOL v22 = v20 - 1343841952 < (a16 - 14582151);
  }
  else {
    BOOL v22 = v20 - 1343841952 > a19;
  }
  return (*(uint64_t (**)(void))(v19 + 8 * (int)((v22 * ((a17 & 0xF2398EEA) - 736)) ^ (a8 + v21 + 2895))))();
}

uint64_t sub_10014240C@<X0>(int a1@<W8>)
{
  if (a1 == v2) {
    int v3 = v1;
  }
  else {
    int v3 = a1;
  }
  return (v3 - 847203058);
}

uint64_t sub_10014245C()
{
  STACK[0x5D0] = 0;
  uint64_t v2 = STACK[0x618];
  STACK[0x798] = *(void *)(v1 + 8 * v0);
  return sub_10013B2F8(v2);
}

uint64_t sub_100142478(uint64_t a1, uint64_t a2, int a3, int a4, uint64_t a5, int a6)
{
  *(void *)(a1 - 7 + v8 + v9 + a3 - a4 + (a6 ^ 0xF67u)) = *(void *)(v6 - 7 + v8 + v9 + a3 - a4 + (a6 ^ 0xF67u));
  return (*(uint64_t (**)(void))(v10 + 8 * ((977 * (a4 - (v7 & 0xFFFFFFF8) == -8)) ^ a6)))();
}

void sub_1001424E4()
{
  int v0 = (unint64_t *)*(&off_100520A90
                           + ((75 * ((qword_1005A6FB0 - dword_1005A70C8) ^ 0x7E)) ^ byte_100495D20[byte_100491700[(75 * ((qword_1005A6FB0 - dword_1005A70C8) ^ 0x7E))] ^ 0x3D])
                           - 199);
  unsigned __int8 v1 = 75 * ((qword_1005A6FB0 + *v0) ^ 0x7E);
  uint64_t v2 = (uint64_t)*(&off_100520A90
                + (byte_100491904[(byte_1004A0964[v1 - 4] ^ 0xB4) - 4] ^ v1)
                + 242);
  unint64_t v3 = *v0 - (void)&v5 + *(void *)(v2 - 4);
  *int v0 = (544792907 * v3) ^ 0xE12C07DFCC70D97ELL;
  *(void *)(v2 - 4) = 544792907 * (v3 ^ 0xE12C07DFCC70D97ELL);
  v6[1] = 31090337 * (((v6 | 0x37123CA5) + (~v6 | 0xC8EDC35A)) ^ 0xF0935CED) + 1655392376;
  LOBYTE(v2) = 75 * ((*(_DWORD *)(v2 - 4) - *(_DWORD *)v0) ^ 0x7E);
  uint64_t v4 = (char *)*(&off_100520A90
               + ((75 * ((qword_1005A6FB0 + dword_1005A70C8) ^ 0x7E)) ^ byte_10049B320[byte_100495E20[(75 * ((qword_1005A6FB0 + dword_1005A70C8) ^ 0x7E))] ^ 0x14])
               - 144)
     - 8;
  (*(void (**)(_DWORD *))&v4[8
                                      * (byte_100495D2C[(byte_10049170C[v2 - 12] ^ 0x38)
                                                                       - 12] ^ v2)
                                      + 36968])(v6);
  __asm { BRAA            X8, X17 }
}

uint64_t sub_100142714@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8 = (v7 - 1001140452);
  int v9 = v6 + v8;
  char v10 = *(unsigned char *)(v6 + v8);
  uint64_t v11 = v5 + v8 + ((7 * (a1 ^ 0x40Du)) ^ 0x9C0);
  unint64_t v12 = 1554976193 * ((1554976193 * v9) ^ ((1554976193 * v9) >> 16));
  unint64_t v13 = (unint64_t)(1554976193 * ((1554976193 * v11) ^ ((1554976193 * v11) >> 16))) >> 24;
  *(unsigned char *)uint64_t v11 = *(unsigned char *)(a5 + (v12 >> 24)) ^ v10 ^ *(unsigned char *)((v12 >> 24) + a3 + 1) ^ *(unsigned char *)((v12 >> 24) + a4 + 5) ^ *(unsigned char *)(a5 + v13) ^ *(unsigned char *)(v13 + a3 + 1) ^ *(unsigned char *)(v13 + a4 + 5) ^ (-105 * BYTE3(v12)) ^ (-63 * ((-63 * v11) ^ ((1554976193 * v11) >> 16))) ^ v12 ^ (-105 * ((1554976193 * ((1554976193 * v11) ^ ((1554976193 * v11) >> 16))) >> 24));
  return (*(uint64_t (**)(void))(STACK[0x258] + 8 * ((7 * (v7 == 1001140452)) ^ a1)))();
}

uint64_t sub_100142808(uint64_t a1, int a2)
{
  return (*(uint64_t (**)(void))(v4 + 8 * ((((92 * (a2 ^ 0xD81)) ^ 0x75D) * (v2 == v3)) ^ a2)))();
}

uint64_t sub_10014283C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, int a15)
{
  return (*(uint64_t (**)(void))(v16 + 8 * ((3985 * (a15 == ((v15 + 69336985) | 0xAB94AA54) + 1346983074)) ^ (v15 + 1))))();
}

uint64_t sub_1001428B0(__int16 a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v17 = 7 * ((v7 + 1517 + v15 - 1633) >> 4) + v8;
  __int16 v18 = 7 * v15;
  int v19 = v15 + 1;
  LOBYTE(v17) = (16
               * *(unsigned char *)(v16
                          + (unsigned __int16)(v17 - ((unsigned __int16)((v17 * v11) >> 16) >> 8) * v10))) ^ 0x30;
  LOBYTE(v17) = (v17 - ((2 * v17) & 0x20) + 19) ^ *(unsigned char *)(v16
                                                           + (unsigned __int16)(7 * (v19 & 0xF)
                                                                              + v8
                                                                              - ((unsigned __int16)(((7 * (v19 & 0xFu) + v8) * v9) >> 16) >> 7)
                                                                              * v10));
  int v20 = 7
      * (*(unsigned __int8 *)(v14
                            + (unsigned __int16)((v17 ^ 0xF) * v12
                                               + 6750
                                               - (unsigned __int16)((v17 ^ 0xF) * v12 + 6750)
                                               / 0x3B0u
                                               * a1)) ^ (v17 + ((2 * v17) & 0x80) - 64) ^ 0xDB)
      + v13;
  *(unsigned char *)(v16 + (unsigned __int16)(v18 - 20916 - (unsigned __int16)(v18 - 20916) / 0x3C0u * v10)) = *(unsigned char *)(v16 + (unsigned __int16)(v20 - ((unsigned __int16)((v20 * v9) >> 16) >> 7) * v10));
  return (*(uint64_t (**)(void))(a7 + 8 * ((2438 * (v19 == 900402607)) ^ v7)))();
}

uint64_t sub_1001429E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, unint64_t *a19, int a20,unsigned int a21)
{
  a19 = &STACK[0x75464D914B7248BF];
  a21 = 3687
      - ((((&a19 | 0x188F4FD8) ^ 0xFFFFFFFE) - (~&a19 | 0xE770B027)) ^ 0x20F1D06E) * v22;
  uint64_t v24 = (*(uint64_t (**)(unint64_t **))(v23 + 37680))(&a19);
  return (*(uint64_t (**)(uint64_t))(v23 + 8 * ((7341 * (a20 == 847203058)) ^ v21)))(v24);
}

void sub_100142A80(_DWORD *a1, int a2)
{
  int v9 = (v5 - 1762599039) & 0x32100B1D;
  *((unsigned char *)a1 + v4 + 4) = v6;
  int v10 = v7 + v3;
  *a1 = v7 + v3 + 187198602;
  int v11 = a1 + 1;
  *((unsigned char *)v11 + (a2 + v3)) = v8;
  *((unsigned char *)v11 + (v9 ^ (v2 - 526)) + v3) = 78;
  *((unsigned char *)v11 + (v10 - 1464740997)) = 92;
  *((unsigned char *)v11 + (v10 - 1464740996)) = 31;
  JUMPOUT(0x10013CF2CLL);
}

uint64_t sub_100142AF8(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(void))(v6 + 8 * ((((a2 + (v8 ^ (v9 + 605)) + 975) ^ 0xFB8) * (v7 == a6)) ^ v8)))(0);
}

uint64_t sub_100142B30(uint64_t a1, int a2, uint64_t a3, int a4, int a5, uint64_t a6, uint64_t a7, int a8)
{
  uint64_t v13 = v10 - 32 + (v9 ^ (a8 + 41)) * a2;
  long long v14 = *(_OWORD *)(v8 + v13 - 15);
  long long v15 = *(_OWORD *)(v8 + v13 - 31);
  uint64_t v16 = a1 + v13;
  *(_OWORD *)(v16 - 15) = v14;
  *(_OWORD *)(v16 - 31) = v15;
  return (*(uint64_t (**)(void))(v12 + 8 * (((v11 == 32) * a5) ^ a4)))();
}

uint64_t sub_100142B3C(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7
                                                              + 8
                                                              * ((107 * ((a4 + 1 + v8) < 0x50)) ^ v6)))(v5, a3, v4);
}

uint64_t sub_100142BF8()
{
  return sub_100142C00();
}

uint64_t sub_100142C00(double a1, int8x16_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44)
{
  uint64_t v54 = *(uint64_t (**)(void, uint64_t, uint64_t, void, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v49 + 8 * v45);
  int v55 = BYTE4(a36) ^ 0x22;
  LODWORD(a17) = BYTE4(a36) ^ 0x22;
  if (v55 == 2)
  {
    int8x16x4_t v81 = vld4q_s8(v46);
    uint8x16_t v68 = (uint8x16_t)veorq_s8(v81.val[1], a2);
    _Q22 = vmovl_u8(*(uint8x8_t *)v68.i8);
    _Q21 = vmovl_high_u8(v68);
    __asm
    {
      SHLL2           V23.4S, V21.8H, #0x10
      SHLL2           V24.4S, V22.8H, #0x10
    }
    char v73 = (_DWORD *)(v44 + 4 * (v51 + 2135104120));
    int v74 = *(v73 - 8) ^ *(v73 - 3);
    unsigned int v75 = v74 + v47 - ((2 * v74) & 0xBD8A9616);
    int v76 = *(v73 - 16) ^ *(_DWORD *)(v44
                                  + 4
                                  * (((a7 + 1063997433) & 0xB6092777 ^ (unint64_t)(v51 + 293))
                                   + 2135104120));
    uint64_t v77 = v76 ^ v75 ^ 0x5EC54B0B;
    HIDWORD(v78) = v76 ^ v75 ^ 0x5EC54B0B;
    LODWORD(v78) = v76 ^ ~v75;
    *char v73 = (v78 >> 31) + v47 - ((2 * (v78 >> 31)) & 0xBD8A9616);
    unsigned int v79 = *(uint64_t (**)(uint64_t, uint64_t, void, void, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, unint64_t, uint64_t (*)(void, uint64_t, uint64_t, void, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t), uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v49 + 8 * ((4611 * (v53 == 2135104057)) ^ ((int)a7 - 176916793)));
    return v79(2135104121, a4, v79, HIDWORD(a35), a7, a34, v77, 3179976214, a11, a12, a13, a14, a15, a16, a17, __PAIR64__(a34, HIDWORD(a33)), __PAIR64__(a35, HIDWORD(a34)), v54, a21,
             a22,
             a23,
             a24,
             a25,
             a26,
             a27,
             a28,
             a29,
             a30,
             a31,
             a32,
             a33,
             a34,
             a35,
             a36,
             a37,
             a38,
             a39,
             a40,
             a41,
             a42,
             a43,
             a44);
  }
  else if (v55 == 1)
  {
    int8x16x4_t v80 = vld4q_s8(v46);
    uint8x16_t v56 = (uint8x16_t)veorq_s8(v80.val[2], a2);
    _Q26 = vmovl_high_u8(v56);
    _Q25 = vmovl_u8(*(uint8x8_t *)v56.i8);
    __asm
    {
      SHLL2           V25.4S, V25.8H, #0x10
      SHLL2           V26.4S, V26.8H, #0x10
    }
    uint64_t v63 = dword_10048C9B0[a21 + v51];
    int v64 = (HIDWORD(a33) ^ v52)
        + v48
        + ((HIDWORD(a34) ^ v52) & (a34 ^ v52) | (a35 ^ v52) & (a34 ^ 0xB55C48C7))
        + v63
        + (*(_DWORD *)(v44 + 4 * (byte_10048E360[a21 + v51] - 22)) ^ v47);
    unsigned int v65 = (v64 + v52 - (v50 & (2 * v64))) ^ v52;
    int v66 = ((v65 << (byte_1004A00F0[a21 + v51] - 103)) | (v65 >> (103 - byte_1004A00F0[a21 + v51]))) + (a34 ^ v52);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, unint64_t, uint64_t (*)(void, uint64_t, uint64_t, void, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t), uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v49 + 8 * ((2714 * (a21 + 1 == v53)) ^ 0x6EC)))(a21 + 1, a4, 2895, 176917446, 3093736771, v66 + v52 - (v50 & (2 * v66)), 2135104120, v63, a11, a12, a13, a14, a15, a16, a17, __PAIR64__(a34, HIDWORD(a33)), __PAIR64__(a35, HIDWORD(a34)), v54, a21,
             a22,
             a23,
             a24,
             a25,
             a26,
             a27,
             a28,
             a29,
             a30,
             a31,
             a32,
             a33,
             a34,
             a35,
             a36,
             a37,
             a38,
             a39,
             a40,
             a41,
             a42,
             a43,
             a44);
  }
  else
  {
    return v54(HIDWORD(a33), a4, a5, v54, a7, a34, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21,
             a22,
             a23,
             a24,
             a25,
             a26);
  }
}

void sub_100143088()
{
}

uint64_t sub_100143144(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, int a7)
{
  uint64_t v14 = (a5 - 1675135046);
  *(unsigned char *)(*(void *)(v13 - 120) + v14) = *(unsigned char *)(v9 + (v14 & 0xF)) ^ *(unsigned char *)(v7 + v14) ^ ((a7 ^ 0xD2) - 86) ^ *(unsigned char *)(v8 + (v14 & 0xF)) ^ *(unsigned char *)(v10 + (v14 & 0xF)) ^ (97 * (v14 & 0xF));
  return (*(uint64_t (**)(void))(v12 + 8 * ((7849 * (a5 - 1 == v11)) ^ (a7 + 3154))))();
}

uint64_t sub_1001431BC@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (((v1 ^ 0x4D6 ^ (31 * (v1 ^ 0xA03))) * ((a1 + v2 + 2837) < 0x7FFFFFFF)) ^ v1)))();
}

uint64_t sub_10014320C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, char a13, __int16 a14, char a15, __int16 a16, char a17, uint64_t a18, int a19, unsigned int a20,uint64_t a21,char *a22)
{
  a20 = (v24 + 435) ^ (1314530549 * (&a19 ^ 0xB10986CE));
  a21 = a11;
  a22 = &a17;
  (*(void (**)(int *))(v22 + 8 * (v24 ^ 0x157B)))(&a19);
  a21 = a11;
  a22 = &a13;
  a20 = (v24 + 435) ^ (1314530549
                     * ((&a19 + 1308761527 - 2 * (&a19 & 0x4E021DB7)) ^ 0xFF0B9B79));
  (*(void (**)(int *))(v22 + 8 * (v24 ^ 0x157B)))(&a19);
  a20 = (v24 + 435) ^ (1314530549
                     * (((&a19 | 0x953B4557) + (~&a19 | 0x6AC4BAA8)) ^ 0x2432C398));
  a21 = a11;
  a22 = &a15;
  (*(void (**)(int *))(v22 + 8 * (v24 + 2793)))(&a19);
  a21 = a11;
  LODWORD(a22) = v24
               - 476588053
               * (((&a19 ^ 0x39065E6B) & 0xAE55F977 | ~(&a19 ^ 0x39065E6B | 0xAE55F977)) ^ 0xD5515CA0)
               + 778;
  uint64_t v25 = (*(uint64_t (**)(int *))(v22 + 8 * (v24 ^ 0x151A)))(&a19);
  return (*(uint64_t (**)(uint64_t))(v22 + 8 * (((a19 != v23) * (((v24 - 1501) | 0x605) - 1853)) ^ v24)))(v25);
}

uint64_t sub_1001433A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  int v18 = 2 * (v17 - 136);
  int v19 = 31090337 * (((v18 | 0x822A9E2E) - (v17 - 136) - 1091915543) ^ 0x86942F5E);
  *(_DWORD *)(v17 - 120) = (v16 - 1728) ^ v19;
  *(_DWORD *)(v17 - 136) = v19 + 1875376251;
  *(void *)(v17 - 128) = v13;
  (*(void (**)(uint64_t))(v14 + 8 * (v16 + 1936)))(v17 - 136);
  *(_DWORD *)(v17 - 120) = v16 + 476588053 * (((v18 | 0x3D4472F8) - (v17 - 136) - 513948028) ^ 0xA35F3D3F) - 1641;
  *(void *)(v17 - 136) = v15;
  *(void *)(v17 - 128) = a12;
  (*(void (**)(uint64_t))(v14 + 8 * (v16 + 1956)))(v17 - 136);
  *(void *)(v17 - 136) = v13;
  *(_DWORD *)(v17 - 124) = (v16 - 1660) ^ (((((v17 - 136) ^ 0xCA90A6E)
                                           - 1683473247
                                           - 2 * (((v17 - 136) ^ 0xCA90A6E) & 0x9BA83CA1)) ^ 0x81AF608B)
                                         * v12);
  *(void *)(v17 - 120) = a12;
  uint64_t v20 = (*(uint64_t (**)(uint64_t))(v14 + 8 * (v16 + 1933)))(v17 - 136);
  return (*(uint64_t (**)(uint64_t))(v14
                                            + 8
                                            * (((*(_DWORD *)(v17 - 128) > 0x2FB2CDA1u) * (((v16 - 537) | 0x714) ^ 0xFB7)) ^ v16)))(v20);
}

void sub_100143514()
{
}

uint64_t sub_100143528@<X0>(int a1@<W4>, uint64_t a2@<X5>, int a3@<W8>)
{
  int v8 = v4 - 2894;
  *(unsigned char *)(v7 - 252 + (a3 + v3)) = v8
                                                 - 83
                                                 + *(unsigned char *)(a2 + v6 - 1253724277)
                                                 - ((2 * *(unsigned char *)(a2 + v6 - 1253724277)) & 0xC0)
                                                 + 41;
  return (*(uint64_t (**)(void))(v5 + 8 * ((2926 * ((a1 + a3 + 1) < 0x40)) ^ v8)))();
}

void sub_100143590(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  __asm { BRAA            X8, X17 }
}

void sub_1001435FC(int a1@<W8>, uint64_t a2, int a3, int a4)
{
  unsigned int v8 = 1314530549 * ((2 * (&a2 & 0x4B417680) - &a2 + 884902266) ^ 0x85B70FB4);
  a2 = v6;
  a3 = v8 - v5 - ((1603268852 - v7) & 0x4B258430) + a1 - 1789216650;
  a4 = (a1 + 2739) ^ v8;
  (*(void (**)(uint64_t *))(v4 + 8 * (a1 + 4243)))(&a2);
  JUMPOUT(0x100143690);
}

uint64_t sub_1001436B8(int a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * ((245
                                * (((a4 - (((a1 + 530) ^ 0x88E) & v4) + 727) & 0xFFFFFFFC) <= a4 + 365 * (a1 ^ 0x679u))) ^ a1)))();
}

uint64_t sub_100143710(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, uint64_t a13, uint64_t a14, int a15, int a16)
{
  return (*(uint64_t (**)(void))(v17 + 8 * ((((a16 != -557495541) & ~a12) * (v16 ^ 0x4D1)) ^ v16)))();
}

uint64_t sub_100143758@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v2 + 8 * (((((v3 - 1778) | 0x440) ^ ((v3 ^ 0xF52) + 13)) * (a1 != v1)) ^ v3)))();
}

void sub_100143790(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, uint64_t a16, unsigned int a17)
{
  *int v19 = a1;
  *int v18 = v17;
  a16 = a13;
  a17 = a7
      + 732
      + 366490169 * ((((2 * &a15) | 0x682D63BA) - &a15 - 873902557) ^ 0x22B8E799)
      + 2194;
  (*(void (**)(char *))(v20 + 8 * ((a7 + 732) ^ 0x1B46)))(&a15);
  JUMPOUT(0x10014380CLL);
}

uint64_t sub_1001438AC@<X0>(int a1@<W8>)
{
  int v4 = (v1 + 492) | 0xA06;
  if (*(void *)v2 | *(void *)(v2 + 56)) {
    BOOL v5 = *(_DWORD *)(v2 + 36) - a1 == ((v4 + 1641846684) & 0x9E235F7D) + ((v4 - 3838) | 0x30C) + 1320167180;
  }
  else {
    BOOL v5 = 1;
  }
  int v6 = v5;
  return (*(uint64_t (**)(void))(v3 + 8 * (((8 * v6) | (16 * v6)) ^ v4)))();
}

uint64_t sub_10014392C()
{
  *(void *)(v3 + v0 - 0x560E26B629865A7CLL) = v5;
  return (*(uint64_t (**)(uint64_t))(v4
                                            + 8
                                            * ((((((v1 ^ 0xF4) - 1849) & v2) != 8) * (((v1 ^ 0xF4) - 312) ^ 0x6CD)) ^ v1 ^ 0xF4)))(8);
}

uint64_t sub_100143990@<X0>(int a1@<W4>, uint64_t a2@<X5>, uint64_t a3@<X6>, uint64_t a4@<X7>, uint64_t a5@<X8>)
{
  unsigned int v12 = v6 - 1554976193;
  uint64_t v13 = a5 - 1;
  *(unsigned char *)(v7 + v13) = (*(unsigned char *)(v8 + v13) - 34) ^ *(unsigned char *)(a4
                                                                + ((unint64_t)((v12 ^ HIWORD(v12)) * a1) >> 24)) ^ *(unsigned char *)(((unint64_t)((v12 ^ HIWORD(v12)) * a1) >> 24) + a2 + 3) ^ *(unsigned char *)(a3 + ((unint64_t)((v12 ^ HIWORD(v12)) * a1) >> 24)) ^ ((v12 ^ BYTE2(v12)) * a1) ^ ((((v12 ^ HIWORD(v12)) * a1) >> 24) * v9);
  return (*(uint64_t (**)(void))(v11 + 8 * (((v13 == -15) * v10) ^ v5)))();
}

uint64_t sub_1001439A4@<X0>(void *a1@<X8>)
{
  void *v1 = a1;
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((((10 * (v2 ^ 0x513)) ^ 0x19F ^ ((10 * (v2 ^ 0x513) - 2252) | 0x864)) * (*a1 == 0)) ^ (10 * (v2 ^ 0x513)))))();
}

uint64_t sub_1001439F8()
{
  uint64_t v2 = (*(uint64_t (**)(uint64_t))(v1 + 8 * (v0 ^ 0x1161)))(32);
  unint64_t v3 = STACK[0x258];
  STACK[0x528] = v2;
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (((((v2 == 0) ^ (v0 + 120)) & 1)
                                * ((v0 - 167635315) & 0x9FDEFDF ^ 0x9F6)) ^ v0)))();
}

uint64_t sub_100143A64()
{
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * (v1 ^ (44
                                     * ((((v2 - (v3 & 0x24AEA714) + 1381454730) << ((19 * (v1 ^ 0x9C)) ^ 0xB4)) & 0xDF5D5FE2 ^ 0x840C0700)
                                      + ((v2 - (v3 & 0x24AEA714) + 1381454730) ^ 0x3DF9FC7B)
                                      - 52702384 == 1821016897)))))();
}

void sub_100143AF8()
{
}

uint64_t sub_100143BAC(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((232 * ((((((a3 - 3112) | 0x900) - 3036) ^ (a3 - 3820)) & v3) == 0)) ^ (a3 - 684))))();
}

uint64_t sub_100143BEC@<X0>(uint64_t a1@<X0>, int a2@<W5>, uint64_t a3@<X8>)
{
  uint64_t v9 = (v5 + v4);
  long long v10 = *(_OWORD *)(a3 + v9 - 15);
  long long v11 = *(_OWORD *)(a3 + v9 - 31);
  uint64_t v12 = a1 + v9;
  *(_OWORD *)(v12 - 15) = v10;
  *(_OWORD *)(v12 - 31) = v11;
  return (*(uint64_t (**)(void))(v8 + 8 * ((3238 * ((v7 ^ (a2 + 784)) - 4389 == (v6 & 0xFFFFFFE0))) ^ (v3 + v7 + 314))))();
}

uint64_t sub_100143C50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,int a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t))(v72 + 8 * ((((a46 & 0x45552639 ^ 0x656C2D08) == 1701588297) | (8 * ((a46 & 0x45552639 ^ 0x656C2D08) == 1701588297))) ^ (v73 + 800))))(STACK[0x200], a72, a71, a57, 2593379014, STACK[0x2C0], 9864, 3131758937);
}

uint64_t sub_100143CD8()
{
  int v2 = v1 - ((2 * v1 + 1200568096) & 0x60FCE918) + 340135964;
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * ((90 * (((2 * v2) & 0xEFBFBFDA ^ 0x60BCA918) + (v2 ^ 0x47A1AB61) == 2011160557)) ^ 0xA96u)))();
}

uint64_t sub_100143D78@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v16 = 4 * (v13 + v10);
  unsigned int v17 = v4 - 62103786 + (*(_DWORD *)(*(void *)(a4 - 0x49230D716B37ADFCLL) + v16) ^ 0xCFBB4C09);
  *(_DWORD *)(*(void *)(a1 - 0x49230D716B37ADFCLL) + v16) = v17
                                                            + v11
                                                            - ((v17 << (((80 * (v5 ^ 0xE6)) ^ 0x5A) + 71)) & v14);
  BOOL v18 = v15 > v9;
  if (v18 == v13 + v6 < v7) {
    BOOL v18 = v13 + v6 < v8;
  }
  return (*(uint64_t (**)(void))(v12 + 8 * ((3543 * v18) ^ (336 * (v5 ^ 0x7E6)))))();
}

uint64_t sub_100143E80(uint64_t a1)
{
  int v1 = *(_DWORD *)(*(void *)(a1 + 8) - 0x49230D716B37AE00);
  int v4 = v1 - 330117362;
  BOOL v3 = v1 - 330117362 < 0;
  int v5 = 330117362 - v1;
  if (!v3) {
    int v5 = v4;
  }
  int v2 = *(_DWORD *)a1 - 1697562443 * ((a1 & 0xEAB71AA9 | ~(a1 | 0xEAB71AA9)) ^ 0xC2D8DDD2) + 610;
  return (*((uint64_t (**)(void))*(&off_100520A90 + v2 - 2513)
          + ((((v5 ^ 0x4BFFFFFF) - 1275068416 + ((v2 ^ 0x97FFF61F) & (2 * v5)) > 0x7FFFFFFE)
            * (((v2 - 1726) | 0x45C) ^ (v2 - 628))) | v2)
          - 1))();
}

uint64_t sub_100143F98@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,unint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,int a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,unint64_t a50)
{
  LODWORD(STACK[0x974]) = a1;
  unint64_t v51 = (a1 ^ v50) + STACK[0x370];
  STACK[0x978] = v51 + 10;
  v51 -= 0x5DB68B12746794DLL;
  BOOL v52 = v51 < 0x91C7630;
  BOOL v53 = v51 > a38;
  if (a50 > 0xFFFFFFFFF6E389CFLL != v52) {
    BOOL v53 = v52;
  }
  return (*(uint64_t (**)(void))(STACK[0x258] + 8 * ((a43 - 1123) ^ (237 * v53))))();
}

uint64_t sub_100144030@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, int8x16_t *a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, int a8@<W8>, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
  *(int8x16_t *)(a4 + v28 + ((a8 - 185) ^ 0xBB3E9D75)) = vaddq_s8(vsubq_s8(*a5, vandq_s8(vaddq_s8(*a5, *a5), v33)), v32);
  uint64_t v34 = *(uint64_t (**)(void, uint64_t, uint64_t, uint64_t, uint64_t, int8x16_t *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v31 + 8 * ((41 * ((((v30 ^ 0xD7E) + v29) & 0x1FFFFFFF0) == 16)) ^ a8));
  return v34(v34, a1, a2, a3, a4, a5, a6, a7, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28);
}

uint64_t sub_1001440AC(uint64_t a1)
{
  return (*(uint64_t (**)(char *))(v1
                                           + 8
                                           * ((((unint64_t)*(&off_100520A90 + v2 - 3300) - a1 - 8 < (unint64_t)(26 * (v2 ^ 0xD7Du)) - 3270)
                                             * ((v2 - 1791) ^ 0x1A0C)) ^ v2)))((char *)&STACK[0x5C0] + STACK[0x270] - 208);
}

uint64_t sub_100144124(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,unint64_t *a21,int a22,unsigned int a23)
{
  a23 = 3687 - ((-388594929 - (&a21 | 0xE8D6830F) + (&a21 | 0x17297CF0)) ^ 0xD0A81CB9) * v23;
  a21 = &STACK[0x75464D914B7248A7];
  uint64_t v25 = (*(uint64_t (**)(unint64_t **))(v24 + 37680))(&a21);
  return (*(uint64_t (**)(uint64_t))(v24 + 8 * ((4656 * (a22 == 847203058)) ^ 0x234)))(v25);
}

uint64_t sub_1001441F0@<X0>(unint64_t a1@<X8>)
{
  *(unsigned char *)(v2 + 1678) = BYTE4(a1) ^ 0xAD;
  *(unsigned char *)(v2 + (v1 - 1445) + 1442) = ~(a1 >> ((v1 - 37) ^ 0x45u));
  return (*(uint64_t (**)(void))(v5 + 8 * (v1 | (8 * (v4 != v3 + 10)))))();
}

uint64_t sub_10014423C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v8
                                                                                                  + 8 * ((v7 - 1509) ^ (2 * (((v6 - ((2 * v6) & 0xEA5B2D92) + 1965921993) ^ 0x98D22886) + 1475010557 + (((v7 - 2186) | 0x2A5) ^ 0xCA5B2F77 ^ (2 * (v6 - ((2 * v6) & 0xEA5B2D92) + 1965921993)) & 0xDBFF7C9E) == 1173003852)))))(a1, a2, a3, a4, a5, a6, 1554976193);
}

uint64_t sub_1001442D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, unsigned int a15, uint64_t a16, int a17, uint64_t a18, unsigned int a19)
{
  unsigned int v26 = 366490169 * ((1859958676 - (&a15 | 0x6EDCB794) + (&a15 | 0x9123486B)) ^ 0x878D1E2F);
  a17 = v26 + v25 + 2017;
  a16 = a12;
  a15 = ((2 * v21) & 0x3BFFFF3A) + (v21 ^ 0xF53A3C49 ^ v25 ^ 0x68C5C701) + 1990050676 + v26;
  (*(void (**)(unsigned int *))(v23 + 8 * (v25 + 3460)))(&a15);
  unsigned int v27 = ((((2 * &a15) | 0xF32E8750) - &a15 - 2039956392) ^ 0xBE1623E1) * v24;
  a18 = a12;
  a17 = v27 + v25 + 2826;
  a19 = (v20 ^ 0x6376EBEE) + ((2 * v20) & 0xC6EDD7DC) - v27 - 1094846854;
  a16 = v19;
  uint64_t v28 = (*(uint64_t (**)(unsigned int *))(v23 + 8 * (v25 ^ 0x16A5)))(&a15);
  return (*(uint64_t (**)(uint64_t))(v23 + 8 * ((54 * (a15 == v22)) ^ v25)))(v28);
}

uint64_t sub_100144434(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unsigned int a16, unsigned int a17, uint64_t a18, int a19)
{
  uint64_t v26 = v19[5];
  uint64_t v27 = *v19;
  uint64_t v23 = v19[1];
  a17 = (v21 + 19) ^ (375636451 * ((&a15 & 0x326DDF7F | ~(&a15 | 0x326DDF7F)) ^ 0x9EAC7A0C));
  a15 = v23;
  a18 = a14;
  (*(void (**)(uint64_t *))(v20 + 8 * (v21 + 4321)))(&a15);
  a17 = (v21 + 19) ^ (375636451 * ((&a15 & 0xA19167F0 | ~(&a15 | 0xA19167F0)) ^ 0xD50C283));
  a15 = v26;
  a18 = a14;
  (*(void (**)(uint64_t *))(v20 + 8 * (v21 + 4321)))(&a15);
  a16 = v21 + ((&a15 - 525847324 - 2 * (&a15 & 0xE0A834E4)) ^ 0x37380C60) * v22 + 281;
  a18 = v27;
  a15 = a14;
  uint64_t v24 = (*(uint64_t (**)(uint64_t *))(v20 + 8 * (v21 + 4374)))(&a15);
  return (*(uint64_t (**)(uint64_t))(v20 + 8 * ((3157 * (a19 == v21 + 847202640)) | v21)))(v24);
}

uint64_t sub_1001445A0@<X0>(uint64_t a1@<X6>, int a2@<W8>)
{
  int v4 = v3 < 0x8FB61FBD;
  if (v4 == (a2 - 1883889730) < 0x8FB61FBD) {
    int v4 = a2 - 1883889730 < v3;
  }
  return (*(uint64_t (**)(void))(a1 + 8 * (((v4 << 7) | (v4 << 8)) ^ v2)))();
}

uint64_t sub_1001445B0(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(void))(v7
                              + 8
                              * (((((a6 - 3585) | 0xA30) + ((a6 - 2138113051) & 0x7F70F755) - 3351) * (v6 != a4)) ^ a6)))();
}

uint64_t sub_1001445FC()
{
  return sub_1001AAB74(STACK[0x3BC]);
}

uint64_t sub_100144614()
{
  int v4 = 142545853 * ((~((v3 - 192) | 0x4355BE68) + ((v3 - 192) & 0x4355BE68)) ^ 0x9655EEF8);
  *(void *)(v3 - 144) = STACK[0x290];
  *(_DWORD *)(v3 - 152) = v1 - v4 + 1390;
  *(_DWORD *)(v3 - 1memset((void *)(STACK[0x7D8] + 8), 91, 48) = v0 - v4 + (v1 ^ 0x1C400959);
  unint64_t v5 = STACK[0x2C0];
  *(void *)(v3 - 192) = STACK[0x288];
  *(void *)(v3 - 184) = v5;
  unint64_t v6 = STACK[0x278];
  *(void *)(v3 - 168) = STACK[0x280];
  *(void *)(v3 - 160) = v6;
  (*(void (**)(uint64_t))(v2 + 8 * (v1 ^ 0x11B2u)))(v3 - 192);
  return (*(uint64_t (**)(uint64_t, __n128))(v2
                                                    + 8
                                                    * (((*(_DWORD *)(v3 - 176) == 847203058)
                                                      * (((v1 - 827) | 0x900) ^ 0xDAB)) | v1)))(48, (__n128)0);
}

uint64_t sub_100144718@<X0>(int a1@<W7>, uint64_t a2@<X8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18, char a19)
{
  *(&a19 + a2 - 415131222) = 96;
  return (*(uint64_t (**)(void))(v20 + 8 * ((a1 + v19 + 1014) ^ (4 * ((unint64_t)(a2 - 415131221) > 0x3F)))))();
}

uint64_t sub_100144758(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v10 = (v5 + v4 - v7);
  int8x8_t v11 = vrev64_s8(*(int8x8_t *)(v8 - 7 + v10));
  *(int8x8_t *)(v3 - 7 + v10) = vrev64_s8(vadd_s8(vsub_s8(v11, vand_s8(vadd_s8(v11, v11), (int8x8_t)0xC0C0C0C0C0C0C0C0)), (int8x8_t)0x6060606060606060));
  return (*(uint64_t (**)(void))(v9
                              + 8
                              * ((73
                                * (((5 * (a3 ^ 0x185) - 1306128870) & 0x4DD9FDD7 ^ 0xD99) + v7 != ((5 * (a3 ^ 0x185)
                                                                                                  - 423) & v6))) ^ (5 * (a3 ^ 0x185)))))();
}

void sub_1001447EC()
{
  uint64_t v0 = (uint64_t)*(&off_100520A90
                + ((75 * ((qword_1005A6FB0 + dword_1005A6FF0) ^ 0x7E)) ^ byte_100495D20[byte_100491700[(75 * ((qword_1005A6FB0 + dword_1005A6FF0) ^ 0x7E))] ^ 0x3D])
                - 49);
  uint64_t v1 = *(void *)(v0 - 4);
  uint64_t v2 = (uint64_t)*(&off_100520A90
                + (byte_100495F28[(byte_100491A04[(75
                                                                                                 * ((qword_1005A6FB0 + v1) ^ 0x7E))
                                                                               - 4] ^ 0xDE)
                                                               - 8] ^ (75 * ((qword_1005A6FB0 + v1) ^ 0x7E)))
                + 111);
  unint64_t v3 = (unint64_t)&v5[*(void *)(v2 - 4) - v1];
  *(void *)(v0 - 4) = 544792907 * v3 + 0x1ED3F820338F2682;
  *(void *)(v2 - 4) = 544792907 * (v3 ^ 0xE12C07DFCC70D97ELL);
  v6[1] = 31090337 * ((v6 & 0xA75F6987 | ~(v6 | 0xA75F6987)) ^ 0x9F21F631) + 1655392376;
  LOBYTE(v2) = 75 * ((*(_DWORD *)(v2 - 4) - *(_DWORD *)(v0 - 4)) ^ 0x7E);
  int v4 = (char *)*(&off_100520A90
               + ((75 * (dword_1005A6FF0 ^ 0x7E ^ qword_1005A6FB0)) ^ byte_100491600[byte_1004A0760[(75 * (dword_1005A6FF0 ^ 0x7E ^ qword_1005A6FB0))] ^ 0xEC])
               - 194)
     - 8;
  (*(void (**)(_DWORD *))&v4[8
                                      * (byte_100491608[(byte_1004A0764[v2 - 4] ^ 0xEC)
                                                                       - 8] ^ v2)
                                      + 35920])(v6);
  __asm { BRAA            X8, X17 }
}

uint64_t sub_100144A10(int a1, int a2, int a3, uint64_t a4, unsigned int a5)
{
  uint64_t v12 = ((a3 & 0xF) * v9 + 139213 - ((4487950 * (unint64_t)((a3 & 0xFu) * v9 + 139213)) >> 32)
                                                * v11);
  char v13 = v6[448];
  v6[448] = v6[v12];
  v6[v12] = v13;
  char v14 = v6[879];
  uint64_t v15 = ((a2 ^ a5) % 0xF * v9
                     + 139644
                     - ((4487950 * (unint64_t)((a2 ^ a5) % 0xF * v9 + 139644)) >> 32) * v11);
  v6[879] = v6[v15];
  v6[v15] = v14;
  char v16 = v6[353];
  uint64_t v17 = ((a1 ^ 0xF19AFF53) % 0xE * v9
                     + 140075
                     - ((4487950 * (unint64_t)((a1 ^ 0xF19AFF53) % 0xE * v9 + 140075)) >> 32) * v11);
  v6[353] = v6[v17];
  v6[v17] = v16;
  int v18 = a2 ^ a3;
  uint64_t v19 = ((v5 ^ 0x3740172Cu) % 0xD * v9
                     + 140506
                     - ((4487950 * (unint64_t)((v5 ^ 0x3740172Cu) % 0xD * v9 + 140506)) >> 32) * v11);
  LOBYTE(v17) = v6[784];
  LODWORD(v12) = (a2 ^ a5) - 1469480100 + (a2 ^ a3 ^ 0xB7CDDE33);
  LODWORD(v12) = ((2 * v12) & 0xDFFAB7F6) + (v12 ^ 0x6FFD5BFB);
  unsigned int v20 = a2 ^ a3 ^ 0x483221CC;
  v6[784] = v6[v19];
  v6[v19] = v17;
  LOBYTE(v19) = v6[258];
  uint64_t v21 = (v20 % 0xC * v9 + 140937 - ((4487950 * (unint64_t)(v20 % 0xC * v9 + 140937)) >> 32) * v11);
  LODWORD(v17) = (v5 ^ 0xEDAE5A3D) + (a2 ^ a3 ^ 0x5A21CF02) + 1;
  int v22 = ((2 * v17) & 0xFFEDFFFE) + (v17 ^ 0xFFF6FFFF);
  v6[258] = v6[v21];
  unsigned int v23 = v20 + (a1 ^ 0x959D864D) - ((2 * (v20 + (a1 ^ 0x959D864D))) & 0xCAC4853E) - 446545249;
  v6[v21] = v19;
  uint64_t v24 = (((int)v12 - 1878875131) % 0xBu * v9
                     + 141368
                     - ((4487950 * (unint64_t)(((int)v12 - 1878875131) % 0xBu * v9 + 141368)) >> 32) * v11);
  LOBYTE(v21) = v6[689];
  v6[689] = v6[v24];
  v6[v24] = v21;
  uint64_t v25 = ((v23 ^ 0xE562429F) % 0xA * v9
                     + 141799
                     - ((4487950 * (unint64_t)((v23 ^ 0xE562429F) % 0xA * v9 + 141799)) >> 32) * v11);
  LODWORD(v21) = (v22 + 589825) % 9u;
  unsigned int v26 = v18 ^ 0xAD506353 ^ v23;
  LOBYTE(v23) = v6[163];
  v6[163] = v6[v25];
  LODWORD(v24) = v12 + v22;
  int v27 = ((2 * (v12 - 1878875131)) & 0xE7EFED7E ^ 0x61008868) + ((v12 - 1878875131) ^ 0xCB77BBCB);
  LODWORD(v12) = v20 - (v12 + v22) + v27 - 1634992280;
  LODWORD(v24) = v24 - (v12 - 2032586424);
  v6[v25] = v23;
  LODWORD(v25) = ((v21 * v9) ^ 0xEBD3FDBF) + ((862 * v21) & 0x3B7E);
  unsigned int v28 = v26 + v27 - 1634992280;
  char v29 = v6[594];
  v6[594] = v6[((int)v25 + 338570711) % ((((552 - v25) & 0x3AD) + ((v25 + 471) & 0x3AD)) | 0x18u)];
  v6[(v21 * v9 + 142230 - ((4487950 * (unint64_t)(v21 * v9 + 142230)) >> 32) * v11)] = v29;
  LODWORD(v25) = v27 - 1190047124;
  char v30 = v6[68];
  unsigned int v31 = (((_BYTE)v12 + 75) & 7) * v9 + 142661;
  uint64_t v32 = (v31 - ((4487950 * (unint64_t)v31) >> 32) * v11);
  v6[68] = v6[v32];
  unsigned int v33 = v28 + 1519049149;
  int v34 = v27 + v12 - 2032586424;
  v6[v32] = v30;
  uint64_t v35 = ((v27 - 1190047124) % 7u * v9
                     + 143092
                     - ((4487950 * (unint64_t)((v27 - 1190047124) % 7u * v9 + 143092)) >> 32) * v11);
  LOBYTE(v32) = v6[499];
  v6[499] = v6[v35];
  v6[v35] = v32;
  LOBYTE(v32) = v6[930];
  uint64_t v36 = (v7
                     + (v28 - 310638119) % 6 * v9
                     - ((4487950 * (unint64_t)(v7 + (v28 - 310638119) % 6 * v9)) >> 32) * v11);
  v6[930] = v6[v36];
  LODWORD(v35) = (v33 - (v12 - 2032586424) - ((2 * (v33 - (v12 - 2032586424)) + 2025060130) & 0xC502BBD2) - 1629791878) ^ v25;
  int v37 = (2 * v35) & 0xBFD7F69E ^ 0x8502B292;
  v6[v36] = v32;
  LOBYTE(v36) = v34 + v37 + ((v33 - (v12 + 72) - ((2 * (v33 - (v12 + 72)) + 34) & 0xD2) + 122) ^ v25 ^ 0xA6);
  LODWORD(v17) = (2 * ((((int)v24 - 1183551621) % 5u) & 3) + ((((int)v24 - 1183551621) % 5u) ^ 0x64F1DABB)) * v9
               + 215150973;
  uint64_t v38 = v17
      - ((((v17 * (unint64_t)v10) >> 32)
                      + ((v17 - ((v17 * (unint64_t)v10) >> 32)) >> 1)) >> 9)
      * v11;
  LOBYTE(v32) = v6[404];
  v6[404] = v6[v38];
  v6[v38] = v32;
  LODWORD(v38) = v7 + (((_BYTE)v36 + 120) & 3) * v9 + 862;
  LOBYTE(v25) = v6[835];
  uint64_t v39 = (v38 - ((4487950 * (unint64_t)v38) >> 32) * v11);
  v6[835] = v6[v39];
  v6[v39] = v25;
  LOBYTE(v36) = ~(v33 - (v12 + 72)) - v36 - 110;
  uint64_t v40 = (v7
                     + (v24 + v33 - 327572408 + v37 + (v35 ^ 0xBD6AA6A6)) % 3 * v9
                     + 1293
                     - ((4487950
                       * (unint64_t)(v7
                                          + (v24 + v33 - 327572408 + v37 + (v35 ^ 0xBD6AA6A6)) % 3
                                          * v9
                                          + 1293)) >> 32)
                     * v11);
  char v41 = v6[309];
  v6[309] = v6[v40];
  v6[v40] = v41;
  LODWORD(v12) = (((v34 - 1884780809) & 0xBAB96DD2 ^ 0xBAB96DD2) + ((v34 - 1884780809) & 0xBAB96DD2))
               * (((v12 - 1653578285) & 0x315A896F ^ 0x315A896F) + ((v12 - 1653578285) & 0x315A896F));
  LODWORD(v12) = ((v12 & 0xFFFFFFFE | v36 & 1) ^ 0xBF55FCBE) + ((2 * v12) & 0x7EABF97C);
  LODWORD(v36) = v12 * v9
               - 566387733
               - (((((v12 * v9 - 566387733) * (unint64_t)v10) >> 32)
                               + ((v12 * v9
                                               - 566387733
                                               - (((v12 * v9 - 566387733) * (unint64_t)v10) >> 32)) >> 1)) >> 9)
               * v11;
  char v42 = v6[740];
  LODWORD(v12) = (v12 + (((v36 | 0x74) - (v36 & 0x18B) + 395) & 0x143)) * v9 - 566526946;
  v6[740] = v6[v36];
  v6[v12
   - ((((v12 * (unint64_t)v10) >> 32)
                   + ((v12 - ((v12 * (unint64_t)v10) >> 32)) >> 1)) >> 9)
   * v11] = v42;
  unsigned int v43 = ((((v8 - 1925177184) & 0x72BFDF78 ^ 0xAFCu) + 282347580) >> 4) * v9 + 279719;
  LOBYTE(v43) = *(unsigned char *)(STACK[0x710] + (v43 - ((4487950 * (unint64_t)v43) >> 32) * v11));
  uint64_t v44 = (unsigned __int16)(69
                         * (*(unsigned __int8 *)(STACK[0x710] + (279719 - 292 * v11)) ^ 0xB7 ^ (((16 * v43) ^ 0xC0) - 32 * (v43 & 3) + 60) & 0xFC)
                         + 1311)
      % 0x3A0u;
  int v45 = (char *)*(&off_100520A90 + (v8 ^ 0xDB9)) - 4;
  LODWORD(v44) = (v45[v44] ^ 0xBD ^ (((v45[v44] >> 3) ^ 0xF ^ (v45[v44] >> 7))
                                                                     - ((2 * ((v45[v44] >> 3) ^ 0xF)) & 0x10)
                                                                     - 24))
               * v9
               + 139213;
  unsigned int v46 = 282347580 * v9 - 1432431767;
  *(unsigned char *)(STACK[0x710]
           + v46
           - ((((v46 * (unint64_t)v10) >> 32)
                           + ((v46 - ((v46 * (unint64_t)v10) >> 32)) >> 1)) >> 9)
           * v11) = *(unsigned char *)(STACK[0x710]
                             + (v44 - ((4487950 * (unint64_t)v44) >> 32) * v11));
  return (*(uint64_t (**)(uint64_t))(STACK[0x6F8] + 8 * v8))(598855755);
}

uint64_t sub_100145248()
{
  int v5 = *(unsigned __int8 *)(v1 + v3 - 0x3D216B2588EDA0DFLL) - *(unsigned __int8 *)(v0 + v3 - 0x3D216B2588EDA0DFLL);
  return (*(uint64_t (**)(uint64_t))(v4
                                            + 8
                                            * ((1214 * ((v5 ^ 0x37F77DEF) + ((2 * v5) & 0x6FEEFBDE) == 938966511)) ^ v2)))(255);
}

void sub_1001452B4()
{
  if ((*(_DWORD *)(v2 - 0x49230D716B37AE00) - 330117363) >= 0x7FFFFFFF) {
    int v3 = v1;
  }
  else {
    int v3 = v1 + 2;
  }
  *(_DWORD *)(v0 + 12) = v3;
}

uint64_t sub_1001452E8(uint64_t a1, int a2)
{
  unsigned int v6 = (v5 + 976391161) & 0xC5CD7F9F;
  uint64_t v7 = *(void *)(v4 - 0x69166E42B3299573);
  int v8 = *(unsigned __int8 *)(v7 + (v3 - 690954961)) ^ 0x60;
  int v9 = ((*(unsigned __int8 *)(v7 + v3 - 690955879 + v6 - 2934) ^ 0x60) << (((((v5 - 7) & 0x9F) + 53) & 0xF4) - 36)) | ((*(unsigned __int8 *)(v7 + (v3 - 690954964)) ^ 0x60) << 24) | ((*(unsigned __int8 *)(v7 + (v3 - 690954962)) ^ 0x60) << 8) | v8;
  BOOL v10 = a2
      - *(_DWORD *)(a1 + 28)
      + ((v9 - 557495541 - 2 * (v9 & 0x5EC54B1F ^ v8 & 0x14) + 0x1000000) & 0xFFFFFF ^ 0xC54B0B) != -366741612;
  return (*(uint64_t (**)(void))(v2 + 8 * (int)(((8 * v10) | (16 * v10)) ^ v6)))();
}

uint64_t sub_1001453F4(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v7
                              + 8
                              * ((((v3 & (2 * (*(unsigned __int8 *)(v6 + 8) - 5)))
                                 + ((v4 - 1968373044) & 0x7552FF2A ^ (v5 - 442) ^ (*(unsigned __int8 *)(v6 + 8) - 5)) == a3)
                                * (v4 + 1311)) ^ v4)))();
}

uint64_t sub_100145450(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,int a38,char a39,long long a40)
{
  if (v42 == 1150886427 || v42 == 1150886430)
  {
    unsigned int v48 = v40 - 3522;
    *(unsigned char *)(v47 - 169) = *(unsigned char *)(v45 - 0x3E8923C4CCFEA017)
                          - ((2 * *(unsigned char *)(v45 - 0x3E8923C4CCFEA017)) & 0xC0)
                          + 96;
    *(unsigned char *)(v47 - 170) = *(unsigned char *)(v45 - 0x3E8923C4CCFEA018)
                          - ((*(unsigned __int8 *)(v45 - 0x3E8923C4CCFEA018) << ((v40 + 62) ^ 0x79)) & 0xC0)
                          + 96;
    *(unsigned char *)(v47 - 171) = *(unsigned char *)(v45 - 0x3E8923C4CCFEA019)
                          - ((2 * *(unsigned char *)(v45 - 0x3E8923C4CCFEA019)) & 0xC0)
                          + 96;
    *(unsigned char *)(v47 - 172) = *(unsigned char *)(v45 - 0x3E8923C4CCFEA01ALL)
                          - ((2 * *(unsigned char *)(v45 - 0x3E8923C4CCFEA01ALL)) & 0xC0)
                          + 96;
    *(unsigned char *)(v47 - 173) = *(unsigned char *)(v45 - 0x3E8923C4CCFEA01BLL)
                          - ((2 * *(unsigned char *)(v45 - 0x3E8923C4CCFEA01BLL)) & 0xC0)
                          + 96;
    *(unsigned char *)(v47 - 174) = *(unsigned char *)(v45 - 0x3E8923C4CCFEA01CLL)
                          - ((2 * *(unsigned char *)(v45 - 0x3E8923C4CCFEA01CLL)) & 0xC0)
                          + 96;
    *(unsigned char *)(v47 - 175) = *(unsigned char *)(v45 - 0x3E8923C4CCFEA01DLL)
                          - ((2 * *(unsigned char *)(v45 - 0x3E8923C4CCFEA01DLL)) & 0xC0)
                          + 96;
    *(unsigned char *)(v47 - 176) = *(unsigned char *)(v45 - 0x3E8923C4CCFEA01ELL)
                          - ((2 * *(unsigned char *)(v45 - 0x3E8923C4CCFEA01ELL)) & 0xC0)
                          + 96;
    *(unsigned char *)(v47 - 177) = *(unsigned char *)(v45 - 0x3E8923C4CCFEA01FLL)
                          - ((2 * *(unsigned char *)(v45 - 0x3E8923C4CCFEA01FLL)) & 0xC0)
                          + 96;
    *(unsigned char *)(v47 - 178) = *(unsigned char *)(v45 - 0x3E8923C4CCFEA020)
                          - ((2 * *(unsigned char *)(v45 - 0x3E8923C4CCFEA020)) & 0xC0)
                          + 96;
    *(unsigned char *)(v47 - 179) = *(unsigned char *)(v45 - 0x3E8923C4CCFEA021)
                          - ((2 * *(unsigned char *)(v45 - 0x3E8923C4CCFEA021)) & 0xC0)
                          + 96;
    *(unsigned char *)(v47 - 180) = *(unsigned char *)(v45 - 0x3E8923C4CCFEA022)
                          - ((2 * *(unsigned char *)(v45 - 0x3E8923C4CCFEA022)) & 0xC0)
                          + 96;
    *(unsigned char *)(v47 - 181) = *(unsigned char *)(v45 - 0x3E8923C4CCFEA023)
                          - ((2 * *(unsigned char *)(v45 - 0x3E8923C4CCFEA023)) & 0xC0)
                          + 96;
    *(unsigned char *)(v47 - 182) = *(unsigned char *)(v45 - 0x3E8923C4CCFEA024)
                          - ((2 * *(unsigned char *)(v45 - 0x3E8923C4CCFEA024)) & 0xC0)
                          + 96;
    *(unsigned char *)(v47 - 183) = *(unsigned char *)(v45 - 0x3E8923C4CCFEA025)
                          - ((2 * *(unsigned char *)(v45 - 0x3E8923C4CCFEA025)) & 0xC0)
                          + 96;
    int v49 = *(unsigned __int8 *)(v45 - 0x3E8923C4CCFEA026)
        - (*(unsigned __int8 *)(v45 - 0x3E8923C4CCFEA026) >> 5 << 6)
        + 96;
  }
  else
  {
    unsigned int v48 = (v40 + 1300534206) & 0xB27B5E7F;
    *(unsigned char *)(v47 - 169) = HIBYTE(a40);
    uint64_t v50 = v47 - 208;
    *(_DWORD *)(v50 + 35) = *(_DWORD *)((char *)&a40 + 11);
    *(void *)(v50 + 27) = *(void *)((char *)&a40 + 3);
    *(_WORD *)(v50 + 25) = *(_WORD *)((char *)&a40 + 1);
    LOBYTE(v49) = a40;
  }
  *(unsigned char *)(v47 - 184) = v49;
  int v51 = 1314530549 * ((v47 - 168 - 2 * ((v47 - 168) & 0xF2744A8E) - 227259762) ^ 0x437DCC40);
  unsigned int v52 = ((*v46 ^ 0x795FEDFF) - 403245120 + ((2 * *v46) & 0xF2BFDBFE)) ^ v51;
  BOOL v53 = (void *)(v47 - 208);
  v53[9] = v45 - 0x3E8923C4CCFEA012;
  v53[11] = v44;
  v53[12] = v45 + 0x31ED4AF2C0309EC6;
  *(_DWORD *)(v47 - 128) = v52;
  *(_DWORD *)(v47 - 144) = v51 + v48 + 626;
  *(_DWORD *)(v47 - 152) = (v42 - 866053594) ^ v51;
  *(unsigned char *)(v47 - 1memset((void *)(STACK[0x7D8] + 8), 91, 48) = -11 * ((v47 + 88 - 2 * ((v47 + 88) & 0x8E) - 114) ^ 0x40) - 59;
  v53[5] = &a39;
  v53[6] = v47 - 184;
  uint64_t v54 = (*(uint64_t (**)(uint64_t))(v43 + 8 * (int)(v48 ^ 0x1215)))(v47 - 168);
  return (*(uint64_t (**)(uint64_t))(v43
                                            + 8
                                            * (int)(((*(_DWORD *)(v47 - 140) == v41)
                                                   * ((((v48 + 1930) | 0x638) ^ 0x3B7) + ((v48 + 738898054) & 0xD3F54F7F))) ^ v48)))(v54);
}

uint64_t sub_100145878(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17, int a18)
{
  *(void *)(*(void *)(a16 + 96) + 504) = v18 + 1;
  *(_DWORD *)(*(void *)(a16 + 96) + 496) = a18 - 1;
  int v21 = 673918253 * ((((v20 - 152) | 0x27F168CB) - ((v20 - 152) & 0x27F168CB)) ^ 0xBDB97363);
  *(void *)(v20 - 136) = v20 + 0x560E26B5DF241D28;
  *(_DWORD *)(v20 - 1memset((void *)(STACK[0x7D8] + 8), 91, 48) = v21 ^ 0xCAC2E101;
  *(_DWORD *)(v20 - 144) = v21 - 452158170;
  uint64_t v22 = (*(uint64_t (**)(uint64_t))(v19 + 37824))(v20 - 152);
  return (*(uint64_t (**)(uint64_t))(v19
                                            + 8
                                            * ((1852
                                              * (a18
                                               + 1913107395
                                               + ((2 * *(_DWORD *)(v20 - 184)) & 0x1A ^ 0x12)
                                               + (*(_DWORD *)(v20 - 184) & 0x3F ^ 0x71BFE796u) < 0xFFFFFFC0)) ^ 0x8C7u)))(v22);
}

uint64_t sub_100145A64(uint64_t a1, int a2)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * (((((a2 - 2678) | 0x1002) ^ 0x1046) * ((v3 + v2 + 100668426) > 7)) | a2)))();
}

uint64_t sub_100145AC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, uint64_t a14, int a15, uint64_t a16, unsigned int a17)
{
  unsigned int v23 = ((&a13 & 0x92C862E6 | ~(&a13 | 0x92C862E6)) ^ 0xAAB6FD50) * v22;
  a15 = v23 + v21 + 2915;
  a17 = (v18 ^ 0xE7B6FF6C) + ((2 * v18) & 0xCF6DFED8) - v23 + 981328636;
  a14 = v17;
  a16 = a12;
  uint64_t v24 = (*(uint64_t (**)(int *))(v19 + 8 * (v21 + 3572)))(&a13);
  return (*(uint64_t (**)(uint64_t))(v19
                                            + 8
                                            * (int)(((a13 == v20) * (((v21 + 872004155) & 0xCC06496A) + 3366)) ^ v21)))(v24);
}

void sub_100145B90()
{
}

uint64_t sub_100145C04()
{
  LODWORD(STACK[0x700]) = v1 - 49193936;
  unsigned int v2 = LODWORD(STACK[0x5D4]) - 1029375076;
  BOOL v3 = v2 < v0 - 1505464988;
  if (v2 >= v0 - 1505464988) {
    BOOL v3 = v2 > 0xA644777C;
  }
  return (*(uint64_t (**)(void))(STACK[0x6F8] + 8 * ((4690 * v3) ^ (v0 - 1728))))();
}

uint64_t sub_10014602C(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, int a6)
{
  *(void *)(a3 + (v9 + v6)) = *(void *)(v8 + (v9 + v6));
  return (*(uint64_t (**)(void))(v10 + 8 * (((a6 == 0) * v7) ^ a4)))();
}

uint64_t sub_10014605C@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(a1 + 8 * ((23 * (v1 == 473457775)) ^ 0x702u)))();
}

uint64_t sub_100146088@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  int v6 = 28 * (v3 ^ 0x197);
  *(unsigned char *)(v2 + a2 + a1) = v4;
  BOOL v7 = a2 + 1 + a1 < (unint64_t)(v6 - 360) + 32;
  return (*(uint64_t (**)(void))(v5 + 8 * (v7 | (16 * v7) | v6)))();
}

uint64_t sub_1001460CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19)
{
  return (*(uint64_t (**)(void))(v20 + 8 * ((2704 * (a19 == 137 * (v19 ^ 0x75E) + 847199633)) ^ v19)))();
}

uint64_t sub_100146110@<X0>(int a1@<W0>, uint64_t a2@<X6>, int a3@<W8>)
{
  LODWORD(STACK[0x638]) = v5;
  LODWORD(STACK[0x630]) = v3 ^ 0xEB4529DB;
  LODWORD(STACK[0x634]) = a1 + 1207795197;
  LODWORD(STACK[0x62C]) = v4 - 1049162420;
  unsigned int v6 = LODWORD(STACK[0x5D4]) + 660155114;
  BOOL v7 = v6 < 0xAF8A6C9;
  if (v6 >= 0xAF8A6C9) {
    BOOL v7 = v6 > 0xAF8A6CA;
  }
  return (*(uint64_t (**)(void))(a2 + 8 * ((991 * !v7) ^ a3)))();
}

uint64_t sub_10014653C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,unsigned int a21,uint64_t a22,unsigned int a23)
{
  uint64_t v29 = v26 + 32 * (v27 - 98);
  uint64_t v30 = *(void *)(v29 + 8);
  int v31 = *(_DWORD *)v29 ^ 0x2BFCE76A;
  int v32 = (*(_DWORD *)v29 << (((v24 - 23) | 4) - 70)) & 0x57F9CED4;
  unsigned int v33 = (&a19 ^ 0xC7816049) * v23;
  a21 = v24 - 379 + v33;
  a20 = v30;
  a23 = v31 - v33 + v32 - 164103426;
  a22 = a18;
  (*(void (**)(char *))(v28 + 8 * (v24 ^ 0x32A)))(&a19);
  int v34 = *(_DWORD *)(v29 + 16);
  unsigned int v35 = ((2 * (&a19 & 0x60F97698) - &a19 - 1626961566) ^ 0x5887E92B) * v23;
  a20 = *(void *)(v29 + 24);
  a23 = (v34 ^ 0xE27FFBFE) - v35 + ((2 * v34) & 0xC4FFF7FC) + 1068820074;
  a22 = a18;
  a21 = v24 - 379 + v35;
  uint64_t v36 = (*(uint64_t (**)(char *))(v28 + 8 * (v24 + 278)))(&a19);
  return (*(uint64_t (**)(uint64_t))(v28 + 8 * ((200 * (v25 <= (v27 - 97))) ^ v24)))(v36);
}

uint64_t sub_100146690@<X0>(unsigned int a1@<W0>, unsigned int a2@<W1>, unint64_t a3@<X2>, int a4@<W3>, void *a5@<X4>, int a6@<W5>, uint64_t a7@<X6>, int a8@<W7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32)
{
  uint64_t v46 = 4 * (v35 + 1 + a8);
  unint64_t v47 = (*(_DWORD *)(a32 + v46) ^ v32)
      + (v45 ^ HIDWORD(v44))
      + a2 * (unint64_t)((v43 - 1390658608) & v38 ^ a1 ^ *(_DWORD *)(*a5 + v46));
  unint64_t v48 = (*(_DWORD *)(*v37 + v46) ^ v32) * a7
      + HIDWORD(a3)
      + ((v47 + a6 - ((2 * v47) & 0x4E856A02u)) ^ v40);
  *(_DWORD *)(a32 + 4 * (v35 + a8)) = v48 + v32 - (a4 & (2 * v48));
  int v49 = v35 + v33;
  LODWORD(v47) = (v36 > v42) ^ (v49 < v34);
  BOOL v50 = v49 < a9;
  if (v47) {
    BOOL v50 = v36 > v42;
  }
  return (*(uint64_t (**)(void))(v41 + 8 * ((!v50 * v39) ^ v43)))();
}

uint64_t sub_100146768()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((((v0 - 1308637707) & 0x4E003FDF ^ 0x649) + 211 * (v0 ^ 0x9D8)) * (v1 == 847161035)) ^ v0)))();
}

uint64_t sub_1001467C8@<X0>(uint64_t a1@<X0>, int a2@<W4>, int a3@<W6>, int a4@<W8>)
{
  *(unsigned char *)(a1 + (a2 + v5)) = *(unsigned char *)(v4 + (a2 + v5));
  return (*(uint64_t (**)(void))(v7
                              + 8 * ((3263 * (a2 - 1 == ((a3 + 2021510396) & 0xD8600F5F) + a4)) ^ (v6 + a3 + 1310))))();
}

uint64_t sub_10014681C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t *))(v68 + 6240))(a1, a2, a3, a4, 3416021667, 3152076800, 2948559454, 1346407841, a9, &a68);
}

uint64_t sub_10014694C@<X0>(int a1@<W8>)
{
  uint64_t v3 = (*(uint64_t (**)(void))(v2 + 8 * (a1 ^ 0x1FC3)))();
  STACK[0x5B0] = 0;
  return v1(v3);
}

void sub_100146970(uint64_t a1, uint64_t a2)
{
  if (a1) {
    BOOL v2 = a2 == 0;
  }
  else {
    BOOL v2 = 1;
  }
  int v3 = v2;
  __asm { BRAA            X8, X17 }
}

uint64_t sub_1001469E0@<X0>(unsigned int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((87 * (((a1 < 0x20) ^ ((v1 - 15) ^ (-127 * (v1 ^ 0x9C)))) & 1)) ^ v1)))();
}

uint64_t sub_100146A20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, char *a14, uint64_t a15, int a16, char a17, unint64_t *a18, char *a19, char *a20,uint64_t a21,unint64_t *a22)
{
  LODWORD(a19) = (v23 + 831) ^ (1401278017
                              * ((&a18 & 0xDBBBC775 | ~(&a18 | 0xDBBBC775)) ^ 0x20674E6D));
  a18 = &STACK[0x5C6E4E9DBA245395];
  a22 = &STACK[0x72B1F83D1B5D1C85];
  a20 = a14;
  (*(void (**)(unint64_t **))(v24 + 8 * (v23 ^ 0x19B0)))(&a18);
  HIDWORD(a18) = (v23 - 644) ^ (((((2 * &a18) | 0xDD524D34) - &a18 + 290904422) ^ 0x5FA0A054)
                              * v22);
  a19 = a14;
  a20 = &a17;
  (*(void (**)(unint64_t **))(v24 + 8 * (v23 ^ 0x19B2)))(&a18);
  a19 = a14;
  LODWORD(a20) = v23
               - 476588053 * ((&a18 & 0x58E4F5B1 | ~(&a18 | 0x58E4F5B1)) ^ 0x1AE60E0D)
               - 301;
  uint64_t v25 = (*(uint64_t (**)(unint64_t **))(v24 + 8 * (v23 ^ 0x19D3)))(&a18);
  return (*(uint64_t (**)(uint64_t))(v24
                                            + 8
                                            * ((71 * (a18 != v23 + 847203058 + (v23 ^ 0x953) - 3675)) ^ v23)))(v25);
}

uint64_t sub_100146BB4(int a1, double a2, int8x16_t a3, double a4, double a5, int8x16_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10)
{
  *uint64_t v12 = vaddq_s8(vsubq_s8(*(int8x16_t *)(v13 + (v10 + a1)), vandq_s8(vaddq_s8(*(int8x16_t *)(v13 + (v10 + a1)), *(int8x16_t *)(v13 + (v10 + a1))), a6)), a3);
  return (*(uint64_t (**)(void))(v14 + 8 * (a10 + v11 + 935)))();
}

uint64_t sub_100146C0C@<X0>(int a1@<W3>, int a2@<W6>, int a3@<W8>)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (a2
                               + a1
                               + (((a3 == (((a1 ^ (a1 + 1)) + 1975) ^ (v4 - 1366))) ^ 0x6B)
                                + 2 * (a3 == (((a1 ^ (a1 + 1)) + 1975) ^ (v4 - 1366))) == 107)
                               * ((181 * (a1 ^ (a1 + 1))) ^ 0x21B)
                               - 485)))();
}

uint64_t sub_100146C74(int a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  BOOL v7 = v4 < a4;
  if (v7 == v5 - 0x5EB694F0B3E2093ELL < a4 + ((a1 + 1449133312) & 0xA99FFAFA) - 536) {
    BOOL v7 = v5 - 0x5EB694F0B3E2093ELL < v4;
  }
  return (*(uint64_t (**)(void))(v6 + 8 * ((62 * v7) ^ a1)))();
}

void sub_100146CEC(uint64_t a1)
{
  int v1 = 142545853 * (((a1 | 0xDB6CA151) - (a1 & 0xDB6CA151)) ^ 0xF1930E3E);
  int v2 = *(_DWORD *)(a1 + 16) ^ v1;
  __asm { BRAA            X14, X17 }
}

uint64_t sub_100146DBC()
{
  return (*(uint64_t (**)(void))(v0 + 8 * ((((v1 ^ 0x9F8) == 141) * ((v1 - 2366) ^ 0x8D)) ^ (v1 + 1239))))();
}

uint64_t sub_100146E24(uint64_t a1, int a2)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((402
                                * (((a2 + v3 + (v2 ^ 0xDA265B9D) + 735690732 < 8) ^ ((v2 ^ 0x22) - 54)) & 1)) ^ v2 ^ 0x122)))();
}

uint64_t sub_100146E9C@<X0>(unsigned int a1@<W2>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, unsigned int a11)
{
  BOOL v13 = a11 < a1;
  if (v13 == v11 - 1359741462 < a1) {
    BOOL v13 = v11 - 1359741462 < a11;
  }
  return (*(uint64_t (**)(void))(v12 + 8 * ((!v13 * (((a2 - 561230557) & 0x2173A9F7) - 126)) ^ a2)))();
}

uint64_t sub_100146F10()
{
  BOOL v4 = (v0 ^ 0x24u) < (((v1 + 662708) | 0x24244850) ^ (v3 + 8));
  return (*(uint64_t (**)(void))(v2 + 8 * ((2 * v4) | (16 * v4) | v1)))();
}

uint64_t sub_100146F54(uint64_t a1, int a2, int a3, int a4, int a5)
{
  uint64_t v8 = (a5 - 32 + a4);
  long long v9 = *(_OWORD *)(v5 + v8 - 15);
  long long v10 = *(_OWORD *)(v5 + v8 - 31);
  uint64_t v11 = a1 + v8;
  *(_OWORD *)(v11 - 15) = v9;
  *(_OWORD *)(v11 - 31) = v10;
  return (*(uint64_t (**)(void))(v7 + 8 * (((a3 == 32) | (8 * (a3 == 32))) ^ (v6 + a2 + 893))))();
}

uint64_t sub_100146F60@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3)
{
  return sub_100146FBC(a3 - 0x49230D716B37ADFCLL, a1 - 0x49230D716B37ADFCLL, 0x4CBF66FA4FFFB4EELL, 2684316124, 0xB37EFF8FB3B3EBFCLL, 2676);
}

uint64_t sub_100146FBC(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  uint64_t v20 = 4 * (v16 + v13);
  int v21 = v6 + v19 + (*(_DWORD *)(*a1 + v20) ^ v14);
  *(_DWORD *)(*a2 + v20) = v21 + (v7 ^ (v14 + 32)) - (v17 & (2 * v21));
  BOOL v22 = v18 > v12;
  LODWORD(v20) = v16 + 1 + v9;
  int v23 = v22 ^ ((int)v20 < v10);
  BOOL v24 = (int)v20 < v11;
  if (!v23) {
    BOOL v22 = v24;
  }
  return (*(uint64_t (**)(void))(v15 + 8 * ((v22 * a6) ^ v8)))();
}

uint64_t sub_100147044(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  *(void *)(a1 + (a2 - v6)) = *(void *)(v7 + (a2 - v6));
  return (*(uint64_t (**)(void))(v11 + 8 * (((v10 + v6 - 1902 == v9) * a6) ^ v8)))();
}

void sub_100147074(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16) ^ (1401278017 * (a1 ^ 0x42376E7));
  __asm { BRAA            X8, X17 }
}

uint64_t sub_100147138(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,int a51,int a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  uint64_t v75 = (*(uint64_t (**)(void, void, void, void, unint64_t *, uint64_t, uint64_t, unint64_t *))(v69 + 8 * (v70 + 888)))(*v71, (v68 + v64), a52 ^ 0xE7B0893A, v71[13] - 1112947685, &STACK[0x1858], v66, v67, &STACK[0x5B0]);
  int v77 = (v75 ^ (v70 - 22157147)) + 662428924 + ((2 * v75) & 0xFD5BEFEA);
  if (v77 == 908711156) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(v69
  }
                                                       + 8
                                                       * (((v73 - 1620309230 < ((373 * (v72 ^ 0x986)) ^ 0x45Cu))
                                                         * (((v72 - 2428) | 0x542) - 1300)) ^ (v72 + 1552))))(v75, v76);
  if (v77 != 640275697)
  {
    int v78 = 142545853 * ((-1786296635 - ((v74 - 192) | 0x958746C5) + ((v74 - 192) | 0x6A78B93A)) ^ 0x40871655);
    LODWORD(STACK[0x2C8]) = v77;
    *(_DWORD *)(v74 - 192) = v77 - v78 + ((v72 - 220089743) & 0xD1E4D7B ^ 0xC557F73);
    *(_DWORD *)(v74 - 176) = (v72 + 1398) ^ v78;
    *(void *)(v74 - 184) = a40;
    (*(void (**)(uint64_t))(v69 + 8 * (v72 ^ 0x1BB6)))(v74 - 192);
    LODWORD(STACK[0x2C0]) = v73;
    unsigned int v85 = (char *)&STACK[0x5C0] + STACK[0x2D8];
    STACK[0x2A8] = (unint64_t)(v85 + 2048);
    STACK[0x2B0] = (unint64_t)(v85 + 2176);
    STACK[0x2D0] = (unint64_t)v85;
    STACK[0x2B8] = (unint64_t)(v85 + 2304);
    JUMPOUT(0x100129404);
  }
  (*(void (**)(void, uint64_t, uint64_t))(v69 + 8 * (v72 + 2240)))(*a64, v66, v67);
  STACK[0x470] = 0;
  LODWORD(STACK[0x354]) = 0;
  unsigned int v80 = v71[13];
  unint64_t v81 = STACK[0x460];
  int v82 = 1314530549 * ((((2 * (v74 - 192)) | 0x23030470) - (v74 - 192) - 293700152) ^ 0xA08804F6);
  *(_DWORD *)(v74 - 144) = v82
                         + (LODWORD(STACK[0x3C4]) ^ 0xFFF5FFDF)
                         + ((2 * LODWORD(STACK[0x3C4])) & 0xFFEBFFBE)
                         + 2142221744;
  *(_DWORD *)(v74 - 160) = ((v65 & 0xBDFBFEC2 ^ 0x8D611240)
                          - 134792513
                          + (((v72 ^ 0x738) + 2147479874) & a52 ^ 0xB94D765B)) ^ v82;
  *(_DWORD *)(v74 - 192) = (v72 - 2309) ^ v82;
  *(void *)(v74 - 152) = &STACK[0x5B0];
  *(_DWORD *)(v74 - 176) = v80 - v82 + 345964091;
  *(void *)(v74 - 184) = a50;
  *(void *)(v74 - 168) = v81;
  uint64_t v83 = (*(uint64_t (**)(uint64_t))(v69 + 8 * (v72 ^ 0x1B23)))(v74 - 192);
  int v84 = *(_DWORD *)(v74 - 172);
  LODWORD(STACK[0x4A4]) = v84;
  return (*(uint64_t (**)(uint64_t))(v69 + 8 * ((699 * (v84 == 847203058)) ^ (v72 - 1298))))(v83);
}

uint64_t sub_1001471D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
  HIDWORD(a19) = -1851408451;
  int v30 = *(_DWORD *)(a2 + 4);
  uint64_t v31 = *(void *)(a2 + 8);
  unsigned int v32 = 142545853
      * (((&a22 | 0x85139A29) - &a22 + (&a22 & 0x7AEC65D0)) ^ 0xAFEC3546);
  a25 = a14;
  a26 = a13;
  a28 = a16;
  a23 = v31;
  a22 = a15;
  LODWORD(a27) = 2350 - v32;
  HIDWORD(a27) = 473959065 - v32 + v30;
  HIDWORD(a10) = v28;
  (*(void (**)(uint64_t *))(v29 + 8 * HIDWORD(a18)))(&a22);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v29 + 8 * ((1530 * (a24 == 847203058)) ^ 0x151u)))(524000624, a2, 1019981118, 523998673, 473454526, 232883929, 3770972023, a8, a9, a10, a2, a8, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28);
}

uint64_t sub_100147304@<X0>(int a1@<W5>, int a2@<W7>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(void))(a3 + 8 * (((((v3 == 0) ^ ((a2 + 32) ^ (a2 - 1))) & 1) * a1) ^ a2)))();
}

uint64_t sub_100147334@<X0>(uint64_t a1@<X1>, int a2@<W3>, uint64_t a3@<X5>, uint64_t a4@<X7>, uint64_t a5@<X8>)
{
  *(unsigned char *)(a3 + (v8 + v5 + 2892)) = *(unsigned char *)(a5 + a4 + a1)
                                                  - ((2 * *(unsigned char *)(a5 + a4 + a1)) & 0xC0)
                                                  + 96;
  return (*(uint64_t (**)(void))(v7
                              + 8
                              * (((a2 + v5 + 1) > 0x3F) | (4 * ((a2 + v5 + 1) > 0x3F)) | v6)))();
}

void sub_100147394()
{
  _DWORD *v1 = v0 + 21;
}

uint64_t sub_1001473A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15, unsigned int a16)
{
  if (a16 < 0xD706082A != (v17 - 1564588178) < 0xD706082A) {
    BOOL v18 = (v17 - 1564588178) < 0xD706082A;
  }
  else {
    BOOL v18 = v17 - 1564588178 > a16;
  }
  return (*(uint64_t (**)(uint64_t))(v16 + 8 * ((901 * !v18) ^ (a5 - 176914987))))(3417849604);
}

uint64_t sub_100147438(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  BOOL v9 = (unint64_t)&STACK[0xB00] + v7 - STACK[0x420] + ((v8 - 467) ^ 0x126A40D6E41D9352) > 0xF;
  return (*(uint64_t (**)(void))(a7 + 8 * (((4 * v9) | (8 * v9)) ^ v8)))();
}

void sub_1001474A8(uint64_t a1, uint64_t a2)
{
  __asm { BRAA            X9, X17 }
}

uint64_t sub_10014750C()
{
  unint64_t v1 = STACK[0x258];
  uint64_t v2 = (*(uint64_t (**)(uint64_t))(STACK[0x258] + 8 * (v0 ^ 0x1F07)))(32);
  STACK[0x630] = v2;
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((((v0 - 710438206) & 0x2A58647F ^ 0xDF8 ^ ((v0 - 3059) | 0x882)) * (v2 != 0)) ^ v0)))();
}

uint64_t sub_100147584@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v22 + 8 * ((39 * (((*((_DWORD *)&a21 + 6 * (a9 - 202856324)) + (int)a7) & 0xFFFFFFFFFFFFFFELL) == 2)) ^ v21)))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11);
}

uint64_t sub_100147634()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((3493 * (v0 > (((LODWORD(STACK[0x2E4]) ^ 0xCE1) - 649) ^ (v1 + 964)))) ^ (LODWORD(STACK[0x2E4]) - 1706))))();
}

uint64_t sub_100147670@<X0>(int a1@<W8>)
{
  unsigned int v4 = v1 + a1 - ((((v1 + a1) << ((v2 - 91) ^ 0x15)) + 1559769044) & 0xC3367852) - 1877519341;
  LODWORD(STACK[0x6C4]) = v4;
  uint64_t v5 = (*(uint64_t (**)(void))(v3 + 8 * (v2 ^ 0x253)))(v4 ^ ((v2 ^ 0x19A5) - 509922721));
  unint64_t v6 = STACK[0x258];
  STACK[0x6F0] = v5 + 0x3415BE982BE930ALL;
  return (*(uint64_t (**)(void))(v6 + 8 * ((254 * (v5 != 0)) ^ v2)))();
}

uint64_t sub_100147720()
{
  return (*(uint64_t (**)(void))(v2 + 8
                                   * ((((1253 * (v1 ^ 0xECA)) ^ 0x9F6) * (*(_DWORD *)(v0 + 72) == 189260953)) ^ v1)))();
}

void sub_100147760(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16) + 366490169 * ((~a1 & 0xB3FF5545 | a1 & 0x4C00AABA) ^ 0xA5510301);
  __asm { BRAA            X8, X17 }
}

uint64_t sub_10014782C(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v5 + 8 * ((((a4 ^ 0x174C) - 1914) * ((unint64_t)(v4 - a1) > 0x1F)) ^ a4)))();
}

uint64_t sub_100147864@<X0>(uint64_t a1@<X1>, uint64_t a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v6
                                                                                         + 8
                                                                                         * ((2358 * (v8 + 1 == v7 + 44)) ^ v5)))(a4, a1, a5, a2, a3, a5);
}

uint64_t sub_100147928()
{
  void *v1 = v5;
  return (*(uint64_t (**)(void))(v4 + 8 * (((v3 == 0) * v2) ^ v0)))();
}

uint64_t sub_10014794C@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50)
{
  unint64_t v54 = STACK[0x470];
  unsigned int v55 = (v52 + 1299) ^ LODWORD(STACK[0x53C]) ^ 0xF6BFB68D;
  unsigned int v56 = (2 * LODWORD(STACK[0x53C])) & 0xED7F7FFE;
  int v57 = 366490169 * ((-2103383330 - ((v53 - 192) | 0x82A0EADE) + ((v53 - 192) | 0x7D5F1521)) ^ 0x6BF14365);
  *(_DWORD *)(v53 - 192) = v50 - v57 + 1182401882;
  *(_DWORD *)(v53 - 144) = v55 - v57 + v56 + 1811414946;
  *(_DWORD *)(v53 - 140) = v57 + v52 + 1106912841;
  *(void *)(v53 - 160) = a50;
  *(void *)(v53 - 152) = a49;
  *(void *)(v53 - 184) = v54;
  *(void *)(v53 - 176) = a1;
  uint64_t v58 = (*(uint64_t (**)(uint64_t))(v51 + 8 * (v52 + 3531)))(v53 - 192);
  int v59 = *(_DWORD *)(v53 - 168);
  LODWORD(STACK[0x4A4]) = v59;
  return (*(uint64_t (**)(uint64_t))(v51 + 8 * ((3918 * (v59 == 847203058)) ^ v52)))(v58);
}

uint64_t sub_100147A50()
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((((v0 - 1553366440) & 0x5C967EFF) - 319) ^ v0 ^ (v0 - 10))))();
}

uint64_t sub_100147AB0@<X0>(unsigned char *a1@<X5>, int a2@<W8>)
{
  unsigned int v10 = v2 + 16;
  uint64_t v11 = v10 - 16;
  unsigned int v12 = v5 + (v11 >> 4) - (v4 & (v11 >> 3));
  a1[12] = (HIBYTE(v12) ^ 0x3E) - 2 * ((HIBYTE(v12) ^ 0x3E) & 0xE1 ^ HIBYTE(v12) & 1) + 96;
  a1[13] = (v6 ^ BYTE2(v12)) - ((2 * (v6 ^ BYTE2(v12))) & 0xC0) + 96;
  a1[14] = (v7 ^ BYTE1(v12)) - ((2 * (v7 ^ BYTE1(v12))) & 0xC0) + 96;
  a1[15] = v12 ^ 0x80;
  *(unsigned char *)(v3 + v11) ^= *a1 ^ 0x60;
  *(unsigned char *)(v3 + v10 - 15) ^= a1[1] ^ 0x60;
  *(unsigned char *)(v3 + v10 - 14) ^= a1[2] ^ 0x60;
  *(unsigned char *)(v3 + v10 - 13) ^= a1[3] ^ 0x60;
  *(unsigned char *)(v3 + v10 - 12) ^= a1[4] ^ 0x60;
  *(unsigned char *)(v3 + v10 - 11) ^= a1[5] ^ 0x60;
  *(unsigned char *)(v3 + v10 - 10) ^= a1[6] ^ 0x60;
  *(unsigned char *)(v3 + v10 - 9) ^= a1[7] ^ 0x60;
  *(unsigned char *)(v3 + v10 - 8) ^= a1[8] ^ 0x60;
  *(unsigned char *)(v3 + v10 - 7) ^= a1[9] ^ 0x60;
  *(unsigned char *)(v3 + v10 - 6) ^= a1[10] ^ 0x60;
  *(unsigned char *)(v3 + v10 - 5) ^= a1[11] ^ 0x60;
  *(unsigned char *)(v3 + v10 - 4) ^= a1[12] ^ 0x60;
  *(unsigned char *)(v3 + v10 - 3) ^= a1[13] ^ 0x60;
  *(unsigned char *)(v3 + v10 - 2) ^= a1[14] ^ 0x60;
  *(unsigned char *)(v3 + v10 - 1) ^= a1[15] ^ 0x60;
  return (*(uint64_t (**)(void))(v9 + 8 * (((v10 < 0x150) * v8) ^ (a2 + 300))))();
}

void sub_100147AB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  if (a6) {
    BOOL v7 = a7 == 0;
  }
  else {
    BOOL v7 = 1;
  }
  int v8 = v7;
  __asm { BRAA            X9, X17 }
}

void sub_100147B34()
{
}

uint64_t sub_100147B40(uint64_t a1, uint64_t a2, int a3)
{
  v9.i64[0] = 0x6060606060606060;
  v9.i64[1] = 0x6060606060606060;
  uint64_t v10 = (v6 + v5);
  int8x16_t v11 = *(int8x16_t *)(v4 + v10 - 15);
  int8x16_t v12 = *(int8x16_t *)(v4 + v10 - 31);
  uint64_t v13 = v3 + v10;
  *(int8x16_t *)(v13 - 15) = veorq_s8(v11, v9);
  *(int8x16_t *)(v13 - 31) = veorq_s8(v12, v9);
  return (*(uint64_t (**)(void))(v8
                              + 8 * ((2247 * ((((a3 - 3177) | 0x3C7) ^ 0x3EF) == (v7 & 0xFFFFFFE0))) ^ (a3 - 1595))))();
}

uint64_t sub_100147BB0()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (v0 ^ (980
                                     * ((((v1 - ((2 * v1) & 0x1DFA7A1A) + 251477261) << (8 * (((v0 + 45) | 0x80) ^ 0x63)
                                                                                       - 23)) & 0x56F6EF72 ^ 0x14F26A12)
                                      + ((v1 - ((2 * v1) & 0x1DFA7A1A) + 251477261) ^ 0x25864AB4)
                                      - 18874520 != 710637345)))))();
}

uint64_t sub_100147C70(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void, void, void))(v7
                                                           + 8
                                                           * ((60
                                                             * ((((v5 & 0x18) == 0) ^ (a4 + 24)) & 1)) ^ a4)))((a4 + 1559), 38 * (a4 ^ 0x2FAu), (v4 - v6));
}

void sub_100147CB4()
{
}

uint64_t sub_100147CDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, unint64_t *a17, int a18, uint64_t a19, unsigned int a20,int a21,int a22)
{
  unsigned int v26 = 1314530549 * ((((2 * &a17) | 0x860B1A62) - &a17 + 1023046351) ^ 0x720C0BFF);
  a18 = (v22 + 1780979475) ^ v26;
  a19 = a13;
  a17 = &STACK[0x70766EB78D2F3F10];
  a22 = v26 ^ 0x4EA001FB;
  a20 = -135485171 - v26;
  uint64_t v27 = (*(uint64_t (**)(unint64_t **))(v23 + 8 * (v22 ^ 0x1410u)))(&a17);
  return (*(uint64_t (**)(uint64_t))(v23
                                            + 8
                                            * (((a21 == (v24 ^ (v25 + 785))) * (((v22 - 1026) | 0x19) ^ 0xF00)) ^ v22)))(v27);
}

uint64_t sub_100147DBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,int a50)
{
  return (*(uint64_t (**)(void))(v51
                              + 8
                              * ((821 * (v50 == ((a50 - 1162038509) & 0x45434FEB) + ((a50 + 1493) ^ 0x327F31B6))) ^ a50)))();
}

uint64_t sub_100147E10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(void))(v9 + 8 * ((198 * ((((v8 + (a5 ^ 0x169) + 3629) ^ a7) & v7) == 0)) ^ a5)))();
}

uint64_t sub_100147E48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30)
{
  *(_DWORD *)(v33 + 4 * (v34 + 1 + v32)) = 1968015627
                                                         - v34
                                                         + ((1566083941
                                                           * (*(_DWORD *)(v33 + 4 * (v34 + v32)) ^ (*(_DWORD *)(v33 + 4 * (v34 + v32)) >> 30))) ^ *(_DWORD *)(v33 + 4 * (v34 + 1 + v32)));
  *(_DWORD *)(v35 - 144) = v31 - a30 + 1399685065;
  *(_DWORD *)(v35 - 140) = 682612568 - a30 + v31;
  *(_DWORD *)(v35 - 132) = v31 - a30 + 1399684807;
  *(_DWORD *)(v35 - 128) = v31 - a30 + 1399684803;
  *(_DWORD *)(v35 - 136) = -(int)a30;
  *(void *)(v35 - 120) = (v34 + 2140161944) - a30;
  *(void *)(v35 - 112) = a29;
  uint64_t v36 = (*(uint64_t (**)(uint64_t))(v30 + 8 * (v31 - 1153507673)))(v35 - 144);
  return (*(uint64_t (**)(uint64_t))(v30 + 8 * *(int *)(v35 - 124)))(v36);
}

uint64_t sub_100147F18@<X0>(uint64_t a1@<X2>, char a2@<W3>, uint64_t a3@<X8>)
{
  int v5 = v3 + 1573;
  return (*(uint64_t (**)(uint64_t))(v4
                                            + 8
                                            * ((25
                                              * (((((_BYTE)v5 << 6) ^ 0xC0)
                                                                 + *(unsigned char *)(a3 + a1)
                                                                 - *((unsigned char *)*(&off_100520A90 + (v5 ^ 0x9C8)) - 12)
                                                                 - 27) != (3 * (v5 ^ a2) - 79))) | (v5 - 959))))(155840);
}

void sub_100147F60()
{
  LODWORD(STACK[0x540]) = v1;
  LODWORD(STACK[0x37C]) = v0;
  LODWORD(STACK[0x2FC]) = v2;
  LODWORD(STACK[0x4EC]) = v3;
  LODWORD(STACK[0x478]) = 1531326807;
  JUMPOUT(0x100147FBCLL);
}

uint64_t sub_10014809C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unsigned int a13, uint64_t a14, unsigned int a15, int a16)
{
  unsigned int v19 = 366490169 * ((&a13 & 0xE2556F1B | ~(&a13 | 0xE2556F1B)) ^ 0xB04C6A0);
  a14 = a11;
  a13 = ((2 * v16) & 0xAF3FEFFA) + (v16 ^ 0x579FF7FD) - 1124218092 + v19;
  a15 = v19 + 3254;
  uint64_t v20 = (*(uint64_t (**)(unsigned int *))(v17 + 37576))(&a13);
  return (*(uint64_t (**)(uint64_t))(v17 + 8 * ((249 * (a16 == v18)) ^ 0x177u)))(v20);
}

void sub_100148164()
{
  LODWORD(STACK[0x310]) = 473457775;
  JUMPOUT(0x10012D518);
}

uint64_t sub_10014817C@<X0>(uint64_t a1@<X1>, int a2@<W8>)
{
  unint64_t v8 = v2 - 1;
  STACK[0x3D0] = v8;
  *(unsigned char *)(a1 + v8) = ((v3 + 1) ^ v4) * (v3 + 18);
  return (*(uint64_t (**)(void))(v7 + 8 * (((STACK[0x3D0] == v5) * v6) ^ a2)))();
}

void sub_100148184()
{
}

void sub_100148190(uint64_t a1)
{
  int v2 = *(_DWORD *)(*(void *)a1 - 0x49230D716B37AE00);
  int v4 = v2 - 330117362;
  BOOL v3 = v2 - 330117362 < 0;
  int v5 = 330117362 - v2;
  if (!v3) {
    int v5 = v4;
  }
  int v1 = *(_DWORD *)(a1 + 8) + 1437274309 * ((-1739840284 - (a1 | 0x984C24E4) + (a1 | 0x67B3DB1B)) ^ 0x45BDA62E);
  __asm { BRAA            X7, X17 }
}

void sub_1001482C4(int a1@<W8>)
{
  int v5 = -1499613902 - a1;
  if (*v4 + 1817366286 < ((842 * (v3 ^ 0xE93)) ^ 0x694)) {
    int v5 = v1;
  }
  *v4 += v2 + v5 + 2;
}

uint64_t sub_10014834C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, unint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, unsigned int a19, unint64_t a20,unsigned int a21,unint64_t a22)
{
  unsigned int v27 = 366490169
      * (((&a19 | 0x958C7917) - &a19 + (&a19 & 0x6A7386E8)) ^ 0x83222F53);
  int v28 = v22 - 1348449005;
  a19 = (v25 ^ 0x9EFFCB39) + ((2 * v25) & 0x3DFF9672) + 1973286872 + v27;
  a21 = v22 - 1348449005 + v27;
  a20 = a14;
  uint64_t v29 = 8 * (v22 - 1348447562);
  (*(void (**)(unsigned int *))(v26 + v29))(&a19);
  unsigned int v30 = 366490169
      * (((&a19 | 0xC225B96A) - &a19 + (&a19 & 0x3DDA4690)) ^ 0xD48BEF2E);
  a21 = v28 + v30;
  a20 = a14;
  a19 = (v24 ^ 0x349DEB91) + ((2 * v24) & 0x693BD722) - 536881280 + v30;
  (*(void (**)(unsigned int *))(v26 + v29))(&a19);
  int v31 = *v23;
  if (*v23 == 3)
  {
    unsigned int v37 = 366490169 * ((((2 * &a19) | 0xE874C13A) - &a19 - 1949982877) ^ 0x629436D9);
    a21 = v37 + 3254;
    a20 = a14;
    a19 = v37 + 345883412;
    (*(void (**)(unsigned int *))(v26 + 37576))(&a19);
    unint64_t v38 = 366490169
        * ((((unint64_t)&a19 | 0x765BB2A311A74DFELL) - ((unint64_t)&a19 & 0x765BB2A311A74DFELL)) ^ 0x5CC507B707091BBALL);
    a20 = (*((void *)v23 + 1) ^ 0xEFFE7FCFFBFFECBBLL)
        - v38
        + ((2 * *((void *)v23 + 1)) & 0xDFFCFF9FF7FFD976)
        + 0x57DDA03E9E68DFCELL;
    a21 = 894 - v38;
    a22 = a14;
    uint64_t v39 = (*(uint64_t (**)(unsigned int *))(v26 + 37920))(&a19);
    return (*(uint64_t (**)(uint64_t))(v26 + 8 * ((444 * (a19 == 847203058)) ^ 0x6B8)))(v39);
  }
  else if (v31 == 2)
  {
    unsigned int v40 = 366490169 * ((&a19 & 0x5665D0C3 | ~(&a19 | 0x5665D0C3)) ^ 0xBF347978);
    a21 = v40 + 3254;
    a19 = v40 + 345883411;
    a20 = a14;
    (*(void (**)(unsigned int *))(v26 + 37576))(&a19);
    int v41 = v23[1];
    unsigned int v42 = 366490169 * ((((2 * &a19) | 0xA39D654C) - &a19 + 774983002) ^ 0xC760E4E2);
    a20 = a14;
    a21 = v42 + 3254;
    a19 = v42 + (v41 ^ 0xB6DDD77D) + ((2 * v41) & 0x6DBBAEFA) + 1572858772;
    (*(void (**)(unsigned int *))(v26 + 37576))(&a19);
    uint64_t v43 = *((void *)v23 + 1);
    a21 = 894 - 366490169 * ((((2 * &a19) | 0x22B93850) - &a19 + 1856201688) ^ 0x87F2CA6C);
    a22 = a14;
    a20 = (v43 ^ 0x7FDEE13FDE7AEF8DLL)
        - 366490169
        * ((((2 * (void)&a19) | 0x727525BB22B93850) - (void)&a19 - 0x393A92DD915C9C28) ^ 0x13A427C987F2CA6CLL)
        + ((2 * v43) & 0xFFBDC27FBCF5DF1ALL)
        - 0x3802C13144122304;
    uint64_t v44 = (*(uint64_t (**)(unsigned int *))(v26 + 37920))(&a19);
    return (*(uint64_t (**)(uint64_t))(v26 + 8 * ((444 * (a19 == 847203058)) ^ 0x6B8)))(v44);
  }
  else
  {
    if (v31 != 1) {
      JUMPOUT(0x100128BCCLL);
    }
    unsigned int v32 = 366490169 * (((&a19 | 0xEECB1EA1) + (~&a19 | 0x1134E15E)) ^ 0xF86548E4);
    a19 = v32 + 345883410;
    a20 = a14;
    a21 = v32 + 3254;
    (*(void (**)(unsigned int *))(v26 + 37576))(&a19);
    int v33 = v23[4];
    unsigned int v34 = 366490169 * ((&a19 & 0x870ADB9C | ~(&a19 | 0x870ADB9C)) ^ 0x6E5B7227);
    a20 = a14;
    a19 = v34 + (v33 ^ 0x7FBFDBD5) + 1717 + ((2 * v33) & 0xFF7FB7AA) - 1797398393;
    a21 = v34 + 3254;
    uint64_t v35 = (*(uint64_t (**)(unsigned int *))(v26 + 37576))(&a19);
    return (*(uint64_t (**)(uint64_t))(v26 + 8 * (((8 * (v23[4] != 0)) | (16 * (v23[4] != 0))) ^ 0x11E2)))(v35);
  }
}

uint64_t sub_1001489F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, void))(v9
                                                                      + 8
                                                                      * ((208
                                                                        * (((v8 < a8 - 3919) ^ (a8 - 70)) & 1)) ^ a8)))(a1, a2, a3, 0);
}

uint64_t sub_100148A34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v8 = a5 + ((v6 - 2012) | 0x90) + 2356 - 2506;
  BOOL v9 = v5 == v8;
  BOOL v10 = v5 != v8;
  if (v9) {
    char v11 = 77;
  }
  else {
    char v11 = 76;
  }
  LOBYTE(STACK[0x7E7]) = v11;
  return (*(uint64_t (**)(void))(v7 + 8 * (((4 * v10) | (16 * v10)) ^ v6)))();
}

uint64_t sub_100148A78(uint64_t a1)
{
  int v6 = (*(uint64_t (**)(uint64_t, void, void, uint64_t))(v2 + 8 * (v3 + 4341)))(a1, **(unsigned int **)(v1 + 8 * (v3 ^ 0x1E6)), 0, v4 + 4);
  uint64_t v7 = (*(uint64_t (**)(uint64_t))(v2 + 8 * (v3 + 4316)))(a1);
  return (*(uint64_t (**)(uint64_t))(v2 + 8 * ((37 * (v6 == (v3 ^ 0x82F ^ (14 * (v3 ^ 0x17C))))) ^ v3)))(v7);
}

uint64_t sub_100148B28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unint64_t *a13, int a14, unsigned int a15)
{
  a13 = &STACK[0x75464D914B72488F];
  a15 = 3687 - (((&a13 | 0xC350E5CB) + (~&a13 | 0x3CAF1A34)) ^ 0x4D18583) * v17;
  uint64_t v19 = (*(uint64_t (**)(unint64_t **))(v16 + 37680))(&a13);
  return (*(uint64_t (**)(uint64_t))(v16 + 8 * ((977 * (a14 == v15)) ^ v18)))(v19);
}

uint64_t sub_100148BB4(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, int a8)
{
  return (*(uint64_t (**)(void))(v8
                              + 8
                              * (((a3 + (a7 ^ 0x962u) + 474 + a8 - 694 < 0xFFFFFFF0) * ((3 * (a7 ^ 0x962)) ^ 0x214)) ^ a7)))();
}

void sub_100148BF8(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 12) + 673918253 * ((-1279141011 - (a1 | 0xB3C1DB6D) + (a1 | 0x4C3E2492)) ^ 0xD6763F3A);
  v3[1] = v1 + 31090337 * (v3 ^ 0xC7816049) + 1655390957;
  uint64_t v2 = (char *)*(&off_100520A90 + (v1 ^ 0x59B)) - 8;
  (*(void (**)(_DWORD *))&v2[8 * v1 + 26248])(v3);
  __asm { BRAA            X8, X17 }
}

uint64_t sub_100148CF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, unint64_t *a20,unsigned int a21,uint64_t a22,int a23,unint64_t *a24)
{
  a21 = (v24 + 2540) ^ (1401278017
                      * ((&a20 & 0x9A2076C9 | ~(&a20 | 0x9A2076C9)) ^ 0x61FCFFD1));
  a20 = &STACK[0x5C6E4E9DBA245391];
  a24 = &STACK[0x72B1F83D1B5D1CAD];
  a22 = a14;
  uint64_t v26 = (*(uint64_t (**)(unint64_t **))(v25 + 8 * (v24 ^ 0x16E3)))(&a20);
  return (*(uint64_t (**)(uint64_t))(v25
                                            + 8
                                            * (((((v24 - 102) ^ (a23 == 847203058)) & 1) * (v24 - 1203)) ^ v24)))(v26);
}

uint64_t sub_100148DD0@<X0>(int a1@<W8>)
{
  int v3 = a1 - 255;
  int v4 = a1 - 3070;
  int v5 = (a1 - 778) | 0x80;
  uint64_t v6 = *v1;
  STACK[0x648] = 0;
  STACK[0x5C8] = 0x2A7465AB426C8878;
  return (*(uint64_t (**)(void))(v2 + 8 * (((((v4 ^ (v6 == 0x46197683F7D18950)) & 1) == 0) * (v5 ^ 0x9C9)) ^ v3)))();
}

uint64_t sub_100148E44@<X0>(int a1@<W8>)
{
  v8.i64[0] = 0xC0C0C0C0C0C0C0C0;
  v8.i64[1] = 0xC0C0C0C0C0C0C0C0;
  v9.i64[0] = 0x6060606060606060;
  v9.i64[1] = 0x6060606060606060;
  *(int8x16_t *)(v4 + a1 + ((v3 - 2124) ^ (v1 + 455))) = vaddq_s8(vsubq_s8(*v6, vandq_s8(vaddq_s8(*v6, *v6), v8)), v9);
  BOOL v10 = (((v2 ^ 0x289) + v5) & 0x1FFFFFFF0) == 16;
  return (*(uint64_t (**)(void))(v7 + 8 * (((2 * v10) | (4 * v10)) ^ v3)))();
}

uint64_t sub_100148EB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27)
{
  int v33 = 66 * (v30 ^ 0x3C8);
  int v34 = 31090337 * ((2 * ((v32 - 120) & 0x660616A8) - (v32 - 120) - 1711675055) ^ 0x5E788918);
  *(void *)(v32 - 112) = v27;
  *(_DWORD *)(v32 - 104) = (v30 + 30) ^ v34;
  *(_DWORD *)(v32 - 120) = v34 + v31 + v33 + 1166281825;
  (*(void (**)(uint64_t))(v28 + 8 * (v30 + 3694)))(v32 - 120);
  *(void *)(v32 - 120) = a25;
  *(_DWORD *)(v32 - 108) = (v33 - 1745) ^ (366490169 * ((v32 + 1497762500 - 2 * ((v32 - 120) & 0x59460B3C)) ^ 0x4FE85D78));
  *(void *)(v32 - 104) = a27;
  uint64_t v35 = (*(uint64_t (**)(uint64_t))(v28 + 8 * (v33 + 1848)))(v32 - 120);
  return (*(uint64_t (**)(uint64_t))(v28
                                            + 8 * (((*(_DWORD *)(v32 - 112) > v29) * ((v33 ^ 0x911) - 458)) ^ v33)))(v35);
}

uint64_t sub_100148FE4()
{
  uint64_t v2 = *(void *)STACK[0x720];
  STACK[0x5C0] = 0;
  STACK[0x738] = 0x2CBDB0E44E133204;
  return (*(uint64_t (**)(void))(v1 + 8 * (((v2 == 0x46197683F7D18950) * ((v0 - 1521) ^ v0 ^ 0x678)) ^ v0)))();
}

uint64_t sub_100149048(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, unint64_t a18, uint64_t a19, uint64_t a20,unsigned int a21,unint64_t a22,int a23,int a24,unint64_t a25)
{
  int v31 = 366490169 * ((2 * (v30 & 0x7215F290) - v30 + 233442664) ^ 0x1B445B2C);
  a23 = v25 + 2270 + v31;
  a22 = a18;
  a21 = (v28 ^ 0x9EDFE73B) + ((2 * v28) & 0x3DBFCE76) + v31 + 1975374996 + 2 * (((v25 - 536) | 0x220) ^ 0x41);
  (*(void (**)(unsigned int *))(v29 + 8 * (v25 + 3713)))(&a21);
  unint64_t v32 = 366490169 * (((v30 | 0x1975BE020A66FA00) - v30 + (v30 & 0xE68A41FDF59905F8)) ^ 0x33EB0B161CC8AC44);
  a25 = a18;
  a23 = v25 - v32 - 90;
  a22 = (v27 ^ 0x6FDF3EFFBBEBDEEFLL) + ((2 * v27) & 0xDFBE7DFF77D7BDDELL) - v32 - 0x28031EF121831266;
  (*(void (**)(unsigned int *))(v29 + 8 * (v25 + 3756)))(&a21);
  int v33 = 366490169 * ((v30 - 1873795253 - 2 * (v30 & 0x9050274B)) ^ 0x86FE710F);
  a22 = a18;
  a21 = (v26 ^ 0x9CFDE7D5) + ((2 * v26) & 0x39FBCFAA) + 2006965052 + v33;
  a23 = v25 + 2270 + v33;
  uint64_t v34 = (*(uint64_t (**)(unsigned int *))(v29 + 8 * (v25 ^ 0x1181)))(&a21);
  return (*(uint64_t (**)(uint64_t))(v29 + 8 * ((56 * (a24 != 847203058)) ^ v25)))(v34);
}

uint64_t sub_100149268(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17, int a18, uint64_t a19, uint64_t a20,int a21,int a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  BOOL v31 = v27 > 0x5A89A79D;
  unint64_t v32 = (a3 ^ HIDWORD(v30)) + HIDWORD(a8) + (*(_DWORD *)(a25 + a12) ^ v25);
  *(_DWORD *)(a25 + 4 * a14) = v32 + v25 - ((v26 + 21 * (v28 ^ 0x904) - 609) & (2 * v32));
  *(_DWORD *)(a25 + a12) = (v32 >> ((v28 + 38) & 0xDB ^ 0x3Bu))
                         + v25
                         - (v26 & (2 * (v32 >> ((v28 + 38) & 0xDB ^ 0x3Bu))));
  if (v31 == a22 - 961051740 < -1518970782) {
    BOOL v31 = a22 - 961051740 < a18;
  }
  return (*(uint64_t (**)(void))(v29 + 8 * (v28 ^ (85 * v31))))();
}

uint64_t sub_100149608@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v3 + 8 * (((v5 ^ a1 ^ v1) * (((v2 + 1) & 0x7FFFFFFC) == v4)) ^ v5 ^ a1)))();
}

uint64_t sub_100149638(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16) + 476588053 * (a1 ^ 0xBDFD0443);
  return (*((uint64_t (**)(void))*(&off_100520A90 + v1 - 2631)
          + ((((*(void *)(a1 + 8) != 0x69166E42B3299573) << 6) | ((*(void *)(a1 + 8) != 0x69166E42B3299573) << 7)) ^ v1)
          - 1))();
}

uint64_t sub_1001496A8()
{
  STACK[0x8C8] = STACK[0xA38];
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((2240
                                * (LODWORD(STACK[0xA44]) == (((v0 - 456) | 0x1C8) ^ (v1 - 2189) ^ (v0 - 1994465899) & 0x76E119FD))) ^ (v0 - 1248))))();
}

uint64_t sub_100149710@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (((((v2 + 1426) | 0x1C2) ^ 0x165)
                                * ((unint64_t)(v1 - a1 + 0x114F96AE92DAEAC2) < 0x10)) ^ v2)))();
}

uint64_t sub_10014975C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, unint64_t *a15, int a16, unsigned int a17)
{
  a15 = &STACK[0x75464D914B7248A7];
  a17 = 3687
      - (((&a15 | 0x58257823) - &a15 + (&a15 & 0xA7DA87D8)) ^ 0x9FA4186A)
      * v18;
  uint64_t v19 = (*(uint64_t (**)(unint64_t **))(v17 + 37680))(&a15);
  return (*(uint64_t (**)(uint64_t))(v17 + 8 * ((1373 * (a16 == 847203058)) ^ 0xA36u)))(v19);
}

uint64_t sub_100149804(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,int a50)
{
  return (*(uint64_t (**)(void))(v52 + 8 * (((v50 == v51) * (((a50 + 1730) | 0x71) ^ 0x109C)) ^ (a50 - 2070))))();
}

void sub_100149840(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 24) - 366490169 * ((2 * (a1 & 0x104AC4A1) - a1 - 273335458) ^ 0xF91B6D1A);
  uint64_t v3 = *(void *)(a1 + 8);
  if (*(_DWORD *)(v3 - 0x49230D716B37AE00) - 330117362 >= 0) {
    unsigned int v4 = *(_DWORD *)(v3 - 0x49230D716B37AE00) - 330117362;
  }
  else {
    unsigned int v4 = 330117362 - *(_DWORD *)(v3 - 0x49230D716B37AE00);
  }
  uint64_t v2 = *(void *)(a1 + 16);
  if (*(_DWORD *)(v2 - 0x49230D716B37AE00) - 330117362 >= 0) {
    unsigned int v5 = *(_DWORD *)(v2 - 0x49230D716B37AE00) - 330117362;
  }
  else {
    unsigned int v5 = 330117362 - *(_DWORD *)(v2 - 0x49230D716B37AE00);
  }
  unsigned int v9 = v1
     - 142545853 * ((-241028826 - (&v8 | 0xF1A23126) + (&v8 | 0xE5DCED9)) ^ 0x24A261B6)
     - 2277;
  uint64_t v8 = v3;
  uint64_t v6 = (char *)*(&off_100520A90 + (v1 ^ 0xA29)) - 8;
  (*(void (**)(uint64_t *))&v6[8 * v1 + 17232])(&v8);
  if (v4 >= v5) {
    unsigned int v7 = v5;
  }
  else {
    unsigned int v7 = v4;
  }
  __asm { BRAA            X11, X17 }
}

uint64_t sub_100149A0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned int a6)
{
  return (*(uint64_t (**)(void))(v6 + 8 * ((7899 * (a4 + 1 == v7 + 32)) ^ a6)))();
}

uint64_t sub_100149AE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  *(_DWORD *)(*(void *)(v9 - 0x49230D716B37ADFCLL) + 4 * (v7 + v5)) = a5;
  return (*(uint64_t (**)(void))(v8 + 8 * (((v7 + v5 > 0) * (v6 - 1004)) ^ v6)))();
}

uint64_t sub_100149B28(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void, uint64_t))(v4
                                                    + 8 * ((((v3 + 821) ^ 0x54E) * (a3 != 0x3E74CD69)) ^ (v3 + 2580))))((a3 ^ 0x3E74CD69) + 30 * ((v3 + 2580) ^ 0xC3Fu) + 966797796, 1834628707);
}

uint64_t sub_100149B88@<X0>(int a1@<W8>)
{
  int v6 = STACK[0x4D0];
  int v7 = v1 + 1;
  uint64_t v8 = (_DWORD *)STACK[0x2D0];
  unint64_t v9 = STACK[0x2D0] + 24 * (v7 - 86704577);
  *(_DWORD *)(v9 + 8) = v5;
  *(_DWORD *)(v9 + 12) = v3;
  *(void *)(v9 + 16) = STACK[0x2C0];
  *(_DWORD *)(v9 + 24) = v6;
  *uint64_t v8 = v7;
  BOOL v11 = v2 + 500641145 > 4 * (((a1 + 1476) | 1) ^ 0x874) - 1616190244 && v2 + 500641145 < SLODWORD(STACK[0x2A0]);
  return (*(uint64_t (**)(void))(v4 + 8 * ((1626 * v11) ^ a1)))();
}

uint64_t sub_100149C10()
{
  unsigned int v4 = v2 - 215173435 + ((v3 + 466076518) & 0xE43837DF);
  BOOL v5 = v4 < 0x3BE48ABF;
  BOOL v6 = v1 + 1004833471 < v4;
  if (v1 > 0xC41B7540 != v5) {
    BOOL v7 = v5;
  }
  else {
    BOOL v7 = v6;
  }
  return (*(uint64_t (**)(void))(v0 + 8 * ((!v7 * (((v3 + 763) | 0x328) ^ 0xF2F)) ^ v3)))();
}

uint64_t sub_100149CA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, char a16, char a17, char a18, char a19, char a20,char a21,char a22,char a23,char a24,char a25,char a26,char a27,char a28,char a29,char a30,char a31,char a32,char a33,char a34,char a35,char a36,char a37,char a38,char a39,char a40,char a41,char a42,char a43,char a44,char a45,char a46)
{
  int v50 = *(void **)(v47 + 8 * (int)(v46 - 1469));
  int v51 = (unsigned char *)*v50;
  a16 = *(unsigned char *)*v50 - 93;
  a17 = v51[1] - 93;
  a18 = v51[2] - 93;
  a19 = v51[3] - 93;
  a20 = v51[4] + ((3 * (v46 ^ 0x75)) ^ 0xB2);
  a21 = v51[5] - 93;
  a22 = v51[6] - 93;
  a23 = v51[7] - 93;
  a24 = v51[8] - 93;
  a25 = v51[9] - 93;
  a26 = v51[10] - 93;
  a27 = v51[11] - 93;
  a28 = v51[12] - 93;
  a29 = v51[13] - 93;
  a30 = v51[14] - 93;
  a31 = v51[15] - 93;
  a32 = v51[16] - 93;
  a33 = v51[17] - 93;
  a34 = v51[18] - 93;
  a35 = v51[19] - 93;
  a36 = v51[20] - 93;
  a37 = v51[21] - 93;
  uint64_t v52 = (unsigned char *)*v50;
  a38 = v52[22] - 93;
  a39 = v52[23] - 93;
  a40 = v52[24] - 93;
  a41 = v52[25] - 93;
  a42 = v52[26] - 93;
  a43 = v52[27] - 93;
  a44 = v52[28] - 93;
  a45 = v52[29] - 93;
  a46 = v52[30] - 93;
  uint64_t v53 = (*(uint64_t (**)(char *))(v48 + 8 * (v46 ^ 0x14EB)))(&a16);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v48 + 8 * (((2 * (v53 == 0)) | (16 * (v53 == 0))) ^ v46)))(v53, v54, v55, v56, v57, v58, v59, v60, a9, v49);
}

uint64_t sub_100149E78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19, uint64_t a20,void *a21,int *a22)
{
  *unsigned int v27 = v23 + 1;
  unsigned int v28 = ((v25 + 764) ^ 0x9D2C5200) & ((v22 ^ (v22 >> 11)) << 7) ^ v22 ^ (v22 >> 11);
  unsigned int v29 = (v28 << 15) & 0xEFC60000 ^ v28 ^ (((v28 << 15) & 0xEFC60000 ^ v28) >> 18);
  unint64_t v30 = (unsigned char *)(a17 + (a19 - 1));
  unsigned int v31 = 1554976193 * ((*(_DWORD *)(*a21 + (*a22 & 0xFFFFFFFF98772D68)) ^ v30) & 0x7FFFFFFF);
  unint64_t v32 = 1554976193 * ((v31 >> (((v25 + 0x80) | 0x50) - 100)) ^ v31);
  int v33 = *(unsigned __int8 *)((v32 >> 24) + *(void *)(v24 + 8 * (v25 - 202)) + 2);
  int v34 = *(unsigned __int8 *)(*(void *)(v24 + 8 * (v25 - 189)) + (v32 >> 24)) ^ v29 ^ *(unsigned __int8 *)(*(void *)(v24 + 8 * ((v25 + 764) ^ 0x499)) + 6 * ((v25 + 764) ^ 0x4E6u) - 419 + (v32 >> 24)) ^ v33 ^ v32 ^ (-91 * (v32 >> 24));
  *unint64_t v30 = *(unsigned char *)(*(void *)(v24 + 8 * (v25 - 189)) + (v32 >> 24)) ^ v29 ^ *(unsigned char *)(*(void *)(v24 + 8 * ((v25 + 764) ^ 0x499))
                                                                                         + 6 * ((v25 + 764) ^ 0x4E6u)
                                                                                         - 419
                                                                                         + (v32 >> 24)) ^ v33 ^ v32 ^ (-91 * BYTE3(v32));
  return (*(uint64_t (**)(void))(v26 + 8 * ((5437 * (a19 == (v34 != 0))) ^ (v25 + 764))))();
}

uint64_t sub_100149FAC(uint64_t a1, uint64_t a2, uint64_t a3, int a4, int a5)
{
  return (*(uint64_t (**)(void))(v6 + 8 * ((((a5 - 1307) ^ 0x36B) * (v5 == a4)) ^ a5)))();
}

uint64_t sub_100149FD4(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(void))(v9
                              + 8 * (((((((2 * a8) ^ 0x14B8) - 739041088) & 0x2C0CDF74) - 1639) * (v8 != a3)) ^ a8)))();
}

uint64_t sub_10014A014()
{
  uint64_t v4 = (v0 - 809);
  *(unsigned char *)(v1 + v2 + v3 + v4) = 0;
  return sub_100136460(v4);
}

void sub_10014A028(uint64_t a1)
{
  BOOL v3 = *(void *)(a1 + 8) != 0x682CC6D4ECD1402ALL
    && (unsigned __int16)(*(_WORD *)(a1 + 20) + 26273 * ((2 * (a1 & 0x1CB3) - a1 - 7348) ^ 0x8305)) != 8702;
  int v1 = *(_DWORD *)a1 - 31090337 * ((2 * (a1 & 0x2E391CB3) - a1 + 1371988812) ^ 0x96478305);
  __asm { BRAA            X8, X17 }
}

uint64_t sub_10014A104()
{
  unsigned int v4 = ((v2 + 1265724709) & 0xB48E87EF) + v0 + 1548493788;
  unsigned int v5 = -1614706775 - *(_DWORD *)(v1 + 16);
  BOOL v6 = v4 < (v2 ^ 0x71Du) + 1614927477;
  BOOL v7 = v4 > v5;
  int v8 = v6 ^ (v5 < 0x6041E03F);
  int v9 = v7;
  if (!v8) {
    BOOL v6 = v9;
  }
  return (*(uint64_t (**)(void))(v3 + 8 * (((2 * !v6) | (8 * !v6)) ^ v2)))();
}

uint64_t sub_10014A1A4()
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((1333
                                * (((v0 + (v2 ^ 0x30) - 523) & (2 * (*(unsigned __int8 *)(v1 + 2) - 72)))
                                 + ((*(unsigned __int8 *)(v1 + 2) - 72) ^ 0xFBDFFFFF) == -69206017)) ^ v2)))();
}

uint64_t sub_10014A1F4(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  *(_DWORD *)(v27 - 192) = a4;
  *(_DWORD *)(v27 - 188) = -241766661;
  uint64_t v28 = **(unsigned int **)(v26 + 8 * (v24 - 3534));
  *(_DWORD *)(v27 - 132) = 673918253 * a24 + v24 - 1479743543;
  uint64_t v29 = v27 - 208;
  *(void *)(v29 + memset((void *)(STACK[0x7D8] + 8), 91, 48) = -673918253 * a24;
  *(void *)(v29 + 56) = v28 ^ (673918253 * a24);
  *(_DWORD *)(v27 - 144) = v24 + 846629363 + 673918253 * a24;
  *(_DWORD *)(v27 - 136) = (v24 + 846629527) ^ (673918253 * a24);
  *(_DWORD *)(v27 - 168) = v24 + 846629363 - 673918253 * a24 + 406;
  *(_DWORD *)(v27 - 164) = -673918253 * a24;
  uint64_t v30 = (*(uint64_t (**)(uint64_t))(v25 + 8 * (v24 + 1147)))(v27 - 168);
  return (*(uint64_t (**)(uint64_t))(v25 + 8 * *(int *)(v27 - 140)))(v30);
}

uint64_t sub_10014A2C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15, char a16, uint64_t a17, int a18, unsigned int a19, uint64_t a20,char *a21)
{
  a19 = (v21 + 1789) ^ ((&a18 ^ 0xB10986CE) * v22);
  a20 = a14;
  a21 = &a16;
  (*(void (**)(int *))(v24 + 8 * (v21 + 4147)))(&a18);
  LODWORD(a21) = v21
               - 476588053
               * ((2 * ((&a18 ^ 0xF33CC913) & 0xFD19819) - (&a18 ^ 0xF33CC913) + 1882089442) ^ 0x3EEFAAB2)
               + 2132;
  a20 = a14;
  uint64_t v25 = (*(uint64_t (**)(int *))(v24 + 8 * (v21 + 4180)))(&a18);
  return (*(uint64_t (**)(uint64_t))(v24 + 8 * (((a18 == v23) * (v21 + 4417)) ^ v21)))(v25);
}

uint64_t sub_10014A3A4@<X0>(int a1@<W0>, int a2@<W3>, int a3@<W4>, uint64_t a4@<X8>)
{
  *(unsigned char *)(a4 + (a1 + a2)) = *(unsigned char *)(v4 + (a1 + a2));
  return (*(uint64_t (**)(void))(v6 + 8 * (((a1 - 1 == a3) * v7) ^ (v5 - 446))))();
}

void sub_10014A3D8()
{
}

uint64_t sub_10014A470(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v17 = STACK[0x700];
  unsigned int v18 = LODWORD(STACK[0x700]) - 1733409399;
  char v19 = v16[473];
  uint64_t v20 = (v12
                     + 662 * (v11 & 0xF ^ 7)
                     - (((v12 + 662 * (v11 & 0xF ^ 7u)) * (unint64_t)v14) >> 32) * v15);
  v16[473] = v16[v20];
  v16[v20] = v19;
  uint64_t v21 = (v12
                     + 662 * (v18 % 0xF)
                     + 662
                     - (((v12 + 662 * (v18 % 0xF) + 662) * (unint64_t)v14) >> 32) * v15);
  LOBYTE(v20) = v16[170];
  v16[170] = v16[v21];
  v16[v21] = v20;
  LODWORD(v21) = v10 - ((2 * v10 + 546247606) & 0xAD6A8052) - 419640828;
  unsigned int v22 = v12 + 662 * (((v10 + a1) % 0xEu + 1073317173 - ((2 * ((v10 + a1) % 0xEu)) & 0xA)) ^ 0x3FF98535) + 1324;
  uint64_t v23 = v22 - (((v22 * (unint64_t)v13) >> 32) >> 4) * v15;
  LOBYTE(v20) = v16[832];
  v16[832] = v16[v23];
  v16[v23] = v20;
  unsigned int v24 = (v9 ^ 0x4BEC483Fu) % 0xD;
  unsigned int v25 = ((2 * ((v9 ^ 0xB413B7C0) + (v11 ^ 0x9685F457) + 1)) & 0xECBDF7FE)
      + (((v9 ^ 0xB413B7C0) + (v11 ^ 0x9685F457) + 1) ^ 0xF65EFBFF);
  char v26 = v16[529];
  v16[529] = v16[(v12 + 662 * v24 + 1986 - (((v12 + 662 * v24 + 1986) * (unint64_t)v14) >> 32)
                                                       * v15)];
  unsigned int v27 = v21 ^ v9;
  LODWORD(v20) = (v25 + 161547265 + (v27 ^ 0x9FCE212) + 1) % 0xC;
  v16[(((v24 + 21) & 0x16 ^ a8 | (v24 + 597) & 0x216) * (v24 + 597)
                   - ((((v24 + 21) & 0x16 ^ a8 | (v24 + 597) & 0x216) * (v24 + 597) * (unint64_t)v14) >> 32)
                   * v15)] = v26;
  char v28 = v16[226];
  v27 ^= 0xF6031DED;
  unsigned int v29 = v27 ^ (v17 - 1571862134 + v25);
  unsigned int v30 = v25 + 161547265;
  int v31 = v30 + (v21 ^ 0x56B54029) - 2056864781 - ((2 * (v30 + (v21 ^ 0x56B54029))) & 0xACD77E6);
  uint64_t v32 = (v12
                     + 662 * v20
                     + 2648
                     - (((v12 + 662 * v20 + 2648) * (unint64_t)v14) >> 32) * v15);
  v16[226] = v16[v32];
  v16[v32] = v28;
  uint64_t v33 = (v12
                     + 662 * (v29 % 0xB)
                     + 3310
                     - (((v12 + 662 * (v29 % 0xB) + 3310) * (unint64_t)v14) >> 32) * v15);
  unsigned int v34 = v27 % 9;
  char v35 = v16[888];
  v16[888] = v16[v33];
  unsigned int v36 = v12 + 662 * ((v31 ^ 0x8566BBF3) % 0xA) + 3972;
  uint64_t v37 = (v36 - ((v36 * (unint64_t)v14) >> 32) * v15);
  v16[v33] = v35;
  unsigned int v38 = ((2 * ((v31 ^ 0x8566BBF3) + v29)) & 0xA4DFFF6A) + (((v31 ^ 0x8566BBF3) + v29) ^ 0x526FFFB5);
  LOBYTE(v24) = v16[585];
  v16[585] = v16[v37];
  v16[v37] = v24;
  unsigned int v39 = v27 + 1383071669 - v38;
  unsigned int v40 = 662 * v34 + 397862;
  LODWORD(v37) = v40 - 1930 * ((2225372 * (unint64_t)v40) >> 32);
  int v41 = ((2 * v37) & 0xAFC) + (v37 ^ 0x7F7E757E);
  if ((v41 - 2138994046) >= 0x3C5) {
    int v42 = -33555447;
  }
  else {
    int v42 = -33554482;
  }
  char v43 = v16[v41 - 2105439564 + v42];
  char v44 = v16[282];
  v16[282] = v43;
  v16[(v40 - ((v40 * (unint64_t)v14) >> 32) * v15)] = v44;
  char v45 = v16[944];
  unsigned int v46 = (v39 ^ v30) + 1108976390 - ((2 * (v39 ^ v30)) & 0x8433460C);
  uint64_t v47 = (662 * (((_BYTE)v25 + 7) & 7)
                     + 398524
                     - (((662 * (((_BYTE)v25 + 7) & 7u) + 398524) * (unint64_t)v14) >> 32) * v15);
  unsigned int v48 = ((2 * ((v46 ^ 0x4219A306) + (v31 ^ 0xD0259728))) & 0xFBFED6FE)
      + (((v46 ^ 0x4219A306) + (v31 ^ 0xD0259728)) ^ 0xFDFF6B7F);
  v16[944] = v16[v47];
  v16[v47] = v45;
  unsigned int v49 = v46 ^ 0xBDE65CF9;
  unsigned int v50 = (v46 ^ 0xBDE65CF9) + v38 - ((2 * ((v46 ^ 0xBDE65CF9) + v38) + 186646680) & 0xDE237E0) - 1266607044;
  LODWORD(v47) = v50 ^ 0x6F11BF0;
  unsigned int v51 = (v48 + 33592449) % 6;
  uint64_t v52 = (662 * (v47 % 7)
                     + 399186
                     - (((662 * (v47 % 7) + 399186) * (unint64_t)v14) >> 32) * v15);
  char v53 = v16[641];
  v16[641] = v16[v52];
  v16[v52] = v53;
  unint64_t v54 = STACK[0x6F8];
  char v55 = v16[338];
  v16[338] = v16[(662 * v51 + 399848 - (((662 * v51 + 399848) * (unint64_t)v14) >> 32) * v15)];
  LODWORD(v52) = (((v51 + 604) | (163 - v51)) & 0x296) * (v51 + 604);
  v16[(v52 - ((v52 * (unint64_t)v14) >> 32) * v15)] = v55;
  uint64_t v56 = (662 * ((v46 ^ 0x4219A306) % 5)
                     + 400510
                     - (((662 * ((v46 ^ 0x4219A306) % 5) + 400510) * (unint64_t)v14) >> 32) * v15);
  int v57 = (v48 - 2002802859) ^ v46;
  LOBYTE(v52) = v16[35];
  v16[35] = v16[v56];
  v16[v56] = v52;
  unsigned int v58 = (((v25 - 913499641 - ((2 * v25 + 584635102) & 0x30416130)) ^ 0x1ED1AB68 ^ v50) + (v57 ^ 0xBDE65CF9) + 1) ^ 0x34C09261;
  unsigned int v59 = 662 * (v58 & 0xBDE9513F ^ 0xE7F4177 ^ ((v58 & 0xBDE9513C) + 243220854 - ((2 * v58) & 0x18D28268))) + 401172;
  uint64_t v60 = v59 - v59 / 0x3C5 * v15;
  LOBYTE(v50) = v16[(v60 & 0x2B9 ^ 0x2B9) + (v60 & 0x2B9)];
  v16[697] = v16[v60];
  v16[v60] = v50;
  LODWORD(v60) = 662 * ((v49 - 33592449 - v48 + v47 + 1) % 3) + 401834;
  LOBYTE(vmemset((void *)(STACK[0x7D8] + 8), 91, 48) = v16[394];
  uint64_t v61 = (v60 - ((v60 * (unint64_t)v14) >> 32) * v15);
  v16[394] = v16[v61];
  v16[v61] = v48;
  BOOL v62 = (v57 & 1) == 0;
  uint64_t v63 = 753;
  if (v62) {
    uint64_t v63 = 91;
  }
  char v64 = v16[91];
  v16[91] = v16[v63];
  v16[v63] = v64;
  unsigned int v65 = 662 * (v8 ^ 0xD6 ^ v16[393228 - 407 * v15]) + 438603;
  v16[v65 - v65 / 0x3C5 * v15] = -45;
  return (*(uint64_t (**)(void))(v54 + 8 * v8))();
}

uint64_t sub_10014ABDC@<X0>(int a1@<W8>)
{
  int v3 = a1 + 3365;
  (*(void (**)(uint64_t))(v2 + 8 * (a1 ^ 0x107B)))(v1);
  unint64_t v4 = STACK[0x258];
  STACK[0x8B0] = 0;
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((126
                                * (((STACK[0x7A0] == 0) ^ v3 ^ 0xF1 ^ (v3 - 122)) & 1)) ^ v3)))();
}

uint64_t sub_10014AC3C()
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((51 * (((v0 == v1) ^ (v2 - 1)) & 1)) | v2)))();
}

uint64_t sub_10014AC74(int8x16_t a1, int8x16_t a2, uint64_t a3, uint64_t a4, int a5, int8x16_t *a6)
{
  *(int8x16_t *)(v8 + (a4 & (v6 + 16))) = vaddq_s8(vsubq_s8(*a6, vandq_s8(vaddq_s8(*a6, *a6), a1)), a2);
  return (*(uint64_t (**)(void))(v10 + 8 * (((v9 == 16) * a5) ^ v7)))();
}

uint64_t sub_10014AC80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, int a14)
{
  unsigned int v17 = ((60 * (((v14 - 784) | 2) ^ 0xBD1)) ^ 0xE67E289D) + (a14 ^ v15) - ((2 * (a14 ^ v15)) & 0xCCFC5412);
  return (*(uint64_t (**)(void))(v16
                              + 8
                              * ((23
                                * (((2 * v17) & 0xF3FFD7EC ^ 0xC0FC5400) + (v17 ^ 0x1F81C1FF) + 1073569472 != 972901046)) | v14)))();
}

void sub_10014AD1C(uint64_t a1@<X8>)
{
  *(_DWORD *)(a1 - 0x560E26B5DF241DE4) = (*(_DWORD *)(a1 - 0x560E26B5DF241DE4) ^ 0x1A6DBE83)
                                         + 443399811
                                         - ((2 * (*(_DWORD *)(a1 - 0x560E26B5DF241DE4) ^ 0x1A6DBE83) + 2) & 0x34DB7D06)
                                         + 1;
}

uint64_t sub_10014AD64@<X0>(uint64_t a1@<X8>)
{
  STACK[0x798] = *(void *)(v2 + 8 * v1);
  return sub_10013B2F8(a1);
}

uint64_t sub_10014AD84@<X0>(void *a1@<X8>)
{
  *uint64_t v2 = v1;
  *(void *)(v1 + 8) = *a1;
  *a1 = v1;
  return sub_1001C1504();
}

uint64_t sub_10014ADAC(int a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v7
                              + 8
                              * ((155
                                * ((((*(unsigned __int8 *)(v5 + 8) - 4) << (((v6 - 59) | 0x48) ^ 0x49)) & v4)
                                 + (a1 ^ a4 ^ (*(unsigned __int8 *)(v5 + 8) - 4)) == -69206017)) ^ v6)))();
}

uint64_t sub_10014AE10@<X0>(uint64_t a1@<X0>, int a2@<W3>, char a3@<W4>, int a4@<W6>, int a5@<W8>)
{
  *(unsigned char *)(*(void *)(a1 + 24) + v8 + a5 + ((a2 - 1480969503) & 0x5845CBCFu)) = ((a4 ^ v7) >> (a3 + 98))
                                                                                 - ((2 * ((a4 ^ v7) >> (a3 + 98))) & 0xC0)
                                                                                 + 96;
  return (*(uint64_t (**)(void))(v5 + 8 * (a2 ^ (1398 * (v8 - 1 == v6 + 920)))))();
}

uint64_t sub_10014AE8C()
{
  BOOL v4 = (*(uint64_t (**)(void))(v3 + 8 * (v2 + 363)))(v0 ^ (v1 + 3136) ^ (v2 - 1161957650) & 0x45420E59u) == 0;
  return (*(uint64_t (**)(void))(v3 + 8 * (v2 | (2 * ((v4 ^ ((v2 ^ 0xE3) + 1)) & 1)))))();
}

void sub_10014AF1C()
{
}

uint64_t sub_10014AF40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55)
{
  int v63 = (v55 ^ v56) * v61;
  *(void *)(v62 - 168) = a55;
  *(void *)(v62 - 192) = v60;
  *(void *)(v62 - 184) = a54;
  *(_DWORD *)(v62 - 160) = 1807697497 - v63;
  *(_DWORD *)(v62 - 156) = v63 + v57 + 268;
  uint64_t v64 = (*(uint64_t (**)(uint64_t))(v58 + 8 * (v57 + 4289)))(v62 - 192);
  return (*(uint64_t (**)(uint64_t))(v58
                                            + 8
                                            * (((2
                                               * (((v57 + 97) ^ (*(_DWORD *)(v62 - 176) == v59)) & 1)) & 0xEF | (16 * (((v57 + 97) ^ (*(_DWORD *)(v62 - 176) == v59)) & 1))) ^ v57)))(v64);
}

uint64_t sub_10014AFCC(int a1, int a2)
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((7 * (a2 + a1 + (v2 ^ 0x2659AD ^ v2 ^ 0x9AFu) > 7)) ^ v2)))();
}

uint64_t sub_10014B050@<X0>(int a1@<W8>)
{
  int v4 = 5 * (a1 ^ 0x10F);
  uint64_t v5 = (*(uint64_t (**)(void))(v3 + 8 * (a1 ^ 0x11AF)))();
  unint64_t v6 = STACK[0x258];
  STACK[0x7F0] = STACK[0x7F0] + 9 * ((v4 - 3176) ^ 0x14Eu) - 203;
  return (*(uint64_t (**)(uint64_t))(v6
                                            + 8 * (((v1 == v2) * (700 * ((v4 - 3176) ^ 0x159) + 125)) ^ (v4 - 3176))))(v5);
}

#error "10014BF78: call analysis failed (funcsize=938)"

void sub_10014BF7C()
{
}

uint64_t sub_10014BF88()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((*(void *)(v0 + 8) != 0x31F869904A03A4D8) * (((v1 ^ 0x535) - 1152) ^ 0x561)) ^ v1)))();
}

uint64_t sub_10014BFDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  return (*(uint64_t (**)(void))(v18
                                           + 8
                                           * ((((((v17 - 2886) ^ 0xFC9) - 2846) ^ ((v17 - 2886) | 0x4A6)) * (a17 == 0)) ^ v17)))(0);
}

uint64_t sub_10014C01C()
{
  return sub_10018A7E0();
}

uint64_t sub_10014C030()
{
  STACK[0x3A8] = *(void *)(v0 + 8 * (v1 - 2281));
  return sub_100175B88(1693002141, -1247951960);
}

uint64_t sub_10014C048@<X0>(unsigned int a1@<W0>, uint64_t a2@<X1>, unint64_t a3@<X2>, int a4@<W3>, uint64_t a5@<X8>)
{
  *(unsigned char *)(a5 + v6 + a2) = v8;
  return (*(uint64_t (**)(void))(v9 + 8 * (((v6 + 1 + a2 < ((v5 + v7) & a1 ^ a3)) * a4) ^ v5)))();
}

uint64_t sub_10014C050(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,unsigned int a23)
{
  unsigned int v30 = 366490169 * ((1351743966 - (&a19 | 0x5091F9DE) + (&a19 | 0xAF6E0621)) ^ 0xB9C05065);
  LODWORD(a19) = (v27 ^ 0xD7FDF7B7) + ((2 * v27) & 0xAFFBEF6E) + 1017105242 + v30;
  LODWORD(a21) = v29 + 798 + v30;
  a20 = a14;
  (*(void (**)(uint64_t *))(v28 + 8 * (v29 + 2241)))(&a19);
  a21 = a14;
  a19 = v26;
  HIDWORD(a20) = (v29 - 2019) ^ (375636451
                               * ((&a19 + 782417762 - 2 * (&a19 & 0x2EA2BF62)) ^ 0x7D9CE5EE));
  (*(void (**)(uint64_t *))(v28 + 8 * (v29 ^ 0x1B1B)))(&a19);
  unsigned int v31 = 366490169 * (((&a19 | 0x1E28B619) + (~&a19 | 0xE1D749E6)) ^ 0x886E05C);
  LODWORD(a19) = ((2 * v25) & 0xBD7BB72A) + (v25 ^ 0x5EBDDB95) + (((v29 - 2296) | 0x145) ^ 0xB5DFE699) + v31;
  LODWORD(a21) = v29 + 798 + v31;
  a20 = a14;
  (*(void (**)(uint64_t *))(v28 + 8 * (v29 + 2241)))(&a19);
  unsigned int v32 = 31090337 * ((&a19 + 389090042 - 2 * (&a19 & 0x17310AFA)) ^ 0xD0B06AB3);
  LODWORD(a21) = v32 + v29 + 1607;
  a23 = (v24 ^ 0xEAB6FE7E) + ((2 * v24) & 0xD56DFCFC) - v32 + 930997226;
  a20 = v23;
  a22 = a14;
  uint64_t v33 = (*(uint64_t (**)(uint64_t *))(v28 + 8 * (v29 ^ 0x1BE8)))(&a19);
  return (*(uint64_t (**)(uint64_t))(v28 + 8 * ((759 * (a19 == 847203058)) ^ v29)))(v33);
}

uint64_t sub_10014C2B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36)
{
  int v39 = v36 + 1;
  *(unsigned char *)(a5 + (((v37 - 508) | 0x81) ^ 0xBB3E991B) + v39) = *(unsigned char *)(a36 + a6 - 545767578)
                                                             - ((2 * *(unsigned char *)(a36 + a6 - 545767578)) & 0xC0)
                                                             + 96;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v38 + 8 * ((44 * ((a4 + v39 + 1) < 0x40)) ^ v37)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28);
}

uint64_t sub_10014C2C0@<X0>(uint64_t a1@<X0>, int a2@<W3>, int a3@<W4>, int a4@<W8>)
{
  uint64_t v9 = ((1103 * (a3 ^ (v5 + 228))) ^ (v7 + 2190)) + a2;
  *(unsigned char *)(a1 + v9) = *(unsigned char *)(v6 + v9);
  return (*(uint64_t (**)(void))(v8 + 8 * (((4 * (a2 - 1 == a4)) | ((a2 - 1 == a4) << 6)) ^ (v4 + a3 + 868))))();
}

uint64_t sub_10014C310(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 8) ^ (375636451 * ((-2 - ((a1 | 0xB1ACC8E3) + (~a1 | 0x4E53371C))) ^ 0x1D6D6D90));
  uint64_t v3 = *(void *)a1;
  int v4 = (char *)*(&off_100520A90 + (int)(v2 ^ 0xC38BBD11)) - 8;
  uint64_t v5 = (*(uint64_t (**)(void))&v4[8 * v2 + 0x1E3A2AE70])();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))&v4[8 * (v2 ^ 0xC38BAFC0)])(v5, v3, 4096);
  if ((int)result >= 1) {
    int v7 = 847203058;
  }
  else {
    int v7 = 847161009;
  }
  *(_DWORD *)(a1 + 12) = v7;
  return result;
}

uint64_t sub_10014C3F4(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unsigned int a8)
{
  BOOL v16 = v9 < a8;
  *(unsigned char *)(v12 + v11 + 431 - (v11 + 431) / 0x3BDu * v14) = *(unsigned char *)(v13 + (v10 + 1)) ^ 0x2C;
  unsigned int v17 = a1 + 1 + (((v8 + 2660) | v15) ^ 0x89E23B1D);
  int v18 = v16 ^ (v17 < a8);
  BOOL v19 = v17 < v9;
  if (!v18) {
    BOOL v16 = v19;
  }
  return (*(uint64_t (**)(void))(STACK[0x6F8] + 8 * ((239 * !v16) ^ (v8 + 1667))))();
}

void sub_10014C404()
{
  uint64_t v0 = *(&off_100520A90
       + ((75 * ((qword_1005A6FB0 - dword_1005A7030) ^ 0x7E)) ^ byte_100495D20[byte_100491700[(75 * ((qword_1005A6FB0 - dword_1005A7030) ^ 0x7E))] ^ 0x3D])
       - 48);
  unsigned __int8 v1 = 75 * (*v0 ^ qword_1005A6FB0 ^ 0x7E);
  uint64_t v2 = (uint64_t)*(&off_100520A90
                + (byte_100491800[byte_1004A086C[v1 - 12] ^ 0x5D] ^ v1)
                + 236);
  uint64_t v3 = (*(void *)(v2 - 4) ^ *v0) - (void)&v5;
  *uint64_t v0 = 544792907 * v3 - 0x1ED3F820338F2682;
  *(void *)(v2 - 4) = 544792907 * (v3 ^ 0xE12C07DFCC70D97ELL);
  v6[1] = 31090337 * (((v6 | 0x33D9A24) - (v6 & 0x33D9A24)) ^ 0xC4BCFA6D) + 1655392376;
  LOBYTE(v2) = 75 * ((*(_DWORD *)(v2 - 4) - *(_DWORD *)v0) ^ 0x7E);
  int v4 = (char *)*(&off_100520A90
               + ((75 * ((qword_1005A6FB0 + dword_1005A7030) ^ 0x7E)) ^ byte_10049B320[byte_100495E20[(75 * ((qword_1005A6FB0 + dword_1005A7030) ^ 0x7E))] ^ 0x14])
               - 144)
     - 8;
  (*(void (**)(_DWORD *))&v4[8
                                      * (byte_100495D2C[(byte_10049170C[v2 - 12] ^ 0x38)
                                                                       - 12] ^ v2)
                                      + 36968])(v6);
  __asm { BRAA            X8, X17 }
}

uint64_t sub_10014C618()
{
  int v4 = (v3 - 957) | 0x844;
  uint64_t v9 = v6;
  unsigned int v10 = v3
      + (((&v8 | 0x750B85C3) - &v8 + (&v8 & 0x8AF47A38)) ^ 0x63A5D387) * v1
      + 2507;
  (*(void (**)(uint64_t *))(v0 + 8 * (v3 ^ 0x158Du)))(&v8);
  unsigned int v10 = v4 + ((&v8 & 0x9C04461B | ~(&v8 | 0x9C04461B)) ^ 0x7555EFA0) * v1 + 1348;
  uint64_t v9 = v7;
  (*(void (**)(uint64_t *))(v0 + 8 * (v4 ^ 0x1E34)))(&v8);
  return (v2 - 847203058);
}

uint64_t sub_10014C71C()
{
  return sub_1001393E8();
}

uint64_t sub_10014C75C()
{
  return sub_10018A7E0();
}

uint64_t sub_10014C770(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,int a37)
{
  return (*(uint64_t (**)(void))(v38 + 8 * ((1869 * (v37 != ((73 * (a37 ^ 0x372)) ^ 0x9C4))) ^ a37)))();
}

uint64_t sub_10014C7CC@<X0>(uint64_t a1@<X4>, int a2@<W8>)
{
  return (*(uint64_t (**)(uint64_t))(v3 + 8 * (((2 * (v2 + 1 != v4 + 24)) | (4 * (v2 + 1 != v4 + 24))) ^ a2)))(a1);
}

uint64_t sub_10014C87C@<X0>(int a1@<W3>, uint64_t a2@<X8>)
{
  HIDWORD(v7) = v2;
  LODWORD(v7) = v2 ^ v3;
  return (*(uint64_t (**)(void))(v5 + 8 * ((7461 * (a2 + 1 == v6 + 80)) ^ a1)))((v7 >> 2)
                                                                                            + v3 - (v4 & (2 * (v7 >> 2))));
}

uint64_t sub_10014C930()
{
  uint64_t v2 = (*(uint64_t (**)(uint64_t))(v1 + 8 * (v0 + 1143)))(32);
  unint64_t v3 = STACK[0x258];
  STACK[0x8B0] = v2;
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (((v2 == 0) * ((1301 * ((v0 - 1098) ^ 0x978) - 1562) ^ (v0 - 1019))) ^ (v0 - 1098))))();
}

void sub_10014C990()
{
  uint64_t v0 = (uint64_t)*(&off_100520A90
                + ((75 * ((qword_1005A6FB0 - dword_1005A70D8) ^ 0x7E)) ^ byte_100491800[byte_1004A0860[(75 * ((qword_1005A6FB0 - dword_1005A70D8) ^ 0x7E))] ^ 0xB9])
                - 47);
  uint64_t v1 = *(void *)(v0 - 4);
  uint64_t v2 = (uint64_t)*(&off_100520A90
                + (byte_100491800[byte_1004A086C[(75
                                                                                                * (v1 ^ qword_1005A6FB0 ^ 0x7E))
                                                                              - 12] ^ 0xF7] ^ (75
                                                                                             * (v1 ^ qword_1005A6FB0 ^ 0x7E)))
                + 61);
  uint64_t v3 = (*(void *)(v2 - 4) ^ v1) - (void)&v5;
  *(void *)(v0 - 4) = 544792907 * v3 - 0x1ED3F820338F2682;
  *(void *)(v2 - 4) = 544792907 * (v3 ^ 0xE12C07DFCC70D97ELL);
  v6[1] = 31090337 * ((v6 + 1539456959 - 2 * ((unint64_t)v6 & 0x5BC23FBF)) ^ 0x9C435FF6)
        + 1655392376;
  LOBYTE(v2) = 75 * ((*(_DWORD *)(v2 - 4) + *(_DWORD *)(v0 - 4)) ^ 0x7E);
  int v4 = (char *)*(&off_100520A90
               + ((75 * ((qword_1005A6FB0 + dword_1005A70D8) ^ 0x7E)) ^ byte_100491800[byte_1004A0860[(75 * ((qword_1005A6FB0 + dword_1005A70D8) ^ 0x7E))] ^ 0x79])
               - 13)
     - 8;
  (*(void (**)(_DWORD *))&v4[8
                                      * (byte_100491608[(byte_1004A0764[v2 - 4] ^ 0xEC)
                                                                       - 8] ^ v2)
                                      + 35920])(v6);
  __asm { BRAA            X8, X17 }
}

void sub_10014CB9C()
{
  uint64_t v4 = *v0;
  *(_DWORD *)(v0[2] - 0x5C7E77A7904FA00BLL) = *v1;
  *(_DWORD *)(v4 - 0x1B850BF289D55793) = *v2 - ((*v2 << ((v3 + 103) ^ 0x36)) & 0xA13F87A0) - 794836016;
  *((_DWORD *)v0 + 6) = 847203058;
}

void sub_10014CC48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a4) {
    BOOL v5 = a5 == 0;
  }
  else {
    BOOL v5 = 1;
  }
  int v6 = v5;
  __asm { BRAA            X9, X17 }
}

uint64_t sub_10014CCBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19)
{
  return (*(uint64_t (**)(void))(v21
                              + 8
                              * ((924 * ((a19 - 202857234 + v19 - v22 + 910 + 1) > 0xF)) ^ (v20 - 148))))();
}

uint64_t sub_10014CD00@<X0>(uint64_t a1@<X8>)
{
  (*(void (**)(uint64_t))(v2 + 8 * (v1 + 1754)))(a1);
  *(void *)(STACK[0x608] + 24) = 0;
  return sub_1001C14DC();
}

uint64_t sub_10014CD30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,int a50)
{
  return (*(uint64_t (**)(void))(v52 + 8 * ((((a50 - 366) ^ 0xA7A) * (v50 == v51)) ^ (a50 - 1414))))();
}

uint64_t sub_10014CD60(int8x16_t a1, int8x16_t a2, double a3, double a4, int8x16_t a5, int8x16_t a6, int8x16_t a7, int32x4_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12)
{
  uint64_t v18 = v15 + 16;
  a2.i32[0] = *(_DWORD *)(v18 + v13);
  a2.i32[1] = *(_DWORD *)(v18 + 916);
  a2.i32[2] = *(_DWORD *)(v18 + 920);
  int8x16_t v19 = vextq_s8(a1, a2, 0xCuLL);
  int8x16_t v20 = a2;
  v20.i32[3] = *(_DWORD *)(v18 + 924);
  int32x4_t v21 = (int32x4_t)veorq_s8((int8x16_t)vshrq_n_u32((uint32x4_t)vorrq_s8(vandq_s8(v20, a5), vandq_s8(v19, a6)), 1uLL), *(int8x16_t *)v18);
  v19.i32[0] = *(_DWORD *)(v16 + 4 * (*(_DWORD *)(v18 + v13) & 1));
  v19.i32[1] = *(_DWORD *)(v16 + 4 * (*(_DWORD *)(v18 + 916) & 1));
  v19.i32[2] = *(_DWORD *)(v16 + 4 * (*(_DWORD *)(v18 + 920) & 1));
  v19.i32[3] = *(_DWORD *)(v16 + 4 * (v20.i8[12] & 1));
  *(int8x16_t *)(v18 + 908) = veorq_s8((int8x16_t)vaddq_s32(vsubq_s32(v21, (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v21, v21), a7)), a8), v19);
  return (*(uint64_t (**)(void))(v17 + 8 * (((v14 == 4) * a12) ^ v12)))();
}

uint64_t sub_10014CD6C()
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((15 * (STACK[0x438] != 0)) | (v0 + 2107))))();
}

uint64_t sub_10014CD94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, int a16, int a17)
{
  return (*(uint64_t (**)(void))(v18
                              + 8
                              * (((((v17 - 859378138) & 0x33390EB6) + ((v17 - 4039) | 0x260) - 3843)
                                * (a17 == -557495541)) ^ v17)))();
}

uint64_t sub_10014CDEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v7
                              + 8
                              * (int)((((v6 + 1908) ^ 0x89A23DE5 ^ ((v6 + 2231118) | 0x898030B0)) * (v5 == a5)) ^ v6)))();
}

uint64_t sub_10014CE38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17)
{
  return (*(uint64_t (**)(void))(v18 + 8 * ((7341 * (a17 == 0)) ^ v17)))();
}

uint64_t sub_10014CE94()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((((v0 - 1247951960) < 0x38) * (v1 + 4595)) ^ (v1 + 498))))();
}

uint64_t sub_10014CECC(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4
                                                     + 8
                                                     * ((73 * (v1 + 100668426 < 5 * (v3 ^ 0xBC) + (v3 ^ 0xFFFFED3E))) ^ v3)))(a1, v2);
}

uint64_t sub_10014CF38()
{
  return (*(uint64_t (**)(void))(v0 + 8 * ((1008 * (v2 == ((v1 + 1019) ^ 0x1F16E0A5))) ^ v1)))();
}

uint64_t sub_10014CF90()
{
  uint64_t v3 = (*(uint64_t (**)(void))(v1 + 8 * (v0 + 2268)))();
  return (*(uint64_t (**)(uint64_t))(v1 + 8 * ((((v0 + 1832) ^ 0x1219) * (v2 == 847203058)) ^ (v0 + 1832))))(v3);
}

uint64_t sub_10014CFD8(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t, void))(v4
                                                    + 8
                                                    * ((75 * (v2 + v1 + 100668426 >= ((v3 - 2859) | 0xAC4u) - 4044)) ^ v3)))(a1, (v3 - 3759));
}

uint64_t sub_10014D028@<X0>(uint64_t a1@<X8>)
{
  uint64_t v5 = (335 - v1);
  int8x16_t v6 = vrev64q_s8(*(int8x16_t *)(a1 + v5 - 15));
  int8x16_t v7 = vextq_s8(v6, v6, 8uLL);
  int8x16_t v8 = vrev64q_s8(*(int8x16_t *)(a1 + v5 - 31));
  int8x16_t v9 = vextq_s8(v8, v8, 8uLL);
  uint64_t v10 = v3 + v5;
  v11.i64[0] = 0xC0C0C0C0C0C0C0C0;
  v11.i64[1] = 0xC0C0C0C0C0C0C0C0;
  v12.i64[0] = 0x6060606060606060;
  v12.i64[1] = 0x6060606060606060;
  int8x16_t v13 = vrev64q_s8(vaddq_s8(vsubq_s8(v7, vandq_s8(vaddq_s8(v7, v7), v11)), v12));
  *(int8x16_t *)(v10 - 15) = vextq_s8(v13, v13, 8uLL);
  int8x16_t v14 = vrev64q_s8(vaddq_s8(vsubq_s8(v9, vandq_s8(vaddq_s8(v9, v9), v11)), v12));
  *(int8x16_t *)(v10 - 31) = vextq_s8(v14, v14, 8uLL);
  return (*(uint64_t (**)(void))(v4 + 8 * (((v1 != 288) * (v2 ^ 0xD02)) ^ v2)))();
}

uint64_t sub_10014D0B8@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(STACK[0x258] + 8 * (((a1 - 2806 + 89 * (a1 ^ 0x3D0)) * (v1 == 0)) ^ a1)))();
}

uint64_t sub_10014D108()
{
  unint64_t v3 = (v1 - 1065330539);
  STACK[0xA48] = v3;
  unint64_t v4 = STACK[0x778];
  STACK[0xA50] = STACK[0x778];
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((250
                                * (((v0 + 6) ^ (v3
                                                               - v4
                                                               + ((179 * (v0 ^ 0x37Bu)) ^ 0x68D79B75CB7B3870) > 9)) & 1)) ^ v0)))();
}

uint64_t sub_10014D17C@<X0>(__int16 a1@<W8>)
{
  LOWORD(STACK[0x924]) = a1;
  return sub_1001B8258();
}

uint64_t sub_10014D190@<X0>(uint64_t a1@<X5>, int a2@<W8>)
{
  *(unsigned char *)(a1 + v3 + v5) = v4;
  return (*(uint64_t (**)(void))(v6 + 8 * ((((unint64_t)(v3 + 1 + v5) > 0x37) * a2) ^ v2)))();
}

uint64_t sub_10014D1BC@<X0>(uint64_t a1@<X5>, uint64_t a2@<X8>)
{
  *(void *)(a1 + a2 + v4) = v6;
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * ((1904 * (((v2 + 1091) ^ 0xE84) == (v3 & 0xFFFFFFFFFFFFFFF8))) ^ v2)))();
}

uint64_t sub_10014D204()
{
  return sub_10014D210();
}

uint64_t sub_10014D210()
{
  return (*(uint64_t (**)(void))(v0 + 8 * (((STACK[0x470] == 0) * (((v1 - 2369) | 0x311) - 794)) ^ (v1 + 524))))();
}

uint64_t sub_10014D248(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, _DWORD *a15, int a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,_DWORD *a23)
{
  int v28 = (*a23 ^ v23) + a16 * (*(_DWORD *)(*a7 + 4 * (a8 - 1589564607)) ^ v23);
  unsigned int v29 = v28 + a1 - (((228 * (v27 ^ 0x264)) ^ 0x6F70DD42) & (2 * v28));
  uint64_t v30 = (v29 ^ a2) * (*a15 - 1514729486);
  unsigned int v31 = *(uint64_t (**)(uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, void, void *, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v25 + 8 * (v27 ^ ((4 * (v24 > 1)) | (8 * (v24 > 1)))));
  return v31(a1, a2, a3, a4, 404750952, v31, a7, (v29 ^ a2)+ ((v30 ^ 0xAF62EDEEBED79FBFLL) + 0x509D121141286041 + ((2 * v30) & 0x17DAF3F7ELL)) * (**v26 ^ v23), a9, a10, a11, a12);
}

uint64_t sub_10014D264(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  *(_DWORD *)(v28 - 112) = v24 + 1697562443 * ((v28 + 1168903784 - 2 * ((v28 - 144) & 0x45AC0EF8)) ^ 0x923C367C) + 1818;
  *(void *)(v28 - 144) = a22;
  *(void *)(v28 - 136) = v27;
  *(void *)(v28 - 128) = a24;
  *(void *)(v28 - 120) = a24;
  (*(void (**)(uint64_t))(v25 + 8 * (v24 ^ 0x142C)))(v28 - 144);
  *(void *)(v28 - 112) = a22;
  *(void *)(v28 - 104) = v27;
  *(void *)(v28 - 128) = a24;
  *(void *)(v28 - 120) = a24;
  *(_DWORD *)(v28 - 136) = (v24 + 2443) ^ (366490169
                                         * ((((v28 - 144) | 0x28A4B5E8) - (v28 - 144) + ((v28 - 144) & 0xD75B4A10)) ^ 0x3E0AE3AC));
  *(void *)(v28 - 144) = a18;
  uint64_t v29 = (*(uint64_t (**)(uint64_t))(v25 + 8 * (v24 ^ 0x1416)))(v28 - 144);
  return (*(uint64_t (**)(uint64_t))(v25
                                            + 8
                                            * ((113
                                              * ((((v24 + 409) | 0x401) ^ 0xFFFFF3F5) + v26 - 722997813 < ((((v24 + 409) | 0x401) + 1958660596) & 0x8B413BF5) + 2147479050)) ^ (((v24 + 409) | 0x401) - 1392))))(v29);
}

uint64_t sub_10014D3B4(unint64_t a1)
{
  STACK[0x220] = a1;
  STACK[0x270] = v3;
  uint64_t v4 = (*(uint64_t (**)(uint64_t))(v1 + 8 * (v2 ^ 0x1C82)))(1576);
  STACK[0x370] = v4;
  return (*(uint64_t (**)(void))(v1 + 8 * (((v4 == 0) * ((v2 ^ 0x8FE) - 1524)) ^ v2)))();
}

void sub_10014D408(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16) - 366490169 * ((625004151 - (a1 | 0x2540CE77) + (a1 | 0xDABF3188)) ^ 0xCC1167CC);
  __asm { BRAA            X10, X17 }
}

uint64_t sub_10014D4B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, int a14)
{
  return (*(uint64_t (**)(void))(v14 + 8 * ((1944 * (a14 == 0)) ^ v15)))();
}

void sub_10014D530()
{
}

uint64_t sub_10014D540@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v2 + 8 * (((((a1 ^ 0xDB7) - 1012) ^ 0xCFB) * (v1 == 0)) ^ a1)))();
}

uint64_t sub_10014D570@<X0>(uint64_t a1@<X8>)
{
  unsigned int v3 = (v1 + 897486337) & 0xCA8173DD;
  *(void *)(STACK[0x640] - 0x46197683F7D189memset((void *)(STACK[0x7D8] + 8), 91, 48) = a1;
  BOOL v4 = *(void *)(STACK[0x670] + 24) == 0;
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (int)(((2 * ((v4 ^ ((v3 + 19) ^ (v3 - 42))) & 1)) & 0xEF | (16 * ((v4 ^ (v3 - 4077) ^ (v3 - 2602)) & 1))) ^ v3)))();
}

uint64_t sub_10014D5DC@<X0>(int a1@<W8>)
{
  int v4 = a1 ^ 0x1185;
  uint64_t v5 = (*(uint64_t (**)(void))(v3 + 8 * (a1 + 393)))();
  unint64_t v6 = STACK[0x258];
  LODWORD(STACK[0xAB4]) = v1;
  STACK[0x7F0] -= 32;
  return (*(uint64_t (**)(uint64_t))(v6 + 8 * ((2531 * (v1 == v2 + ((v4 - 138) ^ 0x78) - 171)) ^ v4)))(v5);
}

uint64_t sub_10014D638@<X0>(int a1@<W2>, int a2@<W3>, uint64_t a3@<X5>, uint64_t a4@<X6>, int a5@<W8>)
{
  *(unsigned char *)(a3 + (a5 + 1 + a1)) = *(unsigned char *)(a4 + (v6 + a2));
  return (*(uint64_t (**)(void))(v9 + 8 * (((((v6 + 1) & 0xFFFFFFFC) == v7) * ((v5 + v8) & v10 ^ 0xF1)) ^ v5)))();
}

uint64_t sub_10014D680(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(uint64_t, void))(v6
                                                    + 8
                                                    * (((((v4 == a4) ^ (v5 + 118)) & 1)
                                                      * ((v5 ^ 0xD9F) - 3850)) ^ v5)))(a1, (v5 + 20355446) & 0xFEC96FBF);
}

uint64_t sub_10014D6C8()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((1668
                                * (v0 == (v1 ^ 0xD70) + 847198666 + (((v1 ^ 0xD70) - 1540625143) & 0x5BD419DA) + 1144)) ^ v1 ^ 0xD70)))();
}

uint64_t sub_10014D728@<X0>(uint64_t a1@<X0>, int a2@<W1>, int a3@<W4>, int a4@<W8>)
{
  return sub_10013E0B0(a1, a3, 199, *(_DWORD *)(*v5 + 4 * (a2 - 1743095234)), v4, a4);
}

uint64_t sub_10014D758(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, char a12, uint64_t a13, int a14, unsigned int a15, uint64_t a16, char *a17)
{
  a15 = (v19 + 1818) ^ (((-2193610 - (&a14 | 0xFFDE8736) + (&a14 | 0x2178C9)) ^ 0xB128FE07)
                      * v20);
  a16 = a13;
  a17 = &a12;
  (*(void (**)(int *))(v17 + 8 * (v19 + 4176)))(&a14);
  LODWORD(a17) = v19
               - 476588053 * ((&a14 & 0x8796C012 | ~(&a14 | 0x8796C012)) ^ 0xC5943BAE)
               + 2161;
  a16 = a13;
  uint64_t v21 = (*(uint64_t (**)(int *))(v17 + 8 * (v19 + 4209)))(&a14);
  return (*(uint64_t (**)(uint64_t))(v17 + 8 * (((a14 == v18) * ((177 * (v19 ^ 0x1ED)) ^ 0xF24)) ^ v19)))(v21);
}

uint64_t sub_10014D858(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(v8 + 8 * ((111 * (a7 + 1 != v9 + 64)) ^ v7)))();
}

void sub_10014D918()
{
}

void sub_10014D974()
{
  uint64_t v0 = (uint64_t)*(&off_100520A90
                + ((75 * ((qword_1005A6FB0 + dword_1005A7048) ^ 0x7E)) ^ byte_10049B320[byte_100495E20[(75 * ((qword_1005A6FB0 + dword_1005A7048) ^ 0x7E))] ^ 0x14])
                - 55);
  uint64_t v1 = *(void *)(v0 - 4);
  uint64_t v2 = (uint64_t)*(&off_100520A90
                + (byte_100491800[byte_1004A086C[(75
                                                                                                * (v1 ^ qword_1005A6FB0 ^ 0x7E))
                                                                              - 12] ^ 0xB9] ^ (75
                                                                                             * (v1 ^ qword_1005A6FB0 ^ 0x7E)))
                + 161);
  unint64_t v3 = (*(void *)(v2 - 4) - v1) ^ (unint64_t)&v5;
  *(void *)(v0 - 4) = 544792907 * v3 + 0x5547F155C74775EALL;
  *(void *)(v2 - 4) = 544792907 * (v3 ^ 0xE12C07DFCC70D97ELL);
  v6[1] = 31090337
        * (((v6 | 0x9ED35B20) - v6 + (v6 & 0x612CA4D8)) ^ 0x59523B69)
        + 1655392376;
  LOBYTE(v2) = 75 * ((*(_DWORD *)(v2 - 4) - *(_DWORD *)(v0 - 4)) ^ 0x7E);
  int v4 = (char *)*(&off_100520A90
               + ((75 * (dword_1005A7048 ^ 0x7E ^ qword_1005A6FB0)) ^ byte_100491800[byte_1004A0860[(75 * (dword_1005A7048 ^ 0x7E ^ qword_1005A6FB0))] ^ 0x5D])
               + 6)
     - 8;
  (*(void (**)(_DWORD *))&v4[8
                                      * (byte_100495F28[(byte_100491A04[v2 - 4] ^ 0xDE)
                                                                       - 8] ^ v2)
                                      + 36520])(v6);
  __asm { BRAA            X8, X17 }
}

uint64_t sub_10014DBAC()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((v0 - 1460) ^ (44 * ((v1 & 0x1F) == 0x18)))))();
}

uint64_t sub_10014DBE8(uint64_t a1, uint64_t a2, int a3, int a4, uint64_t a5, uint64_t a6, int a7)
{
  int v12 = (a7 - 1682386449) & 0x64472DF0;
  int v13 = -a4;
  uint64_t v14 = a3 + v10 + v9 + 197 - a4 + (v12 ^ 0xAD3u);
  *(void *)(a1 - 7 + v14) = *(void *)(v7 - 7 + v14);
  return (*(uint64_t (**)(void))(v11 + 8 * ((480 * (((v12 ^ 0xFFFFF308) & v8) + v13 != 8)) ^ v12)))();
}

uint64_t sub_10014DC68@<X0>(uint64_t a1@<X8>)
{
  *(_DWORD *)(*(void *)(v2 - 0x49230D716B37ADFCLL) + 4 * (v5 - 898373252)) = *(_DWORD *)(*(void *)(v3 - 0x49230D716B37ADFCLL)
                                                                                           + 4 * (v5 - 898373252));
  return (*(uint64_t (**)(void))(a1
                              + 8
                              * ((4035 * (((v5 - 1 == v1) ^ (102 * (v4 ^ 0x2F) + 1)) & 1)) ^ (102 * (v4 ^ 0x82F)))))();
}

uint64_t sub_10014DCE0@<X0>(int a1@<W8>)
{
  int v3 = (a1 - 982608260) & 0x3A9171FD;
  (*(void (**)(uint64_t))(v2 + 8 * (a1 + 2334)))(v1);
  unint64_t v4 = STACK[0x258];
  STACK[0x6D0] = 0;
  return (*(uint64_t (**)(void))(v4 + 8 * (((STACK[0x7B0] == 0) * ((v3 ^ 0x165) - 4186)) ^ v3)))();
}

uint64_t sub_10014DD44(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v6 + 8 * ((2217 * ((v5 & 0x18) == (((a4 ^ 0x899) + v4) ^ (v4 + 2632)))) ^ a4)))();
}

void sub_10014DD80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unsigned char *a10)
{
  int v13 = v11 - ((2 * v11 + 999701296) & 0x7D5B6DC0) + 477680760;
  *a10 = (HIBYTE(v13) ^ 0x3E) - 2 * ((v12 + 100) & HIBYTE(v13) ^ (HIBYTE(v13) ^ 0x3E) & 0xE1) + 96;
  a10[1] = (BYTE2(v13) ^ 0xAD) - ((2 * (BYTE2(v13) ^ 0xAD)) & 0xC0) + 96;
  a10[2] = (BYTE1(v13) ^ 0xB6) - ((2 * (BYTE1(v13) ^ 0xB6)) & 0xC0) + 96;
  a10[3] = v13 ^ 0x80;
  unint64_t v14 = v10 - ((2 * v10) & 0x895A682A9C211ADCLL) + 0x44AD34154E108D6ELL;
  a10[4] = (HIBYTE(v14) ^ 0x44) - ((2 * (HIBYTE(v14) ^ 0x44)) & 0xC0) + 96;
  a10[5] = (BYTE6(v14) ^ 0xAD) - ((2 * (BYTE6(v14) ^ 0xAD)) & 0xC0) + 96;
  a10[6] = (BYTE5(v14) ^ 0x34) + (~(2 * (BYTE5(v14) ^ 0x34)) | 0x3F) + 97;
  a10[7] = (BYTE4(v14) ^ 0x15) + (~(2 * BYTE4(v14)) | 0x3F) + 97;
  a10[8] = (((v10 - ((2 * v10) & 0x9C211ADC) + 1309707630) >> 24) ^ 0x4E)
         + (~(2 * (((v10 - ((2 * v10) & 0x9C211ADC) + 1309707630) >> 24) ^ 0x4E)) | 0x3F)
         + 97;
  a10[9] = (BYTE2(v14) ^ 0x10) - ((2 * BYTE2(v14)) & 0xC0) + 96;
  a10[10] = (BYTE1(v14) ^ 0x8D) - ((2 * BYTE1(v14)) & 0xC0) + 96;
  a10[11] = v14 ^ 0xE;
  sub_100173E84();
}

uint64_t sub_10014DF20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,int a23,int a24,uint64_t a25,uint64_t a26)
{
  *int v26 = v26[623];
  return sub_10018A22C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26);
}

void sub_10014DF30(int a1@<W1>, int a2@<W8>)
{
  if ((((a1 - 73) | 0x4C) ^ (a2 - 1228)) + v2 >= 0x7FFFFFFF) {
    int v6 = -v3;
  }
  else {
    int v6 = v5;
  }
  *int v4 = v6;
  JUMPOUT(0x10014DF60);
}

uint64_t sub_10014DFFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, int a3@<W4>, uint64_t a4@<X8>)
{
  int v6 = (v4 - 836) | 0x804;
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5
                                                     + 8
                                                     * (((((3 * (v6 ^ 0xA5) + 1) ^ ((*(unsigned char *)(a4 + a2) - *(unsigned char *)(*(void *)(a1 + 8 * (v6 - 2327)) - 12)) == 204)) & 1)
                                                       * ((v6 ^ 0x9A7) * a3 - 774)) ^ (v6 + 1535))))(2471, 2213);
}

uint64_t sub_10014E04C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, int a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  *(_DWORD *)(v26 - 136) = (v24 + 1009) ^ (366490169 * ((v26 + 2066845224 - 2 * ((v26 - 144) & 0x7B318EB8)) ^ 0x6D9FD8FC));
  *(void *)(v26 - 112) = a22;
  *(void *)(v26 - 104) = a23;
  *(void *)(v26 - 144) = a10;
  *(void *)(v26 - 128) = v25;
  *(void *)(v26 - 120) = v25;
  uint64_t v27 = (*(uint64_t (**)(uint64_t))(v23 + 8 * (v24 ^ 0x1E6Cu)))(v26 - 144);
  return (*(uint64_t (**)(uint64_t))(v23
                                            + 8
                                            * ((113 * (a20 - 722997813 < ((v24 + 1958660596) & 0x8B413BF5) + 2147479050)) ^ (v24 - 1392))))(v27);
}

uint64_t sub_10014E120()
{
  int v6 = *(unsigned __int8 *)(*(void *)(v1 + 40) + v0 - 0x6853BC73F93D2FD2)
     - *(unsigned __int8 *)(v5 + v0 - 0x6853BC73F93D2FD2);
  uint64_t v7 = v0 + 1;
  BOOL v9 = (v6 ^ 0x7BBFDF9F) - 831620608 + ((v6 << ((v4 + 99) & 0xD1 ^ 0x81)) & 0xF77FBF3E) != 1244551583 || v7 == v2 + 16;
  return (*(uint64_t (**)(void))(v3 + 8 * ((2327 * v9) ^ v4)))();
}

uint64_t sub_10014E1C4@<X0>(__int16 a1@<W8>)
{
  STACK[0x4E8] = *(void *)(v2 + 8 * v1);
  return sub_1001C454C(a1);
}

void sub_10014E1E4(int a1@<W8>, int a2, uint64_t a3, int a4)
{
  unsigned int v8 = ((v6 ^ 0x700) - v7 + 3517997) & 0xB7E0A520;
  unsigned int v9 = 1437274309 * ((2 * (&a2 & 0x5FAC8900) - &a2 + 542340857) ^ 0x25D0BCC);
  a2 = v9 + v6 + 1415;
  a3 = v5;
  a4 = v9 - a1 - v8 + 1544236205;
  (*(void (**)(int *))(v4 + 8 * (v6 + 4447)))(&a2);
  sub_100193454();
}

uint64_t sub_10014E280@<X0>(uint64_t a1@<X8>)
{
  int v4 = v1 - (**(unsigned char **)(v3 + 8) == 0);
  *(_DWORD *)(*(void *)(v2 + 96) + 528) = 1336608946;
  *(_DWORD *)(*(void *)(v2 + 96) + 532) = 330117362;
  *(void *)(*(void *)(v2 + 96) + 536) = *(void *)(v2 + 96) + 544;
  uint64_t v5 = *(void *)(v2 + 96) + 0x49230D716B37B014;
  uint64_t v6 = *(void *)(v3 + 8) + (*(_DWORD *)(v3 + 4) - v4);
  unsigned int v7 = 1761959447 * ((2 * (&v10 & 0x3CFA5F38) - &v10 - 1023041341) ^ 0x62A26107);
  unsigned int v10 = 3583 - v7;
  int v13 = v4 - v7 + 129906298;
  uint64_t v11 = v6;
  uint64_t v12 = v5;
  (*(void (**)(unsigned int *))(a1 + 38144))(&v10);
  int v8 = v14;
  *(void *)(*(void *)(v2 + 96) + 512) = *(void *)(v3 + 8) + (*(_DWORD *)(v3 + 4) - v4);
  return v8 ^ 0x16046589u;
}

uint64_t sub_10014E2BC()
{
  int v7 = v3 + 2685;
  int v8 = ((((v6 - 144) | 0x70693028) - (v6 - 144) + ((v6 - 144) & 0x8F96CFD0)) ^ 0xCD94346B) * v4;
  *(void *)(v6 - 144) = v5;
  *(_DWORD *)(v6 - 136) = v2 - 723002738 + v7 + 527 + v8;
  *(_DWORD *)(v6 - 132) = (v7 - 3952) ^ v8;
  uint64_t v9 = (*(uint64_t (**)(uint64_t))(v1 + 8 * (v7 ^ 0x344)))(v6 - 144);
  return (*(uint64_t (**)(uint64_t))(v1
                                            + 8
                                            * ((124 * (*(_DWORD *)(v6 - 128) != v0 + 97 * (v7 ^ 0x113C) - 1649)) ^ v7)))(v9);
}

uint64_t sub_10014E374(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6, int a7)
{
  BOOL v11 = *(_DWORD *)STACK[0x2D0] != a5 || v8 != a7 + ((v7 - 576) | a6) - 502 - 1935;
  return (*(uint64_t (**)(void))(v9 + 8 * ((3448 * v11) ^ v7)))();
}

uint64_t sub_10014E3C4(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,int a50)
{
  STACK[0x5B0] = a1;
  *(_DWORD *)a1 = 404926092;
  *(_WORD *)(a1 + 4) = 22041;
  uint64_t v51 = (*(uint64_t (**)(uint64_t))(v50 + 8 * (((a50 - 2266) | 0x60B) + 2881)))(120);
  unint64_t v52 = STACK[0x258];
  STACK[0x7D8] = v51;
  return (*(uint64_t (**)(void))(v52
                              + 8
                              * ((((((a50 + 38) | 0xB) ^ (v51 == 0)) & 1)
                                * (((a50 - 2266) | 0x60B) - 1280)) ^ ((a50 - 2266) | 0x60B))))();
}

uint64_t sub_10014E434(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  return (*(uint64_t (**)(void))(v14 + 8 * (((v13 ^ 0x957 ^ (v13 - 1138332665) & 0x43D99ACD) * (a13 == 0)) ^ v13)))();
}

uint64_t sub_10014E480@<X0>(int a1@<W0>, int a2@<W1>, int a3@<W2>, int a4@<W8>)
{
  int v11 = (a3 ^ 0x877EA300)
      + 934268241 * (v7 + *(_DWORD *)(v9 + 4 * v7 - 2939725432) * ((v4 + 11) ^ 0x9C46CDED))
      - 1950405933;
  unsigned int v12 = (v11 ^ 0x3FEB1FAE) - 1072373678 + ((2 * v11) & 0x7FD63F5C);
  unsigned int v13 = v12
      + (v12
       - ((((v12 * (unint64_t)v10) >> 32)
                       + ((v12 - ((v12 * (unint64_t)v10) >> 32)) >> 1)) >> 11)
       * a4)
      * v8;
  unsigned int v14 = (v13 - 241500333 - ((2 * v13) & 0xE335FEA6)) ^ a1;
  int v15 = ((v14 + 580948989 - ((2 * v14) & 0x454127FA)) ^ a2) + (v5 ^ 0x3740172C);
  unsigned int v16 = v15 - ((2 * v15 - 157029004) & 0xFB5AFA4C);
  int v17 = ((v16 + 2030007264) ^ 0x25282D9) + 1;
  HIDWORD(v18) = (v16 + 2030007264) ^ 0x7DAD7D26;
  LODWORD(v18) = -2030007265 - v16;
  unsigned int v19 = v5 ^ 0xCAED6A0A ^ (v16 + 2030007264);
  unsigned int v20 = ((2 * (v17 + (a2 ^ 0x22A093FD))) & 0xFFBC5E3E) + ((v17 + (a2 ^ 0x22A093FD)) ^ 0x7FDE2F1F);
  int v21 = 2145267487 - v20 + (v18 >> 31);
  unsigned int v22 = v21 ^ (v17 + (a1 ^ 0xF19AFF53) - ((2 * (v17 + (a1 ^ 0xF19AFF53))) & 0x5CF6F2B8) - 1367639716);
  unsigned int v23 = v19 - ((2 * v19) & 0xE8E14D28) + 1953539732;
  HIDWORD(v18) = v22 ^ v23 ^ 0xF15839B;
  LODWORD(v18) = v22 ^ v23;
  unsigned int v24 = ((2 * (v20 - 2145267487 + HIDWORD(v18))) & 0xDABFDBF4) + ((v20 - 2145267487 + HIDWORD(v18)) ^ 0x6D5FEDFA);
  int v25 = (v18 >> 31) + 754455552 - ((2 * (v18 >> 31)) & 0x59F02860) + 48;
  int v26 = v25 ^ (v24 + 6);
  v24 -= 1835003386;
  HIDWORD(v18) = v26 ^ 0x30;
  LODWORD(v18) = v25 ^ 0x2CF81400 ^ v24;
  int v27 = v18 >> 6;
  int v28 = v23 ^ v21;
  HIDWORD(v18) = v27 ^ 0x39999C8;
  LODWORD(v18) = v27 ^ 0x3C000000;
  int v29 = (v28 ^ 0x5E910538) + (v22 ^ 0x849ADAF0) + ((v18 >> 26) ^ 0xE666720F);
  unsigned int v30 = v29 - ((2 * v29 + 958594190) & 0xD1B080BC) + 90816165;
  unsigned int v31 = ((2 * ((v28 ^ 0xA16EFAC7) + (v30 ^ 0x9727BFA1) + 1)) & 0xFF3FF79A)
      + (((v28 ^ 0xA16EFAC7) + (v30 ^ 0x9727BFA1) + 1) ^ 0x7F9FFBCD);
  unsigned int v32 = ((2 * ((v30 ^ 0x68D8405E) + v24)) & 0xFCBF6B7A) + (((v30 ^ 0x68D8405E) + v24) ^ 0xFE5FB5BD);
  unsigned int v33 = ((v30 >> 29) ^ 0x7EBFB9F3) + ((8 * v30) ^ 0x46C202F0) - v32;
  unsigned int v34 = (v33 + v31 - ((2 * (v33 + v31)) & 0x607D6858) - 1338067924) ^ v22 ^ 0xA383D17D ^ v30;
  int v35 = v34 - 827907608 + ~((2 * v34 + 240188878) & 0xEFD4600);
  return (*(uint64_t (**)(void, void))(v6 + 8 * ((13 * (v7 == 734931431)) ^ v4)))(v31- 2141191117+ (v35 ^ 0x877EA300)- 241500333- ((2 * (v31 - 2141191117 + (v35 ^ 0x877EA300))) & 0xE335FEA6), v32 + 27281987 + (v35 ^ 0x877EA300) + 580948989 - ((2 * (v32 + 27281987 + (v35 ^ 0x877EA300))) & 0x454127FA));
}

void sub_10014E88C()
{
}

void sub_10014E894(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 48) - 1437274309 * ((2 * (a1 & 0x2F1A4CF2) - a1 - 790252787) ^ 0xF2EBCE38);
  __asm { BRAA            X10, X17 }
}

uint64_t sub_10014E9D8@<X0>(void *a1@<X1>, int a2@<W5>, int a3@<W6>, int a4@<W8>)
{
  *(_DWORD *)(*a1 + 4 * (v5 + a4)) = v7;
  return (*(uint64_t (**)(void))(v4 + 8 * (((v8 == ((v9 + a2) & a3) + v6) * (v9 - 2968)) ^ v9)))();
}

uint64_t sub_10014EA30@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,int a43)
{
  return (*(uint64_t (**)(void))(v43
                              + 8
                              * ((882
                                * (*(_DWORD *)(a1 + 20) == ((((a43 - 2043936052) & 0x79D3F3FF) + 2356) ^ 0x33582CCF))) ^ (a43 + 889))))();
}

uint64_t sub_10014EA90@<X0>(int a1@<W8>)
{
  unsigned int v4 = -355224804 - *(_DWORD *)(v1 + 16);
  BOOL v5 = a1 + 1657026917 > v4;
  if (a1 + 1657026917 < ((v2 - 2391) | 0x482u) - 1420556544 != v4 < 0xAB540BB2) {
    BOOL v5 = a1 + 1657026917 < ((v2 - 2391) | 0x482u) - 1420556544;
  }
  return (*(uint64_t (**)(void))(v3 + 8 * ((v5 | (32 * v5)) ^ v2)))();
}

uint64_t sub_10014EB10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, int a12)
{
  return (*(uint64_t (**)(void))(v12 + 8 * ((51 * (a12 == (v13 ^ 0xFD) - 4526)) ^ v13)))();
}

uint64_t sub_10014EB44()
{
  *(void *)(v5 - 120) = v2;
  *(_DWORD *)(v5 - 124) = (v4 + 534) ^ (((2 * ((v5 - 136) & 0x14B50BF0) - (v5 - 136) + 1800074252) ^ 0x7DE4A248) * v0);
  *(void *)(v5 - 136) = v3;
  uint64_t v6 = (*(uint64_t (**)(uint64_t))(v1 + 8 * (v4 ^ 0x1061)))(v5 - 136);
  return (*(uint64_t (**)(uint64_t))(v1
                                            + 8
                                            * (((((v4 + 60) ^ (*(_DWORD *)(v5 - 128) > 0x2FB2CDA1u)) & 1)
                                              * (v4 - 491)) ^ v4)))(v6);
}

uint64_t sub_10014EBF0(uint64_t a1, uint64_t a2, int a3)
{
  *(void *)(v6 + v5) = *(void *)(v4 + v5);
  return (*(uint64_t (**)(uint64_t, uint64_t, void))(v8 + 8 * (((a3 == 0) * v3) ^ v7)))(a1, a2, (a3 + 8));
}

uint64_t sub_10014EC20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,int a28,uint64_t a29,uint64_t a30,unsigned __int8 a31,uint64_t a32,uint64_t a33,uint64_t a34,unsigned __int8 a35,int a36,unsigned __int8 a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55)
{
  int v58 = (a28 - 3686) | 0x8E8;
  v76[0] = *(unsigned char *)(a52 + (v57 ^ 0x26));
  int v59 = *(unsigned __int8 *)(a52 + (a31 ^ 0xA8));
  int v60 = (~(_BYTE)v59 >> 4) ^ (~(_BYTE)v59 >> 3);
  int v61 = *(unsigned __int8 *)(a52 + (a6 ^ 0xA8));
  int v62 = (~(_BYTE)v61 >> 4) ^ (~(_BYTE)v61 >> 3);
  unsigned int v63 = *(unsigned __int8 *)(a52 + (a37 ^ 0xA8));
  int v64 = (v63 >> 4) ^ (v63 >> 3);
  unsigned int v65 = ((v63 ^ v64 ^ 0x10) - v63) ^ ((v64 ^ 0xFFFFFFEF) + 1);
  unsigned int v77 = (v64 ^ 0xFFFFFF95 ^ (v65 - ((2 * v65) & 0xA) - 123)) + ~v63;
  unsigned int v66 = *(unsigned __int8 *)(a52 + (v57 ^ 0x65));
  int v67 = (~(_BYTE)v66 >> 4) ^ (v66 >> 3) ^ v59 ^ (v60 - ((2 * v60) & 0x18) - 116) ^ 0x6C;
  unsigned int v68 = *(unsigned __int8 *)(a52 + (v57 ^ 0xC6));
  unsigned int v69 = (~(_BYTE)v68 >> 4) ^ (v68 >> 3) ^ v61 ^ (v62 - ((2 * v62) & 0xFFFFFFF3) - 103) ^ 0x79;
  int v70 = (~v76[0] >> 4) ^ (~v76[0] >> 3) ^ v77;
  LOBYTE(v70) = v76[0] ^ (v70 + (~(2 * v70) | 0x11) - 8) ^ 8;
  uint64_t v71 = ((v68 ^ 0xD8 ^ (v69 - ((2 * v69) & 0x4E) + 39)) << 16) | (v70 << 8);
  uint64_t v72 = *(void *)(v56 + 8 * (((668644555 << (v58 ^ 0xEE)) | a35 & 7 ^ 6) ^ 0x3ED5A71Fu));
  *((void *)&v73 + 1) = v72 ^ 0x192AD76A9CLL;
  *(void *)&long long v73 = v72 ^ 0xE199538000000000;
  unint64_t v74 = (v73 >> 37) + 0x170CD96011382C5CLL - ((2 * (v73 >> 37)) & 0x2E19B2C0227058B8);
  *(void *)(a55 + 8 * ((((a35 >> 3) ^ 0x18) + 668644555 - ((2 * ((a35 >> 3) ^ 0x18)) & 0x16)) ^ 0x27DAB4CBu)) = v74 ^ 0x54192E77A4E9ABB6 ^ (((v55 | a8) ^ (v74 >> 3) & 0x1347E31C7F10F947 ^ 0x241830C02000103) + 0x170CD96011382C5CLL - ((2 * ((v55 | a8) ^ (v74 >> 3) & 0x1347E31C7F10F947 ^ 0x241830C02000103)) & 0x2E19B2C0227058B8));
  return (*(uint64_t (**)(void, void, uint64_t))(a54 + 8 * v58))((v66 ^ (v67 + (~(2 * v67) | 7) + 125)) ^ 0x83u, v70, v71);
}

uint64_t sub_10014F638(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  HIDWORD(v12) = a7;
  LODWORD(v12) = a7 ^ v7;
  return (*(uint64_t (**)(void))(v9 + 8 * ((474 * (v10 + 1 == v11 + 60)) ^ a3)))((v12 >> 2)
                                                                                             + v7 - (v8 & (2 * (v12 >> 2))));
}

uint64_t sub_10014F700(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v5 + 8 * ((93 * ((((a4 - 3843) ^ 0x67CC5BC4 ^ (v4 < 0x20)) & 1) == 0)) ^ a4)))();
}

uint64_t sub_10014F744(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * (int)((((a3 - 1433548602) ^ (a3 + 578) ^ 0xAA8DDA98)
                                     * ((v4 + v3 + 100668426) < 8)) ^ a3)))();
}

uint64_t sub_10014F80C@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, uint64_t a10)
{
  *a4 = a10;
  if (a5) {
    BOOL v11 = a9 == -557495541;
  }
  else {
    BOOL v11 = 1;
  }
  int v13 = v11 || a3 == 0;
  return (*(uint64_t (**)(void))(v10 + 8 * ((v13 * (((a1 - 1101198840) & 0x41A2FBD7) - 2011)) ^ a1)))();
}

uint64_t sub_10014F878@<X0>(uint64_t a1@<X0>, int a2@<W1>, int a3@<W2>, int a4@<W8>)
{
  *(unsigned char *)(a1 + (v5 + a2 + 4016)) = *(unsigned char *)(v4 + (v5 + a2 + 4016));
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * ((4250 * (a2 - 1 == ((a3 + 1123233686) & 0x207BDB3D ^ (a4 + 217)))) ^ (v7 + a3 + 651))))();
}

uint64_t sub_10014F8D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(void))(v6
                              + 8 * (((v7 < (a6 ^ 0xC122DFEE) + 1054681208) * (((a6 + 1481) | 0xD0) ^ 0xEF0)) ^ a6)))();
}

uint64_t sub_10014F920(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17, int a18)
{
  return (*(uint64_t (**)(void))(v19 + 8 * (((a18 == 0) * ((559 * (v18 ^ 0x55D)) ^ 0x6B1)) ^ v18)))();
}

uint64_t sub_10014F98C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
  int v33 = v30 + 539922595;
  if ((v30 + 539922595) <= 0x40) {
    int v33 = 64;
  }
  BOOL v34 = (-v28 - 539923749 - v29 + v33 + 1154) < 0xF;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v31 + 8 * ((v32 + 1036) ^ ((2 * v34) | (4 * v34)))))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28);
}

#error "100151AB0: call analysis failed (funcsize=1954)"

uint64_t sub_100151AB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(void))(v9 + 8 * (((((v8 + 4394445) | 0x323C5001) + v6) * (v7 != a6)) ^ v8)))();
}

void sub_100151AEC(void *a1@<X8>)
{
  *a1 = v1;
  *(void *)(v2 - 0x46197683F7D18950) = v1;
  JUMPOUT(0x10016E7E0);
}

uint64_t sub_100151B10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, unsigned int a15, uint64_t a16)
{
  a15 = (375636451 * (((&a13 | 0x368D41D) - (&a13 & 0x368D41D)) ^ 0x50568E91)) ^ 0x1B5;
  a13 = v16;
  a16 = a9;
  uint64_t v19 = (*(uint64_t (**)(uint64_t *))(v17 + 37912))(&a13);
  return (*(uint64_t (**)(uint64_t))(v17 + 8 * ((174 * (a14 == v18)) ^ 0x46Du)))(v19);
}

uint64_t sub_100151BBC()
{
  return sub_100151C10((v0 - 1322), 0xDE9E7FE3FAD6F37BLL, 0x1F5ADE6F6, 0x3DE7E8FD9FFFCFEDLL);
}

uint64_t sub_100151C10(int a1)
{
  BOOL v16 = v15 > v6;
  uint64_t v17 = 4 * (v10 + v8);
  int v18 = (v1 ^ (v11 + 428)) + v13 + (*(_DWORD *)(*v5 + v17) ^ v12);
  *(_DWORD *)(*v7 + v17) = v18 + v12 - (v9 & (2 * v18));
  int v19 = v10 + 1 + v3;
  LODWORD(v17) = v16 ^ (v19 < v2);
  BOOL v20 = v19 < v4;
  if (!v17) {
    BOOL v16 = v20;
  }
  return (*(uint64_t (**)(void))(v14 + 8 * (((8 * !v16) | (16 * !v16)) ^ a1)))();
}

uint64_t sub_100151CA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, int a13)
{
  return (*(uint64_t (**)(void))(v14 + 8 * (((a13 == 0) * (v13 - 2262)) ^ (v13 - 999))))();
}

void sub_100151D04()
{
}

uint64_t sub_100151D4C()
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (int)((((v1 + v0 + 100668426) > 7)
                                     * ((v2 + 1811874473) & 0xF40FEFFF ^ 0x600F02B7)) ^ (v2 - 2531))))();
}

void sub_100151DC4()
{
}

uint64_t sub_100151DD0@<X0>(int a1@<W5>, int a2@<W7>, uint64_t a3@<X8>)
{
  *(_DWORD *)(*v6 + 4 * (v4 + v3)) = v5;
  return sub_100147304(a1, a2, a3);
}

void sub_100151DFC()
{
}

void sub_100151E94(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 12) ^ (375636451 * ((a1 - 350324472 - 2 * (a1 & 0xEB1E7908)) ^ 0xB8202384));
  __asm { BRAA            X9, X17 }
}

uint64_t sub_100151F64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, int a14)
{
  unsigned int v17 = (a14 ^ v16) - ((2 * (a14 ^ v16)) & 0xCCFC5412) - 427939319;
  return (*(uint64_t (**)(void))(v15
                              + 8
                              * ((97
                                * (((2 * v17) & 0xF3FFD7EC ^ (v14 - 1057209377)) + (v17 ^ 0x1F81C1FF) + 1073569472 != 972901046)) ^ v14)))();
}

uint64_t sub_100151FE8@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v1
                              + 8 * (((*(void *)(STACK[0x528] + 24) == 0) * (a1 ^ 0x34D ^ a1 ^ 0x3E ^ 0x3E)) ^ a1)))();
}

uint64_t sub_100152020@<X0>(char a1@<W5>, char a2@<W6>, int a3@<W7>, int a4@<W8>)
{
  int v9 = (unsigned int *)(v6 + 4 * v5);
  uint64_t v10 = v5 + 1;
  *int v9 = *(_DWORD *)(v7 + 4 * (*(_DWORD *)(v6 + 4 * v10) & 1)) ^ v9[397] ^ ((*(_DWORD *)(v6 + 4 * v10) & 0x7FFFFFFE | v4 & 0x80000000) >> ((a4 ^ a1) * a2 + 93));
  return (*(uint64_t (**)(void))(v8 + 8 * (((v10 == 227) * a3) ^ a4)))();
}

uint64_t sub_100152084()
{
  STACK[0x7D0] = STACK[0xA58];
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((((v0 - 549530604) & 0x20C12BEB ^ ((v0 - 2241) | 0x54) ^ 0xE9C)
                                * (LODWORD(STACK[0xA64]) == v1)) ^ (v0 - 1595))))();
}

uint64_t sub_1001520E8()
{
  unint64_t v1 = STACK[0x5B8];
  LODWORD(STACK[0x544]) = v0;
  *(void *)STACK[0x4C0] = v1;
  return sub_1001D5B40();
}

uint64_t sub_10015210C(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5
                                                     + 8
                                                     * (((v4 - 7117 + 7 * (v4 ^ 0xEAC))
                                                       * ((v2 + v1 + 100668426) < 8)) ^ v4)))(a1, v3);
}

uint64_t sub_100152170(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * (((((a3 - 2018) | 0x860) - 1656) * ((v4 + v3 + 100668426) > 7)) ^ a3)))();
}

uint64_t sub_1001521D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, int a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, unsigned int a18, uint64_t a19, unsigned int a20,uint64_t a21,unsigned int a22)
{
  unsigned int v28 = 366490169
      * (((&a18 | 0xAD9916C8) - &a18 + (&a18 & 0x5266E930)) ^ 0xBB37408C);
  a18 = (v24 ^ 0x1E9FE3BD) + ((2 * v24) & 0x3D3FC77A) - 167911596 + v28;
  a20 = v28 + 3254;
  a19 = a12;
  (*(void (**)(unsigned int *))(v25 + 37576))(&a18);
  unsigned int v29 = ((&a18 - 1366985763 - 2 * (&a18 & 0xAE8573DD)) ^ 0x69041394) * v27;
  a19 = v22;
  a22 = (v23 ^ 0xB37CEA7D) - v29 + ((2 * v23) & 0x66F9D4FA) + 1857550315;
  a20 = v29 + 4063;
  a21 = a12;
  (*(void (**)(unsigned int *))(v25 + 37760))(&a18);
  unsigned int v30 = (((&a18 | 0x64532E7A) - (&a18 & 0x64532E7A)) ^ 0xA3D24E33) * v27;
  a21 = a12;
  a19 = v26;
  a20 = v30 + 4063;
  a22 = (a11 ^ 0xE7BFFEEC) + ((2 * a11) & 0xCF7FFDD8) - v30 + 980738940;
  uint64_t v31 = (*(uint64_t (**)(unsigned int *))(v25 + 37760))(&a18);
  return (*(uint64_t (**)(uint64_t))(v25 + 8 * ((122 * (a18 == 847203058)) ^ 0x420u)))(v31);
}

uint64_t sub_1001523B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, int a20,uint64_t a21,int a22,uint64_t a23,unsigned int a24)
{
  int v28 = v24 - 7;
  unsigned int v29 = 31090337 * ((2 * (&a20 & 0x74D4D810) - &a20 + 187377644) ^ 0xCCAA47A5);
  a24 = (v26 ^ 0xBE74F7FA) + ((2 * v26) & 0x7CE9EFF4) - v29 + 657 * (v28 ^ 0x43C) + 1673519803;
  a23 = a16;
  a21 = v25;
  a22 = v29 + v28 + 2976;
  uint64_t v30 = (*(uint64_t (**)(int *))(v27 + 8 * (v28 + 3633)))(&a20);
  return (*(uint64_t (**)(uint64_t))(v27 + 8 * ((121 * (a20 != 847203058)) ^ v28)))(v30);
}

uint64_t sub_100152494(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,char a35)
{
  int v39 = (*(uint64_t (**)(void, uint64_t, uint64_t, uint64_t, uint64_t, char *))(v38 + 8 * (v37 + 3398)))(*(unsigned int *)(a10 - 4), 21, v36, 552, v36, &a35);
  return (*(uint64_t (**)(void))(v38
                              + 8
                              * ((3255
                                * ((v39 ^ 0xB67F5BFB) + 2080370423 + ((2 * v39) & 0x6CFEB7F6) == ((v37 - 1264277153) & 0x4B5B5FBE ^ (v35 - 1578)))) ^ v37)))();
}

uint64_t sub_100152530(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  int v16 = (v12 - 3556) | 0x100;
  uint64_t v17 = (*(uint64_t (**)(uint64_t, void))(v14 + 8 * (v12 + 1046)))(a12, 0);
  (*(void (**)(uint64_t))(v14 + 8 * (v12 + 992)))(v17);
  v13[1] = (*(uint64_t (**)(void))(v14 + 8 * (v12 ^ 0x1CE0)))() + ((1664525 * (*v13 ^ (*v13 >> 30))) ^ v13[1]);
  uint64_t v18 = v15 - 152;
  unint64_t v19 = 1314530549
      * ((~((v15 - 152) | 0xAA431977F3A98D02) + ((v15 - 152) & 0xAA431977F3A98D02)) ^ 0xF2996615BD5FF433);
  *(void *)(v18 + 40) = v19 ^ 0x26F;
  int v20 = (v16 + 1082495960) ^ v19;
  *(_DWORD *)(v15 - 152) = v19 + v16 - 849013333;
  *(void *)(v18 + 8) = v19 + 2;
  *(_DWORD *)(v15 - 124) = v20;
  *(_DWORD *)(v15 - 120) = v19 + 1;
  *(_DWORD *)(v15 - 132) = v16 + 1082495960 - v19 - 238;
  *(_DWORD *)(v15 - 128) = v20 ^ 0x109;
  uint64_t v21 = (*(uint64_t (**)(uint64_t))(v14 + 8 * (v16 ^ 0x13DF)))(v15 - 152);
  return (*(uint64_t (**)(uint64_t))(v14 + 8 * *(int *)(v15 - 136)))(v21);
}

uint64_t sub_100152698()
{
  return (*(uint64_t (**)(void))(v4 + 8 * ((((((v3 + 526) | 1) ^ 0x82D) + v3 + 527) * (v1 == v2)) ^ v3)))((v0 - v2));
}

uint64_t sub_1001526D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(void))(v8
                              + 8
                              * ((127 * (v7 < ((v6 + 593 * (a6 ^ 0x1BD) + 1800) ^ (a6 - 402786513) & 0x5E9ADF57u))) ^ a6)))();
}

uint64_t sub_100152728(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, unint64_t *a17, int a18, uint64_t a19, unsigned int a20,int a21,int a22)
{
  unsigned int v25 = 1314530549 * ((2 * (&a17 & 0x1B8FD538) - &a17 - 462411068) ^ 0x5579AC0A);
  a19 = a13;
  a18 = (v22 + 1780978828) ^ v25;
  a22 = v25 ^ 0x4EA001FB;
  a20 = 1265807394 - v25;
  a17 = &STACK[0x70766EB78D2F3F28];
  uint64_t v26 = (*(uint64_t (**)(unint64_t **))(v24 + 8 * (v22 ^ 0x1A9F)))(&a17);
  BOOL v27 = a21 == v23 + ((v22 - 2251) | 0x203) - 515;
  return (*(uint64_t (**)(uint64_t))(v24 + 8 * ((v27 | (32 * v27)) ^ v22)))(v26);
}

uint64_t sub_100152808()
{
  BOOL v5 = v2 - 1646973426 > (int)(((v1 + 99219360) & 0xFA160AEE) + 1991247000) || v2 - 1646973426 < v0 - 156233953;
  return (*(uint64_t (**)(void))(v3 + 8 * ((v5 * (973 * (v1 ^ 0x7F5) + 2125)) ^ v1)))();
}

uint64_t sub_100152878()
{
  unint64_t v3 = (v1 - 1065330539);
  STACK[0x988] = v3;
  unint64_t v4 = STACK[0x5E8];
  STACK[0x990] = STACK[0x5E8];
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (int)(((v3 + 0x6F981078787CB97CLL - v4 > 9) * ((v0 + 175883317) & 0xF5843BDF ^ 0xBDD)) ^ v0)))();
}

void sub_1001528F4()
{
}

uint64_t sub_100152994(uint64_t a1, uint64_t a2, uint64_t a3, int a4, int a5, uint64_t a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(void))(v8
                              + 8 * (((a4 + a5 - 912 != v9 + 294 * (a8 ^ 0x24B) - 556) * ((a8 + 335) ^ 0x39D)) ^ a8)))();
}

uint64_t sub_1001529E0@<X0>(int a1@<W5>, int a2@<W7>, int a3@<W8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19, char a20)
{
  *(&a20 + a3 + v20 + ((v22 - 1359188689) & 0x2CD52ABEu)) = *(unsigned char *)(v21 + v24 - 1329263342)
                                                          - ((2 * *(unsigned char *)(v21 + v24 - 1329263342)) & 0xC0)
                                                          + 96;
  return (*(uint64_t (**)(void))(v23
                              + 8
                              * (((2 * ((a1 + a3 + 1) > 0x3F)) | (8 * ((a1 + a3 + 1) > 0x3F))) ^ (a2 + v22 + 404))))();
}

uint64_t sub_100152A64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(void))(v9
                              + 8
                              * (((((v11 == a8) ^ (v10 + v8 - 29)) & 1) * ((v8 + 1097) ^ 0xA2E)) ^ v8)))();
}

uint64_t sub_100152AB0()
{
  *(_DWORD *)STACK[0x728] = ((v0 ^ 0xE8) - 509922721) ^ LODWORD(STACK[0x70C]);
  return sub_10012AE2C();
}

void sub_100152AE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40)
{
  int v44 = 142545853 * ((-1634267520 - ((v43 - 192) | 0x9E970E80) + ((v43 - 192) | 0x6168F17F)) ^ 0x4B975E10);
  *(_DWORD *)(v43 - 176) = (v40 + 2982) ^ v44;
  *(void *)(v43 - 184) = a40;
  *(_DWORD *)(v43 - 192) = v42 - v44 + (v40 ^ 0xFB7F77AA);
  (*(void (**)(uint64_t))(v41 + 8 * (v40 ^ 0x1166)))(v43 - 192);
  JUMPOUT(0x100112A04);
}

uint64_t sub_100152B78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, int a16, int a17)
{
  return (*(uint64_t (**)(void))(v18 + 8 * ((1966 * (a17 == 0)) | v17)))();
}

void sub_100152BD4()
{
  uint64_t v0 = (uint64_t)*(&off_100520A90
                + ((75 * ((qword_1005A6FB0 + dword_1005A70A8) ^ 0x7E)) ^ byte_100491900[byte_1004A0960[(75 * ((qword_1005A6FB0 + dword_1005A70A8) ^ 0x7E))] ^ 0xD4])
                - 29);
  uint64_t v1 = *(void *)(v0 - 4);
  uint64_t v2 = (uint64_t)*(&off_100520A90
                + (byte_100491800[byte_1004A086C[(75
                                                                                                * (v1 ^ qword_1005A6FB0 ^ 0x7E))
                                                                              - 12] ^ 0xB9] ^ (75
                                                                                             * (v1 ^ qword_1005A6FB0 ^ 0x7E)))
                + 161);
  unint64_t v3 = (unint64_t)&v5[*(void *)(v2 - 4) - v1];
  *(void *)(v0 - 4) = 544792907 * v3 + 0x5547F155C74775EALL;
  *(void *)(v2 - 4) = 544792907 * (v3 ^ 0xE12C07DFCC70D97ELL);
  v6[1] = 31090337
        * (((v6 | 0x2BCF79EE) - v6 + (v6 & 0xD4308610)) ^ 0xEC4E19A7)
        + 1655392376;
  LODWORD(v2) = 544792907 * (*(_DWORD *)(v0 - 4) ^ 0xCC70D97E ^ *(_DWORD *)(v2 - 4));
  unint64_t v4 = (char *)*(&off_100520A90
               + ((75 * (dword_1005A70A8 ^ 0x7E ^ qword_1005A6FB0)) ^ byte_100491900[byte_1004A0960[(75 * (dword_1005A70A8 ^ 0x7E ^ qword_1005A6FB0))] ^ 0xD4])
               - 94)
     - 8;
  (*(void (**)(_DWORD *))&v4[8
                                      * (byte_100491904[(byte_1004A0964[v2 - 4] ^ 0xD4)
                                                                       - 4] ^ v2)
                                      + 36720])(v6);
  __asm { BRAA            X8, X17 }
}

_DWORD *sub_100152DF4@<X0>(_DWORD *result@<X0>, int a2@<W8>)
{
  if (*(_DWORD *)(v2 + 16) == ((v3 - 1060) | 0x420) + 502909581) {
    int v4 = a2 - 1;
  }
  else {
    int v4 = a2;
  }
  *uint64_t result = v4;
  return result;
}

void sub_100152E24()
{
}

uint64_t sub_100152E30()
{
  return sub_10018BD08();
}

uint64_t sub_100152E4C@<X0>(int a1@<W8>)
{
  STACK[0x300] = STACK[0x448] + 0x6BBE7547D3B34F47;
  *(int64x2_t *)&STACK[0x2E0] = vdupq_n_s64(0x1FFFFFFFFFFFFFEuLL);
  *(int64x2_t *)&STACK[0x2F0] = vdupq_n_s64(0x38uLL);
  *(int64x2_t *)&STACK[0x280] = vdupq_n_s64(0x4211A2B94BD2604uLL);
  *(int64x2_t *)&STACK[0x3B0] = vdupq_n_s64(0xF8FFFFFFFFFFFFFFLL);
  *(int64x2_t *)&STACK[0x2C0] = vdupq_n_s64(0x3389787AAF6ABC20uLL);
  *(int64x2_t *)&STACK[0x2D0] = vdupq_n_s64(0x4CBF4DF0C6D61BAuLL);
  *(int64x2_t *)&STACK[0x2A0] = vdupq_n_s64(0xDD62E11789B3CC55);
  *(int64x2_t *)&STACK[0x2B0] = vdupq_n_s64(0x8E4D326BB8064ABFLL);
  *(int64x2_t *)&STACK[0x290] = vdupq_n_s64(0xAB3839C76ADE700DLL);
  *(int64x2_t *)&STACK[0x260] = vdupq_n_s64(0x7A587216E06F0656uLL);
  *(int64x2_t *)&STACK[0x270] = vdupq_n_s64(0x1B88E7A245DB7855uLL);
  *(int64x2_t *)&STACK[0x230] = vdupq_n_s64(0x3D4EDCEE2F7AA20uLL);
  *(int64x2_t *)&STACK[0x240] = vdupq_n_s64(0xDC9BC02F237F7F2BLL);
  *(int64x2_t *)&STACK[0x210] = vdupq_n_s64(0x119E6FE1D11FAA35uLL);
  *(int64x2_t *)&STACK[0x220] = vdupq_n_s64(0x7E1589188E842AF0uLL);
  *(int64x2_t *)&STACK[0x200] = vdupq_n_s64(0x88480B2A2303E783);
  return (*(uint64_t (**)(uint64_t, unint64_t, uint64_t, unint64_t, unint64_t))(STACK[0x258] + 8 * ((13 * (114 * (((a1 + 1973) | 0x18A) ^ 0x9ED) == 4462)) ^ (((a1 + 1973) | 0x18A) - 1860))))(0x119E6FE1D11FAA35, STACK[0x300], 0x54C7C63895218FF2, 0x88480B2A2303E783, 0x94418AB82C4CB0F1);
}

uint64_t sub_10015320C(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(void))(v7 + 8 * (int)(((((a6 - 907578090) & 0xBFBABFF7) + 1985862412) * (v6 == a4)) ^ a6)))();
}

uint64_t sub_100153250(uint64_t result)
{
  *(_DWORD *)(result + 28) = -369410473;
  return result;
}

uint64_t sub_10015325C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  unsigned int v21 = (v16 + 154735468) & 0xF6C6EE9A;
  int v22 = 31090337 * ((((2 * (v20 - 128)) | 0x4310A24C) - (v20 - 128) - 562581798) ^ 0xE609316F);
  *(_DWORD *)(v20 - 112) = (v16 - 656) ^ v22;
  *(_DWORD *)(v20 - 128) = v22 + v14 + v21 + 1763351318;
  *(void *)(v20 - 120) = v19;
  (*(void (**)(uint64_t))(v15 + 8 * (v16 + 3008)))(v20 - 128);
  *(_DWORD *)(v20 - 116) = (v21 - 1107) ^ (366490169 * ((v20 + 634036782 - 2 * ((v20 - 128) & 0x25CAA2AE)) ^ 0x3364F4EA));
  *(void *)(v20 - 112) = a14;
  *(void *)(v20 - 128) = v18;
  uint64_t v23 = (*(uint64_t (**)(uint64_t))(v15 + 8 * (int)(v21 + 2486)))(v20 - 128);
  return (*(uint64_t (**)(uint64_t))(v15
                                            + 8
                                            * (int)(((*(_DWORD *)(v20 - 120) + ((37 * (v21 ^ 0x887)) ^ (v17 + 967)) < 0xDCBBAAEB)
                                                   * (v21 - 2198)) | v21)))(v23);
}

uint64_t sub_1001533A0()
{
  return (*(uint64_t (**)(void))(v0 + 8 * ((7044 * (*(_DWORD *)(v1 - 0x69166E42B329955BLL) == v2 + 847200411)) ^ v2)))();
}

uint64_t sub_1001533E8()
{
  return sub_1001533F0();
}

uint64_t sub_1001533F0@<X0>(int a1@<W7>, int a2@<W8>, int8x16_t a3@<Q0>, int8x16_t a4@<Q3>)
{
  int8x16_t v10 = *(int8x16_t *)(v9 + (v4 + v7 + v5));
  *(int8x16_t *)(v6 + v5) = vaddq_s8(vsubq_s8(v10, vandq_s8(vaddq_s8(v10, v10), a4)), a3);
  return (*(uint64_t (**)(void))(v8 + 8 * ((60 * (v5 != 48)) ^ (a1 + a2 - 149))))();
}

uint64_t sub_10015343C(uint64_t a1, int a2, uint64_t a3, uint64_t a4, int a5)
{
  int v11 = a5 & 0x7F6DD7F3;
  unsigned int v12 = a2 + v9 + v8 + 1654;
  long long v13 = *(_OWORD *)(v6 + v12 - 31);
  uint64_t v14 = a1 + v12;
  *(_OWORD *)(v14 - 15) = *(_OWORD *)(v6 + v12 - 15);
  *(_OWORD *)(v14 - 31) = v13;
  return (*(uint64_t (**)(void))(v10 + 8 * ((44 * (v5 + v11 - (v7 & 0xFFFFFFE0) == -30)) ^ (v5 + v11 + 1115))))();
}

uint64_t sub_1001534B0()
{
  int v4 = ((159 * (v0 ^ 0x7E6)) ^ 0xCAE4225B) + v2;
  int v5 = (v3 > 0x60B0CFA7) ^ (v4 < -1622200232);
  BOOL v6 = v4 < (int)(v3 + 525283416);
  if (v5) {
    BOOL v6 = v3 > 0x60B0CFA7;
  }
  return (*(uint64_t (**)(void))(v1 + 8 * ((4037 * v6) ^ v0)))();
}

uint64_t sub_10015352C@<X0>(int a1@<W2>, int a2@<W4>, int a3@<W7>, int a4@<W8>)
{
  LODWORD(STACK[0x6E0]) = LODWORD(STACK[0x520]) + LODWORD(STACK[0x6EC]);
  unsigned int v13 = (a3 ^ 0xCA99C4CD) + 795666571;
  int v14 = v5;
  int v15 = STACK[0x708];
  int v16 = LODWORD(STACK[0x708]) - v14;
  unsigned int v17 = ((2 * (v13 + v16)) & 0xAFAA4BF6) + ((v13 + v16) ^ 0xD7D525FB);
  int v18 = a2 - LODWORD(STACK[0x700]);
  int v19 = STACK[0x700];
  unsigned int v20 = ((2 * (v4 - v18 - 771215297)) & 0xFBFAD7FE) + ((v4 - v18 - 771215297) ^ 0x7DFD6BFF);
  LODWORD(STACK[0x6B0]) = v20;
  int v21 = v18 - a4;
  int v22 = v18 + v6;
  LODWORD(STACK[0x4F4]) = v12;
  int v23 = v12 - v16 - 1815950607 - ((2 * (v12 - v16) + 1210023438) & 0x5F661F54);
  int v24 = v21 + v19;
  int v25 = v24 + a1 + 1850489499;
  LODWORD(STACK[0x6AC]) = v25;
  unsigned int v26 = v25 - ((2 * (v24 + a1) + 1018355254) & 0x9FE59700);
  LODWORD(STACK[0x6B8]) = v26;
  unsigned int v27 = 431 * (~HIBYTE(v26) & 0xF) + 279719;
  LODWORD(STACK[0x6C4]) = v11;
  unint64_t v28 = STACK[0x710];
  int v29 = ((*(unsigned __int8 *)(STACK[0x710] + (v27 - 957 * ((4487950 * (unint64_t)v27) >> 32))) ^ 0x3C) << 8) ^ ((*(unsigned __int8 *)(STACK[0x710] + (431 * ((v26 >> 28) ^ 0xC) + 279719 - 957 * ((4487950 * (unint64_t)(431 * ((v26 >> 28) ^ 0xC) + 279719)) >> 32))) ^ 0x3C) << 12);
  unsigned int v30 = 431 * (HIWORD(v26) & 0xF ^ 2) + 279719;
  unsigned int v31 = 431 * (~(v26 >> 20) & 0xF) + 279719;
  int v32 = v29 | *(unsigned __int8 *)(STACK[0x710] + (v30 - 957 * ((4487950 * (unint64_t)v30) >> 32))) ^ 0x3C;
  unsigned int v33 = 431 * ((v26 >> 8) & 0xF ^ 0xB) + 279719;
  int v34 = (v32 << 8) ^ ((*(unsigned __int8 *)(STACK[0x710]
                                          + (v31 - 957 * ((4487950 * (unint64_t)v31) >> 32))) ^ 0x3C) << 12) | *(unsigned __int8 *)(STACK[0x710] + (v33 - 957 * ((4487950 * (unint64_t)v33) >> 32))) ^ 0x3C;
  unsigned int v35 = (v34 << 8) + 517085558 - ((v34 << 9) & 0x3DA43200);
  LODWORD(STACK[0x680]) = v35;
  LODWORD(STACK[0x5C8]) = v14;
  unsigned int v36 = v14 - 340033720 + v17;
  int v37 = v15 + v17;
  unsigned int v38 = v22 + v24 - ((2 * (v22 + v24) + 1239848068) & 0x89AF43E0);
  unsigned int v39 = ((v35 >> 20) & 0xC45 ^ 0xD42D8C00 | (v35 >> 20) & 0xC45 ^ 0x45) ^ (v37 + v36 + 1031574089);
  LODWORD(STACK[0x698]) = v23 + 960;
  int v40 = ((v23 + 960) ^ 0x2FB30FAA)
      - v39
      - 2 * ((((v23 + 960) ^ 0x2FB30FAA) - v39 + 743148404) & 0x663C15AB ^ (((v23 + 960) ^ 0x2FB30FAA) - v39) & 1);
  LODWORD(STACK[0x670]) = v24;
  int v41 = v24 + 2117861638 + (~(2 * v24 + 521427860) | 0x229C5989);
  unsigned int v42 = (v38 - 372577230) ^ (-280266509 - v21 - ((1424469510 - 2 * v21) & 0x89AF43E0));
  unsigned int v43 = ((v38 - 372577230) ^ 0x10FA2DB5) - ((2 * ((v38 - 372577230) ^ 0x10FA2DB5) - 1763735202) & 0xBFABE276);
  unsigned int v44 = ((v38 - 372577230) ^ 0xEF05D24A)
      + v20
      - ((2 * (((v38 - 372577230) ^ 0xEF05D24A) + v20) + 1669135882) & 0xC68BBA74)
      + 352607295;
  LODWORD(STACK[0x690]) = v44;
  unsigned int v45 = (v42 ^ 0x2BD273BA)
      + (v44 ^ 0xE345DD3A)
      + 1531635177
      - ((2 * ((v42 ^ 0x2BD273BA) + (v44 ^ 0xE345DD3A) + 1)) & 0xB695CBD0);
  int v46 = v40 - 1836605154;
  LODWORD(STACK[0x688]) = v40 - 1836605154;
  int v47 = v39 ^ (v14 - v36 + 1801678152);
  unsigned int v48 = (v46 ^ 0xE63C15AA) - v47 + 1561040395 - ((2 * ((v46 ^ 0xE63C15AA) - v47)) & 0xBA172C16);
  unsigned int v49 = v43 + 725988842;
  int v50 = (v41 ^ 0x6EB1D33B) + ((v43 + 725988842) ^ 0x202A0EC4) + 1;
  int v51 = ((2 * v50) & 0x37DFFDEC) + (v50 ^ 0x1BEFFEF6);
  LODWORD(STACK[0x618]) = v36;
  unsigned int v52 = v36 - ((2 * v36 + 1826413252) & 0x9118D264) - 17115500;
  LODWORD(STACK[0x648]) = v52;
  unsigned int v53 = ((2 * v52) & 0xDD9030C6 ^ 0x91101044) + (v52 ^ 0x26447151);
  unsigned int v54 = v53 + 1290263706 - ((2 * v53) & 0x99CFB934);
  int v55 = (v45 ^ 0x5B4AE5E8) + v51 - 468713206 + 199407761 - ((2 * ((v45 ^ 0x5B4AE5E8) + v51 - 468713206)) & 0x17C57122);
  int v56 = v39 - ((2 * v39 + 383748446) & 0x6CFEB19E) - 2115035778;
  unsigned int v57 = ((2 * ((v54 ^ 0x4CE7DC9A) + (v56 ^ 0xC980A730) + 1)) & 0xFF7FFBEE)
      + (((v54 ^ 0x4CE7DC9A) + (v56 ^ 0xC980A730) + 1) ^ 0x7FBFFDF7);
  int v58 = v48 ^ v56;
  LODWORD(STACK[0x6F0]) = v48 ^ v56;
  unsigned int v59 = (v48 ^ 0x5D0B960B)
      + v57
      - 2143288823
      + 2023660722
      - ((2 * ((v48 ^ 0x5D0B960B) + v57 - 2143288823)) & 0xF13D3964);
  LODWORD(STACK[0x684]) = v55;
  int v60 = v45 ^ v49 ^ v55;
  LODWORD(STACK[0x65C]) = v60;
  LODWORD(STACK[0x6EC]) = v60 ^ 0x8F7DAC42;
  unsigned int v61 = (v60 ^ 0x8F7DAC42) + (v41 ^ 0x944A9302 ^ v42 ^ (v51 - 468713206));
  unsigned int v62 = v61 - ((2 * v61) & 0x38847684);
  LODWORD(STACK[0x68C]) = v59;
  int v63 = (v59 ^ 0x789E9CB2) + v57 - 2143288823;
  int v64 = v54 ^ v47 ^ 0x623110E6 ^ (v57 - 2143288823);
  int v65 = v58 ^ LODWORD(STACK[0x4A4]) ^ v59;
  unsigned int v66 = ((2 * (v65 + v64)) & 0xD3F4BF6E) + ((v65 + v64) ^ 0x69FA5FB7);
  int v67 = (v55 ^ 0xBE2B891) + v51 - 468713206;
  v62 -= 1673381054;
  LODWORD(STACK[0x630]) = v62;
  unsigned int v68 = v62 ^ 0xCBFCCED9;
  unsigned int v69 = v67 + 447330876 + (v62 ^ 0x63BDC4BD) + (v62 ^ 0xCBFCCED9) + 1;
  unsigned int v70 = (STACK[0x4A0] & (2 * v69)) + (v69 ^ 0xFBDFFBD5);
  unsigned int v71 = ((v66 - 1778016183) ^ 0x57BEF59B) - 501156063 - ((2 * ((v66 - 1778016183) ^ 0x57BEF59B)) & 0xC441EE42);
  unsigned int v72 = ((2 * (v63 - v66 - 2069620237 + (v71 ^ 0xE220F721))) & 0xFD777FF0)
      + ((v63 - v66 - 2069620237 + (v71 ^ 0xE220F721)) ^ 0x7EBBBFF8);
  unsigned int v73 = v70 + v8 - ((2 * (v70 + v8) + 1375121634) & 0x879025C6) + 1824746324;
  unsigned int v74 = 431 * (HIBYTE(v73) & 0xF ^ 3) + 279719;
  int v75 = v7 + 409026421 - v72 - ((2 * (v7 + 409026421 - v72) + 1286926772) & 0x4FF8E53E);
  LODWORD(STACK[0x660]) = v75;
  LODWORD(STACK[0x67C]) = v73;
  unsigned int v76 = 431 * ((v73 >> 20) & 0xF ^ 0xC) + 279719;
  int v77 = ((*(unsigned __int8 *)(v28 + (v74 - 957 * ((4487950 * (unint64_t)v74) >> 32))) ^ 0x3C) << 8) ^ ((*(unsigned __int8 *)(v28 + (431 * ((v73 >> 28) ^ 0xC) + 279719 - 957 * ((4487950 * (unint64_t)(431 * ((v73 >> 28) ^ 0xC) + 279719)) >> 32))) ^ 0x3C) << 12);
  unsigned int v78 = 431 * (HIWORD(v73) & 0xF ^ 8) + 279719;
  int v79 = v77 | *(unsigned __int8 *)(v28 + (v78 - 957 * ((4487950 * (unint64_t)v78) >> 32))) ^ 0x3C;
  unsigned int v80 = 431 * (((unsigned __int16)(v70 + v8 - ((2 * (v70 + v8) - 20254) & 0x25C6) + 27476) >> 12) ^ 1) + 279719;
  unsigned int v81 = 431 * ((v73 >> 8) & 0xF ^ 2) + 279719;
  int v82 = (v79 << 8) ^ ((*(unsigned __int8 *)(v28 + (v76 - 957 * ((4487950 * (unint64_t)v76) >> 32))) ^ 0x3C) << 12) | *(unsigned __int8 *)(v28 + (v81 - 957 * ((4487950 * (unint64_t)v81) >> 32))) ^ 0x3C;
  unsigned int v83 = v75 + 240577401;
  unsigned int v84 = 431 * (((v75 + 240577401) >> 28) ^ 0xA) + 279719;
  unsigned int v85 = 431 * (((v75 + 240577401) >> 24) & 0xF ^ 7) + 279719;
  unsigned int v86 = 431 * (~((v75 + 240577401) >> 20) & 0xF) + 279719;
  unsigned int v87 = 431 * (((v75 + 240577401) >> 16) & 0xF ^ 0xC) + 279719;
  int v88 = ((((*(unsigned __int8 *)(v28 + (v85 - 957 * ((4487950 * (unint64_t)v85) >> 32))) ^ 0x3C) << 8) ^ ((*(unsigned __int8 *)(v28 + (v84 - 957 * ((4487950 * (unint64_t)v84) >> 32))) ^ 0x3C) << 12) | *(unsigned __int8 *)(v28 + (v87 - 957 * ((4487950 * (unint64_t)v87) >> 32))) ^ 0x3C) << 8) ^ ((*(unsigned __int8 *)(v28 + (v86 - 957 * ((4487950 * (unint64_t)v86) >> 32))) ^ 0x3C) << 12);
  LODWORD(STACK[0x650]) = v83;
  unsigned int v89 = 431 * (((unsigned __int16)v83 >> 12) ^ 7) + 279719;
  unsigned int v90 = 431 * ((v83 >> 8) & 0xF ^ 2) + 279719;
  int v91 = v88 | *(unsigned __int8 *)(v28 + (v90 - 957 * ((4487950 * (unint64_t)v90) >> 32))) ^ 0x3C;
  int v92 = (v91 << 8) - 1562022394 - ((v91 << 9) & 0x45CADC00);
  LODWORD(STACK[0x664]) = v92;
  int v93 = *(unsigned __int8 *)(v28 + (v80 - 957 * ((4487950 * (unint64_t)v80) >> 32))) ^ 0x3C;
  unsigned int v94 = (v82 << 8) - ((v82 << 9) & 0x98038E00) - 872298693;
  LODWORD(STACK[0x66C]) = v94;
  unsigned int v95 = v94 ^ (v93 << 12);
  unsigned int v96 = v92 ^ ((*(unsigned __int8 *)(v28 + (v89 - 957 * ((4487950 * (unint64_t)v89) >> 32))) ^ 0x3C) << 12);
  LODWORD(STACK[0x644]) = v96;
  LODWORD(STACK[0x668]) = v95;
  int v97 = ((v96 >> 8) & 0xF0 | ((unsigned __int16)v95 >> 12)) ^ 0x6C;
  unsigned int v98 = (v97 - 829137746 - ((2 * v97) & 0x15C)) ^ 0xCE945CAE;
  LODWORD(STACK[0x63C]) = 431 * v98;
  unsigned int v99 = 431 * v98 - 222888195 - ((862 * v98) & 0xE56DFDFA);
  LODWORD(STACK[0x640]) = (v99 ^ 0xF2B6FEFD) % ((v99 & 0x3BD ^ 0x100) + (v99 & 0x3BD ^ 0x2BD));
  int v100 = ((v96 >> 12) & 0xF0 | HIWORD(v95) & 0xF) ^ 0x51;
  unsigned int v101 = (v100 - 1513021004 - ((2 * v100) & 0x168)) ^ 0xA5D121B4;
  LODWORD(STACK[0x638]) = 431 * v101;
  unsigned int v102 = ((431 * v101) ^ 0xBFDCB9FF) + ((862 * v101) & 0x7FB973FE);
  LODWORD(STACK[0x634]) = (v102 + 1076344430) % (((401 - v102) | (v102 + 622)) & 0x2B4 | 0x109);
  unsigned int v103 = 16 * (*(unsigned __int8 *)(v28 + 275) ^ 0x3C)
       - 134141631
       + (~(32 * (*(unsigned __int8 *)(v28 + 275) ^ 0x3C)) | 0xFFFFED7F);
  unsigned int v104 = v51 + v10 - ((2 * (v51 + v10) + 202363872) & 0xB71E244E) - 510198761;
  LODWORD(STACK[0x5DC]) = v104;
  unsigned int v105 = (v104 ^ 0x5B8F1227) >> ((v45 & 0xBB ^ 0xA8 | v45 & 0xBB ^ 0x13) + 93);
  unsigned int v106 = v9 - v57 - ((2 * (v9 - v57) + 1519472492) & 0xEA49D1B2);
  LOBYTE(v105) = v105 - ((2 * v105) & 0x88) - 60;
  unsigned int v107 = 431 * ((v105 >> 4) ^ 0xC) + 279719;
  unsigned int v108 = 431 * ((v104 >> 20) & 0xF ^ 8) + 279719;
  unsigned int v109 = 431 * (~HIWORD(v104) & 0xF) + 279719;
  int v110 = ((*(unsigned __int8 *)(v28
                              + (431 * (v105 & 0xF ^ 4)
                                             + 279719
                                             - 957
                                             * ((4487950 * (unint64_t)(431 * (v105 & 0xF ^ 4) + 279719)) >> 32))) ^ 0x3C) << 8) ^ ((*(unsigned __int8 *)(v28 + (v107 - 957 * ((4487950 * (unint64_t)v107) >> 32))) ^ 0x3C) << 12);
  unsigned int v111 = 431 * (((unsigned __int16)v104 >> 12) ^ 1) + 279719;
  int v112 = v110 | *(unsigned __int8 *)(v28 + (v109 - 957 * ((4487950 * (unint64_t)v109) >> 32))) ^ 0x3C;
  unsigned int v113 = 431 * ((v104 >> 8) & 0xF ^ 2) + 279719;
  int v114 = (v112 << 8) ^ ((*(unsigned __int8 *)(v28
                                            + (v108 - 957 * ((4487950 * (unint64_t)v108) >> 32))) ^ 0x3C) << 12);
  unsigned int v115 = 431 * ((v104 >> 4) ^ 2) + 279719;
  unsigned int v116 = v115 - 957 * ((4487950 * (unint64_t)v115) >> 32);
  int v117 = v114 | *(unsigned __int8 *)(v28 + (v113 - 957 * ((4487950 * (unint64_t)v113) >> 32))) ^ 0x3C;
  int v118 = (v117 << 8) + 968594341 - ((v117 << 9) & 0x73772600);
  LODWORD(STACK[0x50C]) = v118;
  int v119 = *(unsigned __int8 *)(v28
                            + (431 * (v104 & 0xF ^ 7)
                                           + 279719
                                           - 957
                                           * ((4487950 * (unint64_t)(431 * (v104 & 0xF ^ 7) + 279719)) >> 32)));
  int v120 = v118 ^ ((*(unsigned __int8 *)(v28 + (v111 - 957 * ((4487950 * (unint64_t)v111) >> 32))) ^ 0x3C) << 12);
  LODWORD(STACK[0x5D0]) = v120;
  int v121 = (v119 ^ 0x3C) + 1231725187;
  unsigned int v122 = v121 - ((2 * v119) & 0xFFFFFF07);
  unsigned int v123 = 431 * ((-577605776 - v106) >> 28)
       + 279719
       - 957 * ((4487950 * (unint64_t)(431 * ((-577605776 - v106) >> 28) + 279719)) >> 32);
  unsigned int v124 = v106 + 577605775;
  unsigned int v125 = 431 * (((v106 + 577605775) >> 24) & 0xF ^ 5) + 279719;
  unsigned int v126 = v125 - 957 * ((4487950 * (unint64_t)v125) >> 32);
  unsigned int v127 = (v120 ^ 0x39BB93A5 | v122 ^ 0x496AA283) ^ (16 * (*(unsigned __int8 *)(v28 + v116) ^ 0x3C));
  unsigned int v128 = 431 * ((v124 >> 20) & 0xF ^ 2) + 279719;
  int v129 = ((*(unsigned __int8 *)(v28 + v126) ^ 0x3C) << 8) ^ ((*(unsigned __int8 *)(v28 + v123) ^ 0x3C) << 12);
  unsigned int v130 = 431 * (HIWORD(v124) & 0xF ^ 4) + 279719;
  int v131 = v129 | *(unsigned __int8 *)(v28 + (v130 - 957 * ((4487950 * (unint64_t)v130) >> 32))) ^ 0x3C;
  unsigned int v132 = 431 * (((unsigned __int16)v124 >> 12) ^ 0xE) + 279719;
  unsigned int v133 = 431 * ((v124 >> 8) & 0xF ^ 8) + 279719;
  unsigned int v134 = (((v121 & 1) + (v122 & 0xF ^ 0x9003041F)) | 0x61E0F1C0) - ((v122 & 0xF ^ 0x9003041F) & 0x90000011);
  int v135 = *(unsigned __int8 *)(v28 + (v133 - 957 * ((4487950 * (unint64_t)v133) >> 32))) ^ (16 * (*(unsigned __int8 *)(v28 + (v132 - 957 * ((4487950 * (unint64_t)v132) >> 32))) ^ 0x3C));
  LODWORD(STACK[0x5AC]) = v135;
  unsigned int v136 = 431 * ((v124 >> 4) ^ 0xD) + 279719;
  int v137 = (v131 << 8) ^ ((*(unsigned __int8 *)(v28
                                            + (v128 - 957 * ((4487950 * (unint64_t)v128) >> 32))) ^ 0x3C) << 12);
  int v138 = v135 ^ 0x250F0981 ^ (v137 - ((2 * v137) & 0x1E1200) + 17762749);
  unsigned int v139 = (v138 << 8) - 942174584 - ((v138 << 9) & 0x8FAF1C00);
  LODWORD(STACK[0x5C0]) = v139;
  int v140 = *(unsigned __int8 *)(v28
                            + (431 * (v124 & 0xF ^ 9)
                                           + 279719
                                           - 957
                                           * ((4487950 * (unint64_t)(431 * (v124 & 0xF ^ 9) + 279719)) >> 32))) ^ 0x3C;
  int v141 = v140 + 704208318 - ((2 * v140) & 0x17C);
  unsigned int v142 = (v139 ^ 0xC7D78E88 | v141 ^ 0x29F95DBE) ^ (16
                                                  * (*(unsigned __int8 *)(v28
                                                                        + (v136
                                                                                       - 957
                                                                                       * ((4487950
                                                                                         * (unint64_t)v136) >> 32))) ^ 0x3C));
  LODWORD(STACK[0x5C4]) = v134 ^ 0x61E3F5CD;
  int v143 = (16 * (v141 & 0xF)) ^ 0xE0 | v134 ^ 0x61E3F5CD;
  unsigned int v144 = 431 * ((v143 + 99858060 - ((2 * v143) & 0xBE76D18)) ^ 0x5F3B68C);
  ++v103;
  int v145 = *(unsigned __int8 *)(v28 + (v144 + 290925) % 0x3BD);
  LODWORD(STACK[0x708]) = v103 ^ 0xF8012941;
  unsigned int v146 = 431 * (v145 ^ v103 ^ 0xF8012941 ^ 0x3C);
  LODWORD(STACK[0x54C]) = v146;
  int v147 = *(unsigned __int8 *)(v28 + v146 % 0x3BD) >> 4;
  int v148 = ((v147 ^ 3) + 2 * ((v147 ^ 3 | 0x7C) ^ v147) + 62) ^ *(unsigned __int8 *)(v28 + v144 % 0x3BD);
  int v149 = *(unsigned __int8 *)(v28
                            + (431 * v148
                                           + 290925
                                           - 957
                                           * ((4487950 * (unint64_t)(431 * v148 + 290925)) >> 32)));
  int v150 = (((v127 >> 4) ^ 0x7FCAB36)
        - ((2 * ((v127 >> 4) ^ 0x7FCAB36)) & 0x2A01672)
        + 1095835641) ^ 0x46ADB4CF;
  LODWORD(STACK[0x5BC]) = v150;
  int v151 = 16 * (v149 ^ 0x3C) - 568111196 - ((32 * (v149 ^ 0x3C)) & 0x1F40);
  unsigned int v152 = 431 * (((v142 & 0xF0 | v150) + 1199481200 - ((2 * (v142 & 0xF0 | v150)) & 0xEFD42E0)) ^ 0x477EA170);
  unsigned int v153 = 431 * (*(unsigned __int8 *)(v28 + (v152 + 290925) % 0x3BD) ^ 0xDE234FA4 ^ v151 ^ 0x3C);
  unsigned int v154 = v153 % (v151 & 0x3B0 ^ 0x1D | v151 & 0x3B0 ^ 0x3A0u);
  int v155 = *(unsigned __int8 *)(v28 + (v153 + 290925) % 0x3BD) ^ 0x3C;
  unsigned int v156 = 431
       * ((((*(unsigned char *)(v28 + v154) >> 4) ^ 3) - ((*(unsigned char *)(v28 + v154) >> 3) & 0x18) + 60) ^ *(unsigned __int8 *)(v28 + v152 % 0x3BD))
       + 290925;
  int v157 = (v142 >> 4) & 0xF0 | (v127 >> 8) & 0xF;
  unsigned int v158 = 431 * ((v157 - 648450182 - 2 * (v157 & 0x7F ^ (v127 >> 8) & 5)) ^ 0xD9596F7A);
  LODWORD(STACK[0x530]) = v158;
  int v159 = 431
       * (*(unsigned __int8 *)(v28 + (v158 + 290925) % 0x3BD) ^ (16
                                                               * (*(unsigned __int8 *)(v28
                                                                                     + (v156 - 957 * ((4487950 * (unint64_t)v156) >> 32))) ^ 0x3C)) ^ 0x3C);
  LODWORD(STACK[0x52C]) = v159;
  int v160 = *(unsigned __int8 *)(v28
                            + (v159
                                           + 290925
                                           - 957 * ((4487950 * (unint64_t)(v159 + 290925)) >> 32))) ^ 0x3C;
  int v161 = 16 * v155 - ((32 * v155) & 0x15C0) - 647505173;
  LODWORD(STACK[0x5B4]) = v161;
  int v162 = (v160 << 8) - ((v160 << 9) & 0x1400) - 1258354174;
  LODWORD(STACK[0x5B0]) = v162;
  unsigned int v163 = ((v162 ^ v161) >> 4) & 0xF0 | (v127 >> 8) & 0xF;
  unsigned int v164 = v163 - 1977157661 - ((2 * v163) & 0xFFFFFFC7);
  LODWORD(STACK[0x5B8]) = v164;
  int v165 = (v55 ^ 0xBE2B891) - 1179128097 + (((~v164 & 0x21 ^ 0x66DC1521) + (~v164 & 0x21)) & 0x46481121);
  int v166 = (v165 - ((2 * v165) & 0x59DB0BA2) + 753763793) ^ LODWORD(STACK[0x65C]);
  unsigned int v167 = ((2 * ((v166 ^ 0x959F6066) - v67 - 447330876)) & 0xFEBEDCBE)
       + (((v166 ^ 0x959F6066) - v67 - 447330876) ^ 0xFF5F6E5F);
  LODWORD(STACK[0x5D8]) = v63;
  unsigned int v168 = v71 ^ (v65 - v63 - ((2 * (v65 - v63) + 961755942) & 0xC441EE42) + 2127205556);
  LODWORD(STACK[0x628]) = v168;
  int v169 = (LODWORD(STACK[0x6F0]) ^ 0x5D7B8731) - v63;
  LODWORD(STACK[0x600]) = v169;
  unsigned int v170 = ((2 * ((v71 ^ 0xE220F721) - v169 + 447330876)) & 0xE0DAF7FE)
       + (((v71 ^ 0xE220F721) - v169 + 447330876) ^ 0xF06D7BFF);
  unsigned int v171 = v170 + 2 * v168 - ((2 * (v170 + 2 * v168) + 1869685490) & 0x93A5DC52) - 2121564254;
  LODWORD(STACK[0x65C]) = v171;
  unsigned int v172 = ((2 * (v171 ^ (v72 - 1864973303 + v170))) & 0xD95BFFF6 ^ 0x9101DC52)
       + (v171 ^ (v72 - 1864973303 + v170) ^ 0xA57F11D2);
  unsigned int v173 = LODWORD(STACK[0x558]) - v172;
  unsigned int v174 = v172;
  LODWORD(STACK[0x5D4]) = v172;
  unsigned int v175 = v173 - ((2 * v173 + 1273326856) & STACK[0x49C]);
  LODWORD(STACK[0x624]) = v167;
  unsigned int v176 = v175 - 67370498;
  LODWORD(STACK[0x610]) = (431 * (((v175 - 2) >> 4) ^ 7u) + 279719)
                        % (((854 - v167) | (v167 + 169)) & 0x3BD);
  unsigned int v177 = ((2 * (v68 - 10523041 - v167)) & 0xDF7F7FB4) + ((v68 - 10523041 - v167) ^ 0x6FBFBFDA);
  int v178 = (LODWORD(STACK[0x630]) ^ 0x766DF6A6 ^ (LODWORD(STACK[0x6EC])
                                              - v67
                                              - ((2 * (LODWORD(STACK[0x6EC]) - v67) + 961755942) & 0x7B2270FE)
                                              + 1513805330))
       + 1410533052;
  LODWORD(STACK[0x5FC]) = v178;
  int v179 = v177 + 2 * v178 - 1874837466 - ((2 * (v177 + 2 * v178 - 1874837466)) & 0x37258694) - 1684880566;
  LODWORD(STACK[0x630]) = v179;
  int v180 = v179 ^ (v70 - 1805630383 + v177);
  LODWORD(STACK[0x62C]) = v180;
  unsigned int v181 = ((2 * v180) & 0xB97BDFFC ^ 0x31218694) + (v180 ^ 0x472F2CB4);
  unsigned int v182 = v181 + LODWORD(STACK[0x55C]);
  unsigned int v183 = v181;
  LODWORD(STACK[0x6EC]) = v181;
  unsigned int v184 = v182 - ((2 * v182 + 136642744) & 0x34D42C42) - 25389443;
  LODWORD(STACK[0x620]) = v184;
  unsigned int v185 = 431 * (HIBYTE(v184) & 0xF ^ 0xA) + 279719;
  unsigned int v186 = 431 * ((v184 >> 20) & 0xF ^ 6) + 279719;
  unsigned int v187 = 431 * (HIWORD(v184) & 0xF ^ 0xA) + 279719;
  int v188 = *(unsigned __int8 *)(v28 + (v186 - 957 * ((4487950 * (unint64_t)v186) >> 32))) ^ 0x3C;
  LODWORD(STACK[0x5F0]) = v188;
  int v189 = v188 - 510704384 - ((2 * v188) & 0x62) + 49;
  LODWORD(STACK[0x5EC]) = v189;
  int v190 = ((*(unsigned __int8 *)(v28 + (v185 - 957 * ((4487950 * (unint64_t)v185) >> 32))) ^ 0x3C) << 8) ^ ((*(unsigned __int8 *)(v28 + (431 * ((v184 >> 28) ^ 9) + 279719 - 957 * ((4487950 * (unint64_t)(431 * ((v184 >> 28) ^ 9) + 279719)) >> 32))) ^ 0x3C) << 12);
  int v191 = *(unsigned __int8 *)(v28 + (v187 - 957 * ((4487950 * (unint64_t)v187) >> 32))) ^ 0x3C;
  int v192 = ((16 * v189) ^ 0x18F45310) - ((2 * ((16 * v189) ^ 0x18F45310)) & 0x7C8C4C60) - 28957126;
  LODWORD(STACK[0x5E8]) = v192;
  int v193 = v192 ^ ((v190 | v191) + 74934 - 2 * ((v190 | v191) & 0x6263B ^ v191 & 1) + 388);
  unsigned int v194 = (v193 << 16) + 62357748 - ((v193 << 17) & 0x76E0000);
  LODWORD(STACK[0x604]) = v194;
  LODWORD(STACK[0x614]) = v176;
  unsigned int v195 = 431 * (HIBYTE(v176) & 0xF ^ 6) + 279719;
  int v196 = ((*(unsigned __int8 *)(v28 + (v195 - 957 * ((4487950 * (unint64_t)v195) >> 32))) ^ 0x3C) << 8) ^ ((*(unsigned __int8 *)(v28 + (431 * ((v176 >> 28) ^ 0xD) + 279719 - 957 * ((4487950 * (unint64_t)(431 * ((v176 >> 28) ^ 0xD) + 279719)) >> 32))) ^ 0x3C) << 12);
  unsigned int v197 = 431 * (HIWORD(v176) & 0xF ^ 9) + 279719;
  int v198 = ((v196 | *(unsigned __int8 *)(v28 + (v197 - 957 * ((4487950 * (unint64_t)v197) >> 32))) ^ 0x3C) << 8) ^ ((*(unsigned __int8 *)(v28 + (431 * ((v176 >> 20) & 0xF) + 279719 - 957 * ((4487950 * (unint64_t)(431 * ((v176 >> 20) & 0xF) + 279719)) >> 32))) ^ 0x3C) << 12);
  unsigned int v199 = 431 * ((v176 >> 8) & 0xF ^ 0xB) + 279719;
  int v200 = v198 | *(unsigned __int8 *)(v28 + (v199 - 957 * ((4487950 * (unint64_t)v199) >> 32))) ^ 0x3C;
  unsigned int v201 = (v200 << 8) - 657190378 - ((v200 << 9) & 0xB1A82400);
  LODWORD(STACK[0x608]) = v201;
  int v202 = ((v201 >> 20) & 0xF0 | HIBYTE(v194) & 0xF) ^ 0x83;
  unsigned int v203 = ((v201 >> 20) & 0xB0 ^ 0x80) + ((v201 >> 20) & 0xB0 ^ 0x33D);
  unsigned int v204 = 431 * ((v202 - 752387329 - 2 * v202) ^ 0xD3277AFF);
  LODWORD(STACK[0x5E4]) = v204;
  LODWORD(STACK[0x5E0]) = (v204 + 290925) % v203;
  int v205 = LODWORD(STACK[0x550]) + LODWORD(STACK[0x6C8]) + 1569934309 + v67;
  int v206 = v205 - ((2 * v205) & 0x15D6A864);
  LODWORD(STACK[0x504]) = v206;
  unsigned int v207 = LODWORD(STACK[0x6A0]) - v174 - ((2 * (LODWORD(STACK[0x6A0]) - v174) - 622082218) & 0xF60F1404);
  LODWORD(STACK[0x508]) = v206 - 1964288974;
  LODWORD(STACK[0x6C8]) = v166 ^ (v206 - 1964288974);
  unsigned int v208 = v207 - 394433107;
  unsigned int v209 = (431 * ((v207 - 394433107) & 0xF ^ 2) + 279719)
       % ((((unsigned __int16)v166 ^ (unsigned __int16)(v206 + 21554)) & 0x3BD ^ 0x14)
        + (((unsigned __int16)v166 ^ (unsigned __int16)(v206 + 21554)) & 0x3BD ^ 0x3A9u));
  unsigned int v210 = v183 + LODWORD(STACK[0x6D0]);
  unsigned int v211 = (2 * v210 - 1020442602) & 0x98971720;
  v210 -= 1377685605;
  unsigned int v212 = v210 - v211;
  LODWORD(STACK[0x6D0]) = v210 - v211;
  unsigned int v213 = 431 * (((v210 - v211) >> 28) ^ 4) + 279719;
  unsigned int v214 = 431 * (HIBYTE(v212) & 0xF ^ 0xC) + 279719;
  unsigned int v215 = 431 * ((v212 >> 20) & 0xF ^ 4) + 279719;
  int v216 = ((*(unsigned __int8 *)(v28 + (v214 - 957 * ((4487950 * (unint64_t)v214) >> 32))) ^ 0x3C) << 8) ^ ((*(unsigned __int8 *)(v28 + (v213 - 957 * ((4487950 * (unint64_t)v213) >> 32))) ^ 0x3C) << 12);
  unsigned int v217 = 431 * (HIWORD(v212) & 0xF ^ 0xB) + 279719;
  int v218 = *(unsigned __int8 *)(v28 + (v217 - 957 * ((4487950 * (unint64_t)v217) >> 32))) ^ 0x3C;
  int v219 = (v216 | v218) - 2 * ((v216 | v218) & 0xF3736 ^ v218 & 2) + 1375680308;
  int v220 = (v219 << 8) ^ ((*(unsigned __int8 *)(v28
                                            + (v215 - 957 * ((4487950 * (unint64_t)v215) >> 32))) ^ 0x3C) << 12);
  unsigned int v221 = 431 * (((unsigned __int16)v212 >> 12) ^ 8) + 279719;
  unsigned int v222 = 431 * ((v212 >> 8) & 0xF ^ 0xB) + 279719;
  unsigned int v223 = 431 * ((v212 >> 4) ^ 9) + 279719;
  int v224 = v220 | *(unsigned __int8 *)(v28 + (v222 - 957 * ((4487950 * (unint64_t)v222) >> 32))) ^ 0x3C;
  unsigned int v225 = 431 * ((394433106 - v207) >> 28)
       + 279719
       - 957 * ((4487950 * (unint64_t)(431 * ((394433106 - v207) >> 28) + 279719)) >> 32);
  int v226 = v224 ^ (16
               * (*(unsigned __int8 *)(v28 + (v221 - 957 * ((4487950 * (unint64_t)v221) >> 32))) ^ 0x3C));
  unsigned int v227 = ((v226 << 8) ^ 0x37340000) - 1774501824 - ((2 * ((v226 << 8) ^ 0x37340000)) & 0x2C768000);
  int v228 = *(unsigned __int8 *)(v28
                            + (431 * (v210 & 0xF)
                                           + 279719
                                           - 957 * ((4487950 * (unint64_t)(431 * (v210 & 0xF) + 279719)) >> 32))) ^ 0x3C;
  int v229 = v228 - 297241838 - ((2 * v228) & 0x24);
  unsigned int v230 = 431 * (HIBYTE(v208) & 0xF ^ 0xB) + 279719;
  unsigned int v231 = (v227 ^ 0x963B4040 | v229 ^ 0xEE487312) ^ (16
                                                  * (*(unsigned __int8 *)(v28
                                                                        + (v223
                                                                                       - 957
                                                                                       * ((4487950
                                                                                         * (unint64_t)v223) >> 32))) ^ 0x3C));
  int v232 = ((*(unsigned __int8 *)(v28 + (v230 - 957 * ((4487950 * (unint64_t)v230) >> 32))) ^ 0x3C) << 8) ^ ((*(unsigned __int8 *)(v28 + v225) ^ 0x3C) << 12);
  unsigned int v233 = 431 * (HIWORD(v208) & 0xF ^ 7) + 279719;
  unsigned int v234 = ((v226 & 0x1AF ^ 0x1AF) + (v226 & 0x1AF)) * ((((unsigned __int16)v208 >> 12) ^ 8) + 649);
  unsigned int v235 = 431 * ((v208 >> 8) & 0xF ^ 0xA) + 279719;
  int v236 = ((v232 | *(unsigned __int8 *)(v28 + (v233 - 957 * ((4487950 * (unint64_t)v233) >> 32))) ^ 0x3C) << 8) ^ ((*(unsigned __int8 *)(v28 + (431 * ((v208 >> 20) & 0xF) + 279719 - 957 * ((4487950 * (unint64_t)(431 * ((v208 >> 20) & 0xF) + 279719)) >> 32))) ^ 0x3C) << 12) | *(unsigned __int8 *)(v28 + (v235 - 957 * ((4487950 * (unint64_t)v235) >> 32))) ^ 0x3C;
  unsigned int v237 = (v236 << 8) - 1394418653 - ((v236 << 9) & 0x59C5B800);
  int v238 = *(unsigned __int8 *)(v28 + v209) ^ 0x3C;
  int v239 = v238 + 217837152 - ((2 * v238) & 0xC0);
  unsigned int v240 = v237 ^ ((*(unsigned __int8 *)(v28 + (v234 - 957 * ((4487950 * (unint64_t)v234) >> 32))) ^ 0x3C) << 12);
  unsigned int v241 = (v240 ^ 0xACE2DC23 | v239 ^ 0xCFBEE60) ^ (16
                                                 * (*(unsigned __int8 *)(v28
                                                                       + (431
                                                                                      * (v208 >> 4)
                                                                                      + 279719
                                                                                      - 957
                                                                                      * ((4487950
                                                                                        * (unint64_t)(431 * (v208 >> 4) + 279719)) >> 32))) ^ 0x3C));
  int v242 = v229 & 0xF;
  int v243 = (((v242 | (16 * (v239 & 0xF))) ^ 2) + 549102773 - 2 * ((v229 & 0xD | (16 * (v239 & 0xF)) & 0xBD) ^ v229 & 8)) ^ 0x20BAA4B5;
  unsigned int v244 = v243 * (v219 & 0x1AF ^ 0x124 | v219 & 0x1AF ^ 0x8B);
  unsigned int v245 = 431 * (*(unsigned __int8 *)(v28 + (431 * v243 + 290925) % 0x3BDu) ^ v103 ^ 0xF801297D);
  unsigned int v246 = (v245 + 290925) % 0x3BD;
  unsigned int v247 = v245 % 0x3BD;
  unsigned int v248 = (1247935948
        - ((v231 >> 4) ^ 0xC20400B8 | 0x4A61FDCC)
        + ((v231 >> 4) ^ 0xC20400B8 | 0xB59E0233)) ^ 0x779A028B;
  unsigned int v249 = 431
       * ((((*(unsigned char *)(v28 + v247) >> 4) ^ 3) - ((*(unsigned char *)(v28 + v247) >> 3) & 0x18) + 60) ^ *(unsigned __int8 *)(v28 + v244 % 0x3BD))
       + 290925;
  unsigned int v250 = 431 * (((v248 | v241 & 0xF0) - 1455575222 - ((2 * (v248 | v241 & 0xF0)) & 0x527B5E94)) ^ 0xA93DAF4A);
  unsigned int v251 = v250 % 0x3BD;
  unsigned int v252 = 431
       * (*(unsigned __int8 *)(v28 + (v250 + 290925) % 0x3BD) ^ (16
                                                               * (*(unsigned __int8 *)(v28
                                                                                     + (v249 - 957 * ((4487950 * (unint64_t)v249) >> 32))) ^ 0x3C)) ^ 0x3C);
  unsigned int v253 = v252 + 290925 - 957 * ((4487950 * (unint64_t)(v252 + 290925)) >> 32);
  unsigned int v254 = *(unsigned __int8 *)(v28 + (v252 - 957 * ((4487950 * (unint64_t)v252) >> 32)));
  int v255 = (((v254 >> 4) ^ 3) - ((v254 >> 3) & 0x18) + 60) ^ *(unsigned __int8 *)(v28 + v251);
  int v256 = *(unsigned __int8 *)(v28 + v246) ^ 0x3C;
  int v257 = v256 - 118132068 - ((2 * v256) & 0x138);
  unsigned int v258 = 431
       * ((((v241 >> 4) & 0xF0 | (v231 >> 8) & 0xF)
         - 1982993622
         - 2 * (((v241 >> 4) & 0x30 | (v231 >> 8) & 0xA) ^ (v241 >> 4) & 0x10)) ^ 0x89CDEB2A);
  unsigned int v259 = v258 % 0x3BD;
  unsigned int v260 = 431
       * (*(unsigned __int8 *)(v28 + (v258 + 290925) % 0x3BD) ^ (16
                                                               * (*(unsigned __int8 *)(v28
                                                                                     + (431 * v255 + 290925 - 957 * ((4487950 * (unint64_t)(431 * v255 + 290925)) >> 32))) ^ 0x3C)) ^ 0x3C);
  unsigned int v261 = v260 + 290925 - 957 * ((4487950 * (unint64_t)(v260 + 290925)) >> 32);
  unsigned int v262 = *(unsigned __int8 *)(v28 + (v260 - 957 * ((4487950 * (unint64_t)v260) >> 32)));
  int v263 = ((v240 >> 8) & 0xF0 | ((unsigned __int16)v227 >> 12)) ^ 0xD4;
  unsigned int v264 = 431 * ((((v262 >> 4) ^ 3) - ((v262 >> 3) & 0x18) + 60) ^ *(unsigned __int8 *)(v28 + v259))
       + 290925;
  unsigned int v265 = 431 * ((v263 + 1544659837 - ((2 * v263) & 0xFA)) ^ 0x5C11A37D);
  unsigned int v266 = 431
       * (*(unsigned __int8 *)(v28 + (v265 + 290925) % 0x3BD) ^ (16
                                                               * (*(unsigned __int8 *)(v28
                                                                                     + (v264 - 957 * ((4487950 * (unint64_t)v264) >> 32))) ^ 0x3C)) ^ 0x3C);
  unsigned int v267 = v266 + 290925 - 957 * ((4487950 * (unint64_t)(v266 + 290925)) >> 32);
  int v268 = *(unsigned __int8 *)(v28 + (v266 - 957 * ((4487950 * (unint64_t)v266) >> 32))) >> 4;
  unsigned int v269 = 431
       * (((v268 ^ 3) + 2 * ((v268 ^ 3 | 0x7C) ^ v268) + 62) ^ *(unsigned __int8 *)(v28 + v265 % 0x3BD))
       + 290925;
  v240 >>= 12;
  int v270 = (v240 & 0xF0 | HIWORD(v227) & 0xF) ^ 0x2B;
  unsigned int v271 = 431 * ((v270 - 1442920478 - ((2 * v270) & 0x1C4)) ^ 0xA9FEC7E2);
  unsigned int v272 = v271 % (v240 & 0xB0 ^ 0x2D | v240 & 0xB0 ^ 0x390);
  unsigned int v273 = ((*(unsigned __int8 *)(v28 + v267) ^ 0x3C) << 12) ^ ((*(unsigned __int8 *)(v28 + v261) ^ 0x3C) << 8);
  unsigned int v274 = 431
       * (*(unsigned __int8 *)(v28 + (v271 + 290925) % 0x3BD) ^ (16
                                                               * (*(unsigned __int8 *)(v28
                                                                                     + (v269 - 957 * ((4487950 * (unint64_t)v269) >> 32))) ^ 0x3C)) ^ 0x3C);
  unsigned int v275 = v274 + 290925 - 957 * ((4487950 * (unint64_t)(v274 + 290925)) >> 32);
  unsigned int v276 = *(unsigned __int8 *)(v28 + (v274 - 957 * ((4487950 * (unint64_t)v274) >> 32)));
  int v277 = (HIWORD(v237) & 0xF0 | (v227 >> 20) & 0xF) ^ 0xE3;
  unsigned int v278 = 431 * ((((v276 >> 4) ^ 3) - ((v276 >> 3) & 0x18) + 60) ^ *(unsigned __int8 *)(v28 + v272))
       + 290925;
  unsigned int v279 = 431 * ((v277 + 1723350122 + (~(2 * v277) | 0xFFFFFF2B) + 1) ^ 0x66B83C6A);
  unsigned int v280 = 431
       * (*(unsigned __int8 *)(v28 + (v279 + 290925) % 0x3BD) ^ (16
                                                               * (*(unsigned __int8 *)(v28
                                                                                     + (v278 - 957 * ((4487950 * (unint64_t)v278) >> 32))) ^ 0x3C)) ^ 0x3C);
  unsigned int v281 = v280 + 290925 - 957 * ((4487950 * (unint64_t)(v280 + 290925)) >> 32);
  unsigned int v282 = *(unsigned __int8 *)(v28 + (v280 - 957 * ((4487950 * (unint64_t)v280) >> 32)));
  unsigned int v283 = 431
       * ((((v282 >> 4) ^ 3) - ((v282 >> 3) & 0x18) + 60) ^ *(unsigned __int8 *)(v28 + v279 % 0x3BD))
       + 290925;
  int v284 = ((v237 >> 20) & 0xF0 | HIBYTE(v227) & 0xF) ^ 0xC6;
  unsigned int v285 = 431 * ((v284 - 1727550398 - ((2 * v284) & 0x84)) ^ 0x9907AC42);
  int v286 = *(unsigned __int8 *)(v28 + (v285 + 290925) % 0x3BD) ^ (16
                                                              * (*(unsigned __int8 *)(v28
                                                                                    + (v283 - 957 * ((4487950 * (unint64_t)v283) >> 32))) ^ 0x3C));
  unsigned int v287 = 431 * (((2 * v286) & 0x546 ^ 0x40) + (v286 ^ 0x29Fu)) % 0x3BD;
  unsigned int v288 = *(unsigned __int8 *)(v28
                            + (431 * (v286 ^ 0x3C)
                                           - 957 * ((4487950 * (unint64_t)(431 * (v286 ^ 0x3Cu))) >> 32)));
  unsigned int v289 = 431
       * ((((v288 >> 4) ^ 3) + (~(v288 >> 3) | 0xE7) + 61) ^ *(unsigned __int8 *)(v28 + v285 % 0x3BD))
       + 290925;
  unsigned int v290 = 431 * ((HIBYTE(v237) & 0xF0 | (v227 >> 28)) ^ 0xA9) + 290925;
  unsigned int v291 = 431
       * (*(unsigned __int8 *)(v28 + (v290 - 957 * ((4487950 * (unint64_t)v290) >> 32))) ^ (16 * (*(unsigned __int8 *)(v28 + (v289 - 957 * ((4487950 * (unint64_t)v289) >> 32))) ^ 0x3C)) ^ 0x3C)
       + 290925;
  unsigned int v292 = v291 - 957 * ((4487950 * (unint64_t)v291) >> 32);
  int v293 = v257 ^ (16 * (*(unsigned __int8 *)(v28 + v253) ^ 0x3C));
  unsigned int v294 = v293 ^ 0x8AE4425 ^ v273;
  unsigned int v295 = v294 ^ ((*(unsigned __int8 *)(v28 + v275) ^ 0x3C) << 16);
  unsigned int v296 = v295 ^ ((*(unsigned __int8 *)(v28 + v281) ^ 0x3C) << 20);
  int v297 = *(unsigned __int8 *)(v28 + v292) ^ 0xC;
  int v298 = v296 ^ ((*(unsigned __int8 *)(v28 + v287) ^ 0x3C) << 24);
  LODWORD(STACK[0x5A8]) = v298;
  unsigned int v299 = ((v298 ^ (v297 << 28)) >> 24) & 0xF0 | (v227 >> 28);
  unsigned int v300 = ((2 * v299) & 0xFFFFFFE7 ^ 0x1E2) + (v299 ^ 0x5E7FBF0A);
  int v301 = (((106 - v300) | (v300 + 405)) & 0x1AF) * (v300 - 1585430123);
  LODWORD(STACK[0x550]) = ((v301 - 1647117570 - ((2 * v301) & 0x3BA5F5FC)) ^ 0x9DD2FAFE)
                        % (((v301 - 1647117570 - ((2 * v301) & 0x3BA5F5FC)) & 0x3BD ^ 0x101)
                         + ((v301 - 1647117570 - ((2 * v301) & 0x3BA5F5FC)) & 0x3BD ^ 0x2BCu));
  unsigned int v302 = 431 * ((v242 & 0xFFFFFF0F | (16 * (v257 & 0xF))) ^ 0xC2) + 168952;
  unsigned int v303 = v302 - 957 * ((4487950 * (unint64_t)v302) >> 32);
  unsigned int v304 = (431 * (v293 & 0xF0 ^ 0x90 | v248) + 168952) % 0x3BD;
  unsigned int v305 = 431 * (((v294 >> 4) & 0xF0 | (v231 >> 8) & 0xF) ^ 0x60) + 168952;
  unsigned int v306 = v305 - 957 * ((4487950 * (unint64_t)v305) >> 32);
  LODWORD(STACK[0x6A0]) = v227;
  unsigned int v307 = 431 * (((v273 >> 8) & 0xF0 | ((unsigned __int16)v227 >> 12)) ^ 4) + 168952;
  unsigned int v308 = v307 - 957 * ((4487950 * (unint64_t)v307) >> 32);
  unsigned int v309 = 431 * (((v295 >> 12) & 0xF0 | HIWORD(v227) & 0xF) ^ 0xBB) + 168952;
  unsigned int v310 = v309 - 957 * ((4487950 * (unint64_t)v309) >> 32);
  unsigned int v311 = 431 * ((HIWORD(v296) & 0xF0 | (v227 >> 20) & 0xF) ^ 0x53) + 168952;
  int v312 = v311 - 1914 * ((2243975 * (unint64_t)v311) >> 32);
  int v313 = ((2 * v312) & 0x7DA) + (v312 ^ 0x7F77BBED);
  if ((v313 - 2138553325) >= 0x3BD) {
    int v314 = -1443015781;
  }
  else {
    int v314 = -1443014824;
  }
  int v315 = *(unsigned __int8 *)(v28 + v303);
  LODWORD(STACK[0x558]) = v315;
  int v316 = v315 ^ (16 * (*(unsigned __int8 *)(v28 + v304) ^ 0x3C));
  LODWORD(STACK[0x55C]) = v316;
  int v317 = *(unsigned __int8 *)(v28 + v306) ^ 0x3C;
  int v318 = *(unsigned __int8 *)(v28 + v308);
  int v319 = v316 ^ (v317 << 8);
  LODWORD(STACK[0x540]) = v319;
  int v320 = v319 ^ ((v318 ^ 0x3C) << 12);
  LODWORD(STACK[0x538]) = v320;
  int v321 = *(unsigned __int8 *)(v28 + (v313 - 695538501 + v314));
  int v322 = v320 ^ ((*(unsigned __int8 *)(v28 + v310) ^ 0x3C) << 16);
  LODWORD(STACK[0x520]) = v322;
  unsigned int v323 = v322 ^ ((v321 ^ 0x3C) << 20);
  LODWORD(STACK[0x51C]) = v323;
  LODWORD(STACK[0x510]) = (431 * ((v323 >> 20) & 0xF) + 404709)
                        % (((26 - 431 * ((v323 >> 20) & 0xF)) | (431 * ((v323 >> 20) & 0xF) + 5)) & 0x15 | 0x3A8);
  int v324 = LODWORD(STACK[0x700]) + LODWORD(STACK[0x560]);
  char v325 = v324 - 77;
  unsigned int v326 = v324 - 1076532813 - ((2 * v324 + 72714518) & 0x3B554A50);
  int v327 = (LODWORD(STACK[0x6F4]) - 2197) & HIBYTE(v326) ^ 0xD;
  int v328 = LODWORD(STACK[0x6F4]) - 547;
  LODWORD(STACK[0x560]) = v328;
  unsigned int v329 = (v327 * (v328 ^ 0x72Eu) + 279719) % 0x3BD;
  int v330 = LODWORD(STACK[0x53C]) - LODWORD(STACK[0x5C8]) + 1620385996 + LODWORD(STACK[0x6D8]);
  int v331 = v330 - ((2 * v330) & 0x18729DFE);
  unsigned int v332 = 431 * ((v326 >> 20) & 0xF ^ 0xA) + 279719;
  unsigned int v333 = 431 * (HIWORD(v326) & 0xF ^ 0xA) + 279719;
  int v334 = *(unsigned __int8 *)(v28 + (v333 - 957 * ((4487950 * (unint64_t)v333) >> 32)));
  unsigned int v335 = 431 * (((unsigned __int16)v326 >> 12) ^ 0xA) + 279719;
  int v336 = ((((*(unsigned __int8 *)(v28 + v329) ^ 0x3C) << 8) ^ ((*(unsigned __int8 *)(v28
                                                                                   + (431 * ((v326 >> 28) ^ 1)
                                                                                                  + 279719
                                                                                                  - 957 * ((4487950 * (unint64_t)(431 * ((v326 >> 28) ^ 1) + 279719)) >> 32))) ^ 0x3C) << 12) | v334 ^ 0x3C) << 8) ^ ((*(unsigned __int8 *)(v28 + (v332 - 957 * ((4487950 * (unint64_t)v332) >> 32))) ^ 0x3C) << 12);
  unsigned int v337 = 431 * ((((v334 & 0xBF ^ 0x83) + (v334 & 0xBF ^ 0x3C)) ^ 0xB0) & (BYTE1(v326) ^ 0xA5)) + 279719;
  unsigned int v338 = 431 * ((v326 >> 4) ^ 2) + 279719;
  int v339 = *(unsigned __int8 *)(v28 + (v337 - 957 * ((4487950 * (unint64_t)v337) >> 32))) ^ v336 ^ (16 * (*(unsigned __int8 *)(v28 + (v335 - 957 * ((4487950 * (unint64_t)v335) >> 32))) ^ 0x3C)) ^ 0x3C;
  unsigned int v340 = (v339 << 8) + 996378529 - ((v339 << 9) & 0x76C70E00);
  unsigned int v341 = 431 * ((v331 + LODWORD(STACK[0x4B4])) >> 28) + 279719;
  int v342 = *(unsigned __int8 *)(v28
                            + (431 * (v325 & 0xF ^ 8)
                                           + 279719
                                           - 957
                                           * ((4487950 * (unint64_t)(431 * (v325 & 0xF ^ 8u) + 279719)) >> 32)));
  int v343 = (v342 ^ 0x3C) + 241052419 - 2 * (v342 & 3);
  unsigned int v344 = (v340 ^ 0x3B6387A1 | v343 ^ 0xE5E2B03) ^ (16
                                                 * (*(unsigned __int8 *)(v28
                                                                       + (v338
                                                                                      - 957
                                                                                      * ((4487950
                                                                                        * (unint64_t)v338) >> 32))) ^ 0x3C));
  unsigned int v345 = 431 * (((v331 - 1942401281) >> 24) & 0xF ^ 0xC) + 279719;
  int v346 = ((*(unsigned __int8 *)(v28 + (v345 - 957 * ((4487950 * (unint64_t)v345) >> 32))) ^ 0x3C) << 8) ^ ((*(unsigned __int8 *)(v28 + (v341 - 957 * ((4487950 * (unint64_t)v341) >> 32))) ^ 0x3C) << 12);
  unsigned int v347 = 431 * (((v331 - 1942401281) >> 20) & 0xF ^ 3) + 279719;
  unsigned int v348 = 431 * (((v331 - 1942401281) >> 16) & 0xF ^ 9) + 279719;
  int v349 = v346 | *(unsigned __int8 *)(v28 + (v348 - 957 * ((4487950 * (unint64_t)v348) >> 32))) ^ 0x3C;
  unsigned int v350 = 431 * (((unsigned __int16)(v331 + 20223) >> 12) ^ 4) + 279719;
  int v351 = (v349 << 8) ^ ((*(unsigned __int8 *)(v28
                                            + (v347 - 957 * ((4487950 * (unint64_t)v347) >> 32))) ^ 0x3C) << 12);
  unsigned int v352 = 431 * (((v331 - 1942401281) >> 8) & 0xF ^ 0xE) + 279719;
  unsigned int v353 = v352 - 957 * ((4487950 * (unint64_t)v352) >> 32);
  char v354 = (v353 & 4 ^ 4) + (v353 & 4);
  int v355 = v351 | *(unsigned __int8 *)(v28 + v353) ^ 0x3C;
  unsigned int v356 = 431 * (~((v331 - 1942401281) >> 4) & 0xF) + 279719;
  unsigned int v357 = v356 - 957 * ((4487950 * (unint64_t)v356) >> 32);
  int v358 = v355 ^ ((*(unsigned __int8 *)(v28 + (v350 - 957 * ((4487950 * (unint64_t)v350) >> 32))) ^ 0x3C) << v354);
  unsigned int v359 = 431 * ((-16 - (_BYTE)v331) & 0xF) + 279719;
  unsigned int v360 = (v358 << 8) + 677917582 - ((v358 << 9) & 0x50D06600);
  unsigned int v361 = (((2 * (v343 & 0xF ^ 5)) | 0x69FE2714) - (v343 & 0xF ^ 5) + 1258351734) ^ 0xB6FDF14E;
  int v362 = *(unsigned __int8 *)(v28 + (v359 - 957 * ((4487950 * (unint64_t)v359) >> 32))) ^ 0x3C;
  int v363 = v362 + LODWORD(STACK[0x4B0]) - ((2 * v362) & 0xB6);
  unsigned int v364 = (v360 ^ 0x2868338E | v363 ^ LODWORD(STACK[0x4B0])) ^ (16 * (*(unsigned __int8 *)(v28 + v357) ^ 0x3C));
  unsigned int v365 = ((2 * v361) | 0x94999C4C) - v361 + 900936154;
  unsigned int v366 = v365 ^ 0xC84E2CE4;
  unsigned int v367 = (16 * (v363 & 0xF)) ^ 0xB0 | v365 ^ 0xC84E2CE4;
  unsigned int v368 = 431 * ((v367 + 611990870 - 2 * (v367 & 0x247A3D5F ^ v365 & 9)) ^ 0x247A3D56);
  unsigned int v369 = v368 % 0x3BD;
  int v370 = STACK[0x708];
  unsigned int v371 = 431 * (*(unsigned __int8 *)(v28 + (v368 + 290925) % 0x3BD) ^ LODWORD(STACK[0x708]) ^ 0x3C);
  LOBYTE(v368) = *(unsigned char *)(v28 + (v371 + 290925) % 0x3BD) ^ 0x3C;
  unsigned int v372 = (((v344 >> 4) ^ 0xC3D09068) & STACK[0x4AC] | (v344 >> 4) & 0x8226492) ^ ((v344 >> 4) ^ 0xC3D09068) & 0xA326494;
  unsigned int v373 = *(unsigned __int8 *)(v28 + v371 % 0x3BD);
  unsigned int v374 = 431 * ((((v373 >> 4) ^ 3) - ((v373 >> 3) & 0x18) + 60) ^ *(unsigned __int8 *)(v28 + v369))
       + 290925;
  unsigned int v375 = v374 - 957 * ((4487950 * (unint64_t)v374) >> 32);
  unsigned int v376 = ((v372 ^ 0x2100008) - ((2 * v372) & 0x90444800) + 2099691040) ^ 0x3F36BE20;
  unsigned int v377 = 431
       * (((v376 | v364 & 0xF0) - 1383388138 - 2 * ((v376 & 0x2D8B2C17 | v364 & 0x10) ^ (v344 >> 4) & 1)) ^ 0xAD8B2C16);
  unsigned int v378 = 431
       * (*(unsigned __int8 *)(v28 + (v377 + 290925) % 0x3BD) ^ (16 * (*(unsigned __int8 *)(v28 + v375) ^ 0x3C)) ^ 0x3C);
  unsigned int v379 = v378 + 290925 - 957 * ((4487950 * (unint64_t)(v378 + 290925)) >> 32);
  unsigned int v380 = *(unsigned __int8 *)(v28 + (v378 - 957 * ((4487950 * (unint64_t)v378) >> 32)));
  unsigned int v381 = 431
       * ((((v380 >> 4) ^ 3) - ((v380 >> 3) & 0x18) + 60) ^ *(unsigned __int8 *)(v28 + v377 % 0x3BD))
       + 290925;
  unsigned int v382 = 431 * ((((v344 >> 8) & 0xF) + 1236307208 - ((v344 >> 7) & 0x10) + ((v364 >> 4) & 0xF0)) ^ 0x49B08D08);
  unsigned int v383 = 431
       * (*(unsigned __int8 *)(v28 + (v382 + 290925) % 0x3BD) ^ (16
                                                               * (*(unsigned __int8 *)(v28
                                                                                     + (v381 - 957 * ((4487950 * (unint64_t)v381) >> 32))) ^ 0x3C)) ^ 0x3C);
  unsigned int v384 = v383 + 290925 - 957 * ((4487950 * (unint64_t)(v383 + 290925)) >> 32);
  unsigned int v385 = *(unsigned __int8 *)(v28 + (v383 - 957 * ((4487950 * (unint64_t)v383) >> 32)));
  unsigned int v386 = 431
       * ((((v385 >> 4) ^ 3) - ((v385 >> 3) & 0x18) + 60) ^ *(unsigned __int8 *)(v28 + v382 % 0x3BD))
       + 290925;
  int v387 = (v358 & 0xF0 | ((unsigned __int16)v340 >> 12)) ^ 8;
  int v388 = v387 - 2090097859 - ((2 * v387) & 0x7A);
  int v389 = *(unsigned __int8 *)(v28 + v379) ^ 0x3C;
  int v390 = 16 * v389 + 1710558735;
  unsigned int v391 = (v390 - ((32 * v389) & 0x1C00)) ^ ((*(unsigned __int8 *)(v28 + v384) ^ 0x3C) << 8);
  unsigned int v392 = 431 * (v388 ^ 0x836BA33D);
  unsigned int v393 = v392 % 0x3BD;
  int v394 = *(unsigned __int8 *)(v28 + (v392 + 290925) % 0x3BD) ^ (16
                                                              * (*(unsigned __int8 *)(v28
                                                                                    + (v386 - 957 * ((4487950 * (unint64_t)v386) >> 32))) ^ 0x3C));
  unsigned int v395 = (v394 & 0x345 ^ 0xECB81341 | v394 & 0x345 ^ 4) + 323481194;
  v394 ^= 0x3Cu;
  unsigned int v396 = v395 * v394;
  unsigned int v397 = (431 * v394 + 290925) % 0x3BDu;
  unsigned int v398 = 431
       * ((((*(unsigned char *)(v28 + v396 % 0x3BD) >> 4) ^ 3)
                          + (~(*(unsigned char *)(v28 + v396 % 0x3BD) >> 3) | 0xE7)
                          + 61) ^ *(unsigned __int8 *)(v28 + v393))
       + 290925;
  int v399 = ((v360 >> 12) & 0xF0 | HIWORD(v340) & 0xF) ^ 0x83;
  unsigned int v400 = 431 * ((v399 + 426744198 - ((2 * v399) & 0x10C)) ^ 0x196F9986);
  unsigned int v401 = 431
       * (*(unsigned __int8 *)(v28 + (v400 + 290925) % 0x3BD) ^ (16
                                                               * (*(unsigned __int8 *)(v28
                                                                                     + (v398 - 957 * ((4487950 * (unint64_t)v398) >> 32))) ^ 0x3C)) ^ 0x3C);
  unsigned int v402 = v401 + 290925 - 957 * ((4487950 * (unint64_t)(v401 + 290925)) >> 32);
  int v403 = *(unsigned __int8 *)(v28 + (v401 - 957 * ((4487950 * (unint64_t)v401) >> 32))) >> 4;
  unsigned int v404 = 431
       * (((v403 ^ 3) + 2 * ((v403 ^ 3 | 0x7C) ^ v403) + 62) ^ *(unsigned __int8 *)(v28 + v400 % 0x3BD))
       + 290925;
  int v405 = (HIWORD(v360) & 0xF0 | (v340 >> 20) & 0xF) ^ 0x66;
  unsigned int v406 = 431 * ((v405 + 1445448351 - ((2 * v405) & 0xFFFFFF3F)) ^ 0x5627CA9F);
  unsigned int v407 = 431
       * (*(unsigned __int8 *)(v28 + (v406 + 290925) % 0x3BD) ^ (16
                                                               * (*(unsigned __int8 *)(v28
                                                                                     + (v404 - 957 * ((4487950 * (unint64_t)v404) >> 32))) ^ 0x3C)) ^ 0x3C);
  unsigned int v408 = v407 + 290925 - 957 * ((4487950 * (unint64_t)(v407 + 290925)) >> 32);
  int v409 = *(unsigned __int8 *)(v28 + (v407 - 957 * ((4487950 * (unint64_t)v407) >> 32))) >> 4;
  unsigned int v410 = 431
       * (((v409 ^ 3) + 2 * ((v409 ^ 3 | 0x7C) ^ v409) + 62) ^ *(unsigned __int8 *)(v28 + v406 % 0x3BD))
       + 290925;
  int v411 = (v360 >> 20) & 0xF0 | HIBYTE(v340) & 0xF;
  unsigned int v412 = 431
       * (((v411 ^ 0x8B) - 1131075098 + ((2 * ((v411 ^ 0x8B | LODWORD(STACK[0x4F8])) ^ v411)) ^ 0x125) + 1) ^ 0xBC9529E6);
  unsigned int v413 = ((*(unsigned __int8 *)(v28 + v408) ^ 0x3C) << 20) ^ ((*(unsigned __int8 *)(v28 + v402) ^ 0x3C) << 16);
  unsigned int v414 = 431
       * (*(unsigned __int8 *)(v28 + (v412 + 290925) % 0x3BD) ^ (16
                                                               * (*(unsigned __int8 *)(v28
                                                                                     + (v410 - 957 * ((4487950 * (unint64_t)v410) >> 32))) ^ 0x3C)) ^ 0x3C);
  unsigned int v415 = v414 + 290925 - 957 * ((4487950 * (unint64_t)(v414 + 290925)) >> 32);
  int v416 = *(unsigned __int8 *)(v28 + (v414 - 957 * ((4487950 * (unint64_t)v414) >> 32))) >> 4;
  unsigned int v417 = 431
       * (((v416 ^ 3) + 2 * ((v416 ^ 3 | 0x7C) ^ v416) + 62) ^ *(unsigned __int8 *)(v28 + v412 % 0x3BD))
       + 290925;
  unsigned int v418 = 431 * ((HIBYTE(v360) & 0xF0 | (v340 >> 28)) ^ 0x23) + 290925;
  unsigned int v419 = 431
       * (*(unsigned __int8 *)(v28 + (v418 - 957 * ((4487950 * (unint64_t)v418) >> 32))) ^ (16 * (*(unsigned __int8 *)(v28 + (v417 - 957 * ((4487950 * (unint64_t)v417) >> 32))) ^ 0x3C)) ^ 0x3C)
       + 290925;
  int v420 = ((*(unsigned __int8 *)(v28 + (v419 - 957 * ((4487950 * (unint64_t)v419) >> 32))) ^ 0xC) << 28) ^ ((*(unsigned __int8 *)(v28 + v415) ^ 0x3C) << 24);
  LOBYTE(v418) = v368 - ((2 * v368) & 0xC8) - 28;
  int v421 = (16 * (v418 & 0xF)) ^ 0x40 | v366;
  unsigned int v422 = 431 * ((v390 ^ v418) & 0xF0 ^ 0xE0 | v376) + 168952;
  unsigned int v423 = v391 ^ ((*(unsigned __int8 *)(v28 + v397) ^ 0x3C) << 12);
  int v424 = (v391 >> 4) & 0xF0 | (v344 >> 8) & 0xF;
  unsigned int v425 = v423 ^ 0xC1D54B6 ^ v413;
  unsigned int v426 = (((v420 - ((2 * v420) & 0x20000000) + 282706046) ^ v425) >> 24) ^ 0x79;
  unsigned int v427 = 431 * (((v423 >> 8) & 0xF0 | ((unsigned __int16)v340 >> 12)) ^ 8) + 168952;
  unsigned int v428 = 431 * (((v425 >> 12) & 0xF0 | HIWORD(v340) & 0xF) ^ 0x83) + 168952;
  unsigned int v429 = 431 * ((HIWORD(v413) & 0xF0 | (v340 >> 20) & 0xF) ^ 6) + 168952;
  int v430 = HIBYTE(v340) & 0xF | (16 * (v426 & 0xF));
  unsigned int v431 = 431
       * (((v340 >> 28) & 0xFFFFFF0F | (16
                                      * ((((v426 - 1058786544 - ((2 * v426) & 0x20)) ^ 0xC0E43310) >> ((HIBYTE(v340) & 4 ^ 4) + (HIBYTE(v340) & 4))) & 0xF))) ^ 3)
       + 168952;
  int v432 = *(unsigned __int8 *)(v28 + (431 * v421 + 168952) % 0x3BDu);
  int v433 = v432 ^ (16 * (*(unsigned __int8 *)(v28 + v422 % 0x3BD) ^ 0x3C));
  unsigned int v434 = v433 ^ ((*(unsigned __int8 *)(v28
                                     + (431 * (v424 ^ 0xE0)
                                                    + 168952
                                                    - 957
                                                    * ((4487950 * (unint64_t)(431 * (v424 ^ 0xE0u) + 168952)) >> 32))) ^ 0x3C) << 8);
  int v435 = v434 ^ ((*(unsigned __int8 *)(v28 + (v427 - 957 * ((4487950 * (unint64_t)v427) >> 32))) ^ 0x3C) << 12);
  unsigned int v436 = v435 ^ ((*(unsigned __int8 *)(v28 + (v428 - 957 * ((4487950 * (unint64_t)v428) >> 32))) ^ 0x3C) << 16);
  unsigned int v437 = v436 ^ ((*(unsigned __int8 *)(v28 + (v429 - 957 * ((4487950 * (unint64_t)v429) >> 32))) ^ 0x3C) << 20);
  unsigned int v438 = v437 ^ ((*(unsigned __int8 *)(v28
                                     + (431 * (v430 ^ 0xB)
                                                    + 168952
                                                    - 957
                                                    * ((4487950 * (unint64_t)(431 * (v430 ^ 0xBu) + 168952)) >> 32))) ^ 0x3C) << 24);
  unsigned int v439 = 431
       * ((v438 ^ ((*(unsigned __int8 *)(v28 + (v431 - 957 * ((4487950 * (unint64_t)v431) >> 32))) ^ 0xC) << 28)) >> 28)
       + 404709;
  int v440 = *(unsigned __int8 *)(v28 + (v439 - 957 * ((4487950 * (unint64_t)v439) >> 32))) ^ 0x3C;
  int v441 = *(unsigned __int8 *)(v28
                            + (431 * (HIBYTE(v438) & 0xF)
                                           + 404709
                                           - 957
                                           * ((4487950 * (unint64_t)(431 * (HIBYTE(v438) & 0xF) + 404709)) >> 32))) ^ 0x3C;
  int v442 = (v441 << 9) & 0xF800;
  int v443 = (v441 << 8) - 666993559;
  unsigned int v444 = ((v443 & 0x100 ^ 0x1AF) + (v443 & 0x100)) * (((v437 >> 20) & 0xF) + 939);
  unsigned int v445 = ((((((v443 - v442) ^ ((v440 << 12) - 666993559 - ((v440 << 13) & 0xFFFCFFFF)))
           + (*(unsigned __int8 *)(v28
                                 + (431 * (HIWORD(v436) & 0xF)
                                                + 404709
                                                - 957
                                                * ((4487950 * (unint64_t)(431 * (HIWORD(v436) & 0xF) + 404709)) >> 32))) ^ 0x3C)) << 8) ^ ((*(unsigned __int8 *)(v28 + (v444 - 957 * ((4487950 * (unint64_t)v444) >> 32))) ^ 0x3C) << 12) | *(unsigned __int8 *)(v28 + (431 * ((v434 >> 8) & 0xF) + 404709 - 957 * ((4487950 * (unint64_t)(431 * ((v434 >> 8) & 0xF) + 404709)) >> 32))) ^ 0x3C) << 8) ^ ((*(unsigned __int8 *)(v28 + (431 * ((unsigned __int16)v435 >> 12) + 404709 - 957 * ((4487950 * (unint64_t)(431 * ((unsigned __int16)v435 >> 12) + 404709)) >> 32))) ^ 0x3C) << 12);
  unsigned int v446 = 431 * ((v433 >> 4) ^ 3) + 404709;
  unsigned int v447 = ((2 * (v432 ^ 8)) & 0x16) + (v432 & 0xF ^ 0xFF9FAB77);
  int v448 = ((*(unsigned __int8 *)(v28 + (v446 - 957 * ((4487950 * (unint64_t)v446) >> 32))) ^ 0x3C) << (((7 - v447) | v447) & 4)) ^ (LODWORD(STACK[0x4F4]) - 1878243326) ^ (v445 | *(unsigned __int8 *)(v28 + (431 * v447 - 1573619504) % 0x3BD) ^ 0x3C);
  LODWORD(STACK[0x5C8]) = v448 - ((2 * v448) & 0x1A537724);
  LODWORD(STACK[0x6D8]) = v326 ^ LODWORD(STACK[0x6C4]);
  int v449 = LODWORD(STACK[0x564]) - LODWORD(STACK[0x618]);
  unsigned int v450 = 431 * (((unsigned __int16)LODWORD(STACK[0x6B8]) >> 12) ^ 0xC) + 279719;
  unsigned int v451 = 431 * ((LODWORD(STACK[0x6AC]) >> 4) ^ 8) + 279719;
  int v452 = *(unsigned __int8 *)(v28
                            + (431 * (STACK[0x6AC] & 0xF)
                                           + 279719
                                           - 957 * ((4487950 * (431 * (STACK[0x6AC] & 0xF) + 279719)) >> 32))) ^ 0x3C;
  int v453 = v452 + 836281017 - ((2 * v452) & 0x172);
  LOBYTE(v435) = v449 - 66;
  unsigned int v454 = v449 + 1724178878 - ((2 * v449 + 1668870716) & 0x6A10D140);
  unsigned int v455 = LODWORD(STACK[0x680]) ^ ((*(unsigned __int8 *)(v28
                                                      + (v450
                                                                     - 957 * ((4487950 * (unint64_t)v450) >> 32))) ^ 0x3C) << 12);
  unsigned int v456 = 431 * (HIBYTE(v454) & 0xF ^ 5) + 279719;
  unsigned int v457 = (v455 ^ 0x1ED21976 | v453 ^ 0x31D8A2B9) ^ (16
                                                  * (*(unsigned __int8 *)(v28
                                                                        + (v451
                                                                                       - 957
                                                                                       * ((4487950
                                                                                         * (unint64_t)v451) >> 32))) ^ 0x3C));
  unsigned int v458 = 431 * (HIWORD(v454) & 0xF ^ 8) + 279719;
  int v459 = ((*(unsigned __int8 *)(v28 + (v456 - 957 * ((4487950 * (unint64_t)v456) >> 32))) ^ 0x3C) << 8) ^ ((*(unsigned __int8 *)(v28 + (431 * ((v454 >> 28) ^ 3) + 279719 - 957 * ((4487950 * (unint64_t)(431 * ((v454 >> 28) ^ 3) + 279719)) >> 32))) ^ 0x3C) << 12) | *(unsigned __int8 *)(v28 + (v458 - 957 * ((4487950 * (unint64_t)v458) >> 32))) ^ 0x3C;
  unsigned int v460 = 431 * (((unsigned __int16)v454 >> 12) ^ 6) + 279719;
  unsigned int v461 = 431 * ((v454 >> 8) & 0xF ^ 8) + 279719;
  int v462 = (v459 << 8) ^ ((*(unsigned __int8 *)(v28
                                            + (431 * ((v454 >> 20) & 0xF)
                                                           + 279719
                                                           - 957
                                                           * ((4487950
                                                             * (unint64_t)(431 * ((v454 >> 20) & 0xF) + 279719)) >> 32))) ^ 0x3C) << 12);
  unsigned int v463 = 431 * ((v454 >> 4) ^ 0xA) + 279719;
  unsigned int v464 = v463 - 957 * ((4487950 * (unint64_t)v463) >> 32);
  int v465 = v435 & 0xF;
  int v466 = v462 | *(unsigned __int8 *)(v28 + (v461 - 957 * ((4487950 * (unint64_t)v461) >> 32))) ^ 0x3C;
  unsigned int v467 = (v466 << 8) + 1437622170 - ((v466 << 9) & 0xAB60BE00);
  unsigned int v468 = v467 ^ ((*(unsigned __int8 *)(v28 + (v460 - 957 * ((4487950 * (unint64_t)v460) >> 32))) ^ 0x3C) << 12);
  int v469 = *(unsigned __int8 *)(v28
                            + (431 * v465
                                           + 279719
                                           - 957
                                           * ((4487950 * (unint64_t)(431 * v465 + 279719)) >> 32))) ^ 0x3C;
  int v470 = (2 * v469) & 0x130;
  v469 += 1374688664;
  unsigned int v471 = (v468 ^ 0x55B05F9A | (v469 - v470) ^ 0x51F01598) ^ (16 * (*(unsigned __int8 *)(v28 + v464) ^ 0x3C));
  unsigned int v472 = ((v453 & 0xF ^ LODWORD(STACK[0x4A8])) - ((2 * (v453 & 0xF ^ LODWORD(STACK[0x4A8]))) & 0x8402018) - 1108044484) ^ 0xB9D4873C;
  unsigned int v473 = 431
       * ((((16 * (v469 & 0xF)) ^ 0x80 | v472) + 1185211428 - ((2 * ((16 * (v469 & 0xF)) ^ 0x80 | v472)) & 0xD49C848)) ^ 0x46A4E424);
  unsigned int v474 = 431 * (*(unsigned __int8 *)(v28 + (v473 + 290925) % 0x3BD) ^ v370 ^ 0x3C);
  unsigned int v475 = v474 + 290925;
  unsigned int v476 = *(unsigned __int8 *)(v28 + v474 % 0x3BD);
  unsigned int v477 = 431
       * ((((v476 >> 4) ^ 3) - ((v476 >> 3) & 0x18) + 60) ^ *(unsigned __int8 *)(v28 + v473 % 0x3BD))
       + 290925;
  unsigned int v478 = 431
       * (((v471 & 0xF0 | (v457 >> 4))
         - 342764392
         - 2 * ((v471 & 0x90 | (v457 >> 4) & 0x99) ^ (v457 >> 4) & 1)) ^ 0xEB91D498);
  unsigned int v479 = 431
       * (*(unsigned __int8 *)(v28 + (v478 + 290925) % 0x3BD) ^ (16
                                                               * (*(unsigned __int8 *)(v28
                                                                                     + (v477 - 957 * ((4487950 * (unint64_t)v477) >> 32))) ^ 0x3C)) ^ 0x3C);
  unsigned int v480 = v479 + 290925 - 957 * ((4487950 * (unint64_t)(v479 + 290925)) >> 32);
  unsigned int v481 = *(unsigned __int8 *)(v28 + (v479 - 957 * ((4487950 * (unint64_t)v479) >> 32)));
  int v482 = (((v481 >> 4) ^ 3) + (~(v481 >> 3) | 0xE7) + 61) ^ *(unsigned __int8 *)(v28 + v478 % 0x3BD);
  unsigned int v483 = (v471 >> 4) & 0xF0 ^ ((v465 ^ 0xF) + v465) & (v457 >> 8);
  int v484 = *(unsigned __int8 *)(v28 + v480) ^ 0x3C;
  LOBYTE(v471) = *(unsigned char *)(v28 + v475 % 0x3BD) ^ 0x3C;
  v483 *= 431;
  unsigned int v485 = v483 - 957 * ((4487950 * (unint64_t)v483) >> 32);
  unsigned int v486 = 431
       * (*(unsigned __int8 *)(v28 + (v483 + 290925) % 0x3BD) ^ (16
                                                               * (*(unsigned __int8 *)(v28
                                                                                     + (431 * v482 + 290925 - 957 * ((4487950 * (unint64_t)(431 * v482 + 290925)) >> 32))) ^ 0x3C)) ^ 0x3C);
  unsigned int v487 = v486 + 290925 - 957 * ((4487950 * (unint64_t)(v486 + 290925)) >> 32);
  unsigned int v488 = *(unsigned __int8 *)(v28 + (v486 - 957 * ((4487950 * (unint64_t)v486) >> 32)));
  unsigned int v489 = 431 * ((((v488 >> 4) ^ 3) - ((v488 >> 3) & 0x18) + 60) ^ *(unsigned __int8 *)(v28 + v485))
       + 290925;
  int v490 = ((v468 >> 8) & 0xF0 | ((unsigned __int16)v455 >> 12)) ^ 0x51;
  unsigned int v491 = 431 * ((v490 - 102677024 - ((2 * v490) & 0x1C0)) ^ 0xF9E145E0);
  unsigned int v492 = 431
       * (*(unsigned __int8 *)(v28 + (v491 + 290925) % 0x3BD) ^ (16
                                                               * (*(unsigned __int8 *)(v28
                                                                                     + (v489 - 957 * ((4487950 * (unint64_t)v489) >> 32))) ^ 0x3C)) ^ 0x3C);
  unsigned int v493 = v492 + 290925 - 957 * ((4487950 * (unint64_t)(v492 + 290925)) >> 32);
  unsigned int v494 = *(unsigned __int8 *)(v28 + (v492 - 957 * ((4487950 * (unint64_t)v492) >> 32)));
  unsigned int v495 = 431
       * ((((v494 >> 4) ^ 3) - ((v494 >> 3) & 0x18) + 60) ^ *(unsigned __int8 *)(v28 + v491 % 0x3BD))
       + 290925;
  int v496 = (v468 >> 12) & 0xF0 | HIWORD(v455) & 0xF;
  unsigned int v497 = 431 * (((v496 ^ 2) + 1271765235 + ((2 * (v496 ^ (HIWORD(v455) | 0x7FFFFFF3))) ^ 0x1D) + 1) ^ 0x4BCD98F3);
  unsigned int v498 = 431
       * (*(unsigned __int8 *)(v28 + (v497 + 290925) % 0x3BD) ^ (16
                                                               * (*(unsigned __int8 *)(v28
                                                                                     + (v495 - 957 * ((4487950 * (unint64_t)v495) >> 32))) ^ 0x3C)) ^ 0x3C);
  unsigned int v499 = v498 - 957 * ((4487950 * (unint64_t)v498) >> 32);
  unsigned int v500 = ((*(unsigned __int8 *)(v28
                              + (v498
                                             + 290925
                                             - 957 * ((4487950 * (unint64_t)(v498 + 290925)) >> 32))) ^ 0x3C) << 16) ^ ((*(unsigned __int8 *)(v28 + v493) ^ 0x3C) << 12);
  int v501 = (HIWORD(v467) & 0xF0 | (LODWORD(STACK[0x680]) >> 20) & 0xF) ^ 0xBD;
  unsigned int v502 = 431
       * ((((*(unsigned char *)(v28 + v499) >> 4) ^ 3) - ((*(unsigned char *)(v28 + v499) >> 3) & 0x18) + 60) ^ *(unsigned __int8 *)(v28 + v497 % 0x3BD))
       + 290925;
  unsigned int v503 = (v501 - 745446420 + (~(2 * v501) | 0xFFFFFE27) + 1) ^ 0xD39163EC;
  unsigned int v504 = 431
       * (*(unsigned __int8 *)(v28 + (431 * v503 + 290925) % 0x3BD) ^ (16
                                                                     * (*(unsigned __int8 *)(v28
                                                                                           + (v502 - 957 * ((4487950 * (unint64_t)v502) >> 32))) ^ 0x3C)) ^ 0x3C);
  unsigned int v505 = v504 + 290925 - 957 * ((4487950 * (unint64_t)(v504 + 290925)) >> 32);
  int v506 = ((v467 >> 20) & 0xF0 | HIBYTE(LODWORD(STACK[0x680])) & 0xF) ^ 0x5E;
  unsigned int v507 = *(unsigned __int8 *)(v28 + (v504 - 957 * ((4487950 * (unint64_t)v504) >> 32)));
  unsigned int v508 = 431
       * ((((v507 >> 4) ^ 3) - ((v507 >> 3) & 0x18) + 60) ^ *(unsigned __int8 *)(v28
                                                                                                + ((431 * v503
                                                                                                  + 2105932078
                                                                                                  - ((862 * v503) & 0xFB0BF25C)) ^ 0x7D85F92E)
                                                                                                % 0x3BD))
       + 290925;
  unsigned int v509 = 431 * ((v506 + 681799556 - ((2 * v506) & 0x108)) ^ 0x28A36F84);
  unsigned int v510 = v509 % 0x3BD;
  unsigned int v511 = 431
       * (*(unsigned __int8 *)(v28 + (v509 + 290925) % 0x3BD) ^ (16
                                                               * (*(unsigned __int8 *)(v28
                                                                                     + (v508 - 957 * ((4487950 * (unint64_t)v508) >> 32))) ^ 0x3C)) ^ 0x3C);
  unsigned int v512 = v511 + 290925 - 957 * ((4487950 * (unint64_t)(v511 + 290925)) >> 32);
  unsigned int v513 = *(unsigned __int8 *)(v28 + (v511 - 957 * ((4487950 * (unint64_t)v511) >> 32)));
  unsigned int v514 = 431 * ((((v513 >> 4) ^ 0x43) - ((v513 >> 3) & 0x18) - 4) ^ *(unsigned __int8 *)(v28 + v510))
       + 290925;
  unsigned int v515 = 431 * ((HIBYTE(v467) & 0xF0 | (LODWORD(STACK[0x680]) >> 28)) ^ 0x51) + 290925;
  unsigned int v516 = 431
       * (*(unsigned __int8 *)(v28 + (v515 - 957 * ((4487950 * (unint64_t)v515) >> 32))) ^ (16 * (*(unsigned __int8 *)(v28 + (v514 - 957 * ((4487950 * (unint64_t)v514) >> 32))) ^ 0x3C)) ^ 0x3C)
       + 290925;
  unsigned int v517 = *(unsigned __int8 *)(v28 + (v516 - 957 * ((4487950 * (unint64_t)v516) >> 32))) ^ 0xC;
  int v518 = 16 * v484 - ((32 * v484) & 0xDE0) + 1592153844;
  LOBYTE(v471) = v471 - ((2 * v471) & 0xC6) + 99;
  unsigned int v519 = v518 ^ ((*(unsigned __int8 *)(v28 + v487) ^ 0x3C) << 8);
  LOBYTE(v518) = v518 ^ v471;
  unsigned int v520 = 431 * ((16 * (v471 & 0xF)) ^ 0x30 | v472) + 168952;
  int v521 = (v519 >> 4) & 0xF0 | (v457 >> 8) & 0xF;
  unsigned int v522 = 431 * ((v518 & 0xF0 | (v457 >> 4)) ^ 0x90) + 168952;
  unsigned int v523 = v522 - 957 * ((4487950 * (unint64_t)v522) >> 32);
  unsigned int v524 = v519 ^ 0xB4C51BC5 ^ v500;
  unsigned int v525 = v524 ^ ((*(unsigned __int8 *)(v28 + v505) ^ 0x3C) << 20);
  unsigned int v526 = 431 * (((v524 >> 8) & 0xF0 | ((unsigned __int16)v455 >> 12)) ^ 0x41) + 168952;
  unsigned int v527 = v526 - 957 * ((4487950 * (unint64_t)v526) >> 32);
  unsigned int v528 = v500 >> 12;
  unsigned int v529 = 431 * (((v500 >> 12) & 0xF0 | HIWORD(v455) & 0xF) ^ 2) + 168952;
  unsigned int v530 = v525 ^ ((*(unsigned __int8 *)(v28 + v512) ^ 0x3C) << 24);
  unsigned int v531 = 431 * ((HIWORD(v525) & 0xF0 | (LODWORD(STACK[0x680]) >> 20) & 0xF) ^ 0x2D) + 168952;
  unsigned int v532 = ((v517 << 28) + (v517 >> 2 << 31) + 1144534777) ^ v530;
  unsigned int v533 = 431 * (((v530 >> 20) & 0xF0 | HIBYTE(LODWORD(STACK[0x680])) & 0xF) ^ 0xAE) + 168952;
  unsigned int v534 = 431 * ((HIBYTE(v532) & 0xF0 | (LODWORD(STACK[0x680]) >> 28)) ^ 0xA1) + 168952;
  int v535 = *(unsigned __int8 *)(v28 + v520 % 0x3BD);
  int v536 = v535 ^ (16 * (*(unsigned __int8 *)(v28 + v523) ^ 0x3C));
  unsigned int v537 = v536 ^ ((*(unsigned __int8 *)(v28
                                     + (431 * (v521 ^ 0x60)
                                                    + 168952
                                                    - 957
                                                    * ((4487950 * (unint64_t)(431 * (v521 ^ 0x60u) + 168952)) >> 32))) ^ 0x3C) << 8);
  int v538 = v537 ^ ((*(unsigned __int8 *)(v28 + v527) ^ 0x3C) << 12);
  unsigned int v539 = v538 ^ ((*(unsigned __int8 *)(v28 + (v529 - 957 * ((4487950 * (unint64_t)v529) >> 32))) ^ 0x3C) << 16);
  unsigned int v540 = v539 ^ ((*(unsigned __int8 *)(v28 + (v531 - 957 * ((4487950 * (unint64_t)v531) >> 32))) ^ 0x3C) << 20);
  unsigned int v541 = v540 ^ ((*(unsigned __int8 *)(v28 + (v533 - 957 * ((4487950 * (unint64_t)v533) >> 32))) ^ 0x3C) << 24);
  unsigned int v542 = 431
       * ((((-268435456
           * (*(unsigned __int8 *)(v28 + (v534 - 957 * ((4487950 * (unint64_t)v534) >> 32))) ^ 0xC)
           + 2037743402) ^ v541) >> 28) ^ 7)
       + 404709;
  unsigned int v543 = HIBYTE(v541) & 0xF ^ 0xFEF3FFD5;
  unsigned int v544 = v543 + ((v541 >> 23) & 0xA);
  int v545 = (*(unsigned __int8 *)(v28
                             + (431 * (HIWORD(v539) & 0xF)
                                            + 404709
                                            - 957
                                            * ((4487950 * (unint64_t)(431 * (HIWORD(v539) & 0xF) + 404709)) >> 32))) ^ 0x3C | ((*(unsigned __int8 *)(v28 + (431 * v544 - 1019579062) % 0x3BD) ^ ((*(unsigned __int8 *)(v28 + (v542 - 957 * ((4487950 * (unint64_t)v542) >> 32))) ^ 0x3C) << (v543 & 1 ^ 0x45 ^ (41 - v544) & 0x41)) ^ 0x3C) << 8)) ^ (16 * (*(unsigned __int8 *)(v28 + (431 * ((v540 >> 20) & 0xF) + 404709 - 957 * ((4487950 * (unint64_t)(431 * ((v540 >> 20) & 0xF) + 404709)) >> 32))) ^ 0x3C));
  unsigned int v546 = 431 * ((v536 >> 4) ^ 3) + 404709;
  LODWORD(STACK[0x6C4]) = LODWORD(STACK[0x6B8]) ^ (LODWORD(STACK[0x6B0]) - 2056064112);
  unsigned int v547 = LODWORD(STACK[0x670])
       + LODWORD(STACK[0x568])
       - ((2 * (LODWORD(STACK[0x670]) + LODWORD(STACK[0x568])) + 715290030) & 0x480B1464);
  LODWORD(STACK[0x6B8]) = LODWORD(STACK[0x698]) ^ (16
                                                 * (*(unsigned __int8 *)(v28
                                                                       + (v546
                                                                                      - 957
                                                                                      * ((4487950
                                                                                        * (unint64_t)v546) >> 32))) ^ 0x3C)) ^ ((((*(unsigned __int8 *)(v28 + (431 * ((v537 >> 8) & 0xF) + 404709 - 957 * ((4487950 * (unint64_t)(431 * ((v537 >> 8) & 0xF) + 404709)) >> 32))) ^ 0x3C) << 8) | (v545 << 16)) ^ ((*(unsigned __int8 *)(v28 + (431 * ((unsigned __int16)v538 >> 12) + 404709 - 957 * ((4487950 * (unint64_t)(431 * ((unsigned __int16)v538 >> 12) + 404709)) >> 32))) ^ 0x3C) << 12) | *(unsigned __int8 *)(v28 + (431 * (v535 & 0xF ^ 0xC) + 404709 - 957 * ((4487950 * (unint64_t)(431 * (v535 & 0xF ^ 0xCu) + 404709)) >> 32))) ^ 0x3C);
  v547 += 961987849;
  int v548 = LODWORD(STACK[0x6E0]) + 1400522043 + (LODWORD(STACK[0x648]) ^ 0x377396CD);
  unsigned int v549 = v548 + 2130710185 - ((2 * v548) & 0xFE001D52);
  unsigned int v550 = 431 * (HIBYTE(v547) & 0xF ^ 4) + 279719;
  int v551 = *(unsigned __int8 *)(v28
                            + (431 * ((v547 >> 28) ^ 2)
                                           + 279719
                                           - 957
                                           * ((4487950 * (unint64_t)(431 * ((v547 >> 28) ^ 2) + 279719)) >> 32)));
  int v552 = *(unsigned __int8 *)(v28 + (v550 - 957 * ((4487950 * (unint64_t)v550) >> 32))) ^ 0x3C;
  unsigned int v553 = 431 * ((v545 & 0x289) + (HIWORD(v547) & 0xF ^ 5) + (v545 & 0x289 ^ 0x289));
  int v554 = 16 * (v551 ^ 0x3C) - ((32 * v551) & 0x1840) - 1895351261;
  HIDWORD(v555) = (v552 - ((2 * v552) & 0x46) + 35) ^ v554;
  LODWORD(v555) = v554 ^ 0x8F073C00;
  int v556 = (v555 >> 10) + 946085104 + (~(2 * (v555 >> 10)) | 0x8F37C621);
  HIDWORD(v555) = v556 ^ 0x20;
  LODWORD(v555) = v556 ^ 0x38640000 | ((*(unsigned __int8 *)(v28
                                                           + (v553
                                                                          - 957
                                                                          * ((4487950 * (unint64_t)v553) >> 32))) ^ 0x3C) << 14);
  unsigned int v557 = 431 * (((unsigned __int16)v547 >> 12) ^ 8) + 279719;
  unsigned int v558 = 431 * ((v547 >> 8) & 0xF ^ 0xA) + 279719;
  unsigned int v559 = ((v555 >> 14) << 8) ^ ((*(unsigned __int8 *)(v28
                                                                  + (431 * ((v547 >> 20) & 0xF)
                                                                                 + 279719
                                                                                 - 957
                                                                                 * ((4487950
                                                                                   * (unint64_t)(431 * ((v547 >> 20) & 0xF) + 279719)) >> 32))) ^ 0x3C) << 12) | *(unsigned __int8 *)(v28 + (v558 - 957 * ((4487950 * (unint64_t)v558) >> 32))) ^ 0x3C;
  unsigned int v560 = 431 * ((v547 >> 4) ^ 3) + 279719;
  unsigned int v561 = (v559 << 8) - 1863512078 - ((v559 << 9) & 0x21DA1E00);
  unsigned int v562 = v561 ^ ((*(unsigned __int8 *)(v28 + (v557 - 957 * ((4487950 * (unint64_t)v557) >> 32))) ^ 0x3C) << 12);
  int v563 = *(unsigned __int8 *)(v28
                            + (431 * (v547 & 0xF ^ 2)
                                           + 279719
                                           - 957
                                           * ((4487950 * (unint64_t)(431 * (v547 & 0xF ^ 2) + 279719)) >> 32))) ^ 0x3C;
  int v564 = (2 * v563) & 0x1AC;
  v563 -= 716684586;
  int v565 = v563 - v564;
  unsigned int v566 = (v549 ^ 0x7F000EA9) >> (v528 & 0x10) >> (v528 & 0x10 ^ 0x18);
  LOBYTE(v566) = v566 - ((2 * v566) & 0x5E);
  unsigned int v567 = 431 * (((v566 - 81) >> 4) ^ 0xA) + 279719;
  unsigned int v568 = 431 * ((80 - (_BYTE)v566) & 0xF) + 279719;
  unsigned int v569 = v568 - 957 * ((4487950 * (unint64_t)v568) >> 32);
  unsigned int v570 = (v562 ^ 0x90ED0FF2 | v565 ^ 0xD54842D6) ^ (16
                                                  * (*(unsigned __int8 *)(v28
                                                                        + (v560
                                                                                       - 957
                                                                                       * ((4487950
                                                                                         * (unint64_t)v560) >> 32))) ^ 0x3C));
  int v571 = ((*(unsigned __int8 *)(v28 + v569) ^ 0x3C) << 8) ^ ((*(unsigned __int8 *)(v28
                                                                                 + (v567
                                                                                                - 957
                                                                                                * ((4487950
                                                                                                  * (unint64_t)v567) >> 32))) ^ 0x3C) << 12) | *(unsigned __int8 *)(v28 + (431 * (HIWORD(v549) & 0xF) + 279719 - 957 * ((4487950 * (unint64_t)(431 * (HIWORD(v549) & 0xF) + 279719)) >> 32))) ^ 0x3C;
  unsigned int v572 = ((v549 ^ 0x7F000EA9) >> 8) - (((v549 ^ 0x7F000EA9) >> 7) & 0x74E8D2) + 1027241065;
  unsigned int v573 = 431 * ((v572 >> 4) ^ 6) + 279719;
  int v574 = ((v565 & 0xC ^ 0x5897831B) - (v563 & 3)) ^ 0x5C82073F;
  int v575 = (v571 << 8) ^ ((*(unsigned __int8 *)(v28
                                            + (431 * ((v549 >> 20) & 0xF)
                                                           + 279719
                                                           - 957
                                                           * ((4487950
                                                             * (unint64_t)(431 * ((v549 >> 20) & 0xF) + 279719)) >> 32))) ^ 0x3C) << 12) | *(unsigned __int8 *)(v28 + (431 * (v572 & 0xF ^ 9) + 279719 - 957 * ((4487950 * (unint64_t)(431 * (v572 & 0xF ^ 9) + 279719)) >> 32))) ^ 0x3C;
  unsigned int v576 = (v575 << 8) - 647996235 - ((v575 << 9) & 0xB2C0B800);
  unsigned int v577 = 431 * ((v549 >> 4) ^ 0xA) + 279719;
  int v578 = *(unsigned __int8 *)(v28
                            + (431 * (v549 & 0xF ^ 9)
                                           + 279719
                                           - 957
                                           * ((4487950 * (unint64_t)(431 * (v549 & 0xF ^ 9) + 279719)) >> 32))) ^ 0x3C;
  int v579 = v578 - 1867881442 - ((2 * v578) & 0x3C);
  unsigned int v580 = v576 ^ ((*(unsigned __int8 *)(v28 + (v573 - 957 * ((4487950 * (unint64_t)v573) >> 32))) ^ 0x3C) << 12);
  unsigned int v581 = (v580 ^ 0xD9605CB5 | v579 ^ 0x90AA641E) ^ (16
                                                  * (*(unsigned __int8 *)(v28
                                                                        + (v577
                                                                                       - 957
                                                                                       * ((4487950
                                                                                         * (unint64_t)v577) >> 32))) ^ 0x3C));
  int v582 = (1116147196 - v574 + ((2 * v574) & 0x8210006)) ^ 0x469289DE;
  unsigned int v583 = 431 * ((2000539144 - ((2 * v582) & 0x6E7B9C10) + ((16 * (v579 & 0xF)) ^ 0xE0 | v582)) ^ 0x773DCE08);
  unsigned int v584 = v583 % 0x3BD;
  unsigned int v585 = 431 * (*(unsigned __int8 *)(v28 + (v583 + 290925) % 0x3BD) ^ v370 ^ 0x3C);
  unsigned int v586 = (v585 + 290925) % 0x3BD;
  unsigned int v587 = *(unsigned __int8 *)(v28 + v585 % 0x3BD);
  unsigned int v588 = 431
       * ((((v587 >> 4) ^ 3) + (~(v587 >> 3) | 0xE7) + 61) ^ *(unsigned __int8 *)(v28 + v584))
       + 290925;
  unsigned int v589 = v588 - 957 * ((4487950 * (unint64_t)v588) >> 32);
  unsigned int v590 = (((2 * ((v570 >> 4) ^ 0x5500029D)) | 0xC37C46A0)
        - ((v570 >> 4) ^ 0x5500029D)
        + 507632816) ^ 0xB4BE21CD;
  unsigned int v591 = 431 * (((v590 | v581 & 0xF0) - 996269788 - ((2 * (v590 | v581 & 0xF0)) & 0x93C4248)) ^ 0xC49E2124);
  unsigned int v592 = 431
       * (*(unsigned __int8 *)(v28 + (v591 + 289968) % 0x3BD) ^ (16 * (*(unsigned __int8 *)(v28 + v589) ^ 0x3C)) ^ 0x3C);
  unsigned int v593 = v592 + 290925 - 957 * ((4487950 * (unint64_t)(v592 + 290925)) >> 32);
  unsigned int v594 = *(unsigned __int8 *)(v28 + (v592 - 957 * ((4487950 * (unint64_t)v592) >> 32)));
  unsigned int v595 = 431
       * ((((v594 >> 4) ^ 3) - ((v594 >> 3) & 0x18) + 60) ^ *(unsigned __int8 *)(v28 + v591 % 0x3BD))
       + 290925;
  int v596 = (v581 >> 4) & 0xF0 | (v570 >> 8) & 0xF;
  unsigned int v597 = 431 * ((v596 + 1112685868 - ((2 * v596) & 0x58)) ^ 0x42523D2C);
  unsigned int v598 = 431
       * (*(unsigned __int8 *)(v28 + (v597 + 290925) % 0x3BD) ^ (16
                                                               * (*(unsigned __int8 *)(v28
                                                                                     + (v595 - 957 * ((4487950 * (unint64_t)v595) >> 32))) ^ 0x3C)) ^ 0x3C);
  unsigned int v599 = v598 + 290925 - 957 * ((4487950 * (unint64_t)(v598 + 290925)) >> 32);
  int v600 = *(unsigned __int8 *)(v28 + (v598 - 957 * ((4487950 * (unint64_t)v598) >> 32))) >> 4;
  unsigned int v601 = 431
       * (((v600 ^ 3) + 2 * ((v600 ^ 3 | 0x7C) ^ v600) + 62) ^ *(unsigned __int8 *)(v28 + v597 % 0x3BD))
       + 290925;
  unsigned int v602 = v601 - 957 * ((4487950 * (unint64_t)v601) >> 32);
  int v603 = ((v580 >> 8) & 0xF0 | ((unsigned __int16)v562 >> 12)) ^ 0x50;
  int v604 = v603 - 320558471 - ((2 * v603) & 0xF2);
  int v605 = *(unsigned __int8 *)(v28 + v586) ^ 0x3C;
  int v606 = v605 ^ (16 * (*(unsigned __int8 *)(v28 + v593) ^ 0x3C)) ^ ((*(unsigned __int8 *)(v28 + v599) ^ 0x3C) << 8);
  unsigned int v607 = 431 * (v604 ^ 0xECE4AA79);
  unsigned int v608 = v607 % 0x3BD;
  unsigned int v609 = 431
       * (*(unsigned __int8 *)(v28 + (v607 + 290925) % 0x3BD) ^ (16 * (*(unsigned __int8 *)(v28 + v602) ^ 0x3C)) ^ 0x3C);
  unsigned int v610 = v609 - 957 * ((4487950 * (unint64_t)v609) >> 32);
  int v611 = (((*(unsigned char *)(v28 + v610) >> 4) ^ 3) - ((*(unsigned char *)(v28 + v610) >> 3) & 0x18) + 60) ^ *(unsigned __int8 *)(v28 + v608);
  int v612 = ((v580 >> 12) & 0xF0 | HIWORD(v562) & 0xF) ^ 0xD;
  unsigned int v613 = 431 * ((v612 - 1526907475 - ((2 * v612) & 0x15A)) ^ 0xA4FD3DAD);
  unsigned int v614 = 431
       * (*(unsigned __int8 *)(v28 + (v613 + 290925) % 0x3BD) ^ (16
                                                               * (*(unsigned __int8 *)(v28
                                                                                     + (431 * v611 + 290925 - 957 * ((4487950 * (unint64_t)(431 * v611 + 290925)) >> 32))) ^ 0x3C)) ^ 0x3C);
  unsigned int v615 = v614 + 290925 - 957 * ((4487950 * (unint64_t)(v614 + 290925)) >> 32);
  unsigned int v616 = *(unsigned __int8 *)(v28 + (v614 - 957 * ((4487950 * (unint64_t)v614) >> 32)));
  unsigned int v617 = 431
       * ((((v616 >> 4) ^ 3) - ((v616 >> 3) & 0x18) + 60) ^ *(unsigned __int8 *)(v28 + v613 % 0x3BD))
       + 290925;
  int v618 = (HIWORD(v576) & 0xF0 | (v561 >> 20) & 0xF) ^ 0x6E;
  unsigned int v619 = 431 * ((v618 - 172766940 - ((2 * v618) & 0x48)) ^ 0xF5B3C924);
  unsigned int v620 = 431
       * (*(unsigned __int8 *)(v28 + (v619 + 290925) % 0x3BD) ^ (16
                                                               * (*(unsigned __int8 *)(v28
                                                                                     + (v617 - 957 * ((4487950 * (unint64_t)v617) >> 32))) ^ 0x3C)) ^ 0x3C);
  unsigned int v621 = v620 - 957 * ((4487950 * (unint64_t)v620) >> 32);
  int v622 = (((*(unsigned char *)(v28 + v621) >> 4) ^ 3) - ((*(unsigned char *)(v28 + v621) >> 3) & 0x18) + 60) ^ *(unsigned __int8 *)(v28 + v619 % 0x3BD);
  int v623 = (v576 >> 20) & 0xF0 | HIBYTE(v561) & 0xF;
  int v624 = ((*(unsigned __int8 *)(v28
                              + (v620
                                             + 290925
                                             - 957 * ((4487950 * (unint64_t)(v620 + 290925)) >> 32))) ^ 0x3C) << 20) ^ ((*(unsigned __int8 *)(v28 + v615) ^ 0x3C) << 16);
  unsigned int v625 = 431 * (((v623 ^ 0x90) + 458687279 - ((2 * v623) & 0x5E)) ^ 0x1B57032F);
  unsigned int v626 = 431
       * (*(unsigned __int8 *)(v28 + (v625 + 290925) % 0x3BD) ^ (16
                                                               * (*(unsigned __int8 *)(v28
                                                                                     + (431 * v622 + 290925 - 957 * ((4487950 * (unint64_t)(431 * v622 + 290925)) >> 32))) ^ 0x3C)) ^ 0x3C);
  unsigned int v627 = v626 + 290925 - 957 * ((4487950 * (unint64_t)(v626 + 290925)) >> 32);
  unsigned int v628 = *(unsigned __int8 *)(v28 + (v626 - 957 * ((4487950 * (unint64_t)v626) >> 32)));
  unsigned int v629 = 431
       * ((((v628 >> 4) ^ 3) - ((v628 >> 3) & 0x18) + 60) ^ *(unsigned __int8 *)(v28 + v625 % 0x3BD))
       + 290925;
  unsigned int v630 = 431 * ((HIBYTE(v576) & 0xF0 | (v561 >> 28)) ^ 0xD9) + 290925;
  unsigned int v631 = 431
       * (*(unsigned __int8 *)(v28 + (v630 - 957 * ((4487950 * (unint64_t)v630) >> 32))) ^ (16 * (*(unsigned __int8 *)(v28 + (v629 - 957 * ((4487950 * (unint64_t)v629) >> 32))) ^ 0x3C)) ^ 0x3C)
       + 290925;
  unsigned int v632 = v606 ^ ((*(unsigned __int8 *)(v28
                                     + (v609
                                                    + 290925
                                                    - 957 * ((4487950 * (unint64_t)(v609 + 290925)) >> 32))) ^ 0x3C) << 12);
  unsigned int v633 = (v624 - ((2 * v624) & 0x72C0000) + 328629787) ^ v632;
  unsigned int v634 = v633 ^ ((*(unsigned __int8 *)(v28 + v627) ^ 0x3C) << 24) ^ ((*(unsigned __int8 *)(v28
                                                                                         + (v631 - 957 * ((4487950 * (unint64_t)v631) >> 32))) ^ 0xC) << 28);
  unsigned int v635 = 431 * ((v632 >> 8) & 0xF0 | ((unsigned __int16)v562 >> 12)) + 168952;
  unsigned int v636 = 431 * (((v633 >> 12) & 0xF0 | HIWORD(v562) & 0xF) ^ 0x6D) + 168952;
  int v637 = *(unsigned __int8 *)(v28 + (431 * ((16 * (v605 & 0xF)) | v582) + 168952) % 0x3BD) ^ (16 * (*(unsigned __int8 *)(v28 + (431 * (v606 & 0xF0 | v590) + 168952) % 0x3BD) ^ 0x3C)) ^ ((*(unsigned __int8 *)(v28 + (431 * (((v634 >> 4) ^ 0xE1) & 0x30 | (v570 >> 8) & 7 | (v570 >> 8) & 8 | ((v634 >> 4) ^ 0xE1) & 0xC0) + 167995) % 0x3BD) ^ 0x3C) << 8) ^ ((*(unsigned __int8 *)(v28 + (v635 - 957 * ((4487950 * (unint64_t)v635) >> 32))) ^ 0x3C) << 12) ^ ((*(unsigned __int8 *)(v28 + (v636 - 957 * ((4487950 * (unint64_t)v636) >> 32))) ^ 0x3C) << 16);
  unsigned int v638 = ((v634 >> 20) ^ 0x139) - ((2 * ((v634 >> 20) ^ 0x139)) & 0x18BA) + 805485661;
  unsigned int v639 = 431 * (((v561 >> 20) & 0xF | (16 * (v638 & 0xF))) ^ 0xDE) + 168952;
  int v640 = v637 ^ ((*(unsigned __int8 *)(v28 + (v639 - 957 * ((4487950 * (unint64_t)v639) >> 32))) ^ 0x3C) << 20);
  unsigned int v641 = 431 * ((v638 & 0xF0 | HIBYTE(v561) & 0xF) ^ 0x50) + 168952;
  unsigned int v642 = 431 * (((v638 >> 4) & 0xF0 | (v561 >> 28)) ^ 0xC9) + 168952;
  unsigned int v643 = v642 - 957 * ((4487950 * (unint64_t)v642) >> 32);
  unsigned int v644 = v640 ^ ((*(unsigned __int8 *)(v28 + (v641 - 957 * ((4487950 * (unint64_t)v641) >> 32))) ^ 0x3C) << 24) ^ ((unint64_t)(*(unsigned __int8 *)(v28 + v643) ^ 0x3Cu) << ((v643 | 0xAA) - (v643 & 0x55) + 114));
  unsigned int v645 = 431 * ((BYTE2(v644) ^ 0xF0) + (BYTE2(v644) | 0xF) + 1) + 404709;
  int v646 = ((*(unsigned __int8 *)(v28
                              + (431 * (HIBYTE(v644) & 0xF)
                                             + 404709
                                             - 957
                                             * ((4487950 * (unint64_t)(431 * (HIBYTE(v644) & 0xF) + 404709)) >> 32))) ^ 0x3C) << 8) ^ ((*(unsigned __int8 *)(v28 + (431 * (v644 >> 28) + 404709 - 957 * ((4487950 * (unint64_t)(431 * (v644 >> 28) + 404709)) >> 32))) ^ 0x3C) << 12) | *(unsigned __int8 *)(v28 + (v645 - 957 * ((4487950 * (unint64_t)v645) >> 32))) ^ 0x3C;
  unsigned int v647 = ((v644 >> 8) & 0xF ^ 0xD73B5E7F) + 2 * ((v644 >> 8) & 0xF);
  int v648 = (v646 << 8) ^ ((*(unsigned __int8 *)(v28
                                            + (431 * ((v644 >> 20) & 0xF)
                                                           + 404709
                                                           - 957
                                                           * ((4487950
                                                             * (unint64_t)(431 * ((v644 >> 20) & 0xF) + 404709)) >> 32))) ^ 0x3C) << 12);
  unsigned int v649 = 431
       * (((unsigned __int16)v644 >> 12) + (((v648 & 0x38D04B00 ^ 0x38D04BFF) + (v648 & 0x38D04B00)) & 0x412003AB));
  LOBYTE(v644) = v644 ^ 0x3C;
  LODWORD(STACK[0x6E0]) = LODWORD(STACK[0x688]) ^ (16
                                                 * (*(unsigned __int8 *)(v28
                                                                       + (431
                                                                                      * (v644 >> 4)
                                                                                      + 404709
                                                                                      - 957
                                                                                      * ((4487950
                                                                                        * (unint64_t)(431 * (v644 >> 4) + 404709)) >> 32))) ^ 0x3C)) ^ (((v648 | *(unsigned __int8 *)(v28 + ((((v647 + 300) & 0x135) + ((-683975981 - v647) & 0xBEA60015) + 1096417263) | 0x1AB) * (v647 + 683975980) % 0x3BD) ^ 0x3C) << 8) ^ ((*(unsigned __int8 *)(v28 + v649 % 0x3BD) ^ 0x3C) << 12) | *(unsigned __int8 *)(v28 + (431 * (v644 & 0xF) + 404709 - 957 * ((4487950 * (unint64_t)(431 * (v644 & 0xF) + 404709)) >> 32))) ^ 0x3C);
  LODWORD(STACK[0x6B0]) = LODWORD(STACK[0x690]) ^ v547;
  LOBYTE(v6memset((void *)(STACK[0x7D8] + 8), 91, 48) = *(unsigned char *)(v28 + (LODWORD(STACK[0x54C]) + 290925) % 0x3BDu) ^ 0x3C;
  LOBYTE(v547) = v648 - ((2 * v648) & 0xB6);
  unsigned int v650 = 431
       * ((((*(unsigned char *)(v28
                                       + (LODWORD(STACK[0x52C])
                                                      - 957
                                                      * ((4487950 * (unint64_t)LODWORD(STACK[0x52C])) >> 32))) >> 4) ^ 0x43)
                          - ((*(unsigned char *)(v28
                                       + (LODWORD(STACK[0x52C])
                                                      - 957
                                                      * ((4487950 * (unint64_t)LODWORD(STACK[0x52C])) >> 32))) >> 3) & 0x18)
                          - 4) ^ *(unsigned __int8 *)(v28 + LODWORD(STACK[0x530]) % 0x3BD))
       + 290925;
  int v651 = (STACK[0x5AC] & 0xF0 | ((unsigned __int16)LODWORD(STACK[0x5D0]) >> 12)) ^ 0x39;
  unsigned int v652 = 431 * ((v651 + 610472923 - 2 * (v651 & 0xFFFFFFDF ^ (LODWORD(STACK[0x5D0]) >> 12) & 4)) ^ 0x246313DB);
  unsigned int v653 = 431
       * (*(unsigned __int8 *)(v28 + (v652 + 290925) % 0x3BD) ^ (16
                                                               * (*(unsigned __int8 *)(v28
                                                                                     + (v650 - 957 * ((4487950 * (unint64_t)v650) >> 32))) ^ 0x3C)) ^ 0x3C);
  unsigned int v654 = v653 + 290925 - 957 * ((4487950 * (unint64_t)(v653 + 290925)) >> 32);
  unsigned int v655 = *(unsigned __int8 *)(v28 + (v653 - 957 * ((4487950 * (unint64_t)v653) >> 32)));
  int v656 = (((v655 >> 4) ^ 0x43) - ((v655 >> 3) & 0x18) - 4) ^ *(unsigned __int8 *)(v28 + v652 % 0x3BD);
  int v657 = *(unsigned __int8 *)(v28 + v654) ^ 0x3C;
  int v658 = ((LODWORD(STACK[0x5C0]) >> 12) & 0xF0 | HIWORD(LODWORD(STACK[0x5D0])) & 0xF) ^ 0x7B;
  unsigned int v659 = 431 * ((v658 + 830667431 - ((2 * v658) & 0x14E)) ^ 0x3182FAA7);
  unsigned int v660 = 431
       * (*(unsigned __int8 *)(v28 + (v659 + 290925) % 0x3BD) ^ (16
                                                               * (*(unsigned __int8 *)(v28
                                                                                     + (431 * v656 + 290925 - 957 * ((4487950 * (unint64_t)(431 * v656 + 290925)) >> 32))) ^ 0x3C)) ^ 0x3C);
  int v661 = *(unsigned __int8 *)(v28
                            + (v660 + 290925 - 957 * ((4487950 * (unint64_t)(v660 + 290925)) >> 32))) ^ 0x3C;
  unsigned int v662 = *(unsigned __int8 *)(v28 + (v660 - 957 * ((4487950 * (unint64_t)v660) >> 32)));
  int v663 = (((v662 >> 4) ^ 3) - ((v662 >> 3) & 0x18) + 60) ^ *(unsigned __int8 *)(v28 + v659 % 0x3BD);
  int v664 = (HIWORD(LODWORD(STACK[0x5C0])) & 0xF0 | (LODWORD(STACK[0x50C]) >> 20) & 0xF) ^ 0xDB;
  unsigned int v665 = 431 * ((v664 + 566202168 - 2 * (v664 & 0x3C ^ (LODWORD(STACK[0x50C]) >> 20) & 4)) ^ 0x21BF8F38);
  unsigned int v666 = 431
       * (*(unsigned __int8 *)(v28 + (v665 + 290925) % 0x3BD) ^ (16
                                                               * (*(unsigned __int8 *)(v28
                                                                                     + (431 * v663 + 290925 - 957 * ((4487950 * (unint64_t)(431 * v663 + 290925)) >> 32))) ^ 0x3C)) ^ 0x3C);
  int v667 = *(unsigned __int8 *)(v28
                            + (v666 + 290925 - 957 * ((4487950 * (unint64_t)(v666 + 290925)) >> 32))) ^ 0x3C;
  int v668 = *(unsigned __int8 *)(v28 + (v666 - 957 * ((4487950 * (unint64_t)v666) >> 32))) >> 4;
  unsigned int v669 = 431
       * (((v668 ^ 3) + 2 * ((v668 ^ 3 | 0x7C) ^ v668) + 62) ^ *(unsigned __int8 *)(v28 + v665 % 0x3BD))
       + 290925;
  int v670 = ((LODWORD(STACK[0x5C0]) >> 20) & 0xF0 | HIBYTE(LODWORD(STACK[0x50C])) & 0xF) ^ 0x79;
  unsigned int v671 = 431 * ((v670 - 1799959099 - ((2 * v670) & 0x18A)) ^ 0x94B6CDC5);
  unsigned int v672 = 431
       * (*(unsigned __int8 *)(v28 + (v671 + 290925) % 0x3BD) ^ (16
                                                               * (*(unsigned __int8 *)(v28
                                                                                     + (v669 - 957 * ((4487950 * (unint64_t)v669) >> 32))) ^ 0x3C)) ^ 0x3C);
  unsigned int v673 = v672 + 290925 - 957 * ((4487950 * (unint64_t)(v672 + 290925)) >> 32);
  int v674 = *(unsigned __int8 *)(v28 + (v672 - 957 * ((4487950 * (unint64_t)v672) >> 32))) >> 4;
  unsigned int v675 = 431
       * (((v674 ^ 3) + 2 * ((v674 ^ 3 | 0x7C) ^ v674) + 62) ^ *(unsigned __int8 *)(v28 + v671 % 0x3BD))
       + 290925;
  unsigned int v676 = 431 * ((HIBYTE(LODWORD(STACK[0x5C0])) & 0xF0 | (LODWORD(STACK[0x50C]) >> 28)) ^ 0xC3) + 290925;
  int v677 = *(unsigned __int8 *)(v28 + v673) ^ 0x3C;
  unsigned int v678 = 431
       * (*(unsigned __int8 *)(v28 + (v676 - 957 * ((4487950 * (unint64_t)v676) >> 32))) ^ (16 * (*(unsigned __int8 *)(v28 + (v675 - 957 * ((4487950 * (unint64_t)v675) >> 32))) ^ 0x3C)) ^ 0x3C)
       + 290925;
  int v679 = (v657 << 12) - ((v657 << 13) & 0x98000) + 1863632189;
  unsigned int v680 = v679 ^ LODWORD(STACK[0x5B0]);
  int v681 = (v661 << 16) - ((v661 << 17) & 0x1920000) + 1506398909;
  int v682 = (v667 << 20) - ((v667 << 21) & 0x17800000) - 1412689701;
  unsigned int v683 = v681 ^ v679;
  unsigned int v684 = v682 ^ v681;
  int v685 = (v677 << 24) - ((v677 << 25) & 0xC000000) + 103389786;
  unsigned int v686 = (((*(unsigned __int8 *)(v28 + (v678 - 957 * ((4487950 * (unint64_t)v678) >> 32))) ^ 0xC) << 28) | 0x299A5A) ^ v685;
  unsigned int v687 = v685 ^ v682;
  LOBYTE(v547) = v547 - 37;
  LOBYTE(v685) = LODWORD(STACK[0x5B4]) ^ v547;
  unsigned int v688 = 431 * (((v680 >> 8) & 0xF0 | ((unsigned __int16)LODWORD(STACK[0x5D0]) >> 12)) ^ 0xC9) + 168952;
  unsigned int v689 = v688 - 957 * ((4487950 * (unint64_t)v688) >> 32);
  unsigned int v690 = (((v689 ^ 0xEEEEEEEE) + (v689 & 0xEEEEEEEE) + (~v689 | 0xEEEEEEEE) + 1) & 0xF4 ^ 0xEB) & (HIWORD(LODWORD(STACK[0x5D0])) ^ 0xBB) ^ (v683 >> 12) & 0xF0;
  unsigned int v691 = ((2 * ((v690 ^ 0xD0) + 392)) & 0x79FEBFD4) + (((v690 ^ 0xD0) + 392) ^ 0xBCFF5FEA);
  unsigned int v692 = (((v691 + 22) & 0x1AF) + (((v690 ^ 0x12F) + 120) & 0x1AF)) * (v691 + 1124114454);
  unsigned int v693 = 431 * ((HIWORD(v684) & 0xF0 | (LODWORD(STACK[0x50C]) >> 20) & 0xF) ^ 0xB) + 168952;
  unsigned int v694 = 431 * (((v687 >> 20) & 0xF0 | HIBYTE(LODWORD(STACK[0x50C])) & 0xF) ^ 0xD9) + 168952;
  unsigned int v695 = 431 * ((HIBYTE(v686) & 0xF0 | (LODWORD(STACK[0x50C]) >> 28)) ^ 3) + 168952;
  int v696 = ((*(unsigned __int8 *)(v28 + (v695 - 957 * ((4487950 * (unint64_t)v695) >> 32))) ^ 0xC) << 28) ^ ((*(unsigned __int8 *)(v28 + (v694 - 957 * ((4487950 * (unint64_t)v694) >> 32))) ^ 0x3C) << 24);
  int v697 = *(unsigned __int8 *)(v28 + (431 * ((16 * (v547 & 0xF)) ^ 0xB0 | LODWORD(STACK[0x5C4])) + 168952) % 0x3BD);
  int v698 = v697 ^ (16
               * (*(unsigned __int8 *)(v28 + (431 * (v685 & 0xF0 ^ 0x30u | LODWORD(STACK[0x5BC])) + 168952) % 0x3BD) ^ 0x3C));
  unsigned int v699 = v698 ^ ((*(unsigned __int8 *)(v28 + (431 * (LODWORD(STACK[0x5B8]) ^ 0x8A26F7E3) + 168952) % 0x3BD) ^ 0x3C) << 8);
  int v700 = v699 ^ ((*(unsigned __int8 *)(v28 + v689) ^ 0x3C) << 12);
  unsigned int v701 = v700 ^ ((*(unsigned __int8 *)(v28 + v692 % 0x3BD) ^ 0x3C) << 16);
  unsigned int v702 = v701 ^ ((*(unsigned __int8 *)(v28 + (v693 - 957 * ((4487950 * (unint64_t)v693) >> 32))) ^ 0x3C) << 20);
  unsigned int v703 = v696 ^ v702;
  int v704 = *(unsigned __int8 *)(v28
                            + (431 * (HIBYTE(v703) & 0xF)
                                           + 404709
                                           - 957
                                           * ((4487950 * (unint64_t)(431 * (HIBYTE(v703) & 0xF) + 404709)) >> 32))) ^ (16 * (*(unsigned __int8 *)(v28 + (431 * (v703 >> 28) + 404709 - 957 * ((4487950 * (unint64_t)(431 * (v703 >> 28) + 404709)) >> 32))) ^ 0x3C));
  unsigned int v705 = (v704 & 0x1AF ^ 0x2C | v704 & 0x1AF ^ 0x183) * ((HIWORD(v701) & 0xF) + 939);
  int v706 = ((v704 << 16) | ((*(unsigned __int8 *)(v28
                                              + (v705 - 957 * ((4487950 * (unint64_t)v705) >> 32))) ^ 0x3C) << 8)) ^ ((*(unsigned __int8 *)(v28 + (431 * ((v702 >> 20) & 0xF) + 404709 - 957 * ((4487950 * (unint64_t)(431 * ((v702 >> 20) & 0xF) + 404709)) >> 32))) ^ 0x3C) << 12) | *(unsigned __int8 *)(v28 + (431 * ((v699 >> 8) & 0xF) + 404709 - 957 * ((4487950 * (unint64_t)(431 * ((v699 >> 8) & 0xF) + 404709)) >> 32))) ^ 0x3C;
  LODWORD(STACK[0x698]) = LODWORD(STACK[0x684]) ^ LODWORD(STACK[0x5DC]);
  unsigned int v707 = 431 * ((v699 & 0x3AB ^ 0x383 | v699 & 0x3AB ^ 0x28) + ((v698 >> 4) ^ 3));
  LODWORD(STACK[0x6AC]) = LODWORD(STACK[0x68C]) ^ (16
                                                 * (*(unsigned __int8 *)(v28
                                                                       + (v707
                                                                                      - 957
                                                                                      * ((4487950
                                                                                        * (unint64_t)v707) >> 32))) ^ 0x3C)) ^ ((v706 << 8) ^ ((*(unsigned __int8 *)(v28 + (431 * ((unsigned __int16)v700 >> 12) + 404709 - 957 * ((4487950 * (unint64_t)(431 * ((unsigned __int16)v700 >> 12) + 404709)) >> 32))) ^ 0x3C) << 12) | *(unsigned __int8 *)(v28 + (431 * (v697 & 0xF ^ 0xC) + 404709 - 957 * ((4487950 * (unint64_t)(431 * (v697 & 0xF ^ 0xCu) + 404709)) >> 32))) ^ 0x3C);
  unsigned int v708 = 431 * ((LODWORD(STACK[0x504]) + 183194674) >> 28) + 279719;
  unsigned int v709 = 431 * (HIBYTE(LODWORD(STACK[0x508])) & 0xF ^ 0xA) + 279719;
  int v710 = ((*(unsigned __int8 *)(v28 + (v709 - 957 * ((4487950 * (unint64_t)v709) >> 32))) ^ 0x3C) << 8) ^ ((*(unsigned __int8 *)(v28 + (v708 - 957 * ((4487950 * (unint64_t)v708) >> 32))) ^ 0x3C) << 12);
  unsigned int v711 = 431 * (HIWORD(LODWORD(STACK[0x508])) & 0xF ^ 0xB) + 279719;
  unsigned int v712 = 431 * ((LODWORD(STACK[0x508]) >> 20) & 0xF ^ 0xE) + 279719;
  int v713 = v710 | *(unsigned __int8 *)(v28 + (v711 - 957 * ((4487950 * (unint64_t)v711) >> 32))) ^ 0x3C;
  unsigned int v714 = 431 * (((unsigned __int16)LODWORD(STACK[0x508]) >> 12) ^ 5) + 279719;
  int v715 = (v713 << 8) ^ ((*(unsigned __int8 *)(v28
                                            + (v712 - 957 * ((4487950 * (unint64_t)v712) >> 32))) ^ 0x3C) << 12);
  unsigned int v716 = 431 * ((LODWORD(STACK[0x508]) >> 4) ^ 3) + 279719;
  unsigned int v717 = v716 - 957 * ((4487950 * (unint64_t)v716) >> 32);
  int v718 = v715 | *(unsigned __int8 *)(v28 + (431 * ((LODWORD(STACK[0x508]) >> 8) & 0xF ^ 4) + 278762) % 0x3BD) ^ 0x3C;
  unsigned int v719 = (v718 << 8) - 2051260797 - ((v718 << 9) & 0xB787C00);
  unsigned int v720 = 431 * ((LODWORD(STACK[0x504]) + 66) & 0xF ^ 2) + 279719;
  int v721 = *(unsigned __int8 *)(v28 + (v720 - 957 * ((4487950 * (unint64_t)v720) >> 32))) ^ 0x3C;
  int v722 = v721 + 1726121743 - 2 * (v721 & 0xF);
  unsigned int v723 = v719 ^ ((*(unsigned __int8 *)(v28 + (v714 - 957 * ((4487950 * (unint64_t)v714) >> 32))) ^ 0x3C) << 12);
  unsigned int v724 = LODWORD(STACK[0x56C])
       - LODWORD(STACK[0x5D8])
       - ((2 * (LODWORD(STACK[0x56C]) - LODWORD(STACK[0x5D8])) - 1837032460) & 0x9A0A310A)
       + 373663359;
  unsigned int v725 = (v723 ^ 0x85BC3E83 | v722 ^ 0x66E2870F) ^ (16 * (*(unsigned __int8 *)(v28 + v717) ^ 0x3C));
  unsigned int v726 = 431 * (HIBYTE(v724) & 0xF ^ 0xD) + 279719;
  unsigned int v727 = 431 * (HIWORD(v724) & 0xF ^ 5) + 279719;
  int v728 = ((*(unsigned __int8 *)(v28 + (v726 - 957 * ((4487950 * (unint64_t)v726) >> 32))) ^ 0x3C) << 8) ^ ((*(unsigned __int8 *)(v28 + (431 * ((v724 >> 28) ^ 4) + 279719 - 957 * ((4487950 * (unint64_t)(431 * ((v724 >> 28) ^ 4) + 279719)) >> 32))) ^ 0x3C) << 12) | *(unsigned __int8 *)(v28 + (v727 - 957 * ((4487950 * (unint64_t)v727) >> 32))) ^ 0x3C;
  unsigned int v729 = 431
       * (((unsigned __int16)(LOWORD(STACK[0x56C])
                            - LOWORD(STACK[0x5D8])
                            - ((2 * (LOWORD(STACK[0x56C]) - LOWORD(STACK[0x5D8])) + 7156) & 0x310A)
                            - 22913) >> 12) ^ 1)
       + 279719;
  unsigned int v730 = 431 * ((v724 >> 8) & 0xF ^ 8) + 279719;
  int v731 = (v728 << 8) ^ ((*(unsigned __int8 *)(v28
                                            + (431 * ((v724 >> 20) & 0xF)
                                                           + 279719
                                                           - 957
                                                           * ((4487950
                                                             * (unint64_t)(431 * ((v724 >> 20) & 0xF) + 279719)) >> 32))) ^ 0x3C) << 12) | *(unsigned __int8 *)(v28 + (v730 - 957 * ((4487950 * (unint64_t)v730) >> 32))) ^ 0x3C;
  unsigned int v732 = 431 * ((v724 >> 4) ^ 8) + 279719;
  int v733 = (v731 << 8) ^ ((*(unsigned __int8 *)(v28
                                            + (v729 - 957 * ((4487950 * (unint64_t)v729) >> 32))) ^ 0x3C) << 12);
  int v734 = *(unsigned __int8 *)(v28
                            + (431 * (v724 & 0xF ^ 5)
                                           + 279719
                                           - 957
                                           * ((4487950 * (unint64_t)(431 * (v724 & 0xF ^ 5) + 279719)) >> 32))) ^ 0x3C;
  unsigned int v735 = v734 + 1932056039 - ((2 * v734) & 0xFFFFFFCF);
  unsigned int v736 = (v735 ^ 0x7328D5E7 | v733) ^ (16
                                     * (*(unsigned __int8 *)(v28
                                                           + (v732
                                                                          - 957
                                                                          * ((4487950 * (unint64_t)v732) >> 32))) ^ 0x3C));
  unsigned int v737 = ((v722 & 9) + (v722 & 0xF ^ 0xFFFFFFFB) + (v722 & 9 | 0x282F9C86) + 1) ^ 0x282F9C8D;
  int v738 = ((2 * ((16 * (v735 & 0xF)) ^ 0x70 | v737)) & 0x79FFF6F6) + (((16 * (v735 & 0xF)) ^ 0x70 | v737) ^ 0x7CFFFB7B);
  int v739 = STACK[0x708];
  unsigned int v740 = 431
       * (*(unsigned __int8 *)(v28
                             + ((~(2097150167 - v738) & 0xC4ACC5D1) - ((v738 + 296) & 0x1D1) + 431)
                             * (v738 - 2097150168)
                             % 0x3BD) ^ LODWORD(STACK[0x708]) ^ 0x3C);
  unsigned int v741 = v740 + 290925;
  int v742 = *(unsigned __int8 *)(v28 + v740 % 0x3BD) >> 4;
  unsigned int v743 = 431
       * (((v742 ^ 3) + 2 * ((v742 ^ 3 | 0x7C) ^ v742) + 62) ^ *(unsigned __int8 *)(v28 + (431 * v738 - 1928881173) % 0x3BDu))
       + 290925;
  unsigned int v744 = 431
       * (((v736 & 0xF0 | (v725 >> 4))
         - 985935219
         - ((2 * (v736 & 0xF0 | (v725 >> 4))) & 0x11A)) ^ 0xC53BD28D);
  unsigned int v745 = 431
       * (*(unsigned __int8 *)(v28 + (v744 + 290925) % 0x3BD) ^ (16
                                                               * (*(unsigned __int8 *)(v28
                                                                                     + (v743 - 957 * ((4487950 * (unint64_t)v743) >> 32))) ^ 0x3C)) ^ 0x3C);
  unsigned int v746 = v745 + 290925 - 957 * ((4487950 * (unint64_t)(v745 + 290925)) >> 32);
  unsigned int v747 = *(unsigned __int8 *)(v28 + (v745 - 957 * ((4487950 * (unint64_t)v745) >> 32)));
  int v748 = (((v747 >> 4) ^ 3) - ((v747 >> 3) & 0x18) + 60) ^ *(unsigned __int8 *)(v28 + v744 % 0x3BD);
  unsigned int v749 = 431 * v748 + 290925 - 957 * ((4487950 * (unint64_t)(431 * v748 + 290925)) >> 32);
  unsigned int v750 = 431
       * ((((v736 >> 4) & 0xF0 | (v725 >> 8) & 0xF)
         + 1212722832
         - 2 * (((v736 >> 4) & 0x90 | (v725 >> 8) & 1) ^ (v725 >> 8) & 1)) ^ 0x4848AE90);
  unsigned int v751 = (v750 + 290925) % 0x3BD;
  unsigned int v752 = v750 % 0x3BD;
  int v753 = *(unsigned __int8 *)(v28 + v741 % 0x3BD) ^ 0x3C;
  unsigned int v754 = 431 * (*(unsigned __int8 *)(v28 + v751) ^ (16 * (*(unsigned __int8 *)(v28 + v749) ^ 0x3C)) ^ 0x3C);
  unsigned int v755 = 431
       * ((((*(unsigned char *)(v28 + (v754 - 957 * ((4487950 * (unint64_t)v754) >> 32))) >> 4) ^ 3)
                          - ((*(unsigned char *)(v28 + (v754 - 957 * ((4487950 * (unint64_t)v754) >> 32))) >> 3) & 0x18)
                          + 60) ^ *(unsigned __int8 *)(v28 + v752))
       + 290925;
  int v756 = *(unsigned __int8 *)(v28 + (v755 - 957 * ((4487950 * (unint64_t)v755) >> 32)));
  unsigned int v757 = v736 >> 8 >> ((v756 & 4 ^ 4) + (v756 & 4));
  unsigned int v758 = v757 - ((2 * v757) & 0x1554616);
  int v759 = ((16 * (_BYTE)v758 - 80) & 0xF0 | ((unsigned __int16)v723 >> 12)) ^ 0xB3;
  unsigned int v760 = 431 * ((v759 + 1521090963 - 2 * (v759 & 0x97 ^ (v723 >> 12) & 4)) ^ 0x5AAA0193);
  unsigned int v761 = 431 * (*(unsigned __int8 *)(v28 + (v760 + 290925) % 0x3BD) ^ (16 * (v756 ^ 0x3C)) ^ 0x3C);
  unsigned int v762 = v761 + 290925 - 957 * ((4487950 * (unint64_t)(v761 + 290925)) >> 32);
  int v763 = *(unsigned __int8 *)(v28 + (v761 - 957 * ((4487950 * (unint64_t)v761) >> 32))) >> 4;
  unsigned int v764 = ((*(unsigned __int8 *)(v28 + v762) ^ 0x3C) << 12) ^ ((*(unsigned __int8 *)(v28
                                                                                  + (v754
                                                                                                 + 290925
                                                                                                 - 957
                                                                                                 * ((4487950 * (unint64_t)(v754 + 290925)) >> 32))) ^ 0x3C) << 8);
  unsigned int v765 = 431
       * (((v763 ^ 3) + 2 * ((v763 ^ 3 | 0x7C) ^ v763) + 62) ^ *(unsigned __int8 *)(v28 + v760 % 0x3BD))
       + 290925;
  v758 += 1336582923;
  int v766 = (v758 & 0xF0 | HIWORD(v723) & 0xF) ^ 0xC;
  unsigned int v767 = 431 * ((v766 + 1061535158 - ((2 * v766) & 0x16C)) ^ 0x3F45BDB6);
  unsigned int v768 = 431
       * (*(unsigned __int8 *)(v28 + (v767 + 290925) % 0x3BD) ^ (16
                                                               * (*(unsigned __int8 *)(v28
                                                                                     + (v765 - 957 * ((4487950 * (unint64_t)v765) >> 32))) ^ 0x3C)) ^ 0x3C);
  unsigned int v769 = v768 - 957 * ((4487950 * (unint64_t)v768) >> 32);
  unsigned int v770 = (((*(unsigned __int8 *)(v28 + v769) ^ 0x3C)
         + 1363421848
         - ((2 * (*(unsigned __int8 *)(v28 + v769) ^ 0x3C)) & 0x130)) ^ 0x51442A98u) >> ((*(unsigned char *)(v28 + v769) & 4)
                                                                                       + (*(unsigned char *)(v28 + v769) & 4 ^ 4));
  int v771 = (v770 - ((2 * v770) & 0x78) + 60) ^ *(unsigned __int8 *)(v28 + v767 % 0x3BD);
  int v772 = ((v758 >> 4) & 0xF0 | (v719 >> 20) & 0xF) ^ 0x3B;
  unsigned int v773 = 431 * ((v772 + 793314010 - ((2 * v772) & 0x1B4)) ^ 0x2F4902DA);
  unsigned int v774 = 431
       * (*(unsigned __int8 *)(v28 + (v773 + 290925) % 0x3BD) ^ (16
                                                               * (*(unsigned __int8 *)(v28
                                                                                     + (431 * v771 + 290925 - 957 * ((4487950 * (unint64_t)(431 * v771 + 290925)) >> 32))) ^ 0x3C)) ^ 0x3C);
  unsigned int v775 = ((*(unsigned __int8 *)(v28
                              + (v774
                                             + 290925
                                             - 957 * ((4487950 * (unint64_t)(v774 + 290925)) >> 32))) ^ 0x3C) << 20) ^ ((*(unsigned __int8 *)(v28 + (v768 + 290925 - 957 * ((4487950 * (unint64_t)(v768 + 290925)) >> 32))) ^ 0x3C) << 16);
  unsigned int v776 = *(unsigned __int8 *)(v28 + (v774 - 957 * ((4487950 * (unint64_t)v774) >> 32)));
  unsigned int v777 = 431
       * ((((v776 >> 4) ^ 3) - ((v776 >> 3) & 0x18) + 60) ^ *(unsigned __int8 *)(v28 + v773 % 0x3BD))
       + 290925;
  int v778 = ((v758 >> 8) & 0xF0 | HIBYTE(v719) & 0xF) ^ 0xA5;
  unsigned int v779 = 431 * ((v778 - 547613377 - 2 * (v778 & 0x3F)) ^ 0xDF5C153F);
  unsigned int v780 = 431
       * (*(unsigned __int8 *)(v28 + (v779 + 290925) % 0x3BD) ^ (16
                                                               * (*(unsigned __int8 *)(v28
                                                                                     + (v777 - 957 * ((4487950 * (unint64_t)v777) >> 32))) ^ 0x3C)) ^ 0x3C);
  unsigned int v781 = v780 + 290925 - 957 * ((4487950 * (unint64_t)(v780 + 290925)) >> 32);
  unsigned int v782 = *(unsigned __int8 *)(v28 + (v780 - 957 * ((4487950 * (unint64_t)v780) >> 32)));
  unsigned int v783 = 431
       * ((((v782 >> 4) ^ 3) + (~(v782 >> 3) | 0xE7) + 61) ^ *(unsigned __int8 *)(v28 + v779 % 0x3BD))
       + 290925;
  unsigned int v784 = v719 + 0x80000000;
  unsigned int v785 = 431 * (((v758 >> 12) & 0xF0 | ((v719 + 0x80000000) >> 28)) ^ 0xA0) + 290925;
  unsigned int v786 = 431
       * (*(unsigned __int8 *)(v28 + (v785 - 957 * ((4487950 * (unint64_t)v785) >> 32))) ^ (16 * (*(unsigned __int8 *)(v28 + (v783 - 957 * ((4487950 * (unint64_t)v783) >> 32))) ^ 0x3C)) ^ 0x3C)
       + 290925;
  int v787 = v753 - ((2 * v753) & 0x12) + 1028402697;
  int v788 = v787 ^ (16 * (*(unsigned __int8 *)(v28 + v746) ^ 0x3C));
  unsigned int v789 = 431 * ((16 * (v787 & 0xF)) ^ 0x90 | v737) + 168952;
  unsigned int v790 = 431 * (v788 & 0xF0 | (v725 >> 4)) + 168952;
  unsigned int v791 = v764 ^ v788;
  unsigned int v792 = 431 * (((v791 >> 4) & 0xF0 | (v725 >> 8) & 0xF) ^ 0xE0) + 168952;
  unsigned int v793 = 431 * (((v764 >> 8) & 0xF0 | ((unsigned __int16)v723 >> 12)) ^ 3) + 167995;
  unsigned int v794 = v791 ^ 0x84381BC0 ^ v775;
  unsigned int v795 = v794 ^ ((*(unsigned __int8 *)(v28 + v781) ^ 0x3C) << 24);
  unsigned int v796 = 431 * (((v794 >> 12) & 0xF0 | HIWORD(v723) & 0xF) ^ 0x4C) + 168952;
  int v797 = (v795 >> 20) & 0xF0 | HIBYTE(v719) & 0xF;
  unsigned int v798 = 431 * ((HIWORD(v775) & 0xF0 | (v719 >> 20) & 0xF) ^ 0xB) + 168952;
  unsigned int v799 = 431
       * ((((v795 ^ ((*(unsigned __int8 *)(v28 + (v786 - 957 * ((4487950 * (unint64_t)v786) >> 32))) ^ 0xC) << 28)) >> 24) & 0xF0 | (v784 >> 28)) ^ 0xB0)
       + 168952;
  int v800 = *(unsigned __int8 *)(v28 + v789 % 0x3BD);
  int v801 = v800 ^ (16
               * (*(unsigned __int8 *)(v28 + (v790 - 957 * ((4487950 * (unint64_t)v790) >> 32))) ^ 0x3C));
  unsigned int v802 = v801 ^ ((*(unsigned __int8 *)(v28 + (v792 - 957 * ((4487950 * (unint64_t)v792) >> 32))) ^ 0x3C) << 8);
  int v803 = v802 ^ ((*(unsigned __int8 *)(v28 + v793 % 0x3BD) ^ 0x3C) << 12);
  unsigned int v804 = v803 ^ ((*(unsigned __int8 *)(v28 + (v796 - 957 * ((4487950 * (unint64_t)v796) >> 32))) ^ 0x3C) << 16);
  unsigned int v805 = v804 ^ ((*(unsigned __int8 *)(v28 + (v798 - 957 * ((4487950 * (unint64_t)v798) >> 32))) ^ 0x3C) << 20);
  unsigned int v806 = v805 ^ ((*(unsigned __int8 *)(v28
                                     + (431 * (v797 ^ 0x95)
                                                    + 168952
                                                    - 957
                                                    * ((4487950 * (unint64_t)(431 * (v797 ^ 0x95u) + 168952)) >> 32))) ^ 0x3C) << 24);
  unsigned int v807 = 431
       * ((v806 ^ ((*(unsigned __int8 *)(v28 + (v799 - 957 * ((4487950 * (unint64_t)v799) >> 32))) ^ 0xC) << 28)) >> 28)
       + 404709;
  int v808 = ((((*(unsigned __int8 *)(v28
                                + (431 * (HIBYTE(v806) & 0xF)
                                               + 404709
                                               - 957
                                               * ((4487950 * (unint64_t)(431 * (HIBYTE(v806) & 0xF) + 404709)) >> 32))) ^ 0x3C) << 8) ^ ((*(unsigned __int8 *)(v28 + (v807 - 957 * ((4487950 * (unint64_t)v807) >> 32))) ^ 0x3C) << 12) | *(unsigned __int8 *)(v28 + (431 * (HIWORD(v804) & 0xF) + 404709 - 957 * ((4487950 * (unint64_t)(431 * (HIWORD(v804) & 0xF) + 404709)) >> 32))) ^ 0x3C) << 8) ^ ((*(unsigned __int8 *)(v28 + (431 * ((v805 >> 20) & 0xF) + 404709 - 957 * ((4487950 * (unint64_t)(431 * ((v805 >> 20) & 0xF) + 404709)) >> 32))) ^ 0x3C) << 12);
  unsigned int v809 = 431 * ((v801 >> 4) ^ 3) + 404709;
  LODWORD(STACK[0x6F0]) ^= *(unsigned __int8 *)(v28
                                              + (431 * (v800 & 0xF ^ 0xC)
                                                             + 404709
                                                             - 957
                                                             * ((4487950
                                                               * (unint64_t)(431 * (v800 & 0xF ^ 0xCu) + 404709)) >> 32))) ^ (((*(unsigned __int8 *)(v28 + (431 * ((unsigned __int16)v803 >> 12) + 404709 - 957 * ((4487950 * (unint64_t)(431 * ((unsigned __int16)v803 >> 12) + 404709)) >> 32))) ^ 0x3C) << 12) | (16 * (*(unsigned __int8 *)(v28 + (v809 - 957 * ((4487950 * (unint64_t)v809) >> 32))) ^ 0x3C))) ^ ((v808 | *(unsigned __int8 *)(v28 + (431 * ((v802 >> 8) & 0xF) + 404709 - 957 * ((4487950 * (unint64_t)(431 * ((v802 >> 8) & 0xF) + 404709)) >> 32))) ^ 0x3C) << 8);
  int v810 = LODWORD(STACK[0x600]) - ((2 * LODWORD(STACK[0x600]) + 695193578) & 0x53AFD940);
  unsigned int v811 = 431 * ((LODWORD(STACK[0x67C]) >> 4) ^ 0xE) + 279719;
  int v812 = *(unsigned __int8 *)(v28 + (v811 - 957 * ((4487950 * (unint64_t)v811) >> 32))) ^ 0x3C;
  int v813 = 16 * v812 - ((32 * v812) & 0x1D60);
  int v814 = ((-240577402 - LODWORD(STACK[0x660])) & 0xF ^ 0x44FFF9CD) + ((2 * (-240577402 - LODWORD(STACK[0x660]))) & 0x1A);
  unsigned int v815 = (((v814 + 188) & 0x8F ^ (323 - v814) & 0x12F) & (((83883843 - v814) & 0x2550A96F) + ((v814 + 188) & 0x8F)))
       * (v814 - 1157625668);
  unsigned int v816 = 431 * ((LODWORD(STACK[0x650]) >> 4) ^ 9) + 279719;
  int v817 = *(unsigned __int8 *)(v28 + (v815 - 957 * ((4487950 * (unint64_t)v815) >> 32))) ^ 0x3C;
  LOBYTE(v806) = v817 - 24;
  unsigned int v818 = (LODWORD(STACK[0x644]) ^ 0xA2E56E06 | (v817 - 868572440 - ((2 * v817) & 0x1D0)) ^ 0xCC3AA2E8) ^ (16 * (*(unsigned __int8 *)(v28 + (v816 - 957 * ((4487950 * (unint64_t)v816) >> 32))) ^ 0x3C));
  int v819 = -(*(unsigned __int8 *)(v28 + (431 * (STACK[0x67C] & 0xF ^ 3u) + 278762) % 0x3BD) ^ 0x3C) - 1264607489;
  int v820 = v819 & 0xF;
  int v821 = (v820 | (16 * (v806 & 0xF))) ^ 0x8F;
  unsigned int v822 = 431 * ((v821 - 1694828265 - ((2 * v821) & 0x2E)) ^ 0x9AFAF917);
  unsigned int v823 = 431 * (*(unsigned __int8 *)(v28 + (v822 + 290925) % 0x3BD) ^ v739 ^ 0x3C);
  unsigned int v824 = (v823 + 290925) % 0x3BD;
  int v825 = v813 - 613048654;
  unsigned int v826 = ((((v813 - 613048654) ^ v819) >> 4) ^ 0x74D1A558) & 0x4A485950 ^ 0xCC04BF0 ^ (((2 * ((((v813 - 613048654) ^ v819) >> 4) ^ 0x74D1A558)) & 0x22A6) - (((((v813 - 613048654) ^ v819) >> 4) ^ 0x74D1A558) & 0x4A48595F) + 1321749164);
  unsigned int v827 = 431
       * ((((*(unsigned char *)(v28 + v823 % 0x3BD) >> 4) ^ 3)
                          - ((*(unsigned char *)(v28 + v823 % 0x3BD) >> 3) & 0x18)
                          + 60) ^ *(unsigned __int8 *)(v28 + v822 % 0x3BD))
       + 290925;
  int v828 = (v826 - ((2 * v826) & 0x11DCD14C) + 216950950) ^ 0x4EE669F6;
  unsigned int v829 = 431 * (((v818 & 0xF0 | v828) + 165825552 - 2 * ((v818 & 0x10 | v828 & 0x9E24C1A) ^ v828 & 0xA)) ^ 0x9E24C10);
  int v830 = *(unsigned __int8 *)(v28 + (v829 + 290925) % 0x3BD) ^ (16
                                                              * (*(unsigned __int8 *)(v28
                                                                                    + (v827 - 957 * ((4487950 * (unint64_t)v827) >> 32))) ^ 0x3C)) ^ 0x3C;
  unsigned int v831 = 431 * v830 + 290925 - 957 * ((4487950 * (unint64_t)(431 * v830 + 290925)) >> 32);
  unsigned int v832 = ((v831 & 0x1AF ^ 0x1AF) + (v831 & 0x1AF)) * v830;
  unsigned int v833 = ((LODWORD(STACK[0x66C]) ^ v825) >> 8) & 0xF ^ 0x530C9;
  unsigned int v834 = *(unsigned __int8 *)(v28 + (v832 - 957 * ((4487950 * (unint64_t)v832) >> 32)));
  int v835 = (((v834 >> 4) ^ 3) - ((v834 >> 3) & 0x18) + 60) ^ *(unsigned __int8 *)(v28 + v829 % 0x3BD);
  int v836 = *(unsigned __int8 *)(v28 + v824) ^ 0x3C;
  unsigned int v837 = 431 * v835 + 290925 - 957 * ((4487950 * (unint64_t)(431 * v835 + 290925)) >> 32);
  unsigned int v838 = (1626413225 - (v833 | 0x60F118A9) + (v833 | 0x9F0EE756)) ^ 0x9F0BD796;
  unsigned int v839 = 431
       * ((((v818 >> 4) & 0xF0 | v838) - 706684872 - 2 * (((v818 >> 4) & 0x30 | v838 & 0x55E0D83B) ^ v838 & 3)) ^ 0xD5E0D838);
  unsigned int v840 = 431
       * (*(unsigned __int8 *)(v28 + (v839 + 290925) % 0x3BD) ^ (16 * (*(unsigned __int8 *)(v28 + v837) ^ 0x3C)) ^ 0x3C);
  unsigned int v841 = v840 - 957 * ((4487950 * (unint64_t)v840) >> 32);
  unsigned int v842 = 431
       * ((((*(unsigned char *)(v28 + v841) >> 4) ^ 3) + (~(*(unsigned char *)(v28 + v841) >> 3) | 0xE7) + 61) ^ *(unsigned __int8 *)(v28 + v839 % 0x3BD))
       + 290925;
  unsigned int v843 = 431
       * (*(unsigned __int8 *)(v28 + (LODWORD(STACK[0x63C]) + 290925) % 0x3BDu) ^ (16
                                                                                 * (*(unsigned __int8 *)(v28 + (v842 - 957 * ((4487950 * (unint64_t)v842) >> 32))) ^ 0x3C)) ^ 0x3C);
  unsigned int v844 = ((*(unsigned __int8 *)(v28
                              + (v843
                                             + 290925
                                             - 957 * ((4487950 * (unint64_t)(v843 + 290925)) >> 32))) ^ 0x3C) << 12) ^ ((*(unsigned __int8 *)(v28 + (v840 + 290925 - 957 * ((4487950 * (unint64_t)(v840 + 290925)) >> 32))) ^ 0x3C) << 8);
  unsigned int v845 = *(unsigned __int8 *)(v28 + (v843 - 957 * ((4487950 * (unint64_t)v843) >> 32)));
  unsigned int v846 = 431
       * ((((v845 >> 4) ^ 3) - ((v845 >> 3) & 0x18) + 60) ^ *(unsigned __int8 *)(v28
                                                                                                + LODWORD(STACK[0x640])))
       + 290925;
  unsigned int v847 = 431
       * (*(unsigned __int8 *)(v28 + LODWORD(STACK[0x634])) ^ (16
                                                             * (*(unsigned __int8 *)(v28
                                                                                   + (v846
                                                                                                  - 957 * ((4487950 * (unint64_t)v846) >> 32))) ^ 0x3C)) ^ 0x3C);
  unsigned int v848 = v847 + 290925 - 957 * ((4487950 * (unint64_t)(v847 + 290925)) >> 32);
  unsigned int v849 = *(unsigned __int8 *)(v28 + (v847 - 957 * ((4487950 * (unint64_t)v847) >> 32)));
  int v850 = (((v849 >> 4) ^ 3) - ((v849 >> 3) & 0x18) + 60) ^ *(unsigned __int8 *)(v28
                                                                                               + LODWORD(STACK[0x638])
                                                                                               % 0x3BD);
  int v851 = (HIWORD(LODWORD(STACK[0x664])) & 0xF0 | (LODWORD(STACK[0x66C]) >> 20) & 0xF) ^ 0xE0;
  unsigned int v852 = 431 * ((v851 + 1308836734 + (~(2 * v851) | 0xFFFFFF03) + 1) ^ 0x4E03437E);
  unsigned int v853 = 431
       * (*(unsigned __int8 *)(v28 + (v852 + 290925) % 0x3BD) ^ (16
                                                               * (*(unsigned __int8 *)(v28
                                                                                     + (431 * v850 + 290925 - 957 * ((4487950 * (unint64_t)(431 * v850 + 290925)) >> 32))) ^ 0x3C)) ^ 0x3C);
  unsigned int v854 = v853 + 290925 - 957 * ((4487950 * (unint64_t)(v853 + 290925)) >> 32);
  int v855 = *(unsigned __int8 *)(v28 + (v853 - 957 * ((4487950 * (unint64_t)v853) >> 32))) >> 4;
  int v856 = ((v855 ^ 3) + 2 * ((v855 ^ 3 | 0x7C) ^ v855) + 62) ^ *(unsigned __int8 *)(v28 + v852 % 0x3BD);
  int v857 = ((LODWORD(STACK[0x664]) >> 20) & 0xF0 | HIBYTE(LODWORD(STACK[0x66C])) & 0xF) ^ 0x2C;
  unsigned int v858 = 431 * ((v857 - 763857906 - ((2 * v857) & 0x1C)) ^ 0xD278740E);
  unsigned int v859 = v858 % 0x3BD;
  unsigned int v860 = 431
       * (*(unsigned __int8 *)(v28 + (v858 + 290925) % 0x3BD) ^ (16
                                                               * (*(unsigned __int8 *)(v28
                                                                                     + (431 * v856 + 290925 - 957 * ((4487950 * (unint64_t)(431 * v856 + 290925)) >> 32))) ^ 0x3C)) ^ 0x3C);
  unsigned int v861 = v860 + 290925 - 957 * ((4487950 * (unint64_t)(v860 + 290925)) >> 32);
  unsigned int v862 = *(unsigned __int8 *)(v28 + (v860 - 957 * ((4487950 * (unint64_t)v860) >> 32)));
  unsigned int v863 = 431
       * ((((v862 >> 4) ^ 3) + (~(v862 >> 3) | 0xE7) + 61) ^ *(unsigned __int8 *)(v28 + v859))
       + 290925;
  unsigned int v864 = 431 * ((HIBYTE(LODWORD(STACK[0x664])) & 0xF0 | (LODWORD(STACK[0x66C]) >> 28)) ^ 0xAC) + 290925;
  unsigned int v865 = 431
       * (*(unsigned __int8 *)(v28 + (v864 - 957 * ((4487950 * (unint64_t)v864) >> 32))) ^ (16 * (*(unsigned __int8 *)(v28 + (v863 - 957 * ((4487950 * (unint64_t)v863) >> 32))) ^ 0x3C)) ^ 0x3C)
       + 290925;
  unsigned int v866 = v836 - ((2 * v836) & 0xCCCCCCCC) - 2132077210;
  int v867 = v866 ^ (16 * (*(unsigned __int8 *)(v28 + v831) ^ 0x3C));
  unsigned int v868 = 431 * ((v820 & 0xFFFFFF0F | (16 * (v866 & 0xF))) ^ 0x6F) + 168952;
  unsigned int v869 = 431 * (v867 & 0xF0 ^ 0x60 | v828) + 168952;
  unsigned int v870 = v867 ^ 0xFD5A0F7B ^ v844;
  unsigned int v871 = v870 ^ ((*(unsigned __int8 *)(v28 + v848) ^ 0x3C) << 16);
  unsigned int v872 = 431 * ((v870 >> 4) & 0xF0 ^ 0xA0 | v838) + 168952;
  unsigned int v873 = 431 * (((v844 >> 8) & 0xF0 | ((unsigned __int16)LODWORD(STACK[0x668]) >> 12)) ^ 0xC) + 168952;
  unsigned int v874 = v871 ^ ((*(unsigned __int8 *)(v28 + v854) ^ 0x3C) << 20);
  unsigned int v875 = 431 * (((v871 >> 12) & 0xF0 | HIWORD(LODWORD(STACK[0x668])) & 0xF) ^ 0x11) + 168952;
  unsigned int v876 = v874 ^ ((*(unsigned __int8 *)(v28 + v861) ^ 0x3C) << 24);
  unsigned int v877 = 431 * ((HIWORD(v874) & 0xF0 | (LODWORD(STACK[0x66C]) >> 20) & 0xF) ^ 0xB0) + 168952;
  unsigned int v878 = v876 ^ ((*(unsigned __int8 *)(v28 + (v865 - 957 * ((4487950 * (unint64_t)v865) >> 32))) ^ 0xC) << 28);
  unsigned int v879 = 431 * (((v876 >> 20) & 0xF0 | HIBYTE(LODWORD(STACK[0x66C])) & 0xF) ^ 0xDC) + 168952;
  unsigned int v880 = 431 * ((HIBYTE(v878) & 0xF0 | (LODWORD(STACK[0x66C]) >> 28)) ^ 0x7C) + 168952;
  int v881 = ((*(unsigned __int8 *)(v28 + (v880 - 957 * ((4487950 * (unint64_t)v880) >> 32))) ^ 0xC) << 28) ^ ((*(unsigned __int8 *)(v28 + (v879 - 957 * ((4487950 * (unint64_t)v879) >> 32))) ^ 0x3C) << 24);
  int v882 = *(unsigned __int8 *)(v28 + (v868 - 957 * ((4487950 * (unint64_t)v868) >> 32)));
  int v883 = v882 ^ (16 * (*(unsigned __int8 *)(v28 + v869 % 0x3BD) ^ 0x3C));
  unsigned int v884 = v883 ^ ((*(unsigned __int8 *)(v28 + v872 % 0x3BD) ^ 0x3C) << 8);
  int v885 = v884 ^ ((*(unsigned __int8 *)(v28 + (v873 - 957 * ((4487950 * (unint64_t)v873) >> 32))) ^ 0x3C) << 12);
  unsigned int v886 = v885 ^ ((*(unsigned __int8 *)(v28 + (v875 - 957 * ((4487950 * (unint64_t)v875) >> 32))) ^ 0x3C) << 16);
  unsigned int v887 = v886 ^ ((*(unsigned __int8 *)(v28 + (v877 - 957 * ((4487950 * (unint64_t)v877) >> 32))) ^ 0x3C) << 20);
  unsigned int v888 = (((v881 - ((2 * v881) & 0x20000000) - 1866705823) ^ v887) >> 24) ^ 0x90;
  unsigned int v889 = v888 - ((2 * v888) & 0xFFFFFFE3) - 1192839183;
  unsigned int v890 = 431 * (~(v889 >> 4) & 0xF) + 404709;
  unsigned int v891 = 431 * ((v883 >> 4) ^ 3) + 404709;
  int v892 = ((((((*(unsigned __int8 *)(v28
                                  + (431 * (v889 & 0xF ^ 1)
                                                 + 404709
                                                 - 957
                                                 * ((4487950 * (unint64_t)(431 * (v889 & 0xF ^ 1) + 404709)) >> 32))) ^ 0x3C) << 8) ^ ((*(unsigned __int8 *)(v28 + (v890 - 957 * ((4487950 * (unint64_t)v890) >> 32))) ^ 0x3C) << 12) | *(unsigned __int8 *)(v28 + (431 * (HIWORD(v886) & 0xF) + 404709 - 957 * ((4487950 * (unint64_t)(431 * (HIWORD(v886) & 0xF) + 404709)) >> 32))) ^ 0x3C) << 8) ^ ((*(unsigned __int8 *)(v28 + (431 * ((v887 >> 20) & 0xF) + 404709 - 957 * ((4487950 * (unint64_t)(431 * ((v887 >> 20) & 0xF) + 404709)) >> 32))) ^ 0x3C) << 12) | *(unsigned __int8 *)(v28 + (431 * ((v884 >> 8) & 0xF) + 404709 - 957 * ((4487950 * (unint64_t)(431 * ((v884 >> 8) & 0xF) + 404709)) >> 32))) ^ 0x3C) << 8) ^ ((*(unsigned __int8 *)(v28 + (431 * ((unsigned __int16)v885 >> 12) + 404709 - 957 * ((4487950 * (unint64_t)(431 * ((unsigned __int16)v885 >> 12) + 404709)) >> 32))) ^ 0x3C) << 12);
  int v893 = STACK[0x624];
  LODWORD(STACK[0x690]) = (LODWORD(STACK[0x624]) - 1342032942) ^ LODWORD(STACK[0x67C]);
  int v894 = v892 | *(unsigned __int8 *)(v28
                                   + (431 * (v882 & 0xF ^ 0xC)
                                                  + 404709
                                                  - 957
                                                  * ((4487950 * (unint64_t)(431 * (v882 & 0xF ^ 0xCu) + 404709)) >> 32))) ^ 0x3C;
  int v895 = LODWORD(STACK[0x6EC]) + LODWORD(STACK[0x5FC]);
  LODWORD(STACK[0x700]) = v895;
  v810 -= 1097870187;
  LODWORD(STACK[0x68C]) = v810 ^ (16
                                * (*(unsigned __int8 *)(v28
                                                      + (v891
                                                                     - 957 * ((4487950 * (unint64_t)v891) >> 32))) ^ 0x3C)) ^ v894;
  HIDWORD(v555) = STACK[0x5F0];
  LODWORD(v555) = LODWORD(STACK[0x5EC]) ^ 0xE18F4500;
  int v896 = v555 >> 6;
  HIDWORD(v555) = v896 ^ 0x9828;
  LODWORD(v555) = v896 ^ 0x44000000;
  unsigned int v897 = 431 * ((LODWORD(STACK[0x620]) >> 8) & 0xF ^ 6) + 279719;
  unsigned int v898 = 431 * ((LODWORD(STACK[0x620]) >> 4) ^ 2) + 279719;
  unsigned int v899 = 431 * (STACK[0x620] & 0xF ^ 1) + 279719;
  unsigned int v900 = ((LODWORD(STACK[0x604]) ^ 0x3B780F4)
        + ((*(unsigned __int8 *)(v28 + (v897 - 957 * ((4487950 * (unint64_t)v897) >> 32))) ^ 0x3C) << 8)) ^ ((*(unsigned __int8 *)(v28 + (((v555 >> 22) & 0x260A9B0 ^ 0xF7EDF75D) + (STACK[0x5E8] & 0x9B0 ^ 0xFFFFFFCF) + 175287139) * ((((unsigned __int16)LODWORD(STACK[0x620]) >> 12) ^ 1u) + 649) % 0x3BD) ^ 0x3C) << 12);
  int v901 = *(unsigned __int8 *)(v28 + (v899 - 957 * ((4487950 * (unint64_t)v899) >> 32))) ^ 0x3C;
  unsigned int v902 = v901 - 647692065 - ((2 * v901) & 0xFFFFFFBF);
  unsigned int v903 = (v900 | v902 ^ 0xD96500DF) ^ (16
                                     * (*(unsigned __int8 *)(v28
                                                           + (v898
                                                                          - 957
                                                                          * ((4487950 * (unint64_t)v898) >> 32))) ^ 0x3C));
  unsigned int v904 = 431 * (((unsigned __int16)LODWORD(STACK[0x614]) >> 12) ^ 4) + 279719;
  unsigned int v905 = 431 * (STACK[0x614] & 0xF ^ 0xA) + 279719;
  int v906 = *(unsigned __int8 *)(v28 + (v905 - 957 * ((4487950 * (unint64_t)v905) >> 32))) ^ 0x3C;
  unsigned int v907 = LODWORD(STACK[0x608]) ^ ((*(unsigned __int8 *)(v28
                                                      + (v904
                                                                     - 957 * ((4487950 * (unint64_t)v904) >> 32))) ^ 0x3C) << 12);
  unsigned int v908 = v906 - 385416547 + (~(2 * v906) | 0xFFFFFF75) + 3753;
  unsigned int v909 = (v907 ^ 0xD8D41216 | v908 ^ 0xE9071145) ^ (16 * (*(unsigned __int8 *)(v28 + LODWORD(STACK[0x610])) ^ 0x3C));
  unsigned int v910 = (-1398699946 - (v902 & 0xF ^ 0x4001216E | 0xACA18856) + (v902 & 0xF ^ 0x4001216E | 0x535E77A9)) ^ 0x135F56C8;
  unsigned int v911 = 431
       * ((((16 * (v908 & 0xF)) ^ 0x50 | v910)
         - 371647788
         - 2 * (((16 * (v908 & 0xF)) ^ 0x50 | v910) & 0x69D91ADF ^ v910 & 0xB)) ^ 0xE9D91AD4);
  unsigned int v912 = 431 * (*(unsigned __int8 *)(v28 + (v911 + 290925) % 0x3BD) ^ LODWORD(STACK[0x708]) ^ 0x3C);
  unsigned int v913 = (v912 + 290925) % 0x3BD;
  unsigned int v914 = *(unsigned __int8 *)(v28 + v912 % 0x3BD);
  int v915 = (((v914 >> 4) ^ 3) - ((v914 >> 3) & 0x18) + 60) ^ *(unsigned __int8 *)(v28 + v911 % 0x3BD);
  int v916 = (((2 * ((v903 >> 4) ^ 0x320A2006)) & 0x4004000E)
        - ((v903 >> 4) ^ 0x320A2006)
        + 1459204472) ^ 0x64F3917E;
  unsigned int v917 = 431 * (((v916 | v909 & 0xF0) - 1515750034 - ((2 * (v916 | v909 & 0xF0)) & 0x802DC)) ^ 0xA5A77D6E);
  unsigned int v918 = 431
       * (*(unsigned __int8 *)(v28 + (v917 + 290925) % 0x3BD) ^ (16
                                                               * (*(unsigned __int8 *)(v28
                                                                                     + (431 * v915 + 290925 - 957 * ((4487950 * (unint64_t)(431 * v915 + 290925)) >> 32))) ^ 0x3C)) ^ 0x3C);
  int v919 = *(unsigned __int8 *)(v28
                            + (v918 + 290925 - 957 * ((4487950 * (unint64_t)(v918 + 290925)) >> 32))) ^ 0x3C;
  unsigned int v920 = *(unsigned __int8 *)(v28 + (v918 - 957 * ((4487950 * (unint64_t)v918) >> 32)));
  int v921 = (((v920 >> 4) ^ 3) - ((v920 >> 3) & 0x18) + 60) ^ *(unsigned __int8 *)(v28 + v917 % 0x3BD);
  LOBYTE(v604) = (*(unsigned char *)(v28 + v913) ^ 0x3C) - ((2 * (*(unsigned char *)(v28 + v913) ^ 0x3C)) & 0xE3);
  int v922 = (v909 >> 4) & 0xF0 | (v903 >> 8) & 0xF;
  unsigned int v923 = 431 * ((v922 - 317343378 - ((2 * v922) & 0xDC)) ^ 0xED15B96E);
  unsigned int v924 = 431
       * (*(unsigned __int8 *)(v28 + (v923 + 290925) % 0x3BD) ^ (16
                                                               * (*(unsigned __int8 *)(v28
                                                                                     + (431 * v921 + 290925 - 957 * ((4487950 * (unint64_t)(431 * v921 + 290925)) >> 32))) ^ 0x3C)) ^ 0x3C);
  unsigned int v925 = v924 + 290925 - 957 * ((4487950 * (unint64_t)(v924 + 290925)) >> 32);
  unsigned int v926 = *(unsigned __int8 *)(v28 + (v924 - 957 * ((4487950 * (unint64_t)v924) >> 32)));
  unsigned int v927 = 431
       * ((((v926 >> 4) ^ 0x43) - ((v926 >> 3) & 0x18) - 4) ^ *(unsigned __int8 *)(v28 + v923 % 0x3BD))
       + 290925;
  int v928 = (v907 >> 8) & 0xF0 | ((unsigned __int16)v900 >> 12);
  unsigned int v929 = 431 * (((v928 ^ 0x10) + 372571075 + (~(2 * v928) | 0xFFFFFE79) + 1) ^ 0x1634FBC3);
  unsigned int v930 = 431
       * (*(unsigned __int8 *)(v28 + (v929 + 290925) % 0x3BD) ^ (16
                                                               * (*(unsigned __int8 *)(v28
                                                                                     + (v927 - 957 * ((4487950 * (unint64_t)v927) >> 32))) ^ 0x3C)) ^ 0x3C);
  int v931 = *(unsigned __int8 *)(v28
                            + (v930 + 290925 - 957 * ((4487950 * (unint64_t)(v930 + 290925)) >> 32))) ^ 0x3C;
  int v932 = (v931 << 12) - (STACK[0x498] & (v931 << 13));
  unsigned int v933 = *(unsigned __int8 *)(v28 + (v930 - 957 * ((4487950 * (unint64_t)v930) >> 32)));
  unsigned int v934 = 431
       * ((((v933 >> 4) ^ 3) - ((v933 >> 3) & 0x18) + 60) ^ *(unsigned __int8 *)(v28 + v929 % 0x3BD))
       + 290925;
  unsigned int v935 = 431 * ((1429595916 - ((v900 >> 15) & 0x18) + (((v907 >> 12) & 0xF0 | HIWORD(v900) & 0xF) ^ 0x40)) ^ 0x5535E70C);
  int v936 = *(unsigned __int8 *)(v28 + (v935 + 290925) % 0x3BD) ^ (16
                                                              * (*(unsigned __int8 *)(v28
                                                                                    + (v934 - 957 * ((4487950 * (unint64_t)v934) >> 32))) ^ 0x3C));
  LOBYTE(v935) = *(unsigned char *)(v28 + v935 % 0x3BD);
  unsigned int v937 = 431 * (v936 ^ 0x3C);
  unsigned int v938 = (*(unsigned __int8 *)(v28 + (v937 - 957 * ((4487950 * (unint64_t)v937) >> 32))) ^ 0x3Cu) >> ((v935 & 4 ^ 4) + (v935 & 4));
  unsigned int v939 = 431 * ((v938 - ((2 * v938) & 0x78) + 60) ^ v935) + 290925;
  int v940 = *(unsigned __int8 *)(v28 + (v939 - 957 * ((4487950 * (unint64_t)v939) >> 32)));
  unsigned int v941 = 431
       * (HIWORD(LODWORD(STACK[0x608])) & 0xF0 ^ 0xD0 ^ ((v940 & 0x2F ^ 3) + (v940 & 0x2F ^ 0x2C)) & ((LODWORD(STACK[0x604]) >> 20) ^ 0xBBBBBBBB) & 0xFFFFFFCF);
  unsigned int v942 = 431
       * (*(unsigned __int8 *)(v28
                             + (v941 + 290925 - 957
                                                            * ((4487950 * (unint64_t)(v941 + 290925)) >> 32))) ^ (16 * (v940 ^ 0x3C)) ^ 0x3C);
  unsigned int v943 = v942 - 957 * ((4487950 * (unint64_t)v942) >> 32);
  unsigned int v944 = 431
       * ((((*(unsigned char *)(v28 + v943) >> 4) ^ 3) - ((*(unsigned char *)(v28 + v943) >> 3) & 0x18) + 60) ^ *(unsigned __int8 *)(v28 + (v941 - 957 * ((4487950 * (unint64_t)v941) >> 32))))
       + 290925;
  int v945 = *(unsigned __int8 *)(v28
                            + (v942 + 290925 - 957 * ((4487950 * (unint64_t)(v942 + 290925)) >> 32))) ^ 0x3C;
  unsigned int v946 = 431
       * (*(unsigned __int8 *)(v28 + LODWORD(STACK[0x5E0])) ^ (16
                                                             * (*(unsigned __int8 *)(v28
                                                                                   + (v944
                                                                                                  - 957 * ((4487950 * (unint64_t)v944) >> 32))) ^ 0x3C)) ^ 0x3C);
  int v947 = *(unsigned __int8 *)(v28
                            + (v946 + 290925 - 957 * ((4487950 * (unint64_t)(v946 + 290925)) >> 32))) ^ 0x3C;
  unsigned int v948 = (v947 << 24) + 1185760725 - ((v947 << 25) & 0x8C000000);
  unsigned int v949 = *(unsigned __int8 *)(v28 + (v946 - 957 * ((4487950 * (unint64_t)v946) >> 32)));
  unsigned int v950 = 431
       * ((((v949 >> 4) ^ 3) - ((v949 >> 3) & 0x18) + 60) ^ *(unsigned __int8 *)(v28
                                                                                                + LODWORD(STACK[0x5E4])
                                                                                                % 0x3BD))
       + 290925;
  unsigned int v951 = 431 * ((HIBYTE(LODWORD(STACK[0x608])) & 0xF0 | (LODWORD(STACK[0x604]) >> 28)) ^ 0xD0) + 290925;
  unsigned int v952 = 431
       * (*(unsigned __int8 *)(v28 + (v951 - 957 * ((4487950 * (unint64_t)v951) >> 32))) ^ (16 * (*(unsigned __int8 *)(v28 + (v950 - 957 * ((4487950 * (unint64_t)v950) >> 32))) ^ 0x3C)) ^ 0x3C)
       + 290925;
  unsigned int v953 = *(unsigned __int8 *)(v28 + (v952 - 957 * ((4487950 * (unint64_t)v952) >> 32))) ^ 0xC;
  int v954 = (v945 << 20) - ((v945 << 21) & 0x8E00000) - 1804352649;
  unsigned int v955 = v954 ^ ((*(unsigned __int8 *)(v28
                                     + (v937
                                                    + 290925
                                                    - 957 * ((4487950 * (unint64_t)(v937 + 290925)) >> 32))) ^ 0x3C) << 16);
  int v956 = 16 * v919 - ((32 * v919) & 0x1660) + 193035069;
  unsigned int v957 = (v932 - 12801535) ^ ((*(unsigned __int8 *)(v28 + v925) ^ 0x3C) << 8);
  unsigned int v958 = 431 * ((((v957 ^ v956) >> 4) & 0xF0 | (v903 >> 8) & 0xF) ^ 0x10) + 168952;
  unsigned int v959 = 431 * (((v957 >> 8) & 0xF0 | ((unsigned __int16)v900 >> 12)) ^ 0xA0) + 168952;
  unsigned int v960 = 431 * ((((v955 ^ (v932 - 12801535)) >> 12) & 0xF0 | HIWORD(v900) & 0xF) ^ 0xF0) + 168952;
  unsigned int v961 = 431 * ((HIWORD(v955) & 0xF0 | (LODWORD(STACK[0x604]) >> 20) & 0xF) ^ 0x7B) + 168952;
  unsigned int v962 = 431 * ((((v948 ^ v954) >> 20) & 0xF0 | HIBYTE(LODWORD(STACK[0x604])) & 0xF) ^ 0x23) + 168952;
  int v963 = *(unsigned __int8 *)(v28 + (431 * ((16 * (((_BYTE)v604 - 15) & 0xF)) ^ 0x10 | v910) + 168952) % 0x3BD);
  unsigned int v964 = 431 * (((((v953 << 28) + 1185760725 + (v953 >> 2 << 31)) ^ v948) >> 24) & 0xF0 | (LODWORD(STACK[0x604]) >> 28))
       + 168952;
  int v965 = *(unsigned __int8 *)(v28 + (v964 - 957 * ((4487950 * (unint64_t)v964) >> 32)));
  int v966 = v963 ^ (16
               * (*(unsigned __int8 *)(v28
                                     + (431
                                      * ((v956 ^ (v604 - 15)) & 0xF0 ^ 0xC0 | v916)
                                      + 168952)
                                     % 0x3BD) ^ 0x3C));
  unsigned int v967 = v966 ^ ((*(unsigned __int8 *)(v28 + (v958 - 957 * ((4487950 * (unint64_t)v958) >> 32))) ^ 0x3C) << 8);
  int v968 = v967 ^ ((*(unsigned __int8 *)(v28 + (v959 - 957 * ((4487950 * (unint64_t)v959) >> 32))) ^ 0x3C) << 12);
  unsigned int v969 = v968 ^ ((*(unsigned __int8 *)(v28 + (v960 - 957 * ((4487950 * (unint64_t)v960) >> 32))) ^ 0x3C) << 16);
  unsigned int v970 = v969 ^ ((*(unsigned __int8 *)(v28 + (v961 - 957 * ((4487950 * (unint64_t)v961) >> 32))) ^ 0x3C) << 20);
  unsigned int v971 = v970 ^ ((*(unsigned __int8 *)(v28 + (v962 - 957 * ((4487950 * (unint64_t)v962) >> 32))) ^ 0x3C) << 24);
  unsigned int v972 = 431 * ((((((v965 ^ 0xC) << 28) - ((v965 & 3) << 29) + 990465261) ^ v971) >> 28) ^ 3) + 404709;
  unsigned int v973 = 431 * ((v966 >> 4) ^ 3) + 404709;
  int v974 = ((((((*(unsigned __int8 *)(v28
                                  + (431 * (HIBYTE(v971) & 0xF)
                                                 + 404709
                                                 - 957
                                                 * ((4487950 * (unint64_t)(431 * (HIBYTE(v971) & 0xF) + 404709)) >> 32))) ^ 0x3C) << 8) ^ ((*(unsigned __int8 *)(v28 + (v972 - 957 * ((4487950 * (unint64_t)v972) >> 32))) ^ 0x3C) << 12) | *(unsigned __int8 *)(v28 + (431 * (HIWORD(v969) & 0xF) + 404709 - 957 * ((4487950 * (unint64_t)(431 * (HIWORD(v969) & 0xF) + 404709)) >> 32))) ^ 0x3C) << 8) ^ ((*(unsigned __int8 *)(v28 + (431 * ((v970 >> 20) & 0xF) + 404709 - 957 * ((4487950 * (unint64_t)(431 * ((v970 >> 20) & 0xF) + 404709)) >> 32))) ^ 0x3C) << 12) | *(unsigned __int8 *)(v28 + (431 * ((v967 >> 8) & 0xF) + 404709 - 957 * ((4487950 * (unint64_t)(431 * ((v967 >> 8) & 0xF) + 404709)) >> 32))) ^ 0x3C) << 8) ^ ((*(unsigned __int8 *)(v28 + (431 * ((unsigned __int16)v968 >> 12) + 404709 - 957 * ((4487950 * (unint64_t)(431 * ((unsigned __int16)v968 >> 12) + 404709)) >> 32))) ^ 0x3C) << 12);
  return (*(uint64_t (**)(void, void))(STACK[0x6F8]
                                                   + 8
                                                   * (LODWORD(STACK[0x6F4]) ^ ((4 * ((STACK[0x554] & 1) == 0)) & 0xEF | (16 * ((STACK[0x554] & 1) == 0))))))(LODWORD(STACK[0x620]) ^ (v893 - v895 + 642661444 - ((2 * (v893 - v895 + 261919979)) & 0x2D634EB2u)), ((v810 ^ 0x29D7ECA0)- (LODWORD(STACK[0x5D4])+ LODWORD(STACK[0x628]))+ 412809535- ((2 * ((v810 ^ 0x29D7ECA0) - (LODWORD(STACK[0x5D4]) + LODWORD(STACK[0x628])) + 412809535) + 96002614) & 0xD541EE62)- 310548404) ^ (16* (*(unsigned __int8 *)(v28+ (v973 - 957 * ((4487950 * (unint64_t)v973) >> 32))) ^ 0x3C)) ^ (v974 | *(unsigned __int8 *)(v28 + (431 * (v963 & 0xF ^ 0xC) + 404709 - 957 * ((4487950 * (unint64_t)(431 * (v963 & 0xF ^ 0xCu) + 404709)) >> 32))) ^ 0x3C));
}

uint64_t sub_10015B528@<X0>(void *a1@<X8>)
{
  return (*(uint64_t (**)(void))(v2 + 8 * (((*a1 == 0) * (((v1 + 2133) | 0x206) - 2366)) ^ v1)))();
}

uint64_t sub_10015B558()
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((((v0 + 1832) ^ 0x1219) * (v2 == 847203058)) ^ (v0 + 1832))))();
}

uint64_t sub_10015B590@<X0>(unsigned int a1@<W8>, uint64_t a2, uint64_t a3)
{
  BOOL v11 = v3 < v4;
  *(unsigned char *)(a3 + (v6 - 1855846820)) = *(unsigned char *)(v8 + (v6 - 1855846820))
                                                   - ((*(unsigned char *)(v8 + (v6 - 1855846820)) << (v10 ^ 0xD8)) & 0xC0)
                                                   + 96;
  if (v11 == v6 - 1213932642 < a1) {
    BOOL v11 = v6 - 1213932642 < v3;
  }
  return (*(uint64_t (**)(void))(v7 + 8 * ((v11 * v5) ^ v9)))();
}

uint64_t sub_10015B608(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, _DWORD *a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17, int a18)
{
  *a5 = 0;
  *a6 = 0;
  a18 = 31090337 * ((&a17 + 261563085 - 2 * ((unint64_t)&a17 & 0xF9722CD)) ^ 0xC8164284)
      + 1655392376;
  uint64_t v19 = (*(uint64_t (**)(int *))(v18 + 37600))(&a17);
  return (*(uint64_t (**)(uint64_t))(v18 + 8 * ((2910 * (a17 == 847203058)) ^ 0x29Du)))(v19);
}

uint64_t sub_10015B6AC@<X0>(int a1@<W8>)
{
  v8.i64[0] = 0xC0C0C0C0C0C0C0C0;
  v8.i64[1] = 0xC0C0C0C0C0C0C0C0;
  v9.i64[0] = 0x6060606060606060;
  v9.i64[1] = 0x6060606060606060;
  *(int8x16_t *)(v5 + (a1 + v1)) = vaddq_s8(vsubq_s8(*v7, vandq_s8(vaddq_s8(*v7, *v7), v8)), v9);
  int v10 = ((v3 - 890) ^ 0x355) == (((v2 ^ 0xFD9) + v4) & 0x1FFFFFFF0);
  return (*(uint64_t (**)(void))(v6 + 8 * (((32 * v10) | (v10 << 6)) ^ v3)))();
}

void sub_10015B720()
{
  *(_DWORD *)(v0 + 8) = 847161035;
}

uint64_t sub_10015B72C@<X0>(void *a1@<X8>)
{
  return (*(uint64_t (**)(void))(v2 + 8 * (((*a1 == 0) * (v1 + 4376)) ^ v1)))();
}

uint64_t sub_10015B758(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19, uint64_t a20,unsigned int a21)
{
  a20 = a18;
  a21 = v21
      - 850
      - (((&a19 | 0xA709AF39) - &a19 + (&a19 & 0x58F650C0)) ^ 0x1AF4AB7A)
      * v22
      - 370;
  uint64_t v25 = (*(uint64_t (**)(int *))(v23 + 8 * ((v21 - 850) ^ 0x199E)))(&a19);
  return (*(uint64_t (**)(uint64_t))(v23
                                            + 8
                                            * ((1817
                                              * (a19 == ((v21 + 1756407516) & 0x974F4BDB ^ (v24 - 900))
                                                      + 359 * ((v21 - 850) ^ 0xBCA))) ^ (v21 - 850))))(v25);
}

void sub_10015B810()
{
}

uint64_t sub_10015B820(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,int a22,unsigned int a23)
{
  a23 = 31090337 * (&a22 ^ 0xC7816049) + 1655392376;
  uint64_t v25 = (*(uint64_t (**)(int *))(v24 + 37600))(&a22);
  return (*(uint64_t (**)(uint64_t))(v24 + 8 * ((6162 * (a22 == 847203058)) ^ v23)))(v25);
}

uint64_t sub_10015B8BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, unsigned int a14)
{
  a14 = 31090337 * (((&a13 | 0xEF6D7107) + (~&a13 | 0x10928EF8)) ^ 0x28EC114F) + 1655392376;
  uint64_t v15 = (*(uint64_t (**)(int *))(v14 + 37600))(&a13);
  return (*(uint64_t (**)(uint64_t))(v14 + 8 * ((122 * (a13 == 847203058)) ^ 0xA3Fu)))(v15);
}

uint64_t sub_10015B94C()
{
  int v3 = *(_DWORD *)(v0 + 16) - ((2 * *(_DWORD *)(v0 + 16) + 16822570) & 0x6FB09E98) + 2019076065;
  BOOL v4 = (v3 ^ ((v1 ^ 0xE73) + 1099802925)) + ((2 * v3) & 0xECABFB76 ^ 0x6CA09A10) != -162136645;
  return (*(uint64_t (**)(void))(v2 + 8 * (((2 * v4) | (4 * v4)) ^ v1)))();
}

uint64_t sub_10015B9DC@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, unint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, int a8@<W8>, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,unint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,int a50,unsigned int a51,int a52,unsigned int a53,int a54,unsigned __int8 a55)
{
  int v64 = *(uint64_t (**)(void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v56 + 8 * a8);
  int v58 = a55 ^ 0x22;
  if (v58 == 2)
  {
    BOOL v63 = a5 >= a31 || v55 >= a5 + 64;
    return (*(uint64_t (**)(void, void, void))(v56 + 8 * (((HIDWORD(a30) - 941) * v63) ^ (v57 + 2841))))(a51, a53, a53);
  }
  else if (v58 == 1)
  {
    BOOL v60 = a5 < a31 && v55 < a5 + 64;
    return (*(uint64_t (**)(void, uint64_t))(v56 + 8
                                                            * (((((v57 + 450) ^ 0xEE) - 420) * v60) ^ (v57 + 3493))))(a51, 1822300047);
  }
  else
  {
    HIDWORD(a34) = a55 ^ 0x22;
    return v64(a51, a1, a2, a3, a4, a35, a6, a7, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
             a20,
             a21,
             a22,
             a23,
             a24,
             a25,
             a26,
             a27,
             a28,
             a29,
             a30,
             a31,
             a32,
             a33,
             a34,
             a35,
             a36,
             v64,
             a38,
             a39,
             a40,
             a41,
             a42);
  }
}

void sub_10015BABC()
{
}

uint64_t sub_10015BB18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  unsigned int v10 = (v6 + 866467661) & 0xCC5ABD5B;
  unsigned int v11 = v7 - a6 - ((v10 ^ 0xE485802C) & (2 * (v7 - a6) - 726347988)) - 593679823;
  int v12 = STACK[0x6D8];
  int v13 = STACK[0x6D0];
  int v14 = v13 - v12 - ((2 * (v13 - v12) + 971328290) & 0x27E8A18C) + 283571799;
  unsigned int v15 = (v11 ^ 0x8DBD3D64)
      + (v9 ^ 0xD59F5FCE)
      - a6
      - ((2 * ((v11 ^ 0x8DBD3D64) + (v9 ^ 0xD59F5FCE) - a6) + 941804800) & 0x295AE7D8)
      - 1866540436;
  int v16 = ((LODWORD(STACK[0x6EC]) - 1405618543) ^ 0x7242C29B ^ v11)
      - ((2 * ((LODWORD(STACK[0x6EC]) - 1405618543) ^ 0x7242C29B ^ v11)) & 0x16CB9258)
      - 1956263636;
  int v17 = STACK[0x6F4];
  int v18 = v14 ^ LODWORD(STACK[0x6F4]);
  int v19 = (v15 & 0x65163206 ^ 0x61120002) + (v15 & 0x65163206 ^ 0x4043204);
  unsigned int v20 = v8 - v13 - v19 + 1134176015 - ((2 * (v8 - v13 - v19 + 2017556317)) & 0x96B15F64);
  LODWORD(STACK[0x550]) = ((LODWORD(STACK[0x3EC]) + (v14 ^ 0x83AEA970)) ^ 0x7D8F9FEF)
                        - 83953472
                        + ((2 * (LODWORD(STACK[0x3EC]) + (v14 ^ 0x83AEA970))) & 0xFB1F3FDE);
  unsigned int v21 = ((2 * (a6 + 1843634797 + (v11 ^ 0x62183B2D))) & 0xFFD0C3BE)
      + ((a6 + 1843634797 + (v11 ^ 0x62183B2D)) ^ 0xFFE861DF);
  unsigned int v22 = v21 - ((2 * v21 + 742730346) & 0xEDB99A92) + 218063486;
  LODWORD(STACK[0x6C4]) = (((v15 ^ 0x94AD73EC) + LODWORD(STACK[0x434])) ^ 0xEEBFFDFF)
                        + 2079817692
                        + ((2 * ((v15 ^ 0x94AD73EC) + LODWORD(STACK[0x434]))) & 0xDD7FFBFE);
  LODWORD(STACK[0x6C8]) = (((v16 ^ 0xDF1BE1A5) + LODWORD(STACK[0x438])) ^ 0xAB7DFD9E)
                        + 1995693040
                        + ((2 * ((v16 ^ 0xDF1BE1A5) + LODWORD(STACK[0x438]))) & 0x56FBFB3C);
  unsigned int v24 = ((2 * (v12 - 969563286 + (v14 ^ 0x83AEA970) + v19)) & 0xF6F9EDBE)
      + ((v12 - 969563286 + (v14 ^ 0x83AEA970) + v19) ^ 0x7B7CF6DF);
  LODWORD(STACK[0x558]) = ((2 * (LODWORD(STACK[0x3D0]) + (v20 ^ 0x34A7504D))) & 0xED76B6FE)
                        + ((LODWORD(STACK[0x3D0]) + (v20 ^ 0x34A7504D)) ^ 0xF6BB5B7F)
                        + 1342172664;
  unsigned int v25 = LODWORD(STACK[0x3E0]) + v24;
  LODWORD(STACK[0x540]) = LODWORD(STACK[0x3DC]) - (((2 * v18) & 0xFFEF5F5E ^ 0xAAA1D02) + (v18 ^ 0xFAA2B16E));
  int v26 = v9;
  unsigned int v27 = (v15 ^ v11 ^ 0xF6B548C1)
      - 2 * (((v15 ^ v11 ^ 0xF6B548C1) + 304886032) & 0x3E2DF47E ^ (v15 ^ v11) & 2)
      - 799398516;
  LODWORD(STACK[0x56C]) = ((LODWORD(STACK[0x3CC]) + (v11 ^ 0x9DE7C4D2)) ^ 0x9CFFB7EF)
                        + 2132148187
                        + ((2 * (LODWORD(STACK[0x3CC]) + (v11 ^ 0x9DE7C4D2))) & 0x39FF6FDE);
  LODWORD(STACK[0x54C]) = ((LODWORD(STACK[0x3C8]) + (v22 ^ 0x892332B6)) ^ 0x5BE4BBFA)
                        - 12587072
                        + ((2 * (LODWORD(STACK[0x3C8]) + (v22 ^ 0x892332B6))) & 0xB7C977F4);
  unsigned int v28 = ((v20 ^ 0xCB58AFB2 ^ (v24 - 2071787231))
       - 592071399
       - ((2 * (v20 ^ 0xCB58AFB2 ^ (v24 - 2071787231))) & 0xB96B6A32)) ^ 0xDCB5B519;
  unsigned int v29 = (v27 ^ 0x53FE3A8C) + (v15 ^ 0xE271BEA5 ^ v22) + ((2 * v27) & 0xDBA79DE0 ^ 0x580388E0);
  LODWORD(STACK[0x6F0]) = (v29 ^ 0xBBF6B6BB) + 2147319791 + ((2 * v29) & 0x77ED6D76);
  LODWORD(STACK[0x700]) = ((v28 + (v14 ^ 0x48F606C2 ^ v20)) ^ 0x7CDF57EB)
                        - 76353546
                        + ((2 * (v28 + (v14 ^ 0x48F606C2 ^ v20))) & 0xF9BEAFD6);
  int v30 = v17 ^ 0x42DF668E;
  int v31 = STACK[0x3F0];
  int v32 = STACK[0x428];
  int v33 = STACK[0x3E8];
  int v34 = STACK[0x3E4];
  int v35 = STACK[0x418];
  int v36 = STACK[0x41C];
  int v37 = STACK[0x420];
  int v38 = STACK[0x424];
  int v39 = STACK[0x3D8];
  int v40 = STACK[0x43C];
  STACK[0x460] = STACK[0x458];
  unint64_t v41 = STACK[0x4E8];
  LODWORD(STACK[0x564]) = ((877 * (v10 ^ 0x519)) ^ 0xAFDB3BFE) + a6 + v34;
  int v42 = LODWORD(STACK[0x708]) + v33;
  unsigned int v43 = ((v10 + 447) ^ v38 ^ 0xE907029D) - v13 - 1126713595;
  LODWORD(STACK[0x560]) = (v43 ^ LODWORD(STACK[0x4B8])) + 1878917055 + ((2 * v43) & 0x7FBED7EE);
  LODWORD(STACK[0x52C]) = (((v37 ^ 0x6A46797) - v12 + 969563286) ^ 0x2F7FEB6F)
                        - 642056524
                        + ((2 * ((v37 ^ 0x6A46797) - v12 + 969563286)) & 0x5EFFD6DE);
  LODWORD(STACK[0x520]) = v8 + v40 + 1920993055;
  LODWORD(STACK[0x53C]) = v42 + 647927;
  LODWORD(STACK[0x55C]) = LODWORD(STACK[0x6C4]) + 1417155019;
  LODWORD(STACK[0x568]) = (((v26 ^ 0x2A60A031) + (v36 ^ 0xFC100740) + 1) ^ 0xAB76DFFC)
                        + 1610218132
                        + ((2 * ((v26 ^ 0x2A60A031) + (v36 ^ 0xFC100740) + 1)) & 0x56EDBFF8);
  LODWORD(STACK[0x530]) = (((v35 ^ 0x5E19AC2A) - LODWORD(STACK[0x6EC]) + 1405618543) ^ 0x577FD6F1)
                        - 84443312
                        + ((2 * ((v35 ^ 0x5E19AC2A) - LODWORD(STACK[0x6EC]) + 1405618543)) & 0xAEFFADE2);
  LODWORD(STACK[0x510]) = LODWORD(STACK[0x6C8]) - 133411141;
  LODWORD(STACK[0x51C]) = v25 - 1313919143;
  LODWORD(STACK[0x538]) = v30 + 1577588506 + (v32 ^ 0xA6622101);
  LODWORD(STACK[0x508]) = ((40 - (_BYTE)v39) & 0x3F) + v39;
  unsigned int v44 = *(uint64_t (**)(void))(STACK[0x6F8] + 8 * (int)(v10 ^ (3581 * (STACK[0x554] & 1))));
  LODWORD(STACK[0x500]) = v31;
  STACK[0x4E8] = v41;
  LODWORD(STACK[0x4E4]) = v31;
  LODWORD(STACK[0x4CC]) = -v31;
  return v44();
}

uint64_t sub_10015C39C@<X0>(__int16 a1@<W8>)
{
  LOWORD(STACK[0x94A]) = a1;
  return sub_1001B8258();
}

uint64_t sub_10015C3B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,unint64_t *a22,int a23,unsigned int a24)
{
  a24 = 3687 - ((&a22 & 0xDA354997 | ~(&a22 | 0xDA354997)) ^ 0xE24BD621) * v25;
  a22 = &STACK[0x75464D914B7248CF];
  uint64_t v26 = (*(uint64_t (**)(unint64_t **))(v24 + 37680))(&a22);
  return (*(uint64_t (**)(uint64_t))(v24 + 8 * ((1119 * (a23 == 847203058)) ^ 0x1FC)))(v26);
}

uint64_t sub_10015C480(int a1, int a2, int a3, int a4, int a5, double a6, double a7, double a8, double a9, int8x16_t a10, int8x16_t a11, uint64_t a12, int a13)
{
  int v16 = a2 + a4;
  uint64_t v17 = (a3 + v16);
  int8x16_t v18 = vrev64q_s8(*(int8x16_t *)(v14 + v17 - 15));
  int8x16_t v19 = vextq_s8(v18, v18, 8uLL);
  int8x16_t v20 = vrev64q_s8(*(int8x16_t *)(v14 + v17 - 31));
  int8x16_t v21 = vextq_s8(v20, v20, 8uLL);
  uint64_t v22 = v13 + v17;
  int8x16_t v23 = vrev64q_s8(vaddq_s8(vsubq_s8(v19, vandq_s8(vaddq_s8(v19, v19), a10)), a11));
  *(int8x16_t *)(v22 - 15) = vextq_s8(v23, v23, 8uLL);
  int8x16_t v24 = vrev64q_s8(vaddq_s8(vsubq_s8(v21, vandq_s8(vaddq_s8(v21, v21), a10)), a11));
  *(int8x16_t *)(v22 - 31) = vextq_s8(v24, v24, 8uLL);
  return (*(uint64_t (**)(void))(v15 + 8 * (((a5 == v16) * a13) ^ a1)))();
}

uint64_t sub_10015C488@<X0>(uint64_t a1@<X0>, char a2@<W3>, uint64_t a3@<X4>, uint64_t a4@<X8>, unsigned char *a5@<X1>, uint64_t a6@<X2>, unsigned char *a7@<X5>, uint64_t a8@<X6>)
{
  *a5 = v10 ^ *(unsigned char *)(a4 + a6) ^ *(unsigned char *)(v9 + a6) ^ *(unsigned char *)(v8 + a6) ^ v11;
  *a7 = v12 ^ *(unsigned char *)(a4 + a8) ^ *(unsigned char *)(v9 + a8) ^ *(unsigned char *)(v8 + a8) ^ v13;
  return sub_10016FD78(a1, a2, a3, a4);
}

uint64_t sub_10015C4E0@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(v2 + 8 * (((*(void *)(a1 + 8) != 0) * ((v1 + 7) ^ 0x620)) | v1)))();
}

uint64_t sub_10015C514(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unint64_t *a13, int a14, unsigned int a15)
{
  a13 = &STACK[0x75464D914B72488F];
  a15 = 3687 - ((2 * (&a13 & 0x223DAA68) - &a13 - 574466666) ^ 0x1A4335DF) * v16;
  uint64_t v18 = (*(uint64_t (**)(unint64_t **))(v15 + 37680))(&a13);
  return (*(uint64_t (**)(uint64_t))(v15 + 8 * ((16 * (a14 != v17)) ^ 0x2ADu)))(v18);
}

uint64_t sub_10015C5D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, unint64_t *a19, int a20,uint64_t a21,unsigned int a22,int a23,int a24)
{
  unsigned int v27 = 1314530549 * ((&a19 - 704490779 - 2 * (&a19 & 0xD60252E5)) ^ 0x670BD42B);
  a22 = 387984852 - v27;
  a24 = v27 ^ 0x4EA001FC;
  a20 = (v24 + 1780980628) ^ v27;
  a21 = a14;
  a19 = &STACK[0x70766EB78D2F3F20];
  uint64_t v28 = (*(uint64_t (**)(unint64_t **))(v26 + 8 * (v24 + 4241)))(&a19);
  return (*(uint64_t (**)(uint64_t))(v26
                                            + 8
                                            * ((1758 * (a23 == ((((v24 - 451) | 0xD19) - 2108) ^ (v25 + 829)))) ^ v24)))(v28);
}

void sub_10015C6B4()
{
}

uint64_t sub_10015C6D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13)
{
  int v16 = (a13 ^ v13) - 427939318 + (~(2 * (a13 ^ v13)) | 0x3303ABED);
  return (*(uint64_t (**)(void))(v15
                              + 8
                              * ((125
                                * (((((6 * (((v14 + 2252) | 0x1B) ^ 0xD75) + 815) | 0x2B8) - 201339599) & (2 * v16) ^ 0xC0FC5400)
                                 + (v16 ^ 0x1F81C1FF)
                                 + 1073569472 == 972901046)) ^ ((v14 + 2252) | 0x1Bu))))();
}

uint64_t sub_10015C7AC()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (int)((((*(_DWORD *)(v1 - 0x69166E42B329955FLL) & 1) == (v0 ^ 0xFE8))
                                     * (((v0 + 1191309303) & 0xB8FE0E7F) - 3650)) ^ v0)))();
}

uint64_t sub_10015C804()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((1224 * (v1 == (v0 | 0x1C8) + 70663280 + (((v0 | 0x1C8) - 474) | 0x2D) + 4040)) ^ (v0 | 0x1C8))))();
}

uint64_t sub_10015C880(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15, unsigned int a16)
{
  a16 = 31090337 * (((&a15 | 0xED1CD01D) + (~&a15 | 0x12E32FE2)) ^ 0x2A9DB055) + 1655392376;
  uint64_t v17 = (*(uint64_t (**)(int *))(v16 + 37600))(&a15);
  return (*(uint64_t (**)(uint64_t))(v16 + 8 * ((7121 * (a15 == 847203058)) ^ 0xA21u)))(v17);
}

uint64_t sub_10015C94C()
{
  int v3 = (v0 - 2187) | 0x880;
  uint64_t v8 = v6;
  unsigned int v9 = v0 + 366490169 * (&v7 ^ 0x16AE5644) + 2269;
  (*(void (**)(uint64_t *))(v2 + 8 * (v0 ^ 0x1A9B)))(&v7);
  unsigned int v9 = v3
     + 366490169 * ((-155674149 - (&v7 | 0xF6B899DB) + (&v7 | 0x9476624)) ^ 0x1FE93060)
     + 2280;
  uint64_t v8 = v5;
  (*(void (**)(uint64_t *))(v2 + 8 * (v3 + 2448)))(&v7);
  return (v1 - 847203058);
}

uint64_t sub_10015CA4C(uint64_t a1, uint64_t a2)
{
  int v5 = **(unsigned __int8 **)(a2 + 8) - 42;
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((2152 * ((((v3 - 442) ^ (v2 - 584)) & (2 * v5)) + (v5 ^ 0xFBDFFFFF) == -69206017)) ^ v3)))();
}

uint64_t sub_10015CA94(uint64_t a1, uint64_t a2, unsigned int *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,_DWORD *a24)
{
  *a24 = 1;
  uint64_t v28 = *a3;
  unint64_t v29 = 1314530549
      * ((0x8073CE7303835803 - ((v27 - 144) | 0x8073CE7303835803) + ((v27 - 144) | 0x7F8C318CFC7CA7FCLL)) ^ 0xD8A9B1114D752132);
  int v30 = (v24 - 1174090465) ^ v29;
  *(_DWORD *)(v27 - 116) = v30;
  *(_DWORD *)(v27 - 112) = v29 + 1;
  *(_DWORD *)(v27 - 124) = ((v24 - 1174090465) ^ 0x1F3) - v29;
  *(_DWORD *)(v27 - 120) = v30 ^ 0x115;
  *(void *)(v27 - 104) = v29 ^ 0x13FF;
  *(_DWORD *)(v27 - 144) = v29 + v24 - 2002523665;
  *(void *)(v27 - 136) = v28 + v29;
  uint64_t v31 = (*(uint64_t (**)(uint64_t))(v25 + 8 * (v24 + 1614 + v26)))(v27 - 144);
  return (*(uint64_t (**)(uint64_t))(v25 + 8 * *(int *)(v27 - 128)))(v31);
}

uint64_t sub_10015CB88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char *a13, int a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, char *a19, char *a20,uint64_t a21,uint64_t a22)
{
  a22 = v26;
  a20 = a13;
  a18 = v24;
  LODWORD(a19) = (v22 + 2767) ^ (1401278017
                               * (((&a18 | 0xD5196A19) + (~&a18 | 0x2AE695E6)) ^ 0xD13A1CFF));
  (*(void (**)(uint64_t *))(v25 + 8 * (v22 ^ 0x11C0)))(&a18);
  HIDWORD(a18) = (v22 + 1292) ^ (((406509216 - (&a18 | 0x183AD6A0) + (&a18 | 0xE7C5295F)) ^ 0x56CCAF91)
                               * v23);
  a19 = a13;
  a20 = &a15;
  (*(void (**)(uint64_t *))(v25 + 8 * (v22 + 3650)))(&a18);
  a19 = a13;
  LODWORD(a20) = v22
               - 476588053 * ((((2 * &a18) | 0x3573310) - &a18 - 28023176) ^ 0xBC569DCB)
               + 1635;
  uint64_t v27 = (*(uint64_t (**)(uint64_t *))(v25 + 8 * (v22 + 3683)))(&a18);
  return (*(uint64_t (**)(uint64_t))(v25
                                            + 8
                                            * (((a18 == v22 + 847202046) * (((v22 - 1527099073) & 0x2EEC) + 1033)) ^ v22)))(v27);
}

uint64_t sub_10015CCFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, _DWORD *a10, void *a11)
{
  *a11 = a1;
  *a10 = v11;
  return sub_1001875B0();
}

uint64_t sub_10015CD04(uint64_t a1, uint64_t a2, int a3, int a4)
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * (((((v4 == a3) ^ (7 * (a4 ^ 0xB6))) & 1) * ((a4 + 27) ^ 0x8D7)) ^ a4)))();
}

uint64_t sub_10015CD44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, int a20,uint64_t a21,int a22,uint64_t a23,unsigned int a24)
{
  int v28 = v24 ^ v26;
  unsigned int v29 = 31090337 * ((&a20 & 0x5104AE3 | ~(&a20 | 0x5104AE3)) ^ 0x3D6ED555);
  a21 = a12;
  a22 = v29 + v28 + 2969;
  a23 = a16;
  a24 = ((181 * (v28 ^ 0x441) - 151591284) ^ v25)
      - v29
      + (((v28 + 1079425973) & 0xBFA947B7 ^ 0xEDEDD14C) & (2 * v25))
      + 725481193;
  uint64_t v30 = (*(uint64_t (**)(int *))(v27 + 8 * (v28 + 3626)))(&a20);
  return (*(uint64_t (**)(uint64_t))(v27 + 8 * ((3898 * (a20 == 847203058)) ^ v28)))(v30);
}

void sub_10015CE40()
{
  uint64_t v0 = (uint64_t)*(&off_100520A90
                + ((75 * ((qword_1005A6FB0 - dword_1005A7038) ^ 0x7E)) ^ byte_100491800[byte_1004A0860[(75 * ((qword_1005A6FB0 - dword_1005A7038) ^ 0x7E))] ^ 0x79])
                + 38);
  uint64_t v1 = *(void *)(v0 - 4);
  uint64_t v2 = (uint64_t)*(&off_100520A90
                + (byte_100491904[(byte_1004A0964[(75 * ((qword_1005A6FB0 - v1) ^ 0x7E))
                                                                                                - 4] ^ 0xB4)
                                                               - 4] ^ (75 * ((qword_1005A6FB0 - v1) ^ 0x7E)))
                + 242);
  unint64_t v3 = (unint64_t)&v5[*(void *)(v2 - 4) ^ v1];
  *(void *)(v0 - 4) = 544792907 * (v3 + 0x1ED3F820338F2682);
  *(void *)(v2 - 4) = 544792907 * (v3 ^ 0xE12C07DFCC70D97ELL);
  v6[1] = 31090337 * (((v6 | 0xE6FA87ED) + (~v6 | 0x19057812)) ^ 0x217BE7A5) + 1655392376;
  LOBYTE(v0) = 75 * ((*(_DWORD *)(v2 - 4) + *(_DWORD *)(v0 - 4)) ^ 0x7E);
  int v4 = (char *)*(&off_100520A90
               + ((75 * ((qword_1005A6FB0 + dword_1005A7038) ^ 0x7E)) ^ byte_100491900[byte_1004A0960[(75 * ((qword_1005A6FB0 + dword_1005A7038) ^ 0x7E))] ^ 0xB4])
               + 12)
     - 8;
  (*(void (**)(_DWORD *))&v4[8
                                      * (byte_100495F28[(byte_100491A04[v0 - 4] ^ 0x54)
                                                                       - 8] ^ v0)
                                      + 35720])(v6);
  __asm { BRAA            X8, X17 }
}

uint64_t sub_10015D060(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,int a58)
{
  int v60 = (a8 - 1385) | 0x880;
  unsigned int v61 = (v58 ^ 0xB6BFBFFC ^ a58 ^ v60) + (HIDWORD(a24) & 0x6D7F7F1E);
  BOOL v63 = ((((91 * (v60 ^ 0x89) - 100) & 0xD3 ^ 2) + (_BYTE)v61) & 0xF) != 0 || v61 == -1228947569;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v59 + 8 * (v60 ^ (2 * v63))))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49);
}

uint64_t sub_10015D0F4(uint64_t a1, uint64_t a2, unsigned int a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(void))(v7 + 8 * ((1578 * ((v6 & 0x18) == ((a3 - 811935184) & 0x76FDFC49 ^ a6))) ^ a3)))();
}

uint64_t sub_10015D13C()
{
  return (*(uint64_t (**)(void))(v1 + 8 * (((*(void *)(STACK[0x608] + 24) == 0) * ((v0 ^ 0xED) - 2714)) ^ v0)))();
}

uint64_t sub_10015D170()
{
  return (*(uint64_t (**)(void))(v1 + 8 * (((STACK[0x650] == 0) * (((v0 - 2440) | 4) ^ 0x49)) ^ (v0 + 1625))))();
}

uint64_t sub_10015D1AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19)
{
  BOOL v23 = v21 != a8 || a19 != 202856323;
  return (*(uint64_t (**)(void))(v20 + 8 * ((v23 * (v19 + 313 * (v19 ^ 0x21D) - 1825)) ^ v19)))();
}

uint64_t sub_10015D1F8(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7)
{
  *a7 = a1;
  return sub_100102180(a6, 305 * (a2 ^ 0x4A4u));
}

void sub_10015D210(uint64_t a1)
{
  __asm { BRAA            X8, X17 }
}

void sub_10015D27C()
{
}

uint64_t sub_10015D2B0()
{
  uint64_t v3 = (*(uint64_t (**)(void))(v2 + 8 * (v0 + 3011)))();
  *(void *)(v1 + 24) = 0;
  return sub_10015D2D0(v3);
}

uint64_t sub_10015D2D0()
{
  (*(void (**)(uint64_t))(v2 + 8 * (v0 ^ 0x178C)))(v1);
  return sub_100100FBC();
}

uint64_t sub_10015D2F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, unsigned int a15, uint64_t a16, char *a17)
{
  a16 = a11;
  a17 = &a10;
  a15 = (v17 - 129) ^ (((-2
                       - ((&a14 ^ 0xFC00FC | 0x6EBAB627)
                        + (&a14 ^ 0x20109222 | 0x914549D8))) ^ 0x6EA2EBCB)
                     * v20);
  (*(void (**)(int *))(v19 + 8 * (v17 + 2229)))(&a14);
  a16 = a11;
  LODWORD(a17) = v17
               - 476588053 * ((((2 * &a14) | 0x896A5DDE) - &a14 - 1152724719) ^ 0xF9482AAC)
               + 214;
  uint64_t v21 = (*(uint64_t (**)(int *))(v19 + 8 * (v17 ^ 0x1BD6u)))(&a14);
  return (*(uint64_t (**)(uint64_t))(v19 + 8 * (((a14 == v18) * (3 * (v17 ^ 0xB1E) - 2001)) | v17)))(v21);
}

uint64_t sub_10015D3F4()
{
  return sub_100194410();
}

void sub_10015D404()
{
}

uint64_t sub_10015D490(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 4);
  *(void *)(a1 + 64) = *(void *)(a2 + 8);
  return 0;
}

uint64_t sub_10015D4A8()
{
  BOOL v2 = (*(uint64_t (**)(uint64_t))(v1 + 8 * (v0 ^ 0x118D)))(16) != 0;
  return (*(uint64_t (**)(void))(STACK[0x258] + 8 * (int)((v2 * (((v0 - 809) ^ 0xFFFFF0E0) + v0 + 3054)) ^ v0)))();
}

uint64_t sub_10015D4F8@<X0>(uint64_t result@<X0>, int a2@<W8>)
{
  *(_DWORD *)(result + 12) = (((v3 + 505) | 0x101) ^ 0xC5533A92) + 32 * a2 + v2 + 1;
  return result;
}

void sub_10015D528(uint64_t a1)
{
  int v1 = 1401278017 * (((a1 | 0xC754715A) - (a1 & 0xC754715A)) ^ 0xC37707BD);
  BOOL v3 = *(void *)(a1 + 24) == 0x44746E1D249095E1 || (*(_DWORD *)(a1 + 16) ^ v1) == 874765251;
  __asm { BRAA            X10, X17 }
}

uint64_t sub_10015D5FC()
{
  return sub_1001B7A74(v0 - 2196);
}

uint64_t sub_10015D618(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * (int)((((((v3 & 0x18) == 0) ^ a3) & 1)
                                     * (((a3 + 506603407) & 0xE1CDDD7F) - 3426)) ^ a3)))();
}

uint64_t sub_10015D664(uint64_t a1, uint64_t a2)
{
  return ((uint64_t (*)(uint64_t))*(&off_100517370
                                           + ((8 * (*(_DWORD *)(a2 + 4) == 473457788)) | ((*(_DWORD *)(a2 + 4) == 473457788) << 6) | 0xB93u)))(4294925278);
}

void sub_10015D6A8(uint64_t a1)
{
  int v1 = ((*(_DWORD *)(a1 + 8) ^ (1401278017 * ((a1 & 0x2D3769D8 | ~(a1 | 0x2D3769D8)) ^ 0x16EBE0C0))) - 382258715) & 0x16C8C7FC;
  __asm { BRAA            X12, X17 }
}

uint64_t sub_10015D850(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, uint64_t a11)
{
  int v15 = ((((2 * (v14 - 144)) | 0xA7758BB4) - (v14 - 144) - 1404749274) ^ 0x4514939E) * a10;
  *(_DWORD *)(v14 - 144) = v15 + v11 + ((v13 + 1401555969) & 0xAC75EFBC ^ 0xE332CDBA);
  *(_DWORD *)(v14 - 140) = v13 - v15 - 3006;
  *(void *)(v14 - 136) = a11;
  *(void *)(v14 - 128) = v12;
  return sub_10015D8C8();
}

uint64_t sub_10015D8C8@<X0>(unsigned int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, _DWORD *a12)
{
  uint64_t v14 = (*(uint64_t (**)(uint64_t))(v12 + 8 * a1))(v13 - 144);
  *a12 = a6;
  return sub_10015D8EC(v14);
}

void sub_10015D8EC()
{
  *(_DWORD *)(v1 + 44) = v0;
}

uint64_t sub_10015D92C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, char *a16)
{
  int v18 = 102 * (v16 ^ 0x21E);
  unint64_t v19 = STACK[0x710];
  unint64_t v20 = STACK[0x8C8];
  unint64_t v21 = STACK[0x598];
  unsigned int v22 = (char *)&a9 + STACK[0x7F0] - 0x34310EE2AF47EFABLL;
  STACK[0x7F0] += 32;
  STACK[0x600] = v20;
  STACK[0x7B8] = v21;
  BOOL v23 = *(uint64_t (**)(void))(v17 + 8 * (v18 + 499));
  a16 = v22;
  uint64_t v24 = v23();
  unint64_t v25 = STACK[0x258];
  STACK[0x8B0] = 0;
  BOOL v28 = v19 == -56 || v20 == 0x6BBE7547D3B34F0FLL || v21 == 0x114F96AE92DAEAC2;
  return (*(uint64_t (**)(uint64_t))(v25
                                            + 8 * (((((v18 + 1) ^ v28) & 1) * (v18 - 3942)) ^ v18)))(v24);
}

uint64_t sub_10015D9F4(int a1)
{
  unsigned int v8 = v5 + v4 + v6;
  v9.i64[0] = 0xC0C0C0C0C0C0C0C0;
  v9.i64[1] = 0xC0C0C0C0C0C0C0C0;
  v10.i64[0] = 0x6060606060606060;
  v10.i64[1] = 0x6060606060606060;
  uint64_t v11 = v2 + v8;
  int8x16_t v12 = vrev64q_s8(*(int8x16_t *)(v11 - 15));
  int8x16_t v13 = vextq_s8(v12, v12, 8uLL);
  int8x16_t v14 = vrev64q_s8(*(int8x16_t *)(v11 - 31));
  int8x16_t v15 = vextq_s8(v14, v14, 8uLL);
  uint64_t v16 = v1 + v8;
  int8x16_t v17 = vrev64q_s8(vaddq_s8(vsubq_s8(v13, vandq_s8(vaddq_s8(v13, v13), v9)), v10));
  *(int8x16_t *)(v16 - 15) = vextq_s8(v17, v17, 8uLL);
  int8x16_t v18 = vrev64q_s8(vaddq_s8(vsubq_s8(v15, vandq_s8(vaddq_s8(v15, v15), v9)), v10));
  *(int8x16_t *)(v16 - 31) = vextq_s8(v18, v18, 8uLL);
  return (*(uint64_t (**)(void))(v7 + 8 * ((((v3 & 0xFFFFFFE0) == 32) * (a1 - 390)) ^ (a1 + 35))))();
}

uint64_t sub_10015DA8C(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * (int)(((5 * ((a3 + 997729862) & 0xC487DAFE ^ 0x2C2)
                                      - 4120
                                      + 11 * ((a3 + 997729862) & 0xC487DAFE ^ 0x337))
                                     * (v3 > 0x1F)) ^ (a3 + 997729862) & 0xC487DAFE)))();
}

uint64_t sub_10015DAEC()
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((((v2 + 1758131591) ^ v2 ^ 0x68CB0D44) * ((v1 + v0 + 100668426) > 7)) ^ v2)))();
}

uint64_t sub_10015DB5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unsigned int a13, uint64_t a14, unsigned int a15, int a16)
{
  unsigned int v21 = (((&a13 | 0xE7933CF2) - &a13 + (&a13 & 0x186CC308)) ^ 0xF13D6AB6)
      * v19;
  a14 = a11;
  a13 = (v16 ^ 0xF79DC733) + ((2 * v16) & 0xEF3B8E66) + 486538206 + v21;
  a15 = v21 + 3254;
  uint64_t v22 = (*(uint64_t (**)(unsigned int *))(v17 + 37576))(&a13);
  return (*(uint64_t (**)(uint64_t))(v17 + 8 * ((4010 * (a16 == v18)) ^ v20)))(v22);
}

uint64_t sub_10015DC08(__n128 a1)
{
  int v5 = (char *)&STACK[0x5C0] + v2;
  *(_DWORD *)int v5 = 1256014437;
  *((void *)v5 + 1) = 0;
  *((_DWORD *)v5 + 4) = 85794580;
  *((_DWORD *)v5 + 6) = 473457775;
  *((void *)v5 + 4) = 0;
  *(_DWORD *)((char *)&STACK[0x5C0] + v2 + 40) = 473457775;
  STACK[0x3B0] = (unint64_t)&STACK[0x5C0] + v2 + 40;
  *(unint64_t *)((char *)&STACK[0x5C0] + v2 + memset((void *)(STACK[0x7D8] + 8), 91, 48) = 0;
  *(_DWORD *)((char *)&STACK[0x5C0] + v2 + 56) = 473457775;
  STACK[0x548] = (unint64_t)&STACK[0x5C0] + v2 + 48;
  STACK[0x4F8] = (unint64_t)&STACK[0x5C0] + v2 + 56;
  *(unint64_t *)((char *)&STACK[0x5C0] + v2 + 64) = 0;
  STACK[0x400] = (unint64_t)&STACK[0x5C0] + v2 + 64;
  *(_DWORD *)((char *)&STACK[0x5C0] + v2 + 72) = 473457775;
  *(unint64_t *)((char *)&STACK[0x5C0] + v2 + 80) = 0;
  STACK[0x4E0] = (unint64_t)&STACK[0x5C0] + v2 + 72;
  STACK[0x420] = (unint64_t)&STACK[0x5C0] + v2 + 80;
  v5[88] = 80;
  *(_DWORD *)uint64_t v3 = 1256014437;
  *(__n128 *)(v3 + 4) = a1;
  *(_DWORD *)(v3 + 20) = 0;
  *(_DWORD *)(v3 + 24) = 473457775;
  *(_DWORD *)(v3 + 28) = 1651939598;
  STACK[0x260] = v3 + 28;
  *(__n128 *)(v3 + 436) = a1;
  *(__n128 *)(v3 + 452) = a1;
  *(void *)(v3 + 468) = 0;
  *(_DWORD *)(v3 + 232) = 1651939598;
  STACK[0x240] = v3 + 232;
  *(unsigned char *)(v3 + 1149) = 0;
  *(_WORD *)(v3 + 1150) = 0;
  *(__n128 *)(v3 + 1152) = a1;
  *(__n128 *)(v3 + 1168) = a1;
  *(__n128 *)(v3 + 1184) = a1;
  return (*(uint64_t (**)(void))(v4 + 8 * ((329 * (3 * (v1 ^ 0xE73) == 313)) ^ v1)))();
}

uint64_t sub_10015DD2C(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)(a1 + 16) = (**(unsigned __int8 **)(a2 + 8) ^ 0x871D9F1D)
                       + 2113896439
                       + ((2 * **(unsigned __int8 **)(a2 + 8)) & 0x3A);
  return 0;
}

uint64_t sub_10015DD64(uint64_t a1, int a2, uint64_t a3, int a4, uint64_t a5, int a6)
{
  uint64_t v11 = (a6 + v9 + v8 + a2 - a4);
  *(void *)(a1 - 7 + v11) = *(void *)(v6 - 7 + v11);
  return (*(uint64_t (**)(void))(v10
                              + 8
                              * (((4 * (a4 - (v7 & 0xFFFFFFF8) == -8)) | (8 * (a4 - (v7 & 0xFFFFFFF8) == -8))) ^ a6)))();
}

uint64_t sub_10015DDBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unsigned int a10)
{
  return (*(uint64_t (**)(void))(v11 + 8 * ((((v10 - 1748764441) & 0x683BFDB7 ^ 0x196D) * (a10 < 0x797E1D38)) ^ v10)))();
}

uint64_t sub_10015DE34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unint64_t *a13, int a14, unsigned int a15)
{
  a13 = &STACK[0x75464D914B724897];
  a15 = 3687 - 31090337 * ((2 * (&a13 & 0x17AF6690) - &a13 + 1750112619) ^ 0xAFD1F922);
  uint64_t v17 = (*(uint64_t (**)(unint64_t **))(v15 + 37680))(&a13);
  return (*(uint64_t (**)(uint64_t))(v15 + 8 * ((2954 * (a14 == (v16 ^ 0x9042E012) - 1573099717)) ^ v16)))(v17);
}

uint64_t sub_10015DEE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, int a16, char a17, int a18, char a19, uint64_t a20,int a21,unsigned int a22,uint64_t a23,char *a24)
{
  a22 = (v24 + 1468) ^ (((&a21 & 0x2D2B7496 | ~(&a21 | 0x2D2B7496)) ^ 0x63DD0DA7) * v25);
  a23 = a15;
  a24 = (char *)&a18;
  uint64_t v27 = (*(uint64_t (**)(int *))(v26 + 8 * (v24 + 3826)))(&a21);
  return sub_100118C64(v27, v28, v29, v30, v31, v32, v33, v34, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24);
}

void sub_10015DF5C(uint64_t a1)
{
  *(_DWORD *)a1 = *(_DWORD *)v1;
  *(unsigned char *)(a1 + 4) = *(unsigned char *)(v1 + 4);
  *(unsigned char *)(a1 + 5) = *(unsigned char *)(v1 + 5);
  JUMPOUT(0x100126DD0);
}

uint64_t sub_10015DF88@<X0>(int a1@<W6>, int a2@<W7>, uint64_t a3@<X8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v11 = (v8 - 1173003853);
  int v12 = v9 + v11;
  char v13 = *(unsigned char *)(v9 + v11);
  uint64_t v14 = a3 + v11;
  uint64_t v15 = __ROR8__(v14, 8);
  unint64_t v16 = (((v12 * a1) >> (v7 + 43)) ^ (v12 * a1)) * a1;
  unint64_t v17 = ((2 * (v15 & 0xF8FFFFFFFFFFFFFFLL) - 0x6B340B20F3929E46) & 0xF6547228F132018ALL)
      - (v15 & 0xF8FFFFFFFFFFFFFFLL)
      - 0x49903383FECFB1A3;
  unint64_t v18 = v17 ^ 0xF377866A0AC1D978;
  v17 ^= 0xA05855163B745F92;
  unint64_t v19 = (__ROR8__(v18, 8) + v17) ^ 0xB0B0DE652F050858;
  uint64_t v20 = __ROR8__(v19, 8);
  unint64_t v21 = v19 ^ __ROR8__(v17, 61);
  unint64_t v22 = (((2 * (v20 + v21)) & 0xD9CFC640A96C4C20) - (v20 + v21) - 0x6CE7E32054B62611) ^ 0xE9406EC94B26DFB9;
  unint64_t v23 = v22 ^ __ROR8__(v21, 61);
  unint64_t v24 = (__ROR8__(v22, 8) + v23) ^ 0xDC9BC02F237F7F2BLL;
  unint64_t v25 = v24 ^ __ROR8__(v23, 61);
  unint64_t v26 = (__ROR8__(v24, 8) + v25) ^ 0x90741906A0647F25;
  unint64_t v27 = v26 ^ __ROR8__(v25, 61);
  uint64_t v28 = __ROR8__(v26, 8);
  unint64_t v29 = (v28 + v27 - ((2 * (v28 + v27)) & 0xBE670009BBBBB704) + 0x5F338004DDDDDB82) ^ 0xD77B8B2EFEDE3C01;
  unint64_t v30 = v29 ^ __ROR8__(v27, 61);
  uint64_t v31 = __ROR8__(v29, 8);
  unint64_t v32 = (0xA6CE06952F2FAA76 - ((v31 + v30) | 0xA6CE06952F2FAA76) + ((v31 + v30) | 0x5931F96AD0D05589)) ^ 0x2C2253D68AEB6E31;
  *(unsigned char *)(v14 - 0x6BBE7547D3B34F0FLL) = *(unsigned char *)(a7 + (v16 >> 24)) ^ v13 ^ *(unsigned char *)((v16 >> 24) + a5 + 1) ^ *(unsigned char *)((v16 >> 24) + a6 + 5) ^ v16 ^ (-105 * BYTE3(v16)) ^ (((__ROR8__(v32, 8) + (v32 ^ __ROR8__(v30, 61))) ^ 0xB1D7AB5296A4827ALL) >> (8 * (v14 & 7u)));
  return (*(uint64_t (**)(void))(v10 + 8 * (v7 ^ (2 * (v8 - 1 == a2)))))();
}

uint64_t sub_10015E214()
{
  return sub_10015E228();
}

uint64_t sub_10015E228()
{
  uint64_t v3 = *(void *)(v1 + 8);
  STACK[0x430] = *(void *)(v2 + 8 * (v0 - 2374));
  return sub_1001B7944(v3);
}

uint64_t sub_10015E260(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char *a13, int a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, char *a19, char *a20,uint64_t a21,uint64_t a22)
{
  HIDWORD(a18) = (v22 + 1618) ^ ((((&a18 ^ 0xEA5B1A70)
                                 + 538590824
                                 - 2 * ((&a18 ^ 0xEA5B1A70) & 0x201A3E68)) ^ 0x7B48A2D6)
                               * v23);
  a19 = a13;
  a20 = (char *)&a16 + 4;
  uint64_t v25 = (*(uint64_t (**)(uint64_t *))(v24 + 8 * (v22 ^ 0x1098u)))(&a18);
  return sub_10015CB88(v25, v26, v27, v28, v29, v30, v31, v32, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22);
}

uint64_t sub_10015E2D4()
{
  return (*(uint64_t (**)(void))(v1
                              + 8 * (((*(void *)(STACK[0x630] + 24) == 0) * ((v0 ^ 0xDB7) - 1096)) ^ (v0 - 1733))))();
}

uint64_t sub_10015E30C()
{
  return 4294925273;
}

uint64_t sub_10015E318@<X0>(uint64_t a1@<X0>, int a2@<W2>, int a3@<W8>)
{
  *(unsigned char *)(a1 + (v4 - 1076954927)) = *(unsigned char *)(v3 + (v4 - 1076954927)) ^ 0x60;
  return (*(uint64_t (**)(void))(v5
                              + 8 * ((504 * (v4 - 1 != (((a2 ^ 0x1F8) - 1520537417) & 0x5AA186F6) + a3)) ^ a2 ^ 0x1F8)))();
}

void sub_10015E378()
{
}

uint64_t sub_10015E380(uint64_t a1, int a2)
{
  *(int8x8_t *)(v2 - 7 + (v5 + v4 - v7)) = veor_s8(*(int8x8_t *)(v3 - 7 + (v5 + v4 - v7)), (int8x8_t)0x6060606060606060);
  return (*(uint64_t (**)(void))(v8 + 8 * ((273 * ((a2 ^ 0xB06) + v7 - 1368 == (v6 & 0xFFFFFFF8))) | a2)))();
}

void sub_10015E3D8()
{
  int v8 = (v5 - 766448868) & 0x2DAF19B7;
  LODWORD(STACK[0x540]) = v2;
  LODWORD(STACK[0x2FC]) = v3;
  LODWORD(STACK[0x37C]) = v1;
  LODWORD(STACK[0x4EC]) = v4;
  LODWORD(STACK[0x414]) = v0;
  unint64_t v9 = STACK[0x598];
  int v10 = *(_DWORD *)(STACK[0x598] - 0x560E26B5DF241DCCLL);
  LODWORD(STACK[0x478]) = 1531326823;
  *(_DWORD *)(v9 - 0x560E26B5DF241DCCLL) = (v10 ^ v7)
                                         + (v0 ^ (v7 + 1925) ^ v8)
                                         + v7
                                         - (v6 & (2 * ((v10 ^ v7) + (v0 ^ (v7 + 1925) ^ v8))));
  JUMPOUT(0x100147FA8);
}

uint64_t sub_10015E464(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  unsigned int v10 = v9 + a7 - 809553215;
  unsigned int v11 = (a3 ^ 0xD90) + v7 - 406027796;
  int v12 = (v10 < 0x2044F0F7) ^ (v11 < 0x2044F0F7);
  BOOL v13 = v10 > v11;
  if (v12) {
    BOOL v13 = v10 < 0x2044F0F7;
  }
  return (*(uint64_t (**)(void))(v8 + 8 * ((!v13 * ((129 * (a3 ^ 0xD90)) ^ 0x18E)) ^ a3)))();
}

uint64_t sub_10015E4E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unint64_t *a13, int a14, uint64_t a15, unsigned int a16, int a17, int a18)
{
  unsigned int v21 = v18 + 61;
  int v22 = (v18 - 1090) ^ 0xE6C;
  unsigned int v23 = 1314530549 * ((&a13 & 0xF6AE5268 | ~(&a13 | 0xF6AE5268)) ^ 0xB8582B59);
  a14 = (v18 + 1780977697) ^ v23;
  a13 = &STACK[0x70766EB78D2F3F00];
  a15 = a11;
  a18 = v23 ^ 0x4EA001FB;
  a16 = -253718920 - v23;
  uint64_t v24 = (*(uint64_t (**)(unint64_t **))(v19 + 8 * (v18 + 1310)))(&a13);
  return (*(uint64_t (**)(uint64_t))(v19 + 8 * ((880 * (a17 == v20 + v22 - 1688)) ^ v21)))(v24);
}

uint64_t sub_10015E5C4()
{
  int v3 = *(unsigned __int8 *)(v0 - 0x560E26B5DF241DC4) ^ 0x22;
  if (v3 == 1)
  {
    unsigned int v11 = *(_DWORD *)(v0 - 0x560E26B5DF241DE0);
    unsigned int v12 = *(_DWORD *)(v0 - 0x560E26B5DF241DE4);
    HIDWORD(v13) = v12 ^ 3;
    LODWORD(v13) = v11;
    *(unsigned char *)(v0 - 0x560E26B5DF241DECLL) = ((8 * v11) ^ 0xD8) - ((2 * ((8 * v11) ^ 0xD8)) & 0xC0) + 96;
    *(unsigned char *)(v0 - 0x560E26B5DF241DEBLL) = ((v11 >> 5) ^ 0xDC)
                                          - 2 * (((v11 >> 5) ^ 0xDC) & ((2 * v2) ^ 0x69) ^ (v11 >> 5) & 3)
                                          + 96;
    *(unsigned char *)(v0 - 0x560E26B5DF241DEALL) = ((v11 >> 13) ^ 0xEC) + (~(2 * ((v11 >> 13) ^ 0xEC)) | 0x3F) + 97;
    *(unsigned char *)(v0 - 0x560E26B5DF241DE9) = ((v11 >> 21) ^ 0x5A)
                                          - 2 * (((v11 >> 21) ^ 0x5A) & 0x64 ^ (v11 >> 21) & 4)
                                          + 96;
    *(unsigned char *)(v0 - 0x560E26B5DF241DE8) = (v13 >> 29) + (~(2 * (v13 >> 29)) | 0x3F) + 97;
    int v5 = (2 * v2) ^ 0x108A;
    unsigned int v14 = (v12 >> 21) ^ 0xFFFFFFD3;
    *(unsigned char *)(v0 - 0x560E26B5DF241DE7) = ((v12 >> 5) ^ 0xF4) - 2 * (((v12 >> 5) ^ 0xF4) & 0xE3 ^ (v12 >> 5) & 3) + 96;
    *(unsigned char *)(v0 - 0x560E26B5DF241DE6) = ((v12 >> 13) ^ 0x6D)
                                          - 2 * (((v12 >> 13) ^ 0x6D) & 0x62 ^ (v12 >> 13) & 2)
                                          + 96;
    char v10 = v14 + 96;
    unsigned int v9 = 2 * (v14 & 0x64 ^ (v12 >> 21) & 4);
    goto LABEL_5;
  }
  int v4 = v2;
  if (v3 == 2)
  {
    unsigned int v9 = *(_DWORD *)(v0 - 0x560E26B5DF241DE4);
    int v5 = STACK[0x230] & 0x3F952FBE;
    unsigned int v6 = (v9 >> ((STACK[0x230] & 0xBE) - 107)) ^ 0xFFFFFFD3;
    *(unsigned char *)(v0 - 0x560E26B5DF241DECLL) = v6 - ((2 * v6) & 0xC0) + 96;
    *(unsigned char *)(v0 - 0x560E26B5DF241DEBLL) = ((v9 >> 13) ^ 0x6D) - ((2 * ((v9 >> 13) ^ 0x6D)) & 0xC0) + 96;
    unsigned int v7 = *(_DWORD *)(v0 - 0x560E26B5DF241DE0);
    HIDWORD(v8) = v9 ^ 3;
    LODWORD(v8) = v7;
    *(unsigned char *)(v0 - 0x560E26B5DF241DEALL) = ((v9 >> 5) ^ 0xF4)
                                          - 2 * (((v9 >> 5) ^ 0xF4) & 0xE1 ^ ((v9 & 0x20) != 0))
                                          + 96;
    *(unsigned char *)(v0 - 0x560E26B5DF241DE9) = (v8 >> 29) - ((2 * (v8 >> 29)) & 0xC0) + 96;
    *(unsigned char *)(v0 - 0x560E26B5DF241DE8) = ((v7 >> 21) ^ 0x5A)
                                          + ~(2 * (((v7 >> 21) ^ 0x5A) & 0x64 ^ (v7 >> 21) & 4))
                                          + 97;
    *(unsigned char *)(v0 - 0x560E26B5DF241DE7) = ((v7 >> 13) ^ 0xEC) - 2 * (((v7 >> 13) ^ 0xEC) & 0xE3 ^ (v7 >> 13) & 3) + 96;
    LOBYTE(v6) = (8 * v7) ^ 0xD8;
    LOBYTE(v9) = (2 * v6) & 0xC0;
    char v10 = v6 + 96;
    *(unsigned char *)(v0 - 0x560E26B5DF241DE6) = ((v7 >> 5) ^ 0xDC) - ((2 * ((v7 >> 5) ^ 0xDC)) & 0xC0) + 96;
LABEL_5:
    int v4 = v5 + 1541;
    *(unsigned char *)(v0 - 0x560E26B5DF241DE5) = v10 - v9;
  }
  STACK[0x300] = *(void *)(v1 + 8 * (v4 - 2413));
  return sub_1001E5910();
}

uint64_t sub_10015E998()
{
  int v4 = v3 - 3637;
  unsigned int v5 = ((373 * (v4 ^ 0x228)) ^ 0x7F522AD5) + v0;
  BOOL v6 = v2 + 639947668 < ((5 * (v4 ^ 0x3F4)) ^ 0xB7CA9A61);
  if (v6 == v5 < 0xB7CA934F) {
    BOOL v6 = v2 + 639947668 > v5;
  }
  return (*(uint64_t (**)(void))(v1 + 8 * ((117 * v6) ^ v4)))();
}

uint64_t sub_10015EA28(int a1)
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((((a1 - 1742) | 0x382) ^ 0x1465)
                                * ((int)((v3 ^ 0xFFFBEFEB) + 535265119 + (v1 & 0xFFF7DFD6) - 534998859) >= 0)) ^ a1)))();
}

void sub_10015EAC0()
{
}

uint64_t sub_10015EB30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, unsigned int a17, uint64_t a18, unsigned int a19, uint64_t a20,unsigned int a21)
{
  unsigned int v29 = 366490169 * (((&a17 | 0xDE818F6B) + (~&a17 | 0x217E7094)) ^ 0xC82FD92E);
  a19 = v29 + 3254;
  a17 = (v26 ^ 0x74DDC7F7) + ((2 * v26) & 0xE9BB8FEE) - 1614808294 + v29;
  a18 = a13;
  (*(void (**)(unsigned int *))(v27 + 37576))(&a17);
  unsigned int v30 = 366490169 * ((2 * (&a17 & 0x3C169238) - &a17 - 1008112188) ^ 0xD5473B80);
  a18 = a13;
  a17 = (v23 ^ 0x5EDFF397) + ((2 * v23) & 0xBDBFE72E) - 1245851782 + v30;
  a19 = v30 + 3254;
  (*(void (**)(unsigned int *))(v27 + 37576))(&a17);
  unsigned int v31 = ((((2 * &a17) | 0xFE3F0590) - &a17 + 14712120) ^ 0x389EE281) * v28;
  a18 = v25;
  a20 = a13;
  a19 = v31 + 4063;
  a21 = (v24 ^ 0xF67DEBFC) + ((2 * v24) & 0xECFBD7F8) - v31 + 733410924;
  (*(void (**)(unsigned int *))(v27 + 37760))(&a17);
  unsigned int v32 = ((2 * (&a17 & 0x52ED86E0) - &a17 + 756185370) ^ 0xEA931953) * v28;
  a20 = a13;
  a18 = a11;
  a19 = v32 + 4063;
  a21 = (v22 ^ 0xEFF5FFEE) + ((2 * v22) & 0xDFEBFFDC) - v32 + 842982010;
  (*(void (**)(unsigned int *))(v27 + 37760))(&a17);
  unsigned int v33 = ((2 * (&a17 & 0x12F55110) - &a17 + 1829416680) ^ 0xAA8BCEA1) * v28;
  a20 = a13;
  a18 = a12;
  a19 = v33 + 4063;
  a21 = (v21 ^ 0x6E7EE36E) + ((2 * v21) & 0xDCFDC6DC) - v33 - 1279918342;
  uint64_t v34 = (*(uint64_t (**)(unsigned int *))(v27 + 37760))(&a17);
  return (*(uint64_t (**)(uint64_t))(v27 + 8 * ((1960 * (a17 == 847203058)) ^ 0x8CBu)))(v34);
}

uint64_t sub_10015EE38(uint64_t a1, uint64_t a2)
{
  return ((uint64_t (*)(void))*(&off_100517378 + ((28 * (*(_DWORD *)(a2 + 4) == 473457776)) ^ 0x2CCu) - 1))();
}

uint64_t sub_10015EE74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,unsigned int a21)
{
  return sub_10015EFB4(1697324316, 1175337306, a21);
}

uint64_t sub_10015EFB4@<X0>(int a1@<W8>)
{
  return sub_10018F448(a1);
}

void sub_10015EFF8()
{
  STACK[0x798] = *(void *)(v1 + 8 * v0);
  JUMPOUT(0x10015F008);
}

uint64_t sub_10015F014(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,int a50)
{
  return (*(uint64_t (**)(void))(v51 + 8 * ((99 * (v50 != ((16 * a50) ^ 0x9340) + 847198994)) | (a50 - 2098))))();
}

void sub_10015F05C()
{
}

uint64_t sub_10015F064()
{
  unsigned int v5 = (v1 - 403769297) & 0xE7ADC5FF;
  *uint64_t v0 = ((unint64_t)v8 << (v1 - 104)) | v9;
  uint64_t v12 = v10;
  unsigned int v13 = v4
      + ((833671264 - (&v11 | 0x31B0D060) + (&v11 | 0xCE4F2F9F)) ^ 0xD8E179DB) * v3
      + v5;
  (*(void (**)(uint64_t *))(v2 + 8 * (int)(v5 ^ 0xE7ACD7E7)))(&v11);
  unsigned int v13 = v4
      + (((&v11 | 0x20E71B85) - &v11 + (&v11 & 0xDF18E478)) ^ 0x36494DC1) * v3
      + v5;
  uint64_t v12 = v7;
  (*(void (**)(uint64_t *))(v2 + 8 * (int)(v5 ^ 0xE7ACD7E7)))(&v11);
  return 0;
}

void sub_10015F1B4()
{
}

uint64_t sub_10015F21C@<X0>(uint64_t a1@<X4>, int a2@<W5>, uint64_t a3@<X6>, uint64_t a4@<X8>)
{
  uint64_t v12 = a3 - 0x6ED8BC275DE7140ELL + a4;
  unint64_t v13 = ((v12 + 967) << ((a2 - 92) & 0xDA ^ 0xF2u)) & 0xF800000000000000 | ((unint64_t)(v12 + 967) >> 8);
  uint64_t v14 = ((0x359A059079C94F22 - v13) & 0x48F6AFAE05CE04A6)
      + v13
      + 0x4A65FA6F8636B0DDLL
      - ((v13 + 0x4A65FA6F8636B0DDLL) & 0x4AF6AFAE05CE04A6);
  unint64_t v15 = v14 ^ 0xB954EF2F886922E4;
  v14 ^= 0xEA7B3C53B9DCA40ELL;
  unint64_t v16 = (__ROR8__(v15, 8) + v14) ^ 0xB0B0DE652F050858;
  unint64_t v17 = v16 ^ __ROR8__(v14, 61);
  uint64_t v18 = __ROR8__(v16, 8);
  unint64_t v19 = (((2 * (v18 + v17)) & 0xB24251524117EEA2) - (v18 + v17) - 0x592128A9208BF752) ^ 0xDC86A5403F1B0EF8;
  unint64_t v20 = v19 ^ __ROR8__(v17, 61);
  uint64_t v21 = __ROR8__(v19, 8);
  unint64_t v22 = (0x65490E7FDE74BC7ELL - ((v21 + v20) | 0x65490E7FDE74BC7ELL) + ((v21 + v20) | 0x9AB6F180218B4381)) ^ 0x462D31AF02F43CAALL;
  unint64_t v23 = v22 ^ __ROR8__(v20, 61);
  uint64_t v24 = __ROR8__(v22, 8);
  uint64_t v25 = (((2 * (v24 + v23)) | 0x6AC7AA90CD110E98) - (v24 + v23) + 0x4A9C2AB7997778B4) ^ 0x2517CC4EC6ECF869;
  uint64_t v26 = v25 ^ __ROR8__(v23, 61);
  uint64_t v27 = __ROR8__(v25, 8);
  uint64_t v28 = __ROR8__((v5 - ((v4 | ~(v27 + v26)) + ((v27 + v26) | v9))) ^ v7, 8);
  uint64_t v29 = (v5 - ((v4 | ~(v27 + v26)) + ((v27 + v26) | v9))) ^ v7 ^ __ROR8__(v26, 61);
  uint64_t v30 = (v5 - ((v10 | ~(v28 + v29)) + ((v28 + v29) | v6))) ^ v8;
  *(unsigned char *)(v12 - 0x6BBE7547D3B34Bmemset((void *)(STACK[0x7D8] + 8), 91, 48) = ((__ROR8__(v30, 8) + (v30 ^ __ROR8__(v29, 61))) ^ 0xB1D7AB5296A4827ALL) >> (8 * ((v12 - 57) & 7));
  return (*(uint64_t (**)(void))(v11 + 8 * ((754 * (a3 + 1 == a1)) ^ a2)))();
}

uint64_t sub_10015F488(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 4);
  *(void *)(a1 + memset((void *)(STACK[0x7D8] + 8), 91, 48) = *(void *)(a2 + 8);
  return 0;
}

uint64_t sub_10015F4A0()
{
  int v3 = (v0 - 2351) | 0xA91;
  int v4 = v3 + v1 + 449993553 - 2 * ((v3 + v1 + 1087112785) & 0x667E2A3F ^ (v3 + v1 + 449993553) & 0x36) - 1938303735;
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((105
                                * (((2 * v4) & 0xF3FFD7EC ^ 0xC0FC5400)
                                 + (v4 ^ (((v3 - 526166994) & 0x1F5C9FBE) + 528596833))
                                 + 1073569472 == 972901046)) ^ v3)))();
}

uint64_t sub_10015F578(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, _DWORD *a12)
{
  *a11 = a1;
  *a12 = v12;
  return sub_1001ED8F8();
}

uint64_t sub_10015F580(uint64_t a1)
{
  int v1 = 1434876433 * (((a1 | 0x1171DC68) - a1 + (a1 & 0xEE8E2397)) ^ 0xE513E8C5);
  int v2 = *(_DWORD *)(a1 + 12) + v1;
  unsigned int v3 = *((_DWORD *)*(&off_100520A90 + (v2 ^ 0xF47)) + 83);
  unsigned int v4 = (*(_DWORD *)(a1 + 4) ^ v1) + 151858085;
  if (v4 < 0x51C4FB50 != v3 > 0xAE3B04AF) {
    BOOL v5 = v3 > 0xAE3B04AF;
  }
  else {
    BOOL v5 = v3 + 1371863888 > v4;
  }
  return (*((uint64_t (**)(void))*(&off_100520A90 + v2 - 3868)
          + (int)((v5 * (((v2 + 757537779) & 0xD2D8DDE9) - 2193)) ^ v2)
          - 1))();
}

uint64_t sub_10015F684(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15, int a16)
{
  unsigned int v19 = (a16 ^ v17) + ((83 * (v16 ^ 0x895)) ^ 0x47E0C6B2) - ((v16 ^ 0x8FC1876D) & (2 * (a16 ^ v17)));
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v18 + 8 * ((37 * (((2 * v19) & 0xE7E2FEFE ^ 0x87C08EFC) + (v19 ^ 0xB411B881) + 1279231919 != 1076954926)) ^ v16)))(a1, a2, a3, a4, a5, a6, a7, a12);
}

uint64_t sub_10015F720(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15)
{
  return (*(uint64_t (**)(void))(v16 + 8 * (((a15 == 0) * (((v15 + 617) ^ 0xCE6) - 3907)) ^ v15)))();
}

uint64_t sub_10015F778(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17, int a18)
{
  *a13 = a16;
  if (a11) {
    BOOL v20 = a18 == -557495541;
  }
  else {
    BOOL v20 = 1;
  }
  char v22 = v20 || a12 == 0;
  return (*(uint64_t (**)(void))(v19
                              + 8
                              * (((((v18 - 94) ^ v22) & 1)
                                * (((v18 - 2143) ^ 0x2A4) - 1518)) ^ (v18 + 754))))();
}

uint64_t sub_10015F7E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  STACK[0x718] = v9;
  STACK[0x380] = v10;
  unsigned int v12 = (((v8 - 1065330539) << ((-85 * (v7 ^ 0x56) - 121) ^ 0xDF)) & 0xC73EF7BE) + ((v8 - 1065330539) ^ v11);
  unint64_t v13 = *(uint64_t (**)(void))(a7
                            + 8
                            * (((((v12 == v11) ^ (-85 * (v7 ^ 0x56) + 26)) & 1)
                              * ((171 * (v7 ^ 0x656) + 1205) ^ 0x829)) ^ (171 * (v7 ^ 0x656))));
  LODWORD(STACK[0x700]) = 1393369910;
  LODWORD(STACK[0x5D4]) = v12;
  return v13();
}

uint64_t sub_10015F8D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44)
{
  return sub_1001AB940(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, (uint64_t)&a42 + 4, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44);
}

uint64_t sub_10015F8E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unsigned int a13, uint64_t a14, unsigned int a15, uint64_t a16, int a17)
{
  unsigned int v23 = 366490169 * (&a13 ^ 0x16AE5644);
  a14 = a9;
  a13 = (v19 ^ 0x76BDCB71) + ((2 * v19) & 0xED7B96E2) - 1646266464 + v23;
  a15 = v23 + 3254;
  (*(void (**)(unsigned int *))(v21 + 37576))(&a13);
  unsigned int v24 = (&a13 ^ 0xC7816049) * v22;
  a17 = (v18 ^ 0x2235E2EF) - v24 - 65671 + ((2 * v18) & 0x446BC5DE);
  a16 = a9;
  a14 = v17;
  a15 = v24 + 4063;
  uint64_t v25 = (*(uint64_t (**)(unsigned int *))(v21 + 37760))(&a13);
  return (*(uint64_t (**)(uint64_t))(v21 + 8 * ((5269 * (a13 == v20)) ^ 0x4ADu)))(v25);
}

uint64_t sub_10015F9FC(uint64_t a1)
{
  int v1 = 375636451 * ((a1 - 2047949505 - 2 * (a1 & 0x85EEC53F)) ^ 0xD6D09FB3);
  int v2 = *(_DWORD *)a1 - v1;
  uint64_t v3 = *(void *)(a1 + 8);
  unsigned int v4 = *(_DWORD *)(a1 + 4) - v1 - 1998207793;
  int v5 = v4
     + (*(_DWORD *)(v3 - 0x560E26B5DF241DE0) ^ 0xB5D9B9B)
     - ((2 * (v4 + (*(_DWORD *)(v3 - 0x560E26B5DF241DE0) ^ 0xB5D9B9B))) & 0x16BB3736)
     + 190684059;
  *(_DWORD *)(v3 - 0x560E26B5DF241DE0) = v5;
  return (*((uint64_t (**)(void))*(&off_100520A90 + v2 - 1526) + ((6132 * ((v5 ^ 0xB5D9B9Bu) < v4)) ^ v2) - 1))();
}

uint64_t sub_10015FAC0(int8x16_t a1, int8x8_t a2, uint64_t a3, char a4, char a5, uint64_t a6, char a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59)
{
  int v69 = v63 - 8;
  uint64_t v70 = (a8 + v69);
  v72.val[0].i64[0] = ((_BYTE)a8 + (_BYTE)v69) & 0xF;
  v72.val[0].i64[1] = (v67 + (_BYTE)v69) & 0xF;
  v72.val[1].i64[0] = (v66 + (_BYTE)v69) & 0xF;
  v72.val[1].i64[1] = (v65 + (_BYTE)v69) & 0xF;
  v72.val[2].i64[0] = (a5 + (_BYTE)v69) & 0xF;
  v72.val[2].i64[1] = (a4 + (_BYTE)v69) & 0xF;
  v72.val[3].i64[0] = (v62 + (_BYTE)v69 + a7) & 0xF;
  v72.val[3].i64[1] = (*(_DWORD *)(v68 - 136) + (_BYTE)v69) & 0xF;
  *(int8x8_t *)(*(void *)(v68 - 128) + v70) = veor_s8(veor_s8(veor_s8(*(int8x8_t *)(v59 + (v70 & 0xF) - 7), *(int8x8_t *)(*(void *)(v68 - 120) + v70)), veor_s8(*(int8x8_t *)(v61 + (v70 & 0xF) - 7), *(int8x8_t *)((v70 & 0xF) + v60 - 6))), vrev64_s8(vmul_s8((int8x8_t)*(_OWORD *)&vqtbl4q_s8(v72, a1), a2)));
  return (*(uint64_t (**)(void))(a59 + 8 * ((3151 * (*(_DWORD *)(v68 - 132) == v69)) ^ v64)))();
}

uint64_t sub_10015FAC8(uint64_t a1, uint64_t a2, uint64_t a3, int a4, int a5, int a6, int a7)
{
  unsigned int v9 = a4 - 32;
  uint64_t v10 = v7 + v9;
  long long v11 = *(_OWORD *)(v10 - 31);
  uint64_t v12 = a1 + v9;
  *(_OWORD *)(v12 - 15) = *(_OWORD *)(v10 - 15);
  *(_OWORD *)(v12 - 31) = v11;
  return (*(uint64_t (**)(void))(v8 + 8 * (((a5 == 32) * ((a6 + 778) ^ a7)) ^ a6)))();
}

uint64_t sub_10015FAD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,int a50)
{
  return (*(uint64_t (**)(void))(v52 + 8 * (((a50 - 2389) * (v50 == v51)) ^ (a50 + 1010))))();
}

uint64_t sub_10015FB00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  return (*(uint64_t (**)(void))(v11
                              + 8
                              * ((((((v10 - 1217) ^ (a10 == 0)) & 1) == 0) * (((v10 - 1483401683) & 0x586AE7FF) - 721)) ^ v10)))();
}

uint64_t sub_10015FB88@<X0>(int a1@<W8>, uint64_t a2, ...)
{
  va_start(va, a2);
  int v5 = (*(uint64_t (**)(void, char *, void, uint64_t))(v3 + 8 * (v4 ^ 0x1CC6)))(**(unsigned int **)(v2 + 8 * (v4 - 3632)), va, ((v4 + 186199952) & 0xF4E6CFFF ^ 0x30C2DD6)+ ((a1 - 665312130) & 0xFFFFF000 ^ 0xFCF3DFC7)+ ((2 * (a1 - 665312130)) & 0xF9E7A000), 1);
  return (*(uint64_t (**)(void))(v3 + 8 * ((63 * (((2 * v5) & 0xA3DEDE96) + (v5 ^ 0x51EF6F4B) != 1374646091)) ^ v4)))();
}

void sub_10015FC40()
{
}

uint64_t sub_10015FCA0(int *a1)
{
  unsigned int v2 = a1[1] - 31090337 * (a1 ^ 0xC7816049);
  uint64_t result = (*((uint64_t (**)(void, void (*)()))*(&off_100520A90 + (int)(v2 ^ 0x62AB4868))
            + (int)(v2 ^ 0x62AB5AD1)
            - 1))(*(&off_100520A90 + (int)(v2 - 1655392178)), sub_1001AA1C0);
  int v4 = *(_DWORD *)*(&off_100520A90 + (int)(v2 ^ 0x62AB4832));
  if (result) {
    int v4 = 847160752;
  }
  *a1 = v4;
  return result;
}

uint64_t sub_10015FD5C(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  char v11 = *(unsigned char *)(v9
                 + ((*(unsigned __int8 *)(v10
                                        + (unsigned __int16)(7 * v8
                                                           - 18867
                                                           - 960
                                                           * ((unsigned __int16)(((unsigned __int16)(7 * v8 - 18867)
                                                                                * a2) >> 16) >> 9))) ^ 0x17u)
                  * (a8 - 2347)
                  + 42660)
                 % 0x3B0);
  *(unsigned char *)(v10
           + (unsigned __int16)(7 * v8
                              - 21289
                              - 960
                              * ((unsigned __int16)(((unsigned __int16)(7 * v8 - 21289) * a2) >> 16) >> 9))) = ((v11 ^ 0xC0) + 98) ^ ((v11 << 7) | 0xB) ^ (8 * ((v11 ^ 0xC0) + 98));
  return (*(uint64_t (**)(void))(a7 + 8 * ((15 * (v8 != 119597440)) ^ a8)))();
}

uint64_t sub_10015FE24()
{
  return v0();
}

void sub_10015FE2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  __asm { BRAA            X8, X17 }
}

uint64_t sub_10015FE9C@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(a1
                              + 8
                              * ((((v2 - 330117362) * (v1 - 330117362) < ((((v3 | 0x1010) - 4432) | 0x484) ^ 0x4C4))
                                * ((v3 | 0x1010) - 4422)) | v3 | 0x1010)))();
}

uint64_t sub_10015FEF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unint64_t *a13, int a14, uint64_t a15, unsigned int a16, int a17, int a18)
{
  unsigned int v21 = 1314530549 * ((((2 * &a13) | 0x5F1E2622) - &a13 - 797905681) ^ 0x9E8695DF);
  a13 = &STACK[0x70766EB78D2F3F08];
  a14 = (v20 + 1780979931) ^ v21;
  a18 = v21 ^ 0x4EA001FB;
  a16 = -710714497 - v21;
  a15 = a12;
  uint64_t v22 = (*(uint64_t (**)(unint64_t **))(v18 + 8 * (v20 + 3544)))(&a13);
  return (*(uint64_t (**)(uint64_t))(v18
                                            + 8
                                            * (((a17 == v19 + ((v20 - 1516869505) & 0x5A699B26) - 2082)
                                              * (((v20 - 956) | 0x829) ^ 0x916)) ^ v20)))(v22);
}

uint64_t sub_10015FFEC(int a1)
{
  return (*(uint64_t (**)(void))(v3 + 8 * (int)(((23 * (a1 ^ 0x3D2) + ((a1 + 2516) ^ 0xFFFFF029)) * (v1 == v2)) ^ a1)))();
}

uint64_t sub_100160028@<X0>(unsigned int a1@<W0>, int a2@<W1>, int a3@<W2>, int a4@<W8>, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, int a20,char a21)
{
  BOOL v27 = v21 < a1;
  unsigned int v28 = v23 + ((v24 - 993) ^ a3);
  *(&a21 + (a4 - 1689347628)) = *(unsigned char *)(v26 + (v23 + a2))
                                            - ((2 * *(unsigned char *)(v26 + (v23 + a2))) & 0xC0)
                                            + 96;
  int v29 = v27 ^ (v28 < a1);
  BOOL v30 = v28 < v21;
  if (!v29) {
    BOOL v27 = v30;
  }
  return (*(uint64_t (**)(void))(v25 + 8 * ((v27 * v22) ^ v24)))();
}

uint64_t sub_1001600A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,int a50)
{
  return (*(uint64_t (**)(void))(v50
                              + 8 * (((STACK[0x638] == 0x46197683F7D18950) * ((a50 - 1502) ^ 0x3E7)) ^ (a50 - 1174))))();
}

uint64_t sub_100160104()
{
  return sub_10018A7E0();
}

uint64_t sub_100160118(uint64_t a1)
{
  uint64_t v7 = (v4 + v2);
  long long v8 = *(_OWORD *)(v1 + v7 - 15);
  long long v9 = *(_OWORD *)(v1 + v7 - 31);
  uint64_t v10 = a1 + v7;
  *(_OWORD *)(v10 - 15) = v8;
  *(_OWORD *)(v10 - 31) = v9;
  LODWORD(v10) = ((v5 - 452) | 0x880) - 2200 != (v3 & 0xFFFFFFE0);
  return (*(uint64_t (**)(void))(v6 + 8 * (int)(((4 * v10) | (32 * v10)) ^ (v5 + 1425))))();
}

uint64_t sub_100160178(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,int a49)
{
  int v49 = *(_DWORD *)(a1 + 36) - 1761959447 * (((a1 | 0x90A94053) - (a1 | 0x6F56BFAC) + 1867956140) ^ 0x310E8197);
  unsigned int v50 = 673918253 * (v55 ^ 0x9A481BA8);
  unsigned int v56 = v50 ^ 0xCAC2E101;
  int v57 = v49 + v50 - 452158361;
  int v58 = &STACK[0x560E26B5DF241F20];
  (*((void (**)(unsigned char *))*(&off_100520A90 + v49 - 175) + (v49 ^ 0x12C7) - 1))(v55);
  return sub_1001CC348((uint64_t)&v53, v51, 661718009, 3633248191, (uint64_t)v54, 640, v49 ^ 0xAE3u, 2584898236, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49);
}

uint64_t sub_10016042C@<X0>(int a1@<W1>, int a2@<W2>, int a3@<W3>, int a4@<W4>, int a5@<W5>, int a6@<W8>)
{
  int v12 = v8;
  int v14 = v10;
  int v15 = LODWORD(STACK[0x684]) ^ 0x4B1CCE05;
  int v16 = STACK[0x624];
  int v17 = LODWORD(STACK[0x620]) - (STACK[0x624] & 0x727EB41A);
  int v18 = LODWORD(STACK[0x620]) + 1;
  int v19 = a6 - 1287624001;
  LODWORD(STACK[0x67C]) = 1287624001 - a6;
  int v20 = v17 - 536520973;
  LODWORD(STACK[0x6E0]) += 208;
  LODWORD(STACK[0x6D8]) += 208;
  LODWORD(STACK[0x624]) = v16 + 2;
  LODWORD(STACK[0x688]) = v9 - 1;
  LODWORD(STACK[0x680]) = STACK[0x6F4];
  LODWORD(STACK[0x6F4]) = v6;
  int v21 = STACK[0x6C8];
  LODWORD(STACK[0x700]) = STACK[0x6F0];
  int v22 = STACK[0x6C4];
  LODWORD(STACK[0x6F0]) = v7;
  int v24 = STACK[0x690];
  LODWORD(STACK[0x684]) = STACK[0x6EC];
  LODWORD(STACK[0x620]) = v18;
  LODWORD(STACK[0x6EC]) = STACK[0x68C];
  int v25 = STACK[0x698];
  LODWORD(STACK[0x670]) = v22;
  int v26 = v15;
  int v27 = v25;
  int v28 = v21;
  int v29 = STACK[0x6A0];
  int v30 = (LODWORD(STACK[0x6A0]) - 1714) | 0x406;
  LODWORD(STACK[0x614]) = v30;
  HIDWORD(v32) = a3 ^ 0xFFFFFFF7;
  LODWORD(v32) = v30 ^ a3 ^ 0xFFD125A7;
  int v31 = v32 >> 6;
  HIDWORD(v32) = a3 ^ 0x137;
  LODWORD(v32) = a3 ^ 0xFFD12000;
  int v33 = v32 >> 11;
  unsigned int v34 = v25 ^ 0xFFD12137;
  unsigned int v35 = ((v26 ^ 0xF1575E7) & (v25 ^ 0xFFD12137))
      + 282658063
      - ((2 * ((v26 ^ 0xF1575E7) & (v25 ^ 0xFFD12137))) & 0x21B20A1E);
  HIDWORD(v32) = v26 ^ 0xFFFFFFE7;
  LODWORD(v32) = v26 ^ 0xF1575C0;
  int v36 = v32 >> 6;
  HIDWORD(v32) = a3 ^ 0x1D12137;
  LODWORD(v32) = ~a3;
  LODWORD(STACK[0x6C8]) = a3;
  int v37 = v33 ^ (v32 >> 25) ^ v31;
  HIDWORD(v32) = v26 ^ 0x5E7;
  LODWORD(v32) = v26 ^ 0xF157000;
  int v38 = v32 >> 11;
  LODWORD(STACK[0x690]) = v26;
  HIDWORD(v32) = v26 ^ 0x11575E7;
  LODWORD(v32) = v26 ^ 0xE000000;
  LODWORD(STACK[0x698]) = v28;
  LODWORD(STACK[0x6C4]) = v24;
  int v39 = v24 ^ v22;
  unsigned int v40 = (v24 ^ v22) & (a3 ^ 0xFFD12137) ^ (v26 ^ 0xF1575E7) & (v28 ^ 0xFFD12137);
  int v41 = v38 ^ (v32 >> 25) ^ v36;
  unsigned int v42 = LODWORD(STACK[0x604])
      + (LODWORD(STACK[0x680]) ^ 0x83891297)
      - 1846162402
      - ((2 * (LODWORD(STACK[0x604]) + (LODWORD(STACK[0x680]) ^ 0x83891297))) & 0x23EB983C);
  unsigned int v43 = (v40 + (v35 ^ 0xEF26FAF0 ^ v40) + 1) ^ ((v35 ^ 0xEF26FAF0) + 1);
  unsigned int v44 = ((v43 + 282658063 - ((2 * v43) & 0x21B20A1E)) ^ v35) + v40;
  unsigned int v45 = (v11 ^ 0x745326C3) - ((2 * (v11 ^ 0x745326C3) + 107943916) & 0xF0AADA76) - 74647247;
  int v46 = a4 + (v45 ^ 0x57B60D19);
  LODWORD(STACK[0x610]) = v26 ^ 0xF1575E7;
  LODWORD(STACK[0x5FC]) = v28 ^ 0xFFD12137;
  LODWORD(STACK[0x608]) = a3 ^ 0xFFD12137;
  unsigned int v47 = (a3 ^ 0xFFD12137) & v34 ^ v22 ^ (a3 ^ 0xFFD12137) & (v28 ^ 0xFFD12137) ^ v39 & (v26 ^ 0xF1575E7);
  int v48 = a5;
  int v49 = (v12 ^ 0x42E85C9A) - ((2 * (v12 ^ 0x42E85C9A) + 7280620) & 0xFFD270);
  unsigned int v50 = ((2 * ((v11 ^ 0x745326C3) + 53971958)) & 0xEAF9FF0A) + (((v11 ^ 0x745326C3) + 53971958) ^ 0x757CFF85);
  unsigned int v51 = ((a5 ^ 0x30535613) + (a5 ^ 0xCFACA9EC ^ v41) + 1) ^ ((v12 ^ 0xBD17A365) + (v12 ^ 0x42E85C9A ^ v41) + 1);
  unsigned int v52 = a1 ^ 0xAC60E013;
  unsigned int v53 = v51 ^ ((v14 ^ v11 ^ v37 ^ 0x95FC1E01) + (v41 ^ 0x6A03E1FE ^ v14 ^ v11 ^ v37) + 1);
  unsigned int v54 = v50 + (a1 ^ 0xAC60E013) + (v45 ^ 0xF8556D3B);
  unsigned int v55 = v45 ^ v14 ^ 0xE605AA06;
  int v56 = v55 - v50 - ((2 * (v55 - v50) + 1794768650) & 0x656AC1AE);
  int v57 = v49 - 2085128914;
  int v58 = v48 ^ 0x4FD340D4 ^ (v49 - 2085128914);
  int v59 = ((v49 - 2085128914) ^ 0x7F8016C7)
      + v58
      - 1535925987
      - ((2 * (((v49 - 2085128914) ^ 0x7F8016C7) + v58 + 1)) & 0x48E74238);
  int v60 = ((2 * (v49 - 2085128914)) ^ 0xFFD270) + v19;
  int v61 = (v56 - 1473093540) ^ v45;
  unsigned int v62 = ((v46 + v55 + 340340945) ^ 0x79FF7A9F) - 24182792 + ((2 * (v46 + v55 + 340340945)) & 0xF3FEF53E);
  unsigned int v63 = ((2 * (a2 + (v57 ^ 0x2F9C891A) + v58 + 7900575)) & 0xDFEFB75E)
      + ((a2 + (v57 ^ 0x2F9C891A) + v58 + 7900575) ^ 0xEFF7DBAF);
  int v64 = v59 ^ v57;
  unsigned int v65 = ((v57 ^ 0xD06376E5) + (v57 ^ 0xD04DA82D ^ v44 ^ v27) + 1) ^ ((v61 ^ v47 ^ 0x95E9E7D6)
                                                                   + (v61 ^ v47 ^ 0x95C7391E ^ v44 ^ v27)
                                                                   + 1) ^ ((v59 ^ 0x5B8C5EE3)
                                                                         + (v59 ^ 0x5BA2802B ^ v44 ^ v27)
                                                                         + 1);
  unsigned int v66 = ((2 * (v63 + 268969041 + (v59 ^ 0xA473A11C))) & 0xF7FFADD4)
      + ((v63 + 268969041 + (v59 ^ 0xA473A11C)) ^ 0x7BFFD6EA);
  unsigned int v67 = v62 + ((v56 - 1473093540) ^ 0x32B560D7);
  unsigned int v68 = v67 - 468329509;
  unsigned int v69 = v62 + ((v67 - 1656515008) ^ 0xEA2DEF29) - 986575847 + ((2 * (v67 - 468329509) + 1918596298) & 0xD45BDE52);
  uint64_t v70 = (char *)*(&off_100520A90 + (v29 ^ 0x734u)) - 8;
  int v71 = *(_DWORD *)&v70[4 * ((43 * (v20 ^ 0x393F5A15u) + 3010) % 0xC0)];
  LODWORD(v70) = *(_DWORD *)&v70[4 * (43 * (v20 ^ 0x393F5A37u) % 0xC0)];
  unsigned int v72 = ((v20 ^ 0x32E34FF5)
       + (v20 ^ 0x393F5A39)
       - 1093083056
       - ((2 * ((v20 ^ 0x32E34FF5) + (v20 ^ 0x393F5A39) + 1)) & 0x7DB1C09E)) ^ 0x8724B78B ^ v71;
  int v73 = STACK[0x6B8];
  int v74 = STACK[0x6D0];
  int v75 = STACK[0x700];
  unsigned int v76 = LODWORD(STACK[0x67C]) + LODWORD(STACK[0x6AC]) + (v47 ^ 0xF1575E7) + v54;
  LODWORD(STACK[0x640]) = v54;
  unsigned int v77 = v76 + v53;
  unint64_t v78 = STACK[0x708];
  unsigned int v79 = LODWORD(STACK[0x6E0]) % 0x11B;
  unsigned int v80 = v77 + (*(_DWORD *)(STACK[0x708] + 4 * (LODWORD(STACK[0x6D8]) % 0x11B)) ^ 0xD486A589) + 713233182 + v72;
  LODWORD(STACK[0x634]) = v80;
  unsigned int v81 = *(_DWORD *)(v78 + 4 * v79) ^ 0xD486A589;
  LODWORD(v78) = v60;
  LODWORD(STACK[0x63C]) = v60;
  LODWORD(STACK[0x700]) = v52
                        - v60
                        + LODWORD(STACK[0x6B0])
                        + v37
                        + v81
                        + v65
                        + 232089677
                        + (((v70 ^ 0xBED8E04F) + 536929007) ^ 0x53D5FEB5);
  int v82 = STACK[0x6F0];
  HIDWORD(v32) = LODWORD(STACK[0x6F0]) ^ 1;
  LODWORD(v32) = LODWORD(STACK[0x6F0]) ^ 0x8066C4BC;
  int v83 = v32 >> 2;
  HIDWORD(v32) = LODWORD(STACK[0x6F0]) ^ 0x26C4BD;
  LODWORD(v32) = LODWORD(STACK[0x6F0]) ^ 0x80400000;
  int v84 = v32 >> 22;
  HIDWORD(v32) = LODWORD(STACK[0x6F0]) ^ 0x4BD;
  LODWORD(v32) = LODWORD(STACK[0x6F0]) ^ 0x8066C000;
  int v85 = (v32 >> 13) ^ v83 ^ v84;
  LODWORD(STACK[0x66C]) = v85;
  LODWORD(STACK[0x68C]) = v42;
  v42 ^= 0x91F5CC1E;
  HIDWORD(v32) = ~LODWORD(STACK[0x6F4]);
  LODWORD(v32) = LODWORD(STACK[0x6F4]) ^ 0x83891294;
  int v86 = v32 >> 2;
  HIDWORD(v32) = LODWORD(STACK[0x6F4]) ^ 0x1297;
  LODWORD(v32) = LODWORD(STACK[0x6F4]) ^ 0x83890000;
  int v87 = (v32 >> 13) ^ v86;
  HIDWORD(v32) = LODWORD(STACK[0x6F4]) ^ 0x91297;
  LODWORD(v32) = LODWORD(STACK[0x6F4]) ^ 0x83838383;
  unsigned int v88 = LODWORD(STACK[0x6F4]) ^ 0x83891297;
  unsigned int v89 = LODWORD(STACK[0x6EC]) ^ 0x91F5CC1E;
  unsigned int v90 = (v74 ^ 0x8066C4BD ^ v75 ^ 0x8066C4BD) & v88 ^ (v74 ^ 0x8066C4BD) & v42 ^ (v82 ^ 0x8066C4BD) & v42 ^ v89 & (v82 ^ v75);
  LODWORD(STACK[0x6D0]) = v75;
  LODWORD(STACK[0x6B8]) = v74;
  LODWORD(STACK[0x5E8]) = v82 ^ 0x8066C4BD;
  LODWORD(STACK[0x5F0]) = v42;
  LODWORD(STACK[0x5EC]) = v89;
  unsigned int v91 = (v74 ^ 0x8066C4BD) & (v75 ^ 0x8066C4BD) ^ (v82 ^ 0x8066C4BD) & (v74 ^ v75) ^ v89 & v88 ^ v42 & v88 ^ v89 & v42;
  LODWORD(STACK[0x660]) = v91;
  unsigned int v92 = v66 - ((2 * v66 + 1358901816) & 0xEFE62262) - 1603098035;
  LODWORD(STACK[0x680]) = ((v64 ^ v92 ^ 0x3E3C6C8) + (v64 ^ v92 ^ 0xFC1C3937 ^ v87 ^ (v32 >> 22)) + 1) ^ ((v92 ^ 0x880CEECE) + (v87 ^ (v32 >> 22) ^ 0x77F31131 ^ v92) + 1) ^ ((v61 ^ 0x712FD2BB ^ v85 ^ 0xEBD3408A) + (v87 ^ (v32 >> 22) ^ 0x142CBF75 ^ v61 ^ 0x712FD2BB ^ v85) + 1);
  LODWORD(STACK[0x65C]) = v69;
  unsigned int v93 = ((v67 + 1075690193 - 2 * ((v67 - 336530065) & 0x142CBF77 ^ (v67 - 468329509) & 2) - 1517) ^ v61 ^ 0x712FD2BB)
      + 2 * v69
      - 1473534659
      - ((2
        * (((v67 + 1075690193 - 2 * ((v67 - 336530065) & 0x142CBF77 ^ (v67 - 468329509) & 2) - 1517) ^ v61 ^ 0x712FD2BB)
         + 2 * v69
         + 1176850050)) & 0xC40CAD76);
  LODWORD(STACK[0x650]) = v66 + v63;
  unsigned int v94 = (v64 ^ v92 ^ 0xFC1C3937) + 2 * (v66 + v63) - 373885264;
  unsigned int v95 = ((2 * v94) & 0xFBD65BE2) + (v94 ^ 0xFDEB2DF1);
  int v96 = (v91 ^ 0x620656BB ^ (v67 + 1064529730) ^ v93)
      - 1842532260
      - ((2 * (v91 ^ 0x620656BB ^ (v67 + 1064529730) ^ v93)) & 0x245A60B8);
  LODWORD(STACK[0x67C]) = (-34918927 - v95 + ((v95 + 34918927) ^ v90)) ^ ((v90 ^ (v66 + 1006768879)) - v66 - 1006768879) ^ ((v96 ^ 0x6DD2CFA3) + (v90 ^ 0x922D305C ^ v96) + 1);
  unsigned int v97 = v69 + v67 - 468329509;
  unsigned int v98 = ((2 * ((v93 ^ 0x620656BB) - v97 + 26199384)) & 0xEFEFDBDC)
      + (((v93 ^ 0x620656BB) - v97 + 26199384) ^ 0xF7F7EDEE);
  unsigned int v99 = v66 + v63 + v66;
  unsigned int v100 = v95 - (v99 + 1336443841);
  unsigned int v101 = v66 + v100;
  int v102 = (v101 - 589178248) ^ (v78 - (v99 + 1336443841) + 15741546);
  unsigned int v103 = v102 + 2055695800 - ((2 * v102) & 0xF50EDB70);
  int v104 = v101 + v100 + 1612718007 - ((2 * (v101 + v100 + 1612718007) + 994247828) & 0x26490CA4);
  int v105 = v68 + 232912241 + v98 + 2139086816;
  unsigned int v106 = v105 + v98 + 2139086816;
  int v107 = (v105 - 704393176) ^ (v54 - v97 + 1105046359);
  int v108 = STACK[0x670];
  LODWORD(STACK[0x6B0]) = ((v107 + (LODWORD(STACK[0x670]) ^ 0xF1575E7)) ^ 0xD5F769C7)
                        + 1876481664
                        + ((2 * (v107 + (LODWORD(STACK[0x670]) ^ 0xF1575E7))) & 0xABEED38E);
  unsigned int v109 = v97 - ((2 * v97 - 588418794) & 0xA6F3907A);
  unsigned int v110 = v106 + 51;
  unsigned int v111 = v98 + 508610365 - ((2 * v98 - 1476031052) & 0x949C179A) + 2922;
  int v112 = 2 * (v106 + 51);
  int v113 = v111 ^ v108 ^ (v110 - ((v112 + 488113230) & 0x1E2AEBCE) + 1839298574);
  LODWORD(v78) = v100 - ((2 * v100 - 642451294) & 0xB17B1692) - 979892326;
  v104 -= 1329198948;
  int v114 = ((v104 ^ 0x6CDB79AD) + (v27 ^ 0x6CF5A765 ^ v104) + 1) ^ ((v78 ^ 0x274274B6) + (v27 ^ 0x276CAA7E ^ v78) + 1) ^ ((v113 ^ 0x35B1F432) + (v27 ^ 0x359F2AFA ^ v113) + 1);
  unsigned int v115 = v99 - ((2 * (v99 + 1336443841) - 1569255214) & 0xF50EDB70);
  int v116 = v78 ^ 0x4B990D1B ^ v104;
  unsigned int v117 = ((2 * (v107 - 1228702806)) & 0xFEBBDF2E) + ((v107 - 1228702806) ^ 0x7F5DEF97);
  LODWORD(STACK[0x6AC]) = (v103 ^ 0x85789247) - 1925615410 + v114;
  unsigned int v118 = v117 - 2136862615 + ((v110 - ((v112 - 1122499506) & 0x949C179A) + 685379060) ^ v111);
  unsigned int v119 = v118 - 1057385148 - ((2 * v118) & 0x81F32A88);
  int v120 = v103 ^ (v115 - 1687455262);
  v103 ^= 0x7A876DB8u;
  int v121 = ((v103 - 1228702806) ^ 0x3FFDDF99) - 750324248 + ((2 * (v103 - 1228702806)) & 0x7FFBBF32);
  unsigned int v122 = v117 + v98;
  int v123 = (((v109 - 1041203000) ^ 0x5379C83D ^ v107) + v107) ^ (v98 - 409070380);
  unsigned int v124 = ((2 * v123) & 0xFEF4FECE) + (v123 ^ 0x7F7A7F67);
  unsigned int v125 = ((2 * ((v120 + v103) ^ (v100 - 2139764149))) & 0xEEBD6ADC) + ((v120 + v103) ^ (v100 - 2139764149) ^ 0x775EB56E);
  int v126 = (v117 + v98 - ((2 * (v117 + v98) + 8407674) & 0xCD897A) - 391714310) ^ v73 ^ v119;
  unsigned int v127 = v100 + v121;
  int v128 = v116 + v121;
  unsigned int v129 = ((2 * (v103 - 2138462770)) & 0xF2CFFA6E) + ((v103 - 2138462770) ^ 0x7967FD37);
  unsigned int v130 = LODWORD(STACK[0x684]) ^ 0x91F5CC1E;
  int v131 = v130 ^ (v127 + 1831924938);
  int v132 = v130 ^ (v128 - 323278209);
  v127 -= 1753005338;
  unsigned int v133 = v131 - v127;
  unsigned int v134 = v125 + v127 - 375685162 + (~(2 * (v125 + v127) + 480114924) | 0xE966F941);
  v128 += 177126019;
  int v135 = (v133 + 710037020) ^ (v132 - v128 + 500404228) ^ ((v126 ^ 0x3F066ABB)
                                                         + (LODWORD(STACK[0x684]) ^ 0x510C595A ^ v126)
                                                         + 1);
  unsigned int v136 = v107 - ((2 * v107 + 18041756) & 0xB87BF842) - 590896657;
  unsigned int v137 = ((2 * v136) & 0xE3EFF9E6 ^ 0x23856046) + (v136 ^ 0xEE3D4DD0);
  LODWORD(STACK[0x664]) = v124 + v122;
  int v138 = (v124 - v137 + 1920826764) ^ (v124 + v122 - 389700138);
  LODWORD(STACK[0x684]) = v138;
  unsigned int v139 = (v73 ^ 0x8066C4BD) + v80 + (v136 ^ 0x5C3DFC21) - 1049022566 + v138;
  unsigned int v140 = ((2 * (v129 - 2036858167)) & 0xF8A5CE3E ^ 0x80A48A04) + ((v129 - 2036858167) ^ 0x3FA5AA1D);
  unsigned int v141 = ((2 * (v134 ^ (v125 - v140 + 83112369))) & 0xC917FCBA ^ 0x1104BA)
       + (v134 ^ (v125 - v140 + 83112369) ^ 0x6FC77D02);
  LODWORD(STACK[0x62C]) = v141;
  LODWORD(STACK[0x648]) = ((v136 ^ 0xA3C203DE) + (v119 ^ 0xC0F99544) + 1) ^ (v137 - 871970567);
  unsigned int v142 = v139 - ((2 * v139) & 0x881377C4) + 1141488610;
  LODWORD(STACK[0x670]) = ((2 * ((v134 ^ 0x8B4C835F) + 1571000102)) & 0x89EF527E)
                        + (((v134 ^ 0x8B4C835F) + 1571000102) ^ 0x44F7A93F);
  LODWORD(STACK[0x628]) = (v140 + 1101782733) ^ (v128 - v129 + 1536453939);
  unint64_t v143 = STACK[0x718];
  unsigned int v144 = 662 * (HIBYTE(v142) & 0xF ^ 4) + 439568;
  int v145 = LODWORD(STACK[0x700]) - v129 - v141 + v135 - 1540474749;
  unsigned int v146 = v145 + 339145046 - ((2 * v145) & 0x286DE2AC);
  unsigned int v147 = 662 * (HIWORD(v142) & 0xF ^ 9) + 439568;
  int v148 = ((*(unsigned __int8 *)(STACK[0x718] + (v144 - 965 * ((4450744 * (unint64_t)v144) >> 32))) ^ 0xD3) << 8) ^ ((*(unsigned __int8 *)(STACK[0x718] + (662 * ((v142 >> 28) ^ 4) + 439568 - 965 * ((4450744 * (unint64_t)(662 * ((v142 >> 28) ^ 4) + 439568)) >> 32))) ^ 0xD3) << 12) | *(unsigned __int8 *)(STACK[0x718] + (v147 - 965 * ((4450744 * (unint64_t)v147) >> 32))) ^ 0xD3;
  unsigned int v149 = 662 * (((unsigned __int16)v142 >> 12) ^ 0xB) + 439568;
  int v150 = (v148 << 8) ^ ((*(unsigned __int8 *)(STACK[0x718]
                                            + (662 * ((v142 >> 20) & 0xF)
                                                           + 439568
                                                           - 965
                                                           * ((4450744
                                                             * (unint64_t)(662 * ((v142 >> 20) & 0xF) + 439568)) >> 32))) ^ 0xD3) << 12);
  unsigned int v151 = 662 * ((v142 >> 8) & 0xF ^ 0xB) + 439568;
  unsigned int v152 = v151 - 965 * ((4450744 * (unint64_t)v151) >> 32);
  unsigned int v153 = 662 * ((v142 >> 4) ^ 0xE) + 439568;
  int v154 = ((v150 | *(unsigned __int8 *)(STACK[0x718] + v152) ^ 0xD3) << 8) ^ ((*(unsigned __int8 *)(STACK[0x718]
                                                                                                 + (v149 - 965 * ((4450744 * (unint64_t)v149) >> 32))) ^ 0xD3) << 12);
  int v155 = *(unsigned __int8 *)(STACK[0x718]
                            + (662 * (v142 & 0xF ^ 2)
                                           + 439568
                                           - 965
                                           * ((4450744 * (unint64_t)(662 * (v142 & 0xF ^ 2) + 439568)) >> 32))) ^ 0xD3;
  unsigned int v156 = (((v155 - 1534202369 - 2 * v155) ^ 0x5B721200) + 1) ^ (v155 - 1534202369 - 2 * v155) ^ (v154
                                                                                               - ((v155
                                                                                                 - 1534202369
                                                                                                 - 2 * v155) ^ 0xA48DEDFF | v154));
  unsigned int v157 = (v156 ^ 0xA48DEDFF)
       + v154
       + 1881818363
       - 2 * (((v156 ^ 0xA48DEDFF) + v154) & 0x702A44FB ^ (v156 ^ 0xA48DEDFF) & 2);
  unsigned int v158 = 662 * (HIBYTE(v146) & 0xF ^ 4) + 439568;
  unsigned int v159 = 662
       * ((((((2 * v146) ^ 0xD7921D53)
           + (v146 ^ 0x1436F156)
           - ((2 * (((2 * v146) ^ 0xD7921D53) + (v146 ^ 0x1436F156))) & 0x2AC)
           + 342) ^ v146) & 0x298)
        + ((v146 >> 20) & 0xF ^ 3));
  int v160 = ((*(unsigned __int8 *)(STACK[0x718] + (v158 - 965 * ((4450744 * (unint64_t)v158) >> 32))) ^ 0xD3) << 8) ^ ((*(unsigned __int8 *)(STACK[0x718] + (662 * ((v146 >> 28) ^ 1) + 439568 - 965 * ((4450744 * (unint64_t)(662 * ((v146 >> 28) ^ 1) + 439568)) >> 32))) ^ 0xD3) << 12);
  unsigned int v161 = 662 * (HIWORD(v146) & 0xF ^ 6) + 439568;
  int v162 = v160 | *(unsigned __int8 *)(STACK[0x718]
                                   + (v161 - 965 * ((4450744 * (unint64_t)v161) >> 32))) ^ 0xD3;
  unsigned int v163 = 662 * (~(v146 >> 12) & 0xF) + 439568;
  int v164 = (v162 << 8) ^ ((*(unsigned __int8 *)(STACK[0x718]
                                            + (v159 - 965 * ((4450744 * (unint64_t)v159) >> 32))) ^ 0xD3) << 12);
  unsigned int v165 = 662 * ((v146 >> 8) & 0xF ^ 1) + 439568;
  unsigned int v166 = 662 * ((v146 >> 4) ^ 5) + 439568;
  int v167 = v164 | *(unsigned __int8 *)(STACK[0x718]
                                   + (v165 - 965 * ((4450744 * (unint64_t)v165) >> 32))) ^ 0xD3;
  unsigned int v168 = (v167 << 8) - 197945167 - ((v167 << 9) & 0xE8673000);
  int v169 = *(unsigned __int8 *)(STACK[0x718] + (v163 - 965 * ((4450744 * (unint64_t)v163) >> 32)));
  int v170 = *(unsigned __int8 *)(STACK[0x718]
                            + (662 * (v146 & 0xF ^ 6)
                                           + 439568
                                           - 965
                                           * ((4450744 * (unint64_t)(662 * (v146 & 0xF ^ 6) + 439568)) >> 32))) ^ 0xD3;
  unsigned int v171 = v170 + 1432714639 - ((2 * v170) & 0xFFFFFF1F);
  unsigned int v172 = v168 ^ ((v169 ^ 0xD3) << 12);
  unsigned int v173 = ((v156 & 0xF ^ 0x7FEFFBF2) + (v156 & 0xF ^ 0x108CD032) + (v156 & 0xF ^ 0xC152058D) + 1) ^ 0x51CED1BD;
  unsigned int v174 = 662 * ((1596973825 - ((2 * v173) & 0x602) + (~(16 * v171) & 0xF0 | v173)) ^ 0x5F2FE301);
  int v175 = *(unsigned __int8 *)(STACK[0x718] + (v174 + 466048) % 0x3C5);
  unsigned int v176 = (v172 ^ 0xF43398B1 | v171 ^ 0x55657D8F) ^ (16
                                                  * (*(unsigned __int8 *)(STACK[0x718]
                                                                        + (v166
                                                                                       - 965
                                                                                       * ((4450744
                                                                                         * (unint64_t)v166) >> 32))) ^ 0xD3));
  int v177 = LODWORD(STACK[0x600]) ^ 0x5845498F;
  LODWORD(STACK[0x630]) = v177;
  unsigned int v178 = 662 * (v175 ^ v177);
  LOBYTE(v166) = (*(unsigned char *)(v143 + v178 % 0x3C5) >> 4) ^ 0xD;
  int v179 = (v166 - 2 * (v166 & 3) - 45) ^ *(unsigned __int8 *)(v143 + v174 % 0x3C5);
  unsigned int v180 = 662 * v179 + 466048 - 965 * ((4450744 * (unint64_t)(662 * v179 + 466048)) >> 32);
  unsigned int v181 = (v157 - 2) ^ (16
                     * (*(unsigned __int8 *)(v143
                                           + (v153 - 965 * ((4450744 * (unint64_t)v153) >> 32))) ^ 0xD3));
  int v182 = (((v181 >> 4) ^ 0x220160D3)
        + ((v181 >> 4) & 0xB ^ 0x4C660108)
        - (((v181 >> 4) ^ 0x220160D3) & 0x201004B)) ^ 0x6C666197;
  unsigned int v183 = 662 * (((v182 | v176 & 0xF0) + 296687264 - 2 * ((v182 & 0x11AF16AC | v176 & 0xA0) ^ v182 & 0xC)) ^ 0x11AF16A0);
  unsigned int v184 = 662
       * (*(unsigned __int8 *)(v143 + (v183 + 466048) % 0x3C5) ^ (16 * (*(unsigned __int8 *)(v143 + v180) ^ 0xD3)) ^ 0xD3);
  LODWORD(STACK[0x668]) = v184
                        + 466048
                        - 965 * (((8901487 * (unint64_t)(v184 + 466048)) >> 32) >> 1);
  int v185 = (*(unsigned __int8 *)(v143 + (v184 - 965 * ((4450744 * (unint64_t)v184) >> 32))) >> 4) ^ 0xD;
  int v186 = *(unsigned __int8 *)(v143 + (v178 + 466048) % 0x3C5) ^ 0xD3;
  unsigned int v187 = 662 * ((v185 + (~(2 * v185) | 0xF9) - 44) ^ *(unsigned __int8 *)(v143 + v183 % 0x3C5))
       + 466048;
  int v188 = ((v176 >> 4) & 0xF0 | (v181 >> 8) & 0xF) ^ 4;
  unsigned int v189 = 662 * ((v188 + 1634816261 - 2 * (v188 & 7 ^ (v181 >> 8) & 2)) ^ 0x61715105);
  unsigned int v190 = 662
       * (*(unsigned __int8 *)(v143 + (v189 + 466048) % 0x3C5) ^ (16
                                                                * (*(unsigned __int8 *)(v143
                                                                                      + (v187 - 965 * ((4450744 * (unint64_t)v187) >> 32))) ^ 0xD3)) ^ 0xD3);
  unsigned int v191 = v190 + 466048 - 965 * (((8901487 * (unint64_t)(v190 + 466048)) >> 32) >> 1);
  LOBYTE(v190) = (*(unsigned char *)(v143 + (v190 - 965 * ((4450744 * (unint64_t)v190) >> 32))) >> 4) ^ 0xD;
  unsigned int v192 = 662 * ((v190 - 2 * (v190 & 3) - 45) ^ *(unsigned __int8 *)(v143 + v189 % 0x3C5)) + 466048;
  int v193 = ((v172 >> 8) & 0xF0 | ((unsigned __int16)(v157 - 2) >> 12)) ^ 0x94;
  unsigned int v194 = 662 * ((v193 - 1076262573 - ((2 * v193) & 0xA6)) ^ 0xBFD98953);
  unsigned int v195 = 662
       * (*(unsigned __int8 *)(v143 + (v194 + 466048) % 0x3C5) ^ (16
                                                                * (*(unsigned __int8 *)(v143
                                                                                      + (v192 - 965 * ((4450744 * (unint64_t)v192) >> 32))) ^ 0xD3)) ^ 0xD3);
  unsigned int v196 = ((*(unsigned __int8 *)(v143
                              + v195
                              + 466048
                              - 965 * (((8901487 * (unint64_t)(v195 + 466048)) >> 32) >> 1)) ^ 0xD3) << 12) ^ ((*(unsigned __int8 *)(v143 + v191) ^ 0xD3) << 8);
  LOBYTE(v195) = (*(unsigned char *)(v143 + (v195 - 965 * ((4450744 * (unint64_t)v195) >> 32))) >> 4) ^ 0xD;
  unsigned int v197 = 662 * ((v195 - 2 * (v195 & 3) - 45) ^ *(unsigned __int8 *)(v143 + v194 % 0x3C5)) + 466048;
  unsigned int v198 = ((v172 >> 12) & 0xF0 | ((v157 - 2) >> 16) & 0xF) ^ 0x3A;
  unsigned int v199 = 662 * ((v198 + 330594239 - ((2 * v198) & 0xFFFFFF7F)) ^ 0x13B477BF);
  unsigned int v200 = v199 % 0x3C5;
  unsigned int v201 = 662
       * (*(unsigned __int8 *)(v143 + (v199 + 466048) % 0x3C5) ^ (16
                                                                * (*(unsigned __int8 *)(v143
                                                                                      + (v197 - 965 * ((4450744 * (unint64_t)v197) >> 32))) ^ 0xD3)) ^ 0xD3);
  unsigned int v202 = v201 + 466048 - 965 * (((8901487 * (unint64_t)(v201 + 466048)) >> 32) >> 1);
  LOBYTE(v201) = (*(unsigned char *)(v143 + (v201 - 965 * ((4450744 * (unint64_t)v201) >> 32))) >> 4) ^ 0xD;
  unsigned int v203 = 662 * ((v201 - 2 * (v201 & 3) - 45) ^ *(unsigned __int8 *)(v143 + v200)) + 466048;
  unsigned int v204 = (HIWORD(v168) & 0xF0 | ((v157 - 2) >> 20) & 0xF) ^ 0x32;
  unsigned int v205 = 662 * ((v204 - 1973728345 - 2 * (v204 & 0xAF ^ ((v157 - 2) >> 20) & 8)) ^ 0x8A5B4BA7);
  unsigned int v206 = 662
       * (*(unsigned __int8 *)(v143 + (v205 + 466048) % 0x3C5) ^ (16
                                                                * (*(unsigned __int8 *)(v143
                                                                                      + (v203 - 965 * ((4450744 * (unint64_t)v203) >> 32))) ^ 0xD3)) ^ 0xD3);
  unsigned int v207 = v206 + 466048 - 965 * (((8901487 * (unint64_t)(v206 + 466048)) >> 32) >> 1);
  LOBYTE(v206) = (*(unsigned char *)(v143 + (v206 - 965 * ((4450744 * (unint64_t)v206) >> 32))) >> 4) ^ 0xD;
  unsigned int v208 = 662 * ((v206 - 2 * (v206 & 3) - 45) ^ *(unsigned __int8 *)(v143 + v205 % 0x3C5)) + 466048;
  unsigned int v209 = ((v168 >> 20) & 0xF0 | ((v157 - 2) >> 24) & 0xF) ^ 0x40;
  unsigned int v210 = 662 * ((v209 - 1164961409 - 2 * (v209 & 0x7F)) ^ 0xBA90197F);
  unsigned int v211 = v210 % 0x3C5;
  unsigned int v212 = 662
       * (*(unsigned __int8 *)(v143 + (v210 + 466048) % 0x3C5) ^ (16
                                                                * (*(unsigned __int8 *)(v143
                                                                                      + (v208 - 965 * ((4450744 * (unint64_t)v208) >> 32))) ^ 0xD3)) ^ 0xD3);
  unsigned int v213 = v212 + 466048 - 965 * (((8901487 * (unint64_t)(v212 + 466048)) >> 32) >> 1);
  LOBYTE(v212) = (*(unsigned char *)(v143 + (v212 - 965 * ((4450744 * (unint64_t)v212) >> 32))) >> 4) ^ 0xD;
  unsigned int v214 = 662 * ((v212 - 2 * (v212 & 3) - 45) ^ *(unsigned __int8 *)(v143 + v211)) + 466048;
  unsigned int v215 = 662 * ((HIBYTE(v168) & 0xF0 | ((v157 - 2) >> 28)) ^ 0xF7) + 466048;
  unsigned int v216 = 662
       * (*(unsigned __int8 *)(v143 + (v215 - 965 * ((4450744 * (unint64_t)v215) >> 32))) ^ (16 * (*(unsigned __int8 *)(v143 + (v214 - 965 * ((4450744 * (unint64_t)v214) >> 32))) ^ 0xD3)) ^ 0xD3)
       + 466048;
  unsigned int v217 = v216 - 965 * (((8901487 * (unint64_t)v216) >> 32) >> 1);
  unsigned int v218 = v186 - ((2 * v186) & 0xFFFFFFDF) - 922687249;
  int v219 = v218 ^ (16 * (*(unsigned __int8 *)(v143 + LODWORD(STACK[0x668])) ^ 0xD3));
  unsigned int v220 = 662 * (~(16 * v218) & 0xF0 | v173) + 218460;
  unsigned int v221 = (662 * (v182 | v219 & 0xF0 ^ 0xE0u) + 218460) % 0x3C5;
  unsigned int v222 = v219 ^ 0x61962D47 ^ v196;
  unsigned int v223 = v222 ^ ((*(unsigned __int8 *)(v143 + v202) ^ 0xD3) << 16);
  unsigned int v224 = 662 * (((v222 >> 4) & 0xF0 | (v181 >> 8) & 0xF) ^ 0x54) + 218460;
  unsigned int v225 = v224 - 965 * ((4450744 * (unint64_t)v224) >> 32);
  unsigned int v226 = 662 * (((v196 >> 8) & 0xF0 | ((unsigned __int16)(v157 - 2) >> 12)) ^ 4) + 218460;
  unsigned int v227 = v223 ^ ((*(unsigned __int8 *)(v143 + v207) ^ 0xD3) << 20);
  unsigned int v228 = 662 * (((v223 >> 12) & 0xF0 | ((v157 - 2) >> 16) & 0xF) ^ 0x6A) + 218460;
  unsigned int v229 = v228 - 965 * ((4450744 * (unint64_t)v228) >> 32);
  unsigned int v230 = v227 ^ ((*(unsigned __int8 *)(v143 + v213) ^ 0xD3) << 24);
  unsigned int v231 = 662 * ((HIWORD(v227) & 0xF0 | ((v157 - 2) >> 20) & 0xF) ^ 0x92) + 218460;
  unsigned int v232 = v230 ^ ((*(unsigned __int8 *)(v143 + v217) ^ 3) << 28);
  unsigned int v233 = 662 * (((v230 >> 20) & 0xF0 | ((v157 - 2) >> 24) & 0xF) ^ 0x80) + 218460;
  unsigned int v234 = v233 - 965 * ((4450744 * (unint64_t)v233) >> 32);
  unsigned int v235 = 662 * ((HIBYTE(v232) & 0xF0 | ((v157 + 2147483646) >> 28)) ^ 0xAF) + 218460;
  unsigned int v236 = v235 - 965 * ((4450744 * (unint64_t)v235) >> 32);
  int v237 = *(unsigned __int8 *)(v143 + v220 % 0x3C5);
  int v238 = v237 ^ (16 * (*(unsigned __int8 *)(v143 + v221) ^ 0xD3));
  unsigned int v239 = v238 ^ ((*(unsigned __int8 *)(v143 + v225) ^ 0xD3) << 8);
  int v240 = v239 ^ ((*(unsigned __int8 *)(v143 + (v226 - 965 * ((4450744 * (unint64_t)v226) >> 32))) ^ 0xD3) << 12);
  unsigned int v241 = v240 ^ ((*(unsigned __int8 *)(v143 + v229) ^ 0xD3) << 16);
  unsigned int v242 = v241 ^ ((*(unsigned __int8 *)(v143 + (v231 - 965 * ((4450744 * (unint64_t)v231) >> 32))) ^ 0xD3) << 20);
  unsigned int v243 = v242 ^ ((*(unsigned __int8 *)(v143 + v234) ^ 0xD3) << 24);
  unsigned int v244 = 662 * ((v243 ^ ((*(unsigned __int8 *)(v143 + v236) ^ 3) << 28)) >> 28) + 454132;
  int v245 = *(unsigned __int8 *)(v143
                            + (662 * ((v239 >> 8) & 0xF)
                                           + 454132
                                           - 965
                                           * ((4450744 * (unint64_t)(662 * ((v239 >> 8) & 0xF) + 454132)) >> 32))) ^ 0xD3 ^ ((((*(unsigned __int8 *)(v143 + (662 * (HIBYTE(v243) & 0xF) + 454132 - 965 * ((4450744 * (unint64_t)(662 * (HIBYTE(v243) & 0xF) + 454132)) >> 32))) ^ 0xD3) << 8) ^ ((*(unsigned __int8 *)(v143 + (v244 - 965 * ((4450744 * (unint64_t)v244) >> 32))) ^ 0xD3) << 12) | *(unsigned __int8 *)(v143 + (662 * (HIWORD(v241) & 0xF) + 454132 - 965 * ((4450744 * (unint64_t)(662 * (HIWORD(v241) & 0xF) + 454132)) >> 32))) ^ 0xD3) << 8) ^ ((*(unsigned __int8 *)(v143 + (662 * ((v242 >> 20) & 0xF) + 454132 - 965 * ((4450744 * (unint64_t)(662 * ((v242 >> 20) & 0xF) + 454132)) >> 32))) ^ 0xD3) << 12) ^ (16 * (*(unsigned __int8 *)(v143 + (662 * ((unsigned __int16)v240 >> 12) + 454132 - 965 * ((4450744 * (unint64_t)(662 * ((unsigned __int16)v240 >> 12) + 454132)) >> 32))) ^ 0xD3));
  unsigned int v246 = LODWORD(STACK[0x684]) - ((2 * LODWORD(STACK[0x684]) - 2132462802) & 0xC1F565F8);
  unsigned int v247 = 662 * ((v238 >> 4) ^ 0xD) + 454132;
  int v248 = STACK[0x648];
  LODWORD(STACK[0x684]) = v142 ^ LODWORD(STACK[0x648]);
  int v249 = v137 - ((2 * v137 + 678876532) & 0x64E02C02) + 1185644731;
  LODWORD(STACK[0x668]) = v249;
  unsigned int v250 = v140 - ((2 * v140 + 331415836) & 0x5F9F9982);
  unsigned int v251 = v246 + 560811155;
  int v252 = (v246 + 560811155) ^ 0x60FAB2FC;
  int v253 = LODWORD(STACK[0x664]) + 1181299964 + v252;
  int v254 = *(unsigned __int8 *)(v143 + (v247 - 965 * ((4450744 * (unint64_t)v247) >> 32)));
  LODWORD(STACK[0x638]) = (v249 ^ 0x32701601)
                        + v248
                        + v252
                        - 1474063045
                        - ((2 * ((v249 ^ 0x32701601) + v248 + v252)) & 0x50472A76);
  int v255 = STACK[0x628];
  LODWORD(STACK[0x644]) = *(unsigned __int8 *)(v143
                                             + (662 * (v237 & 0xF ^ 3)
                                                            + 454132
                                                            - 965
                                                            * ((4450744
                                                              * (unint64_t)(662 * (v237 & 0xF ^ 3u) + 454132)) >> 32))) ^ LODWORD(STACK[0x628]) ^ (16 * (v254 ^ 0xD3)) ^ (v245 << 8);
  LODWORD(STACK[0x648]) = v253 + 1627042556 - ((2 * v253) & 0xC1F565F8);
  LODWORD(STACK[0x664]) = v250 - 1179628209;
  int v256 = LODWORD(STACK[0x670]) + LODWORD(STACK[0x62C]);
  int v257 = LODWORD(STACK[0x62C]) - ((2 * LODWORD(STACK[0x62C]) + 936195700) & 0x2046E98A);
  LODWORD(STACK[0x670]) = v255
                        + ((v250 - 1179628209) ^ 0x2FCFCCC1)
                        + LODWORD(STACK[0x62C])
                        - 119497430
                        - ((2 * (v255 + ((v250 - 1179628209) ^ 0x2FCFCCC1) + LODWORD(STACK[0x62C]) - 605643974)) & 0x39F403E0);
  LODWORD(STACK[0x700]) = v251 ^ 0x70D9C639;
  LODWORD(STACK[0x680]) = v257 - 93653319 - ((2 * (v257 - 334884865)) & 0x1CC1CD74);
  LODWORD(STACK[0x67C]) = v256 - ((2 * v256 + 232645622) & 0x1CC1CD74);
  return (*(uint64_t (**)(void))(STACK[0x6F8]
                              + 8 * ((5832 * (LODWORD(STACK[0x688]) == 0)) ^ LODWORD(STACK[0x6A0]))))();
}

uint64_t sub_1001604F8(uint64_t a1, int a2, int a3)
{
  return (*(uint64_t (**)(void))(v4 + 8 * ((50 * (((v3 == a2) ^ (a3 + 27)) & 1)) ^ a3)))();
}

uint64_t sub_10016053C(int a1, int a2, uint64_t a3, void *a4, int a5, int a6)
{
  unsigned int v13 = v8 ^ (v7 + 1050) ^ *(_DWORD *)(*a4 + 4 * (a6 + v9));
  *(_DWORD *)(*a4 + 4 * (v10 + v6)) = ((v13 >> v11) | a5 ^ v7) + v7 - (a2 & (2 * ((v13 >> v11) | a5 ^ v7)));
  return (*(uint64_t (**)(void))(v12 + 8 * (int)(a1 ^ (2 * ((a6 - 1 + v9) >> 31)))))();
}

void sub_100160580()
{
}

void sub_1001605A0(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, unint64_t *a12, unsigned int a13, uint64_t a14, uint64_t a15, unint64_t *a16)
{
  a14 = a10;
  a16 = &STACK[0x72B1F83D1B5D1C8D];
  a12 = &STACK[0x5C6E4E9DBA245391];
  a13 = (a1 + 3425) ^ (1401278017
                     * ((((2 * &a12) | 0xF719FAB2) - &a12 - 2072837465) ^ 0x7FAF8BBE));
  (*(void (**)(unint64_t **))(v16 + 8 * (a1 ^ 0x1356u)))(&a12);
  JUMPOUT(0x100160654);
}

uint64_t sub_10016072C@<X0>(uint64_t a1@<X0>, int a2@<W7>, int a3@<W8>)
{
  return (*(uint64_t (**)(void))(v4 + 8 * (((((a3 - 384) ^ (a2 + 3663)) + (a3 ^ (v5 + 542))) * (v3 == a1)) ^ a3)))();
}

uint64_t sub_100160778(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unint64_t *a13, int a14, unsigned int a15)
{
  a15 = 3687 - (((&a13 | 0xA1ECD21) - (&a13 & 0xA1ECD21)) ^ 0xCD9FAD68) * v17;
  a13 = &STACK[0x75464D914B72488F];
  uint64_t v19 = (*(uint64_t (**)(unint64_t **))(v16 + 37680))(&a13);
  return (*(uint64_t (**)(uint64_t))(v16 + 8 * ((3057 * (a14 == v15)) ^ v18)))(v19);
}

uint64_t sub_100160804(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, int a20,int a21)
{
  *a12 = a1;
  uint64_t v24 = (*(uint64_t (**)(void))(v23 + 8 * (v21 + 3898)))(a21 ^ 0xDEC54B0B);
  unsigned int v25 = (v21 ^ 0x1114) - 427943949 + (a21 ^ 0xDEC54B0B) - ((2 * (a21 ^ 0xDEC54B0B)) & 0xCCFC5412);
  return (*(uint64_t (**)(uint64_t))(v23
                                            + 8
                                            * ((73
                                              * (((2 * v25) & 0xF3FFD7EC ^ 0xC0FC5400) + (v25 ^ 0x1F81C1FF) + 1073569472 != v22)) | v21)))(v24);
}

void sub_1001608B4()
{
}

uint64_t sub_1001608C4@<X0>(uint64_t a1@<X4>, int a2@<W8>)
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((v2 + a2 + 3494) ^ (198 * (a1 != 0)))))();
}

void sub_1001608EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, unsigned int a12)
{
  (*(void (**)(void))(v13 + 8 * (v12 ^ 0x1B01)))(a12);
  JUMPOUT(0x100134350);
}

uint64_t sub_1001608F8(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6
                                                     + 8
                                                     * ((52 * (v4 < a3 + ((v5 - 310) | 0x902) - v3 - 56 + 2375)) ^ v5)))(a1, a2);
}

uint64_t sub_100160938(uint64_t a1, char a2, int a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v5
                                           + 8
                                           * ((53 * (((v6 == a3) ^ (((a5 + 14) | 0x14) + a2 + 1)) & 1)) ^ a5)))(0);
}

uint64_t sub_100160984@<X0>(int a1@<W8>)
{
  BOOL v4 = (*(uint64_t (**)(void))(v3 + 8 * (v2 + 1711)))(a1 ^ (v1 + 1060) ^ (v2 - 1317) ^ 0x24Cu) == 0;
  return (*(uint64_t (**)(void))(v3 + 8 * ((v4 * (((v2 - 1317) | 0x880) - 3792)) ^ v2)))();
}

uint64_t sub_1001609DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void, uint64_t, void))(v8
                                                            + 8
                                                            * ((((((a5 ^ 0x955) + 14) & v5) == 0)
                                                              * (343 * (a5 ^ 0x955) - 1644)) ^ a5)))((v6 - v7), a2, (a5 ^ 0x955u) + 1092);
}

uint64_t sub_100160A18@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,int a43)
{
  return (*(uint64_t (**)(void))(v43 + 8 * ((((a43 - 1375) ^ 0x642) * a1) ^ (a43 - 1375))))();
}

uint64_t sub_100160A40()
{
  return (*(uint64_t (**)(void))(v2 + 8
                                   * (((v1 < ((v0 + 649) ^ 0x1118u)) * (((v0 - 3575) | 0x209) - 766)) ^ (v0 + 649))))();
}

uint64_t sub_100160A84(uint64_t a1, int a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v5 + 8 * ((((a4 ^ 0x7F3) + a4 + 63 - 2077) * (v4 == a2)) ^ a4)))();
}

uint64_t sub_100160AB4@<X0>(uint64_t a1@<X8>, uint64_t a2@<X1>)
{
  STACK[0x798] = *(void *)(a2 + 8 * v2);
  return sub_10013B2F8(a1);
}

uint64_t sub_100160ADC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  int v11 = (a6 - 2058) | 0x200;
  *int v6 = a1;
  *uint64_t v8 = (v7 + v11 - 660) ^ v16;
  int v12 = (v11 + 400) ^ 0x33A;
  uint64_t v18 = v14;
  unsigned int v19 = v11
      + 400
      + (((&v17 | 0x4127BC70) - &v17 + (&v17 & 0xBED84388)) ^ 0x5789EA34)
      * v10
      + 3460;
  (*(void (**)(uint64_t *))(v9 + 8 * (v11 + 4028)))(&v17);
  unsigned int v19 = v12
      + (((&v17 | 0xC28EDAE0) - &v17 + (&v17 & 0x3D712518)) ^ 0xD4208CA4)
      * v10
      + 2698;
  uint64_t v18 = v15;
  (*(void (**)(uint64_t *))(v9 + 8 * (v12 + 2866)))(&v17);
  return 0;
}

uint64_t sub_100160C08()
{
  *(_DWORD *)(*(void *)(v4 - 0x49230D716B37ADFCLL) + 4 * (v0 + v1 + 1)) = 809808886;
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((((v0 + v1) < 0x7FFFFFFF) * (((v2 - 1667) | 0xE80) ^ 0xAC4)) ^ (v2 - 1238))))();
}

uint64_t sub_100160C74(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(void))(v7 + 8 * ((99 * (((v6 == a4) ^ ((a6 ^ 0x8E) + 12)) & 1)) ^ a6)))();
}

uint64_t sub_100160CB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,int a21,unsigned int a22)
{
  a22 = 31090337
      * (((&a21 | 0x8563E22C) - &a21 + (&a21 & 0x7A9C1DD0)) ^ 0x42E28265)
      + 1655392376;
  uint64_t v23 = (*(uint64_t (**)(int *))(v22 + 37600))(&a21);
  return (*(uint64_t (**)(uint64_t))(v22 + 8 * ((2287 * (a21 == 847203058)) ^ 0x27Eu)))(v23);
}

uint64_t sub_100160D64()
{
  *(void *)(v2 - 136) = &STACK[0x3E8923C4CCFEA072];
  *(_DWORD *)(v2 - 128) = v1 + 673918253 * (((v2 - 136) & 0x3B9B032 | ~((v2 - 136) | 0x3B9B032)) ^ 0x660E5465) + 692;
  uint64_t v3 = (*(uint64_t (**)(uint64_t))(v0 + 8 * (v1 ^ 0x1186u)))(v2 - 136);
  return (*(uint64_t (**)(uint64_t))(v0
                                            + 8
                                            * (((*(_DWORD *)(v2 - 124) == 847203058)
                                              * ((v1 - 4195671) & 0xED4F7BFF ^ 0xED0F7CD3)) ^ v1)))(v3);
}

uint64_t sub_100160E28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, void))(v9
                                                                               + 8
                                                                               * ((7
                                                                                 * (((((((a6 ^ 0xF2D) + 265634243) & 0xF02ABFAB)
                                                                                     - v6
                                                                                     - 3439) ^ (v7 + 16)) & v8) == 0)) ^ a6 ^ 0xF2D)))(a1, a2, a3, a4, (a2 - a4));
}

uint64_t sub_100160E7C@<X0>(uint64_t a1@<X0>, int a2@<W4>, int a3@<W5>, int a4@<W8>)
{
  *(unsigned char *)(a1 + (a2 + v6)) = *(unsigned char *)(v5 + (a2 + v6));
  return (*(uint64_t (**)(void))(v7 + 8 * ((1191 * (a2 - 1 == ((v4 + a3 + 1161) ^ (a4 + 470)))) ^ (v4 + a3 + 225))))();
}

uint64_t sub_100160EC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,int a50)
{
  if (v50 == 847203058)
  {
    unsigned int v53 = (void *)STACK[0x5D0];
    uint64_t v54 = *(void *)(STACK[0x5D0] + 8);
    unsigned int v55 = (void *)STACK[0x630];
    v55[1] = v54;
    *unsigned int v55 = *v53;
    return (*(uint64_t (**)(void))(v51
                                + 8 * (int)(((v54 == 0) * (((a50 + 404) ^ 0xFFFFF770) + a50 - 1434)) ^ (a50 + 79))))();
  }
  else if (v50 == 847161006)
  {
    return (*(uint64_t (**)(void))(v51
                                + 8
                                * (((*(void *)(STACK[0x618] - 0x46197683F7D18948) != 0)
                                  * (((a50 - 970) | 0xC4) - 1704)) ^ (a50 + 803))))();
  }
  else
  {
    return (*(uint64_t (**)(void))(v51
                                + 8
                                * (((*(void *)(STACK[0x630] + 24) == 0) * ((a50 ^ 0xDB7) - 1096)) ^ (a50 - 1733))))();
  }
}

uint64_t sub_100160FBC(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(uint64_t))(v5 + 8 * ((1388 * (v7 + 1 == v6 + 24)) ^ a4)))(v4);
}

uint64_t sub_100161080(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, int a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  int v27 = v23 + 1434;
  *(void *)(v26 - 144) = a14;
  *(void *)(v26 - 112) = a22;
  *(void *)(v26 - 104) = a23;
  *(_DWORD *)(v26 - 136) = (v23 + 2443) ^ (366490169
                                         * ((((v26 - 144) | 0x3AC4E9F9) - (v26 - 144) + ((v26 - 144) & 0xC53B1600)) ^ 0x2C6ABFBD));
  *(void *)(v26 - 128) = v25;
  *(void *)(v26 - 120) = v25;
  uint64_t v28 = (*(uint64_t (**)(uint64_t))(v24 + 8 * (v23 ^ 0x1416)))(v26 - 144);
  return (*(uint64_t (**)(uint64_t))(v24
                                            + 8
                                            * ((113 * (a20 - 722997813 < ((v27 + 1958660596) & 0x8B413BF5) + 2147479050)) ^ (v27 - 1392))))(v28);
}

uint64_t sub_10016115C()
{
  return sub_10018A7E0();
}

uint64_t sub_100161170(uint64_t a1, uint64_t a2, int a3, uint64_t a4, int a5, int a6, unsigned int a7, int a8)
{
  unsigned int v11 = ((2 * (a8 + 919)) & 0xEFDEFBFE) + ((a8 + 919) ^ 0xF7EF7DFF) + 135299585;
  int v12 = ((*(unsigned __int8 *)(v9 + v11) ^ 0x60) << 24) | ((*(unsigned __int8 *)(v9 + v11 + 1) ^ 0x60) << 16) | ((*(unsigned __int8 *)(v9 + v11 + 2) ^ 0x60) << 8);
  int v13 = *(unsigned __int8 *)(v9 + v11 + 3) ^ 0x60;
  return (*(uint64_t (**)(uint64_t, void))(v8
                                                    + 8
                                                    * (a5 | (2
                                                           * (((((a5 ^ 0xB23) - 1852) ^ 0x4000017B) & (-1 - v10)) == 0)))))(a1, (v12 | v13) - 2 * ((v12 | v13) & a6 ^ v13 & a7) + a3);
}

uint64_t sub_100161228()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (int)(((((v1 + 2935) ^ 0xFFFFE6BF) + ((v1 + 2958) ^ 0x18DE)) * (v0 == 0)) | (v1 + 2958))))();
}

uint64_t sub_100161268()
{
  BOOL v4 = v1 < v0;
  if (v4 == v2 - 0x3D216B24D7E5FD83 < v0) {
    BOOL v4 = v2 - 0x3D216B24D7E5FD83 < v1;
  }
  return (*(uint64_t (**)(uint64_t))(v3 + 8 * ((27 * v4) ^ 0x3CDu)))(254);
}

uint64_t sub_1001612C8()
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (int)((((v1 + 338626125) & 0xEBD0F5DF ^ 0x1DB)
                                     * ((v2 + v0 + 1610616385) < 8)) | v1)))();
}

uint64_t sub_10016132C()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (int)(((((v1 + 430295187) & 0xE65A378A) - 1031)
                                     * (*(void *)(v0 - 0x46197683F7D18950) == 0)) ^ v1)))();
}

void sub_100161388(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, unsigned int a19, uint64_t a20,int a21)
{
  unsigned int v24 = 142545853 * ((((2 * &a19) | 0x750F77EA) - &a19 - 981974005) ^ 0x1078149A);
  a20 = a10;
  a21 = (v21 + 1301) ^ v24;
  a19 = (v22 ^ 0x7BFFFBF6) - v24 + ((2 * v22) & 0xF7FFF7EC) + ((v21 + 43) ^ 0xB67F44ED);
  (*(void (**)(unsigned int *))(v23 + 8 * (v21 ^ 0x1BD5)))(&a19);
  JUMPOUT(0x100161424);
}

uint64_t sub_100161430(uint64_t a1, uint64_t a2)
{
  LODWORD(STACK[0x308]) = v4;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3
                                                              + 8
                                                              * (((((v2 ^ 0xF7) + 1155) ^ 0xDE3) * v5) ^ (v2 - 1624))))(a1, a2, 847203058);
}

uint64_t sub_100161468@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  *(_DWORD *)(*(void *)(a2 + 96) + 24) = v3;
  unsigned int v4 = *(_DWORD *)(a1 + 4) - ((2 * *(_DWORD *)(a1 + 4) - 946915550) & 0xCCFC5412) - 901397094;
  BOOL v5 = ((2 * v4) & 0xF3FFD7EC ^ 0xC0FC5400) + (v4 ^ 0x1F81C1FF) + 1073569472 != 972901046;
  return (*(uint64_t (**)(void))(v2 + 8 * ((v5 | (16 * v5)) ^ 0x6AFu)))(0);
}

uint64_t sub_1001614FC@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,int a43)
{
  unint64_t v44 = STACK[0xA50] + (a1 ^ v43) - 0x68D79B74DF2E01EFLL;
  BOOL v45 = v44 < 0xEC4D2FC1;
  BOOL v46 = v44 > STACK[0xA48] + 3964481473u;
  if (STACK[0xA48] > 0xFFFFFFFF13B2D03ELL != v45) {
    BOOL v46 = v45;
  }
  return (*(uint64_t (**)(void))(STACK[0x258] + 8 * ((13 * v46) ^ (a43 + 2029))))();
}

uint64_t sub_100161588(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, int a6)
{
  BOOL v10 = v6 > v9;
  int v11 = ((a6 + 1145248172) & 0xBBBCE79F ^ 0xD16DF69F) + a3;
  int v12 = v10 ^ (v11 < -1803602485);
  BOOL v13 = v11 < v8;
  if (!v12) {
    BOOL v10 = v13;
  }
  return (*(uint64_t (**)(void))(v7 + 8 * ((4956 * v10) ^ a6)))();
}

uint64_t sub_100161608@<X0>(int a1@<W0>, int a2@<W1>, int a3@<W2>, int a4@<W3>, int a5@<W6>, uint64_t a6@<X8>, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55)
{
  int v61 = a5 ^ 0x1FE3;
  *(_DWORD *)(v60 - 120) = a4 + 7;
  *(_DWORD *)(v60 - 128) = a4 + 6;
  v67.val[1].i64[0] = ((_BYTE)a4 + 13) & 0xF;
  v67.val[1].i64[1] = ((_BYTE)a4 + 12) & 0xF;
  v67.val[2].i64[0] = ((_BYTE)a4 + 11) & 0xF;
  v67.val[2].i64[1] = ((_BYTE)a4 + 10) & 0xF;
  v67.val[3].i64[0] = ((_BYTE)a4 + 9) & 0xF;
  v67.val[3].i64[1] = ((_BYTE)a4 + 8) & 0xF;
  v62.i64[0] = 0x1717171717171717;
  v62.i64[1] = 0x1717171717171717;
  uint64_t v63 = ((_BYTE)v61 + (_BYTE)a3 + (_BYTE)a2 + (_BYTE)a1 - 20) & 0xF;
  v67.val[0].i64[0] = v63;
  v67.val[0].i64[1] = ((_BYTE)a4 + 14) & 0xF;
  v64.i64[0] = vqtbl4q_s8(v67, (int8x16_t)xmmword_1004A0AA0).u64[0];
  v68.val[0].i64[1] = *(_DWORD *)(v60 - 128) & 0xF;
  v68.val[1].i64[1] = ((_BYTE)a4 + 4) & 0xF;
  v68.val[2].i64[1] = ((_BYTE)a4 + 2) & 0xF;
  v68.val[3].i64[1] = a4 & 0xF;
  v68.val[0].i64[0] = *(_DWORD *)(v60 - 120) & 0xF;
  v68.val[1].i64[0] = ((_BYTE)a4 + 5) & 0xF;
  v68.val[2].i64[0] = ((_BYTE)a4 + 3) & 0xF;
  v68.val[3].i64[0] = ((_BYTE)a4 + 1) & 0xF;
  v64.i64[1] = vqtbl4q_s8(v68, (int8x16_t)xmmword_1004A0AA0).u64[0];
  int8x16_t v65 = vrev64q_s8(vmulq_s8(v64, v62));
  *(int8x16_t *)(a6 - 15 + (v61 + a3 + a2 + a1 - 998216212)) = veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v56 + v63 - 15), *(int8x16_t *)(v55- 15+ (v61 + a3 + a2 + a1 - 998216212))), veorq_s8(*(int8x16_t *)(v58 + v63 - 15), *(int8x16_t *)(v63 + v57 - 14))), vextq_s8(v65, v65, 8uLL));
  return (*(uint64_t (**)(void))(a55 + 8 * ((227 * ((v59 & 0xFFFFFFF0) == 16)) ^ v61)))();
}

uint64_t sub_100161788(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36)
{
  HIDWORD(v39) = HIDWORD(a17) - 1712968342;
  LODWORD(v39) = a3 + 2710;
  v36.i64[0] = 0x6060606060606060;
  v36.i64[1] = 0x6060606060606060;
  LODWORD(a27) = 1;
  HIDWORD(a21) = -1387020433;
  LODWORD(a26) = 66;
  HIDWORD(a20) = 3281;
  return sub_10012B3E4(3281, 1207959552, a3, a4, 1330, v36, a6, 5545, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18,
           a19,
           a20,
           a21,
           v39,
           a23,
           a24,
           a25,
           a26,
           a27,
           v38 - 16,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36);
}

uint64_t sub_100161794(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unint64_t *a13, int a14, uint64_t a15, unsigned int a16, int a17, int a18)
{
  unsigned int v21 = 1314530549 * ((2 * (&a13 & 0x5101B520) - &a13 + 788417241) ^ 0x9FF7CC17);
  a13 = &STACK[0x70766EB78D2F3F00];
  a14 = (v20 + 1780980307) ^ v21;
  a15 = a11;
  a16 = 1823625580 - v21;
  a18 = v21 ^ 0x4EA001FB;
  uint64_t v22 = (*(uint64_t (**)(unint64_t **))(v19 + 8 * (v20 + 3920)))(&a13);
  return (*(uint64_t (**)(uint64_t))(v19
                                            + 8
                                            * (((a17 == ((v20 + 2291) ^ (v18 - 2541))) * ((v20 - 196) ^ 0xAB7)) ^ v20)))(v22);
}

uint64_t sub_100161874(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, int a20)
{
  *(_DWORD *)(v25 - 136) = (v20 + 2443) ^ (366490169 * ((v25 - 144) ^ 0x16AE5644));
  *(void *)(v25 - 128) = v22;
  *(void *)(v25 - 120) = v22;
  *(void *)(v25 - 112) = v21;
  *(void *)(v25 - 104) = v24;
  *(void *)(v25 - 144) = a16;
  uint64_t v26 = (*(uint64_t (**)(uint64_t))(v23 + 8 * (v20 ^ 0x1416)))(v25 - 144);
  return (*(uint64_t (**)(uint64_t))(v23
                                            + 8
                                            * ((113 * (a20 - 722997813 < ((v20 + 1958662030) & 0x8B413BF5) + 2147479050)) ^ (v20 + 42))))(v26);
}

uint64_t sub_10016192C@<X0>(int a1@<W0>, int a2@<W5>, uint64_t a3@<X8>)
{
  int v8 = a2 - 1;
  uint64_t v9 = v5
     + ((LODWORD(STACK[0x3B0]) - 336971109) ^ 0x5FE96FC9F3F5DEF7)
     - 0x5FE96FC9F3F5DEF7
     + ((2 * (LODWORD(STACK[0x3B0]) - 336971109)) & 0x1E7EBBDEELL)
     + (a2 - 651302949);
  unint64_t v10 = 1554976193 * ((1554976193 * v9) ^ ((1554976193 * v9) >> 16));
  *(unsigned char *)(v9 - 0x3415BE982BE930ALL) = *(unsigned char *)(v4 + (v10 >> 24)) ^ *(unsigned char *)(a3 + (v10 >> 24)) ^ *(unsigned char *)(v3 + (v10 >> 24)) ^ v10 ^ (-29 * ((1554976193 * ((1554976193 * v9) ^ ((1554976193 * v9) >> 16))) >> 24));
  return (*(uint64_t (**)(void))(v7 + 8 * ((46 * (v8 == ((a1 - 2307) | 0x680) + v6)) ^ a1)))();
}

uint64_t sub_100161A14(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6
                                                     + 8
                                                     * (((((a3 - 2054161829) | 0x20404C08) - v5 - 3140)
                                                       * ((unint64_t)(v3 - a1) > 0x1F)) ^ (a3 + 1590))))(a1, v4);
}

uint64_t sub_100161A5C(uint64_t a1, int a2, int a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4
                              + 8
                              * (((*(_DWORD *)(*v5 + 4 * v6) == a2) * (((v4 + 18 + v7) & v8) + (v4 ^ a3))) ^ (v4 + 18))))();
}

uint64_t sub_100161AA0()
{
  return ((uint64_t (*)(void))STACK[0x908])();
}

uint64_t sub_100161AAC(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v1
                                                     + 8
                                                     * ((503
                                                       * ((((v2 ^ 0x480) - 1416899456) & 0x54742EFF ^ 0x895C082) == 144033511)) ^ v2 ^ 0x480)))(a1, 1743095234);
}

uint64_t sub_100161B4C@<X0>(int a1@<W8>, uint64_t a2)
{
  STACK[0x2D8] = v2;
  unsigned int v5 = a1 & 0x9708DE77;
  *(_DWORD *)(v4 - 192) = ((a1 & 0x9708DE77) - 2019209918) ^ (1314530549
                                                            * ((-669080355
                                                              - ((v4 - 192) ^ 0x74302397 | 0xD81EA4DD)
                                                              + ((v4 - 192) ^ 0x74302397 | 0x27E15B22)) ^ 0xE2D8FE7B));
  (*(void (**)(uint64_t))(v3 + 8 * (int)((a1 & 0x9708DE77) + 1109)))(v4 - 192);
  uint64_t v6 = (*(uint64_t (**)(uint64_t))(v3 + 8 * (int)(v5 + 997)))(336);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 8 * (int)(((v6 == 0) * ((v5 - 445234788) & 0x1A89BD0E ^ 0xDC5)) ^ v5)))(v6, v7, v8, v9, v10, v11, v12, v13, a2);
}

uint64_t sub_100161C38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  unint64_t v9 = *(void *)(v8 + 24);
  STACK[0x720] += 2112;
  STACK[0x710] = v9;
  return (*(uint64_t (**)(void))(a7 + 8 * ((254 * (v9 == 0)) ^ v7)))();
}

uint64_t sub_100161C7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36)
{
  unint64_t v37 = *(void *)(a36 + 24);
  uint64_t v38 = (char *)&STACK[0x850] + STACK[0x720];
  STACK[0x720] += 2224;
  STACK[0x458] = v37;
  STACK[0x718] = (unint64_t)(v38 + 960);
  STACK[0x4D8] = (unint64_t)(v38 + 2064);
  uint64_t v39 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(STACK[0x6F8]
                                                                                       + 8
                                                                                       * (((v37 == 0)
                                                                                         * (((v36 + 546) | 0xA2) ^ 0x8A9)) ^ (v36 + 708)));
  STACK[0x710] = (unint64_t)v38;
  STACK[0x4D0] = (unint64_t)(v38 + 2144);
  return v39(a36, a2, a3, 648492187, 2145869055, 1769373750);
}

uint64_t sub_100161D60()
{
  int v5 = v2 ^ (v0 + 568);
  _DWORD *v1 = v9;
  v1[1] = v10;
  v1[2] = v13;
  v1[3] = v8;
  uint64_t v15 = v12;
  int v6 = v5;
  unsigned int v16 = ((2 * (&v14 & 0x576248F0) - &v14 + 681424652) ^ 0x3E33E148) * v4 + 779569953 + v5;
  (*(void (**)(uint64_t *))(v3 + 8 * (int)(v5 ^ 0xD188D4D7)))(&v14);
  uint64_t v15 = v11;
  unsigned int v16 = v6 + 779569953 + ((2 * (&v14 & 0x418FC68) - &v14 + 2078737298) ^ 0x6D4955D6) * v4;
  (*(void (**)(uint64_t *))(v3 + 8 * (v6 + 779570121)))(&v14);
  return 0;
}

uint64_t sub_100161E9C@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((193 * (a1 == (((v1 + 809672374) | 0x4210570) ^ 0x3874F0F6))) ^ v1)))();
}

uint64_t sub_100161EF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  *(_DWORD *)(v12 - 216) = 1314530549 * ((v12 + 1284380416 - 2 * ((v12 - 224) & 0x4C8E17E0)) ^ v11)
                         - 1318647951
                         + v10
                         - 1795;
  uint64_t v13 = (*(uint64_t (**)(uint64_t))(a7 + 8 * (v10 ^ v9)))(v12 - 224);
  unint64_t v14 = STACK[0x258];
  *(unsigned char *)(v7 + v8) = *(void *)(v12 - 224) ^ 0xD0;
  return (*(uint64_t (**)(uint64_t))(v14 + 8 * (((v8 == 31) * (1283 * (v10 ^ 0xBBB) - 598)) ^ v10)))(v13);
}

void sub_100161F9C(void *a1@<X8>)
{
  *a1 = v1;
  *(void *)(v2 - 0x46197683F7D18950) = v1;
  JUMPOUT(0x10014AD98);
}

void sub_100161FBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, unsigned int a11, uint64_t a12, unsigned int a13, uint64_t a14, unsigned int a15)
{
  unsigned int v18 = 1401278017 * ((&a11 & 0x7F20B6D4 | ~(&a11 | 0x7F20B6D4)) ^ 0x84FC3FCC);
  a11 = 1694416701 - v18;
  a13 = ((v15 & 0x80D055B5) + 787) ^ v18;
  a12 = 0x31F869904A03A4D8;
  a15 = v18 + 622082278;
  a14 = v16;
  (*(void (**)(unsigned int *))(v17 + 8 * (int)((v15 & 0x80D055B5) + 4300)))(&a11);
  sub_1001DEC88();
}

uint64_t sub_100162064@<X0>(uint64_t a1@<X6>, int a2@<W8>)
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((a2 - 1969399405) ^ ((4 * (a1 != 0)) | (16 * (a1 != 0))))))();
}

uint64_t sub_100162094(uint64_t a1, uint64_t a2)
{
  *(void *)(a2 + v4) = *(void *)(v3 + v4);
  return (*(uint64_t (**)(void))(v7 + 8 * (((v5 == 0) * v2) ^ v6)))();
}

uint64_t sub_1001620C4(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,int a61,uint64_t a62,uint64_t a63)
{
  return (*(uint64_t (**)(void))(v64 + 8 * ((a61 * (v65 == a3)) ^ a64)))();
}

uint64_t sub_1001620EC()
{
  return (*(uint64_t (**)(void))(v4 + 8 * (((v0 + (v1 ^ v3) + 2390 - 2436 == v2 + 20) * v5) ^ v1)))();
}

uint64_t sub_10016211C@<X0>(uint64_t a1@<X0>, int a2@<W2>, int a3@<W4>, int a4@<W8>)
{
  *(unsigned char *)(a1 + (a2 - 972901047)) = *(unsigned char *)(v5 + (a2 - 972901047));
  return (*(uint64_t (**)(void))(v7 + 8 * ((2854 * (a2 - 1 == 67 * (a3 ^ (v6 + 2661)) + a4)) ^ (v4 + a3 + 1426))))();
}

uint64_t sub_100162170(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
  HIDWORD(a19) = -1851408451;
  int v30 = *(_DWORD *)(a2 + 4);
  uint64_t v31 = *(void *)(a2 + 8);
  unsigned int v32 = 142545853 * ((((2 * &a22) | 0x44AD2548) - &a22 + 1571384668) ^ 0x88A93DCB);
  a28 = a16;
  a26 = a13;
  a25 = a14;
  LODWORD(a27) = v28 - v32 + 1807;
  HIDWORD(a27) = 473959065 - v32 + v30;
  a22 = a15;
  a23 = v31;
  uint64_t v35 = (*(uint64_t (**)(uint64_t *))(v29 + 8 * (v28 ^ 0x106D)))(&a22);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v29 + 8 * ((3093 * (a24 == (((v28 + 1273) | 0xA2) ^ 0x327F4D48))) ^ v28)))(v35, a2, 1019981118, 523998673, 473454526, 232883929, 3770972023, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28);
}

uint64_t sub_10016229C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unsigned int a13, uint64_t a14, int a15, int a16)
{
  unsigned int v20 = 366490169 * ((-376050970 - (&a13 | 0xE995EAE6) + (&a13 | 0x166A1519)) ^ 0xC4435D);
  a13 = ((v19 + 828438596) & 0xCE9F07BB ^ 0x16BDCE9F) + v20 + (*v16 ^ 0xFDDFF7FD) + ((2 * *v16) & 0xFBBFEFFA);
  a15 = v20 + v19 + 528 + 1307;
  a14 = a10;
  uint64_t v21 = (*(uint64_t (**)(unsigned int *))(v17 + 8 * (v19 + 3278)))(&a13);
  return (*(uint64_t (**)(uint64_t))(v17 + 8 * ((3411 * (a16 == v18)) ^ (v19 + 528))))(v21);
}

uint64_t sub_100162380(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  *(void *)(v16 - 120) = a12;
  *(void *)(v16 - 136) = v14;
  *(_DWORD *)(v16 - 124) = (v12 - 1994) ^ (((v16 + 1323026301 - 2 * ((v16 - 136) & 0x4EDBC805)) ^ 0x58759E41) * v15);
  uint64_t v17 = (*(uint64_t (**)(uint64_t))(v13 + 8 * (v12 + 1599)))(v16 - 136);
  return (*(uint64_t (**)(uint64_t))(v13
                                            + 8
                                            * ((7178 * (*(_DWORD *)(v16 - 128) == ((v12 - 334) ^ 0x2FB2C762))) ^ v12)))(v17);
}

uint64_t sub_10016241C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, int a16, int a17)
{
  return (*(uint64_t (**)(void))(v18 + 8 * ((3262 * (a17 == (v17 ^ 0x60B))) ^ v17)))();
}

uint64_t sub_10016248C@<X0>(uint64_t a1@<X8>, uint64_t a2, int a3)
{
  *(_DWORD *)(a1 - 0x1DF3F6C31D7C14EELL) = a3;
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * (int)(((*(void *)(v4 + 24) == 0x127BB0B447B9E1FALL)
                                     * ((((((v3 - 960) | 0x888) - 252) | 0x104) ^ 0xFFFFF4EA)
                                      + ((((v3 - 960) | 0x888) - 1914) | 0x88))) ^ ((v3 - 960) | 0x888))))();
}

uint64_t sub_10016250C(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v7
                              + 8
                              * (int)(((a4 + 1616 - v6 - 2253 + ((a4 + 1384145284) & 0xAD7F9FF5) + 1985852826)
                                     * ((v5 + v4 + 100668426) < 8)) ^ (a4 + 1616))))();
}

uint64_t sub_100162580()
{
  unsigned int v6 = v1
     - 1757786668
     + 366490169 * ((((2 * v5) | 0xA3EF83EC) - v5 - 1375191542) ^ 0x475997B2);
  v5[1] = v4;
  (*(void (**)(void *))(v0 + 8 * (v1 - 1757786500)))(v5);
  return (v2 - 847203058);
}

uint64_t sub_10016262C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49)
{
  int v49 = *(uint64_t (**)(void))(STACK[0x258] + 8 * (v57 - 2288));
  uint64_t v50 = *v54;
  unint64_t v51 = (((*v54 + 4) * v58) ^ (((*v54 + 4) * v58) >> 16)) * v58;
  *(unsigned char *)(v50 + 4) = HIBYTE(v55) ^ *(unsigned char *)(a48 + (v51 >> 24)) ^ *(unsigned char *)(a47 + (v51 >> 24)) ^ *(unsigned char *)((v51 >> 24) + a49 + 1) ^ v51 ^ (17 * BYTE3(v51)) ^ v56;
  unint64_t v52 = (((v50 + 5) * v58) ^ (((v50 + 5) * v58) >> 16)) * v58;
  *(unsigned char *)(v50 + 5) = v55 ^ *(unsigned char *)(a48 + (v52 >> 24)) ^ *(unsigned char *)(a47 + (v52 >> 24)) ^ *(unsigned char *)((v52 >> 24) + a49 + 1) ^ ((((v50 + 5) * v58) ^ (((v50 + 5) * v58) >> 16)) * v58) ^ (17 * (((((v50 + 5) * v58) ^ (((v50 + 5) * v58) >> 16)) * v58) >> 24)) ^ a7;
  return v49();
}

void sub_100162640()
{
}

uint64_t sub_100162648(uint64_t a1, uint64_t a2, unsigned int a3, int a4, int a5, int a6, int a7)
{
  unint64_t v16 = a1 + v8 + (v10 ^ 0x3044B3F6) + v12 * (unint64_t)(*(_DWORD *)(*v11 + 4 * a4) ^ v10);
  *(_DWORD *)(v14 + 4 * v15) = v16
                             + (((v13 + 1753351647 + a7) | 0x580) ^ (v10 + 124))
                             - (((v13 + 1753351647) & (a7 + 1472) ^ v9) & (2 * v16));
  uint64_t v17 = (HIDWORD(v16) ^ 0x5CFBABF5FBAF775FLL) + ((v16 >> 31) & 0x1F75EEEBELL) - 0x8A108D41A002544;
  LODWORD(v16) = a4 + 1 + a5;
  int v18 = (a3 > 0x3E25C430) ^ ((int)v16 < -1042662449);
  BOOL v19 = (int)v16 < a6;
  if (v18) {
    BOOL v19 = a3 > 0x3E25C430;
  }
  return (*(uint64_t (**)(uint64_t))(v7 + 8 * (v13 ^ (58 * !v19))))(v17);
}

uint64_t sub_100162654()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((v0 == 0x46197683F7D18950) * (((v1 - 1359) | 8) ^ 0x945 ^ (14 * (v1 ^ 0x562)))) ^ v1)))();
}

uint64_t sub_1001626B0@<X0>(int a1@<W8>)
{
  *(_DWORD *)(v3 + 4 * (v1 - 2110422519)) = 2110422519
                                                          - v1
                                                          + ((1566083941
                                                            * (*(_DWORD *)(v3 + 4 * (v1 - 2110422520)) ^ (*(_DWORD *)(v3 + 4 * (v1 - 2110422520)) >> 30))) ^ *(_DWORD *)(v3 + 4 * (v1 - 2110422519)));
  unint64_t v5 = 1314530549 * ((0x86297529DA532241 - ((v4 - 192) | 0x86297529DA532241) + STACK[0x2C8]) ^ 0xDEF30A4B94A55B70);
  *(_DWORD *)(v4 - 192) = v5 + a1 - 849015350;
  *(_DWORD *)(v4 - 164) = (a1 + 1722878272) ^ v5;
  *(_DWORD *)(v4 - 160) = v5 + 1;
  *(_DWORD *)(v4 - 172) = a1 + 1722878272 - v5 + 18;
  *(_DWORD *)(v4 - 168) = ((a1 + 1722878272) | 0x130) ^ v5;
  *(void *)(v4 - 152) = (v1 + 35182686) ^ v5;
  *(void *)(v4 - 184) = v5 + 2145605204;
  uint64_t v6 = (*(uint64_t (**)(uint64_t))(v2 + 8 * (a1 ^ 0x1BFE)))(v4 - 192);
  return (*(uint64_t (**)(uint64_t))(v2 + 8 * *(int *)(v4 - 176)))(v6);
}

void sub_1001627D0()
{
}

uint64_t sub_1001627E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, char a11, uint64_t a12, uint64_t a13, int a14, unsigned int a15, uint64_t a16, char *a17)
{
  a15 = (v17 + 522) ^ (((((&a14 | 0x966574E8) ^ 0xFFFFFFFE) - (~&a14 | 0x699A8B17)) ^ 0xD8930DD9)
                     * v20);
  a16 = a9;
  a17 = &a11;
  (*(void (**)(int *))(v19 + 8 * (v17 + 2880)))(&a14);
  LODWORD(a17) = v17
               - 476588053
               * ((((&a14 ^ 0x4149584E | 0x3AB687A0) ^ 0xFFFFFFFE)
                 - (&a14 ^ 0x20068600 | 0xC549785F)) ^ 0x234D25F2)
               + 865;
  a16 = a9;
  uint64_t v21 = (*(uint64_t (**)(int *))(v19 + 8 * (v17 + 2913)))(&a14);
  return (*(uint64_t (**)(uint64_t))(v19 + 8 * ((3847 * (a14 == v18 + ((v17 + 411) | 0x2E) - 2239)) ^ v17)))(v21);
}

uint64_t sub_1001628F0@<X0>(uint64_t a1@<X8>)
{
  return 0;
}

uint64_t sub_100162914()
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (((v1 + v0 + 100666657 + ((v2 + 673) ^ 0xC26u) < 8) * ((v2 + 673) ^ 0xAD6)) ^ (v2 + 673))))();
}

uint64_t sub_10016297C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, unsigned int a14)
{
  a14 = 31090337 * (((~&a13 & 0xD5EE1A62) - (~&a13 | 0xD5EE1A63)) ^ 0x126F7A2A) + 1655392376;
  uint64_t v15 = (*(uint64_t (**)(int *))(v14 + 37600))(&a13);
  return (*(uint64_t (**)(uint64_t))(v14 + 8 * ((142 * (a13 == 847203058)) ^ 0x822)))(v15);
}

uint64_t sub_100162A38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50)
{
  return sub_1001B8530(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50);
}

uint64_t sub_100162A60()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((37 * (LODWORD(STACK[0x8EC]) == ((v0 - 1216) ^ v1 ^ ((v0 - 4358) | 0x98A)))) ^ v0)))();
}

uint64_t sub_100162AA0(uint64_t a1, uint64_t a2, int a3, uint64_t a4, __int16 a5, uint64_t a6, int a7)
{
  int v13 = LODWORD(STACK[0x684]) + 398;
  int v14 = LODWORD(STACK[0x554]) + LODWORD(STACK[0x710]);
  LODWORD(STACK[0x6C4]) = v13;
  unsigned int v15 = v14 + v13 + 2103891281 - ((2 * (v14 + v13 + 2103891281)) & 0xA2CEF31E);
  unsigned int v16 = v15 - 781747825;
  unint64_t v17 = STACK[0x718];
  int v18 = *(unsigned __int8 *)(STACK[0x718]
                           + (unsigned __int16)(7 * ((v16 >> 28) ^ 0xD)
                                              + 3640
                                              - ((unsigned __int16)((2185 * (7 * ((v16 >> 28) ^ 0xD) + 3640)) >> 16) >> 5)
                                              * a5)) ^ 0x13;
  int v19 = LODWORD(STACK[0x668]) ^ 0x3F36747A;
  LODWORD(STACK[0x538]) = v19;
  unsigned int v20 = v19 - v11 + 584501916 + (~(2 * (v19 - v11) + 1293805594) | 0x877052E3);
  unsigned int v21 = 7 * (((v15 - 781747825) >> 24) & 0xF ^ 1) + 3640;
  int v22 = ((*(unsigned __int8 *)(v17 + (unsigned __int16)(v21 - ((unsigned __int16)((2185 * v21) >> 16) >> 5) * a5)) ^ 0x13) << 8) ^ (v18 << 12);
  unsigned int v23 = 7 * (((v15 - 781747825) >> 16) & 0xF ^ 7) + 3640;
  unsigned int v24 = 7 * (((v15 - 781747825) >> 8) & 0xF ^ 9) + 3640;
  int v25 = 7 * (((unsigned __int16)(v15 + 31119) >> 12) ^ 7) + 3640;
  int v26 = *(unsigned __int8 *)(v17 + (unsigned __int16)(v23 - 960 * ((unsigned __int16)((2185 * v23) >> 16) >> 5))) ^ 0x13 | v22;
  int v27 = 7 * (((v15 - 113) >> 4) ^ 8) + 3640;
  int v28 = *(unsigned __int8 *)(v17
                           + (unsigned __int16)(v25 - 960 * ((unsigned __int16)((2185 * v25) >> 16) >> 5))) ^ 0x13;
  int v29 = 7 * ((112 - (_BYTE)v15) & 0xF) + 3640;
  int v30 = *(unsigned __int8 *)(v17
                           + (unsigned __int16)(v29 - 960 * ((unsigned __int16)((2185 * v29) >> 16) >> 5)));
  int v31 = *(unsigned __int8 *)(v17
                           + (unsigned __int16)(v27 - 960 * ((unsigned __int16)((2185 * v27) >> 16) >> 5))) ^ 0x13;
  int v32 = (v26 << 8) ^ ((*(unsigned __int8 *)(v17
                                          + (7 * ((v16 >> 20) & 0xF ^ 6) + 3640)
                                          % ((((LODWORD(STACK[0x56C]) + 106433394) & 0x1464D6C8)
                                            - 30642919
                                            + ((LODWORD(STACK[0x56C]) + 106433394) & 0x1464D6C8 ^ 0x1464D6C8)) & 0xE424B7C8)) ^ 0x13) << 12);
  int v33 = *(unsigned __int8 *)(v17 + (unsigned __int16)(v24 - 960 * ((unsigned __int16)((2185 * v24) >> 16) >> 5))) ^ 0x13;
  int v34 = ((v32 | v33) << 8) - 1626598161 - (((v32 | v33) << 9) & 0x3E182800);
  LODWORD(STACK[0x710]) = v34;
  unsigned int v35 = v34 ^ (v28 << 12);
  v30 ^= 0x13u;
  unsigned int v36 = (v35 ^ 0x9F0C14EF | v30) ^ (16 * v31);
  unsigned int v37 = (BYTE2(v20) ^ 0x47u) >> ((BYTE2(v20) & 4 ^ 4) + (BYTE2(v20) & 4));
  LOWORD(v37) = v37 - 2 * (v37 & 1) - 9727;
  int v38 = 7 * (HIBYTE(v20) & 0xF ^ 0xC) + 3640;
  int v39 = *(unsigned __int8 *)(v17 + (unsigned __int16)(7 * (v37 ^ 0xDA01) + 3640) % 0x3C0u);
  unsigned int v40 = (v37 & 7 ^ ((v37 ^ 0xF9) + (v37 | 7) + 1) ^ 6) * ((HIWORD(v20) & 0xF ^ 7) + 520);
  int v41 = 7 * (((unsigned __int16)((v19 - v11 - 13668 + (~(2 * (v19 - v11) - 6118) | 0x52E3)) & 0xF000) >> 12) ^ 0xD)
      + 3640;
  int v42 = ((((*(unsigned __int8 *)(v17
                               + (unsigned __int16)(v38
                                                  - 960 * ((unsigned __int16)((2185 * v38) >> 16) >> 5))) ^ 0x13) << 8) ^ ((*(unsigned __int8 *)(v17 + (unsigned __int16)(7 * ((v20 >> 28) ^ 3) + 3640 - 960 * ((unsigned __int16)((2185 * (7 * ((v20 >> 28) ^ 3) + 3640)) >> 16) >> 5))) ^ 0x13) << 12) | *(unsigned __int8 *)(v17 + (v40 - 960 * ((4473925 * (unint64_t)v40) >> 32))) ^ 0x13) << 8) ^ ((v39 ^ 0x13) << 12);
  int v43 = *(unsigned __int8 *)(v17
                           + (unsigned __int16)(v41 - 960 * ((unsigned __int16)((2185 * v41) >> 16) >> 5))) ^ 0x13;
  int v44 = 7 * ((v20 >> 8) & 0xF ^ 6) + 3640;
  int v45 = 7 * (((v19 - v11 - 100 + (~(2 * (v19 - v11) + 26) | 0xE3)) >> 4) ^ 8) + 3640;
  int v46 = *(unsigned __int8 *)(v17
                           + (unsigned __int16)(v44 - 960 * ((unsigned __int16)((2185 * v44) >> 16) >> 5))) ^ 0x13;
  int v47 = *(unsigned __int8 *)(v17
                           + (unsigned __int16)(v45 - 960 * ((unsigned __int16)((2185 * v45) >> 16) >> 5)));
  int v48 = *(unsigned __int8 *)(v17
                           + (unsigned __int16)(7 * (v20 & 0xF ^ 0xE)
                                              + 3640
                                              - 960
                                              * ((unsigned __int16)((2185 * (7 * (v20 & 0xF ^ 0xE) + 3640)) >> 16) >> 5)));
  LODWORD(STACK[0x708]) = v30 & 0xF;
  unsigned int v49 = ((v42 | v46) << 8) - 114485639 - (((v42 | v46) << 9) & 0xF25A2C00);
  unsigned int v50 = v49 ^ (v43 << 12);
  v48 ^= 0x13u;
  unsigned int v51 = (v50 ^ 0xF92D1679 | v48) ^ (16 * (v47 ^ 0x13));
  LODWORD(STACK[0x6F4]) = v51;
  unsigned int v52 = 7 * (v30 & 0xF | (16 * (v48 & 0xF)));
  int v53 = LOBYTE(STACK[0xF98]) ^ 0x13;
  LODWORD(STACK[0x5B0]) = 16 * v53;
  int v54 = *(unsigned __int8 *)(v17 + (unsigned __int16)(v52 + 3983) % 0x3C0u);
  int v55 = 16 * v53 - 798318148 - ((32 * v53) & 0x360);
  LODWORD(STACK[0x6F0]) = v55;
  int v56 = ((v54 ^ 0x13) - 798318148 - ((2 * (v54 ^ 0x13)) & 0x178)) ^ v55;
  if (v52 >= 0x3C0) {
    v52 -= 960;
  }
  int v57 = *(unsigned __int8 *)(v17 + v52);
  LODWORD(STACK[0x6EC]) = 7 * v56;
  unsigned int v58 = *(unsigned __int8 *)(v17 + 7 * v56 % 0x3C0u);
  LODWORD(STACK[0x6AC]) = v36;
  unsigned int v59 = 7 * (v51 & 0xF0 | (v36 >> 4));
  int v60 = 7 * ((((v58 >> 4) ^ 1) - 2 * (((v58 >> 4) ^ 1) & 7 ^ (v58 >> 4) & 4) + 19) ^ v57) + 3983;
  int v61 = *(unsigned __int8 *)(v17 + (unsigned __int16)(7 * (v51 & 0xF0 | (v36 >> 4)) + 3983) % 0x3C0u) ^ (16 * (*(unsigned __int8 *)(v17 + (unsigned __int16)(v60 - 960 * ((unsigned __int16)((8739 * v60) >> 16) >> 7))) ^ 0x13)) ^ 0x13;
  LODWORD(STACK[0x6D8]) = v61;
  v61 *= 7;
  LODWORD(STACK[0x6D0]) = v61;
  LODWORD(STACK[0x700]) = (unsigned __int16)(v61 + 3983)
                        % (((unsigned __int16)(112 - v61) | (unsigned __int16)(v61 + 3983)) & 0x3C0u);
  unsigned int v62 = (v9 ^ 0xCD060562) - v10 + (v12 ^ 0x74FE7986) + ((a3 + 1884027966) ^ 0xA776A832 ^ v12) + 1513229333;
  LODWORD(STACK[0x698]) = v12 ^ 0x8B018679;
  unsigned int v63 = ((2 * (v62 ^ (v10 - 1856730224 + (v12 ^ 0x8B018679)))) & 0x3FFEBBDC)
      + (v62 ^ (v10 - 1856730224 + (v12 ^ 0x8B018679)) ^ 0x1FFF5DEE);
  int v64 = (a3 + 1884027966) ^ 0x2C772E4B;
  int v65 = (v64 + 450511094 + v63) ^ v62;
  LODWORD(STACK[0x5D8]) = v65;
  int v66 = v64 + 987340516;
  LODWORD(STACK[0x690]) = v63 - 536829422;
  unsigned int v67 = v65 + v63 - 536829422;
  LODWORD(STACK[0x5B8]) = v67;
  v67 ^= 0xDCF3890C;
  LODWORD(STACK[0x51C]) = v67;
  unsigned int v68 = v67 + v64 + 987340516;
  LODWORD(STACK[0x520]) = v68;
  int v69 = LODWORD(STACK[0x570])
      - 625023299
      + v68
      - ((2 * (LODWORD(STACK[0x570]) - 625023299 + v68) + 139342998) & 0xBF886B4);
  LODWORD(STACK[0x6C8]) = v16 ^ v12;
  unsigned int v70 = v69 - 903651931;
  unsigned int v71 = (7 * (v70 & 0xF ^ 0xA) + 3640)
      % ((((v16 ^ v12) & 0x5321EFA1 ^ 0x5220EFA0 | (v16 ^ v12) & 0x5321EFA1 ^ 0x1010001) + 2039700895)
       * ((7 * (v70 & 0xF ^ 0xA) + 3640) & 0xCB3 ^ (-3641 - 7 * (v70 & 0xF ^ 0xA)) & 0xE59AB0B3));
  int v72 = (v11 + 426839027) ^ 0x2C772E4B;
  unsigned int v73 = (v7 ^ 0xB09DAC3F) + LODWORD(STACK[0x6E0]);
  LODWORD(STACK[0x6B0]) = a7;
  unsigned int v74 = v73 + (a7 ^ 0xF9B4F8AD) + ((v72 + 105580370 - ((2 * v72) & 0xC960EA4)) ^ a7) + 1748503648;
  unsigned int v75 = ((2 * (v74 ^ (v8 - 2092004539 + (a7 ^ 0x64B0752)))) & 0xF777FE7E)
      + (v74 ^ (v8 - 2092004539 + (a7 ^ 0x64B0752)) ^ 0x7BBBFF3F);
  int v76 = (v72 - 1088577627 + v75) ^ v74;
  unsigned int v77 = v75 + (a7 ^ 0x64B0752) - ((2 * (v75 + (a7 ^ 0x64B0752)) + 1041466334) & 0xFEE5B5D2);
  unsigned int v78 = v75 - 2075918143 + v76;
  LODWORD(STACK[0x4E8]) = v78;
  LODWORD(STACK[0x510]) = v76 - 522608667 - ((2 * v76) & 0xC1B33FCA);
  if (v59 >= 0x3C0) {
    int v79 = v59 - 960;
  }
  else {
    int v79 = 7 * (v51 & 0xF0 | (v36 >> 4));
  }
  LODWORD(STACK[0x604]) = v79;
  unsigned int v80 = 7 * ((LODWORD(STACK[0x6F4]) >> 4) & 0xF0 | (v36 >> 8) & 0xF);
  unsigned int v81 = 7 * (((v50 >> 8) & 0xF0 | ((unsigned __int16)v35 >> 12)) ^ 0x11);
  unsigned int v82 = 7 * (((v50 >> 12) & 0xF0 | HIWORD(v35) & 0xF) ^ 0xDC);
  LODWORD(STACK[0x668]) = v49;
  unsigned int v83 = 7 * ((HIWORD(v49) & 0xF0 | (LODWORD(STACK[0x710]) >> 20) & 0xF) ^ 0x20);
  unsigned int v84 = 7 * (((v49 >> 20) & 0xF0 | HIBYTE(LODWORD(STACK[0x710])) & 0xF) ^ 0x9F);
  unsigned int v85 = ((2
        * ((unsigned __int16)(7 * (((v49 >> 20) & 0xF0 | HIBYTE(LODWORD(STACK[0x710])) & 0xF) ^ 0x9F) + 3983) % 0x780u)) & 0xF7E)
      + (((unsigned __int16)(7 * (((v49 >> 20) & 0xF0 | HIBYTE(LODWORD(STACK[0x710])) & 0xF) ^ 0x9F) + 3983) % 0x780u) ^ 0x7FEADFBF);
  LODWORD(STACK[0x63C]) = v85;
  LODWORD(STACK[0x5E0]) = v80;
  unsigned int v86 = v80 - 960;
  if (v80 < 0x3C0) {
    unsigned int v86 = v80;
  }
  LODWORD(STACK[0x600]) = v86;
  LODWORD(STACK[0x5F0]) = v81;
  unsigned int v87 = v81 - 960;
  if (v81 < 0x3C0) {
    unsigned int v87 = v81;
  }
  LODWORD(STACK[0x620]) = v87;
  LODWORD(STACK[0x614]) = v82;
  if (v82 >= 0x3C0) {
    unsigned int v88 = v82 - 960;
  }
  else {
    unsigned int v88 = v82;
  }
  LODWORD(STACK[0x628]) = v88;
  LODWORD(STACK[0x624]) = v83;
  if (v83 >= 0x3C0) {
    unsigned int v89 = v83 - 960;
  }
  else {
    unsigned int v89 = v83;
  }
  LODWORD(STACK[0x648]) = v89;
  if (v84 >= 0x3C0) {
    unsigned int v90 = v84 - 960;
  }
  else {
    unsigned int v90 = v84;
  }
  LODWORD(STACK[0x660]) = v90;
  BOOL v91 = v85 - 2146099135 >= 0x3C0;
  int v92 = LODWORD(STACK[0x54C]) + 1336847934;
  LODWORD(STACK[0x3C0]) = v92;
  unsigned int v93 = v66 + v92 + 1864025685 + (~(2 * (v66 + v92)) | 0x21CA7357);
  unsigned int v94 = LODWORD(STACK[0x66C]) ^ 0xE7F729A4;
  LODWORD(STACK[0x530]) = v94;
  char v95 = v12;
  LODWORD(STACK[0x644]) = v12;
  int v96 = 7 * (~HIBYTE(v93) & 0xF) + 3640;
  int v97 = 7 * ((v93 >> 20) & 0xF ^ 1) + 3640;
  int v98 = ((*(unsigned __int8 *)(v17
                             + (unsigned __int16)(v96 - 960
                                                      * ((unsigned __int16)((2185 * v96) >> 16) >> 5))) ^ 0x13) << 8) ^ ((*(unsigned __int8 *)(v17 + (unsigned __int16)(7 * ((v93 >> 28) ^ 6) + 3640 - 960 * ((unsigned __int16)((2185 * (7 * ((v93 >> 28) ^ 6) + 3640)) >> 16) >> 5))) ^ 3) << 12);
  int v99 = 7 * (HIWORD(v93) & 0xF ^ 0xA) + 3640;
  int v100 = v98 | *(unsigned __int8 *)(v17
                                  + (unsigned __int16)(v99
                                                     - 960 * ((unsigned __int16)((2185 * v99) >> 16) >> 5)));
  int v101 = 7 * (((unsigned __int16)v93 >> 12) ^ 0xC) + 3640;
  int v102 = 7 * ((v93 >> 8) & 0xF ^ 6) + 3640;
  LODWORD(STACK[0x6E0]) = v93;
  int v103 = 7 * ((v93 >> 4) ^ 5) + 3640;
  int v104 = ((*(unsigned __int8 *)(v17
                              + (unsigned __int16)(v97
                                                 - 960 * ((unsigned __int16)((2185 * v97) >> 16) >> 5))) ^ 0x13) << 20) ^ (v100 << 16) ^ 0x130000;
  unsigned int v105 = v104 - 1472991719 - ((2 * v104) & 0x50660000);
  unsigned int v106 = ((v105 ^ 0xA833EE19)
        + ((*(unsigned __int8 *)(v17
                               + (unsigned __int16)(v102
                                                  - 960 * ((unsigned __int16)((2185 * v102) >> 16) >> 5))) ^ 0x13) << 8)) ^ ((*(unsigned __int8 *)(v17 + (unsigned __int16)(v101 - 960 * ((unsigned __int16)((2185 * v101) >> 16) >> 5))) ^ 0x13) << 12);
  unsigned int v107 = v94 - v72 - 987340516 - ((2 * (v94 - v72 - 987340516)) & 0xDF3404) + 7313922;
  int v108 = *(unsigned __int8 *)(v17
                            + (unsigned __int16)(7 * (v93 & 0xF ^ 4)
                                               + 3640
                                               - 960
                                               * ((unsigned __int16)((2185 * (7 * (v93 & 0xF ^ 4) + 3640)) >> 16) >> 5))) ^ 0x13;
  unsigned int v109 = (v106 | v108) ^ (16
                        * (*(unsigned __int8 *)(v17
                                              + (unsigned __int16)(v103
                                                                 - 960
                                                                 * ((unsigned __int16)((2185 * v103) >> 16) >> 5))) ^ 0x13));
  LOBYTE(v104) = (7 * (HIBYTE(v107) & 0xF)
                + 56
                - -64 * ((unsigned __int16)((2185 * (7 * (HIBYTE(v107) & 0xF) + 3640)) >> 16) >> 5)) & 0x18;
  int v110 = 7 * ((v107 >> 20) & 0xF ^ 6) + 3640;
  int v111 = 7 * (~HIWORD(v107) & 0xF) + 3640;
  int v112 = *(unsigned __int8 *)(v17
                            + (unsigned __int16)(v111
                                               - 960 * ((unsigned __int16)((2185 * v111) >> 16) >> 5))) ^ 0x13 ^ ((unint64_t)(*(unsigned __int8 *)(v17 + (unsigned __int16)(7 * (HIBYTE(v107) & 0xF) + 3640 - 960 * ((unsigned __int16)((2185 * (7 * (HIBYTE(v107) & 0xF) + 3640)) >> 16) >> 5))) ^ (16 * (*(unsigned __int8 *)(v17 + (unsigned __int16)(7 * (v107 >> 28) + 3640 - 960 * ((unsigned __int16)((2185 * (7 * (v107 >> 28) + 3640)) >> 16) >> 5))) ^ 0x13)) ^ 0x13u) << (((v104 ^ 0x18) + v104) & 0xEF));
  int v113 = 7 * (((unsigned __int16)(v107 & 0xF000) >> 12) ^ 9) + 3640;
  unsigned int v114 = (((v107 >> 8) ^ 0x6F9A) & 0xF | (16 * ((((v107 >> 8) ^ 0x6F9A) >> 3) & 1))) ^ 0x208;
  int v115 = (v112 << 8) ^ ((*(unsigned __int8 *)(v17
                                            + (unsigned __int16)(v110
                                                               - 960
                                                               * ((unsigned __int16)((2185 * v110) >> 16) >> 5))) ^ 0x13) << 12);
  int v116 = *(unsigned __int8 *)(v17 + (unsigned __int16)(7 * v114 - 960 * ((unsigned __int16)((15295 * v114) >> 16) >> 5))) ^ 0x13;
  int v117 = (v115 | v116) - 2 * ((v115 | v116) & 0x33F603 ^ v116 & 1);
  int v118 = *(unsigned __int8 *)(v17
                            + (unsigned __int16)(v113
                                               - 960 * ((unsigned __int16)((2185 * v113) >> 16) >> 5)));
  int v119 = 16 * (v118 ^ 0x13) + 900986370;
  int v120 = (v117 + 11793922) ^ (v119 - ((32 * v118) & 0xC00));
  unsigned int v121 = 7 * ((v107 ^ 2u) >> (((v119 & 0x70 ^ 0x79) + (v119 | 0x8B)) & 0xFC)) + 3640;
  LOWORD(v107) = 7 * (v107 & 0xF ^ 2)
               + 3640
               - 960 * ((unsigned __int16)((2185 * (7 * (v107 & 0xF ^ 2) + 3640)) >> 16) >> 5);
  unsigned int v122 = (*(unsigned __int8 *)(v17 + (unsigned __int16)v107) ^ 0x13 | (v120 << 8)) ^ ((unint64_t)(*(unsigned __int8 *)(v17 + (unsigned __int16)(v121 - 960 * ((unsigned __int16)((8739 * v121) >> 16) >> 7))) ^ 0x13u) << (((v107 & 0x21 ^ 0x21) + (v107 & 0x21)) ^ 0x25));
  int v123 = v108 & 0xF;
  LODWORD(STACK[0x6A0]) = v123;
  unsigned __int16 v124 = 7 * (v123 & 0xFF0F | (16 * (v122 & 0xF)));
  int v125 = *(unsigned __int8 *)(v17 + (unsigned __int16)(v124 + 3983) % 0x3C0u) ^ 0x13;
  int v126 = STACK[0x6F0];
  unsigned int v127 = 7 * ((v125 - 798318148 - ((2 * v125) & 0x178)) ^ LODWORD(STACK[0x6F0]));
  LODWORD(STACK[0x664]) = v127;
  if (v91) {
    int v128 = -893536355;
  }
  else {
    int v128 = -893535395;
  }
  LODWORD(STACK[0x5C4]) = v128;
  if (v124 >= 0x3C0u) {
    v124 -= 960;
  }
  int v129 = *(unsigned __int8 *)(v17 + v127 % 0x3C0) >> 4;
  int v130 = 7 * (((v129 ^ 1) - 2 * ((v129 ^ 1) & 7 ^ v129 & 4) + 19) ^ *(unsigned __int8 *)(v17 + v124))
       + 3983;
  LODWORD(STACK[0x66C]) = v109;
  unsigned int v131 = 7 * (v122 & 0xF0 | (v109 >> 4));
  unsigned int v132 = *(unsigned __int8 *)(v17 + (unsigned __int16)(7 * (v122 & 0xF0 | (v109 >> 4)) + 3983) % 0x3C0u) ^ (16 * (*(unsigned __int8 *)(v17 + (unsigned __int16)(v130 - 960 * ((unsigned __int16)((8739 * v130) >> 16) >> 7))) ^ 0x13)) ^ 0x13;
  __int16 v133 = 7 * v132;
  LODWORD(STACK[0x65C]) = 7 * v132;
  v132 *= 244671;
  LODWORD(STACK[0x650]) = v132;
  unsigned int v134 = *(unsigned __int8 *)(v17 + (unsigned __int16)(v133 - 960 * (v132 >> 25)));
  if (v131 >= 0x3C0) {
    v131 -= 960;
  }
  int v135 = 7
       * ((((v134 >> 4) ^ 1) - 2 * (((v134 >> 4) ^ 1) & 7 ^ (v134 >> 4) & 4) + 19) ^ *(unsigned __int8 *)(v17 + v131))
       + 3983;
  unsigned int v136 = 7 * ((v122 >> 4) & 0xF0 | (v109 >> 8) & 0xF);
  int v137 = *(unsigned __int8 *)(v17 + (unsigned __int16)(7 * ((v122 >> 4) & 0xF0 | (v109 >> 8) & 0xF) + 3983) % 0x3C0u) ^ (16 * (*(unsigned __int8 *)(v17 + (unsigned __int16)(v135 - 960 * ((unsigned __int16)((8739 * v135) >> 16) >> 7))) ^ 0x13));
  if (v136 >= 0x3C0) {
    v136 -= 960;
  }
  int v138 = v137 ^ 0x13;
  LODWORD(STACK[0x62C]) = 7 * v138;
  int v139 = *(unsigned __int8 *)(v17
                            + (unsigned __int16)(7 * v138
                                               - 960 * ((unsigned __int16)((244671 * v138) >> 16) >> 9))) >> 4;
  int v140 = 7 * (((v139 ^ 1) - 2 * ((v139 ^ 1) & 7 ^ v139 & 4) + 19) ^ *(unsigned __int8 *)(v17 + v136))
       + 3983;
  LODWORD(STACK[0x640]) = v106;
  unsigned int v141 = 7 * ((v122 >> 8) & 0xF0 | ((unsigned __int16)v106 >> 12));
  int v142 = *(unsigned __int8 *)(v17
                            + (unsigned __int16)(7 * ((v122 >> 8) & 0xF0 | ((unsigned __int16)v106 >> 12)) + 3983)
                            % 0x3C0u) ^ (16
                                       * (*(unsigned __int8 *)(v17
                                                             + (unsigned __int16)(v140
                                                                                - 960
                                                                                * ((unsigned __int16)((8739 * v140) >> 16) >> 7))) ^ 0x13));
  if (v141 >= 0x3C0) {
    v141 -= 960;
  }
  unsigned int v143 = v142 ^ 0x13;
  __int16 v144 = 7 * v143;
  LODWORD(STACK[0x610]) = 7 * v143;
  v143 *= 244671;
  LODWORD(STACK[0x608]) = v143;
  int v145 = *(unsigned __int8 *)(v17 + (unsigned __int16)(v144 - 960 * (v143 >> 25))) >> 4;
  int v146 = ((v145 ^ 1) - 2 * ((v145 ^ 1) & 7 ^ v145 & 4) + 19) ^ *(unsigned __int8 *)(v17 + v141);
  unsigned int v147 = 7 * ((v122 >> 12) & 0xF0 | HIWORD(v106) & 0xF);
  unsigned int v148 = 7 * v146 + 3983 - 960 * ((8739 * (7 * v146 + 3983)) >> 23);
  unsigned int v149 = v147 + 3983 - 960 * ((unsigned __int16)(7 * ((v122 >> 12) & 0xF0 | BYTE2(v106) & 0xF) + 3983) / 0x3C0u);
  if (v147 >= 0x3C0) {
    v147 -= 960;
  }
  int v150 = *(unsigned __int8 *)(v17 + (unsigned __int16)v149) ^ (16
                                                             * (*(unsigned __int8 *)(v17 + (unsigned __int16)v148) ^ 0x13)) ^ 0x13;
  LODWORD(STACK[0x5E8]) = 7 * v150;
  LOBYTE(v150) = (*(unsigned char *)(v17
                           + (unsigned __int16)(7 * v150
                                              - 960 * ((unsigned __int16)((244671 * v150) >> 16) >> 9))) >> 4) ^ 1;
  int v151 = 7 * ((v150 - 2 * (v150 & 3) + 19) ^ *(unsigned __int8 *)(v17 + v147)) + 3983;
  unsigned int v152 = 7 * ((HIWORD(v122) & 0xF0 | (v105 >> 20) & 0xF) ^ 3);
  int v153 = *(unsigned __int8 *)(v17
                            + (unsigned __int16)(7 * ((BYTE2(v122) & 0xF0 | (v105 >> 20) & 0xF) ^ 3) + 3983) % 0x3C0u) ^ (16 * (*(unsigned __int8 *)(v17 + (unsigned __int16)(v151 - 960 * ((unsigned __int16)((8739 * v151) >> 16) >> 7))) ^ 0x13));
  if (v152 >= 0x3C0) {
    v152 -= 960;
  }
  unsigned int v154 = HIBYTE(v122);
  LODWORD(STACK[0x5DC]) = v105;
  int v155 = HIBYTE(v105) & 0xF | (16 * ((HIBYTE(v122) ^ 0xFFFFFF0) + (HIBYTE(v122) | 0xF)));
  int v156 = 7 * (v153 ^ 0x13);
  LODWORD(STACK[0x5D4]) = v156;
  LODWORD(STACK[0x5D0]) = 244671 * (v153 ^ 0x13);
  int v157 = *(unsigned __int8 *)(v17
                            + (unsigned __int16)(v156 - 960 * ((unsigned __int16)((244671 * (v153 ^ 0x13u)) >> 16) >> 9))) >> 4;
  int v158 = 7 * (((v157 ^ 1) - 2 * ((v157 ^ 1) & 7 ^ v157 & 4) + 19) ^ *(unsigned __int8 *)(v17 + v152))
       + 3983;
  unsigned int v159 = 7 * ((v155 + 16) ^ 8);
  unsigned int v160 = v72 + 1489241569 + (v78 ^ 0xDCF3890C);
  int v161 = *(unsigned __int8 *)(v17 + (v159 + 3983) % 0x3C0) ^ (16
                                                            * (*(unsigned __int8 *)(v17
                                                                                  + (unsigned __int16)(v158 - 960 * ((unsigned __int16)((8739 * v158) >> 16) >> 7))) ^ 0x13)) ^ 0x13;
  LODWORD(STACK[0x5C0]) = 7 * v161;
  LODWORD(STACK[0x5BC]) = 244671 * v161;
  LOBYTE(v161) = (*(unsigned char *)(v17
                           + (unsigned __int16)(7 * v161
                                              - 960 * ((unsigned __int16)((244671 * v161) >> 16) >> 9))) >> 4) ^ 1;
  int v162 = 7 * ((v161 - 2 * (v161 & 3) + 19) ^ *(unsigned __int8 *)(v17 + v159 % 0x3C0)) + 3983;
  int v163 = 7 * ((v154 & 0xF0 | (v105 >> 28)) ^ 0xA) + 3983;
  int v164 = *(unsigned __int8 *)(v17
                            + (unsigned __int16)(v163
                                               - 960 * ((unsigned __int16)((8739 * v163) >> 16) >> 7))) ^ (16 * (*(unsigned __int8 *)(v17 + (unsigned __int16)(v162 - 960 * ((unsigned __int16)((8739 * v162) >> 16) >> 7))) ^ 0x13));
  unsigned int v165 = ((2 * (v164 ^ 0x11111111)) & 0x472) + (v164 ^ 0x22A);
  if (v165 <= 0x89) {
    unsigned int v166 = 7 * v165;
  }
  else {
    unsigned int v166 = (7 * v165 - 960) % 0x3C0;
  }
  LODWORD(STACK[0x5E4]) = v166;
  int v167 = LODWORD(STACK[0x550]) + 762907475;
  LODWORD(STACK[0x3BC]) = v167;
  unsigned int v168 = v66 + v167 + 193053221 - ((2 * (v66 + v167)) & 0x1703844A);
  int v169 = LODWORD(STACK[0x698]) - 1698315986;
  int v170 = LODWORD(STACK[0x690]) + v169;
  LODWORD(STACK[0x4F8]) = v170;
  unsigned int v171 = (v168 ^ 0xB81C225) >> ((v169 ^ ((v95 ^ 6) + 18)) & 0x18);
  unsigned int v172 = LODWORD(STACK[0x560]) - v72 - ((2 * (LODWORD(STACK[0x560]) - v72) + 63749154) & 0x55E8D50);
  LODWORD(STACK[0x6F4]) = v77 - 1636000552;
  LODWORD(STACK[0x630]) = v168;
  int v173 = 7 * ((v168 >> 20) & 0xF ^ 8) + 3640;
  int v174 = 7 * (((unsigned __int16)(v66 + v167 - 15835 - ((2 * (v66 + v167)) & 0x844A)) >> 12) ^ 0xC) + 3640;
  int v175 = ((*(unsigned __int8 *)(v17
                              + (unsigned __int16)(7 * (v171 & 0xF)
                                                 + 3640
                                                 - 960
                                                 * ((unsigned __int16)((2185 * (7 * (v171 & 0xF) + 3640)) >> 16) >> 5))) ^ 0x13) << 8) ^ ((*(unsigned __int8 *)(v17 + (unsigned __int16)(7 * (v171 >> 4) + 3640 - 960 * ((unsigned __int16)((2185 * (7 * (v171 >> 4) + 3640)) >> 16) >> 5))) ^ 0x13) << 12) | *(unsigned __int8 *)(v17 + (unsigned __int16)(7 * (((v77 - 25384) & 0xF ^ 9 | (v77 - 25384) & 0xF ^ 6) & (HIWORD(v168) ^ 1)) + 3640) % 0x3C0u) ^ 0x13;
  int v176 = 7 * ((v168 >> 8) & 0xF ^ 2) + 3640;
  int v177 = 7 * ((v168 >> 4) ^ 2) + 3640;
  unsigned int v178 = v177 - 960 * ((2185 * v177) >> 21);
  int v179 = (v175 << 8) ^ ((*(unsigned __int8 *)(v17
                                            + (unsigned __int16)(v173
                                                               - 960
                                                               * ((unsigned __int16)((2185 * v173) >> 16) >> 5))) ^ 0x13) << 12);
  int v180 = (v178 & 0x208) + (v168 & 0xF ^ 5) + (v178 & 0x208 ^ 0x208);
  int v181 = v179 | *(unsigned __int8 *)(v17
                                   + (unsigned __int16)(v176
                                                      - 960
                                                      * ((unsigned __int16)((2185 * v176) >> 16) >> 5))) ^ 0x13;
  unsigned int v182 = (v181 << 8) + 1315181536 - ((v181 << 9) & 0x9CC82600);
  unsigned int v183 = 7 * ((v172 + LODWORD(STACK[0x3B4])) >> 28) + 3640;
  int v184 = *(unsigned __int8 *)(v17
                            + (unsigned __int16)(v174
                                               - 960 * ((unsigned __int16)((2185 * v174) >> 16) >> 5))) ^ 0x13;
  int v185 = *(unsigned __int8 *)(v17 + (unsigned __int16)v178) ^ 0x13;
  unsigned int v186 = v182 ^ (v184 << 12);
  unsigned int v187 = v182;
  LODWORD(STACK[0x690]) = v182;
  int v188 = *(unsigned __int8 *)(v17
                            + (unsigned __int16)(7 * v180
                                               - 960 * ((unsigned __int16)((122339 * v180) >> 16) >> 8))) ^ 0x13;
  unsigned int v189 = (v186 ^ 0x4E6413E0 | v188) ^ (16 * v185);
  v172 -= 527063879;
  int v190 = 7 * (HIBYTE(v172) & 0xF ^ 2) + 3640;
  int v191 = 7 * ((v172 >> 20) & 0xF ^ 0xA) + 3640;
  int v192 = ((*(unsigned __int8 *)(v17
                              + (unsigned __int16)(v190
                                                 - 960 * ((unsigned __int16)((2185 * v190) >> 16) >> 5))) ^ 0x13) << 8) ^ ((*(unsigned __int8 *)(v17 + (unsigned __int16)(v183 - 960 * ((unsigned __int16)((2185 * v183) >> 16) >> 5))) ^ 0x13) << 12);
  int v193 = 7 * (~HIWORD(v172) & 0xF) + 3640;
  int v194 = v192 | *(unsigned __int8 *)(v17
                                   + (unsigned __int16)(v193
                                                      - 960
                                                      * ((unsigned __int16)((2185 * v193) >> 16) >> 5))) ^ 0x13;
  int v195 = 7 * (((unsigned __int16)v172 >> 12) ^ 4) + 3640;
  int v196 = (v194 << 8) ^ ((*(unsigned __int8 *)(v17
                                            + (unsigned __int16)(v191
                                                               - 960
                                                               * ((unsigned __int16)((2185 * v191) >> 16) >> 5))) ^ 0x13) << 12);
  int v197 = 7 * ((v172 >> 8) & 0xF ^ 6) + 3640;
  int v198 = *(unsigned __int8 *)(v17
                            + (unsigned __int16)(v197
                                               - 960 * ((unsigned __int16)((2185 * v197) >> 16) >> 5))) ^ 0x13 ^ v196 ^ (16 * (*(unsigned __int8 *)(v17 + (unsigned __int16)(v195 - 960 * ((unsigned __int16)((2185 * v195) >> 16) >> 5))) ^ 0x13));
  unsigned int v199 = (v198 << 8) + 1833471270 - ((v198 << 9) & 0xDA911A00);
  int v200 = 7 * ((v172 >> 4) ^ 0xA) + 3640;
  int v201 = *(unsigned __int8 *)(v17
                            + (unsigned __int16)(7 * (v172 & 0xF ^ 8)
                                               + 3640
                                               - 960
                                               * ((unsigned __int16)((2185 * (7 * (v172 & 0xF ^ 8) + 3640)) >> 16) >> 5))) ^ 0x13;
  unsigned int v202 = (v199 ^ 0x6D488D26 | v201) ^ (16
                                     * (*(unsigned __int8 *)(v17
                                                           + (unsigned __int16)(v200
                                                                              - 960
                                                                              * ((unsigned __int16)((2185 * v200) >> 16) >> 5))) ^ 0x13));
  int v203 = v188 & 0xF;
  LODWORD(STACK[0x688]) = v203;
  unsigned int v204 = 7 * (v203 & 0xFFFFFF0F | (16 * (v201 & 0xF)));
  LODWORD(STACK[0x684]) = v189;
  unsigned int v205 = 7 * (v202 & 0xF0 | (v189 >> 4));
  LODWORD(STACK[0x5AC]) = v205;
  LODWORD(STACK[0x5A0]) = v204;
  if (v204 >= 0x3C0) {
    unsigned int v206 = v204 - 960;
  }
  else {
    unsigned int v206 = 7 * (v203 & 0xFFFFFF0F | (16 * (v201 & 0xF)));
  }
  LODWORD(STACK[0x5EC]) = v206;
  if (v205 >= 0x3C0) {
    int v207 = v205 - 960;
  }
  else {
    int v207 = 7 * (v202 & 0xF0 | (v189 >> 4));
  }
  LODWORD(STACK[0x5FC]) = v207;
  int v208 = (v202 >> 4) & 0xF0 | (v189 >> 8) & 0xF;
  LODWORD(STACK[0x5C8]) = v208;
  if ((7 * v208) >= 0x3C0) {
    int v209 = 7 * v208 - 960;
  }
  else {
    int v209 = 7 * v208;
  }
  LODWORD(STACK[0x618]) = v209;
  LODWORD(STACK[0x68C]) = v186;
  unsigned int v210 = 7 * ((v198 & 0xF0 | ((unsigned __int16)v186 >> 12)) ^ 1);
  LODWORD(STACK[0x638]) = v199;
  unsigned int v211 = 7 * (((v199 >> 12) & 0xF0 | HIWORD(v186) & 0xF) ^ 0x84);
  int v212 = STACK[0x5D8];
  unsigned __int8 v213 = (6 - LODWORD(STACK[0x5D8])) | (LODWORD(STACK[0x5D8]) + 9);
  LODWORD(STACK[0x698]) = v187 >> 20;
  int v214 = (v187 >> 20) ^ 0x4E6;
  LODWORD(STACK[0x634]) = v214;
  unsigned int v215 = 7 * ((v213 & v214 & 0xF | (16 * ((v199 >> 20) & 0xF))) ^ 0x40);
  unsigned int v216 = 7 * (((v199 >> 20) & 0xF0 | (v214 >> 4)) ^ 0xD0);
  int v217 = (LODWORD(STACK[0x5B8]) - ((2 * LODWORD(STACK[0x5B8])) & 0x3689D16) + 28593803) ^ v212;
  LODWORD(STACK[0x6B8]) = v70;
  int v218 = 7 * (HIBYTE(v70) & 0xF ^ 5) + 3640;
  int v219 = LODWORD(STACK[0x670]) ^ 0x60F38CB;
  LODWORD(STACK[0x52C]) = v219;
  int v220 = 7 * (~(v70 >> 20) & 0xF) + 3640;
  int v221 = 7 * (HIWORD(v70) & 0xF ^ 0xC) + 3640;
  int v222 = ((((*(unsigned __int8 *)(v17
                                + (unsigned __int16)(v218
                                                   - 960 * ((unsigned __int16)((2185 * v218) >> 16) >> 5))) ^ 0x13) << 8) ^ ((*(unsigned __int8 *)(v17 + (unsigned __int16)(7 * (v70 >> 28) + 3640 - 960 * ((unsigned __int16)((2185 * (7 * (v70 >> 28) + 3640)) >> 16) >> 5))) ^ 0x13) << 12) | *(unsigned __int8 *)(v17 + (unsigned __int16)(v221 - 960 * ((unsigned __int16)((2185 * v221) >> 16) >> 5))) ^ 0x13) << 8) ^ ((*(unsigned __int8 *)(v17 + (unsigned __int16)(v220 - 960 * ((unsigned __int16)((2185 * v220) >> 16) >> 5))) ^ 0x13) << 12);
  int v223 = 7 * (((unsigned __int16)v70 >> 12) ^ 4) + 3640;
  LOWORD(v220) = v223 - 960 * ((unsigned __int16)((2185 * v223) >> 16) >> 5);
  int v224 = 7 * ((v70 >> 8) & 0xF ^ 3) + 3640;
  int v225 = v222 | *(unsigned __int8 *)(v17
                                   + (unsigned __int16)(v224
                                                      - 960
                                                      * ((unsigned __int16)((2185 * v224) >> 16) >> 5))) ^ 0x13;
  int v226 = (v225 << 8) + 316454532 - ((v225 << 9) & 0x25B96C00);
  unsigned int v227 = v219 - v160 - ((2 * (v219 - v160)) & 0x62F4F562) + 830110385;
  int v228 = (v71 & 0x208) + ((v227 >> 28) ^ 3) + (v71 & 0x208 ^ 0x208);
  LOWORD(v219) = 7 * v228 - 960 * ((unsigned __int16)((122339 * v228) >> 16) >> 8);
  unsigned int v229 = v226 ^ ((*(unsigned __int8 *)(v17 + (unsigned __int16)v220) ^ 0x13) << 12);
  unsigned int v230 = v226;
  int v231 = *(unsigned __int8 *)(v17 + v71);
  char v232 = v231 ^ 0x13;
  unsigned int v233 = (v229 ^ 0x12DCB684 | v231 ^ 0x13) ^ (16
                                            * (*(unsigned __int8 *)(v17
                                                                  + (unsigned __int16)(7
                                                                                     * ((v70 >> 4) ^ 5)
                                                                                     + 3640
                                                                                     - 960
                                                                                     * ((unsigned __int16)((2185 * (7 * ((v70 >> 4) ^ 5u) + 3640)) >> 16) >> 5))) ^ 0x13));
  int v234 = 7 * (HIBYTE(v227) & 0xF ^ 1) + 3640;
  int v235 = *(unsigned __int8 *)(v17 + (unsigned __int16)v219);
  int v236 = 7 * ((BYTE2(v227) ^ 0x7A) >> ((v235 & 4 ^ 4) + (v235 & 4))) + 3640;
  int v237 = ((*(unsigned __int8 *)(v17
                              + (unsigned __int16)(v234
                                                 - 960 * ((unsigned __int16)((2185 * v234) >> 16) >> 5))) ^ 0x13) << 8) ^ ((v235 ^ 0x13) << 12);
  int v238 = 7 * ((BYTE2(v227) ^ 0x7A) & 0xF) + 3640;
  int v239 = v237 | *(unsigned __int8 *)(v17
                                   + (unsigned __int16)(v238
                                                      - 960
                                                      * ((unsigned __int16)((2185 * v238) >> 16) >> 5))) ^ 0x13;
  int v240 = 7 * (((unsigned __int16)v227 >> 12) ^ 7) + 3640;
  int v241 = 7 * ((v227 >> 8) & 0xF ^ 0xA) + 3640;
  int v242 = (v239 << 8) ^ ((*(unsigned __int8 *)(v17
                                            + (unsigned __int16)(v236
                                                               - 960
                                                               * ((unsigned __int16)((8739 * v236) >> 16) >> 7))) ^ 0x13) << 12);
  int v243 = 7 * ((v227 >> 4) ^ 0xB) + 3640;
  int v244 = *(unsigned __int8 *)(v17
                            + (unsigned __int16)(v243
                                               - 960 * ((unsigned __int16)((2185 * v243) >> 16) >> 5)));
  int v245 = v244 & 0xF ^ 0xC | v244 & 0xF ^ 3;
  unsigned int v246 = 7 * (v227 & 0xF ^ 1) + 3640 - 960 * ((2185 * (7 * (v227 & 0xF ^ 1) + 3640)) >> 21);
  int v247 = v242 | *(unsigned __int8 *)(v17
                                   + (unsigned __int16)(v241
                                                      - 960
                                                      * ((unsigned __int16)((2185 * v241) >> 16) >> 5))) ^ 0x13;
  unsigned int v248 = (v247 << 8) + 1327288532 - ((v247 << 9) & 0x9E39A000);
  unsigned int v249 = v248 ^ ((*(unsigned __int8 *)(v17
                                     + (unsigned __int16)(v240
                                                        - 960
                                                        * ((unsigned __int16)((2185 * v240) >> 16) >> 5))) ^ 0x13) << 12);
  int v250 = *(unsigned __int8 *)(v17 + (unsigned __int16)v246) ^ 0x13;
  unsigned int v251 = (v249 ^ 0x4F1CD0D4 | v250) ^ (16 * (v244 ^ 0x13));
  unsigned int v252 = 7 * (v245 & (v231 ^ 3) & 0xFFFFFF0F | (16 * (v250 & 0xF)));
  unsigned __int16 v253 = (unsigned __int16)(v252 + 3983) % 0x3C0u;
  LODWORD(STACK[0x590]) = v210;
  unsigned int v254 = v210 - 960;
  if (v210 < 0x3C0) {
    unsigned int v254 = v210;
  }
  LODWORD(STACK[0x5A4]) = v254;
  LODWORD(STACK[0x594]) = v211;
  if (v211 >= 0x3C0) {
    unsigned int v255 = v211 - 960;
  }
  else {
    unsigned int v255 = v211;
  }
  LODWORD(STACK[0x5A8]) = v255;
  LODWORD(STACK[0x598]) = v215;
  if (v215 >= 0x3C0) {
    unsigned int v256 = v215 - 960;
  }
  else {
    unsigned int v256 = v215;
  }
  LODWORD(STACK[0x5B8]) = v256;
  LODWORD(STACK[0x59C]) = v216;
  if (v216 >= 0x3C0) {
    unsigned int v257 = v216 - 960;
  }
  else {
    unsigned int v257 = v216;
  }
  LODWORD(STACK[0x5D8]) = v257;
  if (v252 >= 0x3C0) {
    v252 -= 960;
  }
  int v258 = *(unsigned __int8 *)(v17 + v253) ^ 0x13;
  unsigned int v259 = 7 * ((v258 - 798318148 + (~(2 * v258) | 0xFFFFFE87) + 1) ^ v126);
  unsigned int v260 = (v259 + 3983) % 0x3C0;
  LODWORD(STACK[0x670]) = v233;
  unsigned int v261 = 7 * (v251 & 0xF0 | (v233 >> 4));
  int v262 = *(unsigned __int8 *)(v17 + v259 % 0x3C0) >> 4;
  int v263 = 7 * (((v262 ^ 1) - 2 * ((v262 ^ 1) & 7 ^ v262 & 4) + 19) ^ *(unsigned __int8 *)(v17 + v252))
       + 3983;
  unsigned int v264 = v263 - 960 * ((8739 * v263) >> 23);
  unsigned int v265 = v261 - 960;
  if (v261 < 0x3C0) {
    unsigned int v265 = 7 * (v251 & 0xF0 | (v233 >> 4));
  }
  unsigned int v266 = *(unsigned __int8 *)(v17 + (unsigned __int16)(v261 + 3983) % 0x3C0u) ^ (16
                                                                               * (*(unsigned __int8 *)(v17 + (unsigned __int16)v264) ^ 0x13)) ^ 0x13;
  __int16 v267 = 7 * v266;
  v266 *= 244671;
  __int16 v268 = v267 - 960 * ((v266 + 139217799) >> 25);
  unsigned int v269 = 7 * ((v251 >> 4) & 0xF0 | (v233 >> 8) & 0xF);
  int v270 = *(unsigned __int8 *)(v17 + (unsigned __int16)(v267 - 960 * (v266 >> 25))) >> 4;
  int v271 = ((v270 ^ 1) - 2 * ((v270 ^ 1) & 0xFB ^ v270 & 8) + 19) ^ *(unsigned __int8 *)(v17 + v265);
  int v272 = 16
       * (*(unsigned __int8 *)(v17
                             + (unsigned __int16)(7 * v271
                                                + 3983
                                                - 960
                                                * ((unsigned __int16)((8739 * (7 * v271 + 3983)) >> 16) >> 7))) ^ 0x13);
  int v273 = *(unsigned __int8 *)(v17 + (unsigned __int16)(v269 + 3983) % 0x3C0u);
  unsigned int v274 = (v272 | v273) & 0x4040404 | (v273 ^ 0x13) & 0xFFFFFFFB ^ v272 & 0xFFFFFBFF;
  int v275 = *(unsigned __int8 *)(v17 + v260) ^ (16 * (*(unsigned __int8 *)(v17 + (unsigned __int16)(v268 + 3983)) ^ 0x13)) ^ ((*(unsigned __int8 *)(v17 + (unsigned __int16)(7 * v274 + 3983) % 0x3C0u) ^ 0x13) << 8);
  unsigned int v276 = *(unsigned __int8 *)(v17 + (unsigned __int16)(7 * v274 - 960 * ((unsigned __int16)((244671 * v274) >> 16) >> 9)));
  unsigned int v277 = v269 - 960;
  if (v269 < 0x3C0) {
    unsigned int v277 = v269;
  }
  int v278 = 7
       * ((((v276 >> 4) ^ 1) - 2 * (((v276 >> 4) ^ 1) & 3) + 19) ^ *(unsigned __int8 *)(v17 + v277))
       + 3983;
  LOWORD(v278) = v278 - 960 * ((unsigned __int16)((8739 * v278) >> 16) >> 7);
  LODWORD(STACK[0x5B4]) = v229;
  int v279 = ((unsigned __int16)v229 >> 12) ^ 0xB ^ ((unint64_t)(((unsigned __int16)v249 >> 12) ^ 0xDu) << ((v278 | 0x2E) - (v278 & 0xD1u) - 42));
  int v280 = *(unsigned __int8 *)(v17 + (7 * v279 + 3983) % 0x3C0u);
  int v281 = v280 ^ (16 * (*(unsigned __int8 *)(v17 + (unsigned __int16)v278) ^ 0x13)) ^ 0x13;
  int v282 = v275 ^ ((*(unsigned __int8 *)(v17 + (unsigned __int16)(7 * v281 + 3983) % 0x3C0u) ^ 0x13) << 12);
  int v283 = *(unsigned __int8 *)(v17
                            + (unsigned __int16)(7 * v281
                                               - 960 * ((unsigned __int16)((244671 * v281) >> 16) >> 9))) >> 4;
  int v284 = ((v283 ^ 0xE) + (v283 ^ 1)) & (HIWORD(v229) ^ 0x1C) ^ (v249 >> 12) & 0xF0;
  int v285 = 7
       * (*(unsigned char *)(v17 + v279 * ((v280 ^ 4) & 7 | v280 & 7 ^ 3u) % 0x3C0) ^ v283 ^ 0x12)
       + 3983;
  unsigned int v286 = 7 * (v284 ^ 0xC0);
  int v287 = *(unsigned __int8 *)(v17 + (unsigned __int16)(v286 + 3983) % 0x3C0u) ^ (16
                                                                               * (*(unsigned __int8 *)(v17 + (unsigned __int16)(v285 - 960 * ((unsigned __int16)((8739 * v285) >> 16) >> 7))) ^ 0x13)) ^ 0x13;
  __int16 v288 = 7 * v287;
  unsigned int v289 = 244671 * v287;
  int v290 = v282 ^ ((*(unsigned __int8 *)(v17 + (unsigned __int16)(v288 - 960 * ((v289 + 139217799) >> 25) + 3983)) ^ 0x13) << 16);
  if (v286 >= 0x3C0) {
    v286 -= 960;
  }
  char v291 = (*(unsigned char *)(v17 + (unsigned __int16)(v288 - 960 * (v289 >> 25))) >> 4) ^ 1;
  int v292 = 7 * ((v291 - 2 * (v291 & 3) + 19) ^ *(unsigned __int8 *)(v17 + v286)) + 3983;
  unsigned int v293 = 7 * ((((v230 >> 20) ^ 0xFFFFFEDD) + ((v230 >> 20) & 0xFF0 ^ 0x12F) + 1) ^ HIWORD(v248) & 0xF0 ^ 0x10);
  int v294 = *(unsigned __int8 *)(v17 + (v293 + 3983) % 0x3C0) ^ (16
                                                            * (*(unsigned __int8 *)(v17
                                                                                  + (unsigned __int16)(v292 - 960 * ((unsigned __int16)((8739 * v292) >> 16) >> 7))) ^ 0x13)) ^ 0x13;
  int v295 = v290 ^ ((*(unsigned __int8 *)(v17 + (unsigned __int16)(7 * v294 + 3983) % 0x3C0u) ^ 0x13) << 20);
  int v296 = *(unsigned __int8 *)(v17
                            + (unsigned __int16)(7 * v294
                                               - 960 * ((unsigned __int16)((244671 * v294) >> 16) >> 9))) >> 4;
  int v297 = 7
       * (((v296 ^ 1) - 2 * ((v296 ^ 1) & 7 ^ v296 & 4) + 19) ^ *(unsigned __int8 *)(v17 + v293 % 0x3C0))
       + 3983;
  LODWORD(STACK[0x50C]) = v230;
  unsigned int v298 = 7 * (((v248 >> 20) & 0xF0 | HIBYTE(v230) & 0xF) ^ 0xF2);
  int v299 = *(unsigned __int8 *)(v17
                            + (unsigned __int16)(7 * (((v248 >> 20) & 0xF0 | HIBYTE(v230) & 0xF) ^ 0xF2) + 3983)
                            % 0x3C0u) ^ (16
                                       * (*(unsigned __int8 *)(v17
                                                             + (unsigned __int16)(v297
                                                                                - 960
                                                                                * ((unsigned __int16)((8739 * v297) >> 16) >> 7))) ^ 0x13));
  if (v298 >= 0x3C0) {
    v298 -= 960;
  }
  unsigned int v300 = v299 ^ 0x13;
  __int16 v301 = 7 * v300;
  v300 *= 244671;
  __int16 v302 = v301 - 960 * ((v300 + 139217799) >> 25);
  LOWORD(v300) = v301 - 960 * (v300 >> 25);
  int v303 = v295 ^ 0x13;
  int v304 = (*(unsigned __int8 *)(v17 + (unsigned __int16)(v302 + 3983)) ^ 0x13) << 24;
  int v305 = *(unsigned __int8 *)(v17 + (unsigned __int16)v300) >> 4;
  int v306 = ((v305 ^ 1) - 2 * ((v305 ^ 1) & 7 ^ v305 & 4) + 19) ^ *(unsigned __int8 *)(v17 + v298);
  unsigned int v307 = v304 & 0x27000000 ^ v303 & 0x27169850 | v304 & 0xD8000000 ^ v303 & 0xD8E967AF;
  int v308 = v307 + 738615937 - ((2 * v307) & 0x580CC502);
  LODWORD(STACK[0x504]) = v308;
  int v309 = 7 * ((HIBYTE(v248) & 0xF0 | (v230 >> 28)) ^ 0x41) + 3983;
  int v310 = *(unsigned __int8 *)(v17
                            + (unsigned __int16)(7
                                               * (*(unsigned __int8 *)(v17
                                                                     + (unsigned __int16)(v309
                                                                                        - 960
                                                                                        * ((unsigned __int16)((8739 * v309) >> 16) >> 7))) ^ (unsigned __int16)(16 * (*(unsigned __int8 *)(v17 + (unsigned __int16)(7 * v306 + 3983 - 960 * ((unsigned __int16)((8739 * (7 * v306 + 3983)) >> 16) >> 7))) ^ 0x13)) ^ 0x13)
                                               + 3983)
                            % 0x3C0u);
  LODWORD(STACK[0x508]) = v310;
  int v311 = *(unsigned __int8 *)(v17
                            + (unsigned __int16)(7
                                               * (v232 & 0xF | (16 * ((v308 ^ 1) & (20 - (v310 & 5 ^ 1 | v310 & 5 ^ 4)))))
                                               + 1813)
                            % 0x3C0u);
  LODWORD(STACK[0x4F4]) = v311;
  unsigned int v312 = (v217 ^ 0xDD47C787) + LODWORD(STACK[0x520]);
  int v313 = LODWORD(STACK[0x564]) ^ 0xEF75814;
  LODWORD(STACK[0x520]) = v313;
  int v314 = *(unsigned __int8 *)(v17
                            + (unsigned __int16)(7 * (v311 & 0xF ^ 3)
                                               + 3822
                                               - 960
                                               * ((unsigned __int16)((2185 * (7 * (v311 & 0xF ^ 3u) + 3822)) >> 16) >> 5)));
  LODWORD(STACK[0x500]) = v314;
  unsigned int v315 = v313 - 1944238268 + v312 - ((2 * (v313 - 1944238268 + v312)) & 0x4BC01F4E) - 1512042585;
  int v316 = ((v314 ^ 0xC) & 0xF | v314 & 0xF ^ 3) & (HIBYTE(v315) ^ 0xA5);
  int v317 = v217 ^ v170 ^ 0x122CB601;
  int v318 = v217 ^ v170;
  unsigned int v319 = (-1800351891 - (((v217 ^ 0xDD47C787) - 169560882 + v317) & 0x20)) ^ ((v217 ^ 0xDD47C787) - 169560882 + v317) & 0xFFFFFFDF;
  unsigned int v320 = ((2 * v319) & 0xFFFDFAD2) + (v319 ^ 0xFFFEFD69);
  int v321 = LODWORD(STACK[0x4E8]) ^ 0x3C2A16E9;
  int v322 = LODWORD(STACK[0x510]) ^ v321;
  int v323 = v322 - 169560882;
  unsigned int v324 = v322 - 169560882 + v160;
  int v325 = 7 * ((v315 >> 20) & 0xF ^ 0xE) + 3640;
  int v326 = ((*(unsigned __int8 *)(v17
                              + (unsigned __int16)(7 * v316
                                                 + 3640
                                                 - 960
                                                 * ((unsigned __int16)((8739 * (7 * v316 + 3640)) >> 16) >> 7))) ^ 0x13) << 8) ^ ((*(unsigned __int8 *)(v17 + (unsigned __int16)(7 * ((v315 >> 28) ^ 0xA) + 3640 - 960 * ((unsigned __int16)((2185 * (7 * ((v315 >> 28) ^ 0xA) + 3640)) >> 16) >> 5))) ^ 0x13) << 12) | *(unsigned __int8 *)(v17 + (unsigned __int16)(7 * (BYTE2(v315) & 0xF) + 3640 - 960 * ((unsigned __int16)((2185 * (7 * (HIWORD(v315) & 0xF) + 3640)) >> 16) >> 5))) ^ 0x13;
  int v327 = 7 * (~(v315 >> 8) & 0xF) + 3640;
  int v328 = (v326 << 8) ^ ((*(unsigned __int8 *)(v17
                                            + (unsigned __int16)(v325
                                                               - 960
                                                               * ((unsigned __int16)((2185 * v325) >> 16) >> 5))) ^ 0x13) << 12);
  unsigned int v329 = v320;
  unsigned int v330 = LODWORD(STACK[0x55C])
       - v324
       - 831176830
       - ((2 * (LODWORD(STACK[0x55C]) - v324 - 831176830) + 394620522) & 0x71AC3CE6)
       - 2070358616;
  int v331 = (((223 - v320) ^ (v320 + 800)) & 0x208) + (HIBYTE(v330) & 0xF ^ 8);
  int v332 = v328 | *(unsigned __int8 *)(v17
                                   + (unsigned __int16)(v327
                                                      - 960
                                                      * ((unsigned __int16)((2185 * v327) >> 16) >> 5))) ^ 0x13;
  unsigned int v333 = (v332 << 8) + 1614465301 - ((v332 << 9) & 0xC0759200);
  int v334 = 7 * (HIWORD(v330) & 0xF ^ 6) + 3640;
  int v335 = ((*(unsigned __int8 *)(v17
                              + (unsigned __int16)(7 * v331
                                                 - 960 * ((unsigned __int16)((15295 * v331) >> 16) >> 5))) ^ 0x13) << 8) ^ ((*(unsigned __int8 *)(v17 + (unsigned __int16)(7 * ((v330 >> 28) ^ 3) + 3640 - 960 * ((unsigned __int16)((2185 * (7 * ((v330 >> 28) ^ 3) + 3640)) >> 16) >> 5))) ^ 0x13) << 12);
  int v336 = 7 * ((v330 >> 20) & 0xF ^ 0xD) + 3640;
  int v337 = v335 | *(unsigned __int8 *)(v17
                                   + (unsigned __int16)(v334
                                                      - 960
                                                      * ((unsigned __int16)((2185 * v334) >> 16) >> 5))) ^ 0x13;
  int v338 = 7
       * (((unsigned __int16)(LOWORD(STACK[0x55C])
                            - (v322
                             - 19250
                             + v160)
                            + 16258
                            - ((2 * (LOWORD(STACK[0x55C]) - (v322 - 19250 + v160) + 16258) + 28266) & 0x3CE6)
                            - 10840) >> 12) ^ 1)
       + 3640;
  int v339 = (v337 << 8) ^ ((*(unsigned __int8 *)(v17
                                            + (unsigned __int16)(v336
                                                               - 960
                                                               * ((unsigned __int16)((2185 * v336) >> 16) >> 5))) ^ 0x13) << 12);
  int v340 = 7 * ((v330 >> 8) & 0xF ^ 0xE) + 3640;
  int v341 = v339 | *(unsigned __int8 *)(v17
                                   + (unsigned __int16)(v340
                                                      - 960
                                                      * ((unsigned __int16)((2185 * v340) >> 16) >> 5))) ^ 0x13;
  unsigned int v342 = v333 ^ ((*(unsigned __int8 *)(v17
                                     + (unsigned __int16)(7 * ((unsigned __int16)v315 >> 12)
                                                        + 3640
                                                        - 960
                                                        * ((unsigned __int16)((2185
                                                                             * (7
                                                                              * ((unsigned __int16)v315 >> 12)
                                                                              + 3640)) >> 16) >> 5))) ^ 0x13) << 12);
  int v343 = (v341 << 8) - ((v341 << 9) & 0xAD47800) - 2056635195;
  unsigned int v344 = v343 ^ ((*(unsigned __int8 *)(v17
                                     + (unsigned __int16)(v338
                                                        - 960
                                                        * ((unsigned __int16)((2185 * v338) >> 16) >> 5))) ^ 0x13) << 12);
  LODWORD(STACK[0x4CC]) = v344;
  unsigned int v345 = v343;
  LODWORD(STACK[0x4BC]) = v342;
  unsigned int v346 = 7 * (((v344 >> 12) & 0xF0 | HIWORD(v342) & 0xF) ^ 0xAA);
  LODWORD(STACK[0x4D8]) = (unsigned __int16)(v346 + 3983)
                        % (((112 - (_WORD)v346) & 0x3C0) + (((_WORD)v346 + 3983) & 0x3C0u));
  int v347 = v322 ^ LODWORD(STACK[0x6F4]);
  unsigned int v348 = ((v347 ^ 0x38E0FD8F) - 522608667 - ((2 * (v347 ^ 0x38E0FD8F)) & 0xC1B33FCA)) ^ v321;
  LODWORD(STACK[0x494]) = v347;
  unsigned int v349 = (v347 ^ 0xB019AB6F) + v323;
  unsigned int v350 = v349 ^ 0x94B0CF6D;
  unsigned int v351 = ((2 * ((v347 ^ 0xB019AB6F) - v350 - 632164114 + v348)) & 0xBFFFFFC6 ^ 0x174D4FC6)
       + (((v347 ^ 0xB019AB6F) - v350 - 632164114 + v348) ^ 0x54595810);
  LODWORD(STACK[0x4E4]) = v351;
  LODWORD(STACK[0x4FC]) = v315;
  int v352 = 7 * ((v315 >> 4) ^ 0xA) + 3640;
  int v353 = *(unsigned __int8 *)(v17
                            + (unsigned __int16)(7 * (v315 & 0xF ^ 7)
                                               + 3640
                                               - 960
                                               * ((unsigned __int16)((2185 * (7 * (v315 & 0xF ^ 7) + 3640)) >> 16) >> 5))) ^ 0x13;
  unsigned int v354 = (v342 ^ 0x603AC915 | v353) ^ (16
                                     * (*(unsigned __int8 *)(v17
                                                           + (unsigned __int16)(v352
                                                                              - 960
                                                                              * ((unsigned __int16)((2185 * v352) >> 16) >> 5))) ^ 0x13));
  LODWORD(STACK[0x4B0]) = v354;
  int v355 = 7 * ((v330 >> 4) ^ 7) + 3640;
  int v356 = *(unsigned __int8 *)(v17
                            + (unsigned __int16)(7 * (v330 & 0xF ^ 3)
                                               + 3640
                                               - 960
                                               * ((unsigned __int16)((2185 * (7 * (v330 & 0xF ^ 3) + 3640)) >> 16) >> 5))) ^ 0x13;
  LODWORD(STACK[0x4AC]) = v356;
  LODWORD(STACK[0x488]) = v353 & 0xF;
  unsigned int v357 = 7 * (v353 & 0xF | (16 * (v356 & 0xF)));
  LODWORD(STACK[0x4A4]) = v357;
  int v358 = *(unsigned __int8 *)(v17
                            + (unsigned __int16)(v355
                                               - 960 * ((unsigned __int16)((2185 * v355) >> 16) >> 5))) ^ 0x13;
  LODWORD(STACK[0x4A8]) = 16 * v358;
  unsigned int v359 = 7 * ((((v345 ^ (16 * v358 - ((32 * v358) & 0x22222222) + 278)) >> 4) & 0xF0 | (v354 >> 8) & 0xF) ^ 0xD0);
  LODWORD(STACK[0x4B4]) = v359;
  if (v357 >= 0x3C0) {
    unsigned int v360 = v357 - 960;
  }
  else {
    unsigned int v360 = v357;
  }
  LODWORD(STACK[0x4B8]) = v360;
  if (v359 >= 0x3C0) {
    unsigned int v361 = v359 - 960;
  }
  else {
    unsigned int v361 = v359;
  }
  LODWORD(STACK[0x4C8]) = v361;
  if (v346 >= 0x3C0) {
    unsigned int v362 = v346 - 960;
  }
  else {
    unsigned int v362 = v346;
  }
  LODWORD(STACK[0x4D0]) = v362;
  LODWORD(STACK[0x4C4]) = v345;
  LODWORD(STACK[0x4C0]) = v333;
  unsigned int v363 = 7 * ((HIWORD(v345) & 0xF0 | (v333 >> 20) & 0xF) ^ 0x63);
  unsigned int v364 = 7 * (((v345 >> 20) & 0xF0 | HIBYTE(v333) & 0xF) ^ 0x50);
  unsigned int v365 = LODWORD(STACK[0x51C]) ^ 0x9AD5E0E1;
  LODWORD(STACK[0x4A0]) = v318;
  unsigned int v366 = (v365 ^ v318)
       + ((v317 + 1598753077) ^ 0xA0B4F6CB)
       + ((2 * (v317 + 1598753077)) & 0x4169ED96)
       - v329
       - 632230313;
  unsigned int v367 = ((2 * v366) & 0xF53BE5FE ^ 0x150945E6) + (v366 ^ 0xF13B550C);
  LODWORD(STACK[0x4E8]) = v367;
  unsigned int v368 = v312 + (v318 ^ 0xFB38C017);
  unsigned int v369 = v312 + 259095340 + v367;
  unsigned int v370 = LODWORD(STACK[0x67C]) ^ 0x97CC2996;
  LODWORD(STACK[0x51C]) = v370;
  unsigned int v371 = ((2 * v350) & 0xAD858B32) + (v349 ^ 0x42720AF4);
  unsigned int v372 = v369 + v370 - ((2 * (v369 + v370)) & 0xE69B8D6A) + 1934476981;
  unsigned int v373 = v324 + (v347 ^ 0x590DDD79);
  unsigned int v374 = v324 - 1774169475 + v351;
  int v375 = 7 * (HIBYTE(v372) & 0xF ^ 3) + 3640;
  int v376 = 7 * ((v372 >> 20) & 0xF ^ 4) + 3640;
  int v377 = 7 * (HIWORD(v372) & 0xF ^ 0xD) + 3640;
  int v378 = ((*(unsigned __int8 *)(v17
                              + (unsigned __int16)(v375
                                                 - 960 * ((unsigned __int16)((2185 * v375) >> 16) >> 5))) ^ 0x13) << 8) ^ ((*(unsigned __int8 *)(v17 + (unsigned __int16)(7 * ((v372 >> 28) ^ 7) + 3640 - 960 * ((unsigned __int16)((2185 * (7 * ((v372 >> 28) ^ 7) + 3640)) >> 16) >> 5))) ^ 0x13) << 12) | *(unsigned __int8 *)(v17 + (unsigned __int16)(v377 - 960 * ((unsigned __int16)((2185 * v377) >> 16) >> 5))) ^ 0x13;
  int v379 = 7 * (((unsigned __int16)v372 >> 12) ^ 0xC) + 3640;
  int v380 = (v378 << 8) ^ ((*(unsigned __int8 *)(v17
                                            + (unsigned __int16)(v376
                                                               - 960
                                                               * ((unsigned __int16)((2185 * v376) >> 16) >> 5))) ^ 0x13) << 12);
  int v381 = 7 * ((v372 >> 8) & 0xF ^ 6) + 3640;
  int v382 = 7 * ((v372 >> 4) ^ 0xB) + 3640;
  int v383 = v380 | *(unsigned __int8 *)(v17
                                   + (unsigned __int16)(v381
                                                      - 960
                                                      * ((unsigned __int16)((2185 * v381) >> 16) >> 5))) ^ 0x13;
  unsigned int v384 = (v383 << 8) + 47068492 - ((v383 << 9) & 0x59C6A00);
  unsigned int v385 = LODWORD(STACK[0x56C])
       - v374
       - 1435164039
       - ((2 * (LODWORD(STACK[0x56C]) - v374 - 1435164039)) & 0x40CDFDEA)
       + 543620853;
  unsigned int v386 = v384 ^ ((*(unsigned __int8 *)(v17
                                     + (unsigned __int16)(v379
                                                        - 960
                                                        * ((unsigned __int16)((2185 * v379) >> 16) >> 5))) ^ 0x13) << 12);
  int v387 = *(unsigned __int8 *)(v17
                            + (unsigned __int16)(7 * (v372 & 0xF ^ 5)
                                               + 3640
                                               - 960
                                               * ((unsigned __int16)((2185 * (7 * (v372 & 0xF ^ 5) + 3640)) >> 16) >> 5))) ^ 0x13;
  unsigned int v388 = (v386 ^ 0x2CE354C | v387) ^ (16
                                    * (*(unsigned __int8 *)(v17
                                                          + (unsigned __int16)(v382
                                                                             - 960
                                                                             * ((unsigned __int16)((2185 * v382) >> 16) >> 5))) ^ 0x13));
  int v389 = 7 * ((v385 >> 20) & 0xF ^ 6) + 3640;
  int v390 = 7 * (HIWORD(v385) & 0xF ^ 6) + 3640;
  int v391 = 7
       * ((unsigned __int16)~(LOWORD(STACK[0x56C])
                            - v374
                            + 8825
                            - ((2 * (LOWORD(STACK[0x56C]) - v374 + 8825)) & 0xFDEA)
                            - 267) >> 12)
       + 3640;
  int v392 = ((*(unsigned __int8 *)(v17
                              + (unsigned __int16)(7 * (HIBYTE(v385) & 0xF)
                                                 + 3640
                                                 - 960
                                                 * ((unsigned __int16)((2185
                                                                                    * (7 * (HIBYTE(v385) & 0xF) + 3640)) >> 16) >> 5))) ^ 0x13) << 8) ^ ((*(unsigned __int8 *)(v17 + (unsigned __int16)(7 * ((v385 >> 28) ^ 2) + 3640 - 960 * ((unsigned __int16)((2185 * (7 * ((v385 >> 28) ^ 2) + 3640)) >> 16) >> 5))) ^ 0x13) << 12) | *(unsigned __int8 *)(v17 + (unsigned __int16)(v390 - 960 * ((unsigned __int16)((2185 * v390) >> 16) >> 5))) ^ 0x13;
  int v393 = 7 * ((v385 >> 8) & 0xF ^ 0xE) + 3640;
  int v394 = 7 * (~(v385 >> 4) & 0xF) + 3640;
  int v395 = (v392 << 8) ^ ((*(unsigned __int8 *)(v17
                                            + (unsigned __int16)(v389
                                                               - 960
                                                               * ((unsigned __int16)((2185 * v389) >> 16) >> 5))) ^ 0x13) << 12) | *(unsigned __int8 *)(v17 + (unsigned __int16)(v393 - 960 * ((unsigned __int16)((2185 * v393) >> 16) >> 5))) ^ 0x13;
  unsigned int v396 = (v395 << 8) + 1951013168 - ((v395 << 9) & 0xE8943200);
  unsigned int v397 = v396 ^ ((*(unsigned __int8 *)(v17
                                     + (unsigned __int16)(v391
                                                        - 960
                                                        * ((unsigned __int16)((2185 * v391) >> 16) >> 5))) ^ 0x13) << 12);
  int v398 = *(unsigned __int8 *)(v17
                            + (unsigned __int16)(7 * (v385 & 0xF ^ 5)
                                               + 3640
                                               - 960
                                               * ((unsigned __int16)((2185 * (7 * (v385 & 0xF ^ 5) + 3640)) >> 16) >> 5))) ^ 0x13;
  unsigned int v399 = (v397 ^ 0x744A1930 | v398) ^ (16
                                     * (*(unsigned __int8 *)(v17
                                                           + (unsigned __int16)(v394
                                                                              - 960
                                                                              * ((unsigned __int16)((2185 * v394) >> 16) >> 5))) ^ 0x13));
  LODWORD(STACK[0x67C]) = v387 & 0xF;
  unsigned int v400 = 7 * (v387 & 0xF | (16 * (v398 & 0xF)));
  LODWORD(STACK[0x49C]) = v388;
  unsigned int v401 = 7 * (v399 & 0xF0 | (v388 >> 4));
  unsigned int v402 = 7 * ((v399 >> 4) & 0xF0 | (v388 >> 8) & 0xF);
  LODWORD(STACK[0x498]) = v386;
  unsigned int v403 = 7 * (((v397 >> 8) & 0xF0 | ((unsigned __int16)v386 >> 12)) ^ 0x13);
  unsigned int v404 = 7 * (((v397 >> 12) & 0xF0 | HIWORD(v386) & 0xF) ^ 0xAE);
  LODWORD(STACK[0x490]) = v396;
  LODWORD(STACK[0x48C]) = v384;
  unsigned int v405 = 7 * ((HIWORD(v396) & 0xF0 | (v384 >> 20) & 0xF) ^ 0x4C);
  unsigned int v406 = 7 * (((v396 >> 20) & 0xF0 | HIBYTE(v384) & 0xF) ^ 0x42);
  LODWORD(STACK[0x480]) = v329;
  unsigned int v407 = v368 + 1624454747 + v329;
  __int16 v408 = v372 ^ v407;
  LODWORD(STACK[0x404]) = v372 ^ v407;
  int v409 = v407 ^ (v329 - 1173081391);
  LODWORD(STACK[0x484]) = v409;
  v369 ^= 0x7CE5DB61u;
  LODWORD(STACK[0x46C]) = v369;
  int v410 = LODWORD(STACK[0x540]) + 765332154;
  LODWORD(STACK[0x470]) = v369 - v409;
  LODWORD(STACK[0x3B8]) = v410;
  unsigned int v411 = v369 - v409 + v410 - ((2 * (v369 - v409 + v410)) & 0xC18203A8) - 524221996;
  unsigned int v412 = v373 + 1983926880 + v371;
  LODWORD(STACK[0x454]) = v412;
  unsigned int v413 = v371 - 481269087;
  LODWORD(STACK[0x460]) = v371 - 481269087;
  v374 ^= 0x7CE5DB61u;
  LODWORD(STACK[0x458]) = v374;
  int v414 = LODWORD(STACK[0x680]) ^ 0x3980A4F1;
  LODWORD(STACK[0x680]) = v412 ^ v413;
  unsigned int v415 = v374 - (v412 ^ v413);
  LODWORD(STACK[0x450]) = v415;
  LODWORD(STACK[0x510]) = v414;
  int v416 = v414 - v415 - ((2 * (v414 - v415)) & 0x2922E864);
  int v417 = 7 * ((v411 >> 20) & 0xF ^ 0xC) + 3640;
  LOWORD(v374) = v417 - 960 * ((unsigned __int16)((2185 * v417) >> 16) >> 5);
  int v418 = 7 * (HIWORD(v411) & 0xF ^ 1) + 3640;
  int v419 = 7 * ((v411 >> 8) & 0xF ^ 1) + 3640;
  int v420 = (((*(unsigned __int8 *)(v17
                               + (unsigned __int16)(7 * (HIBYTE(v411) & 0xF)
                                                  + 3640
                                                  - 960
                                                  * ((unsigned __int16)((2185
                                                                                     * (7 * (HIBYTE(v411) & 0xF) + 3640)) >> 16) >> 5))) ^ 0x13) << 16) ^ ((*(unsigned __int8 *)(v17 + (unsigned __int16)(7 * ((v411 >> 28) ^ 0xE) + 3640 - 960 * ((unsigned __int16)((2185 * (7 * ((v411 >> 28) ^ 0xE) + 3640)) >> 16) >> 5))) ^ 0x13) << 20) | ((*(unsigned __int8 *)(v17 + (unsigned __int16)(v418 - 960 * ((unsigned __int16)((2185 * v418) >> 16) >> 5))) ^ 0x13) << 8)) ^ ((*(unsigned __int8 *)(v17 + (unsigned __int16)v374) ^ 0x13) << 12) | *(unsigned __int8 *)(v17 + (unsigned __int16)(v419 - 960 * ((unsigned __int16)((2185 * v419) >> 16) >> 5))) ^ 0x13;
  LODWORD(STACK[0x47C]) = v411;
  int v421 = 7 * ((v411 >> 4) ^ 0xD) + 3640;
  unsigned int v422 = (v420 << 8) - 1169248872 - ((v420 << 9) & 0x749D5A00);
  unsigned int v423 = v416 - 1802406862;
  unsigned int v424 = 7 * (((v416 - 1802406862) >> 28) ^ 9) + 3640;
  int v425 = 7 * (HIBYTE(v423) & 0xF ^ 4) + 3640;
  int v426 = 7 * ((v423 >> 20) & 0xF ^ 9) + 3640;
  int v427 = ((*(unsigned __int8 *)(v17
                              + (unsigned __int16)(v425
                                                 - 960 * ((unsigned __int16)((2185 * v425) >> 16) >> 5))) ^ 0x13) << 8) ^ ((*(unsigned __int8 *)(v17 + (unsigned __int16)(v424 - 960 * ((unsigned __int16)((2185 * v424) >> 16) >> 5))) ^ 0x13) << 12);
  int v428 = 7 * (HIWORD(v423) & 0xF ^ 1) + 3640;
  unsigned int v429 = v422 ^ ((*(unsigned __int8 *)(v17
                                     + (unsigned __int16)(7 * ((unsigned __int16)v411 >> 12)
                                                        + 3640
                                                        - 960
                                                        * ((unsigned __int16)((2185
                                                                             * (7
                                                                              * ((unsigned __int16)v411 >> 12)
                                                                              + 3640)) >> 16) >> 5))) ^ 0x13) << 12);
  int v430 = *(unsigned __int8 *)(v17
                            + (unsigned __int16)(7 * (v411 & 0xF ^ 4)
                                               + 3640
                                               - 960
                                               * ((unsigned __int16)((2185 * (7 * (v411 & 0xF ^ 4) + 3640)) >> 16) >> 5))) ^ 0x13;
  unsigned int v431 = (v429 ^ 0xBA4EAD98 | v430) ^ (16
                                     * (*(unsigned __int8 *)(v17
                                                           + (unsigned __int16)(v421
                                                                              - 960
                                                                              * ((unsigned __int16)((2185 * v421) >> 16) >> 5))) ^ 0x13));
  int v432 = 7 * (((unsigned __int16)v423 >> 12) ^ 7) + 3640;
  int v433 = ((v427 | *(unsigned __int8 *)(v17
                                     + (unsigned __int16)(v428
                                                        - 960
                                                        * ((unsigned __int16)((2185 * v428) >> 16) >> 5))) ^ 0x13) << 8) ^ ((*(unsigned __int8 *)(v17 + (unsigned __int16)(v426 - 960 * ((unsigned __int16)((2185 * v426) >> 16) >> 5))) ^ 0x13) << 12);
  int v434 = 7 * ((v423 >> 8) & 0xF ^ 4) + 3640;
  int v435 = *(unsigned __int8 *)(v17
                            + (unsigned __int16)(v434
                                               - 960 * ((unsigned __int16)((2185 * v434) >> 16) >> 5))) ^ 0x13;
  int v436 = (v433 | v435) - 2 * ((v433 | v435) & 0xC72212F ^ v435 & 8);
  int v437 = 7 * ((v423 >> 4) ^ 3) + 3640;
  LOWORD(v426) = 7 * (v423 & 0xF ^ 2)
               + 3640
               - 960 * ((unsigned __int16)((2185 * (7 * (v423 & 0xF ^ 2) + 3640)) >> 16) >> 5);
  v436 -= 1938677465;
  int v438 = v436 & 0x7FFFFDC7;
  unsigned int v439 = ((v436 << 8) ^ 0x72212700) + 1372317475 - ((2 * ((v436 << 8) ^ 0x72212700)) & 0xA397CE00);
  unsigned int v440 = v439 ^ ((*(unsigned __int8 *)(v17
                                     + (unsigned __int16)(v432
                                                        - 960
                                                        * ((unsigned __int16)((2185 * v432) >> 16) >> 5))) ^ 0x13) << 12);
  int v441 = *(unsigned __int8 *)(v17 + (unsigned __int16)v426) ^ 0x13;
  unsigned int v442 = (v440 ^ 0x51CBE723 | v441) ^ (16
                                     * (*(unsigned __int8 *)(v17
                                                           + (unsigned __int16)(v437
                                                                              - 960
                                                                              * ((unsigned __int16)((2185 * v437) >> 16) >> 5))) ^ 0x13));
  int v443 = v430 & 0xF;
  LODWORD(STACK[0x44C]) = v443;
  unsigned int v444 = 7 * (v443 & 0xFFFFFF0F | (16 * (v441 & 0xF)));
  unsigned __int16 v445 = (unsigned __int16)(v444 + 3983) % 0x3C0u;
  LODWORD(STACK[0x3DC]) = v363;
  unsigned int v446 = v363 - 960;
  if (v363 < 0x3C0) {
    unsigned int v446 = v363;
  }
  LODWORD(STACK[0x3E0]) = v446;
  LODWORD(STACK[0x3E4]) = v364;
  unsigned int v447 = v364 - 960;
  if (v364 < 0x3C0) {
    unsigned int v447 = v364;
  }
  LODWORD(STACK[0x3F4]) = v447;
  LODWORD(STACK[0x418]) = v400;
  unsigned int v448 = v400 - 960;
  if (v400 < 0x3C0) {
    unsigned int v448 = v400;
  }
  LODWORD(STACK[0x414]) = v448;
  LODWORD(STACK[0x424]) = v401;
  unsigned int v449 = v401 - 960;
  if (v401 < 0x3C0) {
    unsigned int v449 = v401;
  }
  LODWORD(STACK[0x41C]) = v449;
  LODWORD(STACK[0x428]) = v402;
  unsigned int v450 = v402 - 960;
  if (v402 < 0x3C0) {
    unsigned int v450 = v402;
  }
  LODWORD(STACK[0x420]) = v450;
  LODWORD(STACK[0x430]) = v403;
  unsigned int v451 = v403 - 960;
  if (v403 < 0x3C0) {
    unsigned int v451 = v403;
  }
  LODWORD(STACK[0x42C]) = v451;
  LODWORD(STACK[0x438]) = v404;
  unsigned int v452 = v404 - 960;
  if (v404 < 0x3C0) {
    unsigned int v452 = v404;
  }
  LODWORD(STACK[0x434]) = v452;
  LODWORD(STACK[0x440]) = v405;
  unsigned int v453 = v405 - 960;
  if (v405 < 0x3C0) {
    unsigned int v453 = v405;
  }
  LODWORD(STACK[0x43C]) = v453;
  LODWORD(STACK[0x448]) = v406;
  if (v406 >= 0x3C0) {
    v406 -= 960;
  }
  LODWORD(STACK[0x444]) = v406;
  if (v444 >= 0x3C0) {
    v444 -= 960;
  }
  int v454 = *(unsigned __int8 *)(v17 + v445) ^ 0x13;
  int v455 = STACK[0x6F0];
  int v456 = (v454 - 798318148 - ((2 * v454) & 0x178)) ^ LODWORD(STACK[0x6F0]);
  unsigned int v457 = 7 * v456 % 0x3C0u;
  unsigned int v458 = 7 * (v456 - (v438 ^ 0xC722107 | v438 ^ 0xF38DDCC0)) % 0x3C0;
  int v459 = (((*(unsigned char *)(v17 + v457) >> 4) ^ 1)
                         - 2 * (((*(unsigned char *)(v17 + v457) >> 4) ^ 1) & 7 ^ (*(unsigned char *)(v17 + v457) >> 4) & 4)
                         + 19) ^ *(unsigned __int8 *)(v17 + v444);
  unsigned int v460 = 7 * (v442 & 0xF0 | (v431 >> 4));
  unsigned int v461 = 7 * v459 + 3983 - 960 * ((8739 * (7 * v459 + 3983)) >> 23);
  if (v460 >= 0x3C0) {
    v460 -= 960;
  }
  unsigned int v462 = *(unsigned __int8 *)(v17 + (unsigned __int16)(7 * (v442 & 0xF0 | (v431 >> 4)) + 3983) % 0x3C0u) ^ (16 * (*(unsigned __int8 *)(v17 + (unsigned __int16)v461) ^ 0x13)) ^ 0x13;
  __int16 v463 = 7 * v462;
  v462 *= 244671;
  __int16 v464 = v463 - 960 * ((v462 + 139217799) >> 25);
  LOWORD(v462) = v463 - 960 * (v462 >> 25);
  int v465 = *(unsigned __int8 *)(v17 + v458) ^ (16 * (*(unsigned __int8 *)(v17 + (unsigned __int16)(v464 + 3983)) ^ 0x13));
  int v466 = *(unsigned __int8 *)(v17 + (unsigned __int16)v462) >> 4;
  int v467 = 7 * (((v466 ^ 1) - 2 * ((v466 ^ 1) & 7 ^ v466 & 4) + 19) ^ *(unsigned __int8 *)(v17 + v460))
       + 3983;
  unsigned int v468 = v467 - 960 * ((8739 * v467) >> 23);
  unsigned int v469 = 7 * ((v442 >> 4) & 0xF0 | (v431 >> 8) & 0xF);
  unsigned int v470 = v469 - 960;
  if (v469 < 0x3C0) {
    unsigned int v470 = 7 * ((v442 >> 4) & 0xF0 | (v431 >> 8) & 0xF);
  }
  int v471 = *(unsigned __int8 *)(v17 + (unsigned __int16)(v469 + 3983) % 0x3C0u) ^ (16
                                                                               * (*(unsigned __int8 *)(v17 + (unsigned __int16)v468) ^ 0x13)) ^ 0x13;
  unsigned int v472 = 7 * v471 + 3983 - 960 * ((34953 * (7 * v471 + 3983)) >> 25);
  LOBYTE(v471) = (*(unsigned char *)(v17
                           + (unsigned __int16)(7 * v471
                                              - 960 * ((unsigned __int16)((244671 * v471) >> 16) >> 9))) >> 4) ^ 1;
  unsigned int v473 = 7 * (((v440 >> 8) & 0xF0 | ((unsigned __int16)v429 >> 12)) ^ 0xEA);
  int v474 = 7 * ((v471 - 2 * (v471 & 3) + 19) ^ *(unsigned __int8 *)(v17 + v470)) + 3983;
  unsigned int v475 = v474 - 960 * ((8739 * v474) >> 23);
  unsigned int v476 = v473
       + 3983
       - 960 * ((unsigned __int16)(7 * (((v440 >> 8) & 0xF0 | ((unsigned __int16)v429 >> 12)) ^ 0xEA) + 3983) / 0x3C0u);
  if (v473 >= 0x3C0) {
    v473 -= 960;
  }
  int v477 = *(unsigned __int8 *)(v17 + (unsigned __int16)v476) ^ (16
                                                             * (*(unsigned __int8 *)(v17 + (unsigned __int16)v475) ^ 0x13)) ^ 0x13;
  __int16 v478 = 7 * v477;
  unsigned int v479 = 244671 * v477;
  unsigned int v480 = 7 * v477 - 960 * ((244671 * v477 + 139217799) >> 25);
  LOBYTE(v478) = (*(unsigned char *)(v17 + (unsigned __int16)(v478 - 960 * (v479 >> 25))) >> 4) ^ 1;
  int v481 = 7 * ((v478 - 2 * (v478 & 3) + 19) ^ *(unsigned __int8 *)(v17 + v473));
  LODWORD(STACK[0x400]) = v429;
  unsigned int v482 = 7 * (((v440 >> 12) & 0xF0 | HIWORD(v429) & 0xF) ^ 0xBE);
  unsigned int v483 = v481 + 3983 - 960 * ((8739 * (v481 + 3983)) >> 23);
  unsigned __int16 v484 = (unsigned __int16)(v482 + 3983) % 0x3C0u;
  if (v482 >= 0x3C0) {
    v482 -= 960;
  }
  unsigned int v485 = *(unsigned __int8 *)(v17 + v484) ^ (16 * (*(unsigned __int8 *)(v17 + (unsigned __int16)v483) ^ 0x13)) ^ 0x13;
  int v486 = 7 * v485;
  v485 *= 244671;
  unsigned int v487 = v486 - 960 * ((v485 + 139217799) >> 25);
  LOBYTE(v485) = (*(unsigned char *)(v17 + (unsigned __int16)(v486 - 960 * (v485 >> 25))) >> 4) ^ 1;
  int v488 = 7 * ((v485 - 2 * (v485 & 3) + 19) ^ *(unsigned __int8 *)(v17 + v482)) + 3983;
  unsigned int v489 = v488 - 960 * ((8739 * v488) >> 23);
  int v490 = ((*(unsigned __int8 *)(v17 + (unsigned __int16)(v487 + 3983)) ^ 0x13) << 16) ^ ((*(unsigned __int8 *)(v17 + (unsigned __int16)(v480 + 3983)) ^ 0x13) << 12);
  LODWORD(STACK[0x40C]) = v490;
  unsigned int v491 = 7 * ((HIWORD(v439) & 0xF0 | (v422 >> 20) & 0xF) ^ 0xC4);
  unsigned int v492 = v491
       + 3983
       - 960 * ((unsigned __int16)(7 * ((BYTE2(v439) & 0xF0 | (v422 >> 20) & 0xF) ^ 0xC4) + 3983) / 0x3C0u);
  if (v491 >= 0x3C0) {
    v491 -= 960;
  }
  unsigned int v493 = 7
       * (*(unsigned __int8 *)(v17 + (unsigned __int16)v492) ^ (16
                                                              * (*(unsigned __int8 *)(v17 + (unsigned __int16)v489) ^ 0x13)) ^ 0x13);
  char v494 = v465 ^ 0x13;
  int v495 = v465 ^ 0x13 ^ ((*(unsigned __int8 *)(v17 + (unsigned __int16)v472) ^ 0x13) << 8);
  unsigned int v496 = *(unsigned __int8 *)(v17 + v493 % ((v495 & 0x3C0 ^ 0x3C0) + (v495 & 0x3C0u)));
  unsigned int v497 = v493 + 3983 - 960 * ((34953 * (v493 + 3983)) >> 25);
  int v498 = 7
       * ((((v496 >> 4) ^ 1) - 2 * (((v496 >> 4) ^ 1) & 7 ^ (v496 >> 4) & 4) + 19) ^ *(unsigned __int8 *)(v17 + v491))
       + 3983;
  unsigned int v499 = v498 - 960 * ((8739 * v498) >> 23);
  LODWORD(STACK[0x410]) = v422;
  unsigned int v500 = 7 * (((v439 >> 20) & 0xF0 | HIBYTE(v422) & 0xF) ^ 0x1A);
  if (v500 >= 0x3C0) {
    v500 -= 960;
  }
  char v501 = *(unsigned char *)(v17 + v500);
  __int16 v502 = *(unsigned __int8 *)(v17
                            + (unsigned __int16)(7 * (((v439 >> 20) & 0xF0 | HIBYTE(v422) & 0xF) ^ 0x1A) + 3983)
                            % 0x3C0u) ^ (unsigned __int16)(16
                                                         * (*(unsigned __int8 *)(v17 + (unsigned __int16)v499) ^ 0x13)) ^ 0x13;
  int v503 = *(unsigned __int8 *)(v17 + (unsigned __int16)((v501 & 7 ^ 4 | v501 & 7 ^ 3) * v502) % 0x3C0u) >> 4;
  int v504 = 7 * (((v503 ^ 1) - 2 * ((v503 ^ 1) & 7 ^ v503 & 4) + 19) ^ v501) + 3983;
  int v505 = 7 * ((HIBYTE(v439) & 0xF0 | (v422 >> 28)) ^ 0x5B) + 3983;
  int v506 = ((*(unsigned __int8 *)(v17
                              + (unsigned __int16)(7
                                                 * (*(unsigned __int8 *)(v17
                                                                       + (unsigned __int16)(v505
                                                                                          - 960
                                                                                          * ((unsigned __int16)((8739 * v505) >> 16) >> 7))) ^ (unsigned __int16)(16 * (*(unsigned __int8 *)(v17 + (unsigned __int16)(v504 - 960 * ((unsigned __int16)((8739 * v504) >> 16) >> 7))) ^ 0x13)) ^ 0x13)
                                                 + 3983)
                              % 0x3C0u) ^ 3) << 28) ^ ((*(unsigned __int8 *)(v17
                                                                           + (unsigned __int16)(7 * v502 + 3983)
                                                                           % 0x3C0u) ^ 0x13) << 24);
  LODWORD(STACK[0x408]) = v506;
  int v507 = 7 * (v494 & 0xF0 | (v431 >> 4)) + 1813;
  unint64_t v508 = v507 - 960 * ((2185 * v507) >> 21);
  STACK[0x3F8] = v508;
  int v509 = v490 ^ ((*(unsigned __int8 *)(v17 + (unsigned __int16)v497) ^ 0x13) << 20);
  LODWORD(STACK[0x3EC]) = v509;
  int v510 = v506 ^ v509;
  LODWORD(STACK[0x3F0]) = v510;
  LODWORD(STACK[0x3E8]) = v510 ^ v495;
  LODWORD(v508) = 7
                * (((((v510 ^ v495) >> 8) & 0xF) << ((v508 & 4 ^ 4) + (v508 & 4))) ^ (v431 >> 8) & 0xF)
                + 1813;
  unsigned int v511 = 7 * ((((v510 ^ v495) >> 8) & 0xF0 | ((unsigned __int16)v429 >> 12)) ^ 0xA) + 1813;
  int v512 = ((*(unsigned __int8 *)(v17 + (unsigned __int16)(v511 - 960 * ((unsigned __int16)((2185 * v511) >> 16) >> 5))) ^ 0x13) << 12) ^ ((*(unsigned __int8 *)(v17 + v508 % 0x3C0) ^ 0x13) << 8);
  LODWORD(STACK[0x3D8]) = v512;
  LODWORD(STACK[0x3D4]) = (7 * ((unsigned __int16)v512 >> 12) + 3822)
                        % (v408 & 0x3C0 ^ 0x140 | v408 & 0x3C0 ^ 0x280u);
  LODWORD(v508) = *(unsigned __int8 *)(v17
                                     + (unsigned __int16)(LODWORD(STACK[0x6D0])
                                                        - 960
                                                        * ((unsigned __int16)((244671
                                                                                           * LODWORD(STACK[0x6D8])) >> 16) >> 9))) >> 4;
  LODWORD(v508) = 7
                * (((v508 ^ 1) - 2 * ((v508 ^ 1) & 0xFB ^ v508 & 8) + 19) ^ *(unsigned __int8 *)(v17 + LODWORD(STACK[0x604])))
                + 3983;
  LODWORD(v508) = *(unsigned __int8 *)(v17 + (unsigned __int16)(LODWORD(STACK[0x5E0]) + 3983) % 0x3C0u) ^ (16 * (*(unsigned __int8 *)(v17 + (unsigned __int16)(v508 - 960 * ((unsigned __int16)((8739 * v508) >> 16) >> 7))) ^ 0x13)) ^ 0x13;
  LOWORD(v511) = 7 * v508;
  LODWORD(v508) = 244671 * v508;
  __int16 v513 = v511 - 960 * ((v508 + 139217799) >> 25);
  LODWORD(v508) = *(unsigned __int8 *)(v17 + (unsigned __int16)(v511 - 960 * (v508 >> 25))) >> 4;
  LODWORD(v508) = 7
                * (((v508 ^ 1) - 2 * ((v508 ^ 1) & 7 ^ v508 & 4) + 19) ^ *(unsigned __int8 *)(v17 + LODWORD(STACK[0x600])))
                + 3983;
  LODWORD(v508) = *(unsigned __int8 *)(v17 + (unsigned __int16)(LODWORD(STACK[0x5F0]) + 3983) % 0x3C0u) ^ (16 * (*(unsigned __int8 *)(v17 + (unsigned __int16)(v508 - 960 * ((unsigned __int16)((8739 * v508) >> 16) >> 7))) ^ 0x13)) ^ 0x13;
  unsigned __int16 v514 = (unsigned __int16)(7 * v508 + 3983) % 0x3C0u;
  LODWORD(v508) = (*(unsigned __int8 *)(v17
                                      + (unsigned __int16)(7 * v508
                                                         - 960
                                                         * ((unsigned __int16)((244671 * v508) >> 16) >> 9))) >> 4) ^ 1;
  LODWORD(v508) = 7
                * ((v508 + (~(2 * v508) | 0xF9) + 20) ^ *(unsigned __int8 *)(v17 + LODWORD(STACK[0x620])))
                + 3983;
  LODWORD(v508) = *(unsigned __int8 *)(v17 + (unsigned __int16)(LODWORD(STACK[0x614]) + 3983) % 0x3C0u) ^ (16 * (*(unsigned __int8 *)(v17 + (unsigned __int16)(v508 - 960 * ((unsigned __int16)((8739 * v508) >> 16) >> 7))) ^ 0x13)) ^ 0x13;
  LOWORD(v503) = 7 * v508;
  LODWORD(v508) = 244671 * v508;
  LOWORD(v512) = v503 - 960 * ((v508 + 139217799) >> 25);
  LODWORD(v508) = *(unsigned __int8 *)(v17 + (unsigned __int16)(v503 - 960 * (v508 >> 25))) >> 4;
  LODWORD(v508) = 7
                * (((v508 ^ 1) - 2 * ((v508 ^ 1) & 7 ^ v508 & 4) + 19) ^ *(unsigned __int8 *)(v17 + LODWORD(STACK[0x628])))
                + 3983;
  LODWORD(v508) = *(unsigned __int8 *)(v17 + (unsigned __int16)(LODWORD(STACK[0x624]) + 3983) % 0x3C0u) ^ (16 * (*(unsigned __int8 *)(v17 + (unsigned __int16)(v508 - 960 * ((unsigned __int16)((8739 * v508) >> 16) >> 7))) ^ 0x13)) ^ 0x13;
  LOWORD(v506) = 7 * v508 - 960 * ((244671 * v508 + 139217799) >> 25);
  int v515 = *(unsigned __int8 *)(v17
                            + (unsigned __int16)(7 * v508
                                               - 960 * ((unsigned __int16)((244671 * v508) >> 16) >> 9))) >> 4;
  int v516 = 7
       * (((v515 ^ 1) - 2 * ((v515 ^ 1) & 0xFB ^ v515 & 8) + 19) ^ *(unsigned __int8 *)(v17 + LODWORD(STACK[0x648])))
       + 3983;
  int v517 = *(unsigned __int8 *)(v17 + (LODWORD(STACK[0x63C]) - 1252563740 + LODWORD(STACK[0x5C4]))) ^ (16 * (*(unsigned __int8 *)(v17 + (unsigned __int16)(v516 - 960 * ((unsigned __int16)((8739 * v516) >> 16) >> 7))) ^ 0x13)) ^ 0x13;
  unsigned __int16 v518 = (unsigned __int16)(7 * v517 + 3983) % 0x3C0u;
  int v519 = *(unsigned __int8 *)(v17
                            + (unsigned __int16)(7 * v517
                                               - 960 * ((unsigned __int16)((244671 * v517) >> 16) >> 9))) >> 4;
  int v520 = 7
       * (((v519 ^ 1) - 2 * ((v519 ^ 1) & 7 ^ v519 & 4) + 19) ^ *(unsigned __int8 *)(v17 + LODWORD(STACK[0x660])))
       + 3983;
  int v521 = HIBYTE(LODWORD(STACK[0x710]));
  int v522 = *(unsigned __int8 *)(v17
                            + (unsigned __int16)(v520
                                               - 960 * ((unsigned __int16)((8739 * v520) >> 16) >> 7)));
  int v523 = 16 * (v522 ^ 0x13) + 193141824 - ((32 * v522) & 0x1880);
  int v524 = 7 * ((HIBYTE(LODWORD(STACK[0x668])) & 0xF0 | (LODWORD(STACK[0x710]) >> 28)) ^ 0xF9) + 3983;
  int v525 = *(unsigned __int8 *)(v17
                            + (unsigned __int16)(v524
                                               - 960 * ((unsigned __int16)((8739 * v524) >> 16) >> 7))) ^ 0x13;
  int v526 = v525 - 1544351979 - ((2 * v525) & 0x2A);
  int v527 = v523 ^ v526 ^ 0x578FECAA;
  v526 ^= 0xA3F30F15;
  unsigned int v528 = (v527 + v526 + 1) ^ ((v523 ^ 0xF47CE3BF) + 1);
  LODWORD(v508) = 7
                * (v526
                 + (v521 & 0x39 ^ 0x19 | v521 & 0x39 ^ 0x220)
                 + ((v528 + 193141824 - ((2 * v528) & 0x17063880)) ^ v523));
  int v529 = 16 * (*(unsigned __int8 *)(v17 + LODWORD(STACK[0x700])) ^ 0x13);
  LOBYTE(v523) = *(unsigned char *)(v17 + (LODWORD(STACK[0x6EC]) + 3983) % 0x3C0u) ^ 0x13;
  int v530 = (*(unsigned __int8 *)(v17 + (unsigned __int16)(v513 + 3983)) ^ 0x13) << 8;
  int v531 = (*(unsigned __int8 *)(v17 + v514) ^ 0x13) << 12;
  int v532 = (*(unsigned __int8 *)(v17 + (unsigned __int16)(v512 + 3983)) ^ 0x13) << 16;
  int v533 = (*(unsigned __int8 *)(v17 + (unsigned __int16)(v506 + 3983)) ^ 0x13) << 20;
  int v534 = (*(unsigned __int8 *)(v17 + v518) ^ 0x13) << 24;
  LODWORD(v508) = v534 ^ ((*(unsigned __int8 *)(v17 + v508 % 0x3C0) ^ 3) << 28);
  unsigned int v535 = v534 ^ v533;
  unsigned int v536 = v533 ^ v532;
  unsigned int v537 = v532 ^ v531;
  LOWORD(v531) = v531 ^ v530;
  unsigned int v538 = v530 ^ v529;
  LOBYTE(v529) = v529 ^ v523;
  unsigned int v539 = 7 * (STACK[0x708] & 0xFFFFFF0F | (16 * (v523 & 0xF))) + 1813;
  int v540 = 7 * (v529 & 0xF0 | (LODWORD(STACK[0x6AC]) >> 4)) + 1813;
  int v541 = 7 * ((v538 >> 4) & 0xF0 | (LODWORD(STACK[0x6AC]) >> 8) & 0xF) + 1813;
  LOWORD(v541) = v541 - 960 * ((unsigned __int16)((2185 * v541) >> 16) >> 5);
  int v542 = LODWORD(STACK[0x6AC]) >> 8 >> ((v541 & 4 ^ 4) + (v541 & 4));
  unsigned int v543 = v542 - ((2 * v542) & 0x1693F9E);
  int v544 = *(unsigned __int8 *)(v17 + (unsigned __int16)v541);
  int v545 = ((v544 & 7 ^ 3) + (v544 & 7 ^ 4)) * (((48 - (_BYTE)v543) & 0xF | (16 * ((unsigned __int16)v531 >> 12))) + 259);
  __int16 v546 = (LODWORD(STACK[0x570]) + 13) & 0xF;
  v543 -= 1464557617;
  int v547 = ((*(unsigned __int8 *)(v17
                              + (unsigned __int16)(v545
                                                 - 960 * ((unsigned __int16)((17477 * v545) >> 16) >> 8))) ^ 0x13) << 12) ^ ((v544 ^ 0x13) << 8);
  int v548 = 7 * ((HIWORD(v536) & 0xF0 | (v543 >> 8) & 0xF) ^ 0xF) + 1813;
  int v549 = 7 * (((v535 >> 20) & 0xF0 | ((unsigned __int16)v543 >> 12)) ^ 9) + 1813;
  LODWORD(v508) = 7 * ((BYTE3(v508) & 0xF0 | HIWORD(v543) & 0xF) ^ 4) + 1813;
  LOBYTE(v5memset((void *)(STACK[0x7D8] + 8), 91, 48) = *(unsigned char *)(v17
                          + (unsigned __int16)(v548 - 960 * ((unsigned __int16)((2185 * v548) >> 16) >> 5)));
  unsigned int v550 = ((v548 ^ 0x13) << 20) ^ ((*(unsigned __int8 *)(v17
                                                                       + (unsigned __int16)(7
                                                                                          * (((v543 >> 4) ^ 0x1C) & ((v546 ^ 0xF) + v546) ^ (v537 >> 12) & 0xF0)
                                                                                          + 1813)
                                                                       % 0x3C0u) ^ 0x13) << 16) ^ ((*(unsigned __int8 *)(v17 + (unsigned __int16)(v549 - 960 * ((unsigned __int16)((2185 * v549) >> 16) >> 5))) ^ 0x13) << 24);
  int v551 = *(unsigned __int8 *)(v17 + (unsigned __int16)(v539 - 960 * ((unsigned __int16)((2185 * v539) >> 16) >> 5)));
  int v552 = v551 ^ (16
               * (*(unsigned __int8 *)(v17
                                     + (unsigned __int16)(v540
                                                        - 960
                                                        * ((unsigned __int16)((2185 * v540) >> 16) >> 5))) ^ 0x13)) ^ 0x13;
  LODWORD(v508) = (v547 ^ v552 | ((*(unsigned __int8 *)(v17
                                                      + (unsigned __int16)(v508
                                                                         - 960
                                                                         * ((unsigned __int16)((2185 * v508) >> 16) >> 5))) ^ 3) << 28)) ^ v550;
  int v553 = *(unsigned __int8 *)(v17
                            + (unsigned __int16)(7 * (v508 >> 28)
                                               + 3822
                                               - 960
                                               * ((unsigned __int16)((2185 * (7 * (v508 >> 28) + 3822)) >> 16) >> 5)));
  LODWORD(v508) = v508 >> (v521 & 0x10) >> (v521 & 0x10 ^ 0x10);
  int v554 = (v508 >> 4) + (((v548 & 0xD0 ^ 0xEF) + (v548 & 0xD0 ^ 0x3F) - 46) & 0xF0 ^ 0x222);
  LODWORD(v508) = *(unsigned __int8 *)(v17
                                     + (unsigned __int16)(7 * (v508 & 0xF)
                                                        + 3822
                                                        - 960
                                                        * ((unsigned __int16)((2185 * (7 * (v508 & 0xF) + 3822)) >> 16) >> 5)));
  int v555 = ((*(unsigned __int8 *)(v17
                              + (unsigned __int16)(7 * (HIBYTE(v550) & 0xF)
                                                 + 3822
                                                 - 960
                                                 * ((unsigned __int16)((2185
                                                                                    * (7 * (HIBYTE(v550) & 0xF) + 3822)) >> 16) >> 5))) ^ 0x13) << 8) ^ ((v553 ^ 0x13) << 12) | v508 ^ 0x13;
  LODWORD(v508) = (v508 & 0xF ^ 0xC | v508 & 0xF ^ 3) & ((v547 ^ v552) >> 8);
  unsigned int v556 = LODWORD(STACK[0x6B0]) ^ 0xC4FAC9C2;
  LODWORD(STACK[0x710]) = *(unsigned __int8 *)(v17
                                             + (unsigned __int16)(7 * (v551 & 0xF ^ 3)
                                                                + 3822
                                                                - 960
                                                                * ((unsigned __int16)((2185
                                                                                     * (7 * (v551 & 0xF ^ 3u) + 3822)) >> 16) >> 5))) ^ v556 ^ (((*(unsigned __int8 *)(v17 + (unsigned __int16)(7 * ((unsigned __int16)v547 >> 12) + 3822 - 960 * ((unsigned __int16)((2185 * (7 * ((unsigned __int16)v547 >> 12) + 3822)) >> 16) >> 5))) ^ 0x13) << 12) | (16 * (*(unsigned __int8 *)(v17 + (unsigned __int16)(7 * (v552 >> 4) + 3822 - 960 * ((unsigned __int16)((2185 * (7 * (v552 >> 4) + 3822)) >> 16) >> 5))) ^ 0x13))) ^ ((*(unsigned __int8 *)(v17 + (unsigned __int16)(7 * v508 + 3822 - 960 * ((unsigned __int16)((2185 * (7 * v508 + 3822)) >> 16) >> 5))) ^ 0x13 | (v555 << 8) ^ ((*(unsigned __int8 *)(v17 + (unsigned __int16)(7 * v554 - 960 * ((unsigned __int16)((61173 * v554) >> 16) >> 7))) ^ 0x13) << 12)) << 8);
  int v557 = 16
       * (*(unsigned __int8 *)(v17
                             + (unsigned __int16)(LODWORD(STACK[0x65C])
                                                - 960 * ((LODWORD(STACK[0x650]) + 139217799) >> 25)
                                                + 3983)) ^ 0x13);
  unsigned int v558 = v557 ^ ((*(unsigned __int8 *)(v17 + (unsigned __int16)(LOWORD(STACK[0x62C]) + 3983) % 0x3C0u) ^ 0x13) << 8) ^ ((*(unsigned __int8 *)(v17 + (unsigned __int16)(LODWORD(STACK[0x610]) - 960 * ((LODWORD(STACK[0x608]) + 139217799) >> 25) + 3983)) ^ 0x13) << 12) ^ ((*(unsigned __int8 *)(v17 + (unsigned __int16)(LOWORD(STACK[0x5E8]) + 3983) % 0x3C0u) ^ 0x13) << 16) ^ ((*(unsigned __int8 *)(v17 + (unsigned __int16)(LODWORD(STACK[0x5D4]) - 960 * ((LODWORD(STACK[0x5D0]) + 139217799) >> 25) + 3983)) ^ 0x13) << 20) ^ ((*(unsigned __int8 *)(v17 + (unsigned __int16)(LODWORD(STACK[0x5C0]) - 960 * ((LODWORD(STACK[0x5BC]) + 139217799) >> 25) + 3983)) ^ 0x13) << 24) ^ ((*(unsigned __int8 *)(v17 + LODWORD(STACK[0x5E4])) ^ 3) << 28);
  LOBYTE(v508) = *(unsigned char *)(v17 + (LODWORD(STACK[0x664]) + 3983) % 0x3C0u) ^ 0x13;
  LOBYTE(v557) = v557 ^ v508;
  LODWORD(v508) = 7 * (STACK[0x6A0] & 0xFFFFFF0F | (16 * (v508 & 0xF))) + 1813;
  int v559 = 7 * (v557 & 0xF0 | (LODWORD(STACK[0x66C]) >> 4)) + 1813;
  unsigned int v560 = (v558 >> 8) - ((v558 >> 7) & 0x1F088DC) - 1913109394;
  int v561 = 7 * (((LODWORD(STACK[0x66C]) >> 8) & 0xF | (16 * (v560 & 0xF))) ^ 0xE0) + 1813;
  int v562 = 7 * ((v560 & 0xF0 | ((unsigned __int16)LODWORD(STACK[0x640]) >> 12)) ^ 0x60) + 1813;
  int v563 = 7 * (((v560 >> 4) & 0xF0 | HIWORD(LODWORD(STACK[0x640])) & 0xF) ^ 0x40) + 1813;
  int v564 = 7 * (((v560 >> 8) & 0xF0 | (LODWORD(STACK[0x5DC]) >> 20) & 0xF) ^ 0x43) + 1813;
  unsigned int v565 = ((*(unsigned __int8 *)(v17
                              + (unsigned __int16)(v563
                                                 - 960 * ((unsigned __int16)((2185 * v563) >> 16) >> 5))) ^ 0x13) << 16) ^ ((*(unsigned __int8 *)(v17 + (unsigned __int16)(v562 - 960 * ((unsigned __int16)((2185 * v562) >> 16) >> 5))) ^ 0x13) << 12);
  LODWORD(v508) = *(unsigned __int8 *)(v17
                                     + (unsigned __int16)(v508
                                                        - 960
                                                        * ((unsigned __int16)((2185 * v508) >> 16) >> 5)));
  int v566 = 7 * (((v560 >> 12) & 0xF0 | HIBYTE(LODWORD(STACK[0x5DC])) & 0xF) ^ 0x88) + 1813;
  int v567 = v508 ^ (16
               * (*(unsigned __int8 *)(v17
                                     + (unsigned __int16)(v559
                                                        - 960
                                                        * ((unsigned __int16)((2185 * v559) >> 16) >> 5))) ^ 0x13)) ^ 0x13;
  int v568 = 7 * ((HIWORD(v560) & 0xF0 | (LODWORD(STACK[0x5DC]) >> 28)) ^ 0xFA) + 1813;
  unsigned int v569 = (v567 ^ ((*(unsigned __int8 *)(v17
                                      + (unsigned __int16)(v561
                                                         - 960
                                                         * ((unsigned __int16)((2185 * v561) >> 16) >> 5))) ^ 0x13) << 8) | ((*(unsigned __int8 *)(v17 + (unsigned __int16)(v564 - 960 * ((unsigned __int16)((2185 * v564) >> 16) >> 5))) ^ 0x13) << 20)) ^ v565;
  unsigned int v570 = ((*(unsigned __int8 *)(v17
                              + (unsigned __int16)(v568
                                                 - 960 * ((unsigned __int16)((2185 * v568) >> 16) >> 5))) ^ 3) << 28) ^ ((*(unsigned __int8 *)(v17 + (unsigned __int16)(v566 - 960 * ((unsigned __int16)((2185 * v566) >> 16) >> 5))) ^ 0x13) << 24) ^ v569;
  int v571 = ((*(unsigned __int8 *)(v17
                              + (unsigned __int16)(7 * (HIBYTE(v570) & 0xF)
                                                 + 3822
                                                 - 960
                                                 * ((unsigned __int16)((2185
                                                                                    * (7 * (HIBYTE(v570) & 0xF) + 3822)) >> 16) >> 5))) ^ 0x13) << 8) ^ ((*(unsigned __int8 *)(v17 + (unsigned __int16)(7 * (v570 >> 28) + 3822 - 960 * ((unsigned __int16)((2185 * (7 * (v570 >> 28) + 3822)) >> 16) >> 5))) ^ 0x13) << 12);
  v570 >>= 8;
  LOWORD(v564) = 7 * (v570 >> 4)
               + 3822
               - 960 * ((unsigned __int16)((2185 * (7 * (v570 >> 4) + 3822)) >> 16) >> 5);
  unsigned int v572 = 7 * (v570 & 0xF) + 3822 - 960 * ((2185 * (7 * (v570 & 0xF) + 3822)) >> 21);
  int v573 = (((~(2 * v572) + v572) ^ v572) & 0x222) + (v567 >> 4);
  int v574 = *(unsigned __int8 *)(v17 + (unsigned __int16)v572) ^ 0x13 ^ (((*(unsigned __int8 *)(v17
                                                                                           + (unsigned __int16)(7 * ((v569 >> 20) & 0xF) + 3822 - 960 * ((unsigned __int16)((2185 * (7 * ((v569 >> 20) & 0xF) + 3822)) >> 16) >> 5))) ^ 0x13) << 12) | (16 * (*(unsigned __int8 *)(v17 + (unsigned __int16)v564) ^ 0x13)));
  int v575 = *(unsigned __int8 *)(v17
                            + (unsigned __int16)(7 * (BYTE2(v565) & 0xF)
                                               + 3822
                                               - 960
                                               * ((unsigned __int16)((2185
                                                                                  * (7 * (HIWORD(v565) & 0xF) + 3822)) >> 16) >> 5))) ^ 0x13;
  LODWORD(STACK[0x708]) = LODWORD(STACK[0x6E0]) ^ LODWORD(STACK[0x644]);
  LODWORD(v508) = (v574 << 8) ^ ((v571 | v575) << 16) | *(unsigned __int8 *)(v17
                                                                           + (unsigned __int16)(7 * (v508 & 0xF ^ 3)
                                                                                              + 3822
                                                                                              - 960
                                                                                              * ((unsigned __int16)((2185 * (7 * (v508 & 0xF ^ 3) + 3822)) >> 16) >> 5))) ^ 0x13;
  int v576 = *(unsigned __int8 *)(v17 + (unsigned __int16)(LODWORD(STACK[0x5A0]) + 3983) % 0x3C0u);
  LODWORD(STACK[0x700]) = v556 ^ (16
                                * (*(unsigned __int8 *)(v17
                                                      + (unsigned __int16)(7 * v573
                                                                         - 960
                                                                         * ((unsigned __int16)((15295 * v573) >> 16) >> 5))) ^ 0x13)) ^ v508;
  int v577 = v455;
  LODWORD(v508) = 7 * (((v576 ^ 0x13) - 798318148 - ((2 * (v576 ^ 0x13)) & 0x178)) ^ v455);
  unsigned int v578 = ((int)v508 + 3983) % 0x3C0u;
  LODWORD(v508) = *(unsigned __int8 *)(v17 + v508 % 0x3C0) >> 4;
  LODWORD(v508) = 7
                * (((v508 ^ 1) - 2 * ((v508 ^ 1) & 7 ^ v508 & 4) + 19) ^ *(unsigned __int8 *)(v17 + LODWORD(STACK[0x5EC])))
                + 3983;
  LODWORD(v508) = *(unsigned __int8 *)(v17 + (unsigned __int16)(LODWORD(STACK[0x5AC]) + 3983) % 0x3C0u) ^ (16 * (*(unsigned __int8 *)(v17 + (unsigned __int16)(v508 - 960 * ((unsigned __int16)((8739 * v508) >> 16) >> 7))) ^ 0x13)) ^ 0x13;
  LOWORD(v573) = 7 * v508;
  LODWORD(v508) = 244671 * v508;
  LOWORD(v553) = v573 - 960 * ((v508 + 139217799) >> 25);
  LODWORD(v508) = (*(unsigned __int8 *)(v17 + (unsigned __int16)(v573 - 960 * (v508 >> 25))) >> 4) ^ 1;
  LODWORD(v508) = 7
                * ((v508 + (~(2 * v508) | 0xF9) + 20) ^ *(unsigned __int8 *)(v17 + LODWORD(STACK[0x5FC])))
                + 3983;
  int v579 = STACK[0x630];
  LODWORD(v508) = *(unsigned __int8 *)(v17
                                     + (unsigned __int16)((LODWORD(STACK[0x5C8]) + 569)
                                                        * (STACK[0x630] & 7 ^ 5 | STACK[0x630] & 7 ^ 2))
                                     % 0x3C0u) ^ (16
                                                * (*(unsigned __int8 *)(v17
                                                                      + (unsigned __int16)(v508
                                                                                         - 960
                                                                                         * ((unsigned __int16)((8739 * v508) >> 16) >> 7))) ^ 0x13)) ^ 0x13;
  LOWORD(v573) = 7 * v508;
  LODWORD(v508) = 244671 * v508;
  LOWORD(v576) = v573 - 960 * ((v508 + 139217799) >> 25);
  LOBYTE(v508) = (*(unsigned char *)(v17 + (unsigned __int16)(v573 - 960 * (v508 >> 25))) >> 4) ^ 1;
  LODWORD(v508) = 7
                * ((v508 - 2 * (v508 & 3) + 19) ^ *(unsigned __int8 *)(v17 + LODWORD(STACK[0x618])))
                + 3983;
  LODWORD(v508) = *(unsigned __int8 *)(v17 + (unsigned __int16)(LODWORD(STACK[0x590]) + 3983) % 0x3C0u) ^ (16 * (*(unsigned __int8 *)(v17 + (unsigned __int16)(v508 - 960 * ((unsigned __int16)((8739 * v508) >> 16) >> 7))) ^ 0x13)) ^ 0x13;
  LOWORD(v573) = 7 * v508;
  LODWORD(v508) = (*(unsigned __int8 *)(v17
                                      + (unsigned __int16)(7 * v508
                                                         - 960
                                                         * ((unsigned __int16)((244671 * v508) >> 16) >> 9))) >> 4) ^ 1;
  LODWORD(v508) = 7
                * ((v508 + (~(2 * v508) | 0xF9) + 20) ^ *(unsigned __int8 *)(v17 + LODWORD(STACK[0x5A4])))
                + 3983;
  unsigned int v580 = ((*(unsigned __int8 *)(v17 + (unsigned __int16)(v573 + 3983) % 0x3C0u) ^ 0x13) << 12) ^ ((*(unsigned __int8 *)(v17 + (unsigned __int16)(v576 + 3983)) ^ 0x13) << 8);
  LODWORD(v508) = *(unsigned __int8 *)(v17 + (unsigned __int16)(LODWORD(STACK[0x594]) + 3983) % 0x3C0u) ^ (16 * (*(unsigned __int8 *)(v17 + (unsigned __int16)(v508 - 960 * ((unsigned __int16)((8739 * v508) >> 16) >> 7))) ^ 0x13)) ^ 0x13;
  int v581 = (*(unsigned __int8 *)(v17
                             + (unsigned __int16)(7 * v508
                                                - 960 * ((unsigned __int16)((244671 * v508) >> 16) >> 9))) >> 4) ^ 1;
  int v582 = 7 * ((v581 + (~(2 * v581) | 0xF9) + 20) ^ *(unsigned __int8 *)(v17 + LODWORD(STACK[0x5A8])))
       + 3983;
  LOWORD(v582) = *(unsigned __int8 *)(v17 + (unsigned __int16)(LODWORD(STACK[0x598]) + 3983) % 0x3C0u) ^ (unsigned __int16)(16 * (*(unsigned __int8 *)(v17 + (unsigned __int16)(v582 - 960 * ((unsigned __int16)((8739 * v582) >> 16) >> 7))) ^ 0x13)) ^ 0x13;
  LOWORD(v576) = (unsigned __int16)(7 * v582 + 3983) % 0x3C0u;
  LOBYTE(v569) = *(unsigned char *)(v17 + LODWORD(STACK[0x5B8]));
  int v583 = *(unsigned __int8 *)(v17 + (unsigned __int16)(((v569 & 7 ^ 3) + (v569 & 7 ^ 4)) * v582) % 0x3C0u) >> 4;
  int v584 = 7 * (((v583 ^ 1) - 2 * ((v583 ^ 1) & 0xFB ^ v583 & 8) + 19) ^ v569) + 3983;
  unsigned int v585 = *(unsigned __int8 *)(v17 + (unsigned __int16)(LODWORD(STACK[0x59C]) + 3983) % 0x3C0u) ^ (16
                                                                                                * (*(unsigned __int8 *)(v17 + (unsigned __int16)(v584 - 960 * ((unsigned __int16)((8739 * v584) >> 16) >> 7))) ^ 0x13)) ^ 0x13;
  LOWORD(v569) = 7 * v585;
  v585 *= 244671;
  LOWORD(v565) = v569 - 960 * ((v585 + 139217799) >> 25);
  LOBYTE(v585) = (*(unsigned char *)(v17 + (unsigned __int16)(v569 - 960 * (v585 >> 25))) >> 4) ^ 1;
  int v586 = 7 * ((v585 - 2 * (v585 & 3) + 19) ^ *(unsigned __int8 *)(v17 + LODWORD(STACK[0x5D8]))) + 3983;
  int v587 = ((*(unsigned __int8 *)(v17
                              + (unsigned __int16)(7
                                                 * (*(unsigned __int8 *)(v17
                                                                       + (unsigned __int16)(7
                                                                                          * ((HIBYTE(LODWORD(STACK[0x638])) & 0xF0 | (LODWORD(STACK[0x634]) >> 8)) ^ 0x60)
                                                                                          + 3983)
                                                                       % 0x3C0u) ^ (unsigned __int16)(16 * (*(unsigned __int8 *)(v17 + (unsigned __int16)(v586 - 960 * ((unsigned __int16)((8739 * v586) >> 16) >> 7))) ^ 0x13)) ^ 0x13)
                                                 + 3983)
                              % 0x3C0u) ^ 3) << 28) ^ ((*(unsigned __int8 *)(v17 + (unsigned __int16)(v565 + 3983)) ^ 0x13) << 24);
  int v588 = *(unsigned __int8 *)(v17 + v578) ^ 0x13;
  int v589 = v588 ^ (16 * (*(unsigned __int8 *)(v17 + (unsigned __int16)(v553 + 3983)) ^ 0x13));
  unsigned int v590 = v580 ^ v589;
  unsigned int v591 = v580 ^ v589 ^ ((*(unsigned __int8 *)(v17
                                            + (unsigned __int16)(7 * v508
                                                               - 960 * ((244671 * v508 + 139217799) >> 25)
                                                               + 3983)) ^ 0x13) << 16);
  unsigned int v592 = v591 ^ ((*(unsigned __int8 *)(v17 + (unsigned __int16)v576) ^ 0x13) << 20);
  unsigned int v593 = v592 ^ 0x91477045 ^ (v587 - 1857589179 - ((2 * v587) & 0x22222222));
  LODWORD(v508) = 7 * (STACK[0x688] & 0xFFFFFF0F | (16 * (v588 & 0xF))) + 1813;
  LOWORD(v588) = v508 - 960 * ((unsigned __int16)((2185 * v508) >> 16) >> 5);
  LODWORD(v508) = 7 * (v589 & 0xF0 | (LODWORD(STACK[0x684]) >> 4)) + 1813;
  LOWORD(v589) = v508 - 960 * ((unsigned __int16)((2185 * v508) >> 16) >> 5);
  LODWORD(v508) = 7 * ((v590 >> 4) & 0xF0 | (LODWORD(STACK[0x684]) >> 8) & 0xF) + 1813;
  int v594 = 7 * (((v580 >> 8) & 0xF0 | ((unsigned __int16)LODWORD(STACK[0x68C]) >> 12)) ^ 1) + 1813;
  LODWORD(v508) = ((*(unsigned __int8 *)(v17
                                       + (unsigned __int16)(v594
                                                          - 960
                                                          * ((unsigned __int16)((2185 * v594) >> 16) >> 5))) ^ 0x13) << 12) ^ ((*(unsigned __int8 *)(v17 + (unsigned __int16)(v508 - 960 * ((unsigned __int16)((2185 * v508) >> 16) >> 5))) ^ 0x13) << 8);
  int v595 = ((v591 >> 12) & 0xF0 | HIWORD(LODWORD(STACK[0x68C])) & 0xF) ^ 4;
  int v596 = (HIWORD(v592) & 0xF0 | (LODWORD(STACK[0x690]) >> 20) & 0xF) ^ 6;
  unsigned int v597 = v596 + 198412501 + ~(2 * (v596 & 0xDDDDDDDD ^ STACK[0x698] & 9));
  HIDWORD(v598) = v593 >> 28;
  LODWORD(v598) = LODWORD(STACK[0x690]) ^ 0x40000000;
  unsigned int v599 = ((*(unsigned __int8 *)(v17 + (unsigned __int16)(7 * (v597 ^ 0x88D4) + 1813) % 0x3C0u) ^ 0x13) << 20) ^ ((*(unsigned __int8 *)(v17 + (unsigned __int16)(7 * ((v595 - ((2 * v595) & 0xFFFB) + 1277) ^ 0x4FD) + 1813) % 0x3C0u) ^ 0x13) << 16);
  int v600 = *(unsigned __int8 *)(v17 + (unsigned __int16)v588);
  int v601 = v600 ^ (16 * (*(unsigned __int8 *)(v17 + (unsigned __int16)v589) ^ 0x13)) ^ 0x13;
  unsigned int v602 = v508 ^ v601;
  unsigned int v603 = v599 ^ v508 ^ v601;
  unsigned int v604 = v603 ^ ((*(unsigned __int8 *)(v17
                                     + (unsigned __int16)(7
                                                        * ((HIBYTE(LODWORD(STACK[0x690])) & 0xF | (16
                                                                                                 * ((27969 * (v597 & 0x4F ^ 0x44 | v597 & 0x4F ^ 0x90B)) & HIBYTE(v593)))) ^ 0xE)
                                                        + 1813)
                                     % 0x3C0u) ^ 0x13) << 24);
  unsigned int v605 = 7
       * ((v604 ^ ((*(unsigned __int8 *)(v17
                                       + (7 * (v598 >> 28)
                                                      + 1813
                                                      - 960
                                                      * ((4473925
                                                        * (unint64_t)(7 * (v598 >> 28) + 1813)) >> 32))) ^ 3) << 28)) >> 28)
       + 3822;
  LODWORD(v508) = ((((((*(unsigned __int8 *)(v17
                                           + (unsigned __int16)(7 * (HIBYTE(v604) & 0xF)
                                                              + 3822
                                                              - 960
                                                              * ((unsigned __int16)((2185
                                                                                                 * (7 * (HIBYTE(v604) & 0xF)
                                                                                                  + 3822)) >> 16) >> 5))) ^ 0x13) << 8) ^ ((*(unsigned __int8 *)(v17 + (unsigned __int16)(v605 - 960 * ((unsigned __int16)((2185 * v605) >> 16) >> 5))) ^ 0x13) << 12) | *(unsigned __int8 *)(v17 + (unsigned __int16)(7 * (BYTE2(v603) & 0xF) + 3822 - 960 * ((unsigned __int16)((2185 * (7 * (HIWORD(v603) & 0xF) + 3822)) >> 16) >> 5))) ^ 0x13) << 8) ^ ((*(unsigned __int8 *)(v17 + (unsigned __int16)(7 * ((v599 >> 20) & 0xF) + 3822 - 960 * ((unsigned __int16)((2185 * (7 * ((v599 >> 20) & 0xF) + 3822)) >> 16) >> 5))) ^ 0x13) << 12) | *(unsigned __int8 *)(v17 + (unsigned __int16)(7 * ((v602 >> 8) & 0xF) + 3822 - 960 * ((unsigned __int16)((2185 * (7 * ((v602 >> 8) & 0xF) + 3822)) >> 16) >> 5))) ^ 0x13) << 8) ^ ((*(unsigned __int8 *)(v17 + (unsigned __int16)(7 * ((unsigned __int16)v508 >> 12) + 3822 - 960 * ((unsigned __int16)((2185 * (7 * ((unsigned __int16)v508 >> 12) + 3822)) >> 16) >> 5))) ^ 0x13) << 12);
  int v606 = LODWORD(STACK[0x6F4]) ^ (16
                                * (*(unsigned __int8 *)(v17
                                                      + (unsigned __int16)(7 * (v601 >> 4)
                                                                         + 3822
                                                                         - 960
                                                                         * ((unsigned __int16)((2185
                                                                                              * (7
                                                                                               * (v601 >> 4)
                                                                                               + 3822)) >> 16) >> 5))) ^ 0x13)) ^ (v508 | *(unsigned __int8 *)(v17 + (unsigned __int16)(7 * (v600 & 0xF ^ 3) + 3822 - 960 * ((unsigned __int16)((2185 * (7 * (v600 & 0xF ^ 3u) + 3822)) >> 16) >> 5))) ^ 0x13);
  LODWORD(STACK[0x6EC]) = v606;
  LODWORD(STACK[0x684]) = v579 ^ 0xC9300CB5 ^ LODWORD(STACK[0x4F8]);
  int v607 = 7 * ((STACK[0x504] & 0xF0 | (LODWORD(STACK[0x670]) >> 4)) ^ 0x80) + 1813;
  int v608 = 7 * (((LODWORD(STACK[0x504]) >> 4) & 0xF0 | (LODWORD(STACK[0x670]) >> 8) & 0xF) ^ 0x20) + 1813;
  unsigned int v609 = (LODWORD(STACK[0x5B4]) >> 12) ^ 0x12DCB;
  int v610 = v609 & 0xF | (16 * ((unsigned __int16)LODWORD(STACK[0x504]) >> 12));
  int v611 = 7 * (((v609 >> (v575 & 4) >> (v575 & 4 ^ 4)) & 0xF | (16 * (HIWORD(LODWORD(STACK[0x504])) & 0xF))) ^ 0x60)
       + 1813;
  int v612 = 7 * ((HIWORD(LODWORD(STACK[0x504])) & 0xF0 | (LODWORD(STACK[0x50C]) >> 20) & 0xF) ^ 0xD) + 1813;
  int v613 = 7 * (((LODWORD(STACK[0x504]) >> 20) & 0xF0 | HIBYTE(LODWORD(STACK[0x50C])) & 0xF) ^ 0xC2) + 1813;
  LODWORD(v508) = 7
                * (((((((LODWORD(STACK[0x508]) ^ 3) << 28)
                     + 738615937
                     - (((LODWORD(STACK[0x508]) ^ 3) << 29) & 0x40000000u)) ^ LODWORD(STACK[0x504])) >> 24) & 0xF0 | (LODWORD(STACK[0x50C]) >> 28)) ^ 1)
                + 1813;
  int v614 = *(unsigned __int8 *)(v17
                            + (unsigned __int16)(v613
                                               - 960 * ((unsigned __int16)((2185 * v613) >> 16) >> 5))) ^ 0x13;
  int v615 = LODWORD(STACK[0x4F4]) ^ (16
                                * (*(unsigned __int8 *)(v17
                                                      + (unsigned __int16)(v607
                                                                         - 960
                                                                         * ((unsigned __int16)((2185 * v607) >> 16) >> 5))) ^ 0x13)) ^ 0x13;
  unsigned int v616 = v615 ^ ((*(unsigned __int8 *)(v17
                                     + (unsigned __int16)(v608
                                                        - 960
                                                        * ((unsigned __int16)((2185 * v608) >> 16) >> 5))) ^ 0x13) << 8);
  int v617 = v616 ^ ((*(unsigned __int8 *)(v17
                                     + (unsigned __int16)(7 * (v610 ^ 0x60)
                                                        + 1813
                                                        - 960
                                                        * ((unsigned __int16)((2185 * (7 * (v610 ^ 0x60u) + 1813)) >> 16) >> 5))) ^ 0x13) << 12);
  unsigned int v618 = v617 ^ ((*(unsigned __int8 *)(v17
                                     + (unsigned __int16)(v611
                                                        - 960
                                                        * ((unsigned __int16)((2185 * v611) >> 16) >> 5))) ^ 0x13) << 16);
  unsigned int v619 = v618 ^ ((*(unsigned __int8 *)(v17
                                     + (unsigned __int16)(v612
                                                        - 960
                                                        * ((unsigned __int16)((2185 * v612) >> 16) >> 5))) ^ 0x13) << 20);
  unsigned int v620 = v619 ^ ((v614 << 24) + 898254763 - ((v614 << 25) & 0x6A000000)) ^ 0x358A47AB;
  LODWORD(v508) = 7
                * ((v620 ^ ((*(unsigned __int8 *)(v17
                                                + (unsigned __int16)(v508
                                                                   - 960
                                                                   * ((unsigned __int16)((2185 * v508) >> 16) >> 5))) ^ 3) << 28)) >> 28)
                + 3822;
  LODWORD(v508) = ((((((*(unsigned __int8 *)(v17
                                           + (unsigned __int16)(7 * (HIBYTE(v620) & 0xF)
                                                              + 3822
                                                              - 960
                                                              * ((unsigned __int16)((2185
                                                                                                 * (7 * (HIBYTE(v620) & 0xF)
                                                                                                  + 3822)) >> 16) >> 5))) ^ 0x13) << 8) ^ ((*(unsigned __int8 *)(v17 + (unsigned __int16)(v508 - 960 * ((unsigned __int16)((2185 * v508) >> 16) >> 5))) ^ 0x13) << 12) | *(unsigned __int8 *)(v17 + (unsigned __int16)(7 * (BYTE2(v618) & 0xF) + 3822 - 960 * ((unsigned __int16)((2185 * (7 * (HIWORD(v618) & 0xF) + 3822)) >> 16) >> 5))) ^ 0x13) << 8) ^ ((*(unsigned __int8 *)(v17 + (unsigned __int16)(7 * ((v619 >> 20) & 0xF) + 3822 - 960 * ((unsigned __int16)((2185 * (7 * ((v619 >> 20) & 0xF) + 3822)) >> 16) >> 5))) ^ 0x13) << 12) | *(unsigned __int8 *)(v17 + (unsigned __int16)(7 * ((v616 >> 8) & 0xF) + 3822 - 960 * ((unsigned __int16)((2185 * (7 * ((v616 >> 8) & 0xF) + 3822)) >> 16) >> 5))) ^ 0x13) << 8) ^ ((*(unsigned __int8 *)(v17 + (unsigned __int16)(7 * ((unsigned __int16)v617 >> 12) + 2862 - 960 * ((unsigned __int16)((2185 * (7 * ((unsigned __int16)v617 >> 12) + 2862)) >> 16) >> 5))) ^ 0x13) << 12) | LODWORD(STACK[0x500]) ^ 0x13;
  int v621 = STACK[0x494];
  LODWORD(STACK[0x6D8]) = LODWORD(STACK[0x494]) ^ (16
                                                 * (*(unsigned __int8 *)(v17
                                                                       + (unsigned __int16)(7
                                                                                          * (v615 >> 4)
                                                                                          + 3822
                                                                                          - 960
                                                                                          * ((unsigned __int16)((2185 * (7 * (v615 >> 4) + 3822)) >> 16) >> 5))) ^ 0x13)) ^ 0xFA51331F ^ v508;
  int v622 = *(unsigned __int8 *)(v17 + (unsigned __int16)(LODWORD(STACK[0x4A4]) + 3983) % 0x3C0u) ^ 0x13;
  int v623 = v577;
  unsigned int v624 = 7 * ((v622 - 798318148 - ((2 * v622) & 0x178)) ^ v577);
  int v625 = *(unsigned __int8 *)(v17 + v624 % 0x3C0) >> 4;
  unsigned int v626 = (v624 + 3983) % 0x3C0;
  int v627 = 7
       * (((v625 ^ 1) - 2 * ((v625 ^ 1) & 7 ^ v625 & 4) + 19) ^ *(unsigned __int8 *)(v17 + LODWORD(STACK[0x4B8])))
       + 3983;
  LODWORD(v508) = (LODWORD(STACK[0x4A8]) ^ LODWORD(STACK[0x4AC])) & 0xF0 | (LODWORD(STACK[0x4B0]) >> 4);
  LODWORD(v508) = ((2 * v508) & 0x6E) + (v508 ^ 0xF1E2DF37);
  int v628 = *(unsigned __int8 *)(v17
                            + (((v508 + 236790530) & 0x233 | (1910693117 - v508) & 0x6F2D3433) ^ ((v606 & 0x6F2D3634 ^ 0xD2414) + (v606 & 0x6F2D3634 ^ 0x6F201220u)))
                            * (v508 + 236790530)
                            % 0x3C0) ^ (16
                                      * (*(unsigned __int8 *)(v17
                                                            + (unsigned __int16)(v627
                                                                               - 960
                                                                               * ((unsigned __int16)((8739 * v627) >> 16) >> 7))) ^ 0x13)) ^ 0x13;
  LOWORD(v602) = (unsigned __int16)(7 * v628 + 3983) % 0x3C0u;
  int v629 = *(unsigned __int8 *)(v17
                            + (unsigned __int16)(7 * v628
                                               - 960 * ((unsigned __int16)((244671 * v628) >> 16) >> 9))) >> 4;
  LODWORD(v508) = 7
                * (((v629 ^ 1) - 2 * ((v629 ^ 1) & 7 ^ v629 & 4) + 19) ^ *(unsigned __int8 *)(v17 + (7 * (int)v508 + 1657529727) % 0x3C0u))
                + 3983;
  LODWORD(v508) = *(unsigned __int8 *)(v17 + (unsigned __int16)(LODWORD(STACK[0x4B4]) + 3983) % 0x3C0u) ^ (16 * (*(unsigned __int8 *)(v17 + (unsigned __int16)(v508 - 960 * ((unsigned __int16)((8739 * v508) >> 16) >> 7))) ^ 0x13)) ^ 0x13;
  LOWORD(v580) = (unsigned __int16)(7 * v508 + 3983) % 0x3C0u;
  int v630 = ((((LODWORD(STACK[0x4BC]) >> 12) ^ 0x79270D14) & 0x7023CB9E)
        - ((2 * ((LODWORD(STACK[0x4BC]) >> 12) ^ 0x79270D14)) & 0x20070500)
        + 369591008) ^ ((LODWORD(STACK[0x4BC]) >> 12) ^ 0x79270D14) & 0x7023CB91;
  LODWORD(v508) = 7
                * ((*(unsigned char *)(v17 + LODWORD(STACK[0x4C8])) ^ (*(unsigned char *)(v17
                                                                                         + (unsigned __int16)(7 * v508 - 960 * ((unsigned __int16)((244671 * v508) >> 16) >> 9))) >> 4)) ^ 0x12)
                + 3983;
  unsigned int v631 = (v630 & 0x353A80A ^ 0x5512023) + (v630 & 0xF0AC5795) - 1;
  int v632 = ((LODWORD(STACK[0x4CC]) >> 8) & 0xF0 ^ 0x4DF6FB86) + ((LODWORD(STACK[0x4CC]) >> 7) & 0x160 ^ 0x60) - 1308031926;
  unsigned int v633 = (v632 - (v632 | v631 ^ 0x1756A2AA)) ^ ((v631 ^ 0xE8A95D55) + 1);
  unsigned int v634 = 7 * ((v631 ^ 0x9EA78ECC ^ (v633 - ((2 * v633) & 0x13E258CC) - 1980683162)) + v632);
  unsigned int v635 = v634 % 0x3C0;
  LODWORD(v508) = *(unsigned __int8 *)(v17 + (v634 + 3983) % 0x3C0) ^ (16
                                                                     * (*(unsigned __int8 *)(v17
                                                                                           + (unsigned __int16)(v508 - 960 * ((unsigned __int16)((8739 * v508) >> 16) >> 7))) ^ 0x13)) ^ 0x13;
  LOWORD(v633) = 7 * v508;
  LODWORD(v508) = 244671 * v508;
  LOWORD(v634) = v633 - 960 * ((v508 + 139217799) >> 25);
  LODWORD(v508) = (*(unsigned __int8 *)(v17 + (unsigned __int16)(v633 - 960 * (v508 >> 25))) >> 4) ^ 1;
  LODWORD(v508) = (v508 - 2 * (v508 & 3) + 19) ^ *(unsigned __int8 *)(v17 + v635);
  LODWORD(v508) = ((2 * v508) & 0x72) + (v508 ^ 0x239);
  LODWORD(v508) = *(unsigned __int8 *)(v17 + LODWORD(STACK[0x4D8])) ^ (16
                                                                     * (*(unsigned __int8 *)(v17
                                                                                           + (unsigned __int16)(7 * v508 - 960 * ((unsigned __int16)((61173 * v508) >> 16) >> 7))) ^ 0x13)) ^ 0x13;
  LOWORD(v635) = 7 * v508;
  LODWORD(v508) = 244671 * v508;
  LOWORD(v633) = v635 - 960 * ((v508 + 139217799) >> 25);
  LODWORD(v508) = (*(unsigned __int8 *)(v17 + (unsigned __int16)(v635 - 960 * (v508 >> 25))) >> 4) ^ 1;
  LODWORD(v508) = 7
                * ((v508 + (~(2 * v508) | 0xF9) + 20) ^ *(unsigned __int8 *)(v17 + LODWORD(STACK[0x4D0])))
                + 3023;
  LODWORD(v508) = *(unsigned __int8 *)(v17 + (unsigned __int16)(LODWORD(STACK[0x3DC]) + 3983) % 0x3C0u) ^ (16 * (*(unsigned __int8 *)(v17 + (unsigned __int16)(v508 - 960 * ((unsigned __int16)((8739 * v508) >> 16) >> 7))) ^ 0x13)) ^ 0x13;
  LOWORD(v635) = 7 * v508;
  LODWORD(v508) = 244671 * v508;
  LOWORD(v617) = v635 - 960 * ((v508 + 139217799) >> 25);
  LOWORD(v635) = v635 - 960 * (v508 >> 25);
  LODWORD(v508) = ((*(unsigned __int8 *)(v17 + (unsigned __int16)(v617 + 3983)) ^ 0x13) << 20) ^ ((*(unsigned __int8 *)(v17 + (unsigned __int16)(v633 + 3983)) ^ 0x13) << 16);
  LOBYTE(v635) = (*(unsigned char *)(v17 + (unsigned __int16)v635) >> 4) ^ 1;
  int v636 = 7 * ((v635 - 2 * (v635 & 3) + 19) ^ *(unsigned __int8 *)(v17 + LODWORD(STACK[0x3E0]))) + 3983;
  int v637 = *(unsigned __int8 *)(v17 + (unsigned __int16)(LODWORD(STACK[0x3E4]) + 3983) % 0x3C0u) ^ (16
                                                                                                * (*(unsigned __int8 *)(v17 + (unsigned __int16)(v636 - 960 * ((unsigned __int16)((8739 * v636) >> 16) >> 7))) ^ 0x13)) ^ 0x13;
  LOWORD(v633) = 7 * v637;
  int v638 = *(unsigned __int8 *)(v17
                            + (unsigned __int16)(7 * v637
                                               - 960 * ((unsigned __int16)((244671 * v637) >> 16) >> 9))) >> 4;
  int v639 = 7
       * (((v638 ^ 1) - 2 * ((v638 ^ 1) & 0xFB ^ v638 & 8) + 19) ^ *(unsigned __int8 *)(v17 + LODWORD(STACK[0x3F4])))
       + 3983;
  int v640 = 7 * ((HIBYTE(LODWORD(STACK[0x4C4])) & 0xF0 | (LODWORD(STACK[0x4C0]) >> 28)) ^ 0x86) + 3983;
  unsigned int v641 = ((*(unsigned __int8 *)(v17
                              + (unsigned __int16)(7
                                                 * (*(unsigned __int8 *)(v17
                                                                       + (unsigned __int16)(v640
                                                                                          - 960
                                                                                          * ((unsigned __int16)((8739 * v640) >> 16) >> 7))) ^ (unsigned __int16)(16 * (*(unsigned __int8 *)(v17 + (unsigned __int16)(v639 - 960 * ((unsigned __int16)((8739 * v639) >> 16) >> 7))) ^ 0x13)) ^ 0x13)
                                                 + 3983)
                              % 0x3C0u) ^ 3) << 28) ^ ((*(unsigned __int8 *)(v17
                                                                           + (unsigned __int16)(v633 + 3983) % 0x3C0u) ^ 0x13) << 24);
  int v642 = 16 * (*(unsigned __int8 *)(v17 + (unsigned __int16)v602) ^ 0x13);
  LOBYTE(v640) = *(unsigned char *)(v17 + v626) ^ 0x13;
  int v643 = (*(unsigned __int8 *)(v17 + (unsigned __int16)v580) ^ 0x13) << 8;
  unsigned int v644 = v643 ^ ((*(unsigned __int8 *)(v17 + (unsigned __int16)(v634 + 3983)) ^ 0x13) << 12);
  unsigned int v645 = v643 ^ v642;
  LOBYTE(v642) = v642 ^ v640;
  unsigned int v646 = 7 * (STACK[0x488] & 0xFFFFFF0F | (16 * (v640 & 0xF))) + 1813;
  int v647 = 7 * (v642 & 0xF0 | (LODWORD(STACK[0x4B0]) >> 4)) + 1813;
  int v648 = 7 * ((v645 >> 4) & 0xF0 | (LODWORD(STACK[0x4B0]) >> 8) & 0xF) + 1813;
  unsigned int v649 = v644 ^ v508;
  unsigned int v650 = ((((v641 ^ v649) >> 12) + 122) & 3 ^ 2)
       + ((((v641 ^ v649) >> 12) + 122) & 3 ^ 0x101)
       + ((((unsigned __int16)LODWORD(STACK[0x4BC]) >> 12) & 0xFFFFFF0F | (16
                                                                         * ((((v641 ^ v649) >> 12)
                                                                           + 122
                                                                           - ((v644 >> 11) & 4)) & 0xF))) ^ 0xAC);
  int v651 = *(unsigned __int8 *)(v17
                            + (unsigned __int16)(v648
                                               - 960 * ((unsigned __int16)((2185 * v648) >> 16) >> 5)));
  int v652 = ((*(unsigned __int8 *)(v17
                              + (unsigned __int16)(7 * v650 - 960 * ((unsigned __int16)((61173 * v650) >> 16) >> 7))) ^ 0x13) << 12) ^ ((v651 ^ 0x13) << 8);
  int v653 = (v651 & 7 ^ 3 | v651 & 7 ^ 4) * ((((v649 >> 12) & 0xF0 | HIWORD(LODWORD(STACK[0x4BC])) & 0xF) ^ 0xA) + 259);
  LODWORD(v508) = 7 * ((WORD1(v508) & 0xF0 | (LODWORD(STACK[0x4C0]) >> 20) & 0xF) ^ 3) + 1813;
  unsigned int v654 = 7 * (((v641 ^ v649) >> 20) & 0xF0 | HIBYTE(LODWORD(STACK[0x4C0])) & 0xF) + 1813;
  int v655 = 7 * ((HIBYTE(v641) & 0xF0 | (LODWORD(STACK[0x4C0]) >> 28)) ^ 6) + 1813;
  int v656 = ((*(unsigned __int8 *)(v17
                              + (unsigned __int16)(v655
                                                 - 960 * ((unsigned __int16)((2185 * v655) >> 16) >> 5))) ^ 3) << 28) ^ ((*(unsigned __int8 *)(v17 + (unsigned __int16)(v654 - 960 * ((unsigned __int16)((2185 * v654) >> 16) >> 5))) ^ 0x13) << 24);
  int v657 = *(unsigned __int8 *)(v17 + (unsigned __int16)(v646 - 960 * ((unsigned __int16)((2185 * v646) >> 16) >> 5)));
  int v658 = v657 ^ (16
               * (*(unsigned __int8 *)(v17
                                     + (unsigned __int16)(v647
                                                        - 960
                                                        * ((unsigned __int16)((8739 * v647) >> 16) >> 7))) ^ 0x13)) ^ 0x13;
  unsigned int v659 = v652 ^ v658;
  unsigned int v660 = v652 ^ v658 ^ ((*(unsigned __int8 *)(v17
                                            + (unsigned __int16)(v653
                                                               - 960
                                                               * ((unsigned __int16)((8739 * v653) >> 16) >> 7))) ^ 0x13) << 16);
  LODWORD(v508) = v660 ^ ((*(unsigned __int8 *)(v17
                                              + (unsigned __int16)(v508
                                                                 - 960
                                                                 * ((unsigned __int16)((2185 * v508) >> 16) >> 5))) ^ 0x13) << 20);
  unsigned int v661 = v656 ^ v508;
  LODWORD(v508) = ((((((*(unsigned __int8 *)(v17
                                           + (unsigned __int16)(7 * (HIBYTE(v661) & 0xF)
                                                              + 3822
                                                              - 960
                                                              * ((unsigned __int16)((2185
                                                                                                 * (7 * (HIBYTE(v661) & 0xF)
                                                                                                  + 3822)) >> 16) >> 5))) ^ 0x13) << 8) ^ ((*(unsigned __int8 *)(v17 + (unsigned __int16)(7 * (v661 >> 28) + 3822 - 960 * ((unsigned __int16)((2185 * (7 * (v661 >> 28) + 3822)) >> 16) >> 5))) ^ 0x13) << 12) | *(unsigned __int8 *)(v17 + (unsigned __int16)(7 * (BYTE2(v660) & 0xF) + 3822 - 960 * ((unsigned __int16)((2185 * (7 * (HIWORD(v660) & 0xF) + 3822)) >> 16) >> 5))) ^ 0x13) << 8) ^ ((*(unsigned __int8 *)(v17 + (unsigned __int16)(7 * ((v508 >> 20) & 0xF) + 3822 - 960 * ((unsigned __int16)((2185 * (7 * ((v508 >> 20) & 0xF) + 3822)) >> 16) >> 5))) ^ 0x13) << 12) | *(unsigned __int8 *)(v17 + (unsigned __int16)(7 * ((v659 >> 8) & 0xF) + 3822 - 960 * ((unsigned __int16)((2185 * (7 * ((v659 >> 8) & 0xF) + 3822)) >> 16) >> 5))) ^ 0x13) << 8) ^ ((*(unsigned __int8 *)(v17 + (unsigned __int16)(7 * ((unsigned __int16)v652 >> 12) + 3822 - 960 * ((unsigned __int16)((2185 * (7 * ((unsigned __int16)v652 >> 12) + 3822)) >> 16) >> 5))) ^ 0x13) << 12);
  int v662 = LODWORD(STACK[0x6B8]) ^ LODWORD(STACK[0x4A0]);
  unsigned int v663 = LODWORD(STACK[0x4A0]) ^ 0x4897FD3 ^ LODWORD(STACK[0x4FC]);
  int v664 = *(unsigned __int8 *)(v17
                            + (unsigned __int16)(7 * (v657 & 0xF ^ 3)
                                               + 3822
                                               - 960
                                               * ((unsigned __int16)((2185 * (7 * (v657 & 0xF ^ 3u) + 3822)) >> 16) >> 5))) ^ 0x13;
  LODWORD(v508) = (v508 | v664) ^ (16
                                 * (*(unsigned __int8 *)(v17
                                                       + (unsigned __int16)(7 * (v658 >> 4)
                                                                          + 3822
                                                                          - 960
                                                                          * ((unsigned __int16)((2185
                                                                                               * (7
                                                                                                * (v658 >> 4)
                                                                                                + 3822)) >> 16) >> 5))) ^ 0x13));
  int v665 = v508 + 479139787 - 2 * (v508 & 0x1C8F17CF ^ v664 & 4);
  LODWORD(v508) = *(unsigned __int8 *)(v17 + (unsigned __int16)(LODWORD(STACK[0x418]) + 3983) % 0x3C0u) ^ 0x13;
  LODWORD(v508) = 7 * ((v508 - 798318148 - ((2 * v508) & 0x178)) ^ v623);
  unsigned int v666 = ((int)v508 + 3983) % 0x3C0u;
  LODWORD(v508) = *(unsigned __int8 *)(v17 + v508 % 0x3C0) >> 4;
  LODWORD(v508) = 7
                * (((v508 ^ 1) + ~(2 * ((v508 ^ 1) & 7 ^ v508 & 4)) + 20) ^ *(unsigned __int8 *)(v17 + LODWORD(STACK[0x414])))
                + 3983;
  LODWORD(v508) = *(unsigned __int8 *)(v17 + (unsigned __int16)(LODWORD(STACK[0x424]) + 3983) % 0x3C0u) ^ (16 * (*(unsigned __int8 *)(v17 + (unsigned __int16)(v508 - 960 * ((unsigned __int16)((8739 * v508) >> 16) >> 7))) ^ 0x13)) ^ 0x13;
  LOWORD(v652) = 7 * v508;
  LODWORD(v508) = 244671 * v508;
  __int16 v667 = v652 - 960 * ((v508 + 139217799) >> 25);
  LOBYTE(v508) = (*(unsigned char *)(v17 + (unsigned __int16)(v652 - 960 * (v508 >> 25))) >> 4) ^ 1;
  LODWORD(v508) = 7
                * ((v508 - 2 * (v508 & 3) + 19) ^ *(unsigned __int8 *)(v17 + LODWORD(STACK[0x41C])))
                + 3983;
  LODWORD(v508) = *(unsigned __int8 *)(v17 + (unsigned __int16)(LODWORD(STACK[0x428]) + 3983) % 0x3C0u) ^ (16 * (*(unsigned __int8 *)(v17 + (unsigned __int16)(v508 - 960 * ((unsigned __int16)((8739 * v508) >> 16) >> 7))) ^ 0x13)) ^ 0x13;
  LOWORD(v652) = 7 * v508;
  LOBYTE(v508) = (*(unsigned char *)(v17
                           + (unsigned __int16)(7 * v508
                                              - 960 * ((unsigned __int16)((244671 * v508) >> 16) >> 9))) >> 4) ^ 1;
  LODWORD(v508) = 7
                * ((v508 - 2 * (v508 & 3) + 19) ^ *(unsigned __int8 *)(v17 + LODWORD(STACK[0x420])))
                + 3983;
  int v668 = *(unsigned __int8 *)(v17 + (unsigned __int16)(v652 + 3983) % 0x3C0u);
  LODWORD(v508) = *(unsigned __int8 *)(v17 + (unsigned __int16)(LODWORD(STACK[0x430]) + 3983) % 0x3C0u) ^ (16 * (*(unsigned __int8 *)(v17 + (unsigned __int16)(v508 - 960 * ((unsigned __int16)((8739 * v508) >> 16) >> 7))) ^ 0x13)) ^ 0x13;
  LOWORD(v664) = (unsigned __int16)((v508 + 569) * ((v668 & 7 ^ 3) + (v668 & 7 ^ 4))) % 0x3C0u;
  LOBYTE(v508) = (*(unsigned char *)(v17
                           + (unsigned __int16)(7 * v508
                                              - 960 * ((unsigned __int16)((244671 * v508) >> 16) >> 9))) >> 4) ^ 1;
  LODWORD(v508) = 7
                * ((v508 - 2 * (v508 & 3) + 19) ^ *(unsigned __int8 *)(v17 + LODWORD(STACK[0x42C])))
                + 3983;
  unsigned int v669 = ((*(unsigned __int8 *)(v17 + (unsigned __int16)v664) ^ 0x13) << 12) ^ ((v668 ^ 0x13) << 8);
  LODWORD(v508) = *(unsigned __int8 *)(v17 + (unsigned __int16)(LODWORD(STACK[0x438]) + 3983) % 0x3C0u) ^ (16 * (*(unsigned __int8 *)(v17 + (unsigned __int16)(v508 - 960 * ((unsigned __int16)((8739 * v508) >> 16) >> 7))) ^ 0x13)) ^ 0x13;
  LOWORD(v668) = 7 * v508;
  LODWORD(v508) = 244671 * v508;
  int v670 = *(unsigned __int8 *)(v17 + (unsigned __int16)(v668 - 960 * (v508 >> 25))) >> 4;
  int v671 = 7
       * (((v670 ^ 1) - 2 * ((v670 ^ 1) & 0xFB ^ v670 & 8) + 19) ^ *(unsigned __int8 *)(v17 + LODWORD(STACK[0x434])))
       + 3983;
  LOWORD(v508) = v668 - 960 * ((v508 + 139217799) >> 25);
  unsigned int v672 = *(unsigned __int8 *)(v17 + (unsigned __int16)(LODWORD(STACK[0x440]) + 3983) % 0x3C0u) ^ (16
                                                                                                * (*(unsigned __int8 *)(v17 + (unsigned __int16)(v671 - 960 * ((unsigned __int16)((8739 * v671) >> 16) >> 7))) ^ 0x13)) ^ 0x13;
  LOWORD(v671) = 7 * v672;
  v672 *= 244671;
  LOWORD(v658) = v671 - 960 * ((v672 + 139217799) >> 25);
  int v673 = *(unsigned __int8 *)(v17 + (unsigned __int16)(v671 - 960 * (v672 >> 25))) >> 4;
  int v674 = 7
       * (((v673 ^ 1) + ~(2 * ((v673 ^ 1) & 7 ^ v673 & 4)) + 20) ^ *(unsigned __int8 *)(v17 + LODWORD(STACK[0x43C])))
       + 3983;
  int v675 = *(unsigned __int8 *)(v17
                            + (unsigned __int16)(v674
                                               - 960 * ((unsigned __int16)((8739 * v674) >> 16) >> 7))) ^ 0x13;
  int v676 = 16 * v675 - 391036942 - 32 * v675;
  int v677 = *(unsigned __int8 *)(v17 + (unsigned __int16)(LODWORD(STACK[0x448]) + 3983) % 0x3C0u) ^ 0x13;
  int v678 = v677 + 589745547 - ((2 * v677) & 0x116);
  int v679 = v676 ^ v678 ^ 0x34680D86;
  v678 ^= 0x2326CD8Bu;
  int v680 = (v679 + v678 + 1) ^ ((v676 ^ 0x174EC00D) + 1);
  unsigned int v681 = 7 * (((v680 - 391036942 - ((2 * v680) & 0xD1627FE4)) ^ v676) + v678);
  unsigned int v682 = (v681 + 3983) % 0x3C0;
  LOBYTE(v681) = *(unsigned char *)(v17 + LODWORD(STACK[0x444])) ^ (*(unsigned char *)(v17 + v681 % 0x3C0) >> 4);
  LOWORD(v680) = 7 * (v681 ^ 0x12)
               + 3983
               - 960 * ((unsigned __int16)((8739 * (7 * (v681 ^ 0x12u) + 3983)) >> 16) >> 7);
  int v683 = (v681 & 7 ^ 2 | v681 & 7 ^ 5)
       * (((HIBYTE(LODWORD(STACK[0x490])) & 0xF0 | (LODWORD(STACK[0x48C]) >> 28)) ^ 0x70) + 569);
  int v684 = ((*(unsigned __int8 *)(v17
                              + (unsigned __int16)(7
                                                 * (*(unsigned __int8 *)(v17
                                                                       + (unsigned __int16)(v683
                                                                                          - 960
                                                                                          * ((unsigned __int16)((8739 * v683) >> 16) >> 7))) ^ (unsigned __int16)(16 * (*(unsigned __int8 *)(v17 + (unsigned __int16)v680) ^ 0x13)) ^ 0x13)
                                                 + 3983)
                              % 0x3C0u) ^ 3) << 28) ^ ((*(unsigned __int8 *)(v17 + v682) ^ 0x13) << 24);
  int v685 = 16 * (*(unsigned __int8 *)(v17 + (unsigned __int16)(v667 + 3983)) ^ 0x13);
  unsigned int v686 = v669 ^ v685;
  LODWORD(v508) = v669 ^ v685 ^ ((*(unsigned __int8 *)(v17 + (unsigned __int16)(v508 + 3983)) ^ 0x13) << 16);
  unsigned int v687 = v508 ^ ((*(unsigned __int8 *)(v17 + (unsigned __int16)(v658 + 3983)) ^ 0x13) << 20);
  unsigned int v688 = v687 ^ 0x3A20E465 ^ (v684 + 975234149 - ((2 * v684) & 0x74000000));
  LOBYTE(v658) = *(unsigned char *)(v17 + v666) ^ 0x13;
  LOBYTE(v685) = v685 ^ v658;
  unsigned int v689 = 7 * (STACK[0x67C] & 0xFFFFFF0F | (16 * (v658 & 0xF))) + 1813;
  int v690 = *(unsigned __int8 *)(v17 + (unsigned __int16)(v689 - 960 * ((unsigned __int16)((2185 * v689) >> 16) >> 5)));
  int v691 = 7 * (v685 & 0xF0 | (LODWORD(STACK[0x49C]) >> 4)) + 1813;
  int v692 = 7 * (((v669 >> 8) & 0xF0 | ((unsigned __int16)LODWORD(STACK[0x498]) >> 12)) ^ 3) + 1813;
  LODWORD(v508) = 7 * (((v508 >> 12) & 0xF0 | HIWORD(LODWORD(STACK[0x498])) & 0xF) ^ 0xE) + 1813;
  int v693 = 7 * ((HIWORD(v687) & 0xF0 | (LODWORD(STACK[0x48C]) >> 20) & 0xF) ^ 0xC) + 1813;
  int v694 = *(unsigned __int8 *)(v17
                            + (unsigned __int16)(v693
                                               - 960 * ((unsigned __int16)((2185 * v693) >> 16) >> 5)));
  int v695 = ((v694 ^ 0x13) << 20) - 2071601462 - ((v694 << 21) & 0x9000000);
  HIDWORD(v598) = (v688 >> 28) - ((v688 >> 27) & 0x14) + 3050;
  LODWORD(v598) = STACK[0x48C];
  int v696 = v690 ^ (16
               * (*(unsigned __int8 *)(v17
                                     + (unsigned __int16)(v691
                                                        - 960
                                                        * ((unsigned __int16)((2185 * v691) >> 16) >> 5))) ^ 0x13)) ^ 0x13;
  unsigned int v697 = v696 ^ ((*(unsigned __int8 *)(v17
                                     + (7
                                      * ((((v686 >> 8) & 0xF) << ((v690 & 4 ^ 4) + (v690 & 4))) ^ (LODWORD(STACK[0x49C]) >> 8) & 0xF)
                                      + 1813)
                                     % 0x3C0) ^ 0x13) << 8);
  int v698 = v697 ^ ((*(unsigned __int8 *)(v17
                                     + (unsigned __int16)(v692
                                                        - 960
                                                        * ((unsigned __int16)((2185 * v692) >> 16) >> 5))) ^ 0x13) << 12);
  LODWORD(v508) = v698 ^ ((*(unsigned __int8 *)(v17
                                              + (unsigned __int16)(v508
                                                                 - 960
                                                                 * ((unsigned __int16)((2185 * v508) >> 16) >> 5))) ^ 0x13) << 16);
  unsigned int v699 = v508 ^ ((*(unsigned __int8 *)(v17
                                     + 7
                                     * ((((v695 & 0x7C00000 ^ 0x4800000) + (v695 & 0x7C00000 ^ 0xB34ABD6A)) ^ 0xB7CABC69)
                                      + (((v688 >> 20) & 0xF0 | HIBYTE(LODWORD(STACK[0x48C])) & 0xF) ^ 2))
                                     % 0x3C0) ^ 0x13) << 24) ^ ((*(unsigned __int8 *)(v17
                                                                                    + (unsigned __int16)(7 * ((v598 >> 28) ^ 0xBEA0) + 1813)
                                                                                    % 0x3C0u) ^ 3) << 28);
  unsigned int v700 = (v699 - 2071601462 - 2 * (v699 & 0x485DEDE ^ v696 & 0x14)) ^ v695;
  LODWORD(v508) = ((((((*(unsigned __int8 *)(v17
                                           + (unsigned __int16)(7 * (HIBYTE(v700) & 0xF)
                                                              + 3822
                                                              - 960
                                                              * ((unsigned __int16)((2185
                                                                                                 * (7 * (HIBYTE(v700) & 0xF)
                                                                                                  + 3822)) >> 16) >> 5))) ^ 0x13) << 8) ^ ((*(unsigned __int8 *)(v17 + (unsigned __int16)(7 * (v699 >> 28) + 3822 - 960 * ((unsigned __int16)((2185 * (7 * (v699 >> 28) + 3822)) >> 16) >> 5))) ^ 0x13) << 12) | *(unsigned __int8 *)(v17 + (unsigned __int16)(7 * (BYTE2(v508) & 0xF) + 3822 - 960 * ((unsigned __int16)((2185 * (7 * (WORD1(v508) & 0xF) + 3822)) >> 16) >> 5))) ^ 0x13) << 8) ^ ((*(unsigned __int8 *)(v17 + (unsigned __int16)(7 * ((v700 >> 20) & 0xF) + 3822 - 960 * ((unsigned __int16)((2185 * (7 * ((v700 >> 20) & 0xF) + 3822)) >> 16) >> 5))) ^ 0x13) << 12) | *(unsigned __int8 *)(v17 + (unsigned __int16)(7 * ((v697 >> 8) & 0xF) + 3822 - 960 * ((unsigned __int16)((2185 * (7 * ((v697 >> 8) & 0xF) + 3822)) >> 16) >> 5))) ^ 0x13) << 8) ^ ((*(unsigned __int8 *)(v17 + (unsigned __int16)(7 * ((unsigned __int16)v698 >> 12) + 3822 - 960 * ((unsigned __int16)((2185 * (7 * ((unsigned __int16)v698 >> 12) + 3822)) >> 16) >> 5))) ^ 0x13) << 12);
  int v701 = LODWORD(STACK[0x46C]) + LODWORD(STACK[0x480]);
  int v702 = LODWORD(STACK[0x454]) ^ 0xC0519C0 ^ (16
                                            * (*(unsigned __int8 *)(v17
                                                                  + (unsigned __int16)(7 * (v696 >> 4)
                                                                                     + 3822
                                                                                     - 960
                                                                                     * ((unsigned __int16)((2185 * (7 * (v696 >> 4) + 3822)) >> 16) >> 5))) ^ 0x13)) ^ (v508 | *(unsigned __int8 *)(v17 + (unsigned __int16)(7 * (v690 & 0xF ^ 3) + 3822 - 960 * ((unsigned __int16)((2185 * (7 * (v690 & 0xF ^ 3u) + 3822)) >> 16) >> 5))) ^ 0x13);
  int v703 = LODWORD(STACK[0x4E8]) + 886159579 + LODWORD(STACK[0x470]);
  int v704 = LODWORD(STACK[0x4E4]) - 814765065 + LODWORD(STACK[0x450]);
  unsigned int v705 = 7 * (STACK[0x44C] & 0xFFFFFF0F | (16 * (STACK[0x3E8] & 0xF))) + 1813;
  int v706 = 7 * (((LODWORD(STACK[0x40C]) >> 12) & 0xF0 | HIWORD(LODWORD(STACK[0x400])) & 0xF) ^ 0xE) + 1813;
  int v707 = 7 * ((HIWORD(LODWORD(STACK[0x3EC])) & 0xF0 | (LODWORD(STACK[0x410]) >> 20) & 0xF) ^ 4) + 1813;
  int v708 = 7 * (((LODWORD(STACK[0x3F0]) >> 20) & 0xF0 | HIBYTE(LODWORD(STACK[0x410])) & 0xF) ^ 0xA) + 1813;
  unsigned int v709 = ((*(unsigned __int8 *)(v17
                              + (unsigned __int16)(v707
                                                 - 960 * ((unsigned __int16)((2185 * v707) >> 16) >> 5))) ^ 0x13) << 20) ^ ((*(unsigned __int8 *)(v17 + (unsigned __int16)(v706 - 960 * ((unsigned __int16)((2185 * v706) >> 16) >> 5))) ^ 0x13) << 16);
  int v710 = 7 * ((HIBYTE(LODWORD(STACK[0x408])) & 0xF0 | (LODWORD(STACK[0x410]) >> 28)) ^ 0xB) + 1813;
  int v711 = *(unsigned __int8 *)(v17 + (unsigned __int16)(v705 - 960 * ((unsigned __int16)((2185 * v705) >> 16) >> 5)));
  int v712 = v711 ^ (16 * (*(unsigned __int8 *)(v17 + (unsigned __int16)STACK[0x3F8]) ^ 0x13)) ^ 0x13;
  unsigned int v713 = LODWORD(STACK[0x3D8]) ^ v712;
  unsigned int v714 = v709 ^ v713 ^ ((*(unsigned __int8 *)(v17
                                            + (unsigned __int16)(v708
                                                               - 960
                                                               * ((unsigned __int16)((2185 * v708) >> 16) >> 5))) ^ 0x13) << 24);
  unsigned int v715 = 7
       * ((v714 ^ ((*(unsigned __int8 *)(v17
                                       + (unsigned __int16)(v710
                                                          - 960
                                                          * ((unsigned __int16)((2185 * v710) >> 16) >> 5))) ^ 3) << 28)) >> 28)
       + 3822;
  int v716 = ((*(unsigned __int8 *)(v17
                              + (unsigned __int16)(7 * (HIBYTE(v714) & 0xF)
                                                 + 3822
                                                 - 960
                                                 * ((unsigned __int16)((2185
                                                                                    * (7 * (HIBYTE(v714) & 0xF) + 3822)) >> 16) >> 5))) ^ 0x13) << 8) ^ ((*(unsigned __int8 *)(v17 + (unsigned __int16)(v715 - 960 * ((unsigned __int16)((2185 * v715) >> 16) >> 5))) ^ 0x13) << 12) | *(unsigned __int8 *)(v17 + (unsigned __int16)(7 * (((v709 ^ v713) >> 16) & 0xF) + 3822 - 960 * ((unsigned __int16)((2185 * (7 * (((v709 ^ v713) >> 16) & 0xF) + 3822)) >> 16) >> 5))) ^ 0x13;
  int v717 = v703 ^ LODWORD(STACK[0x484]);
  unsigned int v718 = v717 ^ 0xBA90B1B7 ^ LODWORD(STACK[0x47C]);
  int v719 = (((v716 << 8) ^ ((*(unsigned __int8 *)(v17
                                              + (unsigned __int16)(7 * ((v709 >> 20) & 0xF)
                                                                 + 3822
                                                                 - 960
                                                                 * ((unsigned __int16)((2185
                                                                                      * (7 * ((v709 >> 20) & 0xF) + 3822)) >> 16) >> 5))) ^ 0x13) << 12) | *(unsigned __int8 *)(v17 + (unsigned __int16)(7 * ((v713 >> 8) & 0xF) + 3822 - 960 * ((unsigned __int16)((2185 * (7 * ((v713 >> 8) & 0xF) + 3822)) >> 16) >> 5))) ^ 0x13) << 8) ^ ((*(unsigned __int8 *)(v17 + LODWORD(STACK[0x3D4])) ^ 0x13) << 12) | *(unsigned __int8 *)(v17 + (unsigned __int16)(7 * (v711 & 0xF ^ 3) + 2862 - 960 * ((unsigned __int16)((2185 * (7 * (v711 & 0xF ^ 3u) + 2862)) >> 16) >> 5))) ^ 0x13;
  int v720 = v704 ^ LODWORD(STACK[0x680]);
  int v721 = v720 ^ 0xC0519C0 ^ (16
                           * (*(unsigned __int8 *)(v17
                                                 + (unsigned __int16)(7 * (v712 >> 4)
                                                                    + 3822
                                                                    - 960
                                                                    * ((unsigned __int16)((2185
                                                                                         * (7
                                                                                          * (v712 >> 4)
                                                                                          + 3822)) >> 16) >> 5))) ^ 0x13)) ^ v719;
  int v722 = v621 ^ 0x4987D372 ^ v665;
  LODWORD(v508) = LODWORD(STACK[0x458])
                + LODWORD(STACK[0x460])
                - ((2 * (LODWORD(STACK[0x458]) + LODWORD(STACK[0x460])) + 1298107182) & 0xE93F71B2)
                - 1689289104;
  int v723 = (814765065 - LODWORD(STACK[0x4E4])) ^ 0x82FDBFFD ^ v508;
  int v724 = ((2 * v508) & 0x87969D68 ^ 0x81161120) + (v508 ^ 0x3754F66D);
  int v725 = (-886159579 - LODWORD(STACK[0x4E8])) ^ 0x7AE2DC0 ^ (v701 - 524027800);
  LODWORD(v508) = (v703 + 2022316030) ^ (v701 + 613369628);
  unsigned int v726 = (v724 ^ (v704 + 2022316030) ^ 0x7FF7DDFF) - 1147637853 + ((2 * (v724 ^ (v704 + 2022316030))) & 0xFFEFBBFE);
  LODWORD(STACK[0x6F4]) = LODWORD(STACK[0x6C8]) ^ 0xBE7DBFDB;
  LODWORD(STACK[0x6E0]) = LODWORD(STACK[0x710]) ^ 0x13;
  LODWORD(STACK[0x630]) = LODWORD(STACK[0x6EC]) ^ 0x9B699AC4;
  int v727 = LODWORD(STACK[0x404]) ^ 0x291C76D6;
  v720 += 1886386754;
  v717 += 1174446856;
  int v728 = v701 - 1334452062;
  LODWORD(v508) = v508 + 300059886;
  int v729 = v724 + 917158597;
  int v730 = -917158597 - v724;
  LODWORD(STACK[0x6F0]) = v662 ^ 0x7B32E396;
  LODWORD(STACK[0x710]) = v662 ^ 0xFFE162C8;
  LODWORD(STACK[0x6C8]) = LODWORD(STACK[0x558]) - 546882217;
  LODWORD(STACK[0x6D0]) = STACK[0x568];
  LODWORD(STACK[0x688]) = v718;
  int v731 = v702;
  int v732 = STACK[0x6C4];
  HIDWORD(v598) = v663 ^ 0x63;
  LODWORD(v598) = v663 ^ 0x5A51B000;
  unsigned int v733 = ((v663 ^ 0x5A51B063) >> (((v508 + 2) ^ (5 - v508)) & 6))
       + ((LODWORD(STACK[0x6C4]) - 882) ^ 0x8C0005DE ^ (v663 << 26));
  LODWORD(STACK[0x6EC]) = v702;
  LODWORD(STACK[0x5AC]) = v702 ^ 0xC0519C0;
  LODWORD(STACK[0x6AC]) = v663;
  int v734 = (v598 >> 11) ^ __ROR4__(v663, 25) ^ v733;
  LODWORD(STACK[0x6B8]) = v727;
  v727 ^= 0x5A51B063u;
  HIDWORD(v598) = v722 ^ 0x1C0;
  LODWORD(v598) = v722 ^ 0xC051800;
  int v735 = v598 >> 11;
  HIDWORD(v598) = v722;
  LODWORD(v598) = v722 ^ 0xC0519C0;
  LODWORD(STACK[0x6B0]) = v722;
  int v736 = (v598 >> 6) ^ v735 ^ (((v722 << 7) ^ 0x28CE000)
                             + ((v722 ^ 0xC0519C0u) >> (((v663 >> 25) & 0x99 ^ 0x10)
                                                                       + ((v663 >> 25) & 0x99 ^ 9))));
  LODWORD(STACK[0x690]) = v721 ^ 0xC0519C0;
  int v737 = (v722 ^ 0xC0519C0) & (v718 ^ 0x5A51B063) ^ (v721 ^ 0xC0519C0) & (v663 ^ 0x5A51B063) ^ (((v722 ^ 0xC0519C0) & v727)
                                                                                              + ((v731 ^ 0xC0519C0) & (v663 ^ 0x5A51B063))
                                                                                              - 2
                                                                                              * ((v722 ^ 0xC0519C0) & v727 & (v731 ^ 0xC0519C0) & (v663 ^ 0x5A51B063)));
  LODWORD(STACK[0x5A8]) = v727;
  LODWORD(STACK[0x5A0]) = v663 ^ 0x5A51B063;
  LODWORD(STACK[0x68C]) = v721;
  LODWORD(STACK[0x5A4]) = v722 ^ 0xC0519C0;
  int v738 = v727 & (v663 ^ 0x5A51B063) ^ (v663 ^ 0x5A51B063) & (v718 ^ 0x5A51B063) ^ v721 ^ (v722 ^ 0xC0519C0) & (v721 ^ v731);
  LODWORD(STACK[0x680]) = (-1714148741 - v720 + (v734 ^ 0x28D831AD ^ (v720 + 1714148741))) ^ (v730
                                                                                            + 917158597
                                                                                            + (v734 ^ 0x28D831AD ^ (v729 - 917158597))) ^ ((v734 ^ 0x6ED84B26 ^ (((v717 - 1868878657) ^ (v701 + 613369628) ^ v736) - ((2 * ((v717 - 1868878657) ^ (v701 + 613369628) ^ v736)) & 0x8C00F516) + 1174436491)) - ((v717 - 1868878657) ^ (v701 + 613369628) ^ v736));
  int v739 = v736 + v508;
  int v740 = v508 - v728;
  int v741 = ((2 * (v717 - (v508 - v728) - 21589799)) & 0xFF12FABE) + ((v717 - (v508 - v728) - 21589799) ^ 0xFF897D5F);
  LODWORD(v508) = v726 - v729;
  unsigned int v742 = ((2 * (v720 - (v726 - v729) + 1395710228)) & 0xFE73FFFE) + ((v720 - (v726 - v729) + 1395710228) ^ 0xFF39FFFF);
  unsigned int v743 = (v737 + 1515303011 - ((2 * v737) & 0xB4A360C6)) ^ v718;
  unsigned int v744 = LODWORD(STACK[0x6C8]) + v739 + (LODWORD(STACK[0xB2C]) ^ 0xF984FD22);
  int v745 = ((v738 ^ 0xC0519C0 ^ (v742 + 12976129)) - v742 - 12976129) ^ (v730
                                                                     - 1021981199
                                                                     + (v738 ^ 0xC0519C0 ^ (v729 + 1021981199))) ^ ((v738 ^ 0x1285DB79 ^ (((v741 + 7766689) ^ (v701 - 1742457872) ^ v743) - ((2 * ((v741 + 7766689) ^ (v701 - 1742457872) ^ v743)) & 0x3D018572) + 511754937)) - ((v741 + 7766689) ^ (v701 - 1742457872) ^ v743));
  int v746 = v740 + v743;
  int v747 = (v725 ^ 0x7AE2DC0) + v717;
  unsigned int v748 = v740 - v728 - ((2 * (v740 - v728) + 88785860) & 0x9C6476D8) - 791175858;
  int v749 = v747 - 91753199 + v741;
  unsigned int v750 = (v748 ^ 0xB1CDC493) - (v701 - 1334452062) + v741 + 415772500;
  LODWORD(STACK[0x628]) = v750;
  unsigned int v751 = (v748 ^ (v728 - ((2 * v728 + 1808784398) & 0x9C6476D8) - 2078660237))
       + ((v739 + 1847423762) | 0x97F3BF30)
       - ((v739 + 1847423762) & 0x680C40CF);
  int v752 = v726 - v729 - v729 - 1367350356;
  unsigned int v753 = (v723 ^ 0xF6620724) + v720 - 798483657 + v742;
  int v754 = v752 ^ (v729 - 1960588088);
  LODWORD(STACK[0x614]) = v754;
  unsigned int v755 = ((2 * (v753 ^ v752)) & 0xF97FFA2E) + (v753 ^ v752 ^ 0xFCBFFD17);
  unsigned int v756 = ((2 * (v749 ^ v748)) & 0xFBBFFFF0 ^ 0x982476D0) + (v749 ^ v748 ^ 0x33EDC494);
  int v757 = v746 + v744;
  LODWORD(STACK[0x6A0]) = 655311101;
  LODWORD(STACK[0x698]) = 0;
  unsigned int v758 = (char *)*(&off_100520A90 + v732 - 2214) - 12;
  unsigned int v759 = *(_DWORD *)&v758[4
                        * (7
                         * (((((v746 + 2048111920) & 0x911DF ^ 0x911DF) + ((v746 + 2048111920) & 0x911DF)) & 0x10006Fu)
                          + 31)
                         % 0xC0)] ^ 0xF8BCE539;
  unsigned int v760 = v759 - ((2 * v759 + 1550027442) & 0x592C24B6) - 624437324;
  unsigned int v761 = ((v760 ^ 0x2C96125B) + (v760 ^ 0xD1A08C81 ^ (v760 >> 4)) + 1) ^ (((v760 >> 4) ^ 0xFD369EDA) + 1);
  unsigned int v762 = ((v760 >> 4) ^ 0xC2DDC4A1 ^ (v761 - ((2 * v761) & 0x80294B08) - 1072388732)) + (v760 ^ 0x2C96125B);
  unsigned int v763 = v757 - 1072407496 + (v760 ^ 0xF08BE10A ^ ((v762 >> 1) + 748032603 - (v762 & 0x592C24B6)));
  LODWORD(STACK[0x5D4]) = v763;
  int v764 = *((_DWORD *)v758 + 151);
  unsigned int v765 = ((8 * v764) ^ 0xAD019180) - 22682256;
  int v766 = (v765 + (v764 ^ 0x2A5FCDCF ^ v765) + 1) ^ ((v764 ^ 0x2A5FCDCF) + 1);
  unsigned int v767 = (v764 ^ 0x9CC77229 ^ (v766 - ((2 * v766) & 0x92CE8032) + 1231503385)) + v765;
  unsigned int v768 = LODWORD(STACK[0x6D0]) - v726;
  int v769 = v742 - v508;
  LODWORD(STACK[0x618]) = v742 - v508;
  int v770 = STACK[0x6E0];
  LODWORD(STACK[0x620]) = v751 + 1;
  int v771 = v768 - v508 + LODWORD(STACK[0x680]) + v745 + (LODWORD(STACK[0x8E4]) ^ 0xF984FD22) + (v767 ^ 0xA65ACDE9);
  HIDWORD(v598) = v770 ^ 0xE90;
  LODWORD(v598) = v770 ^ 0xC2B1C000;
  LODWORD(STACK[0x5E4]) = v598 >> 13;
  unsigned int v772 = v756 + v750;
  LODWORD(v508) = v756 - 2111832056;
  LODWORD(STACK[0x610]) = v756 - 2111832056;
  unsigned int v773 = v749 ^ 0xF1C1D3AC;
  unsigned int v774 = v751 + 1 - v772 + 220789414 - ((2 * (v751 + 1 - v772 + 220789414) + 1340306940) & 0xF062D3A2) + 539174095;
  int v775 = v508 - (v749 ^ 0xF1C1D3AC) + (v774 & 0x72FE50BF ^ 0xFD31EFD1) + (v774 & 0x72FE50BF ^ 0x8FCFBF6E);
  LODWORD(STACK[0x5F0]) = v755;
  int v776 = v755 + v769;
  unsigned int v777 = v754 - v776 - 728520543 - ((2 * (v754 - v776 - 728520543) - 1006780902) & 0xD35C5BF0);
  unsigned int v778 = ((2 * v753) & 0xFFEFFF6E ^ 0xE383A748) + (v753 ^ 0x8E362C1B);
  LODWORD(STACK[0x6D0]) = v772 + 2002200190;
  unsigned int v779 = ((2 * ((v772 + 2002200190) ^ (234233500 - (v749 ^ 0xF1C1D3AC)))) & 0xD6DFEEDE)
       + ((v772 + 2002200190) ^ (234233500 - (v749 ^ 0xF1C1D3AC)) ^ 0x6B6FF76F);
  int v780 = v774 ^ (v773 - 234233500);
  LODWORD(STACK[0x670]) = v780;
  int v781 = v773 - v779 + (v780 ^ 0x724CFF4B);
  LODWORD(STACK[0x600]) = v775 + 2;
  unsigned int v782 = v775 + 2 - v772;
  LODWORD(STACK[0x6C8]) = v782;
  unsigned int v783 = v781 + 1190698318 + v782 + 1570876322 - ((2 * (v781 + 1190698318 + v782)) & 0xBB435744);
  v779 -= 1802499951;
  unsigned int v784 = v779 + (v774 ^ (v773 - 234233500) ^ 0x8DB300B4);
  int v785 = v783 ^ v784;
  unsigned int v786 = v783;
  int v787 = v779 + (v783 ^ v784 ^ 0x5DA1ABA2) + ((2 * (v783 ^ v784)) ^ 0x44BCA8BB) + 1;
  unsigned int v788 = v787 + 2133238863 - ((2 * v787) & 0xFE4D489E);
  int v789 = STACK[0x6F0];
  int v790 = v788 ^ (LODWORD(STACK[0x710]) + 2133238863 - 2 * (STACK[0x6F0] & 0x20 ^ STACK[0x710] & 0x7F26A46F));
  unsigned int v791 = (v790 - ((2 * v790) & 0xDB219D80) - 309276992) ^ v785;
  int v792 = STACK[0x6D8];
  unsigned int v793 = (v791 ^ 0x2F065BEE)
       + (LODWORD(STACK[0x6D8]) ^ 0x60C8C173 ^ ((v791 ^ 0xB0316562)
                                              - 1028534640
                                              - ((2 * (v791 ^ 0xB0316562)) & 0x85639D20)));
  unsigned int v794 = v777 - 877851387;
  unsigned int v795 = (v777 - 877851387) ^ (v778 - ((2 * (v778 + 1913774509)) & 0xD35C5BF0) - 608170075);
  LODWORD(STACK[0x664]) = v795;
  int v796 = v776 - ((2 * v776 + 463873866) & 0x7C203AF4) + 1273180447;
  LODWORD(STACK[0x66C]) = v796;
  LODWORD(STACK[0x5DC]) = v755 - v778;
  LODWORD(STACK[0x6F0]) = v755 - v778 - v776 + 1664911668;
  int v797 = v796 ^ (-872530995 - v778 - ((467418278 - 2 * v778) & 0x7C203AF4));
  LODWORD(STACK[0x668]) = v795 ^ 0x75826965;
  LODWORD(v758) = (v795 ^ 0x75826965) + v797;
  unsigned int v798 = v755 - v776 - 716281119 - v758;
  LODWORD(STACK[0x67C]) = v798 ^ v758;
  unsigned int v799 = ((2 * (v797 - (v798 ^ v758))) & 0xFF974F5E) + ((v797 - (v798 ^ v758)) ^ 0x7FCBA7AF);
  unsigned int v800 = (v788 ^ 0x80D95BB0) - v773;
  LODWORD(STACK[0x660]) = v799;
  LODWORD(STACK[0x6E0]) = v786;
  unsigned int v801 = ((2 * ((v786 ^ 0x9F95AF51) + 558097747)) & 0xFADDDF66) + (((v786 ^ 0x9F95AF51) + 558097747) ^ 0xFD6EEFB3);
  LODWORD(STACK[0x5D8]) = v801;
  unsigned int v802 = v799 + v778;
  unsigned int v803 = v802
       - 187220980
       + v801
       + ((2144053167 - v799 + (v792 ^ 0xC2B1CE90 ^ (v799 - 2144053167))) ^ ((v792 ^ 0xC2B1CE90 ^ v798 ^ v758)
                                                                           - (v798 ^ v758)) ^ (v793 + 1))
       + v763
       + 3647;
  unsigned int v804 = -1918741487 - (v788 & 0x10402 ^ 0x8CE981B0 | v788 & 0x10402 ^ 0x402);
  unsigned int v805 = ((2 * v804) & 0x32BCDE) + (v804 ^ 0xF71F7EEF);
  unsigned int v806 = (v798 ^ 0x3D733553) - v802;
  int v807 = (v805 + 148930833 + (v798 ^ 0x3D733553 ^ (v805 + 148930833)) + 1) ^ ((v798 ^ 0x3D733553) + 1);
  unsigned int v808 = (v798 ^ 0xDC60272D ^ (v807 - ((2 * v807) & 0x3DD9DB02) + 518843777)) + v805;
  LODWORD(v758) = v803 - ((2 * v803) & 0x8B8C68DA) - 976866195;
  LODWORD(STACK[0x65C]) = v806 + 230278659;
  LODWORD(STACK[0x5C8]) = v808;
  int v809 = ((v808 + 148930833) ^ (v806 + 230278659)) - ((2 * ((v808 + 148930833) ^ (v806 + 230278659))) & 0x13817158);
  unsigned int v810 = 7 * ((v758 >> 24) & 0xF ^ 5) + 3640;
  LOWORD(v805) = v810 - 960 * ((unsigned __int16)((2185 * v810) >> 16) >> 5);
  unsigned int v811 = v800 + 234233501;
  int v812 = (v786 ^ 0x60D29EF1) + v800 + 234233501;
  LODWORD(STACK[0x5D0]) = v771 + 507953994;
  unsigned int v813 = (v789 ^ 0xE41B402D) + v771 + 507953994 + v811 - v808 - 1092470969;
  unsigned int v814 = v813 - 397025475 - ((2 * v813) & 0xD0ABBE7A);
  unsigned int v815 = 7 * ((v758 >> 20) & 0xF ^ 0xC) + 3640;
  unsigned int v816 = 7 * ((v758 >> 16) & 0xF ^ 6) + 3640;
  unint64_t v817 = STACK[0x718];
  int v818 = (((*(unsigned __int8 *)(STACK[0x718] + (unsigned __int16)v805) ^ 0x13) << 8) ^ ((*(unsigned __int8 *)(STACK[0x718] + (unsigned __int16)(7 * ((v758 >> 28) ^ 0xC) + 3640 - 960 * ((unsigned __int16)((2185 * (7 * ((v758 >> 28) ^ 0xC) + 3640)) >> 16) >> 5))) ^ 3) << 12) | *(unsigned __int8 *)(STACK[0x718] + (unsigned __int16)(v816 - 960 * ((unsigned __int16)((2185 * v816) >> 16) >> 5))) ^ 0x13) ^ (16 * (*(unsigned __int8 *)(STACK[0x718] + (unsigned __int16)(v815 - 960 * ((unsigned __int16)((2185 * v815) >> 16) >> 5))) ^ 0x13));
  int v819 = 7 * (((unsigned __int16)v758 >> 12) ^ 3) + 3640;
  unsigned int v820 = 7 * ((v758 >> 8) & 0xF ^ 4) + 3640;
  LODWORD(STACK[0x680]) = v758;
  int v821 = 7 * ((v758 >> 4) ^ 6) + 3640;
  unsigned int v822 = (v818 << 16) - 1287377211 - ((v818 << 17) & 0x66880000);
  unsigned int v823 = ((v822 ^ 0xB3442EC5)
        + ((*(unsigned __int8 *)(v817 + (unsigned __int16)(v820 - 960 * ((unsigned __int16)((2185 * v820) >> 16) >> 5))) ^ 0x13) << 8)) ^ ((*(unsigned __int8 *)(v817 + (unsigned __int16)(v819 - 960 * ((unsigned __int16)((2185 * v819) >> 16) >> 5))) ^ 0x13) << 12);
  int v824 = *(unsigned __int8 *)(v817
                            + (unsigned __int16)(7 * (v758 & 0xF ^ 0xD)
                                               + 3640
                                               - 960
                                               * ((unsigned __int16)((2185
                                                                    * (7 * (v758 & 0xF ^ 0xDu) + 3640)) >> 16) >> 5))) ^ 0x13;
  unsigned int v825 = (v823 | v824) ^ (16
                        * (*(unsigned __int8 *)(v817
                                              + (unsigned __int16)(v821
                                                                 - 960
                                                                 * ((unsigned __int16)((2185 * v821) >> 16) >> 5))) ^ 0x13));
  int v826 = 7 * (HIBYTE(v814) & 0xF ^ 8) + 3640;
  LOBYTE(v792) = (STACK[0x6EC] & 0x5C ^ 0x1C) + (STACK[0x6EC] & 0x5C ^ 0x40);
  LODWORD(STACK[0x710]) = v809 + 163625132;
  unsigned int v827 = (v814 ^ 0xE855DF3D) >> (v792 + ((v809 - 84) & 0xB4 ^ 0xA4 | (v809 - 84) & 0xB4 ^ 0x10));
  int v828 = ((*(unsigned __int8 *)(v817
                              + (unsigned __int16)(v826
                                                 - 960 * ((unsigned __int16)((2185 * v826) >> 16) >> 5))) ^ 0x13) << 8) ^ ((*(unsigned __int8 *)(v817 + (unsigned __int16)(7 * ((v814 >> 28) ^ 0xE) + 3640 - 960 * ((unsigned __int16)((2185 * (7 * ((v814 >> 28) ^ 0xE) + 3640)) >> 16) >> 5))) ^ 0x13) << 12);
  LOWORD(v826) = 7 * (v827 >> 4)
               + 3640
               - 960 * ((unsigned __int16)((2185 * (7 * (v827 >> 4) + 3640)) >> 16) >> 5);
  int v829 = v828 | *(unsigned __int8 *)(v817
                                   + (unsigned __int16)(7 * (v827 & 0xF)
                                                      + 3640
                                                      - 960
                                                      * ((unsigned __int16)((2185 * (7 * (v827 & 0xF) + 3640)) >> 16) >> 5))) ^ 0x13;
  int v830 = 7 * (((unsigned __int16)(v814 & 0xF000) >> 12) ^ 0xD) + 3640;
  int v831 = 7 * (~(v814 >> 8) & 0xF) + 3640;
  int v832 = (v829 << 8) ^ ((*(unsigned __int8 *)(v817 + (unsigned __int16)v826) ^ 0x13) << 12);
  int v833 = 7 * ((v814 >> 4) ^ 3) + 3640;
  int v834 = v832 | *(unsigned __int8 *)(v817
                                   + (unsigned __int16)(v831
                                                      - 960
                                                      * ((unsigned __int16)((2185 * v831) >> 16) >> 5))) ^ 0x13;
  unsigned int v835 = (v834 << 8) + 1515859069 - ((v834 << 9) & 0xB4B45800);
  unsigned int v836 = v835 ^ ((*(unsigned __int8 *)(v817
                                     + (unsigned __int16)(v830
                                                        - 960
                                                        * ((unsigned __int16)((2185 * v830) >> 16) >> 5))) ^ 0x13) << 12);
  int v837 = *(unsigned __int8 *)(v817
                            + (unsigned __int16)(7 * (v814 & 0xF ^ 0xD)
                                               + 3640
                                               - 960
                                               * ((unsigned __int16)((2185 * (7 * (v814 & 0xF ^ 0xD) + 3640)) >> 16) >> 5))) ^ 0x13;
  unsigned int v838 = (v836 ^ 0x5A5A2C7D | v837) ^ (16
                                     * (*(unsigned __int8 *)(v817
                                                           + (unsigned __int16)(v833
                                                                              - 960
                                                                              * ((unsigned __int16)((2185 * v833) >> 16) >> 5))) ^ 0x13));
  int v839 = v824 & 0xF;
  LODWORD(STACK[0x648]) = v839;
  unsigned int v840 = 7 * (v839 & 0xFFFFFF0F | (16 * (v837 & 0xF)));
  unsigned int v841 = v840 - 960;
  if (v840 < 0x3C0) {
    unsigned int v841 = v840;
  }
  int v842 = *(unsigned __int8 *)(v817 + (unsigned __int16)(v840 + 3983) % 0x3C0u);
  int v843 = LODWORD(STACK[0x5B0]) ^ 0x13;
  LODWORD(STACK[0x5C4]) = v843;
  int v844 = v842 ^ v843;
  LODWORD(STACK[0x640]) = 7 * v844;
  LODWORD(STACK[0x63C]) = 244671 * v844;
  unsigned int v845 = *(unsigned __int8 *)(v817
                            + (unsigned __int16)(7 * v844
                                               - 960 * ((unsigned __int16)((244671 * v844) >> 16) >> 9)));
  LODWORD(STACK[0x638]) = v825;
  int v846 = (v825 >> 4) - ((v825 >> 3) & 0x13953E9A);
  int v847 = 7
       * ((((v845 >> 4) ^ 1) - 2 * (((v845 >> 4) ^ 1) & 7 ^ (v845 >> 4) & 4) + 19) ^ *(unsigned __int8 *)(v817 + v841))
       + 3983;
  __int16 v848 = ((24754 - v846) & 0xD ^ 0x33D) + ((24754 - v846) & 0xD);
  int v849 = ((_BYTE)v846 + 93) & 0xF ^ 0xD;
  LODWORD(STACK[0x644]) = v849;
  int v850 = v838 & 0xF0 | v849;
  int v851 = *(unsigned __int8 *)(v817 + (unsigned __int16)(7 * (v850 + (v848 & 0x23B))) % 0x3C0u) ^ (16
                                                                                                * (*(unsigned __int8 *)(v817 + (unsigned __int16)(v847 - 960 * ((unsigned __int16)((8739 * v847) >> 16) >> 7))) ^ 0x13));
  unsigned int v852 = 7 * v850;
  unsigned int v853 = 7 * v850 - 960;
  if (v852 < 0x3C0) {
    unsigned int v853 = v852;
  }
  int v854 = v812 + 1;
  int v855 = v854 - ((2 * v854) & 0x6A427854) + 891370538;
  char v856 = (v854 - ((2 * v854) & 0x54) + 42) ^ v784;
  LODWORD(STACK[0x650]) = v855 ^ v784;
  int v857 = v851 ^ 0x13;
  LODWORD(STACK[0x634]) = 7 * v857;
  unsigned int v858 = (*(unsigned __int8 *)(v817
                             + (unsigned __int16)(7 * v857
                                                - 960 * ((unsigned __int16)((244671 * v857) >> 16) >> 9))) ^ 0x13u) >> ((v856 ^ 0x3C) + ((v856 ^ 0x7B) & 0xE5 ^ 0xBA) + ((v856 ^ 0x7B) & 0x1A ^ 0x18) - 21);
  int v859 = 7 * ((v858 - ((2 * v858) & 0x26) + 19) ^ *(unsigned __int8 *)(v817 + v853)) + 3983;
  unsigned int v860 = 7 * ((v838 >> 4) & 0xF0 | (v825 >> 8) & 0xF);
  int v861 = *(unsigned __int8 *)(v817 + (unsigned __int16)(v860 + 3983) % 0x3C0u) ^ (16
                                                                                * (*(unsigned __int8 *)(v817 + (unsigned __int16)(v859 - 960 * ((unsigned __int16)((8739 * v859) >> 16) >> 7))) ^ 0x13));
  if (v860 >= 0x3C0) {
    v860 -= 960;
  }
  int v862 = v861 ^ 0x13;
  LODWORD(STACK[0x624]) = 7 * v862;
  int v863 = *(unsigned __int8 *)(v817
                            + (unsigned __int16)(7 * v862
                                               - 960 * ((unsigned __int16)((244671 * v862) >> 16) >> 9))) >> 4;
  int v864 = 7
       * (((v863 ^ 1) - 2 * ((v863 ^ 1) & 0xFB ^ v863 & 8) + 19) ^ *(unsigned __int8 *)(v817 + v860))
       + 3983;
  LODWORD(STACK[0x62C]) = v823;
  unsigned int v865 = 7 * (((v836 >> 8) & 0xF0 | ((unsigned __int16)v823 >> 12)) ^ 0x20);
  int v866 = *(unsigned __int8 *)(v817
                            + (unsigned __int16)(7 * (((v836 >> 8) & 0xF0 | ((unsigned __int16)v823 >> 12)) ^ 0x20)
                                               + 3983)
                            % 0x3C0u) ^ (16
                                       * (*(unsigned __int8 *)(v817
                                                             + (unsigned __int16)(v864
                                                                                - 960
                                                                                * ((unsigned __int16)((8739 * v864) >> 16) >> 7))) ^ 0x13));
  if (v865 >= 0x3C0) {
    v865 -= 960;
  }
  int v867 = v866 ^ 0x13;
  LODWORD(STACK[0x608]) = 7 * v867;
  LODWORD(STACK[0x604]) = 244671 * v867;
  LOBYTE(v867) = (*(unsigned char *)(v817
                           + (unsigned __int16)(7 * v867
                                              - 960 * ((unsigned __int16)((244671 * v867) >> 16) >> 9))) >> 4) ^ 1;
  int v868 = 7 * ((v867 - 2 * (v867 & 3) + 19) ^ *(unsigned __int8 *)(v817 + v865)) + 3983;
  int v869 = *(unsigned __int8 *)(v817
                            + (unsigned __int16)(7
                                               * (BYTE2(v823) & 0xF | (16
                                                                     * ((HIWORD(v836) ^ 0x1A) & ((((_BYTE)v771 + 85) & 0xF ^ 0xF)
                                                                                               + (((_BYTE)v771 + 85) & 0xF)))))
                                               + 3983)
                            % 0x3C0u) ^ (16
                                       * (*(unsigned __int8 *)(v817
                                                             + (unsigned __int16)(v868
                                                                                - 960
                                                                                * ((unsigned __int16)((8739 * v868) >> 16) >> 7))) ^ 0x13)) ^ 0x13;
  LODWORD(STACK[0x5FC]) = 7 * v869;
  int v870 = (*(unsigned __int8 *)(v817
                             + (unsigned __int16)(7 * v869
                                                - 960 * ((unsigned __int16)((244671 * v869) >> 16) >> 9))) >> 4) ^ 1;
  int v871 = 7
       * ((v870 + (~(2 * v870) | 0xF9) + 20) ^ *(unsigned __int8 *)(v817
                                                                                   + (unsigned __int16)(7 * (BYTE2(v823) & 0xF | (16 * ((HIWORD(v836) ^ 0x1A) & ((((_BYTE)v771 + 85) & 0xF ^ 0xF) + (((_BYTE)v771 + 85) & 0xF))))))
                                                                                   % 0x3C0u))
       + 3983;
  unsigned int v872 = v835;
  LODWORD(STACK[0x5C0]) = v835;
  int v873 = HIWORD(v835) & 0xF0;
  unsigned int v874 = (v818 << 16) - 1287377211 - ((v818 << 17) & 0x66880000);
  LODWORD(STACK[0x5BC]) = v822;
  unsigned int v875 = 7 * ((v873 & 0xFFFFFFF0 | (v822 >> 20) & 0xF) ^ 0x54);
  int v876 = *(unsigned __int8 *)(v817 + (unsigned __int16)(v875 + 3983) % 0x3C0u) ^ (16
                                                                                * (*(unsigned __int8 *)(v817 + (unsigned __int16)(v871 - 960 * ((unsigned __int16)((8739 * v871) >> 16) >> 7))) ^ 0x13));
  if (v875 >= 0x3C0) {
    v875 -= 960;
  }
  int v877 = STACK[0x6A0] & 0x362B9D;
  int v878 = v876 ^ 0x13;
  LODWORD(STACK[0x5EC]) = 7 * v878;
  LODWORD(STACK[0x5E8]) = 244671 * v878;
  int v879 = *(unsigned __int8 *)(v817
                            + (unsigned __int16)(7 * v878
                                               - 960 * ((unsigned __int16)((244671 * v878) >> 16) >> 9))) >> 4;
  LODWORD(STACK[0x5E0]) = (7
                         * (((v879 ^ 1) - 2 * ((v879 ^ 1) & 7 ^ v879 & 4) + 19) ^ *(unsigned __int8 *)(v817 + v875))
                         + 3983)
                        % (((v877 ^ 0x6009D) + (v877 ^ 0x302B00) + 5167190) & 0x70EFCCu);
  HIDWORD(v881) = v770 ^ 0x31CE90;
  LODWORD(v881) = v770 ^ 0xC2800000;
  int v880 = v881 >> 22;
  unsigned int v882 = v770 ^ 0xC2B1CE90;
  LODWORD(STACK[0x6A0]) = v770;
  HIDWORD(v881) = v770;
  LODWORD(v881) = v770 ^ 0xC2B1CE90;
  int v883 = (v881 >> 2) ^ LODWORD(STACK[0x5E4]) ^ v880;
  int v884 = STACK[0x630];
  unsigned int v885 = LODWORD(STACK[0x708]) ^ 0xE41B402D;
  int v886 = STACK[0x684];
  int v887 = STACK[0x6F4];
  LODWORD(STACK[0x6D8]) = STACK[0x684];
  v886 ^= 0xC2B1CE90;
  unsigned int v888 = LODWORD(STACK[0x700]) ^ 0xC2B1CE90;
  unsigned int v889 = (v887 ^ 0xE41B402D ^ v885) & v886 ^ v882 & v885 ^ v882 & (v884 ^ 0xE41B402D) ^ v888 & (v887 ^ 0xE41B402D) ^ v888 & (v884 ^ 0xE41B402D);
  LODWORD(STACK[0x590]) = v885;
  LODWORD(STACK[0x5B4]) = v884 ^ 0xE41B402D;
  LODWORD(STACK[0x598]) = v887 ^ 0xE41B402D;
  LODWORD(STACK[0x59C]) = v888;
  LODWORD(STACK[0x594]) = v882;
  unsigned int v890 = (v887 ^ 0xE41B402D) & v885 ^ v885 & (v884 ^ 0xE41B402D) ^ (v887 ^ 0xE41B402D) & (v884 ^ 0xE41B402D) ^ v882 & v886 ^ v888 & v882 ^ v888 & v886;
  unsigned int v891 = (((v772 - 1350101529) ^ v890) - ((2 * ((v772 - 1350101529) ^ v890)) & 0xF062D3A2) - 130979375) ^ v774;
  int v892 = STACK[0x6E0];
  unsigned int v893 = (LODWORD(STACK[0x6E0]) ^ 0x606A50AE)
       + (v788 ^ 0x7F26A44F)
       + v854
       - 964627434
       - ((2 * ((LODWORD(STACK[0x6E0]) ^ 0x606A50AE) + (v788 ^ 0x7F26A44F) + v854 + 1)) & 0x8D01E82A);
  LODWORD(STACK[0x5E4]) = v893;
  unsigned int v894 = v883
       - LODWORD(STACK[0x5DC])
       + LODWORD(STACK[0x610])
       + (((v794 ^ 0x9651D207) + (v889 ^ 0x69AE2DF8 ^ v794) + 1) ^ (v889 - 2 * (v889 & (v776 + 1174602510))) ^ ((v889 ^ 0xE938FD2C ^ (v891 - 382141140 - ((2 * v891) & 0xD271FA58))) - v891))
       + LODWORD(STACK[0x5D4]);
  int v895 = v855 ^ v892;
  LODWORD(STACK[0x630]) = v855 ^ v892;
  int v896 = LODWORD(STACK[0x5D8]) + 43061325;
  LODWORD(STACK[0x5D4]) = v896;
  int v897 = v855 ^ v892 ^ 0x742EBF8D;
  LODWORD(STACK[0x5DC]) = v897;
  int v898 = (v896 + v897 + 1) ^ v895;
  LODWORD(STACK[0x684]) = v898;
  LODWORD(STACK[0x5D8]) = v898 ^ 0x8BD14072;
  unsigned int v899 = v894
       + (v898 ^ 0x8BD14072)
       - 272216545
       - ((2 * (v894 + (v898 ^ 0x8BD14072) - 272216545)) & 0xD07B150E)
       + 1748863623;
  unsigned int v900 = (7 * ((v899 >> 28) ^ 6) + 3640) % ((v893 & 0x3C0 ^ 0x3C0) + (v893 & 0x3C0));
  HIDWORD(v881) = v887 ^ 1;
  LODWORD(v881) = v887 ^ 0xE41B402C;
  int v901 = v881 >> 2;
  HIDWORD(v881) = v887 ^ 0x2D;
  LODWORD(v881) = v887 ^ 0xE41B4000;
  int v902 = v881 >> 13;
  HIDWORD(v881) = v887 ^ 0x1B402D;
  LODWORD(v881) = v887 ^ 0xE4000000;
  int v903 = v902 ^ v901 ^ (v881 >> 22);
  int v904 = LODWORD(STACK[0x628]) ^ v883 ^ (LODWORD(STACK[0x620]) + 1745633487);
  unsigned int v905 = LODWORD(STACK[0x5F0])
       - 54526697
       - 2 * LODWORD(STACK[0x5F0])
       + ((((LODWORD(STACK[0x618]) + 358345286) ^ v903) - LODWORD(STACK[0x618]) - 358345286) ^ ((v903 ^ LODWORD(STACK[0x614]))
                                                                                              - LODWORD(STACK[0x614])) ^ ((v903 ^ 0x9CF8AD20 ^ (v904 - 1661424352 - ((2 * v904) & 0x39F15A40))) - v904));
  unsigned int v906 = (v905 ^ 0x6FEFAFBF) + v890 + ((2 * v905) & 0xDFDF5F7E) + LODWORD(STACK[0x600]);
  LODWORD(STACK[0x600]) = v906;
  unsigned int v907 = 7 * (((v872 >> 20) & 0xF0 | HIBYTE(v874) & 0xF) ^ 0xA3);
  int v908 = STACK[0x710];
  unsigned int v909 = LODWORD(STACK[0x710]) ^ 0xD75A945A;
  LODWORD(STACK[0x620]) = v909;
  int v910 = (LODWORD(STACK[0x5C8]) + 707028581 + v909) ^ v908;
  LODWORD(STACK[0x628]) = v910;
  unsigned int v911 = v906
       + LODWORD(STACK[0x5D0])
       + (v910 ^ 0xD75A945A)
       - ((2 * (v906 + LODWORD(STACK[0x5D0]) + (v910 ^ 0xD75A945A)) - 231875622) & 0x9DE05EAC);
  int v912 = 7 * (HIBYTE(v899) & 0xF ^ 8) + 3640;
  int v913 = 7 * ((v899 >> 20) & 0xF ^ 3) + 3640;
  int v914 = 7 * (HIWORD(v899) & 0xF ^ 0xD) + 3640;
  int v915 = ((*(unsigned __int8 *)(v817
                              + (unsigned __int16)(v912
                                                 - 960 * ((unsigned __int16)((2185 * v912) >> 16) >> 5))) ^ 0x13) << 8) ^ ((*(unsigned __int8 *)(v817 + v900) ^ 0x13) << 12) | *(unsigned __int8 *)(v817 + (unsigned __int16)(v914 - 960 * ((unsigned __int16)((2185 * v914) >> 16) >> 5))) ^ 0x13;
  int v916 = 7 * (((unsigned __int16)v899 >> 12) ^ 8) + 3640;
  LODWORD(STACK[0x610]) = v899;
  int v917 = 7 * ((v899 >> 8) & 0xF ^ 0xA) + 3640;
  int v918 = 7 * ((v899 >> 4) ^ 8) + 3640;
  int v919 = (v915 << 8) ^ (16
                      * (*(unsigned __int8 *)(v817
                                            + (unsigned __int16)(v916
                                                               - 960
                                                               * ((unsigned __int16)((2185 * v916) >> 16) >> 5))) ^ 0x13)) ^ (*(unsigned __int8 *)(v817 + (unsigned __int16)(v917 - 960 * ((unsigned __int16)((2185 * v917) >> 16) >> 5))) ^ 0x13 | ((*(unsigned __int8 *)(v817 + (unsigned __int16)(v913 - 960 * ((unsigned __int16)((2185 * v913) >> 16) >> 5))) ^ 0x13) << 12));
  unsigned int v920 = (v919 << 8) + 1236191412 - ((v919 << 9) & 0x935D9000);
  v911 -= 939057853;
  int v921 = 7 * (HIBYTE(v911) & 0xF ^ 0xE) + 3640;
  LOWORD(v913) = v921 - 960 * ((unsigned __int16)((2185 * v921) >> 16) >> 5);
  int v922 = *(unsigned __int8 *)(v817
                            + (unsigned __int16)(7 * (v899 & 0xF ^ 7)
                                               + 3640
                                               - 960
                                               * ((unsigned __int16)((2185 * (7 * (v899 & 0xF ^ 7) + 3640)) >> 16) >> 5))) ^ 0x13;
  unsigned int v923 = (v920 ^ 0x49AEC8B4 | v922) ^ (16
                                     * (*(unsigned __int8 *)(v817
                                                           + (unsigned __int16)(v918
                                                                              - 960
                                                                              * ((unsigned __int16)((2185 * v918) >> 16) >> 5))) ^ 0x13));
  int v924 = 7 * (~(v911 >> 20) & 0xF) + 3640;
  int v925 = ((((*(unsigned __int8 *)(v817 + (unsigned __int16)v913) ^ 0x13) << 8) ^ ((*(unsigned __int8 *)(v817 + (unsigned __int16)(7 * ((v911 >> 28) ^ 4) + 3640 - 960 * ((unsigned __int16)((2185 * (7 * ((v911 >> 28) ^ 4) + 3640)) >> 16) >> 5))) ^ 0x13) << 12) | *(unsigned __int8 *)(v817 + (unsigned __int16)(7 * (BYTE2(v911) & 0xF) + 3640 - 960 * ((unsigned __int16)((2185 * (7 * (HIWORD(v911) & 0xF) + 3640)) >> 16) >> 5))) ^ 0x13) << 8) ^ ((*(unsigned __int8 *)(v817 + (unsigned __int16)(v924 - 960 * ((unsigned __int16)((2185 * v924) >> 16) >> 5))) ^ 0x13) << 12);
  int v926 = 7 * (~(v911 >> 8) & 0xF) + 3640;
  int v927 = (((3 - ((v911 >> 12) ^ 0xFD)) ^ (v911 >> 12)) & 7 ^ 1)
       * ((((unsigned __int16)v911 >> 12) ^ 2) + 520);
  int v928 = 7 * ((v911 >> 4) ^ 5) + 3640;
  int v929 = ((v925 | *(unsigned __int8 *)(v817
                                     + (unsigned __int16)(v926
                                                        - 960
                                                        * ((unsigned __int16)((2185 * v926) >> 16) >> 5))) ^ 0x13) << 8) ^ ((*(unsigned __int8 *)(v817 + (unsigned __int16)(v927 - 960 * ((unsigned __int16)((2185 * v927) >> 16) >> 5))) ^ 0x13) << 12);
  int v930 = *(unsigned __int8 *)(v817
                            + (unsigned __int16)(7 * (v911 & 0xF ^ 6)
                                               + 3640
                                               - 960
                                               * ((unsigned __int16)((2185 * (7 * (v911 & 0xF ^ 6) + 3640)) >> 16) >> 5))) ^ 0x13;
  unsigned int v931 = (v929 | v930) ^ (16
                        * (*(unsigned __int8 *)(v817
                                              + (unsigned __int16)(v928
                                                                 - 960
                                                                 * ((unsigned __int16)((2185 * v928) >> 16) >> 5))) ^ 0x13));
  int v932 = v922 & 0xF;
  LODWORD(STACK[0x618]) = v932;
  unsigned int v933 = 7 * (v932 & 0xFFFFFF0F | (16 * (v930 & 0xF)));
  int v934 = *(unsigned __int8 *)(v817 + (unsigned __int16)(v933 + 3983) % 0x3C0u) ^ LODWORD(STACK[0x5C4]);
  if (v907 >= 0x3C0) {
    unsigned int v935 = v907 - 960;
  }
  else {
    unsigned int v935 = v907;
  }
  LODWORD(STACK[0x5C4]) = v935;
  unsigned int v936 = v933 - 960;
  if (v933 < 0x3C0) {
    unsigned int v936 = v933;
  }
  LODWORD(STACK[0x5F0]) = 7 * v934;
  int v937 = *(unsigned __int8 *)(v817
                            + (unsigned __int16)(7 * v934
                                               - 960 * ((unsigned __int16)((244671 * v934) >> 16) >> 9))) >> 4;
  int v938 = 7 * (((v937 ^ 1) - 2 * ((v937 ^ 1) & 7 ^ v937 & 4) + 19) ^ *(unsigned __int8 *)(v817 + v936))
       + 3983;
  unsigned int v939 = v938 - 960 * ((8739 * v938) >> 23);
  LODWORD(STACK[0x614]) = v923;
  unsigned int v940 = 7 * (v931 & 0xF0 | (v923 >> 4));
  if (v940 >= 0x3C0) {
    v940 -= 960;
  }
  int v941 = *(unsigned __int8 *)(v817 + (unsigned __int16)(7 * (v931 & 0xF0 | (v923 >> 4)) + 3983)
                                   % 0x3C0u) ^ (16 * (*(unsigned __int8 *)(v817 + (unsigned __int16)v939) ^ 0x13)) ^ 0x13;
  char v942 = *(unsigned char *)(v817 + v940);
  LODWORD(STACK[0x5D0]) = 7 * v941;
  int v943 = (*(unsigned __int8 *)(v817
                             + (unsigned __int16)(7 * v941
                                                - 960 * ((unsigned __int16)((244671 * v941) >> 16) >> 9))) >> 4) ^ 1;
  int v944 = 7 * (v943 + (v942 ^ 0x13) - 2 * (v943 & (v942 ^ 3))) + 3983;
  int v945 = (v931 >> 4) & 0xF0 | (v923 >> 8) & 0xF;
  int v946 = v945 - 1233975135 - ((2 * v945) & 0x142);
  unsigned int v947 = ((2 * v946) & 0x72 ^ 0x42) + (v946 ^ 0xB6730A98);
  int v948 = *(unsigned __int8 *)(v817 + ((v947 & 0xB9) + (v947 & 0xB9 ^ 0xB9) + 78) * v947 % 0x3C0) ^ (16 * (*(unsigned __int8 *)(v817 + (unsigned __int16)(v944 - 960 * ((unsigned __int16)((8739 * v944) >> 16) >> 7))) ^ 0x13)) ^ 0x13;
  LOBYTE(v9memset((void *)(STACK[0x7D8] + 8), 91, 48) = (*(unsigned char *)(v817
                           + (unsigned __int16)(7 * v948
                                              - 960 * ((unsigned __int16)((244671 * v948) >> 16) >> 9))) >> 4) ^ 1;
  int v949 = 7
       * ((v948 - 2 * (v948 & 3) + 19) ^ *(unsigned __int8 *)(v817
                                                                             + (unsigned __int16)(7 * (v946 ^ 0x8A1))
                                                                             % 0x3C0u))
       + 3023;
  LOBYTE(v949) = (v949 - -64 * ((8739 * v949) >> 23)) & 4;
  int v950 = (HIBYTE(v920) & 0xF ^ 0x3D0AC805) - ((2 * (HIBYTE(v920) & 0xF ^ 0x3D0AC805)) & 0x68011014) + 1956690394;
  unsigned int v951 = (((v931 >> 8 >> ((v949 ^ 4) + v949)) - ((2 * (v931 >> 8 >> ((v949 ^ 4) + v949))) & 0x539DC0) + 254398176) >> 8) & 0xF0 ^ 0xC0 | v950 ^ 0x49AA71D6;
  int v952 = v951
       + 1129764086
       - 2 * (v951 & 0x4356D4FE ^ ((HIBYTE(v920) & 0xF ^ 5) - ((2 * (HIBYTE(v920) & 0xF ^ 5)) & 0x14) - 38) & 8);
  int v953 = 194503067 - (v952 ^ 0x4356D4F6) + 8 * (v952 ^ 0x4356D4F6) - ((14 * (v952 ^ 0x4356D4F6)) & 0x172FC336);
  LODWORD(STACK[0x5B8]) = (v953 ^ 0xB97E19Bu)
                        % (((HIBYTE(v920) & 8 ^ (v950 ^ 0xB6558E29) & 0x4BD9F68 ^ 8)
                          - (v953 & 0x388 ^ 0x19A9A00 | v953 & 0x388 ^ 0x188)) & (HIBYTE(v920) & 0xB ^ 9 ^ (v950 ^ 0xB6558E29) & 0xCCC4BDB));
  int v954 = STACK[0x688];
  unsigned int v955 = (LODWORD(STACK[0x688]) ^ 0x75826965 ^ (LODWORD(STACK[0x664])
                                              + 1515303011
                                              - ((2 * LODWORD(STACK[0x664])) & 0xB4A360C6)))
       - LODWORD(STACK[0x668]);
  LODWORD(STACK[0x6C8]) += LODWORD(STACK[0x690]) - 1458789735;
  unsigned int v956 = LODWORD(STACK[0x68C]) ^ LODWORD(STACK[0x6D0]) ^ 0x81B61974 ^ LODWORD(STACK[0x670]);
  unsigned int v957 = (v955 ^ ((LODWORD(STACK[0x66C]) ^ 0xC1EFE285) + (v954 ^ 0x6441AD19 ^ LODWORD(STACK[0x66C])) + 1) ^ (((v956 + 1515303011 - ((2 * v956) & 0xB4A360C6)) ^ v954) - v956))
       - LODWORD(STACK[0x6F0]);
  LODWORD(STACK[0x6D0]) = (v957 ^ 0xBDFFF5FD) + 1944026784 + ((2 * v957) & 0x7BFFEBFA);
  LODWORD(STACK[0x6F0]) = v884;
  return (*(uint64_t (**)(void))(STACK[0x6F8]
                              + 8
                              * (LODWORD(STACK[0x6C4]) ^ (32
                                                        * (((LODWORD(STACK[0x698])
                                                           + 655311101
                                                           - ((2 * LODWORD(STACK[0x698]) + 2) & 0x4E1E81FA)
                                                           + 1) ^ 0x270F40C0u) > 0x3F)))))();
}

uint64_t sub_10016CD1C()
{
  unint64_t v3 = (v1 - 1065330539);
  STACK[0xA08] = v3;
  unint64_t v4 = STACK[0x6D8];
  STACK[0xA10] = STACK[0x6D8];
  LODWORD(v3) = v3 + 0x187BED88007359E2 - v4 > (unint64_t)((v0 - 720) | 0x61u) - 110;
  return (*(uint64_t (**)(void))(v2 + 8 * (((v3 << 6) | (v3 << 8)) ^ v0)))();
}

void sub_10016CD80(uint64_t a1, uint64_t a2)
{
  __asm { BRAA            X11, X17 }
}

uint64_t sub_10016CDCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char *a13, uint64_t a14, int a15, char a16, uint64_t a17, unint64_t *a18, char *a19, char *a20,uint64_t a21,unint64_t *a22)
{
  a20 = a13;
  a22 = &STACK[0x72B1F83D1B5D1C8D];
  a18 = &STACK[0x5C6E4E9DBA24538D];
  LODWORD(a19) = (v22 + 1750) ^ (1401278017 * (&a18 ^ 0x42376E7));
  (*(void (**)(unint64_t **))(v24 + 8 * (v22 ^ 0x15D9u)))(&a18);
  HIDWORD(a18) = (v22 + 275) ^ ((((&a18 | 0xFDC50535)
                                - &a18
                                + (&a18 & 0x23AFAC8)) ^ 0x4CCC83FB)
                              * v23);
  a19 = a13;
  a20 = &a16;
  (*(void (**)(unint64_t **))(v24 + 8 * (v22 ^ 0x15DBu)))(&a18);
  a19 = a13;
  LODWORD(a20) = v22
               - 476588053 * ((((2 * &a18) | 0xA1B0DB6C) - &a18 - 1356361142) ^ 0xED2569F5)
               + 618;
  uint64_t v25 = (*(uint64_t (**)(unint64_t **))(v24 + 8 * (v22 + 2666)))(&a18);
  return (*(uint64_t (**)(uint64_t))(v24
                                            + 8
                                            * (((a18 == 847203058)
                                              * ((((v22 - 1773) | 0x284) + 2131) ^ (v22 - 659))) ^ v22)))(v25);
}

uint64_t sub_10016CF44()
{
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * (((v3 + v2 >= ((271 * (v1 ^ 0xAE5)) ^ 0x777u)) * (((v1 - 1910) | 0x401) - 1431)) ^ v1)))();
}

uint64_t sub_10016CF90@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, uint64_t a13, unsigned int a14)
{
  a14 = v14
      - 476588053 * ((((2 * &a12) | 0x4EBA3598) - &a12 - 660413132) ^ 0x9AA01E8F)
      + 2262;
  a13 = a1;
  uint64_t v17 = (*(uint64_t (**)(int *))(v16 + 8 * (v14 ^ 0x13D6)))(&a12);
  return (*(uint64_t (**)(uint64_t))(v16
                                            + 8
                                            * ((2738 * (a12 == ((v14 + 345214324) & 0xEB6C753F ^ (v15 + 981)))) ^ v14)))(v17);
}

uint64_t sub_10016D030()
{
  unsigned int v6 = *(_DWORD *)(v3 + 4 * (v2 - 1));
  *(_DWORD *)(v3 + 4 * v2) = ((1566083941 * (v6 ^ (v6 >> 30))) ^ *(_DWORD *)(v3 + 4 * v2)) - v2;
  int v7 = (v0 + 1700744662) ^ v1;
  uint64_t v8 = v5 - 152;
  *(void *)(v8 + 8) = v2 + 1 + v1;
  *(_DWORD *)(v5 - 124) = v7;
  *(_DWORD *)(v5 - 120) = v1 + 1;
  *(_DWORD *)(v5 - 128) = v7 ^ 0x124;
  *(void *)(v8 + 40) = v1 ^ 0x26F;
  *(_DWORD *)(v5 - 152) = v1 + v0 - 849013333;
  *(_DWORD *)(v5 - 132) = ((v0 + 1700744662) ^ 0x1DA) - v1;
  uint64_t v9 = (*(uint64_t (**)(uint64_t))(v4 + 8 * (v0 + 4311)))(v5 - 152);
  return (*(uint64_t (**)(uint64_t))(v4 + 8 * *(int *)(v5 - 136)))(v9);
}

uint64_t sub_10016D0E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, int a16)
{
  return (*(uint64_t (**)(void))(v17 + 8 * ((965 * (a16 != 0)) ^ v16)))();
}

uint64_t sub_10016D148(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 4);
  *(void *)(a1 + 32) = *(void *)(a2 + 8);
  return 0;
}

uint64_t sub_10016D160@<X0>(int a1@<W8>)
{
  uint64_t v3 = *(uint64_t (**)(uint64_t))(v2 + 8 * (a1 ^ 0x2B6));
  return v3(v1);
}

uint64_t sub_10016D194(uint64_t result)
{
  unint64_t v1 = 31090337 * ((-2 - ((~result | 0x4C7FCC96781261BELL) + (result | 0xB380336987ED9E41))) ^ 0xEBDDE768BF9301F7);
  uint64_t v3 = *(void *)(result + 16);
  uint64_t v2 = *(void *)(result + 24);
  unint64_t v4 = v2 - v1;
  BOOL v5 = v3 != v2;
  BOOL v6 = v3 - v1 >= v4;
  if ((*(_DWORD *)result - v1)) {
    BOOL v7 = v6;
  }
  else {
    BOOL v7 = v5;
  }
  BOOL v8 = !v7;
  uint64_t v9 = 40;
  if (!v8) {
    uint64_t v9 = 4;
  }
  *(_DWORD *)(result + 36) = (*(_DWORD *)(result + v9) + v1) ^ (*(_DWORD *)(result + 8) - v1);
  return result;
}

uint64_t sub_10016D240()
{
  unsigned int v3 = *(_DWORD *)(v0 - 0x69166E42B3299563)
     - ((v2 - 421 + 2 * *(_DWORD *)(v0 - 0x69166E42B3299563) - 1381913074) & 0xC44670B4)
     - 1191963258;
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((210
                                * (((2 * v3) & 0xAF7E67EE ^ 0x844660A4) + (v3 ^ 0xB59C0BAD) - 1144004722 == 328143749)) ^ (v2 + 345))))();
}

uint64_t sub_10016D2E8(uint64_t a1, uint64_t a2, int a3, uint64_t a4, int a5, int a6)
{
  *(void *)(a2 + (v6 + a6)) = *(void *)(v7 + (v6 + a6));
  return (*(uint64_t (**)(void))(v9 + 8 * (((v8 == a6) * a5) ^ a3)))();
}

uint64_t sub_10016D314(_DWORD *a1)
{
  unsigned int v1 = *a1 + 1697562443 * ((-2 - ((a1 | 0xD3B995B7) + (~a1 | 0x2C466A48))) ^ 0xFBD652CC);
  uint64_t v3 = *(void *)*(&off_100520A90 + (int)(v1 - 1805053831));
  unsigned int v4 = v1
     - 1805053831
     - 1437274309 * ((2 * (&v3 & 0x69D46630) - &v3 - 1775527479) ^ 0xB425E4FC)
     + 1458;
  return (*((uint64_t (**)(uint64_t *))*(&off_100520A90 + (int)(v1 ^ 0x6B96EFB1)) + (int)(v1 ^ 0x6B96FDCF) - 1))(&v3);
}

void sub_10016D42C(uint64_t a1, uint64_t a2)
{
  __asm { BRAA            X8, X17 }
}

uint64_t sub_10016D498(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15, unsigned int a16, uint64_t a17, uint64_t a18, uint64_t a19, char a20,uint64_t a21,unsigned int a22)
{
  int v25 = (a7 - 2431) ^ 0xDF;
  *int v22 = (a16 >> ((a7 - 127) ^ 0xBB)) ^ 0x6F62A58;
  a22 = v25 + ((((2 * &a20) | 0x89AABC80) - &a20 - 1154833984) ^ 0x527B0804) * v24 + 3399;
  a21 = a18;
  (*(void (**)(char *))(v23 + 8 * (v25 + 3567)))(&a20);
  a21 = a17;
  a22 = v25
      - 12
      + (((&a20 | 0xEAB5AE91) - &a20 + (&a20 & 0x154A5168)) ^ 0xFC1BF8D5)
      * v24
      + 3411;
  uint64_t v26 = (*(uint64_t (**)(char *))(v23 + 8 * (v25 + 3567)))(&a20);
  return sub_10016D57C(v26);
}

uint64_t sub_10016D57C()
{
  return (v0 - 847203058);
}

uint64_t sub_10016D5C4@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,int a43)
{
  unint64_t v48 = v45 + 10;
  int v49 = LOWORD(STACK[0x968]);
  if (v49 == 11735) {
    goto LABEL_4;
  }
  if (v49 == 60027)
  {
    unint64_t v51 = STACK[0x730];
    STACK[0x678] = v48;
    LODWORD(STACK[0x7E0]) = a1;
    STACK[0x5D8] = v51 + v44 - 0x79503A3CC44F2EB9;
    int v50 = a43;
    int v43 = 847203058;
    return (*(uint64_t (**)(void))(v47
                                + 8
                                * ((((((v50 - 439420363) & 0x1A30FE56) + 306) ^ 0xFE7) * (v43 == v46)) ^ (v50 - 1598))))();
  }
  int v50 = a43;
  if (v49 == 15909)
  {
LABEL_4:
    STACK[0x678] = v48;
    LODWORD(STACK[0x7E0]) = a1;
    int v43 = 847160697;
    int v50 = a43;
  }
  return (*(uint64_t (**)(void))(v47
                              + 8
                              * ((((((v50 - 439420363) & 0x1A30FE56) + 306) ^ 0xFE7) * (v43 == v46)) ^ (v50 - 1598))))();
}

uint64_t sub_10016D698@<X0>(uint64_t a1@<X8>)
{
  *(void *)(STACK[0x618] - 0x46197683F7D189memset((void *)(STACK[0x7D8] + 8), 91, 48) = a1;
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((*(void *)(STACK[0x5D0] + 24) != 0) * ((3432 * (v1 ^ 0xE6D)) ^ 0x1A3D)) ^ (1716 * (v1 ^ 0xE6D)))))();
}

uint64_t sub_10016D6F8@<X0>(int a1@<W8>)
{
  LODWORD(STACK[0xAB4]) = v1;
  STACK[0x7F0] -= 32;
  return (*(uint64_t (**)(void))(v3 + 8 * ((2531 * (v1 == v2 + ((a1 - 4101) ^ 0x78) - 171)) ^ (a1 - 3963))))();
}

uint64_t sub_10016D73C()
{
  return sub_10016D764();
}

uint64_t sub_10016D764@<X0>(uint64_t a1@<X0>, _DWORD *a2@<X8>, void *a3)
{
  *a3 = a1;
  *a2 = v3;
  return sub_100106250();
}

uint64_t sub_10016D77C(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 24) - 1761959447 * ((a1 + 1955828336 - 2 * (a1 & 0x74939270)) ^ 0xD53453B4);
  uint64_t v3 = *(void *)(a1 + 8);
  uint64_t v4 = *(void *)a1;
  unsigned int v5 = 673918253 * ((((2 * &v7) | 0xA84E200) - &v7 + 2059243264) ^ 0x1F0A6AA8);
  uint64_t v12 = *(void *)(a1 + 16);
  unsigned int v10 = v2 - 166304263 + v5;
  unsigned int v11 = v5 + 373016820;
  uint64_t v8 = v4;
  uint64_t v9 = v3;
  uint64_t result = (*((uint64_t (**)(int *))*(&off_100520A90 + (v2 ^ 0x9E9AA53)) + v2 - 166303722))(&v7);
  *(_DWORD *)(a1 + 28) = v7;
  return result;
}

uint64_t sub_10016D8A8()
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((973 * (v1 == v2 + v0 - 2281 - 225)) ^ (v0 - 1375))))();
}

uint64_t sub_10016D8DC(uint64_t a1, int a2)
{
  BOOL v10 = v7 - (v4 & 0xFFFFFFF8) == -8;
  uint64_t v11 = v6 + v5 + v8 - v7 + ((a2 - 332) ^ (v3 - 1246));
  *(void *)(a1 - 7 + v11) = *(void *)(v2 - 7 + v11);
  int v12 = v10;
  return (*(uint64_t (**)(void))(v9 + 8 * ((5852 * v12) ^ a2)))();
}

uint64_t sub_10016D93C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, int a14)
{
  return (*(uint64_t (**)(void))(v14 + 8 * ((4614 * (a14 == 0)) ^ v15)))();
}

void sub_10016D9A8(uint64_t a1, uint64_t a2)
{
  __asm { BRAA            X9, X17 }
}

uint64_t sub_10016DA1C@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((1167 * (a1 + 1 == v2 + 24)) ^ v1)))();
}

uint64_t sub_10016DAE0()
{
  return (*(uint64_t (**)(uint64_t))(v2 + 8 * ((((v1 ^ 0x17F7) + (v1 ^ 0x104A) - 1944) * (v0 != 63)) | v1)))(94);
}

uint64_t sub_10016DB2C@<X0>(void *a1@<X8>)
{
  *(void *)(STACK[0x618] - 0x46197683F7D18950) = a1;
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((((((((v1 - 632) | 0x82F) + 773779897) & 0xD1E10D6F ^ (*a1 == 0)) & 1) == 0)
                                * (((((v1 - 632) | 0x82F) - 509) | 0x22D) - 3615)) ^ ((v1 - 632) | 0x82F))))();
}

uint64_t sub_10016DBA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19, char a20,int a21,unsigned int a22,uint64_t a23,char *a24)
{
  a22 = (v25 + 33) ^ ((((&a21 | 0x74ABB252) - &a21 + (&a21 & 0x8B544DA8)) ^ 0xC5A2349C)
                    * v24);
  a23 = a14;
  a24 = &a20;
  uint64_t v27 = (*(uint64_t (**)(int *))(v26 + 8 * (v25 + 2391)))(&a21);
  return (*(uint64_t (**)(uint64_t))(v26
                                            + 8
                                            * (((a21 == 847203058) * ((((v25 - 2271) | 0x4F3) - 346) ^ (v25 - 1177))) ^ v25)))(v27);
}

uint64_t sub_10016DC48@<X0>(uint64_t a1@<X6>, int a2@<W8>)
{
  return (*(uint64_t (**)(void))(a1
                              + 8 * ((1745 * (v2 + a2 - 3209 + ((a2 - 1751) | 0x3A0u) - 3608 < 0x20)) ^ (a2 - 3209))))();
}

uint64_t sub_10016DC8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, int a14)
{
  return (*(uint64_t (**)(void))(v15 + 8 * (((((v14 | 0x10A6) - 1561) ^ 0xBE2) * (a14 == -557495541)) ^ (v14 | 0x10A6))))();
}

uint64_t sub_10016DCD4()
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((490 * (((v3 - v2) & 0x1F ^ 0x10) != ((v0 + 2613) ^ 0xF32))) ^ v0)))();
}

uint64_t sub_10016DD38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, unint64_t *a17, uint64_t a18, uint64_t a19, unsigned int a20,int a21,int a22)
{
  unsigned int v25 = 366490169 * ((2 * (&a17 & 0x4353CAE8) - &a17 + 1017918737) ^ 0x2A026355);
  LODWORD(a17) = (v22 ^ 0x1CFFD73D) + ((2 * v22) & 0x39FFAE7A) - 140645420 + v25;
  a18 = a11;
  LODWORD(a19) = v25 + 3254;
  (*(void (**)(unint64_t **))(v23 + 37576))(&a17);
  unsigned int v26 = 1314530549 * ((&a17 & 0x4D037DFB | ~(&a17 | 0x4D037DFB)) ^ 0x3F504CA);
  a19 = a11;
  LODWORD(a18) = v26 ^ 0x6A279D57;
  a22 = v26 ^ 0x4EA001FB;
  a20 = -62954907 - v26;
  a17 = &STACK[0x70766EB78D2F3F18];
  uint64_t v27 = (*(uint64_t (**)(unint64_t **))(v23 + 37536))(&a17);
  return (*(uint64_t (**)(uint64_t))(v23 + 8 * ((1977 * (a21 != v24)) ^ 0x3B7u)))(v27);
}

uint64_t sub_10016DEC4@<X0>(void *a1@<X3>, uint64_t a2@<X4>, int a3@<W8>)
{
  *a1 = 0;
  return (*(uint64_t (**)(void))(v4 + 8 * ((v3 + a3 + 3494) ^ (198 * (a2 != 0)))))();
}

uint64_t sub_10016DEF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18)
{
  LODWORD(STACK[0x580]) = a18;
  return (*(uint64_t (**)(void))(v19 + 8 * ((71 * (STACK[0x480] == 0)) ^ (v18 + 773))))();
}

uint64_t sub_10016DF20(uint64_t a1, uint64_t a2, char a3)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((2770
                                * ((((*(unsigned __int8 *)(a2 + 4) - 147) << (a3 + ((v4 + 61) | 0x24) - 19)) & v6)
                                 + ((*(unsigned __int8 *)(a2 + 4) - 147) ^ v5) == v5)) ^ v4)))();
}

void sub_10016DF7C()
{
}

uint64_t sub_10016E090(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * (int)((((((a5 + 622260368) ^ 0x2516F39D) - 672) ^ (a5 + 622260368) & 0xDAE90B5F)
                                     * (*(_DWORD *)(v6 - 140) == *(_DWORD *)(v6 - 152))) ^ a5)))();
}

uint64_t sub_10016E0E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unint64_t *a13, int a14, unsigned int a15)
{
  a13 = &STACK[0x75464D914B724897];
  a15 = v18 - ((((2 * &a13) | 0x56CBD362) - &a13 + 1419384399) ^ 0x6CE489F8) * v17 - 195;
  uint64_t v19 = (*(uint64_t (**)(unint64_t **))(v15 + 8 * (v18 ^ 0x1D4C)))(&a13);
  return (*(uint64_t (**)(uint64_t))(v15
                                            + 8
                                            * (((a14 == v16) * (((v18 - 3157822) & 0x7EF3781F) - 2126723383)) ^ v18)))(v19);
}